! based on code from dfadmin: purge audit file output from ERP Scheduler
!
! loadsave -w -n 100,10 -o prog/util/dfauditpurge.dl4 src/dfauditpurge.src

! include src

include "src/utilcopyright.inc"
External Lib "utillib.lib"

External Lib "libgeneral.lib"
Declare External Function GetParameter$
Declare External Sub ERPCronSuccess

External Lib "ubsfunc.dl4"
Declare External Function OpenFile

Declare Sub OpenFilesGetParamaters,PurgeAuditFile

try
dim e$[300],tmp$[100],tmp2$[100],b$[100]
b$ = " ",b$
dim to1$[6],keyvalue$[70],k1$[70],filename$[20],purgeFilename$[20]
dim 3%,recsPurged

!* MAIN LOGIC

call OpenFilesGetParamaters()
call PurgeAuditFile()
call ERPCronSuccess()
Else 
	include "src/utilcallmainerr.inc"
End Try
end
stop

sub OpenFilesGetParamaters()
try
	intCo = GetParameter$("S_USER.AppID") !company #
	auditfile = openfile("dfaudit",intco)
	i = GetParameter$("to") ! MMDDYY
	tmp$ = i using "&&&&&&"
	to1$ = tmp$[5,6],tmp$[1,4] ! YYMMDD
	filename$ = lcase$(GetParameter$("filename"))
else
	include "src/utilcallsuberr.inc"
end try
end sub

!* SUBROUTINES

sub PurgeAuditFile()
try
	if filename$="all"
		let keyvalue$=""
		purgeFilename$ = ""
	else
		filename$ = filename$,b$
		keyvalue$ = filename$
		purgeFilename$ = filename$
	end if
	do
		search #auditfile,3,2;keyvalue$,recordno,e
		if e exit do
		purgeIt=1
		if filename$="all"
			if purgeFilename$ = "" purgeFilename$ =  keyvalue$[1,20]
			! if "date" is exhausted and we are to do all files, go to next file
			if keyvalue$[21,26]>to1$[1,6]
				let purgeIt=0
				keyvalue$=keyvalue$[1,20],"zzzzzz"
				if recsPurged>0
					print "dfauditpurge: ";purgeFilename$;" - ";recsPurged;" records purged."
				end if
				recsPurged = 0
				purgeFilename$ = ""
			end if
		else
			if keyvalue$[1,20]<>lcase$(filename$[1,20]) exit do
			if keyvalue$[21,26]>to1$[1,6] exit do
		end if
		if purgeIt
			k1$=keyvalue$[1,20],keyvalue$[33],keyvalue$[21,32]
			search #auditfile,5,1;k1$,recordno,e \ if e error 11000
			search #auditfile,5,2;keyvalue$,recordno,e \ if e error 11000
			e=3
			search #auditfile,1,0;keyvalue$,recordno,e \ if e error 11000
			recsPurged = recsPurged + 1
		end if !purgeIt
	loop
	if recsPurged>0
		print "dfauditpurge: ";purgeFilename$;" - ";recsPurged;" records purged."
	end if
else
	include "src/utilcallsuberr.inc"
end try
end sub