! loadsave -w -n 100,10 -o prog/util/pmu_addusrdescups.dl4 src/pmu_addusrdescups.src
!
! PMUPGRADER ROUTINE

Declare Intrinsic Sub InpBuf,String,Time
Option Default Dialect IRIS1
include "src/utilcopyright.inc"
dim e$[300]

! PMU Midatlantic ups fields  - add control field
! and initialize value

Enter COID,GROUPID,DBAK$,CH_LOG,COREDUMP,E,...
! if "fromUpgrade" don't send print statements with
! control strings as this is being executed via
! a job not attached to terminal.  Be sure to send
! all output to ch_log as this will be reviewed and
! sent back to software repository
try
	enter fromUpgrade
else
	dim 1%,fromUpgrade
end try
try ! main try
E = 99
include "src/dim.pmupgrade.i"
Dim Ftemp$[16],BLANK$[80]
Dim K2$[60]
! dim Fielddes fields
DIM 1%,fcount,f1,upsmu,d1[3],dim1_tmp
dim d$[40],fLD$[1],d4$[30]
dim 1%,fd_r1[3],r4$[20],r5$[10],r6$[10],r7$[10],r8$[10]
dim r9$[20],r10$[20]
dim 2%,dim2_tmp
dim 3%,ccc_percent
BLANK$ = " ",BLANK$
TRUE = 1;FALSE = Not(TRUE)
open #1,"cntrl/cntrl" + Str$(COID)
ROW = 22;COL = 0

OPEN #2,"CNTRL/fielddes"
open #4,"cntrl/fielddesc2"
recmaint: k2$ = 188 using "###   "
search #2,2,1;k2$,r2_hdr,e \ if e>1 error 11000
if e ! does not exist
! 	LOGMSG$ = "Control Record 188 missing fields - cannot upgrade!"
! 	gosub DO_WRITE_LOG
! 	GOTO OUTEND
	gosub Create188
end if
read #2,r2_hdr;fcount,f1,d$;

if fcount >= 13
	LOGMSG$ = "Upgrade for UPS fields already done - skipping."
	gosub DO_WRITE_LOG
	GOTO OUTEND
end if

! 
ORIG$=""
OWRITE$ = "ye 'ups'" ! "overwrite existing BU and add .ccc to name
FCODE$="FIELDDES"
MODE=0 ! COPY ONLY
GOSUB DO_BACKUP
! update existing
let k2$ = "188  6"
search #2,2,1;k2$,r2,e
if not(e)
	read #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$
	r4$="UPS PUBLISHED MUP%",blank$ ! new prompt
	r8$="MIDATL",blank$ ! new comment
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$
endif
let k2$ = "188  7"
search #2,2,1;k2$,r2,e
if not(e)
	read #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$
	r4$="UPS NEGOTIATED MU%",blank$ ! new prompt
	r8$="MIDATL",blank$ ! new comment
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$
endif
! add new field description
let k2$ = "188 13"
e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
search #2,4,1;k2$,r2,e \ if e error 11000
let fd_r1[1] = 0 ! TYPE
let fd_r1[2] = 128 ! DISPL
let fd_r1[3] = 1 ! LEN
let r4$  = "UPS PUBL/NEGOT FLAG",blank$  ! PROMPT
! character fields - different format than numeric
let r9$ = "N",blank$ ! DEFAULT
let r10$ = "MIDATLANTIC",blank$ ! COMMENT

write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r9$,r10$
fcount = fcount + 1
write #2,r2_hdr;fcount,f1,d$;

let FLD$="N" \ write #1,188,128;FLD$[1,1];
let upsmu=7 \ write #1,188,10;upsmu; ! pub
let upsmu=25 \ write #1,188,12;upsmu; ! neg

!"add the field in cntrl/fielddesc2
 let rec=36
 let d4$="USE UPS PUBL OR NEGOT RATE N/P",blank$
 d1[0]=188
 d1[1]=128
 d1[2]=0
 d1[3]=10
 mat write #4,rec,0;d4$;
 mat write #4,rec,30;d1;
let rec=37
 let d4$="UPS PUBLISHED RATE MARKUP%",blank$
 d1[0]=188
 d1[1]=10
 d1[2]=1
 d1[3]=30
 mat write #4,rec,0;d4$;
 mat write #4,rec,30;d1;
 let rec=38
 let d4$="UPS NEGOTIATED RATE MARKUP%",blank$
 d1[0]=188
 d1[1]=12
 d1[2]=1
 d1[3]=30
 mat write #4,rec,0;d4$;
 mat write #4,rec,30;d1;
close #2
close #4

goto DO_EXIT:
!

Create188: ! create control record 188
	dim1_tmp=0;dim2_tmp=0
	! create new definitions
	fcount=0;f1=0
	d$="MISC FLAGS / SETTINGS",blank$
	
	e=2 \ search #2,1,0;k2$,r2_hdr,e \ if e error 11000
	write #2,r2_hdr;fcount,f1,d$;
	search #2,4,1;k2$,r2_hdr,e \ if e error 11000
	
	! definitions that were supposed to be there already

	let k2$ = "188  1"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 0 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = "COMIS BONUS DAYS",blank$ ! DESC
	let r5$ = "0",blank$ ! DEFAULT
	let r6$ = "0",blank$ ! MIN
	let r7$ = "999",blank$ ! MAX
	let r8$ = "GTI",blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  2"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 2 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = "COMIS BONUS ADDON %",blank$ ! DESC
	let r5$ = "0",blank$ ! DEFAULT
	let r6$ = "0",blank$ ! MIN
	let r7$ = "100",blank$ ! MAX
	let r8$ = "GTI",blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  3"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 4 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = "COMIS % DIFF",blank$ ! DESC
	let r5$ = "0",blank$ ! DEFAULT
	let r6$ = "0",blank$ ! MIN
	let r7$ = "999",blank$ ! MAX
	let r8$ = "GTI CUSTOM",blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  4"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 6 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = "SPARE",blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;
	
	let k2$ = "188  5"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 8 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  6"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 10 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  7"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 12 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  8"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 14 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188  9"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 16 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;
	
	let k2$ = "188 10"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 1 ! TYPE
	let fd_r1[2] = 18 ! DISPL
	let fd_r1[3] = 3 ! LEN
	let r4$  = blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim1_tmp;

	let k2$ = "188 11"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 2 ! TYPE
	let fd_r1[2] = 20 ! DISPL
	let fd_r1[3] = 32 ! LEN
	let r4$  = "NET PROFIT PERCENT",blank$ ! DESC
	let r5$ = "0",blank$ ! DEFAULT
	let r6$ = "0",blank$ ! MIN
	let r7$ = "100",blank$ ! MAX
	let r8$ = "GTI",blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim2_tmp;
	
	let k2$ = "188 12"
	e=2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	let fd_r1[1] = 2 ! TYPE
	let fd_r1[2] = 24 ! DISPL
	let fd_r1[3] = 4 ! LEN
	let r4$  = "SPARE",blank$ ! DESC
	let r5$ = blank$ ! DEFAULT
	let r6$ = blank$ ! MIN
	let r7$ = blank$ ! MAX
	let r8$ = blank$ !COMMENT
	write #2,r2;fd_r1[1],fd_r1[2],fd_r1[3],r4$,r5$,r6$,r7$,r8$

	fcount = fcount + 1
	write #2,r2_hdr;fcount,f1,d$;
	write #1,188,fd_r1[2];dim2_tmp;
return

DO_EXIT: Rem---------------- Exit the upgrade -----------------------------------
	E = 0
Goto OUTEND

DO_BACKUP: Rem"Backup the given file
	Call "sysfbackup",FCODE$,COID,GROUPID,ORIG$,DBAK$,OWRITE$,MODE,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
	If E Goto OUTEND
Return
DO_BUILD: Rem"Build the given file
	Call "Sysfbuild",FCODE$,COID,GROUPID,PTH$,OWRITE$,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
	If E Goto OUTEND
Return

include "src/rtn.pmupgrade.i"


OUTEND: Rem"Final exit (be sure to set e=0 if successful before branching here)
	try ! "close any possible file opened herein
		Close #1
		Close #2
		close #4
	else
		rem
	end try
End

else ! main try
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	If ch_log <> -1
		Print #ch_log;e$
	End If
end try
