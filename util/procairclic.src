! ProcAirclic
!
! loadsave -w -n 100,10 -o prog/util/procairclic.dl4 src/procairclic.src
!
! process the Airclic outgoing events
! continue the loop until no more, then exit
! Cron runs this every hour (allows for 10 per min, 600 per hour)

Option Default Dialect IRIS1
include "src/utilcopyright.inc"
! does various limited declares for utillib

Declare Intrinsic Function FindChannel

External Lib "utillib.lib"
Declare External Function ParseArguments,OpenEmail,GetSessionParameter$

External Lib "ubsfunc.dl4"
Declare External Function OpenFile


! Local Subroutines
Declare Sub GetCommandParameters,OpenFilesReadCntrl
Declare Sub ProcessQueue
Declare Sub OpenOutputChan,LogIt,PrintOutput

try ! main TRY
Dim CMD$[256],CONm$[50]
Dim X$[50],FLE$[100]
Dim 2%,intCo,noEmail
Dim 3%,R_MS

Dim EMAIL_FROM$[50],EMAIL_TO$[50],SUBJECT$[50]
Dim CC1$[50],CC2$[50],nam$[30],e$[300],tmp$[100]
dim args$[5,80],message$[80],isamKey$[60]

dim 3%

!*******
! M A I N   L O G I C
!*******
call GetCommandParameters()
if not(intCo) goto OutEnd:
call SetUtilSession(e$,intCo) ! based on intco set globals
call OpenFilesReadCntrl()
Close ! no files needed
call ProcessQueue()
OutEnd:
Close
chain ""
stop
else ! main try
	include "src/utilcallmainerr.inc"
end try

!--------------------------------------------------------------------------
! S U B R O U T I N E S
!--------------------------------------------------------------------------

Sub GetCommandParameters()
try
	argc = ParseArguments(e$,args$[], msc$(4))
	! First arg is company
	intCo = args$[1]
	if intCo < 1 or intCo > 99
		Message$="Invalid company number.  Exiting."
		Call logit(message$)
		intCo = 0
		exit sub
	end if
	if argc>1 let noEmail = args$[2]
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
!--------------------------------------------------------------------------

Sub OpenFilesReadCntrl()
try
	! call GetGlobals("UtilSessionMain",2,CONm$)
	CONm$ = GetSessionParameter$("COMPANYNAME")
	! just a test to see if it's there - otherwise give an error
	! alternate to comp name
	!F1$ = "cntrl/cntrl"+Str$(intCo) 
	!ch_cntrl = FindChannel()
	!Ropen #ch_ctrl,F1$
	!Mat Read #ch_ctrl,3,0;nam$
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
!--------------------------------------------------------------------------

sub ProcessQueue() !
try
	do
		clear x$
		clear fle$
		clear cmd$
		! call off for 1 event - if got one continue until no more
		X$ = Tim(8) Using "&&" + Tim(9) Using "&&" + Tim(10) Using "&&"       
		X$ = X$ + Tim(11) Using "&&" + Tim(12) Using "&&" + Tim(13) Using "&&"
		FLE$ = "tmp/acl.icevent" + X$ ! where we put tempfile until parsed
		CMD$ = "files/txt/acl.getevent.pl " ! the perl script to poll server
		if intco<1 or intco>99 let intco = 1 ! double check co#
		CMD$ = CMD$ + FLE$ ! execute perl script - data to fle$
		System CMD$
		Call "acl.event.in.dl4",FLE$,RETFLG,intco ! parses the file received
		X1 = 60 ! pause time 6 sec (in 10th of second)
		If RETFLG < 0 exit do ! return flag=-1 - no event received - we're done
		Pause X1 ! to allow time for processing
		! pause and loop for next
	loop
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
!--------------------------------------------------------------------------
sub OpenOutputChan()
Try
	if not(noEmail)
		EMAIL_FROM$ = "airclic@acmepaper.com"
		EMAIL_TO$ = "jcs@ubsys.com"
		SUBJECT$ = "cron job issue " + CoNm$
		!CC1$ = "rich@ubsys.com"
		!CC2$ = "rce@ubsys.com"
		outChan = OpenEmail(EMAIL_FROM$, EMAIL_TO$, SUBJECT$, CC1$, CC2$)
	end if
	call PrintOutput("Airclic Event poll for company " + Conm$)
	call PrintOutput("")
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
!--------------------------------------------------------------------------
sub PrintOutput(outStr$)
Try
	if noEmail
		print outStr$
	else
		print #outChan;outStr$
	end if
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
!--------------------------------------------------------------------------
sub LogIt(msg$)
Try
	if not(outOpen)
		call OpenOutputChan()
		OutOpen = 1
	end if
	Rem write log
	call PrintOutput("****")
	call PrintOutput(msg$)
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
!--------------------------------------------------------------------------