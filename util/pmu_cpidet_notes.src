! pmu_cpidet_notes - Initialize note fields in cpidet file
!
! loadsave -w -n 100,10 -o prog/util/pmu_cpidet_notes.dl4 src/pmu_cpidet_notes.src
!
! PMUPGRADER ROUTINE

! task 28092 !

external lib "ubsfunc.dl4"
declare intrinsic sub programdump
Declare Intrinsic Sub InpBuf,String,Time
! Option Default Dialect IRIS1
include "src/utilcopyright.inc"
dim e$[300]

ENTER COID,GROUPID,DBAK$,CH_LOG,COREDUMP,E,...
! if "fromUpgrade" don't send print statements with
! control strings as this is being executed via
! a job not attached to terminal.  Be sure to send
! all output to ch_log as this will be reviewed and
! sent back to software repository
try
	enter fromUpgrade
else
	dim 1%,fromUpgrade
end try
try ! main try
LET E=99
!
include "src/dim.pmupgrade.i"
Dim Ftemp$[16],BLANK$[80]
dim k1$[50]
Dim Note1$[30],Note2$[30],note3$[30],note4$[30]
dim 3%,r2
BLANK$ = " ",BLANK$
LET TRUE=1;FALSE=NOT(TRUE)
try close #1 else rem
ROPEN #1,"cntrl/cntrl"+STR$(COID)

LET ROW=23;COL=0
LET ORIG$=""
LET OWRITE$="ye 'notes'" ! "overwrite existing BU and add .pwhalert to name
LET FCODE$="CPIDET"
LET MODE=0 ! "copy -- just initializing fields
GOSUB DO_BACKUP:


let dfile$="2/CPIDET"+STR$(COID)


CONVERT_FILE: REM"Convert the given file
LET ROW=23;COL=0
if not(fromUpgrade) PRINT @COL,ROW;"Converting "+dFILE$;
LET COL=COL+13+LEN(dFILE$)
OPEN #2,DFILE$ ! "file in new location
LET CH=2 \ GOSUB GET_ACTIVE_RECS:
LET LOGMSG$="Estimated number of records to process: "+STR$(ACTRECS)
GOSUB DO_WRITE_LOG:

k1$=" ",k1$
FLELOOP: REM "Loop thru all old Dir 1
SEARCH #2,3,1;K1$,R2,E \ IF E=2 GOTO COPYDONE:
if e>2
	LOGMSG$ = "ERROR "+str$(e)+" during search of cpidet file"
	gosub DO_WRITE_LOG
	call programdump()
endif
mat read #2,r2,74;note1$;
mat read #2,r2,104;note2$;
mat read #2,r2,134;note3$;
mat read #2,r2,164;note4$;
if rtrim$(note1$)="" let note1$=" ",note1$
if rtrim$(note2$)="" let note2$=" ",note2$
if rtrim$(note3$)="" let note3$=" ",note3$
if rtrim$(note4$)="" let note4$=" ",note4$
mat write #2,r2,74;note1$;
mat write #2,r2,104;note2$;
mat write #2,r2,134;note3$;
mat write #2,r2,164;note4$;
goto Fleloop:

COPYDONE: REM "Copy is Done 
XferDone: ! "
LET LOGMSG$="Finished with Cpi detail notes initialize"
GOSUB DO_WRITE_LOG:
CLOSE #2
Goto DO_EXIT:




DO_EXIT: REM---------------- Exit the upgrade -----------------------------------
LET E=0
GOTO OUTEND:

DO_BACKUP: REM"Backup the given file
CALL "sysfbackup",FCODE$,COID,GROUPID,ORIG$,DBAK$,OWRITE$,MODE,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

DO_BUILD: REM"Build the given file
CALL "Sysfbuild",FCODE$,COID,GROUPID,PTH$,OWRITE$,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

include "src/rtn.pmupgrade.i"


OUTEND: REM"Final exit (be sure to set e=0 if successful before branching here)
try CLOSE #1 Else Rem
try Close #2 Else Rem

END 
else ! main try
	e = spc(8)
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	If ch_log <> -1
		Print #ch_log;e$
	End If
end try