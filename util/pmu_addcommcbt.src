! Routine to convert / expand commission chargeback tables to their own file
! vs. in control file and allow the tables to be assigned at the customer level
!
! loadsave -w -n 100,10 -o prog/util/pmu_addcommcbt.dl4 src/pmu_addcommcbt.src
!
! PMUPGRADER ROUTINE

external lib "ubsfunc.dl4"
declare intrinsic sub programdump
Declare Intrinsic Sub InpBuf,String,Time
! Option Default Dialect IRIS1
include "src/utilcopyright.inc"
dim e$[300]

ENTER COID,GROUPID,DBAK$,CH_LOG,COREDUMP,E,...
! dim dbak$[500],logname$[500]
! let dbak$="files/databak/" \ let coid =1 \ let groupid=0
! let logname$="/tmp/cashauthlogv2"
! let learnflag=0
! if learnflag<>0 let logname$=logname$+"lrn"
! build #0,+logname$
! close #0
! open #0,logname$
! if "fromUpgrade" don't send print statements with
! control strings as this is being executed via
! a job not attached to terminal.  Be sure to send
! all output to ch_log as this will be reviewed and
! sent back to software repository
try
	enter fromUpgrade
else
	dim 1%,fromUpgrade
end try
try ! main try
LET E=99
!
include "src/dim.pmupgrade.i"

DIM Ftemp$[16],F$[16]
DIM 1%,FFILE$[200],WORK$[200]
DIM BLANK$[60]

Dim k2$[100]
DIM 2%,COMMCBT
Dim 1%,CBTYPE,CBDAYS[4]
dim 2%,CBPCT[4],TABLENO
dim Description$[30]

dim 3%

LET BLANK$=" ",BLANK$
LET TRUE=1;FALSE=NOT(TRUE)
try close #1 else rem
ROPEN #1,"cntrl/cntrl"+STR$(COID)
LET ROW=23;COL=0

!
! Backup custnotes file in prep for new field init
!
LET ORIG$=""
LET OWRITE$="ne 'ccbt'"
LET FCODE$="CUSTNOTES"
LET MODE=0 ! "copy file as we're just initializing an new field
GOSUB DO_BACKUP:
LET ROW=23;COL=0
OPEN #2,"2/custnotes"+str$(coid)
LET CH=2 \ GOSUB GET_ACTIVE_RECS:
LET LOGMSG$="Estimated number of records to process: "+STR$(ACTRECS)
GOSUB DO_WRITE_LOG:
gosub UpgradeCustnotes:

close #2
open #2,"2/commcbt"+str$(coid)
gosub MoveFromControlToFile:
close #2
goto DO_EXIT:

UpgradeCustnotes: !
	COMMCBT = 0
	LET K2$=" ",K2$;REC=0
	do
		SEARCH #2,3,1;K2$,R2,E \ IF E=2 exit do
		IF E error 11000
		MAT WRITE #2,R2,430;COMMCBT
		LET REC=REC+1
		IF NOT(FRA(REC/100)) GOSUB DISPLAY_PROGRESS:
	loop
return

MoveFromControlToFile:
	! move singular entry from control records to
	! default table entry
	Mat Read #1,28,0;CBDAYS;
	Mat Read #1,28,10;CBPCT;
	Mat Read #1,28,40;CBTYPE;
	TABLENO = 0
	Description$ = "DEFAULT CHARGEBACK TABLE"+BLANK$
	k2$ = TABLENO USING "######"
	E = 2 \ search #2,1,0;k2$,r2,e \ if e error 11000
	search #2,4,1;k2$,r2,e \ if e error 11000
	Mat write #2,r2,0;TABLENO;
	Mat write #2,r2,4;Description$;
	Mat write #2,r2,34;CBTYPE;
	Mat write #2,r2,36;CBDAYS;
	Mat write #2,r2,46;CBPCT;
Return


DO_EXIT: REM---------------- Exit the upgrade -----------------------------------
LET E=0
GOTO OUTEND:

DO_BACKUP: REM"Backup the given file
CALL "sysfbackup",FCODE$,COID,GROUPID,ORIG$,DBAK$,OWRITE$,MODE,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

DO_BUILD: REM"Build the given file
CALL "Sysfbuild",FCODE$,COID,GROUPID,PTH$,OWRITE$,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

include "src/rtn.pmupgrade.i"


OUTEND: REM"Final exit (be sure to set e=0 if successful before branching here)
try CLOSE #1 Else Rem
try Close #2 Else Rem
try Close #3 Else Rem
END 
else ! main try
	e = spc(8)
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	If ch_log <> -1
		Print #ch_log;e$
	End If
end try