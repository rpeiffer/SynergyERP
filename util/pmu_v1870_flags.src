! loadsave -w -n 100,10 -o prog/util/pmu_v1870_flags.dl4 src/pmu_v1870_flags.src
!
! PMUPGRADER ROUTINE

Declare Intrinsic Sub InpBuf,String,Time,findf
Option Default Dialect IRIS1
include "src/utilcopyright.inc"
dim e$[300]

! Make sure MySQL flags are set and the flags dependent
! on them are set properly.  No check to see if it's
! already done as this program can be safely run
! multiple times

Enter COID,GROUPID,DBAK$,CH_LOG,COREDUMP,E,...
! if "fromUpgrade" don't send print statements with
! control strings as this is being executed via
! a job not attached to terminal.  Be sure to send
! all output to ch_log as this will be reviewed and
! sent back to software repository
try
	enter fromUpgrade
else
	dim 1%,fromUpgrade
end try
try ! main try
E = 99
include "src/dim.pmupgrade.i"
Dim Ftemp$[16],BLANK$[80],P61$[256]
dim 3%
BLANK$ = " ",BLANK$
TRUE = 1;FALSE = Not(TRUE)
open #1,"cntrl/cntrl" + Str$(COID)
ROW = 22;COL = 0
! dim field desc field
DIM 1%,FD1,FD2,FD3,FD4$[20],FD5$[10],FD6$[10],FD7$[10],FD8$[10]  
DIM 1%,HGLWHSE
DIM HGLCOMM$[4]
DIM 3%,FDREC                                                     
DIM KEYFD$[20]                                                   



!-----------------system flag section--------------------------------
Mat Read #1,61,0;P61$;
if p61$[118,118]<>"N" let p61$[118,118]="Y" ! set increment po pop-up flag #30160

Mat Write #1,61,0;P61$;

!-----------initialize field in the control file---------------------
Mat read #1,52,100;hglcomm$;
for ctr=1 to 4
	if hglcomm$[ctr,ctr]="" let hglcomm$[ctr,ctr]=" "
next ctr
Mat Read #1,52,82;hglwhse;
if hglwhse<1 or hglwhse>99 let hglwhse=0
if hglcomm$[1,4]="    " let hglwhse=0
Mat Write #1,52,82;hglwhse;

!--------------- add fields to fielddesc file --------------------------
OPEN #2,"cntrl/fielddes"
! adding field 24 and 25 to control record #52
LET KEYFD$=" ",KEYFD$;KEYFD$[1,3]=" 52"
SEARCH #2,2,1;KEYFD$,FDREC,E \ IF E goto DO_EXIT:   
READ #2,FDREC;FD1;
IF FD1>26 GOTO DO_EXIT:
LET FD1=26
WRITE #2,FDREC;FD1;
LET KEYFD$=" ",KEYFD$;KEYFD$[1,6]=" 52 24"    ! moved field #24 to #26  
SEARCH #2,2,1;KEYFD$,FDREC,E \ IF E>1 goto DO_EXIT:   
if not(e)
	SEARCH #2,5,1;KEYFD$,FDREC,E \ IF E GOTO DO_EXIT:
	let e=3\search #2,1,0;keyfd$,fdrec,e\if e goto do_exit:
endif
! field 24 - HELD STK GL WHSE
LET FD1=1 ! type                                        
LET FD2=82 ! displacement                               
LET FD3=10 ! length                                     
LET FD4$=" ",FD4$;FD4$[1,20]="HELD STK GL WHSE      "
LET FD5$=" ",FD5$;FD5$[1,1]="0" ! DEFAULT               
LET FD6$=" ",FD6$;FD6$[1,1]="0" ! MIN VALUE             
LET FD7$=" ",FD7$;FD7$[1,2]="99" ! MAX VALUE             
LET FD8$=" ",FD8$ ! COMMENT 
let keyfd$=" ",keyfd$
LET KEYFD$=" 52 24" ! KEY FDRECORD #52 field #24 Held Stk GL Whse
LET E=2 \ SEARCH #2,1,0;KEYFD$,FDREC,E \ IF E<>0 goto DO_EXIT 
WRITE #2,FDREC;FD1,FD2,FD3,FD4$,FD5$,FD6$,FD7$,FD8$  
SEARCH #2,4,1;KEYFD$,FDREC,E\if e<>0 goto do_exit: 
! field #25 - HELD STK COMM CODE
let keyfd$=" ",keyfd$                                             
LET KEYFD$=" 52 25" ! KEY FDRECORD #52 field #24 Held Commodity Code 
SEARCH #2,2,1;KEYFD$,FDREC,E \ IF E>1 goto DO_EXIT:                
if not(e)                                                          
        SEARCH #2,5,1;KEYFD$,FDREC,E \ IF E GOTO DO_EXIT:          
        let e=3\search #2,1,0;keyfd$,fdrec,e\if e goto do_exit:    
endif                                                              
LET FD1=0! type                                        
LET FD2=100! displacement                               
LET FD3=4 ! length                                     
LET FD4$=" ",FD4$;FD4$[1,20]="HELD STK COMM CODE    "
LET FD5$=" ",FD5$!;FD5$[1,1]="0" ! DEFAULT               
LET FD6$=" ",FD6$!;FD6$[1,1]="0" ! MIN VALUE             
LET FD7$="z",FD7$!;FD7$[1,2]="99" ! MAX VALUE             
LET FD8$=" ",FD8$ ! COMMENT 
LET KEYFD$=" 52 25" ! KEY FDRECORD #52, ITEM #25
LET E=2 \ SEARCH #2,1,0;KEYFD$,FDREC,E \ IF E<>0 goto DO_EXIT 
WRITE #2,FDREC;FD1,FD2,FD3,FD4$,FD5$,FD6$,FD7$,FD8$  
SEARCH #2,4,1;KEYFD$,FDREC,E \ if e<>0 goto do_exit:
! field #25 - HELD STK COMM CODE                                     
let keyfd$=" ",keyfd$                                                
LET KEYFD$=" 52 26" ! KEY FDRECORD #52 field #26 Held Commodity Code 
SEARCH #2,2,1;KEYFD$,FDREC,E \ IF E>1 goto DO_EXIT:                  
if not(e)                                                            
        SEARCH #2,5,1;KEYFD$,FDREC,E \ IF E GOTO DO_EXIT:            
        let e=3\search #2,1,0;keyfd$,fdrec,e\if e goto do_exit:      
endif                                                                
LET FD1=0! type                                                      
LET FD2=200! displacement                                            
LET FD3=50! length                                                   
LET FD4$=" ",FD4$;FD4$[1,20]="FIFO SPC REP DIR      "                
LET FD5$=" ",FD5$!;FD5$[1,1]="0" ! DEFAULT                           
LET FD6$=" ",FD6$!;FD6$[1,1]="0" ! MIN VALUE                         
LET FD7$="z",FD7$!;FD7$[1,2]="99" ! MAX VALUE                        
LET FD8$=" ",FD8$ ! COMMENT                                          
LET KEYFD$=" 52 26" ! KEY FDRECORD #52, ITEM #26                     
LET E=2 \ SEARCH #2,1,0;KEYFD$,FDREC,E \ IF E<>0 goto DO_EXIT        
WRITE #2,FDREC;FD1,FD2,FD3,FD4$,FD5$,FD6$,FD7$,FD8$                  
SEARCH #2,4,1;KEYFD$,FDREC,E \ if e<>0 goto do_exit: 
                   
                                                        
goto DO_EXIT


DO_EXIT: Rem---------------- Exit the upgrade -----------------------------------
E = 0
Try
	CLOSE #2
ELSE
	REM FILE NOT OPEN
END TRY
Goto OUTEND

DO_BACKUP: Rem"Backup the given file
	Call "sysfbackup",FCODE$,COID,GROUPID,ORIG$,DBAK$,OWRITE$,MODE,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
	If E Goto OUTEND
Return
DO_BUILD: Rem"Build the given file
	Call "Sysfbuild",FCODE$,COID,GROUPID,PTH$,OWRITE$,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
	If E Goto OUTEND
Return

include "src/rtn.pmupgrade.i"


OUTEND: Rem"Final exit (be sure to set e=0 if successful before branching here)
	try ! "close any possible file opened herein
		Close #1
		Close #2
	else
		rem
	end try
End

else ! main try
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	If ch_log <> -1
		Print #ch_log;e$
	End If
end try
