! pmu_comm_div - initialize add'l field: div and create dir 2
!
! loadsave -w -n 100,10 -o prog/util/pmu_sds_fix.dl4 src/pmu_sds_fix.src
!
! PMUPGRADER ROUTINE

external lib "ubsfunc.dl4"
declare intrinsic sub programdump,datetojulian
Declare Intrinsic Sub InpBuf,String,Time,formatdate
Declare Intrinsic Function findchannel
! Option Default Dialect IRIS1
include "src/utilcopyright.inc"
dim e$[300]

ENTER COID,GROUPID,DBAK$,CH_LOG,COREDUMP,E,...
! if "fromUpgrade" don't send print statements with
! control strings as this is being executed via
! a job not attached to terminal.  Be sure to send
! all output to ch_log as this will be reviewed and
! sent back to software repository
try
	enter fromUpgrade
else
	dim 1%,fromUpgrade
end try
try ! main try
LET E=99
!
include "src/dim.pmupgrade.i"


DIM tmp$[200],tmp2$[100],k$[50],p61$[256]
Dim 3%,m1[1]
DIM 3%

try close #1 else rem
Open #1,"cntrl/cntrl"+Str$(COID)
Mat Read #1,61,0;p61$;

Let COL=0;Row=23


let FCode$="MSDFLE"
LET OWRITE$="ne 'sds_date_fix'"
LET MODE=0 ! "copy as we are just looking to correct dates
GOSUB DO_BACKUP: ! "ALWAYS BACKUP EXISTING!!!

Open #2,"2/MSDFLE"+str$(COID)
k$ = " ",k$
do
	search #2,3,1;k$,r,e \ if e>2 error 11000
	if e exit do
	mat read #2,r,30;m1
	if m1[1] ! if there is an effective date
		tmp$ = m1[1] using "&&&&&&"
		! see if date is valid YYMMDD
		call formatdate(tmp$,tmp2$,e)
		if e ! not valid - perhaps MMDDYY?
			tmp2$ = tmp$[5,6],tmp$[1,4]
			call formatdate(tmp2$,tmp$,e)
			if e
				m1[1] = 0 ! just not a valid date
			else
				m1[1] = tmp2$ ! YUP MMDDYY
			endif
		end if
	end if
	! date is now either in good format or blanked out
	mat write #2,r,30;m1;
loop

DO_EXIT: REM---------------- Exit the upgrade -----------------------------------
LET E=0
GOTO OUTEND:

DO_BACKUP: REM"Backup the given file
CALL "sysfbackup",FCODE$,COID,GROUPID,ORIG$,DBAK$,OWRITE$,MODE,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

DO_BUILD: REM"Build the given file
CALL "Sysfbuild",FCODE$,COID,GROUPID,PTH$,OWRITE$,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

include "src/rtn.pmupgrade.i"


OUTEND: REM"Final exit (be sure to set e=0 if successful before branching here)
try CLOSE #1 Else Rem
try Close #2 Else Rem
try Close #3 Else Rem
try close #4 Else Rem
try close #5 Else Rem
try close #6 Else Rem
try close #7 Else Rem
END 
else ! main try
	e = spc(8)
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	If ch_log <> -1
		Print #ch_log;e$
	End If
end try