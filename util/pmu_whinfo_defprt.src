! pmu_whinfo_defprt - initialize add'l field: default printer
!
! loadsave -w -n 100,10 -o prog/util/pmu_whinfo_defprt.dl4 src/pmu_whinfo_defprt.src
!
! PMUPGRADER ROUTINE

external lib "ubsfunc.dl4"
declare intrinsic sub programdump,datetojulian
Declare Intrinsic Sub InpBuf,String,Time
Declare Intrinsic Function findchannel
! Option Default Dialect IRIS1
include "src/utilcopyright.inc"
dim e$[300]

ENTER COID,GROUPID,DBAK$,CH_LOG,COREDUMP,E,...
! if "fromUpgrade" don't send print statements with
! control strings as this is being executed via
! a job not attached to terminal.  Be sure to send
! all output to ch_log as this will be reviewed and
! sent back to software repository
try
	enter fromUpgrade
else
	dim 1%,fromUpgrade
end try
try ! main try
LET E=99
!
include "src/dim.pmupgrade.i"

dim 1%,defaultPrinter


DIM tmp$[200]
DIM 3%

try close #1 else rem
Open #1,"cntrl/cntrl"+Str$(COID)

Let COL=0;Row=23

Let FCode$="WHINFO"
LET OWRITE$="ne 'whinfo_defprt'"
LET MODE=0 ! "copy file
GOSUB DO_BACKUP: ! "ALWAYS BACKUP EXISTING!!!
! WARNING - check for error in do_backup
! sub disabled.  very simple update.
! if e = 10 meaning back up already exists
! assume it is done already and move on.
if e
	if e <> 10 goto OutEnd:
	let logmsg$="Backup file already exists - assuming upgrade already done - skipping"
	gosub DO_WRITE_LOG:
	goto DO_EXIT
end if

open #2,"2/WHINFO"+str$(coid)

gosub UpdateWhinfo:
goto DO_EXIT:


UpdateWhinfo: !
	LET LOGMSG$="Initialize default printer for WHINFO records."
	GOSUB DO_WRITE_LOG:
	defaultPrinter = 0 ! no default
	FOR r = 0 TO CHF(2) - 1
		write #2,r,3052;defaultPrinter;
	next r
RETURN


DO_EXIT: REM---------------- Exit the upgrade -----------------------------------
LET E=0
GOTO OUTEND:

DO_BACKUP: REM"Backup the given file
CALL "sysfbackup",FCODE$,COID,GROUPID,ORIG$,DBAK$,OWRITE$,MODE,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
! IF E GOTO OUTEND:
RETURN 

DO_BUILD: REM"Build the given file
CALL "Sysfbuild",FCODE$,COID,GROUPID,PTH$,OWRITE$,ROW,COL,CH_LOG,DFILE$,REASON$,E,fromUpgrade
IF E GOTO OUTEND:
RETURN 

include "src/rtn.pmupgrade.i"


OUTEND: REM"Final exit (be sure to set e=0 if successful before branching here)
try CLOSE #1 Else Rem
try Close #2 Else Rem
try Close #3 Else Rem
try close #4 Else Rem
try close #5 Else Rem
try close #6 Else Rem
try close #7 Else Rem
END 
else ! main try
	e = spc(8)
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	If ch_log <> -1
		Print #ch_log;e$
	End If
end try