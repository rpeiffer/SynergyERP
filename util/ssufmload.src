!
! loadsave -w -n 100,10 -o prog/util/ssufmload.dl4 src/ssufmload.src
!
Rem SSUFMLOAD.S         ABASIC    2.2  FEB 28, 1991  13:27:21   Tjy(x"
try ! main try

Declare Intrinsic Sub FindF,String,env
Option Default Dialect IRIS1
include "src/utilcopyright.inc"
External Lib "utillib.lib"
Declare External Function ParseArguments
declare sub GetCommandParameters

dim e$[300]

call env(2,"DL4PORTDUMP",msc$(1)+"/dump/SSUFMLOAD_%DATE%%TIME%%PROGNAME%.wri")
Dim A2$[100],A3$[100],A4$[140],A5$[200]
Dim A6$[90],A7$[90],A8$[90],A9$[140]
dim args$[5,80]

call GetCommandParameters()

if fromUpgrade
	print "Doing ssufmload.dl4 using file: "+args$[1]+"..."
end if

A5$ = " ",A5$
If args$[1] = ""
	e$ = "Usage: SSUFMLOAD  inputfile where inputfile = textfile name to load definitions from"
	error 10000
end if
B0 = 2
Open #3,args$[1]
B0 = 0
Gosub ReadLine
If A9$ <> "ID:SSUFMDUMP"
	e$ = "Input file not in proper format."
	error 10000
end if
Gosub ReadLine
If A9$[1,9] <> "INDEXLEN:" Goto UnexpectedLine

B1 = A9$[11]
Dim B2$[36],1%,B3[3],2%,B4[2]
Dim B5$[B1]
Dim B6$[50],1%,B7[2]
Dim 2%
Call FindF("SSUFM02M",B8)
If B8
	if fromUpgrade
		print "Overwriting existing definitions."
	else
		Print 'CR RB';"Overwrite existing files?  (y/n) ";'CL';
		Input ""A4$
		Call String(1,A4$)
		If A4$ <> "Y" Chain ""
	end if
end if

! build (re-build) the main files for definitions of files
! and indicies
B0 = 1
A4$ = "[1:28] ",Msc$(1),"/files/1/ssuf02m!"
Build #1,A4$
B9 = 5 \ C0 = 1
Search #1,0,1;A6$,B9,E \ If e error 11000
Search #1,0,0;A6$,C0,e \ If e error 11000
A4$ = " ",A4$
C2 = Int(B1 / 2 + .5)
A4$[3] = C2
A4$[1,3] = "[1:"
A4$[Len(A4$)] = "] ",Msc$(1),"/files/1/ssuf02i!"
Build #2,A4$
B9 = 7 \ C0 = 1
Search #2,0,1;A7$,B9,e \ If e error 11000
Search #2,0,0;A7$,C0,e \ If e error 11000
B0 = 0

FileDefLoop: ! for each file definition
	Gosub ReadLine
	If A9$[1,8] <> "+FMCODE:" Gosub UnexpectedLine
	A4$ = A9$[10]
	A6$ = A5$
	if fromUpgrade
		print "Adding definition for "+a4$+"..."
	else
		Print 'MU CR';A4$;'CL';
	end if
	!
	! add a record main file to for this file definition
	!
	A6$[1,Len(A4$)] = A4$
	e = 2 \ Search #1,1,0;A6$,C3,e \ If e error 11000
	Search #1,4,1;A6$,C3,e \ If e error 11000
	Gosub ReadLine \ B2$ = A9$
	If B2$[36,36] = "N" Let B2$[36,36] = "C"
	If B2$[36,36] = "Y" Let B2$[36,36] = "I"
	For C4 = 0 To 3
		Gosub ReadLine \ B3[C4] = A9$
	Next C4
	For C4 = 0 To 2
		Gosub ReadLine \ B4[C4] = A9$
	Next C4
	Mat Write #1,C3;B2$
	Mat Write #1,C3,36;B3
	Mat Write #1,C3,44;B4
	Gosub ReadLine \ If A9$[1,8] <> "+STARTFM" Gosub UnexpectedLine
	!
	! create the individual detail file for this file def
	!
	C5 = A9$[9]
	A2$ = "files/1/FM",A6$
	L800: If A2$[Len(A2$)] = " " Goto L820
	Goto L840
	L820: A2$[Len(A2$)] = ""
	Goto L800
	L840: B0 = 3
	A4$ = C5
	A4$[1,1] = "["
	A4$[Len(A4$)] = ":28] ",A2$,"!"
	Build #4,A4$
	! load field definitions into file
	B0 = 0
	For C6 = 0 To C5 - 1
		Gosub ReadLine \ If A9$[1,7] <> "+FMCODE" Gosub UnexpectedLine
		C7 = A9$[8] \ If C7 <> C6 Gosub UnexpectedLine
		Gosub ReadLine \ B6$ = A9$
		Gosub ReadLine \ B7[0] = A9$
		Gosub ReadLine \ B7[1] = A9$
		Gosub ReadLine \ B7[2] = A9$
		Gosub ReadLine \ If A9$ <> "+FMEND" Gosub UnexpectedLine
		Mat Write #4,C6;B6$
		Mat Write #4,C6,50;B7
	Next C6
	Close #4
	Gosub ReadLine
	If A9$ <> "+STARTKEYS" Gosub UnexpectedLine
	! load key definitions into main indicies file
	LoadKeys: Gosub ReadLine
		If A9$ = "+ENDKEYS" Goto LoadNotes
		If A9$[15,15] <> "|" Gosub UnexpectedLine
		A7$ = A9$[1,14]
		B5$ = A9$[16]
		e = 2 \ Search #2,1,0;A7$,C8,e \ If e error 11000
		Search #2,4,1;A7$,C8,e
		Write #2,C8;B5$[1,36]
	Goto LoadKeys

	LoadNotes: !
	Gosub ReadLine
	If A9$ <> "+STARTNOTES" Goto NotesDone
	B0 = 4
	!
	! build notes file for this file definition
	A3$ = "files/1/FT",A6$
	TrimBlanks: !
		If A3$[Len(A3$)] <> " " Goto EndTrimBlanks
		A3$[Len(A3$)] = ""
	Goto TrimBlanks
	EndTrimBlanks: A3$[Len(A3$) + 1] = "!"
	Build #4, + A3$
	B0 = 0
	LoadNoteLine: !
		Gosub ReadLine
		If A9$ = "+ENDNOTES" Goto EndLoadNotes
		A8$ = A9$
		Print #4;A8$
	Goto LoadNoteLine
	EndLoadNotes: Close #4
	Gosub ReadLine
	NotesDone: If A9$ <> "+ENDFILE" Gosub UnexpectedLine
Goto FileDefLoop

ReadLine:
	Read #3;A9$
	If A9$ = ""
		e$ = "UNEXPECTED END OF FILE, LINE: "+str$(C9)
		error 10000
	End If
	A9$[Len(A9$)] = ""
	C9 = C9 + 1
	If A9$ = "+ENDALL"
		Close
		if fromUpgrade
			Print ">>> RELEASE_UPGRADE Success <<<"
		else
			Print "ALL DONE!"
		end if
		Chain ""
	end if
Return

UnexpectedLine: !
	e$ = "UNEXPECTED LINE IN INPUTFILE, LINE: "+A9$+" LINE NUMBER: "+str$(C9)
	error 10000

else ! main try
	!
	! Main error routine for any DL4 utilities running outside of dynamicX
	!
	If Spc(8) <> 10000
		dim msc4$[100] \ msc4$=msc$(4)
		if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
		call env(2,"PROGNAME",msc4$)
		if spc(8) = 11000
			call utilsearcherr(e$, e, Spc(10))
		else
			Call utilsuberr(e$,Spc(8),Spc(10),Msc$(2))
		end if
		call programdump()
	End If
	Call utilmainerr(e$,Spc(8))
	chain ""
End try

Sub GetCommandParameters()
try
	argc = ParseArguments(e$,args$[], msc$(4))
	! if do
 	if ucase$(args$[1]) = "RELEASE_UPGRADE"
		fromUpgrade = 1
		args$[1] = args$[2]
	end if
else ! main try
	include "src/utilcallsuberr.inc"
end try
End Sub
