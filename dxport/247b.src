! >>> Program 247B
!
! description CREDIT ACCEPT PART 3
!
! loadsave -w -n 100,10 -o prog/dxport/247b.dl4 src/247b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX247B  CREDIT MEMO ACCEPT
Rem PRT 2 - REG / PRT 3 - GL
Rem LAST UPDATE    09/88 REV 2.3
! Last Update:   05/03/1991 roman. add labels and remarks and
!                                  fix history variables/displacements
!                03/31/92 B. Swet update tax/non-taxable freight misc
!                            charges, discount & handling to tax file
!                 04/23/92 B.Swet check for flag to post cash to A/R
!                 03/17/93 rns. open arproof file on #34
!                 03/93    rek - back out freight addons
!                 08/93 npe - build prodwhse rec if not found (10000)
!   jlp 4/17/98 cct108825 check for price correction
! jliu 11/19/01 cct151487 if the inv# is already on a c/m, use the c/m
!               for ar
!???:04/16/00:Converted to Bedit   (mkbedit 1.2b)
!   rce 2/17/03 add weekly sales file update 2/weeklysls# see update_weeklysls:
!   rce 03/03/03 add rdms tracking file search for rdms we write the record 
!			numbers for the invh & divhist files to text files for importing
! 			to RDMS
!	rce 04/24/03 add wh & div to weeklysls file
! 8/18/03 typo in dir 4 for weeklysls
! jliu 6/11/08 cct226292 delete the new fields on roltag file
! ---------------  notes for xrev9 upgrade for H T Berry -----------------------
! 08/01/07  rjs cct210769 - change so if flag set, the gp$ are reducted by the
!                          customer commission service charge before looking in
!                          the grid for commission%
! 12/19/07 jliu cct220357 - do not update the usage for order type 35
! ------------------------------------------------------------------------------
! ------  notes for Synergy/erp/xrev9 upgrade for Athens Janitor Supply --------
! 02/20/2013 - EVAP - order type 36 & 37 are STANDARD (cmtype 16=curr mth)
! 07/02/03 jcs cct168238 - credit memos in to EVAP
! ------------------------------------------------------------------------------
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 15, 2008  13:07:45
Rem /w2/papermaster/r2005//usr/acct/custom/xrev9/mx247b.src (univ2) 
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,JulianToDate,String
!Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenMySQLMirror
include "src/inc/sql_slscurr.inc"
include "src/inc/sql_prod.inc"

External Lib "libprodwh.lib"
Declare External Sub mxwhcreate
!Option Default Dialect IRIS1
try

Com 1%,PFU1[20],CNVTU[2],IntCo,icflag,statchan
Com 3%,PFU2[6],CNVTA,A[33],e$[500],rstr$[2000]
!
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
Def FND(H) = FNR(H - (H * D3[0]))
dim 1%,ohcurrid,arcurrid,parcurrid,3%,ohcurrfact,arcurrfact,parcurrfact
Dim A$[50],A1$[50],A2$[15],F$[16],M$[10],M1$[40],J$[8],P9$[50],P60$[50],P61$[256]
Dim A3$[16],A4$[60],P0$[20],P8$[6],L2$[20],SP$[50],SMAT$[2],HMAT$[2]
Dim K1$[50],S3$[33],L7$[6],NS$[50],W$[50],SPUNIT$[4],SUNIT$[4],PUNIT$[4]
Dim 3%,A6[4],T9[1],SCOM[4],SMER[4],SCST[4],S5[3],ARL2[3]
Dim K36$[50],X$[10],K40$[50],K41$[50],SCRATCH$[80],PRODCODE$[12],uid$[10],K_comma1$[28],K_comma2$[32]
Dim 1%,MCTXBL[9],LWHSE,HWHSE,FLAG[99],OPFU1[20],SPFU1[20],OPUM,SPUM
Dim 1%,C,C8[4],D,H3[1],L3[3],ARMONTH,H4[2],X1,UN[2]
Dim 1%,I,E,S4[1],WHSE,OLS2[1],TAX[100],DTAX,HTAX,MTAX,FTAX
Dim 1%,YR,A0[12],EUN[2],NS[1],DDAY[4],CDAY,J9[2],LINENUM
Dim 1%,W1$[32],W2$[24],W1[2],W0[3],PRODA$[156]
Dim 1%,SplitFlag,SplitType,cpiFlag,URec
Dim 2%,CSPLT[4]
Dim 2%,W2[9],WH7[3],W7[14],DUED,ARL1[10],OWHT1[1],SHPL
Dim 3%,WH8[47],WH9[25],UNF[6],SUNIT[3],PUNIT,S7[2],C12[1],PFN[1]
Dim 3%,ACC_CTR,T1,origT1,N1[4,4],L7[10],D0[7],CFIN[8],CUSTORD,ARL3[1]
Dim 3%,D2[19,5],D4[5],Q2[8],Q3[8],P9[10],P8,A5[6],OLM[5],TL2[1]
Dim 3%,C7,L5[3],P2[12,2],T2[25],C5[5],C6[9],S6[1],SPC4[6],SPC5[2],LTAX1
Dim 3%,S2[1],A3[13],L8[4],CUST,EB[8],NOLINES,C10[5],MCHARGE[9,1],TOT[4]
Dim 4%,ARREC,3%,OPFU2[6],SPFU2[6],OPA[33],SPA[33],OPT1,R[99]
Dim 3%,SRN[4],MISCCHGS_TAXED,MISCCHGS_NONTAXED
Dim 2%,A2[5],ARDATE,D9,X,X9[12],Y9,C2,DEPT,L9[1],A4[8],A1[2],H6[6]
Dim 2%,L6[5],H5[15],C9,SP1[5],B[24],TAXTYP,HA3[2]
Dim 2%,V2,S1[3],S3[1],JRNL,SLSM[9],P1,OLDL4,NEWL4
Dim 2%,A9,H0[12],L4[3],N0,X2,MCODE[9],SRVLVL[12,1],3%,X3[9]
dim 2%,commDiv
Dim 3%,V1,R36,REC_WEEKLYSLS,SP,H1,L1,C0,WHMISC[6]
Dim 3%,W5[25],W3[24],N2[12,4],S9[17],W9,TX0[3],TX1[10],TX2[10],CS9[3],R1[2],ocs1[3]
Dim ARDESC$[16],ARKEY$[50],3%,ARREF[1],1%,ARTYPE
Dim 1%,BUCK,2%,IA2[5],3%,ARAGEBUCK[5],ARAMT,REC_CUST,KEYCUST$[6]
Dim 3%,CST,R2[5],GLCTY[12],GLCOST,OREF[5],REFNO,commsrvchg
Dim 4%,D3[1],2%,LYP2[12,2],3%,O7[12],BUDG[1]
Dim 2%,WN[6],MM,DD,YY,BASCOST,POCOST,AVGCOST,NETPOCOST
Dim 2%,DSP3[4],KEY_$[60],KEY1$[60],KEY2$[60],KEY3$[60],KEY4$[60],KEY5$[60]
Dim 3%,AMOUNT,KEY6$[60],DSP3$[6],MT$[2],BPO$[20]
dim 3%,arcomm[1],RESSTKAMT

dim 3%,recPWS,USAGE_TY[12],USAGE_LY[12],SALES_TY[12],SALES_LY[12],HITS_TY[12]
dim 3%,LDCOST_TY[12],LDCOST_LY[12],AVGCOST_TY[12],AVGCOST_LY[12],HITS_LY[12]
dim kPWS$[60]
Dim 1%,PWSWH

! commaudit vars
! specific commission variables
Dim 3%,AORIGCOMM
Dim 1%,AS1[3],AS4[1]
Dim 2%,AS2[1]
Dim 3%,AS3[5],AS_$[60],SOURCE$[10],AS5[5]

Dim 3%

Dim LPONUM$[30],LJOBNUM$[30],PSNUM$[30],MSG1$[30],MSG2$[30]
DIM custom_customer$[30],WHPROD$[12],3%,WHBLD[2]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100],Msg$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim taxdesc$[20]
B$=" ",B$
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For X1 = 2 To 37
  Read I \ If I = -1 Goto L_260
  Read #1,88,I;F$;
  Open #X1,F$
L_260: Next X1
Data "1648","1808","2080","1792","2064","1504","1840","1856","1872","1888","2128"
Data "1824","1968","2176","2208","2240","2016","1600","2048","1664","2896","2896","2912"
Data "1744","-1","1728","1936","688","928","-1","-1","-1","400","1632","1312","-1"
F$ = "4/PWSALES" + Str$(COID) \ Open #37,F$
! If Err 0 Rem
Try Close #50 Else Rem
! open mysql on channel 76 as it seems to be available...
sqlChan = OpenMySQLMirror(e$,76)
f$ = "2/PRODWHSTAT"+str$(coid) \ open #81,f$
F$ = "2/ARTERMCODE" + Str$(COID) \ Ropen #50,F$

f$ = "cntrl/usercntrl" \ ropen #82,f$
UserId$ = GetParameter$("S_USER.ID")
uid$ = UserId$
! call 43,1,UID$
uid$ = ucase$(uid$)
UID$ = UID$ + "          "
URec=0
Search #82,2,1;UID$,URec,E
If E let URec=0
Close #82
f$ = "4/COMMAUDIT"+str$(coid) \ open #82,f$
ch_comma = 82

SCRATCH$ = "cntrl/weeklyslsflag" + Str$(COID)
F$ = "2/weeklysls" + Str$(COID)
WEEKLYSLSFLAG = 0 \ Call FindF(SCRATCH$,WEEKLYSLSFLAG)
If WEEKLYSLSFLAG
  Rem {begin src/inc/dim.weeklysls.i}
  Dim PRODCODE$[12]
  Dim 1%,WOY[1],WSDIV,WSWH
  Dim 2%,CUSTCODE
  Dim 3%,DOW[7,9]
  Rem {end dim.weeklysls.i}
  CH_WEEKLYSLS = 38
  Open #38,F$
End If 
F$ = "cntrl/rdms.ini"
RDMSFLAG = 0 \ Call FindF(F$,RDMSFLAG)
M$ = "#",M$
Close #35
Read #1,88,2112;F$[1,16]; \ Open #44,F$
F$ = "4/CSLSALES" + Str$(COID)
Open #43,F$
Mat Read #1,19,50;P9$;
Mat Read #1,52,60;P8$;
Mat Read #1,60,50;P60$; \ Mat Read #1,61,0;P61$;
mat read #1,115,60;custom_customer$;
! open cpi needed files on 77 and 78 as they seem available
if p61$[111,111] = "Y"
	ropen #77,"2/CONTRACTH"+str$(coid)
	open #78,"2/CPIDET"+str$(coid)
end if
Custom_customer$=UCase$(Trim$(custom_customer$))
If P61$[3,3] = "Y"
  F$ = "2/SARDETL"+Str$(COID) \ Open #40,F$
  Mat Read #1,88,1408;F$; \ Open #41,F$
End If 
ROLTAGFLAG = 0
F$ = "3/SORDROLTAG" + Str$(COID)
Call FindF(F$,ROLTAGFLAG)
If ROLTAGFLAG
  Open #45,F$
End If 
! Print 'CR MU CL';"PLEASE WAIT . . . . "; \ Signal 3,0
For X = 1 To 12 \ Read X9[X] \ Next X
Data "0","31","59","90","120","151","181","212","243","273","304","334"
Read #1,0,108;ARDATE;
J$ = ARDATE Using "######"
Gosub L_3900 \ YR = Y9
X9[0] = D9
Read #1,0,120;ARMONTH;
!statchan=88 ! passed in coms
if statchan print #statchan;"PART 3 of accept started"
L_1000: Rem "======================== accept starts here
A$ = " ",A$;A$[1,2] = "11"
L_1005: ! loop ordheader
Search #8,3,1;A$,V1,E \ If E > 2 error 11000
If E Or A$[1,2] <> "11" Goto OUTEND
H1 = V1 \ R2[1] = V1
Mat Read #8,H1;H0;
J$ = H0[8] Using "######" \ Gosub L_3900
Mat Read #8,H1,52;H3;
Mat Read #8,H1,446;P0$; \ Mat Read #8,H1,408;H6;
Mat Read #8,H1,78;H4; \ Mat Read #8,H1,444;HMAT$;
Mat Read #8,H1,348;SMER; \ Mat Read #8,H1,378;SCST;
Mat Read #8,H1,278;SLSM; \ Mat Read #8,H1,318;SCOM;
If H4 >= Chf(15) Let H4 = Chf(15) - 1
Mat Read #8,H1,104;H5;
Mat Read #8,H1,490;OWHT1;
Mat Read #8,H1,512;OREF;
Mat Read #8,h1,548;CSPLT;
! if h5[7]=36 or h5[7]=37 goto L_1005 ! EVAP NOT READY
!if custom_customer$="HTBERRY" ! no longer custom
	MAT  READ #8,H1,568;COMMSRVCHG; ! custom - 
!Endif
mat read #8,h1,598;SplitFlag;
if SplitFlag < -1 or SplitFlag > 3 LET SplitFlag = 0
If RDMSFLAG System "echo " + Str$(H1) + " >> 6/invhaccept"
ACC_CTR = ACC_CTR + 1
mat read #8,h1,624;ohcurrid;
mat read #8,h1,626;ohcurrfact;
if p61$[136,136]="Y"
	if ohcurrid<0 or ohcurrid>9999
		let ohcurrid=0
		let ohcurrfact=0
	endif
	if ohcurrfact<0 let ohcurrfact=0
else
	let ohcurrid=0
	let ohcurrfact=0
endif
Mat Read #9,H0[2],154;SRN;
If OWHT1[1] = 0 And H3[0] <> 0 Let OWHT1[1] = H3[0]
HWHSE = H4[2];REFNO = H0[7]
Mat Read #10,H0[3],8;T2;
ARTYPE = 6 \ If T2[0] < 0 Let ARTYPE = 1
If P61$[3,3] = "Y" ! a/r detail history
  If OREF[1] = H0[7] Goto SECARCHK
  ARREF = OREF[1]
  ARKEY$[1,6] = H0[1] Using "######"
  ARKEY$[7,16] = ARREF Using "##########"
  ARKEY$[17,17] = ARTYPE Using "#"
  !! Search #41,2,1;ARKEY$,V1,E \ If Not(E) Goto SECARCHK
  !! If E > 1 error 11000
  Search #7,2,1;ARKEY$,V1,E \ If Not(E) Goto SECARCHK
  If E > 1 error 11000
  Goto ENDARCHK
SECARCHK: Rem check by credit memo #
  ARREF = H0[7]
  ARKEY$ = " ",ARKEY$
  ARKEY$[1,6] = H0[1] Using "######"
  ARKEY$[7,16] = ARREF Using "##########"
  ARKEY$[17,17] = ARTYPE Using "#"
  !! Search #41,2,1;ARKEY$,V1,E \ If Not(E) Goto THRARCHK
  !! If E > 1 error 11000
  Search #7,2,1;ARKEY$,V1,E \ If Not(E) Goto THRARCHK
  If E > 1 error 11000
  Goto ENDARCHK
THRARCHK: Rem check by c/m date
  ARREF = H0[8]
  ARKEY$ = " ",ARKEY$
  ARKEY$[1,6] = H0[1] Using "######"
  ARKEY$[7,16] = ARREF Using "##########"
  ARKEY$[17,17] = ARTYPE Using "#"
  !! Search #41,2,1;ARKEY$,V1,E \ If E > 1 error 11000
  !! If Not(E)
    !! Msg$="A/R already exists for cust#"+Str$(H0[1])+" c/m#"+Str$(H0[7])
    !! ! Signal 3,20
    !! error 11000 
  !! End If 
  Search #7,2,1;ARKEY$,V1,E \ If E > 1 error 11000
  If Not(E)
    Msg$="A/R already exists for cust#"+Str$(H0[1])+" c/m#"+Str$(H0[7])
    ! Signal 3,20
    error 11000
  End If 
Else 
  If OREF[1] <> H0[7]
    ARREF = OREF[1]
    ARKEY$ = " ",ARKEY$;ARKEY$[1,6] = H0[1] Using "######"
    ARKEY$[7,16] = ARREF Using "##########"
    ARKEY$[17,17] = ARTYPE Using "#"
    Search #7,2,1;ARKEY$,V1,E \ If E > 1 error 11000
    If E = 1 Goto ENDARCHK
  End If 
  ARREF = H0[7]
  ARKEY$ = " ",ARKEY$;ARKEY$[1,6] = H0[1] Using "######"
  ARKEY$[7,16] = ARREF Using "##########"
  ARKEY$[17,17] = ARTYPE Using "#"
  Search #7,2,1;ARKEY$,V1,E \ If E > 1 error 11000
  If E = 0
    Msg$="A/R already exists for cust#"+Str$(H0[1])+" c/m#"+Str$(H0[7])
    error 11000
  End If 
ENDARCHK: Rem got a ref number
End If 
Mat Read #10,H0[3],8;T2;
Mat Read #10,H0[3],168;MCODE;
Mat Read #10,H0[3],208;MCHARGE;
Mat Read #10,H0[3],328;TOT; \ Mat Read #10,H0[3],358;MCTXBL;
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
A3$ = " ",A3$
D3[0] = 0;D3[1] = 0;N0 = H0[7]
If T2[1] Let D3[1] = T2[3] / T2[1]
If D3[1] < -1 Or D3[1] > 1 Let D3[1] = 0
D3[0] = D3[1]
Gosub L_5500
If CUSTORD < 0 Let CUSTORD = 0
Mat Read #3,C0,378;C8;
Mat Read #3,C0,668;C12;
Gosub L_5900
If H0[1] = H0[4] Goto L_1270
If CUSTORD < 0 Let CUSTORD = 0
L_1270: If H5[7] = 8 Goto L_1300
Gosub L_5600
Gosub L_2500
L_1300: Rem "========================================= line items
A$ = " ",A$;NOLINES = 0
A$[1,6] = N0 Using M$[1,6]
A1$ = A$
L_1340: Search #11,3,1;A$,V1,E \ If E > 2 error 11000
If E Goto L_1900
If A$[1,6] <> A1$[1,6] Goto L_1900
if statchan print #statchan;"Doing...";Str$(ACC_CTR);" ";A$
A1$ = A$
L1 = V1
Mat Read #11,L1,8;L3;
Mat Read #11,L1,16;L4;
If L4[1] = 0 Let L4[1] = H0[11]
If P9$[21,21] <> "Y" Let L4[1] = H0[11]
Mat Read #11,L1,32;L5;
Mat Read #11,L1,56;L6; \ Mat Read #11,L1,250;UN;
Mat Read #11,L1,140;L2$; \ Mat Read #11,L1,404;OLM; \ Mat Read #11,L1,508;LTAX1;
Mat Read #11,L1,160;L9; \ Mat Read #11,L1,368;MT$;
Mat Read #11,L1,168;L7; \ Mat Read #11,L1,250;L7$; \ Mat Read #11,L1,256;OLS2;
Mat Read #11,L1,260;S9; \ Mat Read #11,L1,370;S3$;
Mat Read #11,L1,446;EUN; \ Mat Read #11,L1,452;UNF;
Mat Read #11,L1,502;CST
L5[2] = L5[2] - S9[15];OLM[3] = OLM[3] - S9[15]
L5[0] = L5[0] - OLM[0];L5[3] = L5[3] - OLM[1]
LWHSE = L4[3] \ If LWHSE <= 0 Or LWHSE > 99 Let LWHSE = HWHSE
If P60$[42,42] = "Y" Gosub L_4800
NOLINES = NOLINES + 1
If (H5[7] = 21 Or H5[7] = 22) And A1$[7,9] = "   " Goto L_1700
T1 = L7[4]
If H3[1] = 3 Let T1 = 0 \ L3[1] = 0
If OLS2[0] = 3 !message line - see cct#64357
  X2 = -1
  If L4 And L3[0] Write #12,L4,8;X2;
  Goto L_1700
End If 
GLCOST = L7[10]
If P9$[17,17] = "N" Let GLCOST = (T1 * CST)
If Not(GLCOST) Let GLCOST = S9[12]
If L5[3] >= 0 Let D3[0] = D3[1] Else Let D3[0] = - D3[1]
If L3 Goto L_7400
Mat Read #5,L4,512;PFU1 \ Mat Read #5,L4,554;PFU2
L_1490: Mat Read #5,L4,256;A
Mat Read #5,L4,0;PRODA$
If H5[7] = 8 Goto L_1550
If H5[7] = 6 Or H5[7] = 10 Goto L_1550
If (H5[7]=36 or H5[7]=37) And H3[1]=16 Goto L_1550: ! "EVAP - No sales yet
A[7] = A[7] - FND(L5[3])
A[8] = A[8] - FND(L5[3])
A[9] = A[9] - T1 \ A[10] = A[10] - T1
A[30] = A[30] + FND(L5[3])
A[31] = A[31] + T1
A[32] = A[32] + S9[12]
A[11] = A[11] - S9[12]
A[12] = A[12] - S9[12]
L_1550: Write #5,L4,204;H0[8]
Mat Write #5,L4,256;A
If H5[7] = 8
	! make sure above writes to prod record get written out
	if sqlChan<>-1
		e = prod_UpdateSQLFromDL4(e$, intCo, proda$[140,151], sqlChan,5)
		if e<>1 error 11000
	end if
	Goto L_1666
end if
D4 = H0[4]
Write #5,L4,472;D4;
! make sure above writes to prod record get written out
if sqlChan<>-1
	e = prod_UpdateSQLFromDL4(e$, intCo, proda$[140,151], sqlChan,5)
	if e<>1 error 11000
end if
If L3 Let L4 = OLDL4
L_1600: Rem.DONT DROP - nonstk comes back
If H5[7] = 6 Or H5[7] = 10 Goto L_1666
If (H5[7]=36 Or H5[7]=37) And H3[1]=16  Goto L_1666: ! " EVAP
Gosub L_3000
Gosub L_5650
Gosub L_3600
Gosub L_4300
If L9 Gosub L_12000
Gosub L_8000
L_1666: Gosub L_7900 ! \ If H5[7] = 6 Or H5[7] = 8 Or H5[7] = 10 Goto L_1700
IF H5[7]=6 OR H5[7]=8 OR H5[7]=10 Or H5[7]=16
	If L3[0] And OldL4 Let L4[0]=OLDL4
	GOTO L_1700:
Endif
IF (H5[7]=36 Or H5[7]=37) And H3[1]=16 ! "EVAP curr mth credit
	If L3[0] And OldL4 Let L4[0]=OLDL4
	GOTO L_1700:
Endif
If L3[0] = 1 Gosub L_6640
Gosub L_5200
If Int(S9[16]) = 1 Gosub L_6170
Gosub L_13500
Gosub UPDATE_WEEKLYSLS
Gosub SHPL_SALES
L_1700: Rem "=============================== line accepted. now delete it
A$ = A1$ \ V1 = L1
Search #11,5,1;A$,V1,E
If E error 11000
If L3 Goto L_1810
A$ = " ",A$
A$[1,6] = L4 Using M$[1,6]
A$[7,12] = N0 Using M$[1,6]
A$[13,16] = A1$[7,10]
A$[17] = "" \ V1 = L1
Search #11,5,2;A$,V1,E
If E error 11000
L_1810: E = 3 \ V1 = L1
Search #11,1,0;A$,V1,E
If E error 11000
A$ = A1$
K36$ = " ",K36$ \ K36$[1,9] = A1$[1,9]
L_1855: Search #36,3,1;K36$,R36,E \ If E = 2 Goto L_1895
If E error 11000
If K36$[1,9] <> A1$[1,9] Goto L_1895
Search #36,5,1;K36$,R36,E \ If E error 11000
E = 3 \ Search #36,1,0;K36$,R36,E \ If E error 11000
Goto L_1855
L_1895: Goto L_1340
L_1900: Rem "========================== no more lines
If H5[7] = 8 Goto L_1950
Gosub L_2000
Gosub L_3800
Gosub SHIPL_BUDG
Gosub L_3200
Gosub L_3500
L_1950: Gosub L_6000
Gosub L_6200
Gosub L_3700
Gosub L_4000
Goto L_1000
L_2000: Rem "========================================= update AR
Read #10,H0[3],164;JRNL;
If H5[7]=16 And T2[0]=0 Return ! "whse xfer
If H5[7]=37 And H3[1]=16 Goto L_2390: !"no Shipping EVAP A/R (but need AR Proof)
A2[0] = H0[11];A2[1] = 0;A2[2] = C9;A2[4] = ARDATE;ARREF[1] = 0
arcomm[0]=0;arcomm[1]=0
For X1 = 0 To 11
  Let A0[X1] = 0
  If X1 <= 2 Let A1[X1] = 0
  If X1 <= 8 Let A4[X1] = 0
  If X1 <= 5 Let A5[X1] = 0
  A3[X1] = 0
Next X1
If T2[0] < 0 Goto L_2060
If T2[13] > T2[0] Let T2[13] = T2[0]
L_2060: A3[0] = Abs(T2[0]);A3[2] = Abs(T2[13])
If T2[0] < 0 Let A3[0] = A3[0] + A3[2] \ A3[2] = 0
A3[4] = T2[5];A3[5] = T2[1]
A4$ = " ",A4$;A4$[1,20] = P0$
A1[0] = H0[7]
A1[1] = C12[1]
A2[4] = H0[8];A4[3] = H0[8]
BUCK = 0
If T2[0] < 0 ! credit balance must be an invoice
  A2[3] = BUCK + .01
Else 
  If P9$[19,19] = "N" Let BUCK = 1
  A2[3] = BUCK + .06
End If 
Gosub L_11000
A4[3] = DUED
X$ = A2[4] Using "&&&&&&" \ Call DateToJulian(1,X$,X$,E) \ If E Let X$ = Tim(6) Using "#####"
A2[4] = X$[1,5]
A3[7] = T2[7];A3[13] = T2[16]
A0[1] = H4[0];A1[2] = OWHT1[1];A0[5] = H5[8]
A3[10] = T2[4] + T2[6];A5[0] = Abs(T2[11])
A0[6] = H5[7];A0[7] = H5[9];A0[8] = H5[0]
A3[12] = T2[22];A4[0] = T2[23]
A0[9] = H3[1];A0[10] = 0;A4[1] = H0[4]
A0[3] = HWHSE;A5[6] = T2[3];A0[0] = H0[12]
A4[2] = JRNL
A3[8] = H5[13] - (H5[14] - T2[17] + T2[18])
A3[6] = H5[13] - H5[14]
A0[2] = ARMONTH * 100 + YR
a0[12]=247 ! source from credit memo accept
if p61$[136,136]="Y"
	let arcurrid=ohcurrid
	let arcurrfact=ohcurrfact
else
	let arcurrid=0
	let arcurrfact=0
endif
Gosub L_2400
A$ = " ",A$;A$[1,6] = C9 Using "######";A$[7,17] = ARREF Using "##########6"
If T2[0] < 0 ! "make into an invoice
  A$[17,17] = "1"
  A3[4] = - A3[4];A3[5] = - A3[5];A3[7] = - A3[7];A5[6] = - A5[6];A3[10] = - A3[10]
End If 
If Not(A3[0] - A3[1] - A3[2]) Let A2[1] = H0[8]
A3$ = " ",A3$
If OREF[1] <> ARREF And H0[7] <> OREF[1]
  A3$[1,10] = OREF[1] Using "In########"
End If 
E = 2 \ A1$ = A$ \ Search #7,1,0;A$,V1,E \ If E error 11000
Mat Write #7,V1,0;A2;
Mat Write #7,V1,24;A3;
Mat Write #7,V1,108;A3$;
Mat Write #7,V1,124;A0;
Mat write #7,v1,150;arcurrid;
Mat Write #7,V1,154;A4;
Mat Write #7,V1,190;A1;
Mat Write #7,V1,202;A5;
Mat Write #7,V1,256;A4$;
Mat Write #7,V1,316;ARREF;
mat write #7,v1,330;arcomm;
mat write #7,v1,342;arcurrfact;
A3[6] = 0;S3[0] = V1;C = 7;D = 1
Gosub L_5000 \ If E error 11000
A$[7,12] = A2[4] Using "######"
A$[13] = A1$[7]
C = 7;D = 2 \ Gosub L_5000 \ If E error 11000
A$ = " ",A$;A$[1,6] = A1[1] Using "######"
A$[7,12] = A2[2] Using "######";A$[13,18] = A2[4] Using "######"
A$[19] = A1$[7]
C = 7;D = 3 \ Gosub L_5000 \ If E error 11000
A$ = " ",A$;A$[1,6] = A1[1] Using "######"
A$[7,16] = A1$[7,16];A$[17,22] = A1$[1,6];A$[23] = A1$[17]
C = 7;D = 4 \ Gosub L_5000 \ If E error 11000
A$ = " ",A$;A$[1,6] = A1[1] Using "######"
A$[7,12] = A2[4] Using "######"
A$[13,22] = A1$[7,16];A$[23,28] = A1$[1,6];A$[29] = A1$[17]
C = 7;D = 5 \ Gosub L_5000 \ If E error 11000
If (A3[0] - A3[1] - A3[2])
  ARAMT = (A3[0] - A3[1] - A3[2])
  If Int(Fra(A2[3]) * 100) > 5 And BUCK <> 1 Let ARAMT = - (ARAMT)
  KEYCUST$ = A2[2] Using "######"
  Search #3,2,1;KEYCUST$,REC_CUST,E \ If E error 11000
  Mat Read #3,REC_CUST,210;ARAGEBUCK
  ARAGEBUCK[BUCK] = ARAGEBUCK[BUCK] + ARAMT
  Mat Write #3,REC_CUST,210;ARAGEBUCK;
End If 
Gosub L_7000
L_2330: ! "Cash/Non Totals
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No sales
If H0[12] = 1 Mat Read #19,2;N1;
If H0[12] <> 1 Mat Read #19,2,150;N1;
X = HWHSE - 1 \ If X < 0 Let X = 0 Else If X > 4 Let X = 4
N1[0,X] = N1[0,X] + T2[1]
N1[1,X] = N1[1,X] + T2[7]
N1[2,X] = N1[2,X] + T2[3]
N1[3,X] = N1[3,X] + T2[4] + T2[6]
N1[4,X] = N1[4,X] + T2[5]
If H0[12] = 1 Mat Write #19,2;N1;
If H0[12] <> 1 Mat Write #19,2,150;N1;
Return 
L_2390: ! "setup for OT 37 And AR Proof
Let A3[0]=0
LET A3[6]=H5[13]-H5[14]
Goto L_2400: ! "let it do the return
L_2400: Rem "================================== ar proof file
Mat Read #34,3,0;P9
X = 1 \ If T2[0] < 0 Let X = -1
P9[0] = P9[0] - (A3[0] * X)
P9[1] = P9[1] - (A3[0] * X) \ P9[2] = P9[2] - (A3[0] * X)
P9[3] = P9[3] - A3[6] \ P9[4] = P9[4] - A3[6] \ P9[5] = P9[5] - A3[6]
P9[6] = P9[6] + 1 \ P9[7] = P9[7] + 1 \ P9[8] = P9[8] + 1
Mat Write #34,3,0;P9;
If Not(H5[8]) Let H5[8] = 1
Mat Read #34,(H5[8] * 10) + 3,0;P9
X = 1 \ If T2[0] < 0 Let X = -1
P9[0] = P9[0] - (A3[0] * X)
P9[1] = P9[1] - (A3[0] * X) \ P9[2] = P9[2] - (A3[0] * X)
P9[3] = P9[3] - A3[6] \ P9[4] = P9[4] - A3[6] \ P9[5] = P9[5] - A3[6]
P9[6] = P9[6] + 1 \ P9[7] = P9[7] + 1 \ P9[8] = P9[8] + 1
Mat Write #34,(H5[8] * 10) + 3,0;P9;
Read #34,0,18;P8
P8 = P8 - (A3[0] * X)
Write #34,0,18;P8;
Return 
L_2500: Rem "============================ commissions
	If P9$[14,14] = "N" Return 
	If H5[7] = 6 Return 
	If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! " EVAP
	For X5 = 0 To 4
		If SplitFlag=0 If X5 > 0 Goto L_2895
		If SLSM[X5] = 0 Goto L_2895
		A$ = " ",A$ \ D4 = 1
		A$[1,3] = SLSM[X5] Using "###"
		A$[4,13] = REFNO Using "##########"
		A$[14,14] = "6"
		S7 = 0 \ S7 = OREF[1]
		S7[1] = REFNO
		s7[2] = CSPLT[x5]
		Search #17,2,1;A$,V1,E \ If E > 1 error 11000
		If Not(E) Goto L_2680
		D4 = 0;E = 2 \ Search #17,1,0;A$,V1,E \ If E error 11000
		SMAT$ = "  ",SMAT$
		For X1 = 0 To 3
			S1[X1] = 0;CS9[X1] = 0
			If X1 < 2 Let S2[X1] = 0;S3[X1] = 0;S4[X1] = 0;S6[X1] = 0
		Next X1
		commDiv = h5[8]
		Mat Write #17,V1,0;S1;
		Mat Write #17,V1,16;S2;
		Mat Write #17,V1,28;S3;
		Mat Write #17,V1,36;S4;
		Mat Write #17,V1,40;S6;
		Mat Write #17,V1,52;SMAT$;
		Mat Write #17,V1,54;S7;
		Mat Write #17,V1,72;CS9;
		!if custom_customer$="HTBERRY" ! no longer custom
		MAT WRITE #17,V1,100;COMMSRVCHG
		!Endif
		Mat Write #17,V1,140;commDiv
		L_2680: Rem EXISTING
		Mat Read #17,V1,0;S1
		Mat Read #17,V1,16;S2
		Mat Read #17,V1,28;S3
		Mat Read #17,V1,36;S4
		Mat Read #17,V1,40;S6
		Mat Read #17,V1,52;SMAT$;
		Mat Read #17,V1,54;S7;
		Mat Read #17,V1,72;CS9
		!if custom_customer$="HTBERRY" ! no longer custom
		MAT READ #17,V1,100;COMMSRVCHG
		Mat Read #17,V1,140;commDiv
		!Endif
		S1[0] = SLSM[X5];S1[1] = H0[7];S1[2] = SLSM[X5 + 5];S1[3] = H0[8]
		if SplitFlag = 1
			If X5>0 Let S1[2]=Slsm[5] ! "comm % is only on main slsm
		else
			if SplitFlag=0 Let CSPLT[x5]=100 ! "split always 100 to the guy
		end if
		For X1 = 0 To 3
			If X1 <= 1 Let S2[X1] = 0
			If X1 <= 1 Let S6[X1] = 0
			CS9[X1] = 0
		Next X1
		S7 = 0 \ S7 = OREF[1]
		S7[1] = REFNO
		if SplitFlag <> 2
			LET s7[2]=csplt[x5] ! commission split %
			LET SplitType = 0
		else
			let s7[2] = SLSM[x5+5]
			Let SplitType = csplt[x5]
		end if
		if SplitFlag = -1
			! category splits
			Let S2[0] = S2[0] + SMER[X5]
			Let S6[0] = S6[0] + SCST[X5]
			Let S6[1] = 0
		else
			! not category splits
			S2[0] = S2[0] + T2[1];S6[0] = S6[0] + T2[17] ! tot merch sale / cost
			S6[1] = S6[1] + T2[18] ! average cost
			! see if there are any extra dollar amounts
			! that are flagged to impact GP outside
			! of merchandise amount
			extraInvDollars = 0
			extraCostDollars = 0
			! record ttl inv$ in each slsm
			If P9$[35,35] = "Y" Let extraInvDollars = extraInvDollars + T2[5] ! inc freight
			If P9$[36,36] = "Y" Let extraInvDollars = extraInvDollars - T2[3] ! inc ord discount
			If P9$[37,37] = "Y" Let extraCostDollars = extraCostDollars + T2[20] ! inc freight cost
			If P9$[38,38] = "Y" Let extraInvDollars = extraInvDollars + T2[6] ! inc other charges
			extraCostDollars = extraCostDollars + TOT[2] ! add misc charge cost for profit
			extraInvDollars = extraInvDollars + TOT[1] ! add misc charge for profit
			! check to see if commission
			! by line involved
			commByLine = 0
			if P60$[24,24] = "Y"
				commByLine = 1
			else
				! even if commission by line
				! flag not set, can still be
				! triggered by line level
				! overrides at product level, etc.
				!
				! If there is extraCostDollars or extraInvDollars
				! and it doesn't appear they were included
				! in commission calculation, we assume
				! that commission by line was tripped
				if extraInvDollars - extraCostDollars <> 0
					merchCommission = FNR((S2[0] - S6[0]) * (S1[2] / 100) * (S7[2] / 100))
					if merchCommission = SCOM[X5]
						! commission doesn't reflect
						! any other header related charges
						! assume commission by line was
						! tripped
						commByLine = 1
					end if
				end if
				! due to rounding issues in the blended commission rate
				! the check above to see if it got triggered can get
				! missed, so don't do any adjustments unless
				! commByLine SUFLAG set.
				! POSSIBLE FUTURE SOLUTION - save unrounded blended
				! rate in invoice header file.
				commByLine = 0
			end if
			! record ttl inv$ in each slsm
			if commByLine = 0
				S6[0] = S6[0] + extraCostDollars ! add misc charge cost for profit
				S2[0] = S2[0] + extraInvDollars ! add misc charge for profit
			end if
		end if
		L_2762: SMAT$[1,2] = HMAT$[1,2]
		S2[1] = S2[1] + SCOM[X5]
		If H5[7] = 10 Let S1[2] = 0 \ S2[1] = 0 \ S2[0] = 0
		S3[0] = H5[7]
		S3[1] = H0[1]
		S4[0] = ARMONTH
		ocs1[0] = s2[1]
		ocs1[1] = s1[2]
		ocs1[2] = s2[0]
		ocs1[3] = s6[0]
		Mat Write #17,V1,0;S1
		Mat Write #17,V1,16;S2
		Mat Write #17,V1,36;S4
		Mat Write #17,V1,28;S3
		Mat Write #17,V1,40;S6
		Mat Write #17,V1,52;SMAT$
		Mat Write #17,V1,54;S7
		Mat Write #17,V1,72;CS9
		MAT WRITE #17,V1,100;COMMSRVCHG
		mat write #17,v1,112;ocs1
		mat write #17,v1,136;SplitFlag
		mat write #17,v1,138;SplitType;
		If D4 = 1 Goto L_2895
		A$ = " ",A$
		A$[1,3] = S1[0] Using "###"
		A$[4,13] = REFNO Using "##########"
		A$[14,14] = "6"
		C = 17 \ D = 1
		Gosub L_5000
		if e error 11000
		A$ = " ",A$
		A$[1,4] = commDiv using "####"
		A$[5,7] = S1[0] Using "###"
		A$[8,17] = S7[1] Using "##########"
		A$[18,18] = "6"
		C = 17 \ D = 2
		Gosub L_5000
		if e error 11000
		if commByLine and p61$[139,139] = "Y" and extraInvDollars - extraCostDollars <> 0
			gosub CommByLineTotalsAdjustment:
		end if
	L_2895: Next X5
Return
CommByLineTotalsAdjustment: !
	!
	! Initialize CommAudit Record
	!
	k_comma1$ = " ",k_comma1$
	K_comma1$[1,3] = S1[0] using "###"
	K_comma1$[4,13] = S7[1] Using "##########"
	K_comma1$[26,26] = "6"
	i=0
	CommAuditKeyLoop: !
		k_comma1$[14,15] = Tim(8) Using "&&"
		k_comma1$[16,17] = Tim(9) Using "&&"
		k_comma1$[18,19] = Tim(10) Using "&&"
		k_comma1$[20,21] = Tim(11) Using "&&"
		k_comma1$[22,23] = Tim(12) Using "&&"
		k_comma1$[24,25] = Tim(13) Using "&&"
		Search #ch_comma,2,1;k_comma1$,R_comma,E
		If Not(E)
			i=i+1
			Signal 3,20 ! pause for new tims
			IF i>10 error 11000
			goto CommAuditKeyLoop:
		end if
	E = 2 \ Search #ch_comma,1,0;k_comma1$,R_comma,E
	If E error 11000
	Search #ch_comma,4,1;k_comma1$,R_comma,E
	If E error 11000
	k_comma2$ = " ",k_comma2$
	k_comma2$[1,6] = 0 Using "######"
	k_comma2$[7,29] = K_comma1$[4,26]
	k_comma2$[30,32] = k_comma1$[1,3]
	Search #ch_comma,4,2;k_comma2$,R_comma,E \ If E Error 11000
	AS1[0] = S1[0] ! rep
	AS1[1] = 6;AS1[2] = 0;AS1[3] = Spc(6)
	AS2[0] = S3[1]
	AS2[1] = URec
	AS3[0] = S2[1]
	AS3[2] = S7[1]
	AS3[3] = S7[0]
	AS3[4] = K_comma1$[14,19]
	AS3[5] = K_comma1$[20,25]
	AORIGCOMM = OCS1[0]
	AS4[0] = 10
	AS4[1] = 0
	AS5[0] = s1[2]
	AS5[1] = s1[2]
	AS5[2] = s2[0]
	! NEW INV $
	s2[0] = s2[0] + extraInvDollars
	AS5[3] = s2[0]
	AS5[4] = S6[0]
	! NEW COST $
	s6[0] = s6[0] + extraCostDollars
	AS5[5] = s6[0]
	! NEW COMMISSION $
	! new GPD * commission rate * split percentage
	s2[1] = FNR((s2[0] - s6[0]) * (s1[2] / 100) * (S7[2] / 100))
	as3[1] = s2[1] ! new commiss $
	SOURCE$ = "247b",b$
	AS_$="COMMISSION BY LINE - ADJUSTMENT FOR ORDER TOTALS",b$
	! write out commission record changes
	Mat Write #17,V1,16;S2
	Mat Write #17,V1,40;S6
	! write out audit record
	Mat Write #ch_comma,R_comma;AS1
	Mat Write #ch_comma,R_comma,8;AS2
	Mat Write #ch_comma,R_comma,16;AS3
	Mat Write #ch_comma,R_comma,52;SOURCE$
	Mat Write #ch_comma,R_comma,62;AS_$
	Write #ch_comma,R_comma,122;AORIGCOMM
	Mat Write #ch_comma,R_comma,128;AS4
	Mat Write #ch_comma,R_comma,132;AS5;
Return
L_3000: Rem "========================== customer file / custsales
If H5[7] = 6 If H5[7] = 10 Goto L_3149
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! " EVAP
Mat Read #3,C0,252;C5
C5[0] = C5[0] - T1 \ C5[1] = C5[1] - T1
C5[2] = C5[2] - FND(L5[3]) \ C5[3] = C5[3] - FND(L5[3])
C5[4] = C5[4] - (FND(L5[3]) - S9[12])
C5[5] = C5[5] - (FND(L5[3]) - S9[12])
Mat Write #3,C0,252;C5;
A3[6] = A3[6] + (FND(L5[3]) - S9[12])
Mat P2 = Zer
Mat Read #6,C0,4;P2;
Gosub L_3150
Write #6,C0,0;H0[4];
Mat Write #6,C0,4;P2;
Write #6,C0,508;H0[8];
L_3149: Return 
L_3150: Rem "====================  subtract from monthly sales buckets
P2[0,0] = P2[0,0] - T1 \ P2[ARMONTH,0] = P2[ARMONTH,0] - T1
P2[0,1] = P2[0,1] - FND(L5[3])
P2[ARMONTH,1] = P2[ARMONTH,1] - FND(L5[3])
P2[0,2] = P2[0,2] - S9[12]
P2[ARMONTH,2] = P2[ARMONTH,2] - S9[12]
Return 
UPDATE_WEEKLYSLS: Rem 2/weeklysls#
If Not(WEEKLYSLSFLAG) Return 
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! " EVAP
If L3
  PRODCODE$ = "Z ZZZZZZZZZZ"
  If NEWL4
    L4 = NEWL4
  Else 
    Return 
  End If 
  If L7[7]
    NETPOCOST = L7[7]
    POCOST = L7[7];AVGCOST = L7[7];BASECOST = L7[7]
  Else 
    NETPOCOST = L5[1]
    POCOST = L5[1];AVGCOST = L5[1];BASECOST = L5[1]
  End If 
Else 
  PRODCODE$ = L2$[1,12]
  Mat Read #5,L4,512;PFU1 \ Mat Read #5,L4,554;PFU2
  Mat Read #5,L4,256;A
  If P9$[32,32] = "Y" ! warehouse pricing
    W$ = " ",W$;W$[1,12] = PRODCODE$;W$[13,14] = LWHSE Using "##"
    Search #25,2,1;W$,W9,E \ If E error 11000
    Mat Read #25,W9,78;W3
    Read #25,W9,812;NETPOCOST;
    POCOST = W3[16];AVGCOST = W3[15];BASECOST = W3[18]
  Else ! regular prod file
    Mat Read #5,L4,156;B
    Read #5,L4,910;BASECOST
    Mat Read #5,L4,1018;PFN;
    POCOST = B[10];AVGCOST = B[21];NETPOCOST = PFN[0]
  End If 
End If 
EXT = 1
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = BASECOST;AMOUNT = 0
If CNVTA Gosub L_20000 \ BASECOST = AMOUNT * EXT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = POCOST;AMOUNT = 0
If CNVTA Gosub L_20000 \ POCOST = AMOUNT * EXT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = NETPOCOST;AMOUNT = 0
If CNVTA Gosub L_20000 \ NETPOCOST = AMOUNT * EXT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = AVGCOST;AMOUNT = 0
If CNVTA Gosub L_20000 \ AVGCOST = AMOUNT * EXT
X$ = H0[8] Using "&&&&&&"
YY = X$[1,2]
MM = X$[3,4]
DD = X$[5,6]
Call "weeknum",MM,DD,YY,WN[]
CUSTCODE = 0
WEEKLYLOOPCTR = 1
LOOP_WEEKLYSLS: Rem
WOY[0] = 0;WOY[1] = 0
For X = 0 To 7
  For Y = 0 To 9 \ DOW[X,Y] = 0 \ Next Y
Next X
SCRATCH$[1,4] = WN[1] Using "&&&&"
SCRATCH$[5,6] = WN[0] Using "##"
SCRATCH$[7,18] = PRODCODE$
SCRATCH$[19,20] = H5[8] Using "##"
SCRATCH$[21,22] = LWHSE Using "##"
SCRATCH$[23,28] = CUSTCODE Using "######"
Search #CH_WEEKLYSLS,2,1;SCRATCH$,REC_WEEKLYSLS,E \ If E > 1 error 11000
If E
  E = 2 \ Search #CH_WEEKLYSLS,1,0;SCRATCH$,REC_WEEKLYSLS,E
  If E error 11000
  Gosub WRITE_WEEKLYSLS
  Search #CH_WEEKLYSLS,4,1;SCRATCH$,REC_WEEKLYSLS,E
  If E error 11000
  SCRATCH$[1,4] = WN[1] Using "&&&&"
  SCRATCH$[5,6] = WN[0] Using "##"
  SCRATCH$[7,12] = CUSTCODE Using "######"
  SCRATCH$[13,24] = PRODCODE$
  SCRATCH$[25,26] = H5[8] Using "##"
  SCRATCH$[27,28] = LWHSE Using "##"
  Search #CH_WEEKLYSLS,4,2;SCRATCH$,REC_WEEKLYSLS,E
  If E error 11000
  SCRATCH$[1,12] = PRODCODE$
  SCRATCH$[13,14] = H5[8] Using "##"
  SCRATCH$[15,16] = LWHSE Using "##"
  SCRATCH$[17,22] = CUSTCODE Using "######"
  SCRATCH$[23,26] = WN[1] Using "&&&&"
  SCRATCH$[27,28] = WN[0] Using "##"
  Search #CH_WEEKLYSLS,4,3;SCRATCH$,REC_WEEKLYSLS,E
  If E error 11000
  SCRATCH$[1,6] = CUSTCODE Using "######"
  SCRATCH$[7,10] = WN[1] Using "&&&&"
  SCRATCH$[11,12] = WN[0] Using "##"
  SCRATCH$[13,24] = PRODCODE$
  SCRATCH$[25,26] = H5[8] Using "##"
  SCRATCH$[27,28] = LWHSE Using "##"
  Search #CH_WEEKLYSLS,4,4;SCRATCH$,REC_WEEKLYSLS,E
  If E error 11000
End If 
Rem {begin src/inc/read.weeklysls.i}
Read #CH_WEEKLYSLS,REC_WEEKLYSLS,0;CUSTCODE
Read #CH_WEEKLYSLS,REC_WEEKLYSLS,4;PRODCODE$
Mat Read #CH_WEEKLYSLS,REC_WEEKLYSLS,16;WOY
Mat Read #CH_WEEKLYSLS,REC_WEEKLYSLS,20;DOW
Mat Read #CH_WEEKLYSLS,REC_WEEKLYSLS,500;WSDIV
Mat Read #CH_WEEKLYSLS,REC_WEEKLYSLS,502;WSWH
Rem {end read.weeklysls.i}
WOY[0] = WN[0]
WOY[1] = WN[1]
WSDIV = H5[8]
WSWH = L4[3]
DOW[0,0] = WN[4] - (WN[3] - 1)
DOW[0,1] = DOW[0,1] - T1
DOW[0,2] = DOW[0,2] - S9[4]
DOW[0,3] = DOW[0,3] - FND(L5[3])
DOW[0,4] = DOW[0,4] - BASECOST
DOW[0,5] = DOW[0,5] - S9[12]
DOW[0,6] = DOW[0,6] - POCOST
DOW[0,7] = DOW[0,7] - NETPOCOST
DOW[0,8] = DOW[0,8] - AVGCOST
DOW[0,9] = DOW[0,9] - GLCOST
DOW[WN[3],0] = WN[2]
DOW[WN[3],1] = DOW[WN[3],1] - T1
DOW[WN[3],2] = DOW[WN[3],2] - S9[4]
DOW[WN[3],3] = DOW[WN[3],3] - FND(L5[3])
DOW[WN[3],4] = DOW[WN[3],4] - BASECOST
DOW[WN[3],5] = DOW[WN[3],5] - S9[12]
DOW[WN[3],6] = DOW[WN[3],6] - POCOST
DOW[WN[3],7] = DOW[WN[3],7] - NETPOCOST
DOW[WN[3],8] = DOW[WN[3],8] - AVGCOST
DOW[WN[3],9] = DOW[WN[3],9] - GLCOST
Gosub WRITE_WEEKLYSLS
If WEEKLYLOOPCTR = 1
  WEEKLYLOOPCTR = 2
  CUSTCODE = H0[4]
  Goto LOOP_WEEKLYSLS
End If 
Return 
WRITE_WEEKLYSLS: Rem
Rem {begin src/inc/write.weeklysls.i}
Write #CH_WEEKLYSLS,REC_WEEKLYSLS,0;CUSTCODE
Write #CH_WEEKLYSLS,REC_WEEKLYSLS,4;PRODCODE$
Mat Write #CH_WEEKLYSLS,REC_WEEKLYSLS,16;WOY
Mat Write #CH_WEEKLYSLS,REC_WEEKLYSLS,20;DOW
Mat Write #CH_WEEKLYSLS,REC_WEEKLYSLS,500;WSDIV
Mat Write #CH_WEEKLYSLS,REC_WEEKLYSLS,502;WSWH
Rem {end write.weeklysls.i}
Return 
L_3200: Rem "========== customer salestax, freight, misc + salestax file
If H5[7] = 6 Or H5[7] = 10 Goto L_3350
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Goto L_3350 ! " EVAP
Mat Read #3,C0,288;C6
Mat Read #3,C0,544;CFIN
Mat Read #3,C0,624;C10
C6[0] = C6[0] - T2[7] \ C6[1] = C6[1] - T2[7]
C6[2] = C6[2] - T2[5] \ C6[3] = C6[3] - T2[5]
C10[0] = C10[0] - T2[20];C10[1] = C10[1] - T2[20]
C6[4] = C6[4] - T2[3] \ C6[5] = C6[5] - T2[3]
C6[6] = C6[6] - T2[4] - T2[6] \ C6[7] = C6[7] - T2[4] - T2[6]
CFIN[2] = CFIN[2] + 1
CFIN[3] = CFIN[3] + 1
Write #3,C0,200;H0[8]
Mat Write #3,C0,288;C6
Mat Write #3,C0,544;CFIN
Mat Write #3,C0,624;C10;
Mat Read #3,C0,734;BPO$;
Mat Read #3,C0,754;BUDG;
If BUDG[0] <= 0 Goto L_3350
If Len(BPO$) < 20 Let BPO$ = BPO$ + "                    "
If BPO$[1,1] <> "" And BPO$[1,5] <> "     " ! "is using Blanket PO
  If BPO$ <> P0$ Goto L_3350
  FLAG[3] = 0
End If 
If Not(FLAG[3]) ! "did NOT update Shiplist Budget $$
  BUDG[1] = BUDG[1] - T2[0]
  Mat Write #3,C0,754;BUDG;
End If 
L_3350: Rem "===== now do sales tax file
! evap - do tax as it won't change!
Read #3,C0,498;TAXTYP
Gosub L_8900
Gosub L_8980
Mat Read #15,h4,0;TAXDESC$;
Mat Read #15,H4,24;D4
Mat Read #15,H4,132;TX0
Mat Read #15,H4,156;TX1
Mat Read #15,H4,222;TX2
If P60$[42,42] <> "Y" ! not tax by line option
  D4[0] = D4[0] - T2[7];D4[3] = D4[3] - T2[7]
  D4[1] = D4[1] - T2[11];D4[4] = D4[4] - T2[11]
  D4[2] = D4[2] - T2[9];D4[5] = D4[5] - T2[9]
  TX0[0] = TX0[0] - T2[8];TX0[2] = TX0[2] - T2[8]
  TX0[1] = TX0[1] - T2[9];TX0[3] = TX0[3] - T2[9]
Else 
  D4[0] = D4[0] - TOT[3];D4[3] = D4[3] - TOT[3]
  D4[1] = D4[1] - MISCCHGS_TAXED;D4[4] = D4[4] - MISCCHGS_TAXED
  !If FTAX<>0 and t2[8]<>0
	!Let D4[1] = D4[1] - T2[5];D4[4] = D4[4] - T2[5]
  !endif
  If FTAX<>0
	IF TAXDESC$[1,1]="+"
		LET D4[1]=D4[1]-T2[5];D4[4]=D4[4]-T2[5]
	else
		IF t2[8]<>0
			Let D4[1] = D4[1] - T2[5];D4[4] = D4[4] - T2[5]
		ENDIF
	ENDIF
  endif
  If H5[7] <> 6 And H5[7] <> 10
    If DTAX Let D4[1] = D4[1] + T2[3];D4[4] = D4[4] + T2[3]
    If HTAX Let D4[1] = D4[1] - T2[6];D4[4] = D4[4] - T2[6]
  End If 
End If 
If H5[7] = 6 Or H5[7] = 10
  TX1[4] = TX1[4] - T2[3];TX2[4] = TX2[4] - T2[3]
  TX1[7] = TX1[7] - T2[6];TX2[7] = TX1[7] - T2[6]
Else 
  If DTAX
    TX1[0] = TX1[0] - T2[3];TX2[0] = TX2[0] - T2[3]
  Else 
    TX1[4] = TX1[4] - T2[3];TX2[4] = TX2[4] - T2[3]
  End If 
  If HTAX
    TX1[3] = TX1[3] - T2[6];TX2[3] = TX2[3] - T2[6]
  Else 
    TX1[7] = TX1[7] - T2[6];TX2[7] = TX2[7] - T2[6]
  End If 
End If 
!If FTAX<>0 and t2[8]<>0
!  TX1[2] = TX1[2] - T2[5];TX2[2] = TX2[2] - T2[5]
If FTAX<>0 
	IF TAXDESC$[1,1]="+"
		TX1[2] = TX1[2] - T2[5];TX2[2] = TX2[2] - T2[5]	
	else
		IF t2[8]<>0 ! taxable merch freight taxed
			TX1[2] = TX1[2] - T2[5];TX2[2] = TX2[2] - T2[5]	
		else
			TX1[6] = TX1[6] - T2[5];TX2[6] = TX2[6] - T2[5]
		ENDIF
	ENDIF
Else 
  TX1[6] = TX1[6] - T2[5];TX2[6] = TX2[6] - T2[5]
End If 
TX1[1] = TX1[1] - MISCCHGS_TAXED;TX2[1] = TX2[1] - MISCCHGS_TAXED
TX1[5] = TX1[5] - MISCCHGS_NONTAXED;TX2[5] = TX2[5] - MISCCHGS_NONTAXED
Mat Write #15,H4,24;D4
Mat Write #15,H4,132;TX0
Mat Write #15,H4,156;TX1
Mat Write #15,H4,222;TX2;
Return 
L_3500: Rem ENTERED BY SALES
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If H5[0] < 0 Or H5[0] > 999 Or Fra(H5[0]) Let H5[0] = 999
Mat Read #21,H5,20;EB
Gosub L_3560
Mat Write #21,H5,20;EB
Mat Read #21,H5,74;EB
Gosub L_3560
Mat Write #21,H5,74;EB;
Return 
L_3560: Rem ENTD BY ROUTINE
For X = 0 To 5
  If X = 2 Let EB[X] = EB[X] - T2[7] \ Goto L_3580
  If X = 4 Let EB[X] = EB[X] - T2[6] + T2[4] \ Goto L_3580
  EB[X] = EB[X] - T2[X]
L_3580: Next X
EB[6] = EB[6] - (H5[13] - H5[14]);EB[7] = EB[7] + 1
EB[8] = EB[8] + NOLINES
Return 
L_3600: Rem "======================================== cm totals
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
X = L9[1] \ If X < 0 Let X = 0 Else If X > 8 Let X = 8
Mat Read #16,L3[3];Q2
Mat Read #16,L3[3],54;Q3
Q2[X] = Q2[X] + FND(L5[3])
Q3[X] = Q3[X] + S9[12]
Mat Write #16,L3[3];Q2
Mat Write #16,L3[3],54;Q3;
Return 
L_3700: Rem "==================================== division file (DIVFLE)
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If H5[8] < 1 Or H5[8] > 99 Let H5[8] = 1
Mat Read #29,H5[8],28;D0
D0[0] = D0[0] - T2[1]
D0[1] = D0[1] - T2[17]
D0[3] = D0[3] + 1
D0[4] = D0[4] - T2[1]
D0[5] = D0[5] - T2[17]
D0[7] = D0[7] + 1
Mat Write #29,H5[8],28;D0;
Return 
L_3800: Rem "============================= cmtot (freight)
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
X = OWHT1[1] \ If X < 0 Let X = 0 Else If X > 8 Let X = 8
Mat Read #16,0;Q2
Mat Read #16,0,54;Q3;
Q2[X] = Q2[X] + T2[5]
Q3[X] = Q3[X] + T2[20]
Mat Write #16,0;Q2;
Mat Write #16,0,54;Q3;
Return 
L_3900: Rem "============================== date breakdown
Y9 = J$[1,2]
M = J$[3,4]
D = J$[5,6]
D9 = 365 * Y9 + X9[M] + D
If M > 2 If Not(Fra(Y9 / 4)) Let D9 = D9 + 1
Return 
L_4000: Rem "================================ delete order
A9 = 0
Mat Read #8,H1;H0;
E = 3 \ Search #9,1,0;A$,H0[2],E \ If E error 11000
E = 3 \ Search #10,1,0;A$,H0[3],E \ If E error 11000
A$ = " ",A$
A$[1,2] = H0[0] Using "##"
A$[3,9] = N0 Using M$[1,6]
A$[10] = ""
Search #8,2,1;A$,V1,E \ If E error 11000
Search #8,5,1;A$,V1,E \ If E error 11000
A$ = " ",A$
A$[1,6] = H0[4] Using M$[1,6]
A$[7,12] = N0 Using M$[1,6]
A$[13] = ""
Search #8,2,2;A$,V1,E \ If E error 11000
Search #8,5,2;A$,V1,E \ If E error 11000
A$ = " ",A$
A$[1,3] = H0[11] Using "###"
A$[4,9] = N0 Using M$[1,6]
A$[10] = ""
Search #8,2,3;A$,V1,E \ If E > 1 error 11000
Search #8,5,3;A$,V1,E \ If E error 11000
E = 3;V1 = H1 \ Search #8,1,0;A$,V1,E \ If E error 11000
Return 
L_4300: Rem "======================================= slscurr
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If Not(C8[2]) Return 
If L3 Let A2$ = "Z ZZZZZZZZZZ" \ Goto L_4330
Read #5,L4,139;A2$;
L_4330: C2 = H0[4]
Mat P2 = Zer
A$ = " ",A$
A$[1,6] = C2 Using "######"
A$[7,18] = A2$[1,12]
A$[19,20] = LWHSE Using "##"
Search #18,2,1;A$,R1,E
If E > 1 error 11000
If E = 1 Gosub L_4500 \ Goto L_4330
Mat Read #18,R1,16;P2
Gosub L_3150
Mat Write #18,R1,16;P2;
if sqlChan >= 0
	e = slscurr_UpdateSQLFromDL4(e$, intCo, a$, sqlChan,18)
	if e<>1 error 11000
end if
Return 
L_4500: Rem NEW REC
E = 2 \ Search #18,1,0;A$,R1,E
If E error 11000
Write #18,R1;A$[7,18];
Write #18,R1,12;C2;
For C = 0 To 12
  For I = 0 To 2
    P2[C,I] = 0
  Next I
Next C
Mat Write #18,R1,16;P2;
Write #18,R1,254;LWHSE;
Mat Write #18,R1,256;P2;
C = 18 \ D = 1 \ V1 = R1
Gosub L_5000
If E > 1 error 11000
If Not(E) Goto L_4650
E = 3 \ Search #18,1,0;A$,R1,E
Return 
L_4650: Rem DIR #2
A$ = " ",A$
A$[1,12] = A2$[1,12]
A$[13,18] = C2 Using "######"
A$[19,20] = LWHSE Using "##"
C = 18 \ D = 2 \ V1 = R1
Gosub L_5000
If E error 11000
Return 
L_4800: Rem sales tax by line
If P60$[42,42] <> "Y" Return 
If L6[5] Let TAXREC = L6[5] Else Let TAXREC = H4
Mat Read #15,TAXREC,24;D4; \ Mat Read #15,TAXREC,132;TX0
D4[0] = D4[0] - LTAX1;D4[3] = D4[3] - LTAX1
X3[8]=L6[5] \ if custom_customer$="MORRISETTE" let x3[8]=LTAX1
If X3[8] ! was L6[5] (custom morrisette)
  TX0[0] = TX0[0] - L5[3];TX0[2] = TX0[2] - L5[3]
  D4[1] = D4[1] - L5[3];D4[4] = D4[4] - L5[3]
Else 
  TX0[1] = TX0[1] - L5[3];TX0[3] = TX0[3] - L5[3]
  D4[2] = D4[2] - L5[3];D4[5] = D4[5] - L5[3]
End If 
Mat Write #15,TAXREC,24;D4 \ Mat Write #15,TAXREC,132;TX0;
Return 
L_5000: Rem "=============================== insert dir
Search #C,4,D;A$,V1,E \ If E > 2 error 11000
If Not(E) Return 1
Return ! Print 'RB';A$;"  ALREADY IN FILE!" \ Return 
L_5200: Rem "============================ product sales history
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If NEWL4 If L3 Let L4 = NEWL4
If Not(NEWL4) If L3 Return 
P1 = L4
Mat P2 = Zer
Mat Read #4,P1,16;P2
Gosub L_3150
Mat Write #4,P1,16;P2;
If L3 Let L4 = OLDL4
Return 
L_5500: Rem CUST.REC.#
A$ = " ",A$
A$[1,6] = H0[4] Using M$[1,6]
Search #3,2,1;A$,V1,E
C0 = V1
If Not(E) Return 
If E > 1 error 11000
Msg$="CUSTOMER # "+A$[1,6]+" NOT FOUND!"
error 11000
L_5600: Rem "================================= salesman file
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
For X5 = 0 To 4
  IF SplitFlag = 0 If X5 > 0 Goto L_5635
  If SLSM[X5] = 0 Goto L_5635
  A$ = " ",A$
  A$ = SLSM[X5] Using "###"
  Search #13,2,1;A$,V1,E \ If E > 1 error 11000
  If E Msg$="SALESMAN # "+A$+" NOT FOUND!" \ error 11000
  Mat Read #13,V1,118;S5
  S5[2] = S5[2] - SCOM[X5]
  S5[3] = S5[3] - SCOM[X5]
  Mat Write #13,V1,118;S5;
L_5635: Next X5
Return 
L_5650: Rem "================================ salesman file / sls
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
A$ = " ",A$
A$ = L4[1] Using "###"
Search #13,2,1;A$,V1,E \ If E error 11000
Mat Read #13,V1,142;D2
If Not(L3[3]) Let L3[3] = 1
X = L3[3] - 1
D2[X,0] = D2[X,0] - T1;D2[X,1] = D2[X,1] - T1
D2[X,2] = D2[X,2] - FND(L5[3])
D2[X,3] = D2[X,3] - FND(L5[3])
D2[X,4] = D2[X,4] - (FND(L5[3]) - S9[12])
D2[X,5] = D2[X,5] - (FND(L5[3]) - S9[12])
Mat Write #13,V1,142;D2;
Mat P2 = Zer
Mat Read #20,V1,4;P2
Gosub L_3150
Mat Write #20,V1,4;P2
Write #20,V1,0;L4[1]
Write #20,V1,508;H0[8];
Return 
L_5900: Rem CHK BILLTO (And Posting)
If P61$[41,41] = "Y" ! "Chk Posting Customer 1st
  C9 = C12[1];FLAG[2] = 1
  Gosub CHKCCODE
  If E Let C12[1] = H0[1]
Else 
  C12[1] = H0[1]
End If 
FLAG[2] = 0;C9 = H0[1]
Gosub CHKCCODE
Return 
CHKCCODE: Rem "Check on Cust Code
A$ = " ",A$ \ A$ = C9 Using "######"
Search #3,2,1;A$,V1,E
If Not(E) Return 
If E > 1 error 11000
If FLAG[2] Return 
Msg$="BILL TO CUSTOMER # "+A$[1,6]+" NOT FOUND!"
error 11000
L_6000: Rem "============================= clear message file
A$ = " ",A$
A$[1,6] = H0[7] Using M$[1,6]
L_6030: Search #14,3,1;A$,V1,E
X2 = A$[1,6]
If E Return 
If X2 <> H0[7] Return 
M1$ = " ",M1$
Write #14,V1;M1$;
Search #14,5,1;A$,V1,E
If E error 11000
E = 3
Search #14,1,0;A$,V1,E
If E error 11000
Goto L_6030
L_6200: Rem ! "================= clear order line tag file
If Not(ROLTAGFLAG) Return 
A$ = " ",A$
A$[1,6] = H0[7] Using M$[1,6]
L_6230: Search #45,3,1;A$,R45,E
If E Return 
X2 = A$[1,6]
If X2 <> H0[7] Return 
TL2[0] = 0 \ TL2[1] = 0
LINENUM = 0
LPONUM$ = " ",LPONUM$
LJOBNUM$ = " ",LJOBNUM$
PSNUM$ = " ",PSNUM$
MSG1$ = " ",MSG1$
MSG2$ = " ",MSG2$
Mat Write #45,R45,0;TL2;
Write #45,R45,12;LINENUM;
Write #45,R45,14;LPONUM$;
Write #45,R45,44;LJOBNUM$;
Write #45,R45,74;PSNUM$;
Write #45,R45,104;MSG1$;
Write #45,R45,134;MSG2$;
Search #45,5,1;A$,R45,E
If E error 11000
E = 3
Search #45,1,0;A$,R45,E
If E error 11000
Goto L_6230
L_6170: Rem "=========================== substitute prod sales history
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If L3 Return 
Read #5,L4,139;A2$;
L_6185: WHSE = LWHSE
Mat P2 = Zer
A$ = " ",A$
A$[1,12] = S3$[21,33]
A$[13,24] = A2$[1,12]
A$[25,26] = WHSE Using "##"
Search #24,2,1;A$,R1,E
If E > 1 error 11000
If E = 1 Gosub L_6255 \ Goto L_6185
Mat Read #24,R1,24;P2;
Gosub L_3150
Mat Write #24,R1,24;P2;
Return 
L_6255: Rem "substitute record not there. make one!
E = 2 \ Search #24,1,0;A$,R1,E
If E error 11000
Write #24,R1;A$[1,24];
For C = 0 To 12
  For I = 0 To 2
    P2[C,I] = 0
  Next I
Next C
Mat Write #24,R1,24;P2;
Write #24,R1,258;WHSE;
C = 24 \ D = 1 \ V1 = R1
Gosub L_5000
If E > 1 error 11000
If Not(E) Goto L_6365
E = 3 \ Search #24,1,0;A$,R1,E
Return 
L_6365: Rem "build dir #2
A$ = " ",A$
A$[1,12] = A2$[1,12]
A$[13,24] = S3$[21,33]
A$[25,26] = WHSE Using "##"
C = 24 \ D = 2 \ V1 = R1
Gosub L_5000
If E error 11000
Return 
SUBSTUSG: Rem "Update Usage of Original if Substituted
SUBSUP = 0
If P61$[48,48] <> "Y" Return 
If S3$[21,21] = "" Or S3$[21,25] = "     " Return 
W$ = " ",W$;W$ = S3$[21,32]
Search #5,2,1;W$,R[5],E \ If E > 1 error 11000
If E = 1 Return 
Mat Read #5,R[5],256;OPA;
Mat Read #5,R[5],512;OPFU1;
Mat Read #5,R[5],554;OPFU2;
OPT1 = T1
If OLS2[0] = 1 Or OLS2[0] = 2 ! "it's been cut
  If OLS2[1] Let OPT1 = OPT1 * OLS2[1]
End If 
If PFU1[0] = OPFU1[0] Goto GET_OPWHSE
For X = 1 To 7
  If OPFU1[X] ! "only non-zero
    For X1 = 0 To 7
      If PFU1[X1] And OPFU1[X] = PFU1[X1] Goto GOT_OPUM
    Next X1
  End If 
Next X
Return 
GOT_OPUM: Rem "convert subs prod from base to match um for original
OPUM = X;SPUM = X1
For X = 0 To 33
  SPA[X] = A[X]
  If X <= 20 Let SPFU1[X] = PFU1[X]
  If X <= 6 Let SPFU2[X] = PFU2[X]
Next X
CNVTU[0] = 0;CNVTU[1] = PFU1[SPUM];CNVTU[2] = 1
CNVTA = T1 \ Gosub L_20000
OPT1 = AMOUNT
For X = 0 To 33
  A[X] = OPA[X]
  If X <= 20 Let PFU1[X] = OPFU1[X]
  If X <= 6 Let PFU2[X] = OPFU2[X]
Next X
CNVTU[0] = PFU1[OPUM];CNVTU[1] = 0;CNVTU[2] = 1
CNVTA = OPT1 \ Gosub L_20000
OPT1 = AMOUNT
For X = 0 To 33
  A[X] = SPA[X]
  If X <= 20 Let PFU1[X] = SPFU1[X]
  If X <= 6 Let PFU2[X] = SPFU2[X]
Next X
GET_OPWHSE: Rem "get whse record for original prod
W$ = " ",W$;W$[1,12] = S3$[21,32];W$[13,14] = LWHSE Using "##"
Search #25,2,1;W$,W9,E \ If E > 1 error 11000
If E = 1 Goto SUBSTUDONE
Mat Read #25,W9,228;W5
Mat Read #25,W9,800;Whmisc
If H5[7] = 7 Goto S_7934
If L3[0] Or Not(L3[1]) Goto SUBSTUDONE
If H5[7] = 8 goto S_7945 ! Or H5[7] = 16 Goto S_7945
!if custom_customer$<>"MAYFIELD" ! mayfield - update usage on ot16 #2516
	if h5[7]=16 and whmisc[6]=0 goto S_7945 ! Whse flag - no update
!Endif ! task 8286 - back to normal (no 8 or 16 update)
S_7934: ! add custom stuff
origT1 = T1
If custom_customer$<>"HTBERRY" ! all else
	W5[0] = W5[0] - OPT1;W5[ARMONTH] = W5[ARMONTH] - OPT1
	gosub DoUpdateProdWhStat:
Else ! is htberry
	IF H5[7]<>35
		LET W5[0] = W5[0] - OPT1;W5[ARMONTH] = W5[ARMONTH] - OPT1
		gosub DoUpdateProdWhStat:
	end if
Endif
T1 = origT1
SUBSUP = 1
S_7945: Rem "
Mat Write #25,W9,228;W5;
SUBSTUDONE: Rem "
Return 
L_6640: Rem "=============================== non stock sales history
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
L_6655: C2 = S9[14] \ WHSE = LWHSE
If S3$[1,4] = "    " Or Len(S3$) = 0 Let S3$[1,20] = "99999999999999999999"
Mat N2 = Zer
A$ = " ",A$
A$[1,6] = S9[14] Using "######"
A$[7,26] = S3$[1,20]
A$[27,28] = WHSE Using "##"
Search #23,2,1;A$,R1,E
If E > 1 error 11000
If E = 1 Gosub L_6725 \ Goto L_6655
Mat Read #23,R1,24;N2
Mat Read #23,R1,416;NS
Gosub L_6890
Mat Write #23,R1,24;N2
Mat Write #23,R1,416;NS;
Return 
L_6725: Rem "non stock record not there. make one!
E = 2 \ Search #23,1,0;A$,R1,E
If E error 11000
Write #23,R1;A$[7,26]
Write #23,R1,20;C2
For C = 0 To 12
  For I = 0 To 4
    N2[C,I] = 0
  Next I
Next C
Mat Write #23,R1,24;N2
Write #23,R1,414;WHSE
NS[0] = 0;NS[1] = 0 \ Mat Write #23,R1,416;NS
C = 23 \ D = 1 \ V1 = R1
Gosub L_5000
If E > 1 error 11000
If Not(E) Goto L_6835
E = 3 \ Search #23,1,0;A$,R1,E
Return 
L_6835: Rem "build dir #2
A$ = " ",A$
A$[1,20] = S3$[1,20]
A$[21,26] = S9[14] Using "######"
A$[27,28] = WHSE Using "##"
C = 23 \ D = 2 \ V1 = R1
Gosub L_5000
If E error 11000
Return 
L_6890: Rem "=========================== subtract from non stock sales buckets
N2[0,0] = N2[0,0] - T1 \ N2[ARMONTH,0] = N2[ARMONTH,0] - T1
N2[0,1] = N2[0,1] - FND(L5[3])
N2[ARMONTH,1] = N2[ARMONTH,1] - FND(L5[3])
N2[0,2] = N2[0,2] - S9[12]
N2[ARMONTH,2] = N2[ARMONTH,2] - S9[12]
N2[0,3] = N2[0,3] - FNR(Abs((L6[2] * L7[4]) / UNF[4]))
N2[ARMONTH,3] = N2[ARMONTH,3] - FNR(Abs((L6[2] * L7[4]) / UNF[4]))
N2[0,4] = N2[0,4] - S9[4]
N2[ARMONTH,4] = N2[ARMONTH,4] - S9[4]
Return 
L_7000: Rem "============================ applied to invoice
T9 = Int(100 * Fra(A2[3]))
If T9 <> 6 Return 
If OREF[1] = H0[7] Return 
If P61$[66,66] = "N" Return 
S3[0] = V1
K1$ = " ",K1$ \ K1$[1,6] = C9 Using "######"
K1$[7,16] = OREF[1] Using "##########";K1$[17,17] = "1"
Search #7,2,1;K1$,R1,E
If E = 1 Return 
If E error 11000
Mat Read #7,R1,0;IA2;
Mat Read #7,R1,24;A6
if p61$[136,136]="Y"
	Mat read #7,r1,150;arcurrid;
	mat read #7,r1,342;arcurrfact;
	if arcurrid<>ohcurrid return ! not the same currency
	if arcurrfact<>ohcurrfact return ! not the same exchange rate will have variance needs to be pulled up in c/r
endif
T9 = A6 - A6[1] - A6[2]
If T9 <= 0 Return 
T9[1] = A3[0] - A3[1] - A3[2]
If Not(T9[1]) Return 
If T9[1] > T9 Let T9[1] = T9
KEYCUST$ = IA2[2] Using "######"
BUCK = Int(IA2[3])
If BUCK < 0 Let BUCK = 0
If BUCK > 5 Let BUCK = 5
Search #3,2,1;KEYCUST$,REC_CUST,E \ If E error 11000
Mat Read #3,REC_CUST,210;ARAGEBUCK
A6[1] = A6[1] + T9[1]
ARAMT = T9[1]
If Int(Fra(IA2[3]) * 100) > 5 And BUCK <> 1 Let ARAMT = - (ARAMT)
ARAGEBUCK[BUCK] = ARAGEBUCK[BUCK] - ARAMT
Mat Write #3,REC_CUST,210;ARAGEBUCK;
Mat Write #7,R1,24;A6
Write #7,R1,4;ARDATE;
Mat Read #7,S3,0;A2;
Mat Read #7,S3,24;A3
BUCK = Int(A2[3])
If BUCK < 0 Let BUCK = 0
If BUCK > 5 Let BUCK = 5
KEYCUST$ = A2[2] Using "######"
Search #3,2,1;KEYCUST$,REC_CUST,E \ If E error 11000
Mat Read #3,REC_CUST,210;ARAGEBUCK
ARAMT = T9[1]
If Int(Fra(A2[3]) * 100) > 5 And BUCK <> 1 Let ARAMT = - ARAMT
A3[1] = A3[1] + T9[1]
ARAGEBUCK[BUCK] = ARAGEBUCK[BUCK] - ARAMT
Mat Write #3,REC_CUST,210;ARAGEBUCK;
Mat Write #7,S3,24;A3;
Write #7,S3,4;ARDATE;
If P61$[3,3] <> "Y" Return 
For X = 0 To 10 \ ARL1[X] = 0 \ Next X
For X = 0 To 3 \ ARL2[X] = 0 \ Next X
ARL1[0] = C9;ARL1[2] = 6;ARL3[0] = ARREF[0];ARL3[1] = OREF[1]
ARL1[4] = 1;ARL1[5] = 247;ARL1[6] = ARDATE;ARL1[7] = H0[8]
ARL1[9] = JRNL;ARL2[0] = T9[1];ARL2[2] = C9
K40$ = " ",K40$;K40$[1,6] = ARL1[0] Using "######"
K40$[7,16] = ARL3[0] Using "##########"
K40$[17,17] = ARL1[2] Using "#";K40$[19,28] = ARL3[1] Using "##########"
K40$[29,29] = ARL1[4] Using "#";K41$ = K40$;K41$[31,36] = "999999"
Search #40,6,1;K41$,ARREC,E \ If E = 2 Goto L_7270
If E error 11000
If K41$[1,29] <> K40$[1,29] Goto L_7270
ARL1[10] = K41$[31,36];ARL1[10] = ARL1[10] + 1
L_7270: K40$[31,36] = ARL1[10] Using "######"
E = 2 \ Search #40,1,0;K40$,ARREC,E \ If E error 11000
Mat Write #40,ARREC,0;ARL1; \ Mat Write #40,ARREC,44;ARL2;
Mat Write #40,ARREC,68;ARL3;
Search #40,4,1;K40$,ARREC,E \ If E error 11000
For X = 0 To 10 \ ARL1[X] = 0 \ Next X
For X = 0 To 3 \ ARL2[X] = 0 \ Next X
ARL1[0] = C9;ARL1[2] = 1;ARL3[0] = OREF[1];ARL3[1] = ARREF
ARL1[4] = 6;ARL1[5] = 247;ARL1[6] = ARDATE;ARL1[7] = H0[8]
ARL1[9] = JRNL;ARL2[0] = - T9[1];ARL2[2] = C9
K40$ = " ",K40$;K40$[1,6] = ARL1[0] Using "######"
K40$[7,16] = ARL3[0] Using "##########"
K40$[17,17] = ARL1[2] Using "#";K40$[19,28] = ARL3[1] Using "##########"
K40$[29,29] = ARL1[4] Using "#";K41$ = K40$;K41$[31,36] = "999999"
Search #40,6,1;K41$,ARREC,E \ If E = 2 Goto L_7365
If E error 11000
If K41$[1,29] <> K40$[1,29] Goto L_7365
ARL1[10] = K41$[31,36];ARL1[10] = ARL1[10] + 1
L_7365: K40$[31,36] = ARL1[10] Using "######"
E = 2 \ Search #40,1,0;K40$,ARREC,E \ If E error 11000
Mat Write #40,ARREC,0;ARL1; \ Mat Write #40,ARREC,44;ARL2;
Mat Write #40,ARREC,68;ARL3;
Search #40,4,1;K40$,ARREC,E \ If E error 11000
Return 
L_7400: Rem "================================ update non stock sales
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 goto L_7495: ! "EVAP - No Sales Update
Gosub L_30000
Gosub L_10500 \ T1 = SUNIT[2]
IF H3[1]=3 LET T1=0 \ LET L3[1]=0 ! PRICE CORRECTION
If Not(L4) Let HA3[1] = 0 \ Goto L_7495
Mat Read #12,L4,120;HA3
L8 = L3[3]
L8[1] = - T1
L8[2] = - L5[1]
L8[3] = - OLM[3]
L8[4] = - L5[3]
X2 = -1
Write #12,L4,8;X2;
OLDL4 = L4 \ NEWL4 = 0
NS$ = " ",NS$ \ NS$[1,12] = "Z ZZZZZZZZZZZZ"
Search #5,2,1;NS$,L4,E
If E Let L4 = 0 Else Let NEWL4 = L4
If L4 Goto L_1490 Else Let L4 = OLDL4
L_7495: Goto L_1600
L_7900: Rem "==================================== update warehouse file
If L3[0] Goto L_7954
SUBSUP = 0
If Int(S9[16]) = 1 Gosub SUBSTUSG
W$ = " ",W$;W$[1,12] = L2$[1,12];W$[13,14] = LWHSE Using "##"
Search #25,2,1;W$,W9,E \ If E > 1 error 11000
If E =1 gosub L_10000 ! build it - not error!
Mat Read #25,W9,78;W3
Mat Read #25,W9,228;W5
Mat read #25,W9,800;Whmisc
If L3[0] Or Not(L3[1]) Goto L_7954
If H5[7] = 8 Goto L_7946
!if custom_customer$<>"MAYFIELD" ! mayfield - update usage on ot16 #2516
	if h5[7]=16 AND WHMISC[6]=0 goto L_7946 ! Whse flag - no update
!Endif
if custom_customer$="HTBERRY"
	if h5[7]=35 goto L_7946   ! " cct220357
Endif
If Not(SUBSUP)
	Let W5[0] = W5[0] - T1;W5[ARMONTH] = W5[ARMONTH] - T1
	gosub DoUpdateProdWhStat:
end if
L_7946: Mat Write #25,W9,78;W3
Mat Write #25,W9,228;W5;
L_7954: Return 
L_8000: Rem "================================== DIVISION HISTORY FILE
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If Not(L3[0]) Let A2$[1,12] = L2$[1,12] Else Let A2$[1,12] = "Z ZZZZZZZZZZ"
KEY1$ = " ",KEY1$
KEY1$[1,6] = H0[4] Using "######"
KEY1$[7,10] = L9[1] Using "####"
KEY1$[11,22] = A2$[1,12]
KEY1$[23,24] = H5[7] Using "##"
KEY1$[25,26] = H5[8] Using "##"
KEY1$[27,28] = LWHSE Using "##"
KEY1$[29,30] = MT$[1,2]
KEY1$[31,32] = L3[3] Using "##"
KEY1$[33,36] = L2$[17,20]
Search #2,2,1;KEY1$,R2,E \ If E > 1 error 11000
If Not(E) Goto L_8330
R2 = 0
E = 2 \ Search #2,1,0;KEY1$,R2,E \ If E error 11000
KEY2$ = " ",KEY2$
KEY2$[1,8] = KEY1$[29,36]
KEY2$[9,20] = KEY1$[11,22]
KEY2$[21,24] = KEY1$[25,28]
KEY2$[25,26] = KEY1$[23,24]
KEY2$[27,36] = KEY1$[1,10]
KEY3$ = " ",KEY3$
KEY3$[1,4] = KEY2$[21,24]
KEY3$[5,14] = KEY2$[27,36]
KEY3$[15,34] = KEY2$[1,20]
KEY3$[35,36] = KEY2$[25,26]
KEY4$ = " ",KEY4$
KEY4$[1,4] = KEY3$[1,4]
KEY4$[5,24] = KEY3$[15,34]
KEY4$[25,34] = KEY3$[5,14]
KEY4$[35,36] = KEY3$[35,36]
KEY5$ = " ",KEY5$
KEY5$[1,4] = KEY3$[1,4]
KEY5$[5,6] = KEY3$[35,36]
KEY5$[7,36] = KEY3$[5,34]
KEY6$ = " ",KEY6$
KEY6$[1,12] = KEY3$[23,34]
KEY6$[13,16] = KEY3$[1,4]
KEY6$[17,28] = KEY4$[25,36]
KEY6$[29,36] = KEY2$[1,8]
Search #2,4,1;KEY1$,R2,E \ If E error 11000
Search #2,4,2;KEY2$,R2,E \ If E error 11000
Search #2,4,3;KEY3$,R2,E \ If E error 11000
Search #2,4,4;KEY4$,R2,E \ If E error 11000
Search #2,4,5;KEY5$,R2,E \ If E error 11000
Search #2,4,6;KEY6$,R2,E \ If E error 11000
For X = 0 To 12 \ For Y = 0 To 2
    P2[X,Y] = 0;LYP2[X,Y] = 0
  Next Y \ Next X
For X = 0 To 12 \ GLCTY[X] = 0 \ Next X
DSP3[0] = L9[1]
DSP3[1] = LWHSE
DSP3[2] = H5[8]
DSP3[3] = H5[7]
DSP3[4] = L3[3]
DSP3$ = " ",DSP3$
DSP3$[1,4] = L2$[17,20]
DSP3$[5,6] = MT$[1,2]
C2 = H0[4]
Mat Write #2,R2,0;A2$
Mat Write #2,R2,12;C2
Mat Write #2,R2,16;P2
Mat Write #2,R2,250;LYP2
Mat Write #2,R2,488;DSP3
Mat Write #2,R2,508;DSP3$
Mat Write #2,R2,514;GLCTY
Mat Write #2,R2,592;GLCTY;
L_8330: Mat Read #2,R2,16;P2
If P9$[20,20] <> "F" Goto L_8350
If Not(L3[0]) Goto L_8350
T1 = S9[4]
If H3[1] = 3 Let T1 = 0
L_8350: Gosub L_3150
T1 = L7[4]
If H3[1] = 3 Let T1 = 0
Mat Write #2,R2,16;P2;
Mat Read #2,R2,514;GLCTY
GLCTY[0] = GLCTY[0] - GLCOST
GLCTY[ARMONTH] = GLCTY[ARMONTH] - GLCOST
Mat Write #2,R2,514;GLCTY;
If RDMSFLAG System "echo " + Str$(R2) + " >> 6/divhaccept"
Return 
L_8900: Rem CHECK TO SEE IF FREIGHT IS TAXABLE
FTAX = 0 \ HTAX = 0 \ DTAX = 0 \ MTAX = 0
If SRN[4] Let TAXTYP = SRN[4]
Mat Read #30,TAXTYP,36;TAX;
FTAX = TAX[99]
DTAX = TAX[100]
MTAX = TAX[98]
HTAX = TAX[97]
Return 
L_8980: Rem =============  misc charges - taxable & nontaxable
MISCCHGS_TAXED = 0;MISCCHGS_NONTAXED = 0;FREIGHTTAX = 0;FREIGHTNONTAX = 0
For X = 0 To 9
  If MCTXBL[X] = 0
    MISCCHGS_NONTAXED = MISCCHGS_NONTAXED + MCHARGE[X,0]
  Else 
    MISCCHGS_TAXED = MISCCHGS_TAXED + MCHARGE[X,0]
  End If 
Next X
Return 

L_10000: Rem "create sprodwhse record
WHPROD$[1,12] = W$[140,151];WHBLD[0] = 25;WHBLD[1] = LWHSE;WHBLD[2] = B[24]
call mxwhcreate(e$,IntCo,WHPROD$,WHBLD[])
! e$=error messages
! intco=Company ID #
! WHPROD$[1,12]=ITEM CODE
! WHBLD[0]=WHSE CHANNEL, WHBLD[1]=WHSE #, WHBLD[2]=RECNO TO SEND BACK
! ALSO: seems whbld[1] can have a fractional # - the default whse to copy
! ENTER DIMS:  WHPROD$[12],3%,WHBLD[2]
W9=Whbld[2];E=0
Return
L_10500: Rem CONVERT TO SELLING AND PRICE UNIT (set-up for ORDSHIPHSTx)
For X = 0 To 2
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 2];AMOUNT = 0
  If CNVTA Gosub L_20000
  SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1];AMOUNT = 0
If CNVTA Gosub L_20000
L6[1] = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3];AMOUNT = 0
If CNVTA Gosub L_20000
PUNIT = AMOUNT
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UN[0] > 0 Mat Read #27,UN[0],10;SUNIT$;
If UN[1] > 0 Mat Read #27,UN[1],10;PUNIT$;
Return 
L_11000: Rem "================================== calculate invoice due date
DUED = H0[8]
If Not(H0[8]) Goto L_11120
If Fra(H0[12]) Or H0[12] <= 0 Or H0[12] > 99 Goto L_11120
Mat Read #50,H0[12],30;DDAY;
Read #50,H0[12],76;CDAY;
X$ = H0[8] Using "&&&&&&"
J9[0] = X$[3,4];J9[1] = X$[5,6];J9[2] = X$[1,2]
If DDAY[0] < 0 Goto L_11065
Call DateToJulian(1,X$,X$,E)
If E Goto L_11120
X2 = X$;X2 = X2 + DDAY[0];X$ = X2 Using "&&&&&&"
Call JulianToDate(1,X$,X$,E)
If E Goto L_11120
J9[0] = X$[1,2];J9[1] = X$[4,5];J9[2] = X$[7,8]
Goto L_11110
L_11065: Rem "terms are days into next month
J9[0] = J9[0] + 1 \ If J9[0] > 12 Let J9[0] = 1;J9[2] = J9[2] + 1
If CDAY If J9[1] > CDAY Let J9[0] = J9[0] + 1
J9[1] = Abs(DDAY[0])
If J9[0] > 12 Let J9[0] = 1;J9[2] = J9[2] + 1
If J9[2] > 99 Let J9[2] = J9[2] - 100
L_11080: X$ = J9[2] * 10 ^ 4 + J9[0] * 10 ^ 2 + J9[1] Using "&&&&&&"
Call DateToJulian(X$,X$,E) \ If Not(E) Goto L_11110
J9[1] = J9[1] - 1
If J9[0] = 2 If J9[1] < 28 Goto L_11120
If J9[0] <> 2 If J9[1] < 30 Goto L_11120
Goto L_11080
L_11110: Rem "got due date
DUED = J9[2] * 10 ^ 4 + J9[0] * 10 ^ 2 + J9[1]
L_11120: Return 
L_12000: Rem UPDATE SPEC PRICE FILE
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
CUST = 0
IF L9[0]=3 OR L9[0]=7 OR L9[0]=8 OR L9[0]=11 or L9[0]=16 LET CUST=999999 ! promos
IF L9[0]=2 OR L9[0]=4 OR L9[0]=6 OR L9[0]=12 OR L9[0]=13 OR L9[0]=15 LET CUST=H0[4]
IF L3[0] AND (L9[0]=15 OR L9[0]=16) RETURN ! non-stk - no cost group 
If Not(CUST) Return 
SP$ = " ",SP$
If L9[0] = 2 Or L9[0] = 3 Or L9[0] = 13 Let SP$[1,6] = CUST Using "######";SP$[7,18] = L2$[1,12]
If L9[0] = 6 Or L9[0] = 8 Let SP$[1,6] = CUST Using "######";SP$[7,7] = "#"
If L9[0] = 4 Or L9[0] = 7 Let SP$[1,6] = CUST Using "######";SP$[7,7] = "*";SP$[8,11] = L2$[17,20]
if L9[0]=15 OR L9[0]=16 LET SP$[1,6]=CUST USING "######";SP$[7,7]="-";SP$[8,18]=PRODA$[116,126] ! cost grp
If L9[0] <> 11 And L9[0] <> 12 Goto L_12035
SP$[1,6] = CUST Using "######";SP$[7,7] = "&"
If PFU1[19] > 0 Mat Read #27,PFU1[19],10;SPUNIT$;
SP$[8,11] = SPUNIT$[1,4];SP$[12,15] = PFU1[19] Using "####"
L_12035: SP$[19] = "" \ If OLM[2] Let SP$[1,6] = OLM[2] Using "C#####"
Search #28,2,1;SP$,SP,E
If E Return 
Mat Read #28,SP,12;SP1
Mat Read #28,SP,46;SPC4 \ Mat Read #28,SP,138;SPC5
Mat Read #5,L4,156;B;
if olm[2] and p61$[111,111] = "Y"
	! FOR CPI - if this is part of a CPI contract
	! AND it is reserve stock type, we need to
	! make sure we don't update the sold to date
	! if it does not impact stock, etc.
	cpiFlag = 0
	tmp$ = sp$[1,6]
	search #77,2,1;tmp$,r,e
	if not(e)
		mat read #77,r,50;cpiFlag;
	end if
	if cpiFlag
		search #78,2,1;sp$,rCPI,e
		if not(e)
			mat read #78,rCPI,42;RESSTKAMT
			if RESSTKAMT ! yup reserve stock contract
				if h5[7] = 2 and h5[7] = 8 and h5[7] = 16 or L3[1] = 0
					goto notCPI: ! bypass all updates
				end if
			end if
		end if
	end if
end if
SPC4[4] = SPC4[4] - L7[4]
SPC4[6] = SPC4[6] - L5[3]
If SP1[1] Let SPC4[5] = SPC4[5] - ((B[8] * L7[4]) - (SPC5[2] * L7[4]))
Mat Write #28,SP,46;SPC4;
notCPI: ! bypass updates
Return 
L_13500: Rem ========== UPDATE PROD/WHSE SALES
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If L3[0] Return 
W$ = " ",W$;W$[1,12] = L2$[1,12];W$[13,14] = LWHSE Using "##"
Search #37,2,1;W$,W9,E \ If E > 1 error 11000
If E = 1
  W9 = 0;E = 2 \ Search #37,1,0;W$,W9,E \ If E error 11000
  Write #37,W9,0;L2$[1,12];
  Write #37,W9,12;LWHSE;
  Mat Write #37,W9,14;LYP2;
  Mat Write #37,W9,248;LYP2;
  For I = 0 To 12 \ O7[I] = 0 \ Next I
  Mat Write #37,W9,482;O7;
  Mat Write #37,W9,560;O7;
  Mat Write #37,W9,638;O7;
  Mat Write #37,W9,716;O7;
  For X = 0 To 1
    For I = 0 To 12 \ SRVLVL[I,X] = 0 \ Next I
  Next X
  Mat Write #37,W9,950;SRVLVL;
  Mat Write #37,W9,1054;SRVLVL;
  Search #37,4,1;W$,W9,E \ If E error 11000
End If 
Mat Read #37,W9,14;P2
Gosub L_3150
Mat Write #37,W9,14;P2;
Return 
SHPL_SALES: Rem "shiplist sales file
If (H5[7]=36 Or H5[7]=37) And H3[1]=16 Return ! "EVAP - No Sales Update
If SRN[3] = 0 Or SRN[3] = 5 Return 
KEY6$ = " ",KEY6$
KEY6$[1,6] = SRN[2] Using "######"
KEY6$[7,7] = "."
KEY6$[8] = SRN[1] Using "&&&&&&"
Search #44,2,1;KEY6$,R[44],E \ If E > 1 error 11000
If E Return 
If L3 Let A2$ = "Z ZZZZZZZZZZ" \ Goto SLNSTK
Read #5,L4,139;A2$;
SLNSTK: C2 = SRN[2]
SHPL = SRN[1]
Mat P2 = Zer
A$ = " ",A$
A$[1,6] = C2 Using "######"
A$[7,12] = SHPL Using "######"
A$[13,24] = A2$[1,12]
A$[25,26] = LWHSE Using "##"
Search #43,2,1;A$,R1,E
If E > 1 error 11000
If E = 1 Gosub NWCSLR \ Goto SLNSTK
Mat Read #43,R1,16;P2
Gosub L_3150
Mat Write #43,R1,16;P2;
Return 
NWCSLR: Rem NEW REC
E = 2 \ Search #43,1,0;A$,R1,E
If E error 11000
Write #43,R1;A$[13,24];
Write #43,R1,12;C2;
For C = 0 To 12
  For I = 0 To 2
    P2[C,I] = 0
  Next I
Next C
Mat Write #43,R1,16;P2;
Write #43,R1,250;SHPL;
Write #43,R1,254;LWHSE;
Mat Write #43,R1,256;P2;
Write #43,R1,490;KEY6$[1,14];
C = 43 \ D = 1 \ V1 = R1
Gosub L_5000
If E > 1 error 11000
If Not(E) Goto CSLDR2
E = 3 \ Search #43,1,0;A$,R1,E
Return 
CSLDR2: Rem DIR #2 of cust/shiplist/prod/whse Sales
A$ = " ",A$
A$[1,12] = A2$[1,12]
A$[13,18] = C2 Using "######"
A$[19,24] = SHPL Using "######"
A$[25,26] = LWHSE Using "##"
C = 43 \ D = 2 \ V1 = R1
Gosub L_5000
If E error 11000
Return 
SHIPL_BUDG: Rem "see if po was blanket or has budget
FLAG[3] = 0
If SRN[3] = 0 Or SRN[3] = 5 Return 
If SRN[2] <> H0[4] Return 
KEY6$ = " ",KEY6$
KEY6$[1,6] = SRN[2] Using "######"
KEY6$[7,7] = "."
KEY6$[8] = SRN[1] Using "&&&&&&"
Search #44,2,1;KEY6$,R[44],E \ If E > 1 error 11000
If E Return 
Mat Read #44,R[44],452;BUDG;
If BUDG[0] <= 0 Return 
Mat Read #44,R[44],432;BPO$;
If Len(BPO$) < 20 Let BPO$ = BPO$ + "                    "
If BPO$[1,1] <> "" And BPO$[1,5] <> "     " ! "is using Blanket PO
  If BPO$ <> P0$ Return 
End If 
BUDG[1] = BUDG[1] - T2[0]
Mat Write #44,R[44],452;BUDG;
FLAG[3] = 1
Return 

DoUpdateProdWhStat: !
	! update specific warehouse totals
	kPWS$ = " ",kPWS$
	kPWS$[1,12] = l2$[1,12]
	kPWS$[13,14] = LWHSE Using "##"
	gosub ReadCreateProdWhStat:
	gosub UpdateProdWhStat:
	! update totals for ALL warehouses
	kPWS$ = " ",kPWS$
	kPWS$[1,12] = l2$[1,12]
	kPWS$[13,14] = " 0"
	gosub ReadCreateProdWhStat:
	gosub UpdateProdWhStat:
RETURN

ReadCreateProdWhStat: ! read record if there, if not, create
	search #81,2,1;kPWS$,recPWS,e
	if e ! not found - create
		Let E=2 ! get record
		Search #81,1,0;kPWS$,recPWS,E
		if e error 11000
		search #81,4,1;kPWS$,recPWS,e
		if e error 11000
		mat write #81,recPWS,0;kPWS$[1,12]
		PWSWH = kPWS$[13,14]
		mat write #81,recPWS,12;PWSWH
		for i = 0 to 12
			USAGE_TY[I] = 0
			USAGE_LY[I] = 0
			SALES_TY[I] = 0
			SALES_LY[I] = 0
			LDCOST_TY[I] = 0
			LDCOST_LY[I] = 0
			AVGCOST_TY[I] = 0
			AVGCOST_LY[I] = 0
			HITS_TY[I]=0
			HITS_LY[I]=0
		next i
	else
		gosub ReadProdWhStat:
	end if
RETURN

UpdateProdWhStat: !
	! total for current month
	usage_ty[ARMONTH] = usage_ty[ARMONTH] - t1
	sales_ty[ARMONTH] = sales_ty[ARMONTH] - l5[3]
	ldcost_ty[ARMONTH] = ldcost_ty[ARMONTH] - s9[12]
	avgcost_ty[ARMONTH] = avgcost_ty[ARMONTH] - GLCOST
	!Credit memos returning stock will decrease the hits counter by 1 if the credit also reduced usage
	if T1<>0 and not(L7[0]) ! affects usage and no previous shipment so it's a hit
		hits_ty[ARMONTH]=hits_ty[ARMONTH] - 1
	ENDIF
	! total for year
	usage_ty[0] = usage_ty[0] - t1
	sales_ty[0] = sales_ty[0] - l5[3]
	ldcost_ty[0] = ldcost_ty[0] - s9[12]
	avgcost_ty[0] = avgcost_ty[0] - GLCOST
	if T1<>0 and not(L7[0]) ! no previous shipment so it's a hit
		hits_ty[0]=hits_ty[0] - 1
	ENDIF
	gosub WriteProdWhStat:
RETURN


ReadProdWhStat: !
	mat read #81,recPWS,14;USAGE_TY
	mat read #81,recPWS,92;USAGE_LY
	mat read #81,recPWS,170;SALES_TY
	mat read #81,recPWS,248;SALES_LY
	mat read #81,recPWS,326;LDCOST_TY
	mat read #81,recPWS,404;LDCOST_LY
	mat read #81,recPWS,482;AVGCOST_TY
	mat read #81,recPWS,560;AVGCOST_LY
	mat read #81,recPWS,638;HITS_TY
	mat read #81,recPWS,716;HITS_LY
RETURN

WriteProdWhStat: !
	mat write #81,recPWS,14;USAGE_TY
	mat write #81,recPWS,92;USAGE_LY
	mat write #81,recPWS,170;SALES_TY
	mat write #81,recPWS,248;SALES_LY
	mat write #81,recPWS,326;LDCOST_TY
	mat write #81,recPWS,404;LDCOST_LY
	mat write #81,recPWS,482;AVGCOST_TY
	mat write #81,recPWS,560;AVGCOST_LY
	mat write #81,recPWS,638;HITS_TY
	mat write #81,recPWS,716;HITS_LY;
RETURN

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ error 11000
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If OLS2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
!
End
OUTEND: Rem EXIT ROUTINE
!Print @0,20;'RB CE';"COMPLETE. ";
!Print ACC_CTR;" CREDIT MEMO(S) ACCEPTED "
if statchan print #statchan;"PART 3 COMPLETE ";Str$(Acc_ctr);" CREDIT MEMO(S) ACCEPTED"
!If P8$[6,6] <> "Y" Input @0,22;"PRESS <CR> TO EXIT "F$
!Print 'CS'
for x=0 to 89
	if x<>statchan Try Close #x Else Rem
Next x
Chain "247C.DL4"
!Stop 
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
Rem {begin rtn.error.s}
Else
!
if statchan print #statchan;"PART 3 COMPLETE"
include "src/callmainerrnet.inc"
end try
End ! the whole program
