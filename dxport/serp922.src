! --- serp922.dl4
! Control file maintenance program converted from ut922
!
! 1.0 11/04/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp922.dl4 src/serp922.src
!
! From the original code:Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 16, 2004  09:31:26
Rem /w/papermaster/r2002//usr/acct/jliu/work/r2002/ut/ut922.src (univ2) [jliu] {41008}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem     UT922   USER CONTROL FILE MAINTENANCE
Rem     *************
Rem     GEORGE DOSCHER
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"
Declare Intrinsic Sub InpBuf,String
Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile
!Declare External Function openfile,pdate$,jdate$,Formatdate2$

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[3200],tmp2$[500],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen()
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

! If Err 0 Gosub ERR_TRAP

Dim 1%,D1[3],X1,S1[23],R1
Dim 2%,C1[1],K,K1,X2
Dim 3%,J8,X3
Dim D$[30],J$[40],J0$[10],J1$[40],J2$[40],J4$[40],J5$[40],J6$[40]
Dim J7$[60],J8$[6],J9$[40],K1$[25],U3$[80],U5$[50],W$[60],X$[100]


W = 0
Dim W9$[9],2%
U3$ = 'GH',U3$
! USERPORT stuff not applicable to Synergy
! Open #99,"USERPORT"
! Read #99,Spc(6);R1;
! Close #99

Close ! need to re-open the control file in read-write mode
Open #2,"cntrl/FIELDDESC2"
CH_CNTRL = openfile(9999,intCO) \ if ch_cntrl = -1 Error 42

!
! GETTING DATA FOR 922
!
if action1$ = "GETDATA"
	!
	! 922 information is in 2 sections - header information
	! and then the data itself
	!
	gosub LoadData
	Message$=""
	goto OutEnd:
!
! SUBMITTING DATA
!
else if action1$ = "SUBMITDATA"
	gosub UnloadDataAndUpdate
	! section x - status
	Message$="Record updated."
	goto OutEnd:
!
! UNKNOWN ACTION
!
else
	e$ = "Unknown action1: "+action1$ \ error 10000
end if

! ***********************************************************************
! Nobody but us subroutines and exit code down here
! ***********************************************************************

!----------------------------------------------------------------------------
! load all definitions and data for getdata
!----------------------------------------------------------------------------
LoadData: !
	!
	! column definitions
	tmp$=bsdel$+"TableDefinitions"+fdel$+rdel$
	tmp$=tmp$+"Label"+fdel$+"DisplayOnly"+fdel$+"Type"+fdel$+"Length"+fdel$
	tmp$=tmp$+"Negative"+fdel$+"Decimal"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	doingDefinitions = 1
	For K1 = 0 To Chf(2) - 1
		Gosub ReadFieldDesc
		If D$[1,1] > " "
			tmp$=""
			Gosub ProcessFieldDetails
			call addToStr(e$,rstr$,tmp$+rdel$)
		end if
	Next K1
	call addToStr(e$,rstr$,esdel$)
	!
	! table data
	!
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	tmp$=tmp$+"FieldNo"+fdel$+"Data"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	doingDefinitions = 0
	For K1 = 0 To Chf(2) - 1
		Gosub ReadFieldDesc
		If D$[1,1] > " "
			tmp$=str$(K1)+fdel$
			Gosub ProcessFieldDetails
			call addToStr(e$,rstr$,tmp$+rdel$)
		end if
	Next K1
	call addToStr(e$,rstr$,esdel$)
Return

!----------------------------------------------------------------------------
! load all definitions and data for getdata
!----------------------------------------------------------------------------
UnloadDataAndUpdate: !
	doingDefinitions = 0
	For K1 = 0 To Chf(2) - 1
		Gosub ReadFieldDesc
		If D$[1,1] > " "
			tmp$=""
			Gosub ProcessFieldDetails
			call DxGet("Data"+str$(k1), tmp$)
			Gosub WriteField
		end if
	Next K1
Return

!----------------------------------------------------------------------------
! associated field description for record
!----------------------------------------------------------------------------
ReadFieldDesc: Rem READ FIELD
	Mat Read #2,K1;D$
	Mat Read #2,K1,30;D1
Return

!----------------------------------------------------------------------------
! get actual data based on field description for record
!----------------------------------------------------------------------------
ProcessFieldDetails: Rem READ FIELD
	if doingDefinitions
		! set up label - "*" in 1,1 means UBS needs to set up
		if D$[1,1]="*"
			tmp$=tmp$+rtrim$(D$[2])+fdel$+"Y"+fdel$
		else
			tmp$=tmp$+rtrim$(D$)+fdel$+"N"+fdel$
		end if
	end if
	If D1[2]
		! numeric
		Gosub CreateFieldMask
	else
		! character field
		if doingDefinitions
			tmp$=tmp$+"C"+fdel$+str$(D1[3] / 10)+fdel$+"N"+fdel$+"0"+fdel$
		end if
	end if
	if doingDefinitions return
	! not doing defintions, so we are doing data
	J1$ = " ",J1$
	If D1[2] = 0 Read #CH_CNTRL,D1[0],D1[1];J1$[1,D1[3] / 10];
	If D1[2] = 1 Read #CH_CNTRL,D1[0],D1[1];X1; \ J1$ = X1 Using X$
	If D1[2] = 2 Read #CH_CNTRL,D1[0],D1[1];X2; \ J1$ = X2 Using X$
	If D1[2] = 3 Read #CH_CNTRL,D1[0],D1[1];X3; \ J1$ = X3 Using X$
	If D1[2] Let J1 = J1$
	If D$[1,12] = "CUT OFF TIME"
		tmp$=tmp$+J1$[1,2]+":"+J1$[3,4]+":"+J1$[5,6]+fdel$
	Else
		tmp$=tmp$+J1$+fdel$
	End If
Return

!----------------------------------------------------------------------------
! create mask based on field description record
!----------------------------------------------------------------------------
CreateFieldMask: Rem MASK
	! not only create the field mask, but set the variables needed for
	! length, sign, decimal, etc. if were are doing the definitions phase
	if doingDefinitions
		If D$[1,12] = "CUT OFF TIME"
			tmp$=tmp$+"T"+fdel$ ! time type
		else
			tmp$=tmp$+"N"+fdel$ ! straight numeric type
		end if
	end if
	X$ = "#",X$
	X2 = D1[3] / 10
	if x2 < 0
		Let X$[1,Int(Abs(X2))] = "-",X$
		Let X2 = Abs(X2) + 1
	end if
	X1 = Int(X2)
	if doingDefinitions
		tmp$=tmp$+str$(X1)+fdel$ ! length
		if x$[1,1]="-" ! negative
			tmp$=tmp$+"Y"+fdel$
		else
			tmp$=tmp$+"N"+fdel$
		end if
	end if
	If Fra(X2) ! decimal
		Let X$[X1 + 1,X1 + 1] = "."
		Let X1 = X1 + 1 + 10 * Fra(X2)
		if doingDefinitions tmp$=tmp$+str$(10*Fra(X2))+fdel$
	else
		if doingDefinitions tmp$=tmp$+"0"+fdel$
	end if
	X$[X1 + 1] = ""
Return

!----------------------------------------------------------------------------
! write data record
!----------------------------------------------------------------------------
WriteField: Rem WRITE FIELD
		
	If D1[2] = 0
		TMP$ = TMP$,B$
		Write #CH_CNTRL,D1[0],D1[1];TMP$[1,D1[3] / 10];
		return
	END IF
	If D$[1,12] = "CUT OFF TIME"
		tmp$=tmp$[1,2]+tmp$[4,5]+tmp$[7,8]
	end if
	If D1[2] = 1 Let X1 = tmp$ \ Write #CH_CNTRL,D1[0],D1[1];X1;
	If D1[2] = 2 Let X2 = tmp$ \ Write #CH_CNTRL,D1[0],D1[1];X2;
	If D1[2] = 3 Let X3 = tmp$ \ Write #CH_CNTRL,D1[0],D1[1];X3;
Return

! Print 'CS';"USER CONTROL FILE MAINTENANCE"
! L_1005: F1 = 0
! L_1010: Gosub L_6000
! Print "\15\";'BG';U3$[1,70];'EG';
! F1 = F2 + 1
! L_1020: Print @0,23;"ENTER   nnn:Entry #     P:Page     R:Relist     <CR>:End   ";'CL';
! Input ""U5$ \ If U5$ = "" Goto OUTEND
! If U5$ = "R" Goto L_1005
! If U5$ = "P" Goto L_1010
! If U5$ = "E" Goto OUTEND
! If U5$[1,1] = "!" And R1 = -1 Close \ Chain "UT922A"
! E1 = U5$ \ If Not(E1) Goto L_1020
! If E1 >= 0 If E1 < 24 Goto L_1075
! Goto L_1090
! L_1075: K1 = S1[E1] \ If Not(K1) Goto L_1020
! Gosub ReadFieldDesc \ If D$[1,1] > " " And D$[1,1] <> "*" Goto L_2000
! If D$[1,1] = "*" And U5$[Len(U5$)] = "!" Goto L_2000
! If D$[1,1] = "*" Let J7$ = "CALL UNIVERSAL TO CHANGE THIS FIELD" \ Gosub L_7600 \ Goto L_1020
! L_1090: J7$ = "NO SUCH ENTRY NUMBER!" \ Gosub L_7600 \ Goto L_1020
! L_2000: Rem EDIT
! Gosub ProcessFieldDesc
! If D$[1,12] = "CUT OFF TIME"
! 	J5$ = "cut off time(HHMMSS), military style."
! Else
! 	J5$ = ""
! End If
! Gosub L_2200
! If J4$ = ""
! 	If D$[1,12] = "CUT OFF TIME"
! 		Print @40,E1 + 4;'CL';J1$[1,2];":";J1$[3,4];":";J1$[5,6]
! 	End If
! 	Goto L_1020
! End If
! If D$[1,12] = "CUT OFF TIME"
! 	CUTHH = J4$[1,2] \ CUTMM = J4$[3,4] \ CUTSS = J4$[5,6]
! 	If CUTHH > 24 Or CUTMM > 60 Or CUTSS > 60
! 		Print @29,22;"Invalid time" \ Signal 3,30 \ Print @25,22;'CL'
! 		Goto L_2000
! 	End If
! 	Print @40,E1 + 4;'CL';J4$[1,2];":";J4$[3,4];":";J4$[5,6]
! End If
! If D1[2] Let J$[Abs(D1[3]) / 10 + 1] = ""
! Gosub L_2700
! Goto L_1020
! 
! L_2200: Rem SET J0$
! 	J0$ = "2 00..40.."
! 	X2 = D1[3] / 10 \ X1 = Int(X2) + Fra(X2) * 10 + 1 * Fra(X2)
! 	J0$[9,10] = E1 + 4 Using "##"
! 	J0$[5,6] = X1 Using "##"
! 	If D1[2] Let J0$[1,1] = "3" \ If X2 < 0 Let J0$[1,1] = "4"
! 	If D1[2] Let J0$[2,2] = Fra(X2) * 10 Using "#"
! 	J2$ = ""
! Gosub L_7000 \ Return

! ReadFieldDesc: Rem READ FIELD
! 	Mat Read #2,K1;D$
! 	Mat Read #2,K1,30;D1
! Return
! 
! ProcessFieldDesc: Rem READ FIELD
! 	If D1[2] Gosub CreateFieldMask
! 	J1$ = " ",J1$
! 	If D1[2] = 0 Read #CH_CNTRL,D1[0],D1[1];J1$[1,D1[3] / 10];
! 	If D1[2] = 1 Read #CH_CNTRL,D1[0],D1[1];X1; \ J1$ = X1 Using X$
! 	If D1[2] = 2 Read #CH_CNTRL,D1[0],D1[1];X2; \ J1$ = X2 Using X$
! 	If D1[2] = 3 Read #CH_CNTRL,D1[0],D1[1];X3; \ J1$ = X3 Using X$
! 	If D1[2] Let J1 = J1$
! Return
! 
! CreateFieldMask: Rem MASK
! 	X$ = "#",X$ \ X2 = D1[3] / 10
! 	If X2 < 0 Let X$[1,Int(Abs(X2))] = "-",X$
! 	If X2 < 0 Let X2 = Abs(X2) + 1
! 	X1 = Int(X2)
! 	If Fra(X2) Let X$[X1 + 1,X1 + 1] = "."
! 	If Fra(X2) Let X1 = X1 + 1 + 10 * Fra(X2)
! 	X$[X1 + 1] = ""
! Return

! L_2700: Rem WRITE FIELD
! 	If D1[2] = 0 Write #CH_CNTRL,D1[0],D1[1];J$[1,D1[3] / 10];
! 	If D1[2] = 1 Let X1 = J1 \ Write #CH_CNTRL,D1[0],D1[1];X1;
! 	If D1[2] = 2 Let X2 = J1 \ Write #CH_CNTRL,D1[0],D1[1];X2;
! 	If D1[2] = 3 Let X3 = J1 \ Write #CH_CNTRL,D1[0],D1[1];X3;
! Return

! DEAD CODE
! Print @0,6;'CE';
! If F3 < 1 Let F3 = 1
! For F0 = F3 To F3 + 15
! 	If F0 > D1[1] Let F0 = 9999 \ Goto L_5090
! 	Read #CH_CNTRL,K1,F0 * D1[0] - D1[0];X$[1,D1[0]];
! 	If D1[0] = 2 Read #CH_CNTRL,K1,F0 * 2 - 2;X1; \ X$ = X1 Using "-####"
! 	If D1[0] = 4 Read #CH_CNTRL,K1,F0 * 4 - 4;X2; \ X$ = X2 Using "-####.##"
! 	If D1[0] = 6 Read #CH_CNTRL,K1,F0 * 6 - 6;X3; \ X$ = X3 Using "-###,###.##"
! 	Print Using "###)       ";F0;X$
! L_5090: Next F0
! Return 

! L_5500: Rem HEADINGS ALSO
! 	Print @0,2;"ENTRY#     DESCRIPTION"; Tab 40;"VALUE";'CE'
! 	Print 'BG';U3$[1,70];'EG'
! 	For X1 = 0 To 23 \ S1[X1] = 0 \ Next X1
! L1 = 1 \ Return
! 
! L_6000: Rem LIST FIELDS
! 	Gosub L_5500
! 	For K1 = F1 To Chf(2) - 1
! 		Gosub ReadFieldDesc
! 		If D$[1,1] <= " " Goto L_6090
! 		Gosub ProcessFieldDesc
! 		If D$[1,1] = "*" Print Using "###:  ";@0,L1 + 4;L1;'BD';D$[2];'ED';
! 		If D$[1,1] <> "*" Print Using "###:  ";@0,L1 + 4;L1;'BD';D$;'ED';
! 		If D$[1,12] = "CUT OFF TIME"
! 			Print Tab 40;J1$[1,2];":";J1$[3,4];":";J1$[5,6]
! 		Else
! 			Print Tab 40;J1$
! 		End If
! 		F2 = K1 \ S1[L1] = K1
! 		L1 = L1 + 1 \ If L1 > 16 Print @0,21;'BB';"*MORE*";'EB'; \ Return
! 	L_6090: Next K1
! 	F2 = 0
! Return
! 
! L_8000: D$ = " ",D$
! 	For K = 0 To 1
! 		D1[K] = 0
! 		C1[K] = 0
! 	Next K
! Return

! DEAD CODE
! Gosub L_8000
! Goto ReadFieldDesc

! OUTEND: Rem EXIT ROUTINE
! Print 'CS'
! Close 
! Chain "MX000"
! Stop 
! End 

OUTEND: Rem EXIT ROUTINE
ReturnStatus=1
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end