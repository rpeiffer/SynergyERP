! >>> Program La512
!
! description Accounts Payable Purchase Journal
! loadsave -w -n 100,10 -o prog/dxport/la512.dl4 src/la512.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"


Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 10, 2008  10:09:13
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/la512.src (univ2) [mary] {17361}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,String,Time,VerifyDate


! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Rem LA512 ACCOUNT PAYABLE PURCHASE JOURNAL - PART #1 - V5
Try
	Enter SPEC1[],MESSAGE$,rstr$ 
	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
	dim xdate$[50]
Dim 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
Dim 2%,C4[4],3%,Q[2],T2[3],2%,B4[1]
dim 3%,spec[50]
dim 1%,apbCURRID,3%,apbCURRFACT,keycurr$[30],currdesc$[30]
dim 1%,cnvcu[10],3%,cnvca[10]
dim 1%,oi_CURRID,3%,oi_currfact
dim 1%,aph_CURRID,3%,aph_currfact
dim 3%,aphmerch,aphfreight,aphmisc,grossapamt,discapamt,netapamt
dim 1%,poh_currid,3%,poh_currfact,pohfrtappl,pohmiscamt,pohmiscappl,pohfrtamt
dim 1%,pol_CURRID,3%,pol_CURRFACT 
dim 1%,poc_currid,3%,poc_currfact
dim 1%,apl_currid,3%,apl_currfact
dim p61$[256]
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,B5[1],C0[6],D2[2],E,F9,I,L[2],O1[2],O4[1],P,X,X1,R9,TOTFLAG,SPO
Dim 2%,D[1],A1,C3[1],D0,F1[2],G9[3],O2[6],X2,X9,COMP
Dim 3%,B6[3],gldistamt,O3[11],T9[3],T[3],DIVTOT[3],R[55]
Dim A$[30],B$[30],D$[25],F$[16],G8$[2],G9$[40],H$[68],J$[48],K1$[30],K50$[10]
Dim K2$[30],K3$[30],K4$[30],K9$[50],O$[6],O1$[12],P$[8],Q$[9],R$[63],R2$[4]
Dim DV1$[12],DV2$[12],DV3$[12],K17$[10],PBPO$[1],ACPER$[4],CHECKDATE$[6]
Dim P9$[50],KEYGLAP$[50]
Dim T$[9],U1$[2],U5$[10],X$[10],Z1$[220],2%
Dim 1%,ch_apdm,msgflg,distflag,3%,rec_apdm,keyapdm$[50]
dim apmsg$[50],chkmsg$[50]
Dim 1%,H4[3],L1[5],PL0[4],NSD1[7],APH1[2],APL1[5],X0[9],SCRPRT,PCT0
Dim 1%,MULTIPOLINE,MULTPO,POS_,ERRFLAG[10],POPRTFLAG
Dim 2%,H0[5],H3[4],PH[4],L2[2],B[24],NSD2[4],APH0[2],APL0[2],BUYER
Dim 2%,Q0[1],PONUM,AJRNL,JRNL,VENDCODE
Dim 3%,H8[9],PL[5],L3[6],A3[7],NSD3[9],APH2[2],APL2[3],PO3[12],PL4[19],POH7
Dim 3%,POCOST,POQTY,CURRQTY,POFREIGHT,POMISC,T7[2,1],T8[1],T6[2,1],M1[17]
Dim 3%,PENDQTY,PCT6[1],LBSUNIT,LBSFACTOR,PCT9[4],POLBS,POFACT,PRODLBS,PRODFACT
Dim 3%,PCTR,D1[1]
Dim 3%,CWT_WT_ADJ,PROD_WT_BASE,PO_WT_BASE,TMP_A_6
Dim 3%,TOTAPPLD,APQTY,POQTY,BAPQTY,BPOQTY,AMOUNT,POTOT,CURRCOST
Dim 3%,DISP_QTY,DISP_COST,DISP_EXT,APAMT[1]
Dim 1%,PCT3[2]
Dim 2%,PCT1[5]
Dim 3%,PCT2[5],PCT4[1],PCT5[9]
Dim PCT$[12],KEYPOCT$[30]
Dim H8$[82],H1$[116],I$[30],L1$[104],A1$[156],NSD$[96],APH$[12],APL$[12]
Dim U9$[131],PMASK$[12],M1$[14],K22$[40],K21$[40],K32$[40],K31$[40],PMASK1$[12]
Dim K14$[20],K3$[30],K90$[50],K37$[30],KEY21$[40],KEYAP$[50],KEYAPL$[50],K10$[50]
Dim POLINE$[131]
dIM GROUPID$[1]
dim tmpkey$[50],3%,tmp3
Dim 3%
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Comp=spec1[0] ! company #
intco=spec1[0]
Pgpo=spec1[1]! page break on po
Audonly=spec1[2]
BatchId=spec1[3]
Acper=spec1[4]
c4[0]=spec1[5] ! current next month
c4[1]=spec1[4] ! accounting period
let xdate$=spec1[6] using "&&&&&&"
let tmp$=xdate$[3,6],xdate$[1,2] !
c4[2]=tmp$ ! posting date in mmddyy format
c4[3]=1 ! default lu for a10in file
c4[4]=spec1[6] ! posting date yymmdd
b4[0]=spec1[4] ! acct period
b4[1]=spec1[3] ! batch id
rec_uac=spec1[8]
returnstatus=spec1[9]
message$=""

Rem open files    
F$="cntrl/Cntrl"+str$(comp)
Open #1,F$
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
Try Close #9 Else Rem
let onchannelno=9
sortchan = blockbuildsort(e$,25,0,onchannelno)


Mat Read #1,115,40;Q0;
PMASK$ = "##########"
PMASK1$ = "#####.####"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Mat Read #1,51,76;SPO;
Mat Read #1,51,18;C0;
TERMINATEFLAG = 0
Mat Read #1,19,50;P9$;
mat read #1,61,0;p61$;
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
!G9[0] = Spc(5) \ G9[1] = Int(G9[0] / 16384) \ G9[2] = Int((G9[0] - G9[1] * 16384) / 64)
!G9[3] = G9[0] - (G9[1] * 16384 + G9[2] * 64) \ G8$[1,1] = G9[2] Using "#"
!G8$[2,2] = G9[3] Using "#"
G8$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
g8$[2,2]=groupid$
K2$ = " 0" \ Search #15,2,1;K2$,R[15],E 
if e<>0
	let eflag=eflag+1
	Message$="RECORD '0' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif
Mat Read #15,R[15],2;R$;
If R$[61,61] = " "
	let eflag=eflag+1
	message$="PURCHASE JOURNAL IN PROCESS ELSEWHERE...PLEASE TRY AGAIN LATER...."
	Goto L_9010
End If 
If P9$[17,17] <> "Y"
  If R$[60,60] = " "
	let eflag=eflag+1
	message$="INTERFACE FILE IN USE ELSEWHERE...PLEASE TRY AGAIN LATER.."
	Goto L_9010
  End If 
End If 
R$[61,61] = " " \ Mat Write #15,R[15],2;R$;
If P9$[17,17] = "Y"
  F$ = COMP Using "6/GLAPTEMP#"
  Open #75,F$
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,2,1;KEYGLAP$,R,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
	let eflag=eflag+1
	message$="A/P Transactions in Process Elsewhere "
    Goto L_9010
  Else 
    E = 2 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
    Search #75,4,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  End If 
  F$ = COMP Using "4/GLAPDETL#"
  Open #77,F$
End If 
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #2,F$
F$ = R$[53,53],"/A20OI",G8$[1,2] \ Open #3,F$ \ Ropen #60,F$
F$ = R$[54,54],"/A20DI",G8$[1,2] \ Open #4,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Open #6,F$
Mat Read #1,88,432;F$; \ Open #10,F$
Mat Read #1,51,18;C0;
If C0[4]
  F$ = R$[5,5],"/APPOH",G8$[1,2] \ Open #21,F$
  F$ = R$[6,6],"/APPOL",G8$[1,2] \ Open #22,F$
  F$ = COMP Using "2/APPOHH#" \ Open #23,F$
  F$ = COMP Using "2/APPOLH#" \ Open #24,F$
  For X = 31 To 37
    Read J \ If J = -1 Goto L_760
    Read #1,88,J;F$;
    Open #X,F$
L_760: Next X
  Data "2416","2432","1792","2768","1728","2448","1120"
  If SPO
    F$ = COMP Using "2/POCTFLE#" \ Open #38,F$
  End If 
End If 
F$ = COMP Using "2/APDETM#" \ Open #39,F$
let ch_apdm=39
let f$=comp using "2/APDETA#"\ROPEN #44,F$
L_800: Mat Read #1,51,18;C0;
If C0[3]<>0
  F$ = R$[45,45],"/APBTH",G8$[1,2] \ Open #14,F$
  Z1$[1] = "Entry in Process" \ Z1$[21] = "Entry Completed"
  Z1$[41] = "List in Process" \ Z1$[61] = "List Completed"
  Z1$[81] = "Journal in Process" \ Z1$[101] = "***error***"
  Z1$[121] = "Accepted & Closed" \ Z1$[141] = "***ERROR***"
  Z1$[161] = "***ERROR***" \ Z1$[181] = "DELETED"
  Z1$[201] = "***ERROR***"
Else 
  Read #1,51,36;AJRNL
  JRNL = AJRNL + 1
  If JRNL <= 0 Or JRNL > 999999
    JRNL = 1
  End If 
  Write #1,51,36;JRNL;
End If 
L_900: Rem DIVISIONAL
If (C0[6])<>0
	F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #17,F$
	F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #18,F$
	F$ = rec_uac Using "2/APPJTEMP&&&&"
	tmp$= "FILES/",F$
	I$ = "[1:12] ",tmp$,"!"
	Build #50,I$
	R[50] = 1 \ Search #50,0,1;I$,R[50],E \ If E Gosub ERR_SEARCH
	R[50] = 1 \ Search #50,0,0;I$,R[50],E \ If E Gosub ERR_SEARCH
	tmp$ = "files/",f$," <666>"  
	Modify tmp$                         
	Try Close #50 Else rem
	Open #50,F$
endif
L_1000: K2$ = "10" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
Mat Read #15,R[15],168;U1$;
K2$ = " ",K2$ \ K2$[3,6] = R2$
Search #16,2,1;K2$,R[16],E \ If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
L_1100: Rem SELECT POSTING PERIOD
!Print 'CS'; Tab 40;G9$[1,40]
!Print Tab 40;"PURCHASE JOURNAL"
Mat Read #1,0,134;D0;


 X$ = C4[1] Using "&&&&" \ ACPER$ = C4[1] Using "&&&&"
BLDAM0DO: Rem BUILD AM0DO FILE IF NEEDED
F$ = R$[33,33],"/AM0DO",G8$[1,2],X$[1,4] \ Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0DO
End If 
Open #7,F$
BLDAM0DD: Rem BUILD AM0DD FILE IF NEEDED
F$ = R$[34,34],"/AM0DD",G8$[1,2],X$[1,4] \ Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0DD
End If 
Open #8,F$
If P9$[17,17] <> "Y"
BLDA10IN: Rem BUILD A10IN  FILE IF NEEDED
  F$ = R$[60,60],"/A10IN",G8$[1,2],X$[1,4] \ Call FindF(F$,X2)
  If Not(X2)
    Gosub L_9700
    Goto BLDA10IN
  End If 
  Open #11,F$
End If 
if p61$[136,136]="Y"
	ch_curr=OpenFile(9712,intCo) \ If Ch_curr = -1 Error 42 ! ap detail header file
endif


K14$ = " ",K14$ \ K14$[1,4] = B4[0] Using "####"
K14$[5,10] = B4[1] Using "######"
Search #14,2,1;K14$,R[14],E
if e<>0
	eflag=eflag+1
	message$="BATCH NUMBER "+str$(B4[1])+"IS NOT ON FILE!!!"
	goto l_9060:
endif
Gosub L_6300
let tmp=k14$[1,4]
if tmp<>b4[0]
	eflag=eflag+1
	message$="BATCH NUMBER "+k14$[5,10]+" Data Error!!!"
	goto l_9010:
endif
let tmp=k14$[5,10]
if tmp<>b4[1]
	eflag=eflag+1
	message$="BATCH NUMBER "+k14$[5,10]+"Data Error!!!"
	goto l_9010:
endif
If B5 <> 4
	eflag=eflag+1
	message$="BATCH STATUS ERROR - CANNOT ACCEPT!!"
	goto l_9060:
endif
Mat Read #14,R[14],8;B5 \ B5 = 4 \ Mat Write #14,R[14],8;B5;
mat read #14,r[14],52; apbcurrid;
mat read #14,r[14],54; apbcurrfact;
if p61$[136,136]="Y" and apbcurrid<>0 and apbcurrfact<>0
	let currpass=1 ! for conversions
	let keycurr$=" ",keycurr$
	let keycurr$[1,4]=apbcurrid using "####"
	search #ch_curr,2,1;keycurr$,rec_curr,e
	if e<>0
		let currdesc$="Currency Not On File "
	else
		mat read #ch_curr,rec_curr,2;currdesc$;
	endif
endif
L_1700: K2$ = "10" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Read #15,R[15],6;Q$; \ Q[0] = Q$
Read #15,R[15],24;Q$; \ Q[1] = Q$
Read #15,R[15],150;Q$; \ Q[2] = Q$
F$ = R$[55,55],"/A20DD",G8$[1,2]
Call FindF(F$,X2) \ If Not(X2) Goto L_1840
Try Kill F$ Else Rem

L_1840: !
tmp$= "FILES/",f$
J$ = "<00>[1:256] ",tmp$,"!"
Build #5,J$
R[5] = 8 \ Search #5,0,1;K2$,R[5],E \ If E Gosub ERR_SEARCH
R[5] = 1 \ Search #5,0,0;K2$,R[5],E \ If E Gosub ERR_SEARCH
tmp$ = "files/",f$," <666>"  
Modify tmp$                         
Try Close #5 Else Rem
Open #5,F$
!If Err 0 Gosub ERR_ESCAPE
L = 99 \ L[1] = 1 \ F9 = 0 \ R9 = 0
Call Time(D$)
T$ = "INVC/MM/C"
K1$ = " ",K1$;V9 = 0;PCTR = 0
!Print @0,22;'CE';"Printing...Please Wait...";
L_2000: Search #60,3,1;K1$,R[3],E \ If E = 2 Goto L_4000
Mat Read #60,R[3],0;O$;
Mat Read #60,R[3],40;O3;
If Not(C0[3]) Goto L_2030
If O3[9] <> B4[1] Goto L_2000
If O3[8] <> B4[0] Goto L_2000
Goto L_2032
L_2030: If O$[2,2] <> "3" Goto L_2000
L_2032: If O$[1,1] <> "0" If O$[1,1] <> "9" Goto L_2000
Gosub L_7100
If O$[1,1] = "9" Gosub L_3200
If O2[0] = A1 Goto L_2090
Gosub L_3000
VENDCODE = O2[0]
Gosub L_7160
Gosub L_3100
TOTFLAG = 0
L_2090: Gosub L_5800
apmsg$=""
chkmsg$=""
let keyapdm$=" ",keyapdm$
let msgflg=0
let keyapdm$[1,6]=O2[0] using "######"
let keyapdm$[7,18]=O1$[1,12]
let keyapdm$[19,20]=O1 USING "##"
search #ch_apdm,3,1;keyapdm$,rec_apdm,e
if e<>0 goto endsrchapdm:
if keyapdm$[7,18]<>o1$[1,12] goto endsrchapdm:
let tmp3=keyapdm$[1,6]\if tmp3<>o2[0] goto endsrchapdm:
let tmp3=keyapdm$[19,20]\if tmp3<>o1 goto endsrchapdm:
mat read #ch_apdm,rec_apdm,48;APMSG$;
mat read #ch_apdm,rec_apdm,98;CHKMSG$;
If rtrim$(apmsg$)<>"" let msgflg=msgflg+1
if rtrim$(chkmsg$)<>"" let msgflg=msgflg+1
endsrchapdm: ! 
Gosub L_5000
TOTFLAG = 99
If C0[4]
  POLINE$ = "";POS_ = 0
  K9$ = " ",K9$ \ K9$[1,6] = O2[0] Using "######"
  K9$[7,18] = O1$[1,12] \ K9$[19,20] = O1 Using "##"
  KEY21$ = " ",KEY21$;KEY21$[1,20] = K9$[1,20]
SEARCHAPPOH: Rem search for all po's applied
  Search #21,3,1;K9$,R[21],E \ If E = 2 Goto L_2200
  If E Gosub ERR_SEARCH
  If K9$[1,20] <> KEY21$[1,20] Goto L_2200
  Search #9,2,1;K9$,R[21],E 
  if e<>0 ! no there already
	Search #9,4,1;K9$,R[21],E \ If E Gosub ERR_SEARCH
  endif
  PONUM = K9$[21,26]
  If PONUM <> O2[5] ! po number different
    If POLINE$ = "" Or POS_ > 121
      If POS_ > 121 Gosub PRNTPOLINE
      POLINE$ = " ",POLINE$
      If O1 <> 2
        POLINE$[35] = PONUM Using "Purchase Order(s): ######"
      Else 
        POLINE$[35] = PONUM Using "Debit Memo(s):     ######"
      End If 
      POS_ = 60
    Else 
      POLINE$[POS_,POS_] = ","
      POLINE$[POS_ + 1,POS_ + 7] = PONUM Using " ######"
      POS_ = POS_ + 8
    End If 
  End If 
  Goto SEARCHAPPOH
End If 
L_2200: Rem TOTALS CALC
T[0] = T[0] + grossapamt \ T[1] = T[1] + discapamt \ T[2] = T[2] + netapamt
If O1 <> 2 Let T2[0] = T2[0] - grossapamt
If O1 = 2 Let T2[1] = T2[1] - grossapamt
If C0[6] Gosub L_7600
let distflag=0
K4$ = R[3] Using "#####"
Search #4,3,1;K4$,R[4],E \ If E Goto L_2280
X = K4$[1,5] \ If X = R[3] Goto L_2309
L_2280: Print #0; Tab 112;"DISTRIBUTIONS NOT FOUND"
If grossapamt <> 0
  F9 = 99 \ ERRFLAG[1] = 99
End If 
If grossapamt = 0 Let F9 = 99 \ ERRFLAG[1] = 1
Unlock #3
! Verify in apdeth file
If o$[1,1]<>"9" ! not a delete
	search #10,2,1;k1$,r[10],e
	if e<>0
		print #0; tab 25;"*Above Transaction is Missing in A/P History File. Please Delete and Re-enter.*"
		let l=l+1
		let f9=99
		let errflag[6]=99
		goto prntmsg: 
	endif
	! check for apdeta distributions
	if grossapamt<>0
		let tmpkey$=" ",tmpkey$
		let tmpkey$[1,6]=r[10] using "######" 
		search #44,3,1;tmpkey$,r[0],e
		if e<>0
			print #0; tab 25;"*Above Transaction is Missing in A/P History G/L File. Please Delete and Re-enter.*"
			let l=l+1
			let f9[1]=99
			let errflag[6]=99
			goto prntmsg:
		else
			let tmp3=tmpkey$[1,6]
			if tmp3<>r[10]
				print #0; tab 25;"*Above Transaction is Missing in A/P History G/L File. Please Delete and Re-enter.*"
				let l=l+1
				let f9[1]=99
				let errflag[6]=99
				goto prntmsg:! 
			endif
		endif
	endif
endif
prntmsg: !
If msgflg<>0
	if rtrim$(apmsg$)<>"" 
		print #0;tab 25;"Message: ";apmsg$
		let l=l+1
	endif
	if rtrim$(chkmsg$)<>"" 
		print #0;tab 25;"Chk Msg: ";chkmsg$
		let l=l+1
	endif
endif
Goto L_2000
L_2305: Search #4,3,1;K4$,R[4],E ! \ If E = 2 Goto L_2400
If E<>0
	if e<>2 Gosub ERR_SEARCH
endif
!X = K4$[1,5] \ If X <> R[3] Goto L_2400
X = K4$[1,5] 
If X <> R[3] or e=2
	if msgflg<>0
		if rtrim$(apmsg$)<>""
			print #0;tab 25;"Message: ";apmsg$
			let l=l+1
		endif
		if rtrim$(chkmsg$)<>""
			print #0;tab 25;"Chk Msg: ";chkmsg$
			let l=l+1
		endif
	endif
	let msgflg=0
	let apmsg$=" ",apmsg$
	let chkmsg$=" ",chkmsg$
	Goto L_2400
endif
gosub L_5800:
L_2309: Mat Read #4,R[4],20;D1;
let gldistamt=d1[1]
if p61$[136,136]="Y" and currpass<>0 and oi_currfact<>0
	if gldistamt<>0
		let cnvcu[0]=1
		let cnvcu[1]=1
		let cnvca[0]=gldistamt
		let cnvca[1]=oi_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let gldistamt=fnr(cnvca[0])
	endif
endif
if msgflg<>0 and distflag<>0
		if rtrim$(apmsg$)<>""
			print #0;tab 25;"Message: ";apmsg$;
			let apmsg$=" ",apmsg$
		endif
		if rtrim$(chkmsg$)<>""
			print #0;tab 25;"Chk Msg: ";chkmsg$;
			let chkmsg$=" ",chkmsg$
		endif
	if rtrim$(apmsg$)="" and rtrim$(chkmsg$)="" let msgflg=0
endif
Print #0; Using "########"; Tab 112;D1;
Print #0; Using "--------.##"; Tab 120;gldistamt
let distflag=99
T[3] = T[3] + gldistamt \ T2[3] = T2[3] + gldistamt
Gosub L_3160
Goto L_2305
L_2400: Mat Read #3,R[3],0;O$ \ O$[2,2] = "4" \ Mat Write #3,R[3],0;O$;
let distflag=0
If C0[4] And POLINE$ <> "" Gosub PRNTPOLINE
! Verify in apdeth file
If o$[1,1]<>"9" ! not a delete
	search #10,2,1;k1$,r[10],e
	if e<>0
		print #0; tab 25;"*Above Transaction is Missing in A/P History File. Please Delete and Re-enter.*"
		let l=l+1
		let f9=99
		let errflag[6]=99
	endif
endif
Goto L_2000
L_2500: Rem START PURCHASE ORDER SECTION
L = 99
K9$ = " ",K9$;KEYAP$ = "";MULTPO = 0;POPRTFLAG = 0
L_2515: Search #9,3,1;K9$,R[9],E
Unlock #3
If E = 2 
	Goto L_4900
endif
If E Gosub ERR_SEARCH
If K9$[1,2] = "zz" Goto L_4900
R[21] = R[9] \ Gosub L_7200
! verify data  with key flag
let tmp=k9$[1,6] ! ap vendor code
if tmp<>aph0[0]
	goto printpoerr:
endif
if k9$[7,18]<>aph$[1,12]
	goto printpoerr:
endif
let tmp=k9$[19,20]
if tmp<>aph1[0]
	goto printpoerr:
endif
let tmp=k9$[21,26]
if tmp<>aph0[1]
	goto printpoerr:
endif
If Not(APH0[1]) Goto L_2515
If KEYAP$[1,20] <> K9$[1,20]
  Gosub PRTPOSUB
  If PBPO Let L = 99
End If 
K3$ = K9$[1,20]
Search #3,2,1;K3$,R[3],E \ If E Gosub ERR_SEARCH
Gosub L_7100
If O$[1,1] = "9" Gosub L_3200
VENDCODE = APH0[0] \ Gosub L_7160
K31$ = " ",K31$ \ K31$[1,6] = APH0[2] Using "######"
K31$[7,12] = APH0[1] Using "######"
Search #31,2,2;K31$,R[31],E
If E<>0
  !If Not(aphmerch) And Not(aphfreight) And Not(aphmisc) Goto L_2515
  !Gosub ERR_SEARCH
  goto printpoerr:
End If 
PFLAG = 99;POPRTFLAG = 99
Gosub L_7400
Gosub L_5800 \ Gosub L_5500
Gosub L_5100
K22$ = " ",K22$ \ K22$[1,26] = K9$[1,26];KEYAPL$ = "";MULTIPOLINE = 0
L_2595: Search #22,3,1;K22$,R[22],E
If E = 2
  KEYAP$ = "" \ Goto L_2740
End If 
If E Gosub ERR_SEARCH
If K22$[1,26] <> K9$[1,26] Goto L_2740
If KEYAPL$ <> ""
  KEYAPL$ = K22$[1,26];MULTIPOLINE = 0
Else 
  MULTIPOLINE = 99
End If 
Gosub L_7250
If Not(APL2[0]) And Not(APL2[2]) Goto L_2595
K32$ = " ",K32$ \ K32$[1,6] = APH0[1] Using "######"
K32$[7] = APL1[3] Using "###"
Search #32,2,1;K32$,R[32],E \ If E Gosub ERR_SEARCH
PCT6[0] = 0;PCT6[1] = 0
Gosub L_7450 \ Gosub L_7500
PFLAG = 98
BAPQTY = APL2[0]
If Not(SPO)
  BPOQTY = L3[3] - PL[3]
  If O$[1,1] = "9" Let BPOQTY = BPOQTY - APL2[0]
  If BPOQTY < 0 Let BPOQTY = 0
  If Not(APL1[4]) And Abs(BAPQTY) < Abs(BPOQTY) ! not close and qty<received
    BPOQTY = BAPQTY
  Else 
    If O$[1,1] = "9" Let BPOQTY = BPOQTY * (-1)
  End If 
Else 
  KEYPOCT$ = " ",KEYPOCT$
  KEYPOCT$[1,6] = APL0[1] Using "######"
  KEYPOCT$[7,12] = APL0[2] Using "######"
  KEYPOCT$[13,16] = APL1[3] Using "####"
  KEYPOCT$[17,18] = APL1[5] Using "##"
  Search #38,2,1;KEYPOCT$,R[38],E !\ If E Gosub ERR_SEARCH
  if e<>0
	If Not(aphmerch) And Not(aphfreight) And Not(aphmisc) Goto ENDPOCUPDATE:
	if o$[1,1]="9" goto endpocupdate:
	gosub err_search:
  endif
  Mat Read #38,R[38],0;PCT1;
  Mat Read #38,R[38],24;PCT2;
  Mat Read #38,R[38],60;PCT3;
  Mat Read #38,R[38],66;PCT$;
  Mat Read #38,R[38],78;PCT4;
  Mat Read #38,R[38],90;PCT5;
  Mat Read #38,R[38],162;PCT6;
  Mat Read #38,R[38],180;PCT9;
  Mat Read #38,R[38],288;PCT0;
  mat read #38,r[38],548;poc_currid;
  mat read #38,r[38],550;poc_currfact;
  Gosub L_7500
  PENDQTY = PCT2[5] - APL2[0] \ If PENDQTY < 0 Let PENDQTY = 0
  BPOQTY = PCT2[0] - PCT2[3]
  If PENDQTY Let BPOQTY = BPOQTY - PENDQTY
  If O$[1,1] = "9" Let BPOQTY = BPOQTY - APL2[0]
  If BPOQTY < 0 Let BPOQTY = 0
  If Not(APL1[4]) And Abs(BAPQTY) < Abs(BPOQTY)
    BPOQTY = BAPQTY
  Else 
    If O$[1,1] = "9" Let BPOQTY = BPOQTY * (-1)
  End If 
End If 
currfact=0
If SPO
	CURRFACT=POC_CURRFACT
  CNVTA = PCT2[1]
Else 
	CURRFACT=POL_CURRFACT
  CNVTA = PL4[0]
End If 
CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
Gosub L_20000 \ POCOST = AMOUNT
If (L1[5] = -1 Or L1[5] = -3)
  If SPO
    POTOT = FNR(BPOQTY * PCT2[1] * CWT_WT_ADJ)
  Else 
    POTOT = FNR(BPOQTY * PL4[0] * CWT_WT_ADJ)
  End If 
Else 
  If L1[5] = -2
    If SPO
      POTOT = PCT2[1]
    Else 
      POTOT = PL4[0]
    End If 
  Else 
    DISP_QTY = BPOQTY
    If SPO
      DISP_COST = PCT2[1]
    Else 
      DISP_COST = PL4[0]
    End If 
    Gosub CALC_DISP_EXT
    POTOT = DISP_EXT
  End If 
End If 
If PCT0
  CNVTA = PL4[0];CNVTU[0] = 0;CNVTU[1] = -3;CNVTU[2] = 2
  Gosub L_20000
  POTOT = FNR(BPOQTY * AMOUNT)
End If 
If Not(PCT0)
  CNVTA = BPOQTY;CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
  Gosub L_20000 \ POQTY = AMOUNT
  CNVTA = APL2[0];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
  Gosub L_20000 \ CURRQTY = AMOUNT
Else 
  L1[4] = -3
  POQTY = BPOQTY
  CURRQTY = APL2[0]
End If 
A[5] = POFACT;A[6] = POLBS
CNVTA = APL2[1];CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
Gosub L_20000 \ CURRCOST = AMOUNT
A[5] = PRODFACT;A[6] = PRODLBS
If (L1[5] = -1 Or L1[5] = -3)
  APL2[2] = FNR(APL2[0] * APL2[1])
Else 
  If L1[5] = -2
    APL2[2] = APL2[1]
  Else 
    DISP_QTY = APL2[0];DISP_COST = APL2[1]
    Gosub CALC_DISP_EXT
    APL2[2] = DISP_EXT
  End If 
End If 
If PCT0
  APL2[2] = FNR(APL2[0] * CURRCOST)
End If 
If O1 = 2 Let APL2[2] = - APL2[2];POTOT = - POTOT
IF P61$[136,136]="Y" and CURRPASS<>0
	LET AMOUNT=APL2[2]
	if Apl_currfact <>0 and amount<>0  ! going for base to costing um
		let cnvcu[0]=1
		let cnvcu[1]=1 ! no rounding
		let cnvca[0]=amount
		let cnvca[1]=apl_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let apl2[2]=fnr(cnvca[0])
	endif
	LET AMOUNT=CURRCOST
	if Apl_currfact <>0 and amount<>0  ! going for base to costing um
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=amount
		let cnvca[1]=apl_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let CURRCOST=fnr(cnvca[0])
	endif
	LET AMOUNT=potot
	LET CURRFACT=0
	if POH_currid<>0 let currfact=poh_currfact
	if currfact <>0 and amount<>0  ! going for base to costing um
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=amount
		let cnvca[1]=currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let potot=fnr(cnvca[0])
	endif
	LET AMOUNT=poCOST
	LET CURRFACT=0
	if POl_currid<>0 let currfact=pol_currfact
	if currfact <>0 and amount<>0  ! going for base to costing um
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=amount
		let cnvca[1]=currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let poCOST=fnr(cnvca[0])
	endif
endif
Gosub L_5200
T8[0] = T8[0] + POTOT
T8[1] = T8[1] + APL2[2]
If Not(APL2[2] - POTOT) Goto L_2735
K37$ = APL0[0] Using "######" \ M1[15] = 0
Search #37,2,1;K37$,R[37],E \ If E Goto L_2725
Mat Read #37,R[37],206;M1;
L_2725: K90$ = " ",K90$ \ K90$[1,2] = "zz" \ K90$[3,4] = M1[15] Using "##"
K90$[5] = K22$ 
Search #9,2,1;K90$,R[22],E
if e<>0 
	Search #9,4,1;K90$,R[22],E \ If E Gosub ERR_SEARCH
endif
ENDPOCUPDATE: ! end pocupdate
L_2735: Goto L_2595
L_2740: Gosub L_4700
Goto L_2515

printpoerr: ! print error on purchase order
print #0; tab 10;"*AP-PO Error. Vendor: ";k9$[1,6];" Transaction: ";k9$[7,18];" Please Delete and Re-enter.*"
let l=l+1
let f9=99
let errflag[7]=99
goto L_2515: ! get next ap po transaction

! start buyer sort
BUYER = 999 \ PFLAG = 50
K9$ = "zz"
L_2815: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_4500
If E Gosub ERR_SEARCH
If K9$[1,2] <> "zz" Goto L_2815
X1 = K9$[3,4] \ If BUYER <> X1 Let L = 99
BUYER = X1
R[22] = R[9] \ Gosub L_7250
K32$ = " ",K32$ \ K32$[1,6] = APL0[1] Using "######"
K32$[7] = APL1[3] Using "###"
Search #32,2,1;K32$,R[32],E \ If E Gosub ERR_SEARCH
Gosub L_7450 \ Gosub L_7500
POFLAG = 50
If SPO
  CNVTA = PCT2[1]
Else 
  CNVTA = L2[0]
End If 
CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
Gosub L_20000 \ POCOST = AMOUNT
If (L1[5] = -1 Or L1[5] = -3)
  If SPO
    POTOT = FNR(APL2[0] * PCT2[1] * CWT_WT_ADJ)
  Else 
    POTOT = FNR(APL2[0] * PL4[0] * CWT_WT_ADJ)
  End If 
Else 
  If L1[5] = -2
    If SPO Let POTOT = PCT2[1] Else Let POTOT = PL4[0]
  Else 
    DISP_QTY = APL2[0]
    If SPO
      DISP_COST = PCT2[1]
    Else 
      DISP_COST = PL4[0]
    End If 
    Gosub CALC_DISP_EXT
    POTOT = DISP_EXT
  End If 
End If 
CNVTA = APL2[0];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_20000 \ CURRQTY = AMOUNT
CNVTA = APL2[1];CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
Gosub L_20000 \ CURRCOST = AMOUNT
If (L1[5] = -1 Or L1[5] = -3)
  APL2[2] = FNR(APL2[0] * APL2[1] * CWT_WT_ADJ)
Else 
  If L1[5] = -2
    APL2[2] = APL2[1]
  Else 
    DISP_QTY = APL2[0];DISP_COST = APL2[1]
    Gosub CALC_DISP_EXT
    APL2[2] = DISP_EXT
  End If 
End If 
If O1 = 2 Let APL2[2] = - APL2[2];POTOT = - POTOT
Gosub L_5800
Gosub L_3600
Goto L_2815
L_3000: Rem PRINT VENDOR TOTALS
If TOTFLAG = 0 Return 
Gosub L_5800
Print #0;"** VENDOR TOTALS **";
Print #0; Using "--,---,---.##"; Tab 74;T[0];
Print #0; Using "---,---.##"; Tab 88;T[1];
Print #0; Using "-----,---.##"; Tab 99;T[2];
Print #0; Using "--------.##"; Tab 120;T[3]
Print #0;" "
L = L + 1
For I = 0 To 3
  T9[I] = T9[I] + T[I]
  T[I] = 0
Next I
Return 
L_3100: Rem PRINT VENDOR NAME & ADDRESS
Gosub L_5800
Print #0; Using "######";A1;"  ";A$[1,30]
Return 
L_3160: Rem INSERT KEY INTO A20DD
if not(currpass)
	K2$ = " ",K2$ \ K2$[1,9] = D1 Using "#########"
	K2$[13,16] = L[1] Using "####" \ R[5] = R[4]
	Search #5,4,1;K2$,R[5],E \ If E Gosub ERR_SEARCH
endif
L[1] = L[1] + 1
Return 
L_3200: Rem REVERSE TOTALS FOR DELETE
For I = 0 To 8
  If I <> 6 Let O3[I] = - O3[I]
Next I
let grossapamt=-grossapamt
let discapamt=-discapamt
let netapamt=-netapamt
Return 

L_3500: Rem BUYER VARIANCE HEADING
Print #0;"VENDOR#";
Print #0; Tab 10;"P.O.#";
Print #0; Tab 17;"PRODUCT";
Print #0; Tab 30;"DESCRIPTION";
Print #0; Tab 66;"QUANTITY";
Print #0; Tab 80;"PO COST";
Print #0; Tab 95;"AP COST";
Print #0; Tab 109;"EXT AP COST";
Print #0; Tab 123;"VARIANCE";
Print #0;""
Print #0; Tab 5;"BUYER:  ";BUYER
Print #0;""
Return 
L_3600: Rem PRINT BUYER LINE
Print #0; Using "######"; Tab 1;APL0[0];
Print #0; Using "######"; Tab 9;APL0[1];
Print #0; Tab 17;L1$[81,92];
Print #0; Tab 30;L1$[1,30];
X0 = L1[4] \ Gosub L_4600
Print #0; Using PMASK$; Tab 62;CURRQTY;"/";M1$[1,3];
X0 = L1[5] \ Gosub L_4600
If L1[5] <> -3
  Print #0; Using PMASK$; Tab 78;POCOST;"/";M1$[1,3];
Else 
  Print #0; Using PMASK1$; Tab 78;POCOST;"/";M1$[1,3];
End If 
If L1[5] <> -3
  Print #0; Using PMASK$; Tab 93;CURRCOST;"/";M1$[1,3];
Else 
  Print #0; Using PMASK1$; Tab 93;CURRCOST;"/";M1$[1,3];
End If 
Print #0; Using "---------.##"; Tab 108;APL2[2];
Print #0; Using "--------.##"; Tab 121;(APL2[2] - POTOT);
Print #0;""
Return 
L_4000: Rem TOTAL PRINT
Gosub L_3000
Gosub L_5800
Print #0;"** GRAND TOTALS **";
Print #0; Using "--,---,---.##"; Tab 74;T9[0];
Print #0; Using "---,---.##"; Tab 88;T9[1];
Print #0; Using "-----,---.##"; Tab 99;T9[2];
Print #0; Using "--------.##"; Tab 120;T9[3]
For I = 0 To 3
  T9[I] = 0
Next I
L = 99
if p61$[136,136]="Y" and currpass<>0
	for i=0 to 3\let t2[i]=0\next i
	L = 99 \ L[1] = 1 \ F9 = 0 \ R9 = 0
	PFLAG=0
	K1$ = " ",K1$ ! ;V9 = 0;PCTR = 0
	if not(c0[4])
		let currpass=0
		let k9$=" ",k9$
		do
			Search #9,3,1;K9$,R[9],E
			if e<>0 exit do
			search #9,5,1;k9$,r[9],e! #1
			if e<>0 exit do
		loop
		Unlock #3
		goto L_2000
	else
		Unlock #3
		goto L_2500
	endif
endif

R9 = 2
T2[2] = T2[0] + T2[1] + T2[3]
T2[2] = - T2[2]
If C0[6] Goto L_4160
If Not(T2[0]) Goto L_4140
gldistamt = T2[0] \ D1 = Q[0] \ B$ = "ACCOUNTS PAYABLE"
d1[1]=t2[0]
Gosub L_4300
L_4140: If Not(T2[1]) Goto L_4160
gldistamt = T2[1] \ D1 = Q[1] \ B$ = "CREDIT MEMO"
d1[1]=t2[1]
Gosub L_4300
L_4160: If Not(T2[2]) Goto L_4171
gldistamt = T2[2] \ D1 = Q[2] \ B$ = "SUSPENSE"
F9 = 99 \ ERRFLAG[2] = 99
let d1[1]=t2[2]
Gosub L_4300
L_4171: If Not(C0[6]) Goto L_4200
K50$ = " ",K50$
L_4177: Search #50,3,1;K50$,R[50],E \ If E = 2 Goto L_4200
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT; \ K17$ = " ",K17$
K17$[1,2] = K50$[1,2] \ Search #17,2,1;K17$,R[17],E \ If Not(E) Goto L_4185
If E > 1 Gosub ERR_SEARCH
DV1$[1,12] = Q[0] Using "#########   " \ DV2$[1,12] = Q[1] Using "#########   "
Goto L_4186
L_4185: Mat Read #17,R[17],42;DV1$; \ Mat Read #17,R[17],54;DV2$;
L_4186: If Not(DIVTOT[0]) Goto L_4188
gldistamt = DIVTOT[0] \ D1 = DV1$[2,9] \ B$ = "ACCOUNTS PAYABLE"
Gosub L_4300
L_4188: If Not(DIVTOT[1]) Goto L_4195
gldistamt = DIVTOT[1] \ D1 = DV2$[2,9] \ B$ = "CREDIT MEMO" 
Gosub L_4300
L_4195: Goto L_4177
L_4200: K1$ = " ",K1$ \ K2$ = " ",K2$ \ T9 = 0 \ Gosub L_5800
Print #0;" " \ Print #0; Tab 33;"**** ACCOUNT SUMMARY TOTALS ****"
Print #0;" " \ L = L + 2
L_4210: Search #5,3,1;K1$,R[5],E \ If E = 2 Goto L_4400
If E Gosub ERR_SEARCH
If K1$[1,9] <> K2$[1,9] Gosub L_4250
K2$[1,9] = K1$[1,9]
R[4] = R[5] \ Mat Read #4,R[4],20;D1;
let gldistamt=d1[1]
T9 = T9 + gldistamt
Goto L_4210
L_4250: If Not(T9) Return 
B$ = "ACCT NOT ON FILE!!" \ K3$ = " ",K3$ \ K3$[1,9] = K2$[1,9]
Search #6,2,1;K3$,R[6],E \ If E = 1 Let F9 = 3 \ If E Goto L_4280
Mat Read #6,R[6],12;B$;
L_4280: Gosub L_5800
Print #0; Tab 20;K2$[2,9]; Tab 35;B$[1,15];
Print #0; Using "--,---,---.##"; Tab 55;T9
T9 = 0
Return 

L_4300: Rem PRINT TOTALS
Gosub L_5800
Print #0; Using "####"; Tab 10;L[1];
Print #0; Using "########"; Tab 20;D1;
Print #0; Tab 35;B$;
Print #0; Using "--,---,---.##"; Tab 55;gldistamt
if not(currpass)
	K4$ = " ",K4$ \ K4$[1,1] = "0" \ K4$[2,10] = D1 Using "#########"
	K4$[11,14] = L[1] Using "####"
	E = 2 \ Search #4,1,0;K4$,R[4],E \ If E Gosub ERR_SEARCH
	D = 0 \ D[1] = 0 \ D2[1] = L[1] \ D2[2] = 0
	Mat Write #4,R[4],0;D; \ Mat Write #4,R[4],20;D1;
	Mat Write #4,R[4],32;D2;
	Search #4,4,1;K4$,R[4],E \ If E Gosub ERR_SEARCH
	Gosub L_3160
endif
Return 
L_4400: Rem AUDIT LIST SECTION
Gosub L_4250
R9 = 1 \ If L + 6 >= 62 Let L = 99 \ Goto L_4409
Print #0;"" \ Print #0; Tab 50;"GENERAL LEDGER AUDIT LIST"
Print #0;""
Print #0; Tab 10;"ACCOUNT#"; Tab 25;"LINE"; Tab 35;"DESCRIPTION";
Print #0; Tab 63;"DEBIT"; Tab 85;"CREDIT" \ Print #0;""
L = L + 5
L_4409: K1$ = " ",K1$
L_4410: Search #5,3,1;K1$,R[5],E \ If E = 2 Goto L_4490
If E Gosub ERR_SEARCH
R[4] = R[5] \ Mat Read #4,R[4],20;D1;
gldistamt=D1[1]
B$ = "ACCT NOT ON FILE!!"
K2$ = " ",K2$ \ K2$[1,9] = K1$[1,9]
Search #6,2,1;K2$,R[6],E
If E
  F9 = 99 \ ERRFLAG[3] = 99
  Goto L_4460
End If 
Mat Read #6,R[6],12;B$;
L_4460: Gosub L_5800
Print #0; Tab 9;K1$[1,9]; Tab 25;K1$[13,16];
Print #0; Tab 35;B$[1,15];
If gldistamt >= 0 Print #0; Using "##,###,###.##"; Tab 55;gldistamt
If gldistamt < 0 Print #0; Using "##,###,###.##"; Tab 79;gldistamt
Goto L_4410
L_4490: If Not(C0[4]) Goto L_4500
Goto L_2500
L_4500: Rem END
if p61$[136,136]="Y" and currpass<>0
	for i=0 to 3\let t2[i]=0\next i
	L = 99 \ L[1] = 1 \ F9 = 0 \ R9 = 0
	PFLAG=0
	K1$ = " ",K1$ ! ;V9 = 0;PCTR = 0
	let currpass=0
	let k9$=" ",k9$
	do
		Search #9,3,1;K9$,R[9],E
		if e<>0 exit do
		search #9,5,1;k9$,r[9],e ! #2
		if e<>0 exit do
	loop
	Unlock #3
	GOTO L_2000:
endif
Unlock #3
If F9 Goto L_8950
!If Err 0 Rem
Try Close #0 Else Rem
!If Err 0 Gosub ERR_TRAP
Unlock #3
L_4525:! Print @0,23;'CL';"PURCHASE JOURNAL OK (Y/N) ";
!Input Len (16384 + 1);""X$
!Call String(1,X$)
if audonly goto outend:
!If X$ = "Y" Goto L_4550
!If X$ <> "N" Goto L_4525
!Goto OUTEND
L_4550: !If Err 0 Gosub ERR_TRAP
Rem REM BEFORE ACCEPT STARTED, CK BATCH STATUS TO MAKE SURE STILL OK(=4)
If C0[3] <> 0
  Mat Read #14,R[14],8;B5;
  If B5 <> 4
    TERMINATEFLAG = 99
    Gosub L_8000
    TERMINATEFLAG = 0
    eflag=eflag+1
    Message$="For Period "+str$(b4)+ "Batch "+str$(b4[1])+" Has Incorrect Status of "+str$(b5)
    message$=message$+". May Not Accept this batch"
    goto outend
  End If 
End If 
Gosub L_8700
If Not(C0[3])
  B4[1] = JRNL
End If 
Goto L_9100 ! start updating transactions

L_4600: Rem GET UNITS
If X0 = -1 Let M1$ = "CWT " \ Goto L_4615
If X0 = -2 Let M1$ = "LOT " \ Goto L_4615
If X0 = -3 Let M1$ = "LB  " \ Goto L_4615
Read #35,X0,10;M1$;
L_4615: Return 
L_4700: Rem PRINT POTOT
POFREIGHT = 0 \ POMISC = 0
If MULTIPOLINE<>0
  If aphfreight <> 0 or aphmisc <> 0
    If T8[0] <> 0 or T8[1] <> 0
      Gosub L_5800
      Print #0; Tab 55;"SUBTOTAL: ";
      Print #0; Using "--------.##"; Tab 70;T8[0]; Tab 110;T8[1];
      Print #0; Using "-------.##"; Tab 121;(T8[1] - T8[0]);
      Print #0;""
    End If 
  End If 
End If 
If aphfreight<>0
  POFREIGHT = 0
  If pohfrtamt<>0 Let POFREIGHT = pohfrtamt - pohfrtappl
  If O$[1,1] = "9" Let POFREIGHT = pohfrtamt + pohfrtappl + aphfreight \ POFREIGHT = - POFREIGHT
  If O1 = 2 Let POFREIGHT = - POFREIGHT;aphfreight = - aphfreight
  Gosub L_5800
  Print #0; Tab 55;"FREIGHT";
  Print #0; Using "--------.##"; Tab 70;POFREIGHT;
  Print #0; Using "--------.##"; Tab 110;aphfreight;
  Print #0; Using "-------.##"; Tab 121;(aphfreight - POFREIGHT);
  Print #0;""
  ! If O1 = 2 Let POFREIGHT = - POFREIGHT;aphfreight = - aphfreight
End If 
If aphmisc<>0
  POMISC = 0
  If pohmiscamt<>0 Let POMISC = pohmiscamt - pohmiscappl
  If O$[1,1] = "9" Let POMISC = pohmiscamt + pohmiscappl + aphmisc \ POMISC = - POMISC
  If O1 = 2 Let POMISC = - POMISC;aphmisc = - aphmisc
  Gosub L_5800
  Print #0; Tab 55;"MISC CHARGES";
  Print #0; Using "--------.##"; Tab 70;POMISC;
  Print #0; Using "--------.##"; Tab 110;aphmisc;
  Print #0; Using "-------.##"; Tab 121;(aphmisc - POMISC);
  Print #0;""
  ! If O1 = 2 Let POMISC = - POMISC;aphmisc = - aphmisc
End If 

Gosub L_5800
If O1 = 2 Let aphmerch = - aphmerch
U9$ = "=",U9$
If Not(MULTPO)
  If K22$[1,20] <> KEYAP$[1,20]
    If O1 = 2 
		Mat Read #21,R[21],30;APH2;
		for ctr=0 to 2\let aph2[ctr]=aph2[ctr]*-1 \ next ctr
		let aphmerch=aph2[0]
		let aphfreight=aph2[1]
		let aphmisc=aph2[2]
		if p61$[136,136]="Y" and currpass<>0 and aph_currfact<>0
			if aphmerch<>0
				let cnvcu[0]=1
				let cnvcu[1]=1 
				let cnvca[0]=aphmerch
				let cnvca[1]=aph_currfact
				call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
				let aphmerch=fnr(cnvca[0])
			endif
			if aphfreight<>0
				let cnvcu[0]=1
				let cnvcu[1]=1 
				let cnvca[0]=aphfreight
				let cnvca[1]=aph_currfact
				call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
				let aphfreight=fnr(cnvca[0])
			endif
			if aphmisc<>0
				let cnvcu[0]=1
				let cnvcu[1]=1 
				let cnvca[0]=aphmisc
				let cnvca[1]=aph_currfact
				call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
				let aphmisc=fnr(cnvca[0])
			endif
		Endif
	endif
	
    If Abs(grossapamt) > Abs(aphmerch + aphfreight + aphmisc)
      Print #0;"*A/P amount is greater than applied*!!!";
    End If 
    If Abs(grossapamt) < Abs(aphmerch + aphfreight + aphmisc)
      Print #0;"*A/P amount is less than applied*";
    End If 
    APAMT[0] = APAMT[0] + grossapamt;APAMT[1] = APAMT[1] + (aphmerch + aphfreight + aphmisc)
  Else 
    U9$ = "-",U9$
  End If 
Else 
  U9$ = "-",U9$
End If 
!If O1 = 2
!  POFREIGHT = - POFREIGHT;POMISC = - POMISC;aphfreight = - aphfreight;aphmisc = - aphmisc
!End If 
Print #0; Tab 55;"TOTAL: ";
Print #0; Using "--------.##"; Tab 70;(T8[0] + POFREIGHT + POMISC); Tab 110;(T8[1] + aphfreight + aphmisc);
Print #0; Using "-------.##"; Tab 121;((T8[1] + aphfreight + aphmisc) - (T8[0] + POFREIGHT + POMISC));
Print #0;""
POFLAG = 99
T7[1,0] = T7[1,0] + POFREIGHT \ T7[2,0] = T7[2,0] + POMISC
T7[1,1] = T7[1,1] + aphfreight \ T7[2,1] = T7[2,1] + aphmisc
T7[0,0] = T7[0,0] + T8[0] \ T7[0,1] = T7[0,1] + T8[1]
T6[1,0] = T6[1,0] + POFREIGHT \ T6[2,0] = T6[2,0] + POMISC
T6[1,1] = T6[1,1] + aphfreight \ T6[2,1] = T6[2,1] + aphmisc
T6[0,0] = T6[0,0] + T8[0] \ T6[0,1] = T6[0,1] + T8[1]
T8[0] = 0 \ T8[1] = 0
Print #0;U9$;
Print #0;""
L = L + 1
Return 
PRTPOSUB: Rem print multi po subtotals
If MULTPO
  Gosub L_5800
  If Abs(grossapamt) > Abs(T6[0,1] + T6[1,1] + T6[2,1])
    Print #0;"*A/P amt greater than amt applied *";
  End If 
  If Abs(grossapamt) < Abs(T6[0,1] + T6[1,1] + T6[2,1])
    Print #0;"*A/P amt is less than amt applied *";
  End If 
  APAMT[0] = APAMT[0] + grossapamt;APAMT[1] = APAMT[1] + (T6[0,1] + T6[1,1] + T6[2,1])
  Print #0; Tab 40;"  A/P TOTAL - MERCHANDISE:";
  Print #0; Using "--------.##"; Tab 70;T6[0,0]; Tab 110;T6[0,1];
  Print #0; Using "-------.##"; Tab 121;(T6[0,1] - T6[0,0])
  If T6[1,0] <> 0 Or T6[1,1] <> 0
    Gosub L_5800
    Print #0; Tab 40;"      TOTAL - FREIGHT    :";
    Print #0; Using "--------.##"; Tab 70;T6[1,0]; Tab 110;T6[1,1];
    Print #0; Using "-------.##"; Tab 121;(T6[1,1] - T6[1,0]);
    Print #0;""
  End If 
  If T6[2,0] <> 0 Or T6[2,1] <> 0
    Gosub L_5800
    Print #0; Tab 40;"      TOTAL - MISC CHARGE:";
    Print #0; Using "--------.##"; Tab 70;T6[2,0]; Tab 110;T6[2,1];
    Print #0; Using "-------.##"; Tab 121;(T6[2,1] - T6[2,0]);
    Print #0;""
  End If 
  If T6[1,0] <> 0 Or T6[1,1] <> 0 Or T6[2,0] <> 0 Or T6[2,1] <> 0
    Gosub L_5800
    Print #0; Tab 70;"-----------"; Tab 110;"-----------"; Tab 121;"----------"
    Print #0; Tab 40;"      TOTAL              :";
    Print #0; Using "--------.##"; Tab 70;(T6[0,0] + T6[1,0] + T6[2,0]); Tab 110;(T6[0,1] + T6[1,1]) + T6[2,1];
    Print #0; Using "-------.##"; Tab 121;((T6[0,1] + T6[1,1] + T6[2,1]) - (T6[0,0] + T6[1,0] + T6[2,0]))
    L = L + 1
  End If 
  U9$ = "=",U9$
  Print #0;U9$[1,131]
  Print #0;""
End If 
For X = 0 To 2
  For I = 0 To 1 \ T6[X,I] = 0 \ Next I
Next X
MULTPO = 0
L = L + 1
Return 
L_4900: Rem POGRAND TOTALS
If POPRTFLAG = 0 
	if p61$[136,136]="Y" and currpass<>0
	else
		Goto L_4500
	endif
endif
Gosub PRTPOSUB
POFLAG = 98
Gosub L_5800
Print #0; Tab 20;"GRAND TOTAL - MERCHANDISE:";
Print #0; Using "--------.##"; Tab 70;T7[0,0]; Tab 110;T7[0,1];
Print #0; Using "-------.##"; Tab 121;(T7[0,1] - T7[0,0])
Gosub L_5800
Print #0; Tab 20;"GRAND TOTAL - FREIGHT    :";
Print #0; Using "--------.##"; Tab 70;T7[1,0]; Tab 110;T7[1,1];
Print #0; Using "-------.##"; Tab 121;(T7[1,1] - T7[1,0]);
Print #0;""
Gosub L_5800
Print #0; Tab 20;"GRAND TOTAL - MISC CHARGE:";
Print #0; Using "--------.##"; Tab 70;T7[2,0]; Tab 110;T7[2,1];
Print #0; Using "-------.##"; Tab 121;(T7[2,1] - T7[2,0]);
Print #0;""
Gosub L_5800
Print #0; Tab 70;"-----------"; Tab 110;"-----------"; Tab 121;"----------"
Print #0; Tab 20;"GRAND TOTAL              :";
Print #0; Using "--------.##"; Tab 70;(T7[0,0] + T7[1,0] + T7[2,0]); Tab 110;(T7[0,1] + T7[1,1]) + T7[2,1];
Print #0; Using "-------.##"; Tab 121;((T7[0,1] + T7[1,1] + T7[2,1]) - (T7[0,0] + T7[1,0] + T7[2,0]))
L = L + 1
For X = 0 To 2
  For I = 0 To 1 \ T7[X,I] = 0 \ T6[X,I] = 0 \ Next I
Next X
If APAMT[0] <> 0 And APAMT[1] <> 0 And (Abs(APAMT[0]) - Abs(APAMT[1])) <> 0
  Print #0; Tab 70;"==========="; Tab 110;"==========="; Tab 121;"=========="
  L = L + 1
  Gosub L_5800
  Print #0;" " \ L = L + 1
  Print #0; Using "--------.##"; Tab 50;"A/P Amount"; Tab 70;APAMT[0];
  Print #0; Using "--------.##"; Tab 90;"A/P Applied"; Tab 110;APAMT[1];
  Print #0; Using "-------.##"; Tab 121;(Abs(APAMT[0]) - Abs(APAMT[1]))
End If 
Goto L_4500
L_5000: Rem PRINT LINE
Rem {begin src/inc/rtn.printmsg.i}
If Not(SCRPRT)
PCTR = PCTR + 1
 If Not(Fra(PCTR / 500))
    !Print Using "#######";@25,22;PCTR;" Records Printed";
   ! Print Using "   Page ####";V9[0];
  End If 
End If 
Rem {end rtn.printmsg.i}
If O1 < 1 Goto L_5005
If O1 > 3 Goto L_5005
Print #0; Using "####";L[1];
L_5005: Print #0; Tab 5;O1$[1,12]; \ If C0[6] Print #0; Using "###"; Tab 18;O4[1];
If O1 > 0 If O1 < 4 Goto L_5010
Print #0;"  INVALID INVOICE!!!"
Return 
L_5010: If O$[1,1] = "9" Print #0; Tab 22;"DEL";
If O$[1,1] = "9" Goto L_5019
Print #0; Tab 22;T$[O1 * 3 - 2,O1 * 3];
L_5019: X2 = O2[2] \ Gosub L_8900 \ Print #0; Tab 26;P$;
X2 = O2[3] \ Gosub L_8900 \ Print #0; Tab 35;P$;
X2 = O2[4] \ Gosub L_8900 \ Print #0; Tab 44;P$;
If O2[5] Print #0; Using "######"; Tab 53;O2[5];
If O2[6] Print #0; Using "######"; Tab 60;O2[6];
If Not(O2[1]) Goto L_5050
X2 = O2[1] \ Gosub L_8900 \ Print #0; Tab 67;P$;
L_5050: Print #0; Using "-----,---.##"; Tab 75;grossapamt;
Print #0; Using "---,---.##"; Tab 88;discapamt;
Print #0; Using "-----,---.##"; Tab 99;netapamt;
Return 
L_5100: Rem PO LINE HEADING
Gosub L_5800
L_5110: Print #0;"LN#";
Print #0; Tab 4;"PRODUCT";
Print #0; Tab 16;"DESCRIPTION/SIZE";
Print #0; Tab 45;"PO QTY";
Print #0; Tab 59;"PO COST";
Print #0; Tab 75;"EXT PO";
Print #0; Tab 85;"AP QTY";
Print #0; Tab 99;"AP COST";
Print #0; Tab 115;"EXT AP";
Print #0; Tab 123;"VARIANCE";
Print #0;""
Return 
L_5200: Rem PRINT PO LINE #1
Gosub L_5800
Print #0; Using "###";APL1[3];
Print #0; Tab 4;L1$[81,92];
Print #0; Tab 16;L1$[1,25];
X0 = L1[4] \ Gosub L_4600
Print #0; Using PMASK$; Tab 41;POQTY;M1$[1,3];
X0 = L1[5] \ Gosub L_4600
If L1[5] <> -3
  Print #0; Using PMASK$; Tab 56;POCOST;M1$[1,3];
Else 
  Print #0; Using PMASK1$; Tab 56;POCOST;M1$[1,3];
End If 
If POTOT >= 0
  Print #0; Using "#######.##"; Tab 71;POTOT;
Else 
  Print #0; Using "-------.##"; Tab 71;POTOT;
End If 
X0 = L1[4] \ Gosub L_4600
Print #0; Using PMASK$; Tab 81;CURRQTY;M1$[1,3];
X0 = L1[5] \ Gosub L_4600
If L1[5] <> -3
  Print #0; Using PMASK$; Tab 96;CURRCOST;M1$[1,3];
Else 
  Print #0; Using PMASK1$; Tab 96;CURRCOST;M1$[1,3];
End If 
If APL2[2] >= 0
  Print #0; Using "#######.##"; Tab 111;APL2[2];
Else 
  Print #0; Using "-------.##"; Tab 111;APL2[2];
End If 
Print #0; Using "-------.##"; Tab 121;(APL2[2] - POTOT);
Print #0;""
If SPO Print #0; Using "CNTRL######";APL0[2];
Print #0; Tab 16;L1$[31,60];
If L1$[61,63] <> "   " Print #0; Tab 51;"VENDOR ITEM # ";L1$[61,80];
If APL1[4] Print #0; Tab 100;"-LINE CLOSED-";
Print #0;""
L = L + 1
Return 
L_5500: Rem PO HEADING
If PFLAG <> 99 Return 
If KEYAP$ <> K3$ ! check if po is different invoice
  Print #0;"" \ L = L + 1
  Print #0; Using "###### ";"Vendor: ";APH0[0];A$[1,30];
  Print #0; Tab 50;"A/P TRANS: ";APH$[1,12];
  X2 = O2[2] \ Gosub L_8900
  Print #0; Tab 75;"A/P DATE: ";P$[1,8];
  Print #0; Using "---,---,---.##"; Tab 100;"A/P AMOUNT: ";grossapamt;
  Print #0;""
  KEYAP$ = K3$
  MULTPO = 0
  U9$ = "=",U9$ \ Print #0;U9$[1,131]
  L = L + 2
Else 
  MULTPO = 99
End If 
If APH0[0] <> APH0[2]
  VENDCODE = APH0[2]
  Gosub L_7160
  If APH1[0] = 2
    Print #0; Tab 15;"DM ";
  Else 
    Print #0; Tab 15;"PO ";
  End If 
  Print #0; Using "######  ";"Vendor: ";APH0[2];A$[1,30]
  L = L + 1
End If 
If APH1[0] = 2 Print #0; Tab 4;"DM#"; Else Print #0; Tab 4;"PO#";
Print #0; Using " ######";APH0[1];
Print #0; Tab 16;"VENDOR REF#: ";H$[1,14];
Print #0; Tab 34;"TYPE: ";
If H4[0] > 3 Print #0;"IMPORT ";
If H4[0] = 0 Or H4[0] = 4 Print #0;"WAREHOUSE ";
If H4[0] = 1 Or H4[0] = 5 Print #0;"DIRECT";
If H4[0] = 2 Or H4[0] = 6 Print #0;"INDIRECT";
If H4[0] = 3 Or H4[0] = 7 Print #0;"??????";
Print #0; Using "##"; Tab 56;"WHS: ";H4[1];
TOTAPPLD = aphmerch + aphfreight + aphmisc
If O1 = 2 Let TOTAPPLD = - TOTAPPLD
Print #0; Using "---,---,---.##"; Tab 100;"APPLIED AMT:";TOTAPPLD;
Print #0;""
U9$ = "-",U9$ \ Print #0;U9$
L = L + 2
PFLAG = 0
Return 
L_5600: Rem AUDIT LIST HEADER
Print #0; Tab 50;"GENERAL LEDGER AUDIT LIST"
Print #0;" "
Print #0; Tab 10;"ACCOUNT#"; Tab 25;"LINE";
Print #0; Tab 35;"DESCRIPTION";
Print #0; Tab 63;"DEBIT";
Print #0; Tab 85;"CREDIT"
Print #0;" "
L = 8
Return 
L_5700: Rem HEADING FOR GENERAL UPDATE
Print #0; Tab 50;"GENERAL UPDATE"
Print #0;" "
Print #0; Tab 10;"LINE#"; Tab 20;"ACCOUNT#";
Print #0; Tab 35;"DESCRIPTION"; Tab 63;"AMOUNT"
Print #0;" "
L = 8
Return 
PRNTPOLINE: Rem print poline for multiple po's
If POLINE$ = "" Return 
Gosub L_5800
Print #0;POLINE$
POLINE$ = "";POS_ = 0
Return 
L_5800: L = L + 1
If L < 60 Return 
If V9 Print #0;"\14\";
Print #0;"\15\"; Tab 10;"-la512-"; Tab 50;G9$[1,40]
V9 = V9 + 1
Print #0; Tab 10;D$;
Print #0; Tab 50;"ACCOUNTS PAYABLE PURCHASE JOURNAL";
If PFLAG Print #0;"(PURCHASE ORDERS)";
if audonly<>0 print #0;tab 100;"*PREVIEW*";
Print #0; Tab 110;"PAGE";V9
If C0[3]
  Print #0; Using "######"; Tab 5;"BATCH# ";B4[1];
Else 
  Print #0; Using "######"; Tab 5;"JRNL# ";JRNL;
End If 
X$ = B4[0] Using "&&&&" \ Print #0; TAB 20;"ACCT PER: ";X$[3,4];"/";X$[1,2];
X2 = C4[4] \ Gosub L_8900 \ Print #0; Tab 50;"POSTING DATE: ";P$[1,8];
if currpass<>0
	print #0; tab 75;rtrim$(currdesc$);
endif
print #0;""
If PFLAG Goto L_5910
If R9 = 1 Goto L_5600
If R9 = 2 Goto L_5700
Print #0;" "
Print #0;"LINE"; Tab 5;"INVOICE#";
If C0[6] Print #0; Tab 18;"DIV";
Print #0; Tab 22;"TYP"; Tab 26;"INV DATE";
Print #0; Tab 35;"DUE DATE"; Tab 44;"DIS DATE";
Print #0; Tab 56;"PO#"; Tab 60;"CHECK#";
Print #0; Tab 67;"CHK DATE"; Tab 78;"GROSS AMT";
Print #0; Tab 90;"DISC AMT"; Tab 108;"NET";
Print #0; Tab 115;"ACCT#"; Tab 125;"AMOUNT"
L_5910: If PFLAG = 99 Gosub L_5500
If PFLAG = 98 Gosub L_5110
If PFLAG = 50 Gosub L_3500
L = 6
If C0[4] Let L = L + 2
Return 
L_6100: Rem LIST ALL DISPLAY SCREEN
Print @0,7;'CL';@3,7;"BATCH #";@17,7;"ENTRIES";@32,7;"BATCH TOTALS";@53,7;"STATUS";
L_6110: For I = 23 To 8 Step -1
  Print @0,I;'CL';
Next I
L = 9
Return 
L_6200: Rem CONTINUE SECTION
!L_6205: Print @0,23;'CL';"Enter  <CR>: Continue Listing   E: end list ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
j$=""
If J$ = "" Goto L_6110
!If J$ = "E" Return 
!Goto L_6205
L_6300: Rem READ BATCH FILE
Mat Read #14,R[14],0;B4; \ Mat Read #14,R[14],8;B5;
Mat Read #14,R[14],12;B6;
mat read #14,r[14],52; apbcurrid;
mat read #14,r[14],54; apbcurrfact;
Return 
L_6350: Rem WRITE BATCH FILE
Mat Write #14,R[14],0;B4; \ Mat Write #14,R[14],8;B5;
Mat Write #14,R[14],12;B6;
Return 
L_7000: Rem CHECK PRINTER TYPE
F = 0
!If Err 0 Let F = Spc(8)
!N = Chf(0)
!If Err 0 Gosub ERR_TRAP
L9 = 58;SCRPRT = 0
!If F
!  L9 = 21
!  SCRPRT = 99
!End If 
F = 0
Return 
L_7100: Rem READ OPEN ITEM FILE
Mat Read #3,R[3],0;O$; \ Mat Read #3,R[3],6;O1;
Mat Read #3,R[3],12;O2; \ Mat Read #3,R[3],40;O3;
Mat Read #3,R[3],100;O1$;
Mat Read #3,R[3],112;O4
Mat Read #3,R[3],116;oi_currid;
Mat Read #3,R[3],122;oi_currfact;
let grossapamt=o3[0]
let discapamt=o3[2]
let netapamt=o3[3]
if p61$[136,136]="Y" and currpass<>0 and oi_currfact<>0
	if grossapamt<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=grossapamt
		let cnvca[1]=oi_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let grossapamt=fnr(cnvca[0])
	endif
	if discapamt<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=discapamt
		let cnvca[1]=oi_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let discapamt=Fnr(cnvca[0])
	endif
	if netapamt<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=netapamt
		let cnvca[1]=oi_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let netapamt=fnr(cnvca[0])
	endif

endif
Return 
L_7160: Rem READ VENDOR FILE
A$ = "VENDOR NOT ON FILE!!!" \ K2$ = VENDCODE Using "######"
Search #2,2,1;K2$,R[2],E
If E = 1
  F9 = 99 \ ERRFLAG[4] = 99
  Return 
End If 
If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;A$; \ Mat Read #2,R[2],268;A1;
Return 
L_7200: Rem read appo head file
Mat Read #21,R[21],0;APH0;
Mat Read #21,R[21],12;APH$;
Mat Read #21,R[21],24;APH1;
Mat Read #21,r[21],28;aph_currid;
Mat Read #21,R[21],30;APH2;
mat read #21,r[21],88;aph_currfact;
let aphmerch=aph2[0]
let aphfreight=aph2[1]
let aphmisc=aph2[2]
if p61$[136,136]="Y" and currpass<>0 and aph_currfact<>0
	if aphmerch<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=aphmerch
		let cnvca[1]=aph_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let aphmerch=fnr(cnvca[0])
	endif
	if aphfreight<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=aphfreight
		let cnvca[1]=aph_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let aphfreight=fnr(cnvca[0])
	endif
	if aphmisc<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=aphmisc
		let cnvca[1]=aph_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let aphmisc=fnr(cnvca[0])
	endif
endif
Return 
L_7250: Rem read appo line file
Mat Read #22,R[22],0;APL0;
Mat Read #22,R[22],12;APL$;
Mat Read #22,R[22],24;APL1;
Mat Read #22,R[22],36;APL2;
Mat Read #22,R[22],82;apl_currid;
Mat Read #22,R[22],110;apl_currfact;
Return 
L_7300: Rem READ PRODUCT FILE
Mat Read #33,L3[1];A1$;
Mat Read #33,L3[1],156;B;
Mat Read #33,L3[1],256;A; \ Mat Read #33,L3[1],460;A3;
Mat Read #33,L3[1],512;PFU1;
Mat Read #33,L3[1],554;PFU2;
PRODLBS = A[6];PRODFACT = A[5]
Return 
L_7350: Rem READ NSTKDESC
Mat Read #36,L3[1];NSD$;
Mat Read #36,L3[1],96;NSD1;
Mat Read #36,L3[1],112;NSD2;
Mat Read #36,L3[1],132;NSD3;
PRODLBS = NSD3[6] = PRODFACT = NSD3[7]
Return 
L_7400: Rem READ HEADER FILE
Mat Read #31,R[31];H0;
Mat Read #31,R[31],24;H8$;
Mat Read #31,R[31],106;H1$;
Mat Read #31,R[31],222;H3;
Mat Read #31,R[31],242;H4;
Mat Read #31,R[31],250;H8;
Mat Read #31,R[31],310;PH;
Mat Read #31,R[31],350;PO3;
Mat Read #31,R[31],528;POH7;
Mat Read #31,R[31],612;POH_currid;
Mat Read #31,R[31],614;POH_currfact;
let pohfrtappl=h8[6]
let pohmiscamt=po3[5]
let pohmiscappl=po3[11]
let pohfrtamt=poh7
if p61$[136,136]="Y" and currpass<>0 and poh_currfact<>0
	if pohfrtappl<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=pohfrtappl
		let cnvca[1]=poh_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let pohfrtappl=fnr(cnvca[0])
	endif
	if pohmiscamt<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=pohmiscamt
		let cnvca[1]=poh_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let pohmiscamt=fnr(cnvca[0])
	endif
	if pohmiscappl<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=pohmiscappl
		let cnvca[1]=poh_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let pohmiscappl=fnr(cnvca[0])
	endif
	if pohfrtamt<>0
		let cnvcu[0]=1
		let cnvcu[1]=1 
		let cnvca[0]=pohfrtamt
		let cnvca[1]=poh_currfact
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let pohfrtamt=fnr(cnvca[0])
	endif
endif 

Return 
L_7450: Rem READ POLINE
Mat Read #32,R[32];L1;
Mat Read #32,R[32],12;L2;
Mat Read #32,R[32],24;L3;
Mat Read #32,R[32],66;L1$;
Mat Read #32,R[32],186;PL;
Mat Read #32,R[32],222;PL0;
Mat Read #32,R[32],232;PL4;
Mat Read #32,R[32],548;pol_CURRId;
Mat Read #32,R[32],550;pol_CURRFACT;
Return 
L_7500: Rem "================================ get product
Call Logic(1,2 ^ 0,L1[3],X0)
CWT_WT_ADJ = 1
If PCT6[0]
  POLBS = PCT6[0];POFACT = PCT6[1]
Else 
  POLBS = PL4[12];POFACT = PL4[13]
End If 
If Not(X0)
  Gosub L_7300
  If (L1[5] = -1 Or L1[5] = -3)
    If PCT6[0] <> 0 And PCT6[1] <> 0
      If (A[6] <> PCT6[0] Or A[5] <> PCT6[1]) ! do in diff units or unit/amts
        PROD_WT_BASE = A[6] / A[5]
        PO_WT_BASE = PCT6[0] / PCT6[1]
        If PROD_WT_BASE Let CWT_WT_ADJ = PO_WT_BASE / PROD_WT_BASE
      End If 
    Else 
      If (A[6] <> PL4[12] Or A[5] <> PL4[13]) ! do in diff units or unit/amts
        PROD_WT_BASE = A[6] / A[5]
        PO_WT_BASE = PL4[12] / PL4[13]
        If PROD_WT_BASE Let CWT_WT_ADJ = PO_WT_BASE / PROD_WT_BASE
      End If 
    End If 
  End If 
Else 
  Gosub L_7350
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2] \ A3[3] = NSD3[8]
  PFU1[8] = NSD1[5];PFU1[10] = NSD1[4];PFU1[11] = NSD1[3];PFU1[15] = NSD1[7]
  A1$[9,38] = NSD$[13,42] \ A1$[63,92] = NSD$[43,72]
  A1$[140,151] = NSD$[1,12]
  If PFU1[15] = -3 Let A1$[127,127] = "Y"
End If 
Return 
L_7600: Rem UPDATE DIVISION TOTAL
IF P61$[136,136]="Y" and currpass<>0 return
K50$ = " ",K50$ \ K50$[1,2] = O4[1] Using "##"
Search #50,2,1;K50$,R[50],E \ If Not(E) Goto L_7650
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #50,1,0;K50$,R[50],E \ If E Gosub ERR_SEARCH
For X = 0 To 3 \ DIVTOT[X] = 0 \ Next X
Mat Write #50,R[50],0;DIVTOT
Search #50,4,1;K50$,R[50],E \ If E Gosub ERR_SEARCH
L_7650: Mat Read #50,R[50],0;DIVTOT
If O1 <> 2 Let DIVTOT[0] = DIVTOT[0] - grossapamt
If O1 = 2 Let DIVTOT[1] = DIVTOT[1] - grossapamt
Mat Write #50,R[50],0;DIVTOT;
Return 
L_8000: Rem RESET PURCHASE JOURNAL
!Print @0,23;'CL';"CLEARING WORK FILE .... PLEASE WAIT...";
K1$ = " ",K1$
L_8015: Search #3,3,1;K1$,R[3],E \ If E = 2 Goto L_8100
If E Gosub ERR_SEARCH
Mat Read #60,R[3],0;O$;
Mat Read #60,R[3],40;O3;
If Not(C0[3]) Goto L_8035
If O3[9] <> B4[1] Goto L_8015
If O3[8] <> B4[0] Goto L_8015
Goto L_8040
L_8035: If O$[2,2] <> "4" Goto L_8015
Gosub L_7100
L_8040: If O$[1,1] = "0" Goto L_8055
If O$[1,1] = "9" Goto L_8055
Goto L_8015
L_8055: O$[2,2] = "3"
Mat Write #3,R[3],0;O$;
Goto L_8015
L_8100: Rem DELETE TOTAL RECORDS FROM THE A20DI FILE
K4$ = "0"
L_8120: Search #4,3,1;K4$,R[4],E \ If E = 2 Goto L_8180
If E Gosub ERR_SEARCH
If K4$[1,1] <> "0" Goto L_8180
Search #4,5,1;K4$,R[4],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #4,1,0;K4$,R[4],E \ If E Gosub ERR_SEARCH
Goto L_8120
L_8180: If Not(C0[3]) Return 
If TERMINATEFLAG = 99 Return 
Gosub L_6300 \ B5 = 3 \ Gosub L_6350
Return 
L_8700: Rem VERIFY FILE SIZES
L_8750: K2$ = " 0" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
C4[3] = R$[60,60]
If P9$[17,17] = "Y" Return 
If R$[60,60] = " "
  ERRFLAG[5] = 99 \ Goto L_8950
End If 
C4[3] = R$[60,60]
R$[60,60] = " "
Mat Write #15,R[15],2;R$;
R = Chf(11)
R = R - 1
L_8800: Read #11,R;H$;
If H$[63,63] = "9" If H$[1,1] = "*" Return 
R = R - 1
If R >= 0 Goto L_8800
Message$="ERROR IN INTERFACE FILE!!!"
Gosub ERR_SEARCH
L_8900: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
L_8950: Rem ERROR IN PURCHASE JOURNAL
eflag=eflag+1
Message$="Purchase Journal Not Updated. "
If ERRFLAG[1]
    message$=message$+"ACCOUNT DISTRIBUTIONS NOT FOUND FOR AN OPEN ITEM. "
    If ERRFLAG[1] = 1 Message$=message$+"Transaction(s) with $0.00 amount must still have g/l acct distributions."
End If 
If ERRFLAG[2]
    Message$=Message$+"OUT OF BALANCE. SUSPENSE ACCOUNT POSTING HAS BEEN MADE! "
End If 
If ERRFLAG[3]
    Message$=Message$+"GL ACCOUNT # NOT FOUND IN VALIDATION FILE! "
 
End If 
If ERRFLAG[4]
    Message$=Message$+"AP OPEN ITEM ASSIGN TO VENDOR NOT IN MASTER FILE "
End If 
If ERRFLAG[5]
    Message$=Message$+"INTERFACE FILE IN USE!!!..TRY LATER!!! "
End If 
If ERRFLAG[6]
	Message$=Message$+"A/P History Record Not Found for an open item"
endif
if errflag[7]
	Message$=Message$+"A/P-P/O Error for an open item "
endif
goto outend: ! 
L_9100:! Update Purchase Journal ! Chain "LA512A"
!Comp = spec[0] ! company #                     
spec[0]=intco                               
spec[1]=c4[0] ! CURRENT/NEXT MONTH
spec[2]=c4[1] ! POSTING PERIOD                              
spec[3]=c4[2] ! POSTING date (mmddyy)                            
spec[4]=c4[3] !  LOGICAL UNIT NUMBER FOR A10IN
SPEC[5]=c4[4]! POSTING DATE YYMMDD
SPEC[6]=b4[1] !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
SPEC[7]=512! PROGRAM NUMBER
spec[8]=rec_uac                             
spec[9]=returnstatus 
spec[10]=eflag
spec[11]=t2[0]
spec[12]=t2[1]
spec[13]=t2[2]
spec[14]=t2[3]
Call "LA512a.dl4",spec[],message$,IntCo,rstr$,e$
let returnstatus=spec[9]
GOTO L_9999: ! the last line -- all updates have already been done

L_9700: Rem build monthly files
Call "labldfle.DL4",ACPER$,e$,IntCo,rstr$
Return 
Stop 
CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
DISP_EXT = FNR(DISP_QTY * DISP_COST)
CNVTA = DISP_COST;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
If L1[5] = -1 Or L1[5] = -3
  If PCT6[0] <> 0 And PCT6[1] <> 0
    LBSUNIT = PCT6[0];LBSFACTOR = PCT6[1]
  Else 
    LBSUNIT = PL4[12];LBSFACTOR = PL4[13]
  End If 
  If LBSFACTOR <= 0 Let LBSFACTOR = 1
  If L1[5] = -1 Let DISP_EXT = FNR(DISP_COST * (LBSUNIT * DISP_QTY) / LBSFACTOR / 100)
  If L1[5] = -3 Let DISP_EXT = FNR(DISP_COST * (LBSUNIT * DISP_QTY) / LBSFACTOR)
ELSE
	IF PFU1[0]<>L1[5] ! base um<>costing um - bring to costing um to prevent rounding issues
		!CNVTU[2]=5 no rounding of qty -- qty rounded set CNVTU[1]=1
		LET CNVTA=DISP_QTY;CNVTU[0]=0;CNVTU[1]=L1[5];CNVTU[2]=5 \ GOSUB L_20000:
		LET DISP_QTY=AMOUNT 
		LET DISP_EXT=FNR(DISP_QTY*DISP_COST) ! in costing unit of measure
	endif
End If 
If L1[5] = -2 Let DISP_EXT = DISP_COST
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120: ! If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
!Call "MXPRCONV5AP.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
Call "MXPRCONV5AP.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$ 
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 


ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$=msg$
call programdump("/tmp/la512se!","")
call programdump()
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("/tmp/la512!","")
call programdump()
! goto err_msg ! Error 10000
Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
Gosub L_8000
If Not(C0[3])
  Write #1,51,36;AJRNL;
End If 
L_9005: Rem exit to clear keyglap file
If P9$[17,17] = "Y"
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,5,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
End If
If P9$[17,17] <> "Y"
	if not(c4[3]) let c4[3]=1
	K2$ = " 0" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
	Mat Read #15,R[15],2;R$;
	R$[60,60] = c4[3] using "#"
	Mat Write #15,R[15],2;R$;
endif
L_9010: K2$ = " 0" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
R$[61,61] = "1"
Mat Write #15,R[15],2;R$;
If Not(C0[3]) <>0 and TERMINATEFLAG = 0 and r[14]>0
	Gosub L_6300
	if b5=4 let B5 = 3
        Gosub L_6350
endif

Close 
If Not(C0[6]) Goto L_9060
F$ = rec_uac Using "2/APPJTEMP&&&&"
Call FindF(F$,X2) \ If Not(X2) Goto L_9050
Try Kill F$ Else Rem
L_9050: F$ = R$[55,55],"/A20DD",G8$[1,2] \ Call FindF(F$,X2) \ If Not(X2) Goto L_9060
Try Kill F$ Else Rem
L_9060: ! Close 
!Chain "MX000"
L_9999: ! out of here
if eflag>0 let returnstatus=0
let spec1[9]=returnstatus
! set the returnstatus 
if rtrim$(message$)="" let message$="Report Complete"
else
	include "src/callmainerrnet.inc"
end try
End ! the whole program
