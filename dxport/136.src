! >>> Program 136
!
! description Special Price for Customer
!
! loadsave -w -n 10,10 -o prog/dxport/136.dl4 src/136.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Declare External Sub CreateNetStatus
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  7, 2005  16:54:13
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx1/mx136.src (univ2) [txc] {02658}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX136 -         CUSTOMER PRICE PRINTOUT
Rem AUTHOR:         UNIVERSAL  07/16/1991
Rem Last Update:    REK 10/24/91  Add warehouse
!
external lib "ubsfunc.dl4"
declare external function WareHouse
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],Z9[9],ZZ
Com 2%,C4[8]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],FIELD,BASEX,QTY
Com J4$[50],TEMP$[10]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Window On 
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],2%,RB1[5],3%,RB5[2]
Dim 3%,RBCOST,RBSLCOST,RP_COST,SPSLCOST,COST
Dim 2%,DT3[1],JPCDATE,JWDATE
Dim 1%,C0,C1,M5[3],M8,PTYPE,F,SPC3[2],SPCUM[1],J9[2],C3[2]
Dim 1%,SPWH,LM[1],WHLM[1],ITEM_LAB$[10],WHPARC[5],PD1[9],L9[1]
Dim 1%,SUNIT,PUNIT,WHSE,SPBRK[1],PT[37],UNITX
Dim 1%,COID,CH_CMDTY,PM5[5,4],prcsrc
Dim 2%,B[24],C2,M6[3],CFC1[12],C4[8],Z1[5],Z7[3],CUST,Q0[1],D9[20]
Dim 2%,PCDATE,AXCESS,SPC1[5],DFWH,3%,SPC5[4],X1[9],A4,PREC[1]
Dim 3%,M7,BRACKET,BRACKET1,J,X3,T9[10],C5[5],SPC4[6],QOH,B1[9,2],W3[24]
Dim 3%,SPRICE,FLEPTR[20,1],SPECS[50],LPC2[3],R[99],NETPRICE,REC_SORT

Dim 1%,SPC6[4],aptype[8],abtype[8],amtype[8],3%,apfact[8],amqty[8],OrdQty ! add'l spcl prices2-9
DIM 3%,SRN[4],PRPARC[3],WHMISC[6],PF_LOAD2
DIM 3%,REC_CMDTY,x2[9]

Dim CMDY1$[4],CMDY2$[4],K4$[50],K5$[50],C1$[142],Z1$[50],P60$[50]
Dim A2$[30],BK$[10],A1$[142],W1$[32],V1$[30],S1$[30],I$[60],WH$[2]
Dim J$[40],J0$[10],J1$[30],J2$[20],J3$[40],J5$[75],J7$[75],J8$[8],F1$[16]
Dim K2$[50],K3$[20],X$[10],T9$[26],K9$[50],P9$[50],MESS$[50],K34$[50]
Dim K7$[25],A$[156],PTYPE$[30],K13$[50],PAKS$[15],UNIT$[4],K33$[50]
Dim PUNIT$[4],SUNIT$[4],QUNIT$[4],Z2$[10],PMASK$[20]
Dim KCUST$[50],SCRATCH$[80],SORT$[50]
Dim MSGDESC$[150],U5$[50],CUST$[6],P$[12],UNIT$[4],PRODKEY$[50]
Dim F1$[16],K17$[10],CMDTY$[36]
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[500],tmp1$[300],message$[255],webstr$[500]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim Whse$[2]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
!Call dxsave(0,"tmp/136in.txt!")
Let COID=IntCo
For J = 2 To 15
  Read X2 \ If X2 = -1 Goto L_830
  Read #1,88,X2;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","2880","2288","752","1728","1808","1936","-1","1824","1712","1952","2400","1744","1376"
ROPEN #16,"2/SPRICEMARK"+Str$(COID) ! FOR XREV9 - REV9 still uses pricemark
If intCO < 10 Let F1$ = intCO Using "2/commodity#"
If intCO > 9 Let F1$ = intCO Using "2/commodity##"
CH_COMMODITY = 17
Ropen #CH_COMMODITY,F1$
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
!
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 15
J1 = 90
!
!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Gosub ERR_TRAP
!J9 = 55 \ If J8 Let J9 = 18
!K1$ = " "
!J1 = 90 \ J2 = 0
!
Read #1,3,0;J1$;
Read #1,18,50;ITEM_LAB$;
Read #1,0,100;J8$;
Read #1,0,112;PCDATE;
!
X2 = PCDATE \ Gosub L_7820 \ X2 = 0
If X2 Let JPCDATE = X2 Else Gosub L_7650
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
!
!!Open #77,"PRTDFLT","USERPORT"
!!Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!!Mat Read #77,A4,0;PD1
!!Close #77,#78
DFWH = PD1[2]
!

!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"136",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!

!
tmp$=warehouse(intSls,intCO) using "##" ! default warehouse
DFWH=tmp$
!
call dxget("J4",J4$) \ X2=J4$
call dxget("WHSE",tmp$)  \ If tmp$="" Let WHSE=DFWH Else WHSE = tmp$
!
! verify customer
J4$ = X2 Using "######"
Search #7,2,1;J4$,R7,E
If E LET e$="Customer ",J4$," not found!" \ error 10000
CUST$[1,6] = J$[1,6]
Mat Read #7,R7,0;A1$;
!
! verify warehouse
If P9$[32,32] <> "Y" Let WHSE = 0 
If WHSE < 0 Or WHSE > D9[5] LET e$="Invalid warehouse, must be between 0 and 99!" \ error 10000
!
!!L_1000: Rem GET CUSTOMER  
!!Print @0,0;'CS';" - MX136 -";@25,0;"CUSTOMER SPECIAL PRICE PRINT"
!!Print @0,10;" ENTER CUSTOMER CODE, LIST OPTION, OR  E: exit   ";
!!Input ""J4$ \ If J4$ = "E" Goto OUTEND
!!If Len(J4$) < 1 Goto L_1000
!J$ = J4$
!!Gosub L_3300 \ Goto L_1000
!!X2 = J$ \ If X2 <= 0 Goto L_1000
!!If X2 >= 999999 Goto L_1000
!!J$ = X2 Using "######"
!Search #7,2,1;J4$,R7,E
!!If Not(E) Goto L_1080
!!Print @0,20;'RB CE';"CUSTOMER NOT FOUND!" \ Signal 3,30
!!Goto L_1000
!!L_1080: Rem read cust
!CUST$[1,6] = J$[1,6]
!Mat Read #7,R7,0;A1$;
!!Print @40,11;A1$[31,60]
!!L_1090: Rem WAREHOUSE  
!If P9$[32,32] <> "Y" Let WHSE = 0 \ Goto L_1100
!!Print @0,14;" ENTER WAREHOUSE TO PRINT FOR,  0: FOR MAIN, OR  E: TO EXIT: ";'CL'; \ WHSE = 0
!If DFWH < 10 Print Using "#";DFWH; Else Print Using "##";DFWH;
!!Print @61,14;
!!Input Len 16386;""WH$ \ If WH$ = "E" Goto OUTEND
!!If WH$ = "" Let WHSE = DFWH \ Goto L_1098
!!WHSE = WH$
!!L_1098: !!If WHSE < 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_1090
!L_1100: !!Print @0,22;'CE';
!!Print @10,22;'CL'; \ Input "ENTER   P: Print,  R: Reselect,  E: Exit "J4$ \ If J4$ = "E" Goto OUTEND
!!Call String(1,J4$)
!!If J4$ = "R" Goto L_1000
!!I!!f J4$ <> "P" Goto L_1100
!
Gosub L_7100
Gosub GET_DFTCOST
Gosub L_7400
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
!
!!Window Off 
!if Not(J8) If J2 Print #0;"\14\";
J2 = 0 \ J1 = 90
!!Goto L_1900
L_1900: Rem PRINT
!!!Print @0,22;'CE';"SORTING, PLEASE WAIT . . ."
Gosub CLR_SORT
!!If Err 0 Gosub ERR_ESCAPE
Gosub INIT_VARS
K9$ = " ",K9$;K9$[1,6] = CFC1[1] Using "######"
I$ = " ",I$;I$[1,6] = CFC1[1] Using "######"
NEXT_SPECPRICE: Rem
Search #8,3,1;K9$,Z8,E
If E = 2 Goto L_2000
If CONTRACT_FLAG And K9$[1,6] <> I$[7,12]
  Gosub GET_CONTRACT \ If E = 2 Goto L_2000
  Goto NEXT_SPECPRICE
End If 
Gosub READ_SPECPRICE
If SPC1[0] <> CFC1[1] And CONTRACT_FLAG = 0 !"cust does not match
  CONTRACT_FLAG = 1 \ Gosub GET_CONTRACT \ If E = 2 Goto L_2000
  Goto NEXT_SPECPRICE
End If 
If P9$[32,32] = "Y" And WHSE And SPWH
  If WHSE <> SPWH Goto NEXT_SPECPRICE
End If 
If K9$[7,7] = "*" Or K9$[7,7] = "#" Or K9$[7,7] = "&" OR K9$[7,7]="-"
  PRODKEY$ = " ",PRODKEY$
L_1930: 
Search #2,3,1;PRODKEY$,R2,E
  If E Goto NEXT_SPECPRICE
  SORT$ = " ",SORT$
  SORT$[1,12] = PRODKEY$[1,12]
End If 
If K9$[7,7] <> "*" And K9$[7,7] <> "#" And K9$[7,7] <> "&" AND K9$[7,7]<>"-"
  Search #2,2,1;P$,R2,E
  If E Goto NEXT_SPECPRICE
  SORT$ = " ",SORT$
  SORT$[1,12] = P$[1,12]
End If 
Gosub L_7200
If K9$[7,7] = "*" And A$[152,155] <> P$[1,4] Goto L_1930	! commodity
If K9$[7,7] = "&"
  UNITX = K9$[12,15]
  If PFU1[19] <> UNITX Goto L_1930
End If 
If K9$[7,7] = "-" And A$[116,126] <> P$[1,11] Goto L_1930	! cost group
Search #9,4,1;SORT$,Z8,E
!If E Let e$ = "syserrorfile 136 sortfile mode (m)=4 keyno (k)=1 r=",Z8," e=",e," keyval (k$)=",SORT$ \ error 10000
If K9$[7,7] = "*" Or K9$[7,7] = "#" Or K9$[7,7] = "&" Or K9$[7,7] = "-"
  Goto L_1930
End If 
If K9$[7,7] <> "*" And K9$[7,7] <> "#" And K9$[7,7] <> "&" And K9$[7,7] <> "-"
  Goto NEXT_SPECPRICE
End If
Goto L_1930
!
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  !Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
!End If 
!!
L_2000: Rem "================================== now lookup price and printing
If J8
 tmp$="ITEM CODE",fdel$
 tmp$=tmp$,"DESCRIPTION 1",fdel$
 tmp$=tmp$,"DESCRIPTION 2",fdel$
 tmp$=tmp$,"PACK SIZE",fdel$
 tmp$=tmp$,"PRICE",fdel$
 tmp$=tmp$,"PRICE U/M",fdel$
 tmp$=tmp$,"START DATE",fdel$
 tmp$=tmp$,"EXP DATE",fdel$
 call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,22;'CE';"PRINTING, PLEASE WAIT . . ." \ Signal 3,0
SORT$ = " ",SORT$
NEXT_SORT: Rem
Search #9,3,1;SORT$,Z8,E \ If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
Gosub READ_SPECPRICE
P$ = " ",P$;P$[1,12] = SORT$[1,12]
Search #2,2,1;P$,R2,E !!\ If E Gosub ERR_SEARCH
Gosub L_7200
If C3[2] = PFU1[0]
  QTY = SPC4[0]
  Goto DONE_MINQTY
End If 
For ZZ = 1 To 7
  If PFU1[ZZ] = C3[2] Goto MINQTY_GOTMATCH
Next ZZ
! - IF NOT(J8)
! -   Print "PRODUCT ";A$[140,151];" HAS AN INVALID UNIT OF MEASURE IN"
! -   Print "    CONTRACT ";SORT$[1,12];" UNABLE TO CALCULATE MIN QTY FOR PRICING"
! - END IF
!Print ""
!INPUT "      PLEASE HIT <CR> TO CONTINUE THE REPORT    "TEMP$
!Print ""
Goto DONE_MINQTY
!
MINQTY_GOTMATCH: Rem
QTY = PFU2[ZZ - 1] * SPC4[0]
Rem
DONE_MINQTY: Rem
Gosub L_6700
Gosub L_3000
Gosub GET_PRICE
Gosub L_5800
Gosub L_5000
gotone=1
Goto NEXT_SORT
!

L_3000: Rem "==================================== get commodity info
J2$ = " ",J2$ \ J2$ = A$[152,155]
Search #4,2,1;J2$,R3,E
If E Goto L_3100
Mat Read #4,R3,0;CMDTY$;
K17$[1,4] = CMDTY$[32,35]
K17$[5] = CFC1[7] Using "### "
Search #CH_COMMODITY,2,1;K17$,REC_CMDTY,E \if e goto L_3100
Mat Read #CH_COMMODITY,REC_CMDTY,40;C1;
Mat Read #CH_COMMODITY,REC_CMDTY,42;C2;
If Not(C1) If Not(C2) Let C2 = 1
Return 
!
L_3100: Rem NOT FOUND
C1 = 0 \ C2 = 1
Return 
!
! - L_3300: Rem SWAP
! - If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
! - Swap 1,"MXCUST"
!!Print @40,10; \ Signal 3,0
!!Input ""J$ \ If J$ = "" Return !!!!!!!J$=
! - Return 1
!

!
CLR_SORT: Rem
SORT$ = " ",SORT$
NEXT_CLR_SORT: Search #9,3,1;SORT$,REC_SORT,E
If E = 2 Return 
Search #9,5,1;SORT$,REC_SORT,E 
If E Let e$ = "syserrorfile 136 sortfile mode (m)=5 keyno (k)=1 r=",REC_SORT," e=",e," keyval (k$)=",SORT$ \error 10000
Goto NEXT_CLR_SORT
Return 
!
INIT_VARS: Rem
J5$ = " ",J5$
CONTRACT_FLAG = 0
FLEPTR[1,0] = 2
FLEPTR[2,0] = 14
FLEPTR[3,0] = 4
FLEPTR[4,0] = 15
FLEPTR[5,0] = 8
FLEPTR[6,0] = 3
FLEPTR[7,0] = 6
FLEPTR[8,0] = 12
Mat SPECS = Zer
Mat R = Zer
Mat PT = Zer
Return 
!
GET_CONTRACT: Rem
Search #3,3,2;I$,R0,E 
If E = 2 Return 
X2 = I$[1,6]
If X2 <> CFC1[1] Let E = 2 \ Return 
CONTRACT = I$[8,12]
K9$ = " ",K9$;K9$[1,6] = I$[7,12]
Return 
!
GET_PRICE: Rem   call "price"
FLEPTR[1,1] = R2
FLEPTR[2,1] = R14
FLEPTR[3,1] = R3
FLEPTR[4,1] = 0
FLEPTR[5,1] = 0
FLEPTR[6,1] = 0
FLEPTR[7,1] = 0
FLEPTR[8,1] = 0
Mat SPECS = Zer
SPECS[0] = 299
CNVTA = QTY \ CNVTU[0] = SUNIT \ CNVTU[1] = 0
CNVTU[2] = 1 \ Gosub CONVERT
SPECS[1] = AMOUNT
If Not(A[5]) Let A[5] = 1
EXTWEIGHT = ((A[6] * AMOUNT) / A[5])
SPECS[2] = EXTWEIGHT
Gosub CDATE
Gosub PDATE
CURDAT = X2
SPECS[3] = CFC1[1]
SPECS[4] = WHSE
SPECS[5] = CURDAT
SPECS[6] = 0
SPECS[7] = CFC1[7]
SPECS[8] = 1
SPECS[9] = DFT_COST
SPECS[10] = 0
SPECS[11] = 0
SPECS[12] = 0
SPECS[13] = SUNIT
SPECS[14] = PUNIT
SPECS[15] = PUNIT
SPECS[16] = 0
SPECS[17] = 0
SPECS[18] = 0
SPECS[19] = 0
!
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
!
If SPECS[0] Return 
CNVTA = SPECS[20] \ CNVTU[0] = 0;CNVTU[1] = SUNIT;CNVTU[2] = 2
Gosub CONVERT
PPU = AMOUNT
CNVTA = SPECS[23] \ CNVTU[0] = 0;CNVTU[1] = PUNIT;CNVTU[2] = 2
Gosub CONVERT
NETPRICE = AMOUNT
CNVTA = SPECS[17] \ CNVTU[1] = PUNIT
Gosub CONVERT
COST = AMOUNT
Mat LPC2 = Zer
If FLEPTR[4,1]
  Mat Read #15,FLEPTR[4,1],28;LPC2;
  SPRICE = 0
  If LPC2[2] <> 0 Let SPRICE = COST * (1 + ((LPC2[1] - LPC2[2]) / LPC2[2]))
End If 
SPCL = 0
LET SPCL=0  
let prcsrc=specs[25]
if prcsrc>82 and prcsrc<118
		let prcsrc=prcsrc-100
	endif
IF PRCSRC>=2 AND PRCSRC<=4 LET SPCL=1    
IF PRCSRC>=6 AND PRCSRC<=8 LET SPCL=1    
IF PRCSRC>=11 AND PRCSRC<=13 LET SPCL=1
if PRCSRC>=15 and PRCSRC<=16 let SPCL=1
Return 
!
CDATE: Rem
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto GET_X
Next K1
!!Print "\15\DATE ERROR - STOP AT ";Spc(9) \ Stop 
GET_X: Rem
X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
!
PDATE: Rem
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
READ_SPECPRICE: Rem=======================================================
Mat Read #8,Z8,0;P$
Mat Read #8,Z8,12;SPC1
Mat Read #8,Z8,36;SPCUM
Mat Read #8,Z8,40;C3
Mat Read #8,Z8,46;SPC4
Mat Read #8,Z8,118;SPWH
Mat Read #8,Z8,126;SPBRK
Mat Read #8,Z8,138;SPC5;
Return 
!
GET_DFTCOST: Rem===============================read prtypefle
Mat Read #5,CFC1[7],28;PT;
DFT_COST = PT[0]
If Not(DFT_COST) Let DFT_COST = P60$[29,29]
Return 
!
L_5000: Rem PRINT
If j8 !XML
  tmp$ = rtrim$(A$[140,151]),fdel$ ! item code
  tmp$ = tmp$,rtrim$(A$[9,38]),fdel$ ! description1
  tmp$ = tmp$,rtrim$(A$[63,92]),fdel$ !!description2
  tmp$ = tmp$,rtrim$(PAKS$),fdel$!!pack size
  tmp$ = tmp$, NETPRICE Using PMASK$,fdel$ !!price 
  tmp$ = tmp$,PUNIT$,fdel$
  X2 = SPC1[2] \ Gosub L_7700
  tmp$ = tmp$,X$,fdel$!!start date
  X2 = SPC1[4] \ Gosub L_7700
  tmp$ = tmp$,X$,fdel$  !!exp. date
  call addtostr(e$,rstr$,tmp$+rdel$)
Else 
  Print #0; Tab 1;A$[140,151];" ";A$[9,38];" ";A$[63,92];!!item code, description1, description2
  Print #0; Tab 79;PAKS$;!!pack size
  Print #0; Using PMASK$; Tab 94;NETPRICE;" ";PUNIT$; !!price 
  X2 = SPC1[2] \ Gosub L_7700
  Print #0; Tab 110;X$;!!start date
  X2 = SPC1[4] \ Gosub L_7700
  Print #0; Tab 120;X$;  !!exp. date
  Print #0;"\15\" !!
End if 
Return 
!
L_5300: Rem PRINT LINE
IF J8 return
!
Print #0; Using "######"; Tab 1;CFC1[1]; Tab 10;A1$[31,60];
Print #0; Using "###"; Tab 80;CFC1[2]; Tab 85;S1$
Print #0;""
J1 = J1 + 2
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return
!
J1 = J1 + 2 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
Print #0;"\12\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 136 - ";T9$;
Print #0; Tab 51;"CUSTOMER SPECIAL PRICING"; \ If WHSE Print #0; Tab 115;"WAREHOUSE";WHSE
Print #0;""
Gosub L_5300!!!!!!!!!!
Print #0; Tab 1;ITEM_LAB$; Tab 14;"DESCRIPTION 1"; Tab 45;"DESCRIPTION 2";
Print #0; Tab 79;"PACK SIZE"; Tab 98;"PRICE";
Print #0; Tab 108;"START DATE";
Print #0; Tab 120;"EXP DATE"
Print #0;"\12\";
Return 
!

!
L_6700: Rem WHSE
R14 = 0
If P9$[32,32] <> "Y" Or WHSE = 0 Return 
K2$ = " ",K2$
K2$[1,12] = A$[140,151] \ K2$[13] = WHSE Using "##"
Search #14,2,1;K2$,R14,E 
If E Let R14 = 0
Return 
!
L_7100: Rem READ CUST
Mat Read #7,R7,0;A1$;
Mat Read #7,R7,142;CFC1;
Mat Read #7,R7,252;C5;
Return 
!
L_7200: Rem GET PROD
Mat Read #2,R2,0;A$;
Mat Read #2,R2,156;B;
Mat Read #2,R2,256;A;
Mat Read #2,R2,512;PFU1;
Mat Read #2,R2,554;PFU2;
Mat Read #2,R2,620;LM; \ PREC[0] = R2
Mat Read #2,R2,894;C4;
Mat Read #2,R2,956;PAKS$;
MAT  READ #2,R2,596;PRPARC; \ READ #2,R2,938;PF_LOAD2;
SUNIT = PFU1[9]
If SUNIT > 0 Read #6,SUNIT,10;SUNIT$;
PUNIT = PFU1[12]
If PUNIT > 0 Read #6,PUNIT,10;PUNIT$;
If PUNIT = -1 Let PUNIT$ = "CWT "
If PUNIT = -2 Let PUNIT$ = "LOT "
If PUNIT = -3 Let PUNIT$ = "LB  "
Return 
!
! - K13$ = " ",K13$;K13$ = B[24] Using "######"
! - Search #13,2,1;K13$,R13,E
! - If E Goto L_7340
! - Mat Read #13,R13,0;V1$;
! - Return 
! - L_7340: Rem NG
! - V1$ = " ",V1$
! - V1$ = "VENDOR NOT ASSIGNED"
! - Return 
!
L_7400: Rem GET SLSM
J7$ = " ",J7$ \ J7$ = CFC1[2] Using "###"
Search #10,2,1;J7$,R10,E
If E = 0
  Mat Read #10,R10,0;S1$;
else
  S1$ = "SALESMAN NOT FOUND"
endif
Return
!
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
PCDATE = X$
Call DateToJulian(1,X$,X$,E) 
X2 = X$[1,5]
JPCDATE = X2
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "  NONE  "
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! -X2 = X$[1,6] 
! - Return 
! 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
! - DT3[0] = X2;DT3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6]
! - Return 
!

!!!!outend!!!! 
L_9100: Rem END OF THIS RANGE
goto outend
!
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
!!Goto L_1000
!!End 
!

!
L_20000: Rem UNITX CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20030
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20055
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20055
If CNVTU[2] = 0 Goto L_20030
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20055
L_20030: 
Gosub L_20060
If CNVTU[2] = 3 Goto L_20055
If CNVTU[2] = 0 Goto L_20055
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
L_20055: 
Return 
!
L_20060: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT (INTERNAL VERSION)
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
CONVFLAG = 0
If CNVTU[2] <> 5 Goto L_20115
CONVFLAG = 1
CNVTU[2] = 1
Goto L_20120
L_20115: CONVFLAG = 0
L_20120: SR = 8
SC = 12
On CNVTU[2] + 1 Goto L_20145,L_20195,L_20195,L_20340
e$="Invalid conversion ",CNVTU[2]," type" \ error 10000
! - E = 0 \ Gosub ERR_SEARCH
!
L_20145: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20185
  If CNVTU[X1[1]] = -1 Goto L_20185
  If CNVTU[X1[1]] = -3 Goto L_20185
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20185
  Next X1[2]
  FLAG = 1 \ Goto L_20435
L_20185: 
Next X1[1]
FLAG = 0 \ Goto L_20435
L_20195: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20285
  If CNVTU[X1[1]] = -1 Goto L_20250
  If CNVTU[X1[1]] = -3 Goto L_20250
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20245
  Next CUNIT
  FLAG = 0 \ Goto L_20435
L_20245: 
  If CUNIT = 0 Goto L_20285
L_20250: 
  If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! "it's cwt
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "it's catch wt
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20285: 
Next X1[1]
If CNVTU[2] <> 1 Or CONVFLAG Goto L_20310
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20310: If CNVTU[2] <> 2 Goto L_20335
If Not(CNVTU[1]) Goto L_20335
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20335: 
FLAG = 0
Goto L_20435
!
L_20340: Rem DISPLAY VALID UNITS
! - Window Open @SC,SR; Size 32,11; Using " VALID UNITS "
! - X1[1] = 1
! - For X1 = 0 To 7
! -   RECS[X1[1]] = 0 \ If Not(PFU1[X1]) Goto L_20385
! -   Read #26,PFU1[X1];A$;
! -   IF NOT(J8)
! -   Print Using "#. ";X1[1];A$[11,14];" ";A$[1,10];
! -   If X1 Print Using "##########";PFU2[X1 - 1] Else Print ;'BR BD';"     BASE ";'ER ED'
! -   END IF
! -   RECS[X1[1]] = PFU1[X1] \ X1[1] = X1[1] + 1
! - L_20385: 
! - Next X1
! - L_20390: 
! - ! - Print Using "#";@0,9;"SELECT 1-";X1[1] - 1;" : ";'CL';
! - Input (-2,ILEN);""J4$ \ If J4$ = "" Goto L_20420
! - X1 = J4$ \ If X1 > 0 If X1 < X1[1] Goto L_20410
! - Print 'RB'; \ Goto L_20390
! - L_20410: 
! - Read #26,RECS[X1];A$;
! - J4$ = A$[11],"\15\"
! - L_20420: 
! - Window Close 
! - Call InpBuf(J4$)
! - FLAG = 0 \ Goto L_20435
L_20435: 
Return 
!
! the whole find rebate routine used to be here, but now itsa call
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB!!!If Spc(4) > 1280 Goto CVTSTARTB
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
! - CVTTRY: Rem "this is a remark
! - Signal 2,X1,AMOUNT,FLAG  ! - \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto CVTTRY
! - If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
OUTEND: Rem EXIT PROGRAM
!
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
if not(gotone)                                                
        returnstatus=1                                        
        message$="No records found"                           
        call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
        call AddToStr(e$,rstr$,WebStr$)                       
        ! done with it                                        
    call SetOutPut(e$,rstr$)                                  
endif                                                         

!try call dxclose() else rem
End 
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop
!
Rem {end rtn.convert.s}
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 