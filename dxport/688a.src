! >>> Program 688a
!
! description   INVENTORY FILE LISTING (BY PRODUCT CODE)
!
! loadsave -w -n 100,10 -o prog/dxport/688a.dl4 src/688a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 17, 2001  16:33:11
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx688a.src (univ2) [kag] {24159}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX688A - INVENTORY LIST SUMMARY
Rem AUTHOR: DAVE  AUG 10, 1987
Rem Last Update:  roman 04/16/1991.  added vendor item #
!--- custom_customer$ --------------
! PCS jliu 2/25/03 cct165195 if the product's commodity code is "TIME", don't   
!    print the product info   
!
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1
!If Err 0 Gosub ERR_TRAP
Dim P1$[156]
Dim 2%,B1[24],A3
Dim 3%,A1[33],A2[7]
Dim P9$[50],custom_customer$[30]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,PFU1[18],F,X1,2%,X2,3%,J,X3,T9[20],SUNIT$[4]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 3
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792 ","1728"
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;J1$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(trim$(custom_customer$))
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) 
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"688a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("SCODE",K2$) \ K2$ = UCase$(K2$),Blank$
call dxget("ECODE",K3$) \ K3$ = UCase$(K3$),EndParam$
!
If K2$ > K3$ Let e$ = "Invalid ending code, must be >= than starting code!" \ error 10000
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!!L_900: Rem GET RANGES
!!Print @0,21;"ENTER STARTING CODE, <CR> FOR ALL,  E: TO EXIT : ";'CE';
!!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!!If K2$ = "" Let K3$ = "}}}}}}" \ Goto L_970
!!Print @0,23;"ENTER ENDING   CODE, <CR> FOR LAST,  E: TO EXIT : ";'CL';
!!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!!If K3$ = "" Let K3$ = "}}}}}}"
!!L_970: If K2$ <= K3$ Goto L_990
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
L_990: K1$ = K2$
J1 = 90 \ J2 = 0
!
If J8 
  tmp$ = "ITEM CODE",fdel$
  tmp$ = tmp$, "VENDOR ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION 1",fdel$
  tmp$ = tmp$, "DESCRIPTION 2",fdel$
  tmp$ = tmp$, "ALT ITEM 1",fdel$
  tmp$ = tmp$, "U/M",fdel$
  tmp$ = tmp$, "COMM",fdel$
  tmp$ = tmp$, "SC",fdel$
  tmp$ = tmp$, "VENDOR",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #2,3,1;K1$,R1,E
If E Goto OUTEND
L_2010: 
If K1$ > K3$ Goto OUTEND
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,460;A2;
Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1;
if custom_customer$="PCS"
	IF P1$[152,155]="TIME" goto L_2000
Endif
If PFU1[8] <= 0 Let SUNIT$ = " ",SUNIT$ \ Goto L_2000
Mat Read #3,PFU1[8],10;SUNIT$;
L_2100: Rem
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
Return 
!
L_5000: Rem PRINT LINE
If J8 
  tmp$ = rtrim$(P1$[140,151]),fdel$
  tmp$ = tmp$, rtrim$(P1$[93,112]),fdel$
  tmp$ = tmp$, rtrim$(P1$[9,38]),fdel$
  tmp$ = tmp$, rtrim$(P1$[63,92]),fdel$
  tmp$ = tmp$, rtrim$(P1$[39,50]),fdel$
  tmp$ = tmp$, SUNIT$,fdel$
  tmp$ = tmp$, P1$[152,155],fdel$
  tmp$ = tmp$, B1[11] Using "###",fdel$
  tmp$ = tmp$, B1[24] Using "######",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
Print #0; Tab 1;P1$[140,151];
Print #0; Tab 14;P1$[93,112];
Print #0; Tab 35;P1$[9,38];
Print #0; Tab 66;P1$[63,92];
Print #0; Tab 98;P1$[39,50];
Print #0; Tab 112;SUNIT$;
Print #0; Tab 117;P1$[152,155];
Print #0; Using "###"; Tab 122;B1[11];
Print #0; Using "######"; Tab 126;B1[24];
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
If J8 Return
!
J1 = J1 + 1 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 688A - ";T9$;
Print #0; Tab 44;"I N V E N T O R Y   F I L E   L I S T I N G"
Print #0;"\15\";
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 14;"VENDOR ITEM CODE";
Print #0; Tab 35;"DESCRIPTION 1";
Print #0; Tab 66;"DESCRIPTION 2";
Print #0; Tab 98;"ALT ITEM 1";
Print #0; Tab 112;"U/M";
Print #0; Tab 117;"COMM";
Print #0; Tab 122;"SC";
Print #0; Tab 126;"VENDOR";
Print #0;" "
Print #0;"\15\";
Return 
!
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return 
!!L_9100: Rem END OF THIS RANGE
!!Gosub L_4000
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!For K = 0 To 20
!!  T9[K] = 0
!!Next K
!!If K2$ = "" Goto OUTEND
!!Goto L_900
!!End 
!
OUTEND: Rem EXIT PROGRAM
gosub L_4000 ! print total
!
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
End 
!
!!Print 'CS' \ Close 
!!Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End