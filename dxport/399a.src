! >>> Program 399a
!
! description  SUGGESTED REORDER REPORT 
!
! loadsave -w -n 100,10 -o prog/dxport/399a.dl4 src/399a.src
!
! 1.0 mm/dd/yyyy change??
!
Rem MX399A   SUGGESTED REORDER REPORT - LEONARD PAPER CO.
Rem AUTHOR: UBS   MAY 25, 1990
Rem LAST UPDATE:  GED   04/28/1994. Created from mx399
! jliu cct116430 9/30/98 if the whse pricing flag trun on, the cost should
! come from the prodwhse. If there is no cost on prodwhse file, the cost
! should come form the prod file
! jliu cct116540 10/1/98 check the buyer range when sorting by vendor
! also check the vendor range when sorting by buyer
! zyc 03/17/99 cct120976 adjust line ctr for L5000
! jliu 9/20/99 cct126736 if there is no vendor on the whse file, look
!              the vendor number on the prod file
! jliu 04/11/00 cct133070 sorting by buyer code ??? - buyer code 
!              should be up to 3 digits
!              remove the part of sort key (buyer code) due to it is
!              never using in mx399a
! zyc  10/16/03 cct172442 do not print make items
! vst  11/10/06 cct2098   changed dim of 'rec_prodloc' from 1% TO 3%
! jliu 6/25/09 cct234075 add new prompt print with or without costs
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  9, 2006  11:40:58
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx399a.src (univ2) [txc] {03610}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

include "src/copyright.inc" ! dx
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
Declare External Function OpenMySQLBrowserOutput,GetMySQLReportHeader
Declare External Sub AddMySQLReportColumnHeadings
Declare External Function AddMySQLReportData
Declare External Sub FinishMySQLReport


Declare Intrinsic Sub DateToJulian,InpBuf,String
!!Option Default Dialect IRIS1

Dim 1%,PFU1[20],CNVTU[2],UN[2]
Dim 3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 1%,AR_MONTH,W1[2],B1[3],T[1],LT1[3],L2,L1[5],F,X1,WHSE,W0[3],STMTH,FSTIME

Dim 1%,MySQL_ch,reportAborted
Dim 3%,MySQLQueueID

Dim 1%,PD1[9],PRFLAG,ALLWHFLAG,P1[1]
Dim 1%,PL1[1],CH_PRODLOC,3%,REC_PRODLOC,BIN$[6]
Dim 2%,W2[9],B[24],H0[5],CJD,X2,WB[8],LT3[1],D9[20],DFWH,J9[2],LCOST,H5[17]
dim 2%,cwh
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 3%,A[33],A1[7],LT2[5],W3[16],W4[9],W5[12],W6[12],J,X3,T9[20],WT
Dim 3%,P3[4],UNITX,L3[6],WH9[23],MNAMES$[40],ADJW5[12],ADJW6[12],M1[17]
Dim 3%,WHMISC[6],TOT[5],BTOT[5],A4,LTOT,L7[13],r5
Dim W1$[32],A$[156],V0$[116],SUNIT$[4],UNIT$[10],P9$[50],DES$[25],D$[16]
Dim PURUNIT$[4],BUNIT$[4],SPACES$[12],CMDY1$[4],CMDY2$[4],SCMDY$[4],K13$[4],SVEND$[6]
Dim CNAME$[30],J3$[40],ARDATE$[8],U5$[30],K11$[50]
Dim K1$[50],K2$[12],K3$[20],X$[10],U3$[132],V$[60],SORT$[6],K99$[50]
Dim K15$[20],K16$[20]
Dim Z1$[2],DBZ$[6],PR_A2$[30],SCRATCH$[255],OLDPROD$[12]
Dim PO_MESSAGE$[25]
!
dim Blank$[15]	  \ Blank$=" ",Blank$
dim EndParam$[15] \ EndParam$="}",EndParam$
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[600],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)


U3$ = "=",U3$
!!Window On 
For J = 2 To 16
  Read JA1 \ If JA1 = -1 Goto L_830
  Read #1,88,JA1;J$;
  Ropen #J,J$
L_830: Next J

Data "1744","1792","2528","2432","2416","2400","1728","-1","1120","2272","2512","2288","208","1840","1888"
CH_PRODLOC = 14
Mat Read #1,0,100;ARDATE$;
MNAMES$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
DBZ$ = "n/a"
Read #1,0,120;AR_MONTH;
Read #1,3,0;CNAME$;
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$;
mat  read #1,60,16;cwh; 
if cwh<=0 or cwh>99 then cwh=99  ! 1st consignment warehouse
Read #1,51,74;STMTH;

If Err 0 Let J8 = Spc(8)
J8 = 0 \  N = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP

!If Err 0 Let JA8 = Spc(8)
!JA8 = 0 \ JA9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If Err 0 Gosub ERR_TRAP
!If JA8 If JA8 <> 49 Goto ERR_TRAP
JA9 = 56 \ If JA8 Let JA9 = 20
Mat Read #1,0,108;CJD;
ENDOFWEEK: J$ = CJD Using "&&&&&&" \ Call DateToJulian(1,J$,J$,E) \ CJD = J$

If Fra(CJD / 7) Let CJD = CJD + 1 \ Goto ENDOFWEEK
CJD = CJD - 1
SPACES$ = "            "

!!Open #77,"PRTDFLT","USERPORT"
!!Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!Mat Read #77,A4,0;PD1;
!Close #77,#78
!DFWH = PD1[2]
JA1 = 90;J2 = 0

!
!call dxsave(0,"tmp/399ain.txt!")
!
CALL  DXGET("SORT",tmp$)   \ SORT=tmp$
CALL  DXGET("k2",tmp$)     \ K2$=UCase$(RTrim$(tmp$))+Blank$
call  dxget("k3",tmp$)     \ K3$=UCase$(RTrim$(tmp$))+EndParam$
call  dxget("SVEND",tmp$)  \ SVEND=tmp$ !!
CALL  DXGET("EVEND",tmp$)  \ IF RTrim$(tmp$)=""  EVEND = 999999    ELSE EVEND=tmp$
CALL  DXGET("SBUY",tmp$)   \ SBUY=tmp$
CALL  DXGET("EBUY",tmp$)   \ if RTrim$(tmp$)=""   EBUY=999999   ELSE EBUY=tmp$
CALL  DXGET("CMDY1",tmp$)	\ CMDY1$=UCase$(RTrim$(tmp$))+Blank$
CALL  DXGET("CMDY2",tmp$)  \ CMDY2$=UCase$(RTrim$(tmp$))+EndParam$
CALL  DXGET("PRFLAG",tmp$) \ IF tmp$="Y" PRFLAG=99  else PRFLAG=0!!!!
CALL  DXGET("ALLPROD",tmp$) \ IF tmp$="1"  ALLPROD=99  ELSE ALLPROD=0 !!!
CALL  DXGET("WHSE",tmp$)    \  IF tmp$="" WHSE=1 ELSE WHSE=tmp$
Call DXGet("PRNTCST",tmp$) \ costflag=0 \ if tmp$="Y" let costflag=1
!
IF K2$>K3$  LET e$ = "Invalid starting and ending product code range!"   \ error 10000
!
IF SVEND < 0 or SVEND >999999 LET  e$ = "Invalid starting vendor, must be between 0 and 999999 !"   \ error 10000
if EVEND > 999999 or SVEND > EVEND  LET  e$ = "Invalid ending vendor,  must be between starting vendor code and 999999!"   \ error 10000
!
IF SBUY < 0 or SVEND >999999 LET  e$ = " Invalid starting buyer, must be between 0 and 999999 !"   \ error 10000
If SBUY > EBUY  or EBUY > 999999 LET e$ = "Invalid ending vendor,  must be between starting vendor code and 999999!"   \ error 10000 
! 
If WHSE < 0 Or WHSE > D9[5] let e$="Invalid warehouse, must be between 0 and 99" \ error 10000
If Not(WHSE) Let ALLWHFLAG = 1 Else Let ALLWHFLAG = 0
!
K1$ = K2$ 
if J8 ! dx xml, setup rstr$
  !<section>
	MySQL_ch = OpenMySQLBrowserOutput(e$)
	if MySQL_ch <> -1
		MySQLQueueID = GetMySQLReportHeader(e$,MySQL_ch,"399a")
		if MySQLQueueID = 0
			e$ = "Could not get MySQL report header!"
			error 10000
		end if
	else
		tmp$ = bsdel$,"399a",fdel$,rdel$ 
		call addtostr(e$,rstr$,tmp$)
	end if
End if
If J8 = 0 or MySQLQueueID !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
	! try call dxclose() else rem
End If 
!
UNITX = 8
U5$ = "IN STOCKING UNITS "
!
!!Gosub L_15000
!!For Y = 1 To 8
 !! If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
  !!On Y Gosub L_31000,L_31100,L_31200,L_31300,L_31400,L_31500,L_31600,L_31700
  !!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Next Y
!!L_1050: !!Print @10,22;'CL';"ENTER #:field to edit,  P: print, or  E: end ";
!!Input ""Z1$
!!If Z1$ = "P" Or Z1$ = "p" Goto L_1500
!!If Z1$ = "E" Or Z1$ = "e" Goto OUTEND
!!Y = Z1$
!!If Y >= 1 And Y <= 8
  !!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
  !!On Y Gosub L_31000,L_31100,L_31200,L_31300,L_31400,L_31500,L_31600,L_31700
  !!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!End If 
!!Goto L_1050
!
if J8 	!dx xml headings
	  tmp$="VENDOR CODE",fdel$
	  tmp$=tmp$,"VENDOR NAME",fdel$
	  tmp$=tmp$,"VENDOR ADDRESS",fdel$
	  tmp$=tmp$,"VENDOR CITY",fdel$
	  tmp$=tmp$,"VENDOR STATE",fdel$
	  tmp$=tmp$,"VENDOR ZIP",fdel$
	  if PRFLAG=99
		tmp$=tmp$,"COMMODITY CODE",fdel$
		tmp$=tmp$,"COMMODITY DESC",fdel$
	  endif
	  tmp$=tmp$,"ITEM# MFR ID",fdel$
	  tmp$=tmp$,"DESCRIPTION",fdel$
	  tmp$=tmp$,"DESCRIPTION 2",fdel$	
	  tmp$=tmp$,"VENDOR ITEM",fdel$  !
	  tmp$=tmp$,"WHSE",fdel$
	  tmp$=tmp$,"BIN",fdel$
	  tmp$=tmp$,"PO_MESSAGE",fdel$
	  tmp$=tmp$,"FUTURE ORDER",fdel$
	  tmp$=tmp$,"ON HAND",fdel$
	  tmp$=tmp$,"BO/ALLOC",fdel$
	  tmp$=tmp$,"AVAIL",fdel$
	  tmp$=tmp$,"ON ORDER",fdel$
	  tmp$=tmp$,"WK OH",fdel$
	  tmp$=tmp$,"WK OO",fdel$
	  tmp$=tmp$,"8WK AVG",fdel$
	  tmp$=tmp$,"WK1",fdel$
	  tmp$=tmp$,"WK2",fdel$
	  tmp$=tmp$,"WK3",fdel$
	  tmp$=tmp$,"WK4",fdel$
	  tmp$=tmp$,"WK5",fdel$
	  tmp$=tmp$,"WK6",fdel$
	  tmp$=tmp$,"WK7",fdel$
	  tmp$=tmp$,"WK8",fdel$
 	  tmp$=tmp$,"WEIGHT",fdel$
   	  tmp$=tmp$,"CU.VOL",fdel$ 
   	  tmp$=tmp$,"PACK",fdel$
      tmp$=tmp$,"# OF UNITS/SKID TIER",fdel$	   
	  tmp$=tmp$,"# OF TIERS PER SKID",fdel$	   		
	  IF COSTFLAG let tmp$=tmp$,"COST",fdel$	   
      ! 
	if MySQLQueueID
		call AddMySQLReportColumnHeadings(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$)
	else
		call addtostr(e$,rstr$,tmp$+rdel$)
	end if
end if
!
L_1500: Rem START HERE----------------------------------------------------------
! - Gosub L_10500
!
L_1535: Rem SORT IN VEND ORDER
J4$ = " ",J4$
Search #9,3,1;J4$,R0,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_1570
Search #9,5,1;J4$,R0,E !!\ If E Gosub ERR_SEARCH
Goto L_1535
L_1570: !! Print @0,23;'CE';"Sorting...please wait"; \ Signal 3,0
If ALLWHFLAG Let WHSE = WHSE + 1
!If WHSE > 2 Goto L_1840
if whse > d9[5] or whse >= cwh goto L_1840:  
	!  only go thru to max warehouse number or min consignment
J$ = " ",J$ \ J$[1,2] = WHSE Using "##"
If SORT = 1 Let J$[3,8] = SVEND Using "######";J$[9] = K2$
If SORT = 1 Let DIR = 3 Else Let DIR = 2
If SORT = 2 Let J$[3,5] = SBUY Using "###" \ J$[6] = K2$
Search #2,2,DIR;J$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_1640
If SORT = 1
  J$[3,8] = 0 Using "######";J$[9] = K2$
  Search #2,2,DIR;J$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
  If Not(E) Goto L_1640
End If 
L_1633: Search #2,3,DIR;J$,R1,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_1840
L_1640: Rem
If SORT = 2
  X2 = J$[3,5]
  If X2 > EBUY
    If ALLWHFLAG Goto L_1570 Else Goto L_1840
  End If 
End If 
If SORT = 1
  TEMPX2 = J$[3,8]
  X2 = J$[3,8]
  If Not(TEMPX2) !"vendor may not assign in whse file
    K1$ = " ",K1$
    K1$[1,12] = J$[9,20]
    Search #3,2,1;K1$,R3,E3
    If E3 Goto L_1650
    Read #3,R3,252;B[24];
    X2 = B[24]
  End If 
L_1650: If Not(TEMPX2) If X2 > EVEND Goto L_1633
  If Not(TEMPX2) If X2 < SVEND Goto L_1633
  If X2 > EVEND
    If ALLWHFLAG Goto L_1570 Else Goto L_1840
  End If 
  If X2 < SVEND Goto L_1633
End If 
X2 = J$[1,2]
If WHSE <> X2
  If ALLWHFLAG Goto L_1570 Else Goto L_1840
End If 
If SORT = 1
	If rtrim$(J$[9,20]) < rtrim$(K2$[1,12])
		let tmp3=len(rtrim$(k2$))
		if tmp3>1 
			if j$[9,20]<k2$[1,(tmp3-1)]+blank$
				let j$[9,20]=k2$[1,(tmp3-1)]+blank$
			endif
		endif
		Goto L_1633
	endif
  If J$[9,20] > K3$ Let J$[9,20] = "~~~~~~~~~~~~" \ Goto L_1633 ! because of test prod "|M"
End If 
If SORT = 2
  If rtrim$(J$[6,17]) < rtrim$(K2$) Goto L_1633
  If J$[6,17] > K3$ Let J$[6,17] = "~~~~~~~~~~~~" \ Goto L_1633 ! test prod has (pipe)M (past z!)
End If 
Mat Read #2,R1,0;W1$
Mat Read #2,R1,32;W1
Mat Read #2,R1,38;W2
Mat Read #2,R1,78;W3
Mat Read #2,R1,420;W0;
If SORT = 1 If (W1[2] < SBUY Or W1[2] > EBUY) Goto L_1633
If SORT = 2 If (W2[3] < SVEND Or W2[3] > EVEND) Goto L_1633
If W0[0] = 1 Goto L_1633
K1$[1,12] = W1$[1,12]
Search #3,2,1;K1$,R3,E \ If E Goto L_1633
Mat Read #3,R3,0;A$;
If Not(W2[3]) Read #3,R3,252;B[24]; \ W2[3] = B[24]
If A$[139,139] = "M" Goto L_1633
If A$[152,155] < CMDY1$[1,4] Or A$[152,155] > CMDY2$[1,4] Goto L_1633
If Not(PRFLAG) Let A$[152,155] = "    "
Gosub L_1800
!If SORT = 2 Let J4$ = " ",J4$;J4$ = W1[2] Using "######";J4$[7,12] = W2[3] Using "######";J4$[13,16] = A$[152,155];J4$[17,28] = W1$[1,12];J4$[29,30] = WHSE Using "&&"
!If SORT = 1 Let J4$ = " ",J4$;J4$ = W2[3] Using "######";J4$[7,10] = A$[152,155];J4$[11,22] = W1$[1,12];J4$[23,24] = WHSE Using "&&"
IF SORT=2 
	LET J4$=" ",J4$;J4$=W1[2] USING "######";J4$[7,12]=W2[3] USING "######";J4$[13,16]=A$[152,155];J4$[17,28]=W1$[1,12];j4$[29,30] = whse using "&&"
	j4$[31,36]=LTOT         
endif
IF SORT=1 
	LET J4$=" ",J4$;J4$=W2[3] USING "######";J4$[7,10]=A$[152,155];J4$[11,22]=W1$[1,12];j4$[23,24] = whse using "&&"
	j4$[25,30]=LTOT 
ENDIF
Search #9,4,1;J4$,R1,E !!\ If E Gosub ERR_SEARCH
Goto L_1633
!
L_1800: Rem "==================== FIND AND SUBTOTAL ALL TYPE 5 FOR PRODUCT
LTOT = 0 \ K16$ = R3 Using "######"
L_1810: Search #16,3,2;K16$,R16,E !!\ If E > 2 Gosub ERR_SEARCH
If E Return 
J = K16$[1,6]
If J <> R3 Return 
For J = 1 To 99
  K15$ = " ",K15$ \ K15$[1,2] = J Using "##" \ K15$[3,8] = K16$[7,12]
  Search #15,2,1;K15$,R15,E !!\ If E > 2 Gosub ERR_SEARCH
  If E = 0
    Mat Read #15,R15,104;H5
    If H5[7] <> 5 Goto L_1810
    Mat Read #16,R16,168;L7
    Mat Read #3,R3,512;PFU1
    Mat Read #3,R3,554;PFU2
    CNVTU[0] = 0;CNVTU[1] = PFU1[UNITX];CNVTU[2] = 1
    CNVTA = L7[2] \ Gosub L_20000
    LTOT = LTOT + AMOUNT
  End If 
Next J
Goto L_1810
!
L_1840: Rem SORT DONE
K1$ = " ",K1$ \ K3$ = "}}}}}}}}}}}}"
!!Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
!!If JA8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K99$ = "" \ FSTIME = 1
Search #9,2,1;K1$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2015
L_2000: Search #9,3,1;K1$,R1,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
if reportAborted goto OUTEND
L_2015: If SORT = 1 Let LTOT = K1$[25,30]
If SORT = 2 Let LTOT = K1$[31,36]
Mat Read #2,R1,0;W1$;
Mat Read #2,R1,32;W1;
Mat Read #2,R1,38;W2;
Mat Read #2,R1,78;W3; \ Mat Read #2,R1,420;W0;
Mat Read #2,R1,168;W4; \ Mat Read #2,R1,228;W5;
Mat Read #2,R1,306;W6; \ Mat Read #2,R1,540;ADJW5;
Mat Read #2,R1,618;ADJW6 \ Mat Read #2,R1,800;WHMISC;
WHSE = W1[0]
Gosub L_3200 \ If W0[0] = 2 And (QTYBO <= 0 And W3[2] <= 0) Goto L_2000
Gosub L_2200 \ If Not(ALLPROD) If T9[0] + W3[1] >= W3[5] Goto L_2000 ! was w3[6]
If K99$ = "" Let K99$ = K1$
If SORT = 1 If K99$[1,6] <> K1$[1,6] Gosub L_4000 \ JA1 = 99
If SORT = 2
  If K99$[1,6] <> K1$[1,6] Gosub L_4000 \ Gosub L_3800 \ JA1 = 99 \ Goto L_2052
  If K99$[7,12] <> K1$[7,12] Gosub L_4000 \ JA1 = 99
End If 
L_2052: Gosub L_3000
LCOST = B[10]
K99$ = K1$
If W2[3] Let VEND = W2[3] Else Let VEND = B[24]
Gosub L_3100
Gosub L_3300
Gosub L_6000
If Not(W2) Let W2[0] = B[0]
Gosub L_2700
Gosub L_5800
If P9$[32,32] = "Y" Gosub L_8000
Gosub L_10000
Gosub L_2400
If FSTIME
  If SORT = 2 Gosub L_4700
  Gosub L_4600
  FSTIME = 0
  Goto L_2185
End If 
If SORT = 2 If SVEND$ <> K1$[7,12] Gosub L_4700 \ Gosub L_4600 \ Goto L_2182
If SORT = 1 If SCMDY$ <> K1$[7,10] Gosub L_4600
If SORT = 2 If SCMDY$ <> K1$[13,16] Gosub L_4600
L_2182: Gosub L_5800
L_2185: Gosub L_5000
If SORT = 2 Let SCMDY$ = K1$[13,16];SVEND$ = K1$[7,12]
If SORT = 1 Let SCMDY$ = K1$[7,10]
! - Signal 2,J0,A,B \ If J0 <> -1 Gosub L_9615
Goto L_2000
!
L_2200: Rem CALC
T9[0] = W3[0] - W3[2] - QTYBO
Return 
!
L_2400: Rem VENDOR & BUYER TOTALS
TOT[0] = TOT[0] + W3[0]
TOT[1] = TOT[1] + QTYBO
TOT[2] = TOT[2] + W3[2]
TOT[3] = TOT[3] + T9[0]
TOT[4] = TOT[4] + WT
TOT[5] = TOT[5] + W3[1]
If SORT = 2
  BTOT[0] = BTOT[0] + W3[0]
  BTOT[1] = BTOT[1] + QTYBO
  BTOT[2] = BTOT[2] + W3[2]
  BTOT[3] = BTOT[3] + T9[0]
  BTOT[4] = BTOT[4] + WT
  BTOT[5] = BTOT[5] + W3[1]
End If 
Return 
!
L_2700: Rem REOREDER QTY
REQTY = 0
If W3[16] Let COST = W3[16] Else Let COST = W3[15]
If Not(W3[13]) Let W3[13] = .35
REQTY = W3[11]
If W3[11] > (W3[9] * 12) Let W3[11] = (W3[9] * 12)
If W3[11] < (W3[9] * .25) Let W3[11] = (W3[9] * .25)
If W3[11] < 0 Let W3[11] = 0
Return 
!
L_3000: Rem GET PROD
J2$ = " ",J2$
If SORT = 1 Let J2$ = K1$[11,22]
If SORT = 2 Let J2$ = K1$[17,28]
Search #3,2,1;J2$,R3,E !!\ If E Gosub ERR_SEARCH
Mat Read #3,R3,0;A$;
Mat Read #3,R3,156;B;
Mat Read #3,R3,256;A;
Mat Read #3,R3,460;A1;
Mat Read #3,R3,512;PFU1;
Mat Read #3,R3,554;PFU2;
mat  read #3,r3,944;pr_a2$;
For PACK2 = 0 To 7
  If PFU1[PACK2] = PFU1[8] Goto L_3090
Next PACK2
PACK2 = 0
L_3090: For PACK = 0 To 7
  If PFU1[PACK] = PFU1[10] Goto L_3099
Next PACK
PACK = 0
L_3099: Return 
!
L_3100: Rem GET VENDOR
J2$ = " ",J2$ \ J2$ = VEND Using "######"
J3$ = J2$
Search #7,2,1;J2$,R7,E
If E Goto L_3170
Mat Read #7,R7,0;V0$;
Goto L_3160
Search #10,2,1;J2$,R10,E
If E Let W1[2] = 0 \ Goto L_3130
Mat Read #10,R10,206;M1;
L_3130: J3$ = J2$
OBUY = W1[2]
L_3160: Return 
L_3170: Rem NG
V0$ = " ",V0$
V0$ = "VENDOR NOT FOUND!"
Return 
!
L_3200: Rem LOT ON HAND
J4$ = " ",J4$ \ J4$ = W1$[1,12]
QTYBO = 0
Search #4,2,2;J4$,R4,E
If Not(E) Goto L_3230
L_3220: Search #4,3,2;J4$,R4,E
If E Return 
L_3230: If J4$[1,12] <> W1$[1,12] Return 
Mat Read #4,R4,66;P1;
Mat Read #4,R4,82;P3;
if allwhflag or p1[0]=whse
	QTYBO = QTYBO + P3[4]
endif
Goto L_3220
!
L_3300: Rem CHECK ON PO
PO_MESSAGE$ = " ",PO_MESSAGE$
W3[1] = 0
J2$ = " ",J2$ \ J2$ = R3 Using "######"
L_3310: Search #5,3,2;J2$,R5,E
If E Return 
X2 = J2$[1,6] \ If X2 <> R3 Return 
Mat Read #5,R5,0;L1;
Mat Read #5,R5,24;L3;
If Int(L1) = 6 Goto L_3310
If L1[3] Goto L_3310
IF (L3[2]-L3[3])<=0 GOTO L_3310: ! WAS ALSO -L3[4]
If L2 If L2 <> WHSE Goto L_3310
Mat Read #6,L3[0],0;H0;
Mat Read #6,L3[0],242;T;
If H0 >= 7 Goto L_3310 ! was >=5
If T[0] Goto L_3310
If T[1] If T[1] <> WHSE Goto L_3310
W3[1] = W3[1] + (L3[2] - L3[3])
PO_MESSAGE$[1,10] = "*" + H0[2] Using "PO ######"
SCRATCH$ = H0[4] Using "&&&&&&"
PO_MESSAGE$[11] = " due:" + SCRATCH$[3,4] + "/" + SCRATCH$[5,6] + "/" + SCRATCH$[1,2]
Goto L_3310
K11$ = " "
K11$[1,1] = A$[156,156]
Search #11,2,1;K11$,R11,E
If E Let DES$ = " ",DES$ \ Goto L_3490
Mat Read #11,R11,0;DES$;
L_3490: Return 
!
L_3800: Rem ================= print buyer totals
Gosub L_5800

VEND = K99$[1,6]
IF J8 RETURN
Print #0; Using " BUYER ######  TOTALS "; Tab 2;VEND;
Print #0; Using "-----#"; Tab 51;BTOT[0];
Print #0; Using "-----#"; Tab 58;BTOT[1] + BTOT[2];
Print #0; Using "-----#"; Tab 65;BTOT[3];
Print #0; Using "-----#"; Tab 71;BTOT[5];
If BTOT[4]
  Print #0; Using "---#.##"; Tab 77;FNR(BTOT[3] / (BTOT[4] / 8));
  Print #0; Using "---#.##"; Tab 85;FNR((BTOT[3] + BTOT[5]) / (BTOT[4] / 8));
  Print #0; Using "---#.##"; Tab 92;FNR(BTOT[4] / 8)
Else 
  Print #0; Tab 78;DBZ$; Tab 86;DBZ$; Tab 95;"DEAD"
End If 
JA1 = JA1 + 2
For X = 0 To 5
  BTOT[X] = 0
Next X
Return 
!
Print #0;" "
L_4000: Rem PRINT VENDOR TOTALS
Gosub L_5800
If SORT = 1 Let VEND = K99$[1,6]
If SORT = 2 Let VEND = K99$[7,12]
if j8 return
Print #0; Using "VENDOR ######  TOTALS "; Tab 5;VEND;
Print #0; Using "-----#"; Tab 51;TOT[0];
Print #0; Using "-----#"; Tab 58;TOT[1] + TOT[2];
Print #0; Using "-----#"; Tab 65;TOT[3];
Print #0; Using "-----#"; Tab 71;TOT[5];
If TOT[4]
  Print #0; Using "----#.##"; Tab 77;FNR(TOT[3] / (TOT[4] / 8));
  Print #0; Using "----#.##"; Tab 85;FNR((TOT[3] + TOT[5]) / (TOT[4] / 8));
  Print #0; Using "----#.##"; Tab 92;FNR(TOT[4] / 8)
Else 
  Print #0; Tab 78;DBZ$; Tab 86;DBZ$; Tab 95;"DEAD"
End If 
For X = 0 To 5
  TOT[X] = 0
Next X
Print #0;" " \ JA1 = JA1 + 2
Return 
!
L_4500: Rem VENDOR LINE
if J8 return ! dx xml
!
Gosub L_5800
If SORT = 2 Goto L_4527
! - if j8 return
Print #0; Tab 1;"VENDOR: ";J3$;" ";V0$[1,30];
Print #0;" ";V0$[31,60];" ";V0$[91,105];" ";V0$[106,107];
Print #0;" ";V0$[108,116]
Print #0;"" \ JA1 = JA1 + 2 \ Goto L_4590
L_4527: 
! - if j8 return
Print #0; Tab 2;"BUYER ";W1[2]
Print #0;"" \ JA1 = JA1 + 2
L_4590: Return 
!
L_4600: Rem =================================== get & print commodity info
If Not(PRFLAG) Goto L_4670
D$ = " ",D$
K13$ = " ",K13$
If SORT = 1 Let K13$ = K1$[7,10]
If SORT = 2 Let K13$ = K1$[13,16]
Search #13,2,1;K13$,R13,E !!\ If E > 1 Gosub ERR_SEARCH
If E Let D$ = " NOT FOUND      " \ Goto L_4650
Mat Read #13,R13,0;D$;
L_4650:
IF J8=0
  If SORT = 1 Print #0; Tab 5;"COMMODITY CODE: ";K1$[7,10];"    ";D$
  If SORT = 2 Print #0; Tab 5;"COMMODITY CODE: ";K1$[13,16];"    ";D$
  Print #0;"" \ JA1 = JA1 + 2
endif
L_4670: Return 
!
L_4700: Rem =================== get & print vendor
Gosub L_5800
Gosub L_3100
if j8 return
Print #0;""
Print #0; Tab 1;"Vendor Code: ";K1$[7,12];"   ";V0$[1,30];
Print #0;" ";V0$[31,60];" ";V0$[91,105];" ";V0$[106,107];
Print #0;" ";V0$[108,116]
Print #0;"" \ JA1 = JA1 + 3
Return 
!
L_5000: Rem "======================================= print line
Gosub GET_PRODLOC
!
IF J8 
  tmp$ = j3$,fdel$ !!vendor code
  tmp$ = tmp$,rtrim$(V0$[1,30]),fdel$ !!vendor name
  tmp$ = tmp$,RTRIM$(V0$[31,60]),fdel$  !!vendor address
  tmp$ = tmp$,RTRIM$(V0$[91,105]),fdel$  !!vendor city
  tmp$ = tmp$,rtrim$(V0$[106,107]),fdel$     !!vendor state
  tmp$ = tmp$,rtrim$(V0$[108,116]),fdel$    !! vendor zip
  if PRFLAG=99
	if sort=1 let tmp$ = tmp$,K1$[7,10],fdel$	!!com code
	if sort=2 let tmp$ = tmp$,k1$[13,16],fdel$ !! com code
	tmp$= tmp$,rtrim$(D$),fdel$		!!com name
  endif
  tmp$= tmp$,W1$[1,12],fdel$ !!item mfr id
  tmp$= tmp$,rtrim$(A$[9,38]),fdel$		!!descrip 1
  tmp$= tmp$,rtrim$(A$[63,92]),fdel$ !!description 2
  If W1$[13,17] <> "     " And Len(W1$) > 17
   	tmp$= tmp$,rtrim$(W1$[13,32]),fdel$	!!vendor_item
  Else 
   	tmp$= tmp$,rtrim$(A$[93,112]),fdel$	!!vendor_item
  End If 
  tmp$= tmp$,W1[0] using "##",fdel$ !! whse
  tmp$= tmp$,rtrim$(BIN$),fdel$ !! bin!!
  tmp$= tmp$,rtrim$(PO_MESSAGE$[1,24]),fdel$ !! po_message!
  tmp$= tmp$,LTOT Using "----#",fdel$ !!future order
  tmp$= tmp$,W3[0] Using "-----#",fdel$ !!on hand
  tmp$= tmp$,QTYBO + W3[2] Using "-----#",fdel$     !!bo/alloc
  tmp$= tmp$,T9[0] Using "-----#",fdel$ !!avail
  tmp$= tmp$,W3[1] Using "-----#",fdel$ !!on order
  If WT
    tmp$= tmp$,FNR(T9[0] / (WT / 8)) Using "---#.##",fdel$ !!wk oh
    tmp$= tmp$,FNR((T9[0] + W3[1]) / (WT / 8)) Using "---#.##",fdel$ !!wk inf
    tmp$= tmp$,FNR(WT / 8) Using "---#.##",fdel$ !!8wk avg
  Else 
    tmp$= tmp$,DBZ$,fdel$
    tmp$= tmp$,DBZ$,fdel$
    tmp$= tmp$,"DEAD",fdel$
  End If 
  X1 = 1 \ Gosub L_6500
  JA1 = JA1 + 1
  X1 = 5 \ Gosub L_6500
  tmp$= tmp$,A[6] Using "####.##" ,fdel$ !!weigh
  tmp$= tmp$,B[23] Using "####.##",fdel$ !! cu.boll
  If PACK If PACK2 
  	tmp$= tmp$,PFU2[PACK - 1] / PFU2[PACK2 - 1] Using "####### ",fdel$ !!pack
  else 
  	tmp$ = tmp$,"",fdel$
  end if
  tmp$ = tmp$,WHMISC[4] Using "###",fdel$
  tmp$ = tmp$,WHMISC[4] * WHMISC[5] Using "###" ,fdel$
  if costflag let tmp$= tmp$, LC Using "#####.##",fdel$ !!cost
  !
  if MySQLQueueID
	if not(AddMySQLReportData(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$))
		! possible user abort - report deleted exit now
		reportAborted = 1
	end if
  else
	call addtostr(e$,rstr$,tmp$+rdel$)
  end if
  Return 
END IF 
!
If OLDPROD$ <> W1$[1,12]
  Print #0; Tab 1;W1$[1,12];
  Print #0; Tab 13;A$[9,38];
  Print #0; Tab 13;PR_A2$[13,27];

   If W1$[13,17] <> "     " And Len(W1$) > 17
    Print #0; Tab 0;W1$[13,32];
   Else 
    Print #0; Tab 0;A$[93,112];
   End If 

  Print #0;"" \ JA1 = JA1 + 1
  OLDPROD$ = W1$[1,12]
End If 
Print #0; Tab 2;"WHSE:";W1[0];
Print #0; Tab 9;"BIN:";BIN$;
Print #0; Tab 21;PO_MESSAGE$[1,24];
Print #0; Using "----#"; Tab 45;LTOT;
Print #0; Using "-----#"; Tab 51;W3[0];
Print #0; Using "-----#"; Tab 58;QTYBO + W3[2];
Print #0; Using "-----#"; Tab 65;T9[0];
Print #0; Using "-----#"; Tab 71;W3[1];

If WT
  Print #0; Using "---#.##"; Tab 77;FNR(T9[0] / (WT / 8));
  Print #0; Using "---#.##"; Tab 85;FNR((T9[0] + W3[1]) / (WT / 8));
  Print #0; Using "---#.##"; Tab 92;FNR(WT / 8);
Else 
  Print #0; Tab 78;DBZ$; Tab 86;DBZ$; Tab 95;"DEAD";
End If 

Print #0; Tab 99; \ X1 = 1 \ Gosub L_6500
Print #0; Using "####.##"; Tab 120;A[6];
Print #0;"" \ JA1 = JA1 + 1
Print #0; Tab 13;A$[63,92];

If PACK If PACK2 Print #0; Using "PACK  ####### "; Tab 36;PFU2[PACK - 1] / PFU2[PACK2 - 1];

Print #0; Using "###"; Tab 55;WHMISC[4];"/";WHMISC[4] * WHMISC[5];
if costflag Print #0; Using "#####.##"; Tab 72;"COST: ";LC;
Print #0; Tab 99; \ X1 = 5 \ Gosub L_6500
Print #0; Using "####.##"; Tab 120;B[23];" ____";
Print #0;"" \ JA1 = JA1 + 1
Print #0;"" \ JA1 = JA1 + 1
Return 
!
L_5800: Rem "================================== headings'
if j8 return ! dx xml
! - if j8
! - 	J2 = J2 + 1 \ JA1 = 6
! - 	return 
! - end if
If JA1 < JA9 Return 
!!If J2 If JA8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(JA8) Print #0;"\14\";
J2 = J2 + 1 \ JA1 = 6

If Not(JA8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 399A - ";Msc$(3);
Print #0; Tab 50;"SUGGESTED REORDER REPORT";
If ALLWHFLAG
  Print #0;" - WHSE ALL"
Else 
  Print #0;" - WHSE";WHSE
End If 
Print #0;"\15\"; Tab 55;U5$
Gosub L_4500

Print #0; Tab 1;"ITEM #"; Tab 44;"FUTURE"; Tab 54;"ON";
Print #0; Tab 60;"BO/"; Tab 74;"ON"; Tab 80;"WK"; Tab 88;"WK";
Print #0; Tab 96;"8WK  WK1  WK2  WK3  WK4 WEIGHT ORDER"
Print #0; Tab 0;"MFR ID"; Tab 13;"DESCRIPTION"; Tab 45;"ORDER";
Print #0; Tab 53;"HAND  ALLOC  AVAIL ORDER"; Tab 80;"OH"; Tab 88;"OO";
Print #0; Tab 96;"AVG  WK5  WK6  WK7  WK8 CU.VOL  QTY"
Print #0;U3$
Return 
!
L_6000: Rem GATHER LAST 8 WEEK SALES
For X = 0 To 8 \ WB[X] = 0 \ Next X
J4$ = W1$[1,12];WT = 0
L_6030: Search #12,3,2;J4$,R12,E !!\ If E > 2 Gosub ERR_SEARCH
If J4$[1,12] <> W1$[1,12] Let E = 2
If Not(E)
  Mat Read #12,R12,56;LT1;
  Mat Read #12,R12,64;LT2;
  Mat Read #12,R12,106;LT3;
  If (LT1[0] = 16 Or LT1[0] = 3) And LT1[1] = WHSE ! if from invoice accept & same warehouse
    J$ = LT3[0] Using "######"
    X2 = Int((CJD - Val(J$)) / 7) + 1
    If X2 > 0 And X2 <= 8
      CNVTU[0] = 0;CNVTU[1] = PFU1[UNITX];CNVTU[2] = 1
      CNVTA = LT2[2] \ Gosub L_20000
      If LT1[0] = 3 Let AMOUNT = AMOUNT * (-1)
      WB[X2] = WB[X2] + AMOUNT;WT = WT + AMOUNT
    End If 
  End If 
  Goto L_6030
End If 
Return 
!
L_6500: Rem PRINT WEEKS
IF J8 
	For X = X1 To X1 + 3
		If Abs(WB[X]) >= 1 Or WB[X] = 0  LET tmp$ = tmp$, WB[X] Using "----#",fdel$ 
		If WB[X] > 0 And WB[X] < 1 LET tmp$ = tmp$,"   0+",fdel$
		If WB[X] < 0 And WB[X] > -1  LET tmp$ = tmp$,"   0-",fdel$
	Next X
    return
end if 
For X = X1 To X1 + 3
  If Abs(WB[X]) >= 1 Or WB[X] = 0 Print #0; Using "----#";WB[X];
  If WB[X] > 0 And WB[X] < 1 Print #0;"   0+";
  If WB[X] < 0 And WB[X] > -1 Print #0;"   0-";
Next X
Return 
!
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
J0 = J0$[1,1]
J6 = J0$[2,2]
J2 = J0$[3,4]
J3 = J0$[5,6]
J4 = J0$[7,8]
J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 <> 3 If J0 <> 4 Goto L_7070
!!If J0 = 3 Let J2$ = "#",J2$
!!If J0 = 4 Let J2$ = "-",J2$
!!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!L_7070: J1$[J3 + 1] = ""
!!If J0 < 3 Goto L_7105
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 = 6 Goto L_7105
!!If J0 <> 5 Goto L_7100
!!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6
!!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!!L_7105: !!If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!!!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!!!!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!!!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) <= J3 Goto L_7130
!!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!!L_7145: For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7265,L_7330 \ Stop 
!!L_7165: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto L_7345
!!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!!  If J9$[J8,J8] = " " Goto L_7235
!!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!!  If J9 Goto L_7250
!!  J9 = 1
!!L_7230: If J9 Let J9 = J9 + 1
!!  If Not(J9) Let J9[1] = J9[1] + 1
!!L_7235: Next J8
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!L_7260: Gosub L_7600 \ Goto L_7105
!!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!!If J9[1] < 1 Goto L_7325
!!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!!Goto L_7325
!!L_7285: If J9[1] > 30 Goto L_7325
!!L_7290: If J9[1] > 31 Goto L_7325
!!Goto L_7315
!!L_7300: If J9[1] > 29 Goto L_7325
!!If Not(Fra(J9[2] / 4)) Goto L_7315
!!If J9[1] > 28 Goto L_7325
!!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!!J$ = X$ \ J3 = 8 \ Goto L_7345
!!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!!L_7345: J$[J3 + 1] = "" !!\  Print @J4,J5;J$;" "; \ Return 
!!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!!!!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!!!!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!!!!Print @0,Msc(34) - 1;'CL'; 
!!Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem get cost from prodwhse file
J2$ = " ",J2$
If SORT = 1 Let J2$[1,12] = K1$[11,22]
If SORT = 2 Let J2$[1,12] = K1$[17,28]
J2$[13] = WHSE Using "##"
Search #2,2,1;J2$,R2,E !!\ If E Gosub ERR_SEARCH
If W3[16] Let LCOST = W3[16]
Return 
!
GET_PRODLOC: Rem
BIN$ = "      "
SCRATCH$ = " ",SCRATCH$
SCRATCH$[1,12] = W1$[1,12]
SCRATCH$[13,14] = WHSE Using "##"
LOOP_PRODLOC: Search #CH_PRODLOC,3,1;SCRATCH$,REC_PRODLOC,E
If E Return 
If SCRATCH$[1,12] <> W1$[1,12] Return 
X2 = SCRATCH$[13,14] \ If X2 <> WHSE Return 
Mat Read #CH_PRODLOC,REC_PRODLOC,18;PL1;
BIN$ = SCRATCH$[15,20] \ If PL1[1] = 1 Return 
Goto LOOP_PRODLOC
Return 
!
L_9100: Rem END OF THIS RANGE
If SORT = 1 Gosub L_4000
If SORT = 2 Gosub L_4000 \ Gosub L_3800
!!If JA8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
! 
L_10000: Rem "======================================= converts
CNVTU[0] = 0;CNVTU[1] = PFU1[UNITX];CNVTU[2] = 1
CNVTA = T9[0] \ Gosub L_20000 \ T9[0] = AMOUNT
CNVTA = W3[0] \ Gosub L_20000 \ W3[0] = AMOUNT
CNVTA = W3[1] \ Gosub L_20000 \ W3[1] = AMOUNT
CNVTA = W3[2] \ Gosub L_20000 \ W3[2] = AMOUNT
CNVTA = QTYBO \ Gosub L_20000 \ QTYBO = AMOUNT
For X = 5 To 11
  If X = 7 Goto L_10110
  CNVTA = W3[X] \ Gosub L_20000 \ W3[X] = AMOUNT
L_10110: Next X
If PFU1[UNITX] = -1 Let SUNIT$ = "CWT " \ Goto L_10180
If PFU1[UNITX] = -3 Let SUNIT$ = "LB  " \ Goto L_10180
If PFU1[UNITX] > 0 Mat Read #8,PFU1[UNITX],10;SUNIT$;
If PFU1[10] > 0 Mat Read #8,PFU1[10],10;PURUNIT$;
If PFU1[0] > 0 Mat Read #8,PFU1[0],10;BUNIT$;
L_10180: Rem missing line
CNVTU[0] = 0;CNVTU[1] = PFU1[UNITX];CNVTU[2] = 2
If PFU1[15] = -3 Let CNVTU[1] = -3
CNVTA = LCOST \ Gosub L_20000 \ LC = AMOUNT
Return 
!!L_10500: Rem SELECT UNITX
!!UNITX = 1 \ Goto L_10598
!!Window Open @5,5; Size 70,12; Using " SELECT DEFAULT UNITX "
!!L_10520: !!Print 'CS'
!!Print 
!!Print Tab 5;" 1) STOCKING  "; Tab 45;" 4) COSTING"
!!Print Tab 5;" 2) SELLING  "; Tab 45;" 5) PRICING"
!!Print Tab 5;" 3) PURCHASING ";
!!If P9$[2,2] = "M" Print Tab 45;" 6) PRODUCTION"
!!Print \ Print 
!!Print Tab 10;"Enter unit to show on report ";
!!Input ""UNIT$
!!UNITX = UNIT$
!!If UNITX < 1 Or UNITX > 6 Goto L_10520
!!If UNITX = 6 If P9$[2,2] <> "M" Goto L_10520
!!L_10598: U5$ = " ",U5$
!!If UNITX = 1 Let U5$ = "IN STOCKING UNITS "
!!If UNITX = 2 Let U5$ = "IN SELLING UNITS "
!!If UNITX = 3 Let U5$ = "IN PURCHASING UNITS "
!!If UNITX = 4 Let U5$ = "IN COSTING UNITS "
!!If UNITX = 5 Let U5$ = "IN PRICING UNITS "
!!If UNITX = 6 Let U5$ = "IN PRODUCTION UNITS "
!!UNITX = UNITX + 7
!!Return 
!!L_15000: Rem ================================================ screen
!!Print 'CS'
!!Print @0,0;"MX399";@26,0;"SUGGESTED REORDER REPORT"
!!Print @1,2;"1> SORT BY  1: VENDOR OR  2: BUYER ";'CL';
!!Print @18,5;"-STARTING-";@33,5;"-ENDING-"
!!Print @1,6;"2> PRODUCTS";'CL';
!!Print @1,7;"3> VENDORS";'CL'
!!Print @1,8;"4> BUYERS ";'CL'
!!Print @1,9;"5> COMMODITIES"
!!Print @1,11;"6> PRINT/SORT COMMODITY CODES (Y/N)? "
!!Print @1,12;"7> PRINT  1: ALL PRODUCTS OR  2: PRODUCTS BELOW LINE POINT";'CL';
!!Print @1,13;"8> ENTER WAREHOUSE ";'CL';
!!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
!!L_31000: Rem sort by vendor or buyer--------------------------------------------
!!L_31010: J0$ = "2 00013602" \ J1$ = "1"
!!Gosub L_7000
!!If J$ <> "1" And J$ <> "2" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_31010
!!SORT = J$
!!Return 
!!
!!L_31100: Rem product range------------------------------------------------------
!!L_31110: J5$ = "<CR> FOR FIRST" \ J0$ = "2 00121706" \ J1$ = "            "
!!Gosub L_7000 \ K2$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00123006" \ J1$ = "zzzzzzzzzzzz"
!!Gosub L_7000 \ K3$ = J$
!!If K3$ < K2$ Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!" \ Gosub L_7600 \ Goto L_31110
!!K1$ = K2$ \ If J2 If Not(JA8) Print #0;"\14\";
!!Return 
!!L_31200: Rem vendor range---------------------------------------------------
!!L_31210: J5$ = "<CR> FOR FIRST" \ J0$ = "3000062307" \ J1 = 0
!!Gosub L_7000 \ SVEND = J1
!!J5$ = "<CR> FOR LAST" \ J0$ = "3000063507" \ J1 = 999999
!!Gosub L_7000 \ EVEND = J1
!!If SVEND > EVEND Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! " \ Gosub L_7600 \ Goto L_31210
!!Return 
!!L_31300: Rem buyer range---------------------------------------------------
!!J5$ = "<CR> FOR FIRST" \ J0$ = "3000062308" \ J1 = 0
!!Gosub L_7000 \ SBUY = J1
!!J5$ = "<CR> FOR LAST" \ J0$ = "3000063508" \ J1 = 999999
!!Gosub L_7000 \ EBUY = J1
!!If SBUY > EBUY Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! " \ Gosub L_7600 \ Goto L_31210
!!Return 
!!L_31400: Rem commodity range-----------------------------------------------------
!!L_31410: J5$ = "<CR> FOR FIRST" \ J0$ = "2 00042309" \ J1$ = "    "
!!Gosub L_7000 \ CMDY1$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00043509" \ J1$ = "zzzz"
!!Gosub L_7000 \ CMDY2$ = J$
!!If SVEND > EVEND Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! " \ Gosub L_7600 \ Goto L_31410
!!Return 
!!L_31500: Rem print commodity codes (y/n)-----------------------------------------
!!J5$ = " ",J5$ \ J0$ = "6 00013911" \ J1 = 1
!!Gosub L_7000
!!If J1 Let PRFLAG = 99 Else Let PRFLAG = 0
!!Return 
!!L_31600: Rem all or blow point line----------------------------------------------
!!J0$ = "2 00016112" \ J1$ = "1"
!!Gosub L_7000
!!If J$ <> "1" And J$ <> "2" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_31010
!!If J$ = "1" Let ALLPROD = 99 Else Let ALLPROD = 0
!!Return 
!!L_31700: Rem warehouse-----------------------------------------------------------
!!J5$ = "Enter warehouse number, or 0: all whses"
!!L_31710: J0$ = "3 00022013" \ J1 = DFWH
!!Gosub L_7000
!!WHSE = J1
!!If WHSE < 0 Or WHSE > D9[5] Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_31710
!!J5$ = ""
!!If Not(WHSE) Let ALLWHFLAG = 1 Else Let ALLWHFLAG = 0
!!Return 
Rem {begin rtn.error.s}


!
OUTEND: Rem EXIT ROUTINE
! dx close
If J8 ! dx xml
  if MySQLQueueID and not(reportAborted)
	call FinishMySQLReport(e$,MySQL_ch,MySQLQueueID)
  else
	Call addtostr(e$,rstr$,esdel$) !end section
	
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
  end if  
End If 
! try Call dxclose() else rem
end
!
!!Print 'CS'
!!Chain "MX000C"
!!Close 
!!Stop 
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 