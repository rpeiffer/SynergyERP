! >>> Program 695a
!
! description   P/I Variance Count Sheets
!
! loadsave -w -n 100,10 -o prog/dxport/695a.dl4 src/695a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  9, 2006  14:35:15
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx695a.src (univ2) [txc] {24621}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX695A     -  PHYSICAL INVENTORY VARIANCE COUNT SHEETS
Rem
Rem REV. 1.2 - 02/18/85 -    - REV. 3/85 FOR MULTI-WHSE
! CUSTOM FOR ZEPHYR...
! 2/25/95 - JAL MODIFIED FOR ZEPHYR PRINTS ANYTHING OFF BY MORE THAN 10% 
!           OR OFF BY MORE THAN 10 CASES OR OFF BY MORE THAN $300. 
!*****		ADD BAR CODE PRINTING 10/28/95  //JAL 
!           nate 3/13/96 upgrade to 950710; retain JAL's changes.
!           nate 4/3/96  apply patch #181.
!		ADDED CHOICE OF PRODUCT CODE RANGE 6/28/96 //JAL
!		MODIFIED LOGIC FOR EXCEPTION PRINT TO:   //JAL 2/98
!			(1) ANYTHING OVER $DAMOUNT VARIANCE
!			(2) NOTHING UNDER $VAMOUNT VARINACE
!			(3) ANYTHING ELSE WITH COUNT OFF BY PAMOUNT (%)
!
Declare Intrinsic Sub InpBuf,String
!!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],W9[5],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim K1$[50],P1$[26],P2$[28],D1$[30],N$[30],D$[50],D8$[8],K9$[50],TP1$[26],TP2$[28]
Dim J$[40],J1$[75],J2$[20],J3$[40],J4$[40],J5$[75],J6$[40],J7$[75],J9$[75],J0$[15]
Dim 3%,P1[2],T[9],T1[9],T2[9],TP1[2],SKUN[5],BASEX[5],A1[3]
Dim 3%,P3[3],K5$[30],T9[9],W3[24],BASE$[4],FAKE,V3,PCTR
Dim 3%,AMOUNT,CUNIT,SUNIT,CTUNIT,BKUNIT,SUNIT$[4],CUNIT$[4],CTUNIT$[4],PLOC$[18],VARIANT
Dim 1%,D[5],PL1[1],SCRPRT,URECFLAG,RASL[5]
Dim 2%,P9,C1,WHSE,X1[10]
Dim STAG$[6],ETAG$[6],SORT$[60],KF8$[50],DTMP$[50]
Dim W9$[2],K2$[20],K3$[20],K4$[20],K15$[50],VENDCODE$[20],LOC1$[6],LOC2$[6]
Dim P9$[50],X$[10],P0$[156],2%,D9[20],W9[1],W1$[32],W2$[36],A$[156],Z1$[50],K7$[50],VUNIT$[4],SORTBY$[10]
Dim RETVAL$[512],MSGTXT$[75],Z2$[2]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim 3%,specs[99],prod$[12]
DIM BAR$[12],BARTRIG$[2],custom_customer$[30]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 55 \ F = J8
!
If F Let L9 = 20 \ SCRPRT = 1
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
!!Setting a default value for warehouse
W9=1
If P9$[41,41] = "W" And W9 Call "CHKWRASL",W9,RASL[]
Def FNR(X) = Int((X) * 100 + .5) * .01
For I = 0 To 5
  Read D[I]
Next I
Data "8","116","139","0","256","240"
D[0] = D9[2] \ D[2] = D9[3] \ D[3] = D9[5] \ D[4] = D9[6] \ D[5] = D9[4]
SORTMESSAGE = 1
For I = 2 To 11
  Read X
  If X = 0 Goto L_260
  Read #1,88,Abs(X);K1$[1,16];
  If X <= 0 Ropen #I,K1$ Else Open #I,K1$
L_260: Next I
Data "704","-2528","-1792","-1728","-1744","-208","-2352","0","-1840","-1888"
rem roh and rol needed to calc an off shelf adjustment 
Mat Read #1,3,0;N$;
Mat Read #1,3,164;D8$;
LET BARTRIG$="\376\\376\" ! CUSTOM ZEPHYR JAL
mat read #1,115,60;custom_customer$;
custom_customer$=UCASE$(TRIM$(custom_customer$))
!
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"695a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
If J8 Let e$ = "This report is not available in XML format!" \ error 10000
!
call dxget("SYS",tmp$) \ SYS = tmp$  !!position of the system on hand (1-5)
call dxget("COUNT",tmp$) \ COUNT = tmp$  !!position of the counted Qty (1-5)
call dxget("TYPE",X$)  !! D: dollars  Q:quantity
call dxget("VTYPE",tmp1$)  !! C:constant variance  P:percentage
call dxget("VAMOUNT",tmp$) \ If tmp$ = "" Let VAMOUNT = 99999 Else Let VAMOUNT = tmp$  !!
call dxget("WHSE",tmp$) \ W9 = tmp$ !warehouse
call dxget("SORTTYPE",J$)  !!
call dxget("STAG",STAG$) \ STAG$ = STAG$,Blank$  !!starting tag/location
call dxget("ETAG",ETAG$) \ ETAG$ = ETAG$,EndParam$  !!ending tag/location
call dxget("PGBRK",tmp$) \ If tmp$ = ""  Let PGBRK = 0 Else Let PGBRK = 1  !!page break on item change?
call dxget("ALTF",tmp$) \ If tmp$ = ""  Let ALTF = 0 Else Let ALTF = 9  !!
call dxget("PRNTCWT",tmp$) \ If tmp$ = ""  Let PRNTCWT = 0 Else Let PRNTCWT = 9  !!print only catch weight items?
!
!validation position of the system
If SYS < 1 Or SYS > 5  Let  e$ = "Invalid position of the system on hand, must be between 1 and 5!" \ error 10000
!
!validation position of the counted Qty
If COUNT < 1 Or COUNT > 5  Let  e$ = "Invalid position of the counted Qty, must be between 1 and 5!" \ error 10000

IF COUNT=SYS
	let E$="On Hand Position Must Be Different From Counted Position "\Error 10000
endif
!
!Validation warehouse
If W9 < 1 Or W9 > 99 Let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
!
!validation tag/location
If ETAG$ < STAG$  Let  e$ = "Invalid ending tag/location, must be >= than starting tag/location!" \ error 10000
!
If SUPPRESS <> 0 Let SYS = 1 \ COUNT = 5
!
If X$ = "D" Let TYPE = 2 Else Let TYPE = 1
!
If tmp1$ = "C" Let VTYPE = 1 Else Let VTYPE = 2
!
If P9$[41,41] = "W"
  Call "CHKWRASL",J1,RASL[]
  If RASL
    e$ = "Warehouse is designated as RASL. These Count Sheets"
    e$=e$," are for Non-Rasl Warehouses."
    error 10000
  endif
End if
!
If J$ = "P" Let SORTTYPE = 1 \ SORTBY$ = "PRODUCT"
If J$ = "T" Let SORTTYPE = 2 \ SORTBY$ = "TAG"

!!
STRTPRNT: Rem start process here
L_1520: 
Search #9,3,1;K7$,R9,E
If E Goto L_1550
Search #9,5,1;K7$,R9,E 
If E Let e$ = "syserrorfile 695a sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1520
!
L_1550: Rem THRU TAGE
K7$ = " ",K7$ \ K7$[1,2] = W9 Using "##"
L_1560: 
Search #2,3,2;K7$,V1,E 
If E Goto L_1900
X2 = K7$[1,2] \ If X2 <> W9 Goto L_1900
Mat Read #2,V1,0;P1$;
If STAG$ <> "" If P1$[1,Len(STAG$)] < STAG$ Goto L_1560
If P1$[1,Len(ETAG$)] > ETAG$ Goto L_1560
If P1$[7,10] = "VOID" Goto L_1560
K1$ = " ",K1$
If SORTTYPE = 1 Let K1$[1,12] = P1$[7,18];R1 = K7$[3,8]
If SORTTYPE = 2 Let K1$[1,6] = P1$[1,6];K1$[7,18] = P1$[7,18];R1 = K7$[3,8]
Search #9,4,1;K1$,R1,E 
If E > 1 Let e$ = "syserrorfile 695a sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \ error 10000
!Gosub SORTMESSAGE
Goto L_1560
!
L_1900: 
Rem IF L9<>20 PRINT@0,22;'CE';"PRINTING...PLEASE WAIT";
If RASL Let CH = 2;DIR = 3 Else Let CH = 9;DIR = 1
X0 = 1 \ If W9 Let X0 = W9
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!!If L9 = 20 Print 'CS'
!!If Err 0 Gosub ERR_ESCAPE
Gosub L_5800
L_1925: Rem.
SORT$ = " ",SORT$
If RASL Let SORT$[1,2] = W9 Using "##"
L_1932: 
E8 = Spc(14) \ If E8 Goto L_1932
E8 = 0
L_1940: 
Search #CH,3,DIR;SORT$,R1,E 
If E = 2 Let E8 = 9
If E Goto L_8000
K1$ = " ",K1$;K1$ = W9 Using "##" 
If Not(W9) Let K1$ = W9[1] Using "##"
If Not(W9) Let K1$ = X0 Using "##"
Mat Read #2,V1,0;P1$;
If SORTTYPE = 1 Let K5$ = SORT$[1,12]
If SORTTYPE = 2 Let K5$ = SORT$[1,6] \ K5$[7] = SORT$[7,18]
If SORTTYPE = 1 Let K1$[3] = R1 Using "######" \ DR = 2
If SORTTYPE = 2 Let K1$[3] = SORT$[1,6] \ K1$[9] = SORT$[7,18] \ DR = 3
Search #2,2,DR;K1$,V1,E
If Not(E) Goto L_2040
If E Goto L_1940
L_2000: Rem LOOP IT HERE !!
Search #2,3,DR;K1$,V1,V2
If V2 = 2 Let E9 = 1
If V2 Goto L_8000
L_2040: 
W9[1] = K1$[1,2]
If W9 If W9[1] <> W9 Goto L_8000
If W9$ <> K1$[1,2] Gosub L_4500
Mat Read #2,V1,0;P1$;
If STAG$ <> "" If P1$[1,Len(STAG$)] < STAG$ Goto L_2000
If P1$[1,Len(ETAG$)] > ETAG$ Goto L_2000
If P1$[7,10] = "VOID" Goto L_2000
If SORTTYPE = 1
  K4$[1,12] = K5$[1,12]
  If K4$[1,12] <> P1$[7,18] Gosub L_4000 \ Goto L_1940 ! WAS REM'D OUT??
End If 
If SORTTYPE = 2
  K4$[1,6] = K5$[1,6]
  K4$[7,18] = K5$[7,18]
  If K4$[1,6] <> P1$[1,6] Or K4$[7,18] <> P1$[7,18] Gosub L_4000 \ Goto L_1940
End If 
Gosub L_3000 \ Goto L_2000
If PRNTCWT If A$[127,127] <> "Y" Goto L_2000
Gosub L_3500
Gosub L_2500
Mat Read #2,V1,26;P1;
Mat Read #2,V1,44;P2$;
If P1[0] = -99 Let P1[0] = 0;SKP = 99 Else Let SKP = 0
If P1$[7,10] = "VOID" Goto L_2190
Gosub L_3200
Gosub L_10000
If TYPE = 1
  If VTYPE = 1
    If VAMOUNT
      If Abs(BKUNIT - STKUNIT) < VAMOUNT Goto L_2000
    Else 
      If Abs(BKUNIT - STKUNIT) <= VAMOUNT Goto L_2000
    End If 
  End If 
  If VTYPE = 2
    If BKUNIT
      If VAMOUNT
        If Abs(BKUNIT - STKUNIT) / BKUNIT * 100 < VAMOUNT Goto L_2000
      Else 
        If Abs(BKUNIT - STKUNIT) / BKUNIT * 100 <= VAMOUNT Goto L_2000
      End If 
	else
		if stkunit=0 goto L_2000   ! bkunit is zero, already checked
    End If 
  End If 
End If 
If TYPE = 2
  If VTYPE = 1
    If VAMOUNT
      If Abs((A1[0] * C1) - (T9[0] * C1)) < VAMOUNT Goto L_2000
    Else 
      If Abs((A1[0] * C1) - (T9[0] * C1)) <= VAMOUNT Goto L_2000
    End If 
  End If 
  If VTYPE = 2
    If BKUNIT
      If VAMOUNT
        If Abs(((A1[0] * C1) - (T9[0] * C1)) / (A1[0] * C1) * 100) < VAMOUNT Goto L_2000
      Else 
        If Abs(((A1[0] * C1) - (T9[0] * C1)) / (A1[0] * C1) * 100) <= VAMOUNT Goto L_2000
      End If 
    else
		if stkunit=0 goto L_2000   ! bkunit is zero, already checked
	End If 
  End If 
End If 
L_2190: 
Rem IF W2$[1,6]<>"      " LET LOC1$=W2$[1,6] ELSE  LET LOC1$=A$[127,132] ! "no sprod locations
If W1$[13,18] <> "      " Let VENDCODE$ = W1$[13,32] Else Let VENDCODE$ = A$[93,112]
If TYPE = 1 Let VARIANT = (STKUNIT - BKUNIT) Else Let VARIANT = FNR((T9[0] - A1[0]) * C1)
Gosub PRINTMESSAGE
Gosub L_5000
T1[0] = T1[0] + SUNIT
T1[1] = T1[1] + FNR(P1[0] * C1)
If Not(ACCUMULATED)
  T1[2] = T1[2] + BKUNIT
  If BKUNIT > 0 Let T1[7] = T1[7] + BKUNIT
  T1[3] = T1[3] + FNR(A1[0] * C1) \ If A1[0] > 0 Let T1[8] = T1[8] + FNR(A1[0] * C1)
  ACCUMULATED = 1
End If 
Goto L_2000
!
L_2500: Rem LOOP IT HERE !!
K9$ = " ",K9$
If SORTTYPE = 1 Let K9$[1,8] = K1$[1,8]
If SORTTYPE = 2 Let K9$[1,20] = K1$[1,20]
If L8 Return 
T9[0] = 0 \ T[1] = 0
L_2510: 
Search #2,3,DR;K9$,R9,V2
If V2 = 2 Let E9 = 1
If V2 Goto L_2750
WHSE = K9$[1,2]
If W9 If WHSE <> W9 Goto L_2750
Mat Read #2,R9,0;TP1$;
If STAG$ <> "" If TP1$[1,Len(STAG$)] < STAG$ Goto L_2510
If TP1$[1,Len(ETAG$)] > ETAG$ Goto L_2510
If TP1$[7,10] = "VOID" Goto L_2740
If SORTTYPE = 1 If P1$[7,18] <> TP1$[7,18] Goto L_2750
If SORTTYPE = 2 If P1$[1,6] <> TP1$[1,6] Or P1$[7,18] <> TP1$[7,18] Goto L_2750
Mat Read #2,R9,26;TP1;
Mat Read #2,R9,44;TP2$;
IF tp1[0]=-99 then tp1[0]=0   ! skipped tag
If TP1$[7,10] = "VOID" Goto L_2740
T9[0] = T9[0] + TP1[0]
T[1] = T[1] + FNR(TP1[0] * C1)
L_2740: Goto L_2510
L_2750: CNVTU[0] = 0 \ CNVTU[1] = PFU1[8]
CNVTU[2] = 1 \ CNVTA = T9[0]
Gosub L_20000
STKUNIT = AMOUNT
Return 
!
L_3000: Rem READ PRODUCT
K2$ = P1$[7,18]
Search #4,2,1;K2$,V3,E 
If E Goto L_3120
Read #4,V3,236;P9;
Mat Read #4,V3,D[0];D1$;
Mat Read #4,V3,0;A$;
KF8$ = " ",KF8$;KF8$[1,12] = A$[140,151]
Mat Read #4,V3,512;PFU1;
Mat Read #4,V3,554;PFU2;
Read #4,V3,240;C1;
if c1<=0 let c1=.00001 ! need SOMETHING!!
If P9 = 0 Let P9 = 1
Mat Read #4,V3,0;P0$;
If PFU1[8] = -1 Goto L_3105
If PFU1[8] = -3 Goto L_3105
For STK = 0 To 7
  If PFU1[STK] = PFU1[8] Goto L_3105
Next STK
STK = 0 !!\ Gosub ERR_SEARCH
L_3105: Rem
Return 1
L_3120: Rem NOT FOUND !!
D1$[1,30] = "PRODUCT NOT FOUND !!"
C1 = .00001
For I = 0 To 4 \ A[I] = 0
Next I
P1$[7,18] = "VOID        "
P9 = 1
Mat Write #2,V1,0;P1$;
Return 
!
L_3200: Rem GET ON HAND FROM SPRODLOT
If A1 Return 
if not(RASL)
specs[0]=0
SPECS[1]=10 ! ORDER HEADER 
SPECS[2]=11 ! ORDER LINE
SPECS[3]=V3 ! PRODUCT REC NUMBER
specs[4]=w9[1] ! warehouse number
call "mkonshelfadj.dl4",specs[]
onshelfadj=specs[0]
ELSE
onshelfadj=0
ENDIF
let donshelfadj=0 ! will hold converted amt later
let a1=0
D$ = " ",D$;D$[1,12] = P1$[7,18];D$[13,14] = P1$[25,26]
DTMP$ = D$
L_3225: 
Search #3,3,2;D$,V4,E
If E Return 
If DTMP$[1,14] <> D$[1,14] 
let a1=a1-onshelfadj  ! back out what was pulled from the shelf
Return
Endif
Mat Read #3,V4,82;P3;

A1 = A1 + P3[0] - P3[1]
A1[3] = A1[3] + P3[3]
Goto L_3225
L_3300: Rem PROD LOC
PLOC$ = " ",PLOC$
Search #7,3,1;K7$,R7,E
If E Return 
If K7$[1,12] <> P1$[7,18] Return 
Mat Read #7,R7,18;PL1;
If PL1[0] <> W9 Return 
Mat Read #7,R7,0;PLOC$;
Return 
!
L_3400: Rem PRIN PRINT MULTI LOCS
K7$ = " ",K7$ \ K7$[1,12] = P1$[7,18]
PTAB = 15 \ K7$[13,14] = W9 Using "##"
L_3420: 
Gosub L_3300
If PLOC$[13,18] = "      " Return 
Print #0; Tab PTAB;PLOC$[13,18];
PTAB = PTAB + 8
If PTAB > 119 Let PTAB = 15 \ Print #0;" " \ L = L + 1
Goto L_3420
!
L_3500: Rem READ WAREHOUSE
For X = 0 To 24 \ W3[X] = 0 \ Next X
W1$ = " ",W1$ \ W2$ = " ",W2$
K15$ = " ",K15$
K15$[1,12] = P1$[7,18]
K15$[13,14] = W9[1] Using "##"
Search #6,2,1;K15$,R5,E
If E Goto L_3590
Mat Read #6,R5,0;W1$;
Mat Read #6,R5,78;W3;
Mat Read #6,R5,384;W2$;
If P9$[32,32] = "Y" If W3[15] Let C1 = W3[15]

L_3590: Return 
!
L_3800: Rem GET ALL ALT ITEMS
DONE = 0
L_3810: Search #8,3,2;KF8$,R8,E \ If E = 2 Let DONE = 9
!!If E If Not(DONE) Gosub ERR_SEARCH
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
L_4000: Rem TOTAL FOR THIS PART
For I = 0 To 9
  T[I] = 0
  T9[I] = 0
Next I
If PRTFLAG
  If PGBRK
    If K4$[1,6] = P1$[1,6]
      Print #0;"\15\" \ L = L + 2
    Else 
      L = 99
    End If 
  End If 
End If 
L8 = 0 \ A1[0] = 0 \ Mat A1 = Zer
If PRTFLAG If Not(PGBRK) Print #0;"\15\" \ L = L + 2
PRTFLAG = 0
If L > L9 Gosub L_5800
ACCUMULATED = 0
Return 
!
L_4500: Rem CHECK WAREHOUSE
If K4$ = "" Goto L_4550
Goto L_8000
L_4530: Rem
Gosub L_5800
If X0 > D[3] Let E9 = 1 \ Goto L_8100
X0 = X0 + 1
L_4550: Rem PRINT WAREHOUSE
W9$ = X0 Using "##"
Print #0;"  WAREHOUSE: ";W9$
L = L + 3
If E8 If W9 = 0 If E9 = 0 Goto L_1925
Return 
!
L_5000: Rem PRINT LINE
!print D1$[1,30]
L = L + 1
If L > L9 Gosub L_5800
If L8 >= 1 Goto L_5140
Print #0; Tab 105;"BASE UNIT  =    ";BASE$
Print #0; Tab 105;"STOCK UNIT =    ";SUNIT$
Print #0; Tab 1;P1$[7,18];
if custom_customer$="ZEPHYR" 
	FOR I=7 TO 18 !STRIP TRAILING BLANKS
		IF P1$[I,I]=" " LET I=I-1 \ GOTO L_5076:
	NEXT I
	L_5076: LET BAR$=P1$[7,I]
Endif
Print #0; Tab 15;D1$[1,30];
Print #0;"  ";P0$[63,92];
Print #0; Tab 80;VENDCODE$;
If STK Print #0; Tab 105;"      PACK =   ";PFU2[STK - 1] Else Print #0;" "
CNVTU[0] = 0 
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
 CNVTA = onshelfadj
 Gosub L_20000
donshelfadj = AMOUNT
print #0; using "Shelf count adj ------#.##"; Tab 1;donshelfadj
If ALTF Gosub L_5500
if custom_customer$="ZEPHYR" 
	LET TEMP=INT(BKUNIT)
	PRINT #0; USING "---,--#"; TAB 5;" BOOK=";TEMP;SUNIT$;
	IF STK LET BS=A1[0]-(PFU2[STK-1]*TEMP) ELSE  LET BS=A1[0]-TEMP
	PRINT #0; USING "---,--#";" ";BS;BASE$; TAB 45;BARTRIG$;BAR$; !ADD BAR CODE 
	PRINT #0; TAB 105;"STOCK UNIT =    ";SUNIT$
	LET TEMP=INT(STKUNIT)
	PRINT #0; USING "---,--#"; TAB 5;"COUNT=";TEMP;SUNIT$;
	IF STK LET BS=P1[0]-(PFU2[STK-1]*TEMP) ELSE  LET BS=P1[0]-TEMP
	PRINT #0; USING "---,--#";" ";BS;BASE$;
ENdif
L = L + 3
Print #0; Tab 2;"LOCATIONS : "; \ Gosub L_3400
Print #0;" "
CTQTY = T9[0] \ Gosub L_7000
Print #0;" "; Tab 108;"ADJUST AREA "
L = L + 3
L_5140: If L > L9 Gosub L_5800
If P9$[1,1] = "N" Goto L_5180
If P9$[1,1] = "Y" Goto L_5170
If P0$[113,113] <> "Y" Goto L_5180
L_5170: If L > L9 Gosub L_5800
L_5180: Rem PRINT #0; TAB 20;P1$[25,26]; ! "whse
Print #0; Tab 10;"TAG NO. ";P1$[1,6];
If SKP Print #0; Tab 25;"SKIPPED";
L8 = L8 + 1
Print #0; Tab 35;"UNIT=";SUNIT$;"=__________________________";BASE$;"=____________";
Print #0;"          __________ ";SUNIT$;" __________ ";BASE$
Gosub L_5400
If Not(SUPPRESS)
  Print #0;" "
  L = L + 3
  Print #0; Tab 20; \ CTQTY = P1[0] \ Gosub L_7000
  Print #0;"\12\\12\" \ L = L + 2
Else 
  L = L + 2
End If 
If L > L9 Gosub L_5800
PRTFLAG = 99
If P1[2] = 1 Goto L_5290
L_5290: Rem PRINT #0; USING "------#.## "; TAB 70;SUNIT; !!! CONVERTED QTY
If Not(SUPPRESS)
  Print #0;" "
  L = L + 1
End If 
If L > L9 Gosub L_5800
Return 
!
L_5400: Rem PRINT UP TO 3 VAILD UNITS
Print #0; Tab 44;" (";
For VUM = 0 To 7
  If PFU1[VUM] = 0 Goto L_5460
  If PFU1[VUM] > 0 Mat Read #5,PFU1[VUM],10;VUNIT$;
  Print #0;VUNIT$;" ";
L_5460: Next VUM
Print #0;")"
Return 
!
L_5500: Rem PRINT ALT ITEMS
POS1 = 0
Gosub L_3800
If Not(DONE) Print #0; Tab 1;"ALT ITEMS: ";KF8$[13,36]; \ POS1 = 35
L_5520: Rem LOOP
If Not(DONE) Gosub L_3810
If Not(DONE) Print #0;", ";KF8$[13,36]; \ POS1 = POS1 + 26
If Not(DONE) If POS1 > 106 Print #0;"" \ L = L + 1;POS1 = 0
If Not(DONE) Goto L_5520
If POS1 Print #0;"" \ L = L + 1
Return 
!
L_5800: Rem TOP OF FORM
If P = 0 Goto L_5835
If L9 <> 20 Goto L_5830
!!Print "\15\PRESS <CR> TO CONTINUE ";
!!Input ""J$
!!Print 'CS';
L_5830: Print #0;"\14\"
L_5835: P = P + 1
Print #0; Tab 2;D8$; Tab (66 - (Len(N$) / 2));N$; Tab 115;"PAGE ";P
Print #0;" -mx695a- ";Msc$(3);
Print #0; Tab 34;"I N V E N T O R Y   V A R I A N C E   C O U N T   S H E E T S "
Print #0; Tab 105;"SORTED BY: ";SORTBY$
Print #0; Tab 1;"PRODUCT"; Tab 19;"D E S C R I P T I O N";
Print #0; Tab 80;"VENDOR ITEM CODE"
Gosub L_4550
If Not(SUPPRESS) Print #0; Using "PHYSICAL##"; Tab 5;(SYS * 10) + COUNT
L = 7
Return 
!
L_7000: Rem PRINT REAL AND FAKE AMOUNTS
If SUPPRESS Return 
For X2 = 1 To 5
  CNVTU[0] = 0 \ CNVTU[1] = PFU1[8]
  CNVTU[2] = 1
  If X2 = SYS And Not(L8)
    SKUN[SYS] = Int(BKUNIT)
    If STK Let BASEX[SYS] = A1[0] - (PFU2[STK - 1] * SKUN[SYS])
    If Not(STK) Let BASEX[SYS] = A1[0] - SKUN[SYS]
  End If 
  If X2 = COUNT
    If L8
      CNVTA = P1[0] \ Gosub L_20000
      STKUNIT = AMOUNT
    End If 
    SKUN[COUNT] = Int(STKUNIT)
    If STK Let BASEX[COUNT] = CTQTY - (PFU2[STK - 1] * SKUN[COUNT])
    If Not(STK) Let BASEX[COUNT] = CTQTY - SKUN[COUNT]
  End If 
  If (X2 <> SYS Or L8 > 0) And X2 <> COUNT
    SIGN = Rnd(101)
L_7180: 
    PRCNT = Rnd(21)
    PRCNT = Int(PRCNT)
    If Not(PRCNT) Goto L_7180
    If SIGN > 50 Let SIGN = -1 Else Let SIGN = 1
    PRCNT = PRCNT * SIGN
	IF CTQTY
		FAKE = Int(CTQTY + (CTQTY * PRCNT / 100))
    ELSE
		FAKE = Int(a1[0] + (a1[0] * PRCNT / 100))
	ENDIF
	CNVTA = FAKE
    Gosub L_20000
    SKUN[X2] = Int(AMOUNT)
    If STK Let BASEX[X2] = FAKE - (PFU2[STK - 1] * SKUN[X2])
    If Not(STK) Let BASEX[X2] = FAKE - SKUN[X2]
  End If 
  If Not(L8)
    Print #0; Using "#) -------#/-------# "; Tab 1;X2;SKUN[X2];BASEX[X2]
    L = L + 1
  End If 
  If L8
    Print #0; Using " #) -------#/-------# ";X2;SKUN[X2];BASEX[X2];
  End If 
Next X2
Return 
!
L_8000: Rem END OF FILE
Gosub L_4000
If Not(E8) Goto L_1940
L_8092: 
Print #0; Using "-------#.##"; Tab 69;T1[7];
Print #0; Using "----------#.##"; Tab 85;T1[8];
For I = 0 To 9
  T2[I] = T2[I] + T1[I]
  T1[I] = 0
Next I
L_8100: If W9 = 0 If E9 = 0 Goto L_4530
If W9 <> 0 Goto OUTEND
Goto OUTEND
!
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
CNVTA = P1[0]
Gosub L_20000
SUNIT = AMOUNT
CNVTU[0] = 0
CNVTU[1] = P1[2]
CNVTU[2] = 1
CNVTA = P1[0]
Gosub L_20000
CTUNIT = AMOUNT
If PFU1[0] > 0 Mat Read #5,PFU1[0],10;BASE$;
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
If P1[2] > 0 Mat Read #5,P1[2],10;CTUNIT$;
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
If PFU1[11] = -1 Let CUNIT$ = " CWT"
If PFU1[11] = -3 Let CUNIT$ = "LB  "
CNVTU[0] = 0
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
CNVTA = A1[0]
Gosub L_20000
BKUNIT = AMOUNT
CNVTU[0] = 0
CNVTU[1] = PFU1[11]
CNVTU[2] = 2
CNVTA = C1
Gosub L_20000
CUNIT = AMOUNT
Return 
!
L_20000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 2%,Q0[1],3%
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
BUNIT = 0
If CNVTU[2] <> 5 Goto L_20170
BUNIT = 1
CNVTU[2] = 1
Goto L_20180
L_20170: 
BUNIT = 0
L_20180: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,19,50;P9$;
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_20250,L_20350,L_20350,L_20640
!!Gosub ERR_SEARCH
L_20250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20330
  Next X1[2]
  FLAG = 1 \ Goto L_20650
L_20330: 
Next X1[1]
FLAG = 0 \ Goto L_20650
L_20350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20450
  Next CUNIT
  FLAG = 0 \ Goto L_20650
L_20450: 
  If CUNIT = 0 Goto L_20530
L_20460: 
  If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_20510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "catch weight Item
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20530: 
Next X1[1]
If CNVTU[2] <> 1 Goto L_20580
If BUNIT Goto L_20580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20580: 
If CNVTU[2] <> 2 Goto L_20630
If Not(CNVTU[1]) Goto L_20630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20630: FLAG = 0 \ Goto L_20650
L_20640: Rem
L_20650: Rem RETURN FROM MODES 0-2
Return 
!
PRINTMESSAGE: Rem
If SORTMESSAGE Let PCTR = 0 \ SORTMESSAGE = 0
!!If Not(SCRPRT)
!!  Print @0,22;"Printing, Please Wait...";
!!  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 50))
!!    Print Using "#######";@25,22;PCTR;" Records Printed";
!!    Print Using "   Page ####";P;
!!  End If 
!!End If 
Return 
!
!
!!STRTHERE: Rem "================================= get ranges
!!Gosub PRNTSCRN
!!Goto INPUTS
!!INPUTS: Rem
!!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults  E: exit ";
!!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!!Print @0,23;'CE';
!!If X$ = "P"
!!  If Not(W9) And P9$[41,41] = "W"
!!    Print @0,23;'CL RB';"Warehouse Needs To Be Entered";
!!    Signal 3,20
!!    Gosub L_900
!!    Goto INPUTS
!!  Else 
!!    Goto STRTPRNT
!!  End If 
!!End If 
!!If X$ = "E" Goto L_9020
!!If X$ = "R" Goto EDT_ALL
!!If X$ = "" Goto INPUTS
!!If X$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
!!  Input Len 16384 + 1;""Z2$
!!  Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "progdfltw","695a","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL'
!!End If 
!!X = X$
!If X < 1 Or X > 11 Goto INPUTS
!!Gosub EDT_FLDS
!!Goto INPUTS
!!
!!EDT_ALL: Rem "want's all
!!RESELECT = 99
!!For X = 1 To 11
!!  Gosub EDT_FLDS
!!Next X
!!RESELECT = 0
!!Goto INPUTS
!!
!!EDT_FLDS: Rem "edit them here
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On X Gosub L_1300,L_310,L_400,L_450,L_500,L_900
!!On X - 6 Gosub SELECTSORT,L_1000,L_1090,L_1200,L_1250
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!!
!!PRNTSCRN: Rem ================================================ screen
!!Call "progdflt","695a","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$ = " ",RETVAL$
!  RETVAL$[1,1] = "1"
!  RETVAL$[2,2] = "5"
!  RETVAL$[3,3] = "1"
!  RETVAL$[4,4] = "1"
!  RETVAL$[5,9] = "00000"
!  RETVAL$[10,11] = "01"
!  RETVAL$[12,12] = "1"
!  RETVAL$[13,18] = "      "
!  RETVAL$[19,24] = "zzzzzz"
!  RETVAL$[25,25] = "0"
!  RETVAL$[26,26] = "0"
!  RETVAL$[27,27] = "0"
!  RETVAL$[28,28] = "0"
!  Call "progdfltw","695a","",77,RETVAL$,URECFLAG
!End If 
!SUPPRESS = RETVAL$[27,27]
!
!Print 'CS'
!Print @0,0;"-mx695a-";@26,0;"INVENTORY VARIANCE COUNT SHEETS"
!If Not(RASL) Print @1,1;"1> Suppress the Count Detail ? "
!If Not(SUPPRESS) Print @1,2;"2> Enter the Position of the System on Hand (1-5): "
!If Not(SUPPRESS) Print @1,3;"   Enter the Position of the Counted Qty (1-5): "
!Print @1,5;"3> Enter  D: Dollars or  Q: Quantity: "
!Print @1,7;"4> Enter  C: Constant variance or  P: Percentage: "
!Print @1,9;"5> Enter Variance Amount: "
!Print @1,11;"6> Enter Warehouse: "
!Print @1,13;"7> Sort by  P: Product or  T: Tag: "
!Print @35,15;'BR';"STARTING";@55,15;"ENDING";'ER';
!Print @1,16;"8> Tag/Location: "
!Print @1,18;"9> Page Break on Item/Tag Change ? "
!Print @0,19;"10> Print All Alternative Item Codes ? "
!Print @0,20;"11> Print Only the Catch Weight Items? "
!
!SYS = RETVAL$[1,1]
!COUNT = RETVAL$[2,2]
!TYPE = RETVAL$[3,3]
!VTYPE = RETVAL$[4,4]
!VAMOUNT = RETVAL$[5,9]
!If Not(W9) Let W9 = RETVAL$[10,11]
!If W9 Let RETVAL$[10,11] = W9 Using "##"
!SORTTYPE = RETVAL$[12,12]
!STAG$ = RETVAL$[13,18]
!ETAG$ = RETVAL$[19,24]
!PGBRK = RETVAL$[25,25]
!ALTF = RETVAL$[26,26]
!PRNTCWT = RETVAL$[28,28]
!
!If Not(SUPPRESS) Print Using "#";@54,2;SYS;
!If Not(SUPPRESS) Print Using "#";@50,3;COUNT;
!If TYPE = 1 Print @39,5;"Q" Else Print @39,5;"D"
!If VTYPE = 1 Print @51,7;"C" Else Print @51,7;"P"
!Print Using "#####";@28,9;VAMOUNT;
!Print Using "##";@22,11;W9;
!If SORTTYPE = 1 Print @36,13;"P" Else Print @36,13;"T"
!Print @35,16;STAG$ \ Print @55,16;ETAG$
!If PGBRK Print @43,18;"Y" Else Print @43,18;"N"
!If ALTF Print @43,19;"Y" Else Print @43,19;"N"
!If PRNTCWT Print @43,20;"Y" Else Print @43,20;"N"
!If Not(RASL)
!  If SUPPRESS Print @43,1;"Y" Else Print @43,1;"N"
!End If 
!Return 
!!
!!L_310: Rem position
!!If SUPPRESS Return 
!!J5$ = "ENTER THE POSITION OF THE SYSTEM ON HAND (1-5) "
!!If Not(SUPPRESS) Print @1,2;"2> Enter the Position of the System on Hand (1-5): "
!!If Not(SUPPRESS) Print @1,3;"   Enter the Position of the Counted Qty (1-5): "
!!J0$ = "3 00015402"
!!J1 = SYS
!!Gosub ISINPUT
!!SYS = J1
!!If SYS < 1 Or SYS > 5
!!  J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_310
!!End If 
!!
!!L_335: J5$ = "ENTER THE POSITION OF THE COUNTED QTY (1-5)"
!!J1 = COUNT
!!J0$ = "3 00015003"
!!Gosub ISINPUT
!!COUNT = J1
!!If COUNT = SYS Goto L_335
!!If COUNT < 1 Or COUNT > 5
!!  J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_335
!!End If 
!!RETVAL$[1,1] = SYS Using "#"
!!RETVAL$[2,2] = COUNT Using "#"
!!Return 
!!
!!L_400: J5$ = "ENTER  D: DOLLAR or  Q: QUANTITY"
!!If TYPE = 1 Let J1$ = "Q" Else Let J1$ = "D"
!!J0$ = "2 00013905"
!!Gosub ISINPUT
!!Call String(1,J$)
!!If J$ <> "Q" If J$ <> "D" Goto L_400
!!If J$ = "Q" Let TYPE = 1
!!If J$ = "D" Let TYPE = 2
!!RETVAL$[3,3] = TYPE Using "#"
!!Return
!!
!!L_450: Rem
!!If VTYPE = 1 Let J1$ = "C" Else Let J1$ = "P"
!!J5$ = "ENTER  C: CONSTANT VARIANCE OR  P: PERCENTAGE"
!!J0$ = "2 00015107"
!!Gosub ISINPUT
!!Call String(1,J$)
!!If J$ <> "C" If J$ <> "P" Goto L_450
!!If J$ = "C" Let VTYPE = 1
!!If J$ = "P" Let VTYPE = 2
!!If Not(VTYPE) Goto L_450
!!RETVAL$[4,4] = VTYPE Using "#"
!!Return 
!!
!L_500: Rem
!J1 = VAMOUNT
!J5$ = "ENTER VARIANCE AMOUNT"
!J0$ = "3 00052809"
!Gosub ISINPUT
!VAMOUNT = J1
!RETVAL$[5,9] = VAMOUNT Using "#####"
!Return 
!
!!L_900: Rem ENTER WAREHOUSE (Entered in 695 - Allow Change?)
!!J5$ = "ENTER WAREHOUSE"
!!J0$ = "3 00022211";J1 = W9
!!Gosub ISINPUT
!!If J1 > D9[5] Or Not(J1)
!!  J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_900
!!End If 
!!If P9$[41,41] = "W"
!!  Call "CHKWRASL",J1,RASL[]
!!  If RASL
!!    Print @0,22;'CE RB';"Warehouse is designated as RASL. These Count Sheets";
!!    Print @0,23;'CL RB';"are for Non-Rasl Warehouses.  Please re-enter. ";
!!    Signal 3,30
!!    Print @0,22;'CE';
!!    Goto L_900
!!  End If 
!!End If 
!!W9 = J1
!!RETVAL$[10,11] = W9 Using "##"
!!Random (1)
!!Return 
!!
!!SELECTSORT: Rem "sort by Product or Tag
!!J5$ = "SORT BY  P: PRODUCT OR  T: TAG"
!!If SORTTYPE = 1 Let J1$ = "P" Else Let J1$ = "T"
!!J0$ = "2 00013613"
!!Gosub ISINPUT
!!Call String(1,J$)
!!If J$ <> "P" If J$ <> "T" Goto SELECTSORT
!!If J$ = "P" Let SORTTYPE = 1 \ SORTBY$ = "PRODUCT"
!!If J$ = "T" Let SORTTYPE = 2 \ SORTBY$ = "TAG"
!!RETVAL$[12,12] = SORTTYPE Using "#"
!!Return 
!!
!!L_1000: Rem "tag/location
!!J5$ = "Enter Starting Tag/Location maximum zzzzzz "
!!J0$ = "2 00063516" \ J1$ = STAG$
!!Gosub ISINPUT \ STAG$ = J$
!!L_1050: J5$ = "Enter Ending Tag/Location maximum zzzzzz"
!!J0$ = "2 00065516" \ J1$ = ETAG$
!Gosub ISINPUT \ ETAG$ = J$
!!If STAG$ <= ETAG$
!!  Goto L_1000EXIT
!!End If 
!!J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!" \ Gosub ISERRMSG \ Goto L_1050
!!Gosub ISERRMSG \ Goto L_1050
!!L_1000EXIT: Rem
!!RETVAL$[13,18] = STAG$ \ RETVAL$[19,24] = ETAG$
!!Return
!!
!!L_1090: Rem FINALLY PAGE BREAK
!!L_1100: J5$ = "Enter Y or N"
!!J0$ = "6 00014318" \ J1 = PGBRK
!!Gosub ISINPUT
!!If J$ = "Y" Let PGBRK = 1 Else Let PGBRK = 0
!!RETVAL$[25,25] = PGBRK Using "#"
!!Return
!!
!!L_1200: J5$ = "Enter Y or N"
!!J0$ = "6 00014319" \ J1 = ALTF
!!Gosub ISINPUT
!!If J$ = "Y" Let ALTF = 9 Else Let ALTF = 0
!!RETVAL$[26,26] = ALTF Using "#"
!!Return
!!
!!L_1250: J5$ = "Enter Y or N"
!!J0$ = "6 00014320" \ J1 = PRNTCWT
!!Gosub ISINPUT
!!If J$ = "Y" Let PRNTCWT = 9 Else Let PRNTCWT = 0
!!RETVAL$[28,28] = PRNTCWT Using "#"
!!Return
!!
!!L_1300: Rem
!!If RASL Let SUPPRESS = 0 \ Return 
!!J5$ = "Enter Y or N"
!!J0$ = "6 00014301" \ J1 = SUPPRESS
!!Gosub ISINPUT
!!If J$ = "Y" Let SUPPRESS = 1 Else Let SUPPRESS = 0
!!If Not(RESELECT)
!!  If Not(SUPPRESS) Gosub L_310
!!End If 
!!If SUPPRESS Print @1,2;'CL' \ Print @1,3;'CL'
!!RETVAL$[27,27] = SUPPRESS Using "#"
!!Return 
!SORTMESSAGE: Rem
!!Print @0,22;"Sorting, Please Wait...";
!!PCTR = PCTR + 1
!!If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed"
!Return 
!
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end rtn.input.s}
!
!!If L9 = 20 Goto L_9100
!!L_9005: Rem
!!Print 'CS'
!!L_9020: Rem ! "CLOSE
!!Chain "MX000C"
!!Stop 
!!L_9100: Rem FOR SCREEN PRINT ONLY
!!Print "\15\PRESS <CR> TO EXIT ";
!!Input ""K1$
!!Goto L_9005
!!Stop 
!
OUTEND: Rem EXIT ROUTINE
! dx close (no xml)
!If j8 ! dx xml
!  Call addtostr(e$,rstr$,esdel$) !end section
!  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
!End If 
!
Try Call dxclose() ELSE REM
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
