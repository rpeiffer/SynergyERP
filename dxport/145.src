! >>> Program 145
!
! description  Salesperson Order Sheet
!
! loadsave -w -n 100,10 -o prog/dxport/145.dl4 src/145.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  7, 2005  16:54:30
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx1/mx145.src (univ2) [txc] {31762}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX145 - SALESMAN ORDER SHEET REPORT
Rem AUTHOR: NPE 6/14/93
Rem "Last Update:  roman 05/16/1994. handle up to 999 dept's
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
declare intrinsic function trim$
!
!!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 2%,C4[8]
Com 1%,3%,PFU2[6],CNVTA,A[33],UWORK[10],FIELD,BASEX
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Goto ERR_TRAP!!
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim P$[16],C1$[142],P1$[156],D6$[20],P2$[92],I$[60],PC$[80]
Dim PUNIT$[4],CUNIT$[4],SUNIT$[4],D$[28],V$[30],3%,PUNIT
Dim 1%,M5[3],M8,2%,M6[3],3%,M7,1%,MONTH_,ARMONTH,BOYMONTH,FLAG,COMPANY
Dim 1%,C3[4],C5[2],P4,P0,SPCUM[1],SPC3[2],2%,P2,C
Dim 1%,COID,CH_CMDTY,PM5[5,4]
Dim 2%,DT,UNITX,ARDATE,C1[2],B[24],Z7[3],SPC1[5],CFC1[12],D9,Z1[1],I,DF
Dim 3%,C2[2],B1[9,2],C7,A2$[10],S8$[5],A[33],C6[3],MU,S7$[51],S71$[51]
Dim 3%,BRACKET,BRACKET1,SPC4[6],SPC5[2],QTR[3],PREC[1],PF_LOAD2,PRPARC[3]
Dim 2%,Q0[1],R9,DT3[1],JDT,JWDATE,SCRATCH$[80]
Dim 3%,CYSALES[12,2],LYSALES[12,2],CYTOTALS[12,2],LYTOTALS[12,2]
Dim 3%,REC_CMDTY,WHMISC[6]
Dim UNIT$[4],J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8],C5$[12],A3$[30],COMPANY$[30]
Dim SZONE$[2],EZONE$[2],P60$[50],PMASK$[12]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20],S9$[248],A1$[50],S1$[30],K4$[40],A$[80]
Dim 1%,ECONOMY,LM[1],WHLM[1],P9$[50]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],K9$[50],U5$[131],BK$[10]
Dim K16$[20],M1$[40],2%,R16
Dim TABS[20]!
Dim F1$[16],K17$[10],CMDTY$[36]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[2]	  \ Blank$=" ",Blank$
dim EndParam$[2] \ EndParam$="~",EndParam$

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
Def FNS(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .0001)
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 64 \ If J8 Let J9 = 24
!
Mat Read #1,0,100;J8$;
Read #1,3,172;D9;
Read #1,3;COMPANY$;
Read #1,0,108;DT;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
Mat Read #1,0,120;ARMONTH;
PMASK$ = "#########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
COMPANY = 0
X2 = DT \ Gosub L_7820 \ X2 = 0
!
U5$ = "-",U5$
M1$ = "----,---,--# "
If X2 Let JDT = X2 Else Gosub L_7650
!For X = 0 To 5
!  S7$[X * 10,(X * 10) + 1] = "| "
!Next X
!
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
! - If COID < 10 Let F1$ = COID Using "2/commodity#"
! - If COID > 9 Let F1$ = COID Using "2/commodity##"
!
TABS[1] = 0
TABS[2] = 13
TABS[3] = 44
TABS[4] = 55
TABS[5] = 66
TABS[6] = 81
TABS[7] = 96
TABS[8] = 114
Restor L_820
For J = 2 To 16
  Read J1 \ If J1 = -1 Goto L_810
  Read #1,88,J1;J$;
  Open #J,J$
L_810: Next J
L_820: 
Data "1376","1792","1808","1952","1936","1824","2288","-1","2880","1632","1728","1712","1920","0"
Data "2016"
!
ROPEN #18,"2/SPRICEMARK"+Str$(COID)
!
F1$="2/commodity",str$(intCO)
CH_COMMODITY = 17
Ropen #CH_COMMODITY,F1$
Gosub L_8100
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"145",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("SSLSM",tmp$) \ S1 = tmp$
call dxget("ESLSM",tmp$) \  if tmp$ ="" let S2 = 999 else  S2 = tmp$
call dxget("SCUST",tmp$) \ X0 = tmp$
call dxget("ECUST",tmp$) \  if tmp$ = "" let X5 = 999999 else X5 = tmp$
call dxget("SZONE",SZONE$) \ SZONE$= SZONE$,Blank$
call dxget("EZONE",EZONE$) \ EZONE$= EZONE$,EndParam$!!If EZONE$ = "" Let EZONE$ = "~~"
call dxget("PRINT",tmp$) \  ECONOMY = tmp$ !!droplist 1, 2
!
!validations slsm
if S1 < 0 or S1 > 999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
if S2 < S1 or S2 > 999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
!validations cust
if X0 < 0 or X0 > 999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
if X5 < X0 or X5 > 999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
K2$ = X0 Using "######" \ K3$ = X5 Using "######"
!
!validations zone
If EZONE$ < SZONE$  LET  e$ = "Invalid ending zone, must be >= than starting zone!" \ error 10000
!
F9 = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
!!L_900: Rem GET SLSM RANGES
!F9 = 0
!Print 'CS';@0,0;@30,0;"SALESMAN ORDER SHEET"
!L_910: Print @0,10;"ENTER STARTING SLSM, <CR> FOR ALL,   E: TO EXIT: ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!If K2$ = "" Let K3$ = "999" \ S1 = 0 \ S2 = 999 \ Goto L_1000
!S1 = K2$ \ K2$ = S1 Using "######"
!Print @0,11;"ENTER ENDING   SLSM, <CR> FOR LAST,  E: TO EXIT: ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!If K3$ = "" Let K3$ = "999"
!S2 = K3$ \ K3$ = S2 Using "######"
!If K2$ <= K3$ Goto L_1000
!Print @0,23;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_910
!K1$ = K2$ \ If J2 If Not(J8) Print #0;"\14\";
!J1 = 90 \ J2 = 0
!!L_1000: Rem GET RANGES
!Print @0,13;"ENTER STARTING CUST, <CR> FOR ALL,   E: TO EXIT: ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!If K2$ = "" Let K3$ = "999999" \ X0 = 0 \ X5 = 999999 \ Goto L_1090
!X0 = K2$ \ K2$ = X0 Using "######"
!Print @0,14;"ENTER ENDING   CUST, <CR> FOR LAST,  E: TO EXIT: ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!If K3$ = "" Let K3$ = "999999"
!X5 = K3$ \ K3$ = X5 Using "######"
!L_1090: If K2$ <= K3$ Goto L_1110
!Print @0,23;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_1000
!L_1110: K1$ = K2$ \ If J2 If Not(J8) Print #0;"\14\";
!J1 = 90 \ J2 = 0
!!L_1121: !Print @0,16;"ENTER STARTING ZONE, <CR> FOR ALL,   E: TO EXIT: ";'CE';
!Input Len 16386;""SZONE$ \ If SZONE$ = "E" Goto OUTEND
!If SZONE$ = "" Let EZONE$ = "~~" \ Goto L_1127
!!Print @0,17;"ENTER ENDING   ZONE, <CR> FOR LAST,  E: TO EXIT: ";'CL';
!!Input Len 16386;""EZONE$ \ If EZONE$ = "E" Goto OUTEND
!!If EZONE$ = "" Let EZONE$ = "~~"
!L_1127:! SZONE$ = SZONE$,"  " \ EZONE$ = EZONE$,"  "
!!If SZONE$ <= EZONE$ Goto L_1130
!Print @0,23;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_1121
!!L_1130: Goto L_1900
!Input ""BK$
!If BK$ = "" Let BRACKET = -9 Else Let BRACKET = BK$
!!L_1900:! Print @0,20;"  1: NORMAL PRINT OR  2: COMPRESSED PRINT ";
!Input ECONOMY
!If ECONOMY < 1 Or ECONOMY > 2 Goto L_1900
!ECONOMY = ECONOMY - 1
!D3 = -99 \ Gosub L_6000
!!Print @0,23;'CL';"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
!
if j8 
  tmp$ = "CUST #",fdel$
  tmp$ = tmp$,"CUST NAME",fdel$
  tmp$ = tmp$,"ADDRESS",fdel$
  tmp$ = tmp$,"CITY",fdel$
  tmp$ = tmp$,"STATE",fdel$
  tmp$ = tmp$,"ZIP",fdel$
  tmp$ = tmp$,"SLSM",fdel$
  tmp$ = tmp$,"ZONE",fdel$
  tmp$ = tmp$,"CONTACT",fdel$
  tmp$ = tmp$,"TELEPHONE",fdel$
  tmp$ = tmp$,"ITEM CODE",fdel$
  tmp$ = tmp$,"DESCRIPTION 1",fdel$
  tmp$ = tmp$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$,"CUSTOMER'S INVENTORY",fdel$
  tmp$ = tmp$,"NOW ORDERED",fdel$
  tmp$ = tmp$,"LAST DATE",fdel$
  tmp$ = tmp$,"LAST QUANTITY",fdel$
  tmp$ = tmp$,"LAST PRICE",fdel$
  tmp$ = tmp$,"PRICE CODE",fdel$
  tmp$ = tmp$,"QTD SALES",fdel$
  tmp$ = tmp$,"1 QTRS AGO",fdel$
  tmp$ = tmp$,"2 QTR AGO",fdel$
  tmp$ = tmp$,"3 QTRS AGO",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K1$ = K2$
If J2 If Not(J8) Print #0;"\14\";
J1 = 90 \ J2 = 0
ECONOMY = ECONOMY - 1
D3 = -99 \ Gosub L_6000
K1$ = " ",K1$
L_2000: 
Search #9,3,1;K1$,R1,E 
If E Goto L_9100
If K1$[6,11] <> J4$[1,6] Let J1 = 99
Mat Read #2,R1,0;P$;
Mat Read #2,R1,12;DF;
Mat Read #2,R1,16;C1;
Mat Read #2,R1,28;C2;
Mat Read #2,R1,46;C3; 
Mat Read #2,R1,56;P2$;
Mat Read #2,R1,140;C6;
If C3[1] <> D3 Let F7 = 99 \ D3 = C3[1]
If C6[3] = 1 Goto L_2000
X2 = C1[2] \ Gosub L_7700
X3 = 0 \ X9 = 0
Gosub L_3500
Gosub L_5800
Gosub L_3300
X3 = C2[1] \ Goto L_2170
Z9 = C1[0] \ Gosub L_25000
If X3 = -2 Let X3 = 0
If Not(X9) If C4[2] = 2 Gosub L_6500 \ Goto L_2170
If X9 = 0 Gosub L_4200
If Not(X3) If C2[1] Let X3 = C2[1]
L_2170: If C3 >= -17 And C3 <= -8 Let PC$ = S9$[1,14] \ PC$[10,12] = - C3 Using " ##"
If C3 = -7 Let PC$ = S9$[15,28]
If C3 >= -6 And C3 <= -1 Let PC$ = S9$[29,42] \ PC$[10,11] = - C3 Using " #"
If C3 > 0 Let PC$ = S9$[C3 * 14 + 29,C3 * 14 + 42]
Gosub L_5000
Goto L_2000
!
L_3000: Rem PRINT THE HEADER
! - L_3001: If COMPANY$[1,1] = " " Let COMPANY$ = COMPANY$[2] \ Goto L_3001
! - L_3002: If Len(COMPANY$) > 1 And COMPANY$[Len(COMPANY$),Len(COMPANY$)] = " " Let COMPANY$ = COMPANY$[1,Len(COMPANY$) - 1],"" \ Goto L_3002
Company$=trim$(COMPANY$)
T9$ = "" \ Call Time(T9$)
if not(j8)
  Print #0; Using "###"; Tab (66 - Len(COMPANY$) / 2);COMPANY$; Tab 123;"PAGE";J2
  Print #0; Tab 56;"SALESMAN ORDER SHEET"
  Print #0; Tab 59;"AS OF ";J8$
End if
If COMPANY Return 
J4$ = K1$[6,11]
Search #4,2,1;J4$,V1,E 
If E Goto L_3039
Mat Read #4,V1,0;C1$;
Mat Read #4,V1,142;CFC1;
Mat Read #4,V1,194;C5;
Mat Read #4,V1,348;A2$;
Goto L_3045
L_3039: Rem search error
C1$ = "ERROR! CUSTOMER NOT FOUND!!"
!
L_3045: Rem PRINT
P3 = CFC1[7]
if j8 return
  I = K1$[6,11] \ Print #0;"CUST:";I; 
  Print #0; Tab 90;"SLSM:";CFC1[2];" ";S1$[1,20] 
  A$ = C1$[31,60] \ Gosub L_3270 
  Print #0; Tab 6;A$; \ I = K1$[4,5] \ Print #0; Tab 90;"ZONE:";I;" ";D$ 
  A$ = C1$[61,90] \ Gosub L_3270
  Print #0; Tab 6;A$; Tab 90;"CONTACT: ";C1$[1,20]
  A$ = C1$[121,135] \ Gosub L_3270
  Print #0; Tab 6;A$; Tab 23;C1$[136,137]; Tab 27;A2$;
  J$ = " ",J$ \ J$ = C1$[21,30] \ Gosub L_6700
  Print #0; Tab 90;"TELEPHONE: ";J$
  Print #0;U5$
Return 
!
K4$ = " ",K4$
K4$ = CFC1[2] Using "###"
Search #7,2,1;K4$,R4,E
If E Let S1$ = " *** NOT ON FILE ***" \ Goto L_3160
Mat Read #7,R4,0;S1$;
L_3160: 
K4$ = " ",K4$ \ K4$ = K1$[4,5] \ D$ = " ",D$
Search #14,2,1;K4$,R4,E
If E Let D$ = " *** NOT ON FILE ***" \ Goto L_3195
Mat Read #14,R4,0;D$;
L_3195: Return 
!
!Print #0; Tab 78;"The following codes may appear under the price:"
!Return 
!Print #0; Tab 80;"LP - LAST PRICE; unable to calculate current price;"
!Return 
!Print #0; Tab 85;"this may not be the current price"
!Return 
!Print #0; Tab 80;"SP - SPECIAL PRICE due to prior agreement"
!Return 
!Print #0; Tab 80;"EP - EXPIRED special price"
!Return 
!Print #0; Tab 80;"QB - MATRIX price, quantity break available"
!Return 
!Print #0; Tab 80;"PM - PROMOTION"
!Return 
!Print #0; Tab 80;"CD - COMMODITY special price"
!Return 
!Print #0; Tab 80;"10 B - TEN BRACKET price"
!Return 
!Print #0; Tab 80;"10 BSP - ten bracket SPECIAL PRICE"
!Return 
!
L_3270: 
If A$[1,1] = " " And Len(A$) > 1 Let A$ = A$[2] \ Goto L_3270
Return 
!
L_3300: Rem GET QTR FIGURES FROM SLSCURR
Mat CYTOTALS = Zer \ Mat LYTOTALS = Zer
For C = 0 To 12 \ CYTOTALS[C,0] = 0 \ LYTOTALS[C,0] = 0 \ Next C
K16$ = " ",K16$
K16$[1,6] = CFC1[1] Using "######"
K16$[7] = P1$[140,151]
L_3340: 
Search #16,3,1;K16$,R16,E
If E = 2 Goto L_3400
If K16$[7,18] <> P1$[140,151] Goto L_3400
E = K16$[1,6] \ If E <> CFC1[1] Goto L_3400
Mat Read #16,R16,16;CYSALES;
Mat Read #16,R16,256;LYSALES;
For I = 0 To 12
  For C = 0 To 2
    CYTOTALS[I,C] = CYTOTALS[I,C] + CYSALES[I,C]
    LYTOTALS[I,C] = LYTOTALS[I,C] + LYSALES[I,C]
  Next C
Next I
Goto L_3340
!
L_3400: 
MONTH_ = ARMONTH \ FLAG = 0 \ C = 0
For I = 0 To 3 \ QTR[I] = 0 \ Next I \ I = 0
L_3410: 
If FLAG Let QTR[I] = QTR[I] + LYTOTALS[MONTH_,0]
If Not(FLAG) Let QTR[I] = QTR[I] + CYTOTALS[MONTH_,0]
MONTH_ = MONTH_ - 1 \ C = C + 1
If MONTH_ < 1 Let MONTH_ = 12
If FLAG And MONTH_ = ARMONTH Goto L_3450
If MONTH_ = ARMONTH Let FLAG = 1
If C = 3 Gosub L_10300 \ I = I + 1 \ C = 0
If I > 3 Goto L_3450
Goto L_3410
L_3450: Return 
!
L_3500: Rem GET PRODUCT
J2$ = P$[1,12]
Search #3,2,1;J2$,V1,E
If E Goto L_3530
Mat Read #3,V1,0;P1$;
Mat Read #3,V1,256;A;
Mat Read #3,V1,156;B;
Mat Read #3,V1,512;PFU1; 
Mat Read #3,V1,554;PFU2;
Mat Read #3,V1,894;C4; 
Mat Read #3,V1,944;A3$;
Mat Read #3,V1,620;LM;
Mat read #3,v1,596;prparc;
mat read #3,v1,938;pf_load2;
PREC[0] = V1
Gosub L_12400
C2[2] = B[8]
Return 
!
L_3530: Rem NG
P1$ = " ",P1$ \ P1$[9,38] = "ERROR! PRODUCT NOT FOUND!!"
Return 
!
L_3800: Rem TOTAL PRINT
if J8 return
Gosub L_8500
Return 
!
L_4200: Rem "============================== commodity/matric price calc
Gosub L_4500
If Not(P4) Let X3 = A[19 + P2] \ Goto L_4277
If P4 = 1 Let FIELD = 0
If P4 > 2 If P4 < 9 Let FIELD = P4 - 2
If P4 If P4 <> 2 If P4 <> 9 Gosub L_12000
If P4 = 1 Let X3 = B[8]
If P4 = 2 Let X3 = B[10]
If P4 >= 3 If P4 <= 8 Let X3 = A[17 + P4]
If P4 = 9 Let X3 = C4[4]
If P2 = 0 Let P2 = 1
X3 = X3 * P2
L_4277: S9$ = " ",S9$
If B[22] If P0 Let S9$ = "QB"
Return 
!
L_4350: Rem BASE TYPE
FIELD = 0
If SPC3[1] = 2 Let FIELD = 0
If SPC3[1] > 3 If SPC3[1] < 10 Let FIELD = SPC3[1] - 3
If FIELD Gosub L_12000
If SPC3[1] = 1 Let BASEX = C4[4]
If SPC3[1] = 2 Let BASEX = B[8]
If SPC3[1] = 3 Let BASEX = B[10]
If SPC3[1] = 4 Let BASEX = A[20]
If SPC3[1] = 5 Let BASEX = A[21]
If SPC3[1] = 6 Let BASEX = A[22]
If SPC3[1] = 7 Let BASEX = A[23]
If SPC3[1] = 8 Let BASEX = A[24]
If SPC3[1] = 9 Let BASEX = A[25]
If SPC3[1] = 10 Let BASEX = SPC5[2]
If SPC3[1] = 11 Let BASEX = SPC5[1]
If SPC3[1] = 12
  If C4[2] = 1 Gosub L_4200
  If C4[2] = 2 Gosub L_6500
  BASEX = X3 \ X3 = 0
End If 
Return 
!
L_4500: Rem COMMOD
K3$ = " ",K3$ \ K3$ = P1$[152,155]
Search #8,2,1;K3$,Z8,E 
If E return ! - was Goto L_4550
Mat Read #8,Z8,0;CMDTY$;
K17$[1,4] = CMDTY$[32,35]
K17$[5] = P3 Using "### "
Search #CH_COMMODITY,2,1;K17$,REC_CMDTY,E
if not(e)
Mat Read #CH_COMMODITY,REC_CMDTY,40;P4;
Mat Read #CH_COMMODITY,REC_CMDTY,42;P2;
Mat Read #CH_COMMODITY,REC_CMDTY,46;P0;
Else
let p4=0;p2=1;p0=0
endif
return
!
! - L_4550: Rem ERR
!Print @0,23;'RB CL';"COMMODITY NOT FOUND ";K3$
!Signal 3,20 \ Print @0,23;'CE';
! - L_4580: Return 
!
L_5000: Rem ----------------------------------------- PRINT DETAIL LINE #1
Gosub L_10000
PUNIT = X3
Gosub L_7200
if j8
  tmp$ = trim$(K1$[6,11]),fdel$ !!cust code
  tmp$ = tmp$ ,trim$(C1$[31,60]),fdel$ !!cust name
  tmp$ = tmp$ ,trim$(C1$[61,90]),fdel$ !!address
  tmp$ = tmp$,trim$(C1$[121,135]),fdel$  !!city
  tmp$ = tmp$,trim$(C1$[136,137]),fdel$  !!state 
  tmp$ = tmp$,trim$(A2$),fdel$  !!zip
  tmp$ = tmp$,CFC1[2]," ",trim$(S1$[1,20]),fdel$!!slsm
  tmp$ = tmp$,K1$[4,5]," ",trim$(D$),fdel$!!zone
  tmp$ = tmp$,trim$(C1$[1,20]),fdel$ !!contact
  J$ = " ",J$ \ J$ = C1$[21,30] \ Gosub L_6700
  tmp$ = tmp$ ,trim$(J$),fdel$ !!telephone
  tmp$ = tmp$,trim$(P$[1,12]),fdel$ !!item code
  tmp$ = tmp$,trim$(P1$[9,38]),fdel$  !!description 1
  tmp$ = tmp$,trim$(P1$[63,92]),fdel$ !!description 2
  tmp$ = tmp$, "",fdel$ ,"",fdel$!!
  tmp$ = tmp$,X$[1,8],fdel$,C2[0] Using "#,###,###"," ",SUNIT$,fdel$ !!last date /last quantity
  tmp$ = tmp$,X3 Using PMASK$[2],"/",PUNIT$,fdel$,rtrim$(PC$),fdel$!!last price / price code
  tmp$ = tmp$,QTR[0] Using M1$," ",SUNIT$,fdel$,QTR[1] Using M1$," ",SUNIT$,fdel$!!qtd sales,2qtrs ago
  tmp$ = tmp$,QTR[2] Using M1$," ",SUNIT$,fdel$,QTR[3] Using M1$," ",SUNIT$ ,fdel$!! 1 qtr ago
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0; Tab TABS[1];P$[1,12];"|"; !!item code
  Print #0; Tab TABS[2];P1$[9,38]; !!description
  Print #0; Tab TABS[3] - 1;"|          |          |";!!
  Print #0; Tab TABS[5] + 3;X$[1,8]; !!last date /last quantity
  Print #0; Using PMASK$[2]; Tab TABS[6] - 1;"|";X3;"/";PUNIT$;!!last price / price code
  If DF Print #0;"*"; Else Print #0;" ";
  Print #0; Using M1$; Tab TABS[7] - 1;"|";QTR[0];SUNIT$;!!qtd sales
  Print #0; Using M1$; Tab TABS[8] - 1;"|";QTR[1];SUNIT$!! 1 qtr ago
  Print #0; Tab TABS[2] - 1;"|";P1$[63,92]; !!description2
  If Not(ECONOMY) Print #0; Tab TABS[3] - 1;"|          |          |"; Else Print #0; Tab TABS[3] - 1;"|__________|__________|";
  Print #0; Using "#,###,###"; Tab TABS[5];C2[0];" ";SUNIT$;!!!last quantity
  Print #0; Tab TABS[6] - 1;"|";
L_5127:
  If PC$[Len(PC$),Len(PC$)] = " " Let PC$ = PC$[1,Len(PC$) - 1] \ Goto L_5127
  Print #0; Tab TABS[6] + 14 - Len(PC$);PC$; !!price code
  Print #0; Using M1$; Tab TABS[7] - 1;"|";QTR[2];SUNIT$; !!2qtrs ago
  Print #0; Using M1$; Tab TABS[8] - 1;"|";QTR[3];SUNIT$  !!3qtrs ago
  If Not(ECONOMY) Print #0;U5$ \ J1 = J1 + 1
End if
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 gosub L_3000 \ return 
!
! - If J8 If F9 Let J9 = 20
J1 = J1 + 2 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 14
F7 = 99
Print #0;"\15\";
Gosub L_3000
Print #0; Tab TABS[1];"ITEM CODE";
Print #0; Tab TABS[2];"DESCRIPTION";
Print #0; Tab TABS[3];"CUSTOMER'S"; Tab TABS[4];"    NOW";
Print #0; Tab TABS[5];"LAST DATE"; Tab TABS[6];"LAST PRICE";
Print #0; Tab TABS[7];"QTD SALES"; Tab TABS[8];"1 QTR AGO"
Print #0; Tab TABS[3];"INVENTORY";
Print #0; Tab TABS[4];"  ORDERED"; Tab TABS[5];"/LAST QUANTITY";
Print #0; Tab TABS[6];"/PRICE CODE";
Print #0; Tab TABS[7];"2 QTRS AGO"; Tab TABS[8];"3 QTRS AGO"
Print #0;U5$
Return 
!
L_6000: Rem SORT BY SLSM
A1$ = " ",A1$
K1$ = " ",K1$
K1$ = X0 Using "######"
Search #9,3,1;A1$,R1,E 
If E Goto L_6200
Search #9,5,1;A1$,R1,E 
If E Let e$ = "syserrorfile 145 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",E," keyval (k$)=",A1$ \error 10000
L_6200: Rem SORTING
if not(j8) Print #0;" "
!!Print @0,23;'CL';"SORTING PLEASE WAIT . .  . . . .   . . ";
L_6220: 
Search #2,3,1;K1$,R1,E 
If E Goto L_6400
Mat Read #2,R1,0;P$;
Mat Read #2,R1,16;C1;
Mat Read #2,R1,28;C2;
Mat Read #2,R1,46;C3;
A1$ = " ",A1$
J4$ = C1[0] Using "######"
Search #4,2,1;J4$,V1,E 
If E Goto L_6220
Mat Read #4,V1,0;C1$;
Mat Read #4,V1,142;CFC1;
Mat Read #4,V1,194;C5;
Mat Read #4,V1,348;A3$;
If CFC1[1] < X0 Goto L_6220
If CFC1[1] > X5 Goto L_6400
If CFC1[2] < S1 Goto L_6220
If CFC1[2] > S2 Goto L_6220
If A3$[29,30] < SZONE$ Goto L_6220
If A3$[29,30] > EZONE$ Goto L_6220
A1$[1,3] = CFC1[2] Using "###"
A1$[4,5] = A3$[29,30]
A1$[6] = K1$
Search #9,4,1;A1$,R1,E 
If E Let e$ = "syserrorfile 145 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",E," keyval (k$)=",A1$ \error 10000
Goto L_6220
L_6400: Return 
!
L_6500: Rem CALC BRACKET PRICE
If BRACKET = -9 Let X3 = 0 \ Return 
BRACKET1 = BRACKET
If SPC3 = 5 Let BRACKET1 = BRACKET + SPC5[0]
If SPC3 = 4 Let BRACKET1 = SPC5[0]
B4 = (BRACKET1 * 1000) - 1000 + C4[3]
If B4 < 0 Let X3 = 0 \ Goto L_6690
Mat Read #13,B4,0;M5;
Mat Read #13,B4,10;M6;
M7 = C4[4]
CNVTU[0] = 0 \ CNVTU[1] = PFU1[11] \ CNVTU[2] = 2 \ CNVTA = M7 
Gosub L_20000 \ M7 = AMOUNT
For M8 = 0 To 3
  If Not(M6[M8]) Goto L_6630
  If M5[M8] Let M7 = M7 + (M6[M8])
  If Not(M5[M8]) Let M7 = M7 + (M7 * (M6[M8] / 100))
Next M8
L_6630: Rem
If P60$[18,18] = "Y" Let M7 = FNF(M7)
X4 = M7
CNVTU[0] = PFU1[11] \ CNVTU[1] = 0 \ CNVTU[2] = 2 \ CNVTA = X4
Gosub L_20000 \ X4 = AMOUNT
M7 = X4
X3 = M7
S9$ = " ",S9$
S9$ = "10 B"
If X3 If SPC3 = 5 Or SPC3 = 4 Let S9$ = "10 BSP"
L_6690: Return 
!
L_6700: Rem "======================== make sure phone # conforms
L_6705: If J$[1,1] = " " Let J$ = J$[2] \ Goto L_6705
J$ = J$ To " "
If Len(J$) > 12 Goto L_6750
L_6720: J1$ = J$ To "-" \ If Len(J1$) <> Len(J$) Return 
If Len(J$) = 10 Let J$ = J1$[1,3],"-",J1$[4,6],"-",J1$[7] \ Return 
If Len(J$) = 11 Let J$ = J1$[2,4],"-",J1$[5,7],"-",J1$[8] \ Return \ Return 
If Len(J$) = 7 Let J$ = "    ",J1$[1,3],"-",J1$[4] \ Return 
Return 
!
L_6750: 
J$ = J$[1,12],""
Goto L_6720
L_7200: Rem GET VENDOR
Return 
!
K4$ = " ",K4$ \ K4$ = B[24] Using "######" \ V$ = " ",V$
Search #15,2,1;K4$,R4,E
If E Let V$ = "NOT ON FILE " 
if E=0 Mat Read #15,R4,0;V$;
Return 
!
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
DT = X$
Call DateToJulian(1,X$,X$,E) !!\ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JDT = X2
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
!
! - DT3[0] = X2;DT3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
!X$ = X2 Using "&&&&"
!DT3[0] = X$[1,2];DT3[1] = X$[3,4]
!If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
!If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
!X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
!X2 = X$[1,6] \ Return 
!Print #0; Tab 77;" The following codes may appear under the price ;"
!Print #0; Tab 80;" LP - LAST PRICE; Unable to calculate current price this is the price"
!Print #0; Tab 84;"last paid for the product, this may not be the current price"
!Print #0; Tab 80;" SP - SPECIAL PRICE due to prior agreement "
!Print #0; Tab 80;" SP  **EXPIRED** - The SPECIAL PRICE shown has expired."
!Print #0; Tab 80;" QB -MATRIX price,  QUANTITY BREAK available"
!Print #0; Tab 80;" PM - PROMOTION "
!Print #0; Tab 80;" CD - COMMODITY special price ."
!Print #0; Tab 80;" 10 B - Ten Bracket price  ."
!Print #0; Tab 80;" 10 B SP  - Ten Bracket  special price ."
!!Return 
!
L_8100: Rem LOAD PRODUCT CODES INTO STRING ARRAY
Restor L_8200
S9$ = " ",S9$
For I = 1 To 17
  Read PC$
  S9$[I * 14 - 13,I * 14 - 14 + Len(PC$)] = PC$
Next I
L_8200: Data "MAN BRACKET","MAN PRICE","MAN LIST"
Data "MATRIX","C/S PROD CON","S PROD PROMO","CUST/COM CON","10 BRACKET"
Data "C/A PROD CON","COM PROMO","ALL PROD PROMO","QTY BRK DISC"
Data "MAN % DISC","SIZE PROMO","CUS/SIZE PROMO","FIX PR CUS CON"
Data "MAN GTM% PRICE"
Return 
!
L_8500: Rem FOOTNOTE SPACE
Return 
If F9 Let J1 = 99 \ Return 
If J8 Goto L_8600
If J1 >= 50 Goto L_8600
For F5 = J1 To 49
  if not(j8) Print #0;" "
Next F5
L_8600: J1 = 999
Return 
!
!OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Chain "MX000C"
!Stop 
!
L_9100: Rem END OF THIS RANGE
Gosub L_3800
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
!!Print @0,23;'CL';"CLEARING SORTFILE...";
K9$ = " "
L_9143: 
Search #9,3,1;K9$,R9,E
If E Goto L_9150
Search #9,5,1;K9$,R9,E 
If E Let e$ = "syserrorfile 145 sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",E," keyval (k$)=",K9$ \error 10000
Goto L_9143
L_9150: !!Goto L_900
Goto OUTEND
!Stop 
!
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
CNVTA = X3
Gosub L_20000
X3 = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = C2[0]
Gosub L_20000
C2[0] = AMOUNT
If C3[3] >= 0
  Mat Read #12,C3[3],10;PUNIT$;
Else 
  If C3[3] = -1 Let PUNIT$ = "CWT "
  If C3[3] = -2 Let PUNIT$ = "LOT "
  If C3[3] = -3 Let PUNIT$ = "LB  "
End If 
Mat Read #12,C3[2],10;SUNIT$;
If C3[4] >= 0
  Mat Read #12,C3[4],10;CUNIT$;
Else 
  If C3[4] = -1 Let CUNIT$ = "CWT "
  If C3[4] = -2 Let CUNIT$ = "LOT "
  If C3[4] = -3 Let CUNIT$ = "LB  "
End If 
CNVTU[0] = 0
CNVTU[1] = C3[4]
CNVTU[2] = 2
CNVTA = C2[2]
Gosub L_20000
C2[2] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
CNVTA = C2[1]
Gosub L_20000
C2[1] = FNP(AMOUNT)
Return 
!
L_10300: Rem CONVERT QUARTER FIGURES TO SELLING UNITS
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = QTR[I]
Gosub L_20000
QTR[I] = AMOUNT
Return
L_12000: Rem CALC LOADED COST AND L PRICES FROM TABLE
IF FIELD<1 OR FIELD>6 RETURN 
IF C4[2]<>1 RETURN 
IF C4[3]=0 RETURN 
mat read #18,c4[3],18;pm5;
LET BASE=C4[4]
If pm5[field-1,4]=1 let base=b[10]
if pm5[field-1,4]=2 let base=b[8]
if pm5[field-1,4]=3 let base=pf_load2
if pm5[field-1,4]=4 let base=b[21]
if pm5[field-1,4]=5 let base=prparc[2]
GOSUB L_19000:
! X4 RETURNED

LET A[19+FIELD]=X4
Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,IntCO,e$,rstr$
if e$ error 10000 ! error from called program
Return 
!
COMPANY = 1
Gosub L_3000
COMPANY = 0
if not(j8)
  Print #0;"\15\";"\15\";
  Print #0;"PRICE CODE LEGEND"
  Print #0;"-----------------"
  Print #0;"\15\";
End if
Restor L_13300
For I = 1 To 17
  PC$ = S9$[I * 14 - 13,I * 14]
L_13095: 
  If PC$[Len(PC$),Len(PC$)] = " " Let PC$ = PC$[1,Len(PC$) - 1] \ Goto L_13095
  For J = 1 To 20
    if not(j8) If J > Len(PC$) Print #0;"."; Else Print #0;PC$[J,J];
  Next J
  Read PC$
  if not(j8) Print #0;PC$
Next I
if not(j8)
  Print #0;"\15\";"AN ASTERISK (*) NEXT TO THE PRICE SIGNIFIES ";
  Print #0;"THAT THE PRICE HAS CHANGED SINCE THE LAST PURCHASE"
  Print #0;"\14\"
End if
!!If J8 Print 'CS'
Return 
!
L_13300: 
Data "MANUAL PRICE BRACKET ENTRY 1-10"
Data "MANUAL PRICE ENTRY"
Data "MANUAL LIST PRICE ENTRY 1-6","MATRIX PRICING"
Data "CUSTOMER / SINGLE PRODUCT CONTRACT"
Data "SINGLE PRODUCT PROMOTION"
Data "CUSTOMER / COMMODITY CONTRACT","10 BRACKET PRICING"
Data "CUSTOMER / ALL PRODUCT CONTRACT"
Data "COMMODITY PROMOTION","ALL PRODUCT PROMOTION"
Data "QUANTITY BREAK DISCOUNT","MANUAL PERCENT DISCOUNT"
Data "SIZE (U/M) PROMOTION","CUSTOMER / SIZE (U/M) CONTRACT"
Data "FIXED PRICE CUSTOMER CONTRACT"
Data "MANUAL GTM % PRICE"
Return
!
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
if e$ error 10000 ! error from called program
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
If L3 Let AMOUNT = CNVTA \ Goto L_20160
L_20050:
! - Goto L_20120 !!!!If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
L_20080: 
! - Signal 2,X1,AMOUNT,FLAG !!\ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
if e$ error 10000 ! error from called program
!
If CNVTU[2] = 0 Goto L_20160
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_24900: Rem ===== Check for cust/contract ======
I$ = " ",I$;I$[1,6] = Z9 Using "######"
L_24920: 
Search #10,3,2;I$,R10,E
If E Return 
X2 = I$[1,6] \ If X2 <> Z9 Return 
K9$[1,6] = I$[7,12]
Search #6,2,1;K9$,Z8,E
If Not(E) Gosub L_25500 \ If X3 Goto L_24980
Goto L_24920
L_24980: Rem CONTRACT=I$[8,12] ! "retain contract #
Return 
!
L_25000: Rem Special Pricing (rek - 01/21/93) / NON-STANDARD VERSION
X3 = 0 \ X9 = 0
PROD = 99;L9[0] = 2
K9$ = " ",K9$;K9$[1,6] = Z9 Using "######";K9$[7,18] = P$[1,12];K9$[19] = ""
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
Gosub L_24900 \ If X3 Goto L_29980
K9$[1,6] = "999999";L9[0] = 3
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
!
LET PROD=0;L9[0]=15 ! "customer/cost group price
LET K9$=" ",K9$;K9$[1,6]=Z9 USING "######";K9$[7,7]="-"
LET K9$[8,18]=P1$[116,126];K9$[19]=""
SEARCH #6,2,1;K9$,Z8,E
IF NOT(E) GOSUB L_25500: \ IF X3 GOTO L_29980:
GOSUB L_24900: \ IF X3 GOTO L_29980: ! "check contracts/exit if one
LET K9$[1,6]="999999";L9[0]=16 ! "cost group promotion
SEARCH #6,2,1;K9$,Z8,E
IF NOT(E) GOSUB L_25500: \ IF X3 GOTO L_29980:
!
PROD = 0;L9[0] = 4
K9$ = " ",K9$;K9$[1,6] = Z9 Using "######";K9$[7,7] = "*"
K9$[8,11] = P1$[152,155];K9$[19] = ""
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
Gosub L_24900 \ If X3 Goto L_29980
K9$[1,6] = "999999";L9[0] = 7
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
L9[0] = 12
UNITX = PFU1[19] \ If UNITX > 0 Mat Read #12,UNITX,10;UNIT$;
K9$ = " ",K9$;K9$[1,6] = Z9 Using "######";K9$[7,7] = "&"
K9$[8,11] = UNIT$[1,4];K9$[12,15] = UNITX Using "####";K9$[19] = ""
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
Gosub L_24900 \ If X3 Goto L_29980
K9$[1,6] = "999999";L9[0] = 11
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
L9[0] = 6
K9$ = " ",K9$;K9$[1,6] = Z9 Using "######";K9$[7,7] = "#";K9$[19] = ""
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
Gosub L_24900 \ If X3 Goto L_29980
K9$[1,6] = "999999";L9[0] = 8
Search #6,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If X3 Goto L_29980
X3 = 0;L9[0] = 0 
Goto L_29980
!
L_25500: Rem Now get special price
Mat Read #6,Z8,12;Z1;
Mat Read #6,Z8,12;SPC1;
Mat Read #6,Z8,36;SPCUM;
Mat Read #6,Z8,40;SPC3;
Mat Read #6,Z8,46;SPC4;
Mat Read #6,Z8,138;SPC5;
X2 = SPC1[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE > JDT Goto L_29970
X2 = SPC1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If SPC1[4] And JWDATE < JDT Goto L_29970
X3 = 0
X3 = SPC5[0]
If PROD Let C3[3] = SPCUM[0];C3[4] = SPCUM[1]
S9$ = " ",S9$;S9$ = " SP";S8$ = " SC"
If Not(PROD) And SPC3[0] = 3 ! "fixed price for commdy, allprod or size sp's
  CNVTU[0] = SPC3[3];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = X3
  Gosub L_20000 \ X3 = AMOUNT
End If 
If Not(SPC5[0]) And (SPC3[0] = 4 Or SPC3[0] = 5) Let X3 = 0 \ Goto L_29970
If SPC3[0] = 6 Let X3 = -2 \ Goto L_29970
If SPC3[0] = 1 Or SPC3[0] = 2 Gosub L_4350
If SPC3[0] = 3 Goto L_25740
If SPC5[0] And (SPC3[0] = 4 Or SPC3[0] = 5) Gosub L_6500 \ BASEX = X3;X3 = (BASEX * ((100 + SPC5[0]) / 100))
If SPC3[0] = 1 Let X3 = (BASEX * ((100 + SPC5[0]) / 100))
If SPC3[0] = 2 Let X3 = (BASEX / ((100 - SPC5[0]) / 100))
L_25740: If X3
  X9 = 99
  If SPC3[0] = 3 And (L9[0] = 2 Or L9[0] = 4 Or L9[0] = 6 Or L9[0] = 12 or L9[0]=15)
    L9[0] = 13
  End If 
Else 
  SPC5[0] = 0;SPC5[1] = 0
End If 
L_29970: Return 
L_29980: Rem Exit from special pricing
Return 
!
OUTEND: Rem EXIT ROUTINE
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End

