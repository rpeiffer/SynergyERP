! >>> Program 202g
!
! description GANG PICK BY BIN LOCATION
!
! loadsave -w -n 100,10 -o prog/dxport/202g.dl4 src/202g.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
!

!all rights reserved. (c)copyright 2007 by: Universal Business Systems
 !
 ! *declare common dl4 intrinsic subs & functions
 Declare Intrinsic Function trim$,dateusing$,fmtof
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
 !
 ! *declare common external libs & subs & functions
 External Lib "libgeneral.lib" !general routines
 Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
 Declare External Function getmsg$,expandarray
 !
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 15, 2002  10:04:39
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx2/mx202g.src (univ2) [kag] {64242}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! task22069 - added "RUTHERFORD" custom code - cct213903 - don't print o/t 36 orders (now ot29)
! --------------------  notes for rev9 upgrade for Athens ----------------------
! 10/06/03 jliu cct171586 print the extra bin location, print kit
! 06/15/04 zyc  cct179797 problem with n/s (add as Standard?)
! ------------------------------------------------------------------------------
! custom for xrev9 White River
! ! 09/12/96 sls cct 94748 - Custom PO# for roh file
! ------------------------------------------------------------------------------
! custom for Area Distributors - IL  (custom_customer$="ARDS3455"
! 01/05/16 vst task51640 - print kit info (l_7500 & print_kit routines are used)
!
! ------------------------------------------------------------------------------
! custom for CUSTOM PLASTICS - ("CUSTOMPLASTICS")
! 01/14/16 vst task53068 - custom changes to removed the detail lines and only
!						   print a Total line for each item:
!
! ------------------------------------------------------------------------------
! custom code for Janitors Supply (JSPC1000) 
! 02/22/17 vst task61605 - "PRODUCT TOTALS:" line - make it stand out - added
!                             ***** around it and indented
! ------------------------------------------------------------------------------


Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,getglobals
!Option Default Dialect IRIS1
Rem MX202G   - GANG PICK LIST BY BIN LOCATION
Rem AUTHOR: TTT   FEB 20, 1989
Rem LAST UPDATE:  5/92 - ADD ORDER PRINTED OPTION
Com 1%,PFU1[20],CNVTU[2],UN[2],SW[20]
Com 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
Dim 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],j8,J9[2],L3[3],S9[1],Y
Dim 1%,S2[1],PD1[9],N9[11],PL1[1],PRBKORDQTY,kl1[5],EUN[2]
Dim 2%,D8,H0[12],H5[16],L4[3],L6[5],L9[1],S5,STATUS,X,X1,CURDATE,PAGEBRK
Dim 2%,RZ,TRUCK,PT,DT3[1],JDATE,JWDATE,kl2[1],b[24],A3[2]
Dim 3%,J,J1,T9[20],X2,X3,X4,S7[9],L7[12],A1[7],SUNIT,W3[24],kl3[1]
Dim 3%,T2[25],R9[3],R[30],a[33],UNF[6]
Dim DESC$[10],ZONE$[2],P9$[50],Z$[50],M8$[50]
Dim A$[156],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],CNAME$[30]
Dim J7$[40],ARDATE$[8],J9$[50],K1$[50],K3$[60],L6$[60],L1$[20]
Dim S1$[118],S2$[20],T2$[8],X$[20],K7$[50],K13$[60],K6$[50],W2$[16]
Dim CCD$[14],LOC$[10],H3$[255],TRUCK$[50],P61$[256],P0$[20],S3$[33]
Dim PORT_$[26],FILE1$[16],FILE2$[26],KEY_$[130],DASH$[200],Q$[20]
Dim STBIN$[6],LSTBIN$[6],SPACES$[60],WEEKDAY_$[10],DELV_DATE$[20],custom_customer$[30]
dim ploc$[18],binloc$[6],first_loc$[6],second_loc$[6]
dim kl$[58],k19$[30],sunit$[4],PRA2$[30],U3$[60],PRODA1$[90]
Dim 2%,begTruck,endTruck
Dim 3%
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!

!
 ! Dim U_TRUCK$[1000][10]
 Dim U_ZONE$[1000][10]
 Dim blockid$[100]
LET SW[6]=0 !"print held orders (0-no, 1-yes)  !!
SW[7] = 0
PRODINFO = 1
DASH$ = "-",DASH$
For J = 2 To 17
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
DATA "-1920","-1840","1856","-1888","-1792","-1","-1872","-1","-1728","-1" 
DATA "-1744","-208","-2320","2528","-2736","-1312"
Read #1,3;CNAME$;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Mat Read #1,3,172;CURDATE;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;                   
CUSTOM_CUSTOMER$ = UCase$(trim$(CUSTOM_CUSTOMER$))     

If Err 0 Let j8 = Spc(8)
j8 = 0 \ J7 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If j8 If j8 <> 49 Gosub ERR_TRAP
J7 = 55 \ If j8 Let J7 = 20

!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!
 call dxget("U_REPRINT",tmp$) \ if tmp$ <> "" let S9[0] = 2 else S9[0] = 1 !is this a reprint (y/n/e) 
 call dxget("U_JDATE",tmp1$)  !delivery date
 call dxget("U_WH",tmp$) \ WHSE = tmp$  !warehouse
 call dxget("U_SLOCATION",STBIN$)  \ if STBIN$ = "" let STBIN$ = " ",STBIN$
 call dxget("U_ELOCATION",LSTBIN$) \ if LSTBIN$ = "" let LSTBIN$ = "~",LSTBIN$
 call dxget("U_STATUS",tmp$) \ If tmp$ <> "" Let STATUS = 2 else STATUS = 1
If custom_customer$="PCS" ! couple new prompts
	call dxget("U_PGBLOC",tmp$) ! pagebreak on location
	let sortnum=tmp$
	if sortnum<0 or sortnum>6 let e$="Invalid location break !!" \ error 10000
	call dxget("U_PRBOQTY",tmp$)
	LET PRBKORDQTY=0 \ if tmp$<>"" let PRBKORDQTY=1
ENDIF
!validations delivery date
tmp$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
J1 = tmp$
X2 = J1 \ Gosub L_7700
DELV_DATE$ = " ",DELV_DATE$ \ DELV_DATE$ = X$
Gosub L_6900
WEEKDAY_$ = X$[9]
D8 = J1
X2 = D8 \ Gosub L_7820 \ If errFlag = 1 let e$ = "Invalid date !!" \ error 10000
JDATE = X2
X2 = D8 \ Gosub L_7700
F = Z9 + 1 \ If F < 1 or F > 7 let e$ = "Invalid date!!" \ error 10000
!!
J1 = 90 \ J2 = 0
!validations Warehouse
If WHSE < 1 Or WHSE > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000

!validations bin location
If LSTBIN$ < STBIN$ LET  e$ = "Invalid ending bin location, must be >= than starting bin location!" \ error 10000
 If P9$[45,45] = "Y" let STATUS = 2 
!
!!clearing sort file...
K1$ = " ",K1$
Search #9,3,1;K1$,V1,E
while not(E)
  Search #9,5,1;K1$,V1,E 
  Search #9,3,1;K1$,V1,E
wend
! TRUCK now handled via a range
!validations truck
! K1$ = " ",K1$
! truck:
! If P61$[34,34] <> "Y"
!   Search #2,3,1;K1$,V1,E
!   If E Goto exitSortTruck 
!   Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!   If T2$[F,F] <> "Y" Goto truck
! Else 
!   Search #3,3,1;K1$,V1,E 
!   If E Goto exitSortTruck 
!   X2 = K1$[1,2] \ If X2 > 10 Goto exitSortTruck 
!   Mat Read #3,V1,0;H0;
!   Mat Read #3,V1,78;H4;
!   Mat Read #3,V1,104;H5;
!   If H4[2] <> WH Goto truck
!   If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto truck
!   X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 999999
!   If X2 > JDATE Goto truck
!   V1 = H0[2]
!   Read #4,V1,146;S5;
!   TRUCK = S5
! End If 
! J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
! Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
! Goto truck
! exitSortTruck:
! K1$ = "{" 
! TRUCKCNT = 0
! For I = 6 To 20
!   Search #9,3,1;K1$,V1,E 
!   If E Goto exitTruck
!   If K1$[1,1] <> "{" Goto exitTruck
!   U_TRUCK$[TRUCKCNT] = trim$(K1$[2])
!   TRUCKCNT = TRUCKCNT + 1
!   If I = 20 Let I = 5
! Next I
! exitTruck:
!!ZONE 
K1$ = " ",K1$
ZONE: Rem "thru file
If P61$[34,34] <> "Y"
  Search #2,3,1;K1$,V1,E 
  If E Goto exitSortZone !!
  Mat Read #2,V1,36;T2$;
  If T2$[F,F] <> "Y" Goto ZONE
  ZONE$ = K1$
Else 
  Search #3,3,1;K1$,V1,E 
  If E Goto exitSortZone !
  X2 = K1$[1,2] \ If X2 > 10 Goto exitSortZone 
  Mat Read #3,V1,0;H0;
  Mat Read #3,V1,78;H4;
  Mat Read #3,V1,104;H5;
  If H4[2] <> WHse Goto ZONE
  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 or h5[7]=9 Goto ZONE
  X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 999999
  If X2 > JDATE Goto ZONE
  V1 = H0[2]
  Mat Read #4,V1,126;S2$;
  ZONE$ = S2$[19,20]
End If 
J4$ = " ",J4$ \ J4$ = "}",ZONE$
Search #9,4,1;J4$,V1,E
Goto ZONE
exitSortZone:
ZONECNT = 0
K1$ = "}"
For I = 6 To 20
  Search #9,3,1;K1$,V1,E 
  If E Goto exitZone
  If K1$[1,1] <> "}" Goto exitZone
  U_ZONE$[ZONECNT] = trim$(K1$[2])
  ZONECNT = ZONECNT + 1
  If I = 20 Let I = 5
Next I
exitZone:
Call getglobals("blockx",0,blockid$)

 If blockid$ = "202g"

	Call env(2,"NEXTBLOCK","202g2")
	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
		
 End If 

! must be 202g2
call dxget("BEG_TRUCK", tmp$) \ begTruck = tmp$
call dxget("END_TRUCK", tmp$) \ endTruck = tmp$
if tmp$ = "" endTruck = 999999
call dxget("ALLZONES", tmp$) \ allZones = tmp$

if not(allZones) ! if all zones - leave all zones loaded in sort
	!clearing sort file...
	K1$ = " ",K1$
	Search #9,3,1;K1$,V1,E
	While Not(E)
		  Search #9,5,1;K1$,V1,E
		  Search #9,3,1;K1$,V1,E
	Wend 

	! TRUCK now handled via a range
	!
	! call dxget("U_TRUCKCNT",tmp$)
	! 
	! TRUCKCNT = tmp$
	! 
	! for i = 0 to TRUCKCNT -1
	! 	call dxget("TRUCKS" + str$(i),tmp$)
	! 	tmp$ = "on"!!!dci2
	! 	if tmp$ <> ""  !!on
	! 		TRUCK = U_TRUCK$[i]
	! 		J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	!         Search #9,4,1;J4$,V1,E
	! 	end if
	! Next i
	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		! tmp$ = "on"!!!dci2
		if tmp$ <> "" 
			! ZONE$ =  U_ZONE$[i]
			J4$ = " ",J4$ \ J4$ = "}",tmp$
			Search #9,4,1;J4$,V1,E 
		end if
	Next i
end if ! if not(allZones)


!Ropen #14,"PRTDFLT"
!PT = Spc(6) \ If PT And PT < Chf(14) Mat Read #14,PT,0;PD1;
!L_900: Rem ============= IS THIS A REPRINT?
!Print 'CS';@30,0;"GANG PICK LIST (BY BIN LOCATION)";@0,0;"MX202G";
!S9[0] = 1
!L_930: Print @0,2;'CL';"IS THIS A REPRINT (Y/N/E) ";
!Input ""J1$ \ If J1$ = "E" Goto OUTEND
!If J1$ = "Y" Let S9[0] = 2 \ Goto L_970
!If J1$ <> "N" Goto L_930
!L_970: Rem ============== ENTER DELIVERY DATE
!L_980: Print @0,2;"ENTER DELIVERY DATE: ";'CE';
!J0$ = "50000621 2" \ J1 = CURDATE;J5$ = "ENTER DELIVERY DATE OR <CR> FOR TODAY'S DATE"
!Gosub L_7000 \ If Not(J1) Goto OUTEND
!X2 = J1 \ Gosub L_7700
!DELV_DATE$ = " ",DELV_DATE$ \ DELV_DATE$ = X$
!Gosub L_6900
!WEEKDAY_$ = X$[9]
!D8 = J1
!X2 = D8 \ Gosub L_7820 \ Goto L_980
!JDATE = X2
!X2 = D8 \ Gosub L_7700
!Print @36,2;WEEKDAY_$;
!F = Z9 + 1 \ If F < 1 Goto L_1120
!If F > 7 Goto L_1120
!L_1070: Print @0,4;'CE';"DATE OKAY? (Y/N/E) "; \ Input ""J$
!If J$ = "E" Goto OUTEND
!If J$ = "Y" Goto L_1130
!If J$ <> "N" Goto L_1070
!Goto L_970
!L_1120: Print @0,22;"INVALID DATE ! ";'CE'; \ Signal 3,15 \ Goto L_970
!L_1130: Rem
!J1 = 90 \ J2 = 0
!L_1150: Rem =========== SELECT WAREHOUSE
!Print @0,4;'CL';"WAREHOUSE:";
!J5$ = "ENTER WAREHOUSE NUMBER OR <CR> FOR DEFAULT"
!J1 = PD1[2];J0$ = "3000021004";J2$ = "##"
!Gosub L_7000
!WHSE = J1
!If Not(WHSE) Or WHSE > 99 Goto L_1150
!Print @0,4;'CL';"CLEARING SORT FILE..."
!K1$ = " ",K1$
!L_1250: Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1290
!Search #9,5,1;K1$,V1,E !\ If E Gosub ERR_SEARCH
!Goto L_1250
!
!L_1290: Rem ============== SELECT TRUCK(S)
!L_1300: Print @0,4;'CE';"ENTER TRUCK TO PRINT OR <CR> FOR ALL TRUCKS THAT SHIP FOR THIS DATE ";
!Input ""TRUCK$
!If TRUCK$ = "" Goto L_1350
!TRUCK = TRUCK$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1300
!Gosub L_1420 \ Goto L_1700
!L_1350: Rem ================ SORT THE TRUCKS THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1370: Rem "thru File
!If P61$[34,34] <> "Y"
!  Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1460
!  Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!  If T2$[F,F] <> "Y" Goto L_1370
!Else 
!  Search #3,3,1;K1$,V1,E \ If E = 2 Goto L_1460
!  !If E Gosub ERR_SEARCH
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1460
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WHSE Goto L_1370
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1370
!  X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ If errFlag = 1 let X2 = 999999
!  If X2 > JDATE Goto L_1370
!  V1 = H0[2]
!  Read #4,V1,146;S5;
!  TRUCK = S5
!End If 
!Gosub L_1420 \ Goto L_1370
!L_1420: Rem INSERT SELECTED TRUCK INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 
!L_1460: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!Print @0,4;'CE';"THE FOLLOWING TRUCKS SHIP ON";WEEKDAY_$
!K1$ = "{" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1580
!  If K1$[1,1] <> "{" Goto L_1580
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1580
!  If I = 20 Let I = 5
!Next I
!L_1580: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_1700
!If J$ <> "N" Goto L_1580
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1460
!TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1580
!K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1460
!L_1700: Rem ============= SELECT ZONE(S)
!Print @0,4;'CE';"ENTER ZONE TO PRINT OR <CR> FOR ALL ZONES THAT SHIP FOR THIS DATE ";
!Input ""ZONE$
!If ZONE$[1,2] = "  " Or ZONE$ = "" Goto L_1770
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Search #2,2,1;K1$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!If E
!  Print @0,5;'RB CE';"ZONE NOT ON FILE!"
!  Signal 3,20
!  Print @0,5;'CL';
!  Goto L_1700
!End If 
!ZONE$ = K1$
!Gosub L_1840 \ Goto L_2180
!L_1770: Rem =============== SORT THE ZONES THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1790: Rem "thru file
!If P61$[34,34] <> "Y"
!  Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1950
!  Mat Read #2,V1,36;T2$;
!  If T2$[F,F] <> "Y" Goto L_1790
!  ZONE$ = K1$
!Else 
!  Search #3,3,1;K1$,V1,E \ If E = 2 Goto L_1950
!  !If E Gosub ERR_SEARCH
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1950
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WHSE Goto L_1790
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1790
!  X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ If errFlag = 1 let X2 = 999999
!  If X2 > JDATE Goto L_1790
!  V1 = H0[2]
!  Mat Read #4,V1,126;S2$;
!  ZONE$ = S2$[19,20]
!End If 
!Gosub L_1840 \ Goto L_1790
!L_1840: Rem INSERT SELECTED ZONE INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "}",ZONE$
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return    
!L_1880: Rem ================ PROMPT FOR ORDERS BEEN PRINTED
!Print @0,22;'CE';"ENTER STARTING BIN LOCATION  <CR> FOR ALL ";
!Input ""STBIN$
!If STBIN$ = "" Let STBIN$ = " ",STBIN$ \ LSTBIN$ = "~",LSTBIN$ \ Goto L_1920
!Print @0,23;"ENTER ENDING  BIN LOCATION  <CR> FOR LAST ";
!Input ""LSTBIN$
!If LSTBIN$ = "" Let LSTBIN$ = "~",LSTBIN$
!If Len(STBIN$) < 6 Let STBIN$[Len(STBIN$) + 1,6] = SPACES$[Len(STBIN$) + 1,6]
!If Len(LSTBIN$) < 6 Let LSTBIN$[Len(LSTBIN$) + 1,6] = SPACES$[Len(LSTBIN$) + 1,6]
!L_1920: STATUS = 2 \ If P9$[45,45] = "Y" Return 
!L_1925: Print @0,22;'CE';"HAVE THE ORDERS BEEN PRINTED? (Y/N)  ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1925
!STATUS = 1 \ If J$ = "Y" Let STATUS = 2
!Return 
!L_1950: Rem ============ DISPLAY THE ZONES THAT SHIP
!Print @0,4;'CE';"THE FOLLOWING ZONES SHIP ON";WEEKDAY_$
!K1$ = "}" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_2070
!  If K1$[1,1] <> "}" Goto L_2070
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_2070
!  If I = 20 Let I = 5
!Next I
!L_2070: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_2180
!If J$ <> "N" Goto L_2070
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1950
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1950
L_2180: Rem ============ FINISHED SELECTIONS
!Gosub L_1880
!Print @0,22;'CL';"SORTING....PLEASE WAIT...";
K1$ = " ",K1$;K1$[1,2] = STATUS Using "##"
L_2310: Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_3000
X2 = K1$[1,2] \ If X2 <> STATUS Goto L_3000
Mat Read #3,V1,0;H0; \ Mat Read #3,V1,78;H4; \ Mat Read #3,V1,104;H5;
Mat Read #8,H0[3],8;T2;
Gosub L_5110
If Not(SW[6]) And N9[0] Goto L_2310
If H5[7] = 2 Or H5[7] = 5 Or H5[7] = 7 or h5[7]=9 Goto L_2310
If H4[2] <> WHSE Goto L_2310
If H5[7] = 21 Or H5[7] = 22 Goto L_2310
If custom_customer$="RUTHERFORD" IF H5[7]=29 GOTO l_2310
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7820 \ If errFlag = 1 let X2 = 0
JWDATE = X2
If JWDATE > JDATE Goto L_2310
Mat Read #4,H0[2],8;S1$;
If S9[0] = 1 If S1$[118,118] <> "2" Let S1$[118,118] = "1"
S9[1] = S1$[118,118] \ If S9[1] <> S9[0] Goto L_2310
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
K3$ = " ",K3$;K3$ = "}",S2$[19,20]
Search #9,2,1;K3$,V2,E !\ If E > 1 Gosub ERR_SEARCH
If E Goto L_2310
! TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
! Search #9,2,1;TRUCK$,V2,E !\ If E > 1 Gosub ERR_SEARCH
! If E Goto L_2310
if s5 < begTruck or s5 > endTruck goto L_2310
J$ = " ",J$;J$ = H0[7] Using "######"
L_2520: Search #5,3,1;J$,R5,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2310
If J$[1,6] <> K1$[3,8] Goto L_2310
If (H5[7] = 21 Or H5[7] = 22) And J$[7,9] = "   " Goto L_2520
Mat Read #5,R5,8;L3;
Mat Read #5,R5,80;L6$;
Mat Read #5,R5,140;L1$;
Mat Read #5,R5,256;S2;
If S2[0] = 3 Or L3[2] > 900 Goto L_2520
If Not(L3[0]) And L3[1] = 0 And H5[7] = 2 Goto L_2520
Mat Read #5,R5,16;L4;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
MAT  READ #5,R5,446;EUN;
MAT  READ #5,R5,452;UNF;
L7[2] = L7[2] - L7[3]
IF CUSTOM_CUSTOMER$="PCS"
	! IF L7[4]<1 GOTO L_2520 !"nothing to ship - remmed out for PCS
	IF NOT(PRBKORDQTY) AND L7[2]<=0 GOTO L_2520 !CHECK IF anything TO SHIP ! "if not prbkordqty" custom code for pcs
ELSE
	If L7[4] < 1 Goto L_2520
	If L7[2] <= 0 Goto L_2520
ENDIF
If L3[0] Let A$[127,132] = " NONSK";LOC$ = " NONSK";A$[140,151] = L1$[1,12] \ Goto L_2723
Mat Read #6,L4,0;A$;
Mat Read #6,L4,256;A; \ Mat Read #6,L4,460;A1;
Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
If P9$[33,33] = "Y" Gosub L_4500 Else Let W3[0] = 0
Gosub L_2830
IF CUSTOM_CUSTOMER$="ATHENS"
	LET LOC$=binLOC$[1,6],"" !"truncate if need be
Else
	If Len(LOC$) > 6 Let LOC$ = LOC$[1,6],""
Endif
L_2723: If LOC$[1,6] < STBIN$[1,6] Goto L_2820
If LOC$[1,6] > LSTBIN$[1,6] Goto L_2820
J4$ = " ",J4$;J4$[1,2] = "  ";J4$[3,8] = LOC$[1,6]
J4$[9,20] = A$[140,151]
J4$[21,22] = S2$[19,20]
J4$[23,28] = H0[7] Using "######"
J4$[29,33] = R5 Using "#####"
if custom_customer$="ATHENS"
	let j4$[35,40]=first_loc$[1,6]     !"2nd bin location
Endif
Search #9,4,1;J4$,V1,E !\ If E Gosub ERR_SEARCH
Z$ = "~",S2$[19,20];RZ = 0
Search #9,4,1;Z$,RZ,E !\ If E > 1 Gosub ERR_SEARCH
L_2820: Goto L_2520
L_2830: Rem GET NON-RASL LOCATION; IF NOT FOUND CHECK PRODWHSE LOC; OTHERWISE PROD
If custom_customer$="ATHENS" goto ATHLOC
LOC$ = " ",LOC$
K6$ = " ",K6$;K6$[1,12] = A$[140,151];K6$[13] = WHSE Using "##"
LOC_LOOP: !
Search #13,3,1;K6$,R14,E
LET WHSENO=K6$[13,14]   
If E = 2 Or K6$[1,12] <> A$[140,151] OR WHSENO<> WHSE Goto L_2900
!If E Gosub ERR_SEARCH
MAT  READ #13,R14,18;PL1;       
IF PL1[1]=1 
   LET LOC$=k6$[15,20]
   GOTO L_2900
endif
goto loc_loop:
Return 
ATHLOC: ! athens custom
LET K6$=" ",K6$;FIRST_LOC$=" ",FIRST_LOC$                        
LET BINLOC$=" ",BINLOC$                                            
LET SECOND_LOC$=" ",SECOND_LOC$    
IF PRNTKITFLAG                 
   LET K6$[1,12]=KL$[13,24]  
ELSE                           
   LET K6$[1,12]=A$[140,151]                                         
ENDIF
GET_LOCATION: REM                                                  
SEARCH #13,3,1;K6$,R14,E                                          
LET PLOC$=" ",PLOC$                                                
IF E GOTO END_GET_PROD_LOCATION:      ! was e=2                           
!IF E GOSUB ERR_SEARCH:                                             
IF K6$[1,12]<>A$[140,151] GOTO END_GET_PROD_LOCATION:             
LET WHSENO=K6$[13,14]                                             
IF WHSENO<>whse GOTO GET_LOCATION:                                
MAT  READ #13,R14,0;PLOC$;                                         
MAT  READ #13,R14,18;PL1;                                          
IF FIRST_LOC$[1,6]="      " 
   LET FIRST_LOC$[1,6]=PLOC$[13,18] 
else
   IF SECOND_LOC$[1,6]="      " LET SECOND_LOC$[1,6]=PLOC$[13,18]            
endif
IF PL1[1]=1                                                               
IF BINLOC$[1,6]="      " LET BINLOC$[1,6]=PLOC$[13,18]                    
ENDIF                                                                     
GOTO GET_LOCATION:                                                        
END_GET_PROD_LOCATION: REM                                                
IF BINLOC$[1,6]="      " LET BINLOC$[1,6]=FIRST_LOC$[1,6]                 
IF FIRST_LOC$=BINLOC$                                                     
  IF SECOND_LOC$=BINLOC$                                                    
      LET FIRST_LOC$=" ",FIRST_LOC$                                           
  ELSE                                                                      
      LET FIRST_LOC$=" ",FIRST_LOC$                                           
      LET FIRST_LOC$=SECOND_LOC$                                              
  ENDIF                                                                     
ENDIF                                                                     
RETURN 
L_2900: If P9$[33,33] <> "Y" Goto L_2980
If custom_customer$ <> "CREST"   !! task 42673
	if Not(W3[0]) Goto L_2980
endif
L_2930: If LOC$[1,1] = " " Let LOC$ = LOC$[2] \ Goto L_2930
If Len(LOC$) Return 
L_2960: If LOC$[1,1] = " " Let LOC$ = LOC$[2] \ Goto L_2960
If Len(LOC$) Return 
L_2980: LOC$ = "STOCK "
Return 
L_3000:! Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If j8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
J1 = 90;J2 = 0;K1$ = " ",K1$;PLOC$=" ",PLOC$
J4$ = " ",J4$
L_3050: Search #9,3,1;K1$,R1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If K1$[1,1] >= "{" Goto L_9100
if custom_customer$="ATHENS"
	IF J4$[1,20]=spaces$[1,20] LET J4$=K1$ ! "sort break field
Else
	If J4$[1,6] = "      " Let J4$ = K1$
Endif
IF CUSTOM_CUSTOMER$="PCS"
	IF PLOC$=" " LET PLOC$[1,6]=K1$[3,8]	! " custom for PCS
	LET LOC$=" ",LOC$;LOC$[1,6]=K1$[3,8]	! " custom for pcs
	IF SORTNUM IF PLOC$[1,SORTNUM]<>LOC$[1,SORTNUM] LET J1=99;PLOC$[1,6]=LOC$[1,6]! custom for pcs
ENDIF
If K1$[9,20] <> J4$[9,20] Gosub L_5000
J4$ = K1$
L_3110: Mat Read #3,R1,0;H0;
Mat Read #3,R1,78;H4;
MAT READ #3,R1,446;P0$; ! 94748 - White custom
Mat Read #4,H0[2],8;S1$;
S1$[118,118] = "2" \ Mat Write #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
R4 = K1$[29,33]
Mat Read #5,R4,8;L3;
Mat Read #5,R4,16;L4;
If L7[3] If L7[4] = L7[2] Let L7[4] = L7[4] - L7[3]
Mat Read #5,R4,56;L6;
Mat Read #5,R4,80;L6$;
Mat Read #5,R4,250;UN;
Mat Read #5,R4,256;S2;
Mat Read #5,R4,140;L1$; \ Mat Read #5,R4,168;L7;
MAT READ #5,R4,370;S3$;
MAT  READ #5,R4,446;EUN;
MAT  READ #5,R4,452;UNF;
L7[2] = L7[4]
If F9 Let L7[2] = L9[1]
! If L3[0] Let PFU1[0] = UN[0];PFU1[8] = UN[0];A$[140,151] = L1$[1,12] \ Goto L_3310
IF L3[0]  !"n/s - added for athens - use for everyone?
   GOSUB L_30000:
   LET CNVTU[0]=0;CNVTU[1]=PFU1[9];CNVTU[2]=1;CNVTA=L7[4]                      
   GOSUB L_20000: \ LET L7[2]=AMOUNT ! "to stocking u/m into qty ord. variable 
   GOTO L_3310: ! "non stock dflts
ENDIF
Mat Read #6,L4,0;A$; \ Mat Read #6,L4,256;A;
Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[4]
Gosub L_20000 \ L7[2] = AMOUNT
L_3310: Gosub L_8100
Gosub L_5800 ! headings
If PRODINFO Gosub L_5400 ! product info- 
Gosub L_5200 ! order line detail
Gosub L_3400 ! add to totals
If Not(F9) Goto L_3050
L7[2] = L9[1]
If Not(L7[2]) Goto L_3050
Goto L_3110
L_3400: Rem TOTALS CALC
For X = 1 To 10 Step 2
  T9[X] = T9[X] + L7[2]
  If A1[3] Let T9[X + 1] = T9[X + 1] + (L6[2] * L7[2]) / A1[3]
Next X
TBASE = TBASE + L7[4]
Return 
Gosub L_4400
If (J1 + 5) > J7 Let J1 = 90
Gosub L_5800
Print #0;" "
Print #0; Using "--------.## (STOCK) "; Tab 8;T9[1];
Print #0; Using "#####.### (CFT) ";T9[2];
Print #0; Using "###";"** TRUCK # ";S5;" TOTALS **"
T9[1] = 0 \ T9[2] = 0
Print #0;""
Print #0;"PICKER __________________";
Print #0; Using "#######"; Tab 50;"PALLETS: ";T9[11]
Print #0;"" \ Print #0;"LOADER __________________"
T9[11] = 0 \ J4$ = K1$
J1 = 90
Return 
Goto L_4230
X4 = J4$[9,12] \ X4 = 9000 - X4
Gosub L_5800
Print #0; Using "--------.## (STOCK) "; Tab 8;T9[3];
Print #0; Using "#####.### (CFT) ";T9[4];
Print #0; Using "####"; Tab 30;"STOP TOTAL ";X4
Print #0;" " \ J1 = J1 + 1
L_4230: J4$[9,12] = K1$[9,12]
T9[3] = 0 \ T9[4] = 0
Return 
L_4300: Rem "============================================= ZONE TOTALS
Gosub L_5000
Print #0;" " \ J1 = J1 + 1
Gosub L_5800
Print #0; Using "--------.## (STOCK) "; Tab 8;T9[7];
Print #0; Using "#####.### (CFT) ";T9[8];
Print #0;"  ** TOTALS FOR ALL ZONES **"
Return 
L_4400: Rem "=============================================== PALLET TOTALS
T9[11] = T9[11] + 1
Return 
If Not(T9[9] + T9[10]) Return 
Gosub L_5800
K7$ = " ",K7$
Print #0;" " \ J1 = J1 + 1
Gosub L_5800
Print #0; Using "--------.## (STOCK) "; Tab 8;T9[9];
Print #0; Using "#####.### (CFT) ";T9[10];
Print #0;"*** PALLET TOTAL *** "
Print #0;" " \ J1 = J1 + 1
T9[11] = T9[11] + 1
T9[9] = 0 \ T9[10] = 0
Return 
L_4500: Rem "============================================== WAREHOUSE FILE
K13$ = " ",K13$;K13$[1,12] = A$[140,151]
K13$[13,14] = WHSE Using "##"
Search #12,2,1;K13$,R13,E !\ If E > 1 Gosub ERR_SEARCH
If E Let W3[0] = 0 \ Goto L_4582
Mat Read #12,R13,78;W3;
Mat Read #12,R13,404;W2$;
L_4582: Return 

L_5000: Rem "====================================== PROD TOTAL (detail line)
If Not(TBASE) Goto L_5087
if custom_customer$ <> "CREST" and custom_customer$<>"CUSTOMPLASTICS" Print #0;""

if custom_customer$="CUSTOMPLASTICS"
	X2 = TBASE 
	Gosub L_6400  ! "need to calculate total pick qty.
	
	Print #0; Tab 0;L6$[1,30];
	Print #0; Tab 35;K1$[3,8];
	print #0; tab 44;L1$[1,12];
	PRINT #0; Using "######";TAB 58;X2;
	PRINT #0; TAB 66;CCD$[11,I];
	PRINT #0; USING "#######"; TAB 72;QTYOH;
	goto bypass_customplastics: 
ELSE
	IF CUSTOM_CUSTOMER$="JSPC1000"  ! "JANITORS SUPPLY - TASK61605
		PRINT #0; TAB 20;"****** PRODUCT TOTALS:";
	ELSE
		Print #0; Tab 8;"PRODUCT TOTALS:";
	END IF
END IF

X2 = TBASE 
if CUSTOM_CUSTOMER$="JSPC1000"
	LET PTAB1 = 44
ELSE 
	PTAB1 = 24 
END IF
Gosub L_6400
if CUSTOM_CUSTOMER$ = "JSPC1000" 
	PRINT #0; "  ******";
END IF
IF CUSTOM_CUSTOMER$="PCS"
	PRINT #0;"   ____________________";		! " custom for pcs
ENDIF
if custom_customer$ = "CREST" print #0; " *****";

bypass_customplastics: !
Print #0;" " \ Print #0;" "
J1 = J1 + 2
if custom_customer$ <> "CREST" and custom_customer$<>"CUSTOMPLASTICS"
	j1 = j1 + 1 ! crest skipped blank line
endif
L_5087: PRODINFO = 1
T9[5] = 0;T9[6] = 0;TBASE = 0
Return 
L_5110: Rem UNPACK T2[21] TO N9[x]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_5200: Rem "=================================== print order line detail
if custom_customer$ = "CREST" or CUSTOM_CUSTOMER$="CUSTOMPLASTICS" ! custom plastics
	! no order detail
	! header routine adds the line for this detail
	! (not sure why done that way), so take it back
	let j1 = j1 - 1
	RETURN ! custom - no order line detail
end if
IF RASL
PRINT #0; TAB 1;K1$[3,8];
ENDIF
Print #0; Using "###### ###"; Tab 7;H0[7];L3[2];
if custom_customer$<>"OMAHA" and custom_customer$<>"WHITERIVER"
	If L4[2] Print #0; Using " ######";L4[2];
Endif
if custom_customer$="WHITERIVER" PRINT #0; P0$[1,6];		! " CUSTOM FOR WHITE CCT94748
X2 = L7[4];PTAB1 = 24 \ Gosub L_6400
Print #0; Tab 40;S1$[1,30];
Print #0; Tab 72;K1$[21,22]
IF CUSTOM_CUSTOMER$="PCS"
	IF PRBKORDQTY AND L7[3] ! there is a quantity backordered ! " cct68561-pcs
		LET X2=L7[3]
		GOSUB L_6400
		PRINT #0; TAB(40);"*** QUANTITY BACKORDERED ***\215\"
		LET J1=J1+2
	ENDIF
ENDIF
Return 
L_5400: Rem "============================== PRINT PROD INFO
If P9$[33,33] = "Y" And Not(L3[0]) Gosub L_4500 Else Let W3[0] = 0
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = W3[0] \ Gosub L_20000
QTYOH = AMOUNT
IF CUSTOM_CUSTOMER$="CUSTOMPLASTICS" RETURN  ! "JUST NEED CALC FOR QTYOH
J1 = J1 + 2
if custom_customer$ = "CREST"
	Print #0; Tab 1;K1$[3,8];" ";A$[93,112];"  ";L6$[1,30]
else
	Print #0; Tab 1;K1$[3,8];" ";L1$[1,12];"  ";L6$[1,30];
	Print #0; Using "QOH:------#.## "; Tab 60;QTYOH
end if
if custom_customer$="ATHENS"
	if k1$[35,36]<>"  " and k1$[35,35]<>""   
	   print #0; tab 1;k1$[35,40];           
	endif  
Endif
if custom_customer$ = "CREST"
	Print #0; Tab 30;L6$[31,60]
else
	Print #0; Tab 22;L6$[31,60]
end if
IF custom_customer$="ATHENS" OR custom_customer$="ARDS3455" and L1$[14,16]="KIT" GOSUB L_7500:
PRODINFO = 0
Return 
L_5800: Rem "========================================= HEADINGS ROUTINE
J1 = J1 + 1 \ If J1 < J7 Return 
!If J2 If j8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(j8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(j8) Print #0;"\15\";
Print #0;"-MX202G- ";ARDATE$; Tab (44 - Len(CNAME$) / 2);CNAME$; Tab 70;"PAGE";J2
Print #0;Msc$(3);
Print #0; Tab 30;"GANG PICKING LIST FOR ";DELV_DATE$;WEEKDAY_$
Z$ = "~" \ Search #9,3,1;Z$,RZ,E \ If E Or Z$[1,1] <> "~" Goto L_5849
L_5842: H3$ = " ",H3$;H3$[1,9] = "FOR ZONES";H3$[11,12] = Z$[2,3];I = 12
L_5843: Search #9,3,1;Z$,RZ,E \ If E Or Z$[1,1] <> "~" Goto L_5849
If I > 77 Print #0;H3$ \ J1 = J1 + 1 \ Goto L_5842
I = I + 1;H3$[I,I] = ","
If Z$[2,2] = " " Let I = I + 1 \ H3$[I,I] = Z$[3,3]
If Z$[2,2] <> " " Let I = I + 2 \ H3$[I - 1,I] = Z$[2,3]
Goto L_5843
L_5849: Print #0; Tab (40 - I / 2);H3$
if custom_customer$ = "CUSTOMPLASTICS"
	print #0;""
	print #0; tab 0;"DESCRIPTION";
	print #0; tab 35;"BIN";
	PRINT #0; TAB 44;"ITEM NUMBER";
	PRINT #0; TAB 60;"PICK QTY";
	PRINT #0; TAB 76;"QOH";
else
	Print #0;"BIN";
	Print #0; Tab 8;"PRODUCT CODE  DESCRIPTION"
	Print #0; Tab 7;"ORDER #/LINE/PO# ";
	Print #0; Tab 25;"QUANTITY       SHIP TO";
	if custom_customer$ <> "CREST" Print #0; Tab 70;"ZONE";
end if
print #0;""
if custom_customer$="CUSTOMPLASTICS"
	PRINT #0; DASH$[1,80]
ELSE
	Print #0;DASH$[1,75]
ENDIF
LET J1=J1+1
PRODINFO = 1
Return 
L_6400: Rem "================================== UNIT BREAK DOWN
J5 = 0
IF CUSTOM_CUSTOMER$<>"CUSTOMPLASTICS" Print #0; Tab PTAB1;" ";
! If L3[0] Goto L_6475
IF L3[0]  !"n/s - added by athens
   LET CNVTU[0]=0;CNVTU[1]=PFU1[9];CNVTU[2]=1;CNVTA=X2                      
   GOSUB L_20000: \ LET X2=AMOUNT ! "to stocking u/m into qty ord. variable 
   GOTO L_6475: 
ENDIF
For X = 1 To 7 \ If PFU1[8] = PFU1[X] Goto L_6450
Next X
If PFU1[8] = PFU1[0] Goto L_6475
Print #0;"STOCKING UNIT CONVERSION ERROR!" \ Goto L_6482
L_6450: If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
For X = 7 To 1 Step -1
  If Not(X2) Goto L_6482
  If X = 7 Print #0;"("; \ J5 = 1
  If PFU2[X - 1] If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
Next X
If PFU1[0] = -1 Let CCD$ = " ",CCD$;CCD$[11,14] = "CWT " \ Goto L_6477
If PFU1[0] = -2 Let CCD$ = " ",CCD$;CCD$[11,14] = "LOT " \ Goto L_6477
If PFU1[0] = -3 Let CCD$ = " ",CCD$;CCD$[11,14] = "LB  " \ Goto L_6477
L_6475: ! If PFU1[0] Mat Read #10,PFU1[0],0;CCD$; Else Mat Read #10,1,0;CCD$;
IF L3[0] !"n/s selling u/m
   IF PFU1[9] MAT  READ #10,PFU1[9],0;CCD$; ELSE  MAT  READ #10,1,0;CCD$;
ELSE
   IF PFU1[0] MAT  READ #10,PFU1[0],0;CCD$; ELSE  MAT  READ #10,1,0;CCD$;
ENDIF
L_6477: I = 14;Q$ = X2;Q$ = Q$[2,Len(Q$) - 1],""
L_6478: If CCD$[I,I] = " " And I > 11 Let I = I - 1 \ Goto L_6478
IF CUSTOM_CUSTOMER$="CUSTOMPLASTICS" RETURN ! "CUSTOM PLASTICS - PRINTS IN L_5400
If X2 Print #0; Using "####";X2;" ";CCD$[11,I];
L_6482: If J5 Print #0;")";
Return 
L_6490: Rem  "================== print a break
Mat Read #10,PFU1[X],0;CCD$;
If CCD$[10,10] = "*" Goto L_6540
I = 14;Q$ = Int(X2 / PFU2[X - 1]);Q$ = Q$[2,Len(Q$) - 1];X3 = Q$
L_6510: If I > 11 If CCD$[I,I] = " " Let I = I - 1 \ Goto L_6510
Print #0; Using "####";X3;" ";CCD$[11,I];
If J5 Print #0;"  ";
X2 = X2 - (Int(X2 / PFU2[X - 1]) * PFU2[X - 1])
L_6540: Return 
L_6900: Rem "=================================== DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
Return 
!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!L_7145: For j8 = 1 To Len(J9$)
!  If J9$[j8,j8] >= " " If J9$[j8,j8] <= "~" Next j8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!L_7185: J9 = 0;J9[1] = 0 \ For j8 = 1 To Len(J9$)
!  If J0 = 4 If j8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If j8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[j8,j8] > "/" If J9$[j8,j8] < ":" Goto L_7230
!  If J9$[j8,j8] = " " Goto L_7235
!  If j8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[j8,j8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[j8,j8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next j8
!If J0 = 5 Goto L_7265
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
errFlag = 0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1!Return 
X2 = X$[1,5] \ Return !1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return

Print_kit: ! "=================================== print kit line    
let prnt2nln=0                                                  
let prntkitflag=0;TABS[0]=35                                               
IF KL1[5]=-2 GOTO L_5115: ! "message line                       
PRINT #0; USING "#####.##"; TAB 9;KL3[1];SUNIT$[1,4];           
L_5115: !                                                       
PRINT #0;TAB 22;KL$[13,24]; ! "print item code? and where       
PRINT #0; TAB tabs[0];A$[9,38];                                 
PRINT #0;"" \ LET j1=j+1                                 
IF KL1[5]<>-2                                                   
   let prntkitflag=1                                            
   GOSUB L_2830:                                           
   PRINT #0;TAB 9;BINLOC$[1,6];" ";FIRST_LOC$[1,6];             
endif                                                           
IF A$[63,63]<>" " IF A$[63,63]<>""                              
   PRINT #0; TAB tabs[0];A$[63,92];                             
   let prnt2nln=1                                               
endif                                                           
if prntkitflag or prnt2nln                                      
  PRINT #0;"" \ LET j1=j1+1                              
endif 
return

READ_PROD: REM "======================== read product record       
MAT  READ #6,R[6],0;A$;                                            
MAT  READ #6,R[6],156;B;                                           
MAT  READ #6,R[6],256;A;                                           
MAT  READ #6,R[6],512;PFU1;                                        
MAT  READ #6,R[6],554;PFU2;                                        
MAT  READ #6,R[6],684;U3$;                                         
MAT  READ #6,R[6],744;PRODA1$;                                     
MAT  READ #6,R[6],834;A3;                                          
MAT  READ #6,R[6],944;PRA2$;                                       
return

L_7500: ! "================ print kit line detail (qty/um/code/desc)           
! "This routine will print out kit detail under the master kit line            
! " the units of measure are as entered on that kit line.                      
IF L7[4]=0 RETURN  ! "if no qty, would be no kits                              
LET K19$=" ",K19$;K19$[1,6]=H0[7] USING "######";K19$[7,9]=L3[2] USING "###"   
L_7520: SEARCH #17,3,1;K19$,r19,E \ IF E RETURN                              
LET X2=K19$[1,6];LN=K19$[7,9] \ IF X2<>H0[7] OR LN<>L3[2] RETURN               
MAT  READ #17,R19;KL$;                                                       
MAT  READ #17,R19,58;KL1;                                                    
MAT  READ #17,R19,70;KL2;                                                    
MAT  READ #17,R19,78;KL3;                                                    
IF KL1[5]<>-2 IF KL3[1]=0 GOTO L_7520: ! "no qty to print                      
IF KL1[5]=-2 LET A$=" ",A$;A$[9,38]=KL$[29,58] \ GOTO L_7610: ! "message       
LET K6$=" ",K6$;K6$=KL$[13,24]                                                 
SEARCH #6,2,1;K6$,L4,E \ IF E GOTO L_7520:                                     
LET R[6]=L4;SW[7]=0 \ GOSUB Read_Prod: ! "can't do integrity check!!           
! NEED QTY CONVERT                                                             
LET CNVTA=KL3[1];CNVTU[0]=0;CNVTU[1]=KL1[4];CNVTU[2]=1                         
IF A$[152,155]="MACH" OR A$[152,155]="TIME" OR A$[152,155]="LABR" LET CNVTU[2]=5
LET L3[0]=0 \ GOSUB L_20000:                                   
LET KL3[1]=AMOUNT;SUNIT$="    "                                
IF KL1[4]>0 READ #10,KL1[4],10;SUNIT$;                         
L_7610: !             
GOSUB Print_kit: ! "print line                                 
GOTO L_7520: ! "next?
L_8100: Rem "==================== CALCULATE PALLET TOTAL
F9 = 0
Return 
If L6[2] > 75 Goto L_8200
If Not(A1[3]) Let A1[3] = 1
If T9[10] + ((L7[2] * L6[2]) / A1[3]) < 75 Return 
If Not(T9[10]) If L7[2] = 1 Return 
If L7[2] = 1 If T9[10] Goto L_8150
If T9[10] >= 60 Goto L_8150
L9 = Int((75 - T9[10]) / L6[2])
If Not(L9) Goto L_8150
F9 = 99
L9[1] = L7[2] - L9 \ L7[2] = L9
Return 
L_8150: R9 = R1;R9[1] = R4;M8$ = K1$;R9[2] = L7[2];R9[3] = L7[3]
R9[3] = L6[2]
Gosub L_4400
K1$ = M8$;R1 = R9;R4 = R9[1];L7[2] = R9[2];L6[2] = R9[3]
Goto L_8100
L_8200: F9 = 0
If Not(L7[2]) Return 
L9[1] = L7[2] - 1 \ L7[2] = 1
F9 = 99
Return 
Open #7,"6/SORTLOC"
K7$ = " ",K7$
L_8520: Search #7,3,1;K7$,R7,E !\ If E > 2 Gosub ERR_SEARCH
If E Return 
Search #7,5,1;K7$,R7,E !\ If E Gosub ERR_SEARCH
Goto L_8520
OUTEND: Rem END
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
   !
 ! External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"202g.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End 
!Print 'CS'
!Chain "MX000C"
L_9100: Rem END OF THIS RANGE
Gosub L_4300
!If j8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
Stop 
PORT_$ = Spc(6) \ PORT_$ = PORT_$[2,Len(PORT_$) - 1]
Read #1,88,912;FILE1$;
L_13040: If FILE1$[Len(FILE1$)] = " " Let FILE1$ = FILE1$[1,Len(FILE1$) - 1] \ Goto L_13040
COUNT = 0 \ Let FILE2$ = FILE1$ To "*" : COUNT !\ If Not(COUNT) Gosub ERR_SEARCH
!Print @0,22;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
FILE1$[COUNT] = PORT_$
Call FindF(FILE1$,FOUND)
If Err 0 Rem
Close #9 \ If Err 0 Gosub ERR_TRAP
If FOUND Kill FILE1$
FILE2$ = "[1:256] ",FILE1$
Build #9,FILE2$
Search #9,0,1;KEY_$,KSIZE,E !\ If E Gosub ERR_SEARCH
REC = 1000 \ Search #9,0,0;KEY_$,REC,E !\ If E Gosub ERR_SEARCH
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
! If L3 Let AMOUNT = CNVTA \ Goto L_20160 ! convert nonstks!
L_20050: If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: REM ===== set n/s units for conversions                
LET A$[140,151]=L1$[1,12]
A$[93,112]=S3$[1,20]
LET A[6]=L6[4];A[5]=UNF[5] \ IF NOT(A[5]) LET A[5]=1;UNF[5]=1    
LET PFU1[0]=EUN[0];PFU1[1]=UN[0]                                
LET PFU1[2]=UN[1];PFU1[3]=UN[2]                                 
LET PFU1[4]=EUN[1]                                              
LET PFU1[5]=0;PFU1[6]=0;PFU1[7]=0                               
LET PFU1[8]=UN[0];PFU1[9]=UN[0];PFU1[10]=EUN[1]                 
LET PFU1[11]=UN[2];PFU1[12]=UN[1];PFU1[13]=UN[0]                
LET PFU1[16]=EUN[0];PFU1[17]=EUN[0];PFU1[18]=UN[0]              
LET PFU1[19]=UN[0]                                              
LET PFU2[0]=UNF[0];PFU2[1]=UNF[1]                               
LET PFU2[2]=UNF[2];PFU2[3]=UNF[3]                               
LET PFU2[4]=0;PFU2[5]=0;PFU2[6]=0                               
FOR X1=1 TO 4                                                   
  FOR X2=0 TO X1-1                                              
	  IF PFU1[X1]=PFU1[X2] LET PFU1[X1]=0;PFU2[X1-1]=0            
  NEXT X2                                                       
NEXT X1                                                         

RETURN
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
stop!!!error
!
include "src/callmainerrnet.inc"
End
!If Spc(8) = 99 ! "escape hit/return back
!  Print 'RB ML';" ";'ML';
!  Return -1
!End If 
!If Spc(8) = 123 ! "record lock
!  Escdis 
!  Window Open @0,0; Size 30,3; Using ""
!  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
!  Signal 3,50
!  Window Close 
!  Escclr 
!  Return -1
!End If 
!Dim 2%
!Window Off 
!Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
!ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
!If ENUM = 157 Let CTERR = Err(8)
!Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
!Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
!Goto ERR_MAIN
!ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
!Dim 2%
!Window Off 
!Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
!ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
!If E = 5 Let CTERR = Err(8)
!Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
!Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
!Goto ERR_MAIN
!ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
!If Spc(8) <> 99 Goto ERR_TRAP
!If Err 0 Rem
!CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
!If Err 0 Gosub ERR_TRAP
!Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
!Input Len 16385;""ABREQ$
!Call String(1,ABREQ$)
!Print @0,Msc(34) - 1;'CL';
!If Err 0 Gosub ERR_ESCAPE
!If ABREQ$ <> "Y"
!  Print 'ML';" ";'ML';
!  Return -1
!End If 
!Goto OUTEND
!ERR_MAIN: Rem "main error handling logic
!If Err 0 Rem
!Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
!PNAME$ = Msc$(4)
!Call String(1,PNAME$)
!POS_ = 1;POS1 = 0
!NAMEPARSE: Rem "get program name from path
!Search PNAME$[POS_],"/",POS1
!If POS1
!  POS_ = (POS_ + POS1)
!  Goto NAMEPARSE
!End If 
!Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
!Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
!Print "TRACE: ";'CL';
!STACKLOOP: Rem "print nesting information
!Print Using "<#####> ";Spc(16);
!If Spc(14) Goto STACKLOOP
!Print 'CR';"************************************"
!Close #0
!Open #0,"errorlog"
!Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
!Close #0
!Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
!PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
!Call String(2,PNAME$)
!System 28,PNAME1$
!Call String(5,PNAME2$)
!PNAME2$ = " ",PNAME2$
!PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
!Call InpBuf(PNAME2$)
!Stop 
Rem {end rtn.error.s}
