! >>> Program 681b
!
! description   I/F Product Label Print
!
! loadsave -w -n 100,10 -o prog/dxport/681b.dl4 src/681b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 17, 2001  13:56:18
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx681b.src (univ2) [kag] {23358}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX681B  PRODUCT LABEL PRINT
Rem COPIED FROM MX104G REK 4/20/92
Rem FORMS:  VALUE FRAGRANCES
!
!________________________________________________ ______________________________________
! 06/11/15 vst task46696 - add custom_customer$ logic -- need to chain 'serp681bzpl.dl4'
!			 for Piedmont
!			- set maximum # of labels check to 20
!
!_________________________________________________________________________________________
!

External Lib "ubsfunc.dl4"
Declare External Sub GetPortDefault
!
Declare Intrinsic Sub FindF,InpBuf,String
!
include "src/inc/fileprtdefault.inc"
!
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2]
Com 2%,B[24],C4[10]
Com 3%,A[33],PFU2[6],CNVTA,AMOUNT,FIELD,BASEX
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim tmp$[800],tmp1$[500]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="~",EndParam$
!
Dim 1%,C2[2],E,F,X,U9,CALC_LP,WHPARC[5],PD1[9]
Dim 2%,C5[1],D3[3],G7,G8,P,R2,V2[1],X1,X2,Q0[1],D9[20],WHBLD[2],W7[14],WHSE,DFWH
Dim 3%,W3[24],WHLV[2],WHMISC[6],A4,PRPARC[3],PF_LOAD2
Dim A$[50],A1$[156],A2$[30],PMASK$[15],P9$[50],P60$[50]
Dim SPROD$[40],EPROD$[40],F$[35],D1$[6],X$[10]
Dim B1$[142],B2$[142],B3$[142],B4$[142],WH$[2],WHPROD$[12],W1$[32],J$[40]
Dim custom_customer$[30]
!
dim prt. as prtdefault
!
! - A2$ = "prog/custom/mx681bc";E = 0
! - Call FindF(A2$,E) \ If Not(E) Goto L_280
! - L_170: Print 'CS';@20,1;"PRODUCT LABELS"
! - Print @30,4;"1) TEXT ONLY"
! - Print @30,5;"2) BAR CODE LABELS"
! - Print @30,10;"SELECT #, E:EXIT   ";
! - Input ""A2$ \ If A2$ = "E" Goto OUTEND
! - X1 = A2$ \ If X1 < 1 Or X1 > 2 Goto L_170
! - If X1 = 2 Chain "MX681BC"
!
L_280: 
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
Mat Read #1,115,40;Q0; \ If Not(Q0[1]) Let Q0[1] = 2

Mat Read #1,115,60;custom_customer$;   
custom_customer$ = RTrim$(UCase$(custom_customer$))  

For J = 2 To 8
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","1728","2784","1744","1696","2288","2352"
!
D1$ = "#####"
PMASK$ = "$$$$$.",D1$[1,Q0[1]]
U9 = 1
P = 0
If Err 0 Let P = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60
If P Let L9 = 22
J8 = P
!
! - Open #77,"../files/cntrl/PRTDFLT"!add dci2
! - Mat Read #77,A4,0;PD1;
! - close #77
! - DFWH = PD1[2] ! default warehouse
!
!
! dx add xport reporting code
DXSetup:
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!

!
If J8 Let e$ = "This report is not available in XML format!" \ error 10000
!
call GetPortDefault(e$,intCO,UserID$,portnum,rec_uac,prt.)
DFWH=prt.wh ! default warehouse
!
call dxget("begprod",SPROD$) \ SPROD$ = UCASE$(SPROD$),Blank$ ! Starting Product
call dxget("endprod",EPROD$) \ EPROD$ = UCASE$(EPROD$),EndParam$ ! Ending Product
call dxget("labels",tmp$) \ if tmp$ = "" let LABELS = 1 else LABELS = tmp$ !Enter Number of Labels For Each Product
call dxget("price",tmp$) \ CALC_LP = tmp$ !  List Price to Print !DROP LIST
call dxget("whse",tmp$) \ if tmp$ = "" let WHSE = DFWH else WHSE = tmp$ ! Warehouse
!  dx end
!
! starting & ending customer
if EPROD$<SPROD$ let e$="Invalid ending product, must be >= starting product!" \ error 10000
!
! # of labels for product
IF custom_customer$="PIEDMONT"
		if LABELS<1 or LABELS>20 let e$="Invalid # of labels for product, must be between 1 and 20!" \ error 10000
else
	if LABELS<1 or LABELS>3 let e$="Invalid # of labels for product, must be between 1 and 3!" \ error 10000
End IF
!
! list price to print
if CALC_LP<0 or CALC_LP>6 let e$="Invalid list price to print, must be between 0 and 6!" \ error 10000
!
! warehouse
if P9$[32,32]<>"Y" let WHSE=0
if WHSE<0 or WHSE>D9[5] let e$="Invalid warehouse, must be between 0 and ",str$(D9[5]),"!" \ error 10000
!
!
! task46696
if custom_customer$="PIEDMONT"
	chain "serp681bzpl.dl4"
end if

If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"681b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

! - Open #77,"PRTDFLT","USERPORT"
! - Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
! - Close #77,#78
! - DFWH = PD1[2]
! - Print 'CS CR'; Tab 25;"PRODUCT LABEL PRINT ";'CR'
! - L_570: Print 'CR MU CL';"ALIGNMENT AID?  (Y/N) ";
! - Input ""F$
! - If F$ = "N" Goto L_630
! - If F$ <> "Y" Goto L_570
! - Gosub L_7500
! - Goto L_570
! - L_630: Print 'CS CR'; Tab 25;"PRODUCT LABEL PRINT"
! - Print 'CR'
! - Print 'CR';"ENTER STARTING CODE, <CR> FOR FIRST,  E: TO EXIT: ";
! - SPROD$ = " ",SPROD$
! - Input ""A$ \ If A$ = "E" Goto OUTEND
! - SPROD$ = A$,"                    "
! - L_1550: Print 'CR CR';"ENTER ENDING   CODE, <CR> FOR LAST,   E: TO EXIT: ";
! - Input ""A2$ \ If A2$ = "E" Goto OUTEND
! - EPROD$ = A2$,"                                                 "
! - If A2$ = "" Let EPROD$ = "~~~~~~~~~~~~"
! - If EPROD$ >= SPROD$ Goto L_1700
! - Print 'RB';"ENDING CODE MUST BE GREATER THAN STARTING CODE ";
! - Signal 3,20
! - Print 'CR MU CL MU MU';
! - Goto L_1550
! - SPROD$ = " ",SPROD$
! - EPROD$ = "~~~~~~~~~~~~"
! - L_1700: Rem # OF LABELS
! - Print 'CR CR';"ENTER NUMBER OF LABELS FOR EACH PRODUCT, <CR> FOR 1 ";
! - Input ""F$
! - If F$ = "" Let F$ = "1"
! - If Len(F$) > 3 Goto L_1700
! - LABELS = F$
! - L_1760: Print 'CR CR';"ENTER LIST PRICE TO PRINT (1-6) OR <CR> FOR NONE: ";
! - Input ""F$ \ If F$ = "E" Goto OUTEND
! - If F$ = "" Let CALC_LP = 0 \ Goto L_1900
! - CALC_LP = F$ \ If CALC_LP < 1 Or CALC_LP > 6 Print 'RB' \ Goto L_1760
! - L_1800: Rem WAREHOUSE
! - If P9$[32,32] <> "Y" Let WHSE = 0 \ Goto L_1900
! - WHSE = 0
! - Print 'CR';"ENTER WAREHOUSE TO PRINT FOR,  0: FOR MAIN, OR  E: TO EXIT: ";'CL';
! - If DFWH < 10 Print Using "#";DFWH;'ML'; Else Print Using "##";DFWH;'2ML';
! - Input Len 16386;""WH$ \ If WH$ = "E" Goto OUTEND
! - If WH$ = "" Let WHSE = DFWH \ Goto L_1840
! - WHSE = WH$
! - L_1840: If WHSE < 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_1800
!
L_1900:
! - Print 'CS CR CR CR';"   PRINTING MAILING LABELS . . .  PLEASE WAIT. ";
! - If L9 < 30 Print 'CS'
! - Signal 3,0
C2 = 0
A$ = " ",A$ \ A$ = SPROD$
Gosub L_8000
Search #2,2,1;A$,R2,V2 
If Not(V2) Goto L_2030
L_2000: 
Search #2,3,1;A$,R2,V2 
If V2 Goto OUTEND
L_2030: 
If A$[1,12] > EPROD$[1,12] Goto OUTEND
Gosub L_3000
If CALC_LP Gosub L_3500 Else Let LP = 0
For C1 = 1 To LABELS
  C2 = C2 + 1
  If C2 > U9 Gosub L_5140
  C3 = ((C2 - 1) * 20 + 1)
  Gosub L_5000
Next C1
Goto L_2000
!
L_3000: Rem "========================================= READ PRODUCT RECORD
Mat Read #2,R2,0;A1$;
Mat Read #2,R2,156;B;
Mat Read #2,R2,256;A;
Mat Read #2,R2,512;PFU1;
Mat Read #2,R2,554;PFU2;
Mat Read #2,R2,894;C4;
Mat Read #2,R2,938;PF_LOAD2;
If WHSE Gosub L_8100
Return 
!
L_3500: Rem "============================ calc list price
LP = 0
If C4[2] = 2 Goto L_3600
If Not(C4[3]) Let X4 = A[19 + CALC_LP] \ Goto L_3540
BASEX = C4[4]
FIELD = CALC_LP + 1
Gosub L_19000
L_3540: 
CNVTU[0] = 0 \ CNVTU[1] = PFU1[12] \ CNVTU[2] = 2 \ CNVTA = X4
Gosub L_20000
LP = AMOUNT
L_3600: Return 
!
L_5000: Rem LOAD BUFFER
B1$[C3,C3 + Len(A1$[140,151])] = A1$[140,151]
B2$[C3,C3 + Len(A1$[9,27])] = A1$[9,27]
B3$[C3,C3 + Len(A1$[63,81])] = A1$[63,81]
B4$[C3,C3 + Len(PMASK$)] = LP Using PMASK$
Return 
!
L_5140: Rem DUMP BUFFER
Print #0;"\15\\15\\15\";
Print #0;B1$[1,60]
Print #0;B2$[1,60]
Print #0;B3$[1,60]
Print #0;B4$[1,60]
Print #0;"\15\\15\";
C2 = 1
Gosub L_8000
Return 
!
! - L_7500: Rem ALIGNMENT AID
! - Print #0;"\15\\15\\15\";
! - For X1 = 1 To 1
! -   For X3 = 1 To 3
! -     For X2 = 1 To U9
! -       Print #0; Tab ((X2 - 1) * 20);"XXXXXXXXXXXXXXXXXXX";
! -     Next X2
! -     Print #0;" "
! -   Next X3
! - Next X1
! - Print #0;"\15\\15\\15\";
! - Return 
!
L_8000: Rem CLEAR BUFFER
B1$ = " ",B1$
B2$ = " ",B2$
B3$ = " ",B3$
B4$ = " ",B4$
Return 
!
L_8100: Rem GET WHSE INFO
WHPROD$[1,12] = A1$[140,151]
WHBLD[0] = 5 \ WHBLD[1] = WHSE \ HBLD[2] = 0
Call "GETWHSE.dl4",WHPROD$,WHBLD[],W1$,W3[],WHPARC[],WHLV[],W7[],WHMISC[],E,e$,rstr$
If P9$[32,32] = "Y" Gosub L_69000
B[8] = W3[17];B[10] = W3[16]
C4[4] = W3[18];PF_LOAD2 = W3[14]
B[21] = W3[15]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
! - L_9100: Rem NO MORE
! - Gosub L_5140
! - If L9 > 30 Goto L_9150
! - Input "\15\PRESS <CR> TO EXIT "A$
! - L_9150: Rem CLOSE ROUTINE
! - Goto OUTEND
! 
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG ! - \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
OUTEND: Rem EXIT ROUTINE
gosub L_5140
! dx close
! - If j8 ! dx xml
! -   Call addtostr(e$,rstr$,esdel$) !end section
! -   Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
! - End If
!
End 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
!  
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
