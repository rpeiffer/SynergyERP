! >>> Program 401b
!
! description End of Period
! loadsave -w -n 100,10 -o prog/dxport/401b.dl4 src/401b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"



Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 19, 2008  12:38:23
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/nelson.r9/mx401b.src (univ2) [jcs] {21279}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,JulianToDate,String,Time,VerifyDate
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Rem MX401B   END-OF-YEAR RUN called from eom
Rem  AUTHOR:  G.DOSCHER  6/27/80
Rem
Try
	com 2%,intco,eoy,1%,DEBUG
	com rstr$[5000],Message$[600]! Enter SPEC1[],MESSAGE$,rstr$ 
	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
	dim xdate$[50]

! If Err 0 Gosub ERR_TRAP
Dim A$[50],A1$[50],F$[30],K6$[60],D$[16],J4$[40],T$[10],U5$[50],X$[10]
Dim KEY2$[60],KEY3$[60],KEY4$[60],KEY5$[60],KEY6$[60],P60$[50],P61$[256]
Dim 1%,S0,X1[115],2%,X2,1%,WHSE,JTL2
Dim 2%,K2,A0,C1,C0[12],DSP3[4],1%,C,E,I,W0,X[31]
Dim 3%,T7[19,5],C5[9],S1[1],S3[5],T8[5],T9[5],A[33],P9[10],WH[20]
Dim 3%,S2[12,2],H1[12,2],W5,P1[12,3],P2[12,2],D0[7],CFIN[8],LPR[4]
Dim 3%,TX0[25],H2[12,3],EB[8],R1,JTL1[13],R2,R30,R31,V1
Dim 1%,FL1[2],FT1[3],DDF
Dim 2%,S9[1],ARDATE,FL2[3],FT2[3],REC
Dim 2%,D8[1],K1,DEPT,D3[1],JARDATE
Dim FLK$[30],FL1$[80],FT1$[72],FTK$[30],K23$[30],SCRATCH$[80],M$[50]
Dim 3%,FL3[8],QTY,FT3[3],C10[5],ROW,XX,TOTREC
Dim 3%,FTRECA,FTRECB,LETTER$[1]
X2 = Spc(5) \ COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
dIM GROUPID$[1]
Dim 3%

 
for ctr=1 to 87 ! channel 88 used for status text file
	Try Close #ctr Else Rem
next ctr

!X2 = Spc(5) \ COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
comp=intco
let statchan=88 ! printer process
F$ = COMP Using "cntrl/cntrl#" \ Open #1,F$
F$ = COMP Using "1/debug401#"
If COMP > 9 Let F$ = COMP Using "1/debug401##"
try close #0 else rem
if debug<>0 !If Err 0 Goto L_100
	Try 
		Call FindF(F$,K)
		if not(k)
			let debug=0
		Else 
			Open #0,F$
		endif
	else
		let debug=0
	end try 
endif
L_150: ! If Err 0 Gosub ERR_TRAP
For K1 = 2 To 24
  Read K2 \ If K2 = -1 Goto L_290
  J2 = Abs(Fra(K2) * 1000) \ If J2 <= 88 Or J2 > Chf(1) - 1 Let J2 = 88
  J1 = Int(Abs(K2))
  Read #1,J2,J1;F$;
  Open #K1,F$
L_290: Next K1
Data "1808","1824","1792","2064","2176","2080","2336","2016","1664","2256","2048"
Data "2304","1648","2400","400","1744","2896","2912","688","1376","1632","0.150","-1"
F$ = "4/PWSALES" + Str$(COMP) \ Open #24,F$
F$ = "4/CSLSALES" + Str$(COMP) \ Open #32,F$
Rem 2-CUSTOMER 3-SALESMAN 4-PRODUCT 5-CUSTSLS 6-TAX CODE
Rem 7-PRDSLS 8-VDPRHIST 9-SALESCURR 10-ENTDBY  11-SREGTOT
Rem 12-SLSMSLS 13-ITEMHIST 14-DIVHIST  15-VENDOR
Rem 16-ARPROOF 17-SPRODWHSE 18-NSSALES 19-SUBSTHIST 20-DIVFLE
Rem 21=LASTPRICE,22=DEPTFLE,23=JSDETL,24=PWSALES,32=cslsales
ROW = 15
!Print @0,ROW;'CE';
!Print @0,ROW;'CL';"PART 10A: ADDITIONAL END OF YEAR PROCESSING.. PLEASE WAIT";
Print #StatChan;"Processing Additional Year End Files "
Mat Read #1,60,50;P60$; \ Mat Read #1,61,0;P61$;
If P61$[19,19] <> "M" And P61$[19,19] <> "Y" And P61$[19,19] <> "N" Let P61$[19,19] = "N"
Read #1,0,112;D8[1];
D8 = 888888 \ Write #1,0,112;D8;
If P60$[9,9] <> "L" Goto L_390
Mat Read #1,88,3008;F$; \ Open #30,F$
Mat Read #1,88,3024;F$; \ Open #31,F$
L_390: Rem.
Mat Read #16,4,0;P9;
Mat Read #1,110,6;WH
Mat Read #1,110,242;S1
S1[1] = S1[1] + WH[12] - WH[13] - WH[14] + WH[15] + WH[16] + WH[17]
S1[1] = S1[1] - WH[4] + WH[11] + P9[2] - WH[9] - WH[5] + WH[6]
Mat Write #1,110,242;S1;
Mat Write #1,110;X1;
For X = 0 To 20 \ WH[X] = 0 \ Next X
For W0 = 0 To Chf(11) - 1
  Mat Write #11,W0,0;WH;
Next W0
For R9 = 0 To 99
  Mat Read #16,(R9 * 10) + 2;P9
  P9[1] = 0;P9[4] = 0;P9[7] = 0
  P9[2] = 0;P9[5] = 0;P9[8] = 0
  Mat Write #16,(R9 * 10) + 2;P9;
  Mat Read #16,(R9 * 10) + 3;P9
  P9[1] = 0;P9[4] = 0;P9[7] = 0
  P9[2] = 0;P9[5] = 0;P9[8] = 0
  Mat Write #16,(R9 * 10) + 3;P9;
  Mat Read #16,(R9 * 10) + 4;P9
  P9[1] = 0
  P9[2] = 0
  Mat Write #16,(R9 * 10) + 4;P9;
  Mat Read #16,(R9 * 10) + 5;P9
  P9[1] = 0;P9[4] = 0;P9[7] = 0
  P9[2] = 0;P9[5] = 0;P9[8] = 0
  Mat Write #16,(R9 * 10) + 5;P9;
Next R9
For I = 0 To 12 \ For X = 0 To 2
    S2[I,X] = 0
  Next X \ Next I
L_1900: Rem "===================================== itemhist
ROW = ROW + 1 \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(13) - 1
! Print @0,ROW;'CL';"PART 10B: ITEM/NON-STOCK/SUB/VENDOR...WORKING ";
!Print #StatChan;"Processing Item/Non-Stock/Sub/Vendor Files "
Print #StatChan;"Processing Item History Files "
X[0] = 0
A$ = " ",A$
L_1910: Search #13,3,1;A$,R1,E
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2
!	Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E = 2
	Print #StatChan;"Item History File Completed. "
	Goto L_2000
endif
If E Gosub ERR_SEARCH
A1$ = A$
Search #4,2,1;A1$,R2,E
If Not(E) Goto L_1910
If E > 1 Gosub ERR_SEARCH
A1$ = A$
Search #13,5,1;A1$,R2,E
If E Goto L_1910
R2 = R1
Mat Write #13,R2,0;X;
E = 3 \ Search #13,1,0;A1$,R2,E
Goto L_1910
L_2000: Rem done with itemhist
L_2500: Rem "====== non stock sales(2896)
Print #StatChan;"Processing Non-Stock Sales Files "
A$ = " " \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(18) - 1
L_2520: Search #18,3,1;A$,R1,E
XX = XX + 1
! Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E = 2
	Print #StatChan;"Completed Non-Stock Sales Files "
	Goto L_2650
endif
If E Gosub ERR_SEARCH
Search #18,5,1;A$,R1,E
If E Gosub ERR_SEARCH
A1$ = A$[7,26],A$[1,6],A$[27,28]
Search #18,5,2;A1$,R1,E
If E Rem ! "not a critical error
E = 3 \ Search #18,1,0;A$,R1,E
If E Gosub ERR_SEARCH
Goto L_2520
L_2650: Rem "========= substitute history(2912)
Print #StatChan;"Processing Substitute Item History Files "
A$ = " " \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(19) - 1
L_2670: Search #19,3,1;A$,R1,E
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif
If E = 2 
	Print #StatChan;"Substitute Item History Files Completed"
	Goto L_3400
endif
If E Gosub ERR_SEARCH
Search #19,5,1;A$,R1,E
If E Gosub ERR_SEARCH
A1$ = A$[13,24],A$[1,12],A$[25,26]
Search #19,5,2;A1$,R1,E
If E Rem ! "not a critical error
E = 3 \ Search #19,1,0;A$,R1,E
If E Gosub ERR_SEARCH
Goto L_2670
L_3400: Rem   ************ VENDOR FILE ***********
Print #StatChan;"Processing Vendor History Files "
A$ = " ",A$ \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(15) - 1
L_3420: Search #15,3,1;A$,R1,E
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E = 2 
	Print #StatChan;"Vendor History Files Completed "
	Goto L_3000
endif
If E Gosub ERR_SEARCH
If DEBUG
  M$ = " ",M$
  M$ = "Processing Vendor File"
  Mat Write #0,34;M$
  M$ = " ",M$
  M$ = A$
  Mat Write #0,35;M$
End If 
Mat Read #15,R1,448;S1
S1[0] = 0;S1[1] = 0
Mat Write #15,R1,448;S1;
Mat Read #15,R1,510;S1
S1[0] = 0;S1[1] = 0
Mat Write #15,R1,510;S1;
Goto L_3420
L_3000: Rem done with sub hist
If P60$[9,9] <> "L" Goto L_4000
Mat Read #1,52,36;S9; \ If Not(S9) Goto L_4000
Mat Read #1,0,108;ARDATE;
X2 = ARDATE \ Gosub L_7820 \ X2 = 0
If X2 Let JARDATE = X2 Else Gosub L_7650
FLK$ = " ",FLK$ \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(30) - 1
!ROW = ROW + 1
!Print @0,ROW;'CL';"LIFO INVENTORY LOTS..WORKING PLEASE WAIT.";
Print #StatChan;"Processing Lifo Inventory Lot File "
L_3630: Search #30,3,1;FLK$,R30,E
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";Flk$
endif	
If E = 2
	Print #StatChan;"Completed Lifo Inventory Lot File "
	Goto L_4000
endif
If E Gosub ERR_SEARCH
Mat Read #30,R30,0;FL1
Mat Read #30,R30,86;FL2
If DEBUG
  M$ = " ",M$
  M$ = "In Lifo Inventory Lots, 401b "
  Mat Write #0,30;M$
  M$ = " ",M$
  M$ = FLK$
  Mat Write #0,31;M$
End If 
FL2[3] = 0 \ If FL2[1] > JARDATE Goto L_3800
FL2[3] = 99 \ If FL2[2] > JARDATE Goto L_3800
Mat Read #30,R30,102;FL3
If (Int(FL3[0]) - Int(FL3[1])) = 0 Goto L_3950
If (FL3[0] - FL3[1]) < 0 Let FL2[3] = 0 \ Goto L_3800
Gosub L_3900
QTY = Int(FL3[0] - FL3[1])
FT1$ = " ",FT1$
For X9 = 0 To 3 \ FT1[X9] = 0 \ FT2[X9] = 0 \ FT3[X9] = 0 \ Next X9
FT1$[1,12] = FLK$[1,12]
FT1$[41,47] = "* 402 *" \ X$ = ARDATE Using "&&&&&&"
FT1$[53,60] = X$[3,4],"/",X$[5,6],"/",X$[1,2]
FT1$[61,72] = " EOY BALANCE"
FT1[0] = 7 \ If QTY < 0 Let FT1[0] = 30
FT1[1] = FL1[0] \ FT1[2] = Spc(6) \ FT2[0] = FL2[0]
FT2[2] = FL2[1] \ FT3[0] = QTY
FT3[1] = FL3[6] \ FT3[2] = FL3[7]
FTK$ = " ",FTK$
E = 2 \ Search #31,1,0;FTK$,R31,E \ If E Gosub ERR_SEARCH
If R31 <= 999999 Let FT2[1] = R31
Mat Write #31,R31,0;FT1$; \ Mat Write #31,R31,72;FT1;
Mat Write #31,R31,80;FT2; \ Mat Write #31,R31,96;FT3;
FTK$[1,6] = FT2[0] Using "######" \ FTK$[7,12] = FT2[2] Using "######"
If R31 <= 999999
  FTK$[13,18] = FT2[1] Using "######"
Else 
  FTRECA = Int((R31 - 1000000) / 100000)
  FTRECB = Fra(R31 / 100000) * 100000
  Call String(4,FTRECA + 193,LETTER$)
  FTK$[13,13] = LETTER$[1,1]
  FTK$[14,18] = FTRECB Using "#####"
End If 
Search #31,4,1;FTK$,R31,E \ If E Gosub ERR_SEARCH
FL3[0] = 0 \ FL3[1] = 0 \ If QTY > 0 Let FL3[0] = QTY \ FL2[3] = 99 \ Goto L_3800
FL2[3] = 0 \ FL3[1] = Abs(QTY)
L_3800: Rem WRITE OUT BASEYEAR FLAG
Mat Write #30,R30,86;FL2
Mat Write #30,R30,102;FL3;
Goto L_3630
L_3900: Rem DELETE LIFOTRANS
FTK$ = " ",FTK$ \ FTK$[1,6] = R30 Using "######"
L_3910: Search #31,3,1;FTK$,R31,E \ If E = 2 Return 
If E Gosub ERR_SEARCH
R = FTK$[1,6] \ If R <> R30 Return 
Search #31,5,1;FTK$,R31,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #31,1,0;FTK$,R31,E \ If E Gosub ERR_SEARCH
Goto L_3910
L_3950: Rem DELETE FIFOLOT & FIFO TRANS
Gosub L_3900
Search #30,5,1;FLK$,R30,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #30,1,0;FLK$,R30,E \ If E Gosub ERR_SEARCH
Goto L_3630
L_4000: Rem ****** SALES CURRENT YTD SALES MOVE TO LAST YEAR
Print #StatChan;"Processing Sales History Files "
!ROW = ROW + 1
!Print @0,ROW;'CL';"PART 11: MONTHLY SALES...WORKING PLEASE WAIT.";
A$ = " ",A$ \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(9) - 1
L_4060: Search #9,3,1;A$,R1,E
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E = 2 
	Print #StatChan;"Completed Sales History Files "
	Goto L_6000
endif
If E Gosub ERR_SEARCH
Mat Read #9,R1,16;H1
Mat Read #9,R1,256;P2
If DEBUG
  M$ = " ",M$
  M$ = "In Monthly Sales, 401b"
  Mat Write #0,32;M$
  M$ = " ",M$
  M$ = A$
  Mat Write #0,33;M$
End If 
Gosub L_1400
Mat Write #9,R1,16;H1
Mat Write #9,R1,256;P2;
Gosub L_4320 \ Goto L_4190
C = 9
V1 = R1
Gosub L_4200
L_4190: Goto L_4060
L_4200: Rem "================== delete 3 dir's
Search #C,5,1;A$,V1,E
If E > 1 Gosub ERR_SEARCH
A1$ = " ",A1$
A1$ = A$[7,18]
A1$[13,18] = A$[1,6]
A1$[19,20] = A$[19,20]
Search #C,5,2;A1$,V1,E
If E > 1 Gosub ERR_SEARCH
E = 3 \ Search #C,1,0;A1$,V1,E
If E Gosub ERR_SEARCH
Return 
L_4320: Rem CHECK FOR ANY SALES
For MT = 1 To 12
  If H1[MT,0] Or H1[MT,1] Or H1[MT,2] Goto L_4380
  If P2[MT,0] Or P2[MT,1] Or P2[MT,2] Goto L_4380
Next MT
Mat Write #9,R1,16;S2;
Mat Write #9,R1,256;S2;
Return 1
L_4380: Rem SALES FOUND
Return 
L_1400: Rem TOTAL ! "move YTD totals to last years  ONLY DONE IN EOY
For I = 0 To 2
  P2[0,I] = 0
  P2[0,I] = H1[0,I]
  H1[0,I] = 0
Next I
Return 
L_6000: Rem "next file here (R10 = Slsmcatgy)
L_6010: Rem "customer / shiplist sales
!ROW = ROW + 1
!Print @0,ROW;'CL';"PART 11A: CSL MONTHLY SALES...WORKING PLEASE WAIT.";
Print #StatChan;"Processing Customer Shiplist Sales History Files "
A$ = " ",A$ \ XX = 0 \ TOTREC = 0 \ TOTREC = Chf(9) - 1
L_6020: Search #32,3,1;A$,R1,E
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E = 2 
	Print #StatChan;"Completed Customer Shiplist Sales History Files "
	Goto L_6100
endif
If E Gosub ERR_SEARCH
Mat Read #32,R1,16;H1
Mat Read #32,R1,256;P2
If DEBUG
  M$ = " ",M$
  M$ = "In CSL Monthly Sales, 401b"
  Mat Write #0,36;M$
  M$ = " ",M$
  M$ = A$
  Mat Write #0,37;M$
End If 
Gosub L_1400
Mat Write #32,R1,16;H1
Mat Write #32,R1,256;P2;
Gosub L_6050 \ Goto L_6030
C = 32
V1 = R1
Gosub L_6040
L_6030: Goto L_6020
L_6040: Rem "================== delete 2 dir's
Search #C,5,1;A$,V1,E
If E > 1 Gosub ERR_SEARCH
A1$ = " ",A1$
A1$ = A$[13,24]
A1$[13,24] = A$[1,12]
A1$[25,26] = A$[25,26]
Search #C,5,2;A1$,V1,E
If E > 1 Gosub ERR_SEARCH
E = 3;V1 = R1 \ Search #C,1,0;A1$,V1,E
If E Gosub ERR_SEARCH
Return 
L_6050: Rem CHECK FOR ANY SALES
For MT = 1 To 12
  If H1[MT,0] Or H1[MT,1] Or H1[MT,2] Goto L_6060
  If P2[MT,0] Or P2[MT,1] Or P2[MT,2] Goto L_6060
Next MT
Mat Write #32,R1,16;S2;
Mat Write #32,R1,256;S2;
Return 1
L_6060: Rem SALES FOUND
Return 
L_6100: Rem "========================== next file here
Goto L_8900
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) \ If E Gosub ERR_SEARCH
ARDATE = X$
Call DateToJulian(1,X$,X$,E) \ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JARDATE = X2
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem "======================= write last eom
Mat Read #1,0,150;D$
Gosub L_8075 \ D$[1,8] = X$[1,8]
Gosub L_8030 \ D$[9,16] = T$[1,8]
Mat Write #1,0,150;D$
Goto OUTEND
L_8030: Rem GET TIME
J4$ = "" \ Call Time(J4$)
T$ = "HH:MM AM"
H1 = J4$[15,16]
T$[4,5] = J4$[18,19]
If H1 = 0 Let H1 = 12 \ Goto L_8070
If H1 = 12 Let T$[7,7] = "P" \ Goto L_8070
If H1 > 12 Let H1 = H1 - 12 \ T$[7,7] = "P"
L_8070: T$[1,2] = H1 Using "##" \ Return 
L_8075: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto L_8115
Next K1
Stop 
L_8115: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
!DISP_STAT: Rem ====================================================
!If TOTREC Print Using "    [ ###% ]";@55,ROW;'CL';(XX / TOTREC * 100)
!If E Print @55,ROW;'CL';"    [ 100% ]"
!Return 
L_8900: Rem "========================================= reset run counters
Try Close #0 Else Rem
F$ = "cntrl/CNTRL0.PROG"
!C2 = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
c2=intco
S1 = 0;F$[12,12] = C2 Using "#"
Call FindF(F$,S1) 
if not (s1) 
	F$ = "cntrl/CNTRL.PROG"
endif
Try
	Open #0,F$
	S0 = 0
	print #statchan;"Resetting Counters "
	For K1 = 10 To 999
		Write #0,K1,34;S0;
	Next K1
else
	print #statchan;"Counters Not Reset "
end try
Goto L_8000

ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
! Call programdump("tmp/mx401b.se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
!Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
!Call AddToStr(e$,rstr$,WebStr$)                            
!Call SetOutPut(e$,rstr$)   
Print #Statchan;e$
Call programdump("tmp/mx401b.se!","")
 error 10000
End                                   

OUTEND: Rem "============================================ done!
S0 = 0
Write #1,1,2;S0;
D8[1] = 999999
Write #1,0,112;D8[1];
Print #StatChan;"End of Year Processing Completed. "
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program