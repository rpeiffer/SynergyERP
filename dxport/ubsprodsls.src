!Program Name: ubsprodsls
! loadsave -w -n 100,10 -o prog/dxport/ubsprodsls.dl4 src/ubsprodsls.src
!                                                  
!Last Updated:                                     

! Include "src/cuvars.inc"

Declare External sub ProdSLS
Declare Sub updatelog,errTrap

Def Struct slsInfo 
  Member mm$[16]
  Member unitsale$[30]
  Member netsale$[30]
  Member costsale$[30]
  Member profit$[30]
  Member gp$[10]
End Def

Dim sls.[100] as slsInfo
Dim 3%

Call prodsls(1,999,1,"files/6/dx.log","999-0124930","1",sls.[],0,ss, 100)
print "done"
stop


External Sub ProdSLS(intCo,intSalesMan,debug,dlog$,prod$,yy,sls.[] as slsInfo,ii ,ss, iLimit)

Try
External Lib "libgeneral.lib"
Declare External Sub SubErr

!External Lib "sffiles.lib"
!Declare External Function getprod

Declare Intrinsic Function FindChannel,Trim$
Declare Intrinsic Sub FormatDate,DXSet
Declare External Function FDate$,PDate$,BaseName$,FMTPhone$,OpenFile
Declare External Sub CalcARs
Declare External Function XAmount, Xunit$, formatdate$
External Lib "ubsfunc.dl4","ubsprconv.dl4"

Include "src/ubsprod.inc"

!include copyright, common libs, common intrinsics
include "src/copyright.inc"
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
dim action$[30],options$[30],userid$[8],b$[200],3%

DEF FNR(X)=SGN(X)*(INT(ABS(X)*100+.5)*.01)
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[1200],tmp$[1200]
Dim PRK$[12],sunit$[4]

Dim PR. As prod
Dim PRS. As ProdSLS

!debug=1 ! test - record all happenings
Dim 1%,debugDetail
! Variables for Channel#'s
Dim 2%,PRC,CTLC,PRS
! Variables for Search Record#
Dim 3%,PRR,PRSR
! Variables for Search Error
Dim 2%,PRE,CSE

Dim Msg$[256],pgmName$[20]
Dim P9$[50],P61$[256]
Dim Temp$[100],Space$[100],SLS$[3],Sales$[30],CO$[2]

Dim QMASK$[20],PMASK$[20],EMASK$[20],DEC$[5] 
Dim Addr2$[30],Addr3$[30]
Dim MONTHDESC$[12,12]

Dim 1%, ARMONTH,BOYMONTH,MM
Dim 2%, ErrStat, X1,X2
Dim 2%, Q0[1]
Dim 3%,ARS[5],Z1[2]

 Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

debugDetail=0 ! 1
pgmName$="ubsprodsls"
msg$[1,50]="-",msg$ \ Call updatelog(debug)               
msg$="start...program "+pgmName$ \ Call updatelog(debug)     

Space$=" ",Space$
ErrStat = 0
ii=0

SLS$=intSalesMan Using "###" ! Passed Salesman
CO$=Str$(intCo) ! Company
msg$="doing...company-"+CO$+" salesman-"+SLS$ \ Call updatelog(debug)

PRC= OpenFile(-1792,intCo) \ If PRC=-1 Error 42    ! prod master
CTLC= OpenFile(-9999,intCo)\ If CTLC=-1 Error 42   ! Control
PRS=OpenFile(-2080,intCo)  \ If PRS=-1 Error 42    ! prodsls
CCC = OpenFile(-1728,intCo) \ If CCC = -1 Error 42  !u/m codes file

! Start Prog.
Read #CTLC,19,50;P9$; ! What is this?
Read #CTLC,61,0;P61$; ! Yet control flag item.
Mat Read #CTLC,0,120;ARMONTH;
Mat Read #CTLC,51,74;BOYMONTH;
Mat Read #CTLC,115,40;Q0;


If not(Q0[1]) let Q0[1]=2                                                 
Let Dec$="#",Dec$;Qmask$="----------#"                                    
If Q0[0] Let Qmask$="----------#.",Dec$[1,Q0[0]]         !qty mask        
If Q0[1] Let Pmask$="------------.##" ! ,Dec$[1,Q0[1]]     !price mask      
Let Emask$="-$$$,$$$,$$$,$$$.##"                         !ext. price mask       


MONTHDESC$[1]="January"
MONTHDESC$[2]="February"
MONTHDESC$[3]="March"
MONTHDESC$[4]="April"
MONTHDESC$[5]="May"
MONTHDESC$[6]="June"
MONTHDESC$[7]="July"
MONTHDESC$[8]="August"
MONTHDESC$[9]="September"
MONTHDESC$[10]="October"
MONTHDESC$[11]="November"
MONTHDESC$[12]="December"



PRK$=PROD$
 ! get product record
!  Call DXGet("keyvar",prod$)
 prod$ = prod$+"            "
 ! prr = getprod(e$,PRC,prod$,PR.)
 Search #PRC,2,1;prod$,R,E
 If Trim$(prod$) <> Trim$(prk$) Let e = 2
 If e = 0                                             
     Read Record #PRC,r;pr.;                           
  Else                                                 
	  r = e * -1                                         
  End If
  PRR=R
 SUnit$=xunit$(pr.pfu1[9],ccc)

If not(prr) Goto PREND:

If debugDetail
   msg$="doing...Search #PRC: PRK$="+prod$+" PRR="+PRR \ Call updatelog(debug)
   If PRE msg$="error...Search error "+PRE  \ Call updatelog(debug)
Endif

PRODSLS: !=============================================================
Read Record #PRS,prr;PRS.;  

   CNVTU[0] = 0  !convert rcd #, 0=base
   CNVTU[1] = PR.Pfu1[9]  ! rcd#,convert um code to record #
   CNVTU[2] = 1  !2= convert cost/price, 1=convert qty
   CNVTA=DOW[0,1]	! 
   X3=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],ctlc,FLAG)


If yy=0 ! curr year
 Let X7=BOYMONTH
 For I=1 to 12                    
  For X6=0 TO 2                                                           
	  mm = X7             
	  z1[X6] = PRS.S1[X7,X6] 
  Next X6 
  ! if i>boymonth let z1[0]=0;z1[1]=0;z1[2]=0
  if x8 Let Z1[0] = 0;Z1[1] = 0;Z1[2] = 0    
  If x7 = armonth x8=1
  !set
   CNVTU[0] = 0  !convert rcd #, 0=base
   CNVTU[1] = PR.Pfu1[9]  ! rcd#,convert um code to record #
   CNVTU[2] = 1  !2= convert cost/price, 1=convert qty
   CNVTA=z1[0]	! 
  sls.[ii].mm$ = monthdesc$[X7] 
  sls.[ii].unitsale$ = LTrim$(XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],ctlc,FLAG) using Qmask$)
  sls.[ii].netsale$  = LTrim$(z1[1] using Pmask$)  
  sls.[ii].costsale$ = LTrim$(z1[2] using Pmask$)    
  sls.[ii].profit$ = LTrim$((z1[1] - z1[2]) using Pmask$)
  sls.[ii].gp$=sunit$  ! we are using this var for now.
  Let ii=ii+1
  Let X7=X7+1 \ If X7=13 Let X7 = 1
 Next I                                       

 !ytd - Present year
 sls.[ii].mm$ = "YTD Total"
   CNVTU[0] = 0  !convert rcd #, 0=base
   CNVTU[1] = PR.Pfu1[9]  ! rcd#,convert um code to record #
   CNVTU[2] = 1  !2= convert cost/price, 1=convert qty
   CNVTA=PRS.S1[0,0]	! 
 sls.[ii].unitsale$ = LTrim$(XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],ctlc,FLAG) using Qmask$)
 sls.[ii].netsale$  = LTrim$(PRS.S1[0,1] using Pmask$)                       
 sls.[ii].costsale$ = LTrim$(PRS.S1[0,2] using Pmask$)                      
 sls.[ii].profit$ = LTrim$((PRS.S1[0,1] - PRS.S1[0,2]) using Pmask$)
 sls.[ii].gp$=sunit$  ! we are using this var for now.
Else  ! yy=1 last year

 Let X7=BOYMONTH;x8=0
  For I=1 to 12                                  
	For X6=0 TO 2                                    
	  mm = X7                                                                   
	  if not(x8)            
		z1[X6] = PRS.S2[mm,X6] 
  	  else                  
		  z1[X6] = PRS.S1[mm,X6] 
	  endif                 
    Next X6  
    !set                                        
	sls.[ii].mm$ = monthdesc$[X7]
	   CNVTU[0] = 0  !convert rcd #, 0=base
	   CNVTU[1] = PR.Pfu1[9]  ! rcd#,convert um code to record #
	   CNVTU[2] = 1  !2= convert cost/price, 1=convert qty
	   CNVTA=z1[0]	! 
	sls.[ii].unitsale$ = LTrim$(XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],ctlc,FLAG) using Qmask$)
	sls.[ii].netsale$  = LTrim$(z1[1] using Pmask$)              
    sls.[ii].costsale$ = LTrim$(z1[2] using Pmask$)            
	sls.[ii].profit$ = LTrim$((z1[1] - z1[2]) using Pmask$)
	sls.[ii].gp$=sunit$  ! we are using this var for now.	
	Let ii=ii+1
	If x7 = armonth Let x8 = 1
	Let X7=X7+1 \ If X7=13 Let X7 = 1
  Next I            
 

 !ytd - last year                                    
 sls.[ii].mm$ = "YTD Total" 
	   CNVTU[0] = 0  !convert rcd #, 0=base
	   CNVTU[1] = PR.Pfu1[9]  ! rcd#,convert um code to record #
	   CNVTU[2] = 1  !2= convert cost/price, 1=convert qty
	   CNVTA=PRS.S2[0,0]	! 
 sls.[ii].unitsale$ = LTrim$(XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],ctlc,FLAG) using Qmask$)
 sls.[ii].netsale$  = LTrim$(PRS.S2[0,1] using Pmask$)                                   
 sls.[ii].costsale$ = LTrim$(PRS.S2[0,2] using Pmask$)                                   
 sls.[ii].profit$ = LTrim$((PRS.S2[0,1] - PRS.S2[0,2]) using Pmask$)
 sls.[ii].gp$=sunit$  ! we are using this var for now.
Endif

PREND: !===============================================================
Close #PRC,#CTLC,#PRS,#CCC
msg$="doing...end of "+pgmName$ \ Call updatelog(debug)
ss=ErrStat
Exit Sub
Else
    ss=SpC(10)
    Call errTrap(pgmName$)
End Try


Sub updatelog(debug)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " " + msg$ + "'' >> " + dlog$
End Sub       


Sub errTrap(pgmName$)
  msg$="error...",Spc(8)," ",Msc$(2)," at ",Str$(Spc(10))," ",pgmName$
  Call updatelog(1)
End Sub
		

End Sub

