! >>> Program 215
! BLOCKID
! description  ASSIGN PICKER TO ORDER
!
! loadsave -w -n 100,10 -o prog/dxport/215.dl4 src/215.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 29, 2003  14:17:41
Rem /w/papermaster/r2002//usr/acct/rgp/work/devl/mx2/mx215.src (univ2) [rgp] {39508}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! custom changes for xrev9 - White River Paper:
!! 03/29/11 vst task#2134 - add stop range option with the truck range
!
! ====================  CUSTOM CODE FOR BUTLER-DEARDEN  =========================
! 02/22/16 vst task54049 - Added option to print labels for Butler-Dearden. User 
!		inputs the # of labels to print - only prints shipping info - no product 
!
!	- additional values are set from the '215' block id:
!		"numberoflbls" - total # of labels to print
!		"numberpieces" - total # of pieces the 'picker' has picked- this # 
!		   is stored in the header record ("NumberPieces - 2% @ disp=620 in ROH)
!       "zebranumber" - # of the zebra printer being used.
!
! ===============================================================================

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
Declare Intrinsic Sub InpBuf,String,Time,DateToJulian
!Option Default Dialect IRIS1
Rem*----------------------------------------------------------------------
Rem*----------------------------------------------------------------------
If Err 0 Gosub ERR_TRAP
Dim FLE$[16],COINFO$[112],TITLE$[60],SYSDATE$[28],KEY_$[50],PB$[50]
Dim 1%,PB,H4[2]
Dim 2%,I,H0[12],S5,D8
Dim 2%,NumberPieces
DIM 3%,R[99]
Dim 4%,J1
Dim X$[90],J$[75],J0$[12],J1$[75],J4$[75],J5$[75],Custom_customer$[30]
dim tmp$[1000],message$[200],webstr$[200],msg$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$

dim line1$[100],line2$[100],CUSTPO$[20],S1$[118]
!

call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Returnstatus=0 ! 0=ok
message$="OK"
Gosub OPENFILES
Mat Read #1,3,0;COINFO$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(Trim$(custom_customer$))
!
! " initialize flags to determine whether or not to update # of pieces and printing labels
update_pieces=0
labelprint=0

Select Case custom_customer$
   Case "BUTLER"
      update_pieces=1
	  labelprint=1
End Select

Gosub DISPLAYSCREEN
STARTHERE: Rem* loop here until user signals an exit
Gosub GETPICKEDBY \ If Not(PB) Goto OUTEND
if custom_customer$="WHITERIVER"
		GOSUB EDT_Truck
		GOSUB EDT_STOP_RANGE
		GOSUB EDT_SHIPDATE
		!GOSUB AssignOrders:
		goto updatepb ! update it
Endif

IF update_pieces
	call dxget("NUMBERPIECES",tmp$)
	numberpieces=tmp$
end if
if labelprint
	call dxget("NUMBEROFLBLS",tmp$)
	let totlabels=tmp$ 		
	call dxget("ZEBRANUMBER",tmp$)
	let printernum=tmp$
	gosub AssignOrders
	if printernum=1		! " 200DPI
		Open #0,"$/usr/ub/sys/sptzebra"
		gosub get_zbclayout_200dpi:
	end if
	if printernum=2		! "300DPI
		Open #0,"$/usr/ub/sys/sptzebra1"
		gosub get_zbclayout_300dpi:
	endif
	gosub labelprint:    !!  print labels here 
else
	GOSUB AssignOrders	
End If

!if custom_customer$="WHITERIVER" ! all others below is remmed
! print @0,22;"CHOOSE P:Process, R:Reselect, E:Exit  ";
! INPUT ""Z$
! IF Z$="E" GOTO OUTEND:         
! IF Z$="R" GOTO StartHere: 
! if Z$="P" goto updatepb:
!Endif
! Goto STARTHERE
OUTEND: Rem* the end - have a nice day!
Gosub CLOSEFILES
! Chain "mx000"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End 
OPENFILES: Rem
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Ropen #2,"4/PICKEDBY" + Str$(COID)
For I = 2 To 4
  Read J1
  If J1 And J1 <> -1
    Read #1,88,Abs(J1);FLE$[1,16];
    If J1 > 0 Open #I,FLE$
    If J1 < 0 Ropen #I,FLE$
  End If 
Next I
Data "-1","1840", "1856"
Return 
CLOSEFILES: Rem
!If Err 0 Rem
For I = 2 To 4
  Try Close #I Else Rem
Next I
! If Err 0 Gosub ERR_TRAP
Return 
DISPLAYSCREEN: Rem
!Call Time(SYSDATE$)
!Print @0,0;'CS';"-MX215-"
!TITLE$ = COINFO$[1,30]
!Print @40 - (Len(TITLE$) / 2),0;'BR';TITLE$;'ER';
!Print @58,0;SYSDATE$
!Print @0,1;"----------------------------------------";
!Print "--------------------------------------";
!TITLE$ = "PICKED BY MAINTENANCE"
!Print @40 - (Len(TITLE$) / 2),2;TITLE$;
!Print @0,3;"----------------------------------------";
!Print "--------------------------------------";
!if custom_customer$="WHITERIVER"
	!	PRINT @3,5;"PICKED BY #......";
	!	PRINT @3,7;"TRUCK #.........."; 
	!	PRINT @3,9;"STARTING STOP #..";
	!	PRINT @3,10;"ENDING STOP #....";
	!	PRINT @3,12;"SHIP DATE........"; 
!Else
!Print @3,5;"PICKED BY #..";
!Print @3,7;"ORDER........";
!Endif
Return 
GETPICKEDBY: Rem
!Print @17,5;'CL';
!J0$ = "3 00031705"
!J1 = 0
!J5$ = "Enter Picked By code to mark orders for, <CR>: Exit."
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call dxget("PKBY",tmp$)
j1=tmp$
PB = J1
If PB = 0 Return 
KEY_$ = PB Using "###"
Search #2,2,1;KEY_$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If E
  returnstatus=1 ! on blockid - 1=no good
  message$="Picked by code is not on file!"
  Goto OutEnd ! GETPICKEDBY
End If 
Mat Read #2,R[2],2;PB$
!J1$ = PB$[1,20]
!Call "trim",J1$
!Print @22,5;'CL';J1$;" ";PB$[21,50]
Return 
edt_truck: !
  !print @17,7;'CL';
  !LET J0$="3000061707"
  !if custom_customer$="WHITERIVER" LET J0$="3000062007"
  !LET J5$="Enter Truck number or 0 for ALL" 
  !LET J1=0
  !CALL "INPUT",J1,J$,J0$,J1$,J4$,J5$
  Call dxget("TRUCK",tmp$)
  let j1=tmp$
  let truck=j1
return

edt_stop_range: !
  !print @22,9;'CL';
  !LET J0$="3000062209"
  !startingstop: LET J5$="Enter starting stop number <cr> for first"
  LET J1=1
  !CALL "INPUT",J1,J$,J0$,J1$,J4$,J5$
  call dxget("SSTOP",tmp$) \ if tmp$="" let tmp$=str$(j1)
  let j$=tmp$
  let start_stop=J$
  If start_stop<0 or start_stop>6999 !
	let returnstatus=1
	message$="Starting Stop is invalid"
	goto outend
  Endif
  !goto startingstop:
  !if start_stop>6999 goto startingstop:
  !print using "####"; @22,9;'CL';start_stop;
  !print @22,10;'CL';
  !LET J0$="3000062210"
  !endingstop: LET J5$="Enter ending stop number <cr> for last"
  LET J1=6999
  !CALL "INPUT",J1,J$,J0$,J1$,J4$,J5$
  call dxget("ESTOP",tmp$) \ if tmp$="" let tmp$=Str$(j1)
  j$=tmp$
  let end_stop=j$
  if end_stop<0 or end_stop>6999 ! 
	let returnstatus=1
	message$="Ending Stop is invalid"
	goto outend
  Endif
  !goto endingstop:
  !if end_stop>6999 goto endingstop:
  if end_stop<start_stop ! goto endingstop:
	returnstatus=1
	message$="Stop range is invalid"
	goto outend
  Endif
  !print using "####"; @22,10;'CL';end_stop;
return

edt_shipdate: !
  !if custom_customer$="WHITERIVER"
!	print @17,12;'CL';
!	LET J0$="5000061812"
 ! Else
!	print @17,9;'CL';
!	LET J0$="5000061709"
 ! Endif
  !LET J5$="Enter the Ship Date to search for (mmddyy)"    
  !LET J1=0
  !CALL "INPUT",J1,J$,J0$,J1$,J4$,J5$     
  call dxget("SHPDATE",tmp$) ! comes in as mmddyy
  let x$=tmp$[5,6]+tmp$[1,4]
  let j1=x$
  LET X2=J1 ! \ GOSUB L_7820: \ GOTO edt_shipdate:
  let x$=X2 using "&&&&&&"
  Call DateToJulian(1,X$,X$,E)
  if e
	returnstatus=1
	message$="Invalid Date Entered"
	goto outend
  Endif
  !LET X2=J1 \ GOSUB L_7700: 
  !if custom_customer$="WHITERIVER"
!	print @18,12;x$;
 ! Else
!	print @17,9;x$;
 ! Endif
  let d8=j1
return
ASSIGNORDERS: Rem
!Print @17,7;'CL';
!J0$ = "3 00061707"
!J1 = 0
!J5$ = "Enter order to assign to above picker, <CR>: Exit."
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
call dxget("ORDID",tmp$)
j1=tmp$
If Not(J1) Return 
For I = 1 To 58 ! per eileen - have POS On Pick
  if I>7 and i<58 goto nxtordst ! skip 8 to 57
  KEY_$ = I Using "##",J1 Using "######"
  Search #3,2,1;KEY_$,R[3],E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Write #3,R[3],504;PB;
	if update_pieces
		write #3,r[3],620;NumberPieces;
	end if
    !Print @25,7;"Order assigned";
    !Pause 10
	returnstatus=0 ! or is it =1 to show it?
	message$="Order assigned"
    I = 99
	nxtordst: ! skip 8 to 57
  End If 
Next I
If I < 99 !* didn't find the order
 Message$="Order not found, no assignment made!"
  Returnstatus=1
End If 
!Goto ASSIGNORDERS
Return 
updatepb: ! range update
let count=0
let key_$=" ",key_$
key_$[1,2]=1 using "##"                               
order_loop: !
search #3,3,1;key_$,r[3],e 
IF E>2 GOSUB ERR_SEARCH:  
IF E GOTO END_updatepb:
let status=key_$[1,2]
if status>7 goto end_updatepb:
MAT  READ #3,R[3],0;H0; 
MAT  READ #3,R[3],78;H4;
READ #4,H0[2],146;S5;              
IF S5 IF S5<>TRUCK GOTO ORDER_LOOP:
if custom_customer$="WHITERIVER"
	IF H4[1] If H4[1]<start_stop GOTO ORDER_LOOP:
	IF H4[1] IF H4[1]>end_stop GOTO ORDER_LOOP:
Endif
IF H0[10]<>D8 GOTO ORDER_LOOP:
write #3,r[3],504;pb;  
let count=count+1
goto order_loop:
end_updatepb: !
returnstatus=0
Message$="Total "+Str$(count)+" order assigned"
!pause 10  
!print @0,21;'CL';
goto OutEnd ! StartHere:

! ======================== LABEL PRINT CODE  ==============================

labelprint: ! "
	! "read order
	MAT  READ #3,R[3],0;H0;
	MAT  READ #3,R[3],446;CUSTPO$;
	! "read shipto info
	MAT  READ #4,H0[2],8;S1$;		! "SHIPTO REC# - GET NAME/ADDRESS

	! " load the address lines
	LET LINE1$=" ",LINE1$;LINE2$=" ",LINE2$                                
	LET LINE1$[1,30]=S1$[61,90]                  
	                                                                 
	!  " line2 address                                                          
	FOR I=105 TO 92 STEP -1                                                
		IF S1$[I,I]>" " GOTO continue_on:                                         
	NEXT I  
	
	continue_on: !
	LET LINE2$[1,30]=S1$[91,I],", ",S1$[106,107]," ",S1$[108,117]            
	                                                                
	! " move up if no addr2 line
	IF LINE1$[1,5]="     " ! nothing there                                 
		LET LINE1$[1,50]=LINE2$[1,50];LINE2$[1,50]=" ",LINE2$[1,50]          
	ENDIF                                                                  
	
	FOR x = 1 TO totlabels
		if printernum=1
			gosub do_zbcprnt_200dpi:
		endif
		if printernum=2
			gosub do_zbcprnt_300dpi:
		endif
	NEXT x
RETURN

! =============== ZEBRA PRINTER CODE: (300dpi code)  ======================
get_zbclayout_300dpi: !   "format the label layout - OPTION #1  
	PRINT #0;"^XA";                                      
	PRINT #0;"^EF^FS"; 
	PRINT #0;"^XZ";                                      
	PRINT #0;"^XA";                                      
	PRINT #0;"^PR6";                                    
	PRINT #0;"^XZ";                                      
	PRINT #0;"^XA";  
	PRINT #0;"^DFFORMAT^FS";
	PRINT #0;"^MNA"; 
	!PRINT #0;"^LL422";
	PRINT #0;"^FWN"; 
	!PRINT #0;"^POI";                                     
	PRINT #0;"^LH0,0"; 
	PRINT #0;"^FO60,250^ADN,36,20^FDORDER#:^FS";
	PRINT #0;"^FO260,100^AV,280,180^FN1^FS";  
	PRINT #0;"^FO60,460^ADN,36,20^FDYOUR PO#:^FS";
	PRINT #0;"^FO300,450^ADN,48,30^FN2^FS"; 
	PRINT #0;"^FO140,600^ADN,48,30^FN3^FS";            
	PRINT #0;"^FO140,650^ADN,48,30^FN4^FS";                   
	PRINT #0;"^FO140,700^ADN,48,30^FN5^FS";                   
	PRINT #0;"^FO140,750^ADN,48,30^FN6^FS"; 
    PRINT #0;"^FO340,960^AVN^FDBUTLER-DEARDEN^FS";
	PRINT #0;"^FO420,1040^AVN^FD(508)869-9000^FS";
	PRINT #0;"^FO280,1120^AVN^FDwww.butlerdearden.com^FS";	
	PRINT #0;"^XZ";       
RETURN           

do_zbcprnt_300dpi: ! "==== print the label in Zebra printer-OPTION#1           
	PRINT #0;"^XA"; 
	PRINT #0;"^XZ";                               
	PRINT #0;"^XA";                               
	PRINT #0;"^XFFORMAT";                                               
	PRINT #0;"^FN1^FD";STR$(H0[7]);"^FS";		! "order#
	PRINT #0;"^FN2^FD";CUSTPO$[1,20];"^FS";
	PRINT #0;"^FN3^FD";S1$[1,30];"^FS";			! "cust name                              
	PRINT #0;"^FN4^FD";S1$[31,60];"^FS";        ! "cust address                       
	PRINT #0;"^FN5^FD";LINE1$[1,50];"^FS";                                 
	PRINT #0;"^FN6^FD";LINE2$[1,50];"^FS";                               
	PRINT #0;"^XZ";                                                     
RETURN   

! ====================================================================

! =============== ZEBRA PRINTER CODE: (200dpi code)  ======================
get_zbclayout_200dpi: !   "format the label layout - OPTION #2  
	PRINT #0;"^XA";                                      
	PRINT #0;"^EF^FS"; 
	PRINT #0;"^XZ";                                      
	PRINT #0;"^XA";                                      
	PRINT #0;"^PR6";                                    
	PRINT #0;"^XZ";                                      
	PRINT #0;"^XA";  
	PRINT #0;"^DFFORMAT^FS";
	PRINT #0;"^MNA"; 
	!PRINT #0;"^LL422";
	PRINT #0;"^FWN"; 
	!PRINT #0;"^POI";                                     
	PRINT #0;"^LH0,0"; 
	PRINT #0;"^FO20,160^ADN,36,20^FDORDER#:^FS";
	PRINT #0;"^FO200,60^AV,220,120^FN1^FS";  
	PRINT #0;"^FO20,340^ADN,36,20^FDYOUR PO#:^FS";
	PRINT #0;"^FO260,340^ADN,36,20^FN2^FS"; 
	PRINT #0;"^FO80,440^ADN,36,20^FN3^FS";            
	PRINT #0;"^FO80,480^ADN,36,20^FN4^FS";                   
	PRINT #0;"^FO80,520^ADN,36,20^FN5^FS";                   
	PRINT #0;"^FO80,560^ADN,36,20^FN6^FS";             
    PRINT #0;"^FO200,660^AUN^FDBUTLER-DEARDEN^FS";
	PRINT #0;"^FO260,710^AUN^FD(508)869-9000^FS";
	PRINT #0;"^FO160,760^AUN^FDwww.butlerdearden.com^FS";
	PRINT #0;"^XZ";       
RETURN           

do_zbcprnt_200dpi: ! "==== print the label in Zebra printer-OPTION#2           
	PRINT #0;"^XA"; 
	PRINT #0;"^XZ";                               
	PRINT #0;"^XA";                               
	PRINT #0;"^XFFORMAT";                                               
	PRINT #0;"^FN1^FD";STR$(H0[7]);"^FS";		! "order#
	PRINT #0;"^FN2^FD";CUSTPO$[1,20];"^FS";
	PRINT #0;"^FN3^FD";S1$[1,30];"^FS";			! "cust name                              
	PRINT #0;"^FN4^FD";S1$[31,60];"^FS";        ! "cust address                       
	PRINT #0;"^FN5^FD";LINE1$[1,50];"^FS";                                 
	PRINT #0;"^FN6^FD";LINE2$[1,50];"^FS";                               
	PRINT #0;"^XZ";                                                     
RETURN   

! ====================================================================

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM ",MSC$(4)
MessagE$=msg$
Call programdump("tmp/215.se!","")
returnstatus=1
goto Outend
!Return ! End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}
