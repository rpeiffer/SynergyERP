! PO362B   PURCHASE ORDER RECEIVING PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/serp362b.dl4 src/serp362b.src
!
! Custom:
! Rev:   G. DOSCHER  2/82 - created
!      02/28/1996 - vst - bedited
! 6/21/99 cct123606 jliu - print the first location if the prod has no 
!         primary location
! 6/21/00 cct132477 vst - print the tiers and skids on the form
! 8/16/01 cct149576 zyc problem when printing by due date
! 8/29/01 cct149576 zyc add date range for due date
! ------------------------------------------------------------------------------
! 06/06/13  vst task22964 - Added "SWP" custom code for the following:
! 11/02/04 jliu cct183352 - 132 column format ( custom heading/lines routines);
!	prints up to 3 whse locations, prints primary loc first, then sorts add'l
!    locations alphabetically, 
! 03/31/05 jliu cct185662 -  add the new prompt "print close line? (y/n)"
! 09/30/05 jliu cct194294 - if whse uses rasl, print rasl bin locations, 
!						 	  otherwise print non-rasl
! ------------------------------------------------------------------------------
! 06/14/13 wmb task26004 - in 'get_sprodwhse' rtn - removed chk if the vendor
! 			product's number starts with 0" do not print ( W1$[13,13])
!
! 07/14/15 vst task36275 - change the way 'custom_customer$' is read in
! 07/14/15 vst task47753		 - also added "COM" for htberry

include "src/copyright.inc" ! dx

Declare Intrinsic Sub DateToJulian,Logic,Date,FormatDate,FindF
Option Default Dialect IRIS1
Declare External Sub CreateNetStatus

External Lib "ubsfunc.dl4"
Declare External Function openfile

try

Com 1%,pfu1[20],CNVTU[9]
Com 2%,SWPSRC
Com 3%,PFU2[6],CNVTA[4],A[33]
Dim 1%,L1[5],L4[5],NSD1[7],X1[9],H4[3],TBS[20],PO1[9],SGNT
Dim 1%,pass,ZLINE,STAT[2],WHSE,PL1[1],SW[30]
Dim 1%,WHN1[6]
Dim 2%,D1[4],H0[5],H3[4],H5,L2[2],N1,N2,R3,R4,R5,R8,T1[4],V5,X2[9],R15
Dim 2%,B[24],NSD2[4],roh0[12],roh5[16],REC4,D9[20],R16,R17,R12
Dim 3%,H2[7],L3[17],L3[6],NSD3[9],Q1[9],X3[9],H8[4],TOTCUBE,A1[7],CB
Dim 3%,EXT_WGT,PL4[19],DISC,PO3[12],fuo,r6,rec,file,sord,inv_,WHMISC[6]
Dim 3%,R9,l7[12],invnum,ordnum,totqty,totwt,totcube
Dim A$[156],VEND1$[30],VEND2$[30],VEND3$[30],VEND4$[30],C1$[146],NSD$[96]
Dim whse1$[30],whse2$[30],whse3$[30],whse4$[30],Z$[50],PT$[80],PT1$[132]
Dim H$[82],H1$[116],H2$[12],K1$[50],K2$[50],K3$[50],K12$[30],J$[50]
Dim K11$[50],K24$[50],k4$[50],k18$[50],k19$[12],k20$[50],k21$[50]
Dim TAGMSG1$[30],TAGMSG2$[30],tag_msg$[810],prt_tag$[30],dline$[30]
Dim L1$[92],M1$[14],M2$[50],P0$[10],S$[50],SHIPTO1$[30],W1$[32],FIRST_LOC$[6]
Dim SHIPTO2$[30],BUYCL$[30],SHIPTO3$[30],SHIPTO4$[30],PLOC$[18],K17$[20]
Dim U5$[50],V1$[100],PT$[80],N1$[4],N2$[117],OPT$[10],DT$[6],P9$[50]
Dim X$[20],U3$[60],custnotes$[100],scratch$[80],cust$[142],CUSTPO$[20]
dim SECOND_LOC$[6],THIRD_LOC$[6],prntloc$[6]
Dim J0$[10],J1$[75],J4$[75],J5$[75],J6$[1]
Dim 4%,J1
Dim 2%,JPODUEDATE,JSDUEDATE,SDUEDATE,JEDUEDATE,EDUEDATE,CURDATE
Dim scratch$[80],J7$[75]

Dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[250] ! dx error handling variables
dim tmp$[800],prid$[2],indord$[700],blockid$[10],sord$[6],eord$[6]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim pdffilename$[100],custom_customer$[30]
Dim WebStr$[1000],Message$[200]
dim coname$[30],K23$[50],perm$[6],PR_A2$[30],S2$[20],STATUS$[20],Z2$[2]

!call dxget("u_custom_customer", custom_customer$)


Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
! get session opens sortwork, not needed and chnl 9 used here
try close #9 else rem

!call dxget("u_custom_customer", custom_customer$)
Mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(Trim$(custom_customer$))

Call DXGet("PRINTERID",prid$) \ prid$=ucase$(prid$) \ printerselected=prid$
!
Call DXGet("BLOCKID",blockid$) \ blockid$=rtrim$(blockid$)
Call DXGet("orderid",tmp$) \ ordno=tmp$ \ s9[0]=ordno  ! order#

goodStatus=1	! non-blockid called program returns 1 if alls well
if blockid$ <> ""
	goodStatus=0	! blockid called program returns 0 if alls well
	Call DXGet("WHSE",tmp$) \ whse=tmp$
	Call DXGet("SORD",sord$)
	Call DXGet("EORD",eord$)
	call dxget("sdate", tmp$)
	Call date(tmp$,tmp$,6,e)
	if tmp$ <> ""
		if not(e)
			call DateToJulian(1, tmp$)
			JSDUEDATE=tmp$
		else
			e$="Error in date conversion!" \ error 10000
		end if
	end if
	call dxget("edate", tmp$)
	if tmp$ <> ""
		Call date(tmp$,tmp$,6,e)
		if not(e)
			call DateToJulian(1, tmp$)
			JEDUEDATE=tmp$
		else
			e$="Error in date conversion!" \ error 10000
		end if
	end if
	Call DXGet("INDORD",indord$)
	if indord$[1,3]>"   "
		let indord=1
		if indord$[len(indord$)]<>"," let indord$=indord$+","  ! add a trailing comma
	else
		indord=0  ! individual order list
	end if
	Call DXGet("PRINTER",tmp$) \ prid$=ucase$(tmp$) \ printerselected=prid$
end if

returnStatus = goodStatus

LET SW[1]=0       !"DCS Laser PO Receiving

If custom_customer$ = "HTBERRY"  
   let SWPSRC=3622
   chain "serppoprint.odcs.dl4"
end if

If custom_customer$ = "ACTION"
   let sw[1]=1
end if
If custom_customer$ = "ADMIRAL"
   let sw[1]=1
end if
If custom_customer$ = "CAMPBELL"
   let sw[1]=1
end if
If custom_customer$ = "CARTER"
   let sw[1]=1
end if
If custom_customer$ = "CHUDY"
   let sw[1]=1
end if
If custom_customer$ = "CREST"
   let sw[1]=1
end if
If custom_customer$ = "EDMAR"  
   let sw[1]=1
end if
If custom_customer$ = "GPG"
   let sw[1]=1
end if
If custom_customer$ = "OMAHA"
   let sw[1]=1
end if
If custom_customer$ = "PCS"
   let sw[1]=1
end if
If custom_customer$ = "PIEDMONT"
   let sw[1]=1
end if
If custom_customer$ = "PRBRICK"
   let sw[1]=1
end if
If custom_customer$ = "REUTHER"
   let sw[1]=1
end if
If custom_customer$ = "RONSTAN"  
   let sw[1]=1
end if
If custom_customer$ = "STERLING"
   let sw[1]=1
end if
If custom_customer$ = "SWP"
   let sw[1]=1
end if
If custom_customer$ = "UPCW"
   let sw[1]=1
end if
If custom_customer$ = "WENELSON"
   let sw[1]=1
end if
If sw[1]
   chain "serp362b.odcs.dl4"
end if


! **** OPEN FILES ***
if custom_customer$="SWP"
	let END_DATA=24
else
	let END_DATA=20
endif
FOR J = 2 TO END_DATA
	Read J1
	If J1 = -1 Goto L_860
	Read #1,88,Abs(J1);U5$;
	If J1 <= 0 Ropen #J,U5$ Else Open #J,U5$
L_860: Next J
Data "-1","-1792","-1840","-2400","-1808","-1","2416","-2432","-1","-2464","-1744","-1728","-2448","-2768","-720","208","-1888","-1136","-1184","-1","-1","-2528","-1856"
ROPEN #21,"4/sordflehhkey"+STR$(intco)
sgnt = openfile(9991,intco)  ! buyers file
COID = IntCo   
J$ = "3/PORDPOLTAG" + Str$(coid)
Call FindF(J$,FOUND)            
If FOUND                        
  FOUNDPOTAG = 1                
  ch_potag = 22                 
  Ropen #ch_potag,J$            
End If                          
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$;
Mat Read #1,3,172;CURDATE;
if custom_customer$="SWP"
	read #1,3;coname$;
endif

!-------------------------------------------------------------------------------
! variable inits
If CUSTOM_CUSTOMER$ = "SOUTHJERSEY" or custom_customer$="JPAPER"
   V9[3] = 53 
   V9[4] = 60
ELSE
   If custom_customer$ = "SWP"
      V9[3]=64
	  V9[4]=64
   else
	  V9[3] = 60 ! last line of form body (line print region)
	  V9[4] = 66 ! last line of form
   endif
END IF
STAT[0] = 1
STAT[1] = 2
STAT[2] = 0
If custom_customer$ = "RONSTAN" 
   STAT[2]=4
End If
V1$ = "\15\",V1$
PT$ = "-",PT$
PT1$ = "_",PT1$
TBS[0] = 32
TBS[3] = 14
TBS[4] = 27
SW[9]=27
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
! Print 'CS CR';
! Gosub ALIGNMENT
!-------------------------------------------------------------------------------

order_quest: !
! 	Print 'CS';@0,0;'CE';"-PO362B-";@20,0;"PURCHASE ORDER RECEIVING COPY PRINT"
! 	Print @0,3;"ENTER PURCHASE ORDER NUMBER,";
! 	Print " <CR> FOR RANGE,";
! 	Print " OR  E: TO EXIT: ";
! 	Input ""Z$ \ If Z$ = "E" Goto Outend
! 	If Z$ = ""
! 		Goto Range_Quest
! 	End If
! 	If Z$[1,1] = "!" Let SW[8] = 1 \ Z$ = Z$[2] ! "debug mode
! 	N1 = Z$ \ If Not(N1) Goto order_quest
	if s9 ! shopprint
		n1 = s9
	else
		if not(indord) Goto Range_Quest
		tmp$=indord$[KPOS+1] TO ",":KPOS
		n1=tmp$
		if not(n1) goto outend
		If N1 < 1 Or N1 > 999999
	! 		Print 'CL RB';"INVALID NUMBER!!" \ Signal 3,20
			Goto order_quest
		End If
	end if
	
	L_1060: ! "look thru all possible statuses for this order
	pass = 0
	For STATUS = 1 To 4
		U5$[1,2] = STATUS Using "##" ! "status
		U5$[3,8] = N1 Using "######" ! "order # (6 digit)
		Search #8,2,1;U5$,R8,E
		If E > 1 Gosub Err_Search
		If Not(E)
			K11$ = U5$
			pass = 1
			If custom_customer$ <> "RONSTAN" 
			   STAT[2] = STATUS
			End If
			STATUS = 4 ! "found it!
		End If
	Next STATUS
	If Not(pass)
! 		message$ = "PURCHASE ORDER "+str$(N1)+" NOT FOUND"
! 		returnStatus = not(goodStatus)
		If S9[0] Goto Outend ! "shopprint
		Signal 3,20
	Else
	    let prtpo=0
		Gosub Print_A_PO !
		IF CUSTOM_CUSTOMER$="EDMAR"   
		   let prtpo=1
		   GOSUB Print_A_PO      
		endif
		Unlock #8
		If S9[0] Goto Outend ! "shopprint
	End If
Goto order_quest ! "ask 'em for another order

!-------------------------------------------------------------------------------
Range_Quest: ! "=================================== range of orders
! 	Print 'CS';@0,0;'CE';"-PO362B-";
! 	Print @20,0;'CE';"PURCHASE ORDER RECEIVING PRINT FOR RANGES"
! 	Print @23,5;'CE';"  1> PRINT BY DUE DATE ";
! 	Print @23,6;'CE';"  2> PRINT BY PURCHASE ORDER NUMBER"
! 	Print @23,8;'CE';"ENTER OPTION OR  E: TO EXIT ";
! 	Input ""OPT$ \ If OPT$ = "E" Goto Outend
! 	If OPT$ <> "1" If OPT$ <> "2" Goto Range_Quest
	if JSDUEDATE OPT$="1" ELSE OPT$="2"
	

! 	L_1280: ! Warehouse
! 		Print @0,4;'CE';"ENTER WAREHOUSE TO PRINT,  0: FOR ALL, OR  E: TO EXIT: ";
! 		Input ""Z$ \ If Z$ = "E" Goto Outend
! 		If Len(Z$) > 2 Or Z$ = "" Goto L_1280 Else Let WHSE = Z$
! 		If WHSE < 0 Or WHSE > D9[5] Goto L_1280 ! "check for valid range
! 		If Not(WHSE) If Z$ <> "0" Goto L_1280
! 	L_1320: Print @0,4;'CE';"WILL PRINT STATUS 4 PURCHASE ORDERS FOR ";
! 	If WHSE Print "WAREHOUSE:";WHSE Else Print "ALL WAREHOUSES"

	STAT[2] = 4 ! "range print is only for status=4 po's

	If OPT$ = "1"
! 		Get_Starting_Due_Date: !
! 		Print @34,6;"STARTING";
! 		Print @50,6;"ENDING"
! 		Print @0,7;"ENTER DUE DATE RANGE: ";
! 		J0$ = "50000634 7" \ J1 = CURDATE
! 		J5$ = "Enter starting due date in MMDDYY format or <CR> for today's date "
! 		Gosub ISINPUT
! 		SDUEDATE = J1
! 		X2 = SDUEDATE \ Gosub L_7820 \ Goto Get_Starting_Due_Date
! 		JSDUEDATE = X2 ! julian
 		N1 = 0
 		N2 = 999999
! 		Get_Ending_Due_Date: !
! 		J0$ = "50000650 7" \ J1 = CURDATE
! 		J5$ = "Enter ending due date in MMDDYY format or <CR> for today's date "
! 		Gosub ISINPUT
! 		EDUEDATE = J1
! 		X2 = EDUEDATE \ Gosub L_7820 \ Goto Get_Ending_Due_Date
! 		JEDUEDATE = X2 ! julian
		IF NOT(JEDUEDATE) JEDUEDATE = JSDUEDATE
		If JSDUEDATE > JEDUEDATE !invalid range
			e$ = "Invalid ending due date."
			error 10000
! 			J7$ = " INVLID ENDING DUE DATE "
! 			Gosub ISERRMSG
! 			Goto Get_Ending_Due_Date
		End If
	End If

	If OPT$ = "2" ! "range by po#
		L_1330: !
! 		Print @0,7;"ENTER STARTING PURCHASE ORDER ";
! 		Print " #, <CR> FOR FIRST, OR  E: TO EXIT: ";
! 		Input ""Z$ \ If Z$ = "E" Goto Outend
! 		If Z$ = "" Let Z$ = "1" ! "first
! 		N1 = Z$ \ If Not(N1) Goto L_1330
! 		If N1 < 1 Or N1 > 999999
! 			Print 'CL RB';"INVALID NUMBER!!" \ Signal 3,20
! 			Goto L_1330
! 		End If
! 		L_1370: !
		N1 = sord$
		if not(n1) n1 = 1
! 		Print @4,9;"ENDING PURCHASE ORDER NUMBER, <CR> FOR LAST,  OR  E: TO EXIT: ";
! 		Input ""Z$ \ If Z$ = "E" Goto Outend
! 		If Z$ = "" Let Z$ = "999999" ! "last (6 digit)
! 		N2 = Z$ \ If Not(N2) Goto L_1370
! 		If N2 < 1 Or N2 > 999999
! 			Print 'CL RB';"INVALID NUMBER!!" \ Signal 3,20
! 			Goto L_1330
! 		End If
		N2=Eord$
		if not(n2) n2 = 999999
		If N2 < N1 ! "invalid range
			e$ = "Ending PO must be >= starting PO."
			error 10000
		End If
	End If

! L_1450: ! "=================================================
! 	Print @10,22;'CL';
! 	Input "ENTER    P: print    R: reselect    E: exit "Z$
! 	If Z$ = "E" Goto Outend
! 	If Z$ = "R" Goto Range_Quest
! 	If Z$ = "!" Let SW[8] = 1;Z$ = "P" ! "debug mode
! 	If Z$ <> "P" Goto L_1450

!-------------------------------------------------------------------------------
POPRINT: !
	K1$ = STAT[2] Using "##     "
	K1$[3] = N1 Using "######"
	Search #8,2,1;K1$,R8,E
	If Not(E) Goto found_po
	poprint_loop: !
		Search #8,3,1;K1$,R8,E
		If E > 2 Gosub Err_Search
		If E Goto end_poprint_loop
		found_po: Rem
		K11$ = K1$
		X1 = K1$[1,2]
		If X1 <> STAT[2] Goto end_poprint_loop
		X2 = K1$[3]
		If X2 > N2 Goto end_poprint_loop
		let prtpo=0
		Gosub Print_A_PO
		IF CUSTOM_CUSTOMER$="EDMAR"   
		   let prtpo=1
		   GOSUB Print_A_PO      
		endif
		Unlock #8
		Goto poprint_loop
	end_poprint_loop: !
	! Print @0,3;'CE';
Goto outend: ! all done

!-------------------------------------------------------------------------------
Print_A_PO: ! PRINT ORDER REC# R8
	Gosub read_pohead
	X1 = K11$[1,2]
	If H0 <> X1
		e$ = "STATUS ERROR-- FILE DOESN'T MATCH INDEX!"
		Unlock #8
		Error 10000
	end if
	If H4[0] = 1 Or H4[0] = 5 Return ! " range print, do not print directs
	P1 = 0
	If H4[1] <> 0 Let R15 = H4[1] - 1
	If WHSE If H4[1] <> WHSE Return ! "wrong whse
	If OPT$ = "1"
		X2 = H0[4] \ Gosub L_7820 \ Return
		JPODUEDATE = X2
		If JPODUEDATE < JSDUEDATE Or JPODUEDATE > JEDUEDATE Return !wrong date
	End If
	! Print @0,22;'CL';"NOW PRINTING PO ";K1$[3,8] \ Signal 3,10
	Gosub get_whse ! get warehouse address
	!GOSUB get_cust_ord: !
	
	if custom_customer$="SWP" 
		gosub header_SWP: 
	else
		GOSUB header:
	endif
	
	K2$ = H0[2] Using "######   "
	Line_Loop: !
		Search #9,3,1;K2$,R9,E
		If E > 2 Gosub Err_Search
		If E Goto End_Line_loop
		X2 = K2$[1,6]
		If X2 <> H0[2] Goto End_Line_loop
		Gosub get_POline
		Call Logic(1,2 ^ 2,L1[3],ZLINE)
		WHSE_REC = 0
		If L1[0] = 3 Goto Line_Loop ! "only print open lines
		If Not(ZLINE)
			Gosub get_prod
			if custom_customer$<>"SWP" GOSUB READTAGLINE:
			Gosub GET_SPRODWHSE_REC ! "get vendor item #
			If custom_customer$ = "RONSTAN" 
			   Gosub GET_PROD_RONLOCATION ! "get ploc$
			Else
			   Gosub GET_PROD_LOCATION ! "get ploc$
			End If
			bypass_for_SWP: !
			Gosub convert
			If V9[1] >= V9[3] Gosub NewPage
			If custom_customer$ = "RONSTAN" 
	           Gosub Print_Ronline
	        Else
			  IF CUSTOM_CUSTOMER$="SOUTHJERSEY"
				 gosub print_sjline
              else
			     if custom_customer$="SWP"
					gosub print_line_SWP:
				else
					GOSUB print_line
				endif
			  endif
			End If
		Else
			If L1$[81,81] <> "Y" ! messages lines that do not print
				Gosub print_zline
			End If
		End If
		Goto Line_Loop
	End_Line_loop: !

	Print #0;"\15\\15\";
	V9[1] = V9[1] + 2
	if custom_customer$="SWP"
		LET K3$=H0[2]+1*10^6 USING "#######"
		LET P0$=K3$[1,7]
		NOTES_LOOP: !
		SEARCH #11,3,1;K3$,R4,E \ IF E > 2 Gosub Err_Search
		IF NOT(E) AND P0$[1,7]=K3$[1,7]
			READ #11,R4;M2$;
			IF V9[1]>=V9[3] GOSUB NEWPAGE:
			PRINT #0; TAB TBS[4];M2$
			LET V9[1]=V9[1]+1
			IF V9[1]<V9[3] GOTO NOTES_LOOP:
		ENDIF 
	endif

	! PRINT SPECIAL INSTRUCTIONS
	K3$ = H0[2] + 2 * 10 ^ 6 Using "#######"
	P0$ = K3$[1,7]
	specins_loop: !
		Search #11,3,1;K3$,R4,E \ If E > 2 Gosub Err_Search
		If Not(E) And P0$[1,7] = K3$[1,7]
			Read #11,R4;M2$;
			If V9[1] >= V9[3] Gosub NewPage ! WAS V9[3]-2
			Print #0; Tab TBS[4];M2$
			V9[1] = V9[1] + 1
			If V9[1] < V9[3] Goto specins_loop !ENSURE DON'T PASS END OF PAGE V9[3]+1
		End If
	Gosub print_totals
	ordercntr = ordercntr + 1
	Gosub Top_of_Form
Return

!-------------------------------------------------------------------------------
header: ! PAGE HEADING
	P1 = P1 + 1
	V9[2] = 4 \ Gosub VFC
	IF CUSTOM_CUSTOMER$="EDMAR"                 
	   if prtpo                                  
	      print #0;tab 26;"W A R E H O U S E       C O P Y";      
	   else                                     
	      print #0;tab 26;"R E C E I V I N G       C O P Y";      
	   endif                                    
    ELSE	                                      
          PRINT #0; TAB 26;"R E C E I V I N G      O R D E R";
    endif
	V9[2] = 7 \ Gosub VFC
	IF CUSTOM_CUSTOMER$="EDMAR"
	   print #0; tab 9;"EDMAR";
    else
       PRINT #0; TAB 9;WHSE1$;
    endif
	U5$ = H3[2] + 10 ^ 3 Using "####" \ U5$[1,1] = "-"
	Print #0; Using "P/O NUMBER: ######"; Tab 58;H0[2] !U5$;
	Print #0; Tab 9;whse2$
	Print #0; Tab 9;whse3$;
	X2 = H0[3] \ Gosub L_7700 \ Print #0; Tab 60;"P/O DATE: ";X$
	Print #0; Tab 9;whse4$
	V9[1] = V9[1] + 4
	V9[2] = 12 \ Gosub VFC
	Print #0; Tab 1;"ISSUED";
	Print #0; Tab 9;VEND1$; Tab 42;"SHIP"; Tab 48;SHIPTO1$
	Print #0; Tab 9;VEND2$; Tab 48;SHIPTO2$
	Print #0; Tab 3;"TO";
	Print #0; Tab 9;VEND3$; Tab 43;"TO"; Tab 48;SHIPTO3$
	Print #0; Tab 9;VEND4$; Tab 48;SHIPTO4$
	V9[1] = V9[1] + 4
	V9[2] = 17 \ Gosub VFC
	If H4[0] = 0 Or H4[0] = 4 Print #0; Using "##"; Tab 1;"* WAREHOUSE ";H4[1];" *";
	If H4[0] = 1 Or H4[0] = 5 Print #0; Tab 1;"* DIRECT *";
	If H4[0] = 2 Or H4[0] = 6
		Print #0; Using "##"; Tab 1;"* INDIRECT WAREHOUSE ";H4[1];" *";
	End If
	IF PO1[6]
     MAT  READ #SGNT,PO1[6],0;BUYCL$;  
	 print #0;" BUYER NAME: ";buycl$[1,30];
    endif
	Print #0; Using "##"; Tab 72;"PAGE ";P1;
	V9[2] = 19 \ Gosub VFC
	Gosub Print_Labels
	Print #0; Tab 1;H$[59,68];
	X2 = H0[5] \ Gosub L_7700 \ Print #0; Tab 14;X$;
	Print #0; Using "######"; Tab 25;H3[3];
	IF CUSTOM_CUSTOMER$<>"EDMAR"    
     PRINT #0; TAB 32;H$[35,48]; 
    endif
    print #0;TAB 47;H$[49,58]; TAB 59;H$[15,24];
	X2 = H0[4] \ Gosub L_7700 \ Print #0; Tab 71;X$
	V9[1] = V9[1] + 1
	Print #0; Tab 0;PT1$[1,79] \ V9[1] = V9[1] + 1
	Print #0;"\12\"; \ V9[1] = V9[1] + 1
    If custom_customer$ = "RONSTAN" 
	   Gosub Print_Detail_RonLabels
	Else
	   IF CUSTOM_CUSTOMER$="SOUTHJERSEY" 
	      gosub print_detail_sjlabels
       else
          GOSUB Print_Detail_Labels !DETAIL LABELS
       endif
	End IF
	V9[2] = 27 \ Gosub VFC
Return

! --------------------------  SOUTHWEST custom header/lines routines -------
header_SWP: ! 
  LET P1=P1+1
  LET V9[2]=4 \ GOSUB vfc: 
  PRINT #0; TAB 56;"R E C E I V I N G      O R D E R";              
  LET V9[2]=7 \ GOSUB vfc:                                       
  PRINT #0; TAB 1;CONAME$;                                          
  LET U5$=H3[2]+10^3 USING "####" \ LET U5$[1,1]="-"                
  PRINT #0; USING "P/O NUMBER: ######"; TAB 88;H0[2]                
  LET V9[1]=V9[1]+1                                                 
  LET X2=H0[3] \ GOSUB L_7700: \ PRINT #0; TAB 90;"P/O DATE: ";X$;  
  LET V9[2]=12 \ GOSUB vfc:                                      
  PRINT #0; TAB 21;"ISSUED";                                         
  PRINT #0; TAB 29;VEND1$; TAB 82;"SHIP"; TAB 88;SHIPTO1$
  PRINT #0; TAB 29;VEND2$; TAB 88;SHIPTO2$
  PRINT #0; TAB 23;"TO";
  PRINT #0; TAB 29;VEND3$; TAB 83;"TO"; TAB 88;SHIPTO3$
  PRINT #0; TAB 29;VEND4$; TAB 88;SHIPTO4$
  LET V9[1]=V9[1]+4
  
  LET V9[2]=17 \ GOSUB vfc: 
  IF H4[0]=0  PRINT #0; USING "##"; TAB 1;"* WAREHOUSE ";H4[1];" *";
  IF H4[0]=1  PRINT #0; TAB 1;"* DIRECT *";
  gosub print_po_status_SWP: 
  PRINT #0; TAB 25;"STATUS: ";STATUS$; 
  MAT  READ #SGNT,PO1[6],0;BUYCL$;   
  PRINT #0; TAB 48;"BUYER: ";
  print #0; USING "### ";PO1[6];
  print #0; BUYCL$;             
  PRINT #0; USING "##"; TAB 112;"PAGE ";P1;
  
  LET V9[2]=19 \ GOSUB vfc: 
  GOSUB Print_Labels_SWP: 
  PRINT #0; TAB 1;H$[59,68];
  LET X2=H0[5] \ GOSUB L_7700: \ PRINT #0; TAB 14;X$;
  PRINT #0; USING "######"; TAB 25;H3[3];
  PRINT #0; TAB 32;H$[35,48]; TAB 47;H$[49,58]; TAB 59;H$[15,24];
  LET X2=H0[4] \ GOSUB L_7700: \ PRINT #0; TAB 71;X$
  LET V9[1]=V9[1]+1
  PRINT #0; TAB 0;PT1$[1,130] \ LET V9[1]=V9[1]+1
  PRINT #0;"\212\"; \ LET V9[1]=V9[1]+1 
  GOSUB Print_Detail_Labels_SWP: 		!	DETAIL LABELS
  LET V9[2]=27 \ GOSUB vfc: 
RETURN 

!-------------------
print_labels_SWP: !   
  PRINT #0; TAB 1;"CONFIRMED"; TAB 13;"CONF. DATE";
  PRINT #0; TAB 25;"VENDOR"; TAB 32;"TERMS";
  PRINT #0; TAB 47;"F.O.B."; TAB 59;"SHIP VIA"; TAB 71;"DATE REQ"
  LET V9[1]=V9[1]+1
  PRINT #0; TAB 1;PT$[1,10]; TAB 13;PT$[13,22]; TAB 25;PT$[25,30];
  PRINT #0; TAB 32;PT$[32,45]; TAB 47;PT$[47,56];
  PRINT #0; TAB 59;PT$[59,68]; TAB 71;PT$[71,78]
  LET V9[1]=V9[1]+1
RETURN 

! -------------------
print_Detail_Labels_SWP: !       
  PRINT #0; TAB 0;"Ln#"; 
  PRINT #0; TAB 6;"Item Number/Vendor #"; TAB 28;"Product Descriptions";
  PRINT #0; TAB 60;"U/M";
  PRINT #0; TAB 66;"Table";
  print #0; TAB 72;"Location";
  print #0; tab 82;"Ord/Rec'd";
  print #0; tab 94;"U/M";
  print #0; tab 100;"Balance Due";
  print #0; tab 112;"U/M"
  LET V9[1]=V9[1]+1
  PRINT #0; TAB 0;PT1$[1,130] 
  LET V9[1]=V9[1]+1
  RETURN 
RETURN

!---------------------------
print_po_status_SWP: ! 

LET STATUS$=" ",STATUS$
ON H0 GOSUB L_6730:,L_6735:,L_6740:,L_6745:,L_6750:,L_6755:,L_6760:
RETURN 

L_6730: LET STATUS$="ENTERED" \ RETURN 

L_6735: LET STATUS$="PRINTED" \ RETURN 

L_6740: LET STATUS$="REGISTERED" \ RETURN 

L_6745: LET STATUS$="OPEN" \ RETURN 

L_6750: LET STATUS$="RECEIPTS IN PROCESS" \ RETURN 

L_6755: LET STATUS$="RECEIPTS REGISTERED" \ RETURN 

L_6760: LET STATUS$="CLOSED" \ RETURN 

!-------------------------------------------------------------------------------
Print_Labels: !
	Print #0; Tab 1;"CONFIRMED"; Tab 13;"CONF. DATE";
	PRINT #0; TAB 25;"VENDOR";    
    IF CUSTOM_CUSTOMER$<>"EDMAR"   
       print #0; TAB 32;"TERMS";
    endif
	Print #0; Tab 47;"F.O.B."; Tab 59;"SHIP VIA"; Tab 71;"DATE REQ"
	V9[1] = V9[1] + 1
	Print #0; Tab 1;PT$[1,10]; Tab 13;PT$[13,22]; Tab 25;PT$[25,30];
	Print #0; Tab 32;PT$[32,45]; Tab 47;PT$[47,56];
	Print #0; Tab 59;PT$[59,68]; Tab 71;PT$[71,78]
	V9[1] = V9[1] + 1
Return

!------------------------------------------------------------------
Print_Detail_RonLabels: !
  print #0; tab 0;"LN";
  print #0; tab 3;"ITEM #";
  print #0; tab 16;"DESCRIPTION";
  PRINT #0; TAB 48;"QUANTITY"; TAB 58;"UNIT";
  PRINT #0; TAB 66;"U/M"; TAB 72;"LOCATION";
  PRINT #0; "" 
  V9[1]=V9[1]+1
  Print #0; tab 3;"VEND ITEM#"
  V9[1]=V9[1]+1
  PRINT #0; TAB 0;PT1$[1,79] 
  V9[1]=V9[1]+1
Return

	Print_Detail_Labels: !
	Print #0; Tab 0;"QUANTITY"; Tab 10;"UNIT";
	Print #0; Tab 16;"ITEM/VENDOR #"; Tab 32; "LN#" ; Tab 38;"LOCATION";
	Print #0; Tab 49;"DESCRIPTION";
	Print #0; ! TAB 69;"EXT PRICE"
	V9[1] = V9[1] + 1
! 	Print #0; Tab 37;"TIER/HIGH"
! 	V9[1] = V9[1] + 1
	Print #0; Tab 0;PT1$[1,79]
	V9[1] = V9[1] + 1
Return

!-----------------------
print_ronline: !
PRINT #0; USING "##"; TAB 0;L1[2];                  
 PRINT #0; TAB 3;L1$[81,92];                        
 PRINT #0; TAB 16;L1$[1,30];                         
 IF FRA(Q1[1]+PL4[1]-Q1[2])                                 
    PRINT #0; USING "------#.##"; TAB 48;Q1[1]+PL4[1]-Q1[2]; 
 ELSE                                                       
    PRINT #0; USING "------####"; TAB 48;Q1[1]+PL4[1]-Q1[2]; 
 ENDIF  
 LET TOTQTY=TOTQTY+Q1[1]+PL4[1]-Q1[2]
 IF NOT(NS)                         
    LET TOTCUBE=TOTCUBE+EXT_CUBE      
 ELSE                              
    LET TOTCUBE=TOTCUBE+CB            
 ENDIF                             
 LET TOTWT=TOTWT+EXT_WGT       
 PRINT #0; TAB 58;"______";                          
 X1=L1[4] \ GOSUB L_4300: \ PRINT #0; TAB 66;M1$;
 PRINT #0; TAB 72;FIRST_LOC$[1,6];                   
 PRINT #0;"" \ LET V9[1]=V9[1]+1                            
 IF QTYBO PRINT #0; TAB 0;"B/O"; ! "open b/o on the product
 IF WHSE_REC=0 
    IF L1$[61,61]<>"" AND L1$[61,64]<>"    "
	   PRINT #0; TAB 16;L1$[61,80];
    else
	   PRINT #0; TAB 16;A$[93,112];     
	endif
 endif 
 IF WHSE_REC=1 PRINT #0; TAB 3;W1$[13,24]; 
 PRINT #0; TAB 16;L1$[31,60]; 
! PRINT #0; USING "####"; TAB 37;WHMISC[4];"/";
! PRINT #0;WHMISC[5];
 PRINT #0; TAB 58;"______"; 
 PRINT #0; TAB 72;second_LOC$[1,6];
 print #0;""
 V9[1]=V9[1]+1
 IF PL4[10] ! "indirect orders, from a sales order
    PRINT #0; USING "SALES ORDER ######"; TAB 16;PL4[10]
    V9[1]=V9[1]+1
 ENDIF 
RETURN 

!------------------------------------------------------------------------------
print_line: ! PRINT DETAIL LINE
	Print #0; Using "########"; Tab 0;Q1[1] + PL4[1] - Q1[2]; ! qty ord+free-tot recv
	LET TOTQTY=TOTQTY+Q1[1]+PL4[1]-Q1[2]
 IF NOT(NS)                         
    LET TOTCUBE=TOTCUBE+EXT_CUBE      
 ELSE                              
    LET TOTCUBE=TOTCUBE+CB            
 ENDIF                             
 LET TOTWT=TOTWT+EXT_WGT       
	X1 = L1[4] \ Gosub L_4300 \ Print #0; Tab 10;M1$;
	Print #0; Tab 16;L1$[81,92];
	If PLOC$[13,18] = "" Or PLOC$[13,18] = "      "
		If P9$[41,41] = "N" Let PLOC$[13,18] = FIRST_LOC$[1,6]
	End If !"cct123606
	PRINT #0; tab 32; l1[2] using "###";
	if custom_customer$ = "HATHAWAY" AND (PLOC$[13,18] = "" Or PLOC$[13,18] = "      ")
		PRINT #0; tab 38; "ADVISE!"
	else
		Print #0; Tab 38;PLOC$[13,18]; ! "bin location
	end if
	IF CUSTOM_CUSTOMER$="GTI"                              
       LET POS_=1;POS1=0                                     
       LET DLINE$=L1$[31,60]                                
       SEARCH DLINE$[POS_],"*",POS1                          
       IF NOT(POS1)                                         
	      PRINT #0; TAB 49;DLINE$[1,30];                
	   ELSE                                                 
	     IF POS1>1 PRINT #0; TAB 49;DLINE$[1,POS1-1];  
	  ENDIF                                                
    ELSE                                                   
      PRINT #0; TAB 49;L1$[1,30];                     
    ENDIF 
	Print #0;"" \ V9[1] = V9[1] + 1
	If QTYBO Print #0; Tab 3;"**B/O**"; ! "open b/o on the product
	IF WHSE_REC=0 
       IF L1$[61,61]<>"" AND L1$[61,64]<>"    "
	      PRINT #0; TAB 16;L1$[61,80];
       else
	      PRINT #0; TAB 16;A$[93,112];     
	   endif
    endif
	If WHSE_REC = 1 Print #0; Tab 16;W1$[13,30]; ! "vdr# from sprodwhse rec
! 	Print #0; Using "####"; Tab 37;WHMISC[4];"/";
! 	Print #0;WHMISC[5];
    IF CUSTOM_CUSTOMER$="GTI"                               
	   LET POS_=1;POS1=0                                     
	   LET DLINE$=L1$[1,30]                                
	   SEARCH DLINE$[POS_],"*",POS1                          
	   IF NOT(POS1)                                          
	      PRINT #0; TAB 49;DLINE$[1,30];                    
	   ELSE                                                 
	      IF POS1>1 PRINT #0; TAB 49;DLINE$[1,POS1-1]; 
	   ENDIF                                                
    ELSE                                                    
       PRINT #0; TAB 49;L1$[31,60];                           
    ENDIF
	print #0;""
	V9[1] = V9[1] + 1
	If PL4[10] ! from a sales order
		PRINT #0; tab 30;"LINKED FROM ORDER ";
		print #0; USING "######"; PL4[10];
		print #0; " LINE ";pl4[11];
		print #0;""
		LET V9[1]=V9[1]+1
		gosub get_salesorder:
		LET Z$=roH0[10] USING "&&&&&&"
		call formatdate(Z$,Z$,E)
		PRINT #0; TAb 30;Z$;" ";
		print #0; using "######";roh0[4];
		print #0;" ";cust$[31,60];
		print #0;""
		let v9[1]=v9[1]+1
		print #0;tab 30;"QTY ORDERED: ";
		IF FRA(L7[2]) PRINT #0; USING "#######.##";
		IF NOT(FRA(L7[2])) PRINT #0; USING "##,###,###";L7[2];
		print #0; " ";M1$;
		print #0;""
		let v9[1]=v9[1]+1
	End If
	IF CUSTOM_CUSTOMER$="EDMAR"
	   print #0;PT1$[1,9];
	   gosub print_locs
	   print #0;""        
	   LET V9[1]=V9[1]+1  
    else
	   print #0;PT1$[1,9]
	   v9[1]=v9[1]+1
	End If
	If gotTag                                                            
       For tagNo = 1 To sw[9]                                             
          prt_tag$ = RTrim$(tag_msg$[(30 * (tagNo - 1)) + 1,30 * tagNo])   
          If prt_tag$ <> ""                                                
             If V9[1] >= V9[4] Gosub NewPage                                
             Print #0; Tab 49;prt_tag$                                      
             V9[1] = V9[1] + 1                                              
          End If                                                           
       Next tagNo                                                         
    End If                                                                
	print #0;""
	v9[1]=v9[1]+1
Return

! --------------------	SOUTHWEST print_line  -----------------------

print_line_SWP: !  SOUTHWEST print line
 IF V9[1]+3>=V9[4] GOSUB NEWPAGE: 
 let ln3count=0 
 Call Logic(1,2 ^ 0,L1[3],NS) ! CHECK IF NONSTOCK
 PRINT #0; USING "###"; TAB 0;L1[2]; 
 PRINT #0; TAB 6;L1$[81,92]; 
 PRINT #0; TAB 28;L1$[1,30]; 
 IF PERM$[1,6]="" OR perm$[1,6]="      "
	LET perm$[1,6]=FIRST_LOC$[1,6]
	if whn1[4] and p9$[41,41]="W" 
	   IF PERM$[1,6]="" OR perm$[1,6]="      "
	      gosub get_prodlot_SWP:
       endif
    endif
	let permflag=0
 ELSE
	LET permflag=1
 ENDIF !"cct123606
 if whn1[4] and p9$[41,41]="W"
	let first_loc$=" ",first_loc$
	LET SECOND_LOC$=" ",SECOND_LOC$  
	LET THIRD_LOC$=" ",THIRD_LOC$    
 endif
 if not(NS)
    LET X1=pfu1[0] \ GOSUB L_4300: \ PRINT #0; tab 61;"Base";TAB 66;M1$; 
	PRINT #0; TAB 72;perm$[1,6]; ! "bin location      
	if permflag print "*";
 else
	LET X1=nsd1[2] \ GOSUB L_4300: \ PRINT #0; tab 61;"Base";TAB 66;M1$; 
 endif
 PRINT #0; USING "########"; TAB 82;Q1[1]+PL4[1]; ! qty ord+free 
 LET X1=L1[4] \ GOSUB L_4300: \ PRINT #0; TAB 94;M1$;
 if l1[0]=3 
   IF Q1[1]+PL4[1]-Q1[2]>0
	print #0; tab 100;"CLOSED SHORT";
   endif
   if Q1[1]+PL4[1]-Q1[2]<=0 
	 print #0; tab 100;"CLOSED"; 
   endif
 endif
 PRINT #0;"" \ LET V9[1]=V9[1]+1
 !2nd line
 IF WHSE_REC=0 PRINT #0; TAB 6;L1$[61,80];
 IF WHSE_REC=1 PRINT #0; TAB 6;W1$[13,30]; ! "vdr# from sprodwhse rec
 PRINT #0; TAB 28;L1$[31,60];
 if not(NS)    
	if pfu1[1] if pfu1[1]<>pfu1[0]
	   print #0;using "#####";tab 60;pfu2[0];
	   LET X1=pfu1[1] \ GOSUB L_4300: \ PRINT #0; TAB 66;M1$;     
    endif
	if first_loc$[1,6]=perm$[1,6]
	   print #0; tab 72;second_loc$[1,6];
    else
       PRINT #0; TAB 72;first_loc$[1,6]; ! "bin location                       
    endif
 else            
   if nsd1[4] if nsd1[2]<>nsd1[4]           
	  print #0;using "#####";tab 60;nsd3[4]; 
	  LET X1=nsd1[4] \ GOSUB L_4300: \ PRINT #0; TAB 66;M1$;    
   endif                                                        
 endif  
 PRINT #0; USING "########"; TAB 82;Q1[2]; ! tot recv 
 LET X1=L1[4] \ GOSUB L_4300: \ PRINT #0; TAB 94;M1$;
 if l1[0]=3  
	PRINT #0; USING "########"; TAB 100;0;  
 else
    PRINT #0; USING "########"; TAB 100;Q1[1]+PL4[1]-Q1[2];
 endif
 LET X1=L1[4] \ GOSUB L_4300: \ PRINT #0; TAB 112;M1$; 
 print #0; tab 120;"_________";
 PRINT #0;"" \ LET V9[1]=V9[1]+1   
 !3rd line
 IF PR_A2$[13,14]<>"  "   if not(pl4[10])                             
    PRINT #0; TAB 28;PR_A2$[13,27];                        
	let ln3count=ln3count+1
 ENDIF
 IF PL4[10]    ! "indirect orders, from a sales order
    PRINT #0; USING "######"; TAB 4;"[";PL4[10];
	GOSUB get_cust_ord_SWP:
	if cust$[31,34]="    " and s2$[19,20]="  "
	   print #0; tab 12; "  ORDER NOT FOUND  ]";
	else
	   print #0; tab 12;cust$[31,60];" ";"ZN ";s2$[19,20];" ";
	   LET Z$=ROH0[10] USING "&&&&&&"  
	   Call FormatDate(Z$,Z$,E)
	   PRINT #0;Z$[1,8];"]";
	endif
	let ln3count=ln3count+1
 ENDIF 
 if not(NS)                                                        
	if pfu1[2] if pfu1[2]<>pfu1[0]       
	  print #0;using "#####";tab 60;pfu2[1]; 
	  LET X1=pfu1[2] \ GOSUB L_4300: \ PRINT #0; TAB 66;M1$; 
	  let ln3count=ln3count+1
    endif                                                         
	if first_loc$[1,6]=perm$[1,6]                               
	   print #0; tab 72;third_loc$[1,6];     
	   let ln3count=ln3count+1 
    else                        
	   PRINT #0; TAB 72;second_loc$[1,6]; ! "bin location    
	   let ln3count=ln3count+1 
    endif                                                         
 else              
	if nsd1[5] if nsd1[2]<>nsd1[5]                                       
	   print #0;using "#####";tab 60;nsd3[5];
	   LET X1=nsd1[5] \ GOSUB L_4300: \ PRINT #0; TAB 66;M1$; 
	   let ln3count=ln3count+1 
    endif                                                     
 endif 
 if ln3count PRINT #0;"" \ LET V9[1]=V9[1]+1
 PRINT #0;"" \ LET V9[1]=V9[1]+1  
RETURN 

! ========================== End of print_line routines ====================

print_locs:   !"print the bin location
let i=0
let prntloc$[1,6]=ploc$[13,18]
LET K17$=" ",K17$                               
LET K17$[1,12]=A$[140,151]                                                
loc_loop: REM                                                         
SEARCH #17,3,1;K17$,R17,E                                                 
LET PLOC$=" ",PLOC$                                                       
IF E=2 GOTO END_LOC_loop  
If E Gosub Err_Search                                                                              
IF K17$[1,12]<>A$[140,151] GOTO END_LOC_loop                   
LET WHSENO=K17$[13,14]                                                    
IF WHSENO<>H4[1] GOTO loc_loop                                       
MAT  READ #17,R17,0;PLOC$;                                                
MAT  READ #17,R17,18;PL1; 
if ploc$[13,18]=prntloc$[1,6] goto loc_loop
if i=0 PRINT #0;TAB 16;"LOC:";
print #0;tab 21+i*7;ploc$[13,18];
let i=i+1
if i=8
   print #0;""
   LET V9[1]=V9[1]+1 
   IF V9[1]>=V9[3] GOSUB NEWPAGE  
   let i=0
endif
GOTO LOC_loop                                           
END_LOC_loop: REM     
if i<8 and i<>0
   print #0;""                     
   LET V9[1]=V9[1]+1               
   IF V9[1]>=V9[3] GOSUB NEWPAGE 
   let i=0                         
endif
return

print_zline: ! PRINT "Z" MESSAGE LINES
	Print #0; Tab 49;L1$[1,30]
	V9[1] = V9[1] + 1
	If V9[1] >= V9[3] Gosub NewPage
	If L1$[31,31] <> "" Or L1$[31,34] <> "    "
		if custom_customer$="SWP"
			print #0; tab 28;L1$[31,60]
		else
			PRINT #0; TAB 49;L1$[31,60]
		endif
		V9[1] = V9[1] + 1
	End If
Return

!-------------------------------------------------------------------------------
print_totals: ! "======================================= print totals
	if custom_customer$="SWP"
 		LET V9[2]=65
		GOSUB VFC:
		PRINT #0; TAB 28;"*** End of P.O. ***"
		LET V9[1]=V9[1]+1
  		return                
	endif
	V9[2] = 56
	Gosub VFC
	IF FRA(TOTQTY)                                                    
	 PRINT #0; USING "###,###.##"; TAB 1;"TOTAL PIECES ";FNR(TOTQTY);
    ELSE                                                              
	 PRINT #0; USING "##,###,###"; TAB 1;"TOTAL PIECES ";TOTQTY;     
    ENDIF 
    print #0;""
	V9[1] = V9[1] + 1
 IF CUSTOM_CUSTOMER$<>"SOUTHJERSEY"
    IF FRA(TOTWT)                                                     
	  PRINT #0; USING "###,###.##"; TAB 1;"TOTAL WEIGHT ";FNR(TOTWT); 
    ELSE                                                              
	 PRINT #0; USING "##,###,###"; TAB 1;"TOTAL WEIGHT ";TOTWT;      
    ENDIF                                                             
    print #0;"" 
    IF FRA(TOTCUBE)                                                         
 	 PRINT #0; USING "###,###.##"; TAB 1;"TOTAL CUBES  ";FNR(TOTCUBE);     
    ELSE                                                                    
     PRINT #0; USING "##,###,###"; TAB 1;"TOTAL CUBES  ";TOTCUBE;          
    ENDIF 
!  IF CUSTOM_CUSTOMER$="EDMAR"     
!	 if prtpo 
!		print #0;tab 65;"WAREHOUSE COPY";
!     else
!		print #0;tab 65;"RECEIVING COPY";
!     endif
!  endif
  print #0;""      
  LET V9[1]=V9[1]+2  
 ENDIF
  IF CUSTOM_CUSTOMER$="EDMAR"  
     print #0;""
	 print #0; tab 1;"NAME: ________________________"
	 print #0;""
	 print #0; tab 1;"DATE: ________________________"
	 LET V9[1]=V9[1]+4  
  endif 
  LET TOTQTY=0
  LET TOTWT=0
  LET totcube=0
Return

!-------------------------------------------------------------------------------
read_pohead: !
	Mat Read #8,R8;H0
	if pdffilename$ = "" pdffilename$=rtrim$(userid$)+"_PORECEIVER_"+str$(H0[2])
	Mat Read #8,R8,24;H$
	Mat Read #8,R8,106;H1$
	Mat Read #8,R8,222;H3
	Mat Read #8,R8,242;H4
	Mat Read #8,R8,250;H8
	Mat Read #8,R8,330;PO1
	Mat Read #8,R8,350;PO3
	! GET VENDOR RECORD
	R3 = H0[1]
	Mat Read #5,R3;C1$;
	Read #5,R3,268;V5;
	VEND1$ = C1$[1,30]
	VEND2$ = C1$[31,60]
	VEND3$ = C1$[61,90]
	VEND4$ = C1$[91,105]," ",C1$[106,107]," ",C1$[108,112]
	If VEND3$[1,1] = " "
		VEND3$ = VEND4$
		VEND4$ = " ",VEND4$
	End If
	SHIPTO1$ = H1$[1,30]
	SHIPTO2$ = H1$[31,60]
	SHIPTO3$ = H1$[61,90]
	SHIPTO4$ = H1$[91,105]," ",H1$[106,107]," ",H1$[108,116]
	If SHIPTO3$[1,1] = " "
		SHIPTO3$ = SHIPTO4$
		SHIPTO4$ = " ",SHIPTO4$
	End If
Return

READTAGLINE: REM read tag line for line 
gotTag = 0                              
If Not(FOUNDPOTAG) Return               
tmp$ = H0[2] Using "######"             
tmp$[7] = L1[2] Using "###"             
Search #ch_potag,2,1;tmp$,rpotag,e      
If e Return                             
gotTag = 1                              
Mat Read #ch_potag,rpotag,104;tag_msg$;                                        
RETURN 

!-------------------------------------------------------------------------------
get_prod: ! GET PRODUCT
	Call Logic(1,2 ^ 0,L1[3],X1) ! CHECK IF NONSTOCK
	If Not(X1)
		Mat Read #3,L3[1];A$; ! get product info
		Mat Read #3,L3[1],156;B;
		Mat Read #3,L3[1],256;A;
		Mat Read #3,L3[1],460;A1;
		Mat Read #3,L3[1],512;pfu1;
		Mat Read #3,L3[1],554;PFU2;
		Mat Read #3,L3[1],684;U3$;
		Mat Read #3,L3[1],944;pr_a2$;
	Else
		Mat Read #14,L3[1];NSD$ ! get nonstock info
		Mat Read #14,L3[1],96;NSD1
		Mat Read #14,L3[1],112;NSD2
		Mat Read #14,L3[1],132;NSD3
		For X1 = 0 To 20
			If X1 < 21 Let pfu1[X1] = 0
			If X1 < 4 Let pfu1[X1] = NSD1[X1 + 2]
			If X1 < 7 Let PFU2[X1] = 0
			If X1 < 3 Let PFU2[X1] = NSD3[X1 + 3]
		Next X1
		A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2]
		pfu1[8] = NSD1[5] \ pfu1[10] = NSD1[4] \ pfu1[11] = NSD1[3]
		A$[9,38] = NSD$[13,42] \ A$[63,92] = NSD$[43,72]
		A$[140,151] = NSD$[1,12]
	End If
Return

GET_PROD_RONLOCATION:    ! =================   read product location record
  K17$=" ",K17$;FIRST_LOC$=" ",FIRST_LOC$
  SECOND_LOC$=" ",SECOND_LOC$      
  THIRD_LOC$=" ",THIRD_LOC$        
  K17$[1,12]=A$[140,151]
  GET_RONLOCATION: !
  SEARCH #17,3,1;K17$,R17,E
  PLOC$=" ",PLOC$
  IF E=2 GOTO END_GET_PROD_RONLOCATION: 
  If E Gosub Err_Search
  IF K17$[1,12]<>A$[140,151] GOTO END_GET_PROD_RONLOCATION:
  LET WHSENO=K17$[13,14] 
  IF WHSENO<>H4[1] GOTO GET_RONLOCATION:
  MAT READ #17,R17,0;PLOC$;
  MAT  READ #17,R17,18;PL1;
  IF PL1[1]=1                                 
     IF FIRST_LOC$[1,6]="      "                 
	    FIRST_LOC$[1,6]=PLOC$[13,18]          
	 ELSE                                        
	   IF SECOND_LOC$[1,6]="      "              
		  SECOND_LOC$[1,6]=PLOC$[13,18]       
	   ELSE                                      
		  IF THIRD_LOC$[1,6]="      "             
		     THIRD_LOC$[1,6]=PLOC$[13,18]      
		  ENDIF                                   
	   ENDIF                                     
	 ENDIF                                       
  ENDIF  
  IF FIRST_LOC$[1,6]="      " GOTO GET_RONLOCATION:     
  IF SECOND_LOC$[1,6]="      " GOTO GET_RONLOCATION:    
  IF THIRD_LOC$[1,6]="      " GOTO GET_RONLOCATION:     
  END_GET_PROD_RONLOCATION: REM                                                
  If custom_customer$="SWP" return
  IF FIRST_LOC$[1,6]="      " OR SECOND_LOC$[1,6]="      " OR THIRD_LOC$[1,6]="      "
  K17$=" ",K17$                                        
  K17$[1,12]=A$[140,151]                               
  GET_RONLOCATION2: REM                                       
  SEARCH #17,3,1;K17$,R17,E                                
  LET PLOC$=" ",PLOC$                                      
  IF E=2 GOTO END_GET_PROD_RONLOCATION2: 
  If E Gosub Err_Search                                
  IF K17$[1,12]<>A$[140,151] GOTO END_GET_PROD_RONLOCATION2:  
  WHSENO=K17$[13,14]                                   
  IF WHSENO<>H4[1] GOTO GET_RONLOCATION2:                     
  MAT  READ #17,R17,0;PLOC$;                               
  MAT  READ #17,R17,18;PL1;                                
  IF PL1[1]<>1                                  
	IF FIRST_LOC$[1,6]="      "                 
	   FIRST_LOC$[1,6]=PLOC$[13,18]          
	ELSE                                        
	   IF SECOND_LOC$[1,6]="      "              
		  SECOND_LOC$[1,6]=PLOC$[13,18]       
	   ELSE                                      
		  IF THIRD_LOC$[1,6]="      "             
			 THIRD_LOC$[1,6]=PLOC$[13,18]      
		  ENDIF                                   
	   ENDIF                                     
	ENDIF                                       
  ENDIF  
  IF FIRST_LOC$[1,6]="      " GOTO GET_RONLOCATION2:  
  IF SECOND_LOC$[1,6]="      " GOTO GET_RONLOCATION2: 
  IF THIRD_LOC$[1,6]="      " GOTO GET_RONLOCATION2:  
  END_GET_PROD_RONLOCATION2: REM                      
  ENDIF                                            
RETURN 

GET_PROD_LOCATION: ! =================   read product location record
	K17$ = " ",K17$;FIRST_LOC$ = " ",FIRST_LOC$
	
	if custom_customer$="SWP"
	  LET PERM$=" ",PERM$
	  LET SECOND_LOC$=" ",SECOND_LOC$
      LET THIRD_LOC$=" ",THIRD_LOC$
    endif
	
	K17$[1,12] = A$[140,151]
	GET_LOCATION: !
	Search #17,3,1;K17$,R17,E
	PLOC$ = " ",PLOC$
	If E = 2 Goto END_GET_PROD_LOCATION
	If E Gosub Err_Search
 
    If K17$[1,12] <> A$[140,151] Goto END_GET_PROD_LOCATION
	WHSENO = K17$[13,14]
	If WHSENO <> H4[1] Goto GET_LOCATION
	Mat Read #17,R17,0;PLOC$;
	Mat Read #17,R17,18;PL1;
	If FIRST_LOC$[1,6] = "      " Let FIRST_LOC$[1,6] = PLOC$[13,18]
	If PL1[1] <> 1 Goto GET_LOCATION ! "searching for the permanent location
	
	continue_prod_loc_SWP: !
    if custom_customer$="SWP"
	  IF PL1[1]=1 IF PERM$[1,6]="      " LET PERM$=PLOC$[13,18] \ GOTO GET_LOCATION:
	  IF FIRST_LOC$[1,6]="      "
	    LET FIRST_LOC$[1,6]=PLOC$[13,18]
	  ELSE 
		IF SECOND_LOC$[1,6]="      "
		   LET SECOND_LOC$[1,6]=PLOC$[13,18]
		ELSE 
		   IF THIRD_LOC$[1,6]="      "
			   LET THIRD_LOC$[1,6]=PLOC$[13,18]
		   ENDIF 
		 ENDIF 
	   ENDIF 
	   GOTO GET_LOCATION:
    endif
	END_GET_PROD_LOCATION: Rem
Return

get_prodlot_SWP: ! =======  SOUTHWEST

LET k23$=" ",k23$
LET k23$[1,12]=A$[140,151]
LET k23$[13,14]=H4[1] USING "##"
prodlot_loop: !  
SEARCH #23,3,4;k23$,R22,E \ IF E > 2 GOSUB Err_Search
IF k23$[1,12]<>A$[140,151] OR E=2 goto end_prodlot_SWP: 
LET WHSENO=k23$[13,14]
IF WHSENO<>H4[1] goto prodlot_loop: 
IF k23$[37,42]="STOCK " OR k23$[37,42]="NONE  " goto prodlot_loop: 
LET PERM$[1,6]=k23$[37,42]
end_prodlot_SWP: !
RETURN 
! ==========   end southwest custom code

GET_SPRODWHSE_REC: Rem
	K12$ = " ",K12$
	LET W1$ = " ",W1$
	K12$[1,12] = L1$[81,92];K12$[13,14] = L1[1] Using "##"
	Search #12,2,1;K12$,R12,E
	If E Return
	If K12$[1,12] <> L1$[81,92] Return
	WHSENO = K12$[13,14]
	If WHSENO <> L1[1] Return
	Mat Read #12,R12,0;W1$;
	Mat Read #12,R12,800;WHMISC;
	If W1$[13,13] <> "0" If W1$[13,16] <> "    " If W1$[13,13] <> "" Let WHSE_REC = 1
Return

PRINT_ALTERNATE_ITEM: Rem "===================checks for alternate items
	K24$ = " ",K24$ \ K24$ = A$[140,151];K24$[13] = ""
	GET_ALT_CODE: Rem
	Search #24,3,2;K24$,R[24],E \ If E = 2 Return
	If E Gosub Err_Search
	If K24$[1,12] <> A$[140,151] Return
	Mat Read #24,R[24],0;TAGCUST;
	If TAGCUST <> H0[4] Goto GET_ALT_CODE
	Z$ = K24$ To "/" \ I = 13 \ If Len(Z$) <> Len(K24$) Let I = Len(Z$) + 2
	Print #0; Tab TB[0];K24$[I]
	V9[1] = V9[1] + 1
Return

!-------------------------------------------------------------------------------
GET_CUST_ORD: ! " get customer po# from original order
	K4$ = " ",K4$;CUSTPO$ = " ",CUSTPO$
	For ORDSTAT = 1 To 4
		K4$[1,2] = ORDSTAT Using "##"
		K4$[3,8] = H3[4] Using "######"
		Search #4,2,1;K4$,REC4,E \ If E > 2 Gosub Err_Search
		If Not(E) Goto FOUND
	Next ORDSTAT
	Return
	FOUND: Rem
	Mat Read #4,REC4,104;H5;
	Mat Read #4,REC4,446;CUSTPO$;
Return

!-------------------------------------------------------------------------------
get_cust_ord_SWP: ! get customer po# from original order
  LET K4$=" ",K4$;S2$=" ",S2$
  let FOUNDORD=0
  FOR ORDSTAT=1 TO 7
    LET K4$[1,2]=ORDSTAT USING "##"
    LET K4$[3,8]=PL4[10] USING "######"
    SEARCH #4,2,1;K4$,REC4,E \ IF E > 2 GOSUB Err_Search
    IF NOT(E) LET FOUNDORD=1 \ GOTO FOUND_SWP:
  NEXT ORDSTAT
  IF NOT(FOUNDORD) GOTO end_cust_ord_SWP:  
  
  FOUND_SWP: REM
  MAT  READ #4,REC4,0;ROH0;
  MAT  READ #24,ROH0[2],126;S2$;
  LET CUST$=" ",CUST$
  LET SCRATCH$=" ",SCRATCH$
  LET SCRATCH$=ROH0[4] USING "######"
  SEARCH #6,2,1;SCRATCH$,R6,E \ IF E GOSUB Err_Search
  MAT  READ #6,R6,0;CUST$;
  end_cust_ord_SWP: ! 
RETURN 

!-------------------------------------------------------------------------------
convert: ! CONV REC=>DSPL
	CNVTA = L2[0] \ CNVTU[0] = 0
	CNVTU[1] = L1[5] \ CNVTU[2] = 2
	Gosub L_4200 \ Q1[0] = X3 ! unit cost
	CNVTA = L3[2] \ CNVTU[0] = 0
	CNVTU[1] = L1[4] \ CNVTU[2] = 1
	Gosub L_4200 \ Q1[1] = X3 ! qty ordered
	CNVTA = L3[3] \ CNVTU[0] = 0
	CNVTU[1] = L1[4] \ CNVTU[2] = 1
	Gosub L_4200 \ Q1[2] = X3 ! qty ship to date
	CNVTA = L3[4] \ CNVTU[0] = 0
	CNVTU[1] = L1[4] \ CNVTU[2] = 1
	Gosub L_4200 \ Q1[3] = X3 ! last qty recieved
	CNVTA = PL4[1] \ CNVTU[0] = 0
	CNVTU[1] = L1[4] \ CNVTU[2] = 1
	Gosub L_4200 \ PL4[1] = X3 ! "free goods
	CNVTA = PL4[0] \ CNVTU[0] = 0
	CNVTU[1] = L1[5] \ CNVTU[2] = 2
	Gosub L_4200 \ Q1[5] = X3 ! net cost
	CNVTA = PL4[3] \ CNVTU[0] = 0
	CNVTU[1] = L1[5] \ CNVTU[2] = 2
	Gosub L_4200 \ Q1[4] = X3 ! $ disc
	CNVTA = L3[2] \ CNVTU[0] = 0
	CNVTU[1] = pfu1[10] \ CNVTU[2] = 1
	Gosub L_4200 \ fuo = X3 ! full units ordered
	If PL4[2] <> 0 Let DISC = FNR(Q1[0] * PL4[2] / 100) Else Let DISC = Q1[4]
	If NSD3[8] Let CB = B[23] / NSD3[8] * L3[2] Else Let CB = 0
	If A[5] Let EXT_WGT = A[6] / A[5] * L3[2] Else Let EXT_WGT = 0
	IF PL4[15] LET EXT_CUBE=PL4[14]*(L3[2])/PL4[15] ELSE  LET EXT_CUBE=0      
Return

!-------------------------------------------------------------------------------
L_4200: ! CALL CONV
	x3 = 0
	CALL "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
	IF CNVTU[2]=0 return !!TEST IF VALID CONVERSION
	IF FLAG LET E=FLAG \ Gosub Err_Search
	LET X3=CNVTA
Return

!-------------------------------------------------------------------------------
L_4300: ! GET UNITS
	If X1 = -1 Let M1$ = "CWT " \ Goto L_4330
	If X1 = -3 Let M1$ = "LB  " \ Goto L_4330
	If X1 Read #13,X1,10;M1$;
L_4330: Return

!-------------------------------------------------------------------------------
get_whse: ! READ WAREHOUSE ADDRESS
	Mat Read #15,R15;N1$
	Mat Read #15,R15,4;N2$
	mat  read #15,R15,122;WHN1;
	whse1$ = N2$[1,30]
	whse2$ = N2$[31,60]
	whse3$ = N2$[61,90]
	whse4$ = N2$[91,105]," ",N2$[106,107]," ",N2$[108,112]
	If whse3$[1,1] > " " Goto L_6136
	whse3$ = whse4$
	whse4$ = " ",whse4$
L_6136: Return

!-------------------------------------------------------------------------------
get_POline: ! READ LINE ITEM
	Mat Read #9,R9;L1
	Mat Read #9,R9,12;L2
	Mat Read #9,R9,24;L3;
	Mat Read #9,R9,66;L1$;
	Mat Read #9,R9,232;PL4;
return

get_salesorder: !
	let pass=0
	let hist=0
	let cust$=" ",cust$
	let l7[2]=0
	let roh0[10]=0
	let k4$=" ",k4$
	FOR SCR=1 TO 6
		LET K4$[1,2]=SCR USING "##"
		LET K4$[3,8]=pl4[10] USING "######"
		SEARCH #4,2,1;K4$,r4,E
		if E > 1 Gosub Err_Search
		IF NOT(E)
			LET PASS=1
			LET SCR=6
		ENDIF
	NEXT SCR
	if not(pass)
		let k21$=" ",k21$
		LET K21$[1,6]=pl4[10] USING "######"
		SEARCH #21,3,3;k21$,r21,E
		let ordnum=k21$[1,6]
		if not(e) and ordnum=pl4[10]
			let invnum=k21$[7,16]
			let k19$=" ",k19$
			let k19$[1,2]=30 using "##"
			let k19$[3,12]=invnum using "##########"
			search #19,2,1;k19$,r19,e
			if not(e)
				let pass=1
				let hist=1
			endif
		endif
	endif
	if pass and not(hist)
		mat read #4,r4,0;roh0;
		scratch$ = " ",scratch$
		scratch$ = roh0[4] using "######"
		search #6,2,1;scratch$,r6,e			! customer
		if not(e)
			mat read #6,r6,0;cust$;
		endif
		let k18$=" ",k18$
		let k18$[1,6]=pl4[10] using "######"
		let k18$[7,9]=pl4[11] using "###"
		search #18,2,1;k18$,r18,e          ! order line
		if not(e)
				MAT  READ #18,r18,168;L7;
		endif
	endif
	if pass and hist
		mat read #19,r19,0;roh0;
		scratch$ = " ",scratch$
		scratch$ = roh0[4] using "######"
		search #6,2,1;scratch$,r6,e          ! customer
		if not(e)
			mat read #6,r6,0;cust$;
		endif
		let k20$=" ",k20$
		let k20$[1,10]=invnum using "##########"
		let k20$[11,13]=pl4[11] using "###"
		search #20,2,1;k20$,r20,e          ! invoice line
		if not(e)
			MAT  READ #20,r20,168;L7;
		endif
	endif
	LET CNVTA=L7[2] \ LET CNVTU[0]=0
	LET CNVTU[1]=L1[4] \ LET CNVTU[2]=1
	GOSUB L_4200: \ LET L7[2]=X3
return

chng_stat: ! CHANGE ORDER STATUS
	If H0 <> STAT[2]
		K3$ = STAT[2] Using "## "
		K3$[3] = H0[2] Using "######"
		Search #8,4,1;K3$,R8,E
		If E Gosub Err_Search
		K3$[1,2] = H0 Using "##"
		Search #8,5,1;K3$,R0,E
		If E Gosub Err_Search
		If R0 <> R8
			e$ = "UNEXPECTED REC # FROM DELETE"
			Gosub Err_Search
		end if
		H0 = STAT[2]
		Write #8,R8;H0;
	End If
	Unlock #8
Return

!-------------------------------------------------------------------------------
L_7700: !  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
	If Not(X2) Let X$ = "        "
Return

!-------------------------------------------------------------------------------
NewPage: ! PAGE  CONTINUE
	Let V9[2] = 62
	If CUSTOM_CUSTOMER$ = "SOUTHJERSEY" let V9[2] = 55
	if custom_customer$ = "SWP" let v9[2]=65
	if custom_customer$="SWP"
		print #0; tab 28; "CONTINUE ON PAGE ";P1+1;
	else
		PRINT #0; TAB 38;"CONTINUED ON PAGE ";P1+1;
	endif
	Gosub VFC
	Gosub Top_of_Form
	if custom_customer$="SWP"
		gosub header_SWP: 
	else
		gosub Header:
	endif
Return

Print_Detail_sjlabels: !
  PRINT #0; TAB 0;"LN"; TAB 6;"QTY"; TAB 10;"UNIT";         
  PRINT #0; TAB 16;"ITEM NUMBER/VENDOR #"; TAB 38;"LOCATION";
  PRINT #0; TAB 49;"DESCRIPTION";                           
  PRINT #0;                                                 
  LET V9[1]=V9[1]+1                                         
  PRINT #0; TAB 37;"TIER/HIGH"                              
  LET V9[1]=V9[1]+1                                         
  PRINT #0; TAB 0;PT1$[1,79]                                
  LET V9[1]=V9[1]+1                                         
return

print_sjline: ! PRINT DETAIL LINE  
LET TOTQTY=TOTQTY+(Q1[1]+PL4[1]-Q1[2])                
PRINT #0; USING "##"; TAB 0;L1[2];                    
PRINT #0; USING "#######"; TAB 0;Q1[1]+PL4[1]-Q1[2];  
LET X1=L1[4] \ GOSUB L_4300: \ PRINT #0; TAB 10;M1$;  
PRINT #0; TAB 16;L1$[81,92];                          
IF PLOC$[13,18]="" OR PLOC$[13,18]="      "           
  IF P9$[41,41]="N" LET PLOC$[13,18]=FIRST_LOC$[1,6]  
ENDIF  !"cct123606                                    
PRINT #0; TAB 38;PLOC$[13,18];                        
PRINT #0; TAB 49;L1$[1,30];                           
PRINT #0;"" \ LET V9[1]=V9[1]+1                       
IF QTYBO PRINT #0; TAB 3;"**B/O**";                   
IF WHSE_REC=0 PRINT #0; TAB 16;L1$[61,80];            
IF WHSE_REC=1 PRINT #0; TAB 16;W1$[13,30];            
PRINT #0; USING "####"; TAB 37;WHMISC[4];"/";         
PRINT #0;WHMISC[5];                                   
PRINT #0;""                                           
LET V9[1]=V9[1]+1                                     
IF PL4[10] ! "indirect orders, from a sales order      
   PRINT #0; USING "SALES ORDER ######"; TAB 49;PL4[10] 
   LET V9[1]=V9[1]+1                                    
ENDIF                                                  
return
!-------------------------------------------------------------------------------
VFC: ! VERTICAL FORMS CONTROL --- MOVE TO LINE V9[2]
	If V9[1] >= V9[2] Return !ALREADY THERE OR PAST!
	Print #0;V1$[V9[1],V9[2] - 1];
	V9[1] = V9[2]
Return

!-------------------------------------------------------------------------------
Top_of_Form: ! TOP OF FORMS ---V9[3]=FORM LENGTH
	V9[2] = 1
	Print #0;"\14\";
	V9[1] = 1
Return

!-------------------------------------------------------------------------------
! ALIGNMENT: Rem "======================================= alignment form
! 	SCR = 0
! 	Print @0,22;'CE RB';"PRINT ALIGNMENT FORM? (Y/<CR>/E) ";
! 	If SCR
! 		Print @0,22;'CE RB';"PRINT ANOTHER ALIGNMENT FORM? (Y/<CR>/E) ";
! 	End If
! 	SCR = 1
! 	Input ""Z$
! 	Print @0,22;'CE'
! 	If Z$ = "E" Goto Outend
! 	If Z$ <> "Y" And Z$ <> "" Goto ALIGNMENT
! 	If Z$ <> ""
! 		VEND1$ = "X",VEND1$
! 		VEND2$ = "X",VEND2$
! 		VEND3$ = "X",VEND3$
! 		VEND4$ = "X",VEND4$
! 		SHIPTO1$ = "X",SHIPTO1$
! 		SHIPTO2$ = "X",SHIPTO2$
! 		SHIPTO3$ = "X",SHIPTO3$
! 		SHIPTO4$ = "X",SHIPTO4$
! 		H$ = "X",H$ \ H3[3] = 999999 \ H8[0] = 999999 \ L1$ = "X",L1$
! 		A$ = "X",A$
! 		For X = 2 To 5 \ H0[X] = 999999 \ Next X
! 		Q1[0] = 99999 \ Q1[1] = 999999 \ L3[2] = 999 \ L2[0] = 9999
! 		L1[4] = 1
! 		Gosub header
! 		Gosub print_line
! 		!GOSUB PRINT_TOTALS:
! 		Gosub Top_of_Form
! 	End If
! Return

!-------------------------------------------------------------------------------
! #include call.input.i  
!-------------------------------------------------------------------------------

L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E) \ If E Return
	X2 = X$[1,5] \ Return 1
! 	DT3[0] = X2;DT3[1] = X2;FLAG = 0
! 	Call "JULIANUTIL",DT3[],X$,FLAG
Return

!--------------------------------------------------------------
! #include rtn.error.s
Err_Escape: !
ERR_TRAP: Rem
If Spc(8) = 123
	Escdis
	Escclr
	Return -1
End If
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
Goto ERR_MAIN
ERR_MAIN: Rem
If Err 0 Rem
e$ = msg$
If Spc(8) <> 10000 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[])
Stop
!
!
Else
  include "src/callmainerrnet.inc"
End Try
!
!---------------------------------------------------------------------------

Outend: ! EXIT
If returnstatus=not(goodStatus)  ! error
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	Call AddToStr(e$,rstr$,WebStr$)
Else
		
	tmp$=bsdel$+"status"+fdel$+rdel$+"Status"+fdel$+"Message"+fdel$
	if not(ordercntr)
		tmp$=tmp$+rdel$+str$(not(goodStatus))+fdel$+"No orders matched selected criteria!"+fdel$
	else
		if prid$="P"  ! pdf
			! call env(1,"WEBPATH",tmp$)
			! System "touch "+tmp$+"/"+pdffilename$+".here"
			if s9[0] and not(indord) ! shopprint
				tmp$=tmp$+"PDF"+fdel$+rdel$+str$(goodStatus)+fdel$
				tmp$=tmp$+"Click OK for PDF"+fdel$+pdffilename$+fdel$
			else
				! call env(2,"PDF",pdffilename$)
				Call SetOutPut(e$,rstr$,2)
				End
			end if
		else
			tmp$=tmp$+rdel$+str$(returnstatus)+fdel$+"Report print successfully."+fdel$
		end if
	end if
	Call AddToStr(e$,rstr$,tmp$+rdel$+esdel$)
End If
!
Call SetOutPut(e$,rstr$)
end
stop


