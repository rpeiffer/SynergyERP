! >>> Program 143
!
! description Salesman Master File Listing
!
! loadsave -w -n 100,10 -o prog/dxport/143.dl4 src/143.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 30, 2006  11:16:00
Rem /w2/papermaster/r2005/
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX143   SALESMAN PRINT
Rem
Rem "Last Update:  04/21/1992 roman. minimum gross profit/clean up
!
Declare Intrinsic Sub InpBuf,String
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
dIM 1%,DD2,4%,CNT2,x4,work$[50]
Dim 3%,C4,S7[14,2],S3[9]
Dim 2%,X2,C5[1],P,S9[3],X1,R[20],E,V9[4]
Dim 1%,F,X,C2[2],A1,A2
Dim A$[8],S1$[118],F$[16]!!A$[10]
Dim C$[15],S$[2],T2$[30],C1$[1],S2$[50]
Dim A0$[30],A2$[8],D1$[10],X$[10]!!A2$[3]
Dim 3%,S2[19,5]
Dim 3%,C1[3]
Dim J$[14],J1$[14],J2$[14],J3$[14],J4$[14]
Dim 3%,J1,J2,J4
Dim A5$[130]
Dim H1$[3],CNAME$[30]
! -  dx add xport reporting code
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[1000],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[100],rstr$[200],bsdel$[10],esdel$[10],rdel$[50]
!
Read #1,88,1808;F$; \ Ropen #3,F$
Read #1,88,1824;F$; \ Ropen #13,F$
Read #1,18,60;D1$;
Mat Read #1,3;CNAME$;
V9[1] = 99
V9[0] = 0
If Err 0 Let V9[0] = Spc(8)
N = Chf(0)
!If Err 0 Gosub ERR_ESCAPE
V9[3] = 55
If V9[0] Let V9[3] = 22
V9[0] = 0
A$ = ""
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!K1$ = " "
J1 = 90 \ J2 = 0
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"143",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("SCODE",tmp$) \ A1 = tmp$
call dxget("ECODE",tmp$) \ if tmp$ = "" Let A2 = 999 else Let A2 = tmp$
!
! VALIDATIONS
if A1 < 0 or A1 > 999 Let e$ = "Invalid starting code, must be between 0 and 999!" \ error 10000
If A2 < A1 or A2 > 999 Let e$ = "Invalid ending code, must be between starting code and 999!" \ error 10000
!
A2$ = A2 Using "###"
A$ = A1 Using "###"
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
IF J8  !!!!
  tmp$ = "SALESMAN NUMBER",fdel$
  tmp$ = tmp$,"NAME",fdel$
  tmp$ = tmp$,"ADDRESS",fdel$
  tmp$ = tmp$,"ADDRESS2",fdel$
  tmp$ = tmp$,"STATE",fdel$
  tmp$ = tmp$,"ZIP CODE",fdel$
  tmp$ = tmp$,"PHONE",fdel$
  tmp$ = tmp$,"E-MAIL ADDRESS",fdel$
  tmp$ = tmp$,"TYPE",fdel$
  tmp$ = tmp$,"COMM%",fdel$
  tmp$ = tmp$,"MIN GP",fdel$
  tmp$ = tmp$,"SALES MTD",fdel$
  tmp$ = tmp$,"SALES YTD",fdel$
  tmp$ = tmp$,"FAX NUMBER",FDEL$
  TMP$ =TMP$,"VIA TYPE",fdel$
  tmp$=tmp$,"SLS GRP",fdel$
  tmp$=tmp$,"DFT WHSE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF 
!
L_1500: Rem
H1$ = A2$
A2$[1,3] = " ",A2$[1,3]
A2$[3 - Len(H1$) + 1,3] = H1$
!!Print 'CS CR';"Printing...please wait";
!!If V9[3] < 30 Print 'CS'
Signal 3,0
H1$ = A$[1,3]
A$[1,3] = " ",A$[1,3]
A$[3 - Len(H1$) + 1,3] = H1$
V9[0] = 0
Search #13,2,1;A$,R[9],E 
If Not(E) Goto L_2050
L_2030: Search #13,3,1;A$,R[9],E 
If E Goto L_9100
If A2$ = A$[1,Len(A2$)] Goto L_2060
L_2050: If A$[1,3] > A2$ Goto L_9100
L_2060: Rem
A0$ = A$
Gosub L_7000
Gosub L_5800
Gosub L_5000
A$ = A0$
Goto L_2030
!
L_5000: Rem.
J$ = C1 Using "##.###"
J4$ = J4 Using "##########"
J2$ = C1[3] Using "###,###,###.##"
J1$ = C1[2] Using "###,###,###.##"
!
IF not(j8)
  Print #0; Tab 2;S1$[116,118]; Tab 16;S1$[1,30];
  Print #0; Tab 49;S1$[31,60]; Tab 81;C1[1];
  Print #0; Tab 86;J$; Tab 95;J1$; Tab 112;J2$;
  If S1$[61,90] <> "" Print #0;"\15\"; Tab 49;S1$[61,90];!!address 2
  Print #0;"\15\"; Tab 49;S1$[91,105]; Tab 68;S1$[106,107];
  Print #0; Tab 73;S1$[108,115];
  If C1[1] = 0 Print #0; Using "#####"; Tab 86;S3[0]
  If C1[1] > 0 Print #0; Tab 86;"N/A"
  If S2$ <> ""
    Print #0; Tab 16;S2$
    V9[1] = V9[1] + 1
  End If 
  
  let x4=cnt2 \  gosub disphone: 
  print #0;tab 55;tmp1$;
  if dd2=0 print #0; tab 80;"Print";
  if dd2=1 print #0; tab 80;"Fax";
  if dd2=2 print #0; tab 80;"Email";
  ! task 57290 - reg - add salesgroup and default whse
  Print #0; Using "####";Tab 96;s3[9]; ! "GRP: ";
  print #0; Using "##";tab 106;s3[3]; ! "WH: ";
  print #0;"" ! end of line
  LET V9[1]=V9[1]+1         
  A5$[1,130] = "-",A5$[1,130]
  Print #0;A5$
else
  tmp$=rtrim$(S1$[116,118]),fdel$
  tmp$=tmp$,rtrim$(S1$[1,30]),fdel$
  tmp$=tmp$,rtrim$(S1$[31,60]),fdel$!!address 1
  tmp$=tmp$,rtrim$(S1$[61,90]),fdel$!!address 2
  tmp$=tmp$,rtrim$(S1$[106,107]),fdel$!!state
  tmp$=tmp$,rtrim$(S1$[108,115]),fdel$!!zip
  tmp$=tmp$,rtrim$(S1$[91,105]),fdel$!!phone
  tmp$=tmp$,rtrim$(S2$),fdel$!!
  tmp$=tmp$,C1[1] Using "##",fdel$!!type
  tmp$=tmp$,rtrim$(J$),fdel$
  If C1[1] = 0 tmp$=tmp$,S3[0] Using "#####",fdel$
  If C1[1] > 0 tmp$=tmp$,"N/A",fdel$
  tmp$=tmp$,rtrim$(J1$),fdel$
  tmp$=tmp$,rtrim$(J2$),fdel$
  let x4=cnt2 \ gosub disphone: 
  tmp$=tmp$,rtrim$(tmp1$),fdel$
  let tmp1$="Print"
  if dd2=1 let tmp1$="Fax"  
  if dd2=2 let tmp1$="Email"  
  tmp$=tmp$,tmp1$,fdel$
  tmp$=tmp$,Str$(S3[9]),fdel$,Str$(s3[3]),fdel$ ! slsgrp & whse
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF
!
X1 = C2
V9[1] = V9[1] + 4
Return 
!
L_5800: Rem NEW PAGE ROUTINE
if j8 return
!
If V9[1] < V9[3] Return 
If V9[0] = 0 Goto L_5870
If V9[3] > 30 Goto L_5860
!Input "\15\PRESS <CR> TO CONTINUE "F$
!Print 'CS'
L_5860: Print #0;"\14\";
L_5870: Print #0; Tab (Int(66 - (Len(CNAME$) / 2)));CNAME$;
V9[0] = V9[0] + 1
Print #0;"\15\";" - 143 -"; Tab 10;"DATE"; Tab 15;Msc$(3);
Print #0; Tab 57;D1$;" MASTER FILE";
Print #0; Tab 105;"PAGE # "; Tab 113;V9[0];"\15\\15\";
Print #0; Tab 2;D1$;" #"; Tab 20;"NAME"; Tab 55;
Print #0;"ADDRESS"; Tab 80;"TYPE"; Tab 87;"COMM %";
Print #0; Tab 99;"SALES MTD"; Tab 114;"SALES YTD"
Print #0; Tab 20;"EMAIL ADDRESS"; Tab 87;"MIN GP $"
Print #0; tab 55;"FAX NUMBER";TAB 80;"VIA";
PRINT #0; TAB 96;"GRP";TAB 105;"WHSE" ! ;
Print #0;" "
V9[1] = 7
Return 
!
L_7000: Rem READ SALESMAN RECORD
Mat Read #13,R[9],0;S1$;
Mat Read #13,R[9],118;C1;
Mat Read #13,R[9],131;J2;
Mat Read #13,R[9],142;S2;
Mat Read #13,R[9],862;S3;
Mat Read #13,R[9],922;S2$;
MAT read #13,r[9],1062;CNT2;
MAT read #13,r[9],1070;DD2;

C1[2] = 0;C1[3] = 0
For I = 0 To 19
  C1[2] = C1[2] + S2[I,2]
  C1[3] = C1[3] + S2[I,3]
Next I
Return 

DISPHONE: REM display phone number 
TMP1$=""
IF NOT(X4)                                                     
  LET TMP1$="                  "                                 
ELSE                                                           
  LET WORK$=" ",WORK$;WORK$=STR$(X4)                            
  IF LEN(WORK$)>11                                             
	 IF WORK$[1,2]="11" LET Tmp1$="0"                            
	 let tmp1$=tmp1$+WORK$[1,LEN(WORK$)]
	 GOTO END_DISPHONE:            
  ENDIF                                                        
  IF WORK$[1,1]="1"                                            
	 LET ONEFLAG=TRUE;WORK$=WORK$[2]                            
  ELSE                                                         
	 LET ONEFLAG=FALSE                                          
  ENDIF                                                        
  IF LEN(WORK$)>7                                              
	 IF ONEFLAG tmp1$="1-"                                    
	 let tmp1$=tmp1$+WORK$[1,3]+"-"+WORK$[4,6]+"-"+WORK$[7,10]+" "!PRINT WORK$[1,3];"-";WORK$[4,6];"-";WORK$[7,10];" ";       
  ELSE                                                         
     IF ONEFLAG tmp1$="1-"                                     
	 let tmp1$=tmp1$+WORK$[1,3]+"-"+WORK$[4,7]+"          "   !PRINT WORK$[1,3];"-";WORK$[4,7];"          ";              
  ENDIF                                                        
ENDIF                                                          
END_DISPHONE: RETURN                     
!
L_9100: Rem NO MORE
If V9[3] < 30 Goto L_9140
if not(j8) Print #0;"\15\\15\\15\-- END --"
If V9[3] > 30 Goto L_9150
L_9140: !!Input "\15\PRESS <CR> TO EXIT "F$
L_9150: Goto OUTEND
Stop 
!
OUTEND: Rem EXIT ROUTINE
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
