!!>>> Program 147
!
! description: Salesman Commission Grid Print
!
! loadsave -w -n 100,10 -o prog/dxport/147.dl4 src/147.src
!
! 1.0 mm/dd/yyyy change??


Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 25, 2004  16:36:20
Rem /w/papermaster/r2002//usr/acct/dgh/work/r2002/mx1/mx147.src (univ2) [dgh] {61567}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc"  ! dx
include "src/inc/fileprtdefault.inc" ! port default
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault
Declare External Function getuidrec,getuidinfo$
Declare Intrinsic Sub FindF,InpBuf,String
Declare Intrinsic function findchannel
!Option Default Dialect IRIS1
Rem MX147          salesman commission grid print
Rem Author:        Roman  (07/30/1992)
Rem                UNIVERSAL BUSINESS SYSTEMS
If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @1,1;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
dim prt. as prtdefault ! port defaults
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],X1,2%,CG1[99,11]
Dim 1%,CHNL,CHNLFREE,SCR1
Dim 2%,N1[4],X2,V9[4],CG[13],X3
Dim 4%,J1
Dim Z1$[50],X$[10],F$[16],CNAME$[30],TITLE$[30],N1$[12],a1$[12]
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40]
Dim J7$[75],J9$[75],K2$[6],CG$[6],SCRATCH$[80],AHYPO$[1]
! -  dx add xport reporting code
Dim 1%,v1,v2,v3,v4,v5
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
! dx error handling variables
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] 
!
For I = 2 To 2
  Read F \ If F = -1 Goto L_830
  Read #1,88,Abs(F);F$;
  If F >= 0 Open #I,F$
  If F < 0 Ropen #I,F$
L_830: Next I
Data "-1584"
Gosub GET_USRCTL
If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[4] = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[4] = 55 \ If J8 Let V9[4] = 18
Read #1,3;CNAME$;
TITLE$ = "SALESMAN COMMISSION GRID      "
!

call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
call GetPortDefault(e$,IntCO,UserID$,portnum,rec_uac,prt.) ! get port default
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"147",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
! CALL DXSAVE(0,"tmp/147in.txt!")
n1$=" ",n1$ ! start with space not null!
call dxget("SGRIDCLASS",tmp$) \ if rtrim$(tmp$)="" v1=0 else v1=tmp$
call dxget("EGRIDCLASS",tmp$) \ if rtrim$(tmp$)="" v2=999 else v2=tmp$
call dxget("SORDTYPE",tmp$) \ if rtrim$(tmp$)="" v3=0 else v3=tmp$
call dxget("EORDTYPE",tmp$) \ if rtrim$(tmp$)="" v4=99 else v4=tmp$
call dxget("SMATCODE",tmp$) \if rtrim$(tmp$)="" let N1$[11,11]="" else let N1$[11,11]=tmp$
call dxget("EMATCODE",tmp$) \if rtrim$(tmp$)="" LET N1$[12,12] = "z" ELSE let N1$[12,12] =tmp$
call dxget("PRNTASCEND",tmp$) \if rtrim$(tmp$)="A" LET N1[0] = 0 ELSE let N1[0]=1
call dxget("PRNTPERCENT",tmp$) \if rtrim$(tmp$)="" LET N1[1] = 0 ELSE let N1[1] = 1
call dxget("HIPOT",a1$) \ A1$=UCase$(RTrim$(A1$))
if ucase$(rtrim$(a1$))="H" ! hypo
	ch_usrctl=findchannel()
	Ropen #CH_USRCTL,"cntrl/usercntrl"
	Try
		Read #CH_USRCTL,rec_uac,338;AHYPO$;
	Else
		AHYPO$="N"
	End try
	Try Close #ch_usrctl Else Rem
endif
!
X2 = v1 \ if X2 < 0  or X2 > 999 let e$="Invalid starting grid class, must be between 0 and 999!" \ error 10000
X3 = v2 \ if X3 < X2 or X3 > 999 let e$="Invalid ending grid class, must be between starting grid class and 999!" \ error 10000
X2 = v3 \ if X2 < 0  or X2 > 99  let e$="Invalid starting order type, must be between 0 and 99!" \ error 10000
X3 = v4 \ if X3 < X2 or X3 > 99  let e$="Invalid ending order type, must be between starting order type and 99!" \ error 10000
if N1$[11,11] > N1$[12,12] let e$="Invalid ending material code, must be >= than starting material code!" \ error 10000

N1$[1,3]=v1 Using "###" 
N1$[4,6]=v2 Using "###"
N1$[7,8]=v3 Using "##"
N1$[9,10]=v4 Using "##"

If AHYPO$ = "Y" 
	Gosub HYPO_QUEST
else
	if ucase$(rtrim$(a1$))="H"
		let e$="Hypothetical Option is Not Available" \ error 10000
	endif
endif

!!L_1000: Rem "=================================== get ranges
!Gosub L_6000
!L_1010: J5$ = " <CR> FOR FIRST,  E: TO EXIT";J0$ = "1 00032104";J1$ = "   "
!Gosub L_7000 \ N1$[1,3] = J$
!If J4$ = "E" Goto OUTEND
!If J$ < "   " Or J$ > "999" Goto L_1010
!L_1025: J5$ = " <CR> FOR LAST,  E: TO EXIT";J0$ = "1 00033504";J1$ = "999"
!Gosub L_7000 \ N1$[4,6] = J$
!If J4$ = "E" Goto OUTEND
!If J$ < "   " Or J$ > "999" Goto L_1025
!If N1$[4,6] < N1$[1,3] Gosub L_1390 \ Goto L_1010
!L_1050: J5$ = " <CR> FOR FIRST,  E: TO EXIT";J0$ = "1 00022205";J1$ = " "
!Gosub L_7000 \ N1$[7,8] = J$
!If J4$ = "E" Goto OUTEND
!J5$ = " <CR> FOR LAST,  E:  TO EXIT";J0$ = "1 00023605";J1$ = "99"
!Gosub L_7000 \ N1$[9,10] = J$
!If J4$ = "E" Goto OUTEND
!If N1$[9,10] < N1$[7,8] Gosub L_1390 \ Goto L_1050
!L_1090: J5$ = " <CR> FOR FIRST";J0$ = "1 00012306";J1$ = " "
!Gosub L_7000 \ N1$[11,11] = J$
!J5$ = " <CR> FOR LAST";J0$ = "1 00013706";J1$ = "z"
!Gosub L_7000 \ N1$[12,12] = J$
!If N1$[12,12] < N1$[11,11] Gosub L_1390 \ Goto L_1090
!L_1130: J5$ = "ENTER  A: FOR ASCENDING,  D: FOR DESCENDING, OR   E: TO EXIT";J0$ = "2 00014915";J1$ = "A"
!Gosub L_7000
!If J4$ = "E" Goto OUTEND
!If J$ <> "A" And J$ <> "D" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1130
!N1[0] = 0 \ If J$ = "D" Let N1[0] = 1
!L_1155: J5$ = "ENTER  Y: ,  N: , OR  E: TO EXIT";J0$ = "2 00014916";J1$ = "N"
!Gosub L_7000
!If J4$ = "E" Goto OUTEND
!If J$ <> "Y" And J$ <> "N" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1155
!N1[1] = 0 \ If J$ = "Y" Let N1[1] = 1

!Goto L_1400
!L_1390: J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! " \ Gosub L_7600 \ Return 
!
!!L_1400: If AHYPO$ = "Y" Gosub HYPO_QUEST   !!!!!!!!!
!L_1450: Rem "================== all picked
!Print @10,22;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$
!If Z1$ = "E" Goto OUTEND
!If Z1$ = "R" Goto L_1000
!If Z1$ <> "P" Goto L_1450

!!If V9[4] = 18 Print 'CS'
!!If Err 0 Gosub ERR_ESCAPE
!!
!!
!
if J8 ! dx xml, setup rstr$
  tmp$="GRID CLASS",fdel$  
  tmp$=tmp$,"ORDER TYPE",fdel$  
  tmp$=tmp$,"MATERIAL CODE",fdel$  
  tmp$=tmp$,"FOR MERCHANDISE $'S",fdel$
  tmp$=tmp$,"FOR GROSS PROFIT $'S",fdel$
  tmp$=tmp$,"MINIMUM GROSS PROFIT $'S",fdel$
  tmp$=tmp$,"%",fdel$
  for i=1 to 12
  	tmp$ = tmp$,"$",i,fdel$	
  next i
  for i=1 to 12
  	tmp$ = tmp$,"$",i," VALUE",fdel$	
  next i
  call addtostr(e$,rstr$,tmp$+rdel$)
  L9=1
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
K2$ = " ",K2$;K2$[1,3] = N1$[1,3];K2$[4,5] = N1$[7,8];K2$[6,6] = N1$[11,11]

Search #2,2,1;K2$,R[2],E !\ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2020
L_2000: Rem "=============================================== print loop
Search #2,3,1;K2$,R[2],E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
L_2020: Rem "check pick criteria

If K2$[1,3] < N1$[1,3] Goto L_2000
If K2$[1,3] > N1$[4,6] Goto L_9100
If K2$[4,5] < N1$[7,8] Goto L_2000
If K2$[4,5] > N1$[9,10] Goto L_2000
If K2$[6,6] < N1$[11,11] Goto L_2000
If K2$[6,6] > N1$[12,12] Goto L_2000
!If V9[4] <> 18 Print @0,22;'CL';"Printing...";K2$;
Mat Read #2,R[2],0;CG$;
Mat Read #2,R[2],6;CG;
Mat Read #2,R[2],62;CG1;
Gosub L_5800
If N1[0] = 0 Let I1 = 0;I2 = 99;I3 = 1
If N1[0] = 1 Let I1 = 99;I2 = 0;I3 = -1
For I = I1 To I2 Step I3
  If Not(N1[1])
    I4 = CG1[I,0] + CG1[I,1] + CG1[I,2] + CG1[I,3] + CG1[I,4] + CG1[I,5] + CG1[I,6]
    I4 = I4 + CG1[I,7] + CG1[I,8] + CG1[I,9] + CG1[I,10] + CG1[I,11]
    If Not(I4) Goto L_2190
  End If 
  If V9[1] > V9[4] Gosub L_5800
  Gosub L_5000
L_2190: Next I
Goto L_2000

HYPO_QUEST: Rem---------------------------------------------------
!!J5$ = "ENTER  A: FOR ACTUAL,  H: FOR HYPOTHETICAL, OR  E: TO EXIT";J0$ = "2 00014917";J1$ = "A"
!Gosub L_7000
!If J4$ = "E" Goto OUTEND
!If J$ <> "A" And J$ <> "H" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto HYPO_QUEST
J$ = ucase$(rtrim$(a1$))
If J$ = "H"
  SCRATCH$ = "2/COMMGRIDH" + Str$(IntCo) ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
  Call FindF(SCRATCH$,SCR)
  If SCR
    Close #2
    Open #2,SCRATCH$
    HYPO = 1
  Else 
!    Print @0,23;'CL';"HYPOTHETICAL GRID DOES NOT EXIST.  USE 146 TO CREATE. ";
!    Input ""SCRATCH$
!    Goto HYPO_QUEST
	 J$ = "A"   !!add
  End If 
End If 
Return 

GET_USRCTL: Rem ---------------------------------------------------
CHNL = 99 \ Gosub GETCHAN \ CH_USRCTL = CHNL
CHNL = CHNL - 1 \ Gosub GETCHAN \ CH_USRPORT = CHNL
Ropen #CH_USRPORT,"cntrl/userport"
Ropen #CH_USRCTL,"cntrl/usercntrl"
!Read #CH_USRPORT,Spc(6);SCR1;
SCR1=GetUIDRec(e$,IntCo,Userid$)
If SCR1 = -1 Let AHYPO$ = "Y" Else Let AHYPO$ = "N"
If SCR1 > 0
  Read #CH_USRCTL,SCR1,338;AHYPO$;
End If 
Close #CH_USRPORT,#CH_USRCTL
Return 
GETCHAN: Rem------------------------------------------get an open channel
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
CHNLFREE: Rem------------------------------------is chan  being used??
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
E = Chf(CHNL)
If Err 0 Gosub ERR_TRAP
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
Return 
L_5000: Rem "=============================================== print line

IF NOT(J8)
	Print #0; Using "###%"; Tab 1;I; Tab 7;
	For Q = 0 To 11
	  Print #0; Using "###.##% ";CG1[I,Q];
	Next Q
	Print #0;""
ELSE  !!XML

  tmp$=K2$[1,3],fdel$  
  tmp$=tmp$,K2$[4,5],fdel$  
  tmp$=tmp$,K2$[6,6],fdel$  

  If CG[12] = 1
	tmp$=tmp$,"1",fdel$  !for merchandise
	tmp$=tmp$," ",fdel$  !for gross profit
  else
	tmp$=tmp$," ",fdel$  !for merchandise
	tmp$=tmp$,"1",fdel$  !for gross profit
  end if
  If CG[12] = 1
    tmp$=tmp$,"1",fdel$  !minimum gross
  else
    tmp$=tmp$," ",fdel$  !minimum gross
  end if

  tmp$=tmp$,I,fdel$  
  For Q = 0 To 11
    tmp$=tmp$,CG[Q],fdel$  
  Next Q
  For Q = 0 To 11
    tmp$=tmp$,CG1[I,Q],fdel$  
  Next Q
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF

V9[1] = V9[1] + 1

Return 
L_5800: Rem "=============================================== heading

if J8 return

!If V9[0] If V9[4] = 18 Input @0,23;"PRESS <CR> TO CONTINUE  "X$ \ Print 'CS';
If V9[0] If V9[4] <> 18 if not(j8) Print #0;"\14\";
V9[0] = V9[0] + 1;V9[1] = 8
Print #0; Tab 1;"MX147"; Tab (37 - Len(TITLE$) / 2);TITLE$; Tab 70;"PAGE";V9[0]
Z1$ = Msc$(3);Z1$ = Z1$[1,12]
Print #0; Tab 1;Z1$; Tab (37 - Len(CNAME$) / 2);CNAME$
If HYPO Print #0; Tab 25;"HYPOTHETICAL GRIDS" Else Print #0; Tab 30;"ACTUAL GRIDS"
Print #0;" "
Print #0; Tab 2;"GRID CLASS- ";K2$[1,3];
Print #0;", ORDER TYPE- "; \ If K2$[4,5] = " 0" Print #0;"ALL"; Else Print #0;K2$[4,5];
Print #0;", MATERIAL CODE- "; \ If K2$[6,6] = " " Print #0;"ALL"; Else Print #0;K2$[6,6];
If CG[12] = 1 Print #0;", FOR MERCHANDISE $'S" Else Print #0;", FOR GROSS PROFIT $'S"
If CG[12] = 1 Print #0; Using "MINIMUM GROSS PROFIT $$,$$#"; Tab 2;CG[13] \ V9[1] = V9[1] + 1
Print #0;" "
Print #0; Tab 3;"%  ";
For Q = 0 To 11
  Print #0; Using " >$$$$$#";CG[Q];
Next Q
Print #0;" " \ Print #0;""
Return 
!L_6000: Rem "========================================== screen

!Print 'CS'
!Print @0,0;"MX147";@28,0;"SALESMAN COMMISSION GRID PRINT"
!Print @17,2;"-STARTING-";@33,2;"-ENDING-";
!Print @1,4;"GRID CLASS";
!Print @1,5;"ORDER TYPE";
!Print @1,6;"MATERIAL CODE";
!Print @1,15;"PRINT IN ASCENDING OR DESCENDING ORDER? (A/D/E)"
!Print @1,16;"PRINT LINES WITHOUT PERCENTAGES? (Y/N/E)"
!If AHYPO$ = "Y" Print @1,17;"PRINT ACTUAL OR HYPOTHETICAL GRIDS (A/H/E)"
!Return 


!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1] 
!J6 = J0$[2,2] 
!J2 = J0$[3,4] 
!J3 = J0$[5,6] 
!J4 = J0$[7,8] 
!J5 = J0$[9,10] 
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!
!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!
!L_7145: For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7265,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!
!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!  If J9$[J8,J8] = " " Goto L_7235
!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next J8
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 


!!L_7600:
!If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return 

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
!
L_9100: Rem "end of range
!If V9[4] = 18 Input @0,23;"PRESS <CR> TO CONTINUE  "X$ \ Print 'CS';

Goto OUTEND
!Stop 
!
L_XML:!
!		Declare External Function PerSaveToLog$
!		External Lib "xmlg.dl4"
!		x$ = PerSaveToLog$("", "147.TXT", rstr$) 
Return
!
OUTEND: Rem OUT
!!Print 'CS'; \ Close 
!!Chain "MX000"
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  GOSUB L_XML
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
Try Call dxclose() ELSE REM
End 
!Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 


