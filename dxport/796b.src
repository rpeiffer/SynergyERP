! >>> Program 796b
!
! description FIFO / LIFO Stock Inventory Value Ledger
!             by Transaction Code
!
! loadsave -w -n 100,10 -o prog/dxport/796b.dl4 src/796b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  9, 2006  15:55:52
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx77/mx796b.src (univ2) [txc] {04847}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX796B - FIFO/LIFO INVENTORY VALUE LEDGER CARD BY TRANSACTION CODES
Rem AUTHOR: EWR   DEC 31, 1983
Rem LAST UPDATE:  03/1997 - FIFO USES JULIAN DATES
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA[1],A[33],AMOUNT
If Err 0 Gosub ERR_TRAP
Dim A$[156],T1$[15],COST$[1]
Dim 3%,CCOST[35],VCOST[35],4%,TCOST[35]
Dim 3%,DISP_QTY,DISP_EXT,DISP_COST
Dim 4%,COST[3],COSTV,TCOSTV
Dim 2%,CAT[4],VEND[4],DATEX[1],WHSE,OPROD$[12],NPROD$[12],PROD1$[12],PROD2$[12]
Dim VNAME$[30]
Dim PK$[12],K9$[60],S1$[24]
Dim 2%,B[24],D3[1],JDATE[1]
Dim SUNIT$[4]
Dim X$[10]
Dim 1%,FL1[2],FL1$[80],2%,FL2[3],3%,FL3[8]
Dim 1%,FT1[3],FT1$[72],2%,FT2[3],3%,FT3[3]
Dim 3%,R[23],P60$[50],FLT$[50],FLK$[50]
Dim FTK$[50]
Dim J$[40],J0$[10],J1$[40],J2$[20]
Dim 1%,F,X1,2%,X2,3%,J,comd,comd1,COMD2
Dim U9$[30],P$[8]
Dim T9$[26]
Dim U8$[131]
Dim U5$[50],D8$[8],K1$[50]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[300],tmp1$[300],tmp2$[300],tmp3$[300]
dim tmp4$[300],tmp5$[800],tmp6$[800],COMD$[5],COMD1$[12],begtmp$[50]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
J8 = Spc(5)
J$ = Int((J8 - Int(J8 / 16384) * 16384) / 64) Using "CNTRL# "
For I = 2 To 7
  Read L
  If L = -1 Goto L_855
  Read #1,88,L;J$;
  Ropen #I,J$
L_855: Next I
Read #1,3;U9$;
Data "3008","1792","3024","0","1984","1728"
Mat Read #1,0,100;D8$;
Mat Read #1,60,50;P60$;
L_900: Rem GET PRINTER TYPE
!!F = 0
If Err 0 Let F = Spc(8)
F = 0 \ P = Chf(0) 
J8 = F \ L8 = 60 
if Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
L8 = 60 \ If F Let L8 = 22
F = 0 \ P = 0 \ L = 90
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"796b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("SORTVENDOR",tmp$) \ IF tmp$ = "" let VEND[0] = 0 else Let VEND[0] = 99  
call dxget("SVEND",tmp$) \ VEND[1] = tmp$
call dxget("EVEND",tmp$) \ If tmp$ = "" Let VEND[2] = 999999 else Let VEND[2] = tmp$
call dxget("SORTSALES",tmp$) \ If tmp$ = "" Let CAT[0] = 0 else Let CAT[0] = 99 !!SORT BY PRODUCT SALES CATEGORY
call dxget("SCAT",tmp$) \ CAT[1] = tmp$ !! Starting Product Category
call dxget("ECAT",tmp$) \ IF tmp$ = "" Let CAT[2] = 99 else Let CAT[2] = tmp$ !! Ending Product Category
call dxget("SPROD",PROD1$) \ PROD1$ = PROD1$,Blank$ !! Starting Product Code
call dxget("EPROD",PROD2$) \ PROD2$ = PROD2$,EndParam$ !! Ending Product Code
call dxget("SDATE",tmp$) \ DATEX[0] = tmp$ !! Starting Date (MMDDYY)
call dxget("EDATE",tmp$) \ If tmp$ = "" Let DATEX[1] = 999999 else Let DATEX[1] = tmp$ !! Ending Date (MMDDYY)
call dxget("WHSE",tmp$) \ WHSE = tmp$ !!Warehouse #
call dxget("COST",COST$)  !!Inventory Cost 'A' for actual, 'L' for load
call dxget("TOTFLAG",tmp$) \ If tmp$ = "" Let TOTFLAG = 0 else Let TOTFLAG = 99 !!Print Totals Only (Y/N)
!
IF VEND[0]
  if VEND[1] < 0 or VEND[1] > 999999 Let e$ = "Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
  if VEND[2] < VEND[1] or VEND[2] > 999999 Let e$ = "Invalid ending vendor code, must be between starting vendor code and 999999!" \ error 10000
ELSE
  VEND[1] = 0
  VEND[2] = 999999
END IF
!
IF CAT[0]
  if CAT[1] < 0 or CAT[1] > 99 Let e$ = "Invalid starting product category, must be between 0 and 99!" \ error 10000
  if CAT[2] < CAT[1] or CAT[2] > 99 Let e$ = "Invalid ending product category, must be between starting product category and 99!" \ error 10000
ELSE
  CAT[1] = 0
  CAT[2] = 99
END IF
!
If PROD2$ < PROD1$ Let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
If DATEX[1] <> 999999 and DATEX[0] <> 0
  tmp1$ = DATEX[0] Using "&&&&&&"
  DATEX[0] = tmp1$[5,6],tmp1$[1,4] \ X2 = DATEX[0]
  Gosub L_7820 \ e$ = "Invalid starting date!" \ error 10000
  JDATE[0] = X2
  !
  tmp1$ = DATEX[1] Using "&&&&&&"
  DATEX[1] = tmp1$[5,6],tmp1$[1,4] \ X2 = DATEX[1]
  Gosub L_7820 \ e$ = "Invalid ending date!" \ error 10000
  JDATE[1] = X2
  !
  If JDATE[1] <= JDATE[0] Let e$ = "Invalid ending date, must be between starting date and 123199!" \ error 10000
Else
  JDATE[0] = 0 \ JDATE[1] = 36525
End if 
!
If WHSE < 0 Or WHSE > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!!If Err 0 Gosub ERR_ESCAPE
!!If P60$[9,9] = "F" Print @0,0;'CS'; Tab 15;"FIFO INVENTORY VALUE LEDGER BY TRANSACTION CODES"
!!If P60$[9,9] = "L" Print @0,0;'CS'; Tab 15;"LIFO INVENTORY VALUE LEDGER BY TRANSACTION CODES"
!!L_1010: Print @0,2;'CL';"SORT BY VENDOR (Y/N) OR 'E' TO END "; \ Input ""J2$
!!If J2$ = "E" Goto OUTEND
!!If J2$ = "N" Let VEND[0] = 0 \ Goto L_1100
!!If J2$ <> "Y" Goto L_1010
!!L_1030: VEND[0] = 99 \ VEND[1] = 0 \ VEND[2] = 999999
!!Print @0,2;'CE';"Enter Starting Vendor Code, <CR> for all, 'E' to end: ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1100
!!VEND[1] = J2$
!!Print @0,3;'CE';"Enter Ending Vendor Code, <CR> for last, 'E' to end : ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1075
!!VEND[2] = J2$
!!L_1075: If VEND[2] >= VEND[1] Goto L_1100
!!Print @0,23;'CL RB';"Ending Vendor Code must be greater than Starting Vendor Code";
!!Signal 3,30
!!Goto L_1030
!!L_1100: Print @0,6;'CE';"SORT BY PRODUCT SALES CATEGORY (Y/N) OR 'E' TO END ";
!!Input ""J2$
!!If J2$ = "E" Goto OUTEND
!!If J2$ = "N" Let CAT = 0 \ Goto L_1200
!!If J2$ <> "Y" Goto L_1100
!!L_1125: CAT[0] = 99 \ CAT[1] = 0 \ CAT[2] = 99
!!Print @0,6;'CE';"Enter Starting Product Category, <CR> for all, 'E' to end: ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1200
!!CAT[1] = J2$
!!Print @0,7;'CE';"Enter Ending Product Category, <CR> for last, 'E' to end : ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1175
!!CAT[2] = J2$
!!L_1175: If CAT[2] >= CAT[1] Goto L_1200
!!Print @0,23;'CL RB';"Ending Category must be greater than Starting Category";
!!Signal 3,30 \ Goto L_1125
!!L_1200: PROD1$ = " ",PROD1$ \ PROD2$ = "}",PROD2$
!!Print @0,10;'CE';"Enter Starting Product Code, <CR> for all, 'E' to end: ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1300
!!PROD1$ = J2$
!!Print @0,11;'CE';"Enter Ending Product Code, <CR> for last, 'E' to end : ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1250
!!PROD2$ = J2$
!!L_1250: If PROD2$ >= PROD1$ Goto L_1300
!!Print @0,23;'CL RB';"Ending Product Code must be greater than Starting Product";
!!Signal 3,30
!!Goto L_1200
!!L_1300: Rem ENTER DATE
!!DATEX[0] = 0;JDATE[0] = 0;DATEX[1] = 999999;JDATE[1] = 36525
!!L_1310: Print @0,14;'CE';"Enter Starting Date (MMDDYY),<CR> for all, 'E' to end: ";
!!Input ""J2$
!!If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1400
!!If Len(J2$) <> 6 Goto L_1310
!!X2 = J2$;J2$ = X2 Using "&&&&&&"
!!J0$ = J2$[5,6],J2$[1,4] \ DATEX[0] = J0$[1,6]
!!X2 = DATEX[0] \ Gosub L_7820 \ Goto L_1310
!!JDATE[0] = X2
!!L_1340: Print @0,15;'CL';"Enter Ending Date (MMDDYY), <CR> for last, 'E' to end: ";
!!Input ""J2$ \ J0$ = J2$[5,6],J2$[1,4]
!!If J2$ = "" Goto L_1370
!!If J2$ = "E" Goto OUTEND
!!If Len(J2$) <> 6 Goto L_1340
!!X2 = J2$;J2$ = X2 Using "&&&&&&"
!!J0$ = J2$[5,6],J2$[1,4] \ DATEX[1] = J0$[1,6]
!!X2 = DATEX[1] \ Gosub L_7820 \ Goto L_1340
!!JDATE[1] = X2
!!L_1370: If JDATE[1] >= JDATE[0] Goto L_1400
!!Print @0,23;'CL RB';"Ending Date must be greater than Starting Date";
!!Signal 3,30 \ Goto L_1300
!!L_1400: Rem ENTER WAREHOUSE
!!WHSE = 0
!!L_1405: Print @0,18;'CL';"Enter Warehouse #, <CR> for all, 'E' to end: ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1500
!!WHSE = J2$ \ If WHSE < 0 Goto L_1405
!!If WHSE > 99 Goto L_1405
!!L_1500: Rem COST TO USE
!!L_1505: Print @0,20;'CL';"Enter Inventory Cost 'A' for actual, 'L' for load, 'E' to end: ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "A" Let COST$ = "A" \ Goto L_1550
!!If J2$ <> "L" Goto L_1505
!!COST$ = "L"
!!L_1550: Rem choose to print totals only
!!Print @0,21;'CL';"Print Totals Only (Y/N) or E: exit "; \ Input ""J2$
!!If J2$ = "E" Goto OUTEND
!!TOTFLAG = 0
!!If J2$ = "N" Goto L_1600
!!If J2$ <> "Y" Goto L_1550
!!TOTFLAG = 99
!L_1600: Print @0,23;'CL';"SORTING...PLEASE WAIT....";
!
If J8
  IF VEND[0] Let tmp$ = "VENDOR CODE",fdel$,"VENDOR NAME",fdel$ else Let tmp$ = ""
  IF CAT[0] Let tmp$ = tmp$,"CATEGORY CODE",fdel$,"CATEGORY",fdel$
  IF Not(TOTFLAG) Let tmp$ = tmp$,"PRODUCT CODE",fdel$,"DESCRIPTION 1",fdel$,"DESCRIPTION 2",fdel$
  !!tmp$ = tmp$, "TRANS DESC HEAD",fdel$,
  tmp$ = tmp$, "T/C",fdel$,"TRANS DESC",fdel$
  tmp$ = tmp$, "U/M",fdel$
  tmp$ = tmp$, "BEG BAL",fdel$
  tmp$ = tmp$, "DEBITS",fdel$
  tmp$ = tmp$, "CREDITS",fdel$
  tmp$ = tmp$, "TOTAL",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
tmp1$ = "" \ tmp2$ = "" \ tmp3$ = "" \ comd = 1
!
K9$ = " ",K9$
L_1610: 
Search #9,3,1;K9$,R[9],E
If E = 2 Goto L_1705
Search #9,5,1;K9$,R[9],E
If E Let e$ = "syserrorfile 796b sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_1610
!
!!Print @0,23;'CL';"SORTING....PLEASE WAIT....";
L_1705: Rem
FLK$ = " ",FLK$ \ FLK$[1,Len(PROD1$)] = PROD1$
L_1750:
Search #2,3,1;FLK$,R[2],E 
If E = 2 Goto L_1990
If FLK$[1,Len(PROD2$)] > PROD2$ Goto L_1990
Gosub L_8000
If WHSE If WHSE <> FL1[0] Goto L_1750
If CAT[0] = 0 And VEND[0] = 0 Goto L_1900
PK$ = " ",PK$ \ PK$[1,12] = FLK$[1,12]
Search #3,2,1;PK$,R[3],E 
If E  Goto L_1750
Mat Read #3,R[3],156;B;
If CAT If B[11] < CAT[1] Goto L_1750
If CAT If B[11] > CAT[2] Goto L_1750
If VEND If B[24] < VEND[1] Goto L_1750
If VEND If B[24] > VEND[2] Goto L_1750
L_1900: Rem SORT FOR DETAIL & TRANSACTION CODE
FTK$ = " ",FTK$ \ FTK$[1,6] = R[2] Using "######"
L_1910: 
Search #4,3,1;FTK$,R[4],E 
If E = 2 Goto L_1750
Gosub L_8100
If FT2[0] <> R[2] Goto L_1750
If FT2[2] > JDATE[1] Goto L_1910
If FT1[0] = 66 Goto L_1910
K9$ = " ",K9$
If VEND Let K9$[1,6] = B[24] Using "######"
If CAT Let K9$[7,8] = B[11] Using "##"
K9$[9,20] = FT1$[1,12]
K9$[21,22] = FT1[0] Using "##"
K9$[23,28] = FT2[2] Using "######"
K9$[29,36] = R[4] Using "########"
R[9] = R[4]
Search #9,4,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 796b sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_1910
!
L_1990: 
For X = 0 To 3 \ COST[X] = 0 \ CCOST[X] = 0 \ VCOST[X] = 0 \ Next X
COSTV = 0 \ TCOSTV = 0
F9 = 99
OPROD$ = " ",OPROD$
K9$ = " ",K9$ \ CAT[3] = 99 \ VEND[3] = 999999
L_2000: 
Search #9,3,1;K9$,R[9],E
If E = 2 Goto L_9100
If Not(VEND[0]) Goto L_2035
VEND[4] = K9$[1,6] \ If VEND[4] = VEND[3] Goto L_2035
Gosub L_4200
CAT[3] = K9$[7,8]
Gosub L_3000
L_2035: 
VEND[3] = VEND[4]
If Not(CAT) Goto L_2065
CAT[4] = K9$[7,8] \ If CAT[4] = CAT[3] Goto L_2065
Gosub L_4100
CAT[3] = CAT[4]
Gosub L_3100
L_2065: 
CAT[3] = CAT[4]
NPROD$ = K9$[9,21] \ If OPROD$ <> NPROD$ Gosub L_3300
NTRAN = K9$[21,22] \ If NTRAN <> OTRAN Gosub L_5000 \ Gosub L_2900
OTRAN = NTRAN
R[4] = R[9] \ Gosub L_8100
R[2] = FT2[0] \ Gosub L_8000
If FT2[2] < JDATE[0] Goto L_2000
If COST$ = "A"
  UCOST = FT3[1]
  LOTCOST = FL3[6]
End If 
If COST$ = "L"
  UCOST = FT3[2]
  LOTCOST = FL3[7]
End If 
DISP_EXT = FNR(FT3[0] * UCOST)
If PFU1[11] > 0 And PFU1[11] <> PFU1[0] ! cost<>base um
  DISP_QTY = FT3[0];DISP_COST = UCOST
  Gosub CALC_DISP_EXT
End If 
COST = COST + DISP_EXT
If UCOST <> LOTCOST
  COSTV = COSTV - DISP_EXT
  DISP_EXT = FNR(FT3[0] * LOTCOST)
  If PFU1[11] > 0 And PFU1[11] <> PFU1[0] ! cost<>base um
    DISP_QTY = FT3[0];DISP_COST = LOTCOST
    Gosub CALC_DISP_EXT
  End If 
  COSTV = COSTV + DISP_EXT
End If 
Goto L_2000
!
L_2900: Rem TOTALS CALC
If VEND
  VCOST[L1] = VCOST[L1] + COST[0]
  VCOST[35] = VCOST[35] + COSTV
End If 
If CAT
  CCOST[L1] = CCOST[L1] + COST[0]
  CCOST[35] = CCOST[35] + COSTV
End If 
TCOST[L1] = TCOST[L1] + COST[0]
TCOST[35] = TCOST[35] + COSTV
TCOSTV = TCOSTV + COSTV
COST = 0;COSTV = 0
Return 
!
L_3000: Rem VENDOR CODE LOOKUP
F9 = 0
L = 99
VNAME$ = "NOT ON FILE!!!!"
K1$[1,6] = VEND[4] Using "######"
Search #5,2,1;K1$,R[5],E
If E = 1 Goto L_3040
Mat Read #5,R[5],0;VNAME$;
L_3040: 
Gosub L_5800
!
If J8 
  tmp1$ = VEND[4],fdel$,rtrim$(VNAME$[1,30]),fdel$
  If CAT Goto L_3115
  return
End if
!
Print #0;"" \ L = L + 1
Print #0; Using "######";"VENDOR: ";VEND[4];"  ";VNAME$;
If CAT Goto L_3115
Print #0;"" \ L = L + 1
Return 
!
L_3100: Rem PRINT CAT TOTALS
F9 = 0
Gosub L_5800
If Not(J8) Print #0;" " \ L = L + 1
L_3115: S1$ = "INVALID CATEGORY"
If CAT[3] > 0 And CAT[3] < 21 Mat Read #6,CAT[3],0;S1$;
!
If J8 
  tmp2$ = CAT[3],fdel$,rtrim$(S1$),fdel$
  Return
End if
!
Print #0; Using "##"; Tab 50;"CATEGORY: ";CAT[3];"  ";S1$ \ L = L + 1
Return
!
L_3300: Rem LOOK UP PRODUCT
Gosub L_5000 \ Gosub L_2900
If TCOSTV
  COST[0] = TCOSTV
  OTRAN = 35
  Gosub L_5000
End If 
!
TCOSTV = 0
COST[3] = 0
K1$ = " ",K1$ \ K1$[1,12] = NPROD$
A$ = " ",A$ \ A$[9,38] = "**** PRODUCT NOT ON FILE *****"
Search #3,2,1;K1$,R[3],E 
If E Goto L_3355
Mat Read #3,R[3],0;A$;
Mat Read #3,R[3],512;PFU1;
Mat Read #3,R[3],554;PFU2;
Gosub L_6000
L1 = 0 \ OTRAN = 0
L_3355: Rem print product description
!
If Not(TOTFLAG)
  If J8 
    If Not(comd)
	  tmp6$ = tmp4$,"",fdel$,"",fdel$,COMD$,fdel$
	  tmp6$ = tmp6$,COMD2,fdel$,"",fdel$
	  tmp6$ = tmp6$,"",fdel$,COMD2,fdel$
      call addtostr(e$,rstr$,tmp6$+rdel$)
	End if
    Gosub L_5800
    tmp3$ = rtrim$(K1$[1,12]),fdel$,rtrim$(A$[9,37]),fdel$,rtrim$(A$[63,90]),fdel$
    comd = 0
    Gosub L_5799
  Else
    Print #0;"" \ L = L + 1
    Gosub L_5800
    Print #0;K1$[1,12];" ";A$[9,37];" ";A$[63,90] \ L = L + 1
    Gosub L_5025
  End if
End If 
OPROD$ = NPROD$
Gosub L_2900
Return 
!
L_4000: Rem PRINT GRAND TOTALS
Gosub L_4200
COST[3] = 0
U8$ = "=",U8$
Gosub L_5800
If CAT[0] Or VEND[0] Goto L_4040
If Not(J8) Print #0;U8$[1,131] \ L = L + 1
Gosub L_5800
L_4040: 
!
If J8
  If Not(comd)
    tmp6$ = tmp4$,"",fdel$,"",fdel$,COMD$,fdel$
    tmp6$ = tmp6$,COMD2,fdel$,"",fdel$
    tmp6$ = tmp6$,"",fdel$,COMD2,fdel$
    call addtostr(e$,rstr$,tmp6$+rdel$)
	comd = 1
  End if
End if
!
If Not(J8) Print #0; Tab 2;"*** GRAND TOTALS ***";
L1 = 0 \ OTRAN = 0 \ COST = TCOST[0]
If J8 
  If Not(VEND) If Not(CAT) If TOTFLAG Let comd = 0 \ Gosub L_5110 
Else
  Gosub L_5125
End if
!
For X = 1 To 35
  If Not(TCOST[X]) Goto L_4075
  COST = TCOST[X] \ OTRAN = X
  If J8
    If TOTFLAG If Not(VEND) If Not(CAT) Gosub L_5100
  Else
    Gosub L_5100
  End if
L_4075: Next X
If Not(J8) Print #0;U8$[1,131] \ L = L + 1
For X = 0 To 35 \ TCOST[X] = 0 \ Next X
COST = 0 \ OTRAN = 0
Return 
!
L_4100: Rem PRINT CATEGORY TOTALS
If F9 Return 
Gosub L_5000 \ Gosub L_2900
COST[3] = 0
If Not(CAT[0]) Return 
U8$ = "-",U8$
Gosub L_5800
!
If J8
  If Not(comd)
    tmp6$ = tmp4$,"",fdel$,"",fdel$,COMD$,fdel$
    tmp6$ = tmp6$,COMD2,fdel$,"",fdel$
    tmp6$ = tmp6$,"",fdel$,COMD2,fdel$
    call addtostr(e$,rstr$,tmp6$+rdel$)
	comd = 1
  End if
End if
!
If Not(J8)
  Print #0;U8$[1,131]
  Print #0; Using "######"; Tab 2;"TOTAL FOR CATEGORY: ";CAT[3];" ";S1$[1,24];
End if
L1 = 0 \ OTRAN = 0 \ COST = CCOST[0]
!
If J8 
  If TOTFLAG Let comd = 0 \ Gosub L_5110 
Else 
  Gosub L_5125
End if
!
For X = 1 To 35
  If Not(CCOST[X]) Goto L_4180
  COST = CCOST[X] \ OTRAN = X
  If J8 
    If TOTFLAG Gosub L_5100
  Else
   Gosub L_5100
  End if
L_4180: Next X
If Not(J8) Print #0;U8$[1,131] \ L = L + 1
For X = 0 To 35 \ CCOST[X] = 0 \ Next X
COST = 0 \ OTRAN = 0
Return 
!
L_4200: Rem PRINT VENDOR TOTALS
If F9 Return 
Gosub L_4100
COST[3] = 0
If Not(VEND[0]) Return 
U8$ = "=",U8$
Gosub L_5800
If CAT Goto L_4220
If Not(J8) Print #0;U8$[1,131] \ L = L + 1
Gosub L_5800
L_4220:
!
If J8
  If Not(comd)
	If Not(TOTFLAG) Or (Not(CAT) and TOTFLAG)
	  tmp6$ = tmp4$,"",fdel$,"",fdel$,COMD$,fdel$
	  tmp6$ = tmp6$,COMD2,fdel$,"",fdel$
	  tmp6$ = tmp6$,"",fdel$,COMD2,fdel$
	  call addtostr(e$,rstr$,tmp6$+rdel$)
	  comd = 1
	End if
  End if
End if
!
If Not(J8) Print #0; Using "######"; Tab 2;"TOTAL FOR VENDOR: ";VEND[3];" ";VNAME$[1,30];
L1 = 0 \ OTRAN = 0 \ COST = VCOST[0]
!
If J8 
  If TOTFLAG and Not(CAT) Let comd = 0 \ Gosub L_5110 
Else 
  Gosub L_5125
End if
!
For X = 1 To 35
  If Not(VCOST[X]) Goto L_4280
  COST = VCOST[X] \ OTRAN = X
  If J8 
    If TOTFLAG and Not(CAT) Gosub L_5100 
  Else 
    Gosub L_5100 
  End if
L_4280: 
Next X
If Not(J8) Print #0;U8$[1,131] \ L = L + 1
For X = 0 To 35 \ VCOST[X] = 0 \ Next X
COST = 0 \ OTRAN = 0
Return 
!
L_4300: Rem READ TC
If L1 = 35
  T1$ = "COST VARIANCE  "
Else 
  J = L1 - 1
  Read #1,108,J * 15;T1$[1,15];
End If 
Return 
!
L_5000: Rem PRINT TRANSACTION CODE SUMMARY
If J8
  If Not(COST[0]) Return 
  If Not(TOTFLAG)
    Gosub L_5800
    tmp$ = OTRAN Using "##",fdel$
  Else 
    tmp$ = ""
  End if
  L1 = OTRAN \ Gosub L_4300
  If TOTFLAG Return
  comd = 1
  L_5799: !!If Not(L1) Let T1$ = "BEG BALANCE"
  If L1 Let tmp5$ = rtrim$(T1$[1,15]),fdel$ Else Let tmp5$ = ""
  SUNIT$ = " ",SUNIT$ \ If PFU1[0] > 0 Mat Read #7,PFU1[0],10;SUNIT$;
  If PFU1[0] = -1 Let SUNIT$ = "CWT "
  If L1 Let tmp5$ = tmp5$,SUNIT$[1,4],fdel$ 
  If L1 
    If COST >= 0 
	  tmp5$ = tmp5$, begtmp$, FNR(COST) Using "########.##",fdel$
	  tmp5$ = tmp5$,"",fdel$
	End if
    If COST < 0 
	  tmp5$ = tmp5$, begtmp$,"",fdel$
	  tmp5$ = tmp5$, Abs(FNR(COST)) Using "########.##",fdel$
	End if
  Else
	If COST[0] < 0 Let tmp5$ = tmp5$, FNR(COST[0]) Using "---------.##",fdel$ 
    If COST[0] >= 0 Let tmp5$ = tmp5$, FNR(COST[0]) Using "#########.##",fdel$
  End if  
  COST[3] = COST[3] + FNR(COST)
  If L1
    If COST[3] >= 0 Let tmp5$ = tmp5$, COST[3] Using "###########.##",fdel$
    If COST[3] < 0 Let tmp5$ = tmp5$, COST[3] Using "-----------.##",fdel$
  End if
  If Not(comd)
    If Not(TOTFLAG) Let tmp4$ = tmp1$,tmp2$,tmp3$ Else Let tmp4$ = tmp1$,tmp2$
	!tmp4$ = tmp4$,tmp5$
    begtmp$ = tmp5$
	If COST[0] < 0 Let COMD2 = FNR(COST[0]) Using "---------.##",fdel$ 
    If COST[0] >= 0 Let COMD2 = FNR(COST[0]) Using "#########.##",fdel$    
	COMD$ = SUNIT$[1,4]
  Else
    tmp6$ = tmp4$,tmp$,tmp5$ 
    call addtostr(e$,rstr$,tmp6$+rdel$)
  End if
  Return
End if
!
If Not(COST[0]) Return 
If Not(TOTFLAG)
  Gosub L_5800
  Print #0; Using "##"; Tab 50;OTRAN;
End If 
L1 = OTRAN \ Gosub L_4300
If TOTFLAG Return 
L_5025: 
If Not(L1) Let T1$ = "BEG BALANCE"
Print #0; Tab 55;T1$[1,15];
SUNIT$ = " ",SUNIT$ \ If PFU1[0] > 0 Mat Read #7,PFU1[0],10;SUNIT$;
If PFU1[0] = -1 Let SUNIT$ = "CWT "
Print #0; Tab 71;SUNIT$[1,4];
If Not(L1) If COST[0] < 0 Print #0; Using "---------.##"; Tab 76;FNR(COST[0]); \ Goto L_5065
If Not(L1) If COST[0] >= 0 Print #0; Using "#########.##"; Tab 76;FNR(COST[0]); \ Goto L_5065
If COST >= 0 Print #0; Using "########.##"; Tab 89;FNR(COST);
If COST < 0 Print #0; Using "########.##"; Tab 101;Abs(FNR(COST));
L_5065: COST[3] = COST[3] + FNR(COST)
If COST[3] >= 0 Print #0; Using "###########.##"; Tab 114;COST[3];
If COST[3] < 0 Print #0; Using "-----------.##"; Tab 114;COST[3];
Print #0;""
Return 
!
L_5100: Rem PRINT totals TRANSACTION CODE SUMMARY
If J8
  If Not(COST[0]) Return 
  Gosub L_5800
  tmp$ = OTRAN Using "##",fdel$
  L1 = OTRAN \ Gosub L_4300
  comd = 1
  L_5110:!! If Not(L1) Let T1$ = "BEG BALANCE"
  If L1 Let tmp5$ = rtrim$(T1$[1,15]),fdel$ Else Let tmp5$ = ""
  SUNIT$ = " ",SUNIT$ \ If PFU1[0] > 0 Mat Read #7,PFU1[0],10;SUNIT$;
  If PFU1[0] = -1 Let SUNIT$ = "CWT "
  If L1 Let tmp5$ = tmp5$,SUNIT$[1,4],fdel$ 
  If L1 
    If COST >= 0 
	  tmp5$ = tmp5$, begtmp$, FNR(COST) Using "########.##",fdel$
	  tmp5$ = tmp5$,"",fdel$
	End if
    If COST < 0 
	  tmp5$ = tmp5$, begtmp$, "",fdel$
	  tmp5$ = tmp5$, Abs(FNR(COST)) Using "########.##",fdel$
	End if
  Else
	If COST[0] < 0 Let tmp5$ = tmp5$, FNR(COST[0]) Using "---------.##",fdel$ 
    If COST[0] >= 0 Let tmp5$ = tmp5$, FNR(COST[0]) Using "#########.##",fdel$
  End if  
  COST[3] = COST[3] + FNR(COST)
  If L1
    If COST[3] >= 0 Let tmp5$ = tmp5$, COST[3] Using "###########.##",fdel$
    If COST[3] < 0 Let tmp5$ = tmp5$, COST[3] Using "-----------.##",fdel$
  End if
  If Not(comd)
	tmp4$ = tmp1$,tmp2$ \ begtmp$ = tmp5$
    If COST[0] < 0 Let COMD2 = FNR(COST[0]) Using "---------.##",fdel$ 
    If COST[0] >= 0 Let COMD2 = FNR(COST[0]) Using "#########.##",fdel$    
	COMD$ = SUNIT$[1,4]
  Else
    tmp6$ = tmp4$,tmp$,tmp5$
    call addtostr(e$,rstr$,tmp6$+rdel$)
  End if
  Return 
End if
!
If Not(COST[0]) Return
Gosub L_5800
Print #0; Using "##"; Tab 50;OTRAN;
L1 = OTRAN \ Gosub L_4300
L_5125: If Not(L1) Let T1$ = "BEG BALANCE"
Print #0; Tab 55;T1$[1,15];
SUNIT$ = " ",SUNIT$ \ If PFU1[0] > 0 Mat Read #7,PFU1[0],10;SUNIT$;
If PFU1[0] = -1 Let SUNIT$ = "CWT "
!
Print #0; Tab 71;SUNIT$[1,4];
If Not(L1) If COST[0] < 0 Print #0; Using "---------.##"; Tab 76;FNR(COST[0]); \ Goto L_5165
If Not(L1) If COST[0] >= 0 Print #0; Using "#########.##"; Tab 76;FNR(COST[0]); \ Goto L_5165
If COST >= 0 Print #0; Using "########.##"; Tab 89;FNR(COST);
If COST < 0 Print #0; Using "########.##"; Tab 101;Abs(FNR(COST));
L_5165: COST[3] = COST[3] + FNR(COST)
!
If COST[3] >= 0 Print #0; Using "###########.##"; Tab 114;COST[3];
If COST[3] < 0 Print #0; Using "-----------.##"; Tab 114;COST[3];
Print #0;""
Return 
!
L_5800: 
if J8 return
!
L = L + 1
If L < L8 Return 
If P = 0 Goto L_5825
!!If L8 = 22 Print @0,23;'CL';"PRESS <CR> TO CONTINUE "; \ Input ""X$
!!If L8 = 22 Print 'CS';
L_5825: 
If P Print #0;"\14\";
T9$ = "" \ Call Time(T9$)
Print #0;"\15\ - 796B - ";COST$;" - ";T9$;
Print #0; Tab (Int(66 - Len(U9$) / 2));U9$
P = P + 1
Print #0; Tab 10;"DATE: ";D8$;
If P60$[9,9] = "F" Print #0; Tab 30;"F I F O   I N V E N T O R Y   V A L U E   L E D G E R   (TRANSACTION CODES)";
If P60$[9,9] = "L" Print #0; Tab 30;"L I F O   I N V E N T O R Y   V A L U E   L E D G E R   (TRANSACTION CODES)";
Print #0; Tab 110;"PAGE";P
If WHSE Print #0; Using "##"; Tab 5;"FOR WAREHOUSE: ";WHSE;
If Not(WHSE) Print #0; Tab 5;"FOR ALL WAREHOUSES";
X2 = DATEX[0] \ Gosub L_8900
Print #0; Tab 38;"FOR THE PERIOD BEGINNING ";P$[1,8];" THRU ";
X2 = DATEX[1] \ Gosub L_8900
Print #0;P$[1,8]
Print #0;" "
Print #0; Tab 50;"T/C"; Tab 55;"TRANS DESC";
Print #0; Tab 71;"U/M";
Print #0; Tab 82;"BEG BAL"; Tab 93;"DEBITS"; Tab 105;"CREDITS";
Print #0; Tab 123;"TOTAL";
Print #0;""
L = 8
Return 
!
L_6000: Rem PRODUCT BEGINNING BALANCE
For X = 0 To 2 \ COST[X] = 0 \ Next X
FLK$ = " ",FLK$ \ FLK$[1,12] = NPROD$[1,12]
FLK$[13,14] = WHSE Using "##"
L_6020:
Search #2,3,1;FLK$,R[2],E
If E = 2 Goto L_6090
If FLK$[1,12] <> NPROD$[1,12] Goto L_6090
Gosub L_8000
If WHSE And WHSE <> FL1[0] Goto L_6090
If COST$ = "A" Let UCOST = FL3[6]
If COST$ = "L" Let UCOST = FL3[7]
FTK$ = " ",FTK$ \ FTK$[1,6] = R[2] Using "######"
L_6055: 
Search #4,3,1;FTK$,R[4],E 
If E = 2 Goto L_6020
Gosub L_8100
If FT2[0] <> R[2] Goto L_6020
If FT2[2] < JDATE[0]
  DISP_EXT = FNR(FT3[0] * UCOST)
  If UCOST
    If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
      DISP_QTY = FT3[0];DISP_COST = UCOST
      Gosub CALC_DISP_EXT
    End If 
  End If 
  COST[0] = COST[0] + DISP_EXT
End If 
Goto L_6055
!
L_6090: ! end of beginning balance
Return 
!
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return 
!!D3[0] = X2;FLAG = 1;X$ = " "
!!Call "JULIANUTIL",D3[],X$,FLAG
!!Return 
!!Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
!!X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 2 !!Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
!!X$ = X2 Using "&&&&"
!!D3[0] = X$[1,2];D3[1] = X$[3,4]
!!If D3[0] > 67 Let D3[0] = 1900 + D3[0]
!!If D3[0] < 68 Let D3[0] = 2000 + D3[0]
!!X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
!!X2 = X$[1,6] \ Return 
!
L_8000: Rem READ FIFOLOT
Mat Read #2,R[2],0;FL1;
Mat Read #2,R[2],6;FL1$
Mat Read #2,R[2],86;FL2;
Mat Read #2,R[2],102;FL3;
Return 
!
L_8100: Rem READ FIFOTRANS FILE
Mat Read #4,R[4],0;FT1$;
Mat Read #4,R[4],72;FT1;
Mat Read #4,R[4],80;FT2;
Mat Read #4,R[4],96;FT3;
Return 
!
L_8900: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
If Not(X2) Let U5$ = " 000000"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_5000 \ Gosub L_2900
Gosub L_4000
!!If L8 = 22 Print @0,23;'CL';"PRESS <CR> TO CONTINUE "; \ Input ""X$
!!Goto L_900
!!End 
Goto OUTEND !!add
!
CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
CNVTA[0] = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 1 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA[0] = DISP_COST;CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !! If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
!
If J8
  If Not(comd)
    tmp6$ = tmp4$,"",fdel$,"",fdel$,COMD$,fdel$
    tmp6$ = tmp6$,COMD2,fdel$,"",fdel$
    tmp6$ = tmp6$,"",fdel$,COMD2,fdel$
    call addtostr(e$,rstr$,tmp6$+rdel$)
	comd = 1
  End if
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
!!If L8 = 22 Print @0,23;'CL';"PRESS <CR> TO EXIT "; \ Input ""X$
!!Print 'CS'
!!Chain "MX000C"
!!Stop
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
!