! >>> Program 499
!
! description Claim Purge
! loadsave -w -n 100,10 -o prog/dxport/499.dl4 src/499.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem SN499    PURGE CLOSED CLAIMS
Rem
Rem AUTHOR:   ubs  July  23, 1993
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY  1, 2001  10:43:25
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx1/sn499.src (univ2) [kag] {39050}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,formatdate2$,PDate$
Declare External Function buildsort
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Dim 2%,intco
Dim rstr$[5000],Message$[600]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim nextblockid$[8],WebStr$[600],blank$[200]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim K1$[30],K2$[30]
Dim CLM$[114],CLM1$[42]
Dim 1%,CLM1[1]
Dim 3%,CLM2[2]
Dim 2%,CLAIM[1],VENDNO[1]
Dim 2%,CLM[4],PDATE
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],Y
Dim 2%,X,X1,DT3[1],JPDATE,JWDATE
Dim 3%,J1,X2
Dim J$[50],J0$[15],J1$[50],J2$[20],J4$[50],J5$[70],J7$[40]
Dim J8$[8],J9$[50],X$[10]
blank$=" ",blank$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
For J = 2 To 3
  Read J1 \ If J1 = -1 Goto L_830
  Read #CTLC,88,J1;J$[1,16];
  Open #J,J$
L_830: Next J
Data "1472","-1"
Read #CTLC,0,100;J8$;
returnstatus=0
message$="NO PURGE DATE"
L_900: Rem
!Print 'CS';@0,0;'ED';"CLOSED CLAIM PURGE";@50,0;"SN499"
!Print @0,4;'CE';"ENTER CLAIM DATE TO PURGE UP TO, <CR>: ABORT";
!Print @45,5;"mmddyy";
!Print @10,7;"STARTING CLAIM";@12,8;"ENDING CLAIM";
!Print @10,10;"STARTING VENDOR";@12,11;"ENDING VENDOR";
L_1000: Rem START OF RANGE ENTRY
!J5$ = "";J1 = 0
!J0$ = "5000 645 4"
!Gosub L_7000
call dxget("PURDAT",tmp$) ! every time it does dates it's different???? what's it now?
J4$=tmp$;X$=tmp$[5,6],tmp$[1,4] ! hopefully date = MMDDYY
j1=x$
! call programdump("tmp/ccp499d!","") ! dump vars
If J4$ = "" Or J1 = 0 Goto OUTEND
message$="" ! reset to null
PDATE = J1
X2 = PDATE \ Gosub L_7820 \ returnstatus=1
JPDATE = X2
if returnstatus=1 let message$="INVALID PURGE DATE"
!J5$ = "Enter Starting Claim";J1 = 0
!J0$ = "3000 630 7"
!Gosub L_7000
call dxget("SCLAIM",tmp$)
j1=tmp$
CLAIM[0] = J1
!J5$ = "Enter Ending Claim";J1 = 999999
!J0$ = "3000 630 8"
!Gosub L_7000
call dxget("ECLAIM",tmp$)
if tmp$="" let tmp$="999999"
j1=tmp$
CLAIM[1] = J1
!J5$ = "Enter Starting Vendor";J1 = 0
!J0$ = "3000 63010"
!Gosub L_7000
call dxget("SVEND",tmp$)
j1=tmp$
VENDNO[0] = J1
!J5$ = "Enter ending Vendor Number";J1 = 999999
!J0$ = "3000 63011"
!Gosub L_7000
call dxget("EVEND",tmp$)
if tmp$="" let tmp$="999999"
J1=tmp$
VENDNO[1] = J1
If CLAIM <= CLAIM[1] Goto L_1180
L_1170: message$ = message$+" INVALID CLAIM RANGE!" ! \ Gosub L_7600
! Goto OutEnd ! L_900
Returnstatus=1
L_1180: If VENDNO <= VENDNO[1] Goto L_1200
returnstatus=1
message$=message$+" INVALID VENDOR RANGE!"
! Goto L_1170
L_1200: Rem OKAY
IF returnstatus=1 goto outend ! something is wrong
!Print @0,20;'CE';"   Is this range okay to CLEAR?   (Y/N)   ";
!Input ""J$
!If J$ <> "Y" If J$ <> "N" Goto L_1200
!If J$ = "N" Goto L_900 ! if we're here we're running it!
!If J$ <> "Y" Goto L_1200
!Print @0,22;'CE';"Clearing       , Please Wait. . ."; \ Signal 3,0
J1 = 0 \ K1$ = " ",K1$
K1$[1,6] = CLAIM[0] Using "######"
Search #2,2,1;K1$,R2,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2010
L_2000: Search #2,3,1;K1$,R1,E \ If E = 2 Goto L_8900
If E Gosub ERR_SEARCH
L_2010: X2 = K1$[1,6]
If X2 > CLAIM[1] Goto L_8900
X2 = K1$[7] \ If X2 <> 0 Goto L_2000
Mat Read #2,R1,0;CLM;
If CLM[0] < CLAIM[0] Goto L_2000
If CLM[0] > CLAIM[1] Goto L_8900
If CLM[1] < VENDNO[0] Goto L_2000
If CLM[1] > VENDNO[1] Goto L_2000
X2 = CLM[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE > JPDATE Goto L_2000
Mat Read #2,R1,20;CLM1;
If CLM1[0] <> 1 Goto L_2000
! Print @9,22;K1$[1,6] \ Signal 3,0
K2$ = " ",K2$;K2$ = K1$[1,6]
L_2100: Search #2,3,1;K2$,R2,E \ If E = 2 Goto L_2200
If E Gosub ERR_SEARCH
If K2$[1,6] <> K2$[1,6] Goto L_2200
X2 = K2$[7] \ If X2 <= 0 Goto L_2100
Search #2,5,1;K2$,V1,E \ If E Gosub ERR_SEARCH
If V1 <> R2 Let E = 1 \ Gosub ERR_SEARCH
E = 3;V1 = R2
Search #2,1,0;K2$,V1,E \ If E Gosub ERR_SEARCH
J1 = J1 + 1
Goto L_2100
L_2200: Rem NOW MASTER RECORD
Search #2,5,1;K1$,V1,E \ If E Gosub ERR_SEARCH
If V1 <> R1 Let E = 1 \ Gosub ERR_SEARCH
E = 3;V1 = R1
Search #2,1,0;K1$,V1,E \ If E Gosub ERR_SEARCH
J1 = J1 + 1
Goto L_2000

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/ccp499se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
L_8900: Rem DONE
Returnstatus=0
Message$=" COMPLETE! ",Str$(J1)," RECORDS DELETED"
!Print @0,23;"PRESS <CR> TO EXIT  ";
!Input ""J$
Goto OUTEND
OUTEND: Rem EXIT
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
Rem {end rtn.error.s}
End