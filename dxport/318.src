! >>> Program 318
!
! description Accounts Receivable History Purge
! loadsave -w -n 100,10 -o prog/dxport/318.dl4 src/318.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  9, 2004  09:33:42
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx318.src (univ2) [jcs] {12940}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem MX318 A/R HISTORY PURGE
Rem PROGRAMMER: N. GRINBERG  OCT 1983
Rem Last Update: 10/23/1991 roman.  clean up
try
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim K$[50],K1$[50],K2$[50],K3$[50],U5$[16],K24$[50]
Dim P9$[50],P61$[50]! ,MSG$[256]
Dim 1%,A,B,D,E,F,I,L1,L2,L3,M,P,T9,W,X,X1,Y,Y9,Z
Dim 2%,JTODAY
Dim 2%,A2[5],PURDAT,F1,F2,K1[1],V1,DT3[1],COMP,X2,4%,R[30]
Dim 3%,J,R1,R2,ARREF[1]
Dim 4%,AHREC
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=INTCo
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Read #1,19,50;P9$; \ Mat Read #1,61,0;P61$;
! X2 = Spc(5);COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
For I = 2 To 2
  Read W \ If W = -1 Goto L_290
  Read #1,88,W;U5$;
  Open #I,U5$
L_290: Next I
Data "1408"
If P61$[3,3] = "Y"
  U5$ = COMP Using "4/SARDETLH#" \ Open #24,U5$
End If 
X2 = Chf(302) - 1
Dim 1%,Z2[X2],2%
!Print 'CS';@0,0;"-MX318-";@25,0;"ACCOUNTS RECEIVABLE HISTORY PURGE";
!Print @10,3;"ENTER ENDING PURGE DATE (MMDDYY)  "
!Print @10,5;"ENTER STARTING CUSTOMER, <CR> FOR FIRST, E:EXIT  "
!Print @10,7;"ENTER ENDING   CUSTOMER, <CR> FOR LAST,  E:EXIT  "
!Print @10,9;"READY TO BEGIN PURGE? (Y/N) "
call dxget("DATE",tmp$) ! mmddyy format
let j$=rtrim$(tmp$)
if len (j$)<6 or len(j$)>6
	let eflag=eflag+1
	let message$=message$+"Invalid Date Submitted "
	goto endgetdate:
endif
tmp3 = J$[1,2]
If tmp3 < 1 or  tmp3 > 12
	let eflag=eflag+1
	let message$=message$+"Invalid Date Submitted "
	goto endgetdate:
endif	
tmp3= J$[3,4]
If tmp3 < 1 or tmp3> 31
	let eflag=eflag+1
	let message$=message$+"Invalid Date Submitted "
	goto endgetdate:
endif
j1$ = J$[5,6],J$[1,2],J$[3,4] !yymmdd format
let purdat=j1$
X2 = j1$[1,6] \ Gosub L_7820
If not(x2)
	let eflag=eflag+1
	let message$=message$+"Invalid Date Submitted "
	goto endgetdate:
endif
Purdat= X2
JTODAY = Tim(6)
!If (JTODAY - PURDAT) <= 30
	!let eflag=eflag+1
	!let message$=message$+"Invalid Date.. Keeping Less Than 1 Month History Data "
!endif
endgetdate: ! 
K1 = 0 \ K1[1] = 999999
call dxget("SCUST",K2$) ! starting customer 
let k1=k2$
if k1<0 or k1>999999
	let eflag=eflag+1
	let message$="Invalid Starting Customer Code Entered"
endif
call dxget("ECUST",K2$) ! ending customer
let k1[1]=k2$
if k1[1]<0 or k1[1]>999999
	let eflag=eflag+1
	let message$="Invalid Ending Customer Code Entered"
endif
if k1>k1[1]
	let eflag=eflag+1
	let message$="Invalid Customer Code Range Entered"
endif
let k$=k1 using "######"
let k1$=k1[1] using "######"

if eflag<>0 goto outend:
let totrec=0

L_1200: Rem "========================================= start here
L_1210: Search #2,3,2;K$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto OUTEND
If K$[1,6] > K1$[1,6] Goto OUTEND
Mat Read #2,R1;A2
Mat Read #2,R1,316;ARREF;
If A2[4] > PURDAT Goto L_1210
Mat Write #2,R1;Z2;
Search #2,5,2;K$,R1,E
If E Gosub ERR_SEARCH
K2$ = " ",K2$ \ K2$[1,6] = K$[1,6]
K2$[7] = K$[13] \ K2$[18,18] = " "
Search #2,2,1;K2$,R2,E
If E Gosub ERR_SEARCH
If R1 <> R2 Let E = 1 \ Gosub ERR_SEARCH
Search #2,5,1;K2$,R2,E
If E Gosub ERR_SEARCH
E = 3 \ Search #2,1,0;K$,R1,E
If E Gosub ERR_SEARCH
let totrec=totrec+1
! Print @0,22;"Doing...";K$[1,6];
If P61$[3,3] = "Y" Gosub L_5000

Goto L_1200

L_5000: Rem PURGE AR DETAIL HISTORY -sardetlh file
K24$ = K2$
L_5010: Search #24,3,1;K24$,AHREC,E \ If E = 2 Goto L_5095
If E Gosub ERR_SEARCH
If K24$[1,17] <> K2$[1,17] Goto L_5095
Search #24,5,1;K24$,AHREC,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #24,1,0;K24$,AHREC,E \ If E Gosub ERR_SEARCH
Goto L_5010
L_5095: Return 

JUL2DATE: Rem DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
DATE2NUM: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 

L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
If E<>0
	let x2=0
	Return
endif
X2 = X$[1,5]
Return
JUL2YMD: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONG: Rem CONVERT YYMM TO YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 


ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/la551se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                                               



OUTEND: Rem EXIT PROGRAM
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no A/R history items available to purge"	
	else
		Let message$=message$+" "+str$(totrec)+" A/R History Transaction(s) Purged"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program




