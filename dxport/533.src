! >>> Program 533
!
! description ACCOUNTS PAYABLE LEDGER
!
! loadsave -w -n 100,10 -o prog/dxport/533.dl4 src/533.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2001  15:12:59
Rem /usr/acct/r97//usr/acct/kag/work/r97/ap/la533.src (univ2) [kag] {41991}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem LA533 - ACCOUNTS PAYABLE LEDGER
Rem AUTHOR: MTK   DEC 15, 1986
!
Declare Intrinsic Sub InpBuf,String,Time
!

Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenFile
!
!!Option Default Dialect IRIS1
Try 
! If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,X1,N,C0[6],DIVFLAG
Dim 2%,A1[2],X2,DIV[2],VT0[1]
Dim 3%,A2[11],A4[1],T9[5],T8[5],VT1[14]
Dim A$[30],J$[40],K1$[50],K10$[20],K11$[20],DIV$[30],I$[30],f$[30]
Dim R$[63],D$[25],C$[50],R2$[4],V1$[30],G$[2],P1$[6],X$[10]
Dim 1%,E,F,L,K,L9,P,2%,B1,C1,R[23],V1,W,D0
Dim 3%!
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1500],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim groupid$[1]
!!! check this
Dim b$[200]!

!call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)!
Call Time(D$)

L = 99
P = 0
!!Gosub L_7000
!!Gosub L_8100
!!Gosub L_8000
!!V1$ = " 0"
!!Search #C15,2,1;V1$,R[15],E
!!!!If E Gosub ERR_SEARCH
!!Mat Read #C15,R[15],2;R$;
!!J$ = R$[31,31],"/A80VM",G$[1,2]
!!Ropen #2,J$
!!DIVFLAG = 0
!!If Not(C0[6]) Goto L_1900
!!J$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,J$
!!J$ = R$[2,2],"/APVDV",G$[1,2] \ Ropen #11,J$
!

J8 = 0


try
	J8 = Chf(0)
else
	j8 = 0
end try
j8=not(j8)
J9 = 55 \ If J8 Let J9 = 18
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
let l9=55
COID=IntCo 
tRY Close #1 eLSE rEM ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$


Mat Read #1,0,134;D0;
P1$ = D0 Using "&&&&&&"
Mat Read #1,51,18;C0;
eflag=0
returnstatus=0 ! blockid no errors




eflag=0
returnstatus=1
c15=15
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
c16=16
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
!
! open files
!W = intCO
!A1 = Int(W / 16384)
!B1 = Int((W - A1 * 16384) / 64)
!C1 = W - (A1 * 16384 + B1 * 64)
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G$[1,1] = intco Using "#"
g$[2,2]=groupid$

!


!
V1$ = " 0"
Search #C15,2,1;V1$,R[15],E
If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH

Mat Read #C15,R[15],2;R$;
J$ = R$[31,31],"/A80VM",G$[1,2]
Ropen #2,J$
if C0[6]
  J$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,J$
  J$ = R$[2,2],"/APVDV",G$[1,2] \ Ropen #11,J$
endif
!
If J8 ! dx xml, setup rstr$
  !<section>
  search rstr$,"<section>",e
  if e<>0
	tmp$=rstr$[1,e-1]
	rstr$=tmp$
  endif
  tmp$ = bsdel$,"533",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
If c0[6]<>0!
	call dxget("PRITDIVISI",tmp$)	\ if tmp$ = "" Let DIVFLAG = 0  else DIVFLAG = 99 !!print report by divisions (y/n)
	call dxget("SDIVISION",tmp$)	\ DIV[1] = tmp$ !!starting division
	call dxget("EDIVISION",tmp$)	\ if tmp$ = "" Let DIV[2] = 99  else Let DIV[2] = tmp$ !!ending division 
Else
	let divflag=0
	div[1]=0;div[2]=99
endif!
! Gosub L_7000
Gosub L_8100
!!!Gosub L_8000
! If C0[6]=0  let DIVFLAG = 0 
if DIVFLAG = 0 let DIV[1] = 0 \ DIV[2] = 99 
!
if DIV[1] < 0 or DIV[1] > 99 
	let eflag=eflag+1
	let message$=message$+"Invalid starting division, must be between 0 and 99!" 
endif
if DIV[2] < DIV[1] or DIV[2] > 99 
	let eflag=eflag+1
	let message$ = message$+"Invalid ending division, must be between starting division and 99!" !  \ error 10000 
endif !
!
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If 
!
!!DIVFLAG = 0
!If Not(C0[6]) Goto L_1900
!J$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,J$
!J$ = R$[2,2],"/APVDV",G$[1,2] \ Ropen #11,J$
!!
!if Not(DIVFLAG) Goto L_1900
!
!!Print 'CS'; Tab 20;"ACCOUNT PAYABLE LEDGER"
!!L_1005: Print @0,5;'CL';"PRINT REPORT BY DIVISIONS (Y/N) "; \ Input ""I$
!!If I$ = "N" Goto L_1900
!!If I$ = "E" Goto OUTEND
!!If I$ <> "Y" Goto L_1005
!!L_1025: DIVFLAG = 99 \ DIV[1] = 0 \ DIV[2] = 99
!!Print @0,8;'CL';"Enter starting division or <CR> for all "; \ Input ""I$
!!If I$ = "" Goto L_1070
!!If I$ = "E" Goto OUTEND
!!DIV[1] = I$
!!Print @0,9;'CL';"Enter ending division or <CR> for last "; \ Input ""I$
!!If I$ = "" Goto L_1070
!!If I$ = "E" Goto OUTEND
!!DIV[2] = I$
!!L_1070: If DIV[2] >= DIV[1] Goto L_1100
!!Print @0,23;'CL RB';"ENDING DIVISION MUST BE GREATER THAN STARTING DIVISION ";
!!Signal 3,30 \ Print @0,9;'CL';@0,23;'CL'; \ Goto L_1025
if eflag<>0 goto outend:
If Not(C0[6]) Goto L_1900
if Not(DIVFLAG) Goto L_1900
!
if j8 
  tmp$ = "ACCOUNT",fdel$
  tmp$ = tmp$, "DIVISION",fdel$
  tmp$ = tmp$, "VENDOR CODE",fdel$
  tmp$ = tmp$, "VENDOR NAME",fdel$
  tmp$ = tmp$, "BEG BAL",fdel$
  tmp$ = tmp$, "PURCHASES",fdel$
  tmp$ = tmp$, "DISCOUNTS",fdel$
  tmp$ = tmp$, "PAYMENTS",fdel$
  tmp$ = tmp$, "ENDING BALANCE",fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if

L_1100:  ! start here
K10$ = " ",K10$ \ K10$[1,2] = DIV[1] Using "##"
Search #10,2,1;K10$,R[10],E 
If Not(E) Goto L_1140
!!If E > 1 Gosub ERR_SEARCH
L_1115: 
Search #10,3,1;K10$,R[10],E 
If E = 2 Goto L_1500
!!If E Gosub ERR_SEARCH
L_1140: 
Mat Read #10,R[10],12;DIV$;
DIV[0] = K10$[1,2] \ If DIV[0] > DIV[2] Goto L_1500
L = 99
K11$ = " ",K11$
L_1200: 
Search #11,3,1;K11$,R[11],E 
If E = 2 Goto L_1400
!!If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;VT0; 
If VT0[1] <> DIV[0] Goto L_1200
Mat Read #11,R[11],8;VT1;
A4[1] = VT1[14] + VT1[5] + VT1[9] - VT1[1]
A4[0] = A4[1] - VT1[0] + VT1[8] + VT1[4]
A2[3] = VT1[0]
A2[9] = VT1[8]
A2[4] = VT1[4]
If A4[0] <> 0 Goto L_1275
If A4[1] <> 0 Goto L_1275
If A2[3] <> 0 Goto L_1275
If A2[9] <> 0 Goto L_1275
If A2[4] <> 0 Goto L_1275
Goto L_1200
L_1275: A$ = "VENDOR NOT ON FILE!!!"
K1$ = VT0[0] Using "######" \ A1[1] = VT0[0]
Search #2,2,1;K1$,R[2],E \ If E Goto L_1290
L_1290: Mat Read #2,R[2],0;A$;
Gosub L_5800
Gosub L_5000
totrec=totrec+1
T8[0] = T8[0] + A4[0]
T8[1] = T8[1] + A2[3]
T8[2] = T8[2] + A2[4]
T8[3] = T8[3] + A2[9]
T8[4] = T8[4] + A4[1]
Goto L_1200
!
L_1400: Rem END OF THIS DIVISION
Gosub L_4200
Goto L_1115
!
L_1500: Rem end of division print
DIV$ = "CONSOLIDATED DIVISIONS"
If NOT(J8) AND DIV[1] = 0 And DIV[2] = 99 Goto L_1900
Goto OUTEND
!
L_1900: K1$ = " ",K1$
if j8 
  tmp$ = "ACCOUNT",fdel$
  !If DIVFLAG Let tmp$ = tmp$, "DIVISION",fdel$
  tmp$ = tmp$, "VENDOR CODE",fdel$
  tmp$ = tmp$, "VENDOR NAME",fdel$
  tmp$ = tmp$, "BEG BAL",fdel$
  tmp$ = tmp$, "PURCHASES",fdel$
  tmp$ = tmp$, "DISCOUNTS",fdel$
  tmp$ = tmp$, "PAYMENTS",fdel$
  tmp$ = tmp$, "ENDING BALANCE",fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if
!!If L9 <> 20 Print @0,23;'CL';"PRINTING... PLEASE WAIT....";
L_2000: 
Search #2,3,1;K1$,R[2],E
If E = 2 Goto L_9100
!!If E <> 0 Gosub ERR_SEARCH
Mat Read #2,R[2],0;A$;
Mat Read #2,R[2],264;A1;
Mat Read #2,R[2],292;A2;
A4[1] = A2[2] + A2[8] + A2[11] - A2[7]
A4[0] = A4[1] - A2[3] + A2[9] + A2[4]
If A4[0] <> 0 Goto L_2160
If A4[1] <> 0 Goto L_2160
If A2[3] <> 0 Goto L_2160
If A2[4] <> 0 Goto L_2160
If A2[9] <> 0 Goto L_2160
If Not(A4[0] + A2[3] + A2[4] + A2[9]) Goto L_2000
L_2160: Gosub L_5800
Gosub L_5000
totrec=totrec+1
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[0] = T9[0] + A4[0]
T9[1] = T9[1] + A2[3]
T9[2] = T9[2] + A2[4]
T9[3] = T9[3] + A2[9]
T9[4] = T9[4] + A4[1]
Return 
!
L_4000: Rem TOTAL PRINT
if j8 return
!
Print #0;"\15\** TOTALS **";
Gosub L_5800
Print #0; Using "---,---,---.##"; Tab 48;T9[0];
Print #0; Using "---,---,---.##"; Tab 64;T9[1];
Print #0; Using "---,---,---.##"; Tab 80;T9[2];
Print #0; Using "---,---,---.##"; Tab 96;T9[3];
Print #0; Using "---,---,---.##"; Tab 113;T9[4]
Print #0;"\14\";
Return 
!
L_4200: Rem DIVISION TOTAL PRINT
if j8 return
!
Gosub L_5800
Print #0;"\15\**DIVISION TOTALS**";
Print #0; Using "---,---,---.##"; Tab 48;T8[0];
Print #0; Using "---,---,---.##"; Tab 64;T8[1];
Print #0; Using "---,---,---.##"; Tab 80;T8[2];
Print #0; Using "---,---,---.##"; Tab 96;T8[3];
Print #0; Using "---,---,---.##"; Tab 113;T8[4];
Print #0;""
For X = 0 To 4 \ T8[X] = 0 \ Next X
L = 99
Return 
!
L_5000: Rem PRINT LINE
if j8 
  tmp$ = rtrim$(C$[11,50]),fdel$
  if DIVFLAG Let tmp$ = tmp$,rtrim$(DIV$[1,30]),fdel$
  tmp$ = tmp$,A1[1] Using "######",fdel$
  tmp$ = tmp$,rtrim$(A$[1,30]),fdel$
  tmp$ = tmp$,A4[0] Using "--,---,---.##",fdel$
  tmp$ = tmp$,A2[3] Using "--,---,---.##",fdel$
  tmp$ = tmp$,A2[4] Using "--,---,---.##",fdel$
  tmp$ = tmp$,A2[9] Using "--,---,---.##",fdel$
  tmp$ = tmp$,A4[1] Using "--,---,---.##",fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Print #0; Using "######"; Tab 8;A1[1];
Print #0; Tab 17;A$[1,30];
Print #0; Using "--,---,---.##"; Tab 49;A4[0];
Print #0; Using "--,---,---.##"; Tab 65;A2[3];
Print #0; Using "--,---,---.##"; Tab 81;A2[4];
Print #0; Using "--,---,---.##"; Tab 97;A2[9];
Print #0; Using "--,---,---.##"; Tab 114;A4[1];
Print #0;" "
Return 
!
L_5800: rem heading
if j8 return
!
L = L + 1
If L < L9 Return 
If Not(P) Goto L_5815
If L9 <> 20 Goto L_5810
!!Input "\15\PRESS <CR> TO CONTINUE "J$
!!Print 'CS'
L_5810: If P Print #0;"\14\";
L_5815: Print #0;"\15\"; Tab 45;C$[11,50]
P = P + 1
Print #0; Tab 45;"ACCOUNTS PAYABLE LEDGER: ";P1$[3,4];"/";P1$[1,2]
Print #0; Tab 10;D$;
If DIVFLAG Print #0; Tab 50;DIV$[1,30];
Print #0; Tab 110;"PAGE";P
Print #0;" "
Print #0; Tab 3;"VENDOR CODE";
Print #0; Tab 17;"VENDOR NAME";
Print #0; Tab 55;"BEG BAL";
Print #0; Tab 69;"PURCHASES";
Print #0; Tab 85;"DISCOUNTS";
Print #0; Tab 102;"PAYMENTS";
Print #0; Tab 113;"ENDING BALANCE";
Print #0;" "
L = 1
Print #0;"\15\";
Return 
!


!
L_8100: Rem GET COMPANY NAME
V1$ = "10"
Search #C15,2,1;V1$,R[15],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '10' Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #C15,R[15],2;R2$;
V1$ = " ",V1$
V1$[3,6] = R2$
Search #C16,2,1;V1$,R[16],E
If E <>0 
	eflag=eflag+1
	message$="Client # "+r2$+" Not on File. "
	goto outend:
endif
!!If E Gosub ERR_SEARCH
Mat Read #C16,R[16],0;C$;
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
goto OUTEND
!!For K = 0 To 5
!!  T9[K] = 0
!!Next K
!!Goto OUTEND
!!Stop 
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT ROUTINE
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no transactions to print"
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totrec)+" Transaction(s) Printed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program
!
End 
!
!!If L9 = 20 Input "\15\PRESS <CR> TO EXIT "J$
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
!
! dx close

