! >>> Program 373
!
! description Purchase Order Receipts Journal  
! loadsave -w -n 100,10 -o prog/dxport/373.dl4 src/373.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 10, 2008  10:53:13
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/po373.src (univ2) [mary] {43928}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem PO373  PURCHASE ORDER RECEIPTS TO STOCK JOURNAL
Rem AUTHOR: G.DOSCHER   MAY 24, 1985
Rem LAST UPDATE:  REK 3/24/92  WAREHOUSE CHOOSE/STATUS UPDATE
! ------------------------------------------------------------------------------
! 09/27/12 vst task18628 - prevously Rutherford ustom, added code for:
! 07/04/08 jliu cct223989 - if po contains a non-stock line copied from an order
!    and the order isn't status 1, print the following message on the report:
!             ***Order is not status 1, qty will not commit to order***    
! ------------------------------------------------------------------------------
Try
Com 1%,PFU1[20],CNVTU[9],S7,WHSE,NARROW,DISPCOST
Com 3%,JRNL
Com 3%,PFU2[6],CNVTA[4],A[33],HT$[5]
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
dim 2%,rcptdate
DIM 1%,CHAN[25],3%,SPECS[50]
Dim 1%,F,L1[5],X0,H4[3],NSD1[7],OL3[3],PD1[2],2%,D9[5],OL2[1],OL4[3],FLAGS[11]
Dim 1%,C0,SPO,V9[4]
Dim 3%,GPQTY[1],GRQTY[1],UIDREC[1]
Dim 2%,N4,POCNTRL,CNTNUM
Dim 1%,WPF[1024],COID,POMISC[2],CDTYPE,URECFLAG
Dim 3%,CDAMT,OFRATE,PL5[9]
Dim 2%,B[24],C1[6],H0[5],H3[4],L2[2],NSD2[4],OH0[12]
Dim 2%,WHOS
Dim 3%,C9[9],J,L3[6],NSD3[9],Q1[9],R0[1],W3[24],X3[9],A4
Dim A$[156],A1$[30],A2$[30],H$[82],L1$[120],CNAME$[30],USR$[40]
Dim K1$[50],K2$[20],K3$[20],NSD$[96],P9$[50],U5$[30],PAGE$[30]
Dim M1$[4],U8$[131],U9$[131],V$[30],PMASK$[12],2%,Q0[1]
Dim 3%,AMOUNT,COST,XCOST,TCOST,XQTY,TQTY,PL4[23],R[99],GXCOST[1],H8[9],TOTLINEFRT[1]
Dim 3%,TXCOST[1],TPQTY[1],TRQTY[1]
Dim 3%,PO3[12],TOTLINEMISC[1],DISP_COST,DISP_QTY,DISP_EXT
Dim SN1$[54],SNK$[50],K9$[50],C1$[30],S1$[30],K16$[40],K17$[20]
Dim F$[25],FILE$[30],P60$[50],PMSG$[2],Z2$[2],PRINTCOST$[1],RETVAL$[512]
Dim NARROW$[1]
Dim 1%,TIEBREAKER,CH_FIFOS
Dim 2%,MJRNL,D0
Dim P61$[256],FSKEY$[30],ACPER$[4]
Dim SRCDIR$[50],TXTFNAME$[50],TXTNAME$[50],CMD$[100]
Dim 3%,REC_FIFOL,REC_FIFOW,REC_FIFOS,FIFOUNIT,FC2[1],TOTPO
Dim COMP$[10],WH$[10],DATE$[6]
dim potype$[1]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
dim ST$[40]
dim key16$[40]
dim custom_customer$[30]
! call dxopen() ! needed?

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
LET ST$="OR ENOR PTOR RGOR ACIN ENIN PTIN RGIN AC"
	
COID=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
ctlc=1
Mat Read #ctlc,115,60;custom_customer$;           
custom_customer$ = UCase$(Trim$(custom_customer$))
eflg=0
returnstatus=1
abortjournal=0
!call dxsave(0,"tmp/373sv.txt!")
Call dxget("IJABRT",tmp$)                                                 
tmp$ = UCase$(trim$(tmp$))                                                                                                          
If tmp$ <> "" !
  abortjournal=99
  Message$ = "OK - NO JOURNAL"                                            
  ReturnStatus = 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
  goto outend:
ENDIf     

Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
! COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For K1 = 2 To 19
  Read J \ If J = -1 Goto L_820
  Read #1,88,Abs(J);J$;
  If J < 0 Ropen #K1,J$ Else Open #K1,J$
L_820: Next K1
Data "-1","-1792","-1120","-2400","-1808","-2976","2416","-1","-1744","-2464","2432","-1728","-2448"
Data "1888","1840","1824","-2768", "-1088"
Mat Read #1,19,50;P9$;
Mat Read #1,51,76;SPO;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,115,0;D9;
Mat Read #1,3,0;CNAME$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
DATE$ = Tim(8) Using "&&",Tim(9) Using "&&",Tim(10) Using "&&"
D0 = DATE$
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
V9[1] = 99 \ U8$ = "-",U8$ \ U9$ = "=",U9$
VV9[1] = 99
!Open #77,"cntrl/PRTDFLT" \ Open #78,"cntrl/USERPORT"
!Mat Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!Mat Read #77,A4,0;PD1;
Try Close #77 else rem
Try Close #78 else rem
LET HT$="YYY"		! "cct110877
Gosub L_13000 ! build sort file on channel #99
! Gosub PRINT_SCREEN - no longer used
! Goto INPUTS
!!!! get data !!!!
s7=0                              
Call dxget("RPRTJ",J$) ! reprint of jrnl (Y/N)                            
tmp$ = UCase$(trim$(J$)) \ If tmp$="" Let tmp$="N"                       
If tmp$ <> "N" Let tmp$ = "Y"                                                                                               
If tmp$ = "Y"
	reprint=1
	S7=6
endif                                                  
If tmp$ = "N" 
	let reprint=0
	s7=5
endif
If Not(S7) Let eflg = eflg + 1;Message$ = Message$ + Str$(eflg) + " Reprint is Y or N! " ! Goto ASK_REPRINT 

Call dxget("PAGEBRK",J$) ! page break on each po                           
tmp$ = UCase$(trim$(J$)) \ If tmp$="" Let  tmp$="N"                       
If tmp$ <> "N" Let tmp$ = "Y"                                                                                               
PAGE$=tmp$

Call dxget("WHSE",J$) ! whse                          
let whse=j$
if custom_customer$="ETNA"
	if not(whse) and rtrim$(J$)<>"0"
		eflg=eflg+1
		Message$=Message$+"Invalid Warehouse Number Entered"
	endif
	if whse<0 or whse>99
		let eflg=eflg+1
		Message$ = Message$+ " Invalid Warehouse Number Entered"
	endif
else
	if whse<1 or whse>99
		let eflg=eflg+1
		Message$ = Message$+ " Invalid Warehouse Number Entered"
	endif
endif
let ht$="NNN" ! set all to no
call dxget("POTYPE",tmp$) !!Journal Source Code or O: all
if rtrim$(tmp$)<>""
	for x=1 to len(tmp$)
		if tmp$[x,x]="0"
			LET Ht$="YYY"
			goto endgetpotype:
		endif
		if tmp$[X,X]="1" let ht$[1,1]="Y" ! warehouse
		if tmp$[X,X]="2" let ht$[2,2]="Y" ! direct
		if tmp$[X,X]="3" let ht$[3,3]="Y" ! indirect
	next x
else
	let ht$="YYY" 
endif
endgetpotype: ! end get po type
if ht$="NNN"
	let eflg=eflg+1
	let message$=message$+" No Purchase Order Types Selected "
endif
! print include Z:zline Y: Y line B: both N:None 
! currenly we do not have message lines in the po
PMSG$="B" ! default to print messages lines 

Call dxget("PRNTCOST",J$) ! cost verification worksheet                          
tmp$ = UCase$(trim$(J$)) \ If tmp$="" let tmp$="N"                       
If tmp$ <> "N" Let tmp$ = "Y"                                                                                               
PRINTCOST$=tmp$
narrow=0;dispcost=2
if printcost$="Y"                                 
	Call dxget("DISPCOST",tmp$) ! Print cost in 1: po qty u/m or 2: Cost u/m                                               
	dispcost= tmp$                                                                 
	If dispcost < 1 Or dispcost > 3 
		Let eflg = eflg + 1;Message$ = Message$ + Str$(eflg) + "Invalid UM Cost Selection"
	endif
	narrow=-1
	Call dxget("NARROW",j$) ! Print Cost Verif Worksheet W: Wide or N:Narrow                                             
	tmp$ =Ucase$(j$)
	if tmp$="W" let narrow=0
	if tmp$="N" let narrow=1
	If Narrow < 0 Or Narrow > 1
		Let eflg = eflg + 1;Message$ = Message$ + Str$(eflg) + "Invalid Print Format Selection"
	endif
 endif
 if p60$[46,46]="Y"
	Call dxget("RDATE",tmp$) ! passed as MMDDYY 	
	tmp1$ = tmp$[1,2],"/",tmp$[3,4],"/",tmp$[5,6]            
	Call VerifyDate(tmp1$,tmp1$,e) ! formats to YYMMDD                    
	If e <>0
		let eflg=eflg+1
		Message$ = message$+ "Invalid Import Receipt Date"
	endif
	let rcptdate=tmp$
endif
	 
Call dxget("PRPRT",tmp$) ! (NOT ADDED?)     
 audonly = 0 \ If rtrim$(tmp$) <> "" Let audonly = 1 
L_8150: Rem "start from here
CH_TXT = 0
If Not(REPRINT) and AudOnly=0 ! not a reprint and not an previed
  Read #1,20,166;MJRNL
  If MJRNL <= 0 Let MJRNL = 1
  If MJRNL >= 999999 Let MJRNL = 1
  JRNL = MJRNL
  MJRNL = MJRNL + 1
  Write #1,20,166;MJRNL;
  !If P60$[9,9] = "F" Or P60$[9,9] = "L" ! 
   ! If P61$[60,60] = "Y"
      !J$ = COID Using "4/FIFOSPC#" \ Ropen #29,J$
      Rem textfile srcdir = report directory
      Rem for spicer srcdir = /u/syspgms/tmp
      Rem textfile name = comp+wh+373+yymm+jounal#(+.tiebreaker if needed)
      SPICERFLAG = 0 ! not using spicer secret cost
      !If Not(SPICERFLAG)
       ! SRCDIR$ = "REPORTDIR"
       ! System 28,SRCDIR$
      !Else 
        !SRCDIR$ = "/u/syspgms/tmp"
        !Call FindF(SRCDIR$,A9)
        !If Not(A9)
       !   CMD$ = "mkdir " + SRCDIR$
       !   System CMD$
       ! End If 
     ! End If 
      !WH$ = WHSE Using "w&&"
      !COMP$ = "c" + Str$(COID)
      !TXTNAME$[1,3] = "373"
      !X$ = D0 Using "&&&&&&"
     ! ACPER$[1,4] = X$[1,4]
     ! TXTNAME$[4,7] = ACPER$[1,4]
     ! TXTNAME$[8,13] = JRNL Using "&&&&&&"
     ! TXTFNAME$ = SRCDIR$ + "/" + COMP$ + WH$ + TXTNAME$
     ! Call FindF(TXTFNAME$,A9)
     ! If A9 ! already exists
        TIEBREAKER = 0
!GETNEWFILENAME: Rem try to find a new filename
        !TXTNAME$[14,14] = "."
       !TXTNAME$[15,15] = TIEBREAKER Using "&"
        !TXTFNAME$ = SRCDIR$ + "/" + COMP$ + WH$ + TXTNAME$
        !Call FindF(TXTFNAME$,A9)
        !If A9
          !If TIEBREAKER = 9
          !  Print @0,22;'CE';"Print Cannot Create Print File ";
           ! Print @0,23;'CE';"Press <CR> to return to Menu ";
           ! Input Len 1;""J$
           ! Goto L_9010
          !End If 
          !TIEBREAKER = TIEBREAKER + 1
          !Goto GETNEWFILENAME
        !End If 
      !End If 
      !Build #98, + TXTFNAME$
      !CH_TXT = 98
    !End If ! spicer text file flag
  !End If ! specail cost flag
!End If  ! fifo flag
End If ! reprint /aud
S1 = S7
if custom_customer$="ETNA"
	if whse>=0 and whse<100
		Gosub L_8200 ! check warehouse process
	endif
else
	if whse>0 and whse<100
		Gosub L_8200 ! check warehouse process
	endif
endif
! Call programdump("tmp/373var!","")
if eflg goto outend:
TMP$="doing a lock"
call "proglock.dl4","373-"+(whse using "&&"),1,TMP$
EOF = 0;fndone=0
For CTR = 0 To 1 \ GPQTY[CTR] = 0 \ GRQTY[CTR] = 0 \ GXCOST[CTR] = 0 \ Next CTR
! Print @0,21;"PRINTING, PLEASE WAIT . . . ";'CE'; \ Signal 3,0
A1$ = S1 Using "##"
L_1020: Search #8,3,1;A1$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
X0 = A1$[1,2] \ If X0 <> S1 Goto L_9100
Mat Read #8,R8;H0;
Mat Read #8,R8,24;H$;
Mat Read #8,R8,222;H3;
Mat Read #8,R8,242;H4;
Mat Read #8,R8,250;H8;
Mat Read #8,R8,350;PO3;
Mat Read #5,H0[1];V$;
Mat Read #5,H0[1],264;C1;
If WHSE And H4[1] <> WHSE Goto L_1020
If H0 <> S1 
	! Print "STATUS ERROR-- FILE DOESN'T MATCH INDEX!" \ Gosub ERR_SEARCH
	eflg=eflg+1
	let ponum=a1$[3]
	Message$=Message$+"Bypass Purchase Order "+str$(h0[2])+" Status Error"
	j1=j1+3
	print #0;""
	print #0;"***** Bypass Purchase Order ";str$(h0[2]);" Status Error ******"
	Print #0;""
	goto L_1020:
endif
IF HT$[1,1]="N" ! "No Warehouse POS			! "cct110877
	IF H4[0]=0 OR H4[0]=4 GOTO L_1020:
ENDIF 
IF HT$[2,2]="N" ! "No Directs
	IF H4[0]=1 OR H4[0]=6 GOTO L_1020:
ENDIF 
IF HT$[3,3]="N" ! "No Indirects
	IF H4[0]=2 OR H4[0]=5 GOTO L_1020:
ENDIF 
F1 = 0
IMPORT = 0
If P60$[46,46] = "Y" And H4[0] > 3 And H4[0] < 7 Let IMPORT = 1
IF FNDONE=0 ! Goto L_2000 ! it's next line!?
	! AS A TIME OUT ISSUE - SEND "IN PROCESS"
	!Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
  FNDONE=1
Endif
L_2000: Rem LINE LOOP
A2$ = H0[2] Using "######"
L_2020: Search #12,3,1;A2$,R12,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2300
X2 = A2$[1,6]
If X2 <> H0[2] Goto L_2300
Gosub L_6200
If FLAGS[2] Goto L_2150
If R8 <> L3[0]
	eflg=eflg+1
	let ponum=a1$[3]
	Message$=Message$+"Bypass Purchase Order "+str$(h0[2])+"Header Record Pointer Error On Line Number "+a2$[7]+"."
	j1=j1+3
	print #0;""
	print #0;"***** Bypass Purchase Order ";str$(h0[2]);" Header Pointer Error on Line Number ";a2$[7];". ******"
	!Print #0;""Print "HEADER RECORD POINTER ERROR" \ Gosub ERR_SEARCH
	goto L_1020:
endif
Call Logic(1,2 ^ 1,L1[3],X0) \ If X0 Goto L_2100
If Not(L3[4]) Goto L_2200
L_2100: If SPO And REPRINT = 0 And L3[4] <> 0 Let N4 = N4 + 1 \ POCNTRL = N4
Gosub L_2800
If Not(F1)
  Gosub L_5500
  If P61$[60,60] = "Y" And CH_TXT <> 0 Gosub TXTPRNT5500
End If 
Gosub L_4000
Gosub L_5800
Gosub L_5000
If P61$[60,60] = "Y" And CH_TXT <> 0
  Gosub TXTPRNT5800
 Gosub TXTPRNT5000
End If 
Gosub L_4400
If SPO Write #12,R12,508;POCNTRL;
Call Logic(1,2 ^ 0,L1[3],X0) \ If Not(X0) Goto L_2200
Gosub L_2500
L_2150: Rem"print the message lines cct137770
If Not(FLAGS[2]) Goto L_2020
If PMSG$[1,1] = "N" Goto L_2020
If PMSG$[1,1] = "B" Or PMSG$[1,1] = "Y" Or PMSG$[1,1] = "Z"
  If PMSG$[1,1] = "Z" And L1$[81,81] <> "Z" Goto L_2020
  If PMSG$[1,1] = "Y" And L1$[81,81] <> "Y" Goto L_2020
  If Not(F1)
    Gosub L_5500
  End If 
  Gosub L_5100
  If P61$[60,60] = "Y" And CH_TXT <> 0 Gosub TXTPRNT5100
End If 
L_2200: Rem END THIS LINE
Goto L_2020
L_2300: Rem PRINT PO TOTAL RECV $
IF TPQTY=0 AND TRQTY=0 AND TXCOST=0 AND TOTLINEFRT=0 AND TOTLINEMISC=0 GOTO L_1020
TOTPO=TOTPO+1
Print #0;"** TOTALS **";
Print #0; Using "---,---,--#.##"; Tab 49;TPQTY;
Print #0; Using "---,---,--#.##"; Tab 84;TRQTY;
Print #0; Using "###,###,###.##"; Tab 116;TXCOST
GXCOST = GXCOST + TOTLINEFRT
GXCOST = GXCOST + TOTLINEMISC
If (H8[2] - TOTLINEFRT)
  Print #0; Tab 100;"PLUS FREIGHT";
  Print #0; Using "---,---,---.##"; Tab 116;(H8[2] - TOTLINEFRT)
  V9[1] = V9[1] + 1
  GXCOST = GXCOST + (H8[2] - TOTLINEFRT)
End If 
If (PO3[5] - TOTLINEMISC)
  Print #0; Tab 100;"PLUS MISC";
  Print #0; Using "---,---,---.##"; Tab 116;(PO3[5] - TOTLINEMISC)
  J1 = J1 + 1
  GXCOST = GXCOST + (PO3[5] - TOTLINEMISC)
End If 
TXCOST = 0 \ TPQTY = 0 \ TRQTY = 0 \ TOTLINEFRT = 0 \ TOTLINEMISC = 0
If PAGE$ = "Y" Let V9[1] = 99
If PAGE$ = "N" Let V9[1] = V9[1] + 1
If P61$[60,60] <> "Y" Goto L_1020
If Not(CH_TXT) Goto L_1020
Print #CH_TXT;"** TOTALS **";
Print #CH_TXT; Using "---,---,--#.##"; Tab 49;TPQTY[1];
Print #CH_TXT; Using "---,---,--#.##"; Tab 84;TRQTY[1];
Print #CH_TXT; Using "###,###,###.##"; Tab 116;TXCOST[1]
GXCOST[1] = GXCOST[1] + TOTLINEFRT[1]
GXCOST[1] = GXCOST[1] + TOTLINEMISC[1]
If (H8[2] - TOTLINEFRT[1])
  Print #CH_TXT; Tab 100;"PLUS FREIGHT";
  Print #CH_TXT; Using "---,---,---.##"; Tab 116;(H8[2] - TOTLINEFRT[1])
  VV9[1] = VV9[1] + 1
  GXCOST[1] = GXCOST[1] + (H8[2] - TOTLINEFRT[1])
End If 
If (PO3[5] - TOTLINEMISC[1])
  Print #CH_TXT; Tab 100;"PLUS MISC";
  Print #CH_TXT; Using "---,---,---.##"; Tab 116;(PO3[5] - TOTLINEMISC[1])
  J1 = J1 + 1
  GXCOST[1] = GXCOST[1] + (PO3[5] - TOTLINEMISC[1])
End If 
TXCOST[1] = 0 \ TPQTY[1] = 0 \ TRQTY[1] = 0
TOTLINEFRT[1] = 0 \ TOTLINEMISC[1] = 0
If PAGE$ = "Y" Let VV9[1] = 99
If PAGE$ = "N" Let VV9[1] = VV9[1] + 1
Goto L_1020
L_2500: Rem GET ORDER INFO FOR NONSTK
OL4[1] = 0;OL4[2] = 0;OL2[1] = 0;OH0[4] = 0;oh0[0]=0
If Not(NSD2[4]) Goto L_2600
If NSD2[4] > Chf(15) Goto L_2600
Mat Read #15,NSD2[4],16;OL4;
If OL4[2] <> H0[2] Let OL4[1] = 0;OL2[1] = 0 \ Goto L_2600
Mat Read #15,NSD2[4],8;OL3;
If OL3[0] <> 1 Let OL4[1] = 0 \ Goto L_2600
Mat Read #15,NSD2[4],0;OL2;
Goto L_2600
L_2600: Rem GET HEADER/CUSTOMER
If OL2[1] <= 0 Goto L_2670
LET K16$=" ",K16$
K16$[3,8] = OL2[1] Using "######"
For X = 1 To 18 
	LET K16$[1,2] = X Using "##"
  Search #16,2,1;K16$,R16,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E) Goto L_2650
Next X
OH0[0]=0
OH0[4] = 0;OH0[11] = 0
Goto L_2670
L_2650: Mat Read #16,R16,0;OH0;
If OL4[1] = 0 Let OL4[1] = OH0[11]
L_2670: K9$ = " ",K9$;K9$[1,3] = OL4[1] Using "###"
K9$[4,9] = OH0[4] Using "######"
k9$[10,11]=oh0[0] using "##"
K9$[12] = A2$[1,9]
R9 = R12;E = 0
Search #99,4,1;K9$,R9,E \ If E Gosub ERR_SEARCH
Return 
L_2800: Rem GET PRODUCT
Call Logic(1,2 ^ 0,L1[3],X0)
If Not(X0)
  Gosub L_6000
  J4$ = A$[140,151] \ J4$[13] = H4[1] Using "##"
  Search #10,2,1;J4$,R10,E \ If E Gosub ERR_SEARCH
  Gosub L_6300
Else 
  Gosub L_6500
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2]
  PFU1[8] = NSD1[5] \ PFU1[10] = NSD1[4] \ PFU1[11] = NSD1[3]
  A$[9,38] = NSD$[13,42] \ A$[63,92] = NSD$[43,72]
  A$[140,151] = NSD$[1,12] \ A$[93,112] = NSD$[73,92]
End If 
Return 
L_3000: Rem NON-STOCK RECAP
SLSM = 0;K1$ = " ",K1$;V9[1] = 90
L_3010: Search #99,3,1;K1$,R9,E \ If E = 2 Goto L_3100
If E Gosub ERR_SEARCH
X2 = K1$[1,3] \ If X2 <> SLSM Let V9[1] = 90
let oh0[0]=k1$[10,11]
SLSM = K1$[1,3] \ Gosub L_3600
R12 = R9 \ Gosub L_6200
Gosub L_2800
Gosub L_4000
Gosub L_3500
Gosub L_5600
Goto L_3010
L_3100: Rem DONE
Return 
L_3500: Rem CUSTNAME
K17$ = " ",K17$
K17$ = K1$[4,9]
Search #6,2,1;K17$,R6,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_3550
Mat Read #6,R6,30;C1$;
Return 
L_3550: Rem NOT FOUND?
C1$ = " ",C1$
let x2=k1$[4,9]
if x2<>0
	C1$ = "CUSTOMER NOT FOUND!"
else
	C1$ = "Order No Longer Open "
endif
Return 
L_3600: Rem SALESMAN
K17$ = " ",K17$
K17$ = K1$[1,3]
Search #17,2,1;K17$,R17,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_3660
Mat Read #17,R17,0;S1$;
Return 
L_3660: Rem NG
S1$ = " ",S1$;S1$ = "NO SALESMAN FOUND!"
Return 
L_4000: Rem CONV REC=>DSPL
CNVTA = PL4[0];CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
Gosub L_4200 \ Q1[0] = AMOUNT
CNVTA = L3[2];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_4200 \ Q1[1] = AMOUNT
CNVTA = L3[3];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_4200 \ Q1[2] = AMOUNT
CNVTA = L3[4];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_4200 \ Q1[3] = AMOUNT
CNVTA = L3[4];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
Gosub L_4200 \ Q1[4] = AMOUNT
CNVTA = PL4[0];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 2
Gosub L_4200 \ Q1[5] = AMOUNT
If L1[5] = -2 Let Q1[5] = Q1[0]
CNVTA = PL4[16];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_4200 \ Q1[6] = AMOUNT
CNVTA = PL4[17];CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 1
Gosub L_4200 \ Q1[7] = AMOUNT
CNVTA = PL4[1];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_4200 \ Q1[8] = AMOUNT
If P61$[60,60] = "Y"
  GLCOST[0] = PL4[0]
  If POMISC[0] ! stock update set to 'y'
    REC_WHSE = H4[1] - 1
    If REC_WHSE < 0 Goto ENDGETSPCCOST
    If REC_WHSE > Chf(18) Goto ENDGETSPCCOST
    Read #18,REC_WHSE,2970;WHOS;
    If Not(WHOS) Goto ENDGETSPCCOST
    FSKEY$[1,12] = A$[140,151];FSKEY$[13,16] = WHOS Using "####"
    Search #29,2,1;FSKEY$,R[29],E \ If E > 1 Gosub ERR_SEARCH
    If Not(E)
      Mat Read #29,R[29],38;FC2;
      GLCOST[0] = FC2[0]
    End If 
ENDGETSPCCOST: Rem end to get special cost
  End If 
  CNVTA = GLCOST[0];CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
  Gosub L_4200 \ GLCOST[1] = AMOUNT
  If L1[5] = -2 Let GLCOST[2] = GLCOST[0]
  CNVTA = GLCOST[0];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 2
  Gosub L_4200 \ GLCOST[2] = AMOUNT
  If L1[5] = -2 Let GLCOST[2] = GLCOST[1]
End If 
Return 
L_4200: Rem CALL CONV
Gosub L_20000
Return 
L_4300: Rem GET UNITS
If X0 = -1 Let M1$ = "CWT " \ Goto L_4330
If X0 = -2 Let M1$ = "LOT " \ Goto L_4330
If X0 = -3 Let M1$ = "LB  " \ Goto L_4330
Read #13,X0,10;M1$;
L_4330: Return 
L_4400: Rem PRINT SERIAL NO'S
Call Logic(1,2 ^ 0,L1[3],X0) \ If X0 Return 
SNO = 0 \ If A$[8,8] <> "Y" Return 
If L3[4] = 0 Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[2] Using "######";SNK$[7,9] = L1[2] Using "###"
L_4420: Search #7,3,1;SNK$,R7,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[2] Or LN <> L1[2] Goto L_4480
Mat Read #7,R7,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ V9[1] = V9[1] + 1
Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ V9[1] = V9[1] + 1
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ V9[1] = V9[1] + 2
Return 
L_4500: Rem GRAND TOTALS
EOF = 99;V9[1] = V9[1] + 3 \ Gosub L_5800
If V9[1] < 6 ! "IS ON A NEW PAGE
  Print #0;"\15\";U8$
  Print #0; Tab 50;"--- PURCHASE UNITS AS ENTERED ---";
  Print #0; Tab 85;"---------- STOCK UNITS --------"
  Print #0; Tab 54;"QUANTITY"; Tab 85;"QUANTITY"; Tab 118;"EXT COST"
  Print #0;U9$
  V9[1] = V9[1] + 5
End If 
Print #0;"\15\\15\** REPORT TOTALS **";
Print #0; Using "---,---,--#"; Tab 49;GPQTY;
Print #0; Using "---,---,--#"; Tab 84;GRQTY;
Print #0; Using "###,###,###.##"; Tab 116;GXCOST
If P61$[60,60] = "Y" And CH_TXT <> 0
  EOF = 99;VV9[1] = VV9[1] + 3 \ Gosub TXTPRNT5800
  If VV9[1] < 6 ! "IS ON A NEW PAGE
    Print #CH_TXT;"\15\";U8$
    Print #CH_TXT; Tab 50;"--- PURCHASE UNITS AS ENTERED ---";
    Print #CH_TXT; Tab 85;"---------- STOCK UNITS --------"
    Print #CH_TXT; Tab 54;"QUANTITY"; Tab 85;"QUANTITY"; Tab 118;"EXT COST"
    Print #CH_TXT;U9$
    VV9[1] = VV9[1] + 5
  End If 
  Print #CH_TXT;"\15\\15\** REPORT TOTALS **";
  Print #CH_TXT; Using "---,---,--#"; Tab 49;GPQTY[1];
  Print #CH_TXT; Using "---,---,--#"; Tab 84;GRQTY[1];
  Print #CH_TXT; Using "###,###,###.##"; Tab 116;GXCOST[1]
End If 
Return 
L_5000: Rem PRINT LINE
Print #0; Using "###";L1[2];
Print #0; Tab 5;L1$[81,92]; Tab 18;L1$[1,30];
If Not(Q1[3])
  Print #0;"  ** ZERO QUANTITY **\15\" \ V9[1] = V9[1] + 2
  Goto L_5390
End If 
Print #0; Using "---,---,--#.##"; Tab 49;Q1[3];
TPQTY = TPQTY + Q1[3];GPQTY = GPQTY + Q1[3]
X0 = L1[4] \ Gosub L_4300 \ Print #0; Tab 63;M1$;
If Q1[0]
  Print #0; Using PMASK$; Tab 64;Q1[0];
  X0 = L1[5] \ Gosub L_4300 \ Print #0;"/";M1$;
Else 
  Print #0; Tab 70;"(no change)";
End If 
Print #0; Using "---,---,--#.##"; Tab 84;Q1[4];
TRQTY = TRQTY + Q1[4];GRQTY = GRQTY + Q1[4]
X0 = PFU1[8] \ Gosub L_4300 \ Print #0; Tab 96;M1$;
If Q1[0]
  Print #0; Using PMASK$; Tab 101;Q1[5];
  If L1[5] = -2
    X0 = -2
  Else 
    X0 = PFU1[8]
  End If 
  Gosub L_4300 \ Print #0;"/";M1$;
Else 
  Print #0; Tab 103;"(no change)";
End If 
If L1[5] = -2
  AMOUNT = PL4[0]
Else 
  DISP_QTY = (L3[4] - PL4[16]);DISP_COST = PL4[0] \ Gosub CALC_DISP_EXT
  AMOUNT = DISP_EXT
End If 
If L1[5] = -1 Or L1[5] = -3
  If PL4[13]
    If L1[5] = -1 Let AMOUNT = Q1[0] * (PL4[12] * (L3[4] - PL4[16]) / PL4[13]) / 100
    If L1[5] = -3 Let AMOUNT = Q1[0] * (PL4[12] * (L3[4] - PL4[16]) / PL4[13])
  Else 
    If L1[5] = -1 Let AMOUNT = Q1[0] * (L3[5] * (L3[4] - PL4[16]) / L3[2]) / 100
    If L1[5] = -3 Let AMOUNT = Q1[0] * (L3[5] * (L3[4] - PL4[16]) / L3[2])
  End If 
End If 
Print #0; Using "#####,###.##"; Tab 118;FNR(AMOUNT);
TXCOST = TXCOST + FNR(AMOUNT)
GXCOST = GXCOST + FNR(AMOUNT)
Print #0;"" \ V9[1] = V9[1] + 1
Print #0; Tab 0;A$[93,112];
Print #0; Tab 22;L1$[31,56];
If Q1[6] Print #0; Using "FREE ---,---,--#"; Tab 40;Q1[6];
If L1[5] = -3 Print #0; Using "EXT WT: ########.##"; Tab 56;L3[5];
If Q1[7] Print #0; Using "FREE ---,---,--#"; Tab 79;Q1[7];
If L2[1]
  If L1[5] = -2
    AMOUNT = L2[1]
  Else 
    AMOUNT = L2[1] * L3[4]
  End If 
  If L1[5] = -1 Or L1[5] = -3 Let AMOUNT = AMOUNT * PL4[12] / A[6]
  Print #0; Using "-----,---.##"; Tab 100;"PLUS FREIGHT"; Tab 118;FNR(AMOUNT);
  J1 = J1 + 1
  TXCOST = TXCOST + FNR(AMOUNT)
  TOTLINEFRT = TOTLINEFRT + FNR(AMOUNT)
End If 
Print #0;"" \ V9[1] = V9[1] + 1
If SPO And POCNTRL <> 0 Print #0; Using "CNTRL######";POCNTRL;
Gosub PRINT_CURRENT
If PL4[8]
  If L1[5] = -2
    AMOUNT = PL4[8]
  Else 
    AMOUNT = PL4[8] * L3[4]
  End If 
  If L1[5] = -1 Or L1[5] = -3 Let AMOUNT = AMOUNT * PL4[12] / A[6]
  Print #0; Using "-----,---.##"; Tab 100;"PLUS MISC"; Tab 118;FNR(AMOUNT);
  TXCOST = TXCOST + FNR(AMOUNT)
  TOTLINEMISC = TOTLINEMISC + FNR(AMOUNT)
End If 
Print #0;"" \ V9[1] = V9[1] + 1
If L3[4] + L3[3] - (PL4[16] + PL4[17]) < L3[2]
  Print #0; Tab 15;"**** RECEIVED SHORT-  ORDERED:";
  Print #0; Using "---,---,--#"; Tab 49;Q1[1];
  Print #0; Using "/---,--# FREE";Q1[8];
  Print #0; Using "---,---,--#"; Tab 80;"OPEN QTY: ";Q1[1] + Q1[8] - Q1[2] - Q1[3];
  Call Logic(1,2 ^ 1,L1[3],X0) \ If X0 Print #0;"   LINE CLOSED SHORT";
  Print #0;"" \ V9[1] = V9[1] + 1
End If 
L_5390: ! Print #0;"\15\"; \ V9[1] = V9[1] + 1
!"cct#223989 
Call Logic(1,2 ^ 0,L1[3],X0)
if X0 and pl4[10]        !"non stock line & sales order number
  let getordflag=0
  For X=1 to 1 ! "only status 1!
	Let key16$=" ",key16$
  	Let key16$[1,2]=X Using "##"
	Let Key16$[3]=PL4[10] Using "######"
	Search #16,2,1;Key16$,R16,E 
	if e=0 let getordflag=1 
  Next X
  IF P61$[91,91]="N"
	if not (getordflag)    
		print #0;TAB 10;"***ORDER IS NOT STATUS 1, QTY WILL NOT COMMIT TO ORDER ***";
	endif
  endif
endif
Print #0;"\15\"; \ V9[1] = V9[1] + 1
If IMPORT And Q1[3] Gosub L_5400
Return 
L_5100: Rem "print the message lines
Print #0; Using "###";L1[2];
Print #0; Tab 5;L1$[81,92]; Tab 18;L1$[1,30]; Tab 50;L1$[31,60]
Print #0;"" \ V9[1] = V9[1] + 2
Return 
L_5400: Rem IMPORT COSTS RECAP
If V9[1] + 3 > 60 Let V9[1] = 90
Print #0;"" \ V9[1] = V9[1] + 1
Gosub L_5800
Gosub L_6700
Print #0; Tab 12;"OCN FRT: ";
Print #0; Using "###.###";OFRATE;"/CBFT";
Print #0; Using "$$$$$$#.##";PL5[0];
Print #0; Tab 45;"DUTY: ";
If CDTYPE = 1 Print #0;"%"; Else Print #0;"$";
Print #0; Using "####.###";CDAMT;
Print #0; Using "$$$$$$#.##";PL5[1];
Print #0; Tab 72;"BROKER: ";
Print #0; Using "$$$$$$#.##";PL5[2];
Print #0; Tab 91;"CART IN: ";
Print #0; Using "$$$$$$#.##";PL5[3];
Print #0; Tab 111;"CART WH: ";
Print #0; Using "$$$$$$#.##";PL5[4];
Print #0;"" \ V9[1] = V9[1] + 1
Print #0; Tab 12;"CART OUT: ";
Print #0; Using "$$$$$$#.##";PL5[5];
Print #0; Tab 34;"INSUR: ";
Print #0; Using "$$$$$$#.##";PL5[6];
Print #0; Tab 53;"AIRFRT: ";
Print #0; Using "$$$$$$#.##";PL5[7];
Print #0; Tab 72;"MISC.: ";
Print #0; Using "-$$$$$#.##";PL5[8];
Print #0; Tab 90;"TOTAL:";
Print #0; Using "$$$$$$$#.##";PL5[9];
Print #0; Tab 110;"UNIT:";
If Q1[3] Print #0; Using PMASK$;FNP(PL5[9] / Q1[3]); Else Print #0;"0.00";
X0 = L1[5] \ Gosub L_4300 \ Print #0;"/";M1$
Print #0;"" \ V9[1] = V9[1] + 2
Return 
TXTPRNT5000: Rem PRINT LINE
Print #CH_TXT; Using "###";L1[2];
Print #CH_TXT; Tab 5;L1$[81,92]; Tab 18;L1$[1,30];
If Not(Q1[3])
  Print #CH_TXT;"  ** ZERO QUANTITY **\15\" \ VV9[1] = VV9[1] + 2
  Goto TXTPRNT5390
End If 
Print #CH_TXT; Using "---,---,--#.##"; Tab 49;Q1[3];
TPQTY[1] = TPQTY[1] + Q1[3];GPQTY[1] = GPQTY[1] + Q1[3]
X0 = L1[4] \ Gosub L_4300 \ Print #CH_TXT; Tab 63;M1$;
If GLCOST[1]
  Print #CH_TXT; Using PMASK$; Tab 64;GLCOST[1];
  X0 = L1[5] \ Gosub L_4300 \ Print #CH_TXT;"/";M1$;
Else 
  Print #CH_TXT; Tab 70;"(no change)";
End If 
Print #CH_TXT; Using "---,---,--#.##"; Tab 84;Q1[4];
TRQTY[1] = TRQTY[1] + Q1[4];GRQTY[1] = GRQTY[1] + Q1[4]
X0 = PFU1[8] \ Gosub L_4300 \ Print #CH_TXT; Tab 96;M1$;
If GLCOST[1]
  Print #CH_TXT; Using PMASK$; Tab 101;GLCOST[2];
  If L1[5] = -2
    X0 = -2
  Else 
    X0 = PFU1[8]
  End If 
  Gosub L_4300 \ Print #CH_TXT;"/";M1$;
Else 
  Print #CH_TXT; Tab 103;"(no change)";
End If 
If L1[5] = -2
  AMOUNT = GLCOST[0]
Else 
  DISP_QTY = (L3[4] - PL4[16]);DISP_COST = GLCOST[0] \ Gosub CALC_DISP_EXT
  AMOUNT = DISP_EXT
End If 
If L1[5] = -1 Or L1[5] = -3
  If PL4[13]
    If L1[5] = -1 Let AMOUNT = GLCOST[1] * (PL4[12] * (L3[4] - PL4[16]) / PL4[13]) / 100
    If L1[5] = -3 Let AMOUNT = GLCOST[1] * (PL4[12] * (L3[4] - PL4[16]) / PL4[13])
  Else 
    If L1[5] = -1 Let AMOUNT = GLCOST[1] * (L3[5] * (L3[4] - PL4[16]) / L3[2]) / 100
    If L1[5] = -3 Let AMOUNT = GLCOST[1] * (L3[5] * (L3[4] - PL4[16]) / L3[2])
  End If 
End If 
Print #CH_TXT; Using "#####,###.##"; Tab 118;FNR(AMOUNT);
TXCOST[1] = TXCOST[1] + FNR(AMOUNT)
GXCOST[1] = GXCOST[1] + FNR(AMOUNT)
Print #CH_TXT;"" \ VV9[1] = VV9[1] + 1
If SPO And POCNTRL <> 0
  Print #CH_TXT; Using "CNTRL######";POCNTRL;
Else 
  Print #CH_TXT;A$[93,112];
End If 
Print #CH_TXT; Tab 22;L1$[31,56];
If Q1[6] Print #CH_TXT; Using "FREE ---,---,--#"; Tab 40;Q1[6];
If L1[5] = -3 Print #CH_TXT; Using "EXT WT: ########.##"; Tab 56;L3[5];
If Q1[7] Print #CH_TXT; Using "FREE ---,---,--#"; Tab 79;Q1[7];
If L2[1]
  If L1[5] = -2
    AMOUNT = L2[1]
  Else 
    AMOUNT = L2[1] * L3[4]
  End If 
  If L1[5] = -1 Or L1[5] = -3
    AMOUNT = (L3[4] * (L2[1] * (PL4[12] / PL4[13])))
  End If 
  Print #CH_TXT; Using "-----,---.##"; Tab 100;"PLUS FREIGHT"; Tab 118;FNR(AMOUNT);
  J1 = J1 + 1
  TXCOST[1] = TXCOST[1] + FNR(AMOUNT)
  TOTLINEFRT[1] = TOTLINEFRT[1] + FNR(AMOUNT)
End If 
Print #CH_TXT;"" \ VV9[1] = VV9[1] + 1
If PL4[8]
  If L1[5] = -2
    AMOUNT = PL4[8]
  Else 
    AMOUNT = PL4[8] * L3[4]
  End If 
  If L1[5] = -1 Or L1[5] = -3 !
    AMOUNT = (L3[4] * (PL4[8] * (PL4[12] / PL4[13])))
  End If 
  Print #CH_TXT; Using "-----,---.##"; Tab 100;"PLUS MISC"; Tab 118;FNR(AMOUNT);
  TXCOST[1] = TXCOST[1] + FNR(AMOUNT)
  TOTLINEMISC[1] = TOTLINEMISC[1] + FNR(AMOUNT)
End If 
Print #CH_TXT;"" \ VV9[1] = VV9[1] + 1
If L3[4] + L3[3] - (PL4[16] + PL4[17]) < L3[2]
  Print #CH_TXT; Tab 15;"**** RECEIVED SHORT-  ORDERED:";
  Print #CH_TXT; Using "---,---,--#"; Tab 49;Q1[1];
  Print #CH_TXT; Using "/---,--# FREE";Q1[8];
  Print #CH_TXT; Using "---,---,--#"; Tab 80;"OPEN QTY: ";Q1[1] + Q1[8] - Q1[2] - Q1[3];
  Call Logic(1,2 ^ 1,L1[3],X0) \ If X0 Print #CH_TXT;"   LINE CLOSED SHORT";
  Print #CH_TXT;"" \ VV9[1] = VV9[1] + 1
End If 
TXTPRNT5390: Print #CH_TXT;"\15\"; \ VV9[1] = VV9[1] + 1
If IMPORT And Q1[3] Gosub TXTPRNT5400
Return 
TXTPRNT5100: Rem "print the message lines
Print #CH_TXT; Using "###";L1[2];
Print #CH_TXT; Tab 5;L1$[81,92]; Tab 18;L1$[1,30]; Tab 50;L1$[31,60]
Print #CH_TXT;"" \ VV9[1] = VV9[1] + 2
Return 
TXTPRNT5400: Rem IMPORT COSTS RECAP
If VV9[1] + 3 > 60 Let VV9[1] = 90
Print #CH_TXT;"" \ VV9[1] = V9[1] + 1
Gosub TXTPRNT5800
Gosub L_6700
Print #CH_TXT; Tab 12;"OCN FRT: ";
Print #CH_TXT; Using "###.###";OFRATE;"/CBFT";
Print #CH_TXT; Using "$$$$$$#.##";PL5[0];
Print #CH_TXT; Tab 45;"DUTY: ";
If CDTYPE = 1 Print #CH_TXT;"%"; Else Print #0;"$";
Print #CH_TXT; Using "####.###";CDAMT;
Print #CH_TXT; Using "$$$$$$#.##";PL5[1];
Print #CH_TXT; Tab 72;"BROKER: ";
Print #CH_TXT; Using "$$$$$$#.##";PL5[2];
Print #CH_TXT; Tab 91;"CART IN: ";
Print #CH_TXT; Using "$$$$$$#.##";PL5[3];
Print #CH_TXT; Tab 111;"CART WH: ";
Print #CH_TXT; Using "$$$$$$#.##";PL5[4];
Print #CH_TXT;"" \ VV9[1] = VV9[1] + 1
Print #CH_TXT; Tab 12;"CART OUT: ";
Print #CH_TXT; Using "$$$$$$#.##";PL5[5];
Print #CH_TXT; Tab 34;"INSUR: ";
Print #CH_TXT; Using "$$$$$$#.##";PL5[6];
Print #CH_TXT; Tab 53;"AIRFRT: ";
Print #CH_TXT; Using "$$$$$$#.##";PL5[7];
Print #CH_TXT; Tab 72;"MISC.: ";
Print #CH_TXT; Using "-$$$$$#.##";PL5[8];
Print #CH_TXT; Tab 90;"TOTAL:";
Print #CH_TXT; Using "$$$$$$$#.##";PL5[9];
Print #CH_TXT; Tab 110;"UNIT:";
If Q1[3] Print #CH_TXT; Using PMASK$;FNP(PL5[9] / Q1[3]); Else Print #0;"0.00";
X0 = L1[5] \ Gosub L_4300 \ Print #CH_TXT;"/";M1$
Print #CH_TXT;"" \ VV9[1] = VV9[1] + 2
Return 
L_5500: Rem NEW P.O. HEADINGS
If V9[1] > 45 Let V9[1] = 99 \ Goto L_5800
Print #0;U9$
L_5512: Print #0;"  PO #"; Tab 12;"DATE"; Tab 34;"VENDOR"; Tab 70;"VENDOR REF#";
Print #0; Tab 88;"TYPE"
X2 = H0[3] \ Gosub L_7700
Print #0; Using "######";H0[2]; Tab 10;X$;
Print #0; Using "######:  "; Tab 30;C1[1];V$; Tab 70;H$[1,14]; Tab 87;
If H4[0] = 0 Print #0;"WAREHOUSE #";H4[1];
If H4[0] = 4 Print #0;"IMPT WHSE #";H4[1];
If H4[0] = 1 Print #0;" DIRECT";
If H4[0] = 5 Print #0;"IMPT DIRECT";
If H4[0] = 2 Print #0;"INDIRECT";
If H4[0] = 6 Print #0;"IMPT INDIRT";
If F1 Print #0; Tab 105;"(CONTINUED)";
Print #0;"\15\";U8$
Print #0; Tab 50;"--- PURCHASE UNITS AS ENTERED ---";
Print #0; Tab 85;"---------- STOCK UNITS --------"
Print #0;"LN#  PRODUCT CODE";
Print #0; Tab 20;"DESCRIPTION / SIZE"; Tab 54;"QUANTITY";
Print #0; Tab 70;"UNIT COST"; Tab 85;"QUANTITY";
Print #0; Tab 100;"UNIT COST"; Tab 118;"EXT COST"
Print #0;U9$
F1 = 99 \ V9[1] = V9[1] + 7 \ Return 
TXTPRNT5500: Rem NEW P.O. HEADINGS
If P61$[60,60] <> "Y" Return 
If Not(CH_TXT) Return 
If VV9[1] > 45 Let VV9[1] = 99 \ Goto TXTPRNT5800
Print #CH_TXT;U9$
TXTPRNT5512: Rem
If P61$[60,60] <> "Y" Return 
If Not(CH_TXT) Return 
Print #CH_TXT;"  PO #"; Tab 12;"DATE"; Tab 34;"VENDOR"; Tab 70;"VENDOR REF#";
Print #CH_TXT; Tab 88;"TYPE"
X2 = H0[3] \ Gosub L_7700
Print #CH_TXT; Using "######";H0[2]; Tab 10;X$;
Print #CH_TXT; Using "######:  "; Tab 30;C1[1];V$; Tab 70;H$[1,14]; Tab 87;
If H4[0] = 0 Print #CH_TXT;"WAREHOUSE #";H4[1];
If H4[0] = 4 Print #CH_TXT;"IMPT WHSE #";H4[1];
If H4[0] = 1 Print #CH_TXT;" DIRECT";
If H4[0] = 5 Print #CH_TXT;"IMPT DIRECT";
If H4[0] = 2 Print #CH_TXT;"INDIRECT";
If H4[0] = 6 Print #CH_TXT;"IMPT INDIRT";
If F1 Print #CH_TXT; Tab 105;"(CONTINUED)";
Print #CH_TXT;"\15\";U8$
Print #CH_TXT; Tab 50;"--- PURCHASE UNITS AS ENTERED ---";
Print #CH_TXT; Tab 85;"---------- STOCK UNITS --------"
Print #CH_TXT;"LN#  PRODUCT CODE";
Print #CH_TXT; Tab 20;"DESCRIPTION / SIZE"; Tab 54;"QUANTITY";
Print #CH_TXT; Tab 70;"UNIT COST"; Tab 85;"QUANTITY";
Print #CH_TXT; Tab 100;"UNIT COST"; Tab 118;"EXT COST"
Print #CH_TXT;U9$
F1 = 99 \ VV9[1] = VV9[1] + 7
Return 
L_5600: Rem NON-STOCK RECAP LINE
Gosub L_5700
Print #0; L1$[81,92];
Print #0; Tab 13;L1$[1,30]; Tab 43;L1$[31,60];
Print #0; Using "--------#.##"; Tab 74;Q1[3];
X0 = L1[4] \ Gosub L_4300 \ Print #0; Tab 84;"/";M1$;
Print #0; Tab 90;K1$[4,9]; Tab 98;C1$[1,25];
let tmp$=oH0[0] using "&&"
if oh0[0]>0 and oh0[0]<8
	let tmp$=ST$[oH0*5-4,oH0*5]
endif
if oh0[0]>8 and oh0[0]<13 let tmp$="CREDIT"
if oh0[0]=58 let tmp$="OR PK"
if OH0[0]=59 let tmp$="OR HD"
IF OH0[0]>93 AND OH0[0]<98 let tmp$="ER PR"
print #0;tab 124;tmp$[1,5];
Print #0;""
V9[1] = V9[1] + 1
Return 
L_5700: Rem NONSTK HEADER
If V9[1] < 60 Return 
If J2 Print #0;"\14\";
J2 = J2 + 1 \ V9[1] = 8
Print #0;"\15\";
Print #0; Tab 5;Msc$(3); Tab (65 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0; Tab 42;"PURCHASE ORDER RECEIPTS TO STOCK JOURNAL\15\"
Print #0; Tab 5;"SALESPERSON: ";K1$[1,3];"  ";S1$
Print #0; "ITEM CODE"; Tab 13;"DESCRIPTION";
Print #0; Tab 43;"DESCRIPTION 2"; Tab 74;"QTY RECEIVED";
Print #0; Tab 87;"UM"; Tab 91;"CUST #";
Print #0; Tab 98;"NAME";
print #0;tab 124;"STAT"
Print #0;""
Return 
L_5800: Rem HEADINGS ROUTINE
If V9[1] < 60 Return 
If J2 Print #0;"\14\";
J2 = J2 + 1 \ V9[1] = 5
Print #0;"\15\";
Print #0; Tab 5;Msc$(3); Tab (65 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2;"\15\"
Print #0; Tab 0;"-PO373-"; Tab 42;"PURCHASE ORDER RECEIPTS TO STOCK JOURNAL";
If audonly <> 0 Print #0; Tab 100;"*PREVIEW*";
If Not(REPRINT) and not(audonly)
  Print #0; Tab 120;"JRNL";JRNL;
End If 
Print #0;"\15\"
If WHSE Print #0; Using "for warehouse ## "; Tab 42;WHSE;
If Not(WHSE) Print #0; Tab 42;" for all warehouses";
If PMSG$[1,1] = "Y" Print #0;" print Y Lines";
If PMSG$[1,1] = "Z" Print #0;" print Z Lines";
If PMSG$[1,1] = "B" Print #0;" print Y Lines and Z Lines";
Print #0;""
If EOF Return 
Gosub L_5512
Return 
TXTPRNT5800: Rem HEADINGS ROUTINE
If VV9[1] < 60 Return 
If VJ2 Print #CH_TXT;"\14\";
VJ2 = VJ2 + 1 \ VV9[1] = 5
Print #CH_TXT;"\15\";
Print #CH_TXT; Tab 5;Msc$(3); Tab (65 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";VJ2;"\15\"
Print #CH_TXT; Tab 0;"-PO373-"; Tab 42;"PURCHASE ORDER RECEIPTS TO STOCK JOURNAL";
Print #CH_TXT; Tab 120;"JRNL";JRNL;"\15\"
Print #CH_TXT; Tab 0;"fspc:";COMP$;WH$;TXTNAME$;
If WHSE Print #CH_TXT; Using "for warehouse ## "; Tab 42;WHSE;
If Not(WHSE) Print #CH_TXT; Tab 42;" for all warehouses";
If PMSG$[1,1] = "Y" Print #CH_TXT;" print Y Lines";
If PMSG$[1,1] = "Z" Print #CH_TXT;" print Z Lines";
If PMSG$[1,1] = "B" Print #CH_TXT;" print Y Lines and Z Lines";
Print #CH_TXT;""
If EOF Return 
Gosub TXTPRNT5512
Return

L_6000: Rem READ PRODUCT FILE
Mat Read #3,L3[1];A$;
Mat Read #3,L3[1],156;B;
Mat Read #3,L3[1],256;A;
Mat Read #3,L3[1],512;PFU1;
Mat Read #3,L3[1],554;PFU2;
Return 

L_6200: Rem READ LINE ITEM
Mat Read #12,R12;L1
Mat Read #12,R12,12;L2
Mat Read #12,R12,24;L3;
Mat Read #12,R12,66;L1$;
Mat Read #12,R12,232;PL4;
Mat Read #12,R12,376;POMISC;
Mat Read #12,R12,382;PL5;
Read #12,R12,508;POCNTRL;
Gosub L_8300
Return

L_6300: Rem READ WHPR FILE
Mat Read #10,R10,78;W3;
Return

L_6500: Rem READ NSTKDESC
Mat Read #14,L3[1];NSD$
Mat Read #14,L3[1],96;NSD1
Mat Read #14,L3[1],112;NSD2
Mat Read #14,L3[1],132;NSD3;
Return 

L_6700: Rem CALC IMPORT UNIT COSTS
IMPQTY = L3[4]
RCUBE = L3[6]
If PL4[15] And PL4[14] Let RCUBE = IMPQTY * PL4[14] / PL4[15]
OFRATE = 0 \ If RCUBE Let OFRATE = PL5[0] / RCUBE
! If Err 0 Rem
Try Close #89 Else Rem
!If Err 0 Gosub ERR_TRAP
J$ = "3/POCDUTY" + Str$(COID)
Ropen #89,J$
!If Err 0 Rem
CDAMT = 0;CDTYPE = 0
If POMISC[2]
  Read #89,POMISC[2],20;CDAMT;
  Read #89,POMISC[2],26;CDTYPE;
End If 
! If Err 0 Gosub ERR_TRAP
Try Close #89 Else Rem
If CDTYPE = 0
  CNVTU[0] = PFU1[10];CNVTU[1] = L1[5];CNVTU[2] = 2;CNVTA = CDAMT
  Gosub L_20000 \ CDAMT = AMOUNT
End If 
Return 

CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext net cost
CNVTA[0] = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 5 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA[0] = DISP_COST;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
Return 

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

PRINT_SCREEN: Rem
!Call "progdflt","373","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$ = " ",RETVAL$
!  RETVAL$[1,1] = "N"
!  RETVAL$[2,2] = "N"
!  RETVAL$[3,4] = " 0"
!  RETVAL$[5,5] = "N"
!  RETVAL$[6,6] = "N"
!  RETVAL$[7,7] = " "
!  RETVAL$[8,8] = " "
!  Call "progdfltw","373","",77,RETVAL$,URECFLAG
!End If 
!EDTWHSE = 0
!Print 'CS'
!Print @20,0;"PURCHASE ORDER RECEIPTS TO STOCK JOURNAL";@0,0;"-PO373-"
!Print @2,2;"1> Is this a reprint? ";
!Print @2,4;"2> Page break on each PO#? ";
!Print @2,6;"3> WAREHOUSE: ";
!Print @2,8;"4> Print Include ";@25,8;"Z: Z Line  Y: Y Line  B: both  N: none "
!Print @2,10;"5> Print Cost Verification Worksheet? ";
!If RETVAL$[6,6] = "Y"
! Print @2,12;"6> Print cost ";@25,12;"  1: Po qty u/m or  2: Cost u/m"
!  Print @2,14;"7> Print format ";@25,14;"  W: wide or  N: narrow format"
!End If 
!If RETVAL$[1,1] = "Y"
!  Print @25,2;"Y" \ REPRINT = 1 \ S7 = 6
!Else 
!  Print @25,2;"N" \ REPRINT = 0 \ S7 = 5
!End If 
!If RETVAL$[2,2] = "N"
!  Print @35,4;"N" \ PAGE$ = "N"
!Else 
!  Print @35,4;"Y" \ PAGE$ = "Y"
!End If 
!WHSE = RETVAL$[3,4]
!If Not(WHSE)
!  If D9[1] = 1 Let WHSE = 1 Else Let WHSE = PD1[2]
!End If 
!PMSG$[1,1] = RETVAL$[5,5]
!Print Using "##";@20,6;WHSE;
!Print @20,8;PMSG$[1,1];
!PRINTCOST$ = RETVAL$[6,6]
!If PRINTCOST$ = "N"
!  Print @45,10;"N";
!Else 
!  Print @45,10;"Y";
! DISPCOST = RETVAL$[7,7]
!  Print @20,12;RETVAL$[7,7]
!  NARROW$ = RETVAL$[8,8]
!  If RETVAL$[8,8] = "N" Let NARROW = 1 Else Let NARROW = 0
!  If RETVAL$[8,8] = "N" Print @20,14;"N" Else Print @20,14;"W"
!End If 
Return 


INPUTS: Rem
!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults  E: exit ";
!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!Print @0,23;'CE';
X$="P"

!If X$ = "P"
! If Not(WHSE) And SPO <> 0
!    Print @0,23;'CL RB';"Warehouse Needs To Be Entered";
!   Signal 3,10
!   Gosub L_8000
!  Else 
!    If EDTWHSE
!      Goto L_8150
!    Else 
!      If PD1[2] And PD1[2] <> WHSE
!       If WHSE
!         Print Using "##";@0,21;"You have requested a journal for whse ";WHSE;" is this correct YES / <CR> ";
!        Else 
!          Print Using "##";@0,21;"You have requested a journal for all whse  is this correct YES / <CR> ";
!        End If 
!        Input Len (16384 + 3);""X$
!        Call String(1,X$)
!       If X$ <> "YES"
!          Gosub L_8000
!          Goto INPUTS
!        Else 
!         Goto L_8150
!       End If 
!      Else 
!       Goto L_8150
!      End If 
!    End If 
!  End If 
!End If 
!If X$ = "E" Goto L_9010
!If X$ = "R" Goto EDT_ALL
!If X$ = "" Goto INPUTS
!If X$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
!  Input Len 16384 + 1;""Z2$
!  Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "progdfltw","373","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL'
!End If 
!X = X$
!If X < 1 Or X > 7 Goto INPUTS
!Gosub EDT_FLDS
!Goto INPUTS
!EDT_ALL: Rem "want's all
!For X = 1 To 5
!  Gosub EDT_FLDS
!Next X
!Goto INPUTS
!EDT_FLDS: Rem "edit them here
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!FLG = 1
!On X Gosub L_8100,L_8163,L_8000,ASK_PMSG,ASK_PRINTCOST,ASK_DISPCOST,ASK_FORMAT
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!L_8000: Rem CHECK WAREHOUSE
!If P9$[33,33] <> "Y" And SPO = 0 Let WHSE = 0 \ Return 
!If PD1[2] Print Using "##";@0,20;'CE';;"Your default warehouse is ";PD1[2]
!L_8010: Rem LET WHSE=1 \ IF D9[5]=1 GOTO L_8090: ! "only 1 whse, don't ask
!J0$ = "3000022006"
!J1 = WHSE
!J5$ = "Enter Warehouse"
!If Not(SPO) Let J5$[Len(J5$) + 1] = " or  0: for all"
!Gosub ISINPUT
!WHSE = J1
!If WHSE < 0 Or WHSE > D9[5] Goto L_8010
!RETVAL$[3,4] = WHSE Using "##"
!If SPO And WHSE = 0 Goto L_8010
!If PD1[2] And PD1[2] <> WHSE
!  If WHSE Print Using "##";@0,21;"You have requested a journal for whse ";WHSE;" is this correct YES / <CR> ";
!  If Not(WHSE) Print Using "##";@0,21;"You have requested a journal for all whse  is this correct YES / <CR> ";
!  Input ""X$
! Call String(1,X$)
!  If X$ <> "YES" Goto L_8000
!End If 
!Print @0,20;'CL'; \ Print @0,21;'CL';
!EDTWHSE = 99
!L_8090: Return 
!L_8100: Rem CHECK CONTROL FLAGS
!L_8110: Rem
!J0$ = "2000 125 2"
!J5$ = "Enter  Y:  N: or  E: exit"
!If REPRINT = 0 Let J1$ = "N" Else Let J1$ = "Y"
!Gosub ISINPUT
!Call String(1,J$)
!If J$ = "E" Goto L_9010
!If J$ = "Y"
!  REPRINT = 1 \ S7 = 6
!Else 
!  REPRINT = 0 \ S7 = 5
!End If 
!If J$ <> "N" And J$ <> "Y" Print 'RB'; \ Goto L_8110
!RETVAL$[1,1] = J$
!Return 
!L_8163: Rem"page break
!J0$ = "6000 13504"
!J5$ = "Enter  Y: or  N: "
!If PAGE$ = "Y" Let J1 = 1 Else Let J1 = 0
!Gosub ISINPUT
!If J1 Let RETVAL$[2,2] = "Y" Else Let RETVAL$[2,2] = "N"
!If J1 Let PAGE$ = "Y" Else Let PAGE$ = "N"
!Return 
!ASK_PMSG: Rem"z lines, y lines, both or none
!J0$ = "2000 120 8"
!J5$ = "Print include  Z: Z Line  Y: Y Line  B: both  N: none "
!J1$ = PMSG$
!Gosub ISINPUT
!Call String(1,J$)
!If J$ <> "Z" If J$ <> "Y" If J$ <> "B" If J$ <> "N" Goto ASK_PMSG
!PMSG$ = J$
!RETVAL$[5,5] = PMSG$
!Return 
!ASK_PRINTCOST: Rem print cost verification
!J0$ = "6000 14510"
!J5$ = "Enter  Y: or  N: "
!If PRINTCOST$ = "Y" Let J1 = 1 Else Let J1 = 0
!Gosub ISINPUT
!If J1 Let RETVAL$[6,6] = "Y" Else Let RETVAL$[6,6] = "N"
!If J1 Let PRINTCOST$ = "Y" Else Let PRINTCOST$ = "N"
!If PRINTCOST$ = "Y"
!  Print @2,12;"6> Print cost ";@25,12;"  1: Po qty u/m or  2: Cost u/m"
!  Print @2,14;"7> Print format ";@25,14;"  W: wide or  N: narrow format"
!  Gosub ASK_DISPCOST \ Gosub ASK_FORMAT
!End If 
!If PRINTCOST$ = "N"
!  Print @2,12;'CL'; \ Print @2,14;'CL';
!End If 
!Return 
!ASK_DISPCOST: Rem
!J0$ = "3000 12012"
!J5$ = "Print  1: Po qty u/m or  2: Cost u/m in cost columns  "
!J1 = DISPCOST \ J2$ = "#"
!Gosub ISINPUT
!DISPCOST = J1
!If DISPCOST < 1 Or DISPCOST > 2 Goto ASK_DISPCOST
!RETVAL$[7,7] = DISPCOST Using "#"
!Return 
!ASK_FORMAT: Rem
!J0$ = "2000 12014"
!J5$ = "Enter  W: wide or  N: narrow format"
!J1$ = NARROW$
!Gosub ISINPUT
!Call String(1,J$)
!NARROW$ = J$
!If NARROW$ <> "N" If NARROW$ <> "W" Goto ASK_FORMAT
!If NARROW$ = "N" Let NARROW = 1 Else Let NARROW = 0
!RETVAL$[8.8] = NARROW$
!Return 

L_8200: Rem CHECK/SET WHSE PROC FLAGS
!If Err 0 Rem
Try Close #90 Else Rem
! If Err 0 Gosub ERR_TRAP
Read #1,88,2768;X$[1,16]; \ Open #90,X$
!Print @0,23;'CL';"CHECKING WHSE FLAGS, PLEASE WAIT"; \ Signal 3,0
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
L_8225: Mat Read #90,WHREC,900;WPF;
!Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
If WPF[373] and WHREC <> 99
	E=3  ! CHECK with time check
	TMP$=" "
	call "proglock.dl4","373-"+(whse using "&&"),e,TMP$  !! no special flag for delete
	if e  !! found entry
		Let UIDREC = WPF[373] \ Goto L_8281
	else
		e=whse  ! pass in warehouse selected
		call "flagreset","373.DL4",e
	endif
endif
Mat Read #90,WHREC,900;WPF;
If WPF[373] Let UIDREC = WPF[373] \ Goto L_8281
If WPF[374] Let UIDREC = WPF[374] \ Goto L_8280
WPF[373] = UIDREC[1]
If WHSE If WHREC = 99 Let WPF[373] = 0 - WHSE
Mat Write #90,WHREC,900;WPF;
If WHSE If WHREC <> 99 Let WHREC = 99 \ Goto L_8225
If WHSE If WHREC = 99 Goto L_8276
For WHREC = 0 To 98
  Mat Read #90,WHREC,900;WPF;
  If WPF[373] Let UIDREC = WPF[373] \ Goto L_8281
  If WPF[374] Let UIDREC = WPF[374] \ Goto L_8280
L_8275: Next whrec
L_8276: If SPO Mat Read #90,(WHSE - 1),848;N4; \ CNTNUM = N4
Try Close #90 Else Rem
Return 

L_8280: Rem AIP IF WPF[CPRT]=374
USR$ = " ",USR$
If UIDREC > 0
	!Call "getuidinfo",UIDREC,USR$
	 USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
endif
eflg=eflg+1
message$=message$+"Accept In Process By User "+rtrim$(usr$[21])
if whse then message$=message$+" Warehouse "+(whse using "##")
message$=message$+" - Please Try Later. "
!If UIDREC > 0 Call "getuidinfo",UIDREC,USR$
!Print @0,23;'RB CL';"ACCEPT IN PROCESS USER ";USR$[21];
!Print " -- PLEASE TRY LATER."; \ Signal 3,30
Goto L_9010
L_8281: Rem jip
USR$ = " ",USR$
If UIDREC > 0
	!Call "getuidinfo",UIDREC,USR$
	 USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
endif
eflg=eflg+1
message$=message$+"Journal In Process By User "+rtrim$(usr$[21])
message$=message$+" - Please Try Again In 5 Minutes. "
! Print @0,23;'RB CL';"JOURNAL IN PROCESS USER ";USR$[21];
!	Print " -- PLEASE TRY LATER."; ! \ Signal 3,30
Goto L_9010

L_8300: Rem UNPACK L1[3] TO FLAGS[x]
X2 = L1[3] \ For K = 0 To 11
  FLAGS[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
X2 = 0 \ For K = 0 To 11
  If FLAGS[K] Let X2 = X2 + 2 ^ K
Next K \ L1[3] = X2 \ Return 
L_8500: Rem UP STATUS
!If Err 0 Rem
Try Close #0 Else Rem
!If Err 0 Gosub ERR_TRAP
!Print @0,20;'RB CE';"Has this journal printed correctly (Y/N)? ";'CE';
!Input Len 16385;""X$
x$="Y" ! OK IS DEFAULT!
if reprint<>0 let x$="N"
if audonly = 1 let x$="N"
if eflg<>0 let x$="N"
! if totpo=0 let x$="N" ! no purchase order to accept
If X$ = "N"
	  If P61$[60,60] = "Y" And CH_TXT = 98 ! remove special cost file
		 Call FindF(TXTFNAME$,A9)
		If A9
			!If Err 0 Rem
			Try Close #99 Else Rem
			!If Err 0 Gosub ERR_TRAP
			 Kill TXTFNAME$
		End If 
	   End If 
	   GOTO l_8680: ! RESET THE IN PROCESS FLAG Return 
End If 
! If X$ <> "Y" Print 'RB'; \ Goto L_8500 ! CAN'T HAPPEN
! Print @0,22;"Updating... please wait...";'CE';
IF s1>5 goto L_8680: ! bypass this status
A1$ = " ",A1$ \ A1$ = S1 Using "##"
L_8560: Search #8,3,1;A1$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8680
X0 = A1$[1,2] \ If X0 <> S1 Goto L_8680
Mat Read #8,R8;H0
Mat Read #8,R8,242;H4
If WHSE If WHSE <> H4[1] Goto L_8560
IF HT$[1,1]="N" ! "No Warehouse POS			! "cct110877
	IF H4[0]=0 OR H4[0]=4 GOTO L_8560:
ENDIF 
IF HT$[2,2]="N" ! "No Directs
	IF H4[0]=1 OR H4[0]=5 GOTO L_8560:
ENDIF
IF HT$[3,3]="N" ! "No Indirects
	IF H4[0]=2 OR H4[0]=6 GOTO L_8560:
ENDIF  
U5$ = " ",U5$ \ U5$ = A1$ \ U5$[1,2] = S1 + 1 Using "##"
Search #8,4,1;U5$,R8,E \ If E Gosub ERR_SEARCH
U5$[1,2] = S1 Using "##"
Search #8,5,1;U5$,R8,E \ If E Gosub ERR_SEARCH
H0[0] = S1 + 1 \ Write #8,R8;H0;
Write #8,R8,540;JRNL;
Goto L_8560
L_8680: If SPO
 ! If Err 0 Rem
 Try Close #90 Else Rem
 ! If Err 0 Gosub ERR_TRAP
  Read #1,88,2768;X$[1,16]; \ Open #90,X$
  If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
  Write #90,WHREC,848;N4;
  Close #90
End If 
Return 
PRINT_CURRENT: Rem----------------------------------------
CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1;CNVTA = A[0]
If WHSE Let CNVTA = W3[0]
Gosub L_20000
X0 = L1[4] \ Gosub L_4300
Print #0; Using "QTY ON HAND:------#.## "; Tab (34);AMOUNT;M1$;
CNVTU[1] = L1[5];CNVTU[2] = 2;CNVTA = B[21]
If W3[15] And P9$[32,32] = "Y" Let CNVTA = W3[15]
Gosub L_20000
X0 = L1[5] \ Gosub L_4300
Print #0; Using "  AVG COST:------#.## ";AMOUNT;M1$;
Return 
L_8900: Rem PRINT COST WORKSHEET
If PRINTCOST$ = "Y"
	! Swap 1,"PO373WS"
	call "po373ws.dl4",S7,WHSE,NARROW,DISPCOST,intco
endif
L_8950: ! Signal 3,0
Return 
WPFRESET: Rem reset wpf flags
!If Err 0 Rem
Try Close #90 Else Rem
!If Err 0 Gosub ERR_ESCAPE
Read #1,88,2768;X$[1,16]; \ Open #90,X$
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
WP8225: Mat Read #90,WHREC,900;WPF;
WPF[373] = 0
If WHSE If WHREC = 99 Let WPF[373] = 0
Mat Write #90,WHREC,900;WPF;
If WHSE If WHREC <> 99 Let WHREC = 99 \ Goto WP8225
If WHSE If WHREC = 99 Goto WP8277
WP8277: Rem finito
Close #90
Return 

L_9100: Rem DONE WITH RANGE
Gosub L_4500
Gosub L_3000
Gosub L_8900
If P60$[46,46] = "Y" Gosub L_9150
If S1 = 5 Gosub L_8500
TMP$="do an unlock"
call "proglock.dl4","373-"+(whse using "&&"),0,tmp$
Goto OUTEND
L_9150: Rem
! p60$[46,46]="N" !!!!!! for imports currently not used
if p60$[46,46]="Y" 
	SOURCE = 373
	clear specs[]
	CLEAR CHAN[]
	chan[0]=1 ! cntrl file                    
	chan[1]=8! purchase order header  #60
	chan[2]=12 ! po lines #61
	chan[3]=19! po lot
	chan[4]=3 ! product file #64
	chan[5]=5 ! vendor file
	chan[6]=14 !  nonstock #66
	chan[7]=13 ! unit of measure file #67

	let specs[0]=rcptdate ! MMDDYY format
    Call "PO372IMP.DL4",SOURCE,REPRINT,chan[],specs[],e$,IntCo,rstr$
	! Call "PO372IMP",SOURCE,REPRINT
endif
Return 
Stop 

L_13000: Rem "======== create indexed sort file for various functions
! F$ = Spc(6) Using "6/SORTWORK&&&&!"
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
if uidrec[1]<10000
	let f$=uidrec[1] Using "6/SORTWORK&&&&"
else
	let f$=uidrec[1] Using "6/SORTWORK&&&&&"
endif
tmp$ = "files/"+F$
FILE$ = "[1:1] ",tmp$+"!"
!L_13025: E = 0 \ If Err 0 Let E = Spc(8)
Try Close #99 Else Rem
Build #99,FILE$
!If E = 40 Close #99 \ Goto L_13025
!If E Gosub ERR_SEARCH
!If Err 0 Gosub ERR_ESCAPE
R[99] = 14 \ Search #99,0,1;F$,R[99],E \ If E Gosub ERR_SEARCH
R[99] = 1 \ Search #99,0,0;F$,R[99],E \ If E Gosub ERR_SEARCH
R[99] = 0 \ Search #99,1,0;F$,R[99],E \ If E Gosub ERR_SEARCH
tmp$ = "files/",f$," <666>"                                 
Modify tmp$           
try close #99 else rem
open #99,f$
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120: !  If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 



ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT PROGRAM
Gosub WPFRESET
L_9010: !Print 'CS' 
!Close 
! Chain "MX000"
! Stop 
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflg)
	if not(totpo)
		returnstatus=1
		let message$=message$+"There are no purchase orders available to list"
		if whse<>0
			let message$=message$+" for warehouse "+str$(whse)
		endif
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totpo)+" Purchase Order(s) Listed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program