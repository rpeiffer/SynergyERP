!"serpcntrlf" === description  synergy erp Control File 924 Maintenance
! 
! loadsave -w -n 100,10 -o prog/dxport/serpcntrlf.dl4 src/serpcntrlf.src
!  08/04/2009 started - try for global - pass rec # in Action 2
!
include "src/copyright.inc"
!
! records documented: 50 - statement types
!					  22 - credit codes
!					  48 - CM Types
!					  49 - Credit Card Types
!					  65 - Hold Code Names
!					  66 - Hold Code Passwords
!					 107 - Ship#/FOB descs
!					 130 - Routing/Ship Via
!					  67 - UDA Field Names
!					  68 - More UDA Field Names
!					 108 - Inv Trans Codes
!					 185 - Order Type/LP Update (0/1)

! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus

External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,JDate$,FormatDate2$

Declare Intrinsic sub programdump,env,Logic
Declare Intrinsic Sub DateToJulian, JulianToDate
Declare Intrinsic Function findchannel

! internal subs/function
Declare Sub OpenFiles,UpdateLog,sndsys
Declare Sub SbmtData,Snddata,putctrlfld
Declare function getctrldesc$

OPTION GOSUB NESTING 16  ! Default is 8
Try
	Option String Redim is legal ! in case subs dim/use same names
	
	dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
	dim action$[30],options$[30],userid$[8],b$[200],action1$[30],Action2$[30]
	Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000]
	dim tmp$[1200],tmp1$[300],Msgdesc$[150],X$[20]
	dim Message$[200],WebStr$[2000],SessionID$[200]
	Dim Desc$[30],P9$[50],P60$[50],P61$[256]
	Dim QMask$[20],PMask$[20],Key1$[60],UA2$[50]
	Dim Mask34$[10]
	dim Blank$[100] \ Blank$=" ",Blank$
	Dim 1%,X1[9],D1[1],COMM_LEV,FOffset
	dim 1%,cost_lev[4],Whse,debug,cnvtu[2],2%,Q0[1]
	Dim 2%,X2[9],UA2[2]
	Dim 2%,maxcnt \ maxcnt=50 ! init max records in arrays for list
	Dim 3%,CRec,X3[9]
	Dim 3%,R[99],O1,UB0[16],Amount,CNVTA
	dim List$[maxcnt,1000] ! for .net (larger size - ZLines)
	dim slist$[maxcnt,1000] ! second list
	dim dmsg$[256],dblog$[60] \ dblog$="files/6/contrlf.log" ! fields for DEBUG

	Def FNI(H) = Int(Abs(H) +.5) * Sgn(H)
	Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)

	! call dxopen() ! done in fmmenu - for standalone run
	call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
	
	debugDetail=0;debug=0 ! can do debug text by changing both to 1
	If debugDetail
		debug=1
		tmp$="serpcntrlf"
		dmsg$[1,50]="-",dmsg$ \ Call updatelog(debug)               
		dmsg$="start...program "+tmp$ \ Call updatelog(debug)
	Endif
	Action$=UCase$(Action$)
	ACtion$=RTrim$(Action$) ! make sure UPPERCASE and No blanks at end
	Action1$=UCase$(action1$)
	Action1$=RTrim$(action1$) ! UC and trimmed
	Action2$=UCase$(action2$)
	Action2$=RTrim$(action2$) ! UC and trimmed
	if debugdetail
		dmsg$="SERPCNTRLF ACTION "+action$
		If Action1$<>"" let dmsg$=dmsg$+" ACTION1 "+action1$ 
		if Action2$<>"" let dmsg$=dmsg$+" ACTION2 "+action2$
		Call updatelog(debug)
	Endif
	Close #CTLC ! close read only control file
	call OpenFiles() ! open all needed files
	call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost security

	Mat Read #ctlc,19,50;P9$;
	Mat Read #ctlc,60,50;P60$;
	Mat Read #ctlc,61,0;P61$;
	Mat Read #CTLC,115,40;Q0;
	
	Mask34$="###.####" ! 3.4 mask
	QMask$="---------#.##"
	tmp$="#",tmp$
	If q0[1]<=0 Let Q0[1]=2
	If Q0[1] Let Pmask$="-----------#.",tmp$[1,Q0[1]]     !price mask
	! get the Usercntrl Rec #
	If Userid$="" or UserID$[1,2]="  "
		Call DXGet("S_USER.ID",tmp$) ! get from system variable
	Else
		tmp$=UserID$
	Endif
	Let UserID$=UCase$(tmp$) ! make sure it's UPPERCASE as that's what PM uses
	Let Key1$=UserID$+"          " ! space fill it
	UCC = OpenFile(-9988, intCo) \ if UCC=-1 Error 42
	Key1$[11]="" ! cut to length
	Search #UCC,2,1;Key1$,Rec,E
	If Not(E)
	  Let SCR=Rec
	  Mat Read #ucc,scr,200;UA2;
	  Mat read #ucc,scr,336;Ua2$;
	  Read #ucc,scr,394;comm_lev;
	Else
	  Let SCR=0;comm_lev=0 ! 
	  UA2[0]=0;UA2$=" ",UA2$
	Endif
	Close #UCC
	! GET additional user data flags
	REM UNPACK A2[0] TO B0[]                         
	FOR X1=0 TO 15                                          
		LET O1=2^X1 \ LET M1=1
		! CALL $LOGIC,M1,O1,A2[0],B0[X1] ! ub
		Call Logic(m1,O1,UA2[0],UB0[X1])
		LET UB0[X1]=SGN(UB0[X1])
	NEXT X1   
	! call dxsave(0,"tmp/crecsv.txt!") ! save web send data
	ReturnStatus=0
	Message$="Action 1 not found"
	CRec=action2$
	if action2$="" 
		returnstatus=0
		Message$="Record not passed"
		goto SerpCtrlDone
	Endif
	if crec<0 Or crec>CHF(FLDC)-1 or fra(CRec)
		returnstatus=0
		Message$="Record "+Str$(CREC)+" not valid"
		goto SerpCtrlDone
	Endif
	try
		mat READ #FLDC,CREC,0;Desc$;
		mat read #FLDC,CRec,30;D1;
	Else
		Desc$=""
		clear d1[]
	End try
	
	tmp$=Trim$(Desc$)
	if tmp$="" ! no record set up
		returnstatus=0
		Message$="Record "+Str$(CREC)+" not defined"
		goto SerpCtrlDone
	Endif
	FOffset=0
	If CREC=50 ! statements
		foffset=1
	Endif
	Sfld=1-foffset
	LFld=d1[1]-foffset
	
!								for docs: replace R### with Record # (ie: R50-GetData.doc)
  select case action1$

    Case "GETDATA" ! data from cntrl						doc=R###-GetData.doc
		returnstatus=1
		message$="OK"
		if CRec=50 let LFLD=D1[1] ! so 1 to 10 in for/next
		Call Sndsys()
		call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		if debugdetail
			dmsg$="Sent Cntrl Rec "+Str$(CRec)+" data" \ Call updatelog(debug)
		Endif
		! end of GETDATA
	Case "SBMTDATA" ! STC changes							doc=R###-SubmitData.doc
		returnstatus=1
		message$="OK"
		Call SbmtData()
		if debugdetail
			dmsg$="Submit Cntrl Rec "+Str$(CREC)+" "+Message$ \ Call updatelog(debug)
		Endif
		! end of SBMTDATA

		! call programdump("tmp/creclog1!","")
  End Select
  SerpCtrlDone: ! finished
  ! status section                                                       
  Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)                 
  Call AddToStr(e$,rstr$,WebStr$)                                        
  Call SetOutPut(e$,rstr$)       
  if debugdetail
		dmsg$="End of Program SERPCNTRLF" \ Call updatelog(debug)
  Endif
else
 include "src/callmainerrnet.inc"
end try
end  ! end of Main
!
!--------------------------------------------------------------------

! subs start now
!------------------------------------------------------------------------------------------
Sub OpenFiles()

 Try
    !
	CTLC=OpenFile(9999,Intco) \ if ctlc=-1 error 42
	FLDC=Findchannel()
	tmp$="cntrl/fielddesc1"  ! +Str$(IntCo)
	Try
		ROpen #FLDC,tmp$
	Else
		Error 42
	End try
	if debugdetail
		dmsg$="Files Opened" \ Call updatelog(debug)
    Endif
 else
    include "src/callsuberr.inc"
  end try
end sub ! openfiles
!
!------------------------------------------------------------------------------------------
Sub sndsys()
! send flags & droplists
 Try
	Clear List$[]
	tmpcnt=maxcnt
	! no flags, just data
	
	! send header
	List$[0]=bsdel$,"CNTRLFILE",fdel$
	List$[1]="REC",fdel$,"DESC",fdel$,"NUMFLD",fdel$,"FLDLEN",fdel$
	List$[2]=Str$(CREC),fdel$,Trim$(Desc$),fdel$,Str$(D1[1]),fdel$,Str$(D1[0]),fdel$
	List$[3]=esdel$
	call AddToStr(e$,rstr$,List$[]) ! add droplist to string
	call Snddata()
	SURecDone: ! finito
	! calling rtn to addtostr
 else
    include "src/callsuberr.inc"
  end try
end sub ! sndsys
!
!------------------------------------------------------------------------------------------
Sub updatelog(debug)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " UID "+RTrim$(Userid$)+" " + dmsg$ + "'' >> " + dblog$
End Sub 
! 
!--------------------------------------------------------------------
Sub SndData()
! send days data
 Try
	Clear List$[]
	tmpcnt=maxcnt
	List$[0]=bsdel$,"CTRLDATA",fdel$
	Webstr$="FLDID",fdel$,"VALUE",fdel$
	List$[1]=webstr$
	row=2
	if SFld<1 let SFld=1 ! r50 w/b 0 so make 1
	FOR X=SFld TO LFld
		tmp$=getctrldesc$(x)
		Webstr$=Str$(x-foffset),fdel$,TMP$,fdel$ ! chg back to 0 r50
		List$[row]=webstr$
		row=row+1
		If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Next X
	List$[row]=esdel$
	! caller to addtostr
	GDDone: ! done
 else
    include "src/callsuberr.inc"
  end try
end sub ! SndData
!
!------------------------------------------------------------------------------------------
Sub SbmtData()
! submit data (all fields)
 Try
	returnstatus=1
	message$="OK" ! all but r50 is 1 to num. r50 = 0 to 9
	For X=SFld to LFld
		call dxget("FLDVALUE"+Str$(X),tmp$)
		f0=x ! +foffset ! so is 1 for all but r50 is
		if crec=185 ! limit to 0/1 ONLY
			x2=tmp$
			if x2<0 or x2>1 or fra(x2)
				ReturnStatus=0
				Message$="Invalid Entry on # "+Str$(X)
				goto sbtddone
			Endif
		Endif
		call putctrlfld(f0)
	Next X
	
  SBTdDone: ! finished
 else
	include "src/callsuberr.inc"
  end try
end sub ! SbmtData
!
!------------------------------------------------------------------------------------------
function getctrldesc$(F0)
! get control file desc for passed field
 Try
	dim d1$[60]
	tmp$=blank$
	LET J2=F0*D1-D1
	READ #CTLC,CRec,J2;D1$[1,D1]; \ tmp$=RTrim$(D1$)
	IF D1=2 READ #CTLC,CRec,F0*2-2;X1; \ tmp$=X1 USING "-####"
	IF D1=4 READ #CTLC,CRec,F0*4-4;X2; \ tmp$=X2 USING "-####.##"
	IF D1=6 READ #CTLC,CRec,F0*6-6;X3; \ tmp$=X3 USING "-######.##"
	tmp$=LTrim$(tmp$) ! for numbers
 Else
	include "src/callsuberr.inc"
  end try
end function tmp$ ! getctrldesc$
!
!------------------------------------------------------------------------------------------
Sub putctrlfld(f0)
! write back field
 try
	if d1>0
		Dim j$[D1]
	Else
		dim J$[30]
	Endif
	J$=tmp$+Blank$
	IF D1>6 WRITE #CTLC,CRec,(F0+FOFFSET)*D1-D1;J$[1,D1];    
	IF D1=2 LET X1=tmp$ \ WRITE #CTLC,CRec,(F0+FOFFSET)*2-2;X1;
	IF D1=4 LET X2=tmp$ \ WRITE #CTLC,CRec,(F0+FOFFSET)*4-4;X2;
	IF D1=6 LET X3=tmp$ \ WRITE #CTLC,CRec,(F0+FOFFSET)*6-6;X3;
 
 else
	include "src/callsuberr.inc"
  end try
end sub ! putctrlfld
!
!------------------------------------------------------------------------------------------