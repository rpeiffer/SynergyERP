! >>> Program 665
!
! description Create G/L Batch from Comma delimited (.csv) file
! loadsave -w -n 100,10 -o prog/dxport/665.dl4 src/665.src
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.3 OBJECT CODE     Created: JAN  8, 2013  12:14:48
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/gl665.src (univ2) [mary] {08399}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!Declare Intrinsic Sub Date,FindF,InpBuf,String,StringSearch
!Option Default Dialect IRIS1
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian,StringSearch
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"                    
Declare External Function GetUIDRec,GetUIDInfo$
Try
Rem GL665 CREATE G/L BATCH FILE FROM Excel spreadsheet comma delimited files
Rem LAST UPDATE: 12/2011 General Paper Goods task#12260
Rem Custom Modification of adp payroll  to create batch
Rem file layout looks as follows:
Rem     11/04/2005,10300101,529 COLLEGE FUND         ,0000000.00,0000095.00
Rem field 1: MM/DD/YYYY  11/04/2005,
Rem field 2: g/l account number 10300101,
Rem field 3: description 529 COLLEGE FUND         ,
Rem field 4: debit amount 0000000.00,
Rem field 5: credit amount0000095.00,
If Err 0 Gosub ERR_TRAP
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim D$[136],F$[16],F1$[16],F2$[20],F9$[2],G$[2],K1$[25]
Dim P$[64],R$[64],R10$[30],R12$[235],S1$[4],S9$[80],R20$[30],R21$[30]
Dim SOURCEFILE$[50],TEXTFILE$[70],FNAME$[50],FILENAME$[50]
Dim SOURCEDIRNAME$[50],TEXTDIRNAME$[50],GLMNAME$[20],GLKEY$[20]
Dim PERIOD$[4]
Dim 2%,EOMDAY,EOMDATE,3%,GLACCT,REFNUM,GLAMOUNT,GLDATE,POSTDATE
Dim 3%,GLDEBIT,GLCREDIT
Dim 2%,PGLDATE,PDATE$[10]
Dim DATE$[8],DATE1$[6],GLDESC$[80]
Dim CUSTOM_CUSTOMER$[30]
Dim 1%,MONTH_,YEAR_
Dim R11$[20]
Dim T$[64],X1$[10],CLIENT$[4],WK$[100],WK1$[100],CMD$[1000]
Dim YEAR_$[4],BUDGET$[1],BTPER$[4],BFPER$[4],GROUP$[2],CLIENT1$[4]
Dim NUFIELD$[30]
Dim FIELD$[50]
Dim 1%,E,B,L9,LEARNFLAG
Dim 3%,T,R[23],R3,CRAMT,DRAMT
Dim 2%,D[3],G,G1,G2,G3,X
Dim 4%,C2[1],4%,A3[39]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr,S9[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
DIM SOURCEDIRNAME$[50],TEXTDIRNAME$[50],tmpfile$[80],txtfile$[80]
Dim 3%!
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1500],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim eparam$[50],blank$[50]
Dim 3%,uarec
let blank$=" ",blank$
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
uarec= GetUIDRec(e$,IntCo,Userid$)
COID=intCO
COMP=intCO
for ctr=0 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors


Def FNR(R) = Sgn(R) * Int((Abs(R) + .005) * 100) / 100
Mat Read #1,51,6;S9;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
custom_customer$ = UCase$(Trim$(custom_customer$))
Call dxsave(0,"tmp/gl665.txt!")
FILENAME$ = "cntrl/gl665.ini"
Call FindF(FILENAME$,A9)
If Not(A9)
	eflag=eflag+1
	returnstatus=1
	message$=FILENAME$+" does not exist. "
  Goto OUTEND
End If 
Open #90,FILENAME$
Read #90;SOURCEDIRNAME$
X = Len(SOURCEDIRNAME$)
If x>0
	if sourcedirname$[x,x]="\15\" let sourcedirname$[x,x]=""
endif
sourcedirname$ = Trim$(sourcedirname$)
If SOURCEDIRNAME$ = "" Or SOURCEDIRNAME$ = "!"
	eflag=eflag+1
	returnstatus=1
	message$=SOURCEDIRNAME$+" source directory not set up properly. "
	Goto OUTEND
End If 
X = Len(SOURCEDIRNAME$)
If SOURCEDIRNAME$[X,X] <> "/" Let SOURCEDIRNAME$[X,X] = ""
Call FindF(SOURCEDIRNAME$,A9)
If Not(A9)
	eflag=eflag+1
	returnstatus=1	
	message$=SOURCEDIRNAME$+" - Source Directory Does not exist. "
	Goto OUTEND
End If 
Read #90;TEXTDIRNAME$
textdirname$ = Trim$(textdirname$)
let x=len(textdirname$)
If x>0
	if textdirname$[x,x]="\15\" let textdirname$[x,x]=""
endif
If TEXTDIRNAME$ = "" Or TEXTDIRNAME$ = "!"
	eflag=eflag+1
	returnstatus=1	
	message$=TEXTDIRNAME$+" text directory not set up properly. "
	Goto OUTEND
End If 
X = Len(TEXTDIRNAME$)
If TEXTDIRNAME$[X,X] <> "/" Let TEXTDIRNAME$[X,X] = ""
Call FindF(TEXTDIRNAME$,A9)
If Not(A9)
	eflag=eflag+1
	returnstatus=1
	let message$=TEXTDIRNAME$+" - Text Directory Does not exist. "
    Goto OUTEND
End If 
Call dxget("u_group",groupid$)             
If RTrim$(groupid$) = "" Let groupid$ = "0"
G$[1,1] = COID Using "#"
G$[2,2] = GROUPID$ 
GROUP$[1,2] = G$[1,2]
! need to get client #
IF S9>0
	Call dxget("CLIENTID",tmp$) \ D[1] = tmp$ !!Enter Client #                     
	If D[1] <= 0 Or D[1] > 9999 
		let eflag=eflag+1
		LET Returnstatus=1
		Let message$ = "Invalid client number!"
		goto outend:
	endif
	let client$=d[1] using "####"
	for x=1 to 3
		if client$[x,x]=" " let client$[x,x]="."
	next x
else                                                   
	D[1] = 1 ! cleint # 1
	CLIENT$ = "...1"
endif
Gosub L_4000 ! get acf file
Gosub L_4100 ! get client info
GLMNAME$ = F9$,"/GLM",G$[1,2],CLIENT$[1,4]
Call FindF(GLMNAME$,A9)
If Not(A9)
	let eflag=eflag+1
	LET Returnstatus=1
	Let message$ = "GL Master File Does Not Exist"
	goto outend:
End If 
Ropen #50,GLMNAME$
GLKEY$ = " ",GLKEY$
Search #50,2,1;GLKEY$,V1,E \ If E > 1 Gosub ERR_SEARCH
If E<>0
	let eflag=eflag+1
	LET Returnstatus=1
	Let message$ = "GL Master File Control Record Does Not Exist"
	goto outend:
End If 
Mat Read #50,V1,70;A3;
GETFNAME: Rem get filename
!Print 'CS';"-gl665-"; Tab 10;"Create General Ledger Batch from Excel Spreadsheets ";
!Print @0,22;'CL';"Enter File name to update or <CR> to end.";
!Print @0,23;'CL';"Do not enter .csv at the end of name";
!Print @0,3;"Enter File to process: ";
Call dxget("FNAME",tmp$)
let fname$=rtrim$(tmp$)
If FNAME$ = "" 
	let eflag=eflag+1
	returnstatus=1
	let message$="Invalid File Name Entered "
	Goto OUTEND
endif
For X = 1 To Len(FNAME$)
  If FNAME$[X,X] = " " Let FNAME$[X,X] = "_"
Next X
!Print @0,22;'CE';
SOURCEFILE$ = SOURCEDIRNAME$ + FNAME$ + ".csv"
TEXTFILE$ = TEXTDIRNAME$ + "gl665" + Str$(uarec) + ".txt"
Call String(2,TEXTFILE$) ! make all lower case
TMPFILE$ = "tmp/glex665" + str$(uarec)
CMD$ = "(ls ",SOURCEFILE$," > ",TMPFILE$,") 2>/dev/null"
System CMD$
Call FindF(TMPFILE$,A9)
If Not(A9)
	let eflag=eflag+1
	let returnstatus=1
	let message$="File "+rtrim$(fname$)+" Not Found "
	goto outend:
Else 
  R12$ = ""
  Open #99,TMPFILE$
  Read #99;R12$
  Close #99
  CMD$ = "rm " + TMPFILE$
  System CMD$
  let x=len(r12$)
  if x>0
	if r12$[x,x]="\15\" let r12$[x,x]=""
  endif
  If R12$ = ""
	let eflag=eflag+1
	let returnstatus=1
	let message$="File "+rtrim$(fname$)+" Not Found "
	goto outend:
  End If
  
End If 
!CMD$ = "dtox " + SOURCEFILE$ + " > " + TEXTFILE$
CMD$ = "cp " + SOURCEFILE$ + " " + TEXTFILE$
System CMD$
Call FindF(TEXTFILE$,A9)
If Not(A9)
	let eflag=eflag+1
	let returnstatus=1
	let message$="File "+rtrim$(fname$)+" Not Available "
	goto outend:
End If 
!Print @0,5;'CE';"1> Posting Period (MMYY) ";
!Print @0,7;'CE';"2> Posting Date (MMDDYY) ";
!Print @0,9;'CE';"3> Reference Number ";
!Print @0,11;'CE';"4> Journal Source Code ";
!For OPT = 1 To 4
!  On OPT Gosub ,GETREFNUM,GETJSCODE
!Next OPT
!L_1030: Print @0,23;"Enter #:Field to Edit, E: end, U: update ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "U" Goto STARTUPDATE
!OPT = J$
!On OPT Gosub GETPOSTPERIOD,GETPOSTDATE,GETREFNUM,GETJSCODE
!Goto L_1030

GETPOSTPERIOD: Rem get current period  #1
Call dxget("POSTPER",tmp$) ! MMYY format
LET J1=TMP$
YEAR_$ = J1 Using "&&&&"
PERIOD$ = YEAR_$[3,4],YEAR_$[1,2]
YEAR_$ = PERIOD$
B1 = PERIOD$[1,4] ! yymm format
VERIFYPERIOD: Rem entered account period
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99"
	let eflag=1
	let returnstatus=1
	let message$="Invalid Posting Period "
	goto outend:
endif
If PERIOD$[1,2] <> PERIOD$[3,4]
	If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12"
		let eflag=1
		let returnstatus=1
		let message$="Invalid Posting Period "
		goto outend:
	endif
End If 
N = Int(D3 / 100)
Q1 = PERIOD$
For X = 1 To 39
  If X <> 13 Or X <> 26 Or X <> 39
    If A3[X] = Q1 goto getpostdate: !!!!Return 
  End If 
Next X
let eflag=1
let returnstatus=1
let message$="Accouting Period Not Found"
goto outend

GETPOSTDATE: Rem get posting date
Call dxget("POSTDATE",tmp$) ! MMDDYY format
LET J1=tmp$
LET TMP$=J1 USING "&&&&&&" ! MMDDYY format
DATE$ = tmp$[5,6],tmp$[1,4] ! yymmdd format
POSTDATE=DATE$
If DATE$[1,4] <> YEAR_$[1,4]
	let eflag=1
	let returnstatus=1
	let message$="Posting Date must agree with Posting Period"
	goto outend
End If 
J$ = DATE$[3,6],DATE$[1,2]
PGLDATE = J$[1,6]

GETREFNUM: Rem #3 reference number
Call dxget("REFNUM",tmp$) 
LET J1=tmp$
if j1<0 or j1>999999
	let eflag=1
	let returnstatus=1
	let message$="Reference Number need to be from 1 to 999999"
	goto outend
endif
let refnum=j1

GETJSCODE: Rem #4 enter journal source code
Call dxget("JSCODE",tmp$) 
LET J1=tmp$
if j1<0 or j1>9
	let eflag=1
	let returnstatus=1
	let message$="Journal Source Code needs to be from 1 to 9"
	goto outend
endif
let jscode=j1

STARTUPDATE: Rem start update of batch file
DATE$ = POSTDATE Using "&&&&&&"
If DATE$[1,4] <> YEAR_$[1,4]
	let eflag=1
	let returnstatus=1
	let message$="Posting Date must agree with Posting Period"
	goto outend 
End If 
Open #12,TEXTFILE$
Read #12;R12$
let x=len(r12$)
  if x>0
	if r12$[x,x]="\15\" let r12$[x,x]=""
  endif
If R12$ = ""
	let eflag=1
	let returnstatus=1
	let message$="CSV file does not contain data. Please Review File."
	goto outend
End If 
let x=len(r12$)
IF R12$[X,X]<>"," LET R12$[X+1,X+1]=","
GROUP$[1,2] = G$[1,2]
!CLIENT$[1,4] = "...1"
BUDGET$ = " ",BUDGET$ ! [1,1]=R12$[16,16]
BFPER$ = " ",BFPER$ ! [1,4]=R12$[18,21]
BTPER$ = " ",BTPER$ ![1,4]=R12$[23,26]
Gosub L_4000 ! OPEN ACF FILE
CLIENT1$[1,4] = CLIENT$[1,4]
For X = 1 To 4
  If CLIENT1$[X,X] = "." Let CLIENT1$[X,X] = " "
Next X
D[1] = CLIENT1$[1,4]
Gosub L_4100 ! GO GET CLIENT
D[2] = YEAR_$
Gosub L_4200 ! CREATE BATCH FILE
Gosub GETFIELDS
If GLACCT = 0 Goto L_2020
If GLDEBIT
  GLAMOUNT = Abs(GLDEBIT)
  Gosub L_4900
End If 
If GLCREDIT
  GLAMOUNT = - (Abs(GLCREDIT))
  Gosub L_4900 ! write record
End If 
L_2020: Read #12;R12$
let x=len(r12$)
  if x>0
	if r12$[x,x]="\15\" let r12$[x,x]=""
  endif
If R12$ = "" Goto L_2600 ! END OF BATCH
let x=len(r12$)
IF R12$[X,X]<>"," LET R12$[X+1,X+1]=","
Gosub GETFIELDS
If GLACCT = 0 Goto L_2020
If GLDEBIT
  GLAMOUNT = Abs(GLDEBIT)
  Gosub L_4900
End If 
If GLCREDIT
  GLAMOUNT = - (Abs(GLCREDIT))
  Gosub L_4900
End If 
Goto L_2020
L_2600: Rem END OF BATCH FILE
Gosub L_4500 ! WRITE END OF BATCH
Try
	Close #2
	Close #12
else
	let tmp=tmp
end TRY
!If Err 0 Gosub ERR_TRAP
S9$ = "mv ",SOURCEFILE$," /tmp"
Rem LET S9$="mv ",SOURCEFILE$," mary/tmp/"
System S9$
S9$ = "rm ",TEXTFILE$
System S9$
Goto L_8900






L_4000: Rem OPEN ACF FILE
try 
	Close #2
else 
	let tmp=tmp !
end try
F$ = "1/ACF",GROUP$[1,2]
Call FindF(F$,A9)
If Not(A9)
	let eflag=eflag+1
	let returnstatus=1
	message$="ACF CONTROL FILE MISSING!!! "+F$+"No Update Performed. "
	Goto OUTEND
End If 
Open #2,F$
Return 

L_4100: Rem LOOK UP CLIENT
K1$ = D[1] Using "  ####  "
Search #2,2,1;K1$,R[2],E
If E > 1 Gosub ERR_SEARCH
If E<>0
	let eflag=eflag+1
	let message$="CLIENT "+str$(d[1])+" NOT ON FILE!!!"
	Goto OUTEND
End If 
Mat Read #2,R[2],0;D$;
L9 = D$[135,136]
If L9 > 9 Let F9$ = L9 Using "##"
If L9 < 10 Let F9$ = L9 Using "#"
Return 

L_4200: Rem CREATE NEW BATCH
K1$ = " ",K1$ \ K1$[1,6] = D[1] Using "######" \ K1$[7,8] = "PG"
Search #2,2,1;K1$,R[2],E
If e<>0
	let eflag=1
	let returnstatus=1
	let message$="Client "+str$(d[1])+" Not Found "
	goto outend
endif
Mat Read #2,R[2],132;B;
D[3] = B
B = B + 1
If B > 999 Let B = 1
Mat Write #2,R[2],132;B;
X$ = D[2] Using "&&&&"
X1$ = D[3] Using "###"
For X = 3 To 6
  If K1$[X,X] = " " Let K1$[X,X] = "."
Next X
For X = 1 To 3
  If X1$[X,X] = " " Let X1$[X,X] = "."
Next X
F2$ = F9$,"/G",GROUP$[1,2],K1$[3,6],X$[1,4],X1$[1,3]
!!!!
tmp$ = "<666> files/",f2$                                     
Build #4,tmp$ 
R[4] = 0
T$ = " ",T$
R3 = 0
Write #4,R[4];T$
Write #4,R[4],1;R3       
tmp$ = "files/",f2$," <666>"                                  
Modify tmp$                                                         
Try                                                                 
  Close #4                                                
Else   
	let eflag=eflag+1
	ReturnStatus = 0                                                  
	Message$ = "Error Creating Batch " + Str$(batchid)                
	Goto outend                                                
End Try                                                             
! tmp$ = "chmod go+rw " + filename$                                 
tmp$ = "chmod 664 ",f2$                                 
System tmp$                                                         
Eopen #4,f2$                                         
T = 1
T$[1,1] = "*"
T$[2,5] = K1$[3,6]
T$[6,9] = D[2] Using "&&&&"
T$[10,12] = D[3] Using "###"
T$[13,50] = D$[11,48]
T$[51,52] = G$[1,2]
T$[63,63] = "9"
C2[0] = 0 \ C2[1] = 0
!Print Using "####";@0,15;'CL';"PROCESSING CLIENT#";D[1];
!Print Using "&&&&";" FOR ";D[2];
!Print Using "###";" BATCH# ";D[3];
!Signal 3,30
let batchflag=d[3]
T = 0
Return 
L_4500: Rem END OF BATCH
If C2[0] = C2[1] Goto L_4520
!Print @0,23;'CL RB';"DEBITS <> CREDITS !!!"; \ Signal 3,20
L_4520: T = T + 1 \ T$[59,62] = T Using "####" !increase for next seq# to use
R3 = 0
Write #4,R[4];T$;
Write #4,R[4],1;T;
P$ = " ",P$
P$[31,40] = C2[0] * 100 Using "----------"
If C2[0] > 0 Let P$[31,40] = C2[0] * 100 Using "##########"
P$[41,50] = C2[1] * 100 Using "----------"
If C2[1] > 0 Let P$[41,50] = C2[1] * 100 Using "##########"
P$[51,60] = (C2[0] - C2[1]) * 100 Using "----------"
P$[10,20] = "1  PAY    1"
P$[21,21] = "0"
R[4] = R[4] + 1
Write #4,R[4];P$;
Write #4,R[4],1;T;
Try
	Close #4
Else
	let tmp=tmp
End Try 
Return 

L_4900: Rem create batch record
R$ = " ",R$
If Not(REFNUM) Let REFNUM = GLDATE
If REFNUM > 999999 Let REFNUM = GLDATE
R$[1,1] = JSCODE Using "&" ! js code for excel spreadsheet
R$[2,10] = GLACCT Using "#########"
R$[14,19] = REFNUM Using "######"
R$[20,25] = GLDATE Using "&&&&&&"
If Len(GLDESC$)
  R$[26,58] = GLDESC$[1,33]
End If 
T = R[4] + 1 \ R$[59,62] = T Using "####"
R3 = FNR(GLAMOUNT)
R$[63,63] = "0"
Write #4,R[4];R$;
Write #4,R[4],1;R3;
R[4] = R[4] + 1
If R3 > 0 Let C2[0] = C2[0] - R3
If R3 < 0 Let C2[1] = C2[1] + R3
Return 

GETFIELDS: Rem get field here
GLACCT = 0;GLAMOUNT = 0;GLDEBIT = 0;GLCREDIT = 0
GLDESC$ = " ",GLDESC$;GLDATE = 0
CT = 0;POS_ = 1
Gosub L_8000
PDATE$ = FIELD$ ! date MM/DD/YYYY field 1
CTR = 0
Search PDATE$,"/",CTR
If CTR <= 1 Goto DEFAULTDATE ! not a valid record
MONTH_ = PDATE$[1,CTR - 1]
For X = 1 To CTR \ PDATE$[X,X] = "0" \ Next X
Search PDATE$,"/",CTR
If CTR <= 1 Return ! not a valid record
DAY = PDATE$[1,CTR - 1]
YEAR_ = PDATE$[CTR + 1]
PDATE$ = " ",PDATE$
PDATE$[1,2] = MONTH_ Using "&&"
PDATE$[3,4] = DAY Using "&&"
PDATE$[5,8] = YEAR_ Using "&&&&"
If PDATE$[5,5] = "0" Let PDATE$[5,5] = "2" ! for the year 2000
If Len(PDATE$) > 0
  X$ = PDATE$[1,4],PDATE$[7,8]
  GLDATE = X$ ! mmddyy format
  If GLDATE
    X$ = PDATE$[1,8] ! mmddyyyy
    Call Date(X$,X$,8,E)
    If E Let GLDATE = 0
  End If 
End If 
If GLDATE
  X$ = PDATE$[1,4],PDATE$[7,8]
  GLDATE = X$ ! yymmdd format
End If 
DEFAULTDATE: Rem bad date default to gl date
If Not(GLDATE) Let GLDATE = PGLDATE
Gosub L_8000
GLACCT = FIELD$ ! account number - field 2
Gosub L_8000
Let GLDESC$ = Rtrim$(field$)+blank$ !description - field 4
! If Len(GLDESC$) If Len(GLDESC$) < 35 Let GLDESC$[Len(GLDESC$) + 1] = "                                         "
Gosub L_8000
GLDEBIT = FIELD$ ! debit amount-field 2
Gosub L_8000
GLCREDIT = FIELD$ ! credit amount - field 3
Return 
 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 

Rem {end call.input.i}
L_8000: Rem find string
field$=""
WK1$ = " ",WK1$
If R12$[POS_,POS_] = "''"
  POS_ = POS_ + 1
  WK1$ = R12$[POS_]
  Search WK1$,"''",CT
Else 
  WK1$ = R12$[POS_]
  Search WK1$,",",CT
  IF CT> 0 If WK1$[CT,CT] = "," Let CT = CT - 1
End If 
WK$ = " ",WK$
IF CT>0
	WK$[1,CT] = WK1$[1,CT]
	If WK$[CT,CT] = "''" Let WK$[CT,CT] = ""
ENDIF
If POS_ = 1 If WK$[1,1] = "''" Let WK$[1,1] = " "
POS_ = POS_ + (CT + 1)
IF CT>0 FIELD$ = WK$[1,CT]
Return 


ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump()
e$ = msg$ \ Error 10000                      
Return ! End  
                             
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
call programdump()
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)

L_8900: Rem END
OUTEND: Rem END
Close 
Call FindF(TEXTFILE$,A9)
If A9
  Kill TEXTFILE$
End If 
!Chain "mx000"
!Stop 
if eflag<>0 let returnstatus=1 ! error
!
!Chain "MX000"
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(batchflag)
		returnstatus=1
		let message$=message$+"There was no g/l batch created"
		message$=message$+"."
	else
		!Let message$=message$+" "+str$(checkproc)+" Check(s) "
		let message$=message$+" Batch "+str$(batchflag)+ " Created "	
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
! try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program
