! >>> Program 387
!
! description Purchase Order Receipts Short Lines
! loadsave -w -n 100,10 -o prog/dxport/387.dl4 src/387.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  1, 2008  09:06:54
Rem /w2/papermaster/r2005//usr/acct/dek/work/r2005/mx/mx387.src (univ2) [dek] {51161}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem mx387      The report show what was not received or received short
Rem jliu 2/4/05 cct186411 add new sorts by vendor only
Rem???:04/17/00:Converted to Bedit   (mkbedit 1.2b)
Try
Com 2%,N1[11],1%,N2[4],N1$[42]
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim Z1$[50],F1$[16],F2$[26],A$[26],K$[130],3%
Dim J$[75],J0$[10],J1$[75],J2$[75],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],X1
Dim X$[40],CNAME$[30],J8$[8],L1$[120]
Dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
Dim 1%,PH4[3],PO1[9],L1[5],V9[4],SCRN
Dim 2%,PH0[5],PH3[4],D1[6],L2[2],B[24]
Dim 3%,PL3[6],A1[7],PL4[23]
Dim K9$[50],K8$[50],K3$[30],V1$[264],A5$[60],V$[100],K7$[50],T9$[26]
Dim 2%,X2,D9[5],4%,J1
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflg=0
returnstatus=1
!If Err 0 Let SCRN = Spc(8)
SCRN = 0 ! \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If SCRN If SCRN <> 49 Goto ERR_TRAP
For J = 2 To 13
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$[1,16];
  Ropen #J,J$
L_830: Next J
Data "1792","2400","1120","1728","1744","2432","2416","-1","1888","1840","1808","2528"
Mat Read #1,0,100;J8$;
Read #1,3,0;CNAME$;
V9[3] = 66
V9[4] = 54 \ If SCRN Let V9[4] = 20
V$ = "\15\",V$
Mat Read #1,115,0;D9;
!L_1000: Rem "=================================== get ranges
!Gosub L_6000 *** print screen inputs
!Goto EDT_ALL
!Goto INPUTS
!INPUTS: Rem
!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  E: exit ";
!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!Print @0,23;'CE';
!If X$ = "P" Goto MAIN
!If X$ = "E" Let J8 = 0 \ Goto OUTEND
!If X$ = "R" Goto EDT_ALL
!If X$ = "" Goto INPUTS
!X = X$
!If X < 1 Or X > 6 Goto INPUTS
!Gosub EDTFIELD
!Goto INPUTS
!EDT_ALL: Rem
!For X = 1 To 6
!  Gosub EDTFIELD
!Next X
!Goto INPUTS
!EDTFIELD: Rem
!On X Gosub EDTBUYER,EDTVEND,EDTPO,EDTDATE,EDTWHSE,EDTSORT
!Return 
!EDTBUYER: J5$ = "<CR> FOR FIRST";J0$ = "3000032103";J1 = 0
!Gosub L_7000 \ BBUY = J1
!If J4$ = "E" Goto OUTEND
!J5$ = "<CR> FOR LAST" \ J0$ = "3000033503" \ J1 = 999
!Gosub L_7000 \ EBUY = J1
!If EBUY < BBUY Gosub L_1390 \ Goto EDTBUYER
!Return 
Call dxget("BBUY",tmp$)                                                 
let bbuy=tmp$
Call dxget("EBUY",tmp$)
if tmp$="" let tmp$="999"
let ebuy=tmp$
If bbuy > Ebuy
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Ending Buyer Number Must Be Greater Than Starting. "
	! goto outend:
endif
if not(bbuy) and not(ebuy)
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Starting or Ending Buyer Number Must Be Entered. "
	! goto outend:	
endif
!EDTVEND: J5$ = "<CR> FOR FIRST" \ J0$ = "3000061904" \ J1 = 0
!Gosub L_7000 \ BVEND = J1
!J5$ = "<CR> FOR LAST" \ J0$ = "3000063404" \ J1 = 999999
!Gosub L_7000 \ EVEND = J1
!If EVEND < BVEND Gosub L_1390 \ Goto EDTVEND
!Return 
Call dxget("BVEND",tmp$)                                                 
let bVEND=tmp$
Call dxget("EVEND",tmp$)
if tmp$="" let tmp$="999999"
let evend=tmp$
If bvend > Evend
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Ending Vendor Number Must Be Greater Than Starting. "
endif
if not(bvend) and not(evend)
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Starting or Ending Vendor Number Must Be Entered. "
endif
!EDTPO: J5$ = "<CR> FOR FIRST" \ J0$ = "3000061905" \ J1 = 0
!Gosub L_7000 \ BPONUM = J1
!J5$ = "<CR> FOR LAST" \ J0$ = "3000063405" \ J1 = 999999
!Gosub L_7000 \ EPONUM = J1
!If EPONUM < BPONUM Gosub L_1390 \ Goto EDTPO
!Return
Call dxget("BPONUM",tmp$)                                                 
let bponum=tmp$
Call dxget("EPONUM",tmp$)
if tmp$="" let tmp$="999999"
let eponum=tmp$
If bponum> Eponum
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Ending P.O. Number Must Be Greater Than Starting. "
	! goto outend:
endif
if not(bponum) and not(eponum)
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Starting or Ending P.O. Number Must Be Entered. "
endif	
!EDTDATE: Rem po date
!If SDATE = 0 Let SDATE = 700101
!J1 = SDATE
!J5$ = "Please Enter the Starting Date MMDDYY  "
!J0$ = "5 00081907"
!Gosub L_7000 \ X2 = 0
!If J1 Let X2 = J1 \ Gosub L_7820 \ Goto EDT_DATE
!SDATE = J1;JSDATE = X2
!ENT_ENDODATE: Rem "Ending
!J0$ = "5 00083407"
!J5$ = "Please Enter the Ending date MMDDYY    "
!If EDATE = 0 Let EDATE = 591231
!J1 = EDATE
!Gosub L_7000
!X2 = J1 \ Gosub L_7820 \ Goto ENT_ENDODATE
!EDATE = J1;JEDATE = X2
!If JEDATE < JSDATE Gosub L_1390 \ Goto EDTDATE
!Return 
Call dxget("SDATE",tmp$) ! web returns as MMDDYY
x2=tmp$ \ if x2<=0 LET X2=010170
tmp$=X2 using "&&&&&&" ! make sure filled
x$=tmp$[5,6]+tmp$[1,4] ! change to YYMMDD
let sdate=X$ ! tmp$
Call dxget("EDATE",tmp$) ! web returns as MMDDYY
x2=tmp$ \ IF X2<=0 LET X2=123159
tmp$=X2 using "&&&&&&" ! make sure filled
x$=tmp$[5,6]+tmp$[1,4] ! change to YYMMDD
let edate=x$ ! tmp$
! convert dates to julian
let jsdate=0
if sdate<>0
	let x2=sdate ! yymmdd
	gosub L_7820:
	let jsdate=0
	if e<>0
		eflg=eflg+1
		Message$=Message$+str$(eflg)+" Invalid Starting Date Entered. "	
	endif
	let jsdate=x2
endif
let jedate=999999
if edate<>0
	let x2=edate ! yymmdd
	gosub L_7820:
	let jedate=0
	if e<>0
		eflg=eflg+1
		Message$=Message$+str$(eflg)+" Invalid Ending Date Entered. "	
	endif
	let jedate=x2
endif	
If jsdate> jedate
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Ending Date Must Be Greater Than Starting. "
	! goto outend:
endif
if not(jedate) and not(jsdate)
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Starting or Ending Date Must Be Entered. "
endif	
!EDTWHSE: Rem
!X$ = D9[5] Using "&&"
!J5$ = "ENTER WAREHOUSE NUMBER (1-",X$,")" \ J0$ = "3000021909" \ J1 = 0
!Gosub L_7000 \ WHSE = J1
!If Not(WHSE) Goto EDTWHSE
!If WHSE > D9[5]
!  J7$ = "INVALID WAREHOUSE NUMBER" \ Gosub L_7600 \ Goto EDTWHSE
!End If 
!Return 
Call DXGet("WHSE",tmp$)
LET whse=tmp$
if not(whse) and rtrim$(tmp$)<>"0"
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Invalid Warehouse Number Entered. "
	
endif
if whse<0 or whse>99
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Invalid Warehouse Number Entered. "
	goto outend:
endif
!EDTSORT: Rem
!J0$ = "3000 11411"
!J2$ = "#" \ J1 = 1
!J5$ = "Enter Print Order  1:Buyer/Vendor OR  2:Vendor/Product Item"
!Gosub L_7000
!SORTFLAG = J1
!If SORTFLAG < 1 Or SORTFLAG > 2 Goto EDTSORT
!Return 
Call DXGet("SORTFLAG",tmp$)
if tmp$="" let tmp$="1"
LET SORTFLAG=tmp$
If SORTFLAG < 1 Or SORTFLAG > 2
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Invalid Sort Option Entered. "
endif
!L_1390: Rem
!J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
!Gosub L_7600
!Return 
MAIN: Rem "======================= create sort file
if eflg goto outend:
!A$ = Spc(6) \ A$ = A$[2,Len(A$) - 1]
!Read #1,88,912;F1$;
!L_1540: If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1540
!P2 = 0 \ Let F2$ = F1$ To "*" : P2 \ If Not(P2) Gosub ERR_SEARCH
!Print @0,22;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
!KSIZE = 20
!F1$[P2] = A$
!Call FindF(F1$,H1)
!If Err 0 Rem
!Close #9 \ If Err 0 Gosub ERR_TRAP
!If H1 Kill F1$
!F2$ = "[1:256] ",F1$
!Build #9,F2$
!Search #9,0,1;K$,KSIZE,E \ If E Gosub ERR_SEARCH
!L1 = 1000 \ Search #9,0,0;K$,L1,E \ If E Gosub ERR_SEARCH
!Print @0,23;'CL';"SORTING, PLEASE WAIT . . ." \ Signal 3,0
J4$ = " ",J4$
L_1120: Search #9,3,1;J4$,R1,E
If E Goto L_1200
Search #9,5,1;J4$,R1,E
If E Gosub ERR_SEARCH
Goto L_1120
L_1200: Rem THRU po header at status 1 to 7 FOR VENDOR, GET BUYER
K8$ = " ",K8$
K8$[1,2] = 1 Using "##"
K8$[3,8] = BPONUM - 1 Using "######"
L_1210: Search #8,3,1;K8$,R8,E \ If E = 2 Goto PRNT_RPT
If E Gosub ERR_SEARCH
STATUS = K8$[1,2]
If STATUS > 7 Goto PRNT_RPT
Mat Read #8,R8,0;PH0;
Mat Read #8,R8,222;PH3;
Mat Read #8,R8,330;PO1;
If PH0[2] < BPONUM Goto L_1210
If PH0[2] > EPONUM Goto L_1210
If PH3[3] < BVEND Goto L_1210
If PH3[3] > EVEND Goto L_1210
If PO1[6] < BBUY Goto L_1210
If PO1[6] > EBUY Goto L_1210
Mat Read #8,R8,242;PH4;
If WHSE If PH4[1] If PH4[1] <> WHSE Goto L_1210
If PH4[0] = 1 Or PH4[0] = 2 Or PH4[0] = 5 Goto L_1210
K7$ = " ",K7$
K7$[1,6] = PH0[2] Using "######"
PO_LINELOOP: Rem
Search #7,3,1;K7$,R7,E
If E = 2 Goto L_1210
If E Gosub ERR_SEARCH
PONUM = K7$[1,6]
If PONUM <> PH0[2] Goto L_1210
Mat Read #7,R7,0;L1;
If WHSE If L1[1] If L1[1] <> WHSE Goto PO_LINELOOP
Mat Read #7,R7,12;L2;
Mat Read #7,R7,24;PL3;
Mat Read #7,R7,232;PL4;
Mat Read #7,R7,66;L1$;
X2 = PL4[22] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If Not(JWDATE) Goto CHK_DUEDATE
If JWDATE < JSDATE Goto CHK_DUEDATE
If JWDATE > JEDATE Goto CHK_DUEDATE
Goto SKIP_DUEDATE
CHK_DUEDATE: Rem"check the due date
X2 = L2[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If Not(JWDATE) Goto PO_LINELOOP
If JWDATE < JSDATE Goto PO_LINELOOP
If JWDATE > JEDATE Goto PO_LINELOOP
SKIP_DUEDATE: Rem
If L1[0] > 10 Goto PO_LINELOOP
Call Logic(1,2 ^ 0,L1[3],NONSTOCK) \ If NONSTOCK Goto PO_LINELOOP
If PL3[3] = PL3[2] Goto PO_LINELOOP
If PL3[2] = PL3[3] + PL3[4] Goto PO_LINELOOP
If Not(PL3[2]) If Not(PL3[3]) Goto PO_LINELOOP
SKIP_CHECK: Rem
K9$ = " ",K9$
If SORTFLAG = 1
  K9$[1,6] = PO1[6] Using "######"
  K9$[7,12] = PH3[3] Using "######"
  K9$[13,21] = K7$[1,9]
Else 
  K9$[7,12] = PH3[3] Using "######"
  K9$[13,24] = L1$[81,92]
  K9$[25,33] = K7$[1,9]
End If 
Search #9,4,1;K9$,R7,E
If E Gosub ERR_SEARCH
Goto PO_LINELOOP
PRNT_RPT: Rem
! If SCRN Print 'CS';
BUYER = 0
VENDOR = 0
K9$ = " ",K9$
PRNT_LOOP: Rem
Search #9,3,1;K9$,R7,E
If E Goto OUTEND
K3$ = " ",K3$;K3$ = K9$[7,12]
Search #3,2,1;K3$,R3,E
If Not(E)
  Mat Read #3,R3,576;A5$
  Mat Read #3,R3,264;D1;
  Mat Read #3,R3,0;V1$;
Else 
  V1$ = " ",V1$
End If 
If SORTFLAG = 1
  If BUYER = 0 !"and vendor=0
    If Not(HEADCOUNT) Gosub HEADER
    BUYER = K9$[1,6]
    VENDOR = K9$[7,12]
  End If 
  HOLDBUYER = K9$[1,6]
  HOLDVEND = K9$[7,12]
  If (BUYER And BUYER <> HOLDBUYER) !"or (vendor and vendor<>xx2)
    Gosub TOF
    Gosub HEADER
    VENDOR = HOLDVEND
    BUYER = HOLDBUYER
  End If 
  If VENDOR And VENDOR <> HOLDVEND
    V9[1] = V9[1] + 4
    If V9[1] > V9[4]
      Gosub TOF
      Gosub HEADER
    End If 
    Print #0;""
    Print #0; Tab 3;"VENDOR # ";K9$[7,12];
    Print #0; Tab 20;"VENDOR: ";V1$[1,30]
    Print #0; Tab 20;"PHONE # ";A5$[1,30];
    Print #0; Tab 80;"CONTACT: ";V1$[129,148]
    Print #0;""
    VENDOR = HOLDVEND
  End If 
Else 
  If VENDOR = 0
    Gosub HEADER
    VENDOR = K9$[7,12]
  End If 
  HOLDVEND = K9$[7,12]
  If VENDOR And VENDOR <> HOLDVEND
    Gosub TOF
    Gosub HEADER
    VENDOR = HOLDVEND
  End If 
End If 
Mat Read #7,R7,0;L1;
Mat Read #7,R7,12;L2;
Mat Read #7,R7,24;PL3;
Mat Read #7,R7,66;L1$;
If SORTFLAG = 1
  Print #0; Tab 0;K9$[13,18];
  Print #0; Tab 10;K9$[19,21];
Else 
  Print #0; Tab 0;K9$[25,30];
  Print #0; Tab 10;K9$[31,33];
End If 
Print #0; Tab 18;L1$[81,92];
Print #0; Tab 32;L1$[1,30];
Print #0; Tab 64;L1$[31,60];
Mat Read #2,PL3[1],156;B;
Mat Read #2,PL3[1],256;A; \ Mat Read #2,PL3[1],460;A1;
Mat Read #2,PL3[1],512;PFU1;
Mat Read #2,PL3[1],554;PFU2;
PUNIT = PFU1[10]
CNVTA = PL3[2] \ Gosub L_6100 \ UWORK[2] = AMOUNT
Print #0; Using "########"; Tab 96;UWORK[2];
CNVTA = PL3[3] \ Gosub L_6100 \ UWORK[3] = AMOUNT
Print #0; Using "########"; Tab 110;UWORK[3];
If Whse=0 Print #0; Using "##"; Tab 120;L1[1];
Print #0;""
V9[1] = V9[1] + 1
If V9[1] > V9[4]
  Gosub TOF
  Gosub HEADER
End If 
Goto PRNT_LOOP
HEADER: Rem
! If SCRN And V9[0] Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
HEADCOUNT = HEADCOUNT + 1
if v9[0] Print #0;"\14\";
V9[1] = 1;V9[0] = V9[0] + 1
!V9[2] = 1 \ Gosub VFC
print #0;" "
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V9[0]
Print #0;"-387- ";T9$;
Print #0; Tab 50;"PURCHASE ORDER NOT RECEIVED OR RECEIVED SHORT"
if whse<>0 Print #0;Tab 3;"WHSE:";whse;
Print #0; Tab 50;"FOR RECEIVED DATE ";
X2 = SDATE
Gosub L_7700
Print #0;X$;
Print #0;" TO ";
X2 = EDATE
Gosub L_7700
Print #0;X$;
Print #0;"" \ V9[1] = V9[1] + 3
If SORTFLAG = 1
  Print #0; Tab 3;"BUYER: ";K9$[1,6]
End If 
Print #0;""
Print #0; Tab 3;"VENDOR # ";K9$[7,12];
Print #0; Tab 20;"VENDOR: ";V1$[1,30]
Print #0; Tab 20;"PHONE # ";A5$[1,30];
Print #0; Tab 80;"CONTACT: ";V1$[129,148]
Print #0;""
Print #0; Tab 0;"PO NUMBER"; Tab 10;"LINE#"; Tab 18;"ITEM CODE";
Print #0; Tab 32;"DESCRIPTION 1"; Tab 64;"DESCRIPTION 2"; Tab 96;"QTY ORDERED";
Print #0; Tab 110;"QTY SHIP"
Print #0; Tab 110;"TO DATE"; 
IF WHSE=0 PRINT #0; TAB 120;"WH" ELSE  PRINT #0;""
V9[1] = V9[1] + 5
Return 
TOF: Rem "======================= top of forms   ---  V9[3] = form length
V9[2] = 1
Print #0;"\14\";
V9[1] = 1
Return 
VFC: Rem "============= vertical forms control
If V9[1] >= V9[2] + VA Return 
Print #0;V$[V9[1],V9[2] + VA - 1];
V9[1] = V9[2] + VA
Return 
L_6000: Rem "========================================== screen
!Print 'CS'
!Print @0,0;"-MX387-";@33,0;"P.O. NOT RECEIVED OR RECEIVED SHORT REPORT"
!Print @17,2;'BR';"STARTING";@33,2;"ENDING";'ER';
!Print @1,3;"1> BUYER";
!Print @1,4;"2> VENDOR";
!Print @1,5;"3> PO NUMBER";
!Print @1,7;"4> RECEIVED DATE";
!Print @1,9;"5> WAREHOUSE";
!Print @1,11;"6> SORT BY:           1:Buyer/Vendor, 2:Vendor/Product Item"
Return 
L_6100: Rem"REM CONVERSION (ALL QTY TO P.O. U/M)
CNVTU[0] = 0;CNVTU[1] = PUNIT;CNVTU[2] = 1
Gosub L_20000
Return 
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
If L3 Let AMOUNT = CNVTA \ Goto L_20160
L_20050: goto L_20120: !  If Spc(4) > 1280 Goto L_20120
!L_20060: Rem "======= unibasic <5 logic
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
if x2<=0 let e=1 \ return
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End
OUTEND: Rem EXIT PROGRAM
!Print 'CS'
!Chain "MX000C"
!Stop 
!End 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
If returnstatus=0
	!returnstatus=1
	let message$=message$+"Report Complete"
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
!try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program

