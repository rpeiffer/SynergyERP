! >>> Program 778
!
! description Product Status - Import fields - single whse
!
! loadsave -w -n 100,10 -o prog/dxport/778.dl4 src/778.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
! 
Rem MX778 - ETNA'S STOCK STATUS (WAS MX781)
Rem AUTHOR: CCT 90957   JUL  1, 1996
Rem LAST UPDATE:  ?? - ADDED U/M STUFF
Rem BEDIT Version: 2.5 OBJECT CODE     Created: DEC 19, 2013  12:50:06
Rem /x/w2/pm/r2005//x/usracct/jcs/work/custom/xrev9/mx778.src (synergyux.synergy.n) [jcs] {10145}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
Declare Intrinsic Sub InpBuf,Logic,String,Time
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Dim P$[156],STKUM$[4],POH$[82],SMC$[1],EMC$[1]
Dim 1%,PFU1[20],CNVTU[2],FLAG,SC,SR,L1[5],H4[3]
Dim 1%,POMISC[2]
Dim 2%,B[24],H0[5]
Dim 3%,A[33],PFU2[6],CNVTA,AMOUNT,PRPARC[3]
Dim 3%,L3[6],ONWAT,ONPO,AVAIL,P3[4]
Dim 3%,DISPL[20],W3[24],WHMISC[6]
Dim J$[40],J1$[30],J2$[20],J3$[50],J4$[60],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],P9$[50]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]
dim Action1$[30],Action2$[30],Blank$[20]	  \ Blank$=" ",Blank$

! call dxopen() ! use for standalone - normally from dxblockx
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
!
!Print 'CS';@0,0;"STOCK STATUS REPORTS";@50,0;"MX778"
!L_745: Print @0,2;'CE';"SELECT: 1:SINGLE WHSE, 2:SELECTABLE WHSE REPORT, E:exit    ";
!Input Len 16385;""X$ \ If X$ = "E" Goto OUTEND
!If X$ <> "1" If X$ <> "2" Goto L_745
!If X$ = "2" Chain "MX778A"
For J = 2 To 7
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Open #J,J$
L_830: Next J
Data "1792","1728","2528","2432","2416","1744"
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;J1$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 61 ! \ If J8 Let J9 = 22
L_900: Rem GET RANGES
!Print @0,14;"ENTER STARTING PRODUCT CODE, <CR>:FIRST, E:EXIT   ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
call dxget("SPROD",tmp$) \ let k2$=UCase$(Trim$(tmp$))+Blank$
!Print @0,15;"ENTER ENDING   PRODUCT CODE, <CR>:LAST,  E:EXIT   ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
call dxget("EPROD",tmp$) \ let k3$=UCase$(tmp$)
If K3$ = "" Let K3$ = "}}}}}}"
If K2$ <= K3$ Goto L_990
returnstatus=1
message$="INVALID PRODUCT RANGE"
goto outerr
!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
L_990: K1$ = K2$ !! \ If J2 If Not(J8) Print #0;"\14\";
J1 = 90 \ J2 = 0
L_1000: Rem GET WAREHOUSE?
!Print @0,16;'CE';"ENTER WAREHOUSE #, <CR>:ALL, E:EXIT   ";
!Input Len 16386;""X$ \ If X$ = "E" Goto OUTEND
call dxget("WHSE",tmp$) \ let x$=trim$(tmp$)
WHSE = X$
If WHSE < 0 Or WHSE > 99 Or Fra(WHSE) 
	returnstatus=1
	message$="INVALID WHSE"
	Goto outerr ! L_1000
Endif
L_1040: !Print @0,17;'CE';"ENTER STARTING MATERIAL CODE, <CR>:FIRST   ";
!Input Len 16385;""J2$ ! "   \ IF J2$="E" GOTO OutEnd:
call dxget("SMC",tmp$) \ let j2$=UCase$(j2$)
SMC$ = J2$
!Print @0,18;'CE';"ENTER   ENDING MATERIAL CODE, <CR>:LAST    ";
!Input Len 16385;""J2$ ! "   \ IF J2$="E" GOTO OutEnd:
call dxget("EMC",tmp$) \ let j2$=UCase$(tmp$)
If J2$ = "" Let J2$ = "}"
EMC$ = J2$
If SMC$ <= EMC$ Goto L_1100
!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_1040
returnstatus=1
message$="Invalid Material Code Range!"
goto outerr
L_1100: Rem CONTINUE
!Print @0,19;"UNITS OF MEASURE: 1:STOCK, 2:SELL, 3:PURCH, E:EXIT   ";
!Input Len 16385;""J2$ \ If J2$ = "E" Goto OUTEND
call dxget("PUM",tmp$) \ let j2$=Trim$(tmp$)
X2 = J2$
If X2 < 1 Or X2 > 3 ! 
	returnstatus=1
	message$="INVALID UM SELECTION!"
	Goto outerr ! L_1100
Endif
RPTUM = X2
L_1200: !Print @0,22;'CE';"SELECT:  P:PRINT, R:RESELECT, E:EXIT   ";
!Input Len 16385;""X$ \ If X$ = "E" Goto OUTEND
!If X$ = "R" Goto L_900
!If X$ <> "P" Goto L_1200
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"778",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
  tmp$ = "PRODUCT",fdel$,"DESC1",fdel$,"DESC2",fdel$
  tmp$=tmp$,"UM",fdel$,"PACK",fdel$,"FOB",fdel$
  tmp$=tmp$,"LANDED",fdel$,"LIST",fdel$,"ON HAND",fdel$
  tmp$=tmp$,"LANDED EXT",FDEL$,"DATE CONF",FDEL$,"ON WATER",FDEL$
  tmp$=tmp$,"ON PO",fdel$,"COMMITTED",fdel$,"AVAILABLE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
Endif
!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If J8 Print 'CS';
If Err 0 Gosub ERR_TRAP
Gosub L_5800
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #2,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;P$;
If P$[156,156] < SMC$ Goto L_2000
If P$[156,156] > EMC$ Goto L_2000
Mat Read #2,R1,156;B;
Mat Read #2,R1,256;A;
Mat Read #2,R1,512;PFU1;
Mat Read #2,R1,554;PFU2;
Mat Read #2,R1,596;PRPARC;
STKQTY = 0;ONWAT = 0;ONPO = 0;AVAIL = 0;CFDATE = 0;SELLQTY = 0
A[0] = 0;A[3] = 0
STKUM = PFU1[8];REALSTKUM = STKUM
SELLUM = PFU1[9]
If RPTUM = 2 Let STKUM = PFU1[9]
If RPTUM = 3 Let STKUM = PFU1[10]
For Y = 0 To 7
  If PFU1[Y] If SELLUM = PFU1[Y] Goto L_2070
Next Y
L_2070: For Z = 0 To 7
  If PFU1[Z] If REALSTKUM = PFU1[Z] Goto L_2075
Next Z
L_2075: For X = 0 To 7
  If PFU1[X] If STKUM = PFU1[X] Goto L_2090
Next X
Goto L_2100 ! "NO STK U/M??
L_2090: If X = 0 Let STKQTY = 1 Else Let STKQTY = PFU2[X - 1]
If Y = 0 Let SELLQTY = 1 Else Let SELLQTY = PFU2[Y - 1]
If Z = 0 Let REALSTKQTY = 1 Else Let REALSTKQTY = PFU2[Z - 1]
If P9$[32,32] = "Y" And WHSE Gosub L_3100
L_2100: Gosub L_3000 ! "GET ON HAND FROM LOTFILE
Gosub L_3200 ! "GET PO STUFF
AVAIL = A[0] - A[3]
If P9$[28,28] = "Y" Let AVAIL = AVAIL + ONWAT + ONPO
If A[0] <= 0 Let T9[0] = 0 Else Let T9[0] = FNR(A[0] * PRPARC[2])
Gosub L_3500 ! "CONVERT ALL
Gosub L_5800
Gosub L_5000
Gosub L_2200
!! Signal 2,J0,A,B \ If J0 <> -1 Gosub L_9615
Goto L_2000
L_2200: Rem TOTALS CALC
T9[7] = T9[7] + T9[0]
T9[8] = T9[8] + A[0]
T9[9] = T9[9] + ONWAT
T9[10] = T9[10] + ONPO
T9[11] = T9[11] + A[3]
T9[12] = T9[12] + AVAIL
Return 
L_3000: Rem GET LOT QTYS
J4$ = " ",J4$;J4$[1,12] = P$[140,151]
L_3010: Search #4,3,2;J4$,R4,E \ If E = 2 Return 
If E Gosub ERR_SEARCH
If J4$[1,12] <> P$[140,151] Return 
X2 = J4$[13,14] \ If WHSE If X2 <> WHSE Goto L_3010
Mat Read #4,R4,82;P3;
A[0] = A[0] + (P3[0] - P3[1])
A[3] = A[3] + P3[3]
Goto L_3010
L_3100: Rem GET WHSE
J2$ = " ",J2$;J2$[1,12] = P$[140,151];J2$[13] = WHSE Using "##"
Search #7,2,1;J2$,R7,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Return 
Mat Read #7,R7,78;W3;
Mat Read #7,R7,800;WHMISC;
If W3[16] Let B[10] = W3[16]
If W3[19] Let A[20] = W3[19]
If WHMISC[2] Let PRPARC[2] = WHMISC[2]
Return 
L_3200: Rem THRU P.O. FILE
J3$ = " ",J3$;J3$[1,6] = R1 Using "######"
L_3210: Search #5,3,2;J3$,R5,E \ If E = 2 Return 
If E Gosub ERR_SEARCH
X2 = J3$[1,6] \ If X2 <> R1 Return 
Mat Read #5,R5,0;L1;
If L1[0] >= 3 Goto L_3210 ! "CLOSED
If L1[1] <= 0 Let L1[1] = 1
Call Logic(1,2 ^ 0,L1[3],NONSTK) \ If NONSTK Goto L_3210
Call Logic(1,2 ^ 2,L1[3],MESSG) \ If MESSG Goto L_3210
If WHSE If WHSE <> L1[1] Goto L_3210
Mat Read #5,R5,376;POMISC;
If POMISC[0] = 0 Goto L_3210 ! "NO STK UPDATE
Mat Read #5,R5,24;L3;
R6 = L3[0] \ If L3[1] <> R1 Goto L_3210
Mat Read #6,R6,0;H0;
If H0[0] > 6 If H0[0] < 90 Goto L_3210
Mat Read #6,R6,242;H4;
If H4[0] = 1 Or H4[0] = 5 Goto L_3210 ! "NO DIRECTS
Mat Read #6,R6,24;POH$;
CONF = 0
If POH$[59,61] <> "NO " And POH$[59,61] <> "N  " Let CONF = 1
If CONF Let ONWAT = ONWAT + L3[2] - L3[3]
If CONF And CFDATE = 0 Let CFDATE = H0[5]
If Not(CONF) Let ONPO = ONPO + L3[2] - L3[3]
Goto L_3210
L_3500: Rem CONVERT
CNVTU[0] = 0;CNVTU[1] = STKUM;CNVTU[2] = 2
CNVTA = B[10] \ Gosub CONVERT
B[10] = AMOUNT
CNVTA = PRPARC[2] \ Gosub CONVERT
PRPARC[2] = AMOUNT
CNVTA = A[20] \ Gosub CONVERT
A[20] = AMOUNT
CNVTU[2] = 1;CNVTA = A[0] \ Gosub CONVERT
A[0] = AMOUNT
CNVTA = ONWAT \ Gosub CONVERT
ONWAT = AMOUNT
CNVTA = ONPO \ Gosub CONVERT
ONPO = AMOUNT
CNVTA = A[3] \ Gosub CONVERT
A[3] = AMOUNT
CNVTA = AVAIL \ Gosub CONVERT
AVAIL = AMOUNT
STKUM$ = "ERR."
If STKUM = -1 Let STKUM$ = "CWT"
If STKUM = -2 Let STKUM$ = "LOT"
If STKUM > 0 Read #3,STKUM,10;STKUM$;
Return 
! TOTALS - NOT USED!
Gosub L_5800
Print #0;"\15\** TOTALS **";
Print #0; Using "-------#.##"; Tab 58;T9[8];
Print #0; Using "########.##"; Tab 69;T9[7];
Print #0; Using "-------#.##"; Tab 86;T9[9];
Print #0; Using "-------#.##"; Tab 97;T9[10];
Print #0; Using "-------#.##"; Tab 108;T9[11];
Print #0; Using "-------#.##"; Tab 119;T9[12];
Return 
L_5000: Rem PRINT LINE
if J8 ! xml
	tmp$=P$[140,151],fdel$
	tmp$=tmp$,RTrim$(P$[9,38]),fdel$,RTrim$(P$[63,92]),fdel$
	tmp$=tmp$,STKUM$[1,4],fdel$
	If SELLQTY <> 0 tmp$=tmp$,LTrim$(REALSTKQTY / SELLQTY Using "########"),fdel$  Else tmp$=tmp$,fdel$
	tmp$=tmp$,LTrim$(FNR(B[10]) Using "#########.##"),fdel$
	tmp$=tmp$,LTrim$(FNR(PRPARC[2]) Using "#########.##"),fdel$
	tmp$=tmp$,LTrim$(FNR(A[20]) Using "#########.##"),fdel$
	tmp$=tmp$,LTrim$(FNR(A[0]) Using "----------#.##"),fdel$
	tmp$=tmp$,LTrim$(T9[0] Using "##########.##"),fdel$ ! "EXT LANDED (ONLY >0)
	If ONWAT Let X2 = CFDATE \ Gosub L_7700
	If CFDATE tmp$=tmp$,X$[1,5],fdel$ ELSE tmp$=tmp$,fdel$
	tmp$=tmp$,LTrim$(FNR(ONWAT) Using "----------#.##"),fdel$
	tmp$=tmp$,LTrim$(FNR(ONPO) Using "----------#.##"),fdel$
	tmp$=tmp$,LTrim$(FNR(A[3]) Using "----------#.##"),fdel$
	tmp$=tmp$,LTrim$(FNR(AVAIL) Using "----------#.##"),fdel$
Else
	Print #0;P$[140,151];
	Print #0; Tab 13;P$[9,17];
	Print #0; Tab 23;STKUM$[1,4];
	If SELLQTY <> 0 Print #0; Using "#####"; Tab 27;REALSTKQTY / SELLQTY;
	Print #0; Using "######.##"; Tab 32;FNR(B[10]);
	Print #0; Using "######.##"; Tab 41;FNR(PRPARC[2]);
	Print #0; Using "######.##"; Tab 50;FNR(A[20]);
	Print #0; Using "-------#.##"; Tab 58;FNR(A[0]);
	Print #0; Using "#######.##"; Tab 70;T9[0]; ! "EXT LANDED (ONLY >0)
	If ONWAT Let X2 = CFDATE \ Gosub L_7700
	If CFDATE Print #0; Tab 81;X$[1,5];
	Print #0; Using "-------#.##"; Tab 86;FNR(ONWAT);
	Print #0; Using "-------#.##"; Tab 97;FNR(ONPO);
	Print #0; Using "-------#.##"; Tab 108;FNR(A[3]);
	Print #0; Using "-------#.##"; Tab 119;FNR(AVAIL);
	Print #0;"\15\";
Endif
Return 
L_5800: Rem HEADINGS ROUTINE
if j8 return
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <RETURN> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 0
If Not(J8) Print #0;"\15\"; \ J1 = J1 + 1
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 778 - ";T9$;
Print #0; Tab 56;"STOCK STATUS REPORT";
If WHSE Print #0;" - WHSE ";Str$(WHSE);
Print #0;"" \ J1 = J1 + 2 ! "PAGE & HEADING
Print #0;"\15\"; \ J1 = J1 + 1
Print #0; Tab 75;"EXT."; Tab 81;"CONF" \ J1 = J1 + 1
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 13;"DESCRIPT.";
Print #0; Tab 23;"U/M";
Print #0; Tab 28;"PACK";
Print #0; Tab 35;"F.O.B.";
Print #0; Tab 44;"LANDED";
Print #0; Tab 55;"LIST";
Print #0; Tab 63;"ON HAND";
Print #0; Tab 74;"LANDED"; Tab 81;"DATE";
Print #0; Tab 89;"ON WATER";
Print #0; Tab 101;"ON P.O.";
Print #0; Tab 110;"COMMITTED";
Print #0; Tab 121;"AVAILABLE";
Print #0;" "
Print #0;"\15\"; \ J1 = J1 + 2
If J2 = 1 If Not(J8) Let J1 = J1 + 2 ! "MX000 'BANNER'
Return 
L_7700: Rem  *X2 TO X$ V1.0
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = " ",X$
Return 
CONVERT: Rem "CONVERT ROUTINE
If CNVTU[2] = 3 Goto L_8040 ! "um window
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_8065 ! "going to same units
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_8065 ! "lot
If CNVTU[2] = 0 Goto L_8040 !!THIS TESTS IF VALID CONVERSION
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_8065 ! "none there
L_8040: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_8065 !!TEST IF VALID CONVERSION
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_8065: Return 

L_9100: Rem END
OUTEND: Rem EXIT
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!Print 'CS'
Close 
!Chain "MX000"
!Stop 
End
OutErr: ! something entered wrong
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End 
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Error 1100
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}