! serp141 - Salesperson Entry/Edit
!
! 1.0 02/22/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp141.dl4 src/serp141.src
!
! From the original code:
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 21, 2006  15:59:28
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx1/mx141.src (univ2) [txc] {26429}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem     MX141     Enter/Edit Salesman
Rem     ************
Rem     UNIVERSAL BUSINESS SYSTEMS, INC.
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"

Declare Intrinsic Sub InpBuf,String
Option Default Dialect IRIS1

External Lib "ubsfunc.dl4"
Declare External Function openfile

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[500],tmp2$[1000],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen()
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
! call dxsave(0, "141.in!")
! If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
DIM 4%,FAXNUM,1%,VIATYPE,TMP1$[50]
Dim 3%,S1[3],S3[9],S2[19,5],HOLDWHSE,DrawAmount,SCFIN[3],SLTBL
Dim 2%,K[20],E,D9,H0[12],ROH_SLSM[4]
Dim 2%,E,SLSM,PCDATE,S6,C1[12]
Dim 1%,ZER_[255],ZER2[511],P[2],D[30],S0[20],AllowBonus,SalesGroupNum
Dim S$[118],S2$[50],s3$[50],p9$[50],k4$[40]
Dim K2$[20],K3$[20]
dim ch_slsm,ch_cust,cu_roh,ch_slsmcom,ch_spcprice,ch_aract,ch_slsmsls
dim ch_shiplist
dim 3%

!
! open files
!
ch_slsm = openfile(1824,intCo) \ If ch_slsm = -1 Error 42 ! #2
ch_cust = openfile(1808,intCo) \ If ch_cust = -1 Error 42 ! #3
ch_roh = openfile(1840,intCo) \ If ch_roh = -1 Error 42 ! #4
ch_slsmcom = openfile(2240,intCo) \ If ch_slsmcom = -1 Error 42 ! #5
ch_spcprice = openfile(1936,intCo) \ If ch_spcprice = -1 Error 42 ! #6
ch_aract = openfile(1504,intCo) \ If ch_aract = -1 Error 42 ! #7
ch_slsmsls = openfile(2048,intCo) \ If ch_slsmsls = -1 Error 42 ! #8
ch_shiplist = openfile(2112,intCo) \ If ch_shiplist = -1 Error 42 ! #9

MAT  READ #1,19,50;P9$; !FLAGS
Read #1,0,112;PCDATE;
! X = S9[0];K[3] = S9[1]
! If X = 142 Goto L_3500 ! edit

if action1$ <> "GETLIST"
	call dxget("SalesID", tmp$) \ SLSM = tmp$
	if SLSM < 1 OR SLSM > 999
		message$ = "Invalid salesrep ID.  Must be between 1 and 999."
		returnstatus=0 \ goto bp141 ! error 10000
	end if
	gosub GetSalesrep
end if

!
! get wh list
!
select case action1$
	case "GETLIST"
		gosub BuildDroplist
		! status section
		Message$=""
	case "GETDATA"
		gosub LoadData
		! status section
		Message$=""
	case "SUBMITDATA"
		gosub UnloadDataAndSave
		! status section
		! message$ set in subroutine
	case "DELETE"
		gosub DeleteData
		! status section
		Message$="Record deleted."
	case else
		message$ = "Unknown action1: "+action1$;returnstatus=0 \ goto BP141 ! error 10000
endselect
! message should be set.  if we got here - we've got a good status
ReturnStatus=1
BP141: ! bypass =1 - use what's sent!
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
goto OutEnd:


! ***********************************************************************
! Nobody but us subroutines and exit code down here
! ***********************************************************************

!----------------------------------------------------------------------------
! build initial droplist of Salesreps
!----------------------------------------------------------------------------
BuildDroplist: !
	tmp$=bsdel$+"DropList"+fdel$+rdel$+"ID"+fdel$+"Name"+fdel$+rdel$
	call AddToStr(e$, rstr$, tmp$)
	K3$ = " ",K3$
	do
		Search #ch_slsm,3,1;K3$,K[3],E ! \ If E>2 Error 42
		if E exit do
		gosub ReadSalesrep
		call AddToStr(e$, rstr$, k3$+fdel$+rtrim$(k3$)+" - "+s$[1,30]+fdel$+rdel$)
	loop
	call AddToStr(e$, rstr$, esdel$)
Return

!----------------------------------------------------------------------------
! load salesrep data and return
!----------------------------------------------------------------------------
LoadData: !
	! header information
	tmp$=bsdel$+"Data"+fdel$+rdel$
	tmp$=tmp$+"SalesID"+fdel$+"Name"+fdel$+"Address"+fdel$+"City"+fdel$
	tmp$=tmp$+"Phone"+fdel$+"St"+fdel$+"Zip"+fdel$
	tmp$=tmp$+"CommissionRate"+fdel$+"CommissionType"+fdel$
	tmp$=tmp$+"MinGrossProfit"+fdel$+"SalesGroup"+fdel$
	tmp$=tmp$+"EmailAddress"+fdel$+"Warehouse"+fdel$
	tmp$=tmp$+"CommissionMTD"+fdel$+"ComissionYTD"+fdel$
	tmp$=tmp$+"HoldWarehouse"+fdel$
	tmp$=tmp$+"AllowBonus"+fdel$
	tmp$=tmp$+"DrawAmount"+fdel$
	tmp$=tmp$+"FaxNumber"+fdel$
	tmp$=tmp$+"ViaType"+fdel$
	call AddToStr(e$, rstr$, tmp$+rdel$)
	! data
	tmp$=str$(SLSM)+fdel$+s$[1,30]+fdel$+s$[31,60]+fdel$+s$[61,90]+fdel$
	tmp$=tmp$+s$[91,105]+fdel$+s$[106,107]+fdel$+s$[108,115]+fdel$
	tmp$=tmp$+str$(s1[0])+fdel$+str$(s1[1])+fdel$+str$(s3[0])+fdel$
	tmp$=tmp$+str$(s3[9])+fdel$+s2$[1,50]+fdel$+str$(s3[3])+fdel$
	tmp$=tmp$+str$(s1[2])+fdel$+str$(s1[3])+fdel$
	tmp$=tmp$+str$(s3[3])+fdel$
	tmp$=tmp$+str$(AllowBonus)+fdel$
	tmp$=tmp$+str$(DrawAmount)+fdel$
	tmp$=tmp$+str$(FAXNUM)+fdel$
	let tmp1$="P"
	if viatype=1 let tmp1$="F"
	if viatype=2 let tmp1$="M"
	let tmp$=tmp$+tmp1$+fdel$
	call AddToStr(e$,rstr$,tmp$+rdel$+esdel$)
Return

!----------------------------------------------------------------------------
! result of submit call
!----------------------------------------------------------------------------
UnloadDataAndSave: !
	call DxGet("Name", tmp$) \ tmp$ = ucase$(tmp$) \ s$[1,30]=tmp$+B$
	if tmp$=""
		returnstatus=0
		message$="Salesman name is required!"
		returnstatus=0 \ goto bp141 ! return
	Endif
	holdwhse=s3[3] ! original whse ! (don't trust the send)
	call DxGet("Address", tmp$) \ tmp$ = ucase$(tmp$) \ s$[31,60]=tmp$+B$
	call DxGet("City", tmp$) \ tmp$ = ucase$(tmp$) \ s$[61,90]=tmp$+B$
	call DxGet("Phone", tmp$) \ tmp$ = ucase$(tmp$) \ s$[91,105]=tmp$+B$
	call DxGet("St", tmp$) \ tmp$ = ucase$(tmp$) \ s$[106,107]=tmp$+B$
	call DxGet("Zip", tmp$) \ tmp$ = ucase$(tmp$) \ s$[108,115]=tmp$+b$
	call DxGet("CommissionRate", tmp$) \ s1[0]=tmp$
	call DxGet("CommissionType", tmp$) \ s1[1]=tmp$
	call DxGet("MinGrossProfit", tmp$) \ s3[0]=tmp$
	call DxGet("SalesGroup", tmp$) \ s3[9]=tmp$
	call DxGet("EmailAddress", tmp$) \ tmp$ = ucase$(tmp$) \ s2$[1,50]=tmp$+b$
	call DxGet("Warehouse", tmp$) \ s3[3]=tmp$
	call DxGet("AllowBonus", tmp$) \ AllowBonus=tmp$
	call DxGet("DrawAmount", tmp$) \ DrawAmount=tmp$
	call DxGet("FaxNumber",tmp$)
	let tmp1$=rtrim$(tmp$)
	if tmp1$<>""
		let tmp$=""
		for ctr=1 to len(tmp1$)
			if tmp1$[ctr,ctr]<"0" or tmp1$[ctr,ctr]>"9"
			else
				let tmp$=tmp$+tmp1$[ctr,ctr]
			endif
		next ctr
	endif
    let faxnum=tmp$
	call Dxget("ViaType",tmp$)
	let viatype=-1
	let tmp$=ucase$(rtrim$(tmp$))
	if tmp$="P" let viatype=0
	if tmp$="F" let viatype=1
	if tmp$="M" let viatype=2
	if viatype<0 or viatype>2
		let returnstatus=0
		let message$="Invalid Via Type Submitted. P=Print, F=Fax, M=Email"
		goto bp141
	endif
	! call DxGet("HoldWarehouse", tmp$) \ HOLDWHSE=tmp$
	message$ = "Record updated."
	if s1[1] and s3[0] ! if commission grid, no min gross profit
		s3[0] = 0
		message$ = "Commission grid used, gross profit min. set to 0.  Record Updated."
	end if
	Gosub WriteSalesrep
Return

!----------------------------------------------------------------------------
! result of delete call
!----------------------------------------------------------------------------
DeleteData: !
	if k[3] = -1 return ! new record - not written out yet
	LET D9=S$[116,118]
	IF D9=99 return ! 99 is the "unassigned" rep??
	!call DxGet("HoldWarehouse", tmp$) \ HOLDWHSE=tmp$
	holdwhse=s3[3] ! original whse ! (don't trust the send)
	!
	! check to make sure it's not in use
	!
	gosub VerifyDeleteOK
	! good to go - delete and transfer any references to "unassigned"?
	gosub DeleteSalesrep
	! GO THROUGH CUSTOMER FILE and transfer
	LET K4$=" ",K4$
	do
		SEARCH #ch_cust,3,1;K4$,V1,E ! \ if e>2 error 42
		IF E exit do
		MAT  READ #ch_cust,V1,142;C1
		MAT  READ #ch_cust,V1,502;S0
		IF C1[2]=D9 LET C1[2]=99
		FOR i=1 TO 20
			IF S0[i]=D9 LET S0[i]=99
		NEXT i
		MAT  WRITE #ch_cust,V1,142;C1
		MAT  WRITE #ch_cust,V1,502;S0;
	loop
Return

!----------------------------------------------------------------------------
! verify it's ok to delete.  will not return if not ok.
!----------------------------------------------------------------------------
VerifyDeleteOK: !
	! **************
	! CHECK ORDERS
	! **************
	IF P9$[21,21]="Y" !MULTI-SALESMAN CHECK
		LET K4$=" ",K4$
		do
			SEARCH #ch_roh,3,1;K4$,V1,E ! \ if E>2 error 42
			IF E exit do
			MAT  READ #ch_roh,V1;H0;
			MAT  READ #ch_roh,V1,278;ROH_SLSM;
			IF H0[11]=D9
				message$ = "Salesrep has orders - cannot delete!"
				returnstatus=0 \ goto bp141 ! error 10000
			end if
			FOR i=0 TO 4
				IF ROH_SLSM[i]=D9
					message$ = "Salesrep has orders - cannot delete!"
					returnstatus=0 \ goto bp141 ! error 10000
				end if
			NEXT i
		loop
	else ! not multi-salesman environment
		LET K4$=" ",K4$
		LET K4$=D9 USING "###"
		LET K4$[4]=""
		SEARCH #ch_roh,3,3;K4$,V1,E
		IF not(E)
			LET i=K4$[1,3]
			IF i=D9
				message$ = "Salesrep has orders - cannot delete!"
				returnstatus=0 \ goto bp141 ! error 10000
			end if
		end if
	end if
	! **************
	! CHECK COMMISSION
	! **************
	LET K4$=" ",K4$
	LET K4$=D9 USING "###"
	LET K4$[4]=""
	SEARCH #ch_slsmcom,3,1;K4$,V1,E
	IF NOT(E)
		LET I=K4$[1,3]
		IF I=D9
			message$ = "Salesrep has commission - cannot delete!"
			returnstatus=0 \ goto bp141 !error 10000
		end if
	end if
	! **************
	! SALES (INTERNAL)
	! **************
	FOR I=0 TO 19
		FOR J=0 TO 5
			IF S2[I,J]
				message$ = "Salesrep has sales - cannot delete!"
				returnstatus=0 \ goto bp141 !error 10000
			end if
		NEXT j
	NEXT i
	! **************
	! A/R
	! **************
	L_5100: ! CHECK A/R
	LET K4$=" ",K4$
	do
		SEARCH #ch_aract,3,1;K4$,V1,E ! \ if e>2 error 42
		IF E exit do
		READ #ch_aract,V1;S6;
		IF S6=D9
			message$ = "Salesrep has A/R activity - cannot delete!"
			returnstatus=0 \ goto bp141 !error 10000
		end if
	loop
	! **************
	! SHIPLIST
	! **************
	L_5500: ! CHECK  SHIPLIST
	LET K4$=" ",K4$
	do
		SEARCH #ch_shiplist,3,1;K4$,V1,E ! \ if e>2 error 42
		IF E exit do
		READ #ch_shiplist,V1,390;S6;
		IF S6=D9
			messagE$ = "REP: "+str$(d9)+" ON FILE: "+str$(s6)
			! e$ = "Salesrep has shiplist - cannot delete!"
			returnstatus=0 \ goto bp141 !error 10000
		end if
	loop
Return

!----------------------------------------------------------------------------
! Read salesrep in SLSM.  if not found k[3] = -1 and salesrep record init.
!----------------------------------------------------------------------------
GetSalesrep: !
	K3$ = " ",K3$;K3$[1,3] = SLSM Using "###"
	Search #ch_slsm,2,1;K3$,K[3],E
	If E>1 ! Error 42
		message$="Search Error "+Str$(E)+" dir=1  k3$="+K3$
		returnstatus=0 \ goto bp141 !error 10000
	Endif
	If E
		K[3] = -1
		gosub InitSalesrep
	else
		gosub ReadSalesrep
	end if
Return

!----------------------------------------------------------------------------
! init salesrep record
!----------------------------------------------------------------------------
InitSalesrep: !
	S$ = " ",S$
	clear S1[]
	clear s2[]
	clear S3[]
	S2$=" ",S2$
	S3$=" ",S3$
	SalesGroupNum = 0
	clear SCFIN[]
	AllowBonus = 0
	DrawAmount = 0
	let viatype=0
	let faxnum=0
	SLTBL = 0
	S$[116,118] = SLSM Using "###"
Return

!----------------------------------------------------------------------------
! read salesrep record (K[3])
!----------------------------------------------------------------------------
ReadSalesrep: !
	Mat Read #ch_slsm,K[3],0;S$
	Mat Read #ch_slsm,K[3],118;S1
	Mat Read #ch_slsm,K[3],142;S2
	Mat Read #ch_slsm,K[3],862;S3
	Mat Read #ch_slsm,K[3],922;S2$;
	Mat Read #ch_slsm,K[3],972;S3$;
	Mat Read #ch_slsm,K[3],1022;SalesGroupNum;
	Mat Read #ch_slsm,K[3],1024;SCFIN;
	Mat Read #ch_slsm,K[3],1048;SLTBL;
	Mat Read #ch_slsm,K[3],1054;AllowBonus;
	Mat Read #ch_slsm,K[3],1056;DrawAmount;
	IF S$[116,116]="" OR S$[116,118]="   "
		LET S$[116,118]=SLSM USING "###"
	ENDIF
	MAT READ #ch_slsm,k[3],1062;faxnum;
	mat read #ch_slsm,k[3],1070;viatype;
Return

!----------------------------------------------------------------------------
! write salesrep record (K[3])
!----------------------------------------------------------------------------
WriteSalesrep: !
	if K[3] = -1 ! if this is a new record
		K3$ = " ",K3$;K3$[1,3] = SLSM Using "###"
		E = 2 \ Search #ch_slsm,1,0;K3$,K[3],E
		If E ! Error 42
			message$="Search Error "+Str$(E)+" getting new record"
			returnstatus=0 \ goto bp141 !error 10000
		Endif
		Search #ch_slsm,4,1;K3$,K[3],E 
		If E ! Error 42
			message$="Search Error "+Str$(E)+" mode=4, dir=1, k3$="+k3$
			returnstatus=0 \ goto bp141 !error 10000
		Endif
		K2$ = " ",K2$;K2$[1,4] = K3$[1,4];K2$[5,6] = S3[3] Using "##"
		Search #ch_slsm,4,2;K2$,K[3],E 
		If E ! Error 42
			message$="Search Error "+Str$(E)+" mode=4, dir=2, k2$="+k2$
			returnstatus=0 \ goto bp141 !error 10000
		Endif
		clear zer2
		Mat Write #ch_slsmsls,K[3],0;ZER_;
		Write #ch_slsmsls,K[3],0;SLSM;
		Write #ch_slsmsls,K[3],508;PCDATE;
		Mat Write #ch_slsm,K[3],0;ZER2
		! Chain "MX141B" customer transfer not implemented
	else
		If HOLDWHSE <> S3[3] ! whse change
			s$[116,118]=SLSM Using "###" ! to be sure
			K2$ = " ",K2$;K2$[1,3] = S$[116,118];K2$[5,6] = S3[3] Using "##"
			Search #ch_slsm,4,2;K2$,K[3],E
			If E !  error 42
				message$="Search Error "+Str$(E)+" mode=4, dir=2, k2$="+k2$
				returnstatus=0 \ goto bp141 !error 10000
			Endif
			K2$ = " ",K2$;K2$[1,3] = S$[116,118];K2$[5,6] = HOLDWHSE Using "##"
			Search #ch_slsm,5,2;K2$,K[3],E 
			If E !  error 42
				message$="Search Error "+Str$(E)+" mode=5, dir=2, k2$="+k2$
				returnstatus=0 \ goto bp141 !error 10000
			Endif
		End If
	end if
	S3[1] = K[3];s$[116,118]=SLSM Using "###"
	Mat Write #ch_slsm,K[3];S$
	Mat Write #ch_slsm,K[3],118;S1
	Mat Write #ch_slsm,K[3],142;S2
	Mat Write #ch_slsm,K[3],862;S3
	Mat Write #ch_slsm,K[3],922;S2$
	Mat Write #ch_slsm,K[3],972;S3$
	Mat Write #ch_slsm,K[3],1022;SalesGroupNum
	Mat Write #ch_slsm,K[3],1024;SCFIN
	Mat Write #ch_slsm,K[3],1048;SLTBL
	Mat Write #ch_slsm,K[3],1054;AllowBonus
	Mat Write #ch_slsm,K[3],1056;DrawAmount;
	MAT Write #ch_slsm,k[3],1062;faxnum;
	mat Write #ch_slsm,k[3],1070;viatype;

Return

!----------------------------------------------------------------------------
! delete salesrep record (K[3])
!----------------------------------------------------------------------------
DeleteSalesrep: !
	SEARCH #ch_slsm,5,1;K3$,K[3],E 
	If E !  error 42
		message$="Search Error "+Str$(E)+" mode=5, dir=1, k3$="+k3$
		returnstatus=0 \ goto bp141 !error 10000
	Endif
	LET K2$=" ",K2$;K2$[1,3]=K3$[1,3];K2$[5,6]=HOLDWHSE USING "##"
	SEARCH #ch_slsm,5,2;K2$,K[3],E
	If E !  error 42
		message$="Search Error "+Str$(E)+" mode=5, dir=2, k2$="+k2$
		returnstatus=0 \ goto bp141 !error 10000
	Endif
	MAT  WRITE #ch_slsm,K[3];ZER2;
	MAT  WRITE #ch_slsmsls,K[3],0;ZER_;
	LET E=3 \ SEARCH #ch_slsm,1,0;K3$,K[3],E
	If E !  error 42
		message$="Search Error "+Str$(E)+" return record="+Str$(k[3])
		returnstatus=0 \ goto bp141 !error 10000
	Endif
Return

OUTEND: Rem EXIT ROUTINE
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end