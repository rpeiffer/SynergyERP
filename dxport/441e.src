! >>> Program 441e
!
! description Bill-to Customer Sales MTD/YTD Summary
!
! loadsave -w -n 100,10 -o prog/dxport/441e.dl4 src/441e.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 26, 2005  14:59:03
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx441e.src (univ2) [txc] {02285}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX441E - BILL TO SALES  MTD/YTD SUMMARY
Rem AUTHOR: DAVE  OCT  6, 1986
Rem LAST UPDATE:  roman 06/12/1991  verify variables / cleanup
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
Def FNS(X) = Sgn(X) * (Int(Abs(X) + .5))
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim A1$[137],T9$[26]
Dim 1%,F,X1,C0[1],ACTIVE
Dim 2%,C1[12],C2[12],X2,SCALE
Dim 3%,C4[5],C5[5],C6[9],X3[1],T9[10],T8[20],C10[5]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[50],ARDATE$[8]
Dim K1$[50],K2$[20],K3$[20],K4$[30],X$[10]
For J = 2 To 2
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1808"
SCALE = 1
Mat Read #1,0,100;ARDATE$;
Read #1,3;CNAME$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
!!!! dx add xport reporting code
dim tmp$[300]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"441e",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!!!! dx add xport reporting code
call dxget("k2",k2$) !starting bill to cust
call dxget("k3",k3$) !ending bill to cust
call dxget("x1",tmp$) \ x1=tmp$ ! active, inactive or all (1,2,3)
call dxget("sort",tmp$) \ if tmp$="" let c=2 else let c=9 ! sort by category
call dxget("j2",j2$) ! beg category
call dxget("j3",j3$) ! end category
call dxget("j",j$) ! scaling factor
!!!! dx end
!
X2 = K2$ \ K2$ = X2 Using "######"
If X2 < 0 Or X2 > 999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
!
If K3$ = "" Let K3$ = "999999"
X2 = K3$ \ K3$ = X2 Using "######"
If K3$<K2$ Or X2 > 999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
X2 = J2$ \ if X2=0 let x2=1 \ J2$=X2 using "###"
If X2 < 1 Or X2 > 999 let e$="Invalid starting category, must be between 0 and 999!" \ error 10000
J2$ = X2 Using "###"
!
If J3$ = "" Let J3$ = "999"
X2 = J3$ \ J3$ = X2 Using "###"
If J3$ < J2$ Or X2 > 999 let e$="Invalid ending category , must be between starting category and 999!" \ error 10000
!
C0 = J2$ \ C0[1] = J3$ ! beg / end category
X3 = K2$ \ X3[1] = K3$ ! beg / end bill to customers
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in

End If 

! - L_900: Rem GET RANGES
! - Print 'CS'
! - Print @0,0;"MX441E"
! - Print @30,0;"BILLTO SALES MTD/YTD SUMMARY"
! - Print @0,15;"ENTER STARTING BILLTO, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - X2 = K2$ \ K2$ = X2 Using "######"
! - Print @6,16;"ENDING BILLTO,   <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "999999"
! - X2 = K3$ \ K3$ = X2 Using "######"
! - If K2$ <= K3$ Goto L_990
! - Print @0,15;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: J1 = 70 \ J2 = 0
! - X3 = K2$ \ X3[1] = K3$
! - L_1000: Print @0,17;'CE';"SELECTIONS:  1: ACTIVE,  2: INACTIVE,  3: ALL ";
! - Input ""J$
! - X1 = J$ \ If X1 < 1 Goto L_1000
! - If X1 > 3 Goto L_1000
! - X3 = K2$ \ X3[1] = K3$
! - L_1100: Rem
! - Print @0,18;'CL';"SORT BY CUSTOMER CATEGORY? (Y/N) ";
! - Input ""J2$ \ If J2$ = "Y" Goto L_1200
! - If J2$ <> "N" Goto L_1100
! - C = 2 \ C0 = 0 \ C0[1] = 999
! - Goto L_1325
! - L_1200: Rem CTGY
! - Print @0,19;'CE';"ENTER STARTING CATEGORY, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
! - If J2$ = "" Let J2$ = "1"
! - X2 = J2$ \ If X2 <= 0 Goto L_1200
! - If X2 > 999 Goto L_1200
! - J2$ = X2 Using "###"
! - L_1240: Print @6,20;'CE';"ENDING CATEGORY,   <CR> FOR LAST,    E: TO EXIT ";
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
! - If J3$ = "" Let J3$ = "999"
! - X2 = J3$ \ If X2 <= 0 Goto L_1240
! - If X2 > 999 Goto L_1240
! - J3$ = X2 Using "###"
! - If J2$ <= J3$ Goto L_1300
! - Print @0,19;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
! - Signal 3,30 \ Goto L_1200
! - L_1300: Rem
! - C0 = J2$ \ C0[1] = J3$
! - C = 9
! - L_1325: Print @0,21;'CE';"ENTER SCALING FACTOR FOR QUANTITIES OR <CR> FOR DEFAULT OF 1:";
! - Input ""J$
! - SCALE = J$;SCALE = Int(SCALE)
! - If SCALE < 1 Let SCALE = 1
! - If SCALE > 10000 Let SCALE = 10000
!
! *** sort section
J4$ = " ",J4$
K1$=K2$
! - Print @0,22;'CE';"Clearing sort file..." \ Signal 3,0
L_1415: Search #9,3,1;J4$,V1,E
If E Goto L_1500
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 441e sortfile mode (m)=5 keyno (k)=1 r=",v1," e=",e," keyval (k$)=",j4$ \error 10000
Goto L_1415
L_1500: Rem SORT IT
! - Print @0,22;'CE';"Sorting...please wait" \ Signal 3,0
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E 
If E Goto L_1800
L_1530: Mat Read #2,R1,142;C1;
Mat Read #2,R1,252;C5;
Mat Read #2,R1,288;C6;
Mat Read #2,R1,624;C10;
If C1[4] < X3[0] Goto L_1520
If C1[4] > X3[1] Goto L_1520
If X1 = 3 Goto L_1550
ACTIVE = (C5[1] Or C5[3] Or C5[5] Or C6[1] Or C6[3] Or C6[5] Or C6[7] Or C6[9])
If X1 = 2 And Not(ACTIVE) Goto L_1550
If X1 = 1 And ACTIVE Goto L_1550
Goto L_1520
L_1550: J2$ = C1[4] Using "######"
Search #2,2,1;J2$,V1,E
If E 
  e$="AN INVALID CUSTOMER BILL-TO NUMBER HAS BEEN FOUND IN "
  e$=e$,"CUSTOMER NUMBER: ",C1[1],"."
  error 10000
endif
Mat Read #2,V1,142;C2;
If C2[9] < C0[0] Goto L_1520
If C2[9] > C0[1] Goto L_1520
J4$ = " ",J4$ \ If C = 9 Let J4$ = C2[9] Using "###"
J4$[4] = C1[4] Using "######" \ J4$[10] = K1$
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 441e sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1520
!
! *** Process
L_1800: Rem
!
if j8 ! dx xml headings
  if C=9 ! sort by category
    tmp$="CATEGORY",fdel$,"BILLTO",fdel$
  else
    tmp$="BILLTO",fdel$
  endif
  tmp$=tmp$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"MTD QTY",fdel$,"MTD SALES",fdel$
  tmp$=tmp$,"MTD G/P",fdel$,"MTD G/P %",fdel$
  tmp$=tmp$,"YTD QTY",fdel$,"YTD SALES",fdel$
  tmp$=tmp$,"YTD G/P",fdel$,"YTD G/P %",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K1$ = " ",K1$ \ J2$ = " ",J2$ \ K4$ = " ",K4$
Gosub L_2250
! - Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
Search #9,2,1;K1$,R1,E
K3$ = K1$
If Not(E) Goto L_2010
L_2000: Search #9,3,1;K1$,R1,E
If E = 2 Goto L_9100
L_2010: 
If K3$[4,9] <> K1$[4,9] Gosub L_2100
J2$ = " ",J2$ \ J2$ = K1$[4,9]
Search #2,2,1;J2$,R2,E
If E Let R2 = R1
Mat Read #2,R2,0;A1$;
Mat Read #2,R1,142;C1;
Mat Read #2,R1,252;C4;
For I = 0 To 1 \ C4[I] = Int(FNS(C4[I] / SCALE)) \ Next I
Gosub L_2300
Goto L_2000
L_2100: Rem PRINT
If J2$ = "" Goto L_2185
If J2$[1,6] = "      " Goto L_2185
Gosub L_5800
Gosub L_5000
Gosub L_2200
If K4$[1,3] <> K1$[1,3] Gosub L_4500
K4$ = K1$
L_2185: K3$ = K1$
Return 
!
L_2200: Rem TOTALS CALC
T9[3] = T9[3] + C5[0] \ T8[3] = T8[3] + C5[0]
T9[4] = T9[4] + C5[2] \ T8[4] = T8[4] + C5[2]
T9[5] = T9[5] + C5[4] \ T8[5] = T8[5] + C5[4]
T9[7] = T9[7] + C5[1] \ T8[7] = T8[7] + C5[1]
T9[8] = T9[8] + C5[3] \ T8[8] = T8[8] + C5[3]
T9[9] = T9[9] + C5[5] \ T8[9] = T8[9] + C5[5]
L_2250: For I = 0 To 5
  C5[I] = 0
Next I
Return 
!
L_2300: Rem "========================= tally totals into C5
For I = 0 To 5
  C5[I] = C5[I] + C4[I]
Next I
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
T9[6] = 0 \ T9[10] = 0
Print #0; Using "----------#"; Tab 37;T9[3];
Print #0; Using "-----,--#.##"; Tab 48;T9[4];
Print #0; Using "-----,--#.##"; Tab 61;T9[5];
If T9[4] Let T9[6] = FNR(T9[5] / T9[4] * 100)
Print #0; Using "---#.##"; Tab 74;T9[6];
Print #0; Using "---------#"; Tab 81;T9[7];
Print #0; Using "------,--#.##"; Tab 92;T9[8];
Print #0; Using "-----,--#.##"; Tab 105;T9[9];
If T9[8] Let T9[10] = FNR(T9[9] / T9[8] * 100)
Print #0; Using "---#.##"; Tab 118;T9[10];
Return 
!
L_4500: Rem SUBTTL
if J8 return ! dx xml
!
If K4$[1,3] = "   " Goto L_4700
Gosub L_5800
Print #0;"\15\** ";K4$[1,3];" TOTALS **";
Print #0; Using "-----,--#"; Tab 38;T8[3];
Print #0; Using "-----,--#.##"; Tab 48;T8[4];
Print #0; Using "-----,--#.##"; Tab 61;T8[5];
T8[6] = 0
If T8[4] Let T8[6] = FNR(T8[5] / T8[4] * 100)
Print #0; Using "---#.##"; Tab 74;T8[6];
Print #0; Using "-----,--#"; Tab 82;T8[7];
Print #0; Using "-----,--#.##"; Tab 92;T8[8];
Print #0; Using "-----,--#.##"; Tab 105;T8[9];
T8[10] = 0
If T8[8] Let T8[10] = FNR(T8[9] / T8[8] * 100)
Print #0; Using "---#.##"; Tab 118;T8[10]
J1 = J1 + 2
Print #0;" "
L_4700: Rem END
For I = 0 To 20
  T8[I] = 0
Next I
Return 
!
L_5000: Rem PRINT LINE
if J8 ! dx xml
  if C=9 ! category
    tmp$=K3$[1,3],fdel$,K3$[4,9],fdel$
  else
    tmp$=K3$[4,9],fdel$
  endif
  tmp$=tmp$,rtrim$(A1$[31,60]),fdel$
  tmp$=tmp$,C5[0] Using "---------#",fdel$
  tmp$=tmp$,C5[2] Using "-----,--#.##",fdel$
  tmp$=tmp$,C5[4] Using "-----,--#.##",fdel$
  T9 = 0 \ If C5[2] Let T9 = FNR(C5[4] / C5[2] * 100)
  tmp$=tmp$,T9[0] Using "---#.##",fdel$
  tmp$=tmp$,C5[1] Using "---------#",fdel$
  tmp$=tmp$,C5[3] Using "-----,--#.##",fdel$
  tmp$=tmp$,C5[5] Using "-----,--#.##",fdel$
  T9[1] = 0 \ If C5[3] Let T9[1] = FNR(C5[5] / C5[3] * 100)
  tmp$=tmp$,T9[1] Using "---#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Print #0; Tab 1;K3$[4,9];
Print #0; Tab 8;A1$[31,60];
Print #0; Using "---------#"; Tab 37;C5[0];
Print #0; Using "-----,--#.##"; Tab 48;C5[2];
Print #0; Using "-----,--#.##"; Tab 61;C5[4];
T9 = 0 \ If C5[2] Let T9 = FNR(C5[4] / C5[2] * 100)
Print #0; Using "---#.##"; Tab 74;T9[0];
Print #0; Using "---------#"; Tab 81;C5[1];
Print #0; Using "-----,--#.##"; Tab 92;C5[3];
Print #0; Using "-----,--#.##"; Tab 105;C5[5];
T9[1] = 0 \ If C5[3] Let T9[1] = FNR(C5[5] / C5[3] * 100)
Print #0; Using "---#.##"; Tab 118;T9[1]
Return 
!
L_5800: Rem "======================================= headings
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 441E - ";T9$;
Print #0; Tab 50;"CUSTOMER BILL TO SALES REPORT";
If SCALE > 1 Print #0;" (scaling factor of";SCALE;")" Else Print #0;" "
Print #0;"\15\"
Print #0; Tab 1;"BILLTO";
Print #0; Tab 8;"CUSTOMER NAME";
Print #0; Tab 40;"MTD QTY";
Print #0; Tab 51;"MTD SALES";
Print #0; Tab 66;"MTD G/P";
Print #0; Tab 76;"G/P %";
Print #0; Tab 84;"YTD QTY";
Print #0; Tab 95;"YTD SALES";
Print #0; Tab 110;"YTD G/P";
Print #0; Tab 120;"G/P %"
Print #0;" "
Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
end

! - Close #2
! - Chain "MX441"
! - Chain "MX000"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
Gosub L_2100 \ Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
Goto OUTEND
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
