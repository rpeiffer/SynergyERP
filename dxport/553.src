!>>> Program 553
!
! description  A/P - P/O Cutoff Report
!
! loadsave -w -n 100,10 -o prog/dxport/553.dl4 src/553.src
!
include "src/copyright.inc" ! dx
!
Rem la553 - A/P - P/O Cutoff Report
Rem cct#238086 jliu 2/16/10 add the A/P posting date
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 17, 2010  10:11:13
Rem /w2/papermaster/r2005//usr/acct/jliu/work/custom/htberry.r10/la553.src (univ2) [jliu] {08433}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault
Declare External Function OpenFile,PDate$,getuidrec,JDate$

Declare Intrinsic Sub DateToJulian,InpBuf,Logic,String,Time,VerifyDate
Declare Intrinsic Sub programdump
!Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!If Err 0 Stop 
Dim 1%,E,F,I,K,L,L9,M[1],N,P,N9,G8$[2],WHSE
Dim 2%,H0[5],H$[116],2%,H3[4],1%,H4[9],3%,H8[9]
Dim 2%,UDATE[1],APDATE,VENDCODE
Dim 2%,M1[8],R1,X,D,G9[3],DT3[1],JCDATE,JDATE[5]
Dim 3%,M2[4],T9[15],R2$[4],VENDNAME$[30]
Dim K1$[50],K2$[30],K3$[30],M$[12],M1$[10],M2$[4],P$[8],U5$[50],2%
Dim K5$[50],K6$[50]
Dim G9$[40],2%,K1[1],K2[1],K3,3%,T[4],T1[4]
Dim T$[30],D$[25],R$[63],F$[16]
Dim 2%,R[16],D9[5],1%,3%,B8[1]
Dim P9$[50]
Dim 3%,AMOUNT,DISP_COST,DISP_QTY,TOTPOAMT[1]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 1%,L1[5],PL0[4],POMISC[2]
Dim 2%,L2[2]
Dim 3%,L3[6],PL[5],PL4[23],PL5[9],PL6[9]
Dim L1$[120]
Dim A1$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim PRFLG$[10],PRMKUPTYP$[4],PIC$[50],PRIML$[12]
Dim 1%,LLC,PFTB[3],LM[1],UPCT,PR_PO[1]
Dim 1%,PRBASE,PRPARC2[3],PRD1[4],AGEDAY
Dim 2%,A2,A3[3],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 2%,STK[2],FDT[1],PRMKUP[3],PRD0[2]
Dim 3%,A1[7],PF_LOAD2,PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,LBSORD,FUT[1],PRREDI[1],PRD2[3]
Dim NSD$[96]
Dim 1%,NSD1[7]
Dim 2%,NSD2[4]
Dim 3%,NSD3[9]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],message$[200],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! for testing
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call Time(D$)
! call dxsave(0,"tmp/553in.txt!")
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
Mat Read #1,0,134;APDATE;
X2 = APDATE \ Gosub L_7820 \ X2 = 0
UDATE[1] = X2
X$ = APDATE Using "&&&&&&"
X$[5,6] = "01"
X2 = X$ \ Gosub L_7820 \ X2 = 0
UDATE[0] = X2
Read #1,88,16;j$[1,16];
Open #15,j$ ! a00ap
Read #1,88,48;j$[1,16];
Open #16,j$ ! acf10
!G9[0] = Spc(5) \ G9[1] = Int(G9[0] / 16384) \ G9[2] = Int((G9[0] - G9[1] * 16384) / 64)
!G9[3] = G9[0] - (G9[1] * 16384 + G9[2] * 64) \ G8$[1,1] = G9[2] Using "#"
G9[2]=Intco
G8$[1,1] = G9[2] Using "#"
Call DXGet("u_group",tmp$)
if rtrim$(tmp$)="" let tmp$="0"
G9[3]=tmp$
G8$[2,2] = G9[3] Using "#"
K2$ = " 0"
Search #15,2,1;K2$,R[15],E
If E
  Message$="RECORD '0' NOT FOUND IN A00AP" !\ Gosub ERR_SEARCH
  goto err_msg
End If 
Mat Read #15,R[15],2;R$;
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #4,F$
K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
K2$ = " ",K2$ \ K2$[3,6] = R2$
Search #16,2,1;K2$,R[16],E
If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
For X = 2 To 8
  Read L
  If L < 0 Goto L_830
  Read #1,88,L;J$;
  Ropen #X,J$
L_830: Next X
Data "432","448","-1","2416","2432"," 2448"," 1792"
Gosub L_7000 ! see if scrprt
!Print 'CS'; Tab 15;"ACCOUNTS PAYABLE PURCHASE ORDERS CUTOFF REPORT"
L = 99 \ P = 0
!Gosub L_5700 \ Gosub L_5600 ! screen & data
L_1060: !Print @0,23;'CL';"Enter #:field to edit   R: reselect all   P: print   E: exit ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "P"
!  Goto L_1900
!End If 
!If J$ = "R"
!  For K = 1 To 1
!    Gosub GETOPT
!  Next K
!  Goto L_1060
!End If 
!K = J$
!Gosub GETOPT
!Goto L_1060
!GETOPT: Rem get selections here
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On K Gosub GETDATE
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
GETDATE: !J0$ = "5000 63604"
X3 = UDATE[0] \ Gosub L_7870 \ J1 = D3[0]
!J5$ = "Enter Starting Date"
If J1 <= 0 Let J1 = 700101
x$=J1 using "&&&&&&"
tmp$=x$[3,6]+x$[1,2] ! convert to MMDDYY
j1=tmp$
!Gosub ISINPUT
call dxget("SDATE",tmp$) ! web returns as MMDDYY
if tmp$="" let tmp$=J1 Using "&&&&&&"
X$=tmp$[5,6]+tmp$[1,4]
j1=x$
X2 = J1 \ Gosub L_7820 \ e=e ! \ Goto GETDATE
if e
	message$="Invalid start date"
	goto err_msg
Endif
UDATE[0] = X2
GETDATE2: !J0$ = "5000 65404"
X3 = UDATE[1] \ Gosub L_7870 \ J1 = D3[0]
If J1 <= 0 Let J1 = 591231
!J5$ = "Enter Ending Date"
x$=J1 using "&&&&&&"
tmp$=x$[3,6]+x$[1,2] ! convert to MMDDYY
j1=tmp$
!Gosub ISINPUT
call dxget("EDATE",tmp$) ! web returns as MMDDYY
if tmp$="" let tmp$=J1 Using "&&&&&&"
X$=tmp$[5,6]+tmp$[1,4]
j1=x$
X2 = J1 \ Gosub L_7820 \ e=e !\ Goto GETDATE2
if e
	message$="Invalid end date"
	goto err_msg
Endif
UDATE[1] = X2
If UDATE[0] > UDATE[1]
  MEssage$="Ending Date Must Be Greater Than Starting"
  goto err_msg
End If 
!Return 
L_1900: Rem start the report
If not(scrprt) ! L9 <> 22
  !Print @0,23;'CL';" PRINTING... PLEASE WAIT . . . ";
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
Else ! is to browser
	!<section>
  tmp$ = bsdel$,"553",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
  tmp$="VENDOR",fdel$,"NAME",fdel$
  tmp$=tmp$,"PO #",fdel$,"LAST RECVD",fdel$
  tmp$=tmp$,"AMOUNT",fdel$,"AP INV",fdel$
  tmp$=tmp$,"AP AMT",fdel$,"AP POSTED",fdel$
  call addtostr(e$,rstr$,tmp$)
  ! try adding some header data?
  tmp$=fdel$,"PO CUTOFF REPORT FOR",fdel$ ! vend,name
  tmp$=tmp$,fdel$ ! po #
  X3 = UDATE[0]  \ Gosub L_7770 ! julian to mm/dd/yy
  tmp$=tmp$,X$[1,8],fdel$,fdel$,fdel$,fdel$ ! date,amt,apinv,apamt
	X3 = UDATE[1] \ Gosub L_7770
  tmp$=tmp$,x$,fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End If 
K1$ = " ",K1$
A9 = 0;VENDCODE = 0
L_2010: Search #2,3,2;K1$,R[2],E \ If E = 2 Goto L_9000
If E Gosub ERR_SEARCH
Mat Read #2,R[2],16;M1;
If Not(M1[7]) Goto L_2010
X2 = M1[2] \ Gosub L_7820 \ X2 = 0
If X2 < UDATE[0] Goto L_2010
If X2 > UDATE[1] Goto L_2010
Mat Read #2,R[2],52;M2;
Mat Read #2,R[2],0;M;
If M = 2 Goto L_2010
Mat Read #2,R[2],4;M$;
H3[0] = 0
TOTPOAMT[0] = 0
TOTPOAMT[1] = 0
VENDCODE = M1[0]
K5$ = " ",K5$
K5$[1,6] = M1[0] Using "######"
K5$[7,12] = M1[7] Using "######"
Search #5,2,2;K5$,R[5],E
If E > 1 Gosub ERR_SEARCH
If E = 1 Goto PRNTPOINFO
Mat Read #5,R[5],0;H0;
Mat Read #5,R[5],222;H3;
X2 = H3[0] \ Gosub L_7820 \ X2 = 0
If X2 >= UDATE[0] And X2 <= UDATE[1] Goto L_2010
K6$ = " ",K6$
K6$[1,6] = M1[7] Using "######"
SRCHPO: Rem search po line file
Search #6,3,1;K6$,R[6],E \ If E = 2 Goto ENDSRCHPO
If E Gosub ERR_SEARCH
X2 = K6$[1,6]
If X2 <> M1[7] Goto ENDSRCHPO
Mat Read #6,R[6],0;L1;
Mat Read #6,R[6],12;L2;
Mat Read #6,R[6],24;L3;
Mat Read #6,R[6],66;L1$;
Mat Read #6,R[6],186;PL;
Mat Read #6,R[6],222;PL0;
Mat Read #6,R[6],232;PL4;
Mat Read #6,R[6],376;POMISC;
Mat Read #6,R[6],382;PL5;
Mat Read #6,R[6],442;PL6;
Call Logic(1,2 ^ 2,L1[3],X0)
If X0 Goto SRCHPO
Gosub L_6100
X2 = PL4[22] \ Gosub L_7820 \ X2 = 0
DISP_QTY = L3[3] - PL4[17]
DISP_COST = PL4[0]
Gosub CALC_DISP_EXT
If X2 >= UDATE[0] And X2 <= UDATE[1]
  TOTPOAMT[1] = TOTPOAMT[1] + DISP_EXT
Else 
  TOTPOAMT[0] = TOTPOAMT[0] + DISP_EXT
End If 
Goto SRCHPO
ENDSRCHPO: Rem end of po info
If Not(TOTPOAMT[0]) And TOTPOAMT[1] <> 0 Goto L_2010
PRNTPOINFO: Rem
Gosub L_5800
Gosub L_5000
T9[0] = T9[0] + M2[0]
T9[1] = T9[1] + TOTPOAMT[0]
T9[2] = T9[2] + TOTPOAMT[1]
Goto L_2010

L_4000: Rem TOTAL PRINT
if not(Scrprt)
	Gosub L_5800
	Print #0;" "
	Print #0; Tab 43;"*** GRAND TOTALS ***";
	Print #0; Using "------,---,--#.##"; Tab 64;T9[1];
	Print #0; Using "------,---,--#.##"; Tab 97;T9[0];
	Print #0;" "
	Print #0;"\14\";
Else ! send totals too
	tmp$=fdel$,"*** GRAND TOTALS ***",fdel$ ! vend,name
	tmp$=tmp$,fdel$,fdel$ ! po,date
	tmp$=tmp$,LTrim$(T9[1] Using "----------#.##"),fdel$
	tmp$=tmp$,fdel$ ! ap inv
	tmp$=tmp$,LTrim$(T9[0] Using "----------#.##"),fdel$
	tmp$=tmp$,fdel$,rdel$
	call addtostr(e$,rstr$,tmp$)
Endif
Return 
L_5000: Rem PRINT LINE
If Scrprt ! xml
	tmp$=Str$(VENDCODE),fdel$
	K2$ = " ",K2$ \ K2$[1,6] = VENDCODE Using "######"
  Search #4,2,1;K2$,R[4],E
  If Not(E)
    Mat Read #4,R[4],0;VENDNAME$;
  Else 
    VENDNAME$ = "**** Vendor Not On File ****"
  End If 
  A9 = VENDCODE
  tmp$=tmp$,RTrim$(VENDNAME$),fdel$
  tmp$=tmp$,str$(M1[7]),fdel$
  x$="" \ if h3[0] let x$=PDate$(H3[0])
  tmp$=tmp$,X$,fdel$
  tmp$=tmp$,LTrim$(TOTPOAMT[0] Using "---------#.##"),fdel$
  tmp$=tmp$,RTrim$(M$[1,12]),fdel$
  tmp$=tmp$,LTrim$(M2[0] using "---------#.##"),fdel$
  x$="" \ if m1[2] let x$=PDate$(M1[2])
  tmp$=tmp$,x$,fdel$
  tmp$=tmp$,rdel$
  call addtostr(e$,rstr$,tmp$)
Else ! normal print
	If A9 <> VENDCODE
	  Print #0;"" \ L = L + 1
	  K2$ = " ",K2$ \ K2$[1,6] = VENDCODE Using "######"
	  Search #4,2,1;K2$,R[4],E
	  If Not(E)
		Mat Read #4,R[4],0;VENDNAME$;
	  Else 
		VENDNAME$ = "**** Vendor Not On File ****"
	  End If 
	  Print #0; Using "######";VENDCODE; Tab 8;VENDNAME$;
	  A9 = VENDCODE
	End If 
	Print #0; Using "######"; Tab 41;M1[7];
	X2 = H3[0] \ Gosub L_7700 \ P$ = X$
	Print #0; Tab 51;P$[1,8];
	Print #0; Using "---,---,---.##"; Tab 67;TOTPOAMT[0];
	Print #0; Tab 84;M$[1,12];
	Print #0; Using "---,---,---.##"; Tab 100;M2[0];
	X2 = M1[2] \ Gosub L_7700 \ P$ = X$
	Print #0; Tab 116;P$[1,8];
	Print #0;""
Endif ! xml or print
Return 
L_5600: Rem DISPLAY SCREEN VARIABLES
!X3 = DATE[0] \ Gosub L_7770 \ Print @36,4;X$[1,8];
!X3 = DATE[1] \ Gosub L_7770 \ Print @54,4;X$[1,8];
Return 
L_5700: Rem DISPLAY SCREEN
!Print 'CS';@0,0;"-la553-"; Tab 27;"A/P - P/O Cutoff Report";
!Print @35,2;'BR';"STARTING";'ER';@54,2;'BR';"ENDING";'ER';
!Print @2,4;"1> POSTING DATE";
Return 
L_5800: Rem page heading
if scrprt return ! no heading - xml
L = L + 1
If L < L9 Return 
!If L9 = 22
!  If P <> 0 ! has page #
!    Input "\15\PRESS <CR> TO CONTINUE "J$
!  End If 
!  Print 'CS'
!End If 
L_5830: If P Print #0;"\14\";
P = P + 1
Print #0;" "
Print #0; Tab 50;G9$[1,40]
Print #0; Tab 33;"Accounts Payable - Purchase Order Cutoff Report";
Print #0; Tab 110;"PAGE";P
X3 = UDATE[0] \ Gosub L_7770
Print #0; Tab 40;"FOR THE POSTING DATE OF ";X$[1,8];" THRU ";
X3 = UDATE[1] \ Gosub L_7770
Print #0;X$[1,8]
Print #0;" "
Print #0;"VENDOR";
Print #0; Tab 8;"NAME";
Print #0; Tab 41;"P.O.#";
Print #0; Tab 49;"LAST RCVD";
Print #0; Tab 75;"AMOUNT";
Print #0; Tab 84;"A/P INVOICE#";
Print #0; Tab 104;"A/P AMOUNT";
Print #0; Tab 116;"A/P POSTING DATE";
L = 7
Return 
L_6100: Rem "================================ get product
Call Logic(1,2 ^ 0,L1[3],X0)
If Not(X0)
  Gosub L_6200
Else 
  Gosub L_6250
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2] \ A3[3] = NSD3[8]
  PFU1[8] = NSD1[5];PFU1[10] = NSD1[4];PFU1[11] = NSD1[3];PFU1[15] = NSD1[7]
  A1$[9,38] = NSD$[13,42] \ A1$[63,92] = NSD$[43,72]
  A1$[140,151] = NSD$[1,12]
  If PFU1[15] = -3 Let A1$[127,127] = "Y"
End If 
Return 
L_6200: Rem READ PRODUCT FILE
Mat Read #8,L3[1];A1$;
Mat Read #8,L3[1],156;B;
Mat Read #8,L3[1],256;A; \ Mat Read #8,L3[1],460;A3;
Mat Read #8,L3[1],512;PFU1;
Mat Read #8,L3[1],554;PFU2;
Return 
L_6250: Rem READ NSTKDESC
Mat Read #7,L3[1];NSD$;
Mat Read #7,L3[1],96;NSD1;
Mat Read #7,L3[1],112;NSD2;
Mat Read #7,L3[1],132;NSD3;
Return 
Rem {begin call.input.i}
!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!Return 
!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}
L_7000: Rem CHECK PRINTER TYPE
If Err 0 Let F = Spc(8)
F = 0
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60
If F Let L9 = 22;scrprt=9
F = 0
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_7770: Rem DATE JULIAN X3 TO X$
D3[0] = X3;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
L_7800: Rem date x$ to x3
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X3 = X$[1,6]
Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
if x2<=0 let e=1 \ return
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X3;D3[1] = X3;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 

CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
CNVTA= DISP_QTY;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 5 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA= DISP_COST;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
If L1[5] = -1 Or L1[5] = -3
  If PL4[13]
    If L1[5] = -1 Let DISP_EXT = FNR(DISP_COST * (PL4[12] * (L3[3] - PL4[17]) / PL4[13]) / 100)
    If L1[5] = -3 Let DISP_EXT = FNR(DISP_COST * (PL4[12] * (L3[3] - PL4[17]) / PL4[13]))
  Else 
    If L1[5] = -1 Let DISP_EXT = FNR((L3[5] / L3[2]) * (L3[3] - PL4[17]) * DISP_COST / 100)
    If L1[5] = -3 Let DISP_EXT = FNR((L3[5] / L3[2]) * (L3[3] - PL4[17]) * DISP_COST)
  End If 
End If 
If L1[5] = -2 Let DISP_EXT = DISP_COST
Return 
L_20000: Rem UNIT CONVERSION RETURNSA AMOUNT
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
ERR_MSG: ! something is awry
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
goto Err_Msg:
L_9000: Rem end of report
Gosub L_4000
!If L9 <> 22 Goto OUTEND
!ENDMORE: Rem end ask to continue
!Print @0,22;'CL';"End of Report Range.  Press <CR> ";
!Input Len 1;""J1$
!Call String(1,J1$)
OUTEND: Rem EXIT PROGRAM
If scrprt ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
END ! Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!!Rem {end rtn.error.s}
include "src/callmainerrnet.inc"
End 