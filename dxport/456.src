! >>> Program 456
!
! description Salesman Customer 12 Month Detail
!
! loadsave -w -n 100,10 -o prog/dxport/456.dl4 src/456.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT  5, 2004  21:14:08
Rem /w/papermaster/r2002//usr/acct/bill/work/r2002/mx/mx456.src (univ2) [bill] {38240}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX456 --- SALESMAN / CUSTOMER REPORT (SORTED)
Rem
Rem REV. 3.0 - 01/19/91
! custom_customer$ ------------------------------------------------------------------------------
! Omaha - 02/28/12 vst task12430 - copied source from 'r2005', added 'custom_customer$' 
! Omaha - not adding current year month is last year ytd rollover (2600 routine)
! 
! ------------------------------------------------------------------------------
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
!
Declare Intrinsic Sub InpBuf,String
! - Option Default Dialect IRIS1
Com 1%,MONTH_[4]
Com MTH$[108]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) / 10)
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim J$[16],K1$[30],K2$[30],K3$[30],K5$[3],K6$[30],A$[256],PMASK$[20]
Dim Z1$[25],CNAME$[30],A1$[142],X$[10],ARDATE$[8],DASH$[102],SUB_$[100]
Dim 1%,BOYMONTH,ARMONTH,COL,X6,GP_OPTION,MM,DET_LINE_PRINTED
Dim 2%,B1,E1,WHSE,R[20],V9[4]
Dim 3%,T1[12,2],T2[12,2],T4[12,2],T5[12,2],Z1[12,2],Z2[12,2]
Dim 3%,S1[12,2],S2[12,2],GP[12],GPP[12],SF[12,2]
Dim 3%,C2[12,2],H2[12,2],TYR,LYR,PCTR
Dim 2%,C1[12],D9[5],CUST
DIM custom_customer$[30]
! - Print 'CS MH'
! - Print @50,0;"MX456";@0,0;"SALESMAN / CUSTOMER SALES REPORT"
! - L_190: Print @0,8;'CE';"Print  S: MTD/YTD summary or  D: 12 (month) sales detail  E: Exit?";
! - Input ""K1$ \ Call String(1,K1$)
! - If K1$ = "E" Goto OUTEND
! - If K1$ = "S" Chain "MX456A"
! - If K1$ <> "D" Goto L_190
For I = 2 To 4
  Read X \ If X = -1 Goto L_260
  Read #1,88,X;J$;
  Ropen #I,J$
L_260: Next I
Data "2016","-1","1808"
Read #1,3;CNAME$;
Mat Read #1,115;D9;
Read #1,0,100;ARDATE$;
Mat Read #1,51,74;BOYMONTH;
Mat Read #1,0,120;ARMONTH;
mat read #1,115,60;custom_customer$;
let custom_customer$=rtrim$(custom_customer$)
DASH$ = "-",DASH$
J8 = 0
If Err 0 Let J8 = Spc(8)
L9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
L9 = 60
If J8 Let L9 = 22 \ SCRPRT = 99
P = 0
L = 80
!
MONTH_[1] = 1;MONTH_[2] = 0 \ rem ! - Call "UTMONTHS",MONTH_[],MTH$
Call UTMonths(e$,MONTH_[],MTH$,BOYMONTH) ! set up month headers
!
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"456",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("b1",tmp$) \ B1=tmp$ ! starting salesman
Call dxget("e1",tmp$) \ if tmp$="" let E1=999 else E1=tmp$ ! ending salesman
Call dxget("whse",tmp$) \ WHSE=tmp$ ! warehouse
Call dxget("gp_option",tmp$) \ if tmp$="" let GP_OPTION=0 else GP_OPTION=1 ! print cur year < last year
Call dxget("slsless",tmp$) \ if tmp$="" let SLSLESS=0 else SLSLESS=1 ! print cur year < last year
!!!  dx end
!
if B1<0 or B1>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
!
if E1<B1 or E1>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
If WHSE < 0 Or WHSE > D9[5] let e$="Invalid warehouse, must be between 0 and ",D9[5]," !" \ error 10000
!

!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

! - L_1000: Rem "======================================== GET RANGES
! - Print 'CS MH'
! - Print @50,0;"MX456";@0,0;"SALESMAN / CUSTOMER SALES REPORT"
! - Print @0,8;'CL';" 1> ENTER STARTING SLSM, <CR> FOR FIRST, OR  E: TO EXIT ";
! - Print @0,10;'CL';" 2> ENTER ENDING  SLSM, <CR> FOR LAST,  OR  E: TO EXIT ";
! - Print @0,12;'CL';" 3> ENTER WAREHOUSE,  0: FOR ALL, OR  E: TO EXIT ";
! - Print @0,14;'CL';" 4> PRINT GROSS PROFIT FIGURES(Y/ <CR> ) ";
! - Print @0,15;'CL';" 5> PRINT ONLY WHERE CURRENT YTD IS LESS THAN LAST YTD?(Y/ <CR> )  ";
! - For FLD = 1 To 5
! -   Gosub EDT_FLDS
! - Next FLD
! - Goto FINALQ
! - ENT_SSLSM: Rem "starting Salesman
! - Print @0,8;'CL';" 1> ENTER STARTING SLSM, <CR> FOR FIRST, OR  E: TO EXIT ";
! - Input Len 16387;""K5$
! - If K5$ = "E" Goto OUTEND
! - B1 = K5$
! - If Not(E1) Return 
! - If B1 <= E1 Return 
! - Print @0,22;'RB CL';"INVALID RANGE... RE-ENTER PLEASE ";
! - Signal 3,20 \ Print @0,22;'CE';
! - Goto ENT_SSLSM
! - ENT_ESLSM: Rem "ending
! - Print @0,10;'CL';" 2> ENTER ENDING  SLSM, <CR> FOR LAST,  OR  E: TO EXIT ";
! - Input Len 16387;""K5$
! - If K5$ = "E" Goto OUTEND
! - If K5$ = "" Let K5$ = "999"
! - E1 = K5$
! - If B1 <= E1 Return 
! - Print @0,22;'RB CE';"INVALID RANGE... RE-ENTER PLEASE ";
! - Signal 3,20 \ Print @0,22;'CE';
! - Goto ENT_ESLSM
! - L_1080: Rem WHSE
! - Print @0,12;'CL';" 3> ENTER WAREHOUSE,  0: FOR ALL, OR  E: TO EXIT: ";
! - Input Len 16386;""K1$ \ If K1$ = "E" Goto OUTEND
! - WHSE = K1$ \ If WHSE < 0 Or WHSE > D9[5] Goto L_1080
! - If K1$ <> "0" If Not(WHSE) Goto L_1080
! - Return 
! - L_1110: Rem GP Print?
! - Print @0,14;'CL';" 4> PRINT GROSS PROFIT FIGURES(Y/ <CR> ) ";
! - Input Len 16385;""A$
! - Call String(1,A$)
! - If A$ = "" Or A$ = "N" Let GP_OPTION = 0 \ Return 
! - If A$ = "Y" Let GP_OPTION = 1 \ Return 
! - Goto L_1110
! - L_1450: Rem "New Option - Curr YTD < LastYTD Only?
! - Print @0,15;'CL';" 5> PRINT ONLY WHERE CURRENT YTD IS LESS THAN LAST YTD?(Y/ <CR> )  ";
! - Input Len 16385;""A$ \ Call String(1,A$)
! - If A$ = "" Let A$ = "N"
! - If A$ <> "Y" And A$ <> "N" Goto L_1450
! - SLSLESS = 0
! - If A$ = "Y" Let SLSLESS = 1
! - Return 
! - FINALQ: Rem " 'standard Final Selection
! - Print @10,20;'CE';"ENTER  #:field to edit,  P: Print,  R: Reselect all,  E: Exit ";
! - Input Len 16385;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "E" Goto L_9010
! - If Z1$ = "R" Goto L_1000
! - If Z1$ = "P" Goto STRTSORT
! - FLD = Z1$ \ If FLD < 1 Or FLD > 5 Or Fra(FLD) Goto FINALQ
! - Gosub EDT_FLDS
! - Goto FINALQ
! - EDT_FLDS: Rem "per the 'standard'
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On FLD Gosub ENT_SSLSM,ENT_ESLSM,L_1080,L_1110,L_1450
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
! *** Sort Section
STRTSORT: Rem START THE SORT
MM = 0
! - Print @0,22;'CE';"CLEARING SORT FILE... PLEASE WAIT";
K1$ = " "
L_1515: Search #9,3,1;K1$,R[9],E
If E Goto L_1535
Search #9,5,1;K1$,R[9],E
If E Let e$ = "syserrorfile 456 sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K1$ \error 10000
Goto L_1515
!
L_1535: Rem SORTING
! - Print @0,22;'CE';
K1$ = ""
L_1555: Search #4,3,1;K1$,R[4],E
If E Goto L_1595
Rem {begin src/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
Mat Read #4,R[4],142;C1;
If C1[2] < B1 Goto L_1555
If C1[2] > E1 Goto L_1555
K2$ = " ",K2$;K2$[1,3] = C1[2] Using "###";K2$[4] = K1$
Search #9,4,1;K2$,R[9],E
If E Let e$ = "syserrorfile 456 sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K2$ \error 10000
Goto L_1555
!
! *** Process Section
L_1595: Rem
!
if j8 ! dx xml headings
  tmp$="CUST #",fdel$,"SALESMAN",fdel$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"CITY",fdel$,"STATE",fdel$
  tmp$=tmp$,"WHSE",fdel$,"TYPE",fdel$
  For I = 1 To 12
    tmp$=tmp$,MTH$[I * 3 - 2,I * 3],fdel$
  Next I
  tmp$=tmp$,"TOTAL",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,22;'CE';
! - If L9 = 22 Print 'CS'
PCTR = 0
! - If Err 0 Gosub ERR_ESCAPE
! - Signal 3,0
K1$ = " " \ K6$ = ""
L_2005: Search #9,3,1;K1$,R[9],E 
If E Goto L_8000
Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
If K6$ <> "" If K1$[1,3] <> K6$[1,3] Gosub L_7000
K6$[1,3] = K1$[1,3]
K2$ = " ",K2$;K2$[1,6] = K1$[4,9]
Search #2,2,1;K2$,R[2],E
If Not(E) Goto L_2060
L_2050: Search #2,3,1;K2$,R[2],E
If E Goto L_2090
L_2060: If K2$[1,6] <> K1$[4,9] Goto L_2090
D9[0] = K2$[19,20] \ If WHSE If WHSE <> D9[0] Goto L_2050
Mat Read #2,R[2],12;CUST;
Mat Read #2,R[2],16;S1;
Mat Read #2,R[2],256;S2;
Gosub L_2200 \ Goto L_2050
L_2090: Rem
Gosub L_2221
For I = 0 To 12
  If Z1[I,1] Or Z2[I,1] Goto L_2097
Next I
Gosub L_5340 \ Goto L_2005
L_2097: Gosub L_2500 \ Gosub L_2600
If SLSLESS ! "Only if Sales Less This YTD vs Last YTD
  TYR = C2[0,1];LYR = 0
  For X = 1 To ARMONTH
    LYR = LYR + H2[X,1]
  Next X
  If TYR < LYR Goto L_2110
  Gosub L_5340 \ Goto L_2005
End If ! "Print any
L_2110: Rem "for Less routine
Gosub L_5000
Goto L_2005
!
L_2200: Rem "====================================== do customer totals
For I = 0 To 12
  For X6 = 0 To 2
    Z1[I,X6] = Z1[I,X6] + (S1[I,X6])
    Z2[I,X6] = Z2[I,X6] + (S2[I,X6])
  Next X6
Next I
Return 
!
L_2221: For I = 0 To 12
  For X6 = 0 To 2
    Z1[I,X6] = Int(Z1[I,X6] + .5);Z2[I,X6] = Int(Z2[I,X6] + .5)
  Next X6
Next I
Return 
!
L_2230: Rem "========================== slsm break and grand totals
For I = 0 To 12
  For X6 = 0 To 2
    T1[I,X6] = T1[I,X6] + C2[I,X6]
    T2[I,X6] = T2[I,X6] + H2[I,X6]
    T4[I,X6] = T4[I,X6] + C2[I,X6]
    T5[I,X6] = T5[I,X6] + H2[I,X6]
  Next X6
Next I
Return 
!
L_2500: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH;C2[0,1] = 0
For I = 0 To 12
  For X6 = 0 To 2
    If I Let C2[I,X6] = Z1[X7,X6];C2[0,X6] = C2[0,X6] + Z1[X7,X6]
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_2600: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH;X8 = 0;H2[0,1] = 0
For I = 1 To 12
  For X6 = 0 To 2
    If I
      If Not(X8)
		Let H2[0,X6] = H2[0,X6] + Z2[X7,X6] 
	  Else 
		if custom_customer$<>"OMAHA" 
			Let H2[0,X6] = H2[0,X6] + Z1[X7,X6]
		 End If 
	  endif
	endif
    If Not(X8)
		Let H2[I,X6] = Z2[X7,X6] 
	Else
		Let H2[I,X6] = Z1[X7,X6]
	endif
L_2640: Next X6

  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_5000: Rem "================================= customer sales detail line
K3$ = " ",K3$;K3$ = CUST Using "######"
Search #4,2,1;K3$,R[4],E
If E Let A1$ = " ",A1$;A1$[31,50] = "*** NOT ON FILE *** "
If E=0 Mat Read #4,R[4],0;A1$;
!
if J8 ! dx mxl
  tmp1$=CUST using "######",fdel$,K6$[1,3],fdel$
  tmp1$=tmp1$,rtrim$(A1$[31,60]),fdel$,rtrim$(A1$[121,135]),fdel$
  tmp1$=tmp1$,A1$[136,137],fdel$
  if WHSE=0 let tmp$="ALL" else tmp$=WHSE using "##"
  tmp1$=tmp1$,tmp$,fdel$
  !
  tmp$=tmp1$,"THIS YEAR",fdel$
  For cnt = 1 To 12
    tmp$=tmp$,C2[cnt,1] Using "------#",fdel$
  Next cnt
  tmp$=tmp$,C2[0,1] Using "---------#",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  If GP_OPTION
    For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = C2[I,X6] \ Next X6 \ Next I
    Gosub L_7500 ! calc gp
    tmp$=tmp1$,"THIS YEAR GP",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,GP[cnt] Using "------#",fdel$
    Next cnt
    tmp$=tmp$,GP[0] Using "---------#",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
	!
    tmp$=tmp1$,"THIS YEAR GP%",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,GPP[cnt] Using "---#.#%",fdel$
    Next cnt
    tmp$=tmp$,GPP[0] Using "---------#.#%",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  tmp$=tmp1$,"LAST YEAR",fdel$
  For cnt = 1 To 12
    tmp$=tmp$,H2[cnt,1] Using "------#",fdel$
  Next cnt
  tmp$=tmp$,H2[0,1] Using "---------#",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  If GP_OPTION
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = H2[I,X6] \ Next X6 \ Next I
    Gosub L_7500 ! calc gp
    tmp$=tmp1$,"LAST YEAR GP",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,GP[cnt] Using "------#",fdel$
    Next cnt
    tmp$=tmp$,GP[0] Using "---------#",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
	!
    tmp$=tmp1$,"LAST YEAR GP%",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,GPP[cnt] Using "---#.#%",fdel$
    Next cnt
    tmp$=tmp$,GPP[0] Using "---------#.#%",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  goto PrintDetailExit
endif  
!
L_5100: Gosub L_5800
DET_LINE_PRINTED = 1
Print #0; Using "######";CUST; Tab 7;K6$[1,3]; Tab 11;A1$[31,49];
Print #0; Tab 31;"TY";
Print #0; Using "------#"; Tab 33;C2[1,1];C2[2,1];C2[3,1];C2[4,1];
Print #0; Using "------#";C2[5,1];C2[6,1];C2[7,1];C2[8,1];C2[9,1];
Print #0; Using "------#";C2[10,1];C2[11,1];C2[12,1];
Print #0; Using "---------#"; Tab 120;C2[0,1]
L = L + 1
I = 135
L_5164: If I > 121 And A1$[I,I] = " " Let I = I - 1 \ Goto L_5164
Print #0; Tab 11;A1$[121,I];" ";A1$[136,137];
If GP_OPTION
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = C2[I,X6] \ Next X6 \ Next I
  Gosub L_7300
End If 
If H2[0,1] = 0 Print #0;" " \ L = L + 1 \ Goto L_5320
If GP_OPTION Print #0; Tab 30;DASH$[1,100] \ L = L + 1
Print #0; Tab 31;"LY";
Print #0; Using "------#"; Tab 33;H2[1,1];H2[2,1];H2[3,1];H2[4,1];
Print #0; Using "------#";H2[5,1];H2[6,1];H2[7,1];H2[8,1];H2[9,1];
Print #0; Using "------#";H2[10,1];H2[11,1];H2[12,1];
Print #0; Using "---------#"; Tab 120;H2[0,1]
L = L + 1
Gosub L_5800
If GP_OPTION
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = H2[I,X6] \ Next X6 \ Next I
  Gosub L_7300
End If 
L_5320: Print #0;" "
L = L + 1
!
PrintDetailExit:
Gosub L_2230
L_5340: For I = 0 To 12
  For X6 = 0 To 2
    C2[I,X6] = 0;H2[I,X6] = 0;Z1[I,X6] = 0;Z2[I,X6] = 0
  Next X6
Next I
Gosub L_5800
Return 
!
L_5800: Rem HEADING ROUTINE
if J8 return ! dx xml
!
If L < L9 Return 
If V9[0] = 0 Goto L_5870
If L9 <> 22 Goto L_5860
! - Input "\15\PRESS <CR> TO CONTINUE "J$
! - Print 'CS'
L_5860: Print #0;"\14\"
L_5870: V9[0] = V9[0] + 1
Print #0;" - 456 - ";Msc$(3); Tab 51;CNAME$
Print #0;ARDATE$; Tab 45;"TWELVE MONTH/YEARLY DOLLAR SALES HISTORY";
Print #0; Using "PAGE ####"; Tab 120;V9[0]
Print #0;" "
If MM Goto L_5970
Print #0;"CO. #  SLM# NAME"; Tab 25;"WHSE:";
If Not(WHSE) Print #0;" ALL";
If WHSE Print #0; Using "##";WHSE;
Print #0; Tab 37;
For I = 1 To 12
  Print #0;MTH$[I * 3 - 2,I * 3];"    ";
Next I
Print #0; Tab 124;"TOTAL"
Print #0;" "
L_5970: L = 6
Return 
!
L_7000: Rem SALESMAN TOTALS
if J8 return ! dx xml
!
If Not(DET_LINE_PRINTED) If Not(T1[0,1]) If Not(T2[0,1]) Return 
Gosub L_5800
DET_LINE_PRINTED = 0
Print #0;"TOTALS FOR SALESMAN ";K6$[1,3];
Print #0; Tab 31;"TY";
If T1[1,1] < 0
  Print #0; Using "------#"; Tab 33;T1[1,1];
Else 
  Print #0; Using "#######"; Tab 33;T1[1,1];
End If 
For X = 2 To 12
  If T1[X,1] < 0
    Print #0; Using "------#";T1[X,1];
  Else 
    Print #0; Using "#######";T1[X,1];
  End If 
Next X
Print #0; Using "---------#"; Tab 120;T1[0,1]
L = L + 1
If GP_OPTION
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = T1[I,X6] \ Next X6 \ Next I
  Gosub L_7300
End If 
Gosub L_5800
If Not(T2[0,1]) Goto L_7230
If GP_OPTION Print #0; Tab 30;DASH$[1,100] \ L = L + 1
Print #0; Tab 31;"LY";
If T2[1,1] < 0
  Print #0; Using "------#"; Tab 33;T2[1,1];
Else 
  Print #0; Using "#######"; Tab 33;T2[1,1];
End If 
For X = 2 To 12
  If T2[X,1] < 0
    Print #0; Using "------#";T2[X,1];
  Else 
    Print #0; Using "#######";T2[X,1];
  End If 
Next X
Print #0; Using "---------#"; Tab 120;T2[0,1]
If GP_OPTION
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = T2[I,X6] \ Next X6 \ Next I
  Gosub L_7300
End If 
L_7230: Print #0;" "
L = L + 2
For I = 0 To 12
  For X6 = 0 To 2
    T1[I,X6] = 0;T2[I,X6] = 0
  Next X6
Next I
L = 65
Gosub L_5800
Return 
!
L_7300: Rem print gp info
if J8 return ! dx xml
!
Gosub L_7500
Print #0; Tab 31;"GP";
Print #0; Using "------#"; Tab 33;GP[1];
For I = 2 To 12
  Print #0; Using "------#";GP[I];
Next I
Print #0; Using "---------#"; Tab 120;GP[0]
L = L + 1
Print #0; Tab 30;"GP%";
Print #0; Using "---#.#%"; Tab 33;GPP[1];
For I = 2 To 12
  Print #0; Using "---#.#%";GPP[I];
Next I
Print #0; Using "---------#.#%";GPP[0]
L = L + 1
Return 
!
L_7500: Rem calculate gp
For I = 0 To 12
  GP[I] = SF[I,1] - SF[I,2]
  If SF[I,1] Let GPP[I] = FNR(GP[I] / SF[I,1] * 100) Else Let GPP[I] = 100
  If Not(SF[I,1]) And Not(SF[I,2]) Let GPP[I] = 0
Next I
Return 
!
L_8000: Rem "============================================= end-fo-file
if J8 goto OUTEND ! dx xml
!
MM = 1
Gosub L_7000
Gosub L_5800
For MM = 1 To 12 Step 6
  Print #0; Tab 36; \ For I = MM To MM + 5 \ Print #0;MTH$[I * 3 - 2,I * 3];"           "; \ Next I
  If MM > 1 Print #0; Tab 124;"TOTAL" Else Print #0;" "
  Print #0;"TOTALS FOR REPORT";
  SUB_$ = "TY";PMASK$ = "-------------#"
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = T4[I,X6] \ Next X6 \ Next I
  Gosub L_8340
  If Not(GP_OPTION) Goto L_8180
  SUB_$ = "GP"
  Gosub L_7500
  For I = 0 To 12 \ SF[I,1] = GP[I] \ Next I
  Gosub L_8340
  SUB_$ = "GP%";PMASK$ = "----------#.#%"
  For I = 0 To 12 \ SF[I,1] = GPP[I] \ Next I
  Gosub L_8340
L_8180: If T5[0,1] = 0 Goto L_8310
  Gosub L_5800
  Print #0; Tab 22;DASH$;DASH$[1,5] \ L = L + 1
  SUB_$ = "LY";PMASK$ = "-------------#"
  For I = 0 To 12 \ For X6 = 0 To 2 \ SF[I,X6] = T5[I,X6] \ Next X6 \ Next I
  Gosub L_8340
  If Not(GP_OPTION) Goto L_8310
  SUB_$ = "GP"
  Gosub L_7500
  For I = 0 To 12 \ SF[I,1] = GP[I] \ Next I
  Gosub L_8340
  SUB_$ = "GP%";PMASK$ = "----------#.#%"
  For I = 0 To 12 \ SF[I,1] = GPP[I] \ Next I
  Gosub L_8340
L_8310: If MM = 1 Print #0;"\15\\15\" \ L = L + 2
Next MM
! - If L9 < 30 Input "\15\PRESS <CR> TO EXIT "X$
Goto OUTEND
!
L_8340: Rem print  totals
Print #0; Tab 22;SUB_$;
COL = 25 \ For I = MM To MM + 5
  Print #0; Using PMASK$; Tab COL;SF[I,1]; \ COL = COL + 14 \ Next I
If MM > 1 Print #0; Using PMASK$; Tab 115;SF[0,1] Else Print #0;" "
L = L + 1
Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
! - L_9010: 
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
