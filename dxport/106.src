! >>> Program 106
!
! description Customer Shiplist Report
!
! loadsave -w -n 100,10 -o prog/dxport/106.dl4 src/106.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN  8, 2007  13:06:20
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/htberry.r9/mx106.src (univ2) [jcs] {47226}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX106   SHIPLIST PRINTOUT
Rem
Rem AUTHOR: G.DOSCHER  4/11/80
!
Declare Intrinsic Sub FindF,InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim tmp$[800],tmp1$[500]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim 3%,BegCust,EndCust
!
Dim 1%,F,CSZ1[6],DWH,ddiv
Dim 2%,C2,C3,SL2[4],CSZCUST[2],SLSLSM,SLBDD[1]
Dim 3%,J,CFIN[8],SLUD,SLBDG[1]
Dim 4%,C1
Dim A$[142],D$[12],D8$[8],J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim K1$[50],N$[30],R$[34],R1$[14],R2$[14],T9$[26],U3$[80],U5$[50]
Dim U9$[131],K3$[20],X$[10],D2$[10],SI$[120],CSZ$[14],P61$[256]
Dim SLUD$[60],UDAFIELDNAMES$[56],SLSKEY$[20],SLNAME$[30]
Dim SLPHN$[30],SLFLG$[6],SLBPO$[20]
W = 0
C5 = 0
U3$ = " ",U3$
For I = 2 To 5
  Read L
  If L = 0 Goto L_835
  Read #1,88,L;J$;
  Ropen #I,J$
L_835: Next I
Data "2112","1808","0","1824"
Mat Read #1,0,100;D8$;
Mat Read #1,3;N$;
Read #1,18,210;D2$;
! - Gosub GETUDAFIELDNAMES
Mat Read #1,68,0;UDAFIELDNAMES$;
Mat Read #1,61,0;P61$;
L = 80
D = 1
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 58 \ If J8 Let L9 = 22
P = 0
!
! dx add xport reporting code
DXSetup: ! 
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If P61$[34,34] = "Y" ! "Multi-Zones?
  J$ = "3/CSZONE" + Str$(intCO)
  Call FindF(J$,H)
  If Not(H)
    P61$[34,34] = "N"
  Else 
    Ropen #4,J$
  End If 
End If 
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"106",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("begcust",tmp$) \ BegCust=tmp$ ! starting customer
call dxget("endcust",tmp$) \ if rtrim$(tmp$)="" let EndCust=999999 else EndCust=tmp$ ! ending customer
call dxget("custdiv",tmp$) \ DVN=tmp$ ! customer division
call dxget("suppress",tmp$) \ if rtrim$(tmp$)="" let DSLT=1 else DSLT=0 ! suppress shiplist# .0000001 (Y=0)
call dxget("multzone",tmp$) \ if rtrim$(tmp$)="" let CSINFO=0 else CSINFO=1 ! print mult zone info
!  dx end
!
! starting & ending customer
if BegCust<0 or BegCust>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
if EndCust<BegCust or EndCust>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
R1$=BegCust using "######"
R2$=EndCust using "######"
R2$ = R2$ + ".999999"
!
! division
if DVN<0 or DVN>99 let e$="Invalid customer division, must be between 0 and 99!" \ error 10000
!
! multiple zones
if P61$[34,34]="N" let CSINFO=0

!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!
! - Signal 3,0
! - L_900: Rem ENTER RANGES
! - Print @0,0;'CS';@0,0;"-MX106-";@30,0;"SHIP LIST PRINTOUT"
! - Print @0,3;'CE';"ENTER STARTING CUSTOMER CODE, <CR>: first  E: exit  ";
! - Input Len 16384 + 6;""R1$ \ If R1$ = "E" Goto OUTEND
! - If R1$ <> "" Goto L_960
! - L_960: Print @0,4;'CE';"ENTER ENDING CUSTOMER CODE, <CR>: last  E: exit  ";
! - Input Len 16384 + 6;""R2$ \ If R2$ = "E" Goto OUTEND
! - If R2$ = "" Let R2$ = "999999"
! - X2 = R1$
! - R1$ = X2 Using "######"
! - X2 = R2$
! - R2$ = X2 Using "######"
! - R2$ = R2$ + ".999999"
! - If R1$ <= R2$ Goto L_1100
! - Print @0,19;'RB CE';"INVALID RANGE!" \ Signal 3,20
! - Goto L_900
! - L_1100: Rem DIVISION
! - Print @0,7;"ENTER CUSTOMER DIVISION,  <CR>: ALL   E: exit ";
! - Input Len 16384 + 2;""X$ \ If X$ = "E" Goto OUTEND
! - DVN = X$
! - L_1150: Print @0,9;'CE';"SUPPRESS SHIPLIST NUMBER .000001?  (Y/N/E)   ";
! - Input Len 16384 + 1;""X$ \ If X$ = "E" Goto OUTEND
! - DSLT = 0 \ If X$ <> "Y" If X$ <> "N" Goto L_1150
! - If X$ = "N" Let DSLT = 1
! - MZONE: Rem "
! - CSINFO = 0
! - If P61$[34,34] = "Y"
! -   Print @0,11;"PRINT MULTIPLE ZONE INFORMATION?  ";
! -   Input Len 16384 + 1;""X$ \ Call String(1,X$)
! -   If X$ <> "Y" And X$ <> "N" Goto MZONE
! -   If X$ = "Y" Let CSINFO = 1
! - End If 
! - FINALQ: Rem "Final
! - Print @0,22;'CE';"ENTER  P: print   R: reselect all   E: exit   ";
! - Input Len 16384 + 1;""X$ \ Call String(1,X$)
! - If X$ = "E" Goto OUTEND
! - If X$ = "R" Goto L_900
! - If X$ <> "P" Goto FINALQ
!
! Main Section

!
if J8 ! dx xml headings
  !
  tmp$="CUST #",fdel$,"CUSTOMER NAME",fdel$,"DIVISION",fdel$
  tmp$=tmp$,"SHIPLIST #",fdel$,"SHIP LIST NAME",fdel$
  tmp$=tmp$,"ADDRESS",fdel$,"ADDRESS 2",fdel$
  tmp$=tmp$,"CITY",fdel$,"STATE",fdel$,"ZIP",fdel$
  tmp$=tmp$,"COUNTRY",fdel$,"CONTACT",fdel$
  tmp$=tmp$,"PHONE",fdel$,"ROUTING",fdel$
  if P61$[34,34]<>"Y" let tmp$=tmp$,"STOP #",fdel$,"ZONE",fdel$
  tmp$=tmp$,"ZONE TAX #",fdel$,"TAX TYPE",fdel$
  tmp$=tmp$,"SALES AREA",fdel$,"SALESPERSON",fdel$,"SALESPERSON NAME",fdel$ 
  tmp$=tmp$,"SHIP WITH INVOICE",fdel$,"DEFAULT WHSE",fdel$
  tmp$=tmp$,"DEFAULT DIV",fdel$
  tmp$=tmp$,rtrim$(UDAFIELDNAMES$[1,14]),fdel$
  tmp$=tmp$,rtrim$(UDAFIELDNAMES$[15,28]),fdel$
  tmp$=tmp$,rtrim$(UDAFIELDNAMES$[29,42]),fdel$
  tmp$=tmp$,rtrim$(UDAFIELDNAMES$[43,56]),fdel$
  tmp$=tmp$,"SHIP INSTR LINE 1",fdel$,"SHIP INSTR LINE 2",fdel$
  tmp$=tmp$,"SHIP INSTR LINE 3",fdel$,"SHIP INSTR LINE 4",fdel$
  tmp$=tmp$,"BLANKET PO",fdel$,"EXPIRES ON",fdel$ ! *** chng
  tmp$=tmp$,"BUDGETED DOLLARS",fdel$,"BUDGET USED",fdel$
  if csinfo  ! P61$[34,34] = "Y" ! cszone file
    tmp$=tmp$,"LEAD TIME",fdel$,"SUN Z/S ",fdel$
    tmp$=tmp$,"MON Z/S ",fdel$,"TUE Z/S ",fdel$
    tmp$=tmp$,"WED Z/S ",fdel$,"THU Z/S ",fdel$
    tmp$=tmp$,"FRI Z/S ",fdel$,"SAT Z/S ",fdel$
  endif
  
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,22;'CE';"PRINTING...  PLEASE WAIT . . . " \ Signal 3,0
! - If L9 < 30 Print 'CS'
! - Signal 3,0
K1$ = R1$
! - If Err 0 Gosub ERR_ESCAPE
Search #2,2,D;K1$,R1,E
If Not(E) Goto L_2015
L_2000: ! loop
Search #2,3,D;K1$,R1,E
If E Goto OUTEND
If K1$ > R2$ Goto OUTEND
L_2015: ! got 1st
Mat Read #2,R1,0;A$;
Mat Read #2,R1,142;C1;
Mat Read #2,R1,150;R$;
Mat Read #2,R1,184;SL2;
Mat Read #2,R1,204;SI$
Read #2,R1,324;SLUD
Mat Read #2,R1,330;SLUD$
Mat Read #2,R1,390;SLSLSM;
Mat Read #2,R1,394;DWH;
Mat Read #2,R1,396;SLPHN$;
Mat Read #2,R1,426;SLFLG$;
Mat Read #2,R1,432;SLBPO$;
Mat Read #2,R1,452;SLBDG;
Mat Read #2,R1,464;SLBDD;
Mat REad #2,r1,654;ddiv;
if ddiv<>0
	if dvn<>0
		if dvn<>ddiv goto L_2000:
	endif
endif
C2 = Int(C1)
C3 = Fra(C1) * 10 ^ 6
Gosub L_3000 \ if E Goto L_2000
If C2 <> C5 Gosub L_5300
Gosub GET_SLSM
Gosub L_5000
Gosub L_5800
Goto L_2000
!
L_3000: Rem GET CUSTOMER
E=0
K3$ = " ",K3$;K3$ = C2 Using "######"
Search #3,2,1;K3$,R3,E 
If E = 1 Return 
Mat Read #3,R3,544;CFIN;
if dvn<>0 ! division 
	if ddiv=0 ! shiplist division =0
		if dvn<>cfin[4] let e=1
	endif
endif
!
If Not(DSLT) If C3 = 1 let E=1 
Return 
!
GET_SLSM: Rem "get slsm name
SLSKEY$ = " ",SLSKEY$;SLSKEY$ = SLSLSM Using "###"
Search #5,2,1;SLSKEY$,R[5],E 
If E Or SLSLSM = 0
  SLNAME$ = " ",SLNAME$;SLSLSM = 0
  SLNAME$ = "NOT ASSIGNED"
Else 
  Mat Read #5,R[5],0;SLNAME$;
End If 
Return 
!
CSMZONE: Rem "Multi Zone Print
If P61$[34,34] <> "Y" Return 
CSZ$ = " ",CSZ$;CSZCUST[2] = 0
For X = 0 To 6 \ CSZ1[X] = 0 \ Next X
J4$ = " ",J4$;J4$ = K1$
J4$[14] = ""
Search #4,2,1;J4$,X,E 
If E = 1
  ! Print #0;"NO MULTIPLE ZONE ON FILE"
  if J8=0 
    Print #0;"NO MULTIPLE ZONE ON FILE"
  else ! dx xml
    for cnt=1 to 8 \ tmp$=tmp$,"",fdel$ \ next cnt
  endif
Else 
  Mat Read #4,X,0;CSZCUST;
  Mat Read #4,X,12;CSZ1;
  Mat Read #4,X,26;CSZ$;
  if J8 ! dx xml
    tmp$=tmp$,CSZCUST[2],fdel$
    tmp$=tmp$,CSZ$[1,2],CSZ1[0],fdel$
	tmp$=tmp$,CSZ$[3,4],CSZ1[1],fdel$
	tmp$=tmp$,CSZ$[5,6],CSZ1[2],fdel$
	tmp$=tmp$,CSZ$[7,8],CSZ1[3],fdel$
	tmp$=tmp$,CSZ$[9,10],CSZ1[4],fdel$
	tmp$=tmp$,CSZ$[11,12],CSZ1[5],fdel$
	tmp$=tmp$,CSZ$[13,14],CSZ1[6],fdel$
  else
    Print #0; Tab 15;"ZONE INFORMATION";
    Print #0; Tab 35;"LEAD TIME";CSZCUST[2];
    Print #0; Tab 51;"SUN Z/S ";CSZ$[1,2];CSZ1[0];
    Print #0; Tab 68;"MON Z/S ";CSZ$[3,4];CSZ1[1];
    Print #0; Tab 75;"TUE Z/S ";CSZ$[5,6];CSZ1[2]
    Print #0; Tab 17;"WED Z/S ";CSZ$[7,8];CSZ1[3];
    Print #0; Tab 34;"THU Z/S ";CSZ$[9,10];CSZ1[4];
    Print #0; Tab 51;"FRI Z/S ";CSZ$[11,12];CSZ1[5];
    Print #0; Tab 68;"SAT Z/S ";CSZ$[13,14];CSZ1[6]
  endif
End If 
if J8=0 Print #0;""
L = L + 3
Gosub L_5800
Return 
!
! - For I = 1 To Len(U9$) - 12
! -   If U9$[I,I + 11] = U3$[1,12] Goto L_4166
! - Next I
! - L_4166: U9$[I,I + 11] = "** TOTALS **"
! - Gosub L_5800
! - Print #0;" "
! - Print #0;U9$
! - U9$ = " ",U9$
! - Print #0;" "
! - Return 
!
L_5000: Rem PRINT LINE
if J8 ! dx xml
  tmp$=C2 Using "######",fdel$,rtrim$(U5$[1,30]),fdel$,CFIN[4] Using "###",fdel$
  tmp$=tmp$,C3 Using "######",fdel$,rtrim$(A$[1,30]),fdel$
  tmp$=tmp$,rtrim$(A$[31,60]),fdel$,rtrim$(A$[61,90]),fdel$
  tmp$=tmp$,rtrim$(A$[91,105]),fdel$,A$[106,107],fdel$,rtrim$(A$[108,117]),fdel$
  tmp$=tmp$,rtrim$(R$[13,25]),fdel$,rtrim$(A$[118,142]),fdel$
  tmp$=tmp$,rtrim$(SLPHN$),fdel$,rtrim$(R$[1,12]),fdel$
  If P61$[34,34] <> "Y" let tmp$=tmp$,R$[26,31],fdel$,R$[32,33],fdel$
  tmp$=tmp$,str$(SL2[0]),fdel$,str$(SL2[3]),fdel$
  tmp$=tmp$,str$(SL2[1]),fdel$
  if SLSLSM let tmp1$=SLSLSM Using "###" else tmp1$="" 
  tmp$=tmp$,tmp1$,fdel$,rtrim$(SLNAME$),fdel$
  tmp$=tmp$,R$[34,34],fdel$,DWH using "##",fdel$
  tmp$=tmp$,DDIV using "##",fdel$
  tmp$=tmp$,SLUD Using "######.####",fdel$,rtrim$(SLUD$[1,20]),fdel$
  tmp$=tmp$,rtrim$(SLUD$[21,40]),fdel$,rtrim$(SLUD$[41,60]),fdel$
  tmp$=tmp$,rtrim$(SI$[1,30]),fdel$,rtrim$(SI$[31,60]),fdel$
  tmp$=tmp$,rtrim$(SI$[61,90]),fdel$,rtrim$(SI$[91,120]),fdel$
  tmp$=tmp$,rtrim$(SLBPO$),fdel$
  tmp1$=SLFLG$[1,1] 
  if SLFLG$[1,1] = "B" let tmp1$=tmp1$,"UDGET"
  If SLFLG$[1,1] = "D" 
    tmp1$=tmp1$,"ATE  TYPE :",SLFLG$[2,2]
    X2 = SLBDD[0] \ Gosub L_7700
    tmp1$=tmp1$,"  STARTS ",X$[1,8]," ENDS ON "
    X2 = SLBDD[1] \ Gosub L_7700
    tmp1$=tmp1$,X$[1,8]
  End If 
  tmp$=tmp$,tmp1$,fdel$
  tmp$=tmp$,SLBDG[0] Using "$$$,$$$,$$#.##",fdel$
  If SLBDG[0] let tmp1$=SLBDG[1] Using "$$$,$$$,$$#.##" else tmp1$=""
  tmp$=tmp$,tmp1$,fdel$
  !
  If CSINFO Gosub CSMZONE
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
If L + 9 > L9 Let L = 80 \ Gosub L_5800
Print #0; Using "     ######";C3;
Print #0; Tab 12;A$[1,30];
Print #0; Tab 43;A$[31,60];
Print #0; Tab 74;A$[61,90];
Print #0; Tab 105;A$[91,105];
Print #0; Tab 121;A$[106,107];
Print #0;" "
Print #0; Tab 15;"ROUTING: ";R$[1,12];
If P61$[34,34] <> "Y"
  Print #0; Tab 37;"STOP #: ";R$[26,31];
  Print #0; Tab 58;"ZONE: ";R$[32,33];
End If 
Print #0; Tab 75;A$[118,142];
Print #0; Tab 105;R$[13,25];
Print #0; Tab 121;A$[108,117]
Print #0; Tab 15;"TAX ZONE: ";SL2[0]; Tab 35;D2$;" ";SL2[1]; Tab 58;"TAX TYPE: ";" ";SL2[3];
Print #0; Tab 75;"SALESPERSON: ";
If SLSLSM Print #0; Using "###";SLSLSM;" ";SLNAME$;
If Not(SLSLSM) Print #0;SLNAME$;
Print #0;""
Print #0; Tab 12;"PHONE: ";SLPHN$;
Print #0; Tab 74;"SHIP WITH INVOICE: ";R$[34,34];
Print #0; Tab 100;"DEFAULT WHSE: ";DWH
Print #0; Tab 15;UDAFIELDNAMES$[1,14];": ";SLUD Using "######.####";"         ";
Print #0;"   ";UDAFIELDNAMES$[15,28];": ";SLUD$[1,20];
Print #0; Tab 100;"DEFAULT DIV : ";DDIV
Print #0; Tab 15;UDAFIELDNAMES$[29,42];": ";SLUD$[21,40];
Print #0;"   ";UDAFIELDNAMES$[43,56];": ";SLUD$[41,60]
Print #0; Tab 7;SI$[1,30];" ";SI$[31,60];" ";SI$[61,90];" ";SI$[91,120]
Print #0; Tab 12;"BLANKET PO: ";SLBPO$;
Print #0; Using "$$$,$$$,$$#.##"; Tab 55;"BUDGETED DOLLARS: ";SLBDG[0];
If SLBDG[0] Print #0; Using "$$$,$$$,$$#.##"; Tab 95;"BUDGET USED: ";SLBDG[1];
Print #0;""
Print #0; Tab 15;"EXPIRES ON: ";SLFLG$[1,1];
If SLFLG$[1,1] = "B" Print #0;"UDGET";
If SLFLG$[1,1] = "D" Print #0;"ATE";
Print #0; Tab 40;
If SLFLG$[1,1] = "D" ! "date stuff
  Print #0;"DATE TYPE: ";SLFLG$[2,2];
  X2 = SLBDD[0] \ Gosub L_7700
  Print #0;"  STARTS ";X$[1,8];" ENDS ON ";
  X2 = SLBDD[1] \ Gosub L_7700
  Print #0;X$[1,8];
End If 
Print #0;""
L = L + 9
If CSINFO Gosub CSMZONE
Return 
!
L_5300: Rem NEW MASTER CUST.
If Not(P) Gosub L_5800
U5$ = C2 Using "######"
Search #3,2,1;U5$,V1,V2
If V2 Goto L_5340
Read #3,V1,30;U5$[1,30];
Mat Read #3,V1,544;CFIN;
L_5340: !
If V2 Let U5$ = "NOT ON FILE!";CFIN[4] = 0
if J8=0
  Print #0; Using "######";"\15\";C2; Tab 7;U5$[1,30];
  Print #0; Using "###"; Tab 40;"DIVISION:";CFIN[4]
  Print #0; Tab 7;"------------------------------"
  L = L + 3
endif
C5 = C2
Gosub L_5800
Return 
!
L_5800: Rem HEADING ROUTINE
if J8 return ! dx xml
!
If L < L9 Return 
U9$ = " ",U9$
If P = 0 Goto L_5816
! - If L9 > 30 Goto L_5815
! - Input "\15\PRESS <CR> TO CONTINUE "J$
! - Print 'CS'
L_5815: Print #0;"\14\";
L_5816: Print #0; Tab 1;"- 106 -"; Tab (Int(66 - (Len(N$) / 2)));N$
P = P + 1
T9$ = "" \ Call Time(T9$)
Print #0; Tab 1;"DATE ";T9$;
Print #0; Tab 60;"SHIP LIST PRINTOUT";
Print #0; Using "PAGE ###"; Tab 119;P
U9$ = " ",U9$
Print #0;"\15\";
Print #0;"    CODE   ";
Print #0; Tab 25;"NAME";
Print #0; Tab 54;"ADDRESS";
Print #0; Tab 83;"ADDRESS 2";
Print #0; Tab 110;"CITY";
Print #0; Tab 121;"ST";
Print #0; Tab 125;"ZIP";
L = 5
U9$ = " ",U9$
Print #0;U9$
Return 
!
! - GETUDAFIELDNAMES: Rem
! - Mat Read #1,68,0;UDAFIELDNAMES$;
! - Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
! - If L9 > 30 Goto L_9010
! - Input "\15\PRESS <CR> TO EXIT "J$
! - L_9010: Print 'CS'
! - Close 
! - Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
