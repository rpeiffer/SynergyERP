! >>> Program 118
!
! description Last Price Report
!
! loadsave -w -n 100,10 -o prog/dxport/118.dl4 src/118.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 30, 2004  10:47:14
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx1/mx118.src (univ2) [jcs] {41584}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX118 - LAST PRICE LISTING
Rem AUTHOR: HARRY HENDERSON   NOV 22, 1988
Rem LAST UPDATE:  REK 7/7/92 CLEANUP AND EXPAND PRICE TYPE DESCRIPTION
!
Declare Intrinsic Sub FindF,InpBuf,String
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3],COMM_LEV
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10]
COST_LEV[1] = 1
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 2%,N1[13],1%,N2[5],V9[4],J8
Dim N1$[512],TIME$[22],DATE$[8],CNAME$[30],ITEM_LAB$[10]
Dim CNAME$[30],J3$[40],ARDATE$[8],D$[24],P9$[50],S$[30]
Dim P$[12],C1$[30],P1$[156],P2$[92],LPMT$[2],P60$[50],P61$[256]
Dim PUNIT$[4],SUNIT$[4],CUNIT$[4],UNIT$[4],PMASK$[12],PRODKEY$[20]
Dim K1$[50],K2$[20],K3$[20],PDESC$[32],K9$[60],Z2$[5],KSL$[60]
Dim K5$[12],K6$[12],K7$[4],K8$[4],Q$[4],K4$[40],A2$[30],A3$[22]
Dim Z1$[50],F1$[16],F2$[26],A$[26],K$[130],RETVAL$[512]
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 1%,F,C3[4],AI,LPEUN[2],LPWH,COID,SCRN,SLSMSORT,CUSTBREAK
Dim 1%,FLD,CHAN,PRNTHEAD,DOSHIP,CUSTBREAK,URECFLAG,PSLLP,SC,SR,FLAG
Dim 2%,C1[2],X2,DF,Q0[1],LPR1[3],LPDEPT,CC1[12],LPSL
Dim 2%,J48,J49,SCUST,ECUST,BSLSM,ESLSM,BSHIPL,ESHIPL,E
Dim 3%,C2[2],J,X3[9],T9[20],C4[3],LPR[4],LPUNF[6],PERM[1]
Dim 1%,J0,J2,J3,J4,J5,J6,J9[2],X1,X,I,X$[40]
Dim 3%,R1,R8,V1,R[99],AMOUNT,NUMREC,R4,R9
Dim 4%,J1
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50]	  \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="Z",EndParam$
Dim tmp$[1000],tmp1$[1000],tmp2$[1000],tmp3$[1500]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
!
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For J = 2 To 10
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1376","1792","1808","1632","0","1728","1824","-1","-1"
X3 = -99
Mat Read #1,0,100;ARDATE$;
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;  
Read #1,3;CNAME$; !!CNAME$="UNIVERSAL DISTRIBUTION CO     "
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2 !!Q0=02
PMASK$ = "###########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1] !!X=9
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!
!If Err 0 Let J48 = Spc(8)
!J48 = 0 \ J49 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If Err 0 Gosub ERR_TRAP
!If J48 If J48 <> 49 Gosub ERR_TRAP
!J49 = 63;SCRN = 0 \ If J48 Let J49 = 20;SCRN = 1
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
J49 = J9
! Call dxsave(0,"tmp/118in.txt!")
!
If P61$[64,64] = "Y" ! "add shiplist last price file option
  J$ = "3/SLLSTPRC" + Str$(intCO)
  Try ROpen #10,J$ else P61$[64,64]="N"
End If 
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"118",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
N1$=" ",N1$ ! CAN'T START AS NULL!!

CALL DXGET("SCUST",tmp$)\  SCUST = tmp$
CALL DXGET("ECUST",tmp$)\  IF tmp$ = "" LET ECUST = 999999 ELSE Let ECUST=tmp$
CALL DXGET("SPROD",tmp$)\  N1$[13,24] = UCase$(tmp$)+Blank$
CALL DXGET("EPROD",tmp$)\  N1$[25,36] = UCase$(tmp$)+EndParam$
CALL DXGET("SCMTY",tmp$)\  N1$[37,40] = UCase$(tmp$)+Blank$
CALL DXGET("ECMTY",tmp$)\  N1$[41,44] = UCase$(tmp$)+EndParam$
CALL DXGET("BSLSM",tmp$)\  BSLSM = tmp$
CALL DXGET("ESLSM",tmp$)\   IF tmp$ = "" LET ESLSM = 999 ELSE LET ESLSM = tmp$
CALL DXGET("PSLLP",tmp$)\    IF tmp$ = "" LET PSLLP = 0 ELSE LET PSLLP = 1!!!CHECKED
CALL DXGET("BSHIPL",tmp$)\   BSHIPL = tmp$    
CALL DXGET("ESHIPL",tmp$)\   IF tmp$ = "" LET ESHIPL = 999999 Else let ESHIPL=tmp$
CALL DXGET("SLSMSORT",tmp$)\  IF tmp$ = "" LET SLSMSORT = 0 ELSE SLSMSORT = 1  !!CHECKED
!
if SCUST < 0 or SCUST > 999999 let e$="Invalid starting customer code, must be between 0 and 999999!" \ error 10000
if ECUST < SCUST or ECUST > 999999 Let e$ = "Invalid ending customer code, must be between starting customer code and 999999!" \ error 10000
N1$[1,6] = SCUST Using "######"
N1$[7,12] = ECUST Using "######"
!
If N1$[25,36] < N1$[13,24] let e$="Invalid ending product code, must be >= than starting product code!" \  error 10000
!
If N1$[41,44] < N1$[37,40] let e$="Invalid ending commodity code, must be >= than starting commodity code! " \ error 10000
!
if BSLSM < 0 or BSLSM > 999 let e$="Invalid starting salesperson id, must be between 0 and 999!" \ error 10000
if ESLSM < BSLSM or ESLSM > 999 Let e$ = "Invalid ending salesperson id, must be between starting salesperson id and 999!" \ error 10000
N1$[45,47] = BSLSM Using "###"
N1$[48,50] = ESLSM Using "###"
!
if PSLLP=0 let BSHIPL=0 \ ESHIPL=0 ! shiplist not selected
if BSHIPL < 0 or BSHIPL > 999999 let e$="Invalid starting shiplists, must be between 0 and 999999!" \ error 10000
if ESHIPL < BSHIPL or ESHIPL > 999999 Let e$ = "Invalid ending shiplists, must be between starting shiplists and 999999!" \ error 10000
!
N1$[51,51] = Str$(SLSMSORT)
!
!!!Call "progdflt","118","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@"
!!  SLSMSORT = 0
!!  CUSTBREAK = 0
!!  SCUST = 0;ECUST = 999999;BSLSM = 0;ESLSM = 999
!!  PSLLP = 0;BSHIPL = 0;ESHIPL = 999999
!!  N1$[1,6] = SCUST Using "######";N1$[7,12] = ECUST Using "######"
!!  N1$[13,24] = " ",N1$[13,24];N1$[25,36] = "z",N1$[25,36]
!!  N1$[37,40] = " ",N1$[37,40];N1$[41,44] = "z",N1$[41,44]
!!  N1$[45,47] = BSLSM Using "###";N1$[48,50] = ESLSM Using "###"
!!  N1$[51,51] = Str$(SLSMSORT)
!!  N1$[52,52] = Str$(CUSTBREAK)
!!  N1$[53,53] = Str$(PSLLP)
!!  N1$[54,59] = BSHIPL Using "######"
!!  N1$[60,65] = ESHIPL Using "######"
!!Else 
!!  N1$ = RETVAL$
!!  SCUST = N1$[1,6];ECUST = N1$[7,12]
!!  BSLSM = N1$[45,47];ESLSM = N1$[48,50]
!!  SLSMSORT = N1$[51,51]
!!  CUSTBREAK = N1$[52,52]
!!  PSLLP = N1$[53,53]
!!  BSHIPL = N1$[54,59];ESHIPL = N1$[60,65]
!!End If 
!If P61$[64,64] <> "Y" Let PSLLP = 0  !!P61$[64,64] = "Y"
!!L_1000: Rem "=================================== get ranges
!!Gosub L_6000 !!print select console 
!Goto L_1450
!L_1008: Rem "Customer Range
!J5$ = " Starting Customer #";J0$ = "3000061903";J1 = SCUST
!Gosub ISINPUT \ SCUST = J1
!N1$[1,6] = SCUST Using "######"
!J5$ = " Ending Customer #";J0$ = "3000063303";J1 = ECUST
!Gosub ISINPUT \ ECUST = J1
!N1$[7,12] = ECUST Using "######"
!If N1$[7,12] < N1$[1,6] Gosub L_1390 \ Goto L_1008
!Return 
!L_1038: Rem "Product Range
!J5$ = " Starting Product Code";J0$ = "2 00121604";J1$ = N1$[13,24]
!Gosub ISINPUT \ N1$[13,24] = J$
!J5$ = " Ending Product Code";J0$ = "2 00123304";J1$ = N1$[25,36]
!Gosub ISINPUT \ N1$[25,36] = J$
!If N1$[25,36] < N1$[13,24] Gosub L_1390 \ Goto L_1038
!Return 
!L_1068: Rem "Commodity Range
!J5$ = " Starting Commodity Code";J0$ = "2 00042105";J1$ = N1$[37,40]
!Gosub ISINPUT \ N1$[37,40] = J$
!J5$ = "Ending Commodity Code";J0$ = "2 00043505";J1$ = N1$[41,44]
!Gosub ISINPUT \ N1$[41,44] = J$
!If N1$[41,44] < N1$[37,40] Gosub L_1390 \ Goto L_1068
!Return 
!SLSMRNG: Rem "Enter the salesman range
!J5$ = "Starting Salesperson ID #";J0$ = "30000321 6";J1 = BSLSM
!Gosub ISINPUT \ BSLSM = J1
!J5$ = "Ending Salesperson ID #";J0$ = "30000335 6";J1 = ESLSM
!Gosub ISINPUT
!If J1 < BSLSM Gosub L_1390 \ Goto SLSMRNG
!ESLSM = J1
!N1$[45,47] = BSLSM Using "###"
!N1$[48,50] = ESLSM Using "###"
!Return 
!SHIPLPRNT: Rem "print Shiplist info
!!!If P61$[64,64] <> "Y" Let PSLLP = 0 \ Return 
!J5$ = "Print Ship List Last Price Detail? (Y/N)";J1 = PSLLP
!J0$ = "60000130 7"
!Gosub ISINPUT
!PSLLP = J1
!If Not(PSLLP) Print @19,8;'CL';
!RETVAL$[53,53] = Str$(PSLLP)
!If PSLLP Print Using "######";@19,8;BSHIPL;@33,8;ESHIPL
!Return 
!SHIPLRNGE: Rem "shiplist number range
!!!If P61$[64,64] <> "Y" Let BSHIPL = 0;ESHIPL = 999999 \ Return 
!!If Not(PSLLP) Return 
!J5$ = "Starting ShipList # to Print";J1 = BSHIPL
!J0$ = "30000619 8"
!Gosub ISINPUT
!BSHIPL = J1
!J5$ = "Ending ShipList # to Print"
!J1 = ESHIPL;J0$ = "3000063308";J1 = ESHIPL
!Gosub ISINPUT
!If J1 < BSHIPL Gosub L_1390 \ Goto SHIPLRNGE
!ESHIPL = J1
!RETVAL$[54,59] = BSHIPL Using "######"
!RETVAL$[60,65] = ESHIPL Using "######"
!Return 
!SLSMSORT: Rem "Sort by Salesman
!J5$ = "Enter a Y or N";J0$ = "6000 13009";J1 = SLSMSORT
!Gosub ISINPUT \ SLSMSORT = J1
!N1$[51,51] = Str$(SLSMSORT)
!Return 
!ASK_BREAK: Rem "cct175145
!J5$ = "Enter a Y or N";J0$ = "6000 13011";J1 = CUSTBREAK
!Gosub ISINPUT \ CUSTBREAK = J1
!N1$[52,52] = Str$(SLSMSORT)
!Return 
!L_1390: J7$ = "END VALUE CANNOT BE SMALLER THAN START VALUE! "
!Gosub ISERRMSG \ Return 
!!L_1450: Rem "================== all picked
!!Print @0,22;'CE';
!Print "ENTER  #: field  P: print  R: reselect all  S: save defaults  E: exit  ";
!Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
!!Print @0,22;'CE';
!!If Z1$ = "E" Goto OUTEND
!If Z1$ = "R" Goto EDT_ALL
!If Z1$ = "P" Goto STRTRPT
!If Z1$ = "S"
!ASK_SAVE: !!Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
!  !!Input ""Z2$ \ Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto L_1450
!  If Z2$ <> "A" And Z2$ <> "U"   Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  !!RETVAL$ = N1$
!  !!Call "Progdfltw","118","",77,RETVAL$,URECFLAG
!  Goto L_1450
!End If 
!!FLD = Z1$ \ If FLD < 1 Or FLD > 9 Or Fra(FLD) Goto L_1450
!!Gosub EDT_FLDS
!!Goto L_1450
!EDT_ALL: Rem "change 'em all
!For FLD = 1 To 8
!  Gosub EDT_FLDS
!Next FLD
!Goto L_1450
!EDT_FLDS: Rem "
!If P61$[64,64] <> "Y"
!  On FLD Gosub L_1008,L_1038,L_1068,SLSMRNG,SLSMSORT,ASK_BREAK
!Else 
!  On FLD Gosub L_1008,L_1038,L_1068,SLSMRNG,SHIPLPRNT,SHIPLRNGE,SLSMSORT,ASK_BREAK!!!!!!!!!!!!!!!!!!!!!!!!!!!
!End If 
!!Return 
!!STRTRPT: Rem "================== print
!
! HEAD XML
IF  J8
  If SLSMSORT !
 	tmp$ = "SALESPERSON",fdel$!!SALESPERSON:
	tmp$ = tmp$,"SALESPERSON CODE",fdel$
	tmp$= tmp$,"CUSTOMER CODE",fdel$
  ELSE
	tmp$="CUSTOMER CODE",fdel$
  END IF
  tmp$=tmp$,"CUSTOMER NAME",fdel$
  tmp$ = tmp$,"DEPARTMENT",fdel$
  tmp$=tmp$,"ITEM",fdel$
  tmp$=tmp$,"LAST TYPE",fdel$
  tmp$=tmp$,"DESCRIPTION 1",fdel$
  tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"COMM CODE",fdel$
  tmp$=tmp$,"ORDER",fdel$
  tmp$=tmp$,"DATE",fdel$
  tmp$=tmp$,"CONTRACT",fdel$
  tmp$=tmp$,"WHSE",fdel$
  tmp$=tmp$,"QUANTITY",fdel$
  tmp$=tmp$,"LAST PRICE",fdel$
  tmp$=tmp$,"PERM PRICE",fdel$
  tmp$=tmp$,"LAST COST",fdel$
  tmp$=tmp$,"LAST COST TYPE",fdel$
  tmp$=tmp$,"G/P %",fdel$
  tmp$=tmp$,"FREQ",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF
!
K1$ = N1$[1,6]
K3$[1,6] = N1$[7,12]
K5$ = RTrim$(N1$[13,24]) \ K6$[1,12] = N1$[25,36]
K7$[1,4] = N1$[37,40] \ K8$[1,4] = N1$[41,44]
if len(k5$)=0 let k5$=blank$
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If
!
!!Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
!!If SCRN Print 'CS';
IF NOT (J8) If J2 If Not(SCRN) Print #0;"\14\";
J1 = 90 \ J2 = 0
!!If Err 0 Gosub ERR_ESCAPE
CHAN = 2 \ If SLSMSORT Let CHAN = 9
If CHAN = 9 ! "get rid of rangs
  Gosub SORTFLE
  K1$ = " ",K1$;K9$ = " ",K9$
End If 
Search #CHAN,2,1;K1$,R1,E 
If Not(E) Goto L_2010
L_2000: 
Search #CHAN,3,1;K1$,R1,E 
If E = 2 Goto L_9100
L_2010: 
If Not(SLSMSORT) And K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;P$;
If Not(SLSMSORT) And (P$[1,len(k5$)] < K5$ Or P$[1,Len(K6$)] > K6$) Goto L_2000
Mat Read #2,R1,56;P2$; \ Q$ = P2$[81,84]
If Not(SLSMSORT) And (Q$[1,Len(K7$)] < K7$ Or Q$[1,Len(K8$)] > K8$) Goto L_2000
Gosub GET_CUST
If Not(SLSMSORT) And (CC1[2] < BSLSM Or CC1[2] > ESLSM) Goto L_2000
If Not(SLSMSORT) ! "
  If K1$[1,6] <> J4$[1,6] Gosub L_3100
Else ! "slsm
  If K1$[1,3] <> K9$[1,3] Let J1 = 90
  If K9$[4,9] <> K1$[4,9] Gosub L_3100
  K9$ = K1$
End If 
Mat Read #2,R1,12;DF; \ Mat Read #2,R1,16;C1;
Mat Read #2,R1,28;C2; \ Mat Read #2,R1,46;C3;
Mat Read #2,R1,140;C4; \ Mat Read #2,R1,164;LPMT$;
Mat Read #2,R1,274;LPWH; \ Mat Read #2,R1,168;LPR;
Mat Read #2,R1,198;LPR1; \ Mat Read #2,R1,214;LPEUN;
Mat Read #2,R1,220;LPUNF; \ Mat Read #2,R1,262;PERM;
Read #2,R1,320;LPDEPT;
X2 = C1[2] \ Gosub ISDUNPACK
J3$ = C3 Using "------------#"
If C3 >= -17 And C3 <= -8 Let J3$ = "MAN. BRACKET "
If C3 >= -6 And C3 <= -1 Let J3$ = C3 Using "MAN L PRCE #"
If C3 = -7 Let J3$ = "MANUAL PRICE "
If C3 = 1 Let J3$ = "MATRIX PRICE "
If C3 = 2 Or C3 = 6 Or C3 = 12 Let J3$ = "CONTRACT PRCE"
If C3 = 3 Or C3 = 8 Or C3 = 11 Let J3$ = "PROMOTION    "
If C3 = 4 Or C3 = 7 Let J3$ = "COMDY PRICE  "
If C3 = 5 Let J3$ = "10 BRACKET   "
If C3 = 9 Let J3$ = "QUAN. BREAK  "
If C3 = 10 Let J3$ = "MAN. DISCOUNT"
If C3[0] = 13 Let J3$ = "FIX PR CTRCT "
If C3[0] = 14 Let J3$ = "MAN. GTM %   "
Mat Read #5,LPDEPT,0;D$;
If Not(C4[3]) Gosub L_3500
Gosub L_30000
Gosub L_8600
Gosub L_5800 !! print headings
If PRNTHEAD 
  IF NOT(J8)
    Print #0; Tab 0;"CUSTOMER: ";J4$[1,6];
    Print #0; Tab 20;C1$
    Print #0;""
  END IF
    J1 = J1 + 2
End If 
Gosub L_5000
X3 = K1$[7,10]
If SLSMSORT Let X3 = K1$[10,13]
If P61$[64,64] = "Y" And PSLLP ! "wants shiplists also!
  Gosub DOSHIPLIST
End If 
Goto L_2000
GET_SLSM: Rem "
J$ = CC1[2] Using "###"
Search #8,2,1;J$,R8,E 
If Not(E)
  Mat Read #8,R8,0;S$;
Else 
  S$ = " ",S$
  S$ = "SALESPERSON NOT FOUND!"
End If 
Return 
GET_CUST: Rem GET CUSTOMER ===============================================
K4$ = K1$[1,6]
If SLSMSORT Let K4$ = K1$[4,9]
Search #4,2,1;K4$,V1,E !!\ If E > 1 Gosub ERR_SEARCH
If E Goto L_3030
Mat Read #4,V1,30;C1$;
Mat Read #4,V1,142;CC1;
Mat Read #4,V1,348;A2$;
Mat Read #4,V1,388;A3$;
Goto L_3050
L_3030: Rem NG
C1$ = " ",C1$
C1$ = "ERROR! CUSTOMER NOT FOUND!!   "
CC1[2] = 0
L_3050: Rem PRINT
Return 
DOSHIPLIST: Rem "want shiplist - do the range
If Not(SLSMSORT)
  PRODKEY$ = K1$[11,30]
Else 
  PRODKEY$ = K1$[14,33]
End If 
KSL$ = " ",KSL$;KSL$ = K4$[1,6]
KSL$[7] = BSHIPL Using "&&&&&&"
DOSHIP = 1
LPSHIPL_LOOP: Rem "thru for customer/dept/prod
!
Search #10,3,1;KSL$,R[10],E 
If E = 2 Goto SHIPL_DONE
If KSL$[1,6] <> K4$[1,6] Goto SHIPL_DONE
If KSL$[17,36] <> PRODKEY$[1,20] Goto LPSHIPL_LOOP
X3[1] = KSL$[13,16] \ If X3[1] <> X3 Goto LPSHIPL_LOOP
X3[1] = KSL$[7,12] \ If X3[1] < BSHIPL Or X3[1] > ESHIPL Goto LPSHIPL_LOOP
Mat Read #10,R[10],0;P$;
Mat Read #10,R[10],56;P2$; \ Q$ = P2$[81,84]
Mat Read #10,R[10],12;LPSL;
Mat Read #10,R[10],16;C1;
Mat Read #10,R[10],28;C2; \ Mat Read #10,R[10],46;C3;
Mat Read #10,R[10],140;C4; \ Mat Read #10,R[10],164;LPMT$;
Mat Read #10,R[10],274;LPWH; \ Mat Read #10,R[10],168;LPR;
Mat Read #10,R[10],198;LPR1; \ Mat Read #10,R[10],214;LPEUN;
Mat Read #10,R[10],220;LPUNF;
Mat Read #10,R[10],320;LPDEPT;
DF = 0;LPEUN[2] = 0
X2 = C1[2] \ Gosub ISDUNPACK
J3$ = C3 Using "------------#"
If C3 >= -17 And C3 <= -8 Let J3$ = "MAN. BRACKET "
If C3 >= -6 And C3 <= -1 Let J3$ = C3 Using "MAN L PRCE #"
If C3 = -7 Let J3$ = "MANUAL PRICE "
If C3 = 1 Let J3$ = "MATRIX PRICE "
If C3 = 2 Or C3 = 6 Or C3 = 12 Let J3$ = "CONTRACT PRCE"
If C3 = 3 Or C3 = 8 Or C3 = 11 Let J3$ = "PROMOTION    "
If C3 = 4 Or C3 = 7 Let J3$ = "COMDY PRICE  "
If C3 = 5 Let J3$ = "10 BRACKET   "
If C3 = 9 Let J3$ = "QUAN. BREAK  "
If C3 = 10 Let J3$ = "MAN. DISCOUNT"
If C3[0] = 13 Let J3$ = "FIX PR CTRCT "
If C3[0] = 14 Let J3$ = "MAN. GTM %   "
If Not(C4[3]) Gosub L_3500
Gosub L_30000
Gosub L_8600
Gosub L_5800
If PRNTHEAD
if not(j8)
  Print #0; Tab 0;"CUSTOMER: ";J4$[1,6];
  Print #0; Tab 20;C1$
  Print #0;""
endif
  J1 = J1 + 2
End If 
Gosub L_5000
Goto LPSHIPL_LOOP
SHIPL_DONE: Rem
DOSHIP = 0
Return 
L_3100: Rem "print Cust
X3 = -99
J4$ = K4$
If SLSMSORT Gosub GET_SLSM
If CUSTBREAK Let J1 = 90
Gosub L_5800
If SLSMSORT ! "give them slsm Number/Name
  if not(j8)
    Print #0;"\15\";"SALESPERSON: ";CC1[2];
    Print #0; Tab 20;S$[1,30];
  end if
	  J1 = J1 + 1
end if 
if not(j8)
Print #0;"\15\";"CUSTOMER: ";J4$[1,6];
Print #0; Tab 20;C1$
end if
J1 = J1 + 2
Gosub L_5800
If PRNTHEAD
if not(j8)
  Print #0; Tab 0;"CUSTOMER: ";J4$[1,6];
  Print #0; Tab 20;C1$
  Print #0;""
end if
  J1 = J1 + 2
End If 
Return 
L_3500: Rem "========================================= get product
J2$ = P$[1,12]
Search #3,2,1;J2$,V1,E !!\ If E > 1 Gosub ERR_SEARCH
If E Let P1$ = " ",P1$;P1$[9,38] = "ERROR! PRODUCT NOT FOUND!!" \ Goto L_3527
Mat Read #3,V1,0;P1$;
Mat Read #3,V1,256;A;
Mat Read #3,V1,512;PFU1;
Mat Read #3,V1,554;PFU2;
L_3527: Return 
L_5000: Rem "========================================= print line
If X3 <> LPDEPT ! "dept change
   IF NOT(J8)!!PDF
       Print #0; Using "####";"\15\";"DEPARTMENT ";LPDEPT;
       Print #0; Tab 20;D$;"\15\"
   END IF
  J1 = J1 + 2 \ Gosub L_5800
  If PRNTHEAD
    IF NOT(J8) !!PDF
       Print #0; Tab 0;"CUSTOMER: ";J4$[1,6];
       Print #0; Tab 20;C1$
       Print #0;""
	END IF
    J1 = J1 + 2
  End If 
End If 
!
IF J8 !!!XML		
  If SLSMSORT !
	tmp1$ = CC1[2] Using "###",fdel$!!SALESPERSON:
	tmp1$ = tmp1$,rtrim$(S$[1,30]),fdel$
	tmp1$ = tmp1$,J4$[1,6],fdel$ !!CUSTOMER
  else 
	tmp1$ = J4$[1,6],fdel$ !!CUSTOMER
  end if
  tmp1$ = tmp1$,rtrim$(C1$),fdel$ !!CUSTOMER NAME
  tmp1$ = tmp1$,LPDEPT Using "####",fdel$
  tmp1$ = tmp1$,rtrim$(P$[1,12]),fdel$!!ITEM
  If Not(C4[3]) Let tmp$ = rtrim$(P1$[9,28]),fdel$ Else Let tmp$=rtrim$(P2$[21,40]),fdel$!!DESCRIPTION_1
  If Not(C4[3]) Let tmp$ = tmp$,rtrim$(P1$[63,82]),fdel$ Else Let tmp$=tmp$,rtrim$(P2$[51,70]),fdel$!!!DESCRIPTION2
  If Not(C4[3]) Let tmp$=tmp$,P1$[152,155],fdel$ Else Let tmp$=tmp$,P2$[81,84],fdel$ !!COMM CODE
  If C1[1] Let tmp$=tmp$,C1[1] Using "######",fdel$ Else Let tmp$=tmp$,"N/A",fdel$ !!ORDER
  If C1[1] Let tmp$=tmp$,X$[1,8] ,fdel$ ,LPR[1] Using "#####" ,fdel$ else Let tmp$=tmp$," ",fdel$," ",fdel$ !!DATE  CONTRACT!!!!!!!!!!!!!!!!!!!!!!!
  tmp$=tmp$,LPWH Using "##",fdel$!!!WHSE
  tmp$=tmp$,UWORK[0] Using "#######"," ",rtrim$(SUNIT$) ,fdel$!!!QUANTYTI
  tmp$=tmp$,UWORK[1] Using PMASK$,"/",rtrim$(PUNIT$) ,fdel$ !!LAST PRICE !/PERM PRICE
  if COST_LEV[1]
	tmp2$ = UWORK[2] Using PMASK$,fdel$,CUNIT$ ,fdel$ !!LAST COST   
    T9 = 0 \ If C2[1] Let T9 = FNR(((C2[1] - C2[2]) / C2[1]) * 100)
    tmp2$ = tmp2$,T9 Using "###.##%",fdel$  !!GP%
  else
    tmp2$="",fdel$,"",fdel$,"",fdel$
  End If
  tmp2$ = tmp2$, LPR1[2]Using "######",fdel$!!FREQ
  tmp1$ = tmp1$,rtrim$(J3$[1,13]),fdel$!!LAST TYPE
  If DOSHIP Let tmp2$ = tmp2$,"SHIPLIST # ",LPSL Using "######",fdel$
  If Not(DOSHIP) ! "customer last price print - has perms
    If P60$[33,33] = "Y" And LPEUN[2] ! "perm price
      PDESC$ = "ERROR"
      If LPEUN[2] <= -8 And LPEUN[2] >= -17 Let PDESC$ = "BRACKET",PERM[0]
      If LPEUN[2] = -7 Let PDESC$ = PERM[0] Using PMASK$,"/",PUNIT$[1,4]
      If LPEUN[2] <= -1 And LPEUN[2] >= -6 Let PDESC$ = "LIST PRICE",PERM[0]
      If LPEUN[2] = 9 Let PDESC$ = "BREAK LEVEL",PERM[0]
      If LPEUN[2] = 10 Let PDESC$ = "DISCOUNT OF ",PERM[0] Using "###.##%"
      If LPEUN[2] = 14 Let PDESC$ = "G/P OF ",PERM[0] Using "###.##%"
      tmp$=tmp$,rtrim$(PDESC$),fdel$
	else
	  tmp$ = tmp$,"",fdel$
    end If 
  End If ! "no perm pricing used in ShipList File
  tmp3$ = tmp1$,tmp$,tmp2$
  call addtostr(e$,rstr$,tmp3$+rdel$)
  return
endif
Print #0; Tab 0;P$[1,12];
If Not(C4[3]) Print #0; Tab 14;P1$[9,28]; Else Print #0; Tab 14;P2$[21,40];
If Not(C4[3]) Print #0; Tab 35;P1$[152,155]; Else Print #0; Tab 35;P2$[81,84];
If C1[1] Print #0; Using "######"; Tab 40;C1[1]; Else Print #0; Tab 43;"N/A";
If C1[1] Print #0; Using "#####"; Tab 47;X$[1,8]; Tab 58;LPR[1];
Print #0; Using "##"; Tab 66;LPWH;
Print #0; Using "#######"; Tab 69;UWORK[0];" ";SUNIT$;
Print #0; Using PMASK$; Tab 81;UWORK[1];"/";PUNIT$;
If DF = 1 Print #0; Tab 98;"PC";
If COST_LEV[1]
  Print #0; Using PMASK$; Tab 100;UWORK[2];"/";CUNIT$;
  T9 = 0 \ If C2[1] Let T9 = FNR(((C2[1] - C2[2]) / C2[1]) * 100)
  Print #0; Using "###.##%"; Tab 117;T9;
End If 
Print #0; Using "######"; Tab 125;LPR1[2]
J1 = J1 + 1
Print #0; Tab 0;J3$[1,13];
If Not(C4[3]) Print #0; Tab 14;P1$[63,82]; Else Print #0; Tab 14;P2$[51,70];
If DOSHIP Print #0; Using "######"; Tab 41;"SHIPLIST # ";LPSL;
If Not(DOSHIP) ! "customer last price print - has perms
  If P60$[33,33] = "Y" And LPEUN[2] ! "perm price
    PDESC$ = " ",PDESC$;PDESC$ = "ERROR"
    If LPEUN[2] <= -8 And LPEUN[2] >= -17 Let PDESC$ = "BRACKET",PERM[0]
    If LPEUN[2] = -7 Let PDESC$ = PERM[0] Using PMASK$,"/",PUNIT$[1,4]
    If LPEUN[2] <= -1 And LPEUN[2] >= -6 Let PDESC$ = "LIST PRICE",PERM[0]
    If LPEUN[2] = 9 Let PDESC$ = "BREAK LEVEL",PERM[0]
    If LPEUN[2] = 10 Let PDESC$ = "DISCOUNT OF ",PERM[0] Using "###.##%"
    If LPEUN[2] = 14 Let PDESC$ = "G/P OF ",PERM[0] Using "###.##%"
    Print #0; Tab 81;PDESC$;
  End If 
End If ! "no perm pricing used in ShipList File
If P60$[32,32] = "Y"
  Print #0; Using "###,###,###"; Tab 100;"MTD:";LPR[3]; Tab 116;"YTD:";LPR[4];
End If 
Print #0;"\15\" \ J1 = J1 + 1
Return 
L_5800: Rem "============================================ headings
PRNTHEAD = 0
J1 = J1 + 1 \ If J1 < J49 Return 
!If J2 And SCRN
  !!Input @0,23; Len 1;"PRESS <CR> TO CONTINUE OR  E: end";J$
  !!Print 'CS';
  !!If J$ = "E" Goto L_9100
!!End If 
IF NOT (J8) If J2 And Not(SCRN) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
if j8 
	PRNTHEAD = 1
	return
END IF
If Not(SCRN) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (66 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 118 - ";Msc$(3);
Print #0; Tab 48;"L A S T   P R I C E   H I S T O R Y"
Print #0;""
Print #0; Tab 1;"ITEM/"; Tab 35;"COMM";
If P60$[33,33] = "Y" Print #0; Tab 84;"LAST PRICE/";
If P60$[32,32] = "Y"
  If COST_LEV[1] Print #0; Tab 105;"LAST COST"; Tab 119;"G/P %";
  Print #0; Tab 126;"FREQ."
Else 
  Print #0;""
End If 
Print #0; Tab 0;"LAST TYPE"; Tab 15;"DESCRIPTION"; Tab 35;"CODE";
Print #0; Tab 41;"ORDER"; Tab 49;"DATE"; Tab 55;"CONTRACT";
Print #0; Tab 64;"WHSE"; Tab 71;"QUANTITY";
If P60$[33,33] = "Y" Print #0; Tab 83;"PERM. PRICE"; Else Print #0; Tab 85;"LAST PRICE";
If P60$[32,32] = "Y"
  Print #0; Tab 107;"U N I T S   S O L D"
Else 
  If COST_LEV[1] Print #0; Tab 105;"LAST COST"; Tab 119;"G/P %";
  Print #0; Tab 126;"FREQ."
End If 
Print #0;""
PRNTHEAD = 1
Return 
!L_6000: Rem "========================================== screen
!Print 'CS ED'
!Print @0,0;"MX118";@33,0;"LAST PRICE REPORT"
!Print @17,2;"-STARTING-";@33,2;"-ENDING-"
!Print 'BD';
!Print @0,3;"    CUSTOMERS"
!Print @0,4;"    PRODUCTS"
!Print @0,5;"    COMMODITIES"
!Print @0,6;"    SALESPERSON";
!If P61$[64,64] = "Y" ! "shiplist last price option
!  Print @1,7;"   INCLUDE SHIPLISTS?"
!  Print @1,8;"   SHIPLISTS"
!End If 
!Print @0,9;"    SORT BY SALESPERSON?";
!Print @0,11;"    PAGE BREAK ON CUSTOMER?";
!Print 'ED';
!Print @0,3;" 1>";@0,4;" 2>";@0,5;" 3>";@0,6;" 4>";
!If P61$[64,64] = "Y"
!  Print @0,7;" 5>";@0,8;" 6>";@0,9;" 7>";@0,11;" 8>";
!Else 
!  Print @0,9;" 5>";@0,11;" 6>";
!End If 
!Print Using "######";@19,3;SCUST;@33,3;ECUST;
!Print @16,4;N1$[13,24];@33,4;N1$[25,36]
!Print @21,5;N1$[37,40];@35,5;N1$[41,44];
!Print Using "###";@21,6;BSLSM;@35,6;ESLSM;
!If P61$[64,64] = "Y" ! "shiplist last price option
!  J$ = "N" \ If PSLLP Let J$ = "Y"
!  Print @30,7;J$
!  If PSLLP Print Using "######";@19,8;BSHIPL;@33,8;ESHIPL
!End If 
!J$ = "N" \ If SLSMSORT Let J$ = "Y"
!Print @30,9;J$[1,1];
!If CUSTBREAK Print @30,11;"Y" Else Print @30,11;"N";
!Return 
L_8600: Rem LOAD DISPLAY UNITS
If C3[2] = -1 Let SUNIT$ = "CWT"
If C3[2] = -2 Let SUNIT$ = "LOT"
If C3[2] = -3 Let SUNIT$ = "LB  "
If C3[2] > 0 Mat Read #7,C3[2],10;SUNIT$;
If C3[3] = -1 Let PUNIT$ = "CWT"
If C3[3] = -2 Let PUNIT$ = "LOT"
If C3[3] = -3 Let PUNIT$ = "LB  "
If C3[3] > 0 Mat Read #7,C3[3],10;PUNIT$;
If C3[4] = -1 Let CUNIT$ = "CWT"
If C3[4] = -2 Let CUNIT$ = "LOT"
If C3[4] = -3 Let CUNIT$ = "LB  "
If C3[4] > 0 Mat Read #7,C3[4],10;CUNIT$;
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1 \ CNVTA = C2[0]
Gosub L_20000 \ UWORK[0] = AMOUNT
For X = 3 To 4
  CNVTU[0] = 0 \ CNVTU[1] = C3[X]
  CNVTU[2] = 2 \ CNVTA = C2[X - 2]
  Gosub L_20000 \ UWORK[X - 2] = FNP(AMOUNT)
Next X
For X = 0 To 1
  CNVTU[0] = 0;CNVTU[1] = C3[X + 3]
  CNVTU[2] = 2;CNVTA = PERM[X]
  If X = 0 And LPEUN[2] <> -7 Goto L_8850
  Gosub L_20000 \ PERM[X] = FNP(AMOUNT)
L_8850: Next X
For X = 3 To 4
  CNVTU[0] = 0;CNVTU[1] = C3[2]
  CNVTU[2] = 1;CNVTA = LPR[X]
  Gosub L_20000 \ LPR[X] = AMOUNT
Next X
Return 
SORTFLE: Rem "sort by salesman/LP Key
!!Print @0,22;'CE';"SORTING, PLEASE WAIT. ."
NUMREC = 0
Gosub CLRSORTFLE
Search #2,2,1;K1$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto GOTONE
CFLOOP: Search #2,3,1;K1$,R1,E !!\ If E > 2 Gosub ERR_SEARCH
If E = 2 Goto SORTDONE
GOTONE: If K1$[1,Len(K3$)] > K3$ Goto SORTDONE
NUMREC = NUMREC + 1
!!If Not(Fra(NUMREC / 250)) Print @38,22;NUMREC;K1$[1,6];'CL';
Mat Read #2,R1,0;P$;
If P$[1,12] < K5$ Or P$[1,Len(K6$)] > K6$ Goto CFLOOP
Mat Read #2,R1,56;P2$; \ Q$ = P2$[81,84]
If Q$[1,Len(K7$)] < K7$ Or Q$[1,Len(K8$)] > K8$ Goto CFLOOP
J$ = " ",J$;J$ = K1$[1,6]
Search #4,2,1;J$,R4,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #4,R4,142;CC1;
Else 
  CC1[2] = 0
End If 
If CC1[2] < BSLSM Or CC1[2] > ESLSM Goto CFLOOP
K9$ = " ",K9$
K9$[1,3] = CC1[2] Using "###"
K9$[4] = K1$
Search #9,4,1;K9$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 118 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
Goto CFLOOP

SORTDONE: Rem "done
Return 
CLRSORTFLE: Rem "Clear a sort File?
K9$ = " ",K9$
SFLOOP: Rem "
Search #9,3,1;K9$,R9,E \ If E = 2 Goto CLRDONE
!!If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R9,E !!\ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 118 sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",K9$ \error 10000
Goto SFLOOP
CLRDONE: !!!!!!Return 
Return 
!
L_9100: Rem END OF THIS RANGE
!!If SCRN Print @0,23;"PRESS <CR> TO EXIT  ";'CL'; \ Input ""J$
Goto OUTEND

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM

If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120!!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic

Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
A[6] = LPR1[0];A[5] = LPUNF[5] \ If Not(A[5]) Let A[5] = 1;LPUNF[5] = 1
PFU1[0] = LPEUN[0];PFU1[1] = C3[2]
PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[4] = LPEUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = C3[2];PFU1[9] = C3[2];PFU1[10] = LPEUN[1]
PFU1[11] = C3[4];PFU1[12] = C3[3]
If Not(C4[3]) Goto L_30060
PFU1[13] = C3[2];PFU1[16] = LPEUN[0];PFU1[17] = LPEUN[0]
PFU1[18] = C3[2];PFU1[19] = C3[2]
L_30060: PFU2[0] = LPUNF[0];PFU2[1] = LPUNF[1]
PFU2[2] = LPUNF[2];PFU2[3] = LPUNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 
Rem {begin rtn.input.s}
!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 >= 3 If J0 <= 4
!  If J0 = 3 Let J2$ = "#",J2$
!  If J0 = 4 Let J2$ = "-",J2$
!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!End If 
!J1$[J3 + 1] = ""
!If J0 < 3 Goto ISENTER
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 <> 6
!  If J0 = 5
!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!    J1$ = J9$[4,7],J9$[2,3],"  "
!  Else 
!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!  End If 
!End If 
!ISENTER: Rem
!
!If J5 < Msc(34) - 1
!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!End If 
!
!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) > J3
!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!End If 
!J9$ = J4$
!If Not(Len(J9$))
!  If J0$[3,4] = "00"
!    J9$ = J1$
!  Else 
!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!  End If 
!End If 
!For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!    Gosub ISERRMSG \ Goto ISENTER
!  End If 
!Next J8
!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!ISTYPE1: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto ISOUT
!ISTYPE3: Rem
!J9 = 0
!X1 = 0
!For J8 = 1 To Len(J9$)
!  If J0 = 4 And Not(X1)
!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!      X1 = 1
!      Goto ISNCONT1
!    End If 
!  End If 
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!  If J9$[J8,J8] = " " Goto ISNCONT1
!  If Len(J0$) > 10
!    J7$ = "" \ J7$ = J0$[10] To J9$[J8,J8] \ If J7$ <> "" Goto ISNCONT1
!  End If 
!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!  If J9 Goto ISNUMERR1
!  J9 = 1
!ISNCONT2: Rem
!  X1 = 1
!  If J9 Let J9 = J9 + 1
!ISNCONT1: Rem
!Next J8
!If J0 = 5 Goto ISTYPE5
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!If J9[1] = 0 Goto ISDTERR
!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!Goto ISDTERR
!ISMO30: If J9[1] > 30 Goto ISDTERR
!ISMO31: If J9[1] > 31 Goto ISDTERR
!Goto ISDTOUT
!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!  If J9[1] > 28 Goto ISDTERR
!End If 
!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!J$ = X$ \ J3 = 8 \ Goto ISOUT
!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!ISTYPE6: Call String(1,J9$)
!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!Gosub ISERRMSG \ Goto ISENTER
!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!ISERRMSG: X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
!
!
L_XML:!
!		Declare External Function PerSaveToLog$!
!		External Lib "xmlg.dl4"
!		x$ = PerSaveToLog$("", "118.txt", rstr$) 
Return
!
OUTEND: Rem EXIT PROGRAM
!Print 'CS'
!Chain "MX000C"
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Gosub L_XML
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try Call dxclose() else rem
End 
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 