! >>> Program 346A
!
! description RASL Replenishment PART 2
!
! loadsave -w -n 100,10 -o prog/dxport/346a.dl4 src/346a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem  MX346A  - Replenishment Verification/Form Print
Rem  Author: mtg 4/97
Rem  Last Update: cct# 97596
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT  3, 2007  15:05:19
Rem /w2/papermaster/r2005//usr/acct/txc/work/custom/acme.r9/mx346a.src (univ2) [txc] {42586}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub InpBuf,MiscStr,String,Time
! Option Default Dialect IRIS1

Com 1%,RPTWHSE,Intco,2%,SHPDATE
Com RPHFLE$[20],RPLFLE$[20],RPTYPE$[1],SLOC$[6],ELOC$[6],E$[500],Rstr$[2000]
If Err 0 Gosub ERR_TRAP
Rem {begin src/inc/dim.prod.i}
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim PRFLG$[10],PRMKUPTYP$[4],PIC$[50],PRIML$[12]
Dim 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Dim 1%,PRBASE,PRPARC2[3],PRD1[4],AGEDAY
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 2%,STK[2],FDT[1],PRMKUP[3],PRD0[2]
Dim 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,LBSORD,FUT[1],PRREDI[1],PRD2[3]
Rem {end dim.prod.i}
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 1%,J6
Dim 1%,RPH0[3]
Dim RPH0$[24]
Dim 3%,RPH1[1]
Dim 1%,RPL0[2]
Dim RPL$[24]
Dim 2%,RPL1
Dim 3%,RPL2
Dim 1%,CLIN,CPAGE,LINE_,STATUS,CNVTU[2],COMP,SCRN,FLAG,MAXLN,WHS
Dim 1%,CH_CNTRL,CH_WINFO,CH_RPH,CH_RPL,CH_PROD,CH_CCODE
Dim 2%,X8,D9[5],N4[3],FLD
Dim 3%,REC_RPL,REC_RPH,REC_PROD,CNVTA,AMOUNT,REC_WINFO
Dim P9$[50],P61$[256],CNAME$[30],FILENAME$[16],KEYRPH$[26],KEYRPL$[40]
Dim DFLTRCVLOC$[6],DATE$[8],KEY_PROD$[12],TME$[26]
Dim DASH$[132],UNDLN$[132],CCODE$[4],N2$[30],AISLE$[2]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim Message$[600],WebStr$[600]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
DASH$ = "-",DASH$
UNDLN$ = "_",UNDLN$
AISLE$ = " ",AISLE$
CLIN = 99
N4[3] = SHPDATE
CH_CNTRL = 1
! X8 = Spc(5)
COMP = IntCo ! Int((X8 - Int(X8 / 16384) * 16384) / 64)
J$ = "CNTRL" + Str$(COMP)
Read #1,3;CNAME$; \ Mat Read #1,0,100;DATE$;
!Print 'CS';@0,0;"-MX346A-"
!Print @25,0;" ** REPLENISHMENT VERIFICATION/FORMS ";
!Print @25,1;CNAME$[1,30];
Mat Read #1,19,50;P9$; \ Mat Read #1,61,0;P61$;
!If P9$[41,41] = "N"
!  Print @0,22;'CL RB';"RASL NOT CURRENTLY AVAILABLE...";
!  Print @0,23;'CL RB';"PRESS <CR> TO RETURN TO THE MENU "; \ Input ""J$
!  Goto OUTEND
!End If 
CH_WINFO = 8
CH_RPH = 10
CH_RPL = 11
CH_PROD = 12
CH_CCODE = 25 \ Read #CH_CNTRL,88,1728;FILENAME$; \ Ropen #CH_CCODE,FILENAME$
Mat Read #CH_CNTRL,115;D9; \ Mat Read #CH_CNTRL,69,52;DFLTRCVLOC$;
SELPRNTR: Rem "select the print option
!X1 = 346;STATUS = 0
!Call "MXPRSEL",X1,STATUS
!If STATUS And STATUS <> 2 ! "not screen print
!  If STATUS = 1 ! "Abort out (E: entered)
!QOUTTAHERE: Rem "
!    Print @0,20;'RB CE';"ARE YOU SURE YOU WANT TO EXIT? (Y/N)  ";
!    Input Len 16384 + 1;""X$ \ Call String(1,X$)
!    If X$ <> "Y" And X$ <> "N" Goto QOUTTAHERE
!    If X$ = "N" Goto SELPRNTR
!  End If 
!  Print @0,22;'RB CE';"Program aborted by user";
!  Signal 3,20
!  Goto OUTEND
!End If 
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
SCRN = J8
MAXLN = 63 \ If SCRN Let MAXLN = 21
STARTHERE: Rem "
!SLOC$ = " ",SLOC$ \ ELOC$ = "z",ELOC$
DISPSCREEN: Rem display screen
!Print 'CS';@0,0;"-MX346A-";
!Print @25,0;" ** REPLENISHMENT VERIFICATION/FORMS ";
!Print @25,1;CNAME$[1,30];
!Print @0,3;'CE';
!Print @0,5;"  Warehouse: ";Str$(RPTWHSE)
!Print @0,7;"2.Report Option: ";
!Print @0,9;"3.Starting Location: ";
!Print @0,11;"  Ending Location  : ";
!Gosub GETWHSE
!Gosub GET_RPTTYPE ! answered in 346
!Gosub LOC_RNG ! answered in 346
!Goto PROMPTOK
GETWHSE: Rem enter warehouse to use
WHS = RPTWHSE
REC_WINFO = WHS - 1
Mat Read #8,REC_WINFO,4;N2$;
N4[3] = SHPDATE
! Print @23,5;N2$[1,30];
!Return 
!J0$ = "3000021905"
!J1 = 0 \ If WHS Let J1 = WHS
!J5$ = "Enter warehouse/branch to process or <CR> to end"
!Gosub ISINPUT
!If J4$ = "" And J1 = 0 Goto OUTEND
!WHS = J1
!J5$ = ""
!If WHS > D9[5] Or WHS < 1
!  Print @0,23;'CL RB';"Invalid Warehouse!!!"; \ Signal 3,20
!  Print @0,23;'CL RB'; \ Goto GETWHSE
!End If 
!REC_WINFO = WHS - 1
!Mat Read #8,REC_WINFO,4;N2$;
!N4[3] = SHPDATE
!Print @23,5;N2$[1,30];
!Return 
GET_RPTTYPE: Rem "Enter Report Type Wanted
!J5$ = "Enter a S for Summary, D for Detail, F for Form, or E to Exit"
!J0$ = "2 00 119 7";J1$ = "D"
!Gosub ISINPUT
!If J$ = "E" Goto OUTEND
!If J$ <> "S" If J$ <> "D" If J$ <> "F" Goto GET_RPTTYPE
!RPTYPE$ = J$
!Return 
LOC_RNG: Rem "Product Range, Etc
!J5$ = "Enter Starting To Location or <CR> for all"
!J0$ = "2 000622 9";J1$ = SLOC$[1,6]
!Gosub ISINPUT
!If J4$ = ""
!  SLOC$ = " ",SLOC$;ELOC$ = "z",ELOC$
!  Print @22,11;ELOC$[1,6]
!  Goto CHKLOCRNG
!End If 
!SLOC$ = J$[1,12]
!J5$ = "Enter Ending To Location"
!J0$ = "2 00062211";J1$ = ELOC$[1,6]
!Gosub ISINPUT
!ELOC$ = J$[1,6]
!CHKLOCRNG: Rem check valid location range
!If SLOC$ > ELOC$
!  J7$ = "INVALID RANGE!"
!  Gosub ISERRMSG
!  Goto LOC_RNG
!End If 
!Return 
PROMPTOK: Rem check if entry is ok
!Print @0,23;'CL';"Enter #: field to edit  P: print  E: end: ";
!Input Len 16384 + 2;""J$
!If J$ = "P" Or J$ = "p" Goto STARTPRNT
!If J$ = "E" Or J$ = "e" Goto OUTEND
!FLD = J$
!On FLD Gosub GETWHSE,GET_RPTTYPE,LOC_RNG
!Goto PROMPTOK
STARTPRNT: Rem start print
If CPAGE ! "second run thru?
  Print #0;"\14\";
  CPAGE = 0
End If 
CLIN = 99
KEYRPH$ = " ",KEYRPH$;KEYRPH$[1,2] = WHS Using "##"
KEYRPH$[3] = SLOC$
!Print @0,22;'CE';"PRINTING, PLEASE WAIT. . ." \ Signal 3,0
If Err 0 Gosub ERR_TRAP
!If SCRN Print 'CS'
PRINT_LOOP: Rem "Loop thru the replenishment file
Search #CH_RPH,3,2;KEYRPH$,REC_RPH,E \ If E = 2 Goto RNGDONE
If E Gosub ERR_SEARCH
X2 = KEYRPH$[1,2] \ If X2 <> WHS Goto RNGDONE
If KEYRPH$[3,8] > ELOC$[1,6] Goto RNGDONE
If KEYRPH$[3,4] <> AISLE$[1,2] Let CLIN = 99
AISLE$[1,2] = KEYRPH$[3,4]
Gosub READRPH
Gosub GET_PROD
Gosub PRNT_LINE
Goto PRINT_LOOP
READRPH: Rem read replenishment header
Mat Read #CH_RPH,REC_RPH,0;RPH0;
Mat Read #CH_RPH,REC_RPH,8;RPH0$;
Mat Read #CH_RPH,REC_RPH,32;RPH1
Return 
READRPL: Rem read replenishment lines
Mat Read #CH_RPL,REC_RPL,0;RPL0;
Mat Read #CH_RPL,REC_RPL,6;RPL$;
Mat Read #CH_RPL,REC_RPL,30;RPL1;
Mat Read #CH_RPL,REC_RPL,46;RPL2
Return 
PRNT_LINE: Rem print lines
If RPTYPE$ = "F"
  LINE_ = 4 \ Gosub PRNT_HEDNG
  Print #0;RPH0$[19,24];
  Print #0; Tab 13;RPH0$[1,12];
  If PFU1[8] = -1 Let CCODE$ = "CWT "
  If PFU1[8] = -2 Let CCODE$ = "LOT "
  If PFU1[8] > 0 Mat Read #CH_CCODE,PFU1[8],10;CCODE$;
  Print #0; Tab 51;CCODE$;
  CNVTA = RPH1[0];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
  Gosub CONVERT
  Print #0; Using "########.##"; Tab 57;AMOUNT;
  Print #0; Tab 72;RPH0$[13,18];
  Print #0;""
  Print #0; Tab 13;A$[9,38];
  Print #0;""
  Print #0; Tab 13;A$[63,92];
  Print #0; Tab 45;"Exceptions: ";
  Print #0; Tab 57;UNDLN$[1,5];
  Print #0; Tab 63;UNDLN$[1,5];
  Print #0; Tab 72;UNDLN$[1,9];
  Print #0;""
  Print #0;""
Else 
  LINE_ = 3 \ Gosub PRNT_HEDNG
  Print #0;RPH0$[19,24];
  Print #0; Tab 14;RPH0$[1,12];
  Print #0; Tab 28;A$[9,38];
  If PFU1[8] = -1 Let CCODE$ = "CWT "
  If PFU1[8] = -2 Let CCODE$ = "LOT "
  If PFU1[8] > 0 Mat Read #CH_CCODE,PFU1[8],10;CCODE$;
  Print #0; Tab 60;CCODE$;
  CNVTA = RPH1[0];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
  Gosub CONVERT
  Print #0; Using "########.##"; Tab 66;AMOUNT;
  Print #0; Tab 90;RPH0$[13,18];
  If RPH1[1] ! "editted qty (not used here - mx348/9)
    If RPH0[3] = -1 Let CCODE$ = "CWT "
    If RPH0[3] = -2 Let CCODE$ = "LOT "
    If RPH0[3] > 0 Mat Read #CH_CCODE,RPH0[3],10;CCODE$;
    CNVTA = RPH1[1];CNVTU[0] = 0;CNVTU[1] = RPH0[3];CNVTU[2] = 1
    Gosub CONVERT
    Print #0; Using "########.##"; Tab 105;AMOUNT;
    Print #0; Tab 119;CCODE$;
  End If 
  Print #0;""
  Print #0; Tab 28;A$[63,92];
  Print #0;""
  If RPTYPE$ = "D"
    Print #0;DASH$[1,125] \ CLIN = CLIN + 1
    KEYRPL$ = KEYRPH$[1,2] + KEYRPH$[21,26] + KEYRPH$[9,20]
SRCHRPL: Rem search replenishment line for detail
    Search #CH_RPL,3,1;KEYRPL$,REC_RPL,E
    If E = 2 Goto ENDSRCHRPL
    If E Gosub ERR_SEARCH
    If KEYRPL$[1,20] <> KEYRPH$[1,2] + KEYRPH$[21,26] + KEYRPH$[9,20] Goto ENDSRCHRPL
    Gosub READRPL
    If RPL2 = 0 Goto SRCHRPL
    LINE_ = 1 \ Gosub PRNT_HEDNG
    If RPL1 = 999999 And RPL0[1] = 999
      Print #0; Tab 30;"Prev. Alloc.";
    Else 
      Print #0; Using "######"; Tab 30;RPL1;
      Print #0; Using "###"; Tab 40;RPL0[1];
    End If 
    CNVTA = RPL2;CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
    Gosub CONVERT
    Print #0; Using "########.##"; Tab 47;AMOUNT;
    Print #0;""
    Goto SRCHRPL
ENDSRCHRPL: Rem end of line search
  End If 
  Print #0;"" \ CLIN = CLIN + 1
End If 
LINE_ = 0
Return 
PRNT_HEDNG: Rem "Print the Headings
CLIN = CLIN + LINE_
If CLIN <= MAXLN Return 
! If SCRN If CPAGE Input @0,23;"\15\PRESS <CR> TO CONTINUE"J$
If CPAGE Print #0;"\14\";
If Not(SCRN) Print #0;"\15\";
CPAGE = CPAGE + 1
TME$ = "" \ Call Time(TME$)
If RPTYPE$ = "F"
  Print #0; Tab 1;DATE$; Tab 25;CNAME$; Tab 65;"Page ";CPAGE
  Print #0; Tab 1;"- 346A -"; Tab 20;"Primary Location Replenishment";
  X2 = N4[3] \ Gosub ISDUNPACK
  Print #0; Tab 60;"Ship Date: ";X$[1,8]
  Print #0; Using "## "; Tab 1;"Warehouse: ";WHS;N2$[1,30];
  Print #0; Tab 53;TME$
  Print #0;DASH$[1,83]
  Print #0; Tab 4;"To"; Tab 13;"Item Number/"; Tab 61;"Move";
  Print #0; Tab 74;"From";
  Print #0;""
  Print #0; Tab 0;"Location"; Tab 13;"Description"; Tab 51;"U/M";
  Print #0; Tab 59;"Quantity"; Tab 72;"Location";
  Print #0;""
  Print #0;DASH$[1,83]
  Print #0;""
  CLIN = 9 + LINE_
Else 
  Print #0; Tab 10;DATE$; Tab (Int(64 - (Len(CNAME$) / 2)));CNAME$;
  Print #0; Tab 120;"PAGE";CPAGE
  Print #0;"- 346A -";TME$;
  Print #0; Tab 40;"PRIMARY LOCATION REPLENISHMENT VERIFICATION LIST ";
  If RPTYPE$ = "D" Print #0;"IN DETAIL";
  Print #0;""
  Print #0; Using "## "; Tab 5;"WHSE:";WHS;N2$[1,30];
  X2 = N4[3] \ Gosub ISDUNPACK
  Print #0; Tab 50;"SHIP DATE: ";X$[1,8];
  Print #0;""
  Print #0;""
  Print #0;"TO LOCATION";
  Print #0; Tab 14;"ITEM NUMBER";
  Print #0; Tab 28;"DESCRIPTION";
  Print #0; Tab 60;"U/M";
  Print #0; Tab 66;"EST MOVE QTY";
  Print #0; Tab 90;"FROM LOCATION";
  Print #0; Tab 105;"ACT MOVE QTY";
  Print #0; Tab 119;"U/M";
  Print #0;""
  CLIN = 6
  If RPTYPE$ = "D"
    Print #0; Tab 30;"ORDER # ";
    Print #0; Tab 40;"LINE ";
    Print #0; Tab 47;"QUANTITY";
    Print #0;""
    CLIN = CLIN + 1
  End If 
  Print #0;" "
  CLIN = CLIN + 1
End If 
Return 
GET_PROD: Rem find product code in product file
KEY_PROD$ = " ",KEY_PROD$
KEY_PROD$ = RPH0$[1,12]
Search #CH_PROD,2,1;KEY_PROD$,REC_PROD,E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Rem {begin src/inc/read.prod.i}
  Mat Read #CH_PROD,REC_PROD,0;A$
  Mat Read #CH_PROD,REC_PROD,156;B
  Mat Read #CH_PROD,REC_PROD,256;A
  Mat Read #CH_PROD,REC_PROD,460;A1
  Mat Read #CH_PROD,REC_PROD,508;A2
  Mat Read #CH_PROD,REC_PROD,512;PFU1
  Mat Read #CH_PROD,REC_PROD,554;PFU2
  Mat Read #CH_PROD,REC_PROD,596;PRPARC
  Mat Read #CH_PROD,REC_PROD,620;LM
  Mat Read #CH_PROD,REC_PROD,624;PR_PO
  Mat Read #CH_PROD,REC_PROD,628;AGEDAY
  Read #CH_PROD,REC_PROD,630;LLC
  Mat Read #CH_PROD,REC_PROD,632;PSN$
  Mat Read #CH_PROD,REC_PROD,652;PSN
  Mat Read #CH_PROD,REC_PROD,660;U2
  Mat Read #CH_PROD,REC_PROD,664;LBSORD
  Mat Read #CH_PROD,REC_PROD,670;U4
  Read #CH_PROD,REC_PROD,678;U3
  Mat Read #CH_PROD,REC_PROD,684;U3$
  Mat Read #CH_PROD,REC_PROD,744;HZ$
  Mat Read #CH_PROD,REC_PROD,834;A3
  Mat Read #CH_PROD,REC_PROD,846;PFTB
  Read #CH_PROD,REC_PROD,854;UPCT
  Mat Read #CH_PROD,REC_PROD,856;C1$
  Mat Read #CH_PROD,REC_PROD,894;PR_C4
  Read #CH_PROD,REC_PROD,938;PF_LOAD2
  Mat Read #CH_PROD,REC_PROD,944;PR_A2$
  Mat Read #CH_PROD,REC_PROD,974;PFCO
  Mat Read #CH_PROD,REC_PROD,990;PLV
  Mat Read #CH_PROD,REC_PROD,1002;PLC
  Mat Read #CH_PROD,REC_PROD,1018;PFN
  Mat Read #CH_PROD,REC_PROD,1030;STK
  Mat Read #CH_PROD,REC_PROD,1048;FDT
  Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
  Mat Read #CH_PROD,REC_PROD,1066;PRBASE
  Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
  Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
  Mat Read #CH_PROD,REC_PROD,1088;FUT
  Mat Read #CH_PROD,REC_PROD,1100;PRPARC2
  Mat Read #CH_PROD,REC_PROD,1108;PRREDI
  Mat Read #CH_PROD,REC_PROD,1120;PIC$
  Mat Read #CH_PROD,REC_PROD,1270;PRD0
  Mat Read #CH_PROD,REC_PROD,1282;PRIML$
  Mat Read #CH_PROD,REC_PROD,1294;PRD1
  Mat Read #CH_PROD,REC_PROD,1304;PRD2
  Rem {end read.prod.i}
Else 
  Call MiscStr(1,A$)
  PFU1[8] = -99;A$[9,38] = "ERROR. PRODUCT NOT FOUND!               "
End If 
Return 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Rem ALL UB 5+!!  IF SPC 4>1280 GOTO cvtstartb: ! "unibasic 5+
Rem REM "======= unibasic <5 logic
Rem SWAP 1,"MXPRCONV"
Rem IF CNVTU[2]=3 or CNVTU[2]=4 GOTO cvtdone: ! "um window
Rem cvttry: ! "this is a remark
Rem SIGNAL 2,X1,AMOUNT,FLAG \ IF X1=-1 LET E=0 \ GOSUB err_search:
Rem IF X1<>SPC(6) GOTO cvttry:
Rem IF CNVTU[2]=0 GOTO cvtdone: !!TEST IF VALID CONVERSION
Rem IF FLAG LET E=FLAG \ GOSUB err_search:
Rem GOTO cvtdone:
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
RNGDONE: Rem "Done with
!If SCRN Input @0,23;"\15\PRESS <CR> TO EXIT  "J$
! Goto STARTHERE
OUTEND: Rem "Done - outta here
If Err 0 Rem
Close #CH_RPH
Close #CH_RPL
Kill RPHFLE$
Kill RPLFLE$
If Err 0 Gosub ERR_TRAP
END
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+msc$(4)
call programdump("tmp/ir346ase!","")
Error 11000
End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
if statchan
	print #statchan;message$
	print #statchan;"The accept has ended in an error"
Else
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
Endif
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End