! --- EVAPSLSCOM
! description Get commission on update ot 36/37
!
! loadsave -w -n 100,10 -o prog/dxport/evapslscom.dl4 src/evapslscom.src
!
! 1.0 mm/dd/yyyy change??
!
!include copyright, common libs, common intrinsics
! looks like a modified copy of mxslscom
include "src/copyright.inc"
Rem EVAPSLSCOM  SALESMAN COMMISSION CALC ATHENS EVAP
Rem DAVID DEVITO 03/11/91
Rem LAST UPDATE: 03/93 - add product/prodwhse/commodity commiss %
Rem BEDIT Version: 2.3 OBJECT CODE     Created: MAR  7, 2013  13:45:34
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/evapslscom.src (univ2) [jcs] {17053}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!              02/97 jlp - if gp 0, let gp=-100 cct99450
!              11/97 AC CCT108040 FIX NEGATIVE COMMISION'S PROBLEM WHEN
!                       "ALLOW MULTI SLSM" FLAG IS "Y"
!            02/11/98 cct110181 initialize the pcom and comm when order
!                     type is 10 or 6
! tc 05/15/98 cct112497 calc gp_dollars for salesman paid on merch $
! jliu 11/24/98 cct117932 assign the variable gp to -100 in L3000 multi
!      salesman when the gp less than 0  
!jliu 10/19/99 cct127881 assign the material code even the maxamt is zero
!
! -------------  notes for rev9 upgrade Athens Janitor Supply Co --------------
! 03/25/08 vst cct224198 - made the following changes for rev9 upgrade:
!                        - changes for 10 digit invoice# now use Oref[5]
!                        - 'PCOM1' is now read in at disp=36 (was =844)
!                        - INVL record numbers are now 3% (R11) 
! -----------------------------------------------------------------------------
! CONVERTED TO A STUB TO CALL OFF TO STANDARD MXSLSCOM5
Declare Intrinsic Sub FindF,InpBuf,String
! Option Default Dialect IRIS1
dim e$[500],buttonlist$[5,50],nextlist$[5,100],rstr$[500] !error handling variables
Enter R5,H1,V1,CFIN[]
If Err 0 Gosub ERR_TRAP
Dim 1%,CH[99],3%,S9[9]
CH[1] = 1;CH[3] = 11 ! CNTRL;PROD
CH[4] = 12;CH[5] = 6 ! COMMCODE;CUST
CH[6] = 13;CH[8] = 2 ! PRDWH;INVH
CH[9] = 3;CH[10] = 4;CH[13] = 5 ! INVT;INVL;SLSM
S9[4] = 411 ! program
Call "MXSLSCOM5",S9[],CH[],R5,H1,V1,CFIN[]
Goto OUTEXIT ! THE REST IS FOR REFERENCE TO HOW OLD EVAPSLSCOM WORKED!
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
Def FNW(H) = Sgn(H) * (Int(Abs(H) * 1 + .5) * 1)
Def FND(H) = FNR(H - (H * D3)) ! "proportional function (DISCOUNT FRT FRT CST MISC CHRG)
If Err 0 Rem
Close #80 ! "just in case
If Err 0 Gosub ERR_TRAP
Dim F$[16],F1$[16],P9$[50],K1$[50],K11$[50],K5$[50],K14$[50],HMAT$[2],P60$[50]
Dim MT$[2],KEY_$[130],F2$[26],PORT_$[26],K9$[50],MAXMT$[1],K80$[50]
Dim 1%,H4[2],L3[3],SO[20],S2[1],NCL,2%,CG1[99,11],L4[3],PCOM,PCOM1
Dim 2%,SLSM[9],MAX[8],S0[7],H5[16],H0[12],CG[13],MCODE[9]
Dim 3%,T9,T2[25],GP,SSL1[3],SCOM[4],CP,TOTAL[9],SALE,COST,SALE1,COST1
Dim 3%,SMER[4],SCST[4],TYPE,GP_DOLLARS,SLSMS3[9],SMER1[4],SCST1[4],OLM[6]
Dim 3%,CATGY[20,1],SALESM[999,4],L5[5],S3[17],CATGY1[20,1],SALESM1[999,1]
Dim 3%,MAXAMT,COMM,LNCOM[21,2],COMPRV[4,2],A$[156],L2$[20],MCHARGE[9,1],TOT[4]
Dim 3%,OREF[5],R11,REC_TOT
CH_PROD = 11;CH_COMMD = 12;CH_CUST = 6;CH_INH = 2;CH_INL = 4
CH_SLSM = 5;CH_INT = 3;CH_PWH = 13;CH_SORT = 69
CHNL = 69
If Err 0 Let X2 = Spc(8)
CHKCHAN: Rem "find open Chan
X2 = 0 \ X3 = Chf(CHNL)
If X2 = 49
  CH_SORT = CHNL
Else 
  CHNL = CHNL - 1
  Goto CHKCHAN
End If 
If Err 0 Gosub ERR_TRAP
Mat Read #1,19,50;P9$;
Read #1,60,4;NCL; ! "negative grid class
Mat Read #1,60,50;P60$;
TYPE = P9$[30,30];BITOT = 0
If H1 < 0 Let H1 = Abs(H1);BITOT = 1 ! "we've got Merch Totals Already
K80$ = " ",K80$
Gosub L_8160 ! "read header
Mat Read #1,88,1584;F1$; ! "Commsn Grid
Open #80,F1$
REFNO = H0[7]
If BITOT
  REFNO = OREF[1] ! " was: =H0[6]
End If 
If R5 = -99 And H0[0] = 30
  REFNO = OREF[1] !"was H0[6] !"from fixcomsn(redo from history)
End If 
If H0[0] = 31
  REFNO = H0[7] ! "doing history
End If 
Mat Read #1,19,50;P9$;
LINECOM = 0
Gosub L_6000 ! "for mat code & chk of line comm%
If H0[0] >= 9 And H0[0] <= 11 And H5[3] Let LINECOM = 0 ! "comm % was overridden
For X = 1 To 4 \ SLSM[X] = 0 \ Next X
If P60$[24,24] = "Y" Or LINECOM Gosub L_2000 ! "must do by line for comm% & $ first
If P9$[21,21] = "Y" Goto L_3000
Gosub CALC_GP_DOLLARS
Mat Read #CH_SLSM,V1,118;SSL1;
Mat Read #CH_SLSM,V1,862;SLSMS3;
If P60$[24,24] = "Y" Goto L_1962 ! "commission by line
If H5[3] Let CP = SLSM[5] \ Goto L_1940 ! "comm % was over-ridden (mx243c)
If SSL1[1] = 0 Let CP = SSL1[0]
If GP_DOLLARS > 0 If GP_DOLLARS < SLSMS3[0] Let CP = 0 ! "didn't reach min gp limit
MERCH = T2[24]
TAMOUNT = T2[24]
MAMOUNT = MERCH \ GPAMOUNT = GP_DOLLARS
SLSM[0] = H0[11] \ X = 0
If SSL1[1] Let X = 0 \ Gosub L_5000 ! "use grid
L_1940: If Not(SLSM[0]) Let SLSM[0] = H0[11] ! "default to primary
SLSM[5] = CP ! "comm %
If TOTAL[0] If CFIN[8] Let TOTAL[0] = TOTAL[0] - FNR((T2[1] * (CFIN[8] / 100)))
SCOM[0] = FNR(TOTAL[0] * (CP / 100))
L_1962: If P60$[24,24] = "Y" Or LINECOM Let SCOM[0] = SCOM[0] + LNCOM[0,0] ! "add in previous comm calc'd
If H5[7] = 10 Or H5[7] = 6 Let SCOM[0] = 0;SLSM[5] = 0 ! "sample/donations
Gosub L_8000 ! "write commission data into header
Goto OUTEND
CALC_GP_DOLLARS: Rem
SALE = T2[1] \ If LINECOM Let SALE = LNCOM[21,0] ! "chg to no comm$ line sales
COST = T2[17] \ If LINECOM Let COST = LNCOM[21,1] ! "no comm$ costs total
SALE1 = T2[24]
COST1 = T2[14]
If P9$[35,35] = "Y" Let SALE = SALE + T2[5] \ SALE1 = SALE1 + T2[5]
If P9$[36,36] = "Y" Let SALE = SALE - T2[3] \ SALE1 = SALE1 - T2[3]
If P9$[37,37] = "Y" Let COST = COST + T2[20] \ COST1 = COST1 + T2[20]
If P9$[38,38] = "Y" Let SALE = SALE + (T2[6]) \ SALE1 = SALE1 + (T2[6])
SALE = SALE + TOT[1];SALE1 = SALE1 + TOT[1]
COST = COST + TOT[2];COST1 = COST1 + TOT[2]
TOTAL[0] = SALE - COST
TOTAL[1] = SALE1 - COST1
GP = 0 \ If SALE1 Let GP = TOTAL[1] / SALE1 * 100
If Not(SALE1) And COST1 Let GP = -100 ! this is a total loss
GP_DOLLARS = TOTAL[1]
If H5[7] = 4 Let GP_DOLLARS = TOTAL[0]
If Not(P9$[14,14] = "P" Or P9$[14,14] = "L")
  TOTAL[0] = T2[1]
  TOTAL[1] = T2[24]
  If LINECOM Let TOTAL[0] = LNCOM[21,0]
End If 
If P9$[14,14] = "N" ! don't calculate any commission
  GP = 0
  GP_DOLLARS = 0
  TOTAL[0] = 0 \ TOTAL[1] = 0
End If 
Return 
L_2000: Rem "======= a sprod or commodity comm% was used, go line by line
If P9$[14,14] = "N" Goto L_2400 ! "no commission
SLSM[0] = H0[11]
K11$ = " ",K11$;K11$[1] = REFNO Using "##########  0"
L_2040: CP = 0;PCOM = 0
L_2045: Search #CH_INL,3,1;K11$,R11,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2400
ORD = K11$[1,10] \ If ORD <> REFNO Goto L_2400 ! "hit next order
Gosub L_8040 ! "read line
If S2[0] = 3 Goto L_2045 ! "z line
If L5[3] = 0 Goto L_2045 ! "Not Billing Line
If OLM[4] > 0 Let PCOM = OLM[4] \ Goto L_2220 ! "special line commission %
Gosub L_4000 \ If PCOM Goto L_2220 ! "get comm%
If P9$[21,21] <> "Y" Let L4[1] = 0 ! if not multisalesman, use salesman on head
If L4[1] = 0 Let L4[1] = H0[11] !IF ZERO SET= HEADER
K14$ = " ",K14$;K14$ = L4[1] Using "###"
Search #CH_SLSM,2,1;K14$,R14,E \ If E Gosub ERR_SEARCH
Mat Read #CH_SLSM,R14,118;SSL1;
Mat Read #CH_SLSM,R14,862;SLSMS3;
If H5[3] If H0[0] >= 9 And H0[0] <= 11 Let CP = OLM[5] \ Goto L_2220
If SSL1[1] = 0 Let CP = SSL1[0] ! "use % from slsm file
GP_DOLLARS = L5[0] - S3[13]
GP = 0 \ If L5[0] Let GP = GP_DOLLARS / L5[0] * 100 ! "first calc gp on line
If Not(L5[0]) And S3[13] Let GP = -100 ! this is a total loss
GP_DOLLARS = T2[24] - T2[14];GPAMOUNT = GP_DOLLARS;MAMOUNT = T2[24]
If GP_DOLLARS > 0 If GP_DOLLARS < SLSMS3[0] Let CP = 0 ! "didn't reach gp limit
If CP Goto L_2220
Gosub L_6640
X = 0 \ Gosub L_5000
L_2220: If Not(PCOM) If CP Let PCOM = CP \ LINECOM = 1
If P9$[34,34] = "O" Let COMM = FNR(L5[0] * PCOM / 100) Else Let COMM = FNR(L5[3] * PCOM / 100)
If P9$[34,34] = "O" If P9$[14,14] = "P" Or P9$[14,14] = "L" Gosub L_8600 !"calc based on ordered
If P9$[34,34] = "S" If P9$[14,14] = "P" Or P9$[14,14] = "L" Gosub L_8650 !"calc based on shipped
If H5[7] = 10 Or H5[7] = 6 Let PCOM = 0;COMM = 0
OLM[5] = PCOM;OLM[6] = COMM
Mat Write #CH_INL,R11,404;OLM;
LNCOM[0,0] = LNCOM[0,0] + COMM ! "commission total $
If L3[3] < 1 Let L3[3] = 1
If L3[3] > 20 Let L3[3] = 20
LNCOM[L3[3],0] = LNCOM[L3[3],0] + COMM ! "calc'd commission $
LNCOM[L3[3],1] = LNCOM[L3[3],1] + L5[3] ! "by ctgy sales
LNCOM[L3[3],2] = LNCOM[L3[3],2] + S3[12] ! "by catgy cost
Goto L_2040
LNCOM[21,0] = LNCOM[21,0] + L5[3] ! "total sales with no comm%
LNCOM[21,1] = LNCOM[21,1] + S3[12] ! "total cost with no comm%
Goto L_2040
L_2400: Return 
L_3000: Rem MULTI SALES MAN
K11$ = " ",K11$
K11$[1,10] = REFNO Using "##########"
L_3030: Search #CH_INL,3,1;K11$,R11,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_3200
ORD = K11$[1,10] \ If ORD <> REFNO Goto L_3200 ! "hit next order
Gosub L_8040 ! "read line file
If S2[0] = 3 Goto L_3030 ! "z line
If L5[3] = 0 Goto L_3030 ! "not billing Line
CATGY[L3[3],0] = CATGY[L3[3],0] + L5[3] ! "sales
CATGY1[L3[3],0] = CATGY1[L3[3],0] + L5[0]
CATGY[L3[3],1] = CATGY[L3[3],1] + S3[12] ! "costs
CATGY1[L3[3],1] = CATGY1[L3[3],1] + S3[13]
Goto L_3030
L_3200: Rem ADD UP CAT BY SLSM
Gosub L_4500 ! "read customer slsm by ctgy array
For X = 1 To 20
  If Not(SO[X]) Let SO[X] = H0[11] ! "none set up, default to main
  SALESM[SO[X],0] = SALESM[SO[X],0] + CATGY[X,0] ! "sales
  SALESM[SO[X],1] = SALESM[SO[X],1] + CATGY[X,1] ! "costs
  SALESM[SO[X],2] = SALESM[SO[X],2] + LNCOM[X,0] ! "line comm $
  SALESM[SO[X],3] = SALESM[SO[X],3] + LNCOM[X,1] ! "line comm $ sales
  SALESM[SO[X],4] = SALESM[SO[X],4] + LNCOM[X,2] ! "line comm $ cost
  SALESM1[SO[X],0] = SALESM1[SO[X],0] + CATGY1[X,0] ! "sales
  SALESM1[SO[X],1] = SALESM1[SO[X],1] + CATGY1[X,1] ! "costs
Next X
COUNT = 0
For X = 1 To 999
  If SALESM[X,0] + SALESM[X,1] ! "check for sales+costs
    If COUNT > 4 Let E = 0 \ Gosub ERR_SEARCH ! "count can't exceed 4
    SMER[COUNT] = SALESM[X,0] ! "sales/merch amt
    SCST[COUNT] = SALESM[X,1] ! "costs
    For I = 0 To 2
      COMPRV[COUNT,I] = SALESM[X,I + 2] ! "previous comm$, sales & cost
    Next I
    SMER1[COUNT] = SALESM1[X,0]
    SCST1[COUNT] = SALESM1[X,1] ! "costs
    SLSM[COUNT] = X ! "sslsm #
    COUNT = COUNT + 1
  End If 
Next X
For X = 0 To 4
  If SLSM[X] = 0 Goto L_3570
  GP = 0
  If P9$[34,34] = "O" Let GP_DOLLARS = SALESM1[SLSM[X],0] - SALESM1[SLSM[X],1]
  If SMER1[X] Let GP = (SMER1[X] - SCST1[X]) / SMER1[X] * 100
  GP_DOLLARS = SMER[X] - SCST[X]
  MERCH = SALESM1[SLSM[X],0] !  ELSE  LET MERCH=SMER[X]
  GP_DOLLARS1 = SMER1[X] - SCST1[X]
  TAMOUNT = SALESM1[SLSM[X],0]
  MAMOUNT = MERCH \ GPAMOUNT = SMER1[X] - SCST1[X]
  If Not(TAMOUNT) And GPAMOUNT < 0 Let GP = -100 ! "cct#117932 
  K14$ = " ",K14$;K14$ = SLSM[X] Using "###"
  Search #CH_SLSM,2,1;K14$,R14,E \ If E Gosub ERR_SEARCH
  Mat Read #CH_SLSM,R14,118;SSL1;
  Mat Read #CH_SLSM,R14,862;SLSMS3;
  If H5[3] If H0[0] >= 9 And H0[0] <= 11 Let CP = SLSM[X + 5] \ Goto L_3500
  If SSL1[1] = 0 Let CP = SSL1[0] ! "use % from slsm file
  If GP_DOLLARS > 0 If GP_DOLLARS < SLSMS3[0] Let CP = 0 ! "didn't reach gp limit
L_3480: If P60$[24,24] <> "Y" If Not(LINECOMM) If SSL1[1] Gosub L_5000 ! "use grid
  If H5[7] = 10 Or H5[7] = 6 Let CP = 0 ! "sample/donations
  SLSM[X + 5] = CP ! "comm %
  COMM = 0 ! "variable used for commissionable amount
L_3500: If P9$[14,14] = "P" Or P9$[14,14] = "L"
    COMM = FNR((SMER[X] - SCST[X]) - (SMER[X] * (CFIN[8] / 100))) ! "g/p
    If LINECOM
      TEMPCOMPRV = FNR((COMPRV[X,1] - COMPRV[X,2]) - (COMPRV[X,1] * (CFIN[8] / 100)))
      COMM = COMM - TEMPCOMPRV
    End If 
  End If 
  If P9$[14,14] = "S"
    COMM = FNR(SMER[X]) ! "sales
    If LINECOM Let COMM = COMM - FNR(COMPRV[X,1]) ! "less prev cal'd sales
  End If 
  SCOM[X] = FNR(COMM * (CP / 100)) ! "sales
  If LINECOM Let SCOM[X] = SCOM[X] + COMPRV[X,0] ! "add previous calc'd comm$
L_3570: Next X
Gosub L_8000 ! "write commission data into header
Goto OUTEND
L_4000: Rem "=================== TRY FOR COMM % FROM SPROD,SPRDWHSE, OR COMMODITY
Mat Read #CH_SLSM,V1,118;SSL1;
PCOM = 0 \ If S2[0] = 3 Or L3[2] > 990 Return ! "message line
If L3[0] Goto L_4100 ! "nonstock try Commodity
Read #CH_PROD,L4,224;PCOM;
If P9$[32,32] <> "Y" Goto L_4080
Mat Read #CH_PROD,L4;A$;
F1$ = " ",F1$;F1$[1,12] = A$[140,151];F1$[13,14] = WHSE Using "##"
Search #CH_PWH,2,1;F1$,R30,E \ If E Goto L_4080
Read #CH_PWH,R30,54;PCOM1;
If PCOM1 If Not(PCOM) Let PCOM = PCOM1 ! "does whse override?
L_4080: Rem If Product file has %, bypass Commodity
If PCOM > 0 Goto L_4170
L_4100: Rem "===== try commodity file for commission %
F1$ = " ",F1$;F1$ = L2$[17,20]
Search #CH_COMMD,2,1;F1$,R4,E
If E Goto L_4170
Read #CH_COMMD,R4,36;PCOM1; ! "was disp 844
PCOM = PCOM1
L_4170: Rem.
If SSL1[1] = 0 If SSL1[0] If PCOM Let PCOM = SSL1[0]
If SSL1[1] = 0 If SSL1[0] = 0 If PCOM Let PCOM = 0 !"cct#127398
If PCOM < 0 Or PCOM > 100 Or Fra(PCOM * 1000) Let PCOM = 0 ! "invalid comm%
Return 
L_4500: Rem READ CUSTOMER SLSM COMM % ARRAY
K5$ = " ",K5$
K5$[1,6] = H0[4] Using "######"
Search #CH_CUST,2,1;K5$,R5,E \ If E Gosub ERR_SEARCH
Mat Read #CH_CUST,R5,502;SO;
Return 
L_5000: Rem "===================== FIND COMM % BASED ON GRID
If SLSM[X + 5] And H5[10] = 1 Let CP = SLSM[X + 5] \ Goto L_5170 ! "keep % from ori invoice (credit memo entry/copy from)
TOT = 0
If P60$[24,24] <> "Y" Gosub L_6500
If CG[12] = 2 And Abs(GP_DOLLARS) < CG[13] Goto L_5140 ! "gp too low.
GP = Abs(Int(GP)) !LET GP=ABS(FNW(GP)) see cct#74357 - nate 2/13/95
If GP > 99 Let GP = 99
If GP < -99 Let GP = -99
For REC = GP To 1 Step -1
  For X5 = 0 To 11
    If CG1[REC,X5] Goto L_5075
  Next X5
Next REC
L_5075: If GP > REC Let GP = REC
REC = GP
For X5 = 11 To 0 Step -1
  If CG[X5] <= Abs(TAMOUNT) Goto L_5150
Next X5
L_5140: CP = 0 \ Goto L_5170
L_5150: CP = CG1[Abs(GP),X5]
L_5170: Return 
L_6000: Rem DO NOT CREATE SORT FILE
PORT_$ = Str$(Spc(6))
F$ = "6/COMMSORT*" ! "so no conflict
L_6030: If F$[Len(F$)] = " " Let F$ = F$[1,Len(F$) - 1] \ Goto L_6030
COUNT = 0 \ Search F$,"*",COUNT \ If Not(COUNT) Gosub ERR_SEARCH
KSIZE = 25 ! "directory size in words
F$[COUNT] = PORT_$
Call FindF(F$,FOUND)
If Err 0 Rem
Close #CH_SORT \ If Err 0 Gosub ERR_TRAP
If FOUND Kill F$ ! "kill existing file
F2$ = "[1:256] ",F$
Build #CH_SORT,F2$
Search #CH_SORT,0,1;KEY_$,KSIZE,E \ If E Gosub ERR_SEARCH
REC = 1 \ Search #CH_SORT,0,0;KEY_$,REC,E \ If E Gosub ERR_SEARCH
K11$ = " ",K11$;LINECOM = 0
K11$[1,10] = REFNO Using "##########"
L_6180: Search #CH_INL,3,1;K11$,R11,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_6490
ORD = K11$[1,10] \ If ORD <> REFNO Goto L_6490 ! "hit next order
Gosub L_8040 ! "read line file
If S2[0] = 3 Goto L_6180 ! "z line
If OLM[4] > 0 Let PCOM = OLM[4] \ Goto L_6240 ! "special commission %
Gosub L_4000 ! "try for sprod/commodity comm%
L_6240: If PCOM Let LINECOM = 1 ! "set flag to show there was a comm% found for line
K9$ = " ",K9$;L4[1] = 0 ! "always header slsm, multi does not use SORT
If Not(L4[1]) Let L4[1] = H0[11]
If P9$[21,21] = "Y" Let K9$[1,3] = L4[1] Using "###" ! "multi slsm
If P9$[21,21] <> "Y" Let K9$[1,3] = H0[11] Using "###"
K9$[4,4] = MT$[1,1]
Search #CH_SORT,2,1;K9$,R9,E
If E
  E = 2
  Search #CH_SORT,1,0;K9$,R9,E
  If E Gosub ERR_SEARCH
  Search #CH_SORT,4,1;K9$,R9,E
  If E Gosub ERR_SEARCH
  T9 = 0
Else 
  Read #CH_SORT,R9,0;T9;
End If 
T9 = T9 + L5[0]
Write #CH_SORT,R9,0;T9;
Goto L_6180
L_6490: Return 
L_6500: Rem
MAXAMT = 0 \ MAXMT$ = " ",MAXMT$
K9$ = " ",K9$
K9$[1,3] = SLSM[X] Using "###"
L_6540: Search #CH_SORT,3,1;K9$,R9,E
If E Goto L_6640
S9 = K9$[1,3]
If S9 <> SLSM[X] Goto L_6640
Read #CH_SORT,R9,0;T9;
If T9 > MAXAMT
  MAXAMT = T9
  MAXMT$ = K9$[4,4]
End If 
If T9 = 0 And MAXAMT = 0
  If MAXMT$[1,1] = " " Let MAXMT$[1,1] = K9$[4,4]
End If 
Goto L_6540
L_6640: Rem GET CORRECT GRID
If (GPAMOUNT < 0 And SSL1[1] And NCL) Let SSL1[1] = NCL ! "neg grid class
HMAT$ = "  " \ HMAT$[1,1] = MAXMT$[1,1]
K80$ = " ",K80$
K80$[1,3] = SSL1[1] Using "###"
K80$[4,5] = H5[7] Using "##"
If P60$[24,24] <> "Y" Let K80$[6,6] = MAXMT$[1,1] Else Let K80$[6,6] = MT$[1,1]
K80$[7] = ""
Search #80,2,1;K80$,R80,E
If Not(E) Goto L_6830
K80$[4,5] = " 0"
Search #80,2,1;K80$,R80,E
If Not(E) Goto L_6830
K80$[4,5] = H5[7] Using "##"
K80$[6,6] = " "
Search #80,2,1;K80$,R80,E
If Not(E) Goto L_6830
K80$[4,5] = " 0"
Search #80,2,1;K80$,R80,E
If E
  For CT = 0 To 99
    If CT < 14 Let CG[CT] = 0
    For CT1 = 0 To 11 \ CG1[CT,CT1] = 0 \ Next CT1
  Next CT
  Goto L_6845 ! "no read of file
End If 
L_6830: Mat Read #80,R80,6;CG;
Mat Read #80,R80,62;CG1;
L_6845: If CG[12] = 1 Let TAMOUNT = MAMOUNT Else Let TAMOUNT = GPAMOUNT
Return 
L_8000: Rem WRITE COMMIS INFO TO ORDER HEADER
Mat Write #CH_INH,H1,278;SLSM;
Mat Write #CH_INH,H1,318;SCOM;
Mat Write #CH_INH,H1,348;SMER;
Mat Write #CH_INH,H1,378;SCST;
Mat Write #CH_INH,H1,444;HMAT$;
Return 
L_8040: Rem READ LINE ITEM
Mat Read #CH_INL,R11,8;L3;
Mat Read #CH_INL,R11,16;L4;
Mat Read #CH_INL,R11,32;L5;
Mat Read #CH_INL,R11,140;L2$;
Mat Read #CH_INL,R11,256;S2;
Mat Read #CH_INL,R11,260;S3;
Mat Read #CH_INL,R11,368;MT$;
Mat Read #CH_INL,R11,404;OLM;
Return 
L_8160: Rem READ HEADER
Mat Read #CH_INH,H1,0;H0;
Mat Read #CH_INH,H1,78;H4;
Mat Read #CH_INH,H1,104;H5;
Mat Read #CH_INH,H1,278;SLSM;
Mat Read #CH_INH,H1,318;SCOM;
Mat Read #CH_INH,H1,348;SMER;
Mat Read #CH_INH,H1,378;SCST;
Mat Read #CH_INH,H1,444;HMAT$;
Mat Read #CH_INH,H1,512;OREF;
Gosub L_8500
REC_TOT = H0[3]
If BITOT
  REC_TOT = OREF[5]
End If 
If R5 = -99 And H0[0] = 30
  REC_TOT = OREF[5]
End If 
If H0[0] = 31
  REC_TOT = OREF[5]
End If 
Mat Read #CH_INT,REC_TOT,8;T2;
Mat Read #CH_INT,REC_TOT,168;MCODE;
Mat Read #CH_INT,REC_TOT,208;MCHARGE;
Mat Read #CH_INT,REC_TOT,328;TOT;
WHSE = H4[2] \ If H5[7] = 7 Let WHSE = H5[11] ! "for sprdwhse comm%
Return 
L_8500: Rem CLEAR MULTI SLSM
For X = 0 To 4
  SLSM[X] = 0
  If H5[3] If H0[0] >= 9 And H0[0] <= 11 Or H0[0] = 91 Goto L_8530 !in case of H5[3] need com%
  SLSM[X + 5] = 0
L_8530: SMER[X] = 0
  SCST[X] = 0
  SCOM[X] = 0 !
Next X
Return 
L_8600: Rem Calculate commission on ordered values
COMM = FNR(((L5[0] - S3[13]) - L5[0] * (CFIN[8] / 100)) * PCOM / 100)
Return 
L_8650: Rem Calculate commission on shipped values
COMM = FNR(((L5[3] - S3[12]) - L5[3] * (CFIN[8] / 100)) * PCOM / 100)
Return 
OUTEND: Rem EXIT
If Err 0 Rem
Close #CH_SORT
OUTEXIT: Rem we're really outta here!
If Err 0 Gosub ERR_TRAP
End 
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Error 11000                                 
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callsuberr.inc"
END
