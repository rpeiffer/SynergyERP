! >>> Program 202msd
!
! description MATERIAL SAFETY DATA SHEET LIST
!
! loadsave -w -n 100,10 -o prog/dxport/202msd.dl4 src/202msd.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!

!all rights reserved. (c)copyright 2007 by: Universal Business Systems
 !
 ! *declare common dl4 intrinsic subs & functions
 Declare Intrinsic Function trim$,dateusing$,fmtof
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
 !
 ! *declare common external libs & subs & functions
 External Lib "libgeneral.lib" !general routines
 Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
 Declare External Function getmsg$,expandarray
 !
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  6, 2000  09:47:56
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx2/mx202msd.src (univ2) [kag] {38145}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,getglobals
!Option Default Dialect IRIS1
Rem MX202MSD - MSDS SORT AND PRINT
Rem AUTHOR: DD   6/17/93
Rem LAST UPDATE: NATE 5/18/94 - ADD SELECTION BY TRUCK / CLEAN UP
Com 1%,SW[20]
If Err 0 Gosub ERR_TRAP
Dim 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],J8,J9[2],L3[3],Y,PD1[9],N9[11]
Dim 2%,B[24],D8,H0[12],H5[16],L4[3],L6[5],L9[1],S5,S8,X,X1,CURDATE
Dim 2%,TRUCK,A3[2],ORD,PT,DT3[1],JDATE,JWDATE
Dim 3%,A[6],J,J1,T9[20],X2,X3,X4,S0[1],T2[25],HAZ$[40],S3[17]
Dim A1$[30],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],K5$[50],K8$[50]
Dim J7$[40],J9$[50],K1$[55],K2$[60],K3$[55],L1$[60],L2$[20],ZONE$[2]
Dim S1$[118],S2$[20],T2$[8],T9$[26],X$[20],TRUCK$[50]
Dim V0$[10],P9$[50],K12$[50],DESC$[30],K9$[50],CNAME$[30],ARDATE$[8]
Dim DELV_DATE$[20],WEEKDAY_$[10],begTruck,endTruck
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
!
 ! Dim U_TRUCK$[1000][10]
 Dim U_ZONE$[1000][10]
 Dim blockid$[100]
  !!
If Err 0 Rem
If Err 0 Gosub ERR_TRAP
For J = 2 To 12
  Read J1 \ If J1 = -1 Goto L_825
  Read #1,88,J1;J$;
  Ropen #J,J$
L_825: Next J
Mat Read #1,19,50;P9$;
Read #1,3,0;CNAME$;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,3,172;CURDATE;
Data "1920","1840","1856","1888","1792"
Data "1872","1808","-1 ","1728","2784","672"

If Err 0 Let J7[1] = Spc(8)
J7[1] = 0 \ J7 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
If J7[1] If J7[1] <> 49 Gosub ERR_TRAP
J7 = 55 \ If J7[1] Let J7 = 23
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!

 call dxget("U_JDATE",tmp1$)  !delivery date
 call dxget("U_WH",tmp$) \ WH = tmp$  !warehouse
 call dxget("U_ORDERS",tmp$) \ Let S8 = tmp$ ! status of orders to include
 !validations delivery date
tmp$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
J1 = tmp$
X2 = J1 \ Gosub L_7700
DELV_DATE$ = " ",DELV_DATE$ \ DELV_DATE$ = X$
Gosub L_6900
WEEKDAY_$ = X$[9]
D8 = J1
X2 = D8 \ Gosub L_7820 \ If errFlag = 1 let e$ = "Invalid date !!" \ error 10000
JDATE = X2
X2 = D8 \ Gosub L_7700
F = Z9 + 1 \ If F < 1 or F > 7 let e$ = "Invalid date!!" \ error 10000
!!
K1$ = K2$
J1 = 90 \ J2 = 0
!!
!!Validations warehouse
If WH <= 0 Or WH > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000
!!
  If P9$[45,45] = "Y" let S8 = 2
!!clearing sort file...
K1$ = " ",K1$
Search #9,3,1;K1$,V1,E
while not(E)
  Search #9,5,1;K1$,V1,E
  Search #9,3,1;K1$,V1,E
wend
! TRUCK handled via a range now
!
! K1$ = " ",K1$
! truck: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
! If E Goto exitSortTruck!!!!!
! Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
! If T2$[F,F] <> "Y" Goto truck
! J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
! Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
! Goto truck
! exitSortTruck:
! K1$ = "{" 
! TRUCKCNT = 0
! For I = 6 To 20
!   Search #9,3,1;K1$,V1,E 
!   If E Goto exitTruck
!   If K1$[1,1] <> "{" Goto exitTruck
!   U_TRUCK$[TRUCKCNT] = trim$(K1$[2])
!   TRUCKCNT = TRUCKCNT + 1
!   If I = 20 Let I = 5
! Next I
! exitTruck:
!!ZONE 
K1$ = " ",K1$
ZONE: Search #2,3,1;K1$,V1,E 
If E Goto exitSortZone!!!!
Mat Read #2,V1,36;T2$;
If T2$[F,F] <> "Y" Goto ZONE
J4$ = " ",J4$ \ J4$ = "}",K1$
Search #9,4,1;J4$,V1,E
Goto ZONE
exitSortZone:
ZONECNT = 0
K1$ = "}"
For I = 6 To 20
  Search #9,3,1;K1$,V1,E 
  If E Goto exitZone
  If K1$[1,1] <> "}" Goto exitZone
  U_ZONE$[ZONECNT] = trim$(K1$[2])
  ZONECNT = ZONECNT + 1
  If I = 20 Let I = 5
Next I
exitZone:
Call getglobals("blockx",0,blockid$)

 If blockid$ = "202msd"

	Call env(2,"NEXTBLOCK","202msd2")
	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
		
 End If
 ! must be 202msd2
 call dxget("BEG_TRUCK", tmp$) \ begTruck = tmp$
 call dxget("END_TRUCK", tmp$) \ endTruck = tmp$
 if tmp$ = "" endTruck = 999999
 call dxget("ALLZONES", tmp$) \ allZones = tmp$
 
 If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

if not(allZones) ! if all zones, leave all zones in sort file
	!clearing sort file...
	K1$ = " ",K1$
	Search #9,3,1;K1$,V1,E
	While Not(E)
		Search #9,5,1;K1$,V1,E
		Search #9,3,1;K1$,V1,E
	Wend
	! TRUCK handled via a range now
	!
	! call dxget("U_TRUCKCNT",tmp$)
	!
	! TRUCKCNT = tmp$
	! for i = 0 to TRUCKCNT -1
	! 	call dxget("TRUCKS" + str$(i),tmp$)
	! 	tmp$ = "on"!!!dci2
	! 	if tmp$ <> ""  !!on
	! 		TRUCK = U_TRUCK$[i]
	! 		J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	!         Search #9,4,1;J4$,V1,E
	! 	end if
	! Next i
	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		tmp$ = "on"!!!dci2
		if tmp$ <> ""
			ZONE$ =  U_ZONE$[i]
			J4$ = " ",J4$ \ J4$ = "}",ZONE$
			Search #9,4,1;J4$,V1,E
		end if
	Next i
end if ! if not(allZones)

!Ropen #13,"PRTDFLT"
!PT = Spc(6) \ If PT And PT < Chf(13) Mat Read #13,PT,0;PD1;
!L_900: Rem ============= ENTER DELIVERY DATE
!Print @0,0;'CS';"MATERIAL SAFETY DATA SHEET LISTING";@61,0;"MX202MSD - REV. 1.1"
!L_920: Print @0,2;"ENTER DELIVERY DATE: ";'CE';
!J0$ = "50000621 2" \ J1 = CURDATE;J5$ = "ENTER DELIVERY DATE OR <CR> FOR TODAY'S DATE"
!Gosub L_7000 \ If Not(J1) Goto OUTEND
!X2 = J1 \ Gosub L_7700
!Gosub L_6900
!WEEKDAY_$ = X$[9]
!D8 = J1
!X2 = D8 \ Gosub L_7820 \ Goto L_920
!JDATE = X2
!X2 = D8 \ Gosub L_7700
!Print @36,2;WEEKDAY_$;
!DELV_DATE$ = " ",DELV_DATE$ \ DELV_DATE$ = X$
!F = Z9 + 1 \ If F < 1 Goto L_1060
!If F > 7 Goto L_1060
!L_1010: 
!Print @0,4;'CE';"DATE OKAY? (Y/N/E) "; \ Input ""J$
!If J$ = "E" Goto OUTEND
!If J$ = "Y" Goto L_1070
!If J$ <> "N" Goto L_1010
!Goto L_900
!L_1060: Print @0,22;"INVALID DATE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!L_1070: K1$ = K2$
!J1 = 90 \ J2 = 0
!L_1090: Rem =========== SELECT WAREHOUSE
!Print @0,4;'CL';"WAREHOUSE:";
!J5$ = "ENTER WAREHOUSE NUMBER OR <CR> FOR DEFAULT"
!J1 = PD1[2];J0$ = "3000021004";J2$ = "##"
!Gosub L_7000
!WH = J1
!If Not(WH) Or WH > 99 Goto L_1090
!Print @0,4;'CL';"CLEARING SORT FILE..."
!K1$ = " ",K1$
!L_1170: Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1210
!Search #9,5,1;K1$,V1,E !\ If E Gosub ERR_SEARCH
!Goto L_1170
!L_1210: Rem ============== SELECT TRUCK(S)
!L_1220: Print @0,4;'CE';"ENTER TRUCK TO PRINT OR <CR> FOR ALL TRUCKS THAT SHIP FOR THIS DATE ";
!Input ""TRUCK$
!If TRUCK$ = "" Goto L_1270
!TRUCK = TRUCK$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1220
!Gosub L_1330 \ Goto L_1600

!L_1270: Rem ================ SORT THE TRUCKS THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1290: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1360!!!!!
!Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!If T2$[F,F] <> "Y" Goto L_1290
!Gosub L_1330 \ Goto L_1290

!L_1330: Rem INSERT SELECTED TRUCK INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 

!L_1360: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!
!Print @0,4;'CE';"THE FOLLOWING TRUCKS SHIP ON";WEEKDAY_$
!K1$ = "{" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1480
!  If K1$[1,1] <> "{" Goto L_1480
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1480
!  If I = 20 Let I = 5
!Next I

!L_1480: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_1600
!If J$ <> "N" Goto L_1480
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1360
!TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1480
!K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1360

!L_1600: Rem ============= SELECT ZONE(S)
!Print @0,4;'CE';"ENTER ZONE TO PRINT OR <CR> FOR ALL ZONES THAT SHIP FOR THIS DATE ";
!Input ""ZONE$
!If ZONE$[1,2] = "  " Or ZONE$ = "" Goto L_1660
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Gosub L_1720 \ Goto L_2050

L_1660: Rem =============== SORT THE ZONES THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1680: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1820!!!!
!Mat Read #2,V1,36;T2$;
!If T2$[F,F] <> "Y" Goto L_1680
!Gosub L_1720 \ Goto L_1680

!L_1720: Rem INSERT SELECTED ZONE INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "}",K1$
!Search #9,4,1;J4$,V1,E !\ If E Gosub ERR_SEARCH
!Return 

!L_1750: Rem ================ PROMPT FOR ORDERS BEEN PRINTED
!S8 = 2 \ If P9$[45,45] = "Y" Return 
!L_1770: Print @0,22;'CE';"HAVE THE ORDERS BEEN PRINTED? (Y/N)  ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1770
!S8 = 1 \ If J$ = "Y" Let S8 = 2
!Return 

!L_1820: Rem ============ DISPLAY THE ZONES THAT SHIP
!Goto L_2050!!!dci2!!!!
!Print @0,4;'CE';"THE FOLLOWING ZONES SHIP ON";WEEKDAY_$
!K1$ = "}" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1930
!  If K1$[1,1] <> "}" Goto L_1930
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1930
!  If I = 20 Let I = 5
!Next I

!L_1930: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_2050
!If J$ <> "N" Goto L_1930
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1820
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1820

L_2050: Rem ============ FINISHED SELECTIONS
!Gosub L_1750
!Print @0,22;'CL';"SORTING....PLEASE WAIT...";
K1$ = " ",K1$;K1$[1,2] = S8 Using "##"
L_2110: Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2580
X2 = K1$[1,2] \ If S8 If X2 <> S8 Goto L_2580
Mat Read #3,V1,66;V0$;
Mat Read #3,V1,0;H0;
If S8 If S8 <> H0 Goto L_2580
Mat Read #3,V1,104;H5;
If H5[7] = 21 Or H5[7] = 22 Goto L_2110
Mat Read #7,H0[3],8;T2;
Gosub L_5110
If Not(SW[6]) If N9[0] Goto L_2110
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 0
JWDATE = X2
If JWDATE > JDATE Goto L_2110
Mat Read #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
K3$ = " ",K3$ \ K3$ = "}",S2$[19,20]
Search #9,2,1;K3$,V2,E !\ If E > 1 Gosub ERR_SEARCH
If E Goto L_2110
! TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
! Search #9,2,1;TRUCK$,V2,E !\ If E > 1 Gosub ERR_SEARCH
! If E Goto L_2110
if s5 < begTruck or s5 > endTruck goto L_2110
Mat Read #3,V1,78;H4;
J$ = " ",J$ \ J$ = H0[7] Using "######"
If WH <> H4[2] Goto L_2110
K5$ = " ",K5$
K5$[1,6] = H0[7] Using "######"
L_2340: Search #5,3,1;K5$,R5,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2110
ORD = K5$[1,6]
If ORD <> H0[7] Goto L_2110
If (H5[7] = 21 Or H5[7] = 22) And K5$[7,9] = "   " Goto L_2340
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
Mat Read #5,R5,260;S3;
If L3 = 1 Goto L_2340
Mat Read #6,L4,834;A3;
Mat Read #6,L4,744;HAZ$;
If S3[17] = 0 Goto L_2340
J4$ = " ",J4$ \ J4$[1,6] = S5 Using "######"
J4$[7,12] = S3[17] Using "######"
K9$ = " "
J4$[19,24] = R5 Using "######"
Search #9,4,1;J4$,R5,E !\ If E Gosub ERR_SEARCH
J4$ = " ",J4$ \ J4$[1,1] = "*" \ J4$[2,7] = S5 Using "######"
J4$[8,13] = 9000 - H4[1] Using "######"
J4$[14,19] = H0[4] Using "######"
J4$[20,25] = R5 Using "######"
Search #9,4,1;J4$,R5,E !\ If E Gosub ERR_SEARCH
Goto L_2340
L_2580: Rem =========== SET UP TO PRINT
SHEET = -1
BKTRUCK = -1
LINECT = 99
L_2620: Search #9,3,1;K9$,R9,E
If E Goto L_3000
If K9$[1,1] >= "{" Goto L_3000
If K9$[1,1] <> "*" Let TRUCK = K9$[1,6] Else Let TRUCK = -99
If BKTRUCK = -1 Let BKTRUCK = TRUCK
If K9$[1,1] = "*" Goto L_2620
If BKTRUCK <> TRUCK Gosub L_4000
Mat Read #5,R9,8;L3;
Mat Read #5,R9,16;L4;
Mat Read #5,R9,260;S3;
L_2730: If SHEET = -1 Let SHEET = S3[17]
If SHEET <> S3[17] Gosub L_2770
Gosub L_2810
Goto L_2620
L_2770: Gosub L_5800
Gosub L_5000
Return 
L_2810: Rem TOTALS
T9[0] = T9[0] + 1
T9[1] = T9[1] + 1
Return 
L_2850: Rem GET SHEET DESC
K12$ = " ",K12$
K12$ = SHEET Using "#########"
Search #12,2,1;K12$,R12,E
If E Let DESC$ = "SHEET NOT ON FILE !! " \ Goto L_2730
Mat Read #12,R12,0;DESC$;
Return 
L_2920: Rem GET CUSTOMER
K8$ = " ",K8$
K8$[1,6] = CUST Using "######"
Search #8,2,1;K8$,R8,E
If E Let A1$ = "CUSTOMER NOT ON FILE !! " \ Goto L_2980
Mat Read #8,R8,30;A1$;
L_2980: Return 
L_3000: Rem PRINT FOR PART TWO
If T9[0] Gosub L_5800
If T9[0] Gosub L_5000
Gosub L_4000
LINECT = 99
STRUCK = -99;SCUST = -99
K9$ = " ",K9$
K9$[1,1] = "*"
L_3080: Search #9,3,1;K9$,R9,E
If E Gosub L_9100
If K9$[1,1] >= "{" Or K9$[1,1] <> "*" Goto L_9100
Mat Read #5,R9,8;L3;
Mat Read #5,R9,16;L4;
Mat Read #5,R9,260;S3;
X2 = TRUCK
TRUCK = K9$[2,7]
If X2 <> TRUCK Let PRTRUCK = 99 \ LINECT = 999
X9 = CUST
CUST = K9$[14,19]
If X9 <> CUST Let PCUST = 99
X9 = CSTOP
TSTOP = J4$[8,13];CSTOP = Abs(TSTOP - 9000)
If X9 <> CSTOP Let PSTOP = 99
Gosub L_6000
Gosub L_2920
Gosub L_5500
Goto L_3080
L_4000: Rem PRINT TOTAL SHEETS ON TRUCK
If T9[0]
  Gosub L_5800
  Gosub L_5000
End If 
Print #0;" "
Print #0;"TOTAL SHEETS FOR TRUCK  ";T9[1]
T9[1] = 0
LINECT = 99;BKTRUCK = TRUCK
SHEET = -1
Return 
L_5000: Rem PRINT LINE
Gosub L_2850
If PRTRUCK Print #0; Using "#####"; Tab 0;BKTRUCK; \ PRTRUCK = 0
Print #0; Using "######"; Tab 8;SHEET;
Print #0; Tab 20;DESC$;
Print #0; Using "######"; Tab 55;T9[0]
Print #0;" " \ LINECT = LINECT + 1
T9[0] = 0;SHEET = S3[17]
Return 
L_5110: Rem UNPACK T2[21] TO N9[x]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_5500: Rem PRINT LINE
SHEET = S3[17] \ Gosub L_2850
If PASS If PCUST Print #0;" "
If PRTRUCK Print #0; Using "#####"; Tab 0;TRUCK; \ PRTRUCK = 0
If PSTOP Print #0; Using "###### "; Tab 8;CSTOP; \ PSTOP = 0
If PCUST Print #0; Using "###### "; Tab 20;CUST;A1$[1,30]; \ PCUST = 0
Print #0; Using "###### "; Tab 60;S3[17];DESC$
PASS = 99
Return 
L_5800: Rem HEADINGS ROUTINE
LINECT = LINECT + 1 \ If LINECT < J7 Return 
!If J2 If J7[1] Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J7[1]) Print #0;"\14\";
J2 = J2 + 1 \ LINECT = 6
If Not(J7[1]) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 202MSD - ";Msc$(3);
Print #0; Tab 46;"MATERIAL SAFETY DATA SHEET TRUCK LIST"
Print #0; Tab 57;"FOR ";DELV_DATE$
Print #0;" "
Print #0; Tab 55;"TOTAL"
Print #0;"TRUCK#";
Print #0; Tab 8;"SHEET #"; Tab 20;" DESCRIPTION "; Tab 55;"NEEDED";
Print #0;" "
Print #0;" "
PRTRUCK = 99
Return 
L_6000: Rem HEADINGS ROUTINE PART 2
LINECT = LINECT + 1 \ If LINECT < J7 Return 
!If J2 If J7[1] Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J7[1]) Print #0;"\14\";
J2 = J2 + 1 \ LINECT = 6
If Not(J7[1]) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 202MSD / 2 - ";Msc$(3);
Print #0; Tab 46;"MATERIAL SAFETY DATA SHEET TRUCK CUSTOMER LIST"
Print #0; Tab 57;"FOR ";DELV_DATE$
Print #0;"TRUCK#";
Print #0; Tab 8;"STOP #"; Tab 20;"CUSTOMER "; Tab 20;" DESCRIPTION ";
Print #0; Tab 60;"SHEET #    DESCRIPTION "
Print #0;" "
PRTRUCK = 99;PCUST = 99;PSTOP = 99
Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!L_7105:! If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!L_7145: For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!  If J9$[J8,J8] = " " Goto L_7235
!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next J8
!If J0 = 5 Goto L_7265
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
errFlag = 0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1 !Return 
X2 = X$[1,5] \ Return !1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
OUTEND: Rem END
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  ! External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"202msd.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End
!Print 'CS'
!Chain "MX000C"
L_9100: Rem NOW CHAIN TO PRINT PROGRAM
goto OUTEND !!!
!Chain "MX000C"
!Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End

Rem {end rtn.error.s}
