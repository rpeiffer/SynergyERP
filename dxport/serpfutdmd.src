!"serpfutdmd" === description  synergy erp Future Demand
! 
! loadsave -w -n 100,10 -o prog/dxport/serpfutdmd.dl4 src/serpfutdmd.src
!  07/24/2009 started
!
include "src/copyright.inc"
!
include "src/inc/filecust.inc" ! customer
include "src/inc/fileprod.inc"
include "src/inc/fileprodwhse.inc" ! prodwhse
include "src/inc/fileccodes.inc" 
include "src/inc/filefdfrcst.inc" ! fut demand
Include "src/inc/filewhinfoz.inc" ! wh info file (rec 0 fix)

! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus

External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,JDate$,FormatDate2$
Declare External Function ChkAltItem$

Declare Intrinsic sub programdump,env,Logic
Declare Intrinsic Sub DateToJulian, JulianToDate

External Lib "libprod.lib"
Declare External Sub ProdList

External Lib "libcustlist.lib"
Declare External Sub CustList

External Lib "ubsprconv.dl4"
Declare External Function XUnit$

External Lib "libprodconv.lib"
Declare External Function ConvProdAmount

! internal subs/function
Declare Sub OpenFiles,UpdateLog,sndsys
Declare Sub Snddata,Deldata,Sbmdata
Declare Sub GetCust,Getprod

OPTION GOSUB NESTING 16  ! Default is 8
Try
	Option String Redim is legal ! in case subs dim/use same names
	
	dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
	dim action$[30],options$[30],userid$[8],b$[200],action1$[30],Action2$[30]
	Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000]
	dim tmp$[1200],tmp1$[300],Msgdesc$[150],X$[20]
	dim Message$[200],WebStr$[2000],SessionID$[200]
	Dim Prod$[12],FKey$[60],P9$[50],P60$[50],P61$[256]
	Dim QMask$[20],PMask$[20],Key1$[60],UA2$[50],CMDKey$[60]
	Dim Mask34$[10],SDate$[8],J$[60]
	dim Blank$[100] \ Blank$=" ",Blank$
	Dim 1%,PRC,COMM_LEV,CCC,CUC,PWC,FDC,X1[9]
	dim 1%,cost_lev[4],Whse,debug,cnvtu[2],2%,Q0[1]
	Dim 2%,X2[9],UA2[2],X2[9]
	Dim 2%,maxcnt \ maxcnt=50 ! init max records in arrays for list
	Dim 3%,PRR,CUR,FDR,PWR,X3[9]
	Dim 3%,R[99],O1,UB0[16],Amount,CNVTA
	dim List$[maxcnt,1000] ! for .net (larger size - ZLines)
	dim slist$[maxcnt,1000] ! second list
	dim dmsg$[256],dblog$[60] \ dblog$="files/6/fdmd.log" ! fields for DEBUG

	Dim PR. as prod
	Dim pw. as prodwhse
	Dim cust. as cust
	Dim fdmd. as fdfrcst
	Dim whi. as whinfo

	Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)

	! call dxopen() ! done in pomenu - for standalone run
	call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
	
	debugDetail=0;debug=0 ! can do debug text by changing both to 1
	If debugDetail
		debug=1
		tmp$="serpfutdmd"
		dmsg$[1,50]="-",dmsg$ \ Call updatelog(debug)               
		dmsg$="start...program "+tmp$ \ Call updatelog(debug)
	Endif
	Action$=UCase$(Action$)
	ACtion$=RTrim$(Action$) ! make sure UPPERCASE and No blanks at end
	Action1$=UCase$(action1$)
	Action1$=RTrim$(action1$) ! UC and trimmed
	Action2$=UCase$(action2$)
	Action2$=RTrim$(action2$) ! UC and trimmed
	if debugdetail
		dmsg$="SERPFUTDMD ACTION "+action$
		If Action1$<>"" let dmsg$=dmsg$+" ACTION1 "+action1$ 
		if Action2$<>"" let dmsg$=dmsg$+" ACTION2 "+action2$
		Call updatelog(debug)
	Endif
	call OpenFiles() ! open all needed files
	call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost security
	Mat Read #ctlc,19,50;P9$;
	Mat Read #ctlc,60,50;P60$;
	Mat Read #ctlc,61,0;P61$;
	Mat Read #CTLC,115,40;Q0;
	MAT  READ #1,0,100;SDATE$;                           
	LET FYEAR=SDATE$[7,8];MTH=SDATE$[1,2]                  
	IF FYEAR>67 LET FYEAR=FYEAR+1900                       
	IF FYEAR<68 LET FYEAR=FYEAR+2000                       
	LET MTH=MTH+1 \ IF MTH>12 LET MTH=MTH-12;FYEAR=FYEAR+1
	! P9$[10,10]="N" ! a test only
	Mask34$="###.####" ! 3.4 mask
	QMask$="---------#.##"
	tmp$="#",tmp$
	If q0[1]<=0 Let Q0[1]=2
	If Q0[1] Let Pmask$="-----------#.",tmp$[1,Q0[1]]     !price mask
	! get the Usercntrl Rec #
	If Userid$="" or UserID$[1,2]="  "
		Call DXGet("S_USER.ID",tmp$) ! get from system variable
	Else
		tmp$=UserID$
	Endif
	Let UserID$=UCase$(tmp$) ! make sure it's UPPERCASE as that's what PM uses
	Let Key1$=UserID$+"          " ! space fill it
	UCC = OpenFile(-9988, intCo) \ if UCC=-1 Error 42
	Key1$[11]="" ! cut to length
	Search #UCC,2,1;Key1$,Rec,E
	If Not(E)
	  Let SCR=Rec
	  Mat Read #ucc,scr,200;UA2;
	  Mat read #ucc,scr,336;Ua2$;
	  Read #ucc,scr,394;comm_lev;
	Else
	  Let SCR=0;comm_lev=0 ! 
	  UA2[0]=0;UA2$=" ",UA2$
	Endif
	Close #UCC
	! GET additional user data flags
	REM UNPACK A2[0] TO B0[]                         
	FOR X1=0 TO 15                                          
		LET O1=2^X1 \ LET M1=1
		! CALL $LOGIC,M1,O1,A2[0],B0[X1] ! ub
		Call Logic(m1,O1,UA2[0],UB0[X1])
		LET UB0[X1]=SGN(UB0[X1])
	NEXT X1   
	! call dxsave(0,"tmp/fdmdsv.txt!") ! save web send data
	ReturnStatus=0
	Message$="Action 1 not found"
  select case action1$

    Case "SYSDATA" ! sys flags,droplists					doc=FDMD-GetSysData.doc
		returnstatus=1
		message$="OK"
		Call Sndsys()
		call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		if debugdetail
			dmsg$="Sent flags & droplists" \ Call updatelog(debug)
		Endif
		! end of sysdata
	Case "CUSTSRCH"		!									doc=FDMD-CustSrch.doc
		Let ReturnStatus=1
		Message$="OK"
		Clear List$[]
		Call CustList(e$,IntCo,List$[],maxcnt,ctlc,cuc,debugdetail,dblog$,UserId$)
		If E$<>""
		  Let ReturnStatus=0
		  Message$=E$
		Endif
		call AddToStr(e$,rstr$,List$[])
		
		if debugdetail
			dmsg$="Customer Search sent "+Message$ \ Call updatelog(debug)
		Endif
		! end of custsrch
	Case "GETCUST" ! get cust name							doc=FDMD-GetCustomer.doc
		Let ReturnStatus=1
		Message$="OK"
		Clear List$[]
		call getcust()
		call AddToStr(e$,rstr$,List$[])
		
		if debugdetail
			dmsg$="Customer "+Str$(Cust)+" sent "+Message$ \ Call updatelog(debug)
		Endif
		! end of GETCUST
	Case "PRODSRCH"	!										doc=FDMD-ProdSrch.doc
		!
		Let ReturnStatus=1
		Message$="OK"
		Clear List$[]
		X2=0 ! normal scan
		Call ProdList(e$,IntCo,List$[],maxcnt,ctlc,prc,pwc,x2,debugdetail,dblog$,UserId$)
		If E$<>""
		  Let ReturnStatus=0
		  Message$=E$
		Endif
		call AddToStr(e$,rstr$,List$[])
		
		if debugdetail
			dmsg$="Product Search sent "+Message$ \ Call updatelog(debug)
		Endif
		! end of prodsrch
	Case "GETPROD" ! get Product Desc						doc=FDMD-GetProduct.doc
		Let ReturnStatus=1
		Message$="OK"
		Clear List$[]
		call getprod()
		call AddToStr(e$,rstr$,List$[])
		
		if debugdetail
			dmsg$="Product "+Prod$+" sent "+Message$ \ Call updatelog(debug)
		Endif
		! end of GETPROD
	Case "GETDATA" ! file data								doc=FDMD-GetData.doc
		returnstatus=1
		message$="OK"
		call Snddata()
		call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		if debugdetail
			dmsg$="Sent Data "+FKey$+" "+Message$ \ Call updatelog(debug)
		Endif
		! end of GETDATA
	Case "DELDATA" ! commod delete							doc=FDMD-DeleteData.doc
		returnstatus=1
		message$="OK"
		call Deldata()
		if debugdetail
			dmsg$="Delete Data "+FKey$+" "+Message$ \ Call updatelog(debug)
		Endif
		! end of DELDATA
	Case "SBMDATA" ! header changes							doc=FDMD-SubmitData.doc
		returnstatus=1
		message$="OK"
		Call Sbmdata()
		if debugdetail
			dmsg$="Submit Data "+FKey$+" "+Message$ \ Call updatelog(debug)
		Endif
		! end of SBMDATA

		! call programdump("tmp/fdmdlog1!","")
  End Select
  SerpFDMDone: ! finished
  ! status section                                                       
  Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)                 
  Call AddToStr(e$,rstr$,WebStr$)                                        
  Call SetOutPut(e$,rstr$)       
  if debugdetail
		dmsg$="End of Program SERPFUTDMD" \ Call updatelog(debug)
  Endif
else
 include "src/callmainerrnet.inc"
end try
end  ! end of Main
!
!--------------------------------------------------------------------

! subs start now
!------------------------------------------------------------------------------------------
Sub OpenFiles()

 Try
    !
	CUC = OpenFile(-1808,IntCo) \ if cmc=-1 Error 42 ! cust
	PRC = OpenFile(-1792,intCo) \ If PRC = -1 Error 42 ! prod
	PWC = OpenFile(-1744,intco) \ if PWC=-1 Error 42 ! prodwhse
	CCC = OpenFile(-1728,Intco) \ if ccc=-1 Error 42 ! umcode
	FDC = openFile(9942,IntCo) \ if FDC=-1 Error 42 ! forecast demand
	WHI = OpenFile(-2768,IntCo) \ if whi = -1 Error 42 ! whinfo
	if debugdetail
		dmsg$="Files Opened" \ Call updatelog(debug)
    Endif
 else
    include "src/callsuberr.inc"
  end try
end sub ! openfiles
!
!------------------------------------------------------------------------------------------
Sub sndsys()
! send flags & droplists
 Try
	Clear List$[]
	tmpcnt=maxcnt
	List$[0]=bsdel$,"DEFAULTS",fdel$
	List$[1]="DFTDATE",fdel$
	row=2
	tmp$=Str$(MTH)+"/"+Str$(FYEAR)
	webstr$=tmp$,fdel$ ! default mm/yyyy
	
	List$[row]=webstr$
	row=row+1
	If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	List$[row]=esdel$ ! end of section
	call AddToStr(e$,rstr$,List$[]) ! add droplist to string
	Clear List$[]
	! send a UM code list
	List$[0]=bsdel$,"UMLIST",fdel$
	List$[1]="ID",fdel$,"DESC",fdel$
	List$[2]="1",fdel$,"Stocking UM",FDEL$
	List$[3]="2",fdel$,"Selling UM",fdel$
	List$[4]="3",fdel$,"Purchasing UM",fdel$
	List$[5]=esdel$
	call AddToStr(e$,rstr$,List$[]) ! add droplist to string
	! send whse list
	Clear List$[]
	List$[0]=bsdel$,"WHSELIST",fdel$
	List$[1]="ID",fdel$,"NAME",fdel$
	row=2
	for x=0 to 98 ! translate to 1-99
		Try 
			read record #WHI,x,0;whi.;
		Else
			clear whi.
		End try
		! whi.whname$="WHSE "+Str$(X+1)   !!!! WANTED ALL WHSES SENT! REMOVE WHEN COMPLETE!
		tmp$=RTrim$(whi.WhName$)
		if tmp$<>""
			webstr$=Str$(X+1),fdel$,tmp$,fdel$
			List$[row]=webstr$
			row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		Endif
	Next x
	List$[row]=esdel$
	! calling rtn to addtostr
 else
    include "src/callsuberr.inc"
  end try
end sub ! sndsys
!
!------------------------------------------------------------------------------------------
Sub updatelog(debug)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " UID "+RTrim$(Userid$)+" " + dmsg$ + "'' >> " + dblog$
End Sub 
! 
!--------------------------------------------------------------------
Sub Snddata()
! send file data
 Try
	Clear List$[]
	tmpcnt=maxcnt
	Call dxget("CUSTID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Customer Code Passed"
		goto GComdone
	Endif
	X2=tmp$
	if x2<1 or x2>999999 or fra(x2)
		returnstatus=0
		Message$="Invalid Customer Code Passed"
		goto GComdone
	Endif
	Key1$=X2 using "######"
	key1$[7]="" ! cut to length
	Cust=x2
	CUR=filegetcust(e$,CUC,"=",1,Key1$,cust.)
	if CUR<=0
	  If Cust<>999999
		returnstatus=0
		Message$="Customer Code Not Found"
		goto GComdone
	  Else
		Clear cust.
		cust.name$="ALL CUSTOMERS"
	  Endif
	Endif
	Call dxget("PRODID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Product Code Passed"
		goto GComdone
	Endif
	Prod$=tmp$
	tmp$=ChkAltItem$(e$,IntCo,Prod$,Cust)
	If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
	PRR=filegetprod(e$,PRC,"=",1,Prod$,pr.)
	if PRR<=0
		returnstatus=0
		Message$="Product Code Not Found"
		goto GComdone
	Endif
	call dxget("WHSEID",tmp$)
	x2=tmp$
	if x2<1 or x2>99 or fra(x2)
		returnstatus=0
		Message$="Invalid Warehouse ID Passed"
		goto GComdone
	Endif
	Whse=x2
	call dxget("FDATE",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="No Date was Passed"
		goto GComdone
	Endif
	! parse date (should be MM/YYYY)
	J$=RTrim$(tmp$)
	LET POS0=1;POS1=0
	SEARCH J$[POS0],"/",POS1
	IF POS1<1 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid date format (MM/YYYY)"
		goto GComDone
	Endif
	LET POS0=POS1-POS0
	LET MNTH=J$[1,POS0];X$=MNTH USING "&&"
	LET FYEAR=J$[POS0+2];X$[3]=FYEAR USING "&&&&"
	LET MNTH=X$[1,2]
	IF MNTH<1 OR MNTH>12 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid month (1-12)"
		goto GComDone
	Endif
	LET FYEAR=X$[3] \ IF FYEAR>=0 AND FYEAR<68 LET FYEAR=FYEAR+2000
	IF FYEAR>67 AND FYEAR<100 LET FYEAR=FYEAR+1900
	IF FYEAR<1990 OR FYEAR>2060 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid year (Range: 1990-2060)"
		goto GComDone
	Endif
	LET J$[1,2]=MNTH USING "&&";J$[3]=FYEAR USING "&&&&"
	LET X$=J$[3]+J$[1,2]
	fdate=x$
	call dxget("UMID",tmp$)
	x2=tmp$
	if x2<1 or x2>3 or fra(x2)
		returnstatus=0
		Message$="Invalid UM (1-3)"
		goto GComDone
	Endif
	umid=x2
	FKey$=" ",FKey$
	FKey$[1,12]=Prod$+Blank$
	FKey$[13,14]=Whse Using "##"
	FKey$[15,20]=FDate Using "&&&&&&"  ! YYYYMM
	FKey$[21]=Cust Using "######"
	FDR=filegetfdfrcst(e$,FDC,"=",1,FKey$,fdmd.)
	If FDR<=0
		clear fdmd.
	Endif
	fdmd.ProdCode$=Prod$+Blank$
	fdmd.Whse=whse
	fdmd.Date=FDate
	fdmd.CustCode=cust
	! okay send list
	List$[0]=bsdel$,"FUTDEMD",fdel$
	Webstr$="CUSTID",fdel$,"NAME",fdel$,"PRODID",fdel$,"DESC1",fdel$,"UMID",fdel$
	Webstr$=Webstr$,"UMDESC",fdel$,"WHSEID",fdel$,"FDATE",fdel$
	Webstr$=webstr$,"UNFRCST",fdel$,"REASON",fdel$,"NEWREC",fdel$
	List$[1]=webstr$
	UMREC=0
	if UMID=1 let umrec=pr.UMStkDefault
	if UMID=2 let umrec=pr.UMSellDefault
	if UMID=3 let umrec=pr.UMPurchDefault
	webstr$=Str$(fdmd.Custcode),fdel$,RTrim$(cust.Name$),FDEL$
	webstr$=webstr$,fdmd.ProdCode$,fdel$,RTrim$(pr.Desc1$),fdel$
	tmp$=XUnit$(Umrec,ccc)
	webstr$=webstr$,Str$(UMID),fdel$,RTrim$(tmp$),fdel$
	webstr$=webstr$,Str$(fdmd.Whse),fdel$
	x$=fdmd.Date Using "&&&&&&"
	tmp$=X$[5,6]+"/"+X$[1,4]
	webstr$=webstr$,tmp$,fdel$
	cnvtu[0]=0;cnvtu[1]=umrec;cnvtu[2]=1
	cnvta=fdmd.ForecastQty
	X3=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,PR.)
	webstr$=webstr$,LTrim$(X3 Using QMask$),fdel$
	webstr$=webstr$,RTrim$(fdmd.Reason$),fdel$
	tmp$="N" \ if FDR<=0 let tmp$="Y"
	webstr$=webstr$,tmp$,fdel$
	List$[2]=webstr$
	List$[3]=esdel$
	! caller to addtostr
	GComdone: ! done
 else
    include "src/callsuberr.inc"
  end try
end sub ! Snddata
!
!------------------------------------------------------------------------------------------
Sub Deldata()
! Delete commodity data
 Try
	Call dxget("CUSTID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Customer Code Passed"
		goto DComdone
	Endif
	X2=tmp$
	if x2<1 or x2>999999 or fra(x2)
		returnstatus=0
		Message$="Invalid Customer Code Passed"
		goto DComdone
	Endif
	Key1$=X2 using "######"
	key1$[7]="" ! cut to length
	Cust=x2
	CUR=filegetcust(e$,CUC,"=",1,Key1$,cust.)
	if CUR<=0
	  If Cust<>999999
		returnstatus=0
		Message$="Customer Code Not Found"
		goto DComdone
	  Else
		Clear cust.
		cust.name$="ALL CUSTOMERS"
	  Endif
	Endif
	Call dxget("PRODID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Product Code Passed"
		goto DComdone
	Endif
	Prod$=tmp$
	tmp$=ChkAltItem$(e$,IntCo,Prod$,Cust)
	If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
	PRR=filegetprod(e$,PRC,"=",1,Prod$,pr.)
	if PRR<=0
		returnstatus=0
		Message$="Product Code Not Found"
		goto DComdone
	Endif
	call dxget("WHSEID",tmp$)
	x2=tmp$
	if x2<1 or x2>99 or fra(x2)
		returnstatus=0
		Message$="Invalid Warehouse ID Passed"
		goto DComdone
	Endif
	Whse=x2
	call dxget("FDATE",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="No Date was Passed"
		goto DComdone
	Endif
	! parse date (should be MM/YYYY)
	J$=RTrim$(tmp$)
	LET POS0=1;POS1=0
	SEARCH J$[POS0],"/",POS1
	IF POS1<1 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid date format (MM/YYYY)"
		goto DComDone
	Endif
	LET POS0=POS1-POS0
	LET MNTH=J$[1,POS0];X$=MNTH USING "&&"
	LET FYEAR=J$[POS0+2];X$[3]=FYEAR USING "&&&&"
	LET MNTH=X$[1,2]
	IF MNTH<1 OR MNTH>12 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid month (1-12)"
		goto DComDone
	Endif
	LET FYEAR=X$[3] \ IF FYEAR>=0 AND FYEAR<68 LET FYEAR=FYEAR+2000
	IF FYEAR>67 AND FYEAR<100 LET FYEAR=FYEAR+1900
	IF FYEAR<1990 OR FYEAR>2060 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid year (Range: 1990-2060)"
		goto DComDone
	Endif
	LET J$[1,2]=MNTH USING "&&";J$[3]=FYEAR USING "&&&&"
	LET X$=J$[3]+J$[1,2]
	fdate=x$
	FKey$=" ",FKey$
	FKey$[1,12]=Prod$+Blank$
	FKey$[13,14]=Whse Using "##"
	FKey$[15,20]=FDate Using "&&&&&&"  ! YYYYMM
	FKey$[21]=Cust Using "######"
	FDR=filegetfdfrcst(e$,FDC,"=",1,FKey$,fdmd.)
	If FDR>0
		! okay now Delete
		R=0
		R=fileupdatefdfrcst(e$,FDC,"d",FDR,fdmd.)
		if R<>0
			Returnstatus=0
			Message$="Search Error "+Str$(R)+" deleting "+FKey$
		Endif
	Endif
  DComDone: ! finished
 else
    include "src/callsuberr.inc"
  end try
end sub ! Deldata
!
!------------------------------------------------------------------------------------------
Sub Sbmdata()
! submit file data
 Try
	Call dxget("CUSTID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Customer Code Passed"
		goto SBComDone
	Endif
	X2=tmp$
	if x2<1 or x2>999999 or fra(x2)
		returnstatus=0
		Message$="Invalid Customer Code Passed"
		goto SBComDone
	Endif
	Key1$=X2 using "######"
	key1$[7]="" ! cut to length
	Cust=x2
	CUR=filegetcust(e$,CUC,"=",1,Key1$,cust.)
	if CUR<=0
	  If Cust<>999999
		returnstatus=0
		Message$="Customer Code Not Found"
		goto SBComDone
	  Else
		Clear cust.
		cust.name$="ALL CUSTOMERS"
	  Endif
	Endif
	Call dxget("PRODID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Product Code Passed"
		goto SBComDone
	Endif
	Prod$=tmp$
	tmp$=ChkAltItem$(e$,IntCo,Prod$,Cust)
	If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
	PRR=filegetprod(e$,PRC,"=",1,Prod$,pr.)
	if PRR<=0
		returnstatus=0
		Message$="Product Code Not Found"
		goto SBComDone
	Endif
	call dxget("WHSEID",tmp$)
	x2=tmp$
	if x2<1 or x2>99 or fra(x2)
		returnstatus=0
		Message$="Invalid Warehouse ID Passed"
		goto SBComDone
	Endif
	Whse=x2
	call dxget("FDATE",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="No Date was Passed"
		goto SBComDone
	Endif
	! parse date (should be MM/YYYY)
	J$=RTrim$(tmp$)
	LET POS0=1;POS1=0
	SEARCH J$[POS0],"/",POS1
	IF POS1<1 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid date format (MM/YYYY)"
		goto SBComDone
	Endif
	LET POS0=POS1-POS0
	LET MNTH=J$[1,POS0];X$=MNTH USING "&&"
	LET FYEAR=J$[POS0+2];X$[3]=FYEAR USING "&&&&"
	LET MNTH=X$[1,2]
	IF MNTH<1 OR MNTH>12 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid month (1-12)"
		goto SBComDone
	Endif
	LET FYEAR=X$[3] \ IF FYEAR>=0 AND FYEAR<68 LET FYEAR=FYEAR+2000
	IF FYEAR>67 AND FYEAR<100 LET FYEAR=FYEAR+1900
	IF FYEAR<1990 OR FYEAR>2060 ! GOTO GET_TIMEFRAME:
		returnstatus=0
		Message$="Invalid year (Range: 1990-2060)"
		goto SBComDone
	Endif
	LET J$[1,2]=MNTH USING "&&";J$[3]=FYEAR USING "&&&&"
	LET X$=J$[3]+J$[1,2]
	fdate=x$
	FKey$=" ",FKey$
	FKey$[1,12]=Prod$+Blank$
	FKey$[13,14]=Whse Using "##"
	FKey$[15,20]=FDate Using "&&&&&&"  ! YYYYMM
	FKey$[21]=Cust Using "######"
	FDR=filegetfdfrcst(e$,FDC,"=",1,FKey$,fdmd.)
	If FDR<=0
		clear fdmd.
	Endif
	fdmd.ProdCode$=Prod$+Blank$
	fdmd.Whse=whse
	fdmd.Date=FDate
	fdmd.CustCode=cust
	! get last fields
	call dxget("UMID",tmp$)
	x2=tmp$
	if x2<1 or x2>3 or fra(x2)
		returnstatus=0
		Message$="Invalid UM (1-3)"
		goto SBComDone
	Endif
	umid=x2
	UMREC=0
	if UMID=1 let umrec=pr.UMStkDefault
	if UMID=2 let umrec=pr.UMSellDefault
	if UMID=3 let umrec=pr.UMPurchDefault
	Call dxget("UNFRCST",tmp$)
	X3=tmp$
	cnvtu[0]=umrec;cnvtu[1]=0;cnvtu[2]=1
	cnvta=x3
	fdmd.ForecastQty=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,PR.)
	call dxget("REASON",tmp$)
	fdmd.Reason$=tmp$+Blank$
	fdmd.NuFiller$[1,5]=blank$
	! got the info
	If FDR>0 ! has existing
		Write Record #FDC,FDR,0;fdmd.;
	Else ! new
		FDR=0
		R=fileupdatefdfrcst(e$,FDC,"a",FDR,fdmd.)
		If R<0
			ReturnStatus=0
			Message$="Search Error "+Str$(R)+" on add "+FKey$
		Endif
	Endif
  SBComDone: ! finished
 else
	include "src/callsuberr.inc"
  end try
end sub ! Sbmdata
!
!------------------------------------------------------------------------------------------
Sub GetCust()
! get / send customer name
  Try
	Call dxget("CUSTID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Customer Code Passed"
		goto GCDone
	Endif
	X2=tmp$
	if x2<1 or x2>999999 or fra(x2)
		returnstatus=0
		Message$="Invalid Customer Code Passed"
		goto GCDone
	Endif
	Key1$=X2 using "######"
	key1$[7]="" ! cut to length
	Cust=x2
	CUR=filegetcust(e$,CUC,"=",1,Key1$,cust.)
	if CUR<=0
	  If Cust<>999999
		returnstatus=0
		Message$="Customer Code Not Found"
		goto GCDone
	  Else
		Clear cust.
		cust.name$="ALL CUSTOMERS"
	  Endif
	Endif
	List$[0]=bsdel$,"CUSTDATA",fdel$
	List$[1]="CUSTID",fdel$,"NAME",fdel$
	List$[2]=Str$(Cust),fdel$,RTrim$(cust.name$),fdel$
	List$[3]=esdel$
	GCDone: ! done
  else
	include "src/callsuberr.inc"
  end try
end sub ! GetCust
!
!------------------------------------------------------------------------------------------
Sub GetProd()
! get product desc
  Try
	Call dxget("PRODID",tmp$)
	if RTrim$(tmp$)=""
		returnstatus=0
		Message$="NO Product Code Passed"
		goto GPDone
	Endif
	Prod$=tmp$
	tmp$=ChkAltItem$(e$,IntCo,Prod$,Cust)
	If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
	PRR=filegetprod(e$,PRC,"=",1,Prod$,pr.)
	if PRR<=0
		returnstatus=0
		Message$="Product Code Not Found"
		goto GPDone
	Endif
	List$[0]=bsdel$,"PRODDATA",fdel$
	List$[1]="PRODID",fdel$,"DESC1",fdel$
	List$[2]=Prod$,fdel$,RTrim$(pr.Desc1$),fdel$
	List$[3]=esdel$
	GPDone: ! done
  else
	include "src/callsuberr.inc"
  end try
end sub ! GetProd
!
!------------------------------------------------------------------------------------------