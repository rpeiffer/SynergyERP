! >>> Program 444b
!
! description Salesman Customer Master Sales
!
! loadsave -w -n 100,10 -o prog/dxport/444b.dl4 src/444b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 27, 2003  15:08:00
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx/mx444b.src (univ2) [txc] {50372}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX444B - CUST/SLSM SALES
Rem AUTHOR: DAEV  OCT  6, 1986
Rem LAST UPDATE:
external lib "ubsfunc.dl4"
declare external function GetUIDSalesrep
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim A1$[137],S1$[118],T9$[26]
Dim 2%,C1[12],SCALE
Dim 3%,C4[5],C5[5],repSecurity
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[50],D8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3[1],T9[10]
Dim K1$[50],K2$[20],K3$[20],X$[10]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!!!! dx add xport reporting code
Dim tmp$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
repSecurity = GetUIDSalesrep(e$)
if repSecurity < 0
	e$="User ID not on file!"
	error 10000
end if
!
X1 = 0 \ If Err 0 Let X1 = Spc(8)
X2 = Chf(1)
If Err 0 Gosub ERR_TRAP
If Not(X1) Goto L_420
X2 = Spc(5)
J$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
Open #1,J$
L_420: Rem OPEN FILES
X1 = 0 \ X2 = 0
For J = 2 To 4
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;J1$;
SCALE = 1
Mat Read #1,0,112;X2;
Gosub L_7700 \ D8$ = X$[1,8]
Data "1808","1824","-1"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 \ If J8 Let J9 = 20
!

If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"444b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("k2",K2$) ! starting salesman
if repSecurity let k2$ = str$(repSecurity) ! ONLY FOR REP SPECIFIED IN USERCNTRL
Call dxget("k3",K3$) ! ending salesman
if repSecurity let k3$ = str$(repSecurity) ! ONLY FOR REP SPECIFIED IN USERCNTRL
Call dxget("scale",tmp$) \ scale=tmp$ ! scaling factor
!!!  dx end
!
X2=K2$ \ K2$ = X2 Using "###"
if X2<0 or X2>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
!
if K3$="" let K3$="999"
X2=K3$ \ K3$ = X2 Using "###"
if K3$<K2$ or X2>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
if scale<1 let scale=1
if scale>10000 let scale=10000
!
K1$ = K2$ \ J1 = 70 \ J2 = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

! - L_900: Rem GET RANGES
! - Print @0,18;"ENTER STARTING SLSM, <CR> FOR ALL,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - If K2$ = "" Let K3$ = "9999" \ Goto L_970
! - If Len(K2$) > 4 Goto L_900
! - X2 = K2$ \ K2$ = X2 Using "####"
! - L_940: Print @0,19;"ENTER ENDING SLSM,   <CR> FOR LAST,   E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "9999"
! - If Len(K3$) > 4 Goto L_940
! - X2 = K3$ \ K3$ = X2 Using "####"
! - L_970: If K2$ <= K3$ Goto L_990
! - Print @0,18;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: K1$ = K2$ \ J1 = 70 \ J2 = 0
! - Print @0,20;'CE';"ENTER SCALING FACTOR FOR QUANTITIES OR <CR> FOR DEFAULT OF 1:";
! - Input ""J$
! - SCALE = J$;SCALE = Int(SCALE)
! - If SCALE < 1 Let SCALE = 1
! - If SCALE > 10000 Let SCALE = 10000
!
Gosub L_6000 ! sort
!
! *** Process Section
!
If j8 ! dx xml headings
  tmp$ = "SALESMAN",fdel$,"SALESMAN NAME",fdel$
  tmp$ = tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$
  tmp$ = tmp$,"MTD QTY",fdel$,"MTD SALES",fdel$
  tmp$ = tmp$,"MTD G/P",fdel$,"G/P %",fdel$
  tmp$ = tmp$,"YTD QTY",fdel$,"YTD SALES",fdel$
  tmp$ = tmp$,"YTD G/P",fdel$,"YTD G/P %",fdel$
  !
  Call addtostr(e$,rstr$,tmp$ + rdel$)
End If 
!
K1$ = " ",K1$ \ K3$ = ""
! - Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
Gosub L_5800
! - If Err 0 Gosub ERR_ESCAPE
Search #9,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #9,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If K3$ <> "" If K3$[1,4] <> K1$[1,4] Gosub L_4500
J2$ = " ",J2$ \ J2$ = K1$[2,4]
Search #3,2,1;J2$,R2,E
If E goto L_2000 ! - was Gosub ERR_SEARCH
Mat Read #3,R2,0;S1$;
Mat Read #2,R1,0;A1$;
Mat Read #2,R1,142;C1;
Mat Read #2,R1,252;C5;
C5[0] = Int(FNR(C5[0] / SCALE));C5[1] = Int(FNR(C5[1] / SCALE))
For I = 0 To 5
  If C5[I] Goto L_2160
Next I
Goto L_2000
L_2160: Gosub L_5800
Gosub L_5000
Gosub L_2200
K3$ = K1$
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[3] = T9[3] + C5[0]
T9[4] = T9[4] + C5[2]
T9[5] = T9[5] + C5[4]
T9[7] = T9[7] + C5[1]
T9[8] = T9[8] + C5[3]
T9[9] = T9[9] + C5[5]
For I = 0 To 5
  C4[I] = C4[I] + C5[I]
Next I
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** GRAND TOTAL **";
T9[6] = 0 \ T9[10] = 0
Print #0; Using "------,--#"; Tab 37;T9[3];
Print #0; Using "-----,--#.##"; Tab 48;T9[4];
Print #0; Using "-----,--#.##"; Tab 61;T9[5];
If T9[4] Let T9[6] = FNR(T9[5] * 100 / T9[4])
Print #0; Using "---#.##"; Tab 74;T9[6];
Print #0; Using "-------,--#"; Tab 82;T9[7];
Print #0; Using "------,--#.##"; Tab 94;T9[8];
Print #0; Using "-----,--#.##"; Tab 108;T9[9];
If T9[8] Let T9[10] = FNR(T9[9] * 100 / T9[8])
Print #0; Using "---#.##"; Tab 121;T9[10]
Return 
!
L_4500: Rem SLSM SUBTTL
if J8 return ! dx xml
!
If J2$ = "" Goto L_4650
If J2$[1,4] = "      " Goto L_4650
J1 = J1 + 1 \ Gosub L_5800
Print #0;"\15\** ";K3$[1,4];" **";
Print #0;S1$[1,25];
T9[6] = 0 \ T9[10] = 0
Print #0; Using "------,--#"; Tab 37;C4[0];
Print #0; Using "-----,--#.##"; Tab 48;C4[2];
Print #0; Using "-----,--#.##"; Tab 61;C4[4];
If C4[2] Let T9[6] = FNR(C4[4] * 100 / C4[2])
Print #0; Using "---#.##"; Tab 74;T9[6];
Print #0; Using "-------,--#"; Tab 82;C4[1];
Print #0; Using "------,--#.##"; Tab 94;C4[3];
Print #0; Using "-----,--#.##"; Tab 108;C4[5];
If C4[3] Let T9[10] = FNR(C4[5] * 100 / C4[3])
Print #0; Using "---#.##"; Tab 121;T9[10]
If Spc(16) = 9105 Return 
L_4650: J1 = 90 \ Gosub L_5800
If Not(GRANDTOTAL) Print #0;"\15\SLSM NUMBER";K1$[1,4]
K3$ = K1$
For I = 0 To 5
  C4[I] = 0
Next I
Return 
!
L_5000: Rem PRINT LINE
If j8
  tmp$ = K1$[2,4],fdel$,rtrim$(S1$[1,30]),fdel$ ! salesman # & name
  tmp$=tmp$,C1[1] Using "######",fdel$
  tmp$=tmp$,rtrim$(A1$[31,60]),fdel$
  tmp$=tmp$,C5[0] Using "-----,--#",fdel$
  tmp$=tmp$,C5[2] Using "-----,--#.##",fdel$
  tmp$=tmp$,C5[4] Using "-----,--#.##",fdel$
  If C5[2] Let T9 = FNR(C5[4] * 100 / C5[2]) else T9=0
  tmp$=tmp$,T9[0] Using "---#.##",fdel$
  tmp$=tmp$,C5[1] Using "-------,--#",fdel$
  tmp$=tmp$,C5[3] Using "------,--#.##",fdel$
  tmp$=tmp$,C5[5] Using "-----,--#.##",fdel$
  If C5[3] Let T9[1] = FNR(C5[5] * 100 / C5[3]) else T9[1]=0
  tmp$=tmp$,T9[1] Using "---#.##",fdel$
  !
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  Return 
End If 
!
T9 = 0 \ T9[1] = 0
Print #0; Using "######"; Tab 1;C1[1];
Print #0; Tab 8;A1$[31,60];
Print #0; Using "-----,--#"; Tab 38;C5[0];
Print #0; Using "-----,--#.##"; Tab 48;C5[2];
Print #0; Using "-----,--#.##"; Tab 61;C5[4];
If C5[2] Let T9 = FNR(C5[4] * 100 / C5[2])
Print #0; Using "---#.##"; Tab 74;T9[0];
Print #0; Using "-------,--#"; Tab 82;C5[1];
Print #0; Using "------,--#.##"; Tab 94;C5[3];
Print #0; Using "-----,--#.##"; Tab 108;C5[5];
If C5[3] Let T9[1] = FNR(C5[5] * 100 / C5[3])
Print #0; Using "---#.##"; Tab 121;T9[1];
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
If Not(J2) Goto L_5820
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
L_5820: If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;D8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 444B - ";T9$;
Print #0; Tab 50;"SALESMAN/CUSTOMER SALES REPORT ( scaling factor of";SCALE;")"
Print #0;"\15\"
Print #0; Tab 1;"CUST #";
Print #0; Tab 8;"CUSTOMER NAME";
Print #0; Tab 40;"MTD QTY";
Print #0; Tab 51;"MTD SALES";
Print #0; Tab 66;"MTD G/P";
Print #0; Tab 76;"G/P %";
Print #0; Tab 86;"YTD QTY";
Print #0; Tab 98;"YTD SALES";
Print #0; Tab 113;"YTD G/P";
Print #0; Tab 123;"G/P %";
Print #0;" "
Print #0;"\15\";
Return 
!
! *** Sort Section
L_6000: Rem SORT IN BILL TO ORDER
! - Print @0,22;'CE';"SORTING . . . PLEASE WAIT ";
J4$ = " ",J4$
L_6030: Search #9,3,1;J4$,V1,E
If E Goto L_6050
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 444b sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_6030
L_6050: Rem SORT
X3 = K2$ \ X3[1] = K3$
K1$ = " ",K1$
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_6100
L_6090: Search #2,3,1;K1$,R1,E
If E Goto L_6200
L_6100: Rem IF K1$>K3$ GOTO L_6200:0
Mat Read #2,R1,142;C1;
If C1[2] < X3 Goto L_6090
If C1[2] > X3[1] Goto L_6090
J4$ = " ",J4$
J4$ = C1[2] Using "####"
J4$[5] = K1$
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 444b sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_6090
L_6200: Rem DONE
K1$ = " ",K1$
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Chain "MX000"
!
L_9100: Rem END OF THIS RANGE
GRANDTOTAL = 1
Gosub L_4500
GRANDTOTAL = 0
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 10
  T9[K] = 0
Next K
If K2$ = "" Goto OUTEND
! - If Not(J8) Print #0;"\14\"
! - Goto L_900
goto OUTEND
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
