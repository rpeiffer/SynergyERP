! >>> Program 372
!
! description Purchase Order Receipts Verification  
! loadsave -w -n 100,10 -o prog/dxport/372.dl4 src/372.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 29, 2008  12:55:05
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/po372.src (univ2) [jcs] {46551}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem PO372 PURCHASE ORDER RECEIPTS TO STOCK VERIFICATION
Rem AUTHOR: G.DOSCHER   MAY 24, 1985
Rem LAST UPDATE:  REK 3/24/92  WAREHOUSE CHOOSE/STATUS UPDATE
Try
Com 1%,PFU1[20],CNVTU[9]
Com 3%,PFU2[6],CNVTA[4],A[33]
!If Err 0 Gosub ERR_ESCAPE
! If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
dim 2%,rcptdate,3%,specs[20]
Dim 1%,F,L1[5],X0,H4[3],NSD1[7],S7,WHSE,FLAGS[11],COID,CDTYPE,2%,D9[5]
Dim 1%,RASL[5],WPF[1024],POMISC[2],URECFLAG
Dim 3%,PL5[9],CDAMT,IMPQTY,RCUBE,OFRATE
Dim 2%,B[24],C1[6],H0[5],H3[4],L2[2],NSD2[4]
Dim 3%,C9[9],J,L3[6],NSD3[9],Q1[9],R0[1],W3[24],X3[9],PL4[21]
dim 3%,totpo,ponum
Dim A$[156],A1$[30],A2$[30],H$[82],L1$[120],CNAME$[30]
Dim K1$[50],K2$[20],K3$[20],NSD$[96],P9$[50],P61$[256],U5$[30],Z$[50]
Dim M1$[4],U8$[131],U9$[131],V$[30],P60$[50],LOT$[120]
Dim SN1$[54],SNK$[50],PMASK$[12],USR$[40],2%,Q0[1]
Dim 3%,AMOUNT,COST,XCOST,TCOST,XQTY,TQTY,TOTLINEFRT,TOTLINEMISC
Dim 3%,FLAGRF[2],PORFLINE[30],R30,TOTALRF[10],H8[9],PO3[12]
Dim 3%,DISP_COST,DISP_QTY,DISP_EXT,UIDREC[1]
Dim LOCS$[118],K16$[40],K30$[50],F$[30],PMSG$[2],RETVAL$[512],Z2$[2]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
DIM 1%,CHAN[25],3%,SPECS[50]
Rem {end dim.rtn.input}
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo ! E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
! COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For K1 = 2 To 16
  Read J \ If J = -1 Goto L_820
  Read #1,88,Abs(J);J$;
  If J < 0 Ropen #K1,J$ Else Open #K1,J$
L_820: Next K1
Ropen #79,"cntrl/USERCNTRL"
Data "-208","-1792","-1120","-2400","-1808","-2976","2416","-1","-1744","-2464","-2432"
Data "-1728","-2448","-1120","-1088"
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
FLAGRF = 0 ! set flag for rf to 0 for no for now.
If P61$[22,22] = "Y" Or P61$[22,22] = "L" Let FLAGRF = 1
If FLAGRF = 1 
	Let F$ = "3/PORFLINE" + Str$(COID)
	Try 
		Ropen #30,F$
	else
		let flagrf=0
	end try
endif
Mat Read #1,115,0;D9;
Mat Read #1,3,0;CNAME$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
RASL = 0
If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 1
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
J1 = 99 \ U8$ = "-",U8$ \ U9$ = "=",U9$
! Gosub L_8700 -- select options not needed
S7 = 5 ! Gosub L_8100
pmsg$[1,1]="B" ! both message lines
!Gosub PRINT_SCREEN
!Goto INPUTS
! L_8150: Rem
Call DXGet("WHSE",tmp$)
LET whse=tmp$
if not(whse) and rtrim$(tmp$)<>"0"
	eflg=eflg+1
	Message$=Message$+"Invalid Warehouse Number Entered"
	goto L_9010:
endif
if whse<0 or whse>99
	eflg=eflg+1
	Message$=Message$+"Invalid Warehouse Number Entered"
	goto L_9010:
endif
if p60$[46,46]="Y"
	Call dxget("RDATE",tmp$) ! passed as MMDDYY 	
	tmp1$ = tmp$[1,2],"/",tmp$[3,4],"/",tmp$[5,6]            
	Call VerifyDate(tmp1$,tmp1$,e) ! formats to YYMMDD                    
	If e <>0
		let eflg=eflg+1
		Message$ = message$+ "Invalid Import Receipt Date"
		goto L_9010:
	endif
	let rcptdate=tmp$
endif
Gosub L_8200 ! check flags
! If FLAGRF[0] = 1 Gosub L_8400
!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If Err 0 Gosub ERR_ESCAPE
!If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 ! \ If J8 Let J9 = 18 \ SCRPRT = 99
For K1 = 0 To 10
  TOTALRF[K1] = 0
Next K1
! Print @0,21;"Printing,please wait... ";'CE'; \ Signal 3,0
S1 = S7
A1$ = S1 Using "##"
L_1020: Search #8,3,1;A1$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
X0 = A1$[1,2] \ If X0 <> S1 Goto L_9100
Mat Read #8,R8;H0;
Mat Read #8,R8,24;H$;
Mat Read #8,R8,222;H3;
Mat Read #8,R8,242;H4;
Mat Read #8,R8,250;H8;
Mat Read #8,R8,350;PO3;
Mat Read #5,H0[1];V$;
Mat Read #5,H0[1],264;C1;
If WHSE And H4[1] <> WHSE Goto L_1020
!If Not(SCRPRT)
!  PCTR = PCTR + 1
!  If Not(Fra(PCTR / 500))
 !   Print Using "#######";@25,22;PCTR;" Records Printed";
 !   Print Using "   Page ####";V9[0];
!  End If 
!End If 
If H0 <> S1 
	eflg=eflg+1
	let ponum=a1$[3]
	Message$=Message$+"Bypass PO# "+str$(ponum)+" Status Error. "
	j1=j1+3
	print #0;""
	print #0;"***** Bypass Purchase Order ";str$(ponum);" Status Error. ******"
	Print #0;""
	goto L_1020:
	!Print "STATUS ERROR-- FILE DOESN'T MATCH INDEX!" \ Gosub ERR_SEARCH
endif
F1 = 0
IMPORT = 0
If P60$[46,46] = "Y" And H4[0] > 3 And H4[0] < 7 Let IMPORT = 1
K30$ = " ",K30$
K30$[1,6] = A1$[3,8]
K30$[7,9] = "  0"
K30$[10] = ""
FLAGRF[2] = 0
If FLAGRF[0] = 0 Goto L_1200
Search #30,2,1;K30$,R30,E
If E = 1 Goto L_1200
If E Gosub ERR_SEARCH
Mat Read #30,R30,0;PORFLINE;
FLAGRF[2] = 1
TOTALRF[1] = TOTALRF[1] + 1
L_1200: Rem
If FLAGRF[0] = 1 If FLAGRF[1] = 1 If FLAGRF[2] = 1 Goto L_1020
If FLAGRF[0] = 1 If FLAGRF[1] = 3 If FLAGRF[2] = 0 Goto L_1020
Goto L_2000
L_2000: Rem LINE LOOP
A2$ = H0[2] Using "######"
L_2020: Search #12,3,1;A2$,R9,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2300
X2 = A2$[1,6]
If X2 <> H0[2] Goto L_2300
Gosub L_6200
If FLAGS[2] Goto L_2150
If R8 <> L3[0] 
	eflg=eflg+1
	let ponum=a1$[3]
	Message$=Message$+"Bypass Purchase Order "+str$(h0[2])+"Header Record Pointer Error On Line Number "+a2$[7]+"."
	j1=j1+3
	print #0;""
	print #0;"***** Bypass Purchase Order ";str$(h0[2]);" Header Pointer Error on Line Number ";a2$[7];". ******"
	Print #0;""
	goto L_1020:
	! Print "HEADER RECORD POINTER ERROR" \ Gosub ERR_SEARCH
endif
Call Logic(1,2 ^ 1,L1[3],X0) \ If X0 Goto L_2100
If Not(L3[4]) Goto L_2200
L_2100: Gosub L_2800
If Not(F1) Gosub L_5500
If RASL Or LOT Gosub GET_LOCS
Gosub L_4000
Gosub L_5800
Gosub L_5000
Gosub L_4400
If FLAGRF[0] = 1 If FLAGRF[2] = 1 Gosub L_2250
L_2150: Rem"print the message lines cct137770
If Not(FLAGS[2]) Goto L_2020
If PMSG$[1,1] = "N" Goto L_2020
If PMSG$[1,1] = "B" Or PMSG$[1,1] = "Y" Or PMSG$[1,1] = "Z"
  If PMSG$[1,1] = "Z" And L1$[81,81] <> "Z" Goto L_2020
  If PMSG$[1,1] = "Y" And L1$[81,81] <> "Y" Goto L_2020
  If Not(F1) Gosub L_5500
  Gosub L_5800
  Gosub L_5100
End If 
L_2200: Rem END THIS LINE
Goto L_2020
L_2250: Rem RF TOTALS ACCUMULATIONS
TOTALRF[2] = TOTALRF[2] + 1
Return 
L_2300: Rem PRINT TOTAL RECV $
let totpo=totpo+1
If J1 = 99 If TXCOST = 0 Goto L_2330
Gosub L_5800
Print #0; Using "TOTAL ###,###,###.##"; Tab 110;TXCOST
TXCOST = 0
J1 = J1 + 1
If (H8[2] - TOTLINEFRT)
  Print #0; Tab 100;"PLUS FREIGHT";
  Print #0; Using "---,---,---.##"; Tab 116;(H8[2] - TOTLINEFRT)
  J1 = J1 + 1
  If J1 > J9 Gosub L_5800
  TXCOST = TXCOST + H8[2] - TOTLINEFRT
End If 
If (PO3[5] - TOTLINEMISC)
  Print #0; Tab 100;"PLUS MISC";
  Print #0; Using "---,---,---.##"; Tab 116;(PO3[5] - TOTLINEMISC)
  J1 = J1 + 1
  If J1 > J9 Gosub L_5800
  TXCOST = TXCOST + PO3[5] - TOTLINEMISC
End If 
TXCOST = 0 \ TOTLINEFRT = 0 \ TOTLINEMISC = 0
L_2330: Goto L_1020
L_2800: Rem GET PRODUCT
Call Logic(1,2 ^ 0,L1[3],X0)
ROLL = 0;LOT = 0
If Not(X0)
  Gosub L_6000
  J4$ = A$[140,151] \ J4$[13] = H4[1] Using "##"
  Search #10,2,1;J4$,R10,E \ If E Gosub ERR_SEARCH
  Gosub L_6300
Else 
  Gosub L_6500
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2]
  PFU1[8] = NSD1[5] \ PFU1[10] = NSD1[4] \ PFU1[11] = NSD1[3]
  A$[9,38] = NSD$[13,42] \ A$[63,92] = NSD$[43,72]
  A$[140,151] = NSD$[1,12] \ A$[93,112] = NSD$[73,92]
End If 
Return 
GET_LOCS: Rem -----------------------------------get locations from spolot
LOCS$ = "";LOT$ = ""
X$ = " "
K16$ = " ",K16$
K16$[1,6] = H0[2] Using "######"
K16$[7,9] = L1[2] Using "###"
LOCSLOOP: Rem -------------
Search #16,3,1;K16$,R16,E
If E > 2 Gosub ERR_SEARCH
TPO = K16$[1,6];TLN = K16$[7,9]
If Not(E) And TPO = H0[2] And TLN = L1[2]
  If RASL Let LOCS$ = LOCS$ + X$ + K16$[32,37];X$ = ", "
  If LOT Let LOT$ = LOT$ + X$ + K16$[10,21];X$ = ", "
  Goto LOCSLOOP
End If 
ELOCSLOOP: Rem ----------
Return 
L_4000: Rem CONV REC=>DSPL
CNVTA = PL4[0] \ CNVTU[0] = 0 \ CNVTU[1] = L1[5] \ CNVTU[2] = 2
Gosub L_4200 \ Q1[0] = AMOUNT
CNVTA = L3[2] \ CNVTU[0] = 0 \ CNVTU[1] = L1[4] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[1] = AMOUNT
CNVTA = L3[3] \ CNVTU[0] = 0 \ CNVTU[1] = L1[4] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[2] = AMOUNT
CNVTA = L3[4] \ CNVTU[0] = 0 \ CNVTU[1] = L1[4] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[3] = AMOUNT
CNVTA = L3[4] \ CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[4] = AMOUNT
CNVTA = PL4[0] \ CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 2
Gosub L_4200 \ Q1[5] = AMOUNT
If L1[5] = -2 Let Q1[5] = Q1[0]
CNVTA = PL4[1];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
Gosub L_4200 \ Q1[8] = AMOUNT
Return 
L_4200: Rem CALL CONV
Gosub L_20000
Return 
L_4300: Rem GET UNITS
If X0 = -1 Let M1$ = "CWT " \ Goto L_4330
If X0 = -2 Let M1$ = "LOT " \ Goto L_4330
If X0 = -3 Let M1$ = "LB  " \ Goto L_4330
Read #13,X0,10;M1$;
L_4330: Return 
L_4400: Rem PRINT SERIAL NO'S
Call Logic(1,2 ^ 0,L1[3],X0) \ If X0 Return 
SNO = 0 \ If A$[8,8] <> "Y" Return 
If L3[4] = 0 Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[2] Using "######";SNK$[7,9] = L1[2] Using "###"
L_4420: Search #7,3,1;SNK$,R7,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[2] Or LN <> L1[2] Goto L_4480
Mat Read #7,R7,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ J1 = J1 + 1
Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ J1 = J1 + 1
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ J1 = J1 + 2
Return 
L_4500: Rem RF SUMMARY TOTALS
If FLAGRF[0] = 0 Return 
If J1 > J9 - 8 Let J1 = 99 \ Gosub L_5800
Print #0;" "
Print #0;"*  PO WAS ENTERED BY WIRELESS(RF) ENTRY"
Print #0;" "
Print #0;" RF SUMMARY TOTALS:"
Print #0; Using "###,###,###"; Tab 10;"NUMBER OF RF PO'S:    ";TOTALRF[1]
Print #0; Using "###,###,###"; Tab 10;"NUMBER OF RF PO LINES:";TOTALRF[2]
Return 
L_5000: Rem PRINT LINE
Print #0; Using "###";L1[2];
Print #0; Tab 5;L1$[81,92]; Tab 18;L1$[1,30];
If Not(Q1[3])
  Print #0;"  ** ZERO QUANTITY **\15\" \ J1 = J1 + 2
  Goto L_5380
End If 
Print #0; Using "---,---,--#.##"; Tab 49;Q1[3];
X0 = L1[4] \ Gosub L_4300 \ Print #0; Tab 63;M1$;
If Q1[0]
  Print #0; Using PMASK$; Tab 64;Q1[0];
  X0 = L1[5] \ Gosub L_4300 \ Print #0;"/";M1$;
Else 
  Print #0; Tab 70;"(no change)";
End If 
Print #0; Using "---,---,--#.##"; Tab 84;Q1[4];
X0 = PFU1[8] \ Gosub L_4300 \ Print #0; Tab 96;M1$;
If Q1[0]
  Print #0; Using PMASK$; Tab 101;Q1[5];
  X0 = PFU1[8] \ Gosub L_4300 \ Print #0;"/";M1$;
Else 
  Print #0; Tab 103;"(no change)";
End If 
If L1[5] = -2
  AMOUNT = PL4[0]
Else 
  DISP_QTY = (L3[4] - PL4[16]);DISP_COST = PL4[0] \ Gosub CALC_DISP_EXT
  AMOUNT = DISP_EXT
End If 
If L1[5] = -1 Or L1[5] = -3
  If PL4[13]
    If L1[5] = -1 Let AMOUNT = Q1[0] * (PL4[12] * (L3[4] - PL4[16]) / PL4[13]) / 100
    If L1[5] = -3 Let AMOUNT = Q1[0] * (PL4[12] * (L3[4] - PL4[16]) / PL4[13])
  Else 
    If L1[5] = -1 Let AMOUNT = Q1[0] * (L3[5] * (L3[4] - PL4[16]) / L3[2]) / 100
    If L1[5] = -3 Let AMOUNT = Q1[0] * (L3[5] * (L3[4] - PL4[16]) / L3[2])
  End If 
End If 
Print #0; Using "-----,---.##"; Tab 118;FNR(AMOUNT);
TXCOST = TXCOST + FNR(AMOUNT)
Print #0;"" \ J1 = J1 + 1
If L1$[61,62] = "  " Or L1$[61,61] = "" Let Z$ = A$[93,112] Else Let Z$ = L1$[61,80]
Print #0; Tab 18;L1$[31,60];
If Not(IMPORT) Print #0; Tab 50;"VENDOR ITEM # ";Z$; Else Print #0; Tab 50;"BOAT: ";L1$[107,120];
If Not(ROLL) Or (PL4[20] = 0 And PL4[21] = 0) Goto L_5316
Print #0; Using "##### #######"; Tab 85;"ROLL/LBS"; Tab 94;PL4[20];PL4[21];
L_5316: If L2[1]
  If L1[5] = -2
    AMOUNT = L2[1]
  Else 
    AMOUNT = L2[1] * L3[4]
  End If 
  If (L1[5] = -1 Or L1[5] = -3) ! AND a[6]<>pl4[12]
    AMOUNT = (L3[4] * (L2[1] * (PL4[12] / PL4[13])))
  End If 
  Print #0; Using "#####,###.##"; Tab 110;"+ FRGHT"; Tab 118;FNR(AMOUNT)
  J1 = J1 + 1
  TXCOST = TXCOST + FNR(AMOUNT)
  TOTLINEFRT = TOTLINEFRT + FNR(AMOUNT)
End If 
If PL4[8]
  If L1[5] = -2
    AMOUNT = PL4[8]
  Else 
    AMOUNT = PL4[8] * L3[4]
  End If 
  If (L1[5] = -1 Or L1[5] = -3) ! AND a[6]<>pl4[12]
    AMOUNT = (L3[4] * (PL4[8] * (PL4[12] / PL4[13])))
  End If 
  Print #0; Using "-----,---.##"; Tab 106;"+ MISC CHRG"; Tab 118;FNR(AMOUNT)
  J1 = J1 + 1
  TXCOST = TXCOST + FNR(AMOUNT)
  TOTLINEMISC = TOTLINEMISC + FNR(AMOUNT)
End If 
If (Not(L2[1])) And (Not(PL4[8])) Print #0;"" \ J1 = J1 + 1
If RASL Print #0; Tab (5);"LOCATION: ";LOCS$ \ J1 = J1 + 1
If LOT Print #0; Tab (5);"LOT: ";LOT$ \ J1 = J1 + 1
If L3[4] + L3[3] - (PL4[16] + PL4[17]) < L3[2]
  Print #0; Tab 15;"**** RECEIVED SHORT-  ORDERED:";
  Print #0; Using "---,---,--#"; Tab 49;Q1[1];
  Print #0; Using "/---,--# FREE";Q1[8];
  Print #0; Using "---,---,--#"; Tab 80;"OPEN QTY: ";Q1[1] + Q1[8] - Q1[2] - Q1[3];
  Call Logic(1,2 ^ 1,L1[3],X0) \ If X0 Print #0;"   LINE CLOSED SHORT";
  Print #0;"" \ J1 = J1 + 1
End If 
L_5380: Print #0;"\15\"; \ J1 = J1 + 1
If IMPORT And Q1[3] Gosub L_5400
Return 
L_5100: Rem "print the message lines
Print #0; Using "###";L1[2];
Print #0; Tab 5;L1$[81,92]; Tab 18;L1$[1,30]; Tab 50;L1$[31,60]
Print #0;"" \ J1 = J1 + 2
Return 
L_5400: Rem IMPORT COSTS RECAP
If J1 + 3 > J9 Let J1 = 90
Gosub L_5800
Gosub L_6700
Print #0; Tab 12;"OCN FRT: ";
Print #0; Using "###.###";OFRATE;"/CBFT";
Print #0; Using "$$$$$$#.##";PL5[0];
Print #0; Tab 45;"DUTY: ";
If CDTYPE = 1 Print #0;"%"; Else Print #0;"$";
Print #0; Using "####.###";CDAMT;
Print #0; Using "$$$$$$#.##";PL5[1];
Print #0; Tab 72;"BROKER: ";
Print #0; Using "$$$$$$#.##";PL5[2];
Print #0; Tab 91;"CART IN: ";
Print #0; Using "$$$$$$#.##";PL5[3];
Print #0; Tab 111;"CART WH: ";
Print #0; Using "$$$$$$#.##";PL5[4];
Print #0;"" \ J1 = J1 + 1
Print #0; Tab 12;"CART OUT: ";
Print #0; Using "$$$$$$#.##";PL5[5];
Print #0; Tab 34;"INSUR: ";
Print #0; Using "$$$$$$#.##";PL5[6];
Print #0; Tab 53;"AIRFRT: ";
Print #0; Using "$$$$$$#.##";PL5[7];
Print #0; Tab 72;"MISC.: ";
Print #0; Using "-$$$$$#.##";PL5[8];
Print #0; Tab 90;"TOTAL:";
Print #0; Using "$$$$$$$#.##";PL5[9];
Print #0; Tab 110;"UNIT:";
If Q1[3] Print #0; Using PMASK$;FNP(PL5[9] / Q1[3]); Else Print #0;"0.00";
X0 = L1[5] \ Gosub L_4300 \ Print #0;"/";M1$
Print #0;"" \ J1 = J1 + 2
Return 
L_5500: Rem NEW P.O. HEADINGS
If J1 > 45 Let J1 = 99 \ Goto L_5800
Print #0;U9$
L_5512: Print #0;"  PO #"; Tab 12;"DATE"; Tab 34;"VENDOR"; Tab 70;"VENDOR REF#";
Print #0; Tab 88;"TYPE"
X2 = H0[3] \ Gosub L_7700
Print #0; Using "######";H0[2];
If FLAGRF[0] = 1 If FLAGRF[2] = 1 Print #0;"*";
Print #0; Tab 10;X$;
Print #0; Using "######:  "; Tab 30;C1[1];V$; Tab 70;H$[1,14]; Tab 87;
If H4[0] = 0 Print #0;"WAREHOUSE #";H4[1];
If H4[0] = 4 Print #0;"IMPT WHSE #";H4[1];
If H4[0] = 1 Print #0;" DIRECT";
If H4[0] = 5 Print #0;"IMPT DIRECT";
If H4[0] = 2 Print #0;"INDIRECT";
If H4[0] = 6 Print #0;"IMPT INDIR.";
If F1 Print #0; Tab 105;"(CONTINUED)";
Print #0;"\15\";U8$
Print #0; Tab 50;"--- PURCHASE UNITS AS ENTERED ---";
Print #0; Tab 85;"---------- STOCK UNITS --------"
Print #0;"LN#  PRODUCT CODE";
Print #0; Tab 20;"DESCRIPTION / SIZE"; Tab 54;"QUANTITY";
Print #0; Tab 70;"UNIT COST"; Tab 85;"QUANTITY";
Print #0; Tab 100;"UNIT COST"; Tab 118;"EXT COST"
Print #0;U9$
F1 = 99 \ J1 = J1 + 7 \ Return 
L_5800: Rem HEADINGS ROUTINE
If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE ";J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
Print #0; Tab 5;Msc$(3); Tab (65 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2;"\15\"
Print #0; Tab 0;"-PO372-";
Print #0; Tab 42;"PURCHASE ORDER RECEIPTS TO STOCK VERIFICATION\15\"
If WHSE
  Print #0; Using " for WAREHOUSE ## "; Tab 42;WHSE;
Else 
  Print #0; Tab 42;" for ALL WAREHOUSE";
End If 
If PMSG$[1,1] = "Y" Print #0;" print Y Lines"
If PMSG$[1,1] = "Z" Print #0;" print Z Lines"
If PMSG$[1,1] = "B" Print #0;" print Y Lines and Z Lines"
Goto L_5512
L_6000: Rem READ PRODUCT FILE
Mat Read #3,L3[1];A$;
Mat Read #3,L3[1],156;B;
Mat Read #3,L3[1],256;A;
Mat Read #3,L3[1],512;PFU1;
If A$[114,114] = "Y" Let ROLL = 9
Mat Read #3,L3[1],554;PFU2;
If P9$[1,1] = "Y" Or (P9$[1,1] = "B" And A$[113,113] = "Y") Let LOT = 1
Return 
L_6200: Rem READ LINE ITEM
Mat Read #12,R9;L1;
Mat Read #12,R9,12;L2;
Mat Read #12,R9,24;L3;
Mat Read #12,R9,66;L1$;
Mat Read #12,R9,232;PL4;
Mat Read #12,R9,376;POMISC;
Mat Read #12,R9,382;PL5;
Gosub L_8300
If P9$[41,41] = "W" Call "CHKWRASL",L1[1],RASL[]
Return 
L_6300: Rem READ WHPR FILE
Mat Read #10,R10,78;W3
Return 
L_6500: Rem READ NSTKDESC
Mat Read #14,L3[1];NSD$
Mat Read #14,L3[1],96;NSD1
Mat Read #14,L3[1],112;NSD2
Mat Read #14,L3[1],132;NSD3
Return 
L_6700: Rem CALC IMPORT UNIT COSTS
IMPQTY = L3[4]
RCUBE = L3[6]
If PL4[15] And PL4[14] Let RCUBE = IMPQTY * PL4[14] / PL4[15]
OFRATE = 0 \ If RCUBE Let OFRATE = PL5[0] / RCUBE

Try Close #89 Else Rem
! If Err 0 Gosub ERR_ESCAPE
J$ = "3/POCDUTY" + Str$(COID)
Ropen #89,J$
! If Err 0 Rem
CDAMT = 0;CDTYPE = 0
If POMISC[2]
  Read #89,POMISC[2],20;CDAMT;
  Read #89,POMISC[2],26;CDTYPE;
End If 
! If Err 0 Gosub ERR_ESCAPE
Try Close #89 Else Rem
If CDTYPE = 0
  CNVTU[0] = PFU1[10];CNVTU[1] = L1[5];CNVTU[2] = 2;CNVTA = CDAMT
  Gosub L_20000 \ CDAMT = AMOUNT
End If 
Return 
CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext net cost
CNVTA[0] = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 5 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA[0] = DISP_COST;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
PRINT_SCREEN: Rem
!Call "progdflt","372","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
 ! RETVAL$ = " ",RETVAL$
! RETVAL$[1,2] = " 0"
 ! RETVAL$[3,3] = "B"
!  Call "progdfltw","372","",77,RETVAL$,URECFLAG
!End If 
!Print 'CS'
!Print @20,0;"PURCHASE ORDER RECEIPTS VERIFICATION ";@0,0;"-PO372-";
!Print @2,4;"1> WAREHOUSE :";
!Print @2,6;"2> Print Include ";@25,6;" Z: Z Line  Y: Y Line  B: both  N: none ";
!WHSE = RETVAL$[1,2]
!PMSG$[1,1] = RETVAL$[3,3]
!Print Using "##";@20,4;WHSE;
!Print @20,6;PMSG$[1,1];
Return 
INPUTS: Rem
!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults or  E: exit ";
!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!Print @0,23;'CE';
!If X$ = "P" Goto L_8150
!If X$ = "E" Goto L_9010
!If X$ = "R" Goto EDT_ALL
!If X$ = "" Goto INPUTS
!If X$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
! Input Len 16384 + 1;""Z2$
!  Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! Call "progdfltw","372","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL'
!End If 
!X = X$
!If X < 1 Or X > 2 Goto INPUTS
!Gosub EDT_FLDS
!Goto INPUTS
!EDT_ALL: Rem "want's all
!For X = 1 To 2
!  Gosub EDT_FLDS
!Next X
!Goto INPUTS
!EDT_FLDS: Rem "edit them here
!FLG = 1
!On X Gosub L_8000,ASK_PMSG
Return 
L_8000: Rem CHECK WAREHOUSE
L_8010: Rem LET WHSE=0 \ IF D9[5]=1 GOTO L_8090: ! "only 1 whse, don't ask
!J0$ = "3000022004"
!J1 = WHSE
!J5$ = "Enter Warehouse or  0: for all"
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!Gosub ISINPUT
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!WHSE = J1
!If WHSE < 0 Or WHSE > D9[5] Goto L_8010
!RETVAL$[1,2] = WHSE Using "##"
Return 
ASK_PMSG: Rem"z lines, y lines, both or none
!J0$ = "2000 120 6"
!J5$ = "Print include  Z: Z Line  Y: Y Line  B: both  N: none "
!J1$ = PMSG$
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!Gosub ISINPUT
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Call String(1,J$)
!If J$ <> "Z" If J$ <> "Y" If J$ <> "B" If J$ <> "N" Goto ASK_PMSG
!PMSG$ = J$
!RETVAL$[3,3] = PMSG$
Return 
L_8100: Rem CHECK CONTROL FLAG
L_8110: S7 = 5 \ Goto L_8170
!Print @0,20;"IS THIS A REPRINT (Y/N  E: Exit)? ";'CE';
!Input Len 16385;""X$ \ If X$ = "Y" Let S7 = 6
!If X$ = "E" Goto L_9010
!If X$ <> "N" And X$ <> "Y" Print 'RB'; \ Goto L_8110
L_8170: Return 

L_8200: Rem CHECK/SET WHSE PROC FLAGS
!If Err 0 Rem
Try Close #90 Else Rem
! If Err 0 Gosub ERR_ESCAPE
Read #1,88,2768;X$[1,16]; \ Open #90,X$
! Print @0,23;'CL';"CHECKING WHSE FLAGS, PLEASE WAIT"; \ Signal 3,0
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
L_8225: Mat Read #90,WHREC,900;WPF;
! Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
If WPF[373] <> 0 Let UIDREC = WPF[373] \ Goto L_8280
WPF[372] = UIDREC[1]
If WHREC = 99 If WHSE Let WPF[372] = 0 - WHSE
Mat Write #90,WHREC,900;WPF;
If WHSE If WHREC <> 99 Let WHREC = 99 \ Goto L_8225
If WHSE If WHREC = 99 Goto L_8277
For WHREC = 0 To 98
  Mat Read #90,WHREC,900;WPF;
  If WPF[373] <> 0 Let UIDREC = WPF[373] \ Goto L_8280
L_8275: Next WHREC
L_8277: Close #90
Return 
L_8280: Rem IF WPF[CPRT]=371 ! "entry controlled by status 91
USR$ = " ",USR$
If UIDREC > 0
	!Call "getuidinfo",UIDREC,USR$
	 USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
endif
eflg=eflg+1
message$=message$+"Journal In Process By User "+rtrim$(usr$[21])
message$=message$+" - Please Try Later. "
! Print @0,23;'RB CL';"JOURNAL IN PROCESS USER ";USR$[21];
!	Print " -- PLEASE TRY LATER."; ! \ Signal 3,30
Goto L_9010

L_8300: Rem UNPACK L1[3] TO FLAGS[x]
X2 = L1[3] \ For K = 0 To 11
  FLAGS[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
! pack l1[3] form flags[x]
X2 = 0 \ For K = 0 To 11
  If FLAGS[K] Let X2 = X2 + 2 ^ K
Next K \ L1[3] = X2 \ Return 

L_8400: Rem ASK RF RELATED QUEST IF FLAGS ARE SET UP.
If FLAGRF = 0 Return 
L_8410: FLAGRF[1] = 0
FLAGRF[2] = 0
!Print @0,15;'CE';
!Print @5,15;"PRINT OPTIONS FOR WIRELESS(RF) HANDHELD ENTRIES:"
!Print @10,16;" 1> EXCLUDE RF ENTRIES "
!Print @10,17;" 2> INCLUDE ALL ENTRIES(RF & REGULAR)"
!Print @10,18;" 3> ONLY PRINT RF ENTRIES "
!Print @10,19;" SELECT 1, 2, OR 3 :";
!Input ""X$
!If X$ <> "1" If X$ <> "2" If X$ <> "3" Print 'RB';"INVALID!!" \ Signal 3,20 \ Goto L_8410
!FLAGRF[1] = X$
!If FLAGRF[1] <> 1 If FLAGRF[1] <> 2 If FLAGRF[1] <> 3 Print 'RB';"INVALID!!" \ Signal 3,10 \ Goto L_8410
flagrf[1]=2 ! include all entries rf & regular
Return 
L_8500: Rem UP STATUS
Return 
!Print @0,20;'RB CE';"Has this journal printed correctly (Y/N)? ";'CE';
!Input Len 16385;""X$ \ If X$ = "N" Return 
!If X$ <> "Y" Print 'RB'; \ Goto L_8500
!Print @0,22;"Updating,please wait...";'CE';
!!A1$ = " ",A1$ \ A1$ = S1 Using "##"
!L_8560: Search #8,3,1;A1$,R8,E \ If E > 2 Gosub ERR_SEARCH
!If E Goto L_8680
!X0 = A1$[1,2] \ If X0 <> S1 Goto L_8680
!Mat Read #8,R8;H0
!Mat Read #8,R8,242;H4
!If WHSE If WHSE <> H4[1] Goto L_8560
!U5$ = " ",U5$ \ U5$ = A1$ \ U5$[1,2] = S1 + 1 Using "##"
!Search #8,4,1;U5$,R8,E \ If E Gosub ERR_SEARCH
!U5$[1,2] = S1 Using "##"
!Search #8,5,1;U5$,R8,E \ If E Gosub ERR_SEARCH
!H0[0] = S1 + 1 \ Write #8,R8;H0;
!Goto L_8560
L_8680: Return 

L_8700: Rem SELECT WHAT TO PRINT
!Print @0,0;'CE';
!Print @20,0;"PURCHASE ORDER RECEIPTS VERIFICATION ";@0,0;"-PO372-";
!Print @5,3;"DO YOU WISH TO PRINT : ";
!Print @10,4;" 1> PURCHASE ORDER RECEIPTS VERIFICATION "
!Print @10,5;" 2> PURCHASE ORDER RECEIVING WORKSHEETS "
!Print @10,6;" 3> P.O. BUYER NOTIFICATION WORKSHEET "
!Print @10,7;" 4> P.O. RECEIVING COST EXCEPTION REPORT "
!L_8750: Print @5,9;" SELECT 1, 2, 3, 4   or  E: to exit  ";
!Input ""U5$
!If U5$ = "4" Chain "PO372C"
!If U5$ = "2" Chain "PO372A"
!If U5$ = "3" Chain "PO372B"
!If U5$ = "E" Goto L_9010
u5$="1" ! set to purchase order receipts verification
If U5$ = "1" Return 
!Print 'RB'; \ Goto L_8750
return

WPFRESET: Rem reset wpf flags
Try Close #90 Else Rem
! If Err 0 Gosub ERR_ESCAPE
Read #1,88,2768;X$[1,16]; \ Open #90,X$
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
WP8225: Mat Read #90,WHREC,900;WPF;
WPF[372] = 0
If WHSE If WHREC = 99 Let WPF[372] = 0
Mat Write #90,WHREC,900;WPF;
If WHSE If WHREC <> 99 Let WHREC = 99 \ Goto WP8225
If WHSE If WHREC = 99 Goto WP8277
WP8277: Rem finito
Close #90
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!!If X1 <> Spc(6) Goto L_20080
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
Rem {begin rtn.input.s}
Rem {end rtn.input.s}


L_9100: Rem END OF THIS RANGE
! If J8 Input @0,23;"PRESS <CR> TO EXIT ";'CL';J$
If P60$[46,46] = "Y" Gosub L_9150
If FLAGRF[0] = 1 Gosub L_4500
Goto OUTEND
L_9150: Rem
! p60$[46,46]="N" !!!!!! for imports currently not used 
if p60$[46,46]="Y"
	
	SOURCE = 372;REPRINT = 0
	clear specs[]
	CLEAR CHAN[]
	chan[0]=1 ! cntrl file                    
	chan[1]=8! purchase order header  #60
	chan[2]=12 ! po lines #61
	chan[3]=16 ! po lot
	chan[4]=3 ! product file #64
	chan[5]=5 ! vendor file
	chan[6]=14 !  nonstock #66
	chan[7]=13 ! unit of measure file #67

	let specs[0]=rcptdate ! MMDDYY format
    Call "PO372IMP.dl4",SOURCE,REPRINT,chan[],specs[],e$,IntCo,rstr$
	! Call "PO372IMP",SOURCE,REPRINT  ! *** needs to be converted ***
endif 
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT PROGRAM
Gosub WPFRESET
L_9010: !Print 'CS' 
Close 
! Chain "MX000"
! Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(totpo)
	returnstatus=1
	let message$=message$+"There are no purchase orders available to list"
	if whse<>0
		let message$=message$+" for warehouse "+str$(whse)
	endif
	message$=message$+"."
else
	Let message$=message$+" "+str$(totpo)+" Purchase Order(s) Listed"
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program