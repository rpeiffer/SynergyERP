! >>> Program 535
!
! description  Monthly Check Register
!
! loadsave -w -n 100,10 -o prog/dxport/535.dl4 src/535.src
!
! 1.0 mm/dd/yyyy change??
!
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 16, 2005  11:53:11
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/la535.src (univ2) [bill] {29450}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem LA535 MONTHLY CHECK REGISTER
Rem LAST UPDATE: 11/92 - MTG MULTIPLE BANKS FLAG & AP ACCT HIST VERSION V5
!

External Lib "ubsfunc.dl4"
Declare External Function OpenFile
!
Declare Intrinsic Sub FindF,InpBuf,String,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals

!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,B8[1],B9,C0[6],E,F8,F9,G9,H1[1],H5,N3[1],I,R9,L,L9,P,X,X1,Y0,VOID
Dim 2%,A1,B1,C[1],C1,C2,C3[1],C8[1],C9,D0,H3[1],H[3],R1,R[16],W,X2
Dim 2%,DIV[2],DIVFLAG,CHECK[1],TOTFLAG,N5
dim 2%,apdate,message$[200]
Dim 3%,A9[1],H2[3],H4,K4,T1[4],T8[4],T9[4],X3,ACCT[1],DIVTOT[99]
Dim A1$[30],A5$[30],C$[10],D8$[25],F$[16],G$[2],H$[30],H1$[12],H2$[12],H3$[8]
Dim I$[30],J$[10],K1$[50],K2$[20],K3$[30],K5$[8],N$[40],P$[8],R$[63]
Dim R2$[4],U5$[50],V$[20],V1$[20],U9$[130],X$[10],K10$[20],DIV$[30],NAME$[30]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[900],tmp1$[900],tmp2$[900]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
U9$ = "-",U9$
Mat Read #1,51,18;C0; \ If Not(C0[2]) Goto L_700
Goto L_700
!!Print 'CS';"MONTHLY CHECK REGISTER"
!!Print @10,2;'CL';"****  REPORT OPTIONS  ****";
!!Print @10,4;'CL';"1> REGULAR MONTHLY CHECK REGISTER";
!!Print @10,6;'CL';"2> PAID EXPENSE DISTRIBUTION";
!!L_630: !!Print @10,8;"SELECT: (  E: TO EXIT ) ";
!!Input ""C$
!!If C$ = "E" Goto OUTEND
!!If C$ = "2" Chain "LA535A"
!!If C$ <> "1" Goto L_630

L_700: Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
Call Time(D8$)
L = 99
G9 = 0
!!Print 'CS';"MONTHLY CHECK REGISTER"

If Err 0 Let P = Spc(8)
P = 0
L9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If P <> 0 If P <> 49 Gosub ERR_TRAP
L9 = 55
If P <> 0 Let L9 = 22
!!P = 0
J8 = P
B8 = 0 \ B8[1] = 99 \ C8 = 0 \ C8[1] = 999999 \ ACCT[0] = 0 \ ACCT[1] = 99999999
!
!! open files
!C15 = OpenFile("AP.A00AP10",-intCo,1) \ If C15 = -1 Error 42  ! a00ap10
!C16 = OpenFile("GL.ACF",-intCo,1) \ If C16 = -1 Error 42  ! acf10
!!
!!!!
!V$ = " 0"
!Search #C15,2,1;V$,R[15],E !!! \ If E Gosub ERR_SEARCH
!Mat Read #C15,R[15],2;R$;
!W = Spc(5) \ A1 = Int(W / 16384)
!B1 = Int((W - A1 * 16384) / 64)
!C1 = W - (A1 * 16384 + B1 * 64)
!G$[1,1] = B1 Using "#" \ G$[2,2] = C1 Using "#"
!F$ = R$[58,58],"/A10VL",G$[1,2] \ Ropen #5,F$
!Mat Read #1,88,112;F$; \ Ropen #4,F$
!If Not(C0[6]) Goto L_860
!F$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,F$
!L_860: V1$ = "10"
!Search #C15,2,1;V1$,R[15],E !!\ If E Gosub ERR_SEARCH
!Mat Read #C15,R[15],2;R2$;
!V1$ = " ",V1$ \ V1$[3,6] = R2$
!Search #16,2,1;V1$,R[16],E !!!\ If E Gosub ERR_SEARCH
!Mat Read #C16,R[16],10;N$;
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"535",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
! verify current account period
! need control file open first
Read #1,0,134;apdate; !current ap date yymmdd format                   
tmp$ = apdate Using "&&&&&&" \ tmp1$ = tmp$[3,4],"/",tmp$[1,2] !mm/yy
Call dxget("u_apdate",tmp$)
if rtrim$(tmp$)<>rtrim$(tmp1$) 
	Call dxset("u_apdate",tmp1$)                                              
	yy = tmp1$[4,5] \ mm = tmp1$[1,2] \ mm = mm + 1 
	If mm > 12
		Let mm = 1 \ yy = yy + 1
	endif                                                                       
	tmp1$ = mm Using "&&","/",yy Using "&&"                                   
	Call dxset("u_nextapdate",tmp1$)
	! Call AddToStr(e$,rstr$,esdel$) !end section -- DXBLOCK
	returnstatus=1
	let message$="Please Re-Select Accounting Period"
	tmp$ = "535"
	Call env(2,"NEXTBLOCK",tmp$)                                          
	Call SetOutPut(e$,rstr$,returnstatus,message$)! ,1) !1 flag puts 0 status section, puts </page>
	end
endif!
!!
call dxget("SELECT",tmp$) \ C2 = tmp$ !!DROPLIST 1 ,2
call dxget("OPTIONS",tmp$) \ R9 = tmp$ !!DROPLIST 1 ,2 ,3
!!
call dxget("SBANK",tmp$) \ B8 = tmp$ !!0-99
call dxget("EBANK",tmp$)  \ if rtrim$(tmp$)="" LET B8[1]=99 ELSE  B8[1] = tmp$ !!0-99
call dxget("SCHECK",tmp$) \  C8 = tmp$
call dxget("ECHECK",tmp$) \  if rtrim$(tmp$)="" LET C8[1] = 999999 ELSE C8[1] =tmp$
!!
call dxget("SACCOUNT",tmp$)  \ ACCT[0] = tmp$
call dxget("EACCOUNT",tmp$)  \ if rtrim$(tmp$)="" LET ACCT[1] = 99999999 ELSE ACCT[1] =tmp$
!!
call dxget("DIV",tmp$)  \if rtrim$(tmp$)="" LET DIVFLAG = 0 ELSE DIVFLAG = 99  !!CHECK
call dxget("SDIV",tmp$)  \ DIV[1] = tmp$
call dxget("EDIV",tmp$)  \ if rtrim$(tmp$)="" LET DIV[2] = 99 ELSE DIV[2] = tmp$
call dxget("RDIV",tmp$)  \ if rtrim$(tmp$)="" LET TOTFLAG = 0 ELSE TOTFLAG = 99 !!CHECK
!
if j8 if R9 = 1 let e$ = "Cannot print both reports to browser!" \ error 10000
!
! Both reports
if R9 = 1  ! entire report
	if b8<>0 or b8[1]<>99! invalid
		let e$="Entire Report Option Selected. Bank Range Option not allowed." \ error 10000
	endif
	if acct[0]<>0 or acct[1]<>99999999
		let e$="Entire Report Option Selected. Account Number Range not allowed." \error 10000
	endif
	if c8<>0 or c8[1]<>999999
		let e$="Entire Report Option Selected. Check Range Option not allowed." \ error 10000
	endif
  B8 = 0 \ B8[1] = 99 \ C8 = 0 \ C8[1] = 999999 \  ACCT[0] = 0 \ ACCT[1] = 99999999
end if
! 
! Monthly checks only
if R9 = 2 
	if acct[0]<>0 or acct[1]<>99999999
		let e$="Monthly Checks Only Option Selected. Account Number Range not allowed." \error 10000
	endif
  if B8 < 0 or B8 > 99 let e$="Invalid starting bank, must be between 0 and 99!" \ error 10000
  if B8[1] < B8 or B8[1] > 99 let e$="Invalid ending bank, must be between starting bank  and 99!" \ error 10000
  !
  if C8 < 0 or C8 > 999999 let e$="Invalid starting check #, must be between 0 and 999999!" \ error 10000
  if C8[1] < C8 or C8[1] > 999999 let e$="Invalid ending check #, must be between starting check #  and 999999!" \ error 10000
end if   
!
! Account Disbursements
if R9 = 3
	if c8[0]<>0 or c8[1]<>999999
		let e$="Account Distribution Option Selected. Check Range Option not allowed." \ error 10000
	endif
	if b8[0]<>0 or b8[1]<>99
		let e$="Account Distribution Option Selected. Check Range Option not allowed." \ error 10000
	endif
  if ACCT[0] < 0 or ACCT[0] > 99999999 let e$="Invalid starting account #, must be between 0 and99999999!" \ error 10000
  if ACCT[1] < ACCT[0] or ACCT[1] > 99999999 let e$="Invalid ending account #, must be between starting account #  and 99999999!" \ error 10000
end if
!
If Not(C0) Let B8 = 1 \ B8[1] = 1 !!!BANK
!
! divisions
if C0[6] if DIVFLAG=99 
  if DIV[1]<0 or DIV[1]>99 let e$="Invaild starting division must be between 0 and 99!" \ error 10000
  If DIV[2] < DIV[1] LET e$="Invalid ending division, must be between starting division and 99!" \ error 10000
else ! C0[6]=0 or divflag=0 or both =0 
  DIVFLAG=0 \ TOTFLAG=0
  DIV[1]=0 \ DIV[2]=99
endif
!
! open files
C15 = OpenFile("AP.A00AP10",-intCo,1) \ If C15 = -1 Error 42  ! a00ap10
C16 = OpenFile("GL.ACF",-intCo,1) \ If C16 = -1 Error 42  ! acf10
!
V$ = " 0"
Search #C15,2,1;V$,R[15],E 
If E let e$="Can't find '",V$,"' in AP.A00AP10 file!" \ error 10000
Mat Read #C15,R[15],2;R$;
!!!
!W = Spc(5) \ A1 = Int(W / 16384)
!B1 = Int((W - A1 * 16384) / 64)
!C1 = W - (A1 * 16384 + B1 * 64)
!G$[1,1] = B1 Using "#" \ G$[2,2] = C1 Using "#"
W = intCo \ A1 = Int(W / 16384)!
B1 = Int((W - A1 * 16384) / 64)
C1 = W - (A1 * 16384 + B1 * 64)
G$[1,1] = C1 Using "#" \ G$[2,2] = B1 Using "#"
!!!
F$ = R$[58,58],"/A10VL",G$[1,2] \ Ropen #5,F$
Mat Read #1,88,112;F$; \ Ropen #4,F$
If Not(C0[6]) Goto L_860
F$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,F$
L_860: 
V1$ = "10"
Search #C15,2,1;V1$,R[15],E 
If E let e$="Can't find '",V1$,"' in AP.A00AP10 file!" \ error 10000
Mat Read #C15,R[15],2;R2$;
V1$ = " ",V1$ \ V1$[3,6] = R2$
Search #C16,2,1;V1$,R[16],E 
If E let e$="Can't find '",V1$,"' in GL.ACF file!" \ error 10000
Mat Read #C16,R[16],10;N$;
!!!
If Err 0 Gosub ERR_TRAP
Mat Read #1,0,116;Y0;
Mat Read #1,0,134;D0;
C$ = D0 Using "&&&&&&"
C3 = C$[1,4]
C9 = C$[3,4]
C9 = C9 + 1
If C9 > 12 Let C9 = 1
C$[3,4] = C9 Using "&&"
If C$[3,3] = " " Let C$[3,3] = "0"
If C9 = 1 
  C9 = C$[1,2]
  C9 = C9 + 1 \ If C9 > 99 Let C9 = C9 - 100
  C$[1,2] = C9 Using "&&"
END IF
C3[1] = C$[1,4]!!!
C$ = C3 Using "&&&&"!!
C$ = C3[1] Using "&&&&"!!
!!
C$ = C3[C2 - 1] Using "&&&&"
F$ = R$[41,41],"/AM0CR",G$[1,2],C$[1,4]
Call FindF(F$,A9) \ If Not(A9) LET e$="CANNOT FIND:",F$," REPORT ABORTED!" \ error 10000
Ropen #2,F$
F$ = R$[42,42],"/AM0CD",G$[1,2],C$[1,4]
Call FindF(F$,A9) \ If Not(A9) LET e$="CANNOT FIND:",F$," REPORT ABORTED!" \ error 10000
Ropen #3,F$
If Err 0 Gosub ERR_TRAP
K1$ = " ",K1$ \ K2$ = "9",K2$ \ K3$ = " ",K3$
C = 0 \ C[1] = 0 \ A9 = 0 \ A9[1] = 0
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
!!
!!L_900: !!DIV[1] = 0 \ DIV[2] = 99 \ DIVFLAG = 0
!!If Not(C0[6]) Goto L_1000
!!Print 'CS'; Tab 20;N$;@20,1;'CL';"MONTHLY CHECK REGISTER";
!!L_920: Print @0,5;'CL';"PRINT REPORT BY DIVISIONS (Y/N) "; \ Input ""I$
!!If I$ = "N" Goto L_1000
!!If I$ = "E" Goto OUTEND
!!If I$ <> "Y" Goto L_920
!!DIVFLAG = 99
!!Print @0,8;'CL';"Enter starting division or <CR> for all "; \ Input ""I$
!!If I$ = "" Goto L_975
!!DIV[1] = I$
!!Print @0,9;'CL';"Enter ending division or <CR> for last "; \ Input ""I$
!!If I$ = "" Goto L_975
!!DIV[2] = I$
!!L_975: If DIV[2] >= DIV[1] Goto L_990
!!Print @0,23;'CL RB';"ending division must be greater than starting ";
!!Signal 3,20 \ Print @0,23;'CL'; \ Goto L_900
!!L_990: TOTFLAG = 0 \ If DIV[1] <> 0 Or DIV[2] <> 99 Goto L_1000
!!L_992: Print @0,15;'CL';"Include Consolidation Division Report (Y/N) "; \ Input ""I$
!!If I$ = "N" Goto L_1000
!!If I$ <> "Y" Goto L_992
!!TOTFLAG = 99
!!!
!!L_1000: Rem CURRENT/NEXT MONTH SELECTION
!!If Err 0 Gosub ERR_TRAP
!!Mat Read #1,0,116;Y0;
!!Mat Read #1,0,134;D0;
!!L_1020:!! Print 'CS CR'; Tab 20;N$
!!Print Tab 20;"MONTHLY CHECK REGISTER"
!!C$ = D0 Using "&&&&&&"
!!C3 = C$[1,4]
!!C9 = C$[3,4]
!!C9 = C9 + 1
!!If C9 > 12 Let C9 = 1
!!C$[3,4] = C9 Using "&&"
!!If C$[3,3] = " " Let C$[3,3] = "0"
!!If C9 <> 1 Goto L_1085
!!C9 = C$[1,2]
!!C9 = C9 + 1 \ If C9 > 99 Let C9 = C9 - 100
!!C$[1,2] = C9 Using "&&"
!!L_1085: !!C3[1] = C$[1,4]!!!!!!!!!
!!C$ = C3 Using "&&&&"
!!Print @10,4;"1> CURRENT MONTH - ";C$[3,4];"/";C$[1,2]
!!!C$ = C3[1] Using "&&&&"
!!Print @10,6;"2> NEXT MONTH    - ";C$[3,4];"/";C$[1,2]
!!L_1110: !!Print @10,8;"SELECT: (  E: TO EXIT ) ";
!!Input ""C$
!!If C$ = "E" Goto OUTEND
!!C2 = C$
!!If C2 > 0 If C2 < 3 Goto L_1140
!!Goto L_1110
!!L_1140: Print @10,12;" A: ACCEPT   R: REJECT   E: END ";
!!Input ""C$
!!If C$ = "R" Goto L_1020
!!If C$ = "E" Goto OUTEND
!!If C$ <> "A" Goto L_1140
!!  C$ = C3[C2 - 1] Using "&&&&"
!!F$ = R$[41,41],"/AM0CR",G$[1,2],C$[1,4]
!!Call FindF(F$,A9) \ If Not(A9) Goto L_1190
!!Ropen #2,F$
!!Goto L_1200
!!L_1190: Print @0,23;'CL RB';"CANNOT FIND:";F$;" REPORT ABORTED!";!!!!!!!!!!
!!Signal 3,20 \ Goto OUTEND
!!L_1200: F$ = R$[42,42],"/AM0CD",G$[1,2],C$[1,4]
!!Call FindF(F$,A9) \ If Not(A9) Goto L_1190
!!Ropen #3,F$
!!If Err 0 Gosub ERR_TRAP
!!K1$ = " ",K1$ \ K2$ = "9",K2$ \ K3$ = " ",K3$
!!!!K3$ = " ",K3$
!!C = 0 \ C[1] = 0 \ A9 = 0 \ A9[1] = 0
!!L_1315: Print 'CS'; Tab 20;"MONTHLY CHECK REGISTER"
!!Print @10,5;"REPORT OPTIONS"
!!Print @10,7;"1> ENTIRE REPORT"
!!Print @10,8;"2> MONTHLY CHECKS ONLY"
!!Print @10,9;"3> ACCOUNT DISTRIBUTIONS"
!!Print @10,11;"SELECTION OR <CR> TO END: ";
!!Input ""J$!!!!!!!!!!!!!
!!If J$ = "" Goto OUTEND
!!If Len(J$) > 3 Goto L_1370
!!R9 = J$
!!If R9 > 0 If R9 < 4 Goto L_1385
!!L_1370: Print @0,23;"INVALID!!";'RB';
!!Signal 3,30
!!Goto L_1315
!!L_1385: !!On R9 Goto L_1800,L_1600,L_1400
!!L_1400: !!Print 'CS';"MONTHLY CHECK REGISTER - ACCOUNT DISTRIBUTION "
!!ACCT[0] = 0 \ ACCT[1] = 99999999
!!Print 'CR CR CL';"ENTER STARTING ACCOUNT # OR <CR> FOR ALL ";
!!Input ""K5$
!!If K5$ = "E" Goto OUTEND
!!If K5$ = "END" Goto OUTEND
!!If K5$ = "" Goto L_1470
!!ACCT[0] = K5$
!!Print 'CR CR';"ENTER ENDING ACCOUNT #, OR <CR> FOR LAST ";
!!Input ""K5$
!!If K5$ = "E" Goto OUTEND
!!If K5$ = "END" Goto OUTEND
!!If K5$ = "" Goto L_1470
!!ACCT[1] = K5$
!!L_1470: If ACCT[1] > ACCT[0] Goto L_1800
!!Print @0,23;'RB';"INVALID RANGE !!!"
!!Signal 3,30
!!Goto L_1400
!!L_1600: !!Print 'CS'; Tab 10;"MONTHLY CHECK REGISTER"
!!If Not(C0) Let B8 = 1 \ B8[1] = 1 \ Goto L_1700
!!B8 = 0 \ B8[1] = 99
!!Print @5,3;'CL';"ENTER STARTING BANK # OR <CR> FOR ALL "; \ Input ""K5$
!!If K5$ = "E" Or K5$ = "END" Goto OUTEND
!!If K5$ = "" Goto L_1680
!!If Len(K5$) <= 2 Goto L_1640
!!Print @0,23;'CL RB';"INVALID BANK NUMBER!!"; \ Signal 3,30 \ Goto L_1600
!!L_1640: !!B8 = K5$
!!L_1645: Print @5,5;'CL';"ENTER ENDING BANK # OR <CR> FOR LAST "; \ Input ""K5$
!!If K5$ = "E" Or K5$ = "END" Goto OUTEND
!!If Len(K5$) <= 2 Goto L_1670
!!Print @0,23;'CL RB';"INVALID BANK #"; \ Signal 3,10 \ Print @0,23;'CL';
!!Goto L_1645
!!L_1670:!! If K5$ = "" Goto L_1680
!!B8[1] = K5$
!!L_1680: If B8 <= B8[1] Goto L_1700
!!Print @0,23;'CL RB';"ENDING BANK MUST BE GREATER THAN STARTING BANK";
!!Signal 3,20 \ Goto L_1600
!!L_1700: C8 = 0 \ C8[1] = 999999
!!Print @5,8;'CL';"ENTER STARTING CHECK # OR <CR> FOR ALL "; \ Input ""K5$
!!If K5$ = "E" Goto OUTEND
!!If K5$ = "END" Goto OUTEND
!!If K5$ = "" Goto L_1755
!!C8 = K5$
!!Print @5,10;'CL';"ENTER ENDING CHECK # OR <CR> FOR LAST "; \ Input ""K5$!!!!!!!!!
!!If K5$ = "E" Goto OUTEND
!!If K5$ = "END" Goto OUTEND
!!If K5$ = "" Goto L_1755
!!C8[1] = K5$
!!L_1755: If C8[1] >= C8 Goto L_1800
!!Print @0,23;'CL RB';"ENDING CHECK # MUST BE GREATER THAN STARTING";
!!Signal 3,30 \ Print @0,23;'CL';@5,10;'CL'; \ Goto L_1700
!!!
if j8
 if R9 = 2
   tmp$="BANK #",fdel$
   tmp$=tmp$, "BANK NAME",fdel$
   tmp$=tmp$, "CHECK #",fdel$
   tmp$=tmp$, "CHECK DATE",fdel$
   tmp$=tmp$, "PAY TO",fdel$
   tmp$=tmp$, "PAY TO NAME",fdel$
   tmp$=tmp$, "VENDOR#",fdel$
   tmp$=tmp$, "VENDOR NAME",fdel$
   tmp$=tmp$, "INVOICE #",fdel$
   tmp$=tmp$, "INV DATE",fdel$
   tmp$=tmp$, "GROSS PAY",fdel$
   tmp$=tmp$, " DISCOUNT",fdel$
   tmp$=tmp$, "PAYMENT",fdel$
   tmp$=tmp$, "ACCOUNT#",fdel$
   tmp$=tmp$, "AMOUNT",fdel$
 end if
 if R9 = 3
   tmp$="ACCOUNT #",fdel$
   tmp$=tmp$, "CHECK #",fdel$
   tmp$=tmp$, "VENDOR NAME",fdel$
   tmp$=tmp$, "INVOICE CODE",fdel$
   tmp$=tmp$, "DATE",fdel$
   tmp$=tmp$, "DISTRIB. AMT",fdel$
 end if
 call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
L_1800: Rem PRINT SECTION
If Not(C0[6]) Goto L_1950
If Not(DIVFLAG) Goto L_1950
K10$ = " ",K10$ \ K10$[1,2] = DIV[1] Using "##"
Search #10,2,1;K10$,R[10],E \ If Not(E) Goto L_1840
!!!If E > 1 Gosub ERR_SEARCH
L_1830: Search #10,3,1;K10$,R[10],E \ If E = 2 Goto L_1860
!!!If E Gosub ERR_SEARCH
L_1840: DIV[0] = K10$[1,2] \ If DIV[0] > DIV[2] Goto L_1860
Mat Read #10,R[10],12;DIV$;
Goto L_1950
L_1860: If Not(TOTFLAG) Goto OUTEND
DIVFLAG = 0
! - Goto L_1950
L_1950: 
On R9 Goto L_1960,L_1960,L_3515
!
L_1960: 
NAME$ = ""
!!!If Err 0 Gosub ERR_ESCAPE
B9 = 0 \ C = 0 \ G9 = 0
K1$ = " ",K1$ \ K1$[1,2] = B8 Using "##" \ K1$[3,8] = C8 Using "######"
L_2000: 
Search #2,3,1;K1$,R[2],E 
If E = 2 Goto L_3500
!!!If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;H;
Mat Read #2,R[2],16;H1;
Mat Read #2,R[2],20;H$;
Mat Read #2,R[2],50;H1$;
Mat Read #2,R[2],62;H2;
Mat Read #2,R[2],80;N3;
Mat Read #2,R[2],86;N5;
If DIVFLAG If DIV[0] <> N3[1] Goto L_2000
If N3 > B8[1] Goto L_3500
If H < C8 Goto L_2000
If H > C8[1] Goto L_2000
If B9 If B9 <> N3 Gosub L_4100
If B9 <> N3 Let L = 99
If C If C <> H Gosub L_3000
If C <> H Gosub L_3100
If H1[0] = 9 Goto L_2000
If NAME$ <> "" If NAME$[1,30] <> H$[1,30] Gosub L_3000
If NAME$[1,30] <> H$[1,30] Gosub L_3100
Gosub L_5800
Gosub L_5000
If C0[6] And Not(H1[1]) Let DIVTOT[N3[1]] = DIVTOT[N3[1]] + H2
Goto L_2000
!
L_3000: Rem PRINT CHECK TOTAL
If Not(C) Goto L_3050
If VOID If T1[0] = 0 Goto L_3050
Gosub L_5800
if not(j8)
  Print #0; Tab 48;"CHECK TOTALS";
  Print #0; Using "---,---,---.##"; Tab 66;T1[0];
  Print #0; Using "-----,---.##"; Tab 77;T1[1];
  Print #0; Using "------,---.##"; Tab 92;T1[2]; Tab 116;T1[3]
  Print #0;U9$
end if
L = L + 1
L_3050: For I = 0 To 4
  T9[I] = T9[I] + T1[I]
  T8[I] = T8[I] + T1[I]
  T1[I] = 0
Next I
VOID = 0
Return 
!
L_3100: Rem PRINT CHECK HEADING
X2 = H[2]
Gosub L_8900
Gosub L_5800
If H1[0] = 9 Goto L_3155
If L = L9 - 1 Gosub L_5815
if not(j8)
  Print #0; Using "######     ";"CHECK #:   ";H;P$[1,8];!!!!check #
  Print #0; Using "######  "; Tab 40;"Pay To: ";N5;H$[1,30]  !!pay to
end if
NAME$[1,30] = H$[1,30]
C = H
Return 
!
L_3155: 
if not(j8) Print #0; Using "######     ";"CHECK #:   ";H;"*** VOID CHECK *** "
VOID = 99
C[1] = C
NAME$[1,30] = H$[1,30]
if not(j8) Print #0;" "
L = L + 1
Return 
!
L_3200: Rem PRINT BANK NAME
K5$ = N3 Using "##"
A5$ = "BANK NOT ON FILE!!!!"
Search #4,2,1;K5$,R[4],E
If E = 1 Goto L_3250
!!If E Gosub ERR_SEARCH
Mat Read #4,R[4],2;A5$;
L_3250: Rem GOSUB L_5800:
B9 = N3
Return 
!
L_3500: Rem AUDIT DISTRIBUTION
Gosub L_4100
Gosub L_4000
L_3515: Rem ACCOUNT DISTIBUTION SECTION
T1 = 0 \ F9 = 99 \ G9 = 99 \ L = 99 \ A9[1] = 0
If R9 = 2 Goto L_9100
K3$ = ACCT[0] Using "########"
L_3540: 
Search #3,3,2;K3$,R[3],E
 If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
Mat Read #3,R[3],34;H5;
If DIVFLAG If DIV[0] <> H5 Goto L_3540
A9[0] = K3$[1,8] \ If A9[0] > ACCT[1] Goto L_9100
If A9[1] If A9[0] <> A9[1] Gosub L_3600
Mat Read #3,R[3];H3;
Mat Read #3,R[3],8;H2$;
A9[1] = A9[0] \ F9 = 0
Mat Read #3,R[3],20;H3$;
Mat Read #3,R[3],28;H4;
Gosub L_5500
T1 = T1 + H4
Goto L_3540
!
L_3600: Rem PRINT ACCT
If Not(A9[1]) Return 
A1$ = "ACCT NOT FOUND"
V$ = " ",V$ \ V$[1,9] = A9[1] Using "#########"
E = 0
Search #5,2,1;V$,R[5],E
If E = 1 Goto L_3645
!!!If E Gosub ERR_SEARCH
Mat Read #5,R[5],12;A1$;
L_3645: 
Gosub L_5800
if not(j8)
  Print #0; Tab 103;"-------------"
  Print #0; Tab 30;" TOTAL FOR ACCOUNT ";V$[2,9];"  ";A1$[1,15];
  Print #0; Using "---,---,---.##"; Tab 102;T1
  Print #0;" "
End if
L = L + 2
T1 = 0
Return 
!
L_4000: Rem TOTAL PRINT
If DIVFLAG And T9[0] = 0 And T9[1] = 0 And T9[2] = 0 And T9[3] = 0 Return 
if not(j8) Print #0;" " 
L = L + 1
Gosub L_5800
if not(j8)
  If DIVFLAG Print #0; Using "##"; Tab 35;"*TOTAL FOR DIVISION ";DIV[0];"*";
  If Not(DIVFLAG) Print #0; Tab 37;"*** GRAND TOTALS ***";
  Print #0; Using "---,---,---.##"; Tab 66;T9[0];
  Print #0; Using "-----,---.##"; Tab 80;T9[1];
  Print #0; Using "------,---.##"; Tab 92;T9[2];
  Print #0; Using "---,---,---.##"; Tab 115;T9[3]
End if
For I = 0 To 4
  T9[I] = 0
Next I
If Not(C0[6]) Goto L_4090
If DIVFLAG Goto L_4090
if not(j8) Print #0;" " !!\ L = 1
 L = 1
Gosub L_5800 \ if not(j8) Print #0; Tab 10;"***  DIVISIONAL ACCOUNTS PAYABLE BREAKDOWN  ***"
For I = 1 To 99
  If Not(DIVTOT[I]) Goto L_4075
  K10$ = I Using "##" \ DIV$ = "NOT ON FILE!!!"
  Search #10,2,1;K10$,R[10],E \ If E Goto L_4066
  Mat Read #10,R[10],12;DIV$;
L_4066: T9[0] = T9[0] + DIVTOT[I]
  Gosub L_5800 \ if not(j8) Print #0; Using "##  "; Tab 10;I;DIV$;!!
  if not(j8) Print #0; Using "---,---,---.##"; Tab 45;DIVTOT[I]!!
  DIVTOT[I] = 0
L_4075: Next I
If Not(T9) Goto L_4090
if not(j8) Print #0; Tab 45;"--------------" 
L = L + 1
Gosub L_5800 \ if not(j8) Print #0; Tab 10;"** GRAND TOTAL ** ";
if not(j8) Print #0; Using "---,---,---.##"; Tab 45;T9[0]
L_4090: Return 
!
L_4100: Rem BANK TOTAL PRINT
Gosub L_3000
If DIVFLAG And T8[0] = 0 And T8[1] = 0 And T8[2] = 0 And T8[3] = 0 Goto L_4140
Gosub L_5800
if not (j8)
  Print #0; Tab 37;"*** BANK TOTALS ***";
  Print #0; Using "---,---,---.##"; Tab 66;T8[0];
  Print #0; Using "-----,---.##"; Tab 80;T8[1];
  Print #0; Using "------,---.##"; Tab 92;T8[2];
  Print #0; Using "---,---,---.##"; Tab 115;T8[3]
End if
L_4140: For I = 0 To 4
  T8[I] = 0
Next I
C = 0
Return 
!
L_5000: Rem PRINT LINE
F8 = 0
if j8 
  !!tmp1$ = N$,fdel$ !!client
  tmp1$ = N3 Using "##  ",fdel$,A5$,fdel$  !!bank
  tmp1$ = tmp1$ ,H Using "######     ",fdel$,P$[1,8],fdel$!!!check #
  tmp1$ = tmp1$ , N5 Using "######  ",fdel$ ,H$[1,30] ,fdel$!!pay to
  tmp1$=tmp1$,H[1] Using "######",fdel$!!VENDOR#
  tmp1$=tmp1$,H$[1,30],fdel$!!VENDOR NAME
  tmp1$=tmp1$,H1$[1,12],fdel$!!INVOICE #
  X2 = H[3] \ Gosub L_8900
  tmp1$=tmp1$,P$,fdel$!!!INV DATE
  tmp1$=tmp1$,H2[0] Using "-----,---.##",fdel$!!GROSS PAY
  tmp1$=tmp1$,H2[1] Using "-----,---.##",fdel$!!DISCOUNT
  tmp1$=tmp1$,H2[2] Using "------,---.##",fdel$!!PAYMENT
else 
  Print #0; Using "######"; Tab 3;H[1];!!VENDOR#
  Print #0; Tab 11;H$[1,30];!!VENDOR NAME
  Print #0; Tab 42;H1$[1,12];!!INVOICE #
  X2 = H[3] \ Gosub L_8900
  Print #0; Tab 59;P$;!!!INV DATE
  Print #0; Using "-----,---.##"; Tab 68;H2[0];!!GROSS PAY
  Print #0; Using "-----,---.##"; Tab 80;H2[1];!!DISCOUNT
  Print #0; Using "------,---.##"; Tab 92;H2[2];!!PAYMENT
end if
For I = 0 To 2
  T1[I] = T1[I] + H2[I]
Next I
Goto L_5610
L_5500: H[3] = 0
H$ = " ",H$
H = 0
If Not(H3) Let X2 = H3[1] \ Goto L_5560
Mat Read #2,H3,0;H;
Mat Read #2,H3,20;H$;
X2 = H[3]
L_5560: Gosub L_8900
Gosub L_5800
if j8
  !!tmp$ = N$,fdel$ !!client
  tmp$ = H3$[1,8],fdel$!!!account# 2 
  If H[0] tmp$ = tmp$, H[0] Using "######",fdel$ ELSE tmp$ = tmp$," ",fdel$
  tmp$ = tmp$,H$[1,30],fdel$
  tmp$ = tmp$,H2$[1,12],fdel$!!invoice code 2
  tmp$ = tmp$,P$[1,8],fdel$!!date 2
  tmp$ = tmp$,H4 Using "---,---,---.##",fdel$!!!distribu amaunt
  call addtostr(e$,rstr$,tmp$+rdel$)
else 
  Print #0; Tab 8;H3$[1,8];!!!account# 2 
  If H[0] Print #0; Using "######"; Tab 24;H[0];
  Print #0; Tab 36;H$[1,30];
  Print #0; Tab 70;H2$[1,12];!!invoice code 2
  Print #0; Tab 89;P$[1,8];!!date 2
  Print #0; Using "---,---,---.##"; Tab 102;H4!!!distribu amaunt
end if
Return 
!
L_5610: A1$ = " ",A1$
A1$[1,6] = R[2] Using "######"
L_5625: 
E = 0
Search #3,3,1;A1$,R[3],E
If E = 2 Return !!
!!!If E Gosub ERR_SEARCH
X2 = A1$[1,6]
If R[2] <> X2 Return 
Mat Read #3,R[3],20;H3$;
Mat Read #3,R[3],28;H4;
If F8 Gosub L_5800
if j8 
  tmp2$ = H3$[1,8],fdel$ !!account #
  tmp2$ = tmp2$,H4 Using "------,---.##",fdel$!!!amount
  tmp$ = tmp1$ , tmp2$
   call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0; Tab 107;H3$[1,8]; !!account #
  Print #0; Using "------,---.##"; Tab 116;H4;!!!amount
 end if
T1[3] = T1[3] + H4
if not(j8) Print #0;""
F8 = 99
Goto L_5625
Return 
!
L_5800: 
L = L + 1
If L < L9 Return 
If P = 0 Goto L_5830
L_5815: If L9 <> 22 Goto L_5830
!!Print 'CR CL';"PRESS <CR> TO CONTINUE ";
!!Input ""X$
L_5830: Rem IF P PRINT #0;'CS';
if not(j8) If P Print #0;"\14\";
if not(j8) Print #0;"\15\"; Tab 55;N$!!!client name 
P = P + 1
L = 4
if not(j8)
  Print #0;D8$;
  Print #0; Tab 55;"MONTHLY CHECK REGISTER ";C$[3,4];"/";C$[1,2];
  Print #0; Tab 110;"PAGE ";P
  If DIVFLAG Print #0; Using "## "; Tab 55;"DIVISON: ";DIV[0];DIV$[1,30] \ L = L + 1
end if
If G9 Goto L_5900
Gosub L_3200
if not(j8)
  Print #0; Using "##  "; Tab 55;"BANK # ";N3;A5$ \ L = L + 1!!!bank # ,bank name
  Print #0;" "
end if
Goto L_5925
L_5900:
if not(j8)
  Print #0; Tab 55;"DISTRIBUTION AUDIT LIST"
  Print #0;""
  Print #0; Tab 8;"ACCOUNT #"; Tab 24;"CHECK #"; Tab 36;"VENDOR NAME";
  Print #0; Tab 70;"INVOICE CODE"; Tab 93;"DATE"; Tab 104;"DISTRIB. AMT";
end if
Goto L_5975
L_5925: 
if not(j8)
  Print #0; Tab 2;"VENDOR#";
  Print #0; Tab 11;"VENDOR NAME";
  Print #0; Tab 42;"INVOICE #";
  Print #0; Tab 59;"INV DATE";
  Print #0; Tab 71;"GROSS PAY";
  Print #0; Tab 84;"DISCOUNT";
  Print #0; Tab 98;"PAYMENT";
  Print #0; Tab 107;"ACCOUNT#";
  Print #0; Tab 123;"AMOUNT";
  Print #0;""
end if
L_5975: L = L + 2
if not(j8) Print #0;" "
Return 
!
L_8900: Rem PUT DATE FROM X2 INTO P$
P$ = " ",P$
If Not(X2) Return 
U5$ = X2 Using "&&&&&&"
P$[1,2] = U5$[3,4]
P$[3,3] = "/"
P$[4,5] = U5$[5,6]
P$[6,6] = "/"
P$[7,8] = U5$[1,2]
Return 
!!!
L_9100: Rem END OF RANGE
If R9 <> 2 Gosub L_3600
If DIVFLAG Goto L_1830
If R9 = 1 If L9 = 22 Let L9 = 99 \ Gosub L_5800
If R9 = 1 Goto OUTEND
Goto OUTEND
!
OUTEND: Rem EXIT PROGRAM
!
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
!!If L9 = 22 Print 'CR';"PRESS <CR> TO EXIT";
!!If L9 = 22 Input ""X$
!!Chain "MX000C"
!!Close 
!!Chain "MX000"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End
