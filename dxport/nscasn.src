! >>> Program nscasn.dl4
!
! description converted call from unibasic nscasn
!
! loadsave -w -n 10,10 -o prog/dxport/nscasn.dl4 src/nscasn.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem NSCASN
Rem Network Services - Advance Shipping Notify
Rem Text file (1 / order)
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 23, 2004  14:40:56
Rem /w/papermaster/r2002//usr/acct/jcs/work/custom/dadedevl/nscasn.src (univ2) [jcs] {13672}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub CheckDigits,FindF,FormatDate,InpBuf,String,VerifyDate
declare intrinsic Function FindChannel
! Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Enter ORDREC,PCHAN[],e$,IntCo,rstr$
dim buttonlist$[5,50],nextlist$[5,100] ! dxport
If Not(ORDREC) Goto OUTEND
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim 1%,CH_CNTRL,CH_CUST,CH_ROH,CH_ROS,CH_ROT,CH_ROL,CH_ROM
Dim 1%,CH_ASN,CH_NSC,CH_UPC,CH_NUNIT,CH_CCODE,COID,X1,PFRM,SNDASN
Dim 1%,L3[3],UN[2],S2[1],EUN[2],CNVTU[2],EOR,SC,SR,FLAG[9]
Dim 1%,UDA_OFFSET1,UDA_OFFSET2,PFU1[20],CH_NINI,DIVUSE,NOHEADR
Dim 2%,NMS_AGENT_NO_MAJOR[999],NMS_AGENT_NO_MINOR[999],NMS_SHIPTO_CUST_MINOR
Dim 2%,H0[12],H5[16],L4[3],L6[5],L9[1],X2[9],H6[8]
Dim 2%,UPCGRP,B[24],AGENT_MAJOR,DIVISION,POS_,SCR
Dim 3%,L5[3],L7[12],S3[17],OLM[6],UNF[6]
Dim 3%,NMS_AGENT_NO[999],NMS_SHIPTO_CUST_MAJOR,NSCNUM
Dim 3%,PFU2[6],A[34],AMOUNT,CNVTA,A1[7],SUMQTY[3]
Dim 4%,NMS_SHIPTO_CUST,NSCORDERNO
Dim P0$[20],U2$[60],L6$[60],L1$[20],S3$[33],FLE$[20],A1$[142]
Dim NSCTEMP$[20],DELDATE$[10],DELTIME$[6],NSCPROD$[20]
Dim UPC1$[14],NSCUM$[2],SELLUM$[4],FS$[1],M1$[40],FLD$[50]
Dim UM1$[8],UNIT$[2],SYS$[256],ASNFILE$[128],DIROUT$[64]
Dim K1$[50],K2$[50],K3$[50],K4$[50],X$[10],SEL$[5]
Dim LINE_$[512],NMS_SHIPTO_CUST$[20],UPC$[57],UPC2$[50]
Dim 3%,R[99],UPC3[7]
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
FS$ = "~"
PFRM = PCHAN[0] \ If PFRM = 0 Let PFRM = 1
CH_CNTRL = PCHAN[1]
CH_CUST = PCHAN[5]
CH_CCODE = PCHAN[6]
CH_ROH = PCHAN[8]
CH_ROS = PCHAN[9]
CH_ROT = PCHAN[10]
CH_ROL = PCHAN[11]
CH_ROM = PCHAN[12]
PCHAN[0] = 1
CHNL = FindChannel() ! 98 \ Gosub GETCHAN
CH_NINI = CHNL
FLE$ = "cntrl/nms.ini"
Call FindF(FLE$,FOUND)
If Not(FOUND) Goto OUTEND
Open #CH_NINI,FLE$
CHNL = FindChannel() ! 98 \ Gosub GETCHAN
CH_UPC = CHNL
FLE$ = "2/UPCXREF" + Str$(COID)
Call FindF(FLE$,FOUND)
If Not(FOUND) Goto OUTEND
Open #CH_UPC,FLE$
CHNL = FindChannel() ! 98 \ Gosub GETCHAN
CH_NUNIT = CHNL
FLE$ = "2/NETUNIT"
Call FindF(FLE$,FOUND)
If Not(FOUND) Goto OUTEND
Open #CH_NUNIT,FLE$
CHNL = FindChannel() ! 98 \ Gosub GETCHAN
CH_NSC = CHNL
FLE$ = "2/NSCINFO" + Str$(COID)
Call FindF(FLE$,FOUND)
If Not(FOUND) Goto OUTEND
Open #CH_NSC,FLE$
CHNL = FindChannel() ! 98 \ Gosub GETCHAN
CH_ASN = CHNL
Rem the above is not opened until needed!!
Rem DO NOT GET A CHANNEL ANYMORE - YOU'LL GET A BE 40!!!
PCHAN[0] = 2
INI_LOOP: Rem "read nms.ini for data
Gosub RDINI
NMS_AGENT_NO = LINE_$
If NMS_AGENT_NO = 0
  If NMS_AGENT_NO <= 0 Goto OUTEND
  e$="  Unable to determine your Network Member ID!"
  !E$=E$+"Please call UBS for help and press <CR> to exit"
  !Input @0,23;""SEL$
  PChan[0]=-1
  Goto OUTEND
End If 
LINE_$ = NMS_AGENT_NO Using "&&&&&"
NMS_AGENT_NO_MAJOR = LINE_$[1,3]
NMS_AGENT_NO_MINOR = LINE_$[4,5]
LOOP_DIVISION: Gosub RDINI
If LINE_$[1,9] = "DIVISION["
  DIVISION = (LINE_$[10] To "]")
  Search LINE_$,"=",POS_
  If Not(POS_)
    e$=" Unable to determine division #"+STR$(DIVISION)+" information"
    !Print @18,12;"Please call UBS for help and press <CR> to exit"
    !Input @0,23;""SEL$
	PChan[0]=-2
    Goto OUTEND
  End If 
  NMS_AGENT_NO[DIVISION] = LINE_$[POS_ + 1,POS_ + 6]
  LINE_$ = NMS_AGENT_NO[DIVISION] Using "&&&&&"
  NMS_AGENT_NO_MAJOR[DIVISION] = LINE_$[1,3]
  NMS_AGENT_NO_MINOR[DIVISION] = LINE_$[4,5]
  If DIVISION Let DIVUSE = 9
  Goto LOOP_DIVISION
End If 
Gosub RDINI
Search LINE_$,",",POS_
UDA_UNKNOWN: Rem"come here if the uda field is not determinable
If Not(POS_)
  e$="Unable to determine which user defined field"
  E$=E$+"in the customer screen is being used to"
  E$=E$+"store the customer's network member id."
  !Print @18,14;"Please call UBS for help and press <CR> to exit"
  !Input @0,23;""SEL$
  PChan[0]=-3
  Goto OUTEND
End If 
UDA_OFFSET1 = LINE_$[1,POS_ - 1]
UDA_OFFSET2 = LINE_$[POS_ + 1]
If Not(UDA_OFFSET1) Or Not(UDA_OFFSET2) Let POS_ = 0 \ Goto UDA_UNKNOWN
Close #CH_NINI
K1$ = "DIROUT"
Search #CH_NSC,2,1;K1$,R[CH_NSC],E !\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_NSC,R[CH_NSC],0;DIROUT$;
Else 
  DIROUT$ = "/usr/tmp/nsc/asn/out/"
End If 
K1$ = "UPCGRP"
Search #CH_NSC,2,1;K1$,R[CH_NSC],E ! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_NSC,R[CH_NSC],0;UPCGRP;
Else 
  UPCGRP = 0
End If 
K1$ = "NSCNUM"
Search #CH_NSC,2,1;K1$,R[CH_NSC],E ! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_NSC,R[CH_NSC],0;NSCNUM;
Else 
  NSCNUM = 0
End If 
K1$ = "ASNSND"
Search #CH_NSC,2,1;K1$,R[CH_NSC],E ! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_NSC,R[CH_NSC],0;SNDASN;
Else 
  SNDASN = 1
End If 
If PFRM <> 967 ! "not manual send
  If PFRM <> SNDASN Goto OUTEND
End If 
NOHEADR = 1
DATERR = 0
If Not(UPCGRP) ! "need a group #
  E$="NO UPC GROUP NUMBER DEFINED!"
  DATERR = 1 \ Signal 3,20
End If 
Call FindF(DIROUT$,FOUND)
If Not(FOUND)
  e$="DIRECTORY FOR EXPORT NOT FOUND!"
  DATERR = 1 \ Signal 3,20
End If 
If DATERR ! "got an error
  !Print @0,23;"Please call UBS for help and press <CR> to exit ";
  !Input Len 16384 + 1;""SEL$
  Pchan[0]=-4
  Goto OUTEND
End If 
Mat Read #CH_ROH,ORDREC,0;H0;
Mat Read #CH_ROH,ORDREC,104;H5;
Mat Read #CH_ROH,ORDREC,446;P0$;
PCHAN[0] = 3
OSTAT = H0[0]
If OSTAT > 60
  OSTAT = H6[2]
End If 
If PFRM <> 967 ! "not a manual send - rest are AFTER STATUS BUMP
  If PFRM = 1 And OSTAT <> 2 Goto OUTEND
  If PFRM = 2 And OSTAT <> 3 Goto OUTEND
  If PFRM = 3 And OSTAT < 4 Goto OUTEND
End If 
K1$ = " ",K1$;K1$ = H0[4] Using "######"
Search #CH_CUST,2,1;K1$,R[5],E ! \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto OUTEND
Mat Read #CH_CUST,R[5],0;A1$;
If A1$[142,142] <> "Y" Goto OUTEND
Mat Read #CH_CUST,R[5],426;U2$;
E = 0 \ If Err 0 Let E = Spc(8)
NMS_SHIPTO_CUST$ = (U2$[UDA_OFFSET1,UDA_OFFSET2] To " ")
LOOK_FOR_DASHES: Search NMS_SHIPTO_CUST$,"-",POS_
If POS_
  NMS_SHIPTO_CUST$[POS_] = NMS_SHIPTO_CUST$[POS_ + 1]
  Goto LOOK_FOR_DASHES
End If 
If NMS_SHIPTO_CUST$
  Call CheckDigits(NMS_SHIPTO_CUST$)
  ! If Err 0 Gosub ERR_ESCAPE
  If E !"it is not strictly numeric -- so it probably isn't a nms code
    NMS_SHIPTO_CUST$ = ""
  Else !"ok, now ensure that the code is nine digits in length
    NMS_SHIPTO_CUST = NMS_SHIPTO_CUST$
    NMS_SHIPTO_CUST$ = NMS_SHIPTO_CUST Using "&&&&&&&&&"
    If NMS_SHIPTO_CUST$[1,1] = "*" Let NMS_SHIPTO_CUST$ = ""
  End If 
End If 
If NMS_SHIPTO_CUST$ !"this is a network services cust
  NMS_SHIPTO_CUST_MAJOR = NMS_SHIPTO_CUST$[1,3]
  NMS_SHIPTO_CUST_MINOR = NMS_SHIPTO_CUST$[4]
Else ! "not NSC - Go away
  PCHAN[0] = 4
  Goto OUTEND
End If 
Gosub CHK4_NSCORDER
K2$ = " ",K2$;K2$[1,6] = H0[7] Using "######"
NOHEADR = 1
ROL_LOOP: Rem "til done with Order
Search #CH_ROL,3,1;K2$,R[11],E \ If E = 2 Goto ROL_DONE
! If E Gosub ERR_SEARCH
X2 = K2$[1,6] \ If X2 <> H0[7] Goto ROL_DONE
Mat Read #CH_ROL,R[11],8;L3;
Mat Read #CH_ROL,R[11],16;L4;
Mat Read #CH_ROL,R[11],32;L5;
Mat Read #CH_ROL,R[11],56;L6;
Mat Read #CH_ROL,R[11],80;L6$;
Mat Read #CH_ROL,R[11],140;L1$;
Mat Read #CH_ROL,R[11],160;L9;
Mat Read #CH_ROL,R[11],168;L7;
Mat Read #CH_ROL,R[11],250;UN;
Mat Read #CH_ROL,R[11],256;S2;
Mat Read #CH_ROL,R[11],260;S3;
Mat Read #CH_ROL,R[11],370;S3$;
Mat Read #CH_ROL,R[11],404;OLM;
Mat Read #CH_ROL,R[11],446;EUN;
Mat Read #CH_ROL,R[11],452;UNF;
If L7[2] = 0 And L7[3] = 0 And L7[4] = 0 Goto ROL_LOOP
If S2[0] = 3 Goto ROL_LOOP
GET_UPC: Rem look for upc
UPC1$ = "0",UPC1$;NSCPROD$ = " ",NSCPROD$
K3$ = " ",K3$;NSCPROD$ = ""
K3$[1,6] = UPCGRP Using "######"
K3$[7,18] = L1$[1,12]
UPC_LOOP: Rem loop thru upc
Search #CH_UPC,3,3;K3$,R[21],E
If E Goto UPC_DONE
X2 = K3$[1,6]
If X2 <> UPCGRP Goto UPC_DONE
If K3$[7,18] <> L1$[1,12] Goto UPC_DONE
Mat Read #CH_UPC,R[21],0;UPC$
Mat Read #CH_UPC,R[21],57;UPC3
Mat Read #CH_UPC,R[21],105;UPC2$;
If UPC3[3] = 0 Goto UPC_LOOP
If UPC3[0] ! "U/M loaded - check it
  If UPC3[0] <> UN[0] Goto UPC_LOOP
End If 
UPC1$[1,14] = UPC$[13,26]
NSCPROD$ = UPC2$[1,20]
Goto UPC_LOOP
UPC_DONE: Rem "
SELLUM$ = " ",SELLUM$
If UN[0] = -1 Let SELLUM$ = "CWT "
If UN[0] = -2 Let SELLUM$ = "LOT "
If UN[0] = -3 Let SELLUM$ = "LB  "
If UN[0] > 0 Read #CH_CCODE,UN[0],10;SELLUM$;
Gosub NETUMXREF
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If L3[0] !"nonstocks
  PFU1[13] = UN[0]
  PFU1[16] = EUN[0];PFU1[17] = EUN[0];PFU1[18] = UN[0]
  PFU1[19] = UN[0]
End If 
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
For X1 = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1
  CNVTA = L7[X1 + 1] \ Gosub CONVERT
  SUMQTY[X1] = AMOUNT
Next X1
Rem"finally ready to send
If Len(NSCPROD$) > 2 ! "got something - check if starts with NSC
  If NSCPROD$[1,3] <> "NSC" ! "doesn't start with NSC - add it
    NSCTEMP$ = "NSC" + NSCPROD$
    NSCPROD$ = NSCTEMP$
  End If 
End If 
If NOHEADR ! "header not created
  Gosub CREATEASNFLE
  Gosub WRITEHDR
  NOHEADR = 0
End If 
Gosub WRITEDTL
Goto ROL_LOOP
ROL_DONE: Rem "done
PCHAN[0] = 5
If NOHEADR Goto OUTEND
Close #CH_ASN
Goto OUTDONE
WRITEHDR: Rem "header portion
EOR = 0
FLD$ = "H" \ Gosub WRTASN
FLD$ = Str$(NSCORDERNO) \ Gosub WRTASN
FLD$ = P0$ \ Gosub WRTASN
FLD$ = "NSC" + NMS_SHIPTO_CUST$ + "0000"
Gosub WRTASN
X$ = H0[10] Using "&&&&&&"
Call FormatDate(X$,X$,E)
If E ! "bad ship date?
  X$ = H5[2] Using "&&&&&&"
  Call FormatDate(X$,X$,E) \ If E Let X$ = " ",X$
End If 
Call VerifyDate(X$,DELDATE$,E,1)
FLD$ = DELDATE$ \ Gosub WRTASN
EOR = 1
FLD$ = "000000"
Gosub WRTASN
NOHEADR = 0
Return 
WRITEDTL: Rem "line item detail
EOR = 0
FLD$ = "D" \ Gosub WRTASN
FLD$ = Str$(NSCORDERNO) \ Gosub WRTASN
FLD$ = NSCPROD$ \ Gosub WRTASN
FLD$ = UPC1$ \ Gosub WRTASN
FLD$ = "" \ Gosub WRTASN
FLD$ = Str$(Int(SUMQTY[1])) \ Gosub WRTASN
FLD$ = UNIT$[1,2] \ Gosub WRTASN
FLD$ = Str$(Int(SUMQTY[3])) \ Gosub WRTASN
FLD$ = UNIT$[1,2] \ Gosub WRTASN
FLD$ = Str$(Int(SUMQTY[2])) \ Gosub WRTASN
FLD$ = UNIT$[1,2] \ Gosub WRTASN
EOR = 1
FLD$ = L6$[1,50] \ Gosub WRTASN
EOR = 0
Return 
WRTASN: Rem "write to the ASN File
Print #CH_ASN;FLD$;
If EOR ! "end of record
  Print #CH_ASN;""
Else ! "more to come - add separator
  Print #CH_ASN;FS$;
End If 
FLD$ = " ",FLD$
Return 
CREATEASNFLE: Rem "need file created
AGENT_MAJOR = 0
If NSCNUM Let AGENT_MAJOR = NSCNUM;DIVUSE = 0
If DIVUSE
  X2 = NMS_AGENT_NO_MAJOR[H5[8]]
  If X2 > 0 And X2 < 1000
    AGENT_MAJOR = X2
  Else 
    AGENT_MAJOR = 0
  End If 
End If 
If AGENT_MAJOR = 0 Let AGENT_MAJOR = NMS_AGENT_NO_MAJOR
ASNFILE$ = " ",ASNFILE$
ASNFILE$ = AGENT_MAJOR Using "&&&"
ASNFILE$[4] = H0[7] Using "&&&&&&&.asn"
SYS$ = "touch  " + DIROUT$ + ASNFILE$
System SYS$
ASNFILE$ = SYS$[8]
Open #CH_ASN,ASNFILE$
Return 
NETUMXREF: Rem look up net work um
K3$ = " ",K3$
K3$[1,4] = SELLUM$[1,4]
Search #CH_NUNIT,2,2;K3$,R[31],E
If E
  UM1$[5,8] = SELLUM$[1,4]
  Goto SETUNIT
End If 
Mat Read #CH_NUNIT,R[31],0;UM1$
SETUNIT: Rem set unit
UNIT$[1,2] = UM1$[5,6]
Return 
CHK4_NSCORDER: Rem "see if loaded in Messages
K2$ = " ",K2$;K2$[1,6] = H0[7] Using "######"
NSCORDERNO = 0
ROM_LOOP: Rem "till All done
Search #CH_ROM,3,1;K2$,R[12],E \ If E = 2 Goto ROM_DONE
! If E Gosub ERR_SEARCH
X2 = K2$[1,6] \ If X2 <> H0[7] Goto ROM_DONE
Mat Read #CH_ROM,R[12],0;M1$;
If M1$[1,6] = "CONF# " ! "that's how it's identified
  NSCORDERNO = M1$[7]
End If 
Goto ROM_LOOP
ROM_DONE: Return 
RDINI: Rem"read a line of text from the "nms.ini" file
Read #CH_NINI;LINE_$
If LINE_$[1,1] = "#" Goto RDINI
If LINE_$[1,1] = "!" Goto RDINI
LINE_$ = LINE_$ To "\15\"
LINE_$ = LINE_$ To "\11\"
LINE_$ = LINE_$ To "#"
LINE_$ = LINE_$ To "!"
STRIP_BLANK: If LINE_$[Len(LINE_$)] = " " Let LINE_$[Len(LINE_$)] = "" \ Goto STRIP_BLANK
Return 
OUTDONE: Rem "done with .asn closed
PCHAN[0] = 0
Rem If conversion to DOS needed - do it here
OUTEND: Rem "outta here - close any files opened here!
If Err 0 Rem
If CH_UPC Close #CH_UPC
If CH_NUNIT Close #CH_NUNIT
If CH_NSC Close #CH_NSC
If Err 0 Gosub ERR_TRAP
End 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
!	For SCR = CHNL To 1 Step -1
!	  CHNL = SCR
!	  Gosub CHNLFREE
!	  If CHNLFREE
!		SCR = 1
!	  Else 
!		CHNL = 0
!	  End If 
!	Next SCR
!	Return 
!	CHNLFREE: Rem check to see if a channel is being used
!	If Err 0 Let CHNLFREE = Spc(8)
!	CHNLFREE = 0
!	CHNLSCR = Chf(CHNL)
!	If Err 0 Gosub ERR_ESCAPE
!	If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
!	END_CHNLFREE: Rem
Return 
Rem {end rtn.getchan.i}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !If Spc(4) > 1280 Goto CVTSTARTB
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
!CVTTRY: Rem "this is a remark
!Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto CVTTRY
!If CNVTU[2] = 0 Goto CVTDONE
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG ! \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callsuberr.inc"
End 