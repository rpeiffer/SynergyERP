! >>> Program 135h
!
! description Change Customer ECCOS Flag
! loadsave -w -n 100,10 -o prog/dxport/135h.dl4 src/135h.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem   MX135h   -  eccos customer flag update program
Rem   born-on: rce 09/25/2000
Rem
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  4, 2002  15:26:06
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx1/mx135h.src (univ2) [kag] {14919}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub CheckDigits,InpBuf,String,programdump
! Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
If Err 0 Gosub ERR_TRAP
Dim 1%,SC,SR
Dim 2%
Dim 3%
Dim J4$[50]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],Msg$[500],rstr$[2000] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
Rem {begin src/inc/dim.cust.i}
Dim A3$[22],BT$[20],U2$[60],A2$[30],A1$[142]
Dim 2%,A0[3],C1[12],REC,C3[1]
Dim 1%,S0[20],SUB_,SZN,C7[4],C0,C2[2],C8,C11[2]
Dim 3%,C4[6],C10[5],CFIN[8],U1,C9,C5[5],C6[9],C12[1]
Rem {end dim.cust.i}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
DIM_VARS: Rem
Dim 1%,C11[2]
Dim 3%
Dim K2$[16],K3$[14],P9$[50],P60$[50],P61$[256]
Dim W9$[6]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

OPEN_FILES: Rem          opens files here
For J = 2 To 4
  Read J1
  If J1 = -1 Goto NXTF
  Read #1,88,Abs(J1);J$;
  If J1 > 0 Open #J,J$ Else Ropen #J,J$
NXTF: Rem
Next J
Data "1808","-1","-1"
Mat Read #1,60,50;P60$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
if p61$[33,33]<>"Y" ! no eccos
	E$="NOT FLAGGED FOR ECCOS"
	goto Err_Msg
Endif
INIT_VARS: Rem sort flags
FLG = 0;returnstatus=0
CFLG = 0;Message$=""
BCUST = 0
ECUST = 999999
CH_CUST = 2
MAIN: Rem
!Gosub PRINT_SCREEN
!Goto FLD1 \ FLG = 1
!Goto INPUTS
PRINT_SCREEN: Rem
!Print 'CS'
!Print @2,0;"MX135H";@20,0;"Mass Change Customer ECCOS Flag"
!Print @2,5;"1> Enter Starting Customer Code   :";
!Print @2,6;"2> Enter Ending Customer Code     :";
!Print @2,8;"3> ECCOS Flag Y/N                  :";
!Return 
INPUTS: Rem
!On X Gosub FLD1,FLD2,FLD3
!Goto INPUTS
FLD1: Rem
!J5$ = "Enter starting customer code, <CR>: All, or  -: Help"

call dxget("BCUST",tmp$)
J1=tmp$
BCUST = J1
!Print Using "######";@40,5;BCUST;'CL';
If BCUST <> 0 Let CFLG = 1
!J5$ = " ",J5$
FLD2: Rem
!J5$ = "Enter ending customer code, <CR> for last, or  -: Help"

call dxget("ECUST",tmp$)
J1=tmp$
ECUST = J1

If BCUST > ECUST
  message$ = message$+"Invalide customer code range  "
  returnstatus=1
End If 
!If FLG Return 
FLD3: Rem
!J5$ = " Y: Send to ECCOS,  N: Don't send to ECCOS"

call dxget("EFLG",tmp$)
J$=UCase$(RTrim$(tmp$))
if J$<>"Y" and J$<>"N"
	message$=message$+"Please select ECCOS Flag  "
	Returnstatus=1
Endif
J1=0 \ if j$="Y" let j1=1
ECCOSFLAG = J1
!J5$ = " ",J5$
!If FLG Return 
Check_INPUTS: ! see if ok
If ReturnStatus<>0 ! not okay
	e$=message$ ! it uses e$
	Goto Err_Msg
Endif
UPDATE: Rem
! Print @0,23;"Records processed...";'CL';
K2$ = " ",K2$;K3$ = " ",K3$
If CFLG
  K2$[1,6] = BCUST - 1 Using "######"
End If 
SEARCHC: Rem 
If CFLG
  Search #2,3,1;K2$,REC_CUST,E \ If E > 2 Gosub ERR_SEARCH
  If E Goto NEXTSTEP
  CUSTCODE = K2$[1,6]
  If CUSTCODE > ECUST Goto NEXTSTEP
  Gosub READ_CUST
Else 
  Search #2,3,1;K2$,REC_CUST,E \ If E > 2 Gosub ERR_SEARCH
  If E Goto NEXTSTEP
  Gosub READ_CUST
End If 
K = K + 1
! Print @18,23;K Using "######";
C11[1] = ECCOSFLAG
Mat Write #CH_CUST,REC_CUST,660;C11;
Goto SEARCHC
READ_CUST: Rem
Rem {begin src/inc/read.cust.i}
Mat Read #CH_CUST,REC_CUST,0;A1$
Mat Read #CH_CUST,REC_CUST,142;C1
Mat Read #CH_CUST,REC_CUST,194;C2
Mat Read #CH_CUST,REC_CUST,200;C3
Mat Read #CH_CUST,REC_CUST,208;C0
Mat Read #CH_CUST,REC_CUST,210;C4
Mat Read #CH_CUST,REC_CUST,252;C5
Mat Read #CH_CUST,REC_CUST,288;C6
Mat Read #CH_CUST,REC_CUST,348;A2$
Mat Read #CH_CUST,REC_CUST,378;C7
Mat Read #CH_CUST,REC_CUST,388;A3$
Mat Read #CH_CUST,REC_CUST,410;C8
Mat Read #CH_CUST,REC_CUST,412;C9
Mat Read #CH_CUST,REC_CUST,418;SUB_
Mat Read #CH_CUST,REC_CUST,420;U1
Mat Read #CH_CUST,REC_CUST,426;U2$
Mat Read #CH_CUST,REC_CUST,486;A0
Mat Read #CH_CUST,REC_CUST,502;S0
Mat Read #CH_CUST,REC_CUST,544;CFIN
Mat Read #CH_CUST,REC_CUST,598;SZN
Mat Read #CH_CUST,REC_CUST,600;BT$
Mat Read #CH_CUST,REC_CUST,620;REC
Mat Read #CH_CUST,REC_CUST,624;C10
Mat Read #CH_CUST,REC_CUST,660;C11
Mat Read #CH_CUST,REC_CUST,668;C12
Rem {end read.cust.i}
Mat Read #CH_CUST,REC_CUST,660;C11;
Return 
NEXTSTEP: Rem
! Input "       Press <CR> to Exit"X$
OUTEND: Rem
ReturnStatus=0 ! 0= ok in blockid, is =1 elsewhere
Message$="Complete - "+Str$(K)+" Customer Records Updated"
 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
 call AddToStr(e$,rstr$,WebStr$)
 call SetOutPut(e$,rstr$)
 try Call dxclose() else rem
End 
 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/135hse!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
  
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}