! >>> Program 402
!
! description End of Month Proof
! loadsave -w -n 100,10 -o prog/dxport/402.dl4 src/402.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"

Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 23, 2010  12:23:17
Rem /w2/papermaster/r2005//usr/acct/dave/work/custom/xrev9/fixeom.src (univ2) [dave] {09261}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem "FIXEOM v2.06      add up all sales figures for the month/year
Rem                    Paper Master  (xindist)
Rem "Author:           roman      08/30/1991
Rem CROSS-REFERENCE - FILES USED FOR EACH LINE DISPLAYED-WMB-7/99
Rem  SALES(MTD) ACCUMUL FROM:  DSP     VAR
Rem CUSTOMER FILE #2- 1808    252,3%  C5[2]
Rem CUSTOMER SALES#3- 2064    4,3%    S1[I,1](I=MTH)
Rem PRODUCT FILE  #4- 1792    256,3%  A[7]
Rem PRODUCT SALES #5- 2080    16,3%   S1[I,1](I=MTH)
Rem SALESMAN FILE #6- 1824    142,3%  S2[CAT,2](CAT=SUM 0-19)
Rem SALESMAN SALES#7- 2048    4,3%    S1[I,1](I=MTH)
Rem DIVISION SALES#8- 1648    16,3%   P2[I,1](I=MTH)
Rem SALES CURRENT#10- 2016    16,3%   S1[I,1](I=MTH)
Rem SALES TAX    #11- 2176    132,3%  TX0[1]
Rem AR SALES (430)#12-1504    24,3%   A3[5]
Rem NON STKS(443)#13- 2128    72,3%   L8[4]
Rem Z RECORD      #2- 1792(PROD REC:Z ZZZZZZZZZZ) 256,3% A[7]- FOR 1 REC
Rem NS SALES (451)#14-2896    24,3%   N2[I,1](I=MTH)
Rem INV/CM TOTALS     2192-2208 0,3%  Q2[0-8]-Q2[0-8]
Rem:  ****NOTE*** THERE ARE SEVERAL "REM" LINES THAT WILL TELL WHICH
Rem      LINE IS CAUSING THE DIFFERENCE, SAY BETWEEN CUST FILE & CUST SLS
Rem   THEY ARE AT LINE 1597, 1997 & 2397
Try
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[800],rstr$[2000] ! error 
dim xdate$[50]

Dim 1%,ROW,ARMONTH,ARYEAR,CAT,A0[10]
Dim 2%,I,F,R[20],E,X,A2[5],L7[2]
Dim 3%,A5[8]
Dim 3%,SALES,COSTS,UNTS,PFT,C5[5],S1[12,2],A[33],S2[19,5],P2[12,2]
Dim 3%,CUST_FILE[1,3],CUST_SLS[12,3],PROD_FILE[1,3],PROD_SLS[12,3]
Dim 3%,SLSM_FILE[1,3],SLSM_SLS[12,3],DIV_SLS[12,3],SLS_CURR[12,3]
Dim 3%,STAX[1],TX0[3],SARA[1,3],A3[13],L8[4],NSTK[3],ZREC[1,3],ROL7[12]
Dim 3%,N2[12,4],NS_SLS[12,3],INVCM[3],Q2[8],Q3[8],WHN1[4,4],WHN2[4,4]
Dim F$[16],K2$[50],Z1$[50],DEV$[20],TITLE$[20],VER$[5]
Dim SYS$[50],CNAME$[30],L2$[18],MASK$[15]
dim j$[50],REPTYPE$[1]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=intCO
!REC_UAC = GetUIDRec(e$,IntCo,Userid$) 
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Dim 3%

For I = 2 To 18
  Read F \ If F = -1 Goto L_835
  If Not(Fra(F)) Read #1,88,Abs(F);F$; Else Read #1,88,F * 10000;F$;
  If F >= 0 If Not(Fra(F)) Open #I,F$
  If F < 0 Eopen #I,F$
  If Fra(F) Ropen #I,F$
L_835: Next I
Data ".1808",".2064",".1792",".2080",".1824",".2048",".1648","-1",".2016",".2176",".1504"
Data ".2128",".2896",".2192",".2208",".1600",".1888"
Rem "2/3=CUST/CUSTSLS, 4/5=PROD/PRODSLS, 6/7=SLSM/SLSMSLS, 8=DIVHIST
Rem "10=SALESCURR, 11=TAXCODE, 12=SARACT, 13=SPRODDESC, 14=NSSALES
Rem "15=SINVTOT, 16=SCMTOT, 17=MONTHTOT, 18=ROLNEW
Rem "==================================== var inits
MASK$ = "#",MASK$;MASK$[1,1] = "-";MASK$[Len(MASK$) - 3,Len(MASK$)] = ".##"
Mat Read #1,3,0;CNAME$;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,0,108;X; \ ARYEAR = Int(X / 10000)
let eflag=0
VER$ = "v2.06"
! Gosub L_6000 -- SCREEN DISPLAY
!!! GET REPORT TYPE TO PRINT
Call Dxget("REPTYPE",tmp$)
let reptype$=""
if rtrim$(ucase$(tmp$))="M" let reptype$="M"
if rtrim$(ucase$(tmp$))="B" let reptype$="B"
if rtrim$(ucase$(tmp$))="Y" let reptype$="Y"
if reptype$=""
	let eflag=eflag+1
	let message$="Invalid Report Type Selected "
	goto outend:
endif
let eom=99
if reptype$="M" LET eom=0
K2$ = " ",K2$;K2$ = "Z ZZZZZZZZZZ"
Search #4,2,1;K2$,R[4],E \ If E > 2 Gosub ERR_SEARCH
If E
  !Window Open @18,10; Size 43,10; Using "ALERT"
  !Print "The nonstock product ''Z ZZZZZZZZZZ'' does"
  !Print "not exist."
  !Print 
  !Print "Please create the product in #671 before"
  !Print "running this program again."
  !Print 
  !Input "Press <CR> to exit";Z1$
  !Window Close 
  !Print 'CS'
  let eflag=eflag+1
  let message$="The nonstock product ''Z ZZZZZZZZZZ'' needs to be created in product maintenance "

  Goto OUTEND
End If 
!Print @1,22;'CE';"Enter Output Device name, <CR> for Screen, ''E'' to Exit: ";
!Input ""Z1$ \ If Z1$ = "E" Goto OUTEND
!If Z1$ = "" Goto L_985
!If Z1$[1,4] = "$LPT" Goto L_980
!SYS$ = "cp /dev/null ",Z1$ \ System SYS$
!L_980: DEV$ = Z1$ \ Open #0,DEV$
dEV$="ok"
L_985: EOM = 1
!Print @5,1;"AR MONTH CODE: ";ARMONTH
!S = -3 \ Signal 6,S,X,X
Rem "=================================== customer file
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...customer totals";
L_1020: Search #2,3,1;K2$,R[2],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1610
Mat Read #2,R[2],252;C5;
CUST_FILE[1,0] = CUST_FILE[1,0] + C5[2]
CUST_FILE[0,0] = CUST_FILE[0,0] + C5[3]
CUST_FILE[1,1] = CUST_FILE[1,1] + (C5[2] - C5[4])
CUST_FILE[0,1] = CUST_FILE[0,1] + (C5[3] - C5[5])
CUST_FILE[1,2] = CUST_FILE[1,2] + C5[0]
CUST_FILE[0,2] = CUST_FILE[0,2] + C5[1]
CUST_FILE[1,3] = CUST_FILE[1,3] + C5[4]
CUST_FILE[0,3] = CUST_FILE[0,3] + C5[5]
Rem "======================================= customer sales
R[3] = R[2] \ Mat Read #3,R[3],4;S1;
For I = 0 To ARMONTH Step ARMONTH
  CUST_SLS[I,0] = CUST_SLS[I,0] + S1[I,1]
  CUST_SLS[I,1] = CUST_SLS[I,1] + S1[I,2]
  CUST_SLS[I,2] = CUST_SLS[I,2] + S1[I,0]
  CUST_SLS[I,3] = CUST_SLS[I,3] + (S1[I,1] - S1[I,2])
Next I
Rem  IF C5[2]<>S1[ARMONTH,1] PRINT #0;K2$;C5[2];S1[ARMONTH,1];C5[2]-S1[ARMONTH,1]
! Signal 2,X,E,E \ If X = Spc(6) Goto L_1610
Goto L_1020
L_1610: Rem "display/print customer totals
SALES = CUST_FILE[1,0];COSTS = CUST_FILE[1,1]
UNTS = CUST_FILE[1,2];PFT = CUST_FILE[1,3]
if reptype$="M"
	Gosub L_6805
	SALES = CUST_SLS[ARMONTH,0];COSTS = CUST_SLS[ARMONTH,1]
	UNTS = CUST_SLS[ARMONTH,2];PFT = CUST_SLS[ARMONTH,3]
	Gosub L_6810
endif
Rem "=================================== product file
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...product totals";
L_1730: Search #4,3,1;K2$,R[4],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2010
Mat Read #4,R[4],256;A;
PROD_FILE[1,0] = PROD_FILE[1,0] + A[7]
PROD_FILE[0,0] = PROD_FILE[0,0] + A[8]
PROD_FILE[1,1] = PROD_FILE[1,1] + A[11]
PROD_FILE[0,1] = PROD_FILE[0,1] + A[12]
PROD_FILE[1,2] = PROD_FILE[1,2] + A[9]
PROD_FILE[0,2] = PROD_FILE[0,2] + A[10]
PROD_FILE[1,3] = PROD_FILE[1,3] + (A[7] - A[11])
PROD_FILE[0,3] = PROD_FILE[0,3] + (A[8] - A[12])
Rem "======================================= product sales
R[5] = R[4] \ Mat Read #5,R[5],16;S1;
For I = 0 To ARMONTH Step ARMONTH
  PROD_SLS[I,0] = PROD_SLS[I,0] + S1[I,1]
  PROD_SLS[I,1] = PROD_SLS[I,1] + S1[I,2]
  PROD_SLS[I,2] = PROD_SLS[I,2] + S1[I,0]
  PROD_SLS[I,3] = PROD_SLS[I,3] + (S1[I,1] - S1[I,2])
Next I
Rem  IF A[7]<>S1[ARMONTH,1] PRINT #0;K2$;A[7];S1[ARMONTH,1];A[7]-S1[ARMONTH,1]
! Signal 2,X,E,E \ If X = Spc(6) Goto L_2010
Goto L_1730
L_2010: Rem "display/print product totals
SALES = PROD_FILE[1,0];COSTS = PROD_FILE[1,1]
UNTS = PROD_FILE[1,2];PFT = PROD_FILE[1,3]
if reptype$="M"
	Gosub L_6815
	SALES = PROD_SLS[ARMONTH,0];COSTS = PROD_SLS[ARMONTH,1]
	UNTS = PROD_SLS[ARMONTH,2];PFT = PROD_SLS[ARMONTH,3]
	Gosub L_6820
endif
Rem "=================================== salesman file
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...salesman totals";
L_2130: Search #6,3,1;K2$,R[6],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2410
Mat Read #6,R[6],142;S2;
For CAT = 0 To 19
  SLSM_FILE[1,0] = SLSM_FILE[1,0] + S2[CAT,2]
  SLSM_FILE[0,0] = SLSM_FILE[0,0] + S2[CAT,3]
  SLSM_FILE[1,1] = SLSM_FILE[1,1] + (S2[CAT,2] - S2[CAT,4])
  SLSM_FILE[0,1] = SLSM_FILE[0,1] + (S2[CAT,3] - S2[CAT,5])
  SLSM_FILE[1,2] = SLSM_FILE[1,2] + S2[CAT,0]
  SLSM_FILE[0,2] = SLSM_FILE[0,2] + S2[CAT,1]
  SLSM_FILE[1,3] = SLSM_FILE[1,3] + S2[CAT,4]
  SLSM_FILE[0,3] = SLSM_FILE[0,3] + S2[CAT,5]
Next CAT
TOT_WH = 0
Mat Read #17,1,0;WHN1;
Mat Read #17,1,150;WHN2;
For X = 0 To 4
  TOT_WH = TOT_WH + WHN1[0,X]
  TOT_WH = TOT_WH + WHN2[0,X]
  TOT_WH = TOT_WH - WHN1[2,X]
  TOT_WH = TOT_WH - WHN2[2,X]
Next X
Mat Read #17,2,0;WHN1;
Mat Read #17,2,150;WHN2;
For X = 0 To 4
  TOT_WH = TOT_WH - WHN1[0,X]
  TOT_WH = TOT_WH - WHN2[0,X]
  TOT_WH = TOT_WH + WHN1[2,X]
  TOT_WH = TOT_WH + WHN2[2,X]
Next X
Rem "======================================= salesman sales
R[7] = R[6] \ Mat Read #7,R[7],4;S1;
For I = 0 To ARMONTH Step ARMONTH
  SLSM_SLS[I,0] = SLSM_SLS[I,0] + S1[I,1]
  SLSM_SLS[I,1] = SLSM_SLS[I,1] + S1[I,2]
  SLSM_SLS[I,2] = SLSM_SLS[I,2] + S1[I,0]
  SLSM_SLS[I,3] = SLSM_SLS[I,3] + (S1[I,1] - S1[I,2])
Next I
Rem  IF A[7]<>S1[ARMONTH,1] PRINT #0;K2$;A[7];S1[ARMONTH,1];A[7]-S1[ARMONTH,1]
!Signal 2,X,E,E \ If X = Spc(6) Goto L_2410
Goto L_2130
L_2410: Rem "display/print salesman totals
SALES = SLSM_FILE[1,0];COSTS = SLSM_FILE[1,1]
UNTS = SLSM_FILE[1,2];PFT = SLSM_FILE[1,3]
if reptype$="M"
	Gosub L_6825
	SALES = SLSM_SLS[ARMONTH,0];COSTS = SLSM_SLS[ARMONTH,1]
	UNTS = SLSM_SLS[ARMONTH,2];PFT = SLSM_SLS[ARMONTH,3]
	Gosub L_6830
endif
Rem "======================================= div sales
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...division totals";
L_2630: Search #8,3,1;K2$,R[8],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2710
Mat Read #8,R[8],16;P2;
For I = 0 To ARMONTH Step ARMONTH
  DIV_SLS[I,0] = DIV_SLS[I,0] + P2[I,1]
  DIV_SLS[I,1] = DIV_SLS[I,1] + P2[I,2]
  DIV_SLS[I,2] = DIV_SLS[I,2] + P2[I,0]
  DIV_SLS[I,3] = DIV_SLS[I,3] + (P2[I,1] - P2[I,2])
Next I
!Signal 2,X,E,E \ If X = Spc(6) Goto L_2710
Goto L_2630
L_2710: Rem "print div sales totals
SALES = DIV_SLS[ARMONTH,0];COSTS = DIV_SLS[ARMONTH,1]
UNTS = DIV_SLS[ARMONTH,2];PFT = DIV_SLS[ARMONTH,3]
if reptype$="M"
	Gosub L_6835
endif
Rem "======================================= sales current
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...sales current totals";
L_2930: Search #10,3,1;K2$,R[10],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_3010
Mat Read #10,R[10],16;S1;
For I = 0 To ARMONTH Step ARMONTH
  SLS_CURR[I,0] = SLS_CURR[I,0] + S1[I,1]
  SLS_CURR[I,1] = SLS_CURR[I,1] + S1[I,2]
  SLS_CURR[I,2] = SLS_CURR[I,2] + S1[I,0]
  SLS_CURR[I,3] = SLS_CURR[I,3] + (S1[I,1] - S1[I,2])
Next I
!Signal 2,X,E,E \ If X = Spc(6) Goto L_3010
Goto L_2930
L_3010: Rem "display/print sales current totals
SALES = SLS_CURR[ARMONTH,0];COSTS = SLS_CURR[ARMONTH,1]
UNTS = SLS_CURR[ARMONTH,2];PFT = SLS_CURR[ARMONTH,3]
if reptype$="M"
	Gosub L_6840
endif
Rem "======================================= sales tax file
!Print @1,22;'CL';"ACCUMULATING...sales tax totals";
For R[11] = 1 To Chf(11) - 1
  Mat Read #11,R[11],132;TX0;
  STAX[1] = STAX[1] + TX0[0] + TX0[1]
  TAX_SALES = TAX_SALES + TX0[0];NTAX_SALES = NTAX_SALES + TX0[1]
  STAX[0] = STAX[0] + TX0[2] + TX0[3]
  !Signal 2,X,E,E \ If X = Spc(6) Goto L_3160
Next R[11]
L_3160: Rem "display/print sales tax totals
SALES = STAX[1];COSTS = 0;UNTS = 0;PFT = 0
if reptype$="M"
	Gosub L_6845
endif
Rem "======================================= saract file
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...accounts receivable invoice totals";
L_3315: Search #12,3,1;K2$,R[12],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_3500
Mat Read #12,R[12],0;A2;
Mat Read #12,R[12],24;A3;
Mat Read #12,R[12],124;A0;
Mat Read #12,R[12],202;A5;
ARTYPE = K2$[17,17]
If ARTYPE = 3 Or ARTYPE = 4 Goto L_3315
If ARTYPE = 7 Or ARTYPE = 8 Goto L_3315
If ARTYPE = 9 Goto L_3315
If ARTYPE = 6 ! "it's a credit memo
  For I = 5 To 6
    A3[I] = - A3[I]
  Next I
  A3[9] = - A3[9]
  A5[6] = - A5[6]
End If 
If A0[2] = ARMONTH * 100 + ARYEAR ! "this month/year
  SARA[1,0] = SARA[1,0] + A3[5]
  SARA[1,1] = SARA[1,1] + (A3[5] - A3[6])
  DISC_MTD = DISC_MTD + A5[6]
  SARA[1,2] = SARA[1,2] + 1
  SARA[1,3] = SARA[1,3] + A3[6]
End If 
If (Fra(A0[2] / 100)) * 100 = ARYEAR ! "this year
  SARA[0,0] = SARA[0,0] + A3[5]
  SARA[0,1] = SARA[0,1] + (A3[5] - A3[6])
  SARA[0,2] = SARA[0,2] + 1
  SARA[0,3] = SARA[0,3] + A3[6]
End If 
!Signal 2,X,E,E \ If X = Spc(6) Goto L_3500
Goto L_3315
L_3500: Rem "display/print ar sales totals
SALES = SARA[1,0];COSTS = SARA[1,1]
UNTS = SARA[1,2];PFT = SARA[1,3]
IF REPTYPE$="M"
	Gosub L_6850
endif
Rem "======================================= non stocks (443)
!Print @1,22;'CL';"ACCUMULATING...non stock order line totals";
K2$ = ""
L_3635: Search #13,3,1;K2$,R[13],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_3720
Mat Read #13,R[13],0;L7;
Mat Read #13,R[13],72;L8;
Mat Read #13,R[13],102;L2$;
If L2$[1,1] = "Z" Goto L_3635
If L7[2] > 0 Mat Read #18,L7[2],168;ROL7;
If L7[2] > 0 If Not(ROL7[0]) Goto L_3635
NSTK[0] = NSTK[0] + L8[4]
NSTK[1] = NSTK[1] + (L8[1] * Abs(L8[2]))
NSTK[2] = NSTK[2] + L8[1]
NSTK[3] = NSTK[3] + (L8[4] - (L8[1] * Abs(L8[2])))
!Signal 2,X,E,E \ If X = Spc(6) Goto L_3720
Goto L_3635
L_3720: Rem "display/print non-stock sales totals and compare to Z record
SALES = NSTK[0];COSTS = NSTK[1]
UNTS = NSTK[2];PFT = NSTK[3]
if reptype$="M"
	Gosub L_6855
endif
K2$ = "Z ZZZZZZZZZZ"
Search #4,2,1;K2$,R[4],E \ If E Gosub ERR_SEARCH
Mat Read #4,R[4],256;A;
ZREC[0,0] = A[8];ZREC[1,0] = A[7]
ZREC[0,1] = A[12];ZREC[1,1] = A[11]
ZREC[0,2] = A[10];ZREC[1,2] = A[9]
ZREC[0,3] = A[8] - A[12];ZREC[1,3] = A[7] - A[11]
SALES = ZREC[1,0];COSTS = ZREC[1,1]
UNTS = ZREC[1,2];PFT = ZREC[1,3]
if reptype$="M"
	Gosub L_6860
endif
Rem "======================================= non stocks sales (451)
K2$ = ""
!Print @1,22;'CL';"ACCUMULATING...non stock sales totals";
L_3920: Search #14,3,1;K2$,R[14],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_3975
Mat Read #14,R[14],24;N2;
For I = 0 To ARMONTH Step ARMONTH
  NS_SLS[I,0] = NS_SLS[I,0] + N2[I,1]
  NS_SLS[I,1] = NS_SLS[I,1] + N2[I,2]
  NS_SLS[I,2] = NS_SLS[I,2] + N2[I,0]
  NS_SLS[I,3] = NS_SLS[I,3] + (N2[I,1] - N2[I,2])
Next I
!Signal 2,X,E,E \ If X = Spc(6) Goto L_3975
Goto L_3920
L_3975: Rem "print non stock sales totals
SALES = NS_SLS[ARMONTH,0];COSTS = NS_SLS[ARMONTH,1]
UNTS = NS_SLS[ARMONTH,2];PFT = NS_SLS[ARMONTH,3]
if reptype$="M"
	Gosub L_6865
endif
Rem "======================================= invtot / cmtot
!Print @1,22;'CL';"ACCUMULATING...invoice / credit memo totals";
For R[15] = 1 To Chf(15) - 1
  Mat Read #15,R[15],0;Q2;
  Mat Read #15,R[15],54;Q3;
  Q2[0] = Q2[0] + Q2[1] + Q2[2] + Q2[3] + Q2[4] + Q2[5] + Q2[6] + Q2[7] + Q2[8]
  INVCM[0] = INVCM[0] + Q2[0]
  INVSALES = INVSALES + Q2[0]
  Q3[0] = Q3[0] + Q3[1] + Q3[2] + Q3[3] + Q3[4] + Q3[5] + Q3[6] + Q3[7] + Q3[8]
  INVCM[1] = INVCM[1] + Q3[0]
  INVCM[2] = INVCM[2] + 1
  INVCM[3] = INVCM[3] + (Q2[0] - Q3[0])
Next R[15]
For R[16] = 1 To Chf(16) - 1
  Mat Read #16,R[16],0;Q2;
  Mat Read #16,R[16],54;Q3;
  Q2[0] = Q2[0] + Q2[1] + Q2[2] + Q2[3] + Q2[4] + Q2[5] + Q2[6] + Q2[7] + Q2[8]
  INVCM[0] = INVCM[0] - Q2[0]
  CMSALES = CMSALES + Q2[0]
  Q3[0] = Q3[0] + Q3[1] + Q3[2] + Q3[3] + Q3[4] + Q3[5] + Q3[6] + Q3[7] + Q3[8]
  INVCM[1] = INVCM[1] - Q3[0]
  INVCM[3] = INVCM[3] - (Q2[0] - Q3[0])
Next R[16]
Rem "print invoice / credit memo sales totals
SALES = INVCM[0];COSTS = INVCM[1];UNTS = INVCM[2];PFT = INVCM[3]
if reptype$="M"
	Gosub L_6870
endif
L_5500: Rem "========================================= done
!Print @1,22;'RB CE';"Done. ";
!Print "''B'' balance sheet, ";
!If EOM Print "''Y'' for Year-to-Date, ''E'' to Exit: ";
!If Not(EOM) Print "''M'' for Month-to-Date, ''E'' to Exit: ";
!Input ""Z1$ \ If Z1$ = "E" Or Z1$ = "e" Goto OUTEND
!If Z1$ = "B" Gosub L_8000
!If EOM And (Z1$ = "Y" Or Z1$ = "y") Goto L_5600
!If Not(EOM) And (Z1$ = "M" Or Z1$ = "m") Goto L_5800
!Goto L_5500
if reptype$="Y" goto L_5600:
if reptype$="B"
	gosub L_8000:
endif
GOTO OUTEND:
L_5600: Rem "======================== display/print ytd totals
EOM = 0
! Gosub L_6000 ! SCREEN DISPLAY
!Print @5,1;"YEAR-TO-DATE";ARYEAR;'CL'
SALES = CUST_FILE[0,0];COSTS = CUST_FILE[0,1]
UNTS = CUST_FILE[0,2];PFT = CUST_FILE[0,3]
Gosub L_6805
SALES = CUST_SLS[0,0];COSTS = CUST_SLS[0,1]
UNTS = CUST_SLS[0,2];PFT = CUST_SLS[0,3]
Gosub L_6810
SALES = PROD_FILE[0,0];COSTS = PROD_FILE[0,1]
UNTS = PROD_FILE[0,2];PFT = PROD_FILE[0,3]
Gosub L_6815
SALES = PROD_SLS[0,0];COSTS = PROD_SLS[0,1]
UNTS = PROD_SLS[0,2];PFT = PROD_SLS[0,3]
Gosub L_6820
SALES = SLSM_FILE[0,0];COSTS = SLSM_FILE[0,1]
UNTS = SLSM_FILE[0,2];PFT = SLSM_FILE[0,3]
Gosub L_6825
SALES = SLSM_SLS[0,0];COSTS = SLSM_SLS[0,1]
UNTS = SLSM_SLS[0,2];PFT = SLSM_SLS[0,3]
Gosub L_6830
SALES = DIV_SLS[0,0];COSTS = DIV_SLS[0,1]
UNTS = DIV_SLS[0,2];PFT = DIV_SLS[0,3]
Gosub L_6835
SALES = SLS_CURR[0,0];COSTS = SLS_CURR[0,1]
UNTS = SLS_CURR[0,2];PFT = SLS_CURR[0,3]
Gosub L_6840
SALES = STAX[0];COSTS = 0;UNTS = 0;PFT = 0
Gosub L_6845
SALES = SARA[0,0];COSTS = SARA[0,1];UNTS = SARA[0,2];PFT = SARA[0,3]
Gosub L_6850
SALES = 0;COSTS = 0;UNTS = 0;PFT = 0
Gosub L_6855
SALES = ZREC[0,0];COSTS = ZREC[0,1];UNTS = ZREC[0,2];PFT = ZREC[0,3]
Gosub L_6860
SALES = NS_SLS[0,0];COSTS = NS_SLS[0,1];UNTS = NS_SLS[0,2];PFT = NS_SLS[0,3]
Gosub L_6865
SALES = 0;COSTS = 0;UNTS = 0;PFT = 0
Gosub L_6870
goto outend: ! end of year to date option
Goto L_5500
L_5800: Rem "======================== display/print mtd totals
EOM = 1
! Gosub L_6000 ! SCREEN DISPLAY
!Print @5,1;"AR MONTH CODE: ";ARMONTH;'CL'
SALES = CUST_FILE[1,0];COSTS = CUST_FILE[1,1]
UNTS = CUST_FILE[1,2];PFT = CUST_FILE[1,3]
Gosub L_6805
SALES = CUST_SLS[ARMONTH,0];COSTS = CUST_SLS[ARMONTH,1]
UNTS = CUST_SLS[ARMONTH,2];PFT = CUST_SLS[ARMONTH,3]
Gosub L_6810
SALES = PROD_FILE[1,0];COSTS = PROD_FILE[1,1]
UNTS = PROD_FILE[1,2];PFT = PROD_FILE[1,3]
Gosub L_6815
SALES = PROD_SLS[ARMONTH,0];COSTS = PROD_SLS[ARMONTH,1]
UNTS = PROD_SLS[ARMONTH,2];PFT = PROD_SLS[ARMONTH,3]
Gosub L_6820
SALES = SLSM_FILE[1,0];COSTS = SLSM_FILE[1,1]
UNTS = SLSM_FILE[1,2];PFT = SLSM_FILE[1,3]
Gosub L_6825
SALES = SLSM_SLS[ARMONTH,0];COSTS = SLSM_SLS[ARMONTH,1]
UNTS = SLSM_SLS[ARMONTH,2];PFT = SLSM_SLS[ARMONTH,3]
Gosub L_6830
SALES = DIV_SLS[ARMONTH,0];COSTS = DIV_SLS[ARMONTH,1]
UNTS = DIV_SLS[ARMONTH,2];PFT = DIV_SLS[ARMONTH,3]
Gosub L_6835
SALES = SLS_CURR[ARMONTH,0];COSTS = SLS_CURR[ARMONTH,1]
UNTS = SLS_CURR[ARMONTH,2];PFT = SLS_CURR[ARMONTH,3]
Gosub L_6840
SALES = STAX[1];COSTS = 0;UNTS = 0;PFT = 0
Gosub L_6845
SALES = SARA[1,0];COSTS = SARA[1,1];UNTS = SARA[1,2];PFT = SARA[1,3]
Gosub L_6850
SALES = NSTK[0];COSTS = NSTK[1];UNTS = NSTK[2];PFT = NSTK[3]
Gosub L_6855
SALES = ZREC[1,0];COSTS = ZREC[1,1];UNTS = ZREC[1,2];PFT = ZREC[1,3]
Gosub L_6860
SALES = NS_SLS[ARMONTH,0];COSTS = NS_SLS[ARMONTH,1]
UNTS = NS_SLS[ARMONTH,2];PFT = NS_SLS[ARMONTH,3]
Gosub L_6865
SALES = INVCM[0];COSTS = INVCM[1];UNTS = INVCM[2];PFT = INVCM[3]
Gosub L_6870
Goto L_5500
L_6000: Rem "================================= screen
Return
Print 'CS ED BD'
Print @0,0;Msc$(4);" ";VER$;@35,0;"QUICK EOM/EOY";@54,0;Msc$(3)
Print @5,2;"COMPANY: ";COID;CNAME$
Print @29,3;"SALES";@43,3;"COSTS";@57,3;"UNITS";@70,3;"PROFIT"
Print @5,5;"CUSTOMER FILE:"
Print @5,6;"CUSTOMER SALES:"
Print @5,7;"PRODUCT FILE:"
Print @5,8;"PRODUCT SALES:"
Print @5,9;"SLSM FILE:"
Print @5,10;"SLSM SALES:"
Print @5,11;"DIV SALES:"
Print @5,12;"SALES CURR:"
Print @5,13;"SALES TAX:"
Print @5,14;"AR SALES (430):"
Print @5,15;"NON-STOCKS (443):"
Print @5,16;"''Z'' RECORD:"
Print @5,17;"NS SALES (451):"
Print @5,18;"INV/CM TOTALS:"
Print 'ED' \ Return 
L_6500: Rem "============================= display totals line
!Print Using MASK$;@23,ROW;SALES
!Print Using MASK$;@37,ROW;COSTS
!Print Using MASK$;@51,ROW;UNTS
!Print Using MASK$;@65,ROW;PFT
If DEV$ = "" Goto L_6720
If ROW <> 5 Goto L_6700
Print #0;" " \ Print #0;" " \ Print #0;" "
Print #0;Msc$(4);" ";VER$
If EOM Print #0;"MONTH-TO-DATE FOR";ARMONTH; Else Print #0;"YEAR-TO-DATE FOR";ARYEAR;
Print #0;"AS OF ";Msc$(3)
Print #0;"COMPANY: ";COID;CNAME$
Print #0;" "
Print #0; Tab 25;"S A L E S"; Tab 41;"C O S T S"; Tab 57;"U N I T S"; Tab 71;"P R O F I T"
Print #0;" "
L_6700: Print #0; Tab 0;TITLE$;
Print #0; Using MASK$; Tab 23;SALES;"  ";COSTS;"  ";UNTS;"  ";PFT
L_6720: Return 
L_6805: ROW = 5 \ TITLE$ = "CUSTOMER FILE" \ Gosub L_6500 \ Return 
L_6810: ROW = 6 \ TITLE$ = "CUSTOMER SALES" \ Gosub L_6500 \ Return 
L_6815: ROW = 7 \ TITLE$ = "PRODUCT FILE" \ Gosub L_6500 \ Return 
L_6820: ROW = 8 \ TITLE$ = "PRODUCT SALES" \ Gosub L_6500 \ Return 
L_6825: ROW = 9 \ TITLE$ = "SALESMAN FILE" \ Gosub L_6500 \ Return 
L_6830: ROW = 10 \ TITLE$ = "SALESMAN SALES" \ Gosub L_6500 \ Return 
L_6835: ROW = 11 \ TITLE$ = "DIVISION SALES" \ Gosub L_6500 \ Return 
L_6840: ROW = 12 \ TITLE$ = "SALES CURRENT" \ Gosub L_6500 \ Return 
L_6845: ROW = 13 \ TITLE$ = "SALES TAX" \ Gosub L_6500 \ Return 
L_6850: ROW = 14 \ TITLE$ = "AR SALES (430)" \ Gosub L_6500 \ Return 
L_6855: ROW = 15 \ TITLE$ = "NON STOCKS (443)" \ Gosub L_6500 \ Return 
L_6860: ROW = 16 \ TITLE$ = "''Z'' RECORD" \ Gosub L_6500 \ Return 
L_6865: ROW = 17 \ TITLE$ = "NS SALES (451)" \ Gosub L_6500 \ Return 
L_6870: ROW = 18 \ TITLE$ = "INV/CM TOTALS" \ Gosub L_6500 \ Return 
L_8000: Rem PRINT BALANCE SHEET
!Print @0,0;'CS';
Print #0; Using "## ";"END OF MONTH BALANCES for ";ARMONTH;ARYEAR
Print #0; Using "---------#.##";" 423 - DEPT TOALS BY CATGY invoices ";INVSALES
Print #0; Using "---------#.##";" 423 - DEPT TOALS BY CATGY credits  ";CMSALES
Print #0; Using "---------#.##";"            total sales             ";INVSALES - CMSALES
Print #0;" "
Print #0; Using "---------#.##";" 425 - WAREHOUSE/BRANCH TOTASL      ";TOT_WH
Print #0;" "
Print #0;"430 - SALES JOURNAL "
Print #0; Using "--------#.##";"product $ ";SARA[1,0];" less disc ";DISC_MTD;" = net sales ";SARA[1,0] - DISC_MTD
Print #0;" "
Print #0; Using "---------#.##";" 441 - CUSTOMER SALES               ";CUST_FILE[1,0]
Print #0; Using "---------#.##";" 442 - PRODUCT  SALES               ";PROD_FILE[1,0]
Print #0; Using "---------#.##";" 444 - SALESMAN SALES               ";SLSM_SLS[ARMONTH,0]
Print #0;" "
Print #0;" 453 - SALES TAX REPORT TOTAL SALES "
Print #0; Using "---------#.##";" non tax merchandise ";NTAX_SALES
Print #0; Using "---------#.##";" tax merchandise    ";TAX_SALES
Print #0; Using "---------#.##";" TOTAL SALES        ";NTAX_SALES + TAX_SALES
Print #0;" "
Print #0; Using "---------#.##";" 454 - CUSTOMER/PRODUCT SALES        ";SLS_CURR[ARMONTH,0]
Print #0; Using "---------#.##";" 455 - PRODUCT/CUSTOMER SALES        ";SLS_CURR[ARMONTH,0]
Print #0; Using "---------#.##";" 456 - SALESMAN/CUSTOMER SALES        ";SLS_CURR[ARMONTH,0]
Print #0; Using "---------#.##";" 457 - SALESMAN/COMMODITY  SALES        ";SLS_CURR[ARMONTH,0]
Return

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End



OUTEND: Rem
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)	
	Let message$=message$+" Completed. "
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
! try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program

