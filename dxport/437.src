! >>> Program 437
!
! BUYER/VENDOR Product Sales Report
!
! loadsave -w -n 100,10 -o prog/dxport/437.dl4 src/437.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Com 1%,PFU1[20],CNVTU[2],MONTH_[4],3%,CNVTA,A[33],PFU2[6]
Com MTH$[108]
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time
!
! - Option Default Dialect IRIS1
Rem MX437 - Buyer/Vendor Product Sales 12 Months
Rem Author: Ginsburg - CCT 87866
Rem Requires new Prod/Whse Sales file (4/PWSALES#)

If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Rem {begin src/inc/dim.prwh.i}
Dim W1$[32],WH3$[24],WHFLG$[10],WHMKUPTYP$[4],WCOMM$[4]
Dim 2%,W2[9],W7[14],WH7[3],WHLPOOL,WHFDT[1],WHMKUP[3]
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 1%,RESTRICTED,WHBASE,WHPARC2[3]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHMISC2[7]
Dim 3%,WHFUT[2],VLIST,WHREDI[1],WHLBS[1]
Rem {end dim.prwh.i}
Rem {begin src/inc/dim.vend.i}
Dim 1%,VNDA[4],VNDM4[1]
Dim 2%,VND1[6],VND3,XBUYER
Dim 3%,VNDA2[11],VNDC1[5],VND4[1],VNDA3[7]
Dim VNDA$[264],VNDC2$[44],VNDA1$[20],VNDA2$[8],VNDA3$[4],VNDA5$[60]
Rem {end dim.vend.i}
Dim FILE$[16],K1$[50],K2$[50],K3$[50],K5$[50],BUYER$[30]
Dim CNAME$[30],CDATE$[8],CTIME$[26],ANS$[10],X$[10]
Dim P$[156],P9$[50],P60$[50],RUNIT$[4]
Dim 1%,ARMONTH,BOYMNTH,ert
Dim 2%,WHSE,X2,B[24]
Dim 3%,PWS[12,2],PWSL[12,2],S1[12,5],S2[12,5],PWOH[12],PWOHL[12]
Dim 3%,S0[12,2],S3[12,5],S4[12,5],LASTCOST,AMOUNT
Def FNI(X) = Sgn(X) * (Int(Abs(X) * 1 + .5) / 1)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
!
Read #1,88,1792;FILE$; \ Ropen #2,FILE$
Read #1,88,1744;FILE$; \ Ropen #3,FILE$
Read #1,88,2400;FILE$; \ Ropen #4,FILE$
FILE$ = "2/BUYERS" \ Open #5,FILE$
! - FILE$ = "4/PWSALES" + Str$(COID) \ Ropen #6,FILE$
Read #1,88,1728;FILE$; \ Ropen #7,FILE$
CH_CNTRL = 1;CH_PROD = 2;CH_PRWH = 3;CH_VEND = 4;CH_BUYER = 5
CH_PWSLS = 6;CH_CCODES = 7;CH_SORT = 9;LPT = 0
Read #1,3,0;CNAME$;
Read #1,3,164;CDATE$;
Read #1,0,120;ARMONTH;
Read #1,51,74;BOYMNTH;
Mat Read #CH_CNTRL,19,50;P9$;
Mat Read #CH_CNTRL,60,50;P60$;
!
J8 = 0
If Err 0 Let J8 = Spc(8)
J9 = Chf(0) 
If J8 If J8 <> 49 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
!
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
!
! - dx add xport reporting code
dim tmp$[400],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$ = bsdel$,"437",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
FILE$ = "4/PWSALES" + Str$(intCO) \ Ropen #6,FILE$
!
Call dxget("WHSE",tmp$) \ if tmp$ = "" let WHSE = 0 else WHSE = tmp$ ! report for 0=credit 1=cash
Call dxget("SBUY",tmp$) \ SBUY = tmp$ 
Call dxget("EBUY",tmp$)  \ If tmp$ = "" Let EBUY = 999 else EBUY = tmp$ 
Call dxget("SVEND",tmp$)  \ SVEND = tmp$  
Call dxget("EVEND",tmp$)  \ if tmp$="" let EVEND = 999999 else let EVEND = tmp$
Call dxget("X2",tmp$)	\ X2 = tmp$	
Call dxget("PROD_DETAIL",tmp$) \ If tmp$ = "D" let PROD_DETAIL = 1 else Let PROD_DETAIL = 0
!
If X2 = 1 Let CSUM = 8  
If X2 = 2 Let CSUM = 9  
If X2 = 3 Let CSUM = 10 
!
If SVEND < 0 or SVEND>999999 Let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000 
If EVEND<SVEND or EVEND>999999 Let e$="Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
!
If SBUY < 0 Or SBUY > 999  let e$="Invalid starting buyer, must be between 0 and 999!" \ error 10000 
If EBUY < SBUY Or EBUY > 999 let e$="Invalid Ending Buyer, must be between starting buyer and 999!" \ error 10000 
!
if WHSE < 0 or WHSE > 99 or Fra(WHSE) let e$="Invalid Warehouse, must be between 0 and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
! - STRT_HERE: Rem "Here's where it Begins
! - Print 'CS';@0,0;"BUYER/VENDOR Product Sales Report";@50,0;"MX437"
! - EDT_WHSE: Rem "Enter the warehouse
! - Print @0,2;'CE';"Enter the Warehouse #,  0: all,  E: exit   ";
! - Input Len 16386;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - WHSE = ANS$ \ If WHSE < 0 Or WHSE > 99 Or Fra(WHSE) Goto EDT_WHSE
! - EDT_BUYER: Rem "Enter Buyer Range
! - Print @0,4;'CE';"Enter the Starting Buyer,  <CR>: first,  E: exit  ";
! - Input Len 16387;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - SBUY = ANS$ \ If SBUY < 0 Or SBUY > 999 Or Fra(SBUY) Goto EDT_BUYER
! - EDT_ENDBUY: Rem "Enter the Ending
! - Print @0,5;'CE';"Enter the   Ending Buyer,  <CR>: last,   E: exit  ";
! - Input Len 16387;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - If ANS$ = "" Let ANS$ = "999"
! - EBUY = ANS$ \ If EBUY < 0 Or EBUY > 999 Or Fra(EBUY) Goto EDT_ENDBUY
! - If SBUY <= EBUY Goto EDT_VEND
! - Print @0,22;'RB CE';"INVALID RANGE! Please Re-Enter Buyers" \ Signal 3,20
! - Goto EDT_BUYER
! - EDT_VEND: Rem "Enter Vendor Range
! - Print @0,8;'CE';"Enter the Starting Vendor,  <CR>: first,  E: exit  ";
! - Input Len 16390;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - SVEND = ANS$ \ If SVEND < 0 Or Fra(SVEND) Goto EDT_VEND
! - EDT_VEND2: Rem "Enter ending
! - Print @0,9;'CE';"Enter the   Ending Vendor,  <CR>: last,   E: exit  ";
! - Input Len 16390;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - If ANS$ = "" Let ANS$ = "999999"
! - EVEND = ANS$ \ If EVEND < 0 Or Fra(EVEND) Goto EDT_VEND2
! - If SVEND <= EVEND Goto UM_QUEST
! - Print @0,22;'RB CE';"INVALID RANGE! Please Re-enter Vendor" \ Signal 3,20
! - Goto EDT_VEND
! - UM_QUEST: Rem "What U/M For On Hand
! - Print @0,10;'CE';"What U/M do you want for On Hand?"
! - Print @0,11;'CE';"    1: STOCK,  2: SELL,  3: PURCHASING,  4: BASE    ";
! - Input Len 16385;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - X2 = ANS$ \ If X2 < 1 Or X2 > 4 Or Fra(X2) Goto UM_QUEST
! - CSUM = 0
! - If X2 = 1 Let CSUM = 8
! - If X2 = 2 Let CSUM = 9
! - If X2 = 3 Let CSUM = 10
! - PRODDTL_QUEST: Rem "Print Prod Detail
! - Print @0,13;"Print  D: Product Detail or  T: Vendor Totals?   ";
! - Input Len 16385;""ANS$
! - If ANS$ <> "D" If ANS$ <> "T" Goto PRODDTL_QUEST
! - PROD_DETAIL = 0
! - If ANS$ = "D" Let PROD_DETAIL = 1
! - FINALQ: Rem The Standard Final Question
! - Print @0,16;"Enter   P: print,  R: reselect,  E: exit   ";
! - Input Len 16385;""ANS$ \ If ANS$ = "E" Goto OUTEND
! - If ANS$ = "R" Goto STRT_HERE
! - If ANS$ <> "P" Goto FINALQ
! - Print @0,22;'CE';"Sorting, Please wait. . ." \ Signal 3,0
!
if j8 ! dx xml headings
  tmp$="BUYER CODE",fdel$,"BUYER NAME",fdel$
  tmp$=tmp$,"VENDOR CODE",fdel$,"VENDOR NAME",fdel$
  IF PROD_DETAIL
    tmp$=tmp$,"PRODUCT CODE",fdel$,"DESCRIPTION",fdel$
    tmp$=tmp$,"U/M",fdel$,"WH",fdel$
  endif
  tmp$=tmp$,"MONTH",fdel$,"SALES$",fdel$
  tmp$=tmp$,"COST$",fdel$, "GR PROFIT",fdel$,"GP%",fdel$
  tmp$=tmp$,"12 MO $",fdel$,"12 MO GP$",fdel$,"MO GP%",fdel$
  tmp$=tmp$,"ON HAND$",fdel$,"ON HAND",fdel$
  tmp$=tmp$,"DAYS",fdel$,"TURNS",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K1$ = " ",K1$
CLR_SORT: Rem "Clear the Sort File 1st
Search #CH_SORT,3,1;K1$,R9,E 
If E = 2 Goto STRT_SORT
Search #CH_SORT,5,1;K1$,R9,E 
Goto CLR_SORT
!
STRT_SORT: Rem "Thru the ProdWhse File
K1$ = " ",K1$
PROD_LOOP: Rem "Loop until Done
Search #CH_PROD,3,1;K1$,REC_PROD,E
If E = 2 Goto SORT_DONE
Gosub READ_PROD
VENDOR = B[24]
K2$ = K1$[1,12] \ If WHSE Let K2$[13] = WHSE Using "##"
Search #CH_PRWH,2,1;K2$,REC_PRWH,E ! - \ If E > 1 Gosub ERR_SEARCH
If E = 1 And WHSE <> 0 Goto PROD_LOOP
If Not(E) Goto GOT_PWH
PRWH_LOOP: Rem "Loop if Applicable
Search #CH_PRWH,3,1;K2$,REC_PRWH,E 
If E = 2 Goto PROD_LOOP
GOT_PWH: Rem "got a live one
If K2$[1,12] <> K1$[1,12] Goto PROD_LOOP
Gosub READ_PRODWHSE
If W2[3] Let VENDOR = W2[3]
BUYER = W1[2]
If WHSE If W1[0] <> WHSE Goto PROD_LOOP
If BUYER < SBUY Or BUYER > EBUY
  If WHSE Goto PROD_LOOP
  If Not(WHSE) Goto PRWH_LOOP
End If 
If VENDOR < SVEND Or VENDOR > EVEND
  If WHSE Goto PROD_LOOP
  If Not(WHSE) Goto PRWH_LOOP
End If 
K3$ = K2$
Search #CH_PWSLS,2,1;K3$,REC_PWSLS,E 
If E
  If WHSE Goto PROD_LOOP
  If Not(WHSE) Goto PRWH_LOOP
End If 
K3$ = " ",K3$
K3$[1,4] = BUYER Using "####"
K3$[5,10] = VENDOR Using "######"
K3$[11] = K2$[1,14]
E = 0;REC_SORT = REC_PRWH
Search #9,4,1;K3$,REC_SORT,E 
If E Let e$ = "syserrorfile 437 sortfile mode (m)=4 keyno (k)=1 r=",REC_SORT," e=",e," keyval (k$)=",K3$ \ error 10000
If WHSE Goto PROD_LOOP
Goto PRWH_LOOP
!
SORT_DONE: Rem "Sort is Done setup for Print
! - If Err 0 Let J8 = Spc(8)
! - X2 = 0 \ X = Chf(0)
! - If Err 0 Gosub ERR_TRAP
MAXLN = 61
If J8 Let MAXLN = 21
!
MONTH_[0] = 0;MONTH_[1] = 1;MONTH_[2] = 0
! - Call "UTMONTHS",MONTH_[],MTH$
Call UTMonths(e$,MONTH_[],MTH$,BOYMNTH) ! set up month headers
!
CLIN = 99;CPAGE = 0
K1$ = " ",K1$
CBUYER = -1;CVEND = -1
! - Print @0,22;'CE';"Printing, Please Wait . . " \ Signal 3,0
! - If SCRN Print 'CS'
! - If Err 0 Gosub ERR_ESCAPE
SORT_LOOP: Rem "Loop thru all Sorted Records
Search #CH_SORT,3,1;K1$,REC_SORT,E
If E = 2 Goto LOOPDONE
If CBUYER = -1 Let CBUYER = K1$[1,4]
If CVEND = -1 Let CVEND = K1$[5,10]
XBUYER = CBUYER
X2 = K1$[5,10] \ If X2 <> CVEND Gosub PRNTVEND_STTL
X2 = K1$[1,4] \ If X2 <> CBUYER Gosub PRNTBUYR_STTL
CVEND = K1$[5,10] \ Gosub GET_VEND
CBUYER = K1$[1,4] \ Gosub GET_BUYER
REC_PRWH = REC_SORT \ Gosub READ_PRODWHSE
Gosub GET_PROD
Gosub GET_PWSLS
Gosub ADJ_BUKT
Gosub ADD_TOTALS
If PROD_DETAIL Gosub PRNTPROD_DTL
Goto SORT_LOOP
!
LOOPDONE: Rem "Done going thru Sort Loop, Print Sub&Grand Totals
Gosub PRNTVEND_STTL
Gosub PRNTBUYR_STTL
Gosub PRNTGRND_TTL
! - If SCRN Input @0,23;"PRESS <CR> TO EXIT: "X$
Goto OUTEND
!
ADD_TOTALS: Rem "convert/Add Totals
LASTCOST = B[10] \ If P9$[32,32] = "Y" And W3[16] Let LASTCOST = W3[16]
For C = 1 To 12
  S1[C,5] = S1[C,0] * LASTCOST
  CNVTU[0] = 0;CNVTU[1] = PFU1[CSUM];CNVTU[2] = 1
  CNVTA = S1[C,0] \ Gosub CONVERT
  S1[C,0] = AMOUNT
Next C
For C = 0 To 12
  For R = 0 To 5
    S2[C,R] = S2[C,R] + S1[C,R]
    S3[C,R] = S3[C,R] + S1[C,R]
    S4[C,R] = S4[C,R] + S1[C,R]
  Next R
Next C
Return 
!
GET_BUYER: Rem "Get Buyer Name
REC_BUYER = CBUYER
BUYER$ = " ",BUYER$
If REC_BUYER < 1 Or REC_BUYER > Chf(CH_BUYER) - 1 Let REC_BUYER = 0
If REC_BUYER Mat Read #CH_BUYER,REC_BUYER,0;BUYER$;
Return 
!
GET_VEND: Rem "Get Vendor Name
K2$ = " ",K2$;K2$ = CVEND Using "######"
Search #CH_VEND,2,1;K2$,REC_VEND,E 
If Not(E)
  Rem {begin src/inc/read.vend.i}
  Mat Read #CH_VEND,REC_VEND,0;VNDA$
  Mat Read #CH_VEND,REC_VEND,264;VND1
  Mat Read #CH_VEND,REC_VEND,292;VNDA2
  Mat Read #CH_VEND,REC_VEND,364;VNDC1
  Mat Read #CH_VEND,REC_VEND,400;VNDC2$
  Mat Read #CH_VEND,REC_VEND,444;VND3
  Mat Read #CH_VEND,REC_VEND,448;VND4
  Mat Read #CH_VEND,REC_VEND,460;VNDA1$
  Mat Read #CH_VEND,REC_VEND,480;VNDA2$
  Mat Read #CH_VEND,REC_VEND,488;VNDA
  Mat Read #CH_VEND,REC_VEND,498;VNDA3
  Mat Read #CH_VEND,REC_VEND,546;VNDA3$
  Mat Read #CH_VEND,REC_VEND,554;VNDM4
  Mat Read #CH_VEND,REC_VEND,576;VNDA5$
  Rem {end read.vend.i}
Else 
  VNDA$ = " ",VNDA$
  VNDA$ = "VENDOR NOT ON FILE"
End If 
Return
!
READ_PRODWHSE: Rem "Read the ProdWhse File
Rem {begin src/inc/read.prwh.i}
Mat Read #CH_PRWH,REC_PRWH,0;W1$
Mat Read #CH_PRWH,REC_PRWH,32;W1
Mat Read #CH_PRWH,REC_PRWH,38;W2
Mat Read #CH_PRWH,REC_PRWH,78;W3
Mat Read #CH_PRWH,REC_PRWH,228;W5
Mat Read #CH_PRWH,REC_PRWH,384;WHPARC
Read #CH_PRWH,REC_PRWH,396;WHLPOOL
Mat Read #CH_PRWH,REC_PRWH,400;WCOMM$
Read #CH_PRWH,REC_PRWH,404;FCWGT
Mat Read #CH_PRWH,REC_PRWH,420;W0
Mat Read #CH_PRWH,REC_PRWH,428;WH7
Mat Read #CH_PRWH,REC_PRWH,444;WH8
Mat Read #CH_PRWH,REC_PRWH,540;WH9
Mat Read #CH_PRWH,REC_PRWH,696;W7
Mat Read #CH_PRWH,REC_PRWH,756;WH3$
Mat Read #CH_PRWH,REC_PRWH,780;WHLV
Read #CH_PRWH,REC_PRWH,798;WHRPLN
Mat Read #CH_PRWH,REC_PRWH,800;WHMISC
Mat Read #CH_PRWH,REC_PRWH,842;WHLM
Mat Read #CH_PRWH,REC_PRWH,846;WHMISC2
Read #CH_PRWH,REC_PRWH,894;RESTRICTED
Mat Read #CH_PRWH,REC_PRWH,896;WHFUT
Mat Read #CH_PRWH,REC_PRWH,914;WHFDT
Read #CH_PRWH,REC_PRWH,922;VLIST
Mat Read #CH_PRWH,REC_PRWH,928;WHFLG$
Read #CH_PRWH,REC_PRWH,938;WHBASE
Mat Read #CH_PRWH,REC_PRWH,940;WHMKUP
Mat Read #CH_PRWH,REC_PRWH,956;WHMKUPTYP$
Mat Read #CH_PRWH,REC_PRWH,960;WHPARC2
Mat Read #CH_PRWH,REC_PRWH,968;WHREDI
Mat Read #CH_PRWH,REC_PRWH,980;WHLBS
Rem {end read.prwh.i}
Return 
!
GET_PROD: Rem "Search/Read Product
K2$ = " ",K2$;K2$ = K1$[11,22];RUNIT$ = "    "
Search #CH_PROD,2,1;K2$,REC_PROD,E ! - \ If E > 1 Gosub ERR_SEARCH
If E = 1
  B[10] = 0;B[24] = 0
  Return 
End If 
READ_PROD: Rem "Read of Product File (Abridged)
Mat Read #CH_PROD,REC_PROD,0;P$;
Mat Read #CH_PROD,REC_PROD,156;B;
Mat Read #CH_PROD,REC_PROD,256;A;
Mat Read #CH_PROD,REC_PROD,512;PFU1;
Mat Read #CH_PROD,REC_PROD,554;PFU2;
RUNIT = PFU1[CSUM]
If RUNIT = -1 Let RUNIT$ = "CWT "
If RUNIT = -2 Let RUNIT$ = "LOT "
If RUNIT = -3 Let RUNIT$ = "LB  "
If RUNIT > 0 Read #CH_CCODES,RUNIT,10;RUNIT$;
Return 
!
GET_PWSLS: Rem "Get the Prod/Whse Sales
K3$ = K1$[11]
Search #CH_PWSLS,2,1;K3$,REC_PWSLS,E ! - \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_PWSLS,REC_PWSLS,14;PWS;
  Mat Read #CH_PWSLS,REC_PWSLS,248;PWSL;
  Mat Read #CH_PWSLS,REC_PWSLS,482;PWOH;
  Mat Read #CH_PWSLS,REC_PWSLS,560;PWOHL;
Else 
  For C = 0 To 12
    PWOH[C] = 0;PWOHL[C] = 0
    For R = 0 To 2
      PWS[C,R] = 0;PWSL[C,R] = 0
    Next R
  Next C
End If 
PWS[0,0] = 0;PWSL[0,0] = 0;PWOH[ARMONTH] = W3[0]
For C = 1 To 12
  PWS[0,0] = PWS[0,0] + PWOH[C]
  PWSL[0,0] = PWSL[0,0] + PWOHL[C]
  PWS[C,0] = PWOH[C]
  PWSL[C,0] = PWOHL[C]
Next C
Return 
!
ADJ_BUKT: Rem "===== adjust this year buckets for fiscal year
For C = 0 To 12 \ For R = 0 To 5 \ S1[C,R] = 0 \ Next R \ Next C
For C = 0 To 12 \ For R = 0 To 2 \ S0[C,R] = 0 \ Next R \ Next C
X7 = BOYMNTH;LMNTH = 0
For I = 1 To 12
  For X6 = 0 To 2
    S1[I,X6] = PWS[X7,X6]
  Next X6
  If X7 = ARMONTH Let LMNTH = I;I = 13
  X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
X7 = BOYMNTH;X8 = 0
For I = 1 To 12
  For X6 = 1 To 2
    If Not(X8) Let S0[I,X6] = PWSL[X7,X6] Else Let S0[I,X6] = PWS[X7,X6]
  Next X6
  If X7 = ARMONTH Let X8 = 1
  X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
X7 = 1;X8 = 0
MNTH_LOOP: Rem "get the 12 Months Previous Sales/Cost
If X7 > LMNTH Return   
For MONTH_ = X7 To 1 Step -1
  S1[X7,3] = S1[X7,3] + S1[MONTH_,1]
  S1[X7,4] = S1[X7,4] + S1[MONTH_,2]
Next MONTH_
If X7 = 12 Return 
X7 = X7 + 1 \ If X7 = 13 Return 
Goto MNTH_LOOP
!
PRNT_HEADR: Rem "print the Report Heading
if J8 return ! dx xml
!
If CLIN < MAXLN Return 
If CPAGE
  ! - If J8 Input @0,23;"\15\PRESS <CR> TO CONTINUE: "X$
  If Not(J8) Print #0;"\14\"; Else Print 'CS'
End If 
CPAGE = CPAGE + 1
Print #0;"\15\";
Print #0; Tab 5;"DATE: ";CDATE$;
Print #0; Tab Int(64 - (Len(CNAME$) / 2));CNAME$;
Print #0; Tab 120;"PAGE: ";Str$(CPAGE)
CTIME$ = "" \ Call Time(CTIME$)
Print #0;"- 437 - ";CTIME$;
Print #0; Tab 45;"BUYER/VENDOR PRODUCT SALES REPORT";
Print #0; Tab 90;"WHSE: ";
If WHSE Print #0;WHSE Else Print #0;"ALL"
Print #0; Tab 3;"ON HAND=";
If CSUM = 0 Print #0;"BASE";
If CSUM = 8 Print #0;"STOCKING";
If CSUM = 9 Print #0;"SELLING";
If CSUM = 10 Print #0;"PURCHASING";
Print #0; Tab 47;"BUYER";CBUYER;"  ";BUYER$
Print #0;""
Print #0; Tab 1;"MONTH"; Tab 13;"SALES$"; Tab 25;"COST$";
Print #0; Tab 31;"GR PROFIT"; Tab 47;"GP%";
Print #0; Tab 57;"12 MO $"; Tab 70;"12 MO GP$"; Tab 89;"GP%";
Print #0; Tab 98;"ON HAND$"; Tab 109;"ON HAND";
Print #0; Tab 119;"DAYS"; Tab 124;" TURNS"
CLIN = 6;VPRNTD = 0
If Not(J8) And CPAGE = 1 Let CLIN = CLIN + 2
Return 
!
PRNTVEND_STTL: Rem "Print Vendor SubTotal
if J8 if PROD_DETAIL return ! dx xml
!
if J8 
  For MONTH_ = 1 To 12
 	tmp$ = CBUYER using "###",fdel$
	tmp$ = tmp$,rtrim$(BUYER$),fdel$	  
	tmp$ = tmp$,CVEND Using "######", fdel$
	tmp$ = tmp$,rtrim$(VNDA$[1,30]),fdel$
	X$ = MTH$[(MONTH_ - 1) * 3 + 1,MONTH_ * 3]
	tmp$ = tmp$,X$[1,3],fdel$
	If MONTH_ > LMNTH Goto NXT_VMTH2
	tmp$ = tmp$,FNI(S2[MONTH_,1]) Using "--------#",fdel$	  
	tmp$ = tmp$,FNI(S2[MONTH_,2]) Using "--------#",fdel$	  	  
	GRPFT = S2[MONTH_,1] - S2[MONTH_,2]
	tmp$ = tmp$,FNI(GRPFT) Using "--------#",fdel$
	GPP = 0 \ If S2[MONTH_,1] Let GPP = FNR((GRPFT * 100) / S2[MONTH_,1])
	tmp$ = tmp$,GPP Using "----#.##",fdel$
	tmp$ = tmp$,FNR(S2[MONTH_,3]) Using "---------#.##",fdel$
	GRPFT = S2[MONTH_,3] - S2[MONTH_,4]
	tmp$ = tmp$,FNR(GRPFT) Using "---------#.##",fdel$
	GPP = 0 \ If S2[MONTH_,3] Let GPP = FNR((GRPFT * 100) / S2[MONTH_,3])
	tmp$ = tmp$,GPP Using "----#.##",fdel$
	tmp$ = tmp$,FNR(S2[MONTH_,5]) Using "--------#.##",fdel$
	tmp$ = tmp$,FNI(S2[MONTH_,0]) Using "--------#",fdel$
	TURNS = 0
	If S2[MONTH_,5] > 0 Let TURNS = FNR(S2[MONTH_,4] / S2[MONTH_,5])
	IDAYS = 0 \ If TURNS Let IDAYS = FNI(365 / TURNS)
	tmp$ = tmp$,FNI(IDAYS) Using "#####",fdel$
	tmp$ = tmp$,TURNS Using "####.##",fdel$
	!
	call addtostr(e$,rstr$,tmp$+rdel$)
	!
	NXT_VMTH2: Rem "So All after Current are Blank
  Next MONTH_
  For C = 0 To 12 \ For R = 0 To 5
	S2[C,R] = 0
	Next R \ Next C
  CLIN = CLIN + 15
  VPRNTD = 0	
  Return
END IF
!
If CLIN + 15 > MAXLN Let CLIN = 90 \ Gosub PRNT_HEADR
Print #0;""
Print #0; Using "######"; Tab 1;CVEND;
Print #0; Tab 14;VNDA$[1,30];
If PROD_DETAIL Print #0;"  TOTALS " Else Print #0;""
Print #0;""
For MONTH_ = 1 To 12
  X$ = MTH$[(MONTH_ - 1) * 3 + 1,MONTH_ * 3]
  Print #0; Tab 3;X$[1,3];
  If MONTH_ > LMNTH Goto NXT_VMTH
  Print #0; Using "--------#"; Tab 10;FNI(S2[MONTH_,1]); Tab 21;FNI(S2[MONTH_,2]);
  GRPFT = S2[MONTH_,1] - S2[MONTH_,2]
  Print #0; Using "--------#"; Tab 31;FNI(GRPFT);
  GPP = 0 \ If S2[MONTH_,1] Let GPP = FNR((GRPFT * 100) / S2[MONTH_,1])
  Print #0; Using "----#.##"; Tab 42;GPP;
  Print #0; Using "---------#.##"; Tab 51;FNR(S2[MONTH_,3]);
  GRPFT = S2[MONTH_,3] - S2[MONTH_,4]
  Print #0; Using "---------#.##"; Tab 66;FNR(GRPFT);
  GPP = 0 \ If S2[MONTH_,3] Let GPP = FNR((GRPFT * 100) / S2[MONTH_,3])
  Print #0; Using "----#.##"; Tab 84;GPP;
  Print #0; Using "--------#.##"; Tab 94;FNR(S2[MONTH_,5]);
  Print #0; Using "--------#"; Tab 107;FNI(S2[MONTH_,0]);
  TURNS = 0
  If S2[MONTH_,5] > 0 Let TURNS = FNR(S2[MONTH_,4] / S2[MONTH_,5])
  IDAYS = 0 \ If TURNS Let IDAYS = FNI(365 / TURNS)
  Print #0; Using "#####"; Tab 118;FNI(IDAYS);
  Print #0; Using "####.##";TURNS;
NXT_VMTH: Rem "So All after Current are Blank"
  Print #0;""
Next MONTH_
For C = 0 To 12 \ For R = 0 To 5
    S2[C,R] = 0
  Next R \ Next C
CLIN = CLIN + 15
VPRNTD = 0
Return 
!
PRNTBUYR_STTL: Rem "Print Buyer SubTotal
if j8 	return ! dx xml
!
If CLIN + 15 > MAXLN Let CLIN = 90 \ Gosub PRNT_HEADR
CLIN = 90
!
Print #0;""
Print #0; Using "####"; Tab 1;CBUYER;
Print #0; Tab 14;BUYER$[1,30];"   TOTALS"
Print #0;""
For MONTH_ = 1 To 12
  X$ = MTH$[(MONTH_ - 1) * 3 + 1,MONTH_ * 3]
  Print #0; Tab 3;X$[1,3];
  If MONTH_ > LMNTH Goto NXT_BMTH
  Print #0; Using "--------#"; Tab 10;FNI(S3[MONTH_,1]); Tab 21;FNI(S3[MONTH_,2]);
  GRPFT = S3[MONTH_,1] - S3[MONTH_,2]
  Print #0; Using "--------#"; Tab 31;FNI(GRPFT);
  GPP = 0 \ If S3[MONTH_,1] Let GPP = FNR((GRPFT * 100) / S3[MONTH_,1])
  Print #0; Using "----#.##"; Tab 42;GPP;
  Print #0; Using "---------#.##"; Tab 51;FNR(S3[MONTH_,3]);
  GRPFT = S3[MONTH_,3] - S3[MONTH_,4]
  Print #0; Using "---------#.##"; Tab 66;FNR(GRPFT);
  GPP = 0 \ If S3[MONTH_,3] Let GPP = FNR((GRPFT * 100) / S3[MONTH_,3])
  Print #0; Using "----#.##"; Tab 84;GPP;
  Print #0; Using "--------#.##"; Tab 94;FNR(S3[MONTH_,5]);
  Print #0; Using "--------#"; Tab 107;FNI(S3[MONTH_,0]);
  TURNS = 0
  If S3[MONTH_,5] > 0 Let TURNS = FNR(S3[MONTH_,4] / S3[MONTH_,5])
  IDAYS = 0 \ If TURNS Let IDAYS = FNI(365 / TURNS)
  Print #0; Using "#####"; Tab 118;FNI(IDAYS);
  Print #0; Using "####.##";TURNS;
NXT_BMTH: Rem "so months after Curr are Blank
  Print #0;""
Next MONTH_
For C = 0 To 12 \ For R = 0 To 5
  S3[C,R] = 0
  Next R \ Next C
  CLIN = 90
Return
!
PRNTPROD_DTL: Rem "Print Product Detail"
!
if J8 if PROD_DETAIL=0 let VPRNTD=1 \ return ! dx xml
!
If J8 
  For MONTH_ = 1 To 12
    tmp$ = CBUYER using "###",fdel$
    tmp$ = tmp$,rtrim$(BUYER$),fdel$
	tmp$ = tmp$,CVEND Using "######", fdel$
	tmp$ = tmp$,rtrim$(VNDA$[1,30]),fdel$
    tmp$ = tmp$,rtrim$(P$[140,151]),fdel$
    tmp$ = tmp$,rtrim$(P$[9,38]),fdel$
    tmp$ = tmp$,RUNIT$,fdel$,K1$[23,24],fdel$ !!U/M and WH
    X$ = MTH$[(MONTH_ - 1) * 3 + 1,MONTH_ * 3]
    tmp$ = tmp$,X$[1,3],fdel$
    If MONTH_ > LMNTH Goto NXT_PMTH1
    tmp$ = tmp$, FNI(S1[MONTH_,1]) Using "--------#",fdel$
    tmp$ = tmp$, FNI(S1[MONTH_,2]) ,fdel$
    GRPFT = S1[MONTH_,1] - S1[MONTH_,2]
    tmp$ = tmp$, FNI(GRPFT) Using "--------#",fdel$
    GPP = 0 \ If S1[MONTH_,1] Let GPP = FNR((GRPFT * 100) / S1[MONTH_,1])
    tmp$ = tmp$, GPP Using "----#.##",fdel$
    tmp$ = tmp$, FNR(S1[MONTH_,3]) Using "---------#.##",fdel$
    GRPFT = S1[MONTH_,3] - S1[MONTH_,4]
    tmp$ = tmp$, FNR(GRPFT) Using "---------#.##",fdel$
    GPP = 0 \ If S1[MONTH_,3] Let GPP = FNR((GRPFT * 100) / S1[MONTH_,3])
    tmp$ = tmp$, GPP Using "----#.##",fdel$
    tmp$ = tmp$, FNR(S1[MONTH_,5]) Using "--------#.##",fdel$
    tmp$ = tmp$, FNI(S1[MONTH_,0]) Using "--------#",fdel$
    TURNS = 0
    If S1[MONTH_,5] > 0 Let TURNS = FNR(S1[MONTH_,4] / S1[MONTH_,5])
    IDAYS = 0 \ If TURNS Let IDAYS = FNI(365 / TURNS)
    tmp$ = tmp$, FNI(IDAYS) Using "#####",fdel$
    tmp$ = tmp$, TURNS Using "####.##",fdel$
    !
	call addtostr(e$,rstr$,tmp$+rdel$)
NXT_PMTH1: Rem "so months after Curr are Blank
  Next MONTH_
  CLIN = CLIN + 15
  RETURN
END IF 
!
If CLIN + 15 > MAXLN Let CLIN = 90 \ Gosub PRNT_HEADR
If Not(VPRNTD)
  Print #0; Using "######";CVEND;
  Print #0; Tab 14;VNDA$[1,30]
  CLIN = CLIN + 1
  VPRNTD = 1
End If 
Print #0;"" 
Print #0; Tab 1;P$[140,151];
Print #0; Tab 15;P$[9,38];"  ";RUNIT$;" WH:";K1$[23,24]
Print #0;""
For MONTH_ = 1 To 12
  X$ = MTH$[(MONTH_ - 1) * 3 + 1,MONTH_ * 3]
  Print #0; Tab 3;X$[1,3];
  If MONTH_ > LMNTH Goto NXT_PMTH
  Print #0; Using "--------#"; Tab 10;FNI(S1[MONTH_,1]); Tab 21;FNI(S1[MONTH_,2]);
  GRPFT = S1[MONTH_,1] - S1[MONTH_,2]
  Print #0; Using "--------#"; Tab 31;FNI(GRPFT);
  GPP = 0 \ If S1[MONTH_,1] Let GPP = FNR((GRPFT * 100) / S1[MONTH_,1])
  Print #0; Using "----#.##"; Tab 42;GPP;
  Print #0; Using "---------#.##"; Tab 51;FNR(S1[MONTH_,3]);
  GRPFT = S1[MONTH_,3] - S1[MONTH_,4]
  Print #0; Using "---------#.##"; Tab 66;FNR(GRPFT);
  GPP = 0 \ If S1[MONTH_,3] Let GPP = FNR((GRPFT * 100) / S1[MONTH_,3])
  Print #0; Using "----#.##"; Tab 84;GPP;
  Print #0; Using "--------#.##"; Tab 94;FNR(S1[MONTH_,5]);
  Print #0; Using "--------#"; Tab 107;FNI(S1[MONTH_,0]);
  TURNS = 0
  If S1[MONTH_,5] > 0 Let TURNS = FNR(S1[MONTH_,4] / S1[MONTH_,5])
  IDAYS = 0 \ If TURNS Let IDAYS = FNI(365 / TURNS)
  Print #0; Using "#####"; Tab 118;FNI(IDAYS);
  Print #0; Using "####.##";TURNS;
NXT_PMTH: Rem "so months after Curr are Blank
  Print #0;""
Next MONTH_
CLIN = CLIN + 15
Return 
!
PRNTGRND_TTL: Rem "Print Report Totals
IF J8 return ! dx xml
!
If CLIN + 15 > MAXLN Let CLIN = 90 \ Gosub PRNT_HEADR
Print #0;""
Print #0; Tab 1;" ***  REPORT TOTALS *** "
Print #0;""
For MONTH_ = 1 To 12
  X$ = MTH$[(MONTH_ - 1) * 3 + 1,MONTH_ * 3]
  Print #0; Tab 3;X$[1,3];
  If MONTH_ > LMNTH Goto NXT_GMTH
  Print #0; Using "--------#"; Tab 10;FNI(S4[MONTH_,1]); Tab 21;FNI(S4[MONTH_,2]);
  GRPFT = S4[MONTH_,1] - S4[MONTH_,2]
  Print #0; Using "--------#"; Tab 31;FNI(GRPFT);
  GPP = 0 \ If S4[MONTH_,1] Let GPP = FNR((GRPFT * 100) / S4[MONTH_,1])
  Print #0; Using "----#.##"; Tab 42;GPP;
  Print #0; Using "---------#.##"; Tab 51;FNR(S4[MONTH_,3]);
  GRPFT = S4[MONTH_,3] - S4[MONTH_,4]
  Print #0; Using "---------#.##"; Tab 66;FNR(GRPFT);
  GPP = 0 \ If S4[MONTH_,3] Let GPP = FNR((GRPFT * 100) / S4[MONTH_,3])
  Print #0; Using "----#.##"; Tab 84;GPP;
  Print #0; Using "--------#.##"; Tab 94;FNR(S4[MONTH_,5]);
  Print #0; Using "--------#"; Tab 107;FNI(S4[MONTH_,0]);
  TURNS = 0
  If S4[MONTH_,5] > 0 Let TURNS = FNR(S4[MONTH_,4] / S4[MONTH_,5])
  IDAYS = 0 \ If TURNS Let IDAYS = FNI(365 / TURNS)
  Print #0; Using "#####"; Tab 118;FNI(IDAYS);
  Print #0; Using "####.##";TURNS;
NXT_GMTH: Rem "so all after Curr Month are Blank
  Print #0;""
Next MONTH_
For C = 0 To 12 \ For R = 0 To 5
    S4[C,R] = 0
  Next R \ Next C
Return 
!
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB ! - If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 ! - \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG  \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}
OUTEND: Rem "done
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section  
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
