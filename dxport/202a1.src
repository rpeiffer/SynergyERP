! >>> Program 202a1
!
! description TRUCK RECONCILIATION REPORT 
!
! loadsave -w -n 100,10 -o prog/dxport/202a1.dl4 src/202a1.src
!
! 1.0 mm/dd/yyyy change??
! ------------------------custom code added for STERLING ---------------------
! 02/06/15 vst task42302 - print for all whses (they will enter a wh# but the   
!              program will bypass the ck to make sure wh# ent'd=wh# on order
!  - fixed invalid whse msg - ... must be between 0 and 99  (chg  1 - 99)
!
! 02/11/15 - found when testing for Sterling - problems with the 
!      custom_customer$ variable (dimmed for 100 s/b 30 and wasn't being read in)
! -------------------------------------------------------------------------
! 09/04/15 vst task49466 - American Osment custom changes:
!			 - do not include the order if shipvia = "+WILL CALL"
!			 - bypass the code that checks if the zone on the order is found in the
!				 sortfile that has sorted the zones that ship for the day

!
include "src/copyright.inc" ! dx
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
 !
 ! *declare common dl4 intrinsic subs & functions
 Declare Intrinsic Function trim$,dateusing$,fmtof
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
 !
 ! *declare common external libs & subs & functions
 External Lib "libgeneral.lib" !general routines
 Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
 Declare External Function getmsg$,expandarray
 !
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2004  10:54:27
Rem /w/papermaster/r2002//usr/acct/txc/work/devl/mx2/mx202a1.src (univ2) [txc] {41169}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,getglobals
!Option Default Dialect IRIS1
Rem MX202A1 - TRUCK RECONCILIATION REPORT SORT,  THEN CHAINS TO MX202REC
Com 1%,PFU1[20],CNVTU[2],UN[2],SW[20],2%,D8,3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
Dim 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],J8,J9[2],L3[3],Y,PD1[9],ZFLG
Dim 1%,PU,PUSTATUS,H3[1],N9[11]
Dim 2%,B[24],H0[12],H5[16],L4[3],L6[5],L9[1],S5,S8,X,X1,CURDATE,TRUCK
Dim 2%,PT,DT3[1],JDATE,JWDATE,begTruck,endTruck,arterm2[1],coid
Dim 3%,J,J1,T9[20],X2,X3,X4,S0[1],T2[25]
Dim A1$[156],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],TRUCK$[50]
Dim J7$[40],J9$[50],K1$[50],K2$[20],K3$[60],L1$[60],L2$[20]
Dim S1$[118],S2$[20],T2$[8],T9$[26],X$[20],WEEKDAY_$[10]
Dim V0$[10],P9$[50],ZONE$[5],P61$[256]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],custom_customer$[30]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
! Dim U_TRUCK$[1000][10]
Dim U_ZONE$[1000][10]
Dim blockid$[100]

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
COID=IntCo

For J = 2 To 12
	Read J1 \ If J1 = -1 Goto L_830
	Read #1,88,Abs(J1);J$;
	If J1 <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1920","-1840","-1856","-1888","-1792"
Data "-1872","-720","-1","-1728","-1","-1808"
let j$="2/ARTERMCODE"+str$(coid) \ ropen #50,j$
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Mat Read #1,3,172;CURDATE;
If Err 0 Let J7[1] = Spc(8)
J7[1] = 0 \ J7 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J7[1] If J7[1] <> 49 Gosub ERR_TRAP
J7 = 65 \ If J7[1] Let J7 = 23
!
let sw[1]=0   !"include the c/m pick up?
let sw[2]=0   ! if set to 1 match ship date exactly
let sw[6]=0   !"bypass credit hold check?
let sw[7]=0   !if turned on include order types 21 and 22
let lstat=6


!!!!
!call dxget("u_custom_customer", custom_customer$)
Mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(Trim$(custom_customer$))
select case custom_customer$
    case "AMERICANOSMENT"
          LET SW[1]=1
		  LET SW[2]=1  !TASK49466
 		  let lstat=10
	case "GTI"
          LET SW[1]=1
 		  let lstat=10
	case "CAMPBELL","COLUMBINE"
			let sw[2]=1
    case "COLP2076"
		  let sw[1]=1
		  let sw[2]=1
		  let lstat=10
	case "CHUDY"
		  let sw[1]=1
		  let sw[2]=1
		  let lstat=10
	case "HATHAWAY"
		  let sw[1]=1
		  let sw[2]=1
		  let lstat=9
	case "EDMAR"
		  let sw[1]=1
		  let sw[2]=1
		  let lstat=9
		  let sw[6] = 1 ! no credit hold check
	case "MORRISETTE"
		let sw[2]=1
	case "REDD"
		let sw[2]=1
	case "SANITARY"
		let sw[1]=1
		let sw[2]=1
		let lstat=10
	case "CSS","RANCHO" ! central sanitary
	    let sw[1]=1
	    let sw[2]=1
		let lstat=10
	case "CPC" ! central paper
		let sw[2]=1
	case "DEES" ! dees
		let sw[2]=1
        let sw[7]=1
        let lstat=10
    case "REGAL"
        let sw[2]=1
        let sw[7]=1
        let lstat=10
	case "PIEDMONT"
		let sw[2]=1   ! if set to 1 match ship date exactly
		let lstat=10
	case "PCS" ! paper & chemical
		let sw[2]=1
	case "STERLING" ! sterling paper 
		let sw[2]=1
		let lstat=10
	case "SWP" ! South west 
		let sw[2]=1
end select
call dxget("U_JDATE",tmp1$)
call dxget("U_WH",tmp$) \ WH = tmp$
! new prompt for COD Only - from HTBerry
call dxget("U_CODONLY",tmp$)
codonly=0
if Trim$(tmp$)="Y" let codonly=1 ! 

Gosub L_3000 ! sort it by trk/zone/stop

!validations delivery date
tmp$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
x$ = tmp1$[1,2]+"/"+tmp1$[3,4]+"/"+tmp1$[5,6]
Gosub L_6900
WEEKDAY_$ = X$[9]
J1 = tmp$
X2 = J1 \ Gosub L_7820\  if errFlag = 1 let e$ = "Invalid date !" \ error 10000
JDATE = X2
F = Z9 + 1 \ If F < 1 or F > 7 let e$ = "Invalid date!!" \ error 10000


K1$ = K2$
J1 = 90 \ J2 = 0

!!Validations warehouse
If WH <= 0 Or WH > 99 let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
!!
!!clearing sort file...
K1$ = " ",K1$
Search #9,3,1;K1$,V1,E
while not(E)
  Search #9,5,1;K1$,V1,E
  Search #9,3,1;K1$,V1,E
wend


! TRUCK handled via a range now
! K1$ = " ",K1$
! TRUCK: Rem "thru file
! If P61$[34,34] = "Y"
!   Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!   If E Goto exitSortTruck
!   X2 = K1$[1,2] \ If X2 > 10 Goto exitSortTruck
!   Mat Read #3,V1,0;H0;
!   Mat Read #3,V1,78;H4;
!   Mat Read #3,V1,104;H5;
!   If H4[2] <> WH Goto TRUCK
!   If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto TRUCK
!   X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let  X2 = 999999
!   If X2 > JDATE Goto TRUCK
!   V1 = H0[2]
!   Read #4,V1,146;S5;
!   TRUCK = S5
! Else 
!   Search #2,3,1;K1$,V1,E \ If E = 2 Goto exitSortTruck
!   !If E Gosub ERR_SEARCH
!   Mat Read #2,V1,36;T2$; \ Read #2,V1,32;TRUCK;
!   If T2$[F,F] <> "Y" Goto TRUCK
! End If 
! J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
! Search #9,4,1;J4$,V1,E 
! Goto TRUCK
! exitSortTruck:
! K1$ = "{" 
! TRUCKCNT = 0
! For I = 6 To 20
!   Search #9,3,1;K1$,V1,E 
!   If E Goto exitTruck
!   If K1$[1,1] <> "{" Goto exitTruck
!   U_TRUCK$[TRUCKCNT] = trim$(K1$[2])
!   TRUCKCNT = TRUCKCNT + 1
!   If I = 20 Let I = 5
! Next I
! exitTruck:

K1$ = " ",K1$
ZONE: Rem " thru file
If P61$[34,34] <> "Y"
  Search #2,3,1;K1$,V1,E \ If E = 2 Goto exitSortZone
  !If E Gosub ERR_SEARCH
  Mat Read #2,V1,36;T2$;
  If T2$[F,F] <> "Y" Goto ZONE
  ZONE$ = K1$
Else ! "multi-zone - no days in zone file - use OrderHeader
  Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
  If E Goto exitSortZone
  X2 = K1$[1,2] \ If X2 > 10 Goto exitSortZone
  Mat Read #3,V1,0;H0;
  Mat Read #3,V1,78;H4;
  Mat Read #3,V1,104;H5;
  IF custom_customer$ <> "STERLING"  ! "task42302 - Sterling - print for all whses
     If H4[2] <> WH Goto ZONE
  END IF
  If (H5[7] = 21 Or H5[7] = 22) AND sw[7]=0 Goto ZONE
  If H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 or h5[7] = 9 Goto ZONE
  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let X2 = 999999
  if sw[2] ! exact date match
		if x2 <> JDATE goto zone ! exact match on date
	else
		If x2 > JDATE Goto zone
	end if
  if codonly
		mat read #50,h0[12],52;arterm2;
		if arterm2[1]<>99 goto Zone! only consider cod orders
  end if
  V1 = H0[2]
  Mat Read #4,V1,126;S2$;
  ZONE$ = S2$[19,20]
End If
if trim$(zone$) <> "" ! do not add null zones as the will terminate the list
	J4$ = " ",J4$ \ J4$ = "}",ZONE$
	Search #9,4,1;J4$,V1,E  
end if
Goto ZONE
exitSortZone:
K1$ = "}" 
ZONECNT = 0
For I = 6 To 20
  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
  If E Goto exitZone
  If K1$[1,1] <> "}" Goto exitZone
  U_ZONE$[ZONECNT] = trim$(K1$[2])
  ZONECNT = ZONECNT + 1
  If I = 20 Let I = 5
Next I
exitZone:

Call getglobals("blockx",0,blockid$)
 If blockid$ = "202a1"

	Call env(2,"NEXTBLOCK","202rec2")
	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
		
 End If
 ! must be 202rec2
 call dxget("BEG_TRUCK",tmp$) \ begTruck = tmp$
 call dxget("END_TRUCK",tmp$) \ endTruck = tmp$
 if tmp$ = "" endTruck = 999999
 call dxget("ALLZONES", tmp$) \ allZones = tmp$

if not(allZones) ! if all zones, leave all zones in sort file 
	!clearing sort file...
	K1$ = " ",K1$
	Search #9,3,1;K1$,V1,E
	While Not(E)
		Search #9,5,1;K1$,V1,E
		Search #9,3,1;K1$,V1,E
	Wend
	! TRUCK handled via a range now
	!
	! call dxget("U_TRUCKCNT",tmp$)
	!
	! TRUCKCNT = tmp$
	! for i = 0 to TRUCKCNT -1
	! 	call dxget("TRUCKS" + str$(i),tmp$)
	! 	tmp$ = "on"!!!dci2
	! 	if tmp$ <> ""  !!on
	! 		TRUCK = U_TRUCK$[i]
	! 		J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	!         Search #9,4,1;J4$,V1,E
	! 	end if
	! Next i

	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		if tmp$ <> ""
			ZONE$ =  U_ZONE$[i]
			J4$ = " ",J4$ \ J4$ = "}",ZONE$
			Search #9,4,1;J4$,V1,E
		end if
	Next i
end if ! if not(allZones)

!Ropen #11,"PRTDFLT"
!PT = Spc(6) \ If PT And PT < Chf(11) Mat Read #11,PT,0;PD1;
!L_900: Rem ============= ENTER DELIVERY DATE
!Print @0,0;'CS';"TRUCK RECONCILIATION REPORT";@63,0;"MX202A1- REV. 1.1"
!Gosub L_3000
!L_920: Print @0,2;"ENTER DELIVERY DATE: ";'CE';
!J0$ = "50000621 2" \ J1 = CURDATE;J5$ = "ENTER DELIVERY DATE OR <CR> FOR TODAY'S DATE"
!Gosub L_7000 \ If Not(J1) Goto OUTEND
!X2 = J1 \ Gosub L_7700
!Gosub L_6900
!WEEKDAY_$ = X$[9]
!D8 = J1
!X2 = D8 \ Gosub L_7820 \ Goto L_900
!JDATE = X2
!X2 = D8 \ Gosub L_7700
!Print @36,2;WEEKDAY_$;
!F = Z9 + 1 \ If F < 1 Goto L_1060
!If F > 7 Goto L_1060
!L_1010:Goto L_1070 !!dci2!!!
!Print @0,4;'CE';"DATE OKAY? (Y/N/E) "; \ Input ""J$
!If J$ = "E" Goto OUTEND
!If J$ = "Y" Goto L_1070
!If J$ <> "N" Goto L_1010
!Goto L_920
!L_1060:! Print @0,22;"INVALID DATE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!L_1070: K1$ = K2$
!J1 = 90 \ J2 = 0
!L_1090: Rem =========== SELECT WAREHOUSE
!Print @0,4;'CL';"WAREHOUSE:";
!J5$ = "ENTER WAREHOUSE NUMBER OR <CR> FOR DEFAULT"
!J1 = PD1[2];J0$ = "3000021004";J2$ = "##"
!Gosub L_7000
!WH = J1
!If Not(WH) Or WH > 99 Goto L_1090
!Print @0,4;'CL';"CLEARING SORT FILE..."
!K1$ = " ",K1$
!L_1170: Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1210
!Search #9,5,1;K1$,V1,E !\ If E Gosub ERR_SEARCH
!Goto L_1170
!L_1210: Rem ============== SELECT TRUCK(S)
!L_1220: Print @0,4;'CE';"ENTER FIRST TRUCK TO PRINT,  <CR>: ALL TRUCKS THAT SHIP THIS DATE ";
!Input ""TRUCK$
!If TRUCK$ = "" Goto L_1270
!TRUCK = TRUCK$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1220
!Gosub L_1330 \ Goto L_2800

!L_1270: Rem ================ SORT THE TRUCKS THAT SHIP FOR THIS DATE
!!K1$ = " ",K1$
!L_1290: Rem "thru file
!If P61$[34,34] = "Y"
!  Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1360
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1360
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WH Goto L_1290
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1290
!  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let  X2 = 999999
!  If X2 > JDATE Goto L_1290
!  V1 = H0[2]
!  Read #4,V1,146;S5;
!  TRUCK = S5
!Else 
!  Search #2,3,1;K1$,V1,E \ If E = 2 Goto L_1360
!  !If E Gosub ERR_SEARCH
!  Mat Read #2,V1,36;T2$; \ Read #2,V1,32;TRUCK;
!  If T2$[F,F] <> "Y" Goto L_1290
!End If 
!Gosub L_1330 \ Goto L_1290

!L_1330: Rem INSERT SELECTED TRUCK INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 

!L_1360: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!Goto L_1600!!!dci2!!!temp
!Print @0,4;'CE';"THE FOLLOWING TRUCKS SHIP ON";WEEKDAY_$
!K1$ = "{" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1480
!  If K1$[1,1] <> "{" Goto L_1480
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1480
!  If I = 20 Let I = 5
!Next I
!L_1480: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_1600
!If J$ <> "N" Goto L_1480
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1360
!TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1480
!K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1360

!L_1600: Rem ============= SELECT ZONE(S)
!Print @0,4;'CE';"ENTER FIRST ZONE TO PRINT,  <CR>: ALL ZONES THAT SHIP THIS DATE ";
!Input ""ZONE$
!If Len(ZONE$) > 2 Print 'RB CL';"INVALID !!" \ Signal 3,15 \ Goto L_1600
!If ZONE$[1,2] = "  " Or ZONE$ = "" Goto L_1660
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Search #2,2,1;K1$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!If E > 0 Print 'RB CL';"INVALID ZONE!!" \ Signal 3,15 \ Goto L_1600
!K1$ = ZONE$
!Gosub L_1720 \ Goto L_2850

!L_1660: Rem =============== SORT THE ZONES THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1680: Rem " thru file
!If P61$[34,34] <> "Y"
!  Search #2,3,1;K1$,V1,E \ If E = 2 Goto L_1820
!  !If E Gosub ERR_SEARCH
!  Mat Read #2,V1,36;T2$;
!  If T2$[F,F] <> "Y" Goto L_1680
!  ZONE$ = K1$
!Else ! "multi-zone - no days in zone file - use OrderHeader
!  Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1820
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1820
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WH Goto L_1680
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1680
!  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let X2 = 999999
!  If X2 > JDATE Goto L_1680
!  V1 = H0[2]
!  Mat Read #4,V1,126;S2$;
!  ZONE$ = S2$[19,20]
!End If 
!Gosub L_1720 \ Goto L_1680

!L_1720: Rem INSERT SELECTED ZONE INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "}",ZONE$
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 

!L_1750: Rem =============== HAVE THE ORDERS BEEN PRINTED?
!S8 = 0 \ If P9$[45,45] = "Y" Goto L_1798
!L_1758: Print @0,22;'CE';"HAVE THE ORDERS BEEN PRINTED? (Y/N)  ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1758
!S8 = 1 \ If J$ = "Y" Let S8 = 2
!If S8 = 1 Goto L_1798
!L_1778: Rem =============== INCLUDE INVOICES?
!Print @0,22;'CE';"INCLUDE INVOICES IN SORT? (Y/N)   ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1778
!If J$ = "Y" Let S8 = 0
!L_1798: Rem =============== INCLUDE CREDIT MEMO PICK-UP?
!Print @0,22;'CE';"INCLUDE CREDIT MEMO PICK-UP IN SORT? (Y/N)   ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1798
!If J$ = "Y"
!  PU = 1
!  If S8 = 1 Let PUSTATUS = 9
!  If S8 = 2 Let PUSTATUS = 10
!Else 
!  PU = 0;PUSTATUS = 0
!End If 
!Return 

!L_1820: Rem ============ DISPLAY THE ZONES THAT SHIP
! Goto L_2050!!dci2!!!temp
!Print @0,4;'CE';"THE FOLLOWING ZONES SHIP ON";WEEKDAY_$
!K1$ = "}" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1930
!  If K1$[1,1] <> "}" Goto L_1930
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1930
!  If I = 20 Let I = 5
!Next I
!L_1930: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_2050
!If J$ <> "N" Goto L_1930
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1820
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1820
!L_2050: Rem ============ FINISHED SELECTIONS
!Print @0,22;'CL';"SORTING....PLEASE WAIT...";
K1$ = " ",K1$;K1$[1,2] = 1 Using "##"
if custom_customer$ = "CHUDY"
	K1$ = " ",K1$;K1$[1,2] = 6 Using "##"
end if
L_2100: Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
X2 = K1$[1,2]
If X2 > lstat Goto L_9100
Mat Read #3,V1,66;V0$;
Mat Read #3,V1,0;H0;
Mat Read #3,V1,104;H5;
Mat Read #3,V1,52;H3;
Mat Read #7,H0[3],8;T2;
Gosub L_5110
If Not(SW[6]) If N9[0] Goto L_2100
If (H5[7] = 21 Or H5[7] = 22) and sw[7]=0 Goto L_2100
If H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 or h5[7] = 9 Goto L_2100
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 0
JWDATE = X2
if sw[2] ! exact date match
		if jwdate <> JDATE Goto L_2100 ! exact match on date
else
		If JWDATE > JDATE Goto L_2100
end if
if codonly
	mat read #50,h0[12],52;arterm2;
	if arterm2[1]<>99 goto l_2100 ! only consider cod orders
end if
select case custom_customer$
    case "AMERICANOSMENT"
		if h0[0] = 5 OR h0[0] = 6 AND V0$[1,10] = "+WILL CALL" goto L_2100		! "task49466 - POS do not include
		if h0[0] = 10 and h3[1] <> 6 goto L_2100 ! only CM that are pickups 10
	case "GTI"
		if h0[0]=10 and h3[1] <> 6 goto L_2100 ! only CM that are pickups  
    case "CHUDY"
		if h0[0] <> 6 and h0[0] <> 10 goto L_2100 ! only status 6 orders and pickups 10
		if h0[0] = 10 and h3[1] <> 6 goto L_2100 ! only CM that are pickups 10
	case "HATHAWAY"
		if h0[0] <> 2 and h0[0] <> 9 goto L_2100 ! only status 2 orders and pickups 9
		if h0[0] = 9 and h3[1] <> 6 goto L_2100 ! only CM that are pickups
	case "EDMAR"
		if (h0[0] < 2 or h0[0] > 4) and h0[0] <> 9 goto L_2100 ! status 2,3,4 orders and pickups
		if h0[0] = 9 and h3[1] <> 6 goto L_2100 ! only CM that are pickups 9
	case "SANITARY"
		if h0[0] = 6 OR (h0[0] > 8 and h3[1] <> 6) goto L_2100 ! no printed invoices and only CM that are pickups
	case "RANCHO"
		if t2[21] goto L_2100 ! any hold hold code
		if h0[0] > 4 AND h0[0] < 10 goto L_2100 ! ignore status 5,6,7 and 9
		if h0[0] = 10 and h3[1] <> 6 goto L_2100 ! only status 10 CM pickups
	case "CSS"
		if h0[0] > 6 AND h0[0] < 10 goto L_2100 ! ignore status 7 and 9
		if h0[0] = 10 and h3[1] <> 6 goto L_2100 ! only status 10 CM pickups
end select
Mat Read #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
If custom_customer$="AMERICANOSMENT"   ! "task49466
	goto bypass_zone_check:
END IF
If S2$[19,20] = "  " Or S2$[19,19] = "" Goto L_2100
K3$ = " ",K3$ \ K3$ = "}",S2$[19,20]
Search #9,2,1;K3$,V2,E !\ If E > 1 Gosub ERR_SEARCH
If E Goto L_2100
! TRUCK$ = "{",S5 Using "######"
! Search #9,2,1;TRUCK$,V2,E !\ If E > 1 Gosub ERR_SEARCH
! If E Goto L_2100
bypass_zone_check: !
if s5 < begTruck or s5 > endTruck goto L_2100
Mat Read #3,V1,78;H4;
J$ = " ",J$ \ J$ = H0[7] Using "######"
IF custom_customer$ <> "STERLING"  ! 'task 42302 - print for all whses
   If WH <> H4[2] Goto L_2100
END IF
J4$=" ",J4$ 
IF CUSTOM_CUSTOMER$="ACME"   
   LET J4$[1,6]=0 USING "######"  
else
   LET J4$[1,6]=S5 USING "######" 
endif
LET J4$[7,8]=S2$[19,20]
J4$[9,12] = H4[1] Using "####" \ J4$[13,18] = H0[7] Using "######"
Search #9,4,1;J4$,V1,E !\ If E Gosub ERR_SEARCH
Goto L_2100
!L_2800: Rem CONTINUE ENTERING TRUCKS
!Print @0,22;'CE';"   ENTER NEXT TRUCK TO PRINT, WHEN DONE ENTER  E: ";
!Print @0,5;TRUCK; \ TRUCK$ = TRUCK \ X1 = X1 + Len(TRUCK$);X2 = 5
!L_2812: If X1 > 80 Let X2 = X2 + 1;X1 = 0
!L_2814: Print @X1,X2;
!Input Len 16390;""TRUCK$ \ If TRUCK$ = "E" Goto L_1600
!If TRUCK$ = "" Or TRUCK$[1,2] = "  " Goto L_2814
!TRUCK = TRUCK$
!If TRUCK < 0 Or TRUCK > 999999 Or Fra(TRUCK) Goto L_2814
!Gosub L_1330
!X1 = X1 + Len(TRUCK$) + 1 \ If X1 > 75 Let X2 = X2 + 1;X1 = 0
!Goto L_2812
!L_2850: Rem KEEP ENTERING ZONES
!Print @0,22;'CE';"  ENTER ADDITIONAL ZONE TO PRINT, WHEN DONE ENTER   /: "
!Print @0,5;ZONE$; \ X1 = Len(ZONE$) + 1;X2 = 5
!L_2865: If X1 > 76 Let X2 = X2 + 1;X1 = 0
!L_2870: Print @X1,X2;'CL'; \ Input Len 16386;""ZONE$
!If ZONE$ = "/" Goto L_2050
!If ZONE$ = "" Or ZONE$ = "  " Goto L_2870
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Search #2,2,1;K1$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!If E > 0 Print 'RB CL';" INVALID ZONE!!"; \ Signal 3,15 \ Goto L_2870
!K1$ = ZONE$ \ Gosub L_1720 \ X1 = X1 + Len(ZONE$) + 1
!If X1 > 77 Let X2 = X2 + 1;X1 = 0
!Goto L_2865
L_3000: Rem ----SORT BY TRUCK/ZONE/STOP
J$ = "1"
ZFLG = 1 !\ Print @0,1;'CE';"SORT:   TRUCK/ZONE/STOP   ";
Return 
L_5110: Rem UNPACK T2[21] TO N9[x]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!L_7145: For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!  If J9$[J8,J8] = " " Goto L_7235
!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next J8
!If J0 = 5 Goto L_7265
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
YMD2JUL: Rem "word version of this
errFlag = 0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1 !!Return 
X2 = X$[1,5] \ Return !1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
OUTEND: Rem END
End
!Print 'CS'
!Chain "MX000C"
L_9100: Rem NOW CHAIN TO ! PROGRAM

tmp$ = "202rec.dl4"
If ZFLG = 1
 Chain tmp$
 chain write CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8
End if
!If ZFLG = 1 Chain "MX202REC"
!Stop 
!Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
!Rem {end rtn.error.s}
