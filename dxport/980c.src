!>>> Program 980c
!
! description  move rebate staging to live
!
! loadsave -w -n 100,10 -o prog/dxport/980c.dl4 src/980c.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2010  14:29:37
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/htberry.r10/ut980c.src (univ2) [valerie] {35100}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,programdump
!Option Default Dialect IRIS1
Rem ut980c copy rebate file from work areas to live
Com 1%,COST_LEV[3],COMM_LEV,Z9[9]
If Err 0 Gosub ERR_TRAP
Dim RCN$[70],VENDCNT$[50],RB$[12],SPUDA2$[30],M1$[40],CCREF$[20],U5$[50]
Dim K$[60],K1$[60],K2$[60],K3$[60],K4$[60],K5$[60],A$[156],CNAME$[30],KC$[60]
Dim KEY0$[60],KEY1$[60],KEY2$[60],KEY3$[60],PMASK$[12],TMPKEY$[50],J8$[10]
Dim SPACE$[500],SCRATCH$[80],RETVAL$[512],Z2$[2],VENDNAME$[30],PUM$[4],CUM$[4]
Dim F$[20],P61$[256],MSGTXT$[75],VRCINFO$[60],WORKEY$[60],CCD$[14],T9$[50]
Dim BPUM$[4],APUM$[4],BCUM$[4],ACUM$[4],BCDESC$[30],ACDESC$[30],DASH$[132]
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],URECFLAG,INCEXPIRED,RBWHSE
Dim 1%,PFU1[20],CNVTU[9],CKUOM[2]
Dim 2%,RB1[5],RBMIN,RBCOM,CONTRACT,CC1[4],START_VENDOR,END_VENDOR,V9[4]
Dim 2%,START_CONTRACT,END_CONTRACT,WORKCONT,JSDATE,JEDATE,JIDATE,JDATE[2],D6
Dim 2%,VCONTRACT,COMPANYCOPY,VINFO,CREATECONTRACT,RBTRACK[4],DT3[1],Q0[1]
Dim 3%,RCN3[3],RB3[6],RBN,RB5[2],PFU2[6],CNVTA[4],A[33],RBCOST,RBSLSCOST
Dim 3%,BRBTYPE,BRBFACTOR,ARBTYPE,ARBFACTOR,BSDATE,BEDATE,ASDATE,AEDATE
Dim 3%,BSLMTYPE,BSLMFACTOR,BSLMBASE,BSLMCOST,ASLMTYPE,ASLMFACTOR,ASLMBASE,ASLMCOST
Dim K7$[50],V$[30]
 
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],message$[200],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
SPACE$ = " ",SPACE$
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = "cntrl/cntrl" + Str$(COID)
DFLTCOID = COID
WORKCOID = COID
Mat Read #1,61,0;P61$;
Read #1,3,172;D6;
Read #1,3;CNAME$;
X2 = D6 \ Gosub NUM2DATE \ J8$ = X$
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "###########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
DASH$ = "-",DASH$
VINFO = 0 ! \ If P61$[82,82] = "Y" Let VINFO = 1 ! NOT ON SERP AT THIS TIME!
CREATECONTRACT = 0 \ If P61$[83,83] = "Y" Let CREATECONTRACT = 1
COMPANYCOPY = 0 \ If P61$[84,84] = "Y" Let COMPANYCOPY = 1
!If Err 0 Let PRINT_TO_SCREEN = Spc(8)
PRINT_TO_SCREEN = 0 !\ V9[3] = Chf(0) ! too many formats - PRINTER ONLY!!!
!If Err 0 Gosub ERR_TRAP
If PRINT_TO_SCREEN If PRINT_TO_SCREEN <> 49 Goto ERR_TRAP
If Err 0 Gosub ERR_TRAP
V9[3] = 60 \ If PRINT_TO_SCREEN Let V9[3] = 18
START_HERE: Rem all starts
START_VENDOR = 0
END_VENDOR = 999999
START_CONTRACT = 0
END_CONTRACT = 999999
!Gosub DISPLAY_SCREEN
gosub VEND_RANGE
GOSUB CONTR_RANGE
GOSUB COMPANY_COPY
Call dxget("RECRTMSG",tmp$) ! recreate missing live contracts
Recrtmsg=0 \ if UCase$(Trim$(tmp$))="Y" let Recrtmsg=1
INPUTS: Rem
Gosub FILE_OPENS
!Print @0,23;'CE';"Enter #:field to edit  C: begin copy or  E: exit ";
!Input Len 16384 + 3;""J$ \ Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "C"
  
  ! Goto BEGIN_COPY
!End If 
!X = J$
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On X Gosub VEND_RANGE,CONTR_RANGE,COMPANY_COPY
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Goto INPUTS
BEGIN_COPY: Rem let's start copying shall we
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
V9[1] = 66
  Gosub PRINT_HEADER
K$ = " ",K$ !\ K$ = ""
COPY_LOOP: Rem start with header of staged work file
Search #2,3,1;K$,R2,E
If E
  ! Input @0,22;'CL';"Update complete press <CR> to continue ";J$
  Goto OUTEND
End If 
CH_RBHEAD = 2;REC_RBHEAD = R2
Gosub READ_REBATE_HEADER
If RCN3[0] < START_CONTRACT Goto COPY_LOOP
If RCN3[0] > END_CONTRACT Goto COPY_LOOP
If RCN3[3] < START_VENDOR Goto COPY_LOOP
If RCN3[3] > END_VENDOR Goto COPY_LOOP
CHECK_VENDOR = RCN3[3]
If COMPANYCOPY And Not(SAMECOMPANY)
  CH_VEND = 23
  Gosub GET_VENDOR_NAME
  If Not(VENDFOUND)
    Gosub PRINT_HEADER
    Print #0;DASH$
    Print #0; Tab 5;" ******** CONTRACT ";K$;
    Print #0; Using "##";"   VENDOR ON COMPANY ";WORKCOID;
    Print #0;" NOT FOUND NO UPDATE PERFORMED ********"
    Print #0;DASH$
    V9[1] = V9[1] + 3
    Goto COPY_LOOP
  End If 
End If 
FAKECREATE = 0
! Print @10,10;'CL';"contract ";K$
K1$ = K$
Search #12,2,1;K1$,R12,E12
If E If E > 1 Gosub ERR_SEARCH
WORKCONT = K$
LIVECONT = WORKCONT
If E12 ! ******* can't find on live
  If COMPANYCOPY And Not(SAMECOMPANY) !different company shall we add?
    !Print @0,11;'CE';WORKCONT Using "Contract ######"
    !Print @16,11;WORKCOID Using "not on file for Company ##"
DO_WE_CREATE: Rem do we create
    !Print @0,12;'CL';"Do you want to create this contract Y/N ?";
    !Input Len 16384 + 1;""J$ \ Call String(1,J$)
    !If J$ <> "Y" If J$ <> "N" Goto DO_WE_CREATE
    If NOT(Recrtmsg) Goto COPY_LOOP ! J$ = "N"
    LIVECONT = WORKCONT
    FAKECREATE = 1
  Else ! can't update what's not there
    If Not(CREATECONTRACT)
      !Print @0,11;'CE';WORKCONT Using "Contract ######"
      !Print @16,11;"no longer on file in Rebates"
WE_CREATE: Rem no longer there
      !Print @0,12;'CL';"Do you want to create this contract Y/N ?";
      !Input Len 16384 + 1;""J$ \ Call String(1,J$)
      !If J$ <> "Y" If J$ <> "N" Goto WE_CREATE
      If NOT(Recrtmsg) !  J$ = "N"
        Gosub PRINT_HEADER
        Print #0;DASH$
        Print #0; Tab 5;" ******** CONTRACT ";K$;"   FROM STAGED AREA NO LONGER ON LIVE NO UPDATE PERFORMED ********"
        Print #0;DASH$
        V9[1] = V9[1] + 3
        Goto COPY_LOOP
      End If 
      LIVECONT = WORKCONT
      FAKECREATE = 1
    End If 
  End If 
End If 
If Not(E12) ! *********** we found the contract on live
  If CREATECONTRACT ! if we are creating a new contract
WHAT_TO_DO: Rem
GET_UNIQUE_CONTRACT: Rem
    LIVECONT = LIVECONT + 1 \ If LIVECONT > 999999 Gosub ERR_SEARCH
    KEY0$ = " ",KEY0$ \ KEY0$ = LIVECONT Using "######"
    Search #12,2,1;KEY0$,R,E
    If Not(E) Goto GET_UNIQUE_CONTRACT
CHECK_CONTRACT_OKAY: Rem check if new one okay
    !Print @0,12;"The new contract number will be ";
    !J0$ = "3000063512"
    !J5$ = "Enter <cr> to keep, key contract number max 999999 or 0:skip"
    !J1 = LIVECONT
    !Gosub ISINPUT
    TESTCONT = LIVECONT ! J1 ALWAYS KEEP
    If Not(TESTCONT) Goto COPY_LOOP
    !Print @0,12;'CE';
    If LIVECONT <> TESTCONT ! if they changed the contract
      KEY1$ = TESTCONT Using "######"
      Search #12,2,1;KEY1$,R,E
      If E ! the contract keyed does not exist
        LIVECONT = TESTCONT
        Goto CHECK_CONTRACT_OKAY
      Else 
        !MSGTXT$ = "Contract already on file !"
        !Call "errmsg",MSGTXT$
        Goto COPY_Loop ! CHECK_CONTRACT_OKAY
      End If 
    End If 
  Else ! we are updating existing contract
    CH_RBHEAD = 12;REC_RBHEAD = R12
    Gosub READ_REBATE_HEADER
    If RCN3[3] <> CHECK_VENDOR
      Gosub PRINT_HEADER
      Print #0;DASH$
      Print #0; Tab 5;" ******** CONTRACT ";K$;
      Print #0; Using "##";"   VENDOR ON COMPANY ";DFLTCOID;" NOT FOR THE SAME VENDOR ON COMPANY ";WORKCOID;
      Print #0;" NO UPDATE PERFORMED ********"
      Print #0;DASH$
      V9[1] = V9[1] + 3
      Goto COPY_LOOP
    End If 
  End If 
End If 
DO_SOMETHING: Rem let's do something with these contracts
If CREATECONTRACT Or FAKECREATE
CREATE_REBATE_HEADER: Rem
  ORIGCONTFOUND = 0
  WORKEY$ = WORKCONT Using "######"
  Search #12,2,1;WORKEY$,R12,E
  If Not(E)
    CH_RBHEAD = 12;REC_RBHEAD = R12
    Gosub READ_REBATE_HEADER
    BSDATE = RCN3[1]
    BEDATE = RCN3[2]
    BCDESC$[1,30] = RCN$[41,70]
    ORIGCONTFOUND = 1
  End If 
  WORKEY$ = WORKCONT Using "######"
  Search #2,2,1;WORKEY$,R2,E \ If E Gosub ERR_SEARCH
  CH_RBHEAD = 2;REC_RBHEAD = R2
  Gosub READ_REBATE_HEADER
  KEY0$ = " ",KEY0$ \ KEY0$ = LIVECONT Using "######"
  Search #12,2,1;KEY0$,R12,E \ If Not(E) Gosub ERR_SEARCH
  RCN3[0] = LIVECONT
  E = 2
  Search #12,1,0;KEY0$,R12,E \ If E Gosub ERR_SEARCH
  CH_RBHEAD = 12;REC_RBHEAD = R12
  Gosub WRITE_REBATE_HEADER
  KEY1$ = " ",KEY1$
  KEY1$ = RCN3[3] Using "######"
  KEY1$[7] = KEY0$
  Search #12,4,4;KEY1$,R12,E \ If E Gosub ERR_SEARCH
  If VENDCNT$[1,20] <> SPACE$[1,20]
    KEY1$ = " ",KEY1$
    KEY1$[1,6] = RCN3[3] Using "######"
    KEY1$[7,26] = VENDCNT$[1,20]
    KEY1$[27] = KEY0$
    Search #12,4,5;KEY1$,R12,E \ If E Gosub ERR_SEARCH
  End If 
  If COMPANYCOPY And Not(SAMECOMPANY) Goto CREATE_REBATE_DIR1
  KEY1$ = " ",KEY1$
  KEY1$ = WORKCONT Using "######"
CREATE_CUSTDIR_LOOP: Rem work on dirs 2 and 3
  Search #2,3,3;KEY1$,R2,E
  If E Goto CREATE_REBATE_DIR1
  WORK = KEY1$[1,6]
  If WORK <> WORKCONT Goto CREATE_REBATE_DIR1
  KEY3$ = " ",KEY3$ \ KEY3$ = KEY1$
  KEY3$[1,6] = LIVECONT Using "######"
  Search #12,2,3;KEY3$,R12,E \ If Not(E) Gosub ERR_SEARCH
  Search #12,4,3;KEY3$,R12,E \ If E Gosub ERR_SEARCH
  KEY2$ = " ",KEY2$
  KEY2$ = KEY3$[7,12] + KEY3$[1,6]
  Search #12,4,2;KEY2$,R12,E
  Goto CREATE_CUSTDIR_LOOP
CREATE_REBATE_DIR1: Rem
  Search #12,4,1;KEY0$,R12,E \ If E Gosub ERR_SEARCH
  ASDATE = RCN3[1]
  AEDATE = RCN3[2]
  ACDESC$[1,30] = RCN$[41,70]
  Gosub PRINT_CONTRACT_HEADER
  If Not(FAKECREATE) !  if not one that did not exist on company copy to
    X2 = RCN3[1] \ Gosub YMD2JUL \ X2 = 0
    JSDATE = X2
    JSDATE = JSDATE - 1
    KEY0$ = " ",KEY0$ \ KEY0$ = WORKCONT Using "######"
    Search #12,2,1;KEY0$,R12,E \ If E Gosub ERR_SEARCH
    CH_RBHEAD = 12;REC_RBHEAD = R12
    Gosub READ_REBATE_HEADER
    X2 = JSDATE \ Gosub JUL2YMD \ RCN3[2] = X$
    Gosub WRITE_REBATE_HEADER
  End If 
CREATE_REBATE_DETAIL: Rem now go through the detail
  WORKEY$ = " ",WORKEY$
  WORKEY$ = WORKCONT Using "######"
CREATE_DETAIL_LOOP: Rem
  Search #3,3,1;WORKEY$,R3,E
  If E
    Gosub LOG_IN_TRACK
    Goto CREATE_CUSTCONT
  End If 
  WORK = WORKEY$[1,6]
  If WORKCONT <> WORK
    Gosub LOG_IN_TRACK
    Goto CREATE_CUSTCONT
  End If 
  TMPKEY$ = " ",TMPKEY$ \ TMPKEY$ = WORKEY$
  Search #13,2,1;TMPKEY$,R13,E
  ALLPROD = 0;COMDY = 0;PFLAG = 1
  If TMPKEY$[7,7] = "#"
    ALLPROD = 1 \ PFLAG = 0
  End If 
  If TMPKEY$[7,7] = "*"
    COMDY = 1 \ PFLAG = 0
  End If 
  ORIGNOTFOUND = 0
  If E
    ORIGNOTFOUND = 1
    MSGTXT$ = " ",MSGTXT$
    MSGTXT$ = "CONTRACT  " + TMPKEY$[1,6] + "LINE  " + TMPKEY$[7] + "NOT ON FILE"
  Else 
    CH_RBDETL = 13;REC_RBDETL = R13
    Gosub READ_REBATE_DETAIL
  End If 
  BEFORE = 1
  BRBTYPE = 0;BRBFACTOR = 0;BRBCOST = 0
  BSLMTYPE = 0;BSLMFACTOR = 0;BSLMCOST = 0
  BPUM$ = " ",BPUM$ \ BCUM$ = " ",BCUM$
  Gosub PREP_DETAIL_LINE
  CH_RBDETL = 3;REC_RBDETL = R3
  Gosub READ_REBATE_DETAIL
  If COMPANYCOPY And Not(SAMECOMPANY)
    PROBFLAG = 0
    Gosub VALIDATE_PROD
    If PROBFLAG Goto CREATE_DETAIL_LOOP
  End If 
  RB1[0] = LIVECONT
  KEY0$ = " ",KEY0$ \ KEY0$ = WORKEY$
  KEY0$[1,6] = LIVECONT Using "######"
  E = 2
  Search #13,1,0;KEY0$,R13,E \ If E Gosub ERR_SEARCH
  CH_RBDETL = 13;REC_RBDETL = R13
  Gosub WRITE_REBATE_DETAIL
  KEY1$ = KEY0$[7,18] + KEY0$[1,6]
  Search #13,4,2;KEY1$,R13,E \ If E Gosub ERR_SEARCH
  KEY1$ = " ",KEY1$
  KEY1$[1,6] = RB1[1] Using "######"
  KEY1$[7] = KEY0$
  Search #13,4,3;KEY1$,R13,E \ If E Gosub ERR_SEARCH
  Search #13,4,1;KEY0$,R13,E \ If E Gosub ERR_SEARCH
  BEFORE = 0
  ALLPROD = 0;COMDY = 0;PFLAG = 1
  If WORKEY$[7,7] = "#"
    ALLPROD = 1 \ PFLAG = 0
  End If 
  If WORKEY$[7,7] = "*"
    COMDY = 1 \ PFLAG = 0
  End If 
  ARBTYPE = 0;ARBFACTOR = 0;ARBCOST = 0
  ASLMTYPE = 0;ASLMFACTOR = 0;ASLMCOST = 0
  APUM$ = " ",APUM$ \ ACUM$ = " ",ACUM$
  Gosub PREP_DETAIL_LINE
  Gosub PRINT_DETAIL_LINE
  Goto CREATE_DETAIL_LOOP
CREATE_CUSTCONT: Rem go through the customer contract file
  If COMPANYCOPY And Not(SAMECOMPANY) Goto CREATE_REBATE_NOTES
  WORKEY$ = " ",WORKEY$
  WORKEY$ = WORKCONT Using "######"
CREATE_CUSTCONT_LOOP: Rem go through staged work customer contract
  Search #4,3,1;WORKEY$,R4,E
  If E Goto CREATE_REBATE_NOTES
  WORK = WORKEY$[1,6]
  If WORKCONT <> WORK Goto CREATE_REBATE_NOTES
  CH_RBCUST = 4;REC_RBCUST = R4
  Gosub READ_REBATE_CUSTOMER
  KEY0$ = " ",KEY0$ \ KEY0$ = WORKEY$
  KEY0$[1,6] = LIVECONT Using "######"
  Search #14,2,1;KEY0$,R14,E \ If Not(E) Gosub ERR_SEARCH
  CC1[0] = LIVECONT
  E = 2
  Search #14,1,0;KEY0$,R14,E \ If E Gosub ERR_SEARCH
  CH_RBCUST = 14;REC_RBCUST = R14
  Gosub WRITE_REBATE_CUSTOMER
  KEY1$ = KEY0$[7,12] + KEY0$[1,6]
  Search #14,4,2;KEY1$,R14,E \ If E Gosub ERR_SEARCH
  Search #14,4,1;KEY0$,R14,E \ If E Gosub ERR_SEARCH
  Goto CREATE_CUSTCONT_LOOP
CREATE_REBATE_NOTES: Rem let's got through notes in stage work
  WORKEY$ = " ",WORKEY$
  WORKEY$ = WORKCONT Using "######"
CREATE_NOTE_LOOP: Rem go through rebate notest
  Search #5,3,1;WORKEY$,R5,E
  If E Goto CREATE_VINFO
  WORK = WORKEY$[1,6]
  If WORKCONT <> WORK Goto CREATE_VINFO
  CH_RBNOTE = 5;REC_RBNOTE = R5
  Gosub READ_REBATE_NOTES
  KEY0$ = " ",KEY0$
  KEY0$ = WORKEY$
  KEY0$[1,6] = LIVECONT Using "######"
  Search #15,2,1;KEY0$,R15,E \ If Not(E) Gosub ERR_SEARCH
  E = 2
  Search #15,1,0;KEY0$,R15,E \ If E Gosub ERR_SEARCH
  CONTRACT = LIVECONT
  CH_RBNOTE = 15;REC_RBNOTE = R15
  Gosub WRITE_REBATE_NOTES
  Search #15,4,1;KEY0$,R15,E \ If E Gosub ERR_SEARCH
  Goto CREATE_NOTE_LOOP
CREATE_VINFO: Rem vendor info
  If VINFO ! they are using the vinfo file
    WORKEY$ = " ",WORKEY$
    WORKEY$ = WORKCONT Using "######"
CREATE_VINFO_LOOP: Rem
    Search #6,3,1;WORKEY$,R6,E
    If E Goto COPY_LOOP
    WORK = WORKEY$[1,6]
    If WORKCONT <> WORK Goto COPY_LOOP
    CH_RBVINFO = 6;REC_RBVINFO = R6
    Gosub READ_REBATE_VINFO
    KEY0$ = WORKEY$
    KEY0$[1,6] = LIVECONT Using "######"
    Search #16,2,1;KEY0$,R16,E \ If Not(E) Gosub ERR_SEARCH
    E = 2
    Search #16,1,0;KEY0$,R16,E \ If E Gosub ERR_SEARCH
    CH_RBVINFO = 16;REC_RBVINFO = R16
    VCONTRACT = LIVECONT
    Gosub WRITE_REBATE_VINFO
    Search #16,4,1;KEY0$,R16,E \ If E Gosub ERR_SEARCH
    Goto CREATE_VINFO_LOOP
  End If 
  Goto COPY_LOOP
Else !****    update exsisting contract ***********
UP_REBATE_HEADER: Rem now to the header
  WORKEY$ = WORKCONT Using "######"
  Search #12,2,1;WORKEY$,R12,E \ If E Gosub ERR_SEARCH
  CH_RBHEAD = 12;REC_RBHEAD = R12
  Gosub READ_REBATE_HEADER
  BSDATE = RCN3[1]
  BEDATE = RCN3[2]
  BCDESC$[1,30] = RCN$[41,70]
  WORKEY$ = WORKCONT Using "######"
  Search #2,2,1;WORKEY$,R2,E \ If E Gosub ERR_SEARCH
  KEY0$ = " ",KEY0$ \ KEY0$ = LIVECONT Using "######"
  Search #12,2,1;KEY0$,R12,E \ If E Gosub ERR_SEARCH
  CH_RBHEAD = 12;REC_RBHEAD = R12
  Gosub READ_REBATE_HEADER
  If VENDCNT$[1,20] <> SPACE$[1,20] ! clear out this dir & rebuild
    KEY1$ = " ",KEY1$
    KEY1$[1,6] = RCN3[3] Using "######"
    KEY1$[7,26] = VENDCNT$[1,20]
    KEY1$[27] = KEY0$
    Search #12,5,5;KEY1$,R12,E
  End If 
  CH_RBHEAD = 2;REC_RBHEAD = R2
  Gosub READ_REBATE_HEADER
  CH_RBHEAD = 12;REC_RBHEAD = R12
  Gosub WRITE_REBATE_HEADER
  ASDATE = RCN3[1]
  AEDATE = RCN3[2]
  ACDESC$[1,30] = RCN$[41,70]
  Gosub PRINT_CONTRACT_HEADER
  If VENDCNT$[1,20] <> SPACE$[1,20] ! rebuild dir 5
    KEY1$ = " ",KEY1$
    KEY1$[1,6] = RCN3[3] Using "######"
    KEY1$[7,26] = VENDCNT$[1,20]
    KEY1$[27] = KEY0$
    Search #12,4,5;KEY1$,R12,E \ If E Gosub ERR_SEARCH
  End If 
  If COMPANYCOPY And Not(SAMECOMPANY) Goto UP_REBATE_DETAIL
  KEY1$ = " ",KEY1$
  KEY1$[1,6] = WORKCONT Using "######"
UP_CUSTDIR_LOOP: Rem work on dirs 2 and 3
  Search #2,3,3;KEY1$,R2,E
  If E Goto UP_REBATE_DETAIL
  WORK = KEY1$[1,6]
  If WORK <> WORKCONT Goto UP_REBATE_DETAIL
  KEY3$ = " ",KEY3$ \ KEY3$ = KEY1$
  KEY3$[1,6] = LIVECONT Using "######"
  Search #12,2,3;KEY3$,R12,E \ If Not(E) Goto UP_CUSTDIR_LOOP
  Search #12,4,3;KEY3$,R12,E \ If E Gosub ERR_SEARCH
  KEY2$ = " ",KEY2$
  KEY2$ = KEY3$[7,12] + KEY3$[1,6]
  Search #12,4,2;KEY2$,R12,E
  Goto UP_CUSTDIR_LOOP
UP_REBATE_DETAIL: Rem now go through the detail
  WORKEY$ = " ",KEY0$
  WORKEY$ = WORKCONT Using "######"
UP_DETAIL_LOOP: Rem
  Search #3,3,1;WORKEY$,R3,E
  If E
    Gosub LOG_IN_TRACK
    Goto UP_CUSTCONT
  End If 
  WORK = WORKEY$[1,6]
  If WORKCONT <> WORK
    Gosub LOG_IN_TRACK
    Goto UP_CUSTCONT
  End If 
  TMPKEY$ = " ",TMPKEY$ \ TMPKEY$ = WORKEY$
  Search #13,2,1;TMPKEY$,R13,E
  ALLPROD = 0;COMDY = 0;PFLAG = 1
  If TMPKEY$[7,7] = "#"
    ALLPROD = 1 \ PFLAG = 0
  End If 
  If TMPKEY$[7,7] = "*"
    COMDY = 1 \ PFLAG = 0
  End If 
  ORIGNOTFOUND = 0
  If E
    ORIGNOTFOUND = 1
  Else 
    CH_RBDETL = 13;REC_RBDETL = R13
    Gosub READ_REBATE_DETAIL
  End If 
  BEFORE = 1
  BRBTYPE = 0;BRBFACTOR = 0;BRBCOST = 0
  BSLMTYPE = 0;BSLMFACTOR = 0;BSLMCOST = 0
  BPUM$ = " ",BPUM$ \ BCUM$ = " ",BCUM$
  Gosub PREP_DETAIL_LINE
  CH_RBDETL = 3;REC_RBDETL = R3
  Gosub READ_REBATE_DETAIL
  If COMPANYCOPY And Not(SAMECOMPANY)
    PROBFLAG = 0
    Gosub VALIDATE_PROD
    If PROBFLAG Goto UP_DETAIL_LOOP
  End If 
  KEY0$ = " ",KEY0$ \ KEY0$ = WORKEY$
  Search #13,2,1;KEY0$,R13,E
  If E
    E = 2
    Search #13,1,0;KEY0$,R13,E \ If E Gosub ERR_SEARCH
    Search #13,4,1;KEY0$,R13,E \ If E Gosub ERR_SEARCH
    KEY1$ = KEY0$[7,18] + KEY0$[1,6]
    Search #13,4,2;KEY1$,R13,E \ If E Gosub ERR_SEARCH
    KEY1$ = " ",KEY1$
    KEY1$[1,6] = RB1[1] Using "######"
    KEY1$[7] = KEY0$
    Search #13,4,3;KEY1$,R13,E \ If E Gosub ERR_SEARCH
  End If 
  CH_RBDETL = 13;REC_RBDETL = R13
  Gosub WRITE_REBATE_DETAIL
  BEFORE = 0
  ALLPROD = 0;COMDY = 0;PFLAG = 1
  If WORKEY$[7,7] = "#"
    ALLPROD = 1 \ PFLAG = 0
  End If 
  If WORKEY$[7,7] = "*"
    COMDY = 1 \ PFLAG = 0
  End If 
  ARBTYPE = 0;ARBFACTOR = 0;ARBCOST = 0
  ASLMTYPE = 0;ASLMFACTOR = 0;ASLMCOST = 0
  APUM$ = " ",APUM$ \ ACUM$ = " ",ACUM$
  Gosub PREP_DETAIL_LINE
  Gosub PRINT_DETAIL_LINE
  Goto UP_DETAIL_LOOP
UP_CUSTCONT: Rem go through the customer contract file
  If COMPANYCOPY And Not(SAMECOMPANY) Goto UP_REBATE_NOTES
  WORKEY$ = " ",WORKEY$
  WORKEY$ = WORKCONT Using "######"
UP_CUSTCONT_LOOP: Rem go through customer contract
  Search #4,3,1;WORKEY$,R4,E
  If E Goto UP_REBATE_NOTES
  WORK = WORKEY$[1,6]
  If WORKCONT <> WORK Goto UP_REBATE_NOTES
  CH_RBCUST = 4;REC_RBCUST = R4
  Gosub READ_REBATE_CUSTOMER
  KEY0$ = " ",KEY0$ \ KEY0$ = WORKEY$
  KEY0$[1,6] = LIVECONT Using "######"
  Search #14,2,1;KEY0$,R14,E
  If E
    CC1[0] = LIVECONT
    E = 2
    Search #14,1,0;KEY0$,R14,E \ If E Gosub ERR_SEARCH
    KEY1$ = KEY0$[7,12] + KEY0$[1,6]
    Search #14,4,2;KEY1$,R14,E \ If E Gosub ERR_SEARCH
    Search #14,4,1;KEY0$,R14,E \ If E Gosub ERR_SEARCH
  End If 
  CH_RBCUST = 14;REC_RBCUST = R14
  Gosub WRITE_REBATE_CUSTOMER
  Goto UP_CUSTCONT_LOOP
UP_REBATE_NOTES: Rem let's got through notes
  WORKEY$ = " ",WORKEY$
  WORKEY$ = WORKCONT Using "######"
UP_NOTE_LOOP: Rem go through rebate notest
  Search #5,3,1;WORKEY$,R5,E
  If E Goto UP_VINFO
  WORK = WORKEY$[1,6]
  If WORKCONT <> WORK Goto UP_VINFO
  CH_RBNOTE = 5;REC_RBNOTE = R5
  Gosub READ_REBATE_NOTES
  KEY0$ = " ",KEY0$
  KEY0$ = WORKEY$
  KEY0$[1,6] = LIVECONT Using "######"
  Search #15,2,1;KEY0$,R15,E
  If E
    E = 2
    Search #15,1,0;KEY0$,R15,E \ If E Gosub ERR_SEARCH
    Search #15,4,1;KEY0$,R15,E \ If E Gosub ERR_SEARCH
  End If 
  CH_RBNOTE = 15;REC_RBNOTE = R15
  Gosub WRITE_REBATE_NOTES
  Goto UP_NOTE_LOOP
UP_VINFO: Rem
  If VINFO ! they are using the vinfo file
    WORKEY$ = " ",WORKEY$
    WORKEY$ = WORKCONT Using "######"
UP_VINFO_LOOP: Rem go through rebate notest
    Search #6,3,1;WORKEY$,R6,E
    If E Goto COPY_LOOP
    WORK = WORKEY$[1,6]
    If WORKCONT <> WORK Goto COPY_LOOP
    CH_RBVINFO = 6;REC_RBVINFO = R6
    Gosub READ_REBATE_VINFO
    KEY0$ = WORKEY$
    KEY0$[1,6] = LIVECONT Using "######"
    Search #16,2,1;KEY0$,R16,E
    If E !             not there add to file
      E = 2
      Search #16,1,0;KEY0$,R16,E \ If E Gosub ERR_SEARCH
      Search #16,4,1;KEY0$,R16,E \ If E Gosub ERR_SEARCH
    End If 
    CH_RBVINFO = 16;REC_RBVINFO = R16
    Gosub WRITE_REBATE_VINFO
    Goto UP_VINFO_LOOP
  End If 
End If 
Goto COPY_LOOP
DISPLAY_SCREEN: Rem DISPLAY INPUT SCREEN
!Print @0,0;'CS ED';"-ut980c-";@30,0;"REBATE COPY UTILITY";
!Print @1,2;'CL BD';"Copy rebate header, lines, notes and customers from stage area to live";'ED';
!Print @1,3;'CL BD';"Be very careful as to what you are doing!!!"
!Print @35,5;'BR';"STARTING";@55,5;"ENDING";'ER';'BD';
!Print @1,7;"    VENDOR CODE";
!Print @1,8;"    CONTRACT NUMBER";
If COMPANYCOPY
  !Print @1,9;"    COMPANY NUMBER";
End If 
!Print @0,7;" 1> ";@0,8;" 2> ";
If COMPANYCOPY
  !Print @0,9;" 3> ";
End If 
START_VENDOR = 0
END_VENDOR = 999999
START_CONTRACT = 0
END_CONTRACT = 999999
!Print Using "######";@35,7;START_VENDOR;
!Print Using "######";@35,8;START_CONTRACT;@55,8;END_CONTRACT;
If COMPANYCOPY
  !Print Using "##";@35,9;WORKCOID;
End If 
Return 
VEND_RANGE: Rem
GET_START_VEND: Rem ! AND ONLY VENDOR
!J0$ = "3000063507-"
!J5$ = "Enter the vendor code maximum 999999"
!J1 = START_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_START_VEND
call dxget("SVEND",tmp$)
if tmp$="" Let tmp$=Str$(Start_Vendor)
j1=tmp$
START_VENDOR = J1
END_VENDOR = START_VENDOR
Return 
CONTR_RANGE: Rem ------------------------------------
CONTR_RANGE_START: Rem
!J0$ = "3000063508=/"
!J5$ = "Enter the starting contract number maximum 999999 or /= for lookup"
!J1 = START_CONTRACT
!Gosub ISINPUT
!If J4$[1,1] = "/" Or J4$[1,1] = "="
!  CHKCONTRACT = 0
!  Gosub L_5200
!  If CHKCONTRACT
!    J1 = CHKCONTRACT
!    Print @35,8;J$[1,6]
!  Else 
!    Goto CONTR_RANGE_START
!  End If 
!End If 
Call dxget("SCONTR",tmp$)
if tmp$="" let tmp$=Str$(Start_Contract)
J1=tmp$
START_CONTRACT = J1
CONTR_RANGE_END: Rem
!J0$ = "3000065508=/"
!J5$ = "Enter the ending contract number maximum 999999 or /= for lookup"
!J1 = END_CONTRACT
!Gosub ISINPUT
!If J4$[1,1] = "/" Or J4$[1,1] = "="
!  CHKCONTACT = 0
!  Gosub L_5200
!  If CHKCONTRACT
!    J1 = CHKCONTRACT
!    Print @55,8;J$[1,6]
!  Else 
!    Goto CONTR_RANGE_END
!  End If 
!End If 
call dxget("ECONTR",tmp$)
if tmp$="" Let tmp$=Str$(End_ContracT)
j1=tmp$
END_CONTRACT = J1
If END_CONTRACT < START_CONTRACT
  !Gosub BAD_RANGE
  message$="INVALID CONTRACT RANGE"
  Goto Err_Msg ! CONTR_RANGE
End If 
Return 
COMPANY_COPY: Rem are we doing company copy
If Not(COMPANYCOPY) Return 
!J0$ = "3000023509"
!J5$ = "Enter the company number to copy to maximum 99"
!J1 = WORKCOID
!Gosub ISINPUT
Call dxget("COIDTO",tmp$)
if tmp$="" let tmp$=Str$(WORKCOID)
j1=tmp$
WORKCOID = J1
SAMECOMPANY = 1
If WORKCOID <> DFLTDCOID ! if not the same company
  J$ = "cntrl/cntrl" + Str$(WORKCOID)
  Call FindF(J$,FOUND)
  If FOUND
    SAMECOMPANY = 0
  Else 
    Message$ = WORKCOID Using "Control file not found for Company ##"
    !Call "errmsg",MSGTXT$
    Goto Err_Msg ! COMPANY_COPY
  End If 
End If 
Return 
BAD_RANGE: Rem
MSGTXT$ = "Ending value must be Greater than or Equal to starting value!"
!Call "errmsg",MSGTXT$
Return 
READ_REBATE_HEADER: Rem
Mat Read #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Read #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Read #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
READ_REBATE_DETAIL: Rem
Mat Read #CH_RBDETL,REC_RBDETL,0;RB$
Mat Read #CH_RBDETL,REC_RBDETL,12;RB1
Mat Read #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Read #CH_RBDETL,REC_RBDETL,40;RB
Mat Read #CH_RBDETL,REC_RBDETL,46;RB3
Mat Read #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Read #CH_RBDETL,REC_RBDETL,118;RBWH;
Read #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Read #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Read #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
READ_REBATE_CUSTOMER: Rem
Mat Read #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Read #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
READ_REBATE_NOTES: Rem
Mat Read #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Read #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
READ_REBATE_VINFO: Rem
Mat Read #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Read #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Read #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
READ_PRODUCT_RECORD: Rem
Mat Read #CH_PROD,REC_PROD;A$
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
WRITE_REBATE_HEADER: Rem
Mat Write #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Write #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Write #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
WRITE_REBATE_DETAIL: Rem
Mat Write #CH_RBDETL,REC_RBDETL,0;RB$
Mat Write #CH_RBDETL,REC_RBDETL,12;RB1
Mat Write #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Write #CH_RBDETL,REC_RBDETL,40;RB
Mat Write #CH_RBDETL,REC_RBDETL,46;RB3
Mat Write #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Write #CH_RBDETL,REC_RBDETL,118;RBWH;
Write #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Write #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Write #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
WRITE_REBATE_CUSTOMER: Rem
Mat Write #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Write #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
WRITE_REBATE_NOTES: Rem
Mat Write #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Write #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
WRITE_REBATE_VINFO: Rem
Mat Write #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Write #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Write #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
VALIDATE_PROD: Rem validate product uom, commodtiy
If WORKEY$[7,7] = "#" Return 
If WORKEY$[7,7] = "*" ! is for entire commodity then validate
  TMPKEY$ = " ",TMPKEY$ \ TMPKEY$ = WORKEY$[8,11]
  Search #18,2,1;TMPKEY$,R18,E
  If E
    Gosub PRINT_HEADER
    Print #0;DASH$
    Print #0; Tab 5;" ******** CONTRACT ";K$;"   COMMODITY ";WORKEY$[8,11];
    Print #0; Using "##";" ON COMPANY ";DFLTCOID;" NOT IN COMPANY ";WORKCOID;
    Print #0;" NO UPDATE PERFORMED ********"
    Print #0;DASH$
    V9[1] = V9[1] + 3
    PROBFLAG = 1
  End If 
  Return 
End If 
TMPKEY$ = " ",TMPKEY$ \ TMPKEY$ = WORKEY$[7,18]
Search #17,2,1;TMPKEY$,R17,E
If E
  Gosub PRINT_HEADER
  Print #0;DASH$
  Print #0; Tab 5;" ******** CONTRACT ";K$;"   PRODUCT ";WORKEY$[7,18];
  Print #0; Using "##";" ON COMPANY ";DFLTCOID;" NOT IN COMPANY ";WORKCOID;
  Print #0;" NO UPDATE PERFORMED ********"
  Print #0;DASH$
  V9[1] = V9[1] + 3
  PROBFLAG = 1
  Return 
End If 
CHKUOM[0] = 0;CHKUOM[1] = 0;CHKUOM[2] = 0
CH_PROD = 17;REC_PROD = R17
Gosub READ_PRODUCT_RECORD
For LOOP_ = 0 To 7
  If PFU1[LOOP_] = RBUM[0] Let CHKUOM[0] = 1
  If PFU1[LOOP_] = RBUM[1] Let CHKUOM[1] = 1
  If PFU1[LOOP_] = RB[2] Let CHKUOM[2] = 1
Next LOOP_
If CHKUOM[0] + CHKUOM[1] + CHKUOM[2] <> 3
  Gosub PRINT_HEADER
  Print #0;DASH$
  Print #0; Tab 5;" ******** CONTRACT ";K$;"  PRODUCT ";WORKEY$[7,18];
  Print #0; Using "##";" PROBLEM WITH UNITS OF MEASURE IN COMPANY ";WORKCOID;
  Print #0;" NO UPDATE PERFORMED ********"
  Print #0;DASH$
  V9[1] = V9[1] + 3
  PROBFLAG = 1
  Return 
End If 
Search #7,2,1;TMPKEY$,R7,E \ If E Gosub ERR_SEARCH
CH_PROD = 7;REC_PROD = R7
Gosub READ_PRODUCT_RECORD
If RB[0] = 3 ! flat cost
  CNVTU[0] = 0 \ CNVTU[1] = RBUM[0] \ CNVTU[2] = 2
  CNVTA = RB5[0] \ Gosub L_20000 \ RB5[0] = AMOUNT
End If 
If RBL1[0] = 3 ! flat cost
  CNVTU[0] = 0 \ CNVTU[1] = RBUM[1] \ CNVTU[2] = 2
  CNVTA = RB5[1] \ Gosub L_20000 \ RB5[1] = AMOUNT
End If 
CH_PROD = 17;REC_PROD = R17
Gosub READ_PRODUCT_RECORD
If RB[0] = 3 ! flat cost
  CNVTU[0] = RBUM[0] \ CNVTU[1] = 0 \ CNVTU[2] = 2
  CNVTA = RB5[0] \ Gosub L_20000 \ RB5[0] = AMOUNT
End If 
If RBL1[0] = 3 ! flat cost
  CNVTU[0] = RBUM[1] \ CNVTU[1] = 0 \ CNVTU[2] = 2
  CNVTA = RB5[1] \ Gosub L_20000 \ RB5[1] = AMOUNT
End If 
Return 
PREP_DETAIL_LINE: Rem
If Not(PFLAG) Goto MOVE_DETAIL_IN
If BEFORE And ORIGNOTFOUND Return 
If BEFORE
  CH_PROD = 7
Else 
  CH_PROD = 17
End If 
TMPKEY$ = " ",TMPKEY$ \ TMPKEY$ = RB$[1,12]
Search #CH_PROD,2,1;TMPKEY$,REC_PROD,E \ If E Gosub ERR_SEARCH
Gosub READ_PRODUCT_RECORD
If RB[0] = 3 ! flat need to contonvert
  CNVTU[0] = 0 \ CNVTU[1] = RBUM[0] \ CNVTU[2] = 2
  CNVTA = RB5[0] \ Gosub L_20000 \ RBCOST = AMOUNT
End If 
If RBL1[0] = 3 ! flat cost
  CNVTU[0] = 0 \ CNVTU[1] = RBUM[1] \ CNVTU[2] = 2
  CNVTA = RB5[1] \ Gosub L_20000 \ RBSLCOST = AMOUNT
End If 
UNT = RBUM[0] \ Gosub GET_UM \ PUM$ = X$[1,4]
UNT = RBUM[1] \ Gosub GET_UM \ CUM$ = X$[1,4]
MOVE_DETAIL_IN: Rem
If BEFORE
  BRBTYPE = RB[0]
  BRBFACTOR = RB5[0]
  If BRBTYPE = 3 Let BRBFACTOR = RBCOST
  BPUM$ = PUM$[1,4]
  BCUM$ = CUM$[1,4]
  BSLMTYPE = RBL1[0]
  BSLMFACTOR = RB5[1]
  If BSLMTYPE = 3 Let BSLMCOST = RBSLCOST
  BSLMBASE = RBL1[1]
Else 
  ARBTYPE = RB[0]
  ARBFACTOR = RB5[0]
  If ARBTYPE = 3 Let ARBFACTOR = RBCOST
  APUM$ = PUM$[1,4]
  ACUM$ = CUM$[1,4]
  ASLMTYPE = RBL1[0]
  ASLMFACTOR = RB5[1]
  If ASLMTYPE = 3 Let ASLMCOST = RBSLCOST
  ASLMBASE = RBL1[1]
End If 
Return 
GET_UM: Rem "============================= convert from rec # um to 4 char. text
If FLG Gosub LOAD_DFLT \ Return 
If UNT = -1 Let X$ = "CWT " \ Goto END_GET_UM
If UNT = -2 Let X$ = "LOT " \ Goto END_GET_UM
If UNT = -3 Let X$ = "LB  " \ Goto END_GET_UM
If UNT Read #79,UNT;CCD$; Else Let CCD$ = " ",CCD$;CCD$[11,14] = "N/A "
X$ = CCD$[11,14]
END_GET_UM: Rem
Return 
LOAD_DFLT: Rem LOAD DEFAULT
X$ = "ERR!"
If UNT = 8 Let X$ = "STK "
If UNT = 9 Let X$ = "SELL"
If UNT = 10 Let X$ = "PURH"
If UNT = 11 Let X$ = "COST"
If UNT = 12 Let X$ = "PRCE"
END_LOAD_DFLT: Rem
Return 
GET_VENDOR_NAME: Rem
VENDFOUND = 0
VENDNAME$ = "VENDOR NOT FOUND"
TMPKEY$ = " ",TMPKEY$
TMPKEY$ = RCN3[3] Using "######"
Search #CH_VEND,2,1;TMPKEY$,R21,E
If Not(E)
  VENDNAME$ = " ",VENDNAME$
  Mat Read #21,R21;VENDNAME$
  VENDFOUND = 1
End If 
Return 
LOG_IN_TRACK: Rem keep a log of wha't been copied
TMPKEY$ = " ",TMPKEY$
TMPKEY$[1,6] = WORKCONT Using "######"
TMPKEY$[7,8] = DFLTCOID Using "##"
TMPKEY$[9,14] = LIVECONT Using "######"
TMPKEY$[15] = WORKCOID Using "##"
Search #20,2,1;TMPKEY$,R20,E
If E
  E = 2
  Search #20,1,0;TMPKEY$,R20,E \ If E Gosub ERR_SEARCH
  Search #20,4,1;TMPKEY$,R20,E \ If E Gosub ERR_SEARCH
End If 
RBTRACK[0] = WORKCONT
RBTRACK[1] = LIVECONT
RBTRACK[2] = DFLTCOID
RBTRACK[3] = WORKCOID
RBTRACK[4] = D6
Mat Write #20,R20;RBTRACK
Return 
FILE_OPENS: Rem
If Err 0 Rem
For I = 2 To 89
  Close #I
Next I
if err 0 goto NOSTGFle
F$ = "3/rcontracth" + Str$(WORKCOID)
Open #12,F$
F$ = "3/rebatedtl" + Str$(WORKCOID)
Open #13,F$
F$ = "2/custcont" + Str$(WORKCOID)
Open #14,F$
F$ = "2/rebtnotes" + Str$(WORKCOID)
Open #15,F$
F$ = "3/stgrbheader" + Str$(DFLTCOID)
Ropen #2,F$
F$ = "3/stgrbdetail" + Str$(DFLTCOID)
Ropen #3,F$
F$ = "2/stgrbcustcnt" + Str$(DFLTCOID)
Ropen #4,F$
F$ = "2/stgrbnotes" + Str$(DFLTCOID)
Ropen #5,F$
If VINFO ! vendor info file used
  F$ = "3/rbtvinfo" + Str$(WORKCOID)
  Open #16,F$
  F$ = "3/stgrbvinfo" + Str$(DFLTCOID)
  Ropen #6,F$
End If 
F$ = "3/stgrbtrack" + Str$(DFLTCOID)
Open #20,F$
Read #1,88,2400;F$;
Ropen #21,F$
Read #1,88,1728;F$;
Ropen #79,F$
Read #1,88,1792;F$;
Ropen #7,F$
J$ = "cntrl/cntrl" + Str$(WORKCOID)
Ropen #81,J$
Read #81,88,2400;F$
Ropen #23,F$
Read #81,88,1792;F$
Ropen #17,F$
Read #81,88,2288;F$
Ropen #18,F$
if err 0 gosub err_trap
Return 
CONVERT_RCN3DATES: Rem "Conver to Julian
X2 = RCN3[1] \ Gosub YMD2JUL \ X2 = 0
JDATE[1] = X2
X2 = RCN3[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[2] = X2
Return 
PRINT_HEADER: Rem "============================================== heading
If V9[1] < V9[3] Return 
!If V9[0] If PRINT_TO_SCREEN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(PRINT_TO_SCREEN) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 4
If Not(PRINT_TO_SCREEN) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);CNAME$; Tab 120;"PAGE ";V9[0]
Print #0;" - 980c - ";T9$;
Print #0; Tab 46;"S T A G E D   R E B A T E    C O N T R A C T    L I S T"
If COMPANYCOPY Print #0; Using "##"; Tab 40;"COPY   COMPANY ";DFLTCOID;"  TO   COMPANY ";WORKCOID;"   ";
If CREATECONTRACT Print #0; Tab 40;"CREATING NEW CONTRACTS ";
If Not(CREATECONTRACT) Print #0; Tab 40;"UPDATING ORIGINAL CONTRACTS";
Print #0;""
Print #0;""
END_PRINT_HEADER: Rem
Return 
PRINT_CONTRACT_HEADER: Rem
CH_VEND = 21
Gosub GET_VENDOR_NAME
Print #0; Using "######";"VENDOR   ";RCN3[3];"  ";VENDNAME$
Print #0;""
If ORIGCONTFOUND
  Print #0; Using "######  ";"CONTRACT BEFORE";WORKCONT;BCDESC$;
End If 
If CREATECONTRACT Or FAKECREATE
  Print #0; Using "######  "; Tab 78;"CONTRACT CREATED";LIVECONT;
Else 
  Print #0; Using "######  "; Tab 78;"CONTRACT UPDATED";LIVECONT;
End If 
Print #0;ACDESC$;
Print #0;""
If ORIGCONTFOUND
  X2 = BSDATE \ Gosub NUM2DATE \ Print #0;"START ";X$;
  X$ = " ",X$ \ X$ = "NONE"
  X2 = BEDATE \ If X2 Gosub NUM2DATE
  Print #0;"   CANCEL ";X$;
End If 
X2 = ASDATE \ Gosub NUM2DATE \ Print #0; Tab 78;"START ";X$;
X$ = " ",X$ \ X$ = "NONE"
X2 = AEDATE \ If X2 Gosub NUM2DATE
Print #0;"   CANCEL ";X$
Print #0;DASH$[1,55];" BEFORE ";DASH$[1,32];" AFTER ";DASH$[1,31]
Print #0;""
V9[1] = V9[1] + 6
Return 
PRINT_DETAIL_LINE: Rem "========================= detail line
If PFLAG
  Print #0;RB$[1,12];
  Print #0; Tab 15;A$[9,36];
End If 
If ALLPROD Print #0;"ALL PRODUCTS";
If COMDY Print #0;"*COMDY ";RB$[1,4];" ";
If BRBTYPE = 1 Print #0; Using "######.###%"; Tab 50;BRBFACTOR;
If BRBTYPE = 2 Print #0; Using "-$$##.####"; Tab 50;BRBFACTOR;
If BRBTYPE = 3 Print #0; Using PMASK$; Tab 50;BRBFACTOR;
Print #0; Tab 62;BPUM$;
If BRBTYPE = 1 Or BRBTYPE = 2 Print #0; Tab 66;"DISCOUNT";
If BRBTYPE = 3 Print #0; Tab 66;"FLAT PRICE ";
If ARBTYPE = 1 Print #0; Using "######.###%"; Tab 90;ARBFACTOR;
If ARBTYPE = 2 Print #0; Using "-$$##.####"; Tab 90;ARBFACTOR;
If ARBTYPE = 3 Print #0; Using PMASK$; Tab 90;ARBFACTOR;
Print #0; Tab 102;APUM$;
If ARBTYPE = 1 Or ARBTYPE = 2 Print #0; Tab 106;"DISCOUNT";
If ARBTYPE = 3 Print #0; Tab 106;"FLAT PRICE ";
Print #0;""
Print #0; Tab 30;"SALESMAN COST";
If BSLMTYPE <> 4 If BSLMCOST Print #0; Using PMASK$; Tab 50;BSLMCOST;
If BSLMTYPE = 1 Print #0; Using "######.###%"; Tab 50;BSLMFACTOR;
If BSLMTYPE = 2 Print #0; Using "-$$$##.####"; Tab 50;BSLMFACTOR;
If BSLMTYPE <> 4 Print #0; Tab 62;BCUM$;
If BSLMTYPE = 3 Print #0; Tab 66;"FLAT COST";
If BSLMTYPE = 4 Print #0; Tab 66;"USE STANDARD";
If BSLMTYPE = 1 Or BSLMTYPE = 2
  If BSLMFACTOR >= 0 Print #0; Tab 66;"MARK UP ";
  If BSLMFACTOR < 0 Print #0; Tab 66;"DISCOUNT ";
  If BSLMBASE = 1 Print #0;"OF BASE COST";
  If BSLMBASE = 2 Print #0;"OF LOADED COST";
  If BSLMBASE = 3 Print #0;"OF LAST COST";
  If BSLMBASE = 4 Print #0;"OF REBATED COST";
  If BSLMBASE = 5 Print #0;"OF REDI COST";
End If 
If ASLMTYPE <> 4 If ASLMCOST Print #0; Using PMASK$; Tab 90;ASLMCOST;
If ASLMTYPE = 1 Print #0; Using "######.###%"; Tab 90;ASLMFACTOR;
If ASLMTYPE = 2 Print #0; Using "-$$$##.####"; Tab 90;ASLMFACTOR;
If ASLMTYPE <> 4 Print #0; Tab 102;ACUM$;
If ASLMTYPE = 3 Print #0; Tab 106;"FLAT COST";
If ASLMTYPE = 4 Print #0; Tab 106;"USE STANDARD";
If ASLMTYPE = 1 Or ASLMTYPE = 2
  If ASLMFACTOR >= 0 Print #0; Tab 106;"MARK UP ";
  If ASLMFACTOR < 0 Print #0; Tab 106;"DISCOUNT ";
  If ASLMBASE = 1 Print #0;"OF BASE COST";
  If ASLMBASE = 2 Print #0;"OF LOADED COST";
  If ASLMBASE = 3 Print #0;"OF LAST COST";
  If ASLMBASE = 4 Print #0;"OF REBATED COST";
  If ASLMBASE = 5 Print #0;"OF REDI COST";
End If 
Print #0;""
Print #0;""
V9[1] = V9[1] + 3
RBCOST = 0;RBSLCOST = 0
Return 

NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
IF X2<=0 LET E=1 \ RETURN
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
!Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If X2 = 0 Let X$ = "NONE    "
Return 
L_3500: Rem FIND VENDOR
K7$ = " ",K7$
K7$[1,6] = RCN3[3] Using "######"
Search #21,2,1;K7$,R21,E
If E > 1 Gosub ERR_SEARCH
V$ = " ",V$;V$[1,30] = "VENDOR NOT ON FILE !!! "
If Not(E)
  Mat Read #21,R21,0;V$;
End If 
Return 
L_5200: Rem LIST CONTRACTS
return ! not on web

Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: !X1 = Len(J7$)
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
NOSTGFle: ! files missing - can not use
message$="REBATE STAGING NOT AVAILABLE"
! FALL ON THROUGH
ERR_MSG: ! something is awry
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
Call programdump("tmp/980cse!","")
goto Err_Msg:
OUTEND: Rem "Done
!Close 
!Chain "mx000"
END
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!!Rem {end rtn.error.s}
include "src/callmainerrnet.inc"
End