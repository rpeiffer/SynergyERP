! SFLISTS.LIB
! 5/23/06 jjg
! list subroutines to support sf+
! loadsave -w -n 100,10 -o prog/dxport/sflists.lib src/sflists.src
!
Declare Intrinsic Function findchannel,trim$,dateusing$,callstat$,replace$
Declare Intrinsic Sub programdump,dxopen,dxget,dxset,dxclose,dxsave
!
! *declare external libs & subs & functions
Declare External Function XUnit$
External Lib "ubsprconv.dl4"   
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr
External Lib "sffiles.lib"
Declare external function getordertype$,getmisccharge$
!Include "src/ubsmiscchrg.inc"  
Include "src/ubsmiscchrg.inc"   
!Include "src/ubsshiplist.inc"    
Include "src/ubsshiplist.inc"     
!Include "src/ubsprod.inc"
Include "src/ubsprod.inc"  
!Include "src/ubsccodes.inc"
Include "src/ubsccodes.inc"  
!Include "src/ubsdept.inc"  
Include "src/ubsdept.inc"  
!
!
external sub deptlist(e$,chan)
! ----------------------------------------------------------------------
! creates drop down list of dept #'s
! pass channel # of dept file
!
 try
  dim k$[20],depts$[200,3]
  Dim dept. As Dept
  !test hardcode
  ! depts$[0]="151"\depts$[1]="152"\depts$[2]="153"
  !call dxset("dlist",depts$[])
  !exit sub
  cnt=0
  k=0
  do
   If cnt>200 or cnt>chf(chan)-1 Exit Do
   Read Record #chan,cnt;dept.;
   If Trim$(dept.deptd$) <> ""
      depts$[k]=Str$(cnt)
	  let k=k+1
   End If
   cnt=cnt+1
  loop
  
  call dxset("dlist",depts$[])
 else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end sub !deptlist
!
external sub whlist(e$,chan)
! ----------------------------------------------------------------------
! creates drop down list of dept #'s
! pass channel # of dept file
!
 try
  dim k$[20],whlist$[99,2],whname$[30]
  
  cnt=0
  k=0
  do
   If cnt>100 or cnt>chf(chan)-1 Exit Do
   Mat Read #chan,cnt,4;whname$;
   If Trim$(whname$) <> ""
	  whlist$[k]=Str$(cnt+1)
	  let k=k+1
   End If
   cnt=cnt+1
  loop
  
  call dxset("whlist",whlist$[])
 else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end sub !whlist
!
!
external sub ordertypelist(e$,chan)
! ----------------------------------------------------------------------
! creates drop down list of order types 
! pass channel # of control file
! slsperson only access to order type 1 and 3
 try
  dim onotype$[38,3],otype$[38,16],dummyot$[16],sls$[3]
  Call DXGet("S_USER.Userdef1",SLS$)
!  k=0
!  For i=1 To 38
!	 dummyot$=getordertype$(chan,i)
!	 If Trim$(dummyot$) <> ""
!	 	onotype$[k]=str$(i)                   
!	 	otype$[k]=getordertype$(chan,i)  
!		k = k + 1
!	End If
!  Next i
  onotype$[0]=str$(1)  ! WAREHOUSE
  otype$[0]=getordertype$(chan,1)
  onotype$[1]=str$(2)  ! DIRECT
  otype$[1]=getordertype$(chan,2)
  onotype$[2]=str$(3)  ! INDIRECT
  otype$[2]=getordertype$(chan,3)


  if val(sls$)=999
	onotype$[1]=str$(2)
	otype$[1]=getordertype$(chan,2)
	onotype$[2]=str$(3)
	otype$[2]=getordertype$(chan,3)
 	onotype$[3]=str$(4)                      
        otype$[3]=getordertype$(chan,4)     
	onotype$[4]=str$(9)
	otype$[4]=getordertype$(chan,9)   
	onotype$[5]=str$(15)                      
	otype$[5]=getordertype$(chan,15) 
  endif
  if rutherford
	onotype$[2] = str$(9) ! parts     
	otype$[2] = getordertype$(chan,9) 
	onotype$[3] = str$(37) !          
	otype$[3] = getordertype$(chan,37)
	onotype$[4] = str$(38) !          
	otype$[4] = getordertype$(chan,38)
  end if
  call dxset("otypenolist",onotype$[])
  call dxset("otypelist",otype$[])
 else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end sub !ordertypelist
!
!
external sub routinglist(e$,chan)
! ----------------------------------------------------------------------
! creates drop down list of routings
! pass channel # of control file
 try
  dim onotype$[106,3],otype$[106,12],dummyot$[12]
  k=0
  For i=1 To 106
  	let j1=i;x=12;x1=139;x2=j1*x-x
	if x2<0 let x2=0
	read #chan,130,x2;dummyot$;
	 !dummyot$=getordertype$(chan,i)
	  If Trim$(dummyot$) <> ""
	 	onotype$[k]=str$(i)  
		otype$[k]=dummyot$ 
	 	k = k + 1
	End If
  Next i   

  call dxset("routingnolist",onotype$[])
  call dxset("routinglist",otype$[])
 else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end sub !routinglist
!
!
external sub termslist(e$,intCompany)
! ----------------------------------------------------------------------
! creates drop down list of terms
! pass channel # of control file  **** need the company id
Declare External Function OpenFile
Declare Intrinsic Function FindChannel,Trim$
 try

  dim onotype$[99,3],otype$[99,16],dummyot$[16]
 dim 2%,xart
 dim 3%,recnum
  
  xart=OpenFile(-9981, intCompany)
  let recnum=chf(xart)-1
  if recnum>99 let recnum=99
  k=0
   For i=1 To recnum
  	  read #xart,i,0;dummyot$;
	 If Trim$(dummyot$) <> ""
		onotype$[k]=str$(i)                   
		otype$[k]=dummyot$ 
		k = k + 1
	 End If
  Next i   
  call dxset("termsnolist",onotype$[])
  call dxset("termslist",otype$[])
  close #xart
 else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end sub !termslist
!
!
external sub shiptolist(e$,chan,cust$,shipcust,intsls,custsls,arrSales[],...)
! ----------------------------------------------------------------------
! creates drop down list of ship to's
! pass channel # of ship to file,customer #
! optionally pass alphalist flag, which indicates to do an alpha search
! on key 2 and do a longer list and keyvar/keynext search
!
declare external function CheckSlsm
try
 try enter alphalist else alphalist=0
 dim sh. as shiplist
 dim k$[30],shiptonos$[500,6],shiptos$[500,120],shiptocusts$[500,6]
 dim keyvar$[30],keynext$[30],hold$[30],tmp$[30]
 totcnt=500 !max # in drop list is 100, then we do MAX flag
 !!!totcnt=1 !to test max
 !k$=Val(cust$) Using "######"
 if shipcust<=0 let shipcust=val(cust$)
 let k$=shipcust using "######"
 k=1
 if alphalist
  k$=shipcust using "######" ! cust$
  totcnt=15
  k=2
  call dxget("keyvar",keyvar$) !if alphasearch
  keyvar$=ucase$(keyvar$)
  call dxset("keyvar",keyvar$)
  ! if null, show all 1/4/07 if keyvar$<>"" let k$=keyvar$ else exit sub
  k$=keyvar$
  call dxget("keynext",keynext$)
 end if
 hold$=k$
 if keynext$<>"" let k$=keynext$ !next page continuation of search
  do
   search #chan,3,k;k$,r,e
   if hold$<>"" if k$[1,len(hold$)]<>hold$ let e=2
   if e exit do
   Read Record #chan,r;sh.;
   if intsls<>999
	if sh.slslsm 
	! if sh.slslsm<>intsls goto do_loop
	If Not(CheckSlsm(arrSales[],intSls,sh.slslsm)) goto do_loop
   else
	! if custsls<>intsls goto do_loop
	If Not(CheckSlsm(arrSales[],intSls,custsls)) goto do_loop
	endif
   endif

   if k=2 and int(sh.c1)<>val(cust$) and int(sh.c1)<>shipcust !a different customers ship to
   else
    tmp$=sh.c1 USING "######.######" 
    shiptocusts$[cnt]=tmp$[1,6]     ! shiplist cust
    shiptonos$[cnt]=tmp$[8,13]     !"shiplist number
    shiptos$[cnt]=rtrim$(sh.a$[1,30])," ",rtrim$(sh.a$[31,60])," ",rtrim$(sh.a$[61,90])     !shiplist name,addr1,addr2
    shiptos$[cnt]=shiptos$[cnt]," ",rtrim$(sh.a$[91,105]) !city
    shiptos$[cnt]=replace$(shiptos$[cnt],"'","")
    cnt=cnt+1
    If cnt = totcnt exit do  !max 100 in drop list
    !exit do  !to test only one 
   end if
  do_loop: loop
  if e=0 call dxset("keynext",k$)
  tmp$=str$(cnt)  \  if cnt=totcnt let tmp$="MAX"
  call dxset("shiptocnt",tmp$)
  let tmp$=str$(shipcust)
  call dxset("shiptocustlist",shiptocusts$[])
  call dxset("shiptonolist",shiptonos$[])
  call dxset("shiptolist",shiptos$[])
  ! call dxset("shiptonoone",shiptonos$[0])	! problem when there is only 1 shipto and they still want to ship
  ! call dxset("shiptoone",shiptos$[0])		! to the main customer
 else
 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end sub !shiptolist
!
!
external sub orderchargelist(e$,chan)
! --------------------------------------------------------------
! creates drop down list of addl order charge types
! misc charges file is the CONTIGUOUS data file - up to 998 records
 try                                
  dim mc. as miscchrg
  dim mcode$[998,4],mdesc$[998,20],dummymc$[20]
  cnt=0
  k=0
  do
   if cnt>998 exit do  
   dummymc$=getmisccharge$(chan,cnt,mc.)          
   If Trim$(dummymc$) <> ""                
      mcode$[k]=str$(cnt)
      mdesc$[k]=getmisccharge$(chan,cnt,mc.)
      k=k+1
   End If
   cnt=cnt+1                    
  loop                          
  call dxset("misccodes",mcode$[])           
  call dxset("miscdesc",mdesc$[])               
 else                                            
    Call suberr(e$,Spc(8),Spc(10),Msc$(2))          
 end try                                         
end sub !orderchargelist
!
!
external function getumhtml$(e$,product$,type$,chan,chan2)
! --------------------------------------------------------------
! creates drop down list of product's allowed UMs
! must be preformated in html to merge to orderguide,cart
! pass product and type=P price, Q quantity
! u/m is upto 4 characters 
 try
  dim ums$[300],tmp$[10],um$[4],pum$[4],sum$[4],k$[12],hold$[12]
  dim pr. as prod
  dim cc. as ccodes
  dim 1%,baseunit,stockunit,sellunit,purchunit,costunit,priceunit 
  dim 1%,um1,um2,um3,um4,um5,um6,um7     
  dim 4%,r

  ums$='FX'
  !temp hardcode some
!  ums$=ums$,"<option>LB</option>"
!  ums$=ums$,"<option>PC</option>"
  k$ = product$                                        
  hold$ = k$                                                            
  Search #chan,2,1;k$,r,e                                               
  If Trim$(k$) <> Trim$(hold$) Let e = 2                                  
  If e = 0                                                              
	 Read Record #chan,r;pr.; 
	 baseunit = PR.PFU1[0]         
	 um1 = PR.PFU1[1]         
	 um2 = PR.PFU1[2]        
	 um3 = PR.PFU1[3]         
	 um4 = PR.PFU1[4]       
	 um5 = PR.PFU1[5]        
	 um6 = PR.PFU1[6]  
	 um7 = PR.PFU1[7]  
	 stockunit = PR.PFU1[8]        
	 sellunit = PR.PFU1[9]         
	 purchunit = PR.PFU1[10]       
	 costunit = PR.PFU1[11]        
	 priceunit = PR.PFU1[12]    
	 ums$=ums$,"<option>",XUnit$(baseunit,chan2),"</option>"  
	 If um1 ums$=ums$,"<option>",Xunit$(um1,chan2),"</option>"    
	 If um2 ums$=ums$,"<option>",Xunit$(um2,chan2),"</option>" 
	 If um3 ums$=ums$,"<option>",Xunit$(um3,chan2),"</option>"   
	 If um4 ums$=ums$,"<option>",Xunit$(um4,chan2),"</option>"   
	 If um5 ums$=ums$,"<option>",Xunit$(um5,chan2),"</option>"   
	 If um6 ums$=ums$,"<option>",Xunit$(um6,chan2),"</option>"   
	 If um7 ums$=ums$,"<option>",Xunit$(um7,chan2),"</option>" 
	 IF type$="P" ! price type
		If priceunit<0 
			ums$=ums$,"<option>",Xunit$(priceunit,chan2),"</option>"
		endif
		if costunit<0 
			if costunit<>priceunit
				ums$=ums$,"<option>",Xunit$(costunit,chan2),"</option>"
			endif
		endif
	endif
  Else                                                                  
	 r = e * -1 
	 ums$=ums$,"<option>EA</option>" !only default if not on file
  End If         
  if type$="P" let tmp$="pumhtml" else let tmp$="qumhtml"
  call dxset(tmp$,ums$)
 else
	 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 end try
end function ums$ !getumhtml
