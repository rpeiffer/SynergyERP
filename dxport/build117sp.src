! build117sp - build last price from special price
!
! loadsave -w -n 100,10 -o prog/dxport/build117sp.dl4 src/build117sp.src
!
Rem build117LP  CAPTURES LAST PRICE HISTORY AND WRITES TO LASTPRICEx
Rem USED TO BE MX201H
Rem CUSTOM FOR CENTRAL SANITARY
Rem BEDIT Version: 2.3 OBJECT CODE     Created: AUG 29, 2012  13:31:35
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/css/build117sp.src (univ2) [jcs] {31602}
Rem  Copyright (c) 2012 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! Rec[0] - Product rec
! Rec[1] - ProdWhse Rec
! Rec[2] - Customer #
! LINEREC = Special/Contract price Record
! chan	- array of channel numbers 
!	0 - ch_cust
!	1 - ch_specprice
!	2 - ch_lastpr
!	3 = ch_prod
!	4 - ch_prodwhse
! parm	- parameters:
!	0 - credit
!	1 - linerec
!
! returns last price record in rec_lastpr

!include copyright, common libs, common intrinsics
include "src/copyright.inc"
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,StringSearch,Time,VerifyDate
! Option Default Dialect IRIS1

Enter REC[],REC_LASTPR,LINEREC,CHAN[],Intco,e$,rstr$
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
dim 1%,lpcurrid,rolcurrid,3%,lpcurrfact,rolcurrfact
Dim 1%,CH_ROH,CH_ROL,CH_LASTPR,CH_PROD,CH_SPRODDESC
Dim 1%,X1,L3[3],S2[1],LPC3[4],UN[2],AI,LPEUN[2],EUN[2],HOLD_LPEUN2
Dim 1%,LPWH,NEW,LPCPT,PPPUSERID,2%,LPCSDT,LPDATE,LPDEPT,PPPCID[1],LPSL
Dim 1%,SPC3[2],SPWH,SPBRK[1],SPCUM[1],PFU1[20]
Dim 1%,SPC6[4],APTYPE[9],ABTYPE[9],AMTYPE[9],3%,APFACT[9],AMQTY[9]
Dim 2%,N0,L4[3],X2,L9[1],LPDF,L1,L6[5],LPC1[2],LPR1[3],HA3[2]
Dim 2%,LCO[1],LPC5[3],LPPCDATE,SYSDATE,JSYSDATE,DT3[1],JODATE,JDATE[1]
Dim 2%,SPC1[5],SPCOM,SPMIN,B[24],H0[12],H5[16],prvod[2]
Dim 3%,L5[3],LPC4[3],L7[9],S3[17],LPC2[2],OLM[6],LPR[4],PERM[1],LPCURR[1]
Dim 3%,LPUNIT[1],NETCOST,ROL0,LPFPERM[1],SRN[5],R[99],LPDIR5,SLPDIR5
Dim 3%,LPUNF[6],UNF[6],V2,V2TMP,VEND,LPLPERM,HLDLPERM,PRVOQ[3]
Dim A1$[50],S3$[20],LP$[12],P9$[50],COMKEY$[50],P60$[50],P61$[256]
Dim F$[16],L0$[60],L1$[20],LP2$[84],K13$[60],LPMT$[2],MT$[2],K14$[20]
Dim X$[20],SYSDATE$[26],K5$[60],CSLK$[14],KEYD5$[40]
Dim SP$[12],SPUDA$[30],CUSTOM_CUSTOMER$[30],A$[156],B4key$[8]
Dim PPLOG$[60],DLog$[60],3%,PASSINFO[20],PERMLOG[35]
Dim 3%,SPC4[6],SPC5[4],SPCN,A1[7],A[33],PFU2[6],C4[4]
Dim 3%,PRPARC[3],W3[24],WHMISC[6],PF_LOAD2,INVNUM
Dim msg$[500],buttonlist$[5,50],nextlist$[5,100],blank$[100]
Blank$=" ",Blank$
CH_CUST = CHAN[0]
CH_SPR = CHAN[1]
CH_LASTPR = CHAN[2]
CH_PROD = CHAN[3]
CH_PRODWHSE = CHAN[4]
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
CREDIT = 0
TRACKPERM = 0
F$ = "2/permpricelog" + Str$(COID)
Call FindF(F$,TRACKPERM)
Call Time(SYSDATE$)
SYSDATE$[13] = "" \ Call VerifyDate(SYSDATE$,X$,E)
If Not(E) Let SYSDATE = X$
SYSDATE$ = SYSDATE Using "&&&&&&"
Call DateToJulian(1,SYSDATE$,X$,E) \ If E Let X$ = "00000"
JSYSDATE = X$
X2 = SYSDATE \ Gosub YMD2JUL \ X2 = 0
JODATE = X2;H0[9] = SYSDATE
H5[0] = 1
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
! let p61$[136,136]="N" ! set multi-currency to N
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
CUSTOM_CUSTOMER$=Trim$(UCASE$(CUSTOM_CUSTOMER$))
L1 = LINEREC
Search #CH_LASTPR,1,5;KEYD5$,LPDIR5,E
If Not(E) Let LPDIR5 = 1
If E Let LPDIR5 = 0
If P61$[64,64] = "Y" ! "ship list last price
  CH_SLLP = 89
  SHLLP = 0
  If (SRN[3] = 1 Or SRN[3] = 2) And SRN[2] = H0[4] Let SHLLP = 1
  LPSL = SRN[1]
  If SHLLP ! "okay - still using Ship List last price
    If Err 0 Rem
    Close #89
    If Err 0 Gosub ERR_TRAP
    Read #1,88,2112;K5$[1,16];
    Ropen #89,K5$
    K5$ = H0[4] Using "######";K5$[7,7] = "."
    K5$[8] = LPSL Using "&&&&&&"
    Search #89,2,1;K5$,R[36],E \ If E > 1 Gosub ERR_SEARCH
    If E Let SHLLP = 0
    Close #89
    If SHLLP Let CSLK$ = K5$
  End If 
  If SHLLP ! "need the Ship List Last Price file opened for use
    F$ = "3/SLLSTPRC" + Str$(COID)
    Call FindF(F$,E)
    If Not(E)
      SHLLP = 0
    Else 
      Open #CH_SLLP,F$
	  Search #CH_SLLP,1,5;KEYD5$,SLPDIR5,E
	  If Not(E) Let SLPDIR5 = 1
	  If E Let SLPDIR5 = 0
    End If 
  End If ! "of open (or not)
End If 
MAIN: Rem "========================== write to LASTPRICEx
PASSNO = 0
SHL_PASS: Rem "if a second pass for ShipList Last Price file is needed
NEW = 0
Gosub GET_DATA
If S2[0] = 3 Goto DONE
If L7[2] < 0 Goto DONE
If P61$[25,25] = "N" And Int(S3[16]) = 1 Goto DONE
If P61$[25,25] = "P" And Fra(S3[16]) Goto DONE
Rem set up so it thinks doing a perm price rol
EUN[2] = 0
Gosub INIT_VARS
Gosub CALCNETCOST
Gosub BUILD_KEY
If SHLLP And PASSNO = 2 ! "ship list last price
  Search #CH_SLLP,2,1;A1$,V2,E
  If Not(E) Goto NEWONLY
  If E > 1 Gosub ERR_SEARCH
Else ! "customer last price
  Search #CH_LASTPR,2,1;A1$,V2,E
  If Not(E) Goto NEWONLY
  If E > 1 Gosub ERR_SEARCH
End If 
If CREDIT Or L7[2] < 0 Goto DONE
If SHLLP And PASSNO = 2 ! "ship list last price
  E = 2 \ Search #CH_SLLP,1,0;A1$,V2,E \ If E Gosub ERR_SEARCH
Else ! "customer last price
  E = 2 \ Search #CH_LASTPR,1,0;A1$,V2,E \ If E Gosub ERR_SEARCH
End If 
NEW = 1
Goto ADDTO_LASTPRICE
UPDATE_LASTPRICE: Rem READ RECORD
If SHLLP And PASSNO = 2 ! "ship list last price
  Mat Read #CH_SLLP,V2,0;LP$
  Mat Read #CH_SLLP,V2,16;LPC1
  Mat Read #CH_SLLP,V2,28;LPC2
  Mat Read #CH_SLLP,V2,46;LPC3
  Mat Read #CH_SLLP,V2,56;LP2$
  Mat Read #CH_SLLP,V2,140;LPC4
  Mat Read #CH_SLLP,V2,164;LPMT$
  Read #CH_SLLP,V2,166;AI
  Mat Read #CH_SLLP,V2,274;LPWH
  Mat Read #CH_SLLP,V2,168;LPR
  Mat Read #CH_SLLP,V2,198;LPR1
  Mat Read #CH_SLLP,V2,214;LPEUN
  Mat Read #CH_SLLP,V2,220;LPUNF
  Mat Read #CH_SLLP,V2,262;PERM
  Mat Read #CH_SLLP,V2,276;LPC5
  Read #CH_SLLP,V2,292;LPPCDATE
  Read #CH_SLLP,V2,296;LPLPERM
  Mat Read #CH_SLLP,V2,302;LPCURR
  Read #CH_SLLP,V2,314;LPCPT
  Read #CH_SLLP,V2,316;LPCSDT
  Mat Read #CH_SLLP,V2,320;LPDEPT
  Mat Read #CH_SLLP,V2,324;LPFPERM
  Mat Read #CH_SLLP,V2,336;PPPUSERID
  Mat Read #CH_SLLP,V2,340;LPUNIT
  Mat Read #CH_SLLP,V2,352;PPPCID
  Mat Read #CH_SLLP,V2,424;PRVOD
  Mat Read #CH_SLLP,V2,436;PRVOQ
  Mat Read #CH_SLLP,V2,468;InvNum
  Mat Read #ch_sllp,v2,474;lpcurrid;
  Mat Read #ch_sllp,v2,476;lpcurrfact;
Else 
  Mat Read #CH_LASTPR,V2,0;LP$
  Mat Read #CH_LASTPR,V2,16;LPC1
  Mat Read #CH_LASTPR,V2,28;LPC2
  Mat Read #CH_LASTPR,V2,46;LPC3
  Mat Read #CH_LASTPR,V2,56;LP2$
  Mat Read #CH_LASTPR,V2,140;LPC4
  Mat Read #CH_LASTPR,V2,164;LPMT$
  Read #CH_LASTPR,V2,166;AI
  Mat Read #CH_LASTPR,V2,274;LPWH
  Mat Read #CH_LASTPR,V2,168;LPR
  Mat Read #CH_LASTPR,V2,198;LPR1
  Mat Read #CH_LASTPR,V2,214;LPEUN
  Mat Read #CH_LASTPR,V2,220;LPUNF
  Mat Read #CH_LASTPR,V2,262;PERM
  Mat Read #CH_LASTPR,V2,276;LPC5
  Read #CH_LASTPR,V2,292;LPPCDATE
  Read #CH_LASTPR,V2,296;LPLPERM
  Mat Read #CH_LASTPR,V2,302;LPCURR
  Read #CH_LASTPR,V2,314;LPCPT
  Read #CH_LASTPR,V2,316;LPCSDT
  Read #CH_LASTPR,V2,320;LPDEPT
  Mat Read #CH_LASTPR,V2,324;LPFPERM
  Mat Read #CH_LASTPR,V2,336;PPPUSERID
  Mat Read #CH_LASTPR,V2,340;LPUNIT
  Mat Read #CH_LASTPR,V2,352;PPPCID
  Mat Read #CH_LASTPR,V2,424;PRVOD
  Mat Read #CH_LASTPR,V2,436;PRVOQ
  Mat Read #CH_LASTPR,V2,468;InvNum
  Mat Read #ch_lastpr,v2,474;lpcurrid;
  Mat Read #ch_lastpr,v2,476;lpcurrfact;
End If 
REC_LASTPR = V2
If P60$[33,33] = "Y" And EUN[2] Let HLDLPERM = PERM[0]
HOLD_LPEUN2 = LPEUN[2]
If (CREDIT Or L7[2] < 0) Gosub L_6300 \ Goto DONE
If SHLLP And PASSNO = 2 ! "ship list last price
  K13$ = " ",K13$
  K13$ = A1$[1,16]
  K13$[17,22] = 999999 - LPR1[2] Using "######"
  K13$[23,46] = A1$[17,40]
  Search #CH_SLLP,5,3;K13$,V2,E \ If E Gosub ERR_SEARCH
Else 
  K13$ = " ",K13$
  K13$ = A1$[1,10]
  K13$[11,16] = 999999 - LPR1[2] Using "######"
  K13$[17,46] = A1$[11,40]
  K13$[47] = ""
  Search #CH_LASTPR,5,3;K13$,V2,E \ If E Gosub ERR_SEARCH
End If 
ADDTO_LASTPRICE: Rem
LPR1[2] = 999999
X2 = LPC1[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[0] = X2
If JODATE <= JDATE[0] And H0[7] <= LPC1[1] Goto L_2405
LPC1[1] = H0[7]
InvNum=0
! prev ord dates & qtys
let prvod[2]=prvod[1]
let prvod[1]=prvod[0]
let prvod[0]=lpr[2]
LPR[2] = LPC1[2]
LPC1[2] = H0[9]
let prvoq[3]=prvoq[2]
let prvoq[2]=prvoq[1]
let prvoq[1]=prvoq[0]
let prvoq[0]=lpc2[0]
LPC2[0] = L7[2]
L_2405: Rem
LPDF = 0
If LPC2[1] If LPC2[1] <> OLM[3] Let LPDF = 1
LPC2[1] = OLM[3]
LPC2[2] = netcost
LPUNIT[0] = L5[2]
LPUNIT[1] = l5[1]
LPC5[0] = LCO[0]
LPC5[1] = LCO[1]
If P60$[42,42] <> "N" And NEW Let LPC5[3] = -2
LPC3[0] = L9[0] \ If Not(LPC3[0]) Let LPC3[0] = -7
IF L9[0]>82 AND L9[0]<115 LET LPC3[0]=L9[0]-100           
IF NOT(LPC3[0]) LET LPC3[0]=-7 ! "price type "IF" temporary 
If P9$[44,44] = "Y" Let LPDEPT = L9[1] Else Let LPDEPT = 0
LPC3[2] = UN[0];LPC3[3] = UN[1];LPC3[4] = UN[2]
LP2$[1,20] = S3$[1,20];LP2$[21,50] = L0$[1,30]
LPC4 = L3[2] \ LPC4[1] = S3[14]
LPC4[2] = L3[3] \ LPC4[3] = L3[0]
LP2$[51,80] = L0$[31,60];LP2$[81,84] = L1$[17,20]
LPMT$ = MT$
AI = Int(S3[16])
LPR[0] = L7[9]
LPR[1] = OLM[2] \ Gosub L_6100
LPC1[1] = H0[7]
LPR1[2] = 999999
if p61$[136,136]="Y"
	let lpcurrid=rolcurrid
	let lpcurrfact=rolcurrfact
else
	let lpcurrid=0
	let lpcurrfact=0
endif
If SHLLP And PASSNO = 2 ! "ship list last price
  Mat Write #CH_SLLP,V2,0;LP$
  Mat Write #CH_SLLP,V2,12;LPSL
  Mat Write #CH_SLLP,V2,16;LPC1
  Mat Write #CH_SLLP,V2,28;LPC2
  Mat Write #CH_SLLP,V2,46;LPC3
  Mat Write #CH_SLLP,V2,56;LP2$
  Mat Write #CH_SLLP,V2,140;LPC4
  Mat Write #CH_SLLP,V2,164;LPMT$
  Write #CH_SLLP,V2,166;AI
  Mat Write #CH_SLLP,V2,168;LPR
  Mat Write #CH_SLLP,V2,198;LPR1
  Mat Write #CH_SLLP,V2,214;LPEUN
  Mat Write #CH_SLLP,V2,220;LPUNF
  Mat Write #CH_SLLP,V2,262;PERM
  Mat Write #CH_SLLP,V2,274;LPWH
  Mat Write #CH_SLLP,V2,276;LPC5
  Write #CH_SLLP,V2,292;LPPCDATE
  Write #CH_SLLP,V2,296;LPLPERM
  Mat Write #CH_SLLP,V2,302;LPCURR
  Write #CH_SLLP,V2,314;LPCPT
  Write #CH_SLLP,V2,316;LPCSDT
  Mat Write #CH_SLLP,V2,320;LPDEPT
  Mat Write #CH_SLLP,V2,324;LPFPERM
  Mat Write #CH_SLLP,V2,336;PPPUSERID
  Mat Write #CH_SLLP,V2,340;LPUNIT
  Mat Write #CH_SLLP,V2,352;PPPCID;
  Mat Write #CH_SLLP,V2,360;CSLK$;
  Mat Write #CH_SLLP,V2,424;PRVOD;
  Mat Write #CH_SLLP,V2,436;PRVOQ;
  Mat Write #CH_SLLP,V2,460;B4Key$;
  Mat Write #CH_SLLP,V2,468;InvNum;
  Mat Write #ch_sllp,v2,474;lpcurrid;
  Mat Write #ch_sllp,v2,476;lpcurrfact;
Else ! "customer last price
  Mat Write #CH_LASTPR,V2,0;LP$
  Mat Write #CH_LASTPR,V2,12;LPDF
  Mat Write #CH_LASTPR,V2,16;LPC1
  Mat Write #CH_LASTPR,V2,28;LPC2
  Mat Write #CH_LASTPR,V2,46;LPC3
  Mat Write #CH_LASTPR,V2,56;LP2$
  Mat Write #CH_LASTPR,V2,140;LPC4
  Mat Write #CH_LASTPR,V2,164;LPMT$
  Write #CH_LASTPR,V2,166;AI
  Mat Write #CH_LASTPR,V2,168;LPR
  Mat Write #CH_LASTPR,V2,198;LPR1
  Mat Write #CH_LASTPR,V2,214;LPEUN
  Mat Write #CH_LASTPR,V2,220;LPUNF
  Mat Write #CH_LASTPR,V2,262;PERM
  Mat Write #CH_LASTPR,V2,274;LPWH
  Mat Write #CH_LASTPR,V2,276;LPC5
  Write #CH_LASTPR,V2,292;LPPCDATE
  Write #CH_LASTPR,V2,296;LPLPERM
  Mat Write #CH_LASTPR,V2,302;LPCURR
  Write #CH_LASTPR,V2,314;LPCPT;
  Write #CH_LASTPR,V2,316;LPCSDT;
  Write #CH_LASTPR,V2,320;LPDEPT;
  Mat Write #CH_LASTPR,V2,324;LPFPERM
  Mat Write #CH_LASTPR,V2,336;PPPUSERID
  Mat Write #CH_LASTPR,V2,340;LPUNIT
  Mat Write #CH_LASTPR,V2,352;PPPCID;
  Mat Write #CH_LASTPR,V2,424;PRVOD;
  Mat Write #CH_LASTPR,V2,436;PRVOQ;
  Mat Write #CH_LASTPR,V2,460;B4Key$;
  Mat Write #CH_LASTPR,V2,468;InvNum;
  Mat Write #ch_lastpr,v2,474;lpcurrid;
  Mat Write #ch_lastpr,v2,476;lpcurrfact;
  If P60$[33,33] = "Y" If Not(LPC4[3]) !if perm price flag not non stock
    Gosub LOG_PERMPRICE_AFTER
  End If 
End If 
REC_LASTPR = V2
If NEW Gosub L_6400
If SHLLP And PASSNO = 2 ! "ship list last price
  K13$ = " ",K13$;K13$ = A1$[1,16];K13$[17,22] = 999999 - LPR1[2] Using "######"
  K13$[23,46] = A1$[17,40]
  Search #CH_SLLP,4,3;K13$,V2,E \ If E Gosub ERR_SEARCH
Else ! "customer last price
  K13$ = " ",K13$;K13$ = A1$[1,10];K13$[11,16] = 999999 - LPR1[2] Using "######"
  K13$[17,46] = A1$[11,40];K13$[47] = ""
  Search #CH_LASTPR,4,3;K13$,V2,E \ If E Gosub ERR_SEARCH
End If 
NEWONLY: Rem bypass add/update
REC_LASTPR = V2
Goto DONE
BUILD_KEY: Rem BUILD KEY FOR DIR 1
A1$ = " ",A1$;A1$[1,6] = H0[4] Using "######"
If P9$[44,44] = "Y" Let A1$[7,10] = L9[1] Using "####" Else Let A1$[7,10] = "   0"
A1$[11,22] = L1$[1,12]
A1$[23,30] = "        "
If L3[0] And S3$[1,3] <> "   " ! "non stock
  K14$ = " ",K14$;K14$[1,20] = S3$[1,20]
  Search #CH_PROD,2,1;K14$,V2,E \ If E > 2 Gosub ERR_SEARCH
  If E
    A1$[11,30] = S3$[1,20]
  End If 
End If 
A1$[31] = ""
If SHLLP And PASSNO = 2 ! "on the Ship List pass (Use A1$, then rebuild)
  K5$ = " ",K5$;K5$[1,6] = A1$[1,6]
  K5$[7,12] = LPSL Using "&&&&&&"
  If P9$[44,44] = "Y" Let K5$[13,16] = L9[1] Using "####" Else Let K5$[13,16] = "   0"
  K5$[17] = A1$[11]
  A1$ = " ",A1$;A1$ = K5$
End If 
Return 
INIT_VARS: Rem "=============================== clear variables
LP$ = " ",LP$;LP2$ = " ",LP2$;LPMT$ = " ",LPMT$
For X = 0 To 3 \ LPC4[X] = 0 \ Next X
For I = 0 To 6
  If I < 3 Let LPC1[I] = 0;LPC2[I] = 0;LPEUN[I] = 0;prvod[i]=0
  If I < 4 Let LPR1[I] = 0;prvoq[i]=0
  If I < 5 Let LPR[I] = 0;LPC3[I] = 0
  If I < 7 Let LPUNF[I] = 0
  If I < 2 Let LPFPERM[I] = 0;PPPCID[I] = 0;LPUNIT[I] = 0
Next I
AI = 0;LPDF = 0;PERM[0] = 0;PERM[1] = 0;LPC5[0] = 0;LPC5[1] = 0;LPC5[2] = 0;LPC5[3] = 0
LPC1[0] = H0[4] \ LP$[1,12] = L1$[1,12]
LPCURR[0] = 0;LPCURR[1] = 0;LPCPT = 0;LPCSDT = 0;PPPUSERID = 0
LPUNIT[0] = 0;LPUNIT[1] = 0;InvNum=0
B4key$=Blank$
Return 
L_6100: Rem more variable assignments
LPR1[0] = L6[4];LPR1[1] = L6[2]
LPR1[2] = 999999
If L3[0] And HA3[1] Let LPR1[3] = HA3[1]
For I = 0 To 5
  If I < 2 Let LPEUN[I] = EUN[I]
  LPUNF[I] = UNF[I]
Next I
LPWH = L4[3]
If P60$[33,33] = "Y" And EUN[2] ! "new permanent price
  PERM[0] = 0;PERM[1] = 0;LPEUN[2] = 0
  If L9[0] = -7 Let LPEUN[2] = L9[0];PERM[0] = LPC2[1]
  If L9[0] = 10 Let LPEUN[2] = L9[0];PERM[0] = L6[0]
  If L9[0] = 14 And LPC2[1] Let LPEUN[2] = L9[0];PERM[0] = FNR(((LPC2[1] - LPC2[2]) / LPC2[1]) * 100)
  If L9[0] = 9 Let LPEUN[2] = L9[0];PERM[0] = Int(Fra(L7[9]) * 100)
  If L9[0] <= -1 And L9[0] >= -6 Let LPEUN[2] = L9[0];PERM[0] = Abs(LPEUN[2])
  If L9[0] <= -8 And L9[0] >= -17 Let LPEUN[2] = L9[0];PERM[0] = Abs(LPEUN[2] + 7)
  If HOLD_LPEUN2 = 14 And LPC2[1]
    LPEUN[2] = HOLD_LPEUN2
    PERM[0] = FNR(((LPC2[1] - LPC2[2]) / LPC2[1]) * 100)
  Else 
    If CUSTOM_CUSTOMER$ = "CHUDY" And LPC2[1] ! chudy - ALL ARE GTM%
      LPEUN[2] = 14
      PERM[0] = FNR(((LPC2[1] - LPC2[2]) / LPC2[1]) * 100)
    End If 
  End If 
  If Not(LPEUN[2]) Or Not(PERM[0]) Let PERM[0] = 0;LPEUN[2] = 0
  If PERM[0] And PERM[0] <> HLDLPERM ! "PERM PRICE CHANGED (ALL TYPES)
    If Not(CREDIT) And L7[2] > 0 Let LPLPERM = HLDLPERM;LPPCDATE = JSYSDATE
  End If 
  If LPEUN[2] Let PERM[1] = L5[1];LPC5[2] = LCO[0]
End If 
Return 
L_6300: Rem ADJUST SALES FOR CREDIT
If P60$[32,32] <> "Y" Goto L_6340
If SHLLP And PASSNO = 2 ! "ship list last price
  Mat Write #CH_SLLP,V2,168;LPR;
Else ! "customer last price
  Mat Write #CH_LASTPR,V2,168;LPR;
End If 
L_6340: Return 
L_6400: Rem BUILD DIRS 1,2,4 FOR NEW RECORD
If SHLLP And PASSNO = 2 ! "ship list last price
  A1$[37,40] = LP2$[81,84]
  Search #CH_SLLP,4,1;A1$,V2,E \ If E Gosub ERR_SEARCH
  K13$ = " ",K13$;K13$ = A1$[1,16] + A1$[37,40] + A1$[17,36]
  Search #CH_SLLP,4,2;K13$,V2,E \ If E Gosub ERR_SEARCH
  COMKEY$ = " ",COMKEY$;COMKEY$[1,6] = A1$[1,6]
  COMKEY$[7,30] = A1$[13,36]
  COMKEY$[31,36] = A1$[7,12]
  COMKEY$[37,40] = A1$[37,40]
  Rem "so ends up same as cust lpr dir 1!
  K13$ = COMKEY$
  Search #CH_SLLP,4,4;K13$,V2,E \ If E Gosub ERR_SEARCH
  If SLPDIR5 ! if the 5th dir exsists
    COMKEY$ = " ",COMKEY$;COMKEY$[1,20] = A1$[17,36]
    COMKEY$[21,36] = A1$[1,16];COMKEY$[37] = A1$[37]
    Search #CH_SLLP,4,5;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  End If 
Else ! "customer Last Price
  A1$[31,36] = LPC4[1] Using "######"
  A1$[37,40] = LP2$[81,84]
  Search #CH_LASTPR,4,1;A1$,V2,E \ If E Gosub ERR_SEARCH
  K13$ = " ",K13$;K13$ = A1$[1,10] + A1$[37,40] + A1$[11,36]
  Search #CH_LASTPR,4,2;K13$,V2,E \ If E Gosub ERR_SEARCH
  K13$ = " ",K13$;K13$[1,10] = A1$[31,40]
  K13$[11,30] = A1$[11,30];K13$[31] = A1$[1,10]
  Search #CH_LASTPR,4,4;K13$,V2,E \ If E Gosub ERR_SEARCH
  If LPDIR5 ! New for rev9, directory 5!
    KEYD5$ = " ",KEYD5$
    KEYD5$[1,30] = K13$[11,40]
    KEYD5$[31,40] = K13$[1,10]
    Search #CH_LASTPR,4,5;KEYD5$,V2,E \ If E Gosub ERR_SEARCH
  End If 
End If 
Return 
GET_DATA: Rem "===================================== sp line
Mat Read #CH_SPR,L1,0;SP$
Mat Read #CH_SPR,L1,12;SPC1
Mat Read #CH_SPR,L1,36;SPCUM
Mat Read #CH_SPR,L1,40;SPC3
Mat Read #CH_SPR,L1,46;SPC4
Mat Read #CH_SPR,L1,88;SPUDA$
Mat Read #CH_SPR,L1,118;SPWH
Read #CH_SPR,L1,120;SPCN
Mat Read #CH_SPR,L1,126;SPBRK
Read #CH_SPR,L1,130;SPMIN
Read #CH_SPR,L1,134;SPCOM
Mat Read #CH_SPR,L1,138;SPC5;
Mat Read #CH_SPR,L1,168;SPC6;
Mat Read #CH_SPR,L1,178;APTYPE;
Mat Read #CH_SPR,L1,196;ABTYPE;
Mat Read #CH_SPR,L1,214;AMTYPE;
Mat Read #CH_SPR,L1,232;APFACT;
Mat Read #CH_SPR,L1,286;AMQTY;
H0[4] = REC[2]
L4[0] = REC[0]
Mat Read #CH_PROD,L4[0],0;A$;
Mat Read #CH_PROD,L4[0],156;B;
Mat Read #CH_PROD,L4[0],256;A;
Mat Read #CH_PROD,L4[0],460;A1;
Mat Read #CH_PROD,L4[0],512;PFU1;
Mat Read #CH_PROD,L4[0],554;PFU2;
Mat Read #CH_PROD,L4,596;PRPARC;
Mat Read #CH_PROD,L4,894;C4;
Mat Read #CH_PROD,L4,938;PF_LOAD2;
If P9$[32,32] = "Y" ! if =N - NO REC PASSED!!
  Mat Read #CH_PRODWHSE,REC[1],78;W3;
  Mat Read #CH_PRODWHSE,REC[1],800;WHMISC;
End If 
L1$ = " ",L1$;MT$ = " ",MT$;L0$ = " ",L0$
L1$[1,12] = A$[140,151];L1$[17,20] = A$[152,155]
L5[1] = PRPARC[2] \ If P9$[32,32] = "Y" And WHMISC[2] > 0 Let L5[1] = WHMISC[2]
L5[2] = A[20] \ If P9$[32,32] = "Y" And W3[19] > 0 Let L5[2] = W3[19]
If SPC3 = 3 Let L5[2] = SPC5[0]
UN[1] = SPCUM[0]
UN[2] = SPCUM[1]
UN[0] = PFU1[9]
If SPC3 = 1 And SPC3[1] = 4
  OLM[3] = (L5[2] * ((100 + SPC5[0]) / 100))
Else 
  OLM[3] = L5[2]
End If 
L4[3] = SPWH;H0[7] = 0
If L4[3] <= 0 Let L4[3] = 1
LCO[0] = 3;LCO[1] = 0
L9[0] = 2;L9[1] = 0
S3$[1,20] = A$[93,112]
L0$[1,30] = A$[9,38];L0$[31,60] = A$[63,92]
L3[3] = B[11];S3[14] = B[24]
MT$[1,1] = A$[156,156]
EUN[0] = PFU1[0];EUN[1] = PFU1[10]
L6[2] = B[23];L6[4] = A[6]
UNF[4] = A1[3];UNF[5] = A[5]
For X1 = 0 To 3
  If X1 < 3 Let UNIT = UN[X1] Else Let UNIT = PFU1[10]
  If X1 And UNIT <= 0 Let UNF[X1] = 0 \ Goto L_30165
  For X2 = 0 To 7
    If PFU1[X2] = UNIT Goto L_30140
  Next X2
  X2 = 0
L_30140: If X2
    UNF[X1] = PFU2[X2 - 1]
  Else 
    UNF[X1] = 1
  End If 
L_30165: Next X1
Return 
L_8000: Rem COMMODITY CHANGE
If CREDIT Or L7[2] < 0 Return 
If SHLLP And PASSNO = 2 ! "ship List Last Price
  Mat Read #CH_SLLP,V2,56;LP2$
  Mat Read #CH_SLLP,V2,140;LPC4
  Mat Read #CH_SLLP,V2,198;LPR1
  V2TMP = V2
  COMKEY$ = " ",COMKEY$
  COMKEY$[1,40] = A1$[1,40]
  Search #CH_SLLP,5,1;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,16] = A1$[1,16];COMKEY$[17,20] = A1$[37,40]
  COMKEY$[21,40] = A1$[17,36]
  Search #CH_SLLP,5,2;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,16] = A1$[1,16];COMKEY$[17,22] = 999999 - LPR1[2] Using "######"
  COMKEY$[23,46] = A1$[17,40]
  Search #CH_SLLP,5,3;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$ = " ",COMKEY$;COMKEY$[1,6] = A1$[1,6]
  COMKEY$[7,30] = A1$[13,36]
  COMKEY$[31,36] = A1$[7,12]
  COMKEY$[37,40] = A1$[37,40]
  Rem "so ends up same as cust lpr dir 1!
  Search #CH_SLLP,5,4;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  If SLPDIR5 !if the 5th dir exsists
    COMKEY$ = " ",COMKEY$;COMKEY$[1,20] = A1$[17,36]
    COMKEY$[21,36] = A1$[1,16];COMKEY$[37] = A1$[37]
    Search #CH_SLLP,5,5;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  End If 
  LP2$[81,84] = L1$[17,20];LPC4[1] = S3[14]
  Mat Write #CH_SLLP,V2,56;LP2$
  Mat Write #CH_SLLP,V2,140;LPC4
Else ! "customer Last Price
  Mat Read #CH_LASTPR,V2,56;LP2$
  Mat Read #CH_LASTPR,V2,140;LPC4
  Mat Read #CH_LASTPR,V2,198;LPR1
  V2TMP = V2
  COMKEY$ = " ",COMKEY$
  COMKEY$[1,40] = A1$[1,40]
  Search #CH_LASTPR,5,1;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,10] = A1$[1,10];COMKEY$[11,14] = A1$[37,40]
  COMKEY$[15,40] = A1$[11,36]
  Search #CH_LASTPR,5,2;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,10] = A1$[1,10];COMKEY$[11,16] = 999999 - LPR1[2] Using "######"
  COMKEY$[17,46] = A1$[11,40]
  Search #CH_LASTPR,5,3;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$ = " ",COMKEY$;COMKEY$[1,10] = A1$[31,40]
  COMKEY$[11,30] = A1$[11,30];COMKEY$[31] = A1$[1,10]
  Search #CH_LASTPR,5,4;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  If LPDIR5 ! New for rev9, directory 5!
    KEYD5$ = " ",KEYD5$
    KEYD5$[1,30] = COMKEY$[11,40]
    KEYD5$[31,40] = COMKEY$[1,10]
    Search #CH_LASTPR,5,5;KEYD5$,V2,E \ If E Gosub ERR_SEARCH
  End If 
  LP2$[81,84] = L1$[17,20];LPC4[1] = S3[14]
  Mat Write #CH_LASTPR,V2,56;LP2$
  Mat Write #CH_LASTPR,V2,140;LPC4
End If 
COMKEY$ = " ",COMKEY$
If SHLLP And PASSNO = 2 ! "ship list last price
  A1$[37,40] = L1$[17,20]
  COMKEY$[1,40] = A1$[1,40]
  Search #CH_SLLP,4,1;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,16] = A1$[1,16];COMKEY$[17,20] = A1$[37,40]
  COMKEY$[21,40] = A1$[17,36]
  Search #CH_SLLP,4,2;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,16] = A1$[1,16];COMKEY$[17,22] = 999999 - LPR1[2] Using "######"
  COMKEY$[23,46] = A1$[17,40]
  Search #CH_SLLP,4,3;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$ = " ",COMKEY$;COMKEY$[1,6] = A1$[1,6]
  COMKEY$[7,30] = A1$[13,36]
  COMKEY$[31,36] = A1$[7,12]
  COMKEY$[37,40] = A1$[37,40]
  Rem "so ends up same as cust lpr dir 1!
  Search #CH_SLLP,4,4;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  If SLPDIR5 ! if the 5th dir exsists
    COMKEY$ = " ",COMKEY$;COMKEY$[1,20] = A1$[17,36]
    COMKEY$[21,36] = A1$[1,16];COMKEY$[37] = A1$[37]
    Search #CH_SLLP,4,5;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  End If 
Else ! "customer Last Price
  A1$[31,36] = LPC4[1] Using "######";A1$[37,40] = L1$[17,20];A1$[41] = ""
  COMKEY$[1,40] = A1$[1,40]
  Search #CH_LASTPR,4,1;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,10] = A1$[1,10];COMKEY$[11,14] = A1$[37,40]
  COMKEY$[15,40] = A1$[11,36]
  Search #CH_LASTPR,4,2;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$[1,10] = A1$[1,10];COMKEY$[11,16] = 999999 - LPR1[2] Using "######"
  COMKEY$[17,46] = A1$[11,40]
  Search #CH_LASTPR,4,3;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  COMKEY$ = " ",COMKEY$;COMKEY$[1,10] = A1$[31,40]
  COMKEY$[11,30] = A1$[11,30];COMKEY$[31] = A1$[1,10]
  Search #CH_LASTPR,4,4;COMKEY$,V2,E \ If E Or V2 <> V2TMP Gosub ERR_SEARCH
  If LPDIR5 ! New for rev9, directory 5!
    KEYD5$ = " ",KEYD5$
    KEYD5$[1,30] = COMKEY$[11,40]
    KEYD5$[31,40] = COMKEY$[1,10]
    Search #CH_LASTPR,4,5;KEYD5$,V2,E \ If E Gosub ERR_SEARCH
  End If 
End If 
Return 
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
CALCNETCOST: Rem add upcharges and cutting cost
Rem net cost includes cutting cost and upcharges
NETCOST = L5[1]
If S3[1] ! cutting cost
  If S3[11] = -3 And L7[2]
    NETCOST = NETCOST + (S3[1] / L7[2])
  Else 
    NETCOST = NETCOST + S3[1]
  End If 
End If 
If ROL0
  If ROL0 < 0
    NETCOST = NETCOST + Abs(ROL0)
  Else 
    NETCOST = NETCOST + (NETCOST * (ROL0 / 100))
  End If 
End If 
Return 
LOG_PERMPRICE_BEFORE: Rem load before data in and hold
If Not(TRACKPERM) Return 
For LOOP_ = 0 To 10 \ PASSINFO[LOOP_] = 0 \ Next LOOP_
PASSINFO[0] = CH_LASTPR
PASSINFO[1] = V2
PASSINFO[2] = 1
Call "logpermprice",intco,PPLOG$,PERMLOG[],PASSINFO[],dlog$
Return 
LOG_PERMPRICE_AFTER: Rem update after fields
If Not(TRACKPERM) Return 
PASSINFO[0] = CH_LASTPR
PASSINFO[1] = V2
PASSINFO[2] = 2
PASSINFO[3] = 11
PASSINFO[4] = H5[0]
PASSINFO[5] = H0[7]
If NEW
  PASSINFO[2] = 0
  PASSINFO[3] = 10
End If 
Call "logpermprice",intco,PPLOG$,PERMLOG[],PASSINFO[],dlog$
Return 
DONE: Rem NO MORE LINE ITEMS
If SHLLP And PASSNO = 0 Let PASSNO = 2 \ Goto SHL_PASS
If SHLLP Close #CH_SLLP
OUTEND: Rem
End 
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
Goto ERR_MAIN
ERR_MAIN: Rem
ERR_TRAP: Rem
If Err 0 Rem
e$ = msg$
include "src/callmainerrnet_call.inc"
END 
Rem