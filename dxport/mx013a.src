! >>> Program Mx013a
!******* NOT USED ANYMORE -- check disk space -- will use cron ******
! description Dayend- Part 1 
! loadsave -w -n 100,10 -o prog/dxport/mx013a.dl4 src/mx013a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 15, 2005  15:03:44
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx0/mx013a.src (univ2) [txc] {39609}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,StringSearch
Option Default Dialect IRIS1
Rem mx013a - check for low disk space
Rem rek 04/06/95 (new version -- percent full instead of blocks left)
Rem
Rem CCT #159182 9/2002 ADD TEXT FILE OF DIRECTORIES TO EXCLUDE DISK CK-WMB
Rem FILE IS cntrl/exclude013. any lines that start with # are ingored
Errstm Gosub ERR_TRAP
Dim CHECK$[50],DF$[25],NAME$[20],P9$[50],PLAT$[5],PLAT1$[20],ST$[80],P61$[256]
Dim NAMECK$[20],LINEREAD$[80],FILE$[50]
Dim 1%,CT[1],CTR[1],NUMPLATS,COID,COID$[2]
Dim 2%,PCT[1],EXCLUDECOUNT,EXCLUDEMATCH,EXCLUDEEXIST,SCRATCH
!Print 'CS';@0,1;"Checking for low disk space...";@0,5;
Mat Read #1,61,0;P61$;
NUMPLATS = 3
Read #1,60,22;PCT[0];
Rem CK & IF EXISTS, READ IN EXCLUDE FILE TO DETERMINE NUMBER OF LINES, ETC
EXCLUDECOUNT = 0
EXCLUDEEXIST = 0
FILE$ = "cntrl/exclude013"
Call FindF(FILE$,EXCLUDEEXIST)
If EXCLUDEEXIST = 0 Goto CHECKPLAT
Open #97,FILE$
EXCLUDELOOP: Read #97;LINEREAD$;
If LINEREAD$ = "" Goto CHECKPLAT
If LINEREAD$[1,1] = "#" Goto EXCLUDELOOP
EXCLUDECOUNT = EXCLUDECOUNT + 1
Goto EXCLUDELOOP
CHECKPLAT: Rem "check platform (SCO, DG or AIX)
PLAT1$ = "PLATFORM"
System 28,PLAT1$
PLAT$ = PLAT1$,"     "
CHECK$ = " ",CHECK$
CHECK$[1,5] = "SCO  "
CHECK$[6,10] = "DG   "
CHECK$[11,15] = "AIX  "
For CTR[0] = 1 To NUMPLATS
  CTR[1] = CTR[0] * 5 - 4
  If PLAT$[1,5] = CHECK$[CTR[1],CTR[1] + 4] Goto DO_DF
Next CTR[0]
Goto BADPLAT
DO_DF: Rem "send df output to file
!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
coid=intco
COID$ = COID Using "&&"
DF$ = " ",DF$
If PLAT$ = "SCO  " Let DF$ = "df -v"
If PLAT$ = "DG   " Let DF$ = "df -k"
If PLAT$ = "AIX  " Let DF$ = "df"
DF$ = DF$," >/tmp/dftmp" + COID$
!Print 'LK';
System DF$
!Print 'UK';
DF$ = "/tmp/dftmp" + COID$
Eopen #99,DF$
CHECKSIZE: Rem "get size of file systems
ST$ = " ",ST$
Read #99;ST$;
READLOOP: Rem "loop through all lines in temp file
Read #99;ST$;
If ST$ = "" Or ST$[1,3] = "   " Goto LOOPDONE
GETFSNAME: Rem "first, get file system name/on error get next record
CT[0] = 0;CT[1] = 0
If PLAT$ = "DG   " Or PLAT$ = "AIX  " ! "get fs name
  CT[1] = Len(ST$) * -1
  Call StringSearch(ST$,CT[1]," ",CT[0])
  If CT[0] <= 0 Or ST$[CT[0] + 1,CT[0] + 1] <> "/" Goto READLOOP
  NAME$ = " ",NAME$
  NAME$ = ST$[CT[0] + 1,Len(ST$)]
End If 
If PLAT$ = "SCO  " ! "get fs name
  Search ST$," ",CT[0]
  If Not(CT[0]) Goto READLOOP
  NAME$ = " ",NAME$
  NAME$ = ST$[1,CT[0] - 1]
End If 
EXCLUDEMATCH = 0
Gosub EXCLUDECHECK
If NAME$[1,6] = "/stand" Goto READLOOP
For CTR[0] = Len(NAME$) To 1 Step -1
  If NAME$[CTR[0],CTR[0]] = " " Let NAME$[CTR[0]] = ""
Next CTR[0]
GETFSPCT: Rem "now, get the percent used in file system/on error get next
CT[0] = 0;CT[1] = 0
Search ST$,"%",CT[1]
If Not(CT[1]) Goto READLOOP
CT[1] = CT[1] * -1
Call StringSearch(ST$,CT[1]," ",CT[0])
If CT[0] <= 0 Goto READLOOP
CT[1] = Abs(CT[1])
PCT[1] = ST$[CT[0] + 1,CT[1] - 1]
Print ST$;
If EXCLUDEMATCH = 1 Goto READLOOP
If NAME$ = "/" Let NAME$ = "root"
If PCT[1] >= PCT[0] ! "running low; tell them
  !Window Open @5,5; Size 52,9; Using "\170207\ LOW DISK WARNING "
  !Print 'CS';@0,1;
  !Print " A scan has found that you are running low"
  !Print " on disk space on file system ''";NAME$;"''."
  !Print 
  !Print " Please call Universal to check on this!"
  !Print " HIT <CR> TO CONTINUE ";
  !Input Len 16385;""ST$
  !Window Close 
  Gosub WRITEERRORLOG
End If 
Goto READLOOP
WRITEERRORLOG: Rem "log into errorlog
Errstm Rem
Dim PNAME$[50],PNAME1$[50],PNAME2$[50],2%
ENUM = -28
ELINE = Spc(16);CTERR = 0
PNAME$ = Msc$(4) \ Call String(1,PNAME$)
POS_ = 1;POS1 = 0
RESEARCH: Rem "parse out program name
Search PNAME$[POS_],"/",POS1
If POS1 Let POS_ = (POS_ + POS1) \ Goto RESEARCH
Close #98
Open #98,"errorlog"
Write #98,Chf(98);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR
Close #98
Errstm Gosub ERR_TRAP
Return 
EXCLUDECHECK: Rem CHECKS IF FILESYSTEM IS ON LIST TO NOT CHECK DISK SPACE
If EXCLUDECOUNT = 0 Return 
Rewind #97
EXCLUDELOOP1: Read #97;LINEREAD$;
If LINEREAD$ = "" Return 
If LINEREAD$[1,1] = "#" Goto EXCLUDELOOP1
NAMECK$ = " ",NAMECK$
SCRATCH = Len(LINEREAD$)
If SCRATCH > 20 Let SCRATCH = 20
Rem CHECK LAST 2 CHARACTERS FOR INVALID CHARACTERS(inc <CR>)-STRIP IF THERE
If LINEREAD$[SCRATCH,SCRATCH] < " " Let SCRATCH = SCRATCH - 1
If SCRATCH > 0 If LINEREAD$[SCRATCH,SCRATCH] < " " Let SCRATCH = SCRATCH - 1
NAMECK$ = LINEREAD$[1,SCRATCH]
If NAME$[1,20] <> NAMECK$[1,20] Goto EXCLUDELOOP1
EXCLUDEMATCH = 1
EXCLUDECOUNT = EXCLUDECOUNT - 1
Return 
LOOPDONE: Rem "get out of here
Close #99
If EXCLUDEEXIST <> 0 Close #97
Kill DF$
Signal 3,150
Goto OUTEND
BADPLAT: Rem "invalid platform / abort out
Print 'RB';@0,5;
Print "Bad platform or none setup -- cannot check disk space!";
Signal 3,30
Goto OUTEND
OUTEND: Rem "get outta here
Print 'CS';
Call "mx013dm"
If P61$[36,36] = "Y" Call "mx013did"
Chain "mx013b"
Stop "UH OH!"
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) = 99 ! "escape hit/return back
  Print 'RB ML';" ";'ML';
  Return -1
End If 
If Spc(8) = 123 ! "record lock
  Escdis 
  Window Open @0,0; Size 30,3; Using ""
  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
  Signal 3,50
  Window Close 
  Escclr 
  Return -1
End If 
Dim 2%
Window Off 
Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
If ENUM = 157 Let CTERR = Err(8)
Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
Goto ERR_MAIN
ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
Dim 2%
Window Off 
Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
Goto ERR_MAIN
ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) <> 99 Goto ERR_TRAP
If Err 0 Rem
CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
If Err 0 Gosub ERR_TRAP
Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
Input Len 16385;""ABREQ$
Call String(1,ABREQ$)
Print @0,Msc(34) - 1;'CL';
If Err 0 Gosub ERR_ESCAPE
If ABREQ$ <> "Y"
  Print 'ML';" ";'ML';
  Return -1
End If 
Goto OUTEND
ERR_MAIN: Rem "main error handling logic
If Err 0 Rem
Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
PNAME$ = Msc$(4)
Call String(1,PNAME$)
POS_ = 1;POS1 = 0
NAMEPARSE: Rem "get program name from path
Search PNAME$[POS_],"/",POS1
If POS1
  POS_ = (POS_ + POS1)
  Goto NAMEPARSE
End If 
Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
Print "TRACE: ";'CL';
STACKLOOP: Rem "print nesting information
Print Using "<#####> ";Spc(16);
If Spc(14) Goto STACKLOOP
Print 'CR';"************************************"
Close #0
Open #0,"errorlog"
Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
Close #0
Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
Call String(2,PNAME$)
System 28,PNAME1$
Call String(5,PNAME2$)
PNAME2$ = " ",PNAME2$
PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
Call InpBuf(PNAME2$)
Stop 
Rem {end rtn.error.s}
