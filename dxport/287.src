! >>> Program 287
!
! description Cancelled Quote Purge
! loadsave -w -n 100,10 -o prog/dxport/287.dl4 src/287.src
!
! 1.0 mm/dd/yyyy change??
!
Rem MX287  - CANCELLED QUOTE PURGE
Rem
Rem 04/07/1996 - PURGE DATE JULIAN
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  4, 2009  17:16:20
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx2/mx287.src (univ2) [txc] {30425}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc" ! dx
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
Declare Intrinsic Function findchannel
! Option Default Dialect IRIS1
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,getsession
Declare External Function OpenFile,PDate$,FormatDate2$
External Lib "libgeneral.lib" !general routines                   
Declare External Sub suberr,mainerr
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
If Err 0 Gosub ERR_TRAP
Dim F$[16],K1$[30],K2$[30],K3$[30],K4$[30],P9$[50],K10$[30]
Dim X$[20],JULDATE$[6],GOOD_DATE$[3],J$[50]
Dim 1%,L3[3],S2[1],TAGFLAG
Dim 2%,H0[12],L4[3],X1[5],CUSTSEC[1]
Dim 2%,H5[5],DT3[1]
Dim 3%,X2,DELCOUNTER,ENDDATE,ORDDATE,ENDQDATE,QUOTEDATE,JULDATE
Dim 3%,R[99]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[500],tmp1$[300],message$[255],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!X2 = Spc(5)
!F$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL# "
COID = IntCo ! Int((X2 - Int(X2 / 16384) * 16384) / 64)
For I = 2 To 8
  Read X2
  If Not(X2) Goto L_260
  Read #1,88,X2;F$;
  Open #I,F$
L_260: Next I
Data "1280","1344","1392","2656","1424","2672","1296"
Mat Read #1,19,50;P9$;
J$ = "3/qordroltag" + Str$(COID)
Call FindF(J$,TAGFLAG)
If TAGFLAG
  Open #10,J$
End If 
Returnstatus=0 ! on blocks - 0=ok, 1=ng
Message$="Purge Cancelled -"
! call dxsave(0,"tmp/287sv.txt!")
L_500: Rem ENTER DATE HERE
!Print @0,0;'CS';"QUOTE CANCELLED PURGE";@60,0;"MX287 - REV 2.7";
!Print @5,9;"ENTER CANCEL DATE TO CLEAR UP TO: YYMMDD";
Call dxget("CANDATE",F$)
If F$ = "" Goto OUTEND
If F$[1,1] = "E" Or F$[1,1] = "e" Goto OUTEND
! If Len(F$) <> 6 Goto L_500
X$=f$[5,6],F$[1,4] ! hopefully date = MMDDYY
F$=X$ ! covert to YYMMDD
GOOD_DATE$ = "YES"
Gosub DATECHECK
If GOOD_DATE$ = "NO "! Goto L_500
	Returnstatus=1
	message$=message$+"Invalid Last Date"
Else
	D6 = F$
	X2 = D6 \ Gosub YMD2JUL \ GOOD_DATE$ = "NO "
	If GOOD_DATE$ = "NO "! Goto L_500
		Returnstatus=1
		message$=message$+"Invalid Last Date"
	Endif
	ENDDATE = X2
	!K1$ = D6 Using "&&&&&&"
	!F$ = K1$[3,4],"/",K1$[5,6],"/",K1$[1,2]
	!Print Using "&&&&&&";@39,9;'CL';D6;
	!Print @5,10;"WILL CLEAR UP TO ";F$[1,8];'CE';
Endif ! good/bad date
PURGECANCEL: Rem
!Print @5,12;"PURGE QUOTES WITH CANCEL DATE ''NONE'' (Y/N): ";
Call dxget("NOCANDATE",F$)
If F$<>"Y" let F$="N" ! Goto PURGECANCEL
If F$[1,1] <> "Y" And F$[1,1] <> "N" ! Goto PURGECANCEL
	returnstatus=1
	message$=message$+" Y or N on Purge no cancel date"
Endif
If F$[1,1] = "Y" Let PURGENOCANCEL = 1 Else Let PURGENOCANCEL = 0
If Not(PURGENOCANCEL) Goto L_600
ENTQDATE: Rem
!Print @5,13;'CL'
!Print @5,14;'CL'
!Print @5,13;"Enter quote date to clear up to";
!Print @5,14;"for quotes with cancel date ''NONE'': YYMMDD";
Call dxget("QTEDATE",F$)
! If Len(F$) <> 6 Goto ENTQDATE
X$=F$[5,6],F$[1,4] ! hopefully date = MMDDYY
F$=X$ ! convert to YYMMDD
GOOD_DATE$ = "YES"
Gosub DATECHECK
If GOOD_DATE$ = "NO " !Goto ENTQDATE
	returnstatus=1
	message$=message$+" Invalid Quote Date"
Else
	D6 = F$
	X2 = D6 \ Gosub YMD2JUL \ GOOD_DATE$ = "NO " ! Goto ENTQDATE
	If GOOD_DATE$ = "NO " !Goto ENTQDATE
		returnstatus=1
		message$=message$+" Invalid Quote Date"
	Endif
	ENDQDATE = X2
	!K1$ = D6 Using "&&&&&&"
	!F$ = K1$[3,4],"/",K1$[5,6],"/",K1$[1,2]
	!Print Using "&&&&&&";@44,15;'CL';D6;
	!Print @5,15;"WILL CLEAR UP TO ";F$[1,8];'CE';
Endif ! good/bad quote date
L_600: Rem ENTER CUSTOMERS
!Print @5,17;"ENTER STARTING CUSTOMER #, <CR> FOR ALL,   E: TO EXIT ";
Call dxget("SCUST",K2$)
Call String(1,K2$)
If K2$ = "E" Or K2$ = "e" Goto OUTEND
!If K2$ = "" Let K4$ = "9999999" \ Goto L_700
!If Len(K2$) > 6 Goto L_600
X1 = K2$ \ K2$ = " ",K2$ \ K2$ = X1 Using "#######"
L_650: !Print @5,18;"ENTER ENDING CUSTOMER #,   <CR> FOR LAST ";
call dxget("ECUST",K4$)
If K4$ = "" Let K4$ = "9999999"
! If Len(K4$) > 7 Goto L_650
X1 = K4$ \ K4$ = " ",K4$ \ K4$ = X1 Using "#######"
L_700: If K4$ >= K2$ Goto L_800
returnstatus=1
Message$=message$+" INVALID CUSTOMER RANGE"
!Signal 3,10
!Goto L_600
L_800: !Print @5,19;'CE';"OKAY TO BEGIN? (Y/N) ";
!Input ""F$ \ Call String(1,F$)
!If F$ = "N" Goto L_500
!If F$ <> "Y" Goto L_800
if returnstatus=1 ! something wrong
	goto OutEnd
Endif
! call programdump("/tmp/qtplog1!","")
ORDDATE = 0
! Print @5,19;'CL BB';" SEARCHING...PLEASE WAIT!";'EB';
K1$ = K2$
L_1000: Rem LOOP HERE
Search #2,3,2;K1$,V1,E
If E = 2 Goto L_8000
If E Gosub ERR_SEARCH
If K1$[1,7] > K4$ Goto L_8000
Mat Read #2,V1,0;H0;
Mat Read #2,V1,104;H5;
CUSTSEC[0] = H0[4] \ Gosub L_6650 \ If CUSTSEC[0] = -1 Goto L_1000
If Not(PURGENOCANCEL)
  If H5[1]
    X2 = H5[1] \ Gosub YMD2JUL \ X2 = 0
    ORDDATE = X2
    If ORDDATE > ENDDATE Goto L_1000
  Else 
    Goto L_1000
  End If 
Else 
  If Not(H5[1])
    X2 = H0[9] \ Gosub YMD2JUL \ X2 = 0
    QUOTEDATE = X2
    If QUOTEDATE > ENDQDATE Goto L_1000
  Else 
    X2 = H5[1] \ Gosub YMD2JUL \ X2 = 0
    ORDDATE = X2
    If ORDDATE > ENDDATE Goto L_1000
  End If 
End If 
! Print @10,20;'CL';"DELETING ";K1$[8];
H1 = V1
DELCOUNTER = DELCOUNTER + 1
Gosub L_1400
K2$ = " ",K2$
K2$ = K1$[8,13] \ K2$[7] = ""
L_1130: Search #3,3,1;K2$,V2,E
If E = 2 Goto L_2000
If E Gosub ERR_SEARCH
If K2$[1,6] <> K1$[8,13] Goto L_2000
Mat Read #3,V2,8;L3;
Mat Read #3,V2,16;L4;
Mat Read #3,V2,256;S2;
If L3[2] > 900 Goto L_1250
If S2[0] = 3 Goto L_1250
If L3 IF K2$[10,10]="A" Goto L_1250 !non-stk "A" REPAIR-NO SPRODDESC
If L3 Goto L_1300
K3$ = " ",K3$ \ K3$[1,6] = L4 Using "######"
K3$[7,16] = K2$[1,10]
Search #3,5,2;K3$,V2,E
If E Gosub ERR_SEARCH
L_1250: Search #3,5,1;K2$,V2,E
If E Gosub ERR_SEARCH
E = 3
Search #3,1,0;K2$,V2,E
If E Gosub ERR_SEARCH
Gosub L_1360
R[0] = -199
Call "QVENDSCRN",R[],H0[],L3[],L4[],Intco
Gosub DELTAG
Goto L_1130
L_1300: Rem DELETE SPRODDESC
K3$ = K2$ \ V4 = L4
Search #6,5,1;K3$,V4,E
If E Gosub ERR_SEARCH
V4 = L4 \ E = 3
Search #6,1,0;K3$,V4,E
If E = 19 Goto L_1350
If E Gosub ERR_SEARCH
L_1350: Goto L_1250
L_1360: Rem KIT LINES - USES A 6 DIGIT ORDER NUMBER!
Mat Read #2,H1,0;H0
K3$ = " ",K3$;K3$[1,6] = H0[7] Using "######";K3$[7,9] = L3[2] Using "###"
L_1370: Search #8,3,1;K3$,V3,E \ If E Return 
X2 = K3$[1,6];LN = K3$[7,9] \ If X2 <> H0[7] Or LN <> L3[2] Return 
Search #8,5,1;K3$,V3,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #8,1,0;K3$,V3,E \ If E Gosub ERR_SEARCH
Goto L_1370
L_1400: Rem DELETE MESSG
K2$ = " ",K2$
K2$ = K1$[8,13] \ K2$[7] = ""
L_1415: Search #7,3,1;K2$,V2,E
If E = 2 Return 
If E Gosub ERR_SEARCH
If K2$[1,6] <> K1$[8,13] Return 
E = 0
Search #7,5,1;K2$,V1,E
If E Gosub ERR_SEARCH
E = 3 \ V1 = V2
Search #7,1,0;K2$,V1,E
If E Gosub ERR_SEARCH
Goto L_1415
L_2000: Rem NOW DELETE HEADER, TOTALS, & SHIPTO
Mat Read #2,H1,0;H0
E = 3
Search #4,1,0;K2$,H0[2],E
If E Gosub ERR_SEARCH
E = 3
Search #5,1,0;K2$,H0[3],E
If E Gosub ERR_SEARCH
K2$ = " ",K2$ \ K3$ = " ",K3$
K2$ = H0[0] Using "##"
K2$[3] = K1$[8,13]
Search #2,2,1;K2$,V2,E
If E Gosub ERR_SEARCH
K3$ = H0[11] Using "###"
K3$[4] = K1$[8,13]
K3$[10] = ""
Search #2,5,1;K2$,V1,E
If E = 1 Goto L_2100
If E Gosub ERR_SEARCH
L_2100: Search #2,5,2;K1$,V1,E
If E = 1 Goto L_2110
If E Gosub ERR_SEARCH
L_2110: Rem! DELETE 3RD DIR-
Rem CHECK 1ST to ALLOW EITHER BLANK OR NULL IN LAST CHARACTER
Rem do search mode 2- 1st- WITH NULL BYTE IN 10TH POSITION, WILL PICK
Rem UP KEYS BOTH WITH AND WITHOUT THE BLANK CHARACTER AT THE END
Search #2,2,3;K3$,V2,E
If E Gosub ERR_SEARCH
Search #2,5,3;K3$,V2,E
Rem IF E=1 GOTO L_2120:
If E Gosub ERR_SEARCH
L_2120: E = 3 \ V1 = H1
Search #2,1,0;K1$,V1,E
If E = 19 Goto L_2140
If E Gosub ERR_SEARCH
L_2140: Goto L_1000
L_6650: Rem CHECK SALESREP/CUSTOMER SECURITY
If P9$[21,21] <> "N" Let CUSTSEC[0] = 0 \ Return 
CUSTSEC[1] = 1
!Call "CUSTSEC",CUSTSEC[]
call "custsec.dl4",Custsec[],ctlc,userid$,e$,rstr$
Return 
DATECHECK: Rem warn user if date 90 days prior to current date
Call DateToJulian(5,F$,JULDATE$,E)
If E <> 0 ! either month and/or day was out of range reject date
  GOOD_DATE$ = "NO "
  !Print @5,13;'CL' \ Print @5,14;'CL'
  !Print @5,13;"Date not valid:";F$;" check month and day values"
  !Pause 30
  Return 
End If 
JULDATE = JULDATE$
!If (JULDATE > Tim(6) - 90) And (JULDATE <= Tim(6))
!ASK_AGAIN1: Rem
!  Print @5,13;'CL' \ Print @5,14;'CL'
!  Print @5,13;"Date is within 90 days of today's date - use it anyway? Y/N";
!  Input " "X$
!  If X$ <> "Y" And X$ <> "N"
!    Print @5,13;'CL'
!    Print @5,13;"Invalid response - must be Y or N"
!    Pause 30
!    Goto ASK_AGAIN1
!  End If 
!  If X$ = "N"
!    GOOD_DATE$ = "NO "
!  End If 
!End If 
If JULDATE > Tim(6)
ASK_AGAIN2: Rem
  !Print @0,13;'CL' \ Print @0,14;'CL'
  !Print @5,13;"Date is in the future - use it anyway? Y/N";
  !Input " "X$
  !If X$ <> "Y" And X$ <> "N"
  !  Print @5,13;'CL'
  !  Print @5,13;"Invalid response - must be Y or N"
  !  Pause 30
  !  Goto ASK_AGAIN2
  !End If 
  !If X$ = "N"
    GOOD_DATE$ = "NO "  ! ALLOW FUTURE?? - Let's NOT
  !End If 
End If 
Return 
Rem {begin src/inc/rtn.date.i}
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
Rem {end rtn.date.i}
DELTAG: K10$ = K2$
Search #10,2,1;K10$,REC10,E
If E > 1 Gosub ERR_SEARCH
If Not(E)
  Search #10,5,1;K10$,REC10,E
  If E Gosub ERR_SEARCH
  E = 3
  Search #10,1,0;K10$,REC10,E
  If E Gosub ERR_SEARCH
End If 
Return 
L_8000: ! Print @0,4;'CE';'RB';"COMPLETE !!"
Message$="Complete. NUMBER QUOTES DELETED ="+Str$(DELCOUNTER)
returnstatus=0 ! ok in blockworld
!Input "\15\PRESS <CR> TO CONTINUE,  E: TO EXIT "F$ \ Call String(1,F$)
!If F$ <> "E" Goto L_500
OUTEND: Rem EXIT ROUTINE
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
End

ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/qtp287se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End

Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
Rem {end rtn.error.s}
End
