! >>> Program 212
!
! description Lost sales report in item code order
!
! loadsave -w -n 100,10 -o prog/dxport/212.dl4 src/212.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 27, 2001  12:37:49
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx2/mx212.src (univ2) [kag] {10589}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX212 - LOST SALES REPORT
Rem AUTHOR: UBS   JAN  8, 1987
Rem LAST UPDATE:
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim L$[46],C1$[30],P1$[30],DIV$[2]
Dim 2%,L1[1],D3[1]
Dim 3%,L2,SCUST,ECUST
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,DIV,D1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[12],K3$[12],X$[10],T9$[26]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[1000],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 2%,J1
For J = 2 To 5
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1904","1792","1808","-1"
Read #1,3;J1$;
Mat Read #1,0,100;J8$;

If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 \ If J8 Let J9 = 18
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"212",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("DIV",tmp$) \ DIV = tmp$ !!enter division # or <cr> for all
call dxget("PRINT",tmp$) \ if tmp$ = "P" Let D = 1 else Let D = 2!!"PRINT IN  P: product OR  C: customer ORDER
call dxget("SCODE",K2$) ! ENTER STARTING CODE, product or customer #
call dxget("ECODE",K3$) ! ENTER ENDING CODE, product or customer #
!
! division
if DIV<0 or DIV>99 let e$="Invalid division, must be between 0 and 99!" \ error 10000
!
! starting and ending product or customer #
if D = 1  !!Product
  K2$ = K2$,Blank$
  K3$ = K3$,EndParam$
  !
  If K3$ < K2$ LET  e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
  !
else
  if K3$="" let K3$="999999"
  SCUST = K2$ \ K2$=SCUST using "######"
  ECUST = K3$ \ K3$=ECUST using "######"
  !
  if SCUST < 0 or SCUST > 999999 let e$="Invalid starting customer code, must be between 0 and 999999!" \ error 10000
  if ECUST < SCUST or ECUST > 999999 let e$="Invalid ending customer code, must be between starting customer code  and 999999!" \ error 10000
End if
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
!L_900: Rem GET DIRECTORY
!Print @0,18;'CE';"ENTER DIVISION # OR <CR> FOR ALL ";
!Input Len 3;""DIV$ \ If DIV$ = "" Let DIV = 0 \ Goto L_910
!If DIV$ >= "A" Goto L_900
!DIV = DIV$
!L_910: Print @0,20;'CE';"PRINT IN  P: PRODUCT OR  C: CUSTOMER ORDER? (  E: EXIT) ";
!Input ""K2$
!If K2$ = "E" Goto OUTEND
!D = 0
!If K2$[1,1] = "P" Let D = 1
!If K2$[1,1] = "C" Let D = 2
!If Not(D) Goto L_900
!!L_1000: Rem GET RANGES
!!Print @0,21;"ENTER STARTING CODE, <CR> FOR ALL,   E: TO EXIT : ";'CE';
!!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!!If K2$ = "" Let K3$ = "}}}}}}" \ Goto L_1070
!If D = 2 Let X2 = K2$ \ K2$ = X2 Using "######"
!Print @0,23;"ENTER ENDING   CODE, <CR> FOR LAST,  E: TO EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!If K3$ = "" Let K3$ = "}}}}}}"
!If D = 2 If K3$ = "}}}}}}" Let K3$ = "999999"
!If D = 2 Let X2 = K3$ \ K3$ = X2 Using "######"
!L_1070: If K2$ <= K3$ Goto L_1090
!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_1000
!L_1090: K1$ = K2$
!J1 = 90 \ J2 = 0
!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If J8 Print 'CS';
!
!!If Err 0 Gosub ERR_ESCAPE
!!!
if j8
  tmp$ = "ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$
  tmp$ = tmp$, "QUANTITY",fdel$
  tmp$ = tmp$, "UNIT",fdel$
  tmp$ = tmp$,"CUST #",fdel$
  tmp$ = tmp$,"CUSTOMER NAME",fdel$
  tmp$ = tmp$,"DATE",fdel$
  tmp$ = tmp$,"NOTE/REMARK",fdel$
  tmp$ = tmp$,"DIV",fdel$
  !XML
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
End if
K1$ = K2$
J1 = 90 \ J2 = 0
! - If Err 0 Gosub ERR_TRAP
!
Search #2,2,D;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #2,3,D;K1$,R1,E
If E Goto OUTEND !!!L_9100
L_2010: 
If D = 1 If K1$ > K3$ Goto OUTEND !!L_9100
If D = 2 If K1$[1,6] > K3$[1,6] Goto OUTEND !!L_9100
Mat Read #2,R1,0;L$;
Mat Read #2,R1,48;D1;
Mat Read #2,R1,50;L1;
Mat Read #2,R1,58;L2;
If DIV If D1 <> DIV Goto L_2000
Gosub L_3000
Gosub L_3500
Gosub L_5800
Gosub L_5000
Goto L_2000
Return 
!
L_3000: Rem GET PRODUCT
If L$[31,33] = "N/S" Goto L_3100
J3$ = " ",J3$ \ J3$ = L$[31,42]
Search #3,2,1;J3$,R3,E
If E Goto L_3100
Mat Read #3,R3,8;P1$;
Return 
!
L_3100: Rem N/S OR NOT FOUND
P1$ = L$[1,30]
L$[1,30] = "ITEM NOT CARRIED IN INVENTORY "
Return 
!
L_3500: Rem GET CUSTOMER
J3$ = " ",J3$
J3$ = L1 Using "######"
Search #4,2,1;J3$,R4,E
If E Goto L_3600
Mat Read #4,R4,30;C1$;
Return 
!
L_3600: Rem CUSTOMER NOT FOUND
C1$[1,30] = "CUSTOMER NOT FOUND IN FILE!   "
Return 
!
L_5000: Rem PRINT LINE
if j8!!xml
  tmp$ =L$[31,42],fdel$
  tmp$ = tmp$,P1$[1,30],fdel$
  tmp$ = tmp$, L2 Using "########",fdel$
  tmp$ = tmp$,L$[43,46],fdel$
  tmp$ = tmp$, L1 Using "######",fdel$
  tmp$ = tmp$, C1$[1,28],fdel$
  X2 = L1[1] \ Gosub L_7770
  tmp$ = tmp$,X$[1,8],fdel$
  tmp$ = tmp$,L$[1,30],fdel$
  tmp$ = tmp$, D1 Using "###", fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0; Tab 0;L$[31,42];
  Print #0; Tab 13;P1$[1,30];
  Print #0; Using "########"; Tab 43;L2;
  Print #0; Tab 52;L$[43,46];
  Print #0; Using "######"; Tab 57;L1;
  Print #0; Tab 64;C1$[1,28];
  X2 = L1[1] \ Gosub L_7770
  Print #0; Tab 92;X$[1,8];
  Print #0; Tab 101;L$[1,26];
  Print #0; Tab 127;D1;
  Print #0;""
End if
Return 
!
L_5800: Rem HEADINGS ROUTINE
if j8 return
!
J1 = J1 + 1 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 212 - ";T9$;
Print #0; Tab 49;"L O S T   S A L E S   R E P O R T"
If D = 1 Print #0; Tab 48;"I N   I T E M   C O D E   O R D E R"
If D = 2 Print #0; Tab 49;"I N   C U S T O M E R   O R D E R"
Print #0;""
Print #0; Tab 0;"ITEM CODE";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 43;"QUANTITY";
Print #0; Tab 52;"UNIT";
Print #0; Tab 57;"CUST #";
Print #0; Tab 64;"CUSTOMER NAME";
Print #0; Tab 92;"DATE";
Print #0; Tab 101;"NOTE/REMARK";
Print #0; Tab 128;"DIV";
Print #0;" "
Print #0;""
Return 
!
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - Return 
!
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6]
Return 
!
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!
!Print 'CS' \ Close 
!Chain "MX000"
!Stop 
!L_9100: Rem END OF THIS RANGE
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!For K = 0 To 10
!  T9[K] = 0
!Next K
!If K2$ = "" Goto OUTEND
!!Goto L_900
!!End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
