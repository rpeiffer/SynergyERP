! >>> Program 315 
!
! description Direct Accounts Receivable Entry Accept
! loadsave -w -n 100,10 -o prog/dxport/315.dl4 src/315.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  3, 2004  12:00:08
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx315.src (univ2) [jcs] {08471}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,StringSearch,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel 
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem * MX315 DIR. A/R ACCEPT-CLEARS ARUPT *
Rem LAST UPDATE: 4/93 - MTG - TRANS TYPE IN SARMOA
Rem last update: 10/25/96 jlp - change to ropen #11,#12
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim rstr$[5000],usr$[40]
dim 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50]
dim 2%,scust,ecust,purdate
dim 1%,IntCo,eflg,returnstatus,tottab[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],Message$[600]
dim 3%,SPREC,rec_uac,totar
Dim G$[40],B$[128],P9$[50],P60$[50],C$[30],reptype$[1]
dim 1%,currid,3%,currfact
Dim 1%,Z1[55],F,A0[12],G[2],E,B1[2],B5,B8,B0
Dim 3%,C1[1],A5[5],G1[10],B6[1],B7[3],A9[1],B9,C12[1]
Dim 2%,D8,B3[1],A1[2],D3[1],CC1[12],1%,FLAG
Dim 2%,S,A2[5],A4[7],X9[12],R2,K,V1,T1,X1,Y9,B[2],B4[3]
Dim 3%,X2,A3[13],P9[10],P8,B2,T2,ARREF[1],REFNO
Dim F$[16],K$[50],K1$[50],K2$[50],K3$[40],K4$[50],A3$[16],A4$[60],U9$[30],J$[40]
Dim X$[20],S$[15]
Dim P8$[7],P9$[50],K6$[50],P61$[256],K5$[50]
Dim 1%,C[17],CLFLAG
Dim 2%,S0[8],CLIENT,G0,C0,M0[1]
Dim 2%,COMP
Dim 2%,GLD[6],GLD$[12],GLD1$[30],GLD2$[2],4%,GLD1,REC_GLD,1%,GLD2[1]
Dim GLDKEY1$[50],GLDKEY2$[50],KEYCUST$[6],CUSTNAME$[30]
Dim KEY6$[50],2%,JRNL,3%,R[30]
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]

!Dim action$[30],options$[30],userid$[8]
!Dim rstr$[2000],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
!Call DXOpen() ! needed for testing
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Comp=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COMP)
Open #1,J$
eflg=0
message$=""
returnstatus=0
Call dxget("RN315",tmp$)                               
tmp$ = UCase$(trim$(tmp$))                              
If tmp$= "" !                                         
  abortjournal = 99                                     
  Message$ = "Accept Prompt not checked. Direct A/R Entries are not accepted"                          
  ReturnStatus = 0 ! 1=no good (ONLY DISPLAYS IF =1 ??) 
  Goto outend:                                           
End If

!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Mat Read #1,0,108;D8;
X$ = D8 Using "&&&&&&" \ POSTPER = X$[1,4]
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
!If P9$[17,17] <> "M" Goto L_800
!Print @0,22;'CL RB';"*WARNING*: GENERAL LEDGER IS NOT ACTIVATED!!!";
!Print @0,23;'CL RB';"Do you wish to continue? "; \ Input Len (16384 + 3);""F$
!If F$ <> "YES" Goto OUTEND
Try Close #9 Else Rem
L_800: Rem OPEN FILES
For X2 = 2 To 5
  Read S \ If Not(S) Goto L_825
  Read #1,88,S;S$;
  Open #X2,S$
L_825: Next X2
Data "1520","1504","1808","400"
Mat Read #1,52,60;P8$; \ Mat Read #1,52,0;S0;
If P9$[17,17] <> "Y" Goto L_900
For X2 = 6 To 10
  Read S \ If Not(S) Goto L_875
  Read #1,88,S;S$;
  Open #X2,S$
Next X2
L_875: Data "64","240","256","272","464"
F$ = COMP Using "4/GLARDETL#"
Open #55,F$
L_900: Rem CHECK STATUS
!Print 'CS'; Tab 10;"ACCOUNTS RECEIVABLE DIRECT ENTRY ACCEPT"
Read #2,0;S
If S = 0 
	eflg=eflg+1
	message$=message$+"No Entries to Accept"
	goto outend:
Endif
Read #1,20,4;F; 
If F <> 3 Goto L_8700
E = 1 \ V1 = 0
Search #3,1,0;F$,V1,E
If E Gosub ERR_SEARCH
For X = 1 To 12
  Read X9[X]
Next X
Data "0","31","59","90","120","151","181","212","243","273","304","334"
If P9$[17,17] ="Y" ! "Y" Goto L_1100
	K6$ = " ",K6$ \ K6$[1,6] = "DFAULT" \ Search #10,2,1;K6$,R[10],E 
	if e<>0 ! \ If Not(E) Goto L_1025
		!Print @0,22;'CL RB';"G/L - A/R INTERFACE CONTROLS NOT SETUP PROPERLY ";
		eflg=eflg+1
		let message$=message$+" G/L - A/R Control File Not Setup Properly. Missing Default Record."
		goto outend:
	endif
	 K1$ = " ",K1$
	Search #6,2,1;K1$,R[6],E
	if e<>1
		let eflg=eflg+1
		let message$=message$+" G/L Interface in Progess Elsewhere. Try Again Later."
		!If E = 1 Goto L_1065
		!F = 0 \ Write #1,20,4;F;
		!!!!! stop here 
		!Print @0,22;'CL';"G/L INTERFACE IN PROGRESS ELSEWHERE...TRY AGAIN LATER...";
		!L_1055: Print @0,23;'CL';"PRESS <CR> TO RETURN TO MENU "; \ Input ""U9$
		Goto OUTEND
	endif
	
	E = 2 \ Search #6,1,0;K1$,R[6],E\If E Gosub ERR_SEARCH
	K1$ = " ",K1$
	Search #6,4,1;K1$,R[6],E
	If E Gosub ERR_SEARCH
endif
!L_1100: Print 'CR';"DO YOU WANT TO ACCEPT A/R ENTRIES?  (Y/N) ";
!Input Len (16384 + 1);""X$
!Call String(1,X$)
X$="Y"
!If X$ = "N" Goto L_4100
!If X$ <> "Y" Goto L_1100
Read #1,20,4;F
If F <> 3 Goto L_4100
F = 4
Write #1,20,4;F;
If P9$[17,17] <> "Y" Goto L_1500
Mat Read #1,51,0;C; \ If Not(C[3]) Goto L_1500
If P8$[7,7] <> "W" And P8$[7,7] <> "D" Goto L_1500
CLFLAG = 99
Read #1,88,2768;S$; \ Ropen #12,S$
Read #1,88,688;S$; \ Ropen #11,S$
L_1500: Rem MAIN LOOP
For R2 = 1 To S
  Mat Read #2,R2;A2;
  If A2[2] = 0 Goto L_1990
  JRNL = A2[1]
  Mat Read #2,R2,24;A3
  Mat Read #2,R2,108;A3$
  T1 = Int(Fra(A2[3]) * 100)
  ARREF[0] = A3[5]
  Gosub GETPOSTCUST
  CLIENT = 0
  If CLFLAG
    If P8$[7,7] = "D" Mat Read #11,A3[9],76;CLIENT;
    If P8$[7,7] = "W" Mat Read #12,A3[8],844;CLIENT;
  End If 
  If Not(CLIENT) Let CLIENT = S0[0]
  If P9$[17,17] = "Y" Gosub L_5000
  X2 = A2[4] \ Gosub L_7840 \ A2[4] = X2
  A2[4] = X2
  ARREF[0] = A3[5]
  K3$ = " ",K3$
  K3$ = A2[2] Using "######"
  K3$[7] = ARREF[0] Using "##########"
  K3$[17] = T1 Using "#"
  K3$[18] = ""
  Search #3,2,1;K3$,R[3],E
  If E Goto L_1660
  let eflg=eflg+1
  !Print @0,22;'RB CL';"TRANSACTION ALREADY ON FILE. ACCEPT STOPPED.";
  Message$=Message$+"Transaction "+str$(arref[0])+" For Customer "+str$(a2[2])+" Already on File. Accept Stopped. "
  Gosub Err_search: ! Goto L_8970
L_1660: Rem CREATE A/R
  If T1 = 2 Gosub L_3000
  E = 2
  Search #3,1,0;K3$,R[3],E\ if e gosub err_search
 

L_1705: K3$[18,18] = " "
  Search #3,4,1;K3$,R[3],E
  If E Gosub ERR_SEARCH
  K4$ = " ",K4$ \ K4$[1,6] = K3$[1,6]
  K4$[7,12] = A2[4] Using "######"
  K4$[13] = K3$[7]
  K4$[25] = ""
  Search #3,4,2;K4$,R[3],E
  If E Gosub ERR_SEARCH
  K4$ = " ",K4$;K4$[1,6] = C12[1] Using "######"
  K4$[7,12] = K3$[1,6]
  K4$[13,18] = A2[4] Using "######"
  K4$[19] = K3$[7]
  Search #3,4,3;K4$,R[3],E \ If E Gosub ERR_SEARCH
  K5$ = " ",K5$;K5$[1,6] = K4$[1,6]
  K5$[7,16] = K4$[19,28];K5$[17,22] = K4$[7,12]
  K5$[23] = K4$[29]
  Search #3,4,4;K5$,R[3],E \ If E Gosub ERR_SEARCH
  K5$ = " ",K5$;K5$[1,6] = K4$[1,6]
  K5$[7,22] = K4$[13,28];K5$[23,28] = K4$[7,12]
  K5$[29] = K4$[29]
  Search #3,4,5;K5$,R[3],E \ If E Gosub ERR_SEARCH
  A0[0] = A3[11] \ A3[11] = 0
  A0[11] = 99
  A3[6] = 0
  A0[3] = Int(A3[8]) \ A3[8] = 0
  A0[5] = A3[9] \ A3[9] = 0
  X2 = A2[4] \ Gosub L_7870
  A4[3] = D3[0]
  If A3[3] Let A4[3] = A3[3]
  A3[3] = 0
  If A3[4] Let A4[0] = A3[4]
  A3[4] = 0
  A4[1] = A2[2]
  A4[2] = A2[1]
  A2[1] = 0;A3[5] = 0
  If A0[5] < 1 Or A0[5] > 99 Let A0[5] = 1
  let currid=0
  let currfact=0
  IF P61$[136,136]="Y" and a3[10]<>0
	LET CURRID=A3[10]!\LET A3[10]=0
	LET CURRFACT=A3[13]!\LET A3[13]=0
  endif
  LET A3[10]=0;a3[13]=0
  Mat Write #3,R[3];A2
  X2 = A2[4] \ Gosub L_7770
  X1 = X$[1,2]
  Y9 = X$[7,8]
  A0[2] = X1 * 100 + Y9
  A1[0] = 0;A1[1] = 0;A1[2] = 0;A4$ = " ",A4$
  A1[1] = C12[1]
  a0[12]=315 ! accept source 315 = direct a/r 
  Mat Write #3,R[3],24;A3;
  Mat Write #3,R[3],108;A3$;
  Mat Write #3,R[3],124;A0;
  Mat Write #3,R[3],154;A4;
  Mat Write #3,R[3],190;A1;
  Mat Write #3,R[3],202;A5;
  Mat Write #3,R[3],256;A4$;
  Mat Write #3,R[3],316;ARREF;
  Mat Write #3,R[3],150;CURRID;
  Mat Write #3,r[3],342;currfact;
  Gosub L_2000
  A2 = 0
  Write #2,R2,8;A2;
  LET A3[0]=0
  L_1990: ! GET NEXT RECORD
Next R2
Goto L_4000
GOTO OUTEND
L_2000: Rem AR PROOF
If T1 = 2 Goto L_2070
Read #5,0,30;P8
If T1 > 5 
	P8 = P8 - A3[0]
else
	P8 = P8 + A3[0]
endif
Write #5,0,30;P8;
Mat Read #1,110,66;C1
If T1 > 5 
	C1[0] = C1[0] - A3[0]
	C1[1] = C1[1] - A3[0] 
else
	C1[0] = C1[0] + A3[0]
	C1[1] = C1[1] + A3[0]
endif
Mat Write #1,110,66;C1;
LET A3[0]=0
Return 
L_2070: Rem S/C = AR PROOF
Read #5,0,24;P8
P8 = P8 + A3[0]
Write #5,0,24;P8;
Mat Read #5,4;P9
For X = 0 To 2 \ P9[X] = P9[X] + A3[0] \ P9[X + 6] = P9[X + 6] + 1 \ Next X
Mat Write #5,4;P9;
Mat Read #5,(A0[5] * 10) + 4;P9
For X = 0 To 2 \ P9[X] = P9[X] + A3[0] \ P9[X + 6] = P9[X + 6] + 1 \ Next X
Mat Write #5,(A0[5] * 10) + 4;P9;
LET A3[0]=0
Return 
GETPOSTCUST: Rem "Posting Cust
K4$ = " ",K4$ \ K4$ = A2[2] Using "######"
Search #4,2,1;K4$,R[4],E \ If E Gosub ERR_SEARCH
Mat Read #4,R[4],142;CC1;
Mat Read #4,R[4],668;C12;
Mat Read #4,R[4],30;CUSTNAME$;
If P61$[41,41] = "Y"
  K4$ = " ",K4$;K4$ = C12[1] Using "######"
  Search #4,2,1;K4$,R[4],E \ If E > 1 Gosub ERR_SEARCH
  If E
    C12[1] = A2[2]
  End If 
Else 
  C12[1] = A2[2]
End If 
Return 
L_3000: Rem "add mtd/ytd service charges
K4$ = " ",K4$ \ K4$ = A2[2] Using "######"
Search #4,2,1;K4$,R[4],E
If E Goto L_3100
Mat Read #4,R[4],336;C1;
C1 = C1 + A3 \ C1[1] = C1[1] + A3
Mat Write #4,R[4],336;C1;
Return 
L_3100: Rem CUST NOT THERE
eflg=eflg+1
let message$=message$+"Cust# "+str$(a2[2])+" Not Found. Accept Stopped."
!Print @0,22;'CE';"ERROR";E;"LOOKING FOR CUSTOMER";A2[2];
Gosub Err_Search: ! Goto L_8970
L_4000: Gosub L_8000
!Print 'CR';"-- ACCEPTED --"
F = 0 \ Write #1,20,4;F;
!Chain "MX315A"
Call "mx315a.dl4",eflg,rec_uac,message$,IntCo,rstr$,e$
goto outend:
L_4100: Rem RESET FLAGS
If P9$[17,17] = "Y" Gosub L_8200
If F <> 3 Goto L_8700
Goto OUTEND
L_5000: Rem UPDATE MONTHLY G/L FILES
If P9$[17,17] <> "Y" Return 
If Not(A3) Return 
T2 = A3 \ If T1 > 5 Let T2 = - A3
B8 = T1
B[0] = A2[2];B[2] = A2[4];B1 = A3[8];B2 = T2
REFNO = ARREF[0]
B1[1] = A3[9] \ B1[2] = 0
B3[0] = D8 \ B3[1] = JRNL \ G0 = CLIENT
K$ = " ",K$;K$[1,4] = G0 Using "####";K$[5,6] = B1 Using "##";K$[7,12] = B3[0] Using "######"
K$[13,22] = REFNO Using "##########";K$[23,28] = B[0] Using "######"
K$[29,30] = B8 Using "##"
E = 2 \ Search #7,1,0;K$,R[7],E
If E Gosub ERR_SEARCH
Mat Write #7,R[7],0;B
Mat Write #7,R[7],12;B1
Mat Write #7,R[7],18;B2
Mat Write #7,R[7],24;B3
Mat Write #7,R[7],32;B8 \ Mat Write #7,R[7],34;G0;
Mat Write #7,R[7],38;REFNO;
Search #7,4,1;K$,R[7],E
If E Gosub ERR_SEARCH
Gosub L_6900
B4[0] = R[7] \ B4[1] = A2[2];REFNO = ARREF[0]
B4[3] = 0
B5 = 0 \ B6 = G1[0] \ B6[1] = T2 \ B9 = T2
Gosub L_5700
B5 = 7 \ B6 = A3[6] \ B6[1] = - (T2) \ B9 = - (T2)
Gosub L_5700
Return 
L_5700: Rem UPDATE ARMOL
K2$ = " ",K2$ \ K2$[1,6] = R[7] Using "######"
K2$[7,8] = B4[3] Using "##" \ K2$[9,12] = B0 Using "####" \ K2$[13,14] = B5 Using "##"
K2$[15,22] = B6 Using "########"
Search #8,2,1;K2$,R[8],E
If E = 1 Goto L_5755
If E Gosub ERR_SEARCH
Mat Read #8,R[8],18;B6
B6[1] = B6[1] + B9
Mat Write #8,R[8],18;B6;
Goto L_5800
L_5755: E = 2 \ Search #8,1,0;K2$,R[8],E
If E Gosub ERR_SEARCH
Mat Write #8,R[8],0;B4;
Mat Write #8,R[8],16;B5;
Mat Write #8,R[8],18;B6; \ Mat Write #8,R[8],30;B0;
Mat Write #8,R[8],32;REFNO;
Search #8,4,1;K2$,R[8],E
If E Gosub ERR_SEARCH
L_5800: Rem UPDATE ARMOA
If Not(B9) Return 
C0 = CLIENT
K1$ = " ",K1$ \ K1$[1,4] = C0 Using "####" \ K1$[5,12] = B6 Using "########"
Search #9,2,1;K1$,R[9],E
If E = 1 Goto L_5845
If E Gosub ERR_SEARCH
Mat Read #9,R[9],0;B7; \ Mat Read #9,R[9],24;C0
B7[1] = B7[1] + B9
Mat Write #9,R[9],0;B7 \ Mat Write #9,R[9],24;C0;
Goto L_5900
L_5845: E = 2 \ Search #9,1,0;K1$,R[9],E
If E Gosub ERR_SEARCH
B7 = B6 \ B7[1] = B9 \ B7[2] = 0 \ B7[3] = 0 \ C0 = CLIENT
Mat Write #9,R[9],0;B7 \ Mat Write #9,R[9],24;C0;
Search #9,4,1;K1$,R[9],E
If E Gosub ERR_SEARCH
L_5900: Rem UPDATE GLARTEMP
KEY6$ = " ",K6$ \ KEY6$[1,4] = CLIENT Using "####"
KEY6$[5,12] = B6 Using "########"
KEY6$[13,18] = JRNL Using "######"
Search #6,2,1;KEY6$,R[6],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  E = 2 \ Search #6,1,0;KEY6$,R[6],E \ If E Gosub ERR_SEARCH
  A9 = B6 \ A9[1] = 0 \ M0[0] = JRNL \ M0[1] = CLIENT
  Mat Write #6,R[6],0;A9 \ Mat Write #6,R[6],12;M0;
  Search #6,4,1;KEY6$,R[6],E \ If E Gosub ERR_SEARCH
End If 
Mat Read #6,R[6],0;A9; \ Mat Read #6,R[6],12;M0
A9[1] = A9[1] + B9
Mat Write #6,R[6],0;A9;
Gosub UPGLDET
Return 
UPGLDET: Rem up gl detail file
For X9 = 0 To 6 \ GLD[X9] = 0 \ Next X9
GLD$ = " ",GLD$;GLD1$ = " ",GLD1$;GLD2$ = " ",GLD2$
GLD1 = 0;GLD2[0] = 0;GLD2[1] = 0
GLD[0] = CLIENT
GLD[1] = POSTPER
GLD[2] = A2[2]
REFNO = ARREF[0]
GLD[4] = A2[4]
GLD[5] = D8
GLD[6] = JRNL
GLD$[1,9] = B6 Using "#########"
GLD1$[1,30] = CUSTNAME$[1,30]
GLD2$ = " E"
GLD2[0] = 315
GLD2[1] = T1
GLDKEY1$ = " ",GLDKEY1$
GLDKEY1$[1,4] = GLD[1] Using "&&&&"
GLDKEY1$[5,16] = GLD$[1,12]
GLDKEY1$[17,22] = GLD[6] Using "######"
GLDKEY1$[23,32] = REFNO Using "##########"
GLDKEY1$[33,38] = GLD[2] Using "######"
GLDKEY1$[39,40] = GLD2[1] Using "##"
Search #55,2,1;GLDKEY1$,REC_GLD,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  E = 2 \ Search #55,1,0;GLDKEY1$,REC_GLD,E \ If E Gosub ERR_SEARCH
  Mat Write #55,REC_GLD,0;GLD;
  Mat Write #55,REC_GLD,40;GLD$;
  Mat Write #55,REC_GLD,52;GLD1$;
  Mat Write #55,REC_GLD,82;GLD2$;
  Mat Write #55,REC_GLD,84;GLD1;
  Mat Write #55,REC_GLD,92;GLD2;
  Mat Write #55,REC_GLD,96;REFNO;
  Search #55,4,1;GLDKEY1$,REC_GLD,E \ If E Gosub ERR_SEARCH
  GLDKEY2$ = " ",GLDKEY2$
  GLDKEY2$[1,6] = GLD[2] Using "######"
  GLDKEY2$[7,16] = REFNO Using "##########"
  GLDKEY2$[17,18] = GLD2[1] Using "##"
  GLDKEY2$[19,30] = GLD$[1,12]
  GLDKEY2$[31,34] = GLD[1] Using "&&&&"
  GLDKEY2$[35,40] = GLD[6] Using "######"
  Search #55,4,2;GLDKEY2$,REC_GLD,E \ If E Gosub ERR_SEARCH
End If 
Mat Read #55,REC_GLD,84;GLD1
GLD1 = GLD1 + B9
Mat Write #55,REC_GLD,84;GLD1;
Return 
L_6900: Rem GLARCNTRL
If P9$[17,17] <> "Y" Return 
Goto L_6940
Goto L_7000
L_6940: If P8$[1,1] = "N" Goto L_6965
K6$ = " ",K6$ \ K6$[1,2] = A3[8] Using "##" \ K6$[3,4] = A3[9] Using "##"
Search #10,2,1;K6$,R[10],E \ If E Goto L_6965
Goto L_7000
L_6965: K6$ = " ",K6$ \ K6$[1,2] = A3[8] Using "##"
Search #10,2,1;K6$,R[10],E \ If E Goto L_6985
Goto L_7000
L_6985: K6$ = "DFAULT" \ Search #10,2,1;K6$,R[10],E \ If E Gosub ERR_SEARCH
Goto L_7000
L_7000: Rem READ GLARCNTRL
Mat Read #10,R[10],0;G;
Mat Read #10,R[10],8;G1;
Return 
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
L_8000: Rem CLEAR ARUPT FILE
For K = 0 To Chf(2) - 1
  Mat Write #2,K;Z1;
Next K
Return 
L_8200: Rem CLEAR GLARTEMP
If P9$[17,17] <> "Y" Return 
K1$ = ""
L_8220: Search #6,3,1;K1$,R[6],E \ If E = 2 Goto L_8250
If E Gosub ERR_SEARCH
Search #6,5,1;K1$,R[6],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #6,1,0;K1$,R[6],E \ If E Gosub ERR_SEARCH
Goto L_8220
L_8250: Return 
L_8700: Rem FLAG CHECK
On F Goto L_8730,L_8740,L_8750,L_8760
S$ = "JOURNAL NOT RUN"
Goto L_8770
L_8730: S$ = "ENTRY IN PROCESS"
Goto L_8770
L_8740: S$ = "JOURNAL IN PROCESS"
Goto L_8770
L_8750: Return 
L_8760: S$ = "ACCEPT IN PROCESS"
L_8770: !Print @0,22;'RB CE';"CANNOT ACCEPT. ";S$
!Signal 3,30
eflg=eflg+1
let message$=message$+rtrim$(s$)
Goto OUTEND

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
if rtrim$(message$)<>""
	let msg$=msg$+rtrim$(message$)
endif
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
if not(eflg) and message$=""
	let message$=message$+"Accept Complete. "

endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
outend9: ! everything has been written in called program
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
