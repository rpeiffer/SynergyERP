! >>> Program 202rwt
!
! description  RANDOM WEIGHT LIST
!
! loadsave -w -n 100,10 -o prog/dxport/202rwt.dl4 src/202rwt.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
 !
 ! *declare common dl4 intrinsic subs & functions
 Declare Intrinsic Function trim$,dateusing$,fmtof
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
 !
 ! *declare common external libs & subs & functions
 External Lib "libgeneral.lib" !general routines
 Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
 Declare External Function getmsg$,expandarray
 !
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 28, 2003  12:22:04
Rem /w/papermaster/r2002//usr/acct/jliu/work/devl/mx2/mx202rwt.src (univ2) [jliu] {44049}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,getglobals
!Option Default Dialect IRIS1
Rem MX202RWT- PICK LIST
Rem AUTHOR: TTT   FEB 20, 1989
Rem LAST UPDATE:  5/92 - ADD REPORT SELECT & ORDER PRINTED OPTION
Com 1%,PFU1[20],CNVTU[2],UN[2],EUN[2],S2[1],N9[11]
Com 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],J8,J9[2],L3[3],S9[1],Y
Com 2%,B[24],D8,H0[12],H5[16],L4[3],L6[5],L9[1],S5,S8[1],X,X1,WH,CURDATE
Com 2%,TRUCK,TEMPORD
Com 3%,J,J1,X2,X3,X4,S7[9],L7[9],T2[25],PACK,A1[7],SUNIT,UNITX
Com 3%,S3[5],OLM[6],UNF[6],PFU2[6],CNVTA,A[41]
Com 3%,R9[3],U1[6,2],DESC$[10],P9$[50],W2$[16],K13$[60],M8$[50]
Com A1$[156],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],CNAME$[30]
Com J7$[40],ARDATE$[8],J9$[50],K1$[50],K2$[20],K3$[60],L1$[60],L2$[20]
Com S1$[118],S2$[20],T2$[8],X$[20],K7$[50],OL2$[16],K11$[60],J11$[60]
Com V0$[10],L7$[6],U1$[21],SUNIT$[4],UNIT$[4],ZONE$[2],S0$[36]
Com PORT_$[26],FILE1$[16],FILE2$[26],KEY_$[130],TRUCK$[50]
Dim 3%,T9[20],TOT[2],begTruck,endTruck
Dim 1%,PD1[9],PL1[1]
Dim 2%,PT,DT3[1],JDATE,JWDATE,3%
Dim K14$[20],FIRST_LOC$[6],LOC$[6],WEEKDAY_$[10],DELV_DATE$[20],LINE_$[80]
Dim PRA2$[30]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
 ! Dim U_TRUCK$[1000][10]
 Dim U_ZONE$[1000][10]
 Dim blockid$[100]

If Err 0 Gosub ERR_TRAP
COUNT = 1
LINE_$ = "-",LINE_$
For J = 2 To 14
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Read #1,3,0;CNAME$;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,3,172;CURDATE;
Data "-1920","-1840","1856","-1888","-1792","-1","-1872","-1","-1728","-2320","-1744","-1","-208"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J7 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J7 = 55 \ If J8 Let J7 = 23
Mat Read #1,19,50;P9$;
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 


!
call dxget("U_JDATE",tmp1$) 
call dxget("U_WH",tmp$) \ WH = tmp$

Gosub L_13000
!Validations delivery date
tmp$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
J1 = tmp$
X2 = J1 \ Gosub L_7700
DELV_DATE$ = " ",DELV_DATE$ \ DELV_DATE$ = X$
Gosub L_6900
WEEKDAY_$ = X$[9]
D8 = J1
X2 = D8 \ Gosub L_7820 \ if errFlag = 1 let e$ = "Invalid delivery date" \ error 10000
JDATE = X2
X2 = D8 \ Gosub L_7700
F = Z9 + 1 \ If F < 1 or F > 7 let e$ = "Invalid date!!" \ error 10000
K1$ = K2$
J1 = 90 \ J2 = 0
!!Validations warehouse
If WH <= 0 Or WH > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000
!!
!!clearing sort file...
K1$ = " ",K1$
Search #9,3,1;K1$,V1,E
while not(E)
  Search #9,5,1;K1$,V1,E
  Search #9,3,1;K1$,V1,E
wend

! TRUCK handled via a range now
! K1$ = " ",K1$
! truck: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
! If E Goto exitSortTruck!!!!!!
! Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
! If T2$[F,F] <> "Y" Goto truck
! J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
! Search #9,4,1;J4$,V1,E
! Goto truck
! exitSortTruck:
! K1$ = "{" 
! TRUCKCNT = 0
! For I = 6 To 20
!   Search #9,3,1;K1$,V1,E 
!   If E Goto exitTruck
!   If K1$[1,1] <> "{" Goto exitTruck
!   U_TRUCK$[TRUCKCNT] = trim$(K1$[2])
!   TRUCKCNT = TRUCKCNT + 1
!   If I = 20 Let I = 5
! Next I
! exitTruck:
!zone
K1$ = " ",K1$
zone: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto exitSortZone
Mat Read #2,V1,36;T2$;
If T2$[F,F] <> "Y" Goto zone
J4$ = " ",J4$ \ J4$ = "}",K1$
Search #9,4,1;J4$,V1,E 
Goto zone
exitSortZone:
ZONECNT = 0
K1$ = "}"
For I = 6 To 20
  Search #9,3,1;K1$,V1,E 
  If E Goto exitZone
  If K1$[1,1] <> "}" Goto exitZone
  U_ZONE$[ZONECNT] = trim$(K1$[2])
  ZONECNT = ZONECNT + 1
  If I = 20 Let I = 5
Next I
exitZone:
Call getglobals("blockx",0,blockid$)
 If blockid$ = "202rwt"

	Call env(2,"NEXTBLOCK","202rwt2")
	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
		
 End If 
! must be 202rwt2
call dxget("BEG_TRUCK", tmp$) \ begTruck = tmp$
call dxget("END_TRUCK", tmp$) \ endTruck = tmp$
if tmp$ = "" endTruck = 999999
call dxget("ALLZONES", tmp$) \ allZones = tmp$

if not(allZones) ! if all zones - leave all zones loaded in sort
	!clearing sort file...
	K1$ = " ",K1$
	Search #9,3,1;K1$,V1,E
	While Not(E)
		  Search #9,5,1;K1$,V1,E
		  Search #9,3,1;K1$,V1,E
	Wend 
	! TRUCK handled via a range now
	!
	! call dxget("U_TRUCKCNT",tmp$)
	! 
	! TRUCKCNT = tmp$
	! for i = 0 to TRUCKCNT -1
	! 	call dxget("TRUCKS" + str$(i),tmp$)
	! 	tmp$ = "on"!!!dci2
	! 	if tmp$ <> ""  !!on
	! 		TRUCK = U_TRUCK$[i]
	! 		J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	!         Search #9,4,1;J4$,V1,E
	! 	end if
	! Next i
	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		tmp$ = "on"!!!dci2
		if tmp$ <> "" 
			ZONE$ =  U_ZONE$[i]
			J4$ = " ",J4$ \ J4$ = "}",ZONE$
			Search #9,4,1;J4$,V1,E 
		end if
	Next i
end if ! if not(allZones)

!Ropen #13,"PRTDFLT"
!PT = Spc(6) \ If PT And PT < Chf(13) Mat Read #13,PT,0;PD1;
!Gosub L_13000
!L_900: Rem ============
!Print @0,0;'CS';"-MX202RWT-";@25,0;"RANDOM WEIGHT LIST PRINTOUT"
!L_920: Print @0,2;"ENTER DELIVERY DATE: ";'CE';
!J0$ = "50000621 2" \ J1 = CURDATE;J5$ = "ENTER DELIVERY DATE OR <CR> FOR TODAY'S DATE"
!Gosub L_7000 \ If Not(J1) Goto L_920
!X2 = J1 \ Gosub L_7700
!DELV_DATE$ = " ",DELV_DATE$ \ DELV_DATE$ = X$
!Gosub L_6900
!WEEKDAY_$ = X$[9]
!D8 = J1
!X2 = D8 \ Gosub L_7820 \ Goto L_920
!JDATE = X2
!X2 = D8 \ Gosub L_7700
!Print @36,2;WEEKDAY_$;
!F = Z9 + 1 \ If F < 1 Goto L_1060
!If F > 7 Goto L_1060
!L_1010:
!Print @0,4;'CE';"DATE OKAY? (Y/N/E) "; \ Input ""J$
!If J$ = "E" Goto L_9160
!If J$ = "Y" Goto L_1070
!If J$ <> "N" Goto L_1010
!Goto L_900
!L_1060:! Print @0,22;"INVALID DATE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!L_1070: K1$ = K2$
!J1 = 90 \ J2 = 0
!L_1090: Rem =========== SELECT WAREHOUSE
!Print @0,4;'CL';"WAREHOUSE:";
!J5$ = "ENTER WAREHOUSE NUMBER OR <CR> FOR DEFAULT"
!J1 = PD1[2];J0$ = "3000021004";J2$ = "##"
!Gosub L_7000
!WH = J1
!If Not(WH) Or WH > 99 Goto L_1090
!Print @0,4;'CL';"CLEARING SORT FILE..."
!K1$ = " ",K1$
!L_1170: Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1210
!Search #9,5,1;K1$,V1,E !\ If E Gosub ERR_SEARCH
!Goto L_1170

!L_1210: Rem ============== SELECT TRUCK(S)
!L_1220: Print @0,4;'CE';"ENTER TRUCK TO PRINT OR <CR> FOR ALL TRUCKS THAT SHIP FOR THIS DATE ";
!Input ""TRUCK$
!If TRUCK$ = "" Goto L_1270
!TRUCK = TRUCK$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1220
!Gosub L_1330 \ Goto L_1600

!L_1270: Rem ================ SORT THE TRUCKS THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1290: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1360!!!!!!
!Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!If T2$[F,F] <> "Y" Goto L_1290
!Gosub L_1330 \ Goto L_1290

!L_1330: Rem INSERT SELECTED TRUCK INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 

!L_1360: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!Goto L_1600!!!dci2!!
!Print @0,4;'CE';"THE FOLLOWING TRUCKS SHIP ON";WEEKDAY_$
!K1$ = "{" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1480
!  If K1$[1,1] <> "{" Goto L_1480
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1480
!  If I = 20 Let I = 5
!Next I
!L_1480: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_1600
!If J$ <> "N" Goto L_1480
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1360
!TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1480
!K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1360

!L_1600: Rem ============= SELECT ZONE(S)
!Print @0,4;'CE';"ENTER ZONE TO PRINT OR <CR> FOR ALL ZONES THAT SHIP FOR THIS DATE ";
!Input ""ZONE$
!If ZONE$[1,2] = "  " Or ZONE$ = "" Goto L_1660
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Gosub L_1720 \ Goto L_2050

!L_1660: Rem =============== SORT THE ZONES THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1680: Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1820
!Mat Read #2,V1,36;T2$;
!If T2$[F,F] <> "Y" Goto L_1680
!Gosub L_1720 \ Goto L_1680

!L_1720: Rem INSERT SELECTED ZONE INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "}",K1$
!Search #9,4,1;J4$,V1,E !\ If E Gosub ERR_SEARCH
!Return 

!L_1750: Rem =============== HAVE THE ORDERS BEEN PRINTED?
!S8 = 0 !\ If P9$[45,45] = "Y" Goto L_1780 !!!!!!!dci2
!L_1758: Print @0,22;'CE';"HAVE THE ORDERS BEEN PRINTED? (Y/N)  ";
!Input ""J$ \ If J$ = "E" Goto L_9160
!If J$ <> "Y" If J$ <> "N" Goto L_1758
!S8 = 1 \ If J$ = "Y" Let S8 = 2
!L_1818: Return 

!L_1820: Rem ============ DISPLAY THE ZONES THAT SHIP
!Goto L_2050!!dci2!!!temp
!Print @0,4;'CE';"THE FOLLOWING ZONES SHIP ON";WEEKDAY_$
!K1$ = "}" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1930
!  If K1$[1,1] <> "}" Goto L_1930
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1930
!  If I = 20 Let I = 5
!Next I
!L_1930: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_2050
!If J$ <> "N" Goto L_1930
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1820
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1820

L_2050: Rem ============ FINISHED SELECTIONS
!Print @0,22;'CL';"SORTING....PLEASE WAIT...";
K1$ = " ",K1$;K1$[1,2] = 1 Using "##"
L_2100: Search #3,3,1;K1$,V1,E
If E Goto L_2455
X2 = K1$[1,2]
If X2 > 6 Goto L_2455
Mat Read #3,V1;H0;
Mat Read #8,H0[3],8;T2;
Gosub L_5110
If N9[0] Goto L_2100
Mat Read #3,V1,66;V0$;
Mat Read #3,V1,104;H5;
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 0
JWDATE = X2
If JWDATE > JDATE Goto L_2100
Mat Read #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
K3$ = " ",K3$ \ K3$ = "}",S2$[19,20]
Search #9,2,1;K3$,V2,E !\ If E > 1 Gosub ERR_SEARCH
If E Goto L_2100
! TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
! Search #9,2,1;TRUCK$,V2,E !\ If E > 1 Gosub ERR_SEARCH
! If E Goto L_2100
if s5 < begTruck or s5 > endTruck goto L_2100
Mat Read #3,V1,78;H4;
Mat Read #4,H0[2],8;S1$
If WH <> H4[2] Goto L_2100
J$ = " ",J$ \ J$ = H0[7] Using "######"
L_2230: Search #5,3,1;J$,R5,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2100
If J$[1,6] <> K1$[3,8] Goto L_2100
If (H5[7] = 21 Or H5[7] = 22) And J$[7,9] = "   " Goto L_2230
Mat Read #5,R5,140;L2$;
If L2$[1,1] = "Z" Goto L_2230
Mat Read #5,R5,80;L1$;
Mat Read #5,R5,8;L3;
Mat Read #5,R5,404;OLM; \ Mat Read #5,R5,446;EUN;
Mat Read #5,R5,452;UNF; \ Mat Read #5,R5,256;S2;
If S2[0] = 3 Goto L_2230
Mat Read #5,R5,16;L4;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Gosub L_30000
If L3[0] Goto L_2230
Mat Read #6,L4,0;A1$;
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A; \ Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
Mat Read #6,L4,944;PRA2$;
If A1$[127,127] <> "Y" Goto L_2230
T9 = 0 \ T9 = 9000 - H4[1]
If Not(L7[4]) Goto L_2230
J4$ = " ",J4$ \ J4$[1,6] = S5 Using "######" \ J4$[7,8] = S2$[19,20]
J4$[9,12] = "    "
J4$[13,18] = H0[7] Using "######"
K11$ = " ",K11$ \ K11$[1,6] = H0[7] Using "######"
K11$[7,9] = L3[2] Using "###"
J11$ = K11$
If L3 Let R11 = 0 \ Goto L_2410
L_2370: Search #11,3,3;K11$,R11,E
If E Goto L_2450
If K11$[1,9] <> J11$[1,9] Goto L_2450
Mat Read #11,R11,0;S0$;
Mat Read #11,R11,60;S3;
Mat Read #11,R11,96;OL2$;
If S3[1] = 0 Goto L_2370
L_2410: If OL2$[11,16] = "      " Or OL2$[11,16] = "NONE  " Or OL2$[11,11] = ""
  OL2$[11,16] = "NONE  "
End If 
J4$[19,24] = OL2$[11,16] \ J4$[25,29] = R5 Using "#####"
J4$[30,35] = R11 Using "######"
Search #9,4,1;J4$,V1,E
!If E Gosub ERR_SEARCH
Goto L_2370
L_2450: Goto L_2230
L_2455: !Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
K1$ = " ",K1$ \ K3$ = " ",K3$ \ J1 = 999
J4$ = " ",J4$
L_2480: Search #9,3,1;K1$,R1,E
If E Goto L_9100
If K1$[1,1] >= "{" Goto L_2480
L_2495: If J4$[1,6] = "      " Let J4$ = K1$
If K1$[1,6] <> J4$[1,6] Gosub L_4000
If K1$[7,8] <> J4$[7,8] Gosub L_4300
J4$ = K1$
Mat Read #3,R1,0;H0;
Mat Read #3,R1,78;H4;
Mat Read #3,R1,104;H5;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
If H5[7] = 2 Or H5[7] = 5 Or H5[7] = 7 Goto L_2480
R4 = K1$[25,29]
R11 = K1$[30,35]
Mat Read #5,R4,8;L3;
Mat Read #5,R4,16;L4;
Mat Read #5,R4,56;L6;
Mat Read #5,R4,80;L1$;
Mat Read #5,R4,256;S2; \ Mat Read #5,R4,404;OLM;
Mat Read #5,R4,250;UN;
Mat Read #5,R4,140;L2$; \ Mat Read #5,R4,168;L7;
Mat Read #5,R4,446;EUN; \ Mat Read #5,R4,452;UNF;
If Not(L3[0]) Mat Read #11,R11,60;S3;
S3[0] = S3[1]
If L3[0] Let S3[0] = L7[4]
If H5[7] = 4 Let S3[0] = S3[5]
If F9 Let S3[0] = L9[1]
If Not(S3[0]) Goto L_2480
If L3 Goto L_2480
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A;
Mat Read #6,L4,944;PRA2$;
If Not(L3)
  Mat Read #6,L4,156;B;
  Mat Read #6,L4,0;A1$;
  Mat Read #6,L4,256;A;
  Mat Read #6,L4,512;PFU1;
  Mat Read #6,L4,554;PFU2;
  Mat Read #6,L4,944;PRA2$;
End If 
If A1$[127,127] <> "Y" Goto L_2480
L_2641: Gosub L_30000
CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 1 \ CNVTA = 1 \ Gosub L_20000 \ UNITX = AMOUNT
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1 \ CNVTA = S3[0] \ Gosub L_20000 \ S3[1] = AMOUNT
If Not(L3[0]) If L1$[58,60] <> A1$[123,125] Gosub L_8000
Gosub L_5800
Gosub L_5000
Goto L_2480
L_4000: Rem =================================== TRUCK TOTALS
Gosub L_4300
Gosub L_5800
J4$ = K1$
J1 = 90
Return 
L_4300: Rem =================================== ZONE TOTAL
Gosub L_5800
L_4330: J4$[7,8] = K1$[7,8]
Return 
L_5000: Rem =========print detail line for random weight picking list
If P9$[41,41] = "N"
  Gosub L_6050
  K7$[1,6] = LOC$[1,6]
Else 
  K7$[1,6] = K1$[19,24]
End If 
If K7$[1,6] = "NONE  " Or K7$[1,6] = "      " Or K7$ = ""
  Print #0; Tab 0;"______";
Else 
  Print #0; Tab 0;K7$[1,6];
End If 
If Fra(S3[1])
  Print #0; Using "#####.##"; Tab 7;S3[1];
Else 
  Print #0; Using "########"; Tab 7;S3[1];
  Print #0; Tab 17;SUNIT$;
End If 
Print #0; Tab 22;L1$[1,30];
Print #0; Tab 52;PRA2$[13,27];
Print #0; Tab 67;L2$[1,12];
Print #0;"" \ J1 = J1 + 1
Print #0;"" \ J1 = J1 + 1
Print #0; Using "######"; Tab 4;H0[7];
Print #0; Using "###"; Tab 10;L3[2];
For I = 1 To Int(S3[1])
  If Fra(I / 5)
    COUNT = I - Int(I / 5) * 5
    Print #0; Tab (20 + (COUNT - 1) * 12);"_____ ___";
  Else 
    COUNT = 5
    Print #0; Tab (20 + (COUNT - 1) * 12);"_____ ___";
    Print #0;"" \ J1 = J1 + 1
    Print #0;"" \ J1 = J1 + 1
    Gosub L_5800
  End If 
Next I
Print #0;"" \ J1 = J1 + 1
Print #0;"" \ J1 = J1 + 1
TOT[1] = TOT[1] + S3[1] \ TOT[2] = TOT[2] + S3[1]
Return 
L_5110: Rem UNPACK T2[21] TO N9[x]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_5800: Rem============heading for random weight picking list
If J1 < J7 Return 
J1 = J1 + 1
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
Print #0; Tab 0;"- 202RWT -"; Tab 30;CNAME$; Tab 72;"PAGE";J2
Print #0; Tab 30;"RANDOM WEIGHT LIST FOR ";DELV_DATE$;WEEKDAY_$
Print #0; Tab 0;Msc$(3);
Print #0; Using "FOR WAREHOUSE ## "; Tab 30;WH
Print #0; Using "##"; Tab 0;S5;" ZONE ";S2$[19,20];" ";WEEKDAY_$
Print #0;LINE_$[1,79]
Print #0; Tab 0;"PICK BIN";
Print #0; Tab 10;"QTY";
Print #0; Tab 22;"DESCRIPTION";
Print #0; Tab 52;"PACK/SIZE";
Print #0; Tab 67;"ITEM"
Print #0;" "
Print #0; Using "##"; Tab 0;S5;" ZONE ";S2$[19,20];" ";WEEKDAY_$
Print #0;""
Return 
L_6050: Rem =================================GET NON-RASL LOCATION
LOC$ = " ",LOC$;FIRST_LOC$ = " ",FIRST_LOC$
If R11 = 0 Return 
K14$ = " ",K14$;K14$[1,12] = A1$[140,151];K14$[13] = H4[2] Using "##"
Search #14,2,1;K14$,R14,E !\ If E > 2 Gosub ERR_SEARCH
If E > 0 Or K14$[1,12] <> A1$[140,151] Goto L_6078
Mat Read #14,R14,18;PL1;
If PL1[1] = 1 Let LOC$[1,6] = K14$[15,20] \ Goto L_6078
FIRST_LOC$ = K14$[15,20]
L_6066: Search #14,3,1;K14$,R14,E
If E = 2 Or K14$[1,12] <> A1$[140,151] Let LOC$ = FIRST_LOC$ \ Goto L_6078
!If E Gosub ERR_SEARCH
Mat Read #14,R14,18;PL1;
If PL1[1] <> 1 Goto L_6066
LOC$ = K14$[15,20]
L_6078: If LOC$ = "" Or LOC$[1,6] = "      " Or LOC$[1,4] = "NONE"
  LOC$ = "NONE  "
End If 
Return 
L_6400: Rem =================================== UNIT BREAK DOWN
If Not(Fra(S3[1])) Return 
If L3[0] Gosub L_30000 \ Goto L_6445
Mat Read #6,L4,512;PFU1;
Mat Read #6,L4,554;PFU2;
L_6445: Print #0; Tab 40;"(";
For X = 0 To 7 \ If PFU1[8] = PFU1[X] Goto L_6449
Next X
L_6449: If X If X <> 8 If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
For X = 7 To 0 Step -1
  If Not(X2) Goto L_6480
  If X If PFU2[X - 1] If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
Next X
Mat Read #10,PFU1[0],10;UNIT$;
If X2 Print #0;X2;UNIT$;
L_6480: Print #0;" )";
Return 
L_6490: Rem
Mat Read #10,PFU1[X],10;UNIT$;
Mat Read #10,PFU1[X],0;DESC$;
If DESC$[10,10] = "*" Goto L_6540
If Int(X2 / PFU2[X - 1]) Print #0;Int(X2 / PFU2[X - 1]);UNIT$;
X2 = X2 - (Int(X2 / PFU2[X - 1]) * PFU2[X - 1])
L_6540: Return 
L_6600: Rem ================================== SET STATUS
Mat Read #4,H0[2],8;S1$;
Return 
L_6900: Rem =================================== DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!L_7145: For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!  If J9$[J8,J8] = " " Goto L_7235
!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next J8
!If J0 = 5 Goto L_7265
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
errFlag = 0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1 !!Return 
X2 = X$[1,5] \ Return !1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem =================================== CONVERT UNITS TO PIECES
If Fra(S3[0]) Return 
If Not(A[37]) Let A[37] = 1
S3[0] = Int(S3[0])
L1$[58,60] = A1$[123,125]
Return 
OUTEND: Rem END
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  !External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"202rwt.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End
!Print 'CS'
!Chain "MX000C"
L_9100: Rem =================================== END OF THIS RANGE
Gosub L_4000
Print #0; Tab 20;"* * * END OF RW PICK LIST * * * "
J1 = J1 + 1
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
L_9160: Rem =================================== EXIT
goto OUTEND!!!
!L_9170: Print 'CS'
!Chain "MX000C"
!Stop 
L_13000: Rem "======================= create sort file
PORT_$ = Spc(6) \ PORT_$ = PORT_$[2,Len(PORT_$) - 1]
Read #1,88,912;FILE1$;
L_13040: If FILE1$[Len(FILE1$)] = " " Let FILE1$ = FILE1$[1,Len(FILE1$) - 1] \ Goto L_13040
COUNT = 0 \ Let FILE2$ = FILE1$ To "*" : COUNT !\ If Not(COUNT) Gosub ERR_SEARCH
!Print @0,22;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
FILE1$[COUNT] = PORT_$
Call FindF(FILE1$,FOUND)
If Err 0 Rem
Close #9 \ If Err 0 Gosub ERR_TRAP
If FOUND Kill FILE1$
FILE2$ = "[1:256] ",FILE1$
Build #9,FILE2$
Search #9,0,1;KEY_$,KSIZE,E !\ If E Gosub ERR_SEARCH
REC = 1000 \ Search #9,0,0;KEY_$,REC,E !\ If E Gosub ERR_SEARCH
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If L3[0] = 0 Return 
If S2[0] = 3 Goto L_30099
Mat A = Zer \ Mat B = Zer \ Mat PFU1 = Zer
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A[37] = UNF[4] \ If Not(A[37]) Let A[37] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End

Rem {end rtn.error.s}
