! >>> Program 464
!
! description Order / Quote Detail Listing
!
! loadsave -w -n 100,10 -o prog/dxport/464.dl4 src/464.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  6, 2004  15:24:22
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/mx/mx464.src (univ2) [mary] {30213}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX464 - ACME'S ORDER LISTING REPORT
Rem
Rem AUTHOR: per CCT 72161 & fax
! TXC - 216284 fix labels for bucket names
!
Declare Intrinsic Sub InpBuf,String,Time,DatetoJulian
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim J$[20],K1$[90],K2$[90],K8$[30],K9$[90],J1$[30],J8$[8],T9$[26]
Dim P9$[50],P60$[50],P0$[20],V0$[12],S1$[118],S2$[20],ENTDBY$[10]
Dim MTH$[110],A$[20],J4$[30],X$[20],SUM$[4],PUM$[4],PS$[2],CS$[2]
Dim A1$[142],A2$[30],A0$[68],P$[156],SL_S1$[118],L0$[60],L1$[20]
Dim STATUS$[12],TYPE$[20],TERM$[16],TAX$[20],EQU$[130],ULN$[131]
dim agebuckh$[75]
Dim 1%,H3[1],H4[2],S6[1],C2[2],PFU1[20],L3[3],UN[2],OL_S2[1],EUN[2]
Dim 1%,ARMONTH,CNVTU[2],X1[5],agebuck[3]
Dim 2%,COID,dt3[1],INCLUDEBOFLAG
Dim 2%,H0[12],H5[16],H6[8],S5,C1[12],C3[1],B[24],L4[3],L6[5],L9[1],LCO[1]
Dim 3%,R[30],RECS[10],TTLPRICE,TTLCOST,TTLPRFT,PRICE,PRFT
Dim 3%,SRN[4],T2[25],C4[6],C9,S1[12,2],S2[12,2],A[33],A1[7]
Dim 3%,PFU2[6],L5[3],L7[12],S3[17],OLM[6],UNF[6],CNVTA,AMOUNT
Def FNH(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) / 10)
Def FNT(X) = Sgn(X) * (Int(Abs(X) * 100) / 100)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
Def FNV(X) = Sgn(X) * (Int(Abs(X) * 100 + .9) / 100)
Def FNI(X) = Sgn(X) * (Int(Abs(X) + .5))
!
! - Print 'CS';
! - Print @0,0;"-MX464-";@30,0;"CUSTOMER ORDER LIST DETAIL"
! - 
! - Rem "what files to open
! - Print @0,2;"SELECT: 1: Orders  2: Quotes  0: exit   ";
!--Input Len 16384 + 1;""J$
!
Mat Read #1,0,100;J8$;
Read #1,0,120;ARMONTH;
Mat Read #1,3,0;J1$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
If Err 0 Let j8 = Spc(8)
j8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
J9 = 62 \ If j8 Let J9 = 22
!
!!! dx add xport reporting code
DXSetup: !
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"464",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
  !
  e$ = "This report isn't setup to display in xml format." \ Error 10000
End If 
! call dxsave(0,"tmp/464in.txt!")
!!!  dx add xport reporting code
Call dxget("rpttype",tmp$) \ ORDERS = tmp$ ! report for 1=orders  2=quotes 
Call dxget("sort",tmp$) \ SORT = tmp$ ! sort by 1=order  2=salesman  3=customer 4=entered by
Call dxget("begorder",tmp$) \ If tmp$ = "" Let ORD[1] = 0 Else Let ORD[1] = tmp$ ! beg order
Call dxget("endorder",tmp$) \ If tmp$ = "" Let ORD[2] = 999999 Else Let ORD[2] = tmp$ ! end order
Call dxget("begslsm",tmp$) \ If tmp$ = "" Let SLM[1] = 0 Else Let SLM[1] = tmp$ ! beg salesman
Call dxget("endslsm",tmp$) \ If tmp$ = "" Let SLM[2] = 999 Else Let SLM[2] = tmp$ ! end salesman
Call dxget("begcust",tmp$) \ If tmp$ = "" Let CUST[1] = 0 Else Let CUST[1] = tmp$ ! beg customer
Call dxget("endcust",tmp$) \ If tmp$ = "" Let CUST[2] = 999999 Else Let CUST[2] = tmp$ ! end customer
Call dxget("begenterby",tmp$) \ If tmp$ = "" Let SENTBY = 0 Else Let SENTBY = tmp$ ! beg entered by
Call dxget("endenterby",tmp$) \ If tmp$ = "" Let ENDENTBY = 999 Else Let ENDENTBY = tmp$ ! end entered by
Call dxget("whse",tmp$) \ If tmp$ = "" Let WHSE = 0 Else Let WHSE = tmp$ ! warehouse
Call dxget("otyp",tmp$) \ If tmp$ = "" Let OTYP = 0 Else Let OTYP = tmp$ ! order type
Call dxget("div",tmp$) \ If tmp$ = "" Let DIV = 0 Else Let DIV = tmp$ ! division
call dxget("ssdate",tmp$) \ if tmp$="" let tmp$="010100"
X$=tmp$[5,6]+tmp$[1,4] ! comes in as MMDDYY - switch to YYMMDD
let sdate=X$
!! REM IF BLANK STARTING DATE, THEN ALLOW B/O (DATE=999999)
LET INCLUDEBOFLAG=0                                        
IF X$="000101" LET INCLUDEBOFLAG=1                         
!                                                          
call dxget("esdate",tmp$) \ if tmp$="" let tmp$="123159"
X$=tmp$[5,6]+tmp$[1,4] ! comes in as MMDDYY - switch to YYMMDD
let edate=X$
!!!  dx end
!
! report for
If ORDERS = 2 Let ORDERS = 0 ! for quotes
!
! order params
If ORD[1] < 0 Or ORD[1] > 999999 Let e$ = "Invalid beginning order, must be between 0 and 999999!" \ Error 10000
If ORD[2] < ORD[1] Or ORD[2] > 999999 Let e$ = "Invalid ending order, must be between starting order and 999999!" \ Error 10000
!
! salesman params
If SLM[1] < 0 Or SLM[1] > 999 Let e$ = "Invalid starting salesman, must be between 1 and 999!" \ Error 10000
If SLM[2] < SLM[1] Or SLM[2] > 999 Let e$ = "Invalid ending salesman, must be between starting salesman and 999!" \ Error 10000
!
! customer params
If CUST[1] < 0 Or CUST[1] > 999999 Let e$ = "Invalid beginning customer, must be between 0 and 999999!" \ Error 10000
If CUST[2] < CUST[1] Or CUST[2] > 999999 Let e$ = "Invalid ending customer, must be between starting customer and 999999!" \ Error 10000
!
! entered by params
If SENTBY < 0 Or SENTBY > 999 Let e$ = "Invalid starting entered by, must be between 1 and 999!" \ Error 10000
If ENDENTBY < SENTBY Or ENDENTBY > 999 Let e$ = "Invalid ending entered by, must be between starting entered by and 999!" \ Error 10000
!
! warehouse
If WHSE < 0 Or WHSE > 99 Let e$ = "Invalid warehouse, must be between 1 and 99!" \ Error 10000
!
! order type
If OTYP < 0 Or OTYP > 40 Let e$ = "Invalid order type, must be between 1 and 40!" \ Error 10000
!
! division
If DIV < 0 Or DIV > 99 Let e$ = "Invalid division, must be between 1 and 99!" \ Error 10000
! ship dates
X$ =sdate Using "&&&&&&" \ Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "0"
Jsdate=x$
X$ = edate Using "&&&&&&" \ Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "0"
let jedate=x$
if (jsdate=0 and jedate=0) or jsdate>jedate
	let e$="Invalid date range"
	error 10000
Endif
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
! - If J$ = "0" Goto OUTEND
! - If J$ <> "1" And J$ <> "2" Goto WHTFLES
! - If J$ = "1" Let ORDERS = 1
! - If J$ = "2" Let ORDERS = 0
! - COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
!
For J = 2 To 14
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$[1,16];
  Ropen #J,J$
L_830: Next J
Data "1792","1808","1824","-1","-1","-1","-1","-1","2064","720","1664","1728","2176"
If ORDERS ! "open Order Files
  Read #1,88,1840;J$[1,16];
  Ropen #5,J$
  Read #1,88,1856;J$[1,16];
  Ropen #6,J$
  Read #1,88,1872;J$[1,16];
  Ropen #7,J$
  Read #1,88,1888;J$[1,16];
  Ropen #8,J$
Else ! "Open Quote files
  Read #1,88,1280;J$[1,16];
  Ropen #5,J$
  Read #1,88,1392;J$[1,16];
  Ropen #6,J$
  Read #1,88,2656;J$[1,16];
  Ropen #7,J$
  Read #1,88,1344;J$[1,16];
  Ropen #8,J$
End If 
!
J$ = "2/ARTERMCODE" + Str$(intCO) \ Ropen #50,J$
!
MTH$ = "JAN      FEB      MAR      APR      MAY      JUN      JUL"
MTH$ = MTH$ + "      AUG      SEP      OCT      NOV      DEC"
mat read #1,20,130;agebuck;
! aging bucket headings
agebuckh$=" ",agebuckh$
let agebuckh$[1,8]="CURRENT "
if p9$[50,50]="M" ! age by month
	if p9$[25,25]="Y" ! age by due date
		let agebuckh$[15,22]="PAST DUE"
		let agebuckh$[30,37]="OVER 1MO"
		let agebuckh$[45,52]="OVER 2MO"
		let agebuckh$[60,67]="OVER 3MO"
	else
		let agebuckh$[15,22]="OVER 1MO"
		let agebuckh$[30,37]="OVER 2MO"
		let agebuckh$[45,52]="OVER 3MO"
		let agebuckh$[60,67]="OVER 4MO"
	endif
else
	for x=0 to 3
		let agebuckh$[((x*15)+15),((x*15)+22)]=agebuck[x] using "OVER ###"
	next x
	if p9$[25,25]="Y" and agebuck[0]=0
		let agebuckh$[15,22]="PAST DUE"
	endif
endif
!
! - L_900: Rem SORT TYPE
! - Print 'CS';@0,0;"MX464";@30,0;"CUSTOMER ";
! - If ORDERS Print "ORDER "; Else Print "QUOTE ";
! - Print "LIST DETAIL"
! - Print @0,2;'CE';"SORT OPTIONS:    1 ";
! - !--If ORDERS Print "ORDER"; Else Print "QUOTE";
! - Print @17,3;"2 SALESMAN"
! - Print @17,4;"3 CUSTOMER/SHIPLIST"
! - Print @17,5;"4 ENTERED BY NUMBER"
! - Print @17,6;"E EXIT";
! - 
! - L_930: !--Print @10,7;"ENTER SORT OPTION:  ";
! - 
! - !Input ""J$ \ If J$ = "E" Goto OUTEND
! - X2 = J$[1,2] \ If X2 > 0 If X2 < 5 If Not(Fra(X2)) Goto L_950
! - 
! - !Print @0,6;'RB CE'; \ Goto L_930
! - 
! - L_950: SORT = X2
! - 
! - L_960:!--Print @0,8;'CE';"ENTER STARTING ";
! - 
! - !--If ORDERS Print "ORDER, "; Else Print "QUOTE, ";
! - !--Print "<CR>:ALL, OR E:EXIT   ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let ORD[1] = 0;ORD[2] = 999999 \ Goto L_1000
! - ORD[1] = J$
! - !--Print @0,9;"  ENTER ENDING ";
! - !--If ORDERS Print "ORDER, "; Else Print "QUOTE, ";
! - !--Print "<CR>:LAST, OR E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let J$ = "999999"
! - ORD[2] = J$
! - L_1000: If ORD[1] <= ORD[2] Goto L_1020
! - !--Print @0,22;'RB CE';"INVALID RANGE ENTERED!"; \ Signal 3,20
! - Goto L_960
! - 
! -  L_1020: !--Print @0,10;'CE';"ENTER STARTING SALESPERSON, <CR>:ALL,  OR E:EXIT  ";
! - 
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let SLM[1] = 0;SLM[2] = 9999 \ Goto L_1080
! - SLM[1] = J$
! - !--Print @0,11;"  ENTER ENDING SALESPERSON, <CR>:LAST, OR E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let J$ = "9999"
! - SLM[2] = J$
! - L_1080: If SLM[1] <= SLM[2] Goto L_1100
! - !--Print @0,22;'RB CE';"INVALID RANGE ENTERED!"; \ Signal 3,20
! - Goto L_1020
! - L_1100: Rem CUSTOMER
! - 
! - !--Print @0,12;'CE';"ENTER STARTING CUST #, <CR>:ALL,  OR E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let CUST[1] = 0;CUST[2] = 999999 \ Goto L_1180
! - CUST[1] = J$
! - !--Print @0,13;"  ENTER ENDING CUST #, <CR>:LAST, OR E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let J$ = "999999"
! - CUST[2] = J$
! - L_1180: If CUST[1] <= CUST[2] Goto EDT_ENTBY
! - !--Print @0,22;'RB CE';"INVALID RANGE ENTERED!"; \ Signal 3,20
! - Goto L_1100
! - EDT_ENTBY: Rem entered by number
! - !--Print @0,14;'CE';"ENTER STARTING ENTERED BY#, <CR>:ALL,  OR E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let SENTBY = 0;ENDENTBY = 999 \ Goto END_ENTBY
! - SENTBY = J$
! - !--Print @0,15;"  ENTER ENDING ENTERED BY#, <CR>:LAST, OR E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let J$ = "999"
! - ENDENTBY = J$
! - END_ENTBY: If SENTBY <= ENDENTBY Goto L_1200
! - !--Print @0,22;'RB CE';"INVALID RANGE ENTERED!"; \ Signal 3,20
! - Goto EDT_ENTBY
! - L_1200: Rem WHSE,TYPE,DIVISION
! - Print @0,17;"ENTER WHSE NUMBER, <CR>:ALL, E:EXIT   ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - !--If J$ = "" Let J$ = "00"
! - WHSE = J$ \ If WHSE >= 0 If WHSE <= 99 If Not(Fra(WHSE)) Goto L_1250
! - !--Print @0,17;'RB CE';
! - Goto L_1200
! - L_1250: !--Print @0,18;"ENTER ORDER TYPE, <CR>:ALL, E:EXIT  ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let J$ = "00"
! - OTYP = J$
! - If OTYP >= 0 If OTYP <= 40 If Not(Fra(OTYP)) Goto L_1300
! - !--Print @0,18;'RB CE';
! - Goto L_1250
! - L_1300: Rem
! - !--Print @0,19;"ENTER DIVISION, <CR>:ALL, E:EXIT   ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "" Let J$ = "00"
! - DIV = J$[1,2]
! - If DIV >= 0 If DIV <= 99 If Not(Fra(DIV)) Goto L_1350
! - !--Print @0,19;'RB CE';
! - Goto L_1300
! - L_1350: Rem THIS SPACE AVAILABLE
! - L_1500: Rem DONE
! - !--Print @0,22;'CE';"ENTER  R:reselect, P:print, E:exit   ";
! - !--Input ""J$ \ If J$ = "E" Goto OUTEND
! - If J$ = "R" Goto L_900
! - If J$ <> "P" Goto L_1500
!
! *** Sort Section
!--Print @0,22;'CE';"CLEARING SORT FILE, PLEASE WAIT . ." \ Signal 3,0
K1$ = " ",K1$
L_1620: Search #9,3,1;K1$,R9,E
If E = 2 Goto L_1650
Search #9,5,1;K1$,R9,E
If E Let e$ = "syserrorfile 464 sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",E," keyval (k$)=",K1$ \ Error 10000
Goto L_1620
!
L_1650: Rem THRU ORDER HEADER
!--Print @0,22;'CE';"SORTING FILE, PLEASE WAIT . ." \ Signal 3,0
K1$ = " ",K1$
L_1660: Search #5,3,1;K1$,R1,E
If E = 2 Goto L_1900
If K1$[1,2] > "10" Goto L_1900
If K1$[1,2] > " 6" If K1$[1,2] < " 9" Let K1$ = " 9    " \ Goto L_1660
Mat Read #5,R1,0;H0;
Mat Read #5,R1,78;H4;
Mat Read #5,R1,104;H5;
If H0[7] < ORD[1] Goto L_1660
If H0[7] > ORD[2] Goto L_1660
If H0[11] < SLM[1] Goto L_1660
If H0[11] > SLM[2] Goto L_1660
If H0[4] < CUST[1] Goto L_1660
If H0[4] > CUST[2] Goto L_1660
If H5[0] < SENTBY Goto L_1660
If H5[0] > ENDENTBY Goto L_1660
If WHSE If H4[2] <> WHSE Goto L_1660
If OTYP If H5[7] <> OTYP Goto L_1660
If DIV If H5[8] <> DIV Goto L_1660
if h0[10]<>999999
	LET X$=H0[10] using "&&&&&&" \ Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "0" 
	LET jdate=X$
Else
	let jdate=0
!! REM IF B/O (DATE=999999) ALLOWED, SET DATE = STARTING DATE
        IF INCLUDEBOFLAG=1  LET JDATE=JSDATE                 
Endif
IF jdate<jsdate goto L_1660:
IF jdate>jedate goto L_1660:
Mat Read #6,H0[2],154;SRN;
SHIPTO = 0
If SRN[3] = 0 Let SHIPTO = H0[4]
If SRN[3] = 2 Let SHIPTO = SRN[1]
If SRN[3] = 4 Let SHIPTO = SRN[2]
If SRN[3] = 5 Let SHIPTO = 999999
K9$ = " ",K9$
If SORT = 1 Let K9$[1,6] = H0[7] Using "######"
If SORT = 2 Let K9$[3,6] = H0[11] Using "####"
If SORT = 3 Let K9$[1,6] = H0[4] Using "######"
If SORT = 3 Let K9$[7,12] = SHIPTO Using "######"
If SORT = 4
  K9$[1,3] = H5[0] Using "###"
  K9$[4,7] = H0[11] Using "####"
End If 
K9$[13,20] = K1$[1,8]
E = 0;R9 = R1
Search #9,4,1;K9$,R9,E
If E Let e$ = "syserrorfile 464 sortfile mode (m)=4 keyno (k)=1 r=",R9," e=",E," keyval (k$)=",K9$ \ Error 10000
Goto L_1660
!
! *** Process Section
L_1900: Rem START PRINT
K9$ = " ",K9$
K2$ = " ",K2$
! - Print @0,22;'CE';"PRINTING, PLEASE WAIT . ." \ Signal 3,0
! - If Err 0 Gosub ERR_ESCAPE
If J2 If j8 = 0 Print #0;"\14\";
J1 = 90;J2 = 0
EQU$ = "=",EQU$;ULN$ = "-",ULN$
L_2000: Search #9,3,1;K9$,R1,E
If E = 2 Goto OUTEND
If K1$[1,3] = "   " Let K1$ = K9$
R[5] = R1 \ Gosub L_6000
Gosub L_3000
If H0[1] If H0[1] <> H0[4] Gosub L_3100
Gosub L_3200
Gosub L_3300
K8$ = " ",K8$;K8$ = H0[7] Using "######"
Search #8,2,1;K8$,R8,E
If E = 1 Goto L_2000
Gosub L_5800
TTLPRICE = 0;TTLCOST = 0;TTLPRFT = 0
Gosub L_5500
K8$ = " ",K8$;K8$[1,6] = H0[7] Using "######"
L_2100: Search #8,3,1;K8$,R[8],E
If E = 2 Goto L_2200
X2 = K8$[1,6] \ If X2 <> H0[7] Goto L_2200
If K8$[7,9] = "   " Goto L_2100
Gosub L_6400
If OL_S2[0] = 3 Goto JSTPRNT
If Not(L3[0])
  R[2] = L4[0] \ Gosub L_6200
Else 
  Gosub L_2500
End If 
If H0[0] >= 9 ! "switch sign for c/m per cct 82878
  For X = 2 To 4 \ L7[X] = L7[X] * (-1) \ Next X
  L5[3] = L5[3] * (-1) \ S3[12] = S3[12] * (-1)
End If 
Gosub L_3400
JSTPRNT: Rem "Print Line
J1 = J1 + 1 \ Gosub L_5800
Gosub L_5000
Goto L_2100
!
L_2200: Rem DONE WITH LINES
J1 = J1 + 4 \ Gosub L_5800
Print #0;ULN$
If H0[0] >= 9 ! "switch signs for c/m per cct 82878
  For X = 0 To 7 \ T2[X] = T2[X] * (-1) \ Next X
  H5[13] = H5[13] * (-1) \ H5[14] = H5[14] * (-1)
End If 
Print #0; Using "-------#.##"; Tab 77;"SUBTOTAL"; Tab 87;TTLPRICE; Tab 99;TTLCOST;
Print #0; Using "-------#.##"; Tab 110;TTLPRFT;
GP = 0
If TTLPRICE Let GP = FNH(TTLPRFT * 100 / TTLPRICE)
Print #0; Using "---#.#"; Tab 122;GP
If T2[7] Print #0; Using "-------#.##"; Tab 30;"TAX "; Tab 35;T2[7];
If T2[5] Print #0; Using "-------#.##"; Tab 48;"FREIGHT"; Tab 56;T2[5];
Print #0; Using "-------#.##"; Tab 77;"TOTAL"; Tab 87;T2[0];
If T2[20] Print #0; Using "-------#.##"; Tab 99;T2[20];" FREIGHT COST"
Print #0; Using "-------#.##"; Tab 99;H5[14]; Tab 110;H5[13] - H5[14];
If H5[13] Let TOTGP = FNH(((H5[13] - H5[14]) * 100) / H5[13])
Print #0; Using "---#.#"; Tab 122;TOTGP;
Print #0;""
Print #0;ULN$
J1 = J1 + 11 \ Gosub L_5800
Gosub L_5200
Print #0;ULN$
J1 = J1 + 10 \ Gosub L_5800
Print #0; Tab 1;"A/R AND CREDIT INFORMATION:"
Print #0; Using "######"; Tab 1;"BILL-TO NO. :"; Tab 18;H0[1];
Print #0; Tab 30;"ACCT OPENED  :  ";A0$[1,8]
Print #0; Using "########.##"; Tab 1;"ON ORDER    :";C9;
X2 = C3[1] \ Gosub L_7700
Print #0; Tab 30;"LAST PAY DATE:  ";X$[1,8]
Print #0; Using "-------#.##"; Tab 1;agebuckh$[1,12];":";C4[0];
Print #0; Using "------#.##"; Tab 30;"LAST PAY AMT :";C4[6]
Print #0; Using "-------#.##"; Tab 1;agebuckh$[15,26];":";C4[2];
Print #0; Using "------#.##"; Tab 30;"AVG. PAY DAYS:";C1[10]
Print #0; Using "-------#.##"; Tab 1;agebuckh$[30,41];":";C4[3]
! IF THERE WAS HIGH CREDIT - IT GOES HERE
Print #0; Using "-------#.##"; Tab 1;agebuckh$[45,56];":";C4[4]
Print #0; Using "-------#.##"; Tab 1;agebuckh$[60,71];":";C4[5]
Print #0; Using "-------#.##"; Tab 1;"UNAPP CREDIT:";C4[1]
TTLCRD = C4[0] + C4[2] + C4[3] + C4[4] + C4[5] - C4[1] + C9
Print #0; Using "-------#.##"; Tab 1;"TOTAL CREDIT:";TTLCRD
J1 = 90
Goto L_2000
!
L_2500: Rem ===== set units for conversions (nonstock version)
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 
!
L_3000: Rem GET CUSTOMER
K2$ = " ",K2$;K2$ = H0[4] Using "######"
Search #3,2,1;K2$,R[3],E
If E = 1 Return 
Gosub L_6100
Search #11,2,1;K2$,R[11],E
If E = 1 Goto L_3080
Mat Read #11,R[11],100;A0$;
Return 
!
L_3080: Rem NO NOTES
A0$ = " ",A0$
Return 
!
L_3100: Rem GET BILL TO A/R
K2$ = " ",K2$;K2$ = H0[1] Using "######"
Search #3,2,1;K2$,R3,E
If E = 1 Return 
Read #3,R3,182;C1[10];
Mat Read #3,R3,200;C3;
Mat Read #3,R3,210;C4;
Return 
!
L_3200: Rem SALESMAN NAME
K2$ = " ",K2$;K2$[1,3] = H0[11] Using "###"
Search #4,2,1;K2$,R[4],E
If E = 1 Goto L_3270
Gosub L_6300
Return 
L_3270: Rem SLSM INVALID
SL_S1$ = " ",SL_S1$
SL_S1$ = "SALESPERSON NOT ON FILE!"
Return 
!
L_3300: Rem MISC OTHER FILES READ
STATUS$ = " ",STATUS$
If ORDERS
  If H0 = 1 Let STATUS$ = "ORD ENTERED"
  If H0 = 2 Let STATUS$ = "ORD PRINTED"
  If H0 = 3 Let STATUS$ = "ORD REG'D"
  If H0 = 4 Let STATUS$ = "RDY TO SHIP"
  If H0 = 5 Let STATUS$ = "INV ENTERED"
  If H0 = 6 Let STATUS$ = "INV PRINTED"
  If H0 = 9 Let STATUS$ = "C/M ENTERED"
  If H0 = 10 Let STATUS$ = "C/M PRINTED"
Else 
  If H0 = 1 Let STATUS$ = "QTE ENTERED"
  If H0 = 2 Let STATUS$ = "QTE PRINTED"
  If H0 = 3 Let STATUS$ = "QTE REG'D"
  If H0 = 4 Let STATUS$ = "ORD CREATED"
End If 
If H0 > 80 Let STATUS$ = "IN PROCESS"
TYPE$ = " ",TYPE$ \ If H5[7] < 1 Goto L_3340
Read #1,62,(H5[7] * 20 - 20);TYPE$;
L_3340: TERM$ = " ",TERM$
If H0[12] = 0
  TERM$ = "CASH SALE"
Else 
  If H0[12] > 0 And H0[12] <= 99
    Read #50,H0[12],0;TERM$;
  End If 
End If 
L_3350: TAX$ = " ",TAX$
Read #14,H4[0],0;TAX$;
ENTDBY$ = " ",ENTDBY$
Mat Read #12,H5[0],0;ENTDBY$;
Return 
!
L_3400: Rem CONVERSION OF UNITS
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1
CNVTA = L7[2] \ Gosub L_20000
QORD = AMOUNT
CNVTA = L7[4] \ Gosub L_20000
QSHIP = AMOUNT
CNVTA = L7[3] \ Gosub L_20000
QBO = AMOUNT
SUM$ = "    "
If UN[0] > 0 Read #13,UN[0],10;SUM$;
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2
CNVTA = OLM[3] \ Gosub L_20000
PRICE = AMOUNT
PUM$ = "    "
If UN[1] = -1 Let PUM$ = "CWT "
If UN[1] = -2 Let PUM$ = "LOT "
If UN[1] > 0 Read #13,UN[1],10;PUM$;
TTLPRICE = TTLPRICE + L5[3];TTLCOST = TTLCOST + S3[12];PRFT = FNR(L5[3] - S3[12])
TTLPRFT = TTLPRFT + PRFT
Return 
!
L_5000: Rem LINE ITEM DETAIL
Print #0; Using "###"; Tab 1;L3[2];
If OL_S2[0] <> 3 ! "not a Z-Line
  Print #0; Tab 5;L1$[1,11];
  Print #0; Using "------#"; Tab 16;FNI(QORD); Tab 23;FNI(QSHIP);
  Print #0; Using "-----#"; Tab 30;FNI(QBO); Tab 37;SUM$;
End If 
Print #0; Tab 42;L0$[1,30];
If OL_S2[0] <> 3 ! "not a Z-Line
  Print #0; Using "######.##"; Tab 72;PRICE;" /";PUM$;" ";PS$[1,1];
  Print #0; Using "-------#.##"; Tab 86;L5[3];" ";CS$[1,1]; Tab 99;S3[12];
  Print #0; Using "------#.##"; Tab 110;PRFT;
  GP = 0
  If L5[3] Let GP = FNH(PRFT * 100 / L5[3])
  Print #0; Using "---#.#"; Tab 122;GP;
  If L6[5] Print #0;" T";
End If 
Print #0;""
If P9$[26,26] = "Y" And L0$[31,40] <> "          "
  Print #0; Tab 42;L0$[31,60]
  J1 = J1 + 1
End If 
Return 
!
L_5200: Rem PRINT CUST SALES HISTORY
Print #0; Tab 1;"CUSTOMER SALES HISTORY:"
Print #0;""
Print #0; Tab 1;"THIS YEAR"; Tab 13;MTH$; Tab 122;"YTD"
Print #0; Tab 1;"SALES ";
S1[0,1] = 0 \ For I = 1 To ARMONTH
  S1[0,1] = S1[0,1] + S1[I,1]
  Print #0; Using "--------#";FNI(S1[I,1]);
Next I
Print #0; Using "--------#"; Tab 116;FNI(S1[0,1])
Print #0; Tab 1;"PROFIT";
S1[0,2] = 0 \ For I = 1 To ARMONTH
  S1[0,2] = S1[0,2] + S1[I,2]
  Print #0; Using "--------#";FNI(S1[I,1] - S1[I,2]);
Next I
Print #0; Using "--------#"; Tab 116;FNI(S1[0,1] - S1[0,2])
Print #0; Tab 1;"GP %  ";
For I = 1 To ARMONTH
  GP = 0
  If S1[I,1] Let GP = FNH((S1[I,1] - S1[I,2]) * 100 / S1[I,1])
  Print #0; Using "-------.#";GP;
Next I
GP = 0
If S1[0,1] Let GP = FNH((S1[0,1] - S1[0,2]) * 100 / S1[0,1])
Print #0; Using "-------.#"; Tab 116;GP
Print #0;""
Print #0; Tab 1;"LAST YEAR"
Print #0; Tab 1;"SALES ";
S2[0,1] = 0 \ For I = 1 To ARMONTH
  S2[0,1] = S2[0,1] + S2[I,1]
  Print #0; Using "--------#";FNI(S2[I,1]);
Next I
Print #0; Using "--------#"; Tab 116;FNI(S2[0,1])
Print #0; Tab 1;"PROFIT";
S2[0,2] = 0 \ For I = 1 To ARMONTH
  S2[0,2] = S2[0,2] + S2[I,2]
  Print #0; Using "--------#";FNI(S2[I,1] - S2[I,2]);
Next I
Print #0; Using "--------#"; Tab 116;FNI(S2[0,1] - S2[0,2])
Print #0; Tab 1;"GP %  ";
For I = 1 To ARMONTH
  GP = 0
  If S2[I,1] Let GP = FNH((S2[I,1] - S2[I,2]) * 100 / S2[I,1])
  Print #0; Using "-------.#";GP;
Next I
GP = 0
If S2[0,1] Let GP = FNH((S2[0,1] - S2[0,2]) * 100 / S2[0,1])
Print #0; Using "-------.#"; Tab 116;GP
Return 
!
L_5500: Rem ORDER HEADER INFO
J1 = J1 + 12 \ Gosub L_5800
If H0[0] <> 9
  If ORDERS Print #0; Tab 1;"ORDER "; Else Print #0; Tab 1;"QUOTE ";
  Print #0; Using "######";"NO. : ";H0[7];
End If 
If H0[0] = 9 Print #0; Using "######"; Tab 1;"CREDIT NO.: ";H0[7];
Print #0; Tab 26;"SOLD TO: ";A1$[31,60];
Print #0; Tab 68;"SHIP TO: ";S1$[1,30];
Print #0; Using "######"; Tab 109;"STORE#: ";SRN[1]
Print #0; Tab 35;A1$[61,90]; Tab 77;S1$[31,60]
Print #0; Tab 35;A1$[91,120]; Tab 77;S1$[61,90];
Print #0; Tab 109;"STATUS: ";STATUS$
Print #0; Tab 35;A1$[121,135];" ";A1$[136,137];" ";A2$[1,10];
Print #0; Tab 77;S1$[91,105];" ";S1$[106,107];" ";S1$[108,117];
Print #0; Tab 109;"TYPE  : ";TYPE$[1,15]
Print #0; Using "##"; Tab 109;"WHSE  : ";H4[2]
Print #0; Using "######"; Tab 1;"CUSTOMER #: ";H0[4];
Print #0; Tab 22;"SALESMAN:";SL_S1$[1,26];
X2 = H0[9] \ Gosub L_7700
Print #0; Tab 57;"ORDERED :";X$[1,8];
If ORDERS Print #0; Tab 76;"DUE DATE  :"; Else Print #0; Tab 76;"CANC DATE :";
X2 = H5[1] \ Gosub L_7700 \ Print #0;X$[1,8];
Print #0; Tab 97;"P.O. # : ";P0$
Print #0; Tab 1;"SHIP. ZONE:     ";S2$[19,20];
Print #0; Tab 22;"TERMS   :";TERM$; Tab 57;"SHIPPED :";
X2 = H0[10] \ Gosub L_7700 \ Print #0;X$[1,8];
Print #0; Using "WRITTEN BY: ### "; Tab 76;H5[0];
Print #0;ENTDBY$
Print #0; Using "####"; Tab 1;"PRICE TYPE:   ";C1[7];
Print #0; Tab 22;"SHIP VIA:";V0$; Tab 57;"INVOICED:";
If ORDERS Let X2 = H0[8] \ Gosub L_7700 \ Print #0;X$[1,8];
Print #0;""
Print #0; Using "###"; Tab 1;"DIVISION  :    ";H5[8];
Print #0; Tab 22;"TAX JUR.:";TAX$;
Print #0; Tab 57;"ON HOLD?: ";
If T2[21] Print #0;"YES"; Else Print #0;" NO";
Print #0;""
Print #0;ULN$
Print #0; Tab 1;"LN# ITEM NO.";
Print #0; Tab 18;"QORD"; Tab 25;"QSHIP"; Tab 33;"QBO U/M";
Print #0; Tab 50;"DESCRIPTION"; Tab 77;"PRICE/PER";
Print #0; Tab 89;"EXTENSION"; Tab 102;"EXT COST";
Print #0; Tab 114;"PROFIT"; Tab 123;"GP%";"   TX"
Print #0;ULN$
Return 
!
L_5800: Rem PRINT HEADER
If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(j8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(j8) Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 464 - ";T9$;
Print #0; Tab 45;"C U S T O M E R   ";
If ORDERS Print #0;"O R D E R   "; Else Print #0;"Q U O T E   ";
Print #0;"D E T A I L";
Print #0;"\15\"
Print #0;EQU$
Return 
!
L_6000: Rem READ HEADER,SHIPLIST,TOTALS
Mat Read #5,R[5],0;H0;
Mat Read #5,R[5],52;H3;
Mat Read #5,R[5],66;V0$;
Mat Read #5,R[5],78;H4;
Mat Read #5,R[5],104;H5;
Mat Read #5,R[5],408;H6;
Mat Read #5,R[5],446;P0$;
Mat Read #6,H0[2],8;S1$;
Mat Read #6,H0[2],126;S2$;
Mat Read #6,H0[2],146;S5;
Mat Read #6,H0[2],150;S6;
Mat Read #6,H0[2],154;SRN;
Mat Read #7,H0[3],8;T2;
Return 
!
L_6100: Rem READ CUSTOMER
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],142;C1;
Mat Read #3,R[3],194;C2;
Mat Read #3,R[3],200;C3;
Mat Read #3,R[3],210;C4;
Mat Read #3,R[3],348;A2$;
Read #3,R[3],412;C9;
Mat Read #10,R[3],4;S1;
Mat Read #10,R[3],238;S2;
Return 
!
L_6200: Rem READ PRODUCT
Mat Read #2,R[2],0;P$;
Mat Read #2,R[2],156;B;
Mat Read #2,R[2],256;A;
Mat Read #2,R[2],460;A1;
Mat Read #2,R[2],512;PFU1;
Mat Read #2,R[2],554;PFU2;
Return 
!
L_6300: Rem SALESMAN NAME
Mat Read #4,R[4],0;SL_S1$;
Return 
!
L_6400: Rem READ LINE
Mat Read #8,R[8],8;L3;
Mat Read #8,R[8],16;L4;
Mat Read #8,R[8],32;L5;
Mat Read #8,R[8],56;L6;
Mat Read #8,R[8],80;L0$;
Mat Read #8,R[8],140;L1$;
Mat Read #8,R[8],168;L7;
Mat Read #8,R[8],160;L9;
Mat Read #8,R[8],250;UN;
Mat Read #8,R[8],256;OL_S2;
Mat Read #8,R[8],260;S3;
Mat Read #8,R[8],404;OLM;
Mat Read #8,R[8],446;EUN;
Mat Read #8,R[8],452;UNF;
Mat Read #8,R[8],494;LCO;
Gosub L_6500
Return 
!
L_6500: Rem SET PRICE ORIG AND COST ORIG
PS$ = "  "
If L9[0] = 1 Or L9[0] = 5 Or L9[0] = 9 Let PS$ = "S"
spcl=0 \ if L9[0]>=2 AND L9[0]<=4 let spcl=1
if L9[0]>=6 AND L9[0]<=8 let spcl=1
if L9[0]>=11 AND L9[0]<=13 let spcl=1
if l9[0]=15 or l9[0]=16 let spcl=1
IF spcl
  If OLM[2]
    PS$ = "C"
  Else 
    PS$ = "*"
  End If 
End If 
CS$ = "  "
If LCO[0] = 10 Let CS$ = "R"
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
! - X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
! - X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
! - Return 
!
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
! - L_9100: Rem DONE
! - Goto L_900
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20030
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20055
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20055
If CNVTU[2] = 0 Goto L_20030
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20055
L_20030: Gosub L_20060
If CNVTU[2] = 3 Goto L_20055
If CNVTU[2] = 0 Goto L_20055
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
L_20055: Return 
!
L_20060: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT (INTERNAL VERSION)
CONVFLAG = 0
If CNVTU[2] <> 5 Goto L_20115
CONVFLAG = 1
CNVTU[2] = 1
Goto L_20120
L_20115: CONVFLAG = 0
L_20120: SR = 8
SC = 12
On CNVTU[2] + 1 Goto L_20145,L_20195,L_20195 ! - was ,L_20340
! - E = 0 \ Gosub ERR_SEARCH
L_20145: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20185
  If CNVTU[X1[1]] = -1 Goto L_20185
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20185
  Next X1[2]
  FLAG = 1 \ Return 
L_20185: Next X1[1]
FLAG = 0 \ Return 
L_20195: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20285
  If CNVTU[X1[1]] = -1 Goto L_20250
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20245
  Next CUNIT
  FLAG = 0 \ Return 
L_20245: If CUNIT = 0 Goto L_20285
L_20250: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] <> -1 Goto L_20275
  If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
  If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Goto L_20285
L_20275: If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
  If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
L_20285: Next X1[1]
If CNVTU[2] <> 1 Or CONVFLAG Goto L_20310
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNI(AMOUNT)
L_20310: If CNVTU[2] <> 2 Goto L_20335
If Not(CNVTU[1]) Goto L_20335
If P9$[42,42] = "N" Let AMOUNT = FNR(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20335: FLAG = 0 \ Return 
!
! - L_20340: Rem DISPLAY VALID UNITS
! - Window Open @SC,SR; Size 32,11; Using " VALID UNITS "
! - X1[1] = 1
! - For X1 = 0 To 7
! -   RECS[X1[1]] = 0 \ If Not(PFU1[X1]) Goto L_20385
! -   Read #26,PFU1[X1];A$;
! -   Print Using "#. ";X1[1];A$[11,14];" ";A$[1,10];
! -   !--If X1 Print Using "##########";PFU2[X1 - 1] Else Print ;'BR BD';"     BASE ";'ER ED'
! -   RECS[X1[1]] = PFU1[X1] \ X1[1] = X1[1] + 1
! - L_20385: Next X1
! - L_20390: Print Using "#";@0,9;"SELECT 1-";X1[1] - 1;" : ";'CL';
! - !--Input (-2,ILEN);""J4$ \ If J4$ = "" Goto L_20420
! - X1 = J4$ \ If X1 > 0 If X1 < X1[1] Goto L_20410
! - !--Print 'RB'; \ Goto L_20390
! - L_20410: Read #26,RECS[X1];A$;
! - J4$ = A$[11],"\15\"
! - L_20420: Window Close 
! - Call InpBuf(J4$)
! - FLAG = 0 \ Goto L_20435
! - L_20435: Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
Include "src/callmainerrnet.inc"
End 
