Rem PO367  PURCHASE ORDER AUTO-GENERATE  PT.1
Rem  AUTHOR: G.DOSCHER   8/10/88
Rem  LAST UPDATE:
!
! loadsave -w -n 100,10 -o prog/dxport/po367.dl4 src/po367.src
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 14, 2007  21:38:47
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/po/po367.src (univ2) [bill] {52531}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc" ! dx
Include "src/inc/fileprtdefault.inc" ! port defaults
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,PDate$
Declare External Sub UserCntrl,GetPortDefault
Declare External Function GetUIDRec
External Lib "ubsvendlist.dl4"
Declare External Sub VendList
Declare Intrinsic Sub InpBuf,String,programdump
! Option Default Dialect IRIS1
Try
Com 1%,COST_LEV[3]
Com 2%,S9[9]
Dim prt. as prtdefault
Dim tmp$[200],UserId$[10],WebStr$[1000],Blank$[128],Message$[200]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
dim action$[30],options$[30],b$[200],action1$[30],msg$[256],action2$[30]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000]
Dim StFld$[30],bcdata$[5],sfld$[30], Key1$[64]
Dim 1%,UREC,IntCo,Ctlc,POFRT[2],EFLAG
Dim 2%,maxcnt \ maxcnt=50 ! init max records in arrays for list
dim List$[maxcnt,1000] ! for .net (larger size - ZLines)
Dim 1%,J,L2,X1[9],H4[3],M4[1],WH,A2[2],PD1[2]
Dim 3%,H8[9],A1[5],A4,PWGT[1]
Dim 2%,C1[6],D9[20],CHECKH0[5],H0[5],H3[4],R5,R8,X2,X3,PH[4],N0,NUMBERSKIP
Dim K5$[50],C$[264],C2$[44],F$[20],H$[82],H1$[116],P$[64],S$[64],S1$[80]
Dim ST$[14],P4$[40],OLL2$[20],X$[20],P61$[256],k51$[8]
Dim 1%,PO1[9],PO4[10],OLL3[3]
Dim 2%,PO5[1],OLL2[1],CHECKH3[4],PODISC[1],PODDATE
Dim 3%,PO3[12],COID,E,POH7[1],tp[999],r51
Dim A$[20],U5$[80],K2$[30],M2$[72],SHIPVIA$[10],K15$[30],POFRT$[6]
Dim FLG$[10],K3$[50],K16$[50],Custom_customer$[30]
Dim J$[40],J0$[10],J1$[40],J2$[20],J4$[40],J5$[70],J7$[70],J8$[8],J9$[40]
Blank$=" ",Blank$
! call dxopen() - done in pomenu
call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
! OPTIONS$ & ACTION$ used in POMENU.dl4 for routing
COID = IntCo
UserId$=UCase$(Userid$)+Blank$
Call GetPortDefault(e$,IntCO,UserID$,portnum,rec_uac,prt.)
Close #1 ! (READ ONLY)
CTLC=OpenFile(9999,IntCo) \ if ctlc=-1 Error 42
If Ctlc<>1 Error 42 ! REOPEN AS READ/WRITE
! If S9[2] Goto L_1000 ! no return from other programs?
For K1 = 2 To 26 \ Read J \ If J = -1 Goto L_820
  Read #1,88,J;F$; \ Open #K1,F$
L_820: Next K1
Data "2752","1792","1840","2400","1808","-1","2416","2432","1744","2464","2768","1728","2448","1120"
Data "1888","2128","-1","864","1552","-1","-1","-1","-1","-1","-1"
Open #24,"6/POWORK"
F$ = "3/POSHPVIA" + Str$(COID) \ Ropen #26,F$
F$ = "3/POBROKER" + Str$(COID) \ Ropen #27,F$
let f$="2/POMISCCHRG"+STR$(COID) \ ROPEN #18,F$
S1$ = "ENTERED   PRINTED   REGISTEREDOPEN      IN PROCESSCLOSED    "
MAT  READ #1,61,0;P61$;
Mat Read #1,60,6;FLG$;
Mat read #1,115,60;custom_customer$;
Custom_Customer$=UCase$(Trim$(custom_customer$))
UserRec=GetUIDRec(e$,IntCo,Userid$)
R1 = Chf(302)
If R1 < 60 ! "not upgraded
  ! Print @0,22;'RB CE';"THE PO GENERATOR FILE IS AN OLD VERSION!"
  ! Print @0,23;'CL';"PLEASE REBUILD IN 365. Press <CR> to exit  ";
  ! Input Len 16384 + 1;""F$
  ReturnStatus=0
  Message$="PO GENERATOR FILE IS INVALID!"
  Goto OUTDONE
End If 
EDII = (FLG$[2,2] = "T" Or FLG$[2,2] = "H")
If EDII
  Try
	Close #51
	Close #63
  Else
	Rem 
  End Try
  Open #51,"cntrl/EDICNTRL" + Str$(COID)
  Open #63,"4/EDITRANS" + Str$(COID)
End If 
	! files opened - now process 
	Action2$=UCase$(Action2$)
	ACtion2$=RTrim$(Action2$) ! make sure UPPERCASE and No blanks at end
	Action1$=UCase$(action1$)
	Action1$=RTrim$(action1$) ! UC and trimmed
Select case action1$
	case "VENDLIST" ! vendor lookup (may not need)		doc=APOG-VendorList.doc
		Let ReturnStatus=1  ! suggested to ONLY SELECT BY CLICKING FROM LIST OF KEYS
		Message$="OK";e$=""
		Call DXGet("STEXT",tmp$) ! Search text
		STFld$=UCase$(tmp$)
		Call DXGet("STYPE",tmp$) ! search type
		sfld$=Tmp$ ! 1=name, 2=contact, 3=city, 4=state, 5=zip
		if sfld$="" let SFld$="1" ! name is default
		bcdata$="1" ! 1=begin, 2=contains?
		Key1$="" ! starting?
		Call DXGet("VENDID",tmp$)
		Vend=tmp$
		Clear List$[]
		tmpcnt=maxcnt
		Call VendList(intCo,tmpcnt,StFld$,bcdata$,sfld$, Key1$, vend, list$[])
		! end of droplists
		call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		! needs a end of section
		call AddToStr(e$,rstr$,esdel$)
		! end of vendlist
	case "DEFWHSE" ! send default whse for user       doc=APOG-DefaultWhse.doc
		Clear List$[]
		List$[0]=bsdel$,"DFWHSE",fdel$
		List$[1]="WHSE",fdel$
		List$[2]=Str$(prt.Wh),fdel$
		List$[3]=esdel$
		call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		! end of defaults
		ReturnStatus=1
		Message$="OK"
	case "GETDATA" !   GET selections	   Used for 2 action2s
		Call DXGET("WHSE",tmp$)
		let w1=tmp$
		If W1<= 0 Or W1> 99 Or (Fra(W1)) 
			ReturnStatus=0
			Message$="INVALID WAREHOUSE"
			Goto OutDone
		Endif
		Call DXGet("SBUYER",tmp$)
		Let S9[7]=tmp$
		Call DXGet("EBUYER",tmp$)
		Let S9[8]=tmp$
		Call DXGet("NSTKS",tmp$)
		let S9[9]=tmp$
		If Action2$="LIST"  !             doc=APOG-GetEntryList.doc
			Gosub L_5000 ! list of entries
		Endif
		If Action2$="GETPO" ! build a po    doc=APOG-CreatePO.doc
			Call DXGet("VENDID",tmp$)
			Let Vend=tmp$
			K5$ = Vend Using "######"
			Search #5,2,1;K5$,R5,E
			If E
				ReturnStatus=0
				Message$="VENDOR NOT FOUND"
				Goto OutDone
			Endif
			Call DXGet("PONUM",tmp$)
			PONum=tmp$
			If PONum<0 or PONum>999999 or Fra(PONum) let PONum=0
			Gosub L_1390 ! read & check
			If Not(PASS) Goto OutDone ! a problem found
			Clear List$[]
			List$[0]=bsdel$,"POEDIT",fdel$
			List$[1]="OPTION",fdel$,"ACTION",fdel$,"VENDID",fdel$,"POID",fdel$,"EDITSTATUS",fdel$,"NEWPO",fdel$,"REOPEN",fdel$
			List$[2]="SERPPOH",fdel$,"GETPOHDR",fdel$,Str$(Vend),fdel$,Str$(H0[2]),fdel$,"1",fdel$,"1",fdel$,"0",fdel$
			List$[3]=esdel$
			call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		Endif
		! 
		ReturnStatus=1
		Message$="OK"
		! end of main select
	
End Select
	OutDone: ! finished
	! status section
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
Else
	include "src/callmainerrnet.inc"
end try
End ! the whole program

! start of subroutines

L_1390: Rem FOUND VENDOR
Pass=1
Gosub L_1660
L_1410: Gosub L_5200 \ Return
If Not(Pass) Return ! gosub L_1600
POGENWRK_SEARCH: Rem
K2$ = W1 Using "##" \ K2$[3] = C1[1] Using "######"
For X2 = S9[7] To S9[8]
  K2$[9,12] = X2 Using "####";K2$[13] = "@"
  Search #2,2,1;K2$,R2,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E) Goto L_1510
Next X2
! NO OLD PO key
Goto L_2000

L_1510: Rem EXISTING ENTRY
Mat Read #2,R2,20;A1;
Mat Read #8,A1[3],0;CHECKH0;
Mat Read #8,A1[3],222;CHECKH3;
If CHECKH0[2] <> A1[1] Or CHECKH3[3] <> A1[0] ! Wrong PO #/VEN # in pogenwrk @ record.
  
  Search #2,5,1;K2$,R2,E \ If E Gosub ERR_SEARCH
  Goto POGENWRK_SEARCH
End If ! check if PO is valid
X = 0
CHK_PO_LOOP: X = X + 1
If X >= 7 And X <= 90 Goto CHK_PO_LOOP ! exclude closed & dm's
If X <= 95
  U5$[1,2] = X Using "##"
  U5$[3] = A1[1] Using "######"
  Search #8,2,1;U5$,V1,E \ If E > 1 Gosub ERR_SEARCH
  If E Goto CHK_PO_LOOP
  !If Not(E) goto Set_Status: ! found it!(fall thru for status check
End If 
If X > 95 ! po not found
  Search #2,5,1;K2$,R2,E \ If E Gosub ERR_SEARCH
  E = 3
  Search #2,1,0;K2$,R2,E \ If E Gosub ERR_SEARCH
  Pass=0;ReturnStatus=0
  Message$="PO NOT FOUND"
  Return
End If 
If X > 4 and x<7 ! in process, skip for now
  ! Window Open @5,10; To @75,15; Using ""
  !Print @2,1;'RB';"Order being received. Can not be accessed via this program.  ";
  !Print @2,2;"Press <CR> to work with another vendor. ";
  !Input Len 16384 + 1;""S$
  !Window Close 
  Pass=0;ReturnStatus=0
  Message$="RECEIPTS IN PROCESS"
  Return ! Goto L_1070
End If 
SET_STATUS: Rem  SET STATUS TO 95 ! was 91
Mat Read #8,V1,0;H0
U5$ = " ",U5$
U5$[1,2] = H0[0] Using "##"
U5$[3,8] = H0[2] Using "######";U5$[9] = ""
Search #8,5,1;U5$,R8,E \ If E Gosub ERR_SEARCH
Mat Read #8,R8,310;PH
Mat Read #8,R8,330;PO1
PH[4] = H0[0];PO1[8] = Userrec ! Spc(6)
H0[0] = 95
U5$[1,2] = H0[0] Using "##"
U5$[3,8] = H0[2] Using "######";U5$[9] = ""
Search #8,4,1;U5$,R8,E
If E Gosub ERR_SEARCH
Mat Write #8,R8;H0
Mat Write #8,R8,310;PH
Mat Write #8,R8,330;PO1;
S9[0] = A1[3] \ S9[1] = A1[2] \ S9[2] = 2
Goto L_8040
L_1600: Rem HEAD B
! Print 'MH'
! Print Using "###### :  ";@30,2;"VENDOR: ";C1[1];C$[1,30];'CL';
Return 
L_1660: Rem READ VNDR.REC.
Read #5,R5,0;C$
Mat Read #5,R5,264;C1;
Mat Read #5,R5,400;C2$;
Mat Read #5,R5,554;M4;
K15$ = " ",K15$;K15$ = C1[1] Using "######"
M2$ = " ",M2$
Search #15,2,1;K15$,R15,E \ If E Goto L_1780
Mat Read #15,R15,314;M2$;
L_1780: Gosub L_8300
Return 
L_2000: Rem NEW PO
L_2010: !Print @0,5;"ENTER   #:new po number    <CR>: auto assign     ";'CE';
!Input ""S$  ! how do we do this?
S$="" \ if PONum Let S$=Str$(PONum) ! sent one
If S$ = "" Gosub L_2500 \ Goto L_2100
N0 = S$
If N0 < 1 Or N0 > 99999 
	PONum=0 \ Goto L_2000
Endif
Gosub L_2600 \ Goto L_2100
!PONum=0 ! failed test
!Goto L_2010
pass=0;returnstatus=0
message$="PO number is ALREADY IN USE"
return ! fail it
L_2100: Rem SETUP HEADER RECORD
!Print @0,7;"Please wait . . .  ";'CE'; \ Signal 3,0
E = 2 \ Search #8,1,0;K5$,R8,E \ If E Gosub ERR_SEARCH
ST$ = " ",ST$;P4$ = " ",P4$
POH7[0] = 0;POH7[1] = 0
Gosub L_8200
Mat Write #8,R8;H0
Mat Write #8,R8,24;H$
Mat Write #8,R8,106;H1$
Mat Write #8,R8,222;H3
Mat Write #8,R8,242;H4
Mat Write #8,R8,250;H8
Mat Write #8,R8,310;PH
Mat Write #8,R8,330;PO1
Mat Write #8,R8,350;PO3
Mat Write #8,R8,428;ST$
Mat Write #8,R8,442;P4$
Mat Write #8,R8,482;PO4
Mat Write #8,R8,504;PO5
Mat Write #8,R8,516;PWGT
Mat Write #8,R8,528;POH7
Mat Write #8,R8,564;POFRT
Mat Write #8,R8,570;EFLAG
Mat Write #8,R8,592;POFRT$                   
Mat Write #8,R8,598;PODISC 
Mat Write #8,R8,606;PODDATE        
Mat Write #8,R8,610;POSENT;
Write #5,R5,444;H0[3];
K5$ = H0 Using "##" \ K5$[3] = H0[2] Using "######"
Search #8,4,1;K5$,R8,E \ If E Gosub ERR_SEARCH
K5$ = H3[3] Using "######" \ K5$[7] = H0[2] Using "######"
Search #8,4,2;K5$,R8,E \ If E Gosub ERR_SEARCH
S9[0] = R8 \ S9[2] = 1
K2$ = W1 Using "##" \ K2$[3] = C1[1] Using "######"
For X2 = S9[7] To S9[8]
  K2$ = " ",K2$
  K2$ = W1 Using "##" \ K2$[3] = C1[1] Using "######"
  K2$[9] = X2 Using "####"
  Search #2,2,1;K2$,R2,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E) ! "got a buyer record - create header control record
    K2$[13] = "@   " \ K2$[17] = H0[2] Using "######"
    Search #2,2,1;K2$,R2,E \ If E > 1 Gosub ERR_SEARCH
    If Not(E) Goto L_2490
    E = 2 \ Search #2,1,0;K2$,R2,E \ If E Gosub ERR_SEARCH
    A$ = K2$[1,8] + K2$[17,28];A1[0] = C1[1];A1[1] = H0[2];A1[2] = R5;A1[3] = R8
    Mat Write #2,R2;A$; \ Mat Write #2,R2,20;A1;
    Search #2,4,1;K2$,R2,E \ If E Gosub ERR_SEARCH
    If Not(PO1[6]) ! "RECORD A BUYER (first one found)
      PO1[6] = X2
      Write #8,R8,342;PO1[6];
    End If 
  End If 
L_2490: Next X2
Goto L_8000
L_2500: Rem "======================= get next auto po #
NUMBERSKIP = 0
Read #1,20,94;N0
L_2520: N0 = N0 + 1
! Print Using "######";@55,5;N0;'CL';
Gosub L_2600 \ Goto L_2580
NUMBERSKIP = NUMBERSKIP + 1
If NUMBERSKIP >= 10 Goto L_2590
Goto L_2520
L_2580: Write #1,20,94;N0;
Return 
L_2590: Rem PROBLEMS- GIVE WARNING & EXIT
!Print 'RB CR CR CL';"WARNING: STARTING WITH PO NUMBER ";N0 - NUMBERSKIP + 1;"THERE ARE A NUMBER OF PO'S ALREADY"
!Print 'CL';"IN USE(AT LEAST 10 IN A ROW)!  THIS COULD INDICATE CROSSING OLD PO'S,"
!Print 'CL';"OR DEBIT MEMOS, OR OTHER ISSUES.  IF YOU HAVE ANY QUESTIONS OR NEED"
!Print 'CL';"HELP PURGING OLD PO'S(IF APPROPRITE) PLEASE CONTACT UNIVERSAL."
!Input "     PRESS <CR> TO EXIT PROGRAM "J4$
ReturnStatus=0;Pass=0
Message$="PO NUMBERS ARE ALREADY IN USE"
Return ! Goto OUTEND
L_2600: Rem LOOK FOR PO EXISTING
U5$ = " ",U5$
For X = 1 To 27 ! need 1-16 & 90-99
  X3 = X
  If X > 17 Let X3 = X + 72
  U5$[1,2] = X3 Using "##"
  U5$[3] = N0 Using "######"
  E = Spc(9)
  Search #8,2,1;U5$,V1,E \ If E > 1 Gosub ERR_SEARCH
  If E Goto L_2700
  Return 1
L_2700: Next X
Return 
L_5000: Rem SHOW VENDORS
Clear List$[]

tmpcnt=maxcnt
List$[0]=bsdel$,"GENLIST",fdel$
List$[1]="VENDID",fdel$,"BUYER",fdel$,"PO",fdel$,"NAME",fdel$
Row=2
!Print @0,6;'CE';
K2$ = " ",K2$;K3$ = "";NUMLINES = 0
K2$ = W1 Using "##";X1[1] = 0;X1[2] = 6;NONSTKPO = 0
L_5030: Search #2,3,1;K2$,R2,E \ If E = 2 Goto L_5170
If E Gosub ERR_SEARCH
Mat Read #2,R2,56;A2;
X1 = K2$[1,2] \ If X1 <> W1 Goto L_5170
X2 = K2$[9,12]
If X2 < S9[7] Or X2 > S9[8] Goto L_5030
If Not(S9[9]) And A2[2] = 1 Goto L_5030
Gosub CHECK_LINE_VALIDITY
If NS_BAD Goto L_5030
If K3$ = "" Let K3$ = K2$
If K3$[1,12] <> K2$[1,12] ! "diff vend/buyer
  NUMLINES = 0
  NONSTKPO = 0
  K3$ = K2$
End If 
If K3$[13,13] <> "@" Let NUMLINES = NUMLINES + 1
U5$ = K2$[1,12] + "@"
Search #2,2,1;U5$,R2,E \ If E > 1 Gosub ERR_SEARCH
X1[3] = Not(E)
If Not(E) And NUMLINES = 0 Goto L_5030
X2 = K2$[3,8] \ U5$ = X2 Using "######"
Search #5,2,1;U5$,R5,E \ If E > 1 Gosub ERR_SEARCH
C$ = "** NOT ON FILE **" \ If Not(E) Read #5,R5;C$[1,30];
!X1[2] = X1[2] + 1 \ If X1[2] > 20 Let X1[2] = 7 \ X1[1] = X1[1] + 1
! If X1[1] < 2 Goto L_5150
! Print 'CR';"-MORE-";'CE';
L_5110: ! Print @0,23;"ENTER     <CR>: continue list       E: end  ";'CL';
!Input ""S$ \ If S$ = "E" Goto L_5180
!If S$ = "" Let S$ = "C"
!If S$ <> "C" Print 'RB'; \ Goto L_5110
!Print @0,7;'CE'; \ X1[1] = 0 \ X1[2] = 7
L_5150: WebStr$=U5$,fdel$,K2$[9,12],fdel$
tmp$="N"
If X1[3] let tmp$="Y"
WebStr$=WebStr$,tmp$,fdel$,RTrim$(C$[1,30]),fdel$
List$[row]=WebStr$
row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
K2$[13] = "~" \ Goto L_5030
L_5170: ! End
L_5180: ! Finished
List$[row]=esdel$
call AddToStr(e$,rstr$,List$[]) ! add list to string
Return 
L_5200: Rem CHECK FOR SETUP
NS_BAD = -1
K2$ = W1 Using "##" \ K2$[3] = C1[1] Using "######"
VEND_LOOP: Search #2,3,1;K2$,R2,E \ If E > 2 Gosub ERR_SEARCH
If E = 2 Goto NO_MATCHING_VENDOR
If K2$[13,13] = "@" Goto VEND_LOOP
TMP = K2$[1,2] \ If TMP <> W1 Goto NO_MATCHING_VENDOR
TMP = K2$[3,8] \ If TMP <> C1[1] Goto NO_MATCHING_VENDOR
Gosub CHECK_LINE_VALIDITY
If Not(NS_BAD) Return 1
Goto VEND_LOOP
NO_MATCHING_VENDOR: Message$="NO LINES SETUP FOR THIS VENDOR "
ReturnStatus=0
Pass=0 \ Return 
CHECK_LINE_VALIDITY: Rem this only checks nonstock lines
NS_BAD = 0
Mat Read #2,R2,20;A1
Mat Read #2,R2,56;A2;
If A2[2]
  Mat Read #16,A1[0],0;OLL2;
  Mat Read #16,A1[0],8;OLL3;
  Mat Read #16,A1[0],140;OLL2$;
  K16$ = " ",K16$
  K16$ = OLL2[1] Using "######"
  K16$[7] = OLL3[2] Using "###"
  Search #16,2,1;K16$,REC16,E
  If E > 2 Gosub ERR_SEARCH
  If E Or REC16 <> A1[0] Or OLL2$[1,12] <> K2$[17,28]
    NS_BAD = 1;Pass=0
	ReturnStatus=0;Message$="INVALID NS LINES"
  End If 
End If 
Return 
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
L_8000: Rem CHAIN TO NEXT PROGRAM

S9[0] = R8
S9[1] = R5
L_8040: ! Chain "PO367A"
!  Use exising Serppoh somehow? they say yes
Return ! let case handle


L_8200: Rem SETUP VARIABLES
H0[0] = 95 \ H0[1] = R5 \ H0[2] = N0
X2 = (Tim(8) * 10000) + (Tim(9) * 100) + Tim(10)
H0[3] = X2 \ H0[4] = X2 \ H0[5] = X2 \ PH[2] = 1 \ PH[4] = 1
PO1[8] = UserRec ! Spc(6)
H$ = " ",H$;H1$ = " ",H1$;H3[0] = 0;H3[1] = 0;H3[2] = 0
H3[4] = 0 \ H4[0] = 0 \ H4[2] = 0 \ H4[3] = 0
H4[1] = W1 \ H3[3] = C1[1]
H$[15,24] = C2$[1,10] \ H$[25,34] = C2$[11,20]
H$[35,48] = C2$[21,34];H$[49,58] = C2$[35,44]
If custom_Customer$="ACME"
	let h$[59,61]="NO "
Else
	H$[59,61] = "YES"
Endif
IF P61$[62,62]="N" 		!! default confirmed to N
	LET H$[59,61]="NO "
	h0[5]=0
endif
Mat Read #12,H4[1] - 1,4;H1$;
For K = 1 To 112 \ If H1$[K,K] < " " Let H1$[K,K] = " " \ Next K
PO4[0] = M4[1]
POFRT$ = "      "
PODDATE = H0[4]
gosub l_6100:
Return 
L_8300: Rem READ SHIP VIA
If M4[1] <= 0 Return 
If M4[1] < 1 Or M4[1] >= Chf(26) Return 
Mat Read #26,M4[1],0;SHIPVIA$;
SHIPVIA$ = SHIPVIA$ + "           "
C2$[1,10] = SHIPVIA$[1,10]
Return
L_6100: ! "================================= edi interface
IF NOT(EDII) RETURN 
IF ST$[1,1]<>" " AND ST$<>"" RETURN  !"already been setup for edi
LET K51$=" ",K51$;K51$[1,8]=H3[3] USING "VN######" !"vendor #
SEARCH #51,2,1;K51$,R51,E \ IF E>1 GOSUB Err_Search:
IF E GOTO L_6190: !"vendor is not a edi trading partner
MAT  READ #51,R51,8;TP;
IF NOT(INT(ABS(TP[850]))) GOTO L_6190: ! " not set up to send p.o.s
LET ST$=" ",ST$;ST$[1,1]="n"
L_6190: RETURN 
OUTEND: Rem EXIT
S9[0] = 0
Close 
! Chain "MX000"
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+msc$(4)
call programdump("tmp/po367se!","")
returnstatus=0
message$=msg$
goto OutDone ! alt - send user message
Goto ERR_MAIN
ERR_MAIN: Rem
! If Err 0 Rem
e$ = msg$
If Spc(8) <> 10000 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[])
END 
Rem {end rtn.error.s}
