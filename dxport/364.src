! >>> Program 364
!
! description Purchase Order Accept
!
! loadsave -w -n 100,10 -o prog/dxport/364.dl4 src/364.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 16, 2004  18:35:28
Rem /w/papermaster/r2002//usr/acct/bill/work/r2002/po/po364.src (univ2) [bill] {14093}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem PO364   PURCHASE ORDER ACCEPT
Rem  AUTHOR: G.DOSCHER   2/19/81
Rem  LAST UPDATE:  G.DOSCHER  3/14/85
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
try
Dim 2%,H0[5],S2,ponum,3%,totpo
Dim A$[50],A1$[50],F$[20],P9$[50],X$[10],1%,H4[1],WHSE,2%,D9[5]
Dim H$[50],DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo ! E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Close #1 ! getsession open cntrl# as READONLY
F$="cntrl/cntrl"+Str$(COID)
Open #1,f$
For K1 = 2 To 12 \ Read J \ If Not(J) Goto L_820
  Read #1,88,Abs(J);F$;
  If J < 0 Ropen #K1,F$ Else Open #K1,F$
L_820: Next K1
Data "0","-1792","0","-2400","-1808","0","2416","0","0","-2464","0"
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
!L_1010: Print @0,20;'CE';"DO YOU WANT TO ACCEPT PURCHASE ORDERS?  (Y/N) ";
!Input ""A$
!If A$ = "N" Goto OUTEND
!If A$ <> "Y" Goto L_1010
S1 = 3
S2 = 4
Call DXGet("WHSE",tmp$)
LET whse=tmp$
if not(whse) and rtrim$(tmp$)<>"0"
	eflg=eflg+1
	Message$=Message$+"Invalid Warehouse Number Entered"
	goto outend:
endif
if whse<0 or whse>99
	eflg=eflg+1
	Message$=Message$+"Invalid Warehouse Number Entered"
	goto outend:
endif
!Gosub L_8300
!Print 'CR MU CL';"PLEASE WAIT . . . ";
!Signal 3,0
A$ = S1 Using "##"
L_1110: Search #8,3,1;A$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1230
Mat Read #8,R8,0;H0
Read #8,R8,244;H4[1]
If WHSE If WHSE <> H4[1] Goto L_1110
S3 = A$[1,2] \ If S3 <> S1 Goto L_1230
If H0 <> S3 
	eflg=eflg+1
	ponum=a$[3]
	Message$=Message$+"Bypass PO# "+str$(ponum)+" Status Error. "
	! Print "STATUS ERROR-- FILE DOESN'T MATCH INDEX!" 
	 !Unlock #8 \ Gosub ERR_SEARCH
	 goto L_1110: 
endif
let totpo=totpo+1
A1$ = A$
A1$[1,2] = S2 Using "##"
Search #8,4,1;A1$,R8,E \ If E Gosub ERR_SEARCH
Search #8,5,1;A$,R8,E \ If E Gosub ERR_SEARCH
Write #8,R8;S2;
Goto L_1110
L_1230: ! Print "  COMPLETE !";'RB';
! Signal 3,10
Goto OUTEND

L_8300: Rem CHECK WAREHOUSE
!L_8310: WHSE = 0 \ If D9[5] = 1 Goto L_8390
!Print @0,21;"Enter warehouse to use (1-";
!Print Using "##";D9[5];"), <CR> for all or   E: to exit ";'CE';
!Input Len 16386;""X$ \ If X$ = "E" Goto OUTEND
!WHSE = X$
!If (Not(WHSE) And X$ <> "") Or WHSE < 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_8310
L_8390: Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT
Close 
!Chain "MX000"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
returnstatus=1
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(totpo)
	returnstatus=1
	let message$=message$+"There are no purchase orders available to accept"
	if whse<>0
		let message$=message$+" for warehouse "+str$(whse)
	endif
	message$=message$+"."
else
	Let message$=message$+" "+str$(totpo)+" Purchase Order(s) Accepted"

endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
