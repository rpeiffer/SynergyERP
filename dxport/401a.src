! >>> Program 401a
! description End of Period
! loadsave -w -n 100,10 -o prog/dxport/401a.dl4 src/401a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 19, 2007  17:31:18
Rem /w2/papermaster/r2005//usr/acct/dave/work/custom/htberry.r9/mx401a.src (univ2) [dave] {11927}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,JulianToDate,String,Time,VerifyDate
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,OpenMySQLMirror
Include "src/inc/sql_prod.inc"
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Rem MX401A   END-OF-MONTH RUN
Rem  AUTHOR:  G.DOSCHER  6/27/80
Rem LASTY UPDATE EWR REINCO 1/82
Try
	com 2%,intco,eoy,1%,DEBUG
	com rstr$[5000],Message$[600]! Enter SPEC1[],MESSAGE$,rstr$ 

let statchan=88
print #statchan;"Common Variables have been passed into 401A"

	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
	dim xdate$[50]

! If Err 0 Gosub ERR_TRAP
Dim A$[50],A1$[50],F$[16],S$[20],S1$[1],D$[108],T$[10],J4$[40],U5$[50]
Dim K5$[50],P60$[50],P61$[256],I$[50],P9$[50],K39$[30],PCT$[12],WH3$[24]
Dim 1%,Z8[29],W1[1],S0,X1[100],2%,X2[100],3%,X3[19],X$[10],IS3[5]
Dim 1%,HOLIUPDATEBATMAN,PCT3[2],FL1$[80],SCRATCH$[80],FL1[2],JTL2
Dim 3%,T7[19,5],T9[5],C5[9],S1[1],T8[5],V4[1],P1[1],C10[5],L8[4],L7[12],R[40]
Dim 2%,B[24],3%,W3[24],CLRMS[12,2],PWOH[12],PWOHL[12]
Dim 3%,A[33],A3[19],C1[6],C2[3],P9[10],P8,CFIN[8],D0[7],B4[17],B5
Dim 3%,S3[12,3],H2[12,3],EB[8],N1[4,4],N2[4,4],ARTL[5],LPR[4],Q2[8]
Dim 3%,R1,T0[7],X3[19],P3[11,1],TX0[3],TX1[10],TX2[10],S2[12,2],H1[12,2],H1_2[12],S2_2[12]
Dim 2%,FDAY,ARDATE,JARDATE,FDATE,DAYS,S9[1],REC,B6,NSL7[2],C0[12],PCT1[5]
Dim FLT$[30],FLK$[30],K25$[20],3%,FL3[8],JTL1[13],2%,FL2[3]
Dim 1%,NXMTH,ARMTH,WH8[23],WH9[23],MONTHS_EXIST,ARYEAR,NXYEAR
Dim 3%,W5[12],W6[12],ROW
Dim 2%,CHT0[1],Q0[1],3%,CHT1[24],CHT2[24],2%,CHT3[24],CHT4[24],CHT5[24],A0
Dim 2%,ARPER,NARPER,D8[1],COMP,D3[1],JDATE[5],SRVLVL[12,1],LSRVLVL[12,1],W7[14]
Dim 2%,BUDGD[1],BPO$[20],CFFLG$[6],3%,BUDG[1]
Dim 3%,PWAVG[12],PWAVGL[12],PCT2[5],WHMISC2[7],K_COST_PERCENT,CARRY_COST
Dim 3%,COST_GOODS_SOLD,AVE_INVT,AVE_INVT_COST,SALES_DOLLARS,GROSS_MARGIN
Dim 3%,PWS[12,2],PWSL[12,2]
Dim 3%,AVE_INVT_VALUE,TURNS,ROI,AVE_INVT_INVEST,PREVEOMBAL,UNITPURCH
Dim 3%,XX,TOTREC
Dim KEY2$[60],KEY3$[60],KEY4$[60],KEY5$[60],KEY6$[60],K6$[60],M$[50]
dIM GROUPID$[1]
DIM PWSKey$[60]
DIM 3%,PWSRec
Dim 3%,usage_ty[12],usage_ly[12],sales_ty[12],sales_ly[12],Hits_Ty[12]
Dim 3%,ldcost_ty[12],ldcost_ly[12],avgcost_ty[12],avgcost_ly[12],Hits_Ly[12]
dim 3%
print #statchan;"Variable DIM complete"
 
for ctr=1 to 87 ! channel 88 used for status text file
	Try Close #ctr Else Rem
next ctr
print #statchan;"Verified unnessessary channels are closed"
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
!Comp=spec1[0] ! company #
!intco=spec1[0]
!eoy=spec1[1]! end of year flag
!let debug=99
!rec_uac=spec1[8]
!returnstatus=spec1[9]

!X2 = Spc(5) \ COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
comp=intco
let statchan=88
f$="cntrl/cntrl"+Str$(comp)
Open #1,f$
For K1 = 2 To 40
  Read K2 \ If K2 = -1 Goto L_290
  J2 = Abs(Fra(K2) * 1000) \ If J2 <= 88 Or J2 > Chf(1) - 1 Let J2 = 88
  J1 = Int(Abs(K2))
  Read #1,J2,J1;F$;
  Open #K1,F$
L_290: Next K1
Data "1808","1824","1792","1744","2176","2400","2256","1664","1232","400","688","2016"
Data "2048","2064","2080","1648","2336","-1","-1","-1","-1","1600","1376","0.150 ","2192","2208"
Data "1456"," 1440"," 1488"," 2128"," 1888","-1","2304","-1","-1","-1","2112"
Data "-1","-1"
F$ = "4/PWSALES" + Str$(COMP) \ Open #33,F$
F$ = "4/CSLSALES" + Str$(COMP) \ Open #37,F$
print #statchan;"Regular channels opened"
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
Def FNI(H) = Int(Abs(H) + .5) * Sgn(H)
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
Mat Read #1,60,50;P60$; \ Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
If P61$[19,19] <> "M" And P61$[19,19] <> "Y" And P61$[19,19] <> "N" Let P61$[19,19] = "N"
If P60$[9,9] = "F" or P60$[9,9] = "L" 
	Read #1,88,3008;F$; \ Open #19,F$
	Read #1,88,3024;F$; \ Open #20,F$
endif
If P9$[17,17] = "Y" 
	Mat Read #1,88,96;F$; \ Open #22,F$
endif
print #statchan;"Special channels opened"
Mat Read #1,3,196;FDAY;
Mat Read #1,0,108;ARDATE;
X2 = ARDATE \ Gosub L_7820 \ X2 = 0
If X2 Let JDATE = X2 Else Gosub L_7650
X2 = JDATE \ Gosub JUL2DATE
ARYEAR = X$[7,8]
tarmth=x$[1,2]
READ #1,0,120;ARMTH;
If P60$[20,20] = "Y" ! customer credit history
  Read #1,88,336;F$; \ Open #21,F$
  LET X$=(aryear using "&&")+(armth using "&&") \ LET ARPER=X$[1,4]
  IF tarmth=1 AND ARMTH=12
		!! ARDATE IS JANUARY, AR MONTH CODE IS DECEMBER
		!! NEED TO ADJUST YEAR USED
		X$=(ARYEAR-1 using "&&")+(armth using "&&") \ LET ARPER=X$[1,4]
  ENDIF
  M = X$[3,4] \ Y = X$[1,2] \ M = M + 1 \ If M <= 12 Goto L_475
  M = 1 \ Y = Y + 1
  If Y = 100 Let Y = 0
L_475: X$[1,2] = Y Using "&&" \ X$[3,4] = M Using "&&"
  NARPER = X$[1,4]
End If 
print #statchan;"Set up next AR Period value"
If P61$[64,64] = "Y" And P60$[32,32] = "Y" ! "Only if sales info kept
  F$ = "3/SLLSTPRC" + Str$(COMP)
  Call FindF(F$,E)
  If Not(E) ! "no file - no flag
    P61$[64,64] = "N"
  Else 
    Open #35,F$
	print #statchan;"Open ship list pricing"
  End If 
End If
sqlChan = OpenMySQLMirror(e$,39)
F$ = "2/PRODWHSTAT"+str$(COMP)
open #40,f$
L_500: Rem OKAY - ALL FILES OPENED - LET 'ER FLY
Read #1,0,112;D8[1];
D8 = 888888 \ Write #1,0,112;D8;
print #statchan;"Write out flag 888888"
Read #1,0,120;ARMTH;
NXMTH = ARMTH + 1;NXYEAR = ARYEAR
If NXMTH > 12 Let NXMTH = 1;NXYEAR = ARYEAR + 1
If NXYEAR > 99 Let NXYEAR = NXYEAR - 100
HOLIUPDATEBATMAN = 0
Mat Write #1,179,482;HOLIUPDATEBATMAN;
print #statchan;"Write out holiday update flag"
X$ = ARDATE Using "&&&&&&"
print #statchan;"A/R Date: ";x$[3,4];"/";x$[5,6];"/";x$[1,2]
!Print 'CS';@0,0;"SALES END OF MONTH";@50,0;"MX401 - REV 2.1"
!Print @59,4;"PROGRESS"
!ROW = 5
! Print @0,ROW;'CL';"PART  1: CUSTOMER... WORKING PLEASE WAIT ";
print #statchan;"Processing Customer File "
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(2) - 1
L_1020: Search #2,3,1;A$,R1,E \ If E > 2 Gosub ERR_SEARCH
XX = XX + 1
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current Customer : ";A$
endif	
If E
	Print #StatChan;xx;" Records Processed. Customer File Completed " 
	Goto L_1500
endif
Mat Read #2,R1,252;T9
Mat Read #2,R1,288;C5
Mat Read #2,R1,544;CFIN
Mat Read #2,R1,624;C10
Mat Read #2,R1,728;CFFLG$
Mat Read #2,R1,734;BPO$
Mat Read #2,R1,754;BUDG
Mat Read #2,R1,766;BUDGD
If DEBUG
  M$ = " ",M$
  M$ = "Reading Customer File "
  Mat Write #0,3;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,4;M$;
End If 
For K2 = 0 To 4 Step 2
  T9[K2] = 0
Next K2
For K1 = 0 To 8 Step 2
  C5[K1] = 0
Next K1
CFIN[0] = 0 \ CFIN[2] = 0
C10[0] = 0 \ C10[2] = 0
Mat Write #2,R1,252;T9
Mat Write #2,R1,288;C5
Mat Write #2,R1,544;CFIN
If BPO$[1,5] = "     " And BUDG[0] > 0 And CFFLG$[2,2] = "D" ! "date related Budget
  If CFFLG$[3,3] <> "C" And CFFLG$[3,3] <> " " ! "custom/none - no renew!!
    X$ = BUDGD[1] Using "&&&&&&"
    BMTH = X$[3,4]
    Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "00000"
    JDATE[1] = X$[1,5]
    X2 = JDATE - JDATE[1]
    If Abs(X2) < 31 ! "over that it's OLD AND EXPIRED OR NOT DUE
      If BUDGD[1] <= ARDATE Or (BMTH = ARMTH) ! "it's expired (or will this mth)
        Gosub BUDGDATE
        BUDG[1] = 0
      End If ! "of renew it
    End If ! "of it's not old expire or not due
  End If ! "of it's renewable
End If 
If DEBUG
  M$ = " ",M$
  M$ = "Writing Customer File "
  Mat Write #0,5;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,6;M$;
End If 
REC = R1 \ Write #2,R1,620;REC
Mat Write #2,R1,754;BUDG
Mat Write #2,R1,766;BUDGD
Mat Write #2,R1,624;C10;
Mat Read #15,R1,4;S2 \ Mat Read #15,R1,238;H1
Gosub L_1300
Mat Write #15,R1,4;S2
Mat Write #15,R1,238;H1;
If P61$[19,19] = "M" ! " cct116552
  Mat Read #2,R1,142;C0
  C0[10] = 0;C0[11] = 0
  Mat Write #2,R1,142;C0;
End If 
If EOY<>0 ! end of year
  A0 = 0
  Mat Read #2,R1,252;T9
  Mat Read #2,R1,288;C5
  Mat Read #2,R1,544;CFIN \ Mat Read #2,R1,624;C10
  Mat Read #15,R1,472;T8
  For K1 = 5 To 1 Step -1
    T8[K1] = T8[K1 - 1]
  Next K1
  T8[0] = T9[3]
  For K2 = 0 To 5
    If K2 <= 1 Let C10[K2] = 0
    T9[K2] = 0
  Next K2
  For K1 = 0 To 9
    C5[K1] = 0
  Next K1
  For K1 = 0 To 3 \ CFIN[K1] = 0 \ Next K1
  Mat Write #2,R1,252;T9
  Mat Write #2,R1,288;C5
  Mat Write #2,R1,544;CFIN \ Mat Write #2,R1,624;C10
  Write #2,R1,190;A0;
  Mat Read #15,R1,4;S2 \ Mat Read #15,R1,238;H1
  Gosub L_1400
  Mat Write #15,R1,4;S2
  Mat Write #15,R1,238;H1
  Mat Write #15,R1,472;T8;
  If P61$[19,19] = "Y"
    Mat Read #2,R1,142;C0
    C0[10] = 0;C0[11] = 0
    Mat Write #2,R1,142;C0;
  End If 
End If ! endo of eoy process
Goto L_1020
L_1300: Rem STD XFER OF NEXT MTH TO LAST YEAR, ZERO NEXT MTH
For I = 0 To 2
  H1[NXMTH,I] = S2[NXMTH,I]
  S2[NXMTH,I] = 0
Next I
Return
L_1400: Rem TOTAL ! "move YTD totals to last years  ONLY DONE IN EOY
For I = 0 To 2
  H1[0,I] = 0
  H1[0,I] = S2[0,I]
  S2[0,I] = 0
Next I
Return 
L_1500: Rem   ******** SALESMAN *********
Print #StatChan;"Processing SalesPerson File "
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  2: SALESMAN... WORKING PLEASE WAIT ";
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(3) - 1
L_1520: Search #3,3,1;A$,R1,E
XX = XX + 1
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current SalesPerson: ";A$
endif	
If E
	Print #StatChan;"Salesperson File Completed " 
	Goto L_2000
endif
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
!If E Goto L_2000
Mat Read #3,R1,130;S1
Mat Read #3,R1,142;T7
If DEBUG
  M$ = " ",M$
  M$ = "Reading Salesman File "
  Mat Write #0,7;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,8;M$;
End If 
For K1 = 0 To 19
  For K2 = 0 To 4 Step 2
    T7[K1,K2] = 0
  Next K2
Next K1
S1[0] = 0
Mat Write #3,R1,130;S1;
Mat Write #3,R1,142;T7;
Mat Read #14,R1,4;S2
Mat Read #14,R1,238;H1
Gosub L_1300
Mat Write #14,R1,4;S2
Mat Write #14,R1,238;H1;
If EOY
  Mat Read #3,R1,130;S1
  Mat Read #3,R1,142;T7
  For K1 = 0 To 19
    For K2 = 0 To 5
      T7[K1,K2] = 0
    Next K2
  Next K1
  S1[0] = 0
  S1[1] = 0
  Mat Write #3,R1,130;S1;
  Mat Write #3,R1,142;T7;
  Mat Read #14,R1,4;S2 \ Mat Read #14,R1,238;H1
  Gosub L_1400
  S1[0] = H1[0,1]
  Mat Write #14,R1,4;S2
  Mat Write #14,R1,238;H1
  Mat Read #14,R1,472;T8
  For K1 = 5 To 1 Step -1
    T8[K1] = T8[K1 - 1]
  Next K1
  T8[0] = S1[0]
  Mat Write #14,R1,472;T8;
End If ! end of eoy
Goto L_1520
L_2000: Rem ******** PARTS ********
print #statchan;"Processing Product File "
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  3: PRODUCTS... WORKING PLEASE WAIT ";
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(4) - 1
L_2020: Search #4,3,1;A$,R1,E \ If E > 2 Gosub ERR_SEARCH
XX = XX + 1
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current Product : ";A$
endif	
If E
	Print #StatChan;"Product File Completed " 
	Goto L_2100:
endif
! If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If E Goto L_2100
Mat Read #4,R1,256;A
A[7] = 0;A[9] = 0;A[11] = 0;A[13] = 0;A[15] = 0
Mat Write #4,R1,256;A;
if sqlChan >= 0
	e = prod_UpdateSQLFromDL4(e$, intCo, A$, sqlChan, 4)
	if e <> 1 ! returns the number of records add/updated/deleted
		gosub err_search
	end if
end if
Mat Read #16,R1,16;S2
Mat Read #16,R1,256;H1
If DEBUG
  M$ = " ",M$
  M$ = "1 of Part 3: Reading Parts File"
  Mat Write #0,9;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,10;M$;
End If 
Gosub L_1300
Mat Write #16,R1,16;S2
Mat Write #16,R1,256;H1;
PWSKey$ = " ",PWSKey$
PWSKey$[1,12] = A$[1,12]
do
	search #40,3,1;PWSKey$,PWSRec,e \ if e>2 gosub err_search:
	if e exit do
	if PWSKey$[1,12] <> A$[1,12] exit do
	mat read #40,PWSRec,14;usage_ty
	mat read #40,PWSRec,92;usage_ly
	mat read #40,PWSRec,170;sales_ty
	mat read #40,PWSRec,248;sales_ly
	mat read #40,PWSRec,326;ldcost_ty
	mat read #40,PWSRec,404;ldcost_ly
	mat read #40,PWSRec,482;avgcost_ty
	mat read #40,PWSRec,560;avgcost_ly
	mat read #40,PWSRec,638;HITS_TY
	mat read #40,PWSRec,716;HITS_LY
	usage_ly[NXMTH] = usage_ty[NXMTH]
	usage_ty[NXMTH] = 0
	sales_ly[NXMTH] = sales_ty[NXMTH]
	sales_ty[NXMTH] = 0
	ldcost_ly[NXMTH] = ldcost_ty[NXMTH]
	ldcost_ty[NXMTH] = 0
	avgcost_ly[NXMTH] = avgcost_ty[NXMTH]
	avgcost_ty[NXMTH] = 0
	HITS_LY[NXMTH] = HITS_TY[NXMTH]
	HITS_TY[NXMTH] = 0
	if EOY
		usage_ly[0] = usage_ty[0]
		usage_ty[0] = 0
		sales_ly[0] = sales_ty[0]
		sales_ty[0] = 0
		ldcost_ly[0] = ldcost_ty[0]
		ldcost_ty[0] = 0
		avgcost_ly[0] = avgcost_ty[0]
		avgcost_ty[0] = 0
		HITS_LY[0] = HITS_TY[0]
		HITS_TY[0] = 0
	end if
	mat write #40,PWSRec,14;usage_ty
	mat write #40,PWSRec,92;usage_ly
	mat write #40,PWSRec,170;sales_ty
	mat write #40,PWSRec,248;sales_ly
	mat write #40,PWSRec,326;ldcost_ty
	mat write #40,PWSRec,404;ldcost_ly
	mat write #40,PWSRec,482;avgcost_ty
	mat write #40,PWSRec,560;avgcost_ly
	mat write #40,PWSRec,638;HITS_TY
	mat write #40,PWSRec,716;HITS_LY;
loop
If EOY
  Mat Read #4,R1,256;A
  A[18] = A[8]
  A[27] = (A[10] + A[14])
  If A[27] < 0 Let A[27] = 0
  A[19] = A[14]
  A[33] = A[30]
  For I = 7 To 17 \ A[I] = 0 \ Next I
  A[30] = 0 \ A[31] = 0 \ A[32] = 0
  Mat Read #16,R1,16;S2 \ Mat Read #16,R1,256;H1
  Gosub L_1400
  Mat Write #16,R1,16;S2;
  Mat Write #16,R1,256;H1;
  Mat Write #4,R1,256;A;
	if sqlChan >= 0
		e = prod_UpdateSQLFromDL4(e$, intCo, A$, sqlChan, 4)
		if e <> 1 ! returns the number of records add/updated/deleted
			gosub err_search
		end if
	end if
  A1$ = A$
  Search #34,2,1;A1$,R2,E
  If E > 1 Gosub ERR_SEARCH
  If E = 1 Gosub BUILD_ITEMHIST \ Goto L_2020
  Mat Read #34,R2,12;IS3;
  For I = 5 To 1 Step -1
    IS3[I] = IS3[I - 1]
  Next I
  IS3[0] = A[18]
  Mat Write #34,R2,12;IS3;
End If ! end of eoy
Goto L_2020
BUILD_ITEMHIST: Rem  "set up new record in itemhist        ONLY DONE IN EOY
If Not(A[18]) Return 
E = 2 \ Search #34,1,0;A1$,R2,E
If E Return 
Search #34,4,1;A1$,R2,E
If E Return 
Write #34,R2,0;A1$[1,12];
For I = 0 To 5 \ IS3[I] = 0 \ Next I
IS3[0] = A[18]
Mat Write #34,R2,12;IS3;
Return 
L_2100: Rem PRODWHSE CHECK FREZ. MONTH COUNTER
Print #statchan;"Processing Product Warehouse File"
ROW = ROW + 1
! Print @0,ROW;'CL';"         PRODUCT WAREHOUSE ";
K5$ = " ",K5$;XX = 0;TOTREC = 0;TOTREC = Chf(5) - 1
L_2110: Search #5,3,1;K5$,R5,E
XX = XX + 1
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current Warhouse: ";k5$[1,2];" Product: ";k5$[3]
endif	
If E
	Print #StatChan;"Product Warehouse File Completed " 
	Goto L_6300
endif
! If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If E Goto L_6300
L_2170: Mat Read #5,R5,228;W5 \ Mat Read #5,R5,306;W6
If DEBUG
  M$ = " ",M$
  M$ = "2 of Part 3: Reading Prodwhse File"
  Mat Write #0,9;M$;
  M$ = " ",M$
  M$ = K5$
  Mat Write #0,10;M$;
End If 
W6[NXMTH] = W5[NXMTH];W5[NXMTH] = 0
Mat Write #5,R5,228;W5 \ Mat Write #5,R5,306;W6;
Mat Read #5,R5,540;W5 \ Mat Read #5,R5,618;W6
Mat Read #5,R5,756;WH3$
W6[NXMTH] = W5[NXMTH];W5[NXMTH] = 0
WH3$[NXMTH,NXMTH] = " "
Mat Write #5,R5,540;W5 \ Mat Write #5,R5,618;W6
Mat Write #5,R5,756;WH3$;
Mat Read #5,R5,444;WH8 \ Mat Read #5,R5,492;WH9
I = NXMTH - 1 \ If I < 0 Let I = 0
WH8[I + 12] = WH8[I];WH8[I] = 0
WH9[I + 12] = WH9[I];WH9[I] = 0
Mat Write #5,R5,444;WH8
Mat Write #5,R5,492;WH9;
Goto L_2110
L_6300: Rem "===================================== sprodwhse
If Not(EOY) Goto L_2300
Print #statchan;"Processing Product Warehouse File - Year to Date Data"
x=0
K6$ = " "
L_6320: Search #5,3,1;K6$,R6,E 
XX = XX + 1
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current Warhouse: ";k6$[1,2];" Product: ";k6$[3]
endif	
If E
	Print #StatChan;"Product Warehouse File - Year to Date Data Completed " 
	Goto L_2300
endif
If E = 2 Goto L_2300
If E Gosub ERR_SEARCH
Read #5,R6,228;W5
Write #5,R6,306;W5
W5 = 0
Write #5,R6,228;W5
Mat Read #5,R6,696;W7
W7[11] = 0
Mat Write #5,R6,696;W7;
Goto L_6320
L_2300: Rem UPDATE ON HAND / AVG FOR CURR MTH - XFER/CLR NXMTH PWSALES
ROW = ROW + 1
! Print @0,ROW;'CL';"         UPDATE PRODUCT WAREHOUSE SALES ";
Print #statchan;"Processing Product Warehouse Sales "
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(4) - 1
L_2310: Search #4,3,1;A$,R[4],E
XX = XX + 1
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current Product: ";A$[1,12]
endif	
If E
	Print #StatChan;"Product Warehouse Sales File Completed " 
	Goto L_2500
endif
If E = 2 Goto L_2500
If E Gosub ERR_SEARCH
Mat Read #4,R[4],156;B;
A1$ = " ",A1$;A1$[1,12] = A$[1,12]
L_2330: Search #5,3,1;A1$,R[5],E \ If E = 2 Goto L_2310
If E Gosub ERR_SEARCH
If A1$[1,12] <> A$[1,12] Goto L_2310
Mat Read #5,R[5],78;W3
Mat Read #5,R[5],846;WHMISC2
W1[0] = A1$[13,14]
If DEBUG
  M$ = " ",M$
  M$ = "3 of Part 3: Update on hand"
  Mat Write #0,9;M$;
  M$ = " ",M$
  M$ = A1$
  Mat Write #0,10;M$;
End If 
Search #33,2,1;A1$,R[33],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  If W3[0] <> 0 Or W3[9] <> 0 ! "if onhand or forecast create it
    E = 2;R[33] = 0 \ Search #33,1,0;A1$,R[33],E \ If E Gosub ERR_SEARCH
    Search #33,4,1;A1$,R[33],E \ If E Gosub ERR_SEARCH
    Write #33,R[33],0;A1$[1,12];
    Write #33,R[33],12;W1[0];
    MONTHS_EXIST = 1
    Write #33,R[33],1158;MONTHS_EXIST
    For I = 0 To 12 \ PWOH[I] = 0 \ Next I
    Mat Write #33,R[33],14;CLRMS;
    Mat Write #33,R[33],248;CLRMS;
    Mat Write #33,R[33],482;PWOH;
    Mat Write #33,R[33],560;PWOH;
    Mat Write #33,R[33],638;PWOH;
    Mat Write #33,R[33],716;PWOH;
    Mat Write #33,R[33],794;PWOH;
    Mat Write #33,R[33],872;PWOH;
    PWOH[ARMTH] = W3[0]
    Mat Write #33,R[33],482;PWOH;
    Mat Read #33,R[33],638;PWAVG
    PWAVG[ARMTH] = W3[15] \ If P9$[32,32] <> "Y" Let PWAVG[ARMTH] = B[21]
    Mat Write #33,R[33],638;PWAVG;
    Mat Read #33,R[33],794;PWOH
    PWOH[ARMTH] = W3[9]
    Mat Write #33,R[33],794;PWOH;
    Gosub TOTAL_SALES_STUFF
    If EOY
      Mat Read #33,R[33],14;S2
      Mat Read #33,R[33],248;H1
      Gosub L_1400
      Mat Write #33,R[33],14;S2
      Mat Write #33,R[33],248;H1;
    End If 
  End If 
  Goto L_2330
End If 
Mat Read #33,R[33],14;S2
Mat Read #33,R[33],248;H1
Gosub L_1300
Mat Write #33,R[33],14;S2
Mat Write #33,R[33],248;H1;
Mat Read #33,R[33],482;PWOH \ Mat Read #33,R[33],560;PWOHL
PWOH[ARMTH] = W3[0];PWOHL[NXMTH] = PWOH[NXMTH];PWOH[NXMTH] = 0
Mat Write #33,R[33],482;PWOH \ Mat Write #33,R[33],560;PWOHL
Mat Read #33,R[33],638;PWAVG \ Mat Read #33,R[33],716;PWAVGL
If P9$[32,32] <> "Y" Let W3[15] = B[21]
PWAVG[ARMTH] = W3[15];PWAVGL[NXMTH] = PWAVG[NXMTH];PWAVG[NXMTH] = 0
Mat Write #33,R[33],638;PWAVG \ Mat Write #33,R[33],716;PWAVGL;
Mat Read #33,R[33],794;PWOH \ Mat Read #33,R[33],872;PWOHL
PWOH[ARMTH] = W3[9];PWOHL[NXMTH] = PWOH[NXMTH];PWOH[NXMTH] = 0
Mat Write #33,R[33],794;PWOH \ Mat Write #33,R[33],872;PWOHL;
Mat Read #33,R[33],950;SRVLVL \ Mat Read #33,R[33],1054;LSRVLVL
LSRVLVL[NXMTH,0] = SRVLVL[NXMTH,0];SRVLVL[NXMTH,0] = 0
LSRVLVL[NXMTH,1] = SRVLVL[NXMTH,1];SRVLVL[NXMTH,1] = 0
Mat Write #33,R[33],950;SRVLVL \ Mat Write #33,R[33],1054;LSRVLVL;
Read #33,R[33],1158;MONTHS_EXIST
MONTHS_EXIST = MONTHS_EXIST + 1 \ If MONTHS_EXIST > 12 Let MONTHS_EXIST = 12
Write #33,R[33],1158;MONTHS_EXIST
Gosub TOTAL_SALES_STUFF
If EOY
  Mat Read #33,R[33],14;S2
  Mat Read #33,R[33],248;H1
  Gosub L_1400
  Mat Write #33,R[33],14;S2
  Mat Write #33,R[33],248;H1;
End If ! done with eoy
Goto L_2330
L_2500: Rem PICK COUNT FILE
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  4: WAREHOUSE ANALYSIS... WORKING PLEASE WAIT ";
Read #1,0,120;S0;
If S0 = 12 Let S0 = 0
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(10) - 1
PRINT #statchan;"Processing Warehouse Analysis "
L_2515: Search #10,3,1;A$,R1,E
If DEBUG
  M$ = " ",M$
  M$ = "Warehouse Analysis"
  Mat Write #0,11;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,12;M$;
End If 
XX = XX + 1
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current key: ";A$
endif	
If E
	Print #StatChan;"Warehouse Analysis File Completed " 
	Goto L_2600
endif
If E Goto L_2600
Mat Read #10,R1,34;P3;
For W0 = 0 To 1
  P3[S0,W0] = 0
Next W0
Mat Write #10,R1,34;P3;
Goto L_2515
L_2600: Rem   ******* TAX BUCKETS *********
print #statchan;"Processing Sales Tax File "
ROW = ROW + 1;XX = 0;TOTREC = 0;TOTREC = Chf(6) - 1
! Print @0,ROW;'CL';"PART  5: TAXES... WORKING PLEASE WAIT ";
For K1 = 0 To Chf(6) - 1
  XX = XX + 1
  If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Record Processed. Current Sales Tax Code ";k1
endif	

  !If Not(Fra(XX / 100)) Gosub DISP_STAT
  Mat Read #6,K1,24;T9
  Mat Read #6,K1,132;TX0
  Mat Read #6,K1,156;TX1
  Mat Read #6,K1,222;TX2
  T9 = 0 \ T9[1] = 0 \ T9[2] = 0
  TX0[0] = 0 \ TX0[1] = 0
  For YY = 0 To 10
    TX1[YY] = 0
  Next YY
  If EOY
    For YY = 0 To 10
      If YY <= 5 Let T9[YY] = 0
      If YY <= 3 Let TX0[YY] = 0
      TX1[YY] = 0;TX2[YY] = 0
    Next YY
  End If 
  Mat Write #6,K1,24;T9
  Mat Write #6,K1,132;TX0
  Mat Write #6,K1,156;TX1
  Mat Write #6,K1,222;TX2;
  If DEBUG
    M$ = " ",M$
    M$ = "Processing the Taxes File"
    Mat Write #0,13;M$;
    M$ = " ",M$
    M$ = K1 Using "###"
    Mat Write #0,14;M$;
  End If 
Next K1
Print #StatChan;"Sales Tax File Completed " 

print #statchan;"Processing Vendor Master File "!!!! mtg ---- Stop Here ----
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  6: VENDORS... WORKING PLEASE WAIT ";
A$ = " ",A$
L_3030: Search #7,3,1;A$,R1,E \ If E > 2 Gosub ERR_SEARCH
If DEBUG
  M$ = " ",M$
  M$ = "Searching vendor File "
  Mat Write #0,15;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,16;M$;
End If 
XX = XX + 1
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
!XX = XX + 1
  If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Record Processed. Vendor Master File. Current Vendor:";A$
endif	
If E Goto L_3095
Mat Read #7,R1,448;V4
V4[0] = 0
If EOY Let V4[1] = 0
Mat Write #7,R1,448;V4;
Mat Read #7,R1,510;V4
V4[0] = 0
If EOY Let V4[1] = 0
Mat Write #7,R1,510;V4;
Goto L_3030
L_3095: print #statchan;"Vendor Master File Completed"
L_3100: Rem ********* CONTROL (THERMO) *******

print #statchan;"Processing A/R and Divisions"
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  7: A/R & DIVISIONS... WORKING PLEASE WAIT ";

Mat Read #23,1,0;N1; \ Mat Read #23,1,150;N2;
Mat Read #1,110,78;ARTL \ Read #1,110,242;P1
If DEBUG
  M$ = " ",M$
  M$ = "Control/Thermo - A/R Division File"
  Mat Write #0,17;M$;
End If 
For X1 = 0 To 4
  ARTL[0] = ARTL[0] + N1[0,X1] + N2[0,X1]
  ARTL[2] = ARTL[2] + N1[2,X1] + N2[2,X1]
  ARTL[3] = ARTL[3] + N1[3,X1] + N2[3,X1]
  ARTL[4] = ARTL[4] + N1[4,X1] + N2[4,X1]
  ARTL[5] = ARTL[5] + N1[1,X1] + N2[1,X1]
  For X2 = 0 To 4
    If X2 <> 2 Let P1[0] = P1[0] + N1[X2,X1] + N2[X2,X1]
    If X2 = 2 Let P1[0] = P1[0] - (N1[X2,X1] + N2[X2,X1])
  Next X2
Next X1
Mat Read #23,2,0;N1; \ Mat Read #23,2,150;N2;
For X1 = 0 To 4
  ARTL[1] = ARTL[1] + N1[0,X1] + N2[0,X1]
  ARTL[2] = ARTL[2] - (N1[2,X1] + N2[2,X1])
  ARTL[3] = ARTL[3] - (N1[3,X1] + N2[3,X1])
  ARTL[4] = ARTL[4] - (N1[4,X1] + N2[4,X1])
  ARTL[5] = ARTL[5] - (N1[1,X1] + N2[1,X1])
  For X2 = 0 To 4
    If X2 <> 2 Let P1[0] = P1[0] - (N1[X2,X1] + N2[X2,X1])
    If X2 = 2 Let P1[0] = P1[0] + (N1[X2,X1] + N2[X2,X1])
  Next X2
Next X1
Mat Write #1,110,78;ARTL;
Read #1,110,6;P8 \ P1[0] = P1[0] - P8
Read #1,110,66;P8 \ P1[0] = P1[0] + P8
Read #11,4,6;P8; \ P1[0] = P1[0] + P8
Write #1,110,242;P1[0];
Mat Write #1,110,6;C2;
Write #1,110,54;C2[0]; \ Write #1,110,66;C2[0];
For W0 = 0 To Chf(8) - 1
  Mat Write #8,W0,0;C1;
  Mat Write #8,W0,42;C1;
Next W0
For R9 = 0 To 99
  Mat Read #11,(R9 * 10) + 2;P9
  P9[1] = 0;P9[4] = 0;P9[7] = 0
  Mat Write #11,(R9 * 10) + 2;P9;
  Mat Read #11,(R9 * 10) + 3;P9
  P9[1] = 0;P9[4] = 0;P9[7] = 0
  Mat Write #11,(R9 * 10) + 3;P9;
  Mat Read #11,(R9 * 10) + 4;P9
  P9[1] = 0
  Mat Write #11,(R9 * 10) + 4;P9;
  Mat Read #11,(R9 * 10) + 5;P9
  P9[1] = 0;P9[4] = 0;P9[7] = 0
  Mat Write #11,(R9 * 10) + 5;P9;
Next R9
For X1 = 0 To 4 \ For X2 = 0 To 4
    N1[X1,X2] = 0;N2[X1,X2] = 0
  Next X2 \ Next X1
Mat Write #23,1,0;N1; \ Mat Write #23,1,150;N2;
Mat Write #23,2,0;N1; \ Mat Write #23,2,150;N2;
XX = 0;TOTREC = 0;TOTREC = Chf(12) - 1
For R1 = 1 To Chf(12) - 1
  XX = XX + 1
  !If Not(Fra(XX / 100)) Gosub DISP_STAT
   If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Record Processed. "
	endif	
  Mat Read #12,R1,28;D0;
  For X = 0 To 3
    D0[X] = 0
  Next X
  If EOY Let D0[4] = 0;D0[5] = 0;D0[6] = 0;D0[7] = 0
  Mat Write #12,R1,28;D0;
Next R1
print #statchan;"A/R and Divisions Completed"

If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_4000
S9[0] = 0 \ If P60$[9,9] = "L" Mat Read #1,52,36;S9;
X$ = ARDATE Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Gosub ERR_SEARCH
JARDATE = X$
ROW = ROW + 1
FLK$ = " ",FLK$;XX = 0;TOTREC = 0;TOTREC = Chf(19) - 1
! Print @0,ROW;'CL';"PART  8: FIFO INVENTORY LOTS... WORKING PLEASE WAIT";
Print #StatChan;" Processing Fifo/Lifo Inventory Lots "
L_3850: Search #19,3,1;FLK$,R[19],E
XX = XX + 1
!If Not(Fra(XX / 100)) Or E = 2 Gosub DISP_STAT
 If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed. Fifo/Lifo Inventory File ";flk$
endif	
If E = 2 Goto L_3990
If DEBUG
  M$ = " ",M$
  M$ = "In Fifo Inventory Lots "
  Mat Write #0,18;M$;
  M$ = " ",M$
  M$ = FLK$
  Mat Write #0,19;M$;
End If 
If E Gosub ERR_SEARCH
Mat Read #19,R[19],102;FL3;
Mat Read #19,R[19],86;FL2;
If Not(S9) Goto L_3865
If FL2[1] > JDATE Goto L_3865
If (FL3[0] - FL3[1]) > 0 Let FL2[3] = 99 \ Mat Write #19,R[19],86;FL2;
L_3865: If (FL3[0] - FL3[1]) Goto L_3850
Mat Read #19,R[19],86;FL2;
If S9 If FL2[3] Goto L_3850
FDATE = FL2[2] \ If Not(FDATE) Let FDATE = FL2[1]
DAYS = JARDATE - FDATE
If DAYS < -15000 Let DAYS = DAYS + 36525
If DAYS < FDAY Goto L_3850
FLT$ = " ",FLT$ \ FLT$[1,6] = R[19] Using "######"
L_3910: Search #20,3,1;FLT$,R[20],E \ If E = 2 Goto L_3950
If E Gosub ERR_SEARCH
R[0] = FLT$[1,6] \ If R[0] <> R[19] Goto L_3950
Search #20,5,1;FLT$,R[20],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #20,1,0;FLT$,R[20],E \ If E Gosub ERR_SEARCH
Goto L_3910
L_3950: Search #19,5,1;FLK$,R[19],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #19,1,0;FLK$,R[19],E \ If E Gosub ERR_SEARCH
Goto L_3850
L_3990: ! end of Fifo/lifo
Print #StatChan;"  Fifo/Lifo Inventory Lots Completed"

L_4000: Rem ****** REST OF MONTHLY FILES *******
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  9: MONTHLY BUCKETS... WORKING PLEASE WAIT";
Print #StatChan;"Processing Monthly Buckets File"
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(13) - 1
L_4020: Search #13,3,1;A$,R1,E
If DEBUG
  M$ = " ",M$
  M$ = "In Monthly Buckets File"
  Mat Write #0,20;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,21;M$;
End If 
XX = XX + 1
! If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed "
endif	
If E Goto L_4095
Mat Read #13,R1,16;S2
Mat Read #13,R1,256;H1
Gosub L_1300
Mat Write #13,R1,16;S2
Mat Write #13,R1,256;H1;
Goto L_4020
L_4095: Print #StatChan;"Monthly Buckets File Completed"

L_4100: Rem ******* DEPT SALES ********
Print #StatChan;"Processing Department Sales Files"
ROW = ROW + 1;A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(17) - 1
! Print @0,ROW;'CL';"         DEPTSLS ";
L_4110: Search #17,3,1;A$,R1,E \ If E > 2 Gosub ERR_SEARCH
If DEBUG
  M$ = " ",M$
  M$ = "In Dept Sales File "
  Mat Write #0,22;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,23;M$;
End If 
XX = XX + 1
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed. ";" Current: ";A$
endif	
If E Goto L_4190
Mat Read #17,R1,16;S2
Mat Read #17,R1,250;H1
Gosub L_1300
Mat Write #17,R1,16;S2
Mat Write #17,R1,250;H1;
Mat Read #17,R1,514;PWAVG
Mat Read #17,R1,592;PWAVGL
PWAVGL[NXMTH] = PWAVG[NXMTH]
PWAVG[NXMTH] = 0
Mat Write #17,R1,514;PWAVG
Mat Write #17,R1,592;PWAVGL;
If EOY
  Mat Read #17,R1,16;S2
  Mat Read #17,R1,250;H1
  Gosub L_1400
  Mat Write #17,R1,16;S2
  Mat Write #17,R1,250;H1
End If ! end of eoy
Goto L_4110
L_4190: Print #StatChan;"Department Sales Files Completed. "
L_4200: Rem ******* VEND/PRODUCT PURCHS ********
Print #StatChan;"Processing Vendor/Product Purchase File"
ROW = ROW + 1;A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(18) - 1
! Print @0,ROW;'CL';"         VEND/PROD";
L_4220: Search #18,3,1;A$,R1,E
If DEBUG
  M$ = " ",M$
  M$ = "In vendor/Product Purchase File"
  Mat Write #0,24;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,25;M$;
End If 
XX = XX + 1
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E Goto L_4290
Mat Read #18,R1,16;S3
Mat Read #18,R1,328;H2
For I = 0 To 3
  H2[NXMTH,I] = S3[NXMTH,I]
  S3[NXMTH,I] = 0
Next I
Mat Write #18,R1,16;S3
Mat Write #18,R1,328;H2;
If EOY
  Mat Read #18,R1,16;S3
  Mat Read #18,R1,328;H2
  For YI = 0 To 3
    H2[0,YI] = S3[0,YI]
    S3[0,YI] = 0
  Next YI
  Mat Write #18,R1,16;S3
  Mat Write #18,R1,328;H2;
  For X1 = 1 To 12
    For Y1 = 0 To 3
      If S3[X1,Y1] Or H2[X1,Y1] Goto L_3190
    Next Y1
  Next X1
L_3220: Rem "no activity ANY year, remove record
  Search #18,5,1;A$,R1,E
  If E Gosub ERR_SEARCH
  A1$ = A$[7,18],A$[1,6],A$[19,20]
  Search #18,5,2;A1$,R1,E
  If E Rem ! "not a critical error
  E = 3 \ Search #18,1,0;A$,R1,E
  If E Gosub ERR_SEARCH
L_3190: End If !  done with eoy
Goto L_4220
L_4290: Print #StatChan;"Vendor/Product Purchase File Compeleted"
L_4300: Rem ********* ENTERED BY FILE ********
Print #StatChan;"Processing Entered By File"
ROW = ROW + 1;XX = 0;TOTREC = 0;TOTREC = 999
! Print @0,ROW;'CL';"         ENTDBY";
For I = 0 To 999
  XX = XX + 1
  ! If Not(Fra(XX / 100)) Gosub DISP_STAT
  If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current Entered by ";i

endif	
  Mat Write #9,I,20;EB;
  If EOY Mat Write #9,I,74;EB;
Next I
XX = 0;TOTREC = 0;TOTREC = Chf(25) - 1
K25$ = " ",K25$;K25$[1,2] = " 2"
L_4350: Search #25,3,1;K25$,R1,E
XX = XX + 1
!If Not(Fra(XX / 100)) Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed "
endif	
If E = 2 Goto L_4558
If E Gosub ERR_SEARCH
I = K25$[1,2] \ If I <> 2 Goto L_4558
Mat Write #25,R1,6;JTL1;
Search #25,5,1;K25$,R1,E \ If E Gosub ERR_SEARCH
E = 3
Search #25,1,0;K25$,R1,E \ If E Gosub ERR_SEARCH
Goto L_4350
L_4558: If EOY
  K25$ = " ",K25$;K25$[1,2] = " 4"
L_4560: Search #25,3,1;K25$,R1,E \ If E = 2 Goto L_4574
  If E Gosub ERR_SEARCH
  I = K25$[1,2] \ If I > 4 Goto L_4574
  Search #25,5,1;K25$,R1,E \ If E Gosub ERR_SEARCH
  E = 3
  Search #25,1,0;K25$,R1,E \ If E Gosub ERR_SEARCH
  Goto L_4560
L_4574: K25$ = " ",K25$;K25$[1,2] = " 3"
  Search #25,3,1;K25$,R1,E \ If E = 2 Goto L_4400
  If E Gosub ERR_SEARCH
  I = K25$[1,2] \ If I > 3 Goto L_4400
  Search #25,5,1;K25$,R1,E \ If E Gosub ERR_SEARCH
  K25$[1,2] = " 4";JTL2 = K25$[1,2]
  Search #25,4,1;K25$,R1,E \ If E Gosub ERR_SEARCH
  Write #25,R1,126;JTL2;
  Goto L_4574
End If ! done with eoy
Print #StatChan;"Entered By File Completed."
L_4400: Rem UPDATE CUSTCRHIST
If P60$[20,20] <> "Y" Goto L_4600
Print #StatChan;"Processing Customer Credit History File"
ROW = ROW + 1
! Print @0,ROW;'CL';"         CUSTCRED";
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(21) - 1
L_4420: Search #21,3,1;A$,R1,E
XX = XX + 1
!If Not(Fra(XX / 100)) Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed ";" Current ";A$
endif	
If E = 2 Goto L_4490
If E Gosub ERR_SEARCH
Mat Read #21,R1,0;CHT0; \ Mat Read #21,R1,8;CHT1;
Mat Read #21,R1,158;CHT2; \ Mat Read #21,R1,308;CHT3;
Mat Read #21,R1,408;CHT4; \ Mat Read #21,R1,508;CHT5
If DEBUG
  M$ = " ",M$
  M$ = "Reading Custcrhist File"
  Mat Write #0,26;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,27;M$;
End If 
If CHT0[1] = ARPER Goto L_4460
message$="CUSTOMER "+A$+" ACCOUNTING PERIODS ARE DIFFERENT. Update Bypassed."
Print #StatChan;message$
goto L_4420: ! get next customer
!goto err_search:
!Print @0,20;'CL RB';"CUSTOMER ";A$;" ACCOUNTING PERIODS ARE DIFFERENT ";
! Print @0,21;'CL RB';"END OF MONTH ABORTED!!!"; \ Gosub ERR_SEARCH
L_4460: For X = 24 To 1 Step -1
  CHT1[X] = CHT1[X - 1] \ CHT2[X] = CHT2[X - 1] \ CHT3[X] = CHT3[X - 1]
  CHT4[X] = CHT4[X - 1] \ CHT5[X] = CHT5[X - 1]
Next X
CHT1[0] = 0 \ CHT2[0] = 0 \ CHT3[0] = 0 \ CHT4[0] = 0 \ CHT5[0] = 0
CHT0[1] = NARPER
Mat Write #21,R1,0;CHT0 \ Mat Write #21,R1,8;CHT1
Mat Write #21,R1,158;CHT2 \ Mat Write #21,R1,308;CHT3
Mat Write #21,R1,408;CHT4 \ Mat Write #21,R1,508;CHT5;
Goto L_4420
L_4490: Print #StatChan;"Customer Credit History File Completed"! 
L_4600: Rem REBUILD GLWHTRAN
If P9$[17,17] <> "Y" Goto L_4700
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_4700
Print #StatChan;"Processing G/L Warehouse Transfer File"
Read #1,88,96;F$;
! need to check if file there ... also need modified
Try Kill F$ Else Rem
tmp$ = "files/",f$
I$ = "[1:30] ",tmp$,"!"
Try Close #22 Else Rem
Build #22,I$
R = 19 \ Search #22,0,1;K5$,R,E \ If E Gosub ERR_SEARCH
R = 1 \ Search #22,0,0;K5$,R,E \ If E Gosub ERR_SEARCH
tmp$ = "files/",f$," <666>" 
Modify tmp$                
Close #22
Print #StatChan;"Completed G/L Warehouse Transfer File"
L_4700: Rem LAST PRICE MTD SALES
If P60$[32,32] <> "Y" Goto L_4800
Print #StatChan;"Processing Last Price Monthly Sales File"
CH_LP = 24
NXTLPFL: Rem "possible a second pass with ShipList Last Price
ROW = ROW + 1
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(CH_LP) - 1
!If CH_LP = 24 Print @0,ROW;'CL';"         LAST PRICE HISTORY ";
!If CH_LP = 35 Print @0,ROW;'CL';"         SHIPLIST LAST PRICE HISTORY";
L_4720: Search #CH_LP,3,1;A$,R1,E
XX = XX + 1
!If Not(Fra(XX / 100)) Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed "
endif	
If E = 2 Goto L_4750
If E Gosub ERR_SEARCH
Mat Read #CH_LP,R1,168;LPR
If DEBUG
  M$ = " ",M$
  M$ = "Reading Lastprice File"
  Mat Write #0,28;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,29;M$;
End If 
LPR[3] = 0
If EOY
  Write #CH_LP,R1,256;LPR[4]
  LPR[4] = 0
End If 
Mat Write #CH_LP,R1,168;LPR;
Goto L_4720
L_4750: Rem "need another pass for ShipList?
If P61$[64,64] = "Y" And CH_LP = 24 ! "yep, do shiplist now
  CH_LP = 35 \ Goto NXTLPFL
End If 
L_4790: Print #StatChan;"Last Price Monthly Sales File Completed"
L_4800: Rem CLEAR CMTOT & INVTOT
Print #StatChan;"Processing Monthly Credit Memo and Invoices Total Files"
ROW = ROW + 1
! Print @0,ROW;'CL';"         REMAINDER OF MONTHLY FILES";
R = Chf(26) \ R = R - 1
For R1 = 0 To R
  Mat Write #26,R1,0;Q2; \ Mat Write #26,R1,54;Q2;
Next R1
R = Chf(27) \ R = R - 1
For R1 = 0 To R
  Mat Write #27,R1,0;Q2; \ Mat Write #27,R1,54;Q2;
Next R1
If P9$[17,17] = "Y"
  Read #1,88,240;F$; 
  Call FindF(F$,A9) \ If A9 Kill F$
  RLEN = 26 \ KLEN = 15 \ Gosub L_8200
  Read #1,88,256;F$; 
  Call FindF(F$,A9) \ If A9 Kill F$
  RLEN = 32 \ KLEN = 11 \ Gosub L_8200
  Read #1,88,272;F$; 
  Call FindF(F$,A9) \ If A9 Kill F$ 
  RLEN = 14 \ KLEN = 6 \ Gosub L_8200
  F$ = COMP Using "3/SCRMOH#" 
  Call FindF(F$,A9) \ If A9 Kill F$
  RLEN = 40 \ KLEN = 6 \ Gosub L_8200
  F$ = COMP Using "3/SCRMOL#" 
  Call FindF(F$,A9) \ If A9 Kill F$
  RLEN = 15 \ KLEN = 11 \ Gosub L_8200
  F$ = COMP Using "3/SCRMOA#" 
  Call FindF(F$,A9) \ If A9 Kill F$
  RLEN = 11 \ KLEN = 6 \ Gosub L_8200
  If P9$[2,2] = "M"
    F$ = COMP Using "3/GLMFGMOH#"
    Call FindF(F$,A9) \ If A9 Kill F$
    RLEN = 29 \ KLEN = 9 \ Gosub L_8200
    F$ = COMP Using "3/GLMFGMOL#"
    Call FindF(F$,A9) \ If A9 Kill F$
    RLEN = 20 \ KLEN = 9 \ Gosub L_8200
    F$ = COMP Using "3/GLMFGMOA#"
    Call FindF(F$,A9) \ If A9 Kill F$
    RLEN = 13 \ KLEN = 6 \ Gosub L_8200
  End If 
End If 
Read #1,88,1536;F$; 
Call FindF(F$,A9) \ If A9 Kill F$
RLEN = 125\ KLEN = 5 \ Gosub L_8200
B6 = 0
For R1 = 1 To Chf(28) - 1
  Write #28,R1,40;B6; \ Write #28,R1,44;B6; \ Mat Write #28,R1,48;B4;
Next R1
B5 = 0
For R1 = 1 To Chf(29) - 1
  Write #29,R1,30;B5;
Next R1
For R1 = 1 To Chf(30)
  Write #30,R1,30;B5;
Next R1
B6 = 0 \ Write #1,20,34;B6; \ Write #1,20,38;B6;
Print #StatChan;"Monthly Credit Memo and Invoices Total Files Completed"
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(31) - 1
Print #StatChan;"Processing Monthly Nonstock File"
L_5120: Search #31,3,1;A$,R1,E
XX = XX + 1
!If Not(Fra(XX / 100)) Or E = 2 Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed "
endif	
If E = 2 Goto L_5190
If E Gosub ERR_SEARCH
Mat Read #31,R1,0;NSL7 \ Mat Read #31,R1,72;L8
If DEBUG
  M$ = " ",M$
  M$ = "Reading Sproddesc File"
  Mat Write #0,30;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,31;M$;
End If 
If NSL7[2] > 0
  Mat Read #32,NSL7[2],168;L7;
  If L7[0] Let L8[1] = 0;L8[4] = 0 \ Mat Write #31,R1,72;L8;
  Goto L_5120
End If 
Search #31,5,1;A$,R1,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #31,1,0;A$,R1,E \ If E Gosub ERR_SEARCH
Goto L_5120
L_5190: Print #StatChan;"Monthly Nonstock File Completed"
L_5200: Rem PURGE POCNTRL INFO
Goto L_5400
L_5400: Rem *** CUSTOMER/SHIPLIST SALES
ROW = ROW + 1
! Print @0,ROW;'CL';"PART  9A: CUSTOMER SHIP LISTS... WORKING PLEASE WAIT";
Print #StatChan;"Processing Customer Ship List Monthly Buckets File"
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(37) - 1
L_5420: Search #37,3,1;A$,R1,E
If DEBUG
  M$ = " ",M$
  M$ = "In CSL Monthly Buckets File"
  Mat Write #0,32;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,33;M$;
End If 
XX = XX + 1
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed "
endiF
If E Goto L_5490
Mat Read #37,R1,16;S2
Mat Read #37,R1,256;H1
Gosub L_1300
Mat Write #37,R1,16;S2
Mat Write #37,R1,256;H1;
Goto L_5420
l_5490: Print #StatChan;"Customer Ship List Monthly Buckets File Completed."
L_5500: Rem "shiplist
A$ = " ",A$;XX = 0;TOTREC = 0;TOTREC = Chf(38) - 1
Print #StatChan;"Processing Customer Ship List File"
L_5520: Search #38,3,1;A$,R1,E
If DEBUG
  M$ = " ",M$
  M$ = "In Customer Ship Lists File"
  Mat Write #0,34;M$;
  M$ = " ",M$
  M$ = A$
  Mat Write #0,35;M$;
End If 
XX = XX + 1
!If Not(Fra(XX / 100)) Or E Gosub DISP_STAT
If Not(Fra(XX / 5000))
	Print #StatChan;xx;" Records Processed "
endif	
If E Goto L_5590
Mat Read #38,R1,426;X$;
CFFLG$ = " ",CFFLG$
CFFLG$[2] = X$[1,5]
Mat Read #38,R1,432;BPO$
Mat Read #38,R1,452;BUDG
Mat Read #38,R1,464;BUDGD
If BPO$[1,5] = "     " And BUDG[0] > 0 And CFFLG$[2,2] = "D" ! "date related Budget
  If CFFLG$[3,3] <> "C" And CFFLG$[3,3] <> " " ! "custom/none - no renew!!
    X$ = BUDGD[1] Using "&&&&&&"
    BMTH = X$[3,4]
    Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "00000"
    JDATE[1] = X$[1,5]
    X2 = JDATE - JDATE[1]
    If Abs(X2) < 31 ! "over that it's OLD AND EXPIRED OR NOT DUE
      If BUDGD[1] <= ARDATE Or (BMTH = ARMTH) ! "it's expired or will this mth
        Gosub BUDGDATE
        BUDG[1] = 0
      End If 
    End If ! "of it's not over 30days
  End If ! "of it's renewable
End If 
Mat Write #38,R1,452;BUDG
Mat Write #38,R1,464;BUDGD;
Goto L_5520
L_5590: Print #StatChan;"Customer Ship List File Completed"
L_5600: Rem " **** END (or next file) ****
Goto L_8000
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) \ If E Gosub ERR_SEARCH
ARDATE = X$
Call DateToJulian(1,X$,X$,E) \ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JDATE = X2
Return 
NUM2DATE: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
JUL2DATE: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
DATE2NUM: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
JUL2NUM: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem WRITE LAST EOM
Mat Read #1,0;D$
Gosub L_8075 \ D$[9,16] = X$[1,8]
Gosub L_8030 \ D$[17,24] = T$[1,8]
Mat Write #1,0;D$
Print #StatChan;"------ END OF PERIOD PROCESSING COMPLETE ------"
Goto OUTEND
L_8030: Rem GET TIME
J4$ = "" \ Call Time(J4$)
T$ = "HH:MM AM"
HR = J4$[15,16]
T$[4,5] = J4$[18,19]
If HR = 0 Let HR = 12 \ Goto L_8070
If HR = 12 Let T$[7,7] = "P" \ Goto L_8070
If HR > 12 Let HR = HR - 12 \ T$[7,7] = "P"
L_8070: T$[1,2] = HR Using "##" \ Return 
L_8075: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto L_8115
Next K1
Stop 
L_8115: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
L_8200: Rem BUILD MONTHLY FILES
!If Err 0 Rem
Try Close #22 Else Rem
! If Err 0 Gosub ERR_TRAP
I$ = RLEN Using "[1:&&&&] "
tmp$ = "files/",f$
I$[Len(I$)] = " ",tmp$,"!"
Build #22,I$
R = KLEN \ Search #22,0,1;K5$,R,E \ If E Gosub ERR_SEARCH
R = 1 \ Search #22,0,0;K5$,R,E \ If E Gosub ERR_SEARCH
If DEBUG
  M$ = " ",M$
  M$ = "Build Monthly Files "
  Mat Write #0,34;M$;
  M$ = " ",M$
  M$ = K5$
  Mat Write #0,35;M$;
End If 
tmp$ = "files/",f$," <666>" 
Modify tmp$                         
try Close #22 Else Rem
Return 
!DISP_STAT: Rem =========================================================
!If TOTREC Print Using "    [ ###% ]";@55,ROW;(XX / TOTREC * 100)
!If E Print @55,ROW;"    [ 100% ]"
!Return 
TOTAL_SALES_STUFF: Rem accumulate sales stuff for whse
Read #5,R[5],156;K_COST_PERCENT
Mat Read #5,R[5],846;WHMISC2
Mat Read #33,R[33],14;PWS
Mat Read #33,R[33],248;PWSL
Mat Read #33,R[33],482;PWOH
Mat Read #33,R[33],560;PWOHL
Mat Read #33,R[33],638;PWAVG
Mat Read #33,R[33],716;PWAVGL;
COST_GOODS_SOLD = 0
AVE_INVT_COST = 0
SALES_DOLLARS = 0
AVE_INVT_INVEST = 0
AVE_INVT = 0
For LOOP_ = 1 To 12
  If LOOP_ = NXMTH Let COST_GOODS_SOLD = COST_GOODS_SOLD + (PWAVGL[LOOP_] * PWSL[LOOP_,0])
  If LOOP_ = NXMTH Let AVE_INVT_COST = AVE_INVT_COST + FNR((PWAVGL[LOOP_] * PWOHL[LOOP_]))
  If LOOP_ = NXMTH Let AVE_INVT = AVE_INVT + PWOHL[LOOP_]
  If LOOP_ = NXMTH Let SALES_DOLLARS = SALES_DOLLARS + PWSL[LOOP_,1]
  COST_GOODS_SOLD = COST_GOODS_SOLD + (PWAVG[LOOP_] * PWS[LOOP_,0])
  AVE_INVT_COST = AVE_INVT_COST + FNR((PWAVG[LOOP_] * PWOH[LOOP_]))
  AVE_INVT = AVE_INVT + PWOH[LOOP_]
  SALES_DOLLARS = SALES_DOLLARS + PWS[LOOP_,1]
Next LOOP_
PREVEOMBAL = PWOHL[NXMTH]
If NXMTH < 12
  For LOOP_ = (NXMTH + 1) To 12
    UNITPURCH = PWOH[LOOP_] - PREVEOMBAL + PWS[LOOP_,0]
    If UNITPURCH < 0 Let UNITPURCH = 0
    AVE_INVT_INVEST = AVE_INVT_INVEST + (UNITPURCH * PWAVG[LOOP_])
    PREVEOMBAL = PWOH[LOOP_]
  Next LOOP_
End If 
If NXMTH > 1
  For LOOP_ = 1 To (NXMTH - 1)
    UNITPURCH = PWOH[LOOP_] - PREVEOMBAL + PWS[LOOP_,0]
    If UNITPURCH < 0 Let UNITPURCH = 0
    AVE_INVT_INVEST = AVE_INVT_INVEST + (UNITPURCH * PWAVG[LOOP_])
    PREVEOMBAL = PWOH[LOOP_]
  Next LOOP_
End If 
LOOP_ = NXMTH - 1
If LOOP_
  PREVEOMBAL = PWOHL[LOOP_]
Else 
  PREVEOMBAL = PWOH[12]
End If 
UNITPURCH = PWOHL[NXMTH] - PREVEOMBAL + PWSL[NXMTH,0]
If UNITPURCH < 0 Let UNITPURCH = 0
AVE_INVT_INVEST = AVE_INVT_INVEST + (UNITPURCH * PWAVGL[NXMTH])
GROSS_MARGIN = 0
If SALES_DOLLARS
  GROSS_MARGIN = ((SALES_DOLLARS - COST_GOODS_SOLD) / SALES_DOLLARS)
End If 
AVE_INVT = FNR(AVE_INVT / MONTHS_EXIST)
AVE_INVT_VALUE = (AVE_INVT_COST / MONTHS_EXIST)
TURNS = 0
If AVE_INVT_VALUE
  TURNS = FNI((COST_GOODS_SOLD / AVE_INVT_VALUE))
End If 
ROI = (TURNS * GROSS_MARGIN)
CARRY_COST = AVE_INVT_VALUE * K_COST_PERCENT
ADJUST_MARGIN = 0
If SALES_DOLLARS
  ADJUST_MARGIN = ((SALES_DOLLARS - COST_GOODS_SOLD - CARRY_COST) / SALES_DOLLARS)
End If 
WHMISC2[1] = AVE_INVT_VALUE
WHMISC2[2] = TURNS
WHMISC2[3] = FNR(ROI * 100) / 100
WHMISC2[4] = FNR(ADJUST_MARGIN * 100) / 100
WHMISC2[5] = AVE_INVT
WHMISC2[6] = FNR(GROSS_MARGIN * 100) / 100
Mat Write #5,R[5],846;WHMISC2;
Return 
BUDGDATE: Rem "Set up new budget end date (if expired)
If CFFLG$[3,3] <> "C" And CFFLG$[3,3] <> " " ! "others would recalc
  X$ = BUDGD[1] Using "&&&&&&"
  Call DateToJulian(1,X$,X$,E) \ If E Return 
  X2 = X$[1,5]
  X2 = X2 + 1
  X$ = X2 Using "######"
  Call JulianToDate(1,X$,X$,E) \ If E Return 
  Rem end date calcs (or an attempt to try)
  X1[1] = X$[1,2];X1[2] = X$[4,5];X1[3] = X$[7,8]
  If X1[3] <> NXYEAR Let X1[3] = NXYEAR
  If X1[1] <> NXMTH Let X1[1] = NXMTH
  If X1[2] <> 1 Let X1[2] = 1
  T$ = X1[3] Using "&&";T$[3] = X1[1] Using "&&";T$[5] = X1[2] Using "&&"
  BUDGD[0] = T$
  If CFFLG$[3,3] = "M" ! "monthly - expire in a month? or end of month?
    X1[1] = X1[1] + 1
    If X1[1] > 12 ! "past end of year
      X1[1] = X1[1] - 12
      X1[3] = X1[3] + 1 \ If X1[3] > 99 Let X1[3] = X1[3] - 100
    End If 
    Gosub CHKEDATE
  End If 
  If CFFLG$[3,3] = "Q" ! "quarterly - in three mths? or calendar?
    X1[1] = X1[1] + 3
    If X1[1] > 12 ! "past end of year
      X1[1] = X1[1] - 12
      X1[3] = X1[3] + 1 \ If X1[3] > 99 Let X1[3] = X1[3] - 100
    End If 
    Gosub CHKEDATE
  End If 
  If CFFLG$[3,3] = "S" ! "semi-annual - in 6 mths? or calendar?
    X1[1] = X1[1] + 6
    If X1[1] > 12 ! "past end of year
      X1[1] = X1[1] - 12
      X1[3] = X1[3] + 1 \ If X1[3] > 99 Let X1[3] = X1[3] - 100
    End If 
    Gosub CHKEDATE
  End If 
  If CFFLG$[3,3] = "A" ! "annual - in 1 yr? or end of calendar year?
    X1[3] = X1[3] + 1
    If X1[3] > 99 Let X1[3] = X1[3] - 100
    Gosub CHKEDATE
  End If 
  BUDGD[1] = J1
  Goto DTRNGDONE
End If 
DTRNGDONE: Rem "finito
Return 
CHKEDATE: Rem "get valid date from x1[1-3]
E = 0;J1 = 0
X$ = " ",X$
X$[1,2] = X1[3] Using "&&"
X$[3,4] = X1[1] Using "&&"
X$[5,6] = X1[2] Using "&&"
X$[7] = ""
Call DateToJulian(1,X$,X$,E)
If E ! "bad date - fix it by reducing a day (most likely <31 days?)
  X1[2] = X1[2] - 1
  If X1[2] < 0 ! "before begining of any month
    X1[2] = 31
    X1[1] = X1[1] - 1
    If X1[1] < 1 ! "now before jan
      X1[3] = X1[3] - 1
      If X1[3] < 0 Let X1[3] = 99
    End If 
  End If 
  Goto CHKEDATE
End If 
X2[1] = X$[1,5]
X2[1] = X2[1] - 1
X$ = X2[1] Using "#####"
Call JulianToDate(1,X$,X$,E) \ If E Return 
Gosub DATE2NUM
J1 = X2
Return 

ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/mx401a.se!","")  
call programdump()
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
!Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
!Call AddToStr(e$,rstr$,WebStr$)                            
!Call SetOutPut(e$,rstr$) 
call programdump()
Print #Statchan;e$
error 10000
End                                   






OUTEND: Rem E.O.J
S0 = 0
Write #1,1,2;S0;
D8 = 999999 \ Write #1,0,112;D8;
Read #1,0,120;S0
S0 = S0 + 1 \ If S0 > 12 Let S0 = 1
Write #1,0,120;S0;
Write #1,0,118;S0;
!If Err 0 Rem
ROW = ROW + 1
!Print @0,ROW;'CL';"PART 10: REVIEW PERIODS... WORKING PLEASE WAIT ";
!Print @55,ROW;'CL';"[not available]";
!Print #StatChan;"Processing Review Periods "
	
If DEBUG
  M$ = " ",M$
  M$ = "Part 10, Review Periods"
  Mat Write #0,36;M$;
End If 
!Close 
!Swap "MXREV"
!Print #StatChan;"Review Periods Completed "
Print #statchan;"Processing Review Periods "
CALL "MXREV.DL4",intco,statchan
!E = 2 \ Gosub DISP_STAT
If DEBUG
  M$ = " ",M$
  M$ = "About to Chain mx401b"
  Mat Write #0,29;M$
End If 
If EOY<>0
	Print #statchan;"Processing Additional Year End Files "
	Chain "401b.dl4"
endif
Print #StatChan;"End Of Month Completed "

!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!let returnstatus=1
!if not(eflag)
!	returnstatus=1
!	if message$=""
!		let message$=message$+"End of Period Completed"
!		message$=message$+"."
!	endif
!endif
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)
!try Call dxclose() else rem

ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
