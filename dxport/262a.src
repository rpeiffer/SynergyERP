! >>> Program 262A
!
! description Back Order Release Register Unreleased
!
! loadsave -w -n 100,10 -o prog/dxport/262a.dl4 src/262a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX262A - PRODUCT BACK ORDERS
Rem AUTHOR: DAFFY DAN   MAR 26, 1987
Rem LAST UPDATE:  rjs 11/24/93 add non-stock logic
! jliu 10/13/03 cct171339 add new prompt - only print released back order  
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 22, 2004  11:37:08
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx2/mx262a.src (univ2) [jcs] {24957}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault
Declare External Function OpenFile,PDate$,getuidrec,JDate$
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub InpBuf,String,Time
! Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2],PRNTRBO,SSort,IntCo
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],BASE,FIELD
Com 2%,C4[8],E$[500],RSTR$[1500]
If Err 0 Gosub ERR_TRAP
Dim L1$[60],L2$[20],C1$[30],B0$[12]
Dim 1%,L3[3],H4[2],EUN[2],UN[2],OLDS9,s9
Dim 2%,L2[1],L4[3],L6[5],H0[12],H5[5]
Dim 3%,L5[3],B0[11],L7[12],OLM[5],UNF[6],AVAIL
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8],U5$[10]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],UNIT$[4]
Dim S2$[12],P9$[50],3%,OREF[5],msg$[100]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
!Try 
!call dxopen() ! may not need this! NEEDS FOR DXTEST RUN!!
!Else
	Rem
!End try
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo
Close #1 ! as getsession opens READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 7
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1888","1840","1808","1792","2576","1728"
! If PRNTRBO Goto OUTEND ! Only wants released BO's (each report separate)
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;J1$;
Read #1,20,2;S9;
OLDS9 = S9
If S9 <= 0 Goto L_8900
call dxget("RN262",tmp$)
X$="P" \ if tmp$<>"" Let X$="E"
!If X$ = "P" Goto L_1900
If X$ = "E" Goto DONE
!If Err 0 Let J8 = Spc(8)
J8 = 0;j2=0
Try let J9 = Chf(0) Else Let J8=49
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
! If J8 goto OUTEND ! ONLY 1 format per xml file!!! cannot do multiple
J9 = 55 \ If J8 Let J9 = 20
J1=99 ! so does tof
S9 = -2
Write #1,20,2;S9;
!took out sort by product code as it's not used as bowork dir 1 is already by prod
L_1900: ! Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
If J8  ! can allow xml as EACH REPORT SEPARATE
		! <section>
		tmp$ = bsdel$,"262a",fdel$,rdel$
		Call addtostr(e$,rstr$,tmp$)
		Tmp$="ITEM CODE",fdel$,"DESCRIPTION",fdel$,"DESCRIPTION2",fdel$
		Tmp$=Tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$,"ORDER",fdel$
		tmp$=tmp$,"LNE",fdel$,"PRI",fdel$,"DUE DATE",fdel$,"QTY B/O",fdel$
		tmp$=tmp$,"UM",fdel$,"MESSAGE",fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
Endif
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
! If J8 Print 'CS';
! If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
L_2000: Search #6,3,1;K1$,R6,E
If E Goto L_9100
Mat Read #6,R6,0;B0$;
Mat Read #6,R6,12;B0;
R1 = B0[3]
Mat Read #2,R1,0;L2;
Mat Read #2,R1,8;L3;
Mat Read #2,R1,16;L4;
Mat Read #2,R1,32;L5;
Mat Read #2,R1,56;L6;
Mat Read #2,R1,80;L1$;
Mat Read #2,R1,140;L2$;
If B0[7] = 2 Goto L_2000
Mat Read #2,R1,168;L7; \ Mat Read #2,R1,250;UN;
Mat Read #2,R1,404;OLM; \ Mat Read #2,R1,446;EUN; \ Mat Read #2,R1,452;UNF;
If L3 Let L2$[2,12] = L2$[1,11] \ L2$[1,1] = "+"
If S2$ <> "" If S2$ <> L2$[1,12] Gosub L_4500
If L3[0] Gosub L_30000
If Not(L3) Mat Read #5,L4,256;A;
If Not(L3) Mat Read #5,L4,512;PFU1; \ Mat Read #5,L4,554;PFU2;
Gosub L_2500 \ Goto L_2000
Gosub L_3000
! If Not(L7[3]) Let L7[3] = L7[4] ! ?? IF NO BO LET BO=SHIPPED?
IF NOT(L7[3]) AND B0[8] LET L7[3]=B0[8] !! SOUNDS BETTER - IF NO BO LET BO=ORIG BO
If Not(L7[3]) and b0[6] let l7[3]=B0[6] !!
If Not(L7[3]) Let L7[3] = L7[4]
L5[3] = FNR(OLM[3] * L7[3])
Gosub L_5800
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
CNVTA = L7[3] \ Gosub L_7500
L7[3] = AMOUNT
If PFU1[8] > 0 Mat Read #7,PFU1[8],10;UNIT$;
If PFU1[8] = -1 Let UNIT$ = "CWT "
If PFU1[8] = -2 Let UNIT$ = "LOT "
X2 = H5[1] \ Gosub L_7700
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS CALC
T8[9] = T8[9] + L7[3] \ T9[9] = T9[9] + L7[3]
T8[10] = T8[10] + B0[6] \ T9[10] = T9[10] + B0[6]
Return 
L_2500: Rem GET ORDER HEADER
J2$ = " ",J2$ \ X2 = L2[1]
For J = 1 To 7
  J2$ = J Using "##"
  J2$[3] = X2 Using "######"
  Search #3,2,1;J2$,R3,E
  If Not(E) Goto L_2600
Next J
Return 
L_2600: Rem FOUND ONE
Mat Read #3,R3;H0;
If H0[0] > 7 Return 
Mat Read #3,R3,78;H4;
Mat Read #3,R3,104;H5;
Mat Read #3,R3,512;OREF;
Return 1
L_3000: Rem GET CUSTOMER INFO
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #4,2,1;J3$,R4,E
If E Goto L_3070
Mat Read #4,R4,30;C1$;
Return 
L_3070: Rem NOT FOUND
C1$ = "** ERROR ** CUSTOMER NOT FOUND"
Return 
L_4000: Rem TOTAL PRINT
If J8 Goto L_4187
Goto L_4187
Print #0;"\15\** TOTALS **";
Print #0; Using "#######.##"; Tab 110;T9[9];
Print #0; Using "#######.##"; Tab 121;T9[10];
L_4187: Rem
Return 
L_4500: Rem PROD TOTAL
If Not(J8) ! to pdf/printer
	Gosub L_5800
	If S2$[1,1] <> "+" Gosub L_6000
	Print #0;"\15\** PRODUCT TOTALS **";
	Print #0; Using "#######.##"; Tab 102;T8[9];
	If S2$[1,1] <> "+" 
		print #0;" AVL: ";
		if abs(avail)<=99999.99
			Print #0; Using "-----#.## ";AVAIL;
			else 
			Print #0; Using "--------# ";AVAIL;
		endif
		print #0;UNIT$;
	endif
	Print #0;"\15\"
	J1 = J1 + 2
Endif
T8[9] = 0 \ T8[10] = 0 \ AVAIL = 0
S2$ = ""
Return 
L_5000: Rem PRINT LINE
If J8 ! to xml
	tmp$=L2$[1,12],fdel$,L1$[1,30],fdel$,L1$[31,57],fdel$
	tmp$=tmp$,H0[4] Using "######",fdel$,C1$[1,25],fdel$
	tmp$=tmp$,H0[7] Using "######",fdel$,L3[2] Using "###",fdel$
	tmp$=tmp$,(9 - B0[11]) Using "###",fdel$
	tmp$=tmp$,X$[1,10],fdel$,L7[3] Using "#######.##",fdel$
	tmp$=tmp$,unit$,fdel$
	tmp1$=""
	If B0[7] = 9 tmp1$="LINE DELETED "
	If B0[7] = 8 tmp1$="OUT OF STOCK "
	If Not(L3[0]) If B0[7] = 0 tmp1$="LINE SKIPPED "
	If L3[0] = 1 If B0[7] = 0 tmp1$="NON STOCK ITEM"
	tmp$=tmp$,tmp1$,fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
Else
	If Not(L3[0]) If S2$ = L2$[1,12] Goto L_5015
	If L3[0] If S2$ = L2$[1,12] Goto L_5010
	Print #0; Tab 1;L2$[1,12];
	L_5010: Print #0; Tab 14;L1$[1,30];
	L_5015: Print #0; Using "######"; Tab 44;H0[4];
	Print #0; Tab 51;C1$[1,25];
	Print #0; Using "######"; Tab 77;H0[7];
	Print #0; Using "###"; Tab 83;L3[2];
	Print #0; Using "###"; Tab 88;9 - B0[11];
	Print #0; Tab 92;X$[1,10];
	Print #0; Using "#######.##"; Tab 102;L7[3];
	If B0[7] = 9 Print #0; Tab 115;"LINE DELETED ";
	If B0[7] = 8 Print #0; Tab 115;"OUT OF STOCK ";
	If Not(L3[0]) If B0[7] = 0 Print #0; Tab 115;"LINE SKIPPED ";
	If L3[0] = 1 If B0[7] = 0 Print #0; Tab 115;"NON STOCK ITEM";
	If P9$[26,26] <> "Y" Goto L_5770
	If L1$[31,57] = "                           " Goto L_5770
	If Not(L3[0]) If S2$ <> L2$[1,12] Print #0; \ Print #0; Tab 14;L1$[31,57];
	If L3[0] Print #0; \ Print #0; Tab 14;L1$[31,57];
	J1 = J1 + 1
	L_5770: !
	Print #0;"\15\";
Endif
S2$ = L2$[1,12]
Return 
L_5800: Rem HEADINGS ROUTINE
If J8 Return ! not on xml
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 262A - ";T9$;
Print #0; Tab 47;"U N R E L E A S E D   B A C K - O R D E R S"
Print #0;"\15\";
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 14;"DESCRIPTION";
Print #0; Tab 44;"CUST #";
Print #0; Tab 51;"CUSTOMER NAME";
Print #0; Tab 77;"ORDER";
Print #0; Tab 83;"LNE";
Print #0; Tab 88;"PRI";
Print #0; Tab 93;"DUE DATE";
Print #0; Tab 105;"QTY B/O ";
Print #0;" "
Print #0;"\15\";
Return 
L_6000: Rem ==================================== GET AVAILABLE
If PFU1[8] > 0 Mat Read #7,PFU1[8],10;UNIT$;
If PFU1[8] = -1 Let UNIT$ = "CWT "
If PFU1[8] = -2 Let UNIT$ = "LOT "
AVAIL = A - A[1] - A[3]
If P9$[28,28] = "Y" Let AVAIL = AVAIL + A[2]
If Not(PFU1[8]) Let UNIT$ = "ERR!" \ Goto L_6090
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = AVAIL \ Gosub L_20000
AVAIL = AMOUNT
L_6090: Return 
L_7500: Rem UNIT CONVERSION RETURNS AMOUNT
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
Gosub L_20000
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$=PDATE$(X2)
Return
! old convert date
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,E$,RSTR$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
L_8900: Rem NO IN PROCESS
If S9 = 0 Message$="BACK ORDERS RELEASE NOT IN PROCESS "
If S9 = -2 Message$="A BACKORDER REGISTER IS BEING PRINTED ELSEWHERE"
If S9 = -1 Message$="BACKORDER ENTRY/EDIT CURRENTLY IN PROGRESS"
If S9 = -3 Message$="BACKORDER ACCEPT CURRENTLY IN PROGRESS"
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)

	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
L_9100: Rem END OF THIS RANGE
Gosub L_4500
Gosub L_4000
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE  ";'CL'; \ Input ""J$
For K = 0 To 10
  T9[K] = 0
Next K
!If K2$ = "" Goto OUTEND
!End 
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml (TO BROWSER )
  
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  !External Lib "libgeneral.lib"
  !Declare External Sub XMLtoExcel
  !Call XMLtoExcel(e$,"262a.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
Else
	tmp1$="OK - Report Complete"
	Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
End If 
S9 = 2
Write #1,20,2;S9;
Try Close #0 Else REM
try Call dxclose() else rem
END
!Print 'CS'
!Close #2,#3,#4,#5,#6
!Chain "MX262B"
!Stop 
DONE: Write #1,20,2;OLDS9; ! outta here
tmp1$="OK - Report Not Run"
Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
try Call dxclose() else rem
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Goto ERR_MAIN
ERR_MAIN: Rem
! If Err 0 Rem
e$ = msg$
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}