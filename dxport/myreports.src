! --- myreports
! branch to different form prints (pick ticket, ack, inv, etc) 
!
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/myreports.dl4 src/myreports.src
!
!include copyright, common libs, common intrinsics
Include "src/copyright.inc"
!
include "src/myreports.inc"
!
!
!
! *declare additional dl4 intrinsic subs & functions
Declare Intrinsic Function FindChannel
Declare Intrinsic Sub Logic,Env,FindF
!
! *declare additional external libs & subs & functions
External Lib "libgeneral.lib"
Declare External Sub getsession,AddToStr,SetOutPut,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function openfile
Declare External Sub LogAccess
!external lib "libfile?code?.lib"  !drop lists
!declare external function fileget?code?,fileupdate?code?,filedroplist?code? 
!
external lib "libdroplist.lib"
declare external sub PrintersDropList

Declare External Function CheckSize
Declare Sub GetDirList, GetRptList, GetReport, DeleteReport, FixReportsList
!
!
! **main procedure
!
!
! dim variables used by program
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
Try 
  Dim action$[30],options$[30],userid$[8],b$[200],3%
  Dim action1$[30],action2$[30],action3$[30] ! actions for programs
  Dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1000] ! .net delimiters
  Dim WebStr$[1000],Message$[200],tmp$[500],tmp1$[500],fname$[255],dirname$[255],srchstring$[100]
  Dim myrkey$[26],scratch$[1000],url$[255],imgsrvip$[200],platform$[20],dir$[100]
  Dim drvrdir$[50],webpath$[255],cmd$[1000]
  !
  Dim MYR. as MYReports
  !
  b$ = " ",b$
  !
  Call dxopen()
  !
  Call dxsave(0,"myr.in!") ! \ stop
  !
  Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
  !
  call LogAccess(e$)
  if not(action1$) let action1$="P"  ! default to pdf for testing
  !
  ! open files - may add a check to see if user can run an action/program
  !
  action$ = UCase$(action$)
  action$ = RTrim$(action$) ! UPPERCASE & TRIMMED
  !etc for all files needed
  !
  Close ! close all files before chaining off
  !
  !
  ! Call dxsave(0,"/x1/xslspro/rce.in!") !  \   
  ! 
	ch_myrpt=FindChannel()
	open #ch_myrpt,"6/myreports"+str$(intco)
  ! 
  ReturnStatus = 0
  Message$ = "ACTION NOT FOUND"
  Select Case action$ ! go to various programs based on action
   	Case "GETMYREPORTSLIST" !
		Call GetRptList()
	  !
   	Case "GETMYREPORT" !
		Call GetReport()
		Call SetOutPut(e$,rstr$)
		End
	  !
   	Case "DELETEMYREPORT" !
		Call DeleteReport()
		Call GetRptList()
	
	Case "FIX" ! only called from super user menu
		Call FixReportsList()

      ! case ""  ! NEXT ACTION/PROGRAM
      ! any other File inquiry/edit programs can go here
  End Select !action options
!-----------------------------------------------------------------------
  ! status section
  Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  Call AddToStr(e$,rstr$,WebStr$)
  Call SetOutPut(e$,rstr$)
  !call dxclose()
Else 
  Include "src/callmainerrnet.inc"
  
End Try 
End 

! ----------------------------------------
Sub GetDirList(dirname$,sstring$)
	!
	! Returns list in rstr
	!
	Call AddToStr(e$,rstr$,bsdel$+"MyReports"+fdel$+rdel$)
	Call AddToStr(e$,rstr$,bsdel$+"BlockID"+fdel$+"Date/Time"+fdel$+"Filename"+fdel$+"URL"+fdel$+rdel$)
	!
	ch_dir = FindChannel()
	Open #ch_dir,dirname$ As "Sorted Directory"
		Do
			Read #ch_dir;Fname$
			print Fname$
			If Fname$ = "" Exit Do
			If LCase$(Fname$[1,Len(sstring$)]) = LCase$(sstring$) or sstring$=""
			tmp$=bsdel$
			end if
		Loop
	Close #ch_dir
	!
	Call AddToStr(e$,rstr$,esdel$)
	!
End Sub

! ----------------------------------------
Sub GetRptList()
   Try
   	call env(1,"REPORTDIR",dir$)
	If Platform$ = "WIN" let Dir$=Dir$,"\\" else Dir$=Dir$,"/"
	!
	Call AddToStr(e$,rstr$,bsdel$+"MyReports"+fdel$+rdel$)
	Call AddToStr(e$,rstr$,"BlockID"+fdel$+"Date/Time"+fdel$+"Filename"+fdel$+"RptKey"+fdel$+"PDF"+fdel$+"XL"+fdel$+rdel$)
	!
	myrkey$=userid$+"999999"  ! reverse order
	!
	Do Until myre
		Search #ch_myrpt,6,1;myrkey$,myrr,myre
		if myrkey$[1,8]<>userid$ let myre=22
		if not(myre)
			Read Record #ch_myrpt,myrr;myr.;
			! YYYYMMDDhhmmss
			! 12345678901234
			scratch$=myr.datetime$[5,6]+"/"+myr.datetime$[7,8]+"/"+myr.datetime$[1,4]+" "+myr.datetime$[9,10]+":"+myr.datetime$[11,12]+":"+myr.datetime$[13,14]
			tmp$=myr.blockid$+fdel$+scratch$+fdel$+RTrim$(myr.fname$)+fdel$+myrkey$+fdel$+"Y"+fdel$+"Y"+fdel$+rdel$
			Call AddToStr(e$,rstr$,tmp$)
		end if
	Loop
	!
	Call AddToStr(e$,rstr$,esdel$)
	ReturnStatus = 1
	! delete sets status in the event of DELETE
	! and a good return
   	if action$ <> "DELETEMYREPORT" Message$ = "OK"

   Else
	!
   End Try
End Sub
! ----------------------------------------
Sub GetReport()
	call dxget("RPTKEY",tmp$)
	call env(1,"DRIVERDIR",drvrdir$)
	call env(1,"WEBPATH",webpath$)
	call env(1,"PLATFORM",platform$)
	call env(1,"REPORTDIR",dir$)
	If Platform$ = "WIN" let Dir$=Dir$,"\\" else Dir$=Dir$,"/"

	myrkey$=tmp$
	Search #ch_myrpt,2,1;myrkey$,myrr,myre
	if myrkey$<>tmp$ let myre=1
	if not(myre) Read Record #ch_myrpt,myrr;myr.;
	myr.fname$=LCase$(Rtrim$(myr.fname$))
	tmp$=Dir$+myr.fname$
	call FindF(tmp$,x1)
	if not(x1) or myre
		ReturnStatus=0
		Message$="File No Longer Available"
		Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
		Call AddToStr(e$,rstr$,WebStr$)
		Call SetOutPut(e$,rstr$)
		Exit Sub
	End if

	x1=checksize(tmp$)
	if not(x1) or myre
		ReturnStatus=0
		Message$="Report is still processing, check back later"
		Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
		Call AddToStr(e$,rstr$,WebStr$)
		Call SetOutPut(e$,rstr$)
		Exit Sub
	End if

	! OK so continue
	if action1$="P" 
		Try kill webpath$+"/"+myr.fname$+".pdf.here" else rem

		! call to convert txt to pdf
		cmd$= "cat ''"+tmp$+"'' | "+drvrdir$[2]+"sptpdf ''"+myr.fname$+".pdf''"
		system cmd$
		! see if we can find the here file
		x2 = 0
		pdfFound = 0
		do
			! for simple pdf conversions, anything longer then
			! 1 minute, bail out
			if x2 > 12 exit do
			call findf(webpath$+"/"+myr.fname$+".pdf.here", x1)
			if x1
				pdfFound = 1
				exit do
			end if
			signal 3,50 ! sleep 5
			x2=x2+1
		loop
		if pdfFound
			WebStr$="<section>status</eof></eor>Status</eof>Message</eof>PDF</eof></eor>1</eof>OK</eof>"+myr.fname$+".pdf</eof></eor></section>"
			Call AddToStr(e$,rstr$,WebStr$)
			Call SetOutPut(e$,rstr$)
		else
			WebStr$="<section>status</eof></eor>Status</eof>Message</eof></eor>0</eof>Error Producing PDF!</eof></eor></section>"
			Call AddToStr(e$,rstr$,WebStr$)
			Call SetOutPut(e$,rstr$)
		end if
		! cmd$= "touch "+webpath$+"/"+myr.fname$+".pdf.here"
		! system cmd$
		! WebStr$="<section>status</eof></eor>Status</eof>Message</eof>PDF</eof></eor>1</eof>OK</eof>"+myr.fname$+".pdf</eof></eor></section>"
		! Call AddToStr(e$,rstr$,WebStr$)
		!
	else if action1$="X" ! excel
		Try kill webpath$+"/"+myr.fname$+".csv.here" else rem
		!
		WebStr$="<section>status</eof></eor>Status</eof>Message</eof>XL</eof></eor>1</eof>OK</eof>"+myr.fname$+".csv</eof></eor></section>"
		Call AddToStr(e$,rstr$,WebStr$)
		Call SetOutPut(e$,rstr$)
		!
		cmd$= "cp "+tmp$+ " " + webpath$+"/"+myr.fname$+".csv"
		system cmd$
		cmd$= "chmod 664 " + webpath$+"/"+myr.fname$+".csv"
		system cmd$
		cmd$= "touch "+webpath$+"/"+myr.fname$+".csv.here"
		system cmd$
	else
		WebStr$="<section>status</eof></eor>Status</eof>Message</eof></eor>0</eof>Action Not Found</eof></eor></section>"
		Call AddToStr(e$,rstr$,WebStr$)
		Call SetOutPut(e$,rstr$)
	end if


End Sub
! ----------------------------------------
Sub DeleteReport()
	call dxget("NUMRPTKEYS",tmp$)
	numKeys = tmp$
	call env(1,"DRIVERDIR",drvrdir$)
	call env(1,"WEBPATH",webpath$)
	call env(1,"PLATFORM",platform$)
	call env(1,"REPORTDIR",dir$)
	If Platform$ = "WIN" let Dir$=Dir$,"\\" else Dir$=Dir$,"/"

	delReps = 0
	startKey=0
	if numKeys>0 startKey = 1
	for i = startKey to numKeys
		if numKeys>0
			call dxget("RPTKEY"+str$(i),tmp$)
		else
			! old style - single key entry
			call dxget("RPTKEY",tmp$)
		end if
		myrkey$=tmp$
		Search #ch_myrpt,2,1;myrkey$,myrr,myre
		if myrkey$<>tmp$ let myre=1
		if not(myre) 
			Read Record #ch_myrpt,myrr;myr.;
			Search #ch_myrpt,5,1;myrkey$,myrr,myre
			e=3 \ Search #ch_myrpt,1,0;myrkey$,myrr,myre
			myr.fname$=Rtrim$(myr.fname$)
			tmp$=Dir$+myr.fname$
			call FindF(tmp$,x1)
			if x1
				Try kill tmp$ else rem
			End if
			delReps = delReps + 1
		end if
	next i
	ReturnStatus=1
	Message$=str$(delReps)+" Report(s) Deleted"
	!
End Sub
! ----------------------------------------
External Function CheckSize(tmp$)
   !still growing method !!!!!!!!!!!!!!!!!!!!!!!!
   ! tmp$=webPath$,"/",FileNm$
   call FindF(tmp$,x1)
   if x1 !file is there open it, is it still growing
    c=findchannel()
	open #c,tmp$ 
	size1=CHF(400+c) !get file size in bytes
	signal 3,10 !wait 2 secs
	size2=CHF(400+c)
	signal 3,10
	size3=CHF(400+c)
	if size1<>size2 or size1<>size3 or size2<>size3 let x1=0 !still growing,wait
	close #c
   end if
   !end still growing method !!!!!!!!!!!!!!!!!!!!
End Function X1
!----------------------------------------------------------
Sub FixReportsList()
try
	dim 3%,recordsFixed
	! gets rid of all bad entries
	call env(1,"DRIVERDIR",drvrdir$)
	call env(1,"WEBPATH",webpath$)
	call env(1,"PLATFORM",platform$)
	call env(1,"REPORTDIR",dir$)
	If Platform$ = "WIN" let Dir$=Dir$,"\\" else Dir$=Dir$,"/"
	
	doAsSuper = 0
	if ucase$(action1$) = "SUPERUSER" doAsSuper = 1
	if doAsSuper
		myrkey$ = " ",myrkey$
	else
		myrkey$=userid$
	end if
	recordsFixed = 0
	Do
		Search #ch_myrpt,3,1;myrkey$,myrr,myre
		if not(doAsSuper) and myrkey$[1,8]<>userid$[1,8] let myre=1
		if not(myre) 
			Read Record #ch_myrpt,myrr;myr.;
			myr.fname$=Rtrim$(myr.fname$)
			tmp$=Dir$+myr.fname$
			!
			call FindF(tmp$,x1)
			if Not(x1)  ! no file exists delete table entry
				recordsFixed = recordsFixed + 1
				Search #ch_myrpt,5,1;myrkey$,myrr,myre \ if myre error 11000
				e=3 \ Search #ch_myrpt,1,0;myrkey$,myrr,myre \ if myre error 11000
			End if
		end if
	Loop Until myre
	!
	ReturnStatus=1
	Message$="OK - "+str$(recordsFixed)+" entries corrected."
	!
else
	include "src/callsuberr.inc"
end try
End Sub
