! >>> Program 521
!
! description Accounts Payable Invoice Release Register
! loadsave -w -n 100,10 -o prog/dxport/521.dl4 src/521.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"



Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 12, 2008  14:03:28
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ap/la521.src (univ2) [mary] {24910}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem LA521  A/P INVOICE RELEASE REGISTER
Rem 3/91 - MTK - FOR MULTIPLE BANKS  - V4
!If Err 0 Gosub ERR_TRA
Try
Dim 1%,B1,D1,E,G,K,L,O1,O4[1],P,U,X,F9,C0[8],PAYFLAG,BNKFLG,VBNK,PGBRK
Dim 1%,NUMCHECK,Z8,URECFLAG
Dim 2%,A5,B,O2[6],R[15],V1,W,DIV[2],DIVFLAG,TOTFLAG,PAY[1],CHECK
Dim 3%,O3[9],T9[3],T[3],T1[3],T2[3],T8[3],TNUMCHECK
Dim A$[30],A1$[264],D$[25],F$[16],G$[2],G9$[40],K1$[30],K9$[50],O$[3]
Dim PAY$[116],K$[30],BANKNAME$[30],Z2$[2]
Dim DIV$[30],I$[30],K10$[10],O1$[12],P$[10],R$[63],R2$[7],U5$[10],V$[20],2%
Dim 4%,J1
Dim 2%,J0,J2,J3,J4,J5,J6,J9[2],X2[9],X1[12],D3[2]
Dim J$[40],J0$[10],J1$[40],J2$[20],J4$[50],J5$[50],J7$[50],J9$[40]
Dim 3%,J8,TOT[3]
dim key9$[50],3%,rec9
dim curkey$[50],srtkey$[50],3%,cur_rec,vendchk,chkname$[30]
Dim RETVAL$[512]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim groupid$[1]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=1
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
Gosub L_8000

L9 = 55;SCRPRT = 0
F = 0
D$ = ""
NUMCHECK = 0
Call Time(D$)
!Print 'CS CR';"A/P INVOICE RELEASE REGISTER";'CR'
!W = Spc(5)
!F = Int(W / 16384)
!G = Int((W - F * 16384) / 64)
!U = W - (F * 16384 + G * 64)

Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G$[1,1] = intco Using "#"
g$[2,2]=groupid$
V$ = " 0"
Search #15,2,1;V$,R[15],E
If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
F$ = R$[53,53],"/A20OI",G$[1,2] \ Open #2,F$
F$ = R$[31,31],"/A80VM",G$[1,2] \ Ropen #3,F$
Mat Read #1,88,112;F$; \ Ropen #4,F$
Mat Read #1,51,18;C0;
If C0[6]<>0
  F$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,F$
Endif
S8 = 1 ! vendor order
! defaults
bnkflg=0 ! no banks
bnk=0 ! no banks
Divflag=0 ! no divisions
div[0]=0 ! current process division
div[1]=0   ! ending division
div[2]=99 ! starting division
totflag=0 ! no consolidate by division
pgbrk=0 ! no page break by vendor
call dxget("S9",tmp$) \ S9=rtrim$(tmp$) !!print option 1 2
if s9<0 or s9>2
	let eflag=eflag+1
	let message$=message$+" Invalid Report Option." 
endif
LET S8=S9
call dxget("PGBRK",TMP$)
IF ucase$(rtrim$(tmp$))="Y" let pgbrk=1
if c0[6]<>0
	call dxget("DIVISION",tmp$) \ if  rtrim$(tmp$) = "" let  DIVFLAG = 0 else  DIVFLAG = 1 !!report by division
	if DIVFLAG<>0 ! print by divisions 
		call dxget("SDIV",tmp$) \ DIV[1] = tmp$  !!Enter Starting Division
		call dxget("EDIV",tmp$) \ if rtrim$(tmp$) = "" let DIV[2] = 99 else DIV[2] = tmp$  !!Enter Ending Division
		call dxget("CONSOLIDATED",tmp$) \ if rtrim$(tmp$) = "" let TOTFLAG = 0 else TOTFLAG = 1  !! Consolidated Division Report
		! validations Division
		If DIV[1] < 0 Or DIV[1] > 99
			eflag=eflag+1
			Let message$=message$=" Invalid starting division, must be between 0 and 99! " 
		else
			If DIV[2] < DIV[1] Or DIV[2] > 99 
				eflag=eflag+1
				Let message$="Invalid ending division, must be between starting division and 99!" 
			endif
		endif
		If DIV[1] <> 0 Or DIV[2] <> 99  let TOTFLAG = 0
	Endif
End if
!
if c0[8]<>0 ! vendor by bank
	call dxget("BANK",tmp$) \ let  BNKFLG = tmp$
	if bnkflg<=0 or bnkflg>99
		let eflag=eflag+1
		let message$=message$+"Invalid Bank Submitted"
	endif
endif
if eflag<>0 goto outend: ! not to see here..move on..




L_1600: !Print @0,22;'CE';"Sorting...Please Wait";
K1$ = " ",K1$;PCTR = 0
L_1610: Search #2,3,1;K1$,R[2],E \ If E = 2 Goto L_1800
If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;O$;
If O$[1,1] < "2" Goto L_1610
If O$[1,1] > "3" Goto L_1610
Gosub READOI
If O$[3,3] <> "3" Goto L_1700
If C0[8] And O4 <> BNKFLG Goto L_1610
K9$ = " ",K9$ \ K9$[1,2] = "#$" \ K9$[3,4] = O4 Using "##"
K9$[5,10] = O2[6] Using "######"
K9$[11] = K1$
Search #9,4,1;K9$,R[2],E \ If E Gosub ERR_SEARCH
Goto L_1610
L_1700: Rem INSERT SORT KEY FOR INVOICES
K9$ = " ",K9$
Gosub READVEND
If C0[8] And BNKFLG <> VBNK Goto L_1610
If S8 = 1 Goto L_1725
K9$[1,20] = PAY$[1,20]
L_1725: K9$[21,26] = A5 Using "######" \ K9$[27] = K1$
Search #9,4,1;K9$,R[2],E \ If E Gosub ERR_SEARCH
Goto L_1610
L_1800: Rem PRINT SECTION
PCTR = 0
If Not(C0[6]) Goto L_1900
If Not(DIVFLAG) Goto L_1900
K10$ = " ",K10$ \ K10$[1,2] = DIV[1] Using "##"
Search #10,2,1;K10$,R[10],E \ If Not(E) Goto L_1840
If E > 1 Gosub ERR_SEARCH
L_1830: Search #10,3,1;K10$,R[10],E \ If E = 2 Goto L_1860
If E Gosub ERR_SEARCH
L_1840: DIV[0] = K10$[1,2] \ If DIV[0] > DIV[2] Goto L_1860
Mat Read #10,R[10],12;DIV$;
Goto L_1900
L_1860: DIVFLAG = 0
TNUMCHECK = TNUMCHECK + NUMCHECK \ NUMCHECK = 0
If Not(TOTFLAG) Goto L_9100
Goto L_1900
L_1900: K9$ = " ",K9$
TNUMCHECK = TNUMCHECK + NUMCHECK \ NUMCHECK = 0
L = 99 \ F9 = 0
PAY[0] = 0

L_2000: Search #9,3,1;K9$,R[2],E
If E Goto L_2300
If K9$[1,2] = "#$" Goto L_2000
Mat Read #2,R[2],0;O$;
If O$[1,1] < "2" Goto L_2000
If O$[1,1] > "3" Goto L_2000
Gosub READOI
If O$[3,3] <> "3" Goto L_2045
Goto L_2000
L_2045: If DIVFLAG If DIV[0] <> O4[1] Goto L_2000
PAY[1] = K9$[21,26]
If PAY[0] If PAY[0] <> PAY[1] Gosub L_3400
If PAY[0] If PAY[0] = PAY[1] If B If B <> O2 Let PAYFLAG = 99
CHKNAME$[1,20]=K9$[1,20]
PAY[0] = PAY[1]
If B If O2 <> B Gosub L_3100
If B <> O2 Gosub L_3000
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS CALC
T[0] = T[0] + O3[4]
T[1] = T[1] + O3[2]
T[2] = T[2] + O3[4] - O3[2]
Return 
L_2300: Rem MANUAL CHECK PRINT SECTION
Gosub L_3400
Gosub L_4000
For X = 0 To 3
  T1[X] = 0 \ T2[X] = 0
Next X
dupchk=0
PAY[0] = 0
K9$ = " ",K9$ \ K9$[1,2] = "#$" \ B = 0
Search #9,3,1;K9$,R[2],E \ If E = 2 Goto L_9100
If K9$[1,2] <> "#$" Goto L_9100
If E Gosub ERR_SEARCH
L = 99 \ Goto L_2370
L_2355: Search #9,3,1;K9$,R[2],E \ If E = 2 Goto L_9100
If K9$[1,2] <> "#$" Goto L_9100
If E Gosub ERR_SEARCH
L_2370: Gosub READOI
If DIVFLAG If DIV[0] <> O4[1] Goto L_2355
F9 = 99
If B1 If B1 <> O4 Gosub L_3300
If B1 <> O4 Gosub L_3200
If CHECK If CHECK <> O2[6]
  Gosub L_3400
  PAY[0] = 0 \ B = 0
endif
CHECK = O2[6]

If B If B <> O2 Gosub READVEND
PAY[1] = A5
If PAY[0] If PAY[0] <> PAY[1] Gosub L_3400
If PAY[0] If PAY[0] = PAY[1] If B If B <> O2 Let PAYFLAG = 99
PAY[0] = PAY[1]
If B If O2 <> B Gosub L_3100
If B <> O2
  Gosub L_3000
  PAY[1] = A5 \ PAY[0] = A5
End If 
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2355
L_3000: Rem PRINT VENDOR NAME
Gosub READVEND
Print #0;" "
L = L + 1
Gosub L_5800
Print #0; Using "######  ";O2;A1$[1,30];
If O2 <> A5 
	Print #0; Using "  ######  ";"  PAY TO:";A5;PAY$[1,30];
else
	if ucase$(rtrim$(a1$[1,30])) <> ucase$(rtrim$(pay$[1,30]))
		Print #0;"  PAY TO: ";PAY$[1,30];	
	endif
ENDIF
Print #0;""
B = O2
Return 
L_3100: Rem VENDOR TOTAL
If Not(T[0]) And Not(T[1]) And Not(T[2]) Goto L_3155
Gosub L_5800
Print #0; Using "######";"   TOTALS FOR VENDOR:";B;
For X = 0 To 2 \ TOT[X] = T[X] \ Next X
Gosub PRINTTOT
L_3155: For K = 0 To 3
  T9[K] = T9[K] + T[K]
  T1[K] = T1[K] + T[K]
  T2[K] = T2[K] + T[K]
  T8[K] = T8[K] + T[K]
  T[K] = 0
Next K
B = 0
Return 
L_3200: Rem PRINT BANK NAME
A$ = "BANK NOT ON FILE!!!!"
V$ = O4 Using "##"
Search #4,2,1;V$,R[4],E
If E = 1 Goto L_3235
If E Gosub ERR_SEARCH
Mat Read #4,R[4],2;A$;
L_3235: Print #0;" " \ L = L + 1 \ Gosub L_5800
Print #0; Using "##";"BANK: ";O4;"   ";A$[1,30]
B1 = O4
Return 
L_3300: Rem PRINT BANK TOTAL
Gosub L_3400
If Not(T2[0]) And Not(T2[1]) And Not(T2[2]) Return 
Gosub L_5800
For X = 0 To 2 \ TOT[X] = T2[X] \ Next X
Print #0;"\15\** BANK TOTALS **";
Gosub PRINTTOT
For K = 0 To 2
  T2[K] = 0
Next K
B = 0
L = L + 2
L = L + 2
Return 
L_3400: Rem PAYTO VENDOR TOTAL
If PAYFLAG = 99 Gosub L_3100
If Not(PAYFLAG) Gosub L_3155
If Not(T8[0]) And Not(T8[1]) And Not(T8[2]) Goto L_3460
L_3416: If PAYFLAG = 99 Print #0;"" \ L = L + 1
NUMCHECK = NUMCHECK + 1
Gosub L_5800
Print #0; Using "######";"** CHECK TOTALS FOR VENDOR:";PAY[0];"**";
For X = 0 To 2 \ TOT[X] = T8[X] \ Next X
Gosub PRINTTOT
if K9$[1,2] <> "#$" ! not manual check
	iF TOT[2]<0
		negchkflag=99
		Print #0;"*** Negative Check.  Transaction(s) will be un-released and no check will issued ***"
		let l=l+1
		gosub unrelaptran:
	endif
endif
if f9<>0
	let KEY9$=" ",KEY9$
	LET KEY9$[1,1]="!" 
	LET KEY9$[2,3]=O4 USING "##"
	LET KEY9$[4,9]=CHECK USING "######"	
	SEARCH #9,2,1;KEY9$,REC9,E
	if not(e)
		PRINT #0;"^^^ Duplicate Check Number ^^^"\let l=l+1
		let dupchk=99
	else
		let KEY9$=" ",KEY9$
		lET KEY9$[1,1]="!" 
		LET KEY9$[2,3]=O4 USING "##"
		LET KEY9$[4,9]=CHECK USING "######"	
		SEARCH #9,4,1;KEY9$,REC9,E
	endif
endif
Print #0;""
L = L + 1
L_3460: For K = 0 To 3
  T8[K] = 0 \ T[K] = 0
Next K
PAYFLAG = 0
If PGBRK Let L = 99
Return 

PRINTTOT: Rem print totals for all
Print #0; Using "------,---.##"; Tab 84;TOT[0];
Print #0; Using "------,---.##"; Tab 100;TOT[1];
Print #0; Using "------,---.##"; Tab 117;TOT[2];
Print #0;""
Return 

UnRelApTran: ! UnRelease Ap Transactions because check is Negative
let curkey$=k9$
let cur_rec=r[2]
let srtkey$=" ",Srtkey$
If s8=2
	let srtkey$[1,20]=chkname$[1,20]
endif
let srtkey$[21,26]=pay[0] using "######"
srchunrel: ! 
Search #9,3,1;srtkey$,R[2],E
If E Goto endunrel:
If K9$[1,2] = "#$" Goto srchunrel:
let vendchk=srtkey$[21,26]
if vendchk<>pay[0] goto endunrel:
Mat Read #2,R[2],0;O$;
If O$[1,1] < "2" Goto srchunrel: ! not release yet
If O$[1,1] > "3" Goto srchunrel: ! check already printed
if o$[3,3]="3" goto srchunrel: ! manual check
Gosub READOI  
LET O3[4]=0 \ LET O$[3,3]=O1 USING "#" \ LET O$[1,1]="1"     
IF (O3[5]+O3[7]) LET O$[3,3]="0"                             
Mat Write #2,R[2],0;O$;
Mat Write #2,R[2],40;O3;
goto srchunrel:
Endunrel: ! end unrelease process
let k9$=curkey$
let r[2]=cur_rec												  
RETURN   

L_4000: Rem TOTAL PRINT
If Not(T9[0]) And Not(T9[1]) And Not(T9[2]) Return 
L_4020: Gosub L_5800
Print #0;" " \ L = L + 1
Print #0;"** GRAND TOTALS **";
For X = 0 To 2 \ TOT[X] = T9[X] \ Next X
Gosub PRINTTOT
If Not(TNUMCHECK) Let TNUMCHECK = NUMCHECK
If TNUMCHECK
  Print #0;"" \ Print #0; Using "######";"  TOTAL CHECKS: ";TNUMCHECK
  NUMCHECK = 0
End If 
Return 
L_4100: Rem MANUAL CHECK TOTAL PRINT
If Not(T1[0]) And Not(T1[1]) And Not(T1[2]) Return 
Print #0;" " \ L = L + 1
Gosub L_5800
Print #0;"\15\** MANUAL CHECK TOTALS **";
For X = 0 To 2 \ TOT[X] = T1[X] \ Next X
Gosub PRINTTOT
For X = 0 To 2 \ T1[X] = 0 \ Next X
IF DUPCHK<>0 PRINT#0;"Duplicate Check Number Being Used.  Please review. "
let l=l+1
Return 
L_5000: Rem PRINT LINE
totinvrel=totinvrel+1
Print #0; Tab 4;O1$[1,12];
If C0[6] Print #0; Using "###"; Tab 19;O4[1];
If F9 Print #0; Using "######"; Tab 24;O2[6];
If Not(F9) Goto L_5035
X2 = O2[1] \ Gosub L_8900
Print #0; Tab 32;P$[1,8];
L_5035: X2 = O2[2] \ Gosub L_8900
Print #0; Tab 44;P$[1,8];
X2 = O2[3] \ Gosub L_8900
Print #0; Tab 56;P$[1,8];
X2 = O2[4] \ Gosub L_8900
Print #0; Tab 67;P$[1,8];
If C0[3]
  P$ = O3[8] Using "&&&&"
  Print #0; Tab 78;P$[3,4];"/";P$[1,2];
End If 
TOT[0] = O3[4];TOT[1] = O3[2];TOT[2] = (O3[4] - O3[2])
Gosub PRINTTOT
Return 

L_5800: L = L + 1
If L < L9 Return 
If Not(V9) Goto L_5815
If L9 > 30 Goto L_5810
L_5810: If V9 Print #0;"\14\";
L_5815: Print #0;"\15\"; Tab 54;G9$[1,40]
V9 = V9 + 1
L = 6
Print #0;"-la521-   ";D$;
Print #0; Tab 50;"INVOICE RELEASE REGISTER";
If S8 = 1 Print #0;" BY VENDOR CODE ";
If S8 = 2 Print #0;" BY VENDOR NAME ";
Print #0; Tab 110;"PAGE";V9
If Not(DIVFLAG) And Not(F9) And Not(BNKFLG) Goto L_5875
If DIVFLAG Print #0;DIV$[1,30];
If F9 Print #0; Tab 54;"*** MANUAL CHECKS ***";
If BNKFLG Print #0; Tab 90;BANKNAME$;
Print #0;"" \ L = L + 1
L_5875: Print #0;" "
Print #0; Tab 4;"INVOICE CODE";
If C0[6] Print #0; Tab 19;"DIV";
Print #0; Tab 24;"CHECK#";
Print #0; Tab 32;"CHK DATE";
Print #0; Tab 44;"INV DATE";
Print #0; Tab 56;"DUE DATE";
Print #0; Tab 67;"DIS DATE";
If C0[3]
  Print #0; Tab 77;"PERIOD";
End If 
Print #0; Tab 85;"GROSS AMOUNT";
Print #0; Tab 101;"DISCOUNT AMT";
Print #0; Tab 119;"PAYMENT AMT";
Print #0;""
Print #0;"\15\";
If V9 <> 1 If B = O2 Gosub L_3000
Return 


READOI: Rem READ OPEN ITEM FILE
Mat Read #2,R[2],0;O$;
Mat Read #2,R[2],6;O1;
Mat Read #2,R[2],12;O2;
Mat Read #2,R[2],40;O3;
Mat Read #2,R[2],100;O1$;
Mat Read #2,R[2],112;O4;
Return 


READVEND: Rem READ VENDOR FILE
A1$ = "VENDOR NOT ON FILE!!!!!"
PAY$ = "VENDOR NOT ON FILE!!!!"
V$ = O2 Using "######"
Search #3,2,1;V$,R[3],E
If E = 1
   A5 =o2 \ Return 
End If 
If E Gosub ERR_SEARCH
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],550;A5; \ Mat Read #3,R[3],574;VBNK;

PAY$ = A1$[149,264]
IF rtrim$(pay$)=""
	let pay$=a1$[1,30]
endif
pay$=Ucase$(pay$)
If A5 = O2 Return 
K$ = A5 Using "######"
Search #3,2,1;K$,R,E
If E<>0
   let A5 = O2
Else 
  Mat Read #3,R,148;PAY$;
  if rtrim$(pay$)=""
	mat read #3,r,0;pay$;
  endif
  let pay$=ucase$(pay$)
End If 
Return 
L_8000: Rem GET COMPANY NAME
V$ = "10"
Search #15,2,1;V$,V1,E
If E Gosub ERR_SEARCH
Mat Read #15,V1,2;R2$;
V$ = " ",V$
V$[3,6] = R2$
Search #16,2,1;V$,V1,E
If E Gosub ERR_SEARCH
Mat Read #16,V1,10;G9$;
Return 
L_8900: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 

L_9100: Rem END
Gosub L_3300
If F9 Gosub L_4100
If F9 Gosub L_4000
For K = 0 To 3 \ T9[K] = 0 \ T1[K] = 0 \ T2[K] = 0 \ T[K] = 0 \ Next K
If DIVFLAG Goto L_1830
Goto OUTEND
Stop 



Rem {end rtn.error.s}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT PROGRAM
!Print 'CS' \ Close 
!Chain "MX000"
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflg)
	if not(totinvrel)
		returnstatus=1
		let message$=message$+"There are no transactions available to list"
		
	else
		if negchkflag<>0
			let message$=message$+" "+"Please Review. Negative Check Transactions have been unreleased. "
		else
			Let message$=message$+" "+str$(totinvrel)+" Transactions Listed"
		endif
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
