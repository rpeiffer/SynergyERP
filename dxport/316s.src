! >>> Program 316s
!
! description A/R Customer Trial Balance, Customer Detail
!
! loadsave -w -n 100,10 -o prog/dxport/316s.dl4 src/316s.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  1, 2006  11:11:19
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx316s.src (univ2) [txc] {33485}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE ! ****
Rem
Rem *   MX316s - A/R BY Salesman/Customer*
Rem *   UNIVERSAL BUSINESS SYSTEM        *
Rem *   SEPT - OCT  1983                 *
!
External Lib "ubsfunc.dl4"
Declare External Sub UTAge5
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,FindF
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3]
Com P9$[50]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
DIM CN$[10],CustNAME$[31]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Detail$[1]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 3%,tmp3
!
dim custom_customer$[30]
Dim 1%,S8,C7,A0[10],CSLSM,LINES
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2]
Dim 1%,AGEBUCK[3],AGECOL,DDAY
Dim 2%,PRCNTAR[6]
Dim 4%,TOTAR
Dim 3%,V9,PCTR
Dim 4%,J1,1%,FLAG,2%,D3[1]
Dim 1%,S1[2],F,L,SVCFLAG,W1[1]
Dim 2%,E,A4[7],A2[5],C1[10],ARDATE,C2[1],H0[12],C5,R[20],E1[12],DIV[1]
Dim 2%,X1[9],SLSM[1],H5[8],COID
Dim C5$[12],D1$[10],D2$[10],ABREQ$[10],A3$[16],A4$[60],RETVAL$[512]
Dim J$[60],J0$[20],J1$[60],J2$[60],J4$[50],J5$[80],J7$[60],J9$[50]
Dim K7$[30],K1$[30],K2$[30],K3$[50],K4$[50],K5$[25],SLSMNAME$[30]
Dim Custa1$[142],ext$[5]
Dim 3%,A3[13],C3[5],T9[8,3],P4,P5,T[4],CRDTOT,T2[25],GNDCRD,SLMCRD
Dim 3%,ARREF[1]
Dim K9$[50],X$[10],CNAME$[30],C2$[30],C3$[30],D0$[81],CONTACT$[20]
Dim F$[30],C$[112],ARDATE$[8],P$[20],P1$[20],P2$[20],A$[100],A0$[68]
Dim AGEBUCK$[120],AGEBUCKH$[40],PHONE$[30],ARTERM$[16],P61$[256]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
P1$ = "--------.##";P2$ = "--------#.##"
F = 0
Mat Read #1,20,130;AGEBUCK;
Mat Read #1,20,138;AGECOL;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
AGEBUCK$[1,20] = "CURRENT............:";AGEBUCKH$[1,8] = " CURRENT"
If P9$[50,50] = "M" ! age by month
  If P9$[25,25] = "Y" ! age by due date
    AGEBUCK$[21,40] = "PAST DUE...........:";AGEBUCKH$[9,16] = "PAST DUE"
    AGEBUCK$[41,60] = "OVER 1 MONTH.......:";AGEBUCKH$[17,24] = "OVER 1MO"
    AGEBUCK$[61,80] = "OVER 2 MONTHS......:";AGEBUCKH$[25,32] = "OVER 2MO"
    AGEBUCK$[81,100] = "OVER 3 MONTHS......:";AGEBUCKH$[33,40] = "OVER 3MO"
  Else 
    AGEBUCK$[21,40] = "OVER 1 MONTH.......:";AGEBUCKH$[9,16] = "OVER 1MO"
    AGEBUCK$[41,60] = "OVER 2 MONTHS......:";AGEBUCKH$[17,24] = "OVER 2MO"
    AGEBUCK$[61,80] = "OVER 3 MONTHS......:";AGEBUCKH$[25,32] = "OVER 3MO"
    AGEBUCK$[81,100] = "OVER 4 MONTHS......:";AGEBUCKH$[33,40] = "OVER 4MO"
  End If 
Else 
  If P61$[67,67] = "Y"
    AGEBUCK$ = " ",AGEBUCK$;AGEBUCKH$ = " ",AGEBUCKH$
    For X = 0 To 4
      AGEBUCK$[((X * 20) + 1),((X * 20) + 8)] = (X + 1) Using "PERIOD #"
      AGEBUCK$[((X * 20) + 9),((X * 20) + 20)] = "...........:"
      AGEBUCKH$[((X * 8) + 1),((X * 8) + 8)] = (X + 1) Using "PERIOD #"
    Next X
  Else 
    For X = 0 To 3
      AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
      AGEBUCK$[((X * 20) + 34),((X * 20) + 40)] = "......:"
      AGEBUCKH$[((X * 8) + 9),((X * 8) + 16)] = AGEBUCK[X] Using "OVER ###"
    Next X
    If P9$[25,25] = "Y" And AGEBUCK[0] = 0
      AGEBUCK$[21,40] = "PAST DUE...........:"
      AGEBUCKH$[9,16] = "PAST DUE"
    End If 
  End If 
End If 
!
! - COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
! - For I = 3 To 8
! -   Read L
! -   If Not(L) Goto L_845
! -   Read #1,88,L;J$;
! -   If  = 4 And S9[0] <> 0
! -     J$[Len(J$) + 1] = ".FROZ"
! -   End If 
! -   Ropen #I,J$
! - L_845: Next I
! - Data "1808","1504","1840","1872","1824","720"
! - J$ = COID Using "2/ARTERMCODE#" \ Open #50,J$
!
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60;SCRN = 0
If J8 Let L9 = 23;SCRN = 1
!
Read #1,18,30;D2$;
Read #1,0,108;ARDATE; 
Mat Read #1,0,100;ARDATE$;
Read #1,3;CNAME$;
D0$ = "INVSVCNSFD/ALATC/MUN.C/APAY"
!
! - If S9[0]
! -   ARDATE = S9[1];X2 = ARDATE \ Gosub ISDUNPACK
! -   ARDATE$ = X$
! - End If 
! - DIV[0] = 0;DIV[1] = 99;W1[0] = 0;W1[1] = 99;SLSM[0] = 0;SLSM[1] = 999;SVCFLAG = 0
! - DETAIL = 0;DIRNUM = 2;ZEROBAL = 0
! - RETVAL$ = " ",RETVAL$
! - Call "ProgDflt","316S","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
! -   RETVAL$[1,3] = SLSM[0] Using "###"
! -   RETVAL$[4,6] = SLSM[1] Using "###"
! -   RETVAL$[7,8] = W1[0] Using "##"
! -   RETVAL$[9,10] = W1[1] Using "##"
! -   RETVAL$[11,12] = DIV[0] Using "##"
! -   RETVAL$[13,14] = DIV[1] Using "##"
! -   RETVAL$[15,15] = Str$(SVCFLAG)
! -   RETVAL$[16,16] = Str$(DETAIL)
! -   RETVAL$[17,17] = Str$(DIRNUM)
! -   RETVAL$[18,18] = Str$(ZEROBAL)
! - End If 
! - SLSM[0] = RETVAL$[1,3]
! - SLSM[1] = RETVAL$[4,6]
! - W1[0] = RETVAL$[7,8]
! - W1[1] = RETVAL$[9,10]
! - DIV[0] = RETVAL$[11,12]
! - DIV[1] = RETVAL$[13,14]
! - SVCFLAG = RETVAL$[15,15]
! - DETAIL = RETVAL$[16,16]
! - DIRNUM = RETVAL$[17,17]
! - ZEROBAL = RETVAL$[18,18]
! - If DIRNUM < 1 Or DIRNUM > 2 Let DIRNUM = 2
!
! dx add xport reporting code
DXSetup:
Dim tmp$[800],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
IF custom_customer$="CREST"
	call dxget("CRESTCUSTOM",tmp$) 
	If rtrim$(ucase$(tmp$))="Y"
		if J8<>0
			let e$="Browser Option is Not Available for this selection" \ error 10000	
		endif
		chain "316crest.dl4"
	endif
endif
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"316s",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("frozenacct",tmp$) \ S9[0]=tmp$  ! report option  0=current  1=frozen
if p61$[20,20]="Y" ! frozen by month
	call dxget("FRZMNTH",tmp$)
	if RTrim$(tmp$)<>"" let s9[0]=2
	x3=tmp$
	let x$=x3 using "&&&&"
	let ext$="."+x$
Endif
call dxget("frozendate",tmp$) \ S9[1]=tmp$ ! frozen aging date
call dxget("begslsm",tmp$) \ SLSM[0]=tmp$ ! starting salesman
call dxget("endslsm",tmp$) \ if tmp$="" let SLSM[1]=999 else SLSM[1]=tmp$ ! ending salesman
call dxget("begwhse",tmp$) \ if tmp$="" let W1[0]=0 else W1[0]=tmp$ ! beg warehouse
call dxget("endwhse",tmp$) \ if tmp$="" let W1[1]=99 else W1[1]=tmp$ ! end warehouse
call dxget("begdiv",tmp$) \ if tmp$="" let DIV[0]=0 else DIV[0]=tmp$ ! beg division
call dxget("enddiv",tmp$) \ if tmp$="" let DIV[1]=99 else DIV[1]=tmp$ ! end division
call dxget("ageservchrg",tmp$) \ if tmp$="" let SVCFLAG=0 else SVCFLAG=1 ! age service charge
call dxget("dt",tmp$) \ if rtrim$(tmp$)="S" let DETAIL=0 else DETAIL=1 ! detail or summary
!if detail<>0 and j8<>0  ! undo of task#23944
!	let e$="Detail Option is Not Available on Browser" \ error 10000
!endif
call dxget("printorder",tmp$) \ DIRNUM=tmp$ ! print order  1=ref#  2=date
call dxget("zerobal",tmp$) \ if tmp$="" let ZEROBAL=0 else ZEROBAL=1 ! print zero balance
!  dx end
!
! frozen report
if S9[0] ! frozen
	if s9[1]<=0 let e$="Frozen Aging date is required" \ error 10000
  tmp$=S9[1] using "&&&&&&" \ S9[1]=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
  ARDATE = S9[1] \ X2 = ARDATE 
  Gosub ISDUNPACK \ ARDATE$ = X$
else
  S9[1]=0 ! current
endif
!
! salesman
if SLSM[0]<0 or SLSM[0]>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
if SLSM[1]<SLSM[0] or SLSM[1]>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
! warehouse
if W1[0]<0 or W1[0]>99 let e$="Invalid starting warehouse, must be between 0 and 99!" \ error 10000
if W1[1]<W1[0] or W1[1]>99 let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
! division
if DIV[0]<0 or DIV[0]>99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
if DIV[1]<DIV[0] or DIV[1]>99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
!
if s9[0]=2
	read #1,88,1504;j$;
	j$=RTrim$(J$)+ext$
	call findf(j$,found)
	if not(found)
		e$="Frozen file for "+ext$+" not found" \ error 10000
	Endif
Endif
!
For I = 3 To 8
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  If I = 4 And S9[0] 
    if s9[0]=1 let J$[Len(J$) + 1] = ".FROZ" ! frozen a/r
	if s9[0]=2 let j$=RTrim$(J$)+ext$
  End If 
  Ropen #I,J$
L_845: Next I
Data "1808","1504","1840","1872","1824","720"
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
! - L_1000: Rem SELECT RANGES
! - For X = 0 To 8
! -   For X1 = 0 To 3
! -     T9[X,X1] = 0
! -   Next X1
! - Next X
! - Gosub L_5600 \ Gosub L_5700
! - L_1070: Rem "aka FinalQ:
! - Print @0,23;'CL';"Enter  #:field to edit  R: reselect all  S: save defaults  P: print  E: exit  ";
! - Input Len 16384 + 1;""J$ \ Call String(1,J$)
! - If J$ = "E" Goto OUTEND
! - If J$ = "P" Goto L_1500
! - If J$ = "R" Goto EDT_ALL
! - If J$ = "S"
! - ASK_SAVE: Print @0,22;'CE';"Save for  A: all  U: user access only  <CR>: do not save  ";
! -   Input Len 16384 + 1;""J2$ \ Call String(1,J2$)
! -   If J2$ = "" Print @0,22;'CL'; \ Goto L_1070
! -   If J2$ <> "A" And J2$ <> "U" Goto ASK_SAVE
! -   If J2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "Progdfltw","316S","",77,RETVAL$,URECFLAG
! -   Print @0,22;'CL';
! -   Goto L_1070
! - End If 
! - K = J$ \ If K < 1 Or K > 7 Goto L_1070
! - FLD = K
! - Gosub EDT_FLD
! - Goto L_1070
! - EDT_ALL: Rem "change 'em all
! - For FLD = 1 To 7
! -   Gosub EDT_FLD
! - Next FLD
! - Goto L_1070
! - EDT_FLD: Rem "
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On FLD Gosub L_3200,L_3300,L_3400,L_3500,EDTRPTTYPE,EDT_DNUM,EDT_ZBAL
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
! sort section
L_1500: 
! - Print @0,19;'CE';@0,22;"Sorting... please wait";
K9$ = " ",K9$;K3$ = " ",K3$;NUMREC = 0
L_1530: 
Search #9,3,1;K9$,R[9],E 
If E Goto L_1600
Search #9,5,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 316s sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1530
L_1600: 
Search #3,3,1;K3$,R[3],E 
If E Goto L_1900
Mat Read #3,R[3],142;C1;
Mat Read #3,R[3],210;C3;
NUMREC = NUMREC + 1
! - If Not(Fra(NUMREC / 200)) Print @40,22;'CL';NUMREC;K3$;
If Not(S9[0]) And C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1] = 0 If C3[1] = 0 Goto L_1600
If C1[2] < SLSM[0] Goto L_1600
If C1[2] > SLSM[1] Goto L_1600
K9$ = " ",K9$
K9$[1,3] = C1[2] Using "###"
K9$[4] = K3$
Search #9,4,1;K9$,R[3],E 
If E Let e$ = "syserrorfile 316s sortfile mode (m)=4 keyno (k)=1 r=",R[3]," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1600
!
! process section
L_1900: 
!
if J8 ! dx xml headings
  !
  tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$
  tmp$=tmp$,"CUSTOMER",fdel$,"CUSTOMER NAME",fdel$
  if DETAIL=1 ! detail
    tmp$=tmp$,"ADDRESS",fdel$,"ADDRESS2",fdel$
	tmp$=tmp$,"CITY",fdel$,"ST",fdel$,"ZIP",fdel$
  endif
  if DETAIL=1 let tmp$=tmp$,"NOTE DESCRIPTON",fdel$ ! detail 
  tmp$=tmp$,"CONTACT",fdel$,"TELEPONE",fdel$,"TERMS",fdel$
  if DETAIL=0 let tmp$=tmp$,"AGE",fdel$ ! summary
  tmp$=tmp$,"AVG PAY DAYS",fdel$
  if DETAIL=1
    tmp$=tmp$,"AGE",fdel$,"DESCRIPTION",fdel$
    tmp$=tmp$,"DATE",fdel$,"TYPE",fdel$
    tmp$=tmp$,"REFERENCE",fdel$,"PAYMENT",fdel$
  endif
  if DETAIL=0 let tmp$=tmp$,"TOTAL",fdel$
  If AGECOL=0 ! print oldest to current
    For X = 5 To 1 Step -1
      tmp$=tmp$,AGEBUCKH$[((X * 8) - 7),(X * 8)],fdel$
    Next X
  Else ! print current to oldest
    For X = 1 To 5
      tmp$=tmp$,AGEBUCKH$[((X * 8) - 7),(X * 8)],fdel$
    Next X
  End If 
  if P9$[19,19]<>"Y" let tmp$=tmp$,"UNAPL CR",fdel$
  if SVCFLAG=0 if DETAIL=0 let tmp$=tmp$,"SVC CHRG",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - If SCRN Print 'CS'
! - If Err 0 Gosub ERR_ESCAPE
! - Signal 3,0
If J8=0 And P > 0 Print #0;"\14\"
L = 70 \ P = 0 \ GNDCRD = 0;TFLAG = 0
K1$ = " ",K1$;PRNTCUST = 0;NUMREC = 0
Read #1,18,60;D1$;
CSLSM = 0
! - Print @0,22;'CE';"Printing... please wait";
L_2000: 
Search #9,3,1;K1$,R[3],E 
If E Gosub L_4500 \ Goto L_4000
K9$ = K1$[4]
NUMREC = NUMREC + 1
! - If Not(SCRN) And Not(Fra(NUMREC / 200)) Print @40,22;'CL';NUMREC;K1$
mat  read #3,r[3],0;custa1$;
Mat Read #3,R[3],0;C2$;
Mat Read #3,R[3],30;C$;
Mat Read #3,R[3],348;C3$;
Mat Read #3,R[3],142;C1;
Mat Read #3,R[3],146;C2;
Read #3,R[3],194;C7;
Mat Read #3,R[3],210;C3;
READ_CUSTNOTES: Rem
A$ = " ",A$ \ A0$ = " ",A0$
LET CN$=" ",CN$
Search #8,2,1;K9$,R[8],E
If Not(E)
  Mat Read #8,R[8],100;A0$;
  Mat Read #8,R[8],436;cn$;
End If 
DONE_CUSTNOTES: Rem
let custname$=c$[1,30]
if ucase$(CN$[1,1])="A" let custname$="*"+c$[1,30]
if ucase$(CN$[1,1])="S" let custname$="*"+c$[1,30]
If CSLSM = 0 Let CSLSM = C1[2];L = 99
If CSLSM <> C1[2] Gosub L_4500 
ARTERM$ = " ",ARTERM$
If C7 = 0
  ARTERM$ = "CASH SALE     "
Else 
  If C7 > 0 And C7 <= 99
    Read #50,C7,0;ARTERM$;
  End If 
End If 
If P9$[50,50] <> "M" And P61$[67,67] = "Y" ! not by month/by term code
  Mat Read #1,20,130;AGEBUCK;
  If C7 > 0 And C7 <= 99
    Read #50,C7,30;DDAY;
    If DDAY = 0 Let DDAY = 1
    If DDAY > 0
      AGEBUCK[0] = DDAY
      AGEBUCK[1] = DDAY * 2
      AGEBUCK[2] = DDAY * 3
      AGEBUCK[3] = DDAY * 4
    End If 
  End If 
End If 
Gosub L_2800
GNDCRD = GNDCRD + CRDTOT;SLMCRD = SLMCRD + CRDTOT
Gosub L_2200
If Not(T9[0,2]) And Not(T9[1,2]) And Not(T9[2,2]) And Not(T9[3,2]) And Not(T9[4,2]) And Not(T9[5,2]) And Not(T9[6,2]) Goto L_2000
T[0] = 0 \ If T[2] Let T[0] = T[1] / T[2]
Gosub L_5000
Goto L_2000
!
L_2200: Rem "=================================== ar for this customer
K4$ = K9$
L_2210: Search #4,3,DIRNUM;K4$,R[4],E 
If E Return 
If K4$[1,6] <> K9$ Return 
Mat Read #4,R[4];A2;
Mat Read #4,R[4],24;A3;
Mat Read #4,R[4],124;A0;
Mat Read #4,R[4],108;A3$;
Mat Read #4,R[4],256;A4$;
Mat Read #4,R[4],316;ARREF;
If A0[3] < W1[0] Or A0[3] > W1[1] Goto L_2210
If A0[5] < DIV[0] Or A0[5] > DIV[1] Goto L_2210
If Not(ZEROBAL) And Not(A3[0] - A3[1] - A3[2]) Goto L_2210
S1[2] = Int(100 * Fra(A2[3]))
If S1[2] > 5
  For X = 0 To 2 \ A3[X] = - A3[X] \ Next X
End If 
Mat Read #4,R[4],154;A4;
AGE[1] = 0 \ Gosub L_3000
S1[1] = Fra(AGE[1]) * 10
If S1[1] > 4 Let S1[1] = 4
S8 = 0
If S1[2] > 5 And P9$[19,19] <> "Y" Let S8 = 5
If S8 = 5 Goto L_2305
S8 = 4 - S1[1]
If S1[2] = 2 And SVCFLAG = 0 Let S8 = 6
L_2305: T9[S8,2] = T9[S8,2] + (A3[0] - A3[1] - A3[2])
If DETAIL
  If Not(PRNTCUST) 
	Let LINES = 2 \ gosub l_5800 \ Gosub PRNTCUSTNAME
  endif
  Gosub PRNTDETAIL
End If 
Goto L_2210
!
L_2800: Rem CUSTOMER ON ORDER TOTAL
K5$ = " ",K5$ \ CRDTOT = 0
K5$ = C1[1] Using "######"
L_2815: Search #5,3,2;K5$,R[5],E 
If E Goto L_2860
C5 = K5$[1,6] \ If C5 <> C1[1] Goto L_2860
Mat Read #5,R[5];H0; \ Mat Read #5,R[5];H5;
If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(6) - 1 Goto L_2855
If H5[8] < DIV[0] Or H5[8] < DIV[1] Goto L_2855
If H0 >= 9 And H0 <= 11
  Mat Read #6,H0[3],8;T2
  CRDTOT = CRDTOT + T2[0]
End If 
L_2855: Goto L_2815
L_2860: Return 
!
! get salesman record
GetSalesPerson:
K7$ = CSLSM Using "### " 
Search #7,2,1;K7$,R[7],E 
If E=0 Mat Read #7,R[7],0;SLSMNAME$; else SLSMNAME$ = "NOT ON FILE !"
return 
!
L_3000: Rem AGING ROUTINE
If Not(A2[4]) let e$="No date found for reference # ",str$(ARREF),"!" \ error 10000
If P9$[19,19] <> "Y" If Int(Fra(A2[3]) * 100) > 5 Goto L_3100
X2 = A2[4] \ Gosub L_7870 \ X = D3[0]
X2 = A4[3] \ Gosub L_7840 \ A4[3] = 0
If P9$[25,25] = "Y" If A4[3] Let X = A4[3]
If Int(Fra(A2[3]) * 100) > 5 And A4[3] = 0 Let X = D3[0]
AGE[1] = 0;AGE[2] = ARDATE;AGE[3] = X;AGE[4] = 0
If P61$[67,67] = "Y" And P9$[50,50] <> "M"
  AGE[7] = C7;AGE[6] = 50
Else 
  AGE[7] = 0;AGE[6] = 0
End If 
! - If Spc(4) > 1280 Goto L_3065
! - Swap 1,"UTAGE"
! - Signal 2,X,AGE[0],AGE[1] \ If X <> Spc(6) Goto L_3055
! - Goto L_3070
! - L_3065: 
! - Call "UTAGE5",P9$,AGE[]
call UTAge5(e$,P9$,AGE[],1)
L_3070: If AGE[0] = 1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If AGE[0] = 2 Goto L_3100
T[1] = T[1] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[2] = T[2] + (A3 - A3[1] - A3[2])
T[3] = T[3] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[4] = T[4] + (A3 - A3[1] - A3[2])
L_3100: Return 
!
! - L_3200: Rem INPUT FOR SCREEN
! - L_3205: J0$ = "3000 33506"
! - J2$ = "###" \ J1 = SLSM[0]
! - J5$ = "Enter Starting Salesperson"
! - Gosub ISINPUT
! - SLSM[0] = J1
! - J0$ = "3000 35306"
! - J2$ = "###" \ J1 = SLSM[1]
! - J5$ = "Enter Ending Salesperson"
! - Gosub ISINPUT
! - SLSM[1] = J1
! - If SLSM[0] > SLSM[1]
! -   Print @0,23;'CL RB';"Ending Salesperson Must Be Greater Than Starting";
! -   Signal 3,20 \ Goto L_3205
! - End If 
! - RETVAL$[1,3] = SLSM[0] Using "###"
! - RETVAL$[4,6] = SLSM[1] Using "###"
! - Return 
! - L_3300: Rem warehouse #2
! - L_3305: J0$ = "3000 23608"
! - J2$ = "##" \ J1 = W1[0]
! - J5$ = "Enter Starting Warehouse"
! - Gosub ISINPUT
! - W1[0] = J1
! - J0$ = "3000 25408"
! - J2$ = "##" \ J1 = W1[1]
! - J5$ = "Enter Ending Warehouse"
! - Gosub ISINPUT
! - W1[1] = J1
! - If W1[0] > W1[1]
! -   Print @0,23;'CL RB';"Ending Warehouse Must Be Greater Than Starting";
! -   Signal 3,30 \ Goto L_3305
! - End If 
! - RETVAL$[7,8] = W1[0] Using "##"
! - RETVAL$[9,10] = W1[1] Using "##"
! - Return 
! - L_3400: Rem division #3
! - L_3405: J0$ = "3000 23610"
! - J2$ = "##" \ J1 = DIV[0]
! - J5$ = "Enter Starting Division"
! - Gosub ISINPUT
! - DIV[0] = J1
! - J0$ = "3000 25410"
! - J2$ = "##" \ J1 = DIV[1]
! - J5$ = "Enter Ending Division"
! - Gosub ISINPUT
! - DIV[1] = J1
! - If DIV[0] > DIV[1]
! -   Print @0,23;'CL RB';"Ending Division Must Be Greater Than Starting";
! -   Signal 3,25 \ Goto L_3405
! - End If 
! - RETVAL$[11,12] = DIV[0] Using "##"
! - RETVAL$[13,14] = DIV[1] Using "##"
! - Return 
! - L_3500: Rem age service charges
! - J0$ = "6000 13712"
! - J2$ = "#" \ J1 = SVCFLAG
! - J5$ = "Do you want to have service charges aged (Y/N)"
! - Gosub ISINPUT
! - SVCFLAG = J1
! - RETVAL$[15,15] = Str$(SVCFLAG)
! - Return 
! - EDTRPTTYPE: Rem "
! - J0$ = "2 00 13714";J1$ = "S"
! - If DETAIL Let J1$ = "D"
! - J5$ = "Enter a  D: for Detail or a  S: for Summary Report"
! - Gosub ISINPUT
! - If J$ <> "S" And J$ <> "D" Goto EDTRPTTYPE
! - DETAIL = 0 \ If J$ = "D" Let DETAIL = 1
! - RETVAL$[16,16] = Str$(DETAIL)
! - Return 
! - EDT_DNUM: Rem "date or ref order
! - J0$ = "3000013715";J1 = DIRNUM
! - J5$ = "Enter a  1: for Reference  2: for Date  Order"
! - Gosub ISINPUT
! - If J1 < 1 Or J1 > 2 Goto EDT_DNUM
! - DIRNUM = J1
! - If DIRNUM = 1
! -   Print @40,15;"REFERENCE ORDER";'CL';
! - Else 
! -   Print @40,15;"DATE ORDER";'CL';
! - End If 
! - RETVAL$[17,17] = Str$(DIRNUM)
! - Return 
! - EDT_ZBAL: Rem "print zero bal recs
! - J0$ = "6000013716";J1 = ZEROBAL
! - J5$ = "Do you want to print records with zero balance? (Y/N)"
! - Gosub ISINPUT
! - ZEROBAL = J1
! - RETVAL$[18,18] = Str$(ZEROBAL)
! - Return 
! 
L_4000: Rem    BATCH TOTALS.
if J8 goto OUTEND ! dx xml
!
CSLSM = SLSM[0];TFLAG = 99
LINES = 0 \ L = 99 \ Gosub L_5800
TOTAR = T9[6,1] + T9[5,1] + T9[4,1] + T9[3,1] + T9[2,1] + T9[1,1] + T9[0,1]
For X = 0 To 6
  If TOTAR
    PRCNTAR[X] = FNR((T9[X,1] / TOTAR) * 100)
  Else 
    PRCNTAR[X] = 0
  End If 
Next X
Print #0;"\15\\15\\15\\15\"; Tab 35;"**** ACCOUNTS RECEIVABLE TOTALS ****\15\\15\\15\"
P$ = "---,---,---.##"
Print #0; Tab 35;AGEBUCK$[81,100]; Tab 55;
Print #0; Using P$;T9[0,1];
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0; Tab 35;AGEBUCK$[61,80]; Tab 55;
Print #0; Using P$;T9[1,1];
Print #0; Using "   ----.##%";PRCNTAR[1]
Print #0; Tab 35;AGEBUCK$[41,60]; Tab 55;
Print #0; Using P$;T9[2,1];
Print #0; Using "   ----.##%";PRCNTAR[2]
Print #0; Tab 35;AGEBUCK$[21,40]; Tab 55;
Print #0; Using P$;T9[3,1];
Print #0; Using "   ----.##%";PRCNTAR[3]
Print #0; Tab 35;AGEBUCK$[1,20]; Tab 55;
Print #0; Using P$;T9[4,1];
Print #0; Using "   ----.##%";PRCNTAR[4]
If T9[5,1] <> 0 Or P9$[19,19] <> "Y" ! unapplied credits are not aged
  Print #0; Tab 35;"UNAPPLIED CREDIT...:"; Tab 55;
  Print #0; Using P$;T9[5,1];
  Print #0; Using "   ----.##%";PRCNTAR[5]
End If 
If T9[6,1] Or SVCFLAG = 0
  Print #0; Using P$; Tab 35;"SERVICE CHARGES....:"; Tab 55;T9[6,1];
  Print #0; Using "   ----.##%";PRCNTAR[6]
End If 
Print #0; Tab 55;"--------------"
Print #0; Tab 35;"TOTAL A/R..........:"; Tab 55;
Print #0; Using P$;(T9[2,1] + T9[3,1] + T9[4,1] + T9[5,1] + T9[6,1] + T9[0,1] + T9[1,1]);
If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR[0] = 0
Print #0; Using "   ----.##%";PRCNTAR[0]
T[0] = 0
If T[4] Let T[0] = T[3] / T[4]
Print #0; Tab 35;"AVERAGE ";
If P9$[50,50] = "D" Print #0; Using "(DAYS)----#.###";T[0]
If P9$[50,50] = "M" Print #0; Using "(MONTHS)----#.###";T[0] / 30.416
If GNDCRD <> 0 Print #0; Using "TOTAL PENDING CREDIT ------,---.##"; Tab 35;GNDCRD
GNDCRD = 0
! - Print "\15\"
ENDMORE: Rem prompt for more ranges
goto OUTEND
!
! - Print @0,22;'CE';"End of Report Range. Press  <CR>: continue  E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Goto OUTEND
! - If J1$ <> "" Goto ENDMORE
! - Goto L_1000
!
L_4500: Rem "===================================== SALESMAN TOTALS
if J8 goto ExitSalesmanTotal ! dx xml
!
LINES = 2 \ Gosub L_5800
Print #0;"SALESPERSON ";CSLSM;" TOTALS";
If Not(AGECOL) Or Not(SVCFLAG)
  AGETAB = 32
Else 
  AGETAB = 42
End If 
Print #0; Using "----------#.##"; Tab (AGETAB);T9[0,3] + T9[1,3] + T9[2,3] + T9[3,3] + T9[4,3] + T9[6,3] + T9[5,3];
If Not(AGECOL) ! oldest to current
  Print #0; Using "--------#.##"; Tab 46;T9[0,3]; Tab 58;T9[1,3]; Tab 70;T9[2,3];
  Print #0; Using "--------#.##"; Tab 82;T9[3,3]; Tab 94;T9[4,3];
  If P9$[19,19] <> "Y" Print #0; Using "--------#.##"; Tab 106;T9[5,3];
  If Not(SVCFLAG) Print #0; Using "--------#.##"; Tab 118;T9[6,3];
Else 
  AGETAB = 46
  If Not(SVCFLAG) Print #0; Using "--------#.##"; Tab (AGETAB);T9[6,3];
  AGETAB = AGETAB + 12
  For X1 = 4 To 0 Step -1
    Print #0; Using "--------#.##"; Tab (AGETAB);T9[X1,3];
    AGETAB = AGETAB + 12
  Next X1
  If P9$[19,19] <> "Y" Print #0; Using "--------#.##"; Tab (AGETAB);T9[5,3];
End If 
Print #0;""
For X = 0 To 8
  T9[X,3] = 0
Next X
Print #0;""
If SLMCRD <> 0 
LINES = 1 \ Gosub L_5800
	Print #0; Using "TOTAL PENDING CREDIT  ------,---.##"; Tab 16;SLMCRD
endIf
LINES = 1 \ Gosub L_5800
Print #0;""
!
ExitSalesmanTotal:
SLMCRD = 0;PRNTCUST = 0
L = 99;CSLSM = C1[2]
Return 
!
PRNTDETAIL: Rem  "
if J8 if DETAIL=0 return ! dx xml, summary
!
if J8 ! dx xml
  gosub GetSalesPerson
  !
  tmp$=CSLSM Using "###",fdel$,rtrim$(SLSMNAME$),fdel$
  tmp$=tmp$,K9$,fdel$,rtrim$(Custname$[1,30]),fdel$
  tmp$=tmp$,rtrim$(C$[31,60]),fdel$,rtrim$(C$[61,90]),fdel$
  tmp$=tmp$,rtrim$(C$[91,105]),fdel$,C$[106,107],fdel$,C3$[1,10],fdel$
  tmp$=tmp$,CONTACT$," ",PHONE$,fdel$
  tmp$=tmp$,rtrim$(C2$[1,20]),fdel$
  tmp$=tmp$,"(",C2$[21,23],") ",C2$[24,26],"-",C2$[27,30],fdel$
  tmp$=tmp$,rtrim$(ARTERM$),fdel$
  If S9[0]=0 let tmp2$=C1[10] Using "-----##.##" else tmp2$=""
  tmp$=tmp$,tmp2$,fdel$
  tmp$=tmp$,Int(AGE[1]) Using "----#.#",fdel$
  If A3$[1,2] <> "  " let tmp2$=A3$[1,14] Else tmp2$=A4$[1,14]
  tmp$=tmp$,rtrim$(tmp2$),fdel$
  X2 = A2[4] \ Gosub L_7770 
  tmp$=tmp$,X$[1,8],fdel$
  TYPE = Int(Fra(A2[3]) * 100)
  tmp$=tmp$,D0$[TYPE * 3 - 2,TYPE * 3],fdel$
  tmp$=tmp$,ARREF[0] Using "########",fdel$
  If S1[2]=9 let tmp2$=Abs(A3) Using "######.##" else tmp2$=""
  tmp$=tmp$,tmp2$,fdel$
  if P9$[19,19]<>"Y" 
	let cntto=5
  else
	let cntto=4
  endif
  if AGECOL=0 ! oldest to current
    for cnt= 0 to cntto ! aging columns
	  if cnt=S8 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "-------#.##" else tmp2$=""
	  tmp$=tmp$,tmp2$,fdel$
	next cnt
  else
    !if S8>=5 let S8=4
	for cnt=4 to 0 step -1
	  if cnt=S8 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "-------#.##" else tmp2$=""
      tmp$=tmp$,tmp2$,fdel$
	next cnt
	if 5=s8 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "-------#.##" else tmp2$=""
	tmp$=tmp$,tmp2$,fdel$
  endif
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
LINES = 1 \ Gosub L_5800 \ if not(prntcust) Gosub PRNTCUSTNAME
If AGE[1]
  If AGE[1] > 0 Print #0; Using "####.#";Int(AGE[1]); Else Print #0; Using "----.#";Int(AGE[1]);
End If 
If A3$[1,2] <> "  " Print #0; Tab 8;A3$[1,14]; Else Print #0; Tab 8;A4$[1,14];
If P9$[25,25] = "Y" And A4[3] <> 0
  X2 = A4[3] \ Gosub ISDUNPACK \ Print #0; Tab 23;X$[1,5];
End If 
X2 = A2[4] \ Gosub L_7770 \ Print #0; Tab 29;X$[1,8];
TYPE = Int(Fra(A2[3]) * 100)
Print #0; Tab 38;D0$[TYPE * 3 - 2,TYPE * 3];
Print #0; Using "########"; Tab 42;ARREF[0];
If S1[2] <> 9
Else 
  Print #0; Using "######.##"; Tab 50;"[";Abs(A3);"]";
End If 
If Not(AGECOL)
  AGETAB = ((S8 * 12) + 48)
Else 
  AGETAB = 48
  If S8 >= 5
    If S8 = 5 Let AGETAB = 120
  Else 
    AGETAB = (((5 - S8) * 12) + 48)
  End If 
End If 
Print #0; Tab (AGETAB);
If (A3[0] - A3[1] - A3[2]) >= 0
  Print #0; Using "#######.##";(A3[0] - A3[1] - A3[2]);
Else 
  Print #0; Using "-------.##";(A3[0] - A3[1] - A3[2]);
End If 
Print #0;""
If S1[2] = 9 And A3[9] <> 0 
	LINES = 1 \ Gosub L_5800 \ if not(prntcust) Gosub PRNTCUSTNAME
	Print #0; Using "######.##"; Tab 41;"DISC"; Tab 51;"[";A3[9];"]"
endif
Return 
!
PRNTCUSTNAME: Rem "
If A0$[29,31] = "   "
  CONTACT$ = custname$[1,20] ! C$[1,20]
Else 
  CONTACT$ = A0$[29,48]
  if ucase$(CN$[1,1])="A" let contact$="*"+a0$[29,47]
  if ucase$(CN$[1,1])="S" let contact$="*"+a0$[29,47] 
End If 
STRIP_CONTACT: Rem tighten up the contact name
COUNTER = Len(CONTACT$)
If CONTACT$[COUNTER,COUNTER] = " " And CONTACT$ <> " "
  CONTACT$ = CONTACT$[1,COUNTER - 1]
  Goto STRIP_CONTACT
End If 
If A0$[49,51] = "   "
  PHONE$ = C$[21,30]
Else 
  PHONE$ = A0$[49,68]
End If 
STRIP_PHONE: Rem tighten up the phone number
COUNTER = Len(PHONE$)
If PHONE$[COUNTER,COUNTER] = " " And PHONE$ <> " "
  PHONE$ = PHONE$[1,COUNTER - 1]
  Goto STRIP_PHONE
End If 
if J8=0 
   PRINT #0;K9$;"  ";contact$;" ";phone$;tab(45);" ";custa1$[61,90];
  if custa1$[91,95]<>"     " print #0;" ";custa1$[91,95];
  print #0;""
  print #0;tab 9;custa1$[31,60];"(";custa1$[21,23];") ";custa1$[24,26];"-";custa1$[27,30];
  Print #0;"   STANDARD TERMS:  ";arterm$;
  IF NOT(S9[0])
	PRINT #0; USING "   AVG PAY DAYS -----##.##";C1[10]
  else
	print #0;""
  endif
endif
PRNTCUST = 1
Return 
!
L_5000: Rem "===================================== CUSTOMER TOTALS
if J8 if DETAIL=1 return ! dx xml, detail
!
if J8 ! dx xml
  gosub GetSalesPerson
  !
  tmp$=CSLSM Using "###",fdel$,SLSMNAME$,fdel$
  tmp$=tmp$,K9$,fdel$,rtrim$(Custname$[1,30]),fdel$
  tmp$=tmp$,rtrim$(C2$[1,20]),fdel$
  tmp2$="(",C2$[21,23],") ",C2$[24,26],"-",C2$[27,30]
  tmp$=tmp$,tmp2$,fdel$,rtrim$(ARTERM$),fdel$
  tmp$=tmp$,T[0] using "----#.##",fdel$
  If S9[0]=0 let tmp2$=C1[10] Using "-----##.##" else tmp2$=""
  tmp$=tmp$,tmp2$,fdel$
  tmp$=tmp$,(T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] + T9[6,2] + T9[5,2]) Using "---------#.##",fdel$
  if AGECOL=0 ! oldest to current
    for cnt= 0 to 4 ! aging columns
	  tmp$=tmp$,T9[cnt,2] Using "-------#.##",fdel$
	next cnt
  else
    if S8>=5 let S8=4
	for cnt=4 to 0 step -1
      tmp$=tmp$,tmp2$=T9[cnt,2] Using "-------#.##",fdel$
	next cnt
  endif
  If P9$[19,19] <> "Y" let tmp$=tmp$,T9[5,2] Using "-------##.##",fdel$
  If SVCFLAG=0 let tmp$=tmp$,T9[6,2] Using "--------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  goto ExitCustomerTotal
end if
!
LINES = 1 \ if not(detail) then lines = 2 
Gosub L_5800 \ if DETAIL AND not(prntcust) Gosub PRNTCUSTNAME
If Not(DETAIL)
  Print #0;K9$;"  ";Custname$[1,30];"     STANDARD TERMS:  ";ARTERM$;
  Print #0; Using "   AGE----#.##";T[0];
  If Not(S9[0]) Print #0; Using "   AVG PAY DAYS ------#.##";C1[10];
  Print #0;""
  Print #0;C2$[1,20];"(";C2$[21,23];")";C2$[24,26];"-";C2$[27,30];
Else 
  Print #0; Using "----#.##";T[0];
  Print #0;"  CUSTOMER ";K9$;" TOTALS";
End If 
If Not(AGECOL) Or Not(SVCFLAG)
  AGETAB = 33
Else 
  AGETAB = 43
End If 
Print #0; Using "---------#.##"; Tab (AGETAB);(T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] + T9[6,2] + T9[5,2]);
If Not(AGECOL) ! oldest to current
  Print #0; Using "--------#.##"; Tab 46;T9[0,2]; Tab 58;T9[1,2]; Tab 70;T9[2,2];
  Print #0; Using "--------#.##"; Tab 82;T9[3,2]; Tab 94;T9[4,2];
  If P9$[19,19] <> "Y" Print #0; Using "--------#.##"; Tab 106;T9[5,2];
  If Not(SVCFLAG) Print #0; Using "--------#.##"; Tab 118;T9[6,2];
Else 
  AGETAB = 46
  If Not(SVCFLAG) Print #0; Using "--------#.##"; Tab (AGETAB);T9[6,2];
  AGETAB = AGETAB + 12
  For X1 = 4 To 0 Step -1
    Print #0; Using "--------#.##"; Tab (AGETAB);T9[X1,2];
    AGETAB = AGETAB + 12
  Next X1
  If P9$[19,19] <> "Y"
    Print #0; Using "--------#.##"; Tab (AGETAB);T9[5,2];
  End If 
End If 
Print #0;""
If CRDTOT <> 0 
	LINES = 1 \ Gosub L_5800 \ if not(prntcust) gosub  PRNTCUSTNAME
	Print #0; Using "TOTAL PENDING CREDIT  ------,---.##"; Tab 16;CRDTOT
endIf 
LINES = 1 \ Gosub L_5800 
Print #0;""
!
ExitCustomerTotal:
T[1] = 0 \ T[2] = 0
For X = 0 To 8
  T9[X,1] = T9[X,1] + T9[X,2]
  T9[X,3] = T9[X,3] + T9[X,2]
  T9[X,2] = 0
Next X
PRNTCUST = 0
Return 
!
! - L_5600: Rem DISPLAY SCREEN
! - Print 'CS';@0,0;"-MX316S-"; Tab 27;"CUSTOMER A/R BY SALESPERSON"
! - If Not(S9[0])
! -   Print @0,2;'BR';"CURRENT FILE";'ER';
! - Else 
! -   Print @0,2;'BR';"FROZEN FILE ";'ER'; Tab 15;"AGED AS OF: ";ARDATE$;
! - End If 
! - Print @29,4;'BR';"STARTING";'ER';@49,4;'BR';"ENDING";'ER';
! - Print @1,6;"1> SALESPERSON CODE";
! - Print @1,8;"2> WAREHOUSE";
! - Print @1,10;"3> DIVISION";
! - Print @1,12;"4> AGE SERVICE CHARGES";
! - Print @1,14;"5> DETAIL OR SUMMARY";
! - Print @1,15;"6> DETAIL PRINT ORDER";
! - Print @1,16;"7> PRINT ZERO BALANCE DETAIL";
! - Return 
! - L_5700: Rem DISPLAY SCREEN VARIABLES
! - Print Using "###";@35,6;SLSM[0];@53,6;SLSM[1];
! - Print Using "##";@36,8;W1[0];@54,8;W1[1];
! - Print Using "##";@36,10;DIV[0];@54,10;DIV[1];
! - If SVCFLAG Print @37,12;"Y" Else Print @37,12;"N";
! - If DETAIL Print @37,14;"D" Else Print @37,14;"S";
! - Print Using "#";@37,15;DIRNUM;
! - If DIRNUM = 1
! -   Print @40,15;"REFERENCE ORDER";'CL';
! - Else 
! -   Print @40,15;"DATE ORDER";'CL';
! - End If 
! - If ZEROBAL Print @37,16;"Y"; Else Print @37,16;"N";
! - Return 
!
L_5800: Rem "==================================== HEADING ROUTINE
if J8 let PRNTCUST=0 \ return ! dx xml
!
If L + LINES < L9
  L = L + LINES
  Return 
End If 
If P  Print #0;"\14\"
! - If Not(SCRN) Goto L_5830
! - Input "\15\PRESS <CR> TO CONTINUE "J1$
! - Print 'CS'
P = P + 1
Print #0;" - 316S -";
Print #0; Tab 10;ARDATE$; Tab (66 - Int(Len(CNAME$) / 2));CNAME$; Tab 100;"PAGE";P
Print #0; Tab 2;Msc$(3);
Print #0; Tab 49;"A G E D   T R I A L   B A L A N C E"
If S9[0] Print #0; Tab 2;"FROZEN FILE"; Else Print #0; Tab 2;"CURRENT FILE";
Print #0; Tab 51;"CUSTOMER ";
If Not(DETAIL) Print #0;"TOTALS"; Else Print #0;"DETAIL";
Print #0;" BY SALESPERSON"
If CSLSM gosub GetSalesperson
If TFLAG
  SLSMNAME$ = SLSM[1] Using " Thru ###"
End If 
If CSLSM Or TFLAG
  Print #0; Using "### ";D1$;" ";CSLSM;SLSMNAME$;
End If 
Print #0; Tab 49;D2$;": ";
Print #0; Using "##";W1[0];" THRU ";W1[1];
Print #0;"  DIVISION: ";
Print #0; Using "###";DIV[0];" THRU ";DIV[1]
Print #0;" "
If Not(DETAIL)
  If Not(AGECOL) Or Not(SVCFLAG)
    AGETAB = 42
  Else 
    AGETAB = 52
  End If 
  Print #0; Tab (AGETAB);"TOTAL";
Else 
  Print #0; Tab 3;"AGE"; Tab 8;"DESCRIPTION";
  If P9$[25,25] = "Y" Print #0; Tab 25;"DUE";
  Print #0; Tab 31;"DATE"; Tab 41;"REFERENCE";
End If 
PTAB = 51
If Not(AGECOL) ! oldest to current
  For X = 5 To 1 Step -1
    Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
    PTAB = PTAB + 12
  Next X
  If P9$[19,19] <> "Y" Print #0; Tab 112;"UNAPL CR";
  If Not(SVCFLAG) Print #0; Tab 118;"    SVC CHG";
Else 
  If Not(SVCFLAG)
    Print #0; Tab (PTAB);" SVC CHG";
  End If 
  PTAB = PTAB + 12
  For X = 1 To 5
    Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
    PTAB = PTAB + 12
  Next X
  If P9$[19,19] <> "Y" Print #0; Tab (PTAB);"UNAPL CR";
End If 
Print #0;""
Print #0;""
L = 7 + LINES
PRNTCUST = 0
Return 
!
! - Rem {begin rtn.input.s}
! - ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 >= 3 If J0 <= 4
! -   If J0 = 3 Let J2$ = "#",J2$
! -   If J0 = 4 Let J2$ = "-",J2$
! -   J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - End If 
! - J1$[J3 + 1] = ""
! - If J0 < 3 Goto ISENTER
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 <> 6
! -   If J0 = 5
! -     J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! -     J1$ = J9$[4,7],J9$[2,3],"  "
! -   Else 
! -     J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! -     If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
! -   End If 
! - End If 
! - ISENTER: Rem
! - If J5 < Msc(34) - 1
! -   Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - End If 
! - Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
! - Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
! - Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) > J3
! -   J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
! - End If 
! - J9$ = J4$
! - If Not(Len(J9$))
! -   If J0$[3,4] = "00"
! -     J9$ = J1$
! -   Else 
! -     J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - End If 
! - For J8 = 1 To Len(J9$)
! -   If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
! -     J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
! -     Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - Next J8
! - On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
! - ISTYPE1: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto ISOUT
! - ISTYPE3: Rem
! - J9 = 0
! - X1 = 0
! - For J8 = 1 To Len(J9$)
! -   If J0 = 4 And Not(X1)
! -     If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
! -       X1 = 1
! -       Goto ISNCONT1
! -     End If 
! -   End If 
! -   If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
! -   If J9$[J8,J8] = " " Goto ISNCONT1
! -   If Len(J0$) > 10
! -     J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
! -   End If 
! -   If J9$[J8,J8] <> "." Goto ISNUMERR1
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
! -   If J9 Goto ISNUMERR1
! -   J9 = 1
! - ISNCONT2: Rem
! -   X1 = 1
! -   If J9 Let J9 = J9 + 1
! - ISNCONT1: Rem
! - Next J8
! - If J0 = 5 Goto ISTYPE5
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
! - ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - ISDECERR: Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
! - If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
! - If J9[1] = 0 Goto ISDTERR
! - On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
! - On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
! - Goto ISDTERR
! - ISMO30: If J9[1] > 30 Goto ISDTERR
! - ISMO31: If J9[1] > 31 Goto ISDTERR
! - Goto ISDTOUT
! - ISMOFEB: If J9[1] > 29 Goto ISDTERR
! - If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
! -   If J9[1] > 28 Goto ISDTERR
! - End If 
! - ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
! - J$ = X$ \ J3 = 8 \ Goto ISOUT
! - ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE6: Call String(1,J9$)
! - If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
! - Gosub ISERRMSG \ Goto ISENTER
! - ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BD';" ";J7$;" ";'BD'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end rtn.input.s}
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
OUTEND: Rem OUT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
!try call dxclose() else rem
End 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
