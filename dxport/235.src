! >>> Program 235
!
! description INVOICE HOLD LISTING
!     actually it looks like a register/journal copy
!
! loadsave -w -n 100,10 -o prog/dxport/235.dl4 src/235.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX235 - INVOICE HOLD LISTING
Rem AUTHOR: ANTONOVICH   MAR 20, 1987
Rem LAST UPDATE: 10/88 REV 2.3
! jliu cct165414 2/24/03 add divison number between whse and order type
! cct165131 add the prompt "HAVE THE COST U/M MATCH THE SELL U/M? (Y/N)"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 25, 2010  14:31:06
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx2/mx235.src (univ2) [txc] {14343}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic function findchannel
External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
  Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
Declare External function buildsort,getuidrec
Declare Intrinsic Sub InpBuf,String,programdump
!Option Default Dialect IRIS1

Dim 1%,PFU1[20],CNVTU[2],UN[2]
Dim 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim P0$[20],CUNIT$[4],SUNIT$[4],PUNIT$[4],UNIT$[4],PMASK$[15]
Dim 1%,H4[2],S1,S2,S7,OLS2[1],L3[3],F,X1
Dim 2%,H0[12],H5[16],L4[3],L6[5],X2,D9[5],W1,HC[12],HC1[12]
Dim C1$[30],C2$[30],C3$[20],L1$[60],L2$[20],HOLD$[16]
Dim 3%,T2[25],T3,L5[3],T7[13],L7[9],TT2[25],S3[17]
Dim 3%,PUNIT,SUNIT[3],EX[18],OLM[6],UNF[6]
Dim 1%,E,F9,I,J1,J2,J8,J9,P0,P1,W0,X,EUN[2]
Dim 2%,R1,R5,R6,Q0[1],H6[8],DIV
Dim J$[40],CNAME$[30],J2$[20],J3$[40],ARDATE$[8],D9$[10],Z1$[80]
Dim 3%,J,X3,T4[999,4],T5[999,4],T6[999,4],T9[20],UN[2]
Dim 3%,OREF[5]
Dim K1$[50],K2$[40],K3$[20],X$[20],D1$[8],Y$[20]
Dim F1$[16],P9$[50]
Dim nextblockid$[8],Message$[400],WebStr$[600],msg$[100]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],rstr$[2000]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim blockid$[100]
! call dxopen() ! needed?
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
For J = 2 To 11
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "1840","-1856","-1872","-1888","-1808","-1792","-2256","-1","-1728","-1760"
Mat Read #1,0,100;ARDATE$;
Mat Read #1,115;D9;
Read #1,3;CNAME$;
Read #1,88,800;F1$;
W0 = D9[5] \ If W0 <= 0 Let W0 = 1
Dim 3%,T8[W0,6],2%
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 63
If J8 ! Let J9 = 18
	let E$="Cannot run to browser"
	goto ERR_MSG
Endif
S1 = 5;S2 = 6;S7 = 0
Mat Read #1,115,40;Q0; \ If Not(Q0[1]) Let Q0[1] = 2
D1$ = "#####"
PMASK$ = "#####.",D1$[1,Q0[1]]
P1 = 0;P0 = 0
!Print 'CS';@0,0;"MX235";@25,0;"INVOICE HOLD LISTING"
eflag=0;message$=""
L_1100: Rem WHSE
If D9[5] = 1 Goto L_1450
Read #1,18,30;D9$;
!Print @0,10;'CE';"ENTER ";D9$;" #,  0: FOR ALL ";
!Input ""K1$ \ W1 = K1$
Call dxget("WHSE",tmp$) \ w1=tmp$
If W1 < 0 or w1 > D9[5] ! Goto L_1100
	!If W1 = 0 If K1$ <> "0" Goto L_1100
	!If W1 > D9[5] Goto L_1100
	Eflag=eflag+1
	message$=message$+" Invalid Whse"
Endif
L_1200: Rem DIVISION
!Print @0,12;'CL';"ENTER DIVISION #,   0: FOR ALL "; \ Input ""K1$
call dxget("DIV",K1$)
DIV = K1$
If DIV < 0 or Div>99 ! Goto L_1200
	!If DIV = 0 If K1$ <> "0" Goto L_1100
	!If DIV > 99 Goto L_1200
	eflag=eflag+1
	message$=message$+" Invalid Division"
Endif
L_1300: Rem cct165131
!Print @0,14;'CL';"HAVE THE COST U/M MATCH THE SELL U/M? (Y/N)  ";
call dxget("CMSUM",tmp$) ! Input ""K1$
K1$="Y" \ if tmp$<>"Y" let K1$="N" ! only sure about Y
! Call String(1,K1$)
If K1$ <> "Y" If K1$ <> "N" ! Goto L_1300
  eflag=eflag+1
  Message$=message$+" Answer is Y or N"
Endif
If K1$ = "Y" Let UMFLAG = 1 Else Let UMFLAG = 0
L_1450: Rem "==ok
!Print @10,22;'CE';
!Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto OUTEND
!If Z1$ = "R" Goto L_1100
!If Z1$ <> "P" Goto L_1450
if eflag ! someone entered bad data
	E$=Message$ ! uses E$
	goto ERR_MSG ! some bad entry
Endif
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
Endif
!Print @0,22;"Sorting...please wait";'CE'; \ Signal 3,0
K1$ = " ",K1$
L_1520: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1550
Search #9,5,1;K1$,R1,E
If E Gosub ERR_SEARCH
Goto L_1520
L_1550: Rem SORT
K1$ = " ",K1$;K1$ = 5 Using "##     "
K3$ = K1$
L_1570: Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
ST = K1$[1,2]
If E Goto L_1900
If ST > 5 Goto L_1900
Mat Read #2,R1,78;H4;
If W1 If W1 <> H4[2] Goto L_1570
Mat Read #2,R1,104;H5;
If DIV If DIV <> H5[8] Goto L_1570
Mat Read #2,R1;H0;
Mat Read #2,R1,512;OREF;
Mat Read #4,H0[3],8;T2;
Gosub L_6350
If Not(T2[21]) Goto L_1570
K2$ = " ",K2$ \ K2$ = OREF[1] Using "##########"
K2$[11] = H0[7] Using "######"
Search #9,4,1;K2$,R1,E
If E Gosub ERR_SEARCH
Goto L_1570
L_1900: !Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
!If J8 Print 'CS';
P1 = P0 \ J2 = 0
If Not(P1) Let P1 = 1
If Err 0 Gosub ERR_TRAP
K1$ = " ",K1$
J1 = 90
Gosub L_5800
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
Mat Read #2,R1,0;H0;
Mat Read #2,R1,446;P0$;
Mat Read #2,R1,78;H4;
Mat Read #2,R1,104;H5;
Mat Read #2,R1,408;H6;
Mat Read #2,R1,512;OREF;
W0 = H4[2] \ If W0 <= 0 Let W0 = 1
Mat Read #4,H0[3],8;T2;
Gosub L_6350
If H5[7] Mat Read #11,H5[7],0;EX;
T2[4] = T2[4] + T2[6]
X2 = H0[8] \ Gosub L_7700 \ D1$ = X$
T3 = T2[7]
Gosub L_3000 \ Gosub L_3200
Gosub L_5000
Gosub L_2200
Gosub L_4500
Gosub L_5200
Gosub L_2500
Goto L_2000
L_2200: Rem TOTALS CALC
For J = 0 To 5
  If J = 2 Goto L_2240
  T9[J] = T9[J] + T2[J]
L_2240: Next J
T9[2] = T9[2] + T3
If T2[10] <= 0 Goto L_2350
If T2[10] > 3 Goto L_2350
T6[H5,T2[10] - 1] = T6[H5,T2[10] - 1] + T2[12]
T6[H5,4] = T6[H5,4] + T2[0]
T5[H5,T2[10] - 1] = T5[H5,T2[10] - 1] + T2[0]
If T2[12] >= T2[0] Goto L_2350
T4[H5,T2[10] - 1] = T4[H5,T2[10] - 1] + (T2[0] - T2[12])
L_2350: Return 
L_2500: Rem TTLS
T2[2] = T3
For J = 0 To 5
  T8[0,J] = T8[0,J] + T2[J]
  T8[W0,J] = T8[W0,J] + T2[J]
Next J
T8[0,6] = T8[0,6] + T9[6]
T8[W0,6] = T8[W0,6] + T9[6]
Return 
L_3000: Rem CUST NAME
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,388;C3$;
Return 
L_3200: Rem GET BILLTO
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E \ If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C2$;
Read #6,R6,388;C3$[10,16];
Return 
L_4000: Rem TOTAL PRINT
J1 = J1 + 1 \ Gosub L_5800
Print #0;"\15\\15\";
Print #0; Tab 62;"SUB TOTAL"; Tab 76;"DISCOUNT"; Tab 90;"MISC";
Print #0; Tab 101;"TAX"; Tab 107;"FREIGHT"; Tab 116;"GRAND TOTAL"
Print #0; Tab 10;"** HOLD LISTING TOTALS **";
Print #0; Using "-------#.##"; Tab 60;T9[1];
Print #0; Using "-----#.##"; Tab 75;T9[3];
Print #0; Using "-----#.##"; Tab 85;T9[4];
Print #0; Using "-----#.##"; Tab 95;T9[2];
Print #0; Using "-----#.##"; Tab 105;T9[5];
Print #0; Using "-------#.##"; Tab 116;T9[0]
Return 
J1 = 75 \ Gosub L_5800
For J = 0 To 20 \ T9[J] = 0
Next J
For W0 = 1 To D9[5]
  For J = 0 To 6
    If T8[W0,J] Gosub L_4090
  Next J
Next W0 \ W0 = 0
L_4090: Rem TOTAL PRINT
J1 = J1 + 6 \ Gosub L_5800
If W0 Print #0;"\15\\15\";D9$;":";W0;
If Not(W0) Print #0;"\15\\15\";" ALL ";D9$;"S:";
Print #0; Tab 20;"** HOLD LISTING TOTALS **";
Print #0; Using "-----###.##"; Tab 65;T8[W0,1];
Print #0; Using "-----#.##"; Tab 75;T8[W0,3];
Print #0; Using "-----#.##"; Tab 84;T8[W0,4];
Print #0; Using "-----#.##"; Tab 93;T8[W0,2];
Print #0; Using "-----#.##"; Tab 102;T8[W0,5];
Print #0; Using "-----###.##"; Tab 116;T8[W0,0]
Mat Read #8,W0,42;T7;
For X1 = 0 To 6
  T7[X1] = T7[X1] + T8[W0,X1]
  T7[X1 + 7] = T7[X1 + 7] + T8[W0,X1]
Next X1
Print #0; Tab 10;"\15\** M-T-D REGISTER TOTALS **";
Print #0; Using "-------#.##"; Tab 65;T7[1];
Print #0; Using "-----#.##"; Tab 75;T7[3];
Print #0; Using "-----#.##"; Tab 84;T7[4];
Print #0; Using "-----#.##"; Tab 93;T7[2];
Print #0; Using "-----#.##"; Tab 102;T7[5];
Print #0; Using "-------#.##"; Tab 116;T7[0]
Print #0; Tab 10;"\15\** Y-T-D REGISTER TOTALS **";
Print #0; Using "-------#.##"; Tab 65;T7[8];
Print #0; Using "-----#.##"; Tab 75;T7[10];
Print #0; Using "-----#.##"; Tab 84;T7[11];
Print #0; Using "-----#.##"; Tab 93;T7[9];
Print #0; Using "-----#.##"; Tab 102;T7[12];
Print #0; Using "-------#.##"; Tab 116;T7[7]
J = 7 \ If W0 Return 
Return 
L_4500: Rem THRU LINES
T9[6] = 0
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4530: Search #5,3,1;J2$,R5,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
Mat Read #5,R5,32;L5;
Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L1$;
Mat Read #5,R5,168;L7;
Mat Read #5,R5,250;UN;
Mat Read #5,R5,140;L2$;
Mat Read #5,R5,256;OLS2;
Mat Read #5,R5,260;S3; \ Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
For X = 0 To 12 \ HC1[X] = 0 \ Next X
Gosub L_6100
For X = 0 To 3 \ SUNIT[X] = 0 \ Next X \ CUNIT = 0;PUNIT = 0
PUNIT$ = "   ";CUNIT$ = "    ";SUNIT$ = "    "
If OLS2[0] = 3 Goto L_4870
If Not(L3) Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2; \ Mat Read #7,L4,256;A;
Gosub L_30000
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000 \ SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000 \ PUNIT = AMOUNT
If UMFLAG
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 2;CNVTA = L5[1]
  Gosub L_20000 \ CUNIT = AMOUNT
Else 
  CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
  Gosub L_20000 \ CUNIT = AMOUNT
End If 
If UN[0] > 0 Mat Read #10,UN[0],10;SUNIT$;
If UN[1] > 0 Mat Read #10,UN[1],10;PUNIT$;
If UMFLAG
  If UN[0] > 0 Mat Read #10,UN[0],10;CUNIT$;
Else 
  If UN[2] > 0 Mat Read #10,UN[2],10;CUNIT$;
End If 
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UMFLAG
  If UN[0] = -1 Let CUNIT$ = "CWT "
  If UN[0] = -2 Let CUNIT$ = "LOT "
  If UN[0] = -3 Let CUNIT$ = "LB  "
Else 
  If UN[2] = -1 Let CUNIT$ = "CWT "
  If UN[2] = -2 Let CUNIT$ = "LOT "
  If UN[2] = -3 Let CUNIT$ = "LB  "
End If 
L_4870: Rem GOSUB L_5800:
Gosub L_5500
Goto L_4530
L_5000: Rem PRINT LINE
J1 = J1 + 4 \ Gosub L_5800 \ Print #0;" "
Print #0; Using "########"; Tab 0;OREF[1];
Print #0; Using "######"; Tab 9;H0[7];
Print #0; Tab 16;D1$;
Print #0; Using "######"; Tab 25;H0[4];
Print #0; Tab 32;C1$[1,18];
Print #0; Tab 51;P0$;
Print #0; Using "###"; Tab 72;H0[11];
Print #0; Using "######"; Tab 76;H0[1];
Print #0; Tab 83;C2$[1,30];
Print #0; Using "##"; Tab 114;H4[2];
Print #0; Using "##"; Tab 118;H5[8];
Print #0; Using "##"; Tab 123;H5[7]
Print #0;" "
Print #0; Tab 0;"LINE"; Tab 5;"ITEM CODE"; Tab 18;"DESCRIPTION";
Print #0; Tab 42;"QTY ORD"; Tab 52;"QTY B/O"; Tab 62;"QTY SHP";
Print #0; Tab 70;"U/M"; Tab 79;"PRICE";
Print #0; Tab 95;"COST"; Tab 111;"EXT COST";
Print #0; Tab 122;"EXT PRICE"
Return 
L_5200: Rem INV TTLS
For X = 0 To 12 \ HC1[X] = 0 \ Next X \ Gosub L_6210
If J1 + 5 >= J9 Let J1 = 99 \ Gosub L_5800
Print #0; Using "INVOICE ######## TOTALS:"; Tab 0;OREF[1];
X$ = " ---------#.##";Y$ = " -----#.##"
If P1 = 1 If T2[10] Gosub L_5300
If H5[13] If GPL If (H5[13] - H5[14]) / H5[13] * 100 < GPL Print #0;" *** LOW GP ***";
Print #0; Using X$; Tab 23;"SUBTOTAL"; Tab 33;T2[1];
If HC1[6] Print #0;"*";
Print #0; Using X$; Tab 63;"TOTAL COST"; Tab 76;T2[17];
If HC1[7] Print #0;"*";
Print #0; Using Y$; Tab 103;"SALES TAX"; Tab 118;T2[7]
Print #0; Using X$; Tab 23;"FREIGHT"; Tab 33;T2[5];
If HC1[3] Print #0;"*";
Print #0; Using X$; Tab 63;"MISC"; Tab 76;T2[4] - T2[6];
Print #0; Using Y$; Tab 103;"HANDLING"; Tab 118;T2[6]
Print #0; Using X$; Tab 23;"LESS DCT"; Tab 33;T2[3];
Print #0; Using X$; Tab 63;"FREIGHT COST"; Tab 76;T2[20]
Print #0; Using X$; Tab 23;"INV TOTAL"; Tab 33;T2[0];
Print #0; Using X$; Tab 63;"GROSS PROFIT"; Tab 76;H5[13] - H5[14];
If HC1[1] Print #0;"*";
If H5[13] Print #0; Using Y$; Tab 103;"GROSS PROFIT %"; Tab 118;(H5[13] - H5[14]) / H5[13] * 100;
Gosub L_6500
Return 
L_5300: Rem CASH
Return 
Print #0; Using "PAID BY: #"; Tab 25;T2[10];
C2$ = "CASH" \ If T2[10] = 2 Let C2$ = "CHECK ########"
If T2[10] <> 3 Goto L_5340
L_5340: Print #0; Tab 36;C2$[1,15];
Print #0; Using " PAID:-------#.##";T2[12];
Return 
L_5500: Rem "============================================= invoice detail line
Print #0; Using "###"; Tab 0;L3[2];
Print #0; Tab 5;L2$[1,12]; Tab 18;L1$[1,20];
If OLS2[0] = 3 Goto L_5600
Print #0; Using "------#.##"; Tab 39;SUNIT[1];SUNIT[2];SUNIT[3];
Print #0; Tab 70;SUNIT$;
Print #0; Using PMASK$; Tab 76;PUNIT;"/";PUNIT$;
Print #0; Using PMASK$; Tab 91;CUNIT;"/";CUNIT$;
Print #0; Using "-------#.##"; Tab 108;S3[12];
If HC1[7] Print #0;"*";
Print #0; Using "-------#.##"; Tab 120;L5[3];
If HC1[6] Print #0;"*";
L_5600: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 18;L1$[31,50];
If OLS2[0] = 3 Goto L_5690
Print #0; Using "PROFIT   ---------#.##  "; Tab 81;L5[3] - S3[12];
T0 = 0 \ If L5[3] Let T0 = (L5[3] - S3[12]) / L5[3] * 100
Print #0; Using "(---#.##%)"; Tab 111;T0;
If HC1[1] Print #0;" ****";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If S3[0] Print #0; Using "CUTTING CHARGE ####.#####"; Tab 50;S3[0];
If S3[1] Print #0; Using "CUTTING COST ####.#####"; Tab 80;S3[1];
L_5690: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_5800: Rem HEADS
If J1 < J9 Return 
If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 235 - ";Msc$(3);
Print #0; Tab 36;"I N V O I C E   H O L D  L I S T I N G ";
If DIV Print #0; Using "##"; Tab 80;"DIVISION ";DIV; Else Print #0; Tab 80;"ALL DIVISIONS";
If W1 Print #0; Tab 100;D9$;":";W1
If Not(W1) Print #0; Tab 100;"ALL ";D9$;"S"
If Not(F9) Goto L_5900
Print #0;"\15\";
Print #0; Tab 1;"ENTD BY"; Tab 11;"CASH TND/CHNG"; Tab 26;"INV$/SHORT";
Print #0; Tab 41;"CHKS TND/CHNG"; Tab 56;"INV$/SHORT";
Print #0; Tab 74;"CRED CARD"; Tab 85;"INV$/SHORT"; Tab 114;"DRAWER TOTAL"
Print #0;" "
Return 
L_5900: Print #0;"\15\";
Print #0; Tab 0;"INV #";
Print #0; Tab 10;"ORD #";
Print #0; Tab 16;"INV DATE";
Print #0; Tab 27;"CUST CODE / NAME";
Print #0; Tab 51;"PO NUMBER";
Print #0; Tab 72;"SLSM"; Tab 78;"BILL TO CODE / NAME";
Print #0; Tab 113;"WHSE"; Tab 118;"DIV"; Tab 122;"ORD TYPE";
Print #0;"\15\";
Return 
L_6100: Rem HOLD BY EXECPTIONS INVOICES ONLY
GP = L5[3] - S3[12]
If H6[1] Or L7[4] <= 0 Return 
If EX[3] If GP < EX[3] Let HC1[1] = 1
If EX[4] If GP > EX[4] Let HC1[1] = 1
If EX[9] If L5[3] < EX[9] Let HC1[6] = 1
If EX[10] If L5[3] > EX[10] Let HC1[6] = 1
If EX[13] If S3[12] < EX[13] Let HC1[7] = 1
If EX[14] If S3[12] > EX[14] Let HC1[7] = 1
If GP < 0 If EX[17] Let HC1[1] = 1 \ Goto L_6186
If L5[3] If EX[17] If FNR((GP / L5[3]) * 100) < EX[17] Let HC1[1] = 1
If L5[3] If EX[18] If FNR((GP / L5[3]) * 100) > EX[18] Let HC1[1] = 1
L_6186: For X = 0 To 11
  If HC1[X] If Not(HC[X]) Let HC1[X] = 0
Next X
Return 
L_6210: Rem HOLD BY EXECPTIONS INVOICES ONLY
GP = H5[13] - H5[14]
If H6[1] Or T2[1] <= 0 Return 
If EX[1] If GP < EX[1] Let HC1[1] = 1
If EX[2] If GP > EX[2] Let HC1[1] = 1
If EX[7] If T2[1] < EX[7] Let HC1[6] = 1
If EX[8] If T2[1] > EX[8] Let HC1[6] = 1
If EX[11] If T2[17] < EX[11] Let HC1[7] = 1
If EX[12] If T2[17] > EX[12] Let HC1[7] = 1
If EX[5] If T2[5] < EX[5] Let HC1[3] = 1
If EX[6] If T2[5] > EX[6] Let HC1[3] = 1
If GP < 0 If EX[15] Let HC1[1] = 1 \ Goto L_6317
If H5[13] If EX[15] If FNR((GP / H5[13]) * 100) < EX[15] Let HC1[1] = 1
If H5[13] If EX[16] If FNR((GP / H5[13]) * 100) > EX[16] Let HC1[1] = 1
L_6317: For X = 0 To 11
  If HC1[X] If Not(HC[X]) Let HC1[X] = 0
Next X
Return 
Return 
L_6350: Rem UNPACK T2[21] TO HC[x]
X2 = T2[21] \ For K = 0 To 11
  HC[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
X2 = 0 \ For K = 0 To 11
  If HC[K] Let X2 = X2 + 2 ^ K
Next K \ T2[21] = X2 \ Return 
L_6500: Rem "=================================== PRINT HOLD CODES IN EFFECT
Gosub L_6350
X1 = 0
Print #0;"\15\"; Tab 1;">>>>>  ";
For X = 0 To 11
  If Not(HC[X]) Goto L_6590
  Mat Read #1,65,(X) * 16;HOLD$;
  Print #0; Tab (X1 * 20) + 9;HOLD$;
  If X1 >= 6 Let X1 = 0 \ Print #0;" "
  X1 = X1 + 1
L_6590: Next X
Print #0;" "
If H6[1] Print #0; Tab 1;">>>>>  HOLD OVERRIDE IN EFFECT  <<<<<" \ J1 = J1 + 1
J1 = J1 + 5
Return 
F9 = 9 \ J1 = 90
For I = 0 To 999
  If T6[I,4] Gosub L_7030
Next I
Goto L_7200
L_7030: Rem PRINT IT
J1 = J1 + 2 \ Gosub L_5800
Print #0; Using "###"; Tab 1;I;
Print #0; Using "-----,--#.##"; Tab 11;T6[I,0];T5[I,0]; Tab 41;T6[I,1];
Print #0; Using "-----,--#.##";T5[I,1]; Tab 71;T6[I,2];T5[I,2];
T6[I,3] = FNR(T6[I,0] + T6[I,1] + T6[I,2]) \ T5[I,3] = FNR(T5[I,0] + T5[I,1] + T5[I,2])
Print #0; Using "---,---,--#.##"; Tab 101;T6[I,3];T6[I,4]
Gosub L_7300
Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[I,0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";T4[I,1]; Tab 71;T9[13];T4[I,2];
T4[I,3] = FNR(T4[I,0] + T4[I,1] + T4[I,2]) \ Gosub L_7300
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[I,3]
Print #0;" "
For X = 0 To 4 \ T6[0,X] = T6[0,X] + T6[I,X]
  T5[0,X] = T5[0,X] + T5[I,X] \ T4[0,X] = T4[0,X] + T4[I,X]
  T6[I,X] = 0
Next X \ Return 
L_7200: Rem TOTALS
If Not(T5[0,3]) Goto L_7280
J1 = J1 + 2 \ Gosub L_5800
Print #0;"\15\"; Tab 1;"TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;T6[0,0];T5[0,0]; Tab 41;T6[0,1];
Print #0; Using "-----,--#.##";T5[0,1]; Tab 71;T6[0,2];T5[0,2];
Print #0; Using "---,---,--#.##"; Tab 101;T6[0,3];T6[0,4]
I = 0 \ Gosub L_7300
Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[0,0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";T4[0,1]; Tab 71;T9[13];T4[0,2];
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[0,3]
Print #0;"\15\";"PROOF TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;(T6[0,0] - T9[11]); Tab 41;(T6[0,1] - T9[12]);
Print #0; Using "-----,--#.##"; Tab 71;(T6[0,2] - T9[13]);
Print #0; Using "---,---,--#.##"; Tab 101;(T6[0,3] - T9[14]);T4[0,3]
L_7280: Gosub L_7400
Return 
L_7300: Rem CHG PAID
T9[11] = FNR(T6[I,0] - (T5[I,0] - T4[I,0]))
T9[12] = FNR(T6[I,1] - (T5[I,1] - T4[I,1]))
T9[13] = FNR(T6[I,2] - (T5[I,2] - T4[I,2]))
T9[14] = FNR(T6[I,3] - (T5[I,3] - T4[I,3]))
Return 
L_7400: Rem DRAW AUD
For X = Len(F1$) To 1 Step -1
  If F1$[X,X] = "" Goto L_7420
  If F1$[X,X] <> " " Goto L_7430
L_7420: Next X
If X <= 1 Goto L_7480
L_7430: T9[1] = (T6[0,0] - T9[11]) \ T9[2] = (T6[0,1] - T9[12])
T9[3] = (T6[0,2] - T9[13]) \ T9[4] = (T6[0,3] - T9[14])
T9[0] = T4[0,3]
If W1 Let J2$ = (100 + W1) Using "###"
If W1 Goto L_7500
For X1 = 1 To D9[5]
  J2$ = (100 + X1) Using "###"
  Gosub L_7500
Next X1
If F Goto L_7655
L_7480: If Err 0 Gosub ERR_TRAP
Return 
L_7500: Rem TRY FILE
F1$[X + 1] = J2$[2]
If Err 0 Rem
Close #21
If Err 0 Goto L_7480
Ropen #21,F1$
If Err 0 Gosub ERR_TRAP
Print #0;"  WHSE: ";J2$[2]
J1 = J1 + 1 \ Gosub L_5800
For F = 1 To Chf(21) - 1
  Read #21,F;H4[0],H4[1],H4[2],X2,TT2[11],T2[12],J2$;
  Gosub L_7700
  Print #0; Using "### "; Tab 1;H4[1];
  If H4[2] > 1 If H4[2] < 4 Goto L_7580
  Print #0; Using "-----,--#.##"; Tab 11;T2[12];
L_7580: Print #0; Tab 28;X$;
  If H4[2] = 2 Print #0; Using "-----,--#.##"; Tab 41;T2[12];
  J3$ = " ",J3$ \ J3$ = "OTHER TYPE" \ If H4[2] = 1 Let J3$ = "CASH"
  If H4[2] = 2 Let J3$ = TT2[11] Using "CHECK #########"
  If H4[2] <> 3 Goto L_7602
  J3$ = "CREDIT CARD" \ If TT2[11] = 1 Let J3$ = "MASTER CARD"
  If TT2[11] = 2 Let J3$ = "VISA CARD"
  If TT2[11] = 3 Let J3$ = "AMER. EXPRESS"
L_7602: Print #0; Tab 56;J3$;
  If H4[2] = 3 Print #0; Using "-----,--#.##"; Tab 71;T2[12];
  Print #0; Using "---,---,--#.##"; Tab 101;T2[12]; Tab 117;J2$[1,15]
  J1 = J1 + 1 \ Gosub L_5800
  If H4[2] = 1 Let T9[1] = T9[1] + T2[12]
  If H4[2] = 2 Let T9[2] = T9[2] + T2[12]
  If H4[2] = 3 Let T9[3] = T9[3] + T2[12]
  If H4[2] = 4 Let T9[0] = T9[0] + T2[12]
  T9[4] = T9[4] + T2[12]
Next F
If Not(W1) Return 
L_7655: J1 = J1 + 1 \ Gosub L_5800
Print #0;"\15\";"FINAL PROOF";
Print #0; Using "-----,--#.##"; Tab 11;T9[1]; Tab 41;T9[2];
Print #0; Using "-----,--#.##"; Tab 71;T9[3];
Print #0; Using "---,---,--#.##"; Tab 101;T9[4];T9[0]
Return 
L_7700: Rem  *DATE X2 TO X$
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

L_9100: Rem END
Gosub L_4000
!If J2 If J8 Print @0,23;"*END*  PRESS <CR> TO EXIT ";'CL'; \ Input ""J$
Goto OUTEND
END ! Stop 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If OLS2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return
OUTEND: Rem EXIT
!Print 'CS'
!Chain "MX000C"
!Chain "MX000"
!Stop
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try Call dxclose() else rem
END
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
E$=msg$
Call programdump("tmp/ihl235se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end