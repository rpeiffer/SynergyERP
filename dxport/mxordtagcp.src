! >>> Program mxordtagcp
!
! description copy roltag from one file to another
!
! loadsave -w -n 100,10 -o prog/dxport/mxordtagcp.dl4 src/mxordtagcp.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem mxORDTAGcopy
Rem cct237298 copy job#/po# to new order/file
! chanfrom >0 is normal 6 digit order,  <0 is from Inv History
! chanto only allows >0 (6 digit num, <0 is not allowed
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 27, 2010  13:23:53
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mxordtagcp.src (univ2) [jcs] {32953}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,programdump
!Option Default Dialect IRIS1
try
Enter CHANFROM,CHANTO,ORDFROM,LINEFROM,ORDTO,LINETO,LStat,IntCo
if chanfrom=0 or chanto=0 goto OutEnd ! GOTTA HAVE 'EM
Dim 1%,LINENUM,QUOTE
Dim 3%,TL2[1]
Dim LPONUM$[30],LJOBNUM$[30],PSNUM$[30],MSG1$[30],MSG2$[30]
Dim ORDKEY$[44],MSGS$[750],BFK$[2]
Dim J$[50],J0$[15],J1$[50],J2$[20],J4$[50]
Dim J5$[70],J7$[90],J9$[50]
Dim X$[40],Msg$[200],rstr$[500]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim 3%
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
ORDKEY$ = " ",ORDKEY$
if chanfrom>0 ! regular
	ORDKEY$[1,6] = ORDFROM Using "######"
	ORDKEY$[7,9] = LINEFROM Using "###"
Else ! from history
	ordkey$[1,10]=OrdFrom Using "##########"
	ordkey$[11,13]=LineFrom using "###"
	Chanfrom=ABS(Chanfrom)
Endif
Search #CHANFROM,2,1;ORDKEY$,ORDREC,E
If E > 2 error 11000
If E Goto OUTEND
CH_ORDTAG = CHANFROM
Gosub READ_ORDTAG
ORDKEY$ = " ",ORDKEY$
if chanto>0 ! normal
	ORDKEY$[1,6] = ORDTO Using "######"
	ORDKEY$[7,9] = LINETO Using "###"
Else ! goto history - NO CAN DO
	goto OutEnd
Endif
Search #CHANTO,2,1;ORDKEY$,ORDREC,E
If E > 2 error 11000
If E = 0 Goto OUTEND
E = 2
Search #CHANTO,1,0;ORDKEY$,ORDREC,E
If E error 11000
CH_ORDTAG = CHANTO
Gosub WRITE_ORDTAG
Search #CHANTO,4,1;ORDKEY$,ORDREC,E
If E error 11000
Goto OUTEND
READ_ORDTAG: Rem
Mat Read #CH_ORDTAG,ORDREC,0;TL2;
Read #CH_ORDTAG,ORDREC,12;LINENUM;
Read #CH_ORDTAG,ORDREC,14;LPONUM$;
Read #CH_ORDTAG,ORDREC,44;LJOBNUM$;
Read #CH_ORDTAG,ORDREC,74;PSNUM$;
Read #CH_ORDTAG,ORDREC,104;MSG1$;
Read #CH_ORDTAG,ORDREC,134;MSG2$;
Mat Read #CH_ORDTAG,ORDREC,164;MSGS$;
Return 
WRITE_ORDTAG: Rem write the order tag  file
TL2[0] = LStat ! L2[0]
TL2[1] = ORDTO
LINENUM = LINETO
BFK$=" " ! blank for key
Mat Write #CH_ORDTAG,ORDREC,0;TL2;
Write #CH_ORDTAG,ORDREC,12;LINENUM;
Write #CH_ORDTAG,ORDREC,14;LPONUM$;
Write #CH_ORDTAG,ORDREC,44;LJOBNUM$;
Write #CH_ORDTAG,ORDREC,74;PSNUM$;
Write #CH_ORDTAG,ORDREC,104;MSG1$;
Write #CH_ORDTAG,ORDREC,134;MSG2$;
Mat Write #CH_ORDTAG,ORDREC,164;MSGS$;
mat write #ch_ordtag,ordrec,998;BFK$;
Return

OUTEND: Rem OUT
End 

else
 include "src/callmainerrnet_call.inc"
end try
end  ! end of Main