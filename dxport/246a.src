! >>> Program 246a
!
! description CREDIT JOURNAL - Part 2
!
! loadsave -w -n 100,10 -o prog/dxport/246a.dl4 src/246a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem "MX246A   -- CREDIT  Journal
Rem "Author   -- Roman Sawycky
Rem "Date     -- 01/02/1990
! Updates: 
! roman 07/11/1991  H5[13] and H5[14]         
! roman 01/25/1992 combine 2 sorts into 1
! LAST UPDATE : B.SWET 3/11/92 PRINT OUT DELETED CREDIT MEMO'S   
! 5/92 - ADD SERIAL NUMBER PRINT    
! 6/92 REK - CASH DRAWER INFO TO TEMPORARY FILE    
! 03/10/1993 rek. freight add-on logic     
! 4/9/93 NPE - REPLACE B/O QTY WITH SHIP QTY
! 7/9/1993 - add commission by line
! 11/23/93  rjs add non-stock logic
! 12/28/93  roman  credit card types
! 05/11/1994  roman  20 digit po number
! 05/27/1994 nate -  aff for totals (4165-4370). 
! 071195 CCT#77052 make a real summary
!      080295 added 8600 routine & 9003
! 05/20/97 cct100530-added "DELETED_CM" flag to prevent an error if a cust# is deleted on a c/m that was deleted.
! 06/27/97 cct103931 add the gp% to print for the slsman
! 08/06/97 cct105671 changed mask in line #5285
! 04/17/98 cct108935 tc fix error if salesman not exist
! 07/10/98 cct114396 jliu g/p should be decreased (mdt totals for slsm)
! 02/26/99 cct       mtg slsm cost add disc total /merch/other
! 04/16/99 cct121995 slsm journal sp # print if no cash sales
! 05/18/99 zyc cct122840 adjust detail line,it printed to next line
! 08/25/99 jlp cct124336 1st slsm subtotal was wrong
! 10/18/99 jliu cct127663 expand the mask
! Converted to Bedit: 17 APR 1998   15:05:56  mkbedit 1.2a
! 10/27/00 cct140479 GED Indicate which invoices were FAXed, w/ counter
! 8/24/04 cct181646 add the range of whse and the range of divisioin
! 05/17/06 cct204161 dgh - read ROH's OREF field at time of line printing.
! 11/10/14 vst task34934 - add ability to email salesrep report
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  3, 2008  13:05:55
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx246a.src (univ2) [jcs] {24234}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,getglobals,env,programdump
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,DatetoJulian
Declare Intrinsic function findchannel
External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
  Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
Declare External function buildsort,openfile
Declare External Function getuidrec,getuidinfo$
!Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3],IntCo,AudOnly
Com 2%,S9[9]
Com 3%,PFU2[6],CNVTA,A[33],rstr$[2000]
Try
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FND(X) = FNR(X - (X * D3[0]))
Dim 1%,E,F,F9,H4[2],I,J2,J8,J9,L3[3],P1,S1,S2,S7,W0,X,X1
Dim 4%,J1,D3[1]
Dim 1%,P0[1023],DDCOUNT[9],ARMONTH,SMDTL[1],eflg[5]
Dim 1%,BWH[99],BDV[99],BTYP[40],JTL[2],JTL2,DL1,CPSAME,LOCKPORT
Dim 1%,SORT,PASS,OLS2[1],H3[1],POS_,REC,GLDET,COSTCHG,EUN[2]
DIM 1%,emailRep,ucRec,chan,emCh,needOpenEmCh,prtCh
Dim 2%,D9[5],H0[12],H5[16],L4[3],L6[5],R1,R5,R6,W1,X2,N1,GPL,CSH0[4],SP,LTAX2
Dim 2%,SLSM[9],JRNL,I_CTR,Q0[1],DIV,DL[12],H6[8],PRODB[24],SJ1
Dim 2%,SDIV,EDIV,SWH,EWH
Dim 3%,J,L5[3],T2[25],T4[4],T5[4],T6[4],T7[13],T9[20],T16[8],OLM[6],SJ2[8]
Dim 3%,SUNIT[3],PUNIT,SUNIT$[4],PUNIT$[4],UNIT,UNIT$[4],CUNIT,CUNIT$[4]
Dim 3%,T10[8],T11[2],CAT[19,5],TOTCOM,LTAX1,Rol0,NetCost[2]
Dim 3%,X3,L7[9],L7$[6],N1$[25],S3[17],CSH1[2],S5[3],SCOM[4],SMER[4],SCST[4]
Dim 3%,TT2[25],AMOUNT,TTOT[14],CFIN[8],W3[24],LDCOST,GT[10],OREF[5]
Dim 3%,INVNET,TOTNET,TOTFCST,UNF[6],JTL1[14],JTTL[13],TPS,DL3
Dim 3%,TOTMERCHCOST,SLS1[12,2],ST0[10],ST1[10],R[99],SLSYTDGP,SLSYTDSL
Dim C1$[30],C2$[30],S1$[118],D1$[8],D9$[10],F1$[16],J$[75],CNAME$[30]
Dim J2$[20],J3$[40],ARDATE$[8],K1$[50],K2$[50],K3$[50],L6$[60],DT$[50],D$[20]
Dim S$[25],K11$[40],S2$[30],K6$[50],PMASK$[15],SNK$[50],SN1$[54],CSH0$[156]
Dim L1$[20],P0$[20],P1$[156],P9$[50],P60$[50],X$[14],Z1$[50],K17$[40]
Dim TFLE$[30],CCTYPE$[100],K35$[40],DL$[20],DL1$[20],LINES$[132],A$[20]
Dim RETVAL$[512],Z2$[10],J4$[75],J5$[75],J0$[16],J1$[75],J7$[75]
Dim SFLE$[40],SLKEY$[40],SLSNAME$[30],CRIP$[40],Usr$[40]
dim P61$[256],emailFrom$[48],slsEmail$[50],sys$[560]
Dim COMMENT1$[50],COMMENT2$[50],COMMENT3$[50]
Dim nextblockid$[8],Message$[400],WebStr$[600],msg$[100]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim blockid$[100]
! call dxopen() ! needed?
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo
for ctr=2 to 99
	if ctr<>9
		try
			close#ctr
		else
			rem
		endtry
	endif
next ctr
LINES$ = "-",LINES$
!  TT = Spc(5) \ COID = Int((TT - Int(TT / 16384) * 16384) / 64)
For J = 2 To 18
  Read J0 \ If J0 = -1 Goto L_830
  J2 = Abs(Fra(J0) * 1000) \ If J2 <= 88 Or J2 > Chf(1) - 1 Let J2 = 88
  J1 = Int(Abs(J0))
  Read #1,J2,J1;J$;
  If J0 <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "1840","1856","1872","1888","1808","1792","2256","-1","2224","1824","1728","1248","2944"
Data "-1","-1","1744","2048"
Try
	v9=CHF(9) ! is there a sortfile?
Else
	X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w
	! if x2<0 Error 10000 ! problem with build
End try
Gosub L_6800 ! build temp file
SFLE$ = " ",SFLE$
SFLE$ = "[1:32] 6/SLSMTMP"
SFLE$ = SFLE$,Spc(6) Using "&&&&"
SFLE$ = SFLE$,"!"
Build #30,SFLE$
R = 2 \ Search #30,0,1;SLKEY$,R,E \ If E Gosub ERR_SEARCH
R = 1 \ Search #30,0,0;SLKEY$,R,E \ If E Gosub ERR_SEARCH
Close #30
SFLE$ = Spc(6) Using "6/SLSMTMP&&&&"
tmp$="chmod go+rw files/"+LCase$(SFLE$)
System tmp$
Open #30,SFLE$
CRIP$ = "cntrl/crip"+Str$(COID)
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
Close #1 ! getsessions opens it as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,j$
Read #1,20,46;N1;
JRNL = N1
Mat Read #1,0,100;ARDATE$;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
MAT  READ #1,61,0;P61$; ! more flags
Read #1,3;CNAME$;
Mat Read #1,49,0;CCTYPE$;
Mat Read #1,18,30;D9$;
Read #1,150,0;J$;
Open #35,J$
Read #1,88,800;F1$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
W0 = D9[5]
Dim 3%,T8[W0,7],COMM[W0,2],3%
R=getuidrec(e$,IntCo,userid$)
!Mat read #1,120;p0; ! write upon good submit
!if p0[246]<>0 ! inuse =0 let p0[246]=R
!Mat write #1,120;p0; ! incase cleared (entry problem, etc)
!If Err 0 Let J8 = Spc(8)
! If Err 0 Let J8 = Spc(8)
J8 = 0 
Try J9 = Chf(0) Else Let J8=49
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 20
S1 = 10;S2 = 11
MULTIS = 0 \ If P9$[21,21] = "Y" Let MULTIS = 1
SMDTL[0] = 1;JTL2 = 1
! Call "Progdflt","246","",77,RETVAL$
Message$="";EFLG=0 ! error messages & flg
!call programdump("/tmp/crlog0!","")

! verify gl tmp file is not in use  flag not set (sat on screen 2 too long?)
if p9$[17,17]="Y"
	Read #1,88,80;J$[1,17];
	Try
		Open #23,J$
		J$ = " ",J$
		Search #23,2,1;j$,v1,e
		if e=0 ! <>0
			!E = 2 \ Search #23,1,0;j$,V1,E
			!If E Gosub ERR_SEARCH
			!Search #23,4,1;j$,V1,E
			!If E Gosub ERR_SEARCH
			message$="G/L C/M file is in use";eflg=eflg+1
		endif
		Try close #23 Else Rem
	Else
		!
	end try
endif
Mat read #1,120;p0;
if p0[246]<>0 ! inuse =0 let p0[246]=R
	R=P0[246]
	USR$=GetUIDInfo$(e$,IntCo,R)
	Eflg=Eflg+1;Message$=Message$+Str$(EFLG)+" *CREDIT JOURNAL BEING RUN BY USER "+USR$[21]+"... RUN JOURNAL LATER."
Endif
if eflag>0 goto FINAL_QUEST ! fail on start
!Call DXGet("CJABRT",tmp$)
!tmp$=UCase$(Trim$(tmp$))
!If tmp$ <> "" ! 
!	Let Message$="OK - NO JOURNAL"
!	ReturnStatus=0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
!	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!	  call AddToStr(e$,rstr$,WebStr$)
!	  call SetOutPut(e$,rstr$)
!	  ! need to reset flags
!
!	  Goto OutEnd ! clear all
!Endif
! Gosub DISP_SCRN
! no progdflts here
DISP_SCRN: Rem
!Print 'CS';@0,0;"-MX246A-";@25,0;"CREDIT JOURNAL"
!Print @0,2;" 1. Is this a reprint? ";'CE';
!If S7 = 11 Print @4,3;'CE';"Reprint Which Journal ? ";
!Print @24,4;'BR';"STARTING";@40,4;"ENDING";'ER';
!Print @0,5;'CE';" 2. ";D9$;":"
!Print @0,7;'CE';" 3. DIVISION: ";
!Print @0,9;'CE';" 4. Print  1:Invoice Journal  2:Salesperson Journal  3:Both ?";
!Print @0,12;'CE';" 5. Print Invoice Lines in D:detail or S:summary ? ";@55,12;"SPJ";
!Print @0,13;'CE';" 6. Print Cost in the same U/M as Price U/M ? ";
!Print @0,14;'CE';" 7. Print General Ledger Section in D:detail or S:summary ? ";
!Print @0,15;'CE';" 8. Include Entered by Invoice Totals Page ? ";
!Print @0,16;'CE';" 9. Print Whse/Div/Order type Summary Totals Page ? ";
!Return 
ASK_REPRINT: Rem  Is this a reprint?
If Not(S7) Or S7 = S1 Let K2$ = "N" Else Let K2$ = "Y"
!J0$ = "2    125 2" \ J1$ = K2$
!J5$ = "Enter Y, N, or E:exit"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("RPRTJ",J$) ! reprint of jrnl (Y/N)
K2$="N" \ if J$<>"" Let K2$="Y"
!K2$ = J$
!Call String(1,K2$)
!If K2$ = "E" Goto OUTEND
If K2$ = "Y" Let S7 = S2
If K2$ = "N" Let S7 = S1
! If Not(S7) Goto ASK_REPRINT
RETVAL$[1,1] = K2$[1,1]
If S7 = S1 Goto L_1060
L_1040: !Print @5,3;'CL';"Reprint Which Journal? ";
!J0$ = "3    629 3" \ J1 = F8
!J5$ = "Enter Journal # to reprint or 0 for all"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("JRPRT",tmp$) ! journal to reprint
Let J1=tmp$
F8 = J1
L_1060: N1$ = " ",N1$
If S7 = 11 If Not(F8) Let N1$ = "ALL UNACCEPTED JOURNALS"
If S7 = 11 If F8 Let N1$ = F8 Using "REPRINT OF JOURNAL ######"
If S7 = 10 Let N1$ = N1 Using "JOURNAL ######"
! If S7 = 10 Print @5,3;'CL';
RETVAL$[16,21] = F8 Using "######"
! Return 
ASK_WHSE: Rem "====== which warehouse(s) to print
START_WHSE: Rem
!J0$ = "3    228 5" \ J1 = SWH
!J1 = SWH
!J5$ = "Enter the starting warehouse number maximum " + Str$(D9[5])
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("SWHS",tmp$) \ j1=tmp$
SWH = J1
If SWH < 1 Or SWH > D9[5] let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse is 1 to 99! "!let swh=1 ! Goto START_WHSE
END_WHSE: Rem
!J0$ = "3    242 5"
!J1 = EWH
!J5$ = "Enter the ending warehouse number maximum " + Str$(D9[5])
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("EWHS",tmp$) \ j1=tmp$
EWH = J1
If EWH < 1 Or EWH > D9[5] let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse is 1 to 99! " !Goto END_WHSE
If EWH < SWH let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse Range Invalid! " \ Goto ASK_WHSE
RETVAL$[3,4] = SWH Using "##"
RETVAL$[33,34] = EWH Using "##"
! Return 
ASK_DIV: Rem "========= which division(s) to print
START_DIV: Rem
!J0$ = "3    228 7" \ J1 = SDIV
!J5$ = "Enter the starting division number maximum 99 "
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("SDIV",tmp$) \ let j1=tmp$
SDIV = J1
If SDIV < 1 Or SDIV > 99 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division is 1 to 99! " !Goto START_DIV
END_DIV: Rem
!J0$ = "3    242 7" \ J1 = EDIV
!J5$ = "Enter the ending division number maximum 99 "
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("EDIV",tmp$) \ let j1=tmp$
EDIV = J1
If EDIV < 1 Or EDIV > 99 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division is 1 to 99! "!Goto END_DIV
If EDIV < SDIV let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division Range Invalid! "!Gosub ERR_MSG \ Goto ASK_DIV
RETVAL$[5,6] = SDIV Using "##"
RETVAL$[35,36] = EDIV Using "##"
! Return 
! ==== NEW FOR THE WEB - SALESPERSON RANGE  ================================
Call DXGet("SSLSP",tmp$) \ j1=TRIM$(tmp$)
if j1<1 or j1>999 or fra(j1) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Salesperson is 1 to 999! "!let j1=1
SSLSM=j1
Call DXGet("ESLSP",tmp$) \ j1=Trim$(tmp$)
If j1<1 or j1>999 or fra(j1) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Salesperson is 1 to 999! "!let j1=999
If J1<SSLSM let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Salesperson Range Invalid! "!
ESLSM=J1
ASK_WHICH_JRNL: Rem  1=invoice journal, 2=salesperson journal, 3=both
!J0$ = "3    16209" \ J1 = SORT
!If Not(J1) Let J1 = 3
!J5$ = "Enter journal to print, 1:invoice journal 2:salesperson journal 3:both"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGET("JRTYPE",tmp$) \ j1=tmp$
SORT = J1
If SORT < 1 Or SORT > 3 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto ASK_WHICH_JRNL
RETVAL$[9,9] = SORT Using "#"
If SORT < 3 Let PASS = 0 \ Goto L_1240
SORT = 1 \ PASS = 1
L_1240: ! If PASS = 0 And SORT = 1 Print @5,10;'CL'; \ Goto L_1245
! Print @5,10;'CL';"Print Cost & G/P on Salesperson Journal ?  ";
!J0$ = "6    14810" \ J1 = PRTSCOST
!J5$ = "Enter Y or N "
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("PCGPSJ",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
If pass=0 and sort=1 let j1=0
PRTSCOST = J1
if prtscost<>0
	IF COST_LEV[1]=0 let prtscost=0 ! not cost security on load cost
endif
RETVAL$[10,10] = PRTSCOST Using "#"
L_1245: Rem "continue
If SORT = 1 And Not(PASS) ! "invoice only
  !Print @60,12;"N/A";
Else ! "includes salesperson or Both
  !J$ = "S" \ If SMDTL[0] Let J$ = "D"
  If Not(SMDTL[0]) Let SMDTL[1] = 0
  J$ = "S" \ If SMDTL[1] Let J$ = "D"
  !Print @60,12;'CL';J$;
End If 
! Return 
ASK_LINES: Rem print invoice lines in detail or summary?
!If Not(DETAIL) Print @51,12;"S" \ Goto STRTSPLNDTL
!J0$ = "2    15112"
!If LNDETL Let J1$ = "D" Else Let J1$ = "S"
!J5$ = "Enter D:detail or S:summary"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
call dxget("LDTSUM",tmp$) \ j$=Trim$(tmp$)
! If Detail=0 let j$="S"
DT$ = J$
Call String(1,DT$)
If DT$ = "S" Let LNDETL = 0
If DT$ = "D" Let LNDETL = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto ASK_LINES
RETVAL$[12,12] = DT$
If Not(LNDETL)
  !Print @51,13;'CL';"N/A";
  CPSAME = 0
Else 
  DT$ = "N" \ If CPSAME Let DT$ = "Y"
  !Print @51,13;'CL';DT$;
End If 
STRTSPLNDTL: Rem "Salesperson Line Detail
If SORT = 1 And PASS = 0 ! "Invoice Journal Only
  !Print @60,12;"N/A";
  !Return 
End If 
If SMDTL[0] = 0 ! "want Journal in summary so no choice
  !Print @60,12;"S";
  SMDTL[1] = 0 ! \ Return 
End If 
SLSPLNDTL: Rem "ask about salesperson Line detail
!J0$ = "2 00016012";J1$ = "S"
!If SMDTL[1] Let J1$ = "D"
!J5$ = "For Salesperson Journal Lines - Enter D:detail or S:summary"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("SLDTSUM",tmp$) \ j$=Trim$(tmp$)
If Sort=1 and pass=0 let j$="S"
If SMDTL[1]=0 let j$="S"
If J$ <> "D" And J$ <> "S" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let J$="S" ! Goto SLSPLNDTL
! If J$ <> "D" And J$ <> "S" Goto SLSPLNDTL
SMDTL[1] = 0 \ If J$ = "D" Let SMDTL[1] = 1
RETVAL$[30,30] = J$
!Return
ASK_CPSAME: Rem "cost and price same U/M
If Not(LNDETL)
  !Print @51,13;'CL';"N/A";
  CPSAME = 0
  !Return 
End If 
!Print @51,13;'CL';
!J0$ = "6000015113";J1 = CPSAME
!J5$ = "Print costs and prices in same U/M  Y or N"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call dxget("CPUM",tmp$) \ j$=Trim$(tmp$) \ if J$<>"" Let j$="Y"
If not(lndetl) or j$="" let j$="N"
DT$ = J$
Call String(1,DT$)
RETVAL$[22,22] = DT$
CPSAME = 0
If DT$ = "Y" Let CPSAME = 1
! Return 
ASK_GL: Rem print g/l in detail or summary?
!If P9$[17,17] <> "Y" Return 
!J0$ = "2    16014"
!If GLDET Let J1$ = "D" Else Let J1$ = "S"
!J5$ = "Enter D:detail or S:summary"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("GLDTSUM",tmp$) \ let J$=trim$(tmp$)
If P9$[17,17] <> "Y" Let j$="S"
DT$ = J$
Call String(1,DT$)
If DT$ = "S" Let GLDET = 0
If DT$ = "D" Let GLDET = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto ASK_GL
RETVAL$[13,13] = DT$
! Return 
ASK_ENTDBY: Rem ENTERED BY?
!J0$ = "6    14515" \ J1 = ENTD
!J5$ = "Enter Y or N"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("EBTTL",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
ENTD = J1
If J1 Let RETVAL$[14,14] = "Y" Else Let RETVAL$[14,14] = "N"
! Return 
ASK_TOTALS: Rem "== one more question
!J0$ = "6    15216" \ J1 = JSDETL
!J5$ = "Enter Y or N"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
Call DXGet("JSTTL",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
JSDETL = J1
If J1 Let RETVAL$[15,15] = "Y" Else Let RETVAL$[15,15] = "N"
!Return
! NOT USED ON CREDITS
!ASK_TYPE: Rem  1=cash, 2=orders, 3=both
!P1 = 2 \ Goto DONE_ASK_TYPE
!J0$ = "3    110 5" \ J1 = P1
!J5$ = "Enter Journal Type,  1:cash  2:orders  3:both "
!If Not(J1) Let J1 = 3
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!P1 = J1
!If P1 < 1 Or P1 > 3 Goto ASK_TYPE
!If P1 = 3 Let P1 = 0
!TYPE = P1;TYPE[1] = P1;TYPE[2] = P1
!DONE_ASK_TYPE: RETVAL$[2,2] = P1 Using "#"
!Return 
! NOT USED CREDITS
!ASK_ORDTYPE: Rem PRINT BY ORD TYPE
!J0$ = "3    21511" \ J1 = ORDT
!J5$ = "Enter Order Type or 0 for all"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!ORDT = J1
!If Fra(ORDT) Or ORDT < 0 Or ORDT > 40 Goto ASK_ORDTYPE
!RETVAL$[7,8] = ORDT Using "##"
!Return 
! NOT USED CREDITS
!ASK_DET_SUM: Rem print journal in detail or summary?
!J0$ = "2    14515"
!If DETAIL Let J1$ = "D" Else Let J1$ = "S"
!J5$ = "Enter D:detail or S:summary"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!DT$ = J$
!If DT$ = "S" Let DETAIL = 0
!If DT$ = "D" Let DETAIL = 99
!If DT$ <> "S" And DT$ <> "D" Goto ASK_DET_SUM
!!RETVAL$[11,11] = DT$[1,1]
!If Not(DETAIL) Let LNDETL = 0 \ RETVAL$[12,12] = "S"
!Return 
 
FINAL_QUEST: Rem
! NEW - PROMPT FOR PREVIEW OR FINAL
Call DXGET("PRPRT",tmp$) ! (NOT ADDED?)
Let AudOnly=0 \ if tmp$<>"" Let AUDONLY=1
!call programdump("/tmp/crlog1!","")
If Eflg>0 ! found an issue
	let tmp$="THERE ARE "+Str$(eflg)+" ISSUES THAT NEED FIXING.. "+Message$
	ReturnStatus=1 ! 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
	call CreateNetStatus(e$,ReturnStatus,tmp$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
	  Goto L_9010 ! OutEnd - no glartemp clear!!
Endif

START_PRINT: Rem  here we go....
! DUE TO WEB - WE NEED TO CHANGE CREATING IRIP UNTIL ACTUAL RUN!!
TMP$="doing a lock"
call "proglock.dl4","246",1,TMP$
	Chan=Findchannel()
	R=GetUIDRec(e$,IntCo,Userid$)
  !tmp$="<666> "+IRip$+"!"
   tmp$="<00> "+CRip$+"!"
  Build #CHan,+tmp$
  Print #Chan;"credit journal started ";Msc$(3)
  Print #Chan;"user ";R;" SPC 5= ";Spc(5)
  Close #Chan
  tmp$="chmod go+rw files/"+CRIP$
  System tmp$
! moved from starting program 246 (as people can't stop X'ing out!)
R=getuidrec(e$,IntCo,userid$)
Mat read #1,120;p0;
let p0[246]=R
Mat write #1,120;p0; ! incase cleared (entry problem, etc)
gosub setglcmtemp ! set glar!
J8=0
Try
	J9=CHF(0)
Else
	Let J8=49
End try
J9 = 55 \ If J8 Let J9 = 20;SCRPRT = 99
If SCRPRT ! dx xml, setup rstr$ (PRINT TO BROWSER)
  !<section>
  tmp$ = bsdel$,"246a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
! End If 
! if SCRPRT ! set up xml headings?
  tmp$ = "MESSAGE" ! PER ALL - NO XCEL OPTION! (MULTI LINE & MULTI SECTION!!)
  call addtostr(e$,rstr$,tmp$+rdel$)
  AUDONLY=1 ! change to AUDIT/Preview ONLY
  Goto OutEnd ! don't even process!!
Endif
! call programdump("/tmp/crlog2!","")
Gosub EMAILSALESCOPY
Gosub L_8700
L_1400: Rem "================================================ clear all tot's
!Print @0,22;'CL';"Clearing Totals..."; \ Signal 3,0
For J = 0 To 25
  T2[J] = 0
  If J < 14 Let T7[J] = 0
  If J < 21 Let T9[J] = 0
  If J < 9 Let T10[J] = 0
  If J < 3 Let T11[J] = 0
  If J < 15 Let TTOT[J] = 0
  If J < 9 Let T16[J] = 0
  If J < 5 Let T4[J] = 0;T5[J] = 0;T6[J] = 0
Next J
For J = 0 To D9[5]
  For J1 = 0 To 7
    If J1 < 8 Let T8[J,J1] = 0
    If J1 < 3 Let COMM[J,J1] = 0
  Next J1
Next J
For J = 0 To 999 ! \ If Not(Fra(J / 50)) Print ".";
  REC = J \ Gosub L_6750
Next J
SLSMTDGP = 0;SLSYTDGP = 0;SLSMTDSL = 0;SLSYTDSL = 0
TOTNET = 0;TOTFCST = 0
Gosub L_8800
! Print @0,22;'CE';"Sorting...please wait"; \ Signal 3,0
K1$ = " ",K1$
Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1550
Goto L_1900
L_1550: Rem "=========================================== now do sort
K1$ = " ",K1$;K1$ = S7 Using "##     "
K3$ = K1$
L_1570: Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
! call programdump("/tmp/crlog2a!","")
If E Goto L_1700
If K1$[1,2] <> K3$[1,2] Goto L_1700
Mat Read #2,R1;H0;
Mat Read #2,R1,78;H4;
Mat Read #2,R1,52;H3 \ If H3[1] = 6 Goto L_1570
Mat Read #2,R1,104;H5;
Mat Read #2,R1,278;SLSM;
Mat Read #2,R1,512;OREF;
! if h5[7]=36 or h5[7]=37 goto L_1570 ! EVAP NOT READY 03/2013 - now READY
If H4[2] < SWH Goto L_1570
If H4[2] > EWH Goto L_1570
If H5[8] < SDIV Goto L_1570
If H5[8] > EDIV Goto L_1570
If Not(Multis) ! not 
	If H0[11]<SSLSM goto L_1570
	If H0[11]>ESLSM goto L_1570
Else ! got to check if any in range
	FSlsm=0
	For X=0 to 4
		If SLSM[X] 
			If SLSM[X]<SSLSM goto BPSLSM
			If SLSM[x]>ESLSM goto BPSLSM
			FSlsm=9
		Endif
	BPSLSM: ! bypass this guy
	Next X
	If FSlsm=0 ! none - check main
		If H0[11]<SSLSM goto L_1570 
		If H0[11]>ESLSM goto L_1570
	Endif ! if falls thru - main slsm made it
Endif ! if multis its also in sorting routine
! call programdump("/tmp/crlog3!","")
K2$ = " ",K2$
K2$ = H0[7] Using "&&&&&&";K2$[7] = OREF[1] Using "##########"
K2$[17,17] = "A"
Gosub SET_JRNL_STATUS
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;TSRT = 0
K2$[1,1] = "#";K2$[2,4] = H0[11] Using "###"
If MULTIS
  For X = 0 To 4 \ If SLSM[X] = 0 Goto L_1655
   X2=SLSM[X]
    If X2>SSLSM AND X2<ESLSM ! in range
		TSRT = 1
		K2$[2,4] = SLSM[X] Using "###" \ Gosub L_1660
    Endif
L_1655: Next X
  If TSRT = 0 Goto L_1660
  TSRT = 0 \ Goto L_1690
End If 
L_1660: K2$[5] = H0[7] Using "######";K2$[11] = OREF[1] Using "##########"
K2$[21,21] = "A"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
If TSRT = 1 If MULTIS Return 
L_1690: Goto L_1570
L_1700: Rem "=========================================== now do deleted sort
K1$ = " ",K1$;K1$ = S7 Using "##     "
K3$ = K1$
L_1730: Search #13,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
If K1$[1,2] <> K3$[1,2] Goto L_1900
Mat Read #13,R1;DL;
Read #13,R1,100;DL3;
If DL[8] < SWH Goto L_1730
If DL[8] > EWH Goto L_1730
If DL[9] < SDIV Goto L_1730
If DL[9] > EDIV Goto L_1730
If DL[6]<SSLSM GOTO L_1730
If DL[6]>ESLSM goto L_1730
K2$ = " ",K2$
K2$ = DL[3] Using "&&&&&&";K2$[7] = DL3 Using "##########"
K2$[17,17] = "D"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$
K2$[1,1] = "#";K2$[2,4] = DL[6] Using "###"
K2$[5] = DL[3] Using "######";K2$[11] = DL3 Using "##########"
K2$[21,21] = "D"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
Goto L_1730
L_1900: Rem "========================================= start print
! Print @0,22;'CE';"Printing...please wait"; \ Signal 3,0
! If J8 Print 'CS';
J2 = 0;J1 = 90
! If Err 0 Gosub ERR_ESCAPE
If SORT = 1 Let POS_ = 17
If SORT = 2 Let POS_ = 21
K1$ = "# " \ SP = 9999
If SORT = 1 Let K1$[1,2] = "#}"
I_CTR = 0
L_2000: Rem "===================================== main invoice loop here!
L_2005: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If SORT = 2 If K1$[1,1] <> "#" Goto L_9100
If K1$[1,1] = "''" Goto L_2005
If K1$[POS_,POS_] = "D" Goto L_5400
Mat Read #2,R1,0;H0
If SORT = 2 If MULTIS Gosub L_3500
If SP <> H0[11] And SP <> 9999 Gosub L_4800
if SP<>H0[11] and sort=2 and emailRep
	needOpenEmCh=1
else
	needOpenEmCh=0
endif
SP = H0[11] \ Gosub L_10000
Mat Read #2,R1,446;P0$
Mat Read #2,R1,78;H4
Mat Read #2,R1,104;H5
Mat Read #2,R1,278;SLSM
Mat Read #2,R1,318;SCOM
Mat Read #2,R1,348;SMER
Mat Read #2,R1,378;SCST
Mat Read #2,R1,512;OREF;
Mat Read #2,R1,408;H6
W0 = H4[2]
Mat Read #3,H0[2],8;S1$
Read #4,H0[3],164;JRNL;
Mat Read #4,H0[3],8;T2;
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
D3[0] = 0;D3[1] = 0
If T2[1] Let D3[1] = T2[3] / T2[1]
If D3[1] < -1 Or D3[1] > 1 Let D3[1] = 0
D3[0] = D3[1]
Gosub L_6600
If S7 = 11 If F8 If JRNL <> F8 Goto L_2000
If S7 = 10 Let JRNL = N1 \ Write #4,H0[3],164;JRNL;
T2[4] = T2[4] + T2[6]
X2 = H0[8] \ Gosub L_7700 \ D1$ = X$
TOTCOM = 0
For X = 0 To 4 \ TOTCOM = TOTCOM + SCOM[X] \ Next X
Gosub L_3000 \ Gosub L_3200
Gosub L_5800
If SORT <> 2 ! "credit journal
  If LNDETL
    Gosub L_5000
  Else 
    Gosub L_5700
  End If 
Else 
  If SMDTL[1]
    Gosub L_5000
  Else 
    Gosub L_5700
  End If 
End If 
Gosub L_2200
If SORT <> 2
  If LNDETL
    Gosub L_4500
    Gosub L_5200
  End If 
Else 
  If SMDTL[1]
    Gosub L_4500
    Gosub L_5200
  End If 
End If 
Gosub L_2500
Goto L_2000
L_2200: Rem "=========================== journal totals calc
TOT = 0 \ If SORT = 2 If MULTIS Gosub L_2400
For J = 0 To 5
  If TOT = 1 Goto L_2220
  If J = 1 Let T11[J] = T11[J] + (H5[13] - H5[14])
  If J = 2 Let T11[J] = T11[J] + TOTCOM
L_2220: If J = 2 Goto L_2240
  T9[J] = T9[J] + T2[J]
  If TOT = 0 Let T10[J] = T10[J] + T2[J]
L_2240: Next J
T9[2] = T9[2] + T2[7]
If TOT = 0
  TOTCOST = TOTCOST + H5[14]
  T10[8] = T10[8] + H5[13]
  T10[2] = T10[2] + T2[7]
  T10[6] = T10[6] + (H5[13] - H5[14])
  T10[7] = T10[7] + TOTCOM
  TOTMERCHCOST = TOTMERCHCOST + T2[17]
End If 
If T2[10] <= 0 Goto L_2310
If CSH0[2] = 0 Goto L_2310
If T2[10] > 3 Goto L_2310
REC = H5[0] \ Gosub L_6700
If CSH0[2] Let T6[CSH0[2] - 1] = T6[CSH0[2] - 1] + CSH1[0]
If CSH0[3] Let T6[CSH0[3] - 1] = T6[CSH0[3] - 1] + CSH1[1]
T6[4] = T6[4] + T2[0]
T5[CSH0[2] - 1] = T5[CSH0[2] - 1] + T2[0]
If T2[12] >= T2[0] Goto L_2300
T4[CSH0[2] - 1] = T4[CSH0[2] - 1] + (T2[0] - (CSH1[0] + CSH1[1]))
L_2300: REC = H5[0] \ Gosub L_6750
L_2310: Rem
INVNET = FNR((H5[13] - H5[14]) - (H5[13] * CFIN[8] / 100))
If TOT = 0 Let TOTNET = TOTNET + INVNET
If TOT = 0 Let TOTFCST = TOTFCST + T2[20]
Return 
L_2360: Rem ENT'D BY TOTALS
REC = H5[0] \ Gosub L_6700
For J = 0 To 5
  If J = 2 Let T16[J] = T16[J] + T2[7] \ Goto L_2380
  T16[J] = T16[J] + T2[J]
L_2380: Next J
T16[6] = T16[6] + H5[13]
T16[8] = T16[8] + (H5[13] - H5[14])
T16[7] = T16[7] + 1
REC = H5[0] \ Gosub L_6750
Return 
L_2400: Rem MULTI-REP TOTALS
TOT = 0 \ If SLMN = -1 Return 
T10[0] = T10[0] + SMER[SLMN];T10[1] = T10[1] + SMER[SLMN]
T11[1] = T11[1] + (SMER[SLMN] - SCST[SLMN])
T11[2] = T11[2] + SCOM[SLMN]
T10[6] = T10[6] + (SMER[SLMN] - SCST[SLMN]);T10[7] = T10[7] + SCOM[SLMN]
TOTCOST = TOTCOST + SCST[SLMN]
TOTMERCHCOST = TOTMERCHCOST + SCST[SLMN]
TOT = 1
Return 
L_2500: Rem "=========================================== add to wh totals
If SORT <> 2 Or Not(MULTIS) Goto L_2530
Z1$ = " ",Z1$;Z1$ = "''",K1$[5,16]
Search #9,2,1;Z1$,J,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2590
Search #9,4,1;Z1$,J,E \ If E Gosub ERR_SEARCH
L_2530: For J = 0 To 5
  If J = 1 Let COMM[0,J] = COMM[0,J] + (H5[13] - H5[14])
  If J = 1 Let COMM[W0,J] = COMM[W0,J] + (H5[13] - H5[14])
  If J = 2 Let COMM[0,J] = COMM[0,J] + TOTCOM
  If J = 2 Let COMM[W0,J] = COMM[W0,J] + TOTCOM
  If J = 2 Let T8[0,J] = T8[0,J] + T2[7]
  If J = 2 Let T8[W0,J] = T8[W0,J] + T2[7] \ Goto L_2570
  T8[0,J] = T8[0,J] + T2[J] \ T8[W0,J] = T8[W0,J] + T2[J]
L_2570: Next J
T8[0,6] = T8[0,6] + (H5[13] - H5[14]) \ T8[W0,6] = T8[W0,6] + (H5[13] - H5[14])
T8[W0,7] = T8[W0,7] + H5[13]
Gosub L_2360
Gosub L_2600
L_2590: Return 
L_2600: Rem WH/DIV/TYPE TOTALS
K35$ = " ",K35$;K35$[1,2] = JTL2 Using "##"
K35$[3,4] = W0 Using "##";K35$[5,6] = H5[8] Using "##";K35$[7,8] = H5[7] Using "##"
Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
If E = 0 Goto L_2700
E = 2;R35 = 0
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Search #35,4,1;K35$,R35,E \ If E Gosub ERR_SEARCH
For LUP = 0 To 13
  JTL1[LUP] = 0 \ If LUP <= 2 Let JTL[LUP] = 0
Next LUP
JTL[0] = W0;JTL[1] = H5[8];JTL[2] = H5[7]
Mat Write #35,R35,0;JTL
Mat Write #35,R35,6;JTL1
Mat Write #35,R35,126;JTL2
L_2700: Rem TOTAL ROUTINE
NUMLINES = 0;TPS = 0
J2$ = " ",J2$;J2$[1,6] = H0[7] Using "######"
L_2715: Search #5,3,1;J2$,R5,E \ If E If E <> 2 Gosub ERR_SEARCH
If E = 2 Goto L_2740
X3 = J2$[1,6] \ If X3 <> H0[7] Goto L_2740
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,8;L3; \ Mat Read #5,R5,16;L4; \ If L3 Let AMOUNT = L7[4] \ Goto L_2728
If Not(L3) Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2;
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[4] \ Gosub L_20000
L_2728: TPS = TPS + (AMOUNT * -1)
NUMLINES = NUMLINES + 1
Goto L_2715
L_2740: Mat Read #35,R35,6;JTL1
For J = 0 To 5
  If J = 2 Let JTL1[J] = JTL1[J] + T2[7] \ Goto L_2760
  JTL1[J] = JTL1[J] + T2[J]
L_2760: Next J
JTL1[6] = JTL1[6] + T2[17];JTL1[7] = JTL1[7] + T2[15]
JTL1[8] = JTL1[8] + T2[16];JTL1[9] = JTL1[9] + (H5[13] - H5[14])
JTL1[13] = JTL1[13] + 1;JTL1[11] = JTL1[11] + NUMLINES
JTL1[12] = JTL1[12] + TPS
Mat Write #35,R35,6;JTL1;
BWH[W0] = 1;BDV[H5[8]] = 1;BTYP[H5[7]] = 1
If W0 > HWH Let HWH = W0
If H5[8] > HDV Let HDV = H5[8]
If H5[7] > HOTP Let HOTP = H5[7]
Return 
L_3000: Rem "======================================== read customer name
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E \ If E > 2 Gosub ERR_SEARCH
If E If DELETED_CM = 1 ! deleted c/m, okay if cust# has been deleted
  C1$ = " ",C1$ \ C1$ = "DELETED CUSTOMER"
  Return 
End If 
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,544;CFIN;
Return 
L_3200: Rem "======================================== read bill to
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E \ If E > 1 Gosub ERR_SEARCH
If E If H0[1] = H0[4] Gosub ERR_SEARCH
If E If H0[1] <> H0[4] Let H0[1] = H0[4] \ Write #2,R1,4;H0[1] \ Goto L_3200
Mat Read #6,R6,30;C2$;
Return 
L_3500: Rem MULTI SLSM RTN
If SORT <> 2 If Not(MULTIS) Return 
SLMN = -1;X2 = K1$[2,4]
Mat Read #2,R1,278;SLSM
For X = 0 To 4 \ If SLSM[X] = 0 Goto L_3540
  If X2 = SLSM[X] Let SLMN = X
L_3540: Next X
If SLMN = -1 Return 
If SLSM[SLMN] <> 0 Let H0[11] = SLSM[SLMN]
Return 
L_3600: Rem PRINT SLSM SUMMARY
If SLMN = -1 Return 1

!******
prtCh=0
SlsSumLoop_1: !* do it twice if we are also emailing report
Print #prtch; Using "-----#.##"; Tab 46;SMER[SLMN];
Print #prtch; Using "------#.## "; Tab 83;SMER[SLMN];
If SORT = 2 If Not(PRTSCOST) Goto L_3650
if cost_lev[1]<>0
	Print #prtch; Using "------#.## ";SCST[SLMN];SMER[SLMN] - SCST[SLMN];
	If SMER[SLMN] Print #prtch; Using " ---.-"; Tab 115;((SMER[SLMN] - SCST[SLMN]) / SMER[SLMN]) * 100;
endif
L_3650: Print #prtch; Using "-----#.##"; Tab 122;SCOM[SLMN];
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsSumLoop_1:
!******
Return 
L_3700: Rem MULTI-REP INV TOTALS
If SLMN = -1 Return 1
If SORT <> 2 Return 1
Print #0; Using " CREDIT ###### TOTALS: "; Tab 10;H0[7];
if emCh<>-1 PRINT #emCh; USING "CREDIT ###### TOTALS: "; TAB 10;H0[7];
X$ = "-----#.##" \ If J1 + 6 >= J9 Let J1 = 99 \ Gosub L_5800
!******
prtCh=0
InvMultiRepLoop_1: !* do it twice if we are also emailing report
If SMER[SLMN] Print #prtch; Using X$; Tab 105;"SUBTOTAL"; Tab 122;SMER[SLMN] \ J1 = J1 + 1
Print #prtch; Using X$; Tab 105;"C/M TOTAL"; Tab 122;SMER[SLMN] \ J1 = J1 + 1
If SORT = 2 If Not(PRTSCOST) Goto L_3790
if cost_lev[1]<>0
	Print #prtch; Using X$; Tab 105;"GROSS PROFIT"; Tab 122;SMER[SLMN] - SCST[SLMN] \ J1 = J1 + 1
	If SMER[SLMN] Print #prtch; Using X$; Tab 105;"GROSS PROFIT %"; Tab 122;(SMER[SLMN] - SCST[SLMN]) / SMER[SLMN] * 100 \ J1 = J1 + 1
endif
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvMultiRepLoop_1:
!******
L_3790: Gosub L_5800
!******
prtCh=0
InvMultiRepLoop_2: !* do it twice if we are also emailing report
Print #prtch; Using "COMMISSION RATE: ###.##% "; Tab 86;SLSM[SLMN + 5];
Print #prtch; Using "AMOUNT: -----#.##"; Tab 114;0 - SCOM[SLMN];
Print #prtch;""
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvMultiRepLoop_2:
!******
J1 = J1 + 1 \ Gosub L_5800
Return 
L_4000: Rem "=========================================== journal totals
If SORT = 2 Goto L_4085
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 10;"JOURNAL TOTALS";
If Not(LNDETL) Goto L_4037
Print #0; Tab 45;"INV COUNT"; Tab 56;"MDSE AMT"; Tab 69;"DISC";
Print #0; Tab 75;"MISC/HAND"; Tab 86;"TAX AMT"; Tab 95;"FREIGHT";
if cost_lev[1]<>0
	Print #0; Tab 107;"GP"; 
endif
print #0; Tab 122;"INV TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
L_4037: If LNDETL
  Print #0; Using "#####"; Tab 44;I_CTR;
  Print #0; Using "----###.##"; Tab 52;T9[1];
  Print #0; Using "-----#.##"; Tab 70;T9[4];
  Print #0; Using "-----#.##"; Tab 84;T9[2];
  Print #0; Using "-----#.##"; Tab 93;T9[5];
  if cost_lev[1]<>0
	Print #0; Using "-----#.##"; Tab 102;T11[1];
  endif
  Print #0; Using "-----###.##"; Tab 120;T9[0];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Else 
  Print #0; Using "#####"; Tab 37;I_CTR;
  Print #0; Using "----###.##"; Tab 45;T9[1];
  Print #0; Using "-----#.##"; Tab 55;T9[2];
  Print #0; Using "-----#.##"; Tab 64;T9[5];
  Print #0; Using "----##.##"; Tab 73;T9[4];
  Print #0; Using "-----###.##"; Tab 82;T9[0];
  if cost_lev[1]<>0
	Print #0; Using "-----###.##"; Tab 93;TOTCOST;
	Print #0; Using "-----#.##"; Tab 106;T11[1];
	If T11[1] + TOTCOST Print #0; Using "----.-"; Tab 116;100 * T11[1] / (T11[1] + TOTCOST);
  endif
  Print #0; Using "-----#.##"; Tab 122;T10[7];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
End If 
X3 = 0
For X1 = 1 To 9
  X3 = X3 + DDCOUNT[X1]
Next X1
If X3
  Print #0; Tab (45);"DOC. DELIVERY COUNTS: ";
  If DDCOUNT[0] Print #0;"   PRINTED:";DDCOUNT[0];
  If DDCOUNT[1] Print #0;"   FAXED:";DDCOUNT[1];
  If DDCOUNT[2] Print #0;"   EMAIL:";DDCOUNT[2];
  If DDCOUNT[9] Print #0;"   NOT PRINT:";DDCOUNT[9];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
End If 
L_4085: If PASS = 0 Gosub L_6200
If P1 = 1 Gosub L_7000 \ F9 = 0 \ J1 = 90
If SORT = 2 Gosub SLSTMP
J1 = 75;HDG = 9 \ Gosub L_5800
For J = 0 To 20 \ T9[J] = 0 \ Next J
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If SORT = 2 If Not(PRTSCOST) Goto L_4115
if cost_lev[1]<>0
	Print #0; Tab 38;"GP";
endif
L_4115: If SORT = 2 Print #0; Tab 48;"COMMISSION";
Print #0; Tab 62;"MDSE AMT"; Tab 77;"DISC"; Tab 84;"MISC/HAND";
Print #0; Tab 96;"TAX AMT"; Tab 109;"FREIGHT"; Tab 122;"C/M TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
For W0 = 1 To D9[5]
  For J = 0 To 7
    If T8[W0,J] Gosub L_4165
  Next J
Next W0
W0 = 0
TOTCOST = 0 \ TOTMERCHCOST = 0
L_4165: Rem "==================================== grand tot's  (mtd & ytd)
Print #0;" " \ J1 = J1 + 1 \ Gosub L_5800
If W0 Print #0;D9$;":";W0;
If Not(W0) Print #0;"ALL ";D9$;"S:";
Print #0; Tab 15;"JOURNAL TOTALS";
If SORT = 2 If Not(PRTSCOST) Goto L_4195
if cost_lev[1]<>0
	Print #0; Using "-------#.##"; Tab 29;COMM[W0,1];
endif
L_4195: Rem
Print #0; Using "-----###.##"; Tab 47;COMM[W0,2];
Print #0; Using "---------#.##"; Tab 58;T8[W0,1];
Print #0; Using "-------#.##"; Tab 71;T8[W0,3];
Print #0; Using "-------#.##"; Tab 82;T8[W0,4];
Print #0; Using "-------#.##"; Tab 94;T8[W0,2];
Print #0; Using "-------#.##"; Tab 106;T8[W0,5];
Print #0; Using "---------#.##"; Tab 118;T8[W0,0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Mat Read #8,W0,42;T7;
If S7 = S2 Goto L_4270
For X1 = 0 To 6
  T7[X1] = T7[X1] - T8[W0,X1]
  T7[X1 + 7] = T7[X1 + 7] - T8[W0,X1]
Next X1
L_4270: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 15;"MTD TOTALS";
If SORT = 2 If Not(PRTSCOST) Goto L_4290
if cost_lev[1]<>0
	Print #0; Using "----------#.##"; Tab 26;T7[6];
endif
L_4290: Print #0; Using "----------#.##"; Tab 57;T7[1];
Print #0; Using "-------#.##"; Tab 71;T7[3];
Print #0; Using "-------#.##"; Tab 82;T7[4];
Print #0; Using "-------#.##"; Tab 94;T7[2];
Print #0; Using "-------#.##"; Tab 106;T7[5];
Print #0; Using "----------#.##"; Tab 117;T7[0];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Print #0; Tab 15;"YTD TOTALS";
If SORT = 2 If Not(PRTSCOST) Goto L_4340
if cost_lev[1]<>0
	Print #0; Using "----------#.##"; Tab 26;T7[13];
endif
L_4340: Print #0; Using "----------#.##"; Tab 57;T7[8];
Print #0; Using "-------#.##"; Tab 71;T7[10];
Print #0; Using "-------#.##"; Tab 82;T7[11];
Print #0; Using "-------#.##"; Tab 94;T7[9];
Print #0; Using "-------#.##"; Tab 106;T7[12];
Print #0; Using "----------#.##"; Tab 117;T7[7];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
J = 7 \ If W0 Return 
HDG = 0
If JSDETL Gosub L_11000
! If Err 0 Gosub ERR_TRAP
Return 
L_4400: Rem PRINT SERIAL NO'S
If L3 <> 0 Or L7[4] = 0 Return 
If L3[1] = 0 Return 
SNO = 0 \ If P1$[8,8] <> "Y" Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[7] Using "######";SNK$[7,9] = L3[2] Using "###"
L_4420: Search #14,3,1;SNK$,R14,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[7] Or LN <> L3[2] Goto L_4480
Mat Read #14,R14,0;SN1$;
If Not(SNO) 
	Print #0;"  SERIAL NUMBERS ENTERED"
	if emCh<>-1 PRINT #emCh;"  SERIAL NUMBERS ENTERED"
	J1 = J1 + 1 \ Gosub L_5800
Endif
SNO = SNO + 1
Print #0;SN1$[25,54];"  ";
if emCh<>-1 PRINT #emCh;SN1$[25,54];"  ";
If Not(Fra(SNO / 4)) 
	Print #0;""
	if emCh<>-1 PRINT #emCh;""
	J1 = J1 + 1 \ Gosub L_5800
endif
Goto L_4420
L_4480: If Not(SNO) 
	Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
	if emCh<>-1 PRINT #emCh;"  SERIAL NUMBERS ENTERED";
endif
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Return 
L_4500: Rem "=========================================== detail line loop
T9[6] = 0
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4515: Search #5,3,1;J2$,R5,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
If SORT = 2 If MULTIS If L4[1] <> SP Goto L_4515
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L6$; \ Mat Read #5,R5,140;L1$;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,260;S3; \ Mat Read #5,R5,256;OLS2;
Mat Read #5,R5,404;OLM; \ Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
READ #5,R5,564;ROL0;
PUNIT$ = "   ";CUNIT$ = "    ";SUNIT$ = "    ";P1$ = " ",P1$
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1]
OLM[3] = OLM[3] - S3[15]
If Not(L3)
  Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2;
  Mat Read #7,L4,0;P1$; \ Mat Read #7,L4,256;A;
  Mat Read #7,L4,156;PRODB;
End If 
Gosub L_30000
COSTCHG = 0 \ If Not(L3) Gosub L_10500
For X = 0 To 3 \ SUNIT[X] = 0 \ Next X \ CUNIT = 0;PUNIT = 0
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let OLS2[0] = 3
If OLS2[0] = 3 Or L3[2] >= 900 Goto L_4700
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_4700
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000
  SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
PUNIT = AMOUNT
! 12137 - show net cost - not unit cost
IF S3[11]=-3 AND L7[2] LET CHBASE=(S3[1]/L7[2]) ELSE  LET CHBASE=S3[1]
LET NETCOST[0]=L5[1]+CHBASE
IF ROL0
  IF ROL0<0
    LET NETCOST[0]=NETCOST[0]+ABS(ROL0)
  ELSE
    LET NETCOST[0]=NETCOST[0]+(NETCOST[0]*(ROL0/100))
  ENDIF
ENDIF
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = NetCost[0] ! L5[1]
If CPSAME Let CNVTU[1] = UN[1]
Gosub L_20000
CUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000 \ L6[1] = AMOUNT
If UN[0] > 0 Mat Read #12,UN[0],10;SUNIT$;
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] > 0 Mat Read #12,UN[1],10;PUNIT$;
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UN[2] > 0 Mat Read #12,UN[2],10;CUNIT$;
If UN[2] = -1 Let CUNIT$ = "CWT "
If UN[2] = -2 Let CUNIT$ = "LOT "
If UN[2] = -3 Let CUNIT$ = "LB  "
If CPSAME Let CUNIT$ = PUNIT$
L_4700: Gosub L_5800
If L3[2] >= 900 Let L5[3] = 0 - L5[3]
If SORT <> 2
  If LNDETL
    Gosub L_5500
  Else 
    Gosub L_6400
  End If 
Else 
  If SMDTL[1]
    Gosub L_5500
  Else 
    Gosub L_6400
  End If 
End If 
T9[9] = FNR(L5[3] - S3[12])
T9[6] = T9[6] + T9[9]
T9[10] = T9[10] + T9[9]
Gosub L_4400
Goto L_4515
L_4800: Rem "======================================= salesrep sub-totals
If SORT <> 2 Return 
if emCh<>-1 PRINT #emCh;""
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If SP <> 9999
  Print #0; Using "SALESPERSON ### "; Tab 10;SP;S2$[1,30];" TOTALS: ";
  if emCh<>-1 PRINT #emCh; USING "SALESPERSON ### "; TAB 10;SP;S2$[1,30];" TOTALS: ";
End If 
If Not(SMDTL[0]) Goto L_4857
if emCh<>-1 PRINT #emCh;""
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
!******
prtCh=0
SlsRepLoop_1: !* do it twice if we are also emailing report
If SORT = 2 If Not(PRTSCOST) Goto L_4842
if cost_lev[1]<>0
	Print #prtCH; Tab 25;"GP"; Tab 32;"PCT"; Tab 43;"CP";
endif
L_4842: Print #prtCH; Tab 55;"COMMISSION";
Print #prtCH; Tab 68;"MDSE AMT"; Tab 81;"DISC"; Tab 87;"MISC/HAND";
Print #prtCH; Tab 98;"TAX AMT"; Tab 106;"FREIGHT"; Tab 115;"F COST";
Print #prtCH; Tab 122;"C/M TOTAL"
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_1:
!******
J1 = J1 + 1 \ Gosub L_5800
L_4857: If SMDTL[0] ! "was DETAIL
  !******
	prtCh=0
	SlsRepLoop_2: !* do it twice if we are also emailing report
  If SORT = 2 If Not(PRTSCOST) Goto L_4862
  if cost_lev[1]<>0
    Print #prtCH; Using "-----###.##"; Tab 17;T10[6];
      If t10[1] 
        if (T10[6] / T10[1]) * 100 < 0
		if (T10[6] / T10[1]) * 100 < -999.9
			Print #prtCH; Using "-------"; Tab 28;(T10[6] / T10[1]) * 100;
		else
			Print #prtCH; Using "----.--"; Tab 28;(t10[6] / t10[1]) * 100;
		endif
	else
		if (t10[6] / t10[1]) * 100 > 9999.9
			Print #prtCH; Using "#######"; Tab 28;(t10[6] / t10[1]) * 100;
		else
			Print #prtCH; Using "####.##"; Tab 28;(t10[6] / t10[1]) * 100;
		endif
	endif
      endif
	Print #prtCH; Using "-----###.##"; Tab 35;TOTNET;
  endif
L_4862: Print #prtCH; Using "-----###.##"; Tab 54;T10[7];
  Print #prtCH; Using "-----###.##"; Tab 65;T10[1];
  Print #prtCH; Using "-----#.##"; Tab 76;T10[3];
  Print #prtCH; Using "-----#.##"; Tab 87;T10[4];
  Print #prtCH; Using "-----#.##"; Tab 95;T10[2];
  Print #prtCH; Using "----#.##"; Tab 105;T10[5];
  Print #prtCH; Using "----#.##"; Tab 113;TOTFCST;
  Print #prtCH; Using "-----###.##"; Tab 120;T10[0];
  Print #prtCH;"" 
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_2:
	!******
  J1 = J1 + 1 \ Gosub L_5800
End If 
If Not(SMDTL[0]) ! "was DETAIL
  !******
	prtCh=0
	SlsRepLoop_3: !* do it twice if we are also emailing report
  Print #prtCH; Using "-----###.##"; Tab 44;T10[1];
  Print #prtCH; Using "------#.##"; Tab 55;T10[2];
  Print #prtCH; Using "-----#.##"; Tab 64;T10[5];
  Print #prtCH; Using "----##.##"; Tab 73;T10[4];
  Print #prtCH; Using "----###.##"; Tab 83;T10[0];
  If SORT = 2 If Not(PRTSCOST) Goto L_4894
  if cost_lev[1]<>0
	Print #prtCH; Using "-----###.##"; Tab 93;TOTCOST;
	Print #prtCH; Using "-----#.##"; Tab 106;T11[1];
  endif
L_4894: Print #prtCH; Using "-----#.##"; Tab 122;T10[7];
  Print #prtCH;""
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_3:
	!******
  J1 = J1 + 1 \ Gosub L_5800
  !******
	prtCh=0
	SlsRepLoop_4: !* do it twice if we are also emailing report
  Print #prtCH; Tab 30;"DISCOUNT";
  Print #prtCH; Using "------##.##"; Tab 44;T10[3];
  If SORT = 2 If PRTSCOST <> 0
  if cost_lev[1]<>0
		Print #prtCH; Tab 95;"=========";
  endif
  End If 
  Print #prtCH;""
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_4:
	!******
  J1 = J1 + 1 \ Gosub L_5800
  
	!******
	prtCh=0
	SlsRepLoop_5: !* do it twice if we are also emailing report
  Print #prtCH; Tab 45;"-----------";
  If SORT = 2 If PRTSCOST <> 0
	if cost_lev[1]<>0
		Print #prtCH; Tab 80;"Other Cost";
		Print #prtCH; Using "-----###.##"; Tab 93;(TOTCOST - TOTMERCHCOST);
	endif
  End If 
  Print #prtCH;""
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_5:
	!******
  J1 = J1 + 1 \ Gosub L_5800
  !******
	prtCh=0
	SlsRepLoop_6: !* do it twice if we are also emailing report
  Print #prtCH; Tab 30;"Net Sale";
  Print #prtCH; Using "------##.##"; Tab 44;(T10[1] - T10[3]);
  If SORT = 2 If PRTSCOST <> 0
	if cost_lev[1]<>0
		Print #prtCH; Tab 80;"Merch Cost";
		Print #prtCH; Using "-----###.##"; Tab 93;TOTMERCHCOST;
		Print #prtCH; Using "-----#.##"; Tab 106;(T10[1] - T10[3] - TOTMERCHCOST);
		If (T10[1] - T10[3]) Print #prtCH; Using "----.-"; Tab 116;(100 * (T10[1] - T10[3] - TOTMERCHCOST) / (T10[1] - T10[3]));
	endif
  End If 
  Print #prtCH;"" 
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_6:
	!******
  J1 = J1 + 1 \ Gosub L_5800
End If 
SLSMTDGP = SLSMTDGP - ((T10[1] - T10[3]) - TOTMERCHCOST)
SLSMTDSL = SLSMTDSL - (T10[1] - T10[3])
SLSYTDGP = SLSYTDGP - ((T10[1] - T10[3]) - TOTMERCHCOST)
SLSYTDSL = SLSYTDSL - (T10[2] - T10[3])
If SP = 9999 Goto L_4965
Print #0; Tab 1;"MTD TOTALS ";
if emCh<>-1 PRINT #emCh; TAB 1;"MTD TOTALS ";

!******
prtCh=0
SlsRepLoop_7: !* do it twice if we are also emailing report
If SMDTL[0] ! "was DETAIL
  If SORT = 2 And PRTSCOST <> 0
	if cost_lev[1]<>0
		Print #prtCH; Using "-----###.##"; Tab 17;SLSMTDGP;
	endif
  End If 
  Print #prtCH; Using "-----###.##"; Tab 54;S5[2] - T10[7]; Tab 65;SLSMTDSL;
End If 
If Not(SMDTL[0]) ! "was DETAIL
  Print #prtCH; Using "-----###.##"; Tab 45;SLSMTDSL;
  If SORT = 2 If PRTSCOST <> 0
	if cost_lev[1]<>0
		Print #prtCH; Using "-----###.##"; Tab 93;(SLSMTDSL - SLSMTDGP);
		Print #prtCH; Using "----###.##"; Tab 105;SLSMTDGP;
		If SLSMTDSL
			Print #prtCH; Using "----.-"; Tab 116;(100 * (SLSMTDGP / SLSMTDSL));
		End If 
	endif
  End If 
  Print #prtCH; Using "---###.##"; Tab 121;S5[2] - T10[7];
End If 
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsRepLoop_7:
!******
Gosub UPDSLSTMP
L_4965: For J = 0 To 8 \ T10[J] = 0 \ Next J
TOTCOST = 0;T11[1] = 0;TOTNET = 0;TOTFCST = 0;TOTMERCHCOST = 0
Print #0;" "
if emCh<>-1 PRINT #emCh;" "
if sort=2 and emailRep and emCh<>-1
	close #emCh
	emCh=-1
endif
J1 = 100
Return 
L_5000: Rem "======================================= invoice header line
I_CTR = I_CTR + 1
!******
prtCh=0
InvHdrLineLoop_1: !* do it twice if we are also emailing report
Print #prtCH; Using "######";H0[7];
Print #prtCH; Using "########"; Tab 7;OREF[1];
Print #prtCH; Using "##"; Tab 16;H5[7];
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvHdrLineLoop_1:
!******
Call "DocDeliv.dl4","CS",H0[1],"INV ",X1,J$,J$,COMMENT1$,COMMENT2$,COMMENT3$,28,29,E$,IntCo,rstr$
If X1=1 
	Print #0;Tab(19);"F";
	if emCh<>-1 Print #emCh;Tab(18);"F";
Endif
If X1=2 
    Print #0;Tab(19);"E";
	if emCh<>-1 Print #emCh;Tab(18);"E";
Endif
If X1=9 
	Print #0;Tab(19);"NP";  
	if emCh<>-1 Print #emCh;Tab(18);"NP";
Endif
DDCOUNT[X1] = DDCOUNT[X1] + 1
!******
prtCh=0
InvHdrLineLoop_2: !* do it twice if we are also emailing report
Print #prtCh; Tab 21;D1$;
Print #prtCh; Using "######"; Tab 30;H0[4];
Print #prtCh; Tab 37;C1$[1,20]; Tab 58;P0$;
Print #prtCh; Tab 78;S1$[1,20];
Print #prtCh; Using "###"; Tab 99;H5[0];
Print #prtCh; Using "### "; Tab 103;H0[11];S2$[1,12];
Print #prtCh; Using "###.##%"; Tab 123;CFIN[8];
Print #prtCh;""
Print #prtCh;"" 
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvHdrLineLoop_2:
!******
J1 = J1 + 2 \ Gosub L_5800
If SORT <> 2
  If Not(LNDETL) Goto L_5140
Else 
  If Not(SMDTL[1]) Goto L_5140
End If 
!******
prtCh=0
InvHdrLineLoop_3: !* do it twice if we are also emailing report
Print #prtCh; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 19;"DESCRIPTION";
Print #prtCh; Tab 41;"QTY ORD"; Tab 49;"QTY SHIP"; Tab 59;"U/M";
Print #prtCh; Tab 66;"STK"; Tab 78;"PRICE";
If SORT = 2 If Not(PRTSCOST) Goto L_5120
if cost_lev[1]<>0
	Print #prtCh; Tab 99;"COST"; Tab 106;"C"; Tab 111;"EXT COST";
endif
L_5120: Print #prtCh; Tab 122;"EXT PRICE"
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvHdrLineLoop_3:
!******
J1 = J1 + 1 \ Gosub L_5800
Goto L_5190
L_5140: Rem 1 LINE SUMMARY
!******
prtCh=0
InvHdrLineLoop_4: !* do it twice if we are also emailing report
Print #prtCh; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 18;"DESCRIPTION";
Print #prtCh; Tab 51;"QTY SHP";
Print #prtCh; Tab 62;"EXT PRICE";
If SORT = 2 If Not(PRTSCOST) Goto L_5175
if cost_lev[1]<>0
	Print #prtCh; Tab 74;"EXT COST"; Tab 86;"G PROFIT";
	Print #prtCh; Tab 97;"PCT"; Tab 104;"C PROFIT";
endif
L_5175: Print #prtCh; Tab 115;"COM%"; Tab 124;"COMM $"
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvHdrLineLoop_4:
!******
J1 = J1 + 1 \ Gosub L_5800
L_5190: Return 
L_5200: Rem "=========================================== invoice totals
Print #0;""
if emCh<>-1 print #emCh;""
J1 = J1 + 1 \ Gosub L_5800
If SORT = 2 If MULTIS Gosub L_3700 \ Goto L_5290
If J1 + 5 >= J9 Let J1 = 99 \ Gosub L_5800
Print #0; Using "CREDIT  ###### TOTALS: ";"*** ";H0[7];
if emCh<>-1 PRINT #emCh; USING "CREDIT ###### TOTALS: "; TAB 5;"*** ";H0[7];
X$ = "-----#.##"
If H0[12] = 1 If T2[10] Gosub L_5300
Print #0;"" 
if emCh<>-1 print #emCh;""
J1 = J1 + 1 \ Gosub L_5800
If MULTIS Gosub L_6000
!******
prtCh=0
InvTotLoop_2: !* do it twice if we are also emailing report
If SORT = 2 If Not(PRTSCOST) Goto L_5214
if cost_lev[1]<>0
	Print #prtCh; Tab 20;"GP"; Tab 26;"PCT"; Tab 38;"CP";
endif
L_5214: If Not(MULTIS) Print #prtCh; Tab 43;"RATE"; Tab 49;"COMMISSION";
L_5215: Print #prtCh; Tab 62;"MDSE AMT"; Tab 75;"DISC"; Tab 81;"MISC/HAND";
Print #prtCh; Tab 91;"TAX AMT"; Tab 103;"FREIGHT"; Tab 111;"FRT COST";
Print #prtCh; Tab 122;"C/M TOTAL"
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvTotLoop_2:
!******
J1 = J1 + 1 \ Gosub L_5800
!******
prtCh=0
InvTotLoop_3: !* do it twice if we are also emailing report
If SORT = 2 If Not(PRTSCOST) Goto L_5245
if cost_lev[1]<>0
	Print #prtCH; Using X$; Tab 13;(H5[13] - H5[14]);
	T0 = 0 \ If H5[13] Let T0 = FNR((H5[13] - H5[14]) / H5[13] * 100)
	If t0 
		if t0 < 0
			if T0 < 999.9
				Print #prtCH; Using "-------"; Tab 22;T0;
			else
				Print #prtCH; Using "----.--"; Tab 22;t0;
			endif
		else
			if t0 > 9999.9
				Print #prtCH; Using "#######"; Tab 22;t0;
			else
				Print #prtCH; Using "####.##"; Tab 22;t0;
			endif
		endif
	endif
	Print #prtCH; Using X$; Tab 31;INVNET;
endif
L_5245: If MULTIS Goto L_5260
Print #prtCH; Using "###.##"; Tab 41;SLSM[5];
Print #prtCH; Using X$; Tab 50;0 - SCOM[0];
L_5260: Print #prtCH; Using X$; Tab 61;T2[1];
Print #prtCH; Using X$; Tab 70;T2[3];
Print #prtCH; Using X$; Tab 81;T2[4];
Print #prtCH; Using X$[2]; Tab 90;T2[7];
Print #prtCH; Using X$[2]; Tab 102;T2[5];
Print #prtCH; Using X$[2]; Tab 110;T2[20];
Print #prtCH; Using "------#.##"; Tab 120;T2[0]
Print #prtCH;""\ Print #prtCH;"" \ Print #prtCH;LINES$
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvTotLoop_3:
J1 = J1 + 4 \ Gosub L_5800
L_5290: Return 
L_5300: Rem "================================================= cash
!******
prtCh=0
CashLoop_1: !* do it twice if we are also emailing report
Print #prtCH; Using "PAID:-------#.##";T2[12]; Tab 53;
If CSH0[2] = 0 Print #prtCH;"     PAID BY: NO PAY";
If CSH0[2] = 1 Print #prtCH;"     PAID BY: CASH";
If CSH0[2] = 2 Print #prtCH;"     PAID BY: CHECK #";CSH0$[37,56];
If CSH0[2] = 3 
	Let Z1 = CCTYP1;D$="CRDT CARD"
	if z1>0 and z1<11 let D$ = CCTYPE$[Z1 * 10 - 9,Z1 * 10]
Endif
If CSH0[2] = 3 Print #prtCH;"     PAID BY: ";D$;
If CSH0[2] = 4 Print #prtCH;"     PAID BY: ";CSH0$[1,18];
Print #prtCH; Using "-------#.##"; Tab 88;CSH1[0]
If CSH0[3] Print #prtCH;""; Tab 53;
If CSH0[3] = 1 Print #prtCH;"     PAID BY: CASH";
If CSH0[3] = 2 Print #prtCH;"     PAID BY: CHECK #";CSH0$[57,76];
If CSH0[3] = 3 
	Let Z1 = CCTYP2;D$="CRDT CARD"
	if z1>0 and z1<11 let D$ = CCTYPE$[Z1 * 10 - 9,Z1 * 10]
Endif
If CSH0[3] = 3 Print #prtCH;"     PAID BY: ";D$;
If CSH0[3] = 4 Print #prtCH;"     PAID BY: ";CSH0$[19,39];
If CSH0[3] Print #prtCH; Using "-------#.##"; Tab 88;CSH1[1]
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto CashLoop_1:
!******
Return 
L_5400: Rem ===================================== print deleted items
Mat Read #13,R1;DL
Read #13,R1,58;DL1
Mat Read #13,R1,60;DL$
Mat Read #13,R1,80;DL1$
Read #13,R1,100;DL3;
H0[11] = DL[6]
H0[4] = DL[1]
DELETED_CM = 1
Gosub L_3000
DELETED_CM = 0
If SP <> H0[11] If SP <> 9999 Gosub L_4800
if SP<>H0[11] and sort=2 and emailRep
	needOpenEmCh=1
else
	needOpenEmCh=0
endif
SP = H0[11] \ Gosub L_10000
If S7 = 11 If F8 If DL[12] <> F8 Goto L_5495
If S7 = 10 Let DL[12] = N1 \ Write #13,R1,48;DL[12];
X2 = DL[4] \ Gosub L_7700 \ D1$ = X$
Gosub L_5800
If SORT <> 2
  If LNDETL ! "wants detail
    Gosub DELTD_DTL
  Else ! "wants Summ
    Gosub DELTD_SUMM
  End If 
Else ! "slsm version
  If SMDTL[1] ! "wants detail
    Gosub DELTD_DTL
  Else ! "wants Summ
    Gosub DELTD_SUMM
  End If 
End If 
Gosub L_5800
L_5495: Goto L_2000
DELTD_DTL: Rem "deleted detail

!******
prtCh=0
InvDelLineLoop_1: !* do it twice if we are also emailing report
Print #prtCH; Using "######";DL[3];
Print #prtCH; Using "########"; Tab 7;DL3;
Print #prtCH; Tab 21;D1$;
Print #prtCH; Using "######"; Tab 30;DL[1];
Print #prtCH; Tab 37;C1$[1,20];
Print #prtCH; Tab 60;"* * D E L E T E D * * ";
Print #prtCH; Using "###"; Tab 99;DL[11];
Print #prtCH; Using "### "; Tab 103;DL[6];S2$[1,30]
Print #prtCH; Using "####"; Tab 20;"DELETED BY: PORT ";DL1;
Print #prtCH; Tab 45;"USER: ";DL$; Tab 75;"REASON: ";DL1$;
Print #prtCH;"" \ Print #prtCH;"" \ Print #prtCH;LINES$
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvDelLineLoop_1:
!******
J1 = J1 + 3  \ GOSUB L_5800
Return 
DELTD_SUMM: Rem "Deleted Summary
!******
prtCh=0
InvDelLineLoop_2: !* do it twice if we are also emailing report
Print #prtCH; Using "######";DL[3];
Print #prtCH; Using "######"; Tab 8;DL[1];
Print #prtCH; Tab 15;C1$[1,20];
Print #prtCH; Using "########"; Tab 36;DL3;
Print #prtCH; Tab 50;"* * D E L E T E D * * "; Tab 80;" WHY: ";DL1$
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvDelLineLoop_2:
!******
J1 = J1 + 1  \ GOSUB L_5800
Return 
L_5500: Rem "============================================= invoice detail line
!******
prtCh=0
InvDetLineLoop_1: !* do it twice if we are also emailing report
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #prtCH; Tab 2;J2$[10,10]; \ Goto L_5520
Print #prtCH; Using "###"; Tab 1;L3[2];
L_5520: Print #prtCH; Tab 5;L1$[1,12]; Tab 19;L6$[1,20];
If OLS2[0] = 3 Print #prtCH;L6$[21,30];
If OLS2[0] = 3 Goto L_5600
Print #prtCH; Using "--------.## "; Tab 39;SUNIT[1];SUNIT[3];
Print #prtCH; Tab 61;SUNIT$;
If L3[1] = 1 Print #prtCH; Tab 66;"YES";
If L3[1] = 0 Print #prtCH; Tab 67;"NO";
Print #prtCH; Using PMASK$; Tab 74;PUNIT;"/";PUNIT$;
If SORT = 2 If Not(PRTSCOST) Goto L_5590
if cost_lev[1]<>0
	Print #prtCH; Using PMASK$; Tab 91;CUNIT;"/";CUNIT$;
	If COSTCHG Print #prtCH; Tab 106;"*";
	Print #prtCH; Using "-------#.##"; Tab 108;S3[12];
endif
L_5590: Print #prtCH; Using "-------#.##"; Tab 120;L5[3];
L_5600: Print #prtCH;""
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvDetLineLoop_1:
!******
J1 = J1 + 1 \ Gosub L_5800
!******
prtCh=0
InvDetLineLoop_2: !* do it twice if we are also emailing report
Print #prtCH; Tab 5;L1$[14,16]; Tab 19;L6$[31,50];
If OLS2[0] = 3 Print #prtCH;L6$[51,60]; \ Goto L_5690
If P60$[42,42] = "Y"
  Print #prtCH;"" \ J1 = J1 + 1
  Print #prtCH; Using "TAX CODE:### ";L6[5]; \ Print #0; Using "------.##";" TAX AMT: ";LTAX1;
  Print #prtCH; Using " (###.##%)";LTAX2;
End If 
If SORT = 2 If Not(PRTSCOST) Goto L_5652
if cost_lev[1]<>0
	Print #prtCH; Using "G PROFIT -----#.##  "; Tab 50;L5[3] - S3[12];
	T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
	Print #prtCH; Using "(---#.##%)";T0;
	LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
	Print #prtCH; Using "C PROFIT -----#.##"; Tab 81;LDCOST;
endif
L_5652: Print #prtCH; Using "###.##"; Tab 100;"COM% ";OLM[5];
Print #prtCH; Using "-------#.##"; Tab 112;"COMM$ ";0 - OLM[6];
Print #prtCH;"" 
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvDetLineLoop_2:
!******
J1 = J1 + 1 \ Gosub L_5800
!******
prtCh=0
InvDetLineLoop_3: !* do it twice if we are also emailing report
If S3[0] Print #prtCH; Using "CUTTING CHARGE ####.#####"; Tab 50;S3[0];
If S3[1] Print #prtCH; Using "CUTTING COST ####.#####"; Tab 80;S3[1];
L_5690: Print #prtCH;"" 
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvDetLineLoop_3:
!******
J1 = J1 + 1 \ Gosub L_5800
Return 
L_5700: Rem PRINT SUMMARY LINE
I_CTR = I_CTR + 1
!******
prtCh=0
InvSumLoop_1: !* do it twice if we are also emailing report
Print #prtCH; Using " ######";H0[7];
Print #prtCH; Using "######"; Tab 8;H0[4]; Tab 15;C1$[1,20];
Print #prtCH; Using "########"; Tab 36;OREF[1];
If SORT = 2 If MULTIS Gosub L_3600 \ Goto L_5765
Print #prtCH; Using "-----#.##"; Tab 46;T2[1];
Print #prtCH; Using "-----#.##"; Tab 56;T2[7];T2[5];T2[4];
Print #prtCH; Using "------#.## "; Tab 83;T2[0];
If SORT = 2 If Not(PRTSCOST) Goto L_5760
if cost_lev[1]
	Print #prtCH; Using "------#.## "; Tab 94;H5[14];H5[13] - H5[14];
	If H5[13] 
		if (H5[13] - H5[14]) / H5[13] * 100 < 0
			if (H5[13] - H5[14]) / H5[13] * 100 < -999.9
				Print #prtCH; Using "------"; Tab 115;(H5[13] - H5[14]) / H5[13] * 100;
			else
				Print #prtCH; Using "----.-"; Tab 115;(H5[13] - H5[14]) / H5[13] * 100;
			endif
		else
			if (H5[13] - H5[14]) / H5[13] * 100 > 9999.9
				Print #prtCH; Using "######"; Tab 115;(H5[13] - H5[14]) / H5[13] * 100;
			else
				Print #prtCH; Using "####.#"; Tab 115;(H5[13] - H5[14]) / H5[13] * 100;
			endif
		endif
	endif
endif
 L_5760: IF MULTIS OR TOTCOM<>SCOM[0] !MULT SALESMAN
   !! Print #prtCH; Using "-----#.##"; Tab 122;SCOM[0]
   PRINT #PRTCH; USING "------#.##"; TAB 121;TOTCOM; ! "commission
   IF TOTCOM<>SCOM[0] PRINT #PRTCH;"*"; !TO NOTE THE TOTAL IS MORE THAN 1 ITEM
   Print #prtCH;" "
 ELSE 
   Print #prtCH; Using "-----#.##"; Tab 122;SCOM[0]
 ENDIF 
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvSumLoop_1:
!******
L_5765: Rem PRINT #0;" "
J1 = J1 + 1
Return 
L_5800: Rem "=========================================== headings
If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
IF J2 and emCh<>-1 PRINT #emCh;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
if emCh<>-1 PRINT #emCh;"\15\";
!******
prtCh=0
HeadingLoop_1: !* do it twice if we are also emailing report
Print #prtCH; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #prtCH;" - 246A - ";Msc$(3);
Print #prtCH; Tab 45;"D A I L Y   C R E D I T    J O U R N A L";
If AUDONLY Print #prtCH;" - PREVIEW";
Print #prtCH; Tab 100;D9$;" FROM ";SWH;"TO ";EWH
Print #prtCH; Tab 5;N1$;
If P1 = 1 Print #prtCH; Tab 52;"C A S H   C U S T O M E R S";
If P1 = 2 Print #prtCH; Tab 50;"C R E D I T   C U S T O M E R S";
Print #prtch; Tab 100;"DIVISION FROM ";SDIV;"TO ";EDIV
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto HeadingLoop_1:
!******
If SLSFLAG
  !******
	prtCh=0
	HeadingLoop_2: !* do it twice if we are also emailing report
  Print #prtCH; Tab 52;"S A L E S P E R S O N   S U M M A R Y "
  Print #prtCH;""
  Print #prtCH;"SALESPERSON"; Tab 30;"JOURNAL"; Tab 65;"M-T-D";
  Print #prtCH; Tab 105;"Y-T-D"
  Print #prtCH; Tab 18;"SALES $";
  If PRTSCOST
	if cost_lev[1]<>0
		Print #prtCH; Tab 29;"COST $"; Tab 40;"G/P $"; Tab 46;"GP %";
	endif
  End If 
  Print #prtCH; Tab 55;"SALES $";
  If PRTSCOST
	if cost_lev[1]<>0
		Print #0; Tab 68;"COST $"; Tab 80;"G/P $"; Tab 86;"GP %";
	endif
  End If 
  Print #0; Tab 95;"SALES $";
  If PRTSCOST
	if cost_lev[1]<>0
		Print #prtCH; Tab 108;"COST $"; Tab 120;"G/P $"; Tab 126;"GP %";
	endif
  End If 
  Print #prtCH;"\15\"
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto HeadingLoop_2:
	!******
  J1 = 9
  Return 
End If 
If HDG Goto L_5885
If SORT <> 2
  If LNDETL If Not(F9) Goto L_5900
  If Not(LNDETL) If Not(F9) Goto L_5950
Else 
  If SMDTL[1] If Not(F9) Goto L_5900
  If Not(SMDTL[1]) If Not(F9) Goto L_5950
End If 
If F9 = 99 Goto L_6250
!******
prtCh=0
HeadingLoop_4: !* do it twice if we are also emailing report
Print #prtCH;""
Print #prtCH; Tab 1;"ENTD BY"; Tab 11;"CASH TND/CHNG"; Tab 26;"INV$/SHORT";
Print #prtCH; Tab 41;"CHKS TND/CHNG"; Tab 56;"INV$/SHORT";
Print #prtCH; Tab 74;"CRED CARD"; Tab 85;"INV$/SHORT"; Tab 114;"DRAWER TOTAL"
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto HeadingLoop_4:
L_5885: Print #0;""
if emCh<>-1 PRINT #emCh;""
Return 
L_5900: Rem "master heading
!******
prtCh=0
HeadingLoop_5: !* do it twice if we are also emailing report
Print #prtCH;""
Print #prtCH; Tab 1;"C/M #"; Tab 8;"INV #"; Tab 14;"ORD"; Tab 18;"DD";
Print #prtCH; Tab 25;"DATE"; Tab 30;"CUST #"; Tab 37;"CUSTOMER NAME";
Print #prtCH; Tab 58;"PO #"; Tab 69;"SHIPPED TO"; Tab 99;"TKN";
Print #prtCH; Tab 104;"SLSM"; Tab 125;"COMM"
Print #prtCH; Tab 13;"TYPE"; Tab 99;"BY"; Tab 126;"S/C"
Print #prtCH;""
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto HeadingLoop_5:
!******
Return 
L_5950: Rem SUMMARY HEADING
!******
prtCh=0
HeadingLoop_6: !* do it twice if we are also emailing report
Print #prtCH;""
Print #prtCH; Tab 3;"C/M"; Tab 8;"C U S T O M E R"; Tab 38;"INV"; Tab 50;"AMOUNT";
Print #prtCH; Tab 62;"TAX"; Tab 67;"FREIGHT"; Tab 78;"MISC"; Tab 87;" TOTAL";
If SORT = 2 If Not(PRTSCOST) Goto L_5968
if cost_lev[1]<>0
	Print #prtCH; Tab 99;"TOTAL"; Tab 108;"GROSS"; Tab 116;"PROFIT";
endif
L_5968: Print #prtCH; Tab 127;"COMM"
Print #prtCH; Tab 4;"#"; Tab 8;"CODE"; Tab 15;"NAME"; Tab 39;"#"; Tab 87;"AMOUNT";
If SORT = 2 If Not(PRTSCOST) Goto L_5980
if cost_lev[1]<>0
	Print #prtCH; Tab 100;"COST"; Tab 108;"PROFIT"; Tab 119;"%";
endif
L_5980: Print #prtCH; Tab 128;"AMT"
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto HeadingLoop_6:
!******
Return 
L_6000: Rem "=========================================== salesman commissions
If Not(SLSM[0] + SLSM[1] + SLSM[2] + SLSM[3] + SLSM[4]) Goto L_6110
if emCh<>-1 PRINT #emCh; TAB 64;" MERCH $    COST $"
Print #0; Tab 64;" MERCH $    COST $" \ J1 = J1 + 1
For X5 = 0 To 4
  If Not(SLSM[X5]) Goto L_6100
  K11$ = " ",K11$ \ K11$ = SLSM[X5] Using "###"
  Search #11,2,1;K11$,V1,E \ If E Gosub ERR_SEARCH
  Mat Read #11,V1,0;S$;
  !******
	prtCh=0
	SlsComLoop_1: !* do it twice if we are also emailing report
  Print #prtCH; Using "SLSM ### "; Tab 30;SLSM[X5];S$[1,25];
  Print #prtCH; Using "-----#.## "; Tab 64;SMER[X5];
  If SORT = 2 If Not(PRTSCOST) Goto L_6080
  if cost_lev[1]<>0
	Print #prtCH; Using "-----#.## "; Tab 74;SCST[X5];
  endif
L_6080: Print #prtCH; Using " COMMIS  ###.##%"; Tab 84;SLSM[X5 + 5];
  Print #prtCH; Using " COMMIS -----#.##";0 - SCOM[X5]
  if prtCh=0 and emCh<>-1 prtCh=emCh \ goto SlsComLoop_1:
	!******
  J1 = J1 + 1 \ Gosub L_5800
L_6100: Next X5
L_6110: Return 
L_6200: Rem ENT'D BY TOTALS
If Not(ENTD) Return 
J1 = 90 \ F9 = 99 \ Gosub L_5800
Mat GT = Zer
For J = 0 To 999
  REC = J \ Gosub L_6700
  If Not(T16[7]) Goto L_6235
  Gosub L_6500
  Gosub L_6300
L_6235: Next J
Gosub L_6520
F9 = 0
Return 
L_6250: Rem HEADING
Print #0;""
Print #0; Tab 5;"ENTERED BY TOTALS";
Print #0; Tab 24;"C/M COUNT"; Tab 39;"MDSE AMT"; Tab 53;"DISC";
Print #0; Tab 59;"MISC/HAND"; Tab 74;"TAX AMT"; Tab 87;"FREIGHT";
Print #0; Tab 99;"C/M TOTAL";
If COST_LEV[0] And COST_LEV[1] And COST_LEV[2] And COST_LEV[3]
  Print #0; Tab 115;"GP"; Tab 122;"GP %";
End If 
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_6300: Rem PRINT LINE
Print #0; Using "###"; Tab 5;J;
Print #0; Using "#########"; Tab 24;T16[7];
Print #0; Using "--------#.##"; Tab 35;T16[1];
Print #0; Using "-----#.##"; Tab 48;T16[3];
Print #0; Using "-----#.##"; Tab 59;T16[4];
Print #0; Using "-------#.##"; Tab 70;T16[2];
Print #0; Using "-------#.##"; Tab 83;T16[5];
Print #0; Using "--------#.##"; Tab 96;T16[0];
If COST_LEV[0] And COST_LEV[1] And COST_LEV[2] And COST_LEV[3]
  Print #0; Using "-----#.##"; Tab 110;T16[8];
  If T16[6] Print #0; Using "---#.##"; Tab 120;FNR(T16[8] / T16[6] * 100);
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6400: Rem ORDER LINE SUMMARY (1 LINER)
!******
prtCh=0
InvSumLineLoop_1: !* do it twice if we are also emailing report
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #prtCH; Tab 2;J2$[10,10]; \ Goto L_6420
Print #prtCH; Using "###"; Tab 1;L3[2];
L_6420: Print #prtCH; Tab 5;L1$[1,12]; Tab 18;L6$[1,30];
If OLS2[0] = 3 Goto L_6485
Print #prtCH; Using "--------.##"; Tab 49;SUNIT[3];
Print #prtCH; Using "-------#.##"; Tab 60;L5[3];
If SORT = 2 If Not(PRTSCOST) Goto L_6475
if cost_lev[1]<>0
	Print #prtCH; Using "-------#.##"; Tab 71;S3[12];
	If COSTCHG Print #prtCH; Tab 82;"*";
	Print #prtCH; Using "-------#.##"; Tab 83;FNR(L5[3] - S3[12]);
	T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
	Print #prtCH; Using "---#.##"; Tab 94;T0;
	LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
	Print #prtCH; Using "-------#.##"; Tab 101;LDCOST;
endif
L_6475: Print #prtCH; Using "###.##"; Tab 113;OLM[5];
Print #prtCH; Using "-------#.##"; Tab 119;OLM[6];
L_6485: Print #prtCH;""
if prtCh=0 and emCh<>-1 prtCh=emCh \ goto InvSumLineLoop_1:
!******
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6500: Rem calc grand totals
GT[1] = GT[1] + T16[7];GT[2] = GT[2] + T16[1];GT[3] = GT[3] + T16[3]
GT[4] = GT[4] + T16[4];GT[5] = GT[5] + T16[2];GT[6] = GT[6] + T16[5]
GT[7] = GT[7] + T16[0];GT[8] = GT[8] + T16[6];GT[9] = GT[9] + T16[8]
Return 
L_6520: Rem print grand totals
Print #0; Tab 24;"---------"; Tab 35;"------------"; Tab 49;"--------";
Print #0; Tab 59;"---------"; Tab 70;"-----------"; Tab 83;"-----------";
Print #0; Tab 96;"------------";
If COST_LEV[0] And COST_LEV[1] And COST_LEV[2] And COST_LEV[3]
  Print #0; Tab 110;"---------"; Tab 120;"-------";
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Print #0; Using "#########"; Tab 24;GT[1];
Print #0; Using "---------#.##"; Tab 34;GT[2];
Print #0; Using "------#.##"; Tab 47;GT[3]; Tab 58;GT[4];
Print #0; Using "--------#.##"; Tab 69;GT[5]; Tab 82;GT[6];
Print #0; Using "---------#.##"; Tab 95;GT[7];
If COST_LEV[0] And COST_LEV[1] And COST_LEV[2] And COST_LEV[3]
  Print #0; Using "------#.##"; Tab 109;GT[9];
  If GT[8] Print #0; Using "---#.##"; Tab 120;FNR(GT[9] / GT[8] * 100);
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6600: Rem "================================================ cash sale logic
For X2 = 0 To 4 \ CSH0[X2] = 0 \ Next X2
For X2 = 0 To 2 \ CSH1[X2] = 0 \ Next X2
K6$ = " ",K6$
K6$ = H0[7] Using "######"
Search #10,2,1;K6$,R6,E
If E Return 
Mat Read #10,R6,0;CSH0;
Mat Read #10,R6,20;CSH1;
Mat Read #10,R6,38;CSH0$;
CCTYP1 = Fra(CSH0[2]) * 10 !Using "#"
CSH0[2] = Int(CSH0[2])
CCTYP2 = Fra(CSH0[3]) * 10 !Using "#"
CSH0[3] = Int(CSH0[3])
Return 
L_6700: Rem READ TEMP WORKFILE
Mat Read #16,REC,0;T4;
Mat Read #16,REC,30;T5;
Mat Read #16,REC,60;T6;
Mat Read #16,REC,90;T16;
Return 
L_6750: Rem WRITE TEMP WORKFILE
Mat Write #16,REC,0;T4;
Mat Write #16,REC,30;T5;
Mat Write #16,REC,60;T6;
Mat Write #16,REC,90;T16;
Return 
L_6800: Rem BUILD TEMP WORK FILE
TFLE$ = " ",TFLE$
TFLE$ = "[1000:72]6/REGTEMP"
TFLE$ = TFLE$,Spc(6) Using "&&&&"
TFLE$ = TFLE$,"!"
Build #16,TFLE$
Close #16
TFLE$ = TFLE$[10]
tmp$="chmod go+rw files/"+LCase$(TFLE$[1,13])+"*"
System tmp$
Eopen #16,TFLE$
Return 
L_7000: Rem "================================================= cash totals
F9 = 9 \ J1 = 90
Gosub L_5800
For I = 1 To 999
  REC = I \ Gosub L_6700
  If T6[4] Gosub L_7030
Next I
Goto L_7200
L_7030: Rem PRINT IT
gosub L_5800 ! chk if header needed
Print #0; Using "###"; Tab 1;I;
Print #0; Using "-----,--#.##"; Tab 11;T6[0];T5[0]; Tab 41;T6[1];
Print #0; Using "-----,--#.##";T5[1]; Tab 71;T6[2];T5[2];
T6[3] = FNR(T6[0] + T6[1] + T6[2]) \ T5[3] = FNR(T5[0] + T5[1] + T5[2])
Print #0; Using "---,---,--#.##"; Tab 101;T6[3];T6[4]
Gosub L_7300
Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";T4[1]; Tab 71;T9[13];T4[2];
T4[3] = FNR(T4[0] + T4[1] + T4[2]) \ Gosub L_7300
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[3];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
For X = 0 To 4 \ TTOT[X + 10] = TTOT[X + 10] + T6[X]
  TTOT[X + 5] = TTOT[X + 5] + T5[X] \ TTOT[X] = TTOT[X] + T4[X]
  T6[X] = 0
Next X
REC = I \ Gosub L_6750
Return 
L_7200: Rem TOTALS
If Not(TTOT[8]) Goto L_7280
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 1;"TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;TTOT[10];TTOT[5]; Tab 41;TTOT[11];
Print #0; Using "-----,--#.##";TTOT[6]; Tab 71;TTOT[12];TTOT[7];
Print #0; Using "---,---,--#.##"; Tab 101;TTOT[13];TTOT[14];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Gosub L_7340
Print #0; Using "-----,--#.##"; Tab 11;T9[11];TTOT[0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";TTOT[1]; Tab 71;T9[13];TTOT[2];
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];TTOT[3];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Print #0;"PROOF TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;(TTOT[10] - T9[11]); Tab 41;(TTOT[11] - T9[12]);
Print #0; Using "-----,--#.##"; Tab 71;(TTOT[12] - T9[13]);
Print #0; Using "---,---,--#.##"; Tab 101;(TTOT[13] - T9[14]);TTOT[3];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
L_7280: Gosub L_7400
Return 
L_7300: Rem CHG PAID
T9[11] = FNR(T6[0] - (T5[0] - T4[0]))
T9[12] = FNR(T6[1] - (T5[1] - T4[1]))
T9[13] = FNR(T6[2] - (T5[2] - T4[2]))
T9[14] = FNR(T6[3] - (T5[3] - T4[3]))
Return 
L_7340: Rem TOT CHG PAID
T9[11] = FNR(TTOT[10] - (TTOT[5] - TTOT[0]))
T9[12] = FNR(TTOT[11] - (TTOT[6] - TTOT[1]))
T9[13] = FNR(TTOT[12] - (TTOT[7] - TTOT[2]))
T9[14] = FNR(TTOT[13] - (TTOT[8] - TTOT[3]))
Return 
L_7400: Rem DRAW AUD
For X = Len(F1$) To 1 Step -1
  If F1$[X,X] = "" Goto L_7420
  If F1$[X,X] <> " " Goto L_7430
L_7420: Next X
If X <= 1 Goto L_7480
L_7430: T9[1] = (TTOT[10] - T9[11]) \ T9[2] = (TTOT[11] - T9[12])
T9[3] = (TTOT[12] - T9[13]) \ T9[4] = (TTOT[13] - T9[14])
T9[0] = TTOT[3]
For X1 = 1 To D9[5]
  If X1 >= SWH And X1 <= EWH
    J2$ = (100 + X1) Using "###"
    Gosub L_7500
  End If 
Next X1
If F Goto L_7655
L_7480: ! If Err 0 Gosub ERR_ESCAPE
Return 
L_7500: Rem TRY FILE
F1$[X + 1] = J2$[2]
! If Err 0 Rem
Try Close #21  Else Rem
Try
	Open #21,F1$
Else
	goto L_7480
End try
Print #0;"  WHSE: ";J2$[2];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Gosub L_5800
For F = 1 To Chf(21) - 1
  Read #21,F;H4[0],H4[1],H4[2],X2,TT2[11],T2[12],J2$;
  Gosub L_7700
  Print #0; Using "### "; Tab 1;H4[1];
  If H4[2] > 1 If H4[2] < 4 Goto L_7580
  Print #0; Using "-----,--#.##"; Tab 11;T2[12];
L_7580: Print #0; Tab 28;X$;
  If H4[2] = 2 Print #0; Using "-----,--#.##"; Tab 41;T2[12];
  J3$ = " ",J3$ \ J3$ = "OTHER TYPE" \ If H4[2] = 1 Let J3$ = "CASH"
  If H4[2] = 2 Let J3$ = TT2[11] Using "CHECK #########"
  If H4[2] <> 3 Goto L_7602
  J3$ = "CREDIT CARD"
  If TT2[11] 
	if tt2[11]>0 and tt2[11]<11 Let J3$ = CCTYPE$[TT2[11] * 10 - 9,TT2[11] * 10]
  Endif
L_7602: Print #0; Tab 56;J3$;
  If H4[2] = 3 Print #0; Using "-----,--#.##"; Tab 71;T2[12];
  Print #0; Using "---,---,--#.##"; Tab 101;T2[12]; Tab 117;J2$[1,15];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
  Gosub L_5800
  If H4[2] = 1 Let T9[1] = T9[1] + T2[12]
  If H4[2] = 2 Let T9[2] = T9[2] + T2[12]
  If H4[2] = 3 Let T9[3] = T9[3] + T2[12]
  If H4[2] = 4 Let T9[0] = T9[0] + T2[12]
  T9[4] = T9[4] + T2[12]
Next F
Return 
L_7655: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0;"FINAL PROOF";
Print #0; Using "-----,--#.##"; Tab 11;T9[1]; Tab 41;T9[2];
Print #0; Using "-----,--#.##"; Tab 71;T9[3];
Print #0; Using "---,---,--#.##"; Tab 101;T9[4];T9[0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_7700: Rem "============================================= convert date
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8600: Rem RESET PRINTER FLAG REC. 101
Mat Read #1,120;P0;
K1 = 246 ! Spc(6)
P0[K1] = 0
Mat Write #1,120;P0;
Return 
L_8700: Rem "========= SET history bits
K35$ = " ",K35$;K35$[1,2] = " 2"
L_8720: Search #35,3,1;K35$,R35,E \ If E Goto L_8790
X2 = K35$[3,4];BWH[X2] = 1
If X2 > HWH Let HWH = X2
X2 = K35$[5,6];BDV[X2] = 1
If X2 > HDV Let HDV = X2
X2 = K35$[7,8];BTYP[X2] = 1
If X2 > HOTP Let HOTP = X2
Goto L_8720
L_8790: Return 
L_8800: Rem "================================================== clear jsdetl
K35$ = " ",K35$;K35$[1,2] = " 1"
L_8810: Search #35,3,1;K35$,R35,E \ If E If E <> 2 Gosub ERR_SEARCH
If E = 2 Goto L_8890
X3 = K35$[1,2] \ If X3 <> 1 Goto L_8890
Search #35,5,1;K35$,R35,E \ If E Gosub ERR_SEARCH
E = 3
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Goto L_8810
L_8890: Return 
L_8900: Rem "================================================= clear glcmtemp
If P9$[17,17] <> "Y" Return 
Try close #23 Else rem
Read #1,88,80;J$[1,17];
Open #23,J$
J$ = " ",J$
Search #23,5,1;J$,R1,E
If E Goto L_8980
E = 3 \ Search #23,1,0;J$,R1,E
If E Gosub ERR_SEARCH
L_8980: Return 
SetGlcmtemp: ! set it
If P9$[17,17] <> "Y" Return
Try close #23 Else rem
Read #1,88,80;J$[1,16];
Open #23,J$
J$ = " ",J$
E = 2 \ Search #23,1,0;J$,V1,E
If E  Gosub ERR_SEARCH
Search #23,4,1;J$,V1,E
If E Gosub ERR_SEARCH
! EFlg[1]=1 ! set the glarcntrl
Close #23
Return
L_9100: Rem END
Gosub L_4800
Gosub L_4000
! If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For J = 0 To 20 \ T9[J] = 0 \ Next J
If Not(PASS) Goto L_9250
PASS = 0;SORT = 2
Print #0;"\14\";
Goto L_1400
L_9250: Rem WRITE #1,38,SPC 6*16;S7,P1,W1;        !PASS AS COM
If S7 = 11 Let JRNL = F8
S9[0] = S7;S9[1] = P1;S9[2] = SWH;S9[3] = JRNL;S9[4] = GLDET;S9[5] = EWH
TFLE$[Len(TFLE$)] = "" \ Close #16 \ Kill TFLE$
! If Err 0 Rem
Try Close #30 Else Rem
! If Err 0 Gosub ERR_TRAP
Call FindF(SFLE$,E)
If E
  Kill SFLE$
End If 
Chain "246AGL.DL4"
Chain Write T8,S9,intco,rstr$,audonly
Goto OUTEND
! Stop 
L_10000: Rem SLSM
K11$ = " ",K11$
K11$ = H0[11] Using "###"
Search #11,2,1;K11$,R11,E \ If E > 1 Gosub ERR_SEARCH
If E
  S2$ = " ",S2$
  S2$[1,30] = "***** SALESMAN NOT FOUND *****"
  For X = 0 To 3 \ S5[X] = 0 \ Next X
  For X = 0 To 12
    For J = 0 To 2
      SLS1[X,J] = 0
    Next J
  Next X
  slsEmail$=""
Else 
  Mat Read #11,R11,0;S2$;
  Mat Read #11,R11,118;S5;
  mat  read #11,r11,922;slsEmail$;
  Try
	  Mat Read #18,R11,4;SLS1;
  Else
	Clear SLS1[]
  End try
End If 
if needOpenEmCh gosub OpenEmailChan:
If SORT <> 2 Goto L_10190
SLSMTDGP = 0;SLSYTDGP = 0
SLSMTDSL = 0;SLSYTDSL = 0
SLSMTDSL = SLS1[ARMONTH,1]
SLSMTDGP = SLS1[ARMONTH,1] - SLS1[ARMONTH,2]
SLSYTDSL = SLS1[0,1]
SLSYTDGP = SLS1[0,1] - SLS1[0,2]
L_10190: Return 
L_10500: Rem CHECK FOR COST VS LOAD/WHSE COST CHANGE
LDCOST = PRODB[8]
If P9$[32,32] <> "Y" Goto L_10600
K17$ = " ",K17$;K17$[1,12] = L1$[1,12];K17$[13,14] = H4[2] Using "##"
Search #17,2,1;K17$,R17,E \ If E Goto L_10600
Mat Read #17,R17,78;W3;
If W3[17] Let LDCOST = W3[17]
Goto L_10600
L_10600: Rem CHECK IF DIFF
COSTCHG = 0
If LDCOST <> L5[1] Let COSTCHG = 1
Return 
L_11000: Rem WHSE/DIV/TYPE TOTALS
For J = 0 To 13 \ JTTL[J] = 0 \ Next J
J1 = 90
SWLP = SWH;EWLP = EWH
For WH = SWLP To EWLP
  If BWH[WH] = 0 Goto L_11290
  SDLP = SDIV;EDLP = EDIV
  For DV = SDLP To EDLP
    If BDV[DV] = 0 Goto L_11260
    For OTYP = 1 To 40
      If BTYP[OTYP] = 0 Goto L_11230
      K35$ = " ",K35$;K35$[1,2] = 1 Using "##"
      K35$[3,4] = WH Using "##";K35$[5,6] = DV Using "##"
      K35$[7,8] = OTYP Using "##"
      Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
      If E = 1 Goto L_11100
      Mat Read #35,R35,6;JTL1;
      If S7 = S2 Goto L_11080
      For J = 0 To 9 \ JTTL[J] = 0 - JTL1[J] \ Next J
      JTTL[13] = JTL1[13];JTTL[11] = JTL1[11];JTTL[12] = JTL1[12]
L_11080: Gosub L_11300
      PRNT = 9
L_11100: Rem MTD
      K35$[1,2] = 2 Using "##"
      Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
      If E = 1 If PRNT Goto L_11130
      If E = 1 Goto L_11150
      Mat Read #35,R35,6;JTL1;
      For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
L_11130: Gosub L_11300
      PRNT = 9
L_11150: Rem YEAR TO DATE
      K35$[1,2] = 3 Using "##"
      Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
      If E = 1 If PRNT Goto L_11180
      If E = 1 Goto L_11200
      Mat Read #35,R35,6;JTL1;
      For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
L_11180: Gosub L_11300
      Print #0;"" \ J1 = J1 + 1
L_11200: Rem DONE WITH TYPE
      PRNT = 0
      For J = 0 To 13 \ JTTL[J] = 0 \ Next J
L_11230: Next OTYP
L_11260: Next DV
L_11290: Next WH
Return 
L_11300: Rem PRINT INFO
J1 = J1 + 1
Gosub L_11500
X2 = K35$[1,2]
If X2 = 1 Print #0; Tab 1;"JOURNAL";
If X2 = 2 Print #0; Tab 1;"M-T-D";
If X2 = 3 Print #0; Tab 1;"Y-T-D";
Print #0; Using "##"; Tab 10;WH; Tab 15;DV; Tab 20;OTYP;
Print #0; Using "------,--#.##"; Tab 57;JTL1[1];
If SORT = 2 If Not(PRTSCOST) Goto L_11345
if cost_lev[1]<>0
	Print #0; Using "------,--#.##"; Tab 71;JTL1[1] - JTL1[9]; Tab 85;JTL1[9];
endif
L_11345: Print #0; Using "#######"; Tab 99;JTL1[13];
Print #0; Using "#########"; Tab 107;JTL1[11];
Print #0; Using "-------,--#.##"; Tab 117;JTL1[8];
Print #0;""
Return 
L_11500: Rem heading
If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 246A - ";Msc$(3);
Print #0; Tab 45;"D A I L Y    C R E D I T    J O U R N A L";
Print #0; Tab 100;D9$;" FROM ";SWH;"TO ";EWH
Print #0; Tab 5;N1$;
Print #0; Tab 100;"DIVISION FROM ";SDIV;"TO ";EDIV
Print #0;""
Print #0; Tab 18;"ORDER"
Print #0; Tab 9;"WHSE"; Tab 14;"DIV."; Tab 19;"TYPE";
Print #0; Tab 65;"MERCH";
If SORT = 2 If Not(PRTSCOST) Goto L_11585
if cost_lev[1]<>0
	Print #0; Tab 80;"COST"; Tab 95;"G/P";
endif
L_11585: Print #0; Tab 100;"# INVS"; Tab 109;"# LINES"; Tab 125;"POUNDS"
Print #0;"" \ Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! ALWAYS UB5+ If Spc(4) > 1280 Goto L_20120
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If OLS2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
SET_JRNL_STATUS: Rem "=================================== 92 = JOURNAL
If H0 >= 90 Return 
Read #2,R1,416;H6[2]
Read #2,R1,64;LOCKPORT
H6[2] = H0
LOCKPORT = Spc(6)
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #2,2,1;A$,R1,E \ If E = 1 Goto L_17110
If E Gosub ERR_SEARCH
Search #2,5,1;A$,R1,E
If E Gosub ERR_SEARCH
H0 = 93
L_17110: A$[1,2] = H0 Using "##"
E = 0
Search #2,4,1;A$,R1,E
If E > 1 Gosub ERR_SEARCH
Write #2,R1,0;H0
Write #2,R1,416;H6[2]
Write #2,R1,64;LOCKPORT;
Return 
CLEAR_JRNL_STATUS: Rem "=================================== RESET STATUS
If H0 < 90 Return 
Read #2,R1,416;H6[2]
Read #2,R1,64;LOCKPORT
If H6[2] <= 0 Let H6[2] = S7
If H6[2] > 11 Or Fra(H6[2]) Let H6[2] = S7
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #2,2,1;A$,R1,E \ If E = 1 Goto L_17420
If E Gosub ERR_SEARCH
Search #2,5,1;A$,R1,E
If E Gosub ERR_SEARCH
L_17420: A$[1,2] = H6[2] Using "##"
E = 0
Search #2,4,1;A$,R1,E
If E > 1 Gosub ERR_SEARCH
H0 = H6[2];H6[2] = 0
LOCKPORT = 0
Write #2,R1,0;H0
Write #2,R1,416;H6[2]
Write #2,R1,64;LOCKPORT;
Return 
ALLJRNL_UNLOCK: Rem ------------------------------SET ORDER STATUS BACK
! Print @0,22;'CL';" Searching for orders locked in journal status...";
K1$ = " ",K1$ \ K1$ = "93"
RELEASE_NEXT_LOCK: Rem
Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Or K1$[1,2] <> "93" Return 
Mat Read #2,R1;H0
Read #2,R1,64;LOCKPORT
If H0 = 93
  ! Print @0,22;'CL';" UNLOCKING C/M #";H0[7];" FROM PORT ";LOCKPORT;
  Gosub CLEAR_JRNL_STATUS
End If 
Goto RELEASE_NEXT_LOCK
UPDSLSTMP: Rem update salesperson temp file (from subtotal routine)
SLKEY$ = " ",SLKEY$
SLKEY$[1,3] = SP Using "###"
Search #30,2,1;SLKEY$,R[30],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  SJ1 = SP
  For X = 0 To 8 \ SJ2[X] = 0 \ Next X
  E = 2 \ Search #30,1,0;SLKEY$,R[30],E \ If E Gosub ERR_SEARCH
  Mat Write #30,R[30],0;SJ1;
  Mat Write #30,R[30],4;SJ2;
  Search #30,4,1;SLKEY$,R[30],E \ If E Gosub ERR_SEARCH
End If 
Mat Read #30,R[30],4;SJ2
SJ2[0] = SJ2[0] - ((T10[1] - T10[3]) - TOTMERCHCOST)
SJ2[1] = SJ2[1] - (T10[1] - T10[3])
SJ2[2] = SJ2[2] + SLSMTDGP
SJ2[3] = SJ2[3] + SLSMTDSL
SJ2[4] = SJ2[4] + SLSYTDGP
SJ2[5] = SJ2[5] + SLSYTDSL
Mat Write #30,R[30],4;SJ2;
Return 
SLSTMP: Rem get salesman re-cap info
SLSFLAG = 99;J1 = 99
Gosub L_5800
SLKEY$ = " ",SLKEY$
SLSMRLOOP: Rem "through all slsm for recap
For X = 0 To 10 \ ST0[X] = 0 \ Next X
Search #11,3,1;SLKEY$,R[11],E \ If E = 2 Goto ENDSRCHSTMP
If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;SLSNAME$;
Try
	Mat Read #18,R[11],4;SLS1;
Else
	Clear Sls1[]
End try
Search #30,2,1;SLKEY$,R[30],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #30,R[30],4;SJ2;
Else 
  For X = 0 To 6 \ SJ2[X] = 0 \ Next X
  SJ2[0] = 0
  SJ2[1] = 0
  SJ2[2] = SLS1[ARMONTH,1] - SLS1[ARMONTH,2]
  SJ2[3] = SLS1[ARMONTH,1]
  SJ2[4] = SLS1[0,1] - SLS1[0,2]
  SJ2[5] = SLS1[0,1]
  If Not(SJ2[2]) And Not(SJ2[3]) And Not(SJ2[4]) And Not(SJ2[5]) Goto SLSMRLOOP
End If 
For X = 0 To 6 \ ST0[X] = SJ2[X] \ Next X
Gosub L_5800
Gosub PRNTSLSTMP
For X = 0 To 5 \ ST1[X] = ST1[X] + ST0[X] \ Next X
Goto SLSMRLOOP
ENDSRCHSTMP: Rem "Print Grand totals?
For X = 0 To 6 \ ST0[X] = ST1[X] \ Next X
SLKEY$ = " ",SLKEY$;SLSNAME$ = " ",SLSNAME$
SLSNAME$ = "GRAND TOTALS"
Print #0;"" \ J1 = J1 + 1
Gosub PRNTSLSTMP
Print #0;""
Print #0; Tab 20;"NOTE: THE MTD & YTD AMOUNTS ABOVE ";
Print #0;"INCLUDE THIS JOURNAL, WHICH IS NOT YET ACCEPTED."
J1 = 90;SLSFLAG = 0
Return 
PRNTSLSTMP: Rem print slsman tmp
Print #0;SLKEY$[1,3];" ";SLSNAME$[1,11];
Print #0; Using "-------.##"; Tab 15;ST0[1];
If PRTSCOST
	if cost_lev[1]<>0
		Print #0; Using "-------.##"; Tab 25;(ST0[1] - ST0[0]);
		Print #0; Using "-------.##"; Tab 35;ST0[0];
		If ST0[1]
			Print #0; Using "---.#"; Tab 45;FNR((ST0[0] / ST0[1]) * 100);
		End If 
	endif
End If 
Print #0; Using "---------.##"; Tab 50;ST0[3];
If PRTSCOST
	if cost_lev[1]<>0
		Print #0; Using "---------.##"; Tab 62;(ST0[3] - ST0[2]);
		Print #0; Using "--------.##"; Tab 74;ST0[2];
		If ST0[3]
			Print #0; Using "---.#"; Tab 85;FNR((ST0[2] / ST0[3]) * 100);
		End If
	endif
End If 
Print #0; Using "---------.##"; Tab 90;ST0[5];
If PRTSCOST
	IF COST_LEV[1]<>0
		Print #0; Using "---------.##"; Tab 102;(ST0[5] - ST0[4]);
		Print #0; Using "--------.##"; Tab 114;ST0[4];
		If ST0[5]
			Print #0; Using "---.#"; Tab 125;FNR((ST0[4] / ST0[5]) * 100);
		End If
	ENDIF
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
EMAILSALESCOPY: Rem*
	EMAILREP = 0
	EMCH = -1
	call DxGet("E_SREP", tmp$) \ i = tmp$
	if not(i) return ! not emailing report
	If P61$[30,30] <> "Y" Return 
	If PASS = 0 And SORT <> 2 Return 
	If J8 Return 
	!Window Open @2,14; Size 75,8; Using "EMAIL SALES REP COPY"
	!Print @1,1;"1. EMAIL SALES COPY?"
	J0$ = "6 01012201" \ J1 = 0
	J5$ = "Email each sales rep their portion of sales rep journal?"
	!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
	!If Not(J1) Window Close \ Return 
	CHAN = Findchannel() ! 99 \ Call "utchan5",CHAN
	!Signal 2,X1,CHAN,E \ If E Gosub ERR_SEARCH
	!Ropen #CHAN,"cntrl/USERPORT" \ Read #CHAN,Spc(6),0;UCREC; \ Close #CHAN
	URec=GetUIDRec(e$,IntCo,Userid$)
	uc_ch = openfile(-9988, intCo) \ if uc_ch = -1 error 42
	Read #uc_ch,uRec,212;EMAILFROM$;
	Close #uc_ch
	Call "mxvaleaddr.dl4",EMAILFROM$,X1,e$
	If Not(X1) Or EMAILFROM$ = ""
		! Already validated in 226, but just in case
		emailrep = 0
		emch = -1
		return
	End If 
	EMAILREP = 1
	! Window Close 
Return 

OPENEMAILCHAN: Rem
	If EMCH <> -1
		Close #EMCH
		EMCH = -1
	End If 

	If SORT <> 2 Or Not(EMAILREP) Return 
	Call "mxvaleaddr.dl4",SLSEMAIL$,X1,e$
	If Not(X1) Or SLSEMAIL$ = "" Return 
	SYS$ = "$/usr/ub/sys/email.report -f ''",EMAILFROM$,"''"," -t ''",SLSEMAIL$,"''"," -s ''","Credit Memo Journal (246)","''"
	SYS$ = SYS$," -c ''","Attached is your credit memo journal (246).","''"
	CHAN = Findchannel() ! 99 \ Call "utchan5",CHAN
	!Signal 2,X1,CHAN,E \ If E Gosub ERR_SEARCH
	EMCH = CHAN
	Open #EMCH,SYS$
Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
E$=msg$
Call programdump("tmp/cj246ase!","")
call programdump()
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
OUTEND: Rem EXIT
Gosub L_8600 ! reset prog/port
Gosub L_8900 ! clear glcmtemp
Gosub L_8800 ! clear jsdetl
Gosub ALLJRNL_UNLOCK ! release from status 93
! If Err 0 Rem
Try Kill CRIP$ Else Rem
Try Close #30 Else Rem
! If Err 0 Gosub ERR_TRAP
Call FindF(SFLE$,E)
If E
  Try Kill SFLE$ Else Rem
End If 
TFLE$[Len(TFLE$)] = "" \ Close #16 \ Kill TFLE$
Mat Read #1,120;P0;
P0[246] = 0 ! double sure prog/port reset
Mat Write #1,120;P0;
L_9010: ! bypass
If SCRPRT ! dx xml (TO BROWSER NOT POSSIBLE - LET IT GET ERROR?)
	tmp$="CANNOT RUN TO BROWSER - NO UPDATE PERFORMED!!!!!!"
	call addtostr(e$,rstr$,tmp$+rdel$)
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"246a.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If
!Print 'CS'
!Chain "MX000C"
!Stop 
Try Call dxclose() Else Rem
!Stop 
Rem {begin rtn.error.s}
Else
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
Rem {end rtn.error.s}

