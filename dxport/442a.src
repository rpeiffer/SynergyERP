! >>> Program 442a
!
! description Product Sales MTD/YTD Summary
!
! loadsave -w -n 100,10 -o prog/dxport/442a.dl4 src/442a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" !dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR  9, 2001  12:47:52
Rem /usr/acct/r97//usr/acct/zyc/work/r97/mx/mx442a.src (univ2) [zyc] {22358}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX442A - PRODUCT SALES   MTD/YTD SUMMARY
Rem AUTHOR: DAVE  OCT 13, 1986
Rem LAST UPDATE:   roman 05/29/1991  verify fields/files
! include call for cost_lev[]
! ---------- CUSTOM PAPER & CHEMICAL (PCS) ----------------------------
! jliu 2/25/03 cct165195 if the product's commodity code is "TIME", don't    
!    print the product info    
! ----------------------------------------------------------------------
!
External Lib "ubsfunc.dl4"
Declare External Sub UserCntrl,GetCostLevels
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !dx error handling variables
!
Dim 1%,FndUID,UA5[10] ! vars for call usercntrl
Dim UA2$[50],TUID$[10] ! vars for call usercntrl
Dim A$[156],P9$[50]
Dim 2%,B[24],3%,A1[19]
Dim 1%,ch_pw,whse,3%,C5[5],AMOUNT,whmisc2[7],parm[10]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T8[20],T9[20],T7[20],T6[20],ACTIVE
Dim K1$[50],K2$[20],K3$[20],K4$[20],X$[10],T9$[26],T2[3],T3[3]
dim kpw$[50],custom_customer$[30]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 4
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","1728","1744"
let ch_pw=4
Mat Read #1,0,100;ARDATE$;
Mat Read #1,19,50;P9$;
Read #1,3;CNAME$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 20
!!!!dx add xport reporting code
dim tmp$[300]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost levels
!
if j8 !dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"442a",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
call dxget("k2",k2$) !starting code
call dxget("k3",k3$) !ending code
call dxget("x9",tmp$)\x9=tmp$
call dxget("sort",tmp$)\if tmp$="" let c=2 else let c=9
call dxget("j2",j2$)
call dxget("j3",j3$)
!!!!dx end
!
L_900: Rem GET RANGES
!Print @0,21;"ENTER STARTING CODE, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!Print @0,23;"ENTER ENDING   CODE, <CR> FOR LAST,     E: TO EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
If K3$ = "" Let K3$ = "}}}}}}"
If k2$>k3$ let e$="Invalid starting and ending code range!"\error 10000
!If K2$ <= K3$ Goto L_990
!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
L_990: K1$ = K2$
J1 = 90 \ J2 = 0
If Len(K3$) < 12 Let K3$[Len(K3$) + 1] = "            "
!L_1000: Print @0,22;'CE';"SELECTIONS:  1: ACTIVE,  2: INACTIVE,  3: ALL ";
!Input ""J$
!If Len(J$) > 2 Goto L_1000
!X9 = J$
!If X9 < 1 If X9 > 3 Goto L_1000
!L_1100: Rem
!Print @0,23;'CL';"SORT BY COMMODITY CODE? (Y/N) ";
!Input ""J2$ \ If J2$ = "Y" Goto L_1200
!If J2$ <> "N" Goto L_1100
!C = 2
!Goto L_1900
L_1200: Rem COMM
!Print @0,21;'CE';"ENTER STARTING COMMODITY, <CR> FOR FIRST,   E: TO EXIT ";
!Input ""J2$ \ If J2$ = "E" Goto OUTEND
If J2$ = "" Let J2$ = "    "
If Len(J2$) < 4 Let J2$[Len(J2$) + 1] = "    "
J2$[5] = ""
!Print @0,22;'CE';"ENTER ENDING COMMODITY,   <CR> FOR LAST,    E: TO EXIT ";
!Input ""J3$ \ If J3$ = "E" Goto OUTEND
If J3$ = "" Let J3$ = "}}}}"
If Len(J3$) < 4 Let J3$[Len(J3$) + 1] = "    "
J3$[5] = ""
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
If c = 2 goto L_1900
!If J2$ <= J3$ Goto L_1300
!Print @0,21;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
!Signal 3,30 \ Goto L_1200
!L_1300: Rem
!C = 9
L_1500: Rem SORT IT
!Print @0,22;'CE';"Sorting...please wait" \ Signal 3,0
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E
If E Goto L_1800
L_1530: If K1$[1,Len(K3$)] > K3$ Goto L_1800
Mat Read #2,R1,0;A$;
If A$[152,155] < J2$[1,4] Goto L_1520
If A$[152,155] > J3$[1,4] Goto L_1520
J4$ = " ",J4$ \ J4$ = A$[152,155]
J4$[5] = K1$
Search #9,4,1;J4$,R1,E1
If e Let e$ = "syserrorfile 442a sortfile mode (m)=4 keyno (k)=1 r=",r1," e=",e," keyval (k$)=",j4$ \error 10000
Goto L_1520
L_1800: Rem
K1$ = " ",K1$ \ K3$ = "}",K3$

L_1900: !Print @0,22;'CE';"Printing...please wait";'CE'; \ Signal 3,0
!If J8 Print 'CS';
if j8 !dx xml headings
 tmp$="ITEM #",fdel$,"DESCRIPTION",fdel$,"MTD UNIT SALES",fdel$,"MTD DOLLAR SALES",fdel$
 let tmp$=tmp$,"MTD GROSS PROFIT",fdel$,"MTD G/P %",fdel$ ! was If COST_LEV[1] > 0 (always send)
 tmp$=tmp$,"YTD UNIT SALES",fdel$,"YTD DOLLAR SALES",fdel$
 let tmp$=tmp$,"YTD GROSS PROFIT",fdel$,"YTD G/P %",fdel$ ! was If COST_LEV[1] > 0 (always send)
 If P9$[40,40] = "Y" let tmp$=tmp$,"VEND ITEM #",fdel$ 
 call addtostr(e$,rstr$,tmp$+rdel$)
end if
K4$ = " ",K4$
If Err 0 Gosub ERR_TRAP    !dx
Search #C,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #C,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If C <> 9 If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;A$;
Mat Read #2,R1,156;B; \ Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,298;C5;
if custom_customer$="PCS" and a$[152,155]="TIME" goto L_2000: 
gosub GET_PRODWHSE:
IF PARM[2] = 0
rem item is discontinued if no sales dont print it                            
IF (C5[0]+C5[1]+C5[2]+C5[3]+C5[4]+C5[5])=0 goto  L_2000: ! ITEM DISCONTINUED  
endif  
If A$[152,155] < J2$[1,4] Goto L_2000   !dx
If A$[152,155] > J3$[1,4] Goto L_2000   !dx
If X9 = 3 Goto L_2100
ACTIVE = 0 \ If (C5[0] Or C5[1] Or C5[2] Or C5[3] Or C5[4] Or C5[5]) Let ACTIVE = 99
If X9 = 2 And Not(ACTIVE) Goto L_2100
If X9 = 1 And ACTIVE Goto L_2100
Goto L_2000
L_2100: If C <> 9 Goto L_2150
If K4$[1,4] <> K1$[1,4] Gosub L_4500 !commodity subtotal
K4$ = K1$
L_2150: Rem.
X2 = B[12] \ Gosub L_7700 !unpack date
Gosub L_5800 !heading
Gosub L_5000 !print detail
Gosub L_2200 !totals calc
Goto L_2000
L_2200: Rem TOTALS CALC
T9[3] = T9[3] + C5[2] \ T8[3] = T8[3] + C5[2]
T9[4] = T9[4] + C5[0] \ T8[4] = T8[4] + C5[0]
T9[5] = T9[5] + (C5[0] - C5[4]) \ T8[5] = T8[5] + (C5[0] - C5[4])
T9[7] = T9[7] + C5[3] \ T8[7] = T8[7] + C5[3]
T9[8] = T9[8] + C5[1] \ T8[8] = T8[8] + C5[1]
T9[9] = T9[9] + (C5[1] - C5[5]) \ T8[9] = T8[9] + (C5[1] - C5[5])
Return 
L_4000: Rem TOTAL PRINT
if j8 return !dx xml
Gosub L_5800
Print #0;"\15\TOTALS";
Print #0; Using "---------#.##"; Tab 27;T9[3];
Print #0; Using "---------#.##"; Tab 41;T9[4];
If COST_LEV[1] > 0 Print #0; Using "---------#.##"; Tab 56;T9[5];
T2 = 0 \ If T9[4] Let T2 = FNR(T9[5] * 100 / T9[4])
If COST_LEV[1] > 0 Print #0; Using "----.##"; Tab 70;T2;
Print #0; Using "---------#.##"; Tab 78;T9[7];
Print #0; Using "---------#.##"; Tab 92;T9[8];
If COST_LEV[1] > 0 Print #0; Using "---------#.##"; Tab 106;T9[9];
T2[1] = 0 \ If T9[8] Let T2[1] = FNR(T9[9] * 100 / T9[8])
If COST_LEV[1] > 0 Print #0; Using "----.##"; Tab 120;T2[1] Else Print #0;"\15\";
Print #0;" " \ J1 = J1 + 3
Return 
L_4500: Rem SUBTTL
if j8 return !dx xml
Gosub L_5800
If K4$[1,4] = "    " Goto L_4800
Print #0;"\15\";K4$[1,4];" TOTALS";
Print #0; Using "---------#.##"; Tab 27;T8[3];
Print #0; Using "---------#.##"; Tab 41;T8[4];
If COST_LEV[1] > 0 Print #0; Using "---------#.##"; Tab 56;T8[5];
T2 = 0 \ If T8[4] Let T2 = FNR(T8[5] * 100 / T8[4])
If COST_LEV[1] > 0 Print #0; Using "----.##"; Tab 70;T2;
Print #0; Using "---------#.##"; Tab 78;T8[7];
Print #0; Using "---------#.##"; Tab 92;T8[8];
If COST_LEV[1] > 0 Print #0; Using "---------#.##"; Tab 106;T8[9];
T2[1] = 0 \ If T8[8] Let T2[1] = FNR(T8[9] * 100 / T8[8])
If COST_LEV[1] > 0 Print #0; Using "----.##"; Tab 120;T2[1] Else Print #0;"\15\";
Print #0;" " \ J1 = J1 + 3
L_4800: For I = 0 To 20
  T8[I] = 0
Next I
Return 
L_5000: Rem "===================================== print line
if j8 !dx xml detail
 tmp$=A$[140,151],fdel$,A$[9,23] !item#,desc
 if p9$[26,26]="Y" let tmp$=tmp$,A$[63,86] !add'l desc
 tmp$=tmp$,fdel$,C5[2] using "--------#.##",fdel$,C5[0] using "--------#.##",fdel$
 if cost_lev[1] >0
   tmp$=tmp$,(C5[0] - C5[4]) using "--------#.##",fdel$
   T9 = 0 \ If C5[0] Let T9 = FNR((C5[0] - C5[4]) / C5[0] * 100)
   tmp$=tmp$,T9 using "---#.##",fdel$
 Else ! no cost security
   tmp$=tmp$," ",fdel$," ",fdel$ ! send spaces for g/p & percent
 end if
 tmp$=tmp$,C5[3] using "--------#.##",fdel$,C5[1] using "--------#.##",fdel$
 if cost_lev[1] >0
   tmp$=tmp$,(C5[1] - C5[5]) using "--------#.##",fdel$
   T9[1] = 0 \ If C5[1] Let T9[1] = FNR((C5[1] - C5[5]) / C5[1] * 100)
   tmp$=tmp$,T9[1] using "---#.##",fdel$
 Else ! no cost security
   tmp$=tmp$," ",fdel$," ",fdel$ ! send spaces for g/p & percent
 end if
 if p9$[40,40]="Y" let tmp$=tmp$,A$[93,112],fdel$ !vend item#
 call addtostr(e$,rstr$,tmp$+rdel$)
 return
end if
!
Gosub L_10000
Print #0; Tab 0;A$[140,151];
Print #0; Tab 13;A$[9,23];
If C5[2] Print #0; Using "--------#.##"; Tab 28;C5[2];
If Not(C5[2]) Print #0; Tab 32;X$[1,8];
Print #0; Using "----------#.##"; Tab 40;C5[0];
If COST_LEV[1] > 0 Print #0; Using "----------#.##"; Tab 55;(C5[0] - C5[4]);
T9 = 0 \ If C5[0] Let T9 = FNR((C5[0] - C5[4]) / C5[0] * 100)
If COST_LEV[1] > 0 Print #0; Using "---#.##"; Tab 70;T9;
Print #0; Using "---------#.##"; Tab 78;C5[3];
Print #0; Using "---------#.##"; Tab 92;C5[1];
If COST_LEV[1] > 0 Print #0; Using "---------#.##"; Tab 106;(C5[1] - C5[5]);
T9[1] = 0 \ If C5[1] Let T9[1] = FNR((C5[1] - C5[5]) / C5[1] * 100)
If COST_LEV[1] > 0 Print #0; Using "---#.##"; Tab 120;T9[1] Else Print #0;"\15\";
J1 = J1 + 1
If P9$[26,26] = "Y" Print #0; Tab 13;A$[63,86] \ J1 = J1 + 1
If P9$[40,40] = "Y" Print #0; Tab 13;A$[93,112] \ J1 = J1 + 1
Return 
L_5800: Rem HEADINGS ROUTINE
if j8 return !dx xml
If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 442A - ";T9$;
Print #0; Tab 46;"P R O D U C T   S A L E S   R E P O R T"
Print #0;"\15\";
Print #0; Tab 29;"----------------------MTD----------------------";
Print #0; Tab 80;"----------------------YTD----------------------"
Print #0; Tab 1;"ITEM #";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 30;"UNIT SALES";
Print #0; Tab 42;"DOLLAR SALES";
If COST_LEV[1] > 0 Print #0; Tab 57;"GROSS PROFIT"; Tab 72;"G/P %";
Print #0; Tab 81;"UNIT SALES";
Print #0; Tab 93;"DOLLAR SALES";
If COST_LEV[1] > 0 Print #0; Tab 107;"GROSS PROFIT"; Tab 122;"G/P %" Else Print #0;"\15\";
If P9$[40,40] = "Y" Print #0; Tab 13;"VEND ITEM #" \ J1 = J1 + 1
Print #0;""
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]                  
rem CALL "mxprodgrp5",PARM[] 
Call ProdGroup(e$,intco,Parm[])
RETURN     
OUTEND: Rem EXIT PROGRAM
!dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
end if
call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
try call dxclose() else rem
end
!
Print 'CS'
Close #2,#3
Chain "MX442"
Chain "MX000C"
Close 
Chain "MX000"
Stop 
L_9100: Rem END OF THIS RANGE
If C = 9 Gosub L_4500 !subtotal
Gosub L_4000 !total
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
Goto OUTEND
End 
L_10000: Rem "======= convert mtd/ytd units to selling units
CNVTU[0] = 0
CNVTU[1] = PFU1[9]
CNVTU[2] = 1
For X = 2 To 3
  CNVTA = C5[X]
  Gosub L_20000
  C5[X] = AMOUNT
Next X
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120   !dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG ! If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!dx replace entire error routine
include "src/callmainerrnet.inc"
end
