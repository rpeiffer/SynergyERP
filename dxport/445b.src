! >>> Program 445b
!
! description Open Order Report, Print by Product 
!
! loadsave -w -n 100,10 -o prog/dxport/445b.dl4 src/445b.src
!
! ERP Scheduler Enabled
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 20, 2004  13:15:27
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx445b.src (univ2) [jcs] {08412}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX445B         Open Order Report  (product sort format)
Rem Author:        Roman   (04/19/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels,ERPCronSuccess
!
Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,String,Time,VerifyDate
! - Option Default Dialect IRIS1
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,N1,N2,N1$,V9,J8,TIME$,DATE$,CNAME$,ITEM_LAB$,INVAC,INCM,INCALL9,SZONE$,EZONE$,picklist,SROUTE$,EROUTE$
!
try ! main try
dim tmp$[2000]
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
dim 1%,PFU1[20],CNVTU[2],COST_LEV[3],3%,PFU2[6],CNVTA,A[33],2%,C4[8]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim s1$[118]
!
Dim 1%,EUN[2],H4[2],L3[3],UN[2],S2[1],POL1[5],CTWT
Dim 2%,B[24],H0[12],H5[16],L4[3],L6[5],POL2[2],L2[1],DT3[1],JWDATE
Dim 3%,A1[7],Z1,T2[25],L5[3],L7[11],QORD,UNF[6],QSHP,OLM[6],PL4[23]
DIM S2$[20],v0$[12]
Dim J$[40],CCD$[14],UNIT$[4],PUNIT$[4]
Dim 1%,F,X1,2%,X2,RCTR,3%,J,J1,T[3],S3[17],GP,GPP,TOT_SELL
Dim K0$[50],K1$[50],K2$[50],K3$[50],HOLDKY$[6],KY$[16],Z$[50]
Dim X$[20],Z1$[25],BREAK$[12]
Dim L6$[60],L1$[20],A1$[142],P0$[20],S3$[33],CCD$[14],PL1$[120]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost levels
!
CHS=28 ! SHIP TO FILE
! - Print @0,22;"SORTING...please wait";'CE'; \ Signal 3,0
K0$ = N1$[1,6]
L_1515: Search #8,3,2;K0$,R,E
If E = 2 Goto L_2000
If K0$[1,6] > N1$[7,12] Goto L_2000
Mat Read #8,R;H0;
Mat read #8,R,56;TOT_SELL;
Mat Read #8,R,78;H4;
Mat Read #8,R,104;H5;
RECS = H0[2] 
Mat Read #CHS,RECS,8;S1$;
if picklist<>0
	if picklist=1 and S1$[118,118]>"1" goto L_1515: ! not on picklist option
	if picklist=2 and S1$[118,118]<"2" goto L_1515: ! on picklist
endif
MAT READ #8,R,66;V0$;
IF UCASE$(V0$)<SROUTE$ GOTO L_1515
IF UCASE$(V0$)>EROUTE$ GOTO L_1515
if incm=0
If H0[0] > 7 If H0[0] < 58 Goto L_1515
endif
If H0[0] < N1[12] Goto L_1515
If H0[0] > N1[13] Goto L_1515
Z = N1$[37,39] \ If H0[11] < Z Goto L_1515
Z = N1$[40,42] \ If H0[11] > Z Goto L_1515
If N2[5] = 1 If Not(TOT_SELL) Goto L_1515
X2 = H0[9] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE < N1[0] Goto L_1515
If JWDATE > N1[1] Goto L_1515
If INCALL9 If H0[10] = 999999 Goto SKIP_CHKDATE
X2 = H0[10] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If H0[10] If JWDATE < N1[2] Goto L_1515
If H0[10] If JWDATE > N1[3] Goto L_1515
SKIP_CHKDATE: Rem
If H4[2] If H4[2] < N1[4] Goto L_1515
If H4[2] If H4[2] > N1[5] Goto L_1515
If H5[8] If H5[8] < N1[6] Goto L_1515
If H5[8] If H5[8] > N1[7] Goto L_1515
Mat Read #10,H0[3],8;T2;
If Not(T2[21]) If Not(N1[8]) Goto L_1650
X2 = T2[21];FG2 = 0
For K = 0 To 11
  If Not(Fra(X2 / 2)) Goto HOLDSKIP
  If K + 1 >= N1[8] And K + 1 <= N1[9] ! check vs slected hold code range
    FG2 = 1;K = 20
  End If 
HOLDSKIP: X2 = Int(X2 / 2)
Next K
If Not(FG2) Goto L_1515
L_1650: If H5[7] < N1[10] Goto L_1515
If H5[7] > N1[11] Goto L_1515
K2$ = H0[7] Using "######"
L_1660: Search #11,3,1;K2$,R1,E
If E Goto L_1515
X2 = K2$[1,6] \ If X2 <> H0[7] Goto L_1515
If (H5[7] = 21 Or H5[7] = 22) And K2$[7,9] = "   " Goto L_1660
Mat Read #11,R1,0;L2;
Mat Read #11,R1,8;L3;
Mat Read #11,R1,256;S2; \ If S2[0] = 3 Goto L_1660
If L3[2] > 900 Goto L_1660
If N2[2] = 3 Goto L_1685
If N2[2] = 1 If L3[0] Goto L_1660
If N2[2] = 2 If Not(L3[0]) Goto L_1660
L_1685: Mat Read #11,R1,140;L1$;
If L3[0] Goto L_1700
If L1$[1,12] < N1$[13,24] Goto L_1660
If L1$[1,12] > N1$[25,36] Goto L_1660
If L1$[1,2] = "Z " Goto L_1660
!
L_1700: Rem "passed all tests, write out to sort file
K1$ = " ",K1$
K1$[1,12] = L1$[1,12]
K1$[15,20] = H0[7] Using "######"
K1$[21,23] = L3[2] Using "###"
Search #9,4,1;K1$,R1,E
If E>1 Let e$ = "syserrorfile 445 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \error 10000
Goto L_1660
!
L_2000: Rem "================================= start print
! 
! *** Process Section
!
if J8 ! dx xml headings
  !
  tmp$="ITEM CODE",fdel$,"DESCRIPTION 1",fdel$
  tmp$=tmp$,"DESCRIPTION 2",fdel$,"PRODUCT",fdel$
  if N2[1] ! detail
    tmp$=tmp$,"CUST #",fdel$,"NAME",fdel$,"DIV",fdel$,"WH",fdel$
	tmp$=tmp$,"SHIP VIA",fdel$
    tmp$=tmp$,"CUST PO",fdel$,"ORDER",fdel$,"LINE",fdel$,"ORD DATE",fdel$
    tmp$=tmp$,"SHIP DATE",fdel$,"SP",fdel$,"PICKLIST",fdel$,"HOLD",fdel$
    tmp$=tmp$,"QTY OPEN",fdel$,"U/M",fdel$,"EXTENSION",fdel$
    tmp$=tmp$,"QTY. SHIP",fdel$,"EST.DATE OF ARR.",fdel$,"UNIT PRICE",fdel$
	
    If COST_LEV[1] let tmp$=tmp$,"UNIT COST",fdel$,"GP %",fdel$
  else ! summary
    tmp$=tmp$,"QTY OPEN",fdel$,"EXTENSION",fdel$
  endif
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
If Not(J8) If V9[0] Print #0;"\14\"
! - Print @0,22;"PRINTING...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
V9[1] = 100 \ V9[0] = 0 \ RCTR = 0
K1$ = " ",K1$ \ BREAK$ = ""
L_2070: Search #9,3,1;K1$,R1,E
If E Goto L_9100
Mat Read #11,R1,0;L2;
Mat Read #11,R1,8;L3;
Mat Read #11,R1,16;L4;
Mat Read #11,R1,32;L5;
Mat Read #11,R1,56;L6;
Mat Read #11,R1,80;L6$;
Mat Read #11,R1,140;L1$;
Mat Read #11,R1,260;S3;
Mat Read #11,R1,168;L7;
Mat Read #11,R1,250;UN;
Mat Read #11,R1,370;S3$;
Mat Read #11,R1,404;OLM;
Mat Read #11,R1,446;EUN;
Mat Read #11,R1,452;UNF;
Read #11,R1,514;CTWT;
If L3[0] Gosub L_30000 \ Goto L_2220
Mat Read #3,L4[0],256;A;
Mat Read #3,L4[0],512;PFU1;
Mat Read #3,L4[0],554;PFU2;
Mat Read #3,L4[0],894;C4;
L_2220: Rem "get order header
K2$ = " ",K2$
K2$ = K1$[13,20]
K2$[9,9] = " "
Gosub L_2500 \ if E Goto L_2070 ! check order header status
Mat Read #8,R,0;H0;
mat read #8,r,66;v0$;
Mat Read #8,R,446;P0$;
Mat Read #8,R,78;H4;
Mat Read #8,R,104;H5;
Mat Read #10,H0[3],8;T2;
RECS = H0[2] 
Mat Read #CHS,RECS,8;S1$;
if picklist<>0
	if picklist=1 and S1$[118,118]>"1" goto L_2070: ! not on picklist option
	if picklist=2 and S1$[118,118]<"2" goto L_2070: ! on picklist
endif
credit=0
If H0 > 8 If H0 < 19
let credit=1
end if
if h0=31 let credit=1
IF CREDIT
LET T2[1]=0-T2[1];T2[17]=0-T2[17] ! cost also
LET T2[24]=0-T2[24];T2[14]=0-T2[14] ! cost too
l5[0]=0-l5[0];S3[13]=0-S3[13] ! cost for gp too!
l5[3]=0-l5[3];S3[12]=0-S3[12] ! cost also
END IF

K2$ = " ",K2$ \ K2$ = H0[4] Using "######"
A1$[31,60] = "** NOT ON FILE **"
Search #5,2,1;K2$,R2,E
If E = 1 Goto L_2410
Mat Read #5,R2,0;A1$;
If BREAK$ <> "" If BREAK$ <> K1$[1,12] Gosub L_4000
L_2410: Gosub L_3500
GP = L5[3] - S3[12]
If N2[6] = 1 Let GP = L5[0] - S3[13]
GPP = 0
X3[2] = L5[3] \ If N2[6] = 1 Let X3[2] = L5[0]
If X3[2] ! " was L5[3]
  GPP = FNR((GP / X3[2]) * 100)
Else 
  If N2[6] = 2 If S3[12] Let GPP = -100 Else Let GPP = 0
  If N2[6] = 1 If S3[13] Let GPP = -100 Else Let GPP = 0
End If 
If V9[1] > V9[4] Gosub L_5800
If BREAK$ = "" Gosub L_5900
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5900
Gosub L_5000
X3[2] = L5[3] \ If N2[6] = 1 Let X3[2] = L5[0]
T[0] = T[0] + X3[2]
T[1] = T[1] + X3[2]
T[2] = T[2] + QORD
T[3] = T[3] + QORD
Goto L_2070
!
L_2500: Rem FIND ORDER HEADER STATUS CHANGED DURING SORT
For ST = 1 To 99
  If ST > 7 If ST < 58 Goto L_2550
  K2$[1,2] = ST Using "##"
  Search #8,2,1;K2$,R,E 
  If E=0 return
L_2550: Next ST
E=1
Return 
!
L_3500: Rem "========================================== convert figures
CNVTA = L7[2] - L7[0] \ CNVTU[0] = 0
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 1
Gosub L_20000
QORD = AMOUNT
CNVTA = L7[4]
Gosub L_20000
QSHP = AMOUNT
CCD$[11,14] = "CWT"
If N2[3] = 1 If PFU1[8] = -1 Goto L_3700
If N2[3] = 2 If PFU1[9] = -1 Goto L_3700
If N2[3] = 3 If UN[0] = -1 Goto L_3700
If N2[3] = 3 If UN[0] = -2 Let CCD$[11,14] = "LOT " \ Goto L_3700
If N2[3] = 3 And UN[0] = -3 Let CCD$[11,14] = "LB  " \ Goto L_3700
If Not(L3)
  If N2[3] = 1 Mat Read #26,PFU1[8],0;CCD$;
  If N2[3] = 2 Mat Read #26,PFU1[9],0;CCD$;
End If 
If N2[3] = 3 Or L3 > 0 Mat Read #26,UN[0],0;CCD$;
L_3700: Return 
!
L_4000: Rem "================================ sort break
if J8 if N2[1] return ! dx xml, detail format
!
if J8 ! dx xml, summary
  If L3[0] let tmp$="+",rtrim$(S3$[1,20]),fdel$
  If Not(L3[0]) tmp$=rtrim$(L1$[1,12]),fdel$
  If N2[1] Let Z1 = 60 Else Let Z1 = 52
  tmp$=tmp$,rtrim$(L6$[1,30]),fdel$,rtrim$(L6$[31,Z1]),fdel$
  tmp$=tmp$,BREAK$,fdel$
  tmp$=tmp$,T[3] Using "---------#.##",fdel$
  tmp$=tmp$,T[1] Using "-------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  If N2[1] Print #0;"" \ V9[1] = V9[1] + 1
  Print #0; Tab 81;"TOTALS: ";BREAK$;
  Print #0; Using "---------#.##"; Tab 102;T[3];
  Print #0; Using "-------#.##"; Tab 120;T[1]
  Print #0;""
endif
V9[1] = V9[1] + 2
BREAK$ = "" \ T[1] = 0 \ T[3] = 0
If N2[4] Gosub L_5800
Return 
!
L_4500: Rem "================================ grand totals
if J8 return ! dx xml
!
Print #0; Tab 81;"GRAND TOTALS:";
Print #0; Using "-------#.##"; Tab 120;T[0]
Return 
!
L_5000: Rem "========================================= print detail line
RCTR = RCTR + 1
BREAK$ = K1$[1,12]
If N2[1]=0 Return ! summary
!
if J8 ! dx xml, detail
  If L3[0] let tmp$="+",rtrim$(S3$[1,20]),fdel$
  If Not(L3[0]) tmp$=rtrim$(L1$[1,12]),fdel$
  If N2[1] Let Z1 = 60 Else Let Z1 = 52
  tmp$=tmp$,rtrim$(L6$[1,30]),fdel$,rtrim$(L6$[31,Z1]),fdel$
  tmp$=tmp$,BREAK$,fdel$
  tmp$=tmp$,H0[4] Using "######",fdel$
  tmp$=tmp$,rtrim$(A1$[31,60]),fdel$
  tmp$=tmp$,H5[8] Using "##",fdel$
  tmp$=tmp$,H4[2] using "##",fdel$
  tmp$=tmp$,rtrim$(v0$),fdel$
  tmp$=tmp$,P0$[1,12],fdel$
  tmp$=tmp$,H0[7] Using "######",fdel$
  tmp$=tmp$,L3[2] using "###",fdel$
  X2 = H0[9] \ Gosub L_7700 ! mask order date
  tmp$=tmp$,X$,fdel$
  X2 = H0[10] \ Gosub L_7700 ! mask ship date
  tmp$=tmp$,X$,fdel$
  tmp$=tmp$,H0[11] Using "###",fdel$
  if S1$[118,118]<"2"  ! not on picklist
		let tmp$=tmp$,"N",fdel$
  else
		if S1$[118,118]="3"
			let tmp$=tmp$,"T",fdel$
		else
			let tmp$=tmp$,"Y",fdel$
		endif
  ENDIF
  If T2[21] let tmp$=tmp$,"Yes",fdel$ Else let tmp$=tmp$,"None",fdel$
  tmp$=tmp$,QORD Using "--------#.##",fdel$
  tmp$=tmp$,CCD$[11,14],fdel$
  X3[2] = L5[3] \ If N2[6] = 1 Let X3[2] = L5[0]
  tmp$=tmp$,X3[2] Using "------#.##",fdel$
  goto DetailPrintCont
endif
!
Print #0; Tab 2;L1$[14,16];
Print #0; Using "######"; Tab 7;H0[4];
Print #0; Tab 14;A1$[31,60];
Print #0; Using "## ##"; Tab 45;H5[8];H4[2];
Print #0; Tab 51;P0$[1,12];
Print #0; Using "######/###"; Tab 64;H0[7];L3[2];
X2 = H0[9] \ Gosub L_7700 \ Print #0; Tab 75;X$;
X2 = H0[10] \ Gosub L_7700 \ Print #0; Tab 84;X$;
Print #0; Using "###"; Tab 93;H0[11];
if S1$[118,118]<"2"  ! not on picklist
		Print #0;tab 97;"N";
  else
		if S1$[118,118]="3"
			print #0;tab 97;"T";
		else
			print #0;tab 97;"Y";
		endif
  ENDIF
If T2[21] Print #0; Tab 99;"Yes"; Else Print #0; Tab 99;"None";
Print #0; Using "--------#.##"; Tab 103;QORD;
Print #0; Tab 116;CCD$[11,14];
X3[2] = L5[3] \ If N2[6] = 1 Let X3[2] = L5[0]
Print #0; Using "------#.##"; Tab 121;X3[2]
V9[1] = V9[1] + 1
!
DetailPrintCont:
if J8=0
  Print #0;""
  Print #0; Tab 50;"QTY. SHIP"; Tab 62;"EST.DATE OF ARR."; Tab 81;"UNIT PRICE";
  If COST_LEV[1] Print #0; Tab 96;"UNIT COST"; Tab 120;"GP %" Else Print #0;""
  V9[1] = V9[1] + 2
  Print #0; Using "----------#.#"; Tab 44;QSHP;
else
  tmp$=tmp$,QSHP Using "--------#.#",fdel$
endif
If L3[0] Gosub L_5500 \ Goto L_5440 ! po date
If Not(L7[3])
  if J8 let tmp$=tmp$,"",fdel$
  Goto L_5440
endif
KY$ = " ",KY$;KY$ = L4[0] Using "######";HOLDKY$ = KY$[1,6]
Search #4,2,2;KY$,R1,E 
If E  
  if J8=0 Print #0; Tab 62;"NOT ON ORDER"; else let tmp$=tmp$,"NOT ON ORDER",fdel$
  Goto L_5440
endif
Mat Read #4,R1,12;POL2;
Mat Read #4,R1;POL1;
If POL1[0] = 3 Let LOWDD = 0 \ Goto L_5424
LOWDD = POL2[2]
L_5424: Search #4,3,2;KY$,R1,E 
if E or HOLDKY$ <> KY$[1,6] Goto L_5438
Mat Read #4,R1,12;POL2;
Mat Read #4,R1;POL1;
If POL1[0] = 3 Goto L_5433
If POL2[2] <> 0 If POL2[2] < LOWDD Let LOWDD = POL2[2]
If LOWDD = 0 Let LOWDD = POL2[2]
L_5433: Goto L_5424
L_5438: 
Z$ = LOWDD Using "&&&&&&" \ Call FormatDate(Z$,Z$,E) 
if J8=0 Print #0; Tab 66;Z$; else let tmp$=tmp$,Z$,fdel$
!
L_5440: Rem CONVERT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
OLM[3] = AMOUNT
UNIT = UN[1] \ Gosub L_10700 \ PUNIT$ = UNIT$
if J8=0 
  Print #0; Using "-----#.##"; Tab 78;OLM[3]; Tab 88;PUNIT$;
else
  tmp$=tmp$,OLM[3] Using "-----#.## ",PUNIT$,fdel$
endif
If COST_LEV[1]
  CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
  Gosub L_20000
  L5[1] = AMOUNT
  If S2[1] = 0 Or S3[1] = 0 Goto L_5476
  CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = S3[1]
  If S3[11] = -3 If L7[4] Let CNVTA = CNVTA / (L7[4] / S2[1])
  If S2[1] Let CNVTA = CNVTA / S2[1]
  Gosub L_20000
  L5[1] = L5[1] + AMOUNT
L_5476: UNIT = UN[2] \ Gosub L_10700
  if Cost_Lev[1] 
    if J8=0
      Print #0; Using "-----#.##"; Tab 92;L5[1]; Tab 102;UNIT$;
      Print #0; Using "-----#.##"; Tab 116;GPP
    else
      tmp$=tmp$,L5[1] Using "-----#.## ",UNIT$,fdel$
      tmp$=tmp$,GPP Using "-----#.##",fdel$
	endif
  endif
Else 
  if J8=0
    Print #0;""
  else
    tmp$=tmp$,"",fdel$,"",fdel$
  endif
End If 
if J8=0 
  Print #0;""
else
  call addtostr(e$,rstr$,tmp$+rdel$)
endif
V9[1] = V9[1] + 2
Return 
!
L_5500: Rem " ================check non-stocks for open po's
KY$ = " ",KY$;KY$[1,6] = L4[2] Using "######"
L_5510: Search #4,3,1;KY$,R1,E
If E  
  if J8 let tmp$=tmp$,"",fdel$
  Return 
endif
PO_NUMBER = KY$[1,6]
If PO_NUMBER <> L4[2]
  if J8=0 Print #0; Tab 64;"N/A"; else tmp$=tmp$,"N/A",fdel$
  Return 
endif
Mat Read #4,R1,66;PL1$;
If PL1$[81,92] <> L1$[1,12] Goto L_5510
Mat Read #4,R1;POL1;
If POL1[0] = 3
  if J8=0 Print #0; Tab 64;"N/A"; else tmp$=tmp$,"N/A",fdel$
  Return 
endif
Mat Read #4,R1,12;POL2;
Mat Read #4,R1,232;PL4;
If PL4[10] <> L2[1] Goto L_5510
Z$ = POL2[2] Using "&&&&&&" \ Call FormatDate(Z$,Z$,E)
if J8=0 Print #0; Tab 66;Z$; else let tmp$=tmp$,Z$,fdel$
Return 
!
L_5800: Rem "============================================ headings
if J8 return ! dx xml
!
! - If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
If Not(J8) Print #0;"\12\";
TIME$ = "" \ Call Time(TIME$)
Print #0; Tab 10;DATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE:";V9[0]
Print #0;" - 445B - ";TIME$;
Print #0; Tab 44;"O P E N  O R D E R  R E P O R T";
If N2[6] = 1 Print #0;"  - ORDERED DOLLARS" Else Print #0;"  - SHIPPED DOLLARS"
Print #0; Tab 51;"SORTED BY PRODUCT ";
if picklist=1 PRINT #0;" (NOT ON PICKLIST ONLY)";
IF PICKLIST=2 PRINT #0;" (PICKLIST ONLY)";
PRINT #0;""
Print #0;""
Print #0; Tab 1;ITEM_LAB$; Tab 14;"DESCRIPTION 1"; Tab 45;"DESCRIPTION 2";
If N2[1] Print #0;"" Else Print #0; Tab 105;"QTY OPN"; Tab 121;"EXTENSION"
Print #0;""
BREAK$ = ""
Return 
!
L_5900: Rem "===================== sub header
if J8 return ! dx xml
!
If L3[0] Print #0; Tab 1;"+";S3$[1,20];
If Not(L3[0]) Print #0; Tab 2;L1$[1,12];
If N2[1] Let Z1 = 60 Else Let Z1 = 52
Print #0; Tab 22;L6$[1,30]; Tab 53;L6$[31,Z1];
If N2[1] Print #0;"" \ Print #0;"" \ V9[1] = V9[1] + 2
If Not(N2[1]) Goto L_5950
Print #0; Tab 7;"CUST #"; Tab 14;"NAME"; Tab 45;"DV"; Tab 48;"WH";
Print #0; Tab 51;"CUST PO"; Tab 64;"ORDER/LINE"; Tab 75;"ORD DATE";
Print #0; Tab 84;"SHIP DATE"; Tab 93;"SP";tab 97;"PL";Tab 100;"HOLD";
Print #0; Tab 106;"QTY OPN"; Tab 115;"U/M"; Tab 121;"EXTENSION"
Print #0;""
V9[1] = V9[1] + 2
L_5950: Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
OUTEND: Rem EXIT PROGRAM
if not(erpCron)
	! dx close
	If j8 ! dx xml
	Call addtostr(e$,rstr$,esdel$) !end section
	!!!!!!print rstr$
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
	End If 
	!
	try call dxclose() else rem
else
	call ERPCronSuccess()
end if
End 
!
! - V9[0] = 99
! - Chain "MX445"
! 
L_9100: Rem END OF THIS RANGE
If RCTR Gosub L_4000
Gosub L_4500
! - Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
! 
L_10700: Rem FIND UNIT ABBR
If Not(UNIT) Goto L_10790
If UNIT = -1 Let UNIT$ = "CWT "
If UNIT = -2 Let UNIT$ = "LOT "
If UNIT = -3 Let UNIT$ = "LB  "
If UNIT <= 0 Goto L_10790
Mat Read #26,UNIT,10;UNIT$;
L_10790: Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ rem ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_30000: Rem ===== set units for conversions (stock/nonstock version)
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[15] = CTWT
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 
else ! main try
include "src/callmainerrnet.inc"
End try
End 
