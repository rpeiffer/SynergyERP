! >>> Program 114a
!
! description  S/C Price List Customer Order Sheet
!
! loadsave -w -n 100,10 -o prog/dxport/114a.dl4 src/114a.src
!
! 1.0 mm/dd/yyyy change??
!
!Include src/copyright.inc
!include "src/copyright.inc"
!release 9.0
!
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
!
! *declare common dl4 intrinsic subs & functions
Declare Intrinsic Function trim$,dateusing$,fmtof
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
!
! *declare common external libs & subs & functions
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
Declare External Function getmsg$,expandarray
!
External Lib "ubsfunc.dl4"
declare external sub GetCostLevels,USERCNTRL
Declare External Function openfile,JDate$,PDate$
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 28, 2006  12:27:03
Rem /w2/papermaster/r2005//usr/acct/becky/work/r2005/mx1/mx114a.src (univ2) [becky] {15939}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX114A   - CUSTOMER /SALESMAN  PRICE LISTING  (order sheet)
Rem AUTHOR: HARRY HENDERSON   NOV 22, 1988
Rem Updated 9/91 REK - To add (+) or (-) print for cust. price
! ---------------  notes for upgrade to rev9 for H T Berry  --------------------
! vst 09/16/06 cct207499 - used rev9 prog & added in custom code for:
! rek  08/1995  cct80330 modified to 8.5" X 11" printout
! zyc  07/13/04 cct179631 alignment
! -----------------------------------------------------------------
! --------------------  notes for rev9 upgrade for Jersey Paper  ---------------
! 03/14/02 jcs cct155040 - option to print special price/contract items not
!                          purchased yet.
!
Declare Intrinsic Sub DateToJulian,InpBuf,String
Declare Intrinsic Function FindChannel
!
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 2%,C4[8]
Com 1%,3%,PFU2[6],CNVTA,A[33],UWORK[10],FIELD,BASEX
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
Dim P$[16],C1$[142],P1$[156],D6$[20],P2$[92],PMASK$[12],P9$[50],SPACE$[80]
Dim UNIT$[4],PUNIT$[4],CUNIT$[4],SUNIT$[4],I$[60],Z1$[50],WH$[2],WHPROD$[12]
Dim W1$[32]
Dim 1%,M5[3],M8,PRFLAG,LPEUN[2],B3,WHPARC[5],PD1[9],2%,M6[3],3%,M7,PERM[1]
Dim 1%,LM[1],WHLM[1],C3[4],C5[2],P4[100],P0[100],SPCUM[1],SPC3[2],F
Dim 1%,SORTORDER,PT[37],COID
dim 1%,F,SPCUM[1],SPCC3[2],SPWH
Dim 1%,prntflag,a5[10],prcsrc,ua2$[50]
dim 2%,SPC1[5],W2[9]
Dim 2%,P2[100],LPDEPT,DEPT,JDATE[5],3%,scount[1]
Dim 2%,UNITX,C1[2],B[24],Z7[3],SPC1[5],CFC1[12],Z1[1],BRKLVL,D9[20]
DIM 3%,lpc4[3]
Dim 3%,C2[2],B1[9,2],C7,A2$[10],S8$[5],A[33],C6[3],MU,S7$[51],W3[24],L6[1]
Dim 3%,BRACKET,BRACKET1,SPC4[6],SPC5[4],PF_LOAD2,2%,DT,Q0[1],SGPRICE,R[99]
Dim J8$[8],C5$[12],CNAME$[30],1%,JA9[2]
Dim K33$[50],K34$[50],KCUST$[50],1%,TYPE,RB[2],RBL1[1],RBWH,RBUM[1]
Dim 2%,RB1[5],3%,RBCOST,RBSLCOST,RB5[2],RP_COST,SPSLCOST
Dim 3%,W3[24],WHLV[2],WHMISC[6],PRPARC[3],PREC[1],X4,FLEPTR[20,1],SPECS[50]
Dim 2%,WHBLD[2],W7[14],WHSE,DFWH,MSGDESC$[150],ARDATE
Dim 3%,J,X3[9],A4,T9[20],D3[1],LPR[4],BSH[9],sqno
Dim S9$[8],A1$[50],S1$[30],K4$[40],P60$[50],CDesc$[16]
Dim K1$[50],K2$[20],K3$[50],K9$[50],U5$[130],BK$[10],F1$[16],3%
Dim FSTCOMM$[4],LSTCOMM$[4],FS$[50],FILE$[75],K98$[50],FNAME$[20]
dim 3%,LPUNF[6],Custom_customer$[30]
dim SP$[12],jpKEY$[20]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],j8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1,coms
Rem {end dim.rtn.input}
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[500],tmp2$[400],tmp3$[400]
Dim action$[30],options$[30],UserID$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim Blank$[12] \ Blank$ = " ",Blank$
Dim EndParam$[12] \ EndParam$ = "z",EndParam$
!
Def FNS(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .0001)
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
U5$ = "-",U5$
S7$ = " ",S7$
SPACE$ = " ",SPACE$
CH_CNTRL = 1;CH_LASTPRC = 2;CH_PROD = 3;CH_CUST = 4;CH_BRKTBL = 5;CH_SPCPRC = 6
CH_SLSM = 7;CH_COMMD = 8;CH_SORT = 9;CH_CNTRTH = 10;CH_DEPT = 11;CH_CCODES = 12
CH_PRDMRK = 13;CH_ZONE = 14;CH_VEND = 15;CH_SCURR = 16;CH_PRDWHSE = 17;CH_PTYPE = 18
!
For J = 2 To 99
  If J = 9 Goto CNXTFLE
  Try Close #J Else Rem
CNXTFLE: !
Next J
!
For X = 0 To 5
  If Not(X) Let S7$[1,1] = "|" Else Let S7$[X * 10,(X * 10) + 1] = "| "
Next X
!
Read #CH_CNTRL,0,108;ARDATE;
Mat Read #CH_CNTRL,0,100;J8$;
Mat Read #CH_CNTRL,115,0;D9;
Read #CH_CNTRL,3;CNAME$;
Read #CH_CNTRL,0,108;DT;
Mat Read #CH_CNTRL,19,50;P9$;
Mat Read #CH_CNTRL,60,50;P60$;
mat read #CH_CNTRL,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
Mat Read #CH_CNTRL,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
If Err 0 Let j8 = Spc(8)
j8 = 0 \ LJ9 = Chf(0)
If Err 0 Gosub ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
If j8 If j8 <> 49 Goto ERR_TRAP
LJ9 = 60 \ If j8 Let LJ9 = 20
SCRN = j8
!
For J = 2 To 18
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #CH_CNTRL,88,J1;J$;
  Ropen #J,J$
NXTFLE: Next J
Data "1376","1792","1808","1952","1936","1824","2288","-1","2880","1632","1728","1712","1920","2400","2016"
Data "1744","752"
!
!!Open #77,"PRTDFLT","USERPORT"
!!Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!!Mat Read #77,A4,0;PD1;
!!Close #77,#78
!
Call getsession(e$,CTLC,options$,action$,UserID$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call UserCntrl(userID$,uA2$,A5[],ss,intCo)
!
! call dxsave(0,"tmp/114ain.txt!")
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"114a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
Gosub BUILD_SORT98 ! build file for individual customer selection
!
FNAME$ = intCO Using "2/ARTERMCODE#"
ARTermChan = FindChannel()
Open #ARTermChan,FNAME$
DFWH = PD1[2]
JDATE[0] = Tim(6)
tmp1$ = ARDATE Using "&&&&&&" \ ARDATE = tmp1$[3,4],tmp1$[5,6],tmp1$[1,2]
!
Call dxget("SCUST",tmp$) \ X0 = tmp$
Call dxget("ECUST",tmp$) \ If tmp$ = "" Let X5 = 999999 Else Let X5 = tmp$
Call dxget("INDCUST",tmp3$)
Call dxget("PDATEFROM",tmp$) \ If tmp$ = "" Let PDATEFROM = 10107 Else Let PDATEFROM = tmp$
Call dxget("PDATETO",tmp$) \ If tmp$ = "" Let PDATETO = 123159 Else Let PDATETO = tmp$
Call dxget("SSALES",tmp$) \ S1 = tmp$
Call dxget("ESALES",tmp$) \ If tmp$ = "" Let S2 = 999 Else Let S2 = tmp$
Call dxget("SCOMMD",FSTCOMM$) \ FSTCOMM$ = FSTCOMM$,Blank$
Call dxget("ECOMMD",LSTCOMM$) \ LSTCOMM$ = LSTCOMM$,EndParam$
!Call dxget("SORTORDER",tmp$) \ If tmp$ = "" Let SORTORDER = 0 Else Let SORTORDER = 1 ! sort by commodity
call dxget("SORTORDER",tmp$) ! new options: 0=none, 1=commod, 2=w/seq
if tmp$ = "N" 
	Let SORTORDER = 0 
Else 
	let sortorder=tmp$
	if sortorder<=0 Let SORTORDER = 1
Endif
Call dxget("EFECTDATE",tmp$) \ If tmp$ = "" Let JDATE[1] = ARDATE Else Let JDATE[1] = tmp$
Call dxget("PRFLAG",tmp$) \ PRFLAG = tmp$ !1 ,2(Y/N/W), 3
Call dxget("BRACKET",tmp$) \ If tmp$ = "" Let BRACKET = -9 Else Let BRACKET = tmp$
Call dxget("WHSE",tmp$) \ WHSE = tmp$
Call dxget("NSFLG",tmp$) \ If tmp$ = "" Let NSFLG = 0 Else Let NSFLG = 1
!call dxget("MINGPP",tmp$) ! min gp % (flag 'em if less)
!MINGPP=tmp$ ! PER ERG - NO GP 5 ON CUSTOMER VERSION
CALL DXGET("PRLYR",tmp$) \ if tmp$="" let PRLYR=0 Else let PRLYR=1
if p60$[32,32]<>"Y" let PRLYR=0 ! only if in lp file!
Let Inclscp=0
If custom_customer$="JPAPER"
	CALL DXGET("INCLSCP",tmp$) \ if rtrim$(tmp$)<>"" let inclscp=1 !
endif
If C4 = 99 Let C4 = 0
!
F9 = 1
If PDATEFROM = 0 Let PDATEFROM_JUL = 0
!
If tmp3$ !!The channel 98 is used to store the comma separated individual values for customers
  INDIVFLG = 1
  X0 = 0 \ X5 = 999999
  tmp$ = RTrim$(tmp3$)
nextItem: !
  tmp$ = RTrim$(tmp$)
  X2 = 0 \ Let J$ = tmp$ To "," : X2
  X$ = " ",X$ \ X$ = tmp$[X2 + 1]
  tmp$ = X$,Blank$
  J$ = trim$(J$) \ coms = J$
  If coms < 0 Or coms > 999999 Let e$ = "Invalid individual customer code, must be between 0 and 999999!" \ Error 10000
  J$ = coms Using "######"
  !print J$
  Search #SortChan,4,1;J$,R[SortChan],E
  If E Let e$ = "syserrorfile 114a sortfile mode (m)=4 keyno (k)=1 r=",R[SortChan]," e=",E," keyval (k$)=",J$ \ Error 10000
  If X2 Goto nextItem
Else 
  INDIVFLG = 0
  If X0 < 0 Or X0 > 999999 Let e$ = "Invalid starting customer code, must be between 0 and 999999!" \ Error 10000
  If X5 < X0 Or X5 > 999999 Let e$ = "Invalid ending customer code, must be between starting customer code and 999999!" \ Error 10000
End If 
!
! starting last purchase date
errflag = 0
tmp1$ = PDATEFROM Using "&&&&&&" \ PDATEFROM = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
X2 = PDATEFROM \ Gosub YMD2JUL \ If errflag Let e$ = "Invalid starting last purchased!" \ Error 10000
PDATEFROM_JUL = X2
!
! ending last purchase date
tmp1$ = PDATETO Using "&&&&&&" \ PDATETO = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
X2 = PDATETO \ Gosub YMD2JUL \ If errflag Let e$ = "Invalid ending last purchased!" \ Error 10000
PDATETO_JUL = X2
If PDATETO_JUL < PDATEFROM_JUL Let e$ = "Invalid ending last purchased, must be >= starting last purchased!" \ Error 10000
!
! salesman
If S1 < 0 Or S1 > 999 Let e$ = "Invalid starting salespersons, must be between 0 and 999!" \ Error 10000
If S2 < S1 Or S2 > 999 Let e$ = "Invalid ending salespersons, must be between starting salespersons and 999!" \ Error 10000
!
! commodity
If LSTCOMM$ < FSTCOMM$ Let e$ = "Invalid ending commodities, must be >= than starting commodities!" \ Error 10000
!
! effective date
tmp$ = JDATE[1] Using "&&&&&&"
JDATE[1] = tmp$[5,6],tmp$[1,2],tmp$[3,4]
X2 = JDATE[1] \ Gosub YMD2JUL \ If errflag Let e$ = "Invalid effective date!" \ Error 10000
DT = JDATE[1] \ JDATE[1] = X2 \ X2 = DT
Gosub ISDUNPACK
!
! show prices
If PRFLAG = 3 Let PRFLAG = 0
If P60$[33,33] = "Y" And PRFLAG = 2 Let e$ = "Invalid can't show last price margin!" \ Error 10000
!
! bracket #
If PRFLAG Let BRACKET = 0
If BRACKET <> -9
  If BRACKET < 0 Or BRACKET > 999 Let e$ = "Invalid bracket, must be between 0 and 999" \ Error 10000
End If 
!
! warehouse (optional)
If P9$[32,32] <> "Y" Let WHSE = 0
If WHSE < 0 Or WHSE > D9[5] Let e$ = "Invalid warehouse, must be between 0 and ",D9[5],"!" \ Error 10000
!

If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 

!!Gosub PRINTSCREEN 
! - Gosub L_31000 ! customer or salesman option
!!F9 = 1
!!For Y = 3 To 19
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On Y Gosub L_1100,L_1100,L_31200,EDT_PURCHRNG,L_31400,EDT_CMMDRNG,SORTORDER_QUEST,L_1100,L_31700,L_1100,L_1100,L_1100
!!On Y - 12 Gosub L_31600,L_1100,L_31800,L_1100,L_1100,L_32000,L_32300
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Next Y
!!L_980: Print @10,23;'CL';"ENTER #: Field to edit,  P: print,  E: end ";
!!Input ""Z1$
!!If Z1$ = "P" Goto L_1900
!!If Z1$ = "E" Goto DONE
!!Y = Z1$
!!If Y >= 1 And Y <= 19
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On Y Goto L_1180
!!On Y - 1 Gosub L_31000,L_31200,EDT_PURCHRNG,L_31400,EDT_CMMDRNG,SORTORDER_QUEST,L_1100,L_31700,L_1100,L_1100,L_1100
!!On Y - 12 Gosub L_31600,L_1100,L_31800,L_1100,L_1100,L_32000,L_32300
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!End If 
!!Goto L_980
!!L_1100: Return 
!!PRINTSCREEN: Rem ================================================ screen
!!Window Off \ Window On 
!!Print @0,0;"MX114A  ";@26,0;"SALESMAN/CUSTOMER PRICE LIST"
!!Print @0,2;" 1> <C>ustomer Version, <S>alesperson Version, <O>rder sheet, <P>rice review?  O";'CE'
!!Print @0,3;" 2> <C>ustomer or <S>alesperson order sheet? C";'CL'
!!Print @18,5;"-STARTING-";@33,5;"-ENDING-"
!!Print @0,6;" 3> CUSTOMERS";'CL';@45,6;" 9> EFFECTIVE DATE: ";'CL';
!!Print @0,7;'CL';" 4> LAST PURCHASED";'CL';
!!Print @48,7;"(for special price calculation)";'CL'
!!Print @0,8;" 5> SALESPERSONS";'CL';
!!Print @0,9;" 6> COMMODITIES"
!!Print @0,10;" 7> SORT BY COMMODITY";
!!Print @0,11;'CL';
!!Print @0,12;'CL';
!!Print @0,13;'CL';
!!Print @0,14;'CL';
!!Print @0,15;" 13> SHOW PRICES IN: 1-SYSTEM PRICE, ";'CL';
!!If P60$[33,33] <> "Y"
!!  Print "2-LAST PRICE MARGIN (SUGG), ";'CL';
!!End If 
!!Print "3-NO PRICE? ";'CL'
!!Print @1,16;'CL';
!!Print @0,17;" 15> ENTER BRACKET # TO USE FOR TEN BRACKET PRICES OR <CR> FOR NO PRICE ";;'CL';
!!Print @1,18;'CL';
!!Print @0,19;'CL';
!!Print @0,20;'CL';
!!If P9$[32,32] = "Y" Print @0,21;" 18> ENTER WAREHOUSE TO PRINT FOR, ''0'' FOR MAIN ";'CE'; Else Print @0,21;'CE';
!!Print @0,22;" 19> PRINT NON-STOCKS? (Y/N) ";'CL';
!!Window Off 
!!Return 
!!L_31000: 
! - J5$ = "";J0$ = "1 00014503" \ J1$ = "C"
! - If C4 = 99 Let C4 = 0 \ Return 
! - Gosub ISINPUT
! - If J$ = "S"
! -   Close #77
! -   Chain "mx114a1"
! - End If
! - If J$ <> "C" Goto L_31000
! - Return 
!!L_31200: Rem
!!J5$ = " <CR> FOR FIRST   I: INDIVIDUAL SELECTS ";J0$ = "1 00062106"
!!J1$ = "      "
!!Gosub ISINPUT
!!If J4$[1,1] = "I" Goto INDIV_CUST Else Let X0 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00063306" \ J1$ = "999999"
!!Gosub ISINPUT
!!X5 = J$
!!If X0 > X5
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
!!  Gosub ISERRMSG \ Goto L_31200
!!End If 
!!Goto DONE_INDIV
!!INDIV_CUST: Rem
!!INDIVFLG = 1
!!J$ = " ",J$
!!ASK_AGAIN: Rem
!!J1$ = J$
!!J5$ = "ENTER EACH CUSTOMER NUMBER <CR> WHEN DONE "
!!J0$ = "1 00063306"
!!Gosub ISINPUT
!!If J4$ = "" Goto DONE_INDIV
!!Search #98,4,1;J$,R[98],E !!\ If E If E > 1 Gosub ERR_SEARCH
!!X0 = 0;X5 = 999999
!!Goto ASK_AGAIN
!!DONE_INDIV: Rem
!!Return 
!!EDT_PURCHRNG: J5$ = "<CR> FOR FIRST" \ J0$ = "5 00  2107" \ J1$ = ""
!!J1 = 700101
!!Gosub ISINPUT \ PDATEFROM = J1
!!If PDATEFROM = 0
!!  PDATEFROM_JUL = 0
!!  Print @21,7;"First"
!!Else 
!!  X2 = J1 \ Gosub YMD2JUL \ Goto EDT_PURCHRNG
!!  PDATEFROM_JUL = X2
!!End If 
!!EDT_PURCHRNG1: J5$ = "<CR> FOR LAST" \ J0$ = "5 00  3307" \ J1$ = ""
!!J1 = 591231
!!Gosub ISINPUT \ PDATETO = J1
!!If PDATETO = 0
!!  PDATETO_JUL = 0
!!  Print @33,7;"Last"
!!Else 
!!  X2 = J1 \ Gosub YMD2JUL \ Goto EDT_PURCHRNG1
!!  PDATETO_JUL = X2
!!End If 
!!If PDATEFROM And PDATETO And PDATEFROM_JUL > PDATETO_JUL Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub ISERRMSG \ Goto EDT_PURCHRNG
!!Return 
!!L_31400: J5$ = "<CR> FOR FIRST" \ J0$ = "1 00032408" \ J1$ = "   "
!!Gosub ISINPUT \ S1 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00033608" \ J1$ = "999"
!!Gosub ISINPUT \ S2 = J$
!!If S1 > S2 Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub ISERRMSG \ Goto L_31400
!!Return 
!!EDT_CMMDRNG: Rem -----------------------------------------------Commodity Range
!!J5$ = "<CR> FOR FIRST" \ J0$ = "2 00042309" \ J1$ = "    "
!!Gosub ISINPUT \ FSTCOMM$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00043509" \ J1$ = "zzzz"
!!Gosub ISINPUT \ LSTCOMM$ = J$
!!If FSTCOMM$ > LSTCOMM$
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
!!  Gosub ISERRMSG \ Goto EDT_CMMDRNG
!!End If 
!!Return 
!!SORTORDER_QUEST: Rem
!!J5$ = "Y=sort by commodity, N=sort by product"
!!J0$ = "6 00012310"
!!J1 = SORTORDER
!!Gosub ISINPUT
!!SORTORDER = J1
!!Return 
!!L_31600: J0$ = "2 00017615" \ J1$ = "1";J5$ = ""
!!Gosub ISINPUT
!!If J$ <> "1" And J$ <> "2" And J$ <> "3" Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_31600
!!PRFLAG = J$ \ If PRFLAG = 3 Let PRFLAG = 0
!!If P60$[33,33] = "Y" And PRFLAG = 2 Goto L_31600
!!Return 
!!L_31700: Rem
!!J5$ = "<CR> FOR DEFAULT DATE" \ J0$ = "5 00086406" \ J1 = ARDATE
!!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto L_31700
!!JDATE[1] = X2
!!DT = J1;X2 = J1
!!Gosub ISDUNPACK
!!Return 
!!L_31800: J0$ = "2 00037217" \ J1$ = "   ";J5$ = ""
!!If Not(PRFLAG) Return 
!!Gosub ISINPUT
!!If J$ = "   " Let BRACKET = -9 Else Let BRACKET = J$
!!Return 
!!L_32000: J0$ = "3 00024821" \ J1 = DFWH;J5$ = ""
!!If P9$[32,32] = "Y"
!!  Gosub ISINPUT
!!Else 
!!  WHSE = 0 \ Goto L_32040
!!End If 
!!WHSE = J1
!!If WHSE < 0 Or WHSE > D9[5]
!!  J7$ = "INVALID ENTRY"
!!  Gosub ISERRMSG
!!  Goto L_32000
!!End If 
!!L_32040: Return 
!!L_32300: Rem NON STOCKS
!!J0$ = "6 00012922" \ J1 = 0;J5$ = ""
!!Gosub ISINPUT
!!NSFLG = 0 \ If J1 Let NSFLG = 1
!!Return 
!!L_1180: If Err 0 Rem
!!For X = 2 To 17
!!  If X = 9 Goto L_1195
!!  Close #X
!!L_1195: Next X
!!Close #77
!!Chain "MX114"
!
L_1900: !
! - PRINT @0,21;"PRINTING, PLEASE WAIT . . .  "'CE'; \  SIGNAL 3,0
DEPT = -99
Gosub DO_SORT
MAIN: Rem
If j8
  tmp$ = "CUSTOMER CODE",fdel$
  tmp$ = tmp$,"CUSTOMER NAME",fdel$
  tmp$ = tmp$,"ADDRESS",fdel$
  tmp$ = tmp$,"CITY",fdel$
  tmp$ = tmp$,"STATE",fdel$
  tmp$ = tmp$,"ZIP",fdel$
  tmp$ = tmp$,"TELEPHONE",fdel$
  tmp$ = tmp$,"SLSM CODE",fdel$
  tmp$ = tmp$,"SLSM NAME",fdel$
  tmp$ = tmp$,"TERMS",fdel$
  tmp$ = tmp$,"COMMODITY",fdel$
  tmp$ = tmp$,"ITEM CODE",fdel$
  tmp$ = tmp$,"DESCRIPTION",fdel$
  tmp$ = tmp$,"DESCRIPTION 2",fdel$
  If PRFLAG Let tmp$ = tmp$,"PRICE",fdel$
  tmp$ = tmp$,"LAST PURCHASE DATE",fdel$
  tmp$ = tmp$,"QTY",fdel$,"U/M",fdel$
  if sortorder=2
	tmp$=tmp$,"SEQNO",fdel$
  Endif
  if prlyr tmp$=tmp$,"LYR UNITS",fdel$
  Call addtostr(e$,rstr$,tmp$ + rdel$)
End If 
!
!!If SCRN Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$ \ J4$ = " ",J4$
SORTFLE_LOOP: Rem
Search #CH_SORT,3,1;K1$,R[CH_LASTPRC],E
If E Goto L_9100
!If K1$[4,9] <> J4$[1,6] Let J1 = 99
If K1$[4,9] <> J4$[1,6] 
  if sortorder<>2
	Let J1 = 99
  Else
	if j2 gosub manpent
	let j1=99
  Endif
Endif ! cust changed
if custom_customer$="JPAPER" and K1$[33,33]="*" ! "it's a special
  Gosub SetUp_Special:
Else
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],0;P$;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],16;C1;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],28;C2;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],46;C3;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],140;C6;
	Mat Read #CH_LASTPRC,r[ch_lastprc],168;LPR;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],214;LPEUN;
	Mat Read #CH_LASTPRC,R[CH_LASTPRC],262;PERM;
	Read #CH_LASTPRC,R[CH_LASTPRC],320;LPDEPT;
	Mat Read #ch_lastprc,R[ch_lastprc],220;LPUNF;
	read #CH_LASTPRC,r[ch_lastprc],408;sqno; ! seq no
endif
If LPDEPT <> DEPT Let F7 = 99 \ DEPT = LPDEPT
If P2$[81,84] < FSTCOMM$ Or P2$[81,84] > LSTCOMM$ Goto SORTFLE_LOOP
X2 = C1[2] \ Gosub ISDUNPACK
J3$ = " n/a  "
If C3 = 1 Let J3$ = "MATRX"
If C3 = 2 Let J3$ = "CONT"
If C3 = 3 Let J3$ = "PRMO"
If C3 = 4 Let J3$ = "COMD"
X3 = 0
X9 = 0
SGPRICE = 0
J4$ = " ",J4$ \ J4$ = K1$[4,9]
Search #4,2,1;J4$,V1,E
If E Goto L_2400
Mat Read #4,V1,142;CFC1;
Mat Read #18,CFC1[7],28;PT;
DFT_COST = PT[0]
L_2400: If Not(DFT_COST) Let DFT_COST = P60$[29,29]
if custom_customer$="JPAPER"
	IF NOT (LPC4[3]) GOSUB L_3500:
	IF LPC4[3] GOSUB L_4100: ! SET NSTK VARS
	!IF C6[3] GOSUB L_4100: !   SET NSTK VARS
	GOSUB header:
	IF LPC4[3] GOTO L_2171:
	!IF C6[3] GOTO L_2171:
else
	If Not(C6[3]) Gosub L_3500
	If C6[3] Gosub L_4100
	Gosub HEADER
	If C6[3] Goto L_2171
endif
GET_PRICE: Rem "Use Call "Price" to get price/cost
For X = 0 To 30 \ SPECS[X] = 0 \ Next X
FLEPTR[1,0] = CH_PROD;FLEPTR[1,1] = R[CH_PROD]
FLEPTR[2,0] = CH_PRDWHSE;FLEPTR[2,1] = WHBLD[2]
FLEPTR[3,0] = CH_COMMD;FLEPTR[3,1] = R[CH_COMMD]
FLEPTR[4,0] = CH_LASTPRC;FLEPTR[4,1] = R[CH_LASTPRC]
if custom_customer$="JPAPER"
	If K1$[33,33]="*" Let FlePtr[4,1]=0 ! "Built from Product
else
	If K1$[30,30] = "*" Let FLEPTR[4,1] = 0 ! was 29,29 (commod is 4 not 3)
endif
FLEPTR[5,0] = CH_SPCPRC;FLEPTR[5,1] = 0
if custom_customer$="JPAPER"
	If K1$[33,33]="*" Let FlePtr[5,1]=R[CH_LastPrc] ! "actuall SP record
ENDIF
FLEPTR[6,0] = CH_CNTRTH;FLEPTR[6,1] = 0
FLEPTR[7,0] = CH_CCODES;FLEPTR[7,1] = 0
FLEPTR[8,0] = CH_BRKTBL;FLEPTR[8,1] = 0
SPECS[0] = 299;SPECS[1] = AMQTY;SPECS[2] = WEIGHT;SPECS[3] = CFC1[1]
SPECS[4] = WHSE;SPECS[5] = DT;SPECS[6] = LPDEPT;SPECS[7] = CFC1[7]
If JDATE[1] > JDATE[0] ! "future eff date
  SPECS[5] = 0 - DT
End If 
SPECS[8] = 1;SPECS[9] = DFT_COST;SPECS[10] = 0;SPECS[11] = 0
SPECS[12] = 0;SPECS[13] = C3[2];SPECS[14] = C3[3];SPECS[15] = C3[3]
SPECS[16] = 0;SPECS[17] = COST;SPECS[18] = 0;SPECS[19] = 0
SPECS[20] = X3
!
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
!
If SPECS[0] <> 0 Let SPECS[23] = X3 \ SPECS[17] = COST
C3[3] = SPECS[14] \ C3[4] = SPECS[15] \ COST = SPECS[17]
BASEX = SPECS[20] \ X3 = SPECS[23] \ PCTYPE = SPECS[25] \ CONTRACT = SPECS[27]
L9[0] = PCTYPE
let prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If prcsrc >= 2 And prcsrc <= 4 Let SPCL = 1
If prcsrc >= 6 And prcsrc <= 8 Let SPCL = 1
If prcsrc >= 11 And prcsrc <= 13 Let SPCL = 1
IF prcsrc>=15 AND prcsrc<=16 LET SPCL=1

If C4[2] = 2 And Not(CONTRACT) And Not(SPCL)
  If BRACKET > 0
    SPECS[11] = BRACKET;SPECS[0] = 3;SPECS[20] = BASEX
    ! 
	Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
	!
    If SPECS[0] <> 0 Let SPECS[17] = COST;SPECS[23] = X3
    COST = SPECS[17];X3 = SPECS[23];BASEX = SPECS[20]
  Else 
    X3 = 0
  End If 
End If 
If PRFLAG = 2 If C4[2] <> 2 Gosub L_12100 \ If SGPRICE Goto L_2171
L_2170: Rem
L_2171: !
Gosub PRINT_LINE
LPEUN[2] = 0;PERM[0] = 0;PERM[1] = 0;BRKLVL = 0
let prntflag=1
Goto SORTFLE_LOOP
!
SetUp_Special: ! "Special/Contract Record
If custom_customer$<>"JPAPER" return
Let R1=R[CH_LastPrc]
Mat Read #CH_SpcPrc,R1,0;SP$;
Mat Read #CH_SpcPrc,r1,12;spc1;
Mat Read #CH_SpcPrc,r1,36;SPCUM;
Mat Read #CH_SpcPrc,r1,40;spcc3;
Read #CH_SpcPrc,r1,118;SPWH;
Let C4[2]=0 ! "Category?
Let C1[1]=0 ! "Order #
Let C3[0]=2 ! "price type
Let C3[1]=0 ! "dept
Let C3[2]=spcc3[2]  \ if C3[2]=0 Let C3[2]=SPCUM[0] ! "Sell UM
Let C3[3]=SPCUM[0] ! "price UM
lET LPC4[3]=0  ! "IT'S A PROD
!Let c6[3]=0 ! "it's a prod
Let C2[1]=0;C2[0]=0;C2[2]=0 ! "last qty/price/cost
Let UOM=C3[3]
Gosub jpGet_Prod:
Let P$=SP$
Let p2$[81,84]=P1$[152,155]
Return


L_3000: Rem GET CUSTOMER
J4$ = K1$[4,9]
Search #CH_CUST,2,1;J4$,V1,E
If E Goto L_3040
Mat Read #CH_CUST,V1,0;C1$;
Mat Read #CH_CUST,V1,142;CFC1;
Mat Read #CH_CUST,V1,194;C5;
Mat Read #CH_CUST,V1,348;A2$;
Goto L_3050
L_3040: Rem NG
C1$ = "ERROR! CUSTOMER NOT FOUND!!"
!
L_3050: Rem PRINT
P3 = CFC1[7]
Read #ARTermChan,C5[0],0;C5$;
Gosub L_3105
If j8
  tmp1$ = K1$[4,9],fdel$,RTrim$(C1$[31,60]),fdel$ !!customer
  tmp1$ = tmp1$,RTrim$(C1$[61,90]),fdel$
  tmp1$ = tmp1$,RTrim$(C1$[121,135]),fdel$
  tmp1$ = tmp1$,C1$[136,137],fdel$,RTrim$(A2$),fdel$
  If C1$[21,30] <> SPACE$[21,30]
    tmp1$ = tmp1$,"(",C1$[21,23],") ",C1$[24,26],"-",C1$[27,30],fdel$
  Else 
    tmp1$ = tmp1$,"",fdel$
  End If 
  tmp1$ = tmp1$,CFC1[2] Using "##",fdel$,RTrim$(S1$),fdel$ !!slsm
  tmp1$ = tmp1$,RTrim$(C5$),fdel$
  Goto L_3095
End If 
!
If Custom_customer$="HTBERRY" ! 8.5x11
	PRINT #0;"CUSTOMER: ";K1$[4,9];	!cct80330-custom for htberry(next 8 lines)
	PRINT #0; TAB 18;C1$[31,60]; TAB 52;"ACCOUNT"
	PRINT #0; TAB 18;C1$[61,90]; TAB 50;"EXECUTIVE: ";
	PRINT #0; USING "###";CFC1[2];" ";S1$[1,14]
	PRINT #0; TAB 18;C1$[121,135]; TAB 35;C1$[136,137]; TAB 39;A2$
	PRINT #0;" "
Else
	Print #0;"\15\";"CUSTOMER: ";K1$[4,9];
	Print #0; Using "##"; Tab 20;C1$[31,60]; Tab 60;"SLSM ";CFC1[2];" ";S1$
	Print #0; Tab 20;C1$[61,90]; Tab 60;"TERMS ";C5$
	Print #0; Tab 20;C1$[121,135]; Tab 37;C1$[136,137]; Tab 41;A2$;
	If C1$[21,30] <> SPACE$[21,30]
	  Print #0; Tab 52;"(";C1$[21,23];") ";C1$[24,26];"-";C1$[27,30]
	Else 
	  Print #0;""
	End If 
Endif
If F9 Print #0;U5$[1,79] \ Goto L_3095
Print #0;U5$
L_3095: ! 
if custom_customer$<>"HTBERRY"
	J1 = J1 + 3
Else
	PRINT #0;" "
Endif
Return 
!
L_3105: Rem GET SLSM NAME
K4$ = " ",K4$
K4$ = CFC1[2] Using "###"
Search #CH_SLSM,2,1;K4$,R4,E
If E Let S1$ = " *** NOT ON FILE ***" \ Goto L_3200
Mat Read #CH_SLSM,R4,0;S1$;
L_3200: Return 
!
L_3500: Rem GET PRODUCT
J2$ = P$[1,12]
Search #CH_PROD,2,1;J2$,R[CH_PROD],E
If E Goto L_3530
Mat Read #CH_PROD,R[CH_PROD],0;P1$;
Mat Read #CH_PROD,R[CH_PROD],256;A;
Mat Read #CH_PROD,R[CH_PROD],156;B;
Mat Read #CH_PROD,R[CH_PROD],512;PFU1;
Mat Read #CH_PROD,R[CH_PROD],554;PFU2;
Mat Read #CH_PROD,R[CH_PROD],894;C4;
Mat Read #CH_PROD,R[CH_PROD],938;PF_LOAD2;
Mat Read #CH_PROD,R[CH_PROD],620;LM; \ PREC[0] = R[CH_PROD]
If WHSE Gosub L_8100
Gosub L_12400
COST = B[8] \ If C2[2] = 0 Let C2[2] = B[8]
Gosub L_4500
Return 
!
L_3530: Rem NG
P1$ = " ",P1$ \ P1$[9,38] = "ERROR! PRODUCT NOT FOUND!!"
if custom_customer$="JPAPER"
	IF lpc4[3] LET P1$[9,38]=P2$[21,50] ! nonstk description field 1
	!IF C6[3] LET P1$[9,38]=P2$[21,50] ! nonstk description field 1
else
	If C6[3] Let P1$[9,38] = P2$[21,50]
endif
Return 
!
L_3800: Rem TOTAL PRINT
if custom_customer$<>"HTBERRY" ! berry - no totals
	Gosub L_8500
	Gosub L_8000
Endif
Return 
!
L_4100: Rem   SET VARIABLES FOR NON STOCKS
P1$[63,92] = P2$[51,80]
P1$[9,38] = P2$[21,50]
p1$[152,155]=p2$[81,84]
B[24] = LPC4[1]
PFU1[18] = 0;PACK = 0
B[8] = C2[2];COST = C2[2]
TYUNIT = C2[0];LYUNIT = 0
PFU1[0] = LPEUN[0];PFU1[1] = C3[2];PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[9] = C3[2]
PFU1[11] = C3[4]
PFU1[12] = C3[3]
X3 = C2[1]
Mat Read #CH_LASTPRC,R[CH_LASTPRC],220;PFU2;
Mat A = Zer
C4[2] = 0
gosub L_4500 ! get commod
Return 
!
L_4500: Rem COMMOD
K3$ = " ",K3$ \ K3$ = P1$[152,155]
Search #CH_COMMD,2,1;K3$,R[CH_COMMD],E
If E Goto L_4550
mat read #ch_commd,r[ch_commd],0;cdesc$;
Goto L_4580
L_4550: Rem ERR
CDesc$="COMMOD NOT FOUND"
!e$ = "Commodity ",K3$," not found!" \ Error 10000
!!Print @0,23;'RB CL';"COMMODITY NOT FOUND ";K3$
!!Signal 3,20 \ Print @0,23;'CE';
L_4580: Return 
!
manpent: ! on seq version - add manual product entry area
If j8 return ! not on xml
if j1+14>LJ9
	let j1=99
	gosub HEADER
Endif
Print #0;"" ! skip line
! use tmp$'s for ease of print
tmp$=".",tmp$;tmp$[106]=""
tmp1$=" ",tmp1$;tmp1$[1,1]="!";tmp1$[11,11]="!";tmp1$[18,18]="!"
tmp1$[36,36]="!";tmp1$[86,86]="!";tmp1$[98,98]="!";tmp1$[105]="!"
tmp2$=tmp$
tmp2$[1,2]="! ";tmp2$[10,12]=" ! ";tmp2$[17,19]=" ! "
tmp2$[35,37]=" ! ";tmp2$[85,87]=" ! ";tmp2$[97,99]=" ! ";tmp2$[104,105]=" !"
print #0;tmp$
print #0;"! QTY";tab 10;"! UNIT"; tab 17;"! ITEM #";
print #0;tab 35;"! DESCRIPTION";TAB 85;"! PRICE";
PRINT #0;TAB 97;"! UNIT";TAB 104;"!"
PRINT #0;tmp$ ! dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
Return
!
PRINT_LINE: Rem PRINT LINE
If j8
  If X3 If PRFLAG <> 2 Let SGPRICE = 0
  Gosub L_10000
  tmp$ = tmp1$,P2$[81,84],fdel$
  tmp$ = tmp$,RTrim$(P$[1,12]),fdel$
  tmp$ = tmp$,RTrim$(P1$[9,38]),fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,RTrim$(P1$[63,92]),fdel$
  If PRFLAG
    If PRFLAG = 2 And SGPRICE !  price margin
      tmp$ = tmp$,SGPRICE Using PMASK$,"/",PUNIT$
    Else 
      If Not(X3) And Not(SGPRICE)
        tmp$ = tmp$,"CALL"
      Else 
        tmp$ = tmp$,X3 Using PMASK$,"/",PUNIT$
      End If 
    End If 
    If SGPRICE Let tmp$ = tmp$,"*",fdel$ Else Let tmp$ = tmp$,"",fdel$
  End If 
  if custom_customer$="JPAPER"
		LET X2=C1[2] \ GOSUB isdunpack:
		If K1$[33,33]="*" Let X$="  N/A   "
	endif
  tmp$ = tmp$,X$[1,8],fdel$
  tmp$ = tmp$,C2[0] Using "######",fdel$,SUNIT$,fdel$
  if sortorder=2
	tmp$=tmp$,str$(sqno),fdel$
  Endif
  if PRLYR
	tmp$=tmp$,UWork[6] using "---------#.##","/",PUnit$,fdel$ !"last yr unts
  Endif
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  Return 
End If 
!
If custom_customer$<>"HTBERRY" ! standard
	If X3 If PRFLAG <> 2 Let SGPRICE = 0
	if sortorder<>2
		Print #0; Tab 80;S7$
	Endif
	Gosub L_10000
	Print #0; Tab 2;P$[1,12];
	Print #0; Tab 16;P1$[9,38];
	if sortorder<>2
		If PRFLAG
		  If PRFLAG = 2 And SGPRICE !  price margin
			Print #0; Using PMASK$; Tab 48;SGPRICE;"/";PUNIT$;
		  Else 
			If Not(X3) And Not(SGPRICE)
			  Print #0; Tab 48;"   CALL   ";
			Else 
			  Print #0; Using PMASK$; Tab 48;X3;"/";PUNIT$;
			End If 
		  End If 
		  If SGPRICE Print #0;"*";
		End If 
		if custom_customer$="JPAPER"
			LET X2=C1[2] \ GOSUB isdunpack:
			If K1$[33,33]="*" Let X$="  N/A   "
		endif
		Print #0; Tab 70;X$[1,8]; Tab 80;S7$
		Print #0; Tab 2;P2$[81,84];
		If P9$[26,26] = "Y" Print #0; Tab 16;P1$[63,92];
		If PRLYR
			If Fra(UWork[6])
			  Print #0; using "---------#.##";Tab 46;UWork[6];"/";PUnit$; !"last yr unts
			Else
			  Print #0; using "---------#";Tab 49;UWork[6];"/";PUnit$; ! "last yr unts
			Endif
		Endif
		if custom_customer$="JPAPER"
			If K1$[33,33]<>"*" ! "special/contract not purchased yet
				Print #0; Using "######/"; TAB 69;C2[0];
			Endif
			Print #0;Tab 76;SUNIT$; ! "sell unit/meas
		else
			Print #0; Using "######/"; Tab 69;C2[0];SUNIT$;
		endif
		Print #0; Tab 80;U5$[1,50]
	Else ! 1 line w/seq
		Print #0; using "###";tab 46;Sqno;
		print #0; tab 50;"______"; ! blank for ordering qty
		print #0; tab 57;SUNIT$; ! qty um
		if c2[0]
		print #0; Using "#######"; tab 62;c2[0]; ! last qty
		Endif
		if lpr[4]
		print #0; Using "#########"; tab 70;LPR[4]; ! ytd
		Endif
		tmp$="" \ if c1[2] let tmp$=PDate$(c1[2])
		print #0; tab 81;tmp$; ! last date
		print #0; tab 92;"______"; ! space for cust on hand
		! encode price/gp in to tmp$
		tmp2$="";x3[1]=0
		
		if x3 let x3[1]=x3
		if x3[1]=0 or prflag=2 let x3[1]=SGPRICE
		if x3[1]<=0 let x3[1]=C2[1]
		if prflag and x3[1]>0 ! wants price
		tmp2$=X3[1] using "#####.##" ! make sure at least 3
		Endif
		! tmp2$=ltrim$(tmp2$) ! strip lead spaces
		Print #0;tab 99;tmp2$;
		X3[2]=BSH[1] \ IF X3[2]<=0 LET X3[2]=BSH[3] ! cost - base
		X3[3]=BSH[0] \ IF X3[3]<=0 LET X3[3]=BSH[2] ! PRICE - base
		x3[4]=0
		if x3[3]>0 let x3[4]=FNR((x3[3]-x3[2])*100/x3[3]) ! gp %
		if x3[4]<0 let x3[4]=0
		!tmp2$=X3[4] Using "####.##"
		! tmp2$=LTrim$(tmp2$) ! strip spaces
		!print #0; tab 107;tmp2$; ! gp
		!if x3[4]<MinGPP print #0;"*"; ! min gp flag
		Print #0; tab 116;P2$[81,84];" ";cdesc$[1,10]
	Endif
Else ! HTBERRY CUSTOM
	! PRINT LINE ! -cct80330 entire routine custom for htberry
	PRINT #0; TAB 51;"|    / |    / |    / |    /"
	LET SUNIT$=" ",SUNIT$;SUNIT$="Err "
	!PRINT #0; TAB 80;S7$
	IF PFU1[9]>0 MAT  READ #12,PFU1[9],10;SUNIT$;
	IF PFU1[9]=-1 LET SUNIT$="CWT"
	PRINT #0; USING "#### ";COUNT; \ LET COUNT=COUNT+1
	PRINT #0;P$[1,12]; TAB 18;P1$[9,36];
	PRINT #0; TAB 47;SUNIT$[1,4];
	PRINT #0; TAB 51;"|  /   |  /   |  /   |  /"
	PRINT #0; TAB 19;P1$[63,90];
	PRINT #0; TAB 51;"|/_____|/_____|/_____|/_____"
Endif
Return 
!
HEADER: Rem HEADINGS ROUTINE
If j8 Gosub L_3000 \ Return 
!
If SCRN If F9 Let LJ9 = 17
If sortorder<>2
J1 = J1 + 3
Else
j1=j1+1 ! 1 line/prod
Endif
If J1 < LJ9 Return 
! If J2 > 0 Gosub L_8000
!!If J2 If SCRN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
if j1>99 and j2>0 let j2=0 \print #0;"\14\"; ! new page 1 every customer
If J2 If Not(SCRN) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 9
if custom_customer$="HTBERRY" let J1=17
F7 = 99
If Not(SCRN) Print #0;"\15\";
if custom_customer$<>"HTBERRY" ! standard
	Print #0; Tab (46 - Len(CNAME$) / 2);CNAME$;
	If WHSE Print #0; Tab 90;"WAREHOUSE";WHSE;
	Print #0; Tab 120;"PAGE";J2
	If F9 Print #0; Tab 33;"CUSTOMER  ORDER  SHEET"
	Print #0; Tab 35;" AS OF ";J8$
	Print #0;"\15\";
	Gosub L_3000 ! print customer
	if sortorder<>2
		Print #0; Tab 2;"ITEM CODE";
		If PRFLAG Print #0; Tab 55;"PRICE";
		Print #0; Tab 65;"LAST PURCHASE ";
		Print #0; Tab 90;"* * * * ORDER DATES AND QUANTITY * * * *";
		Print #0;" "
		Print #0; Tab 2;"COMMODITY";
		Print #0; Tab 16;"DESCRIPTION";
		If PRLYR
		  Print #0;Tab 52;"LAST YEAR";
		Endif
		
		Print #0; Tab 65;"DATE/QTY";
		Print #0; Tab 83;"/  /"; Tab 93;"/  /"; Tab 103;"/  /";
		Print #0; Tab 113;"/  /"; Tab 123;"/  /"
		Print #0;U5$
	Else ! 
		Print #0; Tab 2;"ITEM CODE";
		Print #0; Tab 16;"DESCRIPTION";
		! NEXT is seq#, space, um, last qty, ytd, date, space, coded price/gp, mingpflg, commod
		print #0; Tab 46;"SEQ"; Tab 50;"ORDER"; Tab 57;"UM"; tab 62;"LST QTY";
		print #0; Tab 73;"YTD QTY"; Tab 83;"LST SALE"; Tab 92;"ON HND";
		If Prflag Print #0; Tab 101;"PRICE";
		!pRINT #0; TAB 110;"GP%"; Tab 116;"COMMODITY"
		pRINT #0;  Tab 116;"COMMODITY"
	Endif
Else ! custom for Berry
	PRINT #0; TAB 27;"H. T. BERRY COMPANY, INC."; TAB 70;"PAGE";J2
	PRINT #0; TAB 30;"TEL  (617) 828-6000"
	PRINT #0; TAB 30;"FAX  (617) 828-9788"
	PRINT #0; TAB 28;"CUSTOMER  ORDER  SHEET"
	PRINT #0; TAB 32;"AS OF  ";J8$
	PRINT #0;"\215\";
	GOSUB L_3000:
	PRINT #0; TAB 2;"NO";
	PRINT #0; TAB 5;"ITEM CODE";
	PRINT #0; TAB 19;"DESCRIPTION";
	PRINT #0; TAB 47;"U/M";
	PRINT #0; TAB 53;"1/2"; TAB 60;"3/4"; TAB 67;"5/6"; TAB 74;"7/8"
	PRINT #0;" "
	PRINT #0;U5$[1,79]
Endif
Return 
!
DO_SORT: Rem SORT BY SLSM
A1$ = " ",A1$
CLEARSORT_LOOP: Rem
Search #CH_SORT,3,1;A1$,R[CH_LASTPRC],E
If Not(E)
  Search #CH_SORT,5,1;A1$,R[CH_LASTPRC],E
  If E Let e$ = "syserrorfile 114a sortfile mode (m)=5 keyno (k)=1 r=",R[CH_LASTPRC]," e=",E," keyval (k$)=",A1$ \ Error 10000
  Goto CLEARSORT_LOOP
End If 
If Not(j8) Print #0;" "
!!Print @0,22;" SORTING PLEASE WAIT . .  . . . .   . . ";'CL'
if custom_customer$="JPAPER" goto JPAPERSORT:
K1$ = " ",K1$
K1$ = X0 Using "######"
SORTLOOP: Rem
Search #CH_LASTPRC,3,1;K1$,R[CH_LASTPRC],E
If Not(E)
  If custom_Customer$="HTBERRY"
	IF NOT(FRA(SCOUNT[0]/100))	! "cct80330-"scount" custom for htberry
		!PRINT @24,23;
		!IF NOT(SCOUNT[1]) PRINT "-"'ML'; ELSE  PRINT "|"'ML';
		LET SCOUNT[1]=NOT(SCOUNT[1])
	ENDIF 
  Endif
  LET SCOUNT[0]=SCOUNT[0]+1
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],0;P$;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],16;C1;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],28;C2;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],140;C6;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],408;sqno;
  If Not(NSFLG) If C6[3] Goto SORTLOOP
  If P2$[81,84] < FSTCOMM$ Goto SORTLOOP
  If P2$[81,84] > LSTCOMM$ Goto SORTLOOP
  If C1[2] And (PDATETO Or PDATEFROM)
    X2 = C1[2] \ Gosub YMD2JUL \ If errflag Goto SORTLOOP
    If PDATEFROM And X2 < PDATEFROM_JUL Goto SORTLOOP
    If PDATETO And X2 > PDATETO_JUL Goto SORTLOOP
  End If 
  Read #CH_LASTPRC,R[CH_LASTPRC],46;C3;
  A1$ = " ",A1$
  J4$ = C1[0] Using "######"
  Search #CH_CUST,2,1;J4$,V1,E !!\ If E > 1 Gosub ERR_SEARCH
  If E Goto SORTLOOP
  Mat Read #CH_CUST,V1,0;C1$;
  Mat Read #CH_CUST,V1,142;CFC1;
  Mat Read #CH_CUST,V1,195;C5;
  If INDIVFLG
    K98$ = " ",K98$
    K98$ = CFC1[1] Using "######"
    !!The channel 98 is used to store the comma separated individual values for customers
    Search #SortChan,2,1;K98$,R[SortChan],E
    If E Goto SORTLOOP
  Else 
    If CFC1[1] < X0 Goto SORTLOOP
    If CFC1[1] > X5 Goto END_SORTLOOP
  End If 
  If CFC1[2] < S1 Goto SORTLOOP
  If CFC1[2] > S2 Goto SORTLOOP
  if a5[5]<>0
			if cfc1[2]<>a5[5]  goto sortloop:   !"cct#242616
		endif
  A1$[1,3] = CFC1[2] Using "###"
  A1$[4] = K1$
  If SORTORDER
    A1$[10] = P2$[81,84]
	if sortorder=2 
		if sqno<=0 let sqno=9999 ! zeros to end
		let a1$[10,13]=sqno using "####"
	Endif
    A1$[14] = K1$[7]
  End If 
  Search #CH_SORT,4,1;A1$,R[CH_LASTPRC],E
  If E Let e$ = "syserrorfile 114a sortfile mode (m)=4 keyno (k)=1 r=",R[CH_LASTPRC]," e=",E," keyval (k$)=",A1$ \ Error 10000
  Goto SORTLOOP
End If 
END_SORTLOOP: Rem
Return 

! ----- START JPAPER SORT
JPAPERSORT: ! START SORT FOR JERSEY PAPER
LET K4$=" ",K4$;NUMREC=0
LET K4$=X0 USING "######"
SEARCH #CH_CUST,2,1;K4$,R4,E ! \ IF E>1 GOSUB ERR_SEARCH:
IF NOT(E) GOTO JP_6010:
JPCUSTFLELOOP: REM "through all custs in range
SEARCH #CH_CUST,3,1;K4$,R4,E \ IF E=2 GOTO JP_6400:
IF E GOTO jp_6400: ! GOSUB ERR_SEARCH:
JP_6010: REM "
LET X2=K4$[1,6] \ IF X2>X5 GOTO JP_6400:
MAT  READ #CH_CUST,R4,0;C1$;
MAT  READ #CH_CUST,R4,142;CFC1;
IF CFC1[1]<X0 GOTO JPCUSTFLELOOP:
IF CFC1[1]>X5 GOTO JP_6400:
IF CFC1[2]<S1 GOTO JPCUSTFLELOOP:
IF CFC1[2]>S2 GOTO JPCUSTFLELOOP:
LET K1$=" ",K1$;K1$=K4$[1,6]
JPSORTLOOP: REM
SEARCH #CH_LASTPRC,3,1;K1$,R[CH_LASTPRC],E !\ IF E>2 GOSUB ERR_SEARCH:
 !IF E GOSUB ERR_SEARCH:
 if e<>0 goto JPLPLDONE:
 IF K1$[1,6]<>K4$[1,6] GOTO JPLPLDONE:
 MAT  READ #CH_LASTPRC,R[CH_LASTPRC],0;P$;
 MAT  READ #CH_LASTPRC,R[CH_LASTPRC],16;C1;
 MAT  READ #CH_LASTPRC,R[CH_LASTPRC],28;C2;
 MAT  READ #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
 MAT  READ #CH_LASTPRC,R[CH_LASTPRC],140;LPC4;
 LET NUMREC=NUMREC+1
 ! IF NOT(FRA(NUMREC/100)) PRINT @40,22;NUMREC;K4$
 IF NOT (NSFLG) IF LPC4[3] GOTO JPSORTLOOP:
IF P2$[81,84]<FSTCOMM$ GOTO JPSORTLOOP:
IF P2$[81,84]>LSTCOMM$ GOTO JPSORTLOOP:
IF C1[2] AND (PDATETO OR PDATEFROM)
  LET E=0
  LET X2=C1[2] \ GOSUB YMD2JUL: ! \ GOTO JPSORTLOOP:
  If E <> 0 And ERRFLAG <> 0 Goto JPSORTLOOP
  IF PDATEFROM AND X2<PDATEFROM_JUL GOTO JPSORTLOOP:
  IF PDATETO AND X2>PDATETO_JUL GOTO JPSORTLOOP:
ENDIF 
READ #CH_LASTPRC,R[CH_LASTPRC],46;C3;
LET A1$=" ",A1$
LET J4$=C1[0] USING "######"
SEARCH #CH_CUST,2,1;J4$,V1,E ! \ IF E>1 GOSUB ERR_SEARCH:
IF E GOTO JPSORTLOOP:
MAT  READ #CH_CUST,V1,0;C1$;
MAT  READ #CH_CUST,V1,142;CFC1;
MAT  READ #CH_CUST,V1,195;C5;
IF INDIVFLG
  LET K98$=" ",K98$
  LET K98$=CFC1[1] USING "######"
  SEARCH #98,2,1;K98$,R[98],E
  IF E GOTO JPSORTLOOP:
ELSE 
  IF CFC1[1]<X0 GOTO JPSORTLOOP:
  IF CFC1[1]>X5 GOTO END_JPSORTLOOP:
ENDIF 
IF CFC1[2]<S1 GOTO JPSORTLOOP:
IF CFC1[2]>S2 GOTO JPSORTLOOP:
LET A1$=" ",A1$
LET A1$[1,3]=CFC1[2] USING "###"
LET A1$[4,9]=K1$[1,6]
IF SORTORDER
  LET A1$[10,13]=P2$[81,84]
ELSE 
  LET A1$[10,13]="    "
ENDIF 
LET A1$[14,33]=K1$[11]
LET A1$[34]=R[CH_LASTPRC] USING "#########"
SEARCH #CH_SORT,4,1;A1$,R[CH_LASTPRC],E ! \ IF E GOSUB ERR_SEARCH:
GOTO JPSORTLOOP:
JPLPLDONE: REM "got to check spc/cont
IF NOT(INCLSCP) GOTO JPCUSTFLELOOP:
LET P1$=" ",P1$
MAT  READ #CH_CUST,R4,0;C1$;
MAT  READ #CH_CUST,R4,142;CFC1;
IF CFC1[1]<X0 GOTO JPCUSTFLELOOP:
IF CFC1[1]>X5 GOTO JP_6400:
IF CFC1[2]<S1 GOTO JPCUSTFLELOOP:
IF CFC1[2]>S2 GOTO JPCUSTFLELOOP:
LET A1$=" ",A1$;A1$[1,3]=CFC1[2] USING "###"
LET A1$[4,9]=CFC1[1] USING "######"
LET A1$[12]=" "
LET Z1=CFC1[1]
IF INCLSCP GOSUB JPGET_SPCCONT:
GOTO JPCUSTFLELOOP:
JPGET_SPCCONT: REM "check special/Contract files
LET K9$=A1$
LET K2$=" ",K2$;K2$=Z1 USING "######"
JPSPR_LOOP: REM "
SEARCH #CH_SPCPRC,3,1;K2$,R6,E \ IF E=2 GOTO JPCHK_CONTR:
IF E GOTO JPCHK_CONTR: ! IF E GOSUB ERR_SEARCH:
LET X2=K2$[1,6] \ IF X2<>Z1 GOTO JPCHK_CONTR:
LET NUMREC=NUMREC+1
! IF NOT(FRA(NUMREC/100)) PRINT @40,22;NUMREC;K4$
IF K2$[7,7]="*" OR K2$[7,7]="#" OR K2$[7,7]="&" GOTO JPSPR_LOOP:
LET SP$=K2$[7]
MAT  READ #CH_SPCPRC,R6,12;SPC1;
LET X2=SPC1[2] \ IF X2 GOSUB YMD2JUL: \ LET X2=0
IF JDATE[0]<X2 GOTO JPSPR_LOOP:
LET X2=SPC1[4] \ IF X2<>999999 GOSUB YMD2JUL: \ LET X2=99999
IF JDATE[0]>X2 GOTO JPSPR_LOOP:
READ #CH_SPCPRC,R6,118;SPWH;
IF WHSE AND SPWH AND SPWH<>WHSE GOTO JPSPR_LOOP:
GOSUB JPGET_PROD:
IF P1$[152,155]<FSTCOMM$ GOTO JPSPR_LOOP:
IF P1$[152,155]>LSTCOMM$ GOTO JPSPR_LOOP:
LET K3$=" ",K3$;K3$[1,9]=K9$[1,9]
IF SORTORDER
  LET K3$[10,13]=P1$[152,155]
ELSE 
  LET K3$[10,13]="    "
ENDIF 
LET K3$[14,25]=K2$[7]
LET K3$[34]=""
SEARCH #CH_SORT,2,1;K3$,R9,E !\ IF E>1 GOSUB ERR_SEARCH:
IF E=1 ! "not there already - add it
  LET K3$[34]=R6 USING "#########"
  LET K3$[33,33]="*"
  SEARCH #CH_SORT,4,1;K3$,R6,E !\ IF E>1 GOSUB ERR_SEARCH:
ENDIF 
GOTO JPSPR_LOOP:
JPCHK_CONTR: REM "contract's check
LET K2$=" ",K2$;K2$[1,1]="C"
JPSPCLOOP: REM "
SEARCH #CH_SPCPRC,3,1;K2$,R6,E \ IF E=2 GOTO JPSPCONTDONE:
IF E  GOTO JPSPCONTDONE: ! GOSUB ERR_SEARCH:
IF K2$[1,1]<>"C" GOTO JPSPCONTDONE:
LET NUMREC=NUMREC+1
! IF NOT(FRA(NUMREC/100)) PRINT @40,22;NUMREC;K4$
IF K2$[7,7]="*" OR K2$[7,7]="#" OR K2$[7,7]="&" GOTO JPSPCLOOP:
LET SP$=K2$[7]
MAT  READ #CH_SPCPRC,R6,12;SPC1;
LET X2=SPC1[2] \ IF X2 GOSUB YMD2JUL: \ LET X2=0
IF JDATE[0]<X2 GOTO JPSPCLOOP:
LET X2=SPC1[4] \ IF X2<>999999 GOSUB YMD2JUL: \ LET X2=99999
IF JDATE[0]>X2 GOTO JPSPCLOOP:
READ #CH_SPCPRC,R6,118;SPWH;
IF WHSE AND SPWH AND SPWH<>WHSE GOTO JPSPCLOOP:
LET K3$=" ",K3$
LET K3$=K2$[1,6];K3$[7]=Z1 USING "######"
SEARCH #CH_CNTRTH,2,3;K3$,R0,E ! \ IF E>1 GOSUB ERR_SEARCH:
IF E GOTO JPSPCLOOP:
GOSUB JPGET_PROD:
IF P1$[152,155]<FSTCOMM$ GOTO JPSPCLOOP:
IF P1$[152,155]>LSTCOMM$ GOTO JPSPCLOOP:
LET K3$=" ",K3$;K3$[1,9]=K9$[1,9]
IF SORTORDER
  LET K3$[10,13]=P1$[152,155]
ELSE 
  LET K3$[10,13]="    "
ENDIF 
LET K3$[14,25]=K2$[7]
LET K3$[34]=""
SEARCH #CH_SORT,2,1;K3$,R9,E !\ IF E>1 GOSUB ERR_SEARCH:
IF E=1 ! "not there already - add it
  LET K3$[34]=R6 USING "#########"
  LET K3$[33,33]="*"
  SEARCH #CH_SORT,4,1;K3$,R6,E ! \ IF E>1 GOSUB ERR_SEARCH:
ENDIF 
GOTO JPSPCLOOP:
end_jpsortloop: !
RETURN 

JPSPCONTDONE: REM "Done
LET A1$=K9$
RETURN 
JP_6400: REM "Done with Customers
RETURN 
JPGET_PROD: REM "
LET P1$=" ",P1$;jpKEY$=" ",jpKEY$
LET jpKEY$=SP$[1,12]
SEARCH #CH_PROD,2,1;jpKEY$,R[CH_PROD],E ! \ IF E>1 GOSUB ERR_SEARCH:
IF E RETURN 
MAT  READ #CH_PROD,R[CH_PROD],0;P1$;
RETURN 
!
L_8000: Rem FOOT NOTE
if sortorder=2 and j2 gosub manpent
Return 
!
L_8100: Rem GET WHSE
WHPROD$[1,12] = P1$[140,151]
WHBLD[0] = 17;WHBLD[1] = WHSE;WHBLD[2] = 0
Call "GETWHSE.dl4",WHPROD$,WHBLD[],W1$,W3[],WHPARC[],WHLV[],W7[],WHMISC[],E,e$,rstr$
If P9$[32,32] = "Y" Gosub L_69000
If WHBLD[2] > 0 Mat Read #CH_PRDWHSE,WHBLD[2],842;WHLM;
B[8] = W3[17];B[10] = W3[16];B[22] = WHPARC[0];B[21] = W3[15]
C4[3] = WHPARC[1];C4[4] = W3[18];PF_LOAD2 = W3[14]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
L_8500: Rem FOOTNOTE SPACE
Return 
!
L_9100: Rem END OF THIS RANGE
if prntflag<>0
	Gosub L_3800
endif
!!If SCRN Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto DONE
!
L_10000: Rem CONVERT   **************************************************
BSH[0]=X3;BSH[1]=COST;BSH[2]=C2[1];BSH[3]=C2[2]
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
X3 = X3 - L6[1]
If L6[0] Let X3 = X3 - (X3 * (L6[0] / 100))
If Not(X3) If SGPRICE Let X3 = SGPRICE
CNVTA = X3
Gosub CONVERT
X3 = FNP(AMOUNT)
If PRFLAG = 2 And SGPRICE !
  CNVTA = SGPRICE
  Gosub CONVERT
  SGPRICE = FNP(AMOUNT)
End If 
Let Cnvtu[2]=1;Cnvta=LPUnf[6]
Gosub Convert:
Let UWork[6]=Amount ! "Last Year units  Pricing U/M
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = C2[0]
Gosub CONVERT
C2[0] = AMOUNT
If C3[3] > 0 Mat Read #CH_CCODES,C3[3],10;PUNIT$;
If C3[2] > 0 Mat Read #CH_CCODES,C3[2],10;SUNIT$;
If C3[4] > 0 Mat Read #CH_CCODES,C3[4],10;CUNIT$;
If C3[3] = -1 Let PUNIT$ = "CWT "
If C3[3] = -2 Let PUNIT$ = "LOT "
If C3[3] = -3 Let PUNIT$ = "LB  "
If C3[4] = -1 Let CUNIT$ = "CWT "
If C3[4] = -2 Let CUNIT$ = "LOT "
If C3[4] = -3 Let CUNIT$ = "LB  "
CNVTU[0] = 0
CNVTU[1] = C3[4]
CNVTU[2] = 2
CNVTA = C2[2]
Gosub CONVERT
C2[2] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
CNVTA = C2[1]
Gosub CONVERT
C2[1] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = lpr[4]
Gosub CONVERT
LPR[4] = AMOUNT
Return 
!
L_12100: Rem GET SUGGESTED PRICE
SGPRICE = 0
If PRFLAG = 1 And P9$[13,13] <> "N" And P60$[33,33] <> "Y" And C3[0] = -7 And Not(X9) Goto L_12130
If PRFLAG = 2 And P60$[33,33] <> "Y" Goto L_12130
Goto L_12160
L_12130: !
If Not(C2[1]) Or Not(C2[2]) Goto L_12160
SGPRICE = COST
SGPRICE = SGPRICE + (SGPRICE * ((C2[1] - C2[2]) / C2[2]))
L_12160: Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA;B[8] = W3[17]
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA;PF_LOAD2 = W3[14]
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
! - JUL2DATE: Rem REM DATE JULIAN X2 TO X$
! - D3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",D3[],X$,FLAG
! - Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Let errflag = 1 \ Return 
X2 = X$[1,5]
Return !!1
!
! - JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
! - D3[0] = X2;D3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",D3[],X$,FLAG
! - Return 
!
BUILD_SORT98: Rem !!The channel 98 is used to store the comma separated individual values for customers
FS$ = "6/SORTWORKCUST",RTrim$(UserID$)
FILE$ = "[1:1] ",FS$
Try Kill FS$ Else Rem
SortChan = FindChannel()
Build #SortChan,FILE$
R[SortChan] = 25 \ Search #SortChan,0,1;FS$,R[SortChan],E \ If E Let e$ = "Can't build ",FS$ \ Error 10000
R[SortChan] = 1 \ Search #SortChan,0,0;FS$,R[SortChan],E \ If E Let e$ = "Can't build ",FS$ \ Error 10000
R[SortChan] = 0 \ Search #SortChan,1,0;FS$,R[SortChan],E \ If E Let e$ = "Can't build ",FS$ \ Error 10000
Return 
!
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
!
!Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
Rem ALL UB 5+!!  IF SPC 4>1280 GOTO cvtstartb: ! "unibasic 5+
Rem REM "======= unibasic <5 logic
Rem SWAP 1,"MXPRCONV"
Rem IF CNVTU[2]=3 or CNVTU[2]=4 GOTO cvtdone: ! "um window
Rem cvttry: ! "this is a remark
Rem SIGNAL 2,X1,AMOUNT,FLAG \ IF X1=-1 LET E=0 \ GOSUB err_search:
Rem IF X1<>SPC(6) GOTO cvttry:
Rem IF CNVTU[2]=0 GOTO cvtdone: !!TEST IF VALID CONVERSION
Rem IF FLAG LET E=FLAG \ GOSUB err_search:
Rem GOTO cvtdone:
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}
DONE: Rem EXIT ROUTINE
OUTEND: Rem
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section

  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!
!!Print 'CS'
!!Close #77
!!Chain "MX000C"
!!Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!Include src/callmainerrnet.inc
!include "src/callmainerrnet.inc"
! main error routine
If Spc(8) <> 10000
  Dim msc4$[100] \ msc4$ = Msc$(4)
  If Pos(msc4$, = "/",-1) Let msc4$ = msc4$[Pos(msc4$, = "/",-1) + 1]
  Call env(2,"PROGNAME",msc4$)
  Call programdump()
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
End If 
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[],rstr$)
End 
Rem {end rtn.error.s}
