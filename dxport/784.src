! >>> Program 784
!
! description Transaction, Inventory Balance Report
!
! loadsave -w -n 100,10 -o prog/dxport/784.dl4 src/784.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
! 
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  4, 2003  11:14:47
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx77/mx784.src (univ2) [txc] {53524}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX784  -- LOTFLE LISTING
Rem AUTHOR: EWR   DEC 31, 1983
Rem LAST UPDATE:
!
Declare Intrinsic Sub DateToJulian,InpBuf,JulianToDate,String,Time
! - Option Default Dialect IRIS1
Com 1%,COST,UNITX
Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10]
!!Window On 
Dim L1$[56],A$[156],T1$[15]
Dim 1%,L1[3],P1[1]
Dim 3%,T9,L2[5],AMOUNT,P3[4],R1
Dim X$[10],TName$[30]
Dim 2%,B[24],D1[1],LT3[1]
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim 1%,F,X1,2%,X2,3%,J,X3,TOTLOAD,TOTPR,GRTOTLOAD,GRTOTPR
Dim U9$[30],U3$[80],W$[60],Y7$[1],Y8$[1],Y$[80],P$[8]
Dim T9$[26],UNIT$[4],K5$[50],DATE$[10]
Dim U5$[50],W9$[9],D8$[8],K1$[50],K2$[20],K3$[20],K8$[50],K9$[50]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[100],tmp3$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
W9$ = "WATCH IT!"
W$ = W9$
W = 0
! - J0$ = "AB"
! - Gosub L_8000
J8 = Spc(5)
J$ = Int((J8 - Int(J8 / 16384) * 16384) / 64) Using "CNTRL# "
!Gosub L_7000
If Err 0 Let J8 = Spc(8)
J8 = 0 \ P = Chf(0)
If Err 0 Gosub ERR_TRAP
L8 = 60 \ If J8 Let L8 = 22
F = J8 \ P = 0
!!F = 0
!
!!If Err 0 Gosub ERR_ESCAPE
For I = 2 To 7
  Read L
  If Not(L) Goto L_852
  Read #1,88,L;J$;
  Ropen #I,J$
L_852: Next I
Read #1,3;U9$;
Data "2512","1792","1728","2528","1808","2400"
Mat Read #1,0,100;D8$;
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"784",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("PCOST",tmp1$) \ If tmp1$ = "" let tmp1$ = "N" else tmp1$ = "Y" !!CHECK
call dxget("COST",tmp$) \  COST = tmp$ !!DROP LIST 1, 2
call dxget("um",tmp$) \  UNITX = tmp$!!DROP LIST
call dxget("SPCODE",K8$) \ K8$ = UCase$(K8$),Blank$
call dxget("EPCODE",K9$) \ K9$ = UCase$(K9$),EndParam$
call dxget("SDATE",tmp2$) \ If tmp2$ = "" Let tmp2$ = "010170" 
call dxget("EDATE",tmp3$) \ If tmp3$ = "" Let tmp3$ = "123159" 
call dxget("WHSE",tmp$) \ L9 = tmp$
call dxget("PNAME",tmp$) \ dtl=0 \ if RTrim$(tmp$)<>"" let DTL=1
!
If tmp1$ = "N" let COST = 0
!
! verify product
K1$ = " ",K1$ \ K2$ = " ",K2$
!validation product code
If K8$ > K9$ Let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
K8$=K8$[1,12] \ K9$=K9$[1,12]
!
!validation starting date
K2$[13] = tmp2$[5,6],tmp2$[1,4]
DATE$ = " ",DATE$ \ DATE$ = K2$[13,18]
Call DateToJulian(1,DATE$,DATE$,E) \ If E let e$ = "Invalid starting date!" \ error 10000
D1[0] = DATE$
!
!validation ending date
K3$[13] = tmp3$[5,6],tmp3$[1,4]
DATE$ = " ",DATE$ \ DATE$ = K3$[13,18]
Call DateToJulian(1,DATE$,DATE$,E) \ If E let e$ = "Invalid ending date!" \ error 10000
D1[1] = DATE$
!validation date range
if D1[0] > D1[1] let e$ = "Invalid ending date, must be >= than starting date!" \ error 10000
!
!validations warehouse
If L9 < 0 Or L9 > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!!Gosub L_10500!!!!!!!!!!!!!
!L_864: L = 90
!D = 1
!P = 0
!L_880: Rem ENTER RANGE
!!Print @0,17;'CE';"ENTER PRODUCT CODE, <CR>:first, ''E'' TO EXIT:  ";
!!Input ""K8$ \ If K8$ = "E" Goto outend !!L_9010
!!If Len(K8$) > 12 Goto L_880
!K1$ = " ",K1$
!K1$[1,Len(K2$)] = K8$
!!L_895: !!Print @0,18;'CE';"ENTER ENDING PRODUCT CODE, <CR>:last, ''E'' TO EXIT:  ";
!!Input ""K9$ \ If K9$ = "E" Goto outend !!L_9010
!!If K9$ = "" Let K9$ = "}}}}}}"
!!If Len(K9$) > 12 Goto L_895
!L_900: !!Print @0,20;'CE';"ENTER STARTING DATE : 010170";'ML ML ML ML ML ML';
!!Input ""J2$
!If J2$ = "" Let J2$ = "010170" \ Goto SETDATE1
!If Len(J2$) <> 6 Goto L_900
!SETDATE1: J0$ = J2$[5,6],J2$[1,4]
!K2$ = K1$[1,12] \ K2$[13] = J0$[1,6]
!DATE$ = " ",DATE$;DATE$ = J0$[1,6]
!Call DateToJulian(1,DATE$,DATE$,E) \ If E Goto L_900
!D1[0] = DATE$
!L_910: !!Print @0,21;'CL';"ENTER ENDING DATE : 123159";'ML ML ML ML ML ML';
!Input ""J2$
!If J2$ = "" Let J2$ = "123159" \ Goto SETDATE2
!If Len(J2$) <> 6 Goto L_910
!SETDATE2: J0$ = J2$[5,6],J2$[1,4]
!K3$ = " ",K3$;K3$[1,Len(K9$)] = K9$;K3$[13] = J0$[1,6]
!DATE$ = " ",DATE$;DATE$ = J0$[1,6]
!Call DateToJulian(1,DATE$,DATE$,E) \ If E Goto L_910
!D1[1] = DATE$
!!If K8$ <= K9$ And D1[0] <= D1[1] Goto L_920
!!Print @0,23;'CE RB';"INVALID RANGE!" \ Signal 3,20 \ Goto L_880
!L_920:!! Print @0,22;'CL';"ENTER WAREHOUSE # OR <CR> FOR ALL : ";
!!Input ""K1$
!!L9 = K1$
!
L = 90 
D = 1 
P = 0
!
If J8
  tmp$ = "PRODUCT CODE",fdel$,"DESCRIPTION 1",fdel$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$,"ON HAND",fdel$,"QTY UM",fdel$,"TRANS#",fdel$
  tmp$ = tmp$,"DATE",fdel$,"WHSE",fdel$
  if DTL let tmp$=tmp$,"LOT",fdel$
  tmp$=tmp$,"SOURCE",fdel$,"COMMENT",fdel$
  If COST = 1 Let J4$ = "LOAD"
  If COST = 2 Let J4$ = "AVG."
  If COST Let tmp$ = tmp$, J4$," COST",fdel$
  tmp$ = tmp$,"PRICE",fdel$
  tmp$ = tmp$, "TC",fdel$,"TC DESCRIPTION",fdel$,"PLUS QTY",fdel$
  tmp$ = tmp$, "MINUS QTY",fdel$,"BALANCE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,23;'CL';"PRINTING ...  PLEASE WAIT ";
!!Signal 3,0 \ If L8 < 30 Print 'CS'
Search #3,2,1;K8$,R3,E
If Not(E) Goto L_1120
L_1100: 
Search #3,3,1;K8$,R3,E 
If E Goto OUTEND
L_1120: 
If K8$[1,Len(K9$)] > K9$[1,Len(K9$)] Goto OUTEND
K1$ = " ",K1$
PRINTD = 0
K1$ = K8$;K1$[13] = D1[0] Using "&&&&&"
L_2000: 
Search #2,3,2;K1$,R1,E 
If E Goto L_9100
If K1$[1,12] <> K8$[1,12] Goto L_9100
X2 = K1$[13,17]
If X2 < D1[0] Goto L_2000
If X2 > D1[1] Goto L_9100
Mat Read #2,R1,0;L1$;
Mat Read #2,R1,56;L1;
Mat Read #2,R1,64;L2; \ Mat Read #2,R1,106;LT3;
If L9 If L9 <> L1[1] Goto L_2000
If L1[0] = 13 Goto L_2000
A$ = L1$[1,12]
Search #3,2,1;A$,R3,E
If E = 0
  PRINTD = 9
  Gosub L_6000
  Gosub L_3200
  Gosub L_3000
  Gosub L_3100
  Gosub L_3050
  LET TNAME$=" ",TNAME$
  if dtl
	IF L1=1 OR L1=31 GOSUB L_3500: ! "GET VEND
	IF L1=3 OR L1=16 GOSUB L_3600: ! "GET CUST
  Endif
  Gosub L_5800
  Gosub L_5000
  If COST Gosub L_2200
endif
Goto L_2000
!
L_2200: Rem TOTALS CALC
TOTLOAD = TOTLOAD + UWORK[0]
GRTOTLOAD = GRTOTLOAD + UWORK[0]
TOTPR = TOTPR + UWORK[1]
GRTOTPR = GRTOTPR + UWORK[1]
Return 
!
L_3000: Rem CONVERSIONS HERE
UWORK[0] = 0;UWORK[1] = 0
If COST = 1 Let UWORK[0] = L2[3]
If COST = 2 Let UWORK[0] = L2[4]
UWORK[1] = L2[5]
UN[0] = 0
UN[0] = PFU1[UNITX + 7]
Return 
!
L_3050: 
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1
CNVTA = L2[2] \ Gosub L_20000
L2[2] = AMOUNT
CNVTU[2] = 2;CNVTA = UWORK[0]
Gosub L_20000 \ UWORK[0] = AMOUNT
CNVTU[2] = 2;CNVTA = UWORK[1]
Gosub L_20000 \ UWORK[1] = AMOUNT
Return 
!
L_3100: Rem PRODUCT CONVERT
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1
CNVTA = A[0] \ Gosub L_20000
A[0] = AMOUNT
UNIT$ = "    "
If UN[0] > 0 Read #4,UN[0],10;UNIT$;
Return 
!
L_3200: Rem GET WHSE ON HAND
A[0] = 0;K5$ = " ",K5$
K5$[1,12] = A$[140,151]
L_3220: 
Search #5,3,2;K5$,R5,E
if E = 2 Return 
If K5$[1,12] <> A$[140,151] Return 
Mat Read #5,R5,66;P1;
If L9 If L9 <> P1[0] Goto L_3220
Mat Read #5,R5,82;P3;
A[0] = A[0] + P3[0] - P3[1]
Goto L_3220

L_3500: ! GET VENDOR
LET VEND=L1$[42,47]
IF VEND<=0 OR VEND>999999 OR FRA(VEND)
	LET TNAME$=" ",TNAME$
ELSE 
	LET J3$=VEND USING "######"
	SEARCH #7,2,1;J3$,R7,E  ! \ IF E>1 GOSUB Err_Search:
	IF NOT(E)
		MAT  READ #7,R7,0;TNAME$;
	ELSE 
		LET TNAME$="VENDOR NOT ON FILE"
	ENDIF 
ENDIF 
RETURN 

L_3600: ! GET CUSTOMER
LET CUST=L1$[43,48]
IF CUST<=0 OR CUST>999999 OR FRA(CUST)
	LET TNAME$=" ",TNAME$
ELSE 
	LET J3$=CUST USING "######"
	SEARCH #6,2,1;J3$,R6,E ! \ IF E>1 GOSUB Err_Search:
	IF NOT(E)
		MAT  READ #6,R6,30;TNAME$;
	ELSE 
		LET TNAME$="CUSTOMER NOT FOUND"
	ENDIF 
ENDIF 
RETURN
!
L_4000: Rem TOTAL PRINT
If J8 Return
Gosub L_5800
Print #0;'CR';" ** END **  ";K8$[1,12] \ Goto L_4050
Print #0;'CR';" ** TOTALS FOR  **  ";K8$[1,12];
Print #0; Using "$$$$$#.#####"; Tab 52;TOTLOAD;
Print #0; Using "$$$$$#.#####"; Tab 65;TOTPR;
TOTLOAD = 0 \ TOTPR = 0
L_4050: 
If L8 < 30 Print #0;"\15\\15\"
L = 90
Return 
!
L_4300: Rem READ TC
J = L1 - 1
Read #1,108,J * 15;T1$[1,15];
Return 
!
L_5000: Rem PRINT LINE
If J8
  tmp$ = rtrim$(A$[140,151]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,38]),fdel$,rtrim$(A$[63,92]),fdel$
  tmp$ = tmp$, A[0],fdel$,UNIT$,fdel$
  tmp$ = tmp$, Str$(R1),fdel$ !  Using "#######",fdel$
  X2 = LT3[0] \ Gosub L_8900
  tmp$ = tmp$, P$[1,8],fdel$
  tmp$ = tmp$, L1[1] Using "##", fdel$ ! whse
  if dtl
	tmp$=tmp$,RTrim$(l1$[13,24]),fdel$ ! lot
  Endif
  tmp$ = tmp$, rtrim$(L1$[25,36]),fdel$
  tmp$ = tmp$, rtrim$(L1$[37,56]) 
  if rtrim$(tname$)<>"" let tmp$=tmp$,"  ",RTrim$(TName$)   ! add to name to field
  tmp$=tmp$,fdel$
  If COST Let tmp$ = tmp$, UWORK[0] Using "$$$$$#.#####",fdel$
  tmp$ = tmp$, UWORK[1] Using "$$$$$#.#####",fdel$
  tmp$ = tmp$, L1 Using "##",fdel$
  Gosub L_4300
  tmp$ = tmp$, rtrim$(T1$),fdel$
  If L1 >= 15 Let L2[2] = - L2[2]
  If L2[2] >= 0 Let tmp$ = tmp$, L2[2] Using "#######.##",fdel$,"",fdel$
  If L2[2] < 0 Let tmp$ = tmp$, "",fdel$,L2[2] Using "#######.##",fdel$
  If L1 = 15 
    tmp$ = tmp$,"",fdel$
  Else
    T9 = T9 + L2[2]
    tmp$ = tmp$, T9 Using "---------#.##",fdel$
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
Print #0; Using "#######";R1;
X2 = LT3[0]
Gosub L_8900
Print #0; Tab 8;P$[1,8];
Print #0; Using "##"; Tab 17;L1[1];
Print #0; Tab 20;L1$[25,36];
IF DTL
	PRINT #0; TAB 45;L1$[13,24];
ELSE 
	Print #0; Tab 32;L1$[37,56];
ENDIF
If Not(COST) Goto L_5037
PRINT #0; USING "$$$$$#.#####"; TAB 58;UWORK[0];
L_5037: PRINT #0; USING "$$$$$#.#####"; TAB 70;UWORK[1];
PRINT #0; USING "##"; TAB 82;L1;
GOSUB L_4300:
PRINT #0; TAB 85;T1$[1,13];
IF L1>=15 LET L2[2]=-L2[2]
IF L2[2]>=0 PRINT #0; USING "#######.##"; TAB 98;L2[2];
IF L2[2]<0 PRINT #0; USING "#######.##"; TAB 108;L2[2];
If L1 = 15 Goto END_PRINT_LINE
T9 = T9 + L2[2]
Print #0; Using "---------#.##"; Tab 118;T9;
END_PRINT_LINE: 
Print #0;""
IF DTL
	PRINT #0; TAB 20;L1$[37,56];
	IF L1=1 OR L1=31 OR L1=3 OR L1=16 PRINT #0; TAB 40;TNAME$;
	PRINT #0;""
	LET L=L+1
ENDIF
Return 
!
L_5500: Rem PRINT PRODS
Print #0;A$[140,151];
Print #0; Tab 15;A$[9,38]; Tab 50;A$[63,92];
Print #0; Tab 80;" ON HAND ";A[0];" ";UNIT$
Return 
!
L_5800: 
If J8 Return
!
L = L + 1
If L < L8 Return 
If P = 0 Goto L_5810
!!If L8 = 22 Print 'CR'; \ Input "PRESS <CR> TO CONTINUE "X$
!!If L8 = 22 Print 'CS';
L_5810: 
If P Print #0;"\14\";
T9$ = "" \ Call Time(T9$)
Print #0;'CR';" - 784 - ";T9$;
Print #0; Tab (Int(66 - Len(U9$) / 2));U9$
P = P + 1
Print #0; Tab 10;"DATE: ";D8$;
Print #0; Tab 38;"I N V E N T O R Y   T R A N S A C T I O N   M O D U L E ";
Print #0; Tab 110;"PAGE";P
Print #0; Tab 40;"PERIODS ";
Print #0;K2$[15,16];"/";K2$[17,18];"/";K2$[13,14];"  TO  ";
Print #0;K3$[15,16];"/";K3$[17,18];"/";K3$[13,14];
If L9 Print #0;"    WAREHOUSE #";L9
If Not(L9) Print #0;"  ALL WAREHOUSES"
Print #0;" "
Print #0;"TRANS#"; Tab 8;" DATE"; Tab 16;; Tab 20;"SOURCE/DEST COMMENT";
IF DTL PRINT #0; TAB 45;"LOT";
LET J4$=" " \ IF COST=1 LET J4$="LOAD"
IF COST=2 LET J4$="AVG."
IF COST PRINT #0; TAB 59;J4$;" COST"; TAB 75;"PRICE";
PRINT #0; TAB 81;" TC"; TAB 85;"TC DESCRIPTION"; TAB 101;"PLUS QTY";
PRINT #0; TAB 111;"MINUS QTY"; TAB 123;"BALANCE";
Print #0;"\15\"
Gosub L_5500
Print #0;"\15\";
L = 8
Return 
!
L_6000: Rem READ PROD FILE
Mat Read #3,R3;A$;
Mat Read #3,R3,156;B;
Mat Read #3,R3,256;A;
Mat Read #3,R3,512;PFU1;
Mat Read #3,R3,554;PFU2;
Return 
!
!!L_7000: Rem GET PRINTER TYPE
!!F = 0
!!If Err 0 Let F = Spc(8)
!!P = Chf(0)
!!L8 = 60
!!If F Let L8 = 22
!!F = 0
!!P = 0
!!Return 
!!Signal 3,20
!!Goto outend !!L_9010
!!stop!!!!!write
!!F = 0
!!Write #1,1,12;F;
!!Return 
! - L_8000: Rem SELECT REPORT
! - Print 'CS';@0,0;"-MX784-";@20,0;"TRANSACTION FILE REPORT SELECTOR"
! - Print @20,6;"0....INVENTORY BALANCE REPORT "
! - Print @20,7;"1....IN ITEM / DATE / TIME ORDER"
! - Print @20,8;"2....IN DATE / TIME  ORDER"
! - Print @20,9;"3....RETURN TO MENU"
! - Print @20,12;"ENTER NUMBER TO PRINT ";
! - Input ""X$ \ If X$ = "3" Goto OUTEND
! - If Len(X$) > 1 Goto L_8000
! - X2 = X$ \ If X2 > 2 Goto L_8000
! - Gosub L_10500
! - If X2 <= 0 Return 
! - J4$ = "MX784" \ X$ = J0$[X2,X2]
! - J4$[6,6] = X$[1,1]
! - Chain J4$
!
L_8900: Rem CONVERT DATE FROM JULIAN
DATE$ = " ",DATE$;DATE$ = X2 Using "&&&&&"
Call JulianToDate(1,DATE$,DATE$,E) !!\ If E Gosub ERR_SEARCH
P$ = " ",P$
P$ = DATE$[1,8]
Return 
!
!OUTEND: Rem EXIT ROUTINE
!!If L8 = 22 Print 'CR'; \ Input "PRESS <CR> TO EXIT "X$
!L_9010:!! Print 'CS'
!Close 
!Chain "MX000"
!Stop 
L_9100: Rem END OF THIS RANGE
If Not(PRINTD) Goto L_9130
Gosub L_4000
L_9130: T9 = 0
Goto L_1100
!
Rem
!!Print #0;"\15\\15\";
!!Print #0; Tab 10;"GRAND TOTALS";
!!Print #0; Using "$$$$$#.#####"; Tab 52;GRTOTLOAD;
!!Print #0; Using "$$$$$#.#####"; Tab 65;GRTOTPR
!!GRTOTLOAD = 0 \ GRTOTPR = 0
!!Print 'CR'; \ Input "PRESS <CR> TO CONTINUE "X$
!!Stop 
!!L_10500: Rem SELECT UNIT
!!Window Open @5,4; Size 70,14; Using " SELECT COST & UNIT "
!L_10520:!! Print 'CS'
!!COST = 0 \ If X2 = 7 Let U5$ = "Y" \ Goto L_10525
!!Print @5,1;"PRINT COST ON REPORT? (Y/N)   ";
!!Input ""U5$ \ If U5$ = "N" Goto L_10530
!!If U5$ <> "Y" Goto L_10520
!L_10525:!! Print @5,2;"Enter Cost: 1) LOADED, 2) AVERAGE  ";
!!L_10530: !!Print @5,4;" 1) STOCK   "; Tab 45;" 3) PURCHASING "
!!Print @5,5;" 2) SELL   "; Tab 45;" 4) COST "
!!Print @45,6;" 5) PRICING "
!!Print @6,8;"Enter unit to use on the report  ";
!!If U5$ = "N" Goto L_10580
!L_10560: !!Print @40,2; \ Input ""UNIT$
!!COST = UNIT$
!!If COST < 1 Or COST > 2 Goto L_10560
!L_10580:!! Print @40,8; \ Input ""UNIT$
!!UNITX = UNIT$
!!If UNITX < 1 Goto L_10520
!!If UNITX > 5 Goto L_10520
!U5$ = " ",U5$
!If UNITX = 1 Let U5$ = "STOCK U/M "
!If UNITX = 2 Let U5$ = "SELL U/M "
!If UNITX = 3 Let U5$ = "PURCH. U/M "
!If UNITX = 4 Let U5$ = "COSTING U/M"
!If UNITX = 5 Let U5$ = "PRICING U/M"
!Window Close 
!!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!!If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
OUTEND: Rem EXIT ROUTINE
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
try call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
