! >>> Program 492
!
! description Warranty Claim Form Print
! loadsave -w -n 100,10 -o prog/dxport/492.dl4 src/492.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem  SN492    CLAIM FORM PRINT
Rem
Rem AUTHOR:  ubs   July 23, 1993
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY  1, 2001  09:29:52
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx1/sn492.src (univ2) [kag] {48118}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray

If Err 0 Gosub ERR_TRAP
Dim 2%,intco
Dim rstr$[5000],Message$[600]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim K1$[30],K2$[30],K3$[40],K4$[50],K5$[50]
Dim CLM$[114],CLM1$[42],SN$[224],VN$[264],VENDITM$[20]
Dim J$[30],J8$[8],A$[156],PSN$[20],V$[80]
Dim J7$[70],J8$[8],X$[10],FAX$[18]
Dim 1%,CLM1[1],SN1[2],V9[5]
Dim 3%,CLM2[2],SN3[6],A3[7]
Dim 2%,DT3[1],JARDATE,JWDATE,SCRATCH$[80]
Dim 2%,B[24],D8,CLM[4],SN2[9],3%
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
For J = 2 To 5
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$[1,16];
  Open #J,J$
L_830: Next J
Data "1472","416","2400","1792"
Read #CTLC,0,108;D8;
Mat Read #CTLC,0,100;J8$;
X2 = D8 \ Gosub L_7820 \ X2 = 0
If X2 Let JARDATE = X2 Else Gosub L_7650
V$ = "\15\",V$
V9[0] = 0;V9[1] = 1;V9[3] = 66
returnstatus=0 ! 0 = okay on blockid
Message$="OK"
! Gosub L_8200 ! can't align?
L_900: Rem SCREEN
!Print 'CS ED';@0,0;"CLAIM FORM PRINT";@50,0;"SN492"
!Print @0,4;"Enter Claim/Repair #, <CR>: exit   ";
!Input ""J$ \ 
Call dxget("CLAIMNO",J$)
If J$ = "" Goto OUTEND
CLAIM = J$ \ If CLAIM <= 0 Goto L_1200
K1$ = " ",K1$;K1$[1,6] = CLAIM Using "######"
K1$[7] = ""
Search #2,2,1;K1$,R2,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_1200
X2 = K1$[7] \ If X2 <> 0 Goto L_1200
Goto L_1900
Goto OUTEND ! L_900
L_1200: Rem NOT FOUND
Returnstatus=1
Message$ = "CLAIM NUMBER NOT FOUND!" ! \ Gosub L_7600
Goto OUTEND ! L_900
L_1900: Rem CHECK IF PRINTED
Gosub L_6000 ! read claimfle
goto L_1950 ! cannot ask reprint - just do it!
!If CLM[3] = 0 Goto L_1950
!X2 = CLM[3] \ Gosub L_7700
!L_1930: Print @0,10;'RB CL';" Claim ";K1$[1,6];" was printed on ";X$[1,8];". REPRINT? (Y/N)  ";
!Input ""J$ \ Print @0,10;'CL';
!If J$ = "N" Goto L_900
!If J$ <> "Y" Goto L_1930
L_1950: Gosub L_2000
Goto OUTEND ! L_900
L_2000: Rem PRINT IT
V9[0] = 0;V9[1] = 1
Gosub L_6000
Gosub L_4200
Gosub L_4000 ! return=nogood, +1=okay
SN$ = " ",SN$
Gosub L_4300
J$ = A3[1] Using "##########" \ If A3[1] = 0 Let FAX$ = " ",FAX$ \ Goto L_2080
FAX$ = " ",FAX$;FAX$ = J$[1,3],"-",J$[4,6],"-",J$[7,10]
L_2080: ! Print @0,10;'CL';"PRINTING CLAIM ";K1$ \ Signal 3,0
VENDITM$ = " ",VENDITM$
VENDITM$ = CLM1$[1,12]
If B[24] = CLM[1] Let VENDITM$ = A$[93,112]
If SN$[65,68] = "    " Or SN$[65,65] = "" Let SN$[65,84] = PSN$[1,20]
If SN$[85,88] = "    " Or SN$[85,85] = "" Let SN$[85,114] = A$[9,38]
If SN$[115,118] = "    " Or SN$[115,115] = "" Let SN$[115,144] = A$[63,92]
Gosub L_5800
Gosub L_5000
Gosub L_3000
Return 
L_3000: Rem RECORD DATE SENT
Mat Read #2,R2,0;CLM
X2 = CLM[3] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE < JARDATE Let CLM[3] = D8
Mat Write #2,R2,0;CLM;
Return 
L_4000: Rem GET SERIAL INFO
K3$ = " ",K3$;K3$ = CLM1$[13,42]
Search #3,2,1;K3$,R3,E
If E = 0 Goto L_4055
If E > 1 Gosub ERR_SEARCH
L_4035: Rem NEW?
J7$ = "SERIAL NUMBER NOT FOUND!"
! Gosub L_7600
Return 
L_4055: Rem SEE IF ANOTHER
Mat Read #3,R3,0;SN$;
If Z9 = 0 If SN$[1,12] <> CLM1$[1,12] Goto L_4035
If SN$[1,12] = CLM1$[1,12] Goto L_4180
K2$ = K3$;S1 = 1
L_4080: Search #3,3,1;K2$,R1,E
If E Goto L_4170
If K2$[1,30] <> K3$[1,30] Goto L_4170
Mat Read #3,R1,0;SN$;
If SN$[1,12] = CLM1$[1,12] Goto L_4115
S1 = S1 + 1
R3 = R1;K3$ = K2$ \ Goto L_4080
L_4115: Rem
R3 = R1;K3$ = K2$
Goto L_4170
L_4170: Rem
L_4180: Gosub L_6200
Return 1
L_4200: Rem GET VEND NAME
If CLM[1] = 0 Goto L_4280
K4$ = " ",K4$;K4$ = CLM[1] Using "######"
Search #4,2,1;K4$,R4,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_4250
Mat Read #4,R4,0;VN$;
Mat Read #4,R4,498;A3;
Return 1
L_4250: Rem NO GOOD
VN$ = "ERROR VENDOR NOT FOUND!";A3[1] = 0
Return 
L_4280: Rem NO VENDOR
VN$ = "VENDOR NOT ON FILE";A3[1] = 0
Return 1
L_4300: Rem PRODUCT FILE
K5$ = " ",K5$;K5$ = CLM1$[1,12]
Search #5,2,1;K5$,R5,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_4360
Mat Read #5,R5,0;A$;
Mat Read #5,R5,156;B;
Mat Read #5,R5,632;PSN$;
Return 
L_4360: Rem NO GOOD
A$ = " ",A$
B[24] = -99
PSN$ = " ",PSN$
Return 
L_5000: Rem PRINT CLAIM LINE (8 LINES)
Print #0; Using "######"; Tab 5;CLM[0];
X2 = CLM[2] \ Gosub L_7700
Print #0; Tab 14;X$; Tab 23;VENDITM$; Tab 45;SN$[65,84];
Print #0; Using "-$$$$$$#.##"; Tab 65;(CLM2[1] - CLM2[2])
Print #0; Tab 23;SN$[85,114]
Print #0; Tab 23;SN$[115,144]
Print #0;""
Print #0; Tab 12;"SERIAL NO: ";CLM1$[13,42]
Print #0;""
Print #0; Tab 20;"PROBLEM: ";CLM$[55,84]
Print #0; Tab 28;CLM$[85,114]
Print #0;""
V9[1] = V9[1] + 9
Return 
L_5800: Rem HEADER
V9[2] = 7 \ Gosub L_8000
Print #0; Tab 50;"DATE: ";J8$;
V9[2] = 10 \ Gosub L_8000
Print #0; Tab 10;"TO: ";
Print #0; Tab 15;VN$[1,30]; Tab 50;"PHONE: ";VN$[117,128]
Print #0; Tab 15;VN$[31,60]; Tab 50;"FAX:   ";FAX$[1,12]
Print #0; Tab 15;VN$[61,90]
Print #0; Tab 15;VN$[91,105];", ";VN$[106,107];" ";VN$[108,112];
If VN$[113,113] <> " " Print #0;"-";VN$[113,116];
Print #0;"" \ V9[1] = V9[1] + 4
V9[2] = 16 \ Gosub L_8000
Print #0; Tab 5;"REPAIR #"; Tab 16;"DATE";
Print #0; Tab 23;"ITEM CODE"; Tab 45;"MODEL";
Print #0; Tab 64;"CLAIM AMOUNT";
V9[2] = 18 \ Gosub L_8000
Return 
L_6000: Rem READ CLAIM
Mat Read #2,R2,0;CLM;
Mat Read #2,R2,20;CLM1;
Mat Read #2,R2,24;CLM2;
Mat Read #2,R2,42;CLM$;
Mat Read #2,R2,156;CLM1$;
Return 
Mat Write #2,R2,0;CLM;
Mat Write #2,R2,20;CLM1;
Mat Write #2,R2,24;CLM2;
Mat Write #2,R2,42;CLM$;
Mat Write #2,R2,156;CLM1$;
Return 
L_6200: Rem READ SERIAL
Mat Read #3,R3,0;SN$;
Mat Read #3,R3,290;SN1;
Mat Read #3,R3,298;SN2;
Mat Read #3,R3,342;SN3;
Return 
L_7600: Return 
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) \ If E Gosub ERR_SEARCH
D8 = X$
Call DateToJulian(1,X$,X$,E) \ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JARDATE = X2
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
if x2<=0 return
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem "============= vertical forms control  ---  move to line set in V9[2]
If V9[1] >= V9[2] Return 
Print #0;V$[V9[1],V9[2] - 1];
V9[1] = V9[2]
Return 
V9[2] = V9[3] + 1
If V9[3] = 66 Print #0;"\14\"; \ Goto L_8080
Gosub L_8000
L_8080: V9[1] = 1
Return 
L_8200: Rem ALIGNMENT
Return 
L_8210: !
CLM$ = "X",CLM$;VN$ = "X",VN$;SN$ = "X",SN$
CLM1$ = "X",CLM1$;VENDITM$ = "X",VENDITM$
CLM[0] = 999999;CLM[2] = 999999;CLM2[1] = 999999.99
FAX$ = "X",FAX$
Gosub L_5800
Gosub L_5000
Goto L_8210
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/cfp492se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
OUTEND: Rem EXIT ROUTINE
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
Rem {end rtn.error.s}
End