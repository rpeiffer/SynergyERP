! >>> Program 456a
!
! description Salesman Customer MTD/YTD Summary
!
! loadsave -w -n 100,10 -o prog/dxport/456a.dl4 src/456a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 12, 2004  16:28:49
Rem /w/papermaster/r2002//usr/acct/bill/work/r2002/mx/mx456a.src (univ2) [bill] {38834}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX456A --- SALESMAN / CUSTOMER REPORT (SORTED)
Rem
Rem REV. 3.0 - 01/19/91
!
Declare Intrinsic Sub InpBuf,String
! - Option Default Dialect IRIS1
Com 1%,MONTH_[4]
Com MTH$[108]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim 1%,CALARMONTH,ARMONTH,X,BOYMONTH,EOYMONTH
Dim 2%,SSLSM,ESLSM,S1$[118],C1[12],D9[5],V9[4],I,I1
Dim 3%,T1[12,2],T2[12,2],T4[12,2],T5[12,2],S1[12,2],S2[12,2]
Dim 3%,C2[12,2],H2[12,2],Z1,ZZ1[12,2],ZZ2[12,2]
Dim 3%,TOT_SALES,TOT_COSTS,GR_TOT_SALES,GR_TOT_COSTS,TOT_SLSMN_COSTS
Dim 3%,TYR,LYR,PCTR
Dim J$[16],K1$[30],K2$[30],K3$[30],K5$[4],BREAK$[30],K7$[30]
Dim A1$[142],CNAME$[30],X$[10],ARDATE$[8],Z1$[50],MASK$[20],M1$[40]
Dim MONTH_HDG$[10],MONTH_HDG2$[10]
For I = 2 To 5
  Read X \ If X = -1 Goto L_825
  Read #1,88,X;J$;
  Ropen #I,J$
L_825: Next I
Data "2016","-1","1808","1824"
Read #1,3;CNAME$;
Mat Read #1,115;D9;
Read #1,0,120;CALARMONTH;
Mat Read #1,51,72;EOYMONTH;
Mat Read #1,51,74;BOYMONTH;
MASK$ = "----,---,--# "
M1$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
If Err 0 Let J8 = Spc(8)
J8 = 0;V9[4] = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
V9[4] = 60 \ If J8 Let V9[4] = 20
If J8 Let SCRPRT = 99
V9[0] = 0;V9[1] = 100
If CALARMONTH < BOYMONTH !   "armonth based on fiscal year
  ARMONTH = 13 - BOYMONTH + CALARMONTH
Else 
  ARMONTH = CALARMONTH - BOYMONTH + 1
End If 
MONTH_HDG$ = " ",MONTH_HDG$ \ MONTH_HDG2$ = " ",MONTH_HDG2$
MONTH_HDG$[1,3] = M1$[(BOYMONTH - 1) * 3 + 1,(BOYMONTH - 1) * 3 + 3]
MONTH_HDG$[5,5] = "-"
MONTH_HDG$[7,9] = M1$[(CALARMONTH - 1) * 3 + 1,(CALARMONTH - 1) * 3 + 3]
MONTH_HDG2$[1,6] = MONTH_HDG$[1,6]
MONTH_HDG2$[7,9] = M1$[(EOYMONTH - 1) * 3 + 1,(EOYMONTH - 1) * 3 + 3]
!
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"456a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("sslsm",tmp$) \ SSLSM=tmp$ ! starting salesman
Call dxget("eslsm",tmp$) \ if tmp$="" let ESLSM=999 else ESLSM=tmp$ ! ending salesman
Call dxget("whse",tmp$) \ WHSE=tmp$ ! warehouse
Call dxget("slsless",tmp$) \ if tmp$="" let SLSLESS=0 else SLSLESS=1 ! print cur year < last year
!!!  dx end
!
if SSLSM<0 or SSLSM>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
!
if ESLSM<SSLSM or ESLSM>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
If WHSE < 0 Or WHSE > D9[5] let e$="Invalid warehouse, must be between 0 and ",D9[5]," !" \ error 10000
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

! - L_1000: Rem "============================================= GET RANGES
! - Print 'CS'
! - Print @50,0;"MX456A";@0,0;"SALESMAN / CUSTOMER SALES REPORT"
! - Print @0,8;'CL';" 1> ENTER STARTING SLSM, <CR> FOR FIRST, OR  E: TO EXIT: ";
! - Print @0,10;'CL';" 2> ENTER ENDING   SLSM, <CR> FOR LAST,  OR  E: TO EXIT: ";
! - Print @0,12;'CL';" 3> ENTER WAREHOUSE,  0: FOR ALL, OR  E: TO EXIT: ";
! - Print @0,14;'CL';" 4> PRINT ONLY WHERE CURRENT YTD IS LESS THAN LAST YTD?(Y/ <CR> )  ";
! - For FLD = 1 To 4
! -   Gosub EDT_FLDS
! - Next FLD
! - Goto FINALQ
! - ENT_SSLSM: Rem "Starting Salesman
! - Print @0,8;'CL';" 1> ENTER STARTING SLSM, <CR> FOR FIRST, OR  E: TO EXIT ";
! - Input Len 16387;""K5$
! - If K5$ = "E" Goto OUTEND
! - SSLSM = K5$
! - If Not(ESLSM) Return 
! - If SSLSM <= ESLSM Return 
! - Print @0,22;'RB CE BR';"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'ER';
! - Signal 3,20 \ Print @0,22;'CE' \ Goto ENT_SSLSM
! - Return 
! - ENT_ESLSM: Rem "ending
! - Print @0,10;'CL';" 2> ENTER ENDING   SLSM, <CR> FOR LAST,  OR  E: TO EXIT: ";
! - Input Len 16387;""K5$
! - If K5$ = "E" Goto OUTEND
! - If K5$ = "" Let K5$ = "999"
! - ESLSM = K5$
! - If SSLSM <= ESLSM Return 
! - Print @0,22;'RB CE BR';"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'ER';
! - Signal 3,20 \ Print @0,22;'CE' \ Goto ENT_ESLSM
! - L_1160: Rem WHSE
! - Print @0,12;'CL';" 3> ENTER WAREHOUSE,  0: FOR ALL, OR  E: TO EXIT: ";
! - Input Len 16386;""K1$ \ If K1$ = "E" Goto OUTEND
! - WHSE = K1$ \ If WHSE < 0 Or WHSE > D9[5] Goto L_1160
! - If K1$ <> "0" If Not(WHSE) Goto L_1160
! - Return 
! - L_1450: Rem New Option - Only if This YTD < Last YTD
! - Print @0,14;'CL';" 4> PRINT ONLY WHERE CURRENT YTD IS LESS THAN LAST YTD?(Y/ <CR> )  ";
! - Input Len 16385;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = "N"
! - If Z1$ <> "Y" And Z1$ <> "N" Goto L_1450
! - SLSLESS = 0
! - If Z1$ = "Y" Let SLSLESS = 1
! - Return 
! - FINALQ: Rem "================== all picked
! - Print @8,22;'CE';"ENTER  #:field to edit,  P: Print,  R: Reselect all,  E: Exit ";
! - Input Len 16385;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "E" Goto OUTEND
! - If Z1$ = "R" Goto L_1000
! - If Z1$ = "P" Goto STRTSORT
! - FLD = Z1$ \ If FLD < 1 Or FLD > 4 Or Fra(FLD) Goto FINALQ
! - Gosub EDT_FLDS
! - Goto FINALQ
! - EDT_FLDS: Rem "Get 'em here
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On FLD Gosub ENT_SSLSM,ENT_ESLSM,L_1160,L_1450
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
! *** Sort Section
STRTSORT: Rem "============================================ START THE SORT
! - Print @0,22;'CE';"Clearing sort file...";
K1$ = " "
L_1530: Search #9,3,1;K1$,V1,E 
If E Goto L_1570
Search #9,5,1;K1$,V1,E 
If E Let e$ = "syserrorfile 456a sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K1$ \error 10000
Goto L_1530
!
L_1570: Rem SORTING
! - Print @0,22;'CE';
K1$ = ""
L_1600: Search #4,3,1;K1$,V1,E
If E Goto L_1900
Rem {begin src/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
Mat Read #4,V1,142;C1;
If C1[2] < SSLSM Goto L_1600
If C1[2] > ESLSM Goto L_1600
K2$ = " ",K2$;K2$[1,3] = C1[2] Using "###";K2$[4] = K1$
Search #9,4,1;K2$,V1,E
If E Let e$ = "syserrorfile 456a sortfile mode (m)=4 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K1$ \error 10000
Goto L_1600
!
! *** Process Section
L_1900: Rem "============================================ PRINTING FINALLY
!
! *** Process Section
if J8 ! dx xml headings
  tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$
  tmp$=tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"WHSE",fdel$,"YEAR",fdel$
  tmp$=tmp$,"CURR MTD SALES",fdel$,"CURR MTD G.P.",fdel$,"CURR MTD G.P. %",fdel$
  tmp$=tmp$,MONTH_HDG$[1,9]," SALES",fdel$,MONTH_HDG$[1,9]," G.P.",fdel$
  tmp$=tmp$,MONTH_HDG$[1,9]," G.P. %",fdel$
  tmp$=tmp$,"YTD SALES",fdel$,"YTD G.P.",fdel$,"YTD G.P. %",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,22;'CE';
! - If J8 Print 'CS'
! - If Err 0 Gosub ERR_ESCAPE
PCTR = 0
K1$ = " ";BREAK$ = ""
L_2000: Rem "====== print loop
Search #9,3,1;K1$,V1,E
If E Goto L_8000
Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
If BREAK$ <> "" If K1$[1,3] <> BREAK$[1,3] Gosub L_4500
BREAK$ = K1$[1,9]
Mat Read #4,V1,0;A1$;
K2$ = " ",K2$;K2$[1,6] = K1$[4,9]
L_2045: Search #2,3,1;K2$,V2,E 
If E Or K2$[1,6] <> K1$[4,9] Goto L_2080
D9[0] = K2$[19,20] \ If WHSE If WHSE <> D9[0] Goto L_2045
Mat Read #2,V2,16;ZZ1; \ Gosub L_2500
Mat Read #2,V2,256;ZZ2; \ Gosub L_2600
Gosub L_2200
Gosub L_2250
Goto L_2045
L_2080: Rem
If SLSLESS ! "Only if TYTD<LYTD
  TYR = C2[0,1];LYR = 0
  For X = 1 To ARMONTH
    LYR = LYR + H2[X,1]
  Next X
  If TYR >= LYR Gosub L_5260 \ Goto L_2000
End If 
Gosub L_2220
Gosub L_2300
For I = 0 To 12
  If C2[I,1] Or H2[I,1] Goto L_2095
Next I
Gosub L_5260 \ Goto L_2000
L_2095: Gosub L_5000
Goto L_2000
!
L_2200: Rem "======================================== accum totals
For I = 0 To 12 \ For I1 = 1 To 2
    C2[I,I1] = C2[I,I1] + S1[I,I1]
    H2[I,I1] = H2[I,I1] + S2[I,I1]
  Next I1 \ Next I
Return 
!
L_2220: Rem "Report Totals
For I = 0 To 12 \ For I1 = 1 To 2
    T1[I,I1] = T1[I,I1] + C2[I,I1]
    T2[I,I1] = T2[I,I1] + H2[I,I1]
    T4[I,I1] = T4[I,I1] + C2[I,I1]
    T5[I,I1] = T5[I,I1] + H2[I,I1]
  Next I1 \ Next I
Return 
L_2250: Rem "==================================== accum totals (jan - armonth)
For I = 1 To ARMONTH
  TOT_SALES = TOT_SALES + S2[I,1]
  TOT_COSTS = TOT_COSTS + S2[I,2]
  GR_TOT_SALES = GR_TOT_SALES + S2[I,1]
  GR_TOT_COSTS = GR_TOT_COSTS + S2[I,2]
  TOT_SLSMN_SALES = TOT_SLSMN_SALES + S2[I,1]
  TOT_SLSMN_COSTS = TOT_SLSMN_COSTS + S2[I,2]
Next I
Return 
!
L_2300: Rem "======================================== accum totals
For I = 0 To 12 \ For I1 = 1 To 2
    C2[I,I1] = Int(C2[I,I1] + .5)
    H2[I,I1] = Int(H2[I,I1] + .5)
    T1[I,I1] = Int(T1[I,I1] + .5)
    T2[I,I1] = Int(T2[I,I1] + .5)
    T4[I,I1] = Int(T4[I,I1] + .5)
    T5[I,I1] = Int(T5[I,I1] + .5)
  Next I1 \ Next I
Return 
!
L_2500: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH;S1[0,1] = 0;S1[0,2] = 0;S1[0,0] = 0
For I = 0 To 12
  For X6 = 0 To 2
    Rem      REM TAKE OUT ROUNDOFF(BY INT(+.5)) OF INDIV ITEMS
    If I Let S1[I,X6] = ZZ1[X7,X6];S1[0,X6] = S1[0,X6] + ZZ1[X7,X6]
  Next X6
  If I If X7 = CALARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_2600: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH;X8 = 0;S2[0,0] = 0;S2[0,1] = 0;S2[0,2] = 0
For I = 1 To 12
  For X6 = 0 To 2
    Rem      REM TAKE OUT ROUNDOFF(BY INT(+.5)) OF INDIV ITEMS
    If Not(X8) Let S2[0,X6] = S2[0,X6] + ZZ2[X7,X6] Else Let S2[0,X6] = S2[0,X6] + ZZ1[X7,X6]
    If Not(X8) Let S2[I,X6] = ZZ2[X7,X6] Else Let S2[I,X6] = ZZ1[X7,X6]
L_2640: Next X6
  If I If X7 = CALARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_4000: Rem "======================================= grand totals
if J8 return ! dx xml
!
Gosub L_4500
BREAK$ = " ",BREAK$ \ Gosub L_5800
Print #0;"GRAND TOTALS";
Print #0; Tab 31;"TY";
Print #0; Using MASK$; Tab 33;T4[ARMONTH,1];
Print #0; Using MASK$;T4[ARMONTH,1] - T4[ARMONTH,2];
Z1 = 0 \ If T4[ARMONTH,1] Let Z1 = (T4[ARMONTH,1] - T4[ARMONTH,2]) / T4[ARMONTH,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 66;T4[0,1];
Print #0; Using MASK$;T4[0,1] - T4[0,2];
Z1 = 0 \ If T4[0,1] Let Z1 = (T4[0,1] - T4[0,2]) / T4[0,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 101;T4[0,1];
Print #0; Using MASK$;T4[0,1] - T4[0,2];
Z1 = 0 \ If T4[0,1] Let Z1 = (T4[0,1] - T4[0,2]) / T4[0,1] * 100
Print #0; Using "---#%";Z1
V9[1] = V9[1] + 1
If T5[ARMONTH,1] = 0 If T5[0,1] = 0 Goto L_4250
Print #0; Tab 31;"LY";
Print #0; Using MASK$; Tab 33;T5[ARMONTH,1];
Print #0; Using MASK$;T5[ARMONTH,1] - T5[ARMONTH,2];
Z1 = 0 \ If T5[ARMONTH,1] Let Z1 = (T5[ARMONTH,1] - T5[ARMONTH,2]) / T5[ARMONTH,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 66;GR_TOT_SALES;
Print #0; Using MASK$;(GR_TOT_SALES) - (GR_TOT_COSTS);
Z1 = 0 \ If GR_TOT_SALES Let Z1 = (GR_TOT_SALES - GR_TOT_COSTS) / GR_TOT_SALES * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 101;T5[0,1];
Print #0; Using MASK$;T5[0,1] - T5[0,2];
Z1 = 0 \ If T5[0,1] Let Z1 = (T5[0,1] - T5[0,2]) / T5[0,1] * 100
Print #0; Using "---#%";Z1
V9[1] = V9[1] + 1
L_4250: Return 
!
L_4500: Rem "========================================= SALESMAN BREAK
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"TOTALS FOR SALESMAN ";BREAK$[1,3];
Print #0; Tab 31;"TY";
Print #0; Using MASK$; Tab 33;T1[ARMONTH,1];
Print #0; Using MASK$;T1[ARMONTH,1] - T1[ARMONTH,2];
Z1 = 0 \ If T1[ARMONTH,1] Let Z1 = (T1[ARMONTH,1] - T1[ARMONTH,2]) / T1[ARMONTH,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 66;T1[0,1];
Print #0; Using MASK$;T1[0,1] - T1[0,2];
Z1 = 0 \ If T1[0,1] Let Z1 = (T1[0,1] - T1[0,2]) / T1[0,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 101;T1[0,1];
Print #0; Using MASK$;T1[0,1] - T1[0,2];
Z1 = 0 \ If T1[0,1] Let Z1 = (T1[0,1] - T1[0,2]) / T1[0,1] * 100
Print #0; Using "---#%";Z1
V9[1] = V9[1] + 1
If T2[ARMONTH,1] = 0 If T2[0,1] = 0 Goto L_4740
Print #0; Tab 31;"LY";
Print #0; Using MASK$; Tab 33;T2[ARMONTH,1];
Print #0; Using MASK$;T2[ARMONTH,1] - T2[ARMONTH,2];
Z1 = 0 \ If T2[ARMONTH,1] Let Z1 = (T2[ARMONTH,1] - T2[ARMONTH,2]) / T2[ARMONTH,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 66;TOT_SLSMN_SALES;
Print #0; Using MASK$;TOT_SLSMN_SALES - TOT_SLSMN_COSTS;
Z1 = 0
If TOT_SLSMN_SALES Let Z1 = (TOT_SLSMN_SALES - TOT_SLSMN_COSTS) / TOT_SLSMN_SALES * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 101;T2[0,1];
Print #0; Using MASK$;T2[0,1] - T2[0,2];
Z1 = 0 \ If T2[0,1] Let Z1 = (T2[0,1] - T2[0,2]) / T2[0,1] * 100
Print #0; Using "---#%";Z1;
L_4740: Print #0;" "
V9[1] = V9[1] + 1
For I = 0 To 12 \ For I1 = 1 To 2
    T1[I,I1] = 0;T2[I,I1] = 0
  Next I1 \ Next I
V9[1] = 100
TOT_SLSMN_SALES = 0;TOT_SLSMN_COSTS = 0
Return 
!
L_5000: Rem "===================================== print line
!
if J8 ! dx xml
  gosub L_6000 ! get salesman
  tmp1$=BREAK$[1,3],fdel$,rtrim$(S1$[1,30]),fdel$
  tmp1$=tmp1$,BREAK$[4,9],fdel$,rtrim$(A1$[31,60]),fdel$
  if whse=0 let tmp$="ALL" else tmp$=whse using "##"
  tmp1$=tmp1$,tmp$,fdel$
  !
  tmp$=tmp1$,"THIS",fdel$
  tmp$=tmp$,C2[ARMONTH,1] Using MASK$,fdel$
  tmp$=tmp$,C2[ARMONTH,1] - C2[ARMONTH,2] Using MASK$,fdel$
  Z1 = 0 \ If C2[ARMONTH,1] Let Z1 = (C2[ARMONTH,1] - C2[ARMONTH,2]) / C2[ARMONTH,1] * 100
  tmp$=tmp$,Z1 Using "---#%",fdel$
  tmp$=tmp$,C2[0,1] Using MASK$,fdel$
  tmp$=tmp$,C2[0,1] - C2[0,2] Using MASK$,fdel$
  Z1 = 0 \ If C2[0,1] Let Z1 = (C2[0,1] - C2[0,2]) / C2[0,1] * 100
  tmp$=tmp$,Z1  Using "---#%",fdel$
  tmp$=tmp$,C2[0,1] Using MASK$,fdel$
  tmp$=tmp$,C2[0,1] - C2[0,2] Using MASK$,fdel$
  Z1 = 0 \ If C2[0,1] Let Z1 = (C2[0,1] - C2[0,2]) / C2[0,1] * 100
  tmp$=tmp$,Z1 Using "---#%",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  tmp$=tmp1$,"LAST",fdel$
  tmp$=tmp$,H2[ARMONTH,1] Using MASK$,fdel$
  tmp$=tmp$,H2[ARMONTH,1] - H2[ARMONTH,2] Using MASK$,fdel$
  Z1 = 0 \ If H2[ARMONTH,1] Let Z1 = (H2[ARMONTH,1] - H2[ARMONTH,2]) / H2[ARMONTH,1] * 100
  tmp$=tmp$,Z1 Using "---#%",fdel$
  tmp$=tmp$,TOT_SALES Using MASK$,fdel$
  tmp$=tmp$,TOT_SALES - TOT_COSTS Using MASK$,fdel$
  Z1 = 0 \ If TOT_SALES Let Z1 = (TOT_SALES - TOT_COSTS) / TOT_SALES * 100
  tmp$=tmp$,Z1  Using "---#%",fdel$
  tmp$=tmp$,H2[0,1] Using MASK$,fdel$
  tmp$=tmp$,H2[0,1] - H2[0,2] Using MASK$,fdel$
  Z1 = 0 \ If H2[0,1] Let Z1 = (H2[0,1] - H2[0,2]) / H2[0,1] * 100
  tmp$=tmp$,Z1 Using "---#%",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  goto PrintDetailExit
endif
!
Gosub L_5800
Print #0; Tab 0;BREAK$[1,3]; Tab 4;BREAK$[4,9]; Tab 11;A1$[31,49];
Print #0; Tab 31;"TY";
Print #0; Using MASK$; Tab 33;C2[ARMONTH,1];
Print #0; Using MASK$;C2[ARMONTH,1] - C2[ARMONTH,2];
Z1 = 0 \ If C2[ARMONTH,1] Let Z1 = (C2[ARMONTH,1] - C2[ARMONTH,2]) / C2[ARMONTH,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 66;C2[0,1];
Print #0; Using MASK$;C2[0,1] - C2[0,2];
Z1 = 0 \ If C2[0,1] Let Z1 = (C2[0,1] - C2[0,2]) / C2[0,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 101;C2[0,1];
Print #0; Using MASK$;C2[0,1] - C2[0,2];
Z1 = 0 \ If C2[0,1] Let Z1 = (C2[0,1] - C2[0,2]) / C2[0,1] * 100
Print #0; Using "---#%";Z1
V9[1] = V9[1] + 1
If H2[ARMONTH,1] = 0 If H2[0,1] = 0 Goto L_5240
Print #0; Tab 31;"LY";
Print #0; Using MASK$; Tab 33;H2[ARMONTH,1];
Print #0; Using MASK$;H2[ARMONTH,1] - H2[ARMONTH,2];
Z1 = 0 \ If H2[ARMONTH,1] Let Z1 = (H2[ARMONTH,1] - H2[ARMONTH,2]) / H2[ARMONTH,1] * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 66;TOT_SALES;
Print #0; Using MASK$;TOT_SALES - TOT_COSTS;
Z1 = 0 \ If TOT_SALES Let Z1 = (TOT_SALES - TOT_COSTS) / TOT_SALES * 100
Print #0; Using "---#%";Z1;
Print #0; Using MASK$; Tab 101;H2[0,1];
Print #0; Using MASK$;H2[0,1] - H2[0,2];
Z1 = 0 \ If H2[0,1] Let Z1 = (H2[0,1] - H2[0,2]) / H2[0,1] * 100
Print #0; Using "---#%";Z1
V9[1] = V9[1] + 1
L_5240: Print #0;" "
!
PrintDetailExit:
V9[1] = V9[1] + 1
L_5260: For I = 0 To 12 \ For I1 = 1 To 2
    C2[I,I1] = 0;H2[I,I1] = 0
  Next I1 \ Next I
TOT_SALES = 0;TOT_COSTS = 0
Return 
!
L_5800: Rem "========================================== HEADING ROUTINE
if J8 return ! dx xml
!
If V9[1] < V9[4] Return 
! - If J8 If V9[0] Input "\15\PRESS <CR> TO CONTINUE "J$
If J8 Print 'CS' Else If V9[0] Print #0;"\14\"
V9[0] = V9[0] + 1;V9[1] = 6
Print #0;" - 456A - ";Msc$(3); Tab 51;CNAME$
Print #0;ARDATE$; Tab 45;"SALESMAN / CUSTOMER MTD/YTD  REPORT";
Print #0; Using "PAGE ####"; Tab 120;V9[0]
Print #0;" "
If BREAK$[1,3] <> "   " Gosub L_6000 Else Goto L_5865
Print #0;"==>SLSM:";BREAK$[1,3];" ";S1$[1,30];
Print #0; Tab 73;"-- ";MONTH_HDG$[1,9];" CURR YR --";
Print #0; Tab 108;"-- ";MONTH_HDG$[1,9];" CURR YR --"
L_5865: Print #0;"SLM# CO. #  NAME"; Tab 25;"WHSE:";
If Not(WHSE) Print #0;" ALL";
If WHSE Print #0; Using "##";WHSE;
Print #0; Tab 40;"-------  MTD  ---------";
Print #0; Tab 73;"-- ";MONTH_HDG$[1,9];" LAST YR --";
Print #0; Tab 108;"-- ";MONTH_HDG2$[1,9];" LAST YR --"
Print #0; Tab 40;"SALES      GROSS PROFIT";
Print #0; Tab 73;"SALES      GROSS PROFIT";
Print #0; Tab 108;"SALES      GROSS PROFIT"
Print #0;" "
Return 
!
L_6000: Rem READ SLSM
K5$ = " ",K5$;K5$[1,3] = BREAK$[1,3]
Search #5,2,1;K5$,R5,E
If E Let S1$[1,30] = "*** NOT ON FILE ****" \ Goto L_6050
Mat Read #5,R5,0;S1$;
L_6050: Return 
!
L_8000: Rem "========================= eof
Gosub L_4000
! - If J8 Print @0,22;"PRESS <CR> TO EXIT: "; \ Input ""X$
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
