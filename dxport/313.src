! >>> Program 313
!
! description Direct Accounts Receivable Journal
! loadsave -w -n 100,10 -o prog/dxport/313.dl4 src/313.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT  7, 2004  13:12:07
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx313.src (univ2) [jcs] {44837}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,StringSearch,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel 

! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare Intrinsic Sub FindF,InpBuf,String,Time
Option Default Dialect IRIS1
Rem MX313 - A/R LOAD JOURNAL
Rem LAST UPDATE: MTG 2/92
Rem LAST UPDATE: 12/23/92 VST-- ADD SVC CHARGES INVOICE PRINT
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim rstr$[5000],usr$[40]
dim 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50]
dim 1%,IntCo,eflg,returnstatus,tottab[10]
dim e$[500] ! 
dim 3%,SPREC,rec_uac,totar
Dim 1%,E,F,F7[3],G[2],X1,W1[1]
Dim 2%,A2[5],R0,X2
Dim 2%,D9[5],WHSRT
Dim 3%,A3[13],B6[1],B9[1],G1[10],J,J1,J2,J8,J9,T9[20],X3,T8
Dim A3$[15],C1$[30],D8$[8],F$[20],J$[40],J1$[30],J8$[8],K1$[50]
Dim K2$[20],K3$[40],K4$[30],K6$[30],N2$[22],T9$[26],P8$[7],P9$[50],U9$[30],k9$[50]
Dim X$[10],P61$[50]
Dim I$[10]
Dim 1%,L9,C[17],CLFLAG
Dim 2%,B0[1],B8[1],S[8],CLIENT
Dim G9$[140],G8$[2],L9$[2],CLIENT$[4],K5$[30]
Dim 2%,AJRNL,JRNL
Dim 3%,R[30]
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],Message$[600]
!Dim action$[30],options$[30],userid$[8]
!Dim rstr$[2000],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
!Call DXOpen() ! needed for testing
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Comp=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COMP)
Open #1,J$
eflg=0
message$=""
returnstatus=0
!LET j$="6/sortwork00045"\open #9,j$ !
Mat Read #1,19,50;P9$; \ Mat Read #1,61,0;P61$;
!If P9$[17,17] <> "M" Goto L_500
!Print @0,22;'CL RB';"*WARNING*: GENERAL LEDGER IS NOT ACTIVATED!!!";
!Print @0,23;'CL RB';"Do you wish to continue? "; \ Input Len (16384 + 3);""F$
!Call String(1,F$)
!If F$ <> "YES" Goto OUTEND_NOCHANGE
!L_500: Rem ===========run journal or print service charges invoices
!Print 'CS'
!Print @16,6;"DIRECT A/R JOURNAL OR SERVICE CHARGES INVOICE PRINT"
!Print @15,10;"1>  JOURNAL PRINT "
!Print @15,12;"2>  SERVICE CHARGES INVOICE PRINT"
!Print @15,15;"ENTER CHOICE OF PRINT OR  E: TO EXIT ";
!Input Len (16384 + 1);""I$
!Call String(1,I$)
!If I$ = "E" Chain "MX000"
!I2 = I$
!If I2 = 2 Chain "MX313A"
!If I2 = 3 Chain "MX313A.LASALLE"
!If I2 <> 1 Goto L_500
Mat Read #1,115;D9; \ If D9[5] < 2 Goto L_700
!L_630: Print @0,23;'CL';"Do you wish to print transactions by Warehouse (Y/N) ";
!Input Len (16384 + 1);""I$
!Call String(1,I$)
!If I$ = "Y" Chain "MX313B"
!If I$ <> "N" Goto L_630
L_700: Rem OPEN #1,"CNTRL0" ! REMOVE AFTER TESTING DONE
Call dxget("PRPRT",tmp$) ! (NOT ADDED?)     
audonly = 0 \ If tmp$ <> "" Let audonly = 1 
Call dxget("SORTWHSE",TMP$) ! report type 
sortwhse=0 \if tmp$<>"" let sortwhse=1 

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Mat Read #1,19,50;P9$;
Mat Read #1,52,60;P8$; \ Mat Read #1,52,0;S;
For J = 2 To 4
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Open #J,J$
L_830: Next J
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
Data "1520"," 1808"," 1504"
If P9$[17,17] = "Y"
  For J = 5 To 10
    Read J1
    If J1 = -1 Goto L_885
    Read #1,88,J1;J$;
    Open #J,J$
L_885: Next J
  Data "-1","464","-1","64","-1","48"
End If 
If P61$[3,3] = "Y"
  Mat Read #1,88,1408;J$; \ Open #14,J$
End If 
!L_900: If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60  !\ If J8 Let J9 = 23
J1 = 90 \ J2 = 0
Read #2,0;R0
If not(R0) 
	let eflg=eflg+1
	returnstatus=1
	message$=message$+" NO DIRECT A/R ENTRIES TO BE PRINTED!"
	Goto OUTEND_NOCHANGE
endif
Read #1,20,4;F
If F Gosub L_8800
F = 2
Write #1,20,4;F;
IF audonly = 0  ! get a journal # - not a preview
Read #1,20,162;AJRNL;
If AJRNL <= 0 Or AJRNL > 999999
  AJRNL = 1
  Write #1,20,162;AJRNL;
End If 
JRNL = AJRNL
else
	jrnl=0
endif
If P9$[17,17] <> "Y" Goto L_1100
K6$ = "DFAULT" \ Search #6,2,1;K6$,R[6],E \ If Not(E) Goto L_1025
let eflg=eflg+1
let message$=message$+" G/L - A/R Interface Controls Not Setup Properly"
returnstatus=1
!Print @0,22;'CL RB';"G/L - A/R INTERFACE CONTROLS NOT SETUP PROPERLY ";
Goto L_1055
L_1025: K3$ = " ",K3$
Search #8,2,1;K3$,R[8],E
If E = 1 Goto L_1065
F = 0 \ Write #1,20,4;F;
!Print 'CS'; Tab 20;"DIRECT A/R JOURNAL ";
eflg=eflg+1
let message$=message$+" G/L Interface in Process Elsewhere. Try Again Later. "
returnstatus=1
!Print @0,22;'CL';"G/L INTERFACE IN PROGRESS ELSEWHERE...TRY AGAIN LATER...";
L_1055: !Print @0,23;'CL';"PRESS <CR> TO RETURN TO MENU "; \ Input Len (16384 + 1);""U9$
Goto OUTEND_NOCHANGE
L_1065: E = 2 \ Search #8,1,0;K3$,R[8],E
If E Gosub ERR_SEARCH
K3$ = " ",K3$
Search #8,4,1;K3$,R[8],E
If E Gosub ERR_SEARCH
L_1100: Mat Read #1,0,100;D8$;
If P9$[17,17] <> "Y" Goto L_1900
Mat Read #1,51,0;C; \ If Not(C[3]) Goto L_1700
If P8$[7,7] <> "W" And P8$[7,7] <> "D" Goto L_1700
CLFLAG = 99
Read #1,88,2768;J$; \ Ropen #12,J$
Read #1,88,688;J$; \ Ropen #11,J$
L_1700: Rem
L_1900: !If Not(J8) Print @0,22;'CE';"PRINTING... PLEASE WAIT "
!If J8 Print 'CS'
!Signal 3,0
!If Err 0 Gosub ERR_ESCAPE
CLIENT = 0
If sortwhse<>0
	let k9$=" ",k9$
	! clear sort file
	Do
		search #9,3,1;k9$,rec_tmp,e
		if e>0 exit do
		search #9,5,1;k9$,rec_tmp,e
		if e gosub err_search:
	Loop
	! create sort file
	for r[2]=1 to r0
		mat read #2,r[2],0;a2;
		if a2[2]<>0 ! not deleted
			 MAT  READ #2,R[2],24;A3;                                          
			 LET K9$=" ",K9$ \ LET K9$[1,1]="*" \ LET K9$[2,3]=A3[8] USING "##"
			 LET K9$[4,10]=R[2] USING "#######"                                
			 SEARCH #9,4,1;K9$,R[2],E \ IF E GOSUB ERR_SEARCH:
		endif
	next r[2]
	! process record
	LET W1[0]=999 \ LET W1[1]=999
	LET K9$=" ",K9$
	let k9$[1,1]="*"
	do
		search #9,3,1;k9$,r[2],e
		if e>0 exit do
		IF K9$[1,1]="*"                                     
			LET W1[1]=K9$[2,3] \ IF W1[0]<>999 IF W1[0]<>W1[1] GOSUB L_4000:  
			LET W1[0]=W1[1]
			gosub procrec:
			LET T9[5]=T9[5]+A3
		endif
	loop
	gosub L_4000
else
	For R[2] = 1 To R0
		gosub procrec:
	Next R[2]
endif
Goto L_3800
Procrec: ! process record for 
 Mat Read #2,R[2],0;A2;
  Mat Read #2,R[2],24;A3;
  Mat Read #2,R[2],108;A3$;
  If Not(A2[2])  return ! Goto L_2190
  Write #2,R[2],4;JRNL;
  If P9$[17,17] = "Y"
	 CLIENT = 0
	If CLFLAG
		If P8$[7,7] = "D" Mat Read #11,A3[9],76;CLIENT;
		If P8$[7,7] = "W" Mat Read #12,A3[8],844;CLIENT;
	 End If 
	If Not(CLIENT) Let CLIENT = S[0]
	Gosub L_8400
	Gosub L_4800
  End If 
  Gosub L_3000
  J = Int(Fra(A2[3]) * 100)
  If J > 5 ! credit transaction -- reverse sign 
	A3 = 0 - A3
  endif 
  Gosub L_2400
  Gosub L_5800
  Gosub L_5000
  If P9$[17,17]= "Y" ! general ledger 
	B9 = A3[6] \ B9[1] = - A3 \ B0[1] = CLIENT
	Gosub L_4900
	Gosub L_6900
	B9 = G1[0] \ B9[1] = A3 \ B0[1] = CLIENT
	Gosub L_4900
  endif 
  If Not(A2[2]) Let F7 = 99
  T9[6] = T9[6] + A3
return
Goto L_3800
L_2400: Rem CHECK FOR DUPLICATES
K3$ = " ",K3$ \ K3$ = A2[2] Using "######"
K3$[7] = A3[5] Using "##########"
K3$[17] = J Using "#" \ X3 = 0
If P61$[3,3] = "Y"
  Search #14,2,1;K3$,R[14],E \ If Not(E) Goto L_2450
End If 
Search #9,4,1;K3$,R[9],E
If E Goto L_2450
Gosub L_2500
Return 
L_2450: Rem DUPL!
X3 = 99 \ T9 = T9 + 1
Return 
L_2500: Rem CHK A/R
Search #4,2,1;K3$,R[4],E
If E Return 
Goto L_2450
L_3000: Rem GET CUSTOMER
If Not(A2[2]) Goto L_3100
K1$ = " ",K1$ \ K1$ = A2[2] Using "######"
Search #3,2,1;K1$,R[3],E
If E Goto L_3100
Mat Read #3,R[3],30;C1$;
Return 
L_3100: Rem NOT FOUND
C1$ = "** ERROR ** CUSTOMER NOT FOUND"
F7 = 99
Return 
L_3800: Rem END OF PRINT
Print #0;" " \ J1 = J1 + 1
Gosub L_5800
Print #0; Tab 36;"***  TOTALS  ***";
Print #0; Using "---,---,---.##"; Tab 54;T9[6]
If P9$[17,17] = "Y" Gosub L_6100
If Not(F7 + T9) Goto L_3860
if t9<>0
	let eflg=eflg+1
	message$=message$+" There are "+str$(t9)+" Duplicate Transactions Found. Please Review Report. "
	goto l_9100:
else
	if f7<>0
		let eflg=eflg+1
		message$=message$+" Processing Error(s) have been detected. Please Review Report. "
		goto L_9100:
	endif
endif
!If T9 Print #0;"THERE ARE ";T9;"DUPLICATED FOUND ";
!Print #0;"***** ERROR DETECTED!!!   NO UPDATE PERFORMED!!! *****"
!Print @0,22;'CL RB';"ERROR DETECTED  - PLEASE REVIEW PRINTOUT  - NO UPDATE PERFORMED ";
!L_3850: Print @0,23;'CL RB';"PRESS <CR> TO RETURN TO MENU "; \ Input Len (16384 + 1);""U9$
Goto L_9100
L_3860: !If Err 0 Let F7 = Spc(8)
!Close #0
!If Err 0 Gosub ERR_TRAP
!If Not(F7) Goto L_3885
!Print @0,22;'CL RB';"REPORT MUST BE PRINTED ON PRINTER!!!!"; \ Goto L_3850
!L_3885: Print @0,23;'CL RB';"HAS THIS JOURNAL PRINTED CORRECTLY (Y/N) ";
!Input Len (16384 + 1);""U9$
!Call String(1,U9$)
If audonly <> 0  goto L_9100: ! no update
if eflg<>0 goto L_9100: ! no update
!If U9$ = "N" Goto L_9100
!If U9$ <> "Y" Goto L_3885
F = 3
Write #1,20,4;F;
Read #1,20,162;AJRNL
AJRNL = AJRNL + 1 \ If AJRNL > 999999 Let AJRNL = 1
Write #1,20,162;AJRNL;
Goto L_9150
! warehouse totoals
L_4000: REM WAREHOUSE TOTALS                  
PRINT #0;" " \ LET J1=J1+1                    
GOSUB L_5800:                                 
PRINT #0; USING "TOTALS FOR WAREHOUSE ##";W1; 
PRINT #0; USING "---,---,---.##"; TAB 54;T9[5]
LET T9[5]=0                                   
LET J1=99                                     
LET W1=999                                    
RETURN                                        
L_4800: Rem CHECK G/L ACCOUNT #
K4$ = " ",K4$ \ N2$ = "ACCOUNT NOT ON FILE!!"
K4$ = A3[6] Using "#########"
Search #5,2,1;K4$,R[5],E
If E = 1 Let F7 = 99
If E = 1 Goto L_4840
If E Gosub ERR_SEARCH
Mat Read #5,R[5],14;N2$;
L_4840: Return 
L_4900: Rem INSERT KEY INTO GLARCNTRL
If P9$[17,17] <> "Y" Return 
K4$ = " ",K4$ \ K4$[1,4] = B0[1] Using "####" \ K4$[5,12] = B9[0] Using "########"
Search #8,2,1;K4$,R[8],E
If Not(E) Goto L_4955
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #8,1,0;K4$,R[8],E
If E Gosub ERR_SEARCH
B6 = B9[0] \ B6[1] = 0 \ B0[1] = CLIENT
Mat Write #8,R[8],0;B6 \ Mat Write #8,R[8],12;B0;
Search #8,4,1;K4$,R[8],E \ If E Gosub ERR_SEARCH
L_4955: Mat Read #8,R[8],0;B6; \ Mat Read #8,R[8],12;B0
B6[1] = B6[1] + B9[1]
Mat Write #8,R[8],0;B6 \ Mat Write #8,R[8],12;B0;
Return 
L_5000: Rem PRINT LINE
Print #0; Using "#####";R[2];
If Not(A2[2]) Print #0;"ENTRY DELETED!"; \ Goto L_5780
Print #0; Using "######"; Tab 6;A2[2];
Print #0; Tab 13;C1$[1,25];
Print #0; Using "########"; Tab 38;A3[5];
X2 = A2[4] \ Gosub L_7700
Print #0; Tab 47;X$[1,8];
Print #0; Using "-----,--#.##"; Tab 56;A3;
Print #0; Using "##  ##"; Tab 72;A3[8];A3[9];
Print #0; Using "####"; Tab 80;A3[11];
Print #0; Tab 86;A3$[1,15];
If P9$[17,17] <> "Y" Goto L_5080
Print #0; Using "########"; Tab 103;A3[6];
Print #0; Tab 112;N2$[1,19];
L_5080: Print #0;""
If J <> 1 If J <> 4 Goto L_5770
Gosub L_5800
X2 = A3[3] \ Gosub L_7700
Print #0; Tab 37;"DUE DATE: ";X$[1,8];
If Not(A3[12]) Goto L_5150
X2 = A3[4] \ Gosub L_7700
Print #0; Tab 60;"DISC DATE: ";X$[1,8];
Print #0; Tab 86;"DISCOUNT AMOUNT:";
Print #0; Using "###,###.##";A3[12];
L_5150: Print #0;""
L_5770: If X3 Print #0;"*************** THE ABOVE IS A DUPLICATE";
If X3 Print #0;"***********************"; \ J1 = J1 + 1
L_5780: Print #0;" " \ J1 = J1 + 1
Return 
L_5800: Rem HEADINGS ROUTINE
J1 = J1 + 1 \ If J1 < J9 Return 
L_5810: !If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;"-mx313- ";T9$;
Print #0; Tab 49;"A / R   L O A D   R E G I S T E R";
if audonly = 0 
	Print #0; Using "JRNL ######"; Tab 120;JRNL
else
	print #0; tab 120;"Audit"
endif
Print #0;""
If F7[2] Goto L_5930
Print #0;"TRANS";
Print #0; Tab 6;"CUST #";
Print #0; Tab 13;"NAME";
Print #0; Tab 40;"REF #";
Print #0; Tab 50;"DATE";
Print #0; Tab 62;"AMOUNT";
Print #0; Tab 71;"WHS  DIV";
Print #0; Tab 81;"TERM";
Print #0; Tab 86;"DESCRIPTION";
If P9$[17,17] = "Y" Print #0; Tab 105;"ACCT#"; Tab 112;"NAME";
Print #0;" "
Print #0;""
J1 = J1 + 2
Return 
L_5930: Rem PRINT G/L DISTRIBUTION HEADINGS
Print #0; Tab 20;"ACCOUNT #"; Tab 50;"AMOUNT"; Tab 70;"ACCOUNT DESCRIPTION"
Print #0;" "
J1 = J1 + 2
Return 
L_6100: Rem ACCOUNT DISTRIBUTION SECTION
If P9$[17,17] <> "Y" Return 
J1 = 99 \ F7[2] = 99 \ T8 = 0 \ CLIENT = 0
K2$ = " ",K2$
L_6120: Search #8,3,1;K2$,R[8],E
If E = 2 Goto L_6200
If E Gosub ERR_SEARCH
Mat Read #8,R[8],0;B6; \ Mat Read #8,R[8],12;B0;
If CLIENT <> B0[1]
  If CLIENT Gosub L_6200
  CLIENT = B0[1] \ Gosub L_8400
  If J1 + 4 >= J9 Gosub L_5810 Else Gosub L_5930
  Print #0; Using "#### "; Tab 35;"CLIENT:";CLIENT;G9$[11,50]
  Print #0;""
  T8 = 0
End If 
A3[6] = B6
Gosub L_4800
Gosub L_5800
Print #0; Using "########"; Tab 20;B6;
Print #0; Using "--------.##"; Tab 45;B6[1];
Print #0; Tab 70;N2$
T8 = T8 + B6[1]
Goto L_6120
L_6200: Print #0;" " \ J1 = J1 + 1
Gosub L_5800
Print #0; Tab 20;"PROOF:";
Print #0; Using "--------.##"; Tab 45;T8 \ J1 = J1 + 1
If Not(T8) Return 
Print #0; Tab 45;" **** OUT OF BALANCE ****" \ J1 = J1 + 1
F7 = 99
Print #0;"" \ J1 = J1 + 1
Return 
L_6900: Rem GLARCNTRL
If P9$[17,17] <> "Y" Return 
Goto L_6940
Goto L_7000
L_6940: If P8$[1,1] = "N" Goto L_6965
K6$ = " ",K6$ \ K6$[1,2] = A3[8] Using "##" \ K6$[3,4] = A3[9] Using "##"
Search #6,2,1;K6$,R[6],E \ If E Goto L_6965
Goto L_7000
L_6965: K6$ = " ",K6$ \ K6$[1,2] = A3[8] Using "##"
Search #6,2,1;K6$,R[6],E \ If E Goto L_6985
Goto L_7000
L_6985: K6$ = "DFAULT" \ Search #6,2,1;K6$,R[6],E \ If E Gosub ERR_SEARCH
Goto L_7000
L_7000: Rem READ GLARCNTRL
Mat Read #6,R[6],0;G;
Mat Read #6,R[6],8;G1;
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8400: Rem OPEN G/L MASTER FILE FOR MULTIPLE CLIENTS
!If Err 0 Rem
tRY Close #5 Else Rem
!If Err 0 Gosub ERR_ESCAPE
K5$ = " ",K5$ \ K5$[3,6] = CLIENT Using "####"
Search #10,2,1;K5$,R[10],E \ If E Gosub ERR_SEARCH
Mat Read #10,R[10],0;G9$;
L9 = G9$[135,136] \ If L9 < 10 Let L9$ = L9 Using "#" Else Let L9$ = L9 Using "##"
CLIENT$ = CLIENT Using "####"
For X = 1 To 4
  If CLIENT$[X,X] = " " Let CLIENT$[X,X] = "."
Next X
G8$[1,1] = S[1] Using "&" \ G8$[2,2] = S[2] Using "&"
F$ = L9$,"/GLM",G8$[1,2],CLIENT$
Call FindF(F$,A9)
If Not(A9)
	eflg=eflg+1
	message$=message$+"General Ledger Master File Not Found for Client "+str$(client)
	goto outend:
  !Print @0,23;'CL RB';"GENERAL LEDGER MASTER FILE NOT FOUND FOR CLIENT ";CLIENT \ Gosub ERR_SEARCH
End If 
Open #5,F$
Return 
L_8800: Rem CHECK FLAG
J$ = ""
If F = 1
	eflg=eflg+1
	Let message$ = message$+ " ENTRY IN PROCESS! "
	returnstatus=1
	goto outend_nochange:
endif
If F = 2
	eflg=eflg+1
	let message$= message$+"JOURNAL BEING RUN ON ANOTHER PORT"
	returnstatus=1
	goto outend_nochange:
endif
If F = 4 
	eflg=eflg+1
	let message$=message$+"ACCEPT IN PROCESS!"
	returnstatus=1
	goto outend_nochange:
endif
!If J$ <> "" Goto L_8940
!L_8850: Print @0,22;'RB CE';"JOURNAL HAS BEEN RUN. IS THIS A REPRINT? (Y/N) ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
!If J$ = "N" Goto OUTEND_NOCHANGE
!If J$ <> "Y" Goto L_8850
!Return 
!Print @0,22;'RB CE';"NO TRANSACTIONS ON FILE!";
!Signal 3,30
!Goto OUTEND_NOCHANGE
!L_8940: Print @0,22;'RB CE';"CANNOT RUN JOURNAL. ";J$;
!Signal 3,30
!Goto OUTEND_NOCHANGE
!Print @0,23;"STOPPED AT ENTRY";R[2];"PRESS <CR> TO EXIT ";
!Input Len (16384 + 1);""F$
!F = 3 \ Write #1,20,4;F; \ Goto L_9100
Return

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem moves here so escape out will reset flags
L_9100: Rem END TO GET OUT
F = 0
Write #1,20,4;F;
L_9150: If P9$[17,17] <> "Y" Goto L_9200
K3$ = ""
L_9160: Search #8,3,1;K3$,R[8],E \ If E Goto L_9200
Search #8,5,1;K3$,R[8],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #8,1,0;K3$,R[8],E \ If E Gosub ERR_SEARCH
Goto L_9160
L_9200: !
OUTEND_NOCHANGE: Rem EXIT ROUTINE
!Print 'CS'
!Chain "MX000C"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 

if not(eflg) and message$=""
	let message$=message$+"Report Complete. "

endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
outend9: ! everything has been written in called program
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
