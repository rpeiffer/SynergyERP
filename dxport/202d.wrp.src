! >>> Program 202d.wrp
!
! description  CUSTOM WHITE RIVER PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/202d.wrp.dl4 src/202d.wrp.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 22, 2008  22:14:08
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/white.r9/mx202d.src (univ2) [valerie] {64115}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
!Rem BEDIT Version: 1.9 OBJECT CODE     Created: FEB 17, 2000  16:47:55
Rem /usr/acct/r97/src/mx202d.white.s (univ2) [sms] {11327}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8
!
Com 1%,SORT,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],2%,D8
If Err 0 Gosub ERR_TRAP
Dim S1$[118],D2$[20],S2$[20],L6$[60],L1$[156]
Dim 1%,L3[3],H4[2],F9[1],EUN[2],S2[1]
Dim 2%,S1[1],S5,L2[1],L4[3],L6[5],H0[12],A3[2],HA3[2]
Dim C5$[20]
Dim 3%,L5[3],S3[17],L7[11],UNF[6]
Dim 3%,T8[1],A1$[156],2%,B[24]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[70],ARDATE$[8],UNIT$[4]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[60],K2$[20],K3$[20],X$[20]
Dim K8$[30],C8$[50],C9$[50],HAZ$[90],SNAME$[160],HA1$[50],SHIPDATE$[20]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim custom_customer$[30]
!
Call dxget("U_Sort",tmp$) \ If tmp$ <> "" Let SORT = 0 Else Let SORT = 1
Read #1,3,0;CNAME$;
Mat Read #1,0,100;ARDATE$;
mat read #1,115,60;custom_Customer$;
Custom_customer$=UCase$(Trim$(Custom_customer$))
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
J1 = 99
X2 = D8 \ Gosub L_7700 \ Gosub L_6900 \ SHIPDATE$ = X$
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If J8 Print 'CS';
If Err 0 Gosub ERR_TRAP
J4$ = ""
F9 = 99 \ F9[1] = 99 \ K1$ = " ",K1$
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 Error 11000
If E Goto OUTEND
If K1$[1,1] >= "{" Goto L_2000
If J4$ = "" Let J4$ = K1$
If K1$[1,6] <> J4$[1,6] Gosub L_4000
If SORT = 0 If K1$[7,12] <> J4$[7,12] Gosub L_4200
J4$ = K1$
Mat Read #5,R1,0;L2;
Mat Read #5,R1,8;L3;
Mat Read #5,R1,16;L4;
Mat Read #5,R1,80;L6$;
Mat Read #5,R1,168;L7;
Mat Read #5,R1,250;UN;
Mat Read #5,R1,256;S2;
Mat Read #5,R1,260;S3;
Mat Read #5,R1,446;EUN;
Mat Read #5,R1,452;UNF;
If S2[0] = 3 Goto SKIPHERE
If L3[0] Gosub L_30000 \ Gosub L_8000 \ Goto L_2084
Mat Read #6,L4,744;HAZ$;
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A; \ Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
Mat Read #6,L4,834;A3;
L_2084: SNAME$ = " ",SNAME$ \ If A3[2] Mat Read #11,A3[2];SNAME$;
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[4] \ Gosub L_20000
L7[4] = AMOUNT
Mat Read #10,PFU1[8],10;UNIT$;
SKIPHERE: Rem
Gosub L_5800
Gosub L_2200
Gosub L_5000
Goto L_2000
L_2200: Rem TOTALS
T9[0] = T9[0] + S3[4]
T9[1] = T9[1] + L7[4]
T9[2] = T9[2] + S3[4]
T9[3] = T9[3] + L7[4]
Return 
L_4000: Rem TRUCK TOTAL
If SORT = 0 Gosub L_4200
Gosub L_5800
Print #0;" " \ J1 = J1 + 1
Print #0;"***** TOTALS FOR TRUCK ";S5;" *****";
Print #0; Using "######.##"; Tab 52;T9;
Print #0; Using "---------.##"; Tab 64;T9[1]
T9 = 0 \ T9[1] = 0
J4$ = K1$
J1 = J1 + 1
J1 = 99
F9 = 99
Return 
L_4200: Rem ZONE TOTAL
Gosub L_5800
Print #0;" " \ J1 = J1 + 1
Print #0;"*** TOTALS FOR CLASS   ***";
Print #0; Using "######.##"; Tab 52;T9[2];
Print #0; Using "--------.##"; Tab 65;T9[3]
T9[2] = 0 \ T9[3] = 0
J1 = J1 + 1
F9[1] = 99
Return 
L_5000: Rem PRINT LINE
If S2[0] = 3 Gosub PRINTMESS \ Return 
S5 = K1$[1,6]
If F9 Print #0; Using "######";S5;
Print #0; Tab 8;SNAME$[1,40];
If SNAME$[41,45] <> "     " Print #0;"\15\"; Tab 12;SNAME$[41,80]; \ J1 = J1 + 1
If SNAME$[81,85] <> "     " Print #0;"\15\"; Tab 12;SNAME$[81,120]; \ J1 = J1 + 1
If SNAME$[121,125] <> "     " Print #0;"\15\"; Tab 12;SNAME$[121,160]; \ J1 = J1 + 1
Print #0; Using "######.##"; Tab 52;S3[4];;
Print #0; Using "--------.##/"; Tab 65;L7[4];UNIT$;
Print #0; Tab 81;L6$[1,30];
Print #0; Using "######    ######"; Tab 115;L2[1];T9[0]
J1 = J1 + 1
Print #0; Tab 12;HAZ$[41,64];" ";HAZ$[65,70];" ";HAZ$[71,80];" ";HAZ$[81,90];
If HAZ$[1,5] <> "     " Print #0;"\15\"; Tab 12;HAZ$[1,40]; \ J1 = J1 + 1
Print #0; Tab 81;L6$[31,57];
Print #0;" " \ J1 = J1 + 1
F9 = 0 \ F9[1] = 0
Return 
PRINTMESS: Rem
Print #0; Tab 81;L6$[1,30]
Print #0; Tab 81;L6$[31,60]
J1 = J1 + 2
Return 
L_5800: Rem HEADINGS ROUTINE
If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\"; \ J1 = J1 + 1
Print #0; "WRP"; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 202D - ";Msc$(3);
Print #0; Tab 39;"HAZARDOUS MATERIALS TRUCK ROUTING LIST - ";SHIPDATE$
Print #0;" "
Print #0;"TRUCK#";
Print #0; Tab 8;"DOT HAZARDOUS DESCRIPTION ";
Print #0; Tab 55;"WEIGHT";
Print #0; Tab 65;"QTY SHIPPED ";
Print #0; Tab 81;"PROD DESCRIPTION";
Print #0; Tab 115;"ORDER/";
Print #0; Tab 126;"ACCUM.";
Print #0;" "
Print #0; Tab 12;"HAZARD CLASS"; Tab 37;"GROUP";
Print #0; Tab 45;"ID #"; Tab 55;"E.R. REF";
Print #0; Tab 117;"CM #";
Print #0; Tab 128;"WT.";
Print #0;" "
Print #0;" "
Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8000: Rem SET N/S HAZ STUFF
A3 = 0;A3[1] = 0;A3[2] = 0;HAZ$ = " ",HAZ$
Mat Read #12,L4,120;HA3;
Mat Read #12,L4,132;HA1$;
A3[0] = HA3[0];A3[2] = HA3[2]
HAZ$[41,64] = HA1$[1,24];HAZ$[65,70] = HA1$[25,30]
HAZ$[71,80] = HA1$[31,40];HAZ$[81,90] = HA1$[41,50]
Return 
OUTEND: Rem EXIT ROUTINE
Gosub L_4000
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  ! External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"202d.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 ! If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Error 11000
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End