! >>> Program 495
!
! description Claim Payment Journal
! loadsave -w -n 100,10 -o prog/dxport/495.dl4 src/495.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem SN495   CLAIM PAYMENT JOURNAL
Rem
Rem AUTHOR:   UBS   JULY 22, 1993
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY  1, 2001  10:07:59
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx1/sn495.src (univ2) [kag] {06031}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,formatdate2$,PDate$
Declare External Function buildsort
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Dim 2%,intco
Dim rstr$[5000],Message$[600]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim K1$[40],K2$[40],K3$[60],K4$[60],J$[20],J1$[30],J4$[40]
Dim J8$[8],CLM$[114],CLM1$[42],VNM$[30],X$[10]
Dim 1%,CLM1[1],STAT
Dim 3%,CLM2[2],T9[20]
Dim 2%,CLM[4],VENDNO,D9[5]
Dim 2%,WHSE,3%
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Close #CTLC ! opened as read-only - we need to write in here
CTLC=OpenFile(9999,IntCo) \ if ctlc=-1 error 42
For J = 2 To 5
  Read J1 \ If J1 = -1 Goto L_830
  Read #CTLC,88,J1;J$[1,16];
  Open #J,J$
L_830: Next J
Data "1472","416","2400","-1"
! needs a sortfile
CH_Sort=9 ! buildsort(e$,30,0,9) ! build sort file keylen=30 wrds on chan 9
! evidently it always has a sort file on chan #9 ! ??
if ch_sort<=0 error 42 ! got to have it!
Mat Read #CTLC,115,0;D9;
Read #CTLC,0,100;J8$;
Read #CTLC,3,0;J1$[1,30];
Returnstatus=1
Message$="Journal not run"
Read #CTLC,20,26;STAT;
If STAT <> 0 Gosub L_8800 \ Goto L_9010
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 20
If STAT = 3 Goto L_920
Goto L_950
L_920: !Print @0,22;'CE';" DO YOU WANT TO RERUN THE JOURNAL? (Y/N)  ";
! Input ""J$ \ Print @0,22;'CE';
J$="Y" ! auto rerun it!
If J$ = "N" Goto L_9010
If J$ <> "Y" Goto L_920
L_950: Rem OKAY
L_960: !Print 'CS';@0,0;"CLAIM PAYMENTS JOURNAL";@50,0;"SN495"
!Print @0,10;"PRINT IN   1: claim, or  2: vendor order,  E: exit?   ";
call dxget("SORTORD",j$)
If J$ = "E" Goto L_9010
if j$="" let j$="1"
SORT = J$
If J$ <> "1" If J$ <> "2" ! Goto L_960
	returnstatus=1
	message$="Sort Order Not Selected"
	goto L_9010
Endif
!Goto L_1040 ! is bypassed on PM
!L_1000: Rem WAREHOUSE
!Print @0,12;" ENTER WAREHOUSE #, <CR>: ALL    ";
!Input ""J$
!If Len(J$) > 2 Goto L_1000
!WHSE = J$
!If WHSE >= 0 If WHSE <= D9[5] Goto L_1040
!Print @0,12;'RB CE';"INVALID WAREHOUSE"
!Signal 3,20 \ Goto L_1000
L_1040: Rem OKAY
STAT = 2 \ Write #CTLC,20,26;STAT;
CH = 2 \ If SORT = 1 Goto L_1900
CH = Ch_Sort ! \ Print @0,22;'CE';"SORTING, PLEASE WAIT. ." \ Signal 3,0
J4$ = " ",J4$
L_1520: Search #Ch_Sort,3,1;J4$,R9,E \ If E = 2 Goto L_1600
If E Gosub ERR_SEARCH
Search #Ch_Sort,5,1;J4$,R9,E \ If E Gosub ERR_SEARCH
Goto L_1520
L_1600: Rem THRU WHOLE FILE
K1$ = " ",K1$
L_1610: Search #2,3,1;K1$,R2,E \ If E = 2 Goto L_1900
If E Gosub ERR_SEARCH
If K1$[7,7] = "" Or K1$[7,8] = "  " Goto L_1610
Mat Read #2,R2,0;CLM;
Mat Read #2,R2,20;CLM1;
If CLM1[0] <> 0 Goto L_1610
If WHSE If CLM1[1] <> WHSE Goto L_1610
J4$ = " ",J4$;J4$[1,6] = CLM[1] Using "######"
J4$[7] = K1$[1,8]
Search #Ch_Sort,4,1;J4$,R2,E \ If E Gosub ERR_SEARCH
Goto L_1610
L_1900: Rem
!Print @0,22;'CE';"PRINTING, PLEASE WAIT" \ Signal 3,0
If Err 0 Gosub ERR_TRAP ! ERR_ESCAPE
!If J8 Print 'CS'
K1$ = " ",K1$;VENDNO = -1
J1 = 90;J2 = 0
L_2000: Search #CH,3,1;K1$,R1,E \ If E = 2 Goto L_9100
If E Gosub ERR_SEARCH
If SORT = 1 If K1$[7,7] = "" Or K1$[7,8] = "  " Goto L_2000
X2 = K1$[1,6]
If SORT = 2 If VENDNO = -1 Let VENDNO = X2
If SORT = 2 If VENDNO <> X2 Gosub L_4500
Mat Read #2,R1,0;CLM;
Mat Read #2,R1,20;CLM1;
If CLM1[0] <> 0 Goto L_2000
Mat Read #2,R1,24;CLM2;
Mat Read #2,R1,42;CLM$;
Mat Read #2,R1,156;CLM1$;
VENDNO = CLM[1]
If WHSE If CLM1[1] <> WHSE Goto L_2000
Gosub L_3000
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTAL
T9[1] = T9[1] + CLM2[1];T9[11] = T9[11] + CLM2[1]
T9[2] = T9[2] + CLM2[2];T9[12] = T9[12] + CLM2[2]
Return 
L_3000: Rem VENDOR NAME
K4$ = " ",K4$;K4$ = CLM[1] Using "######"
If CLM[1] = 0 Goto L_3060
Search #4,2,1;K4$,R4,E \ If E = 1 Goto L_3060
If E Gosub ERR_SEARCH
Mat Read #4,R4,0;VNM$;
Return 
L_3060: Rem
VNM$ = " ",VNM$
VNM$ = "VENDOR NOT ON FILE"
Return 
L_4000: Rem GRAND TOTALS
J1 = J1 + 3 \ Gosub L_5800
Print #0;"\15\  JOURNAL TOTALS";
Print #0; Using "$--------#.##"; Tab 73;T9[1]; Tab 87;T9[2];
Return 
L_4500: Rem VENDOR TOTALS
J1 = J1 + 4 \ Gosub L_5800
Print #0;""
Print #0; Using "######"; Tab 10;"VENDOR ";VENDNO;" TOTALS";
Print #0; Using "$--------#.##"; Tab 73;T9[11]; Tab 87;T9[12]
Print #0;"\15\"
T9[11] = 0
T9[12] = 0
Return 
L_5000: Rem PRINT LINE
Gosub L_5800
Print #0; Using "######"; Tab 1;CLM[0];
X2 = CLM[4] \ Gosub L_7700
Print #0; Tab 8;X$[1,8];
Print #0; Using "######"; Tab 20;CLM[1]; Tab 28;VNM$;
Print #0; Tab 60;CLM$[13,24];
Print #0; Using "$------#.##"; Tab 75;CLM2[1]; Tab 89;CLM2[2];
Print #0; Tab 101;CLM$[55,84]
Print #0; Tab 40;CLM1$[1,12]; Tab 55;CLM1$[13,42];
Print #0; Tab 101;CLM$[85,114]
Print #0;""
J1 = J1 + 3
Return 
L_5800: Rem "=========================================== headings
If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\12\";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 495 - ";Msc$(3);
Print #0; Tab 45;"C L A I M   P A Y M E N T   J O U R N A L"
Print #0;"\15\";
Print #0; Tab 1;"CLAIM"; Tab 8;"PAY DATE";
Print #0; Tab 20;"VENDOR"; Tab 28;"NAME"; Tab 60;"PAYMENT REF";
Print #0; Tab 75;"CLAIM AMNT"; Tab 90;"PAY AMOUNT";
Print #0; Tab 101;"PAYMENT DESCRIPTION"
Print #0; Tab 40;"ITEM CODE"; Tab 55;"SERIAL NUMBER"
Print #0;""
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
L_8800: Rem CLAIM PAYMENTS IN PROCESS
Returnstatus=1 ! problem
If STAT = 1 let tmp$="ENTRY "
If STAT = 2 let tmp$="JOURNAL "
If STAT = 3 let tmp$="JOURNAL HAS BEEN RUN. " \ Return 1
If STAT = 4 let tmp$="ACCEPT "
If STAT <> 3 let tmp$=TMP$,"IS IN PROCESS. "
MESSAGE$=tmp$
Return ! 1 ! return +1 BYPASSES EXIT!?
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/cpj495se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
OUTEND: Rem EXIT
Returnstatus=0 \ message$="OK - Complete"
STAT = 3 \ Write #CTLC,20,26;STAT;
L_9010: ! EXIT NO FLAG RESET ! Print 'CS'
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
End
L_9100: Rem DONE WITH RANGE
If SORT = 2 Gosub L_4500
Gosub L_4000
! If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$
Goto OUTEND
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
Rem {end rtn.error.s}
End