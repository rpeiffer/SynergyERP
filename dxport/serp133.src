! --- serp133.dl4
! Tax Code maintenance program converted from mx133
!
! 1.0 10/28/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp133.dl4 src/serp133.src
!
! From the original code:
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 21, 2008  12:35:19
Rem /w2/papermaster/r2005//usr/acct/jliu/work/r2005/mx1/mx133.src (univ2) [jliu] {15170}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX133          Tax Zone Maintenance
Rem Author:        George Doscher   (??/??/????)
Rem                UNIVERSAL BUSINESS SYSTEMS
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"
!
Declare Intrinsic Sub InpBuf,String,checknumber
! Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile
!Declare External Function openfile,pdate$,jdate$,Formatdate2$
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[3200],tmp2$[500],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen()
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
! If Err 0 Gosub ERR_TRAP

Dim P9$[50],C$[36],P60$[50],P61$[256],RTYPE$[1]
dim 1%,tx9[1]
Dim 1%,tcb,2%,K,MaxNew
Dim A$[20],D1$[144],K$[30],custom_customer$[30]
Dim 2%,A1,A6,D3[8]
Dim 3%,D2,A4,A5
Dim 3%,A2[2],A3[2],TX0[3],TX1[10],TX2[10],totRate
dim List$[100,2000]
! open files, read system flags, etc.
For J = 2 To 2
	Read J1 \ If Not(J1) Goto L_850
	Read #1,88,J1;tmp$;
	Open #J,tmp$
L_850: Next J
Data "2176"
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
mat read #1,61,0;p61$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
tptc=0 \ if custom_customer$="HTBERRY" let tptc=1
if P61$[140,140]="Y" let tptc=1 ! was custom_customer$="PIEDMONT"
!TPTC=1 ! TEST
! Determine if the GL/Interface is active
!If P9$[17,17] = "M" OR P9$[17,17] = "Y"
	Read #1,88,176;tmp$; \ ROpen #3,tmp$
!end if

MaxNew = chf(2) - 1

if action1$ <> "GETLIST"
	call DxGet("TCID", tmp$) \ r2 = tmp$
	if r2 < 1 OR r2 > MaxNew
		message$ = "Invalid tax code ID entered!" !\ error 10000
		returnstatus=0
		goto outerr
	end if
	gosub ReadTaxCode
	if a$[1,1] <= " "
		! new record, make sure fields are initialized
		! properly
		gosub InitTaxCode
		call DxGet("Description", tmp$) \ a$=tmp$,b$
		if trim$(tmp$)=""
			message$="Please enter a description!"
			goto OutErr
		Endif
	end if
end if

!
! get list of current tax codes
!
if action1$ = "GETLIST"
	gosub BuildTCDroplist ! * added to rstr
	!
	! section - status
	Message$=""
	goto OutEnd:
!
! get data for a specific tax code
!
else if action1$ = "GETDATA"
	gosub LoadData
	Message$=""
	goto OutEnd:
!
! update ye' old tax code
!
else if action1$ = "SUBMITDATA"
	gosub LoadDataAndSave
	Message$="Record updated."
	goto OutEnd:
!
! delete tax code (doesn't happen too often:))
!
else if action1$ = "DELETE"
	gosub DeleteData
	Message$="Record deleted."
	goto OutEnd:
!
! UNKNOWN ACTION
!
else
	message$ = "Unknown action1: "+action1$ !\ error 10000
	returnstatus=0
	goto outerr
end if
message$="Invalid action"
returnstatus=1
goto OutErr
! ***********************************************************************
! Nobody but us subroutines and exit code down here
! ***********************************************************************

!----------------------------------------------------------------------------
! build initial drop list of existing tax codes
!----------------------------------------------------------------------------
BuildTCDroplist: !
	! Max Record (for new add)
	tmp$=bsdel$+"TCMax"+fdel$+rdel$
	tmp$=tmp$+"TCMAX"+fdel$+rdel$
	tmp$=tmp$+str$(MaxNew)+fdel$+rdel$+esdel$
	call addToStr(e$,rstr$,tmp$)
	! Add section header and column defs
	tmp$=bsdel$+"TCDroplist"+fdel$+rdel$
	tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	for i = 1 To MaxNew
		mat read #2,i,0;a$;
		if a$[1,1] > " "
			tmp$=str$(i)+fdel$+str$(i)+" - "+rtrim$(a$)+fdel$+rdel$
			call addToStr(e$, rstr$, tmp$)
		end if
	next i
	call addToStr(e$, rstr$, esdel$)
Return

!----------------------------------------------------------------------------
! load selected tax code data (new or existing) into rstr
!----------------------------------------------------------------------------
LoadData: !
	! build table of conditional item flags indicating display of field (or not)
	tmp$=bsdel$+"ConditionFlags"+fdel$+rdel$
	tmp$=tmp$+"GLAccount"+fdel$+"MaxTaxPerItem"+fdel$+"RoundingType"+fdel$
	tmp$=tmp$+"TaxCalcBy"+fdel$
	tmp$=tmp$+rdel$
	call addToStr(e$,rstr$,tmp$)
	If P9$[17,17] = "M" OR P9$[17,17] = "Y"
		tmp$="Y"+fdel$
	else
		tmp$="N"+fdel$
	end if
	If P60$[42,42] = "Y" ! tax by line item
		tmp$=tmp$+"Y"+fdel$ !+"Y"+fdel$
	else
		tmp$=tmp$+"N"+fdel$ ! +"N"+fdel$
	end if
	tmp$=tmp$+"Y"+fdel$ ! THERE's ALWAYS A ROUNDING TYPE!!
	tmp2$="N" \ if tptc let tmp2$="Y"
	tmp$=tmp$+tmp2$+fdel$
	call addToStr(e$,rstr$,tmp$+rdel$+esdel$)
	! table header info - definitions
	tmp$=bsdel$+"TableHeader"+fdel$+rdel$
	tmp$=tmp$+"TCID"+fdel$+"Description"+fdel$+"TaxRate"+fdel$
	tmp$=tmp$+"ReportingGroup"+fdel$
	tmp$=tmp$+"GLAccount"+fdel$
	tmp$=tmp$+"MaxTaxPerItem"+fdel$+"RoundingType"+fdel$
	tmp$=tmp$+"TaxCalcBy"+fdel$
	tmp$=tmp$+"MaxTaxType"+fdel$
	tmp$=tmp$+"MaxTaxLevel"+fdel$
	call addToStr(e$,rstr$,tmp$+rdel$)

	! table header info - data
	tmp$=str$(r2)+fdel$+a$+fdel$+str$(a1)+fdel$
	tmp$=tmp$+str$(a6)+fdel$
	If P9$[17,17] = "M" OR P9$[17,17] = "Y"
		tmp$=tmp$+str$(a4)+fdel$
	else
		tmp$=tmp$+fdel$
	end if
	If P60$[42,42] = "Y" ! tax by line item
		tmp$=tmp$+str$(a5)+fdel$ ! +rtype$+fdel$
	else
		tmp$=tmp$+fdel$ ! +fdel$
	end if
	tmp$=tmp$+rtype$+fdel$ ! THERE'S ALWAYS A ROUNDING TYPE!
	if tptc
		tmp$=tmp$+Str$(tcb)+fdel$
	Else
		tmp$=tmp$+"0"+fdel$ ! always PM calc
	Endif
	If P60$[42,42] = "Y" ! tax by line item
		tmp$=tmp$+str$(tx9[0])+fdel$
		tmp$=tmp$+str$(tx9[1])+fdel$
	else
		tmp$=tmp$+fdel$
		tmp$=tmp$+fdel$
	endif
	call addToStr(e$,rstr$,tmp$+rdel$+esdel$)
	! table data - definitions
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	tmp$=tmp$+"BDDesc"+fdel$+"BDRate"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	for i = 0 to 8
		tmp$=d1$[1+(i*16),16+(i*16)]+fdel$+str$(D3[i])+fdel$+rdel$
		call addToStr(e$, rstr$, tmp$)
	next i
	call addToStr(e$, rstr$, esdel$)
	!
	! drop list for GL Accounts (if applicable)
	!
	If P9$[17,17] = "M" OR P9$[17,17] = "Y" or p9$[17,17]="N"
		tmp$=bsdel$+"GLDroplist"+fdel$+rdel$
		tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
		! default value
		call addToStr(e$,rstr$,"0"+fdel$+"GL-A/R Default"+fdel$+rdel$)
		! the rest
		found = 0
		if p9$[17,17]="N"
			let a4=0
			let found=1
			goto endglloop: ! 
		endif
		if a4 = 0 found = 1
		K$ = " ",K$
		
		do
			Search #3,3,1;K$,R1,E \ if E>2 Error 42
			if E exit do
			try
				call checknumber(trim$(k$))
			else
				goto skipGLNum
			end try
			if val(k$) = a4 found = 1
			Mat Read #3,R1,0;C$;
			tmp$=trim$(k$)+fdel$
			tmp$=tmp$+trim$(k$)+" - "+ltrim$(C$[15])+fdel$+rdel$
			call addToStr(e$,rstr$,tmp$)
			skipGLNum: !
		loop
		endglloop: ! 
		if not(found)
			tmp$=str$(a4)+fdel$+"ACCOUNT NOT ON FILE!"+fdel$+rdel$
			call addToStr(e$,rstr$,tmp$)
		end if
		call addToStr(e$,rstr$,esdel$)
	end if
	!
	! rounding type drop down (if applicable)
	!
	!If P60$[42,42] = "Y" ! tax by line item
		tmp$=bsdel$+"RoundDroplist"+fdel$+rdel$
		tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
		tmp$="N"+fdel$
		tmp$=tmp$+"Normal: Round if 3rd dec. > 4"+fdel$+rdel$
		tmp$=tmp$+"U"+fdel$
		tmp$=tmp$+"Round Up: Round if 3rd dec. > 0"+fdel$+rdel$+esdel$
		call addToStr(e$,rstr$,tmp$)
	!end if
	tmp$=bsdel$,"TaxCalcByDroplist",fdel$,rdel$
	tmp$=tmp$+"ID"+fdel$+"DESC"+fdel$+rdel$
	tmp$=tmp$+"0"+fdel$+"System Calc"+fdel$+rdel$
	if tptc
		if custom_customer$="HTBERRY" let tmp$=tmp$+"1"+fdel$+"CCH Calc"+fdel$+rdel$
		if P61$[140,140]="Y" let tmp$=tmp$+"2"+fdel$+"Avalara Calc"+fdel$+rdel$ ! custom_customer$="PIEDMONT"
	Endif
	tmp$=tmp$+esdel$
	call addToStr(e$,rstr$,tmp$)
	! droplist for maxtaxtype
	clear list$[]
	List$[0]=bsdel$,"droplistmaxtaxtype",fdel$ ! beginning section
	List$[1]="ID",fdel$,"Description",fdel$ ! from droplistwhinfoz
	if p61$[42,42]="Y"
		list$[2]="0",fdel$,"Tax Amount",fdel$
		list$[3]="1",fdel$,"Taxable Merchandise",fdel$
		list$[4]=esdel$
	else
		list$[2]="0",fdel$,"Not Available",fdel$
		list$[3]=esdel$
	endif
	call addToStr(e$,rstr$,list$[])
	clear list$[]
	List$[0]=bsdel$,"droplistmaxtaxlevel",fdel$ ! beginning section
	List$[1]="ID",fdel$,"Description",fdel$ ! from droplistwhinfoz
	if p61$[42,42]="Y"
		list$[2]="0",fdel$,"Entire Tax Code",fdel$
		list$[3]="1",fdel$,"Tax Break Level 1",fdel$
		list$[4]="2",fdel$,"Tax Break Level 2",fdel$
		list$[5]="3",fdel$,"Tax Break Level 3",fdel$
		list$[6]="4",fdel$,"Tax Break Level 4",fdel$
		list$[7]="5",fdel$,"Tax Break Level 5",fdel$
		list$[8]="6",fdel$,"Tax Break Level 6",fdel$
		list$[9]="7",fdel$,"Tax Break Level 7",fdel$
		list$[10]="8",fdel$,"Tax Break Level 8",fdel$
		list$[11]="9",fdel$,"Tax Break Level 9",fdel$
		list$[12]=esdel$
	else
		list$[2]="0",fdel$,"Not Available",fdel$
		list$[3]=esdel$
	endif
	call addToStr(e$,rstr$,list$[])
	! droplist for maxtaxlevel
return

!----------------------------------------------------------------------------
! load data from web and save tax code data
!----------------------------------------------------------------------------
LoadDataAndSave: !
	! existing record has been read - update appropriate values
	call DxGet("Description", tmp$) \ a$=tmp$,b$
	if Trim$(tmp$)=""
		returnstatus=0
		message$="Please enter a description!"
		goto OutErr
	Endif
	call DxGet("TaxRate", tmp$) \ a1=tmp$
	call DxGet("ReportingGroup", tmp$) \ a6=tmp$
	If P9$[17,17] = "M" OR P9$[17,17] = "Y"
		call DxGet("GLAccount", tmp$) \ a4=tmp$
		If A4
			K$ = " ",K$ \ K$[1,9] = A4 Using "#########"
			Search #3,2,1;K$,R1,E \ if E>1 Error 42
			If E
				message$ = "G/L account number not in master file!"
				returnstatus=0
				goto outerr
			end if
		end if
	end if
	If P60$[42,42] = "Y" ! tax by line item
		call DxGet("MaxTaxPerItem", tmp$) \ a5=tmp$
		if a5<>0 
			if a$[1,1]="+" 
				message$="Max Tax Not Allowed On Special '+' Tax Codes "
				returnstatus=0
				goto outerr
			endif
			CALL DxGet("MaxTaxType",tmp$)
			let tx9[0]=tmp$
			if tx9[0]<0 or tx9[0]>1
				message$ = "Invalid Max Tax Type Submitted"
				returnstatus=0
				goto outerr
			endif
			call dxget("MaxTaxLevel",tmp$)
			let tx9[1]=tmp$
			if tx9[1]<0 or tx9[1]>9
				message$ = "Invalid Max Tax Level Submitted"
				returnstatus=0
				goto outerr
			endif
		endif
	end if
	call DxGet("RoundingType", tmp$) \ rtype$=tmp$,b$
	call dxget("TaxCalcBy",tmp$) \ tcb=tmp$
	if not(tptc) let tcb=0
	if custom_customer$="HTBERRY" 
	  IF tcb<>0 and tcb<>1
		message$="Tax Calculated by is 0 or 1 only!"
		returnstatus=0
		goto outerr
	  Endif
	endif
	if P61$[140,140]="Y" ! custom_customer$="PIEDMONT"
	  IF tcb<>0 and tcb<>2
		message$="Tax Calculated by is 0 or 2 only!"
		returnstatus=0
		goto outerr
	  ENDIF
	endif	
	for i = 0 to 8
		call DxGet("BDDesc"+str$(i+1), tmp$) \ d1$[1+(i*16),16+(i*16)]=tmp$,b$
		call DxGet("BDRate"+str$(i+1), tmp$) \ D3[i]=tmp$
		totRate = totRate + D3[i]
	next i
	if totRate <> a1
		message$ = "Individual tax breakdowns do not equal tax rate!"
		returnstatus=0 ! error 10000
		goto outerr
	end if
	gosub WriteTaxCode
Return

!----------------------------------------------------------------------------
! delete selected tax code data
!----------------------------------------------------------------------------
DeleteData: !
	If A2[0] + A2[1] + A2[2] + A3 + A3[1] + A3[2]
		message$ ="Cannot delete, tax code has YTD history!"
		returnstatus=0 ! error 10000
		goto outerr
	end if
	Gosub InitTaxCode
	Gosub WriteTaxCode
Return

!----------------------------------------------------------------------------
! initialize a new tax code record
!----------------------------------------------------------------------------
InitTaxCode: !
	A$ = " ",A$
	D1$ = " ",D1$
	A1 = 0;A4 = 0;A5 = 0;A6 = 0
	For I = 0 To 8
		Let D3[I] = 0
		If I < 3 Let A2[I] = 0
		If I < 3 Let A3[I] = 0
		If I < 3 Let TX0[I] = 0
	Next i
	For i = 0 To 10
		TX1[i] = 0
		TX2[i] = 0
	Next i
	RTYPE$ = "N";tcb=0
	tx9[0]=0;tx9[1]=0
Return

!----------------------------------------------------------------------------
! read tax code data
!----------------------------------------------------------------------------
ReadTaxCode: !
	Mat Read #2,R2;A$
	Mat Read #2,R2,20;A1
	Mat Read #2,R2,24;A2 \ Mat Read #2,R2,42;A3
	Mat Read #2,R2,60;A4 \ Mat Read #2,R2,66;A5
	Read #2,R2,72;D3[0] \ Read #2,R2,76;D3[1]
	Read #2,R2,80;D3[2] \ Read #2,R2,292;D3[3]
	Read #2,R2,296;D3[4] \ Read #2,R2,300;D3[5]
	Read #2,R2,304;D3[6] \ Read #2,R2,308;D3[7]
	Read #2,R2,312;D3[8]
	Read #2,R2,84;D1$[1,48]
	Read #2,R2,316;D1$[49,144]
	Mat Read #2,R2,132;TX0
	Mat Read #2,R2,156;TX1
	Mat Read #2,R2,222;TX2
	Mat Read #2,R2,288;A6;
	mat read #2,r2,412;tcb;
	Mat Read #2,R2,414;RTYPE$;
	if RTYPE$ <> "N" and RTYPE$ <>"U" RTYPE$="N"
	mat read #2,r2,444;tx9;
Return

!----------------------------------------------------------------------------
! write tax code data
!----------------------------------------------------------------------------
WriteTaxCode: !
	
	Mat Write #2,R2;A$
	Mat Write #2,R2,20;A1
	Mat Write #2,R2,24;A2 \ Mat Write #2,R2,42;A3
	Mat Write #2,R2,60;A4 \ Mat Write #2,R2,66;A5;
	Write #2,R2,72;D3[0] \ Write #2,R2,76;D3[1]
	Write #2,R2,80;D3[2] \ Write #2,R2,292;D3[3]
	Write #2,R2,296;D3[4] \ Write #2,R2,300;D3[5]
	Write #2,R2,304;D3[6] \ Write #2,R2,308;D3[7]
	Write #2,R2,312;D3[8]
	Write #2,R2,84;D1$[1,48]
	Write #2,R2,316;D1$[49,144]
	Mat Write #2,R2,132;TX0
	Mat Write #2,R2,156;TX1
	Mat Write #2,R2,222;TX2
	Mat Write #2,R2,288;A6;
	mat write #2,r2,412;tcb;
	Mat Write #2,R2,414;RTYPE$;
	mat Write #2,r2,444;tx9;
Return

! L_1000: Gosub L_5400
! L_1020: J0$ = "3000 412 3" \ J1 = 0
! X$ = Chf(2) - 1 \ J5$ = "Enter tax zone  (1 -",X$[1,Len(X$) - 1],")"
! Gosub L_7000 \ J5$ = ""
! If J4$ = "" Goto OUTEND
! R2 = J1 \ If R2 >= 1 If R2 < Chf(2) Goto L_1080
! J7$ = "INVALID TAX ZONE" \ Gosub L_7600 \ Goto L_1020
! L_1080: Gosub L_2400 \ If A$[1,1] > " " Gosub L_5000 \ Goto L_2000
! L_1090: Print @21,23;"IS THIS A NEW RECORD? (Y/<CR>) ";'CL';
! Input ""U5$
! Print @0,23;'CL';
! If U5$ = "N" Goto L_1000
! If U5$ = "" Goto L_1000
! If U5$ <> "Y" Goto L_1090
! Gosub L_8000
! For W0 = 1 To 23 \ Gosub L_2200 \ Next W0
! Gosub L_5000 \ Goto L_2000
! 
! L_2000: Rem EDIT
! Gosub L_5000
! 
! L_2060: Print @0,23;"ENTER   #: field to edit     <CR>: end     DELETE    ";'CL';
! 	Input ""U5$
! 	Print @0,23;'CL';
! 	If U5$ = "" Let U5$ = "E" \ Gosub L_4000 \ Goto L_2500
! 	If U5$ = "DELETE" Goto L_8900
! 	W0 = U5$
! 	If W0 Gosub L_2200
! Goto L_2060
! 
! L_2200: Rem INPUT LINE NOS
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! 	If W0 < 11 On W0 Gosub L_3000,L_3282,L_3040,L_3275,L_3080,L_3120,L_3160,L_3200,L_3240,L_3242
! 	If W0 > 10 On (W0 - 10) Gosub L_3244,L_3246,L_3248,L_3250,L_3252,L_3254,L_3256,L_3258,L_3260,L_3262,L_3264,L_3350,EDT_RTYPE
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! Return
! 
! L_2400: Rem READ FILE
! 	Mat Read #2,R2;A$
! 	Mat Read #2,R2,20;A1
! 	Mat Read #2,R2,24;A2 \ Mat Read #2,R2,42;A3
! 	Mat Read #2,R2,60;A4 \ Mat Read #2,R2,66;A5
! 	Read #2,R2,72;D3[0] \ Read #2,R2,76;D3[1]
! 	Read #2,R2,80;D3[2] \ Read #2,R2,292;D3[3]
! 	Read #2,R2,296;D3[4] \ Read #2,R2,300;D3[5]
! 	Read #2,R2,304;D3[6] \ Read #2,R2,308;D3[7]
! 	Read #2,R2,312;D3[8]
! 	Read #2,R2,84;D1$[1,48]
! 	Read #2,R2,316;D1$[49,144]
! 	Mat Read #2,R2,132;TX0
! 	Mat Read #2,R2,156;TX1
! 	Mat Read #2,R2,222;TX2
! 	Mat Read #2,R2,288;A6;
! 	Mat Read #2,R2,414;RTYPE$;
! Return
! L_2500: Rem WRITE FILE
! 	Mat Write #2,R2;A$
! 	Mat Write #2,R2,20;A1
! 	Mat Write #2,R2,24;A2 \ Mat Write #2,R2,42;A3
! 	Mat Write #2,R2,60;A4 \ Mat Write #2,R2,66;A5;
! 	Write #2,R2,72;D3[0] \ Write #2,R2,76;D3[1]
! 	Write #2,R2,80;D3[2] \ Write #2,R2,292;D3[3]
! 	Write #2,R2,296;D3[4] \ Write #2,R2,300;D3[5]
! 	Write #2,R2,304;D3[6] \ Write #2,R2,308;D3[7]
! 	Write #2,R2,312;D3[8]
! 	Write #2,R2,84;D1$[1,48]
! 	Write #2,R2,316;D1$[49,144]
! 	Mat Write #2,R2,132;TX0
! 	Mat Write #2,R2,156;TX1
! 	Mat Write #2,R2,222;TX2
! 	Mat Write #2,R2,288;A6;
! 	Mat Write #2,R2,414;RTYPE$;
! 	Gosub L_8000
! Goto L_1000
! 
! L_3000: J0$ = "2 002022 5"
! 	J1$ = A$[1,20]
! 	J5$ = "Enter zone description"
! 	Gosub L_7000
! 	A$[1,20] = J$
! 	J5$ = ""
! Return
! 
! L_3040: J0$ = "3300 621 6"
! 	J2$ = "##.###"
! 	J1 = A1
! 	J5$ = "Enter total zone rate"
! 	Gosub L_7000
! 	A1 = J$
! 	If A1 = 0 Let D3[0] = 0;D3[1] = 0
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "TOTAL RATE MUST EXCEED BREAKDOWNS !" \ Gosub L_7600 \ Goto L_3040
! Return
! 
! L_3080: J0$ = "2 00161911"
! 	J1$ = D1$[1,16]
! 	J5$ = "Enter description for Breakdown 1"
! 	Gosub L_7000
! 	D1$[1,16] = J$
! Return
! 
! L_3120: J0$ = "3300 64911"
! 	J2$ = "##.###"
! 	J1 = D3[0]
! 	J5$ = "Enter rate for Breakdown 1"
! 	Gosub L_7000
! 	D3[0] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3120
! 	L_3160: J0$ = "2 00161912"
! 	J1$ = D1$[17,32]
! 	J5$ = "Enter description for Breakdown 2"
! 	Gosub L_7000
! 	D1$[17,32] = J$
! 	J5$ = ""
! Return
! 
! L_3200: J0$ = "3300 64912"
! 	J2$ = "##.###"
! 	J1 = D3[1]
! 	J5$ = "Enter rate for Breakdown 2"
! 	Gosub L_7000
! 	D3[1] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3200
! 	L_3240: J0$ = "2 00161913"
! 	J1$ = D1$[33,48]
! 	J5$ = "Enter description for Breakdown 3"
! 	Gosub L_7000
! 	D1$[33,48] = J$
! 	J5$ = ""
! Return
! 
! L_3242: J0$ = "3300 64913"
! 	J2$ = "##.###"
! 	J1 = D3[2]
! 	J5$ = "Enter rate for Breakdown 3"
! 	Gosub L_7000
! 	D3[2] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3242
! 	L_3244: J0$ = "2 00161914"
! 	J1$ = D1$[49,64]
! 	J5$ = "Enter description for Breakdown 4"
! 	Gosub L_7000
! 	D1$[49,64] = J$
! 	J5$ = ""
! Return
! 
! L_3246: J0$ = "3300 64914"
! 	J2$ = "##.###"
! 	J1 = D3[3]
! 	J5$ = "Enter rate for Breakdown 4"
! 	Gosub L_7000
! 	D3[3] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3246
! 	L_3248: J0$ = "2 00161915"
! 	J1$ = D1$[65,80]
! 	J5$ = "Enter description for Breakdown 5"
! 	Gosub L_7000
! 	D1$[65,80] = J$
! 	J5$ = ""
! Return
! 
! L_3250: J0$ = "3300 64915"
! 	J2$ = "##.###"
! 	J1 = D3[4]
! 	J5$ = "Enter rate for Breakdown 5"
! 	Gosub L_7000
! 	D3[4] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3250
! 	L_3252: J0$ = "2 00161916"
! 	J1$ = D1$[81,96]
! 	J5$ = "Enter description for Breakdown 6"
! 	Gosub L_7000
! 	D1$[81,96] = J$
! 	J5$ = ""
! Return
! 
! L_3254: J0$ = "3300 64916"
! 	J2$ = "##.###"
! 	J1 = D3[5]
! 	J5$ = "Enter rate for Breakdown 6"
! 	Gosub L_7000
! 	D3[5] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3250
! 	L_3256: J0$ = "2 00161917"
! 	J1$ = D1$[97,112]
! 	J5$ = "Enter description for Breakdown 7"
! 	Gosub L_7000
! 	D1$[97,112] = J$
! 	J5$ = ""
! Return
! 
! L_3258: J0$ = "3300 64917"
! 	J2$ = "##.###"
! 	J1 = D3[6]
! 	J5$ = "Enter rate for Breakdown 7"
! 	Gosub L_7000
! 	D3[6] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3258
! 	L_3260: J0$ = "2 00161918"
! 	J1$ = D1$[113,128]
! 	J5$ = "Enter description for Breakdown 8"
! 	Gosub L_7000
! 	D1$[113,128] = J$
! 	J5$ = ""
! Return
! 
! L_3262: J0$ = "3300 64918"
! 	J2$ = "##.###"
! 	J1 = D3[7]
! 	J5$ = "Enter rate for Breakdown 8"
! 	Gosub L_7000
! 	D3[7] = J1
! 	Gosub L_4000 \ If D3[8] >= 0 Return
! 	J7$ = "BREAKDOWNS CANNOT EXCEED TOTAL RATE !" \ Gosub L_7600 \ Goto L_3262
! 	L_3264: J0$ = "2 00161919"
! 	J1$ = D1$[129,144]
! 	J5$ = "Enter description for Breakdown 9"
! 	Gosub L_7000
! 	D1$[129,144] = J$
! 	J5$ = ""
! Return
! 
! L_3275: If P9$[17,17] = "M" Goto L_3280
! 	If P9$[17,17] <> "Y" Return
! 	L_3280: J0$ = "3000 872 6"
! 	J2$ = "########"
! 	J1 = A4
! 	J5$ = "Enter G/L account number or 0 for G/L-A/R default account"
! 	Gosub L_7000
! 	A4 = J$
! 	If Not(A4) Let C$[15] = "G/L-A/R default                        " \ Goto L_3318
! 	Gosub L_5100
! 	Goto L_3280
! 	L_3282: J0$ = "3000 674 5"
! 	J2$ = "########"
! 	J1 = A6
! 	J5$ = "Enter Reporting Group (1 - 999999)"
! 	Gosub L_7000
! 	A6 = J$
! Return
! 
! L_3318: Print @32,20;C$[15,36];
! Return 
! 
! L_3350: If P60$[42,42] <> "Y" Return
! 	J0$ = "3200 92221"
! 	J2$ = "######.##"
! 	J1 = A5
! 	J5$ = "Enter Maximum Tax Amount Charged Per Item, or  0: for no max"
! 	Gosub L_7000
! 	A5 = J$
! Return
! 
! EDT_RTYPE: Rem
! 	J5$ = "Enter N: Normal Rounding  U: Rounding Up  H: Help"
! 	J0$ = "2 00012222";J1$ = RTYPE$[1,1]
! 	Gosub L_7000
! 	If J$[1,1] <> "N" And J$[1,1] <> "U" And J$[1,1] <> "H" Goto EDT_RTYPE
! 	If J$ = "H" Gosub RTYPE_HELP \ Goto EDT_RTYPE
! 	RTYPE$[1,1] = J$[1,1]
! Return
! 
! RTYPE_HELP: Rem
! 	Window Open @10,14; To @75,22; Using ""
! 	Print @2,0;'BU';"HELP";@25,0;'EU';
! 	Print @2,1;"N: Normal rounding only round up to the next cent if the 3rd";
! 	Print @2,2;"   decimal place is greater than 4";
! 	Print @2,3;"U: Round up if the 3rd decimal place is greater than 0";
! 	Input @1,Msc(34) - 1;"Press <CR> to return to main screen ";X$
! 	Window Close
! Return 
! 
! L_4000: Rem CALCULATE BREAKDOWN #3
! 	D3[8] = A1 - (D3[0] + D3[1] + D3[2] + D3[3] + D3[4] + D3[5] + D3[6] + D3[7])
! 	Print Using "--#.###";@48,11;D3[0];
! 	Print Using "--#.###";@48,12;D3[1];
! 	Print Using "--#.###";@48,13;D3[2];
! 	Print Using "--#.###";@48,14;D3[3];
! 	Print Using "--#.###";@48,15;D3[4];
! 	Print Using "--#.###";@48,16;D3[5];
! 	Print Using "--#.###";@48,17;D3[6];
! 	Print Using "--#.###";@48,18;D3[7];
! 	Print Using "--#.###";@48,19;D3[8];
! Return
! 
! L_5000: Rem DISPLAY SCREEN
! 	Print @22,5;A$[1,20];
! 	Print Using "##.###";@21,6;A1;
! 	Print Using "######";@74,5;A6;
! 	Print @19,11;D1$[1,16];
! 	Print Using "--#.###";@48,11;D3[0];
! 	Print @19,12;D1$[17,32];
! 	Print Using "--#.###";@48,12;D3[1];
! 	Print @19,13;D1$[33,48];
! 	Print Using "--#.###";@48,13;D3[2];
! 	Print @19,14;D1$[49,64];
! 	Print Using "--#.###";@48,14;D3[3];
! 	Print @19,15;D1$[65,80];
! 	Print Using "--#.###";@48,15;D3[4];
! 	Print @19,16;D1$[81,96];
! 	Print Using "--#.###";@48,16;D3[5];
! 	Print @19,17;D1$[97,112];
! 	Print Using "--#.###";@48,17;D3[6];
! 	Print @19,18;D1$[113,128];
! 	Print Using "--#.###";@48,18;D3[7];
! 	Print @19,19;D1$[129,144];
! 	Print Using "--#.###";@48,19;D3[8];
! 	If P9$[17,17] = "M" OR P9$[17,17] = "Y"
! 		Print Using "########";@72,6;A4;
! 		Gosub L_5100
! 		C$[15] = "ACCOUNT NOT FOUND!!"
! 		Print @55,7;C$[15,36];
! 	end if
! 	If P60$[42,42] = "Y" Print Using "######.##";@22,21;A5;
! 	If RTYPE$ <> "N" And RTYPE$ <> "U" Let RTYPE$ = "N"
! 	Print @22,22;RTYPE$[1,1];
! Return
! 
! L_5100: Rem VERIFY G/L ACCOUNT NUMBER
! 	C$ = " ",C$
! 	If Not(A4) Return 1
! 	K$ = " ",K$ \ K$[1,9] = A4 Using "#########"
! 	Search #3,2,1;K$,R1,E
! 	If E Goto L_5140
! 	Mat Read #3,R1,0;C$;
! 	Return 1
! 	L_5140: Print @0,23;'CL RB';"G/L ACCOUNT NUMBER NOT IN MASTER FILE!!"; \ Signal 3,10
! 	Print @0,23;'CL';
! Return
! 
! L_5400: Rem SCREEN OVERLAY
! 	Print 'CS BD';
! 	Print @28,1;"TAX CODE MAINTENANCE";@70,1;"- MX133 -";
! 	Print @3,3;"TAX ZONE";
! 	Print @2,5;"1> ZONE DESCRIPTION";@2,6;"3> ZONE RATE";
! 	Print @47,5;"2> REPORTING GROUP";
! 	Print @0,7; Tab 34;"BREAKDOWN"
! 	Print @18,9;"DESCRIPTION";@46,9;"RATE";@16,11;"5> ";@45,11;"6> ";
! 	Print @16,12;"7> ";@45,12;"8> ";@16,13;"9> ";@44,13;"10> ";
! 	Print @15,14;"11> ";@44,14;"12> ";@15,15;"13> ";@44,15;"14> ";
! 	Print @15,16;"15> ";@44,16;"16> ";@15,17;"17> ";@44,17;"18> ";
! 	Print @15,18;"19> ";@44,18;"20> ";@15,19;"21> ";@44,19;"---";
! 	If P9$[17,17] = "M" OR P9$[17,17] = "Y"
! 		Print @47,6;"4> G/L ACCOUNT #";
! 	end if
! 	If P60$[42,42] = "Y"
! 		Print @2,21;"22> MAX TAX PER ITEM";
! 		Print @2,22;"23> ROUNDING TYPE";
! 	end if
! 	Print 'ED'; \ Signal 3,0
! Return
! 
! L_8000: !
! 	A$ = " ",A$
! 	D1$ = " ",D1$
! 	A1 = 0;A4 = 0;A5 = 0;A6 = 0
! 	For K = 0 To 8
! 		If K < 8 Let D3[K] = 0
! 		If K < 3 Let A2[K] = 0
! 		If K < 3 Let A3[K] = 0
! 		If K < 3 Let TX0[K] = 0
! 	Next K
! 	For K = 0 To 10
! 		TX1[K] = 0
! 		TX2[K] = 0
! 	Next K
! 	RTYPE$ = "N"
! Return
! 
! L_8900: Rem DELETE RECORD
! 	If Not(A2[0] + A2[1] + A2[2] + A3 + A3[1] + A3[2]) Goto L_8925
! 	Print @0,23;'CL RB';"CANNOT DELETE, TAX CODE HAS YTD HISTORY ";
! 	Signal 3,30 \ Goto L_2060
! 	L_8925: Gosub L_8000
! Goto L_2500
! 
OUTEND: Rem EXIT ROUTINE
ReturnStatus=1
OutErr: ! bypass status=1
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end