! >>> Program 394a
!
! description Purchase History by Commodity
!
! loadsave -w -n 100,10 -o prog/dxport/394a.dl4 src/394a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 25, 2003  13:02:05
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/po/po394a.src (univ2) [jcs] {35307}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem PO394A - Commodity/Vend/Alt Vend/Product
Rem AUTHOR: Granite Pkg
Rem LAST UPDATE:
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,VerifyDate
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim Blank$[50] \ Blank$ = " ",Blank$
Dim EndParam$[50] \ EndParam$ = "z",EndParam$
!
Dim FLE$[20],ANS$[30],K1$[60],K2$[60],K3$[60],K4$[60],K5$[60]
Dim CONAME$[30],SDATE$[8],VA$[264],M2$[72],A$[156],AV1$[32]
Dim D$[36],COSTUM$[4],SCOMM$[4],ECOMM$[4],P9$[50],P60$[50],A5$[60]
Dim P61$[256],STIM$[30],X$[12],CCOMM$[4],LN$[131],PMASK$[12]
Dim 1%,WHSE,PFU1[20],COSTUM,CNVTU[2]
Dim 2%,AV2[6],W2[9],B[24],LSDATE,DT3[1],JDATE[5],X2[5]
Dim 2%,Q0[1],D9[5],WH7[3],LPODATE,LSTDT
Dim 3%,A[33],W3[24],CNVTA,AMOUNT,REC[9],PFU2[6]
! - For FLE = 2 To 99
! -   Close #FLE
! - Next FLE
! - If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
For FLE = 2 To 8
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #1,88,J1;FLE$[1,16];
  Try Close #FLE Else Rem
  Ropen #FLE,FLE$
NXTFLE: Next FLE
Data "1792","1744","2288","1568","2400","1120","1728"
Read #1,3,0;CONAME$;
Mat Read #1,0,100;SDATE$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,115;D9;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "############"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
! - FLE$ = "6/SORTWORK" + Str$(Spc(6))
! - Call FindF(FLE$,H1)
! - If H1 Kill FLE$
! - K1$ = "[1:256] ",FLE$
! - Build #9,K1$
! - KSIZE = 20
! - Search #9,0,1;K1$,KSIZE,E \ If E Gosub ERR_SEARCH
! - L1 = 1000 \ Search #9,0,0;K1$,L1,E \ If E Gosub ERR_SEARCH
LN$ = "-",LN$
SCOMM$ = "    ";ECOMM$ = "zzzz"
JDATE[0] = Tim(6)
JDATE[1] = JDATE[0] - 365
X2 = JDATE[1] \ Gosub JUL2YMD
LSDATE = DT3[0]
X2 = LSDATE \ Gosub NUM2DATE \ LASTDT = X$[1,2],X$[4,5],X$[7,8] ! mmddyy
If Err 0 Let j8 = Spc(8)
j8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If j8 If j8 <> 49 Gosub ERR_TRAP
!
! dx add xport reporting code
DXSetup: !
Dim tmp$[1000],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"394a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
Call dxget("begcode",tmp$) \ If tmp$ = "" Let SCOMM$ = Blank$ Else Let SCOMM$ = tmp$ ! starting commodity code
Call dxget("endcode",tmp$) \ If tmp$ = "" Let ECOMM$ = EndParam$ Else Let ECOMM$ = tmp$ ! ending commodity code
Call dxget("lsdate",tmp$) \ If tmp$ = "" Let LSDATE = LASTDT Else Let LSDATE = tmp$ ! ship date
Call dxget("whse",tmp$) \ If tmp$ = "" Let WHSE = 1 Else Let WHSE = tmp$ ! warehouse
!  dx end
!
! vendor or product section
If ECOMM$ < SCOMM$ Or ECOMM$ > EndParam$ Let e$ = "Invalid ending commoodity, must be between starting commodity and ",EndParam$[1,4],"!" \ Error 10000
!
! last po date
tmp$ = LSDATE Using "&&&&&&" \ X$ = tmp$[1,2] + "/" + tmp$[3,4] + "/" + tmp$[5,6]
Call VerifyDate(X$,X$,E)
If E Let e$ = "Invalid ship date!" \ Error 10000
LSDATE = X2 ! yymmdd
Call DateToJulian(1,X$,X$,E)
If E Let e$ = "Invalid ship date!" \ Error 10000
JDATE[1] = X$[1,5]
!
! warehouse
If WHSE < 1 Or WHSE > 99 Let e$ = "Invalid  warehouse, must be between 1 and 99!" \ Error 10000
!

If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If                                                             
! - STARTHERE: Rem "
! - Gosub SHOMAINSCREEN
! - CHGALL: Rem "Enter all fields
! - For FLD = 1 To 3
! -   Gosub EDT_FLDS
! - Next FLD
! - WHATTODO: Rem "
! - Print @0,22;'CE';"ENTER:  #:field  R: reselect all  P: print  E: exit  ";
! - Input Len 16384 + 2;""ANS$ \ Call String(1,ANS$)
! - If ANS$ = "E" Goto OUTEND
! - If ANS$ = "R" Goto CHGALL
! - If ANS$ = "P" Goto STARTSORT
! - FLD = ANS$ \ If FLD < 1 Or FLD > 3 Goto WHATTODO
! - Gosub EDT_FLDS
! - Goto WHATTODO
! - EDT_FLDS: Rem "change 'em here
! - If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On FLD Gosub EDT_COMMS,EDT_LSDATE,EDT_WHSE
! - If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
! - EDT_COMMS: Rem "Start/End Commodity
! - Print @0,22;'CE';"Enter the Starting Commodity";
! - Print @27,3; \ Input Len 16384 + 4;""ANS$
! - If ANS$ <> "" Let SCOMM$ = ANS$
! - Print @0,22;'CE';"Enter the Ending Commodity";
! - Print @41,3; \ Input Len 16384 + 4;""ANS$
! - Print @0,22;'CE';
! - If ANS$ <> "" Let ECOMM$ = ANS$
! - If SCOMM$ > ECOMM$
! -   Print @0,22;'RB CE';"Starting must be less than ending!";
! -   Signal 3,20
! -   Print @0,22;'CE';
! -   Goto EDT_COMMS
! - End If 
! - Return 
! - EDT_LSDATE: Rem "Last
! - Print @0,22;'CE';"Enter the Oldest Last PO Date to use (mmddyy)  0: all";
! - X2 = LSDATE \ Gosub NUM2DATE
! - Print @27,6;X$[1,2];X$[4,5];X$[7,8];"    ";
! - Print @27,6; \ Input Len 16384 + 6;""ANS$
! - If ANS$ = "" Let ANS$ = X$[1,2] + X$[4,5] + X$[7,8]
! - X2 = ANS$ \ If X2 = 0 And ANS$[1,1] <> "0" Goto EDT_LSDATE
! - If X2 < 0 Or Fra(X2) Goto EDT_LSDATE
! - If X2
! -   ANS$ = X2 Using "&&&&&&"
! -   X$ = ANS$[1,2] + "/" + ANS$[3,4] + "/" + ANS$[5,6]
! -   Call VerifyDate(X$,X$,E) \ If E Goto EDT_LSDATE
! -   LSDATE = X$
! -   Call DateToJulian(1,X$,X$,E) \ If E Goto EDT_LSDATE
! -   JDATE[1] = X$[1,5]
! - Else 
! -   LSDATE = 0;JDATE[1] = 0
! - End If 
! - X2 = LSDATE \ Gosub NUM2DATE \ Print @27,6;X$;
! - Print @0,22;'CE';
! - Return 
! - EDT_WHSE: Rem "warehouse for Primary/Last PO Cost
! - If P9$[33,33] <> "Y" Return 
! - Print @0,22;'CE';"Enter the Warehouse to Use";
! - Print @27,8; \ Input Len 16384 + 2;""ANS$
! - If ANS$ = "" Let ANS$ = WHSE
! - X2 = ANS$ \ If X2 < 1 Or X2 > 99 Or Fra(X2) Goto EDT_WHSE
! - If X2 > D9[5] Goto EDT_WHSE
! - WHSE = X2
! - Print Using "##";@27,8;WHSE;
! - Return 
! - SHOMAINSCREEN: Rem "
! - Print 'CS ED';@0,0;"-PO394A-";@25,0;"PURCHASE HISTORY BY COMMODITY";
! - Print @25,2;"STARTING";@40,2;"ENDING";
! - Print @0,3;" 1> COMMODITY RANGE";
! - Print @27,3;SCOMM$;@41,3;ECOMM$;
! - Print @0,6;" 2> Last PO Date";
! - X2 = LSDATE \ Gosub NUM2DATE
! - Print @27,6;X$[1,8];
! - If P9$[33,33] = "Y" ! "warehouse Screen
! -   Print @0,8;" 3> Warehouse ";
! -   Print Using "##";@27,8;WHSE;
! - End If 
! - Return 
!
! *** Sort Section
STARTSORT: Rem "
SCRN = 0;CLN = 90;MXLN = 61;CPG = 0
! - If Err 0 Let J8 = Spc(8)
! - J8 = 0 \ TST = Chf(0)
! - If Err 0 Gosub ERR_ESCAPE
If j8 ! "no file on 0
  SCRN = 1;MXLN = 21
End If 
K1$ = " ",K1$
CLRSORTLOOP: Rem "Clear if needed
Search #9,3,1;K1$,REC,E
If E = 2 Goto SORTNOW
Search #9,5,1;K1$,REC,E
If E Let e$ = "syserrorfile 394c sortfile mode (m)=5 keyno (k)=1 r=",REC," e=",E," keyval (k$)=",K1$ \ Error 10000
Goto CLRSORTLOOP
SORTNOW: Rem "now sort comm/Vends/Product
! - Print @0,22;'CE';"SORTING, PLEASE WAIT..." \ Signal 3,1
REC = 0
K1$ = " ",K1$;K1$[1,4] = SCOMM$
PRODFLELOOP: Rem "thru all products
Search #2,3,3;K1$,REC[2],E
If E = 2 Goto SORTDONE
If K1$[1,Len(ECOMM$)] > ECOMM$ Goto SORTDONE
Mat Read #2,REC[2],156;B;
MVEND = B[24];SWHSE = 0
REC = REC + 1
! - If Not(Fra(REC / 250)) Print @40,22;'CL';"Processed";REC;
K2$ = K1$[5,16];K2$[13] = WHSE Using "##"
Search #3,2,1;K2$,REC[3],E
If Not(E) And P9$[33,33] = "Y"
  Mat Read #3,REC[3],38;W2;
  Mat Read #3,REC[3],428;WH7;
  X2 = WH7[0] \ Gosub YMD2JUL \ X2 = 0
  If X2 < JDATE[1] Goto PRODFLELOOP
  If W2[3] Let MVEND = W2[3]
  SWHSE = WHSE
End If 
K3$ = " ",K3$
K3$[1,4] = K1$[1,4]
K3$[5,5] = " "
K3$[6,11] = MVEND Using "######"
K3$[12,23] = K1$[5,16]
K3$[24,25] = SWHSE Using "##"
Search #9,4,1;K3$,REC[2],E
! - If E > 1 Gosub ERR_SEARCH
K4$ = " ",K4$;K4$ = K1$[5,16]
ALTVLOOP: Rem "All Alt Vends for Product
Search #5,3,1;K4$,REC[5],E
If E = 2 Goto ALTVDONE
If K4$[1,12] <> K1$[5,16] Goto ALTVDONE
Mat Read #5,REC[5],32;AV2;
X2 = AV2[1] \ Gosub YMD2JUL \ X2 = 0
If X2 < JDATE[1] Goto ALTVLOOP
K3$ = " ",K3$;SWHSE = 0
K3$[1,4] = K1$[1,4]
K3$[5,5] = "1"
K3$[6,11] = AV2[0] Using "######"
K3$[12,23] = K1$[5,16]
K3$[24,25] = SWHSE Using "##"
Search #9,4,1;K3$,REC[2],E
! - If E > 1 Gosub ERR_SEARCH
Goto ALTVLOOP
ALTVDONE: Rem "next prod
Goto PRODFLELOOP
!
! *** Process Section
SORTDONE: Rem "Done - now Print
If j8 ! dx xml headings
  tmp$ = "COMMODITY",fdel$,"COMMODITY DESC",fdel$
  tmp$ = tmp$,"VENDOR",fdel$,"VENDOR NAME",fdel$
  tmp$ = tmp$,"PHONE #",fdel$,"FAX NO",fdel$,"CONTACT",fdel$
  tmp$ = tmp$,"PRODUCT",fdel$,"PRODUCT DESC",fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,"PRODUCT DESC 2",fdel$
  tmp$ = tmp$,"LAST COST",fdel$,"U/M",fdel$,"LAST PO",fdel$
  !
  Call addtostr(e$,rstr$,tmp$ + rdel$)
End If 
!
! - Print @0,22;'CE';"PRINTING, PLEASE WAIT..." \ Signal 3,1
! - If SCRN Print 'CS';
REC = 0;CVEND = -1;CCOMM$ = "";PRODPRNTD = 0
K1$ = " ",K1$
SORTEDLOOP: Rem "Loop thru Sorted Stuff
Search #9,3,1;K1$,REC[2],E
If E = 2 Goto PRNTDONE
REC = REC + 1
! - If Not(Fra(REC / 250)) And Not(SCRN) Print @40,22;'CL';"PRINTED";REC
If CCOMM$[1,4] <> K1$[1,4] Gosub NEWCOMMOD
CCOMM$ = K1$[1,4]
X2 = K1$[6,11]
If CVEND <> X2 Gosub NEWVEND
Gosub READ_PROD
LPODATE = 0
CWHSE = K1$[24,25]
If CWHSE Gosub GET_PWHSE
If K1$[5,5] <> " " Gosub GET_AVND
Gosub COSTCONV
Gosub PRNTHEADER
Gosub PRNTPROD
Goto SORTEDLOOP
!
NEWCOMMOD: Rem "New Commodity
K2$ = K1$[1,4];NWC = 1;PRODPRNTD = 0
Search #4,2,1;K2$,REC[4],E
If Not(E)
  Mat Read #4,REC[4],0;D$;
Else 
  D$ = " ",D$;D$[1,16] = "COMM. NOT FOUND!"
End If 
Gosub PRNTHEADER
If CLN > 8 ! "not at top of page!
  If j8 = 0 Print #0;"\15\" \ CLN = CLN + 2
  If CLN + 5 > MXLN Let CLN = 90;NWC = 1
End If 
Gosub PRNTHEADER
!
PRNTCOMMD: Rem "if new page
If j8 = 0
  Print #0; Tab (1);K2$[1,4];
  Print #0; Tab (7);D$[1,16];
End If 
NWC = 0;PRODPRNTD = 0
Return 
!
NEWVEND: Rem "New Vendor Get/Print Info
CVEND = K1$[6,11];NVND = 1
K3$ = " ",K3$;K3$ = CVEND Using "######"
Search #6,2,1;K3$,REC[6],E
If Not(E)
  Mat Read #6,REC[6],0;VA$;
  Mat Read #6,REC[6],576;A5$;
  K4$ = K3$
  Search #7,2,1;K4$,REC[7],E
  If Not(E)
    Mat Read #7,REC[7],314;M2$;
  Else 
    M2$ = " ",M2$
  End If 
Else 
  VA$ = " ",VA$;VA$[1,17] = "VENDOR NOT FOUND!"
  M2$ = " ",M2$;A5$ = " ",A5$
End If 
VA$[117,128] = A5$[1,12]
M2$[1,12] = A5$[31,42]
If CLN + 5 > MXLN Let CLN = 90
Gosub PRNTHEADER
NVND = 0
!
PRNTVEND: Rem "if new page
If j8 Goto PrintVendorExit ! dx xml
!
If CLN <= 8 And NVND Return 
If PRODPRNTD Print #0;"" \ CLN = CLN + 1
Print #0; Tab (25);K3$;
If K1$[5,5] <> " " Print #0;"(A)";
Print #0; Tab (35);VA$[1,30];
Print #0; Tab (67);A5$[1,20];
Print #0; Tab (88);A5$[31,50];
Print #0; Tab (109);VA$[129,148]
Print #0;""
Print #0; Tab (36);"PRODUCT"; Tab (50);"DESCRIPTION 1"; Tab (85);"LAST COST";
Print #0; Tab (101);"LAST PO"
CLN = CLN + 3;PRODPRNTD = 0
Gosub PRNTHEADER
!
PrintVendorExit: !
NVND = 0
Return 
!
PRNTPROD: Rem "Print Product Line
PRODPRNTD = 1
!
If j8
  tmp$ = K2$[1,4],fdel$,RTrim$(D$[1,16]),fdel$
  tmp$ = tmp$,K3$,fdel$,RTrim$(VA$[1,30]),fdel$,RTrim$(A5$[1,20]),fdel$
  tmp$ = tmp$,RTrim$(A5$[31,50]),fdel$,RTrim$(VA$[129,148]),fdel$
  tmp$ = tmp$,A$[140,151],fdel$,RTrim$(A$[9,38]),fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,RTrim$(A$[63,92]),fdel$
  tmp$ = tmp$,LCOST Using PMASK$,fdel$,COSTUM$,fdel$
  X2 = LPODATE \ Gosub NUM2DATE
  tmp$ = tmp$,X$[1,8],fdel$
  !
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  Return 
End If 
!
Print #0; Tab (36);A$[140,151];
Print #0; Tab (50);A$[9,38];
Print #0; Using PMASK$; Tab (82);LCOST;
Print #0;"/";COSTUM$;
X2 = LPODATE \ Gosub NUM2DATE
Print #0; Tab (100);X$[1,8]
Print #0; Tab (51);A$[63,92]
CLN = CLN + 2
Return 
!
PRNTHEADER: Rem "Header Here
If j8 Return ! dx xml
!
If CLN < MXLN Return 
If CPG
  If SCRN
    ! -    Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
    ! -    Input Len 16384 + 1;""ANS$
    ! -    Print 'CS';
  Else 
    Print #0;"\14\";
  End If 
End If 
CPG = CPG + 1
Print #0; Tab 5;"DATE  ";SDATE$;
Print #0; Tab (Int(66 - Len(CONAME$) / 2));CONAME$;
Print #0; Tab (118);"PAGE ";Str$(CPG)
STIM$ = "" \ Call Time(STIM$)
Print #0;" - 394A - ";STIM$;
Print #0; Tab (49);"COMMODITY/VENDOR PURCHASE HISTORY";
If P9$[33,33] = "Y" Print #0;" - WHSE";WHSE;
Print #0;""
If LSDATE
  Print #0; Tab (52);"PO'S RECEIVED AFTER ";
  X2 = LSDATE \ Gosub NUM2DATE
  Print #0;X$
Else 
  Print #0; Tab (55);"ALL PO'S RECEIVED"
End If 
Print #0;""
Print #0; Tab (1);"COMM"; Tab (7);"DESCRIPTION";
Print #0; Tab (25);"VEND #"; Tab (35);"VENDOR NAME";
Print #0; Tab (67);"PHONE #"; Tab (88);"FAX NO";
Print #0; Tab (109);"CONTACT"
Print #0;LN$[1,130]
Print #0;""
CLN = 8;PRODPRNTD = 0
If Not(NWC) ! "not new page cause of commod - print previous
  Gosub PRNTCOMMD
  Gosub PRNTVEND
End If 
Return 
READ_PROD: Rem "
Mat Read #2,REC[2],0;A$;
Mat Read #2,REC[2],156;B;
Mat Read #2,REC[2],256;A;
Mat Read #2,REC[2],512;PFU1;
Mat Read #2,REC[2],554;PFU2;
COSTUM = PFU1[11]
POCOST = B[10]
COSTUM$ = "    "
If COSTUM = -2 Let COSTUM$ = "LOT "
If COSTUM = -1 Let COSTUM$ = "CWT "
If COSTUM = -3 Let COSTUM$ = "LB  "
If COSTUM > 0 Read #8,COSTUM,10;COSTUM$;
Return 
!
GET_PWHSE: Rem "Warehouse Used
K4$ = " ",K4$;LPODATE = 0
K4$ = A$[140,151];K4$[13] = CWHSE Using "##"
Search #3,2,1;K4$,REC[3],E
If Not(E)
  Mat Read #3,REC[3],78;W3;
  Mat Read #3,REC[3],428;WH7;
Else 
  W3[16] = 0;WH7[0] = 0
End If 
If P9$[32,32] = "Y" And W3[16] Let POCOST = W3[16]
LPODATE = WH7[0]
Return 
!
GET_AVND: Rem "Alt Vendor File
K5$ = " ",K5$;K5$[1,12] = A$[140,151]
K5$[13] = K1$[6,11]
Search #5,2,1;K5$,REC[5],E \ If E Return 
Mat Read #5,REC[5],32;AV2;
If AV2[1] Let LPODATE = AV2[1]
If AV2[2] Let POCOST = AV2[2]
Return 
!
COSTCONV: Rem "Convert Cost
CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 2
CNVTA = POCOST \ Gosub CONVERT
LCOST = AMOUNT
Return 
!
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
PRNTDONE: Rem "Done
! - If SCRN
! -   Print @0,23;'CL';"PRESS <CR> TO EXIT  ";
! -   Input Len 16384 + 1;""ANS$
! - End If 
OUTEND: Rem "outta here
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!
! - Print 'CS';
! - Chain "MX000C"
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB ! - was If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ Rem ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
