! serpccn2rpt
!   description - cost change notifier (taken from serpccnrpt)
!	with changes for Jersey Paper 64777
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/serpccn2rpt.dl4 src/serpccn2rpt.src
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN  3, 2010  13:46:18
Rem /w2/papermaster/r2005//usr/acct/dave/work/custom/htberry.r9/op268pcnrpt.src (univ2) [dave] {12669}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc"
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus,GetDelimiters
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,Pdate$
Declare Intrinsic Sub FindF,FormatDate,InpBuf,String,DateToJulian
Declare Intrinsic Sub programdump,JulianToDate,VerifyDate
! Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Enter BEGIN_EFFDATE,ENDING_EFFDATE,FLEPTR2[],REC_CUST,CH_LPT,Rstr$,scrn
Dim 1%,CH_CUST
Dim A3$[22],BT$[20],U2$[60],A2$[30],A1$[142],KEY_$[50],KSP$[50],KRB$[50]
Dim 2%,A0[3],C1[12],REC,C3[1],LPPPCUST,PERMGRP,CUST,BILLTO
Dim 1%,S0[20],SUB_,SZN,C7[4],C0,C2[2],C8,C11[2]
Dim 3%,C4[6],C10[5],CFIN[8],U1,C9,C5[5],C6[9],REC_CUST
Dim LP$[12],LP2$[84],LPMT$[2],KEY_LASTPR$[40],DATE_LP$[10]
Dim 1%,LPC3[4],AI,LPEUN[2],LPWH,CH_LASTPR
Dim 2%,LPDF,LPC1[2],LPR1[3],LPC5[3],LPPCDATE,CNDATE[1,1],RCDATE[1,1]
Dim 3%,LPC2[2],LPC4[3],LPR[4],LPUNF[6],PERM[1],LPLPERM,REC_LASTPR
Dim 1%,CH_VEND,VNDA[4],VNDM4[1],VBANK
Dim 2%,VND1[6],VND3,VEND_A$[30],unit$[4],spc1[4]
Dim 3%,REC_VEND,VNDA2[11],VNDC1[5],VND4[1],VNDA3[7]
Dim VNDA$[264],VNDC2$[44],VNDA1$[20],VNDA2$[8],VNDA3$[4],VCTRY$[15]
Dim VNDA5$[60],tmpdate$[10],Julian_tmpDate$[10]
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60],PRFLG$[10]
Dim PRMKUPTYP$[4],PUM$[4],CUM$[4]
Dim 1%,CH_PROD,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1],PRBASE
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1],FDT[1]
Dim 2%,PRMKUP[3],Jul_Date[5]
Dim 3%,REC_PROD,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,FUT[2]
Dim 1%,SNAME$[30],X$[10],CONAME$[30],FXDIR$[50],BLOCK$[500]
Dim 1%,DATE$[10],KPROD$[50],KVEND$[50],KSORT$[50],KSORT2$[80]
Dim 1%,EXISTS,TRUE,FALSE,GOLINE,LINE_,PAGE,PAGELENGTH,SECOND_ADDR,CURRENT,FUTURE
Dim 1%,CNVTU[2],PRODLENGTH,ALPHA$[26],F1$[16]
Dim 2%,BRK,EFF_DATE,MARGIN[1]
Dim 3%,PRICE[1],PRICEP[1],CNVTA,AMOUNT,COST1[1],COST1P[1],Contr[1],RContr[1],PTYPE[1]
Dim 3%,CTYPE[1]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],msg$[100],Message$[400],WebStr$[2000]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
TRUE = 1;FALSE = 0
CURRENT = 0;FUTURE = 1
B$=" ",b$
ALPHA$ = "abcdefghijklmnopqrstuvwxyz"
CH_CNTRL = FLEPTR2[0]
CH_PROD = FLEPTR2[1]
CH_SPECPRICE = FLEPTR2[5]
CH_CONTRACTH = FLEPTR2[6]
CH_CCODES = FLEPTR2[7]
CH_SORT = FLEPTR2[9]
CH_CUST = FLEPTR2[10]
CH_VEND = FLEPTR2[11]
CH_REBATEDTL = 84
CH_RCONTRACTH = 85
CH_SLSM = 86;KSORT$ = " ",KSORT$
CH_SORT2 = 87;PRINTIT = 0
CH_LASTPR = FLEPTR2[4]
tmpdate$=Begin_EFFDate using "&&&&&&"
Call DateToJulian(1,tmpdate$,JULIAN_tmpdate$,E) \ If E JULIAN_tmpdate$=Str$(Tim(6))
JUL_Date[1] = JULIAN_tmpdATE$
tmpdate$=Ending_EFFDate using "&&&&&&"
Call DateToJulian(1,tmpdate$,JULIAN_tmpdate$,E) \ If E JULIAN_tmpdate$=Str$(Tim(6))
JUL_Date[2] = JULIAN_tmpdATE$
! need julian of date range for a check later
Read #CH_CNTRL,3,0;CONAME$;
MAIN: Rem
If REC_CUST = -1 ! "first time in
  Gosub BLD_NEWSORTFLE
  Goto OUTEND
End If 
If REC_CUST = -99 ! "Print the stupid thing
  Read #CH_CNTRL,88,1824;KSORT$[1,16]; \ Ropen #CH_SLSM,KSORT$
  PRINTIT = 1;FINALPRT = REC_CUST
  Read #CH_CNTRL,88,320;F1$;
  Ropen #CH_REBATEDTL,F1$
  Read #CH_CNTRL,88,304;F1$;
  Ropen #CH_RCONTRACTH,F1$
  Goto STARTPRINT
End If 
Mat Read #CH_CUST,REC_CUST,0,30;A1$
Mat Read #CH_CUST,REC_CUST,142;C1
Mat Read #CH_CUST,REC_CUST,194;C2
Mat Read #CH_CUST,REC_CUST,200;C3
Mat Read #CH_CUST,REC_CUST,208;C0
Mat Read #CH_CUST,REC_CUST,210;C4
Mat Read #CH_CUST,REC_CUST,252;C5
Mat Read #CH_CUST,REC_CUST,288;C6
Mat Read #CH_CUST,REC_CUST,348;A2$
Mat Read #CH_CUST,REC_CUST,378;C7
Mat Read #CH_CUST,REC_CUST,388;A3$
Mat Read #CH_CUST,REC_CUST,410;C8
Mat Read #CH_CUST,REC_CUST,412;C9
Mat Read #CH_CUST,REC_CUST,418;SUB_
Mat Read #CH_CUST,REC_CUST,420;U1
Mat Read #CH_CUST,REC_CUST,426;U2$
Mat Read #CH_CUST,REC_CUST,486;A0
Mat Read #CH_CUST,REC_CUST,502;S0
Mat Read #CH_CUST,REC_CUST,544;CFIN
Mat Read #CH_CUST,REC_CUST,598;SZN
Mat Read #CH_CUST,REC_CUST,600;BT$
Mat Read #CH_CUST,REC_CUST,620;REC
Mat Read #CH_CUST,REC_CUST,624;C10
Mat Read #CH_CUST,REC_CUST,660;C11
Unlock #CH_CUST
KSORT$ = " ";LAST_VENDOR = -1
LOOP_SORT: Search #CH_SORT,3,1;KSORT$,REC_SORT,E \ If E > 2 Gosub ERR_SEARCH
If Not(E)
  If Not(PRINTIT)
    Mat Read #CH_SORT,REC_SORT,0;LPC3
    Mat Read #CH_SORT,REC_SORT,10;PRICE
    Mat Read #CH_SORT,REC_SORT,22;EFF_DATE
    Mat Read #CH_SORT,REC_SORT,26;COST1;
	mat Read #ch_sort,rec_sort,38;Contr;
	mat Read #ch_sort,rec_sort,50;RContr;
	mat read #ch_sort,rec_sort,62;PType;
	mat read #ch_sort,rec_sort,74;CType; ! cost type from price call (64777)
    KSORT2$ = " ",KSORT2$
    KSORT2$[1,4] = C1[2] Using "####";KSORT2$[5,10] = C1[1] Using "######"
    KSORT2$[11] = KSORT$ ! prod/vendor/comm & cust/dept
    E = 2;REC_SORT2 = 0
    Search #CH_SORT2,1,0;KSORT2$,REC_SORT2,E \ If E Gosub ERR_SEARCH
    Mat Write #CH_SORT2,REC_SORT2,0;LPC3
    Mat Write #CH_SORT2,REC_SORT2,10;PRICE
    Mat Write #CH_SORT2,REC_SORT2,22;EFF_DATE
    Mat Write #CH_SORT2,REC_SORT2,26;COST1;
	mat write #ch_sort2,rec_sort2,38;Contr;
	mat write #ch_sort2,rec_sort2,50;RContr;
	mat write #ch_sort2,rec_sort2,62;ptype;
	mat write #ch_sort2,rec_sort2,74;CType; ! cost type
    Search #CH_SORT2,4,1;KSORT2$,REC_SORT2,E \ If E Gosub ERR_SEARCH
  End If 
  Goto LOOP_SORT
End If !"end of sort traversal
Goto OUTEND
STARTPRINT: Rem "Here's the actual Print
KSORT2$ = " ",KSORT2$;LAST_VENDOR = -1;LAST_CUSTOMER = -1;LAST_SLSM = -1
LINE_ = 90;PAGE = 0;PAGELENGTH = 60
if scrn ! xml / browser - header
	webstr$="SLSP",fdel$,"SL NAME",fdel$
	webstr$=webstr$,"CUSTNO",fdel$,"CUST NAME",fdel$
	webstr$=webstr$,"PROD ID",fdel$,"DESC 1",fdel$,"DESC 2",fdel$
	webstr$=webstr$,"LAST PURCH",fdel$,"CURR PRICE",fdel$
	webstr$=webstr$,"PRICE UM",fdel$,"CURR COST",fdel$
	webstr$=webstr$,"COST UM",fdel$,"MARGIN",fdel$
	webstr$=webstr$,"CONTRNO",fdel$,"BEG DATE",fdel$
	webstr$=webstr$,"END DATE",fdel$,"RBT CONTR",fdel$
	webstr$=webstr$,"BEG RDATE",fdel$,"END RDATE",fdel$
	webstr$=webstr$,"NEW PRICE",fdel$,"NEW COST",fdel$,"NEW MARGIN",FDEL$
	webstr$=webstr$,"NEW CONTRNO",fdel$,"NBEG DATE",fdel$
	webstr$=webstr$,"NEND DATE",fdel$,"NRBT CONTR",fdel$
	webstr$=webstr$,"NBEG RDATE",fdel$,"NEND RDATE",fdel$
	webstr$=webstr$,"CCHG EFFDATE",fdel$
	webstr$=webstr$,rdel$ ! end of rec
	call addtostr(e$,rstr$,webstr$)
Endif
RSORTLOOP: Rem "thru resorted stuff
Search #CH_SORT2,3,1;KSORT2$,REC_SORT,E \ If E = 2 Goto ALLDONE
If E Gosub ERR_SEARCH
If LAST_SLSM <> Val(KSORT2$[1,4])
  LINE_ = 90;SLSM = KSORT2$[1,4]
  KSORT$ = SLSM Using "###"
  Search #CH_SLSM,2,1;KSORT$,REC_SLSM,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Read #CH_SLSM,REC_SLSM,0;SNAME$;
  Else 
    SNAME$ = " ",SNAME$
    SNAME$ = "SALESPERSON NOT FOUND!"
  End If 
  LAST_SLSM = SLSM;LAST_CUSTOMER = -1;LAST_VENDOR = -1
End If 
If LAST_CUSTOMER <> Val(KSORT2$[5,10])
  KSORT$ = KSORT2$[5,10]
  Search #CH_CUST,2,1;KSORT$,REC_CUST,E \ If E>1 Gosub ERR_SEARCH
  if e goto RSORTLOOP ! just skip if cust nof 
  Mat Read #CH_CUST,REC_CUST,0,30;A1$
  Mat Read #CH_CUST,REC_CUST,142;C1
  Mat Read #CH_CUST,REC_CUST,194;C2
  Mat Read #CH_CUST,REC_CUST,200;C3
  Mat Read #CH_CUST,REC_CUST,208;C0
  Mat Read #CH_CUST,REC_CUST,210;C4
  Mat Read #CH_CUST,REC_CUST,252;C5
  Mat Read #CH_CUST,REC_CUST,288;C6
  Mat Read #CH_CUST,REC_CUST,348;A2$
  Mat Read #CH_CUST,REC_CUST,378;C7
  Mat Read #CH_CUST,REC_CUST,388;A3$
  Mat Read #CH_CUST,REC_CUST,410;C8
  Mat Read #CH_CUST,REC_CUST,412;C9
  Mat Read #CH_CUST,REC_CUST,418;SUB_
  Mat Read #CH_CUST,REC_CUST,420;U1
  Mat Read #CH_CUST,REC_CUST,426;U2$
  Mat Read #CH_CUST,REC_CUST,486;A0
  Mat Read #CH_CUST,REC_CUST,502;S0
  Mat Read #CH_CUST,REC_CUST,544;CFIN
  Mat Read #CH_CUST,REC_CUST,598;SZN
  Mat Read #CH_CUST,REC_CUST,600;BT$
  Mat Read #CH_CUST,REC_CUST,620;REC
  Mat Read #CH_CUST,REC_CUST,624;C10
  Mat Read #CH_CUST,REC_CUST,660;C11
  Unlock #CH_CUST
  if lpppcust<1 or lpppcust>999999 or fra(lpppcust) let lpppcust=0
  If Not(LPPPCUST) Goto GO_ON_WITH_PRINT
  If LPPPCUST = C1[1] And LPPPCUST <> C1[4] Goto GO_ON_WITH_PRINT
  If LPPPCUST = C1[1] And LPPPCUST = C1[4] Goto GO_ON_WITH_PRINT
  If LPPPCUST <> C1[1] And LPPPCUST <> C1[4] And C1[1] <> C1[4]
    KEY_$ = LPPPCUST Using "######"
    Search #CH_CUST,2,1;KEY_$,R_CUST,E \ If E>1 Gosub ERR_SEARCH
	if e goto RSortLoop ! skip if cust nof
    Read #CH_CUST,R_CUST,146;CUST
    Read #CH_CUST,R_CUST,158;BILLTO
    Read #CH_CUST,R_CUST,724;PERMGRP;
    If PERMGRP = CUST If CUST = BILLTO
      Goto GO_ON_WITH_PRINT
    Else 
      Goto RSORTLOOP
    End If 
  End If 
  Goto RSORTLOOP
GO_ON_WITH_PRINT: Rem have to check perm price grp
  !ALPHA$ = "N" \ If A0[3] = 1 Let ALPHA$ = "Y"
  !If A0[3] = 2 Let ALPHA$ = "F"
  If LINE_ + 5 > PAGELENGTH Let LINE_ = 90
  Gosub PRTHEADER
  if not(scrn) ! normal print
	  Print #CH_LPT;"" \ LINE_ = LINE_ + 2
	  ! Print #CH_LPT; Tab (1);ALPHA$[1,1]; ! NOTIFY NOTUSED
	  Print #CH_LPT; Using "######"; Tab (4);C1[1]; Tab (13);A1$[31,55]
  
  Endif
  LAST_CUSTOMER = KSORT2$[5,10]
  LAST_VENDOR = -9
End If ! CUST CHANGE
if scrn ! xml - send slsm/cust
	webstr$=Str$(SLSM),fdel$,RTrim$(SNAME$),fdel$
	webstr$=webstr$,Str$(C1[1]),fdel$,RTrim$(A1$[31,55]),fdel$
Endif
KSORT$ = KSORT2$[11] ! product/vendor/commod
Gosub PRTHEADER
Mat Read #CH_SORT2,REC_SORT,0;LPC3
Mat Read #CH_SORT2,REC_SORT,10;PRICE
Mat Read #CH_SORT2,REC_SORT,22;EFF_DATE;
Mat Read #CH_SORT2,REC_SORT,26;COST1;
mat Read #ch_sort2,rec_sort,38;Contr;
mat Read #ch_sort2,rec_sort,50;RContr;
mat read #ch_sort2,rec_sort,62;ptype;
mat read #ch_sort2,rec_sort,74;CType;
KPROD$ = KSORT$[1,20]
Search #CH_PROD,2,1;KPROD$,REC_PROD,E \ If E>1 Gosub ERR_SEARCH
if e goto RSortLoop ! skip prod nof
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,624;PR_PO
Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,670;U4
Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,846;PFTB
Read #CH_PROD,REC_PROD,854;UPCT
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Mat Read #CH_PROD,REC_PROD,944;PR_A2$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Mat Read #CH_PROD,REC_PROD,1018;PFN
Mat Read #CH_PROD,REC_PROD,1030;FUT
Mat Read #CH_PROD,REC_PROD,1048;FDT
Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
Mat Read #CH_PROD,REC_PROD,1066;PRBASE
Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
Unlock #CH_PROD
KEY_LASTPR$ = " ",KEY_LASTPR$
KEY_LASTPR$[1,6] = KSORT2$[5,10]
KEY_LASTPR$[7,10] = "   0" ! will be in ksort2$?
BLOCK$ = A$[140,151] \ Gosub TRIM
KEY_LASTPR$[11,10 + Len(BLOCK$)] = BLOCK$
DATE_LP$ = "        "
Search #CH_LASTPR,3,1;KEY_LASTPR$,REC_LASTPR,E
If E And E <> 2 Gosub ERR_SEARCH
If Not(E) ! right cust, prod, since mode 3
  If KEY_LASTPR$[11,10 + Len(BLOCK$)] <> BLOCK$ Let E = 99
  If KEY_LASTPR$[1,6] <> KSORT2$[5,10] Let E = 99
End If 
If Not(E) ! we definitely found it
  Mat Read #CH_LASTPR,REC_LASTPR,16;LPC1;
  TMP$ = LPC1[2] Using "&&&&&&"
  DATE_LP$[1,2] = TMP$[3,4];DATE_LP$[3,3] = "/"
  DATE_LP$[4,5] = TMP$[5,6];DATE_LP$[6,6] = "/"
  DATE_LP$[7,8] = TMP$[1,2]
End If 
CLEAR CNDATE[]
CLEAR RCDATE[]
IF CONTR[0] ! CURR CONTRACT/SPECIAL
	let state=CURRENT
	gosub GET_SPDATA
ENDIF
IF CONTR[1] ! NEW CONTRACT/SPECIAL
	if contr[1]<>contr[0] ! only if different
		let state=FUTURE
		gosub GET_SPDATA
	Endif
ENDIF
IF RCONTR[0] ! CURR RBT CONTRACT
	let state=CURRENT
	gosub GET_RBTDATA
ENDIF
IF RCONTR[1] ! NEW RBT CONTRACT
	if rcontr[1]<>Rcontr[0] ! only if different
		let state=FUTURE
		gosub GET_RBTDATA
	Endif
ENDIF
Prt_Date=EFF_DATE ! print date
! per specs on 64777 - do some changes to the date if rebt contr
if rcontr[0] ! if has curr rbt (checks if new rebate below!!)
	!If an item has a CURR REBATE that expires after the EFF. DTE of the item, 
	! then replace the EFF. DTE with the expire date of the rebate. (actual specs!!)
	if RCDATE[CURRENT,1] ! has expire
		!if RCDATE[CURRENT,1]>EFF_DATE ! expires after eff date
		!	let Prt_date=RCDATE[CURRENT,1] ! exp date of current
		!endif ! remove per customer 04/24/17
		! added 04/21/17 - if rebate expire is in eff date range - make it expire + 1 day
		tmpdate$=RCDATE[CURRENT,1] using "&&&&&&"
		Call DateToJulian(1,tmpdate$,JULIAN_tmpdate$,E) \ If E let JULIAN_tmpdate$=" ",JULIAN_tmpdate$
		JUL_Date[3] = JULIAN_tmpdATE$ ! julian expire date
		if jul_date[3]>=Jul_date[1] and jul_date[3]<=Jul_date[2] ! expires within range!!
			JUL_Date[3]=JUL_Date[3]+1 ! eff date is expire+1
			tmpdate$ = JUL_Date[3] Using "&&&&&"
			Call JulianToDate(1,tmpdate$,tmpdate$,E) \ If E let tmpdate$=" ",tmpdate$
			Call VerifyDate(tmpdate$,tmpdate$,E) \ If E let tmpdate$=" ",tmpdate$
			let x2=tmpdate$
			if x2 let Prt_date = X2
		Endif
	endif ! of has expire (no never expires!)
endif ! of has curr rebate
If RCONTR[0] and RCONTR[1] ! curr and new
	!If an item has a CURR REBATE and  NEW REBATE, the EFF. DTE --(actual specs!!)
	! should be the start of the NEW REBATE and not the last Range Date.
	if RCDATE[FUTURE,0] let Prt_date=RCDATE[FUTURE,0] ! start date of new/future
endif
if not(scrn) ! print
	Print #CH_LPT;DATE_LP$;
	BLOCK$ = KSORT$[1,20] \ Gosub TRIM
	PRODLENGTH = Len(BLOCK$) + 1
	Print #CH_LPT; Tab (9);BLOCK$;" ";
	BLOCK$ = A$[9,38] + A$[63,92] \ Gosub TRIM
	Print #CH_LPT;BLOCK$[1,50 - PRODLENGTH];
Else ! xml
	webstr$=webstr$,RTrim$(KSort$[1,20]),fdel$,RTrim$(A$[9,38]),fdel$,RTrim$(A$[63,92]),fdel$
	webstr$=webstr$,Date_LP$,fdel$
Endif
For DUMMY = CURRENT To FUTURE
  MARGIN[DUMMY] = 0
  If PRICE[DUMMY] Let MARGIN[DUMMY] = FNR(((PRICE[DUMMY] - COST1[DUMMY]) / PRICE[DUMMY]) * 100)
Next DUMMY
CNVTA = PRICE[CURRENT]
CNVTU[0] = 0
CNVTU[1] = LPC3[3]
CNVTU[2] = 2
Gosub CONVERT
PRICEP[CURRENT] = AMOUNT
CNVTA = COST1[CURRENT]
CNVTU[0] = 0
CNVTU[1] = LPC3[3]
CNVTU[2] = 2
Gosub CONVERT
COST1P[CURRENT] = AMOUNT
CNVTA = PRICE[FUTURE]
CNVTU[0] = 0
CNVTU[1] = LPC3[3]
CNVTU[2] = 2
Gosub CONVERT
PRICEP[FUTURE] = AMOUNT
CNVTA = COST1[FUTURE]
CNVTU[0] = 0
CNVTU[1] = LPC3[3]
CNVTU[2] = 2
Gosub CONVERT
COST1P[FUTURE] = AMOUNT
PUM$=B$
if lpc3[3]>0 read #ch_ccodes,lpc3[3],10;PUM$;
if lpc3[3]=-1 let pum$="CWT "
if lpc3[3]=-2 let pum$="LOT "
if lpc3[3]=-3 let PUM$="LB  "
! if cost different um (not in here)
CUM$=PUM$ ! using same
if not(scrn) ! printer
	Print #CH_LPT; Tab (62);COST1P[CURRENT] Using "$$$$$$#.##";
	if ctype[current]=9 or ctype[current]=10 print #CH_LPT;"*"; ! per specs 64777 cost from rebate
	Print #CH_LPT; Tab (74);PRICEP[CURRENT] Using "$$$$$$#.##";
	Print #CH_LPT; Tab (86);MARGIN[CURRENT] Using "--&.&&%";
	Rem
	Print #CH_LPT; Tab (93);COST1P[FUTURE] Using "$$$$$$#.##";
	if ctype[FUTURE]=9 or ctype[FUTURE]=10 print #CH_LPT;"*"; ! per specs 64777
	Print #CH_LPT; Tab (104);PRICEP[FUTURE] Using "$$$$$$#.##";
	Print #CH_LPT; Tab (115);MARGIN[FUTURE] Using "---&.&&%";
	Rem
	!DATE$ = EFF_DATE Using "&&&&&&"
	Date$=Prt_Date Using "&&&&&&" ! might have changed
	Call FormatDate(DATE$,DATE$,E)
	if e or prt_date=0 let date$="        "
	Print #CH_LPT; Tab (124);DATE$
	LINE_ = LINE_ + 1
	! print contract/rebate
	if Contr[current]
		Print #ch_lpt; Tab (4);"CURR CONTRACT: ";
		if contr[current]>0 print #ch_lpt;contr[current] using "#####"; 
		if contr[current]<0 
			tmp$="SPRCE"
			x1=abs(contr[current])
			if x1=3 or x1=7 or x1=8 or x1=11 let tmp$="PROMO"
			Print #ch_lpt;tmp$;
		Endif
		if CNDATE[CURRENT,0] ! start date
			DATE$ = CNDATE[CURRENT,0] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (25);"START: ";DATE$;
		Endif
		if CNDATE[CURRENT,1] ! end date
			DATE$ = CNDATE[CURRENT,1] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (41);"END: ";DATE$;
		Endif
	Endif ! curr contract
	If rcontr[current]
		Print #ch_lpt; Tab (60);"CURR REBATE: ";
		if rcontr[current]>0 print #ch_lpt;rcontr[current] using "######";
		if RCDATE[CURRENT,0] ! start date
			DATE$ = RCDATE[CURRENT,0] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (80);"START: ";DATE$;
		Endif
		if RCDATE[CURRENT,1] ! end date
			DATE$ = RCDATE[CURRENT,1] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (96);"END: ";DATE$;
		Endif
	Endif ! curr rebate
	if contr[current] or rcontr[current] print #ch_lpt;"" \ line_=line_+1
	if contr[current] and contr[current]=contr[future] let contr[future]=0 ! don't reprint
	if rcontr[future] and rcontr[future]=rcontr[current] let rcontr[future]=0 ! no reprint
	if Contr[Future]
		Print #ch_lpt; Tab (5);"NEW CONTRACT: ";
		if contr[Future]>0 print #ch_lpt;contr[Future] using "#####"; 
		If contr[Future]<0 
			tmp$="SPRCE"
			x1=abs(contr[Future])
			if x1=3 or x1=7 or x1=8 or x1=11 let tmp$="PROMO"
			Print #ch_lpt;tmp$;
		Endif
		if CNDATE[Future,0] ! start date
			DATE$ = CNDATE[Future,0] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (25);"START: ";DATE$;
		Endif
		if CNDATE[Future,1] ! end date
			DATE$ = CNDATE[Future,1] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (41);"END: ";DATE$;
		Endif
	Endif ! curr contract
	If rcontr[Future]
		Print #ch_lpt; Tab (61);"NEW REBATE: ";
		if rcontr[Future]>0 print #ch_lpt;rcontr[Future] using "######";
		if RCDATE[Future,0] ! start date
			DATE$ = RCDATE[Future,0] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (80);"START: ";DATE$;
		Endif
		if RCDATE[Future,1] ! end date
			DATE$ = RCDATE[Future,1] Using "&&&&&&"
			Call FormatDate(DATE$,DATE$,E)
			Print #ch_lpt;tab (96);"END: ";DATE$;
		Endif
	Endif ! curr rebate
	if contr[Future] or rcontr[Future] print #ch_lpt;"" \ line_=line_+1
	If LINE_ > PAGELENGTH Gosub PRTHEADER
Else ! xml
	webstr$=webstr$,LTrim$(PRICEP[CURRENT] Using "$$$$$$#.##"),fdel$,RTrim$(PUM$),fdel$
	webstr$=webstr$,LTRIM$(COST1P[CURRENT] Using "$$$$$$#.##") ! ,fdel$
	if ctype[current]=9 or ctype[current]=10 let webstr$=webstr$,"*" ! per specs 64777 cost from rebate
	Webstr$=Webstr$,fdel$,RTrim$(CUM$),fdel$ ! finish cost and give UM
	webstr$=webstr$,LTrim$(MARGIN[CURRENT] Using "---&.&&%"),fdel$
	! contract/rbt - current
	TMP$=Str$(Contr[CURRENT])
	if contr[current]<0 
		Let tmp$="SPECIAL"
		x1=abs(contr[current])
		if x1=3 or x1=7 or x1=8 or x1=11 let tmp$="PROMO"
	Endif
	webstr$=webstr$,tmp$,fdel$
	tmp$="" \ if CNDATE[CURRENT,0] LET TMP$=PDATE$(CNDATE[CURRENT,0]) ! START
	webstr$=webstr$,RTrim$(tmp$),fdel$
	tmp$="" \ if CNDATE[CURRENT,1] LET TMP$=PDATE$(CNDATE[CURRENT,1]) ! end
	webstr$=webstr$,RTrim$(tmp$),fdel$
	webstr$=webstr$,Str$(RContr[Current]),fdel$
	tmp$="" \ if RCDATE[CURRENT,0] LET TMP$=PDATE$(RCDATE[CURRENT,0]) ! START
	webstr$=webstr$,RTrim$(tmp$),fdel$
	tmp$="" \ if RCDATE[CURRENT,1] LET TMP$=PDATE$(RCDATE[CURRENT,1]) ! end
	webstr$=webstr$,RTrim$(tmp$),fdel$
	webstr$=webstr$,LTrim$(PRICEP[FUTURE] Using "$$$$$$#.##"),fdel$
	webstr$=webstr$,LTRIM$(COST1P[FUTURE] Using "$$$$$$#.##") !,fdel$
	if ctype[FUTURE]=9 or ctype[FUTURE]=10 let webstr$=webstr$,"*" ! per specs 64777 cost from rebat
	webstr$=webstr$,fdel$ ! finish future cost
	webstr$=webstr$,LTrim$(MARGIN[FUTURE] Using "---&.&&%"),fdel$
	! new contract/rbt
	TMP$=Str$(Contr[FUTURE])
	if contr[FUTURE]<0 
		Let tmp$="SPECIAL"
		x1=abs(contr[FUTURE])
		if x1=3 or x1=7 or x1=8 or x1=11 let tmp$="PROMO"
	Endif
	webstr$=webstr$,tmp$,fdel$
	tmp$="" \ if CNDATE[FUTURE,0] LET TMP$=PDATE$(CNDATE[FUTURE,0]) ! START
	webstr$=webstr$,RTrim$(tmp$),fdel$
	tmp$="" \ if CNDATE[FUTURE,1] LET TMP$=PDATE$(CNDATE[FUTURE,1]) ! end
	webstr$=webstr$,RTrim$(tmp$),fdel$
	webstr$=webstr$,Str$(RContr[FUTURE]),fdel$
	tmp$="" \ if RCDATE[FUTURE,0] LET TMP$=PDATE$(RCDATE[FUTURE,0]) ! START
	webstr$=webstr$,RTrim$(tmp$),fdel$
	tmp$="" \ if RCDATE[FUTURE,1] LET TMP$=PDATE$(RCDATE[FUTURE,1]) ! end
	webstr$=webstr$,RTrim$(tmp$),fdel$
	DATE$ = "" \ if Prt_Date let date$=PDate$(Prt_Date)
	! was if EFF_DATE let date$=PDate$(EFF_DATE)
	webstr$=webstr$,Date$,fdel$
	Webstr$=webstr$,rdel$ ! end of record
	call addtostr(e$,rstr$,webstr$)
Endif
Goto RSORTLOOP
ALLDONE: Rem "done - no totals, etc.
Goto OUTEND
PRTHEADER: Rem"print the sub heading
if scrn return ! xml/browser
If LINE_ < PAGELENGTH Return 
If PAGE
  Print #CH_LPT;"\14\";
End If
Print #CH_LPT;"\15\";
Print #CH_LPT;" CCN2RPT ";
Print #CH_LPT; Tab (Int(65 - (Len(CONAME$) / 2)));CONAME$;
PAGE = PAGE + 1
Print #CH_LPT; Tab (122);"PAGE:";PAGE
Print #CH_LPT;Msc$(3);
Print #CH_LPT; Tab (50);"COST CHANGE NOTIFICATION REPORT 2"
Print #CH_LPT;"SLSPSN:";SLSM;"  ";SNAME$;
Print #CH_LPT; Tab (40);"NEW PRICE DATE EFFECTIVE DATE FROM ";
X$ = BEGIN_EFFDATE Using "&&&&&&" \ Call FormatDate(X$,X$,E)
Print #CH_LPT;X$;" TO ";
X$ = ENDING_EFFDATE Using "&&&&&&" \ Call FormatDate(X$,X$,E)
Print #CH_LPT;X$
Print #CH_LPT;""
Print #CH_LPT; Tab (4);"CUST #"; Tab (13);"CUSTOMER NAME";
Print #CH_LPT; Tab (64);"CURRENT"; tab (76);"CURRENT"; tab (87);"CURRENT";
Print #CH_LPT; Tab (98);"NEW";Tab (108);"NEW";Tab (118);"NEW"
! Print #CH_LPT; Tab (1);"VENDOR"; Tab (9);"VENDOR NAME"
Print #CH_LPT;"LstPrch";
Print #CH_LPT; Tab (9);"Item Number / Description";
Print #CH_LPT; Tab (66);"Cost"; Tab (77);"Price"; Tab (88);"Margin";
Print #CH_LPT; Tab (98);"Cost"; Tab (107);"Price"; Tab (117);"Margin";
Print #CH_LPT; Tab (124);"Eff.Dte"
LINE_ = 7
Return 
TRIM: Rem"===== trim off leading and trailing spaces from the given string
!I = 1;J = Len(BLOCK$)
!LOOP_TRIM1: If I <= J If BLOCK$[I,I] = " " Let I = I + 1 \ Goto LOOP_TRIM1
!If I < J
!LOOP_TRIM2: If BLOCK$[J,J] = " " Let J = J - 1 \ Goto LOOP_TRIM2
!End If 
!If I < J Let BLOCK$ = BLOCK$[I,J] Else Let BLOCK$ = ""
Block$=Trim$(Block$) ! use dl4 function
Return 
GET_SPDATA: ! get start / end date from specprice
KSP$=B$
IF CONTR[state]<0 ! SPECIAL
	X1=ABS(CONTR[state]) ! TYPE
	IF X1=3 OR X1=7 OR X1=8 OR X1=11 ! PROMOTIONS
		KSP$[1,6]="999999"
	Else
		ksp$[1,6]=C1[1] using "######"
	Endif
Else ! contract #
	ksp$[1,6]="C"+Contr[state] Using "#####"
	x1=PType[state] ! passed
Endif
! types product,commodity,size,all
if x1 ! have a sp type
  if x1=2 or x1=3 or x1=13 let x=1
  if x1=4 or x1=7 let x=2
  if x1=11 or x1=12 let x=3
  if x1=6 or x1=8 let x=4
  if x=1 let ksp$[7]=A$[140,151] ! prod
  if x=2 let ksp$[7]="*"+a$[152,155] ! comm
  IF X=3 ! size
		UNITM = PFU1[19];UNIT$ = " ",UNIT$
		If UNITM > 0 Mat Read #CH_CCODES,UNITM,10;UNIT$;
		KSP$[7,7] = "&"
		KSP$[8,11] = UNIT$[1,4];KSP$[12,15] = UNITM Using "####";KSP$[19] = ""
  Endif
  if x=4 let ksp$[7]="#"+b$ ! all
End if ! know type
Search #CH_SPECPRICE,2,1;ksp$,R[1],E
If E return
mat read #ch_specprice,r[1],12;spc1;
cndate[STATE,0]=spc1[2];cndate[STATE,1]=spc1[4]
Return
GET_RBTDATA: ! get start / end date from rebates
krb$=B$
KRB$[1,6]=RContr[STATE] using "######"
! 3 types - 1=prod, 2=commod, 3=all
for x=1 to 3
	if x=1 let KRB$[7]=A$[140,151] ! prod
	if x=2 let KRB$[7]="*"+a$[152,155] ! comm
	if x=3 let KRB$[7]="#"+b$ ! all
	search #CH_REBATEDTL,2,1;krb$,r[2],e
	if not(e) goto Gotrbt
Next x
return
gotrbt: ! got it
mat read #ch_rebatedtl,r[2],12;spc1;
RCDATE[STATE,0]=spc1[2];RCDATE[STATE,1]=spc1[4]
Return
BLD_NEWSORTFLE: Rem "go thru existing - resort into new File
KSORT$ = "6/SORTWORKP" + Str$(Spc(6))
BLOCK$ = "[1:64] " + KSORT$
Call FindF(KSORT$,H)
If H
  Kill KSORT$
End If 
Build #CH_SORT2,BLOCK$
KSIZE = 30
Search #CH_SORT2,0,1;KSORT$,KSIZE,E \ If E Gosub ERR_SEARCH
E = 0;KSIZE = 0
Search #CH_SORT2,0,0;KSORT$,KSIZE,E \ If E Gosub ERR_SEARCH
Close #CH_SORT2
Open #CH_SORT2,KSORT$
Return 
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: ! If Spc(4) > 1280 Goto CVTSTARTB

CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.DL4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return
OUTEND: Rem cleanup and out
If FINALPRT = -99 ! "done with Print
  Try Close #CH_SORT2 Else Rem
  Try Close #CH_SLSM Else Rem
  try close #CH_REBATEDTL Else Rem
  Try Close #CH_RCONTRACTH Else Rem
  KSORT$ = "6/SORTWORKP" + Str$(Spc(6))
  Try Kill KSORT$ Else rem
End If 
End 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
E$=msg$
Call programdump("tmp/serpccn2rptse!","")
Goto Err_Msg 
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"

End ! the whole program 

