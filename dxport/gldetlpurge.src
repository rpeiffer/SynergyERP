! >>> Program gldetlpurge
!
! description General Ledger Detail Drill Down History Purge
!
! loadsave -w -n 100,10 -o prog/dxport/gldetlpurge.dl4 src/gldetlpurge.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx


Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  10:29:54
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/gl660p.src (univ2) [mary] {51019}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,VerifyDate
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Try
  Enter spec[],message$,rstr$
  dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  dim buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[800],e$[100]
Rem gl660p  ! g/l detail purge
Rem                UNIVERSAL BUSINESS SYSTEMS
Try Close Else Rem

DIM 1%,PRGNUM,eflag,returnstatus
dim 2%,comp,3%,rec_uac
dim 1%,COST_LEV[3],2%,S9[9]
If Err 0 Gosub ERR_TRAP
Dim RETVAL$[512]
Dim 1%,DEPT,USERREC,DEPTFLAG
Dim 2%,PDATE,PURGPER,ACPER,PURGPER$[4],CLIENT
Dim 3%,ACCT[1]
Dim 1%,Y,PD1[9]
Dim 2%,P5[1],F
Dim 2%,COMP,DT3[1],JPDATE,JWDATE
Dim 4%,R[50],X9,REC
Dim F$[16],FILENAME$[20]
Dim P9$[50],R$[63]
Dim STIME$[25],ETIME$[25],USERNAME$[20],GLACCT$[20]
Dim DEPTNAME$[24]

Comp = spec[0] ! company #                     
intCo = spec[0]  !                              
PURGPER = spec[1] ! YYMM ! PURGE PERIOD
ACCT[0]=  spec[2] ! Starting Account #                           
ACCT[1] = spec[3]  ! Ending Account #                           
DEPT= spec[4] !  Dept
CLIENT = SPEC[5] ! CLIENT
rec_uac = spec[8]                              
returnstatus = spec[9] 
eflag=spec[10]
Rem dim for glapdetl
Dim GLAPKEY1$[50],GLAPKEY2$[50],2%,GLAP[6],GLAP$[12],GLAP1$[30],GLAP2$[12]
Dim 4%,GLAP1,1%,GLAP2[2]
Rem dim for glardetl
Dim GLARKEY1$[50],GLARKEY2$[50],2%,GLAR[6],GLAR$[12],GLAR1$[30],GLAR2$[2]
Dim 4%,GLAR1,1%,GLAR2[1],3%,GLARTRN
Rem dim for glcdetl
Dim GLCDKEY1$[50],GLCDKEY2$[50],2%,GLCD[6],3%,GLCD0,GLCD$[12],GLCD1$[30]
Dim 4%,GLCD1,1%,GLCD2[3]
Rem dim for glcretl
Dim GLCRKEY1$[50],GLCRKEY2$[50],2%,GLCR[7],GLCR$[12],GLCR1$[30],GLCR2$[2]
Dim 4%,GLCR1,1%,GLCR2[1],3%,GLCRTRN[1],GLCR0$[10]
Rem dim for glmfgetl
Dim GLMFGKEY1$[50],GLMFGKEY2$[50],2%,GLMFG[6],GLMFG0$[12],GLMFG$[12],GLMFG1$[30]
Dim 4%,GLMFG1,1%,GLMFG2[1],GLMFGWO$[6]
Rem dim for glmretl
Dim GLMRKEY1$[50],GLMRKEY2$[50],2%,GLMR[4],GLMR1$[40],GLMR$[12],GLMR0$[12]
Dim 1%,GLMR0[1],3%,GLMR1[5],4%,GLMR2
Rem dim for glpodetl
Dim GLPOKEY1$[50],GLPOKEY2$[50],2%,GLPO[6],GLPO$[12],GLPO1$[30],GLPO2$[2]
Dim 4%,GLPO1,1%,GLPO2[1],3%,GLPOTRN
Rem dim glvr detail file
Dim 2%,GLVR[6],GLVR$[12],GLVR1$[30],GLVR2$[12],4%,GLVR1,1%,GLVR2[2]
Dim 3%,REC_GLVR,GLVRKEY1$[50],GLVRKEY2$[50],GLVR9$[40],3%,GLVR9
Dim 1%,FV1[5]
Dim 2%,FV4[2]
Dim 3%,FV2[2],FV3[7],REC_FV,FV5[3]
Dim FV1$[12],FV2$[52],FV9$[52]
Dim FVKEY$[50],KEYFV$[50]
Rem dim glxa detail file
Dim 2%,GLX[9],GLX$[12],GLX1$[12],GLX2$[60],GLX3$[30],GLX0$[8],4%,GLX1,3%,GLX2[6]
Dim 3%,REC_GLX,GLXKEY1$[50],GLXKEY2$[50]
Dim 1%,CHNLFREE,SCR1,LOCKPORT
Dim 1%,UN[2]
Dim USERACCESS$[10]
Dim 1%,DFT_COST,COST_SEC,2%,AXCESS
Dim 4%
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}

F$="cntrl/Cntrl"+str$(comp)
Open #1,F$
Mat Read #1,51,10;DEPTFLAG; \ DEPTFLAG = 0
Mat Read #1,19,50;P9$;
If P9$[17,17] <> "Y"
  Print @0,22;'CL';"G/L Option is not Available ";
  Signal 3,20
  Goto OUTEND
End If 
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)

L_900: Rem start here
ACCT[0] = 0;ACCT[1] = 99999999

L_1200: Rem start purge here
Call Time(STIME$)
SRCHTRANS: Rem start search here
! Print @0,21;'CL';"Phase 1: Purging General Ledger Accounts Payable Detail ";
CH_GLAP = 11
FILENAME$ = COMP Using "4/GLAPDETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLAR
Open #CH_GLAP,FILENAME$
GLAPKEY1$ = " ",GLAPKEY1$
SRCHGLAP: Rem search glapdetl file
Search #CH_GLAP,3,1;GLAPKEY1$,REC,E \ If E = 2 Goto STARTGLAR
!If E Gosub ERR_SEARCH
if e<>0 
	try close #ch_glap else rem
	goto startglar: ! bypass file problem
endif
ACPER = GLAPKEY1$[1,4] 
If ACPER > PURGPER 
	try close #ch_glap else rem
	Goto STARTGLAR
endif
GLACCT = GLAPKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLAP
If GLACCT > ACCT[1] Goto SRCHGLAP
If DEPT<>0
  GLDEPT = GLAPKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLAP
End If 
Mat Read #CH_GLAP,REC,0;GLAP;
if client<>0
	IF GLAP[0]<>CLIENT GOTO SRCHGLAP:
endif	
Mat Read #CH_GLAP,REC,40;GLAP$;
Mat Read #CH_GLAP,REC,52;GLAP1$;
Mat Read #CH_GLAP,REC,82;GLAP2$;
Mat Read #CH_GLAP,REC,106;GLAP1;
Mat Read #CH_GLAP,REC,114;GLAP2
GLAPKEY2$ = " ",GLAPKEY2$
GLAPKEY2$[1,6] = GLAP[2] Using "######"
GLAPKEY2$[7,18] = GLAP2$[1,12]
GLAPKEY2$[19,20] = GLAP2[0] Using "##"
GLAPKEY2$[21,32] = GLAP$[1,12]
GLAPKEY2$[33,36] = GLAP[1] Using "&&&&"
GLAPKEY2$[37,42] = GLAP[6] Using "######"
Search #CH_GLAP,5,2;GLAPKEY2$,REC,E 
if e<>0 goto srchglap: ! \ If E Gosub ERR_SEARCH
Search #CH_GLAP,5,1;GLAPKEY1$,REC,E 
if e<>0 goto srchglap: \ If E Gosub ERR_SEARCH
E = 3 \ Search #CH_GLAP,1,0;GLAPKEY1$,REC,E
if e<>0 goto srchglap: ! \ If E Gosub ERR_SEARCH
Goto SRCHGLAP
STARTGLAR: Rem start search here
!Print @0,21;'CL';"Phase 2: Purging General Ledger Accounts Receivable Detail ";
CH_GLAR = 12
FILENAME$ = COMP Using "4/glardetl#"
Call FindF(FILENAME$,A9)
If Not(A9) Goto STARTGLCD
Open #CH_GLAR,FILENAME$
GLARKEY1$ = " ",GLARKEY1$
SRCHGLAR: Rem search glardetl file
Search #CH_GLAR,3,1;GLARKEY1$,REC,E 
if e<>0 
	try close #ch_glar else rem
	goto startglcd: ! bypass file problem
endif
!\ If E = 2 Goto STARTGLCD
!If E Gosub ERR_SEARCH
ACPER = GLARKEY1$[1,4]
If ACPER > PURGPER 
	try close #ch_glar else rem
	goto startglcd: ! bypass file problem
endif
GLACCT = GLARKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLAR
If GLACCT > ACCT[1] Goto SRCHGLAR
If DEPT<>0
  GLDEPT = GLARKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLAR
End If 
Mat Read #CH_GLAR,REC,0;GLAR;
if client<>0 
	IF GLAR[0]<>CLIENT GOTO SRCHGLAR:
ENDIF	
Mat Read #CH_GLAR,REC,40;GLAR$;
Mat Read #CH_GLAR,REC,52;GLAR1$;
Mat Read #CH_GLAR,REC,82;GLAR2$;
Mat Read #CH_GLAR,REC,84;GLAR1;
Mat Read #CH_GLAR,REC,92;GLAR2;
Mat Read #CH_GLAR,REC,96;GLARTRN;
GLARKEY2$ = " ",GLARKEY2$
GLARKEY2$[1,6] = GLAR[2] Using "######"
GLARKEY2$[7,16] = GLARTRN Using "##########"
GLARKEY2$[17,18] = GLAR2[1] Using "##"
GLARKEY2$[19,30] = GLAR$[1,12]
GLARKEY2$[31,34] = GLAR[1] Using "&&&&"
GLARKEY2$[35,40] = GLAR[6] Using "######"
Search #CH_GLAR,5,2;GLARKEY2$,REC,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHGLAR:
Search #CH_GLAR,5,1;GLARKEY1$,REC,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHGLAR:
E = 3 \ Search #CH_GLAR,1,0;GLARKEY1$,REC,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHGLAR:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLAR
STARTGLCD: Rem start search here
!Print @0,21;'CL';"Phase 3: Purging General Ledger Cash Disbursements Detail ";
CH_GLCD = 13
FILENAME$ = COMP Using "4/GLCDDETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLCR
Open #CH_GLCD,FILENAME$
GLCDKEY1$ = " ",GLCDKEY1$
SRCHGLCD: Rem search glcddetl file
Search #CH_GLCD,3,1;GLCDKEY1$,REC,E !\ If E = 2 Goto STARTGLCR
!If E Gosub ERR_SEARCH
if e<>0 
	try close #ch_glcd else rem
	goto startglcr: ! bypass file problem
endif
ACPER = GLCDKEY1$[1,4]
If ACPER > PURGPER 
	try close #ch_glcd else rem
	goto startglcr: ! bypass file problem
endif
GLACCT = GLCDKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLCD
If GLACCT > ACCT[1] Goto SRCHGLCD
If DEPT
  GLDEPT = GLCDKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLCD
End If 
Mat Read #CH_GLCD,REC,0;GLCD;
IF CLIENT<>0
	IF CLIENT <>GLCD[0] GOTO SRCHGLCD:
ENDIF
Mat Read #CH_GLCD,REC,34;GLCD0;
Mat Read #CH_GLCD,REC,40;GLCD$;
Mat Read #CH_GLCD,REC,52;GLCD1$;
Mat Read #CH_GLCD,REC,82;GLCD1;
Mat Read #CH_GLCD,REC,90;GLCD2
GLCDKEY2$ = " ",GLCDKEY2$
GLCDKEY2$[1,6] = GLCD[2] Using "######"
GLCDKEY2$[7,8] = GLCD2[2] Using "##"
GLCDKEY2$[9,14] = GLCD[2] Using "######"
GLCDKEY2$[15,16] = GLCD2[0] Using "##"
GLCDKEY2$[17,20] = GLCD[1] Using "&&&&"
GLCDKEY2$[21,26] = GLCD[6] Using "######"
GLCDKEY2$[27,38] = GLCD$[1,12]
Search #CH_GLCD,5,2;GLCDKEY2$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 Goto SRCHGLCD
Search #CH_GLCD,5,1;GLCDKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 Goto SRCHGLCD
E = 3 \ Search #CH_GLCD,1,0;GLCDKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 Goto SRCHGLCD
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLCD
STARTGLCR: Rem start search here
!Print @0,21;'CL';"Phase 4: Purging General Ledger Cash Receipts Detail ";
CH_GLCR = 14
FILENAME$ = COMP Using "4/GLCRDETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLMFG
Open #CH_GLCR,FILENAME$
GLCRKEY1$ = " ",GLCRKEY1$
SRCHGLCR: Rem search glcrdetl file
Search #CH_GLCR,3,1;GLCRKEY1$,REC,E !\ If E = 2 Goto STARTGLMFG
!If E <>0 Goto STARTGLMFG
if e<>0 
	try close #ch_glcr else rem
	goto startglmfg: ! bypass file problem
endif
!If E Gosub ERR_SEARCH
ACPER = GLCRKEY1$[1,4]
If ACPER > PURGPER 
	try close #ch_glcr else rem
	goto startglmfg: ! bypass file problem
endif
GLACCT = GLCRKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLCR
If GLACCT > ACCT[1] Goto SRCHGLCR
If DEPT
  GLDEPT = GLCRKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLCR
End If 
Mat Read #CH_GLCR,REC,0;GLCR;
if client <>0
	if glcr[0]<>client goto srchglcr:
endif
Mat Read #CH_GLCR,REC,40;GLCR$;
Mat Read #CH_GLCR,REC,52;GLCR1$;
Mat Read #CH_GLCR,REC,82;GLCR2$;
Mat Read #CH_GLCR,REC,84;GLCR1;
Mat Read #CH_GLCR,REC,92;GLCR2;
Mat Read #CH_GLCR,REC,96;GLCRTRN;
Mat Read #CH_GLCR,REC,114;GLCR0$
GLCRKEY2$ = " ",GLCRKEY2$
GLCRKEY2$[1,6] = GLCR[2] Using "######"
GLCRKEY2$[7,8] = GLCR[7] Using "##"
GLCRKEY2$[9,14] = GLCR[3] Using "######"
GLCRKEY2$[15,26] = GLCR$[1,12]
GLCRKEY2$[27,30] = GLCR[1] Using "&&&&"
GLCRKEY2$[31,36] = GLCR[6] Using "######"
Search #CH_GLCR,5,2;GLCRKEY2$,REC,E !\ If E Gosub ERR_SEARCH
if e <>0 goto srchglcr:
Search #CH_GLCR,5,1;GLCRKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e <>0 goto srchglcr:
E = 3 \ Search #CH_GLCR,1,0;GLCRKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e <>0 goto srchglcr:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLCR
STARTGLMFG: Rem start search here
!Print @0,21;'CL';"Phase 5: Purging General Ledger Work Order Detail ";
CH_GLMFG = 15
FILENAME$ = COMP Using "4/GLMFGDETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLMR
Open #CH_GLMFG,FILENAME$
GLMFGKEY1$ = " ",GLMFGKEY1$
SRCHGLMFG: Rem search glmfgdetl file
Search #CH_GLMFG,3,1;GLMFGKEY1$,REC,E !
if e<>0 
	try close #ch_glmfg else rem
	goto startglmr: ! bypass file problem
endif
!If E<>0 Goto STARTGLMR
!If E Gosub ERR_SEARCH
ACPER = GLMFGKEY1$[1,4]
If ACPER > PURGPER 
	try close #ch_glmfg else rem
	goto startglmr: ! bypass file problem
endif
GLACCT = GLMFGKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLMFG
If GLACCT > ACCT[1] Goto SRCHGLMFG
If DEPT
  GLDEPT = GLMFGKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLMFG
End If 
Mat Read #CH_GLMFG,REC,0;GLMFG;
if client<>0
	if client<>glmfg[0] goto srchglmfg:
endif
Mat Read #CH_GLMFG,REC,28;GLMFG0$;
Mat Read #CH_GLMFG,REC,40;GLMFG$;
Mat Read #CH_GLMFG,REC,52;GLMFG1$;
Mat Read #CH_GLMFG,REC,84;GLMFG1;
Mat Read #CH_GLMFG,REC,92;GLMFG2;
Mat Read #CH_GLMFG,REC,96;GLMFGWO$
GLMFGKEY2$ = " ",GLMFGKEY2$
GLMFGKEY2$[1,6] = GLMFGWO$[1,6]
GLMFGKEY2$[7,18] = GLMFG$[1,12]
GLMFGKEY2$[19,22] = GLMFG[1] Using "&&&&"
GLMFGKEY2$[23,28] = GLMFG[6] Using "######"
Search #CH_GLMFG,5,2;GLMFGKEY2$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglmfg:
Search #CH_GLMFG,5,1;GLMFGKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglmfg:
E = 3 \ Search #CH_GLMFG,1,0;GLMFGKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglmfg:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLMFG
STARTGLMR: Rem start search here
!Print @0,21;'CL';"Phase 6: Purging G/L Miscellaneous Receipts to Stock Detail ";
CH_GLMR = 16
FILENAME$ = COMP Using "4/GLMRDETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLPO
Open #CH_GLMR,FILENAME$
GLMRKEY1$ = " ",GLMRKEY1$
SRCHGLMR: Rem search glmrdetl file
Search #CH_GLMR,3,1;GLMRKEY1$,REC,E !\ If E = 2 Goto STARTGLPO
!If E <>0 Goto STARTGLPO
!If E Gosub ERR_SEARCH
if e<>0 
	try close #ch_glmr else rem
	goto startglpo: ! bypass file problem
endif
ACPER = GLMRKEY1$[1,4]
If ACPER > PURGPER 
	try close #ch_glmr else rem
	goto startglpo: ! bypass file problem
endif
GLACCT = GLMRKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLMR
If GLACCT > ACCT[1] Goto SRCHGLMR
If DEPT
  GLDEPT = GLMRKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLMR
End If 
Mat Read #CH_GLMR,REC,0;GLMR;
if client<>0
	if glmr[0]<>client goto srchglmr:
endif
Mat Read #CH_GLMR,REC,32;GLMR1$;
Mat Read #CH_GLMR,REC,72;GLMR$;
Mat Read #CH_GLMR,REC,84;GLMR0$;
Mat Read #CH_GLMR,REC,102;GLMR0;
Mat Read #CH_GLMR,REC,118;GLMR1
Mat Read #CH_GLMR,REC,160;GLMR2
GLMRKEY2$ = " ",GLMRKEY2$
GLMRKEY2$[1,8] = GLMR1[2] Using "########"
GLMRKEY2$[9,10] = GLMR0[1] Using "##"
GLMRKEY2$[11,14] = GLMR[1] Using "&&&&"
GLMRKEY2$[15,26] = GLMR$[1,12]
GLMRKEY2$[27,32] = GLMR[4] Using "######"
Search #CH_GLMR,5,2;GLMRKEY2$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 Goto SRCHGLMR
Search #CH_GLMR,5,1;GLMRKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 Goto SRCHGLMR
E = 3 \ Search #CH_GLMR,1,0;GLMRKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 Goto SRCHGLMR
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLMR
STARTGLPO: Rem stpot search here
CH_GLPO = 17
FILENAME$ = COMP Using "4/glpodetl#"
Call FindF(FILENAME$,A9)
If Not(A9) Goto STARTGLVR
Open #CH_GLPO,FILENAME$
!Print @0,21;'CL';"Phase 7: Purging General Ledger PO & DM Detail ";
GLPOKEY1$ = " ",GLPOKEY1$
SRCHGLPO: Rem search glpodetl file
Search #CH_GLPO,3,1;GLPOKEY1$,REC,E !\ If E = 2 Goto STARTGLVR
!If E Gosub ERR_SEARCH
if e<>0 
	try close #ch_glpo else rem
	Goto STARTGLVR
endif
ACPER = GLPOKEY1$[1,4]
If ACPER > PURGPER 
	try close #ch_glpo else rem
	Goto STARTGLVR
endif
GLACCT = GLPOKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLPO
If GLACCT > ACCT[1] Goto SRCHGLPO
If DEPT
  GLDEPT = GLPOKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLPO
End If 
Mat Read #CH_GLPO,REC,0;GLPO;
if client<>0
	if glpo[0]<>client goto srchglpo:
endif
Mat Read #CH_GLPO,REC,40;GLPO$;
Mat Read #CH_GLPO,REC,52;GLPO1$;
Mat Read #CH_GLPO,REC,82;GLPO2$;
Mat Read #CH_GLPO,REC,84;GLPO1;
Mat Read #CH_GLPO,REC,92;GLPO2
Mat Read #CH_GLPO,REC,96;GLPOTRN
GLPOKEY2$ = " ",GLPOKEY2$
GLPOKEY2$[1,6] = GLPO[2] Using "######"
GLPOKEY2$[7,14] = GLPOTRN Using "########"
GLPOKEY2$[15,16] = GLPO2[1] Using "##"
GLPOKEY2$[17,28] = GLPO$[1,12]
GLPOKEY2$[29,32] = GLPO[1] Using "&&&&"
GLPOKEY2$[33,38] = GLPO[6] Using "######"
Search #CH_GLPO,5,2;GLPOKEY2$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglpo:
Search #CH_GLPO,5,1;GLPOKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglpo:
E = 3 \ Search #CH_GLPO,1,0;GLPOKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglpo:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLPO
STARTGLVR: Rem start purging gl cost variance
CH_GLVR = 18
FILENAME$ = COMP Using "4/GLVRDETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLFVH
Open #CH_GLVR,FILENAME$
!Print @0,21;'CL';"Phase 8: Purging General Ledger Cost Variance Detail ";
GLVRKEY1$ = " ",GLVRKEY1$
SRCHGLVR: Rem search glvrdetl file
Search #CH_GLVR,3,1;GLVRKEY1$,REC,E !\ If E = 2 Goto STARTGLFVH
!If E Gosub ERR_SEARCH
If E <>0 
	Try Close #ch_glvr Else Rem
	Goto STARTGLFVH
endif
ACPER = GLVRKEY1$[1,4]
If ACPER > PURGPER 
	Try Close #ch_glvr Else Rem
	Goto STARTGLFVH
endif
GLACCT = GLVRKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLVR
If GLACCT > ACCT[1] Goto SRCHGLVR
If DEPT
  GLDEPT = GLVRKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLVR
End If 
Rem! check gl dept
Mat Read #CH_GLVR,REC,0;GLVR;
if client<>0
	if glvr[0]<>client goto srchglvr:
endif
Mat Read #CH_GLVR,REC,40;GLVR$;
Mat Read #CH_GLVR,REC,52;GLVR1$;
Mat Read #CH_GLVR,REC,82;GLVR2$;
Mat Read #CH_GLVR,REC,106;GLVR1;
Mat Read #CH_GLVR,REC,114;GLVR2;
Mat Read #CH_GLVR,REC,120;GLVR9$;
Mat Read #CH_GLVR,REC,160;GLVR9
GLVRKEY2$ = " ",GLVRKEY2$
GLVRKEY2$[1,12] = GLVR2$[1,12]
GLVRKEY2$[13,14] = GLVR2[0] Using "##"
GLVRKEY2$[15,22] = GLVR9 Using "########"
GLVRKEY2$[23,34] = GLVR$[1,12]
GLVRKEY2$[35,38] = GLVR[1] Using "####"
GLVRKEY2$[39,44] = GLVR[6] Using "######"
Search #CH_GLVR,5,2;GLVRKEY2$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglvr:
Search #CH_GLVR,5,1;GLVRKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglvr:
E = 3 \ Search #CH_GLVR,1,0;GLVRKEY1$,REC,E !\ If E Gosub ERR_SEARCH
if e<>0 goto srchglvr:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLVR
STARTGLFVH: Rem start purging fifo cost variance history file
CH_FV = 19
FILENAME$ = COMP Using "4/FIFOVARH#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto STARTGLXA
Open #CH_FV,FILENAME$
! Print @0,21;'CL';"Phase 9: Purging Fifo Cost Variance Detail History ";
KEYFV$ = " ",KEYFV$
SRCHFVH: Rem search fifovarh  file
Search #CH_FV,3,1;FVKEY$,REC_FV,E !\ If E = 2 Goto STARTGLXA
If E <>0 
	Try Close #ch_fv else Rem
	Goto STARTGLXA
endif
!If E Gosub ERR_SEARCH
Mat Read #CH_FV,REC_FV,0;FV1$;
Mat Read #CH_FV,REC_FV,12;FV2$;
Mat Read #CH_FV,REC_FV,64;FV1;
Mat Read #CH_FV,REC_FV,86;FV2;
Mat Read #CH_FV,REC_FV,104;FV3;
Mat Read #CH_FV,REC_FV,158;FV4;
Mat Read #CH_FV,REC_FV,182;FV9$;
Mat Read #CH_FV,REC_FV,270;FV5;
If FV5[0] < ACCT[0] Goto SRCHFVH
If FV5[0] > ACCT[1] Goto SRCHFVH
If FV5[2] < ACCT[0] Goto SRCHFVH
If FV5[2] > ACCT[1] Goto SRCHFVH
If FV4[0] > ACPER Goto SRCHFVH
If DEPT
  GLACCT$ = FV5[0] Using "########"
  GLDEPT = GLACCT$[7,8]
  If DEPT <> GLDEPT Goto SRCHFVH
  GLACCT$ = FV5[2] Using "########"
  GLDEPT = GLACCT$[7,8]
  If DEPT <> GLDEPT Goto SRCHFVH
End If 
Search #CH_FV,5,1;FVKEY$,REC_FV,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHFVH: 
E = 3 \ Search #CH_FV,1,0;FVKEY$,REC_FV,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHFVH:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHFVH
STARTGLXA: Rem delete glxa detail file for close ap/po cntrl #
CH_GLX = 19
FILENAME$ = COMP Using "4/GLXADETL#"
Call FindF(FILENAME$,X9)
If Not(X9) Goto ENDPURGE
Open #CH_GLX,FILENAME$
!Print @0,21;'CL';"Phase 10: AP/PO Control Close Detail History ";
GLXKEY1$ = " ",GLXKEY1$
SRCHGLXA: Rem search glmrdetl file
Search #CH_GLX,3,1;GLXKEY1$,REC,E !\ If E = 2 Goto ENDPURGE
If E <>0 
	TRY CLOSE #CH_GLX ELSE REM
	Goto ENDPURGE
ENDIF
!If E Gosub ERR_SEARCH
ACPER = GLXKEY1$[1,4] 
If ACPER > PURGPER 
	TRY CLOSE #CH_GLX ELSE REM
	Goto ENDPURGE
ENDIF
GLACCT = GLXKEY1$[6,13]
If GLACCT < ACCT[0] Goto SRCHGLXA
If GLACCT > ACCT[1] Goto SRCHGLXA
If DEPT
  GLDEPT = GLXKEY1$[12,13]
  If DEPT <> GLDEPT Goto SRCHGLXA
End If 
Mat Read #CH_GLX,REC,0;GLX
Mat Read #CH_GLX,REC,52;GLX1$
Mat Read #CH_GLX,REC,64;GLX2$;
Mat Read #CH_GLX,REC,124;GLX3$;
Mat Read #CH_GLX,REC,154;GLX$;
Mat Read #CH_GLX,REC,166;GLX0$;
Mat Read #CH_GLX,REC,180;GLX0;
Mat Read #CH_GLX,REC,196;GLX2;
Mat Read #CH_GLX,REC,244;GLX1;
GLXKEY2$ = " ",GLXKEY2$
GLXKEY2$[1,6] = GLX[5] Using "######"
GLXKEY2$[7,12] = GLX[8] Using "######"
GLXKEY2$[13,14] = GLX0[1] Using "##"
GLXKEY2$[15,18] = GLX[1] Using "&&&&"
GLXKEY2$[19,30] = GLX$[1,12]
GLXKEY2$[31,36] = GLX[4] Using "######"
Search #CH_GLX,5,2;GLXKEY2$,REC,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHGLXA:
Search #CH_GLX,5,1;GLXKEY1$,REC,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHGLXA:
E = 3 \ Search #CH_GLX,1,0;GLXKEY1$,REC,E !\ If E Gosub ERR_SEARCH
IF E<>0 GOTO SRCHGLXA:
!PURGECOUNT = PURGECOUNT + 1
!Signal 2,X,E,E \ If X = Spc(6) Goto L_1570
Goto SRCHGLXA
ENDPURGE: Rem purge done
L_1570: Rem "==========================================

Goto OUTEND




ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
L_7770: Rem DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
L_7840: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_7860: Rem CONVERT YYMM TO YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
 Call programdump()  
E$=msg$ \ Error 10000
Return ! End



OUTEND: Rem EXIT ROUTINE

ELSE
	ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
	include "src/callmainerrnet.inc"
end try
end

