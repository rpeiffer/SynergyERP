! >>> Program 930
!
! description Physical Inventory Tag File Clear
! loadsave -w -n 100,10 -o prog/dxport/930.dl4 src/930.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 12, 2002  15:25:34
Rem /w/papermaster/r2002//usr/acct/rgp/work/r2002/ut/ut930.src (univ2) [rgp] {59979}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,Time,MiscStr
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem UT930 - PHYS TAG FILE CLEAR
! I! f Err 0 Gosub ERR_TRAP
Try
Dim 1%,COID
Dim 2%,WHSE[10]
Dim 3%,P1[2],R[9]
Dim K2$[50],K1$[50],K13$[50],P1$[26],P2$[28],U5$[10],NP1$[26],NP2$[28]
Dim F$[16]
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim j$[50]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=INTCo
Close #1 ! getsession open cntrl# as READONLY
j$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Mat Read #1,88,704;F$;
Open #2,F$
F$ = "3/MHLPPHYS" + Str$(COID)
Call FindF(F$,MHLP)
If MHLP<>0 ! "got a file - open/clear it
  Open #3,F$
else
	eflag=eflag+1
	let message$="Physical Inventory File Not Available"
	goto outend:
End If 
!Print @28,3;'BR';"PHYSICAL INVENTORY TAG FILE CLEAR ";'ER';
!Print @0,5;"This utility will clear ";'BR';"ALL ";'ER';" physical inventory tag "
!Print @0,6;"entries for a given warehouse."
!Print @5,8;"Enter the warehouse number to clear tags for 0 to exit ";
!Input ""U5$
Call Dxget("WHSE",tmp$)
WHSE = tmp$
if not(whse)
	eflag=eflag+1
	let message$="Warehouse Not Selected. File not Cleared."
	goto outend:
endif
Call Dxget("CLEAR",tmp$)
If UCase$(RTrim$(tmp$)) <> "Y" 
	eflag=eflag+1
	let message$="Please Verify to Clear File "
	goto outend:
endif
!L_1500: Print @5,10;"ALL entries for warehouse ";
! Using "##";WHSE;" will be CLEARED continue YES/N ";
!Input ""U5$
!If U5$[1,3] <> "YES" And U5$[1,1] <> "N" Goto L_1500
!If U5$[1,1] = "N"
!  Print @0,22;'RB BB';">>>>>";'EB BR';" PROGRAM ABORTED FILE WILL NOT BE CLEARED ";'ER BB';"<<<<<";'EB';
!  Signal 3,60
!  Print 'RB';
!End If 
!If U5$[1,3] <> "YES" Goto OUTEND
!Print @0,22;'CE';"CLEARING TAG FILE...PLEASE WAIT";
K1$ = " ",K1$;K1$ = WHSE Using "##"
L_8030: Rem LOOP DIR 1
Search #2,3,1;K1$,V1,E
If E Goto L_8200
WHSE[1] = K1$[1,2] \ If WHSE If WHSE[1] <> WHSE Goto L_8030
Mat Read #2,V1,0;P1$;
Mat Read #2,V1,26;P1;
Mat Read #2,V1,44;P2$;
For X = 0 To 2 \ P1[X] = 0 \ Next X
NP1$ = " ",NP1$;NP2$ = " ",NP2$
Mat Write #2,V1,0;NP1$
Mat Write #2,V1,26;P1
Mat Write #2,V1,44;NP2$
Search #2,5,1;K1$,V1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$
K2$[1,2] = K1$[1,2]
K2$[3,8] = K1$[15,20] \ K2$[9,14] = K1$[3,8]
K2$[15,20] = K1$[21,26]
K2$[21,26] = K1$[9,14]
Search #2,5,2;K2$,V1,E \ If E Gosub ERR_SEARCH
K13$ = " ",K13$ \ K13$[1,2] = K1$[1,2];K13$[3,8] = K2$[21,26]
K13$[9,20] = P1$[7,18];K13$[21,32] = K2$[9,20]
Search #2,5,3;K13$,V1,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #2,1,0;K1$,V1,E \ If E Gosub ERR_SEARCH
totrec=totrec+1
Goto L_8030
L_8200: Rem DONE !!
If MHLP ! "got a file - clear it
  K1$ = " ",K1$;K1$[1,2] = WHSE Using "##"
CLRMHLPP: Rem "
  Search #3,3,1;K1$,R[3],E \ If E = 2 Goto OUTEND
  If E Gosub ERR_SEARCH
  X2 = K1$ \ If X2 <> WHSE Goto OUTEND
  Search #3,5,1;K1$,R[0],E \ If E Gosub ERR_SEARCH
  K2$ = K1$[1,2],K1$[21,28]
  Search #3,5,2;K2$,R[0],E \ If E Gosub ERR_SEARCH
  E = 3
  Search #3,1,0;K1$,R[3],E \ If E Gosub ERR_SEARCH
  Goto CLRMHLPP
End If 
goto outend:

ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/930se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                                               

OUTEND: Rem EXIT PROGRAM
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	let message$="Process Complete"

endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
