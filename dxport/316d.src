! >>> Program 316d
!
! description A/R Trial Balance, Bad Check Listing
!
! loadsave -w -n 100,10 -o prog/dxport/316d.dl4 src/316d.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 19, 2005  09:00:16
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx316d.src (univ2) [txc] {05781}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX316D  - RETURNED CHECK LISTING
Rem AUTHOR: UBS   DEC 24, 1986
Rem LAST UPDATE:  rek 08/26/92  frozen a/r file
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate,FindF
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3],OPT,CUST[1]
Com P9$[50]
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 3%,tmp3
!
Dim A3$[16],C1$[142],A4$[60],K5$[25],ARDATE$[8]
Dim 1%,A0[10],FLAG,SCRPRT
Dim 2%,A2[5],H0[12],C5,R5,E1[12],D3[1],ARDATE
Dim 3%,A3[11],CRDTOT,T2[25],GNDCRD,ARREF[1]
Dim 3%,V9,PCTR
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],ext$[5]
Dim p60$[50],p61$[256]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
F = 0 \ GNDCRD = 0
If Err 0 Let F = Spc(8)
N = Chf(3)
If Err 0 Gosub ERR_TRAP
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
mat read #1,50,50;p9$;
mat read #1,60,50;p60$;
mat read #1,61,0;p61$;
If S9[0] ! "frozen a/r
  X2 = S9[1] \ Gosub L_7700
  J8$ = X$
End If 
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
SCRPRT = 0
J9 = 62
If J8 Let J9 = 18 \ SCRPRT = 99
!
Read #1,0,108;ARDATE;
Read #1,0,100;ARDATE$;
!
! dx add xport reporting code
DXSetup:
Dim tmp$[800],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"316d",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("frozenacct",tmp$) \ S9[0]=tmp$  ! report option  0=current  1=frozen
if p61$[20,20]="Y" ! frozen by month
	call dxget("FRZMNTH",tmp$)
	if RTrim$(tmp$)<>"" let s9[0]=2
	x3=tmp$
	let x$=x3 using "&&&&"
	let ext$="."+x$
Endif
call dxget("frozendate",tmp$) \ S9[1]=tmp$ ! frozen aging date
call dxget("begcust",tmp$) \ CUST[0]=tmp$ ! starting customer #
call dxget("endcust",tmp$) \ if tmp$="" let CUST[1]=999999 else CUST[1]=tmp$ ! ending customer#
!  dx end
!
! frozen report
if S9[0] ! frozen
  if s9[1]<=0 let e$="Frozen Aging date is required" \ error 10000
  tmp$=S9[1] using "&&&&&&" \ S9[1]=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
  ARDATE = S9[1] \ X2 = ARDATE 
  Gosub L_7700 \ ARDATE$ = X$
else
  S9[1]=0 ! current
endif
!
! customer
if CUST[0]<0 or CUST[0]>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
if CUST[1]<CUST[0] or CUST[1]>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
if s9[0]=2
	read #1,88,1504;j$;
	j$=RTrim$(J$)+ext$
	call findf(j$,found)
	if not(found)
		e$="Frozen file for "+ext$+" not found" \ error 10000
	Endif
Endif
!
OPT=4 ! customer detail listing
!
For I = 3 To 8
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  If I = 4 And S9[0] 
    if s9[0]=1 let J$[Len(J$) + 1] = ".FROZ" ! frozen a/r
	if s9[0]=2 let j$=RTrim$(J$)+ext$
  End If 
  Ropen #I,J$
L_845: Next I
Data "1808","1504","1840","1872","720","1824"
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
! Start Process
L_990: 
!
if J8 ! dx xml headings
  !
  tmp$="CUST #",fdel$,"NAME",fdel$
  tmp$=tmp$,"REF #",fdel$,"DESCRIPTION",fdel$
  tmp$=tmp$,"DATE",fdel$,"AMOUNT",fdel$
  tmp$=tmp$,"OPEN",fdel$,"PENDING CREDIT",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K1$ = CUST[0] Using "######" \ K3$ = CUST[1] Using "######"
J1 = 90 \ V9 = 0 \ PCTR = 0
! - If Not(SCRPRT)
! -   Print @0,22;"Printing...Please Wait...";'CE'; \ Signal 3,0
! - End If 
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
Search #4,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #4,3,1;K1$,R1,E
If E Goto L_9100
L_2010: 
If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #4,R1,0;A2;
Mat Read #4,R1,24;A3;
Mat Read #4,R1,108;A3$;
Mat Read #4,R1,124;A0;
Mat Read #4,R1,256;A4$;
Mat Read #4,R1,316;ARREF;
X1 = Int(100 * Fra(A2[3]))
If X1 <> 3 Goto L_2000
Gosub L_3000
T9 = A3 - A3[1] - A3[2]
X2 = A2[4] \ Gosub L_7770
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[6] = T9[6] + A3[0]
T9[7] = T9[7] + T9[0]
Return 
!
L_3000: Rem GET CUSTOMER INFO
J3$ = " ",J3$ \ J3$ = A2[2] Using "######"
Search #3,2,1;J3$,R2,E
If E=0 
  Mat Read #3,R2;C1$;
  Mat Read #3,R2,142;E1;
  Gosub L_3200
  GNDCRD = GNDCRD + CRDTOT
else
  C1$[31] = "CUSTOMER NOT FOUND!"
endif
Return 
!
L_3200: 
K5$ = " ",K5$ \ CRDTOT = 0
K5$ = E1[1] Using "######"
L_3220: 
Search #5,3,2;K5$,R5,E
If E Goto L_3310
C5 = K5$[1,6] \ If C5 <> E1[1] Goto L_3310
Mat Read #5,R5;H0;
If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(4) - 1 Goto L_3300
If H0 >= 9 And H0 <= 11
  Mat Read #6,H0[3],8;T2
  CRDTOT = CRDTOT + T2[0]
End If 
L_3300: Goto L_3220
L_3310: Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
Print #0; Using "-------#.##"; Tab 86;T9[6];
Print #0; Using "-------#.##"; Tab 102;T9[7];
Print #0; Using "------#.##"; Tab 119;GNDCRD;
For X0 = 0 To 20 \ T9[X0] = 0 \ Next X0
GNDCRD = 0
Return 
!
L_5000: Rem PRINT LINE
if J8 ! dx xml
  tmp$=A2[2] Using "######",fdel$,rtrim$(C1$[31,60]),fdel$
  tmp$=tmp$,ARREF[0] Using "########",fdel$
  If A3$[1,2] <> "  " let tmp2$=A3$[1,15] Else tmp2$=A4$[1,15]
  tmp$=tmp$,rtrim$(tmp2$),fdel$
  X2 = A2[4] \ Gosub L_7770
  tmp$=tmp$,X$[1,8],fdel$
  tmp$=tmp$,A3[0] Using "-------#.##",fdel$
  tmp$=tmp$,T9[0] Using "-------#.##",fdel$
  tmp$=tmp$,CRDTOT Using "------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
Print #0; Using "######"; Tab 1;A2[2];
Print #0; Tab 11;C1$[31,60];
Print #0; Using "########"; Tab 44;ARREF[0];
Print #0; Tab 54; \ If A3$[1,2] <> "  " Print #0;A3$[1,15]; Else Print #0;A4$[1,15];
X2 = A2[4] \ Gosub L_7770
Print #0; Tab 74;X$[1,8];
Print #0; Using "-------#.##"; Tab 86;A3[0];
Print #0; Using "-------#.##"; Tab 102;T9[0];
Print #0; Using "------#.##"; Tab 119;CRDTOT;
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If V9 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9 If Not(J8) Print #0;"\14\";
V9 = V9 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
Print #0;" -mx316d-";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";V9
T9$ = "" \ Call Time(T9$)
Print #0;T9$;
Print #0; Tab 49;"B A D   C H E C K   L I S T I N G"
If S9[0] = 1 Print #0;"FROZEN FILE" Else Print #0;"CURRENT FILE"
Print #0;"\15\";
Print #0; Tab 1;"CUST #";
Print #0; Tab 11;"CUSTOMER NAME";
Print #0; Tab 45;"REF #";
Print #0; Tab 54;"DESCRIPTION";
Print #0; Tab 74;"DATE";
Print #0; Tab 91;"AMOUNT";
Print #0; Tab 109;"OPEN";
Print #0; Tab 117;"PENDING CREDIT";
Print #0;" "
Print #0;"\15\";
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000c"
! 
L_9100: Rem END OF THIS RANGE
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
goto OUTEND
! - Print 'CS';
! - For X = 3 To 8 \ Close #X \ Next X
! - Close #50
! - Chain "mx316a"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
