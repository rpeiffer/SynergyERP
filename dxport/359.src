! >>> Program 359
!
! description RASL WHSE LOCATION REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/359.dl4 src/359.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 28, 2004  16:41:45
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx/mx359.src (univ2) [txc] {06181}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX359 - Product Location Report
Rem Author: cct 141628 - Acme Paper  01/04/2001
Rem Last Update:
!
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim FLE$[20],K1$[80],K2$[80],K3$[80],A$[156],STKUM$[4]
Dim LOCTN$[6],P0$[66],P9$[50],P60$[50],P61$[256]
Dim CONAME$[30],RDATE$[8],SDATE$[30],SLOCTN$[6],ELOCTN$[6]
Dim PROD$[12],RETVAL$[512],Z2$[5]
Dim 1%,PFU1[20],P1[1],CNVTU[2],FLAG,RASL[5]
Dim 1%,RPAGE,CURLINE,MAXLINE,SCRN
Dim 1%,J,OHGTZ,2%,E,3%,NUMRECS,ONHAND,R2,R3
Dim 2%,P2[2],B[24],WHSE
Dim 3%,A[33],A1[7],PFU2[6],AMOUNT,CNVTA,P3[4]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[1000],tmp1$[60],tmp2$[60]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
Rem {end dim.rtn.input}
For J = 2 To 4
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #1,88,J1;FLE$[1,16];
  Ropen #J,FLE$
NXTFLE: Next J
Data "1792","2528","1728"
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
!
!!If Not(RASL) Goto NORASL
!!RASL=0
!
Read #1,3,0;CONAME$;
Mat Read #1,0,100;RDATE$;
!
If Err 0 Let J8 = Spc(8)
SCRN = 0;J8 = 0;J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 Let SCRN = 1
RPAGE = 0;CURLINE = 90;MAXLINE = 62
If SCRN Let MAXLINE = 20
!
!!WHSE = 0
!!SLOCTN$ = "      "
!!ELOCTN$ = "zzzzzz"
!!OHGTZ = 1
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
If Not(RASL) Let e$ = "The 'RASL' flag is not on - cannot run report!" \ error 10000
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"359",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("WHSE",tmp$) \ if tmp$="" let WHSE=1 Else let WHSE = tmp$
call dxget("SLOCTN",SLOCTN$) \ SLOCTN$ = Ucase$(SLOCTN$),Blank$
call dxget("ELOCTN",ELOCTN$) \ ELOCTN$ = UCase$(ELOCTN$),EndParam$
call dxget("OHGTZ",tmp$) \ If tmp$ = "" Let OHGTZ = 0 Else Let OHGTZ = 99
!
! warehouse
If WHSE < 1 Or WHSE > 99 Let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
!
! starting & ending location
If ELOCTN$ < SLOCTN$  LET  e$ = "Invalid ending location, must be >= than starting location!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!
!!Call "ProgDflt","359","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,2] = WHSE Using "##"
!!  RETVAL$[3,8] = SLOCTN$[1,6]
!!  RETVAL$[9,14] = ELOCTN$[1,6]
!!  RETVAL$[15,15] = OHGTZ Using "#"
!!End If 
!!WHSE = RETVAL$[1,2]
!!SLOCTN$[1,6] = RETVAL$[3,8]
!!ELOCTN$[1,6] = RETVAL$[9,14]
!!OHGTZ = RETVAL$[15,15]
!!STARTHERE: Rem "
!!Gosub DISPLSCRN
!!Goto FINALQ
!!ENTWHSE: Rem "Warehouse
!!J0$ = "3000 22002"
!!J2$ = "##";J1 = WHSE
!!J5$ = "Enter Warehouse"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 99
!!  Print @0,23;'CL RB';"Invalid Warehouse ";
!!  Signal 3,20 \ Goto ENTWHSE
!!End If 
!!WHSE = J1
!!RETVAL$[1,2] = WHSE Using "##"
!!Return 
!!ENTSLOC: Rem "Starting Location
!!J0$ = "2 00062105"
!!J1$ = SLOCTN$[1,6]
!!J5$ = "Enter Starting Location"
!!Gosub ISINPUT
!!SLOCTN$[1,6] = J$
!!ENTELOC: Rem "Ending Location
!!J0$ = "2 00063505"
!!J1$ = ELOCTN$[1,6]
!!J5$ = "Enter Ending Location"
!!Gosub ISINPUT
!!ELOCTN$[1,6] = J$
!!If ELOCTN$ < SLOCTN$
!!  Print @0,23;'RB CE';"Ending Location Must Be Greater Than Starting Location";
!!  Signal 3,30
!!  Goto ENTSLOC
!!End If 
!!RETVAL$[3,8] = SLOCTN$[1,6]
!!RETVAL$[9,14] = ELOCTN$[1,6]
!!Return 
!!PRNTLTZ: Rem "
!!J0$ = "6000 12007"
!!J2$ = "#";J1 = OHGTZ
!!J5$ = "Print Only Items With On Hand Greater Than 0?  (Y/N) "
!!Gosub ISINPUT
!!OHGTZ = J1
!!RETVAL$[15,15] = OHGTZ Using "#"
!!Return 
!!FINALQ: Rem "Final
!!Print @0,23;'CE';"ENTER  #:field to edit  P: print  R: reselect all  S: save defaults  E: exit  ";
!!Input Len 16384 + 1;""X$ \ Call String(1,X$)
!!If X$ = "E" Goto OUTEND
!!If X$ = "R" Goto EDT_ALL
!!If X$ = "P"
!!  If WHSE < 1 Or WHSE > 99
!!    Print @0,23;'CL RB';"Warehouse Must Be Entered";
!!    Signal 3,20
!!    Gosub ENTWHSE
!!    Goto FINALQ
!!  Else 
!!    Goto STARTPRNT
!!  End If 
!!End If 
!!If X$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"SAVE  A: all  U: user access only  <CR>: do not save  ";
!!  Input Len 16384 + 1;""Z2$ \ Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto FINALQ
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "Progdfltw","359","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL';
!!  Goto FINALQ
!!End If 
!!FLD = X$
!!If FLD Gosub EDT_FLDS
!!Goto FINALQ
!!EDT_ALL: Rem "Edit them all
!!For FLD = 1 To 3
!!  Gosub EDT_FLDS
!!Next FLD
!!Goto FINALQ
!!EDT_FLDS: Rem "Edit fields
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On FLD Gosub ENTWHSE,ENTSLOC,PRNTLTZ
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!!STARTPRNT: Rem "
!!If Err 0 Let J8 = Spc(8)
!!SCRN = 0;J8 = 0;J1 = Chf(0)
!!!!If Err 0 Gosub ERR_ESCAPE
!!If J8 Let SCRN = 1
!!RPAGE = 0;CURLINE = 90;MAXLINE = 62
!!If SCRN Let MAXLINE = 20
!
If J8
  tmp$ = "LOCATION",fdel$,"ALT. LOCATION",fdel$
  tmp$ = tmp$, "ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$
  tmp$ = tmp$, "ON HAND",fdel$,"U/M",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,22;'CE';"PRINTING, PLEASE WAIT . . ."
! - Signal 3,1
!!If SCRN Print 'CS';
NUMRECS = 0
K3$ = " ",K3$ \ K3$[1,2] = WHSE Using "##"
K3$[3] = SLOCTN$
Search #3,2,3;K3$,R3,E 
If Not(E) Goto GFMTCH
SPRODLOT_LOOP: Rem "Loop thru til End
Search #3,3,3;K3$,R3,E 
If E = 2 Goto REPORTDONE
GFMTCH: Rem "got first match
X1 = K3$[1,2] \ If X1 <> WHSE Goto REPORTDONE
X$ = K3$[3,8] \ If X$[1,Len(ELOCTN$)] > ELOCTN$ Goto REPORTDONE
NUMRECS = NUMRECS + 1
!!If Not(Fra(NUMRECS / 500)) Print @35,22;'CL';NUMRECS;K3$[3,20]
PROD$ = K3$[9,20]
K1$ = " ",K1$
K1$ = PROD$
Gosub GETPROD1 \ Goto SPRODLOT_LOOP
Mat Read #3,R3,0;P0$;
Mat Read #3,R3,66;P1;
Mat Read #3,R3,70;P2;
Mat Read #3,R3,82;P3;
Mat Read #3,R3,114;LOCTN$;
ONHAND = P3[0] - P3[1]
If OHGTZ And ONHAND <= 0 Goto SPRODLOT_LOOP
Gosub CONVERTQTY
Gosub PRNT_HEADER
Gosub PRNT_DETAIL
Gosub CHEK_OUTTARANGE
Goto SPRODLOT_LOOP
!
GETPROD1: Rem "get product info - return +1 if ok
Search #2,2,1;K1$,R2,E 
If E Return 
Mat Read #2,R2,0;A$;
Mat Read #2,R2,156;B;
Mat Read #2,R2,256;A;
Mat Read #2,R2,460;A1;
Mat Read #2,R2,512;PFU1;
Mat Read #2,R2,554;PFU2;
STKUM$ = "????"
If PFU1[8] = -1 Let STKUM$ = "CWT "
If PFU1[8] = -2 Let STKUM$ = "LOT "
If PFU1[8] = -3 Let STKUM$ = "LB  "
If PFU1[8] > 0 Read #4,PFU1[8],10;STKUM$;
Return 1
!
CONVERTQTY: Rem "Convert OnHand to Stocking
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
CNVTA = ONHAND \ Gosub CONVERT
ONHAND = AMOUNT
Return 
!
CHEK_OUTTARANGE: Rem "Check for Outoflocation range
K2$ = " ",K2$;K2$[1,12] = PROD$
K2$[13,14] = WHSE Using "##"
OOR_LOOP: Rem "Loop out of range items
Search #3,3,2;K2$,R3,E 
If E = 2 Return 
If K2$[1,12] <> PROD$ Return 
X1 = K2$[13,14] \ If X1 <> WHSE Return 
X$ = K2$[15,20]
If X$[1,Len(SLOCTN$)] < SLOCTN$ Gosub GOTAOOR
If X$[1,Len(ELOCTN$)] > ELOCTN$ Gosub GOTAOOR
Goto OOR_LOOP
GOTAOOR: Rem "Got one
Mat Read #3,R3,82;P3;
ONHAND = P3[0] - P3[1]
If OHGTZ And ONHAND <= 0 Return 
K1$ = " ",K1$;K1$ = PROD$
Gosub GETPROD1 \ Return ! returns if not found (return +1)
Mat Read #3,R3,114;LOCTN$;
Gosub CONVERTQTY
Gosub PRNT_HEADER
Gosub PRNT_OORDETAIL
Return 
!
!!DISPLSCRN: Rem "Screen Display
!!Print 'CS';@0,0;"-MX359-";@25,0;"RASL WHSE LOCATION REPORT"
!!Print @0,2;" 1> WAREHOUSE ";
!!Print Using "##";@20,2;WHSE;
!!Print @78,4;'ER';@20,4;'BR';"STARTING";'ER';
!!Print @35,4;'BR';"ENDING";'ER';
!!Print @0,5;" 2> LOCATION";
!!Print @21,5;SLOCTN$;@35,5;ELOCTN$;
!!Print @0,7;" 3> ON HAND>0";
!!If OHGTZ Print @20,7;"Y  "; Else Print @20,7;"N  ";
!!Return 
!
PRNT_DETAIL: Rem "Regular Item Detail
If J8
  tmp2$ = LOCTN$
  tmp$ = LOCTN$,fdel$,"",fdel$
  tmp$ = tmp$, rtrim$(A$[140,151]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,38]),fdel$
  tmp$ = tmp$, ONHAND Using "----------#.##",fdel$
  tmp$ = tmp$, STKUM$,fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return 
End if
!

Print #0; Tab (1);LOCTN$;
Print #0; Tab (10);A$[140,151];
Print #0; Tab (25);A$[9,38];
Print #0; Using "----------#.##"; Tab (56);ONHAND;
Print #0; Tab (71);STKUM$
Return 
!
PRNT_OORDETAIL: Rem "Out of location range Detail (Indent no item/desc)
If J8
  tmp$ = tmp2$,fdel$,LOCTN$,fdel$,A$[140,151],fdel$
  tmp$ = tmp$,A$[9,38],fdel$
  tmp$ = tmp$, ONHAND Using "----------#.##",fdel$
  tmp$ = tmp$, STKUM$,fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return 
End if
!

Print #0; Tab (7);LOCTN$;
Print #0; Using "----------#.##"; Tab (56);ONHAND;
Print #0; Tab (71);STKUM$
Return 
!
PRNT_HEADER: Rem "Header prints here
If J8 Return
!
CURLINE = CURLINE + 1
If CURLINE < MAXLINE Return 
If RPAGE
!!  If SCRN
!!    Print @0,23;"PRESS <CR> to Continue  ";
!!    Input Len 16384 + 1;""X$
!!    Print 'CS';
!!  End If 
Print #0;"\14\";
End If 
RPAGE = RPAGE + 1
Print #0;"-MX359-"; Tab (Int(40 - (Len(CONAME$) / 2)));CONAME$;
Print #0; Tab (68);"PAGE ";RPAGE
Print #0; Tab (1);"DATE ";RDATE$;
Print #0; Tab (25);"RASL LOCATION REPORT FOR WHSE ";Str$(WHSE);
If OHGTZ
  Print #0; Tab 62;"(Exc Neg/Zero Qty)";
End If 
Print #0;""
SDATE$ = "" \ Call Time(SDATE$)
Print #0;SDATE$;
Print #0; Tab (33);"LOCATIONS ";SLOCTN$;" TO ";ELOCTN$
Print #0;""
Print #0; Tab (1);"LOCATION"; Tab (10);"ITEM CODE";
Print #0; Tab (25);"DESCRIPTION 1";
Print #0; Tab (63);"ON HAND"; Tab (71);" U/M"
Print #0;""
CURLINE = 7
Return
!
REPORTDONE: Rem "got to last in Range
!!If SCRN
!!  Print @0,23;'CL';"PRESS <CR> to exit  ";
!!  Input Len 16384 + 1;""X$
!!End If 
Goto OUTEND
!
!!NORASL: Rem "No rasl on - can't run
!!Print @0,22;'RB CE';"The 'RASL' flag is not on - cannot run report!"
!!Print @0,23;"PRESS <CR> to Exit  ";
!!Input Len 16384 + 1;""X$
!!Goto OUTEND
Rem {begin call.input.i}
!!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
!
Rem {end call.input.i}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB !!If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: 
Return 
!
Rem {end rtn.convert.s}
OUTEND: Rem "outta here
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 