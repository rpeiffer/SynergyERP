! >>> Program 114a1
!
! description  S/C Price List Salesperson Order Sheet
!
! loadsave -w -n 100,10 -o prog/dxport/114a1.dl4 src/114a1.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  16:39:09
Rem /w2/papermaster/r2005//usr/acct/rce/work/r2005/mx1/mx114a1.src (univ2) [rce] {39328}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem  MX114A1 - SALESMAN ORDER BOOK (FROM MX114A)
Rem AUTHOR: HARRY HENDERSON   NOV 22, 1988
Rem Updated 9/91 REK - To add (+) or (-) print for cust. price
External Lib "ubsfunc.dl4"
declare external sub GetCostLevels,USERCNTRL
Declare External Function openfile,JDate$,PDate$
!
Declare Intrinsic Sub DateToJulian,String
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 2%,C4[8]
Com 1%,3%,PFU2[6],CNVTA,A[33],UWORK[10],FIELD,BASEX
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!If Err 0 Gosub L_9600
If Err 0 Gosub L_9500
Dim P$[16],C1$[142],P1$[156],D6$[20],P2$[92],I$[60],P9$[50]
Dim PUNIT$[4],CUNIT$[4],SUNIT$[4],D$[28],V$[30],WH$[2],WHPROD$[12],W1$[32]
Dim 1%,M5[3],M8,LPEUN[2],B3,WHPARC[5],PD1[9],2%,M6[3],3%,M7,PERM[1]
Dim 1%,LM[1],WHLM[1],C3[4],C5[2],P4[100],P0[100],SPCUM[1],SPC3[2],F
Dim 1%,SORTORDER,SPCUM[1],SPCC3[2],SPWH,prcsrc
Dim 1%,prntflag,a5[10],ua2$[50]
Dim 2%,P2[100],LPDEPT,DEPT,JDATE[5],SPC1[5]
Dim 2%,DT,UNITX,ARDATE,C1[2],B[24],Z7[3],SPC1[5],CFC1[12],Z1[1],BRKLVL,D9[20]
Dim 3%,C2[2],B1[9,2],C7,A2$[10],S8$[5],A[33],C6[3],MU,S7$[51],S71$[51],L6[1]
Dim 3%,BRACKET,BRACKET1,SPC4[6],SPC5[4],COST,R[99],SPECS[50],FLEPTR[20,1]
Dim 2%,Q0[1],JA9[2],COID,3%,PF_Load2,PRA3$[30]
Dim UNIT$[4],J8$[8],C5$[12],A3$[30],Z1$[50],CNAME$[30],MSGDESC$[150]
Dim K33$[50],K34$[50],KCUST$[50],1%,TYPE,RB[2],RBL1[1],RBWH,RBUM[1]
Dim 2%,RB1[5],3%,RBCOST,RBSLCOST,RB5[2],RP_COST,SPSLCOST
Dim 3%,W3[24],WHLV[2],WHMISC[6],PRPARC[3],PREC[1],D3[1],A4
Dim 2%,WHBLD[2],W7[14],WHSE,DFWH,3%,sqno
Dim SZONE$[2],EZONE$[2],P60$[50],PMASK$[12],SP$[12]
Dim 3%,J,X3[9],T9[20],LPR[4],W3[24],BSH[9]
Dim S9$[8],A1$[50],S1$[30],K4$[40],CDesc$[16]
Dim K1$[50],K2$[50],K3$[50],K9$[50],U5$[130],BK$[10],F1$[16]
Dim FSTCOMM$[4],LSTCOMM$[4],space$[200],Key1$[40]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim Custom_customer$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
space$=" ",space$
!
!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
!!Def FNP(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])!!ADD
Def FNS(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .0001)
Def FNT(X)=SGN(X)*(INT(ABS(X)*10+.5)/10)
U5$ = "-",U5$
S7$ = " ",S7$
CH_CNTRL = 1;CH_LASTPRC = 2;CH_PROD = 3;CH_CUST = 4;CH_BRKTBL = 5;CH_SPCPRC = 6
CH_SLSM = 7;CH_COMMD = 8;CH_SORT = 9;CH_CNTRTH = 10;CH_DEPT = 11;CH_CCODES = 12
CH_PRDMRK = 13;CH_ZONE = 14;CH_VEND = 15;CH_SCURR = 16;CH_PRDWHSE = 17;CH_PTYPE = 18
! JPaper=4
x1=5 \ if custom_customer$="JPAPER" let x1=4
For X = 0 To x1
  If Not(X) Let S7$[1,1]="|" Else Let S7$[X * 10,(X * 10) + 1] = "| "
Next X
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call UserCntrl(userID$,uA2$,A5[],ss,intCo)
!
Mat Read #1,0,100;J8$;
Mat Read #1,115,0;D9;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCASE$(TRIM$(custom_customer$))
Read #1,3;CNAME$;
Read #1,0,108;DT;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
!
For J = 2 To 18
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #CH_CNTRL,88,J1;J$;
  Ropen #J,J$
NXTFLE: Next J
Data "1376","1792","1808","1952","1936","1824","2288","-1","2880","1632","1728","1712"
Data "1920","2400","2016","1744","752"
!
!!Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let J8 = Spc(8)
J8 = 0 \ JA9 = Chf(0) \ If Err 0 Gosub L_9500
!!If Err 0 Gosub L_9600
If Err 0 Gosub L_9500
If J8 If J8 <> 49 Goto L_9500
JA9 = 60 \ If J8 Let JA9 = 20
JA8 = J8
!!Open #77,"PRTDFLT","USERPORT"
!!Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!!Mat Read #77,A4,0;PD1;
!!Close #77,#78
DFWH = PD1[2]
JDATE[0] = Tim(6)
!
tmp1$ = DT Using "&&&&&&" \ DT = tmp1$[3,6],tmp1$[1,2]
!
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"114a1",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #20,J$
!
call dxget("SCUST",tmp$) \ X0 = tmp$
call dxget("ECUST",tmp$) \ If tmp$ = "" Let X5 = 999999 Else Let X5 = tmp$
call dxget("PDATEFROM",tmp$) \ If tmp$ = "" Let PDATEFROM = 010170 Else Let PDATEFROM = tmp$
call dxget("PDATETO",tmp$) \ If tmp$ = "" Let PDATETO = 123159 Else Let PDATETO = tmp$
call dxget("SSALES",tmp$) \ S1 = tmp$
call dxget("ESALES",tmp$) \ If tmp$ = "" Let S2 = 999 Else Let S2 = tmp$
call dxget("SZONE",SZONE$) \ SZONE$ = SZONE$,Blank$
call dxget("EZONE",EZONE$) \ EZONE$ = EZONE$,EndParam$
call dxget("SCOMMD",FSTCOMM$) \ FSTCOMM$ = FSTCOMM$,Blank$
call dxget("ECOMMD",LSTCOMM$) \ LSTCOMM$ = LSTCOMM$,EndParam$
call dxget("SORTORDER",tmp$) ! new options: 0=none, 1=commod, 2=w/seq
if tmp$ = "N" 
	Let SORTORDER = 0 
Else 
	let sortorder=tmp$
	if sortorder<=0 Let SORTORDER = 1
Endif
call dxget("EFECTDATE",tmp$) \ If tmp$ = "" Let JDATE[1] = DT Else Let JDATE[1] = tmp$
call dxget("BRACKET",tmp$) \ If tmp$ = "" Let BRACKET = -9 Else Let BRACKET = 1
call dxget("WHSE",tmp$) \ WHSE = tmp$
call dxget("NSFLG",tmp$) \ if tmp$ = "" Let NSFLG = 0 Else Let NSFLG = 1
call dxget("MINGPP",tmp$) ! min gp % (flag 'em if less)
MINGPP=tmp$
if custom_customer$="JPAPER"  and sortorder<>2 
	call dxget("INCLSCP",tmp$) \ if tmp$="" Let Inclscp=0 Else Let Inclscp=1
endif
!
! customer
If X0 < 0 Or X0 > 999999 Let e$ = "Invalid starting customer code, must be between 0 and 999999!" \ error 10000
If X5 < X0 Or X5 > 999999 Let e$ = "Invalid ending customer code, must be between starting customer code and 999999!" \ error 10000
!
! starting last purchase date
If PDATEFROM = 0 Let PDATEFROM_JUL = 0
errflag = 0
tmp1$ = PDATEFROM Using "&&&&&&" \ PDATEFROM = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
X2 = PDATEFROM \ Gosub YMD2JUL \ If errflag Let e$ = "Invalid starting last purchased!" \ error 10000
PDATEFROM_JUL = X2
!
! ending last purchase date
tmp1$ = PDATETO Using "&&&&&&" \ PDATETO = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
X2 = PDATETO \ Gosub YMD2JUL \ If errflag Let e$ = "Invalid ending last purchased!" \ error 10000
PDATETO_JUL = X2
If PDATETO_JUL < PDATEFROM_JUL Let e$ = "Invalid ending last purchased, must be >= starting last purchased!" \ error 10000
!
! salesman
If S1 < 0 Or S1 > 999 Let e$="Invalid starting salespersons, must be between 0 and 999!" \ error 10000
If S2 < S1 Or S2 > 999 Let e$="Invalid ending salespersons, must be between starting salespersons and 999!" \ error 10000
!
! zone
If EZONE$ < SZONE$ Let e$ = "Invalid ending zones, must be >= than starting zones!" \ error 10000
!
! commodity
If LSTCOMM$ < FSTCOMM$ Let e$ = "Invalid ending commodities, must be >= than starting commodities!" \ error 10000
!
! effective date
tmp$ = JDATE[1] Using "&&&&&&"
JDATE[1] = tmp$[5,6],tmp$[1,2],tmp$[3,4] 
X2 = JDATE[1] \ Gosub YMD2JUL \ If errflag Let e$ = "Invalid effective date!" \ error 10000
DT = JDATE[1] \  JDATE[1] = X2 \ X2 = DT
Gosub ISDUNPACK
!
! warehouse
If P9$[32,32] <> "Y" Let WHSE = 0
If WHSE < 0 Or WHSE > D9[5] Let e$ = "Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000
!
F9 = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!!Gosub PRINTSCREEN
!!F9 = 0
!!For Y = 3 To 19
!!  If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  On Y Gosub L_1100,L_1100,L_31200,EDT_PURCHRNG,L_31400,L_31600,EDT_CMMDRNG,SORTORDER_QUEST,L_31700,L_1100,L_1100,L_1100
!!  On Y - 12 Gosub L_1100,L_1100,L_31800,L_1100,L_1100,L_32000,L_32300
!!  If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Next Y
!!L_980: Print @10,23;'CL';"ENTER #: Field to edit,  P: print,  E: end ";
!!Input ""Z1$
!!If Z1$ = "P" Goto L_1900
!!If Z1$ = "E" Goto L_9000
!!Y = Z1$
!!If Y >= 1 And Y <= 19
!!  If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  On Y Goto L_1180
!!  On Y - 1 Gosub L_31000,L_31200,EDT_PURCHRNG,L_31400,L_31600,EDT_CMMDRNG,SORTORDER_QUEST,L_31700,L_1100,L_1100,L_1100
!!  On Y - 12 Gosub L_1100,L_1100,L_31800,L_1100,L_1100,L_32000,L_32300
!!  If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!End If 
!!Goto L_980
!!L_1100: Return 
!!L_1180: If Err 0 Rem
!!For X = 2 To 20
!!  If X = 9 Goto L_1195
!!  Close #X
!!L_1195: Next X
!!Chain "MX114"
!
L_1900: 
!! PRINT @0,21;"PRINTING, PLEASE WAIT . . .  "'CE'; \  SIGNAL 3,0
If J8
  tmp$ = "SLSM CODE",fdel$
  tmp$ = tmp$, "SLSM NAME",fdel$
  tmp$ = tmp$, "CUSTOMER CODE",fdel$
  tmp$ = tmp$, "CUSTOMER NAME",fdel$
  tmp$ = tmp$, "ADDRESS",fdel$
  tmp$ = tmp$, "TERMS",fdel$
  tmp$ = tmp$, "CITY",fdel$
  tmp$ = tmp$, "STATE",fdel$
  tmp$ = tmp$, "ZIP",fdel$
  tmp$ = tmp$, "PRICE TYPE",fdel$
  tmp$ = tmp$, "ZONE",fdel$
  tmp$ = tmp$, "ZONE DESC",fdel$
  tmp$ = tmp$, "VENDOR",fdel$
  tmp$ = tmp$, "ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION 1",fdel$
  tmp$ = tmp$, "DESCRIPTION 2",fdel$
  tmp$ = tmp$, "PRICE",fdel$,"PACK",fdel$
  if custom_customer$="JPAPER"  and sortorder<>2 
	tmp$=tmp$,"SKU",fdel$
	tmp$=tmp$,"LOC",fdel$
  Else
	tmp$=tmp$,"CODE",fdel$
	tmp$=tmp$,"COMM",fdel$
  endif
  tmp$ = tmp$, "LAST DATE",fdel$
  tmp$ = tmp$, "QUANTITY",fdel$
  if sortorder=2
	tmp$=tmp$,"SEQNO",fdel$
  Endif
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
DEPT = -99
Gosub L_6000
!!Print @0,21;'CL';"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If JA8 Print 'CS';
!!If Err 0 Gosub L_9600
! - If Err 0 Gosub L_9500
K1$ = " ",K1$
L_2000: 
Search #9,3,1;K1$,R[CH_LASTPRC],E
If E Goto L_9100
If K1$[6,11] <> J4$[1,6] 
  if sortorder<>2
	Let J1 = 99
  Else
	if ja2 gosub manpent
	let j1=99
  Endif
Endif ! cust changed
If K1$[36,36]="*" ! "it's a special/Contract
  Gosub SetUp_Special:
Else
	Mat Read #2,R[CH_LASTPRC],0;P$;
	Mat Read #2,R[CH_LASTPRC],16;C1;
	Mat Read #2,R[CH_LASTPRC],28;C2;
	Mat Read #2,R[CH_LASTPRC],46;C3;
	Mat Read #2,R[CH_LASTPRC],56;P2$;
	Mat Read #2,R[CH_LASTPRC],140;C6;
	Mat Read #2,r[ch_lastprc],168;LPR;
	Mat Read #2,R[CH_LASTPRC],214;LPEUN;
	Mat Read #2,R[CH_LASTPRC],262;PERM;
	Read #2,R[CH_LASTPRC],320;LPDEPT;
	read #2,r[ch_lastprc],408;sqno; ! seq no
endif
Read #2,R[ch_lastprc],320;LPDept;
If LPDEPT <> DEPT Let F7 = 99 \ DEPT = LPDEPT
If P2$[81,84] < FSTCOMM$ Or P2$[81,84] > LSTCOMM$ Goto L_2000
! X2 = C1[2] \ Gosub ISDUNPACK
J3$ = " n/a  "
If C3 = 1 Let J3$ = "MATRX"
If C3 = 2 Let J3$ = "CONT"
If C3 = 3 Let J3$ = "PRMO"
If C3 = 4 Let J3$ = "COMD"
X3 = 0
X9 = 0
SGPRICE = 0
If Not(C6[3]) Gosub L_3500
If C6[3] Gosub L_4100
Gosub L_5800
If C6[3] Goto L_2171
!
GET_PRICE: Rem "Use Call "Price" to get price/cost
For X = 0 To 30 \ SPECS[X] = 0 \ Next X
FLEPTR[1,0] = CH_PROD;FLEPTR[1,1] = R[CH_PROD]
FLEPTR[2,0] = CH_PRDWHSE;FLEPTR[2,1] = WHBLD[2]
FLEPTR[3,0] = CH_COMMD;FLEPTR[3,1] = R[CH_COMMD]
FLEPTR[4,0] = CH_LASTPRC;FLEPTR[4,1] = R[CH_LASTPRC]
If K1$[29,29] = "*" Let FLEPTR[4,1] = 0
If K1$[36,36]="*" Let FlePtr[4,1]=0 ! "Built from Product
FLEPTR[5,0] = CH_SPCPRC;FLEPTR[5,1] = 0
If K1$[36,36]="*" Let FlePtr[5,1]=R[ch_LastPrc] ! "is Spc price rec
FLEPTR[6,0] = CH_CNTRTH;FLEPTR[6,1] = 0
FLEPTR[7,0] = CH_CCODES;FLEPTR[7,1] = 0
FLEPTR[8,0] = CH_BRKTBL;FLEPTR[8,1] = 0
SPECS[0] = 299;SPECS[1] = AMQTY;SPECS[2] = WEIGHT;SPECS[3] = CFC1[1]
SPECS[4] = WHSE;SPECS[5] = DT;SPECS[6] = LPDEPT;SPECS[7] = CFC1[7]
If JDATE[1] > JDATE[0] ! "future eff date
  SPECS[5] = 0 - DT
End If 
SPECS[8] = 1;SPECS[9] = DFT_COST;SPECS[10] = 0;SPECS[11] = 0
SPECS[12] = 0;SPECS[13] = C3[2];SPECS[14] = C3[3];SPECS[15] = C3[3]
SPECS[16] = 0;SPECS[17] = COST;SPECS[18] = 0;SPECS[19] = 0
SPECS[20] = X3
!
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
!
If SPECS[0] <> 0 Let SPECS[23] = X3;SPECS[17] = COST
C3[3] = SPECS[14];C3[4] = SPECS[15];COST = SPECS[17]
BASEX = SPECS[20];X3 = SPECS[23];PCTYPE = SPECS[25];CONTRACT = SPECS[27]
L9[0] = PCTYPE
let prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If prcsrc >= 2 And prcsrc <= 4 Let SPCL = 1
If prcsrc >= 6 And prcsrc <= 8 Let SPCL = 1
If prcsrc >= 11 And prcsrc <= 13 Let SPCL = 1
IF prcsrc=15 OR prcsrc=16 LET SPCL=1

If C4[2] = 2 And Not(CONTRACT) And Not(SPCL)
  If BRACKET > 0
    SPECS[11] = BRACKET;SPECS[0] = 3;SPECS[20] = BASEX
	!
	Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
	!
    If SPECS[0] <> 0 Let SPECS[17] = COST;SPECS[23] = X3
    COST = SPECS[17];X3 = SPECS[23];BASEX = SPECS[20]
    S9$ = BRACKET Using "10 B##"
  Else 
    X3 = 0
  End If 
End If 
L_2170: !
If P9$[13,13] <> "N" And P60$[33,33] <> "Y" And C3[0] = -7 Gosub L_12100
If SPECS[25] = 1 And B[22] > 0 Let S9$ = "QB     "
If SPECS[25] = 2 Or SPECS[25] = 4 Or SPECS[25] = 6 Let S9$ = "SP      "
If SPECS[25] = 11 Or SPECS[25] = 12 Or SPECS[25] = 13 Let S9$ = "SP      "
If SPECS[25] = 3 Or SPECS[25] = 7 Or SPECS[25] = 8 Let S9$ = "PROMO  "
L_2171: !
LET X2=C1[2] \ GOSUB isdunpack:
Gosub L_5000
LPEUN[2] = 0;PERM[0] = 0;PERM[1] = 0;BRKLVL = 0
let prntflag=1
Goto L_2000
!
SetUp_Special: ! "Special/Contract Record
Let R1=R[CH_LastPrc]
Mat Read #6,R1,0;SP$;
Mat Read #6,r1,12;spc1;
Mat Read #6,r1,36;SPCUM;
Mat Read #6,r1,40;spcc3;
Read #6,r1,118;SPWH;
Let C4[2]=0 ! "Category?
Let C1[1]=0 ! "Order #
Let C3[0]=2 ! "price type
Let C3[1]=0 ! "dept
Let C3[2]=spcc3[2]  \ if C3[2]=0 Let C3[2]=SPCUM[0] ! "Sell UM
Let C3[3]=SPCUM[0] ! "price UM
Let c6[3]=0 ! "it's a prod
Let C2[1]=0;C2[0]=0;C2[2]=0 ! "last qty/price/cost
Let UOM=C3[3]
Gosub Get_Prod:
Let P$=SP$
Let p2$[81,84]=P1$[152,155]
Return
!
L_3000: Rem GET CUSTOMER
J4$ = K1$[6,11]
Search #4,2,1;J4$,V1,E 
If E Goto L_3040
Mat Read #4,V1,0;C1$;
Mat Read #4,V1,142;CFC1;
Mat Read #4,V1,194;C5;
Mat Read #4,V1,348;A2$;
Mat Read #4,V1,348;A3$; ! used elsewhere as
Goto L_3050
L_3040: Rem NG
c1$=" ",c1$;c5=0
clear CFC1[]
C1$[31] = "ERROR! CUSTOMER NOT FOUND!!"
L_3050: Rem PRINT
P3 = CFC1[7]
If C5 > 0 Or C5 <= 99
  Read #20,C5,0;C5$;
Else 
  C5$ = "Invalid Term"
End If 
Gosub L_3105
!
If J8
  tmp1$ = CFC1[2] Using "###",fdel$, rtrim$(S1$[1,30]),fdel$
  tmp1$ = tmp1$, K1$[6,11], fdel$
  tmp1$ = tmp1$, rtrim$(C1$[31,60]),fdel$
  tmp1$ = tmp1$, rtrim$(C1$[61,90]),fdel$, rtrim$(C5$),fdel$
  tmp1$ = tmp1$, rtrim$(C1$[121,135]),fdel$,C1$[136,137],fdel$,rtrim$(A2$),fdel$
  tmp1$ = tmp1$, CFC1[7] Using "###",fdel$
  tmp1$ = tmp1$, K1$[4,5], fdel$, rtrim$(D$), fdel$  
  J1 = J1 + 4
  Return
End if
Print #0;"CUSTOMER: ";K1$[6,11];
if custom_Customer$<>"JPAPER" ! STD
	Print #0; Using "###"; Tab 20;C1$[31,60]; Tab 60;"SLSM ";CFC1[2];" ";S1$[1,10];
	if sortorder<>2
		Print #0; Tab 80;"SP - SPECIAL PRICE due to prior agreement"
	Else
		print #0;"" ! not on seq
	Endif
	Print #0; Tab 20;C1$[61,90]; Tab 60;"TERMS ";C5$;
	if sortorder<>2
		Print #0; Tab 80;"QB - MATRIX price, quantity break available"
	Else
		print #0;""
	endif
	Print #0; Tab 20;C1$[121,135]; Tab 37;C1$[136,137]; Tab 41;A2$;
	Print #0; Tab 60;"PRICE TYPE ";CFC1[7];
	if sortorder<>2
	Print #0; Tab 80;"10 B - TEN BRACKET price"
	else
	print #0;""
	endif
	Print #0;"ZONE: ";K1$[4,5];"  ";D$;
	if sortorder<>2
	 Print #0; Tab 80;"10 BSP - ten bracket SPECIAL PRICE"
	else ! on seq - print cust phone #
	!print #0;""
	 If C1$[21,30] <> SPACE$[21,30]
	  Print #0; Tab 80;"(";C1$[21,23];") ";C1$[24,26];"-";C1$[27,30]
	 Else 
	  Print #0;""
	 End If 
	endif
Else ! custom
	PRINT #0; USING "###"; TAB 20;C1$[31,60]; TAB 60;"SLSM ";CFC1[2];" ";S1$[1,30];
	PRINT #0;"" !  TAB 80;"SP - SPECIAL PRICE due to prior agreement"
	PRINT #0; TAB 20;C1$[61,90]; TAB 60;"TERMS ";C5$;
	PRINT #0;"" !  TAB 80;"QB - MATRIX price, quantity break available"
	! PRINT #0; TAB 80;"EP - EXPIRED special price"
	PRINT #0; TAB 20;C1$[121,135]; TAB 37;C1$[136,137]; TAB 41;A2$[1,10];
	PRINT #0; TAB 60;"PRICE TYPE ";CFC1[7];
	! PRINT #0; TAB 80;"QB - MATRIX price, quantity break available"
	PRINT #0;"" !  TAB 80;"10 B - TEN BRACKET price"
	PRINT #0;"ZONE: ";A3$[29,30];"  ";D$;
	If C1$[28,30]<>"   "
	  Print #0;Tab 37;C1$[21,23];"-";C1$[24,26];"-";C1$[27,30];
	Else
	  Print #0;Tab 37;c1$[21,23];"-";C1$[24,30];
	Endif
	Print #0;Tab 60;c1$[1,20]; ! " contact name
	! PRINT #0; TAB 80;"CD - COMMODITY special price"
	! PRINT #0; TAB 80;"10 B - TEN BRACKET price"
	PRINT #0;"" !  TAB 80;"10 BSP - ten bracket SPECIAL PRICE"
Endif
Print #0;U5$
J1 = J1 + 4
Return 
!
L_3105: Rem GET SLSM AND ZONE
K4$ = " ",K4$
K4$ = CFC1[2] Using "###"
Search #7,2,1;K4$,R4,E 
If E Let S1$ = " *** NOT ON FILE ***" \ Goto L_3160
Mat Read #7,R4,0;S1$;
L_3160: 
K4$ = " ",K4$ \ K4$ = K1$[4,5] \ D$ = " ",D$
if custom_customer$="JPAPER"  and sortorder<>2 let k4$=A3$[29,30]
Search #14,2,1;K4$,R4,E 
If E Let D$ = " *** NOT ON FILE ***" \ Goto L_3200
Mat Read #14,R4,0;D$;
L_3200: Return 
!
L_3500: Rem GET PRODUCT
If C6[3] Return 
J2$ = P$[1,12]
Search #3,2,1;J2$,R[CH_PROD],E 
If E Goto L_3530
Mat Read #3,R[CH_PROD],0;P1$;
Mat Read #3,R[CH_PROD],256;A;
Mat Read #3,R[CH_PROD],156;B;
Mat Read #3,R[CH_PROD],512;PFU1;
Mat Read #3,R[CH_PROD],554;PFU2;
Mat Read #3,R[CH_PROD],894;C4;
Mat Read #3,R[CH_PROD],944;PRA3$;
Mat Read #3,R[CH_PROD],620;LM; \ PREC[0] = R[CH_PROD]
If WHSE Gosub L_8100
Gosub L_12400
COST = B[8] \ If C2[2] = 0 Let C2[2] = B[8]
Gosub L_4500
Return 
L_3530: Rem NG
P1$ = " ",P1$ \ P1$[9,38] = "ERROR! PRODUCT NOT FOUND!!"
If C6[3] Let P1$[9,38] = P2$[21,50]
Return 
!
L_3800: Rem TOTAL PRINT
Gosub L_8500
Return 
!
L_4100: Rem   SET VARIABLES FOR NON STOCKS
P1$[9,38] = P2$[21,50]
B[24] = C6[1]
P1$[93,112] = P2$[1,20]
P1$[63,92] = P2$[51,80]
p1$[152,155]=p2$[81,84] ! commod
PFU1[18] = 0;prA3$[13,27] = " ",PRA3$[13,27]
B[8] = C2[2];COST = C2[2]
PRA3$[13,27] = " ",PRA3$[13,27]
TYUNIT = C2[0];LYUNIT = 0
PFU1[0] = LPEUN[0];PFU1[1] = C3[2];PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[9] = C3[2]
PFU1[11] = C3[4]
PFU1[12] = C3[3]
X3 = C2[1]
Mat Read #2,R[CH_LASTPRC],220;PFU2;
Mat A = Zer
S9$ = "N/S     "
Gosub L_4500 ! "commod desc
Return 
!
L_4500: Rem COMMOD
K3$ = " ",K3$ \ K3$ = P1$[152,155]
Search #8,2,1;K3$,R[CH_COMMD],E 
If E Goto L_4550
mat read #8,r[ch_commd],0;CDesc$;
Goto L_4580
L_4550: Rem ERR
CDesc$="COMMOD NOT FOUND"
!!Print @0,23;'RB CL';"COMMODITY NOT FOUND ";K3$
!!Signal 3,20 \ Print @0,23;'CE';
L_4580: Return 
!
manpent: ! on seq version - add manual product entry area
If j8 return ! not on xml
if j1+14>ja9
	let j1=99
	gosub L_5800
Endif
Print #0;"" ! skip line
! use tmp$'s for ease of print
tmp$=".",tmp$;tmp$[106]=""
tmp1$=" ",tmp1$;tmp1$[1,1]="!";tmp1$[11,11]="!";tmp1$[18,18]="!"
tmp1$[36,36]="!";tmp1$[86,86]="!";tmp1$[98,98]="!";tmp1$[105]="!"
tmp2$=tmp$
tmp2$[1,2]="! ";tmp2$[10,12]=" ! ";tmp2$[17,19]=" ! "
tmp2$[35,37]=" ! ";tmp2$[85,87]=" ! ";tmp2$[97,99]=" ! ";tmp2$[104,105]=" !"
print #0;tmp$
print #0;"! QTY";tab 10;"! UNIT"; tab 17;"! ITEM #";
print #0;tab 35;"! DESCRIPTION";TAB 85;"! PRICE";
PRINT #0;TAB 97;"! UNIT";TAB 104;"!"
PRINT #0;tmp$ ! dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
print #0;tmp1$ ! bangs
print #0;tmp2$ ! bangs/dots
Return

L_5000: Rem PRINT LINE
If J8
  Gosub L_10000 ! convert
  Gosub L_7900 ! vendor
  If PRFLAG = 2 If SGPRICE Let S9$ = "SG     "
  tmp$ = tmp1$, rtrim$(V$[1,12]),fdel$
  tmp$ = tmp$, rtrim$(P$[1,12]),fdel$
  tmp$ = tmp$, rtrim$(P1$[9,38]),fdel$
  tmp$ = tmp$, rtrim$(P1$[63,92]),fdel$
  If Not(X3) 
    tmp$ = tmp$, "ASK",fdel$
  Else
    tmp$ = tmp$, X3 Using PMASK$,"/",PUNIT$,fdel$
  End if
  tmp$ = tmp$, rtrim$(PRA3$[13,27]),fdel$
  if custom_customer$="JPAPER" and sortorder<>2 
	Let J5$=Cost Using PMask$
		Let j1$=" ",J1$;J1$=""
		For X=1 to len(j5$)
		 If J5$[X,X]<>" " and J5$[x,x]<>"."
		   Let J1$[Len(j1$)+1]=J5$[x,x]
		 Endif
		Next X
		tmp$ = tmp$,"1",J1$,"5",fdel$
		If K1$[36,36]="*" Let X$="  N/A   "
		Let J3$=" ",j3$;X3[1]=0
		If X3 Let X3[1]=FNT((x3-Cost)*100/X3)
		Let J5$=X3[1] Using "----#.#"
		Let J3$=""
		For X=1 to len(J5$)
		  If J5$[x,x]<>" " And J5$[x,x]<>"."
			let J3$[len(j3$)+1]=J5$[x,x]
		  Endif
		Next X
		tmp$ = tmp$,"A",J3$,"1",fdel$
  Else
	tmp$ = tmp$, S9$[1,6],fdel$
	tmp$ = tmp$, P2$[81,84],fdel$
  endif
  tmp$ = tmp$, X$[1,8],fdel$
  If K1$[36,36]<>"*" ! "not purch yet
	tmp$ = tmp$, C2[0] Using "######/"
  endif
  tmp$=tmp$,SUNIT$,fdel$
  if sortorder=2
	tmp$=tmp$,str$(sqno),fdel$
  Endif
  call addtostr(e$,rstr$,tmp$+rdel$)
  S9$ = " ",S9$
  Return
End if
!
Gosub L_10000 ! convert
Gosub L_7900 ! vendor
If PRFLAG = 2 If SGPRICE Let S9$ = "SG     "
Print #0; Tab 2;P$[1,12];
Print #0; Tab 16;P1$[9,38];
if sortorder<>2 ! normal
	If Not(X3) Print #0; Tab 50;"  ASK  "; \ Goto L_5051
	Print #0; Using PMASK$; Tab 47;X3;" /";PUNIT$;
	L_5051: !
	if custom_customer$="JPAPER" and sortorder<>2 
		Let J5$=Cost Using PMask$
		Let j1$=" ",J1$;J1$=""
		For X=1 to len(j5$)
		 If J5$[X,X]<>" " and J5$[x,x]<>"."
		   Let J1$[Len(j1$)+1]=J5$[x,x]
		 Endif
		Next X
		Print #0;Tab 64;"1";J1$;"5";
		If K1$[36,36]="*" Let X$="  N/A   "
		PRINT #0; TAB 80;X$[1,8]; 
		Print #0; TAB 89;S7$
		PRINT #0; TAB 2;V$[1,12]; TAB 16;P1$[63,92];
		PRINT #0; TAB 47;PRA3$[13,27]; 
		! print #0; tab(62);p2$[81,84];									! commodity
		Let J3$=" ",j3$;X3[1]=0
		If X3 Let X3[1]=FNT((x3-Cost)*100/X3)
		Let J5$=X3[1] Using "----#.#"
		Let J3$=""
		For X=1 to len(J5$)
		  If J5$[x,x]<>" " And J5$[x,x]<>"."
			let J3$[len(j3$)+1]=J5$[x,x]
		  Endif
		Next X
		PRINT #0; TAB 64;"A";J3$;"1";
		If K1$[36,36]<>"*" ! "not purch yet
		  PRINT #0; USING "######/"; TAB 78;C2[0]; !   "SUNIT$;
		Endif
		Print #0;Tab 85;SUnit$; ! "sell unit
		PRINT #0; TAB 89;S7$
		PRINT #0; TAB 89;U5$[1,41]
	Else
		Print #0; Tab 63;S9$[1,6];
		Print #0; Tab 70;X$[1,8]; Tab 80;S7$
		Print #0; Tab 2;V$[1,12]; Tab 16;P1$[63,92];
		Print #0; Using "######/"; Tab 47;PRA3$[13,27];
		Print #0; Tab (62);P2$[81,84];
		Print #0; Using "######/"; Tab 69;C2[0];SUNIT$;
		Print #0; Tab 80;S7$
		Print #0; Tab 80;U5$[1,50]
	Endif
Else ! 1 line w/seq
	Print #0; using "###";tab 46;Sqno;
	print #0; tab 50;"______"; ! blank for ordering qty
	print #0; tab 57;SUNIT$; ! qty um
	if c2[0]
	print #0; Using "#######"; tab 62;c2[0]; ! last qty
	Endif
	if lpr[4]
	print #0; Using "#########"; tab 70;LPR[4]; ! ytd
	Endif
	tmp$="" \ if c1[2] let tmp$=PDate$(c1[2])
	print #0; tab 81;tmp$; ! last date
	print #0; tab 92;"________"; ! space for cust on hand
	! encode price/gp in to tmp$
	tmp$="";x3[1]=0
	if x3 let x3[1]=x3
	if x3[1]=0 let x3[1]=SGPRICE
	if x3[1]<=0 let x3[1]=C2[1]
	tmp2$=X3[1] using "###&&&.##" ! make sure at least 3
	tmp2$=ltrim$(tmp2$) ! strip lead spaces
	tmp$=tmp2$[1] to ".":DPOS
	tmp$=tmp$+tmp2$[DPOS+1] ! get after decimal
	! BSH[0]=X3;BSH[1]=COST;BSH[2]=C2[1];BSH[3]=C2[2]
	X3[2]=BSH[1] \ IF X3[2]<=0 LET X3[2]=BSH[3] ! cost - base
	X3[3]=BSH[0] \ IF X3[3]<=0 LET X3[3]=BSH[2] ! PRICE - base
	x3[4]=0
	if x3[3]>0 let x3[4]=FNR((x3[3]-x3[2])*100/x3[3]) ! gp %
	if x3[4]<0 let x3[4]=0
	x$=" " ! let's base letter on Price as afp has no formula
	if x3[1]>0 and x3[3]<=20 let x$="D"
	if x3[1]>20 let x$="C"
	if x3[1]>95 let x$="B"
	if x3[1]>150 let x$="A"
	tmp$=tmp$+X$
	tmp2$=X3[4] Using "##&&.##"
	tmp2$=LTrim$(tmp2$) ! strip spaces
	x$=tmp2$[1] to ".":DPOS
	tmp$=tmp$+X$+tmp2$[DPOS+1] ! gp without "."
	print #0; tab 101;tmp$; ! encoded
	if x3[4]<MinGPP print #0;"*"; ! min gp flag
	Print #0; tab 116;P2$[81,84];" ";cdesc$[1,10]
Endif
S9$ = " ",S9$
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 gosub L_3000 \ return
!
If JA8 If F9 Let JA9 = 20
if sortorder<>2
J1 = J1 + 3
else
J1=j1+1 ! one line
Endif
If J1 < JA9 Return 
!!If JA2 If JA8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
if j1>99 and ja2>0 let jA2=0 \print #0;"\14\"; ! new page 1 every customer
If JA2 If Not(JA8) Print #0;"\14\";
JA2 = JA2 + 1 \ J1 = 9
F7 = 99
If Not(JA8) Print #0;"\15\";
Print #0; Tab (46 - Len(CNAME$) / 2);CNAME$;
If WHSE Print #0; Tab 90;"WAREHOUSE";WHSE;
Print #0; Tab 120;"PAGE";JA2
Print #0; Tab 33;"SALESMAN ORDER BOOK";
if custom_customer$="JPAPER" and sortorder<>2
	PRINT #0;"" !  TAB 77;"The follwing codes may appear next to the price"
	Let X2=Dt \ Gosub ISDunPack:
	PRINT #0; TAB 35;" AS OF ";x$; ! "was J8$ (A/R Date?)
	PRINT #0; TAB 84;"  " !this may not be the current price"
	GOSUB L_3000:    !  get cust
	PRINT #0; TAB 2;"ITEM CODE";
	PRINT #0; TAB 16;"DESCRIPTION";
	PRINT #0; TAB 52;"PRICE"; TAB 63;" SKU";
	PRINT #0; TAB 80;"LAST DATE";
	PRINT #0; TAB 94;"* * ORDER DATES AND QUANTITY * *"
	PRINT #0; TAB 3;"/VENDOR"; TAB 52;"/PACK"; tab(63);" LOC"; TAB 80;"/QUANTITY";
	PRINT #0; TAB 93;"/  /"; TAB 103;"/  /";
	Print #0; Tab 113;"/  /"; Tab 123;"/  /"
Else
	if sortorder<>2
	Print #0; Tab 77;"The following codes may appear next to the price"
	Else
	print #0;""
	Endif
	Print #0; Tab 35;" AS OF ";J8$;
	Print #0; Tab 84;"  "
	Gosub L_3000
	Print #0; Tab 2;"ITEM CODE";
	Print #0; Tab 16;"DESCRIPTION";
	IF SORTORDER<>2 ! NORMAL
		Print #0; Tab 52;"PRICE"; Tab 63;"CODE";
		Print #0; Tab 70;"LAST DATE";
		Print #0; Tab 86;"* * * * ORDER DATES AND QUANTITY * * * *"
		Print #0; Tab 3;"/VENDOR"; Tab 52;"/PACK"; Tab (63);"COMM"; Tab 70;"/QUANTITY";
		Print #0; Tab 83;"/  /"; Tab 93;"/  /"; Tab 103;"/  /";
		Print #0; Tab 113;"/  /"; Tab 123;"/  /"
	ELSE ! WITH SEQ #, 1 LINER
		! NEXT is seq#, space, um, last qty, ytd, date, space, coded price/gp, mingpflg, commod
		print #0; Tab 46;"SEQ"; Tab 50;"ORDER"; Tab 57;"UM"; tab 62;"LST QTY";
		print #0; Tab 73;"YTD QTY"; Tab 83;"LST SALE"; Tab 93;"ON HAND";
		Print #0; Tab 101;"CATEGORY"; Tab 116;"COMMODITY"
	ENDIF
Endif
Print #0;U5$
Return
!
L_6000: Rem SORT BY SLSM/ZONE/CUST
A1$ = " ",A1$
K1$ = " ",K1$
K1$ = X0 Using "######"
Search #9,3,1;A1$,R[CH_LASTPRC],E 
If E Goto L_6200
Search #9,5,1;A1$,R[CH_LASTPRC],E 
If E Let e$ = "syserrorfile 114a1 sortfile mode (m)=5 keyno (k)=1 r=",R[CH_LASTPRC]," e=",e," keyval (k$)=",A1$ \error 10000
L_6200: Rem SORTING
! If Not(J8) Print " "
!!Print @0,22;" SORTING PLEASE WAIT . .  . . . .   . . ";'CL'
if custom_customer$="JPAPER" and sortorder<>2 ! by cust
	k4$=K1$
	Search #4,2,1;K4$,R4,e !\ if e>1 Gosub Err_Search:
	If Not(E) Goto L_6010:

	CustFleLoop: ! "through all custs in range
	Search #4,3,1;K4$,R4,e \ if e Goto L_6400:
	! If E Gosub Err_Search:
	L_6010: ! "
	Let X2=K4$[1,6] \ If X2>X5 Goto L_6400:
	MAT  READ #4,R4,0;C1$;
	MAT  READ #4,R4,142;CFC1;
	MAT  READ #4,R4,195;C5;
	MAT READ #4,R4,348;A2$; ! ZIP
	MAT  READ #4,R4,348;A3$;
	IF CFC1[1]<X0 GOTO CustFleLoop:
	IF CFC1[1]>X5 GOTO L_6400:
	IF CFC1[2]<S1 GOTO CustFleLoop:
	IF CFC1[2]>S2 GOTO CustFleLoop:
	IF A3$[29,30]<SZONE$ GOTO CustFleLoop: ! "out of zone range
	IF A3$[29,30]>EZONE$ GOTO CustFleLoop: ! "out of zone range
	Let K1$=" ",k1$;K1$=K4$[1,6]
Endif
L_6220: !
if custom_customer$="JPAPER" and sortorder<>2 
	SEARCH #2,3,1;K1$,r[CH_Lastprc],E ! \ IF E>2 GOSUB Err_Search:
	IF E GOTO LPLDone:
	If K1$[1,6]<>K4$[1,6] Goto LPLDone:
Else
	Search #2,3,1;K1$,R[CH_LASTPRC],E 
	If E Goto L_6400
endif
Mat Read #2,R[CH_LASTPRC],0;P$;
Mat Read #2,R[CH_LASTPRC],16;C1;
Mat Read #2,R[CH_LASTPRC],28;C2;
Mat Read #2,R[CH_LASTPRC],56;P2$;
Mat Read #2,R[CH_LASTPRC],140;C6;
read #2,r[ch_lastprc],408;sqno;
If Not(NSFLG) If C6[3] Goto L_6220
Read #2,R[CH_LASTPRC],46;C3;
If P2$[81,84] < FSTCOMM$ Goto L_6220
If P2$[81,84] > LSTCOMM$ Goto L_6220
If C1[2] And (PDATETO Or PDATEFROM)
  X2 = C1[2] \ Gosub YMD2JUL \ If errflag Goto L_6220
  If PDATEFROM And X2 < PDATEFROM_JUL Goto L_6220
  If PDATETO And X2 > PDATETO_JUL Goto L_6220
End If 
A1$ = " ",A1$
J4$ = C1[0] Using "######"
Search #4,2,1;J4$,V1,E 
If E Goto L_6220
Mat Read #4,V1,0;C1$;
Mat Read #4,V1,142;CFC1;
Mat Read #4,V1,195;C5;
MAT READ #4,V1,348;A2$;
Mat Read #4,V1,348;A3$;
If CFC1[1] < X0 Goto L_6220
if custom_customer$="JPAPER" and sortorder<>2 
	IF CFC1[1]>X5 GOTO L_6220:
else
	If CFC1[1] > X5 Goto L_6400
endif
If CFC1[2] < S1 Goto L_6220
If CFC1[2] > S2 Goto L_6220
If A3$[29,30] < SZONE$ Goto L_6220
If A3$[29,30] > EZONE$ Goto L_6220
if a5[5]<>0
	if cfc1[2]<>a5[5]  goto L_6220:   !"cct#242616
ENDIF
A1$[1,3] = CFC1[2] Using "###"
A1$[4,5] = A3$[29,30]
if custom_customer$="JPAPER" and sortorder<>2  let a1$[4,5]="  " ! doesn't want in sort
A1$[6] = K1$
if custom_customer$="JPAPER"  and sortorder<>2 ! copy from custom mx114a1
	if sortorder
		a1$[12,15] = p2$[81,84]			! commodity code
		a1$[16] = P$[1,12]
	Else 
		A1$[12,15]="    "
		A1$[16]=P$[1,12]
	endif
	Let A1$[28]=R[Ch_LastPrc] Using "########"
	Let A1$[36]=" "
Else
	If SORTORDER
	  let A1$[12] = P2$[81,84] ! 3? now 4
	  if sortorder=2
		if sqno<=0 let sqno=9999
		let a1$[12,15]=sqno using "####"
	  Endif
	  A1$[16] = K1$[7]
	End If 
endif
Search #9,4,1;A1$,R[CH_LASTPRC],E 
If E Let e$ = "syserrorfile 114a1 sortfile mode (m)=4 keyno (k)=1 r=",R[CH_LASTPRC]," e=",e," keyval (k$)=",A1$ \error 10000
Goto L_6220
L_6400: Return 
!
LPLDone: ! "got to check spc/cont
If Not(INCLSCP) Goto CustFleLoop: ! "don't want contr/spcl
Let P1$=" ",P1$
MAT  READ #4,R4,0;C1$;
MAT  READ #4,R4,142;CFC1;
MAT  READ #4,R4,194;C5;
MAT READ #4,R4,348;A2$;
MAT  READ #4,R4,348;A3$;
IF CFC1[1]<X0 GOTO CustFleLoop: ! "cust code too low
IF CFC1[1]>X5 GOTO L_6400: ! "cust code too high
IF CFC1[2]<S1 GOTO CustFleLoop: ! "salesrep too low
IF CFC1[2]>S2 GOTO CustFleLoop: ! "salesrep too high
IF A3$[29,30]<SZONE$ GOTO CustFleLoop: ! "out of zone range
IF A3$[29,30]>EZONE$ GOTO CustFleLoop: ! "out of zone range
LET A1$=" ",A1$ \ LET A1$[1,3]=CFC1[2] USING "###" ! "salesrep
Let A1$[4,5]="  " ! "A3$[29,30] no zone in sort
LET A1$[6,11]=K4$[1,6] !";A1$[16,27]=P$[1,12];A1$[28]=R1 USING "########" ! "cust, prod, REC #
Let A1$[12]=" " ! "no indicator
Let Z1=CFC1[1]
If INCLSCP Gosub Get_SPCCONT:
Goto CustFleLoop:

Get_SPCCont: ! "check special/Contract files
Let K9$=A1$ ! "last key for Cust
Let K2$=" ",k2$;k2$=Z1 Using "######"
SPR_Loop: ! " 
Search #6,3,1;k2$,R6,e \ if e goto Chk_Contr:
!If E Gosub Err_Search:
Let x2=k2$[1,6] \ If x2<>Z1 Goto Chk_Contr:
Let NumRec=NumRec+1
!If Not(Fra(NumRec/100)) Print @40,22;NumRec;K4$
If K2$[7,7]="*" Or K2$[7,7]="#" or K2$[7,7]="&" Goto SPR_Loop:
Mat Read #6,R6,0;SP$;
Mat Read #6,r6,12;SPC1;
Let X2=SPC1[2] \ If X2 Gosub YMD2Jul: \ Let X2=0
if JDate[0]<X2 Goto SPR_Loop: ! "not started yet
Let X2=SPC1[4] \ If X2<>999999 Gosub YMD2Jul: \ Let X2=99999
If Jdate[0]>X2 Goto SPR_Loop: ! "ended
Read #6,r6,118;SPWH;
If Whse And SPWH And SPWH<>Whse Goto SPR_Loop: ! "wrong whse
If SortOrder Gosub Get_prod:
Let K3$=" ",k3$;K3$=K9$[1,11]
If Sortorder
  Let K3$[12,15]=P1$[152,155]
Else
  Let K3$[12,15]="    "
Endif
Let K3$[16,27]=K2$[7] ! "prod code
Let K3$[28]=""
Search #9,2,1;K3$,R9,E !\ if e>1 Gosub Err_Search:
If E ! "not there already - add it
  Let K3$[28]=R6 Using "########"
  Let K3$[36]="*" ! "indicator
  Search #9,4,1;K3$,R6,e !\ if e>1 Gosub Err_Search:
Endif
Goto SPR_LOOP:

Chk_Contr: ! "contract's check
Let K2$=" ",K2$;K2$[1,1]="C"  ! "contracts start w/"C"
SPCLoop: ! "
Search #6,3,1;K2$,R6,e \ if e goto SPContDone:
!If E Gosub Err_Search:
If K2$[1,1]<>"C" Goto SPContDone:
Let NumRec=NumRec+1
!If Not(Fra(NumRec/100)) Print @40,22;NumRec;K4$
If K2$[7,7]="*" Or K2$[7,7]="#" or K2$[7,7]="&" Goto SPCLoop:
Mat Read #6,R6,0;SP$;
Mat Read #6,r6,12;SPC1;
Let X2=SPC1[2] \ If X2 Gosub YMD2Jul: \ Let X2=0
if JDate[0]<X2 Goto SPCLoop: ! "not started yet
Let X2=SPC1[4] \ If X2<>999999 Gosub YMD2Jul: \ Let X2=99999
If Jdate[0]>X2 Goto SPCLoop: ! "ended
Read #6,r6,118;SPWH;
If Whse And SPWH And SPWH<>Whse Goto SPCLoop: ! "wrong whse for contract
Let K3$=" ",K3$
Let K3$=k2$[1,6];K3$[7]=Z1 Using "######"
Search #10,2,3;K3$,R0,E !\ if e>1 Gosub Err_Search:
If E Goto SPCLoop: ! "not for this Cust
If SortOrder Gosub Get_Prod:
Let K3$=" ",k3$;K3$=K9$[1,11]
If SortOrder
   Let K3$[12,15]=P1$[152,155]
Else
   Let K3$[12,15]="    "
Endif
Let K3$[16,27]=K2$[7] ! "prod code
Let K3$[28]=""
Search #9,2,1;K3$,R9,E !\ if e>1 Gosub Err_Search:
If E ! "not there already - add it
	Let K3$[28,35]=R6 Using "########" ! "special price record
    Let K3$[36]="*" ! "indicator
	Search #9,4,1;K3$,R6,E !\ if e>1 Gosub Err_Search:
Endif
Goto SPCLoop:

SpContDone: ! "Done
Let A1$=K9$
RETURN 

Get_Prod: ! "
Let P1$=" ",P1$;Key1$=" ",Key1$
LET Key1$=SP$[1,12]
SEARCH #3,2,1;Key1$,r[CH_Prod],E !\ IF E>1 GOSUB Err_Search:
IF E Return
MAT  READ #3,r[CH_Prod],0;P1$;
Return
!
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
L_7900: Rem GET VENDOR
K4$ = " ",K4$ \ K4$ = B[24] Using "######" \ V$ = " ",V$
Search #15,2,1;K4$,R4,E !!\ If E > 1 Gosub L_9580
If E Let V$ = "NOT ON FILE " \ Goto L_7950
Mat Read #15,R4,0;V$;
L_7950: Return 
!
L_8100: Rem GET WHSE
WHPROD$[1,12] = P1$[140,151]
WHBLD[0] = 17;WHBLD[1] = WHSE;WHBLD[2] = 0
Call "GETWHSE.dl4",WHPROD$,WHBLD[],W1$,W3[],WHPARC[],WHLV[],W7[],WHMISC[],E,e$,rstr$
If P9$[32,32] = "Y" Gosub L_69000
If WHBLD[2] > 0 Mat Read #17,WHBLD[2],842;WHLM;
B[8] = W3[17];B[10] = W3[16];B[22] = WHPARC[0];B[21] = W3[15]
C4[3] = WHPARC[1];C4[4] = W3[18];PF_LOAD2 = W3[14]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
L_8500: Rem FOOTNOTE SPACE
if sortorder=2 and JA2 gosub manpent
Return 
!
L_10000: Rem CONVERT
BSH[0]=X3;BSH[1]=COST;BSH[2]=C2[1];BSH[3]=C2[2]
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
X3 = X3 - L6[1]
If L6[0] Let X3 = X3 - (X3 * (L6[0] / 100))
If PRFLAG = 2 If Not(X3) If SGPRICE Let X3 = SGPRICE
CNVTA = X3
Gosub L_20000
X3 = FNP(AMOUNT)
Let Cnvta=Cost \ Gosub L_20000:
Let Cost=FNP(Amount)
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = C2[0]
Gosub L_20000
C2[0] = AMOUNT
If C3[3] > 0 Mat Read #12,C3[3],10;PUNIT$;
If C3[2] > 0 Mat Read #12,C3[2],10;SUNIT$;
If C3[4] > 0 Mat Read #12,C3[4],10;CUNIT$;
If C3[3] = -1 Let PUNIT$ = "CWT "
If C3[3] = -2 Let PUNIT$ = "LOT "
If C3[3] = -3 Let PUNIT$ = "LB  "
If C3[4] = -1 Let CUNIT$ = "CWT "
If C3[4] = -2 Let CUNIT$ = "LOT "
If C3[4] = -3 Let CUNIT$ = "LB  "
CNVTU[0] = 0
CNVTU[1] = C3[4]
CNVTU[2] = 2
CNVTA = C2[2]
Gosub L_20000
C2[2] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
CNVTA = C2[1]
Gosub L_20000
C2[1] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = lpr[4]
Gosub L_20000
LPR[4] = AMOUNT
Return 
!
L_12100: Rem GET SUGGESTED PRICE
SGPRICE = 0
If C3[0] <> -7 Goto L_12160
If Not(C2[1]) Or Not(C2[2]) Goto L_12160
SGPRICE = COST
SGPRICE = SGPRICE + (SGPRICE * ((C2[1] - C2[2]) / C2[2]))
L_12160: Return 
!
L_12400: Rem  calc loads from load markup
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA;B[8] = W3[17]
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA;PF_LOAD2 = W3[14]
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
!!PRINTSCREEN: Rem ================================================ screen
!!Window Off \ Window On 
!!Print @0,0;"MX114A1";@26,0;"SALESMAN/CUSTOMER PRICE LIST"
!!Print @0,2;" 1> <C>ustomer Version  <S>alesperson Version  <O>rder sheet  <P>rice review?  O"
!!Print @0,3;" 2> <C>ustomer or <S>alesperson order sheet? S";'CL'
!!Print @18,5;"-STARTING-";@33,5;"-ENDING-"
!!Print @0,6;" 3> CUSTOMERS";'CL';@45,6;" 9> EFFECTIVE DATE: ";'CL';
!!Print @0,7;'CL';" 4> LAST PURCHASED";'CL';
!!Print @48,7;"(for special price calculation)";'CL';
!!Print @0,8;" 5> SALESPERSONS";'CL';
!!Print @0,9;" 6> ZONES";'CL';
!!Print @0,10;" 7> COMMODITIES"
!!Print @0,11;" 8> SORT BY COMMODITY";
!!Print @0,12;'CL';
!!Print @0,13;'CL';
!!Print @0,14;'CL';
!!Print @0,15;'CL';
!!Print @0,16;'CL';
!!Print @0,17;" 15> ENTER BRACKET # TO USE FOR TEN BRACKET PRICES OR <CR> FOR NO PRICE ";
!!Print @0,18;'CL';
!!Print @0,19;'CL';
!!Print @0,20;'CL';
!!If P9$[32,32] = "Y" Print @0,21;" 18> ENTER WAREHOUSE TO PRINT FOR, ''0'' FOR MAIN ";'CE'; Else Print @0,21;'CE';
!!Print @0,22;" 19> PRINT NON-STOCKS? (Y/N) ";
!!Window Off 
!!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
If L3 Let AMOUNT = CNVTA \ Goto L_20160
L_20050: !
! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: 
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub L_9580
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub L_9580
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub L_9580
AMOUNT = CNVTA
L_20160: Return 
!
!!L_31000: J5$ = "";J0$ = "1 00014503" \ J1$ = "S"
!!Gosub ISINPUT
!!If J$ = "C" Let C4 = 99 \ Chain "mx114a"
!!If J$ <> "S" Goto L_31000
!!Return 
!!L_31200: J5$ = "<CR> FOR FIRST";J0$ = "1 00062106" \ J1$ = "      "
!!Gosub ISINPUT \ X0 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00063306" \ J1$ = "999999"
!!Gosub ISINPUT \ X5 = J$
!!If X0 > X5 Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!" \ Gosub ISERRMSG \ Goto L_31200
!!Return 
!!EDT_PURCHRNG: J5$ = "<CR> FOR FIRST" \ J0$ = "5 00  2107" \ J1$ = ""
!!J1 = 700101
!!Gosub ISINPUT \ PDATEFROM = J1
!!If PDATEFROM = 0
!!  PDATEFROM_JUL = 0
!!  Print @21,7;"First"
!!Else 
!!  X2 = J1 \ Gosub YMD2JUL \ Goto EDT_PURCHRNG
!!  PDATEFROM_JUL = X2
!!End If 
!!EDT_PURCHRNG1: J5$ = "<CR> FOR LAST" \ J0$ = "5 00  3307" \ J1$ = ""
!!J1 = 591231
!!Gosub ISINPUT \ PDATETO = J1
!!If PDATETO = 0
!!  PDATETO_JUL = 0
!!  Print @33,7;"Last"
!!Else 
!!  X2 = J1 \ Gosub YMD2JUL \ Goto EDT_PURCHRNG1
!!  PDATETO_JUL = X2
!!End If 
!!If PDATEFROM And PDATETO And PDATEFROM_JUL > PDATETO_JUL Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub ISERRMSG \ Goto EDT_PURCHRNG
!!Return 
!!L_31400: J5$ = "<CR> FOR FIRST" \ J0$ = "1 00032408" \ J1$ = "   "
!!Gosub ISINPUT \ S1 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00033608" \ J1$ = "999"
!!Gosub ISINPUT \ S2 = J$
!!If S1 > S2 Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub ISERRMSG \ Goto L_31400
!!Return 
!!L_31600: J5$ = "<CR> FOR FIRST" \ J0$ = "2 00022409" \ J1$ = "   "
!!Gosub ISINPUT \ SZONE$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00023609" \ J1$ = "zz"
!!Gosub ISINPUT \ EZONE$ = J$
!!If SZONE$ > EZONE$ Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub ISERRMSG \ Goto L_31600
!!Return 
!!EDT_CMMDRNG: Rem -----------------------------------------------Commodity Range
!!J5$ = "<CR> FOR FIRST" \ J0$ = "2 00042310" \ J1$ = "    "
!!Gosub ISINPUT \ FSTCOMM$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00043510" \ J1$ = "zzzz"
!!Gosub ISINPUT \ LSTCOMM$ = J$
!!If FSTCOMM$ > LSTCOMM$
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
!!  Gosub ISERRMSG \ Goto EDT_CMMDRNG
!!End If 
!!Return 
!!SORTORDER_QUEST: Rem
!!J5$ = "Y=sort by commodity, N=sort by product"
!!J0$ = "6 00012311"
!!J1 = SORTORDER
!!Gosub ISINPUT
!!SORTORDER = J1
!!Return 
!!L_31700: Rem
!!J5$ = "<CR> FOR DEFAULT DATE" \ J0$ = "5 00086406" \ J1 = DT
!!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto L_31700
!!JDATE[1] = X2
!!DT = J1;X2 = J1 \ Gosub ISDUNPACK
!!Return 
!!L_31800: J0$ = "2 00037217" \ J1$ = "   ";J5$ = ""
!!Gosub ISINPUT
!!If J$ = "   " Let BRACKET = -9 Else Let BRACKET = J$
!!Return 
!!L_32000: J0$ = "3 00024821";J1 = DFWH;J5$ = ""
!!If P9$[32,32] = "Y"
!!  Gosub ISINPUT
!!Else 
!!  WHSE = 0 \ Goto L_32040
!!End If 
!!WHSE = J1
!!If WHSE < 0 Or WHSE > D9[5] Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_32000
!!L_32040: Return 
!!L_32300: Rem non stocks
!!J0$ = "6 00012922" \ J1 = 0;J5$ = ""
!!Gosub ISINPUT
!!NSFLG = 0 \ If J1 Let NSFLG = 1
!!Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
! - JUL2DATE: Rem REM DATE JULIAN X2 TO X$
! - D3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",D3[],X$,FLAG
! - Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Let errflag = 1 \ Return 
X2 = X$[1,5]
Return !!1
!
! - JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
! - D3[0] = X2;D3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",D3[],X$,FLAG
! - Return 
!
L_9100: Rem END OF THIS RANGE
if prntflag<>0
	Gosub L_3800
endif
!!If JA8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!Goto L_9000
!
L_9000: Rem EXIT ROUTINE
OutEnd: ! alt name
!!Print 'CS'
!!Chain "MX000C"
!!Stop
!
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try call dxclose() else rem
End
!
L_9500: Rem  *ERROR ROUTINE  (ESCAPE TRAP)    V3.0  9/91 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End