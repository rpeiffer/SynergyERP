! >>> Program 681a
!
! description   I/F Inventory Report Detail
!
! loadsave -w -n 100,10 -o prog/dxport/681a.dl4 src/681a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 13, 2006  14:46:50
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx681a.src (univ2) [txc] {39437}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX681A         Inventory Master File Report (full detail)
Rem Author:        Roman   (02/24/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
external lib "ubsfunc.dl4"
declare external sub GetCostLevels
!
Declare Intrinsic Sub FindF,InpBuf,String,Time
!
! - Option Default Dialect IRIS1
Com 1%,COST_LEV[3],COMM_LEV
Com 1%,CNVTU[2],3%,CNVTA,BASEX,FIELD
!
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin src/inc/dim.prod.i}
!
Dim tmp$[2000],tmp1$[2000],tmp2$[2000],tmp3$[2000],tmp4$[2000],tmp5$[2000],tmp6$[2000]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 1%,BegWH,EndWH
!
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim PRFLG$[10],PRMKUPTYP$[4],PIC$[50],PRIML$[12]
Dim 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Dim 1%,PRBASE,PRPARC2[3],PRD1[4],AGEDAY,PM5[5,4]
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 2%,STK[2],FDT[1],PRMKUP[3],PRD0[2]
Dim 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,LBSORD,FUT[1],PRREDI[1],PRD2[3]
Rem {end dim.prod.i}
Dim PKDATE$[20]
Dim 2%,SL[2]
Rem {begin src/inc/dim.prwh.i}
Dim W1$[32],WH3$[24],WHFLG$[10],WHMKUPTYP$[4],WCOMM$[4]
Dim 2%,W2[9],W7[14],WH7[3],WHLPOOL,WHFDT[1],WHMKUP[3]
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 1%,RESTRICTED,WHBASE,WHPARC2[3]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHMISC2[7]
Dim 3%,WHFUT[2],VLIST,WHREDI[1],WHLBS[1]
Rem {end dim.prwh.i}
Dim 1%,ARMONTH,MTHDAYS,COID,PRCBK
Dim 2%,BDAYS[24]
Dim 3%,AMOUNT,PREC[5],R[99],PRBK3
Dim 1%,PRBK1[11],SPBK[4],2%,PRBK2[2],SPBK2[3],PRBK$[200],PRBK1$[200],SPBK$[50]
Dim J$[40],CNAME$[30],ARDATE$[8],Z2$[5],BUYER$[30]
Dim PULBL$[340],PUDA$[650],LBL$[20],KEYUDA$[20],4%,PUDA[3],3%
Dim DFLTUM$[24],REFUM$[24],CONV_$[32],CCD$[14],RETVAL$[512]
Dim ITEM_LAB$[10],UDA$[56],WH_LAB$[10],KF8$[50]
Dim 1%,SCH[2],X0,PASS,2%,X2,V9[4],RCTR,3%,J,J1,Z1[11]
Dim K0$[50],K1$[50],K2$[12],K3$[12],K4$[4],K5$[4],K6$[1],K7$[1]
Dim K8$[15],K9$[15],K10$[1],K11$[1],K12$[5],K13$[1],K14$[1],K15$[1]
Dim X$[20],TIME$[22],MONTHS$[39],Z1$[50],P9$[50],P60$[50],P61$[256]
!
MONTHS$ = "N/AJANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Def FNA(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) * .1)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Let COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)

!
IF ERR 0 REM
Close #10 ! "opened in 681 - #23 in here
iF ERR 0 GOSUB ERR_TRAP
For J = 2 To 8
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
!!
Data "1792","1728","2784","1744","1696","2288","2352"
!
For X0 = 10 To 22  
  Read X2 \ If X2 = -1 Goto L_825
  Read #1,88,X2;X$;
  Ropen #X0,X$
L_825: Next X0
Data "2288","2272","1984","2400","944","1952","672","1744","2784","1696","-1","-1","-1"
!
!! 21=BUYERS, 22=PRCBOOK, 23=spricemark
ROpen #23,"2/SPRICEMARK"+Str$(COID)
! open files
X$ = "2/SPRODUDA" + Str$(intCO)
Call FindF(X$,UDAF)
If UDAF
  Ropen #20,X$
End If 
Open #21,"2/buyers"
If P9$[20,20] = "F" ! "fine paper?
  X$ = "2/SYNGPRBK" + Str$(intCO) ! old PRODPRBK
  Call FindF(X$,PRCBK)
  If PRCBK Ropen #22,X$
Else 
  PRCBK = 0
End If 
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Read #1,0,120;ARMONTH;
Mat Read #1,11,0;BDAYS;
MTHDAYS = BDAYS[ARMONTH]
If MTHDAYS <= 0 Let MTHDAYS = 21
Read #1,3;CNAME$;
Read #1,18,50;ITEM_LAB$;
Read #1,67;UDA$;
Read #1,18,30;WH_LAB$;
Read #1,0,100;ARDATE$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[4] = Chf(0) 
If Err 0 Gosub ERR_TRAP
! - If Err 0 Gosub ERR_ESCAPE
If J8 If J8 <> 49 Goto ERR_TRAP
V9[4] = 62 \ If J8 Let V9[4] = 20
! - K2$ = " ",K2$;K3$ = "z",K3$
! - K4$ = " ",K4$;K5$ = "z",K5$
! - K6$ = " ",K6$;K7$ = "z",K7$
! - K8$ = " ",K8$;K9$ = "z",K9$
! - K10$ = "N";K11$ = "N";K12$ = "N 099";K13$ = "N"
! - K14$ = "N";K15$ = "N";ALTF = 0
! - UDAFLE = 0
!
! dx add xport reporting code
DXSetup:

!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"681a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
If J8 Let e$ = "This report is not available in XML format!" \ error 10000
!
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
!

!
!  dx add xport reporting code
call dxget("begprod",K2$) \ K2$=UCase$(K2$),Blank$ ! Starting Product
call dxget("endprod",K3$) \ K3$=UCase$(K3$),EndParam$ ! Ending Product
call dxget("begcomm",K4$) \ K4$=UCase$(K4$),Blank$ ! Starting Commodity
call dxget("endcomm",K5$) \ K5$=UCase$(K5$),EndParam$ ! Ending Commodity
call dxget("begmat",K6$) \ K6$=UCase$(K6$),Blank$ ! Starting Material Code
call dxget("endmat",K7$) \ K7$=UCase$(K7$),EndParam$ ! Ending Material Code
call dxget("begdesc",K8$) \ K8$=K8$,Blank$ ! Starting Description Code
call dxget("enddesc",K9$) \ K9$=K9$,EndParam$ ! Ending Description Code
call dxget("screen2",K10$) \ if K10$ = "" let K10$ = "N" else K10$ = "Y" ! Include Screen 2
call dxget("units",K11$) \ if K11$ = "" let K11$ = "N" else K11$ = "Y" ! Include Units of Measure
call dxget("incwhse",K12$) \ if K12$ = "" let K12$ = "N" else K12$ = "Y" ! Include Warehouses
call dxget("begwhse",tmp$) \ BegWh=tmp$ ! Starting Warehouse
call dxget("endwhse",tmp$) \ if tmp$ = "" let EndWh = 99 else EndWh = tmp$ ! Ending Warehouse
call dxget("grade",K13$) \ if K13$ = "" let K13$="N" else K13$="Y" ! Include Grade
call dxget("hazard",K14$) \ if K14$ = "" let K14$="N" else K14$="Y" ! Include Hazard Date
call dxget("notes",K15$) \ if K15$ = "" let K15$="N" else K15$="Y" ! Include Notes
call dxget("altprod",tmp$) \ if tmp$="" let ALTF=0 else ALTF=1 ! Include Alt Prod Codes
call dxget("uda",tmp$) \ if tmp$="" let UDAFILE=0 else UDAFILE=1 ! Include Uda Screen fields
!  dx end
!
! starting & ending customer
if K3$<K2$ let e$="Invalid ending product, must be >= starting product!" \ error 10000
!
! starting & ending commodity
if K5$<K4$ let e$="Invalid ending commodity, must be >= starting commodity!" \ error 10000
!
! starting & ending material code
if K7$<K6$ let e$="Invalid ending material code, must be >= starting material code!" \ error 10000
!
! starting & ending description code
if K9$<K8$ let e$="Invalid ending description code, must be >= starting description code!" \ error 10000
!
! warehouse
if K12$="N"
  K12$[2,5]=" 099" ! starting & ending warehouse
else
  if BegWH<0 or BegWH>99 let e$="Invalid starting warehouse, must be between 0 and 99!" \ error 10000
  if EndWH<BegWH or EndWH>99 let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
  K12$[2,3]=BegWH using "##"
  K12$[4,5]=EndWH using "##"
endif
!
! grade
if P9$[20,20]<>"F" let K13$="N" ! for fine paper only
!
! uda info
If Not(UDAF) Let UDAFLE = 0
If UDAF ! "get field labels - if file exists
  KEYUDA$ = "!!!LABEL KEY"
  Search #20,2,1;KEYUDA$,R[20],E 
  If Not(E)
    Mat Read #20,R[20],12;PULBL$;
  Else 
    PULBL$ = " ",PULBL$
  End If 
End If 
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 


! - Call "ProgDflt","681A","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
! -   RETVAL$ = " ",RETVAL$
! -   RETVAL$[1,12] = K2$[1,12];RETVAL$[13,24] = K3$[1,12]
! -   RETVAL$[25,28] = K4$[1,4];RETVAL$[29,32] = K5$[1,4]
! -   RETVAL$[33,33] = K6$[1,1];RETVAL$[34,34] = K7$[1,1]
! -   RETVAL$[35,49] = K8$[1,15];RETVAL$[50,64] = K9$[1,15]
! -   RETVAL$[65,65] = K10$[1,1];RETVAL$[66,66] = K11$[1,1]
! -   RETVAL$[67,71] = K12$[1,5];RETVAL$[72,72] = K13$[1,1]
! -   RETVAL$[73,73] = K14$[1,1];RETVAL$[74,74] = K15$[1,1]
! -   RETVAL$[75,75] = "N" \ If ALTF Let RETVAL$[75,75] = "Y"
! -   RETVAL$[76,76] = "N" \ If UDAFLE Let RETVAL$[76,76] = "Y"
! - End If 
! - K2$ = RETVAL$[1,12];K3$ = RETVAL$[13,24]
! - K4$ = RETVAL$[25,28];K5$ = RETVAL$[29,32]
! - K6$ = RETVAL$[33,33];K7$ = RETVAL$[34,34]
! - K8$ = RETVAL$[35,49];K9$ = RETVAL$[50,64]
! - K10$ = RETVAL$[65,65];K11$ = RETVAL$[66,66]
! - K12$ = RETVAL$[67,71];K13$ = RETVAL$[72,72]
! - K14$ = RETVAL$[73,73];K14$ = RETVAL$[74,74]
! - ALTF = 0 \ If RETVAL$[75,75] = "Y" Let ALTF = 1
! - UDAFLE = 0 \ If RETVAL$[76,76] = "Y" Let UDAFLE = 1
! - Gosub MAINSCRN
! - Goto FINALQ
! - L_900: Rem "=================================== get All ranges
! - Gosub MAINSCRN
! - For SEL = 1 To 12 \ Gosub EDT_FLDS \ Next SEL
! - Goto FINALQ
! - L_904: Rem "Item Code
! - Print @20,4;'CL'; \ Input Len 16384 + 12;""Z1$
! - If Z1$ = "" Let Z1$ = K2$
! - K2$ = Z1$
! - Print @45,4;'CL'; \ Input Len 16384 + 12;""Z1$
! - If Z1$ = "" Let Z1$ = K3$
! - K3$ = Z1$
! - If K3$ < K2$ Gosub L_985 \ Goto L_904
! - Print @20,4;'CL';K2$[1,12];@45,4;K3$[1,12];
! - RETVAL$[1,12] = K2$[1,12];RETVAL$[13,24] = K3$[1,12]
! - Return 
! - L_912: Rem "commodity
! - Print @20,6;'CL'; \ Input Len 16384 + 4;""Z1$
! - If Z1$ = "" Let Z1$ = K4$
! - K4$ = Z1$
! - Print @45,6;'CL'; \ Input Len 16384 + 4;""Z1$
! - If Z1$ = "" Let Z1$ = K5$
! - K5$ = Z1$
! - If K5$ < K4$ Gosub L_985 \ Goto L_912
! - Print @20,6;'CL';K4$[1,4];@45,6;K5$[1,4];
! - RETVAL$[25,28] = K4$[1,4];RETVAL$[29,32] = K5$[1,4]
! - Return 
! - L_920: Rem "Material Code
! - Print @20,8;'CL'; \ Input Len 16384 + 1;""Z1$
! - If Z1$ = "" Let Z1$ = K6$
! - K6$ = Z1$
! - Print @45,8;'CL'; \ Input Len 16384 + 1;""Z1$
! - If Z1$ = "" Let Z1$ = K7$
! - K7$ = Z1$
! - If K7$ < K6$ Gosub L_985 \ Goto L_920
! - Print @20,8;'CL';K6$[1,1];@45,8;K7$[1,1];
! - RETVAL$[33,33] = K6$[1,1];RETVAL$[34,34] = K7$[1,1]
! - Return 
! - L_928: Rem "desription
! - Print @20,10;'CL'; \ Input Len 16384 + 15;""Z1$
! - If Z1$ = "" Let Z1$ = K8$
! - K8$ = Z1$
! - Print @45,10;'CL'; \ Input Len 16384 + 15;""Z1$
! - If Z1$ = "" Let Z1$ = K9$
! - K9$ = Z1$
! - If K9$ < K8$ Gosub L_985 \ Goto L_928
! - Print @20,10;'CL';K8$[1,15];@45,10;K9$[1,15];
! - RETVAL$[35,49] = K8$[1,15];RETVAL$[50,64] = K9$[1,15]
! - Return 
! - SHOSCRN2: Rem "Want Screen 2
! - Print @25,13;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = K10$
! - K10$ = Z1$ \ If K10$ <> "Y" And K10$ <> "N" Goto SHOSCRN2
! - Print @25,13;'CL';K10$
! - RETVAL$[65,65] = K10$[1,1]
! - Return 
! - SHOUMSCRN: Rem "U/m
! - Print @25,14;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = K11$
! - K11$ = Z1$ \ If K11$ <> "Y" And K11$ <> "N" Goto SHOUMSCRN
! - Print @25,14;'CL';K11$
! - RETVAL$[66,66] = K11$[1,1]
! - Return 
! - SHO_WHSESCRN: Rem "
! - Print @25,15; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$[1,1] = K12$[1,1]
! - K12$[1,1] = Z1$ \ If K12$[1,1] <> "Y" And K12$[1,1] <> "N" Goto SHO_WHSESCRN
! - Print @25,15;K12$[1,1]
! - If K12$[1,1] = "N" Let K12$[2,5] = " 099" \ Goto L_970
! - L_950: Rem "start end whse
! - Z1$ = K12$[2,3] \ Print @30,15;Z1$;
! - Print @30,15; \ Input Len 16384 + 2;""Z1$
! - If Z1$ = "" Let Z1$ = K12$[2,3]
! - X0 = Z1$ \ K12$[2,3] = X0 Using "##"
! - Z1$ = K12$[4,5] \ Print @40,15;Z1$;
! - Print @40,15; \ Input Len 16384 + 2;""Z1$
! - If Z1$ = "" Let Z1$ = K12$[4,5]
! - X0 = Z1$ \ K12$[4,5] = X0 Using "##"
! - If K12$[4,5] < K12$[2,3] Gosub L_985 \ Print @30,15;"  ";@40,15;"  " \ Goto L_950
! - Print @30,15;K12$[2,3];@40,15;K12$[4,5]
! - L_970: RETVAL$[67,71] = K12$[1,5]
! - Return 
! - SHOGRADESCRN: Rem "
! - If P9$[20,20] <> "F" ! "only valid for fine paper?
! -   K13$ = "N"
! -   Print @25,16;"N/A"
! -   Return 
! - End If 
! - Print @25,16;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = K13$[1,1]
! - K13$ = Z1$ \ If K13$ <> "Y" And K13$ <> "N" Goto SHOGRADESCRN
! - Print @25,16;'CL';K13$
! - RETVAL$[72,72] = K13$[1,1]
! - Return 
! - SHOHAZSCRN: Rem "
! - Print @25,17;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = K14$[1,1]
! - K14$ = Z1$ \ If K14$ <> "Y" And K14$ <> "N" Goto SHOHAZSCRN
! - Print @25,17;'CL';K14$
! - RETVAL$[73,73] = K14$[1,1]
! - Return 
! - SHONOTES: Rem "
! - Print @25,18;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = K15$[1,1]
! - K15$ = Z1$ \ If K15$ <> "Y" And K15$ <> "N" Goto SHONOTES
! - Print @25,18;'CL';K15$
! - RETVAL$[74,74] = K15$[1,1]
! - Return 
! - SHOALTITEMS: Rem "
! - Print @25,19;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = RETVAL$[75,75]
! - If Z1$ <> "Y" And Z1$ <> "N" Goto SHOALTITEMS
! - Print @25,19;'CL';Z1$ \ ALTF = 0 \ If Z1$ = "Y" Let ALTF = 1
! - RETVAL$[75,75] = Z1$[1,1]
! - Return 
! - SHOUDAFLDS: Rem "uda screen
! - If Not(UDAF) Let UDAFLE = 0 \ Return 
! - Print @25,20;'CL'; \ Input Len 16384 + 1;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "" Let Z1$ = RETVAL$[76,76]
! - If Z1$ <> "Y" And Z1$ <> "N" Goto SHOUDAFLDS
! - Print @25,20;'CL';Z1$; \ UDAFLE = 0 \ If Z1$ = "Y" Let UDAFLE = 1
! - RETVAL$[76,76] = Z1$[1,1]
! - Return 
! - L_985: Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE';
! - Signal 3,50 \ Print @0,22;'CL' \ Return 
! - FINALQ: Print @0,22;'CE';"ENTER  #:field to edit  P: print  R: reselect all  S: save defaults  E: exit ";
! - Input Len 16384 + 2;""Z1$ \ Call String(1,Z1$)
! - If Z1$ = "E" Goto OUTEND
! - If Z1$ = "R" Goto L_900
! - If Z1$ = "P" Goto STARTREPORT
! - If Z1$ = "S"
! - ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save  ";
! -   Input Len 16384 + 1;""Z2$ \ Call String(1,Z2$)
! -   If Z2$ = "" Print @0,22;'CL'; \ Goto FINALQ
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "Progdfltw","681A","",77,RETVAL$,URECFLAG
! -   Print @0,22;'CL';
! -   Goto FINALQ
! - End If 
! - SEL = Z1$ \ If SEL < 1 Or SEL > 12 Goto FINALQ
! - Gosub EDT_FLDS
! - Goto FINALQ
! - EDT_FLDS: Rem "Edit them here
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On SEL Gosub L_904,L_912,L_920,L_928,SHOSCRN2,SHOUMSCRN,SHO_WHSESCRN
! - On SEL - 7 Gosub SHOGRADESCRN,SHOHAZSCRN,SHONOTES,SHOALTITEMS,SHOUDAFLDS
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
STARTREPORT: Rem"
!If Not(J8) If V9[0] Print #0;"\14\"
! - Print @0,22;"PRINTING...please wait";'CE' \ Signal 3,1
V9[1] = 100 \ V9[0] = 0 \ RCTR = 0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
K1$ = K2$
Search #2,2,1;k1$,R1,E
if not(e) goto gfone
L_2090: 
Search #2,3,1;K1$,R1,E
If E = 2 Goto OUTEND
gfone: ! found 1st
If Len(K3$) < 12 Let K3$[Len(K3$) + 1] = "        "
If K1$[1,Len(K3$)] > K3$ Goto OUTEND
Mat Read #2,R1,0;A$;
KF8$ = " ",KF8$;KF8$[1,12] = A$[140,151]
If A$[152,151 + Len(K4$)] < K4$ Goto L_2090
If A$[152,151 + Len(K5$)] > K5$ Goto L_2090
If A$[156,156] < K6$ Goto L_2090
If A$[156,156] > K7$ Goto L_2090
If A$[9,8 + Len(K8$)] < K8$ Goto L_2090
If A$[9,8 + Len(K9$)] > K9$ Goto L_2090
CH_PROD = 2;REC_PROD = R1
Rem {begin src/inc/read.prod.i}
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,624;PR_PO
Mat Read #CH_PROD,REC_PROD,628;AGEDAY
Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,664;LBSORD
Mat Read #CH_PROD,REC_PROD,670;U4
Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,846;PFTB
Read #CH_PROD,REC_PROD,854;UPCT
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Mat Read #CH_PROD,REC_PROD,944;PR_A2$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Mat Read #CH_PROD,REC_PROD,1018;PFN
Mat Read #CH_PROD,REC_PROD,1030;STK
Mat Read #CH_PROD,REC_PROD,1048;FDT
Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
Mat Read #CH_PROD,REC_PROD,1066;PRBASE
Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
Mat Read #CH_PROD,REC_PROD,1088;FUT
Mat Read #CH_PROD,REC_PROD,1100;PRPARC2
Mat Read #CH_PROD,REC_PROD,1108;PRREDI
Mat Read #CH_PROD,REC_PROD,1120;PIC$
Mat Read #CH_PROD,REC_PROD,1270;PRD0
Mat Read #CH_PROD,REC_PROD,1282;PRIML$
Mat Read #CH_PROD,REC_PROD,1294;PRD1
Mat Read #CH_PROD,REC_PROD,1304;PRD2
Rem {end read.prod.i}
Mat Read #CH_PROD,REC_PROD,1222;SL
Mat Read #CH_PROD,REC_PROD,1234;PKDATE$
Unlock #2
PREC[0]=REC_PROD ! OR R1
If K10$ = "N" And K11$ = "N" And K12$[1,1] = "N" Goto L_2900
BASEX = PR_C4[4] \ Gosub L_8000
If A$[127,127] <> "Y" Let A$[127,127] = "N"
DFLTUM$ = " ",DFLTUM$ \ REFUM$ = " ",REFUM$
! - If Err 0 Rem
If PFU1[8] = -1 Let DFLTUM$[1,4] = "CWT" \ Goto L_2375
If PFU1[8] = -3 Let DFLTUM$[1,4] = "LB  " \ Goto L_2375
try Read #3,PFU1[8];CCD$; else rem
DFLTUM$[1,4] = CCD$[11,14]
L_2375: 
If PFU1[9] = -1 Let DFLTUM$[5,8] = "CWT" \ Goto L_2385
If PFU1[9] = -3 Let DFLTUM$[5,8] = "LB  " \ Goto L_2385
try Read #3,PFU1[9];CCD$; else rem
DFLTUM$[5,8] = CCD$[11,14]
L_2385: 
If PFU1[10] = -1 Let DFLTUM$[9,12] = "CWT" \ Goto L_2395
If PFU1[10] = -3 Let DFLTUM$[9,12] = "LB  " \ Goto L_2395
try Read #3,PFU1[10];CCD$; else rem
DFLTUM$[9,12] = CCD$[11,14]
L_2395: 
If PFU1[11] = -1 Let DFLTUM$[13,16] = "CWT" \ Goto L_2405
If PFU1[11] = -3 Let DFLTUM$[13,16] = "LB  " \ Goto L_2405
try Read #3,PFU1[11];CCD$; else rem
DFLTUM$[13,16] = CCD$[11,14]
L_2405: 
If PFU1[12] = -1 Let DFLTUM$[17,20] = "CWT" \ Goto L_2415
If PFU1[12] = -3 Let DFLTUM$[17,20] = "LB  " \ Goto L_2415
try Read #3,PFU1[12];CCD$; else rem
DFLTUM$[17,20] = CCD$[11,14]
L_2415: 
If PFU1[13] = -1 Let DFLTUM$[21,24] = "CWT" \ Goto L_2425
If PFU1[13] = -3 Let DFLTUM$[21,24] = "LB  " \ Goto L_2425
try Read #3,PFU1[13];CCD$; else rem
DFLTUM$[21,24] = CCD$[11,14]
L_2425: 
If PFU1[16] = -1 Let REFUM$[1,4] = "CWT" \ Goto L_2435
If PFU1[16] = -3 Let REFUM$[1,4] = "LB  " \ Goto L_2435
If PFU1[16] > 0 try Read #3,PFU1[16];CCD$; else rem
REFUM$[1,4] = CCD$[11,14]
L_2435: 
If PFU1[17] = -1 Let REFUM$[5,8] = "CWT" \ Goto L_2445
If PFU1[17] = -3 Let REFUM$[5,8] = "LB  " \ Goto L_2445
If PFU1[17] > 0 try Read #3,PFU1[17];CCD$; else rem
REFUM$[5,8] = CCD$[11,14]
L_2445: 
If PFU1[18] = -1 Let REFUM$[9,12] = "CWT" \ Goto L_2455
If PFU1[19] = -3 Let REFUM$[9,12] = "LB  " \ Goto L_2455
If PFU1[18] > 0 try Read #3,PFU1[18];CCD$; else rem
REFUM$[9,12] = CCD$[11,14]
L_2455: 
If PFU1[19] = -1 Let REFUM$[13,16] = "CWT" \ Goto L_2460
If PFU1[19] = -3 Let REFUM$[13,16] = "LB  " \ Goto L_2460
If PFU1[19] > 0 try Read #3,PFU1[19];CCD$; else rem
REFUM$[13,16] = CCD$[11,14]
L_2460: 
If PFU1[20] = -1 Let REFUM$[17,20] = "CWT" \ Goto L_2465
If PFU1[20] = -3 Let REFUM$[17,20] = "LB  " \ Goto L_2465
If PFU1[20] > 0 try Read #3,PFU1[20];CCD$; else rem
REFUM$[17,20] = CCD$[11,14]
L_2465: Rem "now do conversion units
For X0 = 0 To 7
  If PFU1[X0] = -1 Let CONV_$[X0 * 4 + 1,X0 * 4 + 4] = "CWT" \ Goto L_2500
  If PFU1[X0] = -3 Let CONV_$[X0 * 4 + 1,X0 * 4 + 4] = "LB  " \ Goto L_2500
  try Read #3,PFU1[X0];CCD$; else rem
  CONV_$[X0 * 4 + 1,X0 * 4 + 4] = CCD$[11,14]
L_2500: 
Next X0
!
L_2900: 
! - If Err 0 Gosub ERR_ESCAPE
Gosub L_5800
RCTR = RCTR + 1
! - If Not(Fra(RCTR / 500)) Print @37,22;"PRINTED #";RCTR;"  ITEM: ";K1$
CNVTA = B[9];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1 \ Gosub L_20000
B[9] = AMOUNT
CNVTA = A1[1];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1 \ Gosub L_20000
A1[1] = AMOUNT
V9[1] = V9[1] + 12
!
Print #0; Tab 32;"--------------- G E N E R A L  I N F O R M A T I O N ---------------"
Print #0; Tab 1;ITEM_LAB$; Tab 17;A$[140,151]; !!item code
SCH[0] = 10 \ SCH[1] = 0 \ SCH[2] = 16 \ Z1$ = A$[152,155] \ Gosub L_5500
Print #0; Tab 49;"COMMODITY CODE"; Tab 65;A$[152,155]; Tab 72;Z1$;
If P61$[33,33] = "Y"
  Print #0; Tab 105;"ECCOS FLAG         ";
  If PFU1[14] = 0 Print #0;"N" Else Print #0;"Y"
End If 
Print #0; Tab 1;"DESCRIPTION 1"; Tab 17;A$[9,38];
SCH[0] = 11 \ SCH[1] = 0 \ SCH[2] = 25 \ Z1$ = A$[156,156] \ Gosub L_5500
Print #0; Tab 49;"MATERIAL CODE"; Tab 65;A$[156,156]; Tab 72;Z1$;
Print #0; Tab 105;"CATCH WEIGHT ITEM  ";A$[127,127]
Print #0; Tab 1;"DESCRIPTION 2"; Tab 17;A$[63,92];
SCH[0] = 12 \ SCH[1] = 0 \ SCH[2] = 24 \ R = B[11] \ Gosub L_5580
Print #0; Tab 49;"SALES CATEGORY"; Tab 65;B[11]; Tab 72;Z1$
Print #0; Tab 1;"SUBST. ITEM 1"; Tab 17;A$[39,50];
Z1$ = "MAKE" \ If A$[139,139] = "B" Let Z1$ = "BUY"
Print #0; Tab 49;"MAKE/BUY FLAG"; Tab 65;Z1$;
Print #0; Using "% EXCEPT SALE     ###"; Tab 105;U4[0]
Print #0; Tab 1;"SUBST. ITEM 2"; Tab 17;A$[51,62];
SCH[0] = 13 \ SCH[1] = 0 \ SCH[2] = 30 \ Z1$ = B[24] Using "######" \ Gosub L_5500
Print #0; Tab 49;"PRIMARY VENDOR"; Tab 65;B[24]; Tab 72;Z1$;
Print #0; Using "% EXCEPT LEAD     ###"; Tab 105;U4[1]
Print #0; Tab 1;UDA$[1,14]; Tab 17;U3;
Print #0; Tab 49;"VENDOR ITEM #"; Tab 65;A$[93,112];
Print #0; Tab 105;"REVISION LEVEL     ";A$[6,7]
Print #0; Tab 1;UDA$[15,28]; Tab 17;U3$[1,20];
Print #0; Using "###.##"; Tab 49;"AVG. LEAD TIME"; Tab 65;FNR(B[0] * MTHDAYS);" DAYS";
Print #0; Tab 105;"COST GRP  ";A$[116,126];
Print #0;""
Print #0; Tab 1;UDA$[29,42]; Tab 17;U3$[21,40];
SCH[0] = 14 \ SCH[1] = 0 \ SCH[2] = 24 \ R = A1[7] \ Gosub L_5580
Print #0; Tab 49;"TAX TYPE"; Tab 65;A1[7]; Tab 72;Z1$;
If ALTF Gosub L_8200
If ALTF If Not(DONE) Print #0; Tab 99;"ALTS:"; Tab 105;KF8$[13,36];
Print #0;""
Print #0; Tab 1;UDA$[43,56]; Tab 17;U3$[41,60];
SCH[0] = 15 \ SCH[1] = 180 \ SCH[2] = 20 \ R = B[22] \ Gosub L_5580
Print #0; Tab 49;"BREAK TABLE"; Tab 65;B[22]; Tab 72;Z1$;
L_3252: 
If ALTF If Not(DONE) Gosub L_8210
If ALTF If Not(DONE) Print #0; Tab 105;KF8$[13,36] \ V9[1] = V9[1] + 1
If ALTF If Not(DONE) Goto L_3252
Print #0;""
If K10$ = "N" Goto L_4000
Z1[0] = B[21] \ Z1[1] = B[8] \ Z1[2] = B[10] \ Z1[3] = PR_C4[4]
Z1[10] = PF_LOAD2 \ Z1[11] = PRPARC[2]
For X0 = 4 To 9 \ Z1[X0] = A[X0 + 16] \ Next X0
For X0 = 0 To 11
  CNVTA = Z1[X0] \ CNVTU[0] = 0
  If X0 < 4 Let CNVTU[1] = PFU1[11] Else Let CNVTU[1] = PFU1[12]
  If X0 = 10 Or X0 = 11 Let CNVTU[1] = PFU1[11]
  CNVTU[2] = 2
  Gosub L_20000
  Z1[X0] = AMOUNT
Next X0
B[21] = Z1[0] \ B[8] = Z1[1] \ B[10] = Z1[2] \ PR_C4[4] = Z1[3]
PF_LOAD2 = Z1[10] \ PRPARC[2] = Z1[11]
For X0 = 4 To 9 \ A[X0 + 16] = Z1[X0] \ Next X0
If V9[1] + 13 > V9[4] Gosub L_5800
V9[1] = V9[1] + 13
Print #0; Tab 29;"--------------- A D D I T I O N A L  I N F O R M A T I O N ---------------"
Print #0;""
Print #0; Using "###.##"; Tab 1;"COMMISSION % ";B[17];!
Print #0; Using "LIST PRICE 1  #####.#####/"; Tab 32;A[20]; Tab 58;DFLTUM$[17,20];!
If PR_A2$[1,1] = "" Or PR_A2$[1,1] = " " Let Z1$ = "" \ Goto L_3710!
SCH[0] = 2;SCH[1] = 8;SCH[2] = 30;Z1$ = PR_A2$[1,12] \ Gosub L_5500!
L_3710: 
Print #0; Tab 63;"SUPERSEDE #"; Tab 79;PR_A2$[1,12]; Tab 92;Z1$!
If COST_LEV[0] Print #0; Using "AVERAGE COST  #####.#####/"; Tab 1;B[21]; Tab 27;DFLTUM$[13,16];!
Print #0; Using "LIST PRICE 2  #####.#####/"; Tab 32;A[21]; Tab 58;DFLTUM$[17,20];!
Print #0; Tab 63;"PRICE UPCHARGE ";!
If UPCT Print #0;"$";!
Print #0; Using "###.##";U2;!
If Not(UPCT) Print #0;"%";!
If UPCT Print #0;"/";REFUM$[1,4]; Else Print #0;"";!
Print #0; Tab 92;"COST UPCHARGE ";!
If PRD1 Print #0;"$";!
Print #0; Using "###.##";PRD0;!
If Not(PRD1) Print #0;"%";!
If PRD1 Print #0;"/";REFUM$[1,4] Else Print #0;""!
If COST_LEV[1] Print #0; Using "LOAD COST     #####.#####/"; Tab 1;B[8]; Tab 27;DFLTUM$[13,16];!
Print #0; Using "LIST PRICE 3  #####.#####/"; Tab 32;A[22]; Tab 58;DFLTUM$[17,20];!
Print #0; Tab 63;"PRICING TYPE"; Tab 79;!
If PR_C4[2] = 1 Print #0;"MATRIX"; Else Print #0;"TEN BRACKET";!
Print #0; Tab 98;"ROLL/LB ITEM"; Tab 115;A$[114,114]!
If COST_LEV[0] Print #0; Using "LOAD 2 COST   #####.#####/"; Tab 1;PF_LOAD2; Tab 27;DFLTUM$[13,16];
Print #0; Using "LIST PRICE 4  #####.#####/"; Tab 32;A[23]; Tab 58;DFLTUM$[17,20];!
Print #0; Tab 63;"MARK UP TABLE"; Tab 79;PR_C4[3]!
If COST_LEV[2] Print #0; Using "LAST COST     #####.#####/"; Tab 1;B[10]; Tab 27;DFLTUM$[13,16];
Print #0; Using "LIST PRICE 5  #####.#####/"; Tab 32;A[24]; Tab 58;DFLTUM$[17,20];
If P9$[2,2] = "M" Print #0; Tab 63;"QUANTITY/BATCH"; Tab 79;B[16];
Print #0;""
If COST_LEV[2] Print #0; Using "NET PO COST   #####.#####/"; Tab 1;PRPARC[2]; Tab 27;DFLTUM$[13,16];
Print #0; Using "LIST PRICE 6  #####.#####/"; Tab 32;A[25]; Tab 58;DFLTUM$[17,20];!
SCH[0] = 16 \ SCH[1] = 0 \ SCH[2] = 30 \ Z1$ = A3[1] Using "#########" \ Gosub L_5500!
Print #0; Tab 63;"MSDS #"; Tab 79;A3[1]; Tab 92;Z1$!
If COST_LEV[3] Print #0; Using "BASE COST     #####.#####/"; Tab 1;PR_C4[4]; Tab 27;DFLTUM$[13,16];
Z1$ = "N" \ If A3[0] Let Z1$ = "Y"
If A3[0] = 2 Let Z1$ = "S" !
Print #0; Tab 63;"DOT HAZARDOUS"; Tab 79;Z1$; Tab 98;
If P60$[25,25] = "Y" Print #0;"SERIAL NUMBERS "; Tab 115;A$[8,8]
If P60$[46,46] = "Y" Print #0; Using "##"; Tab 1;"OCEAN FRT #"; Tab 17;PR_PO[0];
If P60$[46,46] = "Y" Print #0; Using "###"; Tab 32;"CUSTOM DUTY"; Tab 48;PR_PO[1];
Z1$ = "NO" \ If A$[113,113] = "Y" Let Z1$ = "YES"!
Print #0; Tab 63;"LOT CONTROL"; Tab 79;Z1$; Tab 98;
If A$[8,8] = "Y" Print #0;"MODEL #"; Tab 108;PSN$[1,20];
Print #0;""
Print #0; Tab 1;"LOAD TABLE 1"; Tab 16;LM[0]; Tab 32;"LOAD TABLE 2"; Tab 48;LM[1]
X2 = PR_C4[7] \ Gosub L_7700
Print #0; Tab 63;"DATE REC. EST."; Tab 79;X$; Tab 98;
If A$[8,8] = "Y" Print #0;"MFG WARRANTY # DAYS";
If A$[8,8] = "Y" Print #0; Using "####"; Tab 120;PSN[0];
Print #0;""
Print #0; Using "###"; Tab 1;"MFGR SHELF LIFE"; Tab 17;PR_C4[9];" DAYS";
Print #0; Using "###"; Tab 32;"DIST SHELF LIFE"; Tab 48;SL[0];" DAYS";
Print #0; Using "###"; Tab 63;"CUST SHELF LIFE"; Tab 79;SL[1];" DAYS";
Print #0; Tab 98;
If A$[8,8] = "Y" Print #0;"OUR WARRANTY # DAYS";
If A$[8,8] = "Y" Print #0; Using "####"; Tab 120;PSN[1];
Print #0;""
Print #0; Tab 1;"PACKNG DATE DESC"; Tab 19;PKDATE$[1,10];
Print #0; Tab 32;"PACKNG DATE FRMT"; Tab 49;PKDATE$[11,20];
Print #0;""
!
L_4000: Rem "================================================= units of measure
If K11$ = "N" Goto L_4500
If V9[1] + 11 > V9[4] Gosub L_5800
V9[1] = V9[1] + 11
SCH[0] = 3 \ SCH[1] = 0 \ SCH[2] = 10
Print #0; Tab 35;"--------------- U N I T S  O F  M E A S U R E ---------------"
Print #0;""
R = PFU1[0] \ Gosub L_5580
Print #0; Tab 3;"BASE U/M"; Tab 13;CONV_$[1,4]; Tab 18;Z1$
Print #0;""
Print #0; Tab 3;"** CONVERSION FACTORS **"; Tab 37;"** DEFAULT UNITS OF MEASURE **"; Tab 70;"** WEIGHTS AND CUBES **"; Tab 99;" ** REFERENCE UNITS **"
Print #0;""
R = PFU1[1] \ Gosub L_5580
If PFU2[0] Print #0; Using "######.###"; Tab 3;PFU2[0]; Tab 14;CONV_$[1,4];"/";CONV_$[5,8]; Tab 24;Z1$;
R = PFU1[8] \ Gosub L_5580
Print #0; Tab 38;"STOCKING"; Tab 50;DFLTUM$[1,4]; Tab 57;Z1$;
If A[5] = 1 Let Z1$ = CONV_$[1,4] \ Goto L_4100
For X0 = 0 To 6
  If PFU2[X0] = A[5] Let Z1$ = CONV_$[(X0 + 1) * 4 + 1,(X0 + 1) * 4 + 4] \ Goto L_4100
Next X0
Z1$ = A[5] Using "######"
!
L_4100:
Print #0; Using "POUNDS/QTY  ####.##/"; Tab 70;A[6]; Tab 89;Z1$;
R = PFU1[16] \ Gosub L_5580
Print #0; Tab 97;"PRICE UPCHARGE"; Tab 108;REFUM$[1,4]; Tab 114;Z1$
R = PFU1[2] \ Gosub L_5580
If PFU2[1] Print #0; Using "######.###"; Tab 3;PFU2[1]; Tab 14;CONV_$[1,4];"/";CONV_$[9,12]; Tab 24;Z1$;
R = PFU1[9] \ Gosub L_5580
Print #0; Tab 38;"SELLING"; Tab 50;DFLTUM$[5,8]; Tab 57;Z1$;
If A1[3] = 1 Let Z1$ = CONV_$[1,4] \ Goto L_4165
For X0 = 0 To 6
  If PFU2[X0] = A1[3] Let Z1$ = CONV_$[(X0 + 1) * 4 + 1,(X0 + 1) * 4 + 4] \ Goto L_4165
Next X0
Z1$ = A1[3] Using "######"
!
L_4165:
Print #0; Using "CUBIC FEET  ####.##/"; Tab 70;B[23]; Tab 89;Z1$;
R = PFU1[17] \ Gosub L_5580
Print #0; Tab 97;"BROKEN QTY"; Tab 108;REFUM$[5,8]; Tab 114;Z1$
R = PFU1[3] \ Gosub L_5580
If PFU2[2] Print #0; Using "######.###"; Tab 3;PFU2[2]; Tab 14;CONV_$[1,4];"/";CONV_$[13,16]; Tab 24;Z1$;
R = PFU1[10] \ Gosub L_5580
Print #0; Tab 38;"PURCHASING"; Tab 50;DFLTUM$[9,12]; Tab 57;Z1$;
R = PFU1[18] \ Gosub L_5580
Print #0; Tab 97;"PACKING"; Tab 108;REFUM$[9,12]; Tab 114;Z1$
R = PFU1[4] \ Gosub L_5580
If PFU2[3] Print #0; Using "######.###"; Tab 3;PFU2[3]; Tab 14;CONV_$[1,4];"/";CONV_$[17,20]; Tab 24;Z1$;
R = PFU1[11] \ Gosub L_5580
Print #0; Tab 38;"COSTING"; Tab 50;DFLTUM$[13,16]; Tab 57;Z1$;
R = PFU1[19] \ Gosub L_5580
Print #0; Tab 97;"SIZE"; Tab 108;REFUM$[13,16]; Tab 114;Z1$
R = PFU1[5] \ Gosub L_5580
If PFU2[4] Print #0; Using "######.###"; Tab 3;PFU2[4]; Tab 14;CONV_$[1,4];"/";CONV_$[21,24]; Tab 24;Z1$;
R = PFU1[12] \ Gosub L_5580
Print #0; Tab 38;"PRICING"; Tab 50;DFLTUM$[17,20]; Tab 57;Z1$;
Print #0; Tab 97;"PACK SIZE ";PR_A2$[13,27]
R = PFU1[6] \ Gosub L_5580
If PFU2[5] Print #0; Using "######.###"; Tab 3;PFU2[5]; Tab 14;CONV_$[1,4];"/";CONV_$[25,28]; Tab 24;Z1$;
If P9$[2,2] <> "M" Goto L_4280
R = PFU1[13] \ Gosub L_5580
Print #0; Tab 38;"PRODUCTION"; Tab 50;DFLTUM$[21,24]; Tab 57;Z1$;
!
L_4280: Rem " Added 08/00 Vendor Ordering UM
R = PFU1[20] \ Gosub L_5580
Print #0; Tab (97);"VENDOR ORD "; Tab 108;REFUM$[17,20]; Tab (114);Z1$
R = PFU1[7] \ Gosub L_5580
If PFU2[6] Print #0; Using "######.###"; Tab 3;PFU2[6]; Tab 14;CONV_$[1,4];"/";CONV_$[29,32]; Tab 24;Z1$;
Print #0;""
!
L_4500: Rem  "================================================= warehouse data
If K12$[1,1] = "N" Goto L_5000
PASS = 0
K0$ = " ",K0$ \ K0$[1,12] = K1$[1,12] \ K0$[13,14] = K12$[2,3]
Search #17,2,1;K0$,R2,E
If E = 1 Goto L_4540
Goto L_4560
L_4540: Search #17,3,1;K0$,R2,E
If E = 2 Goto L_5000
If K0$[1,12] <> K1$[1,12] Goto L_5000
If K0$[13,14] > K12$[4,5] Goto L_5000
L_4560: Rem "Read Whse Fiel
CH_PRWH = 17;REC_PRWH = R2
Rem {begin src/inc/read.prwh.i}
Mat Read #CH_PRWH,REC_PRWH,0;W1$
Mat Read #CH_PRWH,REC_PRWH,32;W1
Mat Read #CH_PRWH,REC_PRWH,38;W2
Mat Read #CH_PRWH,REC_PRWH,78;W3
Mat Read #CH_PRWH,REC_PRWH,228;W5
Mat Read #CH_PRWH,REC_PRWH,384;WHPARC
Read #CH_PRWH,REC_PRWH,396;WHLPOOL
Mat Read #CH_PRWH,REC_PRWH,400;WCOMM$
Read #CH_PRWH,REC_PRWH,404;FCWGT
Mat Read #CH_PRWH,REC_PRWH,420;W0
Mat Read #CH_PRWH,REC_PRWH,428;WH7
Mat Read #CH_PRWH,REC_PRWH,444;WH8
Mat Read #CH_PRWH,REC_PRWH,540;WH9
Mat Read #CH_PRWH,REC_PRWH,696;W7
Mat Read #CH_PRWH,REC_PRWH,756;WH3$
Mat Read #CH_PRWH,REC_PRWH,780;WHLV
Read #CH_PRWH,REC_PRWH,798;WHRPLN
Mat Read #CH_PRWH,REC_PRWH,800;WHMISC
Mat Read #CH_PRWH,REC_PRWH,842;WHLM
Mat Read #CH_PRWH,REC_PRWH,846;WHMISC2
Read #CH_PRWH,REC_PRWH,894;RESTRICTED
Mat Read #CH_PRWH,REC_PRWH,896;WHFUT
Mat Read #CH_PRWH,REC_PRWH,914;WHFDT
Read #CH_PRWH,REC_PRWH,922;VLIST
Mat Read #CH_PRWH,REC_PRWH,928;WHFLG$
Read #CH_PRWH,REC_PRWH,938;WHBASE
Mat Read #CH_PRWH,REC_PRWH,940;WHMKUP
Mat Read #CH_PRWH,REC_PRWH,956;WHMKUPTYP$
Mat Read #CH_PRWH,REC_PRWH,960;WHPARC2
Mat Read #CH_PRWH,REC_PRWH,968;WHREDI
Mat Read #CH_PRWH,REC_PRWH,980;WHLBS
Rem {end read.prwh.i}
Unlock #CH_PRWH
! product data in display UM - need re-read to get base
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Unlock #ch_prod
Gosub L_69000
BASEX = W3[18] \ Gosub L_8100
For X0 = 0 To 10 \ Z1[X0] = W3[X0 + 14] \ Next X0
Z1[11] = WHMISC[2]
For X0 = 0 To 11
  CNVTA = Z1[X0] \ CNVTU[0] = 0
  If X0 < 5 Let CNVTU[1] = PFU1[11] Else Let CNVTU[1] = PFU1[12]
  CNVTU[2] = 2
  If X0 = 11 Let CNVTU[1] = PFU1[11]
  Gosub L_20000
  Z1[X0] = AMOUNT
Next X0
CNVTA = W3[3];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1 \ Gosub L_20000
W3[3] = AMOUNT
CNVTA = W3[4];CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1 \ Gosub L_20000
W3[4] = AMOUNT
For X0 = 0 To 10 \ W3[X0 + 14] = Z1[X0] \ Next X0
WHMISC[2] = Z1[11]
If V9[1] + 13 - (PASS * 2) > V9[4] Gosub L_5800
V9[1] = V9[1] + 14 - (PASS * 2)
If Not(PASS) Print #0; Tab 29;"--------------- W A R E H O U S E  I N F O R M A T I O N ---------------"
If Not(PASS) Print #0;""
Print #0; Tab 1;ITEM_LAB$; Tab 13;A$[140,151];
Print #0; Tab 27;WH_LAB$; Tab 39;W1[0]
Print #0;""
SCH[0] = 13;SCH[1] = 0;SCH[2] = 13
Z1$ = W2[3] Using "######" \ Gosub L_5500
Print #0; Tab 1;"VENDOR"; Tab 16;W2[3];Z1$;
Print #0; Using "LIST PRICE 1   #####.#####/"; Tab 38;W3[19]; Tab 65;DFLTUM$[17,20];
Z1$ = FCWGT Using "###"
Print #0; Tab 71;"FRCST WGT TBL"; Tab 86;Z1$;
Z1$ = "NO" \ If W0[1] Let Z1$ = "YES"
Print #0; Tab 104;"SEASONAL ITEM"; Tab 122;Z1$
Print #0; Tab 1;"VENDOR ITEM #"; Tab 16;W1$[13,32];
Print #0; Using "LIST PRICE 2   #####.#####/"; Tab 38;W3[20]; Tab 65;DFLTUM$[17,20];
Print #0; Tab 104;"START OF SEASON"; Tab 122;MONTHS$[W0[2] * 3 + 1,W0[2] * 3 + 3]
Print #0; Using "###.##"; Tab 1;"AVG. LEAD TIME"; Tab 16;FNR(W2[0] * MTHDAYS);" DAYS";
Print #0; Using "LIST PRICE 3   #####.#####/"; Tab 38;W3[21]; Tab 65;DFLTUM$[17,20];
Print #0; Tab 104;"END OF SEASON"; Tab 122;MONTHS$[W0[3] * 3 + 1,W0[3] * 3 + 3]
If COST_LEV[0] Print #0; Using "AVERAGE COST   #####.#####/"; Tab 1;W3[15]; Tab 27;DFLTUM$[13,16];
Print #0; Using "LIST PRICE 4   #####.#####/"; Tab 38;W3[22]; Tab 65;DFLTUM$[17,20];
Print #0; Tab 71;"REVIEW PERIOD"; Tab 86;W2[1];
Print #0; Tab 104;"USAGE TREND %"; Tab 122;WH7[1]
If COST_LEV[1] Print #0; Using "LOAD COST      #####.#####/"; Tab 1;W3[17]; Tab 27;DFLTUM$[13,16];
Print #0; Using "LIST PRICE 5   #####.#####/"; Tab 38;W3[23]; Tab 65;DFLTUM$[17,20];
Print #0; Tab 71;"MONTHS FOR TREND"; Tab 86;W2[2];
Print #0; Using "MARK UP TABLE      ###"; Tab 104;WHPARC[1]
If COST_LEV[1] Print #0; Using "LOAD 2 COST    #####.#####/"; Tab 1;W3[14]; Tab 27;DFLTUM$[13,16];
Print #0; Using "LIST PRICE 6   #####.#####/"; Tab 38;W3[24]; Tab 65;DFLTUM$[17,20];
Print #0; Tab 71;"SAFETY STOCK %"; Tab 86;W2[5];
Print #0; Using "BREAK TABLE        ###"; Tab 104;WHPARC[0]
If COST_LEV[2] Print #0; Using "LAST COST      #####.#####/"; Tab 1;W3[16]; Tab 27;DFLTUM$[13,16];
Print #0; Tab 38;"EST. DEMAND"; Tab 53;W3[9];
Print #0; Using "###### "; Tab 71;"MINIMUM"; Tab 86;W3[3];DFLTUM$[1,4];
Print #0; Using "TERMS DISC %     ##.##"; Tab 104;WHMISC[3]
If COST_LEV[2] Print #0; Using "NET PO COST    #####.#####/"; Tab 1;WHMISC[2]; Tab 27;DFLTUM$[13,16];
Z1$ = "NO" \ If W0[0] Let Z1$ = "YES"
If W0[0] = 2 Let Z1$ = "ONLY IF ORDERED"
Print #0; Tab 38;"DO NOT REORDER:"; Tab 54;Z1$;
Print #0; Using "###### "; Tab 71;"MAXIMUM"; Tab 86;W3[4];DFLTUM$[1,4];
Print #0; Using "####"; Tab 104;WHMISC[4]; Tab 109;DFLTUM$[1,4];"/TIER";
Print #0; Using "##"; Tab 119;WHMISC[5];" TIERS/SKID"
If COST_LEV[3] Print #0; Using "BASE COST      #####.#####/"; Tab 1;W3[18]; Tab 27;DFLTUM$[13,16];
Print #0; Using "###.##"; Tab 38;"COMMISSION % ";W2[4];
REC = W1[2] \ Read #21,REC,0;BUYER$;
Print #0; Using "### "; Tab 71;"BUYER ";W1[2];BUYER$[1,20];
Print #0; Tab 104;"INVENTORY CLASS"; Tab 120;PR_C4[8]
If P9$[32,32] = "Y" Let Z1$ = WHLM[0] Else Let Z1$ = LM[0]
PASS = 1
Print #0; Tab 1;"LOAD TABLE 1"; Tab 16;Z1$;
Print #0; Tab 104;"CHECK BROEK QTY"; Tab 122;WHFLG$[2,2]
If P9$[32,32] = "Y" Let Z1$ = WHLM[1] Else Let Z1$ = LM[1]
Print #0; Tab 1;"LOAD TABLE 2"; Tab 16;Z1$
PASS = 1
Goto L_4540
!
L_5000: Rem  "================================================= grade data
If K13$ = "N" Goto L_6000
If V9[1] + 24 > V9[4] Gosub L_5800
V9[1] = V9[1] + 24
If PRCBK
  KEYUDA$ = " ",KEYUDA$;KEYUDA$ = K1$[1,12]
  Search #22,2,1;KEYUDA$,R[22],E 
  If E ! " none on file
    PRBK$ = " ",PRBK$;PRBK1$ = " ",PRBK1$;SPBK$=" ",SPBK$
    Clear Prbk1[]
	clear PRBK2[]
	Clear SPBK2[]
	Clear SPBK[]
	prbk3=0
  Else 
    Mat Read #22,R[22],12;PRBK1;
    Mat Read #22,R[22],36;PRBK2; ! WAS 24
	Mat Read #22,R[22],48;PRBK3;
    Mat Read #22,R[22],54;PRBK$; ! was 48
    Mat Read #22,R[22],254;PRBK1$; ! was 248
	Mat Read #22,R[22],464;SPBK;
	Mat Read #22,R[22],474;SPBK2;
	Mat Read #22,R[22],490;spbk$;
  End If 
Else ! "no file or not fine paper
  PRBK$ = " ",PRBK$;PRBK1$ = " ",PRBK1$;SPBK$=" ",SPBK$
  Clear Prbk1[]
	clear PRBK2[]
	Clear SPBK2[]
	clear spbk[]
	prbk3=0
End If 
Print #0; Tab 33;"--------------- G R A D E  I N F O R M A T I O N ---------------"
Print #0;""
Print #0; Tab 4;"STATUS..:";
Print #0; Using "##"; Tab 18;PRBK1[0];
X$ = "   " \ If PRBK1[0] = 1 Let X$ = "NEW"
If PRBK1[0] = 2 Let X$ = "CHG'D"
If PRBK1[0] = 3 Let X$ = "DEL'D"
Print #0; Tab 22;X$
Print #0; Tab 4;"GRADE...:";
Print #0; Tab 19;C1$[1,16];
Print #0; Tab 44;"LINEAL FT/ROLL";
Print #0; Using "######.##"; Tab 59;PRBK2[2]
Print #0; Tab 4;"GRAIN...:";
Print #0; Tab 19;C1$[17,32];
Print #0; Tab 44;"ROLL WEIGHT";
Print #0; Using "#####.##"; Tab 59;SPBK2[0] ! PRBK2[2]
Print #0; Tab 4;"BASIS WGHT...:";
Print #0; Using "####.##"; Tab 19;A[4];
Print #0; Tab 44;"ROLL DIAMETER";
Print #0; Tab 59;SPBK$[11,16] ! PRBK$[186,190]
Print #0; Tab 4;"SIZE WIDTH...:";
Print #0; Using "####.##"; Tab 19;PR_C4[0];
Print #0; Tab 44;"CALIPER";
Print #0; Using "##.#####"; Tab 59;PRBK3 ! PRBK2[3]
Print #0; Tab 4;"SIZE LENGTH..:";
Print #0; Using "####.##"; Tab 19;PR_C4[1];
Print #0; Tab 44;"PAGES/INCH";
Print #0; Using "#####.##"; Tab 59;SPBK2[2] ! PRBK2[4]
Print #0; Tab 4;"COLOR";
Print #0; Tab 19;PRBK$[16,65]
Print #0; Tab 4;"FINISH";
Print #0; Tab 19;PRBK$[66,115]
Print #0; Tab 4;"BRIGHTNESS";
Print #0; Tab 19;PRBK$[116,118] ! 125]
Print #0; Tab 4;"OPACITY";
Print #0; Tab 19;SPBK$[1,10] ! PRBK$[126,135]
Print #0; Tab 4;"RECYCLED CONT";
Print #0; Tab 19;SPBK$[17,26]; ! PRBK$[136,145];
X$ = "N" \ If SPBK[0] Let X$ = "Y"
Print #0; Tab 44;"ACID FREE";
Print #0; Tab 59;X$
Print #0; Tab 4;"COTTON CONT";
Print #0; Using "###";Tab 19;Prbk2[0]; ! Tab 19;PRBK$[146,155];
X$ = "N" \ If SPBK[1] Let X$ = "Y"
Print #0; Tab 44;"ARCHIVAL";
Print #0; Tab 59;X$
X$ = "N" \ If Prbk1[6] Let X$ = "Y"
Print #0; Tab 4;"LASER";
Print #0; Tab 19;X$; ! PRBK$[191,200];
X$ = "N" \ If SPBK[2] Let X$ = "Y"
Print #0; Tab 44;"PCF";
Print #0; Tab 59;X$
Print #0; Tab 4;"GRADE NUMBER";
Print #0; Tab 19;PRBK$[119,119]; ! PRBK$[156,165];
X$ = "N" \ If SPBK[3] Let X$ = "Y"
Print #0; Tab 44;"ECF";
Print #0; Tab 59;X$
X$ = "N" \ If Prbk1[5] Let X$ = "Y"
Print #0; Tab 4;"ENVELOPE";
Print #0; Tab 19;X$; ! PRBK$[166,180];
Print #0; Tab 44;"GSM";
Print #0; Using "#####.##"; Tab 59;PRBK2[1] ! PRBK2[0]
Print #0; Tab 4;"ADHESIVE TYPE";
Print #0; Tab 19;PRBK$[120,125] ! PRBK$[181,185]
Print #0; Tab 4;"BOOK ID";
Print #0; Tab 19;PRBK$[1,15]
Print #0; Tab 4;"COST GROUP";
Print #0; Tab 19;PRBK1$[1,50];PRBK1$[51,100]
Print #0; Tab 4;"ITEM GROUP";
Print #0; Tab 19;PRBK1$[101,150]
Print #0; Tab 4;"SECTION";
Print #0; Tab 19;PRBK1$[151,200]
Print #0;""
Goto L_6000
!
L_5500: Rem  "================================================= gen search
If Err 0 Goto L_5620
Search #SCH[0],2,1;Z1$,R,E
If E = 1 Goto L_5620
L_5580: Rem "read only entry point
If Err 0 Goto L_5620
Z1$ = " ",Z1$
If R = -1 Let Z1$ = "HUNDRED WT" \ Goto L_5610
If R = -3 Let Z1$ = "CATCH WGT" \ Goto L_5610
Read #SCH[0],R,SCH[1];Z1$;
Z1$[SCH[2] + 1] = ""
L_5610: 
If Err 0 Gosub ERR_TRAP
Return
!
L_5620: 
if err 0 gosub ERR_TRAP
If SCH[2] > 17 Let Z1$ = "** NOT ON FILE **" Else Let Z1$ = "not found"
Goto L_5610
!
L_5800: Rem "============================================ headings
! - If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 5
If Not(J8) Print #0;"\12\";
TIME$ = "" \ Call Time(TIME$)
if not(J8)
  Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE:";V9[0]
  Print #0;" - 681A - ";TIME$;
  Print #0; Tab 44;"I N V E N T O R Y   F I L E   L I S T I N G"
  Print #0; Tab 60;"FULL DETAIL"
  Print #0;""
End if
Return 
!
L_6000: Rem  "================================================= hazard data
If K14$ = "N" Goto L_6500
If Not(A3[0]) Goto L_6500
If V9[1] + 7 > V9[4] Gosub L_5800
V9[1] = V9[1] + 7
if not(j8)  Print #0; Tab 32;"--------------- H A Z A R D  I N F O R M A T I O N ---------------"
if not(j8)  Print #0;""
SCH[0] = 18 \ SCH[1] = 0 \ SCH[2] = 40 \ R = A3[2] \ Gosub L_5580
Print #0; Tab 1;"SHIPPING NAME"; Tab 16;Z1$;
Print #0; Tab 60;"HAZARD CLASS"; Tab 80;HZ$[41,64]
SCH[0] = 18 \ SCH[1] = 40 \ SCH[2] = 40 \ R = A3[2] \ Gosub L_5580
Print #0; Tab 16;Z1$;
Print #0; Tab 60;"I.D. NUMBER"; Tab 80;HZ$[71,80]
SCH[0] = 18 \ SCH[1] = 80 \ SCH[2] = 40 \ R = A3[2] \ Gosub L_5580
Print #0; Tab 16;Z1$;
Print #0; Tab 60;"E.R. GUIDEBOOK #"; Tab 80;HZ$[81,90]
SCH[0] = 18 \ SCH[1] = 120 \ SCH[2] = 40 \ R = A3[2] \ Gosub L_5580
Print #0; Tab 16;Z1$;
Print #0; Tab 60;"OTHER DESC"; Tab 80;HZ$[1,40]
Print #0; Tab 60;"PACK GROUP"; Tab 80;HZ$[65,70]
Print #0;""
L_6500: Rem  "================================================= notes
If K15$ = "N" Goto L_6900
If V9[1] + 3 > V9[4] Gosub L_5800
V9[1] = V9[1] + 2
Print #0; Tab 34;"--------------- N O T E S  I N F O R M A T I O N ---------------"
Print #0;""
K0$ = " ",K0$ \ K0$[1,12] = K1$[1,12]
L_6560: 
Search #19,3,1;K0$,R2,E
If E = 2 Goto L_6900
If K0$[1,12] <> K1$[1,12] Goto L_6900
Read #19,R2,12;Z1$;
If V9[1] > V9[4] Gosub L_5800
V9[1] = V9[1] + 1
Print #0; Tab 40;Z1$
Goto L_6560
!
L_6900: Rem  "==== UDA Screen
If Not(UDAFLE) Goto L_6990
If V9[1] + 3 > V9[4] Gosub L_5800
V9[1] = V9[1] + 2
Print #0; Tab 34;"--------------- U D A   I N F O R M A T I O N ---------------"
Print #0;""
KEYUDA$ = " ",KEYUDA$;KEYUDA$ = K1$[1,12]
Search #20,2,1;KEYUDA$,R[20],E 
If E ! "print none on file
  Print #0; Tab 20;"NO UDA INFORMATION FOR THIS PRODUCT"
  V9[1] = V9[1] + 1
Else 
  Mat Read #20,R[20],12;PUDA$;
  Mat Read #20,R[20],662;PUDA;
  For X = 1 To 17
    DSP = (X - 1) * 20 + 1
    LBL$ = PULBL$[DSP,DSP + 19]
    If LBL$[1,1] = "" Or LBL$[1,6] = "      " Let LBL$ = "PRODUCT UDA " + Str$(X)
    If V9[1] > V9[4] Gosub L_5800
    V9[1] = V9[1] + 1
    Print #0; Tab 1;LBL$;
    If X <= 13 ! "these are alpha
      DSP = (X - 1) * 50 + 1
      Print #0; Tab 24;PUDA$[DSP,DSP + 49]
    Else !"these are numeric
      DSP = X - 14
      Print #0; Using "--------------#.#########"; Tab 24;PUDA[DSP]
    End If 
  Next X
End If 
Print #0;""
V9[1] = V9[1] + 1
L_6990: Rem "next??
DETLEND: Rem "end of Detail
Goto L_2090
!
! - MAINSCRN: Rem "========================================== screen
! - Print 'CS ED'
! - Print @0,0;"-MX681A-";@33,0;"INVENTORY DETAIL REPORT"
! - Print @20,2;'BR';"STARTING";@45,2;"ENDING";'ER';
! - Print @0,4;" 1> ITEM CODE";@20,4;K2$[1,12];@45,4;K3$[1,12];
! - Print @0,6;" 2> COMMODITY CODE";@20,6;K4$[1,4];@45,6;K5$[1,4];
! - Print @0,8;" 3> MATERIAL CODE";@20,8;K6$[1,1];@45,8;K7$[1,1]
! - Print @0,10;" 4> DESCRIPTION";@20,10;K8$[1,15];@45,10;K9$[1,15]
! - Print @9,12;"INCLUDE: (Y/N)";
! - Print @0,13;" 5> SCREEN 2";@25,13;K10$[1,1];
! - Print @0,14;" 6> UNITS OF MEASURE";@25,14;K11$[1,1];
! - Print @0,15;" 7> ";WH_LAB$;@35,15;"THRU";@25,15;K12$[1,1];
! - Print @30,15;K12$[2,3];@40,15;K12$[4,5];
! - Print @0,16;" 8> GRADE";@25,16;K13$[1,1];
! - If P9$[20,20] <> "F" Print @25,16;"N/A"; \ K13$[1,1] = "N"
! - Print @0,17;" 9> HAZARD DATA";@25,17;K14$[1,1];
! - Print @0,18;"10> NOTES";@25,18;K15$[1,1];
! - X$ = "N" \ If ALTF Let X$ = "Y"
! - Print @0,19;"11> ALT ITEMS ON PAGE 1";@25,19;X$[1,1]
! - If UDAF
! -   X$ = "N" \ If UDAFLE Let X$ = "Y"
! -   Print @0,20;"12> UDA SCREEN FIELDS";@25,20;X$[1,1]
! - End If 
! - Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem MARK UP CALC
Gosub L_12510
If PR_C4[2] = 1 And PR_C4[3] > 0 Goto L_8030
Goto L_8099
L_8030: ! "calc lp 1-6
Mat read #23,pr_c4[3],18;pm5;
FOR FIELD=1 TO 6
	Let basex=pr_c4[4] ! "base
	if pm5[field-1,4]=1 Let basex=b[10]
	if pm5[field-1,4]=2 let basex=b[8]
	if pm5[field-1,4]=3 let basex=pf_load2
	if pm5[field-1,4]=4 let basex=b[21]
	if pm5[field-1,4]=5 let basex=prparc[2]
	GOSUB L_19000:
	! X4 RETURNED
	LET A[19+FIELD]=X4
Next FIELD
L_8099: Return 
!
L_8100: Rem MARK UP CALC FOR WAREHOUSE
Gosub L_12400
PR_C4[3] = WHPARC[1]
If PR_C4[2] = 1 And PR_C4[3] > 0 Goto L_8130
Goto L_8199
L_8130: ! "calc whse lp 1-6
Mat read #23,pr_c4[3],18;pm5;
FOR FIELD=1 TO 6 ! if p9$[32,32]="N" prod moved in to whse
	Let basex=w3[18] ! "base cost
	if pm5[field-1,4]=1 let basex=w3[16]
	if pm5[field-1,4]=2 let basex=w3[17]
	if pm5[field-1,4]=3 let basex=w3[14]
	if pm5[field-1,4]=4 let basex=w3[15]
	if pm5[field-1,4]=5 let basex=whmisc[2]
	GOSUB L_19000:
	! X4 RETURNED
	LET W3[18+FIELD]=X4
Next Field
L_8199: Return 
!
L_8200: Rem GET ALL ALT ITEMS
DONE = 0
L_8210:
Search #8,3,2;KF8$,R8,E 
If E Let DONE = 9
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
! - REPRINTSEL: Rem "Last Page Reprint Selections
! - V9[1] = 100 \ Gosub L_5800
! - Print #0;"-MX681A-"; Tab 33;"INVENTORY DETAIL REPORT SELECTIONS"
! - Print #0;""
! - Print #0; Tab 20;"STARTING"; Tab 45;"ENDING"
! - Print #0;" 1> ITEM CODE"; Tab 20;K2$[1,12]; Tab 45;K3$[1,12]
! - Print #0;" 2> COMMODITY CODE"; Tab 20;K4$[1,4]; Tab 45;K5$[1,4]
! - Print #0;" 3> MATERIAL CODE"; Tab 20;K6$[1,1]; Tab 45;K7$[1,1]
! - Print #0;" 4> DESCRIPTION"; Tab 20;K8$[1,15]; Tab 45;K9$[1,15]
! - Print #0;""
! - Print #0; Tab 9;"INCLUDE: (Y/N)"
! - Print #0;" 5> SCREEN 2"; Tab 25;K10$[1,1]
! - Print #0;" 6> UNITS OF MEASURE"; Tab 25;K11$[1,1]
! - Print #0;" 7> ";WH_LAB$; Tab 25;K12$[1,1]; Tab 30;K12$[2,3];
! - Print #0; Tab 35;"THRU"; Tab 40;K12$[4,5]
! - Print #0;" 8> GRADE"; Tab 25;K13$[1,1]
! - Print #0;" 9> HAZARD DATA"; Tab 25;K14$[1,1]
! - Print #0;"10> NOTES"; Tab 25;K15$[1,1]
! - X$ = "N" \ If ALTF Let X$ = "Y"
! - Print #0;"11> ALT ITEMS ON PAGE 1"; Tab 25;X$[1,1]
! - If UDAF
! -   X$ = "N" \ If UDAFLE Let X$ = "Y"
! -   Print #0;"12> UDA SCREEN FIELDS"; Tab 25;X$[1,1]
! - End If 
! - Return 
!
! - L_9100: Rem END OF THIS RANGE
! - If Not(J8) Gosub REPRINTSEL
! - If RCTR If Not(J8) Print #0;"\14\";
! - Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
! - If Err 0 Rem
! - For X = 2 To 23 \ If X <> 9 Close #X
! - Next X
! - If Err 0 Gosub ERR_TRAP
! - Chain "MX681"
! 
L_12400: Rem CALC LOADS FROM LOAD MARKUP
! note: if p9$[32,32]="N" pword moved in to whse
If WHLM[0]
  WH = W1[0];LTBL = WHLM[0];CNVTA = 0
  Gosub L_12610 \ W3[17] = CNVTA
End If 
If WHLM[1]
  WH = W1[0];LTBL = WHLM[1];CNVTA = 0
  Gosub L_12610 \ W3[14] = CNVTA
End If 
Return 
L_12510: 
If LM[0]
  WH = 0;LTBL = LM[0];CNVTA = 0
  Gosub L_12610 \ B[8] = CNVTA
End If 
If LM[1]
  WH = 0;LTBL = LM[1];CNVTA = 0
  Gosub L_12610 \ PF_LOAD2 = CNVTA
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1;prec[0]=REC_PROD
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,PR_C4[],FIELD,BASEX,e$,rstr$
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
if e$ error 10000 ! error from called program
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG ! - \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let PR_C4[3] = WHPARC[1] Else If X2 Let PR_C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = PR_C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
Else ! "Not whse Pricing - Use Sprod Data
  For X2 = 20 To 25
    W3[X2 - 1] = A[X2]
  Next X2
  WHLM[0] = LM[0];W3[17] = B[8];WHLM[1] = LM[1]
  W3[14] = PF_LOAD2;W3[15] = B[21];W3[16] = B[10]
  W3[18] = PR_C4[4];WHMISC[2] = PRPARC[2];WHPARC[0] = B[22]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
! - If j8 ! dx xml
! -   Call addtostr(e$,rstr$,esdel$) !end section
! -   Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
! - End If
!

End 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
! 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
