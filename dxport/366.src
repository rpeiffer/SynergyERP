! >>> Program 366
!
! description  Purchasing Order Auto-Generate Print
!
! loadsave -w -n 100,10 -o prog/dxport/366.dl4 src/366.src
!
! ERP Scheduler enabled
!
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 25, 2005  09:24:11
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/po/po366.src (univ2) [txc] {42479}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem PO366  P.O. AUTO-GENERATE LISTING
Rem AUTHOR: G.DOSCHER   AUG  9, 1988
Rem LAST UPDATE:  6/7/96 - jlp added whse selected to header
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
External Lib "libcpi.lib"
Declare External Sub cpionhold
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,programdump
!!Option Default Dialect IRIS1

Declare External Function GetParameter$
Declare External Sub ERPCronSuccess

External Lib "ubsfunc.dl4"
Declare External Function BuildSort

Com 1%,PFU1[20],CNVTU[2],UN[2],WH
Com 2%,C4[8],CUST$[142],R1[5],R1$[20],R2$[20]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[15],BASE,FIELD,PRODREC,AMOUNT
try ! main try
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim P1$[156],A$[20],CALCSRC$[36],EXCTYPE$[20],K2$[60],RETVAL$[512],K7$[50]
Dim 1%,A2[2],OLL3[3],UN[2],EUN[2],DL1[6],M2[2],OLL3[3],PW_W1[3],J9[2],PW_W0[3]
Dim 1%,SUMMRPT,exclreord
Dim 2%,B1[24],DL2[4],PC_DATE,HA3[2],OLL2[1],L4[3],OLL6[5],DAYSSUPPLY
Dim 3%,T2[17],P1[33],P2[7],A1[5],W3[24],UNF[6],WEIGHT,DL3[3],PF_A1[7],M1[17],OLL5[3]
Dim 2%,A4[1],DT3[1],JPCDATE,JDATE[1],H0[12],3%,J1,A3[1],L7[12]
Dim J$[40],J0$[10],J1$[40],J2$[20],J4$[40],J5$[70],J7$[70],J8$[8],J9$[40]
Dim P9$[50],M2$[72],M1$[200],K11$[50],K16$[60],K6$[50],K12$[50],V5$[30]
Dim 1%,F,X1,2%,X2,3%,J,X3,OLL6$[60],OLS3$[33],OLL2$[12],PUNIT$[4]
Dim 1%,POWOF[4],3%,POWOFA[4],CNV_POWOFA[4]
Dim J3$[30],K1$[50],V$[116],X$[10],DL$[22],K9$[50],P61$[256]
Dim 1%,cpiflag,2%,CustNo,CustName$[30],Prod$[12]
dim 3%,a5[99]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[200],webstr$[200],message$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[20]	  \ Blank$=" ",Blank$
dim EndParam$[20] \ EndParam$="z",EndParam$
!
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
! call dxopen() ! for dxtest/standalone
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
if erpCron
	! stub routine does not build sort file before
	! running and this program assumes it is there
	! and open
	if BuildSort(e$,25,0,9) <> 9 error 42
end if 
For J = 2 To 12
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 >= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-2752","1792","2400","1744","2128","1888","1728","-1","864","1120","1840"
!
Read #1,3,172;PC_DATE;
Read #1,0,100;J8$;
X2 = PC_DATE \ Gosub L_7820 \ X2 = Tim(6)
JPCDATE = X2
Read #1,3;J3$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
awhxfer=0 ! don;t know if 365 ran with warehouse surplus or not until prints
j8 = 0
try
	HJ9 = Chf(0)
else
	Let J8 = Spc(8)
end try
If J8 If J8 <> 49 error J8
HJ9 = 54 \ If J8 Let HJ9 = 18
!

!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"366",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!Call dxsave(0,"tmp/366in.txt!") ! save web data sent
X2 = Chf(302)
If X2 < 64
  !Print @0,22;'RB CE';"OLD GENERATOR FILE EXISTS, CANNOT RUN!"
  message$ = "Old generator file exists, cannot run!"! \ error 10000
  !Signal 3,30
  Goto OUTERR
End If 
!
R1[0] = GetParameter$("SVCODE")
tmp$ = GetParameter$("EVCODE") \ If rtrim$(tmp$)= "" Let R1[1] = 999999 Else Let R1[1] = tmp$
R1[2] = GetParameter$("SBUYER")
tmp$ = GetParameter$("EBUYER") \ If rtrim$(tmp$) = "" Let R1[3] = 999 Else Let R1[3] = tmp$
R1$ = rtrim$(ucase$(GetParameter$("SPCODE"))),Blank$
R2$ = rtrim$(ucase$(GetParameter$("EPCODE"))),EndParam$
R1[4] = GetParameter$("WHSE")
R1[5] = GetParameter$("MDAY")
tmp$ = GetParameter$("SUM")
SUMMRPT = 0
if erpCron
	if tmp$ = "Y" SUMMRPT = 1
else
	if rtrim$(tmp$)<>"" SUMMRPT=1
end if
tmp$ = GetParameter$("EXCLREORD")
exclreord=0
if erpCron
	if tmp$ = "Y" exclreord = 1
else
	if rtrim$(tmp$)<>"" exclreord=1
end if
if exclreord<>0 and Summrpt=0
	let message$="Excluding Reorder Quantities is only available on summary option"
	let returnstatus=0
	goto outErr
endif
! call dxget("WHXFR",tmp$) \ if tmp$="" let whxfer=0 else let whxfer=1
whxfer=1 ! always - if run in 365 - run it here
! if not run in 365 - nothing extra prints
if whxfer and j8 ! and not(summrpt)
	message$="Can not run whse xfer option to xml"
	returnstatus=0
	goto outErr
Endif
!
!Validation Vendor Code
If R1[0] < 0 Or R1[0] > 999999 
	let message$ = "Invalid starting vendor code, must be between 0 and 999999!" !\ error 10000
	goto outerr
Endif
If R1[1] < R1[0] Or R1[1] > 999999 
	let message$ = "Invalid ending vendor code, must be between starting vendor code and 999999!" !  \ error 10000
	goto outerr
Endif
!
!Validation Buyer
If R1[2] < 0 Or R1[2] > 999 
	let message$ = "Invalid starting buyer, must be between 0 and 999!" !\ error 10000
	goto outerr
Endif
If R1[3] < R1[2] Or R1[3] > 999 
	let message$ = "Invalid ending buyer, must be between starting buyer and 999!" !\ error 10000
	goto outerr
Endif
!
!Validation Product Code
If R2$ < R1$ 
	let message$="Invalid ending product code, must be >= than starting product code!" !\ error 10000
	goto outerr
Endif
r1$[13]=""
r2$[13]=""
!
!Validation warehouse
If R1[4] < 0 Or R1[4] > 99 
	Let message$ = "Invalid warehouse, must be between 0 and 99!" !\ error 10000
	goto outerr
Endif
!
!Validation MIN Days Supply
If R1[5] < 0 Or R1[5] > 999 
	Let message$ = "Invalid min days supply, must be between 0 and 999!" !\ error 10000
	goto outerr
Endif
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
PG = 0
!Call "POVWMIN.dl4",V9,R1[4],M1[],J$,X,e$,rstr$,intCO !!out of place just for tests
CALCSRC$ = "EOQI/CSEAS/UARBM/M"
EXCTYPE$ = "Y TWS RCSLLBX CQRDRU"
!
!R1[0] = 0;R1[1] = 999999;R1[2] = 0;R1[3] = 999
!R1$ = " ",R1$;R2$ = "z",R2$;R1[4] = 1;R1[5] = 99;SUMMRPT = 0
!
!Call "ProgDflt","366","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!  RETVAL$ = " ",RETVAL$
!  RETVAL$[1,6] = R1[0] Using "######"
!  RETVAL$[7,12] = R1[1] Using "######"
!  RETVAL$[13,15] = R1[2] Using "###"
!  RETVAL$[16,18] = R1[3] Using "###"
!  RETVAL$[19,30] = R1$[1,12];RETVAL$[31,42] = R2$[1,12]
!  RETVAL$[43,44] = R1[4] Using "##"
!  RETVAL$[45,47] = R1[5] Using "###"
!  RETVAL$[48,48] = Str$(SUMMRPT)
!End If 
!R1[0] = RETVAL$[1,6];R1[1] = RETVAL$[7,12]
!R1[2] = RETVAL$[13,15];R1[3] = RETVAL$[16,18]
!R1$[1,12] = RETVAL$[19,30];R2$ = RETVAL$[31,42]
!R1[4] = RETVAL$[43,44];R1[5] = RETVAL$[45,47]
!SUMMRPT = RETVAL$[48,48]
!
!Gosub L_1100
!Goto L_1000
!STARTHERE: Rem "and we're off on reselect ALL
!Gosub L_1100
!For W0 = 1 To 5 \ Gosub L_1080 \ Next W0
!L_1000: Print @0,22;'CE';
!L_1010: Print @0,23;"ENTER  #:field to edit  R: reselect all  P: print  S: save defaults  E: exit  ";'CL';
!Input Len 16384 + 1;""J$ \ Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "R" Goto STARTHERE
!If J$ = "S"
!ASK_SAVE: Print @0,22;'CE';"Save for  A: all or  U: user access only, <CR>: do not save  ";
!  Input Len 16384 + 1;""J1$ \ Call String(1,J1$)
!  If J1$ = "" Print @0,22;'CL'; \ Goto L_1000
!  If J1$ <> "A" And J1$ <> "U" Goto ASK_SAVE
!  If J1$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "Progdfltw","366","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL';
!  Goto L_1000
!End If 
!If J$ = "P" Goto L_1900
!W0 = J$ \ If W0 Gosub L_1080 \ Goto L_1010
!Print 'RB'; \ Goto L_1010
!L_1080: Rem edit fields
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On W0 Gosub L_3000,L_3080,L_3160,L_3240,L_3300,VSRPT
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!
!L_1100: Print 'CE';
!Print 'CS BD';@0,0;"-PO366-";
!Print @24,0;"PURCHASE ORDER AUTO-GENERATE PRINT";
!Print 'BR';@20,4;"STARTING";@34,4;"ENDING";'ER';
!Print @1,5;"1> VENDOR CODE";@1,7;"2> BUYER ";@1,9;"3> PRODUCT CODE";
!Print @1,11;"4> WAREHOUSE NUMBER";@1,13;"5> MIN DAYS SUPPLY";
!Print @1,14;"6> Summary by Vendor Only?";'ED';
!Print Using "######";@20,5;R1[0];@34,5;R1[1];
!Print Using "###";@20,7;R1[2];@34,7;R1[3];@34,13;R1[5];
!Print @20,9;R1$[1,12];@34,9;R2$[1,12];
!Print Using "##";@34,11;R1[4];
!X$ = "N" \ If SUMMRPT Let X$ = "Y"
!Print @34,14;X$[1,1];
!Return 
!
L_1900:
If J8
  If Not(SUMMRPT) 
    tmp$ = "WAREHOUSE",fdel$
	tmp$ = tmp$,"VENDOR CODE",fdel$
    tmp$ = tmp$,"VENDOR NAME",fdel$
    tmp$ = tmp$,"MINIMUMS TYPE",fdel$
	tmp$ = tmp$,"MINIMUMS VALUE",fdel$
    tmp$ = tmp$,"PRODUCT CODE",fdel$
    tmp$ = tmp$,"DESCRIPTION",fdel$
    tmp$ = tmp$,"U/M",fdel$
    tmp$ = tmp$,"VENDOR P/N",fdel$
    tmp$ = tmp$,"SIZE",fdel$
	tmp$ = tmp$,"AVAILABLE",fdel$
    tmp$ = tmp$,"DAYS AVL",fdel$
    tmp$ = tmp$,"ON P.O.",fdel$
    tmp$ = tmp$,"BUYER",fdel$
    tmp$ = tmp$,"LINE PT",fdel$
    tmp$ = tmp$,"ORDER PT",fdel$
    tmp$ = tmp$,"PO COST",fdel$
    tmp$ = tmp$,"NET COST",fdel$
	tmp$ = tmp$,"REORD QTY",fdel$
	tmp$ = tmp$,"+ FREE",fdel$
	tmp$ = tmp$,"WEIGHT",fdel$
	tmp$ = tmp$,"CUBE",fdel$
	tmp$ = tmp$,"COST",fdel$
	tmp$ = tmp$,"CAL",fdel$
	tmp$ = tmp$,"EXEC TYPE",fdel$
	if p61$[111,111]="Y" let tmp$=tmp$,"CPI HOLD",fdel$
  Else
    tmp$ = "WAREHOUSE",fdel$
	tmp$ = tmp$,"VENDOR",fdel$
    tmp$ = tmp$,"NAME",fdel$
    tmp$ = tmp$,"ADDRESS",fdel$
	tmp$ = tmp$,"CITY",fdel$
	tmp$ = tmp$,"STATE",fdel$
	tmp$ = tmp$,"ZIP CODE",fdel$
    tmp$ = tmp$,"PHONE",fdel$
    tmp$ = tmp$,"REORD QTY + FREE MINIMUMS",fdel$
    tmp$ = tmp$,"REORD QTY + FREE REORDER",fdel$
    tmp$ = tmp$,"REORD QTY + FREE MINIMUMS SHORT BY",fdel$
    tmp$ = tmp$,"REORD QTY + FREE MINIMUMS SHORT BY %",fdel$
	tmp$ = tmp$,"WEIGHT MINIMUMS",fdel$
    tmp$ = tmp$,"WEIGHT REORDER",fdel$
    tmp$ = tmp$,"WEIGHT MINIMUMS SHORT BY",fdel$
    tmp$ = tmp$,"WEIGHT MINIMUMS SHORT BY %",fdel$
    tmp$ = tmp$,"CUBE MINIMUMS",fdel$
    tmp$ = tmp$,"CUBE REORDER",fdel$
    tmp$ = tmp$,"CUBE MINIMUMS SHORT BY",fdel$
    tmp$ = tmp$,"CUBE MINIMUMS SHORT BY %",fdel$
	tmp$ = tmp$,"COST MINIMUMS",fdel$
    tmp$ = tmp$,"COST REORDER",fdel$
    tmp$ = tmp$,"COST MINIMUMS SHORT BY",fdel$
    tmp$ = tmp$,"COST MINIMUMS SHORT BY %",fdel$
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If PG ! "run previously
!  Print #0;"\14\";
  PG = 0
!End If 
J1 = 99 \ V9 = -1;NUMREC = 0
!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K1$ = R1[4] Using "##" \ K1$[3] = R1[0] Using "######"
Search #2,2,1;K1$,R2,E
If Not(E) Goto L_2030
!
L_2000: 
Search #2,3,1;K1$,R2,E
If E<>0
	IF SUMMRPT<>0 AND EXCLREORD<>0 AND TOT_QTY=0 GOTO OUTEND:
	Gosub L_6200 \ Goto outend !!L_9100
ENDIF
BAD_NS = 0
L_2030: Rem "Matched 1st one
If K1$[13,13] = "@" Goto L_2000
DAYSSUPPLY = 0;MODE = K1$[13,13]
If MODE = 5 ! "gots the days supply Cause over line point/min
  DAYSSUPPLY = K1$[14,16]
  If R1[5] And R1[5] < DAYSSUPPLY Goto L_2000
End If 
X1 = K1$[1,2] 
If X1 <> R1[4] 
	IF SUMMRPT<>0 AND EXCLREORD<>0 AND TOT_QTY=0 GOTO OUTEND:
	Gosub L_6200 \ Goto outend !!L_9100
endif
X2 = K1$[9,12] \ If X2 < R1[2] Or X2 > R1[3] Goto L_2000
X2 = K1$[3,8] \ If X2 >= R1[0] and X2 <= R1[1] Goto L_2060
Goto L_2000
!
L_2060: 
Mat Read #2,R2,0;A$;
Mat Read #2,R2,20;A1;
Mat Read #2,R2,56;A2;
Mat Read #2,R2,92;A4;
Mat Read #2,R2,100;POWOF;
Mat Read #2,R2,110;POWOFA;
mat read #2,r2,140;A5;
WH_TR = 0;cpiflag=0
! if whxfer
	FOR CT=1 TO 99 \ LET WH_TR=WH_TR+A5[CT] \ NEXT CT ! wants whs xfer data too
! Endif
If Not(A2[2])
  Mat Read #3,A1[0],0;P1$;
  Mat Read #3,A1[0],156;B1;
  Mat Read #3,A1[0],256;A;
  Mat Read #3,A1[0],460;PF_A1;
  Mat Read #3,A1[0],460;P2;
  Mat Read #3,A1[0],512;PFU1;
  Mat Read #3,A1[0],554;PFU2;
  if p61$[111,111]="Y" ! check if on hold
    prod$=p1$[140,151]
	call cpionhold(e$,intco,cpiflag,Prod$,CustNo,CustName$)
  endif
  Gosub L_6000
End If 
If A2[2] ! a non-stock item, read rolnew
  For X = 0 To 24
    W3[X] = 0
    If X <= 3 Let PW_W1[X] = 0 \ PW_W0[X] = 0
  Next X
  Mat Read #7,A1[0],0;OLL2;
  Mat Read #7,A1[0],8;OLL3;
  Mat Read #7,A1[0],32;OLL5;
  Mat Read #7,A1[0],56;OLL6;
  Mat Read #7,A1[0],168;L7;
  Mat Read #7,A1[0],140;OLL2$;
  Mat Read #7,A1[0],80;OLL6$;
  Mat Read #7,A1[0],370;OLS3$;
  Mat Read #7,A1[0],250;UN;
  Mat Read #7,A1[0],446;EUN;
  Mat Read #7,A1[0],452;UNF;
  cpiflag=0 ! can't hold nonstk?
  If OLL2[0] = 12 Goto L_2000
  K7$ = " ",K7$
  K7$ = OLL2[1] Using "######"
  K7$[7] = OLL3[2] Using "###"
  Search #7,2,1;K7$,REC7,E
  If E Or REC7 <> A1[0] Or OLL2$[1,12] <> K1$[17,28]
    P1$ = " ",P1$
    P1$[140,151] = K1$[17,28]
    P1$[1,57] = "*** Sales order line for non-stock item no longer exists."
    BAD_NS = 1
	! if summrpt<>0 and exclreord<>0 and A1[3]=0 goto L_2000: ! bypass 0 reorder qty
    Gosub L_5800 \ Gosub L_5000
    Goto L_2000
  Else 
    BAD_NS = 0
  End If 
  K6$ = " ",K6$ \ K6$[1,6] = OLL2[1] Using "######" \ K6$[7,9] = OLL3[2] Using "###"
  Search #6,2,1;K6$,R6,E 
  If E Let HA3[1] = 0 \ Goto L_2260
  Mat Read #6,R6,120;HA3;
L_2260: 
  B1[11] = OLL3[3];PW_W1[2] = HA3[1]
  B1[10] = OLL5[1]
  If L7[7] Let B1[10] = L7[7]
  B1[23] = OLL6[2]
  PF_A1[3] = UNF[4]
  Gosub L_30000
  A[6] = OLL6[4]
  A[5] = UNF[5]
  If A[5] = 0 Let A[5] = 1
  P1$[140,151] = OLL2$[1,12]
  P1$[93,112] = OLS3$[1,20]
  P1$[9,38] = OLL6$[1,30]
  If OLL6$[31,31] = " " Goto L_2340
  LENTH = Len(OLL6$[31,60])
  if lenth ! could be 0? on mayfield yes
  P1$[63,(63 + LENTH) - 1] = OLL6$[31,(31 + LENTH) - 1]
  endif
L_2340: 
  For X = 0 To 6 \ W3[X] = 0 \ Next X
End If 
If A2[2] And NOWHSE Goto L_2000
L_2390: 
If P1$[140,151] >= R1$[1,12] And P1$[140,151] <= R2$[1,12] Goto L_2410
Goto L_2000
L_2410: 
X2 = K1$[3,8] \ If X2 = V9 Goto L_2460
If V9 <> -1
	IF NOT(SUMMRPT)
		Gosub L_6200 \ Let J1 = 99
	ELSE ! summary option
		IF EXCLREORD<>0 ! excluding zero re-order quantity
			IF TOT_QTY<>0 GOSUB l_6200:
		ELSE ! no exclusion of reorder quantity
			GOSUB l_6200:
		ENDIF
	ENDIF
ENDIF
V9 = X2 \ J$ = V9 Using "######"
Gosub L_6800
Search #4,2,1;J$,R4,E 
If Not(E)
  Mat Read #4,R4;V$;
  Mat Read #4,R4,576;V5$;
Else 
  V$ = "** NOT ON FILE **"
  V5$ = " ",V5$
End If 
L_2460: 
Gosub L_5800
If A[5] Let WEIGHT = (FNR(A[6] * ((A1[3] + FREE_QTY) / A[5])))
If PF_A1[3] Let CUBE = (FNR(B1[23] * ((A1[3] + FREE_QTY) / PF_A1[3]))) Else Let CUBE = 0
Gosub L_8000
EXT_COST = NET_COST * A1[3]
If Not(SUMMRPT) Gosub L_5000
TOT_QTY = TOT_QTY + A1[3] + FREE_QTY
TOT_WEIGHT = TOT_WEIGHT + WEIGHT
TOT_CUBE = TOT_CUBE + CUBE
TOT_COST = TOT_COST + EXT_COST
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 500)) Print @25,22;'CL';"PRINTED ";NUMREC;"  ";K1$;
Goto L_2000
!
!L_3000: J0$ = "3000 620 5"
!J1 = R1[0] \ J5$ = "Enter STARTING vendor code"
!Gosub ISINPUT \ R1[0] = J1
!J0$ = "3000 634 5"
!J1 = R1[1] \ J5$ = "Enter ENDING vendor code"
!Gosub ISINPUT \ R1[1] = J1
!If R1[1] < R1[0]
!  J7$ = "ENDING VENDOR MUST BE GREATER THAN STARTING!"
!  Gosub ISERRMSG
!  Goto L_3000
!End If 
!RETVAL$[1,6] = R1[0] Using "######"
!RETVAL$[7,12] = R1[1] Using "######"
!Return 
!L_3080: J0$ = "3000 320 7"
!J1 = R1[2] \ J5$ = "Enter STARTING buyer"
!Gosub ISINPUT \ R1[2] = J1
!J0$ = "3000 334 7"
!J1 = R1[3] \ J5$ = "Enter ENDING buyer"
!Gosub ISINPUT \ R1[3] = J1
!If R1[3] < R1[2]
!  J7$ = "ENDING MUST BE GREATER THAN STARTING!"
!  Gosub ISERRMSG
!  Goto L_3080
!End If 
!RETVAL$[13,15] = R1[2] Using "###"
!RETVAL$[16,18] = R1[3] Using "###"
!Return 
!L_3160: J0$ = "2 001220 9"
!J1$ = R1$ \ J5$ = "Enter STARTING product code"
!Gosub ISINPUT \ R1$ = J$
!J0$ = "2 001234 9"
!J1$ = R2$ \ J5$ = "Enter ENDING product code"
!Gosub ISINPUT \ R2$ = J$
!If R2$ < R1$
!  J7$ = "ENDING MUST BE GREATER THAN STARTING!"
!  Gosub ISERRMSG
!  Goto L_3160
!End If 
!RETVAL$[19,30] = R1$[1,12];RETVAL$[31,42] = R2$[1,12]
!Return 
!L_3240: J0$ = "3000 23411"
!J1 = R1[4] \ J5$ = "Enter warehouse number to use"
!Gosub ISINPUT \ R1[4] = J1
!If R1[4] >= 1 If R1[4] <= 99
!  RETVAL$[43,44] = R1[4] Using "##"
!  Return 
!End If 
!J7$ = "INVALID WAREHOUSE NUMBER" \ Gosub ISERRMSG \ Goto L_3240
!L_3300: Rem Vendor Min Days
!J5$ = "Enter the Minimum Days Supply to Print  0: all"
!J1 = R1[5];J0$ = "3000 33413"
!Gosub ISINPUT
!R1[5] = J1
!RETVAL$[45,47] = R1[5] Using "###"
!Return 
!VSRPT: Rem "Vendor Summary Report
!J5$ = "Enter  Y: for Vendor Summary,  N: for Product Detail"
!J1 = SUMMRPT;J0$ = "6000013414"
!Gosub ISINPUT
!SUMMRPT = J1
!RETVAL$[48,48] = Str$(SUMMRPT)
!Return 
!
Print #0;"\15\** TOTALS **";
Gosub L_5800
Print #0;"\14\"
Return 
!
L_5000: Rem PRINT LINE
If J8
  tmp$ = R1[4] Using "##",fdel$  !warehouse
  tmp$ = tmp$,V9,fdel$  !vendor code
  tmp$ = tmp$,trim$(V$[1,30]),fdel$  !vendor name
  Gosub L_6100  !minimums type / minimums value
  tmp$ = tmp$,trim$(P1$[140,151]),fdel$  !product code
  If BAD_NS
    tmp$ = tmp$,trim$(P1$[1,70]),fdel$,"",fdel$
	tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$
	tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	Return
  Else
    tmp$ = tmp$,trim$(P1$[9,35]),fdel$  !description
	tmp$ = tmp$,trim$(PUNIT$),fdel$  !u/m
  End If
  tmp$ = tmp$,trim$(P1$[93,112]),fdel$  !vendor p/n
  tmp$ = tmp$,trim$(P1$[63,92]),fdel$  !size
  tmp$ = tmp$,(W3[0] - W3[2] - A1[4]) Using "-------#.##",fdel$  !available
  If MODE = 5
    tmp$ = tmp$,DAYSSUPPLY Using "###",fdel$  !dats avl
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,(W3[1] + A1[5]) Using "########.##",fdel$  !on p.o.
  tmp$ = tmp$,A4[0] Using "####",fdel$  !buyer
  tmp$ = tmp$,A1[1] Using "######.##",fdel$  !line pt
  If A1[2] <> A1[1]
    tmp$ = tmp$,A1[2] Using "######.##",fdel$  !order pt
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,PO_COST Using "######.##",fdel$  !po cost
  If NET_COST <> PO_COST
    tmp$ = tmp$,NET_COST Using "######.##",fdel$  !net cost
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,A1[3] Using "######.##",fdel$  !reord qty
  If FREE_QTY
	tmp$ = tmp$,FREE_QTY Using "######.##",fdel$  !+ free
  Else
    tmp$ = tmp$,"",fdel$
  End If
  If A[5]
    tmp$ = tmp$,WEIGHT Using "######.##",fdel$  !weight
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,CUBE Using "#####.##",fdel$  !cube
  tmp$ = tmp$,EXT_COST Using "######.##",fdel$  !cost
  If PW_W0[0] <> 2 
     If A2[2] = 0 If A2[0]
	   tmp$ = tmp$,CALCSRC$[(A2[0] * 3 - 2),(A2[0] * 3)],fdel$  !cal
	 Else
	   tmp$ = tmp$,"",fdel$
	 End If
  Else
    If A2[2] = 0  
	  tmp$ = tmp$,"OCC",fdel$
	Else
	  tmp$ = tmp$,"",fdel$
	End If
  End If
  If A2[1]
    tmp$ = tmp$,EXCTYPE$[(A2[1] * 2 - 1),(A2[1] * 2)],fdel$
  Else
    tmp$ = tmp$,"",fdel$
  End If
  if p61$[111,111]="Y" ! cpi hold
	if cpiflag
		let tmp$=tmp$,Str$(custno)," ",RTrim$(custname$),fdel$
	else
		let tmp$=tmp$,"",fdel$
	endif
  Endif
  call addtostr(e$,rstr$,tmp$+rdel$)
  endbrowline: ! end of the line
Else
	
  Print #0;P1$[140,151];
  If BAD_NS
    Print #0; Tab 13;P1$[1,70];
    Goto END_PRINT_BAD_NS
  Else 
    Print #0; Tab 13;P1$[9,35]; Tab 41;PUNIT$;
  End If 
  Print #0; Using "-------#.##"; Tab 46;(W3[0] - W3[2] - A1[4]);
  Print #0; Using "########.##"; Tab 58;(W3[1] + A1[5]);
  Print #0; Using "######.##"; Tab 70;A1[1];
  Print #0; Using "######.##"; Tab 80;PO_COST;
  Print #0; Using "######.##"; Tab 90;A1[3];
  If A[5] Print #0; Using "######.##"; Tab 100;WEIGHT;
  Print #0; Using "#####.##"; Tab 110;CUBE;
  Print #0; Using "######.##"; Tab 119;EXT_COST;
  If PW_W0[0] <> 2 If A2[2] = 0 If A2[0] Print #0; Tab 129;CALCSRC$[(A2[0] * 3 - 2),(A2[0] * 3)];
  If PW_W0[0] = 2 If A2[2] = 0 Print #0; Tab 129;"OCC";
  If A2[2] Print #0; Tab 129;"N/S";
  Print #0;"" \ J1 = J1 + 1
  Print #0;P1$[93,112]; Tab 21;P1$[63,92];
  If MODE = 2 Print #0; Tab 53;"N/S";
  If MODE = 5 Print #0; Using "###"; Tab 53;DAYSSUPPLY;
  Print #0; Using "####"; Tab 62;A4[0];
  If A1[2] <> A1[1] Print #0; Using "######.##"; Tab 70;A1[2];
  If NET_COST <> PO_COST Print #0; Using "######.##"; Tab 80;NET_COST;
  If FREE_QTY Print #0; Using "######.##"; Tab 90;FREE_QTY;
  If A2[1] Print #0; Tab 130;EXCTYPE$[(A2[1] * 2 - 1),(A2[1] * 2)];
  FREE_QTY = 0
  END_PRINT_BAD_NS: Print #0;"" \ J1 = J1 + 1
  if p61$[111,111]="Y" and cpiflag
	Print #0; Tab 13;"CPI HOLD - Customer";custno;Custname$
	let j1=j1+1
  Endif
  If PW_W0[0] = 2 Gosub DNR_DETL
  TOTOF = 0
  OFWCT = 0
  For OFW = 0 To 4
    If POWOF[OFW]
      Print #0; Tab 13;"Stock available in whse";
      Print #0; Using " ##";POWOF[OFW];
      Print #0; Using "###### ";CNV_POWOFA[OFW];PUNIT$
      TOTOF = TOTOF + CNV_POWOFA[OFW]
      OFWCT = OFWCT + 1
      J1 = J1 + 1
    End If 
  Next OFW
  If OFWCT > 1
    Print #0; Tab 13;" TOTAL AVAILABLE IN OVERFLOWS ";
    Print #0; Using "###### ";TOTOF;PUNIT$
    J1 = J1 + 1
  End If 
  Print #0;" " \ J1 = J1 + 1
  if whxfer
	GOSUB L_5500:							! "custom from spicer
	if F9 PRINT #0;"" \ LET J1=J1+1 ! printed one
  Endif
End If
Return 
!
L_5500: REM PRINT REC TRANSFER AMOUNTS BASED ON SURPLUSE QTY
LET F9=0
IF NOT(WH_TR) RETURN ! no whses to transfer
LET TOT_RQTY=A1[3]
FOR CT=1 TO 99
	IF A5[CT]=0 GOTO L_5640:
	LET CNVTU[0]=0
	LET CNVTU[1]=PFU1[10]
	LET CNVTU[2]=1
	LET CNVTA=A5[CT] \ GOSUB L_8900:
	LET DSP_A5=AMOUNT
	LET TOT_RQTY=TOT_RQTY+DSP_A5
	IF NOT(F9) PRINT #0;"[RECOMMENDED TRANSFER FROM "; \ LET F9=99
	PRINT #0; USING "WAREHOUSE  ### "; TAB 28;CT;
	PRINT #0; USING "-------#.##"; TAB 46;DSP_A5
	LET J1=J1+1
	LET K9$=" ",K9$;K9$[1,2]=CT USING "##";K9$[3,14]=P1$[140,151]
	LET K9$[15,25]=DSP_A5 USING "-------#.##"
	SEARCH #9,4,1;K9$,R2,E
	IF E error 11000
	awhxfer=9 ! did one
L_5640: NEXT CT
	PRINT #0; TAB 24;"TOTAL REORDER QTY =  ";
	PRINT #0; USING "-------#.##"; TAB 46;TOT_RQTY
	LET J1=J1+1
RETURN

DNR_DETL: Rem "Do Not Reorder Detail
If A2[2] Return 
TIME1 = 0
K16$ = " ",K16$;K16$[1,6] = A1[0] Using "######"
ORDLINE_LOOP: Rem "lines for prod
Search #7,3,2;K16$,R7,E 
If E = 2 Return 
X2 = K16$[1,6] \ If X2 <> A1[0] Return 
Mat Read #7,R7,0;OLL2;
If OLL2[0] = 12 Goto ORDLINE_LOOP
Mat Read #7,R7,16;L4;
If L4[3] <> R1[4] Goto ORDLINE_LOOP
Mat Read #7,R7,168;L7;
K12$ = " ",K12$
For X = 1 To 99
  If X = 8 Let X = 90
  K12$[1,2] = X Using "##"
  K12$[3] = OLL2[1] Using "######"
  Search #12,2,1;K12$,R12,E 
  If E = 0 Goto GOTHEADR
Next X
Goto ORDLINE_LOOP
!
GOTHEADR: Rem "Order Header
If J8 Return
!
Mat Read #12,R12,0;H0;
Gosub CNVRT_OL
If Not(TIME1)
  If J1 + 2 > HJ9 Let HJ9 = 90 \ Gosub L_5800
  Print #0; Tab 15;"CUST #"; Tab 23;"ORDER#";
  Print #0; Tab 32;"QTY ORDER"; Tab 45;"QTY SHIP";
  Print #0; Tab 58;"QTY B/O";
  Print #0;""
  TIME1 = 1;J1 = J1 + 1
End If 
Print #0; Using "######"; Tab 15;H0[4]; Tab 23;H0[7];
Print #0; Using "-------#.##"; Tab 30;L7[2];
Print #0; Using "-------#.##"; Tab 42;L7[4];
Print #0; Using "-------#.##"; Tab 54;L7[3];
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Goto ORDLINE_LOOP
!
L_5800: Rem HEADINGS ROUTINE
If J8 Return
!
If J1 < HJ9 Return 
!If PG If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If PG Print #0;"\14\";
PG = PG + 1 \ J1 = 12
Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(J3$) / 2);J3$; Tab 120;"PAGE";PG;"\15\"
Print #0; Tab 46;"PURCHASE ORDER AUTO-GENERATE LISTING"
Print #0; Using "##"; Tab 55;"FOR WAREHOUSE ";R1[4]
PRINT #0; TAB 55;"FOR BUYERS ";R1[2];" - ";R1[3];
If Not(SUMMRPT)
  Print #0;"\15\"; Tab 10;"VENDOR";V9;" - ";V$[1,30]
  Gosub L_6100
Else 
  Print #0;"\15\"
End If 
Print #0; Tab 90;"------------R E O R D E R--------------"
If Not(SUMMRPT) Print #0; Tab 82;"UNIT";
Print #0; Tab 90;"|"; Tab 128;"|"
If Not(SUMMRPT)
  Print #0;"PRODUCT CODE DESCRIPTION"; Tab 48;"AVAILABLE";
  Print #0; Tab 62;"ON P.O.";
  Print #0; Tab 72;"LINE PT"; Tab 82;"PO COST";
Else 
  Print #0; Tab 2;"VENDOR"; Tab 10;"NAME"; Tab 45;"PHONE";
End If 
Print #0; Tab 90;"REORD QTY";
If Not(SUMMRPT) Print #0; Tab 129;"CAL" Else Print #0;""
If Not(SUMMRPT)
  Print #0;"VENDOR P/N"; Tab 13;"SIZE";
  Print #0; Tab 41;"U/M"; Tab 48;"DAYS AVL."; Tab 61;"BUYER"; Tab 71;"ORDER PT";
  Print #0; Tab 81;"NET COST";
End If 
Print #0; Tab 93;"+ FREE"; Tab 104;"WEIGHT"; Tab 115;"CUBE";
Print #0; Tab 122;"COST";
Print #0;""
Print #0;"\15\";
Return 
!
L_6000: Rem SPROD WHS
NOWHSE = 0
K6$ = P1$[140,151]
K6$[13,14] = R1[4] Using "##"
Search #5,2,1;K6$,R6,E
If E Let NOWHSE = 99 \ Return 
Mat Read #5,R6,32;PW_W1;
Mat Read #5,R6,78;W3;
Mat Read #5,R6,420;PW_W0;
Return
!
L_6100: Rem PRINT VENDOR MINS
If J8
  tmp1$="",fdel$,"",fdel$ ! vendor minimums not found
  If M1[0] tmp1$="$ AMOUNT:",fdel$,M1[0] Using "$$,$$$,$$#.##",fdel$
  If M1[1] tmp1$="WEIGHT:",fdel$,M1[1] Using "##,###,###.##",fdel$
  If M1[2] tmp1$="CUBE:",fdel$,M1[2] Using "##,###,###.##",fdel$
  If M1[3] tmp1$="UNITS:",fdel$,M1[3] Using "##,###,###.##",fdel$
  tmp$=tmp$,tmp1$
Else
  TAB1 = 18
  Print #0; Tab 8;"MINIMUMS : ";
  If M1[0] Print #0; Using "$$,$$$,$$#.## "; Tab TAB1;"$ AMOUNT:";M1[0]; \ TAB1 = TAB1 + 18
  If M1[1] Print #0; Using "##,###,###.## "; Tab TAB1;"WEIGHT:";M1[1]; \ TAB1 = TAB1 + 18
  If M1[2] Print #0; Using "##,###,###.## "; Tab TAB1;"CUBE:";M1[2]; \ TAB1 = TAB1 + 18
  If M1[3] Print #0; Using "##,###,###.## "; Tab TAB1;"UNITS:";M1[3];
  Print #0;" "
End If
Return
!
VENDSUMMDTL: Rem "
If J8 Return
!
Print #0; Using "######"; Tab 2;V9; Tab 10;V$[1,30];
Print #0; Tab 45;V5$[1,30];
Print #0; Tab 79;"MINIMUMS:";
Print #0; Using "######.## "; Tab 90;M1[3];
Print #0; Using "######.## "; Tab 100;M1[1];
Print #0; Using "######.## "; Tab 110;M1[2];
Print #0; Using "$$$$$#.## "; Tab 120;M1[0];
Print #0;" "
J1 = J1 + 1
Print #0; Tab 10;V$[31,60];
Return
!
L_6200: Rem PRINT VENDOR TOTALS
If J8 if SUMMRPT=0 Return
!
If J8
  tmp$ = R1[4] Using "##",fdel$  !warehouse
  tmp$ = tmp$,V9,fdel$  !vendor code
  tmp$ = tmp$,trim$(V$[1,30]),fdel$  !vendor name
  tmp$ = tmp$,trim$(V$[31,60]),fdel$  !vendor address
  tmp$ = tmp$,trim$(V$[91,105]),fdel$  !vendor city
  tmp$ = tmp$,V$[106,107],fdel$  !vendor state
  tmp$ = tmp$,trim$(V$[108,116]),fdel$  !field 1
  tmp$ = tmp$,trim$(V5$[1,30]),fdel$  !phone
  tmp$ = tmp$,M1[3] Using "######.##",fdel$  !reord qty + free minimums
  tmp$ = tmp$,TOT_QTY Using "######.##",fdel$  !reord qty + free reorder
  If M1[3] If TOT_QTY < M1[3]
    tmp$ = tmp$,(M1[3] - TOT_QTY) Using "######.##",fdel$  !reord qty + free minimums short by
  Else
    tmp$ = tmp$,"",fdel$
  End If
  If M1[3] If TOT_QTY If TOT_QTY < M1[3]
    tmp$ = tmp$,(((M1[3] - TOT_QTY) / TOT_QTY) * 100) Using "----#.###%",fdel$  !reord qty + free minimums short by %
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,M1[1] Using "######.##",fdel$  !weight minimums
  tmp$ = tmp$,TOT_WEIGHT Using "######.##",fdel$  !weight reorder
  If M1[1] If TOT_WEIGHT < M1[1]
    tmp$ = tmp$,(M1[1] - TOT_WEIGHT) Using "######.##",fdel$  !weight minimums short by
  Else
    tmp$ = tmp$,"",fdel$
  End If
  If M1[1] If TOT_WEIGHT If TOT_WEIGHT < M1[1]
    tmp$ = tmp$,(((M1[1] - TOT_WEIGHT) / TOT_WEIGHT) * 100) Using "----#.###%",fdel$  !weight minimums short by %
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,M1[2] Using "######.##",fdel$  !cube minimums
  tmp$ = tmp$,TOT_CUBE Using "######.##",fdel$  !cube reorder
  If M1[2] If TOT_CUBE < M1[2]
    tmp$ = tmp$,(M1[2] - TOT_CUBE) Using "######.##",fdel$  !cube minimums short by
  Else
    tmp$ = tmp$,"",fdel$
  End If
  If M1[2] If TOT_CUBE If TOT_CUBE < M1[2]
    tmp$ = tmp$,(((M1[2] - TOT_CUBE) / TOT_CUBE) * 100) Using "----#.###%",fdel$  !cube minimums short by %
  Else
    tmp$ = tmp$,"",fdel$
  End If
  tmp$ = tmp$,M1[0] Using "$$$$$#.##",fdel$  !cost minimums
  tmp$ = tmp$,TOT_COST Using "######.##",fdel$  !cost reorder
  If M1[0] If TOT_COST < M1[0]
    tmp$ = tmp$,(M1[0] - TOT_COST) Using "######.##",fdel$  !cost minimums short by
  Else
    tmp$ = tmp$,"",fdel$
  End If
  If M1[0] If TOT_COST If TOT_COST < M1[0]
    tmp$ = tmp$,(((M1[0] - TOT_COST) / TOT_COST) * 100) Using "----#.###%",fdel$  !cost minimums short by %
  Else
    tmp$ = tmp$,"",fdel$
  End If
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  If SUMMRPT Gosub VENDSUMMDTL \ Goto PVTTL
  Print #0; Using "###### "; Tab 2;"TOTALS FOR VENDOR ";V9;V$[1,30];
  PVTTL: Rem "totals now
  !Print #0; Using "######.## "; Tab 81;"REORDER"; Tab 90;TOT_QTY; Tab 100;TOT_WEIGHT;
  !Print #0; Using "######.## "; Tab 110;TOT_CUBE; Tab 120;TOT_COST
  PRINT #0; USING "#########.##"; TAB 79;"REORDER"; TAB 87;TOT_QTY; 
  PRINT #0; USING "#######.##"; TAB 99;TOT_WEIGHT;
  PRINT #0; USING "#######.##"; TAB 109;TOT_CUBE; TAB 119;TOT_COST
  J1 = J1 + 1
  If SUMMRPT
    Print #0; Tab 10;V$[91,105];", ";V$[106,107];" ";V$[108,116];
  End If 
  SHORT = 0
  If M1[3] If TOT_QTY < M1[3] Let SHORT = 99
  If M1[2] If TOT_CUBE < M1[2] Let SHORT = 99
  If M1[0] If TOT_COST < M1[0] Let SHORT = 99
  If M1[1] If TOT_WEIGHT < M1[1] Let SHORT = 99
  If SHORT Print #0; Tab 71;"MINIMUMS SHORT BY";
  If M1[3] If TOT_QTY < M1[3]
    Print #0; Using "######.##"; Tab 90;(M1[3] - TOT_QTY);
  End If 
  If M1[1] If TOT_WEIGHT < M1[1]
    Print #0; Using "######.##"; Tab 100;(M1[1] - TOT_WEIGHT);
  End If 
  If M1[2] If TOT_CUBE < M1[2]
    Print #0; Using "######.##"; Tab 111;(M1[2] - TOT_CUBE);
  End If 
  If M1[0] If TOT_COST < M1[0]
    Print #0; Using "######.##"; Tab 120;(M1[0] - TOT_COST);
  End If 
  Print #0;"" \ J1 = J1 + 1
  If M1[3] If TOT_QTY If TOT_QTY < M1[3]
    !Print #0; Using " ###.###%"; Tab 90;((M1[3] - TOT_QTY) / TOT_QTY) * 100;
	cnvta=0
	if m1[3] let cnvta=((M1[3]-TOT_QTY)/m1[3])*100
	if cnvta>9999
		PRINT #0; USING "########%"; TAB 90;cnvta;
	else
		PRINT #0; USING "####.###%"; TAB 90;cnvta;
	endif
  End If 
  If M1[1] If TOT_WEIGHT If TOT_WEIGHT < M1[1]
    !Print #0; Using " ###.###%"; Tab 100;((M1[1] - TOT_WEIGHT) / TOT_WEIGHT) * 100;
	cnvta=0
	if m1[1] let cnvta=((M1[1]-TOT_WEIGHT)/m1[1])*100
	if cnvta>9999
		PRINT #0; USING "########%"; TAB 100;cnvta;
	else
		PRINT #0; USING "####.###%"; TAB 100;cnvta;
	endif
  End If 
  If M1[2] If TOT_CUBE If TOT_CUBE < M1[2]
    !Print #0; Using " ###.###%"; Tab 111;((M1[2] - TOT_CUBE) / TOT_CUBE) * 100;
	cnvta=0
	if M1[2] let cnvta=((M1[2]-TOT_CUBE)/M1[2])*100
	if cnvta>9999
		PRINT #0; USING "########%"; TAB 111;cnvta;
	else
		PRINT #0; USING "####.###%"; TAB 111;cnvta;
	endif
  End If 
  If M1[0] If TOT_COST If TOT_COST < M1[0]
    !If TOT_COST Print #0; Using " ###.###%"; Tab 120;((M1[0] - TOT_COST) / TOT_COST) * 100;
	cnvta=0
	if M1[0] let cnvta=((M1[0]-TOT_COST)/M1[0])*100
	if cnvta>9999
		IF TOT_COST PRINT #0; USING "########%"; TAB 120;cnvta;
	else
		IF TOT_COST PRINT #0; USING "####.###%"; TAB 120;cnvta;
	endif
  End If 
  Print #0;"" \ J1 = J1 + 1
  Print #0;"" \ J1 = J1 + 1
End If
TOT_QTY = 0;TOT_WEIGHT = 0;TOT_CUBE = 0;TOT_COST = 0
Return 
!
L_6500: Rem LOOK FOR DEALS
DOLLOR = 0;PERCENT = 0;FREE_QTY = 0
CNVTA = A1[3];CNVTU[0] = PFU1[10];CNVTU[1] = 0;CNVTU[2] = 1
Gosub L_20000
K12$ = " ",K12$
K12$[1,6] = V9 Using "######"
K12$[7,18] = P1$[140,151]
K12$[19,27] = 999999999 - (AMOUNT + 1) Using "#########"
L_6570: Search #10,3,1;K12$,R12,E
If E Goto L_6790
X2 = K12$[1,6] \ If X2 <> V9 Goto L_6790
If K12$[7,18] <> P1$[140,151] Goto L_6790
Mat Read #10,R12,0;DL2;
Mat Read #10,R12,20;DL1;
Mat Read #10,R12,34;DL3;
X2 = DL2[1] \ Gosub L_7820 \ X2 = 0
JDATE[0] = X2
X2 = DL2[4] \ Gosub L_7820 \ X2 = 0
JDATE[1] = X2
If JPCDATE < JDATE[0] Or (DL2[4] And JPCDATE > JDATE[1]) Goto L_6570
If DL1[1] = 1 Let PERCENT = DL3[0]
If DL1[1] = 2
  CNVTA = DL3[0];CNVTU[0] = 0;CNVTU[1] = PFU1[10];CNVTU[2] = 2
  Gosub L_20000
  DOLLOR = AMOUNT
End If 
If DL1[1] = 3
  CNVTA = DL3[2];CNVTU[0] = 0;CNVTU[1] = DL1[4];CNVTU[2] = 1
  Gosub L_20000
  WITH_QTY = AMOUNT
  CNVTA = A1[3];CNVTU[0] = PFU1[10];CNVTU[1] = DL1[4];CNVTU[2] = 1
  Gosub L_20000
  FREE_QTY = Int(AMOUNT / WITH_QTY) * DL3[0]
  CNVTA = FREE_QTY;CNVTU[0] = 0;CNVTU[1] = PFU1[10];CNVTU[2] = 1
  Gosub L_20000
  FREE_QTY = AMOUNT
End If 
L_6790: Return 
!
L_6800: Rem GET VEND MINS
For X = 0 To 17 \ M1[X] = 0 \ Next X
K11$ = V9 Using "######"
Search #11,2,1;K11$,R11,E
If E Goto L_6890
Mat Read #11,R11;M1$;
Mat Read #11,R11,200;M2;
Mat Read #11,R11,206;M1;
Mat Read #11,R11,314;M2$;
If P61$[63,63] = "Y" ! "vend whse file
  X = 0
  Call "POVWMIN.dl4",V9,R1[4],M1[],J$,X,e$,rstr$,intCO
End If 
If M1[0] Let DOLFLG = 1 Else Let DOLFLG = 0
L_6890: If M1[1] Let WTFLG = 1 Else Let WTFLG = 0
If M1[3] Let UNFLG = 1 Else Let UNFLG = 0
If M1[2] Let CBFLG = 1 Else Let CBFLG = 0
Return 
!
Rem {begin rtn.input.s}
!!-!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!-!J0 = J0$[1,1]
!!-!J6 = J0$[2,2]
!!-!J2 = J0$[3,4]
!!-!J3 = J0$[5,6]
!!-!J4 = J0$[7,8]
!!-!J5 = J0$[9,10]
!!-!If J0 < 3 Let J2$ = " ",J2$
!!-!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!-!If J0 >= 3 If J0 <= 4
!!-!  If J0 = 3 Let J2$ = "#",J2$
!!-!  If J0 = 4 Let J2$ = "-",J2$
!!-!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!-!End If 
!!-!J1$[J3 + 1] = ""
!!-!If J0 < 3 Goto ISENTER
!!-!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!-!If J0 <> 6
!!-!  If J0 = 5
!!-!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!-!    J1$ = J9$[4,7],J9$[2,3],"  "
!!-!  Else 
!!-!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!-!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!-!  End If 
!!-!End If 
!!-!ISENTER: Rem
!!-!!If J5 < Msc(34) - 1
!!-!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!-!!End If 
!!-!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!-!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!-!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!-!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!-!If Len(J4$) > J3
!!-!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!-!End If 
!!-!J9$ = J4$
!!-!If Not(Len(J9$))
!!-!  If J0$[3,4] = "00"
!!-!    J9$ = J1$
!!-!  Else 
!!-!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!-!  End If 
!!-!End If 
!!-!For J88 = 1 To Len(J9$)
!!-!  If J9$[J88,J88] < " " Or J9$[J88,J88] > "~"
!!-!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!-!    Gosub ISERRMSG \ Goto ISENTER
!!-!  End If 
!!-!Next J88
!!-!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!-!ISTYPE1: J$ = J0$[2,2],J$
!!-!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!-!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!-!Goto ISOUT
!!-!ISTYPE3: Rem
!!-!J9 = 0
!!-!X1 = 0
!!-!For J88 = 1 To Len(J9$)
!!-!  If J0 = 4 And Not(X1)
!!-!    If J9$[J88,J88] = "-" Or J9$[J88,J88] = "+"
!!-!      X1 = 1
!!-!      Goto ISNCONT1
!!-!    End If 
!!-!  End If 
!!-!  If J9$[J88,J88] > "/" If J9$[J88,J88] < ":" Goto ISNCONT2
!!-!  If J9$[J88,J88] = " " Goto ISNCONT1
!!-!  If Len(J0$) > 10
!!-!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J88,J88] : J8 \ If J8 Goto ISNCONT1
!!-!  End If 
!!-!  If J9$[J88,J88] <> "." Goto ISNUMERR1
!!-!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!-!  If J9 Goto ISNUMERR1
!!-!  J9 = 1
!!-!ISNCONT2: Rem
!!-!  X1 = 1
!!-!  If J9 Let J9 = J9 + 1
!!-!ISNCONT1: Rem
!!-!Next J88
!!-!If J0 = 5 Goto ISTYPE5
!!-!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!-!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!-!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!-!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!-!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!-!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!-!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!-!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!-!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!-!If J9[1] = 0 Goto ISDTERR
!!-!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!-!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!-!Goto ISDTERR
!!-!ISMO30: If J9[1] > 30 Goto ISDTERR
!!-!ISMO31: If J9[1] > 31 Goto ISDTERR
!!-!Goto ISDTOUT
!!-!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!-!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!-!  If J9[1] > 28 Goto ISDTERR
!!-!End If 
!!-!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!-!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!-!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!-!ISTYPE6: Call String(1,J9$)
!!-!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!-!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!-!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!-!Gosub ISERRMSG \ Goto ISENTER
!!-!ISOUT: J$[J3 + 1] = "" !\ Print @J4,J5;J$; \ 
!!-!Return 
!!-!ISERRMSG: X1 = Len(J7$)
!!-!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!-!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!-!!Print 'K1'; \ Window Close \ Return 
!!-!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!-!X$ = " ",X$ \ X$[10] = ""
!!-!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!-!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!-!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!-!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!-!If Not(X2) Let X$ = "        "
!!-!Return 
!!-!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!-!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!-!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!-!Return 
!
Rem {end rtn.input.s}
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
!
L_8000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[10]
CNVTU[2] = 1
For X = 0 To 4
  If POWOFA[X] = 0 Goto NXTWH
  CNVTA = POWOFA[X]
  Gosub L_8900
  CNV_POWOFA[X] = AMOUNT
NXTWH: Next X
For X = 0 To 6
  If X = 3 Or X = 4 Goto L_8090
  CNVTA = W3[X]
  Gosub L_8900
  W3[X] = AMOUNT
L_8090: Next X
For X = 1 To 5
  CNVTA = A1[X]
  Gosub L_8900
  A1[X] = AMOUNT
Next X
PUNIT$ = " ",PUNIT$
If PFU1[10] > 0 Mat Read #8,PFU1[10],10;PUNIT$;
If PFU1[10] = -1 Let PUNIT$ = " CWT"
If PFU1[10] = -3 Let PUNIT$ = "LB  "
Gosub L_6500
CNVTU[0] = 0
CNVTU[1] = PFU1[10]
CNVTU[2] = 2
If A2[2] ! non stock
  CNVTA = OLL5[1]
  If L7[7] Let CNVTA = L7[7]
Else 
  If P9$[32,32] = "Y" And W3[16] > 0 Let CNVTA = W3[16] Else Let CNVTA = B1[10]
End If 
Gosub L_8900
PO_COST = AMOUNT
NET_COST = PO_COST - (PO_COST * (PERCENT / 100)) - DOLLOR
Return 
!
L_8900: Rem UNIT CONVERSION RETURNS AMOUNT
Gosub L_20000
Return 
!
CNVRT_OL: Rem "Order Line Convert
CNVTU[0] = 0
CNVTU[1] = PFU1[10]
CNVTU[2] = 1
CNVTA = L7[2] \ Gosub L_20000
L7[2] = AMOUNT
CNVTA = L7[3] \ Gosub L_20000
L7[3] = AMOUNT
CNVTA = L7[4] \ Gosub L_20000
L7[4] = AMOUNT
Return 
!
CLREXTRA: Rem "Back through to
!Print @0,21;"CLEARING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
K1$ = " ",K1$
K1$ = R1[4] Using "##" \ K1$[3] = R1[0] Using "######"
NUMREC = 0
! - If Err 0 Gosub ERR_TRAP
Search #2,2,1;K1$,R2,E
If Not(E) Goto L_9230
CLRLOOP: 
Search #2,3,1;K1$,R2,E 
If E = 2 Goto CLRDONE
L_9230: Rem "Matched 1st one
If K1$[13,13] = "@" Goto CLRLOOP
DAYSSUPPLY = 0;MODE = K1$[13,13]
If MODE <> 5 Goto CLRLOOP
If MODE = 5 ! "gots the days supply Cause over line point/min
  DAYSSUPPLY = K1$[14,16]
  If R1[5] And R1[5] < DAYSSUPPLY Goto CLRCONT
End If 
Goto CLRLOOP
!
CLRCONT: Rem "check other ranges
X1 = K1$[1,2] \ If X1 <> R1[4] Goto CLRDONE
X2 = K1$[9,12] \ If X2 < R1[2] Or X2 > R1[3] Goto CLRLOOP
X2 = K1$[3,8] \ If X2 >= R1[0] And X2 <= R1[1] Goto L_9260
Goto CLRLOOP
!
L_9260: 
Mat Read #2,R2,0;A$;
Mat Read #2,R2,20;A1;
Mat Read #2,R2,56;A2;
Mat Read #2,R2,92;A4;
cpiflag=0
If Not(A2[2])
  Mat Read #3,A1[0],0;P1$;
  Mat Read #3,A1[0],156;B1;
  Mat Read #3,A1[0],256;A;
  Mat Read #3,A1[0],460;PF_A1;
  Mat Read #3,A1[0],460;P2;
  Mat Read #3,A1[0],512;PFU1;
  Mat Read #3,A1[0],554;PFU2;
  Gosub L_6000
  if p61$[111,111]="Y" ! check if on hold
    prod$=p1$[140,151]
	call cpionhold(e$,intco,cpiflag,Prod$,CustNo,CustName$)
  endif
End If 
If A2[2]
  For X = 0 To 24
    W3[X] = 0
    If X <= 3 Let PW_W1[X] = 0 \ PW_W0[X] = 0
  Next X
  Mat Read #7,A1[0],0;OLL2;
  Mat Read #7,A1[0],8;OLL3;
  Mat Read #7,A1[0],32;OLL5;
  Mat Read #7,A1[0],56;OLL6;
  Mat Read #7,A1[0],140;OLL2$;
  Mat Read #7,A1[0],80;OLL6$;
  Mat Read #7,A1[0],370;OLS3$;
  Mat Read #7,A1[0],250;UN;
  Mat Read #7,A1[0],446;EUN;
  Mat Read #7,A1[0],452;UNF;
  If OLL2[0] = 12 Goto CLRIT
  K7$ = " ",K7$
  K7$ = OLL2[1] Using "######"
  K7$[7] = OLL3[2] Using "###"
  Search #7,2,1;K7$,REC7,E
  If E Or REC7 <> A1[0] Or OLL2$[1,12] <> K1$[17,28]
    Goto CLRIT
  End If 
  K6$ = " ",K6$ \ K6$[1,6] = OLL2[1] Using "######" \ K6$[7,9] = OLL3[2] Using "###"
  Search #6,2,1;K6$,R6,E 
  If E Let HA3[1] = 0 \ Goto L_9360
  Mat Read #6,R6,120;HA3;
L_9360: 
  B1[11] = OLL3[3];PW_W1[2] = HA3[1]
  B1[10] = OLL5[1]
  B1[23] = OLL6[2]
  PF_A1[3] = UNF[4]
  Gosub L_30000
  A[6] = OLL6[4]
  A[5] = UNF[5]
  If A[5] = 0 Let A[5] = 1
  P1$[140,151] = OLL2$[1,12]
  P1$[93,112] = OLS3$[1,20]
  P1$[9,38] = OLL6$[1,30]
  If OLL6$[31,31] = " " Goto L_9440
  LENTH = Len(OLL6$[31,60])
  P1$[63,(63 + LENTH) - 1] = OLL6$[31,(31 + LENTH) - 1]
L_9440: 
  For X = 0 To 6 \ W3[X] = 0 \ Next X
End If 
If A2[2] And NOWHSE Goto CLRIT
If PW_W1[2] >= R1[2] And PW_W1[2] <= R1[3] Goto L_9390
Goto CLRLOOP
L_9390: If P1$[140,151] >= R1$[1,12] And P1$[140,151] <= R2$[1,12] Goto CLRIT
Goto CLRLOOP
!
CLRIT: Rem "Delete the key
Search #2,5,1;K1$,R2,E 
If E 
	Let message$ = "syserrorfile spogenwrk file mode (m)=5 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",K1$ !\error 10000
	goto outerr
Endif
If Not(E)
  E = 3
  Search #2,1,0;K1$,R2,E 
  If E 
	Let message$ = "syserrorfile spogenwrk file, can't release record" !\error 10000
	goto outerr
  Endif
End If 
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 500)) Print @15,22;'CL';"CLEARED ";NUMREC;"  ";K1$;
Goto CLRLOOP
!
CLRDONE: Rem "Needs Relink now
W1 = R1[4]
K2$ = " ",K2$ \ K2$ = W1 Using "##"
CLRFIRST: Rem "
Search #2,3,1;K2$,R2,E
If E Goto L_10039
X0 = K2$[1,2] \ If X0 <> W1 Goto L_10039
If K2$[13,13] = "@" Goto CLRFIRST
Mat Read #2,R2,62;A3;
A3[0] = 0;A3[1] = 0
Mat Write #2,R2,62;A3;
Goto CLRFIRST
!
L_10039: 
K2$ = " ",K2$ \ K2$ = W1 Using "##" \ V9 = -1
L_10040: 
Search #2,3,1;K2$,R2,E 
If E Goto L_10110
X0 = K2$[1,2] \ If X0 <> W1 Goto L_10110
If K2$[13,13] = "@" Goto L_10040
X2 = K2$[3,8] \ If X2 = V9 Goto L_10090
A3[0] = 0 \ A3[1] = 0 \ V9 = X2
L_10090: 
Write #2,R2,68;A3[1]; 
If A3[1] Write #2,A3[1],62;R2;
A3[1] = R2
Goto L_10040
!
L_10110: Rem DONE
Return
!
!OUTEND: Rem EXIT PROGRAM
!
!Print 'CS'
!Chain "MX000C"
!L_9100: Rem END OF THIS RANGE
!If J7 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!If R1[5] And PG And Not(SUMMRPT) ! "printed some and have min days
!QREMVMINDAYS: Rem "
!  Print @0,22;'CE';"REMOVE ALL ITEMS ABOVE MINIMUM DAYS? (Y/N)  ";
!  Input Len 16384 + 1;""J$ \ Call String(1,J$)
!  If J$ <> "Y" And J$ <> "N" Goto QREMVMINDAYS
!  If J$ = "Y" Gosub CLREXTRA
!End If 
!Gosub L_1100 \ Goto L_1000
!End 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Rem "all unibasic 5+
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_30000: Rem ===== set n/s units for conversions
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1];PFU1[13] = UN[0]
PFU1[16] = EUN[0];PFU1[17] = EUN[0];PFU1[18] = UN[0]
PFU1[19] = UN[0]
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 
!
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
if awhxfer and not(summrpt)
	chain "366a.dl4"	! had a transfer
else
	call ERPCronSuccess()
end if
End

OutErr: ! send back message
	returnstatus=1 ! always on blockid errors
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
			call AddToStr(e$,rstr$,WebStr$)
			call SetOutPut(e$,rstr$)
End
!
else ! main try
	!
	! dx replace entire error routine
	include "src/callmainerrnet.inc"
End try
!
