! >>> Program mxfifovar
!
! description Fifo Variance  update
!
! loadsave -w -n 100,10 -o prog/dxport/mxfifovar.dl4 src/mxfifovar.src
!
! ERPScheduler Enabled
!
include "src/copyright.inc" ! dxRem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  16:05:48
Rem MXFIFOVAR ! call routine to update fifo transactions cost variances
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/mxfifovar.src (univ2) [mary] {05022}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String
!Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Try
Enter FIFOSPECCH[],SFLREC,SFTREC,OFCST,NFCST,SFT1$,SFT1[],SFT2[],SPCFLAG,e$,IntCo,rstr$
Dim 3%,REC_FL,REC_FT,X2
Dim P61$[256],P60$[50],P9$[50],P8$[7]
Dim P8$[7],LETTER$[1]
Dim 3%,TESTREC,REC_VTMP
Dim KEYVTMP$[50],CMD$[100],TMPFNAME$[50],FNAME$[50]
Dim KEYVTMP1$[50]
Dim 2%,FIFL,COID,A9,XFERDATE,XFERWH,XWH,XDATE,XFERTYPE,SOURCEWH
Dim FTKEY$[50],FVKEY$[50],FLKEY$[50]
Dim 3%,TESTREC,REC_FV,XOCOST,XFERQTY
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim 1%,FL1[2],NEGFL1[2]
Dim 2%,FL2[3],NEGFL2[3]
Dim 3%,FL3[14],FL4[1],NEGFL3[14]
Dim FL1$[80],NEGFL1$[80]
Dim FLK$[50]
Dim 1%,FT1[3]
Dim 2%,FT2[3]
Dim 3%,FT3[3]
Dim FT1$[72]
Dim FLT$[50]
Dim 1%,XT1[3]
Dim 2%,XT2[3]
Dim 3%,XT3[3],REC_XT
Dim XT1$[72],XTKEY$[50]
Dim 1%,FV1[5]
Dim 2%,FV4[2]
Dim 3%,FV2[2],FV3[7],FV5[3]
Dim FV1$[12],FV2$[52],FV9$[52]
Dim FSKEY$[40],1%,FC0[1],3%,FC2[1]
Dim 3%
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
X2 = Spc(5)
COID = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,52,60;P8$;
Mat Read #1,19,50;P9$;
Mat Read #1,3,192;FIFL;
Mat Read #1,52,60;P8$;
If P8$[5,5] <> "F" Goto OUTEND
CH_FL = FIFOSPECCH[0]
CH_FT = FIFOSPECCH[1]
If Not(CH_FL) Error 10000 ! Gosub ERR_TRAP
If Not(CH_FT) Error 10000 ! Gosub ERR_TRAP
! CHNL = 99
CHNL = Findchannel() ! 99
!Gosub GETCHAN
FNAME$ = "4/FIFOVAR" + Str$(COID)
Call FindF(FNAME$,A9)
If Not(A9) Goto OUTEND
CH_FV = CHNL \ Open #CH_FV,FNAME$
!CHNL = CHNL - 1
!Gosub GETCHAN
CHNL = Findchannel() ! 99
CH_VTMP = CHNL
Rem build variance tmp file
TMPFNAME$ = "6/FIFOVTMP" + Str$(COID) + Str$(Spc(6))
CMD$ = "[1:10] ",TMPFNAME$,"!"
Build #CH_VTMP,CMD$
REC_VTMP = 9 \ Search #CH_VTMP,0,1;KEYVTMP$,REC_VTMP,E \ If E Gosub ERR_SEARCH
REC_VTMP = 1 \ Search #CH_VTMP,0,0;KEYVTMP$,REC_VTMP,E \ If E Gosub ERR_SEARCH
Close #CH_VTMP
Open #CH_VTMP,TMPFNAME$
FTKEY$ = " ",FTKEY$
FTKEY$[1,6] = SFLREC Using "######"
SRCHFTRANS: Rem
Search #CH_FT,3,1;FTKEY$,REC_FT,E \ If E = 2 Goto CHK4XFER
If E Gosub ERR_SEARCH
TESTREC = FTKEY$[1,6] \ If TESTREC <> SFLREC Goto CHK4XFER
If REC_FT = SFTREC Goto SRCHFTRANS
Mat Read #CH_FT,REC_FT,0;FT1$;
Mat Read #CH_FT,REC_FT,72;FT1;
Mat Read #CH_FT,REC_FT,80;FT2;
Mat Read #CH_FT,REC_FT,96;FT3;
Mat Read #CH_FL,SFLREC,86;FL2;
Mat Read #CH_FL,SFLREC,192;FL4;
If Not(FT3[0]) Goto SRCHFTRANS
If FT1[0] = 6 Or FT1[0] = 66 Goto SRCHFTRANS
SOURCEWH = FT1$[71,72]
Rem create variance
FV1$ = " ",FV1$;FV9$ = " ",FV9$;FV2$ = " ",FV2$
For X = 0 To 5 \ FV1[X] = 0 \ Next X
For X = 0 To 2 \ FV2[X] = 0 \ Next X
For X = 0 To 7 \ FV3[X] = 0 \ Next X
For X = 0 To 2 \ FV4[X] = 0 \ Next X
For X = 0 To 3 \ FV5[X] = 0 \ Next X
FV1$[1,12] = SFT1$[1,12]
FV2$[1,40] = SFT1$[41,72]
FV1[0] = SFT1[0]
FV1[1] = SFT1[1]
FV1[2] = FT1[0]
FV1[5] = SOURCEWH
FV1[3] = SPCFLAG
FV2[0] = SFLREC
FV2[1] = SFTREC
FV3[0] = FT3[0]
If Not(SPCFLAG) ! not a special cost
  FV3[1] = OFCST
  FV3[2] = NFCST
Else 
  FV3[3] = OFCST
  FV3[4] = NFCST
End If 
FV3[5] = REC_FT
FV3[6] = FL4[0]
FV3[7] = FL4[1]
FV4[0] = SFT2[3]
FV4[1] = SFT2[2]
FV4[2] = FL2[1]
FV9$[1,52] = FT1$[41,72]
E = 2 \ Search #CH_FV,1,0;FVKEY$,REC_FV,E \ If E Gosub ERR_SEARCH
Gosub WRITE_FIFOV
FVKEY$ = " ",FVKEY$
FVKEY$[1,4] = FV4[0] Using "####"
FVKEY$[5,16] = FV1$[1,12]
FVKEY$[17,18] = FV1[1] Using "##"
FVKEY$[19,24] = FV4[2] Using "######"
FVKEY$[25,30] = FV2[0] Using "######"
FVKEY$[31,38] = FV2[1] Using "########"
FVKEY$[39,46] = FV3[5] Using "########"
Search #CH_FV,4,1;FVKEY$,REC_FV,E \ If E Gosub ERR_SEARCH
Rem check if transaction type was a 22 or 28 --- need to adj the transfer
If FT1[0] = 22 Or FT1[0] = 28 ! warehouse transfer or consignment
  Rem! add key to lot up and adjust transfers lots !!!
  KEYVTMP$ = " ",KEYVTMP$
  KEYVTMP$ = REC_FT Using "##########"
  Search #CH_VTMP,2,1;KEYVTMP$,REC_VTMP,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1
    Search #CH_VTMP,4,1;KEYVTMP$,REC_FT,E \ If E Gosub ERR_SEARCH
  End If 
End If 
Goto SRCHFTRANS
CHK4XFER: Rem look for any transfers and consignment adjust the fifo lot
KEYVTMP$ = " ",KEYVTMP$
Search #CH_VTMP,3,1;KEYVTMP$,REC_VTMP,E \ If E = 2 Goto OUTEND
If E Gosub ERR_SEARCH
Mat Read #CH_FT,REC_VTMP,72;FT1;
If FT1[0] <> 22 And FT1[0] <> 28 Goto ENDCHK4XFER
Mat Read #CH_FT,REC_VTMP,0;FT1$;
Mat Read #CH_FT,REC_VTMP,80;FT2;
Mat Read #CH_FT,REC_VTMP,96;FT3;
Mat Read #CH_FL,FT2[0],86;FL2;
Mat Read #CH_FL,FT2[0],192;FL4;
SOURCEWH = FT1$[71,72]
XFERDATE = FL2[1]
XFERWH = FT1$[71,72]
XFERTYPE = 0
XFERQTY = FT3[0]
If FT1$[41,48] = "PROG 774" Let XFERTYPE = 774
If Not(XFERWH) And FT1[0] = 28 And FT1$[41,48] = "PROG 774"
  If FT1$[53,57] = "TO WH" Let XFERWH = FT1$[59,60]
  If Not(XFERWH)
    If FT1$[53,65] = "TRANS TO WHSE" Let XFERWH = FT1$[67,68]
  End If 
  If Not(XFERWH) Goto ENDCHK4XFER
End If 
FLKEY$ = " ",FLKEY$
FLKEY$[1,12] = FT1$[1,12]
If XFERWH
  FLKEY$[13,14] = XFERWH Using "##"
  FLKEY$[15,20] = XFERDATE Using "######"
End If 
SRCHXFL: Rem search for transfers in fifolot
Search #CH_FL,3,1;FLKEY$,REC_FL,E \ If E = 2 Goto ENDCHK4XFER
If E Gosub ERR_SEARCH
If FLKEY$[1,12] <> FT1$[1,12] Goto ENDCHK4XFER
If XFERWH
  XWH = FLKEY$[13,14] \ If XWH <> XFERWH Goto ENDCHK4XFER
  XDATE = FLKEY$[15,20] \ If XDATE <> XFERDATE Goto ENDCHK4XFER
Else 
  XDATE = FLKEY$[15,20] \ If XDATE <> XFERDATE Goto SRCHXFL
End If 
Mat Read #CH_FL,REC_FL,0;FL1;
If FL1[1] < 8 Or FL1[1] > 10 Goto SRCHXFL
If FT1[0] = 22 ! consignment
  If FL1[1] <> 8 And FL1[1] <> 9 Goto SRCHXFL
End If 
If FT1[0] = 28 ! xfer
  If FL1[1] <> 10 Goto SRCHXFL
End If 
Rem check if for the same description
Mat Read #CH_FL,REC_FL,6;FL1$;
If FL1$[41,49] <> FT1$[41,49] Goto SRCHXFL
If FL1$[41,48] <> "PROG 774"
  If FL1$[50,60] <> FT1$[53,63] Goto SRCHXFL
End If 
Rem we have found one that need to be changed
Mat Read #CH_FL,REC_FL,102;FL3;
Mat Read #CH_FL,REC_FL,86;FL2;
Mat Read #CH_FL,REC_FL,192;FL4;
If XFERTYPE = 774
  If XFERQTY <> FL3[0] Goto SRCHXFL
End If 
Rem adjust cost
If SPCFLAG
  If FL3[14] = NFCST Goto SRCHXFL
  Mat Read #CH_FL,REC_FL,102;FL3
  XOCOST = FL3[14]
  FL3[14] = NFCST
Else 
  If FL3[6] = NFCST Goto SRCHXFL
  Mat Read #CH_FL,REC_FL,102;FL3
  XOCOST = FL3[6]
  FL3[6] = NFCST
  FL3[7] = FL3[6] + ((FL3[6] * FIFL) / 100)
End If 
Mat Write #CH_FL,REC_FL,102;FL3;
Mat Read #CH_FL,REC_FL,86;FL2;
Mat Read #CH_FL,REC_FL,192;FL4;
Rem write adjustment fifo transactions
XT1$ = " ",XT1$
For X = 0 To 3 \ XT1[X] = 0 \ XT2[X] = 0 \ XT3[X] = 0 \ Next X
XT1$[1,12] = FL1$[1,12] \ XT1$[13,24] = FL1$[13,24]
XT1$[25,34] = FL1$[25,34] \ XT1$[35,40] = FL1$[35,40]
XT1$[41,72] = SFT1$[41,72]
XT1[0] = SFT1[0]
XT1[1] = FL1[0]
XT1[2] = Spc(6) \ XT2[0] = REC_FL
XT2[2] = SFT2[2] \ XT2[3] = SFT2[3] \ FT3[0] = 0
If Not(SPCFLAG)
  XT3[1] = FL3[6] \ XT3[2] = FL3[7]
Else 
  XT3[3] = FL3[14]
End If 
XTKEY$ = " ",XTKEY$
E = 2 \ Search #CH_FT,1,0;XTKEY$,REC_XT,E \ If E Gosub ERR_SEARCH
If REC_XT <= 999999 Let XT2[1] = REC_XT
Mat Write #CH_FT,REC_XT,0;XT1$;
Mat Write #CH_FT,REC_XT,72;XT1;
Mat Write #CH_FT,REC_XT,80;XT2;
Mat Write #CH_FT,REC_XT,96;XT3;
XTKEY$[1,6] = XT2[0] Using "######" \ XTKEY$[7,12] = XT2[2] Using "######"
If REC_XT <= 999999
  XTKEY$[13,18] = XT2[1] Using "######"
Else 
  FTRECA = Int((REC_XT - 1000000) / 100000)
  FTRECB = Fra(REC_XT / 100000) * 100000
  Call String(4,FTRECA + 193,LETTER$)
  XTKEY$[13,13] = LETTER$[1,1]
  XTKEY$[14,18] = FTRECB Using "#####"
End If 
Search #CH_FT,4,1;XTKEY$,REC_XT,E \ If E Gosub ERR_SEARCH
Rem log changes in the fifo var
Rem! loop for xfer to login in variance file
FTKEY$ = " ",FTKEY$
FTKEY$[1,6] = REC_FL Using "######"
SRCHFXTRANS: Rem
Search #CH_FT,3,1;FTKEY$,REC_FT,E \ If E = 2 Goto ENDSRCHFXTRANS
If E Gosub ERR_SEARCH
TESTREC = FTKEY$[1,6] \ If TESTREC <> REC_FL Goto ENDSRCHFXTRANS
If REC_FT = REC_XT Goto SRCHFXTRANS
Mat Read #CH_FT,REC_FT,0;FT1$;
Mat Read #CH_FT,REC_FT,72;FT1;
Mat Read #CH_FT,REC_FT,80;FT2;
Mat Read #CH_FT,REC_FT,96;FT3;
If Not(FT3[0]) Goto SRCHFXTRANS
If FT1[0] = 6 Or FT1[0] = 66 Goto SRCHFTRANS
Rem on the variance key do not create for the transfer warehouse
If FL1[1] = FT1[0] ! check if transaction is from source
  If FT1$[41,48] = "PROG 774" And FL1$[41,48] = "PROG 774"
    If FL1$[50,59] = FT1$[53,62] Goto SRCHFXTRANS
  Else 
    If FT1$[41,48] <> "PROG 774"
      If FT1$[41,49] = FL1$[41,49] Goto SRCHFXTRANS
    End If 
  End If 
End If 
Rem create variance
FV1$ = " ",FV1$;FV9$ = " ",FV9$;FV2$ = " ",FV2$
For X = 0 To 4 \ FV1[X] = 0 \ Next X
For X = 0 To 2 \ FV2[X] = 0 \ Next X
For X = 0 To 7 \ FV3[X] = 0 \ Next X
For X = 0 To 2 \ FV4[X] = 0 \ Next X
For X = 0 To 3 \ FV5[X] = 0 \ Next X
FV1$[1,12] = XT1$[1,12]
FV2$[1,40] = XT1$[41,72]
FV1[0] = SFT1[0]
FV1[1] = FL1[0]
FV1[2] = FT1[0]
FV1[3] = SPCFLAG
FV1[5] = SOURCEWH
FV2[0] = REC_FL
FV2[1] = REC_XT
FV3[0] = FT3[0]
If Not(SPCFLAG) ! not a special cost
  FV3[1] = XOCOST
  FV3[2] = NFCST
Else 
  FV3[3] = XOCOST
  FV3[4] = NFCST
End If 
FV3[5] = REC_FT
FV3[6] = FL4[0]
FV3[7] = FL4[1]
FV4[0] = SFT2[3]
FV4[1] = SFT2[2]
FV4[2] = FL2[1]
FV9$[1,52] = FT1$[41,72]
E = 2 \ Search #CH_FV,1,0;FVKEY$,REC_FV,E \ If E Gosub ERR_SEARCH
Gosub WRITE_FIFOV
FVKEY$ = " ",FVKEY$
FVKEY$[1,4] = FV4[0] Using "####"
FVKEY$[5,16] = FV1$[1,12]
FVKEY$[17,18] = FV1[1] Using "##"
FVKEY$[19,24] = FV4[2] Using "######"
FVKEY$[25,30] = FV2[0] Using "######"
FVKEY$[31,38] = FV2[1] Using "########"
FVKEY$[39,46] = FV3[5] Using "########"
Search #CH_FV,4,1;FVKEY$,REC_FV,E \ If E Gosub ERR_SEARCH
Rem check if transaction type was a 22 or 28 --- need to adj the transfer
If FT1[0] = 22 Or FT1[0] = 28 ! warehouse transfer or consignment
  Rem! add key to lot up and adjust transfers lots !!!
  KEYVTMP1$ = " ",KEYVTMP1$
  KEYVTMP1$ = REC_FT Using "##########"
  Search #CH_VTMP,2,1;KEYVTMP1$,REC_VTMP,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1
    Search #CH_VTMP,4,1;KEYVTMP1$,REC_FT,E \ If E Gosub ERR_SEARCH
  End If 
End If 
Goto SRCHFXTRANS
ENDSRCHFXTRANS: Rem end of the transaction search
If XFERTYPE = 774 Goto ENDCHK4XFER
Goto SRCHXFL
ENDCHK4XFER: Rem end check need to delete the key out of the tmp file
Search #CH_VTMP,5,1;KEYVTMP$,REC_VTMP,E \ If E Gosub ERR_SEARCH
Goto CHK4XFER
READFIFOLOT: Rem READ FIFOLOT
Mat Read #CH_FL,REC_FL,0;FL1
Mat Read #CH_FL,REC_FL,6;FL1$
Mat Read #CH_FL,REC_FL,86;FL2
Mat Read #CH_FL,REC_FL,102;FL3
Mat Read #CH_FL,REC_FL,192;FL4
Return 
WRITEFIFOLOT: Rem  WRITE FIFOLOT
Mat Write #CH_FL,REC_FL,0;FL1
Mat Write #CH_FL,REC_FL,6;FL1$
Mat Write #CH_FL,REC_FL,86;FL2
Mat Write #CH_FL,REC_FL,102;FL3;
Mat Write #CH_FL,REC_FL,192;FL4;
Return 
L_6100: Rem WRITE FIFOTRANS
Mat Write #CH_FT,REC_FT,0;FT1$;
Mat Write #CH_FT,REC_FT,72;FT1;
Mat Write #CH_FT,REC_FT,80;FT2;
Mat Write #CH_FT,REC_FT,96;FT3;
Return 
WRITE_FIFOV: Rem write fifo variance file
Mat Write #CH_FV,REC_FV,0;FV1$;
Mat Write #CH_FV,REC_FV,12;FV2$;
Mat Write #CH_FV,REC_FV,64;FV1;
Mat Write #CH_FV,REC_FV,86;FV2;
Mat Write #CH_FV,REC_FV,104;FV3;
Mat Write #CH_FV,REC_FV,158;FV4;
Mat Write #CH_FV,REC_FV,182;FV9$;
Mat Write #CH_FV,REC_FV,270;FV5;
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+msc$(4)
goto Err_Msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End

OUTEND: Rem end of routine
If CH_VTMP
  
	 TRY Close #CH_VTMP ELSE REM
	TMPFNAME$ = "6/FIFOVTMP" + Str$(COID) + Str$(Spc(6))
	Call FindF(TMPFNAME$,A9)
	If A9
		 Kill TMPFNAME$
	End If 
End If 
If CH_FV
	TRY Close #CH_FV ELSE REM
ENDIF
!End 
! Stop 
Else
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program

 