!!>>> Program 644
!
! description  Balance Sheet
!
! loadsave -w -n 100,10 -o prog/dxport/644.dl4 src/644.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 30, 2004  16:33:59
Rem /w/papermaster/r2002//usr/acct/bill/work/r2002/ap/gl644.src (univ2) [bill] {06959}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem GL644 G/L BALANCE SHEET
Rem 3/97 - PATCH TO ALLOW BEGIN. BAL - WMB
!
Declare Intrinsic Sub FindF,InpBuf,String,Time
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim T0$[25],N$[4],P,C$[12],B1$[4],F1$[4],V$[30]
dim fye$[4]
dim 1%,archhist
Dim 1%,S9[1],2%
Dim A$[35],B3$[139],J$[10]
Dim X1,X2,X3,R1$[9]
Dim V1$[12]
Dim B2$[4],F2$[4],S1$[2]
Dim C1,C2,C3,4%,W,Y3,Y4
Dim 2%,B1,F1
Dim 4%,A9[1],L9[1],C9[1],T1,T2,Y1,Y2,A2$[1]
Dim 4%,A3[39],D3
Dim A1$[1],M$[18],S$[4]
Dim F4$[16],F9$[2],1%,L7,2%,A1
Dim K1$[30],Z$[5],Z1$[2],comd$[15]
Dim 1%,E,J8,L,L8,N,comd,L10
Dim 2%,G8,J9,P8,U8,V1,X,Y
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
Z$ = "ALC"
Z1$ = "03"
Mat Read #1,51,6;S9;
Mat Read #1,51,94;archhist;
!
!Print 'CS';"BALANCE SHEET"
!P8 = Spc(5)
!L8 = Int(P8 / 16384)
!G8 = Int((P8 - L8 * 16384) / 64)
!U8 = P8 - (L8 * 16384 + G8 * 64)
!S1$[1,1] = G8 Using "#"
!S1$[2,2] = U8 Using "#"
!R1$ = "1/ACF",S1$
!Call FindF(R1$,A1)
!If Not(A1) Let e$ = "File ",R1$," not found!" \ error 10000
!!!Print 'CS RB';"FILE ";R1$;" NOT FOUND "; \ Signal 3,40 \ Goto OUTEND
!L_340: Ropen #2,R1$
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
L8 = 57
If J8 Let L8 = 22
Call Time(T0$)
S$ = " ",S$
A2$ = ""
P = 0
L = 99
M$ = "###,###,###,###.##"
T1 = 0 \ T2 = 0
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!

Mat Read #1,51,6;S9;
P8 = intCo 
L10 = Int(P8 / 16384)
G8 = Int((P8 - L10 * 16384) / 64)
U8 = P8 - (L10 * 16384 + G8 * 64)
S1$[1,1] = U8 Using "#"
S1$[2,2] = G8 Using "#"
R1$ = "1/ACF",S1$
Call FindF(R1$,A1)
If Not(A1) Let e$ = "File ",R1$," not found!" \ error 10000
Ropen #2,R1$
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"644",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("CLIENT",tmp$) \  W = tmp$  !!Enter Client #
call dxget("SPERIOD",tmp$) \ B1 = tmp$ !!Beginning of Current Period(MMYY) 
call dxget("EPERIOD",tmp$) \ F1 = tmp$ !!End of Current Period(MMYY) 
!
If S9 
! -  If Not(W) Goto OUTEND
! -  If W = -1 Goto OUTEND
  If W <= 0 or W > 9999 Let e$ = "Invalid client number!" \ error 10000
else 
  W = 1
end if
N$ = W Using "####"
Gosub L_6335
For I = 1 To 4
  If N$[I,I] = " " Let N$[I,I] = "."
Next I
V$=" ",v$
V$[3,6] = W Using "####"
Search #2,2,1;V$,V1,E
if E Let e$ = "Client not on file!" \ error 10000
L_830: Mat Read #2,V1;B3$;
P = 0
L7 = B3$[135,136]
If L7 > 9 Let F9$ = L7 Using "##"
If L7 < 10 Let F9$ = L7 Using "#"
F4$ = F9$,"/GLM",S1$,N$
if archhist<>0
	Call dxget("ARCHHIST",tmp$)
	if rtrim$(tmp$)=""
		Call dxget("ARCHYR",tmp$)
		if rtrim$(tmp$)<>""
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		F4$ = F9$,"/GLM",S1$[1,2],N$
		let archhist=0
	else
		Call dxget("ARCHYR",tmp$)
		if rtrim$(tmp$)=""
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		let tmp3=tmp$
		if tmp3<0 or tmp3>99
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		let fye$[1,2]=".."
		let fye$[3,4]=tmp3 using "&&"
		F4$ = F9$,"/GLM",S1$[1,2],N$,fye$
	endif
else
	F4$ = F9$,"/GLM",S1$[1,2],N$
endif
Call FindF(F4$,A1)
If Not(A1) 
	if archHist<>0
		e$ = "Archived File ",F4$," not found " \ error 10000
	else
		e$ = "File ",F4$," not found " \ error 10000
	endif
ENDIF
Ropen #3,F4$
!
comd = 0
!
! starting & ending current period
B1$ = B1 Using "&&&&" \ tmp1$ = B1$[3,4],B1$[1,2] \ B1$ = tmp1$
Gosub L_6300
if comd Let e$ = "Invalid starting current period!" \ error 10000
B2$ = B1$
F2$ = F1 Using "&&&&" \ tmp1$ = F2$[3,4],F2$[1,2] \ F2$ = tmp1$
B1$ = F2$
Gosub L_6300
if comd Let e$ = "Invalid ending current period!" \ error 10000
B1$ = B2$
F1$ = F2$
Gosub L_6100
if comd Let e$ = "Invalid ending current period, must be >= than starting current period!" \ error 10000
!
!

!
!!L_590:!! Print 'CS'; Tab 20;"BALANCE SHEET"
!!If Not(S9) Let W = 1 \ Goto L_700
!!L_600: !!Print @0,3;'CL';"CLIENT NUMBER: "; \ Input ""N$
!!If N$ = "" Goto OUTEND
!!W = N$
!!If Not(W) Goto OUTEND
!!If W = -1 Goto OUTEND
!!If W > 0 If W <= 9999 Goto L_700
!!If W <= 0 or W > 9999 Let e$ = "Invalid client number!" \ error 10000
!!Print "..INVALID"
!!Goto L_600
!!L_700: N$ = W Using "####"
!!Gosub L_6335
!!For I = 1 To 4
!!  If N$[I,I] = " " Let N$[I,I] = "."
!!Next I
!!V$ = W Using "######"
!!Search #2,2,1;V$,V1,E
!!if E Let e$ = "Client not on file!" \ error 10000
!!If E = 0 Goto L_830
!!If E > 1 Gosub ERR_SEARCH
!!Print @0,23;'CL RB';"CLIENT NO ON FILE!!"; \ Signal 3,20
!!Print @0,23;'CL'; \ Goto L_600
!!L_830: Mat Read #2,V1;B3$;
!!Print Using "####  ";@0,3;'CL';"CLIENT # ";W;B3$[11,50];
!!P = 0
!!L7 = B3$[135,136]
!!If L7 > 9 Let F9$ = L7 Using "##"
!!If L7 < 10 Let F9$ = L7 Using "#"
!!F4$ = F9$,"/GLM",S1$,N$
!!Call FindF(F4$,A1)
!!If A1 Goto L_868
!!If Not(A1) Let e$ = "File ",F4$," not found!" \ error 1000
!!Print 'CR CL RB';"FILE ";F4$;" NOT FOUND "; \ Signal 3,30 \ Goto OUTEND
!!L_868: Ropen #3,F4$
!
!!Print @0,23;'CL';"Enter accounting period to print or <CR> to end ";
!!L_870:Print @0,6;'CL';"BEGINNING OF CURRENT PERIOD(YYMM) "; \ Input ""B1$
!!Gosub L_6300
!!B2$ = B1$
!!Print @0,8;'CL';"END OF CURRENT PERIOD(YYMM) "; \ Input ""B1$
!!Gosub L_6300
!!F2$ = B1$
!!B1$ = B2$
!!F1$ = F2$
!!Gosub L_6100
!!Goto L_870
!!L_920: !!Print @0,23;'CL';"ENTER  A: ACCEPT,  R: REJECT,  E: END ";
!!Input ""A1$
!!If A1$ = "A" Goto L_950
!!If A1$ = "R" Goto L_870
!!If A1$ = "E" Goto OUTEND
!!Goto L_920
L_950: V1$ = " ",V1$
Search #3,2,1;V1$,V1,E
if e let e$="Can't find '",V1$,"' in g/l master" \ error 10000
!!If E Gosub ERR_SEARCH
Mat Read #3,V1,70;D3;
Mat Read #3,V1,70;A3;
Gosub L_6400 
if comd = 1 Let e$ = "Starting Accounting Period Not Found!" \ error 10000
if comd = 2 Let e$ = "Ending Accounting Period Not Found!" \ error 10000
C3 = X3
C1 = X1
C2 = X2
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
if J8
  tmp$ = "CLIENT NUMBER",fdel$,"CLIENT NAME",fdel$
  tmp$ = tmp$, "ACCOUNT#",fdel$, "ACCOUNT TYPE",fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$, "CURRENT CHANGE",fdel$
  tmp$ = tmp$, "ENDING BALANCE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
!!Goto L_1800
!!L_1800: !!Print @0,23;'CL';"SORTING....PLEASE WAIT....";
F9 = 0
V$ = " ",V$
L_1803: Search #9,3,1;V$,V1,E
If E = 2 Goto L_1810
Search #9,5,1;V$,V1,E
If E Let e$ = "Syserrorfile 644 sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",V$ \error 10000
Goto L_1803
L_1810: V$ = " ",V$
L_1820: Search #3,3,1;V$,V1,E
If E = 2 Goto L_2000
!!If E Gosub ERR_SEARCH
Mat Read #3,V1,0;A$;
For I = 1 To 3
  If A$[14,14] = Z$[I,I] Goto L_1890
Next I
Goto L_1820
L_1890: For I = 1 To 2
  If A$[13,13] = Z1$[I,I] Goto L_1930
Next I
Goto L_1820
L_1930: K1$ = " ",K1$ \ K1$[1,1] = A$[14,14]
K1$[2] = V$
Search #9,4,1;K1$,V1,E!!If E Gosub ERR_SEARCH
If E Let e$ = "Syserrorfile 644 sortfile mode (m)=4 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",V$ \error 10000
Goto L_1820
!
L_2000: 
V$ = " ",V$
F9 = F9 + 1
V$[1,1] = Z$[F9,F9]
Gosub L_4200
L_2010: 
Search #9,3,1;V$,V1,E
If E = 2 Goto L_2130
Mat Read #3,V1,0;A$;
If V$[1,1] <> Z$[F9,F9] Goto L_2130
Mat Read #3,V1,70;A3;
X1 = C1
X2 = C2
X3 = C3
Gosub L_6605
If Not(Y1) If Not(Y2) Goto L_2010
Gosub L_5800
Gosub L_5000
Goto L_2010
L_2130: If F9 = 3 Goto L_2200
Gosub L_4000
Goto L_2000
!
L_2200: Rem GET PROFIT/LOSS
V$ = " ",V$ \ V$[1,1] = "N"
Search #3,2,1;V$,V1,E
if e let e$="Can't find '",V1$,"' in g/l master" \ error 10000
!!If E Gosub ERR_SEARCH
Mat Read #3,V1,70;A3;
Gosub L_6700
If Not(Y1) If Not(Y2) Goto L_2260
C$ = " ",C$ \ A$ = " ",A$
A$[15,35] = "NET PROFIT/LOSS"
Gosub L_5800
Gosub L_5000
L_2260: 
Gosub L_4000
Gosub L_5800
!
if not(j8)
  Print #0; Tab 5;"TOTAL LIABILITIES & CAPITAL";
  S$ = " ",S$
  If (C9[0] + L9[0]) < 0 Let S$[1,1] = "-"
  If (C9[1] + L9[1]) < 0 Let S$[2,2] = "-"
  Print #0; Using M$; Tab 34;(C9[0] + L9[0]);S$[1,1]; Tab 60;(C9[1] + L9[1]);S$[2,2]
  Print #0; Tab 39;"============="; Tab 65;"============="
endif
L = 58
!!If L8 = 22 Input @0,23;"PRESS <CR> TO CONTINUE "J$
!!Close #3
L = 99 \ P = 0
For I = 0 To 1
  A9[I] = 0
  L9[I] = 0
  C9[I] = 0
Next I
!!Goto L_590
Goto OUTEND !!ADD
!
L_4000: Rem PRINT ACCT TYPE TOTALS
Gosub L_5800
!
If J8 Let S$ = " ",S$ \ return
!
Print #0; Tab 38;"--------------"; Tab 64;"--------------"
S$ = " ",S$
On F9 Goto L_4040,L_4050,L_4060
L_4040: Print #0; Tab 10;"TOTAL ASSETS";
If A9[0] < 0 Let S$[1,1] = "-"
If A9[1] < 0 Let S$[2,2] = "-"
Print #0; Using M$; Tab 34;A9[0];S$[1,1]; Tab 60;A9[1];S$[2,2]
Goto L_4070
L_4050: Print #0; Tab 10;"TOTAL LIABILITIES";
If L9[0] < 0 Let S$[1,1] = "-"
If L9[1] < 0 Let S$[2,2] = "-"
Print #0; Using M$; Tab 34;L9[0];S$[1,1]; Tab 60;L9[1];S$[2,2]
Goto L_4070
L_4060: Print #0; Tab 10;"TOTAL CAPITAL";
If C9[0] < 0 Let S$[1,1] = "-"
If C9[1] < 0 Let S$[2,2] = "-"
Print #0; Using M$; Tab 34;C9[0];S$[1,1]; Tab 60;C9[1];S$[2,2]
L_4070: Print #0; Tab 38;"=============="; Tab 64;"=============="
Print #0;""
L = L + 3
Return 
!
L_4200: Rem PRINT ACCOUNT TYPE HEADING
Gosub L_5800
!
if j8
  If F9 = 1 Let comd$ = "ASSETS"
  If F9 = 2 Let comd$ = "LIABILITIES"
  If F9 = 3 Let comd$ = "CAPITAL"
  return
end if
!
Print #0;" "
If F9 = 1 Print #0; Tab 11;"***  ASSETS  ***"
If F9 = 2 Print #0; Tab 11;"***  LIABILITIES  ***"
If F9 = 3 Print #0; Tab 11;"***  CAPITAL  ***"
L = L + 1
Return 
!
L_5000: Rem ... PRINT A DETAIL LINE ROUT.
If F9 < 2 Goto L_5005
Y1 = - Y1
Y2 = - Y2
L_5005: S$ = " ",S$
C$ = A$[1,12]
If A$[13,13] = "3" Goto L_5200
If Y1 < 0 Let S$[1,1] = "-"
If Y2 < 0 Let S$[2,2] = "-"
!
If J8
  tmp$ = B3$[3,6],fdel$,rtrim$(B3$[11,50]),fdel$
  tmp$ = tmp$,C$[1,9],fdel$
  tmp$ = tmp$,comd$,fdel$
  tmp$ = tmp$,rtrim$(A$[15,35]),fdel$
  tmp$ = tmp$, Y2 Using M$,S$[2,2],fdel$
  tmp$ = tmp$, Y1 Using M$,S$[1,1],fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0;C$[1,9]; Tab 11;A$[15,35];
  Print #0; Using M$; Tab 34;Y2;S$[2,2]; Tab 60;Y1;S$[1,1]
end if
T1 = T1 + Y2
T2 = T2 + Y1
On F9 Goto L_5130,L_5140,L_5150
L_5130: A9[0] = A9[0] + Y2 \ A9[1] = A9[1] + Y1
Return 
L_5140: L9[0] = L9[0] + Y2 \ L9[1] = L9[1] + Y1
Return 
L_5150: C9[0] = C9[0] + Y2 \ C9[1] = C9[1] + Y1
Return 
!
L_5200: Rem ... PRINT TOTAL LINE ROUT.
If T1 < 0 Let S$[1,1] = "-"
If T2 < 0 Let S$[2,2] = "-"
if j8 
  tmp$ = B3$[3,6],fdel$,rtrim$(B3$[11,50]),fdel$
  tmp$ = tmp$,C$[1,9],fdel$
  tmp$ = tmp$,comd$,fdel$
  tmp$ = tmp$,rtrim$(A$[15,35]),fdel$
  tmp$ = tmp$, T1 Using M$,S$[1,1],"*",fdel$
  tmp$ = tmp$, T2 Using M$,S$[2,2],fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0;C$[1,9];"  ";A$[15,35];
  Print #0; Using M$; Tab 34;T1;S$[1,1];"*"; Tab 60;T2;S$[2,2]
end if
T1 = 0 \ T2 = 0
Return 
!
Goto L_2010
!
L_5800: Rem ...MAIN HEADING ROUTINE
if J8 return
!
L = L + 1
If L < L8 Return 
If Not(P) Goto L_5810
If L8 <> 22 Goto L_5810
!!Print @0,23;'CL';"PRESS <CR> TO CONTINUE ";
!!Input ""J$
!!Print 'CS'
L_5810: If P Print #0;"\14\";
P = P + 1
Print #0;"\15\\15\CLIENT NUMBER:  ";B3$[3,6];
Print #0; Tab 25;"NAME: ";B3$[11,50]; Tab 112;"PAGE # ";P
Print #0;"RUN AS OF ";T0$[1,12]
Print #0;"\15\"; Tab 22;"BALANCE SHEET FROM ";
Print #0;B2$[3,4];"/";B2$[1,2];" TO ";F2$[3,4];"/";F2$[1,2]
Print #0;"\15\ACCOUNT#"; Tab 11;"DESCRIPTION"; Tab 38;"CURRENT CHANGE";
Print #0; Tab 64;"ENDING BALANCE"
L = 9
Return 
!
L_6100: Rem ...CHECK STARTING DATE BEFORE ENDING
If B1$[1,2] = F1$[1,2] Goto L_6160
If B1$[1,2] = "99" And F1$[1,2] = "00" Return !!Return 1
If B1$[1,2] < F1$[1,2] Return !!Return 1
Goto L_6180
L_6160: If B1$[3,4] <= F1$[3,4] Return !!Return 1
L_6180: 
comd = 1
!!Print @0,23;'CL RB';"STARTING DATE GREATER THAN ENDING DATE";
!!Signal 3,20 \ Print @0,23;'CL';
Return 
!
L_6300: Rem ...FOUR DIGIT DATE VERIFICATION
!!If B1$ = "" Goto OUTEND
!!If B1$[1,4] = "1239" Return
If B1$[1,2] >= "00" If B1$[1,2] <= "99" Goto L_6315
Goto L_6325
L_6315: If B1$[3,4] >= "01" If B1$[3,4] <= "13" Return 
!!If B1$[1,2] = B1$[3,4] Return 
L_6325: comd = 1
!!Print @0,23;'CL RB';"INCORRECT DATE"; \ Signal 3,20 \ Print @0,23;'CL';
!!Print @0,23;'CL';"Enter accounting period to print or <CR> to end ";
!!Return -3
return
!
L_6335: Rem * * NUMERIC CHECK * *
For I = 1 To Len(N$)
  If N$[I,I] = " " Goto L_6370
  If N$[I,I] > "/" If N$[I,I] < ":" Goto L_6370
!!  Print @0,23;'CL RB';"CONTROL NUMBER IS NON-NUMERIC"; \ Signal 3,20
!!  Print @0,23;'CL';
!!  Stop 
L_6370: Next I
Return 
!
L_6400: 
A3 = D3 / 100
N = Int(A3[0])
B1 = B2$
F1 = F2$
For X = 0 To 39
  If X = 0 If A3 * 100 = B1 Goto L_6455
  If X = 13 Or X = 26 Or X = 39 Goto L_6430
  If A3[X] = B1 Goto L_6455
L_6430: Next X
comd = 1
!!Print @0,23;'CL';"INCORRECT DATE"; \ Signal 3,20 \ Print @0,23;'CL';
If X2 = 0 Let P = 0
Return 
!
L_6455: 
X1 = X
For X = 0 To 39
  If X = 0 If A3 * 100 = F1 Goto L_6495
  If X = 13 Or X = 26 Or X = 39 Goto L_6480
  If A3[X] = F1 Goto L_6495
L_6480: Next X
If X2 = 0 Let P = 0
comd = 2
!!Print @0,23;'CL RB';"DATE NOT FOUND ON FILE!!"; \ Signal 3,20 \ Print @0,23;'CL';
Return 
!
L_6495: 
X2 = X
If X1 < N + 2 Let X3 = 1
If X1 > N + 1 Let X3 = N + 2
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 3
Return
!
!!Return 1
!
L_6605: 
If A$[1,1] = "A" Return 
If A$[1,1] = "C" Return 
If A$[1,1] = "L" Return 
If A$[1,1] = "E" Return 
If A$[1,1] = "I" Return 
If A$[1,1] = "N" Return 
If A$[13,13] = "1" Return 
If A$[13,13] = "2" Return 
If A$[14,14] = "C" Goto L_6670
If A$[14,14] = "A" Goto L_6670
If A$[14,14] = "L" Goto L_6670
Return 
!
L_6670: 
Y1 = 0
For I = 0 To X2
  Y1 = Y1 + A3[I]
Next I
Goto L_6730
L_6700: Rem ... YTD FOR ACCT. TYPES I,E,0,R
Y1 = 0
For I = X3 To X2
  Y1 = Y1 + A3[I]
Next I
L_6730: 
Y2 = 0
For I = X1 To X2
  Y2 = Y2 + A3[I]
Next I
If A$[13,13] >= "0" If A$[13,13] <= "5" Return 
!!Print "\15\INCORRECT RECORD TYPE"
!!Gosub ERR_TRAP
!
OUTEND: Rem END
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
!
End 
!
!!Chain "MX000C"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End