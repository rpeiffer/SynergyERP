!>>> Program 980d
!
! description  print rebate staging 
!
! loadsave -w -n 100,10 -o prog/dxport/980d.dl4 src/980d.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2010  14:29:48
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/htberry.r10/ut980d.src (univ2) [valerie] {54841}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,programdump
!Option Default Dialect IRIS1
Rem ut980d print contracts that have not been updated from staged area
Com 1%,COST_LEV[3],COMM_LEV,Z9[9]
If Err 0 Gosub ERR_TRAP
Dim RCN$[70],VENDCNT$[50],RB$[12],SPUDA2$[30],M1$[40],CCREF$[20]
Dim K$[60],K1$[60],K2$[60],K3$[60],K4$[60],K5$[60],A$[156],CNAME$[30]
Dim Key0$[60],KEY1$[60],KEY2$[60],KEY3$[60],PMASK$[12],TMPKEY$[50],J8$[10]
Dim SPACE$[500],SCRATCH$[80],RETVAL$[512],Z2$[2],VENDNAME$[30],PUM$[4],CUM$[4]
Dim F$[20],P61$[256],MSGTXT$[75],VRCINFO$[60],WORKEY$[60],CCD$[14],T9$[50]
Dim BPUM$[4],APUM$[4],BCUM$[4],ACUM$[4],BCDESC$[30],ACDESC$[30],DASH$[132]
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],URECFLAG,INCEXPIRED,RBWHSE
Dim 1%,PFU1[20],CNVTU[9],CKUOM[2]
Dim 2%,RB1[5],RBMIN,RBCOM,CONTRACT,CC1[4],START_VENDOR,END_VENDOR,DATE,V9[4]
Dim 2%,START_CONTRACT,END_CONTRACT,WORKCONT,JSDATE,JEDATE,JIDATE,JDATE[2],D6
Dim 2%,VCONTRACT,COMPANYCOPY,VINFO,CREATECONTRACT,RBTRACK[4],DT3[1],Q0[1]
Dim 3%,RCN3[3],RB3[6],RBN,RB5[2],PFU2[6],CNVTA[4],A[33],RBCOST,RBSLSCOST
Dim 3%,BRBTYPE,BRBFACTOR,ARBTYPE,ARBFACTOR,BSDATE,BEDATE,ASDATE,AEDATE
Dim 3%,BSLMTYPE,BSLMFACTOR,BSLMBASE,BSLMCOST,ASLMTYPE,ASLMFACTOR,ASLMBASE,ASLMCOST
!Window On 
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],message$[200],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
SPACE$ = " ",SPACE$
COID = intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = "cntrl/cntrl" + Str$(COID)
DFLTCOID = COID
WORKCOID = COID
Mat Read #1,61,0;P61$;
Read #1,3,172;D6;
Read #1,3;CNAME$;
X2 = D6 \ Gosub NUM2DATE \ J8$ = X$
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "###########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
DASH$ = "-",DASH$
VINFO = 0 ! \ If P61$[82,82] = "Y" Let VINFO = 1 ! NOT ON SERP AT THIS TIME!
CREATECONTRACT = 0 \ If P61$[83,83] = "Y" Let CREATECONTRACT = 1
COMPANYCOPY = 0 \ If P61$[84,84] = "Y" Let COMPANYCOPY = 1
!If Err 0 Let PRINT_TO_SCREEN = Spc(8)
PRINT_TO_SCREEN = 0 !\ V9[3] = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If PRINT_TO_SCREEN If PRINT_TO_SCREEN <> 49 Goto ERR_TRAP
!If Err 0 Gosub ERR_ESCAPE
V9[3] = 60 \ If PRINT_TO_SCREEN Let V9[3] = 18
START_HERE: Rem all starts
START_VENDOR = 0
END_VENDOR = 999999
START_CONTRACT = 0
END_CONTRACT = 999999
!Gosub DISPLAY_SCREEN
INPUTS: Rem
VEND_RANGE: Rem
GET_START_VEND: Rem
!J0$ = "3000063507-"
!J5$ = "Enter the vendor code maximum 999999"
!J1 = START_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_START_VEND
call dxget("SVEND",tmp$)
if tmp$="" let tmp$=Str$(Start_vendor)
J1=tmp$
START_VENDOR = J1
GET_END_VEND: Rem
!J0$ = "3000065507-"
!J5$ = "Enter the ending vendor code maximum 999999"
!J1 = END_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_END_VEND
call dxget("EVEND",tmp$)
if tmp$="" let tmp$=Str$(End_Vendor)
j1=tmp$
END_VENDOR = J1
If END_VENDOR < START_VENDOR
  ! Gosub BAD_RANGE
  message$="INVALID VENDOR RANGE"
  Goto ERR_MSG ! VEND_RANGE
End If 
!Return 
CONTR_RANGE: Rem ------------------------------------
!J0$ = "3000063508"
!J5$ = "Enter the starting contract number maximum 999999"
!J1 = START_CONTRACT
!Gosub ISINPUT
CALL dxget("SCONTR",tmp$)
if tmp$="" let tmp$=Str$(Start_contract)
j1=tmp$
START_CONTRACT = J1
!J0$ = "3000065508"
!J5$ = "Enter the ending contract number maximum 999999"
!J1 = END_CONTRACT
!Gosub ISINPUT
call dxget("ECONTR",tmp$)
if tmp$="" let tmp$=Str$(End_Contract)
j1=tmp$
END_CONTRACT = J1
If END_CONTRACT < START_CONTRACT
  !Gosub BAD_RANGE
  message$="INVALID CONTRACT RANGE"
  Goto Err_msg ! CONTR_RANGE
End If 
!Return 
!Print @0,23;'CE';"Enter #:field to edit  P:print or  E: exit ";
!Input Len 16384 + 3;""J$ \ Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "P"
  Gosub FILE_OPENS
  V9[1] = 66
  Gosub PRINT_HEADER
!  Goto BEGIN_PRINT
!End If 
!X = J$
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On X Gosub VEND_RANGE,CONTR_RANGE,COMPANY_COPY
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Goto INPUTS
BEGIN_PRINT: Rem let's start printing shall we
 Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
K$ = " ",K$ ! \ K$ = ""
CHECK_VENDOR = 0
PRINT_LOOP: Rem start with header of staged work file
Gosub PRINT_HEADER
Search #2,3,4;K$,R2,E
If E
  !Input @0,22;'CL';"Print complete press <CR> to continue ";J$
  Goto OUTEND
End If 
CH_RBHEAD = 2;REC_RBHEAD = R2
Gosub READ_REBATE_HEADER
COPIED = 0
If RCN3[0] < START_CONTRACT Goto PRINT_LOOP
If RCN3[0] > END_CONTRACT Goto PRINT_LOOP
If RCN3[3] < START_VENDOR Goto PRINT_LOOP
If RCN3[3] > END_VENDOR Goto PRINT_LOOP
If RCN3[3] <> CHECK_VENDOR
  Gosub PRINT_VENDOR
  CHECK_VENDOR = RCN3[3]
End If 
! Print @10,10;'CL';"contract ";K$
CONTRACT = RCN3[0]
Gosub PRINT_CONTRACT_HEADER
K1$ = CONTRACT Using "######"
GO_THRU_TRACK: Rem check in tracking file
Search #20,3,1;K1$,R20,E
If E If E <> 2 Gosub ERR_SEARCH
If E
  If Not(COPIED)
    Gosub PRINT_DETAIL
  End If 
  Goto PRINT_LOOP
End If 
WORKCONT = K1$[1,6]
If WORKCONT = CONTRACT
  COPIED = 1
  Mat Read #20,R20;RBTRACK
  Gosub PRINT_DETAIL
  Goto GO_THRU_TRACK
Else 
  If Not(COPIED) Gosub PRINT_DETAIL
End If 
Goto PRINT_LOOP
DISPLAY_SCREEN: Rem DISPLAY INPUT SCREEN
!Print @0,0;'CS ED';"-ut980d-";@30,0;"STAGED REBATE STATUS REPORT";
!Print @35,5;'BR';"STARTING";@55,5;"ENDING";'ER';'BD';
!Print @1,7;"    VENDOR CODE";
!Print @1,8;"    CONTRACT NUMBER";
!Print @0,7;" 1> ";@0,8;" 2> ";
!START_VENDOR = 0
!END_VENDOR = 999999
!START_CONTRACT = 0
!END_CONTRACT = 999999
!Print Using "######";@35,7;START_VENDOR;;@55,7;END_VENDOR
!Print Using "######";@35,8;START_CONTRACT;@55,8;END_CONTRACT;
Return 

BAD_RANGE: Rem
!MSGTXT$ = "Ending value must be Greater than or Equal to starting value!"
!Call "errmsg",MSGTXT$
Return 
READ_REBATE_HEADER: Rem
Mat Read #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Read #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Read #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
READ_REBATE_DETAIL: Rem
Mat Read #CH_RBDETL,REC_RBDETL,0;RB$
Mat Read #CH_RBDETL,REC_RBDETL,12;RB1
Mat Read #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Read #CH_RBDETL,REC_RBDETL,40;RB
Mat Read #CH_RBDETL,REC_RBDETL,46;RB3
Mat Read #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Read #CH_RBDETL,REC_RBDETL,118;RBWH;
Read #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Read #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Read #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
READ_REBATE_CUSTOMER: Rem
Mat Read #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Read #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
READ_REBATE_NOTES: Rem
Mat Read #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Read #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
READ_REBATE_VINFO: Rem
Mat Read #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Read #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Read #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
READ_PRODUCT_RECORD: Rem
Mat Read #CH_PROD,REC_PROD;A$
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
WRITE_REBATE_HEADER: Rem
Mat Write #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Write #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Write #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
WRITE_REBATE_DETAIL: Rem
Mat Write #CH_RBDETL,REC_RBDETL,0;RB$
Mat Write #CH_RBDETL,REC_RBDETL,12;RB1
Mat Write #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Write #CH_RBDETL,REC_RBDETL,40;RB
Mat Write #CH_RBDETL,REC_RBDETL,46;RB3
Mat Write #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Write #CH_RBDETL,REC_RBDETL,118;RBWH;
Write #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Write #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Write #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
WRITE_REBATE_CUSTOMER: Rem
Mat Write #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Write #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
WRITE_REBATE_NOTES: Rem
Mat Write #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Write #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
WRITE_REBATE_VINFO: Rem
Mat Write #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Write #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Write #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
GET_VENDOR_NAME: Rem
VENDNAME$ = "VENDOR NOT FOUND"
TMPKEY$ = " ",TMPKEY$
TMPKEY$ = RCN3[3] Using "######"
Search #21,2,1;TMPKEY$,R21,E
If Not(E)
  VENDNAME$ = " ",VENDNAME$
  Mat Read #21,R21;VENDNAME$
End If 
Return 
FILE_OPENS: Rem
if err 0 goto NOSTGFle
F$ = "3/rcontracth" + Str$(WORKCOID)
Open #12,F$
F$ = "3/rebatedtl" + Str$(WORKCOID)
Open #13,F$
F$ = "2/custcont" + Str$(WORKCOID)
Open #14,F$
F$ = "2/rebtnotes" + Str$(WORKCOID)
Open #15,F$
F$ = "3/stgrbheader" + Str$(DFLTCOID)
Ropen #2,F$
F$ = "3/stgrbdetail" + Str$(DFLTCOID)
Ropen #3,F$
F$ = "2/stgrbcustcnt" + Str$(DFLTCOID)
Ropen #4,F$
F$ = "2/stgrbnotes" + Str$(DFLTCOID)
Ropen #5,F$
If VINFO ! vendor info file used
  F$ = "3/rbtvinfo" + Str$(WORKCOID)
  Open #16,F$
  F$ = "3/stgrbvinfo" + Str$(DFLTCOID)
  Ropen #6,F$
End If 
F$ = "3/stgrbtrack" + Str$(DFLTCOID)
Open #20,F$
Read #1,88,2400;F$
Ropen #21,F$
Read #1,88,1728;F$
!Ropen #99,F$
Read #1,88,1792;F$
Ropen #7,F$
!J$ = "cntrl/cntrl" + Str$(WORKCOID)
!Ropen #91,J$
!Read #91,88,2400;F$
!Ropen #23,F$
!Read #91,88,1792;F$
!Ropen #17,F$
Read #1,88,2288;F$
Ropen #18,F$
if err 0 gosub err_trap
Return 
CONVERT_RCN3DATES: Rem "Conver to Julian
X2 = RCN3[1] \ Gosub YMD2JUL \ X2 = 0
JDATE[1] = X2
X2 = RCN3[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[2] = X2
Return 
PRINT_HEADER: Rem "============================================== heading
If V9[1] < V9[3] Return 
!If V9[0] If PRINT_TO_SCREEN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(PRINT_TO_SCREEN) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 4
If Not(PRINT_TO_SCREEN) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);CNAME$; Tab 120;"PAGE ";V9[0]
Print #0;" - 980d - ";T9$;
Print #0; Tab 46;"S T A G E D   R E B A T E    C O N T R A C T   S T A T U S"
If CREATECONTRACT Print #0; Tab 40;"CREATING NEW CONTRACTS ";
If Not(CREATECONTRACT) Print #0; Tab 40;"UPDATING ORIGINAL CONTRACTS";
Print #0;""
Print #0;""
END_PRINT_HEADER: Rem
Return 
PRINT_VENDOR: Rem
Gosub PRINT_HEADER
Gosub GET_VENDOR_NAME
Print #0;""
Print #0; Using "######";"VENDOR   ";RCN3[3];"  ";VENDNAME$
Print #0; Tab 10;"CONTRACT"
V9[0] = V9[0] + 2
Return 
PRINT_CONTRACT_HEADER: Rem
Gosub PRINT_HEADER
Print #0; Using "######  "; Tab 10;CONTRACT;"   ";RCN$[41,70]
V9[0] = V9[0] + 1
Return 
PRINT_DETAIL: Rem print detail of what was copied
If Not(COPIED)
  Print #0; Tab 20;" ************* CONTRACT NOT COPIED ************** ";
Else 
  If CREATECONTRACT
    Print #0; Using "######  "; Tab 20;RBTRACK[1];" CREATED ";
  Else 
    Print #0; Using "######  "; Tab 20;RBTRACK[1];" UPDATED ";
  End If 
  If COMPANYCOPY
    Print #0; Using "##  ";" COMPANY ";RBTRACK[3];
  End If 
  X2 = RBTRACK[4] \ Gosub NUM2DATE \ Print #0;"ON  ";X$;
End If 
Print #0;""
V9[1] = V9[1] + 1
Return 

NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
IF X2<=0 LET E=1 \ RETURN
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
!Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: !X1 = Len(J7$)
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}

NOSTGFle: ! files missing - can not use
message$="REBATE STAGING NOT AVAILABLE"
! FALL ON THROUGH
ERR_MSG: ! something is awry
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
Call programdump("tmp/980dse!","")
goto Err_Msg:
OUTEND: Rem "Done
!Close 
!Chain "mx000"
END
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!!Rem {end rtn.error.s}
include "src/callmainerrnet.inc"
End