! >>> Program 695c
!
! description  P/I Variance against Available Quantity
!
! loadsave -w -n 100,10 -o prog/dxport/695c.dl4 src/695c.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 24, 2006  15:09:43
Rem /w2/papermaster/r2005//usr/acct/dek/work/r2005/mx/mx695c.src (univ2) [dek] {53151}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX695     -  PHYSICAL INVENTORY VARIANCE REPORT
Rem
Rem REV. 1.2 - 02/18/85 -    - REV. 3/85 FOR MULTI-WHSE
!
Declare Intrinsic Sub InpBuf,String
!!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],W9[5]
Com 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
Dim D$[50],P9$[50],DTMP$[50],P61$[256]
L_200: Rem SELECT REPORT
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
If P9$[41,41] = "Y" Let RASL = 1 Else Let RASL = 0
Dim 1%,SORT,W1[2],UNITX
Dim 2%,X1[9],Q0[1],D9[5],R[20],B[24],C4[10]
Dim 3%,P3[3],K5$[20],T9[9],W3[24],M1[17],A1[3],C1,PWGT
Dim 3%,P1[2],PFN[1],T[9],T1[9],WHMISC[6],PRPARC[3],PF_LOAD2
Dim 3%,AMOUNT,CUNIT,SUNIT,CTUNIT,BKUNIT,SUNIT$[4],CUNIT$[4],CTUNIT$[4]
Dim 3%,QAVAIL,QCOMMIT,SCOST,AVGCOST,WHLBS[1],CWCOST,SPECS[99]
Dim X$[10],K9$[24],A$[156],K8$[6],C1$[32],SORT$[9],D1$[10],U5$[20]
Dim K1$[50],P1$[26],P2$[28],CNAME$[30],CURDAT$[8],STAG$[6],ETAG$[6]
Dim W9$[2],K2$[20],K3$[20],K4$[20],K7$[20],J$[10],K15$[50],BREAK$[12]
Dim VN$[30],A2$[30],KF8$[50],UNIT$[5],RETVAL$[512]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[2000],tmp1$[700],tmp2$[1200],tmp3$[1200],tmp4$[700]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[6]	  \ Blank$=" ",Blank$
dim EndParam$[6] \ EndParam$="}",EndParam$
!
For I = 2 To 12
  Read X \ If X = -1 Goto L_825
  Read #1,88,Abs(X);K1$[1,16];
  If X >= 0 Open #I,K1$ Else Ropen #I,K1$
L_825: Next I
Data "704","-2528","-1792","-1728","-1744","-2400","-1120","-1","-2352","-1840","-1888"
Mat Read #1,3,0;CNAME$;
Mat Read #1,3,164;CURDAT$;
Mat Read #1,115;D9;
SPECS[1]=11 ! ORDER HEADER
SPECS[2]=12  ! ORDER LINES
!!Window On 
If Err 0 Let F = Spc(8)
F = 0 \ N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60 \ If F Let L9 = 20
J8 = F
!
SORT = 1;STAG$ = " ",STAG$;ETAG$ = "z",ETAG$
UNITX = 1;ALTF = 0;DSP_TOT = 0
PRNTCWT = 0
tmp1$ = ""
!!Call "ProgDflt","695C","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!  RETVAL$[1,6] = STAG$;RETVAL$[7,12] = ETAG$
!  RETVAL$[13,13] = Str$(UNITX)
!  RETVAL$[14,14] = Str$(ALTF)
!  RETVAL$[15,15] = Str$(DSP_TOT)
!  RETVAL$[16,16] = Str$(SORT)
!  RETVAL$[17,17] = Str$(PRNTCWT)
!End If 
!STAG$ = RETVAL$[1,6]
!ETAG$ = RETVAL$[7,12]
!UNITX = RETVAL$[13,13]
!ALTF = RETVAL$[14,14]
!DSP_TOT = RETVAL$[15,15]
!SORT = RETVAL$[16,16]
!PRNTCWT = RETVAL$[17,17]
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"695c",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("WHSE",tmp$)  \ W9 = tmp$
call dxget("SORT",tmp$) \ SORT = tmp$ !!drop list 1 2 3 4
call dxget("SLOCATION",STAG$) \ STAG$ = STAG$,Blank$
call dxget("ELOCATION",ETAG$) \ ETAG$ = ETAG$,EndParam$ !!If rtrim$(ETAG$) = "" Let ETAG$ = "}}}}}}"
call dxget("COST",tmp$) \ UNITX = tmp$  !!drop list 1 2 3 4 5 6
call dxget("ALLCODES",tmp$)  \ If rtrim$(tmp$) = "" Let ALTF = 0 else  ALTF = 9 ! check
call dxget("ONLYCATCH",tmp$) \  If rtrim$(tmp$) = "" Let PRNTCWT = 0 else PRNTCWT = 9 ! check
!
!validations warehouse
If W9 < 1 Or W9 > D9[5] let e$ = "Invalid warehouse, must be between 0 and ",D9[5]," !!" \ error 10000
!
!sort
If SORT = 1 Let SORT$ = "PRODUCT: "
If SORT = 2 Let SORT$ = "VENDOR: "
If SORT = 3 Let SORT$ = "BUYER: "
If SORT = 4 Let SORT$ = "GRADE: "
!
!location 
If STAG$ > ETAG$  let e$ = "Invalid ending location code, must be >= than starting location code!" \ error 10000
!
!Unit
If UNITX = 1 Read #1,18,130;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 2 Let U5$ = "BASE COST"
If UNITX = 3 Read #1,18,120;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 4 Read #1,18,110;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 5 Read #1,18,220;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 6 Read #1,18,230;D1$; \ U5$[1,10] = D1$[1,10]
!
!!L_1000: Rem "============================================== inputs
!!Gosub L_7500
!!D$ = Str$(W9)
!!Print @32,5;D$
!!If Not(W9) Gosub EDT_WHSE
!!Print @15,7;Str$(SORT)
!!If SORT = 1 Let SORT$ = "PRODUCT: "
!!If SORT = 2 Let SORT$ = "VENDOR: "
!!If SORT = 3 Let SORT$ = "BUYER: "
!!If SORT = 4 Let SORT$ = "GRADE: "
!!Print @26,13;STAG$;@40,13;ETAG$
!!Gosub SHOTHECOST
!!Print @25,15;'CL';U5$;
!!If ALTF Print @50,16;"Y"; Else Print @50,16;"N"
!!If DSP_TOT Print @50,17;"Y" Else Print @50,17;"N"
!!If PRNTCWT Print @50,18;"Y" Else Print @50,18;"N"
!Goto L_1460
!L_1040: !!Print @15,7; \ Input Len 16384 + 1;""D$
!!If D$ = "" And SORT Let D$ = Str$(SORT)
!!SORT = D$ \ If SORT < 1 Or SORT > 4 Goto L_1040
!!If SORT = 1 Let SORT$ = "PRODUCT: "
!!If SORT = 2 Let SORT$ = "VENDOR: "
!!If SORT = 3 Let SORT$ = "BUYER: "
!!If SORT = 4 Let SORT$ = "GRADE: "
!!RETVAL$[16,16] = Str$(SORT)
!Return 
!L_1100: Rem TAGS
!!Print @26,13; \ Input Len 16384 + 6;""K1$
!!If K1$ = "" Let K1$ = STAG$
!!STAG$ = K1$
!!Print @40,13; \ Input Len 16384 + 6;""K1$
!!If K1$ = "" Let K1$ = ETAG$
!!ETAG$ = K1$
!!If ETAG$ = "" Let ETAG$ = "}}}}}}"
!!!If STAG$ <= ETAG$ Goto L_1190
!!Print @0,22;'RB CE';"INVALID RANGE!" \ Signal 3,20
!!Print @0,22;'CE'; \ Goto L_1100
!!L_1190: Rem OKAY - CONTINUE
!!RETVAL$[1,6] = STAG$;RETVAL$[7,12] = ETAG$
!Return 
!L_1200: Print @50,16;
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = ""
!!  If ALTF Let K1$ = "Y"
!!  If Not(ALTF) Let K1$ = "N"
!!End If 
!!If K1$ <> "Y" If K1$ <> "N" Goto L_1200
!!ALTF = 0
!!If K1$ = "Y" Let ALTF = 9
!!RETVAL$[14,14] = Str$(ALTF)
!Return 
!L_1250: Print @50,18;
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = ""
!!  If PRNTCWT Let K1$ = "Y"
!!  If Not(PRNTCWT) Let K1$ = "N"
!!End If 
!!If K1$ <> "Y" If K1$ <> "N" Goto L_1250
!!PRNTCWT = 0
!!If K1$ = "Y" Let PRNTCWT = 9
!!RETVAL$[17,17] = Str$(PRNTCWT)
!Return 
!EDT_TOTOSCRN: Rem "
!!Print @50,17;
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = ""
!!  If DSP_TOT Let K1$ = "Y"
!!  If Not(DSP_TOT) Let K1$ = "N"
!!End If 
!!If K1$ <> "Y" And K1$ <> "N" Goto EDT_TOTOSCRN
!!If K1$[1,1] = "Y" Let DSP_TOT = 99 Else Let DSP_TOT = 0
!!RETVAL$[15,15] = Str$(DSP_TOT)
!Return 
!EDT_WHSE: Print @32,5;
!!Input Len 16384 + 2;""D$
!!If D$ = "" Let D$ = Str$(W9)
!!W9 = D$ \ If W9 < 1 Or W9 > D9[5] Goto EDT_WHSE
!Return 
!EDT_COST: Rem "cost for report
!!Print @25,15;'CL';
!!Gosub L_10500
!!Gosub SHOTHECOST
!!Print @25,15;'CL';U5$;
!!RETVAL$[13,13] = Str$(UNITX)
!Return 
!SHOTHECOST: Rem
!!If UNITX = 1 Read #1,18,130;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 2 Let U5$ = "BASE COST"
!!If UNITX = 3 Read #1,18,120;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 4 Read #1,18,110;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 5 Read #1,18,220;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 6 Read #1,18,230;D1$; \ U5$[1,10] = D1$[1,10]
!Return 
!L_1460: Print @0,22;'CE';"CHOOSE  #:field to edit  P: print  R: reselect  S: save defaults  E: exit  ";
!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!If K1$ = "E" Goto L_9010
!If K1$ = "P" Goto STRTSORT
!!!If K1$ = "R" Goto EDT_ALL
!If K1$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save  ";
!  Input Len 16384 + 1;""D$ \ Call String(1,D$)
!  If D$ = "" Print @0,22;'CL'; \ Goto L_1460
!  If D$ <> "A" And D$ <> "U" Goto ASK_SAVE
!  If D$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!!  Call "Progdfltw","695C","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL';
!  Goto L_1460
!End If 
!FLD = K1$ \ If FLD < 1 Or FLD > 6 Goto L_1460
!Gosub EDT_FLDS
!Goto L_1460
!!EDT_ALL: Rem "change 'em all
!!Print @0,22;'CE';"RESELECT WHSE? (Y/<CR>)  ";
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = "Y"
!!  Gosub EDT_WHSE
!!Else 
!!  If K1$ <> "" And K1$ <> "N" Goto EDT_ALL
!!End If 
!!Print @0,22;'CE';
!!For FLD = 1 To 6
!!  Gosub EDT_FLDS
!!Next FLD
!Goto L_1460
!EDT_FLDS: Rem "change a field
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On FLD Gosub L_1040,L_1100,EDT_COST,L_1200,EDT_TOTOSCRN,L_1250
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!
if j8
  If SORT <> 1 
    tmp$ = SORT$ ,fdel$
    tmp$ = tmp$,"PRODUCT",fdel$
  else
    tmp$ = "PRODUCT",fdel$
  End if
  tmp$ = tmp$,"VENDOR ITEM #",fdel$
  tmp$ = tmp$,"DESCRIPTION" ,fdel$
  If P9$[26,26] = "Y" let tmp$ = tmp$,"DESCRIPTION2" ,fdel$
  If ALTF let tmp$ = tmp$,"ALT ITEMS" ,fdel$
  tmp$ = tmp$,"CUSTOMER" ,fdel$
  tmp$ = tmp$,"PACK" ,fdel$
  If P9$[1,1] <> "N" let  tmp$ = tmp$,"LOT #", fdel$
  tmp$ = tmp$,"WHSE" ,fdel$
  tmp$ = tmp$,"LOC" ,fdel$
  tmp$ = tmp$,"TAG NO" ,fdel$
  tmp$ = tmp$,"SYSTEM AVAIL QTY" ,fdel$
  tmp$ = tmp$,"SYSTEM COMMIT QTY" ,fdel$
  tmp$ = tmp$,"COUNTED QUANTITY" ,fdel$
  tmp$ = tmp$,"U/M" ,fdel$
  tmp$ = tmp$,"EXTENSION" ,fdel$
  tmp$ = tmp$,"QUANTITY VARIANCE" ,fdel$
  tmp$ = tmp$,"COST VARIANCE" ,fdel$
  If PRNTCWT
    tmp$ = tmp$,"C.WGT AVVAIL" ,fdel$
    tmp$ = tmp$,"C.WGT COMMIT" ,fdel$
    tmp$ = tmp$,"CATCH WEIGHT" ,fdel$
  end if
  tmp$ = tmp$,rtrim$(U5$),fdel$ !!
  tmp$ = tmp$,rtrim$(U5$)," UM",fdel$ !!
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
STRTSORT: Rem "================================================= sort
!Window Off 
!Print @0,22;'CE';"SORTING...PLEASE WAIT";
K1$ = " ",K1$;K1$[1,2] = W9 Using "##"
L_1515: 
Search #2,3,2;K1$,R[2],E 
If E Goto L_1900
If K1$[3,6] = "VOID" Goto L_1515
W9[1] = K1$[1,2] \ If W9 <> W9[1] Goto L_1900
Mat Read #2,R[2],0;P1$;
Mat Read #2,R[2],26;P1;
If STAG$ <> "" If P1$[1,Len(STAG$)] < STAG$ Goto L_1515
If P1$[1,Len(ETAG$)] > ETAG$ Goto L_1515
R[4] = K1$[3,8]
Mat Read #4,R[4],0;A$;!!!!
Mat Read #4,R[4],156;B;
Mat Read #4,R[4],856;C1$;
K4$ = " ",K4$ \ K4$[1,12] = A$[140,151] \ Gosub L_3500
If SORT <> 3 Goto L_1600
K8$ = B[24] Using "######"
Search #8,2,1;K8$,R[8],E !!\ If E > 1 Gosub ERR_SEARCH
If E Let M1[15] = 0 \ Goto L_1600
Mat Read #8,R[8],206;M1;
L_1600: 
K9$ = " ",K9$;R[9] = R[4]
If SORT = 1 Let K9$[1,12] = A$[140,151]
If SORT = 2 Let K9$[1,6] = B[24] Using "######"
If SORT = 3 Let K9$[1,6] = W1[2] Using "######"
If SORT = 4 Let K9$[1,12] = C1$[1,12]
K9$[13,24] = A$[140,151]
If P1[0] = -99
  If K9$[13,24] = "" Or K9$[13,24] = "            " Goto L_1515
End If 
Search #9,4,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 695c sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \error 10000
K1$[9,26] = "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
Goto L_1515
!
L_1900: 
!!If L9 > 20 Print @0,22;'CE';"PRINTING...PLEASE WAIT"; Else Print 'CS'
K4$ = " ",K4$
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
L = 100
K9$ = " ",K9$;BREAK$ = ""
L_1940: 
Search #9,3,1;K9$,R[9],E 
K5$ = " ",K5$;K5$[1,12] = K9$[13,24];R[4] = R[9]
If E Goto L_8000
If SORT <> 1 If BREAK$ <> "" If BREAK$[1,12] <> K9$[1,12] Let L = 100
BREAK$[1,12] = K9$[1,12]
K1$ = " ",K1$;K1$ = W9 Using "##"
K1$[3] = R[4] Using "######"
Search #2,2,2;K1$,V1,E 
If Not(E) Goto L_2030
If E Goto L_1940
L_2000: Rem "============================================== LOOP IT HERE !!
Search #2,3,2;K1$,V1,E 
If E Gosub L_4000 \ Goto L_1940
L_2030: 
Rem  LET W9[1]=K1$[1,2] \ IF W9[1]<>W9 GOTO L_8000: ! "check whse
Mat Read #2,V1,0;P1$;
If STAG$ <> "" If P1$[1,Len(STAG$)] < STAG$ Goto L_2000
If P1$[1,Len(ETAG$)] > ETAG$ Goto L_2000
If P1$[7,10] = "VOID" Goto L_2000
K4$[1,12] = K5$[1,12]
If K4$[1,12] <> P1$[7,18] Gosub L_4000 \ Goto L_1940
Mat Read #2,V1,26;P1;
Mat Read #2,V1,44;P2$;
Mat Read #2,V1,72;PWGT;
If P1[0] = -99 Let SKP = 99;P1[0] = 0;PWGT = 0 Else Let SKP = 0
Gosub L_3000 \ Goto L_2000
If PRNTCWT If A$[127,127] <> "Y" Goto L_2000
KF8$ = " ",KF8$;KF8$[1,12] = A$[140,151]
Gosub L_3200
Gosub L_3250
Gosub L_3500
Gosub SET_COST
Gosub L_10000
Gosub L_5000
T[0] = T[0] + SUNIT
T9[0] = T9[0] + BKUNIT
T[1] = T[1] + FNR(P1[0] * C1)
T[7] = T[7] + PWGT
Goto L_2000
!
L_3000: Rem "=============================================== READ PRODUCT
K2$ = P1$[7,18]
Search #4,2,1;K2$,V3,E 
If E Goto L_3120
Mat Read #4,V3,0;A$;!!!!
Mat Read #4,V3,156;B;
Mat Read #4,V3,256;A;
Mat Read #4,V3,512;PFU1;
Mat Read #4,V3,554;PFU2;
Mat Read #4,V3,596;PRPARC;
Mat Read #4,V3,894;C4;
Read #4,V3,938;PF_LOAD2;
Mat Read #4,V3,944;A2$;
Mat Read #4,V3,1018;PFN;
Read #4,V3,240;C1;

specs[0]=0
SPECS[3]=V3 ! PRODUCT REC NUMBER
specs[4]=w9 ! warehouse number
call "mkonshelfadj.dl4",specs[]
onshelfadj=specs[0]
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA =onshelfadj
Gosub L_20000 \ donshelfadj = AMOUNT
Gosub L_3400
Return 1
!
L_3120: Rem NOT FOUND !!
A$[9,38] = "PRODUCT NOT FOUND!"
C1 = 0
For I = 0 To 4 \ A[I] = 0 \ Next I
P1$[7,18] = "VOID TAG    "
Mat Write #2,V1,0;P1$;
Return 
!
L_3200: Rem GET ON HAND FROM SPRODLOT
If A1 Return 
D$ = " ",D$;D$[1,12] = P1$[7,18];D$[13,14] = P1$[25,26]
DTMP$ = D$
L_3240: 
Search #3,3,2;D$,V4,E
If E Return 
If DTMP$[1,14] <> D$[1,14] Return 
Mat Read #3,V4,82;P3;
A1[3] = A1[3] + P3[3]
Goto L_3240
!
L_3250: Rem GET ON HAND FROM SPRODLOT
QAVAIL = 0 \ QCOMMIT = 0
D$ = " ",D$;D$[1,12] = P1$[7,18];D$[13,14] = P1$[25,26]
D$[15,20] = P2$[23,28]
DTMP$ = D$
Search #3,3,2;D$,V4,E
If E Return 
If DTMP$[1,20] <> D$[1,20] Return 
Mat Read #3,V4,82;P3;
QAVAIL = P3[0] - P3[1]
A1 = A1 + P3[0] - P3[1] - P3[3]
QCOMMIT = P3[3]
Return 
!
L_3400: Rem GET VENDOR
K7$ = " ",K7$;K7$ = B[24] Using "######"
Search #7,2,1;K7$,R[7],E 
If E = 1 Goto L_3460
Mat Read #7,R[7],0;VN$;
Return 
!
L_3460: Rem NG
VN$ = " ",VN$
VN$ = "VENDOR NOT ON FILE"
Return 
!
L_3500: Rem READ WAREHOUSE
W1[2] = 0;WHLBS[0] = 0;WHLBS[1] = 0
For X = 0 To 24 \ W3[X] = 0 \ Next X
K15$ = " ",K15$
K15$[1,12] = K4$[1,12]
K15$[13,14] = W9 Using "##"
Search #6,2,1;K15$,R5,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #6,R5,32;W1;
  Mat Read #6,R5,78;W3;
  Mat Read #6,R5,800;WHMISC;
  Mat Read #6,R5,980;WHLBS;
End If 
Return 
!
L_3800: Rem GET ALL ALT ITEMS
DONE = 0
L_3810: 
Search #10,3,2;KF8$,R10,E 
If E = 2 Let DONE = 9
!!If E If Not(DONE) Gosub ERR_SEARCH
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
L_4000: Rem TOTAL FOR THIS PART
if PRNTCWT if L8=0 return ! print catch items only, no items found
If L8 = 0 Return 1
If L8 = 1 Goto L_4065
if not(J8)
  If A$[127,127] = "Y"
    Print #0; Tab 44;"TAG TOTALS";
    Print #0; Using "-------#.## "; Tab 54;T[7];"LB";
  Else 
    Print #0; Tab 50;"TAG TOTALS";
  End If 
  Print #0; Using "------#.## "; Tab 70;T[0];SUNIT$;
  Print #0; Using "----------#.##"; Tab 85;T[1];
  Print #0;""
End if
L = L + 1
L_4065: Rem "IF NOT NETPO PRINT #0;" AVG "; ELSE  PRINT #0;" NET ";
!
if not(J8)
  Print #0;" ";U5$[1,10];
  Print #0; Using ": -----#.#### / ";AVGCOST;CUNIT$;
  Print #0; Tab 30;"BOOK TOTALS";
  Print #0; Using " Adj ------#.## "; Tab 43;donshelfadj;SUNIT$;
  Print #0; Using "------#.## "; Tab 70;BKUNIT;SUNIT$;
  Print #0; Using "----------#.##"; Tab 85;FNR(BKUNIT * SCOST);
End if
T[2] = T[0] - BKUNIT
T9[1] = T9[0] - A1[0]
if not(J8)
  Print #0; Using "-------#.##";T[2];
  If A$[127,127] <> "Y" ! not for catchweights
    If C1 Print #0; Using "---------#.##";FNR(T[2] * SCOST)
    If Not(C1) Print #0;"*************"
  Else 
    Print #0;""
  End If 
End if
L = L + 2
If A$[127,127] = "Y"
  if not(J8)
    Print #0; Using "------#.## "; Tab 70;WHLBS[0];"LB";
    Print #0; Tab 99;
  End if
  T[9] = T[7] - WHLBS[0]
  if not(J8)
    Print #0; Using "-------#.##";T[9];
    If C1 Print #0; Using "---------#.##";FNR(T[9] * CWCOST)
    If Not(C1) Print #0;"*************"
  End if
  L = L + 1
End If 
if not(j8) Print #0;" "
T1 = T1 + T[0]
T1[1] = T1[1] + T[1]
T1[2] = T1[2] + BKUNIT \ If BKUNIT > 0 Let T1[7] = T1[7] + BKUNIT
T1[3] = T1[3] + FNR(BKUNIT * SCOST) \ If A1[0] > 0 Let T1[8] = T1[8] + FNR(BKUNIT * SCOST)
T1[4] = T1[4] + T[2]
TCV = TCV + (T[2] * SCOST)
Rem LET T1[5]=T1[5]+(T[2]*SCOST)
If A$[127,127] = "Y" ! catchweight
  T1[5] = T1[5] + (T[9] * CWCOST)
Else 
  T1[5] = T1[5] + (T[2] * SCOST)
End If 
For I = 0 To 9
  T[I] = 0
  T9[I] = 0
Next I
L8 = 0;A1[0] = 0 \ Mat A1 = Zer
if not(J8) Print #0;" "
L = L + 1
Return 
!
L_5000: Rem PRINT LINE
L = L + 1
L8 = L8 + 1
If L > L9 Gosub L_5800
If L8 <> 1 
  Goto L_5085
end if
if J8!!
  If SORT <> 1
    tmp1$ =  K9$[1,12],fdel$  !!
    tmp1$ = tmp1$ ,rtrim$(P1$[7,18]) ,fdel$ !!product 
  else
    tmp1$ = rtrim$(P1$[7,18]) ,fdel$ !!product 
  End if
  tmp1$ = tmp1$ ,rtrim$(A$[93,112]), fdel$ !!vendor item #
  tmp1$ = tmp1$ ,rtrim$(A$[9,38]), fdel$ !!description
  If P9$[26,26] = "Y" let tmp1$ = tmp1$ ,rtrim$(A$[63,92]) ,fdel$! description2
  tmp4$ = rtrim$(VN$[1,30]),fdel$  !! customer
  tmp4$ = tmp4$ ,rtrim$(A2$[13,27]) ,fdel$ !!PACK
Else!!
  Print #0; Tab 0;P1$[7,18];
  Print #0; Tab 15;rtrim$(A$[93,112]);
  Print #0; Tab 37;rtrim$(A$[9,38]);
  If P9$[26,26] = "Y" Print #0;"  ";rtrim$(A$[63,92]);
  Print #0;""
  Print #0; Tab 15;VN$[1,30]; Tab 50;"PACK: ";A2$[13,27] \ L = L + 1
End if!!
L = L + 1
If ALTF
  Gosub L_5500
  if j8 let tmp2$ = trim$(tmp2$),fdel$ ! alt items
End if
L_5085: If P9$[1,1] = "N" Goto L_5095
If P9$[1,1] = "Y" Goto L_5092
If A$[113,113] <> "Y" Goto L_5095
L_5092: 
if J8!!
  tmp3$ = P2$[1,12] Using "#####.#### ",fdel$ !!lot num
Else
  Print #0; Using "#####.#### "; Tab 2;P2$[1,12];
End if
!
L_5095: 
if J8
  If P9$[1,1] = "N" 
    tmp3$ =P1$[25,26],fdel$!!warehouse
  else
    If P9$[1,1] = "Y" 
	  tmp3$ = tmp3$ ,P1$[25,26],fdel$ !!warehouse
    Else
      If A$[113,113] <> "Y" let tmp3$ = "",fdel$ ,P1$[25,26],fdel$ else tmp3$ = tmp3$,rtrim$(P1$[25,26]),fdel$ !!warehouse
    End if
  End if
  tmp3$ = tmp3$,P2$[23,28],fdel$ !! Loc 
  tmp3$ = tmp3$,P1$[1,6],fdel$ !! tag No 
  tmp3$ = tmp3$,QAVAIL  Using "------#.## ",fdel$ !!System Avail Qty
  tmp3$ = tmp3$, QCOMMIT Using "------#.## ",fdel$  !!System ComMit Qty
  If Not(SKP) tmp3$ = tmp3$,SUNIT Using "------#.## ",fdel$ !!Counted Quantity
  If SKP tmp3$ = tmp3$," TAG SKIPPED !!",fdel$ !!Counted Quantity
  tmp3$ = tmp3$,SUNIT$,fdel$ !!U/M
  tmp3$ = tmp3$, FNR(P1[0] * C1) Using "----------#.##",fdel$ !!Extension 
  If SUNIT <> QAVAIL
    tmp3$ = tmp3$, SUNIT - (QAVAIL - QCOMMIT) Using "-------#.##",fdel$!!Quantity Variance
    If C1 tmp3$ = tmp3$, FNR((SUNIT - (QAVAIL - QCOMMIT)) * SCOST) Using "---------#.##",fdel$ else tmp3$ = tmp3$, "----",fdel$ !!cost Variance
  Else
    tmp3$ = tmp3$ ,"",fdel$
    tmp3$ = tmp3$ ,"",fdel$
  End If 
  !!
  If PRNTCWT
    If A$[127,127] = "Y"
      tmp3$ = tmp3$, WHLBS[0] - WHLBS[1] Using "------#.## ",fdel$ !!field 1
      tmp3$ = tmp3$, WHLBS[1] Using "------#.## ",fdel$  !!field 2
      If Not(SKP) tmp3$ = tmp3$,PWGT Using "------#.## ","LB",fdel$ !!field 3
      If SKP tmp3$ = tmp3$," TAG SKIPPED !!",fdel$ !!field 3
      L = L + 1
    else
     tmp3$ = tmp3$ ,"",fdel$
     tmp3$ = tmp3$ ,"",fdel$
     tmp3$ = tmp3$ ,"",fdel$
    End If
  End if
 tmp3$ = tmp3$, AVGCOST Using " -----#.####",fdel$,CUNIT$,fdel$!!!
 If ALTF let tmp$ = tmp1$,tmp2$,tmp4$,tmp3$ else tmp$ = tmp1$,tmp4$,tmp3$
 call addtostr(e$,rstr$,tmp$+rdel$)
!
Else!!
  Print #0; Tab 18;P1$[25,26];
  Print #0; Tab 23;P2$[23,28];
  Print #0; Tab 30;P1$[1,6];
  Print #0; Using "------#.## "; Tab 40;QAVAIL;
  Print #0; Using "------#.## "; Tab 55;QCOMMIT;
  If Not(SKP) Print #0; Using "------#.## "; Tab 70;SUNIT;
  If SKP Print #0; Tab 70;" TAG SKIPPED !!";
  !
  Print #0;SUNIT$;
  Print #0; Using "----------#.##"; Tab 85;FNR(P1[0] * C1);
  If SUNIT <> QAVAIL
    Print #0; Using "-------#.##";SUNIT - (QAVAIL - QCOMMIT);
    If C1 Print #0; Using "---------#.##";FNR((SUNIT - (QAVAIL - QCOMMIT)) * SCOST);
  End If 
  Print #0;" "
  If A$[127,127] = "Y"
    Print #0; Using "------#.## "; Tab 40;WHLBS[0] - WHLBS[1];!!field 1
    Print #0; Using "------#.## "; Tab 55;WHLBS[1];  !!field 2
    If Not(SKP) Print #0; Using "------#.## "; Tab 70;PWGT;"LB"; !!field 3
    If SKP Print #0; Tab 70;" TAG SKIPPED !!"; !!field 3
    Print #0;""
    L = L + 1
  End If 
End if
Return 
!
L_5500: Rem PRINT ALT ITEMS
POS1 = 0
Gosub L_3800
if J8
  tmp2$ = ""
  If Not(DONE) tmp2$ = trim$(KF8$[13,36])  !!ALT ITEMS
else
  If Not(DONE) Print #0; Tab 1;"ALT ITEMS: ";KF8$[13,36]; \ POS1 = 35
End if
L_5520: Rem LOOP
if J8
  if Not(DONE)  Gosub L_3810
  If Not(DONE)  tmp2$ = tmp2$ ,", ",trim$(KF8$[13,36]) 
  If Not(DONE)  Goto L_5520
Else
  If Not(DONE) Gosub L_3810
  If Not(DONE) Print #0;", ";KF8$[13,36]; \ POS1 = POS1 + 26
  If Not(DONE) If POS1 > 106 Print #0;"" \ L = L + 1;POS1 = 0
  If Not(DONE) Goto L_5520
  If POS1 Print #0;"" \ L = L + 1
End if
Return 
!
L_5800: Rem "======================================= HEADINGS
if J8 return 
!
If P = 0 Goto L_5835
If L9 <> 20 Goto L_5830
!Print "\15\PRESS <CR> TO CONTINUE ";
!Input Len 16384 + 1;""J$
!Print 'CS';
L_5830: Print #0;"\14\"
L_5835: P = P + 1
Print #0; Tab 2;CURDAT$; Tab (66 - (Len(CNAME$) / 2));CNAME$; Tab 115;"PAGE ";P
Print #0;"- 695C - ";Msc$(3);
Print #0; Tab 34;"P H Y S I C A L   I N V E N T O R Y   V A R I A N C E   R E P O R T"
Print #0; Tab 5;U5$;
Print #0; Tab 50;"FOR WAREHOUSE: ";W9;",  SORTED BY ";SORT$
Print #0;" "
Print #0; Tab 1;"PRODUCT"; Tab 15;"VENDOR ITEM #";
Print #0; Tab 32;"TAG"; Tab 41;"SYSTEM"; Tab 55;"SYSTEM";
Print #0; Tab 71;"COUNTED";
Print #0; Tab 99;"QUANTITY";
Print #0; Tab 113;"COST"
If P9$[1,1] <> "N" Print #0; Tab 8;"LOT NUM";
Print #0; Tab 16;"WHSE#"; Tab 23;"LOC";
Print #0; Tab 32;"NO."; Tab 41;"AVAIL QTY"; Tab 55;"COMMIT QTY";
Print #0; Tab 71;"QUANTITY"; Tab 81;"U/M"; Tab 87;"EXTENSION";
Print #0; Tab 99;"VARIANCE"; Tab 111;"VARIANCE"
Print #0;" "
If SORT <> 1 Print #0;SORT$;K9$[1,12] \ Print #0;" "!
L = 10
Return 
!
L_7500: Rem "=============================================== display screen
!Print @0,0;'CS';"-MX695C-";@25,0;"PHYSICAL VARIANCE REPORT BY BIN LOCATION"
!Print @0,5;"      WAREHOUSE FOR REPORT "
!Print @0,7;" 1> SORT BY:  ";@15,8;"1: PRODUCT CODE"
!Print @15,9;"2: VENDOR CODE"
!Print @15,10;"3: BUYER CODE"
!Print @15,11;"4: GRADE"
!Print @25,12;"STARTING";@40,12;"ENDING"
!Print @0,13;" 2> TAG/LOCATION";
!Print @0,15;" 3> COST TO USE";
!Print @0,16;" 4> PRINT ALL ALTERNATIVE ITEM CODES? (Y/N)  ";
!Print @0,17;" 5> DISPLAY COST TOTALS ON THE SCREEN? (Y/N) ";
!Print @0,18;" 6> PRINT ONLY CATCH WEIGHT ITEMS? (Y/N)   ";
Return 
!
L_8000: Rem END OF FILE
If L8 Gosub L_4000
If SORT <> 1 Let L = 100;K9$ = " ",K9$ \ Gosub L_5800
if not(J8)
  Print #0;"\15\\15\";
  Print #0; Using "WAREHOUSE ## TOTALS "; Tab 20;W9;
  Print #0; Tab 41;"TAG TOTALS";
  Print #0; Using "-------#.##"; Tab 69;T1;
  Print #0; Using "----------#.##"; Tab 85;T1[1]
  Print #0; Tab 41;"BOOK TOTALS (incl. neg qty)";
  Print #0; Using "-------#.##"; Tab 69;T1[2];
  Print #0; Using "----------#.##"; Tab 85;T1[3];
  Print #0; Using "-------#.##";T1[4];
  Print #0; Using "---------#.##";TCV
  Print #0; Tab 41;"BOOK TOTALS (excl. neg qty)";
  Print #0; Using "-------#.##"; Tab 69;T1[7];
  Print #0; Using "----------#.##"; Tab 85;T1[8];
  If DSP_TOT
    Print @0,0;'CS';
    Print Using "WHSE ## TOTALS "; Tab 0;W9
    Print " "
    Print Tab 0;"TAG TOTALS";
    Print Using "-$$$$$$$$$#.##"; Tab 30;T1[1]
    Print Tab 0;"BOOK TOTALS (incl. neg qty)";
    Print Using "-$$$$$$$$$#.##"; Tab 30;T1[3];
    Print Using " -$$$$$$$$#.##";T1[4] * AVGCOST
    Print Tab 0;"BOOK TOTALS (excl. neg qty)";
    Print Using "-$$$$$$$$$#.##"; Tab 30;T1[8];
    Print " "
    !Print "PRESS <CR> TO CONTINUE "; \ Input Len 16384 + 1;""K1$
  End If 
End if
goto OUTEND
!
!Close 
!Chain "MX000"
!Stop 
!L_9100: Rem FOR SCREEN PRINT ONLY
!Print "\15\PRESS <CR> TO EXIT ";
!Input Len 16384 + 1;""K1$
!Goto L_9005
!Stop 
L_10000: Rem CONVERT
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = P1[0]
Gosub L_20000 \ SUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = P1[2];CNVTU[2] = 1;CNVTA = P1[0]
Gosub L_20000 \ CTUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = QAVAIL
Gosub L_20000 \ QAVAIL = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = QCOMMIT
Gosub L_20000 \ QCOMMIT = AMOUNT
SUNIT$ = "ERR ";CTUNIT$ = "ERR ";CUNIT$ = "ERR "
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
If P1[2] > 0 Mat Read #5,P1[2],10;CTUNIT$;
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
If PFU1[11] = -1 Let CUNIT$ = " CWT"
If PFU1[11] = -3 Let CUNIT$ = "LB  "
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = A1[0]
Gosub L_20000 \ BKUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2;CNVTA = C1
Gosub L_20000 \ AVGCOST = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 2;CNVTA = C1
Gosub L_20000 \ SCOST = AMOUNT
If A$[127,127] = "Y" ! "catch wgt - get lb cost (if needed)
  If PFU1[11] <> -3
    CNVTU[0] = 0;CNVTU[1] = -3;CNVTU[2] = 2;CNVTA = C1
    Gosub L_20000
    CWCOST = AMOUNT
  Else 
    CWCOST = AVGCOST
  End If 
End If 
Return 
!
SET_COST: Rem "to what's selected
If UNITX = 1 ! "average
  If W3[15] AND P9$[32,32] = "Y" Let COST = W3[15] Else Let COST = B[21]
End If 
If UNITX = 2 ! "base
  If W3[18] AND P9$[32,32] = "Y" Let COST = W3[18] Else Let COST = C4[4]
End If 
If UNITX = 3 ! "warehouse
  If W3[17] AND P9$[32,32] = "Y" Let COST = W3[17] Else Let COST = B[8]
End If 
If UNITX = 4 ! "last
  If W3[16] AND P9$[32,32] = "Y" Let COST = W3[16] Else Let COST = B[10]
End If 
If UNITX = 5
  If W3[14] AND P9$[32,32] = "Y" Let COST = W3[14] Else Let COST = PF_LOAD2
End If 
If UNITX = 6
  If WHMISC[2] AND P9$[32,32] = "Y" Let COST = WHMISC[2] Else Let COST = PRPARC[2]
End If 
C1 = COST
Return 
!
!L_10500: Rem SELECT UNIT
!Window Open @5,5; Size 70,12; Using " SELECT COST "
!L_10520: Print 'CS'
!Read #1,18,130;D1$;
!Print @5,3;" 1: ";D1$;
!Read #1,18,110;D1$;
!Print @40,3;" 4: ";D1$;
!Read #1,18,220;D1$;
!Print @5,4;" 2: BASE COST ";@40,4;" 5: ";D1$
!Read #1,18,120;D1$;
!Print @5,5;" 3: ";D1$;
!Read #1,18,230;D1$;
!Print @40,5;" 6: ";D1$
!Print @10,7;"Enter cost to use on the report  ";
!Print @42,7; \ Input Len 16384 + 1;""UNIT$
!If UNIT$ = "" And UNITX Let UNIT$ = Str$(UNITX)
!If Len(UNIT$) <> 1 Goto L_10520
!UNITX = UNIT$
!If UNITX < 1 Goto L_10520
!If UNITX > 6 Goto L_10520
!U5$ = " ",U5$
!Window Close 
!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Gosub L_25000
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
L_20160: Return 
!
L_25000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 3%
BUNIT = 0
If CNVTU[2] <> 5 Goto L_25180
BUNIT = 1
CNVTU[2] = 1
Goto L_25190
L_25180: BUNIT = 0
L_25190: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_25250,L_25350,L_25350,L_25640
!!Gosub ERR_SEARCH
L_25250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_25330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_25330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_25330
  Next X1[2]
  FLAG = 1 \ Goto L_25650
L_25330: Next X1[1]
FLAG = 0 \ Goto L_25650
L_25350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_25530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_25460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_25450
  Next CUNIT
  FLAG = 0 \ Goto L_25650
L_25450: If CUNIT = 0 Goto L_25530
L_25460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_25510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "Catch Weight Item
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_25530: Next X1[1]
If CNVTU[2] <> 1 Goto L_25580
If BUNIT Goto L_25580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_25580: If CNVTU[2] <> 2 Goto L_25630
If Not(CNVTU[1]) Goto L_25630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_25630: FLAG = 0 \ Goto L_25650
L_25640: Rem
L_25650: Rem RETURN FROM MODES 0-2
Return 
!
OUTEND: Rem EXIT ROUTINE
!If L9 = 20 Goto L_9100
!L_9005: Rem
L_9010: !Print 'CS'
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section

External Lib "libgeneral.lib"
Declare External Sub XMLtoExcel
Call XMLtoExcel(e$,"tcw_text.txt",rstr$)

  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
Try Call dxclose() ELSE REM
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
