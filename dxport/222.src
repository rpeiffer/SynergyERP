! >>> Program 222
!
! description INVOICE VERIFICATION JOURNAL
!
! loadsave -w -n 100,10 -o prog/dxport/222.dl4 src/222.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX222A - INVOICE VERIFICATION
Rem AUTHOR: ANTONOVICH   MAR 20, 1987
Rem LAST UPDATE: 10/88 REV 2.3
! last update: 12/16/1991 roman. non-stocks, PMASK$, and clean-up
! LAST UPDATE: 5/92 - ADD SERIAL NUMBER PRINT
! LAST UPDATE: 07/93 - commission by line
! ------- notes for Synergy/ERP (xrev9) upgrade fo Athens Janitor Supply Co ----
! 02/19/2013 - EVAP NOW STANDARD
! 11/08/01 jcs cct151792 - do no show commission on EVAP (OT 36 & 37)
! ------------------------------------------------------------------------------
! CUSTOM FOR AMWAX - 130017 - NO PRINT OF DESC 2 LINE
! CUSTOM ZEPHYR - 184332 - in L_5500 do not print certain totals
! ------------------------------------------------------------------------------
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 15, 2004  09:55:13
Rem /w/papermaster/r2002/
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time,getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Sub GetCostLevels
!Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2],Cost_lev[3]
Com 3%,PFU2[6],CNVTA,A[33]
Com 2%,s9[9],1%,INTCO,type[2]
Com rstr$[2000]
! parameters for mx222b
COM 1%,S7,P1
COM 2%,W1,DIV

If Err 0 Gosub ERR_TRAP
dim GLDT$[10]
Dim P0$[20],CUNIT$[4],SUNIT$[4],PUNIT$[4],UNIT$[4],PMASK$[15]
dim gldet$[1],F$[16]
Dim 1%,H4[2],S2,S7,OLS2[1],L3[3],F,X1,EUN[2],EFLG[5]
Dim 2%,H0[12],H5[16],L4[3],L6[5],X2,D9[5],LTAX2
Dim C1$[30],C2$[30],C3$[20],L1$[60],L2$[20],S1$[118]
Dim 3%,T2[20],T3,L5[3],T7[13],L7[12],TT2[25],OLM[6],LTAX1
Dim 3%,PUNIT,SUNIT[3],UNIT,LDCOST,T0,CFIN[8],S3[17],UNF[6]
Dim 1%,E,F9,I,J1,J2,J8,J9,P0,W0,X,3%,OREF[5]
Dim 2%,EX[20],R1,R5,R6,Q0[1],OTC,SLSM[9],3%,INVNET,SCOM[4]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],ARDATE$[8],D9$[10]
Dim 3%,J,X3,T4[999,4],T5[999,4],T6[999,4],T9[20],UN[2]
Dim K1$[50],K2$[40],K3$[20],X$[20],D1$[8],T9$[26],K12$[4],S$[118]
Dim F1$[16],P9$[50],P60$[50],SNK$[50],SN1$[54],P1$[156],DT$[5]
Dim msg$[100],CUSTOM_CUSTOMER$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim 3%,tmp3
B$=" ",B$
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!Try 
!call dxopen() ! may not need this! NEEDS FOR DXTEST RUN!!
!Else
	Rem
!End try
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
For J = 2 To 12
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "1840","-1856","-1872","-1888","-1808","-1792","-2256","-1","-1728","-2944 ","-1824"
!#1,CNTRL, #2-ROH, #3-ROS, #4-ROT, #5-ROL, #6-cust, #7-prod, #8-sregtot, #9-sort

!

Mat Read #1,0,100;ARDATE$;
Mat Read #1,115;D9;
Read #1,18,30;D9$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,3;CNAME$;
Read #1,2,200;OTC;
MAT READ #1,115,60;CUSTOM_CUSTOMER$;
CUSTOM_CUSTOMER$=UCASE$(TRIM$(CUSTOM_CUSTOMER$))
MULTIS = 0 \ If P9$[21,21] = "Y" Let MULTIS = 99
Read #1,88,800;F1$;
W0 = D9[5] \ If W0 <= 0 Let W0 = 1
If W0 > 100 
	E$="TOO MANY WHSE'S!" \ Goto ERR_MSG ! OUTEND
Endif
Dim 3%,T8[W0,6],3%

J8 = 0 
Try J9 = Chf(0) Else Let J8=49
J9 = 55 \ If J8 Let J9 = 20;scrprt=9
S1 = 5;S2 = 6;S7 = 0
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
! check if any - moved from 222
LET X$=" 5"                                       
SEARCH #2,3,1;X$,V1,V2                            
If Not(v2)                       
	IF X$[1,2]=" 5" Goto L_900 ! RETURN 1                          
	IF X$[1,2]=" 6" Goto L_900 ! RETURN 1     
Endif
E$="NO INVOICES TO BE VERIFIED "
Goto ERR_MSG ! outend
L_900: Rem TYPE
EFLG=0;Message$=""
Call DXGET("RN222",TMP$)
! call programdump("/tmp/ivlog0!","")
If tmp$="" 
	tmp1$="OK - Report Not Run"
	Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
	goto L_9020
Endif
!Print @0,22;"HAVE INVOICES BEEN PRINTED? (Y/N/E) ";'CE';
Call DXGet("RPRTJ",J$)
K2$ = UCASE$(Trim$(J$)) \ if k2$="" let K2$="N" ELSE LET K2$="Y"
If K2$ = "Y" Let S7 = S2
If K2$ = "N" Let S7 = S1
If Not(S7) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection is Y or N! "
L_1000: Rem CASH/CREDIT
!Print @0,14;'CE';"ENTER TYPE:  0: ALL,  1: CASH,  2: ORDERS ";
Call DXGet("JTYPE",tmp$) ! 
Let tmp3=tmp$
If tmp3 < 0 OR tmp3> 2 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Type Selection not found " !Goto L_1000
P1 = tmp3
P0 = P1
TYPE = P1;TYPE[1] = P1;TYPE[2] = P1
L_1100: Rem "======= which warehouse(s) to print
Call DXGet("WHS",tmp$) \ tmp3=tmp$
If Fra(tmp3) Or tmp3 < 0 Or tmp3 > D9[5] let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse is 0 to 99! "!Goto L_1100
w1=tmp3

L_1140: Rem "========= which division(s) to print
!Print @0,16;'CE';"ENTER DIVISION #,   0: FOR ALL, OR  E: TO EXIT ";
Call DXGet("DIV",tmp$) \ let tmp3=tmp$
If Fra(tmp3) Or tmp3 < 0 Or tmp3 > 99 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division is 0 to 99! "!Goto L_1140
DIV = tmp3
Call dxget("GLDTSUM",tmp$) \ J$ = UCASE$(trim$(tmp$))                            
glDT$ = J$                                                                  
If P9$[17,17] <> "Y" Let glDT$ = "N" 
IF COST_LEV[3]=0 LET GLDT$="N"
If glDT$ = "S" Let GLDET = 0                                                
If glDT$ = "D" Let GLDET = 99  
IF GLDT$="O" let gldet=1 ! order total option
If glDT$ <> "S" And glDT$ <> "D" and gldt$<>"N" and gldt$<>"O"
	Let eflg = eflg + 1;Message$ = Message$ + Str$(eflg) + "Invalid G/L Option! " !let gldet=0 ! Goto ASK_GL  
endif
If SCRPRT<>0 and gldt$<>"N" ! browser option
	Let eflg = eflg + 1;Message$ = Message$ + Str$(eflg) + "G/L Option is Not Available with Browser Option " 
endif
L_1165: !Print @0,17;'CE';"PRINT  1: REGULAR,  2: TOTAL PAGES ONLY (1-2)   ";
call dxget("RGTT",tmp$)
SUMM=tmp$
If Fra(SUMM) Or SUMM < 1 Or SUMM > 3 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Select 1 or 2! " !Goto L_1165
IF SUMM=3
	if gldt$="S" or gldt$="D" or gldt$="O"
		let eflg=eflg+1;Message$=Message$+str$(eflg)+"G/L is not available for Order Margin Report "
		goto L_1500:
	endif
	close #8,#11  ! close files not needed by 222b
	CHAIN "222B.dl4" ! order margin exception report
end if
SUMM = SUMM - 1
! If SUMM Goto L_1500  ! CANNOT BYPASS ON WEB - STILL NEEDS PROMPTS
L_1222: !Print @0,22;'CE';"PRINT INVOICE LINES IN  D: DETAIL OR  S: SUMMARY, OR  E: TO EXIT ";
call dxget("LDTSUM",tmp$) \ j$=Trim$(tmp$)
If SUMM=1 let j$="S"
DT$=J$
If DT$ = "S" Let LNDETL = 0
If DT$ = "D" Let LNDETL = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto L_1222
If SUMM=1 let j$="S"
DT$=J$
If DT$ = "S" Let LNDETL = 0
If DT$ = "D" Let LNDETL = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto L_122
let pgbrk=0
If lndetl=99 ! detail
	call dxget("PGBRK",tmp$)
	IF Trim$(tmp$)<>"" let pgbrk=99
endif

L_1500: Rem "============================ sort by invoice #
if eflg<>0 goto startproc: 
IF GLDT$="S" or GLDT$="D" or GLDT$="O"
	Read #1,88,464;F$; \ Open #33,F$
	F$ = " ",F$ \ F$[1,6] = "DFAULT"
	Search #33,2,1;F$,V1,E
	if e<>0
		Eflg=eflg+1;Message$=Message$+Str$(EFLG)+" G/L - A/R INTERFACE CONTROL NOT SETUP PROPERLY "
		goto startproc:
	endif 
	Close #33
	Read #1,88,64;F$;
	Open #33,F$
	F$ = " ",F$
	Search #33,2,1;F$,V1,E
	If E=1 ! NOT FOUND
		let e=2\search #33,1,0;f$,v1,e
		if e<>0
			let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Error In g/l-a/r file..TRY LATER..."
			goto startproc:
		endif
		search #33,4,1;f$,v1,e
			if e<>0
			let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Error adding In g/l-a/r file..TRY LATER..."
			goto startproc:
		endif
		Close #33
	else
		Eflg=eflg+1
		IF NOT(E)
			Message$=Message$+Str$(EFLG)+" INVOICES BEING PROCESSED ELSEWHERE.(G/L)..TRY LATER..."
		ELSE
			Message$=Message$+str$(eflg)+"Error "+str$(e)+" in g/l temp file "
		endif
	endif
endif
startproc:! 
If Eflg>0 ! found an issue
	let tmp$="THERE ARE "+Str$(eflg)+" ISSUES THAT NEED FIXING.. "+Message$
	ReturnStatus=1 ! 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
	call CreateNetStatus(e$,ReturnStatus,tmp$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
	  Goto L_9020 ! OutEnd - 
Endif
If SCRPRT ! dx xml, setup rstr$ (PRINT TO BROWSER)
  !<section>
  tmp$ = bsdel$,"222",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
  tmp$ = "MESSAGE" ! PER ALL - NO XCEL OPTION! (MULTI LINE & MULTI SECTION!!)
  call addtostr(e$,rstr$,tmp$+rdel$)
  Goto OutEnd ! don't even process!!
Endif
!Print @0,22;"Sorting...please wait";'CE'; \ Signal 3,0
K1$ = " ",K1$
L_1520: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1550
Search #9,5,1;K1$,R1,E
If E Gosub ERR_SEARCH
Goto L_1520
L_1550: Rem SORT
K1$ = " ",K1$ \ K1$ = S7 Using "##     "
K3$ = K1$
L_1570: Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
If K1$[1,2] <> K3$[1,2] Goto L_1900
Mat Read #2,R1,78;H4;
Mat Read #2,R1,104;H5;
If W1 If W1 <> H4[2] Goto L_1570
Mat Read #2,R1;H0; \ Mat Read #4,H0[3],8;T2;
If Not(P1) Goto L_1598
If P1 = 1 If T2[10] = 0 Goto L_1570
If P1 = 2 If T2[10] <> 0 Goto L_1570
L_1598: If DIV If DIV <> H5[8] Goto L_1570
Mat Read #2,R1,512;OREF;
K2$ = " ",K2$ \ K2$ = OREF[1] Using "##########"
K2$[11] = H0[7] Using "######"
Search #9,4,1;K2$,R1,E
If E Gosub ERR_SEARCH
Goto L_1570
L_1900: ! Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
!If J8 Print 'CS';
P1 = P0 \ J2 = 0
If Not(P1) Let P1 = 1
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If ! LET'S NOT DO THIS UNTIL END OF REPORT?
L_1920: ! If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
J1 = 90
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
Mat Read #2,R1,0;H0; \ Mat Read #4,H0[3],8;T2;
If P1 = 1 If T2[10] = 0 Goto L_2000
If P1 = 2 If T2[10] <> 0 Goto L_2000
Mat Read #2,R1,446;P0$;
Mat Read #2,R1,78;H4;
Mat Read #2,R1,104;H5;
Mat Read #2,R1,278;SLSM;
Mat Read #2,R1,318;SCOM;
Mat Read #2,R1,512;OREF;
W0 = H4[2] \ If W0 <= 0 Let W0 = 1
Mat Read #3,H0[2],8;S1$;
Mat Read #4,H0[3],8;T2;
T2[4] = T2[4] + T2[6]
X2 = H0[8] \ Gosub L_7700 \ D1$ = X$
T3 = T2[7]
Gosub L_3000 \ Gosub L_3200
If SUMM Goto L_2130
Gosub L_5800
Gosub L_5000
L_2130: Gosub L_2200
Gosub L_4500
If SUMM Goto L_2150
Gosub L_5200
L_2150: Gosub L_2500
Goto L_2000
L_2200: Rem TOTALS CALC
For J = 0 To 5
  If J = 2 Goto L_2240
  T9[J] = T9[J] + T2[J]
L_2240: Next J
T9[2] = T9[2] + T3
If T2[10] <= 0 Goto L_2310
If T2[10] > 3 Goto L_2310
T6[H5,T2[10] - 1] = T6[H5,T2[10] - 1] + T2[12]
T6[H5,4] = T6[H5,4] + T2[0]
T5[H5,T2[10] - 1] = T5[H5,T2[10] - 1] + T2[0]
If T2[12] >= T2[0] Goto L_2310
T4[H5,T2[10] - 1] = T4[H5,T2[10] - 1] + (T2[0] - T2[12])
L_2310: Rem
INVNET = FNR((H5[13] - H5[14]) - (H5[13] * CFIN[8] / 100))
Return 
L_2500: Rem TTLS
T2[2] = T3
For J = 0 To 5
  T8[0,J] = T8[0,J] + T2[J]
  T8[W0,J] = T8[W0,J] + T2[J]
Next J
T8[0,6] = T8[0,6] + T9[6]
T8[W0,6] = T8[W0,6] + T9[6]
Return 
L_3000: Rem CUST NAME
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,544;CFIN;
Mat Read #6,R6,388;C3$;
Return 
L_3200: Rem GET BILLTO
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E
If E > 1 Gosub ERR_SEARCH
If E If H0[1] = H0[4] Gosub ERR_SEARCH
If E If H0[1] <> H0[4] Let H0[1] = H0[4] \ Write #2,R1,4;H0[1]; \ Goto L_3200
Mat Read #6,R6,30;C2$;
Read #6,R6,388;C3$[10,16];
If H0[1] = OTC Let C2$ = S1$
Return 
L_4000: Rem TOTAL PRINT
J1 = J1 + 1 \ Gosub L_5800
Print #0;"\15\\15\";
Print #0; Tab 10;"** VERIFICATION TOTALS **";
Print #0; Using "-----###.##"; Tab 65;T9[1];
Print #0; Using "-----#.##"; Tab 75;T9[3];
Print #0; Using "-----#.##"; Tab 84;T9[4];
Print #0; Using "-----#.##"; Tab 93;T9[2];
Print #0; Using "-----#.##"; Tab 102;T9[5];
Print #0; Using "-----###.##"; Tab 116;T9[0]
If P1 = 1 Gosub L_7000 \ J1 = 90 \ F9 = 0
If Not(P0) Return 
J1 = 75 \ Gosub L_5800
For J = 0 To 20 \ T9[J] = 0
Next J
For W0 = 1 To D9[5]
  For J = 0 To 6
    If T8[W0,J] Gosub L_4090
  Next J
Next W0 \ W0 = 0
L_4090: Rem TOTAL PRINT
J1 = J1 + 6 \ Gosub L_5800
If W0 Print #0;"\15\\15\";D9$;":";W0;
If Not(W0) Print #0;"\15\\15\";" ALL ";D9$;"S:";
Print #0; Tab 20;"** VERIFICATION TOTALS **";
Print #0; Using "-----###.##"; Tab 60;T8[W0,1];
Print #0; Using "-----#.##"; Tab 73;T8[W0,3];
Print #0; Using "-----#.##"; Tab 84;T8[W0,4];
Print #0; Using "-----#.##"; Tab 96;T8[W0,2];
Print #0; Using "-----#.##"; Tab 108;T8[W0,5];
Print #0; Using "-----###.##"; Tab 120;T8[W0,0]
Mat Read #8,W0,42;T7;
For X1 = 0 To 6
  T7[X1] = T7[X1] + T8[W0,X1]
  T7[X1 + 7] = T7[X1 + 7] + T8[W0,X1]
Next X1
Print #0; Tab 10;"\15\** M-T-D REGISTER TOTALS **";
Print #0; Using "----------#.##"; Tab 57;T7[1];
Print #0; Using "-------#.##"; Tab 71;T7[3];
Print #0; Using "-------#.##"; Tab 82;T7[4];
Print #0; Using "-------#.##"; Tab 94;T7[2];
Print #0; Using "-------#.##"; Tab 106;T7[5];
Print #0; Using "----------#.##"; Tab 113;T7[0]
Print #0; Tab 10;"\15\** Y-T-D REGISTER TOTALS **";
Print #0; Using "----------#.##"; Tab 57;T7[8];
Print #0; Using "-------#.##"; Tab 71;T7[10];
Print #0; Using "-------#.##"; Tab 82;T7[11];
Print #0; Using "-------#.##"; Tab 94;T7[9];
Print #0; Using "-------#.##"; Tab 106;T7[12];
Print #0; Using "----------#.##"; Tab 117;T7[7]
J = 7 \ If W0 Return 
Return 
L_4400: Rem PRINT SERIAL NO'S
If L3 <> 0 Or L7[4] = 0 Return 
SNO = 0 \ If P1$[8,8] <> "Y" Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[7] Using "######";SNK$[7,9] = L3[2] Using "###"
L_4420: Search #11,3,1;SNK$,R11,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[7] Or LN <> L3[2] Goto L_4480
Mat Read #11,R11,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ Gosub L_5800
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ J1 = J1 + 2
Return 
L_4500: Rem THRU LINES
T9[6] = 0
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4530: Search #5,3,1;J2$,R5,E
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3; \ Mat Read #5,R5,16;L4;
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L1$; \ Mat Read #5,R5,168;L7;
Mat Read #5,R5,250;UN; \ Mat Read #5,R5,140;L2$;
Mat Read #5,R5,256;OLS2; \ Mat Read #5,R5,260;S3;
Mat Read #5,R5,404;OLM; \ Mat Read #5,R5,446;EUN;
Mat Read #5,R5,452;UNF;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
For X = 0 To 3 \ SUNIT[X] = 0 \ Next X \ CUNIT = 0;PUNIT = 0
PUNIT$ = "   ";CUNIT$ = "    ";SUNIT$ = "    ";P1$ = " ",P1$
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let OLS2[0] = 3
If OLS2[0] = 3 Or L3[2] > 990 Goto L_4860
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_4860
If Not(L3)
  Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2;
  Mat Read #7,L4,0;P1$; \ Mat Read #7,L4,256;A;
End If 
Gosub L_30000
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000 \ SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000 \ PUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
Gosub L_20000 \ CUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000 \ L6[1] = AMOUNT
If UN[0] > 0 Mat Read #10,UN[0],10;SUNIT$;
If UN[1] > 0 Mat Read #10,UN[1],10;PUNIT$;
If UN[2] > 0 Mat Read #10,UN[2],10;CUNIT$;
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UN[2] = -1 Let CUNIT$ = "CWT "
If UN[2] = -2 Let CUNIT$ = "LOT "
If UN[2] = -3 Let CUNIT$ = "LB  "
L_4860: If L3[2] > 900 Let L5[3] = 0 - L5[3]
If SUMM Goto L_4900
Gosub L_5800
If LNDETL Gosub L_5500 Else Gosub L_6400
Gosub L_4400
L_4900: Rem.
Goto L_4530
L_5000: Rem PRINT LINE
J1 = J1 + 2 \ Gosub L_5800 \ Print #0;" "
Print #0; Using "########";OREF[1];
Print #0; Using "######"; Tab 9;H0[7];
Print #0; Tab 16;D1$;
Print #0; Using "######"; Tab 25;H0[4];
Print #0; Tab 32;C1$[1,9];
Print #0; Tab 42;P0$;
Print #0; Using "###"; Tab 62;H0[11];
Print #0; Using "BILL TO: ######"; Tab 66;H0[1];
Print #0; Tab 82;C2$[1,20];
Print #0; Using ": ##"; Tab 105;D9$;H4[2];
Print #0; Using "###.##%"; Tab 123;CFIN[8];
Print #0;""
Print #0;""
If Not(LNDETL) Goto L_5140
Print #0; Tab 4;"LINE"; Tab 10;"ITEM CODE"; Tab 25;"DESCRIPTION";
Print #0; Tab 58;"ORDERED"; Tab 69;"SHIPPED"; Tab 78;"BACKORDER";
Print #0; Tab 92;"U/M"; Tab 100;"PRICE";
Print #0; Tab 124;"EXTEN."
Gosub L_5800
Goto L_5190
L_5140: Rem 1 LINE SUMMARY
Print #0; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 18;"DESCRIPTION";
Print #0; Tab 53;"SHIPPED";
Print #0; Tab 62;"EXT PRICE"; Tab 74;"EXT COST";
Print #0; Tab 86;"G PROFIT"; Tab 97;"PCT";
Print #0; Tab 104;"C PROFIT"; Tab 115;"COM%";
Print #0; Tab 124;"COMM $"
Gosub L_5800
L_5190: Return 
L_5200: Rem "=========================================== invoice totals
Print #0;"" \ Gosub L_5800
If J1 + 3 >= J9 Let J1 = 99 \ Gosub L_5800
Print #0; Using "INVOICE ######## TOTALS: "; Tab 3;"*** ";OREF[1];
X$ = "-----#.##"
If P1 = 1 If T2[10] Gosub L_5300
If H5[13] If EX[15] If FNR((H5[13] - H5[14]) / H5[13] * 100) < EX[15] Print #0;" *** LOW GP ***"; \ Goto L_5214
If EX[1] If FNR(H5[13] - H5[14]) < EX[1] Print #0;" *** LOW GP ***";
Print #0;"" \ Gosub L_5800
If MULTIS Gosub L_6000
Print #0; Tab 25;"GP"; Tab 32;"PCT"; Tab 43;"CP";
If Not(MULTIS) Print #0; Tab 49;"RATE"; Tab 55;"COMMISSION";
L_5214: Print #0; Tab 68;"MDSE AMT"; Tab 81;"DISC"; Tab 87;"MISC/HAND";
Print #0; Tab 97;"TAX AMT"; Tab 105;"FREIGHT"; Tab 113;"FRT COST";
Print #0; Tab 122;"INV TOTAL" \ Gosub L_5800
Print #0; Using X$; Tab 19;(H5[13] - H5[14]);
T0 = 0 \ If H5[13] Let T0 = FNR((H5[13] - H5[14]) / H5[13] * 100)
Print #0; Using "---#.##"; Tab 28;T0;
Print #0; Using X$; Tab 37;INVNET;
If MULTIS Goto L_5260
IF H5[7]<>36 AND H5[7]<>37 ! don't show on EVAP
	Print #0; Using "###.##"; Tab 47;SLSM[5];
	Print #0; Using X$; Tab 56;SCOM[0];
Endif
L_5260: Print #0; Using "------#.##"; Tab 66;T2[1];
Print #0; Using X$; Tab 76;T2[3];
Print #0; Using X$; Tab 87;T2[4];
Print #0; Using X$[2]; Tab 96;T2[7];
Print #0; Using X$[2]; Tab 104;T2[5];
Print #0; Using X$[2]; Tab 113;T2[20];
Print #0; Using "------#.##"; Tab 121;T2[0]
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
IF PGBRK<>0 LET J1=99 
Return 
L_5300: Rem CASH
Print #0; Using "PAID BY: #"; Tab 25;T2[10];
C2$ = "CASH" \ If T2[10] = 2 Let C2$ = "CHECK ########"
If T2[10] <> 3 Goto L_5340
L_5340: Print #0; Tab 36;C2$[1,15];
Print #0; Using " PAID:-------#.##";T2[12];
Return 
L_5500: Rem "============================== line detail
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #0; Tab 6;J2$[10,10]; \ Goto L_5520
Print #0; Using "###"; Tab 5;L3[2];
L_5520: Print #0; Tab 10;L2$[1,12];L2$[14,16]; Tab 25;L1$[1,30];
If OLS2[0] = 3 Goto L_5565
Print #0; Using "--------.##"; Tab 56;SUNIT[1];SUNIT[3];SUNIT[2];
Print #0; Using PMASK$; Tab 92;SUNIT$;PUNIT;
Print #0;"/";PUNIT$;
If COSTCHG Print #0;"*";
Print #0; Using "-----##.##"; Tab 121;L5[3];
L_5565: Print #0;""
If P9$[26,26] <> "Y" Goto L_5580
IF CUSTOM_CUSTOMER$<>"AMWAX" ! 130017 - NO PRINT
	Print #0; Tab 25;L1$[31,50];
	If OLS2[0] = 3 Print #0;L1$[51,60];
ENDIF
L_5580: Rem
If OLS2[0] = 3 Goto L_5660
If P60$[42,42] = "Y"
  Print #0;"" \ J1 = J1 + 1
  Print #0; Using "TAX CODE:###";L6[5];
  Print #0; Using "------.##";" TAX AMOUNT: ";LTAX1;
  Print #0; Using "(###.##%)";LTAX2;
End If 
T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
if custom_customer$<>"ZEPHYR" ! custom 184332 - Zephyr no print
	Print #0; Using "G PROFIT -----#.##  "; Tab 49;L5[3] - S3[12];
	Print #0; Using "(---#.##%)";T0;
	Print #0; Using "C PROFIT -----#.##"; Tab 81;LDCOST;
	Print #0; Using "###.##"; Tab 100;"COM% ";OLM[5];
	Print #0; Using "-------#.##"; Tab 112;"COM$";OLM[6];
Endif ! of custom for zephyr
L_5660: Print #0;"" \ Gosub L_5800
Return 
L_5800: Rem HEADS
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 222A - ";T9$;
Print #0; Tab 46;"I N V O I C E   V E R I F I C A T I O N";
If W1 Print #0; Tab 100;D9$;":";W1
If Not(W1) Print #0; Tab 100;"ALL ";D9$;"S"
If Not(P1) Print #0; Tab 57;"A L L   T Y P E S";
If P1 = 1 Print #0; Tab 52;"C A S H   C U S T O M E R S";
If P1 = 2 Print #0; Tab 50;"C R E D I T   C U S T O M E R S";
If DIV Print #0; Tab 100;"DIVISION:";DIV Else Print #0; Tab 100;"ALL DIVISIONS"
If Not(F9) Goto L_5900
Print #0;"\15\";
Print #0; Tab 1;"ENTD BY"; Tab 11;"CASH TND/CHNG"; Tab 26;"INV$/SHORT";
Print #0; Tab 41;"CHKS TND/CHNG"; Tab 56;"INV$/SHORT";
Print #0; Tab 74;"CRED CARD"; Tab 85;"INV$/SHORT"; Tab 114;"DRAWER TOTAL"
Print #0;" "
Return 
L_5900: Print #0;"\15\";
If SUMM Goto L_5940
Print #0; Tab 0;"INVOICE";
Print #0; Tab 10;"ORDER";
Print #0; Tab 16;"INV DATE";
Print #0; Tab 25;"CUST CODE / NAME";
Print #0; Tab 42;"PO NUMBER";
Print #0; Tab 62;"SL#";
L_5940: Print #0; Tab 66;"MDSE AMT";
Print #0; Tab 75;"DISCOUNT";
Print #0; Tab 86;"MISC/HND";
Print #0; Tab 96;"TAX AMT";
Print #0; Tab 108;"FREIGHT";
Print #0; Tab 120;"INV TOTAL";
Print #0;" "
Print #0;"\15\";
Return 
L_6000: Rem "============================== salesman commissions
If Not(SLSM[0] + SLSM[1] + SLSM[2] + SLSM[3] + SLSM[4]) Goto L_6110
If H5[7]=36 or h5[7]=37 Return  ! " not yet
Print #0; Tab 64;" MERCH $    COST $" \ J1 = J1 + 1
For X5 = 0 To 4
  If Not(SLSM[X5]) Goto L_6100
  K12$ = " ",K12$;K12$ = SLSM[X5] Using "###"
  Search #12,2,1;K12$,V1,E \ If E Gosub ERR_SEARCH
  Mat Read #12,V1,0;S$;
  Print #0; Using "SLSM ### "; Tab 30;SLSM[X5];S$[1,25];
  Print #0; Using "-----#.## "; Tab 64;SMER[X5];SCST[X5];
  Print #0; Using " COMMIS  ###.##%";SLSM[X5 + 5];
  Print #0; Using " COMMIS -----#.##";SCOM[X5]
  Gosub L_5800
L_6100: Next X5
L_6110: Return 
L_6400: Rem ORDER LINE SUMMARY (1 LINER)
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #0; Tab 2;J2$[10,10]; \ Goto L_6420
Print #0; Using "###"; Tab 1;L3[2];
L_6420: Print #0; Tab 5;L2$[1,12]; Tab 18;L1$[1,30];
If OLS2[0] = 3 Goto L_6485
Print #0; Using "--------.##"; Tab 49;SUNIT[3];
Print #0; Using "-------#.##"; Tab 60;L5[3];
Print #0; Using "-------#.##"; Tab 71;S3[12];
If COSTCHG Print #0; Tab 82;"*";
Print #0; Using "-------#.##"; Tab 83;FNR(L5[3] - S3[12]);
T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
Print #0; Using "---#.##"; Tab 94;T0;
LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
Print #0; Using "-------#.##"; Tab 101;LDCOST;
Print #0; Using "###.##"; Tab 113;OLM[5];
Print #0; Using "-------#.##"; Tab 119;OLM[6];
L_6485: Print #0;""
Return 
L_7000: Rem CASH TTLS
F9 = 9 \ J1 = 90
Gosub L_5800
For I = 0 To 999
  If T6[I,4] Gosub L_7030
Next I
Goto L_7200
L_7030: Rem PRINT IT
J1 = J1 + 2 \ Gosub L_5800
Print #0; Using "###"; Tab 1;I;
Print #0; Using "-----,--#.##"; Tab 11;T6[I,0];T5[I,0]; Tab 41;T6[I,1];
Print #0; Using "-----,--#.##";T5[I,1]; Tab 71;T6[I,2];T5[I,2];
T6[I,3] = FNR(T6[I,0] + T6[I,1] + T6[I,2]) \ T5[I,3] = FNR(T5[I,0] + T5[I,1] + T5[I,2])
Print #0; Using "---,---,--#.##"; Tab 101;T6[I,3];T6[I,4]
Gosub L_7300
Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[I,0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";T4[I,1]; Tab 71;T9[13];T4[I,2];
T4[I,3] = FNR(T4[I,0] + T4[I,1] + T4[I,2]) \ Gosub L_7300
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[I,3]
Print #0;" "
For X = 0 To 4 \ T6[0,X] = T6[0,X] + T6[I,X]
  T5[0,X] = T5[0,X] + T5[I,X] \ T4[0,X] = T4[0,X] + T4[I,X]
  T6[I,X] = 0
Next X \ Return 
L_7200: Rem TOTALS
If Not(T5[0,3]) Goto L_7280
J1 = J1 + 2 \ Gosub L_5800
Print #0;"\15\"; Tab 1;"TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;T6[0,0];T5[0,0]; Tab 41;T6[0,1];
Print #0; Using "-----,--#.##";T5[0,1]; Tab 71;T6[0,2];T5[0,2];
Print #0; Using "---,---,--#.##"; Tab 101;T6[0,3];T6[0,4]
I = 0 \ Gosub L_7300
Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[0,0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";T4[0,1]; Tab 71;T9[13];T4[0,2];
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[0,3]
Print #0;"\15\";"PROOF TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;(T6[0,0] - T9[11]); Tab 41;(T6[0,1] - T9[12]);
Print #0; Using "-----,--#.##"; Tab 71;(T6[0,2] - T9[13]);
Print #0; Using "---,---,--#.##"; Tab 101;(T6[0,3] - T9[14]);T4[0,3]
L_7280: Gosub L_7400
Return 
L_7300: Rem CHG PAID
T9[11] = FNR(T6[I,0] - (T5[I,0] - T4[I,0]))
T9[12] = FNR(T6[I,1] - (T5[I,1] - T4[I,1]))
T9[13] = FNR(T6[I,2] - (T5[I,2] - T4[I,2]))
T9[14] = FNR(T6[I,3] - (T5[I,3] - T4[I,3]))
Return 
L_7400: Rem DRAW AUD
For X = Len(F1$) To 1 Step -1
  If F1$[X,X] = "" Goto L_7420
  If F1$[X,X] <> " " Goto L_7430
L_7420: Next X
If X <= 1 Goto L_7480
L_7430: T9[1] = (T6[0,0] - T9[11]) \ T9[2] = (T6[0,1] - T9[12])
T9[3] = (T6[0,2] - T9[13]) \ T9[4] = (T6[0,3] - T9[14])
T9[0] = T4[0,3]
If W1 Let J2$ = (100 + W1) Using "###"
If W1 Goto L_7500
For X1 = 1 To D9[5]
  J2$ = (100 + X1) Using "###"
  Gosub L_7500
Next X1
If F Goto L_7655
L_7480: If Err 0 Gosub ERR_TRAP
Return 
L_7500: Rem TRY FILE
F1$[X + 1] = J2$[2]
!If Err 0 Rem
Try Close #21  Else REM
If Err 0 Goto L_7480
Ropen #21,F1$
If Err 0 Gosub ERR_TRAP
Print #0;"  WHSE: ";J2$[2]
Gosub L_5800
For F = 1 To Chf(21) - 1
  Try
	Read #21,F;H4[0],H4[1],H4[2],X2,TT2[11],T2[12],J2$;
  Else
    Goto BPAL
  End try
  Gosub L_7700
  Print #0; Using "### "; Tab 1;H4[1];
  If H4[2] > 1 If H4[2] < 4 Goto L_7580
  Print #0; Using "-----,--#.##"; Tab 11;T2[12];
L_7580: Print #0; Tab 28;X$;
  If H4[2] = 2 Print #0; Using "-----,--#.##"; Tab 41;T2[12];
  J3$ = " ",J3$ \ J3$ = "OTHER TYPE" \ If H4[2] = 1 Let J3$ = "CASH"
  If H4[2] = 2 Let J3$ = TT2[11] Using "CHECK #########"
  If H4[2] <> 3 Goto L_7602
  J3$ = "CREDIT CARD" \ If TT2[11] = 1 Let J3$ = "MASTER CARD"
  If TT2[11] = 2 Let J3$ = "VISA CARD"
  If TT2[11] = 3 Let J3$ = "AMER. EXPRESS"
L_7602: Print #0; Tab 56;J3$;
  If H4[2] = 3 Print #0; Using "-----,--#.##"; Tab 71;T2[12];
  Print #0; Using "---,---,--#.##"; Tab 101;T2[12]; Tab 117;J2$[1,15]
  Gosub L_5800
  If H4[2] = 1 Let T9[1] = T9[1] + T2[12]
  If H4[2] = 2 Let T9[2] = T9[2] + T2[12]
  If H4[2] = 3 Let T9[3] = T9[3] + T2[12]
  If H4[2] = 4 Let T9[0] = T9[0] + T2[12]
  T9[4] = T9[4] + T2[12]
  BPAL: ! avoid be 52!
Next F
If Not(W1) Return 
L_7655: J1 = J1 + 1 \ Gosub L_5800
Print #0;"\15\";"FINAL PROOF";
Print #0; Using "-----,--#.##"; Tab 11;T9[1]; Tab 41;T9[2];
Print #0; Using "-----,--#.##"; Tab 71;T9[3];
Print #0; Using "---,---,--#.##"; Tab 101;T9[4];T9[0]
Return 
L_7700: Rem  *DATE X2 TO X$
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! ALWAYS UB 5+
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,E$,RSTR$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If OLS2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$
Call programdump("tmp/iv222se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
if gldt$="D" or gldt$="S" or gldt$="O"! error clear temp file
	Read #1,88,64;F$;
	Open #33,F$
	F$ = " ",F$
	Search #33,2,1;F$,V1,E
	If not(E)
		let e=3\search #33,1,0;f$,v1,e
		search #33,4,1;f$,v1,e
	endif
endif
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
L_9100: Rem END
If P1 >= 2 Let P0 = 9
Gosub L_4000
! If P0 If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For I = 0 To 20 \ T9[I] = 0 \ Next I
If P0 Goto OUTEND
P1 = P1 + 1 \ If P1 > 2 Goto OUTEND
Goto L_1920
End 
OUTEND: Rem EXIT
If SCRPRT ! dx xml (TO BROWSER NOT POSSIBLE - LET IT GET ERROR?)
	tmp$="CANNOT RUN TO BROWSER - NO REPORT!!!!!!"
	call addtostr(e$,rstr$,tmp$+rdel$)
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  !External Lib "libgeneral.lib"
  !Declare External Sub XMLtoExcel
  !Call XMLtoExcel(e$,"226a.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
Else
	if gldt$="D" or gldt$="S" or gldt$="O"
	    S9[0] = S7;S9[1] = TYPE[2];S9[2] = SWH;S9[3] = JRNL;S9[4] = GLDET;S9[5] = EWH
		Chain "222AGL.DL4"		
		Chain Write T8,S9,intco,rstr$
	endif
	tmp$="OK - REPORT COMPLETE"
	Call SetOutput(e$,rstr$,1,tmp$) ! send ok and message
End If 
L_9020: ! bypass mssg - just exit
!Print 'CS'
!Chain "MX000C"
!Chain "MX000"
!Stop 
Try call dxclose() Else Rem
END
Rem {begin rtn.error.s}
Err_Trap: ! pm 
!
include "src/callmainerrnet.inc"
End
!
Rem {end rtn.error.s}