! >>> Program 114
!
! description  S/C Price List Customer Version
!
! loadsave -w -n 100,10 -o prog/dxport/114.dl4 src/114.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  16:38:30
Rem /w2/papermaster/r2005//usr/acct/rce/work/r2005/mx1/mx114.src (univ2) [rce] {44997}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX114 - CUSTOMER /SALESMAN  PRICE LISTING
Rem AUTHOR: HARRY HENDERSON   NOV 22, 1988
Rem Added Call "Price" and now bedit
! ------------------------------------------------------------------------------
! -------------------- notes for rev9 upgrade for F.P.C. -----------------------
! 02/23/08  vst cct223298 - used rev9 program & added in custom code for:
! 08/22/97 rce cct 92445 - print "*" next to any prices that have change, will
!                          print old price & % change
!       custom code for: - if vdr in prodwhse file, move it to vdr# in prod file
!                             ( IF W2[3] LET B[24]=W2[3])
! -----------------------------------------------------------------------------
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
external lib "ubsfunc.dl4"
declare external sub GetCostLevels,USERCNTRL
!
Declare Intrinsic Sub DateToJulian,InpBuf,String
declare intrinsic function FindChannel
!
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[2]
Com 2%,C4[8]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],BASEX
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
If Err 0 Gosub ERR_TRAP
Def FNS(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .0001)
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
Dim 1%,SCRN,CUSTVERSN,NONSTK,SPCL,DFT_COST,UMTYPE,COMM_DIGIT
Dim 1%,prntflag,a5[10],ua2$[50]
Dim 2%,W2[9],X0,X5,X9,PCTYPE,CONTRACT,P3,I,3%,AMOUNT,R1,E,AMQTY,WEIGHT,PACK
Dim P61$[256]
Dim P$[16],C1$[142],A$[156],A3$[30],A2$[30]
Dim BUNIT$[4],PUNIT$[4],CUNIT$[4],P9$[50],PMASK$[12]
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J7$[75],J9$[75]
Dim 1%,LM[1],WHLM[1],BREAKPAGE,PRFLAG,PRCOST,LPEUN[2],X,Y,NSFLG,F7,L9[0],PRCSRC
Dim 1%,C3[4],C5[2],P4[100],P0[100],WHPARC[5],PD1[9],APFLG,CT,F5,WH,LTBL
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],PT[37],OTYPE,FLAG,SC,SR
Dim 2%,UNITX,C1[2],B[24],CFC1[12],ARDATE,Z1[1],X2,P2[100],DT3[1],JBDATE
Dim 2%,WHBLD[2],W7[14],WHSE,DFWH,PACKUNIT$[4],DEPT,BDATE,EDATE,X2,JEDATE
Dim 2%,Q0[1],D9[20],JWDATE,A0[3],JDATE[5],REDATE[1]
Dim 3%,CURCOST,DEXT,PREC[1],V1,X1,LJ1,LJ2,LJ9
Dim 3%,BRACKET,2%,DT,L6[1],LPR1[3],LPDEPT
Dim 3%,PF_LOAD2,PERM[1],W3[24],WHLV[2],WHMISC[6],A4,PRPARC[3],LPUNF[6]
Dim 3%,J,X3,X6,T9[20],C2[2],MU,LPC4[3],LPR[4],SGPRICE
Dim 3%,R[99],FLEPTR[20,1],SPECS[50],4%,J1
Dim 3%,LPUNIT[1],UCOST[3],UPCHG[1]
Dim CNAME$[30],KJ2$[20],J3$[40],KJ4$[40],ARDATE$[8],C5$[12],Z1$[50],D1$[10]
Dim S9$[8],A1$[50],S1$[30],K4$[40],K8$[1],EFFDATE$[8],REPDATE$[8]
Dim K1$[50],K2$[20],K3$[20],X$[10],U5$[130]
Dim K6$[12],K7$[12],AUTH$[1],P2$[84],COMM$[4],D$[35],P60$[50],A4$[22]
Dim FSTCOMM$[4],LSTCOMM$[4],MSGDESC$[150],WHPROD$[12],W1$[32]
Dim SORT$[2],VNDNM$[30],K15$[30],BDATE1$[8],EDATE1$[8]
Dim 1%,ARMTH,MTH,BOYMTH,NOMTHS,CH_CNTRL,CH_LASTPRC,CH_PROD,CH_CUST,CH_BRKTBL
Dim 1%,CH_SPCPRC,CH_SLSM,CH_COMMD,CH_SORT,CH_CNTRTH,CH_DEPT,CH_CCODES
Dim 1%,CH_PRDMRK,CH_ZONE,CH_VEND,CH_SCURR,CH_PRDWHSE,CH_PTYPE
Dim K16$[50],HLD$[50],3%,QTY,LQTY,TYUNIT,LYUNIT,S1[12,2],S2[12,2],T1$[50]
Dim V1$[50],X1$[50],FSTVEND$[6],LSTVEND$[6],K99$[6],FS$[50]
Dim FILE$[75],Custom_customer$[30]
dim 2%,coms
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[1000],tmp1$[500],tmp2$[10],tmp3$[700]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
CH_CNTRL = 1;CH_LASTPRC = 2;CH_PROD = 3;CH_CUST = 4;CH_BRKTBL = 5;CH_SPCPRC = 6
CH_SLSM = 7;CH_COMMD = 8;CH_SORT = 9;CH_CNTRTH = 10;CH_DEPT = 11;CH_CCODES = 12
CH_PRDMRK = 13;CH_ZONE = 14;CH_VEND = 15;CH_SCURR = 16;CH_PRDWHSE = 17;CH_PTYPE = 18
For J = 2 To 99
  If J = 9 Goto CNXTFLE
  try Close #J else rem
CNXTFLE: 
Next J
For J = 2 To 18
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #CH_CNTRL,88,J1;J$;
  Ropen #J,J$
NXTFLE: Next J
Data "1376","1792","1808","1952","1936","1824","2288","-1","2880","1632","1728","1712","1920","2400","2016"
Data "1744","752"
Mat Read #1,61,0;P61$;
mat read #1,115,60;custom_Customer$;
Custom_customer$=UCase$(Trim$(Custom_customer$))
Read #CH_CNTRL,51,74;BOYMTH; 
Mat Read #CH_CNTRL,115,0;D9;
Read #CH_CNTRL,0,120;ARMTH; 
MTH = ARMTH
NOMTHS = ARMTH - BOYMTH \ If NOMTHS < 0 Let NOMTHS = NOMTHS + 12
Mat Read #CH_CNTRL,115,40;Q0; 
If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let J8 = Spc(8)
J8 = 0 \ LJ9 = Chf(0)
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
LJ9 = 50 \ If J8 Let LJ9 = 20
SCRN = J8 \ JDATE[0] = Tim(6)
Mat Read #CH_CNTRL,0,100;ARDATE$;
Read #CH_CNTRL,0,108;ARDATE;
Read #CH_CNTRL,3;CNAME$;
Mat Read #CH_CNTRL,19,50;P9$;
Mat Read #CH_CNTRL,60,50;P60$;
U5$ = "-",U5$
!!Open #77,"PRTDFLT","USERPORT"
!!Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!!Mat Read #77,A4,0;PD1;
!!Close #77,#78
!!DFWH = PD1[2]
!
tmp1$ = ARDATE Using "&&&&&&" \ ARDATE = tmp1$[3,4],tmp1$[5,6],tmp1$[1,2]
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call UserCntrl(userID$,uA2$,A5[],ss,intCo)
!
! call dxsave(0,"tmp/114in.txt!")
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"114",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
Gosub BUILD_SORTFILE ! builds file to hold selected customer
!
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
!
call dxget("SCUST",tmp$) \ X0 = tmp$
call dxget("ECUST",tmp$) \ If tmp$ = "" Let X5 = 999999 Else Let X5 = tmp$
call dxget("INDCUST",tmp3$) 
call dxget("SITEM",K6$) \ K6$ = K6$,Blank$
call dxget("EITEM",K7$) \ K7$ = K7$,EndParam$
call dxget("SSLS",tmp$) \ SLS1 = tmp$
call dxget("ESLS",tmp$) \ If tmp$ = "" Let SLS2 = 999 ELse Let SLS2 = tmp$
call dxget("SCOMM",FSTCOMM$) \ FSTCOMM$ = FSTCOMM$,Blank$
call dxget("ECOMM",LSTCOMM$) \ LSTCOMM$ = LSTCOMM$,EndParam$
call dxget("SVEND",tmp$) \ BVEND = tmp$
call dxget("EVEND",tmp$) \ If tmp$ = "" Let EVEND = 999999 Else Let EVEND = tmp$ 
call dxget("AUTH",tmp$) \ If tmp$ = "" Let AUTH$ = "N" Else Let AUTH$ = "Y"
call dxget("SHOW",K8$)
call dxget("BDATE",tmp$) \ If tmp$ = "" Let BDATE = 010170 Else Let BDATE = tmp$
call dxget("EDATE",tmp$) \ If tmp$ = "" Let EDATE = 123159 Else Let EDATE = tmp$
call dxget("SORT",SORT$)  !!D department, C commodity
call dxget("EFDATE",tmp$) \ if tmp$ = "" Let JDATE[1] = ARDATE Else Let JDATE[1] = tmp$
call dxget("REDATE",tmp$) \ if tmp$ = "" Let REDATE = ARDATE Else Let REDATE = tmp$
call dxget("PRFLAG",tmp$) \ If tmp$ = "" Let PRFLAG = 0 Else Let PRFLAG = 1
call dxget("UMTYPE",tmp$) \ UMTYPE = tmp$ !!1,2,3
! call dxget("PRCOST",tmp$) \ If tmp$ = "" Let PRCOST = 0 Else Let PRCOST = 1 ! SLSM VERSION
CALL DXGET("PRLYR",tmp$) \ if tmp$="" Let PRLYR=0 ELSE LET PRLYR=1 ! print last yr $$
call dxget("BRACKET",tmp$) \ If tmp$ = "" Let BRACKET = -9 Else Let BRACKET = tmp$ !!###
call dxget("COMM",tmp$) \ COMM_DIGIT = tmp$ !!1-4
call dxget("BREAKPAGE",tmp$) \ If tmp$ = "" Let BREAKPAGE = 0 Else Let BREAKPAGE = 1
call dxget("WHSE",tmp$) \ WHSE = tmp$ !!If tmp$ = "" Let WHSE = DFWH
call dxget("NSFLG",tmp$) \ If tmp$ = "" Let NSFLG = 0 Else Let NSFLG = 1
call dxget("PRINCFLG",tmp2$) !!+ B--both
! 
CUSTVERSN = 1 ! report by customer, was an option on the old system
!
J0 = 6 \ Gosub OTHER_NAMES
if not(C4) If Not(SCRN) Let LJ9 = 55
!
COMMFLG = 0
if FSTCOMM$ <> "    " Or LSTCOMM$ <> "zzzz" Let COMMFLG = 1 !!J4$
!
VNDFLG = 0
if BVEND <> 0 Or EVEND <> 999999 Let VNDFLG = 1 
!
If AUTH$ = "Y"
  K8$ = "A" \ APFLG = 0
  SORT$ = ""
  BDATE = 010170
  EDATE = 123159
Else
 If K8$ = "A" 
   APFLG = 1 \ BDATE = 010170
   EDATE = 123159
 End if
 If K8$ = "A" Or P9$[44,44] <> "Y" Let SORT$ = "C"
 If K8$ <> "A" Let APFLG = 0
End if
!
! starting purchase date
errflag = 0
tmp1$ = BDATE Using "&&&&&&"
BDATE = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4] \ X2 = BDATE
Gosub YMD2JUL \ If errflag Let e$ = "Invalid starting purchase date!" \ error 10000
JBDATE = X2
!
! ending purchase date
tmp1$ = EDATE Using "&&&&&&"
EDATE = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4] \ X2 = EDATE
Gosub YMD2JUL \ If errflag Let e$ = "Invalid ending purchase date!" \ error 10000
JEDATE = X2
If JEDATE < JBDATE let e$ = "Invalid ending purchase date, must be >= starting pucharse date!" \ error 10000
X2 = BDATE \ Gosub ISDUNPACK \ BDATE1$ = X$
X2 = EDATE \ Gosub ISDUNPACK \ EDATE1$ = X$
!
! effective date
tmp1$ = JDATE[1] Using "&&&&&&" 
JDATE[1] = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4] \ X2 = JDATE[1]
Gosub YMD2JUL \ If errflag Let e$ = "Invalid effective date!" \ error 10000
DT = JDATE[1] \ JDATE[1] = X2 \ X2 = DT \ Gosub ISDUNPACK \ EFFDATE$ = X$
!
! replacement date
tmp1$ = REDATE Using "&&&&&&" 
REDATE = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4] \ X2 = REDATE
Gosub YMD2JUL \ If errflag Let e$ = "Invalid replacement date!" \ error 10000
X2 = REDATE \ Gosub ISDUNPACK \ REPDATE$ = X$
!
If Not(PRFLAG) Or UMTYPE = 3 Let PRCOST = 0
PRCOST = 0 ! this is for slsm version
!
! commodity digits
If SORT$ = "D" Let COMM_DIGIT = 4
if COMM_DIGIT<1 or COMM_DIGIT>4 let e$="Invalid # of digits for commodity sort!" \ error 10000
!
! warehouse
If P9$[32,32] <> "Y" Let WHSE = 0
if WHSE<0 or WHSE>D9[5] let e$="Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000
!
! price change notify
PRINCFLG = 0
If tmp2$ = "Y" Let PRINCFLG = 1
If tmp2$ = "F" Let PRINCFLG = 3
If tmp2$ = "A" Let PRINCFLG = -1
if tmp2$ = "B" Let PRINCFLG = 0
!
! customer, selected or range
tmp3$ = rtrim$(tmp3$)
If tmp3$ !! The channel 99 is used to store the comma separated individual values for customers
  INDIVFLG = 1
  X0 = 0 \ X5 = 999999
  tmp$ = rtrim$(tmp3$)
  nextItem:
  tmp$ = rtrim$(tmp$)
  X2 = 0 \ J$ = tmp$ To "," : X2 
  X$ = X$ ," " \ X$ = tmp$[X2+1]  
  tmp$ = X$,Blank$ 
  J$ = trim$(J$) \ coms = J$ 
  if coms < 0 Or coms > 999999 Let e$ = "Invalid individual customer code, must be between 0 and 999999!" \ error 10000
  J$ = coms Using "######"
  !print J$
  Search #CustChan,4,1;J$,R[CustChan],E 
  If E Let e$ = "syserrorfile 114 sortfile mode (m)=4 keyno (k)=1 r=",R[CustChan]," e=",e," keyval (k$)=",J$ \ error 10000
  If X2 Goto nextItem
else ! customer range
  INDIVFLG=0
  If X0 < 0 Or X0 > 999999 Let e$ = "Invalid starting customer code, must be between 0 and 999999!" \ error 10000
  If X5 < X0 Or X5 > 999999 Let e$ = "Invalid ending customer code, must be between starting customer code and 999999!" \ error 10000
End If
!
! product
If K7$ < K6$ LET  e$ = "Invalid ending item code, must be >= than starting item code!" \ error 10000
!
! salesman
If SLS1 < 0 Or SLS1 > 999 Let e$ = "Invalid starting salesperson, must be between 0 and 999!" \ error 10000
If SLS2 < SLS1 Or SLS2 > 999 Let e$ = "Invalid ending salesperson, must be between starting salesperson and 999!" \ error 10000
!
! commodity
If LSTCOMM$ < FSTCOMM$ LET  e$ = "Invalid ending commodity, must be >= than starting commodity!" \ error 10000
!
! vendor
If BVEND < 0 Or BVEND > 999999 Let e$ = "Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
If EVEND < BVEND Or EVEND > 999999 Let e$ = "Invalid ending vendor code, must be between starting vendor code and 999999!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!CUSTVERSN = 0 \ PRCOST = 1
!!STRTHERE: Rem "================================= get ranges
!!CUSTVERSN = 1;PRINCFLG = -1
!!Gosub PRNTSCRN
!!For Y = 1 To 20
!!  !!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  If C4 ! came back from another prog
!!    If Y < 3 Goto L_1070 Else Let C4 = 0;K2$ = "S"
!!  End If 
!  On Y Gosub EDT_RPTTYPE,EDT_RPTWDOL,EDT_CUSTRNG,EDT_PRODRNG,EDT_SLSMRNG,EDT_CMMDRNG
!  On Y - 6 Gosub EDT_VNDRNG,EDT_AUTHONLY,L_31980,EDT_EFFDATE,EDT_REPLDATE,EDT_PRNTPRICES
!  On Y - 12 Gosub EDT_UMTYPE,L_31980,EDT_DFTBKT,EDT_COMMDIGT,EDT_PGBREAK,EDT_WHSE,EDT_PRNTNSTK
!  On Y - 19 Gosub PRINC_FLG
!!L_1070: Next Y
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!STDFINALQ: Rem "Standard Final Question
!!Print @10,23;'CL';"ENTER #: Field to edit,  P: print,  E: end ";
!!Input ""Z1$
!!If Z1$ = "P" Goto STRTPRNT
!!If Z1$ = "E" Goto OUTEND
!!If Len(Z1$) > 2 Goto STDFINALQ
!!Y = Z1$
!!If Y >= 1 And Y <= 20
!!  !!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  On Y Goto STRTHERE
!!  On Y - 1 Gosub EDT_RPTWDOL,EDT_CUSTRNG,EDT_PRODRNG,EDT_SLSMRNG,EDT_CMMDRNG
!!  On Y - 6 Gosub EDT_VNDRNG,EDT_AUTHONLY,EDT_NUMPRODS,EDT_EFFDATE,EDT_REPLDATE,EDT_PRNTPRICES
!!  On Y - 12 Gosub EDT_UMTYPE,EDT_PRTCCOST,EDT_DFTBKT,EDT_COMMDIGT,EDT_PGBREAK,EDT_WHSE,EDT_PRNTNSTK
!!  On Y - 19 Gosub PRINC_FLG
!!  !!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!End If 
!!Goto STDFINALQ
!!PRNTSCRN: Rem ================================================ screen
!!Window On 
!!Print 'CS'
!!Print @0,0;"MX114";@26,0;"SALESMAN/CUSTOMER PRICE LIST"
!!Print @0,2;" 1> <C>ustomer Version, <S>alesperson Version, <O>rder sheet, <P>rice review? "
!!If C4 Print @0,3;" 2> PRINT    1.Regular, or 2:with $ Sales Report? (1,2)    1";'CL';
!!Print @18,4;"-STARTING-";@33,4;"-ENDING-"
!!Print @0,5;" 3> CUSTOMERS";'CL';@44,5;" 10> EFFECTIVE DATE: "
!!J0 = 6 \ Gosub OTHER_NAMES \ Print @0,6;" 4> ";D1$;'CL';@48,6;"(for special price calculation)"
!!Print @0,7;" 5> SALESPERSONS";'CL';@44,7;" 11> REPLACEMENT DATE: "
!!Print @0,8;" 6> COMMODITIES"
!!Print @0,9;" 7> VENDOR"
!!Print @0,10;" 8> PRINT ONLY CUSTOMERS WITH AUTHORIZED BUY LISTS? (Y/N) "
!!Print @0,11;" 9> SHOW (A)LL or (P)REVIOUSLY PURCHASED PRODUCTS? "
!!Print @0,15;" 13> SHOW PRICES IN: 1-PRICING UM, 2-BASE UM, 3-BOTH? "
!!Print @0,17;" 15> ENTER BRACKET # TO USE FOR TEN BRACKET PRICES OR <CR> FOR NO PRICE ";
!!Print @0,19;" 16> DIGIT TO SORT COMMODITY CODE BY <CR> FOR FOUR(4): "
!!Print @0,20;" 17> SEPARATE PAGE FOR EACH ";
!!If P9$[32,32] = "Y"
!!  Print @0,21;" 18> ENTER WAREHOUSE TO PRINT FOR, ''0'' FOR MAIN "
!!Else 
!!  Print @0,21;'CL';
!!End If 
!!Print @0,22;" 19> PRINT NON-STOCKS? (Y/N) ";
!!Return 
! - EDT_RPTTYPE: Rem "What Report are we printing
! - J0$ = "2 00017802" \ J1$ = "C"
! - Gosub ISINPUT
! - If J$ <> "C" And J$ <> "S" And J$ <> "O" And J$ <> "P"
! -   J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto EDT_RPTTYPE
! - End If 
! - K2$ = J$
! - If K2$ = "C" If Not(SCRN) Let LJ9 = 55
! - If K2$ = "C" Let CUSTVERSN = 1 \ Return 
! - If K2$ = "P" Chain "MX114PR"
! - If K2$ = "O" Chain "MX114A"
! - Return 
! - EDT_RPTWDOL: Rem "Print Report With Dollar Sales
! - If K2$ <> "S" Return 
! - Print @0,3;" 2> PRINT    1.Regular, or 2:with $ Sales Report? (1,2)    ";
! - J5$ = " ",J5$
! - J0$ = "2 00015903" \ J1$ = "1"
! - Gosub ISINPUT
! - If J$ <> "1" And J$ <> "2"
! -   J7$ = "INVALID ENTRY" \ Gosub ISERRMSG
! -   Goto EDT_RPTWDOL
! - End If 
! - X$ = J$
! - If X$ = "2" Chain "MX114B"
! - Return 
!!EDT_CUSTRNG: Rem "Customer Range
!!J5$ = " <CR> FOR FIRST   I: INDIVIDUAL SELECTS ";J0$ = "1 00062105" \ J1$ = "      "
!!Gosub ISINPUT
!!If J4$[1,1] = "I" Goto INDIV_CUST Else Let X0 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00063305" \ J1$ = "999999"
!!Gosub ISINPUT
!!X5 = J$
!!If X0 > X5
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
!!  Gosub ISERRMSG \ Goto EDT_CUSTRNG
!!End If
!!Goto DONE_INDIV
!!INDIV_CUST: Rem
!!INDIVFLG = 1
!!J$ = " ",J$
!!ASK_AGAIN: Rem
!!J1$ = J$
!!J5$ = "ENTER EACH CUSTOMER NUMBER <CR> WHEN DONE "
!!J0$ = "1 00063305"
!!Gosub ISINPUT
!!If J4$ = "" Goto DONE_INDIV
!!Search #99,4,1;J$,R[99],E !!\ If E If E > 1 Gosub ERR_SEARCH
!!X0 = 0;X5 = 999999
!!Goto ASK_AGAIN
!!DONE_INDIV: Rem
!!Return 
!!EDT_PRODRNG: Rem "Product Range
!!J5$ = "<CR> FOR FIRST" \ J0$ = "2 00121706" \ J1$ = "            "
!!Gosub ISINPUT \ K6$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00123006" \ J1$ = "zzzzzzzzzzzz"
!!Gosub ISINPUT \ K7$ = J$
!!If K7$ < K6$
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
!!  Gosub ISERRMSG \ Goto EDT_PRODRNG
!!End If 
!!Return 
!!EDT_SLSMRNG: Rem "salesman Rnage
!!J5$ = "<CR> FOR FIRST" \ J0$ = "1 00032407" \ J1$ = "   "
!!Gosub ISINPUT \ SLS1 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00033607" \ J1$ = "999"
!!Gosub ISINPUT \ SLS2 = J$
!!If SLS1 > SLS2
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  "
!!  Gosub ISERRMSG \ Goto EDT_SLSMRNG
!!End If 
!!Return 
!!EDT_CMMDRNG: Rem "Commodity Range
!!COMMFLG = 0
!!J5$ = "<CR> FOR FIRST" \ J0$ = "2 00042308" \ J1$ = "    "
!!Gosub ISINPUT \ FSTCOMM$ = J$
!!If J4$ <> "" Let COMMFLG = 1
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00043508" \ J1$ = "zzzz"
!!Gosub ISINPUT \ LSTCOMM$ = J$
!!If J4$ <> "" Let COMMFLG = 1
!!If FSTCOMM$ > LSTCOMM$
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
!!  Gosub ISERRMSG \ Goto EDT_CMMDRNG
!!End If 
!!Return
!!EDT_VNDRNG: Rem "Vendor Range
!!VNDFLG = 0
!!J5$ = "<CR> FOR FIRST" \ J0$ = "2 00062309" \ J1$ = "      "
!!Gosub ISINPUT \ FSTVEND$ = J$
!!If J4$ <> "" Let VNDFLG = 1
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00063509" \ J1$ = "999999"
!!Gosub ISINPUT \ LSTVEND$ = J$
!!If J4$ <> "" Let VNDFLG = 1
!!If FSTVEND$ > LSTVEND$
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
!!  Gosub ISERRMSG \ Goto EDT_VNDRNG
!!End If 
!!BVEND = FSTVEND$;EVEND = LSTVEND$
!!Return 
!!EDT_NUMPRODS: Rem "How Many Products
!!If AUTH$ = "Y"
!!  Return 
!!End If 
!!J5$ = " ",J5$ \ J0$ = "2 00015211" \ J1$ = "P"
!!Print @0,11;" 9> SHOW (A)LL or (P)REVIOUSLY PURCHASED PRODUCTS? "
!!Gosub ISINPUT
!!If J$ <> "A" And J$ <> "P"
!!  J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto EDT_NUMPRODS
!!End If 
!!K8$ = J$
!!Gosub EDT_PURCHDATE
!!Return 
!!EDT_PURCHDATE: Rem "Range of Dates Purchased
!!If K8$ = "A"
!!  Print @1,12;"                                                    "
!!  Print @0,13;"                                                    "
!!  APFLG = 1 \ Goto PDRNGDONE
!!End If 
!!APFLG = 0
!!Print @1,12;"   PURCHASE DATE"
!!ENT_DRNG: Rem "Enter Date Range
!!J5$ = "'MMDDYY' FORMAT, <CR> FOR EARLIEST";J0$ = "5 00082112";J1 = 700101
!!Gosub ISINPUT \ BDATE = J1
!!X2 = BDATE \ Gosub YMD2JUL \ Goto ENT_DRNG
!!JBDATE = X2
!!ENT_EDRNG: Rem "Ending date
!!J5$ = "'MMDDYY' FORMAT, <CR> FOR LATEST";J0$ = "5 00083412";J1 = 591231
!!Gosub ISINPUT \ EDATE = J1
!!X2 = EDATE \ Gosub YMD2JUL \ Goto ENT_EDRNG
!!JEDATE = X2
!!If JBDATE > JEDATE
!!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  "
!!  Gosub ISERRMSG \ Goto ENT_DRNG
!!End If 
!!X2 = BDATE \ Gosub ISDUNPACK \ BDATE1$ = X$
!!X2 = EDATE \ Gosub ISDUNPACK \ EDATE1$ = X$
!!PDRNGDONE: Rem
!!Gosub EDT_SORTBY
!!Return 
!!EDT_EFFDATE: Rem "Effective Date for Pricing
!!J5$ = "<CR> FOR DEFAULT DATE" \ J0$ = "5 00086405" \ J1 = ARDATE
!!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto EDT_EFFDATE
!!JDATE[1] = X2
!!DT = J1;X2 = J1 \ Gosub ISDUNPACK \ EFFDATE$ = X$
!!Return 
!!EDT_REPLDATE: Rem "Replacement Date?
!!J5$ = "<CR> FOR DEFAULT DATE" \ J0$ = "5 00086607" \ J1 = ARDATE
!!Gosub ISINPUT \ X2 = J1 \ Gosub ISDUNPACK \ REPDATE$ = X$
!!Return 
!!EDT_PRNTPRICES: Rem "Print Prices? (I thought that was the point)
!!PRFLAG = 1
!!If Not(CUSTVERSN) Return
!!Print @0,14;" 12> DO YOU WISH TO PRINT PRICES? (Y/N) "
!!J5$ = " ",J5$ \ J0$ = "6 00014014" \ J1 = 1 \ Gosub ISINPUT
!!If Not(J1) Let PRFLAG = 0
!!Return 
!!EDT_AUTHONLY: Rem "Print Auth Buy List Only
!!J5$ = " ",J5$
!!J0$ = "6 00015910" \ J1 = 0 \ Gosub ISINPUT
!!If J1
!!  AUTH$ = "Y"
!!  Print @0,11;'CL';
!!  Print @0,12;'CL'; \ Print @0,13;'CL';
!!  K8$ = "A"
!!Else 
!!  AUTH$ = "N"
!!  Gosub EDT_NUMPRODS
!!  Return 
!!End If 
!!Return 
!!EDT_UMTYPE: Rem "What Unit of Measure
!!J0$ = "2 00015415" \ J1$ = "1"
!!Gosub ISINPUT
!!If J$ <> "1" And J$ <> "2" And J$ <> "3" Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto EDT_UMTYPE
!!UMTYPE = J$
!!Gosub EDT_PRTCCOST
!!Return 
!!EDT_PRTCCOST: Rem "Print Current Cost & Sales
!!PRCOST = 0
!!Print @0,16;"                                                "
!!If Not(PRFLAG) Or UMTYPE = 3 Return 
!!If CUSTVERSN Return 
!!If Not(COST_LEV[1]) Return 
!!Print @0,16;" 14> PRINT CURRENT COST & UNIT SALES? (Y/N)  "
!!J0$ = "6 00014416" \ J1 = 1 \ Gosub ISINPUT
!!PRCOST = 0 \ If J1 Let PRCOST = 1
!!L_31980: Rem "Done Entering
!!Return 
!!EDT_DFTBKT: Rem "Default 10 Bracket Number
!!J0$ = "2 00037217" \ J1$ = "   "
!!Gosub ISINPUT
!!If J$ = "   " Let BRACKET = -9 Else Let BRACKET = J$
!!Return 
!!EDT_COMMDIGT: COMM_DIGIT = 4
!!If SORT$ = "D" Return 
!!ENTCDIGITS: J0$ = "2 00015519" \ J1$ = "4"
!!Gosub ISINPUT
!!COMM_DIGIT = J$
!!If COMM_DIGIT < 1 Or COMM_DIGIT > 4 Goto ENTCDIGITS
!!Return 
!!EDT_PGBREAK: Rem "Page break on Change of ...
!!If SORT$ = "C" Print @27,20;" COMMODITY? (Y/N) "
!!If SORT$ = "D" Print @27,20;" DEPARTMENT? (Y/N) "
!!J0$ = "6 00014620" \ J1 = 0
!!Gosub ISINPUT
!!BREAKPAGE = 0 \ If J1 Let BREAKPAGE = 1
!!Return 
!!EDT_WHSE: Rem "what whse (For Pricing)
!!If P9$[32,32] <> "Y" Return 
!!J0$ = "3 00024821" \ J1 = DFWH
!!Gosub ISINPUT
!!WHSE = J1
!!If WHSE < 0 Or WHSE > D9[5] Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto EDT_WHSE
!!Return 
!!EDT_PRNTNSTK: Rem PRINT NON STOCKS Y/N
!!J0$ = "6 00012922" \ J1 = 0
!!Gosub ISINPUT
!!NSFLG = 0 \ If J1 Let NSFLG = 1
!!Return
!!EDT_SORTBY: Rem SORT BY
!!If K8$ = "A" Or P9$[44,44] <> "Y" Let SORT$ = "C" \ Return 
!!Print @4,13;"SORT BY:  1-Department, 2-Commodity:    ";
!!Input ""SORT$ \ If SORT$ = "E" Goto OUTEND
!!If SORT$ <> "1" If SORT$ <> "2" Goto EDT_SORTBY
!!If SORT$ = "1" Let SORT$ = "D"
!!If SORT$ = "2" Let SORT$ = "C"
!!Return 
!!PRINC_FLG: Rem ====================== price increase question
!!PRINCFLG = -1 \ If Not(CUSTVERSN) Return 
!!Print @44,8;" 20> PRICE CHG NOTIFY:  ";'CL';
!!J5$ = "Select Customer Price change notify (Y/F/<CR>=both/A=all) "
!!J0$ = "2 00016808";J1$ = ""
!!Gosub ISINPUT \ J$[2] = ""
!!If J$ <> "Y" If J$ <> "F" If J$ <> " " If J$ <> "A" Goto PRINC_FLG
!!PRINCFLG = 0 \ If J$ = "Y" Let PRINCFLG = 1
!!If J$ = "F" Let PRINCFLG = 3
!!If J$ = "A" Let PRINCFLG = -1
!!If J$ = " " Let PRINCFLG = 0 \ Print @68,8;"Y and F";
!!Return 
!
STRTPRNT: Rem "========
!!Window Off 
COMM$ = "----";DEPT = -9999
Gosub STRTSORT
!
If J8
  tmp$ = "SALESREP",fdel$
  tmp$ = tmp$,"SALESREP NAME",fdel$
  tmp$ = tmp$,"CUSTOMER CODE",fdel$
  tmp$ = tmp$,"CUSTOMER NAME",fdel$
  tmp$ = tmp$,"ADDRESS",fdel$
  tmp$ = tmp$,"CITY",fdel$
  tmp$ = tmp$,"STATE",fdel$
  tmp$ = tmp$,"ZIP CODE",fdel$
  if SORT$<>"D" let tmp1$="COMMODITY" else tmp1$="DEPT"
  tmp$=tmp$,tmp1$,fdel$
  If P9$[40,40] = "Y" Let tmp$ = tmp$, "VENDOR ITEM",fdel$
  tmp$ = tmp$, "ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION 1",fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$, "DESCRIPTION 2",fdel$
  tmp$ = tmp$, "PACK",fdel$
  If PRFLAG Let tmp$ = tmp$, "CURRENT PRICE",fdel$
  If PRFLAG Let tmp$ = tmp$, "CURRENT PRICE U/M",fdel$
  If PRFLAG 
    If UMTYPE = 3 
	  tmp$ = tmp$, "COST",fdel$,"COST U/M",fdel$
	Else
	  If COST_LEV[1] 
		If PRCOST 
			Let tmp$ = tmp$, "COST",fdel$,"U/M",fdel$
		!Else
		!	tmp$=tmp$,"",fdel$,"*",fdel$ ! ????
		Endif
	  Endif
	Endif
    if PRCOST 
		If COST_LEV[1] 
			Let tmp$ = tmp$, "G/P%",fdel$
		Endif
	Endif
    If PRCOST Let tmp$ = tmp$, "YTD UNITS",fdel$,"LYR UNITS",fdel$
  End if
  if prlyr let tmp$=tmp$,"LYR UNITS",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!!If Not(SCRN) Print @0,22;'CL';"Printing... please wait";'CE'; \ Signal 3,0
!!If SCRN Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
LJ1 = 90 \ LJ2 = 0
K1$ = " ",K1$
SORTFLE_LOOP: Rem "Loop thru Sorted File
Search #CH_SORT,3,1;K1$,R1,E 
If E = 2 Goto RPTDONE
R[CH_LASTPRC] = R1
If K1$[4,9] <> KJ4$[1,6] Gosub L_8500
If K1$[37,37] = "*"
  Gosub BLDLP_INFO
Else 
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],0;P$;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],16;C1;
  X2 = C1[2] \ Gosub YMD2JUL \ If errflag Let X2 = 0
  JWDATE = X2
  If Not(APFLG) If JWDATE < JBDATE Or JWDATE > JEDATE Goto SORTFLE_LOOP
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],28;C2;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],46;C3;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],140;LPC4;
  NONSTK = LPC4[3]
  If Not(NSFLG) If NONSTK Goto SORTFLE_LOOP
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],168;LPR;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],198;LPR1;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],214;LPEUN;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],220;LPUNF;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],262;PERM;
  Read #CH_LASTPRC,R[CH_LASTPRC],320;LPDEPT;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],340;LPUNIT;
End If
J3$ = " n/a  "
If C3 = 1 Let J3$ = "MATRX"
If C3 = 2 Let J3$ = "CONT"
If C3 = 3 Let J3$ = "PRMO"
If C3 = 4 Let J3$ = "COMD"
X3 = 0 \ X9 = 0
SGPRICE = 0;CURCOST = 0
If Not(NONSTK) Gosub GET_PROD
If NONSTK Gosub SETUP_NSTK
Gosub GET_VEND
If SORT$ = "C" If P2$[81,84] < FSTCOMM$ Or P2$[81,84] > LSTCOMM$ Goto SORTFLE_LOOP
If SORT$ = "C" And P2$[81,80 + COMM_DIGIT] <> COMM$[1,COMM_DIGIT]
  F7 = 99 \ COMM$ = P2$[81,84]
  If BREAKPAGE Let LJ1 = 99
End If 
If SORT$ = "D" And LPDEPT <> DEPT
  F7 = 99 \ DEPT = LPDEPT
  If BREAKPAGE Let LJ1 = 99
End If 
Gosub PRNTHEDNG
AMQTY = 1;DEXT = 0 ! from swp cct#
If LPR1[0] = 0 Let LPR1[0] = 1
If LPUNF[5] = 0 Let LPUNF[5] = 1
WEIGHT = AMQTY * LPR1[0] / LPUNF[5]
PCTYPE = 0;CONTRACT = 0
Gosub GET_COMMOD
If Not(NONSTK) Gosub GET_PRICE
If BASEX If BASEX <> X3
  If P61$[58,58] = "U"
    If Not(SPECS[16]) Let X3 = BASEX
  Else 
    X3 = BASEX
  End If 
End If 
L9[0] = PCTYPE
X9 = CONTRACT
If NONSTK
  X3 = C2[1];CURCOST = C2[2]
  If LPUNIT[0] Let UCOST[0] = LPUNIT[0] Else Let UCOST[0] = C2[1]
  If LPUNIT[1] Let UCOST[1] = LPUNIT[1] Else Let UCOST[1] = C2[2]
End If 
If Not(L9[0]) If X3 Let L9[0] = C3[0]
If Not(L9[0]) If X3 Let L9[0] = 1
let prcsrc=l9[0]
LET SPCL=0
IF X9 LET SPCL=1 ! CONTRACT
prcsrc=l9[0]
	if prcsrc>82 and prcsrc<118
		let prcsrc=prcsrc-100
endif
IF prcsrc>=2 AND prcsrc<=4 LET SPCL=1
IF prcsrc>=6 AND prcsrc<=8 LET SPCL=1
IF prcsrc>=11 AND prcsrc<=13 LET SPCL=1
IF prcsrc>=15 AND prcsrc<=16 LET SPCL=1
CNVTU[0] = PFU1[18] \ CNVTU[1] = 0;CNVTU[2] = 1;CNVTA = 1
Gosub CONVERT
PACK = AMOUNT
If SPCL If X3 Let SGPRICE = 0;C3[0] = 0
IF SPCL AND NOT(X3) LET SPCL=0
If Not(X3) Gosub GET_SUGGPRICE
If Not(X3) If C2[1] Let L9[0] = 0
If Not(CURCOST) If C2[2] Let CURCOST = C2[2]
Gosub SETUP_MSG
Gosub PRNTDETL \ L9[0] = 0
LET PRNTFLAG=1
Goto SORTFLE_LOOP
!
BLDLP_INFO: Rem "======================== build fake lastprice file data
P$ = K1$[14,25]
C1[0] = K1$[4,9]
C1[1] = 0
C1[2] = 0
C2[0] = 0
C2[1] = 0
C2[2] = 0
C3[0] = 0
LPDEPT = 0
C3[2] = 0
C3[3] = 0
C3[4] = 0
LPC4[0] = 0
LPC4[1] = 0
LPC4[2] = 0
LPC4[3] = 0;NONSTK = 0
LPEUN[2] = 0;PERM[0] = 0;PERM[1] = 0
LPUNF[5] = A[5];LPR1[0] = A[6]
LPUNIT[0] = 0;LPUNIT[1] = 0
Return 
!
GET_CUSTOMER: Rem "================================ get customer
KJ4$ = K1$[4,9]
Search #CH_CUST,2,1;KJ4$,R[CH_CUST],E 
If E
  C1$ = "ERROR! ",KJ4$," NOT FOUND!"
  CFC1[7] = 0
Else 
  Mat Read #CH_CUST,R[CH_CUST],0;C1$;
  Mat Read #CH_CUST,R[CH_CUST],142;CFC1;
  Mat Read #CH_CUST,R[CH_CUST],194;C5;
  Mat Read #CH_CUST,R[CH_CUST],348;A2$;
  Mat Read #CH_CUST,R[CH_CUST],388;A4$;
  Mat Read #CH_CUST,R[CH_CUST],486;A0;
  Mat Read #CH_PTYPE,CFC1[7],28;PT;
  DFT_COST = PT[0]
  If Not(DFT_COST) Let DFT_COST = P60$[29,29]
End If
PRNTCUSTNAME: Rem PRINT
P3 = CFC1[7]
If Not(DFT_COST) Let DFT_COST = P60$[29,29]
! Read #CH_CNTRL,25,(C5[0] - 1) * 16;C5$; ! terms not here anymore!?
Gosub GET_SLSM
!
If J8
  tmp1$ = Str$(CFC1[2]),fdel$,rtrim$(S1$),fdel$ !!SALESREP
  tmp1$ = tmp1$, K1$[4,9],fdel$!!CUSTOMER
  tmp1$ = tmp1$, rtrim$(C1$[31,60]),fdel$
  tmp1$ = tmp1$, rtrim$(C1$[61,90]),fdel$
  tmp1$ = tmp1$, rtrim$(C1$[121,135]),fdel$,C1$[136,137],fdel$,rtrim$(A2$[1,10]),fdel$
  LJ1 = LJ1 + 4
  Return
End if
If custom_customer$<>"FPC"
	PRINT #0; "SALESREP: ";STR$(CFC1[2]);" ";S1$
endif
Print #0;"\12\";"CUSTOMER: ";K1$[4,9];
Print #0; Tab 20;C1$[31,60]
Print #0; Tab 20;C1$[61,90]
Print #0; Tab 20;C1$[121,135]; Tab 37;C1$[136,137]; Tab 41;A2$[1,10]
if custom_customer$<>"FPC"
	IF CustVersn PRINT #0;U5$[1,79] ELSE  PRINT #0;U5$
	LET LJ1=LJ1+4
else
	print #0; u5$
	LET LJ1=LJ1+3
endif
Return 
!
GET_SLSM: Rem "============================= get salesman
K4$ = " ",K4$
K4$ = CFC1[2] Using "###"
Search #CH_SLSM,2,1;K4$,R[CH_SLSM],E 
If E
  S1$ = " *** NOT ON FILE ***"
Else 
  Mat Read #CH_SLSM,R[CH_SLSM],0;S1$;
End If 
Return 
!
GET_VEND: Rem "======================= vendor name
If LPC4[1] = 0 Let LPC4[1] = B[24]
If Not(LPC4[1]) Let VNDNM$ = " ",VNDNM$ \ Return 
K15$[1,6] = LPC4[1] Using "######"
Search #CH_VEND,2,1;K15$,R[CH_VEND],E 
If Not(E)
  Mat Read #CH_VEND,R[CH_VEND],0;VNDNM$;
Else 
  VNDNM$ = " ",VNDNM$
  VNDNM$ = "VENDOR NOT ON FILE"
End If 
Return 
!
GET_PROD: Rem "============================== get product
KJ2$ = P$[1,12]
Search #CH_PROD,2,1;KJ2$,R[CH_PROD],E 
If E
  A$ = " ",A$ \ A$[9,38] = "ERROR! PRODUCT NOT FOUND!"
Else 
  PREC[0] = R[CH_PROD]
  Mat Read #CH_PROD,R[CH_PROD],0;A$;
  Mat Read #CH_PROD,R[CH_PROD],256;A;
  Mat Read #CH_PROD,R[CH_PROD],156;B;
  Mat Read #CH_PROD,R[CH_PROD],512;PFU1;
  Mat Read #CH_PROD,R[CH_PROD],554;PFU2;
  Mat Read #CH_PROD,R[CH_PROD],620;LM;
  Mat Read #CH_PROD,R[CH_PROD],894;C4;
  Mat Read #CH_PROD,R[CH_PROD],938;PF_LOAD2;
  Mat Read #CH_PROD,R[CH_PROD],944;A3$;
  If WHSE Gosub READ_PRDWHSE
  UCOST[1] = B[8]
  CURCOST = B[8]
  LPR1[0] = A[6];LPUNF[5] = A[5]
End If
If K1$[37,37] <> "*" Goto L_3590
C3[2] = PFU1[9]
C3[3] = PFU1[12]
C3[4] = PFU1[11]
P2$[81,84] = A$[152,155]
LPC4[1] = B[24]
LPC4[2] = B[11]
Let LPUNF[6]=0 ! "unit Last year
L_3590: ! 
If Not(CustVersn) ! "salesman version
	IF NOT(PRCOST) RETURN 
Else ! "it is customer version
	If Not(PRLYR) Return ! "don't want LYr Units
	If P60$[32,32]="Y" Return ! "get from file not sales curr
Endif
TYUNIT = 0;LYUNIT = 0
K16$ = " ",K16$;K16$[1,6] = C1[0] Using "######";K16$[7,18] = P$[1,12]
If K16$[1,18] = HLD$[1,18] Goto L_3690
HLD$ = K16$
SLSCURR_LOOP: Rem "Thru Cust/Prod for TY & LY
Search #CH_SCURR,3,1;K16$,R[CH_SCURR],E 
If E Goto L_3690
If K16$[1,18] <> HLD$[1,18] Goto L_3690
Mat Read #CH_SCURR,R[CH_SCURR],16;S1;
Mat Read #CH_SCURR,R[CH_SCURR],256;S2;
Gosub L_3720
TYUNIT = TYUNIT + QTY
LYUNIT = LYUNIT + S2[0,0] ! all last year not lytd
Goto SLSCURR_LOOP
!
L_3690: Rem DONE
If PRLYR Let LPUNF[6]=LYUnit ! "move in to variable used
Return 
!
L_3720: Rem GET ONLY YTD THRU MONTH
QTY = 0;LQTY = 0
X2 = NOMTHS + 1
X = BOYMTH
For I = 1 To X2
  QTY = QTY + S1[X,0];LQTY = LQTY + S2[X,0]
  X = X + 1 \ If X > 12 Let X = X - 12
Next I
Return 
!
GET_PRICE: Rem "Use Call "Price" to get price/cost
For X = 0 To 40 \ SPECS[X] = 0 \ Next X
FLEPTR[1,0] = CH_PROD;FLEPTR[1,1] = R[CH_PROD]
FLEPTR[2,0] = CH_PRDWHSE;FLEPTR[2,1] = R[CH_PRDWHSE]
FLEPTR[3,0] = CH_COMMD;FLEPTR[3,1] = R[CH_COMMD]
FLEPTR[4,0] = CH_LASTPRC;FLEPTR[4,1] = R[CH_LASTPRC]
If K1$[37,37] = "*" Let FLEPTR[4,1] = 0
FLEPTR[5,0] = CH_SPCPRC;FLEPTR[5,1] = 0
FLEPTR[6,0] = CH_CNTRTH;FLEPTR[6,1] = 0
FLEPTR[7,0] = CH_CCODES;FLEPTR[7,1] = 0
FLEPTR[8,0] = CH_BRKTBL;FLEPTR[8,1] = 0
SPECS[0] = 299;SPECS[1] = AMQTY;SPECS[2] = WEIGHT;SPECS[3] = CFC1[1]
SPECS[4] = WHSE;SPECS[5] = DT;SPECS[6] = LPDEPT;SPECS[7] = CFC1[7]
If JDATE[1] > JDATE[0] ! "future eff date
  SPECS[5] = 0 - DT
End If 
SPECS[8] = 1;SPECS[9] = DFT_COST;SPECS[10] = 0;SPECS[11] = 0
SPECS[12] = 0;SPECS[13] = C3[2];SPECS[14] = C3[3];SPECS[15] = C3[4]
SPECS[16] = 0;SPECS[17] = CURCOST;SPECS[18] = 0;SPECS[19] = 0
SPECS[20] = X3
!
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
!
If SPECS[0] <> 0
  SPECS[23] = X3;SPECS[17] = CURCOST
  SPECS[20] = X3
  SPECS[16] = 0;SPECS[40] = 0
End If 
C3[3] = SPECS[14];C3[4] = SPECS[15];CURCOST = SPECS[17]
BASEX = SPECS[20];X3 = SPECS[23];PCTYPE = SPECS[25];CONTRACT = SPECS[27]
UPCHG[0] = SPECS[16];UPCHG[1] = SPECS[40]
UCOST[0] = SPECS[20];UCOST[1] = SPECS[17]
SPSLCOST = 0 \ If SPECS[26] = 11 Let SPSLCOST = 1
L9[0] = PCTYPE;SPCL = 0
let prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If PRCSRC>=2 AND PRCSRC<=4 LET Spcl=1
IF PRCSRC>=6 AND PRCSRC<=8 LET Spcl=1
IF PRCSRC>=11 AND PRCSRC<=13 LET Spcl=1
IF PRCSRC>=15 AND PRCSRC<=16 LET SPCL=1

If C4[2] = 2 And Not(CONTRACT) And Not(SPCL) And BRACKET > 0
  SPECS[11] = BRACKET;SPECS[0] = 3;SPECS[20] = BASEX
  !
  Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
  !
  If SPECS[0] <> 0
    SPECS[17] = CURCOST;SPECS[23] = X3
    SPECS[16] = 0;SPECS[40] = 0
  End If 
  CURCOST = SPECS[17];X3 = SPECS[23];BASEX = SPECS[20]
End If 
UCOST[1] = CURCOST
If UPCHG[1] ! load cost upcharge
  If UPCHG[1] < 0
    CURCOST = CURCOST + (Abs(UPCHG[1]))
  Else 
    CURCOST = CURCOST + (CURCOST * (UPCHG[1] / 100))
  End If 
End If 
Return 
!
L_3800: Rem "==================================== totals
Gosub L_8500
Gosub L_8000
Return 
!
SETUP_NSTK: Rem   SET VARIABLES FOR NON STOCKS
A$[9,38] = P2$[21,50]
B[24] = LPC4[1]
A$[93,112] = P2$[1,20]
A$[63,92] = P2$[51,80]
PFU1[18] = 0;PACK = 0;PACKUNIT$ = " ",PACKUNIT$
B[8] = C2[2];CURCOST = C2[2]
A3$[13,27] = " ",A3$[13,27]
TYUNIT = C2[0];LYUNIT = 0
PFU1[0] = LPEUN[0];PFU1[1] = C3[2];PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[9] = C3[2]
PFU1[11] = C3[4]
PFU1[12] = C3[3]
C4[2] = 0
X3 = C2[1]
Mat Read #CH_LASTPRC,R[CH_LASTPRC],220;PFU2;
Mat A = Zer
Return 
!
GET_COMMOD: Rem "================================= get commodity
K3$ = " ",K3$ \ K3$ = A$[152,155]
Search #CH_COMMD,2,1;K3$,R[CH_COMMD],E 
If E let P4[P3] = 0
Return 
!
SETUP_MSG: Rem "Set up Message used on Print Line (S9$)
S9$ = " ",S9$
LET PRCSRC=L9[0]
IF PRCSRC>82 AND PRCSRC<118
	LET PRCSRC=PRCSRC-100
endif
if custom_customer$="ACME"
	LET S9$=" ",S9$;S9$=STR$(prcsrc)
	IF prcsrc=1 OR prcsrc=5 OR prcsrc=9 LET S9$="S"
	IF SPCL LET S9$="*"
	IF SPCL AND CONTRACT LET S9$="C"
	IF SGPRICE LET S9$="L"
Else ! standard
	If prcsrc = 1 Or prcsrc = 9 Let S9$ = " QB"
	If SPCL Let S9$ = " SP"
	If prcsrc = 13 Let S9$ = " FP"
	If SGPRICE Let S9$ = " SG"
	If prcsrc = 5 Let S9$ = BRACKET Using " 10 B#"
Endif
Return 
!
PRNTDETL: Rem "===================================== print line
If J8
  If F7
    Z1$ = " ",Z1$
    If SORT$ <> "D"
      K3$ = " ",K3$ \ K3$ = P2$[81,84]
      Search #CH_COMMD,2,1;K3$,R[CH_COMMD],E 
      If E = 1
        Z1$ = K3$," NOT FOUND"
      Else 
        Mat Read #CH_COMMD,R[CH_COMMD],0;D$;
        Z1$ = D$[1,16]
      End If 
    Else 
      Z1$ = ""
      Read #CH_DEPT,LPDEPT,0;D$;
      Z1$ = D$[1,24]
    End If     
	LJ1 = LJ1 + 2 \ F7 = 0
  End if
  tmp$ = tmp1$, rtrim$(Z1$),fdel$
  T9 = 0 \ If X3 Let T9 = C2[2] / X3
  MU = 0
  If C2[1] Let MU = FNR((C2[1] - C2[2]) * 100 / C2[1])
  Gosub CONV_VARS
  If P9$[40,40] = "Y" Let tmp$ = tmp$, rtrim$(A$[93,112]),fdel$ !!vendor item
  tmp$ = tmp$, rtrim$(P$[1,12]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,38]),fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$, rtrim$(A$[63,92]),fdel$ !!description 2
  If Not(NONSTK) AND A3$[13,14] = "  " 
	Let tmp$ = tmp$, PACK Using "######.##","/",PACKUNIT$,fdel$
  ELSE
	Let tmp$ = tmp$, rtrim$(A3$[13,27]),fdel$
  ENDIF
  If PRFLAG 
    If Not(X3) Or (C4[2] = 2 And BRACKET = -9) 
	  tmp$ = tmp$,"CALL FOR PRICE",fdel$, "",fdel$
	  if Not(CUSTVERSN) Let tmp$ = tmp$, "",fdel$
	Else
      If UMTYPE = 1 Or UMTYPE = 3 Let tmp$ = tmp$, UWORK[1] Using PMASK$,fdel$,PUNIT$,fdel$
      If UMTYPE = 2 
	    If X6 
		  tmp$ = tmp$, FNN(UWORK[2]) Using PMASK$,fdel$,BUNIT$,fdel$
		Else
		  tmp$ = tmp$,"",fdel$
		End if
	  End if
      If Not(CUSTVERSN) Let tmp$ = tmp$, S9$[1,7],fdel$
	End if
  End if
  If Not(CUSTVERSN)
    X2 = C1[2] \ Gosub ISDUNPACK \ tmp$ = tmp$, X$[1,8],fdel$
    If COST_LEV[1] If PRCOST Let tmp$ = tmp$, UWORK[3] Using PMASK$,fdel$,CUNIT$,fdel$
    If COST_LEV[1] Let tmp$ = tmp$, MU Using "---#.##%",fdel$
    tmp$ = tmp$, UWORK[4] Using PMASK$,fdel$
  End if
  If Not(CUSTVERSN) Let tmp$ = tmp$, rtrim$(VNDNM$[1,15]),fdel$
  If PRFLAG
    If UMTYPE = 3 
	  If X6 
		Let tmp$ = tmp$, FNN(UWORK[2]) Using PMASK$,fdel$,BUNIT$,fdel$
	  ELSE
		tmp$ = tmp$,0 Using PMASK$,fdel$," ",fdel$
	  ENDIF
	Else
      If COST_LEV[1] 
	    If PRCOST 
		  tmp$ = tmp$, UWORK[5] Using PMASK$,fdel$,"",fdel$
		!else
		 !tmp$ = tmp$,"",fdel$,"*",fdel$ ! ???
		End if
	  End if
	End if	   
    T9 = 0 \ If X3 Let T9 = FNR((X3 - CURCOST) * 100 / X3)
    If PRCOST
      If COST_LEV[1] 
	    tmp$ = tmp$, T9 Using "---#.##%"
        If SPSLCOST Let tmp$ = tmp$,"*",fdel$ Else Let tmp$ = tmp$,"",fdel$
	  End if
	End if
    If PRCOST 
		Let tmp$ = tmp$, TYUNIT Using "--------#.##",fdel$,LYUNIT Using "--------#.##",fdel$
	endif
  End if
  if prlyr let tmp$=tmp$,UWork[6] USING "--------#.##","/",Punit$,fdel$
  LJ1 = LJ1 + 3
  S9$ = " ",S9$ \ SPCL = 0 \ A3$ = " ",A3$ \ PACKUNIT$ = " ",PACKUNIT$ \ PACK = 0
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
If Not(F7) Goto L_5170
Z1$ = " ",Z1$
If SORT$ <> "D"
  K3$ = " ",K3$ \ K3$ = P2$[81,84]
  Search #CH_COMMD,2,1;K3$,R[CH_COMMD],E !!\ If E > 1 Gosub ERR_SEARCH
  If E = 1
    Z1$ = K3$," NOT FOUND"
  Else 
    Mat Read #CH_COMMD,R[CH_COMMD],0;D$;
    Z1$ = D$[1,16]
  End If 
Else 
  Z1$ = ""
  Read #CH_DEPT,LPDEPT,0;D$;
  Z1$ = D$[1,24]
End If 
Print #0; Tab 10;Z1$ \ LJ1 = LJ1 + 2 \ F7 = 0
L_5170: T9 = 0 \ If X3 Let T9 = C2[2] / X3
MU = 0
If C2[1] Let MU = FNR((C2[1] - C2[2]) * 100 / C2[1])
Gosub CONV_VARS
if custom_customer$="FPC"
	if fleptr[4,1] gosub Compare_LP: else starflag=0
endif
Print #0; Tab 0;P$[1,12];
If custom_customer$="ACME"
	PRINT #0; TAB 14;A$[9,38]; ! "desc 1 
	IF NOT(NonStk) IF A3$[13,14]="  " PRINT #0; USING "######.##"; TAB 46;PACK;"/";PACKUNIT$;
	IF A3$[13,14]<>"  " PRINT #0; TAB 46;A3$[13,27]; ! "pack size      
	PRINT #0; TAB 58;
Else
	Print #0; Tab 21;A$[9,38];
	If Not(NONSTK) If A3$[13,14] = "  " Print #0; Using "######.##"; Tab 52;PACK;"/";PACKUNIT$;
	If A3$[13,14] <> "  " Print #0; Tab 52;A3$[13,27];
	Print #0; Tab 67;
Endif
If Not(PRFLAG) Goto L_5260
if custom_Customer$="ACME"
	IF NOT(X3) OR (C4[2]=2 AND NOT(SPCL) AND BRACKET=-9) PRINT #0;"CALL FOR PRICE "; \ GOTO L_5260:
Else
	If Not(X3) Or (C4[2] = 2 And BRACKET = -9) Print #0;"CALL FOR PRICE "; \ Goto L_5260
Endif
If UMTYPE = 1 Or UMTYPE = 3 Print #0; Using PMASK$;UWORK[1];"/";PUNIT$;
If UMTYPE = 2 If X6 Print #0; Using PMASK$;FNN(UWORK[2]);"/";BUNIT$;
if custom_customer$="FPC"
	if custversn 
		if starflag   ! cct# 92445
			print #0; "*";  ! price has changed since last
			print #0; using " ######.##"; amt;"/";cunit$;  ! lastprice 
			if oldbase=0
				print #0;"   100.00% -- LAST PRICE IS 0";
			else
				print #0; using " ----#.##%"; (((x6-oldbase)/oldbase)*100);
			endif
		endif
	endif
Endif
if custom_customer$="ACME"
	IF NOT(CustVersn) PRINT #0; TAB 76;S9$[1,7];
Else
	If Not(CUSTVERSN) Print #0; Tab 82;S9$[1,7];
Endif
L_5260: !
If CUSTVERSN Print #0;" " \ Goto L_5340
if custom_customer$="ACME"
	IF CONTRACT PRINT #0; USING "######"; TAB 79;CONTRACT;
Endif
X2 = C1[2] \ Gosub ISDUNPACK \ Print #0; Tab 89;X$[1,8];
If COST_LEV[1] If PRCOST Print #0; Using PMASK$; Tab 97;UWORK[3];"/";CUNIT$;
If COST_LEV[1] Print #0; Using "---#.##%"; Tab 112;MU;
Print #0; Using PMASK$; Tab 121;UWORK[4]
L_5340: !
If P9$[40,40] = "Y" Print #0; Tab 0;A$[93,112]; !!vendor item
If P9$[26,26] = "Y" Print #0; Tab 21;A$[63,92]; !!description 2
If CustVersn And PRLYR ! "want last year units
   PRINT #0; USING "--------#.##"; TAB 50;UWork[6];"/";Punit$;
Endif
If Not(CUSTVERSN) Print #0; Tab 52;VNDNM$[1,15];
If Not(PRFLAG) Goto L_5390
If UMTYPE = 3 If X6 Print #0; Using PMASK$; Tab 67;FNN(UWORK[2]);"/";BUNIT$;" ";
If COST_LEV[1] If PRCOST Print #0; Using PMASK$; Tab 67;UWORK[5];
T9 = 0 \ If X3 Let T9 = FNR((X3 - CURCOST) * 100 / X3)
If Not(PRCOST) Goto L_5380
if custom_customer$="ACME"
	IF C4[2]=2 AND NOT(SPCL) AND BRACKET=-9 LET T9=0
Endif
If COST_LEV[1] Print #0; Using "---#.##%"; Tab 78;T9;
If SPSLCOST Print #0;"*";
L_5380: Rem IF NOT CustVersn PRINT #0; TAB 88;S7$; ! "rebate not in spcprice
If PRCOST Print #0; Using "--------#.##"; Tab 102;TYUNIT; Tab 118;LYUNIT;
L_5390: Print #0;" " \ LJ1 = LJ1 + 1
Print #0;" " \ LJ1 = LJ1 + 1
LJ1 = LJ1 + 1
S9$ = " ",S9$ \ SPCL = 0 \ A3$ = " ",A3$
PACKUNIT$ = " ",PACKUNIT$ \ PACK = 0
Return 
!
PRNTHEDNG: Rem "==================================== headings
if J8 Gosub GET_CUSTOMER \ Return
!
If LJ1 < LJ9 Return
If LJ2 > 0 Gosub L_8000
!!If LJ2 If SCRN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If LJ2 If Not(SCRN) Print #0;"\14\";
LJ2 = LJ2 + 1 \ LJ1 = 10
F7 = 99
If Not(SCRN) Print #0;"\12\";
if not(custversn)
	Print #0; Tab (46 - Len(CNAME$) / 2);CNAME$;
	If WHSE Print #0; Tab 90;"WAREHOUSE";WHSE;
	Print #0; Using "PAGE ####"; Tab 122;LJ2
else
	PRINT #0; TAB 27;CNAME$;        
   IF WHSE PRINT #0;TAB 60;"WHSE";
   IF WHSE print #0;using " ##";WHSE;    
   PRINT #0; USING "PAGE ####"; TAB 70;LJ2  
endif
If CUSTVERSN And PRFLAG Print #0; Tab 27;"CUSTOMER  PRICE  LISTING"
If CUSTVERSN And Not(PRFLAG) Print #0; Tab 27;"CUSTOMER PURCHASE LISTING"
if custom_customer$="ACME"
	IF NOT(CustVersn) PRINT #0; TAB 27;"SALESMAN  PRICE  LISTING";
	IF CUSTVERSN PRINT #0; TAB 66; ELSE  PRINT #0; TAB 90;
	IF WHSE PRINT #0;"WAREHOUSE";WHSE;
PRINT #0;""
Else
If Not(CUSTVERSN) Print #0; Tab 27;"SALESMAN  PRICE  LISTING"
Endif
Print #0; Tab 27;"EFFECTIVE DATE: ";EFFDATE$
If PRFLAG Print #0; Tab 27;"REPLACEMENT DATE: ";REPDATE$ Else Print #0;""
If Not(APFLG) Print #0; Tab 27;"PREV PURCHASED RANGE: ";BDATE1$;" - ";EDATE1$ Else Print #0;""
Gosub GET_CUSTOMER
if custom_customer$="ACME"
	PRINT #0; TAB 1;"ITEM CODE"; TAB 16;"DESCRIPTION"; TAB 50;"PACK";
	IF PRFLAG PRINT #0; TAB 59;"CURRENT PRICE";
	IF NOT(CustVersn) PRINT #0; TAB 74;"TYPE"; TAB 80;"CTRCT"; TAB 87;"LAST: DATE";
Else
	Print #0; Tab 1;"ITEM CODE"; Tab 21;"DESCRIPTION"; Tab 53;"PACK";
	If PRFLAG Print #0; Tab 67;"CURRENT PRICE";
	If Not(CUSTVERSN) Print #0; Tab 85;"LAST: DATE";
Endif
if custom_customer$="FPC"
	if custversn and prflag print #0; tab 86;"LAST PRICE"; tab 104;"%";
endif
If Not(CUSTVERSN) If PRCOST Print #0; Tab 103;"COST";
If Not(CUSTVERSN) Print #0; Tab 116;"G/P%"; Tab 125;"PRICE"
If CUSTVERSN Print #0;""
If P9$[40,40] = "Y" Print #0; Tab 1;"VENDOR ITEM";
If CustVersn And PRLYR ! "want last year units
	print #0; tab 50 ;"LYR UNITS";
Endif
If Not(CUSTVERSN) Print #0; Tab 52;"VEND NAME";
If PRCOST Print #0; Tab 71;"COST     G/P%";
If PRCOST Print #0; Tab 103;"YTD UNITS"; Tab 120;"LYR UNITS";
Print #0;" "
if custom_customer$="FPC"
	print #0; u5$
else
	If CUSTVERSN Print #0;U5$[1,79] Else Print #0;U5$
endif
Print #0;" "
Return

COMPARE_LP: REM see if current is different than last price
	LET R[CH_LASTPRC]=FLEPTR[4,1]
	MAT  READ #CH_LASTPRC,R[CH_LASTPRC],28;C2;
	MAT  READ #CH_LastPrc,R[CH_LastPrc],46;C3;
!	let cnvtu[0]=c3[3];cnvtu[1]=0;cnvtu[2]=2;cnvta=c2[1]
!	gosub convert:
!	let oldbase=amount
	oldbase=c2[1]
	LET CNVTU[0]=0
	LET CNVTU[1]=c3[3]
	LET CNVTU[2]=2
	LET CNVTA=oldbase \ gosub convert: \ amt=amount
	IF abs(oldbase-X6)>.0000000001 LET STARFLAG=1 ELSE  LET STARFLAG=0
RETURN 
!
STRTSORT: Rem "================================== sort
K1$ = " ",K1$ \ Z1 = 0
!!Print @0,22;"Sorting...please wait";'CL';
CLRSORT_LOOP: Rem "Must Clear 1st!
Search #CH_SORT,3,1;K1$,R1,E 
if E = 2 Goto CSORTDONE
Search #CH_SORT,5,1;K1$,R1,E 
If E Let e$ = "syserrorfile 114 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \ error 10000
Goto CLRSORT_LOOP
!
CSORTDONE: Rem "Clearing Done, Start Real Sort
K1$ = X0 Using "######"
K99$ = " ",K99$
INDIV_LOOP: Rem   for individual customer selects only
If INDIVFLG
  Search #CustChan,3,1;K99$,R[CustChan],E
  If E = 2 Goto STRTCUSTADD
  K1$ = K99$
  X0 = K99$
End If 
LPRC_LOOP: Rem "thru Last Price
Search #CH_LASTPRC,3,1;K1$,R1,E 
If E = 2 Goto STRTCUSTADD
CUSTKEY = K1$[1,6] \ If CUSTKEY > X5 Goto STRTCUSTADD
If INDIVFLG If CUSTKEY <> X0 Goto INDIV_LOOP
If K1$[11,22] < K6$ Goto LPRC_LOOP
If K1$[11,22] > K7$ Let K1$[11,22] = "zzzzzzzzzzzz" \ Goto LPRC_LOOP
R[CH_LASTPRC] = R1
Mat Read #CH_LASTPRC,R[CH_LASTPRC],0;P$;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],16;C1;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],28;C2;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],140;LPC4;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],340;LPUNIT;
If Not(NSFLG) If LPC4[3] Goto LPRC_LOOP
X2 = C1[2] \ Gosub YMD2JUL \ if errflag Let X2 = 0
JWDATE = X2
If Not(APFLG) If JWDATE < JBDATE Or JWDATE > JEDATE Goto LPRC_LOOP
If VNDFLG Or COMMFLG
  Gosub GET_PROD
  If E Goto LPRC_LOOP
  If BVEND > B[24] Or EVEND < B[24] Goto LPRC_LOOP
  If A$[152,155] < FSTCOMM$ Goto LPRC_LOOP
  If A$[152,155] > LSTCOMM$ Goto LPRC_LOOP
End If 
KJ4$ = C1[0] Using "######"
Search #CH_CUST,2,1;KJ4$,V1,E 
If E Goto LPRC_LOOP
Mat Read #CH_CUST,V1,0;C1$;
If AUTH$ = "Y" And C1$[138,138] <> "Y" Goto LPRC_LOOP !!--return
If CUSTVERSN And PRINCFLG >= 0
  Mat Read #CH_CUST,V1,486;A0;
  If Not(PRINCFLG) If Not(A0[2]) Goto LPRC_LOOP
  If PRINCFLG If PRINCFLG <> A0[2] Goto LPRC_LOOP
End If 
Mat Read #CH_CUST,V1,142;CFC1;
Mat Read #CH_CUST,V1,195;C5;
If CFC1[1] < X0 Goto LPRC_LOOP
If INDIVFLG If CFC1[1] <> X0 Goto INDIV_LOOP
If CFC1[1] > X5 Goto STRTCUSTADD
If CFC1[2] < SLS1 Goto LPRC_LOOP
If CFC1[2] > SLS2 Goto LPRC_LOOP
if a5[5]<>0
	if cfc1[2]<>a5[5]  goto LPrc_Loop:   !"cct#242616
ENDIF
A1$ = " ",A1$;A1$[1,3] = CFC1[2] Using "###"
A1$[4,9] = K1$[1,6];A1$[34,36] = K1$[8,10];A1$[37,37] = " "
If Not(LPC4[3]) Let A1$[14,25] = K1$[11,22] Else Let A1$[14,33] = K1$[11,30]
If SORT$ = "D" Let A1$[10,13] = K1$[7,10] Else Let A1$[10,13] = P2$[81,84]
A1$[38,41] = P2$[81,84]
R1 = R[CH_LASTPRC]
T1$ = " ",T1$ \ T1$ = A1$
V1$ = " ",V1$ \ V1$ = K1$;V1 = R1
If Not(Z1) Or Z1 <> CFC1[1] Gosub STRTPRODADD \ A1$ = T1$;K1$ = V1$;R1 = V1
Z1 = CFC1[1]
X1$ = A1$[1,25]
Search #CH_SORT,3,1;X1$,X1,E
If Not(E)
  If X1$[1,25] = A1$[1,25]
    Search #CH_SORT,5,1;X1$,X1,E
	If E Let e$ = "syserrorfile 114 sortfile mode (m)=5 keyno (k)=1 r=",X1," e=",e," keyval (k$)=",X1$ \ error 10000
  End If 
End If 
Search #CH_SORT,4,1;A1$,R1,E 
If E Let e$ = "syserrorfile 114 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",A1$ \ error 10000
Goto LPRC_LOOP
!
STRTCUSTADD: Rem "Add missing Customer if "A"ll Selected
If K8$ <> "A" Goto CUSTLOOPDONE
If INDIVFLG Goto CUSTLOOPDONE
K1$ = " ",K1$
If X0 <> 0 Let K1$ = X0 - 1 Using "######"
CUSTFLE_LOOP: Rem "Loop thru Cust File
Search #CH_CUST,3,1;K1$,V1,E 
If E = 2 Goto CUSTLOOPDONE
Mat Read #CH_CUST,V1,0;C1$;
If AUTH$ = "Y" And C1$[138,138] <> "Y" Goto CUSTFLE_LOOP
Mat Read #CH_CUST,V1,142;CFC1;
If CUSTVERSN And PRINCFLG >= 0
  Mat Read #CH_CUST,V1,486;A0;
  If Not(PRINCFLG) If Not(A0[2]) Goto CUSTFLE_LOOP
  If PRINCFLG If PRINCFLG <> A0[2] Goto CUSTFLE_LOOP
End If 
If CFC1[1] < X0 Goto CUSTFLE_LOOP
If CFC1[1] > X5 Goto CUSTLOOPDONE
If CFC1[2] < SLS1 Goto CUSTFLE_LOOP
If CFC1[2] > SLS2 Goto CUSTFLE_LOOP
if a5[5]<>0
	if cfc1[2]<>a5[5]  goto CustFle_Loop:   !"cct#242616
ENDIF
A1$ = " ",A1$ \ A1$[1,3] = CFC1[2] Using "###"
A1$[4,9] = K1$[1,6]
A1$[10] = ""
Search #CH_SORT,2,1;A1$,R1,E
If E = 0 Goto CUSTFLE_LOOP
A1$ = " ",A1$ \ A1$[1,3] = CFC1[2] Using "###"
A1$[4,9] = K1$[1,6]
Gosub STRTPRODADD
Goto CUSTFLE_LOOP
!
CUSTLOOPDONE: 
Return
!
STRTPRODADD: Rem "add products from prod file to sort file if "ALL" wanted
If K8$ <> "A" Goto PRODLOOPDONE
K2$ = " ",K2$
If SORT$ = "C" Let K2$ = FSTCOMM$ Else Let K2$ = K6$
PRODFLE_LOOP: Rem "Thru Product File to record all Prods
If SORT$ = "C"
  Search #CH_PROD,3,3;K2$,R[CH_PROD],E
  If E = 2 Goto PRODLOOPDONE
  If K2$[1,4] > LSTCOMM$ Goto PRODLOOPDONE
  If K2$[5,16] < K6$ Goto PRODFLE_LOOP
  If K2$[5,16] > K7$ Let K2$[5,16] = "zzzzzzzzzzzz" \ Goto PRODFLE_LOOP
Else 
  Search #CH_PROD,3,1;K2$,R[CH_PROD],E 
  If E = 2 Goto PRODLOOPDONE
  If K2$[1,12] = "Z ZZZZZZZZZZ" Goto PRODFLE_LOOP
  If K2$ < K6$ Goto PRODFLE_LOOP
  If K2$ > K7$ Goto PRODLOOPDONE
End If 
Mat Read #CH_PROD,R[CH_PROD],0;A$;
Mat Read #CH_PROD,R[CH_PROD],156;B;
If BVEND > B[24] Or EVEND < B[24] Goto PRODFLE_LOOP
L_6600: 
A1$[10,13] = A$[152,155]
If SORT$ = "C"
  A1$[14,25] = K2$[5,16]
Else 
  A1$[14,25] = K2$[1,12]
End If 
A1$[37,37] = "*"
R1 = R[CH_PROD]
Search #CH_SORT,4,1;A1$,R1,E 
If E Let e$ = "syserrorfile 114 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",A1$ \ error 10000
Goto PRODFLE_LOOP
!
PRODLOOPDONE: Rem
Return
!
L_8000: Rem FOOT NOTE
If CUSTVERSN Return 
if custom_customer$="ACME" Return
If J8 Return
Print #0; Tab 2;" The following codes may appear next to the price :"
Print #0; Tab 5;" SP - SPECIAL PRICE due to prior agreement "
Print #0; Tab 5;" QB -MATRIX price,  QUANTITY BREAK available"
Print #0; Tab 5;" 10 B - Ten Bracket price  ."
Print #0; Tab 5;" 10 B SP  - Ten Bracket  special price ."
Return 
!
READ_PRDWHSE: Rem GET WHSE INFO
WHPROD$[1,12] = A$[140,151]
WHBLD[0] = CH_PRDWHSE;WHBLD[1] = WHSE;WHBLD[2] = 0
Call "GETWHSE.dl4",WHPROD$,WHBLD[],W1$,W3[],WHPARC[],WHLV[],W7[],WHMISC[],E,e$,rstr$
R[CH_PRDWHSE] = WHBLD[2]
If R[CH_PRDWHSE] > 0
  Mat Read #CH_PRDWHSE,R[CH_PRDWHSE],38;W2;
  Mat Read #CH_PRDWHSE,R[CH_PRDWHSE],842;WHLM;
End If 
B[8] = W3[17];B[10] = W3[16];B[21] = W3[15];B[22] = WHPARC[0]
C4[3] = WHPARC[1];C4[4] = W3[18];PF_LOAD2 = W3[14]
If W2[3] Let B[24] = W2[3]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
L_8500: Rem "================================= footnote space
if custom_Customer$="ACME" let LJ1=99 \ Return
If CUSTVERSN Let LJ1 = 99 \ Return 
If SCRN Goto L_8600
If LJ1 >= 50 Goto L_8600
For F5 = LJ1 To 49
  If Not(J8) Print #0;" "
Next F5
L_8600: 
LJ1 = 999
Return 
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
! - JUL2DATE: Rem REM DATE JULIAN X2 TO X$
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! -  Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Let errflag = 1 \ Return 
X2 = X$[1,5]
Return !!1
!
! - JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
! - DT3[0] = X2;DT3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
CONV_VARS: Rem CONVERT
X6 = X3
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
X3 = X3 - L6[1]
If L6[0] Let X3 = X3 - (X3 * (L6[0] / 100))
If SGPRICE Let X3 = SGPRICE
X6 = X3;UWORK[2] = X6
CNVTA = X3
Gosub CONVERT
UWORK[1] = FNP(AMOUNT)
CNVTA = CURCOST \ Gosub CONVERT
UWORK[5] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = C2[0]
Gosub CONVERT
C2[0] = AMOUNT
If C3[3] > 0 Mat Read #CH_CCODES,C3[3],10;PUNIT$;
C3[4] = C3[3]
If C3[4] > 0 Mat Read #CH_CCODES,C3[4],10;CUNIT$;
If PFU1[0] > 0 Mat Read #CH_CCODES,PFU1[0],10;BUNIT$;
If PFU1[18] > 0 Mat Read #CH_CCODES,PFU1[18],10;PACKUNIT$;
If C3[3] = -1 Let PUNIT$ = "CWT "
If C3[3] = -2 Let PUNIT$ = "LOT "
If C3[3] = -3 Let PUNIT$ = "LB  "
If C3[4] = -1 Let CUNIT$ = "CWT "
If C3[4] = -2 Let CUNIT$ = "LOT "
If C3[4] = -3 Let CUNIT$ = "LB  "
If PFU1[0] = -1 Let BUNIT$ = "CWT "
If PFU1[18] = -1 Let PACKUNIT$ = "CWT "
If PFU1[18] = -2 Let PACKUNIT$ = "LOT "
If PFU1[18] = -3 Let PACKUNIT$ = "LB  "
CNVTU[0] = 0
CNVTU[1] = C3[4]
CNVTU[2] = 2
CNVTA = C2[2]
Gosub CONVERT
UWORK[3] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
CNVTA = C2[1]
Gosub CONVERT
UWORK[4] = FNP(AMOUNT)
CNVTU[2] = 1 \ CNVTA = TYUNIT
Gosub CONVERT \ TYUNIT = AMOUNT
CNVTA = LYUNIT \ Gosub CONVERT
LYUNIT = AMOUNT
If CustVersn And PRLYR
	Let Cnvta=LPUNF[6] \ Gosub Convert:
	Let UWork[6]=Amount
Endif
Return 
!
GET_SUGGPRICE: Rem CALCULATE SUGGESTED PRICE
If P9$[13,13] = "N" Return 
SGPRICE = 0;L9[0] = 0
If Not(C2[1]) Or Not(C2[2]) Goto L_12160
SGPRICE = UCOST[1]
SGPRICE = SGPRICE + (SGPRICE * ((C2[1] - C2[2]) / C2[2]))
If UPCHG[0]
  If UPCHG[0] < 0
    SGPRICE = SGPRICE + Abs(UPCHG[0])
  Else 
    SGPRICE = SGPRICE + (SGPRICE * (UPCHG[0] / 100))
  End If 
End If 
L_12160: Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA;B[8] = W3[17]
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA;PF_LOAD2 = W3[14]
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
L_24800: Rem Valid unit for product (special price)?
For X = 0 To 7
  If UNITX = PFU1[X] Return 1
Next X
Return 
!
OTHER_NAMES: Rem GET ALTERNATE NAMES FIELD (IE:PRODUCT CODE)
J2 = (J0 - 1) * 10
Read #1,18,J2;D1$;
Return 
!
Rem {begin rtn.input.s}
!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 >= 3 If J0 <= 4
!  If J0 = 3 Let J2$ = "#",J2$
!  If J0 = 4 Let J2$ = "-",J2$
!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!End If 
!J1$[J3 + 1] = ""
!If J0 < 3 Goto ISENTER
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 <> 6
!  If J0 = 5
!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!    J1$ = J9$[4,7],J9$[2,3],"  "
!  Else 
!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!  End If 
!End If 
!ISENTER: Rem
!If J5 < Msc(34) - 1
!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!End If 
!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) > J3
!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!End If 
!J9$ = J4$
!If Not(Len(J9$))
!  If J0$[3,4] = "00"
!    J9$ = J1$
!  Else 
!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!  End If 
!End If 
!For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!    Gosub ISERRMSG \ Goto ISENTER
!  End If 
!Next J8
!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!ISTYPE1: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto ISOUT
!ISTYPE3: Rem
!J9 = 0
!X1 = 0
!For J8 = 1 To Len(J9$)
!  If J0 = 4 And Not(X1)
!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!      X1 = 1
!      Goto ISNCONT1
!    End If 
!  End If 
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!  If J9$[J8,J8] = " " Goto ISNCONT1
!  If Len(J0$) > 10
!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!  End If 
!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!  If J9 Goto ISNUMERR1
!  J9 = 1
!ISNCONT2: Rem
!  X1 = 1
!  If J9 Let J9 = J9 + 1
!ISNCONT1: Rem
!Next J8
!If J0 = 5 Goto ISTYPE5
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!If J9[1] = 0 Goto ISDTERR
!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!Goto ISDTERR
!ISMO30: If J9[1] > 30 Goto ISDTERR
!ISMO31: If J9[1] > 31 Goto ISDTERR
!Goto ISDTOUT
!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!  If J9[1] > 28 Goto ISDTERR
!End If 
!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!J$ = X$ \ J3 = 8 \ Goto ISOUT
!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!ISTYPE6: Call String(1,J9$)
!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!Gosub ISERRMSG \ Goto ISENTER
!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!ISERRMSG: X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: 
! - If Spc(4) > 1280 Goto CVTSTARTB
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
! - CVTTRY: Rem "this is a remark
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto CVTTRY
! - If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
! - Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}
RPTDONE: Rem END OF THIS RANGE
IF PRTFLAG<>0
	Gosub L_3800
endif
!!If SCRN Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
BUILD_SORTFILE: Rem  Is used to store the comma separated individual values for customers
FS$ = "6/SORTWORKCUST",rtrim$(UserID$)
FILE$ = "[1:1] ",FS$
try kill FS$ else rem
CustChan=FindChannel()
Build #CustChan,FILE$
R[CustChan] = 25 \ Search #CustChan,0,1;FS$,R[CustChan],E \ If E let e$="Can't build ",FILE$ \ error 10000
R[CustChan] = 1 \ Search #CustChan,0,0;FS$,R[CustChan],E \ If E let e$="Can't build ",FILE$ \ error 10000
R[CustChan] = 0 \ Search #CustChan,1,0;FS$,R[CustChan],E \ If E let e$="Can't build ",FILE$ \ error 10000
Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!!Print 'CS'
!!Chain "MX000C"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}

