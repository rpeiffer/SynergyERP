! >>> Program 523
!
! description Accounts Payable Direct Disbursement List
! loadsave -w -n 100,10 -o prog/dxport/523.dl4 src/523.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"

Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 25, 2001  12:29:26
Rem /usr/acct/r97//usr/acct/kag/work/r97/ap/la523.src (univ2) [kag] {38888}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem LA523 DIRECT DISBURSEMENT LIST
Rem LAST UPDATE 10/89 MTK
Rem             4/21/97 - tc - cct102356 count lines better
Try
Dim 1%,B9,C0[8],D1[2],D4[1],D7,E,F5,F6,G9,K,L,P,X1,DEPT,BNKFLG
Dim 2%,A1,B1,C1,C9,D3[1],D5[1],D[1],R[50],W,X2
Dim 3%,A6[2],D2[2],D6,T1[3],T4,T5,T6[3],T7[3],T8[3],T9[3],DIVTOT[3],BNKTOT[3]
Dim A1$[30],A2$[20],A3$[15],A6$[30],B$[9],B1$[9],B2$[9],D$[130],D2$[30],D3$[12]
Dim D5$[30],D6$[12],D7$[8],D8$[25],F$[16],G$[10],G9$[40],I$[50],K1$[50],K9$[50]
Dim K2$[30],M$[130],M2$[15],P$[8],R$[158],R2$[4],U$[130],U1$[130],U5$[50]
Dim V$[20],V1$[10],X$[10],2%
Dim K18$[10],K49$[10],K50$[10],DV1$[12],DV2$[12],DV3$[12],J$[50]
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
V8=0
MAXL = 60 


!Print 'CS';"DIRECT DISBURSEMENTS DATA ENTRY LIST"
V1$ = "10"
Search #15,2,1;V1$,R[15],E
If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
V1$ = " ",V1$
V1$[3,6] = R2$
Search #16,2,1;V1$,R[16],E
If E = 1 
	eflag=eflag+1
	message$="Client "+v1$[3,6]+"Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
Mat Read #1,88,112;F$; \ Open #6,F$
Mat Read #1,51,10;DEPT; \ Mat Read #1,51,18;C0;
let bnkflg=0
rec_uac = GetUIDRec(e$,IntCo,Userid$)
! get print preview
Call dxget("PRPRT",tmp$) ! (NOT ADDED?)     
audonly = 0 \ If tmp$ <> "" Let audonly = 1 
! get bank flag
If C0[8]
	call dxget("BANK",tmp$)\ let  BNKFLG = tmp$
	if bnkflg<=0 or bnkflg>99
		let eflag=eflag+1
		let message$=message$+"Invalid Bank Submitted"
		goto L_9065:
	endif
	K2$ = BNKFLG Using "##"
	Search #6,2,1;K2$,R[6],E
	If E <>0
		eflag=eflag+1
		message$=Message$+"BANK NOT ON FILE!!!"
		goto L_9065:
	End If 
endif
F6 = 0 \ F5 = 0
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G$[1,1] = intco Using "#"
g$[2,2]=groupid$
U$ = "-",U$
U1$ = "=",U1$
M$ = ""
Call Time(D8$)
L = 99
G9 = 0
M2$ = "INVC/MM/CERR"
V$ = " 0"
Search #15,2,1;V$,R[15],E
If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto L_9065:
endif
Mat Read #15,R[15],2;R$;
If R$[51,51] = " " 
	eflag=eflag+1
	Message$=Message$+"UPDATE IN PROCESS ELSEWHERE...TRY AGAIN LATER.."
	goto L_9065
endif
R$[51,51] = " " \ Mat Write #15,R[15],2;R$;
F$ = R$[39,39],"/A50DB",G$[1,2]
Open #2,F$
F$ = R$[40,40],"/A50DD",G$[1,2]
Ropen #3,F$
F$ = R$[58,58],"/A10VL",G$[1,2]
Ropen #5,F$

IF C0[6]<>0 
	F$ = R$[1,1],"/APDIV",G$[1,2] \ Open #18,F$
	F$ = rec_uac Using "2/APDDTEMP&&&&"
	tmp$="files/",f$      
	I$ = "[1:12] ",tmp$,"!"
	Build #50,I$
	R[50] = 2 \ Search #50,0,1;I$,R[50],E \ If E Gosub ERR_SEARCH
	R[50] = 1 \ Search #50,0,0;I$,R[50],E \ If E Gosub ERR_SEARCH
	Try Close #50 Else Rem
	open #50,f$
	F$ = rec_uac Using "2/APBNKTEMP&&&&"
	tmp$="files/",f$
	I$ = "[1:12] ",tmp$,"!"
	Build #49,I$
	R[49] = 2 \ Search #49,0,1;I$,R[49],E \ If E Gosub ERR_SEARCH
	R[49] = 1 \ Search #49,0,0;I$,R[49],E \ If E Gosub ERR_SEARCH
	Try Close #49 Else Rem
	open #49,f$
Endif

Gosub L_8800
if eflag<>0 goto outend: ! nothing to see here..move on..
K1$ = " ",K1$
L_2000: Search #2,3,1;K1$,R[2],E
If E = 2 Goto L_2300
Gosub L_7500
If D1[2] > 3 Goto L_2000
If C0[8] If D4 <> BNKFLG Goto L_2000
If D1[0] <> 3 Goto L_2160
K9$ = " ",K9$ \ K9$[1,2] = D4 Using "##"
K9$[3,8] = D[1] Using "######" \ K9$[9] = K1$
Search #9,4,1;K9$,R[2],E
If E Gosub ERR_SEARCH
Goto L_2000
L_2160: If F6 If D1[1] <> F6 Gosub L_3000
If M$ <> "" If M$ <> D$ Gosub L_3000
Gosub L_5800
Gosub L_5000
T8[1] = T8[1] - D2[1]
T8[2] = T8[2] - D2[2]
T5 = T5 + D2[2]
For K = 0 To 2
  T1[K] = T1[K] + D2[K]
Next K
If C0[6] Gosub L_7700
Goto L_2000
L_2300: Rem MANUAL CHECK SECTION
If Not(T1[0] + T1[1] + T1[2] + T1[3] + T6[0] + T6[1] + T6[2] + T6[3]) Goto L_2315
Gosub L_3000
Gosub L_4100
L_2315: For K = 0 To 3
  T6[K] = 0
  T7[K] = 0
Next K
K9$ = " ",K9$
Search #9,3,1;K9$,R[2],E \ If E = 2 Goto L_4300
If E Gosub ERR_SEARCH
B9 = 0 \ C9 = 0 \ L = 99 \ G9 = 98
F6 = 0 \ M$ = ""
Goto L_2370
L_2360: Search #9,3,1;K9$,R[2],E \ If E = 2 Goto L_2450
If E Gosub ERR_SEARCH
L_2370: Gosub L_7500
If B9 If B9 <> D4 Gosub L_4200
If B9 <> D4 Gosub L_3100
If C9 If C9 <> D[1] Gosub L_3000
If F6 If D1[1] <> F6 Gosub L_3000
If M$ <> "" If M$ <> D$ Gosub L_3000
Gosub L_5800
Gosub L_5000
T8[1] = T8[1] - D2[1]
T8[0] = T8[0] - D2[2]
For K = 0 To 2
  T1[K] = T1[K] + D2[K]
Next K
If C0[6] Gosub L_7700
Goto L_2360
L_2450: Rem END MANUAL CHECKS
Gosub L_3000
Gosub L_4200
Gosub L_4100
Gosub L_4000
Goto L_4300
L_3000: Rem PRINT VENDOR TOTAL
If M$ = "" Return 
Gosub L_5800
If G9 = 98 Print #0; Tab 25;"CHECK TOTALS"; \ Goto L_3020
Print #0; Tab 25;"VENDOR TOTALS";
L_3020: Print #0; Using "-----,---.##"; Tab 57;T1[0]; Tab 72;T1[1];
Print #0; Using "-----,---.##"; Tab 84;T1[2]; Tab 113;T1[3]
L = L + 1
If T5 < 0 Print #0; Tab 10;"***  NEGATIVE CHECK AMOUNT ***" \ L = L + 1
If T5 < 0 Let F5 = 99 \ Goto L_3055
Gosub L_5800
Print #0;" " \ Print #0;U1$ \ Print #0;" " \ L = L + 3
L_3055: Rem LET L=L+3  ! handled closer to print line
For K = 0 To 3
  T9[K] = T9[K] + T1[K]
  T6[K] = T6[K] + T1[K]
  T7[K] = T7[K] + T1[K]
  T1[K] = 0
Next K
T5 = 0
M$ = "" \ C9 = D[1] \ F6 = D1[1]
Return 
L_3100: Rem PRINT BANK NAME
K2$ = D4 Using "##"
A6$ = "BANK NOT ON FILE!!!!"
Search #6,2,1;K2$,R[6],E \ If Not(E) Goto L_3130
If E > 1 Gosub ERR_SEARCH
Stop 
F5 = 96 \ Goto L_3135
L_3130: Mat Read #6,R[6],2;A6$;
L_3135: Print #0;" " \ L = L + 1
Gosub L_5800
Print #0; Using "##  ";"BANK: ";D4;A6$
Print #0;" " \ L = L + 2
B9 = D4
Return 
L_4000: Rem TOTAL PRINT
Print #0;" " \ L = L + 1
Gosub L_5800
Print #0;"** GRAND TOTALS **";
Print #0; Using "------,---.##"; Tab 56;T9[0];
Print #0; Using "-----,---.##"; Tab 72;T9[1]; Tab 85;T9[2];
Print #0; Using "------,---.##"; Tab 112;T9[3];
Print #0;" "
Print #0;U1$
L = L + 2
Return 
L_4100: Rem PRINT CHECK PROCESSING TOTALS
Print #0;" " \ L = L + 1
Gosub L_5800
If G9 = 98 Print #0;"*** MANUAL CHECKS TOTAL ***"; \ Goto L_4125
Print #0;"** TOTALS **";
L_4125: Print #0; Using "------,---.##"; Tab 56;T6[0];
Print #0; Using "-----,---.##"; Tab 72;T6[1]; Tab 85;T6[2];
Print #0; Using "------,---.##"; Tab 112;T6[3];
Print #0;" "
Print #0;U1$
L = L + 2
For K = 0 To 3
  T6[K] = 0
Next K
Return 
L_4200: Rem PRINT BANK CHECK TOTALS
If C9 Gosub L_3000 \ C9 = D[1] \ F6 = D1[1]
Print #0;" " \ L = L + 1
Gosub L_5800
Print #0; Using "##  ";"** TOTALS FOR BANK: ";B9;
Print #0; Using "------,---.##"; Tab 56;T7[0];
Print #0; Using "------,---.##"; Tab 72;T7[1]; Tab 85;T7[2];
Print #0; Using "------,---.##"; Tab 112;T7[3];
Print #0;" "
Print #0;U1$
L = L + 2
Mat Read #6,R[6],32;A6
A6[1] = A6[1] - T7[2]
Mat Write #6,R[6],32;A6;
For K = 0 To 3
  T7[K] = 0
Next K
Return 
L_4300: Rem DISTRIBUTION AUDIT SECTION
L = 99 \ G9 = 99
V$ = "10"
Search #15,2,1;V$,R[15],E 
If e<>0
	eflag=eflag+1
	message$="Error In A/P Control File. Record '10' Not On File. "
	let R$=" ",R$
else
	Mat Read #15,R[15],6;R$;
endif
B1$[1,9] = R$[109,121]
B$[1,9] = R$[127,139]
B2$[1,9] = R$[91,103]
Gosub L_5800
If C0[6] Goto L_4500
For K = 2 To 1 Step -1
  If Not(T8[K]) Goto L_4415
  Gosub L_5800
  Print #0; Tab 2;
  If K = 2 Print #0; Tab 20;"COMPUTER PRINT CASH TOTAL";
  If K = 1 Print #0;B1$[2,9]; Tab 20;"DISCOUNT";
  If T8[K] > 0 Print #0; Using "####,###.##"; Tab 89;T8[K];
  If T8[K] < 0 Print #0; Using "####,###.##"; Tab 110;T8[K];
  Print #0;"" \ L = L + 1
L_4415: Next K
T4 = T8[1] + T8[2]
K2$ = " ",K2$
L_4430: Search #6,3,1;K2$,R[6],E \ If E = 2 Goto L_4700
If E Gosub ERR_SEARCH
Mat Read #6,R[6],32;A6; \ If Not(A6[1]) Goto L_4430
Mat Read #6,R[6],2;A6$;
Gosub L_5800
Print #0; Using "########"; Tab 2;A6; Tab 20;A6$[1,30];
If A6[1] >= 0 Print #0; Using "####,###.##"; Tab 89;A6[1];
If A6[1] < 0 Print #0; Using "####,###.##"; Tab 110;A6[1];
Print #0;" " \ T4 = T4 + A6[1]
L = L + 1
Goto L_4430
L_4500: Rem PRINT BANK DISTRIBUTIONS
K49$ = " ",K49$
L_4510: Search #49,3,1;K49$,R[49],E \ If E = 2 Goto L_4600
If E Gosub ERR_SEARCH
Mat Read #49,R[49],0;BNKTOT; \ If Not(BNKTOT[0]) Goto L_4510
D4[1] = K49$[3,4] \ K2$ = K49$[1,2]
X = K49$[1,2] \ If X Goto L_4530
D5$ = "COMPUTER PRINT CASH TOTAL "
A2$ = " ",A2$
Goto L_4575
L_4530: Search #6,2,1;K2$,R[6],E \ If Not(E) Goto L_4540
A6 = B$[1,9] \ D5$ = "MISSING BANK" \ Goto L_4545
L_4540: Mat Read #6,R[6],2;D5$; \ Mat Read #6,R[6],32;A6;
L_4545: A2$ = " ",A2$ \ A2$[1,9] = A6 Using "#########"
If Not(DEPT) Goto L_4570
A2$[8,9] = D4[1] Using "&&"
Gosub L_8500 \ If Not(E) Goto L_4575
A2$ = " ",A2$ \ A2$[1,9] = A6 Using "#########"
L_4570: Gosub L_8500 \ If E Let F5 = 98
L_4575: D6$ = D4[1] Using "DIVISION ##" \ D6 = BNKTOT[0]
Gosub L_5800
Gosub L_5300
T4 = T4 + BNKTOT[0]
Goto L_4510
L_4600: Rem DIVISIONAL TOTALS
K50$ = " ",K50$
L_4610: Search #50,3,1;K50$,R[50],E \ If E = 2 Goto L_4700
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT; \ If Not(DIVTOT[2]) Goto L_4610
D4[1] = K50$[1,2] \ Gosub L_7000
T4 = T4 + DIVTOT[2]
A2$ = " ",A2$ \ A2$[2,9] = DV3$[2,9]
Gosub L_8500 \ If E Let F5 = 98
D5$ = " ",D5$ \ D6$ = " ",D6$
D5$ = D4[1] Using "DISCOUNT FOR DIVISION:##"
D6 = DIVTOT[2]
Gosub L_5800
Gosub L_5300
Goto L_4610
L_4700: Rem ACCT DIST
A1$ = " ",A1$ \ A2$ = " ",A2$
L_4710: Search #3,3,2;A1$,R[3],E \ If E = 2 Goto L_4800
If E Gosub ERR_SEARCH
Gosub L_7600
If C0[8] Mat Read #2,D5,212;D4; \ If D4 <> BNKFLG Goto L_4710
Mat Read #2,D5,8;D1; \ If D1[2] > 3 Goto L_4710
A2$[2,9] = D7$[1,8] \ T4 = T4 + D6
Gosub L_8500 \ If E Let F5 = 98
Gosub L_5800
Gosub L_5300
Goto L_4710
L_4800: Rem ACCEPT DATA ENTRY LIST
If T4 Print #0; Tab 40;"OUT OF BALANCE!!!!" \ F5 = 97 \ L = L + 1
A1$ = " ",A1$
!If Err 0 Rem
	!try Close #0 Else Rem
L_4825: !If Err 0 Gosub ERR_TRAP
If F5<>0
	eflag=eflag+1
	If F5 = 99 
		Message$=Message$+" DIRECT DISBURSEMENT LIST HAS A NEGATIVE CHECK "
		Print #0;"Warning: DIRECT DISBURSEMENT LIST HAS A NEGATIVE CHECK"
	endif
	If F5 = 98 
		Message$=Message$+" ACCOUNT NUMBER NOT FOUND IN VALIDATION FILE!! "
		Print #0;"Warning: ACCOUNT NUMBER NOT FOUND IN VALIDATION FILE!!"
	endif
	If F5 = 97 
		Message$=Message$+" DIRECT DISBURSEMENT LIST IS OUT OF BALANCE!!! "
		Print #0;"Warning: DIRECT DISBURSEMENT LIST IS OUT OF BALANCE!!!"
	endif
	If F5 = 96 
		Message$=Message$+" BANK NOT ON FILE!!!!"
		Print #0;"Warning: BANK NOT ON FILE!!!!"
	endif
	if not(audonly)
		let message$=message$+ "No Update Performed "
		print #0;" No Update Performed"
	endif
	goto L_9100:
endif


if audonly <>0 Goto L_9100
if eflag goto L_9100:
L_4950: !Print "\15\ UPDATING FILE ... PLEASE WAIT"
Message$=Message$+" Update Complete"
K1$ = " ",K1$
L_4960: E = 0
L_4965: Search #2,3,1;K1$,R[2],E
If E = 2 Goto OUTEND
If E Gosub ERR_SEARCH
If C0[8]
  Mat Read #2,R[2],212;D4; \ If D4 <> BNKFLG Goto L_4965
End If 
Mat Read #2,R[2],8;D1;
If D1[2] = 0 Let D1[2] = 3
Mat Write #2,R[2],8;D1;
Goto L_4960
L_5000: Rem PRINT LINE
let totdd=totdd+1
If M$ = D$ Goto L_5025
Print #0;D$[1,30];
If D[0] Print #0; Using "  ######";" VENDOR CODE:";D[0];
Print #0;" " \ L = L + 1
Print #0;D$[31,60];
L_5025: Print #0; Tab 32;D3$[1,12];
If D[1] Print #0; Using "######"; Tab 46;D[1];
Print #0; Using "--------.##"; Tab 59;D2[0];
Print #0; Using "------.##"; Tab 76;D2[1];
Print #0; Using "--------.##"; Tab 86;D2[2];
A1$ = " ",A1$
A1$[1,5] = R[2] Using "#####"
Gosub L_5600
If M$ <> D$ Print #0;D$[61,90];
X2 = D3[0]
Gosub L_8900
Print #0; Tab 32;P$[1,8];
X2 = D3[1]
Gosub L_8900
Print #0; Tab 46;P$[1,8];
Gosub L_5600
If M$ <> D$ Print #0;D$[91,105];",";D$[106,107];
If D1[0] > 0 If D1[0] < 4 Print #0; Tab 32;M2$[D1[0] * 3 - 2,D1[0] * 3];
If D1[1] Print #0; Tab 37;"- D/P";
Print #0; Tab 46;D2$[1,30];
If C0[6] Print #0; Using "DIVISION:##"; Tab 80;D4[1];
Gosub L_5600
If M$ = D$ If R[2] <> X2 Goto L_5200
If M$ <> D$ Print #0;D$[108,116];
Gosub L_5600
L_5165: If R[2] <> X2 Goto L_5200
Gosub L_5600
Goto L_5165
L_5200: Rem PRINT #0;" " \ PRINT #0;U$
Print #0;U$ \ L = L + 1
M$ = D$
Return 
L_5300: Rem PRINT DISTRIBUTION AMOUNT
Gosub L_5800
Print #0; Tab 2;A2$[2,9];
Print #0; Tab 20;A3$[1,15];
Print #0; Tab 40;D5$[1,30];
Print #0; Tab 72;D6$[1,12];
If D6 >= 0 Print #0; Using "####,###.##"; Tab 89;D6
If D6 < 0 Print #0; Using "####,###.##"; Tab 110;D6
L = L + 1
Return 
L_5600: Rem ACCT LOOKUP
E = 0
Search #3,3,1;A1$,R[3],E
If E = 2 Let X2 = 0
If E = 2 Goto L_5660
If E Gosub ERR_SEARCH
X2 = A1$[1,5]
If R[2] <> X2 Goto L_5660
Gosub L_7600
Print #0; Tab 101;D7$[1,8];
Print #0; Using "-----,---.##"; Tab 114;D6;
T1[3] = T1[3] + D6
L_5660: Print #0;" " \ L = L + 1
Gosub L_5800
Return 
L_5800: Rem PRINT PAGE HEADING
If L < MAXL Return 
If P If Not(V8) Print #0;"\14\"
!If P If V8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
L = 4
Print #0;" "
Print #0; Tab (Int(66 - Len(G9$) / 2));G9$
P = P + 1
Print #0; Tab 40;"DIRECT DISBURSEMENTS DATA ENTRY LIST"
Print #0; Tab 10;"DATE: ";D8$[1,14];
If C0[8] Print #0; Tab 50;"BANK ";BNKFLG;
If audonly<>0 print #0;tab 100;"*PREVIEW*";
Print #0; Tab 110;"PAGE ";P
If G9 = 98 Print #0; Tab 50;"****  M A N U A L  C H E C K S  ****" \ L = L + 1
Print #0;" "
L = L + 2
If G9 = 99 Goto L_6000
Print #0;"VENDOR NAME & CODE"
Print #0; Tab 32;"INVOICE #";
Print #0; Tab 46;"CHECK #";
Print #0; Tab 60;"GROSS AMT";
Print #0; Tab 76;"DISC AMT";
Print #0; Tab 87;"  PAY AMT";
Print #0; Tab 101;"ACCOUNT #";
Print #0; Tab 115;"DISTRB AMT";
Print #0;" "
Print #0;"ADDRESS 1"; Tab 32;"INVOICE DATE"; Tab 46;"CHECK DATE"
Print #0;"ADDRESS 2"; Tab 32;"TYPE"; Tab 46;"DESCRIPTION"
Print #0;"CITY, STATE"
Print #0;"ZIP CODE"
Print #0;U1$
Print #0;" "
L = L + 8
Return 
L_6000: Rem PAGE HEADING ACCOUNT DIST
Print #0; Tab 42;"* * * * *  DISTRIBUTION AUDIT LIST  * * * * *"
Print #0;" "
Print #0; Tab 2;"ACCOUNT#"; Tab 20;"DESCRIPTION"; Tab 40;"VENDOR";
Print #0; Tab 72;"INVOICE #"; Tab 95;"DEBIT"; Tab 115;"CREDIT"
L = L + 3
Return 
L_7000: Rem LOOKUP DIV TOTAL
K18$ = " ",K18$ \ K18$[1,2] = D4[1] Using "##"
Search #18,2,1;K18$,R[18],E \ If E Goto L_7050
Mat Read #18,R[18],42;DV1$;
Mat Read #18,R[18],54;DV2$;
Mat Read #18,R[18],66;DV3$;
Goto L_7090
L_7050: DV1$ = " ",DV1$
DV2$ = " ",DV2$
DV3$ = " ",DV3$ \ DV3$[1,9] = B1$[1,9]
L_7090: Return 
L_7500: Rem READ DIRECT DISBURSEMENT FILE
Mat Read #2,R[2],0;D;
Mat Read #2,R[2],8;D1;
Mat Read #2,R[2],14;D$;
Mat Read #2,R[2],144;D2;
Mat Read #2,R[2],162;D3;
Mat Read #2,R[2],170;D2$;
Mat Read #2,R[2],200;D3$;
Mat Read #2,R[2],212;D4;
Return 
L_7600: Rem READ DIRECT DISBURSEMENT ACCOUNT FILE
Mat Read #3,R[3],0;D5;
Mat Read #3,R[3],8;D5$;
Mat Read #3,R[3],38;D7$;
Mat Read #3,R[3],46;D6;
Mat Read #3,R[3],52;D7;
Mat Read #3,R[3],54;D6$;
Return 
L_7700: Rem UPDATE DIVISION TOTAL
If Not(C0[6]) Return 
K50$ = " ",K50$ \ K50$[1,2] = D4[1] Using "##"
Search #50,2,1;K50$,R[50],E \ If Not(E) Goto L_7745
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #50,1,0;K50$,R[50],E \ If E Gosub ERR_SEARCH
For X = 0 To 3 \ DIVTOT[X] = 0 \ Next X
Mat Write #50,R[50],0;DIVTOT
Search #50,4,1;K50$,R[50],E \ If E Gosub ERR_SEARCH
L_7745: Mat Read #50,R[50],0;DIVTOT
DIVTOT[2] = DIVTOT[2] - D2[1]
Mat Write #50,R[50],0;DIVTOT;
K49$ = " ",K49$ \ K49$[1,2] = D4 Using "##" \ K49$[3,4] = D4[1] Using "##"
Search #49,2,1;K49$,R[49],E \ If Not(E) Goto L_7815
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #49,1,0;K49$,R[49],E \ If E Gosub ERR_SEARCH
For X = 0 To 2 \ BNKTOT[X] = 0 \ Next X
Mat Write #49,R[49],0;BNKTOT;
Search #49,4,1;K49$,R[49],E \ If E Gosub ERR_SEARCH
L_7815: Mat Read #49,R[49],0;BNKTOT
BNKTOT[0] = BNKTOT[0] - (D2[0] - D2[1])
Mat Write #49,R[49],0;BNKTOT;
Return 
L_8500: Rem VALIDATION FILE LOOKUP
A3$ = "NOT ON FILE!!!"
Search #5,2,1;A2$,R[5],E \ If E Return 
Mat Read #5,R[5],12;A3$;
Return 
L_8800: Rem CLEAR BANK TOTALS
K2$ = " ",K2$
L_8820: Search #6,3,1;K2$,R[6],E
If E = 2 Return 
If E Gosub ERR_SEARCH
Mat Read #6,R[6],32;A6;
A6[1] = 0
Mat Write #6,R[6],32;A6;
Goto L_8820
L_8900: Rem PUT DATE FROM X2 INTO P$
P$ = " ",P$
If Not(X2) Return 1
U5$ = X2 Using "&&&&&&"
P$[1,2] = U5$[3,4]
P$[3,3] = "/"
P$[4,5] = U5$[5,6]
P$[6,6] = "/"
P$[7,8] = U5$[1,2]
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

L_9100: Rem END OF THIS RANGE
For K = 0 To 3
  T9[K] = 0
Next K
Goto OUTEND



OUTEND: Rem EXIT PROGRAM
V$ = " 0"
Search #15,2,1;V$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
R$[51,51] = "1" \ Mat Write #15,R[15],2;R$;
Gosub L_8800
If Not(C0[6]) Goto L_9065
F$ = rec_uac Using "2/APDDTEMP&&&&"
Call FindF(F$,X2) \ If Not(X2) Goto L_9050
Try Kill F$ Else Rem
L_9050: F$ = rec_uac Using "2/APBNKTEMP&&&&"
Call FindF(F$,X2) \ If Not(X2) Goto L_9065
Try Kill F$ Else Rem
L_9065:  ! no flags reset

!Print 'CS' \ Close 
!Chain "MX000"
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totdd)
		returnstatus=1
		let message$=message$+"There are no Direct Disbursement Transactions available to list"
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totdd)+" Direct Disbursements Transaction(s) Listed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
