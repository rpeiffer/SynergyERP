!"DXBLOCKCONDITIONS.LIB" === Page blocks support library
! supporting library of custom routines for page block file maintenance edit checks
!
!"dxblockconditions.bas" 1.0 8/26/09
!
! loadsave -w -n 100,10 -o dxblockconditions.lib src/dxblockconditions.src
!
!all rights reserved. (c)copyright 2009 by: dynamicconcepts 
!
!
!
!	Supports conditions for dxblock applications:
!	Called via:
!
!
! *Declare dL4 Intrinsic Subs & Functions
Declare Intrinsic Sub ProgramDump
Declare Intrinsic Sub Env
Declare Intrinsic Function FindChannel,trim$,dateusing$
Declare Intrinsic Sub DXOpen,DXGet,DXSet,DXClose
Declare Intrinsic Function EncFnm$
external lib "dxblockgeneral.lib" !general routines
declare external sub blocksuberr
!
include "src/inc/filetaxcode.inc"
include "src/inc/filezonefle.inc"
!
! *Declare External Libs & Subs & Functions
!
!External
!
!   Name:
!               example$() - an example of a custom filter for dxblock maintenance applications
!
!   Synopsis:
!		example$(recordstruct.)      often pass in the data recordstruct. and any other parameters 
!                                            parameters are defined in Block header conditions field
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message
!
External Function example$()
Dim e$[100]
 Try

 else
  if spc(8) < 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  if spc(8)<20000 error 10000 else error 20000
 end try
end function e$ ! example$
!
!   Name:
!               taxcondition$(taxcode.) - 133 tax codes maint, verifies brkdnXpct add up to total taxrate
!
!   Synopsis:
!		taxcondition$(taxcode.)      pass in the data recordstruct. and any other parameters 
!                                    parameters are defined in Block header conditions field
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message
!
External Function taxcondition$(taxcode. as taxcode)
Dim e$[100]
 Try
  if taxcode.taxrate = taxcode.brkdn1pct + taxcode.brkdn2pct + taxcode.brkdn3pct + taxcode.brkdn4pct + taxcode.brkdn5pct + taxcode.brkdn6pct + taxcode.brkdn7pct + taxcode.brkdn8pct + taxcode.brkdn9pct
   exit function ""
  else
   exit function "Breakdown percentages do not equal Tax Rate"
  end if
 else
  if spc(8) < 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  if spc(8)<20000 error 10000 else error 20000
 end try
end function e$ ! taxcondition$
!
!   Name:
!               mzonecondition$(zonefle.) - 115 zone maint, verifies at least one zone is Y
!
!   Synopsis:
!		mzonecondition$(zonefle.)      pass in the data recordstruct. and any other parameters 
!                                    parameters are defined in Block header conditions field
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message
!
External Function mzonecondition$(zonefle. as zonefle)
Dim e$[100],ubsp61$[256]
 Try
 !have to assume ctrl file is always open on channel #1
 Mat Read #1,61,0;ubsp61$;
 If ubsp61$[34,34]<>"Y"
  if zonefle.day1$="Y" or zonefle.day2$="Y" or zonefle.day3$="Y" or zonefle.day4$="Y" or zonefle.day5$="Y" or zonefle.day6$="Y" or zonefle.day7$="Y"
   exit function ""
  else
   exit function "At least one zone must be selected"
  end if
 else !these fields are not entered, no check
  exit function ""
 end if
 else
  if spc(8) < 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  if spc(8)<20000 error 10000 else error 20000
 end try
end function e$ ! mzonecondition$
!
!External 
!
!   Name:
!		condition1$() - Access filter for dxblock maintenance applications
!
!   Synopsis:
!		condition1$(Parameters$)
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message
!
External Function condition1$(Parameters$)
Dim e$[100]
 Try
  if Parameters$
    e$ = "1"  ! replace with parsing and evaluation code
  else
    e$ = "1"
  end if
 else
  if spc(8) < 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  if spc(8)<20000 error 10000 else error 20000
 end try
end function e$ ! condition1$
!
!External 
!
!   Name:
!		condition2$() - Access filter for dxblock maintenance applications
!
!   Synopsis:
!		condition2$(Parameters$)
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message
!
External Function condition2$(Parameters$)
Dim e$[100]
 Try
  if Parameters$
    e$ = "1"  ! replace with parsing and evaluation code
  else
    e$ = "1"
  end if
 else
  if spc(8) < 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  if spc(8)<20000 error 10000 else error 20000
 end try
end function e$ ! condition2$
!
!   Name:
!		oncondition$() - filter
!
!   Synopsis:
!		oncondition$(conditions$)
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message		
!
External Function oncondition$(conditions$)
Dim e$[100],pcol,selector$[12],parameters$[100]
 Try
  pcol = pos(conditions$,=":")
  if pcol > 1
    selector$ = UCase$(conditions$[1,pcol-1])
	parameters$ = conditions$[pcol+1]
    Select Case Selector$
	  Case "C1"
	  	exit function Condition1$(parameters$)
	  Case "C2"
	  	exit function Condition2$(parameters$)
	  
	  Case Else
	    exit function "Invalid Cx: condition specification"
	End Select
  end if
 else
  if spc(8) < 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  if spc(8)<20000 error 10000 else error 20000
 end try
end function e$ ! oncondition
! end of dxblockconditions.lib

