! >>> Program 690a
!
! description  Warehouse Analysis - Product Picking Report
!
! loadsave -w -n 100,10 -o prog/dxport/690a.dl4 src/690a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  9, 2006  13:55:34
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx690a.src (univ2) [txc] {46153}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX690A - PRODUCT PICKED REPORT
Rem AUTHOR: DD   AUG 21, 1989
Rem LAST UPDATE:
!--- custom_customer$ --------------
! PCS jliu 2/25/03 cct165195 if the product's commodity code is "TIME", don't   
!    print the product info  
!
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1 
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim P1$[156],P2$[22],M0$[5]
Dim 2%,B1[24],P2[2],3%,A1[19]
Dim 3%,C5[5],P3[11,1],AMOUNT
Dim P9$[50],SUNIT$[4],DONTREORD$[1],SPACE$[12]
Dim 1%,PRIM,CH_PLOC,SCR,RASL[5]
Dim PL$[30],PLOC$[18],PRIMLOC$[10]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8],U3$[60]
Dim 1%,F,X0[1],D2[3],W0[3],2%,X2,3%,J,X3[1],T7,T8[20],T9[20]
Dim K1$[50],K2$[12],K3$[12],K4$[20],K6$[14],X$[10],T9$[26],VEND$[6]
Dim Z$[1],CUSTOM_CUSTOMER$[30]
Dim 2%,SVEND,EVEND,W2[3],3%
!
Dim tmp$[500]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!!Print @0,0;'CS';
CH_PLOC = 5
For J = 2 To 6
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1232","1792","1728","208 ","1744"
Mat Read #1,0,116;D2;
X4 = D2[2]
Mat Read #1,0,100;J8$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(rtrim$(custom_customer$))
Mat Read #1,19,50;P9$;
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
Read #1,3;J1$;
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 20
!
SPACE$ = " ",SPACE$
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"690a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("WHSE",tmp$) \ WH = tmp$
call dxget("SCODE",K2$) \ K2$=UCase$(K2$),Blank$
call dxget("ECODE",K3$) \ K3$=UCase$(K3$),EndParam$
call dxget("SVCODE",tmp$) \ SVEND = tmp$
call dxget("EVCODE",tmp$) \ if tmp$ = "" let EVEND = 999999 else EVEND = tmp$
call dxget("MONTHS",tmp$) \ M0 = tmp$
call dxget("TOP",tmp$) \ If tmp$ = "" Let P1 = 100 else P1 = tmp$
!
!validations warehouse
If WH < 1 Or WH > 99 let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
If P9$[41,41] = "W" Call "CHKWRASL",WH,RASL[]
!validations product code
If K3$ <= K2$ let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!!If Len(K2$) < 12 Let K2$[Len(K2$) + 1,12] = SPACE$[Len(K2$) + 1,12]
!!If Len(K3$) < 12 Let K3$[Len(K3$) + 1,12] = SPACE$[Len(K3$) + 1,12]
!validations vendor  code
if SVEND < 0 or SVEND > 999999 let e$="Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
if EVEND < SVEND or EVEND > 999999 let e$="Invalid ending vendor code, must be between starting vendor code and 999999!" \ error 10000
!validations months
If M0 < 1 Or M0 > 12 let e$ = "Invalid month, must be between 1 and 12!" \ error 10000
!
!validations top % to print
If P1 < 1 Or P1 > 100 let e$ = "Invalid top %, must be between 1 and 100!" \ error 10000
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!L_900: Rem GET RANGES
!!SPACE$ = " ",SPACE$
!!Print 'CS'
!L_905: !Print @0,5;"ENTER THE WAREHOUSE TO PRINT,  E: TO EXIT ";
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!!WH = K2$
!!If WH < 1 Or WH > 99 Goto L_905
!!If P9$[41,41] = "W" Call "CHKWRASL",WH,RASL[]
!!Print @0,7;"ENTER STARTING PRODUCT CODE, <CR> FOR ALL,   E: TO EXIT : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!If K2$ = "" Let K3$ = "}}}}}}}}}}}}";K2$ = " ",K2$ \ Goto L_945
!Print @0,9;"ENTER ENDING   PRODUCT CODE, <CR> FOR LAST,  E: TO EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!If K3$ = "" Let K3$ = "}}}}}}}}}}}}"
!!L_945: !!If K2$ <= K3$ Goto L_947
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!!L_947: !!If Len(K2$) < 12 Let K2$[Len(K2$) + 1,12] = SPACE$[Len(K2$) + 1,12]
!!If Len(K3$) < 12 Let K3$[Len(K3$) + 1,12] = SPACE$[Len(K3$) + 1,12]
!!L_950:!! Print @0,11;"ENTER STARTING VENDOR  CODE, <CR> FOR ALL,   E: TO EXIT : ";'CE';
!!Input ""VEND$ \ If VEND$ = "E" Goto OUTEND
!!If VEND$ = "" Let EVEND = 999999;SVEND = 0 \ Goto L_976
!!SVEND = VEND$
!If SVEND <= 0
!  Print @0,21;"VENDOR CODE MUST BE POSITIVE NUMERIC !";'CE';
!  Signal 3,15 \ Goto L_950
!End If 
!L_966: !!Print @0,13;"ENTER ENDING   VENDOR  CODE, <CR> FOR LAST,  E: TO EXIT : ";'CE';
!!Input ""VEND$ \ If VEND$ = "E" Goto OUTEND
!!If VEND$ = "" Let EVEND = 999999 \ Goto L_976
!!EVEND = VEND$
!If EVEND <= 0
!  Print @0,21;"VENDOR CODE MUST BE POSITIVE NUMERIC !";'CE'; \ Signal 3,15 \ Goto L_966
!End If 
!!L_976: !!If SVEND <= EVEND Goto L_990
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_950
!L_990:
!K1$ = " ",K1$ \ K1$[1,2] = WH Using "##"
!J1 = 90 \ J2 = 0 
!L_995: !!Print @0,15;"ENTER THE NUMBER OF MONTHS YOU WISH TO INCLUDE ON THE REPORT 1 TO 12  ";
!!!Input ""M0$ \ If M0$ = "E" Goto OUTEND
!!!M0 = M0$ \ If M0 > 12 Goto L_995
!!!If Not(M0) Goto L_995
!X0 = 2
!X0[1] = 1
!!Gosub L_1700
!L_1075: Rem "confirmation to print
!!Print @10,22;'CL';
!!Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z$
!!Z$ = "P"
!!If Z$ = "E" Goto OUTEND
!!If Z$ = "R" Goto L_900
!!If Z$ = "P" Goto L_1100
!!Goto L_1075
!!!!!!!!!!!!
!!L_1100: Rem
!F = 2
!J2$ = "    " \ J3$ = "}}}}"
!!Goto L_1400
!!!!!!!!!!!
!L_1200: Rem CTGY
!Print @0,15;'CE';"ENTER STARTING COMMODITY, <CR> FOR ALL,   E: TO EXIT ";
!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!If J2$ = "" Let J2$ = "    " \ J3$ = "}}}}" \ Goto L_1300
!If Len(J2$) < 4 Let J2$[Len(J2$) + 1] = "    "
!J2$[5] = ""
!Print @0,17;'CE';"ENTER ENDING COMMODITY,   <CR> FOR LAST,  E: TO EXIT ";
!Input ""J3$ \ If J3$ = "E" Goto OUTEND
!If J3$ = "" Let J3$ = "}}}}"
!If Len(J3$) < 4 Let J3$[Len(J3$) + 1] = "    "
!J3$[5] = ""
!If J2$ <= J3$ Goto L_1300
!Print @0,21;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
!Signal 3,30 \ Goto L_1200
!L_1300: Rem
!F = 9
!!!
if j8 
  tmp$ ="PRODUCT",fdel$
  tmp$ = tmp$,"DESCRIPTION",fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$,"LOCATION",fdel$
  tmp$ = tmp$,"TIMES PICKED",fdel$
  tmp$ = tmp$,"UNITS",fdel$
  tmp$ = tmp$,"UNITS TYPE",fdel$
  tmp$ = tmp$,"UNITS PER ORDER",fdel$
  tmp$ = tmp$,"UNITS PER ORDER TYPE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
K1$ = " ",K1$ \ K1$[1,2] = WH Using "##"
J1 = 90 \ J2 = 0
X0 = 2
X0[1] = 1
F = 2
J2$ = "    " \ J3$ = "}}}}"
!!
L_1400: Rem BY CTGY
!!Print @0,21;'CE';"CLEARING SORT FILE. . . ." \ Signal 3,0
J4$ = " ",J4$
L_1415: Search #9,3,1;J4$,V1,E
If E Goto L_1500
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 690a sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J4$ \error 10000
!!If E Gosub ERR_SEARCH
Goto L_1415
L_1500: Rem SORT IT
!!Print @0,21;'CE';"SORTING, PLEASE WAIT. . ." \ Signal 3,0
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E
If E Goto L_1800
W1 = K1$[1,2]
If W1 <> WH Goto L_1520
If K1$[3,Len(K2$) + 2] < K2$ Goto L_1520
L_1530: If K1$[3,Len(K3$) + 2] > K3$ Goto L_1800
Mat Read #2,R1,0;P2$;
Mat Read #2,R1,34;P3;
If X0[1] = 1 Let X3 = C5[3]
If X0[1] = 2 Let X3 = C5[1]
If X0 = 3 Goto L_1567
Gosub L_3000
if custom_customer$="PCS"
	if P1$[152,155]="TIME" goto L_1520
Endif
X3 = T9[0]
If X0 = 1 If Not(X3) Goto L_1520
L_1567: T7 = T7 + X3
J4$ = " ",J4$ \ If F = 9 Let J4$ = P1$[152,155]
J4$[5] = (99999999.99 - X3) Using "#########.##"
J4$[17] = K1$
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 690a sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \ error 10000
!!If E Gosub ERR_SEARCH
Goto L_1520
L_1700: Rem % TO PRINT
!!Print @0,17;'CE';"ENTER THE TOP % TO PRINT, <CR> FOR ALL ";
!!Input ""J$ \ If Len(J$) > 3 Goto L_1700
!If J$ = "" Let J$ = "100"
!P1 = J$ \ If P1 <= 0 Goto L_1700
!If P1 > 100 Goto L_1700
Return 
L_1800: Rem
K1$ = " ",K1$ \ K3$ = "}",K3$
Gosub L_1850
Goto L_1900
L_1850: J2$ = " ",J2$
J2$ = "SALES - "
If X0[1] = 1 Let J2$ = J2$,"UNITS"
If X0[1] = 2 Let J2$ = J2$,"DOLLARS"
Return 
L_1900:!! Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
J = 0
K4$ = " ",K4$
L_2000: Search #9,3,1;K1$,R1,E
If E Goto outend  !!L_9100
Mat Read #2,R1,0;P2$;
Mat Read #2,R1,22;P2;
Mat Read #2,R1,34;P3;
Mat Read #3,P2[0],0;P1$;
Mat Read #3,P2[0],156;B1;
Mat Read #3,P2[0],256;A;
Mat Read #3,P2[0],298;C5;
Mat Read #3,P2[0],512;PFU1;
Mat Read #3,P2[0],554;PFU2;
Mat Read #3,P2[0],684;U3$;
if custom_customer$="PCS"
	if P1$[152,155]="TIME" goto L_2000 ! "custom - cct 165195
Endif
If P1$[140,151] <> P2$[1,12] Goto L_2000
J = J + 1
If K4$[1,4] <> K1$[1,4] Gosub L_4500
K4$ = K1$
K6$ = " ",K6$;K6$[1,12] = K1$[19,30];K6$[13,14] = K1$[17,18]
Search #6,2,1;K6$,R6,E !!\ If E > 2 Gosub ERR_SEARCH
If E Let DONTREORD$ = " ",DONTREORD$ \ Goto L_2110
Mat Read #6,R6,38;W2;
Mat Read #6,R6,420;W0;
If W2[3] Let B1[24] = W2[3]
If W0[0] Let DONTREORD$ = "*" Else Let DONTREORD$ = " "
L_2110: If B1[24] < SVEND Or B1[24] > EVEND Goto L_2000
PRIMLOC$ = ""
If Not(RASL) Gosub PRIMLOC_SRCH
If PRIMLOC$ = "" Or PRIMLOC$[1,6] = "      " Let PRIMLOC$ = P2$[13,22]
X2 = B1[12] \ Gosub L_7700
Gosub L_5800
Gosub L_3000
Gosub L_10000
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS CALC
T9[4] = T9[4] + T9[0] \ T8[4] = T8[4] + X3
If T9[4] >= (T7 * (P1 / 100)) Let K1$ = "}}}}"
Return 
L_3000: Rem ADD UP PAST 3 MONTHS
T9[0] = 0 \ T9[1] = 0 \ X4 = D2[2]
For X = 1 To M0
  If X4 <= 0 Let X4 = 12
  T9[0] = T9[0] + P3[X4 - 1,0]
  T9[1] = T9[1] + P3[X4 - 1,1]
  X4 = X4 - 1
Next X
Return 
!Gosub L_5800
!Print #0;"\15\** TOTALS **";
!Print #0; Using "-------,--#.##"; Tab 52;T9[4];
Return 
L_4500: Rem SUBTTL
If K4$[1,4] = "    " Goto L_4570
Gosub L_5800
if not(j8)
  Print #0;"\15\** ";K4$[1,4];" TOTALS **";
  Print #0; Using "-------,--#.##"; Tab 52;T9[4];
  Print #0;"\15\"
End if
J1 = J1 + 2
L_4570: For I = 0 To 20
  T8[I] = 0
Next I
Return 
L_5000: Rem PRINT LINE

if j8 
  !
  If P9$[26,26] = "Y"
    tmp$ = rtrim$(P1$[140,151])," ",DONTREORD$[1,1],fdel$  !!product
  Else 
    tmp$ = rtrim$(P1$[140,151]),fdel$ !!product
  End if
  tmp$ = tmp$,rtrim$(P1$[9,38]),fdel$ !! description1
  If P9$[26,26] = "Y" Let tmp$ = tmp$,rtrim$(P1$[63,92]),fdel$ !!description 2
  tmp$ = tmp$,rtrim$(PRIMLOC$),fdel$  !! location
  tmp$ = tmp$,T9[0] Using "-------#",fdel$ !!times 
  tmp$ = tmp$,T9[1] Using "---------#.##",fdel$,SUNIT$,fdel$!!units
  If T9 
    tmp$ = tmp$,FNR(T9[1] / T9[0]) Using "--------#.##",fdel$,SUNIT$,fdel$ 
  else 
    tmp$ = tmp$ ,"",fdel$,"",fdel$
  End if
else
  Print #0; Tab 1;P1$[140,151];  
  Print #0; Tab 15;P1$[9,38];
  Print #0; Tab 47;PRIMLOC$;
  Print #0; Using "-------# "; Tab 63;T9[0];
  Print #0; Using "---------#.## "; Tab 75;T9[1];SUNIT$;
  If T9 Print #0; Using "--------#.##  "; Tab 90;FNR(T9[1] / T9[0]);SUNIT$;
  If P9$[26,26] <> "Y" Goto L_5770
  Print #0;"" \ J1 = J1 + 1
  Print #0; Tab 1;DONTREORD$[1,1];
  Print #0; Tab 15;P1$[63,92];
end if
L_5770: Rem
if j8
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0;"\15\"
end if
Return 
L_5800: Rem HEADINGS ROUTINE
J1 = J1 + 2 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
if j8 return 
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 690A - ";T9$;
Print #0; Tab 44;"WAREHOUSE ANALYSIS - PRODUCT PICKING REPORT"
Print #0; Using " TOP ###% "; Tab 40;P1;
Print #0; Using "FOR WAREHOUSE ### ";WH;
Print #0; Using " FOR THE PAST ## MONTHS  ";M0
Print #0;"\15\";
Print #0; Tab 60;"NUMBER OF";
Print #0; Tab 90;"AVG # OF "
Print #0; Tab 1;"PRODUCT";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 45;"LOCATION";
Print #0; Tab 60;"TIMES PICKED";
Print #0; Tab 77;"UNITS";
Print #0; Tab 90;"UNITS PER ORDER "
Print #0;"\15\";
Return 
PRIMLOC_SRCH: Rem -------------------------search prodloc for primary loc
PL$ = " ",PL$
PL$[1,12] = P2$[1,12]
PL$[13,14] = WH Using "##"
PRIMLOC_SRCH_LOOP: Rem
Search #CH_PLOC,3,1;PL$,R5,E !!\ If E > 2 Gosub ERR_SEARCH
SCR = PL$[13,14]
If E Or SCR <> WH Or PL$[1,12] <> P2$[1,12]
  PLOC$ = " ",PLOC$
  Goto END_PRIMLOC_SRCH
End If 
Mat Read #CH_PLOC,R5,20;PRIM;
Mat Read #CH_PLOC,R5;PLOC$;
If Not(PRIM) Goto PRIMLOC_SRCH_LOOP
END_PRIMLOC_SRCH: Rem
PRIMLOC$ = PLOC$[13,18]
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!OUTEND: Rem EXIT PROGRAM
!Print 'CS'
!Chain "MX000C"
!Chain "MX000"
!Stop 
!L_9100: Rem END OF THIS RANGE
!Gosub L_4500
!!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!For K = 0 To 10
!  T9[K] = 0
!Next K
!If K2$ = "" Goto OUTEND
!!!Goto L_900
!Goto OUTEND
!End 
L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
CNVTA = T9[1] \ Gosub L_20000
T9[1] = AMOUNT
Mat Read #4,PFU1[8],10;SUNIT$;
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050:  Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
try Call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
