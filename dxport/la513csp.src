! >>> Program La513csp
!
! description Delete Accepted A/P Transactions with appo history
! loadsave -w -n 100,10 -o prog/dxport/la513csp.dl4 src/la513csp.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"


Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  16:33:20
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/la513c.src (univ2) [mary] {48020}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,Logic,String
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Rem LA513C ACCOUNTS PAYABLE   DELETE PURCHASE ORDER RECEIPTS - LINE ITEMS
Rem AUTHOR: MTG 7/93
Rem
Try
Enter chan[],rec_oi,message$,IntCo,rstr$,e$
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim J4$[50]
Dim 2%,Z9[1],B4[1],VEND,PONUM,POVEND
Dim 1%,TYPE,B5[1],F4,POFLAG,IMAGEMODE,CFLAG
Dim 3%,B6[4],R[50]
Dim 1%,PFU1[20],CNVTU[9],SC,SR
Dim 3%,PFU2[6],CNVTA[4],A[33]
!If Err 0 Gosub ERR_TRAP
Dim 2%,L2[2],L9,NSD2[4],STLINE
Dim 3%,L3[6],NSD3[9]
Dim 3%,TOTINVAP[2],TOTAP,TOTAPPLD,TOTVAR
Dim L1$[104],NSD$[96],K21$[40],K22$[50],K0$[50]
Dim 1%,C0[4],E,J0,J2,J3,J4,J5,J6,J8,J9[5],X0[9],H4[3],APH1[2],PL0[4],APH3[4]
Dim 1%,L1[5],NSD1[7],O1[2],O4[1],APL1[5],CFLAG,SPO,PFLAG
Dim 1%,MULTPO,MORE,APL3,POMISC[2]
Dim 2%,B[24],B1,B2,H0[5],H3[4],X2[9],O2[6],PH[4],APH0[2],APL0[2],COMP
Dim 2%,Q0[1],3%,AMOUNT
Dim 3%,APL4[2]
Dim 3%,A1[7],J1,H8[9],T9[9],Q1[9],Q9,X3[9],PL[5],APH2[2],APL2[6],APH4[4]
Dim 3%,POL1[4],QTA,QTA1,TOTRCVD,O3[9],PL4[22],PO3[12],POH7
Dim 3%,PQTY,PTQTY,CQTY,CTQTY,PCOST,PTCOST,CCOST,CTCOST,CUCOST
Dim K23$[50],K24$[50],K37$[50],KEY37$[50]
Dim 2%,PCT1[5],3%,PCT2[5],1%,PCT3[2],PCT$[12],3%,PCT4[1],PCT5[11],PCT6[1]
Dim 1%,PCT7[2],3%,PCT9[4],PCT8[10],1%,PCT0
Dim J$[40],J0$[12],J1$[40],J2$[40],J5$[75],J7$[75],J9$[40]
Dim PMASK$[12],O$[6],O1$[12],APH$[12]
Dim A$[156],M1$[14],S$[20],S1$[10],U4$[80],U5$[80],X$[20],APL$[12]
Dim P9$[50],C1$[112],C2$[44],F$[20],H$[82],H1$[116],W$[4],O9$[16]
Dim KEY21$[50],K31$[50],KEYAP$[50],KEYPO$[50]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNU(H) = Int(Abs(H)) + Sgn(Fra(Abs(H))) * Sgn(H)
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])

!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
!If Err 0 Rem
!For K1 = 23 To 24 \ Close #K1 \ Next K1
!For K1 = 33 To 37
!  Close #K1
!Next K1
!F$ = COMP Using "2/APPOHH#" \ Open #23,F$
!F$ = COMP Using "2/APPOLH#" \ Open #24,F$
!For K1 = 33 To 36
!  Read J \ If J = -1 Goto L_850
!  Read #ctlc,88,J;F$;
!  Ropen #K1,F$
!L_850: Next K1
!Data "1792","2768","1728","2448"

!If SPO
!  F$ = COMP Using "2/POCTFLE#" \ Open #ch_poc,F$
!End If 
dim 3%,r[50]
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
! check for openfiles
! chan[0]=ctlc
! chan[1]=a20oi --- ch_oi
! chan[2]=appoh --- ch_appoh
! chan[3]=appol --- ch_appol
! chan[4]=pohead -- ch_poh
! chan[5]=poline -- ch_pol
! chan[6]=poctfle - ch_poc
! chan[7]=prod - ch_prod
if not(chan[0])
	 ctlc = OpenFile(9999,intCo) \ If ctlc = -1 Error 42 !control
else
	 ctlc=chan[0]
endif
Mat Read #ctlc,51,18;C0;
If Not(c0[4]) Goto OUTEND
Mat Read #ctlc,51,76;SPO;
If not(chan[1])
	ch_oi=OpenFile( 9801,intCo) \ If Ch_oi = -1 Error 42 ! open item file
else
	ch_oi=chan[1]
endif
if not(chan[2])
	ch_appoh=OpenFile(9802,intCo) \ If Ch_appoh = -1 Error 42!
else
	ch_appoh=chan[2]
endif
if not(chan[3])
	ch_appol=OpenFile(9803,intCo) \ If Ch_appol = -1 Error 42!
else
	ch_appol=chan[3]
endif
if not(chan[4])
	ch_poh = OpenFile(2416,intCo) \ If ch_poh = -1 Error 42 !"po header file 
else
	let ch_poh=chan[4]
endif
if not(chan[5])
	Ch_Pol = OpenFile(2432,intCo) \ If Ch_Pol = -1 Error 42 !"po lines file
else
	let ch_pol=chan[5]
endif

Mat Read #ctlc,51,76;SPO;
if spo<>0
	if not(chan[6])
		ch_poc=OpenFile(9944,intCo) \ If Ch_poc = -1 Error 42!
	else
		let ch_poc=chan[6]
	endif
endif
if not (chan[7])
	Ch_Prod = OpenFile(1792,intCo) \ If Ch_Prod = -1 Error 42  !product file 
else
	let ch_prod=chan[7]
endif
! open the history files
ch_aphh=OpenFile(9807,intCo) \ If Ch_aphh= -1 Error 42!
ch_aplh=OpenFile(9808,intCo) \ If Ch_aplh= -1 Error 42!
!
R[3]=rec_oi
Gosub READAPOI
KEYAP$ = " ",KEYAP$;KEYAP$[1,6] = O2[0] Using "######";KEYAP$[7,18] = O1$[1,12]
KEYAP$[19,20] = O1 Using "##";K21$ = KEYAP$
Search #ch_appoh,3,1;K21$,R[21],E
If E = 2 Or K21$[1,20] <> KEYAP$[1,20]
  Gosub COPYAPPOHIST
Else 
 ! If E Gosub ERR_TRAP
End If 
Mat Read #ch_oi,R[3],6;O1;
If SPO
  Goto OUTEND
End If 
Mat Read #ctlc,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Mat Read #ctlc,19,50;P9$;
goto outend:






READPOHEAD: Rem READ HEADER
Mat Read #ch_poh,R[31];H0;
Mat Read #ch_poh,R[31],24;H$;
Mat Read #ch_poh,R[31],106;H1$;
Mat Read #ch_poh,R[31],222;H3;
Mat Read #ch_poh,R[31],242;H4;
Mat Read #ch_poh,R[31],250;H8;
Mat Read #ch_poh,R[31],310;PH;
Mat Read #ch_poh,R[31],350;PO3;
Mat Read #ch_poh,R[31],528;POH7
Return 


WRITEPOHEAD: Rem WRITE PO HEADER
Mat Write #ch_poh,R[31],242;H4
Mat Write #ch_poh,R[31],250;H8
Mat Write #ch_poh,R[31],350;PO3;
Return 

READAPOI: Rem READ OPEN ITEM FILE
Mat Read #ch_oi,R[3];O$ \ Mat Read #ch_oi,R[3],6;O1;
Mat Read #ch_oi,R[3],12;O2; \ Mat Read #ch_oi,R[3],40;O3;
Mat Read #ch_oi,R[3],100;O1$; \ Mat Read #ch_oi,R[3],112;O4;
Return 

READAPPOL: Rem read appo line file
Mat Read #ch_appol,R[22],0;APL0;
Mat Read #ch_appol,R[22],12;APL$;
Mat Read #ch_appol,R[22],24;APL1;
Mat Read #ch_appol,R[22],36;APL2;
Mat Read #ch_appol,R[22],78;APL3;
Mat Read #ch_appol,R[22],92;APL4;
APL2[0] = - APL2[0];APL2[2] = - APL2[2]
APL2[3] = - APL2[3];APL2[4] = - APL2[4]
APL4[0] = - APL4[0];APL4[1] = - APL4[1]
APL4[2] = - APL4[2]
Return 

WRITEAPPOL: Rem write appo line file
APL2[0] = - APL2[0];APL2[2] = - APL2[2]
APL4[0] = - APL4[0];APL4[1] = - APL4[1]
APL4[2] = - APL4[2]
Mat Write #ch_appol,R[22],0;APL0
Mat Write #ch_appol,R[22],12;APL$
Mat Write #ch_appol,R[22],24;APL1
Mat Write #ch_appol,R[22],36;APL2;
Mat Write #ch_appol,R[22],78;APL3;
Mat Write #ch_appol,R[22],92;APL4;
Return 

READAPPOH: Rem read appo head file
Mat Read #ch_appoh,R[21],0;APH0;
Mat Read #ch_appoh,R[21],12;APH$;
Mat Read #ch_appoh,R[21],24;APH1;
Mat Read #ch_appoh,R[21],30;APH2;
Mat Read #ch_appoh,R[21],48;APH3;
Mat Read #ch_appoh,R[21],58;APH4
For X = 0 To 2 \ APH2[X] = - APH2[X] \ Next X
For X = 0 To 4 \ APH4[X] = - APH4[X] \ Next X
Return 

WRITEAPPOH: Rem write appo head file
For X = 0 To 2 \ APH2[X] = - APH2[X] \ Next X
For X = 0 To 4 \ APH4[X] = - APH4[X] \ Next X
Mat Write #ch_appoh,R[21],0;APH0
Mat Write #ch_appoh,R[21],12;APH$
Mat Write #ch_appoh,R[21],24;APH1
Mat Write #ch_appoh,R[21],30;APH2
Mat Write #ch_appoh,R[21],48;APH3
Mat Write #ch_appoh,R[21],58;APH4;
Return 

READPROD: Rem READ PRODUCT FILE
Mat Read #ch_prod,L3[1];A$;
Mat Read #ch_prod,L3[1],156;B;
Mat Read #ch_prod,L3[1],256;A; \ Mat Read #ch_prod,L3[1],460;A1;
Mat Read #ch_prod,L3[1],512;PFU1;
Mat Read #ch_prod,L3[1],554;PFU2;
Return 

WRITEPOLINE: Rem "========================== write po line
Mat Write #ch_pol,R[32];L1
Mat Write #ch_pol,R[32],12;L2
Mat Write #ch_pol,R[32],24;L3
Mat Write #ch_pol,R[32],66;L1$
Mat Write #ch_pol,R[32],186;PL
Mat Write #ch_pol,R[32],222;PL0;
Return 

READPOLINE: Rem "=================================== read po line
Mat Read #ch_pol,R[32];L1;
Mat Read #ch_pol,R[32],12;L2;
Mat Read #ch_pol,R[32],24;L3;
Mat Read #ch_pol,R[32],66;L1$;
Mat Read #ch_pol,R[32],186;PL;
Mat Read #ch_pol,R[32],222;PL0;
Mat Read #ch_pol,R[32],232;PL4;
Mat Read #ch_pol,R[32],376;POMISC;
Return 

READNSTCK: Rem READ NSTKDESC
Mat Read #36,L3[1];NSD$;
Mat Read #36,L3[1],96;NSD1
Mat Read #36,L3[1],112;NSD2
Mat Read #36,L3[1],132;NSD3;
B[11] = NSD1[1]
Return 

READPOCTFLE: Rem READ POCTFLE
Mat Read #ch_poc,R[37],0;PCT1;
Mat Read #ch_poc,R[37],24;PCT2;
Mat Read #ch_poc,R[37],60;PCT3;
Mat Read #ch_poc,R[37],66;PCT$;
Mat Read #ch_poc,R[37],78;PCT4;
Mat Read #ch_poc,R[37],90;PCT5;
Mat Read #ch_poc,R[37],162;PCT6;
Mat Read #ch_poc,R[37],174;PCT7;
Mat Read #ch_poc,R[37],180;PCT9;
Mat Read #ch_poc,R[37],210;PCT8;
Mat Read #ch_poc,R[37],288;PCT0;
Return 

WRITEPOCTFLE: Rem WRITE POCTFLE
Mat Write #ch_poc,R[37],0;PCT1
Mat Write #ch_poc,R[37],24;PCT2
Mat Write #ch_poc,R[37],60;PCT3
Mat Write #ch_poc,R[37],66;PCT$
Mat Write #ch_poc,R[37],78;PCT4
Mat Write #ch_poc,R[37],90;PCT5
Mat Write #ch_poc,R[37],162;PCT6
Mat Write #ch_poc,R[37],174;PCT7
Mat Write #ch_poc,R[37],180;PCT9
Mat Write #ch_poc,R[37],210;PCT8
Mat Write #ch_poc,R[37],288;PCT0;
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 !If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 


COPYAPPOHIST: Rem copy ap-po allocations from history file
Gosub READAPOI
K23$ = " ",K23$;K23$[1,6] = O2[0] Using "######";K23$[7,18] = O1$[1,12]
K23$[19,20] = O1 Using "##";KEYAP$ = K23$
SRCHAPPOHH: Search #CH_APHH,3,1;K23$,R[23],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
If K23$[1,20] <> KEYAP$[1,20] Return 
Mat Read #CH_APHH,R[23],0;APH0;
Mat Read #CH_APHH,R[23],12;APH$;
Mat Read #CH_APHH,R[23],24;APH1;
Mat Read #CH_APHH,R[23],30;APH2;
Mat Read #CH_APHH,R[23],48;APH3;
Mat Read #CH_APHH,R[23],58;APH4;
APH1[1] = 0
KEYPO$ = " ",KEYPO$
KEYPO$[1,6] = APH0[2] Using "######";KEYPO$[7,12] = APH0[1] Using "######"
Search #ch_poh,2,2;KEYPO$,R[31],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 ! po not found
  Gosub APPOLHDELETE
  Gosub DELAPPOHH
  Goto SRCHAPPOHH
End If 
Gosub READPOHEAD
Search #ch_appoh,2,1;K23$,R[21],E \ If E > 1 Gosub ERR_SEARCH
If E
  E = 2 \ Search #ch_appoh,1,0;K23$,R[21],E \ If E Gosub ERR_SEARCH
  Gosub WRITEAPPOH
  Search #ch_appoh,4,1;K23$,R[21],E \ If E Gosub ERR_SEARCH
  H8[8] = H8[8] + APH2[0]
  H8[7] = H8[7] + APH2[1]
  PO3[12] = PO3[12] + APH2[2]
  Gosub WRITEPOHEAD
Else ! already there delete lines from history
  Gosub APPOLHDELETE
  Gosub DELAPPOHH
End If 
K24$ = " ",K24$;K24$[1,26] = K23$[1,26]
SRCHAPPOLH: Rem search appolh file and update appol file
Search #CH_APLH,3,1;K24$,R[24],E
If E = 2
  Gosub DELAPPOHH
  Goto SRCHAPPOHH
End If 
If E Gosub ERR_SEARCH
If K24$[1,26] <> K23$[1,26]
  Gosub DELAPPOHH
  Goto SRCHAPPOHH
End If 
Mat Read #CH_APLH,R[24],0;APL0;
Mat Read #CH_APLH,R[24],12;APL$;
Mat Read #CH_APLH,R[24],24;APL1;
Mat Read #CH_APLH,R[24],36;APL2;
Mat Read #CH_APLH,R[24],78;APL3;
Mat Read #CH_APLH,R[24],92;APL4;
U5$ = " ",U5$;U5$[1,6] = H0[2] Using "######"
U5$[7] = APL1[3] Using "###"
Search #ch_pol,2,1;U5$,R[32],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto DELAPPOLH
Gosub READPOLINE
APL1[4] = 0
Search #ch_appol,2,1;K24$,R[22],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  E = 2 \ Search #ch_appol,1,0;K24$,R[22],E \ If E Gosub ERR_SEARCH
  Gosub WRITEAPPOL
  Search #ch_appol,4,1;K24$,R[22],E \ If E Gosub ERR_SEARCH
  PL[0] = PL[0] + APL2[0];PL[2] = PL[2] + APL2[2]
  PL[1] = APL2[1]
  Gosub WRITEPOLINE
  If SPO <> 0
    K37$ = " ",K37$;K37$[1,6] = APL0[1] Using "######"
    K37$[7,12] = APL0[2] Using "######";K37$[13,16] = APL1[3] Using "####"
    K37$[17,18] = L1[1] Using "##"
    Search #ch_poc,2,1;K37$,R[37],E \ If E > 1 Gosub ERR_SEARCH
    If Not(E)
      Gosub READPOCTFLE
      PCT2[5] = PCT2[5] + APL2[0]
      PCT3[0] = 0
      Gosub WRITEPOCTFLE
    Else 
      PCT0 = 0
      For X = 0 To 5 \ PCT1[X] = 0 \ PCT2[X] = 0 \ Next X
      For X = 0 To 1 \ PCT4[X] = 0 \ PCT6[X] = 0 \ Next X
      For X = 0 To 2 \ PCT3[X] = 0 \ PCT7[X] = 0 \ Next X
      For X = 0 To 11 \ PCT5[X] = 0 \ Next X
      For X = 0 To 4 \ PCT9[X] = 0 \ Next X
      For X = 0 To 10 \ PCT8[X] = 0 \ Next X
      PCT$ = " ",PCT$
      PCT1[0] = APL0[1]
      PCT1[1] = APL1[3]
      PCT1[2] = APL0[0]
      PCT1[3] = APL0[2]
      PCT1[4] = PL4[22]
      PCT2[0] = Abs(APL2[0])
      PCT2[1] = Abs(APL2[1])
      PCT2[2] = Abs(APL2[2])
      PCT2[3] = Abs(APL2[0])
      PCT2[4] = Abs(APL2[2])
      PCT2[5] = APL2[0]
      PCT3[0] = 0
      PCT3[1] = L1[1]
      If O1 = 2 Let PCT3[2] = 1
      PCT5[0] = Abs(APL2[3])
      PCT5[1] = Abs(APL2[4])
      PCT5[4] = Abs(APL2[3])
      PCT5[5] = Abs(APL2[4])
      PCT6[0] = APL2[5]
      PCT6[1] = APL2[6]
      PCT7[1] = POMISC[0]
      PCT9[4] = APL4[0]
      PCT8[2] = Abs(APL4[0])
      PCT8[9] = Abs(APL4[2])
      PCT8[10] = Abs(APL4[1])
      Call Logic(1,2 ^ 0,L1[3],X0)
      If Not(X0)
        Gosub READPROD
      Else 
        Gosub READNSTCK
      End If 
      PCT7[2] = B[11]
      PCT0 = APL3
      E = 2 \ Search #ch_poc,1,0;K37$,R[37],E \ If E Gosub ERR_SEARCH
      Gosub WRITEPOCTFLE
      Search #ch_poc,4,1;K37$,R[37],E \ If E Gosub ERR_SEARCH
      KEY37$ = " ",KEY37$
      KEY37$[1,6] = PCT1[3] Using "######";KEY37$[7,8] = PCT3[1] Using "##"
      KEY37$[9,14] = PCT1[0] Using "######";KEY37$[15,18] = PCT1[1] Using "####"
      Search #ch_poc,4,2;KEY37$,R[37],E \ If E Gosub ERR_SEARCH
    End If 
  End If 
Else 
  Gosub READAPPOL
End If 
PL0[0] = 0
Rem add merchandise total for a/p interface
DELAPPOLH: Rem delete appolh line history
Search #CH_APLH,5,1;K24$,R[24],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #CH_APLH,1,0;K24$,R[24],E \ If E Gosub ERR_SEARCH
Goto SRCHAPPOLH
DELAPPOHH: Rem delete appohh header record
K24$ = " ",K24$;K24$[1,6] = K23$[1,6];K24$[7,12] = K23$[21,26]
K24$[13,26] = K23$[7,20]
Search #CH_APHH,5,2;K24$,R[23],E \ If E Gosub ERR_SEARCH
Search #CH_APHH,5,1;K23$,R[23],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #CH_APHH,1,0;K23$,R[23],E \ If E Gosub ERR_SEARCH
Return 
APPOLHDELETE: Rem delete appolh lines from history
K24$ = " ",K24$;K24$[1,26] = K23$[1,26]
SRCHDELAPOLH: Rem already on file delete lines from history
Search #CH_APLH,3,1;K24$,R[24],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
If K24$[1,26] <> K23$[1,26] Return 
Search #CH_APLH,5,1;K24$,R[24],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #CH_APLH,1,0;K24$,R[24],E \ If E Gosub ERR_SEARCH
Goto SRCHDELAPOLH
Return 


ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! En
OUTEND: Rem END
if not(chan[0])
	 Try Close #ctlc Else Rem
endif
If not(chan[1])
	Try close #ch_oi Else Rem
endif
if not(chan[2])
	Try close #ch_appoh Else Rem
endif
if not(chan[3])
	Try close #ch_appol  Else Rem
endif
if not(chan[4])
	Try close #ch_poh  Else Rem
endif
if not(chan[5])
	Try close #ch_pol  Else Rem
endif
if not(chan[6])
	Try close #ch_poc  Else Rem   
endif
if not(chan[7])
	Try close #ch_prod Else Rem
endif
Try Close #ch_aphh Else Rem 
Try Close #ch_aplh Else Rem 
else
	include "src/callmainerrnet.inc"
end try
End ! the whole program