! >>> Program 444z
!
! description 444z - Customer Sales Analysis (By Deviation/Volume)
! loadsave -w -n 100,10 -o prog/dxport/444z.dl4 src/444z.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.3 OBJECT CODE     Created: FEB  7, 2012  17:20:59
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/gti/salesdiv.src (univ2) [mary] {23519}
Rem  Copyright (c) 2012 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub JulianToDate
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenFile
!
!!Option Default Dialect IRIS1
Try 
Rem salesdiv
Dim 2%,NETPROFPCT
Dim 1%,ARMONTH,BOYMONTH,EOYMONTH
Dim 4%,TOTALSALES[999],SLSMTOTAL[3],2%,PERCENTOFTOTAL,ACCUMSALES,RPT[9]
Dim 4%,DEVTOTAL[3],GRDTOTAL[3]
Dim A3$[22],BT$[20],U2$[60],A2$[30],A1$[142]
Dim 2%,A0[3],C1[12],REC,C3[1]
Dim 2%,SSLM[1]
Dim 1%,S0[20],SUB_,SZN,C7[4],C0,C2[2],C8,C11[2]
Dim 3%,C4[6],C10[5],CFIN[8],U1,C9,C5[5],C6[9],C12[1]
Dim 3%,CUSTSLS1[12,2],CUSTSLS2[12,2],CUSTSLS3[5]
Dim 1%,SMS1$[118],SMS2$[50]
Dim 3%,SMS1[3],SMS2[19,5],SMS3[9]
Dim K2$[50],REC_CUST,K9$[50],FILE$[16],COID,K4$[50]
Dim CONM$[30],DATE$[8],TME$[30]
dim 4%,posvsales[999,2],negvsales[999,2],zerovsales[999,2] ! cust curr ytd sales based on variance
dim 4%,totsvar[999] ! total variance per sales person
dim 3%,pervtot,pervacc ! pecent of sales based on pos/neg variance
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim 3%!
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1500],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim groupid$[1],percentmask$[12]
!!! check this
Dim b$[200]!

!call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)!
j8 = 0
If Err 0 Let j8 = Spc(8)
try
	J9 = Chf(0) 
else
	let j8=99
end try
If Err 0 Gosub ERR_TRAP
RPT[1] = 62;RPT[2] = 0;SCRN = 0
for ctr=1 to 99
	If ctr<>9
		Try Close #ctr Else Rem
	endif
next ctr
COID=IntCo 
tRY Close #1 eLSE rEM ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=1

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
Mat Read #1,0,100;DATE$;
Mat Read #1,3,0;CONM$;
Mat Read #1,0,120;ARMONTH;
Read #1,51,72;EOYMONTH;
Read #1,188,20;NETPROFPCT;
BOYMONTH = EOYMONTH + 1
If BOYMONTH = 13 Let BOYMONTH = 1

!If Err 0 Gosub ERR_TRAP
!If J8 Let RPT[1] = 20;SCRN = 1


FILE$ = COID Using "2/SCUSTOMER#"
Ropen #2,FILE$
CH_CUST = 2
FILE$ = COID Using "2/SCUSTSLS#"
Ropen #3,FILE$
CH_CUSTSLS = 3
FILE$ = COID Using "2/SSLSM#"
Ropen #4,FILE$
CH_SSLSM = 4
SLSM[0] = 0;SLSM[1] = 999
ZERODEV = 0
ZEROSLS = 0
REPOPT = 0
! dxgets
call dxget("bslsm",tmp$) \ slsm[0]=tmp$ ! starting salesman
Call dxget("eslsm",tmp$)
if rtrim$(tmp$)=""
	let slsm[1]=999
else
	let slsm[1]=tmp$ ! ending salesman
endif
if slsm[0]>slsm[1]
	let message$=message$+"Ending Sales Rep must be greater than Starting. "
	let eflag=eflag+1
endif

Call dxget("ZERODEV",tmp$)
if rtrim$(tmp$)<>"" 
	let zerodev=1
endif

Call dxget("ZEROSLS",tmp$)
if rtrim$(tmp$)<>"" 
	let zerosls=1
endif

Call dxget("PAGEBRK",tmp$)
if rtrim$(tmp$)="" 
	let pgbrk=0
else
	let pgbrk=99
endif
Call dxget("REPOPT",tmp$)
let tmp3=tmp$
if tmp3<0 or tmp3>2
	let message$=message$+"Invalid Report Option. "
	let eflag=eflag+1
endif
if j8<>0 ! browser
	if tmp3=0
		let message$=message$+"Report Option must be selected,only 1 report for browser not both "
		let eflag=eflag+1
	endif
endif
let REPOPT=tmp3
let rptprnt=REPOPT
! REPOPT=0 Both Reports
! REPOPT=1 Sales Deviation
! REPOPT=2 By Volume
If j8<>0 ! browser
	If RPTPRNT = 2
		tmp$="CUST#",fdel$,"CUSTOMER NAME",fdel$
		tmp$=tmp$,"YTD SALES",fdel$
		tmp$=tmp$,"YTD COST",fdel$
		tmp$=tmp$,"GROSS PROFIT",fdel$
		tmp$=tmp$,"GP %",fdel$
		tmp$=tmp$,"% OF TOTAL",fdel$
		tmp$=tmp$,"ACCUM OF TOTAL",fdel$
		tmp$=tmp$,"AVG DAYS",fdel$
		tmp$=tmp$,"YTD NET PROFIT",fdel$
		tmp$=tmp$,"SALESREP",fdel$
	else
		tmp$="CUST#",fdel$,"CUSTOMER NAME",fdel$
		tmp$=tmp$,"YTD SALES",fdel$
		tmp$=tmp$,"LAST YTD SALES",fdel$
		tmp$=tmp$,"VARIANCE",fdel$
		tmp$=tmp$,"% VAR",fdel$
		tmp$=tmp$,"% OF TOTAL",fdel$
		tmp$=tmp$,"ACCUM OF TOTAL",fdel$
		tmp$=tmp$,"LAST YEAR SALES",fdel$
		tmp$=tmp$,"SALESREP",fdel$
	endif
	tmp$=tmp$,rdel$
	Call addtostr(e$,rstr$,tmp$)
Endif
if eflag<>0 
	goto outend: ! errors have occured
endif
let k9$=" ",k9$
clrsort: ! clear sort file
search #9,3,1;k9$,tmp3,e\if e<>0 goto start_report:
search #9,5,1;k9$,tmp3,e\if e gosub err_search:
goto clrsort:

!Print 'CS';"NEW ACCOUNTS LIST"


! end dxget


START_REPORT: Rem start report info
! Print @0,23;'CL';"Sorting...Please Wait..";
RPTPRNT = REPOPT
GETTOTALSALES: Rem accum total company sales
K2$ = " ",K2$
K2$[1,3] = SLSM[0] Using "###"
TOTALSALES = 0
TOTSALESLOOP: Rem
Search #CH_CUST,3,5;K2$,REC_CUST,E
If E Goto EXITTOTSALES
Gosub READ_CUST
If C1[2] < SLSM[0] Goto TOTSALESLOOP
If C1[2] > SLSM[1] Goto TOTSALESLOOP
If Not(ZEROSLS)
  If CUSTSLS1[0,0] = 0 And CUSTSLS1[0,1] = 0 And CUSTSLS1[0,2] = 0 Goto TOTSALESLOOP
End If 
TOTALSALES[C1[2]] = TOTALSALES[C1[2]] + CUSTSLS1[0,1]
TOTALSALES[0] = TOTALSALES[0] + CUSTSLS1[0,1]
Goto TOTSALESLOOP
EXITTOTSALES: Rem so done with this
K2$ = " ",K2$
SORTLOOP: Rem
Search #CH_CUST,3,5;K2$,REC_CUST,E
If E Goto EXITSORT
Gosub READ_CUST
If C1[2] < SLSM[0] Goto SORTLOOP
If C1[2] > SLSM[1] Goto SORTLOOP
If Not(ZEROSLS)
  If CUSTSLS1[0,0] = 0 And CUSTSLS1[0,1] = 0 And CUSTSLS1[0,2] = 0 Goto SORTLOOP
End If 
PERCENTOFTOTAL = 0
If CUSTSLS1[0,1]
  If TOTALSALES[C1[2]]
    PERCENTOFTOTAL = (CUSTSLS1[0,1] / TOTALSALES[C1[2]]) * 100
  End If 
End If 
LASTYEARTD = 0
if boymonth<=armonth
	For MN = boymonth To ARMONTH
		LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
	Next MN
else
	for mn=boymonth to 12 ! start of fiscal year to end of calenderer
		LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
	Next MN
	for mn=1 to armonth
		LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
	Next MN
endif
VARIANCE = LASTYEARTD - CUSTSLS1[0,1]

	
If REPOPT <> 2 ! sort for both or for deviate
	VARIANCE =  CUSTSLS1[0,1]-LASTYEARTD 
	totsvar[c1[2]]=totsvar[c1[2]]+variance
	if variance>0
		let posvsales[c1[2],0]=posvsales[c1[2],0]+CUSTSLS1[0,1] ! curr ytd sales
		let posvsales[c1[2],1]=posvsales[c1[2],1]+lastyeartd ! last year this month sales
		let posvsales[c1[2],2]=posvsales[c1[2],2]+variance
	else
		if variance <0 
			let negvsales[c1[2],0]=negvsales[c1[2],0]+CUSTSLS1[0,1]
			let negvsales[c1[2],1]=negvsales[c1[2],1]+lastyeartd ! last year this month sales
			let negvsales[c1[2],2]=negvsales[c1[2],2]+variance
		else
			let zerovsales[c1[2],0]=zerovsales[c1[2],0]+CUSTSLS1[0,1]
			let zerovsales[c1[2],1]=zerovsales[c1[2],1]+lastyeartd ! last year this month sales
			let zerovsales[c1[2],2]=zerovsales[c1[2],2]+variance
		endif
	endif
	
  K9$ = " ",K9$
  K9$[1,3] = C1[2] Using "###"
  !K9$[4,11] = 1000 - PERCENTOFTOTAL Using "----#.##"
  !K9$[12,17] = C1[1] Using "######"
  ! change to gross profit -- NO WAIT NOW CHANGE TO VARIANCE
  k9$[4,4]=" "
  !K9$[5,16] = (9999999999 - (CUSTSLS1[0,1] - CUSTSLS1[0,2])) Using "------------"
  K9$[5,16] = (9999999999 - ABS(VARIANCE)) Using "------------" 
  if variance<0 let k9$[5,5]="z" else let k9$[5,5]=" "
  K9$[17,22] = C1[1] Using "######"
  Search #9,4,1;K9$,REC_CUST,E
  If E>1 Gosub ERR_SEARCH
End If 
If REPOPT <> 1 ! sort for both or for volume ! sort by gp
  K9$ = " ",K9$
  K9$[1,1] = "#"
  K9$[2,4] = C1[2] Using "###"
  K9$[5,16] = (9999999999 - (CUSTSLS1[0,1] - CUSTSLS1[0,2])) Using "------------"
  K9$[17,22] = C1[1] Using "######"
  Search #9,4,1;K9$,REC_CUST,E
  If E>1 Gosub ERR_SEARCH
End If 
Goto SORTLOOP
EXITSORT: Rem so over this now
PRTREPORT: Rem print it
! Print @0,23;'CL';"Printing...Please Wait..";
for ctr=1 to 3
	let slsmtotal[ctr]=0; devtotal[ctr]=0; grdtotal[ctr]=0
next ctr
K9$ = " ",K9$
ACCUMSALES = 0
BRK_SLSM = -1
RPT[0] = 99
If RPTPRNT = 2 Let K9$[1,1] = "#"
PRTLOOP: Rem
Search #9,3,1;K9$,REC_CUST,E
If E>0 ! END OF REPORT
  IF RPTPRNT<>2
	GOSUB PRT_DEVSUBTOT:
  ENDIF
  Gosub PRT_SUBTOTAL
  gosub prt_grdtotal:
  if j8<>0 goto outend:
  If RPTPRNT = 0
    RPTPRNT = 2
    Goto PRTREPORT
  End If 
  Goto OUTEND
End If 
If RPTPRNT < 2
  If K9$[1,1] = "#"
    IF RPTPRNT<>2
		GOSUB PRT_DEVSUBTOT:
	ENDIF
    Gosub PRT_SUBTOTAL
	if j8<>0 goto outend:
    If RPTPRNT = 0
      RPTPRNT = 2
      Goto PRTREPORT
    End If 
    Goto OUTEND
  End If 
End If 
If BRK_SLSM < 0
  If RPTPRNT <> 2
    BRK_SLSM = K9$[1,3]
  Else 
    BRK_SLSM = K9$[2,4]
  End If 
End If 
Gosub READ_CUST
If BRK_SLSM <> C1[2]
  IF RPTPRNT<>2
		GOSUB PRT_DEVSUBTOT:
  ENDIF
  Gosub PRT_SUBTOTAL
  pervacc=0 ! accum of % - running total of percent of total
  ACCUMSALES = 0
  for ctr=1 to 3\ let slsmtotal[ctr]=0\ let devtotal[ctr]=0\next ctr
  If PGBRK <> 0
    RPT[0] = 99
  End If 
  BRK_SLSM = C1[2]
  let negflag=0
End If 
If RPTPRNT <> 2 and k9$[5,5]="z" and negflag=0
	GOSUB PRT_DEVSUBTOT:
	let pervacc=0
	let negflag=1
	gosub PRNT_HEADER: !Rem "report header
	print #0;"" ! blank line to start negative
	let rpt[0]=rpt[0]+1
endif
ACCUMSALES = ACCUMSALES + CUSTSLS1[0,1]
ACCUMPERCENT = 0
If TOTALSALES[C1[2]] Let ACCUMPERCENT = (ACCUMSALES / TOTALSALES[C1[2]]) * 100
LASTYEARTD = 0
!For MN = 1 To ARMONTH
!  LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
!Next MN
if boymonth<=armonth
	For MN = boymonth To ARMONTH
		LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
	Next MN
else
	for mn=boymonth to 12 ! start of fiscal year to end of calenderer
		LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
	Next MN
	for mn=1 to armonth
		LASTYEARTD = LASTYEARTD + CUSTSLS2[MN,1]
	Next MN
endif
VARIANCE = CUSTSLS1[0,1] - LASTYEARTD 
!Variance = LASTYEARTD - CUSTSLS1[0,1]
If Not(ZERODEV)
  If Not(VARIANCE) Goto PRTLOOP
End If 
VARPERCENT = 0
If LASTYEARTD<>0 Let VARPERCENT = (VARIANCE / LASTYEARTD) * 100

PERCENTOFTOTAL = 0
If CUSTSLS1[0,1]
  If TOTALSALES
    PERCENTOFTOTAL = (CUSTSLS1[0,1] / TOTALSALES[C1[2]]) * 100
  End If 
End If
pervtot=0
!if variance>0
!	if posvsales[c1[2]]<>0
!		let pervtot=(CUSTSLS1[0,1] / posvsales[C1[2]]) * 100
!	endif
!else
!	if variance<0
!		if negvsales[c1[2]]<>0
!			let pervtot=(CUSTSLS1[0,1] / negvsales[C1[2]]) * 100
!		endif
!	else
!		if zerovsales[c1[2]]<>0
!			let pervtot=(CUSTSLS1[0,1] / zerovsales[C1[2]]) * 100
!		endif
!	endif
!endif
if variance>0
	if posvsales[c1[2],2]<>0
		let pervtot=(variance/posvsales[c1[2],2])*100
	endif
endif
if variance<0
	if negvsales[c1[2],2]<>0
		let pervtot=(variance/negvsales[c1[2],2])*100
	endif
endif
If RPTPRNT = 2
  SLSMTOTAL[1] = SLSMTOTAL[1] + CUSTSLS1[0,1]
  SLSMTOTAL[2] = SLSMTOTAL[2] + CUSTSLS1[0,2]
  SLSMTOTAL[3] = SLSMTOTAL[3] + (CUSTSLS1[0,1] - CUSTSLS1[0,2])

  GRDTOTAL[1] = GRDTOTAL[1] + CUSTSLS1[0,1]
  GRDTOTAL[2] = GRDTOTAL[2] + CUSTSLS1[0,2]
  GRDTOTAL[3] = GRDTOTAL[3] + (CUSTSLS1[0,1] - CUSTSLS1[0,2])
Else 
  SLSMTOTAL[1] = SLSMTOTAL[1] + CUSTSLS1[0,1]
  SLSMTOTAL[2] = SLSMTOTAL[2] + LASTYEARTD
  !SLSMTOTAL[3] = SLSMTOTAL[3] + CUSTSLS1[0,1] - CUSTSLS1[0,2]
  SLSMTOTAL[3] = SLSMTOTAL[3] + CUSTSLS2[0,1]

  DEVTOTAL[1] = DEVTOTAL[1] + CUSTSLS1[0,1]
  DEVTOTAL[2] = DEVTOTAL[2] + LASTYEARTD
  DEVTOTAL[3] = DEVTOTAL[3] + CUSTSLS2[0,1]

  GRDTOTAL[1] = GRDTOTAL[1] + CUSTSLS1[0,1]
  GRDTOTAL[2] = GRDTOTAL[2] + LASTYEARTD
  GRDTOTAL[3] = GRDTOTAL[3] + CUSTSLS2[0,1]
End If 
Gosub GETSLSM
Gosub PRNT_HEADER
Gosub PRT_DETAIL
Goto PRTLOOP

PRT_DETAIL: Rem
let totrec=totrec+1
If RPTPRNT = 2
!!!!!! ------ By Volume Report --------
	if j8<>0
		tmp$=""
		tmp$=ltrim$(c1[1] using "######"),fdel$
		tmp$=tmp$,RTrim$(a1$[31,60]),fdel$	
		tmp$=tmp$,LTrim$(custsls1[0,1]Using "-------#.##"),fdel$
		tmp$=tmp$,LTrim$(custsls1[0,2]Using "-------#.##"),fdel$
		tmp$=tmp$,LTrim$((custsls1[0,1]-custsls1[0,2]) using "-------#.##"),fdel$
		TMP3 = 0
		If CUSTSLS1[0,1] <> 0
		 TMP3 = FNR(((CUSTSLS1[0,1] - CUSTSLS1[0,2]) / CUSTSLS1[0,1]) * 100)
		End If 
		tmp$=tmp$,LTrim$((tmp3) using "--------#.##"),fdel$
		tmp$=tmp$,LTrim$((percentoftotal) using "---#.##"),fdel$
		tmp$=tmp$,LTrim$((accumpercent) using "---#.##"),fdel$
		tmp$=tmp$,LTrim$(c1[10] Using "####.##"),fdel$
		TMP3 = 0
		If NETPROFPCT <> 0
			TMP3 = FNR((CUSTSLS1[0,1] = CUSTSLS1[0,2]) * (NETPROFPCT / 100))
		End If 
		tmp$=tmp$,Ltrim$(tmp3 using "-------#.##"),fdel$
		tmp$=tmp$,ltrim$(c1[2] using "###"),fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
	else ! volume report not to browser
		Print #0; Using "###### "; Tab 1;C1[1]; Tab 7;A1$[31,60];
		Print #0; Using "-------#.##"; Tab 40;CUSTSLS1[0,1];
		Print #0; Using "-------#.##"; Tab 52;CUSTSLS1[0,2];
		Print #0; Using "-------#.##"; Tab 64;(CUSTSLS1[0,1] - CUSTSLS1[0,2]);
		TMP3 = 0
		If CUSTSLS1[0,1] <> 0
		 TMP3 = FNR(((CUSTSLS1[0,1] - CUSTSLS1[0,2]) / CUSTSLS1[0,1]) * 100)
		End If 
		gosub adjust_percent_mask:
		print #0;tab 75;percentmask$;
		!Print #0; Using "---#.##%"; Tab 75;TMP3;
		Print #0; Using "---#.##%"; Tab 84;PERCENTOFTOTAL;
		Print #0; Using "---#.##%"; Tab 93;ACCUMPERCENT;
		Print #0; Using "####.##"; Tab 103;C1[10];
		TMP3 = 0
		If NETPROFPCT <> 0
			TMP3 = FNR((CUSTSLS1[0,1] = CUSTSLS1[0,2]) * (NETPROFPCT / 100))
		End If 
		Print #0; Using "-------#.##"; Tab 112;;TMP3;
		Print #0; Using "###"; Tab 123;C1[2]
	endif
Else 
!!!!!--------- Deviation Report ---------
	if j8<>0 ! browser / deviation report
		tmp$=""
		tmp$=ltrim$(c1[1] using "######"),fdel$
		tmp$=tmp$,RTrim$(a1$[31,60]),fdel$	
		tmp$=tmp$,LTrim$(custsls1[0,1]Using "-------#.##"),fdel$
		tmp$=tmp$,LTrim$(lastyeartd Using "-------#.##"),fdel$
		tmp$=tmp$,LTrim$(variance using "-------#.##"),fdel$
		tmp$=tmp$,LTrim$((varpercent) using "-----#.##"),fdel$
		!tmp$=tmp$,LTrim$((percentoftotal) using "---#.##"),fdel$
		tmp$=tmp$,LTrim$((pervtot) using "----#.##"),fdel$
		let pervacc=pervacc+pervtot
		!tmp$=tmp$,LTrim$((accumpercent) using "---#.##"),fdel$
		tmp$=tmp$,LTrim$((pervacc) using "----#.##"),fdel$
		tmp$=tmp$,LTrim$(custsls2[0,1]Using "-------#.##"),fdel$
		tmp$=tmp$,ltrim$(c1[2] using "###"),fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
	else ! not browser deviation report
		Print #0; Using "###### "; Tab 1;C1[1]; Tab 7;A1$[31,60];
		Print #0; Using "-------#.##"; Tab 40;CUSTSLS1[0,1];
		Print #0; Using "-------#.##"; Tab 52;LASTYEARTD; 
		Print #0; Using "-------#.##"; Tab 64;VARIANCE;
		tmp3=varpercent
		gosub adjust_percent_mask:
		print #0;tab 77;percentmask$;
		!Print #0; Using "----#.##%"; Tab 77;VARPERCENT; !Tab 84;PERCENTOFTOTAL; Tab 93;ACCUMPERCENT;
		Print #0; Using "----#.##%"; Tab 87;PERVTOT;
		let pervacc=pervacc+pervtot
		!Print #0; Using "---#.##%"; Tab 93;ACCUMPERCENT;
		Print #0; Using "----#.##%"; Tab 97;pervacc;
		Print #0; Using "-------#.##"; Tab 107;CUSTSLS2[0,1];
		Print #0; Using "###"; Tab 120;C1[2]
	endif
End If 
RPT[0] = RPT[0] + 1
Return 

adjust_percent_mask: rem adjust the mask if huge values ae involved
percentmask$=tmp3 using "---#.##%"
if tmp3>=0 
	percentmask$=tmp3 using "####.##%"
	if tmp3>9999 then percentmask$=tmp3 using "#####.#%"
	if tmp3>99999 then percentmask$=tmp3 using "#######%"
	if tmp3>9999999 then percentmask$=">9999999"
else
	if tmp3<-999 then percentmask$=tmp3 using "----#.#%"
	if tmp3<-9999 then percentmask$=tmp3 using "-------%"
	if tmp3<-999999 then print percentmask$="<-999999"
endif
return

PRNT_HEADER: Rem "report header
if j8<>0 return ! browser no heading
If RPT < RPT[1] Return 
If RPT[2] ! "after page 1
  !If SCRN
    !Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
    !Input Len 16384 + 1;""J$
    !Print 'CS';
  !End If 
  Print #0;"\14\";
End If 
Print #0;""
RPT[2] = RPT[2] + 1
Print #0; Tab 1;"DATE: ";DATE$;
Print #0; Tab (Int(64 - (Len(CONM$) / 2)));CONM$;
Print #0; Tab 120;"PAGE: ";RPT[2]
Print #0;" -444z- ";
TME$ = "" \ Call Time(TME$)
Print #0;TME$;
If RPTPRNT = 2
  Print #0; Tab 45;"LISTING OF SALES REP ACCOUNTS BY VOLUME ";
Else 
  Print #0; Tab 45;"DEVIATION IN SALES ANALYSIS";
End If 
Print #0; Tab 110;Str$(ARMONTH);" AR MONTH"
Print #0;""
Print #0; Using " ###"; Tab 1;"Salesperson:";C1[2];
Print #0; Tab 32;" ";SMS1$[1,30];
Print #0;""
If RPTPRNT = 2
  Print #0; Tab 47;"YTD";
  Print #0; Tab 59;"YTD";
  Print #0; Tab 70;"GROSS";
  Print #0; Tab 81;"%";
  Print #0; Tab 87;"% OF";
  Print #0; Tab 96;"ACCUM";
  Print #0; Tab 109;"AVG"
  Print #0; Tab 114;"YTD NET";
  Print #0;""
  Print #0; Tab 1;"CUSTOMER";
  Print #0; Tab 46;"SALES";
  Print #0; Tab 58;"COST";
  Print #0; Tab 69;"PROFIT";
  Print #0; Tab 79;"PROF";
  Print #0; Tab 87;"TOTAL";
  Print #0; Tab 93;"OF TOTAL";
  Print #0; Tab 108;"DAYS";
  Print #0; Tab 114;"PROFIT"
  Print #0; Tab 122;"SLSM";
  Print #0;""
Else 
  Print #0; Tab 47;"YTD"; Tab 58;"LAST"; Tab 83;"%"; Tab 90;"% OF"; Tab 100;"ACCUM"; Tab 109;"LAST YEAR"
  Print #0; Tab 1;"CUSTOMER"; Tab 46;"SALES"; Tab 55;"YTD SALES"; Tab 67;"VARIANCE";
  Print #0; Tab 82;"VAR"; Tab 90;"TOTAL"; Tab 97;"OF TOTAL"; Tab 113;"SALES"; Tab 119;"SLSM";
  Print #0;""
End If 
RPT[0] = 11
Return 
PRT_SUBTOTAL: Rem sales person sub total
If RPTPRNT = 2 !!! volume report !!!
  Print #0;" "
  Print #0; Using "### "; Tab 1;BRK_SLSM; Tab 5;SMS1$[1,30];
  Print #0; Using "-------#.##"; Tab 40;SLSMTOTAL[1];
  Print #0; Using "-------#.##"; Tab 52;SLSMTOTAL[2];
  Print #0; Using "-------#.##"; Tab 64;(SLSMTOTAL[1] - SLSMTOTAL[2]);
  TMP3 = 0
  If SLSMTOTAL[1] <> 0
    TMP3 = FNR(((SLSMTOTAL[1] - SLSMTOTAL[2]) / SLSMTOTAL[1]) * 100)
  End If 
  gosub adjust_percent_mask:
  print #0;tab 75;percentmask$;
  !Print #0; Using "---#.##%"; Tab 75;TMP3;
  TMP3 = 0
  If NETPROFPCT <> 0
    TMP3 = FNR((SLSMTOTAL[1] - SLSMTOTAL[2]) * (NETPROFPCT / 100))
  End If 
  Print #0; Using "-------#.##"; Tab 112;TMP3;
  Print #0;""
Else  !!!! Deviation Report
  Print #0;" "
  Print #0; Using "### "; Tab 1;BRK_SLSM; Tab 5;SMS1$[1,30];
  Print #0; Using "-------#.##"; Tab 40;SLSMTOTAL[1]; ! current year
  Print #0; Using "-------#.##"; Tab 52;SLSMTOTAL[2]; ! last year 
  let tmp3=(SLSMTOTAL[1] - SLSMTOTAL[2]) ! variance (curr year - last year)
  Print #0; Using "-------#.##"; Tab 64;(tmp3); !variance (current - last year)
  If SLSMTOTAL[2]<>0
	TMP3 = FNR(((SLSMTOTAL[1] - SLSMTOTAL[2]) / SLSMTOTAL[2]) * 100)
	gosub adjust_percent_mask:
	print #0;tab 77;percentmask$;
	!Print #0; Using "----#.##%"; Tab 77;(( tmp3 / SLSMTOTAL[2]) * 100);
  endif
  Print #0; Using "-------#.##"; Tab 107;SLSMTOTAL[3]; ! last year
  Print #0;""
End If 
RPT[0] = RPT[0] + 1
If Not(PRGBRK)
  Print #0;""
  RPT[0] = RPT[0] + 2
End If 
Return 

! Salesperson - Sales Deviation Report
PRT_DEVSUBTOT: Rem sales person sub total
iF NOT (DEVTOTAL[1]) AND Not(DEVTOTAL[2]) AND NOT (DEVTOTAL[3]) RETURN
Print #0;""
Print #0; Using "### "; Tab 1;BRK_SLSM; Tab 5;"Subtotal ";
if negflag<>0 
	print #0; "Negative Variances ";
else
	print #0; "Positive Variances ";
endif
Print #0; Using "-------#.##"; Tab 40;DEVTOTAL[1]; ! current year
Print #0; Using "-------#.##"; Tab 52;DEVTOTAL[2]; ! last year 
let tmp3=(DEVTOTAL[1] - DEVTOTAL[2]) ! variance (curr year - last year)
Print #0; Using "-------#.##"; Tab 65;(tmp3); !variance (current - last year)
If DEVTOTAL[2]<>0
	tmp3=(( tmp3 / DEVTOTAL[2]) * 100)
	gosub adjust_percent_mask:
	print #0;tab 77;percentmask$;
endif
Print #0; Using "-------#.##"; Tab 107;DEVTOTAL[3]; ! last year
Print #0;""
Print #0;""
RPT[0] = RPT[0] + 2
FOR X=0 TO 3\ LET DEVTOTAL[X]=0\NEXT X
Return 


PRT_GRDTOTAL: Rem Grand total
If RPTPRNT = 2 !!! volume report !!!
  Print #0;" "
  Print #0; Tab 5;"*** GRAND TOTAL ***";
  Print #0; Using "-----------------#.##"; Tab 30;grdtotal[1];
  if grdtotal[2]>=0
	Print #0; Using "#########.##"; Tab 51;grdtotal[2];
  else
	Print #0; Using "--------#.##"; Tab 51;grdtotal[2];
  endif
  Print #0; Using "-------#.##"; Tab 64;(grdtotal[1] - grdtotal[2]);
  TMP3 = 0
  If grdtotal[1] <> 0
    TMP3 = FNR(((grdtotal[1] - grdtotal[2]) / grdtotal[1]) * 100)
  End If 
  Print #0; Using "---#.##%"; Tab 75;TMP3;
  TMP3 = 0
  If NETPROFPCT <> 0
    TMP3 = FNR((grdtotal[1] - grdtotal[2]) * (NETPROFPCT / 100))
  End If 
  Print #0; Using "-------#.##"; Tab 112;TMP3;
  Print #0;""
Else  !!!! Deviation Report
  Print #0;" "
  Print #0; Tab 5;"*** GRAND TOTAL ***";
  Print #0; Using "-----------------#.##"; Tab 30;grdtotal[1]; ! current year
  if grdtotal[2]>=0
	Print #0; Using "########.##"; Tab 52;grdtotal[2]; ! last year 
  else
	Print #0; Using "-------#.##"; Tab 52;grdtotal[2]; ! last year 
  endif
  let tmp3=(grdtotal[1] - grdtotal[2]) ! variance (curr year - last year)
  if tmp3>=0
	Print #0; Using "#########.##"; Tab 63;(tmp3); !variance (current - last year)
  else
	Print #0; Using "--------#.##"; Tab 63;(tmp3); !variance (current - last year)
  endif
  If grdtotal[2]<>0
	Print #0; Using "----#.##%"; Tab 77;(( tmp3 / grdtotal[2]) * 100);
  endif
  Print #0; Using "-------#.##"; Tab 107;grdtotal[3]; ! last year
  Print #0;""
End If 
RPT[0] = RPT[0] + 1
If Not(PRGBRK)
  Print #0;""
  RPT[0] = RPT[0] + 2
End If 
Return 









READ_CUST: Rem
Mat Read #CH_CUST,REC_CUST,0;A1$
Mat Read #CH_CUST,REC_CUST,142;C1
Mat Read #CH_CUST,REC_CUST,194;C2
Mat Read #CH_CUST,REC_CUST,200;C3
Mat Read #CH_CUST,REC_CUST,208;C0
Mat Read #CH_CUST,REC_CUST,210;C4
Mat Read #CH_CUST,REC_CUST,252;C5
Mat Read #CH_CUST,REC_CUST,288;C6
Mat Read #CH_CUST,REC_CUST,348;A2$
Mat Read #CH_CUST,REC_CUST,378;C7
Mat Read #CH_CUST,REC_CUST,388;A3$
Mat Read #CH_CUST,REC_CUST,410;C8
Mat Read #CH_CUST,REC_CUST,412;C9
Mat Read #CH_CUST,REC_CUST,418;SUB_
Mat Read #CH_CUST,REC_CUST,420;U1
Mat Read #CH_CUST,REC_CUST,426;U2$
Mat Read #CH_CUST,REC_CUST,486;A0
Mat Read #CH_CUST,REC_CUST,502;S0
Mat Read #CH_CUST,REC_CUST,544;CFIN
Mat Read #CH_CUST,REC_CUST,598;SZN
Mat Read #CH_CUST,REC_CUST,600;BT$
Mat Read #CH_CUST,REC_CUST,620;REC
Mat Read #CH_CUST,REC_CUST,624;C10
Mat Read #CH_CUST,REC_CUST,660;C11
Mat Read #CH_CUST,REC_CUST,668;C12
Mat Read #CH_CUSTSLS,REC_CUST,4;CUSTSLS1;
Mat Read #CH_CUSTSLS,REC_CUST,238;CUSTSLS2;
Mat Read #CH_CUSTSLS,REC_CUST,472;CUSTSLS3;
Return 
GETSLSM: Rem get salesperson rec
K4$ = " ",K4$
SMS1$ = " ",SMS1$
SMS1$[1,19] = "*** NOT ON FILE ***"
K4$[1,3] = C1[2] Using "###"
Search #CH_SSLSM,2,1;K4$,REC_SSLSM,E
If E Return 
Mat Read #CH_SSLSM,REC_SSLSM,0;SMS1$
Mat Read #CH_SSLSM,REC_SSLSM,118;SMS1
Mat Read #CH_SSLSM,REC_SSLSM,142;SMS2
Mat Read #CH_SSLSM,REC_SSLSM,862;SMS3
Mat Read #CH_SSLSM,REC_SSLSM,922;SMS2$
Return 

ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 

ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End



ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 

OUTEND: Rem EXIT PROGRAM
If not(j8)
	Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
	let returnstatus=0
	If Eflag>0
		ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
		tmp$=""
	Endif
	if not(eflag)
		if not(totrec)
			returnstatus=1
			let message$=message$+"There are no transactions to print"
			message$=message$+"."
		else
			Let message$=message$+" "+str$(totrec)+" Transaction(s) Printed"
		endif
	endif
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
else
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If
!try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program
