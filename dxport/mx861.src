! --- mx861
! description Production Order Quick Entry
!
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/mx861.dl4 src/mx861.src
!
include "src/copyright.inc"
Rem MX861 -- WORK ORDER FROM SALES ORDER ENTRY
Rem
Rem FROM MX861C - MONMOUTH
Rem BEDIT Version: 2.5 OBJECT CODE     Created: DEC 31, 2013  12:04:50
Rem /x/w2/pm/r2005//x/usracct/jcs/work/custom/xrev9/mx861a.src (synergyux.synergy.n) [jcs] {18379}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/inc/fileprtdefault.inc"
include "src/inc/filewhinfoz.inc"

External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
Declare External Function getmsg$,expandarray,openprinter

External lib "ubsfunc.dl4"
Declare external sub GetPortDefault
Declare external function OpenFile,chkaltitem$,PDate$
Declare external function chkDteFrmt$,Formatdate2$
!
Declare Intrinsic Sub InpBuf,String,StringSearch
!Option Default Dialect IRIS1

Com 1%,IntCo,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],rstr$[2000]
Com 1%,COST_LEV[3],2%,PASSR[1],TYPE,S9[9],3%,QTY
If Err 0 Gosub ERR_TRAP
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
DIM 1%,PW1[2],2%,PW2[9],PW7[1],PWH7[3],3%,PW3[24],PW2$[16]
Dim A2$[156],C$[30],D6$[6],D8$[10],F$[16],I$[20]
Dim K1$[25],U3$[80],U5$[50],U9$[10],prd$[20]
Dim V$[22],V1$[22],W$[180],W1$[30],W9$[9],P9$[50]
Dim A$[156],P$[156],T$[42],T1$[30],K5$[45],P60$[50]
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],Y,PD1[2]
Dim 2%,X,X1,CUSTID,P9
Dim 3%,X2,A4
Dim 3%,Q[6],A1[6],Q1[50]
Dim 2%,R[40],R6,D9[5]
Dim 1%,Z8[39],T1[1],W0,W1[2],2%,B[24],Z9
Dim 3%,D2,W3[4],T3[2],AMNT,BMAMT,COST,S3
Dim 2%,W2[7],T2[3]
Dim 2%,D8
Dim 3%,Z7[10]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim CUSTOM_CUSTOMER$[30],List$[100,1000],tmp$[1000],tmp1$[500]
dim action$[30],options$[30],userid$[8],b$[200],action1$[30],msg$[100]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10]
Dim Message$[500],WebStr$[1000],Prod$[12]
Dim prt. as prtdefault
! opened in the whmenu
! call dxopen()
!
call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$)
!
! CALL dxsave(0,"tmp/prodwo.txt!") 
b$=" ",B$
Userid$=UCase$(RTrim$(userid$))
COID=IntCo
W9$ = "WATCH IT!"
W1$ = W9$
W = 0
U3$ = " ",U3$
R1 = Spc(5)
J$ = "cntrl/CNTRL"+Str$(COID)
Z9 = COID
try close #1 Else rem  ! close the read only (we need wo #!)
let w=9
If Err 0 Gosub ERR_TRAP
call GetPortDefault(e$,IntCO,UserID$,portnum,rec_uac,prt.)
PD1[2]=prt.wh
If W = 0 Goto L_760
J$ = "cntrl/CNTRL"+Str$(COID)
Open #1,J$
L_760: Rem  READ #1,38,SPC 6*16;S9;!PASS AS COM
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,115;D9;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
custom_customer$=UCASE$(TRIM$(custom_customer$))
If S9 = 861 Goto L_870
For I = 2 To 10
  Read X
  If Not(X) Goto L_840
  Read #1,88,X;F$;
  Open #I,F$[1,16]
L_840: Next I
Data "1792","512","1808","656","528","1744","1728","2528","2320"
L_870: Rem
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNT(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .001)
Def FNP(X) = FNT(X * X1)
let ch_pwh=7
L_1000: Read #1,0,112;D8;
!D6$ = D8 Using "&&&&&&"
!D8$ = D6$[3,4] + "/" + D6$[5,6] + "/" + D6$[1,2]
D8$=PDate$(d8)
L_1070: Rem
W$ = " ",W$
For I = 0 To 7
  W2[I] = 0
  If I < 3 Let W1[I] = 0
  If I < 5 Let W3[I] = 0
Next I
W0 = PD1[2] \ If Not(W0) Let W0 = 1
W2[0] = D8
action1$=UCase$(RTrim$(action1$))
returnstatus=0;message$="Action 1 not found"
select case action1$
	case "GETDEFAULTS" ! start er off				doc=PWO861-GetDefaults.doc
		returnstatus=1;message$="OK"
		List$[0]=bsdel$,"DEFAULTS",fdel$
		List$[1]="PWODATE",fdel$,"BOMTYPE",fdel$,"CUSTID",fdel$,"WHSEID",fdel$
		tmp$=D8$,fdel$,"S",fdel$
		x2=999999 \ if custom_customer$="AMWAX" let x2=155
		tmp$=tmp$,Str$(X2),fdel$,Str$(W0),fdel$
		let list$[2]=tmp$
		list$[3]=esdel$
		call AddToStr(e$,rstr$,List$[])
		ch_whi=openfile(-2768,Intco) \ if ch_whi=-1 error 42
		clear list$[]
		call filedroplistwhinfoz(e$,list$[],maxcnt,Ch_whi) ! NO 0 option!
		call AddToStr(e$,rstr$,List$[])
		close #ch_whi
		clear list$[]
		list$[0]=bsdel$,"BOMTYPES",fdel$
		list$[1]="ID",fdel$,"DESCRIPTION",fdel$
		tmp$="S",fdel$,"Single Level",fdel$
		list$[2]=tmp$
		row=3
		if p9$[16,16]<>"S"
			let tmp$="M",fdel$,"Multi Level",fdel$
			list$[3]=tmp$
			row=4
		endif
		
		list$[row]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! end GETDEFAULTS
	Case "GETCUSTNAME"  !						doc=PWO861-GetCustomerName.doc
		returnstatus=1;message$="OK"
		call dxget("CUSTID",tmp$)
		let custid=tmp$
		if custid>0 and custid<1000000
			LET J$=CUSTID USING "######"
			gosub l_6500
		else
			c$="Invalid customer ID"
			returnstatus=0;message$="Invalid Customer number"
		endif
		clear list$[]
		list$[0]=bsdel$,"CUSTNAME",fdel$
		list$[1]="CUSTID",fdel$,"NAME",fdel$
		list$[2]=Str$(custid),fdel$,RTrim$(C$),fdel$
		list$[3]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! end getcustname
	Case "GETMAKEPROD" !						doc=PWO861-GetMakeProd.doc
		returnstatus=1;message$="OK"
		call dxget("MAKEPROD",tmp$)
		if rtrim$(tmp$)=""
			returnstatus=0
			message$="Invalid Product ID"
			goto m861Done
		endif
		tmp1$=chkaltitem$(e$,intco,tmp$)
		tmp1$=RTrim$(tmp1$)
		If tmp1$<>"" ! found an altitem
			let prod$=UCase$(tmp1$)+B$
		Else
			let prod$=UCase$(RTRIM$(tmp$))+B$
		endif
		let k1$=" ",k1$
		k1$[1,12]=prod$
		Search #2,2,1;K1$,K1,E
		If Not(E) 
			Mat Read #2,K1;A2$;
			Read #2,K1,220;P9; !!236
			If P9 <= 0 Let P9 = 1
			IF P9>999999 LET P9=1 ! LIMIT 1MILLION = NOGOOD
			E2 = K1 \ Gosub L_6800
			Read #8,PFU1[8],10;F$[1,4];
			If A2$[139,139] <> "M" 
				returnstatus=0
				message$="NOT A MAKE ITEM - NO BOM"
				LET P9=0
				CLEAR F$
			endif
		else
			a2$[9]="PRODUCT NOT FOUND"
			f$="ERR";p9=0
			returnstatus=0
			message$="PRODUCT NOT FOUND"
		Endif
		list$[0]=bsdel$,"MAKEPROD",fdel$
		list$[1]="MAKEPROD",fdel$,"DESC1",fdel$,"DESC2",fdel$,"UOM",fdel$,"BATCH",fdel$
		tmp$=prod$,fdel$,RTrim$(a2$[9,38]),fdel$,RTrim$(a2$[63,92]),fdel$
		tmp$=tmp$,F$[1,4],fdel$,Str$(P9),fdel$ ! Stock UOM, Batch
		list$[2]=tmp$
		list$[3]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! end getmakeprod
	Case "BUILDPWO" ! build it					doc=PWO861-BuildWorkOrder.doc
		returnstatus=1;message$="OK"
		Gosub L_1900
		! ends up chaining to mx861b to build lines
		! end BUILDPWO
	Case "PRINTPWO" ! print it					doc=PWO861-PrintPWO.doc
		returnstatus=1;message$="OK"
		call dxget("PWORDERID",tmp$)
		if rtrim$(tmp$)="" 
			returnstatus=0
			message$="NO WORK ORDER ID SENT"
			goto m861Done
		Endif
		let n0=tmp$
		if n0<1 or n0>99999
			returnstatus=0
			message$="INVALID WORK ORDER ID SENT"
			goto m861Done
		Endif
		K1$ = " ",K1$ \ K1$ = N0 Using "#####"
		Search #3,2,1;K1$,H1,E
		If E
			Message$="ORDER "+Str$(N0)+" NOT FOUND!"
			returnstatus=0
			goto m861Done
		Endif
		let s9[0]=861;s9[2]=h1
		FOR X2=0 TO 50          
		  IF ERR 0 REM          
		  IF X2<>1 CLOSE #X2    
		NEXT X2                 
		IF ERR 0 GOSUB ERR_TRAP:
		call dxget("Printer",tmp$) ! let's see if 1 selected (-- = NONE)
		tmp$=rtrim$(tmp$)
		if tmp$[1,2]="--"
				Returnstatus=0
				Message$="NO PRINTER SELECTED"
				goto m861Done ! Done
		Endif
		if tmp$="D"
			call dxget("FileName",tmp$)
			if rtrim$(tmp$)=""
				Returnstatus=0
				Message$="NO File Name Entered"
				goto m861Done ! Done
			Endif
		Endif
		onchannelno=0 ! zero for channel 
		printchan = openprinter(e$,onchannelno) 
		Toscreen=0
		if printchan=-1 let Toscreen=1 ! to browser
		if toscreen
			Returnstatus=0
			Message$="NO Browser Print allowed"
			goto m861Done ! Done
		Endif
		
		CHAIN "863.dl4"           
		! end PRINTPWO
End Select
m861Done: ! 
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
	!
call SetOutPut(e$,rstr$)
Goto OutEnd
L_1500: ! Print 'CS'
Return ! if here something is awry
!Print @0,0;"WORK ORDER ENTRY";@50,0;"MX861A - REV. 3.0";
!Print @0,2;"PRODUCT NUMBER.....:";@50,2;"WORK ORDER # ";
!Print @0,4;"MACHINE NUMBER.....:";
!Print @0,5;" 1. LOT NUMBER..............:";
!Print @0,6;" 2. REQUIRED COMPL. DATE....:";
!Print @0,7;" 3. CUSTOMER NUMBER.........:";
!Print @0,8;" 4. SALES ORDER NUMBER......:";
!Print @0,9;" 5. # OF BOM QTY'S TO MAKE..:";
!Print @0,10;" 6. QUANTITY FOR ORDER......:";
!Print @0,11;" 7. SPECIAL INSTRUCTIONS....:";
!Print @0,12;" 8. SPECIAL INSTRUCTIONS....:";
!Print @0,13;" 9. SPECIAL INSTRUCTIONS....:";
!Print @0,14;"10. SPECIAL INSTRUCTIONS....:";
!If P9$[16,16] = "S" Goto L_1645
!Print @0,15;"11. SINGLE / MULTILEVEL S/M.:";
!L_1645: If D9[5] > 1 Print @0,16;"12. WAREHOUSE #.............:";
!If P60$[11,11] = "Y" Print @0,17;"13. PRIVATE LABEL PRDTN.....:";
!Print " "
!Signal 3,0
!U9$ = "*-?@&,"
L_1900: ! J0$ = "2 001220 2"
!J1$ = ""
!Gosub ISINPUT
!If J4$ = "" Goto L_8900
!If J4$ = "END" Goto L_8900
!Gosub L_6700 \ Goto L_1900
call dxget("MAKEPROD",tmp$)
if rtrim$(tmp$)=""
	returnstatus=0
	message$="Invalid Product ID"
	return
Endif
tmp1$=chkaltitem$(e$,intco,tmp$)
tmp1$=RTrim$(tmp1$)
If tmp1$<>"" ! found an altitem
	let prod$=UCase$(tmp1$)+B$
Else
	let prod$=UCase$(RTRIM$(tmp$))+B$
endif
K1$ = " ",K1$ \ K1$ = Prod$
!Print @20,2;J$;
Search #2,2,1;K1$,K1,E
If Not(E) Let C$[1,12] = J$
If E Goto L_2180
Mat Read #2,K1;A2$;
!Print @20,3;A2$[9,38];
!If P9$[26,26] <> "Y" Goto L_2040
!Print @0,3;'CL';@10,3;A2$[9,38];@45,3;A2$[63,92];
L_2040: E2 = K1 \ Gosub L_6800
X1 = 1
Mat Read #2,K1,156;B;
Gosub L_6100 \ Goto L_1500
If B[16] <= 0 let B[16]=1 ! Gosub L_6200 \ Goto L_1500
W$[121,132] = A2$[140,151]
W$[163,164] = A2$[6,7] !! REVISION
Gosub L_2220
S9[1] = K1
Goto L_3000 ! ENTER ALL FIELDS
L_2180: ! Print @28,22;"NO SUCH PART # ";'RB';
Returnstatus=0 ! Signal 3,20
Message$="PRODUCT NOT FOUND" ! Print @28,22;'CL';
Return ! Goto L_1900
L_2220: Rem READ U/M CODEC
Read #8,PFU1[8],10;F$[1,4];
!Print @43,10;F$[1,4];
Return 
!Print @28,22;'CL';
!Signal 3,20
!Print @28,22;'CL';
!Gosub L_8000
!Goto L_1000
L_2380: !Print @22,23;"ENTER FIELD #, DELETE, BUILD, OR END ";'RB';
!Input ""U5$
U5$="BUILD" ! we're here we are building it!
Call String(1,U5$)
!Print @0,23;'CL';
!If U5$ = "END" Goto L_8900
If U5$ = "B" Goto L_2530
If U5$ = "BUILD" Goto L_2530
!If U5$ = "DELETE" Goto L_1070
!W = U5$
!K = W
!If U5$[1,1] <> "R" Goto L_2500
!K = 0
!W = U5$[2]
!L_2500: On W - 0 Goto L_3000,L_3080,L_3210,L_3310,L_3390,L_3490,L_3570,L_3640,L_3710,L_3780
!On W - 10 Goto L_3850,L_4000,L_4050
!Goto L_2380
L_2530: Rem *** (SUB) END NEW REC ***
If Not(W3[1])
  Message$ = "NO QUANTITY TO STOCK ENTERED!" !\ Gosub ISERRMSG
  returnstatus=0
  Return ! Goto L_2380
End If 
If Not(W3[0])
  Message$ = "NO PRODUCTION QUANTITY ENTERED!" ! \ Gosub ISERRMSG
  returnstatus=0
  Return ! Goto L_2380
End If 
Read #1,20,74;Z9;
If Z9 >= 99998
  returnstatus=0
  message$="Work Numbers have run out. Have UBS reset them"
  return
End If 
Gosub L_5000
S9 = 861
Chain "MX861B.DL4"
goto outend
L_3000: Rem 1 LOT NUMBER
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 ! "default & Bypass
!  J$ = " ",J$
!  Goto L_3070
!End If 
!J0$ = "2 001229 5"
!J2$ = ""
!J1$ = W$[133,144]
!Gosub ISINPUT
call dxget("LOTNUM",tmp$)
let j$=UCase$(tmp$)+B$
L_3070: W$[133,144] = J$
! If J4$ = "END" Goto L_2380
W$[133,144] = J$
!If K = 1 Goto L_2380
L_3080: Rem 2 REQUESTED COMP. DATE
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 ! "default & Bypass
!  J1 = D8
!  Print @29,6;D8$;
!  Goto L_3110
!End If 
!J0$ = "5 00 629 6"
!J2$ = "&&&&&&"
!If Not(W2[0]) Let W2[0] = D6$
!J1 = W2[0]
!If J1 = 0 Let J1$ = "MMDDYY"
!Gosub ISINPUT
Call dxget("RCDATE",tmp$)
If Rtrim$(tmp$)="" let tmp$=d8$ ! mm/dd/yyyy
tmp$=chkDteFrmt$(e$,tmp$)
if tmp$[1,1]<"0" and tmp$[1,1]>"9" let tmp$=""
tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy or mm/dd/yy to yyyymmdd
J1=tmp1$[3,8] ! just want yymmdd
if j1<=0 let j1=d8
L_3110: W2[0] = J1
J2$ = ""
!If K = 2 Goto L_2380
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 ! "default it - Customer #
!  W2[5] = 999999 ! "default
!  If COID = 1 Let W2[5] = 155 ! "per ron ingber
!  J$ = W2[5]
!  Goto L_3280
!End If 
L_3210: Rem 3 CUSTOMER NUMBER
!J0$ = "2 01 629 7"
!J1$ = ""
!Gosub ISINPUT
call dxget("CUSTID",tmp$)
let j1=tmp$
if j1<=0 or j1>999999 or fra(j1)
	let returnstatus=0
	message$="CUSTOMER NOT FOUND"
	return
Endif
let j$=STR$(J1)
!Gosub L_6300 \ Goto L_3210
L_3280: Rem "defaulted - bypass input
X2 = J$ \ J$ = X2 Using "######" ! \ Print @29,7;J$;
Gosub L_6500 ! check cust
If E ! Goto L_3210
	let returnstatus=0
	message$="CUSTOMER NOT FOUND"
	return
Endif
W2[5] = J$
!If K = 3 Goto L_2380
L_3310: Rem 4 SALES ORDER NUMBER
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 ! "Default & Bypass
!  W2[6] = 0;W1[1] = 0
!  Print Using "######";@29,8;W2[6];
!  Print Using "###";@44,8;W1[1];
!  Goto L_3390
!End If 
!J0$ = "3000 629 8"
!J2$ = "######"
!J1 = W2[6]
!Gosub ISINPUT
call dxget("SLSORD",tmp$)
let j1=tmp$ \ if j1<0 or j1>999999 let j1=0
W2[6] = J1 !\ Print @36,8;"LINE #";
!J0$ = "3000 344 8" \ J2$ = "###"
!J1 = W1[1]
!Gosub ISINPUT
call dxget("ORDLINE",tmp$)
let j1=tmp$ \ if J1<0 or j1>999 let j1=0
W1[1] = J1
!If K = 4 Goto L_2380
L_3390: Rem 5 NUMBER OF MIXES
!J0$ = "33011029 9"
!J2$ = "######.###"
!J1 = W2[7]
!Gosub ISINPUT
call dxget("NUMBATCH",tmp$)
let j1=tmp$ \ if j1<0 or j1>999999999 let j1=0
W2[7] = J1
If Not(W2[7]) ! Goto L_3390
   returnstatus=0
   message$="PLEASE ENTER A PRODUCTION AMOUNT"
   return
Endif
Gosub L_6600
Goto L_3390 ! always rtn+1
! If K = 5 Goto L_2380
L_3490: Rem 6 QTY FOR STOCK
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 ! "Default & Bypass
!  W3[1] = W3[0]
!  Print Using "########.##";@29,10;W3[1];
!  Goto L_3570
!End If 
L_3500: ! J0$ = "3201112910"
!J2$ = "########.##"
!J1 = W3[1]
!Gosub ISINPUT
call dxget("STKQTY",tmp$)
let j1=tmp$ \ if J1<=0 or j1>999999999 let j1=w3[0]
W3[1] = J1
If Not(W3[1]) let w3[1]=w3[0] !  Goto L_3500
!If K = 6 Goto L_2380
L_3570: Rem SPEC INSTR. 1
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 Goto L_3850
!J0$ = "2 00302911"
!J1$ = W$[1,30]
!Gosub ISINPUT
call dxget("SPINST1",tmp$)
let j$=Rtrim$(tmp$)+B$
W$[1,30] = J$
!If K = 7 Goto L_2380
L_3640: Rem 8 SPEC. INSTR. 2
!J0$ = "2 00302912"
!J1$ = W$[31,60]
!Gosub ISINPUT
call dxget("SPINST2",tmp$)
let j$=RTrim$(tmp$)+B$
W$[31,60] = J$
!If K = 8 Goto L_2380
L_3710: Rem 9 SPEC. INSTR. 3
!J0$ = "2 00302913"
!J1$ = W$[61,90]
!Gosub ISINPUT
call dxget("SPINST3",tmp$)
let j$=RTrim$(tmp$)+B$
W$[61,90] = J$
!If K = 9 Goto L_2380
L_3780: Rem 10 SPEC. INSTR. 4
!J0$ = "2 00302914"
!J1$ = W$[91,120]
!Gosub ISINPUT
call dxget("SPINST4",tmp$)
let j$=RTrim$(tmp$)+B$
W$[91,120] = J$
!If K = 10 Goto L_2380
L_3850: Rem 11 SINGLE / MULTI - LEVEL
If P9$[16,16] = "S" Let J$ = "S" \ Goto L_3910
!J0$ = "2 00012915"
!J1$ = "S" !!"M"
!Gosub ISINPUT
call dxget("BOMTYPE",tmp$)
let j$=UCase$(tmp$)+b$
LET J$[2]="" ! CUT IT AT 1
if j$[1,1]<>"M" let J$="S"
If J$ = "M" Goto L_3970
L_3910: If J$ = "S" Goto L_3970
!J7$ = "ENTER (S OR M) 'ONLY'!"
!Gosub ISERRMSG
!Signal 3,20
!Print @41,15;'CL';
!Goto L_3850
L_3970: If J$ = "M" Let W1[2] = 1
If J$ = "S" Let W1[2] = 0
!If K = 11 Goto L_2380
L_4000: If D9[5] <= 1 Let W0 = 1 \ Goto L_4040
!If CUSTOM_CUSTOMER$ = "AMWAX" And K = 0 ! "Default & Bypass
!  W0 = 1
!  Print Using "##";@29,16;W0;
!  Goto L_4040
!End If 
!J0$ = "3000022916" \ J1 = 1
!J2$ = "##" \ Gosub ISINPUT
call dxget("WHSE",tmp$)
let j1=tmp$ \ if j1<=0 or j1>99 let j1=1
W0 = J1 \ If Not(W0) let w0=1 ! Goto L_4000
If W0 > D9[5] let w0=1 ! Goto L_4000
L_4040: ! If K = 12 Goto L_2380
L_4050: If P60$[11,11] <> "Y" Let J1 = 0 \ Goto L_4065
!J0$ = "6000012917" \ J1 = 0 \ If W$[180,180] = "Y" Let J1 = 1
!J5$ = "Is this a Private Label Production? (Y/N)"
!Gosub ISINPUT
call dxget("PLBLM",tmp$)
let j1=tmp$
L_4065: W$[180,180] = " "
If J1 = 1 Let W$[180,180] = "Y"
J5$ = ""
Goto L_2380 ! all fields gotten - now BUILD IT
L_4100: Rem *** GET WO#,BLD & WRT REC ***
W1[0] = 1
E = 2
Search #3,1,0;V$,V1,E
If E = 3 ERROR 11000
If E Gosub ERR_SEARCH
Search #3,4,1;V$,V1,E
If E Gosub ERR_SEARCH
V1$ = " "
V1$[1,6] = W2[5] Using "######"
V1$[7,12] = V$[1,6]
Search #3,4,2;V1$,V1,E
If E Gosub ERR_SEARCH
V1$ = " "
V1$[1,12] = W$[121,132]
V1$[13,18] = V$[1,6]
Search #3,4,3;V1$,V1,E
If E Gosub ERR_SEARCH
V1$ = " ",V1$ \ V1$ = W2[6] Using "######"
V1$[7,9] = W1[1] Using "###"
V1$[10] = V$[1,6]
Search #3,4,4;V1$,V1,E
If E Gosub ERR_SEARCH
Write #3,V1,180;W0;
Mat Write #3,V1,182;W1;
Mat Write #3,V1,188;W2
Mat Write #3,V1,220;W3;
For X = 1 To 180
  If W$[X,X] < " " Let W$[X,X] = " "
Next X
C$[1,12] = V1$[1,12]
Mat Write #3,V1;W$;
S9[2] = V1
S9[3] = 100 + W1
PASSR[0] = V1;TYPE = 1;QTY = W3[0];prd$=W$[121,132]
! Swap 1,"MXPRWH"
gosub do_prwh:
Return 
L_4800: Rem GET WO #
L_4805: Read #1,20,74;Z9
If Z9 > 99999 Let Z9 = 0
Z9 = Z9 + 1
Write #1,20,74;Z9;
V$ = " "
V$[1,6] = Z9 Using "##### "
Search #3,2,1;V$,R1,E
If E Goto L_4850
!Print @0,22;'CE RB';" WORK ORDER ALREADY ON FILE !! "
!Signal 3,0
Goto L_4805
L_4850: ! Print @63,2;V$;
W$[145,150] = V$[1,6]
R4 = R
S9[1] = R4
Return 
!Print @28,3;'RB CL';"  INVALID";
!Signal 3,15
!Goto L_4800
L_5000: Rem ****** EXPLOSION *******
! Gosub L_6000
R = K1
Q1 = Q
Gosub L_5900
Return 
L_5900: Rem TLA WO
V1$ = W$[121,132]
Search #2,2,1;V1$,R,E
If E Gosub ERR_SEARCH
Gosub L_4800
Mat Read #2,R,256;A1;
E2 = R \ Gosub L_6800
COST = W3[0] \ Gosub L_6935
A1[2] = A1[2] + FNR(COST)
Mat Write #2,R,256;A1;
W3[0] = COST !!STORE AS BASE
COST = W3[1] \ Gosub L_6935
W3[1] = COST !!STORE AS BASE UNIT
Gosub L_4100
Return 
L_6000: !Print @0,18;
!Print "PLEASE WAIT  . . .    ";
!If W1[2] Print "MULTI";
!If Not(W1[2]) Print "SINGLE";
!Print " LEVEL WORK ORDER GENERATION IN PROCESS"
!Signal 3,0
Return 
L_6100: Rem CHECK PART VALIDITY
If A2$[139,139] <> "M" Goto L_6200
A$ = K1 Using "#####   0    0"
F$ = A$ \ FLAG = 0
L_6130: Search #5,3,1;A$,R6,E
If E Goto L_6200
If A$[1,5] <> F$[1,5] Goto L_6200
If A$[15,16] = A2$[6,7] Let FLAG = 9
Goto L_6130
L_6160: Return 1
L_6200: Rem INVALID PART
If FLAG = 9 Goto L_6160 !!FOUND REV
Message$="INVALID PART... NO B.O.M. LOADED"
returnstatus=0
! Print @0,23;'CL';
Return 
L_6300: Rem NAME

Return 
L_6500: Rem CHECK CUSTOMER
Search #4,2,1;J$,R6,E
If E Goto L_6550
Read #4,R6,30;C$[1,30];
! Print @40,7;'CL';C$[1,30];
Return !  1
L_6550: Rem INVALID CUSTOMER
C$=" CUSTOMER NOT ON FILE !! "
!Signal 3,10
!Print @0,23;'CL';
Return 
L_6600: Rem PRODUCTION QTY CHECK
Read #2,K1,220;P9; !!236
If P9 <= 0 Let P9 = 1
W3 = FNR(W2[7] * P9)
!Print Using "PRODUCTION AMOUNT #######.##";@40,9;'CL';W3;
!Print @15,23;'CL';"CORRECT AMOUNT (Y/N) ";
!Input ""J1$ \ If J1$ = "" Let J1$ = "Y"
!Print @0,23;'CL';
J1$="Y"
Q = W2[7] \ D2 = P9
If J1$ = "Y" Return 1
!Print @40,9;'CL';
Return 
L_6700: Rem DESC LIST

Return 
L_6800: Rem READ PROD
Mat Read #2,E2;P$;
Mat Read #2,E2,156;B;
Mat Read #2,E2,256;A;
Mat Read #2,E2,512;PFU1;
Mat Read #2,E2,554;PFU2;
If Not(B[8]) Let B[8] = B[21] !!IF NO PRDTN USE AVG
If Not(B[8]) Let B[8] = B[10] !!LAST TRY, USE P.O.
A2 = B[8]
If PFU1[8] <= 0 Let PFU1[8] = PFU1[0]
If PFU1[13] <= 0 Let PFU1[13] = PFU1[0]
Return 
CNVTA = S3 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 1
Gosub L_6960
If AMNT <= 0 Let AMNT = S3
BMAMT = AMNT
CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 2
Gosub L_6960
If AMNT <= 0 Let AMNT = A2
COST = FNR(AMNT)
Return 
CNVTA = BMAMT \ CNVTU[0] = PFU1[13] \ CNVTU[1] = 0 \ CNVTU[2] = 1
Gosub L_6960
If AMNT <= 0 Let AMNT = BMAMT
S3 = AMNT \ Return 
L_6935: Rem STOCK -> BASE UNITS
CNVTA = COST \ CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 1
Gosub L_6960 \ If AMNT <= 0 Let AMNT = COST
COST = AMNT
Return 
L_6960: Rem STD

L_6990: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMNT = CNVTA
Return 
Do_PRWH: ! instead of a swap
LET J$=" ",J$ \ LET J$=Prd$[1,12] \ LET J$[13]=W0 USING "##"
	SEARCH #ch_pwh,2,1;J$,R10,E \ IF E RETURN                     
	MAT  READ #ch_pwh,R10,32;PW1;                                 
	MAT  READ #ch_pwh,R10,38;PW2                                  
	MAT  READ #ch_pwh,R10,78;PW3                                  
	MAT  READ #ch_pwh,R10,404;PW2$;                               
	MAT  READ #ch_pwh,R10,428;PWH7;                               
	MAT  READ #ch_pwh,R10,696;PW7                                 
	IF TYPE=1 LET PW3[1]=PW3[1]+QTY                           
	IF PW3[1]<0 LET PW3[1]=0                                  
	IF TYPE=2 LET PW3[0]=PW3[0]+QTY                           
	IF TYPE=3 LET PW3[2]=PW3[2]+QTY                           
	IF PW3[2]<0 LET PW3[2]=0                                  
	IF TYPE=4 LET PW3[0]=PW3[0]+QTY                           
	MAT  WRITE #ch_pwh,R10,32;PW1;                                
	MAT  WRITE #ch_pwh,R10,38;PW2                                 
	MAT  WRITE #ch_pwh,R10,78;PW3                                 
	MAT  WRITE #ch_pwh,R10,404;PW2$;                              
	MAT  WRITE #ch_pwh,R10,428;PWH7;                              
	MAT  WRITE #ch_pwh,R10,696;PW7;  
Return
L_8000: Rem *** DELETE RESET VER. ***
V$ = ""
K1$ = ""
U5$ = ""
For X = 0 To 7
  W2[X] = 0
  If I <= 4 Let W3[X] = 0
  If I <= 2 Let W1[X] = 0
Next X
W$ = " ",W$
If Err 0 Gosub ERR_TRAP
Z7[10] = 0
Return 
Gosub L_8000
!Print @28,22;"WORK ORDER 'DELETED' ";'RB';
!Signal 3,20
Return ! Goto L_1070
L_8900: Rem *** CLOSE & EXIT ****
For I = 0 To 3
  S9[I] = 0
Next I
Goto OUTEND
OUTEND: Rem EXIT

End 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM ",MSC$(4)
call programdump("tmp/mx861se!","")
ERROR 11000
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
end
Rem {end rtn.error.s}
