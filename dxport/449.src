! >>> Program 449
!
! description Inventory Analysis Report (Input & Sort)
!
! loadsave -w -n 100,10 -o prog/dxport/449.dl4 src/449.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  2, 2002  15:45:43
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx/mx449.src (univ2) [txc] {05251}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX449 INVENTORY ANALYSIS REPORT SORT SECTION
Rem AUTHOR: DD
Rem LAST UPDATE:
!
Declare Intrinsic Sub InpBuf,String
Declare Intrinsic Sub FindF

External Lib "libgeneral.lib"                                       
Declare External Sub getsession 

External Lib "ubsfunc.dl4"                                     
Declare External Function getuidrec

! - Option Default Dialect IRIS1
dim 1%,WHS,UNIT,SORT_BY_WHSE,U5$[25],csv
dim 3%,TOTCOST,TOTVALUE,WHSECOST[99],WHSEVALUE[99],STMY,ENMY
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim BegUsage$[6],EndUsage$[6],MINMY$[4],MAXMY$[4]
dim Blank$[50] \ Blank$=" ",Blank$
!
Dim C$[16],2%,X2[9],VMTHS[25]
Dim 1%,W1[2],W0[3],ARMONTH,X1[9],2%,WH7[3],C0,SCRPRT
Dim 3%,W3[16],W5[25],W6[12],SALES1[25],W8[12],W9[12],SALES[24]
Dim 3%,COST,SALES2[25],SALES3[25],A[33],X3[9],WH9[25],SCR
Dim K1$[50],K2$[60],K3$[60],K4$[60],F$[16],D8$[8],F2$[26],PORT_$[26],KEY_$[130]
Dim P9$[50],K9$[75],D$[20],UNIT$[10],W1$[32],A$[156]
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J4$[75],J5$[75],Z2$[5]
Dim J6$[40],J7$[75],J9$[75],Z1$[10],CHAR$[2],X$[10],RETVAL$[512]
Dim 2%,W2[9],W7[7],CLASS[13],WHCOUNT[99],CWH,B[24],C4[8],PCDATE,3%,PCTR
Dim 3%,ONHAND,tmp3
DIM ReportDir$[128],Fle$[256],SComm$[4],EComm$[4]
dim message$[500],msg$[500],k$[75]
Dim 3%,OHValue
DIM CUSTOM_CUSTOMER$[30]
! dx add xport reporting code
DXSetup:
Dim tmp$[500],tmp1$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)

Call getsession(e$,CTLC,options$,action$,Userid$,IntCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)                                                            
!Window On 
For X = 2 To 4
  Read J1 \ If J1 = -1 Goto L_850
  Mat Read #1,88,J1;F$;
  Ropen #X,F$
L_850: Next X
Data "1744","1792","-1"
Call dxsave(0,"tmp/449.txt!")
MAT  READ #1,115,60;CUSTOM_CUSTOMER$;         
LET CUSTOM_CUSTOMER$=RTRIM$(CUSTOM_CUSTOMER$)                   
                                        
if custom_customer$="WHITERIVER"
	Try
		Close #9
	else
		gosub err_trap:
	end TRY
	Let TOTCOST=0;TOTVALUE=0
	For X=0 to 99 \ Let WHSECOST[x]=0;WHSEVALUE[x]=0 \ Next X
	Gosub BldBigSortFle:
endif
Mat Read #1,3,172;PCDATE;
Mat Read #1,0,100;D8$;
Read #1,0,120;ARMONTH;
Mat Read #1,3,184;C0;
Mat Read #1,69,0;CLASS;
Read #1,60,16;CWH;
Mat Read #1,19,50;P9$;
ARYR = D8$[7,8]
Read #1,0,120;ARMONTH;
MINYR = ARYR - 2 \ If MINYR < 0 Let MINYR = MINYR + 100
MINMTH = ARMONTH + 1 \ If MINMTH > 12 Let MINMTH = 1;MINYR = MINYR + 1
If MINYR > 99 Let MINYR = MINYR - 100
If MINYR < 68 Let MINYR = MINYR + 2000 Else Let MINYR = MINYR + 1900
If ARYR < 68 Let ARYR = ARYR + 2000 Else Let ARYR = ARYR + 1900
X$[1,4] = MINYR Using "&&&&";X$[5] = MINMTH Using "&&"
MINMY = X$[1,6] \ MINMY$=X$[5,6],X$[3,4]
X$[1,4] = ARYR Using "&&&&";X$[5] = ARMONTH Using "&&"
MAXMY = X$[1,6] \ MAXMY$=X$[5,6],X$[3,4]
TOTCOST = 0;TOTVALUE = 0
For I = 1 To 99 \ WHSECOST[I] = 0;WHSEVALUE[I] = 0 \ Next I
X1[1] = ARYR - 1
X1 = ARMONTH + 1 \ If X1 > 12 Let X1 = 1;X1[1] = ARYR
X$ = X1[1] Using "&&&&";X$[5] = X1 Using "&&"
STMY = X$[1,6]
X$ = ARYR Using "&&&&";X$[5] = ARMONTH Using "&&"
ENMY = X$[1,6]
X1[1] = ARYR
For X = 1 To 25
  X1 = X \ If X1 = 13 Goto NXTMTH
  If X1 > 12 Let X1 = X1 - 13
  X$ = X1[1] Using "&&&&";X$[5] = X1 Using "&&"
  VMTHS[X] = X$[1,6]
  If X1 = ARMONTH Let X1[1] = X1[1] - 1
NXTMTH: Next X
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
!

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"449",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("sortby",tmp$) \ Sort_by_Whse=tmp$ ! sort by warehouse, commodity & product
call dxget("whs",tmp$) \ if rtrim$(tmp$)="" let WHS=0 else WHS=tmp$ ! warehouse
call dxget("unittype",tmp$) \ UnitType=rtrim$(tmp$) ! unit type
call dxget("begusage",tmp$) \let BegUsage$=rtrim$(tmp$) ! starting usage (mmyy)
call dxget("endusage",tmp$) \ let EndUsage$=rtrim$(tmp$) ! ending usage (mmyy)
call dxget("inczero",tmp$) \ if rtrim$(tmp$)="" let IncZero=0 else IncZero=1 ! include zero usage
!  dx end
let csv=0
if custom_customer$="WHITERIVER"
	call dxget("csv",tmp$)
	if rtrim$(tmp$)<>"" 
		if (Sort_By_Whse and not (whs))
  			let e$="For CSV spreadsheet, warehouse must be selected "\error 10000
		else
			let csv=1
		endif
	endif
endif

!
! warehouse
if WHS<0 or WHS>CWH let e$="Invalid warehouse, must be between 0 and ",CWH,"!" \ error 10000
!
! unit type
If UnitType = 1 Let U5$ = "IN STOCKING UNITS"
If UnitType = 2 Let U5$ = "IN SELLING UNITS"
If UnitType = 3 Let U5$ = "IN PURCHASING UNITS"
If UnitType = 4 Let U5$ = "IN COSTING UNITS"
If UnitType = 5 Let U5$ = "IN PRICING UNITS"
If UnitType = 6 Let U5$ = "IN PRODUCTION UNITS"
!
! month usage section
if BegUsage$="" let J$=MINMY$ else J$=BegUsage$
F=1 \ gosub VerUsageDate ! verify beg usage date (mmyy)
STMY=tmp3 ! yyyymm
if EndUsage$="" let J$=MAXMY$ else J$=EndUsage$
F=2 \ gosub VerUsageDate ! verify end usage date (mmyy)
ENMY=tmp3 ! yyyymm
!
goto STRTSORT
!
! *** verify usage date
VerUsageDate:
E9=0
X1[1] = J$[1,2] \ If X1[1] < 1 Or X1[1] > 12 let E9=F \ goto VerUsageDateErr
X1 = J$[3,4] \ If X1 < 68 Let X1 = X1 + 2000 Else Let X1 = X1 + 1900
If X1 < MINYR Or X1 > ARYR let E9=F \ goto VerUsageDateErr
X$ = X1 Using "&&&&";X$[5] = X1[1] Using "&&"
tmp3 = X$ ! yyyymm
if F=1 ! beg 
  If tmp3 < MINMY let E9=1 \ Goto VerUsageDateErr
  If tmp3 > MAXMY let E9=1 \ Goto VerUsageDateErr
else ! end
  If tmp3 < SYMY let E9=2 \ Goto VerUsageDateErr
  If tmp3 > MAXMY let E9=2 \ Goto VerUsageDateErr
endif
return
!
VerUsageDateErr:
tmp1$=MINMY$," and ",MAXMY$
if E9=1 ! beg date error
  e$="Invalid starting usage date, must be between "
  e$=e$,MINMY$," and ",MAXMY$,"!"
else
  e$="Invalid ending usage date, must be between "
  e$=e$,"starting usage date and ",MAXMY$,"!"
endif
error 10000
!
! - SORT_BY_WHSE = 1
! - WHS = 0;INCZERO = 0
! - UNIT = 8
! - Call "ProgDflt","449","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
! -   RETVAL$[1,1] = SORT_BY_WHSE Using "#"
! -   RETVAL$[2,3] = WHS Using "##"
! -   RETVAL$[4,5] = UNIT Using "##"
! -   RETVAL$[6,6] = INCZERO Using "#"
! - End If 
! - SORT_BY_WHSE = RETVAL$[1,1]
! - WHS = RETVAL$[2,3]
! - UNIT = RETVAL$[4,5]
! - INCZERO = RETVAL$[6,6]
! - Gosub GET_UNITDESC
! - STARTHERE: Rem =========================================== get ranges
! - Gosub PRNTSCRN
! - Gosub PRNTDEFAULT
! - STDFINALQ: Rem "Standard Final Question"
! - Print @0,23;'CL';"ENTER #:field to edit  R: reselect all  P: print  S: save defaults  E: exit ";
! - Input ""Z1$
! - Call String(1,Z1$)
! - If Z1$ = "R" Goto RESELECT
! - If Z1$ = "P" Goto STRTSORT
! - If Z1$ = "E" Window On \ Goto OUTEND
! - Y = Z1$
! - If Y >= 1 And Y <= 5
! -   Gosub EDT_FLDS
! - End If 
! - If Z1$ = "S"
! - ASK_SAVE: Print @0,22;'CL';"Save for  A: all  U: user access only  <CR>: do not save  ";
! -   Input Len 16384 + 1;""Z2$ \ Call String(1,Z2$)
! -   If Z2$ = "" Print @0,22;'CL'; \ Goto STDFINALQ
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "Progdfltw","449","",77,RETVAL$,URECFLAG
! -   Print @0,22;'CL';
! -   Goto STDFINALQ
! - End If 
! - Goto STDFINALQ
! - RESELECT: Rem
! - Gosub PRNTSCRN
! - For Y = 1 To 5
! -   Gosub EDT_FLDS
! - Next Y
! - Goto STDFINALQ
! - EDT_FLDS: Rem "
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On Y Gosub WHATSORT,WHATWHSE,WHATUNIT,WHATMTHS,INCL_ZERO
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
! - PRNTDEFAULT: Rem
! - J$ = "W"
! - If SORT_BY_WHSE = 0 Let J$ = "P"
! - If SORT_BY_WHSE = 2 Let J$ = "C"
! - Print @60,6;'BU';J$[1,1];'EU'
! - Print @42,8;'BU';WHS;'EU'
! - Print @32,10;'BU';U5$;'EU'
! - X$ = STMY Using "&&&&&&"
! - Print @36,12;'BU';X$[5,6];X$[3,4];'EU';
! - X$ = ENMY Using "&&&&&&"
! - Print @55,12;'BU';X$[5,6];X$[3,4];'EU';
! - J$ = "N" \ If INCZERO Let J$ = "Y"
! - Print @51,15;J$[1,1];
! - Return 
! - PRNTSCRN: Rem "First what Type Report to Run
! - Print 'CS';@0,0;"-mx449-";@35,0;"INVENTORY ANALYSIS"
! - Print @0,6;" 1>  Sort by  W: Warehouse or  C: Commodity or  P: Product: "
! - Print @0,8;" 2>  Enter warehouse or <CR> for all:";
! - Print @0,10;" 3>  Select Default Unit : ";
! - Print @0,12;'CE';
! - X$ = MINMY Using "&&&&&&"
! - Print @4,13;"Max Range= ";X$[5,6];"/";X$[1,4];
! - X$[1,4] = ARYR Using "&&&&";X$[5,6] = ARMONTH Using "&&"
! - Print " TO ";X$[5,6];"/";X$[1,4]
! - Print @0,12;" 4>  Months for USAGE:"
! - Print @22,12;"START (MMYY)  ";
! - Print @43,12;"END (MMYY)  ";
! - Print @0,15;" 5>  Include Items with ZERO usage & ZERO on hand?";
! - Return 
! - WHATSORT: Rem
! - J5$ = "ENTER HOW TO SORT <CR> FOR WAREHOUSE SORT"
! - J0$ = "2 00016006";J1$ = "P"
! - If SORT_BY_WHSE = 1 Let J1$ = "W"
! - If SORT_BY_WHSE = 2 Let J1$ = "P"
! - Gosub ISINPUT
! - Call String(1,J$)
! - If J$ <> "W" And J$ <> "C" And J$ <> "P"
! -   J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto WHATSORT
! - End If 
! - If J$ = "W" Let SORT_BY_WHSE = 1
! - If J$ = "C" Let SORT_BY_WHSE = 2
! - If J$ = "P" Let SORT_BY_WHSE = 0
! - RETVAL$[1,1] = SORT_BY_WHSE Using "#"
! - Return 
! - WHATWHSE: Rem CHECK WAREHOUSE
! - J5$ = "Enter warehouse to use or <CR> for all whse"
! - J0$ = "3 00034208" \ J1 = WHS
! - Gosub ISINPUT \ WHS = J1
! - If WHS > CWH
! -   J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto WHATWHSE
! - End If 
! - RETVAL$[2,3] = WHS Using "##"
! - Return 
! - WHATUNIT: Rem SELECT UNIT
! - Window Open @5,5; Size 70,12; Using " SELECT DEFAULT UNIT "
! - L_10520: Print 'CS'
! - Print 
! - Print Tab 5;" 1: STOCKING  "; Tab 45;" 4: COSTING"
! - Print Tab 5;" 2: SELLING  "; Tab 45;" 5: PRICING"
! - Print Tab 5;" 3: PURCHASING "; Tab 45;" 6: PRODUCTION"
! - Print 
! - Print Tab 10;"Enter unit to show on report ";
! - If UNIT > 6
! -   UNIT = UNIT - 7
! - End If 
! - Print Using "#";UNIT;'ML';
! - Input Len 16384 + 1;""UNIT$ \ If UNIT$ = "" Let UNIT$ = Str$(UNIT)
! - UNIT = UNIT$
! - If UNIT < 1 Or UNIT > 6 Goto L_10520
! - U5$ = " ",U5$
! - If UNIT = 1 Let U5$ = "IN STOCKING UNITS   "
! - If UNIT = 2 Let U5$ = "IN SELLING UNITS    "
! - If UNIT = 3 Let U5$ = "IN PURCHASING UNITS "
! - If UNIT = 4 Let U5$ = "IN COSTING UNITS    "
! - If UNIT = 5 Let U5$ = "IN PRICING UNITS    "
! - If UNIT = 6 Let U5$ = "IN PRODUCTION UNITS "
! - UNIT = UNIT + 7
! - L_10645: Window Close 
! - Print @32,10;U5$;
! - RETVAL$[4,5] = UNIT Using "##"
! - Return 
! - GET_UNITDESC: Rem "fill U5$
! - U5$ = " ",U5$
! - If UNIT = 8 Let U5$ = "IN STOCKING UNITS "
! - If UNIT = 9 Let U5$ = "IN SELLING UNITS "
! - If UNIT = 10 Let U5$ = "IN PURCHASING UNITS "
! - If UNIT = 11 Let U5$ = "IN COSTING UNITS "
! - If UNIT = 12 Let U5$ = "IN PRICING UNITS "
! - If UNIT = 13 Let U5$ = "IN PRODUCTION UNITS "
! - Return 
! - WHATMTHS: Rem "
! - J$ = STMY Using "&&&&&&"
! - X$ = J$[5,6] + J$[3,4]
! - Print @36,12;'BU';X$[1,4];'EU';@36,12;
! - Input Len 16384 + 4;""J$ \ If J$ = "" Let J$ = X$
! - X1[1] = J$[1,2] \ If X1[1] < 1 Or X1[1] > 12 Goto MTHRANGE
! - X1 = J$[3,4] \ If X1 < 68 Let X1 = X1 + 2000 Else Let X1 = X1 + 1900
! - If X1 < MINYR Or X1 > ARYR Goto WHATMTHS
! - X$ = X1 Using "&&&&";X$[5] = X1[1] Using "&&"
! - STMY = X$ \ If STMY < MINMY Goto WHATMTHS
! - If STMY > MAXMY Goto WHATMTHS
! - EMTHRANGE: Rem "ending
! - J$ = ENMY Using "&&&&&&"
! - X$ = J$[5,6] + J$[3,4]
! - Print @55,12;'BU';X$[1,4];'EU';@55,12;
! - Input Len 16384 + 4;""J$ \ If J$ = "" Let J$ = X$
! - X1[1] = J$[1,2] \ If X1[1] < 1 Or X1[1] > 12 Goto EMTHRANGE
! - X1 = J$[3,4] \ If X1 < 68 Let X1 = X1 + 2000 Else Let X1 = X1 + 1900
! - If X1 < MINYR Or X1 > ARYR Goto EMTHRANGE
! - X$ = X1 Using "&&&&";X$[5] = X1[1] Using "&&"
! - ENMY = X$ \ If ENMY < MINMY Goto MTHRANGE
! - If ENMY > MAXMY Goto EMTHRANGE
! - If ENMY < STMY Goto EMTHRANGE
! - Return 
! - INCL_ZERO: Rem "
! - NOZERO: Rem "want zero's ?
! - J5$ = "Enter  Y: to include  N: to exclude Zero Items"
! - J0$ = "6000015115";J1 = INCZERO
! - Gosub ISINPUT
! - INCZERO = J1
! - RETVAL$[6,6] = INCZERO Using "#"
! - Return 
!
STRTSORT: Rem
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

For X = 1 To 25
  If VMTHS[X] < STMY Or VMTHS[X] > ENMY Let VMTHS[X] = 0
Next X
K2$ = " ",K2$
W1$ = ""
!
L_2000: Rem
! - If Err 0 Gosub ERR_ESCAPE
Search #2,3,1;K2$,R2,E 
If E Goto OUTEND2
If WHS Let WHSETMP = K2$[13,14]
If WHS<>0
	If WHSETMP <> WHS Goto L_2000
endif
If Not(WHS) And SORT_BY_WHSE <> 1 And R3<>0
	If W1$[1,12] <> K2$[1,12] Gosub L_2600
endif
Mat Read #2,R2,0;W1$;
Mat Read #2,R2,32;W1;
Mat Read #2,R2,38;W2;
Mat Read #2,R2,78;W3;
Mat Read #2,R2,228;W5;
Mat Read #2,R2,306;W6;
Mat Read #2,R2,420;W0;
Mat Read #2,R2,428;WH7;
Mat Read #2,R2,540;W8;
Mat Read #2,R2,540;WH9;
Mat Read #2,R2,618;W9;
Mat Read #2,R2,696;W7;
If W1$[1,12] <> K2$[1,12] Let W1$[1,12] = K2$[1,12]
If W1[0] >= CWH Goto L_2000
Gosub L_4500 \ Goto L_2000
Gosub L_4000
If WHS<>0 Or SORT_BY_WHSE = 1 
	If R3<>0 Gosub L_2600
endif
Goto L_2000
L_2600: Rem WRITE TO SORT USE RECORD NUMBER OF PROD FILE
If Not(INCZERO) And UNTSLD = 0 And ONHAND = 0 Return 
EXCOST = FNR(UNTSLD * COST)
If Not(WHS) And SORT_BY_WHSE <> 1
  If EXCOST > 0 Let TOTCOST = TOTCOST + EXCOST
  If ONHAND > 0 Let TOTVALUE = TOTVALUE + FNR(ONHAND * COST)
End If 
If WHS Or SORT_BY_WHSE = 1
  If EXCOST > 0 Let WHSECOST[W1[0]] = WHSECOST[W1[0]] + EXCOST
  If ONHAND > 0 Let WHSEVALUE[W1[0]] = WHSEVALUE[W1[0]] + FNR(ONHAND * COST)
End If 
K9$ = " ",K9$
If Not(SORT_BY_WHSE)
  If EXCOST >= 0 Let K9$[1,15] = EXCOST Using "&&&&&&&&&&&#.##"
  If EXCOST < 0 Let K9$[1,15] = EXCOST Using " -&&&&&&&&&#.##"
  if custom_customer$="WHITERIVER"
		Let K9$[16,30]=OHValue Using "&&&&&&&&&&&#.##"
		LET K9$[31,42]=w1$[1,12]
		LET K9$[43,62]=UNTSLD USING "-------------------#"
	else
		LET K9$[16,27]=w1$[1,12]
		LET K9$[28,47]=UNTSLD USING "-------------------#"
	endif
End If 
If SORT_BY_WHSE = 1
  WHTMP = K2$[13,14]
  If WHTMP = 0 Goto L_3190
  K9$[1,2] = 100 - WHTMP Using "##"
  If EXCOST >= 0 Let K9$[3,17] = EXCOST Using "&&&&&&&&&&&#.##"
  If EXCOST < 0 Let K9$[3,17] = EXCOST Using " -&&&&&&&&&#.##"
  if custom_customer$="WHITERIVER"
		let K9$[18,32]=OHValue Using "&&&&&&&&&&&#.##"
		LET K9$[33,44]=W1$[1,12]
		LET K9$[45,64]=UNTSLD USING "-------------------#"
	else
		LET K9$[18,29]=W1$[1,12]
		LET K9$[30,49]=UNTSLD USING "-------------------#"
	endif
End If 
If SORT_BY_WHSE = 2
  K9$[1,4] = A$[152,155]
  If EXCOST >= 0 Let K9$[5,19] = EXCOST Using "&&&&&&&&&&&#.##"
  If EXCOST < 0 Let K9$[5,19] = EXCOST Using " -&&&&&&&&&#.##"
  if custom_customer$="WHITERIVER"
		let K9$[20,34]=OHValue Using "&&&&&&&&&&&#.##"     
		LET K9$[35,46]=W1$[1,12]                           
		LET K9$[47,66]=UNTSLD USING "-------------------#" 
	else
		let k9$[20,31]=w1$[1,12]
		LET K9$[32,50]=UNTSLD USING "------------------#"       
	endif
  End If 
Search #9,4,1;K9$,R3,E 
If E Let e$ = "syserrorfile 449 sortfile mode (m)=4 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",K9$ \ error 10000
! - Gosub SORTMESSAGE
EXCOST = 0; ohvalue=0
UNTSLD = 0 \ AVT9 = 0
CTR = CTR + 1
L_3190: Return 
!
L_4000: Rem CALC USAGE RATE "DEMAND"- For Entered month range
if custom_customer$="WHITERIVER" ! still uses adjusted 
 	for X=1 TO 25
		If VMths[x] ! "only selected months have values
			IF WH9[X] ! "adjusted units last 24 months
				LET UNTSLD=UNTSLD+WH9[X]
			ELSE 
				LET UNTSLD=UNTSLD+W5[X] ! "unit sls last 24 months
			ENDIF 
		 Endif
	 NEXT X
else
For X = 1 To 25
  If VMTHS[X] ! "only selected months have values
    If WH9[X] ! "adjusted units last 24 months
      UNTSLD = UNTSLD + WH9[X]
    Else 
      UNTSLD = UNTSLD + W5[X]
    End If 
  End If 
Next X
endif
Return 
!
For X = 1 To 12
  If X <> ARMONTH
    If W8[X] ! "adjusted units current year
      UNTSLD = UNTSLD + W8[X]
    Else 
      UNTSLD = UNTSLD + W5[X]
    End If 
  Else 
    If W9[ARMONTH] ! "adjusted units last year
      UNTSLD = UNTSLD + W9[ARMONTH]
    Else 
      UNTSLD = UNTSLD + W6[ARMONTH]
    End If 
  End If 
Next X
Return 
!
L_4500: Rem READ PRODDUCT
K3$ = " ",K3$;A$=" ",A$
K3$ = K2$[1,12]
Search #3,2,1;K3$,R3,E 
If E<>0
	Let R3 = 0 \ Return 
ENDIF
Mat Read #3,R3,0;A$;
Mat Read #3,R3,156;B;
Mat Read #3,R3,256;A;
Mat Read #3,R3,894;C4;
ONHAND = A[0]
If WHS Or SORT_BY_WHSE = 1
  If W3[15] Let COST = W3[15] Else Let COST = B[21]
  ONHAND = W3[0]
End If 
If Not(WHS) And SORT_BY_WHSE <> 1
  COST = B[21]
End If 
If P9$[32,32] = "N" Let COST = B[21]
Return 1
!
BldBigSortFle: ! "Key size is 64 Chars!!
SCR = getuidrec(e$,IntCo,Userid$)
! Read #1,88,912;F$[1,16];
!LET F$=RTRIM$(F$)
Let F$="6/SORTWORK"
!PRINT @0,21;"PREPARING SORT FILE, PLEASE WAIT . . . "'CE';
LET KSIZE=32 ! "32 words / 64 Chars
LET F$=F$+SCR USING "&&&&" ! [P2]=Str(SPC(6))
Call FindF(f$,H1)  
iF H1<>0
	TRY
		KILL F$
	ELSE
		let e$="Error with the sortwork file "\error 10000
	end try
endif
LET F2$="[1:256] ",F$                                    
BUILD #9,F2$                                              
SEARCH #9,0,1;K$,KSIZE,E \ IF E GOSUB Err_Search:
LET L1=1000 \ SEARCH #9,0,0;K$,L1,E \ IF E GOSUB Err_Search:
tmp$ = f$," <666>"                          
Modify tmp$ ! meme                                                                                               
Try                                                         
  Close #9                                         
Else                                                        
  ReturnStatus = 0                                          
  e$ = "Error Creating Sort File " \error 10000                                              
End Try                                                     
OPEN #9,F$
Return

ERR_SEARCH: Rem                                 
ENUM = e;ELINE = Spc(16);CTERR = 0              
If e = 5 Let CTERR = Err(8)                     
msg$ = "RETURN STATUS",(e + (CTERR * .001))     
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "  
e$ = msg$                                                   
Call programdump()                              
returnstatus = 0 ! need report to print still   
message$ = e$                                   
Error 10000                                     
Return ! End   

OUTEND2: Rem EXIT ROUTINE
Close #2,#3
Chain "449a.dl4"
chain write CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8,SORT_BY_WHSE,WHS,UnitType,U5$,STMY,ENMY,INCZERO,TOTCOST,TOTVALUE,WHSECOST,WHSEVALUE,CSV
! 
! - OUTEND: Rem
! - Print 'CS'
! - Chain "MX000C"
! - Close 
!
! - SORTMESSAGE: Rem
! - Print @0,22;"Sorting, Please Wait...";
! - PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed"
! - Return  
!
Rem {begin rtn.input.s}
! - ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 >= 3 If J0 <= 4
! -   If J0 = 3 Let J2$ = "#",J2$
! -   If J0 = 4 Let J2$ = "-",J2$
! -   J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - End If 
! - J1$[J3 + 1] = ""
! - If J0 < 3 Goto ISENTER
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 <> 6
! -   If J0 = 5
! -     J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! -     J1$ = J9$[4,7],J9$[2,3],"  "
! -   Else 
! -     J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! -     If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
! -   End If 
! - End If 
! - ISENTER: Rem
! - If J5 < Msc(34) - 1
! -   Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - End If 
! - Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
! - Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
! - Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) > J3
! -   J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
! - End If 
! - J9$ = J4$
! - If Not(Len(J9$))
! -   If J0$[3,4] = "00"
! -     J9$ = J1$
! -   Else 
! -     J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - End If 
! - For J8 = 1 To Len(J9$)
! -   If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
! -     J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
! -     Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - Next J8
! - On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
! - ISTYPE1: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto ISOUT
! - ISTYPE3: Rem
! - J9 = 0
! - X1 = 0
! - For J8 = 1 To Len(J9$)
! -   If J0 = 4 And Not(X1)
! -     If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
! -       X1 = 1
! -       Goto ISNCONT1
! -     End If 
! -   End If 
! -   If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
! -   If J9$[J8,J8] = " " Goto ISNCONT1
! -   If Len(J0$) > 10
! -     J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
! -   End If 
! -   If J9$[J8,J8] <> "." Goto ISNUMERR1
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
! -   If J9 Goto ISNUMERR1
! -   J9 = 1
! - ISNCONT2: Rem
! -   X1 = 1
! -   If J9 Let J9 = J9 + 1
! - ISNCONT1: Rem
! - Next J8
! - If J0 = 5 Goto ISTYPE5
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
! - ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - ISDECERR: Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
! - If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
! - If J9[1] = 0 Goto ISDTERR
! - On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
! - On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
! - Goto ISDTERR
! - ISMO30: If J9[1] > 30 Goto ISDTERR
! - ISMO31: If J9[1] > 31 Goto ISDTERR
! - Goto ISDTOUT
! - ISMOFEB: If J9[1] > 29 Goto ISDTERR
! - If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
! -   If J9[1] > 28 Goto ISDTERR
! - End If 
! - ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
! - J$ = X$ \ J3 = 8 \ Goto ISOUT
! - ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE6: Call String(1,J9$)
! - If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
! - Gosub ISERRMSG \ Goto ISENTER
! - ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
