! >>> Program 404
!
! description A/R Service Charge
! loadsave -w -n 100,10 -o prog/dxport/404.dl4 src/404.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
!Option Default Dialect IRIS1
Rem  MX404 and 404A   SERVICE CHARGE GENERATOR
Rem  AUTHOR:  G.DOSCHER  6/27/80
Rem  LAST UPDATE:  roman  07/12/1991  clean / up
Try
dim 3%, arcurrfact,excrate
dim keycn$[30],keycurr$[30],p61$[256]
dim 1%,ccurrid,arcurrid
dim 2%,ARDATE,DVWH
dim 1%,T0,P,X1
Dim 2%,V,V2,X3[1]
Dim A$[50],X$[10],F$[16]
Dim K1$[50],K3$[50],K4$[50],A3$[16],Z1$[50],P9$[50],P8$[3]
Dim 1%,C0,F1,C2[1],X1,A0[10],G[2],ARA0[10]
Dim 2%,A2[5],C1[12],C4[6],C5,REF,A4[7],X2,E,V1,V4,SV[2],JARDATE
Dim 2%,ARA2[5]
Dim 2%,D9[5]
Dim 3%,A3[13],C3,ARA3[13],CFIN[8],G1[10],Z1,SCHG
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=INTCo
Close #1 ! getsession open cntrl# as READONLY
fname$="cntrl/cntrl"+Str$(COID)
Open #1,fname$
eflag=0
returnstatus=0 ! blockid no errors
Rem "================================== open files
For X2 = 2 To 5
	Read V 
	if v<>-1
		Read #1,88,V;F$;
		Open #X2,F$
	endif
Next X2
Data "1808","1504","1520","2160"
Rem "2=CUST, 3=SARACT, 4=SARUP, 5=SVCHGCD
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
Mat Read #1,52,60;P8$;
if p9$[17,17]="Y"! g/l is on
	Mat Read #1,88,464;F$;
	Open #6,F$
	Rem #6-GLARCNTRL
endif
if p61$[136,136]="Y" 
	let f$=coid using "2/CURRENCY#"
	ropen #20,f$
	mat read #1,88,72;F$; ! CUSTNOTES
	ropen #21,f$
endif
Read #1,20,4;T0
if t0<>0
	 
	 Read #1,20,4;T0; ! "unlock it
	 let eflag=eflag+1
	 If T0 = 1 Let message$ = message$+ "ENTRY IN PROCESS" \goto L_9000:
	 If T0 = 2 Let message$=message$ + "JOURNAL IN PROCESS" \goto L_9000:
         If T0 = 3 Let message$ = "ACCEPT HAS NOT BEEN RUN" \ goto L_9000:
	 let message$=message$+"Cannot Run Service Charge Generator. "\goto L_9000:
endif
T0 = 1 \ Write #1,20,4;T0; ! "set to entry in process
Read #1,0,108;ARDATE;
Read #4,0;V; ! "next available entry in SARUP
If V <>0
	eflag=eflag+1
	message$=message$+"Direct A/R Entry is in process "
	Read #1,20,4;T0;	
 	T0 = 1 \ Write #1,20,4;T0;
	goto L_9000:
endif
Rem "================================ crunch port flag
Read #1,1,2;T0
If T0<>0
	Read #1,1,2;T0;
	eflag=eflag+1
	message$=message$+"Crunch Port In Use "
	Read #1,20,4;T0;	
 	T0 = 1 \ Write #1,20,4;T0;
	goto L_9000:
else
	T0 = 404 ! "this program
	Write #1,1,2;T0;
endif
DVWH=0
if d9[5]>1
	! Default Warehouse to Customers' Assigned Division? 
	call dxget("DVWH",tmp$)
	! dvwh =99 for yes, or 0 for no
	     
	dvwh=0
	If UCASE$(RTRIM$(tmp$))="Y" Let dvwh=99
endif
! Call dxsave(0,"tmp/404in.txt!") ! save web data sent
! start generating servicc charges here 
Read #1,20,90;REF
REF = REF + 1
Write #1,20,90;REF;
Z1$ = " ",Z1$ \ Z1$ = ARDATE Using "&&&&&&"
Call DateToJulian(1,Z1$,Z1$,E)
If E Gosub ERR_SEARCH
JARDATE = Z1$
K1$ = " ",k1$ ! was k1$="" - causes dl4 issue?
L_2010: Search #2,3,1;K1$,V1,E
If E = 2 Goto L_9030
If E Gosub ERR_SEARCH
Gosub L_2900
! Print @0,22;"Checking customer: ";K1$;
If Not(C0) Goto L_2010
Gosub L_2800
If Not(SV[0]) Goto L_2010
Gosub L_3000
If C3 <= 0 Goto L_2010
SCHG = FNR(C3 * (SV[0] / 100))
If SCHG < SV[2] Goto L_2010
! Print @40,22;"Charging customer: ";K1$;
let arcurrid=0
let arcurrfact=0
if p61$[136,136]="Y"
	let keycn$=k1$[1,6]
	search #21,2,1;keycn$,rec_cn,e
	if not(e)
		mat read #21,rec_cn,434;ccurrid;
		if ccurrid<>0
			let keycurr$=ccurrid using "####"
			search #20,2,1;keycurr$,rec_curr,e
			if not(e)
				mat read #20,rec_curr,846;EXCRATE;
				if ccurrid<>0 and excrate<>0
					let arcurrid=ccurrid
					let arcurrfact=excrate
				endif
			endif
		endif
	endif
endif
A2[0] = C1[2] ! slsm 
A2[1] = 0
A2[2] = C1[1]
A2[3] = 1.02
A2[4] = ARDATE
A3[5] = REF
A3[0] = SCHG
A3[8] = 1
If DVWH If CFIN[4] > D9[5] Goto L_2170
If DVWH If CFIN[4] Let A3[8] = CFIN[4]
L_2170: A3[11] = C2[0]
A3[9] = CFIN[4]
A3$ = " ",A3$;A3$ = "SERVICE CHARGE        "
Read #4,0;C5
C5 = C5 + 1
A3[6] = 0
If P9$[17,17] = "Y"
	Gosub L_6900
	A3[6] = G1[10]
endif
let a3[10]=0
let a3[13]=0
IF P61$[136,136]="Y"
	let a3[10]=arcurrid
	let a3[13]=arcurrfact
endif
L_2300: Rem "============================= check AR if entry exists
K3$ = " ",K3$
K3$[1,6] = A2[2] Using "######"
K3$[7,16] = A3[5] Using "##########"
K3$[17] = Fra(A2[3]) * 100 Using "#"
E = 0 \ V4 = 0
Search #3,2,1;K3$,V4,E
If Not(E) Goto L_2010
Write #4,0;C5;
Mat Write #4,C5;A2;
Mat Write #4,C5,24;A3;
Mat Write #4,C5,108;A3$;
let totrec=totrec+1
Goto L_2010

L_2800: Rem "==================================== read svchgcd file
Mat Read #5,C0,20;SV;
Return 

L_2900: Rem "============================= read customer file
Mat Read #2,V1,142;C1;
Mat Read #2,V1,194;C2;
Read #2,V1,208;C0;
Mat Read #2,V1,210;C4;
Mat Read #2,V1,544;CFIN;
Return 

L_3000: Rem "================================= check AR balance
C3 = 0
K3$ = K1$[1,6]
L_3020: Search #3,3,1;K3$,R[3],E
If E = 2 Return 
If E Gosub ERR_SEARCH
If K3$[1,6] <> K1$[1,6] Return 
Mat Read #3,R[3],0;ARA2;
Mat Read #3,R[3],24;ARA3;
Mat Read #3,R[3],124;ARA0;
Mat Read #3,R[3],154;A4;
If ARA0[10] = 1 Goto L_3020
If ARA3 - ARA3[1] - ARA3[2] <= 0 Goto L_3020
TYPE = Int(Fra(ARA2[3]) * 100) \ If TYPE = 2 Goto L_3020
If TYPE > 5 Let C3 = C3 - (ARA3[0] - ARA3[1] - ARA3[2]) \ Goto L_3300
Z1 = ARA2[4]
Z1$ = A4[3] Using "&&&&&&" \ Call DateToJulian(1,Z1$,Z1$,E)
If E Let Z1$ = "00000"
A4[3] = Z1$[1,5]
If P9$[25,25] = "Y" And A4[3] > 0 Let Z1 = A4[3]
If Not(Z1) Or Fra(Z1) Let Z1 = ARA2[4]
If Not(Z1) Or Fra(Z1) Goto L_3300
AGE = JARDATE - Z1
If AGE <= 0 Goto L_3300
If AGE < SV[1] Goto L_3300
C3 = C3 + (ARA3[0] - ARA3[1] - ARA3[2])
L_3300: Goto L_3020

L_6900: Rem GLARCNTRL
Goto L_6940
Goto L_7000
L_6940: If P8$[1,1] = "N" Goto L_6965
K4$ = " ",K4$ \ K4$[1,2] = A3[8] Using "##" \ K4$[3,4] = A3[9] Using "##"
Search #6,2,1;K4$,R[6],E \ If E Goto L_6965
Goto L_7000
L_6965: K4$ = " ",K4$ \ K4$[1,2] = A3[8] Using "##"
Search #6,2,1;K4$,R[6],E \ If E Goto L_6985
Goto L_7000
L_6985: K4$ = "DFAULT" \ Search #6,2,1;K4$,R[6],E \ If E Gosub ERR_SEARCH
Goto L_7000
L_7000: Rem READ GLARCNTRL
Mat Read #6,R[6],0;G;
Mat Read #6,R[6],8;G1;
Return 

ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/404.se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                                               


OUTEND: Rem EXIT PROGRAM
F1 = 992
Goto L_9050
L_9030: Rem END.OF.JOB
F1 = 0
Write #1,20,4;F1;
L_9050: Write #1,1,2;F1;
L_9000: ! end it here

Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no service charges available to generated"
	else
		Let message$=message$+" "+str$(totrec)+" Service Charges(s) Generated"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
