! >>> Program 365
!
! description  Auto PO File Generate/Load
!
! loadsave -w -n 100,10 -o prog/dxport/po365.dl4 src/po365.src
!
! 1.0 mm/dd/yyyy change??
!
! ERPScheduler enabled for "LOAD" and "CLEAR" actions
!
!
Rem PO365  PURCHASE ORDER AUTO-GENERATE  PART 1
Rem        GEORGE DOSCHER  8/8/88
Rem LAST UPDATE:   roman 01/06/1993. check do-not-reorder flag cct #48631
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 11, 2008  16:31:13
Rem /w2/papermaster/r2005//usr/acct/jliu/work/r2005/po/po365.src (univ2) [jliu] {25837}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Sub ERPCronSuccess
Declare External Function GetParameter$

External Lib "libprod.lib"
Declare External Sub ProdGroup
External Lib "libcpi.lib"
Declare External Sub cpionhold
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,PDate$
Declare External Sub UserCntrl
Declare Intrinsic Sub InpBuf,String,programdump
! Option Default Dialect IRIS1

Try
Com 1%,PFU1[20],CNVTU[9]
Com 2%,S9[3]
Com 3%,PFU2[6],CNVTA[4],A[33]

Dim tmp$[200],UserId$[10],WebStr$[1000],Blank$[128],Message$[200]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
dim action$[30],options$[30],b$[200],action1$[30],msg$[256],action2$[30]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000],custom_customer$[30]
Dim 1%,UREC,IntCo,Ctlc
Dim 2%,maxcnt \ maxcnt=50 ! init max records in arrays for list
dim List$[maxcnt,1000] ! for .net (larger size - ZLines)
Dim A$[20],3%,A1[5],1%,A2[2],2%,A4[1],TR_W7[14]
Dim 2%,C0,R[30],FIXPO,BDAYS[24],3%,AMOUNT,M1[17],TR_W3[16]
Dim P1$[156],2%,B1[24],W7[14],W2[9],3%,P1[30],P2[7],T1$[12],W3[16]
Dim 3%,R1[5],K2$[50],K3$[50],R1$[12],R2$[12],K6$[50],PLP3[4],QTYBO,UNF[6]
Dim 1%,OL1[3],3%,OL3[5],2%,OL2[3],H5[16],K8$[30],K10$[60],K1$[60],V1$[30]
Dim 1%,ARMONTH,PW_W1[2],MODE,INZERO,FIRSTPASS,CUR_REGION,region
Dim 2%,X7,I,WH7[3],PR_C4[10],HA3[2],OLL2[1],st_cons
Dim 3%,W5[25],WH9[25],QTYTR,A3[4],R2,I1,QTYTMP,DEMNDDAY,PARM[5],WHMISC2[7]
Dim J0$[12],J1$[40],J2$[40],J4$[45],J5$[76],J6$[16],J7$[76],J9$[45],X$[20]
Dim J$[40],U5$[20],NS$[2],OLL2$[12],K16$[50],P9$[50],RETVAL$[512],Z2$[5]
Dim 2%,OLL6[5],L4[3],3%,L7[12],2%,PDL7[2],1%,OLS2[1],OLL3[3],3%,OLS3[17]
Dim 1%,W0[3],X0[9],UN[2],EUN[2],2%,J2,J3,J4,J5,J6,J8,J9[9],X2[9],4%,J1,2%
Dim 1%,POWOF[4],3%,POWOFA[4],a5[99]
Dim 1%,TRL1[10],TR1[13],WHOF[4],3%,TRL3[21],2%,COMP,K12$[30],CMD$[256]
Dim 2%,cpiflag,custno,custname$[30],cprod$[12]
DIM TR5$[50],P61$[256],3%
NS$ = " Y"
! call dxopen()
call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
! OPTIONS$ & ACTION$ used in POMENU.dl4 for routing
COMP = IntCo
FOR J=2 TO 15                                                              
	READ J1 \ IF J1=-1 GOTO L_850:                                         
	READ #1,88,ABS(J1);J$;                                                 
	IF J1>=0 OPEN #J,J$ ELSE  ROPEN #J,J$                                  
	L_850: NEXT J                                                              
dATA "2752","-1792","-2528","-1744","-2128","-1888","-1840","-1120","-2320","-848","-1360","-2768"   
DATA "-1","-2400" 
Mat Read #1,19,50;P9$;
MAT  READ #1,61,0;P61$;
Read #1,3,184;C0;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,3,184;FIXPO;
mat read #1,60,16;st_cons;
Mat Read #1,11,0;BDAYS;
mat read #1,115,60;custom_Customer$;
Custom_customer$=UCase$(Trim$(Custom_customer$))
BDAYS = BDAYS[ARMONTH]
If BDAYS <= 0 Let BDAYS = 21
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Blank$=" ",Blank$
	Action2$=UCase$(Action2$)
	ACtion2$=RTrim$(Action2$) ! make sure UPPERCASE and No blanks at end
	Action1$=UCase$(action1$)
	Action1$=RTrim$(action1$) ! UC and trimmed
! call dxsave(0,"tmp/365in.txt!")
Select case action1$
	case "GETDFLT" !   send defaults for selections		doc=APOS-GetDefaults.doc
		Gosub L_8000 ! defaults get to send
		List$[0]=bsdel$,"DEFAULTS",fdel$
		List$[1]="ID",fdel$,"VALUE",fdel$
		List$[2]="SVEND",fdel$,Str$(R1[0]),fdel$
		List$[3]="EVEND",fdel$,Str$(R1[1]),fdel$
		List$[4]="WHSE",fdel$,Str$(W1),fdel$
		List$[5]="SPROD",fdel$,RTrim$(R1$),fdel$
		List$[6]="EPROD",fdel$,RTrim$(R2$),fdel$
		List$[7]="SBUYER",fdel$,Str$(R1[2]),fdel$
		List$[8]="EBUYER",fdel$,Str$(R1[3]),fdel$
		List$[9]="NSTKS",fdel$,Str$(NS),fdel$
		List$[10]="ALLPRD",fdel$,Str$(INZERO),fdel$
		List$[11]="WHXFER",fdel$,Str$(Whxfer),fdel$
		List$[12]=esdel$
		call AddToStr(e$,rstr$,List$[]) ! add droplist to string
		! 
		ReturnStatus=1
		Message$="OK"
		! end of default
	case "SENDSELS" ! return defaults & save or run or clear - multiple use
		ReturnStatus=1
		Message$="OK"
		Let r1[0]=GetParameter$("SVEND")
		Let r1[1]=GetParameter$("EVEND")
		tmp$ = GetParameter$("WHSE")
		let w1=tmp$
		IF W1<1 OR W1>99 OR FRA(W1)
			RETURNSTATUS=0
			MESSAGE$="INVALID WAREHOUSE"
			goto endof365
		Endif
		Let r1$=UCASE$(GetParameter$("SPROD"))+Blank$
		Let r2$=UCASE$(GetParameter$("EPROD"))+Blank$
		if r2$<r1$ 
			returnstatus=0
			message$="Invalid product range"
			goto endof365
		Endif
		Let r1[2]=GetParameter$("SBUYER")
		Let r1[3]=GetParameter$("EBUYER")
		if r1[3]<r1[2]
			returnstatus=0
			message$="Invalid Buyer range"
			goto endof365
		Endif
		if erpCron
			tmp$ = ucase$(GetParameter$("NSTKS"))
			ns = 0 \ if tmp$ = "Y" ns = 1
			tmp$ = ucase$(GetParameter$("ALLPRD"))
			INZero = 0 \ if tmp$ = "Y" INZero = 1
			tmp$ = ucase$(GetParameter$("WHXFER"))
			whxfer = 0 \ if tmp$ = "Y" whxfer = 1
		else
			ns = GetParameter$("NSTKS")
			INZero = GetParameter$("ALLPRD")
			tmp$ = GetParameter$("WHXFER")
			if tmp$="1" OR Ucase$(TMP$)="Y" let whxfer=1 else let whxfer=0
		end if
		RETVAL$ = " ",RETVAL$
		RETVAL$[1,12] = R1$;RETVAL$[13,24] = R2$ ! start/end prod
		RETVAL$[25,30] = R1[0] Using "######" ! start vendor
		RETVAL$[31,36] = R1[1] Using "######" ! end
		RETVAL$[37,39] = R1[2] Using "###"	! start buyer
		RETVAL$[40,42] = R1[3] Using "###"	! end
		RETVAL$[43,44] = W1 Using "##"		! whse
		RETVAL$[45,48] = R1[5] Using "####"	! ??? (in 365 but never used/referenced)
		RETVAL$[49,49] = NS Using "#"			! NSTK Y/N 1/0
		RETVAL$[50,50] = INZERO Using "#"		! incl zero 1/0
		RetVal$[51,51] = Whxfer using "#"   ! include surplus xfer from whse
		If Action2$="SVDFLTA" Or Action2$="SVDFLTU" ! save defaults  docs=APOS-SubmitDefaultsAll.doc
			Let URECFLAG = 0 
			If Action2$="SVDFLTU" Let URECFLAG = 1                ! doc=APOS-SubmitDefaultsUser.doc
			Call "Progdfltw","365","",77,RETVAL$,URECFLAG
		Endif
		If Action2$="CLEAR" ! clear workfile         doc=APOS-SubmitClear.doc
			Gosub L_8500
		Endif
		If Action2$="LOAD" ! load workfile & LINK	doc=APOS-SubmitLoad.doc
			Gosub L_2400 ! load
			if returnstatus=0 goto Endof365 ! failed
			GOSUB L_10000 ! link it now
		Endif
		! end of send selections
		
End Select
	ENDOF365: ! FINished
	! status section
		call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
		call AddToStr(e$,rstr$,WebStr$)
		call SetOutPut(e$,rstr$)
		if returnstatus=1
			call ERPCronSuccess()
		end if
End ! the whole program

L_2400: Rem BEGIN SCAN
Gosub GETOVERFLOWS
Gosub CHEK4PREV \ Return
! Print @0,23;"LOADING ENTRIES, PLEASE WAIT. . ";'CL'; \ Signal 3,0
A2[2] = 0;NUMREC = 0;FIRSTPASS = 1
F9[1] = 9
PASS_LOOP: K6$ = " ",K6$;K6$[1,2] = W1 Using "##";K6$[3,8] = R1[0] Using "######";K6$[9,20] = R1$[1,12]
If Not(FIRSTPASS) Let K6$[3,8] = 0 Using "######"
Search #5,2,3;K6$,R[5],E \ If Not(E) Goto L_2425
L_2420: Search #5,3,3;K6$,R[5],E \ If E Goto L_2800
L_2425: If K6$[9,20] > R2$[1,12]
  If FIRSTPASS And R1[0] <> 0
    FIRSTPASS = 0
    Goto PASS_LOOP
  Else 
    Goto L_2800
  End If 
End If 
X2 = K6$[3,8]
If FIRSTPASS
  If X2 > R1[1]
    If R1[0] <> 0
      FIRSTPASS = 0
      Goto PASS_LOOP
    Else 
      Goto L_2800
    End If 
  End If 
Else 
  If X2
    Goto L_2800
  End If 
End If 
X2 = K6$[1,2] \ If X2 > W1
  If FIRSTPASS And R1[0] <> 0
    FIRSTPASS = 0
    Goto PASS_LOOP
  Else 
    Goto L_2800
  End If 
End If 
Mat Read #5,R[5],32;PW_W1;
Mat Read #5,R[5],38;W2;
Mat Read #5,R[5],78;W3;
Mat Read #5,R[5],228;W5;
Mat Read #5,R[5],420;W0;
Mat Read #5,R[5],428;WH7;
Mat Read #5,R[5],540;WH9;
Mat Read #5,R[5],696;W7;
Mat Read #5,R[5],800;WHMISC;
Mat Read #5,R[5],846;WHMISC2;
Gosub L_3900 ! product group
If PARM[2] = 0 Or PARM[3] = 0 Goto L_2420
NUMREC = NUMREC + 1
! If Not(Fra(NUMREC / 500)) Print @35,23;"PROCESSED ";NUMREC;"  ";K6$[9,20];
K3$[1,12] = K6$[9,20]
Search #3,2,1;K3$,R[3],E \ If E = 1 Goto L_2420
If E error 11000
Gosub L_3500 ! read prod
If W0[0] = 1 Goto L_2420
If P1$[139,139] = "M" Goto L_2420
If P9$[33,33] = "Y" If W2[3] Let B1[24] = W2[3]
If B1[24] > R1[1] Goto L_2420
If B1[24] < R1[0] Or B1[24] > R1[1] Or PW_W1[2] < R1[2] Or PW_W1[2] > R1[3] Goto L_2420
Gosub CHKVEND \ Goto L_2420
if p61$[111,111]="Y" ! using cpi
	let cprod$=P1$[140,151]
	call cpionhold(e$,intco,cpiflag,CProd$,CustNo,CustName$)
	if cpiflag goto L_2420 ! on hold - NO LOAD
Endif
A$ = " ",A$
For X = 0 To 5
  A1[X] = 0
  If X < 3 Let A2[X] = 0
Next X
Gosub L_4500
Gosub L_4700
Gosub GETOFAVL
W3[0] = W3[0] + OVERFLOWAVL
If W0[0] = 2 And (QTYBO <= 0 And W3[2] <= 0) Goto L_2420
If W0[0] = 2 And (QTYBO + W3[2] <= W3[0] + W3[1]) Goto L_2420
Gosub L_6400
MODE = 0
If W7[12] <> 6 If ((W3[0] - W3[2] - QTYBO) + (W3[1] + QTYTR)) >= W3[5] Let MODE = 5
If W7[12] = 6 And ((W3[0] - W3[2] - QTYBO) + (W3[1] + QTYTR)) >= W3[4] Let MODE = 5
Gosub L_6500
QTYTMP = W3[0] - W3[2] - QTYBO + W3[1] + QTYTR
If QTYTMP < 0 And W3[11] < Abs(QTYTMP) ! need more then order method calc
  W3[11] = W3[11] + Abs(QTYTMP)
End If 
If W3[11] <= 0 Let MODE = 5
DAYSUPPLY = 0
If MODE = 5 ! "calc days supply on hand over line/min point
  If DEMNDDAY ! "only if they got demand
    If W7[12] <> 6 ! Use LinePoint
      DAYSUPPLY = Int(((QTYTMP - W3[5]) / DEMNDDAY) + .99)
      If W3[5] = 0 And W3[6] = 0 Let DAYSUPPLY = 9999
    End If 
    If W7[12] = 6 ! "Use Min/Max
      DAYSUPPLY = Int(((QTYTMP - W3[3]) / DEMNDDAY) + .99)
      If W3[3] = 0 And W3[4] = 0 Let DAYSUPPLY = 9999
    End If 
  Else 
    DAYSUPPLY = 9999
  End If 
End If 
If DAYSUPPLY < 0 Let DAYSUPPLY = 0
If DAYSUPPLY = 9999 And INZERO Let DAYSUPPLY = 998
If DAYSUPPLY > 999 And DAYSUPPLY <> 9999 Let DAYSUPPLY = 999
If DAYSUPPLY > 999 Goto L_2420
K2$ = " ",K2$;A4[0] = PW_W1[2];A4[1] = DAYSUPPLY
Mat Read #3,R[3],554;PFU2;
K2$[1,2] = W1 Using "##";K2$[3,8] = B1[24] Using "######"
K2$[9,12] = A4[0] Using "####"
K2$[13,13] = MODE Using "#"
K2$[14,16] = A4[1] Using "###";K2$[17] = K3$
Search #2,2,1;K2$,R9,E \ If E Goto L_2590
Search #2,5,1;K2$,R9,E \ If E error 11000
E = 3 \ Search #2,1,0;J$,R9,E \ If E error 11000
L_2590: E = 2 \ Search #2,1,0;K2$,R[2],E \ If E error 11000
If Not(R[2]) Goto L_2590
Search #2,4,1;K2$,R[2],E \ If E error 11000
A$ = K2$[1,8] + K2$[17]
A1[0] = R[3];A1[1] = W3[5];A1[2] = W3[6];A1[3] = W3[11];A1[4] = QTYBO
A1[5] = QTYTR;A2[0] = W7[12];A3[0] = 0;A3[1] = 0
If W7[12] = 6 Let A1[1] = W3[4];A1[2] = W3[3]
A3[3] = A1[3];A3[4] = A2[1]
clear a5[]
if whxfer GOSUB L_11000 ! DO whse xfer if user wants it - changes A1[3]
Mat Write #2,R[2];A$
Mat Write #2,R[2],20;A1
Mat Write #2,R[2],56;A2;
Mat Write #2,R[2],62;A3;
Mat Write #2,R[2],92;A4;
Mat Write #2,R[2],100;POWOF;
Mat Write #2,R[2],110;POWOFA;
mat write #2,r[2],140;a5;
Goto L_2420
L_2800: Rem ALL PRODUCTS SCANNED
Gosub L_6000
!Print "   COMPLETE ";'RB CL'; \ Signal 3,20
Return ! Goto L_2020

L_3500: Rem READ SPROD
Mat Read #3,R[3],0;P1$;
Mat Read #3,R[3],156;B1;
Mat Read #3,R[3],256;A;
Mat Read #3,R[3],460;P2;
Mat Read #3,R[3],894;PR_C4;
Mat Read #5,R[5],428;WH7;
Mat Read #3,R[3],512;PFU1;
Mat Read #3,R[3],554;PFU2;
Return 

L_3900: Rem CHECK PRODUCT GROUP
PARM[0] = -1
PARM[1] = WHMISC2[0]
Call ProdGroup(e$,intco,Parm[])
Return 
L_4500: Rem FIND QTY B/O
QTYBO = 0
K16$ = " ",K16$
K16$[1,12] = K3$[1,12] \ K16$[13,14] = W1 Using "##"
L_4550: Search #4,3,4;K16$,R16,E \ If E > 2 error 11000
If E Goto L_4630
If K16$[1,12] <> K3$[1,12] Goto L_4630
X2 = K16$[13,14] \ If X2 <> W1 Goto L_4630
Mat Read #4,R16,82;PLP3;
QTYBO = QTYBO + PLP3[4]
Goto L_4550
L_4630: Return 
GETOFAVL: Rem GET AVAL IN OVERFLOW WHSE
For OFW = 0 To 4
  POWOF[OFW] = 0
  POWOFA[OFW] = 0
Next OFW
OVERFLOWAVL = 0
OVERFLOWCT = 0
CUROFWH = 0
If OVERFLOW = 0 Return 
K16$ = " ",K16$
K16$[1,12] = K3$[1,12]
SCANPRDLOT: Search #4,3,4;K16$,R16,E \ If E > 2 error 11000
If E Goto EXPRODLOT
If K16$[1,12] <> K3$[1,12] Goto EXPRODLOT
X2 = K16$[13,14]
If CUROFWH <> X2
  For OFW = 0 To 4
    If X2 = WHOF[OFW]
      CUROFWH = X2
      POWOF[OVERFLOWCT] = X2
      Gosub ACCUMSTOCK
      OVERFLOWCT = OVERFLOWCT + 1
    End If 
  Next OFW
  Goto SCANPRDLOT
End If 
If CUROFWH = X2 ! still in the same whse
  Gosub ACCUMSTOCK
End If 
Goto SCANPRDLOT
ACCUMSTOCK: Rem include stock from this whse
Mat Read #4,R16,82;PLP3;
OVERFLOWAVL = OVERFLOWAVL + (PLP3[0] - PLP3[1]) - PLP3[3]
POWOFA[OVERFLOWCT] = (PLP3[0] - PLP3[1]) - PLP3[3]
Return 
EXPRODLOT: Return 
L_4700: Rem on transfer
if custom_customer$="ACTION" goto l_4795:
K10$ = " ",K10$ \ QTYTR = 0
K10$[1,12] = K3$[1,12]
L_4715: Search #10,3,1;K10$,R[10],E \ If E = 2 Goto L_4795
If E error 11000
If K10$[1,12] <> K3$[1,12] Goto L_4795
Mat Read #10,R[10],36;OL1;
If OL1[2] <> W1 Goto L_4715
If OL1[1] <> 2 Goto L_4715
Mat Read #10,R[10],60;OL3; \ If Not(OL3[4]) Goto L_4715
Mat Read #10,R[10],44;OL2;
K8$ = " ",K8$ \ K8$[1,6] = OL2[2] Using "######"
K8$[7,12] = OL2[0] Using "######"
Search #8,2,2;K8$,R[8],E \ If E Goto L_4715
Mat Read #8,R[8],104;H5; \ If H5[7] <> 16 Goto L_4715
QTYTR = QTYTR + OL3[4]
Goto L_4715
L_4795: Rem
K12$ = " ",K12$ \ K12$[1,12] = K3$[1,12]
L_4810: Search #12,3,2;K12$,R[12],E \ If E = 2 Goto L_4895
If E error 11000
If K12$[1,12] <> K3$[1,12] Goto L_4895
Mat Read #12,R[12],0;TRL1;
If TRL1[0] = 2 Goto L_4810
If TRL1[7] <> 0 Goto L_4810
Mat Read #12,R[12],22;TRL3;
Mat Read #11,TRL3[1],0;TR1;
If COMP <> TR1[4] Goto L_4810
If W1 <> TR1[5] Goto L_4810
If TR1[1] <> 2 Goto L_4810
QTYTR = QTYTR + TRL3[3]
Goto L_4810
L_4895: Return 

L_6000: Rem BEGIN SCAN OF NON STOCK SALES ORDERS
If Not(NS) Return 
K6$ = " ",K6$
L_6015: Search #6,3,1;K6$,R6,E \ If E > 2 error 11000
If E Return 
Mat Read #6,R6,0;PDL7;
Mat Read #6,R6,120;HA3;
If Not(PDL7[2]) Goto L_6015
If PDL7[2] < 0 Goto L_6015
Mat Read #7,PDL7[2],0;OLL2;
Mat Read #7,PDL7[2],16;L4;
Mat Read #7,PDL7[2],168;L7;
Mat Read #7,PDL7[2],140;OLL2$;
Mat Read #7,PDL7[2],8;OLL3;
Mat Read #7,PDL7[2],256;OLS2;
Mat Read #7,PDL7[2],260;OLS3;
If OLL2[0] = 12 Goto L_6015
If PDL7[0] <> OLL2[1] Goto L_6015
If L4[2] Goto L_6015
If OLS2[0] = 3 Goto L_6015
If Not(L4[3]) Or L4[3] <> W1 Goto L_6015
Gosub L_6200 \ If Not(PASS) Goto L_6015
X3 = L7[2] - L7[0]
If OLS3[14] < R1[0] Or OLS3[14] > R1[1] Goto L_6015
If HA3[1] >= R1[2] And HA3[1] <= R1[3] Goto L_6100
Goto L_6015
L_6100: A$ = " ",A$
For X = 0 To 5
  A1[X] = 0
  If X < 3 Let A2[X] = 0
Next X
MODE = 2
A4[0] = HA3[1];A4[1] = 0;A2[2] = 1
K2$ = W1 Using "##";K2$[3] = OLS3[14] Using "######"
K2$[9,12] = A4[0] Using "####"
K2$[13,13] = MODE Using "#";K2$[14,16] = "   ";K2$[17] = OLL2$
Search #2,2,1;K2$,R9,E \ If E > 1 error 11000
If E Goto L_6150
Search #2,5,1;K2$,R9,E \ If E error 11000
E = 3 \ Search #2,1,0;J$,R9,E \ If E error 11000
L_6150: E = 2 \ Search #2,1,0;J$,R[2],E \ If E error 11000
Search #2,4,1;K2$,R[2],E \ If E error 11000
A$ = K2$[1,8] + K2$[17]
A1[0] = PDL7[2];A1[1] = 0;A1[2] = 0;A1[3] = 0;A2[1] = 0;A2[2] = 1
X3 = L7[2] - L7[0]
A1[3] = X3 \ If A1[3] < 0 Let A1[3] = 0
A3[0] = 0;A3[1] = 0
A3[3] = A1[3];A3[4] = A2[1]
Mat Write #2,R[2];A$
Mat Write #2,R[2],20;A1
Mat Write #2,R[2],56;A2;
Mat Write #2,R[2],62;A3;
Mat Write #2,R[2],92;A4;
Mat Write #2,R[2],100;POWOF;
Mat Write #2,R[2],110;POWOFA;
Goto L_6015
L_6200: Rem =================== check nonstock header for order type
PASS = 0
K8$ = " ",K8$;K8$[3,8] = K6$[1,6]
For ST = 1 To 7
  K8$[1,2] = ST Using "##"
  Search #8,2,1;K8$,R[8],E \ If E > 2 error 11000
  If Not(E) Goto L_6240
Next ST
pass=1 ! gone thru all stat
Return 
L_6240: Mat Read #8,R[8],104;H5;
If H5[7] <> 2 Let PASS = 1
Return 
L_6400: Rem "======================================== ORDER POINT AND LINE POINT
COST = 0 \ A2[1] = 0
DEMNDDAY = W3[9] / BDAYS[0]
If DEMNDDAY < 0 Let DEMNDDAY = 0
If Not(W2[0]) Let W2[0] = B1[0]
If W2[0] < 0 Let W2[0] = 0
W3[7] = (W3[9] * W2[0]) * (W2[5] / 100)
If W3[7] And W3[7] < 1 Let W3[7] = 1
W3[6] = (W3[9] * W2[0]) + ((W3[9] * W2[0]) * (W2[5] / 100))
If Fra(W3[6]) * 10 >= 1 Let W3[6] = Int(W3[6]) + 1
If W2[1] Let W3[5] = W3[6] + (W3[9] * (W2[1]))
If Fra(W3[5]) * 10 >= 1 Let W3[5] = Int(W3[5]) + 1
If Not(W2[1]) Let W3[5] = W3[6]
W3[6] = Int(W3[6])
W3[5] = Int(W3[5])
If Not(W3[13]) Or W3[13] > 1 Let W3[13] = .35
L_6460: If P9$[32,32] = "Y"
  If W3[16] Let COST = W3[16] Else Let COST = W3[15]
End If 
If P9$[32,32] <> "Y" Or Not(COST)
  If B1[10] Let COST = B1[10] Else Let COST = B1[21]
End If 
If COST < 0 Let COST = 0
Return 
L_6500: Rem ADD CALCULATION SOURCE DD 04/12/93
If W0[0] = 2
  W3[11] = - (W3[0] + W3[1] - W3[2] - QTYBO) + QTYTR
  Gosub L_6900
  If W3[11] < 0 Let W3[11] = 0
  Goto L_6535
End If 
If W0[1] Let W7[12] = 3
If Not(W7[12]) Let W7[12] = 1
If W7[12] = 1 Gosub L_6600
If W7[12] = 2 Gosub L_6700
If W7[12] = 3 Gosub L_6600
If W7[12] = 5 Gosub L_6845
If W7[12] = 6 Gosub L_6850
Gosub L_6900
L_6535: Return 
L_6600: W3[11] = 0
If W3[9] > 0 If (W3[13] * COST) <> 0 Let W3[11] = FNR(Sqr((24 * FIXPO * W3[9]) / (W3[13] * COST))) \ W3[10] = W3[11]
If W7[6] > 0 And W7[6] <= 3
  If ((W3[0] - W3[2] - QTYBO) + (W3[1] + QTYTR)) < W3[6]
    W3[11] = W3[11] + W3[6] - ((W3[0] - W3[2] - QTYBO) + (W3[1] + QTYTR))
    If (W3[5] - W3[6]) > 0 Let W3[11] = W3[11] + ((W3[5] - W3[6]) / 2)
    A2[1] = 7
    Goto L_6624
  End If 
End If 
If W3[11] < (W3[9] * .25) Let W3[11] = W3[9] * .25;A2[1] = 2
L_6624: If W3[11] > (W3[9] * 12) Let W3[11] = W3[9] * 12;A2[1] = 1
If W3[11] < (W2[1] * W3[9])
  W3[11] = (W2[1] * W3[9]) \ A2[1] = 4
End If 
If (PR_C4[9]) <> 0 And (W3[11] > (PR_C4[9] * W3[9]))
  W3[11] = (PR_C4[9] * W3[9]) \ A2[1] = 5
End If 
Return 
L_6700: Rem "========================== order qty using INV CLASS (#2)
If W7[6] = 13 Let W3[11] = 0 \ Goto L_6730
W3[11] = W3[9] * W7[6]
L_6730: Return 
L_6800: Rem "========================== order qty using SEASONAL (#3)
Goto L_6600
X7 = ARMONTH + 1;X2 = 1;W3[11] = 0;A2[1] = 3
L_6815: If X7 > 12 Let X7 = 1
If X2 > 3 Goto L_6840
If WH9[X7] Let W3[11] = W3[11] + WH9[X7] Else Let W3[11] = W3[11] + W5[X7]
X7 = X7 + 1;X2 = X2 + 1
W3[11] = W3[11] + (W3[11] * WH[7] / 100)
Goto L_6815
L_6840: W3[11] = W3[11] + (W3[11] * WH7[1] / 100)
Return 
L_6845: Rem "============================order qty using ARBITRARY (#5)
If W3[3] < (W3[0] + W3[1] - W3[2] - QTYBO) + QTYTR Let W3[11] = 0
Return 
L_6850: Rem "========================== order qty using MIN/MAX (#6)
If W3[3] < (W3[0] + W3[1] - W3[2] - QTYBO) + QTYTR Let W3[11] = 0 \ Goto L_6875
W3[11] = W3[4] - ((W3[0] + W3[1] - W3[2] - QTYBO) + QTYTR)
L_6875: If W3[11] < 0 Let W3[11] = 0
L_6880: Return 
L_6900: Rem ROUND UP TO QTY IN PURCHASING UM
For UNT = 1 To 7
  If PFU1[20] And PFU1[UNT] = PFU1[20] Goto L_6925
Next UNT
L_6910: Rem "only to Purchasing Unit
For UNT = 1 To 7
  If PFU1[UNT] = PFU1[10] Goto L_6925
Next UNT
FACTOR = 1 \ Goto L_6935
L_6925: If PFU1[UNT] < 0 Let FACTOR = 1 \ Goto L_6935
FACTOR = PFU2[UNT - 1] \ If FACTOR <= 0 Let FACTOR = 1
L_6935: If Fra(W3[11] / FACTOR) ! "if fraction - round up " >=.5
  W3[11] = Int(1 + (W3[11] / FACTOR)) * FACTOR
End If 
Return 
CHKVEND: Rem "Vendtag
V1$ = " ",V1$;M1[15] = 1
V1$ = B1[24] Using "######"
Search #9,2,1;V1$,R9,E \ If E > 1 error 11000
If Not(E)
  Mat Read #9,R9,206;M1;
End If 
If M1[15] Return 1
Return 

L_8000: R1$ = " ",R1$
R2$ = "z",R2$
R1[0] = 1 \ R1[1] = 999999
R1[2] = 0 \ R1[3] = 999
W1 = 1 \ R1[5] = 0
NS = 0;INZERO = 0;whxfer=0
Call "ProgDflt","365","",77,RETVAL$
If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
  RETVAL$ = " ",RETVAL$
  RETVAL$[1,12] = R1$;RETVAL$[13,24] = R2$ ! start/end prod
  RETVAL$[25,30] = R1[0] Using "######" ! start vendor
  RETVAL$[31,36] = R1[1] Using "######" ! end
  RETVAL$[37,39] = R1[2] Using "###"	! start buyer
  RETVAL$[40,42] = R1[3] Using "###"	! end
  RETVAL$[43,44] = W1 Using "##"		! whse
  RETVAL$[45,48] = R1[5] Using "####"	! ???
  RETVAL$[49,49] = NS Using "#"			! NSTK Y/N 1/0
  RETVAL$[50,50] = INZERO Using "#"		! incl zero 1/0
  retval$[51,51]=whxfer using "#" ! incl recmd xfer 1/0
End If 
R1$ = RETVAL$[1,12];R2$ = RETVAL$[13,24]
R1[0] = RETVAL$[25,30];R1[1] = RETVAL$[31,36]
R1[2] = RETVAL$[37,39];R1[3] = RETVAL$[40,42]
W1 = RETVAL$[43,44];R1[5] = RETVAL$[45,48]
NS = RETVAL$[49,49];INZERO = RETVAL$[50,50]
whxfer=retval$[51,51]
IF W1<1 OR W1>99 OR FRA(W1) LET W1=1
Return 
L_8500: Rem CLEAR
L_8510: !Print @0,21;'CE';"THIS WILL CLEAR ALL ENTRIES FOR WAREHOUSE";'CL';W1;
!Print Using "######";@0,22;"FOR VENDORS ";R1[0];" TO ";R1[1];
!Print Using "###";"  BUYERS ";R1[2];" TO ";R1[3];
!Print @0,23;"DO YOU WANT TO CLEAR THE WORK FILE AND RESTART?  (Y/N) ";'CL';
!Input Len 16384 + 1;""U5$ \ Call String(1,U5$)
!Print @0,22;'CE'; \ If U5$ = "N" Goto L_2020
!If U5$ <> "Y" Print 'RB'; \ Goto L_8510
NUMREC = 0 !\ Print @0,21;'CE';
!Print @0,23;"CLEARING WORK FILE, PLEASE WAIT. . . ";'CL'; \ Signal 3,0
K2$ = " ",K2$;K2$[1,2] = W1 Using "##";K2$[3,8] = R1[0] Using "######"
L_8580: Search #2,3,1;K2$,R[2],E \ If E = 2 Goto L_8670
If E error 11000
X2 = K2$[1,2] \ If X2 > W1 Goto L_8670
X2 = K2$[3,8] \ If X2 < R1[0] Goto L_8580
X2 = K2$[3,8] \ If X2 > R1[1] Goto L_8670
X2 = K2$[9,12] \ If X2 < R1[2] Or X2 > R1[3] Goto L_8580
If K2$[17,28] < R1$[1,12] Goto L_8580
If K2$[17,28] > R2$[1,12] Goto L_8580
!If K2$[13,13] = "@" Print @0,23;'RB';"PO HEADER MAY EXIST FOR VENDOR ";K2$[3,8];". Press <CR> TO CONTINUE"; \ Input Len 16384 + 1;""U5$
!Print @0,23;"CLEARING WORK FILE, PLEASE WAIT. . . ";'CL'; \ Signal 3,0
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 500)) Print @40,23;"CLEARED ";NUMREC;
Search #2,5,1;K2$,R[2],E \ If E error 11000
E = 3 \ Search #2,1,0;K2$,R[2],E \ If E error 11000
Goto L_8580
L_8670: Return !Print "   COMPLETE !";'CL RB'; \ Signal 3,20 \ Goto L_2020
CHEK4PREV: Rem "since new key scheme - need check to prevent dupe prods
K1$ = " ",K1$
K1$ = W1 Using "##"
K1$[3] = R1[0] Using "######"
K1$[9] = R1[2] Using "####"
CHEKITLOOP: Rem "
Search #2,3,1;K1$,R[2],E \ If E = 2 Return 1
X2 = K1$[1,2] \ If X2 <> W1 Return 1
X2 = K1$[3,8]
If X2 < R1[0] Or X2 > R1[1] Goto CHEKITLOOP
X2 = K1$[9,12]
If X2 < R1[2] Or X2 > R1[3] Goto CHEKITLOOP
PREVENT: Rem "got one
!Print @0,22;'RB CE';"There are already entries loaded for that range!"
!Print @0,23;"You must CLEAR previous entries first! PRESS <CR>  ";
!Input Len 16384 + 1;""X$
!Print @0,22;'CE';
!If X$ = "BYPASS" Return 1
ReturnStatus=0
Message$="ALREADY ENTRIES IN RANGE! CLEAR PREVIOUS"
Return 
GETOVERFLOWS: Rem
Mat Read #13,(WH - 1),2948;WHOF;
OVERFLOW = 0
For OFW = 0 To 4
  If WHOF[OFW] Let OVERFLOW = 1
Next OFW
Return 

CNVTU[0] = 0
CNVTU[1] = PFU1[10]
CNVTU[2] = 1
CNVTA = A1[3]
Gosub L_8790
DA1 = AMOUNT
Return 
L_8790: Rem UNIT CONVERSION RETURNS AMOUNT
Gosub L_20000
Return 
OUTEND: Rem OUTEND
Return

L_10000: Rem NEXT PART
If Not(F9[1]) Goto OUTEND
!Print @0,23;"LINKING WORK FILE, DO NOT DISTURB . . . ";'CL'; \ Signal 3,0
K2$ = " ",K2$;K2$ = W1 Using "##" \ V9 = -1
L_10040: Search #2,3,1;K2$,R2,E \ If E Goto L_10110
X0 = K2$[1,2] \ If X0 <> W1 Goto L_10110
If K2$[13,13] = "@" Goto L_10040
X2 = K2$[3,8] \ If X2 = V9 Goto L_10090
A3[0] = 0 \ A3[1] = 0 \ V9 = X2
L_10090: Write #2,R2,68;A3[1]; \ If A3[1] Write #2,A3[1],62;R2;
A3[1] = R2 \ Goto L_10040
L_10110: Rem DONE
!Print @0,23;"LINKING COMPLETE ! ";'CL RB'; \ Signal 3,20
Goto OUTEND
!L_10300: ! CHECK FOR VALID VENDOR                 
!FOR CT=0 TO CHF(14)-1                             
!	READ #14,CT,0;VENDSEL[0];                     
!		IF VENDSEL[0]=VENDSEL[1] RETURN +1 ! "good    
!	NEXT CT                                           
!RETURN  ! "not valid   

L_11000: REM BEGIN SCAN for whses
FOR X2=0 TO ST_CONS-1
	LET A5[X2]=0
NEXT X2
IF NOT(A1[3]) RETURN ! DO NOT LOAD SURPLUS IF NO STOCK IS NEEDED
READ #13,W1-1,128;CUR_REGION; ! region we're working on now
LET TR5$=" ",TR5$;TR5$[1,12]=K3$[1,12]
L_11060: SEARCH #5,3,1;TR5$,TR5,E
IF E GOTO L_11270:
IF TR5$[1,12]<>K3$[1,12] GOTO L_11270:
LET X2=TR5$[13,14] \ IF X2=W1 GOTO L_11060:
IF X2>=ST_CONS GOTO L_11270:
MAT  READ #5,TR5,78;TR_W3;
MAT  READ #5,TR5,696;TR_W7;
READ #13,X2-1,128;REGION; ! region of the whse
IF REGION ! >0 and region<100 ! only allow whses in region
	IF CUR_REGION ! >0 and cur_region<100
		IF CUR_REGION<>REGION GOTO L_11060:
	!Else ! cur_region none or no good
	!	goto L_11060
	Endif
!Else ! no good or none
!	goto L_11060
Endif
IF X2>=ST_CONS GOTO L_11270: ! done
LET SURPLUS=0
IF TR_W7[12]=6
	LET SURPLUS=(TR_W3[0]-TR_W3[2]+TR_w3[1])-TR_W3[4] ! per dd include on po
ELSE 
	LET SURPLUS=(TR_W3[0]-TR_W3[2]+TR_w3[1])-TR_W3[5] ! use Linepoint (TR_W3[9]*6) !not usages
  	IF TR_W3[5]<0 LET SURPLUS=(TR_W3[0]-TR_W3[2]+TR_w3[1]) ! per dd/cjr/ml include on po
ENDIF 
IF SURPLUS<0 LET SURPLUS=0
IF NOT(SURPLUS) GOTO L_11060:
LET CNVTU[0]=0
LET CNVTU[1]=PFU1[10]
LET CNVTU[2]=1
LET CNVTA=SURPLUS \ GOSUB L_20000:
LET DSP_A5=AMOUNT
IF NOT(FRA(DSP_A5)) GOTO L_11220:
IF FRA(DSP_A5) LET DSP_A5=DSP_A5-FRA(DSP_A5)
LET CNVTU[0]=PFU1[10];CNVTU[1]=0;CNVTA=DSP_A5 \ GOSUB L_20000: \ LET SURPLUS=AMOUNT
L_11220: IF SURPLUS>A1[3] LET SURPLUS=A1[3]
LET A1[3]=A1[3]-SURPLUS
LET A5[X2]=SURPLUS
IF NOT(A1[3]) GOTO L_11270: ! no more to order - done
GOTO L_11060:
L_11270: IF A1[3]>0 and W7[12]=1 ! calcsource=1 EOQ
	LET W3[11]=A1[3]
	GOSUB L_12000:
	LET A1[3]=W3[11]
ENDIF 
RETURN 
L_12000: REM ROUND TO SKID USING HIGH/TIE FROM PRODWHSE FILE
IF P61$[10,10]<>"Y" OR W3[11]<=0 RETURN ! no eoqqty
FOR X=0 TO 7
	IF PFU1[8]=PFU1[X] GOTO L_12060:
NEXT X
LET X=0
L_12060: IF X LET STOCK_FACTOR=PFU2[X-1] ELSE  LET STOCK_FACTOR=1
LET SKID_FACTOR=((WHMISC[4]*WHMISC[5])*STOCK_FACTOR)
IF NOT(SKID_FACTOR) RETURN 
IF FRA(W3[11]/SKID_FACTOR)<.5
	IF P61$[10,10]="R" AND INT(W3[11]/SKID_FACTOR)>0
		LET W3[11]=INT(W3[11]/SKID_FACTOR)*SKID_FACTOR
		LET A2[1]=9
	ENDIF 
	IF P61$[10,10]="U"
		LET W3[11]=INT(1+(W3[11]/SKID_FACTOR))*SKID_FACTOR
		LET A2[1]=10
	ENDIF 
ENDIF 
IF FRA(W3[11]/SKID_FACTOR)>=.5
	LET W3[11]=INT(1+(W3[11]/SKID_FACTOR))*SKID_FACTOR
	LET A2[1]=10
ENDIF 
RETURN 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ error 11000
AMOUNT = CNVTA
L_20160: Return 
A[6] = OLL6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1];PFU1[13] = UN[0]
PFU1[16] = EUN[0];PFU1[17] = EUN[0];PFU1[18] = UN[0]
PFU1[19] = UN[0]
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 

else ! main try
	include "src/callmainerrnet.inc"
end try
