! >>> Program 135v
!
! description Print the Future Demand File
! loadsave -w -n 100,10 -o prog/dxport/135v.dl4 src/135v.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem  UtFutDemd - create / edit Future Demand File
Rem  For Effective Inventory Management Changes
Rem  cct 135146 - 05/02/2000
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 26, 2003  10:10:11
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/ut/utfutdemd.src (univ2) [jcs] {36164}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,MiscStr,String,Time
!Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Dim J4$[60]
If Err 0 Gosub ERR_TRAP
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],Msg$[500],rstr$[2000] ! dx error handling variables
Dim tmp$[1200],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim K1$[60],K2$[60],K3$[60],KEYFUT$[50],K29$[60]
Dim PROD_A$[156],CUST_A$[142],PROD$[12],RSN$[30]
Dim UM$[4],NKF$[50],K9$[20],K4$[40],CONM$[30],STIME$[30]
Dim DATE$[8],SPROD$[12],EPROD$[12]
Dim 1%,WHSE,FLD,PFU1[20],UMNO,UMSEL,CNVTU[2],STATUS,V9[4]
Dim 1%,LOCKTIME,P1[1]
Dim 2%,B[24],FDATE,CUST,DT3[1],SCUST,ECUST
Dim 3%,FORECAST,A[33],PFU2[6],R[99],CNVTA,AMOUNT
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = "CNTRL" + Str$(COID)
! Ropen #1,J$
For J = 2 To 7
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #1,88,J1;J$[1,16];
  Ropen #J,J$
NXTFLE: Next J
Data "1792","1808","1744","1728","-1","-1"
J$ = "3/SFDFRCST" + Str$(COID)
ROpen #7,J$
Mat Read #1,3,0;CONM$;
Mat Read #1,0,100;DATE$;
YEAR_ = DATE$[7,8];MTH = DATE$[1,2]
If YEAR_ > 67 Let YEAR_ = YEAR_ + 1900
If YEAR_ < 68 Let YEAR_ = YEAR_ + 2000
MTH = MTH + 1 \ If MTH > 12 Let MTH = MTH - 12;YEAR_ = YEAR_ + 1
X$ = YEAR_ Using "####"
X$[5,6] = MTH Using "&&"
FDATE = X$
UMNO = 1;EXIST = 0
LOCKTIME = 100
returnstatus=0;message$=""
SCRPRT=0
Try
	J9 = Chf(0)
Else
	SCRPRT=1
End Try
J8=Scrprt ! uses J8
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"135v",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 

PRNTIT: Rem "Print the Sucker
!X1 = 915;STATUS = 0
!Call "MXPRSEL",X1,STATUS
CLIN = 90;MAXLIN = 60;V9[0] = 0

Clear SPROD$
SCUST = 0;ECUST = 999999
EPROD$ = "zzzzzzzzzzzz";PWHSE = 0
X$ = DATE$[7,8] + DATE$[1,2]
X2 = X$ \ Gosub YM2LONGYEAR
X$ = X2 Using "######";PDATE = X2
J$ = X$[5,6] + "/" + X$[1,4]

UMNo=1
SELPRNTRANGES: Rem "
!Print 'CS';@0,0;"EXTRAORDINARY FUTURE DEMAND"
!Print @0,2;" 1> Starting Product ";@25,2;SPROD$
!Print @0,3;"    Ending Product   ";@25,3;EPROD$
!Print Using "##";@0,4;" 2> Warehouse,  0: All";@25,4;PWHSE
!Print Using "######";@0,6;" 3> Starting Customer";@25,6;SCUST
!Print Using "######";@0,7;"    Ending Customer  ";@25,7;ECUST
!Print @0,9;" 4> Starting Time    ";@25,9;J$
FINALQ: Rem "Is this your final question?

ENT_SPROD: Rem"
!J0$ = "2 001225 2";J1$ = SPROD$
!J5$ = "Enter the Starting Product Code"
Call dxget("SPROD",J$)
SPROD$ = UCase$(J$)+B$
ENT_EPROD: Rem "
!J0$ = "2 001225 3";J1$ = EPROD$
!J5$ = "Enter the Ending Product Code"
call dxget("EPROD",J$)
EPROD$ = UCase$(J$)+B$
If SPROD$ > EPROD$
  Message$ = Message$+"ENDING PRODUCT MUST BE AFTER THE STARTING  "
  Returnstatus=1
End If 
ENT_PWHSE: Rem "
!J0$ = "3000 225 4";J1 = PWHSE
!J5$ = "Enter the Warehouse Desired,  0: ALL"
Call dxget("WHSE",tmp$)
J1=tmp$
if j1<0 or j1>99 or fra(j1)
	Message$=message$+"Invalid Warehouse  "
	Returnstatus=1
Endif
PWHSE = J1
ENT_SCUST: Rem "Start Customer
!J0$ = "3000 625 6";J1 = SCUST
!J5$ = "Enter the Starting Customer Number"
call dxget("BCUST",tmp$)
J1=tmp$
SCUST = J1
ENT_ECUST: Rem "Ending
!J0$ = "3000 625 7";J1 = ECUST
!J5$ = "Enter the Ending Customer Number"
Call dxget("ECUST",tmp$)
J1=tmp$
ECUST = J1
If SCUST > ECUST
  Message$ = Message$+"Ending Customer must be Greater than Starting  "
  Returnstatus=1
End If 
!Return 
ENT_PERIOD: Rem "Starting MM/YY
X$ = PDATE Using "&&&&&&"
J1$ = X$[5,6] + "/" + X$[1,4]
!J0$ = "2 00 725 9";J1$ = X$[5,6] + "/" + X$[1,4]
!J5$ = "Enter the Starting Month/Year, <CR>: what's shown"
Call dxget("PDATE",tmp$)
if Trim$(tmp$)="" let tmp$=j1$
J$=tmp$ ! uses j$
POS0 = 0 \ If J$[2,2] = "/" Let POS0 = 2
If J$[3,3] = "/" Let POS0 = 3
If POS0<1 ! Goto ENT_PERIOD
	Message$=Message$+"Invalid Date Format (MM/YYYY)  "
	Returnstatus=1
	goto startprint ! have to bypass rest!
Endif
MONTH_ = J$[1,POS0 - 1]
If MONTH_ < 1 Or MONTH_ > 12 ! Goto ENT_PERIOD
	Message$=message$+"Invalid Month (1-12)  "
	Returnstatus=1
Endif
YEAR_ = J$[POS0 + 1]
If YEAR_ < 1900
  If YEAR_ > 67 Let YEAR_ = YEAR_ + 1900
  If YEAR_ < 68 Let YEAR_ = YEAR_ + 2000
End If 
X$ = YEAR_ Using "&&&&";X$[5] = MONTH_ Using "&&"
PDATE = X$
Ent_UMNO: ! need um selection
Call dxget("UMNO",tmp$)
If tmp$="" let tmp$="1"
j1=tmp$
if j1<1 or j1>3 or fra(j1) let j1=1
STARTPRINT: Rem "and we're printing
if returnstatus=1
	e$=Message$
	goto err_msg
Endif
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
If J8
	tmp$="PRODID",FDEL$,"DESC1",FDEL$,"DESC2",FDEL$
	tmp$=tmp$,"CUSTID",FDEL$,"NAME",FDEL$,"DATE",FDEL$
	TMP$=TMP$,"WHSE",FDEL$,"FORECAST",FDEL$,"U/M",FDEL$,"REASON",FDEL$
	call addtostr(e$,rstr$,tmp$+rdel$)
Endif
KEYFUT$ = " ",KEYFUT$;PCTR = 0
KEYFUT$ = SPROD$
PRINTLOOP: Rem "
Search #7,3,1;KEYFUT$,R[7],E \ If E = 2 Goto PRINT_DONE
If E Gosub ERR_SEARCH
If KEYFUT$[1,12] > EPROD$ Goto PRINT_DONE
PROD$ = KEYFUT$[1,12]
Search #2,2,1;PROD$,R[2],E \ If E = 1 Goto PRINTLOOP
If E Gosub ERR_SEARCH
Gosub READ_PRODUCT
If UMNO = 1 Let UMSEL = PFU1[8]
If UMNO = 2 Let UMSEL = PFU1[9]
If UMNO = 3 Let UMSEL = PFU1[10]
UM$ = "Err "
If UMSEL = -1 Let UM$ = "CWT "
If UMSEL = -2 Let UM$ = "LOT "
If UMSEL = -3 Let UM$ = "LB  "
If UMSEL > 0 Read #5,UMSEL,10;UM$[1,4];
Gosub READIT
If CUST < SCUST Or CUST > ECUST Goto PRINTLOOP
If PWHSE And WHSE <> PWHSE Goto PRINTLOOP
If FDATE < PDATE Goto PRINTLOOP
K1$ = " ",K1$;K1$ = CUST Using "######"
If CUST <> 999999
  Search #3,2,1;K1$,R[3],E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Mat Read #3,R[3],30;CUST_A$;
  Else 
    CUST_A$ = " ",CUST_A$
    CUST_A$[31] = "CUSTOMER NOT FOUND!"
  End If 
Else 
  CUST_A$ = " ",CUST_A$
  CUST_A$[31] = "NO SPECIFIC CUSTOMER"
End If 
Gosub PRNT_HEADING
Gosub PRNT_DETAIL
PCTR = PCTR + 1
!If Not(SCRPRT)
!  If Not(Fra(PCTR / 100)) Print @35,22;"Records printed ";PCTR;'CL';
!End If 
Goto PRINTLOOP
PRNT_DETAIL: Rem "
If Not(ScrPrt)
	Print #0; Tab (1);PROD$; Tab 15;PROD_A$[9,38];
	Print #0; Using "######"; Tab 45;CUST;" ";CUST_A$[31,60];
	X$ = FDATE Using "######"
	Print #0; Tab 82;X$[5,6];"/";X$[1,4];
	Print #0; Using "##"; Tab 90;WHSE;
	Print #0; Using "---------#.##"; Tab 95;FORECAST;" ";UM$
	Print #0; Tab (15);PROD_A$[63,92]; Tab (90);RSN$
	Print #0;""
	CLIN = CLIN + 3
Else ! is xml
	tmp$=Prod$,fdel$,RTrim$(PROD_A$[9,38]),fdel$,RTrim$(PROD_A$[63,92]),fdel$
	tmp$=tmp$,Cust Using "######",fdel$
	tmp$=tmp$,RTrim$(CUST_A$[31,60]),fdel$
	X$ = FDATE Using "######"
	tmp$=tmp$,X$[5,6],"/",X$[1,4],fdel$
	tmp$=tmp$,Str$(Whse),fdel$
	tmp$=tmp$,LTrim$(FORECAST Using "---------#.##"),fdel$
	tmp$=tmp$,UM$,fdel$,RTrim$(RSN$),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
Endif
Return 
PRNT_HEADING: Rem "Report Header
If CLIN < MAXLIN Return
if ScrPrt Return
If V9[0]
  Print #0;"\14\";
End If 
V9[0] = V9[0] + 1
Print #0;""
Print #0; Tab 5;"DATE: ";DATE$;
Print #0; Tab (Int(65 - (Len(CONM$) / 2)));CONM$;
Print #0; Tab 120;"PAGE ";V9[0]
STIME$ = "" \ Call Time(STIME$)
Print #0;" -915- ";STIME$;
Print #0; Tab 51;"EXTRAORDINARY FUTURE DEMAND";
J$ = " ",J$
If UMNO = 1 Let J$ = "STOCKING U/M"
If UMNO = 2 Let J$ = "SELLING U/M"
If UMNO = 3 Let J$ = "PURCHASING U/M"
Print #0; Tab 85;J$;
J$ = " ",J$;J$ = PDATE Using "&&&&&&"
Print #0; Tab 102;"STARTING ";J$[5,6];"/";J$[1,4]
Print #0;""
Print #0; Tab 1;"PRODUCT CODE"; Tab 15;"DESCRIPTION";
Print #0; Tab 45;"CUST #  NAME";
Print #0; Tab 82;"MM/YYYY"; Tab 90;"WH";
Print #0; Tab 95;"FORECAST QTY   U/M"
Print #0; Tab 15;"DESCRIPTION 2"; Tab 90;"REASON"
Print #0;""
CLIN = 8
Return 
READ_PRODUCT: REM "Product Info
MAT  READ #2,R[2],0;PROD_A$;   
MAT  READ #2,R[2],156;B;       
MAT  READ #2,R[2],256;A;       
MAT  READ #2,R[2],512;PFU1;    
MAT  READ #2,R[2],554;PFU2;    
RETURN  
READIT: REM "Read File    
MAT  READ #7,R[7],0;PROD$;
READ #7,R[7],12;WHSE;     
READ #7,R[7],14;CUST;     
READ #7,R[7],18;FDATE;    
READ #7,R[7],22;FORECAST; 
READ #7,R[7],28;RSN$;     
GOSUB QFROMBASE:          
RETURN  
QFROMBASE: REM "From File to Display                   
LET CNVTU[0]=0;CNVTU[1]=UMSEL;CNVTU[2]=1;CNVTA=FORECAST
GOSUB CONVERT:                                         
LET FORECAST=AMOUNT                                    
RETURN                                                 
PRNT_SELECTIONS: Rem "Soon to be part of 'standards' to print on last page
if ScrPrt Return ! not for xml
CLIN = 90 \ Gosub PRNT_HEADING
Print #0;""
Print #0;"SELECTIONS MADE FOR THIS REPORT"
Print #0;""
Print #0;"1. Starting Product "; Tab 25;SPROD$
Print #0;"   Ending Product   "; Tab 25;EPROD$
Print #0;"2. Warehouse, 0=All"; Tab 25;PWHSE
Print #0;"3. Starting Customer"; Tab 25;SCUST
Print #0;"   Ending Customer  "; Tab 25;ECUST
J$ = PDATE Using "&&&&&&"
Print #0;"4. Starting Time    "; Tab 25;J$[5,6];"/";J$[1,4]
Print #0;"5. U/M  1: Stocking,  2: Sell,  3: Purchasing  ";UMNO
Return 
PRINT_DONE: Rem "
Gosub PRNT_SELECTIONS

KEYFUT$ = " ",KEYFUT$
NKF$ = " ",NKF$
EXIST = 0
Goto OUTEND ! UADDNEW
Rem {begin call.input.i}
ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!Call "Input",J1,J$,J0$,J1$,J4$,J5$
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.DL4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
OUTEND: Rem "outta here
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
Else
ReturnStatus=0 ! 0= ok in blockid, is =1 elsewhere
Message$="Complete - "+Str$(PCTR)+" Records printed"
 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
 call AddToStr(e$,rstr$,WebStr$)
 call SetOutPut(e$,rstr$)
 try Call dxclose() else rem
Endif
End 
 
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/135vse!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
  
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}