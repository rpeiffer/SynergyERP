! >>> Program 689H
!
! description Inventory Value by Vendor Code
!
! loadsave -w -n 100,10 -o prog/dxport/689h.dl4 src/689h.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 20, 2003  10:15:55
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/mx/mx689h.src (univ2) [jcs] {56160}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX689H - FILE VALUE VENDOR (SORTED)
Rem AUTHOR: DAVE  AUG 10, 1987
Rem LAST UPDATE:
!--- custom_customer$ --------------
! PCS jliu 2/25/03 cct165195 if the product's commodity code is "TIME", don't   
!    print the product info  
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim VendorID$[6],VendorName$[30]
!
Dim 3%,COST,UNIT,U5$[20],SUNIT$[4],CUNIT$[4],CUNIT,UNIT$[10],2%,C4[8]
Dim P1$[156],C1$[30],custom_customer$[30]
Dim P9$[50],PMASK$[12]
Dim 1%,Y7,Y8,Y9
Dim 2%,B1[24],A3,Q0[1],W2[3]
Dim 3%,A1[33],A2[7],W3[24],W5[12]
Dim 3%,PRPARC[2],PF_LOAD2,WHMISC[2]
Dim 1%,P1[1],3%,P3[3]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[60],J5$[10],J8$[8],K5$[60]
Dim D1$[10]
Dim 1%,F,X1,WHLM[1],LM[1],2%,X2,3%,J,X3,T9[20],TABS,INCNEG,ZEROVL
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Mat Read #1,19,50;P9$;
For J = 2 To 6
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","2400","2528","1728","1744"
Mat Read #1,0,100;J8$;
Read #1,3;J1$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(rtrim$(custom_customer$))
Read #1,0,120;Y7; \ Read #1,51,72;Y8;
Y9 = Y7 - Y8 \ If Y9 <= 0 Let Y9 = Y9 + 12
Y8 = Y9
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
! dx add xport reporting code
DXSetup:
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"689h",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("begvendor",tmp$) \ if tmp$="" let svend=0 else svend=tmp$ ! starting vendor
call dxget("endvendor",tmp$) \ if tmp$="" let evend=999999 else evend=tmp$ ! ending vendor
call dxget("whse",tmp$) \ if tmp$="" let WHSE=0 else WHSE=tmp$ ! warehouse
Call dxget("unit",tmp$) \ UnitType=tmp$ ! avg cost
call dxget("pamu",tmp$) \ if tmp$="" let PAMU=0 else PAMU=1 ! actual monthly usage
Call dxget("zerovl",tmp$) \ if tmp$="" let ZEROVL=0 else ZEROVL=99! include zero on hand
call dxget("incneg",tmp$) \ if tmp$="" let INCNEG=0 else INCNEG=99 ! include negative quantity
!  dx end
!
! vendor section
if svend<0 or svend>999999 let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if evend<svend or evend>999999 let e$="Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
K2$=svend using "######" \ K1$=K2$
K3$=evend using "######"
!
! warehouse
If WHSE<0 Or WHSE>99 let e$="Invalid  warehouse, must be between 0 and 99!" \ error 10000
if WHSE=0 let PAMU=0 ! all warehouses, no actual monthly usage
!
! average cost
U5$ = " ",U5$
If UnitType = 1 Let U5$ = "AVG. COST"
If UnitType = 2 Let U5$ = "BASE COST"
If UnitType = 3 Let U5$ = "WHSE COST "
If UnitType = 4 Let U5$ = "LAST COST"
If UnitType = 5 Read #1,18,220;D1$; \ U5$ = rtrim$(D1$[1,10])
If UnitType = 6 Read #1,18,230;D1$; \ U5$ = rtrim$(D1$[1,10])
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
! - Window On 
! - K2$ = " ",K2$;K3$ = "999999";UnitType = 1;WHSE = 0
! - SVEND = 0;EVEND = 999999
! - PAMU = 0;ZEROVL = 0;INCNEG = 0
! - Print 'CS';@0,0;"-MX689H-";@25,0;"INVENTORY VALUE IN VENDOR ORDER"
! - Print @0,2;" 1> ENTER STARTING VENDOR CODE, <CR>: first   ";K2$[1,6]
! - Print @0,3;"    ENTER ENDING VENDOR CODE,   <CR>: last    ";K3$[1,6]
! - Print @0,5;" 2> ENTER WAREHOUSE,  0: all   ";WHSE
! - Print @0,6;" 3> ENTER COST FOR REPORT:   ";"AVG. COST";
! - Print @0,8;" 4> PRINT ACTUAL MONTHLY USAGE(AMU) & (MOH)MONTHS ON HAND? (Y/N)  ";"N";
! - Print @0,9;" 5> INCLUDE PRODUCTS WITH ZERO ON HAND? (Y/<CR>)  ";"N"
! - Print @0,10;" 6> INCLUDE EXTENDED COSTS FOR PRODUCTS WITH NEGATIVE QUANTITY? (Y/<CR>) ";"N"
! - FINALQ: Rem "
! - Print @0,22;'CE';"ENTER  #:field to edit  R: reselect all  P: print  E: exit  ";
! - Input Len 16384 + 1;""J2$ \ Call String(1,J2$)
! - If J2$ = "E" Goto OUTEND
! - If J2$ = "P" Goto STARTPRNT
! - If J2$ = "R" Goto EDT_ALL
! - FLD = J2$ \ If FLD < 1 Or FLD > 6 Goto FINALQ
! - Gosub EDT_FLDS
! - Goto FINALQ
! - EDT_ALL: Rem "
! - For FLD = 1 To 6
! -   Gosub EDT_FLDS
! - Next FLD
! - Goto FINALQ
! - EDT_FLDS: Rem "
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On FLD Gosub L_900,EDT_WHSE,EDT_COST,L_1000,L_1060,PRNTNEG
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
! - L_900: Rem GET RANGES
! - Print @46,2;'CL';
! - Input Len 16384 + 6;""K2$
! - SVEND = K2$;K2$ = SVEND Using "######"
! - Print @46,2;'CL';K2$
! - Print @46,3;'CL';
! - Input Len 16384 + 6;""K3$
! - If K3$ = "" Let K3$ = "999999"
! - EVEND = K3$;K3$ = EVEND Using "######"
! - Print @46,3;'CL';K3$[1,6];
! - L_970: If K2$ <= K3$ Goto L_990
! - Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: K1$ = K2$ \ SVEND = K2$ \ EVEND = K3$
! - Return 
! - EDT_WHSE: Rem "
! - Print @30,5;'CL';
! - Input Len 16384 + 2;""J5$
! - WHSE = J5$
! - Print @30,5;'CL';WHSE;
! - Return 
! - EDT_COST: Rem "
! - Print @28,6;'CL';
! - Gosub L_10500
! - U5$ = " ",U5$
! - If UNIT = 1 Let U5$ = "AVG. COST "
! - If UNIT = 2 Let U5$ = "BASE COST"
! - If UNIT = 3 Let U5$ = "WHSE COST "
! - If UNIT = 4 Let U5$ = "LAST COST "
! - If UNIT = 5 Read #1,18,220;D1$; \ U5$[1,10] = D1$[1,10]
! - If UNIT = 6 Read #1,18,230;D1$; \ U5$[1,10] = D1$[1,10]
! - Print @28,6;'CL';U5$;
! - Return 
! - L_1000: Rem TYPE OF AMU
! - Print @66,8;'CL';
! - J5$ = ""
! - If WHSE
! -   Input Len 16384 + 1;""J5$ \ Call String(1,J5$)
! - End If 
! - If J5$ = "" Let J5$ = "N"
! - If J5$ <> "Y" If J5$ <> "N" Goto L_1000
! - Print @66,8;'CL';J5$;
! - PAMU = 0 \ If J5$ = "Y" Let PAMU = 1
! - Return 
! - L_1060: Rem " Zero on hands?
! - Print @49,9;'CL';
! - Input Len 16384 + 1;""J5$ \ Call String(1,J5$)
! - If J5$ = "" Let J5$ = "N"
! - If J5$ <> "Y" And J5$ <> "N" Goto L_1060
! - Print @49,9;'CL';J5$;
! - If J5$ = "Y" Let ZEROVL = 99 Else Let ZEROVL = 0
! - Return 
! - PRNTNEG: Rem "
! - Print @73,10;'CL';
! - Input Len 16384 + 1;""J2$ \ Call String(1,J2$)
! - If J2$ = "" Let J2$ = "N"
! - If J2$ <> "Y" And J2$ <> "N" Goto PRNTNEG
! - Print @73,10;'CL';J2$;
! - If J2$ = "Y" Let INCNEG = 99 Else Let INCNEG = 0
! - Return 
!
! *** Sort Section
! - STARTPRNT: Rem "
! - Window Off 
! - Print @0,21;" SORTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
K1$ = " ",K1$;PCTR = 0
L_1130: Search #9,3,1;K1$,V1,E
If E Goto L_1180
Search #9,5,1;K1$,V1,E
If E Let e$ = "syserrorfile 689h sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K1$ \error 10000
Goto L_1130
L_1180: Rem SORT
K1$ = " ",K1$
L_1200: Search #2,3,1;K1$,R1,E
If E Goto L_1900
Mat Read #2,R1,156;B1;
If WHSE
  K5$ = " ",K5$
  K5$[1,12] = K1$[1,12]
  K5$[13,14] = WHSE Using "##"
  Search #6,2,1;K5$,R5,E \ If E Goto L_1200
  Mat Read #6,R5,38;W2;
  If Not(W2[3]) Goto L_1230 Else Let B1[24] = W2[3]
End If 
L_1230: If B1[24] < SVEND Goto L_1200
If B1[24] > EVEND Goto L_1200
J4$ = " ",J4$ \ J4$ = B1[24] Using "######"
J4$[7] = K1$[1,12]
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 689c sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print @38,21;"RECORD";PCTR
Goto L_1200
!
! *** Process Section
L_1900: 
!
if J8 ! dx xml headings
  !
  tmp$="VENDOR CODE",fdel$,"VENDOR NAME",fdel$
  tmp$=tmp$,"ITEM CODE",fdel$,"DESCRIPTION",fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"MB",fdel$,"COMM",fdel$
  tmp$=tmp$,"U/M",fdel$
  if PAMU let tmp$=tmp$,"A.M.U.",fdel$,"M.O.H.",fdel$
  tmp$=tmp$,"AVAILABLE",fdel$,"ON HAND",fdel$
  tmp$=tmp$,U5$,fdel$,"COST U/M",fdel$
  tmp$=tmp$,"EXT COST",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
J1 = 90 \ J2 = 0;SCRPRT = J8
K1$ = " ",K1$;PCTR = 0
L_2000: Search #9,3,1;K1$,R1,E
If E Goto L_9100
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1; \ Mat Read #2,R1,256;A;
Mat Read #2,R1,460;A2;
Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2; \ Mat Read #2,R1,894;C4;
Mat Read #2,R1,596;PRPARC; \ Mat Read #2,R1,938;PF_LOAD2;
if custom_customer$="PCS"
	if P1$[152,155]="TIME" goto L_2000
Endif
Gosub L_10300
If E Goto L_2000 Else Gosub L_69000 \ Gosub L_10200
Gosub L_2500 \ T9 = 0 \ T9[1] = 0 \ T9[2] = 0 \ T9[3] = 0
If P1$[152,155] = "MACH" Let A1 = 0
If P1$[152,155] = "LABR" Let A1 = 0
If P1$[152,155] = "TIME" Let A1 = 0
T9[2] = A1 - A1[1] - A1[3]
If P9$[28,28] = "Y" Let T9[2] = T9[2] + A1[2]
If B1[20] = 0 Let B1[20] = 1
If INCNEG Goto L_2062
If A1 < 0 Goto L_2065
L_2062: T9[3] = FNR(A1 * (COST))
L_2065: If Not(ZEROVL) If A1 = 0 Goto L_2000
If Not(INCNEG) If A1 < 0 Goto L_2000
If J2$ <> K1$[1,6] Gosub L_3000
Y9 = Y8;T9[4] = 0 \ If Not(PAMU) Goto L_2150
T9[4] = W3[8] \ If T9[4] > 0 Let T9[0] = T9[4] \ Goto L_2100
T9[4] = W3[9]
T9 = T9[4]
L_2100: T9[1] = 0 \ If T9 Let T9[1] = FNR(A[0] / T9)
If WHSE If T9 Let T9[1] = FNR(A1[0] / T9)
L_2150: Gosub L_10000
Gosub L_5800
Gosub L_5000
Gosub L_2200
PCTR = PCTR + 1
! - If Not(SCRPRT)
! -   If Not(Fra(PCTR / 500)) Print @38,21;"RECORD";PCTR
! - End If 
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[6] = T9[6] + A1[0] \ T9[10] = T9[10] + A1[0]
T9[8] = T9[8] + T9[3] \ T9[12] = T9[12] + T9[3]
Return 
!
L_2500: Rem GET ON HAND FROM SPRODLOT
A1[0] = 0 \ A1[1] = 0 \ A1[3] = 0
J4$ = " ",J4$ \ J4$ = P1$[140,151]
L_2530: Search #4,3,2;J4$,R4,E
If E Return 
If J4$[1,12] <> P1$[140,151] Return 
Mat Read #4,R4,66;P1;
Mat Read #4,R4,82;P3;
If WHSE If WHSE <> P1 Goto L_2530
A1 = A1 + P3[0] - P3[1]
A1[3] = A1[3] + P3[3]
Goto L_2530
!
L_3000: Rem VENDOR CODE
J2$ = " ",J2$ \ J2$ = K1$[1,6]
Search #3,2,1;J2$,R2,E
If E let C1$ = "VENDOR NOT FOUND! - "
if E=0
  Mat Read #3,R2;C1$;
  Gosub L_10200
endif
Gosub L_3100
VendorID$=J2$ \ VendorName$=rtrim$(C1$)
Goto L_3200
!
L_3100: Rem SUBTOTAL?
if J8 goto SubTotalExit ! dx xml
!
If Not(T9[6]) If Not(T9[8]) Goto L_3160
J1 = J1 + 2 \ Gosub L_5800
Print #0;"\15\** SUB-TOTALS **";
Print #0; Using "---------#.##"; Tab 88;T9[6];
Print #0; Using "----------#.##"; Tab 118;T9[8]
!
SubTotalExit:
L_3160: T9[6] = 0 \ T9[8] = 0
Return 
!
L_3200: Rem PRINT IT
if J8 return ! dx xml
!
If Not(J2) Gosub L_5800
Print #0;"\15\    VENDOR CODE: ";J2$;
Print #0; Tab 30;"DESCRIPTION: ";C1$
Print #0;" "
J1 = J1 + 3
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** GRAND  TOTALS **";
Print #0; Using "---------#.##"; Tab 95;T9[10];
Print #0; Using "----------#.##"; Tab 118;T9[12]
Print #0;" "
Return 
!
L_5000: Rem PRINT LINE
if J8
  tmp$=VendorID$,fdel$,VendorName$,fdel$
  tmp$=tmp$,P1$[140,151],fdel$,rtrim$(P1$[9,38]),fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,rtrim$(P1$[63,92]),fdel$
  tmp$=tmp$,P1$[139,139],fdel$,P1$[152,155],fdel$
  tmp$=tmp$,SUNIT$,fdel$
  if PAMU let tmp$=tmp$,T9 Using "-------#.##",fdel$
  if PAMU let tmp$=tmp$,T9[1] Using "-----#.##",fdel$
  tmp$=tmp$,T9[2] Using "-------#.##",fdel$
  tmp$=tmp$,A1[0] Using "-------#.##",fdel$
  tmp$=tmp$,COST Using PMASK$,fdel$,CUNIT$,fdel$
  tmp$=tmp$,T9[3] Using "-------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
Print #0; Tab 1;P1$[140,151];
Print #0; Tab 13;P1$[9,38];
Print #0; Tab 44;P1$[139,139];
Print #0; Tab 47;P1$[152,155];
Print #0; Tab 52;SUNIT$;
If Not(PAMU) Goto L_5040
Print #0; Using "-------#.##"; Tab 56;T9;
Print #0; Using "-----#.##"; Tab 68;T9[1];
L_5040: Print #0; Using "-------#.##"; Tab 78;T9[2];
Print #0; Using "-------#.##"; Tab 90;A1[0];
Print #0; Using PMASK$; Tab 103;COST;" /";CUNIT$;
Print #0; Using "-------#.##"; Tab 120;T9[3];
If P9$[26,26] <> "Y" Goto L_5770
Print #0;"" \ J1 = J1 + 1
Print #0; Tab 13;P1$[63,92];
L_5770: Rem
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 689H - ";T9$;
Print #0; Tab 44;"I N V E N T O R Y   V A L U E   R E P O R T"
TABS = 58
If ZEROVL Or INCNEG Let TABS = 48
If INCNEG Let TABS = 43
If ZEROVL And INCNEG Let TABS = 35
If Not(WHSE) Print #0; Tab TABS;"FOR ALL WAREHOUSES ";
If WHSE Print #0; Using "FOR WAREHOUSE ## "; Tab TABS;WHSE;
If ZEROVL Print #0;"WITH ZERO ON HAND ";
If INCNEG If ZEROVL Print #0;"AND ";
If INCNEG Print #0;"WITH NEGATIVE COSTS EXTENDED"
Print #0;"\15\"
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 44;"MB";
Print #0; Tab 47;"COMM";
Print #0; Tab 52;"U/M";
If Not(PAMU) Goto L_5890
Print #0; Tab 61;"A.M.U.";
Print #0; Tab 71;"M.O.H.";
L_5890: Print #0; Tab 80;"AVAILABLE";
Print #0; Tab 95;"ON HAND";
Print #0; Tab 106;U5$;
Print #0; Tab 123;"EXT COST";
Print #0;" "
Print #0;"\15\";
Return 
!
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000"
L_9100: Rem END OF THIS RANGE
Gosub L_3100 \ Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
Goto OUTEND
!
L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[11]
CNVTU[2] = 2
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
For X = 0 To 3
  If X = 3 Goto L_10110
  If X = 1 Goto L_10130
  If X = 0 Let CNVTU[2] = 5
  CNVTA = T9[X] \ Gosub L_20000 \ T9[X] = AMOUNT
L_10110: CNVTA = A1[X] \ Gosub L_20000 \ A1[X] = AMOUNT
L_10130: Next X
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
If PFU1[8] = -1 Let SUNIT$ = "CWT "
If PFU1[8] = -3 Let SUNIT$ = "LB  "
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
If PFU1[11] = -1 Let CUNIT$ = "CWT "
If PFU1[11] = -3 Let CUNIT$ = "LB  "
Return 
!
L_10200: Rem "============================================== SET COST
If UnitType = 1 ! "average
  If W3[15] and P9$[32,32] = "Y" Let COST = W3[15] Else Let COST = B1[21]
End If 
If UnitType = 2 ! "base
  If W3[18] and P9$[32,32] = "Y" Let COST = W3[18] Else Let COST = C4[4]
End If 
If UnitType = 3 ! "warehouse
  If W3[17] and P9$[32,32] = "Y" Let COST = W3[17] Else Let COST = B1[8]
End If 
If UnitType = 4 ! "last
  If W3[16] and P9$[32,32] = "Y" Let COST = W3[16] Else Let COST = B1[10]
End If 
If UnitType = 5
  If W3[14] and P9$[32,32] = "Y" Let COST = W3[14] Else Let COST = PF_LOAD2
End If 
If UnitType = 6
  If WHMISC[2] and P9$[32,32] = "Y" Let COST = WHMISC[2] Else Let COST = PRPARC[2]
End If 
Return 
!
L_10300: Rem WAREHOUSE
WHMISC[2] = 0
For X = 0 To 24 \ W3[X] = 0 \ Next X
For X = 0 To 12 \ W5[X] = 0 \ Next X
If Not(WHSE) Return 
K5$ = " ",K5$
K5$[1,12] = P1$[140,151]
K5$[13,14] = WHSE Using "##"
Search #6,2,1;K5$,R5,E
If E Return 
Mat Read #6,R5,78;W3;
Mat Read #6,R5,228;W5; \ Mat Read #6,R5,800;WHMISC;
Return 
!
! - L_10500: Rem SELECT UNIT
! - Window Open @5,5; Size 70,12; Using " SELECT COST "
! - L_10520: Print 'CS'
! - Print @5,3;" 1: AVERAGE   "; Tab 45;" 4: LAST     "
! - Read #1,18,220;D1$;
! - Print @5,4;" 2: BASE   "; Tab 45;" 5: ";D1$
! - Read #1,18,230;D1$;
! - Print @5,5;" 3: WAREHOUSE "; Tab 45;" 6: ";D1$
! - Print @10,7;"Enter cost to use on the report  ";
! - Print @42,7; \ Input Len 16384 + 1;""UNIT$
! - If Len(UNIT$) <> 1 Goto L_10520
! - UNIT = UNIT$
! - If UNIT < 1 Goto L_10520
! - If UNIT > 6 Goto L_10520
! - U5$ = " ",U5$
! - If UNIT = 1 Let U5$ = "AVG. COST "
! - If UNIT = 2 Let U5$ = "BASE COST"
! - If UNIT = 3 Let U5$ = "WHSE COST "
! - If UNIT = 4 Let U5$ = "LAST COST "
! - If UNIT = 5 Read #1,18,220;D1$; \ U5$[1,10] = D1$[1,10]
! - If UNIT = 6 Read #1,18,230;D1$; \ U5$[1,10] = D1$[1,10]
! - Window Close 
! - Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - wasIf Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ rem ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B1[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B1[21]
  If Not(W3[16]) Let W3[16] = B1[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B1[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B1[24]
End If 
Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
