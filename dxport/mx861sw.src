Rem MX861SW -- WORK ORDER FROM SALES ORDER ENTRY
Rem
Rem FROM MX861C - MONMOUTH
!
! loadsave -w -n 100,10 -o prog/dxport/mx861sw.dl4 src/mx861sw.src
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 21, 2000  10:24:27
Rem /usr/acct/r97//usr/acct/jcs/work/devl/mfg/mx861sw.src (univ2) [jcs] {28720}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! THIS PROGRAM NEEDS CHANGES TO WORK ON THE WEB !!!!!!!!!!!!!!!!!!!!!!!!!!!
Declare Function FNT
Declare Intrinsic Sub InpBuf,String
Option Default Dialect IRIS1
External Lib "ubsfunc.dl4"
Declare External Function OpenMySQLMirror
include "src/inc/sql_prod.inc"

Com 1%,COID,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],J4$[50]
Com 1%,COST_LEV[3],2%,PASSR[1],TYPE,S9[9],CUST,3%,QTY,AVAILQTY
If Err 0 Gosub ERR_TRAP
Dim A2$[156],C$[30],D6$[6],D8$[8],F$[16],I$[20]
Dim K1$[25],U3$[80],U5$[50],U9$[10],L1$[20]
Dim V$[22],V1$[22],W$[180],W1$[30],W9$[9],P9$[50]
Dim A$[156],P$[156],T$[42],T1$[30],K5$[45],P60$[50]
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],Y,L3[3],PL[1],H4[2],N1[6]
Dim 2%,X,X1,H0[12],H5[16],L4[3]
Dim 3%,J1,X2,L7[12],ORDERQTY,MAKEQTY
Dim J$[50],J0$[15],J1$[50],J2$[20],J5$[70],J7$[40]
Dim J9$[50],X$[10]
Dim 3%,Q[6],A1[6],Q1[50]
Dim 2%,R[40],R6,D9[5]
Dim 1%,Z8[39],T1[1],W0,W1[2],2%,B[24],Z9
Dim 3%,D2,W3[4],T3[2],AMNT,BMAMT,COST,S3
Dim 2%,W2[7],T2[3]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim rstr$[500],msg$[200]
W9$ = "WATCH IT!"
END ! ====================== REMOVE WHEN READY! ===============================
If Err 0 Rem
For I = 0 To 99
  Close #I
Next I
If Err 0 Gosub ERR_TRAP
W1$ = W9$
W = 0
If AVAILQTY < 1 Let AVAILQTY = 0
U3$ = " ",U3$
R1 = COID ! Spc(5)
J$ = "cntrl/cntrl"+Str$(COID) ! Int((R1 - Int(R1 / 16384) * 16384) / 64) Using "CNTRL# "
Z9 = COID ! J$[6,6]
If Err 0 Let W = Spc(8)
D2 = Chf(1)
If Err 0 Gosub ERR_TRAP
If W = 0 Goto L_760
D2 = 0 \ W = 0
!R1 = Spc(5)
!J$ = Int((R1 - Int(R1 / 16384) * 16384) / 64) Using "CNTRL# "
Open #1,J$
L_760: Rem  READ #1,38,SPC 6*16;S9;!PASS AS COM
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,115;D9;
For I = 2 To 12
  Read X
  If Not(X) Goto L_840
  Read #1,88,X;F$
  Open #I,F$[1,16]
L_840: Next I
Data "1792","512","1808","656","528","1744","1728","2528","2320","1840","1888"
sqlChan = OpenMySQLMirror(e$)
Def FNP(X) = FNT(X * X1)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNT(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .001)
Dim 3%,Z7[10]
Dim 2%,D8
L_1000: Read #1,0,112;D8;
D8$ = D8 Using "######"
D6$ = D8$
L_1070: Rem
W$ = " ",W$
For I = 0 To 7
  W2[I] = 0
  If I < 3 Let W1[I] = 0
  If I < 5 Let W3[I] = 0
Next I
W0 = 1
H1 = S9[2]
Mat Read #11,H1,0;H0;
Mat Read #11,H1,78;H4;
Mat Read #11,H1,104;H5;
If H5[7] <> 1 Goto L_8900
WHSE = H4[2] \ Gosub L_8200
L1 = S9[5]
Mat Read #12,L1,8;L3;
Mat Read #12,L1,16;L4;
Mat Read #12,L1,168;L7;
Mat Read #12,L1,246;PL;
If L3[0] <> 0 Goto L_8900
If L3[1] <> 1 Goto L_8900
ORDERQTY = L7[3] + L7[4]
If ORDERQTY < 1 Goto L_8900
Mat Read #12,L1,140;L1$;
K1 = L4;E2 = L4 \ Gosub L_6800
If P$[139,139] <> "M" Goto L_8900
A2$ = P$ \ Gosub L_6100
Goto L_8900
K1 = E2;S9[1] = K1 \ If PL[0] = 1 Let W$[180,180] = "Y"
W$[121,132] = P$[140,151];W$[163,164] = P$[6,7]
W2[0] = H0[10];W2[5] = H0[4];W2[6] = H0[7];W1[1] = L3[2]
If B[16] <= 0 Let B[16] = 1
MAKEQTY = ORDERQTY - AVAILQTY
If MAKEQTY < 1 Goto L_8900
W3 = MAKEQTY;W3[1] = W3;W2[7] = (W3 / B[16]);W0 = WHSE
W1[2] = 0 \ If P9$[16,16] = "M" Let W1[2] = 1
W1[0] = 1;P9 = B[16];D2 = P9;Q = W2[7]
BMAMT = W3 \ Gosub L_6910 \ W3 = S3;W3[1] = S3
Print @50,2;"WORK ORDER # ";
Print @20,17;"PRODUCT ";W$[121,132]
Print @20,18;"ORDER";H0[7];" LINE";L3[2]
Signal 3,0
If P60$[11,11] <> "Y" Let W$[180] = " "
Goto L_2530
L_1500: Print 'CS'
Print @0,0;"WORK ORDER ENTRY";@50,0;"MX861A - REV. 3.0";
Print @0,2;"PRODUCT NUMBER.....:";@50,2;"WORK ORDER # ";
Print @0,4;"MACHINE NUMBER.....:";
Print @0,5;" 1. LOT NUMBER..............:";
Print @0,6;" 2. REQUIRED COMPL. DATE....:";
Print @0,7;" 3. CUSTOMER NUMBER.........:";
Print @0,8;" 4. SALES ORDER NUMBER......:";
Print @0,9;" 5. # OF BOM QTY'S TO MAKE..:";
Print @0,10;" 6. QUANTITY FOR ORDER......:";
Print @0,11;" 7. SPECIAL INSTRUCTIONS....:";
Print @0,12;" 8. SPECIAL INSTRUCTIONS....:";
Print @0,13;" 9. SPECIAL INSTRUCTIONS....:";
Print @0,14;"10. SPECIAL INSTRUCTIONS....:";
If P9$[16,16] = "S" Goto L_1645
Print @0,15;"11. SINGLE / MULTILEVEL S/M.:";
L_1645: If D9[5] > 1 Print @0,16;"12. WAREHOUSE #.............:";
Print " "
Signal 3,0
U9$ = "*-?@&,"
L_1900: J0$ = "2 001220 2"
J1$ = ""
Gosub L_7000
If J4$ = "" Goto L_8900
If J4$ = "END" Goto L_8900
Gosub L_6700 \ Goto L_1900
K1$ = " ",K1$ \ K1$[1,Len(J$)] = J$
Print @20,2;J$;
Search #2,2,1;K1$,K1,E
If Not(E) Let C$[1,12] = J$
If E Goto L_2180
Mat Read #2,K1;A2$;
Print @20,3;A2$[9,38];
If P9$[26,26] <> "Y" Goto L_2040
Print @0,3;'CL';@10,3;A2$[9,38];@45,3;A2$[63,92];
L_2040: E2 = K1 \ Gosub L_6800
X1 = 1
Mat Read #2,K1,156;B;
Gosub L_6100 \ Goto L_1500
If B[16] <= 0 Gosub L_6200 \ Goto L_1500
W$[121,132] = A2$[140,151]
W$[163,164] = A2$[6,7]
Gosub L_2220
S9[1] = K1
Goto L_3000
L_2180: Print @28,22;"NO SUCH PART # ";'RB';
Signal 3,20
Print @28,22;'CL';
Goto L_1900
L_2220: Rem READ U/M CODEC
Read #8,PFU1[8],10;F$[1,4];
Print @43,10;F$[1,4];
Return 
Print @28,22;'CL';
Signal 3,20
Print @28,22;'CL';
Gosub L_8000
Goto L_1000
L_2380: Print @22,23;"ENTER FIELD #, DELETE, BUILD, OR END ";'RB';
Input ""U5$
Print @0,23;'CL';
If U5$ = "END" Goto L_8900
If U5$ = "B" Goto L_2530
If U5$ = "BUILD" Goto L_2530
If U5$ = "DELETE" Goto L_1070
W = U5$
K = W
If U5$[1,1] <> "R" Goto L_2500
K = 0
W = U5$[2]
L_2500: On W - 0 Goto L_3000,L_3080,L_3210,L_3310,L_3390,L_3490,L_3570,L_3640,L_3710,L_3780
On W - 10 Goto L_3850,L_4000
Goto L_2380
L_2530: Rem *** (SUB) END NEW REC ***
If Not(W3[1]) Goto L_8900
If Not(W3[0]) Goto L_8900
Gosub L_5000
S9 = 899
Chain "MX861B"
L_3000: Rem 1 LOT NUMBER
J0$ = "2 001229 5"
J2$ = ""
J1$ = W$[133,144]
Gosub L_7000
If J4$ = "END" Goto L_2380
W$[133,144] = J$
If K = 1 Goto L_2380
L_3080: Rem 2 REQUESTED COMP. DATE
J0$ = "5 00 629 6"
J2$ = "######"
If Not(W2[0]) Let W2[0] = D6$
J1 = W2[0]
If J1$[6,6] = "0" Let J1$ = "MMDDYY"
Gosub L_7000
If J4$ = "END" Goto L_2380
W2[0] = J1
J2$ = ""
If K = 2 Goto L_2380
L_3210: Rem 3 CUSTOMER NUMBER
J0$ = "2 01 629 7"
J1$ = ""
Gosub L_7000
Gosub L_6300 \ Goto L_3210
X2 = J$ \ J$ = X2 Using "######" \ Print @29,7;J$;
Gosub L_6500
Goto L_3210
W2[5] = J$
If K = 3 Goto L_2380
L_3310: Rem 4 SALES ORDER NUMBER
J0$ = "3000 629 8"
J2$ = "######"
J1 = W2[6]
Gosub L_7000
If J4$ = "END" Goto L_2380
W2[6] = J1 \ Print @36,8;"LINE #";
J0$ = "3000 344 8" \ J2$ = "###"
J1 = W1[1]
Gosub L_7000
W1[1] = J1
If K = 4 Goto L_2380
L_3390: Rem 5 NUMBER OF MIXES
J0$ = "33011029 9"
J2$ = "######.###"
J1 = W2[7]
Gosub L_7000
If J4$ = "END" Goto L_2380
W2[7] = J1
If Not(W2[7]) Goto L_3390
Gosub L_6600
Goto L_3390
If K = 5 Goto L_2380
L_3490: Rem 6 QTY FOR STOCK
L_3500: J0$ = "3201112910"
J2$ = "########.##"
J1 = W3[1]
Gosub L_7000
If J4$ = "END" Goto L_2380
W3[1] = J1
If Not(W3[1]) Goto L_3500
If K = 6 Goto L_2380
L_3570: Rem SPEC INSTR. 1
J0$ = "2 00302911"
J1$ = W$[1,30]
Gosub L_7000
If J4$ = "END" Goto L_2380
W$[1,30] = J$
If K = 7 Goto L_2380
L_3640: Rem 8 SPEC. INSTR. 2
J0$ = "2 00302912"
J1$ = W$[31,60]
Gosub L_7000
If J4$ = "END" Goto L_2380
W$[31,60] = J$
If K = 8 Goto L_2380
L_3710: Rem 9 SPEC. INSTR. 3
J0$ = "2 00302913"
J1$ = W$[61,90]
Gosub L_7000
If J4$ = "END" Goto L_2380
W$[61,90] = J$
If K = 9 Goto L_2380
L_3780: Rem 10 SPEC. INSTR. 4
J0$ = "2 00302914"
J1$ = W$[91,120]
Gosub L_7000
If J4$ = "END" Goto L_2380
W$[91,120] = J$
If K = 10 Goto L_2380
L_3850: Rem 11 SINGLE / MULTI - LEVEL
If P9$[16,16] = "S" Let J$ = "S" \ Goto L_3910
J0$ = "2 00012915"
J1$ = "S"
L_3880: Gosub L_7000
If J4$ = "END" Goto L_2380
If J$ = "M" Goto L_3970
L_3910: If J$ = "S" Goto L_3970
J7$ = "ENTER (S OR M) 'ONLY'!"
Gosub L_7600
Signal 3,20
Print @41,15;'CL';
Goto L_3880
L_3970: If J$ = "M" Let W1[2] = 1
If J$ = "S" Let W1[2] = 0
If K = 11 Goto L_2380
L_4000: If D9[5] <= 1 Let W0 = 1 \ Goto L_2380
J0$ = "3000022916" \ J1 = 1
J2$ = "##" \ Gosub L_7000
W0 = J1 \ If Not(W0) Goto L_4000
If W0 > D9[5] Goto L_4000
If K = 12 Goto L_2380
Goto L_2380
L_4100: Rem *** GET WO#,BLD & WRT REC ***
W1[0] = 1
E = 2
Search #3,1,0;V$,V1,E
If E = 3 Print "\15\\7\WO.HEADR FILE IS FULL!"
If E Gosub ERR_SEARCH
Search #3,4,1;V$,V1,E
If E Gosub ERR_SEARCH
V1$ = " "
V1$[1,6] = W2[5] Using "######"
V1$[7,12] = V$[1,6]
Search #3,4,2;V1$,V1,E
If E Gosub ERR_SEARCH
V1$ = " "
V1$[1,12] = W$[121,132]
V1$[13,18] = V$[1,6]
Search #3,4,3;V1$,V1,E
If E Gosub ERR_SEARCH
V1$ = " ",V1$ \ V1$ = W2[6] Using "######"
V1$[7,9] = W1[1] Using "###"
V1$[10] = V$[1,6]
Search #3,4,4;V1$,V1,E
If E Gosub ERR_SEARCH
Write #3,V1,180;W0;
Mat Write #3,V1,182;W1;
Mat Write #3,V1,188;W2;
Mat Write #3,V1,220;W3;
For X = 1 To 180
  If W$[X,X] < " " Let W$[X,X] = " "
Next X
C$[1,12] = V1$[1,12]
Mat Write #3,V1;W$;
S9[2] = V1
S9[3] = 100 + W1
PASSR[0] = V1;TYPE = 1;QTY = W3[0]
Swap 1,"MXPRWH"
Return 
L_4800: Rem GET WO #
L_4805: Read #1,20,74;Z9
Z9 = Z9 + 1
Write #1,20,74;Z9;
V$ = " "
V$[1,6] = Z9 Using "##### "
Search #3,2,1;V$,R1,E
If E Goto L_4850
Print @0,22;'CE RB';" WORK ORDER ALREADY ON FILE !! "
Signal 3,0
Goto L_4805
L_4850: Print @63,2;V$;
W$[145,150] = V$[1,6]
R4 = R
S9[1] = R4
Return 
Print @28,3;'RB CL';"  INVALID";
Signal 3,15
Goto L_4800
L_5000: Rem ****** EXPLOSION *******
Gosub L_6000
R = K1
Q1 = Q
Gosub L_5900
Return 
L_5900: Rem TLA WO
V1$ = W$[121,132]
Search #2,2,1;V1$,R,E
If E Gosub ERR_SEARCH
Gosub L_4800
Mat Read #2,R,256;A1;
E2 = R \ Gosub L_6800
COST = W3[0] \ Gosub L_6935
A1[2] = A1[2] + FNR(COST)
Mat Write #2,R,256;A1;
if sqlChan >= 0 ! MySQL enabled and channel opened
	e = prod_UpdateSQLFromDL4(e$, coid, V1$, sqlChan, 2)
	if e <> 1 ! returns the number of records add/updated/deleted
		gosub ERR_SEARCH
	end if
end if
W3[0] = COST
COST = W3[1] \ Gosub L_6935
W3[1] = COST
Gosub L_4100
Return 
L_6000: Print @0,18;
Print "PLEASE WAIT  . . .    ";
If W1[2] Print "MULTI";
If Not(W1[2]) Print "SINGLE";
Print " LEVEL WORK ORDER GENERATION IN PROCESS"
Signal 3,0
Return 
L_6100: Rem CHECK PART VALIDITY
If A2$[139,139] <> "M" Goto L_6200
A$ = K1 Using "#####   0    0"
F$ = A$ \ FLAG = 0
L_6130: Search #5,3,1;A$,R6,E
If E Goto L_6200
If A$[1,5] <> F$[1,5] Goto L_6200
If A$[15,16] = A2$[6,7] Let FLAG = 9
Goto L_6130
L_6160: Return 1
L_6200: Rem INVALID PART
If FLAG = 9 Goto L_6160
Goto L_6240
Print @0,23;'RB CL';"INVALID PART... NO B.O.M. LOADED. PRESS RETURN ";
Input ""I$
Print @0,23;'CL';
L_6240: Return 
L_6300: Rem NAME
If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
Swap 1,"MXCUST"
Print @29,7; \ Signal 3,0
Input ""J$ \ If J$ = "" Return 
Print @29,7;'CL';J$;
Return 1
Print @29,7;'RB CL';@40,7;"END OF FILE! ";
Return 
L_6500: Rem CHECK CUSTOMER
Search #4,2,1;J$,R6,E
If E Goto L_6550
Read #4,R6,30;C$[1,30];
Print @40,7;'CL';C$[1,30];
Return 1
L_6550: Rem INVALID CUSTOMER
Print @40,7;'RB CL';" CUSTOMER NOT ON FILE !! ";
Signal 3,10
Print @0,23;'CL';
Return 
L_6600: Rem PRODUCTION QTY CHECK
Read #2,K1,220;P9;
If P9 <= 0 Let P9 = 1
W3 = FNR(W2[7] * P9)
Print Using "PRODUCTION AMOUNT #######.##";@40,9;'CL';W3;
Print @15,23;'CL';"CORRECT AMOUNT (Y/N) ";
Input ""J1$
Print @0,23;'CL';
Q = W2[7] \ D2 = P9
If J1$ = "Y" Return 1
Print @40,9;'CL';
Return 
L_6700: Rem DESC LIST
If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
If J4$[1,1] >= "A" If J4$[1,1] <= "Z" Return 1
CUST = H0[4]
Call "MXPROD5",J4$,WH,CUST
Return 
L_6800: Rem READ PROD
Mat Read #2,E2;P$;
Mat Read #2,E2,156;B;
Mat Read #2,E2,256;A;
Mat Read #2,E2,512;PFU1;
Mat Read #2,E2,554;PFU2;
If Not(B[8]) Let B[8] = B[21]
If Not(B[8]) Let B[8] = B[10]
A2 = B[8]
If PFU1[8] <= 0 Let PFU1[8] = PFU1[0]
If PFU1[13] <= 0 Let PFU1[13] = PFU1[0]
Return 
CNVTA = S3 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 1
Gosub L_6960
If AMNT <= 0 Let AMNT = S3
BMAMT = AMNT
CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 2
Gosub L_6960
If AMNT <= 0 Let AMNT = A2
COST = FNR(AMNT)
Return 
L_6910: Rem BASE --> STCK UNITS
CNVTA = BMAMT;CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
Gosub L_6960
If AMNT <= 0 Let AMNT = BMAMT
S3 = AMNT \ Return 
L_6935: Rem STOCK -> BASE UNITS
CNVTA = COST \ CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 1
Gosub L_6960 \ If AMNT <= 0 Let AMNT = COST
COST = AMNT
Return 
L_6960: Rem STD
If Spc(4) > 1280 Goto L_6990
Swap 1,"MXPRCONV"
L_6970: Signal 2,E,AMNT,E1 \ If E = -1 Return 
If E1 Return 
If E <> Spc(6) Goto L_6970
Return 
L_6990: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMNT = CNVTA
Return 
L_7000: Rem  *INPUT SUBROUT V2.9
If Spc(4) > 1280 Goto L_7900
J0 = J0$[1,1]
J6 = J0$[2,2]
J2 = J0$[3,4]
J3 = J0$[5,6]
J4 = J0$[7,8]
J5 = J0$[9,10]
If J2$ = "" Let J2$ = " ",J2$
If J1$ = "" Let J1$[1,J3] = " ",J1$
If J0 <> 3 If J0 <> 4 If J2$ <> "" Goto L_7070
If J0 > 4 Goto L_7080
If J0 = 3 Let J2$ = "#",J2$
If J0 = 4 Let J2$ = "-",J2$
J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
L_7070: J1$[J3 + 1] = ""
If J0 < 3 Goto L_7105
L_7080: If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
If J0 = 6 Goto L_7105
If J0 <> 5 Goto L_7100
J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
L_7105: Print @0,Msc(34); Tab ((Msc(33) / 2) - Len(J5$) / 2);J5$;'CL';
Print @J4,J5;J1$;@J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
Print @J4,J5;J1$[1,J3];@J4 + J3,J5;'EU';" ";@J4 - 1,J5;'BU';@J4,J5;
Input Len J3 + 1;""J4$ \ Print @0,Msc(34);'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
If Len(J4$) <= J3 Goto L_7130
J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
L_7145: For J8 = 1 To Len(J9$)
  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
L_7165: J$ = J0$[2,2],J$
If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
If J0 = 2 Let J$[1,Len(J9$)] = J9$
Goto L_7345
L_7185: J9 = 0 \ For J8 = 1 To Len(J9$)
  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
  If J9$[J8,J8] = " " Goto L_7235
  If Len(J0$) < 11 Goto L_7210
  If J8 <> 1 Goto L_7210
  J7$ = "" \ For J7 = 11 To Len(J0$) \ If J9$[J8,J8] = J0$[J7,J7] Return 
  Next J7
L_7210: If J9$[J8,J8] <> "." Goto L_7250
  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
  If J9 Goto L_7250
  J9 = 1
L_7230: If J9 Let J9 = J9 + 1
L_7235: Next J8
If J0 = 5 Goto L_7265
If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
L_7260: Gosub L_7600 \ Goto L_7105
L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
If J9[1] = 0 If J9 <> 0 Goto L_7325
On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
Goto L_7325
L_7285: If J9[1] > 30 Goto L_7325
L_7290: If J9[1] > 31 Goto L_7325
Goto L_7315
L_7300: If J9[1] > 29 Goto L_7325
If Not(Fra(J9[2] / 4)) Goto L_7315
If J9[1] > 28 Goto L_7325
L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
J$ = X$ \ J3 = 8 \ Goto L_7345
L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
If Spc(4) > 1280 Goto L_7915
Print @0,(Msc(34) - 2);'CR BR BD'; Tab ((Msc(33) / 2) - Len(J7$) / 2);'ED';"  ";
Print J7$;"  ";'BD'; Tab (Msc(33) - 2);'ER ED RB'; \ Signal 3,20
Print @0,Msc(34);'CL'; \ Return 
L_7700: Rem  *DATE  X2 TO X$  V2.9
If Spc(4) > 1280 Goto L_7930
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
If Spc(4) > 1280 Goto L_7955
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
L_7900: Rem CALL OFF TO ROUTINE
Call "INPUT5",J1,J$,J0$,J1$,J4$,J5$,J7$,X$,X2
Return 
L_7915: Rem
J0$ = "MESSAGE"
Goto L_7900
L_7930: Rem X2 2 X$
J0$ = "DATE2"
Gosub L_7900
Return 
L_7955: Rem X$ 2 X2
J0$ = "2DATE"
Gosub L_7900
Return 
L_8000: Rem *** DELETE RESET VER. ***
V$ = ""
K1$ = ""
U5$ = ""
For X = 0 To 7
  W2[X] = 0
  If I <= 4 Let W3[X] = 0
  If I <= 2 Let W1[X] = 0
Next X
W$ = " ",W$
If Err 0 Gosub ERR_TRAP
Z7[10] = 0
Return 
Gosub L_8000
!Print @28,22;"WORK ORDER 'DELETED' ";'RB';
!Signal 3,20
Goto L_1070
L_8200: Rem CHECK WHSINFO FOR WHSE TO MAKE IN
If Err 0 Rem
Close #89
If Err 0 Gosub ERR_TRAP
Read #1,88,2768;I$[1,16];
Open #89,I$
If WHSE < 1 Let WHSE = 1
If WHSE > D9[5] Let WHSE = 1
Mat Read #89,(WHSE - 1),122;N1;
If N1[1] > 0 If N1[1] <= D9[5] Let WHSE = N1[1]
Close #89
Return 
L_8900: Rem *** CLOSE & EXIT ****
For I = 0 To 3
  S9[I] = 0
Next I
Goto OUTEND
OUTEND: Rem EXIT
Close 
Chain ""
End 

ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
error 11000 ! Goto ERR_MAIN
ERR_MAIN: Rem
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet_call.inc"
End
