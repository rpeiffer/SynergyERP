! --- serp914.dl4
! Misc. Tables Maintenance program converted from ut914
!
! 1.0 09/14/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp914.dl4 src/serp914.src
!
! From the original code:
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 13, 2005  09:45:38
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ut/ut914.src (univ2) [mary] {02131}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"

!
! *declare additional dl4 intrinsic subs & functions
Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[900],tmp2$[900],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen()
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

Dim 1%,CH_MISCCHRG,CH_CNTRL
Dim 1%,MS1[2]

! variables that vary based on what table we are working with
Dim 1%,MAXLEVEL,TBLTYP
Dim HDR1$[50],HDR2$[30]
Dim 2%,COL[5],LEVEL

!* variables for reading the table
Dim 1%,FLAG[4]
Dim 2%,Q1[11],Q2[11],Q3[11],Q4[11],Q5[11]

Dim UM$[20]
Dim 3%,REC
Dim M1$[10]
Dim X$[40]
Dim MS$[32]
!M$ = "######"
!M1$ = "-----#.##"

!
! open files
!
close #1 ! getsession opens the cntrl file as read only, need write access.
CH_CNTRL = openfile(9999,intCO)
ch_miscchrg = openfile(-2032,intco)
IF CH_MISCCHRG=-1 ERROR 42
!MAIN_LOOP: Rem
!Print 'CS';@0,0;MODULE$;" - ";REVISION$;
!Print @25,0;"TABLES MAINTENANCE";
!Print @0,4;"CUTTING COST/CHARGE TABLES:";
!Print @1,6;"1) Inventory Cut";
!Print @1,7;"2) Finished Cut";
!Print @0,10;"FREIGHT COST/CHARGE TABLES:";
!Print @1,12;"3) Direct orders";
!Print @1,13;"4) Warehouse orders";
!Print @1,14;"  (all others besides direct and xfer)";
!Print @40,4;"INSIDE DELIVERY COST/CHARGE TABLES:";
!Print @41,6;"5) Direct orders";
!Print @41,7;"6) Warehouse orders";
!Print @41,8;"  (all others besides direct and xfer)";
!Print @41,12;"7)  Grade Table";
!Print @41,13;"8)  Color Table";
!Print @41,14;"9)  Finish Table";
!Print @41,15;"10) Section Table";
!Print @42,17;"PURCHASE ORDERS";
!Print @41,19;"21) Freight Table";
! TABLE_QUEST: Rem
!Print @2,22;'CL';"ENTER TABLE NUMBER, D:Days of week, ";
!Print "H:holidays <exit>: ";
!Input ""U5$
!Call String(1,U5$)
!If U5$ = "" Goto END_MAIN_LOOP
!TBLTYP = 0
!If U5$ = "D"
!  MODE = 1
!  Call "HOLIDAY",MODE
!  Goto TABLE_QUEST
!End If 
!If U5$ = "H"
!  MODE = 2
!  Call "HOLIDAY",MODE
!  Goto TABLE_QUEST
!End If
!If U5$ = "21" Chain "ut914pf"
!If Not(TBLTYP) Goto TABLE_QUEST
!END_TABLE_QUEST: Rem

!
! action2 will dictate which table we are dealing with
! set up the variables to show whic we are dealing with
!
If action2$ = "1" Or action2$ = "2"
	TBLTYP = 1
	MAXLEVEL = 7
	for i = 1 to 5
		COL[i] = 1
	next i
	HDR1$ = "CUTTING COST/CHARGE TABLE MAINTENANCE"
	If action2$ = "2"
		REC = 137
		HDR2$ = "FOR FINISHED TYPE CUTS"
	Else
		REC = 138
		HDR2$ = "FOR INVENTORY TYPE CUTS"
	End If
else If action2$ = "3" Or action2$ = "4"
	TBLTYP = 1
	MAXLEVEL = 7
	for i = 1 to 5
		COL[i] = 1
	next i
	HDR1$ = "FREIGHT COST/CHARGE TABLE MAINTENANCE"
	If action2$ = "4"
		REC = 173
		HDR2$ = "FOR WAREHOUSE ORDERS"
	Else
		REC = 174
		HDR2$ = "FOR DIRECT ORDERS"
	End If 
else If action2$ = "5" Or action2$ = "6"
	TBLTYP = 2
	MAXLEVEL = 5
	COL[1] = 0
	COL[2] = 1
	COL[3] = 1
	COL[4] = 0
	COL[5] = 0
	HDR1$ = "DELIVERY COST/CHARGE TABLE MAINTENANCE"
	If action2$ = "6"
		REC = 172
		HDR2$ = "FOR WAREHOUSE ORDERS"
	Else
		REC = 171
		HDR2$ = "FOR DIRECT ORDERS"
	End If
else
	e$ = "Unknown action2: "+action2$ \ error 10000
End If

Gosub READ_TABLE
!
! GETTING DATA
!
if action1$ = "GETDATA"
	!
	! section 1 table headers
	tmp$=bsdel$+"TableTitles"+fdel$+rdel$
	tmp$=tmp$+"HEADER"+fdel$+"SUBHEADER"+fdel$+rdel$
	tmp$=tmp$+HDR1$+fdel$+HDR2$+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$+esdel$)
	!
	! section 1 table data: header
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	gosub BuildTableHeaders ! build headers, will be in tmp$
	call addToStr(e$, rstr$, tmp$)
	! section 1 table data: data
	gosub BuildTableData ! added to tmp$
	call addToStr(e$,rstr$,tmp$+esdel$)
	!
	! section 2 - U/M data (for cost only if tbltyp = 1)
	if tbltyp = 1
		tmp$=bsdel$+"CostUM"+fdel$+rdel$
		tmp$=tmp$+"COSTUM"+fdel$+rdel$
	else
		tmp$=bsdel$+"UM"+fdel$+rdel$
		tmp$=tmp$+"UM"+fdel$+rdel$
	end if
	If FLAG <> -3 FLAG = -1
	tmp$=tmp$+str$(FLAG)+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$+esdel$)
	!
	! section 3 - U/M dropdown list (for cost only if tbltyp = 1)
	if tbltyp = 1
		tmp$=bsdel$+"costUMdroplist"+fdel$+rdel$
	else
		tmp$=bsdel$+"UMdroplist"+fdel$+rdel$
	end if
	tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
	tmp$=tmp$+"-1"+fdel$+"CWT "+fdel$+rdel$
	tmp$=tmp$+"-3"+fdel$+"FLAT"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$+esdel$)
	!
	! add'l section for tbltyp 2 - misc charge drop down
	if tbltyp = 2
		! actual misc. charge section
		tmp$=bsdel$+"MiscChrg"+fdel$+rdel$
		tmp$=tmp$+"MiscChrg"+fdel$+rdel$
		tmp$=tmp$+str$(flag[1])+fdel$+rdel$
		call addToStr(e$, rstr$, tmp$+esdel$)
		! droplist for misc. charge
		tmp$=bsdel$+"miscchrgdroplist"+fdel$+rdel$
		tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
		gosub BuildMCDroplist
		call addToStr(e$,rstr$,esdel$)
	end if
	! status section
	Message$=""
	ReturnStatus=1
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call addToStr(e$,rstr$,webstr$)
	goto OutEnd:
!
! SUBMITTING DATA
!
else if action1$ = "SUBMITDATA"
	gosub LoadTableData
	if TBLTYP = 1
		call dxget("COSTUM", tmp$)
		FLAG = tmp$
	end if
	if TBLTYP = 2
		call dxget("UM", tmp$)
		FLAG = tmp$
		call dxget("MISCCHRG", tmp$)
		FLAG[1] = tmp$
	end if
	gosub write_table
	!
	! section x - status
	Message$="Record Updated"
	ReturnStatus=1
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call addToStr(e$,rstr$,webstr$)
	goto OutEnd:
!
! UNKNOWN ACTION
!
else
	e$ = "Unknown action1: "+action1$ \ error 10000
end if

!Gosub PROMPT
!Gosub WRITE_TABLE
!Goto MAIN_LOOP
!END_MAIN_LOOP: Rem
!Goto DONE
!PROMPT: Rem
!F1$ = U5$[1,1]
!U5$ = " ",U5$
!PROMPT_LOOP: Rem
!If TBLTYP = 1
!  X$ = "U:Cost U/M, "
!Else 
!  X$ = "U:change u/m, M:misc chrg #, "
!End If
!Print @0,23;"ENTER ##:Level to change, ";X$;" <CR>:end   ";'CL';
!Input ""U5$
!Call String(1,U5$)
!LEVEL = U5$
!Print @0,23;'CL';
!If U5$ = "" Goto END_PROMPT_LOOP
!If U5$ = "U" Gosub CHANGE_UMFLAG
!If TBLTYP = 2 And U5$ = "M" Gosub CHANGE_MISCCHRGFLAG
!If LEVEL > 0 And LEVEL <= MAXLEVEL
!  Gosub LINE_EDIT
!End If 
!Goto PROMPT_LOOP
!END_PROMPT_LOOP: Rem
!Return 

BuildTableHeaders: Rem
	tmp$=""
	If FLAG = -3
		UM$ = "FLAT"
	Else
		UM$ = "CWT "
		FLAG = -1
	End If
	If TBLTYP = 1
		X$ = "COST/" + UM$
	Else
		X$ = " CHARGE"
	End If

	If COL[1] tmp$=tmp$+"MAX WGT"+fdel$
	If COL[2] tmp$=tmp$+X$+fdel$
	If TBLTYP = 2
		IF COL[3] tmp$=tmp$+"     COST"+fdel$
	Else
		If COL[3] tmp$=tmp$+"MIN (FLAT)"+fdel$
	End If
	If COL[4] tmp$=tmp$+"MAX (FLAT)"+fdel$
	If COL[5] tmp$=tmp$+"CHARGE/CWT"+fdel$
	tmp$=tmp$+rdel$
Return

BuildTableData: Rem
	tmp$=""
	For i = 0 To MAXLEVEL - 1
		If COL[1] tmp$=tmp$+str$(Q1[i])+fdel$
		If COL[2] tmp$=tmp$+str$(Q2[i])+fdel$
		If COL[3] tmp$=tmp$+str$(Q3[i])+fdel$
		If COL[4] tmp$=tmp$+str$(Q4[i])+fdel$
		If COL[5] tmp$=tmp$+str$(Q5[i])+fdel$
		tmp$=tmp$+rdel$
	Next I
Return

LoadTableData: !
	for i = 0 to MAXLEVEL - 1
		If COL[1]
			call DxGet("MAXWGT"+str$(i+1), tmp$)
			Q1[i] = tmp$
		end if
		If COL[2]
			IF TBLTYP = 1
				call DxGet("COST"+str$(i+1), tmp$)
			else
				call DxGet("CHARGE"+str$(i+1), tmp$)
			end if
			Q2[i] = tmp$
		end if
		If COL[3]
			if TBLTYP = 1
				call DxGet("MIN"+str$(i+1), tmp$)
			else
				call DxGet("COST"+str$(i+1), tmp$)
			end if
			Q3[i] = tmp$
		end if
		If COL[4]
			call DxGet("MAX"+str$(i+1), tmp$)
			Q4[i] = tmp$
		end if
		If COL[5]
			call DxGet("CHARGE"+str$(i+1), tmp$)
			Q5[i] = tmp$
		end if
	next i
Return

! build misc. charge drop list
BuildMCDroplist:
	inList = 0
	j = chf(CH_MISCCHRG) - 1
	for i = 1 to J
		Mat Read #CH_MISCCHRG,I;MS1;
		Mat Read #CH_MISCCHRG,I,6;MS$;
		if ms1[2] = 2
			tmp$=str$(i)+fdel$+ms$[1,20]+fdel$+rdel$
			call addToStr(e$,rstr$,tmp$)
			if i = flag[1] inList = 1
		end if
	next i
	if not(inList)
		tmp$=str$(flag[1])+fdel$+"UNKNOWN"+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
	end if
return

READ_TABLE: Rem
	Mat Read #CH_CNTRL,REC,0;Q1
	Mat Read #CH_CNTRL,REC,48;Q2
	Mat Read #CH_CNTRL,REC,96;Q3
	Mat Read #CH_CNTRL,REC,144;Q4
	Mat Read #CH_CNTRL,REC,192;Q5
	Mat Read #CH_CNTRL,REC,240;FLAG
Return
WRITE_TABLE: Rem
	Mat Write #CH_CNTRL,REC,0;Q1
	Mat Write #CH_CNTRL,REC,48;Q2
	Mat Write #CH_CNTRL,REC,96;Q3
	Mat Write #CH_CNTRL,REC,144;Q4
	Mat Write #CH_CNTRL,REC,192;Q5
	Mat Write #CH_CNTRL,REC,240;FLAG;
Return 
OUTEND: Rem EXIT ROUTINE
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end