! >>> Program LA525
! NOT USED -- PLEASE CHECK 525
! description Accounts Payable Check Register
!
! loadsave -w -n 100,10 -o prog/dxport/la525.dl4 src/la525.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 18, 2008  15:50:54
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/la525.src (univ2) [bill] {33937}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time
!Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort

Rem LA525 ACCOUNT PAYABLE CHECK REGISTER - OPEN FILES
Rem AUTHOR: MTK   MAR 1991 - MULTIPLE BANKS - V4
Rem last udpate:3/00 mtg cct133506 same chk# same vendor# diff banks
Try
	Enter SPEC1[],MESSAGE$,rstr$ 
	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
	dim xdate$[50]
	dim 1%,currpass,bankid
	dim 1%,apbCURRID,3%,apbCURRFACT,keycurr$[30],currdesc$[30],2%,bnk_currid,3%,curr_rate
	dim 1%,cnvcu[10],3%,cnvca[10]
	dim 1%,oiCURRID,3%,oicurrfact
	dim 1%,aph_CURRID,3%,aph_currfact
	dim 3%,aphmerch,aphfreight,aphmisc,grossapamt,discapamt,netapamt,currvaramt
	dim p61$[256],currdesc$[30]
DIM 2%,C4[4],JRNL
DIM 3%,Q[7],T[7],SPEC[50]
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,C0[6],B9,D1[2],E,I,L,N1[2],N3,O1[2],P,X1,O4[1],DEPT,D4[1]
Dim 1%,BANK,ERRFLAG
Dim 2%,C3[1],D0,D3[1],D5[1],D[1],F9[9],G9[3],N2,N5,N9,N[1],O2[6],VN
Dim 2%,CHKDATE,PAYVEND,AJRNL
Dim 2%,O5,X,X2,VEND,3%,R[50]
Dim 3%,A6[2],D2[2],D6,D7,O3[9],T1[4],T8[4],T9[4],DIVTOT[3]
Dim 3%,BNKTOT[2],A127[25],AA127[128,1]
Dim A$[40],A1$[90],A2$[40],A5$[30],B$[30],C$[30],D$[130],D1$[25],D2$[70]
Dim D5$[8],F$[16],G8$[2],G9$[140],H$[68],J$[4],K1$[30],K2$[30],K3$[30]
Dim K4$[10],K49$[20],K50$[20],N1$[12],O$[6],P$[8],Q$[9],R$[63],R2$[4],U1$[2],U5$[10]
Dim K18$[10],DV1$[12],DV2$[12],DV3$[12]
Dim U9$[131],X$[10],I$[50],NAME$[30],ACPER$[4]
Dim KEYAPD$[30],KEYA2$[30],KEYA22$[30],KEYAPC$[10]
Dim KEY47$[30],1%,CDTMP0[1],2%,CDTMP1[1],3%,CDTMP2
Dim P9$[50],KEYGLAP$[50],CHECKDATE$[6],2%,COMP
dIM GROUPID$[1]
Dim 3%
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Comp=spec1[0] ! company #
intco=spec1[0]

Audonly=spec1[2]

Acper=spec1[4]
c4[0]=spec1[5] ! current next month
c4[1]=spec1[4] ! accounting period
let xdate$=spec1[6] using "&&&&&&"
let tmp$=xdate$[3,6],xdate$[1,2] !
c4[2]=tmp$ ! posting date in mmddyy format
c4[3]=1 ! default lu for a10in file
c4[4]=spec1[6] ! posting date yymmdd

rec_uac=spec1[8]
returnstatus=spec1[9]
bankid=spec1[11]

Rem open files    
F$="cntrl/Cntrl"+str$(comp)
Open #1,F$
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
Try Close #9 Else Rem
!let onchannelno=9
!sortchan = blockbuildsort(e$,25,0,onchannelno)



Mat Read #1,19,50;P9$;
D1$ = "" \ U9$ = "-",U9$
Call Time(D1$)
For X = 0 To 9
  F9[X] = 0
Next X
P = 0 \ L = 99
A1$ = " ",A1$
Mat Read #1,88,432;F$;
A1$ = F$
Call FileInfo(I$,A127[],A1$,1,AA127[])
If AA127[0,1] > 985000
	eflag=eflag+1
	returnstatus=0
	message$="A/P Vendor Detail History File is Full. Please run a/p history file purge."

  !Print 'CS RB';"WARNING: THE A/P VENDOR DETAIL HISTORY FILE IS NEARLY"
  !Print "FULL.  525 CAN NOT BE RUN UNTIL THE FILE IS PURGED."
  !Print "PLEASE INFORM THE MIS DEPARTMENT THAT THE 551 PURGE"
  !Print "NEEDS TO BE DONE."
  !Print "PRESS <CR> TO EXIT  ";
  !Input ""F$
  !Goto L_9070
End If 
A$ = "INVC/MM/C"
K2$ = "20" \ Search #15,2,1;K2$,R[15],E
if e<>0
	eflag=eflag+1
	Message$="RECORD '20' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif

 Mat Read #15,R[15],10;J$;
If J$[3,3] <> "1" 
	eflag=eflag+1
	Message$="Checks Have Not Been Run" \ goto L_9070
endif
L_600: Rem OPEN FILES

G8$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)

if rtrim$(groupid$)="" let groupid$="0"
g8$[2,2]=groupid$
K2$ = " 0"
Search #15,2,1;K2$,R[15],E
if e<>0
	eflag=eflag+1
	Message$="RECORD '0' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif


L_660: Mat Read #15,R[15],2;R$;
If R$[51,51] <> " " If R$[60,60] <> " " Goto L_664
eflag=eflag+1
Message$="UPDATE IN PROCESS ELSEWHERE...TRY AGAIN LATER.."
goto l_9070
L_664: R$[51,51] = " " \ Mat Write #15,R[15],2;R$;
If P9$[17,17] = "Y"
  F$ = COMP Using "6/GLCDTEMP#"
  Open #75,F$
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,2,1;KEYGLAP$,R,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    If Not(RESTART)
	Eflag=eflag+1
	message$="Cash Disbursement Transactions are in Process Elsewhere "
      Goto L_9060
    End If 
  Else 
    E = 2 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
    Search #75,4,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  End If 
  F$ = COMP Using "4/GLCDDETL#"
  Open #77,F$
End If 
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #2,F$
F$ = R$[56,56],"/A20CR",G8$[1,2] \ Open #3,F$
F$ = R$[53,53],"/A20OI",G8$[1,2] \ Open #4,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Open #5,F$
F$ = R$[39,39],"/A50DB",G8$[1,2] \ Open #6,F$
F$ = R$[40,40],"/A50DD",G8$[1,2] \ Open #7,F$
F$ = R$[43,43],"/A50CR",G8$[1,2] \ Open #17,F$
For I = 12 To 14
  Read L \ Mat Read #1,88,Abs(L);F$;
  If L <= 0 Ropen #I,F$ Else Open #I,F$
Next I
Data "432","448","112"
Rem check summary file
F$ = rec_uac Using "2/APCDTEMP&&&&"
tmp$= "FILES/",f$
I$ = "[1:20] ",tmp$,"!"
Build #47,I$
R[47] = 7 \ Search #47,0,1;I$,R[47],E \ If E Gosub ERR_SEARCH
R[47] = 1 \ Search #47,0,0;I$,R[47],E \ If E Gosub ERR_SEARCH
Try Close #47 Else Rem
Open #47,F$
Mat Read #1,51,10;DEPT; \ Mat Read #1,51,18;C0;
If C0[6] ! dept
  F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #18,F$
  F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #19,F$
  F$ = rec_uac Using "2/APCRTEMP&&&&"
  tmp$= "FILES/",f$
  I$ = "[1:12] ",tmp$,"!"
  Build #50,I$
  R[50] = 2 \ Search #50,0,1;I$,R[50],E \ If E Gosub ERR_SEARCH
  R[50] = 1 \ Search #50,0,0;I$,R[50],E \ If E Gosub ERR_SEARCH
  Try Close #50 Else Rem
  Open #50,F$
  F$ = rec_uac Using "2/APBNKTEMP&&&&"
  tmp$= "FILES/",f$
  I$ = "[1:12] ",tmp$,"!"
  Build #49,I$
  R[49] = 2 \ Search #49,0,1;I$,R[49],E \ If E Gosub ERR_SEARCH
  R[49] = 1 \ Search #49,0,0;I$,R[49],E \ If E Gosub ERR_SEARCH
  Try Close #49 Else Rem
  Open #49,F$
End If 
L_1000: K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
Mat Read #15,R[15],168;U1$;
K2$ = " ",K2$ \ K2$[3,6] = R2$
Search #16,2,1;K2$,R[16],E
If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
L_1100: Rem SELECT POSTING PERIOD
!Print 'CS'; Tab 20;G9$[1,40]
!Print Tab 20;"CHECK REGISTER"
Mat Read #1,0,134;D0;
X$ = D0 Using "######"
X$ = C4[1] Using "&&&&" \ ACPER$ = C4[1] Using "&&&&"

BLDAM0CR: Rem build monthly check register file if needed
F$ = R$[41,41],"/AM0CR",G8$[1,2],X$[1,4]
Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0CR
End If 
Open #8,F$
BLDAM0CD: Rem build monthly check register file if needed
F$ = R$[42,42],"/AM0CD",G8$[1,2],X$[1,4]
Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0CD
End If 
Open #9,F$
If P9$[17,17] <> "Y"
BLDA10IN: Rem build monthly interface file if needed
  F$ = R$[60,60],"/A10IN",G8$[1,2],X$[1,4]
  Call FindF(F$,X2)
  If Not(X2)
    Gosub L_9700
    Goto BLDA10IN
  End If 
  Open #11,F$
End If 
C3 = R2$[1,4] \ X$ = C3 Using "####"
K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Read #15,R[15],6;Q$;
Q[0] = Q$
Read #15,R[15],24;Q$;
Q[1] = Q$
Read #15,R[15],132;Q$;
Q[2] = Q$
Read #15,R[15],96;Q$;
Q[3] = Q$
Read #15,R[15],114;Q$;
Q[4] = Q$
Read #15,R[15],150;Q$;
Q[5] = Q$
Gosub L_8000
Read #1,51,52;AJRNL;
JRNL = AJRNL + 1
If JRNL <= 0 Let JRNL = 1
If JRNL > 999999 Let JRNL = 1
Write #1,51,52;JRNL;
NAME$ = ""
VN = 0
K1$ = " ",K1$
if bankid<>0 let k1$[1,2]=bankid using "##"
!If Err 0 Gosub ERR_ESCAPE
!Print @0,23;'CL';"PRINTING..PLEASE WAIT..";
L_2000: E = 0 \ Search #3,3,1;K1$,R[3],E
If E = 2 Goto L_4000
if bankid<>0
	let tmp3=k1$[1,2]
	if tmp3>bankid goto L_4000:
	if tmp3<>bankid goto L_2000:
endif
If E Gosub ERR_SEARCH
Mat Read #3,R[3],0;N;
Mat Read #3,R[3],8;N1;
Mat Read #3,R[3],14;N2;
Mat Read #3,R[3],18;N1$;
Mat Read #3,R[3],30;N3; \ Mat Read #3,R[3],32;N5;
Mat Read #3,r[3],56; A2CCURRID;              
Mat Read #3,r[3],58; A2CCURRFACT;
If N1 = 9 Goto L_2100
If Not(N1[1]) Gosub L_2400
If Not(N1[1]) Gosub L_2600
If N1[1] = 1 Gosub L_2500
If N1[1] = 1 If D1[2] <> 4 Goto L_2000
If B9 = N3 And N9 = N And NAME$ <> "" And NAME$[1,30] <> D$[1,30] Let F9[7] = 99
L_2100: If B9 If B9 <> N3 Gosub L_4900
If B9 <> N3 Gosub L_3200
If NAME$ <> "" If NAME$[1,30] <> D$[1,30] Gosub L_3000
If N9 <> N
  Gosub L_3000 \ Gosub L_3100
  Gosub CHECKDUP
End If 
If N1 = 9 Goto L_2000
F9[3] = F9[3] + 1
Gosub L_5800
Gosub L_5000
N9 = N
T1[0] = T1[0] + O3[4]
T1[1] = T1[1] + O3[2]
T1[2] = T1[2] + checkamt
if p61$[136,136]="Y" and currvaramt<>0
	let T1[5] = T1[5] + CURRVARAMT
endif
If C0[6] Gosub L_7600
Goto L_2000
L_2400: Rem READ OPEN ITEMS
Mat Read #4,N2,0;O$;
Mat Read #4,N2,6;O1;
Mat Read #4,N2,12;O2;
Mat Read #4,N2,40;O3;
Mat Read #4,N2,112;O4;
Mat Read #4,N2,118;O5;
Mat Read #4,N2,116;oiCURRID;
Mat Read #4,N2,122;oiCURRFACT;
LET GROSSPAYAMT=O3[4]
LET DISCAMT=O3[2]
LET CHECKAMT=O3[4]-O3[2]
currvaramt=0
If p61$[136,136]="Y"
	if oicurrfact<>0 and A2CCURRFACT<>0
		IF oicurrfact<>A2CCURRFACT
			!let currvaramt=fnr(checkamt) ! keep for original checkamt in open item value
			let cnvcu[0]=1
			let cnvca[0]=checkamt
			let cnvca[1]=oicurrfact
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
			let checkamt=cnvca[0]
			let cnvcu[0]=2
			let cnvca[0]=checkamt
			let cnvca[1]=a2ccurrfact
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring down to base currency based upon check print rate
			! let checkamt=FNR(cnvca[0])
			let currvaramt=currvaramt-checkamt
		endif
	endif
endif
Return 
L_2500: Rem READ DIR DISB
Mat Read #6,N2,0;D; \ Mat Read #6,N2,8;D1;
Mat Read #6,N2,14;D$; \ Mat Read #6,N2,144;D2;
Mat Read #6,N2,162;D3;
Mat Read #6,N2,212;D4;
O2[1] = D3[1] \ O2[2] = D3[0]
O3[4] = D2 \ O3[2] = D2[1] \ O2[0] = D \ O4[1] = D4[1]
O5 = D
Return 
L_2600: Rem READ VENDOR FILE *PAYTO VENDOR CODE*
K2$ = O5 Using "######"
E = 0
D$ = "VENDOR NOT ON FILE!!!!"
Search #2,2,1;K2$,R[2],E
If E = 1 Let F9 = 99
If E = 1 Return 
If E Gosub ERR_SEARCH
Mat Read #2,R[2],148;A1$;
D$[1,60] = A1$[1,60]
Return 
L_2700: Rem READ ACTUAL VENDOR CODE
K2$ = O2 Using "######" \ C$ = "VENDOR NOT ON FILE!!!"
Search #2,2,1;K2$,R[2],E \ If E = 1 Let F9 = 99 \ If E = 1 Return 
If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;C$;
Return 
L_3000: Rem PRINT CK TOT
If N9 = 0 If T1 = 0 Goto L_3095
Gosub L_5800
Print #0; Using "######"; Tab 5;"TOTAL FOR CHECK ";N9;
Print #0; Using "------,---.##"; Tab 73;T1[0];
Print #0; Using "----,---.##"; Tab 87;T1[1];
If T1[2] > 999999 Print #0; Using "--------.##"; Tab 100;T1[2]; \ Goto L_3045
Print #0; Using "----,---.##"; Tab 100;T1[2];
L_3045: Print #0; Using "-----,---.##"; Tab 119;T1[3]
Print #0;U9$
Gosub L_5800
For X = 0 To 4
  T9[X] = T9[X] + T1[X]
  T8[X] = T8[X] + T1[X]
  T1[X] = 0
Next X
N9 = 0
L_3095: Return 
L_3100: Rem PRINT CHECK # HEADING
Gosub L_5800
Print #0; Using "######";"CHECK #: ";N;
X2 = O2[1] \ Gosub L_8900
If N1 <> 9 Print #0; Using "###### "; Tab 25;"CHECK DATE: ";P$[1,8]; Tab 60;"PAY TO:  ";O5;D$[1,30];
If N1 = 9 Print #0; Tab 50;"* * *  V O I D  C H E C K  * * *"; \ N9 = 0
F9[1] = F9[1] + 1
Print #0;" "
Print #0;" "
Gosub L_5800
If N1 <> 9 Let NAME$[1,30] = D$[1,30] Else Let NAME$ = ""
Return 
L_3200: Rem PRINT BANK HEADING
A5$ = "BANK NOT ON FILE!!!"
K4$ = N3 Using "##"
Search #14,2,1;K4$,R[14],E \ If Not(E) Goto L_3235
If E Let F9[5] = 99
If E > 1 Gosub ERR_SEARCH
Goto L_3240
L_3235: Mat Read #14,R[14],2;A5$;
L_3240: Gosub L_5800
Print #0; Using "##  ";"BANK #: ";N3;A5$[1,30];
Print #0;" "
B9 = N3
Return 
L_4000: Rem PRINT GRAND TOTALS
Gosub L_4900
Gosub L_5800 \ Print #0;"\15\** TOTALS **";
Print #0; Using "-------,---.##"; Tab 72;T9[0];
Print #0; Using "-------,---.##"; Tab 97;T9[2]
Print #0; Using "-----,---.##"; Tab 86;T9[1];
Print #0; Using "-------,---.##"; Tab 117;T9[3]
Gosub L_4500
D2$ = "ACCTS PAY CREDITMEMOCASH      MANUAL CHKDISC EARN SUSPENSE  "
L = 99 \ F9[4] = 88 \ K1$ = " ",K1$
T9 = 0
If C0[6] Goto L_4600
For X = 1 To 5
  If X = 3 Goto L_4170
  If X = 4 Goto L_4170
  If Not(T[X - 1]) Goto L_4170
  T9 = T9 + T[X - 1]
  Gosub L_5800
  Print #0; Using "########";Q[X - 1];
  Print #0; Tab 16;D2$[X * 10 - 9,X * 10];
  If T[X - 1] < 0 Print #0; Using "##,###,###.##"; Tab 105;T[X - 1]
  If T[X - 1] >= 0 Print #0; Using "##,###,###.##"; Tab 90;T[X - 1]
L_4170: Next X
K4$ = " ",K4$
L_4210: Search #14,3,1;K4$,R[14],E \ If E = 2 Goto L_4300
If E Gosub ERR_SEARCH
Mat Read #14,R[14],2;A5$;
Mat Read #14,R[14],32;A6;
If Not(A6[1]) Goto L_4210
K3$ = " ",K3$ \ K3$[2,9] = A6 Using "########"
Gosub L_8500 \ If E Let F9[6] = 99
Gosub L_5800
Print #0; Tab 2;K3$[2,9]; Tab 16;B$[1,15]; Tab 37;A5$[1,30];
N1$ = "BANK ",K4$
Print #0; Tab 67;N1$;
If A6[1] >= 0 Print #0; Using "##,###,###.##"; Tab 90;A6[1];
If A6[1] < 0 Print #0; Using "##,###,###.##"; Tab 105;A6[1];
T9 = T9 + A6[1]
F9[2] = F9[2] + 1
Print #0;" "
Goto L_4210
L_4300: Gosub L_8600
Goto L_4300
If E Goto L_4400
K3$ = " ",K3$ \ K3$[2,9] = K1$[1,8]
Gosub L_8500 \ If E Let F9[6] = 99
Gosub L_5800
Print #0; Tab 2;K1$[1,8]; Tab 16;B$[1,15]; Tab 37;D$[1,30];
Print #0; Tab 67;N1$[1,12];
Print #0; Using "######"; Tab 82;D[1];
If D7 >= 0 Print #0; Using "##,###,###.##"; Tab 90;D7
If D7 < 0 Print #0; Using "##,###,###.##"; Tab 105;D7
T9 = T9 + D7
F9[2] = F9[2] + 1
Goto L_4300
L_4400: Rem CHECK FOR ERRORS IN JOURNAL
ERRFLAG = 0
If T9<>0
  Print #0;"**** OUT OF BALANCE *****" \ ERRFLAG = 99
  eflag=eflag+1
  Message$=Message$+ "Check Register Out of Balance! " 
End If 
If F9[6]
  Print #0;"***** MISSING G/L ACCOUNT NUMBER ****"; \ ERRFLAG = 99
  eflag=eflag+1\message$=message$+"Missing g/l account number(s)! " 
End If 
If F9[7]
  Print #0;"**** DUPLICATE CHECK NUMBER ****" \ ERRFLAG = 99
  eflag=eflag+1\message$=message$+"Duplicate Check Numbers exist! " 
End If 
If F9[5]
  Print #0;"**** BANK NOT ON FILE *****" \ ERRFLAG = 99
  eflag=eflag+1\message$=message$+"Bank Not On File! "
End If 
If F9[8]
  Print #0;"*** CHECK FOR VENDOR EXISTS IN HISTORY *** " \ ERRFLAG = 99
  eflag=eflag+1\message$=message$+"Check for Vendor already exists in History! " 
End If 
If F9[9]
  Print #0;"**SAME CHECK # ISSUED FOR SAME VENDOR ON MULTIPLE BANKS**" \ ERRFLAG = 99
  eflag=eflag+1\message$=message$+"Same Check# issued for same vendor on multiple banks! " 
End If 
If ERRFLAG
  eflag=eflag+1\message$=message$+"NO UPDATE PERFORMED. "
  Goto OUTEND
End If 
Goto L_6100
L_4500: Rem CHECK LIST SUMMARY
F9[4] = 77 \ L = 99 \ B9 = 0 \ N9 = 0 \ NAME$ = ""
D$ = " ",D$ \ K3$ = " ",K3$ \ N9 = 0 \ T1 = 0 \ T1[1] = 0
L_4515: Search #3,3,1;K3$,R[3],E \ If E = 2 Goto L_4595
If E Gosub ERR_SEARCH
Mat Read #3,R[3],8;N1; \ If N1 = 9 Goto L_4515
Mat Read #3,R[3],0;N; \ Mat Read #3,R[3],14;N2;
Mat Read #3,R[3],30;N3; \ Mat Read #3,R[3],32;N5;
If N9 If N3 <> B9 Gosub L_5400
If B9 If B9 <> N3 Gosub L_5460
If B9 <> N3 Gosub L_3200
If Not(N1[1]) Gosub L_2400 \ If Not(N1[1]) Gosub L_2600
If N1[1] = 1 Gosub L_2500
If NAME$ <> "" If NAME$[1,30] <> D$[1,30] Gosub L_5400 \ N9 = N
If N9 If N9 <> N Gosub L_5400
NAME$[1,30] = D$[1,30] \ VEND = O5
N9 = N \ B9 = N3
CHKDATE = O2[1]
T1 = T1 + checkamt
Rem update cd temp file
KEY47$ = " ",KEY47$
KEY47$[1,2] = N3 Using "##"
KEY47$[3,6] = N Using "######"
KEY47$[7,12] = VEND Using "######"
Search #47,2,1;KEY47$,R[47],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  CDTMP0 = N3
  CDTMP1[0] = N
  CDTMP1[1] = VEND
  CDTMP2[0] = 0
  E = 2 \ Search #47,1,0;KEY47$,R[47],E \ If E Gosub ERR_SEARCH
  Mat Write #47,R[47],0;CDTMP0;
  Mat Write #47,R[47],4;CDTMP1;
  Mat Write #47,R[47],12;CDTMP2;
  Search #47,4,1;KEY47$,R[47],E \ If E Gosub ERR_SEARCH
End If 
Mat Read #47,R[47],12;CDTMP2
CDTMP2 = CDTMP2 + (checkamt)
Mat Write #47,R[47],12;CDTMP2;
Goto L_4515
L_4595: If N9 Or B9
  Gosub L_5400 \ Gosub L_5460
End If 
Return 
L_4600: Rem PRINT BANK DISTRIBUTIONS
K49$ = " ",K49$
L_4610: Search #49,3,1;K49$,R[49],E \ If E = 2 Goto L_4800
If E Gosub ERR_SEARCH
Mat Read #49,R[49],0;BNKTOT
If Not(BNKTOT[0]) Goto L_4610
O4[1] = K49$[3,4] \ K4$ = K49$[1,2]
Search #14,2,1;K4$,R[14],E \ If Not(E) Goto L_4645
A6 = Q[2] \ A5$ = "MISSING BANK" \ Goto L_4655
L_4645: Mat Read #14,R[14],32;A6;
Mat Read #14,R[14],2;A5$;
L_4655: K3$ = " ",K3$ \ K3$[1,9] = A6 Using "#########"
If Not(DEPT) Goto L_4680
K3$[8,9] = O4[1] Using "&&"
Gosub L_8500 \ If Not(E) Goto L_4685
K3$ = " ",K3$ \ K3$[1,9] = A6 Using "#########"
L_4680: Gosub L_8500 \ If E Let F9[6] = 99
L_4685: Gosub L_5800
Print #0; Tab 2;K3$[2,9]; Tab 16;B$[1,15]; Tab 37;A5$[1,30];
N1$ = O4[1] Using "DIV ##"
Print #0; Tab 67;N1$;
If BNKTOT[0] >= 0 Print #0; Using "##,###,###.##"; Tab 90;BNKTOT[0];
If BNKTOT[0] < 0 Print #0; Using "##,###,###.##"; Tab 105;BNKTOT[0];
T9 = T9 + BNKTOT[0]
F9[2] = F9[2] + 1
BNKTOT[1] = K3$[2,9]
Mat Write #49,R[49],0;BNKTOT;
Print #0;""
Goto L_4610
L_4800: Rem DIVISIONAL TOTALS
K50$ = " ",K50$
L_4810: Search #50,3,1;K50$,R[50],E \ If E = 2 Goto L_4300
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT;
O4[1] = K50$[1,2] \ Gosub L_7000
N1$ = O4[1] Using "DIV ##"
For I = 0 To 2
  If Not(DIVTOT[I]) Goto L_4890
  T9 = T9 + DIVTOT[I]
  Gosub L_5800
  K3$ = " ",K3$ \ If I = 0 Let K3$[2,9] = DV1$[2,9]
  If I = 1 Let K3$[2,9] = DV2$[2,9]
  If I = 2 Let K3$[2,9] = DV3$[2,9]
  Gosub L_8500 \ If E Let F9[6] = 99
  Print #0; Tab 2;K3$[2,9];
  Print #0; Tab 16;B$[1,15]; Tab 67;N1$[1,12];
  If DIVTOT[I] < 0 Print #0; Using "##,###,###.##"; Tab 105;DIVTOT[I]
  If DIVTOT[I] >= 0 Print #0; Using "##,###,###.##"; Tab 90;DIVTOT[I]
L_4890: Next I
Goto L_4810
L_4900: Rem PRINT BK TOT
Gosub L_3000
If Not(B9) Goto L_4990
If Not(T8[0] + T8[1] + T8[2] + T8[3]) Goto L_4990
Gosub L_5800
Print #0; Using "##"; Tab 5;"TOTAL FOR BANK ";B9;
Print #0; Using "------,---.##"; Tab 73;T8[0];
Print #0; Using "----,---.##"; Tab 87;T8[1];
If T8[2] > 999999 Print #0; Using "########.##"; Tab 100;T8[2]; \ Goto L_4950
Print #0; Using "----,---.##"; Tab 100;T8[2];
L_4950: Print #0; Using "-----,---.##"; Tab 119;T8[3]
Print #0;U9$
K4$ = B9 Using "##" \ Search #14,2,1;K4$,R[14],E \ If E Goto L_4975
Mat Read #14,R[14],32;A6; \ A6[1] = A6[1] - T8[2]
Mat Write #14,R[14],32;A6;
L_4975: Gosub L_5800
For X = 0 To 4 \ T8[X] = 0 \ Next X
N9 = 0
L_4990: Return 
L_5000: Rem PRINT LINE
If O2 <> O5 And O2 <> VN
  Gosub L_5800 \ Gosub L_2700
  Print #0; Using "######  "; Tab 5;O2;C$[1,30] \ VN = O2
End If 
Print #0; Tab 18;N1$[1,12];
If C0[6] Print #0; Using "###"; Tab 33;O4[1];
If Not(N1[1]) Print #0; Tab 39;A$[O1 * 3 - 2,O1 * 3];
If N1[1] Print #0; Tab 39;A$[D1 * 3 - 2,D1 * 3];
X2 = O2[2] \ Gosub L_8900
Print #0; Tab 45;P$[1,8];
If N1[1] Goto L_5065
X2 = O2[3] \ Gosub L_8900
Print #0; Tab 54;P$[1,8];
X2 = O2[4] \ Gosub L_8900
Print #0; Tab 63;P$[1,8];
L_5065: Print #0; Using "------,---.##"; Tab 73;O3[4];
Print #0; Using "----,---.##"; Tab 87;O3[2];
Print #0; Using "------,---.##"; Tab 98;checkamt;
T[4] = T[4] - O3[2]
If N1[1] Let O1 = D1
If O$[3,3] <> "3" Let T[2] = T[2] - (checkamt)
If O$[3,3] = "3" Let T[3] = T[3] - (checkamt)
If N1[1] Goto L_5160
D6 = O3[4]
If C0[6] Gosub L_7000
If O1 = 2 Goto L_5135
D5$[1,8] = Q[0] Using "########" \ T[0] = T[0] + D6
If C0[6] Let D5$[1,8] = DV1$[2,9]
Goto L_5145
L_5135: D5$[1,8] = Q[1] Using "########" \ T[1] = T[1] + D6
If C0[6] Let D5$[1,8] = DV2$[2,9]
L_5145: If D6 > 99999 Print #0; Using "#######.##"; Tab 113;D5$[1,8]; Tab 121;D6 \ Goto L_5150
Print #0; Using "---,---.##"; Tab 113;D5$[1,8]; Tab 121;D6
L_5150: T1[3] = T1[3] + D6
Return 
L_5160: Gosub L_5700
Return 
If D6 > 99999 Print #0; Using "#######.##"; Tab 112;D5$[1,8]; Tab 120;D6 \ Goto L_5175
Print #0; Using "---,---.##"; Tab 112;D5$[1,8]; Tab 120;D6
L_5175: Gosub L_5800
Gosub L_5715
Return 
If D6 > 99999 Print #0; Using "#######.##"; Tab 112;D5$[1,8]; Tab 120;D6 \ Goto L_5195
Print #0; Using "---,---.##"; Tab 112;D5$[1,8]; Tab 120;D6
L_5195: Goto L_5175
L_5400: Rem PRINT CHECK SUMMARY SECTION
Gosub L_5800
If VEND Print #0; Using "######"; Tab 2;VEND;
Print #0; Tab 13;NAME$[1,30];
X2 = CHKDATE \ Gosub L_8900
Print #0; Tab 46;P$[1,8];
Print #0; Using "######"; Tab 58;N9;
Print #0; Using "##,###,###.##"; Tab 68;T1
T1[1] = T1[1] + T1
N9 = N
T1 = 0
Return 
L_5460: Gosub L_5800
Print #0; Tab 68;"-------------"
Print #0; Tab 50;"  TOTAL";
Print #0; Using "##,###,###.##"; Tab 68;T1[1]
T1[1] = 0
NAME$ = ""
Return 
L_5700: Rem ACCT DISTRIBUTION
K2$ = " ",K2$
K2$[1,5] = N2 Using "#####"
L_5715: E = 0
Search #7,3,1;K2$,R[7],E
If E = 2 Goto L_5770
If E Gosub ERR_SEARCH
X = K2$[1,5]
If X <> N2 Goto L_5770
Mat Read #7,R[7],38;D5$;
Mat Read #7,R[7],46;D6;
T[7] = T[7] + D6
T1[3] = T1[3] + D6
Return 1
L_5770: Rem PRINT #0;""
Return 
L_5800: L = L + 1
If L < 55 Return 
If P Print #0;"\14\";
Print #0;"\15\"; Tab 50;G9$[1,40];
if audonly<>0 print #0;tab 100;"*PREVIEW*";
Print #0; Tab 110;"JOURNAL#";JRNL
P = P + 1
Print #0;D1$;
Print #0; Tab 50;"ACCOUNTS PAYABLE CHECK REGISTER";
Print #0; Tab 110;"PAGE";P
X2 = C4[4] \ Gosub L_8900
Print #0; Tab 50;"POSTING DATE: ";P$[1,8]
If F9[4] = 77 Goto L_6050
If F9[4] = 88 Goto L_6000
Print #0;" "
Print #0; Tab 18;"INVOICE #";
If C0[6] Print #0; Tab 33;"DIV";
Print #0; Tab 39;"TYPE"; Tab 45;"INV DATE"; Tab 54;"DUE DATE"; Tab 63;"DIS DATE";
Print #0; Tab 77;"GROSS PAY";
Print #0; Tab 90;"DISCOUNT      NET PAY";
Print #0; Tab 113;"ACCOUNT#";
Print #0; Tab 125;"AMOUNT";
Print #0;" "
L = 2
Print #0;"\15\";
Return 
L_6000: Print #0; Tab 50;"ACCOUNT DISTRIBUTION LIST"
Print #0;" "
Print #0; Tab 2;"ACCOUNT#"; Tab 16;"DESCRIPTION"; Tab 37;"VENDOR NAME";
If F9 Goto OUTEND
Print #0; Tab 67;"TRANS #"; Tab 82;"CHECK#";
Print #0; Tab 97;"DEBIT"; Tab 112;"CREDIT"
Print #0;" "
L = 3
Return 
L_6050: Print #0; Tab 50;"CHECK REGISTER SUMMARY"
Print #0;" "
Print #0;"VENDOR CODE"; Tab 13;"VENDOR NAME"; Tab 48;"DATE";
Print #0; Tab 58;"CHECK #"; Tab 69;"CHECK AMOUNT"
Print #0;" "
L = 3
Return 
L_6100: Rem UPDATE CHECK REGISTER
Goto L_6120
L_6120: T9 = 0
For X = 0 To 7
  T9 = T9 + T[X]
Next X
If Not(T9) Goto L_6200
eflag=eflag+1
message$=message$+"CHECK REGISTER OUT OF BALANCE!!"
Goto OUTEND
L_6200: ! check
if eflag<>0 goto outend:
Try Close #0 Else Rem
if audonly<>0 goto outend:
L_6250: Rem check register ok
Gosub L_8715
spec[0]=intco                               
spec[1]=c4[0] ! CURRENT/NEXT MONTH
spec[2]=c4[1] ! POSTING PERIOD                              
spec[3]=c4[2] ! POSTING date (mmddyy)                            
spec[4]=c4[3] !  LOGICAL UNIT NUMBER FOR A10IN
SPEC[5]=c4[4]! POSTING DATE YYMMDD
SPEC[6]=jrnl !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
SPEC[7]=525! PROGRAM NUMBER
spec[8]=rec_uac                             
spec[9]=returnstatus 
spec[10]=eflag
for ctr=0 to 7
	spec[11+ctr]=t[ctr]
next ctr
Call "LA525A.dl4",spec[],message$,IntCo,rstr$,e$
!Chain "LA525A"
Rem NOT NEEDED USING COM'S CHAIN  WRITE C4,Q,T
L_7000: Rem LOOKUP DIV TOTAL
K18$ = " ",K18$ \ K18$[1,2] = O4[1] Using "##"
Search #18,2,1;K18$,R[18],E \ If E Goto L_7050
Mat Read #18,R[18],42;DV1$;
Mat Read #18,R[18],54;DV2$;
Mat Read #18,R[18],66;DV3$;
Goto L_7090
L_7050: DV1$ = " ",DV1$ \ DV1$[1,9] = Q[0] Using "#########"
DV2$ = " ",DV2$ \ DV2$[1,9] = Q[1] Using "#########"
DV3$ = " ",DV3$ \ DV3$[1,9] = Q[4] Using "#########"
L_7090: Return 
L_7600: Rem UPDATE DIVISION TOTAL
If Not(C0[6]) Return 
K50$ = " ",K50$ \ K50$[1,2] = O4[1] Using "##"
Search #50,2,1;K50$,R[50],E \ If Not(E) Goto L_7645
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #50,1,0;K50$,R[50],E \ If E Gosub ERR_SEARCH
For X = 0 To 3 \ DIVTOT[X] = 0 \ Next X
Mat Write #50,R[50],0;DIVTOT
Search #50,4,1;K50$,R[50],E \ If E Gosub ERR_SEARCH
L_7645: Mat Read #50,R[50],0;DIVTOT
If N1[1] Goto L_7660
If O1 <> 2 Let DIVTOT[0] = DIVTOT[0] + O3[4]
If O1 = 2 Let DIVTOT[1] = DIVTOT[1] + O3[4]
L_7660: DIVTOT[2] = DIVTOT[2] - O3[2]
Mat Write #50,R[50],0;DIVTOT;
K49$ = " ",K49$ \ K49$[1,2] = N3 Using "##" \ K49$[3,4] = O4[1] Using "##"
Search #49,2,1;K49$,R[49],E \ If Not(E) Goto L_7750
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #49,1,0;K49$,R[49],E \ If E Gosub ERR_SEARCH
For X = 0 To 2 \ BNKTOT[X] = 0 \ Next X
Mat Write #49,R[49],0;BNKTOT;
Search #49,4,1;K49$,R[49],E \ If E Gosub ERR_SEARCH
L_7750: Mat Read #49,R[49],0;BNKTOT
BNKTOT[0] = BNKTOT[0] - (checkamt)
Mat Write #49,R[49],0;BNKTOT;
Return 
L_8000: Rem CLEAR BANKS TOTALS
K4$ = " ",K4$
L_8010: Search #14,3,1;K4$,R[14],E
If E = 2 Return 
Mat Read #14,R[14],32;A6;
A6[1] = 0
Mat Write #14,R[14],32;A6;
Goto L_8010
L_8500: Rem VALIDATION FILE
B$ = "INVALID ACCOUNT#"
E = 0
Search #5,2,1;K3$,R[5],E \ If E = 1 Goto L_8525
If E Gosub ERR_SEARCH
Mat Read #5,R[5],12;B$;
L_8525: Return 
L_8600: E = 0
Search #7,3,2;K1$,R[7],E
If E = 2 Return 1
If E Gosub ERR_SEARCH
Mat Read #7,R[7],0;D5;
Mat Read #6,D5,8;D1;
If D1[2] <> 4 Goto L_8600
Mat Read #6,D5,0;D;
Read #7,R[7],8;D$[1,30]; \ Mat Read #7,R[7],38;D5$;
Mat Read #7,R[7],46;D7; \ Mat Read #7,R[7],54;N1$;
Return 1
L_8700: ! Print @0,23;'CL';"PRESS <CR> TO RETURN TO MENU ";
!Input Len (16384 + 1);""F$
Goto OUTEND
L_8715: Rem VERIFY FILE SIZES
If P9$[17,17] = "Y" Return 
K1$ = " 0" \ Search #15,2,1;K1$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
If R$[60,60] <> " " Goto L_8821
let eflag=eflag+1
let message$="INTERFACE FILE IN USE... TRY LATER."
goto outend:

!Print 'CR RB CL';"INTERFACE FILE IN USE... TRY LATER..." \ Goto L_8700
L_8821: C4[3] = R$[60,60] \ R$[60,60] = " " \ Mat Write #15,R[15],2;R$;
R = Chf(11)
R = R - 1
L_8830: Read #11,R;H$;
If H$[63,63] = "9" If H$[1,1] = "*" Return 
R = R - 1
If R >= 0 Goto L_8830
Eflag=eflag+1
message$="Error In Interface File! "
!Print @0,23;'CL RB';"ERROR IN INTERFACE FILE!!!";
E = 99 \ Gosub ERR_SEARCH
L_8900: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
If X2 = 0 Let P$ = " ",P$ \ Return 
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 

L_9700: Rem build files
!Call "labldfle",ACPER$
Call "labldfle.DL4",ACPER$,e$,IntCo,rstr$
Return 
Stop 
CHECKDUP: Rem check a/p history for duplicate check for same vendor
If N1 = 9 Return 
If N1[1] = 1 Return 
KEYAPD$ = " ",KEYAPD$;KEYAPD$[1,6] = N5 Using "######"
KEYAPD$[7,12] = N[0] Using "######"
KEYAPD$[20,20] = "9"
Search #12,2,1;KEYAPD$,R[12],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Gosub L_5800
  Print #0;"***** Check for Vendor Already Exists in A/P history *****"
  F9[8] = 99
End If 
BANK = N3
KEYAPC$ = " ",KEYAPC$;KEYAPC$[1,2] = N3 Using "##"
SEARCHCASH: Rem search for additional banks
Search #14,3,1;KEYAPC$,R[0],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
BANK = KEYAPC$
KEYA2$[1,2] = BANK Using "##";KEYA2$[3,8] = N[0] Using "######"
KEYA2$[9,14] = N5 Using "######"
KEYA22$ = KEYA2$
Search #3,3,1;KEYA2$,R[0],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
If KEYA2$[1,14] <> KEYA22$[1,14] Goto CHECKMAN
Gosub L_5800
Print #0;"***Check already exists for this vendor on bank ";KEYA2$[1,2];
Print #0;"***"
F9[9] = 99
Return 
CHECKMAN: Rem CHECK FOR MANUAL CHECKS FOR SAME VENDOR
KEYA2$ = " ",KEYA2$;KEYA2$[1,2] = BANK Using "##";KEYA2$[3,8] = "999999"
KEYA2$[9,14] = N[0] Using "######";KEYA22$ = KEYA2$
Search #3,3,1;KEYA2$,R[0],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
If KEYA2$[1,14] <> KEYA22$[1,14] Goto SEARCHCASH
Read #3,R[0],32;PAYVEND;
If PAYVEND <> N5 Goto SEARCHCASH
Gosub L_5800
Print #0;"***Check already exists for this vendor on bank ";KEYA2$[1,2];
Print #0;"***"
F9[9] = 99
Return 

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$
call programdump("/tmp/la525!","")
call programdump()
ReturnStatus=0! need report to print still
Message$=E$
Error 10000                      
Return ! End

If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("/tmp/la525!","")
call programdump()
! goto err_msg ! Error 10000
ReturnStatus=0! need report to print still
Message$=E$
Error 10000
Return ! End

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)

OUTEND: Rem END
Gosub L_8000
Write #1,51,52;AJRNL;
L_9010: Rem exit to clear keyglap file
If P9$[17,17] = "Y"
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,2,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  Search #75,5,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
End If 
L_9060: Rem end reset flag
K2$ = " 0" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
R$[51,51] = "1"
Mat Write #15,R[15],2;R$;
Close 
F$ = rec_uac Using "2/APCDTEMP&&&&"
Call FindF(F$,X2)
If X2<>0
  Kill F$
End If 
If C0[6]<>0
  F$ = rec_uac Using "2/APCRTEMP&&&&"
  Call FindF(F$,X2)
  If X2<>0
    Kill F$
  End If 
  F$ = rec_uac Using "2/APBNKTEMP&&&&"
  Call FindF(F$,X2)
  If X2<>0
    Kill F$
  End If 
End If 
L_9070: ! end Close 
if eflag<>0 let returnstatus=0 ! error
let spec1[9]=returnstatus
!Chain "MX000"
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program
