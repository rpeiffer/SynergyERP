! >>> Program 524ach
!
! description Accounts Payable Check Print - ACH Process
! 
!loadsave -w -n 100,10 -o prog/dxport/524ach.dl4 src/524ach.src 
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.3 OBJECT CODE     Created: OCT  1, 2012  14:39:08
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/la524ach.src (univ2) [mary] {24610}
Rem  Copyright (c) 2012 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!Declare Intrinsic Sub InpBuf,String,VerifyDate
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function OpenFile
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem LA524ACH A/P CKWRITING  - ACH RELEASE ONLY
Rem MODIFIED FOR MULTIPLE BANKS 3/91 - MTK    V4
Rem Last Update: 05/08/97 vst cct102349 removed <esc> option/new error rtn
!If Err 0 Gosub ERR_TRAP
!Chain Read A5,A7$,A8$,A9$,B,C,D,D1,D$,F1,P2$,S,V9,S8
Try
	Dim A7$[67],A8$[96],A9$[78],2%,B[1],C,3%,D,D$[6],2%,F1[2],P2$[50],1%,S,2%,V9[3]
	Dim 1%,A5,S8
	DIM P61$[256],1%,ch_curr,keycurr$[30],3%,rec_curr,1%,currid,3%,currfact,2%,bnkcurrid,1%,ch_apcash, 3%,rec_apcash
DIM 1%, A2CCURRID                
DIM 3%, A2CCURRFACT   
dim 1%,oiCURRID
dim 3%,oiCURRFACT 
Dim KEYVBNK$[50]
Dim 1%,O4,D4,E,F7,F9,G1[2],G3,H1[2],M,M1,O1[2],C0[8]
Dim A5$[30],D$[6],I1$[10]
Dim 2%,A7,G2,G[1],H3[1],H[1],O2[6],V,X,G5,O5,PAY[1],R1,P5,SYSDATE
Dim 3%,H2[2],O3[9]
Dim H$[130],I$[8],K1$[20],K8$[10],K9$[50],R1$[13],K$[10],PAY$[116]
Dim M$[130],O$[3],O1$[12],R$[63],V$[20],V1$[20],2%
Dim P61$[256],KEYAPH$[50],F$[16]
Dim K4$[50]
Dim 2%,VB1,1%,VB2[1],VBROUTING$[8],VBROUTEDIGIT$[2],VBID$[16],VBNAME$[30],VBACCT$[20]
Dim KEYBNK$[30],BANKNAME$[30]
Dim 3%,COID,R[50]
Dim fname$[50],groupid$[1],J$[50],G$[2],K2$[30]
	Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
	Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
	Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
	Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Mat Read #1,61,0;P61$;
If P61$[99,99] <> "Y"
	let eflag=eflag+1
	message$="ACH is Not Available "
	goto outend:
End If 
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
! let open the files here
 LET V$=" 0" \ SEARCH #15,2,1;V$,R[15],E 
 If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '20' Not On File. "
	goto outend:
endif
 IF E GOSUB ERR_SEARCH:                                                    
 MAT  READ #15,R[15],2;R$;                                                 
 IF R$[51,51]<>" " GOTO L_860: 
 If E = 1 
	eflag=eflag+1
	message$="Update In Process Elsewhere. Try Again Later"
	goto outend:
endif
 L_860: ! LET R$[51,51]=" " \ MAT  WRITE #15,R[15],2;R$; 
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G$[1,1] = intco Using "#"
g$[2,2]=groupid$
                                               
                    
                                              
 LET F$=R$[31,31],"/A80VM",G$[1,2] \ OPEN #2,F$                            
 LET F$=R$[53,53],"/A20OI",G$[1,2] \ OPEN #3,F$                            
 LET F$=R$[56,56],"/A20CR",G$[1,2] \ OPEN #5,F$                            
 LET F$=R$[39,39],"/A50DB",G$[1,2] \ OPEN #6,F$                            
 LET F$=R$[43,43],"/A50CR",G$[1,2] \ OPEN #7,F$                            
 MAT  READ #1,88,112;F$; \ OPEN #8,F$        ! APCASH                               
 LET F$=R$[40,40],"/A50DD",G$[1,2] \ OPEN #10,F$                           
V8=0
MAXL = 60 
	Mat Read #1,51,18;C0;
V$ = "20" \ Search #15,2,1;V$,R[15],E
If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '20' Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #15,R[15];R1$;



If R1$[13,13] = "1" 
	eflag=eflag+1
	message$="***CHECKS HAVE ALREADY BEEN PROCESSED. Run and Accept Check Register***"
	Goto L_9050
ENDIF
COID = Intco
Mat Read #1,61,0;P61$;
If P61$[99,99] <> "Y"
  Print @0,23;"ACH is Not Available "
End If 
F$ = "2/VENDBANK" + Str$(COID)
Open #30,F$
CH_VBNK = 30
Mat Read #ctlc,88,432;F$;
Open #31,F$
Mat Read #ctlc,3,172;SYSDATE;
Mat Read #ctlc,51,18;C0;
Call DXget("U_BANKID",tmp$)
A5 = tmp$
K8$ = " ",K8$ \ K8$[1,2] = A5 Using "##"
Search #8,2,1;K8$,R[8],E
If E<>0
	let message$="Bank Not On File "
	let eflag=eflag+1
	goto L_9050:
endif
Mat Read #8,R[8],2;A5$; \ Mat Read #8,R[8],50;A7;
let currid=0
let currfact=0
if p61$[136,136]="Y"
	read #8,R[8],54;bnkcurrid;
	if bnkcurrid<>0
		ch_curr=OpenFile(9712,intCo) \ If Ch_curr = -1 Error 42
		let keycurr$=" ",keycurr$
		let keycurr$[1,4]=bnkcurrid using "####"
		search #ch_curr,2,1;keycurr$,rec_curr,e
		if not(e)
			mat read #ch_curr,rec_curr,0;currid;
			mat read #ch_curr,rec_curr,846;currfact;
		endif
		try close #ch_curr else rem	
	endif	
endif
Call dxget("CHECKDATE",D$) ! passed as MMDDYY
I$ = D$[1,2],"/",D$[3,4],"/",D$[5,6]
Call VerifyDate(I$,I1$,E) 
if e<>0
	let message$="Invalid Date "
	let eflag=eflag+1
	goto L_9050:
endif
I1$ = D$[5,6],D$[1,4]
D1 = I1$
Call dxget("CHECKNUM0",tmp$) ! passed as MMDDYY   
let c=tmp$
if c<=0 or c>=999999
	let message$="Invalid Control Check Number "
	let eflag=eflag+1
	goto L_9050:
endif

L_2100: Rem VERFIY CHECKS FOR NEW CHECK RUN
K4$ = " ",K4$ \ K4$[1,2] = A5 Using "##" \ K4$[3,8] = C Using "######"
Search #5,3,1;K4$,R[5],E
If E = 2 Goto L_3000
X = K4$[1,2] \ If X <> A5 Goto L_3000
F1[1] = K4$[3,8]
If F1[1] = 999999 Goto L_3000
let eflag=eflag+1
let message$="Check Control Already Exists in this Range.  Check Register Needs to Run or Checks Deleted "
goto outend:

L_3000: Rem Start here
! Print 'CR CR';"Processing Ach Payments.......Please Wait........";
R1$[13,13] = "1" \ Mat Write #15,R[15];R1$;
If F7 = 99 Goto L_9000
M1 = 0;VENDCHK = 0
K9$ = "" \ V = 0
L_2030: Search #3,3,1;K9$,R[3],E
If E = 2 
	IF VENDCHK<>0 LET C=C+1
	Goto L_9000
endif
If E Gosub ERR_SEARCH
Gosub L_5200
If O$[1,1] < "2" Goto L_2030
If O$[1,1] > "3" Goto L_2030
If O$[3,3] = "3" Goto L_2030
KEYVBNK$ = " ",KEYVBNK$
KEYVBNK$ = O2 Using "######"
Search #30,2,1;KEYVBNK$,R[CH_VBNK],E
If E <> 0 Goto L_2030
Mat Read #CH_VBNK,R[CH_VBNK],0;VB1;
Mat Read #CH_VBNK,R[CH_VBNK],4;VB2;
Mat Read #CH_VBNK,R[CH_VBNK],8;VBROUTING$;
Mat Read #CH_VBNK,R[CH_VBNK],16;VBROUTEDIGIT$;
Mat Read #CH_VBNK,R[CH_VBNK],18;VBID$;
Mat Read #CH_VBNK,R[CH_VBNK],32;VBNAME$;
Mat Read #CH_VBNK,R[CH_VBNK],64;VBACCT$
If VB2[1] <> A5 Goto L_2030
If VBROUTING$ = "" Goto L_2030
If VBROUTING$[1,5] = "     " Goto L_2030
If VBACCT$ = "" Goto L_2030
If VBACCT$[1,5] = "     " Goto L_2030
O2[6] = O2[4]
O2[1] = D1
Gosub L_5000
O5 = P5 \ Mat Write #3,R[3],118;O5;
If Not(O5) Let O5 = O2
If VENDCHK <> 0 And VENDCHK <> O5
  C = C + 1
End If 
VENDCHK = O5
O2[6] = C
TIEBREAKER = 100
O4 = A5
O5 = P5 \ Mat Write #3,R[3],118;O5;
Gosub L_7100
M = 0 
K1$=" ",K1$
K1$[1,2] = O4 Using "##" ! BANK
K1$[3,8] = O2[6] Using "######" ! CHECK NUMBER
K1$[9,14] = O5 Using "######"  ! VENDOR
K1$[15,17]= M USING "###"
K1$[18,18] = "0"
L_2560: M = M + 1 \ K1$[15,17] = M Using "###"
Search #5,2,1;K1$,R[5],E
If Not(E) Goto L_2560
If E > 1 Gosub ERR_SEARCH
G1[2] = M
Gosub L_6000
Mat Write #3,R[3],12;O2
Mat Write #3,R[3],40;O3 \ Mat Write #3,R[3],112;O4;
O$[1,1] = "4"
Mat Write #3,R[3];O$
If F7 = 99 Goto OUTEND
Goto L_2030
L_5000: M1 = 0 \ V$ = O2[0] Using "######"
Search #2,2,1;V$,R[2],E
If E = 1 
	let eflag=eflag+1
	let message$="VENDOR #"+V$+"NOT ON FILE!!!"
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #2,R[2],148;M$; \ Mat Read #2,R[2],550;P5;
PAY$ = M$
K$ = P5 Using "######"
Search #2,2,1;K$,R1,E \ If Not(E) Goto L_5065
P5 = O2[0] \ Return 
L_5065: Mat Read #2,R1,148;PAY$;
Return 
L_5200: Mat Read #3,R[3],0;O$;
Mat Read #3,R[3],6;O1; \ Mat Read #3,R[3],12;O2;
Mat Read #3,R[3],40;O3; \ Mat Read #3,R[3],100;O1$;
Mat Read #3,R[3],112;O4; \ Mat Read #3,R[3],118;O5;
Mat Read #3,r[3],116;oiCURRID;
Mat Read #3,r[3],122;oiCURRFACT;
Return 
L_6000: Rem INSERT IN A20CR
Search #5,2,1;K1$,R[5],E \ If E = 1 Goto L_6010
If E<>0 Gosub ERR_SEARCH
If G1[0] = 9 Return 
let eflag=eflag+1
let message$="Duplicate Transaction On Check# "+k1$[3,8]
goto outend:
return
L_6010: E = 2 \ Search #5,1,0;K1$,R[5],E
If E Gosub ERR_SEARCH
Gosub L_7060
L_6030: Search #5,4,1;K1$,R[5],E
let totrec=totrec+1
If Not(E) Return 
If E>1 gosub err_search: 
Mat Read #5,R[5],0;G; \ Mat Read #5,R[5],8;G1;
Mat Read #5,R[5],14;G2; \ Mat Read #5,R[5],18;O1$;
Mat Read #5,R[5],30;G3; \ Mat Read #5,R[5],32;G5;
Mat Read #5,r[5],56; A2CCURRID;              
Mat Read #5,r[5],58; A2CCURRFACT;
Return 

L_7060: Mat Write #5,R[5],0;G; \ Mat Write #5,R[5],8;G1;
Mat Write #5,R[5],14;G2; \ Mat Write #5,R[5],18;O1$;
Mat Write #5,R[5],30;G3; \ Mat Write #5,R[5],32;G5; 
Mat Write #5,r[5],56; A2CCURRID;              
Mat Write #5,r[5],58; A2CCURRFACT;
Return 
L_7100: G = O2[6] \ G[1] = O2[0]
G3 = O4 \ G5 = O5
G1[0] = O1 \ G1[1] = 0
G1[2] = M1 \ G2 = R[3] 
let A2CCURRID=0          
let A2CCURRFACT=0
if p61$[136,136]="Y" and currid<>0 and currfact<>0
	let a2ccurrid=currid
	let a2ccurrfact=currfact
endif
! Return 
return

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

L_9000: Rem write out check number
V$ = A5 Using "##" \ Search #8,2,1;V$,R[8],E
If E Gosub ERR_SEARCH
Read #8,R[8],50;A7
A7 = C
Write #8,R[8],50;A7;
goto outend
OUTEND: Rem END
L_9050: V$ = " 0" \ Search #15,2,1;V$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$; \ R$[51,51] = "1" \ Mat Write #15,R[15],2;R$;
V$ = "20" \ Search #15,2,1;V$,R[15],E
If not(e) 
	Mat Read #15,R[15];R1$;
	if r1$[13,13]="1"
		let k4$=" ",k4$
		search #5,3,1;k4$,r[5],e
		if e=2 ! non found
			let r1$[13,13]="0"
			mat write #15,r[15];r1$;
		endif
	endif
endif
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no Ach Transactions available to process"
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totrec)+" Manual Check Transaction(s) Processed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
