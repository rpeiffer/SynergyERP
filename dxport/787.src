! >>> Program 787
!
! description  Work Measurement Report 
! loadsave -w -n 100,10 -o prog/dxport/787.dl4 src/787.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
! 
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 17, 2004  09:47:03
Rem /w/papermaster/r2002//usr/acct/jcs/work/custom/acme/mx787.src (univ2) [jcs] {02661}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX787 - USER WORK MEASUREMENT REPORT
Rem ERG SPECS FOR ACME - CCT 175576
Rem LAST UPDATE: 05/17 - change to use date directory (dir 1)
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time
!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
Dim K1$[60],K2$[60],K3$[60],K4$[60],K5$[60],K9$[60]
Dim LT0$[56],LT1$[6],A$[156],UA1$[40],UM$[4]
Dim DFLTRLOC$[6],ANS$[20],X$[20],CO$[30],ADATE$[8],STME$[30]
Dim RETVAL$[512],P9$[50],P60$[50],P61$[256]
Dim SPROD$[12],EPROD$[12],SUSER$[10],EUSER$[10]
Dim SLOC$[6],ELOC$[6],USECODE$[10],HUCODE$[10]
Dim J$[60],J0$[10],J1$[50],J4$[60],J5$[60],J7$[78]
Dim 1%,WHSE,RASL[5],LT1[3],PRONTO[1],PFU1[20]
Dim 1%,CNVTU[2],X1[9],V9[2],SHOUNITS,TRTYPE,SORTBY,DETL
Dim 2%,B[24],LT3[1],JDATE[5],X2[9],DT3[1]
Dim 4%,J1
Dim 3%,WHMISC[6],PFU2[6],A[33],A1[7],NUMREC,QTY,PALLETS
Dim 3%,LT2[5],AMOUNT,CNVTA,X3[9],R[99],TOTFLD[20]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[1500],tmp1$[100],tmp2$[100],tmp3$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
For X1 = 2 To 6
  Read X2 \ If X2 = -1 Goto NXTFLE
  Read #1,88,X2;X$[1,16];
  Ropen #X1,X$
NXTFLE: Next X1
Data "2512","1792","1744","-1","1728"
Open #5,"cntrl/usercntrl"
Mat Read #1,3,0;CO$;
Mat Read #1,0,100;ADATE$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
!If P9$[41,41] = "N" Goto NORASL
!If P9$[41,41] = "N" let e$ = "You are not using ''rasl'' - this selection invalid" \ error 10000
!RASL = 1
!Mat Read #1,69,52;DFLTRLOC$;
!If Not(RASL) Or DFLTRLOC$[1,1] = "" Or DFLTRLOC$[1,3] = "   " Let DFLTRLOC$ = "STOCK "
!!!
If Err 0 Let X2 = Spc(8)
X2 = 0 \ X3 = Chf(0)
If Err 0 Gosub ERR_TRAP
SCRN = 0 \ If X2 Let SCRN = 1
V9[2] = 60 \ If SCRN Let V9[2] = 20
J8 = X2
!
!!RETVAL$ = " ",RETVAL$
!Call "PROGDFLT","787","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$[1,2] = " 1"
!  RETVAL$[3,14] = "            "
!  RETVAL$[15,26] = "}}}}}}}}}}}}"
!  RETVAL$[27,36] = "          "
!  RETVAL$[37,46] = "}}}}}}}}}}"
!  RETVAL$[47,52] = DFLTRLOC$
!  RETVAL$[53,58] = DFLTRLOC$
!  RETVAL$[59,59] = "1"
!  RETVAL$[60,60] = "3"
!  RETVAL$[61,61] = "1"
!  RETVAL$[62,62] = "3"
!End If 
!WHSE = RETVAL$[1,2]
!SPROD$ = RETVAL$[3,14];EPROD$ = RETVAL$[15,26]
!SUSER$ = RETVAL$[27,36];EUSER$ = RETVAL$[37,46]
!SLOC$ = RETVAL$[47,52];ELOC$ = RETVAL$[53,58]
!SHOUNITS = RETVAL$[59,59];TRTYPE = RETVAL$[60,60]
!DETL = RETVAL$[61,61];SORTBY = RETVAL$[62,62]
!WHSE =  " 1"
!SPROD$ = "            ";EPROD$ = "}}}}}}}}}}}}"
!SUSER$ = "          ";EUSER$ = "}}}}}}}}}}"
!SLOC$ = DFLTRLOC$;ELOC$ = DFLTRLOC$
!SHOUNITS = "1";TRTYPE = "3"
!DETL = "1";SORTBY = "3"
!
RASL = 1
Mat Read #1,69,52;DFLTRLOC$;
If Not(RASL) Or DFLTRLOC$[1,1] = "" Or DFLTRLOC$[1,3] = "   " Let DFLTRLOC$ = "STOCK "
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If P9$[41,41] = "N" let e$ = "You are not using ''rasl'' - this selection invalid" \ error 10000
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"787",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("WHSE",tmp$) \ WH = tmp$
call dxget("SCODE",SPROD$) \ SPROD$ = SPROD$,Blank$
call dxget("ECODE",EPROD$) \ EPROD$ = EPROD$,EndParam$
call dxget("SUSER",SUSER$) \ SUSER$ = SUSER$,Blank$!!
call dxget("EUSER",EUSER$) \ EUSER$ = EUSER$,EndParam$!!
call dxget("SLOC",SLOC$) \ if SLOC$ = "" let SLOC$ = DFLTRLOC$ else SLOC$ = SLOC$,Blank$
call dxget("ELOC",ELOC$) \ if ELOC$ = "" let ELOC$ = DFLTRLOC$ else ELOC$ = ELOC$,Blank$
call dxget("SDATE",tmp1$)
call dxget("EDATE",tmp2$)
call dxget("SHOUNITS",tmp$) \ SHOUNITS = tmp$ !drop list 123
call dxget("TRTYPE",tmp$) \ TRTYPE = tmp$ !drop list 123
call dxget("DETL",tmp$) \ if tmp$ = "1" let DETL = 0 else DETL = 1 !!drop list 
call dxget("SORT",tmp$) \ SORTBY = tmp$  !!drop list 
!
! verify warehouse
WHSE = WH
If WH <= 0 Or WH > 99 let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
!
Call "CHKWRASL",WH,RASL[]
If Not(RASL) let e$ = "That Warehouse is not using ''RASL''" \ error 10000
!
! verify product
If EPROD$ < SPROD$ LET  e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
! verify user
If EUSER$ < SUSER$ LET  e$ = "Invalid ending user code, must be >= than starting user code!" \ error 10000
!
! verify location
If ELOC$ < SLOC$ LET  e$ = "Invalid ending location, must be >= than starting location!" \ error 10000
!
! verify starting date
X2 = tmp1$
If X2 <= 0 let e$ = "Invalid starting date!" \ error 10000
X$ = X2 Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4] \ X$ = tmp1$
Call DateToJulian(1,X$,X$,E) 
If E let e$ = "Invalid starting date!" \ error 10000
X2 = X$[1,5]
JDATE[0] = X2
!
! verify ending date
X2 = tmp2$
If X2 <= 0 let e$ = "Invalid ending date!" \ error 10000
X$ = X2 Using "&&&&&&"
tmp2$ = X$[5,6],X$[1,2],X$[3,4] \ X$ = tmp2$
Call DateToJulian(1,X$,X$,E)
If E let e$ = "Invalid ending date!" \ error 10000
X2 = X$[1,5]
JDATE[1] = X2
If JDATE[1] < JDATE[0] let e$ = "Invalid ending date, must be >= starting date!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!If TRTYPE < 1 Or TRTYPE > 3 Let TRTYPE = 3
!If SORTBY < 1 Or SORTBY > 3 Let SORTBY = 3
!!Gosub DISP_SCRN
!!Gosub DISP_DATA
!!Gosub FLD5!!!!!!!!!!!!
!!Goto FINALQ
!!!
!FINALQ: Rem "final
!Print @0,22;'CE';"SELECT  #: field  R: reenter all  S: save defaults  P: print  E: exit  ";
!Input Len 16384 + 2;""ANS$ \ Call String(1,ANS$)
!Print @0,22;'CE';
!If ANS$ = "E" Goto OUTEND
!If ANS$ = "R" Goto EDT_ALL
!If ANS$ = "P" Goto START_REPORT
!If ANS$ = "S" ! "defaults save
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all   U: user access only  <CR>: do not save  ";
!  Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
!  If ANS$ = "" Print @0,22;'CL'; \ Goto FINALQ
!  If ANS$ <> "A" And ANS$ <> "U" Goto ASK_SAVE
!  If ANS$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "Progdfltw","787","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL';
!  Goto FINALQ
!End If 
!FLD = ANS$
!If FLD > 1 And FLD < 10 Gosub EDT_FLDS
!Goto FINALQ
!EDT_ALL: Rem "
!For FLD = 1 To 7
!  Gosub EDT_FLDS
!Next FLD
!Goto FINALQ
!EDT_FLDS: Rem "
!On FLD Gosub FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,FLD7,FLD8,FLD9
!Return 
!!
!!FLD1: Rem "warehouse
!!J0$ = "30000220 2";J1 = WHSE
!!J5$ = "Enter the Warehouse to report on"
!!Gosub ISINPUT
!!If J1 <= 0 Or J1 > 99 Goto FLD1
!!WH = J1
!!Call "CHKWRASL",WH,RASL[]
!!If Not(RASL)
!  J7$ = "That Warehouse is not using ''RASL''"
!  Gosub ISERRMSG
!  Goto FLD1
!End If 
!!WHSE = J1
!!RETVAL$[1,2] = WHSE Using "##"
!!Return 
!!FLD2: Rem "Prodrang
!!J0$ = "2 001224 4";J1$ = SPROD$
!!J5$ = "Enter the starting Product Code"
!!Gosub ISINPUT
!!SPROD$ = J$[1,12]
!!FLD2E: Rem "ending
!!J0$ = "2 001242 4";J1$ = EPROD$
!!J5$ = "Enter the ending Product Code"
!!Gosub ISINPUT
!If J$[1,12] < SPROD$
!  J7$ = "INVALID PRODUCT CODE RANGE!"
!  Gosub ISERRMSG
!  Goto FLD2E
!End If 
!!EPROD$ = J$[1,12]
!!RETVAL$[3,14] = SPROD$
!!RETVAL$[15,26] = EPROD$
!!Return 
!!FLD3: Rem "User Start/End
!!J0$ = "2 001024 5";J1$ = SUSER$
!!J5$ = "Enter the starting User Code"
!!Gosub ISINPUT
!!SUSER$ = J$[1,10]
!!FLD3E: Rem "ending
!!J0$ = "2 001042 5";J1$ = EUSER$
!!J5$ = "Enter the ending User Code"
!!Gosub ISINPUT
!If J$[1,10] < SUSER$
!  J7$ = "INVALID USER CODE RANGE!"
!  Gosub ISERRMSG
!  Goto FLD3E
!End If 
!!EUSER$ = J$[1,10]
!!RETVAL$[27,36] = SUSER$
!!RETVAL$[37,46] = EUSER$
!!Return 
!!FLD4: Rem "location range
!!J0$ = "2 000624 6";J1$ = SLOC$
!!J5$ = "Enter the starting location for report"
!!Gosub ISINPUT
!!SLOC$ = J$[1,6]
!!FLD4E: Rem "ending
!!J0$ = "2 000642 6";J1$ = ELOC$
!!!J5$ = "Enter the ending location for report"
!!!Gosub ISINPUT
!If J$[1,6] < SLOC$
!  J7$ = "INVALID LOCATION RANGE!"
!  Gosub ISERRMSG
!  Goto FLD4E
!End If 
!ELOC$ = J$[1,6]
!RETVAL$[47,52] = SLOC$
!RETVAL$[53,58] = ELOC$
!!Return 
!!FLD5: Rem "date range
!!X2 = JDATE[0];DT3[0] = X2 \ If X2 Gosub JUL2YMD
!!J0$ = "50000624 7";J1 = DT3[0]
!!J5$ = "Enter the starting date of transactions (mmddyy)"
!!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto FLD5
!!JDATE[0] = X2
!!FLD5E: Rem "ending
!X2 = JDATE[1];DT3[0] = X2 \ If X2 Gosub JUL2YMD
!J0$ = "50000642 7";J1 = DT3[0]
!J5$ = "Enter the ending date of transactions (mmddyy)"
!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto FLD5E
!If X2 < JDATE[0]
!  J7$ = "INVALID DATE RANGE!"
!  Gosub ISERRMSG
!  Goto FLD5E
!End If 
!!JDATE[1] = X2
!!Return 
!!FLD6: Rem "quantity on report
!!J0$ = "30000152 9";J1 = SHOUNITS
!!J5$ = "Enter 1 2 or 3"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 3 Goto FLD6
!!SHOUNITS = J1
!!RETVAL$[59,59] = Str$(J1)
!!Return 
!!FLD7: Rem "trans type wanted (choice of 1 or 10/28)
!!J0$ = "3000012410";J1 = TRTYPE
!!J5$ = "Enter  1: 774 moves  2: PO receipts  3: Both"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 3 Goto FLD7
!!TRTYPE = J1
!!RETVAL$[60,60] = Str$(J1)
!!Gosub SHOTRTYPE
!!Return 
!!FLD8: Rem "Report Type
!!J0$ = "3000012411";J1 = DETL + 1
!!J5$ = "Enter  1: Summary  2: Detail"
!Gosub ISINPUT
!If J1 < 1 Or J1 > 2 Goto FLD8
!DETL = J1 - 1
!RETVAL$[61,61] = Str$(DETL)
!If DETL Print @30,11;"DETAIL";'CL'; Else Print @30,11;"SUMMARY";'CL';
!!Return 
!!FLD9: Rem "Sort the report by
!!J0$ = "3000012412";J1 = SORTBY
!!J5$ = "Sort by User and  1: product  2: date  3: location"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 3 Goto FLD9
!!SORTBY = J1
!!RETVAL$[62,62] = Str$(J1)
!!Gosub SHOSORT
!Return 
!
if j8 
  tmp$ = "USER NUMBER",fdel$,"USER NAME",fdel$
  If DETL
    tmp$ = tmp$,"TRN DATE",fdel$,"ITEM CODE",fdel$
    tmp$ = tmp$,"DESCRIPTION",fdel$,"LOC.",fdel$
    tmp$ = tmp$,"TP",fdel$,"QUANTITY",fdel$,"U/M",fdel$
    if SHOUNITS <> 1 let tmp$ = tmp$,"PALLETS",fdel$
  Else 
    If TRTYPE = 1 Or TRTYPE = 3 ! "warehouse xfers
      tmp$ = tmp$,"TOTAL TP 28 TRANSACTIONS", fdel$
	  tmp$ = tmp$, "TOTAL TP 28 QUANTITY" ,fdel$
	End if
	If TRTYPE = 2 Or TRTYPE = 3 ! "po receipts
      tmp$ = tmp$,"TOTAL PO IN TRANSACTIONS",fdel$
	  tmp$ = tmp$, "TOTAL PO IN QUANTITY",fdel$
	End if
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
START_REPORT: Rem "and we're off
!!If Err 0 Gosub ERR_ESCAPE
!!Print @0,22;'CE';"SORTING, PLEASE WAIT  "
JDATE[2] = JDATE[0] - 20
JDATE[3] = JDATE[1] + 30
K9$ = " ",K9$
CLR_SORT: Rem "
Search #9,3,1;K9$,R[9],E
If E = 2 Goto STRT_SORT
Search #9,5,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 787 sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",E," keyval (k$)=",K9$ \error 10000
Goto CLR_SORT
!
STRT_SORT: Rem "thru on accept date range ! "was product range
If TRTYPE < 1 Or TRTYPE > 3 Let TRTYPE = 3
If SORTBY < 1 Or SORTBY > 3 Let SORTBY = 3
K1$ = " ",K1$ \ NUMREC = 0 \ NUMFND = 0
K1$[1,5] = JDATE[2] Using "#####"
INVT_LOOP: Rem "thru the INVTrans file
Search #2,3,1;K1$,R[2],E 
If E = 2 Goto STRT_PRINT
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 250))
!  Print @40,22;NUMREC;LT0$[1,12];
!  Print @40,23;"NUMBER FOUND=";NUMFND;
!End If 
X2 = K1$[1,5] \ If X2 > JDATE[3] Goto STRT_PRINT
Gosub READ_INVTRAN
If LT0$[1,12] < SPROD$ Goto INVT_LOOP
If LT0$[1,12] > EPROD$ Goto INVT_LOOP
If LT1[1] <> WHSE Goto INVT_LOOP
If LT1$[1,6] < SLOC$ Or LT1$[1,6] > ELOC$ Goto INVT_LOOP
If LT2[0] < JDATE[0] Or LT2[0] > JDATE[1] Goto INVT_LOOP
If LT1[0] <> 1 And LT1[0] <> 10 And LT1[0] <> 28 Goto INVT_LOOP
If TRTYPE = 1 ! "whse xfers only
  If LT1[0] <> 10 And LT1[0] <> 28 Goto INVT_LOOP
End If 
If TRTYPE = 2 ! "PO Receipts only
  If LT1[0] <> 1 Goto INVT_LOOP
End If 
R[5] = LT1[2]
If PRONTO[0] And PRONTO[1] ! "RF received?
  R[5] = PRONTO[1]
End If 
If R[5] > 0 And R[5] < Chf(5)
  Mat Read #5,R[5],260;UA1$;
  USECODE$ = UA1$[1,10]
Else 
  USECODE$ = "SUPER USER"
  If R[5] > 0 Let USECODE$ = "PORT# " + Str$(R[5]) + "     "
End If 
If USECODE$[1,1] = "" Or USECODE$[1,6] = "      " Goto INVT_LOOP
If USECODE$ < SUSER$ Or USECODE$ > EUSER$ Goto INVT_LOOP
If SORTBY = 3 ! "original report sort
  K9$ = " ",K9$
  K9$[1,10] = USECODE$;K9$[11,16] = LT1$[1,6]
  K9$[17,22] = LT2[0] Using "######"
  K9$[23] = K1$
End If 
If SORTBY = 1 ! "sort by user/product/location/transdate
  K9$ = " ",K9$;K9$[1,10] = USECODE$;K9$[11,22] = LT0$[1,12]
  K9$[23,28] = LT1$[1,6]
  K9$[29] = K1$
End If 
If SORTBY = 2 ! "sort by user and Transdate
  K9$ = " ",K9$;K9$[1,10] = USECODE$
  K9$[11,16] = LT2[0] Using "######";K9$[17,22] = LT1$[1,6]
  K9$[23] = K1$
End If 
Search #9,4,1;K9$,R[2],E 
If E Let e$ = "syserrorfile 787 sortfile mode (m)=4 keyno (k)=1 r=",R[2]," e=",e," keyval (k$)=",K9$ \error 10000
NUMFND = NUMFND + 1
Goto INVT_LOOP
!
STRT_PRINT: Rem "and we're printing now!
!!Print @0,22;'CE';"PRINTING, PLEASE WAIT"
!!If Err 0 Gosub ERR_ESCAPE
!!If SCRN Print 'CS';
NUMREC = 0 \ V9[1] = 999 \ V9[0] = 0
K9$ = " ",K9$;HUCODE$ = ""
SFLE_LOOP: Rem "
Search #9,3,1;K9$,R[2],E 
If E = 2 Goto RPTDONE
Gosub READ_INVTRAN
NUMREC = NUMREC + 1
!If Not(SCRN)
!  If Not(Fra(NUMREC / 250)) Print @40,22;'CL';NUMREC;K9$[1,16]
!End If 
If HUCODE$ = "" Let HUCODE$ = K9$[1,10]
If HUCODE$ <> K9$[1,10] Gosub USERTTL
HUCODE$ = K9$[1,10]
K1$ = " ",K1$;K1$ = HUCODE$
If HUCODE$ <> "SUPER USER"
  Search #5,2,1;K1$,R[5],E !!\ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Mat Read #5,R[5],260;UA1$;
  Else 
    UA1$ = " ",UA1$
    UA1$[21,36] = "USER NOT ON FILE"
  End If 
Else 
  UA1$ = " ",UA1$
  UA1$[21,40] = "SYSTEM ADMINISTRATOR"
End If 
K2$ = " ",K2$;K2$ = LT0$[1,12]
Search #3,2,1;K2$,R[3],E 
If E = 1 Goto SFLE_LOOP
Mat Read #3,R[3],0;A$;
Mat Read #3,R[3],156;B;
Mat Read #3,R[3],256;A;
Mat Read #3,R[3],460;A1;
Mat Read #3,R[3],512;PFU1;
Mat Read #3,R[3],554;PFU2;
K3$ = " ",K3$;K3$ = K2$
K3$[13] = WHSE Using "##"
Search #4,2,1;K3$,R[4],E 
If Not(E)
  Mat Read #4,R[4],800;WHMISC;
Else 
  WHMISC[4] = 0;WHMISC[5] = 0
End If 
Gosub PRNT_HEADER
Gosub CONV_DETAIL
If DETL ! "wants report detail
  Gosub PRNT_DETAIL
End If 
TOTIT: Rem "total for user
If LT1[0] = 28 ! "whse xfers (only 28's - xfer out?)
  TOTFLD[1] = TOTFLD[1] + 1
  TOTFLD[2] = TOTFLD[2] + Abs(QTY)
  TOTFLD[3] = TOTFLD[3] + 1
  TOTFLD[4] = TOTFLD[4] + Abs(QTY)
End If 
If LT1[0] = 1 ! "po Receipts
  TOTFLD[5] = TOTFLD[5] + 1
  TOTFLD[6] = TOTFLD[6] + Abs(QTY)
  TOTFLD[7] = TOTFLD[7] + 1
  TOTFLD[8] = TOTFLD[8] + Abs(QTY)
End If 
Goto SFLE_LOOP
!
READ_INVTRAN: Rem "
Mat Read #2,R[2],0;LT0$;
Mat Read #2,R[2],56;LT1;
Mat Read #2,R[2],64;LT2;
Mat Read #2,R[2],100;LT1$;
Mat Read #2,R[2],106;LT3;
Mat Read #2,R[2],114;PRONTO;
Return 
!
!!DISP_SCRN: Rem "
!Print 'CS ED';@0,0;"-MX787-";
!Print @25,0;"WORK MEASUREMENT REPORT"
!Print 'BD';
!Print @4,2;"Warehouse";
!Print @25,3;'BR';"STARTING";@42,3;"ENDING";'ER';
!Print 'BD';
!Print @4,4;"PRODUCT CODE";
!Print @4,5;"USER CODE";
!Print @4,6;"LOCATION";
!Print @4,7;"TRANS DATE";
!Print @4,9;"QUANTITY AS: 1-Stocking U/M  2-Pallets  3-Both";
!Print @4,10;"TRANS TYPES";
!Print @4,11;"REPORT TYPE";
!Print @4,12;"SORT BY";
!Print 'ED';
!Print @0,2;" 1> ";@0,4;" 2> ";@0,5;" 3> ";
!Print @0,6;" 4> ";@0,7;" 5> ";@0,9;" 6> ";
!Print @0,10;" 7> ";@0,11;" 8> ";@0,12;" 9> ";
!!Return 
!!DISP_DATA: Rem "current data
!Print 'ED ER';
!Print Using "##";@20,2;WHSE;
!Print @24,4;SPROD$;@42,4;EPROD$;
!Print @24,5;SUSER$;@42,5;EUSER$;
!Print @24,6;SLOC$;@42,6;ELOC$;
!Print @52,9;Str$(SHOUNITS);
!Print @24,10;Str$(TRTYPE); \ Gosub SHOTRTYPE
!Print @24,11;Str$(DETL + 1);
!!If DETL Print @30,11;"DETAIL";'CL'; Else Print @30,11;"SUMMARY";'CL';
!!!Print @24,12;Str$(SORTBY); \ Gosub SHOSORT
!If JDATE[0]
!  X2 = JDATE[0] \ Gosub JUL2DATE
!  Print @24,7;X$;
!End If 
!If JDATE[1]
!  X2 = JDATE[1] \ Gosub JUL2DATE
!  Print @42,7;X$;
!End If 
!!Return 
!!SHOTRTYPE: Rem "show selection text
!!!Print @30,10;'CL';
!If TRTYPE = 1 Print "WAREHOUSE XFER IN/OUT (774 MOVES)";
!If TRTYPE = 2 Print "PO RECEIPTS IN";
!If TRTYPE = 3 Print "BOTH  WHSE XFERS AND PO RECEIPTS";
!!Return 
!!SHOSORT: Rem "sorted by text
!Print @30,12;'CL';
!If SORTBY = 1 Print "USER / PRODUCT CODE"
!If SORTBY = 2 Print "USER / TRANSACTION DATE"
!If SORTBY = 3 Print "USER / LOCATION"
!!Return 
!
CONV_DETAIL: Rem "
QTY = 0;PALLETS = 0
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
CNVTA = LT2[2]  \ Gosub CONVERT
QTY = FNR(AMOUNT)
If SHOUNITS > 1 ! "want pallets / also
  If WHMISC[4] And WHMISC[5]
    PALLETS = FNR(QTY / (WHMISC[4] * WHMISC[5]))
  End If 
End If 
If LT1[0] > 14 Let QTY = 0 - QTY;PALLETS = 0 - PALLETS
UM$ = " ",UM$;UM$ = "ERR."
If PFU1[8] > 0 Read #6,PFU1[8],10;UM$;
If PFU1[8] = -1 Let UM$ = "CWT "
If PFU1[8] = -2 Let UM$ = "LOT "
If PFU1[8] = -3 Let UM$ = "LB  "
Return 
!
USERTTL: Rem "User totals
If V9[1] + 3 > V9[2] ! "too many lines
  V9[1] = 999 \ Gosub PRNT_HEADER
End If 
!
if J8 !!!xml
  if not(DETL)
	tmp$ = HUCODE$ ,fdel$
    tmp$ = tmp$,UA1$[21,40] ,fdel$
    If TRTYPE = 1 Or TRTYPE = 3 ! "warehouse xfers
       tmp$ = tmp$, TOTFLD[1] Using "---------####",fdel$
       tmp$ = tmp$, TOTFLD[2] Using "---------#.##",fdel$
    End If
	If TRTYPE = 2 Or TRTYPE = 3 ! "po receipts
      tmp$ = tmp$ ,TOTFLD[5] Using "---------####",fdel$
	  tmp$ = tmp$,TOTFLD[6] Using "---------#.##",fdel$
	End if
	call addtostr(e$,rstr$,tmp$+rdel$)
  End If
Else!!
  If TRTYPE = 1 Or TRTYPE = 3 ! "warehouse xfers
    Print #0;" "
    Print #0; Tab 50;"TOTAL TP 28 TRANSACTIONS";
    Print #0; Using "---------####"; Tab 75;TOTFLD[1]
    Print #0; Tab 50;"TOTAL TP 28 QUANTITY";
    Print #0; Using "---------#.##"; Tab 75;TOTFLD[2]
  End If 
  If TRTYPE = 2 Or TRTYPE = 3 ! "po receipts
    Print #0;" "
    Print #0; Tab 50;"TOTAL PO IN TRANSACTIONS";
    Print #0; Using "---------####"; Tab 75;TOTFLD[5]
    Print #0; Tab 50;"TOTAL PO IN QUANTITY";
    Print #0; Using "---------#.##"; Tab 75;TOTFLD[6]
  End If 
End If!!!
TOTFLD[1] = 0;TOTFLD[2] = 0;TOTFLD[5] = 0;TOTFLD[6] = 0
V9[1] = 999
Return 
!
PRNT_DETAIL: Rem "
X2 = LT2[0] \ Gosub JUL2DATE
if j8
  if DETL
    tmp$ = HUCODE$ ,fdel$
    tmp$ = tmp$,UA1$[21,40] ,fdel$
    tmp$ = tmp$,X$,fdel$!!trn date
    tmp$ = tmp$,LT0$[1,12],fdel$  !item code
    tmp$ = tmp$,A$[9,38],fdel$ !description 1
    tmp$ = tmp$,LT1$[1,6],fdel$  !!loc
    tmp$ = tmp$,LT1[0] Using "##",fdel$ !!tp
    If SHOUNITS <> 2 Or PALLETS = 0
      tmp$ = tmp$, QTY Using "---------#.## ",fdel$,UM$,fdel$
    else 
      tmp$ = tmp$,"",fdel$,"",fdel$
    End If 
    If SHOUNITS >= 2 And PALLETS
      tmp$ = tmp$,PALLETS Using "-------#.##",fdel$
    else 
      If SHOUNITS <> 1 let tmp$ = tmp$,"",fdel$
    End If 
    call addtostr(e$,rstr$,tmp$+rdel$)
  End if
else
  Print #0; Tab 1;X$;
  Print #0; Tab 11;LT0$[1,12];
  Print #0; Tab 25;A$[9,38];
  Print #0; Tab 60;LT1$[1,6];
  Print #0; Using "##"; Tab 70;LT1[0];
  If SHOUNITS <> 2 Or PALLETS = 0
    Print #0; Using "---------#.##"; Tab 75;QTY;" ";UM$;
  End If 
  If SHOUNITS >= 2 And PALLETS
    Print #0; Using "-------#.##"; Tab 93;PALLETS;
  End If 
  Print #0;""
End if!!!
V9[1] = V9[1] + 1
Return 
!
PRNT_HEADER: Rem "
if J8 return
!
If V9[1] <= V9[2] Return 
If V9[0] ! "not on first page
  Print #0;"\14\";
  Print #0;""
End If 
V9[0] = V9[0] + 1
Print #0; Tab 1;"DATE: ";ADATE$;
Print #0; Tab (65 - (Len(CO$) / 2));CO$;
Print #0; Tab 121;"PAGE: ";V9[0]
Print #0; Tab 1;"-787-";
STME$ = "" \ Call Time(STME$)
Print #0; Tab 7;STME$;
Print #0; Tab 50;"U S E R   W O R K   R E P O R T - WHSE";
Print #0;WHSE
Print #0;""
Print #0; Tab 1;"USER NAME"; Tab 15;HUCODE$; Tab 30;UA1$[21,40]
Print #0;""
V9[1] = 7
If DETL
  Print #0; Tab 1;"TRN DATE"; Tab 11;"ITEM CODE";
  Print #0; Tab 25;"DESCRIPTION 1"; Tab 60;"LOC.";
  Print #0; Tab 70;"TP"; Tab 79;"QUANTITY";
  Print #0; Tab 96;"PALLETS"
  Print #0;""
  V9[1] = 8
End If 
Return 
!
!ISINPUT: Rem "
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!Return 
!ISERRMSG: X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
!
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
NORASL: Rem "Rasl not on - cannot run this
!!Print @0,22;'CE RB';"YOU ARE NOT USING ''RASL'' - THIS SELECTION INVALID";
!!Signal 3,30
Goto OUTEND
!
PRNT_SELECTIONS: Rem "
if j8 return 
!
Print #0; Tab 4;"Warehouse";
Print #0; Using "##"; Tab 20;WHSE
Print #0; Tab 25;"STARTING"; Tab 42;"ENDING"
Print #0; Tab 4;"PRODUCT CODE";
Print #0; Tab 24;SPROD$; Tab 42;EPROD$
Print #0; Tab 4;"USER CODE";
Print #0; Tab 24;SUSER$; Tab 42;EUSER$
Print #0; Tab 4;"LOCATION";
Print #0; Tab 24;SLOC$; Tab 42;ELOC$
Print #0; Tab 4;"TRANS DATE";
If JDATE[0]
  X2 = JDATE[0] \ Gosub JUL2DATE
  Print #0; Tab 24;X$;
End If 
If JDATE[1]
  X2 = JDATE[1] \ Gosub JUL2DATE
  Print #0; Tab 42;X$;
End If 
Print #0;"\15\"
Print #0; Tab 4;"QUANTITY AS: 1-Stocking U/M  2-Pallets  3-Both";
Print #0; Tab 52;Str$(SHOUNITS)
Print #0; Tab 4;"TRANS TYPES";
Print #0; Tab 24;Str$(TRTYPE);
If TRTYPE = 1 Print #0; Tab 30;"WAREHOUSE XFER IN/OUT (774 MOVES)";
If TRTYPE = 2 Print #0; Tab 30;"PO RECEIPTS IN";
If TRTYPE = 3 Print #0; Tab 30;"BOTH  WHSE XFERS AND PO RECEIPTS";
Print #0;""
Print #0; Tab 4;"REPORT TYPE";
Print #0; Tab 24;Str$(DETL + 1);
If DETL Print #0; Tab 30;"DETAIL"; Else Print #0; Tab 30;"SUMMARY";
Print #0;""
Print #0; Tab 4;"SORT BY";
Print #0; Tab 24;Str$(SORTBY);
If SORTBY = 1 Print #0; Tab 30;"USER / PRODUCT CODE"
If SORTBY = 2 Print #0; Tab 30;"USER / TRANSACTION DATE"
If SORTBY = 3 Print #0; Tab 30;"USER / LOCATION"
Return 
!
RPTDONE: Rem "done with sort/print
Gosub USERTTL
V9[1] = 999;HUCODE$ = "COMPLETED ";UA1$[21,40] = "REPORT RANGES WERE  "
Gosub PRNT_HEADER
Gosub PRNT_SELECTIONS
!If SCRN
!  Print @0,23;"PRESS <CR> TO EXIT  ";'CL';
!  Input Len 16384 + 1;""ANS$
!End If 
goto OUTEND
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
!!!!
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB  !!!If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !! \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
!
OUTEND: Rem "outta here
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
try call dxclose() else rem
End 
!
!Print 'CS';
!Chain "MX000C"
!Close 
!Chain "MX000"
!End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
