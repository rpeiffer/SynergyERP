!"blockbuyer_cond.lib" === based on dxblockcondition.lib
! validate buyer record before writing it back
!
! loadsave -w -n 100,10 -o prog/dxport/blockbuyer_cond.lib src/blockbuyer_cond.src
!
!	Supports conditions for dxblock applications: blockbuyer.lib
!	Called via: blockbuyer.lib
!
!
! *Declare dL4 Intrinsic Subs & Functions
Declare Intrinsic Sub ProgramDump
Declare Intrinsic Sub Env
Declare Intrinsic Function FindChannel,trim$,dateusing$
Declare Intrinsic Sub DXOpen,DXGet,DXSet,DXClose
Declare Intrinsic Function EncFnm$
external lib "dxblockgeneral.lib" !general routines
declare external sub blocksuberr
External Lib "ubsfunc.dl4"
Declare External Function openfile
!
include "src/inc/filebuyer.inc"
!
!   Name:
!               validate$(buyer.) - get buyer record and validate
!
!   Synopsis:
!		validate$(buyer.)      pass in the data buyer. and any other parameters
!                                    parameters are defined in Block header conditions field
! 
!   Description:
!		Called to determine if record is ok to be saved in maintenance
! 
!   Return value:
!		null if ok, else error message
!
External Function validate$(buyer. as buyer)
Dim e$[100],uck$[10],co$[1]
dim 1%,ucc
dim 2%,uce
Dim 3%,ucr
Try
	if ltrim$(buyer.AccessCode$) = "" or ltrim$(buyer.AccessCode$) = "0" exit function "" ! no access code ok
	! open userntrl file and verify the access code
	Call DXGet("S_USER.AppID",CO$) ! Company
	UCC = OpenFile(-9988,val(co$)) \ If ucc=-1  Error 42
	uck$ = buyer.AccessCode$
	search #ucc,2,1;uck$,ucr,uce
	if uce
		exit function "Access code not on file"
	else
		exit function ""
	end if
else
	if spc(8) < 10000
		call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
	end if
	if spc(8)<20000 error 10000 else error 20000
end try
end function e$ ! validate$