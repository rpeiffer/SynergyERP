! >>> Program 680
!
! description  I/C Price Book
!
! loadsave -w -n 100,10 -o prog/dxport/680.dl4 src/680.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR  3, 2003  10:01:08
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/mx/mx680.src (univ2) [jcs] {20718}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX680          Price Book
Rem Author:        DAVID DEVITO   (08/31/1990)
Rem                UNIVERSAL BUSINESS SYSTEMS
! Last Update:   rek 4/15/92 short format/added index sort, etc.
!
!      blv 8/5/98 cct114887 - REMOVED CALLS TO 5800 ROUTINE AND MADE
!           SINGLE CALL IN BEGINING OF 5000 ROUTINE.
!      zyc 3/13/03 cct166031 b/e25@1220
!      zyc 3/19/03 cct166178 page break problem
! jliu 8/11/08 cct125176 bring the prod groups to rev9
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub FindF,InpBuf,String
! - Option Default Dialect IRIS1
Dim 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3]
Dim 2%,C4[8]
Dim 3%,PFU2[6],CNVTA,A[33],UWORK[10],BASEX,FIELD
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,WHSE,F,X1,H1,LONG,WHPARC[5],LM[1],WHLM[1],SUPCOST,INOTE
Dim 1%,PM5[5,4]
Dim 2%,B[24],P9,P7$[46],R2[1,55],P8,P8$[46],D9[5],Q0[1],W2[9],X2
Dim 3%,X4,PREC[1],W3[24],J,X3,T9[10],WHMISC2[7],PARM[5]
Dim 3%,PF_LOAD2,PRPARC[3],WHMISC[6]
Dim J$[40],J1$[30],SNAMe$[30],CNAMe$[30],J2$[20],J3$[40],J4$[40],PCDATe$[8]
Dim U5$[132],K7$[50],BK$[4],PUNIT$[4],CUNIT$[4],A$[156],P9$[50],USe$[1]
Dim K1$[50],K2$[12],K3$[12],X$[10],K9$[50],K6$[50],M1$[30],T2$[16]
Dim A2$[30],D$[16],IDX$[10],Z1$[50],Z2$[20],PMASK$[20],WH$[20],VEN$[30]
Dim W1$[32],SORT$[1],SORT2$[1],IL$[1],SC$[1]
dim SelWhse$[200],dlog$[50]
dim Note$[100]
!
Dim tmp$[1000],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="}",EndParam$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetCostLevels(e$,cost_lev[],IntCo,Userid$)
!
Mat Read #1,19,50;P9$;
If P9$[10,10] = "Y" Goto L_750
!Print @5,22;'RB';"MATRIX PRICING NOT ENABLED" \ Signal 3,25
!!Goto L_9030
L_750: 
! - Print 'CS';@0,0;"MX680";@25,0;"INVENTORY PRICE BOOK/REPORT"
! - Print @10,5;" PRINT   1> PRICE BOOK";
! - Print @10,6;"         2> PRICE REPORT ";
! - Print @10,8;"            SELECT : ";
! - Input ""J$
! - If J$ = "2" Chain "MX680A"
! - If J$ <> "1" Goto L_750
COID=IntCo
For J = 2 To 11
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1792","-1","-2288","-2096","-1696","-1","-1728","-1","-1744","-2400"
ROPEN #3,"2/SPRICEMARK"+Str$(COID)
Mat Read #1,0,112;X2;
Gosub L_7700 \ PCDATe$ = X$[1,8]
Mat Read #1,115,0;D9;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
Z2$ = "#####"
PMASK$ = "#####.",Z2$[1,Q0[1]]
Read #1,3;CNAMe$;
U5$ = "-",U5$
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 63 \ If J8 Let J9 = 21
Gosub L_6700
!
!call dxsave(0,"tmp/680in.txt!")
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"680",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
! dx add xport reporting code
call dxget("SCODE",K2$) \ K2$ = UCase$(K2$),Blank$ !starting product code
call dxget("ECODE",K3$) \ K3$ =UCase$(K3$),EndParam$ !ending product code
call dxget("PRNT",SORT$)
call dxget("IL",tmp$) \  IF tmp$ = "" Let INOTE=0 Else let INOTE=1
call dxget("FP",tmp$) \ IF UCase$(tmp$) = "W" Let LONG = 1 Else let LONG = 0
call dxget("SC",tmp$) \ IF tmp$ = "" Let SUPCOST = 1 Else let SUPCOST = 0
call dxget("WHSE",tmp$) \ WHSE = tmp$
!
! product
if K3$ < K2$ let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
! warehouse
if P9$[32,32]="N" let WHSE=0
If WHSE < 0 Or WHSE > D9[5] let e$ = "Invalid wharehouse, must be between 0 and ",D9[5],"!" \ error 10000
!
!L_900: Rem "=================================== get ranges
!Gosub L_7500
!LN = 12 !\ Print @59,5;'CL'; \ Gosub L_7000 \ K2$ = Z1$ \ If K2$ = "E" Goto L_9010
!LN = 12 !\ Print @59,7;'CL'; \ Gosub L_7000 \ K3$ = Z1$ \ If K3$ = "E" Goto L_9010

!If K3$ = "" Let K3$ = "}}}}}}"
!If K3$ < K2$ Gosub L_985 !\ Goto L_900
!!Goto L_985
!Print @0,22;"ENDING VALUE MUST BE GREATER OR EQUAL THAN STARTING VALUE! ";'RB CE'; !\ Signal 3,50 \ Return 
!!L_985: 
!!Gosub L_7800
!!WHSE = 0!;LN = 2 !\ If P9$[32,32] = "N" Goto L_990
!L_987: Print @46,18;'CL'; \ Gosub L_7000 \ WHSE = Z1$ \ If Z1$ = "E" Goto L_9010
!If Not(WHSE) If Z1$ <> "" Print 'RB'; \ Goto L_987
!If WHSE < 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_987
!L_990: Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto L_9010
!If Z1$ = "R" Goto L_900
!If Z1$ <> "P" Goto L_990
!
if j8 
  tmp$ = "COMMODITY",fdel$
  tmp$ = tmp$ ,"CODE1",fdel$
  If not(LONG) tmp$ = tmp$ ,"CODE2",fdel$
  tmp$ = tmp$ ,"DESCRIPTION 1",fdel$
  tmp$ = tmp$ ,"DESCRIPTION 2",fdel$
  tmp$ = tmp$ ,"CASEPACK",fdel$
  If LONG tmp$ = tmp$ ,"BKN QTY",fdel$
  tmp$ = tmp$ ,"VENDOR CODE",fdel$
  tmp$ = tmp$ ,"VENDOR NAME",fdel$
  if supcost
    tmp$ = tmp$ ,"WHSE COST",fdel$
    tmp$ = tmp$ ,"WHSE COST U/M",fdel$
  endif
  tmp$ = tmp$ ,"PRICE1",fdel$
  tmp$ = tmp$ ,"PRICE1 U/M",fdel$
  tmp$ = tmp$ ,"PRICE2",fdel$
  tmp$ = tmp$ ,"PRICE2 U/M",fdel$
  tmp$ = tmp$ ,"PRICE3",fdel$
  tmp$ = tmp$ ,"PRICE3 U/M",fdel$
  tmp$ = tmp$ ,"PRICE4",fdel$
  tmp$ = tmp$ ,"PRICE4 U/M",fdel$
  tmp$ = tmp$ ,"PRICE5",fdel$
  tmp$ = tmp$ ,"PRICE5 U/M",fdel$
  tmp$ = tmp$ ,"PRICE6",fdel$
  tmp$ = tmp$ ,"PRICE6 U/M",fdel$
  if INOTE Let tmp$ = tmp$ ,"NOTES",fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If
!
J1 = 70 \ J2 = 0
!Print @0,22;"Sorting...please wait";'CE'; \ Signal 3,0
K1$ = K2$ \ Gosub L_8000
!Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
D = 0
A$ = " ",A$;K1$ = " ",K1$
L_2010: 
Search #9,3,1;K1$,R1,E 
If E Goto OUTEND
If K1$[1,4] <> A$[152,155] Let J1 = 99
Mat Read #2,R1,0;A$;
Mat Read #2,R1,156;B;
Mat Read #2,R1,256;A;
Mat Read #2,R1,512;PFU1;
Mat Read #2,R1,554;PFU2;
Mat Read #2,R1,256;A;
Mat read #2,r1,596;prparc;
Mat Read #2,R1,620;LM; \ PREC[0] = R1
Mat Read #2,R1,894;C4;
mat read #2,r1,938;pf_load2;
Mat Read #2,R1,944;A2$;
If P9$[32,32] = "Y" And WHSE Gosub L_6800
Gosub L_3100
Gosub L_4500
Gosub L_3000
Gosub L_10000
Gosub L_5800
Gosub L_6500
Gosub L_5000
Goto L_2010
!
L_3000: Rem "========================================== get commodity
J2$ = " ",J2$;J2$ = A$[152,155]
Search #4,2,1;J2$,R3,E 
If E Let D$[1,16] = "** NOT FOUND ** " 
if E=0 Mat Read #4,R3,0;D$;
Return 
!
L_3100: Rem GET VENDOR
J2$ = " ",J2$;J2$ = B[24] Using "######"
Search #11,2,1;J2$,R3,E
If E Let VEN$[1,30] = "** NOT FOUND **               " 
if E=0 Mat Read #11,R3,0;VEN$;
Return 
L_3500: Rem FIND IF PROD GROUP IS ALLOWED
PARM[0] = 0
PARM[1] = WHMISC2[0]
! Call "MXPRODGRP5",PARM[]
Call ProdGroup(e$,intco,Parm[])
Return 
!
L_4500: Rem "========================================== mark up calcs
Gosub L_12400
If Not(C4[3]) Goto L_4690
IF C4[3]<1 OR C4[3]>999 OR C4[2]<>1 GOTO L_4690: ! valid m/u table?
Mat read #3,c4[3],18;pm5;
FOR FIELD=1 TO 6
    LET BASEX=C4[4] ! "base cost
	If pm5[field-1,4]=1 let basex=b[10] ! "last
	if pm5[field-1,4]=2 let basex=b[8] ! "load
	if pm5[field-1,4]=3 let basex=pf_load2 ! "load2
	if pm5[field-1,4]=4 let basex=b[21] ! "avg.
	if pm5[field-1,4]=5 let basex=prparc[2] ! "net po
	GOSUB L_19000:
	! X4 RETURNED

	LET A[19+FIELD]=X4 ! "lp's 1-6
L_4610: Next FIELD
L_4690: Return 
!
L_5000: Rem "========================================== print line
If LONG Let J1 = J1 + 6 Else Let J1 = J1 + 7
Gosub L_5800 \ If J1 = 8 Goto L_5000
If LONG 
  if not(j8) Print #0; Tab 11;U5$[1,117] 
else
  if not (j8) Print #0; Tab 11;U5$[1,68]
end if
if j8
  tmp$=K1$[1,4]," (",D$[1,16],") ",fdel$
  tmp$=tmp$,rtrim$(A$[140,151]),fdel$
  IF NOT(LONG) if not(WHSE) tmp$=tmp$,rtrim$(A$[93,106]),fdel$ !!CODE 2
  tmp$=tmp$,rtrim$(A$[9,38]),fdel$
else
  Print #0; Tab 11;A$[140,151];
  Print #0; Tab 26;A$[9,38];
end if
If P9$[26,26] <> "Y" Goto L_5014
if j8
  if LONG tmp$=tmp$,rtrim$(A$[63,92]),fdel$ \ Goto L_5014
  if WHSE tmp$=tmp$,rtrim$(W1$[13,26]),fdel$
  tmp$=tmp$,rtrim$(A$[63,92]),fdel$!! description2
else
  If LONG Print #0; Tab 60;A$[63,92]; \ Goto L_5014
  Print #0;"\15\";
  If WHSE Print #0; Tab 11;W1$[13,26];
  If Not(WHSE) Print #0; Tab 11;A$[93,106];
  Print #0; Tab 26;A$[63,92];
end if 
L_5014:
if not (j8) Print #0;"\15\";
If not(INOTE) Goto L_5019
if not (j8) 
  Print #0; Tab 11;"NOTES:";
  Gosub L_6000 ! get notes
  If Not(F7) Print #0; Tab 26;M1$
end if
L_5019:
If LONG
  if j8
    tmp$=tmp$,rtrim$(A2$[13,27]),fdel$
    tmp$=tmp$,rtrim$(BK$),fdel$
    tmp$=tmp$, B[24] Using "######",fdel$
    tmp$=tmp$,rtrim$(VEN$[1,15]),fdel$
  else
    Print #0; Tab 11;"CASE PACK: ";A2$[13,27]; Tab 38;"BKN QTY: ";BK$;
    Print #0; Using "VEND ######"; Tab 52;B[24];"-";VEN$[1,15]
  end if
End If 
If Not(LONG)
  if j8   
    tmp$=tmp$,rtrim$(A2$[13,27]), fdel$!!case pack
    tmp$=tmp$,B[24] Using "######",fdel$
    tmp$=tmp$,rtrim$(VEN$[1,30]), fdel$
  else
    Print #0; Tab 11;"CASE PACK: ";A2$[13,27];
    Print #0; Using "VDR ######"; Tab 38;B[24];"-";VEN$[1,30]
  end if 
End If 
If Not(COST_LEV[0]) Goto L_5036
If SUPCOST
  if not(j8) Print #0; Tab 13;"WHSE COST";
end if
L_5036: if not(j8) Print #0; Tab 32;"PRICE 1"; Tab 49;"PRICE 2"; Tab 66;"PRICE 3";
if j8
  If Not(LONG) Goto L_5045
else
  If Not(LONG) Print #0;"" \ Goto L_5045
  Print #0; Tab 83;"PRICE 4"; Tab 100;"PRICE 5"; Tab 117;"PRICE 6"
end if
!If Not(COST_LEV[0]) Goto L_5050
L_5045: 
If SUPCOST 
  if j8 
    tmp$=tmp$,B[8] Using PMASK$,fdel$
    tmp$=tmp$,CUNIT$,fdel$
  else
    Print #0; Using PMASK$; Tab 11;B[8];"/";CUNIT$;
  end if
End if
L_5050: 
if j8
  tmp$=tmp$,A[20] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  tmp$=tmp$,A[21] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  tmp$=tmp$,A[22] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
else
  Print #0; Using PMASK$; Tab 28;A[20];"/";PUNIT$; Tab 45;A[21];"/";PUNIT$;
  Print #0; Using PMASK$; Tab 62;A[22];"/";PUNIT$;
end if
If Not(LONG) 
  if j8
   Goto L_5100
  else
   Print #0;"" \ Goto L_5100
  end if
END IF
if j8
  tmp$=tmp$,A[23] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  tmp$=tmp$,A[24] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  tmp$=tmp$,A[25] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  if INOTE
    Gosub L_6000 ! get notes
    tmp$=tmp$,rtrim$(M1$),fdel$
  endif
  Call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0; Using PMASK$; Tab 79;A[23];"/";PUNIT$; Tab 96;A[24];"/";PUNIT$;
  Print #0; Using PMASK$; Tab 113;A[25];"/";PUNIT$
end if
Goto L_5790
!
L_5100: Rem SHORT FORMAT
if j8
  tmp$=tmp$,A[23] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  tmp$=tmp$,A[24] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  tmp$=tmp$,A[25] Using PMASK$,fdel$
  tmp$=tmp$,PUNIT$,fdel$
  if INOTE
    Gosub L_6000 ! get notes
    tmp$=tmp$,rtrim$(M1$),fdel$
  endif
  Call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0; Tab 32;"PRICE 4"; Tab 49;"PRICE 5"; Tab 66;"PRICE 6"
  Print #0; Using PMASK$; Tab 28;A[23];"/";PUNIT$; Tab 45;A[24];"/";PUNIT$;
  Print #0; Using PMASK$; Tab 62;A[25];"/";PUNIT$
end if
L_5790: Return 
!
L_5800: Rem "========================================== headings
if j8 return
!
If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8 \ If D Let J1 = 6
Print #0;"\15\\15\\15\";
Print #0; Tab 13;PCDATe$; Tab 36;CNAMe$; Tab 70;"Page";J2
Print #0; Tab 37;"PRICE BOOK - ";
If WHSE Print #0;"Warehouse";WHSE Else Print #0;"Main Warehouse"
J1 = J1 + 2
If D Goto L_5990
Print #0; Tab 11;"COMMODITY: ";K1$[1,4];" (";D$[1,16];")"
Print #0;" ";
Print #0; Tab 11;"CODE";
Print #0; Tab 26;"DESCRIPTION"
J1 = J1 + 1
L_5990: Return 
!
L_6000: Rem READ PROD SPECS
F7 = 0
M1$ = "PRODUCT NOTES NOT AVAILABLE "
K9$ = " ",K9$
K9$[1,12] = A$[140,151]
L_6030: 
Search #6,3,1;K9$,R6,E
If E Or A$[140,151] <> K9$[1,12] return
If J8 If F7 Let tmp$ = tmp$,", "
Mat Read #6,R6,12;M1$;
F7 = 99
if j8
  tmp$=tmp$,rtrim$(M1$)
else
  Print #0; Tab 26;M1$
end if
Gosub L_5800
Goto L_6030
!
L_6500: Rem UPDATE INDEX
If SORT$ <> "C" Goto L_6510
K7$ = " ",K7$;K7$[1,16] = D$[1,16];K7$[17] = A$[152,155]
Search #7,2,1;K7$,R7,E
If Not(E) Goto L_6610
L_6510: 
K7$ = " ",K7$
E = 2 \ Search #7,1,0;K7$,R7,E 
If SORT$ = "P" Let K7$ = A$[140,151]
If SORT$ = "D" Let K7$[1,30] = A$[9,38];K7$[31,42] = A$[140,151]
If SORT$ = "C" Let K7$[1,16] = D$[1,16];K7$[17] = A$[152,155]
Search #7,4,1;K7$,R7,E
If E Let e$ = "syserrorfile 680 sortfile mode (m)=4 keyno (k)=1 r=",R7," e=",e," keyval (k$)=",K7$ \error 10000
P7$ = " ",P7$;P7$[1,12] = A$[140,151]
P7$[13,42] = A$[9,38];P7$[43,46] = A$[152,155];P9 = J2
Mat Write #7,R7,0;P7$;
Mat Write #7,R7,46;P9;
L_6610: Return 
!
L_6700: Rem BUILD INDEX SORTFILE
A$ = Spc(6) \ A$ = A$[2,Len(A$) - 1]
J$ = " ",J$;J1$ = " ",J1$;J$ = "6/PRBOOKIDX"
J$[12] = A$
Call FindF(J$,H1) \ If H1 Kill J$
J1$ = "[1:256] ",J$
Build #7,J1$
R7 = 22;E = 1
Search #7,0,1;J1$,R7,E !\ If E Gosub ERR_SEARCH
Search #7,0,0;J1$,R7,E !\ If E Gosub ERR_SEARCH
SNAMe$ = J$
Return 
!
L_6800: Rem "========================================== prodwhse info
For CT = 0 To 24
  If CT < 6 Let WHPARC[CT] = 0;WHMISC[ct]=0
  If CT < 10 Let W2[CT] = 0
  If CT < 25 Let W3[CT] = 0
Next CT
WHLM[0] = 0;WHLM[1] = 0
WH$ = " ",WH$ \ WH$[1,12] = A$[140,151]
WH$[13] = WHSE Using "##"
Search #10,2,1;WH$,R2,E
If E Goto L_6853
Mat Read #10,R2,0;W1$;
Mat Read #10,R2,38;W2;
Mat Read #10,R2,842;WHLM;
Mat Read #10,R2,78;W3;
Mat Read #10,R2,384;WHPARC;
mat read #10,r2,800;whmisc;
mat  read #10,r2,846;whmisc2;
L_6853: If P9$[32,32] = "Y" Gosub L_69000
B[24] = W2[3]
B[8] = W3[17];B[10] = W3[16];B[21] = W3[15]
C4[4] = W3[18]
Let c4[3]=whparc[1]
Let pf_load2=w3[14];prparc[2]=whmisc[2] ! "load2,netpo
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
!L_7000: Rem "=========================================== data input routine
!Input Len 16384 + LN;""Z1$
!Call String(1,Z1$)
!Return 
!THIS IS MINE
!L_7500: Rem "========================================== screen
!Print 'CS'
!Print @0,0;"MX680";@35,0;"PRICE BOOK"
!Print @1,5;"Enter starting product code, <CR> for first,  E: to exit: "
!Print @7,7;"Ending product code,   <CR> for last,   E: to exit: "
!Print @1,10;"Print index by  P: product  D: description ";
!Print "  C: commodity summary  E: exit: "
!Print @1,12;"Include lines for product notes  Y:  N:  E: exit: "
!Print @1,14;"Print in  W: wide or  N: arrow format  E: exit: "
!Print @1,16;"Do you want to suppress costs  Y:  N:  E: exit: "
!!If P9$[32,32] = "N" Goto L_7600
!Print @1,18;"Enter warehouse, <CR> for main,  E: to exit: "
!!L_7600: Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
!L_7800: Rem ADDITIONAL INPUTS
!L_7810: !LN = 1 !\ Print @77,10;'CL'; \ Gosub L_7000 \ 
!IDX$ = SORT$ !\ If IDX$ = "E" Goto L_9010
!If SORT$ <> "P" And SORT$ <> "D" And SORT$ <> "C"  let e$ = "Invalid Parameter" \ error 10000!Print 'RB'; \ Goto L_7810
!L_7830: LN = 1 !\ Print @51,12;'CL'; \ Gosub L_7000 \ 
!USe$ = IL$ !\ If USe$ = "E" Goto L_9010
!If USe$ <> "Y" And USe$ <> "N" let e$ = "Invalid Parameter" \ error 10000!Print 'RB'; \ Goto L_7830
!L_7842: LN = 1 !\ Print @49,14;'CL'; \ Gosub L_7000 !\ If Z1$ = "E" Goto L_9010
!If SORT2$ <> "W" And SORT2$ <> "N" let e$ = "Invalid Parameter" \ error 10000!Print 'RB'; \ Goto L_7842
!!LONG = 0 \ If SORT2$ = "W" Let LONG = 1
!L_7847: LN = 1 !\ Print @49,16;'CL'; \ Gosub L_7000 !\ If Z1$ = "E" Goto L_9010
!If SC$ <> "Y" And SC$ <> "N" let e$ = "Invalid Parameter" \ error 10000 !Print 'RB'; \ Goto L_7847
!SUPCOST = 0 \ If SC = 0 Let SUPCOST = 99
!Return 
!
L_8000: Rem "========================================= sort by commodity code
Search #2,2,1;K1$,R1,E 
If Not(E) Goto L_8030
L_8020: !
Search #2,3,1;K1$,R1,E 
If E Goto L_8150
If K1$ > K3$ Goto L_8150
L_8030: !
Mat Read #2,R1,0;A$;
Mat Read #2,R1,894;C4;
gosub L_6800:
Gosub L_3500: \ If not (PARM[4]) Goto L_8020:  
If C4[2] <> 1 Goto L_8020
K9$ = " ",K9$;K9$[1,4] = A$[152,155]
K9$[5,16] = A$[140,151]
Search #9,4,1;K9$,R1,E 
If E Let e$ = "syserrorfile 680 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000!!!!
Goto L_8020
L_8150: 
Return 
!
L_8500: Rem "========================================== print index
For X = 0 To 1
  For Y = 0 To 55
    R2[X,Y] = 0
  Next Y
Next X
J1 = 999 \ Gosub L_5800
if not(j8)
  If SORT$ = "P" Print #0; Tab 38;"INDEX BY PRODUCT CODE "
  If SORT$ = "D" Print #0; Tab 38;"INDEX BY DESCRIPTION "
  If SORT$ = "C" Print #0; Tab 37;"INDEX SUMMARY BY COMMODITY"
  Print #0;" "
end if
For X = 1 To 55
  For Y = 0 To 1
    Search #7,3,1;K7$,R7,E !\ If E > 2 Gosub ERR_SEARCH
    If E Gosub L_8600 \ Return 
    R2[Y,X] = R7
  Next Y
Next X
Gosub L_8600
Goto L_8500
Return 
!
L_8600: Rem PRINT INDEX
Y = 0
For X = 1 To 55
  P7$ = " ",P7$ \ P9 = 0 \ P8$ = " ",P8$ \ P8 = 0
  If Not(R2[Y,X]) Goto L_8710
  Mat Read #7,R2[Y,X],0;P7$;
  Read #7,R2[Y,X],46;P9;
  If R2[Y + 1,X] Mat Read #7,R2[Y + 1,X],0;P8$; \ Read #7,R2[Y + 1,X],46;P8;
  If SORT$ = "P" ! "by product code
    if j8
      tmp$=tmp$,rtrim$(P7$[1,12]),P9 Using "####",fdel$
	  If P8 tmp$=tmp$,rtrim$(P8$[1,12]), P8 Using "####",fdel$
	else
      Print #0; Using "   ####"; Tab 10;P7$[1,12];P9;
      If P8 Print #0; Using "   ####"; Tab 49;P8$[1,12];P8
      If Not(P8) Print #0;"\15\";
	end if
  Else 
    If SORT$ = "D" ! "by description
      if j8
       tmp$=tmp$,rtrim$(P7$[13,42]),P9 Using "####",fdel$
	   if p8 tmp$=tmp$,rtrim$(P8$[13,42]),P8 Using "####",fdel$
	  else
	   Print #0; Using " ####"; Tab 6;P7$[13,42];P9;
       If P8 Print #0; Using " ####"; Tab 43;P8$[13,42];P8
       If Not(P8) Print #0;"\15\";
	  end if
    Else ! "by commodity
      If SORT$ = "C"
        A$[152,155] = P7$[43,46] \ Gosub L_3000
		if j8
          tmp$=tmp$,rtrim$(D$[1,16])," (",rtrim$(P7$[43,46]),")",P9 Using "####",fdel$
		  If P8 Let A$[152,155] = P8$[43,46] \ Gosub L_3000
		  if p8 tmp$=tmp$,rtrim$(D$[1,16])," (",P8$[43,46],")",P8 Using "####",fdel$
		else
          Print #0; Using " ####"; Tab 10;D$[1,16];" (";P7$[43,46];")";P9;
          If P8 Let A$[152,155] = P8$[43,46] \ Gosub L_3000
          If P8 Print #0; Using " ####"; Tab 50;D$[1,16];" (";P8$[43,46];")";P8
          If Not(P8) Print #0;"\15\";
		end if
      End If 
   End If 
  end if
L_8710:
Next X
Return 
!
!L_9010: Close #7 \ Kill SNAMe$
!L_9030: 
!!!Chain "MX000C"
!!Stop 
!!Goto OUTEND
!
L_10000: Rem "========================================== converts
CNVTU[0] = 0 \ CNVTU[1] = PFU1[11] \ CNVTU[2] = 2 \ CNVTA = B[8]
Gosub L_20000 \ B[8] = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[12];CNVTU[2] = 2
For X = 20 To 25
  CNVTA = A[X] \ Gosub L_20000
  A[X] = AMOUNT
Next X
If PFU1[12] = -1 Let PUNIT$ = "CWT "
If PFU1[12] = -2 Let PUNIT$ = "LOT "
If PFU1[12] = -3 Let PUNIT$ = "LB  "
If PFU1[12] > 0 Mat Read #8,PFU1[12],10;PUNIT$;
If PFU1[11] = -1 Let CUNIT$ = "CWT "
If PFU1[11] = -2 Let CUNIT$ = "LOT "
If PFU1[11] = -3 Let CUNIT$ = "LB  "
If PFU1[11] > 0 Mat Read #8,PFU1[11],10;CUNIT$;
If PFU1[17] = -1 Let BK$ = "CWT "
If PFU1[17] = -2 Let BK$ = "LOT "
If PFU1[17] = -3 Let BK$ = "LB  "
If PFU1[17] > 0 Mat Read #8,PFU1[17],10;BK$;
Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  if whlm[1] ! "load2
	  Let wh=whse;ltbl=whlm[1];cnvta=0
	  gosub L_12610: \ let pf_load2=cnvta ! "normally w3[14]
	Endif
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If
  if lm[1] ! "load2
	  Let wh=0;ltbl=lm[1];cnvta=0
	  gosub l_12610: \ let pf_load2=cnvta
    Endif
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCo,e$,rstr$
Return 
!
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050:  
! - Goto L_20120!If Spc(4) > 1280 Goto L_20120 
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: 
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !\ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT PROGRAM
!!K7$ = " ",K7$ \ D = 1 \ Gosub L_8500
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
! Try Call dxclose() ELSE REM
End 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
!
