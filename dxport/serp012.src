! >>> Program serp012
!
! description DayStart
!
! loadsave -w -n 100,10 -o prog/dxport/serp012.dl4 src/serp012.src
!
! ERPSheduler Enabled
!
include "src/copyright.inc" ! dxRem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  4, 2008  12:57:37
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/mx012.src (univ2) [mary] {00636}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,Time,MiscStr,TrxCo,DateToJulian,Date
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
!External Lib "OLDCALLS.LIB"
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenFile,pdate$,formatdate2$

!Option Default Dialect IRIS1
Try
	com 2%,intco,eoy,1%,DEBUG
	com rstr$[5000],Message$[600]
	dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10],action1$[20]
	dim 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50],BLANK$[50],WORK$[50]
	dim 2%,WHSE,JRNL,jcurrdate,CURRDATE
	dim 1%,eflg,returnstatus
	dim e$[500] ! 
	dim 3%,SPREC,rec_uac
	
	dim List$[2000,2000]

Dim 1%,EOYMONTH,ARMONTH,MRTSFLAG,HOLIUPDATEBATMAN
Dim A$[50],G$[128],P9$[50],P60$[50],1%,S0,T0,2%,S1,S2,S3[1],S9[1]
Dim F$[16],M$[50],KEYMRTS$[30],D3$[8]
Dim 2%,CRFLAG[1],I2,I3
Dim HM$[30],nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
dim ReportDir$[75],Basename1$[75],StatusFile$[150],1%,statchan,3%
dim errmsg$[500]
dim filename$[20],keyap$[30],L$[63],X$[50],U5$[50],xDate$[10],d$[108],d4$[8],d9$[32],D1$[8]
dim 1%,ch_ap,d2[3]
dim 2%,d1[1],d3,invdate,d5
dim 3%,rec_ap

! Try call dxopen() else Rem ! needed?
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$)
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
Try close #ctlc Else Rem
ctlc = OpenFile(9999,intCo) \ If ctlc = -1 Error 42  ! open with write permission
!LET j$="6/sortwork00045"\open #9,j$ !
Mat Read #CTLC,19,50;P9$;
BLANK$=" ",BLANK$
!Read #CTLC,51,72;EOYMONTH;
!Read #CTLC,0,120;ARMONTH;
!Read #CTLC,52,32;S1;
!Read #CTLC,52,20;S2;

!Read #CTLC,0,120;S0;
coid=intco
 action1$ = UCase$(action1$)
 action1$ = RTrim$(action1$) ! UPPERCASE & TRIMMED

select case action1$

case "STARTDAYST"
	COID=IntCo 
	let j8=99
	eflg=0
	returnstatus=1 ! no errors
	errmsg$=""
	MAT  READ #ctlc,0;D$            
	MAT  READ #ctlc,0,108;D1        
	MAT  READ #ctlc,0,116;D2        
	MAT  READ #ctlc,0,124;D1$       
	MAT  READ #ctlc,0,150;D9$       
	MAT  READ #ctlc,0,134;D3        
	READ #ctlc,0,182;INVDATE        
	MAT  READ #ctlc,3,164;D4$       
	READ #ctlc,3,172;D5             
	IF D1[1]=888888 ! in process
		returnstatus=0
		eflg=eflg+1
		errmsg$=errmsg$+"END OF PERIOD IN PROGRESS!"
		enddayStat:
	endif
	
	! REM CHECK FOR A/P EOM IN PROGRESS                                 
	IF P9$[23,23]<>"N" OR P9$[23,23]<>"L"                                
		READ #ctlc,88,16;FILENAME$; 
		ch_Ap = FindChannel() 
		rOPEN #ch_ap,filename$                                                              
		LET keyap$=" 0"                                                               
		SEARCH #ch_ap,2,1;keyap$,Rec_ap,E                                                   
		IF E<>0 
			returnstatus=0
			eflg=eflg+1
			errmsg$=errmsg$+"Error in A/P Control File Rec#0"
			
			goto enddayst:                                    
		ENDIF                                                                     
		MAT  READ #ch_ap,rec_ap,2;L$;                                                   
		IF L$[51,51]=" "  
			IF L$[61,61]=" "
				returnstatus=0
				eflg=eflg+1
				errmsg$=errmsg$+"A/P END OF MONTH(540) IN PROGRESS!"
				goto enddayst:
			endif
		endif
                                                                    
		Try CLOSE #ch_ap Else Rem  
	endif
                                                                 
	! section 1 ------
	enddayst: ! end send over message$
	if eflg>0 
		let returnstatus=0
		let message$=errmsg$
	endif
	clear list$[]
	let list$[0]=bsdel$,"DAYSTART HISTORY",fdel$                                             
	wEBSTR$="3RD LAST",fdel$   
	wEBSTR$=webstr$,"3RD LAST DATE",fdel$
	wEBSTR$=WEBSTR$,"LAST DAYEND DATE",fdel$
	WEBSTR$=WEBSTR$,"LAST DAYEND TIME",fdel$
	wEBSTR$=WEBSTR$,"2ND LAST",fdel$    
	wEBSTR$=WEBSTR$,"2ND LAST DATE",fdel$ 
	wEBSTR$=WEBSTR$,"LAST AR EOM DATE",fdel$
	wEBSTR$=WEBSTR$,"LAST AR EOM TIME",fdel$
	wEBSTR$=WEBSTR$,"LAST",fdel$
	wEBSTR$=WEBSTR$,"LAST DATE",fdel$
	wEBSTR$=WEBSTR$,"LAST AR EOY DATE",fdel$
	WEBSTR$=WEBSTR$,"LAST AR EOY TIME",fdel$
	webstr$=webstr$,"RENTFLAG",fdel$
	webstr$=webstr$,"APFLAG",fdel$
	list$[1]=webstr$
	row=2
	if returnstatus<>0
		wEBSTR$=rtrim$(d$[25,44]),fdel$ ! 3rd last Auth 
		webstr$=webstr$,rtrim$(d$[45,52]),fdel$ ! 3rd last date
		wEBSTR$=WEBSTR$,rtrim$(d$[1,8]),fdel$    ! last dayend  date
		webstr$=webstr$,rtrim$(d9$[17,24]),fdel$ ! last dayend time
		wEBSTR$=WEBSTR$,rtrim$(d$[53,72]),fdel$    ! 2nd last authority 
		webstr$=webstr$,rtrim$(d$[73,80]),fdel$ ! 2nd last date
		wEBSTR$=WEBSTR$,rtrim$(d$[9,16]),fdel$    ! last a/r eom date
		webstr$=webstr$,rtrim$(d$[17,24]),fdel$!webstr$=webstr$,rtrim$(d9$[1,8]),fdel$ ! last a/r eom time
		wEBSTR$=WEBSTR$,rtrim$(d$[81,100]),fdel$   ! last authority
		let xdate$=""
		if d5<>0
			let xdate$=pdate$(d5)
		endif
		wEBSTR$=WEBSTR$,xdate$,fdel$ ! last authority date
		WebStr$ = WebStr$,RTrim$(d9$[1,8]),fdel$ ! last a/r eoy date!webstr$=webstr$,rtrim$(d9$[9,16]),fdel$
		WebStr$ = WebStr$,RTrim$(d9$[9,16]),fdel$ !webstr$=webstr$,rtrim$(d$[17,24]),fdel$
		! rental flag
		let tmp$="Y"
		if p9$[24,24]<>"Y" let tmp$="N" ! rental flag
		webstr$=webstr$,tmp$,fdel$
		! ap flag
		let tmp$="Y"
		if P9$[23,23]="N" let tmp$="N" ! no apgl
		! if P9$[23,23]="L" let tmp$="N" ! no ap
		webstr$=webstr$,tmp$,fdel$
		list$[row]=webstr$
		row=row+1
	endif
	list$[row]=esdel$
	call AddToStr(e$,rstr$,List$[])
	! section 2 ---
	clear list$[]
	List$[0]=bsdel$,"DAYSTART INFORMATION",fdel$                     
	wEBSTR$="CURRAUTH",fdel$                     
	wEBSTR$=WEBSTR$,"SYSDATE",fdel$                                                     
	!IF P9$[24,24]="Y"
		webstr$=webstr$,"RENTMONTH",fdel$ 
	!else
	!	webstr$=webstr$,"",fdel$
	!endif                                      
	wEBSTR$=WEBSTR$,"ARDATE",fdel$
	webstr$=webstr$,"ARMONTH",fdel$
	!if p9$[23,23]<>"N"
		wEBSTR$=WEBSTR$,"APDATE",fdel$
		webstr$=webstr$,"APMONTH",fdel$  
	!else
	!	webstr$=webstr$,"",fdel$
	!	webstr$=webstr$,"",fdel$
	!endif
	webstr$=webstr$+"INVDATE",fdel$
	list$[1]=webstr$
	let row=2
	if returnstatus<>0
		webstr$=rtrim$(d$[81,100]),fdel$
		! System date
		let xdate$=""
		if d5<>0
			let xdate$=pdate$(d5)
		endif
		wEBSTR$=WEBSTR$,xdate$,fdel$ ! system date
		
		IF P9$[24,24]="Y" ! rental month code
			webstr$=webstr$,str$(d2[3]),fdel$ 
		else
			webstr$=webstr$,"",fdel$
		endif
		let xdate$=""
		if d1[0]<>0
			let xdate$=pdate$(d1[0])
		endif
		wEBSTR$=WEBSTR$,xdate$,fdel$ !ar date
		webstr$=webstr$,str$(d2[2]),fdel$ ! ar month
		if p9$[23,23]<>"N" ! apdate
			xdate$=""
			if d3<>0
				let xdate$=pdate$(d3)
			endif
			wEBSTR$=WEBSTR$,xdate$,fdel$ !ap date
			webstr$=webstr$,str$(d2[0]),fdel$  ! ap month
		else
			webstr$=webstr$,"",fdel$
			webstr$=webstr$,"",fdel$
		endif
		xdate$=""
		if invdate<>0
			let xdate$=pdate$(invdate)
		endif
		wEBSTR$=WEBSTR$,xdate$,fdel$ !inv date
		list$[row]=webstr$
		let row=row+1
	endif
	list$[row]=esdel$
	call AddToStr(e$,rstr$,List$[])
	! status section
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	! done with it
	! Call dxsave(0,"/tmp/md.txt!")
        call SetOutput(e$,rstr$) ! "STARTEOP"

case "SUBMITDAYST"
	COID=IntCo 
	let j8=99
	eflg=0
	returnstatus=1 ! no errors
	message$="Submit Complete"
	MAT  READ #ctlc,0;D$            
	MAT  READ #ctlc,0,108;D1        
	MAT  READ #ctlc,0,116;D2        
	MAT  READ #ctlc,0,124;D1$       
	MAT  READ #ctlc,0,150;D9$       
	MAT  READ #ctlc,0,134;D3        
	READ #ctlc,0,182;INVDATE        
	MAT  READ #ctlc,3,164;D4$       
	READ #ctlc,3,172;D5             
	IF D1[1]=888888 ! in process
		returnstatus=0
		message$="END OF PERIOD IN PROGRESS!"
		goto endsubmitdayst:
	endif
	
	! REM CHECK FOR A/P EOM IN PROGRESS                                 
	IF P9$[23,23]<>"N" OR P9$[23,23]<>"L"                                
		READ #ctlc,88,16;FILENAME$; 
		ch_Ap = FindChannel() 
		rOPEN #ch_ap,filename$                                                              
		LET keyap$=" 0"                                                               
		SEARCH #ch_ap,2,1;keyap$,Rec_ap,E                                                   
		IF E<>0 
			returnstatus=0
			message$="Error in A/P Control File Rec#0"
			goto endsubmitdayst:                                  
		ENDIF                                                                     
		MAT  READ #ch_ap,rec_ap,2;L$;                                                   
		IF L$[51,51]=" "  
			IF L$[61,61]=" "
				returnstatus=0
				message$="A/P END OF MONTH(540) IN PROGRESS!"
				goto endsubmitdayst: ! 
			endif
		endif
                                                                    
		Try CLOSE #ch_ap Else Rem  
	endif
        tmp$ = ucase$(rtrim$(GetParameter$("CURRAUTH")))
	If tmp$=""
		returnstatus=0
		errmsg$=errmsg$+"Current Authority Needs to be Entered"
		goto endsubmitdayst: ! 
	endif
	! moving the authority around
	LET D$[25,44]=D$[53,72];D$[45,52]=D$[73,80]
	LET D$[53,72]=D$[81,100];D$[73,80]=D4$                   
	let d$[81,100]=tmp$+blank$
	 !                  
	tmp$ = rtrim$(GetParameter$("SYSDATE"))                      
	If tmp$ = ""                            
		ReturnStatus = 0                              
		Message$ = "Invalid System Date Submitted"       
		Goto endsubmitdayst:                             
	else
		if erpCron ! sent in mmddyy format
			! convert to yymmdd
			call date(tmp$,xdate$,6,e)
			if e
				tmp3 = 0
			else
				tmp3 = xdate$
			end if
		else
			xdate$ = formatdate2$(tmp$)                   
			tmp3 = xdate$[3,8] ! yymmdd format            
		end if
		If Not(tmp3)                                  
			ReturnStatus = 0                            
			Message$ = "Invalid System Date Submitted"     
			Goto endsubmitdayst:                            
		End If
		Call DateToJulian(5,xdate$,tmp$,eflg)                     
		jcurrdate = tmp$           
        endif
	let d5=tmp3
	! d5 and jcurrdate now set to submitted system date
	tmp$ = rtrim$(GetParameter$("ARDATE"))                      
	If tmp$ = ""                            
		if erpCron
			! this is ok if from scheduler - leave date as set prior
			tmp3 = d1[0]
		else
			ReturnStatus = 0                              
			Message$ = "Invalid Accounts Receivable Date Submitted"       
			Goto endsubmitdayst:                             
		end if
	else
		if erpCron ! sent in mmddyy format
			! convert to yymmdd
			call date(tmp$,xdate$,6,e)
			if e
				tmp3 = 0
			else
				tmp3 = xdate$
			end if
		else
			xdate$ = formatdate2$(tmp$)                   
			tmp3 = xdate$[3,8] ! yymmdd format            
		end if
		If Not(tmp3)                                  
			ReturnStatus = 0                            
			Message$ = "Invalid Accounts Receivable Date Submitted"     
			Goto endsubmitdayst:                            
		End If                                        
        endif
	let d1[0]=tmp3
	! d1[0] now set to submitted ardate
	let xdate$=tmp3 using "&&&&&&" 
	let tmp=xdate$[3,4] ! month code
	if tmp<>d2[2] ! check ar month
		ReturnStatus = 0                            
		Message$ = "Accounts Receivable Date must match Month Code"     
		Goto endsubmitdayst:                            
	End If 
	if p9$[23,23]<>"N" ! apdate
		tmp$ = rtrim$(GetParameter$("APDATE"))
		If tmp$ = ""                            
			if erpCron
				! this is ok if from scheduler - leave date as set prior
				tmp3 = d3
			else
				ReturnStatus = 0                              
				Message$ = "Invalid Accounts Payable Date Submitted"       
				Goto endsubmitdayst:                             
			end if
		else
			if erpCron ! sent in mmddyy format
				! convert to yymmdd
				call date(tmp$,xdate$,6,e)
				if e
					tmp3 = 0
				else
					tmp3 = xdate$
				end if
			else
				xdate$ = formatdate2$(tmp$)                   
				tmp3 = xdate$[3,8] ! yymmdd format            
			end if
			If Not(tmp3)                                  
				ReturnStatus = 0                            
				Message$ = "Invalid Accounts Payable Date Submitted"     
				Goto endsubmitdayst:                            
			End If                                        
		endif			
		let d3=tmp3
		let xdate$=tmp3 using "&&&&&&" 
		let tmp=xdate$[3,4] ! month code
		if tmp<>d2[0] ! check ap month
			ReturnStatus = 0                            
			Message$ = "Accounts Payable Date must match Month Code"     
			Goto endsubmitdayst:                            
		End If 
	endif
	tmp$ = rtrim$(GetParameter$("INVDATE"))
	If tmp$ = ""                            
		if erpCron
			! this is ok if from scheduler - leave date as set prior
			tmp3 = invdate
		else
			ReturnStatus = 0                              
			Message$ = "Invalid Invoice Date Submitted"       
			Goto endsubmitdayst:                             
		end if
	else
		if erpCron ! sent in mmddyy format
			! convert to yymmdd
			call date(tmp$,xdate$,6,e)
			if e
				tmp3 = 0
			else
				tmp3 = xdate$
			end if
		else
			xdate$ = formatdate2$(tmp$)                   
			tmp3 = xdate$[3,8] ! yymmdd format            
		end if
		If Not(tmp3)                                  
			ReturnStatus = 0                            
			Message$ = "Invalid Invoice Date Submitted"     
			Goto endsubmitdayst:                            
		End If                                                
		                                 
	EndIf                                                        
	invdate=tmp3
	endsubmitdayst: ! 
	
	XDATE$=" ",XDATE$
	If d1[0]<>0
		let xdate$=pdate$(d1[0])
	endif
	LET D$[101,108]=Xdate$[1,6],xdate$[9,10] 
	xdate$=" ",xdate$     ! ap date in mm/ddyy format
	if d3<>0
		let xdate$=pdate$(d3)
	endif
	d1$=xdate$[1,6],xdate$[9,10]

	xdate$=" ",xdate$   ! sys date in mm/dd/yy format
	if d5<>0
		let xdate$=pdate$(d5)
	endif
	d3$=xdate$[1,6],xdate$[9,10]
	tmp$ = Tim(4) Using "&&&&&&"          
	work$ = tmp$[5,6],tmp$[1,2],tmp$[3,4] 
	currdate = work$                      
        LET D1[1]=CURRDATE
	! if coming through the sheduler - do NOT write out
	! information unless everything is OK
        if not(erpCron) or (erpCron and returnstatus = 1)
		MAT  WRITE #ctlc,0;D$; ! authority
		MAT  WRITE #ctlc,0,108;D1                              
		MAT  WRITE #ctlc,0,116;D2                              
		MAT  WRITE #ctlc,0,124;D1$                             
		MAT  WRITE #ctlc,0,134;D3                              
		MAT  WRITE #ctlc,3,164;D3$;                            
		WRITE #ctlc,3,172;D5; 
		WRITE #ctlc,0,182;INVDATE
		! convert to julian
		xdate$=D5 using "&&&&&&"
		Call DateToJulian(5,xdate$,xdate$,errflag)
		if errflag<>0
			let returnstatus=0
			let message$="Invalid Transaction Date Entered"
		endif           
		LET JCURRDATE=XDATE$                                  
		WRITE #ctlc,3,176;JCURRDATE;                          
	end if
	! status section
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutput(e$,rstr$) ! "submit daystart"
	if returnstatus = 1 call ERPCronSuccess()

  end select
  ! call dxclose()
else
  include "src/callmainerrnet.inc"
end try
end


 

