! --- serp926.dl4
! Hold exception maintenances (ut926)
!
! 1.0 11/09/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp926.dl4 src/serp926.src
!
! From the original code:
Rem DAVE 04/22/92
Rem LAST UPDATE:   03/31/93 roman. access the override password by a '99'
Rem               06/1993 - increase order types/decrease description
Rem
Rem
Rem
Rem
Rem UT926 EXECITON RANGES FOR INVOICES
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"
!
Declare Intrinsic Sub String
! Option Default Dialect IRIS1

!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile
!Declare External Function openfile,pdate$,jdate$,Formatdate2$

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[3200],tmp2$[500],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen()
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

Rem "===================================== dim vars
Dim 1%,J9[2]
Dim 2%
Dim 3%,J,EX[18],ORDTYPE,saveOrdType
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J5$[75],J7$[75],J9$[75]
Dim J4$[60],COPY$[10],ORTYPE$[20]
Dim X$[10],P9$[50],F$[16],PASSWORD$[30]
Rem "===================================== open files
Mat Read #1,88,1760;F$; \ Open #2,F$ ! "exlist


! every function except GETLIST requires a record read
if action1$ <> "GETLIST" and action1$<>"GETPSWRD" and action1$<>"SUBMITPSWRD"
	call dxget("OTID", tmp$)
	ordtype = tmp$
	if not(ordtype)
		e$ = "No order type selected!" \ error 10000
	end if
	if ordtype < 1 OR ordtype > 38
		e$ = "Invalid order type!" \ error 10000
	end if
	gosub ReadData
	If EX[0] <= 0
		gosub InitData
		EX[0] = ORDTYPE
	End If
	gosub GetOrdType
end if


!
! get list of order types
!
if action1$ = "GETLIST"
	! section 1 drop list
	gosub BuildDroplist ! * added to rstr
	!
	! section - status
	Message$=""
	goto OutEnd:
!
! get data for a specific order type
!
else if action1$ = "GETDATA"
 	gosub LoadData
	Message$=""
	goto OutEnd:
!
! SUBMITTING DATA
!
else if action1$ = "SUBMITDATA"
 	gosub UnloadDataAndUpdate
	! section x - status
	Message$="Record updated."
	goto OutEnd:
!
! COPY DATA
!
else if action1$ = "COPY"
 	gosub CopyData
	! section x - status
	Message$="Record copied."
	goto OutEnd:
!
! DELETE DATA (really just clears it out)
!
else if action1$ = "DELETE"
 	gosub DeleteData
	! section x - status
	Message$="Record deleted."
	goto OutEnd:
!
! as the Hold Over Ride password resides in the file
! and was completely missed - added it now
!
else if action1$="GETPSWRD"
	Mat Read #2,0,0;PASSWORD$;
	tmp$=bsdel$+"HOLDOVRRIDE"+fdel$+rdel$
	tmp$=tmp$+"PSWRD"+fdel$+rdel$
	tmp$=tmp$+RTrim$(PASSWORD$)+fdel$+rdel$+ESDEL$
	call addToStr(e$,rstr$,tmp$)
	message$="Get Password."
	goto outend

Else if action1$="SUBMITPSWRD"
	Mat Read #2,0,0;PASSWORD$
	call dxget("HOVRPW",J$)
	PASSWORD$ = J$
 	Mat Write #2,0,0;PASSWORD$;
	Message$="Password saved."
	goto OutEnd
!
! UNKNOWN ACTION
!
else
	e$ = "Unknown action1: "+action1$ \ error 10000
end if

! ***********************************************************************
! Nobody but us subroutines and exit code down here
! ***********************************************************************

!----------------------------------------------------------------------------
! build initial order type drop
!----------------------------------------------------------------------------
BuildDroplist: !
	tmp$=bsdel$+"OTDroplist"+fdel$+rdel$
	tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	for i = 1 to 38
		mat read #1,62,(i-1)*20;ortype$;
		tmp$=str$(i)+fdel$+str$(i)+" - "+ortype$+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
	next i
	call addToStr(e$,rstr$,esdel$)
Return

!----------------------------------------------------------------------------
! load data and send it up to the web
!----------------------------------------------------------------------------
LoadData: !
	tmp$=bsdel$+"MiscData"+fdel$+rdel$
	tmp$=tmp$+"OTID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	tmp$=str$(ordtype)+fdel$+Ortype$+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$+esdel$)
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	tmp$=tmp$+"Min"+fdel$+"Max"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	for i = 1 to 2
		tmp$=str$(ex[(i*2)-1])+fdel$+str$(ex[(i*2)])+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
	next i
	for i = 8 to 9
		tmp$=str$(ex[(i*2)-1])+fdel$+str$(ex[(i*2)])+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
	next i
	for i = 3 to 7
		tmp$=str$(ex[(i*2)-1])+fdel$+str$(ex[(i*2)])+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
	next i
	call addToStr(e$,rstr$,esdel$)
return
!----------------------------------------------------------------------------
! unload data from the web and save it out
!----------------------------------------------------------------------------
UnloadDataAndUpdate: !
	for i = 1 to 2
		call DxGet("Min"+str$(i), tmp$)
		ex[(i*2)-1] = tmp$
		call DxGet("Max"+str$(i), tmp$)
		ex[i*2] = tmp$
	next i
	for i = 8 to 9
		call DxGet("Min"+str$(i-5), tmp$)
		ex[(i*2)-1] = tmp$
		call DxGet("Max"+str$(i-5), tmp$)
		ex[i*2] = tmp$
	next i
	for i = 3 to 7
		call DxGet("Min"+str$(i+2), tmp$)
		ex[(i*2)-1] = tmp$
		call DxGet("Max"+str$(i+2), tmp$)
		ex[i*2] = tmp$
	next i
	gosub WriteData
Return

!----------------------------------------------------------------------------
! copy data from another order type
!----------------------------------------------------------------------------
CopyData: !
	saveOrdType = OrdType
	call dxget("CopyOTID", tmp$)
	OrdType = tmp$
	gosub ReadData
	If EX[0] <= 0
		gosub InitData
	End If
	ordType = saveOrdType
	EX[0] = ordType
	gosub WriteData
Return

!----------------------------------------------------------------------------
! delete data - really just clear it out
!----------------------------------------------------------------------------
DeleteData: !
	gosub InitData
	Mat Write #2,OrdType,0;EX;
Return

!----------------------------------------------------------------------------
! read - ORDTYPE set
!----------------------------------------------------------------------------
ReadData: Rem READ EXLIST FILE
	Mat Read #2,ORDTYPE,0;EX
Return

!----------------------------------------------------------------------------
! write - ORDTYPE set
!----------------------------------------------------------------------------
WriteData: Rem WRITE EXLIST FILE
	Mat Write #2,EX[0],0;EX;
Return

!----------------------------------------------------------------------------
! like the name says
!----------------------------------------------------------------------------
InitData: Rem CLEAR VAR
	For i = 0 To 18 \ EX[i] = 0 \ Next i
Return

!----------------------------------------------------------------------------
! order type desc from EX[0]
!----------------------------------------------------------------------------
GetOrdType: Rem READ ORDER TYPE DESC
	Read #1,62,EX[0] * 20 - 20;ORTYPE$; ! "now 20 chars
Return

! L900: Rem "======================================= inits
! L1000: Rem "
! Gosub L5500 ! "draw screen
! Gosub L3000 ! "enter order type to edit
! Gosub L6000 ! "read file
! If EX[0] > 0
! 	Gosub L5800 ! "display data
! 	Goto L2000 ! "edit
! End If
! Gosub L8000 ! "clear array
! EX[0] = ORDTYPE
! If EX[0] <= 0 Goto L1000
! Gosub L8800 ! "get order type desc
! For SEL = 1 To 9
! 	Gosub L2200
! Next SEL
! 
! L2000: Rem SELECT FIELD
! 	Print @5,22;'CL';"ENTER FIELD TO EDIT, ''CLEAR'', ''COPY'', OR <CR> TO EXIT ";
! 	Input ""X$ \ If X$ = "" Let X$ = "E"
! 	If X$ = "E"
! 		Gosub L6100 ! "write file
! 		Goto L900
! 	End If
! 	If X$ = "CLEAR"
! 		Gosub L8000 ! "clear array
! 		EX[0] = ORDTYPE
! 		Gosub L5800 ! "display data
! 	End If
! 	If X$ = "COPY" Gosub L8500
! 	SEL = X$
! 	If Not(SEL) Goto L2000
! 	Gosub L2200
! Goto L2000
! 
! L2200: !
! 	On SEL Gosub L3070,L3190,L4000,L4110,L3310,L3430,L3550,L3670,L3790
! Return 
! 
! L3000: Rem "==================================== order type
! 	J0$ = "2 00021303"
! 	J5$ = "ENTER ORDER TYPE, ''-'' OR <CR> TO EXIT"
! 	L3040: J1$ = "" \ Gosub L7000
! 	If J4$[1,1] = "-" Swap 1,"SW062" \ Goto L3040
! 	If J4$ = "" Or J4$[1,1] = "E" Goto L9000
! 	If J4$[1,2] = "99" Gosub L4400 \ Goto L3000 ! "hold override passwd
! 	ORDTYPE = J$
! 	If ORDTYPE < 1 Or ORDTYPE > 38 Let J7$ = "INVALID ENTRY" \ Gosub L7600 \ Goto L3000
! Return
! 
! L3070: J0$ = "4200104006"
! 	J5$ = "ENTER MINIMUM ORDER TOTAL GROSS PROFIT $ "
! 	J1 = EX[1]
! 	Gosub L7000
! 	EX[1] = J1
! 	J0$ = "4200106506"
! 	J5$ = "ENTER MAXIMUM ORDER TOTAL GROSS PROFIT $  "
! 	J1 = EX[2]
! 	Gosub L7000
! 	EX[2] = J1
! Return
! 
! L3190: J0$ = "4200104007"
! 	J5$ = "ENTER MINIMUM LINE GROSS PROFIT $ "
! 	J1 = EX[3]
! 	Gosub L7000
! 	EX[3] = J1
! 	J0$ = "4200106507"
! 	J5$ = "ENTER MAXIMUM LINE GROSS PROFIT $ "
! 	J1 = EX[4]
! 	Gosub L7000
! 	EX[4] = J1
! Return
! 
! L3310: J0$ = "4200104010"
! 	J5$ = "ENTER MINIMUM FREIGHT AMOUNT"
! 	J1 = EX[5]
! 	Gosub L7000
! 	EX[5] = J1
! 	J0$ = "4200106510"
! 	J5$ = "ENTER MAXIMUM FREIGHT AMOUNT"
! 	J1 = EX[6]
! 	Gosub L7000
! 	EX[6] = J1
! Return
! 
! L3430: J0$ = "4200104011"
! 	J5$ = "ENTER MINIMUM ORDER TOTAL MERCHANDISE AMOUNT "
! 	J1 = EX[7]
! 	Gosub L7000
! 	EX[7] = J1
! 	J0$ = "4200106511"
! 	J5$ = "ENTER MAXIMUM ORDER TOTAL MERCHANDISE AMOUNT "
! 	J1 = EX[8]
! 	Gosub L7000
! 	EX[8] = J1
! Return
! 
! L3550: J0$ = "4200104012"
! 	J5$ = "ENTER MINIMUM LINE MERCHANDISE AMOUNT "
! 	J1 = EX[9]
! 	Gosub L7000
! 	EX[9] = J1
! 	J0$ = "4200106512"
! 	J5$ = "ENTER MAXIMUM LINE MERCHANDISE AMOUNT "
! 	J1 = EX[10]
! 	Gosub L7000
! 	EX[10] = J1
! Return
! 
! L3670: J0$ = "4200104013"
! 	J5$ = "ENTER MINIMUM ORDER TOTAL COST  "
! 	J1 = EX[11]
! 	Gosub L7000
! 	EX[11] = J1
! 	J0$ = "4200106513"
! 	J5$ = "ENTER MAXIMUM ORDER TOTAL COST  "
! 	J1 = EX[12]
! 	Gosub L7000
! 	EX[12] = J1
! Return
! 
! L3790: J0$ = "4200104014"
! 	J5$ = "ENTER MINIMUM LINE COST "
! 	J1 = EX[13]
! 	Gosub L7000
! 	EX[13] = J1
! 	J0$ = "4200106514"
! 	J5$ = "ENTER MAXIMUM LINE  COST  "
! 	J1 = EX[14]
! 	Gosub L7000
! 	EX[14] = J1
! Return
! 
! L4000: J0$ = "4200104008"
! 	J5$ = "ENTER MINIMUM ORDER TOTAL GROSS PROFIT % "
! 	J1 = EX[15]
! 	Gosub L7000
! 	EX[15] = J1
! 	Print Using "  ----#.##%";@40,8;EX[15];
! 	J0$ = "4200106508"
! 	J5$ = "ENTER MAXIMUM ORDER TOTAL GROSS PROFIT %  "
! 	J1 = EX[16]
! 	Gosub L7000
! 	EX[16] = J1
! 	Print Using "  ----#.##%";@65,8;EX[16];
! Return
! 
! L4110: J0$ = "4200104009"
! 	J5$ = "ENTER MINIMUM LINE GROSS PROFIT % "
! 	J1 = EX[17]
! 	Gosub L7000
! 	EX[17] = J1
! 	Print Using "  ----#.##%";@40,9;EX[17];
! 	J0$ = "4200106509"
! 	J5$ = "ENTER MAXIMUM LINE GROSS PROFIT % "
! 	J1 = EX[18]
! 	Gosub L7000
! 	EX[18] = J1
! 	Print Using "  ----#.##%";@65,9;EX[18];
! Return
! 
! L4400: Rem HOLD CODE OVERRIDE PASSWORD
! 	J0$ = "2 00303003"
! 	Mat Read #2,0,0;PASSWORD$
! 	J5$ = "ENTER THE HOLD OVERRIDE PASSWORD, <CR> FOR SAME, OR SPACE FOR NONE "
! 	J1$ = PASSWORD$
! 	Gosub L7000
! 	PASSWORD$ = J$
! 	Mat Write #2,0,0;PASSWORD$;
! 	Print @30,3;'CL';
! Return
! 
! L5500: Rem DRAW SCREEN
! 	Print @0,0;'CS';
! 	Print @0,0;"UT926";@32,0;"INVOICE";@55,0;Msc$(3)
! 	Print @25,1;"EXCEPTION PARAMETERS";
! 	Print @1,3;'BR BD';"ORDER TYPE ";'ER ED'
! 	Print @47,5;'BD';"MIN";@72,5;"MAX";
! 	Print @5,6;"GROSS PROFIT $ ORDER TOTAL ";
! 	Print @5,7;"GROSS PROFIT $ ORDER LINE  ";
! 	Print @5,8;"GROSS PROFIT % ORDER TOTAL ";
! 	Print @5,9;"GROSS PROFIT % ORDER LINE  ";
! 	Print @5,10;"FREIGHT ";
! 	Print @5,11;"MERCHANDISE AMOUNT ORDER TOTAL ";
! 	Print @5,12;"MERCHANDISE AMOUNT ORDER LINE ";
! 	Print @5,13;"COST AMOUNT ORDER TOTAL ";
! 	Print @5,14;"COST AMOUNT ORDER LINE  ";'ED';
! 	For X = 1 To 9
! 		Print Using "##)";@1,X + 5;X;
! 	Next X
! Return
! 
! L5800: Rem "======================================== display data
! 	Print Using "##";@13,3;EX[0];
! 	Gosub L8800 ! "get order type desc
! 	Print Using "------#.##";@40,6;EX[1];@65,6;EX[2];
! 	Print Using "------#.##";@40,7;EX[3];@65,7;EX[4];
! 	Print Using "  ----#.##%";@40,8;EX[15];@65,8;EX[16];
! 	Print Using "  ----#.##%";@40,9;EX[17];@65,9;EX[18];
! 	Print Using "------#.##";@40,10;EX[5];@65,10;EX[6];
! 	Print Using "------#.##";@40,11;EX[7];@65,11;EX[8];
! 	Print Using "------#.##";@40,12;EX[9];@65,12;EX[10];
! 	Print Using "------#.##";@40,13;EX[11];@65,13;EX[12];
! 	Print Using "------#.##";@40,14;EX[13];@65,14;EX[14];
! Return
! 
! L6000: Rem READ EXLIST FILE
! 	Mat Read #2,ORDTYPE,0;EX
! Return
! 
! L6100: Rem WRITE EXLIST FILE
! 	Mat Write #2,EX[0],0;EX;
! Return
! 
! L8000: Rem CLEAR VAR
! 	For X = 0 To 18 \ EX[X] = 0 \ Next X
! Return 
! 
! L8500: Rem COPY FROM
! 	L8510: Print @5,22;'CL';"ENTER ORDER TYPE TO COPY FROM OR ''-''  ";
! 	Input ""COPY$
! 	If COPY$[1,1] = "-" Swap 1,"SW062" \ Goto L8510
! 	COPY = COPY$
! 	If COPY < 1 Or COPY > 20 Return
! 	Mat Read #2,COPY,0;EX;
! 	EX[0] = ORDTYPE
! 	Gosub L5800 ! "display data
! Return
! 
! L8800: Rem READ ORDER TYPE DESC
! 	Read #1,62,EX[0] * 20 - 20;ORTYPE$; ! "now 20 chars
! 	Print @20,3;ORTYPE$;
! Return
! 
! L9000: Rem EXIT
! Close 
! Chain "MX000"

OUTEND: Rem EXIT ROUTINE
ReturnStatus=1
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end
