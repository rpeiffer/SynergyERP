! liblist.lib
!
! supporting library of list routines for browser
!
! 1.0 07/06/07 new
!
! loadsave -w -n 10,10 -o prog/dxport/liblist.lib src/liblist.src
!
include "src/copyright.inc"
!
! sub & functions for list library
!
!  sub       ARInvList         creates a/r invoice list
!  sub       ARInvListCurr     creates a/r invoice list w/currency conversion 
!  sub       ARInvListHeading  creates heading for a/r invoice list
!
include "src/inc/filesaract.inc" ! a/r invoice
!
External Lib "libgeneral.lib"
Declare External Sub SubErr,ARInvListHeading
!
External Lib "libtable.lib"
Declare External Function GetARTypeDesc$
!
External Lib "libcalc.lib"
Declare External Sub CalcOpenAR
!
External Lib "ubsfunc.dl4"
Declare External Function PDate$
!
Declare Intrinsic Sub env,DateToJulian,JulianToDate


Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
!
! ----------------------------------------
external sub ARInvList(e$,CustKey$,List$[],Chan)
  !
  ! Displays open A/R invoices to be paid
  !
  Try
    !
    dim SearKey$[64],Mode$[3],CustNo$[6]
	dim ARDiscDate$[10],arduedate$[10]
    dim tmp$[200],WebStr$[600]
	dim Blank$[50] \ Blank$=" ",Blank$
    dim M2$[2],M6$[6],M8$[8],M10$[10],Mamt$[11]
    M2$="##" \ M6$="######" \ M8$="########" \ M10$="##########" \ Mamt$="-------#.##"
    dim 1%,ARSelFlag,DrCrFlag
    dim 2%,row,tmpcnt
    dim 3%,AROpenAmt,ARDiscAmt,JDepositDate
	!
    dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[100]
    let tmpcnt=50 ! defined as maxcount in sfcr
	!
	dim ARI. as saract ! a/r invoice file
    !
	call env(1,"BSDEL",bsdel$)
    call env(1,"ESDEL",esdel$)
    call env(1,"RDEL",rdel$)
    call env(1,"FDEL",fdel$)
	!
	call dxget("u_crdepositdate",tmp$) ! deposit date, julian format
	JDepositDate=tmp$
	!
	row=0 \ clear List$[]
	call ARInvListHeading(e$,row,List$[])
	!
    SearKey$=CustKey$
    Mode$=">"
    Dir=3 ! by bill customer
    do
      ARRec=FileGetSaract(e$,Chan,Mode$,Dir,SearKey$,ARI.)
      if ARRec<0 or SearKey$[1,len(CustKey$)]<>CustKey$ exit do
      !
      ARType=int((fra(ARI.AgeTypeCount))*100) ! A/R type
      !
	  call CalcOpenAR(e$,ARSelFlag,JDepositDate,ARDiscDate$,ARType,AROpenAmt,ARDiscAmt,DrCrFlag,ARI.)
	  !
	  if ARSelFlag ! a/r invoice selected
	    !
	    WebStr$=SearKey$,fdel$ ! id, a/r invoice key (dir=3, bill to)
	    WebStr$=WebStr$,ARI.CustomerCode using M6$,fdel$ ! customer number
	    call JulianToDate(5,str$(ARI.Date),tmp$,errflag)
	    if errflag let tmp$=""
	    WebStr$=WebStr$,tmp$,fdel$ ! a/r invoice date
	    if rtrim$(ardiscdate$)="" let ardiscdate$=tmp$
	    if ari.duedate1<101
		let arduedate$=tmp$
	    else
		let arduedate$=pdate$(ari.duedate1)
	    endif
	    WebStr$=WebStr$,ARI.ReferenceNo using M10$,fdel$ ! a/r invoice or ref #
	    tmp$=GetARTypeDesc$(ARI.AgeTypeCount,1) ! get a/r type code
	    WebStr$=WebStr$,tmp$,fdel$ ! a/r type code
	    ! WebStr$=WebStr$,ARDiscDate$,fdel$ ! discount terms date
	    WebStr$=WebStr$,ARDueDate$,fdel$ 
	    WebStr$=WebStr$,ARI.OrigAmt * DrCrFlag using Mamt$,fdel$ ! orignal a/r invoice amount
	    WebStr$=WebStr$,AROpenAmt using Mamt$,fdel$ ! open a/r invoice amount
	    WebStr$=WebStr$,ARDiscAmt using Mamt$,fdel$ ! discount available
	    tmp=0
	    WebStr$=WebStr$,tmp using Mamt$,fdel$ ! additional discounts
	    WebStr$=WebStr$," ",fdel$ ! pay flag
	    WebStr$=WebStr$,tmp using Mamt$,fdel$ ! payment amount
	    WebStr$=WebStr$,AROpenAmt-ARDiscAmt using Mamt$,fdel$ ! open invoice balance
	    WebStr$=WebStr$,ARI.Whse using M2$,fdel$ ! warehouse
	    WebStr$=WebStr$,ARI.Division using M2$,fdel$ ! division
	    if ARI.AgeFlag let tmp$="Yes" else tmp$="No"
	    WebStr$=WebStr$,tmp$,fdel$ ! disputed 
		!
	    List$[row]=WebStr$
	    row=row+1
	    if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	    !
      endif
	  !
    loop
    !
	List$[row]=esdel$ ! end of section
	!
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! ARInvList
!
! ----------------------------------------
! for currency
! ----------------------------------------
external sub ARInvListCurr(e$,CustKey$,List$[],Chan,currid)
  !
  ! Displays open A/R invoices to be paid
  !
  Try
    !
    dim SearKey$[64],Mode$[3],CustNo$[6]
	dim ARDiscDate$[10],arduedate$[10]
    dim tmp$[200],WebStr$[600]
	dim Blank$[50] \ Blank$=" ",Blank$
    dim M2$[2],M6$[6],M8$[8],M10$[10],Mamt$[11]
    M2$="##" \ M6$="######" \ M8$="########" \ M10$="##########" \ Mamt$="-------#.##"
    dim 1%,ARSelFlag,DrCrFlag
    dim 2%,row,tmpcnt
    dim 3%,AROpenAmt,ARDiscAmt,JDepositDate,amount
	Dim 1%,cnvcu[10],3%,cnvca[10]
	!
    dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[100]
    let tmpcnt=50 ! defined as maxcount in sfcr
	!
	dim ARI. as saract ! a/r invoice file
    !
	call env(1,"BSDEL",bsdel$)
    call env(1,"ESDEL",esdel$)
    call env(1,"RDEL",rdel$)
    call env(1,"FDEL",fdel$)
	!
	call dxget("u_crdepositdate",tmp$) ! deposit date, julian format
	JDepositDate=tmp$
	!
	row=0 \ clear List$[]
	call ARInvListHeading(e$,row,List$[])
	!
    SearKey$=CustKey$
    Mode$=">"
    Dir=3 ! by bill customer
    do
      ARRec=FileGetSaract(e$,Chan,Mode$,Dir,SearKey$,ARI.)
      if ARRec<0 or SearKey$[1,len(CustKey$)]<>CustKey$ exit do
      !
      ARType=int((fra(ARI.AgeTypeCount))*100) ! A/R type
      !
	  call CalcOpenAR(e$,ARSelFlag,JDepositDate,ARDiscDate$,ARType,AROpenAmt,ARDiscAmt,DrCrFlag,ARI.)
	  if currid<>0
			if ari.currid=currid
				let amount=AROpenAmt
				if ari.currfact<>0 and amount<>0
					let cnvcu[0]=1
					let cnvcu[1]=1 ! no rounding
					let cnvca[0]=amount
					let cnvca[1]=factor
					call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
					let amount=cnvca[0]
					let AROPENAMT=fnr(amount)
				endif
				let amount=ARDiscAmt
				if ari.currfact<>0 and amount<>0
					let cnvcu[0]=1
					let cnvcu[1]=1 ! no rounding
					let cnvca[0]=amount
					let cnvca[1]=factor
					call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
					let amount=cnvca[0]
					let ARDiscAMT=fnr(amount)
				endif
				let amount=ARI.OrigAmt 
				if ari.currfact<>0 and amount<>0
					let cnvcu[0]=1
					let cnvcu[1]=1 ! no rounding
					let cnvca[0]=amount
					let cnvca[1]=factor
					call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
					let amount=cnvca[0]
					let ari.origamt=fnr(amount)
				endif
			else
				let arselflag=0
			endif
	  endif
	  !
	  if ARSelFlag ! a/r invoice selected
	    !
	    WebStr$=SearKey$,fdel$ ! id, a/r invoice key (dir=3, bill to)
	    WebStr$=WebStr$,ARI.CustomerCode using M6$,fdel$ ! customer number
	    call JulianToDate(5,str$(ARI.Date),tmp$,errflag)
	    if errflag let tmp$=""
	    WebStr$=WebStr$,tmp$,fdel$ ! a/r invoice date
	    if rtrim$(ardiscdate$)="" let ardiscdate$=tmp$
	    if ari.duedate1<101
		let arduedate$=tmp$
	    else
		let arduedate$=pdate$(ari.duedate1)
	    endif
	    WebStr$=WebStr$,ARI.ReferenceNo using M10$,fdel$ ! a/r invoice or ref #
	    tmp$=GetARTypeDesc$(ARI.AgeTypeCount,1) ! get a/r type code
	    WebStr$=WebStr$,tmp$,fdel$ ! a/r type code
	    ! WebStr$=WebStr$,ARDiscDate$,fdel$ ! discount terms date
	    WebStr$=WebStr$,ARDueDate$,fdel$ 
	    WebStr$=WebStr$,ARI.OrigAmt * DrCrFlag using Mamt$,fdel$ ! orignal a/r invoice amount
	    WebStr$=WebStr$,AROpenAmt using Mamt$,fdel$ ! open a/r invoice amount
	    WebStr$=WebStr$,ARDiscAmt using Mamt$,fdel$ ! discount available
	    tmp=0
	    WebStr$=WebStr$,tmp using Mamt$,fdel$ ! additional discounts
	    WebStr$=WebStr$," ",fdel$ ! pay flag
	    WebStr$=WebStr$,tmp using Mamt$,fdel$ ! payment amount
	    WebStr$=WebStr$,AROpenAmt-ARDiscAmt using Mamt$,fdel$ ! open invoice balance
	    WebStr$=WebStr$,ARI.Whse using M2$,fdel$ ! warehouse
	    WebStr$=WebStr$,ARI.Division using M2$,fdel$ ! division
	    if ARI.AgeFlag let tmp$="Yes" else tmp$="No"
	    WebStr$=WebStr$,tmp$,fdel$ ! disputed 
		!
	    List$[row]=WebStr$
	    row=row+1
	    if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	    !
      endif
	  !
    loop
    !
	List$[row]=esdel$ ! end of section
	!
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! ARInvListCurr
!
! ----------------------------------------
