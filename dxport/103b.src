! >>> Program 103b
!
! description Customer Notes Printout
!
! loadsave -w -n 100,10 -o prog/dxport/103b.dl4 src/103b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 30, 2002  12:54:59
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx1/mx103b.src (univ2) [kag] {34240}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX103B         customer notes printout  (normal full detail)
Rem Author:        ???          (xx/xx/xxxx)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim tmp$[1500],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
!
Dim 1%,C0,C2[2],C7[4],E,J8,J9[2],SZN,K2,C11[2],SELECTION,V9[4]
Dim 2%,C1[12],C3[1],SORT,E9,K,K1,X,X1,R10,CHAN,ODATE,J2
Dim 3%,C4[6],C5[5],C6[9],J1,X2,CFIN[8],C12[0],PCTR
Dim A1$[142],A2$[30],A3$[22],CNAME$[30],D2$[10],L1$[30],L3$[30]
Dim K1$[40],K2$[40],K3$[40],T9$[26],U5$[50],K9$[30],SEARCH_$[30]
Dim SK2$[3],SK3$[3]
Dim SLSK$[4],U1$[56],P61$[256],CSKEY$[40],CSZ$[14],BT$[20],CUSTK$[6]
Dim U9$[130],W$[60],X$[10],P9$[15],B1$[30],J8$[8],2%
Dim C1$[100],A0$[78],Z1$[25],ZNDSC$[100],PTDESC$[26],ZS$[10],CK$[30]
Dim U2$[60],1%,C8,S1,CSZ1[6],2%,CSZCUST[2],A0[3],3%,C9,U1,URECFLAG,2%
Dim RETVAL$[512],MSGTXT$[75],Z2$[2],M1$[30],V$[100],S1$[118]
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
For J1 = 2 To 4
  Read K
  If K = -1 Goto L_270
  Read #1,88,K;U5$;
  Ropen #J1,U5$
L_270: Next J1
Data "1808","1824","1680"
V$ = "\15\",V$
V9[3] = 60
Mat Read #1,3;CNAME$;
Read #1,0,100;J8$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[4] = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[4] = 54 \ If J8 Let V9[4] = 18
!
! dx add xport reporting code
DXSetup:
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"103b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("begcust",K2$) ! starting cusotmer
call dxget("endcust",K3$) ! ending customer
call dxget("begslsm",tmp$) \ START_SLSM=tmp$ ! starting salesman
call dxget("endslsm",tmp$) \ if tmp$="" let END_SLSM=999 else END_SLSM=tmp$ ! ending salesman
call dxget("sort",tmp$) \ SORT=tmp$ ! sort by  1=customer  2=salesman
!  dx end
!
! starting & ending customer
J1=K2$ \ K2$=J1 using "######"
if K3$="" let K3$="999999"
X2=K3$ \ K3$=X2 using "######"
if J1<0 or J1>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
if X2<J1 or X2>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
! starting & ending salesman
if START_SLSM<0 or START_SLSM>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
if END_SLSM<START_SLSM or END_SLSM>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 


If SORT = 1 Let CHAN = 4
If SORT = 2 Let CHAN = 9
If SORT = 2 Gosub L_10000 ! sort salesman
!
! - Gosub L_900
! - FINALQ: Rem "
! - Print @0,22;'CL';"Enter #:field to edit  P: print  R: reselect all  S: save defaults  E: exit ";
! - Input Len 16384 + 1;""Z1$
! - Call String(1,Z1$)
! - Print @0,22;'CL';
! - If Z1$ = "E" Goto OUTEND
! - If Z1$ = "S"
! - ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
! -   Input ""Z2$ \ Call String(1,Z2$)
! -   If Z2$ = "" Print @0,22;'CL'; \ Goto FINALQ
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "Progdfltw","103b","",77,RETVAL$,URECFLAG
! -   Goto FINALQ
! - End If 
! - If Z1$ = "R"
! -   For LOOP_ = 1 To 2
! -     CHOICE = LOOP_
! -     Gosub MAKE_CHOICE
! -   Next LOOP_
! -   Goto FINALQ
! - End If 
! - If Z1$ = "P" Goto PROCESS
! - If Z1$ = "E" Goto OUTEND
! - CHOICE = Z1$
! - Gosub MAKE_CHOICE
! - Goto FINALQ
! - PROCESS: Rem let's get started
! - Window Off 
! - If SORT = 1 Let CHAN = 4
! - If SORT = 2 Let CHAN = 9
! - If SORT = 2 Goto L_10000
! - Goto L_1000
! - L_900: Rem "=================================== get ranges
! - Call "progdflt","103b","",77,RETVAL$
! - Gosub L_7500
! - Return 
! - SELECT_CUSTOMER: Rem select starting & ending customer range
! - CUST_LOOP: Rem
! - J5$ = "Please enter the Starting Customer Code maximum 999999"
! - J0$ = "3 00 630 5"
! - J1 = K2$
! - Gosub L_7000
! - K2$ = J1 Using "######"
! - J5$ = "Please enter the Ending  Customer Code maximum 999999"
! - J0$ = "3 00 650 5"
! - J1 = K3$
! - Gosub L_7000
! - K3$ = J1 Using "######"
! - If K2$ > K3$
! -   J7$ = "Ending value must be Greater than or Equal to starting value!"
! -   Gosub ISERRMSG
! -   Goto CUST_LOOP
! - End If 
! - RETVAL$[1,6] = K2$[1,6]
! - RETVAL$[7,12] = K3$[1,6]
! - Return 
! - SELECT_SLSM: Rem select starting & ending salesman range
! - SLSM_LOOP: Rem
! - J5$ = "Please enter the Starting Salesman Code maximum 999"
! - J0$ = "3 00 330 6"
! - J1 = SK2$
! - Gosub L_7000
! - SK2$ = J1 Using "###" \ START_SLSM = J1
! - J5$ = "Please enter the Ending Salesman Code maximum 999"
! - J0$ = "3 00 350 6"
! - J1 = SK3$
! - Gosub L_7000
! - SK3$ = J1 Using "###" \ END_SLSM = J1
! - If SK2$ > SK3$
! -   J7$ = "Ending value must be Greater than or Equal to starting value!"
! -   Gosub ISERRMSG
! -   Goto SLSM_LOOP
! - End If 
! - RETVAL$[14,16] = SK2$[1,3]
! - RETVAL$[17,19] = SK3$[1,3]
! - Return 
! - SELECT_SORT_OPTION: Rem
! - SORT_LOOP: Rem
! - J5$ = "Please enter the sort option "
! - J0$ = "3 00 155 8"
! - J1 = SORT
! - Gosub L_7000
! - SORT = J1
! - If SORT < 1 Or SORT > 2 Goto SORT_LOOP
! - RETVAL$[13,13] = SORT Using "#"
! - Return 
! - MAKE_CHOICE: Rem WHAT FIELD DO WE WANT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On CHOICE Gosub SELECT_CUSTOMER,SELECT_SLSM,SELECT_SORT_OPTION
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
L_1000: Rem "================================== start print
!
if J8 ! dx xml headings
  !
  if SORT=1 ! by customer
    tmp$="CUST #",fdel$,"CUSTOMER NAME",fdel$
    tmp$=tmp$,"SALESMAN",fdel$,"SALESMAN NAME",fdel$
  else ! by salesman
    tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$
    tmp$=tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$
  endif
  tmp$=tmp$,"NOTE DESCRIPTION",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
HOLDCUST = -1 \ HOLDSLSM = -1
V9[1] = 90
If J2 If Not(J8) Print #0;"\14\";
J2 = 0
U9$ = "-",U9$
! - Print @0,22;"PRINTING...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
If SORT = 2 Let SEARCH_$ = " ",SEARCH_$
If SORT = 1 Let SEARCH_$ = K2$
Search #CHAN,2,1;SEARCH_$,K4,E 
If Not(E) Goto L_2022
L_2010: 
Search #CHAN,3,1;SEARCH_$,K4,E 
If E Goto L_9100
! - Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
! - Rem {end rtn.printmsg.i}
L_2022: 
If SORT = 1 If SEARCH_$ > K3$ Goto L_9100
If SORT = 1
  CUSTK$[1,6] = SEARCH_$[1,6]
Else 
  CUSTK$[1,6] = SEARCH_$[4,9]
End If 
Search #2,2,1;CUSTK$,K1,E
If Not(E)
  Mat Read #2,K1;A1$;
  Mat Read #2,K1,142;C1;
Else 
  C1[1] = 0
  A1$ = "CUST NAME NOT FOUND"
  C1[2] = 0
  S1$ = "SALESMAN NOT FOUND"
End If 
If C1[2]
  SLSK$ = C1[2] Using "###"
  Search #3,2,1;SLSK$,K3,E
  If Not(E)
    Mat Read #3,K3,0;S1$;
  Else 
    S1$ = "SALESMAN NOT FOUND"
  End If 
End If 
If START_SLSM If C1[2] < START_SLSM Goto L_2010
If END_SLSM If C1[2] > END_SLSM Goto L_2010
If SORT = 2 If HOLDSLSM <> -1 If HOLDSLSM <> C1[2] Gosub NEWPAGE
Mat Read #4,K4,12;M1$;
L_2260: Gosub L_5800
Gosub L_5000
Goto L_2010
!
L_5000: Rem "================================================== print info
!
if J8 ! dx xml 
  !
  if SORT=1 ! by customer
    tmp$=C1[1] using "######",fdel$,rtrim$(A1$[31,60]),fdel$
    tmp$=tmp$,C1[2] using "###",fdel$,rtrim$(S1$[1,30]),fdel$
  else ! by salesman
    tmp$=C1[2] using "###",fdel$,rtrim$(S1$[1,30]),fdel$
    tmp$=tmp$,C1[1] using "######",fdel$,rtrim$(A1$[31,60]),fdel$
  endif
  tmp$=tmp$,rtrim$(M1$[1,30]),fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  goto ExitDetailPrint
end if
!
If C1[1] <> HOLDCUST Or V9[1] < 5
  If V9[1] + 3 >= V9[4] Gosub NEWPAGE
  Print #0;U9$
  Print #0;"CUST CODE:";
  Print #0; Using "######";C1[1]; Tab 20;A1$[31,60]
  Print #0; Using "###"; Tab 2;"SALESMAN:";C1[2]; Tab 20;S1$[1,30]
  V9[1] = V9[1] + 3
End If 
Print #0; Tab 10;M1$[1,30] \ V9[1] = V9[1] + 1
If V9[1] >= V9[4] Gosub NEWPAGE
!
ExitDetailPrint:
HOLDCUST = C1[1]
HOLDSLSM = C1[2]
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
If V9[1] <= V9[4] Return 
V9[1] = 1
! - If J2 If J8 Input @0,23;"PRESS <CR>: TO CONTINUE "J$ \ Print 'CS';
J2 = J2 + 1
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 0;J8$; Tab (54 - Len(J1$) / 2);J1$; Tab 65;"PAGE";J2
Print #0;"-MX103B- ";T9$;
Print #0; Tab 38;"C U S T O M E R   N O T E S"
If SORT = 1 Print #0; Tab 38;"I N   C U S T O M E R   O R D E R"
If SORT = 2 Print #0; Tab 38;"B Y  S A L E S M A N  N U M B E R "
Print #0;" "
V9[1] = V9[1] + 1
Return 
!
! - L_7000: Rem "=========================================== data input routine
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - Return 
!
! - L_7500: Rem "========================================== screen
! - Print 'CS'
! - Print @0,0;"-MX103B-";@25,0;"CUSTOMER NOTES PRINTOUT"
! - Print @30,2;'BR';"STARTING";'ER';@50,2;'BR';"ENDING";'ER';
! - Print @1,5;" 1> CUSTOMER CODE: "
! - Print @1,6;" 2> SALESMAN CODE: "
! - Print @1,8;" 3> SORT BY  1: Code or  2: Salesman: "
! - If RETVAL$[1,5] = "@@@@@"
! -   RETVAL$[1,6] = "     0"
! -   RETVAL$[7,12] = "999999"
! -   RETVAL$[13,13] = "1"
! -   RETVAL$[14,16] = "  0"
! -   RETVAL$[17,19] = "999"
! -   Call "Progdfltw","103b","",77,RETVAL$,0
! - End If 
! - K2$ = RETVAL$[1,6]
! - K3$ = RETVAL$[7,12]
! - SORT = RETVAL$[13,13]
! - SK2$ = RETVAL$[14,16] \ START_SLSM = RETVAL$[14,16]
! - SK3$ = RETVAL$[17,19] \ END_SLSM = RETVAL$[17,19]
! - Print @30,5;K2$;
! - Print @50,5;K3$
! - Print @30,6;SK2$;
! - Print @50,6;SK3$
! - Print Using "#";@55,8;SORT
! - Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
A1$ = " ",A1$ \ A2$ = " ",A2$ \ A3$ = " ",A3$
For K = 0 To 12
  If K < 3 Let C2[K] = 0
  C1[K] = 0
  If K < 2 Let C3[K] = 0
  If K < 7 Let C4[K] = 0
  If K < 6 Let C5[K] = 0
  If K < 5 Let C7[K] = 0
  If K < 10 Let C6[K] = 0
Next K
K = 0 \ C0 = 0
Return 
!
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
L_8300: Rem GET ZONE DESCRIPTIONS
ZS$ = " ",ZS$;ZNDSC$ = " ",ZNDSC$
ZS$ = "     0"
Search #10,2,1;ZS$,R10,E 
If E Goto L_8360
Mat Read #10,R10,26;ZNDSC$;
L_8360: Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
! - Print 'CS'
! - Close 
! - Window Off 
! - Chain "MX000"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
if J8=0 Print #0;"\15\\15\** END **"
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
! - If K2$ = "" Goto OUTEND
Goto OUTEND
! 
L_10000: Rem BEGIN SORTING RECORDS
CUSTCODE = -1
! - Print @0,22;'CE';"Sorting...please wait";
L1$ = " ",L1$;L1$ = K2$
Search #4,2,1;L1$,K4,E 
If Not(E) Goto L_10060
L_10040: 
Search #4,3,1;L1$,K4,E 
If E return
L_10060: If L1$ > K3$ return
K9$ = " ",K9$
CUSTK$[1,6] = L1$[1,6]
Search #2,2,1;CUSTK$,K1,E
If Not(E)
  Mat Read #2,K1;A1$;
  Mat Read #2,K1,142;C1;
  Mat Read #2,K1,348;A2$;
  If START_SLSM If C1[2] < START_SLSM Goto L_10040
  If END_SLSM If C1[2] > END_SLSM Goto L_10040
  K9$[1,3] = C1[2] Using "###"
  K9$[4,13] = L1$[1,10]
  Search #9,4,1;K9$,K4,E 
  If E Let e$ = "syserrorfile 103b sortfile mode (m)=4 keyno (k)=1 r=",K4," e=",e," keyval (k$)=",K9$ \ error 10000
End If 
Goto L_10040

NEWPAGE: Rem====
If J8 Return 
Print #0;" "
Print #0; Tab TABS[3];"CONTINUED ON PAGE ";J2 + 1;
Gosub TOF
Gosub L_5800
Return 
!
TOF: Rem "======================= top
V9[2] = 1
Print #0;"\14\";
V9[1] = 90
Return 
!
VFC: Rem=====
If V9[1] >= V9[2] + VA Return 
Print #0;V$[V9[1],V9[2] + VA - 1];
V9[1] = V9[2] + VA
Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
