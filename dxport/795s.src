! >>> Program 795s
!
! description FIFO INVENTORY VALUE REPORT Comma Delimited Spreadsheet Version
!
! loadsave -w -n 100,10 -o prog/dxport/795s.dl4 src/795s.src
!
! 1.0 04/15/2008 change
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 13, 2006  12:22:36
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/mx77/mx795s.src (univ2) [mary] {40036}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!Option Default Dialect IRIS1
Rem MX795S - FIFO/LIFO  INVENTORY VALUE REPORT - SPREADSHEET FORMAT COMMA DELIMIT
Rem AUTHOR: DAVE  AUG 10, 1987
Rem LAST UPDATE: option to suppress zero inventory balances -MTG
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim U5$[20],UM$[30]
Dim 3%,COST,UnitType,SUNIT$[4],CUNIT$[4],CUNIT,UNIT$[10],2%,C4[8]
Dim 3%,R[30]
Dim COST$[1]
Dim P1$[156],PMASK$[12],Z2$[2],RETVAL$[512],PR_A2$[30]
Dim P61$[256]
Dim P9$[50],P60$[50],I1$[10],I$[10],SPROD$[12],EPROD$[12]
Dim FTK$[30],FT1$[72],1%,FT1[3],2%,FT2[3],3%,FT3[3]
Dim 1%,F8,PD1[2],URECFLAG
Dim 2%,D3[1],JDATE
Dim 2%,B1[24],A3,WHSE,Q0[1],DATETYPE,D9[5],POVEND,PONUM
Dim 3%,A1[33],A2[7],V9[4],A4
Dim 1%,G1[2],G1$[80],2%,G2[3],3%,G3[8],G4[1]
Dim J8$[8],DATE$[8],CNAME$[30],CATNAME$[24]
Dim 4%,T9[20],T7[5]
Dim 1%,2%,3%,J,K6$[60]
Dim K1$[50],K2$[20],K3$[20],T9$[26],K5$[60],K9$[50],PK$[30]
Dim FS$[10],DESC$[50]
Dim 3%,PROD_LBS,PROD_FACT
Dim KEYCMDTY$[10],CMDTYDESC$[35]
Dim KEYMAT$[10],MATDESC$[25]
Dim KEYVEND$[10],VENDNAME$[30],2%,VEND,BUYER,BUYERNAME$[30],VENDITEM$[20]
Dim KEYPRWH$[30]
Dim W1$[32],WH3$[24],WHFLG$[10],WHMKUPTYP$[4],WCOMM$[4]
Dim 2%,W2[9],W7[14],WH7[3],WHLPOOL,WHFDT[1],WHMKUP[3]
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 1%,RESTRICTED,WHBASE,WHPARC2[3]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHMISC2[7]
Dim 3%,WHFUT[2],VLIST,WHREDI[1],WHLBS[1]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim OPC1$[1],OPC2$[1]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!! dx add xport reporting code
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Mat Read #1,60,50;P60$;
Mat Read #1,115;D9;
If P60$[9,9] <>"F" And P60$[9,9]<> "L" Goto OutEnd:
L_800: Rem OPEN FILES
For J = 2 To 11
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","2400 ","1728","1744","2288","3008  ","3024","0","1984","2272"
Ropen #15,"2/BUYERS"
Mat Read #1,0,100;DATE$;
Read #1,3;CNAME$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
If P61$[73,73] = "Y" Let Q0[1] = 4
PMASK$ = "############"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])

If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[4] = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[4] = 55 ! \ If J8 Let V9[4] = 21
V9[1] = 90 \ J2 = 0

!Open #77,"cntrl/PRTDFLT" \ Open #78,"cntrl/USERPORT"
!Mat Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!Mat Read #77,A4,0;PD1;
!Close #77,#78
STARTHERE: Rem "
! dx add xport reporting code
call dxget("I0",SPROD$) \ SPROD$ = rTRIM$(UCase$(SPROD$)),Blank$
call dxget("I1",EPROD$) \ EPROD$ = RTRIM$(UCase$(EPROD$)),EndParam$
call dxget("I2",UNIT$) \ UnitType = UNIT$
call dxget("I3",tmp$) \ WHSE = tmp$
call dxget("I4",tmp$) \ If RTRIM$(tmp$) = "" Let SBUYER=0 Else Let SBUYER = tmp$
call dxget("I5",tmp$) \ If RTRIM$(tmp$) = "" Let EBUYER=999 Else Let EBUYER = tmp$
call dxget("I6",tmp$) \ If RTRIM$(tmp$) = "" Let F8 = 0 Else Let F8 = 1   
call dxget("I7",COST$)
call dxget("I8",tmp$) \ DateType = RTRIM$(tmp$)
call dxget("I9",tmp$) \ If RTRIM$(tmp$) = ""  Let SUBCATFLAG = 0 Else Let SUBCATFLAG = 1
!! dx end
!
If EPROD$ < SPROD$ Let e$ = "Invalid ending product code, must be >= than starting product code!"  \ error 10000
If WHSE < 0 or WHSE > D9[5] let e$="Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000

If Not(WHSE) Let SBUYER = 0 \ EBUYER = 999
if SBUYER < 0 or SBUYER > 999 let e$="Invalid starting buyer code, must be between 0 and 999!" \ error 10000
if SBUYER > EBUYER or EBUYER > 999 let e$="Invalid ending buyer code, must be between starting buyer code and 999!" \ error 10000
!
If DateType = 0 Let JDATE = 0
!If DateType Let X2 = DateType \ Gosub ISDUNPACK
If DateType
  J2$ = DateType Using "&&&&&&"
  I$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6]
  Call VerifyDate(I$,I1$,E) \ If E let e$="Invalid ending Date!" \ error 10000
  I1$ = I$[7,8],I$[1,2],I$[4,5] \ DateType = I1$
  X2 = DateType \  Gosub L_7820 \ x2 = x2
  JDATE = X2[0]
End If
!
If UnitType = 1 Let U5$ = "IN STOCKING UNITS"	
If UnitType = 2 Let U5$ = "IN SELLING UNITS"	
If UnitType = 3 Let U5$ = "IN PURCHASING UNITS"	
If UnitType = 4 Let U5$ = "IN COSTING UNITS"	
If UnitType = 5 Let U5$ = "IN PRICING UNITS"	
If UnitType = 6 Let U5$ = "IN PRODUCTION UNITS"	
!
UM$ = U5$
UnitType = UnitType + 7
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"795s",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!

If J8
If SUBCATFLAG
	tmp$="CATEGORY CODE",fdel$ 
	tmp$=tmp$,"CATEGORY DESCRIPTION",fdel$ 
	tmp$=tmp$,"ITEM CODE",fdel$ 
else
	tmp$="ITEM CODE",fdel$ 
endif
	tmp$=tmp$,"DESCRIPTION 1",fdel$ 
	tmp$=tmp$,"DESCRIPTION 2",fdel$ 
	tmp$=tmp$,"MB",fdel$ 
	tmp$=tmp$,"COMM",fdel$ 
	!If Not(WHSE) Let tmp$=tmp$,"WH",fdel$ 
	Let tmp$=tmp$,"WH",fdel$ 
	tmp$=tmp$,"VENDOR#",fdel$ 
	tmp$=tmp$,"P.O. #",fdel$ 
	tmp$=tmp$,"RTS DATE",fdel$ 
	tmp$=tmp$,"ON HAND",fdel$ 
	tmp$=tmp$,"ON HAND U/M",fdel$
	tmp$=tmp$,"TRANS COST",fdel$,"TRANS COST U/M",fdel$ 
	tmp$=tmp$,"EXT COST",fdel$ 
	call addtostr(e$,rstr$,tmp$+rdel$)
end if

L_1900: Rem start printing
K1$ = SPROD$
CH = 7
Gosub L_5800

L_2000: Search #CH,3,1;K1$,R7,E \ If E = 2 Goto L_9100
If E Goto L_9100
If K1$[1,Len(EPROD$)] > EPROD$ Goto L_9100
Mat Read #7,R7,0;G1;
If WHSE<>0 and WHSE <> G1[0] Goto L_2000
Mat Read #7,R7,6;G1$; \ Mat Read #7,R7,86;G2; \ Mat Read #7,R7,102;G3;
Mat Read #7,R7,192;G4;
Rem IF jdate<>0 and G2[1]>JDATE GOTO L_2000: ! "DONT'T INCLUDE
K2$ = " ",K2$ \ K2$[1,12] = G1$[1,12]
Search #2,2,1;K2$,R1,E !\ If E > 2 Gosub ERR_SEARCH
If E<>0
  Goto L_2000
End If 

Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,460;A2;
Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2; \ Mat Read #2,R1,894;C4; \ Mat Read #2,R1,256;A;
Mat Read #2,R1,944;PR_A2$;
PROD_LBS = A[6];PROD_FACT = A[5]
QTY = G3[0] - G3[1]
If datetype
  Gosub L_6000
  If Not(QTY) And F8 = 1 Goto L_2000
  If Not(QTY) And G2[1] > JDATE Goto L_2000
End If 
COST = G3[6]
If COST$ = "L" Let COST = G3[7]
T9[3] = FNR(COST * QTY)
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  SUNIT$ = " ",SUNIT$;SUNIT$[1,2] = "LB";CUNIT$ = SUNIT$
Else 
  Gosub L_10000
End If 
If F8 And QTY = 0 And T9[3] = 0 Goto L_2000
Rem get commodity code
KEYCMDTY$ = P1$[152,155]
CMDTYDESC$ = " ",CMDTYDESC$
Search #6,2,1;KEYCMDTY$,R[6],E !  \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #6,R[6],0;CMDTYDESC$;
End If 
Rem get product category
CATNAME$ = " ",CATNAME$
If B1[11] > 0 And B1[11] < 100
  Mat Read #10,B1[11],0;CATNAME$;
End If 
Rem get material code
MATDESC$ = " ",MATDESC$
KEYMAT$ = P1$[156,156]
Search #11,2,1;KEYMAT$,R[11],E !\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #11,R[11],0;MATDESC$;
End If 
BUYER = 0;BUYERNAME$ = " ",BUYERNAME$
VEND = B1[24]
VENDITEM$ = P1$[93,112]
POVEND = 0;PONUM = 0
If G1[1] = 1 ! transaction type 1 po received
  POVEND = G1$[55,60]
  PONUM = G1$[44,49]
  If POVEND
    If B1[24] <> POVEND
      VENDITEM$ = " ",VENDITEM$
    End If 
  End If 
End If 
KEYPRWH$ = " ",KEYPRWH$
KEYPRWH$[1,12] = P1$[140,151]
KEYPRWH$[13,14] = G1[0] Using "##"
Search #5,2,1;KEYPRWH$,R[5],E !\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #5,R[5],0;W1$;
  Mat Read #5,R[5],32;W1;
  Mat Read #5,R[5],38;W2;
  If W2[3]
    VEND = W2[3]
    If VEND <> B1[24]
      VENDITEM$ = W1$[13,32]
    End If 
    If G1[1] = 1 And POVEND <> 0
      If POVEND = W2[3]
        VENDITEM$ = W1$[13,32]
      End If 
    End If 
  End If 
  BUYER = W1[2]
End If 
If G1[1] = 1 And POVEND <> 0 Let VEND = POVEND
Rem find the vendor
VENDNAME$ = " ",VENDNAME$
KEYVEND$ = " ",KEYVEND$;KEYVEND$[1,6] = VEND Using "######"
Search #3,2,1;KEYVEND$,R[3],E ! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #3,R[3],0;VENDNAME$;
End If 
Rem find the buyer
BUYERNAME$ = " ",BUYERNAME$
If BUYER
  Mat Read #15,BUYER,0;BUYERNAME$;
End If 
Gosub L_5000
Goto L_2000
L_5000: Rem PRINT LINE
DESC$ = RTRIM$(P1$[140,151])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(P1$[9,38])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(P1$[63,92])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(P1$[139,139])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(P1$[152,155])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(CMDTYDESC$[1,16])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(CMDTYDESC$[17,31])
Gosub CHKCOMMA
Print #0;DESC$;",";
Print #0; Using "###";B1[11];",";
DESC$ = RTRIM$(CATNAME$)
Gosub CHKCOMMA
Print #0;RTRIM$(DESC$);",";
DESC$ = RTRIM$(P1$[156,156])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(MATDESC$[1,25])
Gosub CHKCOMMA
Print #0;DESC$;",";
Print #0; Using "######";VEND;",";
DESC$ = RTRIM$(VENDNAME$[1,30])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(VENDITEM$[1,20])
Gosub CHKCOMMA
Print #0;DESC$;",";
DESC$ = RTRIM$(PR_A2$[13,27])
Gosub CHKCOMMA
Print #0;DESC$;",";
Print #0; Using "#####";BUYER;",";
DESC$ = RTRIM$(BUYERNAME$)
Gosub CHKCOMMA
Print #0;DESC$;",";
Print #0; Using "##";G1;",";
Print #0; Using "######";PONUM;",";
X2 = G2[1] \ Gosub L_7770
Print #0;X$[1,8];",";
Print #0; Using "######";G2[0];",";
Print #0; Using "--------#.## ";QTY;",";
Print #0;SUNIT$;",";
Print #0; Using PMASK$;COST;",";
Print #0; Using "----------#.##";T9[3];
TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[3]
T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[3]
Print #0;""
T9[3] = 0
Return 
CHKCOMMA: Rem check for comma in description and change to '
if rtrim$(desc$)<>""
	!LET tmp$="''"+DESC$+"''"
	!let desc$=tmp$
	For X = 1 To Len(DESC$)
		If DESC$[X,X] = "," Let DESC$[X,X] = "'"
	Next X
endif
Return 
L_5800: Rem HEADINGS ROUTINE
Goto PRNTCOLHEAD
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;DATE$; Tab (64 - Len(CNAME$) / 2);CNAME$
Print #0;"-mx795s-";COST$;"- ";T9$;
If P60$[9,9] = "L" Print #0;" LIFO ";
If P60$[9,9] = "F" Print #0;" FIFO ";
Print #0;"INVENTORY VALUE REPORT"
If datetype
  X2 = datetype \ Gosub L_7700
  Print #0;"FOR THE PERIOD ENDING ";X$[1,8];
End If 
If Not(WHSE)
  Print #0;" FOR ALL WAREHOUSES ";U5$;
Else 
  Print #0; Using " FOR WAREHOUSE ## ";WHSE;" ";U5$;
End If 
Print #0;""
PRNTCOLHEAD: Rem print column headings only
Print #0;"PRODUCT CODE";",";
Print #0;"PRODUCT DESCRIPTION 1        ";",";
Print #0;"PRODUCT DESCRIPTION 2        ";",";
Print #0;"MB";",";
Print #0;"COMM";",";
Print #0;"COMM DESCRIPTION";",";
Print #0;"COMM REMARKS   ";",";
Print #0;"CAT";",";
Print #0;"CATEGORY DESCRIPTION    ";",";
Print #0;"MAT";",";
Print #0;"MATERIAL DESCRIPTION     ";",";
Print #0;"VENDOR";",";
Print #0;"VENDOR NAME                   ";",";
Print #0;"VENDOR ITEM CODE    ";",";
Print #0;"PACK SIZE      ";",";
Print #0;"BUYER";",";
Print #0;"BUYER NAME                    ";",";
Print #0;"WH";",";
Print #0;"P.O. #";",";
Print #0;"RTS DATE";",";
Print #0;"TRANS#";",";
Print #0;" ON HAND QTY";",";
Print #0;"U/M ";",";
Print #0;"   UNIT COST";",";
Print #0;" EXTENDED COST";
Print #0;""
Return 
L_6000: Rem FIND BALANCES
QTY = 0
FTK$ = " ",FTK$ \ FTK$[1,6] = R7 Using "######"
L_6015: Search #8,3,1;FTK$,R8,E \ If E = 2 Goto L_6090
Gosub L_8100
If FT2[0] <> R7 Goto L_6090
If JDATE <> 0 And FT2[2] > JDATE Goto L_6015
QTY = QTY + FT3[0]
Goto L_6015
L_6090: Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8100: Rem READ FIFOTRANS FILE
Mat Read #8,R8,0;FT1$;
Mat Read #8,R8,72;FT1;
Mat Read #8,R8,80;FT2;
Mat Read #8,R8,96;FT3;
Return 

L_9100: Rem END OF THIS RANGE

For K = 0 To 20
  T9[K] = 0
Next K

Goto OUTEND
Stop 

L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[Unittype]
CNVTU[2] = 2
If PFU1[Unittype] = -1 Or PFU1[Unittype] = -3
  If G4[0] <> 0 And G4[1] <> 0
    A[5] = G4[1];A[6] = G4[0]
  Else 
    A[5] = PROD_FACT;A[6] = PROD_LBS
  End If 
End If 
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[Unittype]
CNVTU[2] = 1
If PFU1[Unittype] = -1 Or PFU1[Unittype] = -3
  If G4[0] <> 0 And G4[1] <> 0
    A[5] = G4[1];A[6] = G4[0]
  Else 
    A[5] = PROD_FACT;A[6] = PROD_LBS
  End If 
End If 
CNVTA = QTY \ Gosub L_20000 \ QTY = AMOUNT
If PFU1[Unittype] > 0 Mat Read #4,PFU1[Unittype],10;SUNIT$;
If PFU1[Unittype] = -1 Let SUNIT$ = "CWT "
If PFU1[Unittype] = -3 Let SUNIT$ = "LB  "
CUNIT$ = SUNIT$
Return 
L_20000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 2%,Q0[1]
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
BUNIT = 0
If CNVTU[2] <> 5 Goto L_20170
BUNIT = 1
CNVTU[2] = 1
Goto L_20180
L_20170: BUNIT = 0
L_20180: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,19,50;P9$;
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_20250,L_20350,L_20350,L_20640
! Gosub ERR_SEARCH
L_20250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20330
  Next X1[2]
  FLAG = 1 \ Goto L_20650
L_20330: Next X1[1]
FLAG = 0 \ Goto L_20650
L_20350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20450
  Next CUNIT
  FLAG = 0 \ Goto L_20650
L_20450: If CUNIT = 0 Goto L_20530
L_20460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 !  " <>-1 GOTO L_20510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 !  " ITS Catch Weight!
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20530: Next X1[1]
If CNVTU[2] <> 1 Goto L_20580
If BUNIT Goto L_20580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20580: If CNVTU[2] <> 2 Goto L_20630
If Not(CNVTU[1]) Goto L_20630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20630: FLAG = 0 \ Goto L_20650
L_20640: Rem
L_20650: Rem RETURN FROM MODES 0-2
Return 

OUTEND: Rem EXIT ROUTINE
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If
!
try call dxclose() else rem
End 
!
ERR_TRAP:
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 

