! >>> Program 857
!
! description   Production Plan Worksheet
!
! loadsave -w -n 100,10 -o prog/dxport/857.dl4 src/857.src
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 22, 2001  13:31:18
Rem /usr/acct/r97//usr/acct/jcs/work/devl/mfg/mx857.src (univ2) [jcs] {28651}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time
Option Default Dialect IRIS1
Rem MX857 - PRODUCTION PLAN WORKSHEET
Rem         ************
Rem

! local subs

Declare Sub GetParameters,DoConvert,ReadProduct

try ! main try
dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],J4$[50]
Dim 3%,Z2,A2,AMNT,BMAMT,COST,BMQTY
Dim 2%,Z4,B[24],C4[8]
Dim 3%,A1[9],Q,X1,WGHT
Dim K5$[50],P9$[50],J1$[5],J0$[5]
Dim N1$[30],N2$[26],P1$[12]
Dim L$[5],X$[10]
Dim 3%,S3,2%,S4,R7
Dim 1%,E,L8,J,S2[3],RASL[5]
Dim 2%,C2,B1,F9
Dim 2%,R5[5],R2,C,R[40],R1,E2
Dim 1%,E1,X,F,P[1],L9,I4,K,I9
Dim F$[20],P$[156],N$[12],H$[156],P0$[156]
Dim A$[20],J$[20],P3$[6]
Dim I$[30],B$[30],U5$[50]
Dim V7$[50]
Dim U9$[132],D8$[12]
Dim Y$[12]
Dim P2$[66],3%,P2[3],T9,1%,P1[1]

! DX stuff
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[200]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]

dim 3%

Def FNR(H) = Sgn(H) * (Int(Abs(H) * 1000 + .5) * .001)

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

j8 = 0
try
	J9 = Chf(0) 
else
	J8 = Spc(8)
end try
If J8 If J8 <> 49 error j8
if j8
	e$ = "Browser output not supported for this report."
	error 10000
end if
! hold off setting output (which closes dynamicx)
! until after all parameters validated in case of error

Call Time(U5$)
D8$ = U5$[1,12]
I4 = 0
I9 = 0
For E1 = 2 To 8
	Read X
	If X
		Read #1,88,X;F$[1,16];
		Open #E1,F$
	end if
Next E1
Data "0","1792","1728","1104","656","2528","0"
Rem 0=$LPT   1=CNTRL     3=PRODS     4=CODES  5=PARTSDESC
! 6=BOMFLE, 7=SPRODLOT
Mat Read #1,19,50;P9$;
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9

if not(j8)
	! only do this after all output is validated
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
end if

R1 = 0
B$ = " ",B$
call GetParameters()
! real work starts here once parameters are
! all validated

gosub L_2000: ! get weight
P = Spc(6)
P[1] = 128
Gosub L_5800
Gosub L_5700
E2 = C2 \ Call ReadProduct()
P1$[1,12] = P$[140,151]
Mat Read #3,C2,156;B1;
P0$ = P$
R2 = C2
Gosub L_5000
N1$[13,24] = P1$ \ X1 = 1
E2 = R2 \ S3 = R5[3] \ F9 = 1
Call ReadProduct() \ S2[0] = PFU1[8]
S2[1] = 1
BMQTY = S3
Gosub L_5095
P = 0
I4 = I4 + 1
Gosub L_4500
Goto OUTEND

L_1160: If L9 > 74 Gosub L_1190
	L9 = L9 + 1
Return 

L_1190: Rem
	Gosub L_5800
	Gosub L_5700
Return 

L_2000: Rem GET WEIGHT
	CNVTA = R5[1];CNVTU[0] = Z4;CNVTU[1] = 0;CNVTU[2] = 1
	Call DoConvert()
	If A[5] = 0 Let A[5] = 1
	WGHT = FNR(A[6] * AMNT / A[5])
Return 


! DEAD CODE
! Print #0;"\15\\15\";

L_4500: Rem COMMENT
	If L9 > 66 Gosub L_5800
	U9$ = ".",U9$
	Print #0;"\15\\15\";
	Read #4,Z4,10;P0$[120,122];
	Print #0;"      LOT NUMBER=.............  NUMBER OF ";P0$[120,122];"=";R5[5]
	Print #0;"SPECIAL INSTUCTIONS (30): ";U9$[1,80]
	Print #0;"SPECIAL INSTUCTIONS (30): ";U9$[1,80]
	Print #0;"PACKAGING COMMENTS  (30): ";U9$[1,80]
	Print #0;"BOM COMMENTS        (30): ";U9$[1,80]
	Print #0;"COMPLETION DATE   /  /       SHIP DATE   /  /     MACHINE # ........"
	Print #0; Using "REQUESTED PRODUCTION ####,###.##";R5
Return 

L_4700: Gosub L_1160
	If L8 < 2 Print #0;" "
	X1 = 1 \ If (S2[1] = 0 Or S2[1] = 2) Let X1 = .01
	Q = FNR(X1 * BMQTY * R5[1]) \ If S2[1] = -1 Let Q = BMQTY
	If S2[1] = 2 Let Q = FNR(X1 * WGHT * BMQTY)
	If (S2[1] = 0 Or S2[1] = 2) Goto L_4720
	S3 = Q \ Gosub L_6800 \ Q = BMAMT
	L_4720: If L8 <= 2 Print #0; Using "--------#.####"; Tab 68;Q;" TOTAL ";P$[120,122];
	Print #0;"\15\";
	Print #0; Tab 104;"-------------";
	Gosub L_1160
	Print #0;"\15\";
	Print #0; Using "-------#.###"; Tab 104;T9;
	L_4750: Print #0;"\15\";
	Gosub L_1160
	L_4760: T9 = 0
Goto L_5015

L_5000: Rem EXPLOSION
	A$ = R2 Using "#####   0    0"
	F$ = A$
	L_5015: Search #6,3,1;F$,S4,R1
	If R1 Return 
	If A$[1,5] <> F$[1,5] Return 
	If F$[15,16] <> H$[6,7] Goto L_5015
	Read #6,S4;S3;
	Mat Read #6,S4,6;N1$;
	Mat Read #6,S4,48;S2;
	Mat Read #6,S4,56;N2$;
	BMQTY = S3
	If F9 = 0 Let F9 = 1
	J$[1,14] = F$[1,14]
	X1 = 1
	If S2[1] = 0 Let X1 = .01
	If S2[1] <> 0 Let X1 = 1
	E2 = J$[10,14]
	L_5095: If L9 > 74 Gosub L_1190
	If S2[3] = 1 Let P$ = " ",P$;P$[140,141] = "Z ";P$[9,34] = N2$[1,26] \ Goto L_5110
	J1$ = "Y";J0$ = "Y" \ Call ReadProduct()
	If S2[2] = 1 Gosub L_6550
	S2[2] = 0
	If J1$ = "N" Goto L_4760
	Gosub L_6850 \ Gosub L_1160
	L_5110: Print #0;"\15\";P$[140,151]; Tab 14;P$[9,38];
	If S2[3] = 1 Goto L_4750
	Print #0; Tab 46;P$[39,50]; Tab 63;P$[152,155];
	Print #0; Using "--------#.####"; Tab 68;FNR(BMAMT);
	If S2[1] = -1 Print #0;"F";
	If S2[1] = 0 Print #0;"%";
	If S2[1] = 1 Print #0;" ";
	If S2[1] = 2 Print #0;"#";
	P$[120,122] = "ERR" \ If S2[0] > 0 Read #4,S2[0],10;P$[120,122];
	Print #0; Tab 83;P$[120,122];
	R5[2] = (BMAMT)
	L8 = 1
	U9$ = P$[140,151]
	L_5165: Search #7,3,2;U9$,R7,E
		V7$ = U9$
		If E Goto L_4700
		If U9$[1,12] <> P$[140,151] Goto L_4700
		Mat Read #7,R7;P2$;
		Mat Read #7,R7,66;P1;
		Mat Read #7,R7,82;P2;
		Mat Read #7,R7,114;P3$;
		If (P2[0] - P2[1] - P2[3]) <= 0 Goto L_5165
		Gosub L_6700
		X1 = 1 \ If S2[1] = 0 Let X1 = .01
		Q = FNR(X1 * BMQTY * R5[1]) \ If S2[1] = -1 Let Q = BMQTY
		If S2[2] = 2 Let Q = FNR(X1 * BMQTY * WGHT)
		If (S2[1] = 0 Or S2[1] = 2) Goto L_5215
		S3 = Q \ Gosub L_6800 \ Q = BMAMT
		L_5215: If L8 = 2 Print #0; Using "--------#.###"; Tab 69;Q;" TTL ";P$[120,122];
		If RASL Print #0; Tab 90;P3$[1,6];
		Print #0; Using "##"; Tab 98;P1;
		BMAMT = P2[0] - P2[1] - P2[3]
		Print #0; Using "------#.## "; Tab 105;BMAMT;
		Print #0; Tab 116;P$[120,122];
		Print #0; Tab 120;P2$[13,24];
		T9 = T9 + BMAMT
		Gosub L_1160
		Print #0;"\15\";
		U9$ = V7$
		L8 = L8 + 1
	Goto L_5165

L_5700: U9$ = " ",U9$
	U9$[1,12] = "PRODUCT #"
	U9$[15,25] = "DESCRIPTION"
	U9$[47,51] = "ALT 1"
	U9$[64,65] = "CC"
	U9$[70,80] = "FORMULA QTY"
	U9$[84,85] = "UM"
	U9$[87,93] = "QTY/MIX"
	U9$[95,101] = "LTN/WHS"
	U9$[105,111] = "AVL QTY"
	U9$[117,118] = "UM"
	U9$[120,124] = "LOT #"
	Print #0;U9$
	L9 = 5
Return 

L_5800: Rem HEADINGS
	U9$ = " ",U9$
	U9$[1,1] = "\14\"
	U9$[2,18] = "DATE ",D8$
	I9 = I9 + 1
	U9$[120,128] = I9 Using "PAGE ###"
	U9$[48,95] = "P R O D U C T I O N   PLAN   W O R K S H E E T"
	Print #0;U9$;
	U9$ = " ",U9$
	U9$[1,1] = "\15\"
	U9$[48,95] = " ",U9$[48,95]
	Print #0;U9$;
	Print #0;"\15\PRODUCT NUMBER: ";Y$
	If Z4 Read #4,Z4,10;K5$[1,4];
	Print #0;"DESCRIPTION : ";H$[9,38];
	If P9$[26,26] = "Y" Print #0;"  ";H$[63,92];
	Print #0;"  ";K5$[1,4]
Return 

L_6000: Rem ERROR ROUTINE
	Print "  INVALID ";
	Signal 3,10
	Print 'MU'
	Print 'CL';
	Print 'MU';
Return 

! DEAD CODE
!
! L_6500: Rem OPTIONAL PATH -> TAKE IT?
! If P9$[16,16] = "S" Let J0$ = "N" \ Return 
! Print @0,20;'CE';N1$[13,24];" IS OPTIONAL MAKE ITEM.  EXPLODE IT? (Y/N)  ";
! Input ""J0$ \ Print @0,20;'CL'
! If J0$ <> "Y" If J0$ <> "N" Goto L_6500
! If J0$ = "Y" Return 
! If J0$ = "N" Return 
! Goto L_6500

L_6550: Rem OPT - RM
! 	J0$ = "N"
! 	Print @0,21;'CE';N1$[13,24];" IS OPTIONAL ITEM.  USE IT? (Y/N)  ";
! 	Input ""J1$ \ Print @0,21;'CL'
! 	If J1$ <> "Y" If J1$ <> "N" Goto L_6550
! 	If J1$ = "Y" Return 
! 	If J1$ = "N" Return 
	j1$="N"
	if useOpt j1$="Y"
Return

L_6700: Rem CNVT LOT QTYS TO PRDTN UNITS
	For Z9 = 0 To 3
		If Z9 = 2 Goto L_6730
		S3 = P2[Z9] \ Gosub L_6800
		P2[Z9] = BMAMT
	L_6730: Next Z9
Return 

L_6800: Rem BASE(S3) -> PRDTN
	CNVTA = S3 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 1
	Call DoConvert()
	BMAMT = AMNT \ Return 
	CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 2
	Call DoConvert()
	COST = FNR(AMNT)
Return 

L_6850: Rem BASE --> BOM  UNITS (NO ROUND)
	CNVTA = S3 \ CNVTU[0] = 0 \ CNVTU[1] = S2 \ CNVTU[2] = 5
	If (S2[1] = 0 Or S2[1] = 2) Let AMNT = S3 \ Goto L_6860
	Call DoConvert()
	L_6860: Rem IF AMNT<=0 LET AMNT=S3
	BMAMT = AMNT \ Return 
	CNVTA = COST \ CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 2
	Call DoConvert()
	COST = AMNT
Return 


OUTEND: Rem EXIT
! Print 'CS'
Close 
! Chain "MX000"
Stop 
End 

else
	include "src/callmainerrnet.inc"
end try

Sub GetParameters()
try
	I$ = GetParameter$("PRODUCT")

	A$ = " ",A$
	A$ = A$[1,12]
	Y$ = I$
	I$ = I$[1,12]
	A$[1,Len(I$)] = I$
	Search #3,2,1;A$,R,R1
	IF R1
		e$ = "Invalid product code!"
		error 1000
	end if
	Mat Read #3,R,0;H$;
	E2 = R \ Call ReadProduct()
	Z4 = PFU1[8]
	N$ = A$
	Read #4,Z4,10;K5$[1,4]; ! unit of measure
	C2 = R
	L$ = "S"

	I$ = GetParameter$("PRODUCTIONQTY")
	R5 = I$
	If I$ = "" or R5 = 0
		e$ = "Valid production quantity must be entered!"
		error 10000
	end if
	R5[3] = 0
	R5[5] = R5
	R5[1] = FNR(R5)

	I$ = GetParameter$("REWORKQTY")
	R5[3] = I$ \ R5[5] = R5[5] + R5[3]
	If R5[1] Let R5[3] = R5[3] / R5[1]
	
	I$ = GetParameter$("USEOPTIONAL")
	if I$="Y" useOpt = 1
else
	include "src/callsuberr.inc"
end try
end sub

Sub ReadProduct()
try
	If S2[3] = 1 exit sub ! non-stock
	Mat Read #3,E2;P$;
	Mat Read #3,E2,156;B;
	Mat Read #3,E2,256;A;
	Mat Read #3,E2,512;PFU1;
	Mat Read #3,E2,554;PFU2;
	If Not(B[8]) Let B[8] = B[21]
	If Not(B[8]) Let B[8] = B[10]
	A2 = B[8]
else
	include "src/callsuberr.inc"
end try
end sub

Sub DoConvert()
try
	If S2[3] = 1 Let AMNT = CNVTA \ return
	Call "MXPRCONV5.DL4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
	If FLAG Let E = FLAG \ error 11000
	AMNT = CNVTA
else
	include "src/callsuberr.inc"
end try
end sub
