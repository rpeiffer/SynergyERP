! serp119.dl4 - Purge/Update Last Price
! 1.0 02/02/2010 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp119.dl4 src/serp119.src
!
! ERPScheduler Enabled
!
Rem MX119 LAST PRICE PURGE
Rem "Last Update:  roman 01/05/1992  clean up
Rem "              roman 05/13/1994  expand dept to 999
!                03/25/1997 - DATE COMPARE JULIAN
!jliu 05/05/00 cct135573 - add the option - update the prod description
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR  2, 2007  14:59:19
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx1/mx119.src (univ2) [txc] {50140}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! this puts a status report out onto myreports
include "src/copyright.inc"
Declare Intrinsic Sub Date

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
Declare External Sub ERPCronSuccess
Declare External Function GetParameter$
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
Declare External Function GetUIDRec
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,programdump
Declare Intrinsic Function findchannel
Declare Function ChkDateFrmt$
!Option Default Dialect IRIS1

!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],Y,ZEROPURGE,COID
Dim 1%,D,E,F,I,L1,L2,L3,M,W,Y9,Z,UPDATEPRODDESC
Dim 1%,Z2[23],Z9[23],UPDATEONLY,LPWH,2%,JEDATE,JDATE[5]
Dim 2%,A2[2],D8,K1,K2,X,X1,LPR1[3],VEND,B[24],W2[9],DT3[1],JWDATE
dim 2%,startslsm,endslsm,c1[12]
Dim 2%,SLLPR1[3],CUST,DEPT,LPDEPT,3%,SLC4[3],SLP2$[84],SLP$[12],HK$[50]
Dim 2%,SLC1[2],3%,SLPR[4],NumRec[5]
Dim 3%,A3[2],J,J1,X2[9],C4[3],LPR[4],R1,R1TMP,R5,V1,R[99],LPDIR5
Dim J$[50],J0$[15],J1$[50],J2$[20],J4$[50],J5$[70],J7$[40],L$[82]
Dim J9$[50],X$[20],P$[12],P60$[50],PROD1$[12],PROD2$[12],OPT$[1]
Dim K$[50],K1$[20],K2$[50],U5$[16],COMKEY$[50],P2$[84],A$[156]
Dim P9$[50],WH$[15],COMDY1$[4],COMDY2$[4],P61$[256],KSL$[60],KSL1$[60]
Dim SPACES$[79],TMP_KSL1$[60],Dlog$[40],Custom_Customer$[30]
dim pplog$[60],3%,passinfo[20],permlog[35],X3[9]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[600],msg$[100],rstr$[2000],webstr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128],action1$[30],action2$[30]
! call dxopen() ! for standalone run
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$

!Call dxsave(0,"tmp/119in.txt!") ! save web data sent
action$=UCase$(action$)
 action$=RTrim$(Action$) ! "trim spaces from end
 action1$=UCase$(action1$)
 action1$=RTrim$(Action1$) ! "trim spaces from end
 action2$=UCase$(action2$)
 action2$=RTrim$(Action2$) ! "trim spaces from end
 Usrid=GetUIDRec(e$,IntCo,Userid$)
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For I = 2 To 7
  Read W \ If W = -1 Goto L_860
  Read #1,88,Abs(W);U5$;
  If W >= 0 ! "read/write access
    Open #I,U5$
  Else ! "read-only
    Ropen #I,U5$
  End If 
L_860: Next I
Data "1376","-1808","-1792","-1744","-1","-1"
Mat Read #1,60,50;P60$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
If P61$[64,64] = "Y" ! "chk 4 / Open Shiplist last price
  U5$ = "3/SLLSTPRC" + Str$(COID)
  Call FindF(U5$,E)
  If Not(E) ! "not found
    P61$[64,64] = "N"
  Else 
    Open #6,U5$
    Read #1,88,2112;U5$;
    Ropen #7,U5$
  End If 
End If 
trackperm=0! check if they have this feature
Let U5$="2/permpricelog"+Str$(COID)
call findf(U5$,trackperm)
Dlog$="files/6/lp.log" ! for logpermprice
I = 0 \ Call FindF("txt/lppurge.acme.hlp",I) ! (acme has slsm range included)
!I = 0 \ Call FindF("txt/lppurge.hlp",I)
If Not(I) !  "not there
  E$= "HELP FILE NOT FOUND -- PROGRAM ABORTING"
  !Gosub L_7600
  Goto Err_Msg ! OUTEND
End If 
SPACES$ = " ",SPACES$
Search #2,1,5;K2$,LPDIR5,E
If Not(E) Let LPDIR5 = 1
If E Let LPDIR5 = 0
if p61$[64,64]="Y"
	Search #6,1,5;K2$,SLPDIR5,E
	If Not(E) Let SLPDIR5 = 1
	If E Let SLPDIR5 = 0
Endif
if action1$="START" ! send the hlp file
	tmp$=bsdel$,"SYSFLAG",fdel$,rdel$
	call addtostr(e$,rstr$,TMP$)
	tmp$="LPSALES",fdel$,rdel$
	call addtostr(e$,rstr$,TMP$)
	tmp$=P60$[32,32],fdel$,rdel$,esdel$
	call addtostr(e$,rstr$,TMP$)
	tmp$=bsdel$,"PROGMSG",fdel$,rdel$
	call addtostr(e$,rstr$,TMP$)
	tmp$="TEXTMSG",FDEL$,rdel$
	call addtostr(e$,rstr$,TMP$)
	chan=findchannel()
	Open #chan,"txt/lppurge.acme.hlp" ! added slsm range
	L_3030: Read #Chan;L$;
	If L$ <> "" 
		if l$[len(l$)]<" " let l$[len(l$)]=" "
		tmp$=RTrim$(L$)+fdel$+rdel$
		call addtostr(e$,rstr$,tmp$)
		Goto L_3030
	Endif
	Close #Chan
	If P61$[64,64] = "Y" 
		tmp$="ALSO APPLIES TO SHIPLIST LAST PRICING",fdel$,rdel$
		call addtostr(e$,rstr$,tmp$)
	Endif
	call addtostr(e$,rstr$,esdel$) ! end of section
	returnstatus=1;message$="OK"
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
	goto OutEnd
Endif
if action1$<>"SUBMIT" ! sending something.
	e$="Action 1 not found"
	returnstatus=0
	goto err_msg
Endif
!Print 'CS';@0,0;"MX119";@11,0;"LAST PRICE PURGE/UPDATE"
! Gosub L_3000 \ Print @0,3;'CE';@10,5;"SCANNING CUSTOMER #"
! NOW THE FUN STARTS
UPDATEONLY = 0 \ UPDATEPRODDESC = 0
if erpCron
	runopt = GetParameter$("RNOPT")
	if runopt = 1 opt$ = "P"
	if runopt = 2 opt$ = "U"
else
	opt$ = ucase$(rtrim$(GetParameter$("RNOPT")))
end if
if opt$<>"U" and opt$<>"P" ! no good
	returnstatus = 0
	e$="Options are U or P"
	goto Err_Msg
Endif
UPDATEONLY = 0 \ UPDATEPRODDESC = 0
If OPT$ = "U" Let UPDATEONLY = 1
If UPDATEONLY ! options on udonly
	opt$ = ucase$(rtrim$(GetParameter$("UDPRDESC")))
	UPDATEPRODDESC=0
	If OPT$ = "Y" Let UPDATEPRODDESC = 1
	If OPT$ <> "Y" And OPT$ <> "N" ! Print 'RB' \ Goto L_3100
		returnstatus=0
		E$="Answer is Y or N for Update Product Description"
		goto Err_Msg
	Endif
	Let K$ = " ",K$ \ Goto L_1190
Endif
! below are the purge variables
!Print @10,3;'CL';@10,3;"LAST DATE TO PURGE"
!Print @10,5;'CL';@10,5;"SCANNING CUSTOMER #"
!Print @0,6;'CE';
L_1040: !J0$ = "5 00064103"
!J1 = 0 \ J5$ = "Enter the last date to purge (MMDDYY)"
!J1$ = ""
!Gosub L_7000
tmp$ = GetParameter$("PURGDATE")
if erpCron ! sent in mmddyy format
	! convert to yymmdd
	call date(tmp$,tmp2$,6,e)
	if e
		returnstatus=0
		e$="Invalid Purge to Date"
		goto Err_msg
	end if
else
	tmp$=chkDateFrmt$(tmp$)
	if tmp$[1,1]<"0" and tmp$[1,1]>"9" let tmp$=""
	tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy to yyyymmdd
	tmp2$=tmp1$[3,8] ! just yymmdd
end if
J4$=tmp2$
If J4$ = "" Goto OUTEND
! J1$ = J4$[5,6],J4$[1,4]
D8 = J4$
X2 = D8 \ Gosub L_7820 \ X2=-1
if x2=-1
	returnstatus=0
	e$="Invalid Purge to Date"
	goto Err_msg
Endif
JEDATE = X2
!Gosub L_1500
L_1500: Rem "========================== customer range
K$ = " ",K$;K$ = ""
K1$ = "9",K1$
L_1550: !Print @0,8;'CL';@0,8;"ENTER STARTING CUSTOMER, <CR> FOR FIRST, OR  E: end ";
!Input Len 16390;""J$ \ If J$ = "E" Goto OUTEND
j$ = GetParameter$("SCUST")
K1 = J$
If K1<0 or K1 > 999999 ! Goto L_1550
	returnstatus=0
	message$="Invalid Start Customer"
	goto ERR_MSG
Endif
L_1600: !Print @0,9;'CL';@8,9;"ENDING CUSTOMER,  <CR> FOR LAST,  OR  E: end ";
!Input Len 16390;""J$ \ If J$ = "E" Goto OUTEND
j$ = GetParameter$("ECUST")
K2 = J$ \ If Not(K2) Let K2 = 999999
If K2<0 or K2 > 999999 !Goto L_1600
	returnstatus=0
	message$="Invalid End Customer"
	goto ERR_MSG
Endif
K$ = K1 Using "######"
K1$ = " ",K1$
K1$ = K2 Using "######"
If K2 < K1 !Print 'RB'; \ Goto L_1500
	returnstatus=0
	message$="Invalid Customer Range"
	goto ERR_MSG
Endif
ZEROPURGE = 0 \ If P60$[32,32] <> "Y" Goto L_1720
L_1680: ! Print @0,10;'CL';@0,10;"ONLY PURGE ITEMS WITH NO YTD SALES RECORD (Y/N/ E: end)? ";
!Input Len 16385;""J$ \ If J$ = "E" Goto OUTEND
j$ = ucase$(rtrim$(GetParameter$("ZEROYTD")))
If J$ = "Y" Let ZEROPURGE = 1
If J$ <> "N" And J$ <> "Y" !Print 'RB'; \ Goto L_1680
	returnstatus=0
	message$="Answer Y or N for No YTD Sales Purge"
	goto err_msg
Endif
L_1720: Rem ~ask for product range
!Print @0,22;'CL';
!Print @0,11;'CL';@0,11;"ENTER STARTING PRODUCT, <CR> FOR FIRST, OR  E: end ";
!Input Len 16396;""J$ \ If J$ = "E" Goto OUTEND
j$ = ucase$(GetParameter$("SPROD"))
PROD1$ = J$ + "            "
!Print @0,12;'CL';@8,12;"ENDING PRODUCT,  <CR> FOR LAST,  OR  E: end";
!Input Len 16396;""J$ \ If J$ = "E" Goto OUTEND
j$ = ucase$(GetParameter$("EPROD"))
If J$ = ""
  PROD2$ = "ZZZZZZZZZZZZ"
Else 
  PROD2$ = J$ + "            "
End If 
If PROD2$ < PROD1$ !Print 'RB'; \ Goto L_1720
	returnstatus=0
	message$="Invalid Product Range"
	goto ERR_MSG
Endif
L_1870: Rem ~ask for commodity range
!Print @0,22;'CL';
!Print @0,13;'CL';@0,13;"ENTER STARTING COMMODITY, <CR> FOR FIRST, OR  E: end ";
!Input Len 16388;""J$ \ If J$ = "E" Goto OUTEND
j$ = ucase$(GetParameter$("SCOMD"))
COMDY1$ = J$ + "    "
!Print @0,14;'CL';@8,14;"ENDING COMMODITY,  <CR> FOR LAST, OR  E: end ";
!Input Len 16388;""J$ \ If J$ = "E" Goto OUTEND
j$ = ucase$(GetParameter$("ECOMD"))
If J$ = ""
  COMDY2$ = "ZZZZ"
Else 
  COMDY2$ = J$ + "    "
End If 
If COMDY2$ < COMDY1$ ! Print 'RB'; \ Goto L_1870
	returnstatus=0
	message$="Invalid Commodity Range"
	goto ERR_MSG
Endif
! ADDED SALESMAN RANGE
startslsm = GetParameter$("SSLSM")
if startslsm<0 or startslsm>999 or fra(startslsm)
	returnstatus=0
	message$="Invalid Starting Salesperson"
	goto ERR_MSG
Endif
tmp$ = GetParameter$("ESLSM") \ if trim$(tmp$)="" let tmp$="999"
endslsm=tmp$
if endslsm<0 or endslsm>999 or fra(endslsm) or endslsm<startslsm
	returnstatus=0
	message$="Invalid ending salesperson"
	goto ERR_MSG
Endif
!Print @0,21;'CE';@0,22;"READY TO PURGE (Y/N)? ";
!Input Len 16385;""J$
!If J$ <> "Y" Goto OUTEND
!
L_1190: Rem "prep to begin
ReportDir$ = "REPORTDIR" \ System 28,ReportDir$
BaseName1$ = "last_price_119_"+dateusing$(Tim#(0),"YYMMDDHHNNSS")
StatusFile$ = ReportDir$ + "/"+BaseName1$
Call FindF(StatusFile$,tmp)
If tmp Kill StatusFile$
StatChan = FindChannel() ! channel to build text file need fixed channel
Try Close #StatChan Else Rem
Try
	Build #StatChan,StatusFile$ As "TEXT"
Else
	Returnstatus=0 ! eflg=eflg+1
	let E$="Error in Building Status File "
	goto Err_Msg ! outend:
end TRY
Try Close #StatChan Else Rem
Try
	Open #StatChan,StatusFile$
else
	Returnstatus=0 !eflg=eflg+1
	let e$="Error in Opening Status File "
	goto Err_Msg !outend:
end TRY
tmp$="Last Price "
if UPDATEONLY let tmp$=tmp$+"Update " Else let tmp$=tmp$+"Purge "
tmp$=tmp$+"Started..."
Print #StatChan;tmp$
! PAUSE 20
X3 = AddToMYReports(BaseName1$) 
if x3<0
	e$="Error adding to my reports!" 
	returnstatus=0
	goto Err_Msg ! outend:
Else ! all okay - let user know
	returnstatus=1
	Message$="Started, please check My Reports name "+BaseName1$+" for status & completion"
	if erpCron
		print Message$
	else
		Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
		Call AddToStr(e$,rstr$,WebStr$)                            
		Call SetOutPut(e$,rstr$)    
	end if
endif
tmp$="Options selected:"
Print #StatChan;tmp$
if UPDATEONLY ! only one
	tmp$="Update Product Description="
	if UPDATEPRODDESC let tmp$=tmp$+"Y" Else let tmp$=tmp$+"N"
	Print #StatChan;tmp$
Else ! is purge (and a lot more options)
	x$=PDate$(d8)
	tmp$="Last Purge Date="+x$
	Print #StatChan;tmp$
	tmp$="Customer Range="+Str$(K1)+" to "+Str$(K2)
	Print #StatChan;tmp$
	tmp$="Product Range="+Prod1$+" to "+Prod2$
	Print #StatChan;tmp$
	tmp$="Commodity Range="+Comdy1$+" to "+Comdy2$
	Print #StatChan;tmp$
	tmp$="Salesperson Range="+Str$(startslsm)+" to "+Str$(Endslsm)
	Print #Statchan;tmp$
	If p60$[32,32]="Y"
		x$="N" \ if ZeroPurge let x$="Y"
		tmp$="Purge Only Records with Zero YTD Sales="+X$
		Print #StatChan;tmp$
	Endif
Endif
HK$ = "";NumRec=0;NumRec[1]=0;NumRec[2]=0
L_1200: Rem BEGIN
Search #2,3,1;K$,R1,E \ If E = 2 Goto CUSTEND
If E error 11000
If Not(UPDATEONLY) And K$[1,6] > K1$[1,6] Goto CUSTEND
Mat Read #2,R1,0;P$
Mat Read #2,R1,16;A2
Mat Read #2,R1,28;A3
Mat Read #2,R1,56;P2$
Mat Read #2,R1,140;C4
Mat Read #2,R1,168;LPR
Mat Read #2,R1,198;LPR1
Mat Read #2,R1,274;LPWH
numrec=numrec+1
if not(fra(Numrec/500)) ! send update every 500
	tmp$="Scanned "+Str$(NumRec)+" Key="+K$
	Print #StatChan;tmp$
Endif
VEND = K$[31,36]
X2 = A2[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
Gosub L_2000 \ Goto L_1290 ! CHECK CUST/PROD - return=delete, +1=continue
! as lp can get messed up
if not(c4[3]) and p$[1,12]<>K$[11,22] GOTO L_1290 ! DIFF PROD IN FILE??
If UPDATEONLY
  If Not(C4[3]) And (K$[37,40] <> A$[152,155] Or VEND <> B[24]) Gosub L_3200
  If UPDATEPRODDESC And C4[3] = 0 ! "do stocks only
    If P2$[21,50] <> A$[9,38] Or P2$[51,80] <> A$[63,92]
      P2$[21,50] = A$[9,38] \ P2$[51,80] = A$[63,92]
      Mat Write #2,R1,56;P2$;
    End If 
  End If 
  Goto L_1400
End If 
If P$[1,12] < PROD1$ Or P$[1,12] > PROD2$ Goto L_1400
If A2[2] If JWDATE > JEDATE Goto L_1400
If ZEROPURGE And LPR[4] <> 0 Goto L_1400
If P2$[81,84] < COMDY1$ Or P2$[81,84] > COMDY2$ Goto L_1400
if c1[2]<STARTSLSM or c1[2]>ENDSLSM goto L_1400 ! out of range
L_1290: ! DELETE IT
If Not(C4[3]) ! not non-stock
	dellp=0
	gosub log_permprice_before ! do call to do before delete
	dellp=1
	gosub log_permprice_after ! and now after
Endif
Mat Write #2,R1;Z2; ! CLEAR 1st 50 chars?
tmp$="Deleting "+K$
print #statchan;tmp$
numrec[2]=numrec[2]+1
Search #2,5,1;K$,K2,E \ If E error 11000
K2$ = " ",K2$
K2$ = K$[1,10] + K$[37,40] + K$[11,36]
Search #2,5,2;K2$,K2,E \ If E error 11000
K2$ = " ",K2$
K2$ = K$[1,10];K2$[11,16] = 999999 - LPR1[2] Using "######"
K2$[17,46] = K$[11,40]
Search #2,5,3;K2$,K2,E \ If E>1 error 11000
K2$ = " ",K2$;K2$ = K$[31,40];K2$[11,30] = K$[11,30]
K2$[31] = K$[1,10]
Search #2,5,4;K2$,K2,E \ If E error 11000
If LPDIR5 ! if the 5th dir exsists
  K2$ = " ",K2$;K2$ = K$[11,30]
  K2$[21,30] = K$[1,10];K2$[31] = K$[31]
  Search #2,5,5;K2$,K2,E \ If E error 11000
End If 
E = 3 \ Search #2,1,0;K$,R1,E \ If E error 11000
If P61$[64,64] = "Y" ! "ship list last price - if main cust/prod deleted
  E = 2
  CUST = K$[1,6];DEPT = K$[7,10];P$=K$[11,30]
  X2[1] = 2;X2[2] = 6;X2[3] = 7;X2 = 0
  Call "MX117SLDEL.DL4",CUST,DEPT,X2,X2,P$,X2[],X2,E,e$,IntCo
End If 
L_1400: Rem
! Print @39,5;"[";K$[1,6];"]";
Goto L_1200

L_2000: Rem CHK CUST/PROD
C1[2]=0 ! slsm
J2$ = " ",J2$ \ J2$ = A2[0] Using "######"
Search #3,2,1;J2$,V1,E \ If E > 1 error 11000
If E Return  ! not found - delete
mat read #3,v1,142;c1;

If C4[3] = 1 Return 1
J2$ = " ",J2$ \ J2$ = P$[1,12]
Search #4,2,1;J2$,V1,E \ If E > 1 error 11000
If E Return 
Mat Read #4,V1,0;A$;
Mat Read #4,V1,156;B;
W2[3] = 0 \ If P9$[32,32] = "Y" And LPWH Gosub L_3500
Return 1
L_3000: Rem CHOOSE OPTION
!Print @0,2;'CE';
!Open #99,"LPPURGE.HLP"
!L_3030: Read #99;L$;
!Print L$; \ If L$ <> "" Goto L_3030
!Close #99
!If P61$[64,64] = "Y" Print @0,20;'CE';"ALSO APPLIES TO SHIPLIST LAST PRICING";
!L_3060: Print @0,21;'CE';"Enter   P: purge   U: update  <CR>: end ";
!Input Len 16385;""OPT$ \ If OPT$ = "" Goto OUTEND
!UPDATEONLY = 0 \ UPDATEPRODDESC = 0
!Call String(1,OPT$)
!If OPT$ = "U" Let UPDATEONLY = 1
!If OPT$ <> "U" And OPT$ <> "P" Print 'RB'; \ Goto L_3060
!If UPDATEONLY
!L_3100: Print @0,22;"Update the product description (Y/N)?";
!  Input Len 16385;""OPT$
!  Call String(1,OPT$)
!  If OPT$ = "Y" Let UPDATEPRODDESC = 1
!  If OPT$ <> "Y" And OPT$ <> "N" Print 'RB' \ Goto L_3100
!End If 
!If UPDATEONLY
!  Print @0,22;'CE';"Enter  U: to begin UPDATE or <CR> to abort: ";
!  Input Len 16385;""OPT$
!  Call String(1,OPT$)
!  If OPT$ <> "U" Goto OUTEND
!End If 
!Print @0,2;'CE';
!For X = 2 To 23 \ Print @0,X;SPACES$; \ Next X
Return 
L_3200: Rem "======================================== COMMODITY CHANGE
tmp$="Commodity/Vendor Change "+K$
print #statchan;tmp$
R1TMP = R1;Numrec[1]=numrec[1]+1
COMKEY$ = " ",COMKEY$
COMKEY$[1,40] = K$[1,40]
Search #2,5,1;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
COMKEY$[1,10] = K$[1,10];COMKEY$[11,14] = K$[37,40]
COMKEY$[15,40] = K$[11,36]
Search #2,5,2;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
COMKEY$[1,10] = K$[1,10];COMKEY$[11,16] = 999999 - LPR1[2] Using "######"
COMKEY$[17,46] = K$[11,40]
Search #2,5,3;COMKEY$,R1,E \ If E>1 Or R1 <> R1TMP error 11000
COMKEY$ = " ",COMKEY$;COMKEY$[1,10] = K$[31,40]
COMKEY$[11,30] = K$[11,30];COMKEY$[31] = K$[1,10]
Search #2,5,4;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
If LPDIR5 !if the 5th dir exsists
  COMKEY$ = " ",COMKEY$;COMKEY$[1,20] = K$[11,30]
  COMKEY$[21,30] = K$[1,10];COMKEY$[31] = K$[31]
  Search #2,5,5;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
End If 
P2$[81,84] = A$[152,155];C4[1] = B[24]
Mat Write #2,R1,56;P2$
Mat Write #2,R1,140;C4
COMKEY$ = " ",COMKEY$
K$[31,36] = C4[1] Using "######"
K$[37,40] = A$[152,155]
COMKEY$ = K$[1,40]
Search #2,4,1;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
COMKEY$[1,10] = K$[1,10];COMKEY$[11,14] = K$[37,40]
COMKEY$[15,40] = K$[11,36]
Search #2,4,2;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
COMKEY$[1,10] = K$[1,10];COMKEY$[11,16] = 999999 - LPR1[2] Using "######"
COMKEY$[17,46] = K$[11,40]
Search #2,4,3;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
COMKEY$ = " ",COMKEY$;COMKEY$[1,10] = K$[31,40]
COMKEY$[11,30] = K$[11,30];COMKEY$[31] = K$[1,10]
Search #2,4,4;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
If LPDIR5 !if the 5th dir exsists
  COMKEY$ = " ",COMKEY$;COMKEY$[1,20] = K$[11,30]
  COMKEY$[21,30] = K$[1,10];COMKEY$[31] = K$[31]
  Search #2,4,5;COMKEY$,R1,E \ If E Or R1 <> R1TMP error 11000
End If 
Return 
ADJSHPLST: Rem "Ship List Last Price Commodity changed
tmp$="Commodity/Vendor Change "+KSL$
print #statchan;tmp$
Numrec[1]=numrec[1]+1
R[0] = R[6]
KSL1$ = " ",KSL1$
KSL1$[1,40] = KSL$[1,40]
Search #6,5,1;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$[1,16] = KSL$[1,16];KSL1$[17,20] = KSL$[37,40]
KSL1$[21,40] = KSL$[17,36]
Search #6,5,2;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$[1,16] = KSL$[1,16];KSL1$[17,22] = 999999 - SLLPR1[2] Using "######"
KSL1$[23,46] = KSL$[17,40]
Search #6,5,3;KSL1$,R[1],E \ If E>1 Or R[1] <> R[0] error 11000
KSL1$ = " ",KSL1$;KSL1$ = KSL$[1,6]
KSL1$[7,10] = KSL$[13,16]
KSL1$[11,30] = KSL$[17,36]
KSL1$[31,36] = KSL$[7,12]
KSL1$[37,40] = KSL$[37,40]
Rem "so ends up same as Cust LPR Dir 1
Search #6,5,4;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
IF SLPDIR5
	KSL1$=" ",KSL1$;KSL1$[1,20]=KSL$[17,36]
	KSL1$[21,36]=KSL$[1,16];KSL1$[37]=KSL$[37]
	Search #6,5,5;ksl1$,R[1],E \ if e or r[1]<>r[0] error 11000
Endif
SLP2$[81,84] = A$[152,155];SLC4[1] = B[24]
Mat Write #6,R[6],56;SLP2$
Mat Write #6,R[6],140;SLC4;
KSL1$ = " ",KSL1$
KSL$[37,40] = A$[152,155]
KSL1$ = KSL$[1,40];R[1] = R[6]
Search #6,4,1;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$[1,16] = KSL$[1,16];KSL1$[17,20] = KSL$[37,40]
KSL1$[21,40] = KSL$[17,36];R[1] = R[6]
Search #6,4,2;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$[1,16] = KSL$[1,16];KSL1$[17,22] = 999999 - SLLPR1[2] Using "######"
KSL1$[23,46] = KSL$[17,40];R[1] = R[6]
Search #6,4,3;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$ = " ",KSL1$;KSL1$ = KSL$[1,6]
KSL1$[7,10] = KSL$[13,16]
KSL1$[11,30] = KSL$[17,36]
KSL1$[31,36] = KSL$[7,12]
KSL1$[37,40] = KSL$[37,40]
R[1] = R[6]
Search #6,4,4;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
IF SLPDIR5
	KSL1$=" ",KSL1$;KSL1$[1,20]=KSL$[17,36]
	KSL1$[21,36]=KSL$[1,16];KSL1$[37]=KSL$[37]
	r[1]=r[6]
	Search #6,4,5;ksl1$,R[1],E \ if e or r[1]<>r[0] error 11000
Endif
Return 
DOSHPLCHK: Rem "I know it slows it down - but check shiplist/prod for invalids
KSL$ = " ",KSL$;NumRec=0;Numrec[1]=0;Numrec[2]=0
KSL$[1,6] = K$[1,6]
CSLLP_LOOP: Rem "all shiplists for this cust
Search #6,3,1;KSL$,R[6],E \ If E = 2 Goto SLLPDONE
If E error 11000
If Not(UPDATEONLY) And KSL$[1,6] > K1$[1,6] Goto SLLPDONE
Mat Read #6,R[6],0;SLP$;
Mat Read #6,R[6],16;SLC1;
Mat Read #6,R[6],56;SLP2$;
Mat Read #6,R[6],140;SLC4;
Mat Read #6,R[6],168;SLPR;
Mat Read #6,R[6],198;SLLPR1;
Mat Read #6,R[6],274;LPWH;
numrec=numrec+1
if not(fra(Numrec/500)) ! send update every 500
	tmp$="Scanned "+Str$(NumRec)+" Key="+KSL$
	Print #StatChan;tmp$
Endif
Gosub CHKSHPLST \ Goto DO_SLDELETE ! check cust/prod: return=delete, +1=continue
Rem "do bad prod/shiplist check 1st and always!
X2 = SLC1[2] \ Gosub L_7820 \ X2 = 0
JDATE[1] = X2
if not(SLC4[3]) and slp$[1,12]<>KSL$[17,28] GOTO DO_SLDELETE ! DIFF PROD THAN KEY?
If UPDATEONLY ! "don't do delete
  If Not(SLC4[3]) And (KSL$[37,40] <> A$[152,155]) Gosub ADJSHPLST
  If UPDATEPRODDESC And SLC4[3] = 0 ! "do stocks only
    If SLP2$[21,50] <> A$[9,38] Or SLP2$[51,80] <> A$[63,92]
      SLP2$[21,50] = A$[9,38] \ SLP2$[51,80] = A$[63,92]
      Mat Write #6,R[6],56;SLP2$;
    End If 
  End If 
  Goto DSLDONE
End If 
If SLP$[1,12] < PROD1$ Or SLP$[1,12] > PROD2$ Goto DSLDONE
If SLC1[2] If JDATE[1] > JEDATE Goto DSLDONE
If ZEROPURGE And SLPR[4] <> 0 Goto DSLDONE
If SLP2$[81,84] < COMDY1$ Or SLP2$[81,84] > COMDY2$ Goto DSLDONE
iF C1[2]<STARTSLSM OR C1[2]>ENDSLSM GOTO DSLDONE
DO_SLDELETE: Rem "
Gosub DELSLREC
DSLDONE: Rem "here after deleting
! Print @39,5;"[";KSL$[1,6];".";KSL$[8,13];"]";
Goto CSLLP_LOOP
SLLPDONE: Rem "done with cust/shiplist/prod
Print #StatChan;"Done with Ship List Last Price"
If Numrec[1] ! chngd
	Print #StatChan;"Changed Data=";Str$(Numrec[1])
Endif
if Numrec[2] ! deleted
	Print #StatChan;"Deleted Records=";Str$(Numrec[2])
Endif
Return 
DELSLREC: Rem "delete this single cust/shiplist/prod
tmp$="Deleting ShipList Last Price "+KSL$
print #statchan;tmp$
R[0] = R[6];Numrec[2]=numrec[2]+1
KSL1$ = " ",KSL1$
KSL1$[1,40] = KSL$[1,40]
Search #6,5,1;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$[1,16] = KSL$[1,16];KSL1$[17,20] = KSL$[37,40]
KSL1$[21,40] = KSL$[17,36]
Search #6,5,2;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
KSL1$[1,16] = KSL$[1,16];KSL1$[17,22] = 999999 - SLLPR1[2] Using "######"
KSL1$[23,46] = KSL$[17,40]
Search #6,5,3;KSL1$,R[1],E \ If E>1 Or R[1] <> R[0] error 11000
KSL1$ = " ",KSL1$;KSL1$ = KSL$[1,6]
KSL1$[7,10] = KSL$[13,16]
KSL1$[11,30] = KSL$[17,36]
KSL1$[31,36] = KSL$[7,12]
KSL1$[37,40] = KSL$[37,40]
Rem "so ends up same as Cust LPR Dir 1
Search #6,5,4;KSL1$,R[1],E \ If E Or R[1] <> R[0] error 11000
IF SLPDIR5
	KSL1$=" ",KSL1$;KSL1$[1,20]=KSL$[17,36]
	KSL1$[21,36]=KSL$[1,16];KSL1$[37]=KSL$[37]
	Search #6,5,5;ksl1$,R[1],E \ if e or r[1]<>r[0] error 11000
Endif
E = 3 \ Search #6,1,0;KSL$,R[6],E \ If E error 11000
Return 
CHKSHPLST: Rem "check if Cust/shiplist/prod still on file
C1[2]=0
J2$ = " ",J2$ \ J2$ = SLC1[0] Using "######"
Search #3,2,1;J2$,V1,E \ If E > 1 error 11000
If E Return 
Mat Read #3,v1,142;c1;
If Not(SLC4[3]) ! "bypass on non-stock
  J2$ = " ",J2$;J2$ = SLP$[1,12]
  Search #4,2,1;J2$,R[4],E \ If E > 1 error 11000
  If E Return 
  Mat Read #4,R[4],0;A$;
  Mat Read #4,R[4],156;B;
  W2[3] = 0 \ If P9$[32,32] = "Y" And LPWH Gosub L_3500
End If 
KSL1$ = " ",KSL1$;KSL1$[1,6] = KSL$[1,6]
KSL1$[7,7] = ".";KSL1$[8] = KSL$[7,12]
Search #7,2,1;KSL1$,R[7],E \ If E > 1 error 11000
If E = 1 Return 
! check if main cust lp is on file!
KSL1$ = " ",KSL1$;KSL1$ = KSL$[1,6]
KSL1$[7,10] = KSL$[13,16]
KSL1$[11,30] = KSL$[17,36]
KSL1$[31] = ""
TMP_KSL1$ = KSL1$
Search #2,3,1;KSL1$,R[2],E \ If E > 2 error 11000
If E = 2 Return 
If KSL1$[1,30] <> TMP_KSL1$[1,30] Return 
Return 1
L_3500: Rem CHECK WHSE VENDOR
WH$ = " ",WH$
WH$ = P$[1,12],LPWH Using "##"
Search #5,2,1;WH$,V1,E \ If E > 1 error 11000
If Not(E) ! "found
  Mat Read #5,V1,38;W2;
  If W2[3] Let B[24] = W2[3]
End If 
Return 

log_permprice_before:! load before data in and hold
if not(trackperm) return! don't have this
for X=0 to 10\passinfo[X]=0\next X!lear allout
passinfo[0]=2! channel # last price file
passinfo[1]=r1! record number
passinfo[2]=1! only the befores
passinfo[4]=usrid
call "logpermprice",Intco,pplog$,permlog[],passinfo[],dlog$
return

log_permprice_after:! update after fields
if not(trackperm) return! don't have this
passinfo[0]=2! do over to be safe
passinfo[1]=r1
!passinfo[2]=2! update
!passinfo[3]=4
passinfo[2]=3! flag as deleted record (all we're doing here in 119!)
passinfo[3]=17 ! Auto del from 119

passinfo[4]=usrid
call "logpermprice",IntCo,pplog$,permlog[],passinfo[],dlog$
return

L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1

CUSTEND: Rem " Done with Customer/prod last price - use shiplist also?
Print #StatChan;"Done with Last Price"
If Numrec[1] ! chngd
	Print #StatChan;"Changed Data=";Str$(Numrec[1])
Endif
if Numrec[2] ! deleted
	Print #StatChan;"Deleted Records=";Str$(Numrec[2])
Endif
If P61$[64,64] = "Y" ! "now do shiplist last price
  Print #StatChan;"Starting ShipList Last Price"
  If UPDATEONLY Let K$ = " ",K$ \ Goto DOSLLP
  K$ = K1 Using "######"
DOSLLP: Rem "complete check of cust shiplist last price file
  Gosub DOSHPLCHK
End If ! "fall on thru to outend:
Print #StatChan;"Last Price Purge/Update Complete"
call ERPCronSuccess()
OUTEND: Rem EXIT ROUTINE
try Call dxclose() else rem
End

ERR_MSG: ! send message                                    
ReturnStatus = 0 ! no good (ONLY DISPLAYS IF =1 ??) NOT DXBLOCK!!   
Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                             

Rem {begin rtn.error.s}
Else
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
Endtry
End
! -------------------------------------------------------------------------------------
Function chkDateFrmt$(DIn$)
! see if date in is MM/DD/YY or MM/DD/YYYY
! if not make it MM/DD/YYYY
Try
	Dim DOut$[10]
	Dim 1%,Mth,Day
	Dim 3%,Yr
	If DIn$[1,2]="00" or UCase$(DIn$[1,4])="NONE" or DIn$="0"
	  Let DOut$=UCase$(DIn$)
	  Exit Function DOut$ ! no reformat - send back as is
	Endif
	Mth=DIn$[1,2];Day=Din$[4,5];Yr=DIn$[7]
	if Din$[2,2]="/" or DIn$[2,2]="-" ! 1 digit month
	  Let Mth=DIn$[1,1]
	  If DIn$[4,4]="/" or DIn$[4,4]="-" ! 1 digit day
	     Let Day=DIn$[3,3]
		 Let Yr=DIn$[5]
	  Else
	     Let Day=Din$[3,4] ! try 2 digit
		 Let Yr=DIn$[6]
	  Endif
	Endif
	X$=Mth Using "&&"
	X$[3,4]=Day Using "&&"
	If Yr>1000 ! 4
		X$[5]=Yr Using "&&&&"
	Else ! 2 digit
		If YR<67 let yr=2000+yr Else Let Yr=yr+1900
		X$[5]=Yr Using "####"
	Endif
	Dout$=X$[1,2]+"/"+X$[3,4]+"/"+X$[5]
 else
    include "src/callsuberr.inc"
  end try
end Function DOut$ ! chkDateFrmt$
! 
!--------------------------------------------------------------------