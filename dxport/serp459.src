! >>> Program serp459
!
! description  Commission Edit
!
! loadsave -w -n 100,10 -o prog/dxport/serp459.dl4 src/serp459.src
!
! 1.0 mm/dd/yyyy change?? 
!
include "src/copyright.inc" ! dx
!
Rem MX459 COMMISSION EDIT
Rem
Rem last update:   09/1994 - add audit file
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 20, 2010  12:28:47
Rem /w2/papermaster/r2005//usr/acct/rgp/work/custom/xrev9/mx459.src (univ2) [rgp] {06926}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/inc/filesslsmz.inc" ! slsm file
include "src/inc/filedivifle.inc" ! division file
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
Declare External function buildsort,getuidrec,PDate$,chkDteFrmt$,Formatdate2$
Declare External function OpenFile
Declare Intrinsic Sub FindF,InpBuf,String,programdump
! Option Default Dialect IRIS1
Declare External Function GetNextRefNumber

try ! main try
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
Dim K1$[20],S1$[30],K2$[30],K3$[30],K3_2$[30],K4$[60],K5$[30],k6$[12],KEY2$[32]
Dim C1$[30],F$[16],P9$[50],P60$[50]
Dim J8$[10],U3$[50],W$[30],SMAT$[2]
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],Y,SplitFlag,SplitType,SplitDesc$[30]
Dim 2%,X,X1
Dim 3%,J1,X2,CS9[3],commSeq
Dim 3%,SalesDollars,SalesCost,SalesGP,NewRate,NewCommission
Dim J$[70],J0$[15],J1$[70],J2$[20],J5$[70],J7$[40]
Dim J9$[50],X$[10],J4$[50]
Dim 1%,S4[1],USER,ARMONTH
Dim 1%,A,B,D,E,I,L6,L7,L8,M,P,Y9,Z
Dim 3%,S2[1],S6[1],HLDS2[1],S7[2],TT,COID,ORIGCOMM,AORIGCOMM,OCS1[3]
Dim 1%,AS1[3],AS4[1]
Dim 2%,AS2[1],HLDS1,commDiv,newDiv
Dim 3%,AS3[5],AS_$[60],SOURCE$[10],AS5[5],HLDS6
Dim 2%,S1[3],S3[1],ARDATE
DIM 3%,commsrvchg,CFIN[8]
dim 2%,SplitPercent
Dim 3%
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[200],webstr$[400],message$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[60]	  \ Blank$=" ",Blank$
dim EndParam$[20] \ EndParam$="z",EndParam$
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128],Action1$[30],Action2$[30]
Dim List$[150,500],custom_customer$[30]
maxcnt=50
!
! call dxopen() ! for dxtest/standalone
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
!TT = Spc(5) \ COID = Int((TT - Int(TT / 16384) * 16384) / 64)
close #1 ! (need to reopen as read/write)
i = OpenFile(9999,intco) \ if i<1 error 42
COID=IntCo
For I = 2 To 6
	Read X \ If X = -1 Goto L_260
	Read #1,88,Abs(X);F$;
	If X <= 0 Ropen #I,F$ Else Open #I,F$
L_260: Next I
Data "2240","-1824","-1808","-1","-688"
Read #1,0,120;ARMONTH;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,0,108;ARDATE;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
! note: if customer$="HTBERRY" it shows the commsrvchg
!Open #0,"USERPORT"
!Read #0,Spc(6),0;USER;
!Close #0
USER=GetUIDRec(e$,IntCo,Userid$)
F$ = "4/commaudit" + Str$(COID)
Call FindF(F$,FOUND)
If FOUND
  Open #5,F$ ! "4/commaudit" + Str$(COID)
Else 
  Goto L_8900
End If
ch_chn = openfile(-9932) \ if ch_chn < 0 error 42
Action1$=UCase$(RTrim$(action1$))
Action2$=UCase$(RTrim$(action2$))
returnstatus=0
message$="Missing action1"
!Call dxsave(0,"tmp/459in.txt!")
select case action1$
	case "GETLISTS" ! get any/all droplists					doc=SCE459-GetLists.doc
		returnstatus=1
		message$="OK"
		clear list$[]
		call FileDropListSSlsmz(e$,List$[],150,3) ! slsm list
		call AddToStr(e$,rstr$,List$[])
		! invoice/comm types
		!"1: inv  6: credit  2: manual inv  7: manual credit or  <CR> "
		Clear List$[]
		List$[0]=bsdel$,"REFTYPE",FDEL$
		List$[1]="ID",fdel$,"DESC",fdel$
		List$[2]="1",fdel$,"Invoice",fdel$
		List$[3]="6",fdel$,"Credit",fdel$
		List$[4]="2",fdel$,"Manual Inv",fdel$
		List$[5]="7",fdel$,"Manual Credit",fdel$
		List$[6]="8",fdel$,"Bonus",fdel$
		List$[7]="9",fdel$,"Charge",fdel$
		List$[8]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! division
		clear list$[]
		call FileDropListDiviFle(e$,list$[],100,6)
		call AddToStr(e$,rstr$,List$[])
		! slspeople, types
	case "GETSLMNAME" ! slsm name							doc=SCE459-GetSlsmName.doc
		returnstatus=1 ! this could be huge list
		message$="OK"
		call dxget("SLSMID",tmp$)
		x2=tmp$
		if x2<1 or x2>999 or fra(x2)
			returnstatus=0
			message$="Salesperson ID is invalid"
			goto OutErr
		Endif
		J1=X2
		K1$ = J1 Using "###"
		S1[0] = J1
		Gosub L_6000 ! Get Salesman
		if e
			returnstatus=0
			message$="Salesperson not on file"
			goto OutErr
		Endif
		Clear list$[]
		List$[0]=bsdel$,"SLSMNAME",fdel$
		list$[1]="SLSMID",fdel$,"NAME",fdel$
		List$[2]=Str$(S1[0]),fdel$,Rtrim$(S1$[1,30]),fdel$
		List$[3]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! done
	case "SLSMINV" ! get list of slsm inv's?				doc=SCE459-GetSlsmInv.doc
		returnstatus=1 ! this could be huge list
		message$="OK"
		call dxget("SLSMID",tmp$)
		x2=tmp$
		if x2<1 or x2>999 or fra(x2)
			returnstatus=0
			message$="Salesperson ID is invalid"
			goto OutErr
		Endif
		J1=X2
		K1$ = J1 Using "###"
		S1[0] = J1
		Gosub L_6000 ! get Salesman
		if e
			returnstatus=0
			message$="Salesperson not on file"
			goto OutErr
		Endif
		clear list$[]
		List$[0]=bsdel$,"SLSMINVLIST",fdel$
		List$[1]="REFID",fdel$,"REFTYPEID",fdel$
		Row=2
		tmpcnt=maxcnt
		gosub L_5500
		call AddToStr(e$,rstr$,List$[]) 
	case "GETDATA","RECALC_COMM" ! data for slsm/inv/type					doc=SCE459-GetData.doc
		returnstatus=1
		message$="OK"
		call dxget("SLSMID",tmp$)
		x2=tmp$
		if x2<1 or x2>999 or fra(x2)
			returnstatus=0
			message$="Salesperson ID is invalid"
			goto OutErr
		Endif
		J1=X2
		K1$ = J1 Using "###"
		S1[0] = J1
		SLSMID=S1[0]
		Gosub L_6000 ! get salesman
		if e
			returnstatus=0
			message$="Salesperson not on file"
			goto OutErr
		Endif
		gosub L_500 ! get data
		if action1$ = "RECALC_COMM"
			! just a recalculate request
			call dxget("SALESDOLLARS", tmp$) \ SalesDollars = tmp$
			call dxget("SALESCOST", tmp$) \ SalesCost = tmp$
			call dxget("NEWRATE", tmp$) \ NewRate = tmp$
			NewRate = NewRate / 100
			SalesGP = SalesDollars - SalesCost
			if newRec and SalesDollars = 0 and SalesCost = 0
				! haven't had a chance to enter sales
				! and cost, don't zero out what they
				! just enetered
				call dxget("CURRENT_COMMISSION",tmp$)
				let NewCommission = tmp$
			else
				IF P9$[14,14]<>"N"
					IF P9$[14,14]="S"
						LET NewCommission=FNR(SalesDollars*NewRate*SplitPercent) ! " comm on sales $
					ELSE 
						IF P9$[14,14]="P" OR P9$[14,14]="L"
							LET NewCommission=FNR((SalesDollars-SalesCost)*NewRate*SplitPercent) ! "comm on profit
						ENDIF 
					ENDIF 
				ENDIF
			end if
			clear List$[]
			list$[0] = bsdel$,"NEWCOMMISSION",fdel$
			list$[1] = "NEWCOMMISSION",fdel$
			list$[2] = str$(NewCommission),fdel$
			list$[3] = esdel$
		end if
		call AddToStr(e$,rstr$,List$[]) 
		! could be new record!
	case "SUBMITDATA" ! record data							doc=SCE459-SubmitData.doc
		returnstatus=1
		message$="OK"
		call dxget("SLSMID",tmp$)
		x2=tmp$
		if x2<1 or x2>999 or fra(x2)
			returnstatus=0
			message$="Salesperson ID is invalid"
			goto OutErr
		Endif
		J1=X2
		K1$ = J1 Using "###"
		S1[0] = J1
		SLSMID=s1[0]
		Gosub L_6000 ! check slsm
		if e
			returnstatus=0
			message$="Salesperson not on file"
			goto OutErr
		Endif
		Gosub L_500 ! get default/old data
		clear list$[]
		if (type=2 or type=7 or type=8 or type=9)
			if newrec or type = 8 or type = 9 ! need add'l fields
				gosub L_1600 ! cust/date
			Endif
			! always $ / Cost
			gosub L_2200 ! sales
			gosub L_2300 ! cost
		Endif
		! always comm and/or % / reason
		gosub L_2100 ! commprct
		gosub L_2000 ! comm $
		Gosub L_2400 ! reason
		if returnstatus=0 goto outend ! something fail
		call dxget("DIVISION",tmp$) \ newDiv = tmp$
		if newrec
			commDiv = newDiv
			gosub L_1500 ! record new
		else
			! check for change of
			! division
			if commDiv <> newDiv
				! delete old key
				k3_2$[1,4] = commDiv using "####"
				k3_2$[5] = k3$
				Search #2,5,2;K3_2$,V1,E
				If E error 11000
				! insert new
				k3_2$[1,4] = newDiv using "####"
				k3_2$[5] = k3$
				Search #2,4,2;K3_2$,V1,E
				If E error 11000
				commDiv = newDiv
			end if
		end if
		gosub L_1210 ! write/audit
		! only comm $/% if exist, all if new
end select
goto OutEnd

L_500: Rem PRINT SCREEN
!Print 'CS ED'
!Print @0,0;"COMMISSION MAINTENANCE";@50,0;"MX459 - REV 3.1"
!Print @2,2;'CL';"  SALESPSN #:";
!Print @2,3;'CL';"  INVOICE # :";
!Print @2,4;'CL';"  TYPE      :";
!Print @2,5;'CL';"  CUSTOMER  :";
!Print @2,6;'CL';"  DATE      :";
!Print @2,7;'CL';"  COMMISSION:";
!Print @2,8;'CL';"  COMM %    :";
!Print @2,9;'CL';"  SALES $   :";
!Print @2,10;'CL';"  COST $    :";
!Print @0,7;" 1>";@0,8;" 2>";
HLDS2[0] = 0
HLDS2[1] = 0
HLDS1 = 0
HLDS6 = 0
SMAT$ = " ",SMAT$
For I = 0 To 3
  S1[I] = 0
  CS9[I] = 0
  OCS1[I] = 0
  If I <= 1
	S2[I] = 0;S6[I] = 0
	S3[I] = 0
	S4[I] = 0
  End If 
  If I <= 2
	S7[I] = 0
  end if
Next I
let commsrvchg=0
let SplitFlag = 0
let SplitType = 0
let commDiv = 0
L_800: Rem ENTER INVOICE #
!J5$ = "Enter Invoice No.,  ?: for list, or press <CR> to go back"
L_850: !Gosub L_7000
!
! need to get reference type first - leaving code that
! fetches it again below intact
!
call dxget("REFTYPEID",tmp$)
x9=tmp$
!If J4$ = "?" Goto L_5500
!If J4$ = "" Goto L_500
!If J4$ = "E" Goto L_500
call dxget("REFID",J$)
X2 = J$
If X2 < 0 OR (x9 < 8 and x2 = 0) ! And J$[1,1] <> "0" Print 'RB'; \ Goto L_850
	returnstatus=0
	message$="Invalid Reference ID"
	goto OutErr

Endif

if x9 >= 8 and x2 = 0
	tmp$ = " ",tmp$
	tmp$[1,3] = k1$[1,3]
	tmp$[4,13] = 0 using "##########"
	tmp$[14,14] = x9 using "#"
	x2 = GetNextRefNumber(e$, 2, ch_chn, tmp$)
end if
K1$[4] = X2 Using "##########"
S7[1] = X2
L_900: Rem ENTER TYPE
! J5$ = "Enter  1: inv  6: credit  2: manual inv  7: manual credit or  <CR> "
!Gosub L_7000
!If J4$ = "" Goto L_800
!If J4$ = "1" Or J4$ = "2" Or J4$ = "7" Goto L_970
!If J4$ <> "6" Goto L_900
call dxget("REFTYPEID",j4$)
L_970: X9 = J4$
K1$[14] = X9 Using "#"
K3$ = K1$+BLANK$ ! SPACE FILL IT
NEWREC = 0
Search #2,2,1;K1$,V1,E
If Not(E) Goto L_1070
If X9 = 2 Or X9 = 7 or x9 >= 8
  !Print @20,23;'RB CL';" IS THIS A NEW RECORD? (Y/N) ";
  !Input ""J4$ \ Print @20,23;'CL';
  !If J4$ = "Y"
    NEWREC = 1
   ! check to make sure we don't have an overlap in history
   Search #ch_chn,2,1;k1$,r_check,e
   if not (e)
	ReturnStatus = 0
	message$="Refernce ID already in commission history - cannot add again!"
	goto OutErr
   end if
   Goto L_1130 ! L_1500
  !End If 
End If 
!Signal 3,20 \ Print @20,23;'CL';
!Print @15,3;'CL';
!Goto L_800 ! evidently only manual entries can be added.
Returnstatus=0
message$="Reference ID not found"
goto OutErr

L_1070: Rem READ RECORD
Mat Read #2,V1;S1;
Mat Read #2,V1,16;S2;
Mat Read #2,V1,40;S6;
HLDS2[0] = S2[0]
HLDS2[1] = S2[1]
HLDS1 = S1[2]
HLDS6 = S6[0]
L_1100: Mat Read #2,V1,28;S3;
Mat Read #2,V1,36;S4;
Mat Read #2,V1,40;S6;
Mat Read #2,V1,52;SMAT$;
Mat Read #2,V1,54;S7;
Mat Read #2,V1,72;CS9;
!if custom_customer$="HTBERRY"
	mat read #2,v1,100;commsrvchg
!Endif
Mat Read #2,V1,112;OCS1;
Mat Read #2,v1,136;SplitFlag;
Mat Read #2,v1,138;SplitType;
Mat Read #2,v1,140;commDiv;
!If X9 = 2 Or X9 = 7 Print @0,9;" 3>";@0,10;" 4>";
L_1130: !
Gosub GetSplitInfo:
Gosub L_6100 ! get custname
if newRec let commDiv = CFIN[4]
Gosub L_5000
!Print @0,22;'CE';@17,22;'CL';"Enter #:field to edit,  E: end or  <CR>: exit ";
!Input ""K4$
!If K4$ = "" Goto L_1210
!If K4$ = "E" Goto L_1210
!K = K4$
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!If X9 = 2 Or X9 = 7
!  On K Gosub L_1300,L_1300,L_2200,L_2300
!Else 
!  On K Gosub L_1300,L_1300
!End If 
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Return ! Goto L_1130
L_1210: Rem WRITE RECORD BACK
	Mat Write #2,V1;S1
	Mat Write #2,V1,16;S2
	Mat Write #2,V1,28;S3
	Mat Write #2,V1,36;S4
	Mat Write #2,V1,40;S6
	Mat Write #2,V1,52;SMAT$
	Mat Write #2,V1,54;S7
	Mat Write #2,V1,72;CS9
	forceAdj = 0 ! force adjustment due to comment
	If NEWREC
		OCS1[0] = S2[1]
		OCS1[1] = S1[2]
		HLDS2[0] = S2[0]
		HLDS2[1] = S2[1]
		HLDS1 = S1[2]
		HLDS6 = S6[0]
		OCS1[2] = S2[0]
		OCS1[3] = S6[0]
		if rtrim$(AS_$) <> "" forceAdj = 1
	End If 
	!if custom_customer$="HTBERRY"
		mat write #2,v1,100;commsrvchg
	!Endif
	Mat Write #2,V1,112;OCS1
	mat write #2,v1,136;SplitFlag
	mat write #2,v1,138;SplitType;
	mat write #2,v1,140;commDiv;
	!Print @0,11;'CE';
	If S2[0] <> HLDS2[0] Or S2[1] <> HLDS2[1] Or S1[2] <> HLDS1 Or S6[0] <> HLDS6 or forceAdj Gosub L_8000
Return ! Goto L_500

L_1300: Rem INPUT
!On K Gosub L_2000,L_2100
Return 
L_1500: Rem INSERT NEW KEY
E = 2
Search #2,1,0;J1$,V1,E
If E error 11000
Search #2,4,1;K3$,V1,E
If E error 11000
k3_2$[1,4] = commDiv using "####"
k3_2$[5] = k3$
Search #2,4,2;K3_2$,V1,E
If E error 11000
Mat Write #2,V1;S1
Mat Write #2,V1,16;S2
Mat Write #2,V1,28;S3
S4[0] = ARMONTH
Mat Write #2,V1,36;S4
Mat Write #2,V1,40;S6
Mat Write #2,V1,52;SMAT$
Mat Write #2,V1,54;S7
Mat Write #2,V1,72;CS9
Mat Write #2,V1,112;OCS1
Mat Write #2,V1,140;commDiv;
K = 0
return

L_1600: Rem INPUT CUSTOMER - FOR NEW RECS
!J0$ = "30010615 5-"
!J1 = 0
!J1$ = ""
!J5$ = "Enter Customer number "
!Gosub L_7000
call dxget("CUSTID",tmp$)
j$=tmp$
!Gosub L_6600 \ Goto L_1600 ! no search
L_RETN1: Rem  need because of return +1 in L_6600 routine
X2 = J$ \ S3[1] = J$
Gosub L_6100
!Print Using "######";@15,5;S3[1];@32,5;C1$;
if x2 or (type <> 8 and type <> 9) ! if 0 and type = 8/9 - not mandatory, but validate if one entered
	If E  !Goto L_1600
		let returnstatus=0
		message$="Customer ID not on file"
		Goto OutErr ! Return ! fail it
	Endif
end if
S3[1] = X2
!J0$ = "50060615 6"
!J1 = 0
!J1$ = ""
!J5$ = "Enter date (MMDDYY) "
!Gosub L_7000
call dxget("REFDATE",tmp$)
tmp1$=chkDteFrmt$(E$,tmp$) ! check format
tmp$=Formatdate2$(tmp1$) ! to yyyymmdd
J1=tmp$[3,8]
S1[3] = J1
!get rest and insert new later
!Gosub L_2200 \ Gosub L_2300 
!Gosub L_2100 \ If S1[2] = 0 Gosub L_2000
!Mat Write #2,V1;S1
!Mat Write #2,V1,16;S2
!Mat Write #2,V1,28;S3
!Mat Write #2,V1,40;S6
!Mat Write #2,V1,52;SMAT$
!Mat Write #2,V1,54;S7
!Mat Write #2,V1,72;CS9
HLDS2[0] = 0 \ HLDS2[1] = 0 \ HLDS1 = 0 \ HLDS6 = 0! \ Goto L_1100
Return
L_2000: Rem INPUT COMMISSION
!J0$ = "42000915 7"
!J2$ = "-----#.##"
!J1 = S2[1]
!J5$ = "Enter Commission Amount (1 & 2 add, 6 & 7 subtract,  -: reverse)"
!Gosub L_7000
call dxget("COMMDOL",tmp$)
badflg=0
for i=1 to len(tmp$)
	search "0123456789-+,.",tmp$[i,i],e   !! see if not number, etc
	if e=0 then badflg=1
next i
if badflg
	let tmp$=Str$(s2[1]) ! calc'd previously
endif
j1=tmp$ ! sent .00 possible
if action1$<>"SUBMITDATA" ! we submit what is on the screen!
	IF CALCD_COMM AND CALCD_COMM<>J1 LET J1=CALCD_COMM ! KEEP CALCD AS something changed it
endif
S2[1] = J1
Return 
L_2100: Rem comm %
!J0$ = "32000519 8"
!J5$ = "Enter the Commission %,  <CR>: same"
!J1 = S1[2]
!Gosub L_7000
call dxget("COMMPRCT",tmp$)
if tmp$="" let tmp$=Str$(S1[2])
J1=tmp$
X2 = J1 
If X2 < 0 Or X2 > 100 Or Fra(X2 * 100) !Goto L_2100
	returnstatus=0
	message$="Invalid Commission percent"
	Goto OutErr ! Return ! fail it
Endif
If X2 = S1[2] Goto L_2190 ! NEW WAY always what's on screen!
S1[2] = J1
if action1$<>"SUBMITDATA" Gosub CALC_COMM ! RGP ADDED RECALC_COMM
L_2190: Return 
L_2200: Rem SALES $
!J0$ = "32001015 9"
!J1 = S2[0];J5$ = "Enter the Sales $"
!Gosub L_7000
call dxget("REFDOL",tmp$)
if tmp$="" let tmp$=Str$(S2[0])
j1=tmp$
X2 = S2[0]
S2[0] = J1
If X2 And X2 <> J1 Gosub CALC_COMM
Return 
L_2300: Rem COST $
!J0$ = "3200101510"
!J1 = S6[0];J5$ = "Enter the Cost Dollars"
!Gosub L_7000
call dxget("REFCOST",tmp$)
if tmp$="" let tmp$=Str$(S6[0])
j1=tmp$
X2 = S6[0]
S6[0] = J1
If X2 And X2 <> J1 Gosub CALC_COMM
Return 
L_2400: Rem REASON
!Print @0,11;'CE';"  REASON: ";
!J0$ = "2 00601311";J1$ = "";J5$ = "Enter the reason for this adjustment"
!Gosub L_7000
call dxget("ADJREASON",tmp$)
J$=Rtrim$(tmp$)+Blank$
AS_$ = J$
!Print @0,11;'CE';
Return 
CALC_COMM: Rem ---------------------------------------------------------
	If P9$[14,14] <> "N"
		If P9$[14,14] = "S"
			S2[1] = FNR(S2[0] * (S1[2] / 100) * SplitPercent)
		Else 
		If P9$[14,14] = "P" Or P9$[14,14] = "L"
			S2[1] = FNR((S2[0] - S6[0]) * (S1[2] / 100) * SplitPercent)
		End If 
	End If 
	CALCD_COMM=S2[1]
	End If 
Return 

L_5000: Rem PRINT INFO
	!Print Using "###";@15,2;S1;@32,2;S1$;
	!Print Using "########";@15,3;S7[1];
	TYPE = K1$[14,14]
	if s1[0]<=0 let s1[0]=SLSMID ! as may be new
	!K4$ = "INVOICE"
	!If TYPE >= 6 Let K4$ = "CREDIT"
	!If TYPE = 2 Or TYPE = 7 Print " ADJUSTMENT";
	!Print Using "######";@15,5;S3[1];@32,5;C1$;
	!X2 = S1[3] \ Gosub L_7700
	!Print @15,6;'CL';X$[1,8];
	!Print Using "##";@32,4;"ORDER TYPE: ";S3[0];
	!Print Using "-----#.##";@15,7;S2[1];
	!Print Using "##.##";@19,8;S1[2];
	!If TYPE >= 6 Print Using "------.##";@15,7;0 - S2[1];
	!Print Using "-------#.##";@15,9;S2[0];@15,10;S6[0];
	Clear List$[]
	list$[0]=bsdel$,"COMMDETL",fdel$
	Webstr$="SLSMID",fdel$,"SLSMNAME",fdel$
	Webstr$=webstr$,"CUSTID",fdel$,"CUSTNAME",fdel$
	Webstr$=webstr$,"REFID",fdel$,"REFTYPE",fdel$
	Webstr$=webstr$,"REFDATE",fdel$,"ORDTYPE",fdel$
	Webstr$=webstr$,"COMMDOL",fdel$,"COMMPRCT",fdel$
	Webstr$=webstr$,"REFDOL",fdel$,"REFCOST",fdel$
	Webstr$=webstr$,"COMMSVCHRG",fdel$
	Webstr$=webstr$,"SplitFlag",fdel$,"SplitDesc",fdel$
	Webstr$=webstr$,"SplitType",fdel$,"SplitPercent",fdel$
	Webstr$=webstr$,"Division",fdel$
	list$[1]=webstr$
	webstr$=Str$(S1[0]),fdel$,RTrim$(s1$[1,30]),fdel$
	Webstr$=webstr$,Str$(S3[1]),fdel$,RTrim$(c1$[1,30]),fdel$
	Webstr$=webstr$,Str$(S7[1]),fdel$,Str$(Type),fdel$
	tmp$="" \ if s1[3] let tmp$=PDate$(S1[3])
	webstr$=webstr$,tmp$,fdel$,Str$(S3[0]),fdel$
	x3=s2[1] ! \ if type>=6 let x3=0-s2[1]  !DON'T SEND REVERSE - WILL SUBMIT THAT WAY!
	Webstr$=webstr$,LTrim$(X3 Using "---------.##"),fdel$
	webstr$=webstr$,LTrim$(S1[2] Using "#####.##"),fdel$ ! %
	webstr$=webstr$,LTrim$(S2[0] using "--------#.##"),fdel$
	webstr$=webstr$,LTrim$(S6[0] using "--------#.##"),fdel$
	!if custom_customer$="HTBERRY" ! per group - ALWAYS SHOWS
		Webstr$=webstr$,LTrim$(commsrvchg USING "###.##"),fdel$
	!Else
	!	webstr$=webstr$,"7.50",fdel$ ! TESTING ONLY - FILL IN AN AMOUNT !!
	!Endif
	Webstr$ = Webstr$+str$(SplitFlag)+fdel$+SplitDesc$+fdel$
	Webstr$ = Webstr$+str$(SplitType)+fdel$+s7[2] using "###.##%"+fdel$
	Webstr$ = Webstr$+str$(commDiv)+fdel$
	List$[2]=webstr$
	List$[3]=esdel$ ! let caller add to string as this may not be needed
Return 

L_5500: Rem DISPLAY AVAILABLE INVOICES
!X = 0 \ Y = 11
!For I = 11 To 21 \ Print @0,I;'CL'; \ Next I
K2$ = " ",K2$
K2$ = K1$[1,3]
K2$[4] = ""
L_5530: Search #2,3,1;K2$,V3,E
If E = 2 Goto L_5800
If E error 11000
If K2$[1,3] <> K1$[1,3] Goto L_5800
!Print @X,Y;"   ";K2$[4,13];" TYPE: ";K2$[14,14]
List$[row]=K2$[4,13],fdel$,k2$[14,14],fdel$
row=row+1
if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
!Y = Y + 1
!If Y >= 20 Let X = X + 25 \ Y = 11
!If X > 70 Goto L_5600
Goto L_5530
L_5600: !Print @20,22;'CL';" MORE... CONTINUE? (Y/N) ";
!Input ""K4$
!If K4$ = "Y" Goto L_5650
!Goto L_800
L_5650:! For I = 11 To 21 \ Print @0,I;'CL'; \ Next I
!X = 0 \ Y = 11
!Goto L_5530
L_5800: Rem END OF LIST
list$[row]=esdel$
Return ! Goto L_800

L_6000: Rem GET SALESMAN NAME
	K2$ = " ",K2$
	K2$ = K1$[1,3]
	Search #3,2,1;K2$,V2,E
	If E Goto L_6070
	Mat Read #3,V2;S1$;
	!Print @32,2;'CL';S1$[1,30];
	Return ! no +1
	L_6070: Rem NOT FOUND
	!Print @20,23;'RB CL';" INVALID !! NOT FOUND ";
	!Signal 3,20 \ Print @20,23;'CL';
Return 

L_6100: Rem GET CUSTOMER NAME / DIVISION
	K2$ = " ",K2$
	K2$ = S3[1] Using "######"
	Search #4,2,1;K2$,V4,E
	If E Goto L_6170
	Mat Read #4,V4,30;C1$;
	Mat Read #4,V4,544;CFIN;
	Return 
	L_6170: Rem NOT FOUND
	C1$ = "** CUSTOMER NOT FOUND **"
	clear CFIN[]
Return 

L_6600: Rem SWAP
!If Len(J4$) <= 6 If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
!Swap 1,"MXCUST"
!Print @15,5; \ Signal 3,0
!Input ""J$ \ If J$ = "" Return 
Return 1
L_7000: Rem  *INPUT SUBROUT V2.9
Return
L_7600: Return 
L_7700: Rem  *DATE  X2 TO X$  V2.9
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 

L_8000: Rem AUDIT
	!Gosub L_2400
	K5$ = " ",K5$
	K5$[1,13] = K1$[1,13]
	K5$[26,26] = K1$[14,14]
	X9=0
	CHK_AUDITRECORD: Rem
	K5$[14,15] = Tim(8) Using "&&"
	K5$[16,17] = Tim(9) Using "&&"
	K5$[18,19] = Tim(10) Using "&&"
	K5$[20,21] = Tim(11) Using "&&"
	K5$[22,23] = Tim(12) Using "&&"
	K5$[24,25] = Tim(13) Using "&&"
	Search #5,2,1;K5$,R5,E
	If Not(E)
		X9=X9+1
		Signal 3,20 ! pause for new tims
		IF X9>1000
			RETURNSTATUS=0
			MESSAGE$="Record updated. Could not add an audit record"
			return
		Endif
		Goto CHK_AUDITRECORD
	End If 
	E = 2
	Search #5,1,0;K5$,R5,E
	If E error 11000
	Search #5,4,1;K5$,R5,E
	If E error 11000
	KEY2$ = " ",KEY2$
	KEY2$[1,6] = S3[1] Using "######"
	KEY2$[7,29] = K5$[4,26]
	KEY2$[30,32] = k5$[1,3]
	Search #5,4,2;KEY2$,R5,E \ If E error 11000
	AS1[0] = S1[0];AS1[1] = TYPE;AS1[2] = 0;AS1[3] = Spc(6)
	AS2[0] = S3[1]
	AS2[1] = USER
	AS3[0] = HLDS2[1];AS3[1] = S2[1]
	AS3[2] = S7[1]
	AS3[3] = S1[1]
	AS3[4] = K5$[14,19]
	AS3[5] = K5$[20,25]
	AORIGCOMM = OCS1[0]
	AS4[0] = 1
	AS4[1] = 0
	AS5[0] = HLDS1
	AS5[1] = S1[2]
	AS5[2] = HLDS2[0]
	AS5[3] = S2[0]
	AS5[4] = HLDS6
	AS5[5] = S6[0]
	SOURCE$ = "459"
	Mat Write #5,R5;AS1
	Mat Write #5,R5,8;AS2
	Mat Write #5,R5,16;AS3
	Mat Write #5,R5,52;SOURCE$
	Mat Write #5,R5,62;AS_$
	Write #5,R5,122;AORIGCOMM
	Mat Write #5,R5,128;AS4
	Mat Write #5,R5,132;AS5;
Return 

GetSplitInfo: !
	SplitDesc$ = ""
	if SplitFlag = -1 SplitDesc$ = "Split By Product Category"
	if SplitFlag = 1 SplitDesc$ = "Split % of Calculated Comm"
	if SplitFlag = 2 SplitDesc$ = "Split % Based on Type"
	if SplitFlag = 3 SplitDesc$ = "Split % of Gross Profit $"
	SplitPercent = 1 ! default to 100% to current rep
	if not(SplitFlag) return
	if SplitFlag = 1 or SplitFlag = 3 ! 2 not supported yet
		SplitPercent = S7[2] / 100
	end if
Return

L_8900: Rem NO AUDIT FILE
!Print @0,22;'RB CE';"THE AUDIT FILE DOES NOT EXIST!"
!Signal 3,30
Message$="THE AUDIT FILE DOES NOT EXIST!"
Goto OUTERR
OUTEND: Rem EXIT ROUTINE
! send status
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End
OutErr: ! send back message
returnstatus=0 ! normal program 0=no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End
!
else ! main try
include "src/callmainerrnet.inc"
end try
End 


external function GetNextRefNumber(e$,ch_comm,ch_commh,keyVal$)
try
	dim keyCheck$[100]
	dim 3%,retval
	dim 3%
	! find highest value in history
	retval = keyVal$[4,13]
	keyCheck$ = keyVal$
	do
		search #ch_commh,3,1;keyCheck$,r_check,e
		if e exit do
		if keyCheck$[1,3] <> keyVal$[1,3] exit do
		if keyCheck$[14,14] = keyVal$[14,14]
			! got one
			if val(keyCheck$[4,13]) > retval retval = keyCheck$[4,13]
		end if
	loop
	! make sure we are above any value in current
	keyCheck$ = keyVal$
	do
		search #ch_comm,3,1;keyCheck$,r_check,e
		if e exit do
		if keyCheck$[1,3] <> keyVal$[1,3] exit do
		if keyCheck$[14,14] = keyVal$[14,14]
			! got one
			if val(keyCheck$[4,13]) > retval retval = keyCheck$[4,13]
		end if
	loop
	! retval = current highest
	! go 1 more
	retval = retval + 1
	if retval > 9999999999
		e$ = "Cannot find a new reference number of commission record!"
		error 10000
	end if
else
	include "src/callsuberr.inc"
end try
end function retval	