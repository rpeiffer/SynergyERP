! >>> Program 135w
!
! description Print the Forecast Weight Tables
! loadsave -w -n 100,10 -o prog/dxport/135w.dl4 src/135w.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem utfwgt - Forecast Weight per Month
Rem this program is used to define the Weight to give for Previous Months
Rem Usage
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  4, 2002  09:37:12
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/ut/utfwgt.src (univ2) [kag] {62325}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time
! Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
If Err 0 Gosub ERR_TRAP
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],Msg$[500],rstr$[2000] ! dx error handling variables
Dim tmp$[1200],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim TITLE$[30],CO$[30],DATE$[8],STIME$[30]
Dim 1%,YEAR_,YEAR1,STATUS,V9[4],P1[1],LOCKTIME
Dim 2%,FWGHT[23],CHOICE,FIELD
Dim 3%
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID = IntCo !  Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = "CNTRL" + Str$(COID)
! Open #1,J$
J$ = "3/FRCSTWGT" + Str$(COID)
ROpen #2,J$
Mat Read #1,3,0;CO$;
Mat Read #1,0,100;DATE$;
YEAR_ = Tim(8)
If YEAR_ > 67 Let YEAR_ = YEAR_ + 1900 Else Let YEAR_ = YEAR_ + 2000
YEAR1 = YEAR_ - 1
LOCKTIME = 100
returnstatus=0;message$=""
SCRPRT=0
Try
	J9 = Chf(0)
Else
	SCRPRT=1
End Try
J8=Scrprt ! uses J8
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"135w",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 

PRNTIT: Rem "Print the Sucka
!X1 = 915;STATUS = 0
!Call "MXPRSEL",X1,STATUS
CLIN = 90;MAXLIN = 55;V9[0] = 0

!Print 'CS';@0,0;"FORECAST WEIGHT TABLE PRINT"
STBL = 1;ETBL = 999
!Print @0,4;" 1> Starting Table ";@19,4;STBL;
!Print @0,6;"    Ending Table ";@19,6;ETBL
FINALQ: Rem "Is This your final question?
!If FLD = 1
ENT_STBL: Rem "Starting
!  J5$ = "Enter the Starting Table Number to Print"
Call dxget("STBL",tmp$)
if Trim$(tmp$)="" let tmp$="1"
J1=tmp$
  STBL = J1
ENT_ETBL: Rem "Ending
!  J5$ = "Enter the Ending Table Number to Print"
Call dxget("ETBL",tmp$)
if Trim$(tmp$)="" let tmp$="999"
J1=tmp$
  If J1 < STBL
    J7$ = "ENDING NUMBER MUST BE GREATER THAN STARTING NUMBER"
    ReturnStatus=1
  End If 
  ETBL = J1
!End If 
!Goto FINALQ
STARTPRNT: Rem "And Whe're Off
if returnstatus=1
	e$=J7$
	goto err_msg
Endif
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
If J8
	tmp$="TABLE",fdel$,"DESCRIPTION",fdel$
	For X=1 to 24
		tmp$=tmp$,Str$(X),"MTHSAGO",fdel$
	Next X
	call addtostr(e$,rstr$,tmp$+rdel$)
Endif
PCTR = 0 \ If STBL < 1 Let STBL = 1
If ETBL > 999 Let ETBL = 999
For REC = STBL To ETBL
  Mat Read #2,REC,0;FWGHT;
  Mat Read #2,REC,96;TITLE$;
  If TITLE$[1,1] = "" Goto NXTREC

  Gosub PRNT_HEADING
  Gosub PRNT_DETAIL
  PCTR = PCTR + 1
NXTREC: Next REC
Goto OUTEND ! STARTHERE
PRNT_HEADING: Rem "Header
If CLIN < MAXLIN Return 
If ScrPrt Return
If V9[0]
  Print #0;"\14\";
End If 
V9[0] = V9[0] + 1
Print #0;""
Print #0; Tab 2;"DATE: ";DATE$;
Print #0; Tab (Int(39 - (Len(CO$)) / 2));CO$;
Print #0; Tab 71;"PAGE ";Str$(V9[0])
STIME$ = "" \ Call Time(STIME$)
Print #0;" -135w-";STIME$;
Print #0; Tab 35;"FORECAST WEIGHT TABLES";STBL;"TO";ETBL
Print #0;""
Print #0; Tab 1;"TABLE"; Tab 10;"DESCRIPTION"
Print #0;""
CLIN = 7
Return 
PRNT_DETAIL: Rem "Detail
if SCRPRT ! xml code
	tmp$=Str$(REC),fdel$,RTrim$(TITLE$),fdel$
	for X=0 to 23
		tmp$=tmp$,FWGHT[x] Using "###.##",fdel$
	Next X
	!
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
	If CLIN + 14 > MAXLIN Let CLIN = 90 \ Gosub PRNT_HEADING
	Print #0; Using "###"; Tab 1;REC; Tab 10;TITLE$
	Print #0;""
	CLIN = CLIN + 2
	For MONTH_ = 0 To 11
	  If MONTH_ = 0
		Print #0; Using "##"; Tab 5;MONTH_ + 1;" Month  Ago ";
		Print #0; Using "###.##";FWGHT[MONTH_];
	  Else 
		Print #0; Using "##"; Tab 5;MONTH_ + 1;" Months Ago ";
		Print #0; Using "###.##";FWGHT[MONTH_];
	  End If 
	  Print #0; Using "##"; Tab 40;MONTH_ + 13;" Months Ago ";
	  Print #0; Using "###.##";FWGHT[MONTH_ + 12]
	  CLIN = CLIN + 1
	Next MONTH_
Endif
Return 
OUTEND: Rem out of here
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
Else
ReturnStatus=0 ! 0= ok in blockid, is =1 elsewhere
Message$="Complete - "+Str$(PCTR)+" Records printed"
 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
 call AddToStr(e$,rstr$,WebStr$)
 call SetOutPut(e$,rstr$)
 try Call dxclose() else rem
Endif
End 
 
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/135wse!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
  
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}