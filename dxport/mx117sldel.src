! mx117sldel.dl4
!
! Last Price  (PM program 117)
! Add / delete shiplists
!
! loadsave -w -n 100,10 -o prog/dxport/mx117sldel.dl4 src/mx117sldel.src
!

!
include "src/copyright.inc"
Rem MX117SLDEL - ADD/DELETE SHIPLIST LAST PRICE FILE
Rem MASS ADD OR DELETE RECORDS
Rem CAN BE FOR A PROD OR A SLSM/PROD OR A SHIPLIST
Rem MODES= 1:add all shiplists for a Product (Salesman)
Rem   2: delete all shiplists for a Product (Salesman)
Rem   3: delete all entries for a SHIPLIST
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 20, 2005  14:08:14
Rem /w2/papermaster/r2005//usr/acct/jcs/work/r2005/mx1/mx117sldel.src (univ2) [jcs] {46425}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Enter CUST,DEPT,SLSM,SHIPL,PROD$,FCHL[],CFSLSM,MODE,e$,IntCo
If MODE < 1 Or MODE > 3 Goto OUTEND
If MODE < 3 And PROD$ = "" Goto OUTEND
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
dim buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim F$[20],X$[30],P9$[50],P60$[50],P61$[256]
Dim P$[12],P2$[84],LPMT$[2],J3$[60],CSLK$[14]
Dim KSHIP$[40],K1$[60],K2$[60],K3$[60],Msg$[100]
Dim 1%,AI,C3[4],LPEUN[2],LPWH,LPCPT,PPPUSERID
Dim 2%,DF,LPSL,C1[2],LPR1[3],LPC5[3],LPPCDATE,LPCSDT,LPDEPT
Dim 3%,C2[2],C4[3],LPR[4],LPUNF[6],PERM[1],LPLPERM,LPCURR[1]
Dim 2%,PPPCID[1],3%,LPFPERM[1],LPUNIT[1]
Dim 2%,SLSLSM
Dim 1%,COID,X1[9],CH_LSTP,CH_SLLP,CH_SHIP
Dim 2%,X2[9]
Dim 3%,X3[9]
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
If Err 0 Let X3 = Spc(8)
X3 = 0 \ X3[1] = Chf(1)
If Err 0 Gosub ERR_TRAP
If X3 ! "error on checking Cntrl file
  X$ = "cntrl/CNTRL" + Str$(COID)
  Open #1,X$
End If 
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
If P61$[64,64] <> "Y" Goto OUTEND
If FCHL[1] <= 0 ! "no last price channel
  CHNL = 94 \ Gosub GETCHAN
  If CHNL > 1 Let CH_LSTP = CHNL Else Goto OUTEND
  Read #1,88,1376;F$[1,16];
  Ropen #CH_LSTP,F$
Else 
  CH_LSTP = FCHL[1]
End If 
If FCHL[2] <= 0 ! "no Ship list last price channel
  CHNL = 94 \ Gosub GETCHAN
  If CHNL > 1 Let CH_SLLP = CHNL Else Goto OUTEND
  F$ = "3/SLLSTPRC" + Str$(COID)
  Open #CH_SLLP,F$
Else 
  CH_SLLP = FCHL[2]
End If 
Search #CH_SLLP,1,5;K3$,SLPDIR5,E ! does sllastprice have dir 5?
	  If Not(E) Let SLPDIR5 = 1
	  If E Let SLPDIR5 = 0
If FCHL[3] <= 0 ! "no SHIPLIST File channel passed
  CHNL = 94 \ Gosub GETCHAN
  If CHNL > 1 Let CH_SHIP = CHNL Else Goto OUTEND
  Read #1,88,2112;F$[1,16];
  Ropen #CH_SHIP,F$
Else 
  CH_SHIP = FCHL[3]
End If 
If P9$[44,44] <> "Y" Let DEPT = 0
On MODE Goto ADDRECS,DELRECS,DELSHIP
Goto OUTEND
ADDRECS: Rem "add records to file - Get Main LP Rec as defaults
J3$ = " ",J3$
J3$ = CUST Using "######"
J3$[7,10] = DEPT Using "####"
J3$[11] = PROD$ + "         "
J3$[31] = ""
Search #CH_LSTP,2,1;J3$,R[1],E \ If E > 1 Gosub ERR_SEARCH
If E Goto OUTEND
Mat Read #CH_LSTP,R[1];P$;
Read #CH_LSTP,R[1],12;DF;
Mat Read #CH_LSTP,R[1],16;C1;
Mat Read #CH_LSTP,R[1],28;C2;
Mat Read #CH_LSTP,R[1],46;C3;
Mat Read #CH_LSTP,R[1],56;P2$;
Mat Read #CH_LSTP,R[1],140;C4;
Mat Read #CH_LSTP,R[1],164;LPMT$;
Read #CH_LSTP,R[1],166;AI;
Mat Read #CH_LSTP,R[1],168;LPR;
Mat Read #CH_LSTP,R[1],198;LPR1;
Mat Read #CH_LSTP,R[1],214;LPEUN;
Mat Read #CH_LSTP,R[1],220;LPUNF;
Mat Read #CH_LSTP,R[1],262;PERM;
Mat Read #CH_LSTP,R[1],274;LPWH;
Mat Read #CH_LSTP,R[1],276;LPC5;
Read #CH_LSTP,R[1],292;LPPCDATE;
Read #CH_LSTP,R[1],296;LPLPERM;
Mat Read #CH_LSTP,R[1],302;LPCURR;
Read #CH_LSTP,R[1],314;LPCPT;
Read #CH_LSTP,R[1],316;LPCSDT;
Read #CH_LSTP,R[1],320;LPDEPT;
Mat Read #CH_LSTP,R[1],340;LPUNIT;
LPR1[2] = 0
LPR[3] = 0;LPR[4] = 0;LPUNF[6] = 0
ADDRNOW: Rem "now add records
KSHIP$ = " ",KSHIP$;KSHIP$[1,6] = CUST Using "######"
SHPFLE_LOOP: Rem "through all for Customer
Search #CH_SHIP,3,1;KSHIP$,R[3],E \ If E = 2 Goto ADDDONE
If E Gosub ERR_SEARCH
X2 = KSHIP$[1,6] \ If X2 <> CUST Goto ADDDONE
Mat Read #CH_SHIP,R[3],390;SLSLSM;
If SLSLSM = 0 Let SLSLSM = CFSLSM
If SLSM And SLSLSM And SLSLSM <> SLSM Goto SHPFLE_LOOP
LPSL = KSHIP$[8,13]
If LPSL < 0 Goto SHPFLE_LOOP
K1$ = CUST Using "######"
K1$[7,12] = LPSL Using "&&&&&&"
K1$[13,16] = LPDEPT Using "####"
K1$[17,36] = J3$[11,30]
K1$[37] = J3$[37,40]
Search #CH_SLLP,2,1;K1$,R[0],E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto SHPFLE_LOOP
E = 2 \ Search #CH_SLLP,1,0;K1$,R[2],E \ If E Gosub ERR_SEARCH
Mat Write #CH_SLLP,R[2],0;P$
Mat Write #CH_SLLP,R[2],12;LPSL
Mat Write #CH_SLLP,R[2],16;C1
Mat Write #CH_SLLP,R[2],28;C2
Mat Write #CH_SLLP,R[2],46;C3
Mat Write #CH_SLLP,R[2],56;P2$
Write #CH_SLLP,R[2],166;AI
Mat Write #CH_SLLP,R[2],140;C4
Mat Write #CH_SLLP,R[2],164;LPMT$
Mat Write #CH_SLLP,R[2],168;LPR
Mat Write #CH_SLLP,R[2],198;LPR1
Mat Write #CH_SLLP,R[2],214;LPEUN
Mat Write #CH_SLLP,R[2],220;LPUNF
Mat Write #CH_SLLP,R[2],262;PERM
Write #CH_SLLP,R[2],274;LPWH
Mat Write #CH_SLLP,R[2],276;LPC5
Write #CH_SLLP,R[2],292;LPPCDATE
Write #CH_SLLP,R[2],296;LPLPERM
Mat Write #CH_SLLP,R[2],302;LPCURR
Write #CH_SLLP,R[2],314;LPCPT
Write #CH_SLLP,R[2],316;LPCSDT
Write #CH_SLLP,R[2],320;LPDEPT
Mat Write #CH_SLLP,R[2],324;LPFPERM
Mat Write #CH_SLLP,R[2],336;PPPUSERID
Mat Write #CH_SLLP,R[2],340;LPUNIT
Mat Write #CH_SLLP,R[2],352;PPPCID;
CSLK$ = " ",CSLK$;CSLK$ = K1$[1,6] + "." + K1$[7,12]
Mat Write #CH_SLLP,R[2],360;CSLK$;
Search #CH_SLLP,4,1;K1$,R[2],E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;K2$[1,16] = K1$[1,16]
K2$[17,20] = K1$[37,40];K2$[21,40] = K1$[17,36]
Search #CH_SLLP,4,2;K2$,R[2],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;K3$[1,16] = K1$[1,16]
K3$[17,22] = 999999 - LPR1[2] Using "######"
K3$[23,46] = K1$[17,40]
Search #CH_SLLP,4,3;K3$,R[2],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;K3$[1,6] = K1$[1,6]
K3$[7,10] = K1$[13,16]
K3$[11,30] = K1$[17,36]
K3$[31,36] = K1$[7,12]
K3$[37,40] = K1$[37,40]
Rem "so ends up same as Cust Lst prc Dir #1
Search #CH_SLLP,4,4;K3$,R[2],E \ If E Gosub ERR_SEARCH
If SLPDIR5 !if the 5th dir exsists
    K3$ = " ",K3$;K3$[1,20] = k1$[17,36] ! prod
    K3$[21,36] = k1$[1,16];K3$[37] = k1$[37] ! cust/sl/dpt;commod 
    Search #CH_SLLP,4,5;K3$,R[2],E \ If E Gosub ERR_SEARCH
  End If 
Goto SHPFLE_LOOP
ADDDONE: Rem "done adding
Goto OUTEND
DELRECS: Rem "delete for PRODUCT (SLSM optional)
K1$ = " ",K1$;K1$[1,6] = CUST Using "######"
SLLPD_LOOP: Rem "loop for all on file for customer
Search #CH_SLLP,3,1;K1$,R[2],E \ If E = 2 Goto DELDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> CUST Goto DELDONE
X2 = K1$[13,16] \ If DEPT And X2 <> DEPT Goto SLLPD_LOOP
X2 = 16 + Len(PROD$)
If X2 <= 16 Goto SLLPD_LOOP
If K1$[17,X2] <> PROD$ Goto SLLPD_LOOP
If SLSM ! "only for specific Slsm (should not be used on Devl)
  J3$ = " ",J3$;J3$[1,6] = K1$[1,6]
  J3$[7,7] = ".";J3$[8] = K1$[7,12]
  Search #CH_SHIP,2,1;J3$,R[3],E \ If E > 1 Gosub ERR_SEARCH
  If E Let SLSLSM = SLSM
  If Not(E)
    Mat Read #CH_SHIP,R[3],390;SLSLSM;
  End If 
  If SLSLSM = 0 Let SLSLSM = CFSLSM
  If SLSLSM <> SLSM Goto SLLPD_LOOP
End If ! "of delete for a specific slsm
Gosub DELTEREC
Goto SLLPD_LOOP
DELTEREC: Rem "std delete / return record
Mat Read #CH_SLLP,R[2],198;LPR1;
Search #CH_SLLP,5,1;K1$,R[0],E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;K2$[1,16] = K1$[1,16]
K2$[17,20] = K1$[37,40];K2$[21,40] = K1$[17,36]
Search #CH_SLLP,5,2;K2$,R[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;K3$[1,16] = K1$[1,16]
K3$[17,22] = 999999 - LPR1[2] Using "######"
K3$[23,46] = K1$[17,40]
Search #CH_SLLP,5,3;K3$,R[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;K3$[1,6] = K1$[1,6]
K3$[7,10] = K1$[13,16]
K3$[11,30] = K1$[17,36]
K3$[31,36] = K1$[7,12]
K3$[37,40] = K1$[37,40]
Rem "so ends up same as Cust Lst prc Dir #1
Search #CH_SLLP,5,4;K3$,R[0],E \ If E Gosub ERR_SEARCH
If SLPDIR5 !if the 5th dir exsists
    K3$ = " ",K3$;K3$[1,20] = k1$[17,36] ! prod
    K3$[21,36] = k1$[1,16];K3$[37] = k1$[37] ! cust/sl/dpt;commod 
    Search #CH_SLLP,5,5;K3$,R[0],E \ If E Gosub ERR_SEARCH
  End If 
E = 3 \ Search #CH_SLLP,1,0;K1$,R[2],E \ If E Gosub ERR_SEARCH
Return 
DELDONE: Rem "done Deleting
Goto OUTEND
DELSHIP: Rem "delete all for a specific SHIPLIST
K1$ = " ",K1$;K1$ = CUST Using "######"
K1$[7] = SHIPL Using "&&&&&&"
SHPLDEL_LOOP: Rem "Ship list delete loop
Search #CH_SLLP,3,1;K1$,R[2],E \ If E = 2 Goto DELDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> CUST Goto DELDONE
X2 = K1$[7,12] \ If X2 <> SHIPL Goto DELDONE
X2 = K1$[13,16] \ If DEPT And X2 <> DEPT Goto DELDONE
Gosub DELTEREC
Goto SHPLDEL_LOOP
OUTEND: Rem "outta here
If FCHL[1] <= 0 And CH_LSTP
  Close #CH_LSTP
End If 
If FCHL[2] <= 0 And CH_SLLP
  Close #CH_SLLP
End If 
If FCHL[3] <= 0 And CH_SHIP
  Close #CH_SHIP
End If 
End 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
CHNLSCR = Chf(CHNL)
! If Err 0 Gosub ERR_ESCAPE
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
Rem {end rtn.getchan.i}
Rem {begin rtn.error.s}
ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Goto ERR_MAIN
ERR_MAIN: Rem
! If Err 0 Rem
e$ = msg$
If Spc(8) <> 10000 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[])
End 
Rem {end rtn.error.s}