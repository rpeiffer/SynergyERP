! >>> Program mxrev
!
! description Calculate Review Cycles
!
! loadsave -w -n 100,10 -o prog/dxport/mxrev.dl4 src/mxrev.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx


Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 28, 2010  12:11:48
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/misc/t.mxrev.src (univ2) [mary] {18392}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
Declare Intrinsic Sub FindF
!Option Default Dialect IRIS1
! Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr
! declare Externam Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Try
	! Enter FIFOSPECCH[],FIFOSPEC1[],FIFOSPEC2[],FIFOSPEC3[],FIFOSPEC$,e$,IntCo,rstr$ ! need 
	Enter Intco, StatChan
	! intco = company #
	! statchan=channel number for status text file

Rem MXREV    Calculate Review Cycles
Rem
Rem AUTHOR: DD
Dim 1%,PFU1[20],CNVTU[2]
Dim  3%,PFU2[6],CNVTA,A[33],AMOUNT
! If Err 0 Gosub ERR_TRAP
Dim C$[30]
Dim ReportDir$[75],BaseName1$[75],StatusFile$[150] ! ,1%,statchan,3% 

Dim 1%,M2[2],ARMONTH,BOYMONTH,TYPE
Dim 3%,P1[24,3],P2[12,3],P3[12,3],CUBE[24],WEIGHT[24],QTY[24],DOLLAR[24]
Dim 3%,M1[14],Z2[12,3],Z3[12,3]
Dim K1$[50],K2$[50],K3$[50],K4$[50],F$[16],K6$[50],P60$[50],P$[12]
Dim 2%,W2[9],B[24]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim e$[1000],rstr$[5000]
dim 3%
! channel 88 reserved for status text file
! statchan=88
for ctr=1 to 87
	Try Close #ctr Else Rem
next ctr
C2 = intco !Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
C$ = C2 Using "cntrl/CNTRL#" \ If C2 > 9 Let C$ = C2 Using "cntrl/CNTRL##"
Open #1,C$
For X = 2 To 6
  Read J1 \ If J1 = -1 Goto L_850
  Mat Read #1,88,J1;F$;
  Open #X,F$
L_850: Next X
Data "2336","2400","1120","1744","1792"
If not(statchan)
	try close #88 else rem
	ReportDir$ = "REPORTDIR" \ System 28,ReportDir$
	BaseName1$ = "revcyc_stat"+dateusing$(Tim#(0),"YYMMDDHHNNSS")
	StatusFile$ = ReportDir$ + "/"+BaseName1$
	Call FindF(StatusFile$,tmp)
	If tmp<> 0
		Try Kill StatusFile$ Else Rem
	endif
	StatChan = 88 ! FindChannel() ! channel to build text file need fixed channel
	Try Close #88 Else Rem
	Try
		Build #StatChan,StatusFile$ As "TEXT"
	Else
		
		let e$="Error in Building Status File: "+StatusFile$
		error 10000
	end TRY
	Try Close #StatChan Else Rem
	Try
		Open #StatChan,StatusFile$
	else
		e$="Error in Opening Status File: "+StatusFile$
		error 10000
	end TRY
endif
Read #1,0,120;ARMONTH;
Read #1,51,74;BOYMONTH;
Mat Read #1,60,50;P60$;
if statchan<>0
	print #statchan;"Processing...Review Cycles "
endif
K1$ = " ",K1$
xx=0
L_2000: Search #2,3,1;K1$,R2,E \ If E > 2 error 11000
XX = XX + 1
!If Fra(XX / 1000) = 0 Or E = 2 Gosub DISP_STAT

If E<>0
	Gosub L_4000
	if statchan<>0
		Print #statchan;"Completed Review Cycles "
	endif
	Goto OUTEND
endif
If Not(Fra(XX / 500))
	Print #StatChan;xx;" Records Processed ";" Current ";k1$
endif	

X2 = K1$[1,6]
If VEND = 0 Let VEND = X2
If X2 <> VEND Gosub L_4000
Mat Read #2,R2,640;TYPE;
If TYPE = 1 Goto L_2000
If P60$[22,22] = "N" If TYPE = 2 Goto L_2000
Mat Read #2,R2,16;Z3;
Mat Read #2,R2,328;Z2;
Gosub L_2500 \ Gosub L_2600 \ Gosub L_3000
K3$ = K1$[1,6]
Search #4,2,1;K3$,R4,E \ If E > 1 error 11000
If E Goto L_2000
Mat Read #4,R4,200;M2
If M2[0] Gosub L_2800
If Not(M2[0]) Let START = ARMONTH + 13 - BOYMONTH \ END_ = START + 11
If START > 12 Let START = START - 12 \ END_ = END_ - 12
K6$ = " ",K6$
Read #2,R2,0;P$;
K6$ = P$
Search #6,2,1;K6$,R6,E \ If E > 1 error 11000
If E Goto L_2000
Mat Read #6,R6,256;A;
Mat Read #6,R6,512;PFU1;
Mat Read #6,R6,554;PFU2;
Gosub L_10000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS
MONTH1 = ((END_ - START) + 1)
For M = START To END_
  QTY[M] = QTY[M] + P1[M,0]
  DOLLAR[M] = DOLLAR[M] + P1[M,1]
  CUBE[M] = CUBE[M] + P1[M,3]
  WEIGHT[M] = WEIGHT[M] + P1[M,2]
Next M
Return 
L_2500: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH
For I = 0 To 12
  For X6 = 0 To 3
    If I Let P3[I,X6] = Z3[X7,X6] Else Let P3[0,X6] = Z3[0,X6]
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
L_2600: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH;X8 = 0
For I = 0 To 12
  For X6 = 0 To 3
    If Not(I) Let P2[0,X6] = Z2[0,X6] \ Goto L_2640
    If Not(X8) Let P2[I,X6] = Z2[X7,X6] Else Let P2[I,X6] = Z3[X7,X6]
L_2640: Next X6
  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
L_2800: Rem  SEASONAL START AND END
If M2[2] > M2[1]
  If ARMONTH >= M2[1] And ARMONTH <= M2[2] ! "in season same year
    START = M2[1] + 13 - BOYMONTH
    If START > 12 Let START = START - 12
    END_ = START + (M2[2] - M2[1])
  Else ! "                            out of season same year
    START = M2[2] + 14 - BOYMONTH
    If START > 12 Let START = START - 12
    END_ = START + 11 - (M2[2] - M2[1])
  End If 
Else 
  If ARMONTH >= M2[2] And ARMONTH <= M2[1] ! "out of season cross year
    START = M2[2] + 14 - BOYMONTH
    If START > 12 Let START = START - 12
    END_ = START + (M2[1] - M2[2]) - 2
  Else ! "                            in season cross year
    START = M2[1] + 11 - BOYMONTH
    If START > 12 Let START = START - 12
    END_ = START + 13 - (M2[1] - M2[2])
  End If 
End If 
Return 
L_3000: Rem LOAD LAST YEAR AND THIS YEAR
For X = 1 To 12
  For Y = 0 To 3
    P1[X,Y] = P2[X,Y]
    P1[X + 12,Y] = P3[X,Y]
  Next Y
Next X
Return 
L_4000: Rem CALC REVIEW CYCLES
K3$ = " ",K3$
K3$ = VEND Using "######"
Search #4,2,1;K3$,R4,E \ If E > 1 error 11000
If E Let VEND = X2 \ Return 
Mat Read #4,R4,206;M1
Mat Read #4,R4,200;M2
If M1[14] Goto L_4230
If Not(M2[0]) Let MONTHS = 12
If M2[0] Let MONTHS = MONTH1
For X = 1 To 24
  CUBE[0] = CUBE[0] + CUBE[X]
  WEIGHT[0] = WEIGHT[0] + WEIGHT[X]
  DOLLAR[0] = DOLLAR[0] + DOLLAR[X]
  QTY[0] = QTY[0] + QTY[X]
Next X
Gosub L_4300
If M1[0] Let REV1 = DOLLAR[0] / M1[0]
If M1[0] If REV1 Let M1[8] = MONTHS / REV1
If M1[1] Let REV2 = WEIGHT[0] / M1[1]
If M1[1] If REV2 Let M1[9] = MONTHS / REV2
If M1[2] Let REV3 = CUBE[0] / M1[2]
If M1[2] If REV3 Let M1[10] = MONTHS / REV3
If M1[3] Let REV4 = QTY[0] / M1[3]
If M1[3] If REV4 Let M1[11] = MONTHS / REV4
Mat Write #4,R4,206;M1;
L_4230: VEND = X2
For X = 0 To 24
  CUBE[X] = 0;WEIGHT[X] = 0;QTY[X] = 0;DOLLAR[X] = 0
Next X
Return 
L_4300: Rem CLEAR OUT REVIEW CYCLES
REV1 = 0;REV2 = 0;REV3 = 0;REV4 = 0
For X = 8 To 11
  M1[X] = 0
Next X
Return 
L_6000: Rem MOVE REVIEW TO PRODUCT WHSE FILE
K4$ = " ",K4$
L_6020: Search #5,3,1;K4$,R5,E \ If E > 2 error 11000
If E Return 
If Not(Fra(XX / 500))
	Print #StatChan;xx;" Records Processed ";" Current  ";k4$
endif	
Mat Read #5,R5,38;W2
W2[1] = 0
If Not(W2[3]) Gosub L_6400 \ Goto L_6150
If W2[3] Let K2$ = W2[3] Using "######"
If Not(W2[3]) If B[24] Let K2$ = B[24] Using "######"
Search #4,2,1;K2$,R2,E \ If E > 1 error 11000
If E Goto L_6150
Mat Read #4,R2,206;M1;
W2[1] = 0
If M1[8] Let W2[1] = M1[8]
If M1[9] If W2[1] < M1[9] Let W2[1] = M1[9]
If M1[10] If W2[1] < M1[10] Let W2[1] = M1[10]
If M1[11] If W2[1] < M1[11] Let W2[1] = M1[11]
L_6150: Mat Write #5,R5,38;W2;
Goto L_6020
L_6400: Rem
K6$ = K4$[1,12]
Search #6,2,1;K6$,R6,E \ If E > 1 error 11000
If E Return 
Mat Read #6,R6,156;B;
If Not(B[24]) Return 
Return 1

L_10000: Rem ================"convert vend hist to purch units
CNVTU[0] = 0;CNVTU[1] = PFU1[10];CNVTU[2] = 1
For M = START To END_
  CNVTA = P1[M,0]
  Gosub L_20000
  P1[M,0] = AMOUNT
Next M
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
If L3 Let AMOUNT = CNVTA \ Goto L_20160
L_20050:Goto L_20120 !  If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ error 11000
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ error 11000
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ error 11000
AMOUNT = CNVTA
L_20160: Return 

OUTEND: Rem EXIT ROUTINE
	Gosub L_6000
	Call "MXUSAGE.dl4",intco,statchan ! NEEDS TO BE A CALL 
ELSE
	include "src/callmainerrnet.inc"
	end try
End ! the whole program
