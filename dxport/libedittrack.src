! libedittrack.lib
!
! supporting library of Edittrack routines
!
! 1.0 03/25/08
!
! loadsave -w -n 100,10 -o prog/dxport/libedittrack.lib src/libedittrack.src
!
!
! ERPScheduler Enabled
!
include "src/copyright.inc"
!
! sub & functions for list library
!
!   S	MakeEdittrack			create entries for edittrack file
!	
!

include "src/inc/fileedittrack.inc" ! Order header


! other external functions / subs
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Declare Intrinsic function GetStruct$
Declare Intrinsic Sub SetStruct

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables

!-------------------------------------------------------------------------------------
External Sub MakeEdittrack(e$,IntCo,fchan[],etrIn. as edittrack)
! e$ - errormessage
! intco - Company #
!- fchan[0]	D	edittrack channel, -1 = not open yet
!- fchan[1]	D	usercntrl channel, -1 = not open yet (Not NEEDED/USED?)
! etr. is the file structure of edittrack ALREADY FILLED IN!
!
! WARNING:
! if the structure of etr. is changed, form print routines do use this and
! are NOT part of a typical upgrade.  This will cause major issues that
! need to be addressed when upgrading a customer.
!

Try
	Dim 1%,Progch[2],Dir
	Dim X$[20],tmp$[80],K0$[80],Mode$[2]
	Dim 3%,R[99],E

	! old structure def was overwritting a the record boundry
	! as the last element was a string and put the definition
	! right out to the record size (add a null byte and
	! poof, you are over the record boundry).
	!
	! new structure has last string element trimmed so it
	! doesn't happen (sparenu$).
	! This structure and call also appears in form print
	! programs (which means this fix is not easy to get
	! into a cut).
	!
	! If the structure passed in matches in both number
	! of elements and in type of those individual elements
	! it will not generate a parameter mismatch (so we
	! do not need to recompile form print and it
	! will successfully pass the structure).  The code
	! below copies all the passed in member into a
	! new instance of the structure forcing the last
	! element to be truncated if it is one of the
	! old style definitions.  Thus no record boundry
	! will be exceeded + no need to recompile any
	! program sending old style records... :)
	!
	dim etr. as edittrack
	N = 1
	Do
		try call SetStruct(GetStruct$(etrIn.,n), etr., n, 1) else exit do
		N = N + 1
	Loop

	If FChan[0]<=0 ! no edittrack file
	  Let Progch[0]=OpenFile(9996,IntCo) \ if progch[0]=-1 Error 42
	Else
	  Let Progch[0]=FChan[0]
	Endif
	!If FChan[1]<=0 ! no usercntrl file
	!  Let Progch[1]=OpenFile(-9988,IntCo) \ if progch[2]=-1 Error 42
	!Else
	!  Let progch[1]=FChan[1]
	!Endif
	!* initialize all fields we can
	etr.etdate=TIM(6) ! julian system date
	etr.ettime=TIM(11)*10000+TIM(12)*100+TIM(13) !hhmmss current system time
	etr.etport=SPC(6) ! port 
	Let X$=Trim$(etr.accesscode$)
	If X$="" ! not sent - get it
		etr.accesscode$="UNKNOWN   "
		tmp$ = GetParameter$("S_USER.ID") ! get from system variable
		Let etr.accesscode$=UCase$(tmp$)+"          " ! make sure it's UPPERCASE as that's what PM uses
	Endif
	etr.SpareNU$="  " ! make sure it's blank for key
	!*
	!* check to make sure it hasn't already been added
	!*
	k0$=etr.OrdNum using "######",etr.LineNum using "######",etr.ETDate using "########",etr.ettime using "######"
	Mode$="=";Dir=1;E=0
	R[0]=filegetedittrack(e$,Progch[0],mode$,Dir,k0$,etr.,E)
	If R[0]>0 Goto MEDDone:
	! not there add it / write keys/data
	Let Mode$="a";E=0
	R[0]=fileupdateedittrack(e$,Progch[0],mode$,E,etr.)
	If R[0]<0 ! search error
		Let X2=ABS(R[0])
		Let e$="SEARCH ERROR "+Str$(x2)+" CREATE Edittrack - MAKEEDITTRACK"
		Error 19000+x2
	Else
		Let E$="" ! "A" always generates E$=msgedittrackNOF
	Endif
	MEDDone: ! finito
	if fchan[0]<=0 close #progCh[0]
	
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! MakeEdittrack
!
!--------------------------------------------------------------------