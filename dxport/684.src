! >>> Program 684
!
! description   Commodity Code Listing
!
! loadsave -w -n 100,10 -o prog/dxport/684.dl4 src/684.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR  7, 2006  18:17:39
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/mx/mx684.src (univ2) [bill] {32500}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX684 - Commodity Code Listing
Rem rev: Roman Sawycky III  (02/04/1991)
Rem    4/11/96 -kmm- addup upcharge info and mkbedit
!
Declare Intrinsic Sub InpBuf,String,Time,programdump
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";

Dim 1%,CH_CNTRL,CH_CMDTY,CH_PRCTYP
Dim 1%,F,COL,COLWIDTH,comd
Dim 2%,CMDTY3,disccap
Dim 3%,J,X3,T9[20]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim K1$[4],K2$[4],K3$[4],X$[10],T9$[26]
Dim P9$[50],P60$[50],Z1$[50],PTDESC$[30],BASE$[10]
Dim FACTOR$[64],P61$[256],KEY_HEAD$[4],KEY_COMMODITY$[8]
FACTOR$[1,8] = "Penny   "
FACTOR$[9,16] = "Nickel  "
FACTOR$[17,24] = "9 Cents "
FACTOR$[25,32] = "Dime    "
FACTOR$[33,40] = "Quarter "
FACTOR$[41,48] = "Half Dol"
FACTOR$[49,56] = "99 Cents"
FACTOR$[57,64] = "Dollar  "
Rem {begin src/inc/dim.commodity.i}
Dim CCODE$[4],CCPT$[3],CMDTYUPCHG$[1],CMDTY$[36],CCOPEN$[72]
Dim 1%,CMDTYBASE,CMDTYBRKTBL,CMDTYBRKFLAG,PRFAC
Dim 2%,CMDTYMULTI,CMDTYUPCHG,CCOMMISSION
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[20]	  \ Blank$=" ",Blank$
dim EndParam$[20] \ EndParam$="}",EndParam$
!call programdump("tmp/d6840!","")
Rem {end dim.commodity.i}
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
CH_CNTRL = 1
CH_CMDTY = 5
CH_PRCTYP = 3
COLWIDTH = 64
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 58 \ If J8 Let J9 = 18
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!call dxsave(0,"tmp/jcs684.txt!")
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"684",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
J$ = intCo Using "2/commodity#"
Open #CH_CMDTY,J$
J$ = intCo Using "2/commhead#"
For J = 2 To 3
  Read J1
  If Not(J1) Goto L_830
  Read #CH_CNTRL,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "2288","752"
!call programdump("tmp/d6841!","")
CH_HEAD = 2
Read #CH_CNTRL,3;J1$;
Mat Read #CH_CNTRL,0,100;J8$;
Mat Read #CH_CNTRL,19,50;P9$;
Mat Read #CH_CNTRL,60,50;P60$;
Mat Read #CH_CNTRL,61,0;P61$;
!
call dxget("SCMDY",K2$) \ K2$ = K2$,Blank$
call dxget("ECMDY",K3$) \  K3$ =K3$,EndParam$
call dxget("RPTOPT",tmp$) \ If tmp$ = "D" Let DETL = 1 else DETL = 0
call dxget("STYPE",tmp$) \ if tmp$ = "" let ST = 1 else ST = tmp$
call dxget("ETYPE",tmp$) \ if tmp$ = "" let SP = 999 else SP = tmp$
!
!!validations commodity code
If K3$ < K2$  Let e$ = "Invalid ending commodity code, must be >= than starting commodity code!" \ error 10000
!
!details or summary 
If P9$[10,10] <> "Y" let DETL = 0
!
! startint & ending price type
If DETL
  If ST <= 0 or ST > 999 Let e$ = "Invalid starting price type, must be between 0 and 999!" \ error 10000
  If SP < ST or SP > 999 Let e$ = "Invalid ending price type, must be between starting price type and 999!" \ error 10000
else !!DETL = 0
  ST = 1
  SP = 999
end if
!
!!Gosub PRINT_SCREEN
!!COMMRANGE_QUEST: Rem "=================================== get ranges
!!Print @0,22;"Enter Starting code, <CR> first, E: exit";'CL';
!!Print @42,5;'CL'; \ Gosub L_7000 \ K2$ = Z1$ \ If K2$ = "E" Goto DONE
!!If K2$ = "" Print @42,5;"first";
!!Print @0,22;"Enter Ending code, <CR> last, E: exit";'CL';
!!Print @51,5;'CL'; \ Gosub L_7000 \ K3$ = Z1$ \ If K3$ = "E" Goto DONE
!!Print @0,22;'CL';
!!If K3$ = ""
  !!K3$ = "}}}}"
 !! Print @51,5;"last";
!!End If 
!If K3$ < K2$
!  Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO";
!  Print " STARTING VALUE! ";'RB CE';
!  Signal 3,50
!  Goto COMMRANGE_QUEST
!End If 

!!If EDTFLAG Return 
!!DETAIL_QUEST: Rem
!DETL = 0
!If P9$[10,10] <> "Y" Goto PROCEED_QUEST
!DETL = 0 \ Input @42,7;""Z1$
!If Z1$ <> "D" And Z1$ <> "S" Print 'RB'; \ Goto DETAIL_QUEST
!If Z1$ = "D" Let DETL = 1
!!If EDTFLAG Return 
!!PRICETYPE_QUEST: Rem
!!If DETL
  !!Print @40,9;'CL';
  !!Print @0,22;"Enter Starting type, <CR> first, E: exit";'CL';
  !!Input @42,8;""Z1$
  !!If Z1$ = "E" Goto DONE
  !!If Z1$ = ""
   !! Z1$ = "1"
   !! Print @42,8;Z1$;'CL';
  !!End If 
  !!ST = Z1$
  !!If ST <= 0 Or ST > 999 Print 'RB'; \ Goto PRICETYPE_QUEST
  !!Print @50,8;'CL';
  !!Print @0,22;"Enter Ending type, <CR> first, E: exit";'CL';
  !!Input @51,8;""Z1$
  !!Print @0,22;'CL';
  !!If Z1$ = "E" Goto DONE
  !!If Z1$ = ""
  !!  Z1$ = "999"
  !!  Print @51,8;Z1$;'CL';
  !!End If 
  !!SP = Z1$
 !! If SP < 0 Or SP > 999 Print 'RB'; \ Goto PRICETYPE_QUEST
  !!If ST > SP
    !!Print @0,22;'RB CE';"INVALID RANGE! "
   !! Signal 3,20
   !! Goto PRICETYPE_QUEST
  !!End If 
 !! If EDTFLAG Return 
!!End If 
!!PROCEED_QUEST: Rem
!!EDTFLAG = 1
!!Print @10,20;'CE';
!!Input @0,23;"CHOOSE  #: edit, P: Print, E: Exit "Z1$
!!Call String(1,Z1$)
!If Z1$ = "E" Goto DONE
!!U5 = Z1$
!!On U5 Gosub COMMRANGE_QUEST,DETAIL_QUEST,PRICETYPE_QUEST
!!If Z1$ = "R" Goto COMMRANGE_QUEST
!!If Z1$ = "P" Goto MAIN
!!Goto PROCEED_QUEST
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

If j8 
  tmp$ = "CODE",fdel$
  tmp$ = tmp$,"DESCRIPTION",fdel$
  tmp$ = tmp$,"REMARKS",fdel$
  tmp$ = tmp$,"COMMISSION %",fdel$
  If P61$[50,50] = "Y"
    tmp$ = tmp$ ,"PRICE ROUND FACTOR",fdel$
  End If
  If DETL
    tmp$ = tmp$,"TYPE",fdel$
	tmp$ = tmp$,"TYPEDESC",fdel$
    tmp$ = tmp$,"BASE",fdel$
    tmp$ = tmp$,"FACTOR",fdel$
    tmp$ = tmp$,"BREAK",fdel$
    If P60$[50,50] = "Y"
      tmp$ = tmp$,"UPCHARGE",fdel$
      tmp$ = tmp$,"BRKTBL",fdel$
    End If 
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
MAIN: Rem
J1 = 90;J2 = 0
!!Print @0,22;"PRINTING...please wait";'CE';
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K1$ = K2$
Search #CH_HEAD,2,1;K1$,REC_CMDTY,E
If Not(E) Goto HIT_FIRST
MAIN_LOOP: Rem
Search #CH_HEAD,3,1;K1$,REC_CMDTY,E
HIT_FIRST: Rem
If Not(E) And K1$[1,Len(K3$)] <= K3$
  Mat Read #CH_HEAD,REC_CMDTY,0;CMDTY$
  Mat Read #CH_HEAD,REC_CMDTY,36;CMDTY3;
  Mat Read #CH_HEAD,REC_CMDTY,40;PRFAC;
  mat read #ch_head,rec_cmdty,58;disccap;
  Gosub HEADER
  Gosub PRINT_LINE
  Goto MAIN_LOOP
End If 
Gosub HEADER
if Not(J8) Print #0;"\15\** END **";
Goto OUTEND
!
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!Goto DONE
!!PRINT_SCREEN: Rem
!!Print 'CS';
!!Print @0,0;"MX684.s";@30,0;"COMMODITY CODE LISTING"
!!Print @40,4;"STARTING  ENDING";
!!Print @1,5;"1> COMMODITY CODE ";'CL';
!!Print @1,7;"2> PRINT DETAIL OR SUMMARY? (D/S)   ";
!!Print @1,8;"3> PRICE TYPE";
!!Print @0,23;"CHOOSE  #: edit, P: Print, E: Exit ";
!!Return 
!
PRINT_LINE: Rem PRINT LINE
If j8 !!xml
  tmp1$ =K1$[1,4],fdel$
  tmp1$ = tmp1$,rtrim$(CMDTY$[1,16]),fdel$
  tmp1$ = tmp1$,rtrim$(CMDTY$[17,31]),fdel$
  tmp1$ = tmp1$,CMDTY3 Using "###.##",fdel$
  If P61$[50,50] = "Y"
    If PRFAC
      tmp1$ = tmp1$,PRFAC Using "##  ",FACTOR$[((PRFAC * 8) - 7),(PRFAC * 8)],fdel$ !!xml
    Else 
      tmp1$ = tmp1$,PRFAC Using "##","  ** NONE  **",fdel$ !!xml
    End If 
  End If
  comd = 0
  If DETL Gosub PRINT_DETAIL  
  If comd = 0  ! no detail found
	if DETL ! need to add missing flds!
		tmp1$=tmp1$,fdel$,fdel$,fdel$,fdel$,fdel$
		If P60$[50,50] = "Y" let tmp1$=tmp1$,fdel$,fdel$ ! 2 final
	Endif
	call addtostr(e$,rstr$,tmp1$+rdel$)
  Endif
  Return
End if
Print #0; Tab 10;K1$[1,4];
Print #0; Tab 20;CMDTY$[1,16];
Print #0; Tab 40;CMDTY$[17,31];
Print #0; Using "###.##"; Tab 90;CMDTY3;
If P61$[50,50] = "Y"
  If PRFAC
    Print #0; Using "##  "; Tab 107;PRFAC;FACTOR$[((PRFAC * 8) - 7),(PRFAC * 8)];
  Else 
    Print #0; Using "##  "; Tab 107;PRFAC;"** NONE  **";
  End If 
End if
	Print #0; Using "###.##"; Tab 125;disccap;
	
If DETL
  Print #0;"" \ Gosub HEADER
  Gosub PRINT_DETAIL
  Print #0;"" \ Gosub HEADER
End If 
Print #0;"\15\";
Return 
!
PRINT_DETAIL: Rem PRINT DETAIL
COL = 0 
KEY_COMMODITY$ = K1$
LOOP_COMM: Rem
Search #CH_CMDTY,3,1;KEY_COMMODITY$,REC_CMDTY,E
F = KEY_COMMODITY$[5,8]
If E Or KEY_COMMODITY$[1,4] <> K1$[1,4] Return 
Rem NOW CHECK FOR VALID RANGE OF PRICE TYPES - ST TO SP
If F < ST Goto LOOP_COMM
If F > SP Goto LOOP_COMM
Rem {begin src/inc/read.commodity.i}
Mat Read #CH_CMDTY,REC_CMDTY,0;CCODE$
Mat Read #CH_CMDTY,REC_CMDTY,25;CCPT$
Mat Read #CH_CMDTY,REC_CMDTY,40;CMDTYBASE
Mat Read #CH_CMDTY,REC_CMDTY,42;CMDTYMULTI
Mat Read #CH_CMDTY,REC_CMDTY,46;CMDTYBRKTBL
Mat Read #CH_CMDTY,REC_CMDTY,48;CMDTYUPCHG$
Mat Read #CH_CMDTY,REC_CMDTY,49;CMDTYUPCHG
Mat Read #CH_CMDTY,REC_CMDTY,53;CMDTYBRKFLAG
Mat Read #CH_CMDTY,REC_CMDTY,55;CCOPEN$
Rem {end read.commodity.i}
Gosub GET_PRICETYPE
!
If J8
  tmp2$ = F Using "### ",fdel$,rtrim$(PTDESC$[1,15]),fdel$!!xml type, description
  If CMDTYBASE Or CMDTYMULTI
    tmp2$ = tmp2$,BASE$[1,8],fdel$!!xml  base
    If CMDTYBASE = 0
      tmp2$ = tmp2$,"LP #",CMDTYMULTI,fdel$!!!xml
    Else 
      tmp2$ = tmp2$,CMDTYMULTI Using "###.####",fdel$!!xml
    End If 
    If CMDTYBRKFLAG Let J2$ = "Y" Else Let J2$ = "N"
    tmp2$ = tmp2$,J2$[1,1],fdel$!!xml  factor break
  Else 
    tmp2$ = tmp2$,"NOT USED",fdel$," ",fdel$,fdel$!!xml  !!end line xml
  End If 
  If P60$[50,50] = "Y"
    If CMDTYUPCHG$ <> "" And CMDTYUPCHG$ <> " "
      tmp2$ = tmp2$,CMDTYUPCHG$," "
      tmp2$ = tmp2$,CMDTYUPCHG Using "#####.##",fdel$
    Else
      tmp2$ = tmp2$ , "",fdel$
    End If 
    If CMDTYBRKTBL
      tmp2$ = tmp2$,CMDTYBRKTBL Using "####",fdel$!xml
    Else 
      tmp2$ = tmp2$ ,"",fdel$
    End If 
  End If 
  tmp$ = tmp1$ ,tmp2$
  call addtostr(e$,rstr$,tmp$+rdel$)
  comd = 1 \ Goto LOOP_COMM
  Return 
End if
!
Print #0; Using "### "; Tab (COL * COLWIDTH);F;PTDESC$[1,15];
If CMDTYBASE Or CMDTYMULTI
  Print #0; Tab (COL * COLWIDTH + 20);BASE$[1,8];
  Print #0; Tab (COL * COLWIDTH + 29);
  If CMDTYBASE = 0
    Print #0;"LP #";CMDTYMULTI;
  Else 
    Print #0; Using "###.####";CMDTYMULTI;
  End If 
  If CMDTYBRKFLAG Let J2$ = "Y" Else Let J2$ = "N"
  Print #0; Tab (COL * COLWIDTH + 38);J2$[1,1];
Else 
  Print #0; Tab (COL * COLWIDTH + 20);"NOT USED";
End If 
If P60$[50,50] = "Y"
  If CMDTYUPCHG$ <> "" And CMDTYUPCHG$ <> " "
    Print #0; Tab (COL * COLWIDTH + 44);CMDTYUPCHG$;
    Print #0; Using "#####.##"; Tab (COL * COLWIDTH + 46);CMDTYUPCHG;
  End If 
  If CMDTYBRKTBL
    Print #0; Using "####"; Tab (COL * COLWIDTH + 55);CMDTYBRKTBL;
  End If 
End If 
COL = COL + 1
If COL >= 2 Print #0;"" \ Gosub HEADER \ COL = 0
Goto LOOP_COMM
Return 
!
GET_PRICETYPE: Rem PR TYPE & BASE DESC
PTDESC$ = " ",PTDESC$ \ BASE$ = " ",BASE$
Read #CH_PRCTYP,F,0;J4$[1,30];
If J4$[1,1] <> "" And J4$[1,3] <> "   "
  PTDESC$ = J4$
End If 
If J4$[1,1] = "" Let PTDESC$ = F Using "PRICE TYPE ### "
If CMDTYBASE = 0 Let BASE$ = "SHEET"
If CMDTYBASE = 3 Let BASE$ = "L.P. #1 "
If CMDTYBASE = 4 Let BASE$ = "L.P. #2 "
If CMDTYBASE = 5 Let BASE$ = "L.P. #3 "
If CMDTYBASE = 6 Let BASE$ = "L.P. #4 "
If CMDTYBASE = 7 Let BASE$ = "L.P. #5 "
If CMDTYBASE = 8 Let BASE$ = "L.P. #6 "
If CMDTYBASE = 1 Or CMDTYBASE = 2
  X9 = 0
  If CMDTYBASE = 1 Let X9 = 13
  If CMDTYBASE = 2 Let X9 = 12
  D1 = (X9 - 1) * 10
  Read #CH_CNTRL,18,D1;BASE$[1,10];
End If 
Return 
!
HEADER: Rem HEADINGS ROUTINE
if j8 return 
!
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1
J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 684 - ";T9$;
Print #0; Tab 44;"C O M M O D I T Y   C O D E   L I S T I N G"
Print #0;"\15\";
Print #0; Tab 10;"CODE";
Print #0; Tab 20;"DESCRIPTION";
Print #0; Tab 40;"REMARKS"; Tab 87;"COMMISSION %";
If P61$[50,50] = "Y"
  Print #0; Tab 105;"PRICE ROUND FACT";
End If 
Print #0;tab 122;"DISC CAP%";
Print #0;""
If DETL
  For COL = 0 To 1
    Print #0; Tab (COL * COLWIDTH);"TYPE DESCRIPTION";
    Print #0; Tab (COL * COLWIDTH + 20);"BASE";
    Print #0; Tab (COL * COLWIDTH + 29);"FACTOR";
    Print #0; Tab (COL * COLWIDTH + 37);"BREAK";
    If P60$[50,50] = "Y"
      Print #0; Tab (COL * COLWIDTH + 44);"UPCHARGE";
      Print #0; Tab (COL * COLWIDTH + 55);"BRKTBL";
    End If 
  Next COL
  Print #0;""
  J1 = 5
End If 
Print #0;""
Return
!
!!L_7000: Rem "=========================================== data input routine
!Input ""Z1$
!!Return 
!!DONE: Rem EXIT PROGRAM
!
OUTEND: Rem
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try Call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
