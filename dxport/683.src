! >>> Program 683
!
! description   Material Code Listing
!
! loadsave -w -n 100,10 -o prog/dxport/683.dl4 src/683.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 17, 2001  14:30:08
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx683.src (univ2) [kag] {07823}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time
! Option Default Dialect IRIS1
Rem MX683          Material Code Listing
Rem Author:        Roman Sawycky III  (02/04/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim M1$[25],Z1$[50]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[20]	  \ Blank$=" ",Blank$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 2
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Mat Read #1,0,100;J8$;
Data "2272"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
L_900: Rem "=================================== get ranges
!Gosub L_7500
!Print @51,5;'CL'; \ Gosub L_7000 \ K2$ = Z1$ \ If K2$ = "E" Goto L_9010
Call dxget("SCODE",tmp$)
k2$=tmp$+Blank$
!Print @51,7;'CL'; \ Gosub L_7000 \ K3$ = Z1$ \ If K3$ = "E" Goto L_9010
call dxget("ECODE",k3$)
If K3$ = "" Let K3$ = "~~~~~~"
If K3$ < K2$ !Gosub L_985 \ Goto L_900
!Goto L_990
e$="ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! " \ Error 10000
!L_985: Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50 \ Return 
Endif
!L_990: Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto L_9010
!If Z1$ = "R" Goto L_900
!If Z1$ <> "P" Goto L_990
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
Endif
if j8 ! xml
	tmp$ = bsdel$,"683",fdel$,rdel$
	Call addtostr(e$,rstr$,tmp$)
	tmp$="CODE",fdel$
	tmp$=tmp$,"DESCRIPTION",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
End If 
J1 = 90 \ J2 = 0
!Print @0,22;"PRINTING...please wait";'CE'; \ Signal 3,0
!If J8 Print 'CS';
! If Err 0 Gosub ERR_ESCAPE
K1$ = K2$
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #2,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If K1$ > K3$ Goto L_9100
Mat Read #2,R1,0;M1$;
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS CALC
Return 
L_4000: Rem TOTAL PRINT
if j8 return
Gosub L_5800
Print #0;"\15\** END **";
Return 
L_5000: Rem PRINT LINE
if j8
	tmp$=k1$[1,1],fdel$,RTrim$(M1$[1,25]),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
Else
	Print #0; Tab 34;K1$[1,1];
	Print #0; Tab 72;M1$[1,25];
	Print #0;"\15\";
Endif
Return 
L_5800: Rem HEADINGS ROUTINE
if j8 return
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 683 - ";T9$;
Print #0; Tab 45;"M A T E R I A L   C O D E   L I S T I N G"
Print #0;"\15\";
Print #0; Tab 34;"CODE";
Print #0; Tab 72;"DESCRIPTION";
Print #0;" "
Print #0;"\15\";
Return 
!L_7000: Rem "=========================================== data input routine
!Input ""Z1$
!Return 
!L_7500: Rem "========================================== screen
!Print 'CS'
!Print @0,0;"MX683";@30,0;"MATERIAL CODE LISTING"
!Print @1,5;"ENTER STARTING CODE, <CR> FOR FIRST,  E: TO EXIT: "
!Print @1,7;"ENTER ENDING CODE,   <CR> FOR LAST,   E: TO EXIT: "
!Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
OUTEND: Rem EXIT PROGRAM
L_9010: !Print 'CS'
! call programdump("tmp/d6831!","")
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try Call dxclose() else rem
End
!Close 
!Chain "MX000"
!Stop 
L_9100: Rem END OF THIS RANGE
Gosub L_4000
GOTO OUTEND
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
If K2$ = "" Goto OUTEND
!Goto L_900
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End