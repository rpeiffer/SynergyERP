!>>> Program 639
!
! description Journal Balance
!
! loadsave -w -n 100,10 -o prog/dxport/639.dl4 src/639.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 21, 2006  11:33:27
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ap/gl639.src (univ2) [mary] {42934}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem GL639 GENERAL LEDGER MONTHLY JOURNAL
Rem AUTHOR: MTK   DEC 11, 1986
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time
!!Option Default Dialect IRIS1
Rem {begin dim.rtn.input}
if err 0 gosub ERR_TRAP
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1,J1X
Rem {end dim.rtn.input}
dim 1%,jscode[23]
Dim PERIOD$[4],CP1$[4],CP2$[4]
Dim 2%,CPER[1]
Dim 1%,C1[2],E,I,K,L,P,P9[1],Q5,Q6,Q7,S9[1],X,FLAG
Dim 2%,B,B8,B9[3],H2[2],H[1],R[23],S,U8,Y9[3],Y1[3],DATEX[1],GLT1[3]
Dim 2%,BATCH,D3[1]
Dim 4%,M3[39],GLT0
Dim 4%,T9[2],T1[1],T8[1]
Dim F9$[2],GLT$[80],GLTKEY$[50]
Dim B1$[4],C$[140],D1$[26],F$[16],I$[4],K$[30],K9$[50],M$[36]
Dim S$[6],S1$[4],S2$[4],2%
dim chkjs$[2],2%,chkdate
Dim U5$[132],PDATEX$[10],JSCODE$[23]
let jscode$="123456789 ACDEIMPQRSVWX"
for x=0 to 23\jscode[x]=0\next x
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[50]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
U5$ = "-",U5$
Mat Read #1,51,6;S9;
M$ = "----,---,--#.##"
If Err 0 Let L8 = Spc(8)
L8 = 0
L9 = Chf(0)
If L8 <> 0 If L8 <> 49 Gosub ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
L9 = 60;SRCPRT = 0
If L8
  L9 = 23;SRCPRT = 99
End If 
Call Time(D1$)
L = 99
V9 = 0
S$ = " ",S$
S$[3,6] = S Using "####"
For I = 3 To 6
  If S$[I,I] = " " Let S$[I,I] = "."
Next I
!!P8 = Spc(5)
!!L8 = Int(P8 / 16384)
!!G8 = Int((P8 - L8 * 16384) / 64)
!!U8 = P8 - (L8 * 16384 + G8 * 64)
!!S$[1,1] = G8 Using "#"
!!S$[2,2] = U8 Using "#"
!!!!Print 'CS';"-gl639-"; Tab 20;"JOURNAL ENTRY BALANCE LIST"
!!F$ = "1/ACF",S$[1,2]
!!Call FindF(F$,B1)
!!If Not(B1) Let e$ = "File ",F$," not found!" \ error 10000
!!  Print @0,22;"FILE ";F$;" NOT FOUND ";
!!  Print @0,23;"PRESS <CR> TO RETURN TO THE MENU ";
!!  Input Len (16384 + 1);""J$
!!  Goto OUTEND
!!End If 
!!Ropen #4,F$
!!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
P8 = intCo
L8 = Int(P8 / 16384)
G8 = Int((P8 - L8 * 16384) / 64)
U8 = P8 - (L8 * 16384 + G8 * 64)
S$[1,1] = U8 Using "#"
S$[2,2] = G8 Using "#"
F$ = "1/ACF",S$[1,2]
Call FindF(F$,B1)
If Not(B1) Let e$ = "File ",F$," not found!" \ error 10000
Ropen #4,F$
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"639",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!S9=1
call dxget("CLIENT",tmp$)  \ S = tmp$  !!Client number
call dxget("SPERIOD",tmp$) \ CPER[0] = tmp$ !!Starting Current Accounting Period (MMYY)
call dxget("EPERIOD",tmp$) \ CPER[1] = tmp$ !!Ending Current Accounting Period (MMYY)
call dxget("SDATE",tmp$) \ J1 = tmp$ !!Starting date (MMDDYY)
call dxget("EDATE",tmp$) \ J1X = tmp$ !!Ending date (MMDDYY)
call dxget("SBATCH",tmp$) \ B9[0] = tmp$ !! Starting Batch Number
call dxget("EBATCH",tmp$) \ IF tmp$ = "" Let B9[1] = 999 else Let B9[1] = tmp$ !! Ending Batch Number
call dxget("JSCODE",tmp$) !!Journal Source Code or O: all
let ctr=0
for x=1 to len(tmp$)
	if tmp$[x,x]="0"
		for x9=0 to 23\let jscode[x9]=1\next x9
		let ctr=99
		goto endsetjscode:
	endif
	for x9=1 to 23
		if tmp$[x,x]=jscode$[x9,x9]
			let jscode[x9]=1
			let ctr=99
		endif
	next x9
next x
endsetjscode: ! end setting the jscode
if not(ctr)
	let e$="Invalid Journal Source Entered" \ Error 10000
endif
                         
! client #
If S9=0 Let S = 1 ! default client #
!
Gosub L_865 ! get client info
comd = 0
CP1$ = CPER[0] Using "&&&&"
PERIOD$ = CP1$[3,4],CP1$[1,2]
Y9[0] = PERIOD$
Gosub VERIFYPERIOD
if comd = 2 Let e$ = "Invalid starting accounting period, period not found!" \ error 10000
if comd = 1 Let e$ = "Invalid starting accounting period!" \ error 10000
C1[0] = X1
C1[1] = X3
!
CP2$ = CPER[1] Using "&&&&"
PERIOD$ = CP2$[3,4],CP2$[1,2]
Y9[1] = PERIOD$
Gosub VERIFYPERIOD 
if comd = 2 Let e$ = "Invalid ending accounting period, period not found!" \ error 10000
if comd = 1 Let e$ = "Invalid ending accounting period!" \ error 10000
C1[2] = X1
!
If C1[0] > C1[2] Let e$ = "Invalid ending accounting period, must be >= starting accounting period!" \ error 10000
!
Gosub VERIFYFYE
!
if B9[0] < 0 or B9[0] > 999 let e$ = "Invalid starting batch number, must be between 0 and 999!" \ error 10000
if B9[1] < B9[0] or B9[1] > 999 let e$ = "Invalid ending batch number, must be between starting batch number  and 999!" \ error 10000
!
X$ = J1 Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4] 
X3 = tmp1$ \ Gosub L_7840 \ comd = 1
if comd = 1 Let e$ = "Invalid starting date!" \ error 10000 
DATEX[0] = X3
!
X$ = J1X Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X3 = tmp1$ \ Gosub L_7840 \ comd = 1
if comd = 1 Let e$ = "Invalid ending date!" \ error 10000 
DATEX[1] = X3
!
If DATEX[1] < DATEX[0] Let e$ = "Invalid ending date, must be >= starting date!" \ error 10000
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
Goto GETGLT
!!If Not(S9) Let S = 1 \ Goto L_865
!!L_845: Rem enter client number
!!Print @0,23;'CL';"Enter Client Number or <CR>: to end ";
!!Print @5,3;'CL';"CLIENT NUMBER ";
!!Input Len (16384 + 4);""J$
!!If J$ = "" Goto OUTEND
!!S = J$
!
L_865: 
K$ = " ",K$ \ K$[3,6] = S Using "####"
Search #4,2,1;K$,R[4],E
If E Let e$ = "Client not on file!" \ error 10000
!!  Print @0,23;'CL RB';"CLIENT NOT ON FILE!!!"; \ Signal 3,20
!!  Goto L_845
!!End If 
Mat Read #4,R[4];C$;
D9 = C$[135,136]
If D9 > 9 Let F9$ = D9 Using "##"
If D9 < 10 Let F9$ = D9 Using "#"
K$[7,8] = "PG"
Search #4,2,1;K$,R[4],E
If E Let e$ = "Error in client file!" \ error 10000
!!  Print @0,23;'CL RB';"ERROR IN CLIENT FILE!!!" \ Signal 3,20
!!  Gosub ERR_SEARCH
!!End If 
!!Print Using "####";@5,3;'CE';"CLIENT ";S;" ";C$[11,50];
S1$ = S Using "####"
For X = 1 To 4
  If S1$[X,X] = " " Let S1$[X,X] = "."
Next X
F$ = F9$,"/GLM",S$[1,2],S1$
Call FindF(F$,B1)
If Not(B1) Let e$ = "File ",F$," not found!" \ error 10000
!!  Print @0,22;'CE';"FILE ";F$;" NOT FOUND ";
!!  Print @0,23;"PRESS <CR> TO RETURN TO THE MENU ";
!!  Input Len (16384 + 1);""J$
!!  Goto OUTEND
!!End If 
Ropen #3,F$
K$ = " ",K$
Search #3,2,1;K$,R[3],E
If E Let e$ = K$," not found!" \ error 10000
Mat Read #3,R[3],70;M3;
return
!
!!SETDEFAULT: Rem
!!CPER[0] = 0;CPER[1] = 0;B9[0] = 0;B9[1] = 999
!!STARTHERE: Rem start screen here
!!Gosub PRNTSCRN
!!SELECTALL: Rem to re-select all items
!!For OPT = 1 To 4
!!  On OPT Gosub GETCURRPERIOD,GETBATCHNUM,GETDATE,GETJSCODE
!!Next OPT
!!SELOPT: Rem selection options
!!Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P:  print  E: end ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "P" Goto GETGLT
!!If J$ = "R" Goto SELECTALL
!!OPT = J$
!!On OPT Gosub GETCURRPERIOD,GETBATCHNUM,GETDATE,GETJSCODE
!!Goto SELOPT
!
GETGLT: Rem verify within same fiscal year and file exists
S2$[1,2] = ".."
S2$[3,4] = BEGFYE Using "&&"
F$ = F9$,"/GLT",S$[1,2],S1$,S2$
Call FindF(F$,B1)
If Not(B1) Let e$ = "G/L transaction file for fiscal year ",S2$[3,4],"does not exist!" \ error 10000
!!  Print @0,23;'CL RB';"G/L Transaction File For Fiscal Year ";S2$[3,4];"Does Not Exist ";
!!  Signal 3,30
!!  Goto SELOPT
!!End If 
Ropen #2,F$
L_1800: Rem SORT FILE
PCTR = 0
!!If Err 0 Gosub ERR_ESCAPE
!!Print @0,22;'CE';"Sorting, Please Wait...";
L_1810: Search #9,3,1;K9$,R[9],E
If E = 2 Goto L_1900
!!If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 639 sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_1810
L_1900: Rem SORT FILE HERE
Y1[0] = Y9[0];Y1[1] = Y9[1]
If Not(BEGFYE)
  B1$ = Y9[0] Using "&&&&" \ If B1$[1,2] = "00" Let Y1[0] = Y1[0] + 10000
  B1$ = Y9[1] Using "&&&&" \ If B1$[1,2] = "00" Let Y1[1] = Y1[1] + 10000
End If 
GLTKEY$ = " ",GLTKEY$
SORTGLT: Rem start sort of glt file
Search #2,3,1;GLTKEY$,R[2],E \ If E = 2 Goto STARTPRNT
Rem {begin src/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
!!If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
Mat Read #2,R[2],0;GLT$;
Y9[2] = GLT$[67,70] \ GLT$[67,70] = Y9[2] Using "&&&&"
If Not(BEGFYE) If GLT$[67,70] = "00" Let Y9[2] = Y9[2] + 10000
If Y9[2] < Y1[0] Goto SORTGLT
If Y9[2] > Y1[1] Goto SORTGLT
B9[2] = GLT$[71,74]
If B9[2] < B9[0] Goto SORTGLT
If B9[2] > B9[1] Goto SORTGLT
!If JSCODE$[1,1] <> "0"
!  If GLT$[2,2] <> JSCODE$[1,1] Goto SORTGLT
!End If
for c9=1 to 23
	if glt$[2,2]=jscode$[c9,c9]
		if jscode[c9]<>0 goto jschkok:
		if jscode[c9]=0 goto sortglt:
	endif
next c9
goto sortglt:
jschkok: ! journal source
PDATEX$ = GLT$[65,66],GLT$[61,62],GLT$[63,64]
X3 = PDATEX$ \ Gosub L_7840 \ X3 = 0
If X3 < DATEX[0] Goto SORTGLT
If X3 > DATEX[1] Goto SORTGLT
If BEGFYE = 0 And GLT$[67,70] = "99" Let GLT$[67,70] = "  "
mat read #2,r[2],100;glt1;
K9$ = " ",K9$ \ K9$[1,4] = GLT$[67,70]
K9$[5,8] = GLT$[71,74]
!K9$[9,15] = R[2] Using "#######"
let k9$[9,14]=glt1[3] using "######" ! accept date
let k9$[15,16]=glt$[1,2]  ! js code
LET K9$[17,24]=R[2] USING "########"
R[9] = R[2]
Search #9,4,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 639 sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \error 10000
Goto SORTGLT
!
STARTPRNT: Rem START HERE
let chkdate=0;chkjs$=""
Y9[2] = Y9[0] \ B9[2] = 9999
K9$ = " ",K9$
PCTR = 0;V9 = 0;L = 99
!
if j8
  tmp$ = "CLIENT CODE",fdel$,"CLIENT NAME",fdel$
  tmp$ = tmp$,"BATCH",fdel$
  tmp$ = tmp$,"ACCOUNT",fdel$
  tmp$ = tmp$,"ACCOUNT NAME",fdel$
  tmp$ = tmp$,"JS",fdel$
  tmp$ = tmp$,"REFER#",fdel$
  tmp$ = tmp$,"DATE",fdel$
  tmp$ = tmp$,"DEBIT",fdel$
  tmp$ = tmp$,"CREDIT",fdel$
  tmp$ = tmp$,"ENTRY DESCRIPTION",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
!!If Not(SRCPRT)
!!  Print @0,22;'CE';"Printing, Please Wait...";
!!End If 
L_2005: 
Search #9,3,1;K9$,R[9],E 
If E = 2 Goto L_9100
R[2] = R[9]
Mat Read #2,R[2],0;GLT$;
LET Y9[3]=glt$[67,70]
IF Y9[2]<>Y9[3] 
	GOSUB L_4300:
	let b9[2]=9999
	let chkdate=0
	let chkjs$=""
endif
LET Y9[2]=Y9[3]
LET B9[3]=glt$[71,74]
IF B9[3]<>B9[2]
	GOSUB L_4200: ! BATCH TOTALS
	let chkdate=0;chkjs$=""
endif
mat read #2,r[2],100;glt1;
if chkdate<>0 and glt1[3]<>0 and glt1[3]<>chkdate
	gosub l_4200:
	let chkdate=0;chkjs$=""
endif
if chkjs$<>"" and chkjs$[1,2]<>glt$[1,2]
	gosub l_4200:
	let chkdate=0;chkjs$=""
endif
LET B9[2]=B9[3]
let chkdate=glt1[3]
let chkjs$=glt$[1,2]
Mat Read #2,R[2],92;GLT0;
K$ = GLT$[3,14]
Search #3,2,1;K$,R[3],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #3,R[3],0;M$;
  If M$[13,13] <> "0" Goto L_2005
Else 
  M$[15] = "ACCOUNT NOT ON FILE!!!"
End If 
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2005
!
L_2200: Rem TOTALS
If M$[13,13] = "0"
  If GLT0 > 0
    T9[0] = T9[0] + GLT0 \ T1[0] = T1[0] + GLT0 \ T8[0] = T8[0] + GLT0
  Else 
    T9[1] = T9[1] + GLT0 \ T1[1] = T1[1] + GLT0 \ T8[1] = T8[1] + GLT0
  End If 
End If 
Return 
!
!!GETCURRPERIOD: Rem get current period  #1
!!J0$ = "3000043205"
!!J2$ = "&&&&" \ J1 = CPER[0]
!!J5$ = "Enter Starting Current Accounting Period (MMYY)"
!!Gosub ISINPUT
!!CP1$ = J1 Using "&&&&"
!!PERIOD$ = CP1$[3,4],CP1$[1,2]
!!Y9[0] = PERIOD$
!!Gosub VERIFYPERIOD
!!Goto GETCURRPERIOD
!!C1[0] = X1
!!C1[1] = X3
!!CPER[0] = J1
!!Print Using "&&&&";@32,5;CPER[0];
!!CP1$ = CPER[0] Using "&&&&"
!!GETECURRPERIOD: Rem get ending current period
!!If Not(CPER[1]) Let CPER[1] = CPER[0]
!!J0$ = "3000 45105"
!!J2$ = "&&&&" \ J1 = CPER[1]
!!J5$ = "Enter Ending Current Account Period (MMYY)"
!!Gosub ISINPUT
!!CP2$ = J1 Using "&&&&"
!!PERIOD$ = CP2$[3,4],CP2$[1,2]
!!Y9[1] = PERIOD$
!!Gosub VERIFYPERIOD
!!Goto GETECURRPERIOD
!!If X3 <> C1[1] ! crossed fiscal year
!!  Print @0,23;'CL RB';"Accounting Periods Must Be in Same Fiscal Year";
!!  Signal 3,20
!!  Goto GETECURRPERIOD
!!End If 
!!CPER[1] = J1
!!C1[2] = X1
!!If C1[0] > C1[2] ! staring period greater than ending period
!!  Print @0,23;'CL RB';"Ending Current Accounting Period Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETCURRPERIOD
!!End If 
!!Print Using "&&&&";@51,5;CPER[1];
!!CP2$ = CPER[1] Using "&&&&"
!
VERIFYFYE: Rem verify within same fiscal year and file exists
FYEMO = C$[128,129]
BEGMO = CP1$[1,2] \ BEGFYE = CP1$[3,4]
ENDMO = CP2$[1,2] \ ENDFYE = CP2$[3,4]
If BEGMO > FYEMO Let BEGFYE = BEGFYE + 1 \ If BEGFYE > 99 Let BEGFYE = 0
If ENDMO > FYEMO Let ENDFYE = ENDFYE + 1 \ If ENDFYE > 99 Let ENDFYE = 0
If BEGFYE <> ENDFYE Let e$ = "Accounting periods must be in same fiscal year!" \ error 10000
!!  Print @0,23;'CL RB';"ACCOUNTING PERIODS MUST BE IN SAME FISCAL YEAR";
!!  Signal 3,30
!!  Goto GETCURRPERIOD
!!End If 
Return 
!
!!GETBATCHNUM: Rem prompt for batch number range #2
!!J0$ = "3000033307"
!!J2$ = "###" \ J1 = B9[0]
!!J5$ = "Enter Starting Batch Number"
!!Gosub ISINPUT
!!B9[0] = J1
!!J0$ = "3000 35207"
!!J2$ = "###" \ J1 = B9[1]
!!J5$ = "Enter Ending Batch Number"
!!Gosub ISINPUT
!!B9[1] = J1
!!If B9[0] > B9[1]
!!  Print @0,23;'CL RB';"Ending Batch Number Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETBATCHNUM
!!End If 
!!Return 
!!GETDATE: J0$ = "5000 63309"
!!X3 = DATEX[0] \ Gosub L_7870 \ J1 = D3[0]
!!J5$ = "Enter Starting Date (MMDDYY)"
!!If J1 <= 0 Let J1 = 700101
!!Gosub ISINPUT
!!X3 = J1 \ Gosub L_7840 \ Goto GETDATE
!!DATEX[0] = X3
!!GETDATE2: J0$ = "5000 65209"
!!X3 = DATEX[1] \ Gosub L_7870 \ J1 = D3[0]
!!If J1 <= 0 Let J1 = 591231
!!J5$ = "Enter Ending Date (MMDDYY)"
!!Gosub ISINPUT
!!X3 = J1 \ Gosub L_7840 \ Goto GETDATE2
!!DATEX[1] = X3
!!If DATEX[0] > DATEX[1]
!!  Print @0,23;'CL RB';"Ending Date Must Be Greater Than Starting";
!!  Signal 3,25 \ Goto GETDATE
!!End If 
!!Return 
!!GETJSCODE: Rem get journal source code
!!Gosub DSPJSCODE
!!J0$ = "2 00013311"
!!J1$ = JSCODE$
!!J5$ = "Enter Journal Source Code or O: all"
!!Gosub ISINPUT
!!Call String(1,J$)
!!Print @35,11;'CL';
!!If J$ = "0"
!!  Print @35,11;'CL';"All";
!!  Goto ENDJSCODE
!!End If 
!!JSNUM = J$
!!If JSNUM
!!  If JSNUM < 1 Or JSNUM > 9 Goto GETJSCODE
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "A"
!!  Print @35,11;"Accounts Payable ";
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "C"
!!  Print @35,11;"Credit Memos";
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "D"
!!  Print @35,11;"Cash Disbursements";
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "E"
!!  Print @35,11;"Direct A/R Entry";
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "M"
!!  Print @35,11;"Misc Stock Receipts";
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "S"
!!  Print @35,11;"Sales Invoices";
!!  Goto ENDJSCODE
!!End If 
!!If J$ = "R"
!!  Print @35,11;"Cash Receipts";
!!  Goto ENDJSCODE
!!End If 
!!Goto GETJSCODE
!!ENDJSCODE: Rem
!!JSCODE$ = J$
!!!Print @0,15;'CE';
!Return 
!!DSPJSCODE: Rem display js code
!!Print @0,15;'CE'; Tab 20;"Journal Source Codes ";
!!Print @5,16;"A: Accounts Payable";
!!Print @5,17;"C: Credit Memos";
!!Print @5,18;"D: Disbursements";
!!Print @5,19;"E: Direct A/r Entry";
!!Print @35,16;"M: Misc Receipts to Stock";
!!Print @35,17;"R: Cash Receipts";
!!Print @35,18;"S: Sales Invoices";
!!Return 
!!PRNTSCRN: Rem print screen headings
!!Print @0,4;'CE';
!!Print @0,4;'CE';@29,4;'BR';"STARTING";'ER';@49,4;'BR';"ENDING";'ER';
!!Print @0,5;"1> ACCOUNTING PERIOD (mmyy)";
!!Print @0,7;"2> BATCH NUMBER ";
!!Print @0,9;"3> DATE ";
!!Print @0,11;"4> JS CODE ";
!!Return 
!
VERIFYPERIOD: Rem entered account period
cmod=2
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99" return ! bad date
If PERIOD$[1,2] <> PERIOD$[3,4]
  If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12" return
End If 
N = Int(M3 / 100)
B1 = PERIOD$
For X = 1 To 39
  If X <> 13 Or X <> 26 Or X <> 39
    If M3[X] = B1 goto PERIODFND ! period found
  End If 
Next X
comd = 1
!!Print @0,23;'CL RB';"Accounting Period Not Found "; \ Signal 3,30
!!Print @0,23;'CL';
Return 
!
PERIODFND: 
cmod=0
X1 = X
If X1 < N + 2 Let X3 = 0
If X1 > N + 1 Let X3 = N + 2
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 3
!!Return 1
Return !!add
!
! - PRNTBADDATE: Rem  print invalid date entered
! - comd = 2
!!Print @0,23;'CL RB';"Invalid Accounting Period "; \ Signal 3,15
!!Print @0,23;'CL';
! - Return 
!
Rem {begin call.input.i}
!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!Return 
!ISERRMSG: X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
L_4000: Rem TOTAL PRINT
Gosub L_4300
Gosub L_5800
!
If J8 return
!
Print #0; Tab 71;U5$[1,15]; Tab 89;U5$[1,15]
Gosub L_5800
If Abs(T9[0]) = Abs(T9[1]) Print #0; Tab 10;"IN BALANCE";
If Abs(T9[0]) <> Abs(T9[1]) Print #0; Tab 10;"* * * O U T  O F  B A L A N C E  * * *";
Print #0; Tab 53;"* * TOTALS * *";
Print #0; Using "###,###,###,###.##"; Tab 68;T9[0];
Print #0; Using "###,###,###,###.##"; Tab 86;Abs(T9[1]);
Print #0;" "
Return 
!
L_4200: Rem BATCH TOTAL PRINT
if j8 return
!
IF NOT (T1[0]) IF NOT (T1[1]) if b9[2]=9999 RETURN
Print #0; Tab 71;U5$[1,15]; Tab 89;U5$[1,15]
Gosub L_5800
Print #0; Using "###"; Tab 1;B9[2];
If Abs(T1[0]) = Abs(T1[1]) Print #0; Tab 10;"IN BALANCE";
If Abs(T1[0]) <> Abs(T1[1]) Print #0; Tab 10;"* * * O U T  O F  B A L A N C E  * * *";
Print #0; Tab 56;"BATCH TOTALS";
Print #0; Using "###,###,###,###.##"; Tab 68;T1[0];
Print #0; Using "###,###,###,###.##"; Tab 86;Abs(T1[1]);
T1[0] = 0 \ T1[1] = 0
Print #0;""
Print #0;"" \ L = L + 2
let b9[2]=9999
Return 
!
L_4300: Rem ACCOUNTING PERIOD TOTALS
Gosub L_4200
!
if J8 return
!
If Not(T8[0]) If Not(T8[1]) Return 
If Y9[0] = Y9[1] Goto L_4361
Print #0; Tab 71;U5$[1,15]; Tab 89;U5$[1,15]
Gosub L_5800
If Abs(T8[0]) = Abs(T8[1]) Print #0; Tab 10;"IN BALANCE";
If Abs(T8[0]) <> Abs(T8[1]) !
 ! If JSCODE$ = "0"
    Print #0; Tab 10;"* * * O U T  O F  B A L A N C E  * * *";
  !Else 
   ! Print #0; Tab 10;"** total for js code ";JSCODE$;
  !End If 
End If 
B1$ = Y9[2] Using "&&&&"
Print #0; Tab 50;"TOTALS FOR ";B1$[3,4];"/";B1$[1,2];
Print #0; Using "###,###,###,###.##"; Tab 68;T8[0];
Print #0; Using "###,###,###,###.##"; Tab 86;Abs(T8[1]);
Print #0;""
Print #0;"" \ L = L + 2
L_4361: T8[0] = 0 \ T8[1] = 0
Return 
!
L_5000: Rem PRINT LINE
If J8 
  tmp$ = C$[1,8],fdel$
  tmp$ = tmp$, rtrim$(C$[11,50]),fdel$
  tmp$ = tmp$, GLT$[71,74],fdel$
  tmp$ = tmp$, rtrim$(GLT$[4,14]),fdel$
  tmp$ = tmp$, rtrim$(M$[15,35]),fdel$
  tmp$ = tmp$, GLT$[2,2],fdel$
  tmp$ = tmp$, GLT$[15,20],fdel$
  tmp$ = tmp$, GLT$[61,62],"/",GLT$[63,64],"/",GLT$[65,66],fdel$
  If M$[13,13] = "0"
    If GLT0 >= 0
      tmp$ = tmp$, GLT0 Using "####,###,###.##",fdel$,"",fdel$
    Else 
      tmp$ = tmp$,"",fdel$, Abs(GLT0) Using "####,###,###.##",fdel$
    End If 
  End If 
  tmp$ = tmp$, rtrim$(GLT$[21,45]),fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return 
End If
!
Print #0; Tab 1;GLT$[71,74];
Print #0; Tab 7;GLT$[4,14];
Print #0; Tab 19;M$[15,35];
Print #0; Tab 44;GLT$[2,2];
Print #0; Tab 50;GLT$[15,20];
Print #0; Tab 61;GLT$[61,62];"/";GLT$[63,64];"/";GLT$[65,66];
If M$[13,13] = "0"
  If GLT0 >= 0
    Print #0; Using "####,###,###.##"; Tab 71;GLT0;
  Else 
    Print #0; Using "####,###,###.##"; Tab 89;Abs(GLT0);
  End If 
End If 
Print #0; Tab 105;GLT$[21,45];
Print #0;" "
Return 
!
L_5800: Rem HEADINGS
Rem {begin src/inc/rtn.printmsg.i}
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,22;PCTR;" Records Printed";
!!    Print Using "   Page ####";V9[0];
!!  End If 
End If 
Rem {end rtn.printmsg.i}
L = L + 1
If L < L9 Return 
!
if J8 return
!
If L9 <> 23 Goto L_5820
If Not(V9) Goto L_5820
HEADMORE: Rem check for more
!!Print @0,23;'CL';"Press <CR>:continue  E:exit ";
!!Input Len 1;""J1$
!!Call String(1,J1$)
!!If J1$ = "E" Goto OUTEND
!!If J1$ <> "" Goto HEADMORE
!!Print 'CS';
L_5820: 
If V9 <> 0 If L9 <> 23 Print #0;"\14\";
V9 = V9 + 1
Print #0;"\15\";
Print #0;" "
Print #0;"-gl639-";
Print #0; Tab 40;"CLIENT:";C$[1,8];C$[11,50]
Print #0; Tab 40;"GENERAL LEDGER JOURNAL ENTRY BALANCE LIST";
!If JSCODE$ <> "0"
!  Print #0; Tab 110;"JS Code: ";JSCODE$[1,1];
!End If 
Print #0;""
Print #0; Tab 1;"RUN AS OF: ";D1$;
B1$ = Y9[0] Using "&&&&"
If Y9[0] = Y9[1]
  Print #0; Tab 48;"FOR THE PERIOD OF: ";B1$[3,4];"/";B1$[1,2];
Else 
  Print #0; Tab 48;B1$[3,4];"/";B1$[1,2];" THRU ";
  B1$ = Y9[1] Using "&&&&" \ Print #0;B1$[3,4];"/";B1$[1,2];
End If 
Print #0; Tab 110;"PAGE";V9
Print #0;" "
Print #0; Tab 1;"BATCH";
Print #0; Tab 8;"ACCOUNT";
Print #0; Tab 19;"ACCOUNT NAME";
Print #0; Tab 43;"JS";
Print #0; Tab 50;"REFER#";
Print #0; Tab 63;"DATE";
Print #0; Tab 82;"DEBIT";
Print #0; Tab 98;"CREDIT";
Print #0; Tab 105;"ENTRY DESCRIPTION";
Print #0;" "
Print #0;U5$[1,127]
Print #0;""
L = 7
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X3 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X3 = X$[1,5]
Return 1
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X3;D3[1] = X3;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
For K = 0 To 2
  T9[K] = 0
Next K
!!If SRCPRT
!!  Print @0,23;'CL';"Press <CR> to end "; \ Input Len 1;""J$
!!End If 
!!Goto OUTEND
!!Stop 
!
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end sectio
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
!
End 
!
!!Chain "MX000C"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End