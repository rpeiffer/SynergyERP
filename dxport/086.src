! >>> Program 086
!
! description  CONTRACT PRICE LIST
!
! loadsave -w -n 100,10 -o prog/dxport/086.dl4 src/086.src
!
! 1.0 mm/dd/yyyy change??
! 05/2011 - have to remove browser as there are so many options it will never work
!   added X flag to blockid def
!
include "src/copyright.inc" ! dx
!
External Lib "ubsfunc.dl4"
Declare External Sub getcostlevels,USERCNTRL
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 10, 2006  15:38:03
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx0/mx086.src (univ2) [txc] {00366}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! - Option Default Dialect IRIS1
Rem MX086     Contract Special Price List
Rem Author:       DD
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,String,Time,VerifyDate,FINDF
!
Com 1%,COST_LEV[3],COMM_LEV,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
Com 1%,P3,3%,UWORK[15],FIELD
If Err 0 Gosub ERR_TRAP
! COST_LEV[1]=1 
Rem {begin src/inc/dim.commcode.i}
Dim 1%,PRFAC,CMDTYBRKFLAG[100],CMDTYBASE[100],CMDTYBRKTBL[100]
Dim 2%,CMDTYMULTI[100],CMDTY3[1],CMDTYUPCHG[100]
Dim CMDTY$[36],CMDTYUPCHG$[101]
Rem {end dim.commcode.i}
Dim P$[12],A$[156],A1$[142],P60$[50],LBL$[13],F1$[16],I$[60],KCUST$[50],CNAME$[30]
Dim ITEM_LAB$[10],P9$[50],PUM$[4],CUM$[4],CCD$[14],I1$[50],L1$[20],CT$[10]
Dim 2%,C1[5],V9[4],SPMIN,SPCOM,Q0[1],DATEX ,SCDATE,ECDATE
Dim 1%,LM[1],WHLM[1],PT[35],2%,DT3[1],JSCDATE,JECDATE,SCRATCH$[80],MSGTXT$[75]
Dim 1%,CONVFLAG,RECS[8],ILEN,UNITX ,WHSEPR,UN[2],WTEDIT,RBUM[1]
Dim 2%,SPC1[5],L6[5],TYPE,RB1[5],W2[9],R[99],CFC1[12]
Dim 3%,CMODE,CUNIT,SPSLCOST,RBCOST,PF_LOAD2,L5[3],RBSLCOST
Dim 3%,X4,L7[12],ORDWT,RB5[2],CC,PP,PREC[1],COUNT,R5,SAVE_R5,FLEPTR[20,1],SPECS[50]
Dim J8$[8],QUM$[4],PMASK$[15],MSGDESC$[150],U5$[30]
Dim 1%,F,SPCUM[1],C3[2],UNT,SPBRK[1],2%,D6,RCTR,3%,J,AMOUNT,SPC4[6]
Dim 2%,X1[9],1%,WHPARC[5],a5[10],a2$[50]
Dim 3%,TEMP_REC
Dim 1%,SPWH,CONWH,RB[2],RBWH,RBL1[1]
Dim 1%,SPC6[4],APTYPE[8],ABTYPE[8],AMTYPE[8],3%,APFACT[8],AMQTY[8]
Dim 3%,SPC5[4],BASEX,PRICE,MARK,HOLD[2],URECFLAG
Dim 3%,START_CUST,LAST_CUST,PCTR
Dim K1$[50],K2$[6],K3$[6],K4$[12],K5$[12],T9$[26],Z1$[50],COST_TYPE$[200],Z2$[40]
Dim T6$[60],CHK$[60],K6$[40],3%,W3[24],2%,B[24],C4[10],CN$[20],PREVCONT$[20]
Dim 3%,PRPARC[3],WHMISC[6],CGPD$[30]
Dim HDR$[20],HDR2$[20],HDR3$[20]
Dim START_CUST$[6],LAST_CUST$[6],RETVAL$[512],PURGEVAL$[512]
Dim HOLDK1$[50],S1$[118],FS$[50],FILE$[75],T5$[50]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 2%,D8,JD8,JSTARTDATE
Dim 3%,SCONT,ECONT
Dim XX$[10],PXUM$[10],CXUM$[10]
!
dim tmp$ [1000],tmp1$[900],tmp2$[1500],tmp3$[1000],tmp4$[1000],tmp5$[1000],tmp6$[700],tmpx$[2000],TMP7$[1000]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
DEF FNR(H)=INT(ABS(H)*100+.5)*.01*SGN(H) ! "round to penny
DEF FNU(H)=INT(ABS(H)+SGN(FRA(ABS(H))))*SGN(H) ! "round up to whole #
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
coid=IntCo
For J = 2 To 15
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  if J<>9
	If J1 >= 0 Open #J,J$ \ Goto L_830
	Ropen #J,J$
  endif
L_830: Next J
Data "1936","-1808","-1792","2880","-1744","-1728","-2288","-320","-304","-1936","-1376" 
Data "-1952","-752","-1824"
call UserCntrl(userID$,A2$,A5[],ss,intCo)
call getcostlevels(e$,Cost_Lev[],IntCO,UserID$)
Comm_lev=a5[4]
! 2=SPCPRICE, 3=CUSTOMER, 4=PRODUCT, 6=PWHSE, 7=CCODES, 8=COMMCODE
!        5=CONTRACTH, 11=specialprice, 12=lastprice, 13=brktbl, 14=ptype
! 15=sslsm, 16=costgrp
j$="2/COSTGRP"+STR$(COID)
CALL FINDF(J$,CGRP)
IF CGRP
	ROPEN #16,J$
ENDIF
COST_TYPE$ = "BASE   LOAD   LAST   REBATE REDI   "
CH_CMDTY = 8
FLEPTR[1,0] = 4
FLEPTR[2,0] = 6
FLEPTR[3,0] = CH_CMDTY
FLEPTR[4,0] = 12
FLEPTR[5,0] = 11
FLEPTR[6,0] = 5
FLEPTR[7,0] = 6
FLEPTR[8,0] = 13
Gosub GET_CURRENT_DATE \ Gosub L_7800 \ D8 = X2
X2 = D8 \ Gosub YMD2JUL \ JD8 = 0
JD8 = X2
Read #1,3,172;D6;
X$ = D6 Using "&&&&&&"
Call FormatDate(X$,J8$,E) !!\ If E Gosub ERR_SEARCH
X2 = D6 \ Gosub L_7820 \ X2 = 0
If X2 Let CURJDATE = X2 Else Gosub L_7650
Read #1,3;CNAME$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,18,50;ITEM_LAB$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "-#########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let SCREEN = Spc(8)
SCREEN = 0 \ V9[3] = Chf(0)
If Err 0 Gosub ERR_TRAP
V9[3] = 58;SCRPRT = 0 \ If SCREEN Let V9[3] = 18;SCRPRT = 99
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
!

!
call dxget("I0",tmp$ ) \	PTYPE = tmp$ 
call dxget("I1",tmp$ ) \	START_SLSM = tmp$ 
call dxget("I2",tmp$ ) \	IF tmp$  = "" lET END_SLSM = 999 ELSE LET END_SLSM = tmp$ 
call dxget("I3",tmp$ ) \	SCONT = tmp$ 
call dxget("I4",tmp$ ) \	IF tmp$  = "" LET ECONT = 99999 ELSE LET ECONT = tmp$ 
call dxget("I5",K4$)	\	K4$ = Ucase$(K4$),Blank$
call dxget("I6",K5$)	\	K5$ = UCase$(K5$),EndParam$
call dxget("I7",tmp$ ) \	START_CUST = tmp$ 
call dxget("I8",tmp$ ) \	IF tmp$  = "" LET LAST_CUST = 999999 ELSE LET LAST_CUST = tmp$ 
call dxget("I9",tmp$ ) \	IF tmp$  = "" LET SCDATE = 0  ELSE LET SCDATE = tmp$ 
call dxget("I10",tmp$ ) \IF tmp$  = "" LET ECDATE = 123159 ELSE LET ECDATE = tmp$ 
call dxget("I11",tmp$ ) \IF tmp$  = "" LET WCANDATE = 0 ELSE LET WCANDATE = 1
call dxget("I12",tmp$ ) \IF tmp$  = "" LET PCUST = 0 ELSE LET PCUST = 1 
call dxget("I13",tmp$ ) \IF tmp$  = "" LET PDUP = 0 ELSE LET PDUP = 1
Call dxget("I14",tmp$ ) \IF tmp$  = "" LET SHOWFORM = 0 ELSE LET SHOWFORM = 1
!
if PTYPE = 2
  if START_SLSM < 0 or START_SLSM > 999 let e$="Invalid salesman number, must be between 0 and 999!" \ error 10000
  if END_SLSM < START_SLSM or END_SLSM > 999 Let e$ = "Invalid ending salesman number, must be between starting salesman number and 999!" \ error 10000
else
  START_SLSM = 0 
  END_SLSM = 999
end if
!
if SCONT < 0 or SCONT > 99999 let e$="Invalid starting contract number, must be between 0 and 99999!" \ error 10000
if ECONT < SCONT or ECONT > 99999 Let e$ = "Invalid ending contract number, must be between starting contract number and 99999!" \ error 10000
K2$ = SCONT Using "C#####"
K3$ = ECONT Using "C#####"
!
if K5$ < K4$ let e$="Invalid ending product code, must be >= starting product code!" \ error 10000
!
if START_CUST < 0 or START_CUST > 999999 let e$="Invalid starting customer code, must be between 0 and 999999!" \ error 10000
if LAST_CUST < START_CUST or LAST_CUST > 999999 Let e$ = "Invalid ending customer code, must be between starting customer code and 999999!" \ error 10000
!
if scdate
	X$ = SCDATE Using "&&&&&&"
	tmp1$ = X$[5,6],X$[1,2],X$[3,4]
	X$ = tmp1$ \SCDATE = X$
	X2 = SCDATE
	Gosub L_7700
	Call VerifyDate(X$,X$,E) \ If E let e$="Invalid starting date!" \ error 10000
	X2 = X$[1,6]
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E) 
	if E or X2 = 0 let JSCDATE = -1 else let JSCDATE = X$[1,5]
	If JSCDATE < 0 let e$ = "Invalid starting date!" \ error 10000 
else
	jscdate=0
endif
!
X$ = ECDATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \ECDATE = X$
X2 = ECDATE
Gosub L_7700
Call VerifyDate(X$,X$,E) \ If E Let e$="Invalid ending date!" \ error 10000
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 Let JECDATE = -1 else let JECDATE = X$[1,5]
If jscdate and JECDATE < JSCDATE let e$ = "Invalid ending date, must >= starting date!" \ error 10000
!
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$  = bsdel$,"086",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$ )
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
 
!
IF J8 
  tmp$  =  "CONTRACT ITEM NO.",fdel$
  if PCUST
    tmp$ = tmp$, "CUSTOMER CODE", fdel$
    tmp$ = tmp$ ,"CUSTOMER",fdel$
  end if
  IF PTYPE = 2 LET tmp$  = tmp$ ,"SLSM CODE",fdel$,"SLSM NAME",fdel$
  tmp$  = tmp$ ,"ITEM CODE",fdel$
  tmp$  = tmp$ ,"DESCRIPTION 1",fdel$
  tmp$  = tmp$ ,"DESCRIPTION 2",fdel$
  tmp$  = tmp$ ,"START",fdel$
  tmp$  = tmp$ ,"CANCEL DATE",fdel$
  tmp$  = tmp$ ,"FACTOR",fdel$
  tmp$  = tmp$ ,"FACTOR TYPE",fdel$ !(PRICE TYPE)
  tmp$  = tmp$ ,"PRICE U/M",fdel$
  tmp$  = tmp$ ,"COST TYPE",fdel$   !(BASE TYPE)
  If cost_lev[1]>0 If SHOWFORM = 1
    tmp$  = tmp$ ,"SLSM COST",fdel$  
	tmp$=tmp$,"SLSM COST TYPE",fdel$ !(COST TYPE)
    tmp$  = tmp$ ,"CST U/M",fdel$
  end if
  tmp$  = tmp$ ,"MIN/MAX QTY",fdel$
  If P60$[12,12] = "Y" 
	tmp$  = tmp$ ,"BREAK TABLE",fdel$
	tmp$  = tmp$ ,"PRICE",fdel$
  end if
  tmp$  = tmp$ ,"COMM",fdel$
  tmp$  = tmp$ ,"QTY",fdel$
  If SHOWFORM = 1 Let  tmp$  = tmp$ ,"GTM",fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
END IF
!
START_SORT: Rem "======================================== start sort
!
K1$ = " ",K1$;K1$ = K2$;T6$ = " "
If PTYPE = 1 Goto MAIN
J5$ = " ",J5$
do ! clear the sort file
 Search #9,3,1;J5$,R1,E
 If E exit do
 Search #9,5,1;J5$,R1,E
loop
! " thru spcprice
L_1050: Search #2,3,1;K1$,R2,E
If E  Goto MAIN
ALLPROD = 0;COMDY = 0;SIZE_ = 0;Grp=0
If K1$[1,6] > K3$[1,6] Goto MAIN ! L_1900
If K1$[7,7] = "*" Or K1$[7,7] = "#" Or K1$[7,7] = "&" Or K1$[7,7]="-" Goto L_1140
If K1$[7,18] < K4$ Goto L_1050
If K1$[7,18] > K5$ Let K1$[7,18] = "zzzzzzzzzzzz" \ Goto L_1050
L_1140: Rem"read sp
Mat Read #2,R2,12;SPC1;
X2 = SPC1[4] \ Gosub L_7820 \ X2 = 0
JDATE = X2
If WCANDATE And SPC1[4] = 0 Goto L_1200
If Not(WCANDATE) And SPC1[4] = 0 Goto L_1050
If JDATE < JSCDATE Or JDATE > JECDATE Goto L_1050
L_1200: T5$[1,6] = K1$;T5$[7] = "";CUST_CODE = 0
L_1250: Search #5,3,3;T5$,R5,E
If E Goto L_1900
If T5$[1,6] <> K1$[1,6] Goto L_1900
CUST_CODE = T5$[7,12]
If CUST_CODE < START_CUST Goto L_1250
If CUST_CODE > LAST_CUST Goto L_1250
Gosub GET_CUSTOMER
If A1$[31,47] = "*** NOT FOUND ***" Goto L_1250
If CFC1[2] < START_SLSM Goto L_1250
If CFC1[2] > END_SLSM Goto L_1250
J5$[1,3] = CFC1[2] Using "###"
J5$[4] = K1$
Search #9,4,1;J5$,R2,E \If E > 1 Goto L_1250
Goto L_1250
L_1900: Goto L_1050
!
!
MAIN: Rem "======================================== start print
If PTYPE = 2
  CH = 9 \ K1$ = " ",K1$ \ HOLDK1$ = " ",HOLDK1$ \ T6$ = " "
Else 
  CH = 2
  K1$ = " ",K1$;K1$ = K2$;T6$ = " "
End If 
if not(j8) If V9[0] Print #0;"\14\";
V9[0] = 0 \ V9[1] = 90 \ RCTR = 0
GET_NEXT_SPCPRICE_REC:
Search #CH,3,1;K1$,R[2],E
If E  Goto OUTEND
ALLPROD = 0;COMDY = 0;SIZE_ = 0;SPSLCOST=0;Grp=0
If PTYPE = 2
  If K1$[4,9] > K3$[1,6] Goto GET_NEXT_SPCPRICE_REC
  If K1$[10,21] < K4$ Goto GET_NEXT_SPCPRICE_REC
  If K1$[10,21] > K5$ Let K1$[10,21] = "zzzzzzzzzzzz" \Goto GET_NEXT_SPCPRICE_REC
  If K1$[10,10] = "#" Let ALLPROD = 99
  If K1$[10,10] = "*" Let COMDY = 99
  If K1$[10,10] = "&" Let SIZE_ = 99
  If K1$[10,10]="-" let GRP=99
Else 
  If K1$[1,6] > K3$[1,6] Goto OUTEND
  If K1$[7,18] < K4$ Goto GET_NEXT_SPCPRICE_REC
  If K1$[7,18] > K5$ Let K1$[7,18] = "zzzzzzzzzzzz" \ Goto GET_NEXT_SPCPRICE_REC
  If K1$[7,7] = "#" Let ALLPROD = 99
  If K1$[7,7] = "*" Let COMDY = 99
  If K1$[7,7] = "&" Let SIZE_ = 99
  If K1$[7,7]="-" let GRP=99
End If !"ptype
FLG = 0 \ If ALLPROD Or COMDY Or SIZE_ or GRP Let FLG = 1;SPSLCOST = 0
Read #2,R[2],0;P$;
Mat Read #2,R[2],12;C1;
X2 = C1[2] \ Gosub YMD2JUL \ JSTARTDATE = 0
JSTARTDATE = X2
X2 = C1[4] \ Gosub L_7820 \ X2 = 0
JDATE = X2
If WCANDATE And C1[4] = 0 Goto READ_SP
If JDATE < JSCDATE Or JDATE > JECDATE Goto GET_NEXT_SPCPRICE_REC
READ_SP: Rem
Mat Read #2,R[2],36;SPCUM
Read #2,R[2],118;SPWH
Mat Read #2,R[2],40;C3 \ P3 = C3
Mat Read #2,R[2],46;SPC4
Mat Read #2,R[2],126;SPBRK
Read #2,R[2],130;SPMIN
Read #2,R[2],134;SPCOM
Mat Read #2,R[2],138;SPC5;
mat read #2,r[2],168;spc6;
mat read #2,r[2],178;aptype;
mat read #2,r[2],196;abtype;
mat read #2,r[2],214;amtype;
mat read #2,r[2],232;apfact;
mat read #2,r[2],286;amqty;
If SPC1[5] = 2 And C3[0] = 3 And Not(SPCUM[0]) Let SPCUM[0] = 5
If SPC1[5] = 2 And C3[0] = 3 And Not(SPCUM[1]) Let SPCUM[1] = 4
Gosub GET_PRODUCT
If PTYPE = 2
  SALESMAN_CODE = K1$[1,3]
  Gosub GET_SALESMAN
  If K1$[1,3] <> HOLDK1$[1,3]
	V9[1] = 99
	Gosub PRINT_SALESHEADING
  End If 
End If 
If PTYPE = 2
  If K1$[1,9] <> T6$[1,9] Gosub PRINT_CUSTOMERS
Else 
  If K1$[1,6] <> T6$[1,6] Gosub PRINT_CUSTOMERS
End If 
If Not(RIGHTCUST) And START_CUST <> 0 And LAST_CUST <> 999999 Goto GET_NEXT_SPCPRICE_REC
UNT = SPCUM[0] \ Gosub GET_UM \ If FLG Let PXUM$ = "PRICE" Else Let PUM$ = X$
UNT = SPCUM[1] \ Gosub GET_UM \ If FLG Let CXUM$ = "COST" Else Let CUM$ = X$
HOLD[1] = SPC5[1];HOLD[2] = SPC5[2]
HOLD = SPC5[0]
If Not(FLG) And RIGHTCUST Gosub CALL_PRICE
If C3[2] Let UNT = C3[2] \ Gosub GET_UM \ QUM$ = X$
If C3 <> 3 Goto L_2190
CNVTU[0] = 0 \ CNVTU[1] = SPCUM[0] \ CNVTU[2] = 2
CNVTA = SPC5[0] \ Gosub UNIT_CONVERT \ SPC5[0] = FNP(AMOUNT)
L_2190: CNVTU[0] = 0 \ CNVTU[1] = SPCUM[1] \ CNVTU[2] = 2
CNVTA = SPC5[2] \ Gosub UNIT_CONVERT \ SPC5[2] = FNP(AMOUNT)
CNVTU[0] = 0 \ CNVTU[1] = SPCUM[1] \ CNVTU[2] = 2
If SPC5[3] = 3 Let CNVTA = SPC5[1] \ Gosub UNIT_CONVERT \ SPC5[1] = FNP(AMOUNT)
X$ = C1[2] Using "&&&&&&"
Call FormatDate(X$,X$,E) !!\ If E Gosub ERR_SEARCH
If V9[1] > V9[3]
  If PTYPE = 2 Gosub PRINT_SALESHEADING Else Gosub PRINT_HEADING 
End If 
!
If Not(SCRPRT) let PCTR = PCTR + 1 
DUPE = 0 \ Gosub CHK_FOR_DUPLICATE
Gosub PRINT_LINE !!possible for whit n in PRINT_CONTR_AND_CUST
If PTYPE = 2 Let HOLDK1$ = K1$
Goto GET_NEXT_SPCPRICE_REC
!
PRINT_CUSTOMERS: Rem "============================ print customers on contract
!
RIGHTCUST = 0
If PTYPE = 2
  T6$[1,6] = K1$[4,9];T6$[7] = "";CUST_CODE = 0
Else 
  T6$[1,6] = K1$;T6$[7] = "";CUST_CODE = 0
End If 
Search #5,2,1;T6$,R5,E
If E Goto END_PRINT_CUSTOMERS ! contract not found in contracth?
MAT  READ #5,R5,18;CN$
prevcont$=t6$
FIRSTPASS = 1
CUST_SEARCH: 
Search #5,3,3;T6$,R5,E
If E Goto END_PRINT_CUSTOMERS
If PTYPE = 2
  If T6$[1,6] <> K1$[4,9]
    If Not(FIRSTPASS)
      Goto END_PRINT_CUSTOMERS
    Else 
      T6$[1,6] = K1$[4,9];T6$[7] = ""
    End If 
  End If 
Else 
  If T6$[1,6] <> K1$[1,6]
    If Not(FIRSTPASS)
      Goto END_PRINT_CUSTOMERS
    Else 
      ! T6$[1,6] = K1$;T6$[7] = ""
    End If 
  End If 
End If 
CUST_CODE = T6$[7,12]
If CUST_CODE < START_CUST Goto CUST_SEARCH
If CUST_CODE > LAST_CUST Goto END_PRINT_CUSTOMERS
Gosub GET_CUSTOMER
If PTYPE = 2
  SLSMNUM = K1$[1,3]
  If SLSMNUM <> CFC1[2] Goto CUST_SEARCH
End If 
If V9[1] + 5 > V9[3]
  If PTYPE = 2 Gosub PRINT_SALESHEADING Else Gosub PRINT_HEADING 
End If 
RIGHTCUST = 1
Gosub PRINT_CONTR_AND_CUST
FIRSTPASS = 0 \ If Not(PCUST) Goto END_PRINT_CUSTOMERS
Goto CUST_SEARCH
!
END_PRINT_CUSTOMERS: 
  If PType=2
  T6$ = K1$
  Else
	t6$=k1$;t6$[7,12]=cust_code using "######"
  Endif
Return
!
GET_CUSTOMER: Rem "==================================== get customer
J2$ = " ",J2$ \ J2$ = CUST_CODE Using "######"
A1$[31] = "*** NOT FOUND ***"
CFC1[1] = 0 \CFC1[2] = 0 \CFC1[7] = 0
Search #3,2,1;J2$,R3,E
If E  Return
Mat Read #3,R3;A1$;
Mat Read #3,R3,142;CFC1;
Return
!
GET_SALESMAN: Rem "==================================== get salesman
J2$ = " ",J2$ \ J2$ = SALESMAN_CODE Using "### "
S1$[1] = "*** NOT FOUND ***"
Search #15,2,1;J2$,R15,E
If E Return
Mat Read #15,R15;S1$;
Return
!
CHK_FOR_DUPLICATE: Rem CHECK FOR DUPE IN SPCPRICE
If Not(PDUP) Return 
J4$ = " ",J4$;J4$[1,6] = C1[0] Using "C#####"
L_3210: Search #5,3,3;J4$,R9,E \ If E Return 
X2 = J4$[2,6] \ If X2 <> C1[0] Return 
If PTYPE = 2
  CHK$ = K1$[4];CHK$[1,6] = J4$[7,12];CHK$[19] = ""
Else 
  CHK$ = K1$;CHK$[1,6] = J4$[7,12];CHK$[19] = ""
End If 
Search #2,2,1;CHK$,R6,E
If Not(E) Let DUPE = 99
Goto L_3210
!
GET_PRODUCT: Rem "================================================== get product
A$ = " ",A$
If ALLPROD Let A$[9] = "-- ALL PRODUCTS -- " \ Return 
If COMDY Goto READ_COMMODITY
If SIZE_ Goto READ_SIZE
IF GRP GOTO READ_CGRP
J2$ = " ",J2$ \ J2$ = P$
A$[9] = "*** NOT FOUND ***"
Search #4,2,1;J2$,R4,E 
If E  Let FLG = 1 \Return
FLEPTR[1,1] = R4
WHSE = 0;R[4]=R4
Mat Read #4,R4;A$;
Mat Read #4,R4,156;B;
Mat Read #4,R4,256;A;
Mat Read #4,R4,512;PFU1; \ UN[1] = PFU1[12];UN[2] = PFU1[11]
Mat Read #4,R4,620;LM; \ PREC[0] = R4
Mat Read #4,R4,596;PRPARC;
Mat Read #4,R4,554;PFU2;
Mat Read #4,R4,894;C4;
Mat Read #4,R4,938;PF_LOAD2;
If P9$[32,32] = "Y" Let WHSEPR = 1 Else Let WHSEPR = 0
Gosub GET_PRODWHSE
If WHSEPR Gosub SET_WHSE_DATA
If WHSEPR Let L5[1] = W3[17] Else Let L5[1] = B[8]
Return 
!
READ_COMMODITY: Rem READ COMDY
If Not(COMDY) Return 
J2$ = " ",J2$ \ J2$ = P$
A$[9] = "*** COMDY NOT ON FILE "
Search #CH_CMDTY,2,1;J2$,R4,E
If E Return 
FLEPTR[3,1] = R4
REC_CMDTY = R4
Mat Read #CH_CMDTY,REC_CMDTY,0;CMDTY$;
A$[9] = CMDTY$[1,16]
Return 
!
READ_SIZE: Rem READ SIZE
If Not(SIZE_) Return 
UNT = P$[6,9]
Read #7,UNT;CCD$;
A$[9] = CCD$[1,10]
Return 
!
read_cgrp: ! cost group
if not(grp) or cgrp=0 return
j2$=" ",j2$;j2$=p$
let a$[9]="** COST GRP NOT ON FILE "
SEARCH #16,2,1;J2$,R16,E \ IF E RETURN
MAT READ #16,R16,12;CGPD$;
LET A$[9]=CGPD$
LET A$[63,92]="COST GROUP PRICE"
RETURN

GET_PRODWHSE: Rem GET PRODWHSE
K6$ = " ",K6$;K6$ = A$[140,151];WHSE = SPWH
FLEPTR[2,1] = 0
If WHSE <= 0 If WHSEPR Let WHSE = CONWH
If WHSE <= 0 If Not(WHSEPR) Let WHSE = 1
K6$[13,14] = WHSE Using "##"
Search #6,2,1;K6$,R6,E 
If E Goto NOT_FOUND
FLEPTR[2,1] = R6
R[6]=r6
Mat Read #6,R6,78;W3;
Mat Read #6,R6,384;WHPARC;
Mat Read #6,R6,38;W2;
Mat Read #6,R6,842;WHLM;
Mat Read #6,R6,800;WHMISC;
Return 
NOT_FOUND: 
For I = 0 To 24
  W3[I] = 0 \ If I <= 9 Let W2[I] = 0
Next I
WHSE = 0
Return
!
CLEAR_CONTRACT_HEADER: Rem first look if there are any records left in 2/spcprice#
HDR$ = " ",HDR$ \ COUNT = 0
HDR$[1,6] = PREVCONT$[1,6]
LOOK_FOR_SPCPRICE_REC: Rem
Search #2,3,1;HDR$,V2,E
If E  Goto END_LOOK_FOR_SPCPRICE_REC
If HDR$[1,6] = PREVCONT$[1,6] Let COUNT = COUNT + 1 \ Goto END_LOOK_FOR_SPCPRICE_REC
If HDR$[1,6] > PREVCONT$[1,6] Goto END_LOOK_FOR_SPCPRICE_REC
Goto LOOK_FOR_SPCPRICE_REC
END_LOOK_FOR_SPCPRICE_REC: Rem
If Not(COUNT) ! only delete contracth records if no items were found in spcprice
CLEAR_KEYS: 
  HDR$ = " ",HDR$
  HDR$[1,6] = PREVCONT$[1,6]
  Search #5,2,1;HDR$,SAVE_R5,E
  Search #5,5,1;HDR$,SAVE_R5,E
  HDR3$ = " ",HDR3$
  HDR3$[1,6] = HDR$[1,6]
GET_DIR2AND3: 
  Search #5,3,3;HDR3$,R5,E
  If E  Goto NO_MORE_KEYS
  If HDR3$[1,6] = PREVCONT$[1,6]
    Search #5,5,3;HDR3$,R5,E
    HDR2$ = " ",HDR2$
    HDR2$[1,6] = HDR3$[7,12]
    HDR2$[7,12] = HDR3$[1,6]
    Search #5,5,2;HDR2$,R5,E
    Goto GET_DIR2AND3
  End If 
NO_MORE_KEYS: 
  E = 3
  Search #5,1,0;HDR$,SAVE_R5,E
END_CLEAR_KEYS: 
  HDR2$ = " ",HDR2$
  HDR2$[1,6] = PREVCONT$[1,6]
  HDR2$[7] = "ALL   "
  Call "delcustcont",HDR2$
End If 
END_CLEAR_CONTRACT_HEADER: 
Return 
!
!
PRINT_LINE: Rem "================================================== detail line
!
iF NOT(j8)
  Print #0; Using "######";C1[0];
  If DUPE Print #0; Tab 8;" ** DUPLICATE **";
  If Not(FLG) Print #0; Tab 26;P$[1,12]; \ Goto L_5035
  If ALLPROD Print #0; Tab 26;"ALL PRODUCTS";
  If COMDY Print #0; Tab 26;"*COMDY ";P$[1,4];" ";
  If SIZE_ Print #0; Tab 26;"*SIZE ";P$[1,4];"  ";
  IF GRP PRINT #0; TAB 26;"-";P$[1,11];
ELSE
  tmp2$ = C1[0] Using "######",fdel$	!! contract item no.
  if PCUST  
    tmp2$ = tmp2$ , CUST_CODE, fdel$  !cust #
    tmp2$ = tmp2$ , rtrim$(A1$[31,60]),fdel$ !!customer name
  end if
  IF PTYPE = 2 LET tmp2$ = tmp2$,k1$[1,3],fdel$,rtrim$(S1$[1,30]),fdel$ !!slsm code ^ slsm name
  tmp1$=""
  If DUPE LET tmp1$ =  "** DUPLICATE ** " !!
  If Not(FLG) LET tmp1$ = tmp1$, rtrim$(P$[1,12]),fdel$ \goto L_5035  !!item code
  If ALLPROD LET tmp1$ =  tmp1$,"ALL PRODUCTS"
  If COMDY LET tmp1$ =  tmp1$,"*COMDY ",P$[1,4]," "
  If SIZE_ LET tmp1$ =  tmp1$,"*SIZE ",P$[1,4]," "
  if GRP LET TMP1$=TMP1$,"-",P$[1,11]
  tmp1$=rtrim$(tmp1$),fdel$
END IF	
!
L_5035:
!
If not(J8)
  !
  Print #0; Tab 39;A$[9,36];!!description!!
  If C1[2] Print #0; Tab 69;X$[1,8]; Else Print #0; Tab 71;"NONE"; !start
  If C3[0] = 3 Or C3[0] = 7
    Print #0; Using PMASK$; Tab 79;SPC5[0]; !factor
  Else 
    If C3[0] = 8
      Print #0; Using "$$$#.###"; Tab 79;SPC5[0];!!factor
    Else 
      Print #0; Using "###.###%"; Tab 79;SPC5[0]; !factor
    End If 
  End If 
  If FLG Print #0; Tab 93;PXUM$; Else Print #0; Tab 93;PUM$; !price um
  If COST_LEV[1] > 0 If SHOWFORM = 1
    Print #0; Using PMask$; Tab 98;SPSLCOST;!!smls cost
    if FLG 
		Print #0; Tab 117;CXUM$;
	Else
		Print #0; Tab 117;CUM$;!!cst u/m
	Endif
  End If 
  !Print #0; Using "######.#"; Tab 124;SPC4[0]; !min/max
  x$=QUM$ \   if FLG let X$="QTY"
  if spc6[1]=2 let X$="LBS"
  PRINT #0; USING "######"; TAB 120;SPC4[0];" ";x$;
  Print #0;"" \ V9[1] = V9[1] + 1
  Print #0; Tab 39;A$[63,90]; !line 2,   desc 2
  If C1[4]
    X$ = C1[4] Using "&&&&&&"
    Call FormatDate(X$,X$,E) !!\ If E Gosub ERR_SEARCH
  End If 
  If C1[4] Print #0; Tab 69;X$[1,8]; Else Print #0; Tab 71;"NONE"; !cancel
  if cost_lev[1]>0 if showform=1
   !tab 100,line 2  optional detail if cost_lev[1]>=2 otherwise less detail  slsm cost type
   If COST_LEV[1] >= 2 
    If SPC5[3] = 4 If RBSLCOST 
     Gosub PRINT_STDCOST_AND_REBATE !tab 100,line2  slsm cost is std and there is a rebate
    else
	 If SPC5[3] = 4 Print #0; Tab 100;"STANDARD";
     If SPC5[3] = 1 If SPC5[1] >= 0 Print #0; Using " ###.##% MARKUP"; Tab 100;SPC5[1];
     If SPC5[3] = 1 If SPC5[1] < 0 Print #0; Using "###.##%  DISC"; Tab 100;SPC5[1];
     If SPC5[3] = 2 If SPC5[1] < 0 Print #0; Using "$$#.##  DISC $"; Tab 100;SPC5[1];
     If SPC5[3] = 2 If SPC5[1] >= 0 Print #0; Using "$$#.## MARKUP"; Tab 100;SPC5[1];
     If SPC5[3] = 3 Print #0; Using PMASK$; Tab 100;SPC5[1];
    end if !spc5[3]
   else !lev not >=2
    If SPC5[3] = 4 If RBSLCOST = 0 Print #0; Tab 100;"STANDARD"; 
    If SPC5[3] = 4 If RBSLCOST > 0 Print #0; Tab 100;"SPECIAL"; 
    If SPC5[3] <> 4 Print #0; Tab 100;"SPECIAL"; 
   end if !lev >=2
  end if !lev>0 showform=1
  Print #0;"" \ V9[1] = V9[1] + 1 !start 3rd line
  !
  Gosub PRICE_TYPE !line 3,tab 78  price/factor type
  Gosub PRINT_BASE_TYPE !line 3,tab 90 base type
  !tab 100,line 3 optional if cost_lev[1] >=2 slsmn cost type (goes with tab 100,line 2 above)
  If COST_LEV[1] >= 2 and SHOWFORM = 1 
   If SPC5[3] = 4 If RBSLCOST 
    Gosub PRINT_COST_TYPE 
   Else If SPC5[3] < 3
     If SPC5[4] = 1 Print #0; Tab 100;" OF BASE COST ";
     If SPC5[4] = 2 Print #0; Tab 100;" OF LOADED COST ";
     If SPC5[4] = 3 Print #0; Tab 100;" OF LAST COST ";
     If SPC5[4] = 4 Print #0; Tab 100;" OF REBATE COST ";
     If SPC5[4] = 5 Print #0; Tab 100;" OF REDI COST ";
	 IF SPC5[4]=6 print #0; tab 100;" OF NETPO COST ";
   Else If SPC5[3] = 5 
     Print #0; Tab 100;" FREE GOODS     ";
   Else If SPC5[3] = 3 
     Print #0; Tab 100;" FLAT COST      ";
   end if !spc5[3]
  end if !showform
ELSE !J8
  tmp2$ = tmp2$, tmp1$
  tmp2$ = tmp2$, rtrim$(A$[9,36]),fdel$   !! description 1
  tmp2$ = tmp2$, rtrim$(A$[63,90]),fdel$  !! description 2
  If C1[2] Let tmp2$ = tmp2$, X$[1,8],fdel$ Else Let tmp2$ = tmp2$, "NONE",fdel$ !start
  If C1[4]
    X$ = C1[4] Using "&&&&&&"
    Call FormatDate(X$,X$,E) !!\ If E Gosub ERR_SEARCH
  End If 
  If C1[4] Let tmp2$ = tmp2$, X$[1,8],fdel$ Else Let tmp2$ = tmp2$, "NONE",fdel$ !cancel
  If C3[0] = 3 Or C3[0] = 7
    tmp2$ = tmp2$, SPC5[0] Using PMASK$,fdel$ !factor
  Else 
    If C3[0] = 8
      tmp2$ = tmp2$, SPC5[0] Using "$$$#.###",fdel$ !factor
    Else 
      tmp2$ = tmp2$, SPC5[0] Using "###.###%",fdel$ !factor
    End If 
  End If 
  Gosub PRICE_TYPE !!tmp$  // factor type
  If FLG Let tmp6$ = PXUM$,fdel$ else Let tmp6$ = PUM$,fdel$ !!price um unit's
  tmp2$ = tmp2$,tmp$,tmp6$  !+ factor type and price um
  Gosub PRINT_BASE_TYPE !!tmp$ base (cost) type
  tmp2$ = tmp2$,tmp$
  !
  tmp3$=""
  If COST_LEV[1] > 0 If SHOWFORM = 1
   Let tmp3$ = SPSLCOST Using "#####.##",fdel$  !slsmn cost
  !slsmn cost type *-+  !tab 100,line 2 & 3 optional if cost_lev[1]>=2  slsm cost type
   If COST_LEV[1] >= 2 
    If SPC5[3] = 4 If RBSLCOST 
     Gosub PRINT_STDCOST_AND_REBATE  !tab 100,line2  slsm cost is std and there is a rebate  concacts to tmp3$
	 Gosub PRINT_COST_TYPE !concacts to tmp3$
    else
	 If SPC5[3] = 4 Let tmp3$ = tmp3$,"STANDARD"
     If SPC5[3] = 1 If SPC5[1] >= 0 Let tmp3$ =  tmp3$,SPC5[1] Using "###.##%","MARKUP"
     If SPC5[3] = 1 If SPC5[1] < 0 Let tmp3$ =  tmp3$,SPC5[1] Using "###.##%","DISC"
     If SPC5[3] = 2 If SPC5[1] < 0 Let tmp3$ =  tmp3$,SPC5[1] Using "$$#.##","DISC $"
     If SPC5[3] = 2 If SPC5[1] >= 0 Let tmp3$ =  tmp3$,SPC5[1] Using "$$#.##","MARKUP"
     If SPC5[3] = 3  Let tmp3$ =  tmp3$,SPC5[1] Using PMASK$
	 If  SPC5[3] < 3
      If SPC5[4] = 1 let tmp3$  = tmp3$, " OF BASE COST"
      If SPC5[4] = 2 let tmp3$  = tmp3$, " OF LOADED COST"
      If SPC5[4] = 3 let tmp3$  = tmp3$, " OF LAST COST"
      If SPC5[4] = 4 let tmp3$  = tmp3$, " OF REBATE COST"
      If SPC5[4] = 5 let tmp3$  = tmp3$, " OF REDI COST"
	  if spc5[4] = 6 let tmp3$=tmp3$," OF NETPO COST"
     Else If SPC5[3] = 5 
      let tmp3$  = tmp3$, " FREE GOODS"
     Else If SPC5[3] = 3 
      let tmp3$  = tmp3$, " FLAT COST"
     end if !spc5[3]
    end if !spc5[3]
   else !lev not >=2
    If SPC5[3] = 4 If RBSLCOST = 0 Let tmp3$ =  tmp3$, "STANDARD" 
    If SPC5[3] = 4 If RBSLCOST > 0 Let tmp3$ =  tmp3$, "SPECIAL"
    If SPC5[3] <> 4 Let tmp3$ = tmp3$, "SPECIAL"
   end if	!lev >=2
   !
   if cmdy or grp
	Let tmp3$ = tmp3$,fdel$, CXUM$,fdel$  !end cost type field, plus cst um
   Else
	Let tmp3$ = tmp3$,fdel$, CUM$,fdel$  !end cost type field, plus cst um
   Endif
  End If !showform
  !
  tmp3$ = tmp3$, SPC4[0] Using "######.#",fdel$ !min/max
  !
  !
END IF !j8
! 
!
if j8 
  If SPCOM let tmp4$ = SPCOM Using "###.##%",fdel$ Else let tmp4$ = "std",fdel$
  tmp4$ = tmp4$ , SPC4[1] Using "######.#",fdel$ 
else !not j8
  If SPCOM Print #0; Using "###.##"; Tab 117;SPCOM;"%"; Else Print #0; Tab 118;"std";
  Print #0; Using "######"; Tab 124;SPC4[1] \ V9[1] = V9[1] + 1
end if
! 
!
If P60$[12,12] <> "Y"
 GTM = 0
 let tmp5$ = "" !none
else
 Gosub GET_BREAK_TYPE !! read data
 if j8 
  tmp5$ = SPBRK[0] Using "## ", rtrim$(LBL$),fdel$  !break table #,lbl one field
 else
  Print #0; Using "BREAK TABLE ##"; Tab 63;SPBRK[0];
  Print #0; Tab 79;LBL$;
 end if !j8
end if !p60$
 !
 If Not(FLG) If C3[0] > 0 If C3[0] < 3
  Rem ===== single item print markup or calc'd price
  !
  X2 = C1[4] \ Gosub L_7820 \ X2 = 0
  JDATE = X2
  if j8 
   If C1[4] If JDATE < CURJDATE 
    let tmp5$ = tmp5$ , "EXPIRED",fdel$ 
   else
    If PRICE > 0 let tmp5$ = tmp5$ ,PRICE Using "-----#.###",fdel$ else tmp5$=tmp5$,"NOT AVL",fdel$ !+ single item price
   end if
  else !not j8
   Print #0; Tab 82;"PRICE=";
   If C1[4] If JDATE < CURJDATE 
    Print #0; Tab 88;"EXPIRED";
   else 
    If PRICE > 0 Print #0; Using PMask$; Tab 87;PRICE; else Print #0; Tab 90;"NOT AVL";
   end if
  end if !j8
 else
  tmp5$=tmp5$,fdel$ !blank field
 end if !single item
 !
 !
 if not(j8) if C3[0]<>3 Print #0;""  \V9[1] = V9[1] + 1
 CNVTU[1] = 0;CNVTU[2] = 2;CNVTU[0] = SPCUM[1];CNVTA = SPSLCOST \ Gosub L_20000 \ CC = AMOUNT
 CNVTU[0] = SPCUM[0];CNVTA = PRICE \ Gosub L_20000 \ PP = AMOUNT
 If PP  Let GTM = (PP - CC) / PP \ GTM = GTM * 100
 If PP = 0 Let GTM = 0

!
!!!!!done
!!!!!
if j8 
  If SHOWFORM = 1 Let tmp4$ = tmp4$, GTM Using "-###.##%",fdel$  !GTM
  tmpx$ = tmp2$,tmp3$,tmp5$,tmp4$ !tmp2(up to costtype) + tmp3(3 optional SHOWFORM plus min/max) + tmp5 (optional break table,price) + tmp4 (spcom,spc4[1]optional GTM)
  Call addtostr(e$,rstr$,tmpx$+rdel$)
  Return
end if
If SHOWFORM = 1 Print #0; Using "-###.##%"; Tab 117;"GTM = ";GTM Else Print #0;""
If not(j8)
	Gosub addlprcs ! print level 2-10
Endif
Print #0;"" \ V9[1] = V9[1] + 2
RCTR = RCTR + 1
Return 
!
Addlprcs: ! print price 2-10 if loaded
For Plvl=0 to 8
  If APType[plvl]<1 or APType[plvl]>8 goto A_5290:
	! to save major coding - use normal vars
    C3[0]=APTYPE[PLVL];C3[1]=ABTYPE[PLVL]
	SPC5[0]=APFACT[PLVL]
    SPC6[1]=AMTYPE[PLVL];SPC4[0]=AMQTY[PLVL]
	fleptr[1,1]=r[4] ! set up for price call
	fleptr[2,1]=r[6] !  set up for price call
	LET HOLD[1]=SPC5[1];HOLD[2]=SPC5[2] ! "need base on these
	LET HOLD=SPC5[0] ! "retain @ base
	! IF NOT FLG GOSUB get_special_price: !"rebate costing / special pricing
	if not(flg) and rightcust then gosub call_price:
	IF C3=3 ! flat price - convert it
		LET CNVTU[0]=0 \ LET CNVTU[1]=SPCUM[0] \ LET CNVTU[2]=2
		LET CNVTA=SPC5[0] \ GOSUB unit_convert: \ LET SPC5[0]=FNP(AMOUNT) ! "price to cost um
	Endif
	Print #0; Tab 65;"PRICE # ";plvl+2;
	IF C3[0]=3 or c3[0]=7
    	PRINT #0; USING PMASK$; TAB 79;SPC5[0];                                 
	else 
    	if c3[0]=8 
        	print #0; using "$$$#.###"; tab 79;spc5[0];                         
    	else
        	PRINT #0; USING "###.###%"; TAB 79;SPC5[0];                         
    	endif
	endif
	if FLG ! non-prod
    	PRINT #0; TAB 93;PXUM$; ! "pricing um
	else
    	PRINT #0; TAB 93;PUM$; ! "pricing um
	endif
	!if showform=1
!   		IF COST_LEV[1]>0 PRINT #0; USING "#####.##"; TAB 101;SPSLCOST; !slsm cost
!   		IF COST_LEV[1]>0 PRINT #0; TAB 119;CUM$;
	! endif
	! PRINT #0; USING "######"; TAB 124;SPC4[0];
	x$=QUM$ \ 	if FLG let x$="QTY"
	if spc6[1]=2 let X$="LBS"
	PRINT #0; USING "######"; TAB 120;SPC4[0];" ";x$;
	PRINT #0;"" \ LET V9[1]=V9[1]+1
	GOSUB price_type:
	IF C3[0]=1 OR C3[0]=2 or c3[0]=8 GOSUB print_base_type:
	IF COST_LEV[1]<2 OR SHOWFORM=0 GOTO A_5185: ! "do not show formulas
	A_5185: print #0;"" \ v9[1]=v9[1]+1
	IF NOT(FLG) IF C3[0]>0 IF C3[0]<4 GOTO A_single_item:
	IF P60$[12,12]<>"Y" then gtm=0 \ GOTO A_5292:
	GOTO A_5285:

	A_single_item: ! 
	IF C3[0]=3 GOTO A_5287: ! "fixed
	! Print #0;SPECS[17];SPECS[23]; ! for testing
	PRINT #0; TAB 82;"PRICE=";
	LET X2=C1[4] \ GOSUB L_7820: \ LET X2=0
	LET JDATE=X2
	IF C1[4] IF JDATE<CURJDATE PRINT #0; TAB 88;"EXPIRED"; \ GOTO A_5260:
	IF PRICE>0 PRINT #0; USING PMask$; TAB 87;PRICE; ! "calc'd price
	IF PRICE<=0 PRINT #0; TAB 90;"NOT AVL";
	A_5260: GOTO A_5285:
	A_5285: ! PRINT #0;"" \ LET V9[1]=V9[1]+1
	A_5287: LET CNVTU[1]=0;CNVTU[2]=2;CNVTU[0]=SPCUM[1];CNVTA=SPSLCOST \ GOSUB L_20000: \ LET CC=AMOUNT !"convert cost to base
	LET CNVTU[0]=SPCUM[0];CNVTA=PRICE \ GOSUB L_20000: \ LET PP=AMOUNT !"convert price to base
	IF PP<>0 LET GTM=(PP-CC)/PP \ LET GTM=GTM*100
	IF PP=0 LET GTM=0
	A_5292: !
	if showform=1
   		PRINT #0; USING "-###.##%"; TAB 117;"GTM = ";GTM
	else
   		print #0;""
	endif
	Let V9[1]=V9[1]+1
	LPrtd=LPrtd+1
	if v9[1]>v9[3] 
  		if ptype=2 
	 		gosub print_salesheading: 
  		else
     		GOSUB print_heading: ! "page break
  		endif
	endif
A_5290: !
Next PLvl ! thru any 10 set up
if lprtd PRINT #0;"" \ LET V9[1]=V9[1]+1
! LET RCTR=RCTR+1
Return
!
PRINT_CONTR_AND_CUST: Rem "============ print contract/customer
if j8 
  If FIRSTPASS
    tmp2$ = prevcont$[2,6],fdel$,CN$,fdel$
    If PTYPE = 2 let tmp2$ = tmp2$,K1$[1,3],fdel$,S1$[1,30],fdel$
  End If   
  return
end if
!
If FIRSTPASS
  Print #0;prevcont$[2,6];"  ";CN$
  If PTYPE = 2 Print #0; Tab 80;"SLSM: ";K1$[1,3];"  ";S1$[1,30]
  V9[1] = V9[1] + 1
  if prevcont$[1,6]<>t6$[1,6] return
End If 
If PCUST 
 Print #0;T6$[2,6];
 Print #0; Using "######"; Tab 8;CUST_CODE;
 Print #0; Tab 15;A1$[31,60]
 V9[1] = V9[1] + 1
end if 
Return 
!
!
PRINT_STDCOST_AND_REBATE: Rem =======slsm cost is standard and there is a rebate    j8 concacts to tmp3$
If j8 
  If COST_LEV[1] >= 2 
   If RBL1[0] = 4 Let tmp3$ = tmp3$, "STANDARD"
   If RBL1[0] = 1 If RB5[1] >= 0 Let tmp3$ =tmp3$,  RB5[1] Using "###.##%","MARKUP"
   If RBL1[0] = 1 If RB5[1] < 0 Let tmp3$ = tmp3$, RB5[1] Using "###.##%","DISC"
   If RBL1[0] = 2 If RB5[1] < 0 Let tmp3$ = tmp3$, RB5[1] Using "$$#.##","DISC $"
   If RBL1[0] = 2 If RB5[1] >= 0 Let tmp3$ =tmp3$,  RB5[1] Using "$$#.##","MARKUP"
   If RBL1[0] = 3 Let tmp3$ = tmp3$, RB5[1] Using PMASK$
  end if !lev[1]
else !not j8
  If COST_LEV[1] >= 2 
   If RBL1[0] = 4 Print #0; Tab 100;"STANDARD";
   If RBL1[0] = 1 If RB5[1] >= 0 Print #0; Using " ###.##% MARKUP"; Tab 100;RB5[1];
   If RBL1[0] = 1 If RB5[1] < 0 Print #0; Using "###.##%  DISC"; Tab 100;RB5[1];
   If RBL1[0] = 2 If RB5[1] < 0 Print #0; Using "$$#.##  DISC $"; Tab 100;RB5[1];
   If RBL1[0] = 2 If RB5[1] >= 0 Print #0; Using "$$#.## MARKUP"; Tab 100;RB5[1];
   If RBL1[0] = 3 Print #0; Using PMASK$; Tab 100;RB5[1];
  end if !lev[1]
end if !j8
Return
!
!
PRINT_COST_TYPE: Rem ==========slsm cost is standard and there is a rebate    j8 concacts to tmp3$
If COST_LEV[1] >= 2 And RBL1[0] < 3
  if j8 
    If RBL1[1] = 1 let tmp3$  = tmp3$, " OF BASE COST" \return
    If RBL1[1] = 2 let tmp3$  = tmp3$, " OF LOADED COST" \return
    If RBL1[1] = 3 let tmp3$  = tmp3$, " OF LAST COST" \return
    If RBL1[1] = 4 let tmp3$  = tmp3$, " OF REBATE COST" \return
    If RBL1[1] = 5 let tmp3$  = tmp3$, " OF REDI COST" \return
  else !not j8
    If RBL1[1] = 1 Print #0; Tab 100;" OF BASE COST ";
    If RBL1[1] = 2 Print #0; Tab 100;" OF LOADED COST ";
    If RBL1[1] = 3 Print #0; Tab 100;" OF LAST COST ";
    If RBL1[1] = 4 Print #0; Tab 100;" OF REBATE COST ";
    If RBL1[1] = 5 Print #0; Tab 100;" OF REDI COST ";
  end if !j8
End If 
if j8 
 If RBL1[1] = 3 Let tmp3$  = tmp3$, " FLAT COST" 
 return
end if
If COST_LEV[1] If RBL1[1] = 3 Print #0; Tab 100;" FLAT COST      ";
Return 
!
!
PRINT_SALESHEADING: Rem"============== print salesman heading
If V9[1] < V9[3] Return 
If V9[0] if not (j8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 9
if not(j8) Print #0;""
if j8 return
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";V9[0]
Print #0;" - 086 - ";T9$;
Print #0; Tab 50;"C O N T R A C T   P R I C E   L I S T"
Print #0; Tab 55;"IN SALESMAN ORDER"
Print #0;""
Print #0; Tab 70;"START/"
Print #0; Tab 2;"CONTRACT CUSTOMER"; Tab 26;ITEM_LAB$;
Print #0; Tab 39;"DESCRIPTION"; Tab 70;"CANCEL";
Print #0; Tab 79;"FACTOR"; Tab 90;"PRICE U/M";
If COST_LEV[1] > 0  Print #0; Tab 100;"SLSM COST";
If COST_LEV[1] > 0 Print #0; Tab 117;"CST U/M";
Print #0; Tab 125;"MIN/MAX"
Print #0; Tab 2;"ITEM NO."; Tab 70;"DATE"; Tab 79;"TYPE"; Tab 90;"COST TYPE";
Print #0; Tab 125;"QTY"
Print #0;""
Return
!
!
PRINT_HEADING: Rem "============================================== heading
IF NOT(j8) If V9[0]  Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 7
IF NOT(J8) Print #0;""
T9$ = "" \ Call Time(T9$)
!
IF J8 RETURN
Print #0; Tab 10;J8$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE ";V9[0]
Print #0;" -MX086- ";T9$;
Print #0; Tab 47;"C O N T R A C T   P R I C E   L I S T"
Print #0; Tab 70;"START/"
Print #0; Tab 2;"CONTRACT CUSTOMER"; Tab 26;ITEM_LAB$;
Print #0; Tab 39;"DESCRIPTION"; Tab 70;"CANCEL";
Print #0; Tab 79;"FACTOR"; Tab 90;"PRICE U/M";
If COST_LEV[1] > 0  Print #0; Tab 100;"SLSM COST";
If COST_LEV[1] > 0 Print #0; Tab 117;"CST U/M";
Print #0; Tab 125;"MIN/MAX"
Print #0; Tab 2;"ITEM NO."; Tab 70;"DATE"; Tab 79;"TYPE"; Tab 90;"COST TYPE";
Print #0; Tab 125;"QTY"
Print #0;""
Return 
!
!
GET_UM: Rem "===================== convert from rec # um to 4 char. text   creates X$ or XX$
If FLG ! ALWAYS STORED AS 0!
  If UNT = 1 Let XX$ = "STOCK "
  If UNT = 2 Let XX$ = "SELL  "
  If UNT = 3 Let XX$ = "PURCH "
  If UNT = 4 Let XX$ = "COST  "
  If UNT = 5 Let XX$ = "PRICE "
  If UNT = 6 Let XX$ = "PROD  "
  Return 
End If 
If FLG Or Not(UNT) Let X$ = "N/A" \ Return 
If UNT = -1 Let X$ = "CWT " \ Goto END_GET_UM
If UNT = -2 Let X$ = "LOT " \ Goto END_GET_UM
If UNT = -3 Let X$ = "LB  " \ Goto END_GET_UM
Read #7,UNT;CCD$;
X$ = CCD$[11,14]
END_GET_UM: 
Return 
!
!
UNIT_CONVERT: Rem "===================================== unit convert rtn
If FLG Let AMOUNT = CNVTA \ Return 
Gosub L_20000
Return 
!
!
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
D6 = X$
Call DateToJulian(1,X$,X$,E) !!\ If E Gosub ERR_SEARCH
X2 = X$[1,5]
CURJDATE = X2
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
L_7830: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
!
!
PRICE_TYPE: Rem PRICE TYPE   j8 creates tmp$
tmp$ =fdel$
On C3[0] Goto PRINT_MARKUP_OR_DOWN,PRINT_MARGIN,PRINT_FLATPRICE,PRINT_BRACKET,PRINT_BRACKET_JUMP,PRINT_LEVEL_JUMP,PRINT_FREE_GOODS,PRNT_DOLMARK
Return 
!
!
PRINT_MARKUP_OR_DOWN: 
if j8
  If SPC5[0] >= 0 Let tmp$  = "% MARK UP",fdel$ else Let tmp$  = "% MARK DOWN",fdel$
  return
end if
If SPC5[0] > 0 Print #0; Tab 78;"% MARK UP";
If SPC5[0] < 0 Print #0; Tab 78;"% MARK DOWN";
Return 
!
!
PRINT_MARGIN:
if j8 let tmp$  =  "MARGIN",fdel$ else Print #0; Tab 78;"MARGIN";
Return 
!
!
PRINT_FLATPRICE: 
if j8 let tmp$  = "FLAT PRICE",fdel$ else Print #0; Tab 78;"FLAT PRICE";
Return 
!
!
PRINT_FREE_GOODS: 
if j8 let tmp$  = "FREE GOODS",fdel$ else Print #0; Tab 78;"FREE GOODS";
Return
!
!
PRNT_DOLMARK: Rem $ markup/down type 8
if j8 
  If SPC5[0] >= 0 let tmp$  = "$ MARK UP",fdel$ Else let tmp$  = "$ MARK DOWN",fdel$ 
  return
end if
If SPC5[0] >= 0 Print #0; Tab 78;"$ MARK UP"; Else Print #0; Tab 78;"$ MARK DOWN"; 
Return 
!
!
PRINT_BRACKET: 
If j8 
  If SPC5[0] = 0 Let tmp$  =  C3[1] Using "##","BRACKET",fdel$
  If SPC5[0] > 0 Let tmp$  =  C3[1] Using "##","MARKUP OF BRACKET",fdel$
  If SPC5[0] < 0 Let tmp$  =  C3[1] Using "##","MARKDOWN  OF BRACKET",fdel$
  Return 
end if
!
If SPC5[0] = 0 Print #0; Using "BRACKET ## "; Tab 78;C3[1];
If SPC5[0] > 0 Print #0; Using "MARKUP OF BRACKET ##"; Tab 78;C3[1];
If SPC5[0] < 0 Print #0; Using "MARKDOWN  OF BRACKET ##"; Tab 78;C3[1];
Return
!
!
PRINT_BRACKET_JUMP: 
If j8 
  If SPC5[0] = 0 Let tmp$  = C3[1] Using "##","BRKT JMP",fdel$
  If SPC5[0] > 0 Let tmp$  = C3[1] Using "MARKUP ##","BRKT JMP",fdel$
  If SPC5[0] < 0 Let tmp$  = C3[1] Using "MARKDOWN ##","BRKT JMP",fdel$
  return
end if
If SPC5[0] = 0 Print #0; Using "## BRKT JMP"; Tab 78;C3[1];
If SPC5[0] > 0 Print #0; Using "MARKUP ## BRKT JMP"; Tab 78;C3[1];
If SPC5[0] < 0 Print #0; Using "MARKDOWN ## BRKT JMP"; Tab 78;C3[1];
Return 
!
!
PRINT_LEVEL_JUMP: Rem break level jump
if j8 Let tmp$  =  "BREAK LEVEL JUMP ",C3[1] Using "##"," LEVELS",fdel$ else Print #0; Using "BREAK LEVEL JUMP ## LEVELS"; Tab 78;C3[1];
Return 
!
!
!
PRINT_BASE_TYPE: Rem BASE TYPE
tmp$=fdel$
if c3[0]<>1 if c3[0]<>2 if c3[0]<>8 return
On C3[1] Goto L_8110,L_8120,L_8130,L_8140,L_8140,L_8140,L_8140,L_8140,L_8140,L_8150
On C3[1] - 10 Goto L_8160,L_8170,L_8175,L_8180,L_8105
Return 
L_8105: ! NETPO
if j8 let tmp$  = "OF NET PO",fdel$ else Print #0; Tab 90;"OF NET PO";
Return
L_8110: 
if j8 let tmp$  = "OF BASE",fdel$ else Print #0; Tab 90;"OF BASE";
Return 
L_8120: 
if j8 Let tmp$  = "OF LOADED",fdel$ else Print #0; Tab 90;"OF LOADED";
Return 
L_8130: 
If j8 Let tmp$  = "OF LAST",fdel$ else Print #0; Tab 90;"OF LAST";
Return 
L_8140: 
if j8 Let tmp$  = "OF LIST", C3[1] - 3 Using "#" ,fdel$ else Print #0; Using "OF LIST #"; Tab 90;C3[1] - 3;
Return 
L_8150:
if j8 Let tmp$  = "OF SP. CST",fdel$ else Print #0; Tab 90;"OF SP. CST";
Return 
L_8160: 
if j8 Let tmp$  = "SLSM CST", fdel$ else Print #0; Tab 90;"SLSM CST";
Return 
L_8170: 
if j8 Let tmp$  = "CALC. PRICE",fdel$ else Print #0; Tab 90;"CALC. PRICE ";
Return 
L_8175: 
if j8 Let tmp$  = "REDI COST" ,fdel$ else Print #0; Tab (90);"REDI COST";
Return 
L_8180: 
if j8 let tmp$  = "REBATE CST",fdel$ else Print #0; Tab (90);"REBATE CST";
Return 
!
!
GET_BREAK_TYPE: Rem GET BREAK TYPE   creates LBL$
LBL$ = " ",LBL$
If SPBRK[1] = 1 Let LBL$ = "ACC/NO BRK"
If SPBRK[1] = 2 Let LBL$ = "ACC/BRK"
If SPBRK[1] = 3 Let LBL$ = "NO ACC/NO BRK"
If SPBRK[1] = 4 Let LBL$ = "NO ACC/BRK"
Return 
!
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
!
CALC_LOADS_FROM_MARKUP: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5",OTYPE,WH,LTBL,PREC[],CNVTA
Return
!
!
CHK_FOR_REBATES: Rem CHECK FOR REBATE
RBCOST = 0 \ RBSLCOST = 0
TYPE = 0
L_19015: I$ = " ",I$
If W2[3] Let I$[1,6] = W2[3] Using "######" Else Let I$[1,6] = B[24] Using "######"
X2 = 0 \ TYPE = TYPE + 1
If TYPE > 6 Goto L_19330
L_19035: Search #10,3,4;I$,R[10],E
!!If E > 2 Gosub ERR_SEARCH
If E Goto L_19015
X2 = I$[1,6]
If W2[3] If X2 <> W2[3] Goto L_19015
If Not(W2[3]) If X2 <> B[24] Goto L_19015
KCUST$ = " ",KCUST$
If TYPE < 4 Let KCUST$[1,6] = CFC1[1] Using "######" Else Let KCUST$[1,6] = CFC1[7] Using "PT### "
KCUST$[7,12] = I$[7,12]
Search #10,2,2;KCUST$,R[10],E
If E Goto L_19035
I1$ = " ",I1$
If TYPE = 1 Or TYPE = 4
  I1$[1,12] = A$[140,151];I1$[13] = I$[7,12],""
End If 
If TYPE = 2 Or TYPE = 5
  I1$[1,1] = "*";I1$[2,5] = A$[152,155];I1$[13] = I$[7,12],""
End If 
If TYPE = 3 Or TYPE = 6
  I1$[1,1] = "#";I1$[13] = I$[7,12],""
End If 
Search #9,2,2;I1$,R[9],E
!!If E > 1 Gosub ERR_SEARCH
If E Goto L_19035
Mat Read #9,R[9],12;RB1;
Mat Read #9,R[9],36;RBUM;
Mat Read #9,R[9],40;RB;
Mat Read #9,R[9],118;RBWH;
Mat Read #9,R[9],126;RBL1;
Mat Read #9,R[9],138;RB5;
X2 = RB1[2] \ Gosub L_7820 \ X2 = 0
JDATE = X2
If JDATE > CURJDATE Goto L_19035
X2 = RB1[4] \ Gosub L_7820 \ X2 = 0
JDATE = X2
If RB1[4] If JDATE < CURJDATE Goto L_19035
If WHSEPR If RBWH If RBWH <> WHSE Goto L_19035
If TYPE <> 1 And TYPE <> 4 Let RBUM[0] = PFU1[RBUM[0]] \ RBUM[1] = PFU1[RBUM[1]]
If WHSEPR Let X2 = W3[16] Else Let X2 = B[10]
If RB[0] = 3 ! FLAT REBATE COST
  RBCOST = RB5[0]
  If TYPE <> 1 And TYPE <> 4 Let CNVTU[0] = RBUM[0];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = RBCOST \ Gosub L_20000 \ RBCOST = AMOUNT
End If 
If RB[0] = 1 Let RBCOST = (X2 * ((100 - RB5[0]) / 100))
If RB[0] = 2 Let CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2;CNVTA = X2 \ Gosub L_20000
If RB[0] = 2 Let CNVTA = (AMOUNT - RB5[0]);CNVTU[0] = RBUM[0];CNVTU[1] = 0 \ Gosub L_20000
If RB[0] = 2 Let RBCOST = AMOUNT
If RBL1[0] = 4 Let RBSLCOST = 0
If RBL1[0] = 3
  RBSLCOST = RB5[1]
  If TYPE <> 1 And TYPE <> 4 Let CNVTU[0] = RBUM[1];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = RBSLCOST \ Gosub L_20000 \ RBSLCOST = AMOUNT
End If 
If RBL1[0] = 1 Or RBL1[0] = 2
  If RBL1[1] = 1 Let BASEX  = C4[4]
  If RBL1[1] = 1 If WHSEPR Let BASEX  = W3[18]
  If RBL1[1] = 2 Let BASEX  = B[8]
  If RBL1[1] = 2 If W3[17] Let BASEX  = W3[17]
  If RBL1[1] = 3 Let BASEX  = B[10]
  If RBL1[1] = 3 If W3[16] Let BASEX  = W3[16]
  If RBL1[1] = 4 Let BASEX  = RBCOST
  If RBL1[1] = 5 Let BASEX  = PF_LOAD2
  If RBL1[1] = 5 If W3[14] Let BASEX  = W3[14]
End If 
If RBL1[0] = 1 Let RBSLCOST = (BASEX  * ((100 + RB5[1]) / 100))
If RBL1[0] = 2 Let CNVTU[0] = 0;CNVTU[1] = RBUM[1];CNVTU[2] = 2;CNVTA = BASEX  \ Gosub L_20000
If RBL1[0] = 2 Let CNVTA = (AMOUNT + RB5[1]);CNVTU[0] = RBUM[1];CNVTU[1] = 0 \ Gosub L_20000
If RBL1[0] = 2 Let RBSLCOST = AMOUNT
If RBSLCOST And (Not(L5[1]) Or RBSLCOST < L5[1]) Let L5[1] = RBSLCOST
L_19330: Rem exit rebate calc
Return 
!
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
DEF FNN(H)=INT(ABS(H)*10^Q0[1]+.5)*10^-Q0[1]*SGN(H) ! "normal round
DEF FNT(H)=INT(ABS(H)*10^Q0[1])*10^-Q0[1]*SGN(H) ! "truncate to lower
DEF FNV(H)=INT(ABS(H)*10^Q0[1]+.9999999)*10^-Q0[1]*SGN(H) ! "round up
If CNVTU[2] = 3 Goto L_20060
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20110
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20110
If CNVTU[2] = 0 Goto L_20060
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20110
L_20060: Gosub PROD_UNITS_CONVERT
If CNVTU[2] = 3 Goto L_20110
If CNVTU[2] = 0 Goto L_20110
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
L_20110: Return 
PROD_UNITS_CONVERT: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT (INTERNAL VERSION)
!Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
!Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
!Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
!Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
!Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
CONVFLAG = 0
If CNVTU[2] <> 5 Goto L_20270
CONVFLAG = 1
CNVTU[2] = 1
Goto L_20280
L_20270: CONVFLAG = 0
L_20280: SR = 8
SC = 12
On CNVTU[2] + 1 Goto CHK_IF_VALID,CONVERT_COST_PRICE_QTY,CONVERT_COST_PRICE_QTY
E = 0 !!\ Gosub ERR_SEARCH
CHK_IF_VALID: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto GET_NEXT_CONV
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto GET_NEXT_CONV
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto GET_NEXT_CONV
  Next X1[2]
  FLAG = 1 \ Return
GET_NEXT_CONV: Rem
Next X1[1]
FLAG = 0 \ Return
CONVERT_COST_PRICE_QTY: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20610
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20540
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20530
  Next CUNIT
  FLAG = 0 \ Return
L_20530: If CUNIT = 0 Goto L_20610
L_20540: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_20590: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "Catch Weight Item
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20610: Next X1[1]
If CNVTU[2] <> 1 Or CONVFLAG Goto L_20660
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20660: If CNVTU[2] <> 2 Let FLAG=0\return
If Not(CNVTU[1]) let flag=0 \return
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
Return 
!
!
SET_WHSE_DATA: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
CALL_PRICE: Rem set up to do the price call
J2$ = " ",J2$ \ J2$ = A$[152,155]
Search #CH_CMDTY,2,1;J2$,R4,E
If E = 1 Let FLEPTR[3,1] = 0 Else Let FLEPTR[3,1] = R4
if spc6[1]<1 or spc6[1]>2 let spc6[1]=1
if spc6[1]=1 !
	CNVTA = SPC4[0];CNVTU[0] = 0;CNVTU[1] = C3[2];CNVTU[2] = 2
	Gosub L_20000
Else
	amount=0
	! get qty?
	if a[6]<=0 let a[6]=1
	if a[5]<=0 let a[5]=1
	amount=FNU(spc4[0]/a[6]*a[5]) ! wgt/uwgt*fact?
	! amount=amount-1 ! so wgt wins
	if amount<0 let amount=0
Endif
For J = 0 To 30 \ SPECS[J] = 0 \ Next J
SPECS[0] = 0
!SPECS[1] = AMOUNT
!SPECS[2] = AMOUNT * A[6] / A[5]
if amount<=0 then amount=1
specs[1]=amount
If spc6[1]=1 ! qty - need wgt
	specs[2]=amount*a[6]/a[5]
Else ! already wgt
	specs[2]=spc4[0]
Endif
SPECS[3] = CUST_CODE
SPECS[4] = SPWH
If JD8 >= JSTARTDATE Let SPECS[5] = D8
If JD8 < JSTARTDATE Let SPECS[5] = C1[2]
SPECS[6] = 0
If CUST_CODE <> 0
  SPECS[7] = CFC1[7]
Else 
  SPECS[7] = 0
End If 
SPECS[8] = 1
If CFC1[7]
  Mat Read #14,CFC1[7],28;PT;
  SPECS[9] = PT[0]
Else 
  SPECS[9] = P60$[29,29]
End If 
SPECS[10] = 0
SPECS[11] = 0
SPECS[12] = 0
SPECS[13] = PFU1[9]
SPECS[14] = PFU1[12]
SPECS[15] = PFU1[11]
SPECS[16] = 0
SPECS[17] = 0
SPECS[18] = 0
SPECS[19] = 0
j1$=""
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,j1$,rstr$)
For J = 0 To 15 \ FLEPTR[J,1] = 0 \ Next J
CNVTA = SPECS[17];CNVTU[0] = 0;CNVTU[1] = SPCUM[1];CNVTU[2] = 2
Gosub L_20000
SPSLCOST = AMOUNT
CNVTA = SPECS[23];CNVTU[0] = 0;CNVTU[1] = SPCUM[0];CNVTU[2] = 2
Gosub L_20000
PRICE = AMOUNT
Return 
GET_CURRENT_DATE: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto GCD_7940
Next K1
GCD_7940: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT PROGRAM
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"086.txt",rstr$)
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 	
! try call dxclose() else rem
End 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
