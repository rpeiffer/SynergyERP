!Program Name: ubsprod 
! loadsave -w -n 100,10 -o prog/dxport/ubsprod.dl4 src/ubsprod.src
!
!                                                  
!Last Updated:                                     


Include "src/prvars.inc"

Declare External sub ubsProd
Declare Sub updatelog,errTrap
Declare Function GetTenBkt

Dim p1. as pinfo
Dim 2%,ii,ss
Call ubsProd(1,35,1,"files/6/dx.log","903.1190",p1.,ii,ss,600)
stop                                                                  

External Sub ubsProd(intCo,intSalesMan,debug,dlog$,Prod$,p1. as pInfo,ii,ss,iLimit,cost_lev[], prices$[], pricedesc$[], costs$[], costdesc$[])

Try

	Declare Intrinsic Function FindChannel,Trim$
	Declare Intrinsic Sub FormatDate,DXSet
	Declare External Function FDate$,PDate$,BaseName$,FMTPhone$,Xunit$,OpenFile
	Declare External Function XAmount,WareHouse,ReplaceChar$
	Declare Function RegionOK
	External Lib "ubsfunc.dl4","ubsprconv.dl4"


Include "src/ubsprod.inc"
Include "src/ubswhse.inc"

DEF FNR(X)=SGN(X)*(INT(ABS(X)*100+.5)*.01)
DEF FNF(H)=INT((ABS(H)*20+.5)*SGN(H))/20

Dim WHK$[20],PRK$[20],CMK$[20],VNK$[20]

Dim PR. As Prod
Dim CM. As CommCode
Dim WH. As WHSE

Dim 1%,debugDetail
! Variables for Channel#'s
Dim 2%,WHC,PRC,VNC,CMC,CTC,CCC
! Variables for Search Record#
Dim 3%,WHR,PRR,VNR,CMR,CTR
! Variables for Search Error
Dim 2%,WHE,PRE,VNE,CME,CTE

Dim Msg$[256],pgmName$[20]
Dim P9$[50],P60$[50],P61$[256],VEND$[30],CATD$[24]
Dim Temp$[100],Space$[100],SLS$[3],Sales$[30],CO$[2]
Dim QMASK$[20],PMASK$[20],EMASK$[20],DEC$[5]
Dim WHSE$[2],SUPER$[12],VENDITEM$[20]
Dim BRD$[100],region$[4]

Dim 1%,baseunit,stockunit,sellunit,purchunit,costunit,priceunit,whatunit        
Dim 1%,ARMONTH,MTHDAYS,MAXVAR,DCU[40]
dIM 2%,BDAYS[24]
Dim 2%,Q0[1]
Dim 2%,ErrStat,X1,X2
Dim 3%,ARS[5],TOTAVL,UnitsMTD,UnitsYTD,GPMTD,GPYTD,DCOST[16]
Dim work$[255]

! ten bkt dims
DIM 1%,M5[3],M8
DIM 2%,M6[3]   
DIM 3%,M7,B4,MUT

debugDetail=0
pgmName$="ubsprod"
msg$[1,50]="-",msg$ \ Call updatelog(debug)               
msg$="start...program "+pgmName$ \ Call updatelog(debug)     

Space$=" ",Space$
ErrStat = 0
ii=0

SLS$=intSalesMan Using "###" ! Passed Salesman
CO$=Str$(intCo) ! Company
msg$="doing...company-"+CO$+" salesman-"+SLS$ \ Call updatelog(debug)

CTLC= OpenFile(-9999,intCo) \ If CTLC=-1 Error 42    !control
WHC= OpenFile(-1744,intCo)  \ If WHC=-1  Error 42    !prodwhse
PRC=OpenFile(-1792,intCo)   \ If PRC=-1  Error 42    !prod
VNC= OpenFile(-2400,intCo)  \ If VNC=-1  Error 42    !vendor
CMC= OpenFile(-2288,intCo)  \ If CMC=-1  Error 42    !commodity
CTC= OpenFile(-1984,intCo)  \ If CTC=-1  Error 42    !category
CCC= OpenFile(-1728,intCo)  \ If CCC=-1  Error 42    !ccodes
SPM= OpenFile(-1712,intCo)  \ If SPM=-1  Error 42    !sprodmark
BRK= OpenFile(-1952,intCo)  \ If BRK=-1  Error 42    !breaktable
if region REG= OpenFile(-9985,intCo)  \ If REG=-1  Error 42    !region

! Start Prog.
Read #CTLC,19,50;P9$; 
Read #CTLC,60,50;P60$; 
Read #CTLC,61,0;P61$;
Read #CTLC,0,120;ARMONTH;
Mat Read #CTLC,11,0;BDAYS;     
Mat Read #CTLC,115,40;Q0; 

let MTHDAYS=BDAYS[ARMONTH]   
If MTHDAYS<=0 LET MTHDAYS=21

If not(Q0[1]) let Q0[1]=2                                                       
Let Dec$="&",Dec$;Qmask$="---,---,--#"                                         
If Q0[0] Let Qmask$="---,---,--#.",Dec$[1,Q0[0]]         !qty mask      
If Q0[1] Let Pmask$="$--,---,---,---.",Dec$[1,Q0[1]]     !price mask        
Let Emask$="$---,---,---,---.##"                         !ext. price mask    


WHSE$=WareHouse(intSalesMan,intCo) Using "##"    !get warehouse 
eccos_region = whse$

Let WHK$=" ",WHK$;WHK$[1,12]=Trim$(Prod$)
If SLS$<> "999" Then
	! Let WHK$[13,14]=WHSE$
Else
	! Let WHK$[13,14]=whse$  ! " 1"
End If

start: !
!===================================prodwhse
Loop1: Search #WHC,3,1;WHK$,WHR,WHE
If Trim$(WHK$[1,12])<>Trim$(Prod$) goto outend
If intSalesMan=999 goto WHOK  ! csr
if region                                                 
	if RegionOK(WHK$[13,14]) goto WHOK else goto loop1    
else                                                      
	If WHK$[13,14]<>WHSE$ goto loop1:  !    Let WHE=22    
endif                                                     
If WHE Goto OutEnd:

WHOK: !
If debugDetail                                                      
   msg$="doing...Search #WHC: WHK$="+WHK$+" WHR="+WHR \ Call updatelog(debug) 
   If WHE msg$="error...Search error "+WHE  \ Call updatelog(debug) 
Endif 
Read Record #WHC,WHR; WH.;
Let TOTAVL=0
Let TOTAVL=WH.W3[0]-WH.W3[2]
If P9$[28,28]="Y" then TOTAVL=TOTAVL+WH.W3[1]


Temp$=" ",Temp$;PRK$=" ",PRK$
Temp$[1,12]=Trim$(Prod$);PRK$=Temp$
!===================================product
Search #PRC,2,1;PRK$,PRR,PRE
If Trim$(PRK$[1,12])<>Trim$(Temp$[1,12]) Let PRE=22
If PRE Goto OutEnd:

If debugDetail
   msg$="doing...Search #PRC: PRK$="+PRK$+" PRR="+PRR \ Call updatelog(debug)
   If PRE msg$="error...Search error "+PRE  \ Call updatelog(debug)
Endif
Read Record #PRC,PRR;PR.;

IF WH.WHparc[1] AND P9$[32,32]="Y" let MUT=WH.WHParc[1] else MUT=PR.PR_C4[3]
!markuptable
!If intSalesMan<>999 If intSalesMan<>CU.C1[2] Clear PR. ! Security.

!set                                                                            
baseunit =PR.PFU1[0]                                                            
stockunit=PR.PFU1[8]                                                            
sellunit =PR.PFU1[9]                                                            
purchunit=PR.PFU1[10]                                                           
costunit =PR.PFU1[11]                                                           
priceunit=PR.PFU1[12]  
DCU[0]=11;DCU[1]=11;DCU[2]=11;DCU[3]=11                        
DCU[4]=12;DCU[5]=12;DCU[6]=12;DCU[7]=12;DCU[8]=12;DCU[9]=12              
DCU[10]=11;DCU[11]=11;DCU[12]=11;DCU[13]=11;DCU[14]=11;DCU[15]=11;DCU[16]=11 

!totavl                                                                 
Let CNVTA=TOTAVL              !cost/price/qty                           
Let CNVTU[0]=0                !current unit                             
Let CNVTU[1]=PR.PFU1[8]       !desired unit                             
Let CNVTU[2]=1                !mode 1=qty 2=cost/price                  
LET TOTAVL=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],CTLC,FLAG)   

!UnisMTD
Let CNVTA=PR.A[9]             !cost/price/qty                         
Let CNVTU[0]=0                !current unit                           
Let CNVTU[1]=PR.PFU1[9]       !desired unit                           
Let CNVTU[2]=1                !mode 1=qty 2=cost/price                
LET UnitsMTD=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],CTLC,FLAG)

!UnitsYTD
Let CNVTA=PR.A[10]            !cost/price/qty                         
Let CNVTU[0]=0                !current unit                           
Let CNVTU[1]=PR.PFU1[9]       !desired unit                           
Let CNVTU[2]=1                !mode 1=qty 2=cost/price                
LET UnitsYTD=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],CTLC,FLAG)

If Len(Trim$(PR.PR_A2$[1,12]))>1 then    
   Let Super$=Trim$(PR.PR_A2$[1,12])
Else
   Let Super$=""
Endif

If Len(Trim$(PR.A$[93,112]))>1 then 
   Let VendItem$=Trim$(PR.A$[93,112])  
Else                                  
   Let VendItem$=""                      
Endif                                 

If PR.A[7] then let GPMTD=FNR(((PR.A[7]-PR.A[11])/PR.A[7])*100) else let GPMTD=0
If PR.A[8] then let GPYTD=FNR(((PR.A[8]-PR.A[12])/PR.A[8])*100) else let GPYTD=0


REM====================================TRANSFER BASE TO DISPLAY COSTS
DCOST[0]=PR.B[21];DCOST[1]=PR.B[8]
DCOST[2]=PR.B[10];DCOST[3]=PR.PR_C4[4]                  
For xx=4 TO 9             
    DCOST[xx]=PR.A[xx+16] \ if p9$[32,32]="Y" DCOST[xx]=WH.W3[xx+15]    
Next xx                    

DCOST[12]=PR.PF_LOAD2;DCOST[13]=PR.PRPARC[2]

! DCOST[10]=PR.PFCO[2];DCOST[11]=PR.PFCO[0]
! DCOST[14]=PR.PLC[0];DCOST[15]=PR.PLC[2]
! DCOST[16]=PR.PFN[0] 

If P9$[32,32]="Y"	! warehouse pricing Y/N
	IF WH.W3[15] LET DCOST[0]=WH.W3[15]		! avg
	IF WH.W3[17] LET DCOST[1]=WH.W3[17]		! loaded
	IF WH.W3[14] LET DCOST[12]=WH.W3[14]	! 2nd loaded
	IF WH.W3[16] LET DCOST[2]=WH.W3[16]		! COST - LAST (PO)
	IF WH.WHMISC[2] LET DCOST[13]=WH.WHMISC[2]  ! net po cost
	IF WH.W3[18] LET DCOST[3]=WH.W3[18]		! COST - BASE
End if
For xx=0 to 16                                           
  !cost&price 
  Let CNVTA=DCOST[xx]           !cost/price/qty                           
  Let CNVTU[0]=0                !current unit                             
  Let CNVTU[1]=PR.PFU1[DCU[xx]]    !desired unit                             
  Let CNVTU[2]=2                !mode 1=qty 2=cost/price                  
  Let DCOST[xx]=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],CTLC,FLAG) 
Next xx


!=================category                                    
CatD$=" ",CatD$

CTR=PR.B[11]
If CTR Then                                 
   Mat Read #CTC,CTR;CatD$;                     
Else
   CatD$="-NOF-"
End If                                        


!=================commodity 
CMK$=PR.A$[152,155]
Search #CMC,2,1;CMK$,CMR,CME
If CMK$<>PR.A$[152,155] Then Let CME=22

If debugDetail                                                      
   msg$="doing...Search #CMC: CMK$="+CMK$+" CMR="+CMR \ Call updatelog(debug) 
   If CME msg$="error...Search error "+CME  \ Call updatelog(debug)     
Endif                                                               
If CME=0 Then
   Mat Read #CMC,CMR;CM.;
Else
   Clear CM.
   CM.D$[1,16]=PR.A$[152,155]+"            "
End If


!====================vendor
Temp$=" ",Temp$;Vend$=" ",Vend$
VNK$=PR.B[24] Using "######"
Temp$=VNK$

Search #VNC,2,1;VNK$,VNR,VNE
If VNK$[1,6]<>Temp$[1,6] Let VNE=22

If debugDetail                                                      
   msg$="doing...Search #VNC: VNK$="+VNK$+" VNR="+VNR \ Call updatelog(debug) 
  If VNE msg$="error...Search error "+VNE  \ Call updatelog(debug)     
Endif                                                               
If VNE=0 Then
   Mat Read #VNC,VNR;Vend$;
Else
   Vend$="-NOF-"
End If


p1.Product$=PR.A$[140,151]
work$ = PR.A$[9,38] + "     "                     
p1.Description1$ = ReplaceChar$(trim$(work$)) 
work$ = PR.A$[63,92] + "     "                    
p1.Description2$ = ReplaceChar$(trim$(work$)) 
p1.Category$=CatD$
p1.Commodity$=CM.D$[1,16]
p1.Vendor$=Vend$ 
p1.VendorItem$=VendItem$
p1.LeadTime$=FNR(PR.B[0]*MTHDAYS) using "#####.##" + " Days"
p1.Super$=Super$
p1.SalesMTD$=PR.A[7] using Emask$
p1.SalesYTD$=PR.A[8] using Emask$
p1.UnitsMTD$=UnitsMTD using Qmask$
p1.UnitsYTD$=UnitsYTD using Qmask$
if cost_lev[1]  ! load
	p1.CostsMTD$=PR.A[11] using Emask$
	p1.CostsYTD$=PR.A[12] using Emask$
	p1.GPMTD$=GPMTD using "-####.##%"
	p1.GPYTD$=GPYTD using "-####.##%"
else
	p1.CostsMTD$=" "
	p1.CostsYTD$=" "
	p1.GPMTD$=" "
	p1.GPYTD$=" "
endif

costctr = 0
if cost_lev[0]  ! avg
	Let xx=14 \ Read #CTLC,18,(xx-1)*10;p1.CostDesc1$; 
	! p1.Cost1$      = DCOST[0]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costs$[costctr] = DCOST[0]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costdesc$[costctr]= p1.costdesc1$
	costctr = costctr + 1
else  ! hide
	p1.CostDesc1$ = " "
	p1.Cost1$= " "
Endif
if cost_lev[1]  ! load / whse
	Let xx=13 \ Read #CTLC,18,(xx-1)*10;p1.CostDesc2$;
	! p1.Cost2$      = DCOST[1]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costs$[costctr] = DCOST[1]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costdesc$[costctr]= p1.costdesc2$
	costctr = costctr + 1
else  ! hide
	p1.CostDesc2$ = " "
	p1.Cost2$= " "
Endif
if cost_lev[1]  ! 2nd loaded cost
	Let xx=23 \ Read #CTLC,18,(xx-1)*10;p1.CostDesc3$;
	! p1.Cost3$      = DCOST[12] using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costs$[costctr] = DCOST[12]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costdesc$[costctr]= p1.costdesc3$
	costctr = costctr + 1
else  ! hide
	p1.CostDesc3$ = " "
	p1.Cost3$= " "
Endif
if cost_lev[2]  ! last/PO
	Let xx=12 \ Read #CTLC,18,(xx-1)*10;p1.CostDesc4$;
	! p1.Cost4$      = DCOST[2]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costs$[costctr] = DCOST[2]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costdesc$[costctr]= p1.costdesc4$
	costctr = costctr + 1
else  ! hide
	p1.CostDesc4$ = " "
	p1.Cost4$= " "
Endif
if cost_lev[2]  ! net po  (prparc[2]
	Let xx=24 \ Read #CTLC,18,(xx-1)*10;p1.CostDesc5$;
	! p1.Cost5$      = DCOST[13] using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costs$[costctr] = DCOST[13]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costdesc$[costctr]= p1.costdesc5$
	costctr = costctr + 1
else  ! hide
	p1.CostDesc5$ = " "
	p1.Cost5$= " "
Endif
if cost_lev[3]  ! base
	p1.CostDesc6$  = "BASE COST"
	! p1.Cost6$      = DCOST[3]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costs$[costctr] = DCOST[3]  using Pmask$ + " / " + XUNIT$(PR.PFU1[11],CCC)
	Costdesc$[costctr]= p1.costdesc6$
	costctr = costctr + 1
else  ! hide
	p1.CostDesc6$ = " "
	p1.Cost6$= " "
Endif

If PR.PR_C4[2] = 1  ! matrix prices
	Let xx=15 \ Read #CTLC,18,(xx-1)*10;p1.PriceDesc1$;
	pricedesc$[0] = p1.pricedesc1$
	Let xx=16 \ Read #CTLC,18,(xx-1)*10;p1.PriceDesc2$;
	pricedesc$[1] = p1.pricedesc2$
	Let xx=17 \ Read #CTLC,18,(xx-1)*10;p1.PriceDesc3$;
	pricedesc$[2] = p1.pricedesc3$
	Let xx=18 \ Read #CTLC,18,(xx-1)*10;p1.PriceDesc4$;
	pricedesc$[3] = p1.pricedesc4$
	Let xx=19 \ Read #CTLC,18,(xx-1)*10;p1.PriceDesc5$;
	pricedesc$[4] = p1.pricedesc5$
	Let xx=20 \ Read #CTLC,18,(xx-1)*10;p1.PriceDesc6$;
	pricedesc$[5] = p1.pricedesc6$
	p1.Price1$     = DCOST[4] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	Prices$[0]     = DCOST[4] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	p1.Price2$     = DCOST[5] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	Prices$[1]     = DCOST[5] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	p1.Price3$     = DCOST[6] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	Prices$[2]     = DCOST[6] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	p1.Price4$     = DCOST[7] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	Prices$[3]     = DCOST[7] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	p1.Price5$     = DCOST[8] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	Prices$[4]     = DCOST[8] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	p1.Price6$     = DCOST[9] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
	Prices$[5]     = DCOST[9] using Pmask$ + " / " + XUNIT$(PR.PFU1[12],CCC) 
Endif ! of matrix prices

If PR.PR_C4[2] = 2  ! ten bkt 
	LET BRD$=" ",BRD$                                                       
	IF PR.B[22]>0 AND PR.B[22]<CHF(BRK) MAT  READ #BRK,PR.B[22],202;BRD$;
	FOR X=1 TO 10
		prices$[x-1] = GetTenBkt(X) using Pmask$ +" / "+ XUNIT$(PR.PFU1[12],CCC)
		IF BRD$[X*10-9,X*10-8]="  "                        
			pricedesc$[x-1] = x USING "BRACKET ##"
		ELSE                                               
			pricedesc$[x-1] = BRD$[X*10-9,X*10]          
		ENDIF                                              
	NEXT X                                                 
Endif ! of ten bkt

p1.BaseUM$     = XUNIT$(PR.PFU1[0],CCC)
p1.StockUM$    = XUNIT$(PR.PFU1[8],CCC)
p1.SellUM$     = XUNIT$(PR.PFU1[9],CCC)
p1.PurchUM$    = XUNIT$(PR.PFU1[10],CCC)
p1.CostUM$     = XUNIT$(PR.PFU1[11],CCC)
p1.PriceUM$    = XUNIT$(PR.PFU1[12],CCC)
p1.ProdsizeUM$ = XUNIT$(PR.PFU1[13],CCC)
p1.PackSize$   = PR.PR_A2$[13,27]
p1.QtyAvailable$=TOTAVL using Qmask$
p1.UnitsMTD$=p1.UnitsMTD$+" "+p1.SellUM$
p1.UnitsYTD$=p1.UnitsYTD$+" "+p1.SellUM$


OutEnd: !===============================================================
Close #CTLC,#WHC,#PRC,#VNC,#CMC,#CTC,#CCC
if region Close #REG
msg$="doing...end of "+pgmName$ \ Call updatelog(debug)
ss=ErrStat
Exit Sub
Else
    ss=SpC(10)
    Call errTrap(pgmName$)
End Try

Function GetTenBkt(bracket1)
	L_5700: REM "================== calc and display bracket price    
	LET BRACKET=BRACKET1                                              
	L_5702: LET B4=(BRACKET*1000)-1000+MUT
	IF B4<0 GOTO L_5750:                                              
	MAT  READ #SPM,B4,0;M5;                                  
	MAT  READ #SPM,B4,10;M6;                                 
	IF BRACKET>1 IF M6[0]=0 LET BRACKET=BRACKET-1 \ GOTO L_5702:      
	LET M7=PR.PR_C4[4]                                                      
	IF WH.W3[18] AND P9$[32,32]="Y" LET M7=WH.W3[18]
	LET CNVTU[0]=0;CNVTU[1]=PR.PFU1[11];CNVTU[2]=2;CNVTA=M7              
	M7=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],CTLC,FLAG)
	FOR M8=0 TO 3
		IF NOT(M6[M8]) GOTO L_5745:
		IF M5[M8] LET M7=M7+(M6[M8])
		IF NOT(M5[M8]) LET M7=M7+(M7*(M6[M8]/100))
	NEXT M8
	L_5745: IF P60$[18,18]="Y" IF PR.PFU1[11]=-1 LET M7=FNF(M7)          
	L_5750: !IF NOT SRC GOSUB L_10000:                                 
	LET CNVTU[0]=PR.PFU1[11];CNVTU[1]=PR.PFU1[12];CNVTU[2]=2;CNVTA=M7
	M7=XAMOUNT(CNVTU[],CNVTA,PR.PFU1[],PR.PFU2[],PR.A[],CTLC,FLAG)
	! PRINT  USING "-$$$$$.## ";@((BRACKET1-1)*12)+8,2;M7 
	! RETURN                                                            
End Function(m7)

Sub updatelog(debug)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " " + msg$ + "'' >> " + dlog$
End Sub       


Sub errTrap(pgmName$)
  msg$="error...",Spc(8)," ",Msc$(2)," at ",Str$(Spc(10))," ",pgmName$
  Call updatelog(1)
End Sub

Function RegionOK(wh$)                     
	region$[1,2] = eccos_region using "##" 
	region$[3,4] = wh$                     
	Search #REG,2,1;region$,rgr,rge        
	if not(RGE) scr = 1 else scr=0         
	if wh$=whse$ scr=1  ! home whse is always ok
End Function scr                           

End Sub
