! >>> Program 114pr
!
! description Salesman/Customer Price Review
!
! loadsave -w -n 100,10 -o prog/dxport/114pr.dl4 src/114pr.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  16:40:19
Rem /w2/papermaster/r2005//usr/acct/rce/work/r2005/mx1/mx114pr.src (univ2) [rce] {46516}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX114pr - CUSTOMER /SALESMAN  PRICE LISTING
Rem AUTHOR: HARRY HENDERSON   NOV 22, 1988
Rem Added Call "Price" and now bedit
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
external lib "ubsfunc.dl4"
declare external sub GetCostLevels,USERCNTRL
declare external function PDate$
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,findf
declare intrinsic function FindChannel
!
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[2]
Com 2%,C4[8]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],BASEX
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
If Err 0 Gosub ERR_TRAP
Def FNS(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .0001)
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
!
! fiber dims
DIM K33$[50],K34$[50],KCUST$[50],1%,TYPE,RB[2],RBL1[1],RBWH,RBUM[1]
DIM 2%,RB1[5],3%,RBCOST,RBSLCOST,RB5[2],RP_COST,SPSLCOST
DIM D6$[20],S8$[5],S7$[5]
DIM UNIT$[4],I$[60]
Dim 1%,prntflag,a5[10],ua2$[50]
DIM 1%,M5[3],M8,F,B3,status
DIM 1%,SPCUM[1],SPC3[2],prcsrc
DIM 2%,Z7[3],M6[3]
DIM 2%,SPC1[5], 3%,W3[24],BRKAMT
DIM 2%,today
DIM 3%,BRACKET1,M7,SPC4[6],SPC5[4],2%,DT,BRKLVL,L6[1]
DIM 3%,Fc5[5]
DIM 3%,B1[9,2],C7,prodsls
dim 3%,rebate_args[10,4],rec_prod,custsalesytd,custcostytd,custsls,custcost
dim 3%,ss2[12,2],SS1[12,2]
DIM BK$[10],U3$[60]
DIM F1$[16]
DIM JDAT$[10]
DIM WH$[2],MSGDESC$[150]
DIM 1%,ARMTH,MTH,BOYMTH,NOMTHS
DIM JRB1[5],JSPC1[5]
!
Dim 1%,SCRN,LJ1,LJ2,LJ9,CUSTVERSN,NONSTK,SPCL,DFT_COST,UMTYPE,COMM_DIGIT
Dim 2%,W2[9],X0,X5,X9,PCTYPE,CONTRACT,P3,I,3%,AMOUNT,R1,E,AMQTY,WEIGHT,PACK
Dim P$[16],C1$[142],A$[156],A3$[30],A2$[30],RETVAL$[512],Z2$[5]
Dim BUNIT$[4],PUNIT$[4],CUNIT$[4],P9$[50],PMASK$[12],EMask$[25],Unit$[4]
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J7$[75],J9$[75]
Dim 1%,LM[1],WHLM[1],BREAKPAGE,PRFLAG,PRCOST,LPEUN[2],X,Y,NSFLG,F7,L9[0]
Dim 1%,C3[4],C5[2],P4[100],P0[100],WHPARC[5],PD1[9],APFLG,CT,F5,WH,LTBL
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],X1[9],PT[37],OTYPE,FLAG,SC,SR,BRK_SLSM
Dim 2%,UNITX,C1[2],B[24],CFC1[12],ARDATE,Z1[1],X2[9],P2[100],DT3[1],JBDATE
Dim 2%,WHBLD[2],W7[14],WHSE,DFWH,PACKUNIT$[4],BDATE[1],EDATE[1],spc1[5]
Dim 2%,Q0[1],D9[20],JEDATE,JWDATE,3%,CURCOST,DEXT,PREC[1],V1,A0[3]
dim 3%,permcost,lastcost
Dim 3%,BRACKET,2%,DT,L6[1],LPR1[3],LPDEPT,DEPT,JDATE[5]
Dim 3%,PF_LOAD2,PERM[1],W3[24],WHLV[2],WHMISC[6],A4,PRPARC[3],LPUNF[6]
Dim 3%,J,X3,X6,T9[20],C2[2],MU,LPC4[3],LPR[4],SGPRICE,lowrebcost
Dim 3%,R[99],FLEPTR[20,1],SPECS[50],4%,J1
Dim P61$[256],3%,LPUNIT[1],UCOST[3],UPCHG[1]
Dim CNAME$[30],KJ2$[20],J3$[40],KJ4$[40],ARDATE$[8],C5$[12],Z1$[50]
Dim S9$[8],A1$[50],S1$[30],K4$[40],K8$[1],EFFDATE$[8],REPDATE$[8]
Dim K1$[50],K2$[20],K3$[20],X$[20],U5$[132],k5$[60]
Dim K6$[12],K7$[12],AUTH$[1],P2$[84],COMM$[4],D$[35],P60$[50],A4$[22]
Dim FSTCOMM$[4],LSTCOMM$[4],MSGDESC$[150],WHPROD$[12],W1$[32]
Dim SORT$[2],VNDNM$[30],K15$[30],BDATE1$[8],EDATE1$[8],QUM$[4]
Dim 1%,ARMTH,MTH,BOYMTH,NOMTHS,CH_CNTRL,CH_LASTPRC,CH_PROD,CH_CUST,CH_BRKTBL
Dim 1%,CH_SPCPRC,CH_SLSM,CH_COMMD,CH_SORT,CH_CNTRTH,CH_DEPT,CH_CCODES
Dim 1%,CH_PRDMRK,CH_ZONE,CH_VEND,CH_SCURR,CH_PRDWHSE,CH_PTYPE,CH_CUSTNOTES
Dim 2%,ARDATE,DMth[25],cndate[1],rcdate[1],SMth[25]
Dim K16$[50],HLD$[50],3%,QTY,LQTY,TYUNIT,LYUNIT,S1[12,2],S2[12,2],A0$[68]
Dim K99$[50],FS$[50],FILE$[75],message$[200],SUNIT$[4]
Dim k9$[50],ksp$[50],krb$[50],HLD1$[50],custom_customer$[30]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[1800],tmp1$[1000],tmp2$[1000],tmp3$[1000],tmp4$[1000],webstr$[256]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$

!
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
CH_CNTRL = 1;CH_LASTPRC = 2;CH_PROD = 3;CH_CUST = 4;CH_BRKTBL = 5;CH_SPCPRC = 6
CH_SLSM = 7;CH_COMMD = 8;CH_SORT = 9;CH_CNTRTH = 10;CH_DEPT = 11;CH_CCODES = 12
CH_PRDMRK = 13;CH_ZONE = 14;CH_VEND = 15;CH_SCURR = 16;CH_PRDWHSE = 17;CH_PTYPE = 18
CH_CUSTNOTES = 19;ch_rebtdetl=20
! - For J = 2 To 99
! -   If J = 9 Goto CNXTFLE
! -   try Close #J else rem
! - CNXTFLE: 
! - Next J
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call UserCntrl(userID$,uA2$,A5[],ss,intCo)
!
For J = 2 To 20
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #CH_CNTRL,88,J1;J$;
  Ropen #J,J$
NXTFLE: Next J
Data "1376","1792","1808","1952","1936","1824","2288","-1","2880","1632","1728","1712","1920"
Data "2400","2016","1744","752","720","320"
!
Mat Read #CH_CNTRL,61,0;P61$;
MAT  READ #ch_cntrl,115,60;CUSTOM_CUSTOMER$;
custom_customer$=UCase$(Trim$(custom_customer$))
Read #CH_CNTRL,51,74;BOYMTH; \ Mat Read #CH_CNTRL,115,0;D9;
Read #CH_CNTRL,0,120;ARMTH; \ MTH = ARMTH
NOMTHS = ARMTH - BOYMTH \ If NOMTHS < 0 Let NOMTHS = NOMTHS + 12
B$=" ",b$ ! big blank string
EMask$="-----------#.##" ! extra large mask for xml data (total $/units)
Mat Read #CH_CNTRL,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let SCRN = Spc(8)
SCRN = 0 \ LJ9 = Chf(0)
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
If SCRN If SCRN <> 49 Goto ERR_TRAP
LJ9 = 62 \ If SCRN Let LJ9 = 22
J8 = SCRN ! std to use j8
JDATE[0] = Tim(6)
Mat Read #CH_CNTRL,0,100;ARDATE$;
Read #CH_CNTRL,0,108;ARDATE;
Read #CH_CNTRL,3;CNAME$;
Mat Read #CH_CNTRL,19,50;P9$;
Mat Read #CH_CNTRL,60,50;P60$;
U5$ = "-",U5$
Let X$=ARDate Using "&&&&&&"
Let ARYear=X$[1,2] ! curr ar year
! SET up a list of months in the salescurr file
FOR X=0 TO 25 \ LET DMTH[X]=0 \ NEXT X                    
LET X7=BOYMTH;X8=0;X9=0 ! start at boy month
FOR I=1 TO 12 
	  If not(x8) ! curr yr
		If BOYMth=1 Let tmp1=ARYear;tmp2=aryear-1
		IF BOYMTH<>1 And BOYMTH>X7 Let tmp1=ARYear-1;tmp2=aryear-2
		IF BOYMTH<>1 And BOYMTH<=X7 Let tmp1=ARyear;tmp2=aryear-1
	  Else  ! last yr
		If BOYMth=1 Let tmp1=ARYear-1;tmp2=aryear-2
		IF BOYMTH<>1 And BOYMTH>X7 Let tmp1=ARYear-2;tmp2=aryear-3
		IF BOYMTH<>1 And BOYMTH<=X7 Let tmp1=ARyear-1;tmp2=aryear-2
	  Endif
		!IF NOT(X9) LET DMTH[I]=X7 ELSE  LET DMTH[I]=0-X7       
		!IF NOT(X8) LET DMTH[I+13]=X7+13 ELSE  LET DMTH[I+13]=X7
		LET DMTH[I]=X7
		LET DMTH[I+13]=X7
		IF X7=ARMTH LET X8=1;X9=1                               
		LET X7=X7+1 \ IF X7=13 LET X7=1
		X=1;x3=1
		if dmth[i]<0 let x=-1
		if dmth[i+13]<0 let x3=-1
		dmth[i]=X*(Abs(dmth[i])+(tmp1/100)) ! now mm.yy
		dmth[i+13]=X3*(Abs(dmth[i+13])+(tmp2/100)) ! now mm.yy
NEXT I
!Call dxsave(0,"tmp/114prin.txt!")
!Call programdump("tmp/114prst!","")
X2 = ARDATE \ Gosub YMD2JUL \ if errFlag = 1 let X2 = Tim(6)
JDATE[1] = X2
If custom_customer$="FPC"
	ardate$="      "
	let ardate$[1,2]=tim(8) using "&&"
	let ardate$[3,4]=tim(9) using "&&" 
	let ardate$[5,6]=tim(10) using "&&"
	let today=ardate$
	READ #1,0,108;DT;
	LET JDAT$=DT USING "&&&&&&" ! \ CALL 25,1,JDATE$,JDATE$,E
	 Call DateToJulian(1,JDAT$,JDAT$,e)
endif
STRTHERE: Rem "================================= get ranges
REPDATE$ = ARDATE$
K8$ = "P";BDATE = 0;EDATE = 999999;JBDATE = 0;JEDATE = 99999
UMTYPE = 1;PRCOST = 0;COMM_DIGIT = 4
CUSTVERSN = 1;K2$ = "C"
PRFLAG = 1;SCOMM = 0
X0 = 0;X5 = 999999;SSLSM = 0;ESLSM = 999
BVEND = 0;EVEND = 999999;VENDFLG = 0
DT = ARDATE;WHSE = 0;BRACKET = -9
NSFLG = 0;INDIVFLG = 0
RETVAL$ = " ",RETVAL$
!
Eflg=0;message$=""

!
gosub BuildFile ! file for individ custs
!
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
!
!dx add xport reporting code
call dxget("indcust",tmp3$)
call dxget("scust",tmp$) \ X0 = tmp$  !Starting Customer 
call dxget("ecust",tmp$) \ if tmp$ = "" let X5 = 999999 else X5 = tmp$ !Ending Customer
call dxget("sslsm",tmp$) \ SSLSM = tmp$ !Starting Salesman
call dxget("eslsm",tmp$) \ if tmp$ = "" let ESLSM = 999 else ESLSM = tmp$ !Ending Salesman
call dxget("svend",tmp$) \  BVEND = tmp$ !Starting Vendor Code
if tmp$<>"" let vendflg=1 ! entered it
call dxget("evend",tmp$) \  if tmp$ = "" let  EVEND = 999999 else EVEND = tmp$ !Ending Vendor Code
if tmp$<>"" let vendflg=1 ! entered it
call dxget("date",tmp1$)    !Effective Date for Pricing
call dxget("sortcmdty",tmp$) \  if tmp$ = "" let SCOMM = 0 else SCOMM = 9! Sort by Commodity Code
call dxget("bracket",tmp$) \  If tmp$ = "   " Let BRACKET = -9 Else Let BRACKET = tmp$
call dxget("whse",tmp$) \  WHSE = tmp$ ! Using "##" !Warehouse !
call dxget("stocks",tmp$) \  if tmp$ = "" let NSFLG = 0 else NSFLG = 1
call dxget("extdtl",tmp$) \ if tmp$="" let PRCOST=0 else let PRCOST = 1 ! existing var
if j8=0 let prcost=0 ! not for file/printer/pdf
if prcost
	call dxget("SSDATE",tmp$) ! send as mm/yy
	clear x1[]
	If BOYMth=1 Let tmp1=ARYear
	IF BOYMTH<>1 And BOYMTH>X7 Let tmp1=ARYear-1
	IF BOYMTH<>1 And BOYMTH<=X7 Let tmp1=ARyear
	if RTrim$(tmp$)="" let tmp$=Str$(BOYMTH)+"/"+str$(TMP1)
	x$=tmp$[1] to "/":x2
	if not(x2)
		eflg=elg+1;message$=message$+" INVALID START DATE FORMAT"
	Else
		x1[0]=x$
		x1[1]=tmp$[x2+1]
	Endif
	call dxget("ESDATE",tmp$)
	if RTRIM$(TMP$)="" LET TMP$=STR$(ARMTH)+"/"+STR$(ARYEAR)
	x$=tmp$[1] to "/":x2
	if not(x2)
		eflg=elg+1;message$=message$+" INVALID END DATE FORMAT"
	Else
		x1[3]=x$
		x1[4]=tmp$[x2+1]
	Endif
	BDATE=X1[0]+(X1[1]/100)
	EDATE=X1[3]+(X1[4]/100)
	x2=x1[1]*100+x1[0] ! yymm - start
	x2[1]=X1[4]*100+x1[3] ! yymm - end
	BDate[1]=x2;EDate[1]=x2[1]
	If x2[1]<x2
		eflg=elg+1;message$=message$+" INVALID SALES DATE RANGE"
	Endif
Endif ! of want sales info (prcost)
!
!Customer
If tmp3$ ! customer selection
  INDIVFLG = 1
  X0 = 0 \ X5 = 999999
  tmp$ = rtrim$(tmp3$)
  nextItem:
  tmp$ = rtrim$(tmp$)
  X2 = 0 \ J$ = tmp$ To "," : X2 
  X$ = " ", X$  \ X$ = tmp$[X2+1]  
  tmp$ = X$,Blank$ 
  J$ = trim$(J$) \ coms = J$ 
  if coms < 0 Or coms > 999999 
	Let message$ =message$+ "Invalid individual customer code, must be between 0 and 999999!" !\ error 10000
	goto outerr
  Endif
  J$ = coms Using "######"
   Search #ChanSort,4,1;J$,R[ChanSort],E \ if e gosub err_search
  ! If E Let e$ = "syserrorfile 114pr sortfile mode (m)=4 keyno (k)=1 r=",R[99]," e=",e," keyval (k$)=",J$ \error 10000
  If X2 Goto nextItem  
else
  If X0 < 0 Or X0 > 999999 
	Let message$=message$+"  Invalid starting customer code, must be between 0 and 999999!" !\ error 10000
	eflg=eflg+1
  Endif
  If X5 < X0 Or X5 > 999999 
	Let message$=message$+"  Invalid ending customer code, must be between starting customer code and 999999!" !\ error 10000
	eflg=eflg+1
  Endif
End If
!
!Salesman
If SSLSM < 0 Or SSLSM > 999 
	Let message$=message$+"  Invalid starting salesman code, must be between 0 and 999!" !\ error 10000
	eflg=eflg+1
  Endif
If ESLSM < SSLSM Or ESLSM > 999 
	Let message$=message$+"  Invalid ending salesman code, must be between starting salesman code and 999!" !\ error 10000
	eflg=eflg+1
  Endif
!
!Vendor code
If BVEND < 0 Or BVEND > 999999 
	Let message$=message$+"  Invalid starting vendor code, must be between 0 and 999999!" !\ error 10000
	eflg=eflg+1
  Endif
If EVEND < BVEND Or EVEND > 999999 
	Let message$=message$+"  Invalid ending vendor code, must be between starting vendor code and 999999!" !\ error 10000
	eflg=eflg+1
  Endif

!!Effective Date for Pricing
if tmp1$ = ""
  tmp2$ = ARDATE Using "######"
else
  tmp2$[1,6] = tmp1$[5,6],tmp1$[1,4]
End if
X2 = tmp2$ \ Gosub YMD2JUL !\ 
if errFlag = 1 
	let message$=message$+"  Invalid Pricing date !!" !\ error 10000
	eflg=eflg+1
  Endif
JDATE[1] = X2
DT = tmp2$ ;X2 = J1 \ Gosub ISDUNPACK \ EFFDATE$ = X$
tmp1$ = ""  \  tmp2$ = ""
!
!validations warehouse
If P9$[32,32] <> "Y"
  WHSE = 0
else
  If WHSE < 0 Or WHSE > D9[5] 
	let message$=message$+"  invalid warehouse !!" !\ error 10000
	eflg=eflg+1
  Endif
end if
!!
!if BVEND = 0 and EVEND = 999999 let VENDFLG = 1
g1=0;g2=0
if prcost
	FOR X=1 TO 25
		IF BDATE=ABS(DMTH[X]) LET G1=X
		IF EDATE=ABS(DMTH[X]) LET G2=X ! cb < start
	NEXT X
	IF NOT(G1) OR NOT(G2)
		EFLG=EFLG+1
		MESSAGE$=message$+" SALES DATES NOT WITHIN RANGE"
	endif
	if eflg goto OutErr ! some bad input
	! ok - align smth into range user selected
	x7=1 ! example 19 to 12 range (7/09 to 12/10)
	x1=1
	for x=1 to 24 ! 24 MONTHS!
		if dmth[x7] ! ignore not set
			x$=Fra(dmth[x7])*100 using "&&"
			X$[3]=Int(DMth[x7]) using "&&"
			x3=x$[1,4]
			if x3<BDate[1] goto smnxt ! before start
			If X3>EDATE[1] goto SMNxt  ! past endmonth/yy
			If x7>13 let smth[x1]=0-dmth[x7] else let Smth[x1]=Dmth[x7]
			x1=x1+1 ! WE'LL use <0 = s2[] >0=s1[]
		Endif
		SMNXT: ! next
		x7=x7+1
		if x7>25 let x7=1
		if x7=13 let x7=14
		if x7=0 let x7=1
	Next x
	SMDone: ! finished
Endif
if eflg goto OutErr ! some bad input
! - okay we're doing this thing
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"114pr",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
!Call programdump("tmp/114prst!","")
STRTPRNT: Rem "========
if J8
  tmp$ = "CUSTOMER #",fdel$
  tmp$ = tmp$ ,"CUSTOMER NAME",fdel$
  tmp$ = tmp$ ,"ADDRESS",fdel$
  tmp$ = tmp$ ,"CITY",fdel$
  tmp$ = tmp$ ,"STATE",fdel$
  tmp$ = tmp$ ,"ZIP",fdel$
  tmp$ = tmp$ ,"CONTACT",fdel$
  tmp$ = tmp$ ,"PHONE",fdel$
  tmp$ = tmp$ ,"FAX",fdel$
  tmp$ = tmp$ ,"SALESPERSON #" ,fdel$
  tmp$ = tmp$ ,"SALESPERSON NAME" ,fdel$
  tmp$ = tmp$ ,"ITEM CODE" ,fdel$
  tmp$ = tmp$ ,"DESCRIPTION",fdel$
  tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$ ,"CURRENT PRICE",fdel$
  tmp$=tmp$,"PRICE UM",fdel$
  tmp$=tmp$,"CONTRACT",fdel$
  if prcost ! jberry wants after contract - moved from below
	tmp$=tmp$,"BCNT DATE",fdel$,"ECNT DATE",fdel$
  Endif
  tmp$ = tmp$ ,"SRC",fdel$
  If COST_LEV[1] let tmp$ = tmp$ ,"COST",fdel$,"COST UM",fdel$,"G/P%" ,fdel$
  tmp$ = tmp$ ,"LAST ORDER",fdel$
  if custom_customer$="MORRISETTE" ! add 4 fields
		tmp$=tmp$,"LAST COST",fdel$,"LC UM",fdel$
		tmp$=tmp$,"LAST SOLD",fdel$,"LS UM",fdel$
  Endif
  tmp$ = tmp$ ,"RBTCONTR",fdel$
  if prcost ! add'l fields
	! tmp$=tmp$,"BCNT DATE",fdel$,"ECNT DATE",fdel$
	tmp$=tmp$,"BRBT DATE",fdel$,"ERBT DATE",fdel$
	hld1$=BDATE using "&&.##";hld1$[3,3]="/"
	x$=hld1$+" - "
	hld1$=EDate using "&&.##";hld1$[3,3]="/"
	x$=x$+Hld1$ ! date range
	tmp$=tmp$,"SALES ",x$,fdel$,"PROD UNITS",fdel$
	tmp$=tmp$,"QTY UM",fdel$ ! jimberry wants 2 columns
	tmp$=tmp$,"SALES RANK",fdel$,"SALES PCT",fdel$
	tmp$=tmp$,"TTL CUST SALES",fdel$
  Endif
  tmp$=tmp$,rdel$
  call addtostr(e$,rstr$,tmp$)
  !call addtostr(e$,rstr$,rdel$)
end if
!
COMM$ = "----" \ DEPT = -9999
Gosub STRTSORT
NUMREC = 0
!If Not(SCRN) Print @0,22;'CL';"Printing... please wait";'CE'; \ Signal 3,0
!If SCRN Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
LJ1 = 90 \ LJ2 = 0
K1$ = " ",K1$;kj4$=" ",kj4$
Kj4$=""
SORTFLE_LOOP: Rem "Loop thru Sorted File
Search #CH_SORT,3,1;K1$,R1,E 
if k1$>"z" let e=2 ! into summ recs
If E = 2 Goto RPTDONE
NUMREC = NUMREC + 1
!If Not(SCRN) And Not(Fra(NUMREC / 250)) Print @40,22;'CL';NUMREC;K1$[1,9]
R[CH_LASTPRC] = R1
If Kj4$<>"" and K1$[4,9] <> KJ4$[1,6] 
  If custom_customer$<>"MORRISETTE"
	Gosub L_8500 ! move to footnote?
  Else
	if lj1+6> lj9 or val(k1$[1,3])<>brk_slsm      ! too near bottom of page
	  let lj1=lj9     ! trip to next page
	else
	  gosub cust_break: ! new cust headings
	endif
  Endif
  gosub ClrSales
Endif
If K1$[29,29] = "*"
  Gosub BLDLP_INFO
Else 
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],0;P$;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],16;C1;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],28;C2;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],46;C3;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],140;LPC4;
  NONSTK = LPC4[3]
  If Not(NSFLG) If NONSTK Goto SORTFLE_LOOP
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],168;LPR;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],198;LPR1;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],214;LPEUN;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],220;LPUNF;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],262;PERM;
  Read #CH_LASTPRC,R[CH_LASTPRC],320;LPDEPT;
  Mat Read #CH_LASTPRC,R[CH_LASTPRC],340;LPUNIT;
End If 
J3$ = " n/a  "
If C3 = 1 Let J3$ = "MATRX"
If C3 = 2 Let J3$ = "CONT"
If C3 = 3 Let J3$ = "PRMO"
If C3 = 4 Let J3$ = "COMD"
if hldc1<>c1[0]
	gosub get_sales ! set up/get sales for this cust all prods in slscurr
	hldc1=c1[0]
Endif
X3 = 0 \ X9 = 0
SGPRICE = 0;CURCOST = 0;permcost=0;lastcost=0
If Not(NONSTK) Gosub GET_PROD
If NONSTK Gosub SETUP_NSTK
Gosub GET_VEND
Gosub PRNTHEDNG
AMQTY = 0;DEXT = 0
If LPR1[0] = 0 Let LPR1[0] = 1
If LPUNF[5] = 0 Let LPUNF[5] = 1
WEIGHT = AMQTY * LPR1[0] / LPUNF[5]
PCTYPE = 0;CONTRACT = 0
Gosub GET_COMMOD
LET LOWREBCOST=0 ! "acme
If Not(NONSTK) Gosub GET_PRICE
If BASEX If BASEX <> X3
  If P61$[58,58] = "U"
    If Not(SPECS[16]) Let X3 = BASEX
  Else 
    X3 = BASEX
  End If 
End If 
L9[0] = PCTYPE
X9 = CONTRACT
If NONSTK
  X3 = C2[1];CURCOST = C2[2]
  If LPUNIT[0] Let UCOST[0] = LPUNIT[0] Else Let UCOST[0] = C2[1]
  If LPUNIT[1] Let UCOST[1] = LPUNIT[1] Else Let UCOST[1] = C2[2]
End If 
If Not(L9[0]) If X3 Let L9[0] = C3[0]
If Not(L9[0]) If X3 Let L9[0] = 1
SPCL = 0
If X9 Let SPCL = 1 ! contract
prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If prcsrc >= 2 And prcsrc <= 4 Let SPCL = 1
If prcsrc >= 6 And prcsrc <= 8 Let SPCL = 1
If prcsrc >= 11 And prcsrc <= 13 Let SPCL = 1
if prcsrc>=15 and prcsrc<=16 let spcl=1
CNVTU[0] = PFU1[18] \ CNVTU[1] = 0;CNVTU[2] = 1;CNVTA = 1
Gosub CONVERT
PACK = AMOUNT
If SPCL If X3 Let SGPRICE = 0;C3[0] = 0
If Not(X3) If C2[1] Let X3 = C2[1];L9[0] = 0
If Not(CURCOST) If C2[2] Let CURCOST = C2[2]
Gosub SETUP_MSG

Gosub PRNTDETL \ L9[0] = 0
let prntflag=1
Goto SORTFLE_LOOP
!
BLDLP_INFO: Rem "======================== build fake lastprice file data
P$ = K1$[14,25]
C1[0] = K1$[4,9]
C1[1] = 0
C1[2] = 0
C2[0] = 0
C2[1] = 0
C2[2] = 0
C3[0] = 0
LPDEPT = 0
C3[2] = 0
C3[3] = 0
C3[4] = 0
LPC4[0] = 0
LPC4[1] = 0
LPC4[2] = 0
LPC4[3] = 0;NONSTK = 0
LPEUN[2] = 0;PERM[0] = 0;PERM[1] = 0
LPUNF[5] = A[5];LPR1[0] = A[6]
LPUNIT[0] = 0;LPUNIT[1] = 0
Return 
!
cust_break: !
if not(j8) and custom_customer$="MORRISETTE"
print #0;""  \ let lj1=lj1+1
! fall into get_customer:
Endif
GET_CUSTOMER: Rem "================================ get customer
KJ4$ = K1$[4,9]
Search #CH_CUST,2,1;KJ4$,R[CH_CUST],E 
If E
  C1$ = "ERROR! ",KJ4$," NOT FOUND!"
  CFC1[7] = 0
  let c1$=" ",c1$
	let a0$=" ",a0$
 FOR CTR=0 TO 5\LET FC5[CTR]=0\NEXT CTR
Else 
  Mat Read #CH_CUST,R[CH_CUST],0;C1$;
  Mat Read #CH_CUST,R[CH_CUST],142;CFC1;
  Mat Read #CH_CUST,R[CH_CUST],194;C5;
  MAT  READ #ch_cust,r[ch_cust],252;fC5;
  Mat Read #CH_CUST,R[CH_CUST],348;A2$;
  Mat Read #CH_CUST,R[CH_CUST],388;A4$;
  Mat Read #CH_PTYPE,CFC1[7],28;PT;
  DFT_COST = PT[0]
  If Not(DFT_COST) Let DFT_COST = P60$[29,29]
  Search #19,2,1;KJ4$,R[CH_CUSTNOTES],E !\ If E > 1 Gosub ERR_SEARCH
  If E
    A0$ = " ",A0$
  Else 
    Mat Read #CH_CUSTNOTES,R[CH_CUSTNOTES],100;A0$;
  End If 
End If 
PRNTCUSTNAME: Rem PRINT
P3 = CFC1[7]
If Not(DFT_COST) Let DFT_COST = P60$[29,29]
!Read #CH_CNTRL,25,(C5[0] - 1) * 16;C5$;
Gosub GET_SLSM
if J8
  tmp3$ = K1$[4,9],fdel$  !customer #
  tmp3$ = tmp3$ ,rtrim$(C1$[31,60]) ,fdel$  !customer name
  tmp3$ = tmp3$ ,rtrim$(C1$[61,90]) ,fdel$  !field1
  tmp3$ = tmp3$ ,rtrim$(C1$[121,135]) ,fdel$  !field2
  tmp3$ = tmp3$ ,rtrim$(C1$[136,137]) ,fdel$  !field3
  tmp3$ = tmp3$ ,rtrim$(A2$[1,10]),fdel$  !field4
  tmp3$ = tmp3$ ,rtrim$(C1$[1,20]) ,fdel$  !contact
  tmp3$ = tmp3$ ,rtrim$(C1$[21,30]) ,fdel$  !phone
  tmp3$ = tmp3$ ,rtrim$(A0$[9,28]) ,fdel$ !fax
else
  if custom_customer$="MORRISETTE"
	if CFC1[2]<>brk_slsm or numrec=0
	   PRINT #0; USING "SALESPERSON ### "; TAB 1;CFC1[2];S1$[1,30]
	   lj1=lj1+1
	   let brk_slsm=cfc1[2]
	endif
	Print #0;"CUSTOMER: ";K1$[4,9];
  Else 
  Print #0;"\12\";"CUSTOMER: ";K1$[4,9];
  Endif
  Print #0; Tab 20;C1$[31,60]
  Print #0; Tab 20;C1$[61,90]; Tab 60;"CONTACT:  ";C1$[1,20]
  Print #0; Tab 20;C1$[121,135]; Tab 37;C1$[136,137]; Tab 41;A2$[1,10];
  Print #0; Tab 60;"PHONE:  ";C1$[21,30]; Tab 90;"FAX:  ";A0$[9,28]
  Print #0;U5$
End if
LJ1 = LJ1 + 4
Return 
!
GET_SLSM: Rem "============================= get salesman
K4$ = " ",K4$
K4$ = CFC1[2] Using "###"
Search #CH_SLSM,2,1;K4$,R[CH_SLSM],E 
If E
	let s1$=" ",s1$
  S1$ = " *** NOT ON FILE ***"
Else 
  Mat Read #CH_SLSM,R[CH_SLSM],0;S1$;
End If 
Return 
!
GET_VEND: Rem "======================= vendor name
If LPC4[1] = 0 Let LPC4[1] = B[24]
If Not(LPC4[1]) Let VNDNM$ = " ",VNDNM$ \ Return 
K15$[1,6] = LPC4[1] Using "######"
Search #CH_VEND,2,1;K15$,R[CH_VEND],E 
If Not(E)
  Mat Read #CH_VEND,R[CH_VEND],0;VNDNM$;
Else 
  VNDNM$ = " ",VNDNM$
  VNDNM$ = "VENDOR NOT ON FILE"
End If 
Return 
!
GET_PROD: Rem "============================== get product
KJ2$ = P$[1,12]
Search #CH_PROD,2,1;KJ2$,R[CH_PROD],E 
If E
  A$ = " ",A$;A$[9,38] = "ERROR! PRODUCT NOT FOUND!"
Else 
  PREC[0] = R[CH_PROD]
  Mat Read #CH_PROD,R[CH_PROD],0;A$;
  Mat Read #CH_PROD,R[CH_PROD],256;A;
  Mat Read #CH_PROD,R[CH_PROD],156;B;
  Mat Read #CH_PROD,R[CH_PROD],512;PFU1;
  Mat Read #CH_PROD,R[CH_PROD],554;PFU2;
  Mat Read #CH_PROD,R[CH_PROD],620;LM;
  Mat Read #CH_PROD,R[CH_PROD],894;C4;
  Mat Read #CH_PROD,R[CH_PROD],938;PF_LOAD2;
  Mat Read #CH_PROD,R[CH_PROD],944;A3$;
  If WHSE Gosub READ_PRDWHSE
  UCOST[1] = B[8]
  CURCOST = B[8]
  LPR1[0] = A[6];LPUNF[5] = A[5]
End If 
If K1$[29,29] <> "*" Goto L_3590
C3[2] = PFU1[9]
C3[3] = PFU1[12]
C3[4] = PFU1[11]
P2$[81,84] = A$[152,155]
LPC4[1] = B[24]
LPC4[2] = B[11]
L_3590: ! sales?? not used
Return
Get_sales: ! build sales for ranking
If Not(PRCOST) Return ! no sales detail wanted
! we go thru all cpsales for cust/prod for unit ranking & ttl sales
! as lpr only has MTD/YTD and he wants month range
K16$ = " ",K16$;K16$[1,6] = C1[0] Using "######" ! ;K16$[7,18] = P$[1,12]
If K16$[1,6] = hld$[1,6] goto L_3690 ! [1,18] = HLD$[1,18] Goto L_3690 ! same cust
TYUNIT = 0;TTUNIT = 0;TTSLS=0;tysls=0
HLD$ = K16$+blank$
SLSCURR_LOOP: Rem "Thru Cust/Prod for TY & LY
Search #CH_SCURR,3,1;K16$,R[CH_SCURR],E 
If E Goto L_3690
If K16$[1,6] <> HLD$[1,6] Goto L_3690
K5$=" ",K5$ ! SEE IF ACTUALLY IN LASTPRICE
K5$[1,12]=k16$[7,18];K5$[21]=K16$[1,6]
search #CH_LASTPRC,2,5;k5$,r,e
if e goto slscurr_loop ! not in lp - ignore it
if hld$[7,18]=blank$[1,12] let hld$[7,18]=k16$[7,18]
If hld$[7,18]<>k16$[7,18] ! prod diff
	!If tysls or tyunit ! <>0 ! ignore "-" sales 
		k9$=" ",k9$;k9$[1,1]="{"
		k9$[2,7]=hld$[1,6] ! cust/prod
		k9$[8,21]=(999999999.99-tysls) using "###########.##"
		k9$[22]=hld$[7,18]
		search #CH_Sort,4,1;k9$,r,e
	!Endif ! can't record all (even 0) need for rank/total
	tyunit=0;tysls=0
	
Endif
hld$=k16$[1,18]
!Hld1$=K16$[7,18]
!gosub get_prod2 ! need conv vars
!R[CH_PROD]=PREC[0] ! reset original
Mat Read #CH_SCURR,R[CH_SCURR],16;S1;
Mat Read #CH_SCURR,R[CH_SCURR],256;S2;
if custom_customer$="FPC" and scomm=0
	MAT  READ #ch_scurr,r[ch_scurr],16;sS1;
	MAT  READ #ch_scurr,R[ch_scurr],256;sS2;
	REM GOSUB L_3720:
	prodsls=prodsls+ss1[0,1]
	custsls=custsls+ss1[0,1]
	custcost=custcost+ss1[0,2]
	LET LYUNIT=LYUNIT+sS2[0,0]
else

	Gosub L_3720
	!CNVTU[0] = 0
		!CNVTU[1] = PFU1[9] ! C3[2]
	!CNVTU[2] = 1 \ CNVTA = TYUNIT
	!Gosub CONVERT \ QTY1 = AMOUNT
	TYUNIT = TYUNIT + QTY ! QTY1
	TTUNIT = TTUNIT + QTY
	tysls=tysls+sales
	TTSLS=TTSLS+Sales
	Goto SLSCURR_LOOP
endif
L_3690: Rem DONE
if HLD$[7,18]<>Blank$[1,12] 
  !if tysls or tyunit ! <>0 ! one last one
	k9$=" ",k9$;k9$[1,1]="{"
	k9$[2,7]=hld$[1,6] ! cust/prod
	k9$[8,21]=(999999999.99-tysls) using "###########.##"
	k9$[22]=hld$[7,18]
	search #CH_Sort,4,1;k9$,r,e
	tyunit=0;tysls=0
  !Endif
Endif
! reread orig prod data
!R[CH_PROD]=PREC[0] ! original
!Mat Read #CH_PROD,R[CH_PROD],256;A;
!  Mat Read #CH_PROD,R[CH_PROD],156;B;
!  Mat Read #CH_PROD,R[CH_PROD],512;PFU1;
!  Mat Read #CH_PROD,R[CH_PROD],554;PFU2;
Return 
!
L_3720: Rem GET ONLY SALES FOR RANGE
QTY = 0;SALES = 0
! months in dmth[]
For I = 1 TO 24 ! G1 To G2
  X=Int(sMTH[i]) ! x is the month in array
  if x<>0 ! is in the file
	if x>0 ! this year
		QTY = QTY + S1[X,0];Sales = Sales + S1[X,1]
	Else ! last year <0
		x=abs(x)  ! -13 ! so corr
		let x=x-1 ! Negs make it 1 month more?
		QTY = QTY + S2[X,0];Sales = Sales + S2[X,1]
	Endif
  Endif ! if <0 hasn't happened
  ! X = X + 1 \ If X > 12 Let X = X - 12
Next I
Return
!
GET_PROD2: Rem "============================== get product
KJ2$ = HLD1$[1,12]
Search #CH_PROD,2,1;KJ2$,R,E 
If Not(E)
  Mat Read #CH_PROD,R,256;A;
  Mat Read #CH_PROD,R,156;B;
  Mat Read #CH_PROD,R,512;PFU1;
  Mat Read #CH_PROD,R,554;PFU2;
Endif
Return
!
GET_PRICE: Rem "Use Call "Price" to get price/cost
For X = 0 To 30 \ SPECS[X] = 0 \ Next X
FLEPTR[1,0] = CH_PROD;FLEPTR[1,1] = R[CH_PROD]
FLEPTR[2,0] = CH_PRDWHSE;FLEPTR[2,1] = R[CH_PRDWHSE]
FLEPTR[3,0] = CH_COMMD;FLEPTR[3,1] = R[CH_COMMD]
FLEPTR[4,0] = CH_LASTPRC;FLEPTR[4,1] = R[CH_LASTPRC]
If K1$[29,29] = "*" Let FLEPTR[4,1] = 0
FLEPTR[5,0] = CH_SPCPRC;FLEPTR[5,1] = 0
FLEPTR[6,0] = CH_CNTRTH;FLEPTR[6,1] = 0
FLEPTR[7,0] = CH_CCODES;FLEPTR[7,1] = 0
FLEPTR[8,0] = CH_BRKTBL;FLEPTR[8,1] = 0
SPECS[0] = 299;SPECS[1] = AMQTY;SPECS[2] = WEIGHT;SPECS[3] = CFC1[1]
SPECS[4] = WHSE;SPECS[5] = DT;SPECS[6] = LPDEPT;SPECS[7] = CFC1[7]
If JDATE[1] > JDATE[0] ! "future eff date
  SPECS[5] = 0 - DT
End If 
SPECS[8] = 1;SPECS[9] = DFT_COST;SPECS[10] = 0;SPECS[11] = 0
SPECS[12] = 0;SPECS[13] = C3[2];SPECS[14] = C3[3];SPECS[15] = C3[4]
SPECS[16] = 0;SPECS[17] = CURCOST;SPECS[18] = 0;SPECS[19] = 0
SPECS[20] = X3
!
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
!
If SPECS[0] <> 0
  SPECS[23] = X3;SPECS[17] = CURCOST
  SPECS[20] = X3
  SPECS[16] = 0;SPECS[40] = 0
End If 
C3[3] = SPECS[14];C3[4] = SPECS[15];CURCOST = SPECS[17]
BASEX = SPECS[20];X3 = SPECS[23];PCTYPE = SPECS[25];CONTRACT = SPECS[27]
LET LOWREBCOST=SPECS[24]
UPCHG[0] = SPECS[16];UPCHG[1] = SPECS[40]
UCOST[0] = SPECS[20];UCOST[1] = SPECS[17]
L9[0] = PCTYPE
prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If prcsrc >= 2 And prcsrc <= 4 Let SPCL = 1
If prcsrc >= 6 And prcsrc <= 8 Let SPCL = 1
If prcsrc >= 11 And prcsrc <= 13 Let SPCL = 1
if prcsrc>=15 and prcsrc<=16 let Spcl=1

If C4[2] = 2 And Not(CONTRACT) And Not(SPCL)
  If BRACKET > 0
    SPECS[11] = BRACKET;SPECS[0] = 3;SPECS[20] = BASEX
	!
	Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
	!
    If SPECS[0] <> 0
      SPECS[17] = CURCOST;SPECS[23] = X3
      SPECS[20] = X3
      SPECS[16] = 0;SPECS[40] = 0
    End If 
    CURCOST = SPECS[17];X3 = SPECS[23];BASEX = SPECS[20]
	LET LOWREBCOST=SPECS[24]
    UPCHG[0] = SPECS[16];UPCHG[1] = SPECS[40]
    UCOST[0] = SPECS[20];UCOST[1] = SPECS[17]
  Else 
    X3 = 0
  End If 
End If 
UCOST[1] = CURCOST
If UPCHG[1]
  If UPCHG[1] < 0
    CURCOST = CURCOST + Abs(UPCHG[1])
  Else 
    CURCOST = CURCOST + (CURCOST * (UPCHG[1] / 100))
  End If 
End If 
Return 
!
L_3800: Rem "==================================== totals
LJ1 = 80
Gosub PRNTHEDNG
Gosub L_8000
Return 
!
SETUP_NSTK: Rem   SET VARIABLES FOR NON STOCKS
A$[9,38] = P2$[21,50]
B[24] = LPC4[1]
A$[93,112] = P2$[1,20]
A$[63,92] = P2$[51,80]
PFU1[18] = 0;PACK = 0;PACKUNIT$ = " ",PACKUNIT$
B[8] = C2[2];CURCOST = C2[2]
A3$[13,27] = " ",A3$[13,27]
TYUNIT = C2[0];LYUNIT = 0
PFU1[0] = LPEUN[0];PFU1[1] = C3[2];PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[9] = C3[2]
PFU1[11] = C3[4]
PFU1[12] = C3[3]
C4[2] = 0
X3 = C2[1]
Mat Read #CH_LASTPRC,R[CH_LASTPRC],220;PFU2;
Mat A = Zer
Return 
!
GET_COMMOD: Rem "================================= get commodity
K3$ = " ",K3$ \ K3$ = A$[152,155]
Search #CH_COMMD,2,1;K3$,R[CH_COMMD],E !\ If E > 1 Gosub ERR_SEARCH
If Not(E)
Else 
  P4[P3] = 0
End If 
Return 
!
SETUP_MSG: Rem "Set up Message used on Print Line (S9$)
S9$ = " ",S9$
let prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If prcsrc = 1 Let S9$ = " MX"
If prcsrc = 2 Or prcsrc = 4 Or prcsrc = 6 Or prcsrc = 12 Or prcsrc = 13 Let S9$ = " CT"
If prcsrc = 3 Or prcsrc = 7 Or prcsrc = 8 Or prcsrc = 11 Let S9$ = " PM"
If prcsrc = 9 Let S9$ = " QB"
If prcsrc = 10 Let S9$ = " DIS"
If prcsrc = 14 Let S9$ = " GTM%"
If prcsrc <= -1 And prcsrc >= -6 Let S9$ = " LP"
If prcsrc = -7 Let S9$ = " MP"
If prcsrc <= -8 And prcsrc >= -17 Let S9$ = " PB"
If SPCL Let S9$ = " SP"
If SGPRICE Let S9$ = " SG"
If prcsrc = 5 Let S9$ = BRACKET Using " 10 B##"
If LPC4[3] Let S9$ = " N/S  "
Return 
!
PRNTDETL: Rem "===================================== print line
IF CUSTOM_CUSTOMER$="FPC" and J8=0 and Scomm=0 goto FPCDTL:
If F7 Let Z1$ = " ",Z1$
T9 = 0
If X3 Let T9 = C2[2] / X3
MU = 0
Gosub CONV_VARS
If UWORK[1] Let MU = FNR((UWORK[1] - UWORK[5]) * 100 / UWORK[1])
if j8
  if prcost
	Gosub prodrank ! get rank from sort
	! trank=x1 ! # of prods for cust
	gosub get_spsales ! get for this prod
	gosub getdates ! dates for contract/rebate
  Endif
  tmp1$ = rtrim$(P$[1,12]), fdel$ !item code
  tmp1$ = tmp1$ ,rtrim$(A$[9,38]),fdel$ ! description
  tmp1$=tmp1$,rtrim$(A$[63,92]) ,fdel$  ! description2
  If Not(X3) Or (C4[2] = 2 And BRACKET = -9)
    tmp1$ = tmp1$ ,"0.00",fdel$,"CALL FOR PRICE" ,fdel$  !current price/UM
	tmp1$=tmp1$,Str$(Contract),fdel$ ! curr contr
	if prcost ! moved from below to after contract
		x$="" \ if cndate[0] let x$=PDATE$(cndate[0])
		tmp1$=tmp1$,x$,fdel$
		x$="" \ if cndate[1] let x$=PDate$(cndate[1])
		tmp1$=tmp1$,x$,fdel$
	Endif
	tmp1$ = tmp1$ ,"",fdel$  !src
  Else
    If UMTYPE = 1 Or UMTYPE = 3
      tmp1$ = tmp1$ ,LTrim$(UWORK[1] Using PMASK$),fdel$,PUNIT$  !current price
    Else
		tmp1$=tmp1$,"",Fdel$ ! NO PRICE? - need delimiter
	End If 
	tmp1$ = tmp1$ ,"",fdel$  !end current price (it's UM)
	tmp1$=tmp1$,Str$(Contract),fdel$ ! curr contr
	if prcost ! moved from below to after contract
		x$="" \ if cndate[0] let x$=PDATE$(cndate[0])
		tmp1$=tmp1$,x$,fdel$
		x$="" \ if cndate[1] let x$=PDate$(cndate[1])
		tmp1$=tmp1$,x$,fdel$
	Endif
    If CUSTVERSN let tmp1$ = tmp1$ ," ",S9$[1,7] ,fdel$ else tmp1$ = tmp1$ ,"",fdel$  !src
  End If 
  If COST_LEV[1] let tmp1$ = tmp1$ ,LTrim$(UWORK[5] Using PMASK$),fdel$,CUNIT$ ,fdel$ 
  If COST_LEV[1] let tmp1$ = tmp1$ ,LTrim$(MU Using "----#.##%"),fdel$  !G/P%
  X2 = C1[2] \ Gosub ISDUNPACK
  tmp1$ = tmp1$ ,X$ ,fdel$  !Last Order
  If custom_customer$="MORRISETTE" ! morrisette fields - add 4 fields
	IF custversn let tmp1$=tmp1$,LTrim$(lastcost USING "#####.##"),fdel$,cunit$,fdel$
	tmp1$=tmp1$,LTrim$(C2[0] USING PMASK$),fdel$,SUNIT$[1,3],fdel$
  Endif
  T9 = 0 \ If X3 Let T9 = FNR((X3 - CURCOST) * 100 / X3)
  let tmp1$ = tmp1$ ,str$(Specs[24]),fdel$ ! else tmp1$ = tmp1$ ,"",fdel$ !Contract
  
  if prcost ! include the rest
	!tmp$=tmp$,"BCDATE",fdel$,"ECDATE",fdel$
	!x$="" \ if cndate[0] let x$=PDATE$(cndate[0])
	!tmp1$=tmp1$,x$,fdel$
	!x$="" \ if cndate[1] let x$=PDate$(cndate[1])
	!tmp1$=tmp1$,x$,fdel$
	!tmp$=tmp$,"BRDATE",fdel$,"ERDATE",fdel$
	x$="" \ if rcdate[0] let x$=PDATE$(rcdate[0])
	tmp1$=tmp1$,x$,fdel$
	x$="" \ if rcdate[1] let x$=PDate$(rcdate[1])
	tmp1$=tmp1$,x$,fdel$
	!tmp$=tmp$,"PROD SALES",fdel$,"PROD UNITS",fdel$
	tmp1$=tmp1$,LTrim$(TYSLS using EMask$),fdel$
	tmp1$=tmp1$,LTrim$(TYUNIT using EMask$),fdel$ ! jb wants 2 columns
	tmp1$=tmp1$,QUM$,fdel$
	!tmp$=tmp$,"UNIT RANK",fdel$,"SALES PCT",fdel$
	tmp1$=tmp1$,Str$(Rank)," of ",Str$(TRank),fdel$
	x3=0
	if TTSLS
		let x3=FNR((TYSLS/TTSLS)*100)
	Endif
	tmp1$=tmp1$,Ltrim$(X3 using "-----#.##%"),fdel$
	!tmp$=tmp$,"TTL CUST SALES",fdel$
	tmp1$=tmp1$,LTrim$(TTSLS Using EMask$),fdel$
  Endif
  !
  tmp$ = tmp3$,tmp2$,tmp1$
  call addtostr(e$,rstr$,tmp$+rdel$)
Else !
  Print #0; Tab 0;P$[1,12];
  Print #0; Tab 14;A$[9,38];A$[63,72];
  Print #0; Tab 56;
  If Not(X3) Or (C4[2] = 2 And BRACKET = -9)
    Print #0;"CALL FOR PRICE ";
	if custom_customer$<>"MORRISETTE" ! custom - no contract
	if contract  print #0; using "######";tab 72; contract; 
	Endif
  Else 
    If UMTYPE = 1 Or UMTYPE = 3
      Print #0; Using PMASK$;UWORK[1];"/";PUNIT$;
    End If
	if custom_customer$<>"MORRISETTE" ! no contr or type
	if contract  print #0; using "######";tab 72; contract;
    If CUSTVERSN Print #0; Tab 79;S9$[1,7];
	Endif
  End If 
  if custom_customer$="MORRISETTE"
	IF COST_LEV[1] PRINT #0; USING PMASK$; TAB 72;uwork[5];"/";CUNIT$; ! "cost 
	IF COST_LEV[1] PRINT #0; USING "---#.##%"; TAB 87;MU; ! "margin ??
	IF custversn print #0;USING "#####.##";tab 95;lastcost;"/";cunit$; 
  Else ! non-custom
	If COST_LEV[1] !
		if custom_customer$="ACME" IF LOWREBCOST PRINT #0; TAB 86;"R";
		Print #0; Using PMASK$; Tab 87;UWORK[5];"/";CUNIT$;
		Print #0; Using "---#.##%"; Tab 104;MU;
	Endif
  Endif ! custom/not
  X2 = C1[2] \ Gosub ISDUNPACK
  if custom_customer$="MORRISETTE"
		print #0;tab(109);x$;
  Else
	Print #0; Tab (114);X$;
  Endif
  T9 = 0 \ If X3 Let T9 = FNR((X3 - CURCOST) * 100 / X3)
  !If CONTRACT Print #0; Using "######"; Tab 125;CONTRACT;
  if custom_customer$="MORRISETTE"
		PRINT #0; USING PMASK$; TAB 117;C2[0];" ";SUNIT$[1,3];
  Else
	If Specs[24] print #0; using "######";tab 125; specs[24]; ! rbt contract
  Endif
  Print #0;" " 
End if !
LJ1 = LJ1 + 1
S9$ = " ",S9$;SPCL = 0;A3$ = " ",A3$;PACKUNIT$ = " ",PACKUNIT$;PACK = 0
Return 
!
PRNTHEDNG: Rem "==================================== headings
if custom_customer$="FPC" and scomm=0 and j8=0 goto FPCHDR:
If LJ1 < LJ9 Return 
!If LJ2 If SCRN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If not(J8) If LJ2 If Not(SCRN) Print #0;"\14\";
LJ2 = LJ2 + 1 \ LJ1 = 10
F7 = 99
If not(J8)
  If Not(SCRN) Print #0;"\12\";
  Print #0; Tab (46 - Len(CNAME$) / 2);CNAME$;
  If WHSE Print #0; Tab 90;"WAREHOUSE";WHSE;
  Print #0; Using "PAGE ####"; Tab 122;LJ2
  If CUSTVERSN And PRFLAG Print #0; Tab 27;"CUSTOMER  PRICING  REVIEW"
End if
Gosub GET_CUSTOMER
Gosub GET_SLSM
If J8
  tmp2$ = CFC1[2],fdel$,rtrim$(S1$[1,30]),fdel$ !salesperson
else
  Print #0; Using "SALESPERSON ### "; Tab 1;CFC1[2];S1$[1,30]
  if custom_customer$="MORRISETTE"
		PRINT #0; TAB 1;"ITEM CODE"; TAB 16;"DESCRIPTION"; TAB 48;
		PRINT #0; TAB 58;"CURRENT PRICE";
		IF COST_LEV[1] print #0;" CURRENT COST CURRENT GP";
		PRINT #0; "  LAST COST ";
		PRINT #0; TAB 108;"LAST DATE"; TAB 119;"LAST QTY SOLD"  !"CONTRACT"
  Else
	PRINT #0; TAB 1;"ITEM CODE"; TAB 14;"DESCRIPTION"; TAB 53;
	PRINT #0; TAB 56;"CURRENT PRICE";
	print #0; tab 71;"CONTRACT";
	PRINT #0; TAB 80;"SRC";
	if cost_lev[1] PRINT #0; TAB 93;"COST"; TAB 106;"G/P%";
	Print #0; Tab (113);"LAST ORDER"; Tab 124;"RBTCONTR"
  Endif ! custom/not
  Print #0;U5$;
  Print #0;" "
End if
Return 
!
FPCDTL: REM "===================================== print line for fpoc
IF NOT (F7) GOTO FPCL_5020:
prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
! GOSUB get_customer:
PRINT #0; USING "###### "; TAB 0;CFC1[1];C1$[31,55];
PRINT #0; using "  YTD SLS -------#.## ";Fc5[3];
if FC5[3]
	PRINT #0; using "    GP %---#.##";fnr((Fc5[5]/Fc5[3])*100);
end if
print #0;""
PRINT #0;" " \ LET lJ1=lJ1+1
FPCL_5020: PRINT #0; TAB 5;P$[1,12]; TAB 20;A$[9,38]; 
print #0; using "--------.##";tab 51;prodsls;
LET X2=C1[2] \ GOSUB ISDUNPACK:  \ PRINT #0; TAB 68;X$;
IF LAST_PR<>X3 PRINT #0; USING "#####.## "; TAB 77;LAST_PR;
PRINT #0; USING "#####.## "; TAB 89;X3;PUNIT$;
IF PERM[0]=0 IF prcsrc=1 OR prcsrc=9 PRINT #0;" S";
IF X3 IF PERM[0]=0 IF prcsrc<>1 AND prcsrc<>9 AND PREM[0]=0 PRINT #0;" C";
IF PERM[0] PRINT #0;" *";
PRINT #0; USING "#####.##"; TAB 106;CURCOST;
IF RBSLCOST PRINT #0;" R";
IF X3 PRINT #0; USING "----.#%"; TAB 117;(X3-CURCOST)/X3*100;
IF CONTRACT PRINT #0; USING "######"; TAB 125;CONTRACT;
PRINT #0;"" \ LET lJ1=lJ1+1
LET F7=0
RETURN 

FPCHDR: REM "==================================== headings for FPC
IF LJ1<LJ9 RETURN 
!IF J2 IF J8 INPUT @0,23;"PRESS <CR> TO CONTINUE "J$ \ PRINT 'CS';
IF LJ2 IF NOT (SCRN) PRINT #0;"\14\";
LET LJ2=J2+1 \ LET LJ1=9
LET F7=99
IF NOT (J8) PRINT #0;"\15\";
PRINT #0; TAB((46-(LEN (CNAME$)))/2);CNAME$;
PRINT #0; USING "PAGE ####"; TAB 122;LJ2
PRINT #0; TAB 34;"CUSTOMER  PRICING REVIEW"
GOSUB get_customer: \ GOSUB Get_Slsm:! L_3105:
PRINT #0; USING "SALESPERSON ### "; TAB 27;CFC1[2];S1$[1,30]
PRINT #0;" "
PRINT #0; TAB 5;"ITEM"; TAB 68;"LAST"; TAB 80;"LAST"; TAB 94;"CURRENT"
PRINT #0; TAB 5;"CODE"; TAB 20;"DESCRIPTION"; tab 54;"YTD SALES";
PRINT #0; TAB 68;"DATE"; TAB 80;"PRICE"; TAB 96;"PRICE";
PRINT #0; TAB 110;"COST"; TAB 119;"GP%"; TAB 124;"CONTRACT"
PRINT #0;U5$
RETURN 

STRTSORT: Rem "================================== sort
K1$ = " ",K1$;Z1 = 0;NUMREC = 0;NumCust=0
!Print @0,22;"Sorting...please wait";'CL';
CLRSORT_LOOP: Rem "Must Clear 1st!
Search #CH_SORT,3,1;K1$,R1,E
If E = 2 Goto CSORTDONE
Search #CH_SORT,5,1;K1$,R1,E \ If E Gosub ERR_SEARCH
!If E Let e$ = "syserrorfile 114pr sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \error 10000
Goto CLRSORT_LOOP
!
CSORTDONE: Rem "Clearing Done, Start Real Sort
K1$ = X0 Using "######"
K99$ = " ",K99$
INDIV_LOOP: Rem   for individual customer selects only
If INDIVFLG
  Search #ChanSort,3,1;K99$,R[ChanSort],E 
  If E = 2 Goto STRTCUSTADD
  K1$ = K99$
  X0 = K99$
End If 
LPRC_LOOP: Rem "thru Last Price
Search #CH_LASTPRC,3,1;K1$,R1,E
If E = 2 Goto STRTCUSTADD
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 250)) Print @40,22;'CL';NUMREC;K1$[1,7]
R[CH_LASTPRC] = R1
Mat Read #CH_LASTPRC,R[CH_LASTPRC],0;P$;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],16;C1;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],28;C2;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],56;P2$;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],140;LPC4;
Mat Read #CH_LASTPRC,R[CH_LASTPRC],340;LPUNIT;
If VENDFLG !or commflg
  IF LPC4[3]=0 ! stock
	  Gosub GET_PROD ! didn't want all vendors?
	  If E Goto LPRC_LOOP
  ELSE ! NONSTK
	B[24]=LPC4[1]
  endif
  If BVEND > B[24] Or EVEND < B[24] Goto LPRC_LOOP
End If 
If Not(NSFLG) If LPC4[3] Goto LPRC_LOOP
X2 = C1[2] \ Gosub YMD2JUL \ if errFlag = 1 let X2 = 0 !!!
JWDATE = X2
If Not(APFLG) If JWDATE < JBDATE Or JWDATE > JEDATE Goto LPRC_LOOP
KJ4$ = C1[0] Using "######"
Search #CH_CUST,2,1;KJ4$,V1,E 
If E Goto LPRC_LOOP
Mat Read #CH_CUST,V1,0;C1$;
If PRINCFLG Mat Read #CH_CUST,V1,486;A0; \ If Not(A0[2]) Goto LPRC_LOOP
If AUTH$ = "Y" And C1$[138,138] <> "Y" Goto LPRC_LOOP
Mat Read #CH_CUST,V1,142;CFC1;
Mat Read #CH_CUST,V1,194;C5;
If CFC1[1] < X0 Goto LPRC_LOOP
If INDIVFLG And CFC1[1] <> X0 ! cust chg
  If prcost
	K9$=" ",k9$;K9$[1,1]="~"
	k9$[2,7]=X0 Using "######"
	K9$[8]=Str$(NumCust) ! # sorted for cust
	SEARCH #ch_SORT,4,1;K9$,r,e
  Endif
	NumCust=0
	Goto INDIV_LOOP
Endif
If CFC1[1] > X5 Goto STRTCUSTADD
If CFC1[2] < SSLSM Goto LPRC_LOOP
If CFC1[2] > ESLSM Goto LPRC_LOOP
if a5[5]<>0
	if cfc1[2]<>a5[5] GOTO LPrc_Loop:   !"cct#242616
endif
A1$ = " ",A1$;A1$[1,3] = CFC1[2] Using "###"
A1$[4,9] = K1$[1,6];A1$[14,25] = K1$[11,22];A1$[26,28] = K1$[8,10];A1$[29,29] = " "
If SCOMM Let A1$[10,13] = P2$[81,84] Else Let A1$[10,13] = "    "
A1$[30,33] = P2$[81,84]
A1$[34,45] = P$[1,12]
!If LPC4[3] = 1 Let A1$[43,50] = K1$[22,29]
IF LPC4[3]=1 LET A1$[44,50]=K1$[23,30] ! non-stock- cct225346
IF CUSTOM_CUSTOMER$="FPC" and Scomm=0
	LET A1$[4,9]=K1$[1,6];A1$[10,21]=10000000-prodsls using "-------##.##"	
	A1$[22,43]=P$[1,12]
	LET A1$[44,50]=K1$[30,35]
	IF LPC4[3]=1 
		LET A1$[44,50]=K1$[23,30] ! non-stock- cct225346
	endif
	a1$[39,42] = k1$[7,10]
endif
R1 = R[CH_LASTPRC]
Search #CH_SORT,4,1;A1$,R1,E \ if e gosub err_search
!If E Let e$ = "syserrorfile 114pr sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",A1$ \error 10000
If Not(Z1) Or Z1 <> CFC1[1] Gosub STRTPRODADD
If Z1 and Z1<>CFC1[1] ! cust change
  If prcost ! only need for browser
	K9$=" ",k9$;K9$[1,1]="~"
	k9$[2,7]=Z1 Using "######"
	K9$[8]=Str$(NumCust) ! # sorted for cust
	SEARCH #ch_SORT,4,1;K9$,r,e
   Endif
	NumCust=0
Endif
NumCust=numcust+1
Z1 = CFC1[1]
Goto LPRC_LOOP
!
STRTCUSTADD: Rem "Add missing Customer if "A"ll Selected
IF PRCOST AND NUMCUST
	K9$=" ",k9$;K9$[1,1]="~"
	k9$[2,7]=Z1 Using "######"
	K9$[8]=Str$(NumCust) ! # sorted for cust
	SEARCH #ch_SORT,4,1;K9$,r,e
	NumCust=0
Endif
If K8$ <> "A" Goto CUSTLOOPDONE ! not gonna happen when K8$="P"
If INDIVFLG Goto CUSTLOOPDONE
K1$ = " ",K1$
If X0 <> 0 Let K1$ = X0 - 1 Using "######"
CUSTFLE_LOOP: Rem "Loop thru Cust File
Search #CH_CUST,3,1;K1$,V1,E 
If E = 2 Goto CUSTLOOPDONE
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 250)) Print @40,22;'CL';NUMREC;K1$[1,7]
Mat Read #CH_CUST,V1,0;C1$;
If AUTH$ = "Y" And C1$[138,138] <> "Y" Goto CUSTFLE_LOOP
Mat Read #CH_CUST,V1,142;CFC1;
If CFC1[1] < X0 Goto CUSTFLE_LOOP
If CFC1[1] > X5 Goto CUSTLOOPDONE
If CFC1[2] < SSLSM Goto CUSTFLE_LOOP
If CFC1[2] > ESLSM Goto CUSTFLE_LOOP
if a5[5]<>0
	if cfc1[2]<>a5[5] GOTO CustFle_Loop:   !"cct#242616  
endif
A1$ = " ",A1$ \ A1$[1,3] = CFC1[2] Using "###"
A1$[4,9] = K1$[1,6]
A1$[10] = ""
Search #CH_SORT,2,1;A1$,R1,E
If E = 0 Goto CUSTFLE_LOOP
A1$ = " ",A1$ \ A1$[1,3] = CFC1[2] Using "###"
A1$[4,9] = K1$[1,6]
Gosub STRTPRODADD
Goto CUSTFLE_LOOP
!
CUSTLOOPDONE: 
Return 
!
STRTPRODADD: Rem "add products from prod file to sort file if "ALL" wanted
If K8$ <> "A" Goto PRODLOOPDONE ! as K8$="P" only - NOT GONNA HAPPEN
K2$ = " ",K2$
PRODFLE_LOOP: Rem "Thru Product File to record all Prods
Search #CH_PROD,3,1;K2$,R[CH_PROD],E 
If E = 2 Goto PRODLOOPDONE
If K2$[1,12] = "Z ZZZZZZZZZZ" Goto PRODFLE_LOOP
NUMREC = NUMREC + 1
!If Not(Fra(NUMREC / 250)) Print @40,22;'CL';NUMREC;K2$
Mat Read #CH_PROD,R[CH_PROD],0;A$;
Z1$ = " ",Z1$ \ Z1$[1,6] = K1$[1,6]
L_6550: 
Search #CH_LASTPRC,3,1;Z1$,V1,E 
If E Goto L_6600
If Z1$[1,6] = K1$[1,6] If Z1$[11,22] = K2$ Goto PRODFLE_LOOP
If Z1$[1,6] = K1$[1,6] Goto L_6550
L_6600: If SCOMM Let A1$[10,13] = A$[152,155]
A1$[14,25] = K2$
A1$[29,29] = "*"
R1 = R[CH_PROD]
Search #CH_SORT,4,1;A1$,R1,E \ If E Gosub ERR_SEARCH
!If E Let e$ = "syserrorfile 114pr sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",A1$ \error 10000
Goto PRODFLE_LOOP
!
PRODLOOPDONE: Rem
Return 
!
L_8000: Rem FOOT NOTE
if J8 return 
if custom_customer$="ACME" IF CustVersn RETURN  ! "acme unrem
!
Print #0; Tab 2;" The following codes may appear next to the price :"
Print #0; Tab 5;" CT - CONTRACT ."
Print #0; Tab 5;" DIS - DISCOUNT ."
Print #0; Tab 5;" GTM% - MANUAL GTM % price ."
Print #0; Tab 5;" LP - MANUAL LIST PRICE entry ."
Print #0; Tab 5;" MP - MANUAL PRICE entry ."
Print #0; Tab 5;" MX - MATRIX price ."
Print #0; Tab 5;" PB - MANUAL PRICE BRACKET entry ."
Print #0; Tab 5;" PM - PROMOTION ."
Print #0; Tab 5;" QB - QUANTITY BREAK available ."
Print #0; Tab 5;" SG - SUGGESTED Price/Last price was manual ."
Print #0; Tab 5;" SP - SPECIAL PRICE due to prior agreement "
Print #0; Tab 5;" 10 B - Ten Bracket price  ."
Print #0; Tab 5;" 10 B SP  - Ten Bracket  special price ."
Return 
!
READ_PRDWHSE: Rem GET WHSE INFO
WHPROD$[1,12] = A$[140,151]
WHBLD[0] = CH_PRDWHSE;WHBLD[1] = WHSE;WHBLD[2] = 0
Call "GETWHSE.dl4",WHPROD$,WHBLD[],W1$,W3[],WHPARC[],WHLV[],W7[],WHMISC[],E,e$,rstr$
R[CH_PRDWHSE] = WHBLD[2]
If R[CH_PRDWHSE] > 0
  Mat Read #CH_PRDWHSE,R[CH_PRDWHSE],38;W2;
  Mat Read #CH_PRDWHSE,R[CH_PRDWHSE],842;WHLM;
End If 
B[8] = W3[17];B[10] = W3[16];B[21] = W3[15];B[22] = WHPARC[0]
C4[3] = WHPARC[1];C4[4] = W3[18];PF_LOAD2 = W3[14]
If W2[3] Let B[24] = W2[3]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
L_8500: Rem "================================= footnote space
If CUSTVERSN Let LJ1 = 99 \ Return 
If SCRN Goto L_8600
If LJ1 >= 50 Goto L_8600
For F5 = LJ1 To 49
  if not(j8) Print #0;" "
Next F5
L_8600: 
LJ1 = 999
Return 
!
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
! - JUL2DATE: Rem REM DATE JULIAN X2 TO X$
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
errFlag = 0
If X2 <= 0 let errFlag = 1 \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1 \ Return 
X2 = X$[1,5]
Return !1
!
! - JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
! - DT3[0] = X2;DT3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
CONV_VARS: Rem CONVERT
X6 = X3
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
X3 = X3 - L6[1]
If L6[0] Let X3 = X3 - (X3 * (L6[0] / 100))
X6 = X3;UWORK[2] = X6
CNVTA = X3
Gosub CONVERT
UWORK[1] = FNP(AMOUNT)
CNVTA = CURCOST \ Gosub CONVERT
UWORK[5] = FNP(AMOUNT)
LET CNVTA=perm[1] \ GOSUB CONVERT 
LET permcost=FNP(AMOUNT)
LET CNVTA=c2[2] 
GOSUB CONVERT
LET lastcost=FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1
CNVTA = C2[0]
Gosub CONVERT
C2[0] = AMOUNT
IF C3[2]>0 MAT  READ #CH_CCODES,C3[2],10;SUNIT$;
If C3[3] > 0 Mat Read #CH_CCODES,C3[3],10;PUNIT$;
C3[4] = C3[3]
If C3[4] > 0 Mat Read #CH_CCODES,C3[4],10;CUNIT$;
If PFU1[0] > 0 Mat Read #CH_CCODES,PFU1[0],10;BUNIT$;
If PFU1[18] > 0 Mat Read #CH_CCODES,PFU1[18],10;PACKUNIT$;
If C3[3] = -1 Let PUNIT$ = "CWT "
If C3[3] = -2 Let PUNIT$ = "LOT "
If C3[3] = -3 Let PUNIT$ = "LB  "
If C3[4] = -1 Let CUNIT$ = "CWT "
If C3[4] = -2 Let CUNIT$ = "LOT "
If C3[4] = -3 Let CUNIT$ = "LB  "
If PFU1[0] = -1 Let BUNIT$ = "CWT "
If PFU1[18] = -1 Let PACKUNIT$ = "CWT "
If PFU1[18] = -2 Let PACKUNIT$ = "LOT "
If PFU1[18] = -3 Let PACKUNIT$ = "LB  "
CNVTU[0] = 0
CNVTU[1] = C3[4]
CNVTU[2] = 2
CNVTA = C2[2]
Gosub CONVERT
UWORK[3] = FNP(AMOUNT)
CNVTU[0] = 0
CNVTU[1] = C3[3]
CNVTU[2] = 2
CNVTA = C2[1]
Gosub CONVERT
UWORK[4] = FNP(AMOUNT)
!CNVTU[2] = 1 \ CNVTA = TYUNIT
!Gosub CONVERT \ TYUNIT = AMOUNT
!CNVTA = LYUNIT \ Gosub CONVERT
!LYUNIT = AMOUNT
if custom_customer$="FPC" and scomm=0
	wk=k1$[10,21]
	prodsls=10000000-wk
endif
Return 
!
GET_SUGGPRICE: Rem CALCULATE SUGGESTED PRICE
SGPRICE = 0;L9[0] = 0
Return 
!
If Not(C2[1]) Or Not(C2[2]) Goto L_12160
SGPRICE = CURCOST
SGPRICE = SGPRICE + (SGPRICE * ((C2[1] - C2[2]) / C2[2]))
L_12160: Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA;B[8] = W3[17]
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA;PF_LOAD2 = W3[14]
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
L_24800: Rem Valid unit for product (special price)?
For X = 0 To 7
  If UNITX = PFU1[X] Return 1
Next X
Return 
!
ClrSales: ! cust change clear sales
K9$=" ",k9$
k9$[1,1]="{"
Cslloop: ! 
search #CH_Sort,3,1;k9$,R,e
if k9$[1,1]>"}" return ! don't clear cust ttls
if e return
search #CH_Sort,5,1;k9$,R,E
goto cslloop

Prodrank: ! 
Rank=0 ! none
if not(prcost) return
! 1st get total prods
K9$=" ",k9$;k9$[1,1]="~"
K9$[2,7]=C1[0] using "######";k9$[8]=""
Search #Ch_sort,2,1;K9$,R,E
Let TRank=k9$[8]
k9$=" ",k9$;k9$[1,1]="{"
k9$[2]=C1[0] using "######"
! K9$[8]="}}";rank=0;x1=0
Rank=0;x1=0
gprank: ! get prod/rank - start last to first (High to low)
search #CH_Sort,3,1;k9$,R,E
if e or k9$[1,1]<>"{" return
x2=k9$[2,7] \ if x2<>c1[0] goto gprank
x1=x1+1
if k9$[22,33]=p$[1,12] 
	let rank=x1 ! ! match prod - as highest first, that's rank
	! Return ! done ! not done - get number of prods for customer!
Endif
goto gprank
!
getdates: ! get contract/rebate dates
CLEAR CNdate[]
clear rcdate[]
CONTR=SPECS[27];PTYPE=SPECS[25]
RCONTR=SPECS[24] ! as we just called price!
if contr gosub get_spdata
if rcontr gosub get_rbtdata
Return
GET_SPDATA: ! get start / end date from specprice
KSP$=B$
!IF CONTR[state]<0 ! SPECIAL - we don't do specials only contracts
!	X1=ABS(CONTR[state]) ! TYPE
!	IF X1=3 OR X1=7 OR X1=8 OR X1=11 ! PROMOTIONS
!		KSP$[1,6]="999999"
!	Else
!		ksp$[1,6]=C1[1] using "######"
!	Endif
!Else ! contract #
	ksp$[1,6]="C"+Contr Using "#####"
	x1=PType ! passed
!Endif
! types product,commodity,size,all
if x1 ! have a sp type
  if x1=2 or x1=3 or x1=13 let x=1
  if x1=4 or x1=7 let x=2
  if x1=11 or x1=12 let x=3
  if x1=6 or x1=8 let x=4
  if x=1 let ksp$[7]=A$[140,151] ! prod
  if x=2 let ksp$[7]="*"+a$[152,155] ! comm
  IF X=3 ! size
		UNITM = PFU1[19];UNIT$ = " ",UNIT$
		If UNITM > 0 Mat Read #CH_CCODES,UNITM,10;UNIT$;
		KSP$[7,7] = "&"
		KSP$[8,11] = UNIT$[1,4];KSP$[12,15] = UNITM Using "####";KSP$[19] = ""
  Endif
  if x=4 let ksp$[7]="#"+b$ ! all
End if ! know type
Search #CH_SPCPRC,2,1;ksp$,R[1],E
If E return
mat read #CH_SPCPRC,r[1],12;spc1;
cndate[0]=spc1[2];cndate[1]=spc1[4]
Return
GET_RBTDATA: ! get start / end date from rebates
krb$=B$
KRB$[1,6]=RContr using "######"
! 3 types - 1=prod, 2=commod, 3=all
for x=1 to 3
	if x=1 let KRB$[7]=A$[140,151] ! prod
	if x=2 let KRB$[7]="*"+a$[152,155] ! comm
	if x=3 let KRB$[7]="#"+b$ ! all
	search #ch_rebtdetl,2,1;krb$,r[2],e
	if not(e) goto Gotrbt
Next x
return
gotrbt: ! got it
mat read #ch_rebtdetl,r[2],12;spc1;
RCDATE[0]=spc1[2];RCDATE[1]=spc1[4]
Return
!
Get_SPsales: ! get product sales
If Not(PRCOST) Return ! no sales detail wanted
! we go thru cpsales for cust/prod for unit & ttl sales
K16$ = " ",K16$;K16$[1,6] = C1[0] Using "######";K16$[7,18] = P$[1,12]
If K16$[1,18] = HLD1$[1,18] Goto SPSDone ! same cust/prod
TYUNIT = 0;TYSLS=0
HLD1$ = K16$+blank$
SPSLSCURR_LOOP: Rem "Thru Cust/Prod for TY & LY
Search #CH_SCURR,3,1;K16$,R[CH_SCURR],E 
If E Goto L_3690
If K16$[1,18] <> HLD1$[1,18] Goto SPSDone ! diff cust/prod

Mat Read #CH_SCURR,R[CH_SCURR],16;S1;
Mat Read #CH_SCURR,R[CH_SCURR],256;S2;
Gosub L_3720
TYUNIT = TYUNIT + QTY
TYSLS=TYSLS+Sales
Goto SPSLSCURR_LOOP
SPSDone: ! convert units to lp um sell
CNVTU[0] = 0
CNVTU[1] = C3[2]
CNVTU[2] = 1 \ CNVTA = TYUNIT
Gosub CONVERT \ TYUNIT = AMOUNT
If C3[2] > 0 Mat Read #CH_CCODES,C3[2],10;QUM$;
If C3[2] = -1 Let QUM$ = "CWT "
If C3[2] = -2 Let QUM$ = "LOT "
If C3[2] = -3 Let QUM$ = "LB  "
Return ! done
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB !!!If Spc(4) > 1280 Goto CVTSTARTB
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
! - CVTTRY: Rem "this is a remark
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !\ Gosub ERR_SEARCH!!!!
! - If X1 <> Spc(6) Goto CVTTRY
! - If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
! - Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG ! \ ERROR 11000 ! Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
!
BuildFile:
BUILD_SORT: Rem
FS$ = "6/SORTWORKCUST",UserID$
FILE$ = "[1:1] ",FS$,"!"
try kill FS$ else rem
ChanSort=FindChannel()
Build #ChanSort,FILE$
R[ChanSort] = 5 \ Search #ChanSort,0,1;FS$,R[ChanSort],E \ If E let message$="Can't build ",FS$ \ goto OutErr ! error 10000
R[ChanSort] = 1 \ Search #ChanSort,0,0;FS$,R[ChanSort],E \ If E let message$="Can't build ",FS$ \ goto OutErr !error 10000
R[ChanSort] = 0 \ Search #ChanSort,1,0;FS$,R[ChanSort],E \ If E let message$="Can't build ",FS$ \ goto OutErr !error 10000
return
! move all rem'd stuff to the end!
!Goto STRTPRNT
!  dx end
!Call "ProgDflt","114PR","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!  RETVAL$[1,6] = X0 Using "######"
!  RETVAL$[7,12] = X5 Using "######"
!  RETVAL$[13,15] = SSLSM Using "###"
!  RETVAL$[16,18] = ESLSM Using "###"
!  RETVAL$[19,24] = BVEND Using "######"
!  RETVAL$[25,30] = EVEND Using "######"
!  RETVAL$[31,31] = VENDFLG Using "#"
!  RETVAL$[32,32] = SCOMM Using "#"
!  RETVAL$[33,35] = BRACKET Using "--#"
!  RETVAL$[36,37] = WHSE Using "##"
!  RETVAL$[38,38] = NSFLG Using "#"
!  RETVAL$[39,39] = INDIVFLG Using "#"
!End If 
!X0 = RETVAL$[1,6];X5 = RETVAL$[7,12]
!SSLSM = RETVAL$[13,15];ESLSM = RETVAL$[16,18]
!BVEND = RETVAL$[19,24];EVEND = RETVAL$[25,30]
!VENDFLG = RETVAL$[31,31];SCOMM = RETVAL$[32,32]
!BRACKET = RETVAL$[33,35];WHSE = RETVAL$[36,37]
!NSFLG = RETVAL$[38,38];INDIVFLG = RETVAL$[39,39]
!Gosub PRNTSCRN
!If INDIVFLG Let Y = 2 \ Gosub EDT_FLDS
!Goto STDFINALQ
!EDT_ALL: Rem "change 'em all
!For Y = 2 To 9
!  Gosub EDT_FLDS
!Next Y
!STDFINALQ: Rem "Standard Final Question
!Print @0,22;'CE';"ENTER  #: field  R: reselect all  S: save defaults  P: print  E: end ";
!Input Len 16384 + 2;""Z1$ \ Call String(1,Z1$)
!If Z1$ = "P" Goto STRTPRNT
!If Z1$ = "R" Goto EDT_ALL
!If Z1$ = "E" Goto OUTEND
!If Z1$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for A: all  U: user access only  <CR>: do not save  ";
!  Input Len 16384 + 1;""Z2$ \ Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto STDFINALQ
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "Progdfltw","114PR","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL';
!  Goto STDFINALQ
!End If 
!Y = Z1$
!If Y >= 1 And Y <= 9
!  Gosub EDT_FLDS
!End If 
!Goto STDFINALQ
!EDT_FLDS: Rem "
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On Y Gosub CHAIN114
!On Y - 1 Gosub EDT_CUSTRNG,EDT_SLSMRNG,EDT_VENDRNG,EDT_EFFDATE
!On Y - 5 Gosub EDT_COMMSORT,EDT_DFTBKT,EDT_WHSE,EDT_PRNTNSTK
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!CHAIN114:!Chain "mx114"
!L_31980: Rem
!Return 
!PRNTSCRN: Rem ================================================ screen
!Print 'CS';
!Print @0,0;"MX114PR ";@26,0;"SALESMAN/CUSTOMER PRICE LIST"
!Print @0,2;" 1> <C>ustomer Version  <S>alesperson Version  <O>rder sheet  <P>rice review? P";'CL';
!Print @0,3;'CL';
!Print @18,5;"-STARTING-";@33,5;"-ENDING-"
!Print @0,6;" 2> CUSTOMERS";'CL';@45,6;" 5> EFFECTIVE DATE: "
!Print @0,7;'CL';@48,7;"(for special price calculation)"
!Print @0,8;" 3> SALESPERSONS";'CL';
!Print @0,9;" 4> VENDORS";'CL';
!Print @0,10;'CL';
!Print @0,11;'CL';" 6> SORT BY COMMODITY CODE?";
!Print @0,12;" 7> ENTER BRACKET # TO USE FOR TEN BRACKET PRICES OR <CR> FOR NO PRICE ";
!If P9$[32,32] = "Y"
!  Print @0,13;" 8> ENTER WAREHOUSE TO PRINT FOR, ''0'' FOR MAIN ";'CL';
!Else 
!  Print @0,13;'CL';
!End If 
!Print @0,14;" 9> PRINT NON-STOCKS? (Y/N) ";
!If Not(INDIVFLG)
!  Print Using "######";@21,6;X0;@33,6;X5;
!Else 
!  Print @21,6;"I"
!End If 
!Print Using "######";@21,9;BVEND;@33,9;EVEND
!Print Using "###";@24,8;SSLSM;@36,8;ESLSM;
!X2 = ARDATE \ Gosub ISDUNPACK
!Print @64,6;X$[1,8];
!X$ = "N" \ If SCOMM Let X$ = "Y"
!Print @29,11;X$[1,1];
!If BRACKET <> -9 Print Using "--#";@72,12;BRACKET;
!If P9$[32,32] = "Y"
!  Print Using "##";@48,13;WHSE;
!End If 
!X$ = "N" \ If NSFLG Let X$ = "Y"
!Print @29,14;X$[1,1]
!Return 
!EDT_RPTTYPE: Rem "What Report are we printing
!J0$ = "2 00017802" \ J1$ = "P"
!Gosub ISINPUT 
!If J$ <> "C" And J$ <> "S" And J$ <> "O" And J$ <> "P"
!  J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto EDT_RPTTYPE
!End If 
!K2$ = J$
!If K2$ = "C" If Not(SCRN) Let LJ9 = 62
!If K2$ = "C" Or K2$ = "S" Let CUSTVERSN = 1 \ Chain "mx114"
!If K2$ = "O" Chain "MX114A"
!Return 
!EDT_CUSTRNG: Rem "Customer Range
!J5$ = " <CR> FOR FIRST   I: INDIVIDUAL SELECTS ";J0$ = "1 00062106"
!J1$ = X0 Using "######"
!Gosub ISINPUT
!If J4$[1,1] = "I" Goto INDIV_CUST Else Let X0 = J$ !!!!
!J5$ = " <CR> FOR LAST" \ J0$ = "1 00063306"
!J1$ = X5 Using "######"
!Gosub ISINPUT
!X5 = J$
!If X0 > X5
!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
!  Gosub ISERRMSG \ Goto EDT_CUSTRNG
!End If 
!RETVAL$[1,6] = X0 Using "######"
!RETVAL$[7,12] = X5 Using "######"
!RETVAL$[39,39] = INDIVFLG Using "#"
!Goto DONE_INDIV
!INDIV_CUST: Rem
!INDIVFLG = 1
!J$ = " ",J$
!ASK_AGAIN: Rem
!J1 = 0
!J5$ = "ENTER EACH CUSTOMER NUMBER <CR> WHEN DONE "
!J0$ = "3000063306"
!!Gosub ISINPUT
!If J4$ = "" Goto DONE_INDIV
!Search #99,4,1;J$,R[99],E !\ If E If E > 1 Gosub ERR_SEARCH
!If E Let e$ = "syserrorfile 114pr sortfile mode (m)=4 keyno (k)=1 r=",R[99]," e=",e," keyval (k$)=",J$ \error 10000
!!
!X0 = 0;X5 = 999999
!Goto ASK_AGAIN
!DONE_INDIV: Rem
!RETVAL$[39,39] = INDIVFLG Using "#"
!RETVAL$[1,12] = "            "
!Return 
!EDT_SLSMRNG: Rem "salesman Rnage
!J5$ = "<CR> FOR FIRST";J0$ = "3000032408"
!J1 = SSLSM
!Gosub ISINPUT \ SSLSM = J1
!J5$ = "<CR> FOR LAST" \ J0$ = "3000033608"
!J1 = ESLSM
!Gosub ISINPUT \ ESLSM = J1
!If SSLSM > ESLSM
!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  "
!  Gosub ISERRMSG \ Goto EDT_SLSMRNG
!End If 
!RETVAL$[13,15] = SSLSM Using "###"
!RETVAL$[16,18] = ESLSM Using "###"
!Return 
!EDT_VENDRNG: Rem "Vendor Range
!VENDFLG = 0
!J5$ = "<CR> FOR FIRST";J0$ = "3000062309";J1 = BVEND
!Gosub ISINPUT \ BVEND = J1
!If J4$ <> "" Let VENDFLG = 1
!J5$ = "<CR> FOR LAST";J0$ = "3000063509";J1 = EVEND
!Gosub ISINPUT \ EVEND = J1
!If J4$ <> "" Let VENDFLG = 1
!If BVEND > EVEND
!  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
!  Gosub ISERRMSG \ Goto EDT_VENDRNG
!End If 
!RETVAL$[13,18] = BVEND Using "######"
!RETVAL$[19,24] = EVEND Using "######"
!RETVAL$[31,31] = VENDFLG Using "#"
!Return 
!EDT_EFFDATE: Rem "Effective Date for Pricing
!J5$ = "<CR> FOR DEFAULT DATE" \ J0$ = "5 00086406" \ J1 = DT
!Gosub ISINPUT
!X2 = J1 \ Gosub YMD2JUL \ Goto EDT_EFFDATE
!JDATE[1] = X2
!DT = J1;X2 = J1 \ Gosub ISDUNPACK \ EFFDATE$ = X$
!J5$ = " ",J5$
!Return 
!EDT_COMMSORT: Rem "
!J5$ = "Enter a Y to Sort by Commodity before Product Code"
!J0$ = "6000012911";J1 = SCOMM
!Gosub ISINPUT
!SCOMM = J1
!RETVAL$[32,32] = SCOMM Using "#"
!Return 
!EDT_DFTBKT: Rem "Default 10 Bracket Number
!J0$ = "2 00037212";J1$ = "   ";J5$ = " ",J5$
!If BRACKET <> -9 Let J1$ = Str$(BRACKET)
!Gosub ISINPUT
!If J$ = "   " Let BRACKET = -9 Else Let BRACKET = J$
!RETVAL$[33,35] = BRACKET Using "--#"
!Return 
!EDT_WHSE: Rem "what whse (For Pricing)
!If P9$[32,32] <> "Y" Return 
!J0$ = "3 00024813";J1 = WHSE;J5$ = " ",J5$
!Gosub ISINPUT
!WHSE = J1
!If WHSE < 0 Or WHSE > D9[5] Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto EDT_WHSE
!RETVAL$[36,37] = WHSE Using "##"
!Return 
!EDT_PRNTNSTK: Rem PRINT NON STOCKS Y/N
!J0$ = "6 00012914";J1 = NSFLG;J5$ = " ",J5$
!Gosub ISINPUT
!NSFLG = 0 \ If J1 Let NSFLG = 1
!RETVAL$[38,38] = NSFLG Using "#"
!Return 
!PRINC_RNG: Rem   ====================== price increase question
!Print @0,2;'CE';
!Print @1,5;"Print only customers requiring price increase notification? (Y/N) "
!J5$ = " ",J5$;J0$ = "6 00016805";J1 = 0
!Gosub ISINPUT
!If J1 Let PRINCFLG = 1 Else Let PRINCFLG = 0
!Return 
!
OUTEND: Rem EXIT ROUTINE
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
!try call dxclose() else rem
End 
!Print 'CS'
!Chain "MX000C"
!Stop 
RPTDONE: Rem END OF THIS RANGE
if numrec=0 then cfc1[2]=sslsm  !! set of nothing printed
if prntflag<>0
	Gosub L_3800
endif
!If SCRN Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
OutErr: ! send back message
returnstatus=1 ! always on blockid errors
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
		call AddToStr(e$,rstr$,WebStr$)
		call SetOutPut(e$,rstr$)
End
!
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
message$ = "RETURN STATUS",(E + (CTERR * .001))
message$ = message$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)

Call programdump("tmp/114prse!","")
goto outerr
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
