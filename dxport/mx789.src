! >>> Program mx789
!
! NOTE: THERE *IS* A 789 ALREADY IN ERP (NOTE THE LACK OF "MX").
! THIS VERSION IS CALLED FROM DAYEND
!
! description Inventory Level Report 
! loadsave -w -n 100,10 -o prog/dxport/mx789.dl4 src/mx789.src
!
! ERPScheduler Enabled
!
include "src/copyright.inc"

Declare Intrinsic Sub CheckDigits,FindF,InpBuf,String,Time
!Option Default Dialect IRIS1
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub programdump,env
Declare Intrinsic Function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutPut,CreateNetStatus
Declare External Function getmsg$,expandarray
Rem MX789 - INVENTORY LEVEL REPORT
Rem AUTHOR: DADE   AUG  4, 1994
Rem LAST UPDATE:
Try 
  !Com 1%,EOP
  !Com 2%,intco
  !Com rstr$[5000],Message$[600]
  Enter Message$,INTCO,rstr$,eop
  !If Err 0 Gosub ERR_TRAP
  Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
  Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  Dim usr$[40]
  Dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
  Dim 1%,eflg,ReturnStatus
  Dim 3%,rec_uac
  Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
  Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
  Dim filename$[16],CMD$[50]
  Dim W1$[32],A$[156],P0$[66],P1$[6],A2$[30],UM$[4]
  Dim 1%,W1[2],P1[1],S1[3],URECFLAG,W0[3],ARMONTH,MTHDAYS
  Dim 2%,W2[9],B[24],P2[2],S2[3],D9[5],BDAYS[24],POH0[5]
  Dim 3%,W3[24],WHLV[2],PLV[1],P3[4],S3[5],V9[4],COID,TT
  Dim 3%,DOW[0,9],LAST8WK,POL3[6]
  Dim 4%,AMOUNT
  Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
  Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20],R1,R2,R3,R4,R5,R6
  Dim K1$[50],X$[10],T9$[26],P9$[50],P60$[50],K9$[50],LINE_$[130]
  Dim K7$[6],K8$[12],VENDA$[264],VENDA5$[60],HOLDPROD$[121],K11$[50]
  Dim CNAME$[30],HOLDKEY$[12],K3$[20],K2$[50],K10$[20]
  Dim RETVAL$[512],Z2$[2],J8$[8],BPROD$[12],EPROD$[12]
  Dim 3%
  Dim Blank$[12] \ Blank$ = " ",Blank$
  Dim EndParam$[12] \ EndParam$ = "Z",EndParam$
  LINE_$ = "-",LINE_$
  Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
  call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
  If Not(eop)
    !Call DXOpen() ! needed for dxtest
    !Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
	if erpCron
		call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
	else
		Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,INTCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
	end if
  End If 
  For J = 1 To 11
    If J <> 9
      Try Close #J Else Rem
    End If 
  Next J
  COID = INTCO
  J$ = "cntrl/cntrl" + Str$(COID)
  Open #1,J$
  eflg = 0
  Message$ = ""
  ReturnStatus = 0
  For J = 2 To 10
    Read J1
    If J1 = -1 Goto L_830
    Read #1,88,J1;J$;
    Open #J,J$
L_830: Next J
  Data "1744","1792","2320","2528","1728","2400","2416","-1","2432"
  !TT = Spc(5) \ COID = Int((TT - Int(TT / 16384) * 16384) / 64)
  Ropen #11,"2/weeklysls" + Str$(COID)
  Try Close #90 Else Rem
  filename$ = "6/SORTDAYEND" + Str$(COID)
  Call FindF(filename$,A9)
  If Not(A9)
    CMD$ = "[1:256] ",filename$,"!"
    Build #90,CMD$
    R90 = 25 \ Search #90,0,1;CMD$,R90,E \ If E Gosub ERR_SEARCH
    R90 = 1 \ Search #90,0,0;CMD$,R90,E \ If E Gosub ERR_SEARCH
    Try Close #90 Else Rem                                                          
  End If 
  tmp$ = "chmod go+rw " + filename$
  System tmp$
  Open #90,filename$
  Mat Read #1,0,100;J8$;
  Mat Read #1,19,50;P9$;
  Mat Read #1,115,0;D9;
  Mat Read #1,11,0;BDAYS;
  Read #1,3;CNAME$;
  Mat Read #1,60,50;P60$;
  Read #1,0,120;ARMONTH;
  TODAY = Tim(4)
  MM = Int(TODAY / 10000)
  MTHDAYS = BDAYS[MM]
  !If Err 0 Let SCREEN = Spc(8)
  SCREEN = 0 !\ V9[4] = Chf(0) \ If Err 0 Gosub ERR_TRAP
  !If Err 0 Gosub ERR_TRAP
  !If SCREEN If SCREEN <> 49 Goto ERR_TRAP
  V9[4] = 60 !\ If SCREEN Let V9[4] = 22
  V9[1] = 90 \ PAGE = 0
  If eop <> 0
    BPROD$ = "            "
    EPROD$ = "ZZZZZZZZZZZZ"
    WHSE = 0
    SORTBYBUYER = 0
    SORTBYVEND = 0
  End If 
  If Not(eop)
    !
    BPROD$ = GetParameter$("BPROD") \ BPROD$ = BPROD$,Blank$
    EPROD$ = GetParameter$("EPROD") \ EPROD$ = EPROD$,EndParam$
    tmp$ = GetParameter$("WHSE") \ WHSE = tmp$
    tmp$ = GetParameter$("SORTBYBUYER") \ If tmp$ = "" Let SORTBYBUYER = 0 Else Let SORTBYBUYER = 1
    tmp$ = GetParameter$("SORTBYVEND") \ If tmp$ = "" Let SORTBYVEND = 0 Else Let SORTBYVEND = 1
    tmp$ = GetParameter$("ALLPROD") \ If RTrim$(tmp$) = "A" Let ALLPROD = 1 Else Let ALLPROD = 0
    tmp$ = GetParameter$("SYSFLAG") \ If RTrim$(tmp$) = "S" Let SYSFLAG = 1 Else Let SYSFLAG = 0
    tmp$ = GetParameter$("LDAY") \ If tmp$ = "" Let LDAY = 0 Else Let LDAY = tmp$
    !
    ! product
    If EPROD$ < BPROD$
      eflg = eflg + 1
      Message$ = Message$ + "Invalid ending product code, must be greater than starting product code! " !\ error 10000
    End If 
    !
    ! warehouse
    If WHSE < 0 Or WHSE > D9[5]
      eflg = eflg + 1
      Message$ = Message$ + "Invalid Warehouse, must be between 0 and ",D9[5],"! " ! \ error 10000
    End If 
    !
    ! lead time
    If SYSFLAG = 0
      If LDAY < 0 Or LDAY > 999
        eflg = eflg + 1
        Message$ = Message$ + "Invalid Lead Time, must be between 0 and 999! " !\ error 10000
      End If 
    Else 
      LDAY = 0
    End If 
    !
  End If ! not eop
  If eflg Goto OUTEND
  Goto PRNT_SORT
PRNT_SORT: Rem print the report from sort file
  !If Not(SCREEN) Print @0,22;"Printing, please wait...";
  !If SCREEN Print 'CS';
  !If Err 0 Gosub ERR_ESCAPE
PRNT_LOOP: Rem
  Search #90,3,1;K1$,R1,E
  If E = 2 Goto L_9100
  If E Gosub ERR_SEARCH
  If SORTBYBUYER
    BUYER = K1$[1,3]
  End If 
  If SORTBYVEND
    VENDOR = K1$[4,9]
  End If 
  If HOLDBUYER <> BUYER
    If BUYER Let V9[1] = 90
    HOLDBUYER = BUYER
  End If 
  Gosub GET_PROD
  If Not(FOUNDPROD) Goto PRNT_LOOP
  Gosub L_3500
  AVG = DPL8W / 40
  If SYSFLAG
    LEADDAY = FNR(B[0] * MTHDAYS)
  Else 
    LEADDAY = LDAY
  End If 
  If Not(ALLPROD) If AVAIL >= (AVG * LEADDAY) Goto PRNT_LOOP
  Gosub L_5800
  Gosub L_5000
  Gosub L_2200
  Goto PRNT_LOOP
L_2200: Rem TOTALS CALC
  NUMREC = NUMREC + 1
  Return 
GET_PROD: Rem GET PROD INFO
  K3$ = " ",K3$
  K3$[1,12] = K1$[10,21]
  Search #3,2,1;K3$,R3,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1 Let FOUNDPROD = 0 \ Return 
  Gosub READ_PROD
  FOUNDPROD = 1
  Return 
READ_PROD: Rem
  Mat Read #3,R3,0;A$;
  Mat Read #3,R3,156;B;
  Mat Read #3,R3,256;A;
  Mat Read #3,R3,512;PFU1;
  Mat Read #3,R3,554;PFU2;
  Mat Read #3,R3,944;A2$;
  Mat Read #3,R3,990;PLV;
  Return 
L_3500: Rem UNITS CONVERT
  CNVTU[0] = 0;CNVTU[1] = PFU1[10];CNVTU[2] = 1
  CNVTA = K1$[22,31] \ Gosub L_20000
  DPL8W = AMOUNT
  CNVTA = A[0] - A[3] - A[1] \ Gosub L_20000
  AVAIL = AMOUNT
  CNVTA = A[2] \ Gosub L_20000
  ONPO = AMOUNT
  UM$ = "ERR "
  If PFU1[10] > 0 Read #6,PFU1[10],10;UM$;
  If PFU1[10] = -1 Let UM$ = "CWT "
  If PFU1[10] = -2 Let UM$ = "LOT "
  Return 
L_4000: Rem TOTAL PRINT
  Gosub L_5800
  Print #0;"\15\**  END  ** ";NUMREC;"ITEMS LISTED"
  Return 
PRNT_VENDOR: Rem
  PODATE = 0
  PONUM = 0
  Print #0; Using "######"; Tab 0;"VENDOR:";VENDOR;
  K7$[1,6] = VENDOR Using "######"
  Search #7,2,1;K7$,R7,E
  If Not(E)
    Mat Read #7,R7,0;VENDA$;
    Mat Read #7,R7,576;VENDA5$;
    Print #0; Tab 15;VENDA$[1,30];
  Else 
    Print #0; Tab 15;"VENDOR NOT FOUND";
  End If 
  Print #0; Tab 50;"PHONE #: ";VENDA5$[1,15];
  K10$ = " ",K10$
  K10$[1,6] = R3 Using "######"
POLINE_LOOP: Rem
  Search #10,3,2;K10$,R10,E
  If E Goto END_POLINE_LOOP
  TMPR3 = K10$[1,6]
  If TMPR3 <> R3 Goto END_POLINE_LOOP
  Mat Read #10,R10,24;POL3;
  R8 = POL3[0]
  Mat Read #8,R8,0;POH0;
  If POH0[1] <> R7 Goto POLINE_LOOP
  If Not(PODATE)
    PODATE = POH0[3]
    PONUM = POH0[2]
  End If 
  If POH0[3] > PODATE
    PODATE = POH0[3]
    PONUM = POH0[2]
  End If 
  Goto POLINE_LOOP
END_POLINE_LOOP: Rem
  Print #0; Using "######"; Tab 80;"LAST PO #: ";PONUM;
  X2 = PODATE
  Gosub L_7700
  Print #0; Tab 100;"LAST PO DATE: ";X$
  V9[1] = V9[1] + 1
  Return 
L_5000: Rem PRINT LINE
  If SORTBYVEND
    If HOLDVEND <> VENDOR Or VENDOR = 0
      Gosub PRNT_VENDOR
      HOLDVEND = VENDOR
    End If 
  End If 
  Print #0; Tab 0;A$[140,151];
  Print #0; Tab 13;UM$[1,4];
  Print #0; Tab 18;A$[9,34];
  AVG = DPL8W / 40
  LEADDAY = FNR(B[0] * MTHDAYS)
  Print #0; Using "----,--#.##"; Tab 44;DPL8W;
  Print #0; Using "---,--#.##"; Tab 56;AVG;
  Print #0; Using "####.## DAYS"; Tab 67;LEADDAY;
  Print #0; Using "----,--#.##"; Tab 80;AVAIL;
  Print #0; Using "----,--#.##"; Tab 92;ONPO;
  Print #0; Using "----,--#.##"; Tab 104;AVAIL - AVG * LEADDAY;
  Print #0; Using "----,--#.##"; Tab 116;AVG * 30;
  Print #0; Using "###"; Tab 128;B[11]
  Print #0;""
  V9[1] = V9[1] + 2
  Return 
L_5800: Rem HEADINGS ROUTINE
  V9[1] = V9[1] + 1 \ If V9[1] < V9[4] Return 
  !If PAGE If SCREEN Input @0,23;"PRESS <RETURN> TO CONTINUE "J$ \ Print 'CS';
  If PAGE If Not(SCREEN) Print #0;"\14\";
  PAGE = PAGE + 1 \ V9[1] = 1
  Print #0;"" \ V9[1] = V9[1] + 1
  T9$ = "" \ Call Time(T9$)
  Print #0; Tab 10;J8$; Tab (66 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";PAGE
  V9[1] = V9[1] + 1
  Print #0;" - 789 - ";T9$;
  Print #0; Tab 52;"BUYER LOW STOCK WARNING REPORT"
  V9[1] = V9[1] + 1
  If WHSE Print #0; Tab 51;"WHSE: ";WHSE;
  If Not(WHSE) Print #0; Tab 51;"ALL WHSES";
  If SORTBYBUYER And SORTBYVEND
    Print #0; Tab 61;"SORT BY BUYER AND VENDOR";
  Else 
    If SORTBYBUYER Print #0; Tab 61;"SORT BY BUYER ";
    If SORTBYVEND Print #0; Tab 61;"SORT BY VENDOR";
  End If 
  Print #0;"" \ V9[1] = V9[1] + 1
  If ALLPROD
    Print #0; Tab 51;"FOR ALL PRODUCT";
  Else 
    Print #0; Tab 51;"ONLY ON HAND LESS THAN LEAD DAYS";
  End If 
  Print #0;"" \ V9[1] = V9[1] + 1
  If SORTBYBUYER Print #0; Tab 0;"BUYER: ";BUYER;
  If SYSFLAG
    Print #0; Tab 51;"USE SYSTEM CALCULATED AVG LEAD TIME"
  Else 
    Print #0; Tab 51;"USER ENTERED LEAD TIME"
  End If 
  V9[1] = V9[1] + 1
  Print #0;LINE_$[1,130] \ V9[1] = V9[1] + 1
  Print #0; Tab 0;"ITEM";
  Print #0; Tab 13;"UNIT";
  Print #0; Tab 18;"DESCRIPTION";
  Print #0; Tab 44;"LAST 8";
  Print #0; Tab 56;"AVG";
  Print #0; Tab 67;"LEAD DAYS";
  Print #0; Tab 80;"AVAILABLE";
  Print #0; Tab 92;"ON ORDER";
  Print #0; Tab 102;"ON HAND END";
  Print #0; Tab 116;"30 DAY BUY";
  Print #0; Tab 127;"ABCD"
  V9[1] = V9[1] + 1
  Print #0; Tab 44;"WEEKS";
  Print #0; Tab 56;"DAYS";
  Print #0; Tab 102;"OF LEAD DAYS";
  Print #0; Tab 127;"CODE"
  V9[1] = V9[1] + 1
  Print #0;" " \ V9[1] = V9[1] + 1
  Return 
  X$ = " ",X$ \ X$[10] = ""
  X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
  X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
  X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
  X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
  Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
  If CNVTU[2] = 3 Goto L_20050
  If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
  If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
  If CNVTU[2] = 0 Goto L_20050
  If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! If Spc(4) > 1280 Goto L_20120
  !Swap 1,"MXPRCONV"
  !If CNVTU[2] = 3 Goto L_20160
  !L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
  !If X1 <> Spc(6) Goto L_20080
  !If CNVTU[2] = 0 Goto L_20160
  !If FLAG Let E = FLAG \ Gosub ERR_SEARCH
  !Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
  Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
  If CNVTU[2] = 0 Goto L_20160
  If FLAG Let E = FLAG \ Gosub ERR_SEARCH
  AMOUNT = CNVTA
L_20160: Return 
PRODSCAN: Rem CALL TO SCANS
  If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
  If J4$[1,1] >= "A" If J4$[1,1] <= "Z" Return 1
  Call "MXPROD5",J4$,WH,CUST
  Return 
DO_SORT: Rem cct170158 sort by buyer and vendor
  K11$ = " ",K11$
  K9$ = " ",K9$
CLEAR_SORT: Search #90,3,1;K9$,R9,E
  If E = 2 Goto START_SORTLOOP
  Search #90,5,1;K9$,R9,E
  If E Gosub ERR_SEARCH
  Goto CLEAR_SORT
START_SORTLOOP: Rem
  If YY > 79
    K11$[1,4] = 1900 + YY Using "####"
  Else 
    K11$[1,4] = 2000 + YY Using "####"
  End If 
  If WEEKNUM - 8 > 0
    K11$[5,6] = WEEKNUM - 8 Using "##"
  Else 
    K11$[1,4] = 2000 + YY - 1 Using "####"
    K11$[5,6] = 52 - 8 + WEEKNUM Using "##"
  End If 
  Print @0,22;"Sorting, please wait...";
SORT_LOOP: Rem
  Search #11,3,1;K11$,R11,E \ If E = 2 Goto END_SORTLOOP
  If E Gosub ERR_SEARCH
  WHSENUM = K11$[21,22]
  If WHSE If WHSENUM <> WHSE Goto SORT_LOOP
  CUST = K11$[23,28]
  If CUST Goto SORT_LOOP
  If K11$[7,6 + Len(BPROD$)] < BPROD$ Goto SORT_LOOP
  If K11$[7,6 + Len(EPROD$)] > EPROD$ Goto END_SORTLOOP
  YNUM = K11$[1,4]
  WKNUM = K11$[5,6]
  If YNUM = YY + 2000 If WKNUM > WEEKNUM Goto END_SORTLOOP
  K3$ = " ",K3$
  K3$[1,12] = K11$[7,18]
  Search #3,2,1;K3$,R3,E \ If E > 1 Gosub ERR_SEARCH
  If E Goto SORT_LOOP
  Mat Read #3,R3,156;B;
  WHSENUM = K11$[21,22]
  If WHSE If WHSENUM <> WHSE Goto SORT_LOOP
  K2$ = " ",K2$
  K2$[1,12] = K11$[7,18]
  Search #2,3,1;K2$,R2,E \ If E > 2 Gosub ERR_SEARCH
  If E Goto SORT_LOOP
  If K2$[1,12] <> K11$[7,18] Goto SORT_LOOP
  WHSENUM = K2$[13,14]
  If WHSE If WHSENUM <> WHSE Goto SORT_LOOP
  Mat Read #2,R2,32;W1;
  Mat Read #11,R11,20;DOW;
  If Not(SCREEN)
    PCTR = PCTR + 1
    If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
  End If 
  Gosub INSERT_KEY
  Goto SORT_LOOP
END_SORTLOOP: Rem
  Return 
INSERT_KEY: Rem
  COUNT = 0
  If Not(SORTBYBUYER) Let W1[2] = 0
  If Not(SORTBYVEND) Let B[24] = 0
  If SORTBYBUYER And SORTBYVEND
    K9$ = " ",K9$
    K9$[1,3] = W1[2] Using "###"
    K9$[4,9] = B[24] Using "######"
  Else 
    K9$ = " ",K9$
    If SORTBYBUYER Let K9$[1,3] = W1[2] Using "###"
    If SORTBYVEND Let K9$[4,9] = B[24] Using "######"
  End If 
  K9$[10,21] = K11$[7,18]
INSERT_LOOP: Rem
  Search #90,3,1;K9$,R9,E
  If E > 2 Gosub ERR_SEARCH
  If COUNT Return 
  If E
    If SORTBYBUYER And SORTBYVEND
      K9$ = " ",K9$
      K9$[1,3] = W1[2] Using "###"
      K9$[4,9] = B[24] Using "######"
    Else 
      K9$ = " ",K9$
      If SORTBYBUYER Let K9$[1,3] = W1[2] Using "###"
      If SORTBYVEND Let K9$[4,9] = B[24] Using "######"
    End If 
    K9$[10,21] = K11$[7,18]
    LAST8WK = DOW[0,1]
    K9$[22,31] = LAST8WK Using "##########"
    R9 = R11
    Search #90,4,1;K9$,R9,E \ If E Gosub ERR_SEARCH
    COUNT = COUNT + 1
  Else 
    TBUY = K9$[1,3] \ TVEND = K9$[4,9]
    HOLDPROD$[1,12] = K11$[7,18]
    If TBUY = W1[2] If TVEND = B[24] If HOLDPROD$[1,12] = K9$[10,21]
      LAST8WK = K9$[22,31]
      Search #90,5,1;K9$,R9,E \ If E Gosub ERR_SEARCH
      LAST8WK = LAST8WK + DOW[0,1]
      K9$[22,31] = LAST8WK Using "##########"
      Search #90,4,1;K9$,R9,E \ If E Gosub ERR_SEARCH
      COUNT = COUNT + 1
    End If 
  End If 
  Goto INSERT_LOOP
  Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
  X$ = " ",X$ \ X$[10] = ""
  X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
  X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
  X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
  X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
  If Not(X2) Let X$ = "        "
  Return 
DO_CALC: Rem First get julian date from 4800BC (it's a math thing)
  TODAY = Tim(4)
  MM = Int(TODAY / 10000)
  DD = Int((TODAY - MM * 10000) / 100)
  YY = TODAY - MM * 10000 - DD * 100
  A = Int((14 - MM) / 12)
  If YY > 79
    Y = 1900 + YY + 4800 - A
  Else 
    Y = 2000 + YY + 4800 - A
  End If 
  M = MM + (12 * A) - 3
  JD = DD + Int((153 * M + 2) / 5) + (365 * Y) + Int(Y / 4) - 32083
  JD = JD - 13
  D4 = (JD + 31741 - (JD Mod 7)) Mod 146097 Mod 36524 Mod 1461
  L = Int(D4 / 1460)
  D1 = ((D4 - L) Mod 365) + L
  WEEKNUM = Int(D1 / 7) + 1
  Return 
ERR_SEARCH: Rem
  ENUM = E;ELINE = Spc(16);CTERR = 0
  If E = 5 Let CTERR = Err(8)
  msg$ = "RETURN STATUS",(E + (CTERR * .001))
  msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
  e$ = msg$ \ Error 10000
  Return ! End
L_9100: Rem END
  Gosub L_4000
  Goto OUTEND ! If EOP Goto L_9120
OUTEND: Rem EXIT
  !Print 'CS'
  !Close 
  !Chain "MX000"
  !Stop 
  Try Close #90 Else Rem
  filename$ = "6/SORTDAYEND" + Str$(COID)
  Call FindF(filename$,A9)
  If A9 <> 0
    Try Kill filename$ Else Rem
  End If 
  If eop <> 0
    For X = 2 To 99
      If X <> 9
        Try Close #X Else Rem
      End If 
    Next X
  End If 
  If eop = 0
    Call AddToStr(e$,rstr$,esdel$) !end section -- DXBLOCK 
    ReturnStatus = 0
    If eflg > 0
      ReturnStatus = 1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
      tmp$ = ""
    End If 
    If Not(eflg) And Message$ = ""
      Message$ = "Report Complete. "
    End If 
    Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
    Call AddToStr(e$,rstr$,WebStr$)
    Call SetOutPut(e$,rstr$)
    if eflg = 0 call ERPCronSuccess()
    Try Call dxclose() Else Rem
  End If 
Else 
  include "src/callmainerrnet.inc"
 End Try 
End ! the whole program
