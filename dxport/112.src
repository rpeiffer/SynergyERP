!>>> Program 112
!
! description CUSTOMER MESSAGE PRINT 
!
! loadsave -w -n 100,10 -o prog/dxport/112.dl4 src/112.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  2, 2004  11:38:05
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/mx1/mx112.src (univ2) [mary] {29683}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX112 - CUSTOMER MESSAGE PRINT
Rem AUTHOR: UBS   SEP 15, 1986
Rem LAST UPDATE:
!
Declare Intrinsic Sub InpBuf,JulianToDate,String,Time
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim C1$[142],C2$[10],A0$[28],A1$[50],A2$[50]
Dim C3$[6],CA2$[30],W$[30],B1$[30]
Dim 2%,C1[12],X,ODATE,COID
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8],ARTERM$[16]
Dim 1%,F,X1,C7[4],C2[2],2%,X2,3%,J,X3,T9[20],C12[0]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],P9$[15],U5$[50]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For J = 2 To 4
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
!!J$ = COID Using "2/ARTERMCODE#" \ Ropen #15,J$
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
Data "1808","720","1920"
Mat Read #1,19,50;P9$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) !!\ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 50 \ If J8 Let J9 = 18
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
J$ = intCo Using "2/ARTERMCODE#" \ Ropen #15,J$
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"112",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("OPPRINT",tmp$) \ D9 = tmp$
call dxget("SCODE",K2$) 
call dxget("ECODE",K3$) 
!
If P9$[15,15] <> "Y" Let D9 = 1 
If D9 = 2 Let D9 = 3
!
If D9 = 3 
  K2$[1,6] = K2$,Blank$ \ K3$[1,6] = K3$,EndParam$
  If K3$ < K2$ Let e$ = "Invalid starting customer order, must be >= than starting customer order!" \ error 10000
Else
  If K3$ = "" Let K3$ = "999999"
  X3 = K2$ \ K2$ = X3 Using "######" 
  X2 = K3$ \ K3$ = X2 Using "######"
  if X3 < 0 or X3 > 999999 let e$="Invalid starting customer order, must be between 0 and 999999!" \ error 10000
  if X2 < X1 or X2 > 999999 let e$="Invalid ending customer order, must be between starting customer order and 999999!" \ error 10000
End if
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!!L_900: Rem GET RANGES
!!If P9$[15,15] <> "Y" Let D9 = 1 \ Goto L_910
!!Print @0,20;'CE';"PRINT IN  1:  CUSTOMER #, OR  2:  ALPHA CUSTOMER ORDER? ";
!!Input ""K1$ \ If K1$ = "E" Goto OUTEND
!!D9 = K1$ \ If D9 <= 0 Goto L_900
!1If D9 > 2 Goto L_900
!!If D9 = 2 Let D9 = 3
!!L_910: Print @0,21;"ENTER STARTING CODE, <CR> FOR ALL,  E: end : ";'CE';
!!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!!If K2$ = "" Let K3$ = "}}}}}}" \ Goto L_970
!!If D9 = 1 Let X2 = K2$ \ K2$ = X2 Using "######"
!!Print @0,23;"ENTER ENDING   CODE, <CR> FOR LAST,  E: end : ";'CL';
!!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!!If D9 = 3 If K3$ = "" Let K3$ = "}}}}}}"
!!If D9 = 1 If K3$ = "" Let K3$ = "999999"
!!If D9 = 1 Let X2 = K3$ \ K3$ = X2 Using "######"
!!L_970: If K2$ <= K3$ Goto L_990
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!!L_990:
!!K1$ = K2$ \ If Not(J8) If J2 Print #0;"\14\";
!!J1 = 90 \ J2 = 0
!
If J8 
  tmp$ = "CUST #",fdel$
  tmp$ = tmp$, "NAME",fdel$
  tmp$ = tmp$, "ADDRESS 1",fdel$
  tmp$ = tmp$, "CITY",fdel$
  tmp$ = tmp$, "ST",fdel$
  tmp$ = tmp$, "ZIP CODE",fdel$
  tmp$ = tmp$, "FAX NUMBER",fdel$
  tmp$ = tmp$, "DATE OPEN",fdel$
  tmp$ = tmp$, "TEXT 1",fdel$
  tmp$ = tmp$, "TEXT 2",fdel$
  tmp$ = tmp$, "TERMS",fdel$
  tmp$ = tmp$, "TERMS DESC",fdel$
  tmp$ = tmp$, "CRED CHK FLAG",fdel$
  tmp$ = tmp$, "CRED CHK FLAG DESC",fdel$
  tmp$ = tmp$, "CREDIT LIMIT",fdel$
  tmp$ = tmp$, "CREDIT CODE",fdel$
  tmp$ = tmp$, "CREDIT CODE DESC",fdel$
  tmp$ = tmp$, "ZONE CODE",fdel$
  tmp$ = tmp$, "ZONE CODE DESC",fdel$
  tmp$ = tmp$, "STOP NUMBER",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
K1$ = K2$ \ If Not(J8) If J2 Print #0;"\14\";
J1 = 90 \ J2 = 0
!
!!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
Search #2,2,D9;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #2,3,D9;K1$,R1,E
If E Goto L_9100
L_2010: 
If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;C1$;
Mat Read #2,R1,142;C1;
Mat Read #2,R1,194;C2;
Mat Read #2,R1,348;C2$;
Mat Read #2,R1,388;C3$;
Mat Read #2,R1,348;CA2$;
Mat Read #2,R1,378;C7;
Mat Read #2,R1,668;C12;
Gosub L_4500
Gosub L_3000 \ if E Goto L_2000 ! customer message
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
Return 
!
L_3000: Rem GET CUSTOMER MESSAGE
J3$ = " ",J3$ \ J3$ = C1[1] Using "######"
Search #3,2,1;J3$,R3,E
If E Return 
Mat Read #3,R3,0;A1$;
Mat Read #3,R3,50;A2$;
Mat Read #3,R3,100;A0$;
Mat Read #3,R3,168;ODATE;
Return
!
L_4000: Rem TOTAL PRINT
Return 
!
L_4500: Rem ZONE
W$ = " ",W$
B1$ = " ",B1$ \ B1$ = CA2$[29,30]
Search #4,2,1;B1$,X,E
If E Goto L_4540
Mat Read #4,X,0;W$;
W$[29] = ""
Goto L_4550
L_4540: Rem NG
W$ = "ZONE NOT ON FILE!!"
L_4550: Rem PRNT
Return 
!
L_5000: Rem PRINT LINE
If J8 
  tmp$ = K1$[1,6],fdel$
  tmp$ = tmp$, rtrim$(C1$[31,60]),fdel$
  tmp$ = tmp$, rtrim$(C1$[61,90]),fdel$
  tmp$ = tmp$, rtrim$(C1$[121,135]),fdel$
  tmp$ = tmp$, C1$[136,137],fdel$
  tmp$ = tmp$, rtrim$(C2$[1,10]),fdel$
  tmp$ = tmp$, rtrim$(A0$[9,28]),fdel$
  X$ = " ",X$
  If ODATE
    X$ = ODATE Using "&&&&&&"
    Call JulianToDate(1,X$,X$,E)
  End if
  tmp$ = tmp$, X$[1,8],fdel$
  tmp$ = tmp$, rtrim$(A1$[1,50]),fdel$
  tmp$ = tmp$, rtrim$(A2$[1,50]),fdel$
  tmp$ = tmp$, C2[0] Using "##",fdel$
  If C2[0] > 0 And C2[0] <= 99
    Mat Read #15,C2[0],0;ARTERM$;
  Else 
    ARTERM$ = "Invalid Terms"
  End If 
  tmp$ = tmp$, rtrim$(ARTERM$[1,16]),fdel$
  tmp$ = tmp$, C1[3] Using "###",fdel$   !!CRED CHK FLAG
  If Not(C1[3]) 
    tmp$ = tmp$, "NO CHECK ON ORDER ENTRY", fdel$
  Else
    If C1[3] > 0 And C1[3] < 999
      tmp$ = tmp$, C1[3] Using "CREDIT FLAG FOR BALANCE PAST ### DAYS", fdel$
    else
      If C1[3] = 999 Let tmp$ = tmp$, "CREDIT FLAG FOR ALL ORDERS", fdel$ Else Let tmp$ = tmp$,"",fdel$
	End if
  End if
  tmp$ = tmp$, C12[0] Using "#,###,###,###",fdel$  !!CREDIT LIMIT
  tmp$ = tmp$, C1[0] Using "##",fdel$   !!CREDIT CODE
  Mat Read #1,22,C1[0] * 16 - 16;U5$;
  tmp$ = tmp$, rtrim$(U5$[1,16]),fdel$
  tmp$ = tmp$, CA2$[29,30],fdel$, rtrim$(W$),fdel$
  tmp$ = tmp$, C7[4],fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
Print #0; Tab 1;K1$[1,6];
Print #0; Tab 8;C1$[31,60];
Print #0; Tab 38;C1$[61,90];
Print #0; Tab 68;C1$[121,135];
Print #0; Tab 84;C1$[136,137];
Print #0; Tab 87;C2$[1,10];
Print #0; Tab 98;A0$[9,28];
X$ = " ",X$
If Not(ODATE) Goto L_5038
X$ = ODATE Using "&&&&&&"
Call JulianToDate(1,X$,X$,E) !!\ If E Goto ERR_SEARCH
L_5038: Print #0; Tab 120;X$[1,8]
Print #0; Tab 1;"        TEXT: ";A1$[1,50];
Print #0; Tab 60;"         TEXT: ";A2$[1,50]
Print #0; Using "##"; Tab 1;"       TERMS: ";C2[0];"  ";
If C2[0] > 0 And C2[0] <= 99
  Mat Read #15,C2[0],0;ARTERM$;
Else 
  ARTERM$ = "Invalid Terms  "
End If 
Print #0;ARTERM$[1,16];
Print #0; Using " ###"; Tab 60;"   CRED CHK FLAG: ";C1[3];
If Not(C1[3]) Print #0;"  NO CHECK ON ORDER ENTRY"
If C1[3] > 0 And C1[3] < 999
  Print #0; Using "  CREDIT FLAG FOR BALANCE PAST ### DAYS";C1[3]
End If 
If C1[3] = 999 Print #0;"  CREDIT FLAG FOR ALL ORDERS"
Print #0; Using "#,###,###,###"; Tab 1;"CREDIT LIMIT: ";C12[0];
Print #0; Using "##"; Tab 60;"       CREDIT CODE: ";C1[0];"  ";
Mat Read #1,22,C1[0] * 16 - 16;U5$;
Print #0;U5$[1,16]
Print #0; Tab 1;"   ZONE CODE: ";CA2$[29,30];"  ";W$;
Print #0; Tab 60;"       STOP NUMBER: ";C7[4]
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
If J8 Return
J1 = J1 + 5 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
Print #0;"\15\";
Print #0;" - 112 -";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;T9$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0; Tab 10;"DATE ";J8$; Tab 55;"CUSTOMER MESSAGE PRINT"
Print #0;"\15\";
Print #0; Tab 1;"CUST #";
Print #0; Tab 8;"NAME";
Print #0; Tab 38;"ADDRESS 1";
Print #0; Tab 68;"CITY";
Print #0; Tab 84;"ST";
Print #0; Tab 87;"ZIP CODE";
Print #0; Tab 98;"FAX NUMBER";
Print #0; Tab 120;"DATE OPEN";
Print #0;" "
Print #0;"\15\";
Return 
!
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 10
  T9[K] = 0
Next K
!!If K2$ = "" Goto OUTEND
!!Goto L_900
!!End 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section

External Lib "libgeneral.lib"
Declare External Sub XMLtoExcel
Call XMLtoExcel(e$,"tcw_text.txt",rstr$)

  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 