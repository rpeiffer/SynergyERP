! --- serp377
! description Product Usage
!
! 1.0 mm/dd/yyyy change??
! just front end for calling mxprodusage
!
! loadsave -w -n 100,10 -o prog/dxport/serp377.dl4 src/serp377.src
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
!
!
!
!include structure,filehandler libs & default structure dims
Include "src/inc/filea80vm.inc" ! custome
include "src/inc/fileprod.inc" ! product file
include "src/inc/fileprodwhse.inc" ! Whse
include "src/inc/fileprtdefault.inc" ! port default
!
External Lib "mxprodusage.dl4" ! AKA po361u
Declare External Sub mxprodusage
!
! *declare additional dl4 intrinsic subs & functions
!
Declare Intrinsic sub programdump,env
!
! *declare additional external libs & subs & functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function openfile,JDate$,PDate$,chkaltitem$
Declare External Sub getportdefault,GetCostLevels

!
!
!
! **main procedure
Declare Sub OpenFiles,getusage,getdeals
!
!
! dim variables used by program
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
	Option String Redim is legal ! in case subs dim/use same names
	OPTION GOSUB NESTING 12  ! Default is 8

	dim action$[30],options$[30],userid$[8],b$[200],3%
	dim action1$[30],action2$[30],action3$[30] ! actions for programs
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1000] ! .net delimiters
	Dim WebStr$[1000],Message$[200],dblog$[50],tmp$[200],blank$[100]
	Dim K1$[60],p9$[50],p60$[50],p61$[256],K$[60],msg$[100]
	Dim ProdKey$[60],Prod$[12],custom_customer$[30]
	dim 1%,cost_lev[4],Whse,debug,Cnvtu[2],UCA5[10]
	Dim 2%,Q0[1],maxcnt \ maxcnt=50 ! init max records in arrays for list
	dim List$[maxcnt,1000] ! for .net (larger size
	dim 1%,X1[9],Chan[30],cost_lev[4],DfltWhse
	Dim 2%,Vend,x2[9],sysdate
	Dim 2%,Buyer,s9[9],INVDATE
	Dim 3%,Specs[50]
	Dim 3%,PRR,PWR,CUR,VNR,RHR,RDR,SHR,SDR
	Dim 3%,CNVTA,Amount,X3[9],R[99]
	blank$=" ",blank$
	Dim vend. as a80vm ! vendor
	DIM PR. as prod ! prodfile
	dim pw. as prodwhse ! order lines
	dim prt. as prtdefault ! port defaults
 !
 ! call dxopen() ! - DONE IN POMENU!
 !
 call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
 !
 ! open files - may add a check to see if user can run an action/program
 !
 Action1$=UCase$(action1$)
 action1$=RTrim$(action1$) ! UPPERCASE & TRIMMED
 !etc for all files needed
 !close #1 ! getsession opens it as READONLY!
 !
 Call OpenFiles() ! open any/all files (include ctlc)
 call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost security
 call GetPortDefault(e$,IntCO,UserID$,portnum,rec_uac,prt.) ! get port default
 mat read #ctlc,19,50;p9$;
 mat read #ctlc,60,50;p60$;
 mat read #ctlc,61,0;p61$;
 mat read #ctlc,115,60;custom_customer$;
	Custom_customer$=UCase$(Trim$(custom_customer$))
 dfltwhse=prt.wh
 ReturnStatus=0
 debugdetail=0
 Message$="ACTION1 NOT FOUND"  ! action is used for menu routing
 select case action1$ ! go to various programs based on action
   case "GETNEXTPROD" ! Product Data						doc=PRU377-GetNextProdUsage.doc
		returnstatus=1
		message$="OK"
		Call DXGet("PRODID",tmp$)
		Prod$=RTrim$(tmp$)
		tmp$=ChkAltItem$(e$,IntCo,Prod$)
		If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
		Prod$=UCase$(prod$)+Blank$
		ProdKey$[1,12]=prod$
		PRR=filegetprod(e$,PRC,">",1,ProdKey$,PR.)
		If PRR<=0
			returnstatus=0
			Message$="NEXT PRODUCT NOT FOUND"
			goto GPDone
		Endif 
		!if custom_customer$="MORRISETTE"
			! we will need the warehouse also! it will need to be sent!?
		clear list$[]
		prod$=ProdKey$
		! next prod in prodfile
		call getusage()
		!
		GPDone: ! done
		! end of GETNEXTPROD
	case "NXTBYVEND" ! get vendor							doc=PRU377-GetNextProdforVendorUsage.doc
		ReturnStatus=1
		Message$="OK"
		Clear List$[]
		tmpcnt=maxcnt
		clear list$[]
		Call DXGet("PRODID",tmp$)
		Prod$=RTrim$(tmp$)
		tmp$=ChkAltItem$(e$,IntCo,Prod$)
		If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
		Prod$=UCase$(prod$)+Blank$
		ProdKey$[1,12]=prod$
		PRR=filegetprod(e$,PRC,"=",1,ProdKey$,PR.)
		If PRR<=0
			returnstatus=0
			Message$="PRODUCT NOT FOUND"
			goto NBVDone
		Endif 
		clear list$[]
		prod$=ProdKey$
		Call dxget("WHSEID",tmp$)
		X2=TMP$
		IF x2<=0 or x2>99 or fra(x2)
			let tmp$=Str$(Dfltwhse)
		Endif
		DfltWhse=tmp$
		call dxget("VENDID",tmp$)
		Vend=tmp$
		K$=" ",k$;k$[1,2]=DfltWhse using "##"
		K$[3]=Vend Using "######"
		K$[9]=prod$
		BPPWVend: ! bypass this one
		PWR=filegetprodwhse(e$,PWC,">",3,k$,pw.)
		if pwr<=0
			returnstatus=0
			message$="Could not find next product"
			goto NBVDone
		Endif
		!if custom_customer$="MORRISETTE" ! custom?
			if pw.DNReordFlg=1 or (pw.DNReordFlg=2 and pw.QtyOnOrd<=0 and pw.QtyOnPO<=0)
			   goto bppwvend
			endif
		!endif ! PER ERG - EVERYONE
		prod$=K$[9]+Blank$ ! pw.ProdCode$
		call getusage()
		NBVDone: ! finished
		
	! end of NXTBYVEND
	case "NXTBYBUYER" ! get next prod by buyer				doc=PRU377-GetNextProdforBuyerUsage.doc
		ReturnStatus=1
		Message$="OK"
		Clear List$[]
		tmpcnt=maxcnt
		clear list$[]
		Call DXGet("PRODID",tmp$)
		Prod$=RTrim$(tmp$)
		tmp$=ChkAltItem$(e$,IntCo,Prod$)
		If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
		Prod$=UCase$(prod$)+Blank$
		ProdKey$[1,12]=prod$
		PRR=filegetprod(e$,PRC,"=",1,ProdKey$,PR.)
		If PRR<=0
			returnstatus=0
			Message$="PRODUCT NOT FOUND"
			goto NBBDone
		Endif 
		clear list$[]
		prod$=ProdKey$
		Call dxget("WHSEID",tmp$)
		X2=TMP$
		IF x2<=0 or x2>99 or fra(x2)
			let tmp$=Str$(Dfltwhse)
		Endif
		DfltWhse=tmp$
		call dxget("BUYERID",tmp$)
		buyer=tmp$
		K$=" ",k$;k$[1,2]=DfltWhse using "##"
		K$[3]=Buyer Using "###"
		K$[6]=prod$+Blank$
		BPPWBUYR: ! bypass this record
		PWR=filegetprodwhse(e$,PWC,">",2,k$,pw.)
		if pwr<=0
			returnstatus=0
			message$="Could not find next product"
			goto NBBDone
		Endif
		!if custom_customer$="MORRISETTE" ! custom?
			if pw.DNReordFlg=1 or (pw.DNReordFlg=2 and pw.QtyOnOrd<=0 and pw.QtyOnPO<=0)
			   goto bppwBUYR
			endif
		!endif ! PER ERG - EVERYONE
		prod$=K$[6]+Blank$ ! pw.ProdCode$
		call getusage()
		NBBDone: ! finished
		
	! end of Nxtbybuyer
	case "GETUSAGE" ! get usage data						doc=PRU377-GetUsage.doc
		ReturnStatus=1
		Message$="OK"
		Clear List$[]
		tmpcnt=maxcnt
		Call DXGet("PRODID",tmp$)
		Prod$=RTrim$(tmp$)
		tmp$=ChkAltItem$(e$,IntCo,Prod$)
		If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
		Prod$=UCase$(prod$)+Blank$
     	! tmp$=UCASE$(tmp$)+Blank$
		! Prod$=tmp$[1,12]   
		ProdKey$=Prod$
		PRR=filegetprod(e$,PRC,"=",1,ProdKey$,PR.)
		If PRR<=0
			returnstatus=0
			Message$="PRODUCT NOT FOUND"
			goto s377done
		Endif 
		call getusage()
	! end of GETUSAGE
	case "SHOWDEALS" ! show deals							doc=PRU377-ShowDealList.doc
		returnstatus=1
		message$="OK"
		Call DXGet("PRODID",tmp$)
		Prod$=RTrim$(tmp$)
		tmp$=ChkAltItem$(e$,IntCo,Prod$)
		If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
		Prod$=UCase$(prod$)+Blank$
		ProdKey$[1,12]=prod$
		PRR=filegetprod(e$,PRC,"=",1,ProdKey$,PR.)
		If PRR<=0
			returnstatus=0
			Message$="PRODUCT NOT FOUND"
			goto S377DONE
		Endif 
		clear list$[]
		prod$=ProdKey$
		call dxget("VENDID",tmp$)
		Vend=tmp$
		if vend<=0 or vend>999999 or fra(vend)
			returnstatus=0
			message$="Invalid Vendor ID"
			goto s377done
		Endif
		call getdeals()
	  ! END OF SHOWDEALS
 end select  !action options
	s377done: ! finished
	! status section
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
 
 !call dxclose()
else
 include "src/callmainerrnet.inc"
end try
end ! of main program

! subs start now
!------------------------------------------------------------------------------------------
Sub OpenFiles()

 Try
    !
	CTLC=OpenFile(-9999,IntCo) \ if ctlc=-1 Error 42 ! control file read/write
	VMC=OpenFile(-2400,IntCo) \ If CUC=-1 Error 42 ! vendor
	PRC=OpenFile(-1792,IntCo) \ if prc=-1 Error 42 ! product file
	PWC=OpenFile(-1744,IntCo) \ If PWC=-1 Error 42 ! prodwhse file
	CCC=openfile(-1728,IntCo) \ if ccc=-1 error 42 ! um codes
	ch_deal=OpenFile(-864,intCo) \ If Ch_deals = -1 Error 42 ! deals file
 else
    include "src/callsuberr.inc"
  end try
end sub ! openfiles
! 
!--------------------------------------------------------------------
Sub GetUsage()
 ! call off to produsage
 Try
	! as done on serppol
	let errtype=0
		let msg$=""
		
		Clear specs[]
		clear chan[]
		If DfltWhse<1 or dfltwhse>99 or fra(dfltwhse)
			dfltwhse=1
		Endif
		TMP$=STR$(DFLTWHSE) ! CALL dXGET("WHSEID",tmp$)
		SPECS[1]=TMP$ ! warehouse
		specs[2]=tmp$ ! main warehouse
		!CALL dXGET("VENDID",tmp$)
		K$=" ",k$
		K$=Prod$
		k$[13]=DfltWhse using "##"
		PWR=filegetprodwhse(e$,PWC,"=",1,K$,pw.)
		If pwr<=0 clear pw.
		let specs[3]=pw.Vend ! tmp$ ! vendor code
		if specs[3]=0 let specs[3]=pr.PrimVend
		! look for deals
		deals=1
		LET K$=" ",K$                         
		LET K$[1,6]=specs[3] USING "######"       
		LET K$[7,18]=PROD$[1,12]                
		SEARCH #ch_deal,3,1;K$,R[12],E                 
		IF E let deals=0
		LET X3=K$[1,6] \ IF X3<>specs[3] let deals=0
		IF K$[7,6+LEN(PROD$)]<>PROD$[1,12] let deals=0
		Clear List$[]
		List$[0]=bsdel$,"USAGEMAIN",fdel$
		List$[1]="PRODID",fdel$,"VENDID",fdel$,"WHSEID",fdel$,"BUYERID",fdel$,"DEALS",fdel$
		webstr$=Prod$,fdel$,Str$(specs[3]),fdel$
		webstr$=webstr$,Str$(specs[1]),fdel$,Str$(pw.Buyer),fdel$
		tmp$="N" \ if deals let tmp$="Y"
		webstr$=webstr$,tmp$,fdel$
		List$[2]=webstr$
		List$[3]=esdel$
		Call addtostr(e$,rstr$,List$[])
		Clear list$[]
		let specs[10]=intco ! company #
		let chan[0]=ctlc  ! control file record #
		let chan[1] = 0 ! ) ! purchase PO header  #8
	
		let chan[2] = 0 ! po lines #14
	        
		let chan[3] = ohc ! PO header #18
	 	let chan[4] = prc  ! product file #2 * 
		let chan[5] = pwc ! product warehouse #3 * 
		let chan[7]=ccc   ! unit of measure file #5* 
		let chan[8]=olc  ! order lines #68
		let chan[12] = ch_deal  ! 
		let chan[16] = 0 ! product sales #4
		let chan[17]= VMC
		chan[18]=pltc ! sprodlot
		chan[19]=whi ! WHinfo #13
		chan[20]=0  ! Vendor Tag File
		chan[21]=SLTC ! sordlot
		chan[22] =0  ! buyer -9991
		call mxprodusage(Chan[],specs[],prod$,msg$,errtype,rstr$,maxcnt,cost_lev[])   
		Let ReturnStatus=1
		Message$="OK"
		GUDone: ! done - mxusage adds to rstr$
		If errtype<>0
			Let ReturnStatus=0
			Message$=msg$
		Endif
	  ! returns with all data in rstr$
 else
    include "src/callsuberr.inc"
  end try
end sub ! GetUsage
! 
!--------------------------------------------------------------------
Sub getdeals()
! call off to mxdeal
  Try
	let errtype=0
	let msg$=""
	Clear List$[]
	Clear specs[]
	clear chan[]
	chan[0]=ctlc
	chan[1]=ch_deal
	chan[2]=ccc
	chan[3]=prc
	specs[0]=vend
	specs[1]=PRR
	specs[10]=Intco
	Call "mxdeal.dl4",Chan[],specs[],prod$,msg$,errtype,list$[],maxcnt
	GDDone: ! finished
	If errtype<>0
		Let ReturnStatus=0
		Message$=msg$
	Else
		call addtostr(e$,rstr$,List$[]) ! add list sent back
	Endif
  else
    include "src/callsuberr.inc"
  end try
end sub ! getdeals
! 
!--------------------------------------------------------------------