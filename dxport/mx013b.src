! >>> Program mx013b
!
! description Dayend- A/R Aging Section
! loadsave -w -n 100,10 -o prog/dxport/mx013b.dl4 src/mx013b.src
!
! ERPScheduler Enabled
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  16:43:22
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/mx013b.src (univ2) [mary] {23980}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FileInfo,FormatDate,InpBuf,String,Time,VerifyDate
!Option Default Dialect IRIS1
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
!Option Default Dialect IRIS1

Rem     MX013B  DAYEND PROGRAM - ACCOUNTS RECEIVABLE AGING
Rem     *************
Rem     GEORGE DOSCHER
Try
Com 1%,EOP
Com Rstr$[5000],Message$[600]
com 2%,intco
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim 1%,eflg,returnstatus
dim e$[500] ! 
dim 3%,rec_uac

!If Err 0 Gosub ERR_TRAP
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 2%,CHT0[1],3%,CHT1[24],CHT2[24],2%,CHT3[24],CHT4[24],CHT5[24]
Dim 2%,ARPER,A1[2]
Dim 1%,X[2],X1[9],T2,A0[10],FLAG
Dim 1%,AGEBUCK[3],CUST2[3],DDAY
Dim 1%,POGLFLAG,SPO
Dim 2%,A2[5],A4[3],ARDATE,J6,K,D9
Dim 2%,C1[12],D1[1],D3[1],PRCNTAR[6],COID
Dim 3%,S1[27],S2[10],S3[10],S4[10],S5[10],S6[10],S7[10]
Dim 3%,A3[3],C4[6],T1,T9[5],D$[24]
Dim 3%,A127[25],AA127[128,1]
Dim 4%,T8[2],E2,E3,C2,TOTAR,GP
Dim K2$[40],K3$[40],ARDATE$[8],U5$[50]
Dim B$[10],J6$[16],K4$[40]
Dim CNAME$[30],U9$[130],P9$[50],P60$[50],RUN_DATE$[8],RUN_TIME$[11]
Dim REPORTDIR$[75],PTR$[100],UP_PTR$[100]
Dim AGEBUCK$[100],P61$[256]
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]

! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo 
Try Close #1 Else Rem ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflg=0
returnstatus=1
Def FNR(X) = Sgn(X) * Int((Abs(X) + .005) * 100) / 100
COID = intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
for ctr=2 to 8
	Try close #ctr else rem
next ctr
Try close #50 else rem
K2$ = " ",K2$
For J = 2 To 5
  Read J1 \ If J1 = -1 Goto L_850
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
  If J = 2 Let K2$ = J$
L_850: Next J
Data "1504","1808","400","-688"
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,51,76;SPO;
Mat Read #1,51,88;POGLFLAG;
statchan=88 ! channel for disk file 
If P60$[20,20] = "Y" Read #1,88,336;J$; \ Open #6,J$
J$ = COID Using "2/ARTERMCODE#" \ Ropen #50,J$
Read #1,3,0;CNAME$;
Mat Read #1,19,50;P9$;
Read #1,0,108;ARDATE;
Mat Read #1,20,130;AGEBUCK;
AGEBUCK$[1,20] = "CURRENT............:"
If P9$[50,50] = "M" ! age by month
  If P9$[25,25] = "Y" ! age by due date
    AGEBUCK$[21,40] = "PAST DUE...........:"
    AGEBUCK$[41,60] = "OVER 1 MONTH.......:"
    AGEBUCK$[61,80] = "OVER 2 MONTHS......:"
    AGEBUCK$[81,100] = "OVER 3 MONTHS......:"
  Else 
    AGEBUCK$[21,40] = "OVER 1 MONTH.......:"
    AGEBUCK$[41,60] = "OVER 2 MONTHS......:"
    AGEBUCK$[61,80] = "OVER 3 MONTHS......:"
    AGEBUCK$[81,100] = "OVER 4 MONTHS......:"
  End If 
Else 
  If P61$[67,67] = "Y"
    AGEBUCK$[1,20] = "PERIOD 1...........:"
    AGEBUCK$[21,40] = "PERIOD 2...........:"
    AGEBUCK$[41,60] = "PERIOD 3...........:"
    AGEBUCK$[61,80] = "PERIOD 4...........:"
    AGEBUCK$[81,100] = "PERIOD 5...........:"
  Else 
    For X = 0 To 3
      AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
      AGEBUCK$[((X * 20) + 34),((X * 20) + 40)] = "......:"
    Next X
    If P9$[25,25] = "Y" And AGEBUCK[0] = 0
      AGEBUCK$[21,40] = "PAST DUE...........:"
    End If 
  End If 
End If 
X$ = ARDATE Using "&&&&&&" \ ARPER = X$[1,4]
Gosub L_7900 \ RUN_DATE$ = X$[1,8]
Call Time(U5$) \ Search U5$,":",K \ If K <= 3 Let U5$ = " ",U5$
RUN_TIME$ = U5$[K - 2,K + 5] + "   "
K = RUN_TIME$[1,2]
If K <= 11
  RUN_TIME$[10,11] = "AM"
Else 
  RUN_TIME$[10,11] = "PM"
  If K > 12 Let RUN_TIME$[1,2] = (K - 12) Using "&&"
End If 
Rem determine number of saract records- 2 methods
K4$ = " ",K4$
Call FileInfo(K4$,A127[],K2$,AA127)
E = 7 \ Search #2,1,0;K2$,F1,E \ If E Gosub ERR_SEARCH
T1 = F1
If AA127[0,1] > 100 If AA127[0,1] + 30 < T1 Let T1 = AA127[0,1]
REPORTDIR$ = "REPORTDIR" \ System 28,REPORTDIR$
!Gosub L_5400 
!Gosub L_5000
L_2000: Rem EDIT
!Print @0,23;"IS THE AGING DATE CORRECT?   Y:yes   N:no   ";'CL';
!Input Len (16384 + 1);""J4$
!Call String(1,J4$)
!Print @0,23;'CL';
!If J4$ = "Y" Goto L_4000
!If J4$ = "N" Gosub L_3000
!Goto L_2000
ARDATE = GetParameter$("ARDATE")
! Call dxget("ARDATE",tmp$) \ ARDATE = tmp$  ! MMDDYY                                                                                        
X$ = ARDATE Using "&&&&&&" \ tmp1$ = X$[5,6],X$[1,2],X$[3,4] 
ARDATE = tmp1$                                                                             
Call DateToJulian(1,tmp1$,tmp1$,E)
let jardate=tmp1$
goto L_4000:

L_2500: Rem GET CUSTOMER RECORD
Mat Read #3,R3,142;C1
Mat Read #3,R3,194;CUST2
Mat Read #3,R3,210;C4
For K = 0 To 5 \ C4[K] = 0 \ Next K
Return

L_2600: Rem "====================================== age AR record
Mat Read #2,R2,0;A2
Mat Read #2,R2,24;A3
Mat Read #2,R2,124;A0
Mat Read #2,R2,154;A4
Mat Read #2,R2,190;A1
If A0[10] = 1 Goto L_2800
A3 = A3[0] - A3[1] - A3[2]
T = Int(100 * Fra(A2[3]))
If T > 5
  If P9$[19,19] = "N"
    BUCK = 1
    Goto UPDATEAR
  Else 
    A3 = - (A3)
  End If 
End If 
If Not(A2[4]) ! does not have an invoice date
	let a2[4]=jardate ! set to a/r date   Gosub L_3200
End If 
If P9$[50,50] = "D" ! aging by days needs in julian format
  D9 = A2[4]
  If P9$[25,25] = "Y"
    If A4[3]
      X$ = A4[3] Using "&&&&&&"
      Call DateToJulian(1,X$,X$,E)
      If Not(E) Let D9 = X$
    End If 
  End If 
  E2 = E3 - D9
  If E2 < -15000 Let E2 = E2 + 36525
  If E2 <= AGEBUCK[0]
    BUCK = 0
  Else 
    If E2 <= AGEBUCK[1]
      BUCK = 2
    Else 
      If E2 <= AGEBUCK[2]
        BUCK = 3
      Else 
        If E2 <= AGEBUCK[3]
          BUCK = 4
        Else 
          BUCK = 5
        End If 
      End If 
    End If 
  End If 
Else ! "age by months need in yymmdd format
  If P9$[25,25] = "Y" And A4[3] <> 0
    X$ = A4[3] Using "&&&&&&"
  Else 
    X2 = A2[4] \ Gosub L_7870
  End If 
  If X$[1,2] < "70"
    C2 = X$[1,2];C2 = (C2 + 100) * 12;X = X$[3,4];C2 = C2 + X
  Else 
    C2 = X$[1,2];C2 = C2 * 12;X = X$[3,4];C2 = C2 + X
  End If 
  E2 = E3 - C2
  If E2 < -600 Let E2 = E2 + 1200
  If E2 <= 0
    BUCK = 0
  Else 
    BUCK = E2 + 1
    If BUCK > 5 Let BUCK = 5
  End If 
End If 
T8[1] = T8[1] + A3;T8[2] = T8[2] + A3 * E2
UPDATEAR: Rem update a/r balance
C4[BUCK] = C4[BUCK] + A3
A2[3] = BUCK + Fra(A2[3])
If Not(A2[0]) Let A2[0] = C1[2]
Mat Write #2,R2,0;A2;
L_2800: Rem end aging transaction
Unlock #2
Return 

L_3200: Rem INVALID DATE CORRECTION
!Print @7,15;"BAD DATE FOUND IN A/R RECORD";@7,17;"CUSTOMER NUMBER";
!Print @39,17;"REFERENCE NUMBER";@66,17;"TYPE";
!Print @7,19;"CURRENT DATE";@39,19;"ENTER CORRECT DATE";
!Print @24,17;K2$[1,6];@55,17;K2$[9,16];@72,17;K2$[17,17];'RB';
!X2 = A2[4] \ Gosub L_7770 \ Print @24,19;X$;
!J0$ = "5 00  5919" \ J1 = ARDATE
!Gosub L_3300
!L_3250: J5$ = "ENTER CORRECT DATE" \ Gosub ISINPUT \ J5$ = ""
!X2 = J1 \ Gosub L_7840 \ Goto L_3250
!A2[4] = D3
!Gosub L_3350 \ Print @0,15;'CE'
!Print @0,22; Tab 16;"AGING ACCOUNTS RECEIVABLE";'CL';
!Mat Write #2,R2,0;A2
Return 
L_3300: Rem DELETE DIR 2 & Dir 3 & Dir 5
J$ = " ",J$;J$ = K2$[1,6];J$[7] = A2[4] Using "######"
J$[13] = K2$[7] \ J$[24] = ""
Search #2,2,2;J$,V1,E \ If E > 1 Gosub ERR_SEARCH
If E Goto L_3340
Search #2,5,2;J$,V1,E \ If E Gosub ERR_SEARCH
L_3340: Rem "now Dir 3
K4$ = " ",K4$;K4$[1,6] = A1[1] Using "######"
K4$[7] = J$;K4$[30] = ""
Search #2,2,3;K4$,V1,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) ! "only if found it
  Search #2,5,3;K4$,V1,E \ If E Gosub ERR_SEARCH
End If 
K4$ = " ",K4$;K4$[1,6] = A1[1] Using "######"
K4$[7,22] = J$[7,22];K4$[23,28] = J$[1,6]
K4$[29] = J$[23];K4$[30] = ""
Search #2,2,5;K4$,V1,E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Search #2,5,5;K4$,V1,E \ If E Gosub ERR_SEARCH
End If 
Return 
L_3350: Rem INSERT DIR 2 & Dir 3 & 5
J$ = " ",J$;J$ = K2$[1,6];J$[7] = A2[4] Using "######"
J$[13] = K2$[7] \ If J$[20,20] = "" Let J$[20] = " "
V1 = R2
Search #2,4,2;J$,V1,E \ If E Gosub ERR_SEARCH
K4$ = " ",K4$;K4$[1,6] = A1[1] Using "######"
K4$[7] = J$;V1 = R2
Search #2,4,3;K4$,V1,E \ If E Gosub ERR_SEARCH
K4$ = " ",K4$;K4$[1,6] = A1[1] Using "######"
K4$[7,22] = J$[7,22];K4$[23,28] = J$[1,6]
K4$[29] = J$[23];K4$[30] = ""
Search #2,4,5;K4$,V1,E \ If E Gosub ERR_SEARCH
Return 
L_4000: Rem "======================================== age AR
Try
	print #statchan;"Aging Accounts Receivable Process "
else
	rem
end try
!Print @0,22; Tab 16;"AGING ACCOUNTS RECEIVABLE";'CL';
X$ = ARDATE Using "&&&&&&"
If P9$[50,50] = "D" ! "age by days
  Call DateToJulian(1,X$) \ E3 = X$
Else ! "age by months
  If X$[1,2] < "70"
    E3 = X$[1,2];E3 = (E3 + 100) * 12;X = X$[3,4];E3 = E3 + X
  Else 
    E3 = X$[1,2];E3 = E3 * 12;X = X$[3,4];E3 = E3 + X
  End If 
End If 
K3$ = " ",K3$
L_4030: Search #3,3,1;K3$,R3,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_7990
Gosub L_2500
If P9$[50,50] <> "M" And P61$[67,67] = "Y" ! not by month/by term code
  Mat Read #1,20,130;AGEBUCK;
  If CUST2[0] > 0 And CUST2[0] <= 99
    Read #50,(CUST2[0]),30;DDAY;
    If DDAY = 0 Let DDAY = 1
    If DDAY > 0
      AGEBUCK[0] = DDAY
      AGEBUCK[1] = DDAY * 2
      AGEBUCK[2] = DDAY * 3
      AGEBUCK[3] = DDAY * 4
    End If 
  End If 
End If 
K2$ = " ",K2$;K2$[1,6] = K3$
!Print @31,8;K3$;
L_4070: Search #2,3,1;K2$,R2,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_4200
If K2$[1,6] <> K3$[1,6] Goto L_4200
P1 = P1 + 1 \ If Not(Fra(P1 / 25)) Gosub L_5100
Gosub L_2600
Goto L_4070
L_4200: Rem END THIS CUSTOMER
Mat Write #3,R3,210;C4;
For X1 = 0 To 5 \ T9[X1] = T9[X1] + C4[X1] \ Next X1
If P60$[20,20] = "Y" Gosub L_4300
!L_4230: Signal 2,P,P1,P2
!If P = -1 Goto L_4290
!If P <> Spc(6) Goto L_4230
!Print @0,22;'CL';"ABORT REQUESTED! A:abort   <CR>:continue ";
!Input Len (16384 + 1);""J4$
!Call String(1,J4$)
!If J4$ = "A" Goto OUTEND
L_4290: Goto L_4030
L_4300: Rem UPDATE CUSTCRHIST
If P60$[20,20] <> "Y" Return 
Search #6,2,1;K3$,R6,E \ If Not(E) Goto L_4350
If E > 1 Gosub ERR_SEARCH
For X = 0 To 24 \ CHT1[X] = 0 \ CHT2[X] = 0 \ CHT3[X] = 0 \ CHT4[X] = 0 \ CHT5[X] = 0 \ Next X
CHT0[0] = K3$
CHT0[1] = ARPER
E = 2 \ Search #6,1,0;K3$,R6,E \ If E Gosub ERR_SEARCH
Search #6,4,1;K3$,R6,E \ If E Gosub ERR_SEARCH
Goto L_4400
L_4350: Mat Read #6,R6,0;CHT0;
Mat Read #6,R6,8;CHT1;
Mat Read #6,R6,158;CHT2;
Mat Read #6,R6,308;CHT3;
Mat Read #6,R6,408;CHT4;
Mat Read #6,R6,508;CHT5
If CHT0[1] = ARPER Goto L_4400
!Print @0,20;'CL RB';"CUSTOMER ";K3$;" ACCOUNTING PERIODS ARE DIFFERENT ";
!Print @0,21;'CL RB';"DAYEND ABORTED!!!"; \ Gosub ERR_SEARCH
let cht0[1]=arper ! set to the a/r period
L_4400: CHT1[0] = (C4[0] + C4[2] + C4[3] + C4[4] + C4[5] - C4[1])
If Not(CHT2[0]) Let CHT2[0] = CHT1[0]
If CHT2[0] < CHT1[0] Let CHT2[0] = CHT1[0]
CHT3[0] = C1[10]
Mat Write #6,R6,0;CHT0
Mat Write #6,R6,8;CHT1
Mat Write #6,R6,158;CHT2
Mat Write #6,R6,308;CHT3
Mat Write #6,R6,408;CHT4
Mat Write #6,R6,508;CHT5;
Return 
L_5000: Rem OVERLAY
!X$ = ARDATE Using "&&&&&&" \ Call FormatDate(X$) \ Print @18,4;X$;
!Print Using "#,###,###";@38,12;T1;
!Print " "
!Signal 3,0
Return  
L_5100: Rem DISPLAY PROGRESS
!If T1 Print Using " ### % ";@62,8;(P1 * 100 / T1);
Return 
L_5400: Rem "================================================ screen labels
!Print 'CS';@15,1;"ACCOUNTS RECEIVABLE AGING BY ";
!If P9$[50,50] = "D" Print "DAYS "; Else Print "MONTHS ";
!If P9$[25,25] = "Y" Print "USING DUE DATE" Else Print "USING INVOICE DATE"
!Print @7,4;"AGING DATE";
!Print @7,8;"NOW SCANNING CUSTOMER  [      ]";
!Print @51,8;"PROGRESS  [       ]";
!Print @7,12;"CURRENT NUMBER OF ACTIVITIES";
!Signal 3,0 \ Return 
Return
L_6550: Rem "================================== aging totals
Print #0;"\14\"; Tab 66 - Len(CNAME$) / 2;CNAME$
X$ = ARDATE Using "&&&&&&" \ Call FormatDate(X$)
Print #0; Tab 5;"\15\\15\ DAYEND AGING TOTALS FOR ";X$;
If X$[1,8] <> RUN_DATE$[1,8] Print #0;" ON ";RUN_DATE$;
Print #0;" ";RUN_TIME$
Print #0;" "
TOTAR = T9[5] + T9[4] + T9[3] + T9[2] - T9[1] + T9[0]
For X = 0 To 5
  If TOTAR
    PRCNTAR[X] = FNR((T9[X] / TOTAR) * 100)
  Else 
    PRCNTAR[X] = 0
  End If 
Next X
Print #0; Using J$; Tab 5;AGEBUCK$[1,20]; Tab 28;T9[0];
Print #0; Using "   ----.##%";PRCNTAR[0]
For X = 1 To 4
  Print #0; Tab 5;AGEBUCK$[((X * 20) + 1),((X * 20) + 20)];
  Print #0; Using J$; Tab 28;T9[X + 1];
  Print #0; Using "   ----.##%";PRCNTAR[X + 1]
Next X
Print #0; Tab 28;"-----------------"
Print #0; Tab 5;"SUBTOTAL...........:";
Print #0; Using J$; Tab 28;(T9[0] + T9[2] + T9[3] + T9[4] + T9[5]);
If TOTAR
  PRCNTAR[0] = FNR(((T9[0] + T9[2] + T9[3] + T9[4] + T9[5]) / TOTAR) * 100)
Else 
  PRCNTAR[0] = 0
End If 
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0; Using J$; Tab 5;"UNAPPLIED CREDITS..:"; Tab 27;"(";T9[1];")";
Print #0; Using "  ----.##%";PRCNTAR[1]
Print #0; Tab 28;"-----------------"
Print #0; Using J$; Tab 5;"TOTAL A/R..........: "; Tab 28;(T9 - T9[1] + T9[2] + T9[3] + T9[4] + T9[5]);
If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR[0] = 0
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0;" "
Print #0;" "
If T8[1] Print #0; Using "----#.##";" AVERAGE AGE = ";T8[2] / T8[1];
If P9$[50,50] = "D" Print #0;" DAYS" Else Print #0;" MONTHS"
Return 
Rem {begin call.input.i}

L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
L_7900: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto L_7940
Next K1
 
L_7940: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
L_7990: Rem END OF AGING
P1 = T1
!Gosub L_5100
L_8000: Rem PRINT SUMMARY REPORT
J$ = "--,---,---,--#.##"
!Print @0,22;"PRINTING SUMMARY REPORT...PLEASE WAIT";'CE'; \ Signal 3,0
Read #1,0,100;ARDATE$;
DIVFOUND = 0
For DIV = 99 To 0 Step -1
  Mat Read #4,0;S2;
  Mat Read #4,(DIV * 10) + 2;S3;
  Mat Read #4,(DIV * 10) + 3;S5;
  Mat Read #4,(DIV * 10) + 4;S6;
  Mat Read #4,(DIV * 10) + 5;S7;
  Mat Read #5,DIV,0;D$;
  If Not(DIV) Goto L_8095
  For X = 6 To 8
    If S3[X] > 0 Or S5[X] > 0 Or S6[X] > 0 Or S7[X] > 0 Goto L_8090
  Next X
  Goto L_8400
L_8090: If DIV = 1 If Not(DIVFOUND) Goto L_8400
L_8095: DIVFOUND = 99
  S1[22] = 0 \ S1[22] = S2[0] + S2[1] + S2[2] + S2[4] + S2[3] + S2[5] + S2[6]
  S1[23] = 0 \ S1[23] = T9[0] + T9[2] + T9[3] + T9[4] + T9[5] - T9[1]
  Print #0;"\12\"; Tab 66 - Len(CNAME$) / 2;CNAME$
  U9$ = "SUMMARY OF DAILY AR ACTIVITY"
  Print #0; Tab 66 - Len(U9$) / 2;U9$
  If ARDATE$[1,8] <> RUN_DATE$[1,8]
    Print #0; Tab 48;
  Else 
    Print #0; Tab 54;
  End If 
  Print #0;"FOR ";ARDATE$;
  If ARDATE$[1,8] <> RUN_DATE$[1,8] Print #0;" ON ";RUN_DATE$;
  Print #0;" ";RUN_TIME$
  If DIV Print #0; Using " ## "; Tab 60;"DIVISION ";DIV;D$ Else Print #0; Tab 60;"COMPANY TOTALS "
  Print #0;" "
  Print #0;
  U9$ = " ",U9$
  U9$[24,81] = "---------------------------------------------------------"
  Print #0; Tab 31;"DAILY"; Tab 53;"MTD"; Tab 73;"YTD"
  Print #0;U9$
  Print #0;""
  Print #0; Tab 5;"SALES";
  Print #0; Using "---,---,---,--#.##"; Tab 20;S3; Tab 40;S3[1]; Tab 60;S3[2]
  Print #0; Tab 5;"GROSS PROFIT";
  Print #0; Using "---,---,---,--#.##"; Tab 20;S3[3]; Tab 40;S3[4]; Tab 60;S3[5]
  Print #0; Tab 5;"GROSS PROFIT %";
  GP = 0
  If S3[0]
    GP = FNR((S3[3] / S3[0]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 20;GP;
  GP = 0
  If S3[1]
    GP = FNR((S3[4] / S3[1]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 40;GP;
  GP = 0
  If S3[2]
    GP = FNR((S3[5] / S3[2]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 60;GP
  Print #0; Tab 5;"# OF INVOICES";
  Print #0; Using "###############"; Tab 20;S3[6]; Tab 40;S3[7]; Tab 60;S3[8]
  Goto L_8235
  Print #0;""
  Print #0; Tab 5;"FRT INVOICES";
  Print #0; Using "---,---,---,--#.##"; Tab 20;S7; Tab 40;S7[1]; Tab 60;S7[2]
  Print #0; Tab 5;"GROSS PROFIT";
  Print #0; Using "---,---,---,--#.##"; Tab 20;S7[3]; Tab 40;S7[4]; Tab 60;S7[5]
  Print #0; Tab 5;"GROSS PROFIT %";
  GP = 0
  If S7[0]
    GP = FNR((S7[3] / S7[0]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 20;GP;
  GP = 0
  If S7[1]
    GP = FNR((S7[4] / S7[1]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 40;GP;
  GP = 0
  If S7[2]
    GP = FNR((S7[5] / S7[2]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 60;GP
  Print #0; Tab 5;"# OF FRT INVOICES";
  Print #0; Using "###############"; Tab 20;S7[6]; Tab 40;S7[7]; Tab 60;S7[8]
L_8235: Print #0;" "
  Print #0; Tab 5;"CREDIT";
  Print #0; Using "---,---,---,--#.##"; Tab 20;S5; Tab 40;S5[1]; Tab 60;S5[2]
  Print #0; Tab 5;"GROSS PROFIT";
  Print #0; Using "---,---,---,--#.##"; Tab 20;S5[3]; Tab 40;S5[4]; Tab 60;S5[5]
  Print #0; Tab 5;"GROSS PROFIT %";
  GP = 0
  If S5[0]
    GP = FNR((S5[3] / S5[0]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 20;GP;
  GP = 0
  If S5[1]
    GP = FNR((S5[4] / S5[1]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 40;GP;
  GP = 0
  If S5[2]
    GP = FNR((S5[5] / S5[2]) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 60;GP
  Print #0; Tab 5;"# OF CREDIT MEMOS";
  Print #0; Using "###############"; Tab 20;S5[6]; Tab 40;S5[7]; Tab 60;S5[8]
  Print #0;" "
  Print #0; Tab 5;"NET SALES";
  Print #0; Using "---,---,---,--#.##"; Tab 20;(S3 + S5); Tab 40;(S3[1] + S5[1]); Tab 60;(S3[2] + S5[2])
  Print #0; Tab 5;"NET PROFIT";
  Print #0; Using "---,---,---,--#.##"; Tab 20;(S3[3] + S5[3]); Tab 40;(S3[4] + S5[4]); Tab 60;(S3[5] + S5[5])
  Print #0; Tab 5;"NET PROFIT %";
  GP = 0
  If (S3[0] + S5[0])
    GP = FNR(((S3[3] + S5[3]) / (S3[0] + S5[0])) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 20;GP;
  GP = 0
  If (S3[1] + S5[1])
    GP = FNR(((S3[4] + S5[4]) / (S3[1] + S5[1])) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 40;GP;
  GP = 0
  If (S3[2] + S5[2])
    GP = FNR(((S3[5] + S5[5]) / (S3[2] + S5[2])) * 100)
  End If 
  Print #0; Using "--------------#.##%"; Tab 60;GP
  Print #0;"\15\\15\\15\"
  Print #0;U9$
  Gosub L_8535
  If DIV > 0 Goto L_8395
  Gosub L_6550
  Print #0; Using "---,---,---,--#.## "; Tab 45;"START OF DAY AR         ";S2[0]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"NET CASH RECEIPTS       ";S2[1]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"TOTAL FROM INVOICES     ";S2[2]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"TOTAL FROM FRT INVOICES ";S2[6]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"TOTAL FROM CREDIT MEMOS ";S2[3]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"TOTAL FROM SERV. CHARGE ";S2[4]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"TOTAL DIRECT AR LOAD    ";S2[5]
  Print #0;" "
  Print #0; Using "---,---,---,--#.## "; Tab 45;"CALCULATED E.O.D AR     ";S1[22]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"SYSTEM E.O.D. AR        ";S1[23]
  Print #0; Using "---,---,---,--#.## "; Tab 45;"PROOF                   ";S1[23] - S1[22];
  If S1[23] - S1[22] <> 0 Print #0; Tab 84;"<<== OUT OF BALANCE *****"
  If S1[23] - S1[22] = 0 Print #0;
  Print #0; Tab 43;"--------------------------------------------"
L_8395: Print #0;"\14\"
L_8400: Next DIV
!If S1[23] - S1[22] <> 0 Print @19,19;'RB BR BB';"AR OUT OF BALANCE ";'ER EB'
!If Err 0 Rem
!PTR$ = "";UP_PTR$ = "";PTR$ = Chf$(800);UP_PTR$ = Chf$(800)
!If Err 0 Gosub ERR_ESCAPE
!If Len(PTR$) < 1 Goto L_8410
!For POS_ = Len(PTR$) To 1 Step -1
!  If PTR$[POS_,POS_] = "/" Goto ENDLOOP
!Next POS_
!ENDLOOP: Call String(1,UP_PTR$) \ Call String(1,REPORTDIR$)
!If REPORTDIR$[1,Len(REPORTDIR$)] = "REPORTDIR" Goto L_8410
!If UP_PTR$[POS_ + 1,POS_ + 3] <> "SPT" Goto L_8410
!If UP_PTR$[1,Len(REPORTDIR$)] = REPORTDIR$[1,Len(REPORTDIR$)] Goto L_8410
!J$ = "$",PTR$[POS_ + 1,Len(PTR$)]
!Close #0 \ Open #0,J$
L_8410: !Print @0,22;'CL';"DO YOU NEED TO REPRINT THE REPORT? (Y/N) ";'CE';
!Input Len (16384 + 1);""U9$
!Call String(1,U9$)
!If U9$ = "Y" Goto L_8000
!If U9$ <> "N" Goto L_8410
If S1[23] - S1[22] = 0 Goto L_8460
L_8440:! If S1[23] - S1[22] <> 0 Print @0,22;'RB';"A/R OUT OF BALANCE DO YOU WISH TO CLEAR DAILY TOTALS (Y/N)";
!Input Len (16384 + 1);" "X$
!Call String(1,X$)
!If X$ = "N" Goto L_8530
!If X$ <> "Y" Goto L_8440
L_8460: For DIV = 0 To 99
  Mat Read #4,0;S2;
  Mat Read #4,(DIV * 10) + 2;S3;
  Mat Read #4,(DIV * 10) + 3;S5;
  Mat Read #4,(DIV * 10) + 4;S6;
  Mat Read #4,(DIV * 10) + 5;S7;
  S3[0] = 0 \ S3[3] = 0 \ S3[6] = 0
  S4[0] = 0 \ S4[3] = 0 \ S4[6] = 0
  S5[0] = 0 \ S5[3] = 0 \ S5[6] = 0
  S7[0] = 0 \ S7[3] = 0 \ S7[6] = 0
  S6[0] = 0
  For X = 1 To 10 \ S2[X] = 0 \ Next X
  S2[0] = S1[23]
  Mat Write #4,0;S2;
  Mat Write #4,(DIV * 10) + 2;S3;
  Mat Write #4,(DIV * 10) + 3;S5;
  Mat Write #4,(DIV * 10) + 4;S6;
  Mat Write #4,(DIV * 10) + 5;S7;
Next DIV
L_8530: Goto OUTEND
L_8535: Rem SERVICE CHARGES
Print #0; Tab 35;"SERVICE CHARGE INFORMATION"
Print #0; Tab 27;"DAILY              MTD              YTD"
Print #0; Using "---,---,---,--#.## "; Tab 20;S6[0];S6[1];S6[2]
Print #0;
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End
OUTEND: Rem EXIT ROUTINE
Mat Read #1,0,108;D1
Gosub L_7900 \ Gosub L_7800
D1[1] = X2
Mat Write #1,0,108;D1;
!Print 'CS'
Try
	Close #2,#3,#4,#5,#50
else
	rem
End try
If P60$[20,20] = "Y"
	Try Close #6 Else Rem
ENDIF
Try
	print #statchan;"Accounts Receivable Aging Complete "
else
	rem
end try
If POGLFLAG And P9$[17,17] = "Y" And SPO <> 0
	Try
		print #statchan;"Process General Ledger Purchase Order Interface"
	else
		rem
	end try
	Call "MX013GL.DL4",Message$,intco,rstr$
	Try
		print #statchan;"Complete General Ledger Purchase Order Interface Process"
	else
		rem
	end try
endif
If P60$[26,26] = "Y"
	Let EOP = 99
	let tmp$="99"
	! Call dxSet("EOP",tmp$) 
	Try
		print #statchan;"Processing Inventory Reset"
	else
		rem
	end try
	Call "mx775.dl4",Message$,IntCo,rstr$,eop,statchan
	Try
		print #statchan;"Inventory Reset Process Completed"
	else
		rem
	end try
endif
Chain "MX013D.dl4"
Abort_Dayend: ! have an error s
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!let returnstatus=0
!If Eflg>0
!	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
!	tmp$=""
!Endif
!message$=message$+"Dayend Has Not Completed. "
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)
!try Call dxclose() else rem
outend9: ! everything has been written in called program
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program