! >>> Program 768
!
! description: Vendor Rebate on purchases  
!
! loadsave -w -n 100,10 -o prog/dxport/768.dl4 src/768.src
!
! 1.0 04/09/2008 change
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG  4, 2006  09:45:03
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx77/mx768.src (univ2) [txc] {48221}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
Declare Intrinsic Sub CheckDigits,InpBuf,String,Time
Declare Intrinsic Sub InpBuf,String,Time,VerifyDate
Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,String,Time,VerifyDate
! - Option Default Dialect IRIS1
Com A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Com PRFLG$[10],PRMKUPTYP$[4],PIC$[50],PRIML$[12]
Com 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Com 1%,PRBASE,PRPARC2[3],PRD1[4],AGEDAY
Com 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Com 2%,STK[2],FDT[1],PRMKUP[3],PRD0[2]
Com 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Com 3%,LBSORD,FUT[1],PRREDI[1],PRD2[3]
If Err 0 Gosub ERR_TRAP
Dim 1%,CNVTU[2]
Dim 3%,CNVTA,AMOUNT,2%,Q0[1]
Dim W1$[32],WH3$[24],WHFLG$[10],WHMKUPTYP$[4],WCOMM$[4]
Dim 2%,W2[9],W7[14],WH7[3],WHLPOOL,WHFDT[1],WHMKUP[3]
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 1%,RESTRICTED,WHBASE,WHPARC2[3]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHMISC2[7]
Dim 3%,WHFUT[2],VLIST,WHREDI[1],WHLBS[1]
Dim 2%,PCT1[5],3%,PCT2[5],PCT4[1],PCT5[9],PCT6[1],1%,PCT3[2]
Dim K2$[50],K3$[50],K4$[50],K5$[50],K9$[50],PCT$[12],k14$[50]
Dim K5$[50],K7$[50],K8$[50],K10$[50],K11$[50],K12$[50],ANS$[20]
dim custom_customer$[30]
Dim 3%,STARTDATE,ENDDATE,STARTVENDOR,ENDVENDOR,STARTPO,ENDPO,startcnt,endcnt,RETVAL$[512]
Dim STARTDATE$[10],ENDDATE$[10],PRNTDETAIL$[1],Z2$[5]
Dim 2%,POH0[5],POH3[4],POH[4],POH6[1]
Dim 1%,POH4[3],POH1[9],POH5[10]
Dim 3%,POH7,POH8[9],POH9[12]
Dim POH$[82],POH1$[116],ST$[14],POH2$[40]
Dim 1%,POL1[5],POL0[4],POMISC[2]
Dim 2%,POL2[2]
Dim 3%,POL3[6],POL[5],POL4[23],POL5[9],POL6[9]
Dim POL1$[120]
Dim 1%,CNVTU[2]
Dim 3%,CNVTA,AMOUNT
Dim 1%,VNDA[4],VNDM4[1]
Dim 2%,VND1[6],VND3
Dim 3%,VNDA2[11],VNDC1[5],VND4[1],VNDA3[7]
Dim VNDA$[264],VNDC2$[44],VNDA1$[20],VNDA2$[8],VNDA3$[4],VNDA5$[60]
Dim 1%,VNM2[2]
Dim 2%,VNM3[1],ARDATE
Dim 3%,VNM1[17]
! rcontracth - dimension rebate contract header
dim 1%,rcn$[70],vendcnt$[50]
dim 3%,rcn3[3]

! rebatedtl - dimension rebate detail
dim 1%,rb$[12],spuda2$[30]
dim 1%,rbum[1],rb[2],rbwh,rbl1[1]
dim 2%,rb1[5],rbmin,rbcom
dim 3%,rb3[6],rbn,rb5[2]

dim key_rbh$[50],key_rbdtl$[50],k13$[100]
Dim VNM1$[200],VNM2$[72],VNID$[17],CCD$[14]
Dim F$[16],LINE_$[132],VENDPART$[20],SPACES$[80]
Dim VNDRB$[62],2%,DT3[1],PROD$[12],P9$[50]
Dim 3%,VNDRB[8],CONM$[30],ARDATE$[8],X$[10],TME$[30],POUNIT$[4]
Dim CCODE$[200]
dim j4$[200]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],message$[600],msg$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
! - COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
!
Mat Read #1,19,50;P9$;
SPACES$ = " ",SPACES$
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
SCRN = 0 \ If J8 Let SCRN = 9
MXLN = 60 \ If SCRN Let MXLN = 20
CLN = 99
LINE_$ = "_",LINE_$
Read #1,3,0;CONM$;
Read #1,0,108;ARDATE;
X2 = ARDATE \ Gosub NUM2DATE
ARDATE$ = X$
!
CH_POCT = 2
Mat Read #1,88,1792;F$;
Ropen #3,F$
CH_PROD = 3
Mat Read #1,88,1744;F$;
Ropen #4,F$
CH_PRWH = 4
Mat Read #1,88,2400;F$;
Ropen #5,F$
CH_VEND = 5
Mat Read #1,88,1120;F$;
Ropen #6,F$
CH_VENDTAG = 6
Mat Read #1,88,2416;F$;
Ropen #7,F$
CH_POHEAD = 7
Mat Read #1,88,2432;F$;
Ropen #8,F$
CH_POLINE = 8
Mat Read #1,88,1728;F$;
Ropen #10,F$
CH_CCODES = 10
CH_VNDRB = 12
mat read #1,88,304;f$;  
ropen #13,f$              
ch_rbhead=13             
mat read #1,88,320;f$;  
ropen #14,f$    
Ch_rebatedtl=14
mat read #1,115,60;custom_customer$;
let custom_customer$=UCase$(trim$(custom_customer$))
!
!!Call "progdflt","768","",77,RETVAL$
!!STARTDATE = 101
!!ENDDATE = 591231
!!If RETVAL$[1,5] = "@@@@@"
!!  STARTVENDOR = 0
!!  ENDVENDOR = 999999
!!  STARTPO = 0
!!  ENDPO = 999999
!!  RPWH = 0
!!  PRNTDETAIL$[1,1] = "N"
!!  RETVAL$[1,6] = STARTVENDOR Using "######"
!!  RETVAL$[7,12] = ENDVENDOR Using "######"
!!  RETVAL$[13,18] = STARTPO Using "######"
!!  RETVAL$[19,24] = ENDPO Using "######"
!!  RETVAL$[25,26] = RPWH Using "##"
!!  RETVAL$[27,27] = PRNTDETAIL$[1,1]
!!Else ! "have defaults?
!!  STARTVENDOR = RETVAL$[1,6]
!!  ENDVENDOR = RETVAL$[7,12]
!!  STARTPO = RETVAL$[13,18]
!!  ENDPO = RETVAL$[19,24]
!!  RPWH = RETVAL$[25,26]
!!  PRNTDETAIL$ = RETVAL$[27,27]
!!End If 
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!K1$ = " "
J1 = 90 \ J2 = 0
!
! -  dx add xport reporting code
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
F$ = intCO Using "2/poctfle#"
Ropen #2,F$
F$ = intCO Using "3/vndrebate#"
Ropen #12,F$
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"768",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("startdate",tmp$)	\ if rtrim$(tmp$)="" let STARTDATE=010100 else let STARTDATE=tmp$
call dxget("enddate",tmp$)		\ if rtrim$(tmp$)="" let ENDDATE=123159 else let ENDDATE=tmp$
call dxget("startvend",tmp$)	\ STARTVENDOR = tmp$
call dxget("endvendor",tmp$)	\ if rtrim$(tmp$)="" let ENDVENDOR=999999 else let ENDVENDOR=tmp$
call dxget("startpo",tmp$)		\ STARTPO=tmp$
call dxget("endpo",tmp$)		\ if rtrim$(tmp$)="" let ENDPO=999999 else let ENDPO=tmp$
call dxget("rpwh",tmp$)			\ RPWH=tmp$ 
call dxget("prIntdetail",tmp$)	\ if rtrim$(tmp$)="" let PRNTDETAIL$="N" else let PRNTDETAIL$="Y"
prntcntrflag=0
if custom_customer$="ACTION"
	call dxget("PRINTCONTRACT",tmp$)\if rtrim$(tmp$)="" let prntcntrflag=0 else let prntcntrflag=99
	if prntcntrflag=99
		let PRNTDETAIL$= "Y"
		call dxget("STARTCONTRACT",tmp$)
		LET startcnt=tmp$
		if STARTcnt < 0 or STARTcnt > 999999 let e$ = "Invalid starting contract, must be between 0 and 999999!" \ error 10000
		call dxget("ENDCONTRACT",tmp$)\let endcnt=tmp$\if rtrim$(tmp$)="" let endcnt=999999
		if ENDcnt < STARTcnt or ENDcnt > 999999 Let e$ = "Invalid ending contract, must be between starting contract and 999999!" \ error 10000
	endif
endif!
!VALIDATIONS
if STARTVENDOR < 0 or STARTVENDOR > 999999 let e$ = "Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if ENDVENDOR < STARTVENDOR or ENDVENDOR > 999999 Let e$ = "Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
!
if STARTPO < 0 or STARTPO > 999999 let e$ = "Invalid starting po, must be between 0 and 999999!" \ error 10000
if ENDPO < STARTPO or ENDPO > 999999 Let e$ = "Invalid ending po, must be between starting po and 999999!" \ error 10000
!
if RPWH < 0 or RPWH > 99 let e$="Invalid warehouse, must be between 0 and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
X$ = STARTDATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \STARTDATE = X$
X2 = STARTDATE
gosub NUM2DATE
Call VerifyDate(X$,X$,E) \ If E Let e$="Invalid starting date!" \ error 10000
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
X$=tmp1$[1,2],tmp1$[3,4],tmp1$[5,6]
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let JD1 = -1 else let JD1 = X$[1,5]
!
X$ = ENDDATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \ENDDATE = X$
X2 = ENDDATE
gosub NUM2DATE
Call VerifyDate(X$,X$,E) \ If E let e$="Invalid ending date!" \ error 10000
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
X$=tmp1$[1,2],tmp1$[3,4],tmp1$[5,6]
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let JD2 = -1 else let JD2 = X$[1,5]
If JD2 < JD1 let e$="Invalid ending date, must be >= starting date!" \ error 10000
!!stop
!
!!STARTHERE: Rem "
!!
!!Print 'CS';@0,0;"-MX768-";@25,0;"VENDOR REBATES ON PURCHASES";
!!Print @20,2;'BR';"STARTING";@40,2;"ENDING";'ER';
!!Print @0,4;" 1> Received date";
!!X2 = STARTDATE \ Gosub NUM2DATE
!!STARTDATE$ = X$
!!X2 = ENDDATE \ Gosub NUM2DATE
!!ENDDATE$ = X$
!!Print @20,4;STARTDATE$[1,8];@40,4;ENDDATE$[1,8];
!!Print @0,6;" 2> Vendor";
!!Print Using "######";@20,6;STARTVENDOR;@40,6;ENDVENDOR;
!!Print @0,8;" 3> PO number";
!!Print Using "######";@20,8;STARTPO;@40,8;ENDPO;
!!Print @0,10;" 4> Warehouse #";
!!Print Using "##";@25,10;RPWH;
!!Print @0,12;" 5> Detail ";
!!Print @25,12;PRNTDETAIL$[1,1];
!!Goto FINALQ
!!EDT_ALL: Rem "change 'em All
!!For FLD = 1 To 5
! ! Gosub EDT_FLD
!!Next FLD
!!FINALQ: Rem "what now
!!Print @0,22;'CE';"SELECT  #: field  R: reselect all  P: print  S: save defaults  E: exit  ";
!!Input Len 16384 + 2;""ANS$ \ Call String(1,ANS$)
!!If ANS$ = "E" Goto OUTEND
!!If ANS$ = "R" Goto EDT_ALL
!!If ANS$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
!!  Input ""Z2$ \ Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto FINALQ
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "Progdfltw","768","",77,RETVAL$,URECFLAG
!!  Goto FINALQ
!!  End If 
!!If ANS$ = "P" Goto STARTSORT
!
!!FLD = ANS$
!!Gosub EDT_FLD
!!Goto FINALQ
!!EDT_FLD: Rem "where to
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On FLD Gosub FLD1,FLD2,FLD3,FLD4,FLD5
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!!
!!FLD1: Rem "date Range
!!Print @0,22;'CE';"Enter the starting receiving date (mmddyy) <CR>: same";
!!X2 = STARTDATE \ Gosub NUM2DATE
!!ANS$ = X$[1,2] + X$[4,5] + X$[7,8];X$ = ANS$[1,6] + "    "
!!Print @20,4;'CL';X$[1,8];
!!Print @20,4; \ Input Len 16384 + 6;""ANS$
!!If ANS$ = "" Let ANS$ = X$[1,6]
!!X2 = ANS$ \ ANS$ = X2 Using "&&&&&&"
!!X$ = ANS$[1,2] + "/" + ANS$[3,4] + "/" + ANS$[5,6]
!!Call VerifyDate(X$,ANS$,E) \ If E Goto FLD1
!!STARTDATE$ = X$
!!Print @20,4;STARTDATE$;
!!STARTDATE = ANS$
!!EDATE: Rem "ending
!!Print @0,22;'CE';"Enter the ending receiving date (mmddyy) <CR>: same";
!!X2 = ENDDATE \ Gosub NUM2DATE
!!ANS$ = X$[1,2] + X$[4,5] + X$[7,8];X$ = ANS$[1,6] + "    "
!!Print @40,4;'CL';X$[1,8];
!!Print @40,4; \ Input Len 16384 + 6;""ANS$
!!If ANS$ = "" Let ANS$ = X$[1,6]
!!X2 = ANS$ \ ANS$ = X2 Using "&&&&&&"
!!X$ = ANS$[1,2] + "/" + ANS$[3,4] + "/" + ANS$[5,6]
!!Call VerifyDate(X$,ANS$,E) \ If E Goto EDATE
!!ENDDATE$ = X$
!!ENDDATE = ANS$
!!If ENDDATE < STARTDATE
!!  Print @0,22;'RB CE';"INVALID RANGE ENTERED!";
!!  Signal 3,20 \ Print @0,22;'CE';
!!  Goto EDATE
!!End If 
!!Print @40,4;'CL';ENDDATE$;
!!Return 
!!
!!FLD2: Rem "vendor range
!!Print @0,22;'CE';"Enter the starting Vendor, <CR>: same";
!!Print Using "######";@20,6;STARTVENDOR;@40,6;ENDVENDOR;
!!Print @20,6;
!!Input Len 16384 + 6;""ANS$ \ If ANS$ = "" Let ANS$ = Str$(STARTVEND)
!!X2 = ANS$ \ If X2 < 0 Or X2 > 999999 Or Fra(X2) Goto FLD2
!!STARTVENDOR = X2
!!Print Using "######";@20,6;STARTVENDOR;
!!EVEND: Rem "ending
!!Print @0,22;'CE';"Enter the ending Vendor, <CR>: same";
!!Print @40,6;
!!Input Len 16384 + 6;""ANS$ \ If ANS$ = "" Let ANS$ = Str$(ENDVENDOR)
!!Print @0,22;'CE';
!!X2 = ANS$ \ If X2 < 0 Or X2 > 999999 Or Fra(X2) Goto EVEND
!!If X2 < STARTVENDOR
!!  Print @0,22;'RB CE';"INVALID RANGE ENTERED!";
!!  Signal 3,20 \ Print @0,22;'CE';
!!  Goto EVEND
!!End If 
!!ENDVENDOR = X2
!!Print Using "######";@40,6;'CL';ENDVENDOR;
!!RETVAL$[1,6] = STARTVENDOR Using "######"
!!RETVAL$[7,12] = ENDVENDOR Using "######"
!!Return 
!!
!!FLD3: Rem po ranger
!!Print @0,22;'CE';"Enter the starting PO Number, <CR>: same";
!!Print Using "######";@20,8;STARTPO;@40,8,ENDPO;
!!Print @20,8;
!!Input Len 16384 + 3;""ANS$ \ If ANS$ = "" Let ANS$ = Str$(STARTPO)
!!X2 = ANS$ \ If X2 < 0 Or X2 > 999999 Or Fra(X2) Goto FLD3
!!STARTPO = X2
!!Print Using "######";@20,8;STARTPO;
!!EPON: Rem "ending
!!Print @0,22;'CE';"Enter the ending Po number, <CR>: same";
!!Print @40,8;
!!Input Len 16384 + 3;""ANS$ \ If ANS$ = "" Let ANS$ = Str$(ENDPO)
!!Print @0,22;'CE';
!!X2 = ANS$ \ If X2 < 0 Or X2 > 999999 Or Fra(X2) Goto EPON
!!If X2 < STARTPO
!!  Print @0,22;'RB CE';"INVALID RANGE ENTERED!";
!!  Signal 3,20 \ Print @0,22;'CE';
!!  Goto EPON
!!End If 
!!ENDPO = X2
!!Print Using "######";@40,8;'CL';ENDPO;
!!RETVAL$[13,18] = STARTPO Using "######"
!!RETVAL$[19,24] = ENDPO Using "######"
!!Return 
!!
!!FLD4: Rem " Warehouse of sales
!!Print @0,22;'CE';"Enter the Warehouse sales were for, 0: All"
!!Print Using "##";@25,10;RPWH
!!Print @25,10; \ Input Len 16384 + 2;""ANS$
!!If ANS$ = "" Let ANS$ = Str$(RPWH)
!!X2 = ANS$ \ If X2 < 0 Or X2 > 99 Or Fra(X2) Goto FLD3
!!Print @0,22;'CE';
!!RPWH = X2
!!Print Using "##";@25,10;RPWH;
!!RETVAL$[25,26] = RPWH Using "##"
!!Return 
!!
!!FLD5: Rem "print detail
!!Print @0,22;'CE';"Show rebate detail Y/N";
!!Print @25,12;PRNTDETAIL$[1,1];
!!Input Len 16384 + 1;""ANS$ \ If ANS$ = "" Let ANS$ = PRNTDETAIL$[1,1]
!!If ANS$ <> "Y" And ANS$ <> "N" Goto FLD5
!!PRNTDETAIL$ = ANS$
!!Print @25,12;'CL';PRNTDETAIL$[1,1];
!!RETVAL$[27,27] = PRNTDETAIL$[1,1]
!!Return 
!!
!
STARTSORT: Rem

if j8
  IF PRNTDETAIL$= "Y"
    tmp$="VENDOR CODE",fdel$
    tmp$=tmp$,"VENDOR NAME",fdel$
    tmp$=tmp$,"PRODUCT CODE",fdel$
	tmp$=tmp$,"DESCRIPTION",fdel$
	tmp$=tmp$,"VENDOR ITEM CODE",fdel$
    tmp$=tmp$,"CONTCT ",fdel$
	IF CUSTOM_CUSTOMER$="ACTION"
		tmp$=tmp$,"CONTRACT DESCRIPTION ",fdel$
		tmp$=tmp$,"VENDOR CONTRACT ",fdel$
	ENDIF
    tmp$=tmp$,"PO NUM",fdel$
    tmp$=tmp$,"RCV DTE",fdel$
    tmp$=tmp$,"QTY RCV",fdel$
    tmp$=tmp$,"QTY RCV U/M",fdel$
    tmp$=tmp$,"RBT UNIT",fdel$ 
    tmp$=tmp$,"PO COST",fdel$ 
    tmp$=tmp$,"RBT AMT",fdel$ 
  ELSE
    tmp$="VENDOR CODE",fdel$
    tmp$=tmp$,"VENDOR NAME",fdel$
    tmp$=tmp$,"PRODUCT CODE",fdel$
    tmp$=tmp$,"DESCRIPTION 1",fdel$
    tmp$=tmp$,"DESCRIPTION 2",fdel$
    tmp$=tmp$,"VENDOR ITEM CODE",fdel$
    tmp$=tmp$,"PO NUM",fdel$
    tmp$=tmp$,"QTY RECV",fdel$
    tmp$=tmp$,"U/M",fdel$
    tmp$=tmp$,"LBS RECV",fdel$
    tmp$=tmp$,"REBATE",fdel$
  END IF
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF 
!
!Print 
!Print "Sorting .......";
K2$ = " ",K2$
K2$[1,6] = STARTPO Using "######"
SORTLOOP: Rem LOOP IT
Search #CH_POCT,3,1;K2$,REC_POCT,E
If E Goto MAIN
Mat Read #CH_POCT,REC_POCT,0;PCT1;
Mat Read #CH_POCT,REC_POCT,24;PCT2;
Mat Read #CH_POCT,REC_POCT,60;PCT3;
Mat Read #CH_POCT,REC_POCT,66;PCT$;
Mat Read #CH_POCT,REC_POCT,78;PCT4;
Mat Read #CH_POCT,REC_POCT,90;PCT5;
Mat Read #CH_POCT,REC_POCT,162;PCT6;
LET X2=pct1[4] \ GOSUB YMD2JUL: \ LET X2=0    
jpodate=x2
If PCT1[4] < STARTDATE Or PCT1[4] > ENDDATE Goto SORTLOOP
If PCT1[0] < STARTPO Or PCT1[0] > ENDPO Goto SORTLOOP
If PCT1[2] < STARTVENDOR Or PCT1[2] > ENDVENDOR Goto SORTLOOP
if prntcntrflag=0
	K12$ = " ",K12$
	K12$[1,6] = PCT1[2] Using "######"
	K12$[7,18] = PCT$[1,12]
	Search #CH_VNDRB,3,1;K12$,REC_VNDRB,E
	If E Goto SORTLOOP
	X2 = K12$[1,6]
	If X2 <> PCT1[2] Goto SORTLOOP
	If K12$[7,18] <> PCT$[1,12] Goto SORTLOOP
	Mat Read #CH_VNDRB,REC_VNDRB,0;VNDRB$;
	Mat Read #CH_VNDRB,REC_VNDRB,62;VNDRB;
	If PCT1[4] < VNDRB[2] Goto SORTLOOP
	If VNDRB[3] If PCT1[4] > VNDRB[3] Goto SORTLOOP
	If VNDRB[6] If VNDRB[6] <> PCT3[1] Goto SORTLOOP
	K9$ = " ",K9$
	K9$[1,6] = PCT1[2] Using "######"
	K9$[7,12] = PCT1[0] Using "######"
	K9$[13,15] = PCT1[1] Using "###"
	K9$[16,21] = PCT1[3] Using "######"
else 
	! for Action
	prod$=" ",prod$         
	prod$[1,12]=pct$[1,12]  
	contractfound=0
	gosub  GET_PSREBATEPROD: !    
	if not (contractfound) goto sortloop:
	if pct1[4]<rb1[2] goto sortloop: ! contract did not start yet
	if rb1[4]  if pct1[4] >rb1[4] goto sortloop:        ! contract expired
	if rb1[0]<startcnt or rb1[0]> endcnt goto sortloop:       
	if rbwh if rbwh<>pct3[1] goto sortloop: ! wrong whse   
	k9$=" ",k9$
	k9$[1,6]=pct1[2] using "######" ! vendor
	k9$[7,12]=rb1[0] using "######" ! contract number
	k9$[13,18]=pct1[0] using "######" ! po number
	k9$[18,20]=pct1[1] using "###" ! po line number
	k9$[21,26]=pct1[3] using "######" ! po rec cntrl num
endif
Search #9,4,1;K9$,REC_POCT,E
If E Let e$ = "syserrorfile 768 sortfile mode (m)=4 keyno (k)=1 r=",REC_POCT," e=",e," keyval (k$)=",K9$ \error 10000
!If E Gosub ERR_SEARCH
Goto SORTLOOP
MAIN: Rem print the report
K9$ = " ",K9$
cntNUM=0
PONUM = 0
LINENUM = 0
VENDNUM = 0
PROD$=""
MAINLOOP: Rem
Search #9,3,1;K9$,REC_POCT,E
If E
  If GRAND_REBATE
    Gosub PRNTDETAIL
	if prntcntrflag=0
		Gosub PRNTPOTOTAL
	else
		gosub prntcnttotal: 
	endif
    Gosub PRNTVENDTOTAL
    Gosub PRNTGRANDTOTAL
  End If 
  Goto OUTEND
End If 
Mat Read #CH_POCT,REC_POCT,0;PCT1;
Mat Read #CH_POCT,REC_POCT,24;PCT2;
Mat Read #CH_POCT,REC_POCT,60;PCT3;
Mat Read #CH_POCT,REC_POCT,66;PCT$;
Mat Read #CH_POCT,REC_POCT,78;PCT4;
Mat Read #CH_POCT,REC_POCT,90;PCT5;
Mat Read #CH_POCT,REC_POCT,162;PCT6;
LET X2=pct1[4] \ GOSUB YMD2JUL: \ LET X2=0
jpodate=x2
if prntcntrflag=0
	X2 = K9$[1,6]
	If VENDNUM = 0 Let VENDNUM = X2
	If VENDNUM <> X2
		Gosub PRNTDETAIL
		Gosub PRNTPOTOTAL
		Gosub PRNTVENDTOTAL
		VENDNUM = K9$[1,6]
		X2 = K9$[7,12]
		PONUM = X2
		X2 = K9$[13,15]
		LINENUM = X2
	End If 
	X2 = K9$[7,12]
	If PONUM = 0 Let PONUM = X2
	If PONUM <> X2
		Gosub PRNTDETAIL
		Gosub PRNTPOTOTAL
		X2 = K9$[7,12]
		PONUM = X2
		X2 = K9$[13,15]
		LINENUM = X2
	End If 
	X2 = K9$[13,15]
	If LINENUM = 0 Let LINENUM = X2
	If LINENUM <> X2
		Gosub PRNTDETAIL
		X2 = K9$[13,15]
		LINENUM = X2
	End If 
Else
	X2=K9$[1,6]
	IF VENDNUM=0 LET VENDNUM=X2
	IF VENDNUM<>X2
		gosub prntdetail:
		gosub prntcnttotal:
		gosub prntvendtotal:
		vendnum=K9$[1,6]
		X2=K9$[7,12]   
		cntnum=x2
		!X2=K9$[7,12] 
		X2=K9$[18,20]
		linenum=x2
	ENDIF
	X2=K9$[7,12]
	IF cntNUM=0 LET cntNUM=X2
	IF cntNUM<>X2
		gosub prntdetail:  
		gosub prntcnttotal:
		X2=K9$[7,12]    
		cntnum=x2       
		X2=K9$[18,20] 
		linenum=x2     
	ENDIF
	X2=K9$[18,20] 
	IF LINENUM=0 LET LINENUM=X2
	REM IF LINENUM<>X2 
	IF rtrim$(prod$)<>"" gosub prntdetail: 
	X2=K9$[18,20] 
	linenum=x2
	REM ENDIF
endif
PROD$ = " ",PROD$
PROD$[1,12] = PCT$[1,12]
ACCUMLINE: Rem
K3$ = " ",K3$
K3$[1,12] = PCT$[1,12]
Search #CH_PROD,2,1;K3$,REC_PROD,E
!If E Gosub ERR_SEARCH
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,624;PR_PO
Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,664;LBSORD
Mat Read #CH_PROD,REC_PROD,670;U4
Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,846;PFTB
Read #CH_PROD,REC_PROD,854;UPCT
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Mat Read #CH_PROD,REC_PROD,944;PR_A2$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Mat Read #CH_PROD,REC_PROD,1018;PFN
Mat Read #CH_PROD,REC_PROD,1030;STK
Mat Read #CH_PROD,REC_PROD,1048;FDT
Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
Mat Read #CH_PROD,REC_PROD,1066;PRBASE
Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
Mat Read #CH_PROD,REC_PROD,1088;FUT
Mat Read #CH_PROD,REC_PROD,1100;PRPARC2
Mat Read #CH_PROD,REC_PROD,1108;PRREDI
Mat Read #CH_PROD,REC_PROD,1120;PIC$
K4$ = " ",K4$
K4$[1,12] = PCT$[1,12]
K4$[13,14] = PCT3[1] Using "##"
Search #CH_PRWH,2,1;K4$,REC_PRWH,E
!If E Gosub ERR_SEARCH
Mat Read #CH_PRWH,REC_PRWH,0;W1$
Mat Read #CH_PRWH,REC_PRWH,32;W1
Mat Read #CH_PRWH,REC_PRWH,38;W2
Mat Read #CH_PRWH,REC_PRWH,78;W3
Mat Read #CH_PRWH,REC_PRWH,228;W5
Mat Read #CH_PRWH,REC_PRWH,384;WHPARC
Read #CH_PRWH,REC_PRWH,396;WHLPOOL
Mat Read #CH_PRWH,REC_PRWH,400;WCOMM$
Read #CH_PRWH,REC_PRWH,404;FCWGT
Mat Read #CH_PRWH,REC_PRWH,420;W0
Mat Read #CH_PRWH,REC_PRWH,428;WH7
Mat Read #CH_PRWH,REC_PRWH,444;WH8
Mat Read #CH_PRWH,REC_PRWH,540;WH9
Mat Read #CH_PRWH,REC_PRWH,696;W7
Mat Read #CH_PRWH,REC_PRWH,756;WH3$
Mat Read #CH_PRWH,REC_PRWH,780;WHLV
Read #CH_PRWH,REC_PRWH,798;WHRPLN
Mat Read #CH_PRWH,REC_PRWH,800;WHMISC
Mat Read #CH_PRWH,REC_PRWH,842;WHLM
Mat Read #CH_PRWH,REC_PRWH,846;WHMISC2
Read #CH_PRWH,REC_PRWH,894;RESTRICTED
Mat Read #CH_PRWH,REC_PRWH,896;WHFUT
Mat Read #CH_PRWH,REC_PRWH,914;WHFDT
Read #CH_PRWH,REC_PRWH,922;VLIST
Mat Read #CH_PRWH,REC_PRWH,928;WHFLG$
Read #CH_PRWH,REC_PRWH,938;WHBASE
Mat Read #CH_PRWH,REC_PRWH,940;WHMKUP
Mat Read #CH_PRWH,REC_PRWH,956;WHMKUPTYP$
Mat Read #CH_PRWH,REC_PRWH,960;WHPARC2
Mat Read #CH_PRWH,REC_PRWH,968;WHREDI
Mat Read #CH_PRWH,REC_PRWH,980;WHLBS
VENDPART$ = " ",VENDPART$
If W1$[13,32] <> SPACES$[1,20]
  VENDPART$[1,20] = W1$[13,32]
Else 
  VENDPART$[1,20] = A$[93,112]
End If 
UNITS_RECV = UNITS_RECV + PCT2[0]
If PCT6[1] Let LBS_RECV = LBS_RECV + FNR(((PCT2[0] / PCT6[1]) * PCT6[0]))
GETREBATE: Rem
If PRNTDETAIL$ = "Y" Let PRNTDETAIL = 1 Else Let PRNTDETAIL = 0
if prntcntrflag=0
	K12$ = " ",K12$
	K12$[1,6] = VENDNUM Using "######"
	K12$[7,18] = PROD$[1,12]
	REBATE_AMT = 0
	REBATELOOP: Rem loop
	Search #CH_VNDRB,3,1;K12$,REC_VNDRB,E
	If E Goto REBATESDONE
	X2 = K12$[1,6]
	If X2 <> VENDNUM Goto REBATESDONE
	If K12$[7,18] <> PROD$[1,12] Goto REBATESDONE
	Mat Read #CH_VNDRB,REC_VNDRB,0;VNDRB$;
	Mat Read #CH_VNDRB,REC_VNDRB,62;VNDRB;
	If PCT1[4] < VNDRB[2] Goto REBATELOOP
	If VNDRB[3] If PCT1[4] > VNDRB[3] Goto REBATELOOP
	If VNDRB[6] If VNDRB[6] <> PCT3[1] Goto REBATELOOP
	If VNDRB[5] > 0
		CNVTU[0] = 0
		CNVTU[1] = VNDRB[5]
		CNVTU[2] = 1
		CNVTA = PCT2[0]
		Gosub CONVERT
		RBUNIT = AMOUNT
	End If 
	CNVTU[0] = 0
	CNVTU[1] = VNDRB[5]
	CNVTU[2] = 2
	CNVTA = PCT2[1]
	Gosub CONVERT
	POCOST = AMOUNT
	If VNDRB[8] = 1 ! %
		If VNDRB[5] > 0
		 REBATE_AMT = FNR(RBUNIT * (POCOST * (VNDRB[4] / 100)))
		End If 
		If VNDRB[5] = -3 ! PER LB
			If PCT6[1] Let REBATE_AMT = FNR(((PCT2[0] / PCT6[1]) * PCT6[0]) * (POCOST * (VNDRB[4] / 100)))
		End If 
	End If 
	If VNDRB[8] = 2 ! $
		If VNDRB[5] > 0
			REBATE_AMT = FNR(RBUNIT * VNDRB[4])
		End If 
		If VNDRB[5] = -3
			If PCT6[1] Let REBATE_AMT = FNR(((PCT2[0] / PCT6[1]) * PCT6[0]) * VNDRB[4])
		 End If 
		End If 
If PRNTDETAIL 
  Gosub PRNTHEADER
  !gosub rcontracth
  if J8 !XML
    tmp$=VENDNUM Using "######",fdel$
    tmp$=tmp$,rtrim$(VNDA$[1,30]),fdel$
    tmp$=tmp$,rtrim$(PCT$[1,12]),fdel$
    tmp$=tmp$,rtrim$(A$[9,33]),fdel$
    tmp$=tmp$,rtrim$(VENDPART$[1,20]),fdel$
    tmp$=tmp$,VNDRB[1] Using "######",fdel$
	!tmp$=tmp$,rtrim$(rcn$[41,70]),fdel$
	!tmp$=tmp$,rtrim$(vendcnt$[1,20]),fdel$
    tmp$=tmp$,PCT1[0] Using "######",fdel$
  else
    Print #0; Tab 2;PCT$[1,12];" ";A$[9,33];" ";VENDPART$[1,20];
	PRINT #0;using "###### ";TAB 63;vndrb[1];! rcn$[41,70];" ";vendcnt$[1,20]
	! cln=cln+1
	PRINT #0;using "###### ";TAB 70;pct1[0];
  end if!!
  !
  X2 = PCT1[4]
  Gosub NUM2DATE
  if j8 !
    tmp$=tmp$,X$[1,8],fdel$
  else
    Print #0; Tab 78;X$[1,8];
  end if !!
  !
  If VNDRB[5] > 0
    if j8
      tmp$=tmp$,RBUNIT Using "######.##",fdel$
    else
      Print #0; Using "######.##"; Tab 87;RBUNIT;
    end if
    Mat Read #CH_CCODES,VNDRB[5],0;CCD$;
    if j8
      tmp$=tmp$,rtrim$(CCD$[11,14]),fdel$
    else
      Print #0; Tab 97;CCD$[11,14];
    end if
  End If 
  !
  If VNDRB[5] = -3
    if j8
      If PCT6[1] tmp$=tmp$,FNR(((PCT2[0] / PCT6[1]) * PCT6[0])) Using "######.##", "LBS",fdel$
    else
      If PCT6[1] Print #0; Using "######.##"; Tab 87;FNR(((PCT2[0] / PCT6[1]) * PCT6[0]));
      Print #0; Tab 97;" LBS";
    end if
  End If 
  !
  If VNDRB[8] = 1
    if j8
      tmp$=tmp$,VNDRB[4] Using "###.##%",fdel$
    else
      Print #0; Using "  ###.##%"; Tab 103;VNDRB[4];
    end if
  End If 
  !
  If VNDRB[8] = 2
    if j8 !XML
      tmp$=tmp$,VNDRB[4] Using "$$$$$#.##",fdel$
    else
      Print #0; Using "$$$$$#.##"; Tab 103;VNDRB[4];
    end if !
  End If 
  !
	if j8!xml
		tmp$=tmp$,POCOST Using "$$$$$#.##",fdel$
		tmp$=tmp$,REBATE_AMT Using "$$$$$#.##",fdel$
	else
		Print #0; Using "$$$$$#.##"; Tab 113;POCOST;
		Print #0; Using "$$$$$#.##"; Tab 123;REBATE_AMT
		CLN = CLN + 1
		end if!
		call addtostr(e$,rstr$,tmp$+rdel$) 
	End If 
!
	LINE_REBATE = LINE_REBATE + REBATE_AMT
	PO_REBATE = PO_REBATE + REBATE_AMT
	VENDOR_REBATE = VENDOR_REBATE + REBATE_AMT
	GRAND_REBATE = GRAND_REBATE + REBATE_AMT
	Goto REBATELOOP

else  !!!! contract print
	prod$=" ",prod$              
	prod$[1,12]=pct$[1,12]       
	contractfound=0              
	gosub  GET_PSREBATEPROD: !   
	rb_basecost= PCT2[1]
	IF RB[0]=1 ! rebate type #1 % discount                                    
		LET RBCOST=(RB_BASECOST*((100-RB5[0])/100))                               
	ENDIF                                                                     
	IF RB[0]=2 ! rebate type #2 $ discount                                    
		LET CNVTU[0]=0;CNVTU[1]=RBUM[0];CNVTU[2]=2;CNVTA=RB_BASECOST              
		GOSUB CONVERT:                                                            
		LET CNVTA=(AMOUNT-RB5[0]);CNVTU[0]=RBUM[0];CNVTU[1]=0 \ GOSUB CONVERT:    
		LET RBCOST=AMOUNT                                                         
	ENDIF                                                                     
	IF RB[0]=3 ! rebate type #3 flat cost                                     
		LET RBCOST=RB5[0]                                                         
		IF RB1[5]=2 !  commodity code                                             
			LET CNVTU[0]=RBUM[1];CNVTU[1]=0;CNVTU[2]=2;CNVTA=RBCOST                 
			GOSUB CONVERT:                                                          
			LET RBCOST=AMOUNT                                                       
		ENDIF                                                                     
	ENDIF 
	if rbum[0]<>0
		cNVTU[0]=0               
		LET CNVTU[1]=  rbum[0]    
		LET CNVTU[2]=1               
		LET CNVTA= pct2[0]             
		GOSUB CONVERT:               
		LET rbunit=AMOUNT    
	endif
	cNVTU[0]=0              
	LET CNVTU[1]= rbum[0] 
	LET CNVTU[2]=2          
	LET CNVTA= pct2[1]      
	GOSUB CONVERT:          
	LET pocost=AMOUNT  
	cNVTU[0]=0             
	LET CNVTU[1]= rbum[0]  
	LET CNVTU[2]=2         
	LET CNVTA=  rbcost    
	GOSUB CONVERT:         
	LET dsp_rbcost=AMOUNT 
	rebate_amt=fnr(rbunit*(pocost-dsp_rbcost))
	if rebate_amt < 0 let rebate_amt=0
	if rebate_amt<>0
		if prntdetail<>0
			GOSUB rcontracth:
			if not(j8)
				gosub prntheader: ! 
				PRINT #0;TAB 2;PCT$[1,12];" ";A$[9,33];" ";VENDPART$[1,20];
				PRINT #0;using "###### ";TAB 63;RB1[0];rcn$[41,70];" ";vendcnt$[1,20]
				CLN = CLN + 1                    
				Print #0; Using "###### "; Tab 70;pct1[0];
				X2=PCT1[4]
				GOSUB NUM2DATE:
				PRINT #0;tab 78;X$[1,8];
				print #0;using "######.##";tab 87;rbunit;
				mat read #ch_ccodes,rbum[0],0;ccd$;
				print #0;tab 97;ccd$[11,14];
				print #0;using "$$$$$#.##";tab 103;dsp_rbcost;
				print #0;using "$$$$$#.##";tab 113;pocost;
				print #0;using "$$$$$#.##";tab 123;rebate_amt 
			else
				if j8!xml
					tmp$=VENDNUM Using "######",fdel$
					tmp$=tmp$,rtrim$(VNDA$[1,30]),fdel$
					tmp$=tmp$,pct$[1,12],fdel$
					tmp$=tmp$,a$[9,33],fdel$
					tmp$=tmp$,vendpart$[1,20],fdel$
					tmp$=tmp$,rb1[0] using "######",fdel$
					tmp$=tmp$,rcn$[41,70],fdel$
					tmp$=tmp$,vendcnt$[1,20],fdel$
					tmp$=tmp$,pct1[0] using "######",fdel$
					X2=PCT1[4]
					GOSUB NUM2DATE:
					tmp$=tmp$,X$[1,8],fdel$
					tmp$=tmp$,rbunit using "######.##",fdel$
					mat read #ch_ccodes,rbum[0],0;ccd$;
					tmp$=tmp$,ccd$[11,14],fdel$
					tmp$=tmp$,dsp_rbcost using "$$$$$#.##",fdel$
					tmp$=tmp$,POCOST Using "$$$$$#.##",fdel$
					tmp$=tmp$,REBATE_AMT Using "$$$$$#.##",fdel$
					call addtostr(e$,rstr$,tmp$+rdel$) 
				endif
			endif
		cln=cln+1
		endif
		LINE_REBATE=LINE_REBATE+REBATE_AMT
		cnt_REBATE=cnt_REBATE+REBATE_AMT
		VENDOR_REBATE=VENDOR_REBATE+REBATE_AMT
		GRAND_REBATE=GRAND_REBATE+REBATE_AMT  
	endif
endif ! end of contract print section
!
REBATESDONE: Rem no more
Goto MAINLOOP
!
PRNTHEADER: Rem "Report Headings
If CLN < MXLN Return 
IF PGN ! "not on first page
  If SCRN
    !Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
    !Input Len 16384 + 1;""ANS$
    !Print 'CS';
  Else ! "printer/file
    if not(j8) Print #0;"\14\";
  End If 
End If 
PGN = PGN + 1
TME$ = "" \ Call Time(TME$)
if NOT(j8) Print #0; Tab 5;"DATE: ";ARDATE$;
X2 = Int(65 - (Len(CONM$) / 2))
if NOT(j8)
  Print #0; Tab X2;CONM$;
  Print #0; Tab 120;"PAGE: ";Str$(PGN)
  Print #0;" -768- ";TME$;
  Print #0; Tab 49;"VENDOR REBATES ON PURCHASES"
  Print #0;" "
end if 
Gosub GET_VENDOR
if j8 !
  tmp$=VENDNUM Using "######",fdel$
  tmp$=tmp$,rtrim$(VNDA$[1,30]),fdel$
else
  Print #0; Using "###### "; Tab 5;"VENDOR ";VENDNUM;VNDA$[1,30]
  Print #0;" "
  Print #0; Tab 2;"PRODUCT CODE";
end if !
!
If PRNTDETAIL
  if NOT(j8)
    Print #0; Tab 15;" DESCRIPTION "; Tab 40;"VENDOR ITEM CODE";
    if prntcntrflag=0
		Print #0; Tab 61;"CONTCT"; Tab 68;"PO NUM"; Tab 76;"RCV DTE"; Tab 85;"QTY RCV";
		Print #0; Tab 101;"RBT UNIT"; Tab 111;"PO COST"; Tab 121;"RBT AMT"
	else
		print #0;tab 61;"CONTRACT";TAB 70;"PO NUM";TAB 79;"RCV DTE";TAB 89;"QTY RCV";
		PRINT #0;TAB 105;"RBT UNIT";TAB 115;"PO COST";TAB 125;"RBT AMT"
    endif
    Print #0;LINE_$[1,131]
  end if
Else 
  if NOT(j8)
    Print #0; Tab 16;"DESCRIPTION"; Tab 40;"VENDOR ITEM CODE"; Tab 67;"QTY RECV"; Tab 78;"U/M";
    Print #0; Tab 73;"LBS RECV"; Tab 95;"REBATE"
    Print #0;LINE_$[1,105]
  end if
End If 
CLN = 6
Return 
!
PRNTDETAIL: Rem print the detail line
Gosub PRNTHEADER
If PRNTDETAIL Goto LINEDONE
!
if j8
  tmp$=VENDNUM Using "######",fdel$
  tmp$=tmp$,rtrim$(VNDA$[1,30]),fdel$
  tmp$=tmp$,rtrim$(PROD$[1,12]),fdel$!!PRODUCT CODE
  tmp$=tmp$,rtrim$(A$[9,38]),fdel$ !!
  tmp$=tmp$,rtrim$(A$[63,92]),fdel$  !!DESCRIPTION2
  tmp$=tmp$,rtrim$(VENDPART$[1,20]),fdel$
else
  Print #0; Tab 2;PROD$[1,12];!!!PRODUCT CODE
  Print #0; Tab 16;A$[9,38];" ";VENDPART$[1,20];!!DESCRIPTION ,VENDOR ITEM CODE   
end if
CNVTU[0] = 0
CNVTU[1] = PFU1[10]
CNVTU[2] = 1
CNVTA = UNITS_RECV
Gosub CONVERT
REC_UNIT = AMOUNT
! - tmp$=tmp$,VNDRB[1] Using "######",fdel$ !!PO
if NOT(j8)  
  Print #0; Using "######.##"; Tab 67;REC_UNIT;  !!QTY RECV
ELSE  !!
  tmp$=tmp$,VNDRB[1] Using "######",fdel$ !!PO

  tmp$=tmp$,REC_UNIT Using "######.##",fdel$  !!QTY RECV
end if
If PFU1[10] > 0
  Mat Read #CH_CCODES,PFU1[10],0;CCD$;
  POUNIT$ = CCD$[11,14]
End If 
If PFU1[10] = -1 Let POUNIT$ = "CWT "
if NOT(j8)
  Print #0; Tab 78;POUNIT$; !!!U/MLBS
  Print #0; Using "######.##"; Tab 83;LBS_RECV; !!RECV
  Print #0; Using "$$$$$$#.##"; Tab 93;LINE_REBATE  !!REBATE
  Print #0; Tab 16;A$[63,92]  !!DESCRIPTION2
ELSE  !
  tmp$=tmp$,POUNIT$,fdel$ !!!U/MLBS
  tmp$=tmp$,LBS_RECV Using "######.##",fdel$ !!RECV
  tmp$=tmp$,LINE_REBATE Using "$$$$$$#.##",fdel$  !!REBATE
  call addtostr(e$,rstr$,tmp$+rdel$) 
end if
CLN = CLN + 2
LINEDONE: Rem
LINE_REBATE = 0
LBS_RECV = 0
UNITS_RECV = 0
Return 
!
PRNTPOTOTAL: Rem print po total
if NOT(j8)
  Print #0; Using "###### "; Tab 16;"TOTALS FOR PO ";PONUM;
  Print #0; Using "$$$$$$$#.##";PO_REBATE
  Print #0;" "
end if
PO_REBATE = 0
CLN = CLN + 2
Return 

prntcnttotal: ! print contract total
if not(j8)
	print #0;using "###### ";TAB 16;"TOTALS FOR CONTRACT ";cntNUM;
	PRINT #0;USING "$$$$$$$#.##";CNT_REBATE 
	print #0;" "
endif
cnt_REBATE=0
CLN=CLN+2
RETURN

PRNTVENDTOTAL: Rem VENDOR TOTAL
if NOT(j8)
  Print #0; Using "######  "; Tab 16;"TOTAL FOR VENDOR ";VENDNUM;
end if
Gosub GET_VENDOR
if NOT(j8)
  Print #0;VNDA$[1,30];
  Print #0; Using " $$$$$$$$$#.##";VENDOR_REBATE
  Print #0;" "
end if
VENDOR_REBATE = 0
CLN = 99
Return 
!
PRNTGRANDTOTAL: Rem
if NOT(j8)
  Print #0; Using "$$$$$$$$$$#.## "; Tab 16;" Grand total of all rebates ";GRAND_REBATE
end if
Return 
!
GET_VENDOR: Rem READ VENDOR
K5$ = " ",K5$
K5$[1,6] = VENDNUM Using "######"
Search #CH_VEND,2,1;K5$,REC_VEND,E
If E
  VNDA$ = " ",VNDA$
  VNDA$ = "ERROR VENDOR NOT ON FILE !!!!"
  Return 
End If 
Mat Read #CH_VEND,REC_VEND,0;VNDA$
Mat Read #CH_VEND,REC_VEND,264;VND1
Mat Read #CH_VEND,REC_VEND,292;VNDA2
Mat Read #CH_VEND,REC_VEND,364;VNDC1
Mat Read #CH_VEND,REC_VEND,400;VNDC2$
Mat Read #CH_VEND,REC_VEND,444;VND3
Mat Read #CH_VEND,REC_VEND,448;VND4
Mat Read #CH_VEND,REC_VEND,460;VNDA1$
Mat Read #CH_VEND,REC_VEND,480;VNDA2$
Mat Read #CH_VEND,REC_VEND,488;VNDA
Mat Read #CH_VEND,REC_VEND,498;VNDA3
Mat Read #CH_VEND,REC_VEND,546;VNDA3$
Mat Read #CH_VEND,REC_VEND,554;VNDM4
Mat Read #CH_VEND,REC_VEND,576;VNDA5$
Search #CH_VENDTAG,2,1;K5$,REC_VENDTAG,E
!If E Gosub ERR_SEARCH
Mat Read #CH_VENDTAG,REC_VENDTAG,0;VNM1$
Mat Read #CH_VENDTAG,REC_VENDTAG,200;VNM2
Mat Read #CH_VENDTAG,REC_VENDTAG,206;VNM1
Mat Read #CH_VENDTAG,REC_VENDTAG,314;VNM2$
Mat Read #CH_VENDTAG,REC_VENDTAG,386;VNM3
Mat Read #CH_VENDTAG,REC_VENDTAG,394;VNID$
Return 
!
GET_PSREBATEPROD: !
K14$=" ",K14$
K14$[1,12]=PROD$[1,12]
RBPRODLOOP: !
SEARCH #Ch_rebatedtl,3,2;k14$,Rec_rebatedtl,E
IF E>2 GOSUB ERR_SEARCH:
if e=0 
if  K14$[1,12]=PROD$[1,12]   
gosub READ_RBDETL:
IF NOT (VALIDREBATE) GOTO RBPRODLOOP:
ENDIF
ENDIF

IF E OR K14$[1,12]<>PROD$[1,12] 
GET_PSREBATECOM: !
K14$=" ",K14$
K14$[1,1]="*"
K14$[2,5]=A$[152,155] 
rbcommloop: !
SEARCH #Ch_rebatedtl,3,2;k14$,Rec_rebatedtl,E   
IF E>2 GOSUB ERR_SEARCH: 
if e return
if e=0                                
if  k14$[2,5]=A$[152,155]
gosub READ_RBDETL:                    
IF NOT (VALIDREBATE) GOTO  rbcommloop:   
ENDIF                                 
ENDIF                                 
if k14$[2,5]<>A$[152,155] return
gosub READ_RBDETL:
REM if  RB1[1] <> PCT1[2] GOTO RBCOMMLOOP: ! WRONG VENDOR

else 
gosub READ_RBDETL: ! Read rebated detail record       
endif
contractfound=1
return

READ_RBDETL: ! Read rebated detail record 
validrebate=1
MAT  READ #Ch_rebatedtl,Rec_rebatedtl,	 12;RB1
MAT  READ #Ch_rebatedtl,Rec_rebatedtl,	 36;RBUM
MAT  READ #Ch_rebatedtl,Rec_rebatedtl,   40;RB      
MAT  READ #Ch_rebatedtl,Rec_rebatedtl,	118;RBWH
MAT  READ #Ch_rebatedtl,Rec_rebatedtl,	126;RBL1
MAT  READ #Ch_rebatedtl,Rec_rebatedtl,	138;RB5;
lET X2=RB1[2] \ GOSUB YMD2JUL: \ LET X2=0                 
LET JDATE[0]=X2                                           
LET X2=RB1[4] \ IF X2<>999999 GOSUB YMD2JUL: \ LET X2=0   
LET JDATE[1]=X2                                           
rem IF JDATE[0]>JSDATE GOTO NEXT_REBATE:   
if jpodate< jdate[0] let validrebate=0
if jpodate> jdate[1] let validrebate=0
if rb1[1]<>PCT1[2] let validrebate=0
return
CALCREBATE: !
COST=PCT2[1] 
LET CNVTA=COST;CNVTU[0]=0;CNVTU[1]=RBUM[0];CNVTU[2]=2      
Goto CONVEND !GOSUB L_20000:                                             
LET DISP_COST=AMOUNT                                       
LET DISP_COST=FNR(DISP_COST)                               
IF RB[0]=1                                                          
 LET REBATE_UNIT=FNR(DISP_COST*(RB5[0]/100))                       
LET REBATE_COST=(DISP_COST-REBATE_UNIT)                           
 LET EXT_REBATE=FNR(REBATE_UNIT*QTY_SHIP)                          
 ENDIF                                                               
 IF RB[0]=2                                                          
LET REBATE_UNIT=RB5[0]                                            
 LET REBATE_COST=(DISP_COST-REBATE_UNIT)                           
LET EXT_REBATE=FNR(QTY_SHIP*RB5[0])                               
ENDIF                                                               
IF RB[0]=3                                                          
 IF RB$[1,3]="#  " OR RB1[5]=2 LET AMOUNT=RB5[0] \ GOTO L_2850:    
LET CNVTA=RB5[0];CNVTU[0]=0;CNVTU[1]=RBUM[0];CNVTU[2]=2           
 Goto CONVEND! GOSUB L_20000:                                                    
 L_2850: LET REBATE_COST=AMOUNT                                      
LET REBATE_UNIT=DISP_COST-REBATE_COST                             
 LET EXT_REBATE=FNR(REBATE_UNIT*QTY_SHIP)                          
 ENDIF                                                               






!
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return
! 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY) 
X$ = X2 Using "&&&&&&"                                               
Call DateToJulian(1,X$,X$,e) \ If e Return                           
X2 = X$[1,5]                                                         
Return 1                                                             
!
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = "00/00/00" \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return
!
!OUTEND: Rem exit out
!If SCRN
 ! Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
  !Input Len 16384 + 1;""ANS$
  !Print 'CS';
!End If 
!Chain "mx000"
!
Rem {begin src/inc/rtn.converti.i}
CONVERT: Rem "convert quantities, costs & prices
Mat Read #1,115,40;Q0;
If CNVTU[2] = 3 goto CONVEND ! - was Gosub DISPVALIDUNITS \ Goto CONVEND
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] ! "qty units same
  AMOUNT = CNVTA
  Goto CONVEND
End If 
If CNVTU[0] = -2 Or CNVTU[1] = -2 ! "lot price
  AMOUNT = CNVTA
  Goto CONVEND
End If 
If CNVTU[2] ! "all but valid conversion test
  If Not(CNVTA) ! "nothing there
    AMOUNT = 0
    Goto CONVEND
  End If 
End If 
Gosub DOCONVERT
If CNVTU[2] <> 0 And CNVTU[2] <> 3 ! "conversion types
  If FLAG Let E = FLAG  ! Gosub ERR_SEARCH
End If 
CONVEND: Rem "go back
Return 
!
DOCONVERT: Rem "go for it
CONVFLAG = 0;SR = 8;SC = 12
If CNVTU[2] = 5 ! "no rounding of quantity
  CONVFLAG = 1
  CNVTU[2] = 1
End If 
If CNVTU[2] = 6 ! "no rounding of price/cost
  CONVFLAG = 1
  CNVTU[2] = 2
End If 
On CNVTU[2] + 1 Goto CHECKVALID1,DOCONVERT1,DOCONVERT1
E = 0 
!Gosub ERR_SEARCH
CHECKVALID1: Rem "see if valid conversion
For X1[1] = 0 To 1
  If CNVTU[X1[1]] > 0
    For X1[2] = 0 To 7
      If CNVTU[X1[1]] = PFU1[X1[2]] Goto VALID
    Next X1[2]
    FLAG = 1 \ Return 
  End If 
VALID: Rem "o.k.
Next X1[1]
FLAG = 0
Return 
!
DOCONVERT1: Rem "convert cost/price/quantity
AMOUNT = CNVTA
For X1[1] = 0 To 1
CMODE = 1 \ If X1[1] Let CMODE = -1
If CNVTU[X1[1]] <> 0 ! "not base
  If CNVTU[X1[1]] > 0 ! "not cwt
    For CUNIT = 0 To 7
      If PFU1[CUNIT] = CNVTU[X1[1]] Goto CONVVALID
    Next CUNIT
    FLAG = 0 \ Return 
    CONVVALID: Rem "continue on
    If Not(CUNIT) Goto LOOPBACK
  End If 
  If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! "cwt calculation
    If A[5] And CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] And A[5] And CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "catch weight
      If A[5] And CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] And A[5] And CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] And CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If
  End If
End If 
!
LOOPBACK: Rem "get next x1[1]
Next X1[1]
If CNVTU[2] = 1 And Not(CONVFLAG) ! "convert quantity
  If CNVTU[1] And CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
  If Fra(AMOUNT) And (Not(CNVTU[1]) Or CNVTU[1] = PFU1[0]) Let AMOUNT = FNU(AMOUNT)
End If 
If CNVTU[2] = 2 And CNVTU[1] ! "cost/price (not base) to round
  If Not(CONVFLAG) ! "round away
    If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
    If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
    If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
  End If 
End If 
FLAG = 0
Return 
!
!!DISPVALIDUNITS: Rem "u/m list
!!!!Window Open @SC,SR; Size 32,11; Using " VALID UNITS "
!!X1[1] = 1
!!For X1 = 0 To 7
!!  RECS[X1[1]] = 0
!!  If PFU1[X1] > 0 ! "have a unit
!!    Read #CH_CCODES,PFU1[X1];CCODE$;
!!    Print Using "#. ";X1[1];CCODE$[11,14];" ";CCODE$[1,10];
!!    If X1 Print Using "##########";PFU2[X1 - 1] Else Print 'BR BD';"     BASE ";'ER ED'
!!    RECS[X1[1]] = PFU1[X1];X1[1] = X1[1] + 1
!!  End If 
!!Next X1
!!Return 
!!add
!!Print Using "#";@0,9;"SELECT 1-";X1[1] - 1;" : ";'CL';
!!Input Len 16386;""J4$
!!If J4$ <> ""
!!  X1 = J4$
!!  If X1 > 0 And X1 < X1[1]
!!    Read #CH_CCODES,RECS[X1];CCODE$;
!!    J4$ = CCODE$[11],"\15\"
!!  Else 
!!    J4$ = "";X1 = 0
!!  End If 
!!End If 
!!!Window Close 
!!If J4$ <> "" Call InpBuf(J4$)
!!FLAG = 0
!!Return 
Rem {end rtn.converti.i}
Rem {begin rtn.error.s}
!!ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
ERR_SEARCH: Rem                                 
ENUM = e;ELINE = Spc(16);CTERR = 0              
If e = 5 Let CTERR = Err(8)                     
msg$ = "RETURN STATUS",(e + (CTERR * .001))     
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "  
e$ = msg$                                                  
Call programdump()                              
returnstatus = 0 ! need report to print still   
message$ = e$                                   
Error 10000                                     
Return ! End                                    


OUTEND: Rem EXIT PROGRAM
!
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End

rcontracth: rem get rcontracth header info
k13$=" ",k13$
k13$=RB1[0] USING "######"
search #ch_rbhead,2,1;k13$,rec_rbhead,e
if e gosub err_search:
mat read #ch_rbhead,rec_rbhead,24;rcn$;
mat read #ch_rbhead,rec_rbhead,94;vendcnt$;
return

!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
