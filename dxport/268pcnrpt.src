! >>> Program 268pcnrpt
!
! description Price Change Notification - REPORT ONLY!!
!
! loadsave -w -n 100,10 -o prog/dxport/268pcnrpt.dl4 src/268pcnrpt.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dxRem op268pcnrpt
Rem Price Change Notification Form Generator (Report Version)
Rem Author: Nate 4/23/97 CCT#97581
!Last Updated: zyc 10/18/00 cct140894 modified mask
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 28, 2002  11:25:22
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/misc/op268pcnrpt.src (univ2) [jcs] {58322}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,FormatDate,InpBuf,String
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Enter BEGIN_EFFDATE,ENDING_EFFDATE,FLEPTR2[],REC_CUST,CH_LPT
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim Rstr$[500] \ rstr$="268ocnrpt"
Dim 1%,CH_CUST
Dim A3$[22],BT$[20],U2$[60],A2$[30],A1$[142]
Dim 2%,A0[3],C1[12],REC,C3[1]
Dim 1%,S0[20],SUB_,SZN,C7[4],C0,C2[2],C8,C11[2]
Dim 3%,C4[6],C10[5],CFIN[8],U1,C9,C5[5],C6[9],REC_CUST
Dim LP$[12],LP2$[84],LPMT$[2]
Dim 1%,LPC3[4],AI,LPEUN[2],LPWH
Dim 2%,LPDF,LPC1[2],LPR1[3],LPC5[3],LPPCDATE,LPDEPT
Dim 3%,LPC2[2],LPC4[3],LPR[4],LPUNF[6],PERM[1],LPLPERM
Dim 1%,CH_VEND,VNDA[4],VNDM4[1],VBANK
Dim 2%,VND1[6],VND3
Dim 3%,REC_VEND,VNDA2[11],VNDC1[5],VND4[1],VNDA3[7]
Dim VNDA$[264],VNDC2$[44],VNDA1$[20],VNDA2$[8],VNDA3$[4],VCTRY$[15]
Dim VNDA5$[60]
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60],PRFLG$[10]
Dim PRMKUPTYP$[4]
Dim 1%,CH_PROD,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1],PRBASE
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1],FDT[1]
Dim 2%,PRMKUP[3]
Dim 3%,REC_PROD,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,FUT[2]
Dim 1%,SNAME$[30],X$[10],CONAME$[30],FXDIR$[50],BLOCK$[500]
Dim 1%,DATE$[8],KPROD$[50],KVEND$[50],KSORT$[50],KSORT2$[80]
Dim 1%,EXISTS,TRUE,FALSE,GOLINE,LINE_,PAGE,PAGELENGTH,SECOND_ADDR,CURRENT,FUTURE
Dim 1%,CNVTU[2],PRODLENGTH,ALPHA$[26]
Dim 2%,BRK,EFF_DATE
Dim 3%,PRICE[1],PRICEP[1],CNVTA,AMOUNT
TRUE = 1;FALSE = 0
CURRENT = 0;FUTURE = 1
ALPHA$ = "abcdefghijklmnopqrstuvwxyz"
CH_CNTRL = FLEPTR2[0]
CH_PROD = FLEPTR2[1]
CH_SORT = FLEPTR2[9]
CH_CUST = FLEPTR2[10]
CH_VEND = FLEPTR2[11]
CH_SLSM = 86;KSORT$ = " ",KSORT$
CH_SORT2 = 87;PRINTIT = 0
Read #CH_CNTRL,3,0;CONAME$;
MAIN: Rem
If REC_CUST = -1 ! "first time in
  Gosub BLD_NEWSORTFLE
  Goto OUTEND
End If 
If REC_CUST = -99 ! "Print the stupid thing
  Read #CH_CNTRL,88,1824;KSORT$[1,16]; \ Ropen #CH_SLSM,KSORT$
  PRINTIT = 1;FINALPRT = REC_CUST
  Goto STARTPRINT
End If 
Mat Read #CH_CUST,REC_CUST,0,30;A1$
Mat Read #CH_CUST,REC_CUST,142;C1
Mat Read #CH_CUST,REC_CUST,194;C2
Mat Read #CH_CUST,REC_CUST,200;C3
Mat Read #CH_CUST,REC_CUST,208;C0
Mat Read #CH_CUST,REC_CUST,210;C4
Mat Read #CH_CUST,REC_CUST,252;C5
Mat Read #CH_CUST,REC_CUST,288;C6
Mat Read #CH_CUST,REC_CUST,348;A2$
Mat Read #CH_CUST,REC_CUST,378;C7
Mat Read #CH_CUST,REC_CUST,388;A3$
Mat Read #CH_CUST,REC_CUST,410;C8
Mat Read #CH_CUST,REC_CUST,412;C9
Mat Read #CH_CUST,REC_CUST,418;SUB_
Mat Read #CH_CUST,REC_CUST,420;U1
Mat Read #CH_CUST,REC_CUST,426;U2$
Mat Read #CH_CUST,REC_CUST,486;A0
Mat Read #CH_CUST,REC_CUST,502;S0
Mat Read #CH_CUST,REC_CUST,544;CFIN
Mat Read #CH_CUST,REC_CUST,598;SZN
Mat Read #CH_CUST,REC_CUST,600;BT$
Mat Read #CH_CUST,REC_CUST,620;REC
Mat Read #CH_CUST,REC_CUST,624;C10
Mat Read #CH_CUST,REC_CUST,660;C11
Unlock #CH_CUST
KSORT$ = " ";LAST_VENDOR = -1
LOOP_SORT: Search #CH_SORT,3,1;KSORT$,REC_SORT,E \ If E > 2 Gosub ERR_SEARCH
If Not(E)
  If Not(PRINTIT)
    Mat Read #CH_SORT,REC_SORT,0;LPC3
    Mat Read #CH_SORT,REC_SORT,10;PRICE
    Mat Read #CH_SORT,REC_SORT,22;EFF_DATE;
    KSORT2$ = " ",KSORT2$
    KSORT2$[1,4] = C1[2] Using "####";KSORT2$[5,10] = C1[1] Using "######"
    KSORT2$[11] = KSORT$
    E = 2;REC_SORT2 = 0
    Search #CH_SORT2,1,0;KSORT2$,REC_SORT2,E \ If E Gosub ERR_SEARCH
    Mat Write #CH_SORT2,REC_SORT2,0;LPC3
    Mat Write #CH_SORT2,REC_SORT2,10;PRICE
    Mat Write #CH_SORT2,REC_SORT2,22;EFF_DATE;
    Search #CH_SORT2,4,1;KSORT2$,REC_SORT2,E \ If E Gosub ERR_SEARCH
  End If 
  Goto LOOP_SORT
End If !"end of sort traversal
Goto OUTEND
STARTPRINT: Rem "Here's the actual Print
KSORT2$ = " ",KSORT2$;LAST_VENDOR = -1;LAST_CUSTOMER = -1;LAST_SLSM = -1
LINE_ = 90;PAGE = 0;PAGELENGTH = 60
RSORTLOOP: Rem "thru resorted stuff
Search #CH_SORT2,3,1;KSORT2$,REC_SORT,E \ If E = 2 Goto ALLDONE
If E Gosub ERR_SEARCH
If LAST_SLSM <> Val(KSORT2$[1,4])
  LINE_ = 90;SLSM = KSORT2$[1,4]
  KSORT$ = SLSM Using "###"
  Search #CH_SLSM,2,1;KSORT$,REC_SLSM,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Read #CH_SLSM,REC_SLSM,0;SNAME$;
  Else 
    SNAME$ = " ",SNAME$
    SNAME$ = "SALESPERSON NOT FOUND!"
  End If 
  LAST_SLSM = SLSM;LAST_CUSTOMER = -1;LAST_VENDOR = -1
End If 
If LAST_CUSTOMER <> Val(KSORT2$[5,10])
  KSORT$ = KSORT2$[5,10]
  Search #CH_CUST,2,1;KSORT$,REC_CUST,E \ If E Gosub ERR_SEARCH
  Mat Read #CH_CUST,REC_CUST,0,30;A1$
  Mat Read #CH_CUST,REC_CUST,142;C1
  Mat Read #CH_CUST,REC_CUST,194;C2
  Mat Read #CH_CUST,REC_CUST,200;C3
  Mat Read #CH_CUST,REC_CUST,208;C0
  Mat Read #CH_CUST,REC_CUST,210;C4
  Mat Read #CH_CUST,REC_CUST,252;C5
  Mat Read #CH_CUST,REC_CUST,288;C6
  Mat Read #CH_CUST,REC_CUST,348;A2$
  Mat Read #CH_CUST,REC_CUST,378;C7
  Mat Read #CH_CUST,REC_CUST,388;A3$
  Mat Read #CH_CUST,REC_CUST,410;C8
  Mat Read #CH_CUST,REC_CUST,412;C9
  Mat Read #CH_CUST,REC_CUST,418;SUB_
  Mat Read #CH_CUST,REC_CUST,420;U1
  Mat Read #CH_CUST,REC_CUST,426;U2$
  Mat Read #CH_CUST,REC_CUST,486;A0
  Mat Read #CH_CUST,REC_CUST,502;S0
  Mat Read #CH_CUST,REC_CUST,544;CFIN
  Mat Read #CH_CUST,REC_CUST,598;SZN
  Mat Read #CH_CUST,REC_CUST,600;BT$
  Mat Read #CH_CUST,REC_CUST,620;REC
  Mat Read #CH_CUST,REC_CUST,624;C10
  Mat Read #CH_CUST,REC_CUST,660;C11
  Unlock #CH_CUST
  ALPHA$ = "N" \ If A0[3] = 1 Let ALPHA$ = "Y"
  If A0[3] = 2 Let ALPHA$ = "F"
  If LINE_ + 4 > PAGELENGTH Let LINE_ = 90
  Gosub PRTHEADER
  Print #CH_LPT;"" \ LINE_ = LINE_ + 1
  Print #CH_LPT; Tab (1);ALPHA$[1,1];
  Print #CH_LPT; Using "######"; Tab (4);C1[1]; Tab (13);A1$[31,55];
  LAST_CUSTOMER = KSORT$[5,10]
End If 
KSORT$ = KSORT2$[11]
Gosub PRTHEADER
Mat Read #CH_SORT2,REC_SORT,0;LPC3
Mat Read #CH_SORT2,REC_SORT,10;PRICE
Mat Read #CH_SORT2,REC_SORT,22;EFF_DATE;
KPROD$ = KSORT$[7]
Search #CH_PROD,2,1;KPROD$,REC_PROD,E \ If E Gosub ERR_SEARCH
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,624;PR_PO
Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,670;U4
Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,846;PFTB
Read #CH_PROD,REC_PROD,854;UPCT
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Mat Read #CH_PROD,REC_PROD,944;PR_A2$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Mat Read #CH_PROD,REC_PROD,1018;PFN
Mat Read #CH_PROD,REC_PROD,1030;FUT
Mat Read #CH_PROD,REC_PROD,1048;FDT
Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
Mat Read #CH_PROD,REC_PROD,1066;PRBASE
Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
Unlock #CH_PROD
VENDOR = KSORT$[1,6]
If VENDOR <> LAST_VENDOR
  Print #CH_LPT; Using "######"; Tab (39);VENDOR;
  LAST_VENDOR = VENDOR
End If 
BLOCK$ = KSORT$[7] \ Gosub TRIM
PRODLENGTH = Len(BLOCK$) + 1
Print #CH_LPT; Tab (46);BLOCK$;" ";
BLOCK$ = A$[9,38] + A$[63,92] \ Gosub TRIM
Print #CH_LPT;BLOCK$[1,50 - PRODLENGTH];
CNVTA = PRICE[CURRENT]
CNVTU[0] = 0
CNVTU[1] = LPC3[3]
CNVTU[2] = 2
Gosub CONVERT
PRICEP[CURRENT] = AMOUNT
CNVTA = PRICE[FUTURE]
CNVTU[0] = 0
CNVTU[1] = LPC3[3]
CNVTU[2] = 2
Gosub CONVERT
PRICEP[FUTURE] = AMOUNT
Print #CH_LPT; Tab (100);PRICEP[CURRENT] Using "$$$$$$#.##";
Print #CH_LPT; Tab (111);PRICEP[FUTURE] Using "$$$$$$#.##";
DATE$ = EFF_DATE Using "&&&&&&"
Call FormatDate(DATE$,DATE$,E)
Print #CH_LPT; Tab (123);DATE$
LINE_ = LINE_ + 1
If LINE_ > PAGELENGTH Gosub PRTHEADER
Goto RSORTLOOP
ALLDONE: Rem "done - no totals, etc.
Goto OUTEND
PRTHEADER: Rem"print the sub heading
If LINE_ < PAGELENGTH Return 
If PAGE
  Print #CH_LPT;"\14\";
End If 
Print #CH_LPT;" 268PCNRPT ";
Print #CH_LPT; Tab (Int(65 - (Len(CONAME$) / 2)));CONAME$;
PAGE = PAGE + 1
Print #CH_LPT; Tab (122);"PAGE:";PAGE
Print #CH_LPT;Msc$(3);
Print #CH_LPT; Tab (50);"PRICE CHANGE NOTIFICATION REPORT"
Print #CH_LPT;"SLSPSN:";SLSM;"  ";SNAME$;
Print #CH_LPT; Tab (40);"NEW PRICE DATE EFFECTIVE DATE FROM ";
X$ = BEGIN_EFFDATE Using "&&&&&&" \ Call FormatDate(X$,X$,E)
Print #CH_LPT;X$;" TO ";
X$ = ENDING_EFFDATE Using "&&&&&&" \ Call FormatDate(X$,X$,E)
Print #CH_LPT;X$
Print #CH_LPT;""
Print #CH_LPT; Tab (103);"Current"; Tab (113);"New Whse"
Print #CH_LPT;"FAX"; Tab (4);"CUST #"; Tab (13);"CUSTOMER NAME";
Print #CH_LPT; Tab (39);"VENDOR";
Print #CH_LPT; Tab (46);"Item Number / Description";
Print #CH_LPT; Tab (104);"Price"; Tab (115);"Price"; Tab (123);"Eff.Date"
LINE_ = 7
Return 
TRIM: Rem"===== trim off leading and trailing spaces from the given string
I = 1;J = Len(BLOCK$)
LOOP_TRIM1: If I <= J If BLOCK$[I,I] = " " Let I = I + 1 \ Goto LOOP_TRIM1
If I < J
LOOP_TRIM2: If BLOCK$[J,J] = " " Let J = J - 1 \ Goto LOOP_TRIM2
End If 
If I < J Let BLOCK$ = BLOCK$[I,J] Else Let BLOCK$ = ""
Return 
BLD_NEWSORTFLE: Rem "go thru existing - resort into new File
KSORT$ = "6/SORTWORKP" + Str$(Spc(6))
BLOCK$ = "<1:26T> " + KSORT$
Call FindF(KSORT$,H)
If H
  Kill KSORT$
End If 
Build #CH_SORT2,BLOCK$
KSIZE = 30
Search #CH_SORT2,0,1;KSORT$,KSIZE,E \ If E Gosub ERR_SEARCH
E = 0;KSIZE = 0
Search #CH_SORT2,0,0;KSORT$,KSIZE,E \ If E Gosub ERR_SEARCH
Close #CH_SORT2
Open #CH_SORT2,KSORT$
Return 
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+msc$(4)
Error 11000
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!include "src/callmainerrnet.inc"
include "src/callmainerrnet_call.inc"
End
OUTEND: Rem cleanup and out
If FINALPRT = -99 ! "done with Print
  Close #CH_SORT2
  Close #CH_SLSM
  KSORT$ = "6/SORTWORKP" + Str$(Spc(6))
  Kill KSORT$
End If 
End 
