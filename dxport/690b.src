! >>> Program 690b
!
! description  DEAD INVENTORY REPORT 
!
! loadsave -w -n 100,10 -o prog/dxport/690b.dl4 src/690b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  9, 2006  13:57:15
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx690b.src (univ2) [txc] {46367}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX690B - Dead Inventory Report
Rem cct 186728 - Glover
Rem task#13951/cct#218553 - no of received days
Rem LAST UPDATE:
!
Declare Intrinsic Sub DateToJulian,InpBuf,JulianToDate,String,Time,VerifyDate,FormatDate
External Lib "ubsprconv.dl4"
Declare External Function XUnit$
external lib "ubsfunc.dl4"
Declare External Function openfile
Declare External Function OpenMySQLBrowserOutput,GetMySQLReportHeader
Declare External Sub AddMySQLReportColumnHeadings
Declare External Function AddMySQLReportData
Declare External Sub FinishMySQLReport


!!Option Default Dialect IRIS1
Com 1%,COST_LEV[3]
If Err 0 Gosub ERR_TRAP
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J6[1],J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim K1$[60],K2$[60],K3$[60],K4$[60],K5$[60],K6$[60]
Dim VEND$[30],BUYR$[30],A$[156],RETVAL$[512],FLE$[20]
Dim p9$[50],P60$[50],P61$[256],CSTUM$[4],QTYUM$[4],k8$[50]
Dim CONM$[30],DATE$[8],TME$[30],BPROD$[12],EPROD$[12]
Dim 1%,PFU1[20],W1[2],RPT[5],FLD,BYR[5],WH[5],RASL[5]
Dim 1%,NMTH,NEGOH,CSTUM,QTYUM,CNVTU[2],SCRN,days,lt1[3]
Dim FUM$[4],loc$[6],pl1[1]
Dim 2%,W2[9],B[24],VEND,BUYER,VND[5],JDATE[5],DT3[1],WH7[3]
Dim 3%,W3[24],A[33],A1[7],PFU2[6],DPLY[20]
Dim 3%,R[99],CNVTA,AMOUNT,X3[9],TTLS[20],lt2[5]

!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$

Dim 1%,MySQL_ch,reportAborted
Dim 3%,MySQLQueueID


!include "src/inc/filesslsm.inc"
dim k_srep$[50],SlsmName$[30]
! dim srep. as sslsm  ! WE ONLY NEED NAME!
include "src/inc/filecpihead.inc"
dim k_cpih$[50]
dim cpih. as cpihead
include "src/inc/filecpidet.inc"
dim k_cpid$[50]
dim cpid. as cpidet
include "src/inc/filecpicbtbl.inc"
dim k_cpicb$[50]
dim cpicb. as cpicbtbl
include "src/inc/filespecprice.inc"
dim k_sd$[50]
dim sd. as specprice

dim 3%

!
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
COID = IntCo !  Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
For J = 2 To 8
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #1,88,J1;FLE$[1,16];
  Ropen #J,FLE$
NXTFLE: Next J
Data "1792","1744","2400","1728","-1","208","2512"
FLE$ = "2/BUYERS"
Ropen #6,FLE$
Mat Read #1,3,0;CONM$;
Mat Read #1,0,100;DATE$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
if p61$[111,111] = "Y" ! CPI
	ch_cpih=OpenFile(-9929) \ if ch_cpih=-1 Error 42 ! cpi header
	ch_cpid=OpenFile(-9928) \ if ch_cpid=-1 Error 42 ! cpi detail
	ch_cpic=OpenFile(-9927) \ if ch_cpic=-1 Error 42 ! cpi customer
	ch_sd=OpenFile(-1936) \ If ch_sd=-1 Error 42 ! Contract Lines
	ch_cpicb=OpenFile(-9919) \ if ch_cpicb=-1 Error 42 ! cpi chargeback
	ch_srep=OpenFile(-1824) \ If ch_srep=-1 Error 42 ! sales rep file
end if
UMChan=5
Call VerifyDate(DATE$,X$,E)
If Not(E) ! "date okay
  X2 = X$
  X$ = X2 Using "&&&&&&"
  Call DateToJulian(1,X$,X$,E) \ If E Let X$ = Str$(Tim(6))
Else 
  X2 = Tim(6)
  X$ = X2 Using "#####"
  Call JulianToDate(1,X$,DATE$,E) !!\ If E Gosub ERR_SEARCH
End If 
JDATE[0] = X$[1,5]
RPT[1] = 62;RPT[2] = 0;SCRN = 0
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 Let RPT[1] = 20;SCRN = 1
!!Call "progdflt","690B","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,2] = "01";RETVAL$[3,4] = "99"
!!  RETVAL$[5,7] = "000";RETVAL$[8,10] = "999"
!!  RETVAL$[11,16] = "000000";RETVAL$[17,22] = "999999"
!!  RETVAL$[23,34] = "            "
!!  RETVAL$[35,46] = "zzzzzzzzzzzz"
!!  RETVAL$[47,48] = "03"
!!  RETVAL$[49,50] = " 4"
!!  RETVAL$[51,52] = " 1"
!!  RETVAL$[53,53] = "N"
!!End If 
!!WH[1] = RETVAL$[1,2];WH[2] = RETVAL$[3,4]
!!BYR[1] = RETVAL$[5,7];BYR[2] = RETVAL$[8,10]
!!VND[1] = RETVAL$[11,16];VND[2] = RETVAL$[17,22]
!!BPROD$ = RETVAL$[23,34]
!!EPROD$ = RETVAL$[35,46]
!!NMTH = RETVAL$[47,48]
!!CSTUM = RETVAL$[49,50]
!!QTYUM = RETVAL$[51,52]
!!If RETVAL$[53,53] = "Y" Let NEGOH = 1 Else Let NEGOH = 0
!
Has_RASL=0 \ if p9$[41,41]="Y" or p9$[41,41]="W" let Has_RASL=1
call dxget("SWHSE",tmp$) \ If rtrim$(tmp$) = "" Let WH[1] = 1 Else Let WH[1] = tmp$
call dxget("EWHSE",tmp$) \ if rtrim$(tmp$) = "" Let WH[2] = 99 Else Let WH[2] = tmp$
call dxget("SBUYER",tmp$) \ BYR[1] = tmp$
call dxget("EBUYER",tmp$) \ if rtrim$(tmp$) = "" Let BYR[2] =  999 Else Let BYR[2] = tmp$
call dxget("SVEND",tmp$) \ VND[1] = tmp$
call dxget("EVEND",tmp$) \ if rtrim$(tmp$) = "" Let VND[2] = 999999 Else Let VND[2] = tmp$
call dxget("SPROD",BPROD$) \ BPROD$ = UCASE$(rtrim$(BPROD$)),Blank$
call dxget("EPROD",EPROD$) \ EPROD$ = UCASE$(rtrim$(EPROD$)),EndParam$
call dxget("NMTH",tmp$) \ if rtrim$(tmp$) = "" Let NMTH = 3 Else Let NMTH = tmp$
call dxget("CSTUM",tmp$) \ CSTUM = tmp$
call dxget("QTYUM",tmp$) \ QTYUM = tmp$
call dxget("NEGOH",tmp$) \ if rtrim$(tmp$) = "" Let NEGOH = 0 Else Let NEGOH = 1
call dxget("DAYS",tmp$) \let days=tmp$\if rtrim$(tmp$) = "" let days=120!
If WH[1] < 1 Or WH[1] > 99 Let e$ = "Invalid starting warehouse, must be between 1 and 99!" \ error 10000
If WH[2] < WH[1] Or WH[2] > 99 Let e$ = "Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
if BYR[1] < 0 or BYR[1] > 999 let e$="Invalid starting buyer number, must be between 0 and 999!" \ error 10000
if BYR[2] < BYR[1] or BYR[2] > 999 let e$="Invalid ending buyer number, must be between starting buyer number and 999!" \ error 10000
!
if VND[1] < 0 or VND[1] > 999999 let e$="Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
if VND[2] < VND[1] or VND[2] > 999999 let e$="Invalid ending vendor code, must be between starting vendor code and 999999!" \ error 10000
!
If EPROD$ < BPROD$ Let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
If NMTH < 1 Or NMTH > 99 Let e$ = "Invalid number of months with no sales, must be between 1 and 99!" \ error 10000
!
If P9$[41,41] = "W" Call "CHKWRASL",WH[1],RASL[]
If J8 ! dx xml, setup rstr$
  !<section>
  MySQL_ch = OpenMySQLBrowserOutput(e$)
  if MySQL_ch <> -1
	MySQLQueueID = GetMySQLReportHeader(e$,MySQL_ch,"690b")
	if MySQLQueueID = 0
		e$ = "Could not get MySQL report header!"
		error 10000
	end if
  else
	tmp$ = bsdel$,"690b",fdel$,rdel$
	Call addtostr(e$,rstr$,tmp$)
  end if
End If 
!
If J8 = 0 or MySQLQueueID !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

If J8
  tmp$ = "WAREHOUSE",fdel$
  tmp$ = tmp$, "BUYER CODE",fdel$
  tmp$ = tmp$, "BUYER NAME",fdel$
  tmp$ = tmp$, "VENDOR CODE",fdel$
  tmp$ = tmp$, "VENDOR NAME",fdel$
  tmp$ = tmp$, "ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$
  tmp$ = tmp$, "VENDOR ITEM CODE ",fdel$
  If has_rasl let tmp$=tmp$,"PRIMARY",fdel$
  tmp$ = tmp$, "ON HAND",fdel$
  tmp$ = tmp$, "ON HAND TYPE",fdel$
  tmp$ = tmp$, "AVERAGE COST",fdel$
  tmp$ = tmp$, "AVERAGE COST TYPE",fdel$
  tmp$ = tmp$, "EXTENSION",fdel$
  tmp$ = tmp$, "LST SOLD",fdel$
  tmp$ = tmp$, "LST REC",fdel$
  tmp$=tmp$,"WEIGHT/FACTOR",fdel$
  tmp$=tmp$,"CUBE/FACTOR",fdel$
  if MySQLQueueID
	call AddMySQLReportColumnHeadings(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$)
  else
	call addtostr(e$,rstr$,tmp$+rdel$)
  end if
End if
!
!!Print @0,22;'CE';"SORTING, PLEASE WAIT  "
K1$ = " ",K1$
CLR_SORT: Rem "
Search #9,3,1;K1$,R[9],E 
If E = 2 Goto PROD_SORT
Search #9,5,1;K1$,R[9],E 
If E Let e$ = "syserrorfile 690b sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K1$ \error 10000
Goto CLR_SORT
!
PROD_SORT: Rem "through Prod & Whse Files
K1$ = " ",K1$;K1$ = BPROD$
NOREC = 0
Search #2,2,1;K1$,R[2],E 
If E = 0 Goto GOT_FRST
PF_SORT: Rem "Sorting Loop
Search #2,3,1;K1$,R[2],E 
If E = 2 Goto SORTDONE
GOT_FRST: Rem "found 1st
NOREC = NOREC + 1
!!If Not(Fra(NOREC / 250)) Print @40,22;NOREC;K1$;'CL'
If K1$[1,12] > EPROD$ Goto SORTDONE
Mat Read #2,R[2],156;B;
K2$ = " ",K2$;K2$[1,12] = K1$
K2$[13,14] = WH[1] Using "##"
Search #3,2,1;K2$,R[3],E 
If E = 0 Goto GFWHSE
PW_SORT: Rem "all whses selected
Search #3,3,1;K2$,R[3],E 
If E = 2 Goto PF_SORT
GFWHSE: Rem "match on starting
If K2$[1,12] <> K1$[1,12] Goto PF_SORT
WH = K2$[13,14] \ If WH > WH[2] Goto PF_SORT
NOREC = NOREC + 1
!!If Not(Fra(NOREC / 250)) Print @40,22;NOREC;K2$;'CL'
Mat Read #3,R[3],32;W1;
Mat Read #3,R[3],38;W2;
Mat Read #3,R[3],78;W3;
Mat Read #3,R[3],428;WH7;
VEND = W2[3] \ If VEND <= 0 Let VEND = B[24]
If VEND < VND[1] Or VEND > VND[2] Goto PW_SORT
BUYER = W1[2]
If BUYER < BYR[1] Or BUYER > BYR[2] Goto PW_SORT
Rem "now do nosales check
If W3[0] = 0 Goto PW_SORT
If NEGOH = 0 And W3[0] <= 0 Goto PW_SORT
rem If W2[6] = 0 AND WH7[0] = 0 goto pw_sort2: ! no sales OR receipts ever Goto ADD2SORT
X$ = W2[6] Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "00001"
JDATE[1] = X$[1,5]
X$ = WH7[0] Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "00001"
JDATE[3] = X$[1,5]
X2 = NMTH * 30
!If JDATE[0] - JDATE[1] < X2 Goto PW_SORT
PW_SORT2:  ! check recieving
gosub chk_invtrans:    !"cct#219553
!IF JDATE[2]=0 GOTO ADD2SORT: 
jdate[5]=jdate[3]
if jdate[5]<jdate[2] then jdate[5]=jdate[2]
! get highest date for compare
If (JDate[0]-JDate[5]<days ) OR ((JDATE[0] - JDATE[1]) < X2) Goto PW_Sort: 
ADD2SORT: Rem "put in sort file
K3$ = " ",K3$;K3$[1,2] = W1[0] Using "##"
K3$[3,6] = BUYER Using "####"
K3$[7,12] = VEND Using "######"
K3$[13,24] = K1$[1,12]
let k3$[25,29]=JDATE[5] using "&&&&&"  !LT2[0]
Search #9,4,1;K3$,R[2],E 
If E Let e$ = "syserrorfile 690b sortfile mode (m)=4 keyno (k)=1 r=",R[2]," e=",e," keyval (k$)=",K3$ \error 10000
Goto PW_SORT
!
SORTDONE: Rem "and now we print
For X = 0 To 20 \ TTLS[X] = 0 \ Next X
!!If Err 0 Gosub ERR_ESCAPE
!!If SCRN Print 'CS';
If RPT[2] ! "second go round?
  If Not(J8) Print #0;"\14\";
End If 
RPT[2] = 0;RPT[0] = 90
NOREC = 0;K1$ = " ",K1$
BYR[0] = -1;VND[0] = -1;WH[0] = -1
VNDPRTD = 0;EOR = 0
SF_LOOP: Rem "thru to end
Search #9,3,1;K1$,R[2],E 
If E = 2 Goto RPTDONE
if reportAborted goto OUTEND:
NOREC = NOREC + 1
!!If Not(SCRN) And Not(Fra(NOREC / 250)) Print @40,22;NOREC;K1$[1,12];'CL'
X2 = K1$[1,2]
If WH[0] <> -1 And X2 <> WH[0] ! "whse Chg
  Gosub PRNT_BUYTTLS
  Gosub PRNT_WHSTTLS
  RPT[0] = 99
End If 
X2 = K1$[3,6]
If BYR[0] <> -1 And X2 <> BYR[0] ! "buyer change
  Gosub PRNT_BUYTTLS
  RPT[0] = 99
End If 
X2 = K1$[7,12] \ If X2 <> VND[0] Let VNDPRTD = 0
WH[0] = K1$[1,2]
BYR[0] = K1$[3,6]
VND[0] = K1$[7,12]
BUYER = BYR[0]
VEND = VND[0]
Mat Read #2,R[2],0;A$;
Mat Read #2,R[2],156;B;
Mat Read #2,R[2],256;A;
Mat Read #2,R[2],460;A1;
Mat Read #2,R[2],512;PFU1;
Mat Read #2,R[2],554;PFU2;
K2$ = " ",K2$;K2$[1,12] = K1$[13,24];K2$[13,14] = K1$[1,2]
Search #3,2,1;K2$,R[3],E \ If E = 1 Goto SF_LOOP
Mat Read #3,R[3],38;W2;
Mat Read #3,R[3],78;W3;
Mat Read #3,R[3],428;WH7;
BUYR$ = " ",BUYR$
If BUYER Mat Read #6,BUYER,0;BUYR$;
VEND$ = " ",VEND$
K3$ = " ",K3$;K3$ = VEND Using "######"
Search #4,2,1;K3$,R[4],E 
If Not(E)
  Mat Read #4,R[4],0;VEND$;
Else 
  VEND$ = "VENDOR NOT ON FILE      "
End If 
If P9$[41,41] = "W" Call "CHKWRASL",WH[0],RASL[] ! check if whse uses rasl
Clear loc$
If RASL ! it does - get primary!
	k_srep$=" ",k_srep$
	let k_srep$[1,14]=k2$[1,14] ! key of prodwhse
	let k_srep$[15]="" ! cut as only loc is primary?
	ploc_loop: ! multiple loc
	search #7,3,1;k_srep$,r_Ploc,e
	if k_srep$[1,14]<>K2$[1,14] let e=2
	if e=0
		mat read #7,r_ploc,18;pl1;
		if pl1[1]=1
			mat read #7,r_ploc,12;loc$
			! goto RaslDone
		else
			goto ploc_loop ! not primary - check next
		endif
	endif
endif
CSTUM$ = "    "
X2 = CSTUM + 7
If PFU1[X2] = -1 Let CSTUM$ = "CWT "
If PFU1[X2] = -2 Let CSTUM$ = "LOT "
If PFU1[X2] = -3 Let CSTUM$ = "LB  "
If PFU1[X2] > 0 Read #5,PFU1[X2],10;CSTUM$;
CNVTU[0] = 0;CNVTU[1] = PFU1[X2];CNVTU[2] = 2
X3 = B[21]
If P9$[32,32] = "Y" And W3[15] > 0 Let X3 = W3[15]
CNVTA = X3 \ Gosub CONVERT
DPLY[0] = AMOUNT
QTYUM$ = "    "
X2 = QTYUM + 7
If PFU1[X2] = -1 Let QTYUM$ = "CWT "
If PFU1[X2] = -2 Let QTYUM$ = "LOT "
If PFU1[X2] = -3 Let QTYUM$ = "LB  "
If PFU1[X2] > 0 Read #5,PFU1[X2],10;QTYUM$;
CNVTU[0] = 0;CNVTU[1] = PFU1[X2];CNVTU[2] = 1
CNVTA = W3[0] \ Gosub CONVERT
DPLY[1] = AMOUNT
DPLY[2] = FNR(W3[0] * X3)
Gosub PRNT_HEADER
If Not(VNDPRTD) Gosub PRNT_VENDINFO
Gosub PRNT_DETAIL
Gosub PrintCPIContacts
Gosub ADD2TTLS
Goto SF_LOOP
ADD2TTLS: Rem "
TTLS[1] = TTLS[1] + DPLY[1];TTLS[2] = TTLS[2] + DPLY[2]
TTLS[3] = TTLS[3] + DPLY[1];TTLS[4] = TTLS[4] + DPLY[2]
TTLS[5] = TTLS[5] + DPLY[1];TTLS[6] = TTLS[6] + DPLY[2]
Return 
!
PRNT_VENDINFO: Rem "vendor number/name
If J8 Return
Gosub PRNT_HEADER
Print #0; Using "######"; Tab 5;"VENDOR: ";VEND; Tab 20;VEND$
RPT[0] = RPT[0] + 1
VNDPRTD = 1
Return 
!
PRNT_BUYTTLS: Rem "buyer subtotals
If J8 
  BYR[0] = K1$[3,6]
  TTLS[1] = 0;TTLS[2] = 0
  Return 
End if
!
If RPT[0] + 3 > RPT[1] ! "will go past bottom
  RPT[0] = 99 \ Gosub PRNT_HEADER
End If 
Print #0;""
Print #0; Tab 10;"BUYER";BYR[0];"TOTALS";
Print #0; Using "-----,---,--#.##"; Tab 43;TTLS[1];
Print #0; Using "------,---,--#.##"; Tab 88;TTLS[2]
Print #0;""
BYR[0] = K1$[3,6]
TTLS[1] = 0;TTLS[2] = 0
Return 
!
PRNT_WHSTTLS: Rem "whse subtotals
If J8
  WH[0] = K1$[1,2]
  TTLS[3] = 0;TTLS[4] = 0
  Return 
End if
!
If RPT[0] + 3 > RPT[1] ! "will go past bottom
  RPT[0] = 99 \ Gosub PRNT_HEADER
End If 
Print #0;""
Print #0; Tab 10;"WAREHOUSE";WH[0];"TOTALS";
Print #0; Using "-----,---,--#.##"; Tab 43;TTLS[3];
Print #0; Using "------,---,--#.##"; Tab 88;TTLS[4]
Print #0;""
WH[0] = K1$[1,2]
TTLS[3] = 0;TTLS[4] = 0
Return 
!
PRNT_RPTTTLS: Rem "report totals
If J8 
  EOR = 0 \ TTLS[5] = 0 
  TTLS[6] = 0 \ RPT[0] = 99 
  Return
End if
!
EOR = 99
RPT[0] = 99 \ Gosub PRNT_HEADER
Print #0;""
Print #0; Tab 10;"REPORT TOTALS";
Print #0; Using "------,---,--#.##"; Tab 42;TTLS[5];
Print #0; Using "-------,---,--#.##"; Tab 87;TTLS[6]
EOR = 0;TTLS[5] = 0;TTLS[6] = 0
Return 
!
PRNT_DETAIL: Rem "product detail
If J8
  tmp$ = WH[0],fdel$
  tmp$ = tmp$, BUYER,fdel$,rtrim$(BUYR$),fdel$
  tmp$ = tmp$, VEND,fdel$,rtrim$(VEND$),fdel$
  tmp$ = tmp$, rtrim$(A$[140,151]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,38]),fdel$
  tmp$ = tmp$, rtrim$(A$[93,112]),fdel$
  if has_rasl let tmp$=tmp$,Rtrim$(loc$),fdel$
  tmp$ = tmp$, LTrim$(DPLY[1] Using "---,---,--#.##"),fdel$,QTYUM$,fdel$
  tmp$ = tmp$, LTrim$(DPLY[0] Using "###,###.###"),fdel$,CSTUM$,fdel$
  tmp$ = tmp$, LTrim$(DPLY[2] Using "----,---,--#.##"),fdel$
  X2 = W2[6]
  If X2 Gosub ISDUNPACK Else Let X$ = "NEVER"
  tmp$ = tmp$, X$,fdel$
  let x2=k1$[25,29]
  IF X2=1 LET X2=0
  If X2 Gosub JUL2DATE: Else Let X$ = "NEVER"
  rem if x2<>0
 rem 		gosub JUL2DATE:
	rem ELSE 
	rem 	Let X$="NEVER" 
  rem 	endif
	if rtrim$(x$)="" let x$="NEVER"
  	tmp$=tmp$,X$,fdel$      
  !Added for ACME 67635(per ERR, a DEAD task)
  Clear x$
  clear tmp1$
  x$=Str$(A[6]),"/",Str$(A[5]) ! Keith - just what shows on screen - NO EXTENSION
  X2=A[5];x1=0
	  if x2<=1 let x1=PFU1[0]
	  If X2>1
		  if x2=PFU2[0] let x1=PFU1[1]
		  if x2=PFU2[1] let x1=PFU1[2]
		  if x2=PFU2[2] let x1=PFU1[3]
		  if x2=PFU2[3] let x1=PFU1[4]
		  if x2=PFU2[4] let x1=PFU1[5]
		  if x2=PFU2[5] let x1=PFU1[6]
		  if x2=PFU2[6] let x1=PFU1[7]
	  Endif
	  If x1 ! if U/M - send desc
		tmp1$=Xunit$(X1,UMChan) ! get u/m desc
		X$=x$," (",rtrim$(tmp1$),")" ! um desc
	  Endif ! no um - no desc
  tmp$=tmp$,X$,fdel$  ! weight/factor (UM)
  Clear x$
  clear tmp1$
  X$=Str$(B[23]),"/",Str$(A1[3]) ! cube as on screen - no extension
  X2=A1[3];x1=0
	  if x2<=1 let x1=PFU1[0]
	  If X2>1
		  if x2=PFU2[0] let x1=PFU1[1]
		  if x2=PFU2[1] let x1=PFU1[2]
		  if x2=PFU2[2] let x1=PFU1[3]
		  if x2=PFU2[3] let x1=PFU1[4]
		  if x2=PFU2[4] let x1=PFU1[5]
		  if x2=PFU2[5] let x1=PFU1[6]
		  if x2=PFU2[6] let x1=PFU1[7]
	  Endif
	  If x1 ! if U/M - send desc
		tmp1$=Xunit$(X1,UMChan) ! get u/m desc
		X$=x$," (",rtrim$(tmp1$),")" ! um desc
	  Endif ! no um - no desc!
  tmp$=tmp$,X$,fdel$   ! Cube/Factor (UM) 
	if MySQLQueueID
		if not(AddMySQLReportData(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$))
			! possible user abort - report deleted exit now
			reportAborted = 1
		end if
	else
		call addtostr(e$,rstr$,tmp$+rdel$)  
	end if
  Return 
End if 
!
Print #0; Tab 1;A$[140,151];
Print #0; Tab 14;A$[9,38];
if rasl
	Print #0; Tab 45;A$[93,110];
	Print #0; Tab 63;loc$;
	Print #0; Using " ------#.##"; Tab 69;DPLY[1];" ";QTYUM$;
	Print #0; Using " ######.###"; Tab 86;DPLY[0];" ";CSTUM$;
	Print #0; Using "-------#.##"; Tab 103;DPLY[2];
Else ! not
	Print #0; Tab 45;A$[93,112];
	Print #0; Using " ----,--#.##"; Tab 65;DPLY[1];" ";QTYUM$;
	Print #0; Using " ###,###.###"; Tab 84;DPLY[0];" ";CSTUM$;
	Print #0; Using "--,---,--#.##"; Tab 101;DPLY[2];
endif
X2 = W2[6]
If X2 Gosub ISDUNPACK Else Let X$ = " NEVER  "
Print #0;Tab 115;X$[1,8];
let x2=k1$[25,29]
 let x2=k1$[25,29]
 if x2=1 let x2=0
  If X2 Gosub JUL2DATE: Else Let X$ = "NEVER"
rem if x2<>0
rem 	gosub JUL2DATE:
rem ELSE 
rem 	Let X$=" NEVER  " 
rem endif
if rtrim$(x$)="" let x$=" NEVER  "
Print #0;Tab 124;X$[1,8]      
RPT = RPT + 1
Return 

PrintCPIContacts:
	! check feature flag, if not enabled, don't do it
	if p61$[111,111] <> "Y" return
	! if output is browser, don't do it
	if J8 return
	k_cpid$ = " ",k_cpid$
	k_cpid$ = A$[140,151]
	do
		r_cpid = filegetcpidet(e$,ch_cpid,">",2,k_cpid$, cpid.)
		if r_cpid <= 0 exit do
		if k_cpid$[1,12] <> a$[140,151] exit do
		k_sd$ = k_cpid$
		r_sd = filegetspecprice(e$,ch_sd,"=",2,k_sd$, sd.)
		if r_sd <= 0 goto skipCPI: ! shouldn't happen
		k_cpih$ = " ",k_cpih$
		k_cpih$[1,6] = k_cpid$[13,18]
		r_cpih = filegetcpihead(e$,ch_cpih,"=",1,k_cpih$, cpih.)
		if r_cpih <= 0 goto skipCPI: ! shouldn't happen
		k_srep$ = " ",k_srep$
		k_srep$[1,3] = cpih.Salesman using "###"
		!r_srep = filegetsslsm(e$,ch_srep,"=",1,k_srep$, srep.)
		Search #ch_srep,2,1;k_srep$,r_srep,E
		if e<>0 ! r_srep <= 0
			clear SlsmName$ ! srep.
			SlsmName$ = "** NOT ON FILE **"
		Else
			mat read #ch_srep,r,srep,0;SlsmName$;
		end if
		clear cpicb.
		if cpid.ChargebackTable
			k_cpicb$ = " ",k_cpicb$
			k_cpicb$ = cpid.ChargebackTable using "######"
			r_cpicb = filegetcpicbtbl(e$,ch_cpicb,"=",1,k_cpicb$, cpicb.)
			if r_cpicb <= 0
				cpicb.Description$ = "** NOT ON FILE! **"
			end if
		else
			cpicb.Description$ = " ** NOT ASSIGNED **"
		end if
		Gosub PRNT_HEADER:
		! print the contract information
		PRINT #0;tab 6;cpih.ContractNumber using "#####";
		PRINT #0;tab 14;str$(cpid.ChargebackTable);" - ";rtrim$(cpicb.Description$);
		if sd.CancelDate
			tmp$=sd.CancelDate using "&&&&&&"
			call FormatDate(tmp$)
			print #0;tab 45;tmp$;
		end if
		print #0;tab 65;str$(cpih.Salesman);" - ";SlsmName$ ! "srep.Name$
		RPT = RPT + 1
		skipCPI:
	loop
Return

!
PRNT_HEADER: Rem "report header
If J8 Let RPT[0] = 9 \ VNDPRTD = 0 \ Return
!
If RPT < RPT[1] Return 
If RPT[2] ! "after page 1
!!  If SCRN
!!    Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
!!    Input Len 16384 + 1;""J$
!!    Print 'CS';
!!  End If 
  Print #0;"\14\";
End If 
Print #0;""
RPT[2] = RPT[2] + 1
Print #0; Tab 1;"DATE: ";DATE$;
Print #0; Tab (Int(64 - (Len(CONM$) / 2)));CONM$;
Print #0; Tab 120;"PAGE: ";RPT[2]
Print #0;" -690B- ";
TME$ = "" \ Call Time(TME$)
Print #0;TME$;
Print #0; Tab 45;"D E A D   I N V E N T O R Y   R E P O R T";
Print #0; Tab 110;Str$(NMTH);" MONTHS"
Print #0;""
Print #0; Tab 1;"ITEM CODE"; Tab 14;"DESCRIPTION 1";tab 45;"VENDOR ITEM";
if rasl
	Print #0; Tab 63;"PRIM";
	Print #0; Tab 73;"ON HAND"; Tab 84;"AVERAGE COST";
	Print #0; Tab 105;"EXTENSION"; 
Else ! normal
	Print #0; Tab 65;"ON HAND"; Tab 86;"AVERAGE COST";
	Print #0; Tab 101;"EXTENSION"; 
Endif
Print #0; Tab 115;"LST SOLD";tab 124;"LST REC"
Print #0;""
If Not(EOR)
  Print #0; Tab 1;"WAREHOUSE:";WH[0];
  Print #0; Tab 20;"BUYER:";BUYER; Tab 32;BUYR$
  Print #0;""
End If 
RPT[0] = 9
VNDPRTD = 0
Return

chk_invtrans: !
let jdate[2]=0
LET K8$=" ",K8$;K8$[1,12]=K1$       
LET K8$[13,26]="99999999999999"                             
TRANS_LOOP: REM                                                        
SEARCH #8,6,2;K8$,R8,E                                      
! IF E>3 GOSUB ERR_SEARCH:                                               
IF E GOTO END_TRANS_LOOP:                                              
IF R8<1 OR R8>CHF(8)-1 GOTO TRANS_LOOP:                         
IF K8$[1,12]<>K1$[1,12] GOTO END_TRANS_LOOP:                           
MAT  READ #8,R8,56;LT1;   
MAT  READ #8,R8,64;LT2;   
if LT1[1]<>WH GOTO TRANS_LOOP:
iF LT1[0]<>1 and lt1[0]<>10 GOTO TRANS_LOOP:
! 1)  po374 - purchase orders receipt to stock  
!10)  mx774 - warehouse transfer in  
!     mx756 - receipts of warehouse transfers in  
let jdate[2]=LT2[0]
END_TRANS_LOOP: !
return
!
RPTDONE: Rem "done
Gosub PRNT_BUYTTLS
Gosub PRNT_WHSTTLS
Gosub PRNT_RPTTTLS
!!If SCRN
!!  Print @0,23;'CL';"PRESS <CR> TO EXIT  ";
!!  Input Len 16384 + 1;""J$
!!End If 
Goto OUTEND
!

ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 

jul2date: Rem REM DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 

L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
If E<>0
	let x2=0
	Return
endif
X2 = X$[1,5]
Return

!!Old native code
!
!!STARTHERE: Rem "we're off
!!Print 'CS ED';@0,0;"-MX690B-";@35,0;"DEAD INVENTORY REPORT"
!!Print @0,2;'BR';@25,2;"STARTING";@42,2;"ENDING";'ER';
!!Print @4,3;'BD';"WAREHOUSE";
!!Print @4,4;"BUYER";
!!Print @4,5;"VENDOR";
!!Print @4,6;"PRODUCT";
!!Print @4,8;"NO SALES FOR";
!!Print @32,8;"MONTHS";
!!Print @4,9;"COSTING U/M";
!!Print @30,9;"U/M: 1:Stock  2:Sell  3:Purch  4:Cost  5:Price";
!!Print @4,12;"QUANTITY U/M";
!!Print @30,12;"U/M: 1:Stock  2:Sell  3:Purch";
!!Print @4,15;"INCLUDE NEGATIVES"
!!Print 'ED';
!!Print @1,3;"1> ";@1,4;"2> ";@1,5;"3> ";@1,6;"4> ";
!!Print @1,8;"5> ";@1,9;"6> ";@1,12;"7> ";@1,15;"8> ";
!!Print Using "##";@25,3;WH[1];@42,3;WH[2]
!!Print Using "###";@25,4;BYR[1];@42,4;BYR[2]
!!Print Using "######";@25,5;VND[1];@42,5;VND[2]
!!Print @25,6;BPROD$;@42,6;EPROD$;
!!Print Using "##";@24,8;NMTH
!!Print @24,9;Str$(CSTUM);@24,12;Str$(QTYUM);
!!J$ = "N" \ If NEGOH Let J$ = "Y"
!!Print @25,15;J$[1,1]
!!Goto FINALQ
!!EDT_ALL: Rem "all changed
!!For FLD = 1 To 8
!!  Gosub EDT_FLDS
!!Next FLD
!!FINALQ: Rem "what next
!!Print @0,22;'CE';"SELECT  #: fld to edit  A: all  S: save defaults  P: print  E: exit  ";
!!Input Len 16384 + 2;""J$ \ Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "P" Goto STRTSORT
!!If J$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
!!  Input Len 16384 + 1;""J2$
!!  Call String(1,J2$)
!!  If J2$ = "" Print @0,22;'CL'; \ Goto FINALQ
!!  If J2$ <> "A" And J2$ <> "U" Goto ASK_SAVE
!!  If J2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "progdfltw","690B","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL'
!!  Goto FINALQ
!!End If 
!!If J$ = "A" Goto EDT_ALL
!!X2 = J$
!!If X2 > 0 And X2 < 10
!!  FLD = X2
!!  Gosub EDT_FLDS
!!End If 
!!Goto FINALQ
!!EDT_FLDS: Rem "edit fields
!!On FLD Gosub FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,FLD7,FLD8
!!Return 
!!FLD1: Rem "whse range
!!J0$ = "30000225 3";J1 = WH[1]
!!J5$ = "Enter the Starting Warehouse for Report"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 99 Goto FLD1
!!WH[1] = J1
!!FLD1A: Rem "ending
!!J0$ = "30000242 3";J1 = WH[2]
!!J5$ = "Enter the Ending Warehouse for Report"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 99 Goto FLD1A
!!If J1 < WH[1]
!!  J7$ = "ENDING MUST BE GREATER THAN STARTING"
!!  Gosub ISERRMSG
!!  Goto FLD1A
!!End If 
!!WH[2] = J1
!!RETVAL$[1,2] = WH[1] Using "##"
!!RETVAL$[3,4] = WH[2] Using "##"
!!Return 
!!FLD2: Rem "Buyer Range
!!J0$ = "30000325 4";J1 = BYR[1]
!!J5$ = "Enter the Starting BUYER # for Report"
!!Gosub ISINPUT
!!BYR[1] = J1
!!FLD2A: Rem "ending
!!J0$ = "30000342 4";J1 = BYR[2]
!!J5$ = "Enter the ending BUYER # for Report"
!!Gosub ISINPUT
!!If J1 < BYR[1]
!!  J7$ = "ENDING MUST BE GREATER THAN STARTING"
!!  Gosub ISERRMSG
!!  Goto FLD2A
!!End If 
!!BYR[2] = J1
!!RETVAL$[5,7] = BYR[1] Using "###"
!!RETVAL$[8,10] = BYR[2] Using "###"
!!Return 
!!FLD3: Rem "VENDOR RANGE
!!J0$ = "30000625 5";J1 = VND[1]
!!J5$ = "Enter the starting VENDOR # for Report"
!!Gosub ISINPUT
!!VND[1] = J1
!!FLD3A: Rem "ending
!!J0$ = "30000642 5";J1 = VND[2]
!!J5$ = "Enter the ending VENDOR # for Report"
!!Gosub ISINPUT
!!If J1 < VND[1]
!!  J7$ = "ENDING MUST BE GREATER THAN STARTING"
!!  Gosub ISERRMSG
!!  Goto FLD3A
!!End If 
!!VND[2] = J1
!!RETVAL$[11,16] = VND[1] Using "######"
!!RETVAL$[17,22] = VND[2] Using "######"
!!Return 
!!FLD4: Rem "product range
!!J0$ = "2 001225 6";J1$ = BPROD$
!!J5$ = "Enter the starting Product Code for Report"
!!Gosub ISINPUT
!!BPROD$ = J$[1,12]
!!FLD4A: Rem "ending
!!J0$ = "2 001242 6";J1$ = EPROD$
!!J5$ = "Enter the ending Product Code for Report"
!!Gosub ISINPUT
!!If J$[1,12] < BPROD$
!!  J7$ = "ENDING MUST BE GREATER THAN STARTING"
!!  Gosub ISERRMSG
!!  Goto FLD4A
!!End If 
!!EPROD$ = J$[1,12]
!!RETVAL$[23,34] = BPROD$
!!RETVAL$[35,46] = EPROD$
!!Return 
!!FLD5: Rem "number of months no sales
!!J0$ = "30000225 8";J1 = NMTH
!!J5$ = "Enter the Number of Months with NO SALES"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 99 Goto FLD5
!!NMTH = J1
!!RETVAL$[47,48] = NMTH Using "##"
!!Return 
!!FLD6: Rem "Costing U/M Selection
!!J0$ = "3000012409";J1 = CSTUM
!!J5$ = "Select: 1:Stock  2:Sell  3:Purch  4:Cost  5:Price  U/M"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 5 Goto FLD6
!!CSTUM = J1
!!RETVAL$[49,50] = CSTUM Using "##"
!!Return 
!!FLlD7: Rem "Quantity U/M Selection
!!J0$ = "3000012412";J1 = QTYUM
!!J5$ = "Select: 1:Stock  2:Sell  3:Purch   U/M"
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 3 Goto FLD6
!!QTYUM = J1
!!RETVAL$[51,52] = QTYUM
!!Return 
!!FLD8: Rem "Include Neg ON HAND
!!J0$ = "6000012515";J1 = NEGOH
!!J5$ = "Include Products with Negative ON HAND? Y / N"
!!Gosub ISINPUT
!!NEGOH = J1
!!RETVAL$[53,53] = Str$(NEGOH)
!!Return 
!!STRTSORT: Rem "report start
!

CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB !!If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
OUTEND: Rem "done - outta here
If j8 ! dx xml
  if MySQLQueueID and not(reportAborted)
	call FinishMySQLReport(e$,MySQL_ch,MySQLQueueID)
  else
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
  end if
End If 

End 
!
!!Print 'CS';
!!Chain "MX000C"
!!Close 
!!Chain "MX000"
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End