! >>> Program 797
!
! description: FIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/797.dl4 src/797.src
!
! 1.0 04/07/2008 change??
!
include "src/copyright.inc" ! dx
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,VerifyDate
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 13, 2006  12:44:53
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/mx77/mx797.src (univ2) [mary] {09825}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
! - Option Default Dialect IRIS1
Rem MX797 - warehouse transfer inventory value
Rem AUTHOR: DAVE  AUG 10, 1987
Rem LAST UPDATE: option to suppress zero inventory balances -MTG
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[400]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
Dim 3%,COST,UNITX,SUNIT$[4],CUNIT$[4],CUNIT,UNIT$[10],2%,C4[8]
Dim COST$[1],I$[10],I1$[10],J$[40],J1$[30],J2$[20],J8$[8],K6$[60]
Dim F1$[30],SCRATCH$[80],P61$[256]
Dim P1$[156],PMASK$[12],P9$[50],P60$[50],U5$[20]
Dim FTK$[50],FT1$[72],1%,FT1[3],2%,FT2[3],3%,FT3[3]
Dim 1%,X1[9],FLAG,2%,D3[1],JDATE
Dim 4%,T9[20]
Dim 2%,B1[24],A3,WHSE,Q0[1],DATEX,COMP,X2,R[35]
Dim 3%,A1[33],A2[7],J
Dim 1%,FL1[2],FL1$[80],2%,FL2[3],3%,FL3[8],FL4[1],FLK$[30]
Dim 2%,FIFL,FLT$[50],3%,FQ9[2],FQTY,F$[30]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],K5$[60]
Dim 1%,TR1[13],2%,TR2[4],3%,TR3[13],TR$[80]
Dim 1%,TRL1[10],3%,TRL3[21],TRL$[98],1%,TUN[2],3%,TUNF[5],THAZ$[50]
Dim K10$[30],K11$[30],K30$[50]
Dim XT1$[12],1%,XT1[5],3%,XT3[7]
!
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="}",EndParam$
!
X2 = Spc(5)
COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If J8 If J8 <> 49 Goto ERR_TRAP
If Err 0 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 21
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
if P60$[9,9]<>"F" if P60$[9,9]<>"L" let e$="FIFO/LIFO INVENTORY METHOD NOT AVAILABLE...." \ error 10000
!!If P60$[9,9] = "F" Or P60$[9,9] = "L" Goto L_750
!!Print @0,22;'CL';"FIFO/LIFO INVENTORY METHOD NOT AVAILABLE....";
!!Print @0,23;'CL';"PRESS <CR> TO RETURN TO THE MENU ";
!!Input ""J$ \ Goto L_9030
!!L_750: If P60$[9,9] = "F" Print 'CS CE'; Tab 15;"FIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT";
!!If P60$[9,9] = "L" Print 'CS CE'; Tab 15;"LIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT";
For J = 2 To 11
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Open #J,J$
L_830: Next J
Data "1792","0 ","1728","0","0","3008  ","3024","0","848","1360"
!!F1$ = COMP Using "6/FIFOWXTMP&" \ Call FindF(F1$,A9) \ If Not(A9) Goto L_900
!!Print @0,22;'CL RB';"Warehouse Transfer Report Running Elsewhere....";
!!Print @0,23;'CL RB';"Press <CR> to return to the menu "; \ Input ""J$
!!If J$ <> "adjust" Goto L_9030
!!Print @0,22;'CL';@0,23;'CL RB';"creating/clearing transaction files ";
!!Kill F1$
L_885: 
Search #7,3,1;FLK$,R[7],E
If E=0 
  FL3[8] = 0
  Write #7,R[7],150;FL3[8];
  Goto L_885
endif
!!Rem CREATE TEMP FILE
!!F$ = "[1:36] ",F1$
!!Build #30,F$
!!R[30] = 21 \ Search #30,0,1;K30$,R[30],E \ If E Gosub ERR_SEARCH
!!R[30] = 1 \ Search #30,0,0;K30$,R[30],E  \ If E Gosub ERR_SEARCH
!
Mat Read #1,0,100;J8$; \ Read #1,3;J1$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
!!If Err 0 Gosub ERR_ESCAPE
Gosub L_8300
!!Window On 
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
!
! - dx add xport reporting code
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
F1$ = intCO Using "6/FIFOWXTMP&" \ Call FindF(F1$,A9)
If A9 let e$="Warehouse Transfer Report Running Elsewhere...." \ error 10000
!Rem CREATE TEMP FILE
F$ = "[1:36] ",F1$
Build #30,F$
R[30] = 21 
Search #30,0,1;K30$,R[30],E 
If E let e$="Can't build '",F1$,"'!" \ error 10000
R[30] = 1 
Search #30,0,0;K30$,R[30],E  
If E let e$="Can't build '",F1$,"'!" \ error 10000
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"797",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("SCODE",K2$)  \ K2$ = K2$,Blank$
call dxget("ECODE",tmp$) \ K3$ = tmp$,EndParam$
call dxget("UNIT",UNIT$) 
call dxget("WHSE",tmp$)  \ WHSE = tmp$
call dxget("COST",COST$)  	
!
IF K2$ > K3$ LET e$="Invalid ending code, must be greater than starting code!" \ error 10000
if WHSE<0 or WHSE>99 let e$="Invalid warehouse code, must be between 0 and 99!" \ error 10000
!
K2$ = K2$[1,6]
K3$ = K3$[1,6]
UNITX = UNIT$ 
U5$ = " ",U5$
If UNITX = 1 Let U5$ = "IN STOCKING UNITS"
If UNITX = 2 Let U5$ = "IN SELLING UNITS"
If UNITX = 3 Let U5$ = "IN PURCHASING UNITS"
If UNITX = 4 Let U5$ = "IN COSTING UNITS"
If UNITX = 5 Let U5$ = "IN PRICING UNITS"
If UNITX = 6 Let U5$ = "IN PRODUCTION UNITS"
UNITX = UNITX + 7
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

J1 = 90 \ J2 = 0
!!L_1000: Rem GET RANGES 
!!If P60$[9,9] = "F" Print 'CS CE'; Tab 15;"FIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT";
!!If P60$[9,9] = "L" Print 'CS CE'; Tab 15;"LIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT";
!!Print @5,2;"ENTER STARTING CODE, <CR> FOR ALL,  ''E'' TO EXIT : ";'CE';
!!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!!If K2$ = "" Let K3$ = "}}}}}}" \ Goto L_1045
!!Print @5,4;"ENTER ENDING   CODE, <CR> FOR LAST, ''E'' TO EXIT : ";'CL';
!!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!!If K3$ = "" Let K3$ = "}}}}}}"
!!L_1045: If K2$ <= K3$ Goto L_1055
!!Print @5,23;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_1000
!!L_1055: K1$ = K2$
!!J1 = 90 \ J2 = 0
!!Gosub L_10500
!!Print @0,5;'CE';@5,7;U5$;
!!L_1100: Rem ASK FOR WAREHOUSE
!!Print @5,10;'CE';"Enter warehouse ##,  0 for all ";
!!Input ""J2$
!!WHSE = J2$
!!If WHSE > 99 Goto L_1100
!!L_1200: Print @0,14;'CE';"Enter cost method to use (A)ctual, (L)oad, or (E)nd: ";
!!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!!If J2$ = "A" Let COST$ = J2$ \ Goto L_1300
!!If J2$ <> "L" Goto L_1200
!!COST$ = "L"
!!L_1300: Goto L_1900
!!Print @0,16;'CE';"Enter Ending Date (MMDDYY) or <CR> for all ";
!!Input ""J2$ \ If J2$ = "" Let DATE = 0;JDATE = 0 \ Goto L_1900
!!If Len(J2$) <> 6 Goto L_1300
!!DATE = J2$ \ J2$ = DATE Using "&#####"
!!I$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6]
!!Call VerifyDate(I$,I1$,E) \ If E Goto L_1300
!!I1$ = I$[7,8],I$[1,2],I$[4,5] \ DATE = I1$
!!X2 = DATE \ Gosub L_7820 \ Goto L_1300
!!JDATE = X2
!
IF j8 
	tmp$ = "ITEM CODE",fdel$
	tmp$ = tmp$,"DESCRIPTION",fdel$
	tmp$ = tmp$,"COMM",fdel$
	tmp$ = tmp$,"FR WH",fdel$
	tmp$ = tmp$,"TO WH",fdel$
	tmp$ = tmp$,"TRANS#",fdel$
	tmp$ = tmp$,"ENT DATE",fdel$
	tmp$ = tmp$,"ON HAND",fdel$
	tmp$ = tmp$,"TRANS COST",fdel$
	tmp$ = tmp$,"EXT COST",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
END IF
!
L_1900: !!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K30$ = " ",K30$
L_2000: 
Search #30,3,1;K30$,R[30],E 
If E = 2 Goto L_9100
If E Goto L_9100
If K30$[1,Len(K3$)] > K3$ Goto L_9100
If K30$[1,12] <> XT1$[1,12] Gosub L_5400
Mat Read #30,R[30],0;XT1$; 
Mat Read #30,R[30],12;XT1;
If WHSE If WHSE <> XT1[1] Goto L_2000
Mat Read #30,R[30],24;XT3;
R[7] = XT3[4] \ If R[7] Gosub L_6900
R[11] = XT3[6] \ Gosub L_6400
R[10] = XT3[5] \ Gosub L_6500
K2$ = " ",K2$ \ K2$[1,12] = XT1$[1,12]
Search #2,2,1;K2$,R[2],E 
If E 
  if J8=0 Print #0;XT1$[1,12];" IS NOT IN THE MASTER FILE!" \ J1 = J1 + 1 
  Goto L_2000
endif
Mat Read #2,R[2],0;P1$;
Mat Read #2,R[2],156;B1;
Mat Read #2,R[2],256;A1;
Mat Read #2,R[2],460;A2;
Mat Read #2,R[2],508;A3;
Mat Read #2,R[2],512;PFU1; \ Mat Read #2,R[2],554;PFU2; \ Mat Read #2,R[2],894;C4; \ Mat Read #2,R[2],256;A;
If PFU1[11] = -1 Or PFU1[11] = -3
  If FL4[0]
    A[5] = FL4[1];A[6] = FL4[0]
  End If 
End If 
QTY = XT3[1]
COST = XT3[2]
If COST$ = "L" Let COST = XT3[3]
T9[3] = FNR(COST * QTY)
Gosub L_5000
Goto L_2000
!
L_4000: Rem TOTAL PRINT
Gosub L_5400
Gosub L_5800
!
IF J8 RETURN
!
Print #0;"\15\** TOTALS **";
Print #0; Using "---------#.##"; Tab 85;T9[10];
Print #0; Using "-----------#.##"; Tab 117;T9[12]
Print #0;" "
Return 
!
L_5000: Rem PRINT LINE
Gosub L_10000
Gosub L_5800
IF j8 
	If Not(CT)
	  tmp$ = rtrim$(P1$[140,151]),fdel$
	  tmp$ = tmp$, rtrim$(P1$[9,38]),fdel$
	  tmp$ = tmp$, P1$[152,155],fdel$
	ELSE
	  tmp$ = "",fdel$,"",fdel$,"",fdel$
	END IF
	If P9$[26,26] = "Y" If Not(CT)
	  tmp$ = tmp$, rtrim$(P1$[63,92]),fdel$
	ELSE
	  tmp$ = tmp$,"",fdel$
	End If 
	If Not(WHSE) 
		tmp$ = tmp$, XT1[1] Using "##",fdel$
	else
		tmp$ = tmp$,"",fdel$
	end if
	tmp$ = tmp$, XT1[2] Using "##",fdel$
	tmp$ = tmp$, XT3[0] Using "######",fdel$
	If F9 < 99 
		If QTY = 0 
			tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
			tmp$ = tmp$,"",fdel$,"",fdel$
			T9[3] = 0
			call addtostr(e$,rstr$,tmp$+rdel$)
		return
		end if 
	end if
	X2 = TR2[0] \ Gosub L_7700
	tmp$ = tmp$, X$[1,8],fdel$
	tmp$ = tmp$, QTY,SUNIT$ Using "-------#.## ",fdel$
	tmp$ = tmp$, COST Using PMASK$,fdel$  !! * /
	tmp$ = tmp$, CUNIT$ Using PMASK$,fdel$ !! / *
	tmp$ = tmp$, T9[3] Using "-------#.##",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	CT = CT + 1
	TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[3]
	T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[3]
	return
end if 
If Not(CT)
  Print #0; Tab 1;P1$[140,151];
  Print #0; Tab 13;P1$[9,38];
  Print #0; Tab 44;P1$[152,155]
  J1 = J1 + 1
End If 
If P9$[26,26] = "Y" If Not(CT)
  Print #0; Tab 13;P1$[63,92];
End If 
If Not(WHSE) Print #0; Using "##"; Tab 50;XT1[1];
Print #0; Using "##"; Tab 58;XT1[2];
Print #0; Using "######"; Tab 63;XT3[0];
If F9 < 99 If QTY = 0 Goto L_5230
X2 = TR2[0] \ Gosub L_7700
Print #0; Tab 75;X$[1,8];
Print #0; Using "-------#.## "; Tab 87;QTY;SUNIT$;
Print #0; Using PMASK$; Tab 104;COST;CUNIT$;
Print #0; Using "-------#.##"; Tab 120;T9[3];
CT = CT + 1
TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[3]
T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[3]
Print #0;""
L_5230: T9[3] = 0
Return 

L_5400: Rem PRINT TOTAL
if J8 return ! dx xml
!
If Not(CT) Goto L_5470
If CT = 1 Goto L_5460
Gosub L_5800
Print #0; Using "TOTAL -------#.## "; Tab 81;TOTQ;SUNIT$;
Print #0; Using "-------#.##"; Tab 120;TOTCOST
L_5460: Print #0;" " \ J1 = J1 + 1
L_5470: TOTQ = 0
TOTCOST = 0
CT = 0
Return 
!
L_5800: Rem HEADINGS ROUTINE
IF j8 RETURN
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\12\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 795 -";COST$;"- ";T9$;
If P60$[9,9] = "L" Print #0; Tab 38;"LIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT"
If P60$[9,9] = "F" Print #0; Tab 38;"FIFO WAREHOUSE TRANSFER INVENTORY VALUE REPORT"
X2 = DATEX \ Gosub L_7700
If DATEX Print #0; Tab 10;"FOR THE PERIOD ENDING ";X$[1,8];
If Not(WHSE) Print #0; Tab 54;"FOR ALL WAREHOUSES ";U5$
If WHSE Print #0; Using "FROM WAREHOUSE ## "; Tab 55;WHSE;" ";U5$
Print #0;"\12\";
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 44;"COMM";
If Not(WHSE) Print #0; Tab 49;"FR WH";
Print #0; Tab 56;"TO WH";
Print #0; Tab 63;"TRANS#";
Print #0; Tab 75;"ENT DATE";
Print #0; Tab 94;"ON HAND";
Print #0; Tab 108;"TRANS COST";
Print #0; Tab 123;"EXT COST";
Print #0;" "
Print #0;"\12\";
F9 = 99
Return 
!
! - QTY = 0
! - FTK$ = " ",FTK$ \ FTK$[1,6] = R7 Using "######"
! - L_6015: Search #8,3,1;FTK$,R8,E \ If E = 2 Goto L_6090
! - Gosub L_8100
! - If FT2[0] <> R7 Goto L_6090
! - If FT2[2] > JDATE Goto L_6015
! - QTY = QTY + FT3[0]
! - Goto L_6015
! - L_6090: Return 
!
L_6400: Rem READ TRANSL FILE
Mat Read #11,R[11],0;TRL1;
Mat Read #11,R[11],22;TRL3;
Mat Read #11,R[11],154;TRL$;
Mat Read #11,R[11],252;TUN;
Mat Read #11,R[11],258;TUNF;
Mat Read #11,R[11],294;THAZ$;
Return 
!
L_6500: Rem WAREHOUSE TRANSFER FILE READ
Mat Read #10,R[10],0;TR1;
Mat Read #10,R[10],28;TR2;
Mat Read #10,R[10],48;TR3;
Mat Read #10,R[10],132;TR$;
Return 
!
L_6600: Rem UPDATE FIFOLOT & FIFOTRANS
FCOST = 0 \ If Not(TRL3[3]) Goto L_6890
WHSE = 99 \ FQ9[0] = - (Int(TRL3[3])) \ FQ9[1] = 0 \ FQ9[2] = 0
If FQ9[0] >= 0 Goto L_6890
FLK$ = " ",FLK$ \ FLK$[1,12] = TRL$[1,12] \ FLK$[13,14] = WHSE Using "##" \ MODE = 3
If P60$[9,9] = "L" Let FLK$[15] = "999999" \ MODE = 6
L_6645: 
Search #7,MODE,1;FLK$,R[7],E 
If E = 2 Goto L_6825
If FLK$[1,12] <> TRL$[1,12] Goto L_6825
S9 = FLK$[13,14] \ If S9 <> WHSE Goto L_6825
Mat Read #7,R[7],102;FL3; 
If Not(FL3 - FL3[1]) Goto L_6645
FQ9[2] = FQ9[0] - FQ9[1]
If FQ9[2] > 0 If (FL3[0] - FL3[1]) < 0 Goto L_6705
FQTY = FL3[0] \ For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 10 \ FQTY = FQTY - FL3[S9] \ Next S9
If FQ9[2] < 0 If FQTY > 0 Goto L_6705
If FQ9[2] >= 0 Goto L_6645
Goto L_6645
L_6705: 
Gosub L_6900
If FQ9[2] < 0 Goto L_6730
If (FL3[1] - FL3[0]) > 0 If (FL3[1] - FL3[0]) < FQ9[2] Let FQ9[2] = (FL3[1] - FL3[0])
FL3[8] = Int(FL3[8] - FQ9[2])
Goto L_6755
L_6730: If FQ9[2] > 0 Goto L_6815
FQTY = FL3[0] \ For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 10 \ FQTY = FQTY - FL3[S9] \ Next S9
If FL3[0] If FQTY < Abs(FQ9[2]) Let FQ9[2] = - (FQTY)
FL3[8] = Int(FL3[8] - FQ9[2])
L_6755: Gosub L_6950
XT1$[1,12] = TRL$[1,12] \ XT1[0] = 99 \ XT1[1] = TR1[3] \ XT1[2] = TR1[5]
XT1[3] = TR1[4] \ XT1[4] = TRL1[1] \ XT3[0] = TRL3[0] \ XT3[1] = - FQ9[2]
XT3[7] = FL2[2]
XT3[2] = FL3[6] \ XT3[3] = FL3[7] \ XT3[4] = R[7] \ XT3[5] = R[10]
XT3[6] = R[11]
E = 2 
Search #30,1,0;K30$,R[30],E 
If E let e$="Can't get record from '",F1$,"'!" \ error 10000
Mat Write #30,R[30],0;XT1$; 
Mat Write #30,R[30],12;XT1;
Mat Write #30,R[30],24;XT3;
K30$ = " ",K30$ \ K30$[1,12] = TRL$[1,12] \ K30$[13,14] = XT1[0] Using "##"
K30$[15,20] = XT3[7] Using "######" \ K30$[21,26] = XT3[4] Using "######"
K30$[27,32] = XT1[4] Using "######" \ K30$[33,36] = XT1[4] Using "####"
K30$[37,42] = R[30] Using "######"
Search #30,4,1;K30$,R[30],E 
If E let e$="Can't add '",K30$,"' to ",F1$,"!" \ error 10000
L_6815: FQ9[1] = Int(FQ9[1] + FQ9[2]) \ If FQ9[0] = FQ9[1] Goto L_6890
Goto L_6645
L_6825: Rem THE REST IS NOT FOUND
FQ9[2] = FQ9[0] - FQ9[1] \ If Not(FQ9[2]) Goto L_6890
FLK$[1,12] = TRL$[1,12] \ FLK$[13,14] = WHSE Using "##" \ FLK$[15] = "999999" \ MODE = 6
If P60$[9,9] = "L" Let FLK$[15] = "" \ MODE = 3
Search #7,MODE,1;FLK$,R[7],E 
If E = 2 Goto L_6864
If FLK$[1,12] <> TRL$[1,12] Goto L_6864
Mat Read #7,R[7],102;FL3;
XT1$[1,12] = TRL$[1,12] \ XT1[0] = 99 \ XT1[1] = TR1[3] \ XT1[2] = TR1[5]
XT1[3] = TR1[4] \ XT1[4] = TRL1[1]
If P60$[9,9] = "L" Let XT3[7] = 0 Else Let XT3[7] = 999999
XT3[0] = TRL3[0];XT3[1] = - FQ9[2];XT3[2] = FL3[6];XT3[7] = FL3[7];XT3[4] = 0
XT3[5] = R[10];XT3[6] = R[11]
L_6864: 
E = 2 
Search #30,1,0;K30$,R[30],E 
If E let e$="Can't get record from '",F1$,"'!" \ error 10000
Mat Write #30,R[30],0;XT1$; 
Mat Write #30,R[30],12;XT1;
Mat Write #30,R[30],24;XT3;
K30$ = " ",K30$;K30$[1,12] = XT1$[1,12];K30$[13,14] = XT1[0] Using "##"
K30$[15,20] = XT3[7] Using "######";K30$[21,26] = XT3[4] Using "######"
K30$[27,32] = XT3[0] Using "#######";K30$[33,36] = XT1[4] Using "####"
K30$[37,42] = R[30] Using "######"
Search #30,4,1;K30$,R[30],E 
If E let e$="Can't add '",K30$,"' to ",F1$,"!" \ error 10000
L_6890: 
Return 
!
L_6900: Rem READ FIFOLOT
Mat Read #7,R[7],0;FL1
Mat Read #7,R[7],6;FL1$
Mat Read #7,R[7],86;FL2
Mat Read #7,R[7],102;FL3
Mat Read #7,R[7],192;FL4
Return 
!
L_6950: Rem WRITE FIFOLOT
Mat Write #7,R[7],0;FL1
Mat Write #7,R[7],6;FL1$
Mat Write #7,R[7],86;FL2
Mat Write #7,R[7],102;FL3;
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] 
Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
!
L_8100: Rem READ FIFOTRANS FILE
Mat Read #8,R8,0;FT1$;
Mat Read #8,R8,72;FT1;
Mat Read #8,R8,80;FT2;
Mat Read #8,R8,96;FT3;
Return 
!
L_8300: Rem SORT WAREHOUSE TRANSFER & ALLOCATE INVENTORY FOR FIFO/LIFO
!!Print @0,23;'CL';"Sorting....Please Wait......";
K10$ = " ",K10$
L_8315: 
Search #10,3,1;K10$,R[10],E 
If E = 2 Goto L_8390
!!If E Gosub ERR_SEARCH
Mat Read #10,R[10],0;TR1;
If TR1[2] <> COMP Goto L_8315
If TR1[1] <> 2 Goto L_8315
Gosub L_6500
K11$ = " ",K11$ \ K11$[1,6] = TR3[0] Using "######"
L_8350: 
Search #11,3,1;K11$,R[11],E 
if E = 2 Goto L_8315
Gosub L_6400
If TR3[0] <> TRL3[0] Goto L_8315
If TRL1[0] = 2 Goto L_8350
If TRL1[7] <> 0 Goto L_8350
Gosub L_6600
Goto L_8350
L_8390: Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
If Not(J8) Print #0;"\14\";
goto OUTEND
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
! - For K = 0 To 20
! -   T9[K] = 0
! - Next K
! - If K2$ = "" Goto OUTEND
! -  0If Not(J8) Print #0;"\14\";
!!Goto L_1000
! - Goto OUTEND
! 
L_10000: Rem
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  SUNIT$ = " ",SUNIT$;SUNIT$[1,2] = "LB";CUNIT$ = SUNIT$
  Return 
End If 
CNVTU[0] = 0
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 2
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 1
CNVTA = QTY \ Gosub L_20000 \ QTY = AMOUNT
If PFU1[UNITX] > 0 Mat Read #4,PFU1[UNITX],10;SUNIT$;
If PFU1[UNITX] = -1 Let SUNIT$ = "CWT "
If PFU1[UNITX] = -3 Let SUNIT$ = "LB  "
CUNIT$ = SUNIT$
Return 
!
!!L_10500: Rem SELECT UNIT
!!Window Open @5,5; Size 70,12; Using "SELECT DEFAULT UNIT "
!!L_10520: Print 'CS'
!!Print 
!!Print Tab 5;" 1) STOCKING  "; Tab 45;" 4) COSTING"
!!Print Tab 5;" 2) SELLING  "; Tab 45;" 5) PRICING"
!!Print Tab 5;" 3) PURCHASING "; Tab 45;" 6) PRODUCTION"
!!Print 
!!Print Tab 10;"Enter unit to show on report ";
!!Input ""UNIT$
!!UNITX = UNIT$
!!If UNITX < 1 Goto L_10520
!!If UNITX > 6 Goto L_10520
!!U5$ = " ",U5$
!!If UNITX = 1 Let U5$ = "IN STOCKING UNITS "
!!If UNITX = 2 Let U5$ = "IN SELLING UNITS "
!!If UNITX = 3 Let U5$ = "IN PURCHASING UNITS "
!!If UNITX = 4 Let U5$ = "IN COSTING UNITS "
!!If UNITX = 5 Let U5$ = "IN PRICING UNITS "
!!If UNITX = 6 Let U5$ = "IN PRODUCTION UNITS "
!!UNITX = UNITX + 7
!!Window Close 
!!Window Off 
!!Return 
!
L_20000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 2%,Q0[1]
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
BUNIT = 0
If CNVTU[2] <> 5 Goto L_20170
BUNIT = 1
CNVTU[2] = 1
Goto L_20180
L_20170: BUNIT = 0
L_20180: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,19,50;P9$;
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_20250,L_20350,L_20350,L_20640
e$="Invalid conversion" \ error 10000
L_20250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20330
  Next X1[2]
  FLAG = 1 \ Goto L_20650
L_20330: Next X1[1]
FLAG = 0 \ Goto L_20650
L_20350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20450
  Next CUNIT
  FLAG = 0 \ Goto L_20650
L_20450: If CUNIT = 0 Goto L_20530
L_20460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_20510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! " Catch Weight Item
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20530: Next X1[1]
If CNVTU[2] <> 1 Goto L_20580
If BUNIT Goto L_20580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20580: If CNVTU[2] <> 2 Goto L_20630
If Not(CNVTU[1]) Goto L_20630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20630: FLAG = 0 \ Goto L_20650
L_20640: Rem
L_20650: Rem RETURN FROM MODES 0-2
Return 
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT PROGRAM
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 	
try call dxclose() else rem
End 
!
!!K30$ = " ",K30$
!!L_9004: Search #30,3,1;K30$,R[30],E \ If E = 2 Goto L_9020
!!!!If E Gosub ERR_SEARCH
!!Mat Read #30,R[30],24;XT3 \ If Not(XT3[4]) Goto L_9011
!!Mat Read #7,XT3[4],102;FL3;
!!FL3[8] = FL3[8] - XT3[1]
!!Mat Write #7,XT3[4],102;FL3;
!!L_9011: Search #30,5,1;K30$,R[30],E !!\ If E Gosub ERR_SEARCH
!!E = 3 \ Search #30,1,0;K30$,R[30],E !!\ If E Gosub ERR_SEARCH
!!Goto L_9004
!!L_9020: F1$ = COMP Using "6/FIFOWXTMP&" \ Call FindF(F1$,A9) \ If Not(A9) Goto L_9030
!!Kill F1$
!!L_9030: Print 'CS' \ Close
!!Chain "MX000"
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
