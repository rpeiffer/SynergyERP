! >>> Program 071a
!
! description: Reports only customer/product pricing
!
! loadsave -w -n 100,10 -o prog/dxport/071a.dl4 src/071a.src
!
! 1.0 04/09/2008 change
!
include "src/copyright.inc" ! dx
!
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  7, 2005  16:53:21
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx0/mx071a.src (univ2) [txc] {24226}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
! - Option Default Dialect IRIS1
Rem MX071A SPECIAL PRICE TO FUTURE PRICE COMPARISON
Rem AUTHOR DAVE DEVITO 07/09/91
Rem LAST UPDATE:  roman 07/02/1992 new special price logic / clean up
Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 2%,C4[8],FUTURE,J4$[60]
Com 3%,PFU2[6],CNVTA,UWORK[10],BASEX ,FIELD
!
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 1%,SPCUM[1],C3[2],J0,J2,J3,J4,J5,J6,J7,J9[2],CMC2[100],CMC0[100]
Dim 1%,M5[3],M8,LM[1],WHLM[1],SPWH,LM1[37,5],STATUS,PM5[5,4]
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],3%,RB5[2]
Dim 2%,B[24],C4[8],PFCO[3],C1[12],AO[3],SPC1[5],CMC1[100],M6[3]
Dim 2%,CUST,CUST1,RB1[5],K7$[60],K8$[60],K13$[60],RB$[12]
Dim 3%,SPC4[6],SPC5[4],A[33],A1[7],C5[5],C6[9],PREC[2],J1,J8,M7,BRACKET
Dim 1%,WHPARC[5],3%,PF_LOAD2,WHMISC[6],PRPARC[3],URECFLAG
Dim A1$[142],A3$[21],A2$[30],A$[156],P$[12],J$[50],J0$[15],J1$[50]
Dim J5$[70],J7$[90],J9$[50],K1$[50],K2$[50],K3$[50],K4$[50],Z1$[50]
Dim LINE1$[130],LINE2$[130],T$[20],CNAME$[30],F1$[16],K9$[50],X$[10]
Dim S1$[30],K6$[50],CUNIT$[4],PUNIT$[4],K0$[50],K5$[50],J2$[20]
Dim 2%,Q0[1],PMASK$[12],LM2[37,3],JDATE[5],JWDATE,DT3[1],SDATE,W2[9]
Dim 3%,W3[24],FLEPTR[20,1],SPECS[50],R[99],MSGDESC$[150],N[12]
Dim P9$[50],K10$[50],P60$[50],P61$[256],T1$[20]
Dim RETVAL$[512],MSGTXT$[75],Z2$[2]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!! dx add xport reporting code
Dim tmp$[2500],tmp1$[1000]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
RBTFNDR = 1;SCRPRT=0
NT1: Rem "RBTFNDR  1=match eff date, 0=lessthanequal to
LINE1$ = "=",LINE1$
LINE2$ = "-",LINE2$
Mat Read #1,3,0;CNAME$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
LET COID=IntCo
For X = 2 To 15
  Read J1 \ If J1 = -1 Goto L_860
  Read #1,88,J1;F1$;
  Ropen #X,F1$
L_860: Next X
Data "1936","1808","1792","2288","1824","1728","1712","-1","1744","2880","1952","304","320"
Data "1376"
! #10-prodwhse,11=CONTRTH,12=Brkt,13=RBTH,14=RBTDTL,15=Lastprc, 16=SPRICEMARK
ROpen #16,"2/SPRICEMARK"+Str$(COID) ! as REV9 still uses pricemark
Mat Read #1,3,172;SDATE;
X2 = SDATE \ Gosub L_7820 \ X2 = Tim(6)
JDATE[1] = X2
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
If Err 0 Let J7 = Spc(8)
J7 = 0 \ V9[4] = Chf(0)
!!If Err 0 Gosub ERR_ESCAPE
V9[4] = 60 
If J7 Let V9[4] = 21;SCRPRT = 99
FLEPTR[1,0] = 4;FLEPTR[2,0] = 10;FLEPTR[3,0] = 5
FLEPTR[4,0] = 15;FLEPTR[5,0] = 2;FLEPTR[6,0] = 11
FLEPTR[7,0] = 7;FLEPTR[8,0] = 12
J8=J7
!

!
if SCRPRT ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"071a",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
!! dx add xport reporting code
call dxget("SSLSM",tmp$) \ STSLSM = tmp$
call dxget("ESLSM",tmp$) \ if tmp$ = "" let ESLSM = 999 else let ESLSM = tmp$ 
call dxget("BRK",tmp$)	 \ BRK = tmp$
call dxget("RDATE",tmp1$) \ if tmp1$ = "" Let RDATE = 123159 ELSE LET RDATE = tmp1$
call dxget("PRNTRBT",tmp$) \ if tmp$ = "E" let PRNTRBT = 0 else let PRNTRBT = 1
!
!! dx end
!
if STSLSM < 0 or STSLSM > 999 let e$="Invalid salesman code, must be between 0 and 999!" \ error 10000
if ESLSM < STSLSM or ESLSM > 999 Let e$ = "Invalid ending salesman code, must be between starting salesman code and 999!" \ error 10000
if BRK > 10 let e$="Invalid break, must be between 0 and 10!" \ error 10000
!
X$ = RDATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \RDATE = X$
X2 = RDATE
gosub NUM2DATE
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let JDATE[0] = -1 else let JDATE[0] = X$[1,5]
If JDATE[0] < 0 or JDATE[0] > 33603 let e$="Invalid date, must be <= 123199!" \ error 10000 
!
If SCRPRT = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
!!L_900: Rem "=================================== get ranges
!!Gosub L_8000
!!Goto INPUTS
!!INPUTS: Rem
!!Print @0,21;'CE';
!!If PRNTRBT
!!  If RBTFNDR = 1 Print @0,21;"REBATE START DATE EQUAL TO EFFECTIVE DATE.";
!!  If RBTFNDR = 0 Print @0,21;"REBATE IN EFFECT ON EFFECTIVE DATE.";
!!End If 
!!Print @0,23;'CE';"Enter #: field  R: reselect all  P: print  S:save defaults  E: exit ";
!!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!!Print @0,23;'CE';
!!If X$ = "P" Goto L_1100
!!If X$ = "E" Let J8 = 0 \ Goto L_9100
!!If X$ = "R" Goto EDT_ALL
!!If X$ = "" Goto INPUTS
!!If X$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for A: all  U: user access only  <CR>: do not save ";
!!  Input Len 16384 + 1;""Z2$
!!  Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  !!Call "progdfltw","071a","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL'
!!End If 
!!X = X$
!!If X < 1 Or X > 4 Goto INPUTS
!!Gosub EDT_FLDS
!!Goto INPUTS
!!!EDT_ALL: Rem "want's all
!!!For X = 1 To 4
!!!  Gosub EDT_FLDS
!!!Next X
!!!Goto INPUTS
!!!EDT_FLDS: Rem "edit them here
!!!FLG = 1
!!!On X Gosub FLD1,FLD2,FLD3,FLD4
!!!Return 
!!FLD1: Rem slsm range
!!J5$ = "Enter starting salesman number maximum 999"
!!J1 = STSLSM;J0$ = "3000033505"
!!Gosub ISINPUT
!!STSLSM = J1
!!Print Using "###";@35,5;STSLSM;'CL';
!!J5$ = " ",J5$
!!RETVAL$[1,3] = STSLSM Using "###"
!!J5$ = "Enter ending salesman number maximum 999"
!!J1 = ESLSM;J0$ = "3000035505"
!!Gosub ISINPUT
!!ESLSM = J1
!!Print Using "###";@55,5;ESLSM;'CL';
!!If STSLSM > ESLSM
!!  J7$ = "Invalid salesman range"
!!  Gosub ISERRMSG
!!  Goto FLD1
!!End If 
!!RETVAL$[4,6] = ESLSM Using "###"
!!Return 
!!FLD2: Rem 10 brk  price
!!J5$ = "Enter base bracket to use for 10 BRK Prices (1-10) or 0 for exclude"
!!J1 = BRK;J0$ = "3000023507"
!!Gosub ISINPUT
!!BRK = J1
!!If BRK > 10 Or BRK < 0 Goto FLD2
!!Print Using "##";@35,7;BRK;'CL';
!!J5$ = " ",J5$
!!RETVAL$[7,8] = BRK Using "##"
!!Return 
!!FLD3: Rem effectice date
!!J5$ = "Enter effective date (MMDDYY) for price changes or 123159 for all"
!!J0$ = "5 00065009"
!!J1 = RDATE
!!Gosub ISINPUT
!!If J1 Let X2 = J1 \ Gosub L_7820 \ Goto FLD3
!!RDATE = J1;JDATE = X2
!!RETVAL$[9,14] = RDATE Using "######"
!!Return 
!!FLD4: Rem "only recs with Rebate Cost
!!J5$ = "Items with a Rebate Cost Contract? (E:exclude  O:only)"
!!J0$ = "2 00014210";J1$ = "E" \ If PRNTRBT Let J1$ = "O"
!!Gosub ISINPUT
!!If J$[1,1] <> "E" And J$[1,1] <> "O" Goto FLD4
!!RETVAL$[15,15] = J$[1,1]
!!PRNTRBT = 0 \ If J$[1,1] = "O" Let PRNTRBT = 1
!!Return 
L_1100: Rem START REPORT
if SCRPRT
	tmp$ = "SALESMAN CODE",fdel$
	tmp$ = tmp$,"SALESMAN NAME",fdel$
	tmp$ = tmp$,"CUSTOMER #",fdel$
	tmp$ = tmp$,"CUSTOMER NAME",fdel$
	tmp$ = tmp$,"SALES YTD",fdel$
	tmp$ = tmp$,"G.P. $ YTD",fdel$
	tmp$ = tmp$,"G.P. % YTD",fdel$
	tmp$ = tmp$,"PRODUCT",fdel$
	tmp$ = tmp$,"DESCRIPTION",fdel$
	tmp$ = tmp$,"TYPE",fdel$
	tmp$ = tmp$,"LOADED COST",fdel$
	tmp$ = tmp$,"LOADED COST U/M",fdel$
	tmp$ = tmp$,"PRICE",fdel$
	tmp$ = tmp$,"PRICE U/M",fdel$
	tmp$ = tmp$,"GTM",fdel$
	tmp$ = tmp$,"ACTION/LAST SOLD DATE",fdel$
	Call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
Gosub L_8500
!!Print @0,22;'CL';"Printing, please wait... ";
K9$ = " ",K9$
CUST = -99
SLSM = -99
V9[0] = 0
V9[1] = 99
L_2000: Rem MAIN LOGIC
L_2010: Search #9,3,1;K9$,R2,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto OUTEND
Rem {begin src/inc/rtn.printmsg.i}
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,22;PCTR;" Records Printed";
!!    Print Using "   Page ####";V9[0];
!!  End If 
End If 
Rem {end rtn.printmsg.i}
If Not(PRNTRBT) ! "using Special Price File
  Mat Read #2,R2,0;P$;
  Mat Read #2,R2,12;SPC1;
  Mat Read #2,R2,36;SPCUM;
  Mat Read #2,R2,40;C3;
  Mat Read #2,R2,46;SPC4;
  Mat Read #2,R2,118;SPWH;
  Mat Read #2,R2,138;SPC5;
Else ! "using Rebate Detail File
  Mat Read #14,R2,0;RB$;
  Mat Read #14,R2,12;RB1;
  Mat Read #14,R2,36;RBUM;
  Mat Read #14,R2,40;RB;
  Mat Read #14,R2,118;RBWH;
  Mat Read #14,R2,126;RBL1;
  Mat Read #14,R2,138;RB5;
  P$ = RB$;SPC1[2] = RB1[2];SPC1[3] = RB1[3];SPC1[4] = RB1[4]
  SPC1[5] = RB1[5];SPCUM[0] = RBUM[0];SPCUM[1] = RBUM[1]
  C3[0] = RB[0];C3[1] = RB[1];C3[2] = RB[2]
  SPWH = RBWH;SPC5[0] = RB5[0];SPC5[1] = RB5[1];SPC5[2] = 0
  SPC5[3] = RBL1[0];SPC5[4] = RBL1[1]
End If 
CUST1 = K9$[4,9]
Gosub L_6000 \ Goto L_2000
Gosub L_6200
If E = 1 Goto L_2010
If Not(C3[2]) Let C3[2] = PFU1[9]
If Not(SPCUM[0]) Let SPCUM[0] = PFU1[12]
If Not(SPCUM[1]) Let SPCUM[1] = PFU1[11]
If P9$[32,32] = "Y" And SPWH <> 0 Gosub GET_PRODWHSE
If P9$[32,32] = "Y" Gosub L_69000
Gosub L_6400
Gosub L_12400: ! "calc new loads NOW
ORGCOST = B[8]
If PFCO[0] Let C4[4] = PFCO[0]
FUTURE = C4[4]
DATEX  = 0 - RDATE
Gosub GETPRC \ X3 = 0
FUTCOST = SPECS[17]
STPRICE = X3
FUTURE = 0
If SLSM < 0 Let SLSM = C1[2]
If SLSM <> C1[2] Let SLSM = C1[2];V9[1] = 999
If CUST <> CUST1 Gosub L_4000
DATEX  = SDATE
Gosub GETPRC \ Goto L_2010
CURCOST = SPECS[17]
CURPRICE = X3
DATEX  = 0 - RDATE
Gosub GETPRC \ Goto L_2010
NEWCOST = SPECS[17]
NEWPRICE = X3
CNVTU[0] = 0;CNVTU[2] = 2;CNVTU[1] = SPCUM[1];CNVTA = CURCOST
Gosub L_20000 \ CURCOST1 = AMOUNT
CNVTU[0] = 0;CNVTU[2] = 2;CNVTU[1] = SPCUM[1];CNVTA = NEWCOST
Gosub L_20000 \ NEWCOST1 = AMOUNT
CNVTU[0] = 0;CNVTU[2] = 2;CNVTU[1] = SPCUM[1];CNVTA = FUTCOST
Gosub L_20000 \ FUTCOST1 = AMOUNT
CNVTU[0] = 0;CNVTU[2] = 2;CNVTU[1] = SPCUM[0];CNVTA = CURPRICE
Gosub L_20000 \ CURPRICE1 = AMOUNT
CNVTU[0] = 0;CNVTU[2] = 2;CNVTU[1] = SPCUM[0];CNVTA = NEWPRICE
Gosub L_20000 \ NEWPRICE1 = AMOUNT
CNVTU[0] = 0;CNVTU[2] = 2;CNVTU[1] = SPCUM[0];CNVTA = STPRICE
Gosub L_20000 \ STPRICE1 = AMOUNT
Gosub L_6800
Gosub L_5800
Gosub L_5000
Mat SPC5 = Zer \ SPC5[0] = 0
Goto L_2000
GETPRC: Rem "get the Price
FLEPTR[1,1] = R4
FLEPTR[2,1] = R10
FLEPTR[3,1] = R5
FLEPTR[4,1] = 0
FLEPTR[5,1] = R2
FLEPTR[6,1] = 0
If PRNTRBT Let FLEPTR[5,1] = 0;FLEPTR[6,1] = 0
SPECS[0] = 0;SPECS[1] = 0;SPECS[2] = 0
SPECS[3] = CUST1;SPECS[4] = SPWH
If FUTURE Let SPECS[3] = 0
SPECS[5] = DATEX ;SPECS[6] = 0;SPECS[7] = C1[7];SPECS[8] = 1
SPECS[9] = 0;SPECS[10] = 0;SPECS[11] = BRK;SPECS[12] = 0
SPECS[13] = C3[2];SPECS[14] = SPCUM[0];SPECS[15] = SPCUM[1]
SPECS[16] = 0;SPECS[17] = 0;SPECS[18] = 0;SPECS[19] = 0;SPECS[20] = 0
!Call "PRICE",FLEPTR[],SPECS[],MSGDESC$
j1$=""
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,j1$,rstr$)
If Not(SPECS[0]) ! "no errors
  X3 = SPECS[20]
  T$ = MSGDESC$
  T1$ = MSGDESC$[21]
Else 
  X3 = 0;SPECS[17] = 0;SPECS[24] = 0
  Gosub L_2500
End If 
Return 1
L_2500: Rem CALC SPECIAL PRICE
X3 = SPC5[0];PUNIT = SPCUM[0];CUNIT = SPCUM[1]
If C3 = 4 Or C3 = 5 Let X3 = 0 \ Gosub L_4500 \ Goto L_2760
If C3 = 1 Or C3 = 2 Gosub L_2790
If C3 = 3 Let X3 = SPC5[0] \ Goto L_2750
If C3 = 1 Let X3 = (BASEX * ((100 + SPC5[0]) / 100))
If C3 = 2 Let X3 = (BASEX / ((100 - SPC5[0]) / 100))
L_2750: Rem
L_2760: Gosub L_3300
Return 
L_2790: Rem BASEX TYPE
FIELD = 0
If C3[1] = 2 Let FIELD = 0
If C3[1] > 3 If C3[1] < 10 Let FIELD = C3[1] - 3
If FIELD Gosub L_6500
If C3[1] = 1 Let BASEX = C4[4]
If C3[1] = 2 Let BASEX = B[8]
If C3[1] = 3 Let BASEX = B[10]
If C3[1] >= 4 If C3[1] <= 9 Let BASEX = A[C3[1] + 16]
If C3[1] = 10 Let BASEX = SPC5[2]
If C3[1] = 11 Let BASEX = SPC5[1] \ If SPC5[3] = 4 Let BASEX = B[8]
Return 
L_3000: Rem MTRX
!NOT USED
L_3200: Return 
L_3300: Rem FIND TYPE
T$ = " ",T$
If C3 = 1 If SPC5[0] >= 0 Let T$ = SPC5[0] Using "MARK UP ###.## %"
If C3 = 1 If SPC5[0] < 0 Let T$ = SPC5[0] Using "MARK DOWN ###.## %"
If C3 = 2 Let T$ = SPC5[0] Using "GROSS MARGIN ###.## %"
If C3 = 3 Let T$ = "FLAT PRICE "
If C3 = 4 Let T$ = SPC5[0] Using "FIXED BRACKET ##"
If C3 = 5 Let T$ = SPC5[0] Using "BRACKET JUMP ##"
If C3 < 1 Or C3 > 5 Let T$ = "ERROR ! ERROR!"
Return 
L_4000: Rem NEW CUSTOMER
If (V9[1] + 6) > V9[4] Let V9[1] = 90
Gosub L_5800
if SCRPRT 
	tmp1$ = C1[2] Using "###",fdel$
	tmp1$ = tmp1$,rtrim$(S1$[1,30]),fdel$
	tmp1$ = tmp1$,CUST1 Using "######",fdel$
	tmp1$ = tmp1$,RTRIM$(A1$[31,60]),fdel$
	tmp1$ = tmp1$, C5[3] Using "---,---,--#.##",fdel$!!SALES YTD 
	tmp1$ = tmp1$, C5[5] Using "-,---,--#.##",fdel$!!!!"G.P. $ YTD ";
	If C5[3] 
		tmp1$ = tmp1$, (C5[5] * 100) / C5[3] Using "---#.## %",fdel$ 
	Else 
		tmp1$ = tmp1$,"",fdel$!!!G.P. % YTD 
	End if
	CUST = CUST1
	V9[1] = V9[1] + 6
	Gosub L_5800
	return
end if
Print #0; Tab 1;LINE1$[1,130]
If AO[2] Print #0;"***";
Print #0; Using "###### "; Tab 4;CUST1; Tab 11;A1$[31,60];
Print #0; Using "SALES YTD ---,---,--#.## "; Tab 40;C5[3];
Print #0; Tab 70;"G.P. $ YTD ";
Print #0; Using "-,---,--#.## "; Tab 81;C5[5];
Print #0; Tab 98;"G.P. % YTD ";
If C5[3] Print #0; Using "---#.## %";(C5[5] * 100) / C5[3] Else Print #0;" "
Print #0; Tab 1;LINE2$[1,130]
Print #0; Tab 2;"PRODUCT ";
Print #0; Tab 15;"DESCRIPTION";
Print #0; Tab 72;"LOADED COST"; Tab 91;"PRICE";
Print #0; Tab 100;"GTM"; Tab 107;"ACTION/LAST SOLD DATE"
Print #0; Tab 1;LINE2$[1,130]
Print #0;""
CUST = CUST1
V9[1] = V9[1] + 6
Gosub L_5800
Return 
L_4500: Rem CALC BRACKET PRICE
If BRK = 0 Let X3 = 0 \ Return 
BRACKET1 = BRK
If C3 = 5 Let BRACKET1 = BRK + (SPC5[0])
If C3 = 4 Let BRACKET1 = SPC5[0]
If BRACKET1 > 10 Let BRACKET1 = 10
B4 = (BRACKET1 * 1000) - 1000 + C4[3]
If B4 < 0 Let X3 = 0 \ Goto L_4730
Mat Read #8,B4,0;M5;
Mat Read #8,B4,10;M6;
M7 = C4[4]
CNVTU[0] = 0 \ CNVTU[1] = PFU1[11] \ CNVTU[2] = 2 \ CNVTA = M7 \ Gosub L_20000 \ M7 = AMOUNT
For M8 = 0 To 3
  If Not(M6[M8]) Goto L_4670
  If M5[M8] Let M7 = M7 + (M6[M8])
  If Not(M5[M8]) Let M7 = M7 + (M7 * (M6[M8] / 100))
Next M8
L_4670: Rem
X4 = M7
CNVTU[0] = PFU1[11] \ CNVTU[1] = 0 \ CNVTU[2] = 2 \ CNVTA = X4 \ Gosub L_20000 \ X4 = AMOUNT
M7 = X4
X3 = M7
L_4730: Return 
L_5000: Rem print LINE
!
if SCRPRT 
!
If (V9[1] + 5) > V9[4] Let V9[1] = 90
Gosub L_5800
tmp$ = tmp1$, rtrim$(A$[140,151]),fdel$!!prodct
If SPECS[27] Let tmp$ = tmp$,"CTR  ",SPECS[27] Using "######"!!!
If SPECS[24] Let tmp$ = tmp$,"  RBT  ",SPECS[24] Using "######" else Let tmp$ = tmp$,fdel$

tmp$ = tmp$,"CURRENT SP PRICE",fdel$
tmp$ = tmp$, CURCOST1 Using PMASK$,fdel$,CUNIT$,fdel$
tmp$ = tmp$, CURPRICE1 Using PMASK$,fdel$,PUNIT$,fdel$
If CURPRICE 
	tmp$ = tmp$, FNR((CURPRICE - CURCOST) * 100 / CURPRICE) Using "---#.##%",fdel$
Else
	tmp$ = tmp$, "",fdel$
End if
tmp$ = tmp$, rtrim$(T$),fdel$ !!action 1
Call addtostr(e$,rstr$,tmp$+rdel$)

tmp$ = tmp1$, rtrim$(A$[140,151]),fdel$!!prodct
tmp$ = tmp$, rtrim$(A$[9,38]),fdel$!!description_1
tmp$ = tmp$,"FUTURE SP PRICE",fdel$
tmp$ = tmp$, NEWCOST1 Using PMASK$,fdel$,CUNIT$,fdel$
tmp$ = tmp$, NEWPRICE1 Using PMASK$,fdel$,PUNIT$,fdel$
If NEWPRICE 
	tmp$ = tmp$, FNR((NEWPRICE - NEWCOST) * 100 / NEWPRICE) Using "---#.##%",fdel$
else
	tmp$ = tmp$,"",fdel$
end if
tmp$ = tmp$, rtrim$(T1$),fdel$!!action-_2
Call addtostr(e$,rstr$,tmp$+rdel$)

If C3 = 1 Or C3 = 2 Gosub L_8100
!
tmp$ = tmp1$, rtrim$(A$[140,151]),fdel$!!product
tmp$ = tmp$, rtrim$(A$[63,92]),fdel$!!description _2
tmp$ = tmp$,"FUTURE SYSTEM PRICE",fdel$
tmp$ = tmp$, FUTCOST1 Using PMASK$,fdel$,CUNIT$,fdel$ 
tmp$ = tmp$, STPRICE1 Using PMASK$,fdel$,PUNIT$,fdel$


If STPRICE 
	tmp$ = tmp$, FNR((STPRICE - FUTCOST) * 100 / STPRICE) Using "---#.##%",fdel$
else 
	tmp$ = tmp$,"",fdel$
end if
!
X2 = SPC1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE If JWDATE < JDATE  Let tmp$ = tmp$,"*** EXPIRED ***" 
!
X2 = SPC1[3] \ Gosub NUM2DATE
!
tmp$ = tmp$,X$,fdel$
V9[1] = V9[1] + 5
Call addtostr(e$,rstr$,tmp$+rdel$)
Gosub L_5800
return
!
end if
!
If (V9[1] + 5) > V9[4] Let V9[1] = 90
Gosub L_5800
If SPECS[27] ! "contract #
  Print #0; Using "######"; Tab 24;"CTR ";SPECS[27];
End If 
If SPECS[24] ! "Rebate Contract
  Print #0; Using "######"; Tab 35;"RBT ";SPECS[24];
End If 
Print #0; Tab 46;"CURRENT SP PRICE    =>";
Print #0; Using PMASK$;CURCOST1;"/";CUNIT$; Tab 80;CURPRICE1;"/";PUNIT$;
If CURPRICE Print #0; Using "---#.##% "; Tab 97;FNR((CURPRICE - CURCOST) * 100 / CURPRICE);
Print #0; Tab 109;T$
Print #0; Tab 2;A$[140,151];
Print #0; Tab 15;A$[9,38];
Print #0; Tab 46;"FUTURE SP PRICE     =>";
Print #0; Using PMASK$;NEWCOST1;"/";CUNIT$; Tab 80;NEWPRICE1;"/";PUNIT$;
If NEWPRICE Print #0; Using "---#.##% "; Tab 97;FNR((NEWPRICE - NEWCOST) * 100 / NEWPRICE);
If C3 = 1 Or C3 = 2 Gosub L_8100
Print #0; Tab 109;T1$;
Print #0;" "
Print #0; Tab 15;A$[63,92];
Print #0; Tab 46;"FUTURE SYSTEM PRICE =>";
Print #0; Using PMASK$;FUTCOST1;"/";CUNIT$; Tab 80;STPRICE1;"/";PUNIT$;
If STPRICE Print #0; Using "---#.##% "; Tab 97;FNR((STPRICE - FUTCOST) * 100 / STPRICE);
X2 = SPC1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE If JWDATE < JDATE Print #0; Tab 106;"*** EXPIRED ***";
X2 = SPC1[3] \ Gosub NUM2DATE
Print #0; Tab 109;"  ";X$;
Print #0;""
Print #0;""
V9[1] = V9[1] + 5
Gosub L_5800
Return 
L_5800: Rem "==================================== headings
If V9[1] < V9[4] Return 
!!If V9[0] If SCRPRT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(SCRPRT) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 5
Gosub L_6700
IF SCRPRT RETURN
If Not(SCRPRT) Print #0;"\12\";
Print #0; Tab 43;"SPECIAL PRICE TO FUTURE PRICE COMPARISON "
Print #0; Tab 1;"MX071A"; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V9[0]
X2 = RDATE \ Gosub NUM2DATE
If PRNTRBT
  Print #0; Tab 30;"REBATES ONLY";
  If RBTFNDR = 1 Print " = ";
  If RBTFNDR = 0 Print " <=";
End If 
Print #0; Tab 50;"PRICES EFFECTIVE ";X$
Print #0; Using "SALESMAN ### "; Tab 5;C1[2];S1$[1,30]
Return 
L_6000: Rem READ CUSTOMER
K3$ = CUST1 Using "######"
Search #3,2,1;K3$,R3,E !!\ If E > 1 Gosub ERR_SEARCH
If E Return 
Mat Read #3,R3,0;A1$;
Mat Read #3,R3,142;C1;
Mat Read #3,R3,252;C5;
Mat Read #3,R3,486;AO;
Return 1
L_6200: Rem READ PRODUCT
K4$ = " ",K4$
K4$[1,12] = P$[1,12]
Search #4,2,1;K4$,R4,E !!\ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_6360
Mat Read #4,R4,0;A$;
Mat Read #4,R4,156;B;
Mat Read #4,R4,256;A;
Mat Read #4,R4,460;A1;
Mat Read #4,R4,512;PFU1;
Mat Read #4,R4,554;PFU2;
Mat Read #4,R4,620;LM; \ PREC[0] = R4
Mat Read #4,R4,894;C4;
Mat Read #4,R4,974;PFCO;
Mat Read #4,R4,596;PRPARC;
Read #4,R4,938;PF_LOAD2;
Return 
L_6360: Rem NG
PFCO[0] = 0;B[24] = 0
Return 
L_6400: Rem READ COMMDTY CODE FILE
K5$ = " ",K5$
K5$[1,4] = A$[152,155]
Search #5,2,1;K5$,R5,E !!\ If E Gosub ERR_SEARCH
Return 
L_6500: Rem CALC LOADED COST AND L PRICES FROM TABLE
!Gosub L_12400
If FIELD < 1 Or FIELD > 6 Return 
If C4[2] <> 1 Return 
If C4[3] = 0 Return 
Mat read #16,c4[3],18;pm5;
LET BASEX=C4[4] ! "base cost
If pm5[field-1,4]=1 let basex=b[10]
if pm5[field-1,4]=2 let basex=b[8]
if pm5[field-1,4]=3 let basex=pf_load2
if pm5[field-1,4]=4 let basex=b[21]
if pm5[field-1,4]=5 let basex=prparc[2]
Gosub L_19000
A[19 + FIELD] = X4
Return 
GET_PRODWHSE: Rem --------------- based on whse from specprice
K10$ = " ",K10$ \ K10$[1,12] = A$[140,151]
K10$[13,14] = SPWH Using "##"
Search #10,2,1;K10$,R10,E !!\ If E Gosub ERR_SEARCH
Mat Read #10,R10,78;W3;
Mat Read #10,R10,384;WHPARC;
Mat Read #10,R10,800;WHMISC;
Mat Read #10,R10,842;WHLM;
Return 
L_6700: Rem READ SLSM
K6$ = " ",K6$
K6$ = C1[2] Using "###"
Search #6,2,1;K6$,R6,E !!\ If E > 1 Gosub ERR_SEARCH
If E Let S1$ = "** NOT ON FILE ***" \ Goto L_6760
Mat Read #6,R6,0;S1$;
L_6760: Return 
L_6800: Rem UNIT OF MEASURE
If SPCUM[0] = -1 Let PUNIT$ = "CWT " \ Goto L_6830
If SPCUM[0] = -3 Let PUNIT$ = "LB  " \ Goto L_6830
If SPCUM[0] > 0 Mat Read #7,SPCUM[0],10;PUNIT$;
L_6830: If SPCUM[1] = -1 Let CUNIT$ = "CWT " \ Goto L_6850
If SPCUM[1] = -3 Let CUNIT$ = "LB  " \ Goto L_6850
If SPCUM[1] > 0 Mat Read #7,SPCUM[1],10;CUNIT$;
L_6850: Return 
NUM2DATE: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
!!L_8000: Rem "========================================== screen
!!Call "progdflt","071a","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,3] = "000"
!!  RETVAL$[4,6] = "999"
!!  RETVAL$[7,8] = "00"
!!  RETVAL$[9,14] = "591231"
!!  RETVAL$[15,15] = "N"
!!  Call "progdfltw","071a","",77,RETVAL$,URECFLAG
!!End If 
!!Print 'CS'
!!Print @0,0;"-MX071A-";@20,0;"SPECIAL PRICE TO FUTURE PRICE COMPARISON"
!!Print @35,3;'BR';"STARTING";@55,3;"ENDING";'ER';
!!Print @0,5;" 1> SLSM CODE ";
!!Print @0,7;" 2> 10 Bracket Price:  ";
!!Print @0,9;" 3> Effective date for price changes :  "
!!Print @0,10;" 4> Items with Rebate Costs: "
!!STSLSM = RETVAL$[1,3]
!!ESLSM = RETVAL$[4,6]
!!BRK = RETVAL$[7,8]
!!RDATE = RETVAL$[9,14]
!!PRNTRBT = 0 \ If RETVAL$[15,15] = "O" Let PRNTRBT = 1
!!X2 = RETVAL$[9,14] \ Gosub L_7820 \ X = X
!!JDATE = X2
!!Print Using "###";@35,5;STSLSM;@55,5;ESLSM;
!!Print Using "##";@35,7;BRK;
!!X2 = RDATE \ Gosub NUM2DATE
!!Print @50,9;X$;
!!X$ = "E" \ If PRNTRBT = 1 Let X$ = "O"
!!Print @42,10;X$[1,1];
Return 
L_8100: Rem BASEX TYPE
T1$ = " ",T1$
On C3[1] Goto L_8110,L_8120,L_8130,L_8140,L_8140,L_8140,L_8140,L_8140,L_8140,L_8150
Return 
L_8110: T1$ = "OF BASE"
Return 
L_8120: T1$ = "OF LOADED"
Return 
L_8130: T1$ = "OF LAST"
Return 
L_8140: T1$ = "OF LIST " + Str$(C3[1] - 3)
Return 
L_8150: T1$ = "OF SP. CST"
Return 
T1$ = "SLSM CST"
Return 
L_8500: Rem SORT SPECIAL PRICE BYE SLSM CUST PRODUCT
K9$ = " ",K9$
L_8520: Search #9,3,1;K9$,R9,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_8570
Search #9,5,1;K9$,R9,E !!\ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 071a sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_8520
L_8570:!! Print @0,22;'CL';"Sorting, please wait... ";
K2$ = " ",K2$;NUMSORT = 0
If PRNTRBT Goto RBTSORT
L_8590: Search #2,3,1;K2$,R2,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_8800
SORTCTR = SORTCTR + 1
!!If Not(Fra(SORTCTR / 500))
!!  Print Using "#######";@25,22;SORTCTR;" Records Processed";
!!End If 
If K2$[7,7] = "*" Or K2$[7,7] = "#" Or K2$[7,7] = "&" Goto L_8590
if k2$[7,7]="-" goto L_8590: ! costgrp
Mat Read #2,R2,0;P$;
Mat Read #2,R2,12;SPC1;
Mat Read #2,R2,40;C3;
Mat Read #2,R2,46;SPC4;
Mat Read #2,R2,138;SPC5;
If C3[0] = 6 Goto L_8590
Gosub L_6200
If Not(PFCO[0]) Goto L_8590
X2 = PFCO[1] \ Gosub L_7820 \ Goto L_8590
If X2 > JDATE Goto L_8590
If K2$[1,6] >= "999999" Goto L_8700
CUST1 = SPC1[0]
ROCHK: Rem " continue with cust info check
Gosub L_6000 \ Goto L_8600
If C4[2] = 2 If Not(BRK) Goto L_8600
If C1[2] < STSLSM Goto L_8600
If C1[2] > ESLSM Goto L_8600
K9$ = " ",K9$
K9$[1,3] = C1[2] Using "###"
K9$[4,9] = CUST1 Using "######"
K9$[10,21] = P$[1,12]
K9$[22] = ""
Search #9,2,1;K9$,R[9],E \ If Not(E) Goto L_8600
K9$[22,22] = " " \ If K2$[1,1] = "C" Let K9$[22,22] = "C"
Gosub CHK_RBT
If Not(PRNTRBT) And RBTFND Goto L_8600
If PRNTRBT And Not(RBTFND) Goto L_8600
Search #9,4,1;K9$,R2,E !!\ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 071a sortfile mode (m)=4 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",K9$ \error 10000
NUMSORT = NUMSORT + 1
!!If Not(Fra(NUMSORT / 500)) Print @25,21;NUMSORT;"Records found";'CL';
Goto L_8600
L_8600: Rem "what next
If K2$[1,1] <> "C" Goto L_8590
Goto L_8710
L_8700: Rem "into Contracts
K6$ = " ",K6$;K6$[1,6] = K2$[1,6]
L_8710: Rem "through all cust's for contract
Search #11,3,3;K6$,R[11],E \ If E = 2 Goto L_8590
!!If E Gosub ERR_SEARCH
If K6$[1,6] <> K2$[1,6] Goto L_8590
CUST1 = K6$[7,12]
Goto ROCHK
L_8800: Return 
RBTSORT: Rem "Sort if on rebate
SORTCTR = 0;NUMSORT = 0
CFLOOP: Rem "thru cust file
Search #3,3,1;K2$,R3,E \ If E = 2 Return 
!!If E Gosub ERR_SEARCH
SORTCTR = SORTCTR + 1
!!If Not(Fra(SORTCTR / 500))
!!  Print Using "#######";@25,22;SORTCTR;" Records Processed";
!!End If 
Mat Read #3,R3,0;A1$;
Mat Read #3,R3,142;C1;
Mat Read #3,R3,252;C5;
Mat Read #3,R3,486;AO;
If C4[2] = 2 If Not(BRK) Goto CFLOOP
If C1[2] < STSLSM Goto CFLOOP
If C1[2] > ESLSM Goto CFLOOP
CUST1 = K2$
K7$ = " ",K7$;K7$[1,6] = CUST1 Using "######"
K13$ = K7$
CRBTLOOP: Rem "
Search #13,3,2;K7$,R[13],E \ If E = 2 Goto CFLOOP
!!If E Gosub ERR_SEARCH
If K7$[1,6] <> K13$[1,6] Goto NXTCRBT
SORTCTR = SORTCTR + 1
!!If Not(Fra(SORTCTR / 500))
!!  Print Using "#######";@25,22;SORTCTR;" Records Processed";
!!End If 
Gosub DORBPROD
Goto CRBTLOOP
NXTCRBT: Rem "try Price type
If K13$[1,2] <> "PT"
  K7$ = " ",K7$
  K7$[1,2] = "PT"
  K7$[3] = C1[7] Using "###"
  K13$ = K7$
  Goto CRBTLOOP
End If 
Goto CFLOOP
DORBPROD: Rem "Thru Detail for Products
EXPC = 0;EXPREC = 0
K8$ = " ",K8$;K8$[1,6] = K7$[7,12]
RBDLOOP: Rem "thru detail
Search #14,3,1;K8$,R[14],E \ If E = 2 Goto RBPDONE
!!If E Gosub ERR_SEARCH
If K8$[1,6] <> K7$[7,12] Goto RBPDONE
SORTCTR = SORTCTR + 1
!!If Not(Fra(SORTCTR / 500))
!!  Print Using "#######";@25,22;SORTCTR;" Records Processed";
!!End If 
If K8$[7,7] = "*" Or K8$[7,7] = "#" Or K8$[7,7] = "&" Goto RBDLOOP
if k2$[7,7]="-" goto L_8590: ! costgrp
Mat Read #14,R[14],0;RB$;
Mat Read #14,R[14],12;RB1;
Read #14,R[14],118;RBWH;
X2 = RB1[2] \ If X2 And X2 <> 999999 Gosub L_7820 \ X2 = 0
If RBTFNDR = 1 And X2 <> JDATE[0] Goto RBDLOOP
If RBTFNDR = 0 And X2 > JDATE[0] Goto RBDLOOP
X2 = RB1[4] \ If X2 And X2 <> 999999 Gosub L_7820 \ X2 = 0
If X2 And X2 < JDATE[1] Goto RBDLOOP
If X2 And X2 < JDATE[0] Goto RBDLOOP
P$ = RB$
Gosub L_6200
If RBWH
  K10$ = " ",K10$ \ K10$[1,12] = A$[140,151]
  K10$[13,14] = RBWH Using "##"
  Search #10,2,1;K10$,R10,E !!\ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Mat Read #10,R10,38;W2;
  Else 
    W2[3] = B[24]
  End If 
Else 
  W2[3] = 0
End If 
VENDOR = B[24] \ If W2[3] Let VENDOR = W2[3]
If VENDOR <> RB1[1] Goto RBDLOOP
K9$ = " ",K9$
K9$[1,3] = C1[2] Using "###"
K9$[4,9] = CUST1 Using "######"
K9$[10,21] = P$[1,12]
K9$[22] = ""
Search #9,2,1;K9$,R[0],E \ If Not(E) Goto RBDLOOP
K9$[22,22] = " " \ If K2$[1,1] = "C" Let K9$[22,22] = "C"
R2 = R[14]
Search #9,4,1;K9$,R2,E !!\ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 071a sortfile mode (m)=4 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",K9$ \error 10000
EXPC = 0;EXPREC = -1
NUMSORT = NUMSORT + 1
!!If Not(Fra(NUMSORT / 500)) Print @25,21;NUMSORT;"Records found";'CL';
Goto RBDLOOP
RBPDONE: Rem "
Return 
CHK_RBT: Rem "
RBTFND = 0
K7$ = " ",K7$;K7$[1,6] = CUST1 Using "######"
K13$ = K7$
RBTLOOP: Rem "
Search #13,3,2;K7$,R[13],E \ If E = 2 Return 
!!If E Gosub ERR_SEARCH
If K7$[1,6] <> K13$[1,6] Goto NXTRBT
K8$ = " ",K8$;K8$[1,6] = K7$[7,12]
K8$[7] = P$[1,12]
Search #14,2,1;K8$,R[14],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Let RBTFND = 1 \ Return 
K8$[7] = " ",K8$[7]
K8$[7] = "#  "
Search #14,2,1;K8$,R[14],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Let RBTFND = 1 \ Return 
K8$[7] = " ",K8$[7]
K8$[7] = "*" + A$[152,155]
Search #14,2,1;K8$,R[14],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Let RBTFND = 1 \ Return 
K8$[7] = " ",K8$[7]
K8$[7] = "-" + A$[116,126]
Search #14,2,1;K8$,R[14],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Let RBTFND = 1 \ Return 
Goto RBTLOOP
NXTRBT: Rem "
If K13$[1,2] <> "PT"
  K7$[1,2] = "PT"
  K7$[3] = C1[7] Using "###"
  K13$ = K7$
  Goto RBTLOOP
End If 
Return 
!
!
L_9100: Rem EXIT
!!Chain "MX000C"
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If LM[0]
  WH = 0;LTBL = LM[0];CNVTA = 0
  Gosub L_12610 \ B[8] = CNVTA
End If 
If LM[1]
  WH = 0;LTBL = LM[1];CNVTA = 0
  Gosub L_12610 \ PF_LOAD2 = CNVTA
End If 
If P9$[32,32]="Y" and SPWH<>0
 IF WHLM[0]
	LET WH=SPWH;LTBL=WHLM[0];CNVTA=0
	GOSUB L_12610: \ LET W3[17]=CNVTA
 ENDIF 
 IF WHLM[1]
	LET WH=SPWH;LTBL=WHLM[1];CNVTA=0
	GOSUB L_12610: \ LET W3[14]=CNVTA
 ENDIF 
Endif  ! "whse pricing & whse
Return 
L_12610: Rem CALL
OTYPE = 1
!Call "MXLOADF",OTYPE,WH,LTBL,PREC[],CNVTA,FUTURE
Prec[2]=0-FUTURE ! future is in neg PREC[2]
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
L_19000: Rem MATRIX PRICING, RETURNS X4
!Call "MX671BRK5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
X4 = CNVTA
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
  If Not(W7[2]) Let W7[2] = PFCO[0]
End If 
Return 
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ 
!!Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
!
OUTEND: Rem END OF REANGE
!!If SCRPRT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
!!Goto L_900
! dx close
If SCRPRT ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
!try call dxclose() else rem
End 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
