! --- serpcpi_cbt.dl4
!
! CPI Storage Chargeback Table Maintenance
!
!
! loadsave -w -n 100,10 -o prog/dxport/serpcpi_cbt.dl4 src/serpcpi_cbt.src
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
include "src/inc/filecpicbtbl.inc"
!
Declare Intrinsic Sub InpBuf,String,Findf,programdump
!Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[3200],tmp2$[500],b$[200],List$[50,200],3%
b$=" ",b$
dim message$[150],webstr$[200],p61$[256]

Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

dim cpicb. as cpicbtbl
dim Kcpicb$[6],mode$[1]
dim 1%,returnStatus,arrDay[9]
dim 3%,Rcpicb,arrPenalty[9]
mat read #1,61,0;p61$;
if p61$[111,111]<>"Y" ! not active
	returnstatus=0
	let message$="CPI is not active"
	goto OutEnd:
endif

returnStatus = 1 ! default OK

CHcpicb = openfile("CPICBTBL",intCo) \ If CHcpicb = -1 Error 42

select case action1$
	case "DROPLIST"
		gosub BuildDroplist
	case "GETDATA"
		gosub ReadCPICB
		if (returnStatus) gosub LoadData
	case "SUBMITDATA"
		gosub ReadCPICB
		if (returnStatus) gosub UnloadDataAndUpdate
		if (returnStatus) Message$="Record updated."
	case else ! couldn't figure out what to do
		message$ = "Unknown action1: "+action1$
		returnstatus=0
end select
OutEnd: !
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
call setoutput(e$,rstr$)
try Close else rem
end


! ***********************************************************************
! Nobody but us subroutines down here
! ***********************************************************************

!----------------------------------------------------------------------------
! build initial drop list of existing
!----------------------------------------------------------------------------
BuildDroplist: !
	! Add section header and column defs
	tmp$=bsdel$+"Droplist"+fdel$+rdel$
	tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	
	Kcpicb$ = " ",Kcpicb$
	do while filegetcpicbtbl(e$,CHcpicb,">",1,Kcpicb$,cpicb.) > 0
		tmp$=str$(cpicb.Tablenum)+fdel$+str$(cpicb.Tablenum)
		tmp$=tmp$+" - ",rtrim$(cpicb.Description$)+fdel$+rdel$
		call addToStr(e$,rstr$,tmp$)
	loop
	call addToStr(e$, rstr$, esdel$)
Return

!----------------------------------------------------------------------------
! ReadCPICB will read an existing record or if not found, initialize
! a new one.
!----------------------------------------------------------------------------
ReadCPICB: !
	call dxget("TABLENUM", tmp$) \ i = tmp$
	if i < 1 OR i> 999999
		message$ = "Invalid table number entered!"
		returnStatus = 0
		return
	end if
	Kcpicb$ = i using "######"
	Rcpicb = filegetcpicbtbl(e$,CHcpicb,"=",1,Kcpicb$,cpicb.)
	if Rcpicb <= 0
		clear cpicb.
		cpicb.spare$ = " ",cpicb.spare$
		cpicb.Tablenum = i
		Rcpicb = 0
	end if
Return


!----------------------------------------------------------------------------
! load data will read an existing record or if not found, initialize
! a new one.
!----------------------------------------------------------------------------
LoadData: !
	! Header
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	tmp$=tmp$+"Tablenum"+fdel$
	tmp$=tmp$+"Description"+fdel$
	tmp$=tmp$+"RecurDays"+fdel$
	for i = 0 to 9
		tmp$=tmp$+"Day"+str$(i)+fdel$
	next i
	for i = 0 to 9
		tmp$=tmp$+"Penalty"+str$(i)+fdel$
	next i
	call addToStr(e$, rstr$, tmp$+rdel$)
	tmp$ = str$(cpicb.Tablenum)+fdel$+rtrim$(cpicb.Description$)+fdel$
	tmp$ = tmp$+str$(cpicb.RecurDays)+fdel$
	tmp$=tmp$+str$(cpicb.Day0)+fdel$+str$(cpicb.Day1)+fdel$
	tmp$=tmp$+str$(cpicb.Day2)+fdel$+str$(cpicb.Day3)+fdel$
	tmp$=tmp$+str$(cpicb.Day4)+fdel$+str$(cpicb.Day5)+fdel$
	tmp$=tmp$+str$(cpicb.Day6)+fdel$+str$(cpicb.Day7)+fdel$
	tmp$=tmp$+str$(cpicb.Day8)+fdel$+str$(cpicb.Day9)+fdel$
	tmp$=tmp$+str$(cpicb.Penalty0)+fdel$+str$(cpicb.Penalty1)+fdel$
	tmp$=tmp$+str$(cpicb.Penalty2)+fdel$+str$(cpicb.Penalty3)+fdel$
	tmp$=tmp$+str$(cpicb.Penalty4)+fdel$+str$(cpicb.Penalty5)+fdel$
	tmp$=tmp$+str$(cpicb.Penalty6)+fdel$+str$(cpicb.Penalty7)+fdel$
	tmp$=tmp$+str$(cpicb.Penalty8)+fdel$+str$(cpicb.Penalty9)+fdel$
	call addToStr(e$, rstr$, tmp$+rdel$+esdel$)
return
	
!----------------------------------------------------------------------------
! get returning information and update the record
!----------------------------------------------------------------------------
UnloadDataAndUpdate: !
	! tablenum is already loaded into record
	call DxGet("Description", tmp$) \ tmp$ = rtrim$(ucase$(tmp$))
	if tmp$ = ""
		message$ = "You must enter a description!" \ returnStatus = 0
		return
	end if
	cpicb.Description$ = tmp$+b$
	call DxGet("RecurDays", tmp$) \ cpicb.RecurDays = tmp$
	! OK load days and penalties into arrays for easier verfication
	endOfTable = 0
	for i = 0 to 9
		call dxget("Day"+str$(i), tmp$) \ arrDay[i] = tmp$
		call dxget("Penalty"+str$(i), tmp$) \ arrPenalty[i] = tmp$
		if endOfTable
			arrDay[i] = 0
			arrPenalty[i] = 0
		end if
		if arrPenalty[i] < 0 or arrPenalty[i] > 100
			message$ = "Invalid percentage in row "+str$(i+1)+"!"
			returnStatus = 0
			return
		end if
		if arrDay[i] = 0
			arrPenalty[i] = 0
			endOfTable = 1
		else
			if i
				if arrDay[i] <= arrDay[i-1]
					message$ = "Days in row "+str$(i+1)+" <= prior row!"
					returnStatus = 0
					return
				end if
			end if
		end if
	next i	
	cpicb.Day0 = arrDay[0]		
	cpicb.Day1 = arrDay[1]		
	cpicb.Day2 = arrDay[2]		
	cpicb.Day3 = arrDay[3]		
	cpicb.Day4 = arrDay[4]		
	cpicb.Day5 = arrDay[5]		
	cpicb.Day6 = arrDay[6]		
	cpicb.Day7 = arrDay[7]		
	cpicb.Day8 = arrDay[8]		
	cpicb.Day9 = arrDay[9]		
	cpicb.Penalty0 = arrPenalty[0]
	cpicb.Penalty1 = arrPenalty[1]
	cpicb.Penalty2 = arrPenalty[2]
	cpicb.Penalty3 = arrPenalty[3]
	cpicb.Penalty4 = arrPenalty[4]
	cpicb.Penalty5 = arrPenalty[5]
	cpicb.Penalty6 = arrPenalty[6]
	cpicb.Penalty7 = arrPenalty[7]
	cpicb.Penalty8 = arrPenalty[8]
	cpicb.Penalty9 = arrPenalty[9]
	mode$ = "c"
	if not(Rcpicb) let mode$ = "a"
	Rcpicb = fileupdatecpicbtbl(e$,CHcpicb,mode$,Rcpicb,cpicb.)
	if Rcpicb < 0
		message$="Error writing record: "+str$(Rcpicb)+"!"
		returnStatus = 0
	end if
Return

! 
! 
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end