! >>> Program 103a
!
! description Customer Printout, Condensed Format
!
! loadsave -w -n 100,10 -o prog/dxport/103a.dl4 src/103a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 16, 2003  10:26:36
Rem /w/papermaster/r2002//usr/acct/rce/work/devl/mx1/mx103a.src (univ2) [rce] {41928}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX103A         customer printout  (condensed)
Rem Author:        ???          (xx/xx/xxxx)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Window On 
!
Dim tmp$[1500],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
!
Dim 1%,C0,C2[2],SLSMSORT
Dim 2%,C1[12],V2[1],X1,X2
Dim 3%,V1[1],R2,R[4],E,V3[1]
Dim 3%,C4[5],C12[0],ORDAMT,URECFLAG,PCTR,J1,V9[1],4%,CREDAVAIL
Dim K1$[30],K9$[30],S1$[118],K4$[4]
Dim A$[30],A1$[142],A2$[30],C1$[1],D$[8],F$[35],A3$[30]
Dim K3$[30],CK$[30],M$[6],N$[30]
Dim T9$[26],X$[10],Z1$[25],2%
Dim RETVAL$[512],MSGTXT$[75],Z2$[2]
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
X2 = Spc(5)
F$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
Read #1,88,1808;F$;
Ropen #3,F$
Read #1,88,1824;F$;
Ropen #4,F$
B$ = " ",B$
Read #1,3;N$;
Mat Read #1,3,164;D$;
M$ = "########"
V1[0] = 99
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
If Err 0 Gosub ERR_TRAP
L9 = 60 \ If J8 Let L9 = 19
!
! dx add xport reporting code
DXSetup:
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"103a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("begcust",A$) ! starting cusotmer
call dxget("endcust",A2$) ! ending customer
call dxget("sort",tmp$) \ if tmp$="" let SLSMSORT=0 else SLSMSORT=1 ! sort by salesman
!  dx end
!
! starting & ending customer
J1=A$ \ A$=J1 using "######"
if A2$="" let A2$="999999"
X2=A2$ \ A2$=X2 using "######"
if J1<0 or J1>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
if X2<J1 or X2>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
! sort by salesman
If SLSMSORT = 1 Let CHAN = 9 Else Let CHAN = 3

!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!
! - L_900: Rem "=================================== get ranges
! - Call "progdflt","103A","",77,RETVAL$
! - Gosub L_7500
! - FINALQ: Rem "
! - Print @0,22;'CL';"Enter #:field to edit  P: print  R: reselect all  S: save defaults  E: exit ";
! - Input Len 16384 + 1;""Z1$
! - Call String(1,Z1$)
! - Print @0,22;'CL';
! - If Z1$ = "E" Goto OUTEND
! - If Z1$ = "S"
! - ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
! -   Input ""Z2$ \ Call String(1,Z2$)
! -   If Z2$ = "" Print @0,22;'CL'; \ Goto FINALQ
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "Progdfltw","103A","",77,RETVAL$,URECFLAG
! -   Goto FINALQ
! - End If 
! - If Z1$ = "R"
! -   For LOOP_ = 1 To 2
! -     CHOICE = LOOP_
! -     Gosub MAKE_CHOICE
! -   Next LOOP_
! -   Goto FINALQ
! - End If 
! - If Z1$ = "P" Goto L_990
! - If Z1$ = "E" Goto OUTEND
! - CHOICE = Z1$
! - Gosub MAKE_CHOICE
! - Goto FINALQ
! - SELECT_CUSTOMER: Rem select starting & ending customer range
! - CUST_LOOP: Rem
! - J5$ = "Please enter the Starting Customer Code maximum 999999"
! - J0$ = "3 00 630 5"
! - J1 = A$
! - Gosub L_7000
! - A$ = J1 Using "######"
! - J5$ = "Please enter the Ending  Customer Code maximum 999999"
! - J0$ = "3 00 650 5"
! - J1 = A2$
! - Gosub L_7000
! - A2$ = J1 Using "######"
! - If A$ > A2$
! -   J7$ = "Ending value must be Greater than or Equal to starting value!"
! -   Gosub ISERRMSG
! -   Goto CUST_LOOP
! - End If 
! - RETVAL$[1,6] = A$[1,6]
! - RETVAL$[7,12] = A2$[1,6]
! - Return 
! - SELECT_SORT: Rem should we sort by salesman?
! - SLSM_SORT: Rem
! - J5$ = "Please Enter Y or N"
! - J0$ = "6 00 13007"
! - J1 = SLSMSORT
! - Gosub L_7000
! - If J1 <> 1 If J1 <> 0 Goto SLSM_SORT
! - SLSMSORT = J1
! - RETVAL$[13,13] = SLSMSORT Using "#"
! - If SLSMSORT = 1 Let CHAN = 9 Else Let CHAN = 3
! - Return 
! - MAKE_CHOICE: Rem WHAT FIELD DO WE WANT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On CHOICE Gosub SELECT_CUSTOMER,SELECT_SORT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
L_990: Rem let's start to run
! - Window Off 
If CHAN = 3 Goto L_1500
! - Print @0,22;'CE';"Sorting...please wait";
K1$ = " ",K1$;K1$ = A$
Search #3,2,1;K1$,R[4],E 
If Not(E) Goto L_1025
L_1020: Search #3,3,1;K1$,R[4],E
If E Goto L_1500
L_1025: If K1$ > A2$ Goto L_1500
Mat Read #3,R[4],142;C1
K9$ = " ",K9$;K9$[1,3] = C1[2] Using "###";K9$[4,10] = K1$
Search #9,4,1;K9$,R[4],E 
If E Let e$ = "syserrorfile 103a sortfile mode (m)=4 keyno (k)=1 r=",R[4]," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1020
!
L_1500:
V9[1] = 0
V9[0] = 60
! - Print @0,22;"PRINTING...please wait";
! - If L9 < 30 Print 'CS';
! - Signal 3,0
!
if J8 ! dx xml headings
  !
  if SLSMSORT let tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$ else tmp$=""
  tmp$=tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$,"ADDRESS",fdel$
  tmp$=tmp$,"CITY",fdel$,"STATE",fdel$,"ZIP CODE",fdel$
  tmp$=tmp$,"CAT",fdel$,"S/C",fdel$,"TERMS",fdel$,"TAX",fdel$
  tmp$=tmp$,"CREDIT LIMIT",fdel$,"CREDIT AVAIL",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
CK$ = ""
If CHAN = 3 Let K3$ = A$ Else Let K3$ = " ",K3$
Search #CHAN,2,1;K3$,V1,V2 
If Not(V2) Goto L_2035
L_2030: 
Search #CHAN,3,1;K3$,V1,V2 
If V2 Goto L_9100
If CHAN = 3 If K3$ > A2$ Goto L_9100
!
! - Rem {begin srcdevl/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
!
K4$ = K3$[1,3]," "
L_2035: 
If CHAN = 9 
  Search #4,2,1;K4$,V3,V2 
  If V2=0 Mat Read #4,V3;S1$; else S1$[1,30]="SALESMAN NOT FOUND",Blank$
  if CK$ If CK$[1,3] <> K3$[1,3] Let V9[0] = 100 \ Gosub L_5800
endif
R2 = V1
Gosub L_4000
Gosub L_5800
Gosub L_5000
CK$[1,3] = K3$[1,3]
Goto L_2030
!
L_4000: Rem READ CUSTOMER RECORD
Mat Read #3,R2;A1$;
Mat Read #3,R2,142;C1;
Mat Read #3,R2,194;C2;
Read #3,R2,208;C0;
Mat Read #3,R2,210;C4;
Mat Read #3,R2,348;A3$;
Mat Read #3,R2,412;ORDAMT;
Mat Read #3,R2,668;C12;
Return 
!
L_5000: Rem
J$ = C1[1] Using M$
J1$ = C2[1] Using "####"
J2$ = C1[9] Using " ###"
If J8 ! dx xml
  if SLSMSORT ! by salesman
    tmp$=K3$[1,3],fdel$,rtrim$(S1$[1,30]),fdel$
  else
    tmp$=""
  endif
  tmp$=tmp$,J$,fdel$,rtrim$(A1$[31,60]),fdel$
  tmp$=tmp$,rtrim$(A1$[61,90]),fdel$,rtrim$(A1$[121,135]),fdel$
  tmp$=tmp$,A1$[136,137],fdel$,A3$[1,10],fdel$
  tmp$=tmp$,C1[9] using "###",fdel$
  tmp$=tmp$,C0 using "###",fdel$
  tmp$=tmp$,C2[0] using "###",fdel$
  tmp$=tmp$,C2[1] using "####",fdel$
  tmp$=tmp$,C12[0] Using "##,###,###,###.##",fdel$
  CREDAVAIL = C12[0] - (C4[0] + C4[2] + C4[3] + C4[4] + C4[5] + ORDAMT) + C4[1]
  tmp$=tmp$,CREDAVAIL Using "--,---,---,--#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
PRINT #0;J$; TAB 7;A1$[31,57];A1$[61,85];A1$[91,107];A1$[121,131];A1$[136,137];" ";A3$[1,10];
PRINT #0; USING "###"; TAB 100;C1[9];
PRINT #0; USING "###"; TAB 100;C0;
PRINT #0; USING " ##"; TAB 100;C2[0];
PRINT #0;USING " ####";C2[1];
PRINT #0; USING " -------#";C12[0];
CREDAVAIL = C12[0] - (C4[0] + C4[2] + C4[3] + C4[4] + C4[5] + ORDAMT) + C4[1]
PRINT #0; USING " -------#";CREDAVAIL
Return 
!
L_5800: Rem NEW PAGE ROUTINE
if J8 return ! dx xml
!
V9[0] = V9[0] + 1
If V9[0] < L9 Return 
If V9[1] = 0 Goto L_5880
! - If L9 > 30 Goto L_5870
! - Input "\15\PRESS <CR> TO CONTINUE "F$
! - Print 'CS'
L_5870: Print #0;"\14\";
L_5880: V9[0] = 5
V9[1] = V9[1] + 1
T9$ = "" \ Call Time(T9$)
Print #0; Tab Int(66 - Len(N$) / 2);N$
Print #0;"\15\";"- 103A -"; Tab 10;"DATE"; Tab 15;T9$;
Print #0; Tab 57;"CUSTOMER MASTER FILE";
Print #0; Tab 105;"PAGE # "; Tab 113;V9[1];"\15\";
Print #0;" "
If CHAN = 9 Print #0;"SALESMAN #:";K3$[1,3];" , ";S1$[1,30]
Print #0;" "
PRINT #0;"CUSTOMER NAME"; TAB 34;"ADDRESS 1"; TAB 59;"ADDRESS 2"; TAB 76;"CITY";
PRINT #0; TAB 90;"ZIP";
PRINT #0; TAB 99;"CAT S/C TRM TAX";
PRINT #0; TAB 117;"CREDIT   CREDIT";
PRINT #0;"\15\"; TAB 118;"LIMIT    AVAIL";
Print #0;"\15\";
Return 
!
! - L_7000: Rem "=========================================== data input routine
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
! - L_7500: Rem "========================================== screen
! - Print 'CS'
! - Print @0,0;"-MX103A-";@25,0;"CUSTOMER PRINTOUT (CONDENSED)"
! - Print @30,2;'BR';"STARTING";'ER';@50,2;'BR';"ENDING";'ER';
! - Print @1,5;" 1> CUSTOMER CODE: "
! - Print @1,7;" 2> Sort by Salesman ? "
! - If RETVAL$[1,5] = "@@@@@"
! -   RETVAL$[1,6] = "     0"
! -   RETVAL$[7,12] = "999999"
! -   RETVAL$[13,13] = "0"
! -   Call "Progdfltw","103A","",77,RETVAL$,0
! - End If 
! - A$ = RETVAL$[1,6]
! - A2$ = RETVAL$[7,12]
! - SLSMSORT = RETVAL$[13,13]
! - If SLSMSORT = 1 Let CHAN = 9 Else Let CHAN = 3
! - Print @30,5;A$;
! - Print @50,5;A2$
! - If SLSMSORT = 1 Print @30,7;"Y" Else Print @30,7;"N";
! - Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
! - L_9010: 
! - Print 'CS'
! - Close 
! - Window Off 
! - Chain "MX000"
! 
L_9100: Rem NO MORE
! - If L9 < 30 Goto L_9140
if J8=0 Print #0;"\15\\15\\15\-- END --"
Goto OUTEND
! - L_9140: Input "\15\PRESS <CR> TO EXIT "F$
! - Goto OUTEND
! - Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
