! >>> Program 390a
!
! description Purchasing P.O. Expediting Report (Sort & Print)
!
! loadsave -w -n 100,10 -o prog/dxport/390a.dl4 src/390a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem  PO390A - PURCHASE ORDER EXPEDITING REPORT
Rem
Rem AUTHOR: HORWITZ SPECS - JUL 30, 1992
!
Declare Intrinsic Sub DateToJulian,Logic,String,Time
! - Option Default Dialect IRIS1
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8,N1,N1$,N2
!
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[500],tmp1$[300],tmp2$[300]
dim tmpvdr$[200],tmpprod$[200],tmpwh$[200],tmppo$[200]
dim Blank$[50] \ Blank$=" ",Blank$
!
dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],J4$[60]
Dim P$[156],V1$[264],PUNIT$[4],W1$[32],C$[142],A5$[60]
Dim P0$[66]
Dim 1%,L1[5],PH4[3],L3[3],H4[2],P1[1],W1[2]
Dim 1%,PWHS[100]
Dim 2%,B[24],D1[6],L2[2],PH0[5],H0[12],H5[16],C1[12]
Dim 2%,P2[2],PH3[4],PUNIT
Dim 3%,A3[4],M1[17],W3[24],AMOUNT,UWORK[20]
Dim 3%,PL3[6],L7[12],P3[4],A1[7]
Dim P9$[50]
Dim J$[40],J1$[30],J2$[20],J3$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,E2,E3,X3,T9[20]
Dim K1$[50],K2$[50],K3$[50],K6$[50],X$[20],T9$[26]
Dim SPRDK$[20],VNDK$[20],PRDWK$[40],POLK$[40],POHK$[40]
Dim SOLK$[30],SOHK$[30],CUSTK$[30],LOTK$[50],HLDK$[20]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Rem OPEN FILES
For J = 2 To 13
  Read J1
  If J1 = -1 Goto L830
  Read #1,88,J1;J$[1,16];
  Ropen #J,J$
L830: Next J
Data "1792","2400","1120","1728","1744","2432","2416","-1","1888","1840","1808","2528"
Mat Read #1,0,100;J8$;
Read #1,3;J1$;
Mat Read #1,19,50;P9$;
J9 = 64 \ If J8 Let J9 = 20
!
Rem GET RANGES
K2$ = N1$[1,12] \ K1$ = K2$
K3$ = N1$[13,24]
If J2 If Not(J8) Print #0;"\14\";
J1 = 90 \ J2 = 0
J2$ = J8$[7,8],J8$[1,2],J8$[4,5] !GET TODAYS DATE FOR AGING
Call DateToJulian(1,J2$,J$)
E3 = J$ !!JULIAN DATE DDDDD
!
! *** Sort Section
Rem SORT IN BUYER/VENDOR/ITEM ORDER
! - Print @0,23;'CL';"SORTING, PLEASE WAIT . . ." \ Signal 3,0
J4$ = " ",J4$
L1120: Search #9,3,1;J4$,R1,E
If E Goto L1200
Search #9,5,1;J4$,R1,E
If E Let e$ = "syserrorfile 390 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \ error 10000
Goto L1120
!
L1200: Rem THRU PROD FOR VENDOR, GET BUYER
Search #2,2,1;k1$,R1,E
if not(e) goto fndfrst
L1210: Search #2,3,1;K1$,R1,E
If E = 2 Goto L1800
fndfrst: ! found 1st prod
If K1$[1,Len(K3$)] > K3$ Goto L1800
Mat Read #2,R1,156;B;
V9 = B[24] \ Gosub L1225
Goto L1300
!
L1225: J2$ = " ",J2$;J2$ = V9 Using "######"
Search #3,2,1;J2$,R3,E
If Not(E)
  Mat Read #3,R3,576;A5$
  Mat Read #3,R3,264;D1;
  Mat Read #3,R3,0;V1$;
Else 
  V1$ = " ",V1$
End If 
K6$ = " ",K6$;K6$[1,12] = K1$[1,12];K6$[13,14] = N1[5] Using "##"
Search #6,2,1;K6$,R6,E
If Not(E)
  Mat Read #6,R6,32;W1;
Else 
  W1[2] = 0 ! "no sprodwhse rec, set buyer =0
End If 
Return 
!
L1300: Rem BUILD SORTKEY
Gosub L1350 \ if errflag Goto L1400
J4$ = " ",J4$;J4$[1,4] = W1[2] Using "####"
J4$[5,10] = V9 Using "######"
J4$[11] = K1$[1,12];WHS1 = 0;PRNT = 0
E = 0;R2 = R1
Search #9,4,1;J4$,R2,E
If E Let e$ = "syserrorfile 390 sortfile mode (m)=4 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",J4$ \ error 10000
Goto L1400 
!
L1350: Rem SELECT CHECK
errflag=1
If W1[2] < N1[1] Return 
If W1[2] > N1[2] Return 
If V9 < N1[3] Return 
If V9 > N1[4] Return 
errflag=0
Return 
!
L1400: Rem THRU PO'S FOR ACTUAL VENDOR/BUYER
PRNT = 9;WHS1 = 0
Gosub L3200
L1415: If PFLG = 0 Goto L1210
V9 = PH3[3]
Gosub L1225
Gosub L1350 \ if errflag Goto L1460
J4$ = " ",J4$;J4$[1,4] = W1[2] Using "####"
J4$[5,10] = V9 Using "######"
J4$[11] = K1$[1,12]
E = 0;R2 = R1
Search #9,4,1;J4$,R2,E
L1460: Gosub L3210
Rem
Goto L1415
!
! *** Process Section
L1800: Rem DONE SORTING
!
if J8 ! dx xml headings
  !
  tmp$="BUYER",fdel$,"VENDOR",fdel$,"VENDOR NAME",fdel$
  tmp$=tmp$,"PHONE #",fdel$,"CONTACT",fdel$
  tmp$=tmp$,"ITEM #",fdel$,"DESCRIPTION",fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"VENDOR ITEM",fdel$,"UM",fdel$
  tmp$=tmp$,"WH",fdel$,"LEVELS",fdel$,"QTY ON HAND",fdel$
  tmp$=tmp$,"SAFETY STOCK",fdel$,"P.O.#",fdel$
  tmp$=tmp$,"P.O. DUE IN",fdel$,"DAYS LATE",fdel$
  tmp$=tmp$,"TOT QTY ON P.O.",fdel$,"QTY REC ON P.O.",fdel$
  tmp$=tmp$,"QTY REM ON P.O.",fdel$
  tmp$=tmp$,"CUST",fdel$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"CUST QTY NEEDED",fdel$,"CUST ORDER #",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,22;'CE';"PRINTING, PLEASE WAIT . . ." \ Signal 3,0
! - If Err 0 Gosub L9600
! - If J8 Print 'CS';
P$=" ",P$
K1$ = " ",K1$
K3$ = "}}}}}}"
L2000: Search #9,3,1;K1$,R1,E
If E Goto L_9100
If P$[1,1] = "" Let BYR = K1$[1,4]
If P$[1,1] = "" Let VNDR = K1$[5,10]
If P$[1,1] = "" Let HLDK$ = K1$[11]
Mat Read #2,R1,0;P$;
Mat Read #2,R1,156;B;
Mat Read #2,R1,256;A; \ Mat Read #2,R1,460;A1;
Mat Read #2,R1,512;PFU1;
PUNIT = PFU1[10] \ If N2[1] = 1 Let PUNIT = PFU1[8]
Mat Read #2,R1,554;PFU2;
! - If Not(J8) Print @0,22;'CL';"SEARCHING ITEM ";P$[140,151] \ Signal 3,0
PUNIT$ = "ERR " \ If PUNIT > 0 Read #5,PUNIT,10;PUNIT$;
Gosub L2500 \ Goto L2190
For F = 1 To 99
  if PWHS[F] = 0 Goto L2185
  FLG1 = 0;FLG2 = 0;FLG3 = 0;FLG4 = 0;PRNT = 0
  QFLG = 0;PFLG = 0;OFLG = 0;T9[1] = 0
  If F < N1[5] Goto L2185
  If F > N1[6] Goto L2185
  Gosub L3000 !!SPRODLOT
  WHS = F !!SET WHSE
  If P9$[33,33] = "Y" Gosub L3100 !PRODWHSE
  If QFLG If T9[1] < A1[4] Let FLG4 = 4
  Gosub L3200
  If QFLG = 0 If PFLG = 0 Goto L2095 !!CAN'T HAVE B/O'S WITHOUT SPRODLOTS
  Gosub L3300
L2095: 
  X2 = K1$[5,10]
  If N2[0] = 0 If X2 <> B[24] Let QFLG = 0;FLG1 = 0;FLG2 = 0;FLG4 = 0;OFLG = 0
  Rem ^^^^^^  ONLY FLG3 IF NOT PRIMARY VENDOR
  If FLG1 = 0 If FLG2 = 0 If FLG3 = 0 If FLG4 = 0 Goto L2180 !!NO FLAGS SET
  !"cct185775 (what about multiples?? ie: 1,3 or 2,4 etc) and wants 3-4? both will FAIL!
  
  ! so we are looking at which flags are wanted
	!IF FLG1 ! =1
	!   IF FLG1<N1[12] LFAIL=1 ! GOTO L2180 ! s=>1
	!   IF FLG1>N1[13] LFAIL=1 ! GOTO L2180 ! e<=1
    !Endif
    !IF FLG2 ! =2
    !   IF FLG2<N1[12] LFAIL=1 ! GOTO L2180
	!   IF FLG2>N1[13] LFAIL=1 ! GOTO L2180
    !ENDIF
    !IF FLG3 ! =3
    !   IF FLG3<N1[12] LFAIL=1 ! GOTO L2180
	!   IF FLG3>N1[13] LFAIL=1 ! GOTO L2180
   !ENDIF
   !IF FLG4 ! =4
   !   IF FLG4<N1[12] LFAIL=1 ! GOTO L2180
!	  IF FLG4>N1[13] LFAIL=1 ! GOTO L2180
   !ENDIF
   !iF n1[12]>=1 AND N1[13]<=5 ! want range
	   LFAIL=1 ! fails as default
	   if n1[12]=4 and flg4 let LFail=0
	   if n1[12]=3 and N1[13]>3 and (flg3 or flg4) let LFail=0
	   if n1[12]=2 and N1[13]>2 and (flg2 or flg3) let LFail=0
	   if n1[12]=2 and N1[13]>3 and (flg2 or flg3 or flg4) let LFail=0
	   if n1[12]=1 and N1[13]>1 and (flg1 or flg2) let LFail=0
	   if n1[12]=1 and N1[13]>2 and (flg1 or flg2 or flg3) let LFAIL=0
	   if n1[12]=1 and N1[13]>3 and (flg1 or flg2 or flg3 or flg4) let LFail=0
	   if n1[13]=1 and flg1 let LFail=0 ! flg2 or flg3 or flg4 let LFail=1
	   if N1[13]=2 and flg2 let LFail=0 ! flg3 or flg4 let LFail=1
	   if N1[13]=3 and flg3 let LFail=0 ! flg4 let LFail=1
	   if N1[13]=4 and flg4 let LFail=0 ! 
	  if LFAIL GOTO L2180 ! one/all checks failed - bypass
  !enDIF
  PRNT = 99 !!LET THEM KNOW TO PRINT NOW
  V9 = K1$[5,10]
  Gosub L1225
  If W1[2] = 0 Let W1[2] = K1$[1,4]
  X2 = K1$[1,4] \ If X2 <> BYR Let J1 = 99
  X2 = K1$[5,10] \ If X2 <> VNDR
    If (J1 + 5) > J9 Let J1 = 90 Else Gosub L5880
    P9 = 1 \ Gosub L5800
  End If 
  J3$ = K1$[11] \ If J3$[1,12] <> HLDK$[1,12] Gosub L6000
  BYR = K1$[1,4];VNDR = K1$[5,10];HLDK$ = K1$[11]
  P9 = 0 \ Gosub L5800
  Gosub L5000 \ P9 = 0
  If PFLG<>0
	Gosub L3200
	Gosub L5050
  else
	if j8<>0  ! browser option
		gosub L5050br: !
	endif
  endif
  If OFLG<>0
	Gosub L3300 
	Gosub L5150
  else
	if j8<>0 
		gosub L5150br
	endif
  endif
  If PFLG=0 and OFLG=0 Goto L2170
  if J8=0 Print #0;""
  Gosub L5800
  GOTO L2170
L2160:  ! 
  If PFLG<>0
	Gosub L3210 
	Gosub L5050
  !else
	!	if j8<>0  ! browser option
	!	gosub L5050br: !
	!endif
  endif
  If OFLG<>0
	Gosub L3310
	Gosub L5150
  !else
!	if j8<>0
!		gosub L5150br
!	endif
 endif

L2170: 
if J8=0 Print #0;"" \ Gosub L5800
!If PFLG <> 0 Or OFLG <> 0 Goto L2160
L2180: If PRNT if J8=0 Print #0;"\15\" \ J1 = J1 + 2
L2185: Next F
L2190: F = 0;WHS = 0 !!;BYR=K1$[1,4];VNDR=K1$[5,10];HLDK$=K1$[11]
Goto L2000
L2500: Rem GET ALL WHSES
For X = 1 To 99 
  PWHS[X] = 0
Next X
WHS1 = 0
Gosub L3000
Rem IF P9$[33,33]="Y" GOSUB 3100
Gosub L3200
Gosub L3300
WHS1 = 9
FLG1 = 0;FLG2 = 0;FLG3 = 0;FLG4 = 0;PRNT = 0
For X = 1 To 99
  If PWHS[X] Return 1
Next X
Return 
!
L3000: Rem
LOTK$ = " ",LOTK$;LOTK$[1,12] = P$[140,151];LOTK$[13,14] = F Using "##"
L3010: Search #13,3,2;LOTK$,R13,E 
If E = 2 Goto L3080
If LOTK$[1,12] <> P$[140,151] Goto L3080
Mat Read #13,R13,66;P1;
If WHS1 If P1 <> F Goto L3080
Mat Read #13,R13,70;P2;
Mat Read #13,R13,82;P3;
T9 = P3 - P3[1]
If P2[1] = 0 Let X3 = 0 \ Goto L3055
J2$ = P2[1] Using "&&&&&&" \ Call DateToJulian(1,J2$,X$,E)
E2 = X$ \ X3 = E3 - E2
L3055: If T9 <= 0 If X3 >= 30 Let QFLG = 2;FLG2 = 2;PWHS[P1] = 1
If T9 <= 0 If P3[4] Let QFLG = 1;FLG1 = 1;PWHS[P1] = 1
T9[1] = T9[1] + T9
QFLG = 9 !GOT 1
Goto L3010
L3080: Rem
If T9[1] > 0 If FLG2 = 2 Let FLG2 = 0 !!NOT ZERO STOCK
If QFLG = 2 Let FLG2 = 2
If QFLG = 1 Let FLG1 = 1
Return 
!
L3100: Rem PRODWHSE
PRDWK$ = " ",PRDWK$;PRDWK$ = P$[140,151];PRDWK$[13] = WHS Using "##"
Search #6,2,1;PRDWK$,R6,E 
If E = 1 Goto L3190
Mat Read #6,R6,0;W1$;
Mat Read #6,R6,78;W3;
Rem MOVE INTO PROD FIELDS
If W1$[13,16] <> "    " Let P$[93,112] = W1$[13,32]
If W3[7] Let A1[4] = W3[7]
L3190: Return 
!
L3200: Rem GET PO
POLK$ = " ",POLK$;POLK$[1,6] = R1 Using "######"
L3210: Search #7,3,2;POLK$,R7,E 
If E = 2 Goto L3290
X2 = POLK$[1,6] \ If X2 <> R1 Goto L3290
Mat Read #7,R7,0;L1; \ If WHS1 If L1[1] If L1[1] <> WHS Goto L3210
If Int(L1[0]) = 3 Goto L3210 !CLOSED
If L1[0] > 10 Goto L3210 !bypass debit memos
Call Logic(1,2 ^ 0,L1[3],NONSTOCK) \ If NONSTOCK Goto L3210
PWHS = L1[1]
Mat Read #7,R7,12;L2;
Mat Read #7,R7,24;PL3;
If PL3[3] >= PL3[2] Goto L3210 !ALL REC'D
If Not(PL3[2]) If Not(PL3[3]) Goto L3210 ! QTY'S ?
X2 = L2[2]
Rem HEAD
Mat Read #8,PL3,0;PH0;
Mat Read #8,PL3,222;PH3;
If PRNT <> 9 Let X9 = K1$[5,10] \ If X9 <> PH3[3] Goto L3210 !!WRONG VENDOR
Mat Read #8,PL3,242;PH4;
If WHS1 If Not(L1[1]) If PH4[1] If PH4[1] <> WHS Goto L3210
If PH4[0] = 1 Or PH4[0] = 5 Goto L3210 !!NO DIRECTS?
If PWHS = 0 If PH4[1] Let PWHS = PH4[1]
If X2 = 0 Let X2 = PH0[4]
If PWHS = 0 Goto L3210 ! NO WHS
L2[2] = X2;PFLG = 9
If X2 = 0 Let X3 = 0 \ Goto L3284
J2$ = X2 Using "&&&&&&" \ Call DateToJulian(1,J2$,X$)
E2 = X$ \ X3 = E3 - E2
L3284: 
If X3 >= N1[7] Let FLG3 = 3 \ PWHS[PWHS] = 1
If PRNT If X3 >= N1[7] Return 
If PRNT Let PFLG = 0
Goto L3210
L3290: 
If PRNT Let PFLG = 0 !!NO MORE
Return 
!
L3300: Rem ORDER LINES
SOLK$ = " ",SOLK$;SOLK$[1,6] = R1 Using "######"
L3310: Search #10,3,2;SOLK$,R10,E 
If E = 2 Goto L3490
X2 = SOLK$[1,6] \ If X2 <> R1 Goto L3490
Mat Read #10,R10,0;L2;
If L2[0] <> 11 Goto L3310 !!NOT AN ORDER
X2 = SOLK$[1,6] \ If X2 <> R1 Goto L3490
Mat Read #10,R10,8;L3; \ If L3[0] <> 0 Goto L3310
Mat Read #10,R10,168;L7;
SOHK$ = " ",SOHK$;SOHK$[3,8] = L2[1] Using "######"
For X = 1 To 4 \ SOHK$[1,2] = X Using "##"
  Search #11,2,1;SOHK$,R11,E \ If Not(E) Goto L3380
Next X
Goto L3310
L3380: Rem OKAY
Mat Read #11,R11,0;H0;
Mat Read #11,R11,78;H4;
If WHS1 If H4[2] <> WHS Goto L3310
Mat Read #11,R11,104;H5;
If L7[3] Let PWHS[H4[2]] = 1
If T9[1] <= 0 If L7[3] Let FLG1 = 1
OFLG = 9 ! GOT 1 ORDER
If WHS1 = 0 Goto L3310
Rem GET CUST NAME
CUSTK$ = " ",CUSTK$;CUSTK$ = H0[4] Using "######"
Search #12,2,1;CUSTK$,R12,E 
If E = 1 Goto L3480
Mat Read #12,R12,0;C$;
Return 
L3480: C$ = " ",C$;C$[31] = "CUSTOMER NOT FOUND!"
Return 
L3490: If PRNT Let OFLG = 0
Return
!
L5000: Rem PRINT LINE
if J8 ! dx xml, warehouse line
  tmpwh$=WHS Using "##",fdel$
  tmp1$=""
  If FLG1 let tmp1$=FLG1 Using "#,"
  If FLG2 let tmp1$=tmp1$,FLG2 Using "#,"
  If FLG3 let tmp1$=tmp1$,FLG3 Using "#,"
  If FLG4 let tmp1$=tmp1$,FLG4 Using "#"
  if tmp1$[len(tmp1$)]="," let tmp1$=tmp1$[1,len(tmp1$)-1]
  tmpwh$=tmpwh$,tmp1$,fdel$    ! whse
  CNVTA = T9[1] \ Gosub L6100 \ UWORK[0] = AMOUNT 
  tmpwh$=tmpwh$,UWORK[0] Using "------#",fdel$	  ! levels
  CNVTA = A1[4] \ Gosub L6100 \ UWORK[1] = AMOUNT
  tmpwh$=tmpwh$,UWORK[1] Using "######",fdel$  ! safety stock
  return 
endif
!
Print #0; Using "##"; Tab 3;WHS;
Print #0; Tab 6;
If FLG1 Print #0; Using "#";FLG1;",";
If FLG2 Print #0; Using "#";FLG2;",";
If FLG3 Print #0; Using "#";FLG3;",";
If FLG4 Print #0; Using "#";FLG4;
CNVTA = T9[1] \ Gosub L6100 \ UWORK[0] = AMOUNT
Print #0; Using "------#"; Tab 15;UWORK[0];
CNVTA = A1[4] \ Gosub L6100 \ UWORK[1] = AMOUNT
Print #0; Using "######"; Tab 23;UWORK[1];
Return 
!
L5050br: ! for browser when no po info
if j8<>0  ! browser option
	! set to zero
	ph0[2]=0
	x$="00/00/00"
	x3=0
	uwork[2]=0;uwork[3]=0;uwork[4]=0
	tmppo$=PH0[2] Using "######",fdel$
	tmppo$=tmppo$,X$[1,8],fdel$
	tmppo$=tmppo$,X3 Using "####",fdel$
	!CNVTA = PL3[2] \ Gosub L6100 \ UWORK[2] = AMOUNT
	tmppo$=tmppo$,UWORK[2] Using "#######",fdel$
	!CNVTA = PL3[3] \ Gosub L6100 \ UWORK[3] = AMOUNT
	tmppo$=tmppo$,UWORK[3] Using "#######",fdel$
	!UWORK[4] = UWORK[2] - UWORK[3] \ If UWORK[4] < 0 Let UWORK[4] = 0
	tmppo$=tmppo$,UWORK[4] Using "#######",fdel$	! need to space out the data
endif
Return

L5050: Rem PO DETAIL
if J8 ! dx xml, po line
  tmppo$=PH0[2] Using "######",fdel$
  X2 = L2[2] \ Gosub L7700
  tmppo$=tmppo$,X$[1,8],fdel$
  tmppo$=tmppo$,X3 Using "####",fdel$
  CNVTA = PL3[2] \ Gosub L6100 \ UWORK[2] = AMOUNT
  tmppo$=tmppo$,UWORK[2] Using "#######",fdel$
  CNVTA = PL3[3] \ Gosub L6100 \ UWORK[3] = AMOUNT
  tmppo$=tmppo$,UWORK[3] Using "#######",fdel$
  UWORK[4] = UWORK[2] - UWORK[3] \ If UWORK[4] < 0 Let UWORK[4] = 0
  tmppo$=tmppo$,UWORK[4] Using "#######",fdel$
  return
endif
!
Print #0; Using "######"; Tab 30;PH0[2];
X2 = L2[2] \ Gosub L7700
Print #0; Tab 37;X$[1,8];
Print #0; Using "####"; Tab 46;X3;
CNVTA = PL3[2] \ Gosub L6100 \ UWORK[2] = AMOUNT
Print #0; Using "#######"; Tab 51;UWORK[2];
CNVTA = PL3[3] \ Gosub L6100 \ UWORK[3] = AMOUNT
Print #0; Using "#######"; Tab 59;UWORK[3];
UWORK[4] = UWORK[2] - UWORK[3] \ If UWORK[4] < 0 Let UWORK[4] = 0
Print #0; Using "#######"; Tab 67;UWORK[4];
Return 
!

L5150br: Rem ORDER LINES
if J8<>0 ! dx xml
  H0[4]=0
  C$=" ",C$
  UWORK[5]=0
  H0[7]=0
  tmp$=tmpvdr$,tmpprod$,tmpwh$,tmppo$
  tmp$=tmp$,H0[4] Using "######",fdel$
  tmp$=tmp$,C$[31,45],fdel$
  CNVTA = L7[3] + L7[4] \ Gosub L6100 \ UWORK[5] = AMOUNT
  tmp$=tmp$,UWORK[5] Using "########",fdel$
  tmp$=tmp$,H0[7] Using "######",fdel$ 
  !
  call addtostr(e$,rstr$,tmp$+rdel$)  
end if
RETURN

L5150: Rem ORDER LINES
if J8 ! dx xml
  tmp$=tmpvdr$,tmpprod$,tmpwh$,tmppo$
  tmp$=tmp$,H0[4] Using "######",fdel$
  tmp$=tmp$,C$[31,45],fdel$
  CNVTA = L7[3] + L7[4] \ Gosub L6100 \ UWORK[5] = AMOUNT
  tmp$=tmp$,UWORK[5] Using "########",fdel$
  tmp$=tmp$,H0[7] Using "######",fdel$ 
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Print #0; Using "######"; Tab 84;H0[4];
Print #0; Tab 91;C$[31,45]; !! 15 CHARS OF NAME
CNVTA = L7[3] + L7[4] \ Gosub L6100 \ UWORK[5] = AMOUNT
Print #0; Using "########"; Tab 107;UWORK[5];
Print #0; Using "######"; Tab 116;H0[7];
Return 
!
L5800: Rem HEADER
if J8 ! dx xml, buyer and vendor
  tmpvdr$=W1[2] using "###",fdel$
  tmpvdr$=tmpvdr$,V9 Using "######",fdel$,rtrim$(V1$[1,30]),fdel$
  tmpvdr$=tmpvdr$,rtrim$(A5$[1,30])
  if A3[4] let tmpvdr$=tmpvdr$," EXT. ",A3[4] Using "####",fdel$ else tmpvdr$=tmpvdr$,fdel$
  tmpvdr$=tmpvdr$,rtrim$(V1$[129,148]),fdel$
  goto PrintHeaderExit ! dx xml
endif
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 3
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 390 - ";T9$;
Print #0; Tab 50;"PURCHASE ORDER EXPEDITING REPORT"
Print #0;"\15\"; \ If J2 > 1 Goto L5875
Print #0; Tab 5;"LEVEL KEY: 1-ZERO STOCK WITH CUSTOMER BACKORDERS"
Print #0; Tab 16;"2-ZERO STOCK FOR AT LEAST THIRTY DAYS"
Print #0; Tab 16;"3-PURCHASE ORDER OVERDUE"
Print #0; Tab 16;"4-DEPLETING SAFETY STOCK"
Print #0;"" \ J1 = J1 + 5
L5875: Print #0; Tab 3;"BUYER: ";W1[2]
L5880: Print #0;""
Print #0; Using "######"; Tab 3;"VENDOR # ";V9;
Print #0; Tab 20;"VENDOR: ";V1$[1,30]
Print #0; Tab 20;"PHONE # ";A5$[1,30];
Print #0; Using "####"; Tab 59;"EXT. ";A3[4];
Print #0; Tab 80;"CONTACT: ";V1$[129,148]
Print #0;""
!
PrintHeaderExit:
J1 = J1 + 5
If P9 Goto L5990 !WILL DO  6000
If P9 = 0 If PFLG = 0 If OFLG = 0 Goto L5990
If J3$[1,12] = HLDK$[1,12] Gosub L6015 !!PRINT  HEADINGS
L5990: Return 
!
L6000: Rem ITEM HEADER
P9 = 1 \ If (J1 + 5) > J9 Let J1 = 90
Gosub L5800
L6015: 
if J8 ! dx xml, product line
  tmpprod$=P$[140,151],fdel$,rtrim$(P$[9,38]),fdel$
  If P9$[26,26] = "Y" let tmpprod$=tmpprod$,rtrim$(P$[63,92]),fdel$
  tmpprod$=tmpprod$,rtrim$(P$[93,112]),fdel$,PUNIT$,fdel$
  goto PrintItemHeaderExit ! dx xml
endif
!
Print #0; Tab 3;"ITEM # ";P$[140,151];
Print #0; Tab 23;"DESCRIPTION: ";P$[9,38];
Print #0; Tab 68;"VENDOR ITEM # ";P$[93,112]; Tab 95;"U/M ";PUNIT$
If P9$[26,26] = "Y" Print #0; Tab 36;P$[63,92] \ J1 = J1 + 1
If J3$[1,12] = HLDK$[1,12] Goto L6080 !!BYPASS HEADINGS
Print #0; Tab 17;"QTY"; Tab 23;"SAFETY"; Tab 39;"P.O."; Tab 46;"DAYS";
Print #0; Tab 51;"TOT QTY"; Tab 59;"QTY REC"; Tab 67;"QTY REM";
Print #0; Tab 75;"NEW EXPT"; Tab 107;"CUST QTY"; Tab 118;"CUST" \ J1 = J1 + 1
Print #0; Tab 3;"WH"; Tab 6;"LEVEL(S)"; Tab 15;"ON HAND"; Tab 23;"STOCK";
Print #0; Tab 30;"P.O. #"; Tab 38;"DUE IN"; Tab 46;"LATE";
Print #0; Tab 51;"ON P.O."; Tab 59;"ON P.O."; Tab 67;"ON P.O.";
Print #0; Tab 75;"DUE DATE"; Tab 84;"CUST #"; Tab 91;"CUSTOMER NAME";
Print #0; Tab 108;"NEEDED"; Tab 116;"ORDER #" \ J1 = J1 + 1
L6080: Print #0;""
!
PrintItemHeaderExit:
J1 = J1 + 1
P9 = 0 
Return 
!
L6100: Rem CONVERSION (ALL QTY TO P.O. U/M)
CNVTU[0] = 0;CNVTU[1] = PUNIT;CNVTU[2] = 1
Gosub L20000
Return 
!
L7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
L_9100: Rem END OF THIS RANGE
! - If J8 Print @0,23;"PRESS <CR> TO END:  ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
BYR = 0;VNDR = 0;HLDK$ = " ",HLDK$
Goto OUTEND
!
L20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992) 
If CNVTU[2] = 3 Goto L20050 ! "um window
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L20160 ! "going to same units
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L20160 ! "lot
If CNVTU[2] = 0 Goto L20050 !!THIS TESTS IF VALID CONVERSION  
If Not(CNVTA) Let AMOUNT = 0 \ Goto L20160 ! "none there
If L3 Let AMOUNT = CNVTA \ Goto L20160 ! "non stocks  
L20050: goto L20120 ! - was If Spc(4) > 1280 Goto L20120 ! "unibasic 5+
Rem "======= unibasic <5 logic
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L20160 ! "um window
L20080: Signal 2,X1,AMOUNT,FLAG \ rem ! - If X1 = -1 Let E = 0 \ Gosub L9580
! - If X1 <> Spc(6) Goto L20080
If CNVTU[2] = 0 Goto L20160 !!TEST IF VALID CONVERSION
! - If FLAG Let E = FLAG \ Gosub L9580
Goto L20160
L20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L20160 !!TEST IF VALID CONVERSION
! - If FLAG Let E = FLAG \ Gosub L9580
AMOUNT = CNVTA
L20160: Return 
!
ERR_TRAP: Rem  *ERROR ROUTINE  (ESCAPE TRAP)    V3.0  9/91 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
