! >>> Program mx208brk5
!
! description Price Amalgamation 
!
! loadsave -w -n 100,10 -o prog/dxport/mx208brk5.dl4 src/mx208brk5.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX208BRK5 - CALC BRACKET PRICE WITH BREAK TABLES
Rem
Rem   FOR UNIBASIC 5+
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN  6, 2004  15:50:25
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx2/mx208brk5.src (univ2) [txc] {50550}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! 
! FROM WHAT I'VE SEEN - THIS IS ONLY CALLED FROM PROGRAM MX201WT
!  for PRICE AMALGAMATION - to calculate 10 bracket prices
!  as price does not calc prices on amalgamate=Y - only matrix price
!
! file passed/opened in mx201wt = break table
Declare Intrinsic Sub InpBuf,String
!Option Default Dialect IRIS1

Enter PFU1[],PFU2[],A[],CNVTU[],CNVTA,FLAG,B[],L7[],ORDWT,C4[],C3[],W3[],ch_brktbl
If Err 0 Gosub ERR_TRAP
Dim 1%,B3,M5[3],M8,3%,B1[9,2],M7,UWORK[15],2%,M6[3],J1$[16],P9$[50]
Dim 1%,CHNL,CHNLFREE
Dim 3%,P60$[50]
Dim E$[500],Msg$[500],rstr$[1500]
Dim buttonlist$[5,50],nextlist$[5,100] !error handling variables
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
Mat Read #1,19,50;P9$;
Read #1,88,1712;J1$;
For CHNL = 99 To 1 Step -1
  Gosub CHNLFREE
  If CHNLFREE
    CH_SPRODMARK = CHNL
    CHNL = 1
  End If 
Next CHNL
Open #CH_SPRODMARK,J1$
Mat Read #1,60,50;P60$;
If Not(C4[3]) Goto L_8800
If C3 = 4 Let BRACKET = C3[1] \ Goto L_5700
If Not(B[22]) Goto L_8800
Mat Read #ch_brktbl,B[22];B1;
Read #ch_brktbl,B[22],200;B3; \ If B3 <> 2 Goto L_8800
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
CNVTA = Abs(L7[2]) \ Gosub L_20000 \ UWORK[5] = AMOUNT
For X0 = 9 To 0 Step -1
  X2 = Abs(B1[X0,0])
  If B1[X0,0] < 0 If ORDWT < Abs(B1[X0,0]) Goto L_4090
  If B1[X0,0] < 0 If ORDWT >= X2 Let BRACKET = X0 + 1 \ X0 = -99 \ Goto L_4090
  If B1[X0,0] >= 0 If UWORK[5] < B1[X0,0] Goto L_4090
  If B1[X0,0] >= 0 If UWORK[5] >= X2 Let BRACKET = X0 + 1 \ X0 = -99
L_4090: Next X0
L_5700: Rem CALC BRACKET PRICE
If C3 = 5 Let BRACKET = BRACKET + (C3[1])
L_5702: B4 = (BRACKET * 1000) - 1000 + C4[3]
If B4 < 0 Goto L_5785
Mat Read #CH_SPRODMARK,B4,0;M5;
Mat Read #CH_SPRODMARK,B4,10;M6;
If BRACKET > 1 If Not(M6[0]) Let BRACKET = BRACKET - 1 \ Goto L_5702
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2
CNVTA = C4[4] \ If P9$[32,32] = "Y" And W3[18] Let CNVTA = W3[18]
Gosub L_20000 \ M7 = AMOUNT
For M8 = 0 To 3
  If Not(M6[M8]) Goto L_5785
  If M5[M8] = 1 Let M7 = M7 + (M6[M8])
  If Not(M5[M8]) Let M7 = M7 + (M7 * (M6[M8] / 100))
  If M5[M8] = 2 Let M7 = (M7 / (100 - M6[M8])) * 100
Next M8
L_5785: Rem "round here
If P60$[18,18] = "Y" If PFU1[11] = -1 Let M7 = FNF(M7)
CNVTU[0] = PFU1[11];CNVTU[1] = 0;CNVTU[2] = 2
CNVTA = M7 \ Gosub L_20000 \ M7 = AMOUNT
L_8800: Rem "=============================== done
Close #CH_SPRODMARK
FLAG = X2;CNVTA = M7
End 
Stop 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
E = Chf(CHNL)
If Err 0 Gosub ERR_TRAP
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
L_20000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 2%,X1[9],Q0[1]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
BUNIT = 0
If CNVTU[2] <> 5 Goto L_20170
BUNIT = 1
CNVTU[2] = 1
Goto L_20180
L_20170: BUNIT = 0
L_20180: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,19,50;P9$;
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_20250,L_20350,L_20350,L_20640
Gosub ERR_SEARCH
L_20250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20330
  Next X1[2]
  FLAG = 1 \ Goto L_20650
L_20330: Next X1[1]
FLAG = 0 \ Goto L_20650
L_20350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20450
  Next CUNIT
  FLAG = 0 \ Goto L_20650
L_20450: If CUNIT = 0 Goto L_20530
L_20460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_20510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "Catch Weight Item
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20530: Next X1[1]
If CNVTU[2] <> 1 Goto L_20580
If BUNIT Goto L_20580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20580: If CNVTU[2] <> 2 Goto L_20630
If Not(CNVTU[1]) Goto L_20630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20630: FLAG = 0 \ Goto L_20650
L_20640: Rem
L_20650: Rem RETURN FROM MODES 0-2
Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
error 11000
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet_call.inc"
end