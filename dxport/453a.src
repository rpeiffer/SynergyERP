! >>> Program 453a
!
! description End of Period Detail Sales Tax Report
!
! loadsave -w -n 100,10 -o prog/dxport/453a.dl4 src/453a.src
!
! 1.0 04/10/2008 change
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 14, 2006  11:29:54
Rem /w2/papermaster/r2005//usr/acct/dek/work/r2005/mx/mx453a.src (univ2) [dek] {55517}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
External Lib "libgeneral.lib"                                       
Declare External Sub GetSession,AddToStr,SetOutPut,CreateNetStatus  
!! Option Default Dialect IRIS1
Rem MX453A - SALES TAX REPORT MTD DETAIL TAX BY LINE ITEMS
Rem AUTHOR: RJS 08/06/92
Rem LAST UPDATE: jcs 02/21/1997 - SORDFLEHHKEY uses Julian & Full Year
!
try
!
Com K2$[20],K3$[20],K4$[20],K5$[20]
COM 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
Rem {begin dim.rtn.input}
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim message$[50],webstr$[50]!
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9],OT19Part
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
dim 1%,tx9[1],2%,lvlpct,3%,sellqty,A5
dim 1%,s2[1]
Dim D1$[20],D2$[144],TX$[7],NTX$[7],FDT$[8],I$[4],BARMONTH$[6],EARMONTH$[6]
Dim K9$[50],K7$[50],Z1$[10],MSGTXT$[75]
Dim P61$[256],DFLTDATE$[4],YYMM$[4]
Dim 2%,A1,D3[8],H0[12],CTAXTYP,TAXTYP,COID,H5[7],MCODE[9],ARDATE
Dim 3%,STAXTYP,BILLEXFLAG,BARDATE,EARDATE
Dim 3%,A2[5],TX0[1],TX1[10],TX2[10],TAXABLE,NTAXABLE,TAX,T2[25],TOT[4],LTAX1
Dim 3%,L5[3],2%,L6[5],P60$[50]
Dim 4%,T9[30],T7[8,5],X4
DIM 4%,T0[8,5] ! tax code totals
Dim J8$[8],A1$[30],CP$[30]
Dim 1%,F,X1,TAX1[100],DTAX,HTAX,MTAX,FTAX,H4[2],MCTXBL[9],ARMNTH,tcb
Dim 2%,X2,S8,a6,3%,OREF[5]
Dim K1$[50],Custom_Customer$[30]
Dim 3%,J,X3,T8[20],LNS,MCHARGE[9,1],MISCCHGS_TAXED,MISCCHGS_NONTAXED
dim 3%,ftaxable,ftaxamt
dim 1%,l3[3],2%,l4[3],3%,l7[12],1%,un[2],1%,eun[2],3%,unf[6]
dim 3%
!!!! dx add xport reporting code
Dim tmp$[1500],tmp1$[300],tmp2$[300],tmp3$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
!call dxsave(0,"tmp/453asv.txt!")
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
TX$ = "TAXABLE"
NTX$ = "NON-TAX"
E = Spc(5) \ COID = IntCo ! Int((E - Int(E / 16384) * 16384) / 64)
J$ = "cntrl/cntrl"+Str$(COID)
For J = 2 To 10
  Read J1
  If J1=-1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "2176","1808","928","1136","1168","1184","1152","-1","1792"
! - Ropen #32,"4/SORDFLEHHKEY" + Str$(COID)
Read #1,3;CP$;
Mat Read #1,0,100;J8$;

!If Err 0 Let J8 = Spc(8)
J8 = 0 
try 
	J9 = Chf(0)
else
	j8=49
end try
!If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
Mat Read #1,60,50;P60$; 
Mat Read #1,61,0;P61$;
Mat Read #1,0,108;ARDATE;
Read #1,0,120;ARMNTH;
DFLTDATE$ = " ",DFLTDATE$ \ DFLTDATE$[1,2] = ARMNTH Using "&&"
X$ = ARDATE Using "&&&&&&"
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
tptc=0 \ if custom_customer$="HTBERRY" let tptc=1
if p61$[140,140]="Y" let tptc=1 ! custom_customer$="PIEDMONT"
! TPTC=1 ! TEST
DFLTDATE$[3] = X$[1,2]
K1 = 1
K2 = Chf(2) - 1
MAX = K2 \ K5 = 999999
DETAIL = 1
YYMM$ = " ",YYMM$ \ YYMM$ = DFLTDATE$[3,4] + DFLTDATE$[1,2]
X2 = YYMM$ \ Gosub L_7860
BARMONTH = X2
BARMONTH$ = BARMONTH Using "&&&&&&"
EARMONTH = BARMONTH
EARMONTH$ = BARMONTH$
J1 = 90;J2 = 0
!


Ropen #32,"4/SORDFLEHHKEY" + Str$(intCO)
!
!!!! dx add xport reporting code
call dxget("I0",tmp$) \ if tmp$<>"" let K1=tmp$ 
call dxget("I1",tmp$) \ if tmp$<>"" let K2=tmp$
call dxget("I2",tmp$) \ if tmp$="" let BARMONTH = DFLTDATE$ else BARMONTH = tmp$ 
call dxget("I3",tmp$) \ if tmp$="" let EARMONTH = DFLTDATE$ else EARMONTH = tmp$ 
call dxget("I4",tmp$) \ if tmp$<>"" let K4=tmp$ 
call dxget("I5",tmp$) \ if tmp$<>"" let K5=tmp$
call dxget("I6",tmp$) \ DETAIL=tmp$
!
!DETAIL = 1
BARMONTH$ = BARMONTH Using "&&&&" ! is mmyy
EARMONTH$ = EARMONTH Using "&&&&"
!
if K1<0 or K1>999999 let e$="Invalid starting tax zone, must be between 0 and ",999999 using "######","!" \ error 10000
if K1>K2 or K2>999999 let e$="Invalid ending tax zone, must be between stating tax zone and ",999999 using "######","!" \ error 10000
!
If BARMONTH < 100 or BARMONTH > 1299 let e$="Invalid starting A/R month-year, must be between 0100 and 1299!" \ error 10000
If EARMONTH < 100 or EARMONTH > 1299 let e$="Invalid ending A/R month-year, must be between 0100 and 1299!" \ error 10000
YYMM$ = " ",YYMM$ \ YYMM$ = BARMONTH$[3,4] + BARMONTH$[1,2] \ X2 = YYMM$ \ Gosub L_7860 \ BARMONTH = X2
YYMM$ = " ",YYMM$ \ YYMM$ = EARMONTH$[3,4] + EARMONTH$[1,2] \ X2 = YYMM$ \ Gosub L_7860 \ EARMONTH = X2 
If BARMONTH > EARMONTH let e$="Invalid ending A/R date, must be greater than starting A/R date!" \ error 10000
!
if K4<0 or K4>999999 let e$="Invalid starting reporting group, must be between 0 and 999999!" \ error 10000
if K4>K5 or K5>999999 let e$="Invalid ending reporting group, must be between starting reporting group and 999999!" \ error 10000
!
K2$ = K1
K3$ = K2
!K4$ = K4
!K5$ = K5
!
x$=barmonth$[3,4]+barmonth$[1,2] ! to YYMM
x2=X$ \ gosub L_7860
let barmonth=x2
BARMONTH$ = BARMONTH Using "&&&&&&"
x$=earmonth$[3,4]+earmonth$[1,2] ! to YYMM
x2=X$ \ gosub L_7860
let earmonth=x2
EARMONTH$ = EARMONTH Using "&&&&&&"
!!!! dx end
!!stop
!
IF J8<>0 AND DETAIL<>0
	let e$="Browser is only Available for Summary Option" \ error 10000
endif!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"453a",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if

If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 

!! Gosub DISPLAY_SCREEN
ASK_PROMPT: Rem
!! Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: !! Print  E: exit ";
!! Input ""Z1$ \ Call String(1,Z1$)
!! If Z1$ = "P" Goto PROCESS_LOOP
!! If Z1$ = "R" Goto SELECTION_LOOP
!! If Z1$ = "E" Goto OUTEND
!! SELECT_ = Z1$
!! Gosub MAKESELECTION
!! Goto ASK_PROMPT
!! SELECTION_LOOP: Rem go through all
!! For SELECT_ = 1 To 4
!!   Gosub MAKESELECTION
!! Next SELECT_
!! Goto ASK_PROMPT
!! MAKESELECTION: Rem
!! On SELECT_ Gosub SELECT1,SELECT2,SELECT3,SELECT4
!! Return 
!! DISPLAY_SCREEN: Rem GET RANGES
!! Print 'CS';"-MX453A -            DETAIL TAX REPORT"
!! Print @0,4;"THIS REPORT GOES THRU THE INVOICE HISTORY FILE TO GENERATE THE REPORT"
!! Print @0,5;"IF RUN IN DETAIL, THIS REPORT PRINTS EACH TAX CODE WITH EACH INVOICE"
!! Print @0,6;"THAT MAKES UP THE TAX FIGURE."
!! Print @20,7;"THIS CAN BE A VERY LENGTHY REPORT !!! "
!! Print @30,10;'BR';"STARTING";'ER';@50,10;'BR';"ENDING";'ER';
!! Print @0,12;" 1> TAX ZONE : "
!! Print @0,13;" 2> A/R DATE : "
!! Print @0,14;" 3> REPORTING GROUP : "
!! Print @0,15;" 4> Summary or Detail ?"
!! Print Using "######";@30,12;K1;@50,12;K2
!! Print @30,13;DFLTDATE$;@50,13;DFLTDATE$
!! Print Using "######";@30,14;K4;@50,14;K5
!! Print @30,15;"D"
!! Return 
!! SELECT1: Rem get taxzone
!! STARTING_ZONE: Rem
!! J5$ = "Please enter the Starting Tax Zone "
!! J0$ = "3 00063012" \ J1 = K1
!! Call "input",J1,J$,J0$,J1$,J4$,J5$
!! K1 = J$
!! ENDING_ZONE: Rem
!! J5$ = "Please enter the Ending Tax Zone "
!! J0$ = "3 00065012" \ J1 = K2
!! Call "input",J1,J$,J0$,J1$,J4$,J5$
!! K2 = J$
!! If K1 > K2
!!   Gosub BAD_RANGE
!!   Goto STARTING_ZONE
!! End If 
!! If K2 > MAX Let K2 = MAX
!! K2$ = K1 \ K3$ = K2
!! Return 
!! SELECT2: Rem ar range
!! STARTING_DATE: Rem
!! J5$ = "Please enter the Starting A/R month and year for the report MMYY"
!! J0$ = "3000043013" \ J1 = DFLTDATE$
!! Call "input",J1,J$,J0$,J1$,J4$,J5$

!! EARMONTH = J1
!! DFLTDATE$ = EARMONTH Using "&&&&"
!! BARMONTH$ = J1 Using "&&&&"
!! If BARMONTH$[1,2] < "01" If BARMONTH$[1,2] > "12" Goto STARTING_DATE
!! Print @30,13;BARMONTH$
!! YYMM$ = " ",YYMM$ \ YYMM$ = BARMONTH$[3,4] + BARMONTH$[1,2]
!! X2 = YYMM$ \ Gosub L_7860
!! BARMONTH = X2
!! BARMONTH$ = BARMONTH Using "&&&&&&"
!! 
!! ENDING_DATE: Rem
!! J5$ = "Please enter the Ending A/R month and year for the report MMYY"
!! J0$ = "3000045013" \ J1 = DFLTDATE$
!! Call "input",J1,J$,J0$,J1$,J4$,J5$
!! 
!! EARMONTH$ = J1 Using "&&&&"
!! If EARMONTH$[1,2] < "01" If EARMONTH$[1,2] > "12" Goto ENDING_DATE
!! !! Print @50,13;EARMONTH$
!! YYMM$ = " ",YYMM$ \ YYMM$ = EARMONTH$[3,4] + EARMONTH$[1,2]
!! X2 = YYMM$ \ Gosub L_7860
!! EARMONTH = X2
!! EARMONTH$ = EARMONTH Using "&&&&&&"
!! If BARMONTH > EARMONTH
!!   Gosub BAD_RANGE
!!   Goto STARTING_DATE
!! End If 
!! Return 
!! 
!! SELECT3: Rem get reporting group
!! !! STARTING_GROUP: Rem
!! J5$ = "Please enter the Starting Reporting Group "
!! J0$ = "3 00063014" \ J1 = K4
!! Call "input",J1,J$,J0$,J1$,J4$,J5$
!! K4 = J$ \ K4$ = K4
!! ENDING_GROUP: Rem
!! J5$ = "Please enter the Ending Reporting Group "
!! J0$ = "3 00065014" \ J1 = K5
!! Call "input",J1,J$,J0$,J1$,J4$,J5$
!! K5 = J$
!! If K4 > K5
!!   MSGTXT$ = "Ending value must be Greater than or Equal to Starting value! "
!!   Call "errmsg",MSGTXT$
!!   Goto STARTING_GROUP
!! End If 
!! K5$ = K5
!! Return 
!! SELECT4: Rem detail or summary
!! SUMMARYORDETAIL: Rem
!! J5$ = "See the report in Summary by Zone or in Detail by Zone (S/D) "
!! J0$ = "2 00013015" \ J1$ = "D"
!! Call "input",J1,J$,J0$,J1$,J4$,J5$
!! Call String(1,J$)
!! If J$ <> "S" If J$ <> "D" Goto SUMMARYORDETAIL
!! DETAIL = 0
!! If J$ = "D" Let DETAIL = 1
!! Return 
if J8
	tmp$="TAX CODE",fdel$
	tmp$=tmp$,"DESCRIPTION",fdel$
	tmp$=tmp$,"SALES TAX PERCENT",fdel$
	tmp$=tmp$,"REPORTING GROUP",fdel$
	If DETAIL 
		tmp$=tmp$,"CUST",fdel$
		tmp$=tmp$,"CUST NAME",fdel$
		tmp$=tmp$,"INVOICE",fdel$
	end if
	tmp$=tmp$,TX$," MERCH",fdel$
	tmp$=tmp$,TX$," FREIGHT",fdel$
	tmp$=tmp$,"DISC TKN"," BFR TAX",fdel$
	tmp$=tmp$,TX$," MSC&HDL",fdel$
	tmp$=tmp$,TX$," TOTAL",fdel$
	tmp$=tmp$,"TAX"," AMOUNT",fdel$
	tmp$=tmp$,"DISC TKN"," AFTR TAX",fdel$
	tmp$=tmp$,NTX$," MERCH",fdel$
	tmp$=tmp$,NTX$," FREIGHT",fdel$
	tmp$=tmp$,NTX$," MSC&HDL",fdel$
	tmp$=tmp$,NTX$," TOTAL",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
PROCESS_LOOP: Rem let's get going
!! Window Off 
K2$ = ""
!! Print @0,22;'CL';"Sorting, please wait . . . ";
K2$[1,6] = BARMONTH$
L_1320: 
Search #32,3,1;K2$,R[5],E 
If E = 2 Goto PRINTING_PHASE
!! If E Gosub ERR_SEARCH
CTR = CTR + 1 !!  \ If Not(Fra(CTR / 100)) Print @50,22;'CL';CTR;
If K2$[1,6] > EARMONTH$[1,6] Goto PRINTING_PHASE
Mat Read #5,R[5],0;H0; \ If Not(H0) Goto L_1320
Mat Read #5,R[5],104;H5;
Mat Read #5,R[5],512;OREF;
Mat Read #5,R[5],508;OT19Part;
If H5[7]=19 And OT19Part Goto L_1320: ! "only finals of ot19, not partials
Mat Read #6,OREF[5],8;T2;
Mat Read #8,OREF[4],178;STAXTYP;
If P61$[24,24] = "Y"
  Mat Read #8,OREF[4],184;BILLEXFLAG;
  If BILLEXFLAG Let H0[4] = H0[1]
End If 
FDT$ = T2[25] Using "&&&&&&&&"
Mat Read #5,R[5],78;H4;
Mat Read #5,R[5],104;H5;
If H4 < K1 Or H4 > K2 Goto L_1500
Read #2,H4,288;A6;
Read #2,h4,412;TCB; ! tax calc by
if tptc=0 let tcb=0 ! not used - not set
If TCB=1 or tcb=2 goto L_1500: ! "220549 if not PM calc - no print!
K9$ = " ",K9$
K9$[1,6] = A6 Using "######"
LET K9$[7,12]=H4[0] USING "######" ! tax code 2nd
LET K9$[13,18]=H0[4] USING "######" ! customer code 3rd
LET K9$[19,30]=K2$[7,18]  ! invoice status and number
R[9] = R[5]
Search #9,4,1;K9$,R[9],E !! \ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 453a sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \ error 10000
L_1500: Rem LINE ITEMS
If P60$[42,42] <> "Y" Goto L_1320
K7$ = " ",K7$ \ K7$[1,10] = K2$[9,18]
L_1515: Search #7,3,1;K7$,R[7],E \ If E = 2 Goto L_1320
!! If E Gosub ERR_SEARCH
If K7$[1,10] <> K2$[9,18] Goto L_1320
Mat Read #7,R[7],56;L6;
If Not(L6[5]) Let L6[5] = H4
If L6[5] < K1 Or L6[5] > K2 Goto L_1515
Read #2,L6[5],288;A6;
Read #2,L6[5],412;TCB; ! tax calc by
if tptc=0 let tcb=0 ! not used - not set
If TCB=1 or tcb=2 goto L_1515: ! only pm tax calc to print-220549
K9$ = " ",K9$
K9$[1,6] = A6 Using "######"
LET K9$[7,12]=L6[5] USING "######" ! tax code 2nd          
LET K9$[13,18]=H0[4] USING "######" ! customer code 3rd
LET K9$[19,30]=K2$[7,18]  ! invoice status and number  
Search #9,2,1;K9$,R[9],E \ If E = 1 Goto L_1600
!! If E Gosub ERR_SEARCH
!! If R[9] <> R[5] Gosub ERR_SEARCH
Goto L_1515
L_1600: R[9] = R[5] \ Search #9,4,1;K9$,R[9],E !! \ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 453a sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1515
PRINTING_PHASE: Rem let's go
!! Print @0,22;'CL';"Printing, please wait . . .  ";
!! If Err 0 Gosub ERR_ESCAPE
J1 = 90
K1 = 0 \ CUST = 0
K9$ = " ",k9$
!K6 = K4$
k9$=k4 using "######"
CTR = 0
PRINT_LOOP: Search #9,3,1;K9$,R[9],E
If E
  If DETAIL
	Gosub PRINT_TAXCODE_STUFF !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    Gosub PRINT_TAXCODE_TOTAL
  Else 
    Gosub PRINT_TAXCODE_STUFF
    Gosub PRINT_TAXCODE_TOTAL
  End If 
  Gosub PRINT_GRAND_TOTAL
  Goto ALMOST_OUT
End If 
CTR = CTR + 1 !! \ If Not(Fra(CTR / 100)) Print @50,22;'CL';CTR;
R[5] = R[9]
LET txgrp=K9$[1,6] \ K2=K9$[7,12]
! If K4 <> K6 Gosub L_3000
If Not(K1)
  k6=txgrp
  K1 = K2
  Gosub READ_TAX_REC
  if tptc=0 let tcb=0 ! not used - not set
	If TCB=1 or tcb=2 Goto Print_Loop: ! "220549 - only pm calc prints
  Gosub PRINT_HEADING
End If 
!IF txgrp<>K6 GOSUB L_3000: ! reporting group total
If K1 = K2 Goto L_2080
If DETAIL
  Gosub PRINT_TAXCODE_TOTAL
  If txgrp <> K6 Gosub L_3000 ! reporting group total  
  Gosub READ_TAX_REC
  if tptc=0 let tcb=0 ! not used - not set
	If TCB=1 or tcb=2 Goto Print_Loop: ! "220549 - only pm calc prints
  J1 = 90
  K1 = K2
  Gosub PRINT_HEADING
Else 
  LNS = 4
  For Y1 = 0 To 8
    If D3[Y1] Let LNS = LNS + 2
  Next Y1
  If J1 + LNS > J9 Let J1 = 90 \ Gosub PRINT_HEADING
  Gosub PRINT_TAXCODE_STUFF
  Gosub PRINT_TAXCODE_TOTAL
  If txgrp <> K6 Gosub L_3000 ! reporting group total  
  Gosub READ_TAX_REC
  if tptc=0 let tcb=0 ! not used - not set
	If TCB=1 OR TCB=2 Goto Print_Loop: ! "220549 - only pm calc prints
  K1 = K2
End If 
Gosub READ_TAX_REC
if tptc=0 let tcb=0 ! not used - not set
	If TCB=1 or TCB=2 Goto Print_Loop: ! "220549 - only pm calc prints
L_2080: Mat Read #5,R[5];H0; \ Mat Read #5,R[5],78;H4;
Mat Read #5,R[5],104;H5;
Mat Read #5,R[5],512;OREF;
If P61$[24,24] = "Y"
  Mat Read #8,OREF[4],184;BILLEXFLAG;
  If BILLEXFLAG = 99 Let H0[4] = H0[1]
End If 
Mat Read #6,OREF[5],8;T2; \ Mat Read #6,OREF[5],328;TOT;
Mat Read #6,OREF[5],168;MCODE; \ Mat Read #8,OREF[4],178;STAXTYP;
Mat Read #6,OREF[5],208;MCHARGE; \ Mat Read #6,OREF[5],358;MCTXBL;
If H0[0] = 31
  For X3 = 0 To 4 \ TOT[X3] = - TOT[X3] \ Next X3
  For X3 = 0 To 9 \ T2[X3] = - T2[X3] \ MCHARGE[X3,0] = - MCHARGE[X3,0] \ Next X3
End If 
If Not(CUST) Let CUST = H0[4] \ Gosub READ_CUSTOMER
If CUST <> H0[4] Gosub READ_CUSTOMER \ CUST = H0[4]
If STAXTYP Let TAXTYP = STAXTYP Else Let TAXTYP = CTAXTYP
Gosub CHK_FREIGHT
If K1 = H4 Gosub CHK_MISC_CHARGES
Gosub L_2500
If P60$[42,42] = "Y" Gosub CHK_TAX_BY_LINE
Gosub CALC_TOTALS
Gosub PRINT_DETAIL
Goto PRINT_LOOP
READ_CUSTOMER: Rem CUSTOMER
K1$ = H0[4] Using "######"
Search #3,2,1;K1$,R[3],E !! \ If E Gosub ERR_SEARCH
If Not(DETAIL) Return 
Mat Read #3,R[3],30;A1$; \ Read #3,R[3],498;CTAXTYP;
PRINT_CUST_NAME: 
If J8
	tmp2$=H0[4] Using "######",fdel$,rtrim$(A1$),fdel$
	tmp2=2
	!call addtostr(e$,rstr$,tmp$+rdel$)
	return
end if
Print #0; Using "######";H0[4];A1$
J1 = J1 + 1
Return 
L_2500: Rem get tax
let ftaxable=0
let ftaxamt=0
TAX = 0
If H4 <> K1 Return 
If P60$[42,42] <> "Y"
  TAX = T2[7]
  TX0[0] = T2[8]
  TX0[1] = T2[9]
Else 
  TAX = TOT[3]
End If 
If H5[7] = 6 Or H5[7] = 10
  TX1[4] = T2[3]
  TX1[7] = T2[6]
Else 
  If DTAX
    TX1[0] = T2[3]
  Else 
    TX1[4] = T2[3]
  End If 
  If HTAX
    TX1[3] = T2[6]
  Else 
    TX1[7] = T2[6]
  End If 
End If 
let ftaxable=0
let ftaxamt=0
IF FTAX<>0
	IF D1$[1,1]="+"
		LET TX1[2]=TX1[2]+T2[5]
		if t2[5]<>0
			LET FTAXABLE=T2[5]
			LET FTAXAMT=fnr(t2[5]*(D3[0])/100)
		endif
	ELSE
		if T2[8]<>0
			LET TX1[2]=T2[5]
		else
			let tx1[6]=t2[5]
		endif
	endif
Else 
  TX1[6] = T2[5]
End If 
TX1[1] = TX1[1] + MISCCHGS_TAXED
TX1[5] = TX1[5] + MISCCHGS_NONTAXED
TAXABLE = TX0[0] - TX1[0] + TX1[1] + TX1[2] + TX1[3]
NTAXABLE = TX0[1] + TX1[5] + TX1[6] + TX1[7]
Return 
CALC_TOTALS: Rem CALCULATE TOTALS
If TAXABLE + TAX + NTAXABLE = 0 Return 
T9[0] = T9[0] + TX0[0] \ T8[0] = T8[0] + TX0[0]
T9[1] = T9[1] + TX1[2] \ T8[1] = T8[1] + TX1[2]
T9[2] = T9[2] + TX1[0] \ T8[2] = T8[2] + TX1[0]
T9[3] = T9[3] + TX1[1] + TX1[3] \ T8[3] = T8[3] + TX1[1] + TX1[3]
T9[4] = T9[4] + TAXABLE \ T8[4] = T8[4] + TAXABLE
T9[5] = T9[5] + TAX \ T8[5] = T8[5] + TAX
T9[6] = T9[6] + TX0[1] \ T8[6] = T8[6] + TX0[1]
T9[7] = T9[7] + TX1[6] \ T8[7] = T8[7] + TX1[6]
T9[8] = T9[8] + TX1[5] + TX1[7] \ T8[8] = T8[8] + TX1[5] + TX1[7]
T9[9] = T9[9] + NTAXABLE \ T8[9] = T8[9] + NTAXABLE
T9[10] = T9[10] + TX1[4] \ T8[10] = T8[10] + TX1[4]
T9[20] = T9[20] + TX0[0]
T9[21] = T9[21] + TX1[2]
T9[22] = T9[22] + TX1[0]
T9[23] = T9[23] + TX1[1] + TX1[3]
T9[24] = T9[24] + TAXABLE
T9[25] = T9[25] + TAX
T9[26] = T9[26] + TX0[1]
T9[27] = T9[27] + TX1[6]
T9[28] = T9[28] + TX1[5] + TX1[7]
T9[29] = T9[29] + NTAXABLE
T9[30] = T9[30] + TX1[4]
Return 
L_2950: Rem ADD TO REPORTING GROUP BREAKDOWN TOTALS
T7[Y1,0] = T7[Y1,0] + TX0[0]
T7[Y1,1] = T7[Y1,1] + TX1[2]
T7[Y1,2] = T7[Y1,2] + TX1[0]
T7[Y1,3] = T7[Y1,3] + (TX1[1] + TX1[3])

if p60$[42,42]="Y" and (lvlflag-1)=y1 and lvlminflag<>0
	t0[y1,0]=t0[y1,0]+lvltaxable ! taxable merch
	t0[y1,4]=t0[y1,4]+lvltaxable+tx1[2]-tx1[0]+tx1[1]+tx1[3] ! total taxable
	t0[y1,5]=t0[y1,5]+lvltaxamt  ! tax amt
	t7[y1,4]=t7[y1,4]+lvltaxable
	t7[y1,4]=t7[y1,5]+lvltaxamt
else
	T7[Y1,4]=T7[Y1,4]+TAXABLE !taxable total
	if taxfactor<>0 T7[Y1,5]=T7[Y1,5]+FNR(TAX*D3[Y1]/TAXFACTOR) !tax amount by %
	t0[y1,0]=t0[y1,0]+tx0[0]! taxable merch
	t0[y1,4]=t0[y1,4]+tx0[0]+tx1[2]-tx1[0]+tx1[1]+tx1[3] ! total taxable
	if taxfactor<>0 t0[y1,5]=t0[y1,5]+ FNR(TAX*D3[Y1]/TAXFACTOR) ! tax amt
endif
t0[y1,1]=t0[y1,1]+tx1[2] ! taxable freight
t0[y1,2]=t0[y1,2]+tx1[0] ! taxable discount
t0[y1,3]=t0[y1,3]+tx1[1]+tx1[3] ! taxable misc and handling

Return 
L_3000: Rem REPORTING GROUP TOTAL PRINT
if j8 goto L_3100
Gosub PRINT_HEADING
Print #0;"\15\"; Tab 5;"REPORTING GROUP ";K6;"  ** TOTALS **"
Print #0; Using "----------#.##"; Tab 5;T9[20];
Print #0; Using "----------#.##"; Tab 28;T9[22];
Print #0; Using "------------#.##"; Tab 50;T9[24];
Print #0; Using "---------#.##"; Tab 73;T9[30];
Print #0; Using "--------#.##"; Tab 97;T9[27];
Print #0; Using "-----------#.##"; Tab 117;T9[29]
Print #0; Using "---------#.##"; Tab 18;T9[21];
Print #0; Using "---------#.##"; Tab 40;T9[23];
Print #0; Using "----------#.##"; Tab 62;T9[25];
Print #0; Using "----------#.##"; Tab 84;T9[26];
Print #0; Using "--------#.##"; Tab 108;T9[28];
Print #0;" "
Print #0;"\15\"
J1 = J1 + 2
Gosub L_3900

L_3100: For Y1 = 20 To 30
  T9[Y1] = 0
Next Y1
For Y1 = 0 To 8
  T7[Y1,0] = 0 \ T7[Y1,1] = 0 \ T7[Y1,2] = 0
  T7[Y1,3] = 0 \ T7[Y1,4] = 0 \ T7[Y1,5] = 0
Next Y1
LET K6=txgrp
Return 
!
L_3900: Rem RPT GROUP BREAKDOWN PRINT
If J8 return
X4 = 0
For Y1 = 0 To 8
  If Not(T7[Y1,5]) Goto L_3990
  Print #0;D2$[1 + (16 * Y1),16 + (16 * Y1)]
  Print #0; Using "---------#.##"; Tab 6;T7[Y1,0];
  Print #0; Using "------#.##";TAB 21;T7[Y1,1];
  Print #0; Using "------#.##";TAB 32;T7[Y1,2];
  Print #0; Using "------#.##";TAB 43;T7[Y1,3];
  Print #0; Using "--------#.##";TAB 54;T7[Y1,4];
  Print #0; Using "------#.##";TAB 66;T7[Y1,5]
  J1 = J1 + 2 \ X4 = X4 + T7[Y1,5]
L_3990: Next Y1
Print #0;" "
if x4<>0
	Print #0; Tab 49;"CHECK TOTAL";
	Print #0; Using "------#.##";TAB 66;X4
	Print #0;" "
	J1 = J1 + 3
else
	let j1=j1+1
endif
For Y1 = 0 To 8
  T7[Y1,0] = 0 \ T7[Y1,1] = 0 \ T7[Y1,2] = 0
  T7[Y1,3] = 0 \ T7[Y1,4] = 0 \ T7[Y1,5] = 0
Next Y1
Return 
!
PRINT_GRAND_TOTAL: Rem TOTAL !! Print FOR TAX CODE
If J8 return
L_4010: For Y1 = 20 To 30
  If T9[Y1] > 0 ! valid to print
    Gosub L_3000
    Goto L_4020
  End If 
Next Y1
L_4020: 
If J8 return
Gosub PRINT_HEADING
Print #0; Tab 1;"**   REPORT  TOTALS   **"
Print #0; Using "----------#.##"; Tab 5;T9[0];
Print #0; Using "----------#.##"; Tab 28;T9[2];
Print #0; Using "------------#.##"; Tab 50;T9[4];
Print #0; Using "---------#.##"; Tab 73;T9[10];
Print #0; Using "--------#.##"; Tab 97;T9[7];
Print #0; Using "-----------#.##"; Tab 117;T9[9]
Print #0; Using "---------#.##"; Tab 18;T9[1];
Print #0; Using "---------#.##"; Tab 40;T9[3];
Print #0; Using "----------#.##"; Tab 62;T9[5];
Print #0; Using "----------#.##"; Tab 84;T9[6];
Print #0; Using "--------#.##"; Tab 108;T9[8];
Print #0;""
Return 
!
PRINT_TAXCODE_TOTAL: Rem !! Print LINE
If J8 
    tmp1$=TRIM$(K1 Using "####"),fdel$,rtrim$(D1$[1,20]),fdel$
	tmp1$=tmp1$,TRIM$(A1 Using "###.###%"),fdel$,A6 using "######",fdel$
	tmp$=tmp1$,tmp2$
	if detail let tmp$=tmp$,fdel$ ! inv #
	tmp$=tmp$,trim$(T8[0] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[1] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[2] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[3] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[4] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[5] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[10] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[6] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[7] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[8] Using "--------#.##"),fdel$
	tmp$=tmp$,trim$(T8[9] Using "--------#.##"),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)

	For I = 0 to 8
		If D3[I]
			If D3[I] <> A1 
			    tmp1$=K1 Using "####",fdel$,rtrim$(D1$[1,20]),fdel$ ! TAX CODE & DESCRIPTION
				tmp1$=tmp1$,D3[I] Using "###.###%",fdel$,rtrim$(D2$[(I*16)+1,(I*16)+16]),fdel$ ! SALE TAX% & REPORTING GROUP
				!!call addtostr(e$,rstr$,tmp$+rdel$)
				tmp$=tmp1$,tmp2$
				if detail let tmp$=tmp$,fdel$ ! inv #
				tmp$=tmp$,trim$(T8[0] Using "-------#.##"),fdel$
				tmp$=tmp$,trim$(T8[1] Using "--------#.##"),fdel$
				tmp$=tmp$,trim$(T8[2] Using "--------#.##"),fdel$
				tmp$=tmp$,trim$(T8[3] Using "--------#.##"),fdel$
				tmp$=tmp$,trim$(T8[4] Using "--------#.##"),fdel$
				if a1
					let ftaxamt=0
					if i=0 and d1$[1,1]="+"
						let ftaxamt=fnr(t8[1]*d3[1]/100)
						let t8[5]=t8[5]-ftaxamt
						let t8[4]=t8[4]-t8[1]
						let t8[1]=0
						
					endif		
					tmp$=tmp$,TRIM$((FNR(T8[5] * D3[I] / A1)+ftaxamt) Using "-------#.##"),fdel$
				Else
					tmp$=tmp$,fdel$
				Endif
				!if d1$[1,1]="+"
				!	tmp$=tmp$,fdel$,fdel$,fdel$,fdel$,fdel$ ! to make 11
				!else
					tmp$=tmp$,trim$(T8[10] Using "--------#.##"),fdel$ ! DISC TKN AFTR TAX
					tmp$=tmp$,trim$(T8[6] Using "--------#.##"),fdel$ ! NON-TAX MERCH
					tmp$=tmp$,trim$(T8[7] Using "--------#.##"),fdel$ ! NON-TAX FREIGHT
					tmp$=tmp$,trim$(T8[8] Using "--------#.##"),fdel$ ! NON-TAX MSC&HDL
					tmp$=tmp$,trim$(T8[9] Using "--------#.##"),fdel$ ! non-tax total
				!endif
				call addtostr(e$,rstr$,tmp$+rdel$)
			else
				I = 9
			end if
		end if
	Next I
	For X3 = 0 To 10 \ T8[X3] = 0 \ Next X3
Return
end if

If DETAIL !if in detail
  LNS = 2
  For Y1 = 0 To 8
    If D3[Y1] Let LNS = LNS + 1
  Next Y1
  If J1 + LNS > J9 Let J1 = 90 \ Gosub PRINT_HEADING
  Print #0; Tab 1;D1$[1,20];"  ** TOTALS **"
  J1 = J1 + 1
End If 
!Print #0; Using "--------#.##"; Tab 7;T8[0];

!Print #0; Using "------#.##";T8[1];T8[2];T8[3];
!Print #0; Using "--------#.##";T8[4];
!Print #0; Using "-----#.##";T8[5];T8[10];
!Print #0; Using "-------#.##";T8[6];
!Print #0; Using "------#.##";T8[7];T8[8];
!Print #0; Using "-------#.##";T8[9]
Print #0; Using "--------#.##"; Tab 7;T8[0]; ! TAX Merch 12
Print #0; Using "------#.##";TAB 21; T8[1];  ! tax freight 10		 
PRINT #0; USING "------#.##";TAB 32; T8[2];  ! tax disc 10
PRINT #0; USING "------#.##";TAB 43 ; T8[3]; ! tax misc 10
Print #0; Using "--------#.##"; tab 54; T8[4]; ! tax total 12                
Print #0; Using "-----#.##";tab 67;T8[5]; ! tax amt 9	 
Print #0; Using "-----#.##"; tab 77;T8[10]; ! non-tax disc 9
Print #0; Using "-------#.##";Tab 87;T8[6]; ! non-tax merch 11                
Print #0; Using "------#.##";tab 99;T8[7];  ! non-tax freight 10	 
Print #0; Using "------#.##";tab 110;T8[8];  ! non-tax misc/hand 10	
Print #0; Using "-------#.##";tab 121;T8[9] ! non-tax total 10
J1 = J1 + 1
If D3[0] = A1 Goto L_4520
For ctr=0 to 8
	if d3[ctr]<>0 and d3[ctr]<>a1
		PRINT #0; USING "--------#.##"; TAB 7;t0[ctr,0]; ! taxable merch
		PRINT #0; USING "------#.##";tab 21;T0[ctr,1]; ! tax 
		PRINT #0; USING "------#.##";tab 32;T0[ctr,2];
		PRINT #0; USING "------#.##";tab 43;T0[ctr,3];
		PRINT #0; USING "-------#.##";tab 54;T0[ctr,4]; ! total taxable
		PRINT #0; USING "------#.##";tab 66;t0[ctr,5] ! tax amt
		LET J1=J1+1
	endif
next ctr



L_4520: Print #0;"\15\";
J1 = J1 + 1
For X3 = 0 To 10 \ T8[X3] = 0 \ Next X3
!FOR Y1=0 TO 8 ! reset rpt group breakdown totals
!	LET T7[Y1,0]=0 \ T7[Y1,1]=0 \ T7[Y1,2]=0
!	LET T7[Y1,3]=0 \ T7[Y1,4]=0 \ T7[Y1,5]=0
!NEXT Y1
! RESET TAX CODE LEVEL TOTALS
for y1=0 to 8
	for ctr=0 to 5
		let t0[y1,ctr]=0
	next ctr
next y1
Return 
READ_TAX_REC: Rem read tax file
Mat Read #2,K2,0;D1$;
Mat Read #2,K2,20;A1;
Mat Read #2,K2,24;A2;
MAT  READ #2,K2,66;A5;
Read #2,K2,72;D3[0];
Read #2,K2,76;D3[1];
Read #2,K2,80;D3[2];
Read #2,K2,84;D2$[1,48];
Read #2,K2,288;A6;
Read #2,K2,292;D3[3];
Read #2,K2,296;D3[4];
Read #2,K2,300;D3[5];
Read #2,K2,304;D3[6];
Read #2,K2,308;D3[7];
Read #2,K2,312;D3[8];
Read #2,K2,316;D2$[49,144];
mat read #2,k2,412;tcb; ! tax calc by
if tptc=0 let tcb=0
MAT READ #2,K2,444;TX9;
Return 
!
PRINT_TAXCODE_STUFF: Rem !! Print tax codes
If J8
	If Not(DETAIL)
		LNS = 4
		For Y1 = 0 To 8
			If D3[Y1] Let LNS = LNS + 2
		Next Y1
		If J1 + LNS > J9 Let J1 = 90 
	End If
	tmp1$=K1 Using "####",fdel$,rtrim$(D1$[1,20]),fdel$
	tmp1$=tmp1$,A1 Using "###.###%",fdel$,A6 using "######",fdel$
	if detail and RTrim$(tmp2$)="" 
		let tmp2$=fdel$,fdel$,fdel$ ! no cust/name/inv
		tmp2=3
	Endif
	!!call addtostr(e$,rstr$,tmp$+rdel$)
	For I = 0 to 8
		If D3[I]
			If D3[I] <> A1
				tmp1$=K1 Using "####",fdel$,rtrim$(D1$[1,20]),fdel$
				tmp1$=tmp1$,D3[I] Using "###.###%",fdel$,rtrim$(D2$[(I*16)+1,(I*16)+16]),fdel$
				!!call addtostr(e$,rstr$,tmp$+rdel$)
			end if
		end if
	Next I
	Return
End if

If J8 return
If Not(DETAIL)
  LNS = 4
  For Y1 = 0 To 8
    If D3[Y1] Let LNS = LNS + 2
  Next Y1
  If J1 + LNS > J9 Let J1 = 90 \ Gosub PRINT_HEADING
End If

Print #0; Using "####";K1;D1$[1,20];
Print #0; Using "###.###% ";A1;
Print #0;"  REPORTING GROUP: ";A6
J1 = J1 + 1
If Not(D3[0]) Goto L_4950
If D3[0] = A1 Goto L_4950
Print #0; Using "###.###%  "; Tab 5;D3[0];
Print #0;D2$[1,16]
J1 = J1 + 1
L_4950: If Not(D3[1]) Goto L_4975
If D3[1] = A1 Goto L_4975
Print #0; Using "###.###%  "; Tab 5;D3[1];
Print #0;D2$[17,32]
J1 = J1 + 1

L_4975: If Not(D3[2]) Goto L_4980
If D3[2] = A1 Goto L_4980
Print #0; Using "###.###%  "; Tab 5;D3[2];
Print #0;D2$[33,48]
J1 = J1 + 1

L_4980: If Not(D3[3]) Goto L_4982
If D3[3] = A1 Goto L_4982
Print #0; Using "###.###%  "; Tab 5;D3[3];
Print #0;D2$[49,64]
J1 = J1 + 1
L_4982: If Not(D3[4]) Goto L_4984
If D3[4] = A1 Goto L_4984
Print #0; Using "###.###%  "; Tab 5;D3[4];
Print #0;D2$[65,80]
J1 = J1 + 1
L_4984: If Not(D3[5]) Goto L_4986
If D3[5] = A1 Goto L_4986
Print #0; Using "###.###%  "; Tab 5;D3[5];
Print #0;D2$[81,96]
J1 = J1 + 1
L_4986: If Not(D3[6]) Goto L_4988
If D3[6] = A1 Goto L_4988
Print #0; Using "###.###%  "; Tab 5;D3[6];
Print #0;D2$[97,112]
J1 = J1 + 1
L_4988: If Not(D3[7]) Goto L_4990
If D3[7] = A1 Goto L_4990
Print #0; Using "###.###%  "; Tab 5;D3[7];
Print #0;D2$[113,128]
J1 = J1 + 1
L_4990: If Not(D3[8]) Goto L_4997
If D3[8] = A1 Goto L_4997
Print #0; Using "###.###%  "; Tab 5;D3[8];
Print #0;D2$[129,144]
J1 = J1 + 1
L_4997: Print #0;"" \ J1 = J1 + 1
Return 
!
!
PRINT_DETAIL: Rem !! Print LINE
If J8 ! browser total
	if not(detail) 
		gosub calc_summary_totals: ! need to total for summary
	endif
	If DETAIL
	If H0[0] = 30
	 tmp$=tmp1$,tmp2$,OREF[1] Using "########",fdel$
	 tmp2=tmp2+1
	Else 
	 tmp$=tmp1$,tmp2$,H0[7] Using "########",fdel$
	 tmp2=tmp2+1
	End If 
	if tmp2<3 
		let tmp$=tmp$,fdel$
		!tmp2$=tmp2$,fdel$
		tmp2=3
	Endif
	tmp3$=tmp$ ! retain 
	tmp$=tmp$,TX0[0] Using "-------#.##",fdel$
	tmp$=tmp$,TX1[2] Using "-------#.##",fdel$
	tmp$=tmp$,TX1[0] Using "-------#.##",fdel$
	tmp$=tmp$,TX1[1] + TX1[3] Using "-------#.##",fdel$
	tmp$=tmp$,TAXABLE Using "-------#.##",fdel$
	tmp$=tmp$,TAX Using "--------#.##",fdel$
	tmp$=tmp$,TX1[4] Using "-------#.##",fdel$
	tmp$=tmp$,TX0[1] Using "-------#.##",fdel$
	tmp$=tmp$,TX1[6] Using "-------#.##",fdel$
	tmp$=tmp$,TX1[5] + TX1[7] Using "-------#.##",fdel$
	tmp$=tmp$,NTAXABLE Using "-------#.##",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	let taxfactor=a1
	if p61$[42,42]="Y" and lvlminflag<>0 ! striping out tax % of lvl accepted
		let taxfactor=a1-lvlpct
		let tax=tax-lvltaxamt
	endif
	If D3[0]
		If D3[0] = A1
			Y1 = 0
			Gosub L_2950
			For X3 = 0 To 10 \ TX1[X3] = 0 \ Next X3
			For X3 = 0 To 1 \ TX0[X3] = 0 \ Next X3
			TAXABLE = 0 \ TAX = 0 \ NTAXABLE = 0
			Return
		End If 
		if TX1[0] Or TX1[1] Or TX1[2] Or TX1[3] Or TX1[4] Or TX1[5] Or TX1[6] Or TX1[7] Or TX0[0] Or TX0[1] 
		if a1
			if p60$[42,42]="Y" and lvlflag=1 and lvlminflag<>0
				tmp$=tmp$,FNR(lvltaxable) Using "-------#.##",fdel$
			else
				tmp$=tmp$,FNR(TX0[0]) Using "-------#.##",fdel$
			endif
			if d1$[1,1]<>"+"
				tmp$=tmp$,FNR(TX1[2]) Using "------#.##",fdel$
				
			else
				tmp$=tmp$,FNR(TX1[2]) Using "------#.##",fdel$
				let ftaxable=tx1[2]
				let taxable=taxable-tx1[2]
				let tx1[2]=0
				let tax=tax-ftaxamt
			endif		
			tmp$=tmp$,FNR(TX1[0] ) Using "------#.##",fdel$
			tmp$=tmp$,FNR((TX1[1] + TX1[3])) Using "------#.##",fdel$
			if p60$[42,42]="Y" and lvlflag=1 and lvlminflag<>0
				tmp$=tmp$,FNR(lvlTAXABLE) Using "-------#.##",fdel$
				tmp$=tmp$,FNR(lvlTAXamt) Using "------#.##",fdel$
			else
				if d1$[1,1]<>"+"
					tmp$=tmp$,FNR(TAXABLE) Using "-------#.##",fdel$
					tmp$=tmp$,FNR(TAX*(d3[0]/taxfactor)) Using "------#.##",fdel$
				else
					tmp$=tmp$,(FNR(TAXABLE)+ftaxable) Using "-------#.##",fdel$
					tmp$=tmp$,(FNR(TAX*(d3[0]/taxfactor))+ftaxamt) Using "------#.##",fdel$
	
					! add to breakdown totals
					let y1=0
					T7[Y1,1]=T7[Y1,1]+ftaxable !taxable freight               
					T7[Y1,4]=T7[Y1,4]+ftaxable !taxable total                
					T7[Y1,5]=T7[Y1,5]+ftaxamt !tax amount by %  
					T0[Y1,1]=T0[Y1,1]+FTAXABLE
					T0[Y1,4]=T0[Y1,4]+FTAXABLE
					T0[Y1,5]=T0[Y1,5]+ftaxamt
				endif
			endif
		Else
			tmp$=tmp3$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
		Endif
			tmp$=tmp$,fdel$,fdel$,fdel$,fdel$,fdel$ ! to make 12
			call addtostr(e$,rstr$,tmp$+rdel$)
			Y1 = 0
			Gosub L_2950
		else
			For X3 = 0 To 10 \ TX1[X3] = 0 \ Next X3
			For X3 = 0 To 1 \ TX0[X3] = 0 \ Next X3
			TAXABLE = 0 \ TAX = 0 \ NTAXABLE = 0
			return
		end if
	end if

	For I = 1 to 8
		If D3[I]
			If D3[I] = A1
			  Y1 = I
			  Gosub L_2950
				For X3 = 0 To 10 \ TX1[X3] = 0 \ Next X3
				For X3 = 0 To 1 \ TX0[X3] = 0 \ Next X3
				TAXABLE = 0 \ TAX = 0 \ NTAXABLE = 0
			  return
			End If 
			if a1
			tmp$=tmp3$,FNR(TX0[0] * D3[I] / A1) Using "-------#.##",fdel$
			tmp$=tmp$,FNR(TX1[2] * D3[I] / A1) Using "------#.##",fdel$
			tmp$=tmp$,FNR(TX1[0] * D3[I] / A1) Using "------#.##",fdel$
			tmp$=tmp$,FNR((TX1[1] + TX1[3]) * D3[I] / A1) Using "------#.##",fdel$
			tmp$=tmp$,FNR(TAXABLE * D3[I] / A1) Using "-------#.##",fdel$
			tmp$=tmp$,FNR(TAX * D3[I] / A1) Using "------#.##",fdel$
			Else
			tmp$=tmp3$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			tmp$=tmp$,fdel$
			Endif
			tmp$=tmp$,fdel$,fdel$,fdel$,fdel$,fdel$ ! ,fdel$ ! to make 12
			call addtostr(e$,rstr$,tmp$+rdel$)
			Y1 = I
			Gosub L_2950
		end if
	Next I
	End If
For X3 = 0 To 10 \ TX1[X3] = 0 \ Next X3
For X3 = 0 To 1 \ TX0[X3] = 0 \ Next X3
TAXABLE = 0 \ TAX = 0 \ NTAXABLE = 0
RETURN
END IF
If J8 return
if not(detail) ! need to total for summary
	gosub calc_summary_totals:
endif
If Not(DETAIL) Goto L_5430
For X = 0 To 7
  If TX1[X] Goto L_5010
Next X
If TX0[0] Or TX0[1] Goto L_5010
Goto L_5430
L_5010: Rem
LNS = 2
For Y1 = 0 To 8
  If D3[Y1] Let LNS = LNS + 1
Next Y1
If J1 + LNS > J9 Let J1 = 90 \ Gosub PRINT_HEADING \ Gosub PRINT_CUST_NAME
If H0[0] = 30
  Print #0; Using "########";OREF[1]; ! invoice
Else 
  Print #0; Using "########";h0[7]; ! ! credit memo OREF[0];
End If 
! entire tax code
Print #0; Using "-------#.##"; Tab 8;Tx0[0]; ! TAX Merch 12
Print #0; Using "------#.##";TAB 21; Tx1[2];  ! tax freight 10		 
PRINT #0; USING "------#.##";TAB 32; Tx1[0];  ! tax disc 10
PRINT #0; USING "------#.##";TAB 43 ;(tx1[1]+tx1[3]); ! tax misc 10
Print #0; Using "--------#.##"; tab 54; taxable; ! tax total 12
Print #0; Using "-----#.##";tab 67;tax; ! tax amt 9	 
Print #0; Using "-----#.##"; tab 77;Tx1[4]; ! non-tax disc 9
Print #0; Using "-------#.##";Tab 87;Tx0[1]; ! non-tax merch 11                
Print #0; Using "------#.##";tab 99;Tx1[6];  ! non-tax freight 10	 
Print #0; Using "------#.##";tab 110;(tx1[5]+tx1[7]);  ! non-tax misc/hand 10
Print #0; Using "-------#.##";tab 121;ntaxable ! non-tax total 10
J1 = J1 + 1
If D3[0] = A1
  Y1 = 0
  Gosub L_2950
  Goto L_5410
End If 
let taxfactor=a1
if p61$[42,42]="Y" and lvlminflag<>0 ! striping out tax % of lvl accepted
	let taxfactor=a1-lvlpct
	let tax=tax-lvltaxamt
endif
For X = 0 To 7
  If TX1[X] Goto L_5160
Next X
If TX0[0] Or TX0[1] Goto L_5160
Goto L_5410


L_5160: ! breakdown level 1
if not(d3[0]) goto prnt_levels:
if a1<>0
	if p60$[42,42]="Y" and lvlflag=1 and lvlminflag<>0
		print #0; "*Max*";
		PRINT #0; USING "-------#.## ";tab 8;lvltaxable;
	else
		PRINT #0; USING "-------#.## "; TAB 8;FNR(TX0[0]);
	endif
	if d1$[1,1]<>"+"
		PRINT #0; USING "------#.##";tab 21;FNR(TX1[2]);
	else
		PRINT #0; USING "------#.##";tab 21;FNR(TX1[2]);
		let ftaxable=tx1[2]
		let taxable=taxable-tx1[2]
		let tx1[2]=0
		let tax=tax-ftaxamt
	endif
	PRINT #0; USING "------#.##";tab 32;FNR(TX1[0]);
	PRINT #0; USING "------#.##";tab 43;FNR((TX1[1]+TX1[3]));
	! new stuff
	if p60$[42,42]="Y" and lvlflag=1 and lvlminflag<>0
			PRINT #0; USING "-------#.##";lvltaxable;
			PRINT #0; USING "------#.##";lvltaxamt
	else
		if d1$[1,1]<>"+"
			PRINT #0; USING "-------#.##";FNR(TAXABLE);
			PRINT #0; USING "------#.##";FNR(TAX*(d3[0]/taxfactor))
		else
			PRINT #0; USING "-------#.##";(FNR(TAXABLE)+ftaxable);
			PRINT #0; USING "------#.##";(FNR(TAX*D3[0]/taxfactor)+ftaxamt)
			! add to breakdown totals
			let y1=0
			T7[Y1,1]=T7[Y1,1]+ftaxable !taxable freight               
			T7[Y1,4]=T7[Y1,4]+ftaxable !taxable total                
			T7[Y1,5]=T7[Y1,5]+ftaxamt !tax amount by %  
			T0[Y1,1]=T0[Y1,1]+FTAXABLE
			T0[Y1,4]=T0[Y1,4]+FTAXABLE
			T0[Y1,5]=T0[Y1,5]+ftaxamt
		endif
	endif
else
	print #0;""
endif
LET J1=J1+1 \ Y1=0
Gosub L_2950
! loop
! level 2 thru 9
prnt_levels: ! print tax break levels
for ctr=1 to 8
	if d3[ctr]=a1
		let y1=ctr
		gosub L_2950:
	else
		if d3[ctr]<>0 and a1<>0
			if p60$[42,42]="Y" and lvlflag=(ctr+1) and lvlminflag<>0
				print #0; "*Max*";
				PRINT #0; USING "-------#.##";tab 8;lvltaxable;
			else
				PRINT #0; USING "-------#.## "; TAB 8;FNR(TX0[0]);! *D3[ctr]/A1);
			endif
			PRINT #0; USING "------#.##";tab 21;FNR(TX1[2]);! *D3[ctr]/A1);
			PRINT #0; USING "------#.##"; tab 32; FNR(TX1[0]);! *D3[ctr]/A1);
			PRINT #0; USING "------#.## ";tab 43; FNR((TX1[1]+TX1[3])); !*D3[ctr]/A1);
			if p60$[42,42]="Y" and lvlflag=(ctr+1) and lvlminflag<>0 
				 PRINT #0; USING "-------#.##";((lvltaxable+tx1[2]-tx1[0]+tx1[1]+tx1[2]));  
				 PRINT #0; USING "------#.##";lvltaxamt     
			else                                               
				PRINT #0; USING "-------#.##";FNR(TAXABLE); ! *D3[ctr]/A1);
				PRINT #0; USING "------#.##";FNR(TAX*D3[ctr]/taxfactor)
			endif
			LET J1=J1+1
			LET Y1=ctr
			GOSUB L_2950: ! "add to reporting group breakdown subtotal
		endif
	endif
next ctr
goto L_5410:	 ! bypass the rest of the code 	
L_5410: Print #0;"\15\";
J1 = J1 + 1
L_5430: For X3 = 0 To 10 \ TX1[X3] = 0 \ Next X3
For X3 = 0 To 1 \ TX0[X3] = 0 \ Next X3
TAXABLE = 0 \ TAX = 0 \ NTAXABLE = 0
Return 
!
!
PRINT_HEADING: Rem HEADINGS ROUTINE
If J8 
	Gosub PRINT_TAXCODE_STUFF
	return
end if
J1 = J1 + 1 \ If J1 < J9 Return 
If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ !!\  Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(CP$) / 2);CP$; Tab 120;"PAGE";J2
Print #0;" -MX453A- ";Msc$(3);
Print #0; Tab 50;"S A L E S   T A X   R E P O R T"
If DETAIL Print #0; Tab 40;"DETAIL "; Else Print #0; Tab 40;"SUMMARY ";
Print #0; Tab 50;BARMONTH$[5,6];"/";BARMONTH$[1,4];" to ";EARMONTH$[5,6];"/";EARMONTH$[1,4]
Print #0;"\15\";
Print #0; Tab 12;TX$; Tab 24;TX$; Tab 34;"DISC TKN"; Tab 46;TX$;
Print #0; Tab 59;TX$; Tab 73;"TAX"; Tab 78;"DISC TKN"; Tab 91;NTX$; Tab 103;NTX$;
Print #0; Tab 113;NTX$; Tab 125;NTX$
Print #0; Tab 14;"MERCH"; Tab 24;"FREIGHT"; Tab 35;"BFR TAX"; Tab 46;
Print #0;"MSC&HDL"; Tab 61;"TOTAL"; Tab 70;"AMOUNT"; Tab 78;"AFTR TAX"; Tab 92;"MERCH";
Print #0; Tab 103;"FREIGHT"; Tab 113;"MSC&HDL"; Tab 126;"TOTAL"
Print #0;"\15\";
If DETAIL Gosub PRINT_TAXCODE_STUFF
Return 
CHK_TAX_BY_LINE: Rem CALCULATE LINE ITEM TAX
let lvlflg=0
let lvlpct=0
let lvltaxamt=0
let lvltaxable=0
let lvlminflag=0
LET K7$=" ",K7$ \ LET K7$[1,10]=K9$[21,30]
L_6010: Search #7,3,1;K7$,R[7],E \ If E = 2 Goto L_6095
!! If E Gosub ERR_SEARCH
If K7$[1,10] <> K9$[21,30] Goto L_6095
Mat Read #7,R[7],56;L6;
If Not(L6[5]) 
	If H4 <> K2 Goto L_6010
endif
If L6[5]<>0
	If L6[5] <> K2 Goto L_6010
endif
mat read #7,r[7],256;s2;
if s2[0]=3 goto L_6010: ! message line bypass
Mat Read #7,R[7],508;LTAX1; \ Mat Read #7,R[7],32;L5;
If H0[0] = 31 Let LTAX1 = - LTAX1 \ L5[3] = - L5[3]
TAX = TAX + LTAX1
If L6[5]<>0
  TX0[0] = TX0[0] + L5[3]
  TAXABLE = TAXABLE + L5[3]
Else 
  TX0[1] = TX0[1] + L5[3]
  NTAXABLE = NTAXABLE + L5[3]
End If 

if p60$[42,42]<>"Y" goto L_6010:
if not(a5) goto L_6010: ! no max taxable
If not (tx9[1]) goto L_6010: ! no tax level
if d1$[1,1]="+" goto L_6010: ! no tax level on special product
if not (ltax1) goto L_6010:
let lvlflag=tx9[1]
if tx9[0]=0 ! on tax amount
	if abs(ltax1)<=a5 
		let lvltaxable=lvltaxable+l5[3]
		let lvltaxamt=lvltaxamt+ltax1
		goto L_6010: ! total tax on line < max tax
	endif
	mat read #7,r[7],8;L3;
	mat read #7,r[7],16;l4;
	mat read #7,r[7],168;L7;
	mat read #7,r[7],250;un;  
	if not(l3) ! read product record
		MAT  READ #10,L4,512;PFU1; \ MAT  READ #10,L4,554;PFU2;  
		MAT  READ #10,L4,256;A;        
	else
		mat read #7,r[7],446;eun;
		mat read #7,r[7],452;unf;
		gosub L_30000: ! nonstock convert
	endif
	LET CNVTU[0]=0;CNVTU[1]=UN[0];CNVTU[2]=1;CNVTA=L7[4]
	GOSUB L_20000: 
	qtysell=amount
	if not(qtysell)
		let lvltaxamt=lvltaxamt+ltax1
		let lvltaxable=lvltaxable+l5[3]
		goto L_6010:
	endif
	if qtysell if (abs(ltax1)/qtysell)<=a5 ! max tax per each item < line tax min
		let lvltaxable=lvltaxable+l5[3] 
		let lvltaxamt=lvltaxamt+ltax1   
		goto L_6010: ! taxamt per item less than maxtax
	else
		let lvlminflag=99
		let lvltaxamt=lvltaxamt+fnr((a5*qtysell)*sgn(l5[3]))
		let lvltaxable=lvltaxable+l5[3]
	endif
	lvlpct=d3[(tx9[1]-1)]
else ! on merchandise amount
	if abs(l5[3])<=a5
		let lvltaxable=lvltaxable+l5[3]
		!let lvltaxamt=lvltaxamt+ltax1
		lvltaxamt=lvltaxamt+fnr(((ABS(L5[3]))*d3[(tx9[1]-1)]/100)*sgn(l5[3])) 
		lvlpct=d3[(tx9[1]-1)]
		goto L_6010: ! total tax on line < max tax
	endif
	mat read #7,r[7],8;L3;
	mat read #7,r[7],16;l4;
	mat read #7,r[7],168;L7;
	mat read #7,r[7],250;un;  
	if not(l3) ! read product record
			MAT  READ #10,L4,512;PFU1; \ MAT  READ #10,L4,554;PFU2;  
			MAT  READ #10,L4,256;A;        
	else                                   
		mat read #7,r[7],446;eun;          
		mat read #7,r[7],452;unf;          
		gosub L_30000: ! nonstock convert  
	endif
	LET CNVTU[0]=0;CNVTU[1]=UN[0];CNVTU[2]=1;CNVTA=L7[4]
	GOSUB L_20000: 
	qtysell=amount
	! need to determine the max tax total
	if QTYSELL IF(abs(l5[3])/qtysell)<=a5  ! max merch per item is 
		let lvltaxable=lvltaxable+l5[3]
		!let lvltaxamt=lvltaxamt+ltax1
		lvltaxamt=lvltaxamt+fnr(((ABS(L5[3]))*d3[(tx9[1]-1)]/100)*sgn(l5[3])) 
		lvlpct=d3[(tx9[1]-1)]
		goto L_6010: ! total tax on line < max tax
	else 
		let lvlminflag=99
		lvltaxable=lvltaxable+fnr((a5*qtysell)*sgn(l5[3]))
		lvltaxamt=lvltaxamt+fnr(((a5*qtysell)*d3[(tx9[1]-1)]/100)*sgn(l5[3])) 
		lvlpct=d3[(tx9[1]-1)]
	endif
endif
GOTO L_6010:

L_6095: ! CHECK THE LEVEL TAX
IF LVLMINFLAG<>0 AND H4=K2 AND TOT[3]<>0
	let lvltaxamt=lvltaxamt+fnr(tot[3]*d3[(tx9[1]-1)]/A1)
endif
RETURN 




calc_summary_totals: ! calculate summary totals
if not(detail) ! need to total for summary
	let taxfactor=a1
	if p61$[42,42]="Y" and lvlminflag<>0 ! striping out tax % of lvl accepted
		let taxfactor=a1-lvlpct
		let tax=tax-lvltaxamt
	endif
	if a1<>0
		if d1$[1,1]="+"
			let ftaxable=tx1[2]
			let taxable=taxable-tx1[2]
			LET FTAXAMT=FNR(tx1[2]*(D3[0])/100) 
			let tx1[2]=0
			let tax=tax-ftaxamt
			! add to breakdown totals
			let y1=0
			T7[Y1,1]=T7[Y1,1]+ftaxable !taxable freight               
			T7[Y1,4]=T7[Y1,4]+ftaxable !taxable total                
			T7[Y1,5]=T7[Y1,5]+ftaxamt !tax amount by %  
			T0[Y1,1]=T0[Y1,1]+FTAXABLE
			T0[Y1,4]=T0[Y1,4]+FTAXABLE
			T0[Y1,5]=T0[Y1,5]+ftaxamt
		endif
		y1=0 ! level less 1
		gosub L_2950:
	endif
	for ctr=1 to 8
		if d3[ctr]=a1
			let y1=ctr
			gosub L_2950:
		else
			if d3[ctr]<>0 and a1<>0
				LET Y1=ctr
				GOSUB L_2950: ! "add to reporting group breakdown subtotal
			endif
		endif
	next ctr
	return
endif
Return ! end calc_summary_totals

!! BAD_RANGE: Rem
!! MSGTXT$ = "Ending value must be Greater than or Equal to Starting value! "
!! Call "errmsg",MSGTXT$
!! Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
L_7860: Rem CONVERT YYMM TO YYYYMM
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
CHK_FREIGHT: Rem CHECK TO SEE IF FREIGHT IS TAXABLE
FTAX = 0 \ HTAX = 0 \ DTAX = 0 \ MTAX = 0
Mat Read #4,TAXTYP,36;TAX1;
FTAX = TAX1[99]
DTAX = TAX1[100]
MTAX = TAX1[98]
HTAX = TAX1[97]
Return 
CHK_MISC_CHARGES: Rem =============  misc charges - taxable & nontaxable
MISCCHGS_TAXED = 0;MISCCHGS_NONTAXED = 0
For X = 0 To 9
  If MCTXBL[X] = 0
    MISCCHGS_NONTAXED = MISCCHGS_NONTAXED + MCHARGE[X,0]
  Else 
    MISCCHGS_TAXED = MISCCHGS_TAXED + MCHARGE[X,0]
  End If 
Next X
Return 

ALMOST_OUT: Rem END OF THIS RANGE
!! If J8  Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
Goto OUTEND
!! Goto L_900
End 

L_20000: REM UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
IF CNVTU[2]=3 GOTO L_20050:
IF CNVTU[2]=1 AND CNVTU[1]=CNVTU[0] LET AMOUNT=CNVTA \ GOTO L_20160:
IF CNVTU[0]=-2 OR CNVTU[1]=-2 LET AMOUNT=CNVTA \ GOTO L_20160:
IF CNVTU[2]=0 GOTO L_20050:
IF NOT (CNVTA) LET AMOUNT=0 \ GOTO L_20160:
L_20050: GOTO L_20120: !IF SPC 4>1280 GOTO L_20120:


L_20120: REM "====== unibasic 5+ logic
CALL "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
IF CNVTU[2]=0 GOTO L_20160:
!IF FLAG LET E=FLAG \ GOSUB ERR_SEARCH:
LET AMOUNT=CNVTA
L_20160: RETURN 


L_30000: REM ===== set units for conversions (stock/nonstock version)
LET A[6]=L6[4];A[5]=UNF[5] \ IF NOT (A[5]) LET A[5]=1;UNF[5]=1
! LET B[23]=L6[2];A1[3]=UNF[4] \ IF NOT (A1[3]) LET A1[3]=1;UNF[4]=1
LET PFU1[0]=EUN[0];PFU1[1]=UN[0]
LET PFU1[2]=UN[1];PFU1[3]=UN[2]
LET PFU1[4]=EUN[1]
LET PFU1[5]=0;PFU1[6]=0;PFU1[7]=0
LET PFU1[8]=UN[0];PFU1[9]=UN[0];PFU1[10]=EUN[1]
LET PFU1[11]=UN[2];PFU1[12]=UN[1]
LET PFU1[13]=UN[0];PFU1[16]=EUN[0];PFU1[17]=EUN[0]
IF PFU1[11]=-3 OR PFU1[12]=-3 ! "Catch Wgt Itm N/S
   LET PFU1[15]=-3;CTWT=PFU1[15]
ELSE 
  LET PFU1[15]=0;CTWT=0
ENDIF 
LET PFU1[18]=UN[0];PFU1[19]=UN[0]
L_30060: LET PFU2[0]=UNF[0];PFU2[1]=UNF[1]
LET PFU2[2]=UNF[2];PFU2[3]=UNF[3]
LET PFU2[4]=0;PFU2[5]=0;PFU2[6]=0
FOR X1=1 TO 4
   FOR X2=0 TO X1-1
     IF PFU1[X1]=PFU1[X2] LET PFU1[X1]=0;PFU2[X1-1]=0
   NEXT X2
NEXT X1
L_30099: RETURN 


OUTEND: Rem EXIT ROUTINE	
! dx close
If J8 ! dx xml
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
!try call dxclose() else rem
End 

ERR_TRAP:
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
!
!
  else
	  include "src/callmainerrnet.inc"
  end try
end