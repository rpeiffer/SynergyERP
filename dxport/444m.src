! --- 444M
! description MISC CHARGES BY SALESPERSON  
!
! loadsave -w -n 100,10 -o prog/dxport/444m.dl4 src/444m.src
!
! 1.0 mm/dd/yyyy 
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
!
!
!
!include structure,filehandler libs & default structure dims
!
!
! *declare additional dl4 intrinsic subs & functions
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile
Declare External Sub GetcostLevels
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub JulianToDate
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel


! **main procedure
!
!
! dim variables used by program
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
 dim action$[30],action1$[30],Action2$[30],options$[30],userid$[8],b$[200],3%
 dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[2000] ! .net delimiters
 b$=" ",b$
 !
 ! call dxopen() ! done in dx
 !
 call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
 !
 ! open files (sort always on #9
 !
 ch_cust = openfile(-1808,Intco) \ if ch_cust = -1 error 42
 CH_SR=OpenFile(-1824,IntCo) \ if ch_sr=-1 Error 42 ! salesrep
 Ch_MCg=OpenFile(-2032,Intco) \ if ch_mcg=-1 error 42 ! misc chrg
 ch_invh =openfile(-1136,IntCo) \ if ch_invh=-1 error 42 ! invh
 ch_invt=Openfile(-1168,IntCo) \ if ch_invt=-1 Error 42 ! invt
 ch_invs=Openfile(-1152,IntCo) \ if ch_invs=-1 Error 42 ! invs
 ch_invhk = openfile(-9994,IntCo) \ if ch_invhk=-1 error 42 ! invhkey !
	dim ordDescription$[760],tmp$[500],tmp1$[400]
	Dim SSDate$[10],ESDate$[10],X$[20],Msg$[200]
	Dim Message$[500],WebStr$[500],MCDESC$[20]
	Dim K9$[60],K1$[60],k2$[60],T9$[26],CName$[30]
	Dim SRName$[30],SHName$[30],MCDesc$[20]
	DIM DUL$[131],SUL$[131],PMASK$[20],Pmask1$[20]
	Dim BMask$[30]
	Dim 1%,Cost_Lev[3],X1[9]
	Dim 2%,X2[9],begsales,endsales,H5[16]
	Dim 2%,ssdate,esdate,H0[12],MCode[9]
	Dim 3%,OREF[5],MCharge[9,1],T2[25]
	Dim 3%,X3[9],tmp3,R[99]
	Dim 3%,SRTTL[9],RPTTL[9]

	Dim 3% ! default
	DUL$="=",DUL$
	SUL$="-",SUL$
	PMASK$="-----#.##" ! 9 ttl(-99,999.99) (10 w/space)
	PMask1$="------#.##" ! 10 (-999,999.99) (10 w/no space)
	BMask$="------------#.##" ! browser
	!call dxsave(0,"tmp/444min.txt!")
	!
	! get costlev
	! 0 = avg, 1 = load, 2 = PO 3 = base
	!
	call GetCostLevels(e$, Cost_Lev[],IntCo,UserID$)
	Read #1,3;CNAME$;
	Mat READ #1,62,0;ordDescription$;
	toBrowser = 0
	try
		i = Chf(0)
	else
		toBrowser = spc(8)
	end try
	if toBrowser and toBrowser <> 49 error toBrowser

	call dxget("BEGSALES",tmp$) \ begSales = tmp$
	if not(begSales) begSales = 1
	if begSales<1 or begSales>999 or fra(begSales)
		e$="Invalid beginning Salesperson" \ error 10000
	endif
	call dxget("ENDSALES",tmp$) \ endSales = tmp$
	if not(endSales) endSales = 999
	if endSales<1 or endSales>999 or fra(endSales)
		e$="Invalid ending Salesperson" \ error 10000
	endif
	if endSales<BegSales
		e$="Invalid Salesperson Range" \ error 10000
	endif
	! starting sales date
	Call dxget("SSDATE",tmp$)
	if rtrim$(tmp$)="" 
		tmp$="010170"
	endif
	! need to convert for mmddyy to julian
	LET TMP3=TMP$
	LET TMP$=TMP3 USING "&&&&&&"
	LET TMP1$=TMP$[5,6],TMP$[1,4] ! from mmddyy to yyddmm
	let x2=tmp1$
	gosub ymd2jul:
	ssdate=tmp1$! error
	ssdate=tmp1$
	if e<>0
		let eflag=eflag+1
		let message$=message$+" Invalid Starting Sales Date Entered. "
	else
		let jssdate=x2
		let ssdate=tmp1$
		let x2=tmp1$\gosub L_7700:
		let ssdate$=x$
	endif
	Call dxget("ESDATE",tmp$)
	if rtrim$(tmp$)="" 
		tmp$="123159"
	endif
	! need to convert for mmddyy to julian
	LET TMP3=TMP$
	LET TMP$=TMP3 USING "&&&&&&"
	LET TMP1$=TMP$[5,6],TMP$[1,4] ! from mmddyy to yyddmm
	let x2=tmp1$
	gosub ymd2jul:
	esdate=tmp1$! error
	esdate=tmp1$
	if e<>0
		let eflag=eflag+1
		let message$=message$+" Invalid Ending Sales Date Entered. "
	else
		let jesdate=x2
		let esdate=tmp1$
		let x2=tmp1$\gosub L_7700:
		let ESDATE$=x$
	endif
	If not(eflag)
		if jssdate>jesdate
			let message$=message$+"Ending Sales Date must be greater than Starting. "
			let eflag=eflag+1
		endif
	endif
	
	If Eflag goto OutErr ! entry issue

	if toBrowser
		!e$ = "Browser option not supported yet.  Please re-select printer."
		!error 10000
		!<section>
		tmp$ = bsdel$,"444m",fdel$,rdel$
		Call addtostr(e$,rstr$,tmp$)
		TMP$="SLS#",fdel$,"SLS NAME",FDEL$
		TMP$=TMP$,"CUST#",FDEL$,"SHIP NAME",FDEL$
		TMP$=TMP$,"INV#",FDEL$,"ORDER#",FDEL$
		TMP$=TMP$,"INV DATE",FDEL$,"OTYP",FDEL$
		TMP$=TMP$,"MISC DESC",FDEL$,"CHARGE",FDEL$
		TMP$=TMP$,"COST",FDEL$,"PROFIT",FDEL$
		TMP$=TMP$,RDEL$
		Call addtostr(e$,rstr$,tmp$)
	else
		call setoutput(e$,rstr$,2) ! report in process
	end if
	! ok -were now sorting / printing
	K1$=" ",k1$
	K1$[1,6]=jssdate using "######" ! julian start
	HHKLoop: ! by julian date
	Search #ch_invhk,3,2;k1$,R,E \ if e>2 gosub err_search
	if e goto srtdone
	x2=k1$[1,6] \ if x2>jesdate goto SRTDone ! past end
	R[4]=R
	Mat read #ch_invh,r[4],0;H0;
	x2=h0[11]
	if x2<begSales or X2>endSales goto HHKLoop
	Mat read #ch_Invh,R[4],512;ORef;
	R[5]=ORef[5]
	Mat read #ch_invt,R[5],168;MCode;
	x=0 ! SEE IF ANY MISC CHARGES!!
	FOR X1=0 TO 9 \ IF MCODE[X1]<>0 LET X=1 \ NEXT X1
	IF X ! HAS ONE - ADD SORTKEY
		K9$=" ",K9$
		K9$[1,3]=H0[11] USING "###"
		K9$[5]=K1$
		sEARCH #9,4,1;K9$,R[4],E
		IF E GOSUB ERR_SEARCH
	ENDIF
	GOTO HHKLOOP
	SRTDONE: ! NOW PRINT
	srep=0;rpage=0
	pline=90
	mline=60
	clear SRTTL[]
	Clear RPTTL[]
	k9$=" ",k9$
	SIHLoop: ! sorted loop
	Search #9,3,1;k9$,R,E \ if e goto RPTDone
	X2=k9$[1,3]
	if srep<=0 let srep=x2
	if x2<>SRep ! slsm subt
		Gosub SRTOTL
		Srep=k9$[1,3]
	Endif
	R[4]=R
	Mat read #ch_invh,r[4],0;H0;
	mat read #ch_invh,R[4],104;h5;
	Mat read #ch_Invh,R[4],512;ORef;
	R[5]=ORef[5]
	Mat read #ch_invt,R[5],8;t2;
	Mat read #ch_invt,R[5],168;MCode;
	Mat read #ch_invt,R[5],208;MCHarge;
	R[6]=ORef[4]
	Mat read #ch_invs,R[6],8;SHName$;
	! slsrep name
	K2$=" ",k2$
	k2$=H0[11] using "###"
	Search #ch_SR,2,1;k2$,R[3],E
	if not(e)
		mat read #ch_sr,r[3],0;SRName$;
	Else
		SRname$=" ",SRName$
		SRName$="Salesperson not on file"
	Endif
	Mult=1
	if h0[0]=31 let mult=-1 ! credit!!
	fOR mc9=0 TO 9
		IF MCODE[MC9] ! has mchrg
			! total first
			SRTTL[1]=SRTTL[1]+(MCHARGE[Mc9,0]*Mult) ! $$
			SRTTL[2]=SRTTL[2]+(MCHARGE[mc9,1]*Mult) ! cost
			SRTTL[3]=SRTTL[3]+((MCHARGE[mc9,0]-mcharge[mc9,1])*Mult) ! profit?
			RPTTL[1]=RPTTL[1]+(MCHARGE[Mc9,0]*Mult) ! $$
			RPTTL[2]=RPTTL[2]+(MCHARGE[mc9,1]*Mult) ! cost
			RPTTL[3]=RPTTL[3]+((MCHARGE[mc9,0]-mcharge[mc9,1])*Mult) ! profit?
			R=Int(MCODE[mc9])
			read #ch_mcg,R,6;mcdesc$;
			gosub prnt_dtl
		endif
	Next mc9
	goto SIHLoop

	Prnt_dtl: ! details
	if toBrowser
		tmp$=STR$(H0[11]),fdel$,rtrim$(srname$),fdel$
		tmp$=tmp$,Str$(H0[4]),fdel$,RTrim$(shname$),fdel$
		tmp$=tmp$,Str$(ORef[1]),fdel$,Str$(H0[7]),fdel$
		x2=h0[8] \ gosub L_7700
		tmp$=tmp$,X$,fdel$,Str$(H5[7]),fdel$
		tmp$=tmp$,Str$(Int(MCODE[mc9]))," ",RTrim$(mcdesc$),fdel$
		tmp$=tmp$,LTrim$((MCHARGE[mc9,0]*Mult) using Bmask$),fdel$
		if cost_lev[1]
			tmp$=tmp$,LTrim$((MCHARGE[mc9,1]*Mult) using BMask$),fdel$
			tmp$=tmp$,LTrim$(((MCHARGE[mc9,0]-mcharge[mc9,1])*Mult) using BMask$),fdel$
		Else
			tmp$=tmp$," ",fdel$," ",fdel$ ! no cost/profit!!
		endif
		tmp$=tmp$,rdel$ ! end of record
		Call addtostr(e$,rstr$,tmp$)
	Else
		gosub rphedr

		print #0;using "###";h0[11];" ";srname$[1,20]; ! slsrep
		print #0;using "######";tab 25;H0[4];" ";shname$[1,20];
		print #0;using "########";tab 53;oref[1]; ! inv
		print #0;using "######";tab 62;h0[7]; ! order
		x2=h0[8] \ gosub L_7700
		print #0;tab 69;x$[1,8]; ! inv date
		Print #0;tab 78;Str$(H5[7]); ! 2char otype
		print #0;tab 81;Str$(Int(MCODE[mc9]));" ";mcdesc$[1,15]; ! charge desc
		print #0;using pmask$;tab 101;(MCHARGE[mc9,0]*Mult); ! charge
		if cost_lev[1]
			print #0;using pmask$;tab 111;(MCHARGE[mc9,1]*Mult); ! cost
			Print #0;using pmask$;tab 121;((MCHARGE[mc9,0]-mcharge[mc9,1])*Mult) ! profit
		else
			print #0;"" ! no cost/profit
		endif
	Endif
	Return

	SRTOTL: ! total for slsrep
	if toBrowser return
	pline=pline+1
	gosub rphedr
	print #0;tab 75;"SALES PERSON TOTAL";
	PRINT #0;USING PMASK1$;TAB 100;SRTTL[1];
	if cost_lev[1]
		print #0;Using PMask1$;SRTTL[2];SRTTL[3]
	else
		print #0;""
	endif
	PRINT #0;SUL$
	CLEAR SRTTL[]
	Return

	RPTOTL: ! total for report
	if toBrowser return
	PRINT #0;TAB 40;"REPORT TOTALS";
	PRINT #0;USING PMASK1$;TAB 100;RPTTL[1];
	if cost_lev[1] 
		print #0;using PMask1$;RPTTL[2];RPTTL[3]
	else
		print #0;""
	endif
	Return

	RPHedr: ! rpt header
	if toBrowser return
	pline=pline+1
	if pline<Mline return
	if rpage print #0;"\14\";
	RPage=Rpage+1
	Print #0;""
	Print #0;" - 444M - ";tab(64 - Len(CNAME$) / 2);CNAME$; Tab 100;"PAGE";RPage
	clear t9$	\ Call Time(T9$)
	Print #0;T9$;Tab 52;"MISC CHARGES BY SALESPERSON"
	Print #0; Tab 52;"DATES: ";ssdate$;" TO ";esdate$
	print #0;" "
	print #0;"SLS# NAME";TAB 26;"CUST#  SHIP NAME";
	PRINT #0;TAB 57;"INV"; TAB 63;"ORDER";TAB 69;"INV DATE";
	PRINT #0;TAb 78;"OT";TAB 81;"MISC CHRG";
	PRINT #0;TAB 103;"CHARGE";
	if cost_lev[1]
		print #0;TAB 115;"COST";TAB 123;"PROFIT"
	else
		print #0;""
	endif
	PRINT #0;DUL$
	PLINE=7
	Return

	RPTDone: ! thru all - final sub & rpt totals
	GOSUB SRTOTL
	GOSUB RPTOTL
	goto OutEnd

	L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
	Return 

	YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
	let e=0
	if x2<=0 Return 1 ! not a date that exists
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E) \ If E Return 
	X2 = X$[1,5]
	Return 1

	ERR_SEARCH: Rem
	ENUM = E ;ELINE = Spc(16);CTERR = 0
	If E = 5 Let CTERR = Err(8)
	msg$ = "RETURN STATUS",(E + (CTERR * .001))
	msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
	E$=msg$ \ Error 11000
	End
	OutErr: ! entry ng
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
	
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
	toBrowser=0 ! so no esdel$

	OutEnd: !
	If toBrowser
		Call addtostr(e$,rstr$,esdel$) !end section
		call setoutput(e$,rstr$, 1) ! 1 flag puts 0 status section in puts </page> in
	End If
	!try Close else rem
 ! try call dxclose() else rem
else
	ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
 include "src/callmainerrnet.inc"
end try
end
