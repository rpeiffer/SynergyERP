! >>> Program 316g
!
! description A/R Customer Trial Balance, User Defined
!
! loadsave -w -n 100,10 -o prog/dxport/316g.dl4 src/316g.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  6, 2004  11:12:59
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/mx/mx316g.src (univ2) [mary] {25810}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem *    MX316G A/R AGED TRIAL BALANCE SELECTABLE AGING COLUMNS
Rem **************************************
Rem *   UNIVERSAL BUSINESS SYSTEM        *
 ! *declare common external libs & subs & functions 
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
External Lib "libgeneral.lib" !general routines                  
Declare External Sub GetSession,AddToStr,SetOutPut,CreateNetStatus
!
External Lib "ubsfunc.dl4"
Declare External Sub UTAge5
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,FindF
Declare Intrinsic Function FindChannel
!
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3]
Com P9$[50]
If Err 0 Goto ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
!
DIM CN$[10],CustNAME$[31]
dIM Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim BegSortOpt$[14],EndSortOpt$[14]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 3%,tmp3
dim 3%,credlim,openord
!
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J6,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 1%,F5,S8[2],C7,A0[10],INVFLAG,CMFLAG,URECFLAG,DETFLAG
Dim 1%,D9[10],S1[10],S[21],F,R,P[2],P1,P2,P3,L,X9,DAYSMIN[6],DAYSMAX[6]
Dim 2%,E,ARDATE,CHAN,H0[12],C5,R5,H5[8],E1[12]
Dim 2%,J,D,D1,D2,A2[5],C1[12],A4[7],DIV[1],COID
Dim 2%,W1[1],CUST[1],SNAME$[14],ENAME$[14]
Dim 2%,PRCNTAR[6]
Dim 4%,TOTAR
Dim C5$[12],1%,FLAG,2%,D3[1]
Dim K1$[30],K2$[30],K3$[25],K4$[40],BREAK$[3],K5$[25],ARTERM$[16]
Dim 3%,A3[11],C3[5],T9[8,3],T[6],CRDTOT,T2[25],GNDTOT
Dim 3%,REC_ASRT,CTAR,ARREF[1]
Dim K9$[40],SEARCH_$[30],EMP$[30],CHECK$[30],ext$[5]
Dim F$[30],C$[30],M$[10],ARDATE$[8],P$[20],P1$[20],P61$[256]
Dim CNAME$[30],2%,MAXDAY,3%,MINDOL
Dim C2$[30],C3$[25],CNA0$[40],K7$[30],PHONE$[20]
Dim S1$[131],D2$[10],RETVAL$[512],Z2$[10]
Dim KEYASRT$[50],CMD$[100],ASRTFILE$[20],A3$[16],A4$[60],D0$[81]
dim 2%,acctmgr[1], ARCL$[30],3%,cfin[8]
dim 3%
Def FNR(X) = Sgn(X) * Int((Abs(X) + .005) * 100) / 100
DXSetup:
Dim tmp$[2500],tmp1$[2500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[5000],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID = intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
S1$ = "-",S1$
P1$ = "-------.##"
P$ = "----,---,---.##"
D0$ = "INVSVCNSFD/ALATC/MUN.C/APAY"
!
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
!
P9$[50,50] = "D"
L9 = 55;SCRPRT = 0
If J8 let L9 = 22 \ SCRPRT = 99
Rem! end create sort file
Read #1,18,30;D2$;
Mat Read #1,19,50;P9$;
Mat read #1,61,0;p61$;
Read #1,0,108;ARDATE;
Read #1,0,100;ARDATE$;
If S9[0]
  ARDATE = S9[1];X2 = ARDATE \ Gosub ISDUNPACK
  ARDATE$ = X$
endif
Read #1,3,0;CNAME$;
!
! - GETDEFAULTS: Rem
! - Call "progdflt","316gag","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@"
! -   DAYSMAX[0] = 30
! -   DAYSMIN[1] = 31;DAYSMAX[1] = 45
! -   DAYSMIN[2] = 46;DAYSMAX[2] = 60
! -   DAYSMIN[3] = 61;DAYSMAX[3] = 75
! -   DAYSMIN[4] = 76;DAYSMAX[4] = 90
! -   DAYSMIN[5] = 91;DAYSMAX[5] = 120
! -   DAYSMIN[6] = 121
! -   Gosub AGEBUCKETS
! - Else 
! -   DAYSMAX[0] = RETVAL$[38,40]
! -   DAYSMAX[1] = RETVAL$[41,43]
! -   DAYSMAX[2] = RETVAL$[44,46]
! -   DAYSMAX[3] = RETVAL$[47,49]
! -   DAYSMAX[4] = RETVAL$[50,52]
! -   DAYSMAX[5] = RETVAL$[53,55]
! -   DAYSMIN[1] = RETVAL$[56,58]
! -   DAYSMIN[2] = RETVAL$[59,61]
! -   DAYSMIN[3] = RETVAL$[62,64]
! -   DAYSMIN[4] = RETVAL$[65,67]
! -   DAYSMIN[5] = RETVAL$[68,70]
! -   DAYSMIN[6] = RETVAL$[71,73]
! - End If 
! - Call "progdflt","316g","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@"
! -   SORTOPT = 2;CHAN = 3
! -   D1 = 2;DIV[0] = 0;DIV[1] = 99;W1[0] = 0;W1[1] = 99
! -   SLSM[0] = 0;SLSM[1] = 999;DETFLAG = 0
! -   CUST[0] = 0;CUST[1] = 999999;SNAME$ = " ",SNAME$;ENAME$ = "z",ENAME$
! -   For X = 0 To 8 \ D9[X] = 1 \ Next X
! -   MAXDAY = 0;MINDOL = 0
! - Else 
! -   SORTOPT = RETVAL$[1,1]
! -   If SORTOPT = 1 ! customer code
! -     CHAN = 3;D1 = 1
! -     CUST[0] = RETVAL$[2,7]
! -     CUST[1] = RETVAL$[16,21]
! -   End If 
! -   If SORTOPT = 2 ! customer name
! -     CHAN = 3;D1 = 2
! -     SNAME$[1,14] = RETVAL$[2,15]
! -     ENAME$[1,14] = RETVAL$[16,29]
! -   End If 
! -   If SORTOPT = 3 ! saleman code
! -     CHAN = 9;D1 = 1
! -     SLSM[0] = RETVAL$[2,4]
! -     SLSM[1] = RETVAL$[16,18]
! -   End If 
! -   W1[0] = RETVAL$[30,31]
! -   W1[1] = RETVAL$[32,33]
! -   DIV[0] = RETVAL$[34,35]
! -   DIV[1] = RETVAL$[36,37]
! -   For X = 0 To 8 \ D9[X] = RETVAL$[(74 + X),(74 + X)] \ Next X
! -   MINDOL = RETVAL$[83,90]
! -   MAXDAY = RETVAL$[91,94]
! -   DETFLAG = RETVAL$[95,95]
! - End If 
!
! dx add xport reporting code

!
eflag=0
message$=""

!
!  dx add xport reporting code
call dxget("frozenacct",tmp$) \ S9[0]=tmp$  ! report option  0=current  1=frozen
if p61$[20,20]="Y" ! frozen by month
	call dxget("FRZMNTH",tmp$)
	if RTrim$(tmp$)<>"" let s9[0]=2
	x3=tmp$
	let x$=x3 using "&&&&"
	let ext$="."+x$
Endif
call dxget("frozendate",tmp$) \ S9[1]=tmp$ ! frozen aging date
call dxget("sortopt",tmp$) \ SORTOPT=tmp$ ! sort by 1=cust#  2=cust name  3=salesman#
call dxget("begsortopt",BegSortOpt$) ! starting cust #,  cust name or salesman #
call dxget("endsortopt",EndSortOpt$) ! ending cust #, name or salesman #
call dxget("begwhse",tmp$) \ if tmp$="" let W1[0]=0 else W1[0]=tmp$ ! beg warehouse
call dxget("endwhse",tmp$) \ if tmp$="" let W1[1]=99 else W1[1]=tmp$ ! end warehouse
call dxget("begdiv",tmp$) \ if tmp$="" let DIV[0]=0 else DIV[0]=tmp$ ! beg division
call dxget("enddiv",tmp$) \ if tmp$="" let DIV[1]=99 else DIV[1]=tmp$ ! end division
call dxget("0-30days",tmp$) \ if tmp$="" let D9[0]=0 else D9[0]=1 ! include curr invoices
call dxget("31-45days",tmp$) \ if tmp$="" let D9[1]=0 else D9[1]=1 ! include 31-45 invoices
call dxget("46-60days",tmp$) \ if tmp$="" let D9[2]=0 else D9[2]=1 ! include 46-60 invoices
call dxget("61-75days",tmp$) \ if tmp$="" let D9[3]=0 else D9[3]=1 ! include 61-75 invoices
call dxget("76-90days",tmp$) \ if tmp$="" let D9[4]=0 else D9[4]=1 ! include 76-90 invoices
call dxget("91-120days",tmp$) \ if tmp$="" let D9[5]=0 else D9[5]=1 ! include 91-120 invoices
call dxget("over120days",tmp$) \ if tmp$="" let D9[6]=0 else D9[6]=1 ! include over 120 invoices
call dxget("opencredits",tmp$) \ if tmp$="" let D9[7]=0 else D9[7]=1 ! include open credits
call dxget("agecredits",tmp$) \ if tmp$="" let D9[8]=0 else D9[8]=1 ! age credits
call dxget("mindol",tmp$) \ MINDOL=tmp$ ! minimum amount
call dxget("maxday",tmp$) \ MAXDAY=tmp$ ! maximum days
call dxget("detflag",tmp$) \ if tmp$="" let DETFLAG=0 else DETFLAG=1 ! detail print
!  dx end
!
! frozen report
if S9[0] ! frozen
	if s9[1]<=0 let e$="Frozen Aging date is required" \ error 10000
  tmp$=S9[1] using "&&&&&&" ! mmddyy format
  if len(tmp$)<>6
	let message$=message$+"Invalid Aging Date. "
	let eflag=eflag+1
  endif
  S9[1]=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
  ARDATE = S9[1] \ X2 = ARDATE 
  Gosub L_7700 \ ARDATE$ = X$
else
  S9[1]=0 ! current
endif
If sortopt<1 or sortopt>4!
	eflag=eflag+1
	! let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
	message$=Message$+"Invalid Sort Option."
endif
! sort by
if SORTOPT=1 ! cust #
	CUST[0]=BegSortOpt$
	CUST[1]=EndSortOpt$ \ if EndSortOpt$="" let CUST[1]=999999
	if rtrim$(endsortopt$)="zzzzzzzzzzzzzz" let cust[1]=999999
	if CUST[0]<0 or CUST[0]>999999
		eflag=eflag+1
		! let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
		message$=Message$+"Invalid Starting Customer Code. "
	endif
	if CUST[1]<0 or CUST[1]>999999
		eflag=eflag+1
		message$=Message$+"Invalid Ending Customer Code. "
	endif
	 if CUST[1]<CUST[0]
	!let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
	eflag=eflag+1
	! let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
	message$=Message$+"Invalid Customer Code Range. "
	endif
	SNAME$=Blank$ \ ENAME$=EndParam$
	SLSM[0]=0 \ SLSM[1]=999
endif ! sortopt=1 cust #
if SORTOPT=2! cust name
	if rtrim$(begsortopt$)="0" let begsortopt$=""
	if rtrim$(endsortopt$)="999999" let endsortopt$="zzzzzzzzzzzzzz"
	if rtrim$(endsortopt$)="" let endsortopt$="zzzzzzzzzzzzzz"
	SNAME$=BegSortOpt$,Blank$
	ENAME$=EndSortOpt$,EndParam$
	 if ENAME$<SNAME$ 
		!let e$="Invalid ending customer name, must be >= starting customer name" \ error 10000
		eflag=eflag+1
		! let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
		message$=Message$+"Invalid Customer Name Range. "
	endif
	CUST[0]=0 \ CUST[1]=999999
	 SLSM[0]=0 \ SLSM[1]=999
endif ! sort opt=2 customer name
if sortopt=3 ! salesperson
	SLSM[0]=BegSortOpt$
	SLSM[1]=EndSortOpt$ 
	if EndSortOpt$="" let SLSM[1]=999
	if rtrim$(endsortopt$)="999999" let SLSM[1]=999
	if rtrim$(endsortopt$)="zzzzzzzzzzzzzz" let slsm[1]=999 ! 999
	if SLSM[0]<0 or SLSM[0]>999 
		eflag=eflag+1
		message$=Message$+"Invalid Starting Salesperson Code. "
		!let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
	endif
	if SLSM[1]<0 or SLSM[1]>999 
		eflag=eflag+1
		message$=Message$+"Invalid Ending Salesperson Code. "
		!let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
	endif
	if SLSM[1]<SLSM[0] 
		let eflag=eflag+1
		!or SLSM[1]>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
		message$=Message$+"Invalid Salesperson Range. "
	endif
	SNAME$=Blank$ \ ENAME$=EndParam$
	CUST[0]=0 \ CUST[1]=999
endif !sortopt =3 saleperson
let acctmgr[0]=0;acctmgr[1]=999
if sortopt=4! account manager
	acctmgr[0]=BegSortOpt$
	acctmgr[1]=EndSortOpt$ 
	if rtrim$(EndSortOpt$)="" let acctmgr[1]=999
	if rtrim$(endsortopt$)="999999" let acctmgr[1]=999
	if rtrim$(endsortopt$)="zzzzzzzzzzzzzz" let acctmgr[1]=999 ! 999
	if acctmgr[0]<0 or acctmgr[0]>999 
		eflag=eflag+1
		message$=Message$+"Invalid Starting Account Manager Code. "
	endif
	if acctmgr[1]<0 or acctmgr[1]>999 
		eflag=eflag+1
		message$=Message$+"Invalid Ending Account Manager Code. "
	endif
	if acctmgr[1]<acctmgr[0] 
		let eflag=eflag+1
		message$=Message$+"Invalid Account Manager Range. "
	endif
	SNAME$=Blank$ \ ENAME$=EndParam$
	CUST[0]=0 \ CUST[1]=999
endif !sortopt =3 saleperson!
! warehouse
if W1[0]<0 or W1[0]>99
	eflag=eflag+1
	message$=Message$+"Invalid Starting Warehouse. "
endif
if W1[1]<0 or W1[1]>999 
	eflag=eflag+1
	message$=Message$+"Invalid Ending Warehouse. "
endif
  !let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
 ! endif
	! let e$="Invalid starting warehouse, must be between 0 and 99!" \ error 10000
if W1[1]<W1[0] ! or W1[1]>99 let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
	eflag=eflag+1
	message$=Message$+"Invalid Warehouse Range. "
endif !
! division
if DIV[0]<0 or DIV[0]>99 ! let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
	eflag=eflag+1
	message$=Message$+"Invalid Starting Division. "
endif
if DIV[1]<0 or DIV[1]>99 
	eflag=eflag+1
	message$=Message$+"Invalid Ending Division. "
endif
if DIV[1]<DIV[0] ! or DIV[1]>99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
	eflag=eflag+1
	message$=Message$+"Invalid Division Range. "
endif!
! minimum amount & maximum days
if MINDOL<0 or MINDOL>9999999
	eflag=eflag+1
	!let e$="Invalid minimum amount, must be between 0 and 9999999!" \ error 10000
	message$=message$+"Invalid Minimum Amt. "
endif
if MINDOL=0 let MAXDAY=0
if MAXDAY<0 or MAXDAY>999 
	!let e$="Invalid maximum days, must be between 0 and 999!" \ error 10000
	eflag=eflag+1
	message$=message$+"Invalid Maximum Days."
endif
!
INVFLAG = 0 \CMFLAG = 0
For X = 0 To 6
  If D9[X] Let INVFLAG = 1
Next X
If D9[7] Let CMFLAG = 1
If Not(INVFLAG) And Not(CMFLAG)
	let eflag=eflag+1
	let message$=message$+"No columns selected to print transactions!" ! \ error 10000
endif
if not(eflag)
	! create another sortfile
	CH_ASRT = FindChannel()
	ASRTFILE$ = " ",ASRTFILE$
	ASRTFILE$ = "6/ASRTWORK_",UserID$
	Try kill ASRTFILE$ else rem
	tmp$="files/"+asrtfile$+"!"
	CMD$ = "[1:1] ",tmp$ ! ASRTFILE$
	Build #CH_ASRT,CMD$
	REC_ASRT = 25 \ Search #CH_ASRT,0,1;KEYASRT$,REC_ASRT,E \ If E let e$="Error building '",ASRTFILE$,"'!" \ error 10000
	REC_ASRT = 1 \ Search #CH_ASRT,0,0;KEYASRT$,REC_ASRT,E \ if E let e$="Error building '",ASRTFILE$,"'!" \ error 10000
	REC_ASRT = 0 \ Search #CH_ASRT,1,0;KEYASRT$,REC_ASRT,E \ If E let e$="Error building '",ASRTFILE$,"'!" \ error 10000
	tmp$ = "files/",asrtfile$," <666>"  
	Modify tmp$
	Try Close #CH_ASRT Else Rem
	Try
		Open #CH_ASRT,ASRTFILE$
	else
		let eflag=eflag+1
		let message$=message$+"Error in Building a Sort File. "
	end Try
endif
if eflag<>0 goto outenderr:
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"316g",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
! stop
!
if s9[0]=2
	read #1,88,1504;j$;
	j$=RTrim$(J$)+ext$
	call findf(j$,found)
	if not(found)
		e$="Frozen file for "+ext$+" not found" \ error 10000
	Endif
Endif
DAYSMAX[0] = 30
DAYSMIN[1] = 31;DAYSMAX[1] = 45
DAYSMIN[2] = 46;DAYSMAX[2] = 60
DAYSMIN[3] = 61;DAYSMAX[3] = 75
DAYSMIN[4] = 76;DAYSMAX[4] = 90
DAYSMIN[5] = 91;DAYSMAX[5] = 120
DAYSMIN[6] = 121
!
For I = 3 To 7
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  If I = 4 And S9[0] 
    if s9[0]=1 let J$[Len(J$) + 1] = ".FROZ" ! frozen a/r
	if s9[0]=2 let j$=RTrim$(J$)+ext$
  End If 
  Ropen #I,J$
L_845: Next I
Data "1808","1504","1840","1872","720"
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
if J8 ! dx xml headings
  !
	tmp$="CUST #",fdel$,"NAME",fdel$
	tmp$=tmp$,"TERMS",fdel$,"SALESMAN",fdel$,"ACCOUNT MANAGER",fdel$
	tmp$=tmp$,"CONTACT",fdel$,"A/P TELEPONE",fdel$
	tmp$=tmp$,"AVGPAYDAYS",fdel$
	if not(detflag)
		let tmp$=tmp$,"CREDITLIMIT",FDEL$
		let tmp$=tmp$,"OPENORDER",FDEL$
		let tmp$=tmp$,"AVAILCREDIT",FDEL$
	endif
	If detflag<>0
		tmp$=tmp$,"AGE",fdel$,"DESCRIPTION",fdel$
		If P9$[25,25] = "Y" let tmp$=tmp$,"DUE DATE",fdel$
		tmp$=tmp$,"TRANS DATE",fdel$,"TYPE",fdel$,"REFERENCE",fdel$
	endif
	If D9[0]<>0 tmp$=tmp$,"CURRENT",fdel$
	For X = 1 To 5
		If D9[X]<>0
			let tmp$=tmp$+str$(DAYSMIN[X])+"-"+str$(DAYSMAX[X])+" DY",fdel$
		endif
	Next X
	If D9[6]
		tmp$=tmp$+str$(DAYSMIN[6])+"+ DAYS"+fdel$
	endif
	if not(detflag)
		let tmp$=tmp$,"TOTAL",fdel$
	endif
	
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - L_1000: Rem SELECT RANGES
! - For X = 0 To 4 \ T[X] = 0 \ Next X
! - For X = 0 To 8
! -   For X1 = 0 To 3
! -     T9[X,X1] = 0
! -   Next X1
! - Next X
! - Gosub L_5600 \ Gosub L_5700
! - L_1070: 
! - Print @0,22;'CE';"Enter #:field to edit  R: reselect all  S: save defaults ";
! - Print @0,23;'CE';"      C: change aging days  P: print  E: exit ";
! - Input Len (16384 + 2);""J$
! - Call String(1,J$)
! - If J$ = "E" Goto L_9040
! - If J$ = "P"
! -   Goto L_1200
! - End If 
! - If J$ = "R"
! -   For K = 1 To 13
! -     Gosub GETOPT
! -   Next K
! -   Goto L_1070
! - End If 
! - If J$ = "S"
! - ASK_SAVE: Print @0,23;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
! -   Input Len (16384 + 1);""Z2$
! -   Call String(1,Z2$)
! -   If Z2$ = "" Print @0,23;'CL'; \ Goto L_1070
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   Gosub DEFSAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "progdfltw","316g","",77,RETVAL$,URECFLAG
! -   Print @0,23;'CL';
! -   Goto L_1070
! - End If 
! - If J$ = "C"
! -   Gosub AGEBUCKETS
! -   Gosub L_5600
! -   Gosub L_5700
! -   Goto L_1070
! - End If 
! - K = J$
! - Gosub GETOPT
! - Goto L_1070
! - GETOPT: Rem get options
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On K Gosub GETSORTOPT,GETWHSRNG,GETDIVRNG,GETPRNTAGE,GETPRNTAGE
! - On K - 5 Gosub GETPRNTAGE,GETPRNTAGE,GETPRNTAGE,GETPRNTAGE,GETPRNTAGE
! - On K - 10 Gosub GETPRNTCRED,GETMINAMT,GETDETFLAG
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
! - L_1200: Rem set up
! - INVFLAG = 0;CMFLAG = 0
! - For X = 0 To 6
! -   If D9[X] Let INVFLAG = 1
! - Next X
! - If D9[7] Let CMFLAG = 1
! - If Not(INVFLAG) And Not(CMFLAG)
! -   Print @0,23;'CL RB';"No columns selected to print transactions ";
! -   Signal 3,30
! -   Goto L_1070
! - End If 
!
! Start Processing
If SORTOPT = 1
  K1$ = CUST[0] Using "######";K3$ = CUST[1] Using "######"
  CHAN = 3;D1 = 1
End If 
If SORTOPT = 2
  K1$ = SNAME$;K3$ = ENAME$
  CHAN = 3;D1 = 2
End If 
If SORTOPT = 3
  CHAN = 9;D1 = 1
  Gosub L_10000
  K1$ = " ",K1$
End If 
iF SORTOPT=4
  CHAN = 9;D1 = 1
  Gosub L_10000
  K1$ = " ",K1$
ENDIF
L_1900: Rem start here
! - If Not(SCRPRT)
! -   Print @0,22;'CE';"Printing, please wait...";
! - End If 
If DETFLAG
  Gosub CLEARARSRT
End If 
! - If Err 0 Gosub ERR_ESCAPE
! - If L9 = 22 Print 'CS'
L = 99 \ V9 = 0 \ PCTR = 0
BREAK$ = "   "
Search #CHAN,2,D1;K1$,R3,E 
If Not(E) Goto L_2010
L_2000: 
Search #CHAN,3,D1;K1$,R3,E 
If E Goto L_4000
L_2010: 
If CHAN <> 9 If K1$[1,Len(K3$)] > K3$ Goto L_4000
K7$ = " ",K7$
If CHAN = 9 Let K7$[1,6] = K1$[4,9]
If D1 = 2 Let K7$[1,6] = K1$[15,20]
If CHAN = 3 If D1 = 1 Let K7$[1,6] = K1$[1,6]
CNA0$ = " ",CNA0$;CN$=" ",CN$
PHONE$ = " ",PHONE$
Search #7,2,1;K7$,R7,E
If E = 0
	Mat Read #7,R7,128;CNA0$;
	Mat read #7,r7,436;cn$;
End If 
Mat Read #3,R3,0;C2$;
If CNA0$[1,1] <> "" If CNA0$[1,6] <> "      "
  C2$[1,20] = CNA0$[1,20]
End If 
If CNA0$[21,21] <> "" If CNA0$[21,26] <> "      "
  PHONE$[1,20] = CNA0$[21,40]
Else 
  PHONE$[1,1] = "("
  PHONE$[2,4] = C2$[21,23]
  PHONE$[5,5] = ")"
  PHONE$[6,8] = C2$[24,26]
  PHONE$[9,9] = "-"
  PHONE$[10,13] = C2$[27,30]
End If 
Mat Read #3,R3,30;C$;
Mat Read #3,R3,388;C3$;
Mat Read #3,R3,142;C1;
Read #3,R3,194;C7;
Mat Read #3,R3,210;C3;
MAT READ #3,R3,544;CFIN;
MAT READ #3,R3,412;OPENORD;
MAT READ #3,R3,668;CREDLIM;
let custname$=c$[1,30]
if ucase$(CN$[1,1])="A" let custname$="*"+c$[1,30]
if ucase$(CN$[1,1])="S" let custname$="*"+c$[1,30]
Gosub L_2800
GNDCRD = GNDCRD + CRDTOT
K9$ = C1[1] Using "######" \ K9$[7] = ""
Search #4,2,1;K9$,V1,E 
If Not(E) Goto L_2090
If S9[0] = 1 Goto L_2000
If C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1] = 0 If C3[1] = 0 Goto L_2000
L_2090: K9$ = C1[1] Using "######"
If CHAN = 9 If K1$[1,3] <> BREAK$ Let L = 99
If CHAN = 9 If L = 99 If BREAK$ <> "   " Gosub L_4800
if j8<>0
	ARTERM$ = " ",ARTERM$
	If C7 = 0
		ARTERM$ = "CASH SALE      "
	Else 
		If C7 > 0 And C7 <= 99
			Read #50,C7,0;ARTERM$;
		End If 
	End If 
	gosub PRNTCUSTNAME: !Rem "
endif
BREAK$ = K1$[1,3]
If L > L9 Gosub L_5800
F5 = 0 \ Gosub L_2200
If Not(F5)
  Gosub L_4715
  Goto L_2000
End If 
If Not(MINDOL) Goto L_2125 Else Let FLAG = 0
For X = 0 To 7
  If T9[X,2] Let FLAG = 1
Next X
If Not(FLAG) If T9[8,2] <= MINDOL
  Gosub L_4715
  Goto L_2000
End If 
L_2125: Rem! get terms
ARTERM$ = " ",ARTERM$
If C7 = 0
  ARTERM$ = "CASH SALE      "
Else 
  If C7 > 0 And C7 <= 99
! -     try Read #50,C7,0;ARTERM$; else ARTERM$=str$(C7)," not found",Blank$
    Read #50,C7,0;ARTERM$;
  End If 
End If 
Gosub L_4500
If DETFLAG
  Print #0;""
  KEYASRT$ = " ",KEYASRT$
SRCHAR: Rem search ar sort file
  Search #CH_ASRT,3,1;KEYASRT$,R4,E 
  If E = 2 Goto ENDSRCHAR
  Mat Read #4,R4,0;A2;
  Mat Read #4,R4,24;A3;
  Mat Read #4,R4,108;A3$;
  Mat Read #4,R4,154;A4;
  Mat Read #4,R4,256;A4$;
  Mat Read #4,R4,316;ARREF;
  CTAR = A3[0] - A3[1] - A3[2]
  TYPE = Int(Fra(A2[3]) * 100)
  If TYPE > 5 Let CTAR = - (CTAR)
  S8 = KEYASRT$[1,2]
  If (L + 1) > L9 if J8=0
    Gosub L_5800
    Print #0;"\15\";K9$;"  ";CUSTNAME$[1,30];" (cont.)"
    L = L + 1
  End If 
  L = L + 1
  Gosub PRNTDETAIL
  Goto SRCHAR
ENDSRCHAR: Rem end print customer detail transactions
  Gosub CLEARARSRT
End If 
Gosub L_4550
Goto L_2000
!
L_2200: Rem "============================= get ar for 1 customer
K4$ = K9$
L_2210: Search #4,3,1;K4$,R4,E 
If E Return 
If K4$[1,6] > K9$ Return 
Mat Read #4,R4;A2;
Mat Read #4,R4,24;A3;
If Not(A3[0] - A3[1] - A3[2]) Goto L_2210
Mat Read #4,R4,124;A0;
If A0[3] < W1[0] Or A0[3] > W1[1] Goto L_2210
If A0[5] < DIV[0] Or A0[5] > DIV[1] Goto L_2210
Mat Read #4,R4,154;A4;
Mat Read #4,R4,316;ARREF;
S1[2] = Int(100 * Fra(A2[3]))
If INVFLAG If CMFLAG Goto L_2320
If S1[2] >= 1 If S1[2] <= 5 If INVFLAG = 1 Goto L_2320
If S1[2] >= 6 If S1[2] <= 9 If CMFLAG = 1 Goto L_2320
Goto L_2210
L_2320: AGE[1] = 0 \ Gosub L_3000
If MINDOL If ((A3[0] - A3[1] - A3[2]) < MINDOL And Int(AGE[1]) > MAXDAY) Goto L_2210
If S1[2] > 5 Let A3 = 0 - A3 \ A3[1] = 0 - A3[1] \ A3[2] = 0 - A3[2]
If Not(D9[7]) If S1[2] > 5 Goto L_2380
Gosub L_2700
T9[S8,2] = T9[S8,2] + (A3 - A3[1] - A3[2])
L_2380: T9[8,2] = T9[8,2] + (A3 - A3[1] - A3[2])
T9[8,3] = T9[8,3] + (A3 - A3[1] - A3[2])
Goto L_2210
!
L_2700: Rem PUT IN BUCKET
S8 = 0
If Int(AGE[1]) >= DAYSMIN[6]
  S8 = 6
  If Not(D9[S8]) Return 1
Else 
  For X = 1 To 5
    If Int(AGE[1]) >= DAYSMIN[X] And Int(AGE[1]) <= DAYSMAX[X]
      S8 = X
      Goto ENDGETBUCK
    End If 
  Next X
  S8 = 0
End If 
ENDGETBUCK: Rem we have a bucket
If Not(D9[S8]) Return 1
If DETFLAG
  KEYASRT$ = " ",KEYASRT$;KEYASRT$[1,2] = S8 Using "##"
  KEYASRT$[3] = K4$
  Search #CH_ASRT,4,1;KEYASRT$,R4,E
  If E Let e$ = "syserrorfile 316g sortfile mode (m)=4 keyno (k)=1 r=",R4," e=",e," keyval (k$)=",KEYASRT$ \ error 10000
End If 
F5 = 99
Return 
!
L_2800: K5$ = " ",K5$ \ CRDTOT = 0
K5$ = C1[1] Using "######"
L_2820: Search #5,3,2;K5$,R5,E 
If E Goto L_2910
C5 = K5$[1,6] \ If C5 <> C1[1] Goto L_2910
Mat Read #5,R5;H0; \ Mat Read #5,R5,104;H5;
If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(6) - 1 Goto L_2900
If DIV If DIV <> H5[8] Goto L_2900
If H0 >= 9 And H0 <= 11
  Mat Read #6,H0[3],8;T2
  CRDTOT = CRDTOT + T2[0]
End If 
L_2900: Goto L_2820
L_2910: Return 
!
L_3000: Rem AGING ROUTINE
If Not(A2[4]) let e$="No aging date!" \ error 10000
If (A3[0] - A3[1] - A3[2]) <= 0 Goto L_3100
If Not(D9[8]) If Int(Fra(A2[3]) * 100) > 5 Goto L_3100
X2 = A2[4] \ Gosub L_7870 \ X = D3[0]
X2 = A4[3] \ Gosub L_7840 \ A4[3] = 0
If P9$[25,25] = "Y" If A4[3] Let X = A4[3]
If Int(Fra(A2[3]) * 100) > 5 And A4[3] = 0 Let X = D3[0]
AGE[1] = 0;AGE[2] = ARDATE;AGE[3] = X;AGE[4] = 0
! - If Spc(4) > 1280 Goto L_3065
! - Swap 1,"UTAGE"
! - L_3055: Signal 2,X,AGE[0],AGE[1] \ If X <> Spc(6) Goto L_3055
! - Goto L_3070
call UTAge5(e$,P9$,AGE[],1)
If AGE[0] = 1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If AGE[0] = 2 Goto L_3100
T[1] = T[1] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[2] = T[2] + (A3 - A3[1] - A3[2])
T[3] = T[3] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[4] = T[4] + (A3 - A3[1] - A3[2])
T[5] = T[5] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[6] = T[6] + (A3 - A3[1] - A3[2])
L_3100: Return 
!
! - GETSORTOPT: J0$ = "3000 12504"
! - J2$ = "#" \ J1 = SORTOPT
! - J5$ = "Enter Sort Option  1: Customer Code,  2: Customer Name, or  3: Salesperson"
! - Gosub ISINPUT
! - If J1 < 1 Or J1 > 3 Goto GETSORTOPT
! - If J1 <> SORTOPT
! -   SLSM[0] = 0;SLSM[1] = 999
! -   CUST[0] = 0;CUST[1] = 999999
! -   SNAME$ = " ",SNAME$;ENAME$ = "z",ENAME$
! -   If J1 = 3
! -     Print @8,6;"SALESPERSON";
! -     Print Using "###";@35,6;SLSM[0];@54,6;SLSM[1];
! -   Else 
! -     Print @8,6;"CUSTOMER";
! -     If J1 = 1
! -       Print Using "######";@32,6;CUST[0];@51,6;CUST[1];
! -     Else 
! -       Print @24,6;SNAME$[1,14];@42,6;ENAME$[1,14];
! -     End If 
! -   End If 
! - End If 
! - SORTOPT = J1
! - GETCUSTRNG: Rem get customer range
! - Print @24,6;'CL';
! - If SORTOPT = 1
! - L_3300: J0$ = "3000 63206"
! -   J2$ = "######" \ J1 = CUST[0]
! -   J5$ = "Enter Starting Customer Code"
! -   Gosub ISINPUT
! -   CUST[0] = J1
! -   J0$ = "3000 65106"
! -   J2$ = "######" \ J1 = CUST[1]
! -   J5$ = "Enter Ending Customer Code"
! -   Gosub ISINPUT
! -   CUST[1] = J1
! -   If CUST[0] > CUST[1]
! -     Print @0,23;'CL RB';"Ending Customer Code Must Be Greater Than Starting";
! -     Signal 3,20 \ Goto GETCUSTRNG
! -   End If 
! - End If 
! - If SORTOPT = 2
! - GETCUSTNAMERNG: J0$ = "2 00142406"
! -   J1$ = SNAME$[1,14]
! -   J5$ = "Enter Starting Customer Name"
! -   Gosub ISINPUT
! -   SNAME$[1,14] = J$
! -   J0$ = "2 00144206"
! -   J1$ = ENAME$[1,14]
! -   J5$ = "Enter Ending Customer Name"
! -   Gosub ISINPUT
! -   ENAME$[1,14] = J$
! -   If ENAME$ < SNAME$
! -     Print @0,23;'CL RB';"Ending Name Must Be Greater Than Starting Name";
! -     Signal 3,30 \ Goto GETCUSTNAMERNG
! -   End If 
! - End If 
! - If SORTOPT = 3
! - GETSLSMRNG: Rem get slsm person
! -   J0$ = "3000 33506"
! -   J2$ = "###" \ J1 = SLSM[0]
! -   J5$ = "Enter Starting Salesperson"
! -   Gosub ISINPUT
! -   SLSM[0] = J1
! -   J0$ = "3000 35306"
! -   J2$ = "###" \ J1 = SLSM[1]
! -   J5$ = "Enter Ending Salesperson"
! -   Gosub ISINPUT
! -   SLSM[1] = J1
! -   If SLSM[0] > SLSM[1]
! -     Print @0,23;'CL RB';"Ending Salesperson Must Be Greater Than Starting";
! -     Signal 3,20 \ Goto GETSLSMRNG
! -   End If 
! - End If 
! - Return 
! - GETWHSRNG: Rem warehouse
! - L_3405: J0$ = "3000 23607"
! - J2$ = "##" \ J1 = W1[0]
! - J5$ = "Enter Starting Warehouse"
! - Gosub ISINPUT
! - W1[0] = J1
! - J0$ = "3000 25407"
! - J2$ = "##" \ J1 = W1[1]
! - J5$ = "Enter Ending Warehouse"
! - Gosub ISINPUT
! - W1[1] = J1
! - If W1[0] > W1[1]
! -   Print @0,23;'CL RB';"Ending Warehouse Must Be Greater Than Starting";
! -   Signal 3,30 \ Goto GETWHSRNG
! - End If 
! - Return 
! - GETDIVRNG: Rem division
! - J0$ = "3000 23608"
! - J2$ = "##" \ J1 = DIV[0]
! - J5$ = "Enter Starting Division"
! - Gosub ISINPUT
! - DIV[0] = J1
! - J0$ = "3000 25408"
! - J2$ = "##" \ J1 = DIV[1]
! - J5$ = "Enter Ending Division"
! - Gosub ISINPUT
! - DIV[1] = J1
! - If DIV[0] > DIV[1]
! -   Print @0,23;'CL RB';"Ending Division Must Be Greater Than Starting";
! -   Signal 3,25 \ Goto GETDIVRNG
! - End If 
! - Return 
! - GETPRNTAGE: Rem print selection of age columns
! - AGECOL = K - 4
! - J0$ = "6000 15509"
! - J0$[9,10] = (9 + AGECOL) Using "&&"
! - J2$ = "#" \ J1 = D9[AGECOL]
! - If AGECOL = 0
! -   J5$ = "Do you want to print current invoices (Y/N)"
! - Else 
! -   If AGECOL < 6
! -     M$ = DAYSMIN[AGECOL]
! -     J5$ = "Do you want to print " + M$ + "-"
! -     M$ = DAYSMAX[AGECOL]
! -     J5$ = J5$ + M$ + " days old invoices (Y/N)"
! -   Else 
! -     M$ = DAYSMIN[6]
! -     J5$ = "Do you want to print " + M$ + " + days old invoices (Y/N)"
! -   End If 
! - End If 
! - Gosub ISINPUT
! - D9[AGECOL] = J1
! - Return 
! - GETPRNTCRED: Rem print credit selection
! - J0$ = "6000 15516"
! - J2$ = "#" \ J1 = D9[7]
! - J5$ = "Do you want print open credits (Y/N)"
! - Gosub ISINPUT
! - If J1 <> D9[7]
! -   If Not(J1)
! -     Print @0,17;'CL'; \ D9[8] = 0
! -   Else 
! -     Print @8,17;"AGE CREDITS";
! -     If D9[8] Print @55,17;"Y" Else Print @55,17;"N";
! -   End If 
! - End If 
! - D9[7] = J1
! - If D9[7] = 1
! -   J0$ = "6000 15517"
! -   J2$ = "#" \ J1 = D9[8]
! -   J5$ = "Do you want to age credits (Y/N)"
! -   Gosub ISINPUT
! -   D9[8] = J1
! - End If 
! - Return 
! - GETMINAMT: Rem minimum amount
! - J0$ = "3000 74918"
! - J2$ = "#######" \ J1 = MINDOL
! - J5$ = "Will exclude open invoices that are less than or equal to this amount"
! - Gosub ISINPUT
! - If J1 <> MINDOL
! -   If Not(J1)
! -     Print @0,19;'CL'; \ MAXDAY = 0
! -   End If 
! -   If Not(MINDOL)
! -     Print @8,19;"MAXIMUM DAYS";
! -     Print Using "###";@53,19;MAXDAY;
! -   End If 
! - End If 
! - MINDOL = J1
! - If MINDOL
! -   J0$ = "3000 35319"
! -   J2$ = "###" \ J1 = MAXDAY
! -   J5$ = "Will exclude open invoices that greater than days entered"
! -   Gosub ISINPUT
! -   MAXDAY = J1
! - End If 
! - Return 
! - GETDETFLAG: Rem check to print in detail
! - J0$ = "6000 15520"
! - J2$ = "#" \ J1 = DETFLAG
! - J5$ = "Do you want to print transaction detail (Y/N)"
! - Gosub ISINPUT
! - DETFLAG = J1
! - Return 
!
PRNTDETAIL: Rem  "
if J8 ! dx xml
	if rtrim$(tmp1$)="" gosub PRNTCUSTNAME:
	tmp$=tmp1$ ! customer heading info
	tmp$=tmp$,Int(AGE[1]) Using "----#.#",fdel$ ! age
	If rtrim$(A3$) <> "" let tmp2$=A3$[1,16] Else tmp2$=A4$[1,16]
	tmp$=tmp$,rtrim$(tmp2$),fdel$ ! descripion
	If P9$[25,25] = "Y" 
			if A4[3]<>0 
				X2 = A4[3] \ Gosub L_7700 \ tmp2$=X$[1,5]
			else
				tmp2$=""
			End If 
			tmp$=tmp$,tmp2$,fdel$ ! due date
	endif
	X2 = A2[4] \ Gosub L_7770 
	tmp$=tmp$,X$[1,8],fdel$ ! Trans date
	TYPE = Int(Fra(A2[3]) * 100)
	tmp2$=""
	if type>0 and type<10
		let tmp2$=d0$[TYPE * 3 - 2,TYPE * 3]
	endif
	tmp$=tmp$,tmp2$,fdel$ ! type
	tmp$=tmp$,ARREF[0] Using "########",fdel$ ! reference#
	For X1 = 0 To 6
			If D9[X1]<>0
				If S8 = X1
					tmp2$=(CTAR)  Using "--------.##"
				else 
					tmp2$="        .00"
				endif
				let tmp$=tmp$,tmp2$,fdel$
			endif
	Next X1	
	call addtostr(e$,rstr$,tmp$+rdel$)
	Goto ENDDETPRNT   
endif 

If A3$[1,2] <> "  " Print #0;A3$[1,14]; Else Print #0;A4$[1,14];
If P9$[25,25] = "Y" And A4[3] <> 0
  X2 = A4[3] \ Gosub ISDUNPACK \ Print #0; Tab 15;X$[1,5];
End If 
X2 = A2[4] \ Gosub L_7770 \ Print #0; Tab 21;X$[1,8];
Print #0; Tab 30;D0$[TYPE * 3 - 2,TYPE * 3];
Print #0; Using "########"; Tab 34;ARREF[0];
POS_ = 40
For X1 = 0 To 6
  If D9[X1]
    If S8 = X1
      Print #0; Using P1$; Tab (POS_);CTAR
      Goto ENDDETPRNT
    Else 
      POS_ = POS_ + 10
    End If 
  End If 
Next X1
ENDDETPRNT: Rem end detail print
Return 
!
PRNTCUSTNAME: Rem "
LET CustNAME$=c$[1,30]
IF ucase$(CN$[1,1])="A" let custname$="*"+c$[1,30]
if ucase$(CN$[1,1])="S" let custname$="*"+c$[1,30]
if J8 ! dx xml
	tmp1$=K9$,fdel$,rtrim$(CUSTNAME$[1,30]),fdel$ ! cust# & name
	tmp1$=tmp1$,rtrim$(ARTERM$),fdel$ ! terms
	tmp1$=tmp1$,C1[2] using "###",fdel$,CFIN[6]using "###",fdel$ ! salesperson and account manager
	tmp1$=tmp1$,rtrim$(C2$[1,20]),fdel$,rtrim$(PHONE$),fdel$ ! contact and phone
	tmp1$=tmp1$,c1[10] using "-----##.##",fdel$ ! average pay days
	return
endif
  Print #0;K9$;"  ";CUSTNAME$[1,30];" ";C$[31,60];
If C$[61,65] <> "     " Print #0;" ";C$[61,90];
Print #0;" ";C$[91,105];", ";C$[106,107];" ";C3$[1,10];
Print #0;""
L = L + 1
Print #0; Tab 9;C2$[1,20];"(";C2$[21,23];") ";C2$[24,26];"-";C2$[27,30];
Print #0;"   STANDARD TERMS:  ";ARTERM$;
If Not(S9[0]) Print #0; Using "   AVG PAY DAYS -----##.##";C1[10] \ L = L + 1
PRNTCUST = 1
Return 
!
L_4000: Rem    BATCH TOTALS.
if j8<>0 goto outend: 
If CHAN = 9 Gosub L_4800
TOTAR = T9[6,1] + T9[5,1] + T9[4,1] + T9[3,1] + T9[2,1] + T9[1,1] + T9[0,1]
For X = 0 To 6
  If TOTAR
    PRCNTAR[X] = FNR((T9[X,1] / TOTAR) * 100)
  Else 
    PRCNTAR[X] = 0
  End If 
Next X
K1$ = " ",K1$ \ Gosub L_5800
Print #0;"\15\\15\\15\\15\"; Tab 30;"**** ACCOUNTS RECEIVABLE TOTALS ****\15\\15\\15\"
P$ = "----,---,---.##"
Print #0; Using "###"; Tab 35;DAYSMIN[6];" + DAYS......: "; Tab 55;
Print #0; Using P$;T9[6,1];
Print #0; Using "   ----.##%";PRCNTAR[6]
For X = 5 To 1 Step -1
  Print #0; Using "###"; Tab 35;DAYSMIN[X];" - ";DAYSMAX[X];" DAYS..:";
  Print #0; Using P$; Tab 55;T9[X,1];
  Print #0; Using "   ----.##%";PRCNTAR[X]
Next X
Print #0; Tab 35;"CURRENT.........: "; Tab 55;
Print #0; Using P$;T9[0,1];
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0; Tab 40;"------------"
Print #0; Tab 35;"TOTAL A/R.......: "; Tab 55;
P$ = "----,---,---.##"
Print #0; Using P$;(T9[2,1] + T9[3,1] + T9[4,1] + T9[5,1] + T9[0,1] + T9[1,1] + T9[6,1]);
If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR[0] = 0
Print #0; Using "   ----.##%";PRCNTAR[0]
T[0] = 0
If T[4] Let T[0] = T[3] / T[4]
If P9$[50,50] <> "M" Print #0; Using "AVERAGE AGE (DAYS)----#.###"; Tab 35;T[0]
If P9$[50,50] = "M" Print #0; Using "AVERAGE AGE (MONTHS)----#.###"; Tab 35;T[0]
If GNDCRD <> 0 Print #0; Using "TOTAL PENDING CREDIT --,---,---.##"; Tab 35;GNDCRD
For X0 = 0 To 3 \ For X1 = 0 To 8 \ T9[X1,X0] = 0 \ Next X1 \ Next X0
GNDCRD = 0
Goto OUTEND
!
L_4500: Rem CUSTOMER TOTALS part 1
Rem {begin srcdevl/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
!
Rem {end rtn.printmsg.i}
if j8<>0 
	If detflag<>0 let tmp1$=""
	return
endif
If C1[0] = 9
  Print #0;"\15\";K9$;"  ";CUSTNAME$[1,30];"  *  STANDARD TERMS:  ";ARTERM$;
Else 
  Print #0;"\15\";K9$;"  ";CUSTNAME$[1,30];"     STANDARD TERMS:  ";ARTERM$;
End If 
T[0] = 0
If T[2] Let T[0] = T[1] / T[2]
Print #0; Using "   AGE----#.##";T[0];
Print #0; Using P$;"       TOTAL A/R: ";T9[8,2]
Print #0;"    ";C2$[1,12];PHONE$[1,15];
Print #0;" SLSM";C1[2];
Return 
!
L_4550: Rem customer total part 2
if j8<>0
	if not(detflag)
		if rtrim$(tmp1$)="" gosub PRNTCUSTNAME:
		tmp$=tmp1$ ! customer heading info
		tmp2$=credlim Using "-------#.##"
		let tmp$=tmp$,tmp2$,FDEL$
		tmp2$=openord Using "-------#.##"
		let tmp$=tmp$,tmp2$,FDEL$
		T9[7,2] = T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] + T9[5,2] + T9[6,2]
		tmp2$=(Credlim-openord-t9[7,2]) Using "-------#.##"
		let tmp$=tmp$,tmp2$,FDEL$	
		
		S2 = 5
		X2 = 0 \ T[1] = 0 \ T[2] = 0
		For X1 = 0 To 6
			If D9[X1]<>0
				tmp2$=T9[X1,2] Using "-------#.##"
				tmp$=tmp$,tmp2$,fdel$
			endif
			T9[X1,3] = T9[X1,3] + T9[X1,2]
			T9[X1,1] = T9[X1,1] + T9[X1,2]
			T9[X1,2] = 0
		Next X1
		tmp2$=t9[7,2] Using "-------#.##"
		tmp$=tmp$,tmp2$,fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
		tmp1$=""
	endif
	goto L_4715:
endif
If DETFLAG
  Print #0; Tab 20;"Customer Total";
End If 
Print #0; Tab 40;
T9[7,2] = T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] + T9[5,2] + T9[6,2]
S2 = 5
X2 = 0 \ T[1] = 0 \ T[2] = 0
Print #0; Tab 40;
For X1 = 0 To 6
  If Not(D9[X1]) Goto L_4670
  Print #0; Using P1$;T9[X1,2];
  T9[X1,3] = T9[X1,3] + T9[X1,2]
  T9[X1,1] = T9[X1,1] + T9[X1,2]
L_4670: T9[X1,2] = 0
Next X1
Print #0; Using "-------#.##"; Tab 110;T9[7,2]
L = L + 4
If CRDTOT <> 0 Print #0; Using "TOTAL PENDING CREDIT ---,---,---.##"; Tab 17;CRDTOT
L_4715: For X1 = 0 To 8 \ T9[X1,2] = 0 \ Next X1
T[1] = 0 \ T[2] = 0
Return 
!
L_4800: Rem ================================== "subtotal for salesman
if j8<>0 goto L_4915: 
Print #0;""
IF SORTOPT=3
	Print #0; Tab 9;"TOTAL FOR SALESMAN ";BREAK$;":";
ELSE
	Print #0; Tab 9;"TOTAL FOR ACCT MGR ";BREAK$;":";
endif
T[0] = 0
If T[6] Let T[0] = T[5] / T[6]
Print #0; Using "AGE----#.##"; Tab 75;T[0];
Print #0; Using P$; Tab 93;"TOTAL A/R: ";T9[8,3]
T9[7,3] = T9[0,3] + T9[1,3] + T9[2,3] + T9[3,3] + T9[4,3] + T9[5,3] + T9[6,3]
Print #0; Tab 40;
For X1 = 0 To 6
	If Not(D9[X1]) Goto L_4910
	Print #0; Using P1$;T9[X1,3];
	T9[X1,3] = 0
L_4910: Next X1
Print #0; Using "-------#.##"; Tab 110;T9[7,3];
L_4915: ! clear toto
T[5] = 0 \ T[6] = 0
T9[7,3] = 0 \ T9[8,3] = 0
Return 
!
! - L_5600: Rem screen display
! - Print 'CS';@0,0;"-mx316g-"; Tab 27;"AGED TRIAL BALANCE SELECTABLE AGING COLUMNS";
! - If Not(S9[0])
! -   Print @0,2;'BR';"CURRENT FILE";'ER';
! - Else 
! -   Print @0,2;'BR';"FROZEN FILE ";'ER'; Tab 15;"AGED AS OF: ";ARDATE$;
! - End If 
! - Print @5,4;"1> SORT OPTION  : "; Tab 30;"1: Cust Code,  2: Cust Name,  3: Salesperson ";
! - Print @29,5;'BR';"STARTING";'ER';@49,5;'BR';"ENDING";'ER';
! - If SORTOPT <> 3
! -   Print @8,6;"CUSTOMER";
! - Else 
! -   Print @8,6;"SALESPERSON";
! - End If 
! - Print @5,7;"2> WAREHOUSE";
! - Print @5,8;"3> DIVISION";
! - Print Using "### DAYS";@5,9;"4> PRINT CURRENT INVOICES TO ";DAYSMAX[0];
! - For X = 1 To 5
! -   Print Using "#> PRINT ";@5,(X + 9);(X + 4);
! -   Print Using "###";DAYSMIN[X];"-";DAYSMAX[X];" DAYS OLD INVOICES";
! - Next X
! - Print Using "###";@4,15;"10> PRINT ";DAYSMIN[6];"+ DAYS OLD INVOICES";
! - Print @4,16;"11> PRINT OPEN CREDITS";
! - If D9[7]
! -   Print @8,17;"AGE CREDITS";
! - End If 
! - Print @4,18;"12> MINIMUM AMOUNT";
! - If MINDOL
! -   Print @8,19;"MAXIMUM DAYS ";
! - End If 
! - Print @4,20;"13> PRINT DETAIL ";
! - Return 
! - L_5700: Rem DISPLAY SCREEN VARIABLES
! - Print Using "#";@25,4;SORTOPT;
! - If SORTOPT = 1
! -   Print Using "######";@32,6;CUST[0];@51,6;CUST[1];
! - End If 
! - If SORTOPT = 2
! -   Print @24,6;SNAME$[1,14];@42,6;ENAME$[1,14];
! - End If 
! - If SORTOPT = 3
! -   Print Using "###";@35,6;SLSM[0];@53,6;SLSM[1];
! - End If 
! - Print Using "##";@36,7;W1[0];@54,7;W1[1];
! - Print Using "##";@36,8;DIV[0];@54,8;DIV[1];
! - For X = 0 To 7
! -   Print @55,(X + 9);
! -   If D9[X] Print "Y"; Else Print "N";
! - Next X
! - If D9[7]
! -   Print @55,17;
! -   If D9[8] Print "Y"; Else Print "N";
! - End If 
! - Print Using "#######";@49,18;MINDOL;
! - If MINDOL
! -   Print Using "###";@53,19;MAXDAY;
! - End If 
! - Print @55,20; \ If DETFLAG Print "Y" Else Print "N"
! - Return 
!
L_5800: Rem HEADING ROUTINE
IF J8<>0 RETURN
If V9 = 0 Goto L_5860
If L9 <> 22 Goto L_5850
HEADMORE: Rem check for more
! - Print @0,23;'CL';"Press  <CR>: continue  E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Gosub L_9040
! - If J1$ <> "" Goto HEADMORE
! - Print 'CS'
L_5850: Print #0;"\14\"
L_5860: V9 = V9 + 1
Print #0;"-mx316g-";
Print #0; Tab 10;ARDATE$; Tab (66 - Int(Len(CNAME$) / 2));CNAME$; Tab 100;"PAGE";V9
Print #0; Tab 2;Msc$(3);
Print #0; Tab 49;"A G E D   T R I A L   B A L A N C E   S U M M A R Y"
If S9[0] Print #0; Tab 2;"FROZEN FILE"; Else Print #0; Tab 2;"CURRENT FILE";
If D9[7]
  Print #0; Tab 17;"PRINT ";
  If D9[8] Print #0;"& AGE OPEN CREDITS";
  If Not(D9[8]) Print #0;"OPEN CREDITS IN CURRENT";
End If 
Print #0; Tab 49;D2$;": ";
Print #0; Using "##";W1[0];" THRU ";W1[1];
Print #0;"   DIVISION: ";
Print #0; Using "###";DIV[0];" THRU ";DIV[1]
Print #0; Tab 2;"AGED BY: "; \ If P9$[25,25] = "I" Print #0;"INVOICE DATE"; Else Print #0;"DUE DATE";
Print #0;" BY "; \ If P9$[50,50] = "D" Print #0;"DAYS"; Else Print "MONTHS";
If Not(MINDOL) And Not(MAXDAY) Goto L_5938
Print #0; Tab 47;"EXCLUDE IF OVER ";Str$(MAXDAY);" DAYS AND UNDER $";Str$(MINDOL);
L_5938: Print #0;""
If CHAN = 9 
	If rtrim$(K1$[1,3])<>""
		if sortopt=3 Print #0; Tab 2;"FOR SALESMAN:";K1$[1,3]
		if sortopt=4 Print #0; Tab 2;"FOR ACCT MGR:";K1$[1,3]
	ENDIF
ENDIF
If CHAN = 9 Let L = 8 Else Let L = 7
If DETFLAG
  If P9$[25,25] = "Y"
    Print #0; Tab 15;"DUE";
  End If 
  Print #0; Tab 21;"INV DATE";
  Print #0; Tab 30;"TYP";
  Print #0; Tab 34;"TRANS#";
End If 
Print #0; Tab 40;
If D9[0] Print #0;"  CURRENT ";
For X = 1 To 5
  If D9[X] Print #0; Using "###";" ";DAYSMIN[X];"-";DAYSMAX[X];"DY";
Next X
If D9[6]
  Print #0; Using "####+ DAYS";DAYSMIN[6];
End If 
Print #0; Tab 110;"     TOTAL"
Return 
!
Rem {begin call.input.i}
! - ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
! - Call "Input",J1,J$,J0$,J1$,J4$,J5$
! - Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
L_7700: Rem  *DATE  X2 TO X$  V1.0 ! yymmdd
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_7770: Rem! DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 

L_10000: Rem "=================================== sort by slsm or acct manager
PCTR = 0
! - Print @0,22;'CE';"Sorting...please wait";
K1$ = " ",K1$
L_10010: Search #9,3,1;K1$,R3,E 
If E Goto L_10025
Search #9,5,1;K1$,R3,E 
If E Let e$ = "syserrorfile 316g sortfile mode (m)=5 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",K1$ \ error 10000
Goto L_10010
L_10025: K1$ = " ",K1$
L_10030: Search #3,3,1;K1$,R3,E 
If E Return 
Rem {begin srcdevl/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
IF SORTOPT=3
Mat Read #3,R3,142;C1;
If C1[2] < SLSM[0] Goto L_10030
If C1[2] > SLSM[1] Goto L_10030
K9$ = " ",K9$;K9$[1,3] = C1[2] Using "###";K9$[4] = K1$
ELSE
	IF SORTOPT=4
		MAT READ #3,R3,544;CFIN;
		IF CFIN[6]<ACCTMGR[0] GOTO L_10030:
		if CFIN[6]>ACCTMGR[1] GOTO L_10030:
		K9$ = " ",K9$;K9$[1,3] = cfin[6] Using "###";K9$[4] = K1$
	endif
endif
Search #9,4,1;K9$,R3,E 
If E Let e$ = "syserrorfile 316g sortfile mode (m)=4 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_10030
CLEARARSRT: Rem clear ar srtfiles
KEYASRT$ = " ",KEYASRT$
CLRARSRT: 
Search #CH_ASRT,3,1;KEYASRT$,REC_ASRT,E 
If E = 2 Return 
Search #CH_ASRT,5,1;KEYASRT$,REC_ASRT,E 
If E Let e$ = "syserrorfile 316g sortfile mode (m)=5 keyno (k)=1 r=",REC_ASRT," e=",e," keyval (k$)=",KEYASRT$ \ error 10000
Goto CLRARSRT
Return 
!
! - DEFSAVE: Rem save defaults
! - RETVAL$ = " ",RETVAL$
! - RETVAL$[1,1] = SORTOPT Using "#"
! - If SORTOPT = 1 ! customer code
! -   RETVAL$[2,7] = CUST[0] Using "######"
! -   RETVAL$[16,21] = CUST[1] Using "######"
! - End If 
! - If SORTOPT = 2 ! customer name
! -   RETVAL$[2,15] = SNAME$[1,14]
! -   RETVAL$[16,29] = ENAME$[1,14]
! - End If 
! - If SORTOPT = 3 ! saleman code
! -   RETVAL$[2,4] = SLSM[0] Using "###"
! -   RETVAL$[16,18] = SLSM[1] Using "###"
! - End If 
! - RETVAL$[30,31] = W1[0] Using "##"
! - RETVAL$[32,33] = W1[1] Using "##"
! - RETVAL$[34,35] = DIV[0] Using "##"
! - RETVAL$[36,37] = DIV[1] Using "##"
! - RETVAL$[38,40] = DAYSMAX[0] Using "###"
! - RETVAL$[41,43] = DAYSMAX[1] Using "###"
! - RETVAL$[44,46] = DAYSMAX[2] Using "###"
! - RETVAL$[47,49] = DAYSMAX[3] Using "###"
! - RETVAL$[50,52] = DAYSMAX[4] Using "###"
! - RETVAL$[53,55] = DAYSMAX[5] Using "###"
! - RETVAL$[56,58] = DAYSMIN[1] Using "###"
! - RETVAL$[59,61] = DAYSMIN[2] Using "###"
! - RETVAL$[62,64] = DAYSMIN[3] Using "###"
! - RETVAL$[65,67] = DAYSMIN[4] Using "###"
! - RETVAL$[68,70] = DAYSMIN[5] Using "###"
! - RETVAL$[71,73] = DAYSMIN[6] Using "###"
! - RETVAL$[74,74] = D9[0] Using "#"
! - RETVAL$[75,75] = D9[1] Using "#"
! - RETVAL$[76,76] = D9[2] Using "#"
! - RETVAL$[77,77] = D9[3] Using "#"
! - RETVAL$[78,78] = D9[4] Using "#"
! - RETVAL$[79,79] = D9[5] Using "#"
! - RETVAL$[80,80] = D9[6] Using "#"
! - RETVAL$[81,81] = D9[7] Using "#"
! - RETVAL$[82,82] = D9[8] Using "#"
! - RETVAL$[83,90] = MINDOL Using "########"
! - RETVAL$[91,94] = MAXDAY Using "####"
! - RETVAL$[95,95] = DETFLAG Using "#"
! - Return 
! - DEFSAVEAGE: Rem save age days defaults
! - RETVAL$ = " ",RETVAL$
! - RETVAL$[38,40] = DAYSMAX[0] Using "###"
! - RETVAL$[41,43] = DAYSMAX[1] Using "###"
! - RETVAL$[44,46] = DAYSMAX[2] Using "###"
! - RETVAL$[47,49] = DAYSMAX[3] Using "###"
! - RETVAL$[50,52] = DAYSMAX[4] Using "###"
! - RETVAL$[53,55] = DAYSMAX[5] Using "###"
! - RETVAL$[56,58] = DAYSMIN[1] Using "###"
! - RETVAL$[59,61] = DAYSMIN[2] Using "###"
! - RETVAL$[62,64] = DAYSMIN[3] Using "###"
! - RETVAL$[65,67] = DAYSMIN[4] Using "###"
! - RETVAL$[68,70] = DAYSMIN[5] Using "###"
! - RETVAL$[71,73] = DAYSMIN[6] Using "###"
! - Return 
!
OUTEND: Rem OUT
Call dxsave(0,"/tmp/md.txt!")
! print #0;"\14\"
! dx close
if not(j8)
	Call AddToStr(e$,rstr$,esdel$) !end section -- DXBLOCK               
	ReturnStatus = 0
	if message$="" let message$="Report Complete "
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)               
	Call AddToStr(e$,rstr$,WebStr$)                                      
	Call SetOutPut(e$,rstr$)         
	Call dxsave(0,"/tmp/md.txt1!")
else
! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
endif
!
try call dxclose() else rem
End 
!

OutendErr: ! rem out because of an error
 tmp$ = bsdel$,"316g",fdel$,rdel$
 Call addtostr(e$,rstr$,tmp$)
 Call AddToStr(e$,rstr$,esdel$) !end section -- DXBLOCK               
 ReturnStatus = 1                                                                                   
 Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)               
 Call AddToStr(e$,rstr$,WebStr$)                                      
 Call SetOutPut(e$,rstr$)                                             
END

! - If L9 <> 22 Goto L_9030
! - ENDMORE: Rem end ask to continue
! - Print @0,22;'CL';"End of Report Range.  Press  <CR>: continue  E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Goto L_9040
! - If J1$ <> "" Goto ENDMORE
! - Print #0;"\14\" \ Print 'CS'; \ Goto L_1000
! - Print 'CS'
Rem remove ar sort file
! - If Err 0 Rem
! - Close #CH_ASRT
! - ASRTFILE$ = " ",ASRTFILE$
! - ASRTFILE$ = Spc(6) Using "6/ASRTWORK&&&&"
! - If Msc(42) Let ASRTFILE$[15,17] = Msc(42) / 100 Using ".&&"
! - Call FindF(ASRTFILE$,X)
! - If X
! -   Kill ASRTFILE$
! - End If 
! - Chain "MX000C"
!
! - AGEBUCKETS: Rem get report age buckets
! - Gosub DISPAGEHEAD
! - Gosub DISPAGEDATA
! - GETAGEOPTS: Rem get options
! - Print @0,23;'CL';"Enter R: reselect all  S: Save Defaults  E: end ";
! - Input Len (16384 + 1);""J$
! - Call String(1,J$)
! - If J$ = "E"
! -   Return 
! - End If 
! - If J$ = "S"
! - ASKSAVEAGE: Print @0,23;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
! -   Input Len (16384 + 1);""Z2$
! -   Call String(1,Z2$)
! -   If Z2$ = "" Print @0,23;'CL'; \ Goto GETAGEOPTS
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASKSAVEAGE
! -   Gosub DEFSAVEAGE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "progdfltw","316gag","",77,RETVAL$,URECFLAG
! -   Print @0,23;'CL';
! -   Goto GETAGEOPTS
! - End If 
! - If J$ = "R"
! -   For W = 0 To 5
! -     Gosub GETDAYSMAX
! -   Next W
! -   Goto GETAGEOPTS
! - End If 
! - Goto GETAGEOPTS
! - GETDAYSMAX: Rem get the days
! - J0$ = "3000 33407"
! - J0$[9,10] = (7 + W) Using "##"
! - J2$ = "###" \ J1 = DAYSMAX[W]
! - If W = 0
! -   J5$ = "Enter Maximum Days for Current Period"
! - Else 
! -   J5$ = W Using "Enter Maximum Days For Print Period #"
! - End If 
! - Gosub ISINPUT
! - If J1 > (999 - (6 - W))
! -   Print @0,23;'CL RB';"Max Days Exceed the Limit";
! -   Signal 3,20
! -   Goto GETDAYSMAX
! - End If 
! - If (W)
! -   If J1 < DAYSMIN[W]
! -     Print @0,23;'CL RB';"Max Days Must Be Greater than Min Days";
! -     Signal 3,20
! -     Goto GETDAYSMAX
! -   End If 
! - End If 
! - DAYSMAX[W] = J1
! - DAYSMIN[W + 1] = J1 + 1
! - Print Using "###";@17,(8 + W);DAYSMIN[W + 1];
! - Return 
! - DISPAGEHEAD: Rem display screen heading
! - Print 'CS';@0,0;"-mx316g-"; Tab 27;
! - Print Tab 27;"Selectable Aging Report Table "
! - Print @0,7;"CURRENT";
! - For X = 1 To 6
! -   Print Using "#";@0,(X + 7);"DAYS RANGE ";X;
! - Next X
! - Print @11,5;'BR';"MIN DAYS";'ER';@32,5;'BR';"MAX DAYS";'ER';
! - Return 
! - DISPAGEDATA: Rem display screen data
! - For X = 0 To 6
! -   If X > 0 Print Using "###";@17,(7 + X);DAYSMIN[X];
! -   If X < 6 Print Using "###";@34,(7 + X);DAYSMAX[X];
! - Next X
! - Return 
!

!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
