! loadsave -w -n 100,10 -o prog/dxport/401.dl4 src/401.src

! ***** USE SERP401 *****



Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  4, 2008  12:57:37
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/mx401.src (univ2) [mary] {00636}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,TrxCo
Option Default Dialect IRIS1
Rem project to combine 401 & 402 for spicers cct 121876
Com 1%,EOY,DEBUG
If Err 0 Gosub ERR_TRAP
If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,POGLFLAG,SPO
Dim 1%,EOYMONTH,ARMONTH,MRTSFLAG,HOLIUPDATEBATMAN
Dim A$[50],G$[128],P9$[20],P60$[50],1%,S0,T0,2%,S1,S2,S3[1],S9[1],X$[10]
Dim F$[16],M$[50],KEYMRTS$[30]
E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Gosub L_6000
F$ = COID Using "1/debug401#"
If COID > 9 Let F$ = COID Using "1/debug401##"
Call FindF(F$,K)
If K Kill F$
Build #0,F$
M$ = " ",M$
Write #0,0;M$;
Close #0
Open #0,F$
Mat Read #1,19,50;P9$;
Read #1,51,72;EOYMONTH;
Read #1,0,120;ARMONTH;
Read #1,52,32;S1;
Read #1,52,20;S2;
Read #1,51,76;SPO;
Read #1,51,88;POGLFLAG;
G$ = "JANUARY  FEBRUARY MARCH    APRIL    MAY      JUNE     "
G$[55] = "JULY     AUGUST   SEPTEMBEROCTOBER  NOVEMBER DECEMBER "
L_900: Print 'CS';@0,0;"-mx401-";@20,0;"SALES END OF MONTH";
Print 'CR RB BB';"NOTE:";'EB';" IT IS STRONGLY RECOMMENDED THAT ";
Print "YOU DO A BACKUP OF YOUR COMPUTER"
Print "        BEFORE THIS PROGRAM IS RUN, ";
Print " AND KEEP THE TAPES AS HISTORY.";'CR'
Print 'CR';"THIS PROGRAM CLEARS MTD SALES FIELDS FOR:"
Print 'CR';"                                CUSTOMER FILE";
Print 'CR';"                                SALESMAN FILE";
Print 'CR';"                                PRODUCT FILE (INCLUDING NON-STOCKS)";
Print 'CR';"                                TAX FILE      ";
Print 'CR';"                                VENDOR FILE   ";
Print 'CR CR';
Print 'CR';"THIS WILL ALSO PREPARE THE WAREHOUSE ANALYSIS FILE FOR NEXT MONTH "
L_1040: Print 'CR CR MU CL';"HAVE ALL REPORTS BEEN RUN?  (YES/N/HELP) ";
DEBUG = 1
Input ""A$
Call String(1,A$)
If A$[1,1] = "N" Goto OUTEND
If A$[1,4] = "HELP" Goto L_4000
If A$ <> "YES"
  Call "errmsg","Invalid Response"
  Goto L_900
End If 
If DEBUG
  M$ = F$
  Mat Write #0,0;M$
End If 
Read #1,0,120;S0;
Rem                    COMMENTED SECTION
Rem                END COMMENTED SECTION
EOY_QUESTION: If ARMONTH <> EOYMONTH Let EOY = 0 \ Goto L_1080
Call "msgbox","END OF FISCAL YEAR. IF THIS IS NOT CORRECT, PLEASE CALL UNIVERSAL!"
Print @0,20;"DO YOU WANT TO RUN *COMBINED MONTH/YEAR* END NOW?"
Print "  (YES/<N>) ";
Input ""A$ \ Print ""
If A$ <> "YES"
  Print @1,20;"           MONTH AND YEAR END PROCESSING ABORTED         "
  Print "RE-RUN 401 WHEN YOU ARE READY TO CLOSE THE MONTH AND YEAR"
  Print "    IF IT IS NOT YOUR FISCAL YEAR-END, CALL UNIVERSAL"
  Input "   PRESS <CR> TO EXIT "A$
  Goto OUTEND
End If 
LETSDOYEAREND: Rem
EOY = 1
Gosub CHECK_HOLIDAYS_UPDATED
L_1080: Read #1,0,120;S0;
Print @0,21;"IS IT OK TO CLEAR M-T-D TOTALS FOR ";G$[S0 * 9 - 8,S0 * 9];'CE';
Print "  (YES/N) ";
Input ""A$
Call String(1,A$)
If A$[1,1] = "N" Goto OUTEND
If A$ <> "YES"
  Call "msgbox","Invalid Response"
  Goto L_1080
End If 
CONTINUE_QUESTION: Print @0,23;"Enter  C: Continue,  E: Exit ";'CE';
Input ""A$
Call String(1,A$)
If A$[1,1] = "E" Goto OUTEND
If A$[1,1] <> "C"
  Call "msgbox","Invalid Response"
  Goto CONTINUE_QUESTION
End If 
If Err 0 Gosub ERR_TRAP
If P9$[17,17] = "Y" Gosub L_2000
Mat Read #1,60,50;P60$; \ If P60$[9,9] = "L" Gosub L_2100
Gosub CHKMRTS
If DEBUG
  M$ = " READING A/R INTERFACE "
  Mat Write #0,1;M$
End If 
Print 'CR';"PLEASE WAIT FOR NEXT SELECTION ";
Signal 3,0
If DEBUG
  M$ = "About to chain mx401a "
  Write #0,2;M$
End If 
If P9$[17,17] = "Y"
  If POGLFLAG <> 0 And SPO <> 0
    Call "mx013gl"
  End If 
End If 
Chain "MX401A"
L_1180: A$ = "\\"
P = T0
Call TrxCo(P,A$,V)
Signal 3,15
If Not(V) Goto L_1270
C1 = C1 + 1
If C1 > 5 Goto L_1300
Signal 3,10
Goto L_1180
L_1270: A$ = "RUN MX401A"
Call TrxCo(T0,A$,V)
If Not(V) Goto L_8900
L_1300: Print 'CR';"CRUNCH PORT UNAVAILABLE ";'RB';
Signal 3,15
Goto OUTEND
L_2000: Rem CHECK MONTHLY C/R
If S0 = S1 Goto L_2050
If P9$[17,17] = "Y"
  Print @0,22;'CE RB';"MONTHLY CASH RECEIPTS (320) HAS NOT BEEN ACCEPTED FOR THIS MONTH!!";
Else 
  Print @0,22;'CE RB';"MONTHLY CASH JOURNAL (306) HAS NOT BEEN ACCEPTED FOR THIS MONTH!!";
End If 
Goto L_2070
L_2050: If P9$[17,17] <> "Y" Goto L_2080
If S0 = S2 Goto L_2080
Print @0,22;'CE RB';"MONTHLY ACCTS RECVBLE (405) HAS NOT BEEN ACCEPTED FOR THIS MONTH!!";
L_2070: Signal 3,40 \ Goto OUTEND
L_2080: Rem manufacturing
If P9$[2,2] = "M"
  Mat Read #1,52,48;S3;
  If S3[0] If S3[1] <> S0
    Print @0,22;'CE RB';"Monthly G/L MFG Report (885) has not been accepted for this month!!";
    Signal 3,40 \ Goto OUTEND
  End If 
End If 
Return 
L_2100: Rem LIFO RESERVE
Mat Read #1,60,50;P60$; \ If P60$[9,9] <> "L" Goto L_2130
Mat Read #1,52,36;S9; \ If Not(S9[0]) Goto L_2130
If DEBUG
  M$ = " Lifo Reserve "
  Mat Write #0,34;M$
  M$ = P60$[9,9]
  Mat Write #0,35;M$
  M$ = S9 Using "##"
  Mat Write #0,36;M$
End If 
If S0 = S9[1] Goto L_2130
Print @0,22;'CE RB';"LIFO RESERVE (403) HAS NOT BEEN PROCESSED FOR THIS MONTH";
Signal 3,40 \ Goto OUTEND
L_2130: Return 
L_4000: Rem HELP/CHECKLIST
Print @0,1;'CE';
Print @20,2;"CHECK LIST OF PROGRAMS THAT SHOULD BE RUN"
Print @10,4;"ALL INVOICES & CREDIT MEMOS JOURNALED & ACCEPTED - CHECK IT IN 229"
Print @10,5;"ALL CASH RECEIPTS ENTERED, JOURNALED & ACCEPTED - 304,305"
Print @10,6;"ALL DIRECT A/R ENTERED, JOURNALED & ACCEPTED - 313,315"
Print @10,7;"ALL STOCK TRANSACTIONS JOURNALED & ACCEPTED - 324,373,374";
If P9$[2,2] = "M" Print ",882,883"
Print @0,8;"IF APPLICABLE, SERVICE CHARGES RUN, JOURNALED & ACCEPTED - 404,313,315"
Print @10,9;"STATEMENTS, AND ALL OTHER NEEDED REPORTS"
Print @20,11;"THESE REPORTS MUST BE RUN & CLEARED"
Print @10,13;"450 - SALESMAN COMMISSION REPORT"
Print @10,14;"460 - SALESMAN COMMISSION UPDATE"
Print @30,20;"PRESS <CR> TO CONTINUE ";
Input ""A$ \ Goto L_900
L_6000: Rem CRUNCH PORT FLAG
Read #1,1,2;T0
If T0 Goto L_6070
T0 = 401
Write #1,1,2;T0;
Read #1,1;T0;
Return 
L_6070: Read #1,1,2;T0;
!Print 'CR RB';"CRUNCH PORT IN USE!";
!Signal 3,10
Goto L_8950
CHECK_HOLIDAYS_UPDATED: Rem --------------------------------
Mat Read #1,179,482;HOLIUPDATEBATMAN;
If DEBUG
  M$ = "Reading Holiupdatebatman "
  Mat Write #0,37;M$
End If 
If Not(HOLIUPDATEBATMAN)
  Call "msgbox","THE HOLIDAY FILE HAS NOT BEEN UPDATED. USE 914 OPTION H TO UPDATE THE FILE WHEN YOU CAN."
  Input @0,23;"PRESS 'E' TO EXIT, <CR> TO CONTINUE PROCESSING ";A$
  If A$ = "E" Or A$ = "e" Goto OUTEND
End If 
Return 
CHKMRTS: Rem check if all misc rts entries have been accepted
Mat Read #1,20,0;MRTSFLAG;
If MRTSFLAG
  Print @0,22;'CE';"Miscellaneous Receipts To Stock in Journal/Accept Process";
  Print @0,23;'CL RB';"End of Period Process Aborted!  Press <CR> to Exit ";
  Input Len (16384 + 1);""A$
  Goto OUTEND
End If 
If Err 0 Rem
Close #99
If Err 0 Gosub ERR_TRAP
F$ = COID Using "6/MISCRTS#"
Open #99,F$
KEYMRTS$ = " ",KEYMRTS$
Search #99,3,1;KEYMRTS$,R,E
If E = 2
  MRTSENT = 0 \ Write #1,20,174;MRTSENT;
  Close #99
  Return 
End If 
If E Gosub ERR_SEARCH
Print @0,21;'CE';"Misc Receipt to Stock Entries Need to be accepted.";
Print @0,22;'CL';"Please Process 324 Misc Receipt Journal ";
Print @0,23;'CL';"End of Period Process Aborted! Press <CR> to Exit ";
Input Len (16384 + 1);""A$
Goto OUTEND
OUTEND: Rem L_8000: ! ABORT RUN
T0 = 0
Write #1,1,2;T0;
L_8900: Rem OUTTA HERE
Print 'CS'
If DEBUG
  M$ = "401 aborted"
  Mat Write #0,39;M$
End If 
Close #0
L_8950: Rem OUTTA HERE
Close 
Chain "MX000"
Stop 
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) = 99 ! "escape hit/return back
  Print 'RB ML';" ";'ML';
  Return -1
End If 
If Spc(8) = 123 ! "record lock
  Escdis 
  Window Open @0,0; Size 30,3; Using ""
  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
  Signal 3,50
  Window Close 
  Escclr 
  Return -1
End If 
Dim 2%
Window Off 
Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
If ENUM = 157 Let CTERR = Err(8)
Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
Goto ERR_MAIN
ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
Dim 2%
Window Off 
Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
Goto ERR_MAIN
ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) <> 99 Goto ERR_TRAP
If Err 0 Rem
CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
If Err 0 Gosub ERR_TRAP
Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
Input Len 16385;""ABREQ$
Call String(1,ABREQ$)
Print @0,Msc(34) - 1;'CL';
If Err 0 Gosub ERR_ESCAPE
If ABREQ$ <> "Y"
  Print 'ML';" ";'ML';
  Return -1
End If 
Goto OUTEND
ERR_MAIN: Rem "main error handling logic
If Err 0 Rem
Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
PNAME$ = Msc$(4)
Call String(1,PNAME$)
POS_ = 1;POS1 = 0
NAMEPARSE: Rem "get program name from path
Search PNAME$[POS_],"/",POS1
If POS1
  POS_ = (POS_ + POS1)
  Goto NAMEPARSE
End If 
Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
Print "TRACE: ";'CL';
STACKLOOP: Rem "print nesting information
Print Using "<#####> ";Spc(16);
If Spc(14) Goto STACKLOOP
Print 'CR';"************************************"
Close #0
Open #0,"errorlog"
Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
Close #0
Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
Call String(2,PNAME$)
System 28,PNAME1$
Call String(5,PNAME2$)
PNAME2$ = " ",PNAME2$
PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
Call InpBuf(PNAME2$)
Stop 
Rem {end rtn.error.s}
