! >>> Program 202e
!
! description GANG PICK BY TRUCK/ZONE 
!
! loadsave -w -n 100,10 -o prog/dxport/202e.dl4 src/202e.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!

!all rights reserved. (c)copyright 2007 by: Universal Business Systems
 !
 ! *declare common dl4 intrinsic subs & functions
 Declare Intrinsic Function trim$,dateusing$,fmtof
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
 !
 ! *declare common external libs & subs & functions
 External Lib "libgeneral.lib" !general routines
 Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
 Declare External Function getmsg$,expandarray

External Lib "ubsfunc.dl4"
Declare External Function OpenFile,OpenMySQLChan
External Lib "upsws_lib.lib"
Declare External Sub AddUpdateUPSWS
 !
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR  7, 2004  17:34:02
Rem /w/papermaster/r2002//usr/acct/jliu/work/r2002/mx2/mx202e.src (univ2) [jliu] {21178}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,getglobals

Declare Sub ChkForHotStamp

!Option Default Dialect IRIS1
Rem MX202E   - GANG PICK LIST BY TRUCK/ZONE
Rem AUTHOR: TTT   FEB 20, 1989
Rem LAST UPDATE:  5/92 - ADD ORDER PRINTED OPTION
!task22069 - added "RUTHERFORD" custom code for: do not print o/t 29, 30, 31			 
! ------------------------------------------------------------------------------
! custom for xrev9 on White River
! 12/05/96 cct 94748 sls - print po# from ROH in detail  "P0$"
! ------------------------------------------------------------------------------
Com 1%,PFU1[20],CNVTU[2],UN[2],SW[20]
Com 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
Dim 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],J8,J9[2],L3[3],S9[1],Y,EUN[2],S2[1]
Dim 1%,PD1[9],N9[11],linenum,PL1[1]
DIM 1%,H3[1],upsws_ch[99]
Dim 1%,hot_stamp
Dim 2%,D8,H0[12],H5[16],L4[3],L6[5],L9[1],S5,STATUS,X,X1,CURDATE,PAGEBRK
Dim 2%,TRUCK,PT,DT3[1],JDATE,JWDATE,ordnum,tagcust
Dim 3%,J,J1,T9[20],X2,X3,X4,S7[9],L7[12],A1[7],SUNIT,W3[24],OLM[6],UNF[6]
dim 3%,whmisc2[7]
Dim hold_j$[50]
Dim DESC$[10],ZONE$[2],P9$[50],M8$[50],PRA2$[30],k31$[50]
DIM 3%,SRN[4],T2[25],R9[3],CFT,coid
Dim A$[156],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],CNAME$[30]
Dim J7$[40],ARDATE$[8],J9$[50],K1$[50],K3$[60],L6$[60],L1$[20]
Dim S1$[118],S2$[20],T2$[8],X$[20],K7$[50],K13$[60],K6$[50],W2$[16]
Dim CCD$[14],LOC$[10],TRUCK$[50],K2$[50],DELDATE$[20],P61$[256]
Dim PORT_$[26],FILE1$[16],FILE2$[26],KEY_$[130],WEEKDAY_$[10]
DIM MA$[25],K15$[9],HOLDZONE$[2],LINE_$[80],Z1$[2],CUSTOM_CUSTOMER$[30]
DIM altitem$[13],k14$[50],s3$[33],h0$[20],permloc$[18],ploc$[18]
DIM whse$[5],P0$[20]
Dim begTruck,endTruck,moreloc,locprnt
Dim 2%
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
!
 ! Dim U_TRUCK$[1000][10]
 Dim U_ZONE$[1000][10]
 Dim blockid$[100]
  !!
SW[7] = 0
PRODINFO = 1
LET LINE_$="_",LINE_$        
For J = 2 To 17
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1920","-1840","1856","-1888","-1792","-1","-1872","-1","-1728","-1 ","-1744","-208"
DATA "-1920","-1840","1856","-1888","-1792","-1","-1872","-1","-1728","-1" ,"-1744","-208","-2352","-1","-2112","-2272"
! 2-ZONE,3-FLEH,4-FLES,5-FLEL,6-PROD,8-FLET,10-CCODES,12-WHSE, 14-altitem 
Read #1,3;CNAME$;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Mat Read #1,3,172;CURDATE;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;

! Call dxget("u_custom_customer",CUSTOM_CUSTOMER$) 
Call dxget("S_USER.AppID",tmp$) \ coid = tmp$   
CUSTOM_CUSTOMER$ = UCase$(trim$(CUSTOM_CUSTOMER$)) 

sw[1]=0
if custom_customer$="OMAHA"
   ROPEN #31,"3/sordroll"+STR$(coid)                   
endif

if custom_customer$="CPC"
   let sw[1]=1
endif

If Err 0 Let J8 = Spc(8)
J8 = 0 \ J7 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
IF CUSTOM_CUSTOMER$="ACME"   
   LET J7=66 
else
   LET J7=55
endif
If J8 Let J7 = 20
debug = 0
If debug
  Dim WORK$[100]
  ch_debug = 40
  WORK$ = "/tmp/202e." + (Spc(6) Using "&&&&.") + (Tim(8) Using "&&") + (Tim(9) Using "&&") + (Tim(10) Using "&&") + (Tim(11) Using "&&") + (Tim(12) Using "&&") + (Tim(13) Using "&&")
  Build #ch_debug, + WORK$ + "!"
  Close #ch_debug
  Open #ch_debug,WORK$
  Print #ch_debug;"Starting debug log: ";(Tim(10) Using "&&") + (Tim(12) Using "&&") + (Tim(13) Using "&&")
End If 

!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!
 call dxget("U_REPRINT",tmp$) \ if tmp$ <> "" let S9[0] = 2 else S9[0] = 1 !is this a reprint (y/n/e) 
 call dxget("U_JDATE",tmp1$)  !delivery date
 call dxget("U_WH",tmp$) \ WHSE = tmp$  !warehouse
 call dxget("U_STATUS",tmp$) \  If tmp$ <> "" Let STATUS = 2 else STATUS = 1


!validations delivery date
tmp$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
J1 = tmp$
X2 = J1 \ Gosub L_7700
Gosub L_6900
WEEKDAY_$ = X$[9]
D8 = J1
X2 = D8 \ Gosub L_7820 \ if errFlag = 1 let e$ = "Invalid date !" \ error 10000
JDATE = X2
X2 = D8 \ Gosub L_7700
DELDATE$ = " ",DELDATE$ \ DELDATE$ = X$
F = Z9 + 1 \ If F < 1 or F > 7 let e$ = "Invalid date!!" \ error 10000
!!
K1$ = K2$
J1 = 90 \ J2 = 0
!validations Warehouse
If WHSE < 1 Or WHSE > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000
if custom_customer$="RUTHERFORD"
	!IF WHSE IF WHSE>99 GOTO L_1150:
	IF NOT(WHSE)
		Let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
	endif
ENDIF
If P9$[45,45] = "Y" let STATUS = 2
!!clearing sort file...
K1$ = " ",K1$
Search #9,3,1;K1$,V1,E
while not(E)
  Search #9,5,1;K1$,V1,E
  Search #9,3,1;K1$,V1,E
wend
! TRUCK handled by a range
!trucks
! K1$ = " ",K1$
! truck: Rem "thru file
! If P61$[34,34] <> "Y"
!   Search #2,3,1;K1$,V1,E 
!   If E Goto exitSortTruck
!   Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!   If T2$[F,F] <> "Y" Goto truck
! Else 
!   Search #3,3,1;K1$,V1,E 
!   If E Goto exitSortTruck
!   X2 = K1$[1,2] \ If X2 > 10 Goto exitSortTruck
!   Mat Read #3,V1,0;H0;
!   Mat Read #3,V1,78;H4;
!   Mat Read #3,V1,104;H5;
!   If H4[2] <> WHSE Goto truck
!   If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto truck
!   X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let X2 = 999999
!   If X2 > JDATE Goto truck
!   V1 = H0[2]
!   Read #4,V1,146;S5;
!   TRUCK = S5
! End If 
! J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
! Search #9,4,1;J4$,V1,E 
! Goto truck
! exitSortTruck:
! K1$ = "{" 
! TRUCKCNT = 0
! For I = 6 To 20
!   Search #9,3,1;K1$,V1,E 
!   If E Goto exitTruck
!   If K1$[1,1] <> "{" Goto exitTruck
!   U_TRUCK$[TRUCKCNT] = trim$(K1$[2])
!   TRUCKCNT = TRUCKCNT + 1
!   If I = 20 Let I = 5
! Next I
! exitTruck:
!!ZONE 
K1$ = " ",K1$
ZONE: Rem "thru file
If P61$[34,34] <> "Y"
  Search #2,3,1;K1$,V1,E 
  If E Goto exitSortZone !!
  Mat Read #2,V1,36;T2$;
  If T2$[F,F] <> "Y" Goto ZONE
  ZONE$ = K1$
Else 
  Search #3,3,1;K1$,V1,E 
  If E Goto exitSortZone !
  X2 = K1$[1,2] \ If X2 > 10 Goto exitSortZone 
  Mat Read #3,V1,0;H0;
  Mat Read #3,V1,78;H4;
  Mat Read #3,V1,84;H0$;
  Mat Read #3,V1,104;H5;
  If H4[2] <> WHSE Goto ZONE
  if custom_customer$="RUTHERFORD"
 	IF wh<>0 If H4[2]<>Whse Goto Zone: 
  else
	If H4[2]<>Whse Goto Zone:
  endif
  if custom_customer$="RUTHERFORD"
	IF h5[7]=29 or H5[7]=30 OR H5[7]=31 OR H5[7]=9 GOTO  zone
  endif
  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 or h5[7] = 9 Goto ZONE
  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let X2 = 999999
  If X2 > JDATE Goto ZONE
  V1 = H0[2]
  Mat Read #4,V1,126;S2$;
  ZONE$ = S2$[19,20]
End If 
if trim$(ZONE$) <> "" ! do not add null zones - terminates the list!
	J4$ = " ",J4$ \ J4$ = "}",ZONE$
	Search #9,4,1;J4$,V1,E
end if
Goto ZONE
exitSortZone:
ZONECNT = 0
K1$ = "}"
For I = 6 To 20
  Search #9,3,1;K1$,V1,E 
  If E Goto exitZone
  If K1$[1,1] <> "}" Goto exitZone
  U_ZONE$[ZONECNT] = trim$(K1$[2])
  ZONECNT = ZONECNT + 1
  If I = 20 Let I = 5
Next I
exitZone:

Call getglobals("blockx",0,blockid$)
 If blockid$ = "202e"

	Call env(2,"NEXTBLOCK","202e2")
	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
		
 End If

! must be 202e2

upsws_ch[4] = -1
IF P61$[40,40]="Y" ! upsws interface
	! see if we have the new MySQL tables
	! done for Mid-Atlantic
	upsws_ch[4] = OpenMySQLChan(e$)
	if upsws_ch[4] <> -1 ! MySQL database defined and flag is turned on
		! do UPS world ship MySQL style
		upsws_ch[0] = 3 ! roh
		upsws_ch[1] = 4 ! ros
		upsws_ch[2] = 8 ! rot
		upsws_ch[3] = 5 ! rolnew
		upsws_ch[5] = OpenFile(-1808) \ if upsws_ch[5] = -1 error 42 ! cust
		upsws_ch[6] = 16 ! cust shiplist 
		upsws_ch[7] = OpenFile(-720) \ if upsws_ch[7] = -1 error 42 ! cust notes
		upsws_ch[8] = 6 ! product
		upsws_ch[9] = 10 ! ccode
	end if
ENDIF

call dxget("BEG_TRUCK",tmp$) \ begTruck = tmp$
call dxget("END_TRUCK",tmp$) \ endTruck = tmp$
if tmp$ = "" endTruck = 999999
call dxget("ALLZONES", tmp$) \ allZones = tmp$

if not(allZones) ! if all zones, leave all zones in sort file
	!clearing sort file...
	K1$ = " ",K1$
	Search #9,3,1;K1$,V1,E
	While Not(E)
		Search #9,5,1;K1$,V1,E
		Search #9,3,1;K1$,V1,E
	Wend
	! TRUCK handled by a range
	! call dxget("U_TRUCKCNT",tmp$)
	!
	! TRUCKCNT = tmp$
	! for i = 0 to TRUCKCNT -1
	! 	call dxget("TRUCKS" + str$(i),tmp$)
	! 	tmp$ = "on"!!!dci2
	! 	if tmp$ <> ""  !!on
	! 		TRUCK = U_TRUCK$[i]
	! 		J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	!         Search #9,4,1;J4$,V1,E
	! 	end if
	! Next i
	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		! tmp$ = "on"!!!dci2
		if tmp$ <> ""
			ZONE$ = U_ZONE$[i] + "  "
			J4$ = " ",J4$ \ J4$ = "}",ZONE$
			Search #9,4,1;J4$,V1,E
		end if
	Next i
end if ! if not(allZones)


!!!
!Ropen #14,"PRTDFLT"
!PT = Spc(6) \ If PT And PT < Chf(14) Mat Read #14,PT,0;PD1;
!L_900: Rem ============= IS THIS A REPRINT?
!Print 'CS';@30,0;"GANG PICK LIST (BY TRUCK & ZONE)";@0,0;"MX202E";
!S9[0] = 1
!L_930:! Print @0,2;'CL';"IS THIS A REPRINT (Y/N/E) ";
!Input ""J1$ \ If J1$ = "E" Goto OUTEND
!If J1$ = "Y" Let S9[0] = 2 \ Goto L_970
!If J1$ <> "N" Goto L_930
!L_970: Rem ============== ENTER DELIVERY DATE
!Print @0,2;"ENTER DELIVERY DATE: ";'CE';
!J0$ = "50000621 2" \ J1 = CURDATE;J5$ = "ENTER DELIVERY DATE OR <CR> FOR TODAY'S DATE"
!Gosub L_7000 \ If Not(J1) Goto OUTEND
!X2 = J1 \ Gosub L_7700
!Gosub L_6900
!WEEKDAY_$ = X$[9]
!D8 = J1
!X2 = D8 \ Gosub L_7820 \ Goto L_970
!JDATE = X2
!X2 = D8 \ Gosub L_7700
!DELDATE$ = " ",DELDATE$ \ DELDATE$ = X$
!Print @36,2;WEEKDAY_$;
!F = Z9 + 1 \ If F < 1 Goto L_1120
!If F > 7 Goto L_1120
!L_1070: Print @0,4;'CE';"DATE OKAY? (Y/N/E) "; \ Input ""J$
!If J$ = "E" Goto OUTEND
!If J$ = "Y" Goto L_1130
!If J$ <> "N" Goto L_1070
!Goto L_970
!L_1120: Print @0,22;"INVALID DATE ! ";'CE'; \ Signal 3,15 \ Goto L_970
!L_1130: K1$ = K2$
!J1 = 90 \ J2 = 0
!L_1150: Rem =========== SELECT WAREHOUSE
!Print @0,4;'CL';"WAREHOUSE:";
!J5$ = "ENTER WAREHOUSE NUMBER OR <CR> FOR DEFAULT"
!J1 = PD1[2];J0$ = "3000021004";J2$ = "##"
!Gosub L_7000
!WHSE = J1
!If Not(WHSE) Or WHSE > 99 Goto L_1150
!Print @0,4;'CL';"CLEARING SORT FILE..."
!K1$ = " ",K1$
!L_1250: Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!If E Goto L_1290
!Search #9,5,1;K1$,V1,E !\ If E Gosub ERR_SEARCH
!Goto L_1250

!L_1290: Rem ============== SELECT TRUCK(S)
!L_1300: Print @0,4;'CE';"ENTER TRUCK TO PRINT OR <CR> FOR ALL TRUCKS THAT SHIP FOR THIS DATE ";
!Input ""TRUCK$
!If TRUCK$ = "" Goto L_1350
!TRUCK = TRUCK$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1300
!Gosub L_1420 \ Goto L_1700
!L_1350: Rem ================ SORT THE TRUCKS THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1370: Rem "thru file
!If P61$[34,34] <> "Y"
!  Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1460
!  Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!  If T2$[F,F] <> "Y" Goto L_1370
!Else 
!  Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1460
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1460
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WHSE Goto L_1370
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1370
!  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let X2 = 999999
!  If X2 > JDATE Goto L_1370
!  V1 = H0[2]
!  Read #4,V1,146;S5;
!  TRUCK = S5
!End If 
!Gosub L_1420 \ Goto L_1370
!L_1420: Rem INSERT SELECTED TRUCK INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 
!L_1460: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!Print @0,4;'CE';"THE FOLLOWING TRUCKS SHIP ON";WEEKDAY_$
!K1$ = "{" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1580
!  If K1$[1,1] <> "{" Goto L_1580
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1580
!  If I = 20 Let I = 5
!Next I
!L_1580: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_1700
!If J$ <> "N" Goto L_1580
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1460
!TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1580
!K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1460
!L_1700: Rem ============= SELECT ZONE(S)
!Print @0,4;'CE';"ENTER ZONE TO PRINT OR <CR> FOR ALL ZONES THAT SHIP FOR THIS DATE ";
!Input ""ZONE$
!If ZONE$[1,2] = "  " Or ZONE$ = "" Goto L_1770
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Search #2,2,1;K1$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!If E
!  Print @0,5;'RB CE';"ZONE NOT ON FILE!"
!  Signal 3,20
!  Print @0,5;'CL';
!  Goto L_1700
!End If 
!ZONE$ = K1$
!Gosub L_1840 \ Goto L_2180
!L_1770: Rem =============== SORT THE ZONES THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1790: Rem "thru file
!If P61$[34,34] <> "Y"
!  Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1950
!  Mat Read #2,V1,36;T2$;
!  If T2$[F,F] <> "Y" Goto L_1790
!  ZONE$ = K1$
!Else 
!  Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1950
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1950
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WHSE Goto L_1790
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1790
!  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ if errFlag = 1 let X2 = 999999
!  If X2 > JDATE Goto L_1790
!  V1 = H0[2]
!  Mat Read #4,V1,126;S2$;
!  ZONE$ = S2$[19,20]
!End If 
!Gosub L_1840 \ Goto L_1790
!L_1840: Rem INSERT SELECTED ZONE INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "}",ZONE$
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 
!L_1880: Rem ================ PROMPT FOR ORDERS BEEN PRINTED
!STATUS = 2 \ If P9$[45,45] = "Y" Return 
!L_1900: Print @0,22;'CE';"HAVE THE ORDERS BEEN PRINTED? (Y/N)  ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1900
!STATUS = 1 \ If J$ = "Y" Let STATUS = 2 
!Return 
!L_1950: Rem ============ DISPLAY THE ZONES THAT SHIP
!Print @0,4;'CE';"THE FOLLOWING ZONES SHIP ON";WEEKDAY_$
!K1$ = "}" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_2070
!  If K1$[1,1] <> "}" Goto L_2070
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_2070
!  If I = 20 Let I = 5
!Next I
!L_2070: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_2180
!If J$ <> "N" Goto L_2070
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1950
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1950
L_2180: Rem ============ FINISHED SELECTIONS
!Gosub L_1880
!Print @0,22;'CL';"SORTING....PLEASE WAIT...";
K1$ = " ",K1$;K1$[1,2] = STATUS Using "##"
L_2305: Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2610
X2 = K1$[1,2] \ If X2 <> STATUS Goto L_2610
Mat Read #3,V1,0;H0; \ Mat Read #3,V1,78;H4; \ Mat Read #3,V1,104;H5;
Mat Read #3,V1,84;H0$;
Mat Read #8,H0[3],8;T2;
Gosub L_5110
if custom_customer$ = "MIDATLANTIC"
	If Not(sw[6]) And t2[21] Goto L_2305 
else
	If Not(SW[6]) And N9[0] Goto L_2305
end if
If H5[7] = 2 Or H5[7] = 5 Or H5[7] = 7 Goto L_2305
if custom_customer$="RUTHERFORD"
 	if whse<>0 and H4[2]<>Whse Goto L_2305: 
else
	If H4[2]<>Whse Goto L_2305:
endif
!If H4[2] <> WHSE Goto L_2305
if custom_customer$="RUTHERFORD"
 	IF h5[7]=29 or H5[7]=30 OR H5[7]=31  OR H5[7]=12  OR H5[7]=9 GOTO L_2305:
endif
If H5[7] = 21 Or H5[7] = 22 Goto L_2305
if h5[7]=9 goto L_2305
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 0
JWDATE = X2
If JWDATE > JDATE Goto L_2305
Mat Read #4,H0[2],8;S1$;
If S9[0] = 1 If S1$[118,118] <> "2" Let S1$[118,118] = "1"
S9[1] = S1$[118,118] \ If S9[1] <> S9[0] Goto L_2305
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
IF CUSTOM_CUSTOMER$="ACME"   
   IF S2$[19,19]="" OR S2$[19,20]="  " GOTO L_2305:
endif
K3$ = " ",K3$;K3$ = "}",S2$[19,20]
Search #9,2,1;K3$,V2,E !\ If E > 1 Gosub ERR_SEARCH
If E Goto L_2305
! TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
! Search #9,2,1;TRUCK$,V2,E !\ If E > 1 Gosub ERR_SEARCH
! If E Goto L_2305
if s5 < begTruck or s5 > endTruck goto L_2305

Call ChkForHotStamp()

J$ = " ",J$;J$ = H0[7] Using "######"
L_2405: Search #5,3,1;J$,R5,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2305
If J$[1,6] <> K1$[3,8] Goto L_2305
If (H5[7] = 21 Or H5[7] = 22) And J$[7,9] = "   " Goto L_2405
Mat Read #5,R5,8;L3;
Mat Read #5,R5,80;L6$;
Mat Read #5,R5,140;L1$;
Mat Read #5,R5,256;S2; \ Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
IF CUSTOM_CUSTOMER$="OMAHA"   
  IF S2[1] GOTO L_2405:      
  GOSUB CHECK_ROLL:          
  IF ROLLFLAG GOTO L_2405:   
ENDIF                        
If S2[0] = 3 Goto L_2405
if custom_customer$="RUTHERFORD"
	IF (H5[7]=21 OR H5[7]=22) AND H3[1]<>5
		IF NOT (L3[0]) IF L3[1]=0 GOTO L_2405:
	ENDIF 
else
	IF NOT (L3[0]) IF L3[1]=0 GOTO L_2405: ! "don't update stock for a stock line
endif
!If Not(L3[0]) If L3[1] = 0 Goto L_2405
Mat Read #5,R5,16;L4;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
If L7[4] < 1 Goto L_2405
L7[2] = L7[2] - L7[3]
If Not(L7[2]) Goto L_2405
let pra2$=" ",pra2$
If L3[0] Let LOC$ = " N/A  ";A$[140,151] = L1$[1,12] \ Gosub L_30000 \ Goto L_2510
Mat Read #6,L4,0;A$;
Mat Read #6,L4,256;A; \ Mat Read #6,L4,460;A1;
Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
Mat Read #6,L4,944;PRA2$;
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1

If hot_stamp = 1 
   let LOC$[1,6] = "HSTAMP"
else
	Gosub L_2545
End If

If Len(LOC$) > 6 Let LOC$ = LOC$[1,6],""
L_2510: !
if custom_customer$="RUTHERFORD"
	LET J4$=" ",J4$
	LET J4$[1,2]=L4[3] USING "##"
	LET J4$[11,16]=S5 USING "######";J4$[17,18]=S2$[19,20]
	LET J4$[19,24]=LOC$[1,6]
	LET J4$[25,36]=A$[140,151]
	LET J4$[37,42]=H0[7] USING "######"
	LET J4$[43,48]=R5 USING "######"
	goto insert_sortkey: 
endif
IF CUSTOM_CUSTOMER$="ACME"   
   LET J4$=" ",J4$
   LET J4$[1,2]=S2$[19,20]
   IF L3[0]
	  LET J4$[6,6]="9"
   	  LET J4$[7,7]="}"
   ELSE 
	  IF A$[156,156]="2"
	     LET J4$[6,6]="0"
	  ELSE 
	     LET J4$[6,6]="9"
	  ENDIF 
	  LET J4$[7,7]=A$[156,156]
   ENDIF 
else
   LET J4$=" ",J4$
   let J4$[1,6]=S5 USING "######"
   let J4$[7,8]=S2$[19,20]
endif
J4$[9,14] = LOC$[1,6];J4$[15,26] = A$[140,151]
J4$[27,32] = H0[7] Using "######"
J4$[33,38] = R5 Using "######"
insert_sortkey: !
Search #9,4,1;J4$,V1,E !\ If E Gosub ERR_SEARCH
Goto L_2405
L_2545: Rem GET NON-RASL LOCATION
LOC$ = " ",LOC$
!K6$ = " ",K6$;K6$[1,12] = A$[140,151];K6$[13] = WHSE Using "##"
LET K6$=" ",K6$;K6$[1,12]=A$[140,151]
if custom_customer$="RUTHERFORD"
	LET K6$[13]=L4[3] USING "##" ! WHSE FROM ROLNEW REC
else
	LET K6$[13]=WHSE USING "##" !"search prodloc file
endif
L_2545a: Search #13,3,1;K6$,R13,E
If E = 2 Or K6$[1,12] <> A$[140,151] Goto L_2580
!If E Gosub ERR_SEARCH
! Mat Read #13,R13,0;PLOC$; 
Mat Read #13,R13,18;PL1;
if custom_customer$ = "MIDATLANTIC"
	If PL1[1] <> 1 Goto L_2545a
endif
If debug
  Print #ch_debug;"L_2545: k6$[15,20] : ";K6$[15,20]
End If 
LOC$ = K6$[15,20] \ Return 
L_2580: If P9$[33,33] <> "Y" Goto L_2590
Gosub L_4500 \ If Not(W3[0]) Goto L_2590
L_2590: If LOC$ = "" Or LOC$[1,6] = "      " Or LOC$[1,4] = "NONE"
  LOC$ = "STOCK "
End If 
Return 
L_2610: !Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If J7[1] Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
J1 = 90;J2 = 0;K1$ = " ",K1$;K3$ = " ",K3$
J4$ = " ",J4$
L_2635: Search #9,3,1;K1$,R1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If K1$[1,1] >= "{" Goto L_9100
IF CUSTOM_CUSTOMER$="ACME"   
   IF J4$[7,7]=" " LET J4$=K1$                        
   IF K1$[1,2]<>J4$[1,2] GOSUB L_4000:                
   IF K1$[7,7]<>J4$[7,7] GOSUB L_4300: \ GOTO L_2670: 
else
	if custom_customer$="RUTHERFORD"
		 IF J4$[1,2]="  " LET J4$=K1$
		 IF K1$[1,2]<>J4$[1,2] GOSUB L_4050:
		 IF K1$[11,16]<>J4$[11,16] GOSUB L_4000:
		 IF K1$[17,18]<>J4$[17,18] GOSUB L_4300: \ GOTO L_2670:
		 IF K1$[25,36]<>J4$[25,36] GOSUB L_5000:
    else
		IF J4$[1,6]="      " LET J4$=K1$ ! "sort break field
		IF K1$[1,6]>J4$[1,6] GOSUB L_4000: !TRUCK BREAK
		IF K1$[7,8]<>J4$[7,8] GOSUB L_4300: \ GOTO L_2670: !ZONE BREAK
   endif
endif

If K1$[15,26] <> J4$[15,26] Gosub L_5000
L_2670: J4$ = K1$
L_2675: Mat Read #3,R1,0;H0;
Mat Read #3,R1,78;H4;
Mat Read #3,R1,84;H0$;
MAT READ #3,R1,446;P0$;  ! " CCT 94748 CUSTOM FOR WHITE
Mat Read #4,H0[2],8;S1$;
S1$[118,118] = "2" \ Mat Write #4,H0[2],8;S1$;
if upsws_ch[4] <> -1
	! do UPS world ship
	call AddUpdateUPSWS(e$, H0[7], upsws_ch[])
end if
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
Mat Read #4,H0[2],154;SRN;
if custom_customer$="RUTHERFORD"
	let R4=K1$[43,48]
else
	LET R4=K1$[33,38] ! "line rec #
endif
Mat Read #5,R4,8;L3;
Mat Read #5,R4,16;L4;
If L7[3] If L7[4] = L7[2] Let L7[4] = L7[4] - L7[3]
Mat Read #5,R4,56;L6;
Mat Read #5,R4,80;L6$;
Mat Read #5,R4,250;UN;
Mat Read #5,R4,256;S2; \ Mat Read #5,R4,404;OLM;
Mat Read #5,R4,446;EUN; \ Mat Read #5,R4,452;UNF;
Mat Read #5,R4,140;L1$; \ Mat Read #5,R4,168;L7;
PRA2$ = " ",PRA2$
L7[2] = L7[4]
If F9 Let L7[2] = L9[1]
If L3[0] Gosub L_30000 \ Goto L_2770
Mat Read #6,L4,0;A$; \ Mat Read #6,L4,256;A;
Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
Mat Read #6,L4,460;A1;
Mat Read #6,L4,944;PRA2$;
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
L_2770: CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[4]
Gosub L_20000 \ L7[2] = AMOUNT
Gosub L_8100
Gosub L_5800
If PRODINFO Gosub L_5400
Gosub L_5200
Gosub L_2825
If Not(F9) Goto L_2635
L7[2] = L9[1]
If Not(L7[2]) Goto L_2635
Goto L_2675
L_2825: Rem TOTALS CALC
For X = 1 To 10 Step 2
  T9[X] = T9[X] + L7[2]
  If A1[3]
    CFT = L6[2] / A1[3]
    CNVTU[0] = PFU1[8];CNVTU[1] = 0;CNVTU[2] = 5;CNVTA = CFT
    Gosub L_20000
    CFT = AMOUNT
    T9[X + 1] = T9[X + 1] + (L7[2] * CFT)
  End If 
Next X
TBASE = TBASE + L7[4]
Return 
L_4000: Rem "============================================== TRUCK TOTALS
IF CUSTOM_CUSTOMER$="ACME"   
   GOSUB L_4400:                                              
   GOSUB L_5000:                                              
   IF (J1+5)>J7 LET J1=90                                     
   GOSUB L_5800:                                              
   PRINT #0;" "                                               
   PRINT #0; USING "--------.## (STOCK) "; TAB 6;TOTSTOCK;    
   IF TOTBASE PRINT #0; USING "--------.## (BASE) ";TOTBASE;  
   PRINT #0; USING "#####.### (CFT) ";T9[2];                  
   PRINT #0;"* ZONE: ";J4$[1,2];" TOTALS *"                   
   LET T9[1]=0 \ LET T9[2]=0                                  
   LET TOTSTOCK=0 \ LET TOTBASE=0                             
   PRINT #0;""                                                
   PRINT #0;"PICKER __________________";                   
   PRINT #0; USING "#######"; TAB 50;"PALLETS: ";T9[11]    
   PRINT #0;"LOADER __________________"                    
   LET T9[7]=0;T9[8]=0                                     
   LET T9[11]=0 \ LET J4$=K1$                              
   LET J1=90                                               
else
Gosub L_4400
Gosub L_4300
If (J1 + 5) > J7 Let J1 = 90
Gosub L_5800
Print #0;" "
if sw[1]
  Print #0; Using "--,---,---.## (STOCK) "; Tab 8;T9[1];
else
  Print #0; Using "--------.## (STOCK) "; Tab 8;T9[1];
endif
Print #0; Using "#####.### (CFT) ";T9[2];
Print #0; Using "###";"** TRUCK # ";S5;" TOTALS **"
T9[1] = 0 \ T9[2] = 0
Print #0;""
Print #0;"PICKER __________________";
Print #0; Using "#######"; Tab 50;"PALLETS: ";T9[11]
Print #0;"" \ Print #0;"LOADER __________________"
T9[11] = 0 \ J4$ = K1$
J1 = 90
Return 
Return 
Print #0;" " \ J1 = J1 + 1
X4 = J4$[9,12] \ X4 = 9000 - X4
Gosub L_5800
if sw[1]
   Print #0; Using "--,---,---.## (STOCK) "; Tab 8;T9[3];
else
   Print #0; Using "--------.## (STOCK) "; Tab 8;T9[3];
endif
Print #0; Using "#####.### (CFT) ";T9[4];
Print #0; Using "######"; Tab 30;"STOP TOTAL ";X4
Print #0;" " \ J1 = J1 + 1
J4$[9,12] = K1$[9,12]
T9[3] = 0 \ T9[4] = 0
endif
Return 

L_4050: REM "===================whse totals - custom for RUTHERFORD
GOSUB L_4000:
RETURN 


L_4300: Rem "============================================= ZONE TOTALS
IF CUSTOM_CUSTOMER$="ACME"   
GOSUB L_5000:
GOSUB L_5800:
LET J4$[7,7]=K1$[7,7];T9[7]=0;T9[8]=0
LET J1=99
GOSUB L_5800:
else
Gosub L_5000
Print #0;" " \ J1 = J1 + 1
Gosub L_5800
if sw[1]
   Print #0; Using "--,---,---.## (STOCK) "; Tab 8;T9[7];
else
   Print #0; Using "--------.## (STOCK) "; Tab 8;T9[7];
endif
Print #0; Using "#####.### (CFT) ";T9[8];
if custom_customer$="RUTHERFORD"
	PRINT #0;"** ZONE: ";J4$[17,18];"    TOTALS **"
else
	PRINT #0;"** ZONE: ";J4$[7,8];"    TOTALS **"
endif
Print #0;" " \ J1 = J1 + 2
J4$[7,8] = K1$[7,8];T9[7] = 0;T9[8] = 0
J1 = 99 \ Gosub L_5800
endif
Return 

GET_MATCODE: REM
LET MA$=" ",MA$
LET K15$=" ",K15$
LET K15$=K1$[7,7]
SEARCH #17,2,1;K15$,R17,E
IF E LET MA$="MAT'L CODE NOT FOUND"
IF NOT(E)
	MAT  READ #17,R15,0;MA$;
ENDIF 
RETURN 

L_4400: Rem "=============================================== PALLET TOTALS
T9[11] = T9[11] + 1
Return 
If Not(T9[9] + T9[10]) Return 
Gosub L_5800
K7$ = " ",K7$
Print #0;" " \ J1 = J1 + 1
Gosub L_5800
if sw[1]
   Print #0; Using "--,---,---.## (STOCK) "; Tab 8;T9[9];
else
   Print #0; Using "--------.## (STOCK) "; Tab 8;T9[9];
endif
Print #0; Using "#####.### (CFT) ";T9[10];
Print #0;"*** PALLET TOTAL *** "
Print #0;" " \ J1 = J1 + 1
T9[11] = T9[11] + 1
T9[9] = 0 \ T9[10] = 0
Return 

L_4500: Rem "============================================== WAREHOUSE FILE
K13$ = " ",K13$;K13$[1,12] = A$[140,151]
if custom_customer$="RUTHERFORD"
	LET K13$[13,14]=L4[3] USING "##"  ! " whse# from rolnew
else
	LET K13$[13,14]=WHSE USING "##"
endif
Search #12,2,1;K13$,R13,E !\ If E > 1 Gosub ERR_SEARCH
If E Let W3[0] = 0 \ Goto L_4582
Mat Read #12,R13,78;W3;
Mat Read #12,R13,404;W2$;
Mat Read #12,R13,846;WHMISC2;
L_4582: Return

L_4800: REM "==========read product location and assing the primary 
LET LOCPRINT=0                                                           
LET K13$=" ",K13$ \ LET PLOC$=" ",PLOC$ \ LET PERMLOC$=" ",PERMLOC$      
LET WHSE$[1,2]=WHSE USING "##"                                           
LET K13$[1,12]=A$[140,151]                                               
LET K13$[13,14]=WHSE USING "##"    
If debug
  Print #ch_debug;"L_4800: ProdLoc search :";K13$
  Print #ch_debug;"permloc$ :";PERMLOC$
End If 
L_4820: SEARCH #13,3,1;K13$,R13,E \ IF E=2 RETURN                        
IF E return             
If debug
  Print #ch_debug;"L_4800: ProdLoc found :";K13$;":  Rec ";R13
End If 
IF K13$[1,12]<>A$[140,151] RETURN                                        
IF WHSE$[1,2]<>K13$[13,14] RETURN                                        
MAT  READ #13,R13,0;PLOC$;                                               
MAT  READ #13,R13,18;PL1;                                                
IF PL1[1]<>1 GOTO L_4820:                                                
LET PERMLOC$=PLOC$ \ LET LOCPRINT=1  
If debug
  Print #ch_debug;"L_4800: permloc$ :";PERMLOC$
End If 
RETURN                                                                   
L_4900: REM "=============read product's other location and print 
IF K1$[9,14]="STOCK " PRINT #0; TAB 45;K1$[9,14];                 
IF K1$[9,14]="STOCK " RETURN                                      
GOSUB L_4800:             
If debug
  Print #ch_debug;"L_4900: permloc$ :";PERMLOC$
End If 
IF PERMLOC$[13,18]<>"      " OR PERMLOC$[13,18]<>""               
  PRINT #0; TAB 45;PERMLOC$;" ";     
    If debug
		Print #ch_debug;"L_4900: printed right after gosub L_4800"
  End If 
ENDIF                                                             
LET K13$=" ",K13$ \ LET PLOC$=" ",PLOC$ \ LET MORELOC=0           
LET K13$[1,12]=A$[140,151]                                        
LET K13$[13,14]=WHSE USING "##"   
If debug
  Print #ch_debug;"L_4900: ProdLoc search :";K13$
  Print #ch_debug;"permloc$ :";PERMLOC$
End If 
L_4920: SEARCH #13,3,1;K13$,R13,E \ IF E=2 RETURN                 
IF e return                    
If debug
  Print #ch_debug;"L_4900: ProdLoc found :";K13$;":  Rec ";R13
End If 
IF K13$[1,12]<>A$[140,151] RETURN                                 
MAT  READ #13,R13,0;PLOC$;                                        
MAT  READ #13,R13,18;PL1; 
if custom_customer$ = "MIDATLANTIC" 
IF PL1[1]<>1 GOTO L_4920:
ENDIF
IF PERMLOC$[13,18]=PLOC$[13,18] GOTO L_4920:                      
PRINT #0;PLOC$[13,18];" "; \ LET MORELOC=MORELOC+1   
If debug
  Print #ch_debug;"L_4900: printed PLOC$ :";PLOC$
End If 
LET LOCPRINT=LOCPRINT+1                                           
IF MORELOC=1 OR MORELOC=2 GOTO L_4920:                            
RETURN                                                            
L_5000: Rem "====================================== PROD TOTAL (detail line)
IF CUSTOM_CUSTOMER$="ACME"   
   PRINT #0; TAB 0;J4$[9,14];                                     
   IF T9[5]<1                                                     
      PRINT #0; USING "####.##"; TAB 8;TBASE;                      
	  MAT  READ #10,PFU1[0],0;CCD$;                                
	  PRINT #0; TAB 17;"*";CCD$[11,14];                            
	  LET TOTBASE=TOTBASE+TBASE                                    
	ELSE                                                           
	  IF FRA(T9[5])                                                
	     PRINT #0; USING "####.##"; TAB 8;INT(T9[5]);               
		 MAT  READ #10,PFU1[8],0;CCD$;                              
		 PRINT #0; TAB 18;CCD$[11,14];                              
		 LET TOTSTOCK=TOTSTOCK+INT(T9[5])                           
		 PRINT #0; TAB 23;L6$[1,30]; TAB 53;PRA2$[13,27];           
		 PRINT #0; TAB 68;L1$[1,12];                                
		 PRINT #0;""                                                
		 LET J1=J1+1                                                
		 PRINT #0; TAB 0;J4$[9,14];                                 
		 LET CNVTU[0]=PFU1[8];CNVTU[1]=0;CNVTU[2]=1;CNVTA=INT(T9[5])
		 GOSUB L_20000: \ LET QTYSTOCK=AMOUNT                       
		 PRINT #0; USING "####.##"; TAB 8;TBASE-QTYSTOCK;           
		 MAT  READ #10,PFU1[0],0;CCD$;                              
		 PRINT #0; TAB 17;"*";CCD$[11,14];   
		 LET TOTBASE=TOTBASE+TBASE-QTYSTOCK              
	  ELSE                                              
		 PRINT #0; USING "####.##"; TAB 8;T9[5];         
		 MAT  READ #10,PFU1[8],0;CCD$;                   
		 PRINT #0; TAB 18;CCD$[11,14];                   
		 LET TOTSTOCK=TOTSTOCK+T9[5]                     
	  ENDIF                                             
   ENDIF                                               
   PRINT #0; TAB 23;L6$[1,30]; TAB 53;PRA2$[13,27];    
   PRINT #0; TAB 68;L1$[1,12];                         
   PRINT #0;""                                         
   LET J1=J1+1                                         
else
If Not(TBASE) Goto L_5087
Print #0;""
Print #0; Tab 10;"PRODUCT TOTALS:";
X2 = TBASE \ PTAB1 = 27 \ Gosub L_6400
Print #0;" " \ Print #0;" "
J1 = J1 + 3
endif
L_5087: PRODINFO = 1
T9[5] = 0;T9[6] = 0;TBASE = 0
Return 
L_5110: Rem UNPACK T2[21] TO N9[x]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_5200: Rem "=================================== print order line detail
IF CUSTOM_CUSTOMER$="ACME"  return 
Print #0; Using "###### ###"; Tab 10;H0[7];L3[2];
if custom_customer$<>"OMAHA" and custom_customer$<>"WHITERIVER"
   IF L4[2] PRINT #0; USING " ######";L4[2]; ! "po #
endif
if custom_customer$="WHITERIVER" PRINT #0;P0$[1,6];		! " CCT94748
X2 = L7[4];PTAB1 = 27 \ Gosub L_6400
Print #0;"  ";S1$[1,30];
if custom_customer$="OMAHA" 
   !"cct192080
   print #0;"  ";SRN[1];"  ";h0$[1,20];
endif
if custom_customer$="RUTHERFORD"
	PRINT #0;"  ";S1$[1,30]
else
	print #0;""
endif
Return 

L_5400: Rem "============================== PRINT PROD INFO
If P9$[33,33] = "Y" And Not(L3[0]) Gosub L_4500 Else Let W3[0] = 0
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = W3[0] \ Gosub L_20000
QTYOH = AMOUNT
LET PRODINFO=0 ! "don't need product info anymore
IF CUSTOM_CUSTOMER$="ACME"   return
J1 = J1 + 2
if custom_customer$="OMAHA" 
   PRINT #0; TAB 1;S3$[1,12];"  ";L6$[1,30];" ";
   GOSUB L_4900: !"print multi bin location cct124853
   PRINT #0; USING "QOH: ######.## "; TAB 60;QTYOH
   GOSUB L_5500: ! "print alternate item code
   PRINT #0; TAB 1;ALTITEM$[1,12];
   PRINT #0; TAB 15;L6$[31,60]; ! "line end in 6800 
   Print #0;" " ! GOSUB L_6800: ! "print barcode
else
   PRINT #0; TAB 1;L1$[1,12];"  ";L6$[1,30];" ";
   if custom_customer$="RUTHERFORD"
	  PRINT #0;K1$[19,24]
   else
	  PRINT #0;K1$[9,14];     
   endif
   if sw[1]
     PRINT #0; USING "QOH: ##,###,###.## "; TAB 60;QTYOH
   else
     PRINT #0; USING "QOH: ######.## "; TAB 60;QTYOH             
   endif
   PRINT #0; TAB 15;L6$[31,60]; TAB 60;PRA2$[13,27]            
endif
PRODINFO = 0
Return 

L_5500: REM ==================  print alternate item code     
LET ALTITEM$=" ",ALTITEM$                                     
LET K14$=" ",K14$ \ LET K14$=A$[140,151];K14$[13]=""          
L_5530: SEARCH #14,3,2;K14$,R14,E \ IF E=2 RETURN             
IF E return                                
IF K14$[1,12]<>A$[140,151] RETURN                             
MAT  READ #14,R14,0;TAGCUST;                                  
IF NOT(TAGCUST) LET ALTITEM$[1,12]=K14$[13,24] \ RETURN        
IF TAGCUST<>H0[4] GOTO L_5530:                                
LET ALTITEM$[1,12]=K14$[13,24]                                
RETURN                                                        
L_5800: Rem "========================================= HEADINGS ROUTINE
J1 = J1 + 1 \ If J1 < J7 Return 
!If J2 If J7[1] Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
IF CUSTOM_CUSTOMER$="ACME"   
	LET J2=J2+1 \ LET J1=3
	IF NOT(J7[1]) PRINT #0;"\15\";
	PRINT #0;"202E ";ARDATE$; TAB(44- Len(CNAME$) /2);CNAME$; TAB 70;"PAGE";J2
	PRINT #0;MSc$(3);
	PRINT #0; TAB 30;"GANG PICKING LIST FOR ";DELDATE$;  
	PRINT #0;" - ZONE ";J4$[1,2]                         
	PRINT #0;""                                          
	PRINT #0; TAB 0;"MATERIAL CODE ";K1$[7,7];" - ";
	GOSUB GET_MATCODE:
	PRINT #0;MA$
	PRINT #0;" " \ LET J1=J1+3
	PRINT #0; TAB 0;"BIN"; TAB 12;"QTY"; TAB 18;"UOM";
	PRINT #0; TAB 23;"DESCRIPTION"; TAB 53;"PACK SIZE"; TAB 68;"PRODUCT CODE"
	PRINT #0; TAB 0;LINE_$[1,79]
	LET J1=J1+1
	LET PRODINFO=1
else
	J2 = J2 + 1 \ J1 = 8
	If Not(J8) Print #0;"\15\";
	Print #0;"202E ";ARDATE$; Tab (44 - Len(CNAME$) / 2);CNAME$; Tab 70;"PAGE";J2
	Print #0;Msc$(3);
	Print #0; Tab 30;"GANG PICKING LIST FOR ";DELDATE$
	Print #0;""
	IF CUSTOM_CUSTOMER$="OMAHA"                                   
		PRINT #0; TAB 47;"FOR ZONE ";J4$[7,8]                       
	ELSE 
		if custom_customer$="RUTHERFORD"
			PRINT #0;"FOR WHSE ";J4$[1,2];"  TRUCK ";J4$[11,16];"    ZONE    ";J4$[17,18]
		 else
			PRINT #0;"FOR TRUCK ";J4$[1,6];"    ZONE    ";J4$[7,8]   
		endif
	ENDIF                                                             
	Print #0;"PRODUCT CODE"
	Print #0; Tab 10;"ORDER #/LINE/PO # ";
	!if custom_customer$="RUTHERFORD" print #0;"/PO # ";
	Print #0; Tab 32;"QUANTITY / SHIP TO"
	Print #0;" "
	PRODINFO = 1
endif
Return 
L_6400: Rem "================================== UNIT BREAK DOWN
J5 = 0
Print #0; Tab PTAB1;" ";
FOR X=1 TO 7 ! "change from Stocking to PACKING U/M
  IF CUSTOM_CUSTOMER$="ACME"   
	 IF PFU1[8]=PFU1[X] GOTO L_6450: ! "find packing unit 
	 IF PFU1[8]=PFU1[0] GOTO L_6471: ! "pack in base      
  else
     IF PFU1[18]=PFU1[X] GOTO L_6450: ! "find packing unit factor
     IF PFU1[18]=PFU1[0] GOTO L_6471: ! "pack in base
  endif
NEXT X
Print #0;"STOCKING UNIT CONVERSION ERROR!" \ Goto L_6480
L_6450: If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
For X = 7 To 1 Step -1
  If Not(X2) Goto L_6480
  If X = 7 Print #0;"("; \ J5 = 1
  If PFU2[X - 1] If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
Next X
L_6471: If PFU1[0] = -1 Let CCD$ = " ",CCD$;CCD$[11,14] = "CWT " \ Goto L_6477
If PFU1[0] = -2 Let CCD$ = " ",CCD$;CCD$[11,14] = "LOT " \ Goto L_6477
If PFU1[0] Mat Read #10,PFU1[0],0;CCD$; Else Mat Read #10,1,0;CCD$;
L_6477: If X2 
           if sw[1]
		      Print #0; Using "##,###,### ";X2;
		   else
              Print #0; Using "#### ";X2;
		   endif
		   print #0; CCD$[11,14];
		endif
L_6480: If J5 Print #0;" )";
If L3[0] Print #0;"(NON STOCK ITEM) ";
Return 
L_6490: Rem  "================== print a break
Mat Read #10,PFU1[X],0;CCD$;
If CCD$[10,10] = "*" Goto L_6540
if custom_customer$="OMAHA" 
   If CCD$[11,11]="M" Goto L_6540: ! "don't want per M
endif
if sw[1]
   Print #0; Using "##,###,### ";Int(X2 / PFU2[X - 1]);CCD$[11,14];
else
   Print #0; Using "#### ";Int(X2 / PFU2[X - 1]);CCD$[11,14];
endif
X2 = X2 - (Int(X2 / PFU2[X - 1]) * PFU2[X - 1])
L_6540: Return 
L_6900: Rem "=================================== DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
Return 
CHECK_ROLL: REM                                      
LET ROLLFLAG=0                                       
LET K31$=" ",K31$;K31$[1,6]=L2[1] USING "######"     
LET K31$[7,9]=L3[2] USING "###"                      
SEARCH #31,3,1;K31$,R31,E                            
LET ORDNUM=K31$[1,6]                                 
LET LINENUM=K31$[7,9]                                
IF NOT(E) AND ORDNUM=L2[1] AND LINENUM=L3[2]          
  LET ROLLFLAG=1                                     
ENDIF                                                
RETURN                                               
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!L_7145: For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!  If J9$[J8,J8] = " " Goto L_7235
!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next J8
!If J0 = 5 Goto L_7265
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return 

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
YMD2JUL: Rem "word version
errFlag = 0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1!Return 
X2 = X$[1,5] \ Return !1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8100: Rem "==================== CALCULATE PALLET TOTAL
F9 = 0
Return 
If L6[2] > 75 Goto L_8200
If Not(A1[3]) Let A1[3] = 1
If T9[10] + ((L7[2] * L6[2]) / A1[3]) < 75 Return 
If Not(T9[10]) If L7[2] = 1 Return 
If L7[2] = 1 If T9[10] Goto L_8150
If T9[10] >= 60 Goto L_8150
L9 = Int((75 - T9[10]) / L6[2])
If Not(L9) Goto L_8150
F9 = 99
L9[1] = L7[2] - L9 \ L7[2] = L9
Return 
L_8150: R9 = R1;R9[1] = R4;M8$ = K1$;R9[2] = L7[2];R9[3] = L7[3]
R9[3] = L6[2]
Gosub L_4400
K1$ = M8$;R1 = R9;R4 = R9[1];L7[2] = R9[2];L6[2] = R9[3]
Goto L_8100
L_8200: F9 = 0
If Not(L7[2]) Return 
L9[1] = L7[2] - 1 \ L7[2] = 1
F9 = 99
Return 
Open #7,"6/SORTLOC"
K7$ = " ",K7$
L_8520: Search #7,3,1;K7$,R7,E !\ If E > 2 Gosub ERR_SEARCH
If E Return 
Search #7,5,1;K7$,R7,E !\ If E Gosub ERR_SEARCH
Goto L_8520
OUTEND: Rem END
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  ! External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"202e.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
! Call dxclose()
End
!Print 'CS'
!Chain "MX000C"
L_9100: Rem END OF THIS RANGE
K1$ = J4$
Gosub L_4000
!If J7[1] Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
Stop 
PORT_$ = Spc(6) \ PORT_$ = PORT_$[2,Len(PORT_$) - 1]
Read #1,88,912;FILE1$;
L_13040: If FILE1$[Len(FILE1$)] = " " Let FILE1$ = FILE1$[1,Len(FILE1$) - 1] \ Goto L_13040
COUNT = 0 \ Let FILE2$ = FILE1$ To "*" : COUNT !\ If Not(COUNT) Gosub ERR_SEARCH
!Print @0,22;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
FILE1$[COUNT] = PORT_$
Call FindF(FILE1$,FOUND)
If Err 0 Rem
Close #9 \ If Err 0 Gosub ERR_TRAP
If FOUND Kill FILE1$
FILE2$ = "[1:256] ",FILE1$
Build #9,FILE2$
Search #9,0,1;KEY_$,KSIZE,E !\ If E Gosub ERR_SEARCH
REC = 1000 \ Search #9,0,0;KEY_$,REC,E !\ If E Gosub ERR_SEARCH
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}


Sub ChkForHotStamp()
try
	let hot_stamp = 0
    if custom_customer$ <> "MIDATLANTIC" exit sub
    J$ = " ",J$;J$ = H0[7] Using "######"
	let hold_j$[1,6]=j$[1,6]

  do 	
	Search #5,3,1;J$,R5,E !\ If E >2 error 11000
	If E exit do
	If J$[1,6] <> hold_j$[1,6] exit sub
	Mat Read #5,R5,16;L4;
	Mat Read #6,L4,0;A$;

    let whmisc2[0]=0
	!!gosub L_4500: ! "get sprodwhse record
	K13$ = " ",K13$
    K13$[1,12] = A$[140,151]
    LET K13$[13,14]=WHSE USING "##"
    Search #12,2,1;K13$,R13,E 
    If NOT(E)
        Mat Read #12,R13,846;WHMISC2;
        If whmisc2[0] = 3    ! "product group
           let hot_stamp=1
           exit sub ! "found one, exit
        End If
    End If
  loop
else
  include "src/callsuberr.inc"
end try
end sub