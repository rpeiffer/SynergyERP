! MX203inv assign invoice numbers  
! AUTHOR:
! LAST UPDATE: DAVE
!              jlp 3/27/97 set s9[4] for swap to mxrasl, cct101444
! 
!???:11/04/02:Converted to Bedit   (mkbedit 1.2b)
! loadsave -w -n 100,10 -o prog/dxport/serp203inv.dl4 src/serp203inv.src
Declare Intrinsic Sub DateToJulian,JulianToDate,VerifyDate,getglobals,date
Option Default Dialect IRIS1
!
!Include src/copyright.inc
!include "src/copyright.inc"
!release 9.0
!
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
!
! *declare common dl4 intrinsic subs & functions
Declare Intrinsic Function trim$,dateusing$,fmtof
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
!
! *declare common external libs & subs & functions
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,searcherr,getsession,SetOutPut,AddToStr
Declare External Function getmsg$,expandarray
Declare Intrinsic Sub FormatDate
Declare Intrinsic Sub FindF,String
Declare Intrinsic Function FindChannel,Trim$
External Lib "ubsfunc.dl4"
Declare External Function Buildsort
External Lib "libgeneral.lib"
Try 
  Com 2%,S9[9],1%,COST_LEV[3]
  !
  !
  If Err 0 Gosub ERR_TRAP
  !
  Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
  Dim A$[30],F$[20],K1$[30],K2$[30],K3$[30],K4$[30],L2$[20]
  Dim T1$[42],P1$[156],P9$[50],P60$[50],D1$[10],CURDATE$[8],X$[10],INVDATE$[8],SHIPDATE$[8]
  Dim CUST$[6],A1$[142],p61$[256],C$[16]
  Dim j$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],J7$[40],J9$[50],D$[8]
  Dim 1%,P0[1023],H4[2],T1[1],e,S1,S2,L3[3],I,CHOPEN[20]
  Dim 1%,S0[1],J0,J2,J3,J4,J5,J6,J8,J9[2],D3[2],CDAY
  Dim 3%,T3[2],X3,L7[12],J1,X2,T2[25],oref[5],refno
  Dim 2%,H0[12],R1,R2,R3,R4,R5,R6,INVDATE,SHIPDATE,X1
  Dim 2%,L4[3],H5[16],curdate,N0,TRMS[1],coid
  Dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[250],mergedir$[200]
  Dim 2%,uport,tmp$[500],prid$[2],pmode$[2],custom_customer$[100]
  Dim action$[30],options$[30],userid$[8],b$[200],3%
  Dim action1$[30],action2$[30],action3$[30] ! actions for programs
  Dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1000] ! .net delimiters
  Dim WebStr$[1000],Message$[200],blockid$[100]
  Close 
  Call getsession(e$,Ctlc,options$,action$,userid$,IntCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
  Call getglobals("blockx",0,blockid$)
  ! call dxsave(0,"203inv.in!") ! \ stop
  coid = IntCo
  C$ = "CNTRL/cntrl" + Str$(coid)
  Close 
  Open #1,C$
  MAT  READ #1,115,60;CUSTOM_CUSTOMER$;
  custom_customer$=UCase$(Trim$(custom_customer$))                  
  Mat Read #1,19,50;P9$;
  Mat Read #1,61,0;p61$;
  Mat Read #1,0,182;INVDATE;
  Mat Read #1,60,50;P60$;
  Mat Read #1,3,164;CURDATE$;
  Mat Read #1,3,172;curdate;
  If p61$[108,108] <> "Y" Goto OutEnd
  ! get the ship date to print for                     
  !                                                    
  Call dxget("invdate",tmp$)
  If tmp$ = ""
    tmp$ = INVDATE Using "&&&&&&"
  End If 
  If tmp$ <> ""
    Call date(tmp$,tmp$,6,e)
  End If 
  If e
    e$ = "Error, please enter as mm/dd/yy" \ Error 10000
  End If 
  INVDATE = tmp$
  D$ = INVDATE Using "&&&&&&"
  Call DateToJulian(1,D$,D$,e)
  If e
    e$ = "Invalid Invoice date!"
    Error 10000
  End If 
  Call dxget("shipdate",tmp$)
  If tmp$ = ""
    tmp$ = curdate Using "&&&&&&"
  End If 
  If tmp$ <> ""
    Call date(tmp$,tmp$,6,e)
  End If 
  If e
    e$ = "Error, please enter as mm/dd/yy" \ Error 10000
  End If 
  SHIPDATE = tmp$
  D$ = SHIPDATE Using "&&&&&&"
  Call DateToJulian(1,D$,D$,e)
  If e
    e$ = "Invalid Shipping date!"
    Error 10000
  End If 
  ! OPEN FILES
  For I = 2 To 10
    Read R1 \ If R1 = -1 Goto L_260
    Read #1,88,Abs(R1);F$;
    If R1 <= 0 Ropen #I,F$ Else Open #I,F$
L_260: Next I
  Data "1840","1888","-1","-1792","-1","-1808","1872",-1,"2528"
  ! 2=ORDH, 3=ORDL, 4=open, 5=PROD , 7=CUST
  F$ = "2/ARTERMCODE" + Str$(IntCo) \ Ropen #50,F$
  RASL = 0 \ If P9$[41,41] <> "N" Let RASL = 9
  S1 = 2 !! STATUS TO BE invoiced
  S2 = 5 !! STATUS after assigned
  
  if CUSTOM_CUSTOMER$="FUQUA" then s1=4 !! STATUS TO BE invoiced  task 59471
  ! CHECK FOR ORDERS to be invoiced
  K1$ = " ",K1$ \ K1$ = S1 Using "##"



  SEARCH #2,3,1;K1$,R2,E
!IF E GOTO L_580:
LET K3$=" ",K3$ \ LET K3$=S1 USING "##"
IF E OR K3$[1,2]<>K1$[1,2] 
!	if custom_customer$<>"FUQUA"
		GOTO outend
!	endif
ENDIF

!IF CUSTOM_CUSTOMER$="FUQUA"
!	LET K1$=" ",K1$ \ LET K1$=4 USING "##"
!	SEARCH #2,3,1;K1$,R2,E
!	LET K3$=" ",K3$ \ LET K3$=4 USING "##"
!	IF E OR K3$[1,2]<>K1$[1,2] 
!		GOTO outend
!	ENDIF
!ENDIF

READ #1,18,0;D1$; !ORD
  !Gosub L_5000
  !Print @0,10;'CE';@0,14;"    DO YOU WANT TO ASSIGN INVOICE NUMBERS (Y/N) ";
  !Input ""F$
  !If F$ = "N" Goto L_9010
  !If F$ <> "Y" Goto L_900
  ! START HERE
  !Print @0,15;"PLEASE WAIT. . .";
  SET_S1: LET K1$=" ",K1$ \ LET K1$=S1 USING "##"
  K3$ = K1$ \ R1 = 0
  Search #2,2,1;K1$,R2,e
  If Not(e) Goto L_2020
L_2000: ! LOOP IT
L_2010: Search #2,3,1;K1$,R2,e
  If e = 2 Goto OutEnd
  If e Gosub ERR_SEARCH
L_2020: IF K1$[1,2]<>K3$[1,2]
!	IF CUSTOM_CUSTOMER$="FUQUA"
!		IF S1=4 
!			GOTO OutEnd:
!		ELSE
!			S1=4
!			GOTO SET_S1: 
!		ENDIF
!	ELSE
		GOTO OUTEND:   !! NOT FUQUA
!	ENDIF  
ENDIF
  Mat Read #2,R2;H0
  Mat Read #2,R2,78;H4
  Mat Read #2,R2,104;H5
  Mat Read #2,R2,512;oref
  Mat Read #8,H0[3],8;T2
  Gosub L_3500 !"calculate the term date and amt
  CUST$[1,6] = H0[4] Using "######"
  Search #7,2,1;CUST$,REC,e \ If e Goto ERR_SEARCH
  Mat Read #7,REC,0;A1$;
  If A1$[141,141] = "Y" Goto L_2070 Else Goto L_2010
  If T2[21] Goto L_2010 ! "on hold cannot invoice
L_2070: ! IF P9$[45,45]="Y" OR P9$[45,45]="A"
  If H5[7] = 2 Or H5[7] = 5 Or H5[7] = 9 Or H5[7] = 11 Or H5[7] = 12 Goto L_2010 ! DO NOT INVOICE 
  ! ENDIF 
  Gosub L_3000 !DELETE OLD
  Gosub L_3050 !INSERT NEW
  H0[0] = S2
  Gosub L_5500
  Mat Write #2,R2,0;H0
  Mat Write #2,R2,512;oref;
  Mat Write #8,H0[3],8;T2;
  r1inv = r1inv + 1
  If P60$[17,17] = "Y" Gosub L_4000 ! "auto Work order Gen.
  If RASL Gosub L_4300 ! "rasl check/assign locations
  !
  Goto L_2000
L_3000: ! DELETE OLD KEY
  K2$ = " ",K2$ \ K2$ = K1$
  Search #2,5,1;K2$,R6,e
  If e Gosub ERR_SEARCH
  If R6 <> R2
    !Print "RECORD MISMATCH" 
    e = 1 \ Gosub ERR_SEARCH
  End If 
  Return 
L_3050: ! INSERT NEW
  K2$ = " ",K2$ \ K2$ = S2 Using "##"
  K2$[3] = H0[7] Using "######" \ R6 = R2
  Search #2,4,1;K2$,R6,e
  If e Gosub ERR_SEARCH
  Return 
L_3500: ! "================================== calculate terms date/amt
  Mat Read #50,H0[12],52;TRMS;
  Mat Read #50,H0[12],76;CDAY;
  If Not(H0[8]) Let H0[8] = INVDATE
  D$ = H0[8] Using "&&&&&&"
  D3[0] = D$[3,4];D3[1] = D$[5,6];D3[2] = D$[1,2]
  If TRMS[1] < 0 Goto L_3650
  If TRMS[1] = 99 Goto L_3780
  Call DateToJulian(1,D$,D$,e)
  If e Let T2[22] = 0;T2[23] = 0 \ Goto L_3810
  D2 = D$;D2 = D2 + TRMS[1];D$ = D2 Using "&&&&&&"
  Call JulianToDate(1,D$,D$,e)
  If e Let e = 0 \ Goto ERR_SEARCH
  D3[0] = D$[1,2];D3[1] = D$[4,5];D3[2] = D$[7,8]
  Goto L_3780
L_3650: ! "terms are days into next month
  D3[0] = D3[0] + 1 \ If D3[0] > 12 Let D3[0] = 1;D3[2] = D3[2] + 1
  If CDAY If D3[1] > CDAY Let D3[0] = D3[0] + 1 \ If D3[0] > 12 Let D3[0] = 1;D3[2] = D3[2] + 1
  D3[1] = Abs(TRMS[1])
  If D3[0] > 12 Let D3[0] = 1;D3[2] = D3[2] + 1
L_3700: D$ = D3[2] * 10 ^ 4 + D3[0] * 10 ^ 2 + D3[1] Using "&&&&&&"
  Call DateToJulian(D$,D$,e) \ If Not(e) Goto L_3780
  D3[1] = D3[1] - 1
  If D3[0] = 2 If D3[1] < 28 Let T2[22] = 0;T2[23] = 0 \ Goto L_3810
  If D3[0] <> 2 If D3[1] < 30 Let T2[22] = 0;T2[23] = 0 \ Goto L_3810
  Goto L_3700
L_3780: ! "got due date, place into file variables
  T2[22] = FNR((T2[1] - T2[3] - H6[6]) * TRMS[0] / 100)
  T2[23] = D3[2] * 10 ^ 4 + D3[0] * 10 ^ 2 + D3[1]
L_3810: Return 
L_4000: ! THRU LINES
  If P9$[2,2] <> "M" Return ! "not mfg
  If H0[0] > 4 Return ! "already invoiced
  If H5[7] <> 1 Return ! "only stock
  K4$ = " ",K4$;K4$[1,6] = H0[7] Using "######"
L_4040: Search #3,3,1;K4$,R3,e
  If e Return 
  X2 = K4$[1,6] \ If X2 <> H0[7] Return 
  If (H5[7] = 21 Or H5[7] = 22) And K4$[7,9] = "   " Goto L_4040 ! "repair info
  Mat Read #3,R3,8;L3;
  Mat Read #3,R3,16;L4;
  Mat Read #3,R3,140;L2$;
  Mat Read #3,R3,168;L7;
  Mat Read #3,R3,256;S0;
  If L3[0] <> 0 Or L3[1] <> 1 Goto L_4040
  If L7[2] <= 0 Goto L_4040
  If (L7[3] + L7[4]) <= 0 Goto L_4040
  If S0[0] <> 0 Goto L_4040 ! "not stock
  Gosub L_4210 \ Goto L_4040 ! "check product
  S9[2] = R2 ! "header record
  S9[4] = 205
  S9[5] = R3 ! "line record
  Swap 2,"MX861SW.DL4"
  !Print @0,16;'CE';@30,2;'CL';
  !Print @0,16;
  Goto L_4040
L_4210: ! READ ITEM
  Mat Read #5,L4;P1$;
  If P1$[139,139] <> "M" Return 
  If P1$[140,151] <> L2$[1,12] Return ! "bad product
  Return 1
L_4300: ! RASL ASSIGN LOCATION / check for "NONE" 
  S9[2] = R2;S9[4] = 205;S9[5] = 0 ! "header record, program came from
  CHOPEN[0] = 1;CHOPEN[1] = 5;CHOPEN[2] = 2;CHOPEN[3] = 3;CHOPEN[4] = 0
  CHOPEN[5] = 0;CHOPEN[6] = 10;CHOPEN[7] = 0;CHOPEN[8] = 0;CHOPEN[9] = 0
  Call "MXRASL5.DL4",IntCo,Ctlc,S9[],CHOPEN[]
  Return 
L_5500: ! GET INVOICE NUMBER AND ASSIGN DATE
  H0[8] = INVDATE
  H0[10] = SHIPDATE
  Read #1,20,180;refno
  refno = refno + 1
  If refno > 999999998 Goto OutEnd
  Write #1,20,180;refno;
  oref[1] = refno
  Return 
OutEnd: ! ========================== END  
  tmp$ = bsdel$ + "status" + fdel$ + rdel$ + "Status" + fdel$ + "Message" + fdel$
  If r1inv
    j$ = r1inv Using "######"
    msg$ = "COMPLETE! ",j$," ",D1$,"S WERE INVOICED"
    tmp$ = tmp$ + rdel$ + "0" + fdel$ + msg$ + fdel$
  Else 
    If p61$[108,108] <> "Y"
      tmp$ = tmp$ + rdel$ + "1" + fdel$ + "Selection not Active!!" + fdel$
    Else 
      tmp$ = tmp$ + rdel$ + "1" + fdel$ + "No orders found matching criteria!" + fdel$
    End If 
  End If 
  Mat Read #1,120,0;P0
  K1 = 203
  P0[K1] = 0
  Mat Write #1,120,0;P0;
  Call AddToStr(e$,rstr$,tmp$ + rdel$ + esdel$)
  Call SetOutPut(e$,rstr$)
  End 
  Stop 
Err_Escape: !                                              
ERR_TRAP: Rem                                              
  If Spc(8) = 123
    Escdis 
    Escclr 
    Return -1
  End If 
  Goto ERR_MAIN
ERR_SEARCH: Rem                                            
  ENUM = e + 1000;ELINE = Spc(16);CTERR = 0
  If e = 5 Let CTERR = Err(8)
  msg$ = "RETURN STATUS",(e + (CTERR * .001))
  msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
  Goto ERR_MAIN
ERR_MAIN: Rem                                              
  If Err 0 Rem                                               
  e$ = msg$
  If Spc(8) <> 10000 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
  Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[])
  Stop 
Else 
  !Include src/callmainerrnet.inc                                         
  !include "src/callmainerrnet.inc"                                       
  !                                                                       
  ! Main error routine for any DL4 with .NET programs which               
  ! are meant to be "called" dl4 programs, I.E.                           
  !                                                                       
  ! call "dl4_prog_name",parm1$,parm2...                                  
  !                                                                       
  ! NOT FOR called subroutines (either internal or external).  For those  
  ! use the standard src/callsuberr.inc                                   
  !                                                                       
  Select Case Spc(8)
    Case 10000
      ! this is default "message" error                                   
      ! e$ should be set with message to display                          
    Case 11000
      ! search error                                                      
      Dim msc4$[100] \ msc4$ = Msc$(4)
      If Pos(msc4$, = "/",-1) Let msc4$ = msc4$[Pos(msc4$, = "/",-1) + 1]
      Call env(2,"PROGNAME",msc4$)
      Call programdump()
      Call searcherr(e$,e,Spc(10))
    Case Else 
      Dim msc4$[100] \ msc4$ = Msc$(4)
      If Pos(msc4$, = "/",-1) Let msc4$ = msc4$[Pos(msc4$, = "/",-1) + 1]
      Call env(2,"PROGNAME",msc4$)
      Call programdump()
      Call suberr(e$,Spc(8),Spc(10),Msc$(2))
  End Select 
  Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[],rstr$)
  If rstr$ = ""
    Call dxget(1,"focus",e$) !dxblockgui coding                           
    If e$ <> "" Chain "dxblockgui.dl4"
    Chain "MX000.dl4"
  End If 
End Try 
