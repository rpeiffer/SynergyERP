! >>> Program 681b2
!
! description Product Labels - selectable "UP" (across)
!
! loadsave -w -n 100,10 -o prog/dxport/681b2.dl4 src/681b2.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
! 
Rem BEDIT Version: 1.7a OBJECT CODE     Created: OCT  1, 1996  12:39:37
Rem Source file: /usr/acct/xindist/src/mx681b.etna.s
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
!
Rem BEDIT Version: 2.5 OBJECT CODE     Created: DEC 19, 2013  11:09:47
Rem /x/w2/pm/r2005//x/usracct/jcs/work/custom/xrev9/mx681betna.src (synergyux.synergy.n) [jcs] {37253}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
Declare Intrinsic Sub InpBuf,String
! Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP

Dim 1%,CNVTU[2]
Dim 3%,CNVTA,AMOUNT,FIELD,BASE
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 1%,C2[2],E,F,U9,CALC_LP,PD1[9]
Dim 2%,C5[1],D3[3],G7,G8,P,R2,V2[1],X1,X2,Q0[1],D9[20],WHBLD[2],WHSE,DFWH
Dim 3%,A4,CSPK,X
Dim K1$[50],A2$[30],PMASK$[15],P9$[50],P60$[50],C0$[60],PRUM$[4]
Dim SPROD$[40],EPROD$[40],F$[35],D1$[6],X$[10],WH$[2],WHPROD$[12]
Dim B1$[142],B2$[142],B3$[142],B4$[142],B5$[142],B6$[142],J$[20]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]
dim Action1$[30],Action2$[30],Blank$[40]	  \ Blank$=" ",Blank$

! call dxopen() ! use for standalone - normally from dxblockx
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
!
LET COID=IntCo
FOR J=2 TO 8
	READ J1 \ IF J1=-1 GOTO L_830:
	READ #1,88,J1;J$;
	ROPEN #J,J$
L_830: NEXT J
DATA 1792,1728,2784,1744,1696,2288,2352 
! 2=SPROD, 3=CCODES, 4=SHAZNAME, 5=SPRODWHSE, 6=PRODSPEC, 7=COMMCODE
! "channels 4-6 are used in MX681A only   (roman 02/26/1991)
Let J$="2/SPRICEMARK"+Str$(COID)
ROpen #10,j$
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
P = 0
If Err 0 Let P = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60
If P ! no browser option ! Let L9 = 22
	returnstatus=1
	message$="Can not run to the browser"
	goto outerr
Endif
C0$ = " ",C0$ ! to be standard - this is 2 lines of user entered text
!C0$ = "  ETNA PRODUCTS COMPANY"
!C0$[31] = " 53 WEST 23RD ST. NY, NY"
QNUMACR: Rem "Number across
!Print 'CS';@25,0;"PRODUCT LABEL PRINT"
U9 = 4 ! default
!Print @0,2;"ENTER Number of Labels Across (1-4)  4";'ML';
!Input Len 16385;""X$ \ If X$ = "E" Goto OUTEND
call dxget("TEXT1",tmp$) \ let c0$[1,30]=tmp$+Blank$
call dxget("TEXT2",tmp$) \ let c0$[31,60]=tmp$+Blank$
call dxget("NOACR",tmp$) \ let x$=RTrim$(tmp$)
If X$ = "" Let X$ = "4"
UP = X$
If UP < 1 Or UP > 4 Or Fra(UP) 
	returnstatus=1
	message$="Number across is 1-4 only"
	Goto OutErr
Endif
U9 = UP
PRNTALIGN: Rem "Need Alignment? (See a chiropracter!)
!Print @0,3;'CE';"ALIGNMENT AID?  (Y/N) ";
!Input ""F$
!If F$ = "N" Goto STRTHERE
!If F$ <> "Y" Goto PRNTALIGN
!Gosub ALIGNRTN
!Signal 3,20
!Goto PRNTALIGN
STRTHERE: Rem "here we go
!Print 'CS';@25,0;"PRODUCT LABEL PRINT"
!Print @0,4;'CE';"ENTER STARTING CODE, <CR> FOR FIRST, ''E'' TO EXIT: ";
call dxget("SPROD",tmp$) \ let k1$=UCase$(tmp$)+Blank$
SPROD$ = " ",SPROD$
!Input ""K1$ \ If K1$ = "E" Goto OUTEND
SPROD$ = K1$,"                    "
!Print @0,5;'CE';"ENTER ENDING   CODE, <CR> FOR LAST,  ''E'' TO EXIT: ";
!Input ""A2$ \ If A2$ = "E" Goto OUTEND
call dxget("EPROD",tmp$) \ let a2$=UCase$(tmp$)
EPROD$ = A2$,"                                                 "
If A2$ = "" Let EPROD$ = "~~~~~~~~~~~~"
If EPROD$ >= SPROD$ Goto EDT_NUMLABELS
Message$="ENDING CODE MUST BE GREATER THAN STARTING CODE "
returnstatus=1
!Print 'CR MU CL MU MU';
Goto OUTERR ! STRTHERE
EDT_NUMLABELS: Rem # OF LABELS
!Print @0,7;'CE';"ENTER NUMBER OF LABELS FOR EACH PRODUCT, <CR> FOR 1 ";
!Input ""F$
call dxget("NOLBLS",tmp$) \ let f$=Trim$(tmp$)
If F$ = "" Let F$ = "1"
X3=f$
If X3 > 999 
	returnstatus=1
	message$="IF you require 1000 or more per product please run several times"
	Goto OutErr  !EDT_NUMLABELS
Endif
LABELS = F$
if labels<=0 let labels=1
FINALQ: Rem "'std' Final Question
Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!Print @0,10;'CE';"Enter  P:print, R:reselect, E:exit    ";
!Input Len 16385;""X$ \ If X$ = "E" Goto OUTEND
!If X$ = "R" Goto STRTHERE
!If X$ <> "P" Goto FINALQ
STRTPRNT: Rem "Start Printing
!Print @0,22;'CE';"   PRINTING PRODUCT LABELS . . .  PLEASE WAIT. "
!If L9 < 30 Print 'CS'
!Signal 3,0
C2 = 0
K1$ = " ",K1$ \ K1$ = SPROD$
Gosub CLRTEXT
Search #2,2,1;K1$,R2,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto CHKRANGE
PRODFLE_LOOP: Rem "Product Loop
Search #2,3,1;K1$,R2,E \ If E = 2 Goto PRODRNG_DONE
If E Gosub ERR_SEARCH
CHKRANGE: If K1$[1,12] > EPROD$[1,12] Goto PRODRNG_DONE
If K1$[1,12] = "Z ZZZZZZZZZZ" Goto PRODFLE_LOOP
Gosub READ_PROD
For C1 = 1 To LABELS
  C2 = C2 + 1
  If C2 > U9 Gosub PRNTTEXT
  C3 = ((C2 - 1) * 31 + 1)
  Gosub SETUP_TEXT
Next C1
Goto PRODFLE_LOOP
READ_PROD: Rem "========================================= READ PRODUCT RECORD
CH_PROD = 2;REC_PROD = R2
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,624;PR_PO
Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,670;U4
Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,846;PFTB
Read #CH_PROD,REC_PROD,854;UPCT
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Mat Read #CH_PROD,REC_PROD,944;PR_A2$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Mat Read #CH_PROD,REC_PROD,1018;PFN
STKUM = PFU1[8];POUM = PFU1[10]
PRUM = PFU1[12]
X2 = STKUM \ Gosub GET_UMFACTOR
STKCONV = X
X2 = POUM \ Gosub GET_UMFACTOR
POCONV = X
CSPK = 1 \ If POCONV Let CSPK = STKCONV / POCONV
CSPK = Int(CSPK + .9999)
If CSPK < 1 Or CSPK > 999 Let CSPK = 1
PRUM$ = "EACH"
If PRUM = -1 Let PRUM$ = "CWT "
If PRUM = -2 Let PRUM$ = "LOT "
If PRUM > 0 Read #3,PRUM,10;PRUM$[1,4];
Return 
GET_UMFACTOR: Rem "Get Factor
X = 1
For X1 = 1 To 7
  If X2 = PFU1[X1] Goto GOT_UMNUM
Next X1
Return 
GOT_UMNUM: Rem "got a Number
X = PFU2[X1 - 1]
If X <= 0 If X > 999 Let X = 1
Return 
SETUP_TEXT: Rem LOAD BUFFER
B1$[C3,C3 + Len(C0$[1,30])] = C0$[1,30]
B2$[C3,C3 + Len(C0$[31,60])] = C0$[31,60]
B4$[C3,C3 + Len(A$[9,38])] = A$[9,38]
B5$[C3,C3 + 1] = "# "
B5$[C3 + 2,C3 + 2 + Len(A$[140,151])] = A$[140,151]
B5$[C3 + 13,C3 + 20] = "CASE PK:"
B5$[C3 + 21,C3 + 23] = CSPK Using "###"
B5$[C3 + 25,C3 + 28] = PRUM$[1,4]
Return 
PRNTTEXT: Rem DUMP BUFFER
Print #0;B1$[1,131]
Print #0;B2$[1,131]
Print #0;B3$[1,131]
Print #0;B4$[1,131]
Print #0;B5$[1,131]
Print #0;B6$[1,131]
C2 = 1
Gosub CLRTEXT
Return 
ALIGNRTN: Rem ALIGNMENT AID
Gosub CLRTEXT
A$ = "X",A$;C2 = 0
CSPK = 99;PRUM$ = "XXXX"
For C1 = 1 To U9
  C2 = C2 + 1
  C3 = ((C2 - 1) * 31 + 1)
  Gosub SETUP_TEXT
Next C1
Gosub PRNTTEXT
Return 
CLRTEXT: Rem CLEAR BUFFER
B1$ = " ",B1$
B2$ = " ",B2$
B3$ = " ",B3$
B4$ = " ",B4$
B5$ = " ",B5$
B6$ = " ",B6$
Return 
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
PRODRNG_DONE: Rem NO MORE
Gosub PRNTTEXT
!If L9 < 30 ! "Screen Print?
!  Input "\15\PRESS <CR> TO EXIT "K1$
!End If 
Goto OUTEND
OutErr: ! something entered wrong
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End 
OUTEND: Rem EXIT ROUTINE
!Print 'CS'
Close 
End
!Chain "MX000"
!Stop 
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Error 1100
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}