!
!
! loadsave -w -n 100,10 -o prog/dxport/ubscommlist.dl4 src/ubscommlist.src
!
!
!
!
Declare External Sub CommList
Declare Sub updatelog,errTrap,parseWords
Def Struct commInfo
  Member Commcode$[4]
  Member Commodity$[16]
End Def 
Dim cc.[600] As commInfo
Call CommList(1,35,1,"files/6/dx.log",cc.[],ii,ss,600)
Print ii;ss
!
External Sub CommList(intCo,intSalesMan,debug,dlog$,cc.[] As commInfo,ii,ss,iLimit)
  Try 
    !
    Def Struct Prod
      !
      !
      !
      !
      !
      Member A$[156] : Item 0
      Member 2%,B[24] : Item 156
      Member 3%,A[33] : Item 256
      Member 3%,A1[7] : Item 460
      Member 2%,A2 : Item 508
      Member 1%,PFU1[20] : Item 512
      Member 3%,PFU2[6] : Item 554
      Member 3%,PRPARC[3] : Item 596
      Member 1%,LM[1] : Item 602
      Member 1%,PR_PO[2] : Item 624
      Member 1%,PR_SPARE1 : Item 628
      Member 1%,LLC : Item 630
      Member PSN$[20] : Item 632
      Member 2%,PSN[1] : Item 652
      Member 2%,U2 : Item 660
      Member 3%,LBSORD : Item 664
      Member 2%,U4[1] : Item 670
      Member 3%,U3 : Item 678
      Member U3$[60] : Item 684
      Member HZ$[90] : Item 744
      Member 2%,A3[2] : Item 834
      Member 1%,PFTB[3] : Item 846
      Member 1%,UPCT : Item 854
      Member C1$[32] : Item 856
      Member PRSpare1$[6] : Item 888
      Member 2%,PR_C4[10] : Item 894
      Member 3%,PF_Load2 : Item 938
      Member PR_A2$[30] : Item 944
      Member 2%,PFCO[3] : Item 974
      Member 3%,PLV[1] : Item 990
      Member 2%,PLC[3] : Item 1002
      Member 3%,PFN[1] : Item 1018
      Member 2%,STK[2] : Item 1030
      Member 3%,PROPEN : Item 1042
      Member 2%,FDT[1] : Item 1048
      Member PRFlg$[10] : Item 1056
      Member 1%,PRBASE : Item 1066
      Member 2%,PRMKUP[3] : Item 1068
      Member PRMKUPTYP$[4] : Item 1084
      Member 3%,FUT[1] : Item 1088
      Member 1%,PRPARC2[3] : Item 1100
      Member 3%,PRREDI[1] : Item 1108
      Member PIC$[50] : Item 1120
      Member PRUSED$[100] : Item 1170
      Member 2%,PRD0[2] : Item 1270
      Member PRSpare2$[12] : Item 1282
      Member 1%,PRD1 : Item 1294
      Member PRReserved$[16] : Item 1296
    End Def 
    Def Struct CommCode
      !
      !
      Member D$[36] : Item 0
      Member 2%,C1[100] : Item 16
      Member 1%,C2[100] : Item 440
      Member 1%,C0[100] : Item 642
      Member 2%,C3[1] : Item 844
      Member CmdtyUpChg$[101] : Item 852
      Member 2%,CmdtyUpChg[100] : Item 953
      Member 1%,CmdtyBrkTbl[100] : Item 1357
      Member Spare1$[1] : Item 1559
      Member Spare2$[240] : Item 1560
    End Def 
    Def Struct ProdSLS
      !
      Member P1$[12] : Item 0
      Member 3%,S1[12,2] : Item 16
      Member 3%,s2[12,2] : Item 256
    End Def 
    Declare Intrinsic Function FindChannel,Trim$
    Declare Intrinsic Sub Logic
    Declare External Function OpenFile,ReplaceChar$,Escape$
    External Lib "ubsfunc.dl4"
    Dim CMK$[20],P9$[50],P61$[256]
    Dim CM. As CommCode
    Dim 1%,debugDetail,Dir,Mode
    !
    Dim 2%,CMC,CTLC,CCC,PIC,CHAN,CTC
    !
    Dim 3%,CMR,CTLR,PIR,CHANR,CTR
    !
    Dim 2%,CME,CTLE,PIE,CHANE,CTE
    Dim temp$[100]
    Dim SLS$[3],CO$[2],Sales$[35],CatD$[24]
    Dim msg$[256],pgmName$[20]
    Dim QMASK$[20],PMASK$[20],EMASK$[20],dec$[5]
    Dim Word$[1,20],Desc$[30]
    Dim 3%
    debugDetail = 0
    pgmName$ = "ubscommlist"
    msg$[1,50] = "-",msg$ \ Call updatelog(debug)
    msg$ = "start...program " + pgmName$ \ Call updatelog(debug)
    ii = 0
    SLS$ = intSalesMan Using "###"
    CO$ = Str$(intCo)
    msg$ = "doing...company-" + CO$ + " salesman-" + SLS$ \ Call updatelog(debug)
    CMC = OpenFile(-2288,intCo) \ If CMC = -1 Error 42
LoopTop: Rem
    !
    Search #CMC,3,1;CMK$,CMR,CME
    If CME = 0
      Mat Read #CMC,CMR;CM.;
    Else 
      Clear CM.
      Goto LoopEnd
    End If 
LoadMe: !
    If ii < iLimit
      cc.[ii].Commcode$ = CMK$
      cc.[ii].Commodity$ = Escape$(CM.D$[1,16])
      ii = ii + 1
    Else 
      Goto LoopEnd
    End If 
    Goto LoopTop
LoopEnd: !
    Close #CMC
    msg$ = "doing...end of " + pgmName$ \ Call updatelog(debug)
    ss = 0
    Exit Sub 
  Else 
    temp$ = ""
    Call errTrap(pgmName$)
  End Try 
  Sub updatelog(debug)
    If Not(debug) Exit Sub 
    System "echo ''" + Msc$(0) + " " + msg$ + "'' >> " + dlog$
  End Sub 
  Sub parseWords(strSearch$,Word$[])
    If Len(strSearch$) <= 0 Exit Sub 
    strSearch$ = Trim$(strSearch$);max = Len(strSearch$)
    If strSearch$[max] < " " Let strSearch$[max] = ""
    For I = 0 To 1
      Word$[I] = ""
    Next I
    I = 0;position = 0
findWords: !
    temp$ = ""
    Let temp$ = strSearch$[position + 1] To " " : position
    If Len(temp$)
      Word$[I] = temp$;I = I + 1
    End If 
    If position <> 0 And I <> 2 Goto findWords
  End Sub 
  Sub errTrap(pgmName$)
    msg$ = "error...",Spc(8)," ",Msc$(2)," at ",Str$(Spc(10))," ",pgmName$
    Call updatelog(1)
  End Sub 
  ss = 0
  !
End Sub 
