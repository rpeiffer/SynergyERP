! --- serp111.dl4 
! Customer message maintenance program converted from mx111 
!
! 1.0 09/14/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp111.dl4 src/serp111.src
!
! From the original code:
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 11, 2005  10:19:44
Rem /w2/papermaster/r2005//usr/acct/jcs/work/r2005/mx1/mx111.src (univ2) [jcs] {20943}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX111  -  CUSTOMER NOTES
Rem     *************
Rem
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
include "src/inc/fileartermcode.inc"
include "src/inc/filezonefle.inc"
!
!
! *declare additional dl4 intrinsic subs & functions
Declare Intrinsic Sub DateToJulian,InpBuf,JulianToDate,String
Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile,pdate$,jdate$,Formatdate2$

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim 3%,maxcnt
maxcnt = 1000
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[500],list$[maxcnt,100],scratch$[100],spaces$[100]
spaces$=" ",spaces$
dim message$[150],webstr$[200]
 !
 ! call dxopen()
 !
 ! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
Dim 1%,C2[2],J0,J2,J3,J4,J5,J6,J8,J9[2],Y,C7[4],CSSI[99]
Dim 2%,C1[12],E,I,K,K1,K2,W,X,X1,ODATE,ARDATE,COID,CUST,ch_cntrl
Dim 3%,J1,X2,C12[0]
Dim A$[100],A0$[28],A1$[30],J$[60],J0$[15],J1$[60],J2$[20],ARTERM$[16]
Dim J5$[70],J7$[40],J9$[60],K1$[25],P9$[50],S1$[20],U3$[80],U5$[50]
Dim X$[10],A2$[30],B1$[30],W$[60],2%,X,3%
COID = IntCO
! make sure #1 has control file open
I = openfile(-9999,coID)
For I = 2 To 4
  Read X \ Mat Read #1,88,X;J$;
  Open #I,J$[1,16]
Next I
Data "720","1808","1920"
J$ = COID Using "2/ARTERMCODE#" \ Ropen #15,J$
Mat Read #1,19,50;P9$;
Read #1,0,108;ARDATE;
!
! make sure the customer exists and read the customer record
!
call DXGet("custid", tmp$)
cust = tmp$
if not(cust)
	E = 1
else
	k1$=cust using "######"
	Search #3,2,1;K1$,K2,E \ If E > 1 Error 42
end if
if E e$ ="Customer not on file." \ error 10000
Mat Read #3,K2,30;A1$;
Mat Read #3,K2,142;C1;
Mat Read #3,K2,194;C2;
Mat Read #3,K2,348;A2$;
Mat Read #3,K2,378;C7;
Mat Read #3,K2,668;C12;
!
! get customer notes record
!
Search #2,2,1;K1$,K1,E \ IF E > 1 Error 42
If E <> 0	! notes rec doesn't exist
	A$ = " ",A$ \ A0$ = " ",A0$ \ ODATE = 0
	k1 = -1
else	! notes rec does exist - get it
	Mat Read #2,K1;A$;
	Mat Read #2,K1,100;A0$;
	Mat Read #2,K1,168;ODATE;
end if

!
! we are either getting data, or receiving submitted data
!
call DXGet("action1", action1$)
!
! GETDATA REQUEST
!
if action1$ = "GETDATA"
	! Section 1 - header
	tmp$=bsdel$+"CustomerNotes"+fdel$+rdel$
	tmp$=tmp$+"CustID"+fdel$
	tmp$=tmp$+"Name"+fdel$
	tmp$=tmp$+"Notes1"+fdel$
	tmp$=tmp$+"Notes2"+fdel$
	tmp$=tmp$+"Terms"+fdel$
	tmp$=tmp$+"CreditChkFlag"+fdel$
	tmp$=tmp$+"CreditLimit"+fdel$
	tmp$=tmp$+"CreditCode"+fdel$
	tmp$=tmp$+"DateOpened"+fdel$
	tmp$=tmp$+"FaxNumber"+fdel$
	tmp$=tmp$+"ZoneCode"+fdel$
	tmp$=tmp$+"StopNumber"+fdel$+rdel$
	Call AddToStr(e$,rstr$,tmp$)  ! put header into rstr$
	! Section 1 - main data
	tmp$=str$(cust)+fdel$
	tmp$=tmp$+a1$+fdel$
	tmp$=tmp$+a$[1,50]+fdel$
	tmp$=tmp$+a$[51,100]+fdel$
	tmp$=tmp$+str$(c2[0])+fdel$	! terms code
	tmp$=tmp$+str$(c1[3])+fdel$	! credit ck flag
	tmp$=tmp$+str$(c12[0])+fdel$ ! credit limit
	tmp$=tmp$+str$(c1[0])+fdel$	! credit code
	! if no date opened yet, use ar date
	If Not(ODATE)
		scratch$=pdate$(ARDATE)
	else
		scratch$=jdate$(ODATE)
	End If 
	tmp$=tmp$+scratch$+fdel$
	tmp$=tmp$+a0$[9,28]+fdel$	! fax #
	tmp$=tmp$+a2$[29,30]+fdel$	! zone
	tmp$=tmp$+str$(C7[4])+fdel$+rdel$+esdel$	! stop
	Call AddToStr(e$,rstr$,tmp$)  ! put "data" into rstr$
	!
	! section 2 - ar terms code drop list
	call fileDropListartermcode(e$,list$[],maxcnt,15)
	call addToStr(e$,rstr$,list$[])
	!
	! section 3 - credit code drop list
	clear list$[]
	row=0
	List$[row]=bsdel$,"droplistcreditcode",fdel$
	row = row + 1
	list$[1]="ID",fdel$,"Desc",fdel$
	row = row + 1
	for i = 1 to 16
		Mat Read #1,22,i * 16 - 16;U5$;
		list$[row] = str$(i),fdel$,u5$[1,16],fdel$
		row = row + 1
	next i
	List$[row]=esdel$ ! end of section
	call addToStr(e$,rstr$,list$[])
	!
	! section 4 - zone drop list
	call fileDropListzonefle(e$,list$[],maxcnt,4)
	call addToStr(e$,rstr$,list$[])
	!
	! section 5 - status
	Message$=""
	ReturnStatus=1
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call addToStr(e$,rstr$,webstr$)
	goto OutEnd:
else if action1$ = "SUBMITDATA"
	! SUBMITDATA
	if k1 = -1 ! no cust notes record currently out there
		! need a new record - initialize
		! all fields that are not updated via
		! this maintenance program
		E = 2 \ Search #2,1,0;K1$,K1,E
		If E Error 42
		Search #2,4,1;K1$,K1,E \ If E Error 42
		A$ = " ",A$ \ A0$ = " ",A0$ \ ODATE = 0
		For I = 0 To 99 \ CSSI[I] = I \ Next I
		Mat Write #2,K1,172;CUST;
		Mat Write #2,K1,176;CSSI;
	end if
	spaces$ = " ",spaces$
	call DXGet("Notes1", tmp$)
	tmp$ = rtrim$(tmp$) \ a$[1,50] = tmp$,spaces$
	call DXGet("Notes2", tmp$)
	tmp$ = rtrim$(tmp$) \ a$[51,100] = tmp$,spaces$
	call DXGet("Terms", tmp$)
	c2[0] = val(tmp$)
	call DXGet("CreditChkFlag", tmp$)
	c1[3] = val(tmp$)
	call DXGet("CreditLimit", tmp$)
	c12[0] = val(tmp$)
	call DXGet("CreditCode", tmp$)
	c1[0] = val(tmp$)
	call DXGet("DateOpened", tmp$)
	call DateToJulian(5,Formatdate2$(tmp$), scratch$)
	ODATE = val(scratch$)
	call DXGet("FaxNumber", tmp$)
	tmp$ = rtrim$(tmp$) \ a0$[9,28] = tmp$,spaces$
	call DXGet("ZoneCode", tmp$)
	tmp$ = rtrim$(tmp$) \ a2$[29,30] = tmp$,spaces$
	call DXGet("StopNumber", tmp$)
	C7[4] = val(tmp$)
	!
	! update custnotes record
	!
	Mat Write #2,K1;A$;
	Mat Write #2,K1,100;A0$;
	Mat Write #2,K1,168;ODATE;
	!
	! update appropriate pieces of customer record
	!
	Mat Write #3,K2,142;C1;
	Mat Write #3,K2,194;C2;
	Mat Write #3,K2,348;A2$;
	Mat Write #3,K2,378;C7;
	Mat Write #3,K2,668;C12;
	Message$="Customer Message Updated"
	ReturnStatus=1
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call addToStr(e$,rstr$,webstr$)
	goto OutEnd:
else ! not sure what action this is
	e$ = "Unknown action: "+action1$ \ error 10000
end if
OUTEND: Rem EXIT ROUTINE
Close 
call setoutput(e$,rstr$)
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end