!"serp931" === description  synergy erp Control File 931 Import File Maintenance
! 
! loadsave -w -n 100,10 -o prog/dxport/serp931.dl4 src/serp931.src
!  08/04/2009 started - try for global - pass rec # in Action 2
!
include "src/copyright.inc"
!
! records documented: 32 - import purchase order cartage and insurance
!					  

! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus

External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,JDate$,FormatDate2$

Declare Intrinsic sub programdump,env,Logic
Declare Intrinsic Sub DateToJulian, JulianToDate
Declare Intrinsic Function findchannel

! internal subs/function
Declare Sub OpenFiles,UpdateLog



OPTION GOSUB NESTING 16  ! Default is 8
Try
	Option String Redim is legal ! in case subs dim/use same names
	
	dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
	dim action$[30],options$[30],userid$[8],b$[200],action1$[30],Action2$[30]
	Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000]
	dim tmp$[1200],tmp1$[300],Msgdesc$[150],X$[20]
	dim Message$[200],WebStr$[2000],SessionID$[200]
	Dim Desc$[30],P9$[50],P60$[50],P61$[256]
	Dim QMask$[20],PMask$[20],Key1$[60],UA2$[50]
	Dim Mask34$[10]
	dim Blank$[100] \ Blank$=" ",Blank$
	DIM 2%,CFEE[2],2%,POINS
	Dim 1%,X1[9],D1[1],COMM_LEV,FOffset
	dim 1%,cost_lev[4],Whse,debug,cnvtu[2],2%,Q0[1]
	Dim 2%,X2[9],UA2[2]
	Dim 2%,maxcnt \ maxcnt=50 ! init max records in arrays for list
	Dim 3%,CRec,X3[9]
	Dim 3%,R[99],O1,UB0[16],Amount,CNVTA
	dim List$[maxcnt,1000] ! for .net (larger size - ZLines)
	dim slist$[maxcnt,1000] ! second list
	dim dmsg$[256],dblog$[60] \ dblog$="files/6/contrlf.log" ! fields for DEBUG

	Def FNI(H) = Int(Abs(H) +.5) * Sgn(H)
	Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)

	! call dxopen() ! done in fmmenu - for standalone run
	call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
	
	debugDetail=0;debug=0 ! can do debug text by changing both to 1
	If debugDetail
		debug=1
		tmp$="serp931"
		dmsg$[1,50]="-",dmsg$ \ Call updatelog(debug)               
		dmsg$="start...program "+tmp$ \ Call updatelog(debug)
	Endif
	Action$=UCase$(Action$)
	ACtion$=RTrim$(Action$) ! make sure UPPERCASE and No blanks at end
	Action1$=UCase$(action1$)
	Action1$=RTrim$(action1$) ! UC and trimmed
	Action2$=UCase$(action2$)
	Action2$=RTrim$(action2$) ! UC and trimmed
	if debugdetail
		dmsg$="SERP931 ACTION "+action$
		If Action1$<>"" let dmsg$=dmsg$+" ACTION1 "+action1$ 
		if Action2$<>"" let dmsg$=dmsg$+" ACTION2 "+action2$
		Call updatelog(debug)
	Endif
	Close #CTLC ! close read only control file
	call OpenFiles() ! open all needed files
	call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost security

	Mat Read #ctlc,19,50;P9$;
	Mat Read #ctlc,60,50;P60$;
	Mat Read #ctlc,61,0;P61$;
	Mat Read #CTLC,115,40;Q0;
	
	Mask34$="###.####" ! 3.4 mask
	QMask$="---------#.##"
	tmp$="#",tmp$
	If q0[1]<=0 Let Q0[1]=2
	If Q0[1] Let Pmask$="-----------#.",tmp$[1,Q0[1]]     !price mask
	! get the Usercntrl Rec #
	If Userid$="" or UserID$[1,2]="  "
		Call DXGet("S_USER.ID",tmp$) ! get from system variable
	Else
		tmp$=UserID$
	Endif
	Let UserID$=UCase$(tmp$) ! make sure it's UPPERCASE as that's what PM uses
	Let Key1$=UserID$+"          " ! space fill it
	UCC = OpenFile(-9988, intCo) \ if UCC=-1 Error 42
	Key1$[11]="" ! cut to length
	Search #UCC,2,1;Key1$,Rec,E
	If Not(E)
	  Let SCR=Rec
	  Mat Read #ucc,scr,200;UA2;
	  Mat read #ucc,scr,336;Ua2$;
	  Read #ucc,scr,394;comm_lev;
	Else
	  Let SCR=0;comm_lev=0 ! 
	  UA2[0]=0;UA2$=" ",UA2$
	Endif
	Close #UCC
	! GET additional user data flags
	REM UNPACK A2[0] TO B0[]                         
	FOR X1=0 TO 15                                          
		LET O1=2^X1 \ LET M1=1
		! CALL $LOGIC,M1,O1,A2[0],B0[X1] ! ub
		Call Logic(m1,O1,UA2[0],UB0[X1])
		LET UB0[X1]=SGN(UB0[X1])
	NEXT X1   
	! call dxsave(0,"tmp/crecsv.txt!") ! save web send data
	ReturnStatus=0
	Message$="Action 1 not found"
	select case action1$
	Case "CARTAGE"
		IF RTRIM$(ACTION2$)= "GETDATA" ! data from cntrl REC#32						Import-Cartage-GetData.doc
				returnstatus=1
				message$="OK"
				Mat Read #ctlc,32,4;cfee;
				FOR CTR=0 TO 2
					IF CFEE[CTR]<0 Or CFEE[CTR]>99.9999
						LET CFEE[CTR]=0
					ENDIF
				NEXT CTR
				List$[0]=bsdel$,"CARTAGE",fdel$
				List$[1]="FROMDOCK",fdel$,"INWHSE",fdel$,"FROMWHSE",fdel$
				List$[2]=Str$(CFEE[0]),fdel$,Str$(CFEE[1]),fdel$,Str$(CFEE[2]),fdel$
				List$[3]=esdel$
				call AddToStr(e$,rstr$,List$[])
				goto serp931done:
		endif
		! end of GETDATA
		If rtrim$(ACTION2$)="SUBMITDATA" !											Import-Cartage-SubmitData.doc
			returnstatus=1
			message$="OK"
			Mat Read #ctlc,32,4;cfee;
			clear cfee[]
			call dxget("FROMDOCK",tmp$)
			LET CFEE[0]=TMP$
			If cfee[0]<0 or cfee[0]>99.9999
				let returnstatus=0
				let message$="Invalid From Dock Amount Entered "
				goto serp931done:
			endif
			call dxget("INWHSE",tmp$)
			LET CFEE[1]=TMP$
			If cfee[1]<0 or cfee[1]>99.9999
				let returnstatus=0
				let message$="Invalid In Whse Amount Entered "
				goto serp931done:
			endif
			call dxget("FROMWHSE",tmp$)
			LET CFEE[2]=TMP$
			If cfee[2]<0 or cfee[2]>99.9999
				let returnstatus=0
				let message$="Invalid From Whse Amount Entered "
				goto serp931done:
			endif
			Mat Write #ctlc,32,4;cfee;
			goto serp931done:
		endif
		!!! action not correct
		returnstatus=0
		Message$="Action 2 not found"!
		goto serp931done:
  Case "INSURANCE"
		IF RTRIM$(ACTION2$)= "GETDATA" ! data from cntrl						Import-Insurance-GetData.doc
				returnstatus=1
				message$="OK"
				Mat Read #ctlc,32,24;POINS;
				IF POINS<0 Or POINS>99.9999
						LET POINS=0
				ENDIF
				List$[0]=bsdel$,"INSURANCE",fdel$
				List$[1]="INSURANCE",fdel$
				List$[2]=Str$(POINS),fdel$
				List$[3]=esdel$
				call AddToStr(e$,rstr$,List$[])
				goto serp931done:
		endif
		! end of GETDATA
		If rtrim$(ACTION2$)="SUBMITDATA" ! STC changes							Import-Insurance-Submitdata.doc
			returnstatus=1
			message$="OK"
			Mat Read #ctlc,32,24;POINS;
			let poins=0
			call dxget("INSURANCE",tmp$)
			LET POINS=TMP$
			If POINS<0 or POINS>99.9999
				let returnstatus=0
				let message$="Invalid Insurance Amount Entered "
				goto serp931done:
			endif
			Mat Write#ctlc,32,24;POINS;
			goto serp931done:
		endif
		returnstatus=0
		Message$="Action 2 not found"! end of 
		goto serp931done:
		! call programdump("tmp/creclog1!","")
  End Select
  Serp931Done: ! finished
  ! status section                                                       
  Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)                 
  Call AddToStr(e$,rstr$,WebStr$)                                        
  Call SetOutPut(e$,rstr$)       
  if debugdetail
		dmsg$="End of Program SERP931" \ Call updatelog(debug)
  Endif
else
 include "src/callmainerrnet.inc"
end try
end  ! end of Main
!
!--------------------------------------------------------------------

! subs start now
!------------------------------------------------------------------------------------------
Sub OpenFiles()

 Try
    !
	CTLC=OpenFile(9999,Intco) \ if ctlc=-1 error 42 ! need to be open with read/write
 else
    include "src/callsuberr.inc"
  end try
end sub ! openfiles
!

!------------------------------------------------------------------------------------------
Sub updatelog(debug)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " UID "+RTrim$(Userid$)+" " + dmsg$ + "'' >> " + dblog$
End Sub 
! 


!
