! >>> Program 695
!
! description PHYSICAL INVENTORY VARIANCE REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/695.dl4 src/695.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 24, 2006  15:07:30
Rem /w2/papermaster/r2005/
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX695     -  PHYSICAL INVENTORY VARIANCE REPORT
Rem
Rem REV. 1.2 - 02/18/85 -    - REV. 3/85 FOR MULTI-WHSE
! CUSTOM ZEPHYR
!
Declare Intrinsic Sub InpBuf,String,DateToJulian
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
Declare External Function OpenFile
!!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],W9[5],COST_LEV[3]
Com 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP

include "src/inc/filecpidet.inc"
include "src/inc/filespecprice.inc"

Declare Sub FindCPIResContract

!!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
Dim 1%,RASL[5],3%
Dim D$[50],P9$[50],DTMP$[50],P61$[256]
Dim Custom_customer$[30]
!
L_200: Rem SELECT REPORT
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(rtrim$(custom_customer$))
!
RASL = 0
If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 1
cpiFlag = 0 \ if P61$[111,111] = "Y" cpiFlag = 1
!!RPTSEL: Rem "
!!Print @0,0;'CS';
!!Print @0,0;"MX695";@25,0;"VARIANCE REPORT SELECTIONS"
!!Print @0,2;" WAREHOUSE FOR VARIANCE  ";
!!Print @5,4;" 1> INVENTORY VARIANCE COUNT SHEETS"
!!Print @5,5;" 2> INVENTORY VARIANCE REPORT"
!!Print @25,2;
!!Input Len 16384 + 2;""D$ \ Call String(1,D$)
!!If D$ = "E" Goto L_9010
!!W9 = D$ \ If W9 < 1 Or W9 > 99 Or Fra(W9) Goto RPTSEL
!!If P9$[41,41] = "W" Call "CHKWRASL",W9,RASL[]
!!If RASL If P61$[45,45] = "Y"
!!  Print @5,6;" 3> INVENTORY VARIANCE AGAINST AVAILABLE QTY"
!!  Print @5,7;" 4> EXIT"
!!Else 
!!  Print @5,6;" 3> EXIT";'CE';
!!End If 
!!L_250: Rem "
!!Print @7,8;"  SELECT ";
!!Input Len 16384 + 1;""D$
!!If RASL If P61$[45,45] = "Y"
!!  If D$ = "4" Goto L_9010
!!Else 
!!  If D$ = "3" Goto L_9010
!!End If 
!!Print @0,0;'CS';
!!If D$ = "1" And Not(RASL) Chain "MX695A"
!!If D$ = "1" And RASL Chain "MX695B"
!!If RASL If P61$[45,45] = "Y"
!!  If D$ = "3" Chain "MX695C"
!!End If 
!!If D$ <> "2" If D$ <> "3" Goto L_200
!!Window On 
!
Dim 1%,SORT,W1[2],UNITX,SUPPRESS,costflag,Subtotal
Dim 2%,X1[9],Q0[1],D9[5],R[20],B[24],C4[10]
Dim 3%,P3[3],K5$[20],T9[9],W3[24],M1[17],A1[3],C1,COST,NUMREC
Dim 3%,P1[2],PFN[1],T[9],T1[9],WHMISC[6],PRPARC[3],PF_LOAD2,PWGT
Dim 3%,AMOUNT,CUNIT,SUNIT,CTUNIT,BKUNIT,SUNIT$[4],CUNIT$[4],CTUNIT$[4]
Dim 3%,PRODREC,VARAMT,VARQTY,VARQTY1,COUNTQTY,PRODQTY,WHLBS[1],SPECS[99]
dim 3%,cpiContracts[99]
Dim VARFLAG$[1],PHYKEY$[30],PRODKEY$[30]
Dim K9$[50],A$[156],K8$[6],C1$[32],SORT$[9],D1$[10],U5$[20]
Dim K1$[50],P1$[26],P2$[28],CNAME$[30],CURDAT$[8],STAG$[6],ETAG$[6]
Dim W9$[2],K2$[20],K3$[20],K4$[20],K7$[20],K15$[50],BREAK$[12]
Dim VN$[30],A2$[30],KF8$[50],UNIT$[5],RETVAL$[512],k_cpid$[50],k_sd$[50],tmpProd$[12]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],curJDate,4%,J1
Rem {end dim.rtn.input}
!
dim cpid. as cpidet
dim sd. as specprice

Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[2000],tmp1$[400]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
For I = 2 To 12
  Read X \ If X = -1 Goto L_825
  Read #1,88,Abs(X);K1$[1,16];
  If X >= 0 Open #I,K1$ Else Ropen #I,K1$
L_825: Next I
Data "704","-2528","-1792","-1728","-1744","-2400","-1120","-1","-2352","-1840","-1888"
if cpiFlag
	ch_sd = OpenFile(-1936) \ if ch_sd=-1 error 42
	ch_cpid = OpenFile(-9928) \ if ch_cpid=-1 error 42
end if
SPECS[1]=11 ! ORDER HEADER 
SPECS[2]=12 ! ORDER LINE
Mat Read #1,3,0;CNAME$;
Mat Read #1,3,164;CURDAT$;
Mat Read #1,115;D9;
Mat Read #1,3,176;curJDate;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60 \ If J8 Let L9 = 20
F = J8
!!SORT = 1;STAG$ = " ",STAG$;ETAG$ = "z",ETAG$
!!UNITX = 1;ALTF = 0;DSP_TOT = 0
!!PRNTCWT = 0
!!VARFLAG$ = "N";SUPPRESS = 0
DSP_TOT = 0
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"695",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!Call dxsave(0,"tmp/695in.txt!")
call dxget("WHSE",tmp$) \ W9 = tmp$
call dxget("SORT",tmp$) \ SORT = tmp$
call dxget("STAG",STAG$) \ STAG$ = STAG$,Blank$
call dxget("ETAG",ETAG$) \ ETAG$ = ETAG$,EndParam$
call dxget("COST",tmp$) \ UNITX = tmp$
call dxget("ALTF",tmp$) \ If tmp$ = "" Let ALTF = 0 Else Let ALTF = 9 !!print alternative items?
call dxget("SUPPRESS",tmp$) \ If tmp$ = "" Let SUPPRESS = 0 Else Let SUPPRESS = 99
call dxget("VARFLAG",VARFLAG$) 
call dxget("PRNTCWT",tmp$) \ If tmp$ = "" Let PRNTCWT = 0 Else Let PRNTCWT = 9 !!print only catch weight?
!
!validation warehouse
If W9 < 1 Or W9 > D9[5] let e$ = "Invalid warehouse, must be between 1 and ",D9[5],"!" \ error 10000
If P9$[41,41] = "W" Call "CHKWRASL",W9,RASL[]
!
!validation tag location
If ETAG$ < STAG$ LET  e$ = "Invalid ending tag location, must be >= than starting tag location!" \ error 10000
!
If J8
  If SORT = 1 Let SORT$ = "PRODUCT"
  If SORT = 2 Let SORT$ = "VENDOR"
  If SORT = 3 Let SORT$ = "BUYER"
  If SORT = 4 Let SORT$ = "GRADE"
  IF SORT = 5 let sort$ = "TAG"
Else
  If SORT = 1 Let SORT$ = "PRODUCT: "
  If SORT = 2 Let SORT$ = "VENDOR: "
  If SORT = 3 Let SORT$ = "BUYER: "
  If SORT = 4 Let SORT$ = "GRADE: "
  IF SORT = 5 Let SORT$ = "TAG: "
End if
!
U5$ = " ",U5$
If UNITX = 1 Read #1,18,130;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 2 Let U5$ = "BASE COST"
If UNITX = 3 Read #1,18,120;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 4 Read #1,18,110;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 5 Read #1,18,220;D1$; \ U5$[1,10] = D1$[1,10]
If UNITX = 6 Read #1,18,230;D1$; \ U5$[1,10] = D1$[1,10]
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
costflag=0 ! no cost
if unitx=1 and cost_lev[0]<>0 let costflag=99 ! average cost
if unitx=2 and cost_lev[3]<>0 let costflag=99 ! base cost
if unitx=3 and cost_lev[1]<>0 let costflag=99 ! load cost
if unitx=4 and cost_lev[2]<>0 let costflag=99 ! last cost
if unitx=5 and cost_lev[1]<>0 let costflag=99 ! load cost 2
if unitx=6 and cost_lev[2]<>0 let costflag=99 ! net po cost 
!

STRTSORT: Rem "================================================= sort
!!Window Off 
!
If J8
  If SORT <> 1 and SORT<>5
	Let tmp$ = SORT$,fdel$
 Else
	Let tmp$ = "",fdel$
  endif
  tmp$ = tmp$, "PRODUCT",fdel$,"VENDOR ITEM #",fdel$
  tmp$ = tmp$, "DESCRIPTION 1",fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$, "CUSTOMER",fdel$,"PACK",fdel$
  If ALTF Let tmp$ = tmp$, "ALT ITEMS",fdel$
  !If P9$[1,1] <> "N" And A$[113,113] = "Y" Let tmp$ = tmp$,"LOC NUM",fdel$
  Let tmp$ = tmp$,"LOC NUM",fdel$
  tmp$ = tmp$, "WAREHOUSE",fdel$,"LOCATION",fdel$
  tmp$ = tmp$, "TAG NO",fdel$,"TAG QUANTITY",fdel$
  tmp$ = tmp$, "TAG U/M",fdel$
  ! If A$[127,127] = "Y" Let tmp$ = tmp$, "PWGT",fdel$,"PWGT U/M",fdel$
  Let tmp$ = tmp$, "PWGT",fdel$,"PWGT U/M",fdel$
  tmp$ = tmp$, "STOCK QUANTITY",fdel$,"STOCK QUANTITY U/M",fdel$
  if costflag<>0
	tmp$ = tmp$, "EXTENSION",fdel$,U5$[1,10],fdel$
	tmp$ = tmp$, U5$[1,10]," U/M",fdel$
  endif
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,23;'CE';"Sorting...Please Wait ";
K1$ = " ",K1$;K1$[1,2] = W9 Using "##"
!!NUMREC = 0
L_1515: ! 
Search #2,3,2;K1$,R[2],E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
!!NUMREC = NUMREC + 1
!!If Not(Fra(NUMREC / 200)) Print @40,23;'CL';NUMREC;
If K1$[3,6] = "VOID" Goto L_1515
W9[1] = K1$[1,2] \ If W9 <> W9[1] Goto L_1900
Mat Read #2,R[2],0;P1$;
Mat Read #2,R[2],26;P1;
If STAG$ <> "" If P1$[1,Len(STAG$)] < STAG$ Goto L_1515
If P1$[1,Len(ETAG$)] > ETAG$ Goto L_1515
R[4] = K1$[3,8]
Mat Read #4,R[4],0;A$;
Mat Read #4,R[4],156;B;
Mat Read #4,R[4],856;C1$;
K4$ = " ",K4$ \ K4$[1,12] = A$[140,151] \ Gosub L_3500
If SORT <> 3 Goto L_1600
K8$ = B[24] Using "######"
Search #8,2,1;K8$,R[8],E !!\ If E > 1 Gosub ERR_SEARCH
If E Let M1[15] = 0 \ Goto L_1600
Mat Read #8,R[8],206;M1;
L_1600: K9$ = " ",K9$;R[9] = R[4]
! if sort=1 let k9$[1,12]=A$[140,151] ! P1$[1,12] ! BY PROD IS BY VARIANCE!
If SORT = 2 Let K9$[1,6] = B[24] Using "######"
If SORT = 3 Let K9$[1,6] = W1[2] Using "######"
If SORT = 4 Let K9$[1,12] = C1$[1,12]
if sort = 5 LET K9$[1,6]=P1$[1,6] ! "tag
K9$[25,36] = A$[140,151]
If P1[0] = -99
  If K9$[25,36] = "" Or K9$[25,36] = "            " Goto L_1515
End If 
If VARFLAG$ = "D" Or VARFLAG$ = "Q" Or SUPPRESS <> 0
  PRODKEY$ = " ",PRODKEY$;PRODKEY$ = A$[140,151];PRODREC = R[4]
  PRODWHSE = P1$[25,26]
  PHYKEY$ = " ",PHYKEY$
  PHYKEY$ = K1$[1,8]
  VARAMT = 0;VARQTY = 0;COUNTQTY = 0;PRODQTY = 0
SRCHVAR: Rem search for variance amount
  Search #2,3,2;PHYKEY$,R[2],E \ If E = 2 Goto ENDCHKVAR
!!  If E Gosub ERR_SEARCH
  If PHYKEY$[1,8] <> K1$[1,8] Goto ENDCHKVAR
  Mat Read #2,R[2],0;P1$;
  Mat Read #2,R[2],26;P1;
  If P1 <> -99 ! not skipped
    COUNTQTY = COUNTQTY + P1[0]
  End If 
  If PRODQTY Goto SRCHVAR
  P3[0] = 0 \ P3[1] = 0
  D$ = " ",D$;D$[1,12] = P1$[7,18];D$[13,14] = P1$[25,26]
  DTMP$ = D$
GETQTYONHAND: Rem get qty on hand from sprodlot
  Search #3,3,2;D$,V4,E 
  If E = 2 Goto SRCHVAR
  If DTMP$[1,14] <> D$[1,14] Goto SRCHVAR
  if rasl                                                 
    rem with rasl show varance only for the bins counted    
	IF D$[15,(14+LEN (STAG$))]<STAG$[1,LEN(STAG$)] GOTO GETQTYONHAND
    IF D$[15,(14+LEN (ETAG$))]>ETAG$[1,LEN(ETAG$)] Goto GETQTYONHAND                         
endif                                                   
  Mat Read #3,V4,82;P3;
  PRODQTY = PRODQTY + P3[0] - P3[1]
  Goto GETQTYONHAND
  Goto SRCHVAR
ENDCHKVAR: Rem end check for variance
  C1 = 0
  Mat Read #4,PRODREC,156;B;
  Mat Read #4,PRODREC,512;PFU1;
  Mat Read #4,PRODREC,554;PFU2;
  Mat Read #4,PRODREC,596;PRPARC;
  Mat Read #4,PRODREC,894;C4;
  Mat Read #4,PRODREC,938;PF_LOAD2
  Mat Read #4,PRODREC,1018;PFN;
  if not(RASL)
specs[0]=0
SPECS[3]=PRODREC ! PRODUCT REC NUMBER
specs[4]=w9 ! warehouse number
call "mkonshelfadj.dl4",specs[]
onshelfadj=specs[0]
ELSE 
onshelfadj=0
ENDIF
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA =onshelfadj
Gosub L_20000 \ donshelfadj = AMOUNT

  For X = 0 To 6 \ WHMISC[X] = 0 \ Next X
  For X = 0 To 24 \ W3[X] = 0 \ Next X
  If P9$[32,32] = "Y" ! check cost from warehouse
    K15$ = " ",K15$;K15$[1,12] = PRODKEY$[1,12]
    K15$[13,14] = PRODWHSE Using "##"
    Search #6,2,1;K15$,R5,E
    If Not(E)
      Mat Read #6,R5,78;W3;
      Mat Read #6,R5,800;WHMISC;
    End If 
  End If 
  Gosub SET_COST
  PRODQTY=PRODQTY-onshelfadj ! Back out THE ITEMS PULLED FROM THE SHELF
  VARAMT = ((PRODQTY * C1) - (COUNTQTY * C1))
  VARQTY = ((PRODQTY - COUNTQTY))
  If SUPPRESS
    If VARAMT = 0 And VARQTY = 0
      K1$[9,16] = "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
      Goto L_1515
    End If 
  End If 
  If VARFLAG$ = "D"
    If Not(VARAMT)
      K9$[13,24] = "zzzzzzzzzzzz"
    Else 
      K9$[13,24] = 1000000000000 - Abs(VARAMT * 100) Using "############"
    End If 
  End If 
  If VARFLAG$ = "Q"
    If Not(VARQTY)
      K9$[13,24] = "zzzzzzzzzzzz"
    Else 
      CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = VARQTY
      Gosub L_20000 \ VARQTY1 = AMOUNT

      K9$[13,24] = 1000000000000 - Abs(VARQTY1 * 100) Using "############"
    End If 
  End If 
End If 
Search #9,4,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 695 sortfile mode (m)=4 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \error 10000
K1$[9,26] = "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
Goto L_1515
!
L_1900: !!If L9 > 20 Print @0,23;'CE';"PRINTING...PLEASE WAIT"; Else Print 'CS'
K4$ = " ",K4$
!!If Err 0 Gosub ERR_ESCAPE
L = 100
K9$ = " ",K9$;BREAK$ = ""
L_1940: !
Search #9,3,1;K9$,R[9],E 
K5$ = " ",K5$;K5$[1,12] = K9$[25,36];R[4] = R[9]
If E Goto L_8000
if custom_customer$="ZEPHYR" LET SUBTOTAL=1		! " *JAL
cnt=cnt+1
If SORT <> 1 and sort<>5
	If BREAK$ <> "" If BREAK$[1,12] <> K9$[1,12] Let L = 100
endif
BREAK$[1,12] = K9$[1,12]
L_1960: K1$ = " ",K1$;K1$ = W9 Using "##" ! "whse-custom label -zephyr -JAL chgs
K1$[3] = R[4] Using "######"
Search #2,2,2;K1$,V1,E 
If Not(E) Goto L_2030
If E Goto L_1940
!
L_2000: Rem "============================================== LOOP IT HERE !!
	Search #2,3,2;K1$,V1,E 
	If E Gosub L_4000 \ Goto L_1940
	L_2030: Rem  LET W9[1]=K1$[1,2] \ IF W9[1]<>W9 GOTO L_8000: ! "check whse
	Mat Read #2,V1,0;P1$;
	If STAG$ <> "" If P1$[1,Len(STAG$)] < STAG$ Goto L_2000
	If P1$[1,Len(ETAG$)] > ETAG$ Goto L_2000
	If P1$[7,10] = "VOID" Goto L_2000
	K4$[1,12] = K5$[1,12]
	if custom_customer$="ZEPHYR"
		L_2062: IF K4$[1,12]<>P1$[7,18] !!! PRODUCT SUBTOTAL   ! *JAL
			IF SUBTOTAL								! " custom for zephyr - *JAL
				IF T[0]=BKUNIT
					GOSUB L_4210
					GOTO L_1940
				ELSE 
					GOSUB L_4270
					LET SUBTOTAL=0
					GOTO L_1960
				ENDIF 
			ELSE 
				GOSUB L_4000 \ GOTO L_1940
			ENDIF
		ENDIF
	Else
		If K4$[1,12] <> P1$[7,18] Gosub L_4000 \ Goto L_1940
	Endif
	Mat Read #2,V1,26;P1;
	Mat Read #2,V1,44;P2$;
	Mat Read #2,V1,72;PWGT;
	If P1[0] = -99 Let SKP = 99;P1[0] = 0;PWGT = 0 Else Let SKP = 0
	Gosub L_3000 \ Goto L_2000
	Rem  holder comment
	if cpiFlag
		if L8=0 let w9[1] = k1$[1,2] \ call FindCPIResContract(P1$[7,18],w9[1])
	end if
	If PRNTCWT If A$[127,127] <> "Y" Goto L_2000
	KF8$ = " ",KF8$;KF8$[1,12] = A$[140,151]
	Gosub L_3200
	Gosub L_3500
	Gosub SET_COST
	Gosub L_10000
	if custom_customer$="ZEPHYR"
		IF NOT(SUBTOTAL) GOSUB L_5000 !!! PRINT LINE  *JAL
	Else
		Gosub L_5000
	Endif
	T[0] = T[0] + SUNIT
	T9[0] = T9[0] + P1[0]
	T[1] = T[1] + FNR(P1[0] * C1)
	T[7] = T[7] + PWGT
Goto L_2000
!
L_3000: Rem "=============================================== READ PRODUCT
	K2$ = P1$[7,18]
	Search #4,2,1;K2$,V3,E 
	If E Goto L_3120
	Mat Read #4,V3,0;A$;
	Mat Read #4,V3,256;A;
	Mat Read #4,V3,156;B;
	Mat Read #4,V3,512;PFU1;
	Mat Read #4,V3,554;PFU2;
	Mat Read #4,V3,596;PRPARC;
	Mat Read #4,V3,894;C4;
	Read #4,V3,938;PF_LOAD2;
	Mat Read #4,V3,944;A2$;
	Mat Read #4,V3,1018;PFN;
	Read #4,V3,240;C1;
	IF NOT(RASL)
		specs[0]=0
		SPECS[3]=v3 ! PRODUCT REC NUMBER
		specs[4]=w9 ! warehouse number
		call "mkonshelfadj.dl4",specs[]
		onshelfadj=specs[0]
	ELSE
		onshelfadj=0
	ENDIF
	CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA =onshelfadj
	Gosub L_20000 \ donshelfadj = AMOUNT
	Gosub L_3400
Return 1
!
L_3120: Rem NOT FOUND !!
A$[9,38] = "PRODUCT NOT FOUND!"
C1 = 0
For I = 0 To 4 \ A[I] = 0 \ Next I
P1$[7,18] = "VOID TAG    "
Mat Write #2,V1,0;P1$;
Return 
!
L_3200: Rem GET ON HAND FROM SPRODLOT
If A1 Return 
D$ = " ",D$;D$[1,12] = P1$[7,18];D$[13,14] = P1$[25,26]
DTMP$ = D$
L_3240: Search #3,3,2;D$,V4,E
If E Return 
If DTMP$[1,14] <> D$[1,14] 
LET A1=A1-onshelfadj
Return
endif
if rasl                                                            
  rem with rasl show varance only for the bins counted.              
	IF D$[15,(14+LEN (STAG$))]<STAG$[1,LEN(STAG$)] GOTO L_3240
    IF D$[15,(14+LEN (ETAG$))]>ETAG$[1,LEN(ETAG$)] Goto L_3240                 
 endif        
Mat Read #3,V4,82;P3;
A1 = A1 + P3[0] - P3[1]
A1[3] = A1[3] + P3[3]
Goto L_3240
!
L_3400: Rem GET VENDOR
K7$ = " ",K7$;K7$ = B[24] Using "######"
Search #7,2,1;K7$,R[7],E !!\ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_3460
Mat Read #7,R[7],0;VN$;
Return 
!
L_3460: Rem NG
VN$ = " ",VN$
VN$ = "VENDOR NOT ON FILE"
Return 
!
L_3500: Rem READ WAREHOUSE
W1[2] = 0;WHLBS[0] = 0
For X = 0 To 24 \ W3[X] = 0 \ Next X
K15$ = " ",K15$
K15$[1,12] = K4$[1,12]
K15$[13,14] = W9 Using "##"
Search #6,2,1;K15$,R5,E 
If Not(E)
  Mat Read #6,R5,32;W1;
  Mat Read #6,R5,78;W3;
  Mat Read #6,R5,800;WHMISC;
  Mat Read #6,R5,980;WHLBS;
End If 
Return 
!
L_3800: Rem GET ALL ALT ITEMS
DONE = 0
L_3810:
Search #10,3,2;KF8$,R10,E 
If E = 2 Let DONE = 9
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
L_4000: Rem TOTAL FOR THIS PART
if PRNTCWT if L8=0 return ! print catch items only, no items found
If L8 = 0 Return 1
If L8 = 1 Goto L_4065
!
If Not(J8)
  If A$[127,127] = "Y"
    Print #0; Tab 44;"TAG TOTALS";
    Print #0; Using "--------#.## "; Tab 53;T[7];"LB";
  Else 
    Print #0; Tab 50;"TAG TOTALS";
  End If 
  Print #0; Using "--------#.##"; Tab 68;T[0];
  IF COSTFLAG<>0
	Print #0; Using "----------#.##"; Tab 85;T[1];
  ENDIF
  Print #0;""
End if
L = L + 1
L_4065: Rem " IF NOT NETPO PRINT #0;" AVG "; ELSE  PRINT #0;" NET ";
!
If Not(J8)
  Print #0;" ";U5$[1,10];
  IF COSTFLAG<>0
	Print #0; Using ": -----#.#### / ";CUNIT;CUNIT$;
  endif
  Print #0; Tab 30;"BOOK TOTALS";
  Print #0; Using " Adj ------#.## "; Tab 43;donshelfadj;SUNIT$;
  Print #0; Using "---------#.## "; Tab 67;BKUNIT;SUNIT$;
  if costflag<>0
	Print #0; Using "----------#.##"; Tab 85;FNR(A1[0] * C1);              
  endif
End if
T[2] = T[0] - BKUNIT
T9[1] = T9[0] - A1[0]
If Not(J8)
  Print #0; Using "-------#.##";tab 99;T[2];
  If A$[127,127] <> "Y" ! only if not a catchweight
	if costflag<>0
		If C1 Print #0; Using "---------#.##";FNR(T9[1] * C1);
		If Not(C1) Print #0;"*************";
	endif
	print #0;""
  Else 
    Print #0;""
  End If 
  L = L + 2
  If A$[127,127] = "Y" ! "catch weight - do lbs
    Print #0; Using "------#.## "; Tab 70;WHLBS[0];"LB";
    T[9] = T[7] - WHLBS[0]
    Print #0; Using "-------#.##"; Tab 99;T[9];
	if costflag<>0
		If C1 Print #0; Using "---------#.##";FNR(T[9] * CWUNIT);
		If Not(C1) Print #0;"*************";
	endif
	print #0;""
    L = L + 1
  End If 
  Print #0;" "
End if
L_4210: T1 = T1 + T[0]  ! "custom label for zephyr -- JAL change
T1[1] = T1[1] + T[1]
T1[2] = T1[2] + BKUNIT \ If BKUNIT > 0 Let T1[7] = T1[7] + BKUNIT
T1[3] = T1[3] + FNR(A1[0] * C1) \ If A1[0] > 0 Let T1[8] = T1[8] + FNR(A1[0] * C1)
T1[4] = T1[4] + T[2]
Rem LET T1[5]=T1[5]+(T9[1]*C1)
If A$[127,127] = "Y" ! it's catchweight
  T1[5] = T1[5] + (T[9] * CWUNIT)
Else 
  T1[5] = T1[5] + (T9[1] * C1)
End If 
L_4270: For I = 0 To 9  ! "custom label for zephyr -- JAL change
  T[I] = 0
  T9[I] = 0
Next I
L8 = 0;A1[0] = 0 \ Mat A1 = Zer
if custom_customer$<>"ZEPHYR" ! standard=print/add
	If Not(J8) Print #0;" "
	L = L + 1
Endif
Return 
!
L_5000: Rem PRINT LINE
	L = L + 1
	L8 = L8 + 1
	If L > L9 Gosub L_5800
	!
	If J8
		! browser version
		If SORT <> 1 and sort<>5
			Let tmp$ = rtrim$(K9$[1,12]),fdel$
		Else
			Let tmp$ = "",fdel$
		endif
		tmp$ = tmp$, rtrim$(P1$[7,18]),fdel$
		tmp$ = tmp$, rtrim$(A$[93,112]),fdel$
		tmp$ = tmp$, rtrim$(A$[9,38]),fdel$
		If P9$[26,26] = "Y" Let tmp$ = tmp$, rtrim$(A$[63,92]),fdel$
		tmp$ = tmp$, rtrim$(VN$[1,30]),fdel$,rtrim$(A2$[13,27]),fdel$
		If ALTF Gosub L_5500
		If P9$[1,1] <> "N" And A$[113,113] = "Y" 
			Let tmp$ = tmp$,rtrim$(P2$[1,12]),fdel$
		Else
			tmp$=tmp$,fdel$
		Endif
		tmp$ = tmp$, P1$[25,26],fdel$
		tmp$ = tmp$, P2$[23,28],fdel$
		tmp$ = tmp$, P1$[1,6],fdel$
		If Not(SKP) Let tmp$ = tmp$,LTrim$(CTUNIT Using "------#.##"),fdel$
		If SKP Let tmp$ = tmp$, "TAG SKIPPED!!",fdel$
		tmp$ = tmp$, CTUNIT$,fdel$
		If A$[127,127] = "Y"
			If Not(SKP) Let tmp$ = tmp$,LTrim$(PWGT Using "------#.##"),fdel$ Else Let tmp$ = tmp$,"",fdel$
			tmp$ = tmp$, " LB",fdel$
		else 
			tmp$=tmp$,fdel$,fdel$
		End If 
		tmp$ = tmp$, LTrim$(SUNIT Using "------#.##"),fdel$
		tmp$ = tmp$, SUNIT$,fdel$
		if costflag<>0
			tmp$ = tmp$, LTrim$(FNR(P1[0] * C1) Using "----------#.##"),fdel$
			tmp$ = tmp$, LTrim$(CUNIT Using "-----#.####"),fdel$,CUNIT$,fdel$ 
		endif
		call addtostr(e$,rstr$,tmp$+rdel$) 
		Return 
	End if
	!
	If L8 <> 1 Goto L_5085
	Print #0; Tab 0;P1$[7,18];
	Print #0; Tab 15;A$[93,112];
	Print #0; Tab 37;A$[9,38];
	If P9$[26,26] = "Y" Print #0;"  ";A$[63,92];
	Print #0;"" \ L = L + 1
	if cpiFlag
		if cpiContracts[0] ! have at least one
			print #0;"RESERVE: ";
			if cpiContracts[1] ! have more than 1
				idx = 0
				do
					Print #0;cpiContracts[idx];
					if idx = 15 exit do
					idx = idx + 1
					if cpiContracts[idx]
						print #0;", ";
					else
						exit do
					end if
				loop
				print #0;"" \ L = L + 1
			else
				! only 1
				PRINT #0;cpiContracts[0];
			end if
		end if
	end if
	Print #0; Tab 15;VN$[1,30]; Tab 50;"PACK: ";A2$[13,27] \ L = L + 1
	If ALTF Gosub L_5500
	L_5085: If P9$[1,1] = "N" Goto L_5095
	If P9$[1,1] = "Y" Goto L_5092
	If A$[113,113] <> "Y" Goto L_5095
	L_5092: Print #0; Using "#####.#### "; Tab 2;P2$[1,12];
	L_5095: Print #0; Tab 18;P1$[25,26];
	Print #0; Tab 23;P2$[23,28];
	Print #0; Tab 30;P1$[1,6];
	If Not(SKP) Print #0; Using "--------#.## "; Tab 38;CTUNIT;
	If SKP Print #0; Tab 40;" TAG SKIPPED !!";
	Print #0; Tab 51;CTUNIT$;
	If A$[127,127] = "Y"
		If Not(SKP) Print #0; Using "-------#.## "; Tab 55;PWGT;
		Print #0; Tab 66;"LB";
	End If 
	Print #0; Using "--------#.## "; Tab 68;SUNIT;
	Print #0;SUNIT$;
	if costflag<>0
		Print #0; Using "----------#.##"; Tab 85;FNR(P1[0] * C1);
	endif
	Print #0;" "
Return 
!
L_5500: Rem PRINT ALT ITEMS
POS1 = 0
Gosub L_3800
!
If J8
  If Not(DONE) Let tmp$ = tmp$,rtrim$(KF8$[13,36])
  L_5510: 
  If Not(DONE) Gosub L_3810 
  If Not(DONE) Let tmp$ = tmp$, " ", rtrim$(KF8$[13,36])
  If Not(DONE) Goto L_5510
  tmp$ = tmp$,"",fdel$
  Return 
End if
!
If Not(DONE) Print #0; Tab 1;"ALT ITEMS: ";KF8$[13,36]; \ POS1 = 35
L_5520: Rem LOOP
If Not(DONE) Gosub L_3810
If Not(DONE) Print #0;", ";KF8$[13,36]; \ POS1 = POS1 + 26
If Not(DONE) If POS1 > 106 Print #0;"" \ L = L + 1;POS1 = 0
If Not(DONE) Goto L_5520
If POS1 Print #0;"" \ L = L + 1
Return 
!
L_5800: Rem "======================================= HEADINGS
If J8 Return
!
If P = 0 Goto L_5835
If L9 <> 20 Goto L_5830
!!Print "\15\PRESS <CR> TO CONTINUE ";
!!Input Len 16384 + 1;""J$
!!Print 'CS';
L_5830: Print #0;"\14\"
L_5835: P = P + 1
Print #0; Tab 2;CURDAT$; Tab (66 - (Len(CNAME$) / 2));CNAME$; Tab 115;"PAGE ";P
Print #0;" - 695 - ";Msc$(3);
Print #0; Tab 34;"P H Y S I C A L   I N V E N T O R Y   V A R I A N C E   R E P O R T"
Print #0; Tab 5;U5$;
Print #0; Tab 50;"FOR WAREHOUSE: ";W9;",  SORTED BY ";SORT$;
If VARFLAG$ = "D" Print #0;" Dollar Variance";
If VARFLAG$ = "Q" Print #0;" Quantity Variance";
Print #0;""
If SUPPRESS
  Print #0; Tab 50;"*** All Items Not Listed On Report ***"
End If 
Print #0;" "
Print #0; Tab 1;"PRODUCT"; Tab 15;"VENDOR ITEM #";
Print #0; Tab 32;"TAG"; Tab 45;"TAG"; Tab 74;"STOCK";
Print #0; Tab 99;"QUANTITY";
if costflag<>0
	Print #0; Tab 113;"COST";
endif
print #0;""
If P9$[1,1] <> "N" Print #0; Tab 8;"LOT NUM";
Print #0; Tab 16;"WHSE#"; Tab 23;"LOC";
Print #0; Tab 32;"NO."; Tab 41;"QUANTITY"; Tab 51;"U/M";
Print #0; Tab 71;"QUANTITY"; Tab 81;"U/M"; 
if costflag<>0
	print #0;Tab 87;"EXTENSION";
endif
Print #0; Tab 99;"VARIANCE"; 
if costflag<>0
	Print #0;Tab 111;"VARIANCE";
endif
Print #0;""
Print #0;" "
If SORT <> 1 and SORT<>5
	Print #0;SORT$;K9$[1,12] \ Print #0;" "
endif
L = 10
If SUPPRESS Let L = L + 1
Return 
!
Rem {begin call.input.i}
!!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
!!L_7500: Rem "=============================================== display screen
!!Print @0,0;'CS';"-MX695-";@25,0;"PHYSICAL VARIANCE REPORT"
!!Print @0,5;"      WAREHOUSE FOR REPORT "
!!Print @0,7;" 1> SORT BY:  ";@15,8;"1: PRODUCT CODE"
!!Print @15,9;"2: VENDOR CODE"
!!Print @15,10;"3: BUYER CODE"
!!Print @15,11;"4: GRADE"
!!Print @25,12;"STARTING";@40,12;"ENDING"
!!Print @0,13;" 2> TAG/LOCATION";
!!Print @0,15;" 3> COST TO USE";
!!Print @0,16;" 4> PRINT ALL ALTERNATIVE ITEM CODES? (Y/N)  ";
!!Print @0,17;" 5> DISPLAY COST TOTALS ON THE SCREEN? (Y/N) ";
!!Print @0,18;" 6> SUPPRESS ZERO VARIANCES (Y/N)";
!!Print @0,19;" 7> SORT VARIANCE (  D: dollar,  Q: qty,  N: no)    ";
!!Print @0,20;" 8> PRINT ONLY CATCH WEIGHT ITEMS? (Y/N) ";
!!Return 
!
L_8000: Rem END OF FILE
If L8 Gosub L_4000
!
If Not(J8)
  If SORT <> 1 and sort <>5
	Let L = 100;K9$ = " ",K9$ \ Gosub L_5800
  endif
  Print #0;"\15\\15\";
  Print #0; Using "WAREHOUSE ## TOTALS "; Tab 20;W9;
  Print #0; Tab 41;"TAG TOTALS";
  Print #0; Using "---------#.##"; Tab 67;T1;
  IF costflag<>0
	Print #0; Using "----------#.##"; Tab 85;T1[1];
  endif
  print #0;""
  Print #0; Tab 41;"BOOK TOTALS (incl. neg qty)";
  Print #0; Using "--------#.##"; Tab 68;T1[2];
  if costflag<>0
	Print #0; Using "----------#.##"; Tab 85;T1[3];
  endif
  Print #0; Using "-------#.##";tab 99;T1[4];
  if costflag<>0
	Print #0; Using "---------#.##";tab 110;T1[5];
  endif
  Print #0;""
  Print #0; Tab 41;"BOOK TOTALS (excl. neg qty)";
  Print #0; Using "--------#.##"; Tab 68;T1[7];
  if costflag<>0
	Print #0; Using "----------#.##"; Tab 85;T1[8];
  endif
  Print #0;" "
End if
Goto OUTEND
!
!!If DSP_TOT
!!  Print @0,0;'CS';
!!  If SUPPRESS
!!    Print "*** All Items Not Listed On Report ***"
!!  End If 
!!  Print Using "WHSE ## TOTALS "; Tab 0;W9
!!  Print " "
!!  Print Tab 0;"TAG TOTALS";
!!  Print Using "-$$$$$$$$$#.##"; Tab 30;T1[1]
!!  Print Tab 0;"BOOK TOTALS (incl. neg qty)";
!!  Print Using "-$$$$$$$$$#.##"; Tab 30;T1[3];
!!  Print Using " -$$$$$$$$#.##";T1[5]
!!  Print Tab 0;"BOOK TOTALS (excl. neg qty)";
!!  Print Using "-$$$$$$$$$#.##"; Tab 30;T1[8];
!!  Print " "
!!  Print "PRESS <CR> TO CONTINUE "; \ Input Len 16384 + 1;""K1$
!!  Goto L_9010
!!End If 
!
L_9100: Rem FOR SCREEN PRINT ONLY
!!Print "\15\PRESS <CR> TO EXIT ";
!!Input Len 16384 + 1;""K1$
Goto L_9010
Stop 
!
L_10000: Rem CONVERT
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = P1[0]
Gosub L_20000 \ SUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = P1[2];CNVTU[2] = 1;CNVTA = P1[0]
Gosub L_20000 \ CTUNIT = AMOUNT
SUNIT$ = "ERR ";CTUNIT$ = "ERR ";CUNIT$ = "ERR "
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
If P1[2] > 0 Mat Read #5,P1[2],10;CTUNIT$;
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
If PFU1[11] = -1 Let CUNIT$ = " CWT"
If PFU1[11] = -3 Let CUNIT$ = "LB  "
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = A1[0]
Gosub L_20000 \ BKUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2;CNVTA = C1
Gosub L_20000 \ CUNIT = AMOUNT
If A$[127,127] = "Y"
  If PFU1[11] <> -3 ! "need per lb cost
    CNVTU[0] = 0;CNVTU[1] = -3;CNVTU[2] = 2;CNVTA = C1
    Gosub L_20000 \ CWUNIT = AMOUNT
  Else 
    CWUNIT = CUNIT
  End If 
End If 
lET CNVTU[0]=0;CNVTU[1]=PFU1[8];CNVTU[2]=2;CNVTA=C1   
GOSUB L_20000: \ LET SPUNIT=AMOUNT  
Return 
!
SET_COST: Rem "to what's selected
If UNITX = 1 ! "average
  If W3[15] AND P9$[32,32] = "Y" Let COST = W3[15] Else Let COST = B[21]
End If 
If UNITX = 2 ! "base
  If W3[18] AND P9$[32,32] = "Y" Let COST = W3[18] Else Let COST = C4[4]
End If 
If UNITX = 3 ! "warehouse
  If W3[17] AND P9$[32,32] = "Y" Let COST = W3[17] Else Let COST = B[8]
End If 
If UNITX = 4 ! "last
  If W3[16] AND P9$[32,32] = "Y" Let COST = W3[16] Else Let COST = B[10]
End If 
If UNITX = 5
  If W3[14] AND P9$[32,32] = "Y" Let COST = W3[14] Else Let COST = PF_LOAD2
End If 
If UNITX = 6
  If WHMISC[2] AND P9$[32,32] = "Y" Let COST = WHMISC[2] Else Let COST = PRPARC[2]
End If 
C1 = COST
Return 
!
!!L_10500: Rem SELECT UNIT
!!Window Open @5,5; Size 70,12; Using " SELECT COST "
!!L_10520: Print 'CS'
!!Read #1,18,130;D1$;
!!Print @5,3;" 1: ";D1$;
!!Read #1,18,110;D1$;
!!Print @40,3;" 4: ";D1$;
!!Read #1,18,220;D1$;
!!Print @5,4;" 2: BASE COST ";@40,4;" 5: ";D1$
!!Read #1,18,120;D1$;
!!Print @5,5;" 3: ";D1$;
!!Read #1,18,230;D1$;
!!Print @40,5;" 6: ";D1$
!!Print @10,7;"Enter cost to use on the report  ";
!!Print @42,7; \ Input Len 16384 + 1;""UNIT$
!!If UNIT$ = "" And UNITX Let UNIT$ = Str$(UNITX)
!!If Len(UNIT$) <> 1 Goto L_10520
!!UNITX = UNIT$
!!If UNITX < 1 Goto L_10520
!!If UNITX > 6 Goto L_10520
!!U5$ = " ",U5$
!!Window Close 
!!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Gosub L_25000
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
L_20160: Return 
!
L_25000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 3%
BUNIT = 0
If CNVTU[2] <> 5 Goto L_25180
BUNIT = 1
CNVTU[2] = 1
Goto L_25190
L_25180: BUNIT = 0
L_25190: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,115,40;Q0;
If Q0[0] > 5 Let Q0[0] = 5
On CNVTU[2] + 1 Goto L_25250,L_25350,L_25350,L_25640
!!Gosub ERR_SEARCH
L_25250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_25330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_25330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_25330
  Next X1[2]
  FLAG = 1 \ Goto L_25650
L_25330: Next X1[1]
FLAG = 0 \ Goto L_25650
L_25350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_25530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_25460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_25450
  Next CUNIT
  FLAG = 0 \ Goto L_25650
L_25450: If CUNIT = 0 Goto L_25530
L_25460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_25510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! "catch Weight Item
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_25530: Next X1[1]
If CNVTU[2] <> 1 Goto L_25580
If BUNIT Goto L_25580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_25580: If CNVTU[2] <> 2 Goto L_25630
If Not(CNVTU[1]) Goto L_25630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_25630: FLAG = 0 \ Goto L_25650
L_25640: Rem
L_25650: Rem RETURN FROM MODES 0-2
Return
!!Call "ProgDflt","695","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!!  RETVAL$[1,6] = STAG$;RETVAL$[7,12] = ETAG$
!!  RETVAL$[13,13] = Str$(UNIT)
!!  RETVAL$[14,14] = Str$(ALTF)
!!  RETVAL$[15,15] = Str$(DSP_TOT)
!!  RETVAL$[16,16] = Str$(SORT)
!!  RETVAL$[17,17] = Str$(SUPPRESS)
!!  RETVAL$[18,18] = VARFLAG$[1,1]
!!  RETVAL$[19,19] = Str$(PRNTCWT)
!!End If 
!!STAG$ = RETVAL$[1,6]
!!ETAG$ = RETVAL$[7,12]
!!UNIT = RETVAL$[13,13]
!!ALTF = RETVAL$[14,14]
!!DSP_TOT = RETVAL$[15,15]
!!SORT = RETVAL$[16,16]
!!SUPPRESS = RETVAL$[17,17]
!!VARFLAG$[1,1] = RETVAL$[18,18]
!!If VARFLAG$[1,1] <> "D" And VARFLAG$[1,1] <> "Q" And VARFLAG$[1,1] <> "N" Let VARFLAG$[1,1] = "N"
!!PRNTCWT = RETVAL$[19,19]
!!L_1000: Rem "============================================== inputs
!!Gosub L_7500
!!D$ = Str$(W9)
!!Print @32,5;D$
!!If Not(W9) Gosub EDT_WHSE
!!Print @15,7;Str$(SORT)
!!If SORT = 1 Let SORT$ = "PRODUCT: "
!!If SORT = 2 Let SORT$ = "VENDOR: "
!!If SORT = 3 Let SORT$ = "BUYER: "
!!If SORT = 4 Let SORT$ = "GRADE: "
!!Print @26,13;STAG$;@40,13;ETAG$
!!Gosub SHOTHECOST
!!Print @25,15;'CL';U5$;
!!If ALTF Print @50,16;"Y"; Else Print @50,16;"N"
!!If DSP_TOT Print @50,17;"Y" Else Print @50,17;"N"
!!If SUPPRESS Print @50,18;"Y" Else Print @50,18;"N"
!!Print @50,19;VARFLAG$[1,1];
!!If PRNTCWT Print @50,20;"Y" Else Print @50,20;"N"
!!Goto L_1460
!!L_1040: Print @15,7; \ Input Len 16384 + 1;""D$
!!If D$ = "" And SORT Let D$ = Str$(SORT)
!!SORT = D$ \ If SORT < 1 Or SORT > 4 Goto L_1040
!!If SORT = 1 Let SORT$ = "PRODUCT: "
!!If SORT = 2 Let SORT$ = "VENDOR: "
!!If SORT = 3 Let SORT$ = "BUYER: "
!!If SORT = 4 Let SORT$ = "GRADE: "
!!RETVAL$[16,16] = Str$(SORT)
!!Return 
!!L_1100: Rem TAGS
!!Print @26,13; \ Input Len 16384 + 6;""K1$
!!If K1$ = "" Let K1$ = STAG$
!!STAG$ = K1$
!!Print @40,13; \ Input Len 16384 + 6;""K1$
!!If K1$ = "" Let K1$ = ETAG$
!!ETAG$ = K1$
!!If ETAG$ = "" Let ETAG$ = "}}}}}}"
!!If STAG$ <= ETAG$ Goto L_1190
!!Print @0,23;'RB CE';"INVALID RANGE!"; \ Signal 3,20
!!Print @0,23;'CE'; \ Goto L_1100
!!L_1190: Rem OKAY - CONTINUE
!!RETVAL$[1,6] = STAG$
!!RETVAL$[7,12] = ETAG$
!!Return 
!!L_1200: Print @50,16;
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = ""
!!  If ALTF Let K1$ = "Y"
!!  If Not(ALTF) Let K1$ = "N"
!!End If 
!!If K1$ <> "Y" If K1$ <> "N" Goto L_1200
!!ALTF = 0
!!If K1$ = "Y" Let ALTF = 9
!!RETVAL$[14,14] = Str$(ALTF)
!!Return 
!!L_1250: Print @50,20;
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = ""
!!  If PRNTCWT Let K1$ = "Y"
!!  If Not(PRNTCWT) Let K1$ = "N"
!!End If 
!!If K1$ <> "Y" If K1$ <> "N" Goto L_1250
!!PRNTCWT = 0
!!If K1$ = "Y" Let PRNTCWT = 9
!!RETVAL$[19,19] = Str$(PRNTCWT)
!!Return 
!!EDT_TOTOSCRN: Rem "
!!Print @50,17;
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = ""
!!  If DSP_TOT Let K1$ = "Y"
!!  If Not(DSP_TOT) Let K1$ = "N"
!!End If 
!!If K1$ <> "Y" And K1$ <> "N" Goto EDT_TOTOSCRN
!!If K1$[1,1] = "Y" Let DSP_TOT = 99 Else Let DSP_TOT = 0
!!RETVAL$[15,15] = Str$(DSP_TOT)
!!Return 
!!EDT_SUPPRESS: Rem Supress Zero Inventory
!!J0$ = "6000 15018"
!!J2$ = "#" \ J1 = SUPPRESS
!!J5$ = "Do you want to suppress printing of zero variances (Y/N)"
!!Gosub ISINPUT
!!SUPPRESS = J1
!!RETVAL$[17,17] = Str$(SUPPRESS)
!!Print @0,23;'CL';
!!Return 
!!EDT_VAR: Rem edit sort variance
!!J0$ = "2 00015019"
!!J1$ = VARFLAG$
!!J5$ = "Sort Largest Variance by  D: Dollar,  Q: Quantity, or  N: no variance sort"
!!Gosub ISINPUT
!!Call String(1,J$)
!!If J$ <> "D" And J$ <> "Q" And J$ <> "N" Goto EDT_VAR
!!VARFLAG$ = J$
!!RETVAL$[18,18] = VARFLAG$[1,1]
!!Print @0,23;'CL';
!!Return 
!!EDT_WHSE: Print @32,5;
!!Input Len 16384 + 2;""D$
!!If D$ = "" Let D$ = Str$(W9)
!!W9 = D$ \ If W9 < 1 Or W9 > D9[5] Goto EDT_WHSE
!!Return 
!!EDT_COST: Rem "cost for report
!!Print @25,15;'CL';
!!Gosub L_10500
!!Gosub SHOTHECOST
!!Print @25,15;'CL';U5$;
!!RETVAL$[13,13] = Str$(UNITX)
!!Return 
!!SHOTHECOST: Rem
!!If UNITX = 1 Read #1,18,130;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 2 Let U5$ = "BASE COST"
!!If UNITX = 3 Read #1,18,120;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 4 Read #1,18,110;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 5 Read #1,18,220;D1$; \ U5$[1,10] = D1$[1,10]
!!If UNITX = 6 Read #1,18,230;D1$; \ U5$[1,10] = D1$[1,10]
!!Return 
!!L_1460: Print @0,23;'CE';"Enter  #:field to edit  P: print  R: reselect  S: save defaults  E: exit  ";
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = "E" Goto L_9010
!!If K1$ = "P" Goto STRTSORT
!!If K1$ = "R" Goto EDT_ALL
!!If K1$ = "S"
!!ASK_SAVE: Print @0,23;'CL';"Save for  A: all or  U: user access only, <CR>: do not save  ";
!!  Input Len 16384 + 1;""D$ \ Call String(1,D$)
!!  If D$ = "" Print @0,23;'CL'; \ Goto L_1460
!!  If D$ <> "A" And D$ <> "U" Goto ASK_SAVE
!!  If D$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "Progdfltw","695","",77,RETVAL$,URECFLAG
!!  Print @0,23;'CL';
!!  Goto L_1460
!!End If 
!!FLD = K1$ \ If FLD < 1 Or FLD > 8 Goto L_1460
!!Gosub EDT_FLDS
!!Goto L_1460
!!EDT_ALL: Rem "change 'em all
!!Print @0,23;'CE';"RESELECT WHSE? (Y/<CR>)  ";
!!Input Len 16384 + 1;""K1$ \ Call String(1,K1$)
!!If K1$ = "Y"
!!  Gosub EDT_WHSE
!!Else 
!!  If K1$ <> "" And K1$ <> "N" Goto EDT_ALL
!!End If 
!!Print @0,23;'CE';
!!For FLD = 1 To 8
!!  Gosub EDT_FLDS
!!Next FLD
!!Goto L_1460
!!EDT_FLDS: Rem "change a field
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On FLD Gosub L_1040,L_1100,EDT_COST,L_1200,EDT_TOTOSCRN,EDT_SUPPRESS,EDT_VAR,L_1250
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!
OUTEND: Rem EXIT ROUTINE
!!If L9 = 20 Goto L_9100
L_9010:!!Print 'CS'
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End 
!
!!Close 
!!Chain "MX000"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End

Sub FindCPIResContract(prodID$,cpiWH)
try
	dim 3%
		
	clear cpiContracts[]
	idx = 0
	k_cpid$ = " ",k_cpid$
	k_cpid$[1,len(prodID$)] = prodID$
	tmpProd$ = k_cpid$[1,12]
	do
		cpidr=filegetcpidet(e$,ch_cpid,">",2,k_cpid$,cpid.)
		if cpidr<=0 exit do
		if k_cpid$[1,12]<>tmpProd$[1,12] exit do
		! got a match on product
		if cpid.PurWhse <> cpiWH goto SkipCPIContract ! not same warehouse
		if cpid.ResStock <= 0 goto SkipCPIContract ! not a reserve
		! this is a reserve contract - don't care if there is any
		! left on it or not, but need to see if (date wise) it is
		! active yet
		k_sd$ = k_cpid$
		sdr=filegetspecprice(e$,ch_sd,"=",2,k_sd$,sd.)
		if sdr<=0 goto SkipCPIContract
		if sd.CancelDate
			! check if not effective an anymore
			tmp$ = str$(sd.CancelDate)
			call DateToJulian(1,tmp$)
			if curJDate > val(tmp$) goto SkipCPIContract
		end if
		cpiContracts[idx] = cpid.ContractNumber
		idx = idx + 1 \ if idx>99 exit do ! no more room
		SkipCPIContract: !
	loop
else
	include "src/callsuberr.inc"
end try
End Sub
