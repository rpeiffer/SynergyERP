! --- chk36hist
! description check if ot 36 is out in invhistory
!
! loadsave -w -n 100,10 -o prog/dxport/chk36hist.dl4 src/chk36hist.src
!
! 1.0 mm/dd/yyyy change??
!
!include copyright, common libs, common intrinsics

include "src/copyright.inc"
Rem Chek36Hist - Check for OT 36 in History
Rem Author: cct 150508 - Athens EVAP
Rem "Only Allow OT 37 if OT 36 in history for Billto
! IN: Header Record
! OUT: Flag - <0=Not checked, 0=not found, >0 = found
Rem BEDIT Version: 2.3 OBJECT CODE     Created: OCT 13, 2011  09:48:03
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/athens.r10v2/chk36hist.src (univ2) [valerie] {25093}
Rem  Copyright (c) 2011 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
! Option Default Dialect IRIS1
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Enter HEADERREC,FLAG,Intco,ch_roh
If Err 0 Gosub ERR_TRAP
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim FLE$[20],K1$[60],K2$[60],X$[20],rstr$[1000]
Dim 1%,ARMONTH,CH_HKEY,CH_ROHH
Dim 2%,H0[12],H5[16],ARDATE,CHKTYPE,BILLTO
Dim 3%,REC[99]
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Rstr$="chk36hist" ! for error trap
if headerrec<0 ! not yet written! so sending billto/ordtype
	let h5[7]=flag;h0[1]=ABS(Headerrec)
	flag=-1
Else
	REC[8] = HEADERREC;FLAG = -1
	STARTHERE: Rem "Check header for info
	Mat Read #ch_ROH,REC[8],0;H0;
	Mat Read #CH_ROH,REC[8],104;H5;
endif ! could be initial entry and no header rec yet!
BILLTO = H0[1];CHKTYPE = H5[7]
If Not(BILLTO) Let BILLTO = H0[4]
Read #1,0,120;ARMONTH;
Read #1,0,108;ARDATE;
X$ = ARDATE Using "&&&&&&"
MTH = X$[3,4];ARYEAR = X$[1,2]
If MTH <> ARMONTH ! "not Same ?
End If 
ARYEAR = 2000 + ARYEAR
X$[1,4] = ARYEAR Using "####"
X$[5,6] = ARMONTH Using "&&"
CHNL = 98 \ Gosub GETCHAN
If CHNL > 1
  CH_HKEY = CHNL
Else 
  Goto OUTEND
End If 
FLE$ = "4/SORDFLEHHKEY" + Str$(COID)
Ropen #CH_HKEY,FLE$
CHNL = 98 \ Gosub GETCHAN
If CHNL > 1
  CH_ROHH = CHNL
Else 
  Goto OUTEND
End If 
Read #1,88,1136;FLE$[1,16];
Ropen #CH_ROHH,FLE$
K1$ = " ",K1$
K1$[1,6] = X$
K1$[7,8] = "30"
K2$ = K1$
HKEY_LOOP: Rem "
Search #CH_HKEY,3,1;K1$,REC[2],E \ If E = 2 Goto CHKDONE
If E Goto CHKDONE ! Gosub ERR_SEARCH
If K1$[1,8] <> K2$[1,8] Goto CHKDONE ! not same year/month
Mat Read #CH_ROHH,REC[2],0;H0;
Mat Read #CH_ROHH,REC[2],104;H5;
If H5[7] <> 36 Goto HKEY_LOOP
If H0[1] = BILLTO Goto GOTINV
Goto HKEY_LOOP
GOTORD: Rem "got an order
!Print @0,22;'RB CE';"A Billing Order has not yet been accepted for this month!";
!Print @0,23;"Please Invoice & Accept Order ";Str$(H0[7]);". Press <CR>  ";
!Input Len 16384 + 1;""K2$
GOTINV: Rem "got an invoice for this month
If CHKTYPE = 37 ! "checking for OT 36
  FLAG = 1
End If 
If CHKTYPE = 36 ! "checking for dupe OT 36
  !Print @0,22;'RB CE';"A Billing Invoice was already accepted this month!";
  !Print @0,23;" Press <CR>  ";
  !Input Len 16384 + 1;""K2$  ! just a reminder - not a fail
End If 
Goto OUTEND
CHKCURRORD: Rem "try current Orders
K1$ = " ",K1$
COLOOP: Rem "
Search #ch_roh,3,1;K1$,REC[0],E \ If E = 2 Return 1
If E Return +1 ! Gosub ERR_SEARCH
X2 = K1$[1,2]
If X2 > 7 And X2 < 25 Goto COLOOP
Mat Read #ch_roh,REC[0],0;H0;
Mat Read #ch_roh,REC[0],104;H5;
If H5[7] <> 36 Goto COLOOP
If H0[1] = BILLTO Return 
Goto COLOOP
CHKDONE: Rem "Done with yyyymmtt
If CHKTYPE = 37
  Gosub CHKCURRORD \ Goto GOTORD
End If 
FLAG = 1 ! " =0 to not allow order (evidently always allows!)
Goto OUTEND
OUTEND: Rem "done
! If Err 0 Rem
Try Close #CH_HKEY Else REM
Try Close #CH_ROHH Else REM
End 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
CHNLSCR = Chf(CHNL)
If Err 0 Gosub ERR_TRAP
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
Rem {end rtn.getchan.i}
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet_call.inc"
END