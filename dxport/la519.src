! >>> Program La519
!
! description Accounts Payable Recurring Entry Journal
! loadsave -w -n 100,10 -o prog/dxport/la519.dl4 src/la519.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"

Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  2, 2006  09:41:03
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ap/la519.src (univ2) [mary] {29925}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,String,Time,VerifyDate
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Rem LA519 ACCOUNT PAYABLE RECURRING ENTRIES JOURNAL - PART #1 - V5
Try
	Enter SPEC1[],MESSAGE$,rstr$ 
	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
	dim xdate$[50]
	Dim 2%,C4[4],3%,Q[2],T2[3],2%,B4[1]
	dim 3%,spec[50]
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,C0[6],E,F9[9],I,L[2],P,X,X1,R9
Dim 1%,RP2[6],RED3[2],RET1[2]
Dim 2%,A1,C3[1],D0,D3[2],F1[2],G9[3],X2,X9
Dim 2%,RP1[5],RED1[1],RET2[5],YEAR_[1]
Dim 2%,AJRNL,JRNL,COMP
Dim 3%,T9[3],T[3],R[55]
Dim 3%,RP3[3],RED2[1],RET3[2],DIVTOT[3]
Dim A$[30],B$[30],D1$[16],D$[25],F$[16],G8$[2],G9$[40],H$[68],I$[60],J$[48],K1$[30]
Dim K50$[10],DV1$[12],DV2$[12],DV3$[12],DIV$[30],ACPER$[4],K13$[10]
Dim K2$[30],K3$[30],K4$[30],K9$[30],P$[8],Q$[9],R$[63],R2$[4]
Dim RP1$[8],RP2$[30],RED1$[8],RET1$[12],K20$[50],K21$[50],K17$[50],K18$[50]
Dim T$[9],U1$[2],U5$[10],X$[10],Z1$[220],2%
Dim P9$[50],KEYGLAP$[50],CHECKDATE$[6]
dIM GROUPID$[1]
Dim 3%
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Comp=spec1[0] ! company #
intco=spec1[0]
Pgpo=spec1[1]! page break on po
Audonly=spec1[2]
BatchId=spec1[3]
Acper=spec1[4]
c4[0]=spec1[5] ! current next month
c4[1]=spec1[4] ! accounting period
let xdate$=spec1[6] using "&&&&&&"
let tmp$=xdate$[3,6],xdate$[1,2] !
c4[2]=tmp$ ! posting date in mmddyy format
c4[3]=1 ! default lu for a10in file
c4[4]=spec1[6] ! posting date yymmdd
b4[0]=spec1[4] ! acct period
b4[1]=spec1[3] ! batch id
div=spec1[7]
rec_uac=spec1[8]
returnstatus=spec1[9]


Rem open files    
F$="cntrl/Cntrl"+str$(comp)
Open #1,F$
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
Try Close #9 Else Rem
let onchannelno=9
sortchan = blockbuildsort(e$,25,0,onchannelno)
message$=""
goto L_600:
RESTART = 99
C4[3] = 1
L_600: Rem OPEN FILES
Mat Read #1,19,50;P9$;
!G9[0] = Spc(5) \ G9[1] = Int(G9[0] / 16384) \ G9[2] = Int((G9[0] - G9[1] * 16384) / 64)
!G9[3] = G9[0] - (G9[1] * 16384 + G9[2] * 64) \ G8$[1,1] = G9[2] Using "#"
!G8$[2,2] = G9[3] Using "#"
G8$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
g8$[2,2]=groupid$

K2$ = " 0" \ Search #15,2,1;K2$,R[15],E 
if e<>0
	let eflag=eflag+1
	Message$="RECORD '0' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif
Mat Read #15,R[15],2;R$;
If RESTART Let R$[60,60] = C4[3] Using "#"
If R$[61,61] = " "
	let eflag=eflag+1
	message$="PURCHASE JOURNAL IN PROCESS ELSEWHERE...PLEASE TRY AGAIN LATER...."
	Goto L_9060
endif

If P9$[17,17] <> "Y"
  If R$[60,60] = " "
  	let eflag=eflag+1
	message$="INTERFACE FILE IN USE ELSEWHERE...PLEASE TRY AGAIN LATER.."
	Goto L_9060
  End If 
End If 
If P9$[17,17] = "Y"
  F$ = COMP Using "6/GLAPTEMP#"
  Open #75,F$
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,2,1;KEYGLAP$,R,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    If Not(RESTART)
	let eflag=eflag+1
	message$="A/P Transactions in Process Elsewhere "
      Goto L_9060
    End If 
  Else 
    E = 2 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
    Search #75,4,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  End If 
  F$ = COMP Using "4/GLAPDETL#"
  Open #77,F$
End If 
L_660: Rem
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #2,F$
F$ = R$[53,53],"/A20OI",G8$[1,2] \ Open #3,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Open #6,F$
F$ = R$[8,8],"/APREC",G8$[1,2] \ Open #17,F$
F$ = R$[9,9],"/APRED",G8$[1,2] \ Open #18,F$
F$ = R$[8,8],"/APRET",G8$[1,2] \ Call FindF(F$,A9) \ If A9 And Not(RESTART) Goto L_790
F$ = R$[8,8],"/APREA",G8$[1,2] \ Call FindF(F$,A9) \ If A9 And Not(RESTART) Goto L_790

! BUILD APREA FILE
tmp$= "FILES/",F$
I$ = "[1:256] ",TMP$,"!"
Build #20,I$
R[20] = 8 \ Search #20,0,1;I$,R[20],E \ If E Gosub ERR_SEARCH
R[20] = 1 \ Search #20,0,0;I$,R[20],E \ If E Gosub ERR_SEARCH
Try Close #20 Else Rem
Open #20,f$
! build apret file
F$ = R$[8,8],"/APRET",G8$[1,2]
tmp$= "FILES/",F$
I$ = "[1:38] ",tmp$,"!"
Build #21,I$
R[21] = 10 \ Search #21,0,1;I$,R[21],E \ If E Gosub ERR_SEARCH
R[21] = 1 \ Search #21,0,0;I$,R[21],E \ If E Gosub ERR_SEARCH
try close #21 Else Rem
Open #21,f$
Goto L_800
L_790: !Print @0,23;'CL RB';"Recurring Entries are in Process Elsewhere ";
	let eflag=eflag+1
	message$="Recurring Entries are in Process Elsewhere "
If P9$[17,17] = "Y"
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,5,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
End If 
 Goto L_9060
L_800: Mat Read #1,51,18;C0;
For I = 10 To 12
  Read L
  If L = -1 Goto L_835
  If I = 12 And C0[2] = 0 Goto L_835
  Mat Read #1,88,L;F$;
  Open #I,F$
L_835: Next I
Data " 432 ","-1","144"
Read #1,51,56;AJRNL
JRNL = AJRNL + 1
If JRNL <= 0 Or JRNL > 999999
  JRNL = 1
End If 
Write #1,51,56;JRNL;
If (C0[6])<>0
	F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #13,F$
	F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #14,F$
	F$ = rec_uac Using "2/APRETEMP&&&&"
	tmp$= "FILES/",F$
	I$ = "[1:12] ",tmp$,"!"
	Build #50,I$
	R[50] = 2 \ Search #50,0,1;I$,R[50],E \ If E Gosub ERR_SEARCH
	R[50] = 1 \ Search #50,0,0;I$,R[50],E \ If E Gosub ERR_SEARCH
	Try Close #50 Else rem
	Open #50,F$
endif
L_1000: K2$ = "10" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
Mat Read #15,R[15],168;U1$;
K2$ = " ",K2$ \ K2$[3,6] = R2$
Search #16,2,1;K2$,R[16],E \ If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
L_1100: Rem SELECT POSTING PERIOD
!Print 'CS'; Tab 40;G9$[1,40]
!Print Tab 40;"RECURRING ENTRIES JOURNAL"
Mat Read #1,0,134;D0;
X$ = C4[1] Using "&&&&" \ ACPER$ = C4[1] Using "&&&&"
!

BLDAM0DO: Rem BUILD AM0DO FILE IF NEEDED
F$ = R$[33,33],"/AM0DO",G8$[1,2],X$[1,4] \ Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0DO
End If 
Open #7,F$
BLDAM0DD: Rem build am0dd file if needed
F$ = R$[34,34],"/AM0DD",G8$[1,2],X$[1,4] \ Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0DD
End If 
Open #8,F$
If P9$[17,17] <> "Y"
BLDA10IN: Rem build a10in file if needed
  F$ = R$[60,60],"/A10IN",G8$[1,2],X$[1,4] \ Call FindF(F$,X2)
  If Not(X2)
    Gosub L_9700
    Goto BLDA10IN
  End If 
  Open #11,F$
End If 
K2$ = "10" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Read #15,R[15],6;Q$; \ Q[0] = Q$
Read #15,R[15],24;Q$; \ Q[1] = Q$
Read #15,R[15],150;Q$; \ Q[2] = Q$
!Print @0,23;'CL';"Processing Recurring Entries to print....";
K17$ = " ",K17$
L_1515: Search #17,3,1;K17$,R[17],E \ If E = 2 Goto L_1900
If E Goto OUTEND
Mat Read #17,R[17],24;RP2;
If RESTART
  If P9$[17,17] <> "Y"
    If RP2[5] = 2 Goto L_1535
  Else 
    If RP2[5] = 9 Goto L_1535
  End If 
End If 
If RP2[5] Goto L_1515
L_1535: Mat Read #17,R[17],0;RP1;
If RP1[3] <> C4[1] Goto L_1515
If C0[6] If DIV If DIV <> RP1[5] Goto L_1515
If RP1[2] = 9999 Goto L_1595
D1$ = C4[1] Using "&&&&";YEAR_[0] = D1$[1,2]
D1$ = RP1[2] Using "&&&&";YEAR_[1] = D1$[1,2]
If YEAR_[0] > 90 And YEAR_[1] > 90 And RP1[2] >= C4[1] Goto L_1595
If YEAR_[0] < 90 And YEAR_[1] < 90 And RP1[2] >= C4[1] Goto L_1595
If YEAR_[0] >= 90 And YEAR_[1] < 90 Goto L_1595
Goto L_1515
L_1595: Mat Read #17,R[17],58;RP1$
Mat Read #17,R[17],66;RP2$
Mat Read #17,R[17],96;RP3
For K = 0 To 5
  If K < 3 Let RET1[K] = 0
  RET2[K] = 0
  If K < 3 Let RET3[K] = 0
Next K
RET1$ = " ",RET1$
RET1[0] = RP2[6];RET1[1] = RP2[3]
RET2[0] = RP1[0];RET2[4] = R[17]
For K = 0 To 2 \ RET3[K] = RP3[K] \ Next K
RET1$[1,8] = RP1$[1,8]
For K = 8 To 1 Step -1
  If RET1$[K,K] <> " " Goto L_1680
Next K
K = 0
L_1680: RET1$[K + 1,K + 4] = C4[1] Using "&&&&"
D1$ = " ",D1$ \ D1$[1,4] = C4[1] Using "&&&&" \ D1$[5,6] = RP2[0] Using "&&"
D3[0] = D1$[3,4];D3[1] = D1$[5,6];D3[2] = D1$[1,2]
L_1700: D1$ = D3[2] * 10 ^ 4 + D3[0] * 10 ^ 2 + D3[1] Using "&&&&&&"
Call DateToJulian(D1$,D1$,E) \ If Not(E) Goto L_1725
D3[1] = D3[1] - 1
If D3[1] < 1 Let D3[1] = 1 \ Goto L_1725
Goto L_1700
L_1725: RET2[1] = D3[2] * 10 ^ 4 + D3[0] * 10 ^ 2 + D3[1]
D1$ = C4[1] Using "&&&&"
D3[0] = D1$[3,4];D3[2] = D1$[1,2]
If RP2[2] >= 0 Let D3[1] = RP2[2] \ Goto L_1765
D3[1] = Abs(RP2[2]) \ D3[0] = D3[0] + 1
If D3[0] > 12 Let D3[0] = 1;D3[2] = D3[2] + 1
If D3[2] > 100 Let D3[2] = 100 - D3[2]
L_1765: D1$ = D3[2] * 10 ^ 4 + D3[0] * 10 ^ 2 + D3[1] Using "&&&&&&"
Call DateToJulian(D1$,D1$,E) \ If Not(E) Goto L_1785
D3[1] = D3[1] - 1 \ If D3[1] < 1 Let D3[1] = 1 \ Goto L_1785
Goto L_1765
L_1785: RET2[2] = D3[2] * 10 ^ 4 + D3[0] * 10 ^ 2 + D3[1]
RET2[3] = RET2[2]
K21$ = " ",K21$ \ K21$[1,6] = RET2[0] Using "######"
K21$[7,18] = RET1$[1,12] \ K21$[19,20] = RET1[0] Using "##"
E = 2 \ Search #21,1,0;K21$,R[21],E \ If E Gosub ERR_SEARCH
Mat Write #21,R[21],0;RET1;
Mat Write #21,R[21],6;RET2;
Mat Write #21,R[21],30;RET3;
Mat Write #21,R[21],54;RET1$;
Search #21,4,1;K21$,R[21],E \ If E Gosub ERR_SEARCH
If P9$[17,17] <> "Y"
  RP2[5] = 2
Else 
  RP2[5] = 9
End If 
Write #17,R[17],34;RP2[5];
Goto L_1515
L_1900: !If Err 0 Gosub ERR_ESCAPE
L = 99 \ L[1] = 1 \ F9 = 0 \ R9 = 0
Call Time(D$)
T$ = "INVC/MM/C"
K21$ = " ",K21$
L_2000: Search #21,3,1;K21$,R[21],E \ If E = 2 Goto L_4000
Mat Read #21,R[21],0;RET1;
Mat Read #21,R[21],6;RET2;
Mat Read #21,R[21],30;RET3;
Mat Read #21,R[21],54;RET1$;
Mat Read #17,RET2[4],66;RP2$;
Mat Read #17,RET2[4],0;RP1;
Gosub L_3000
Gosub L_7100
Gosub L_3100
Gosub L_5800
Gosub L_5000
T[0] = T[0] + RET3[0] \ T[1] = T[1] + RET3[2] \ T[2] = T[2] + (RET3[0] - RET3[2])
If RET1[0] <> 2 Let T2[0] = T2[0] - RET3[0]
If RET1[0] = 2 Let T2[1] = T2[1] - RET3[0]
If C0[6] Gosub L_7600
K4$ = RET2[4] Using "#####"
Search #18,3,1;K4$,R[18],E \ If E Goto L_2285
X = K4$[1,5] \ If X = RET2[4] Goto L_2320
L_2285: Print #0; Tab 89;"*DISTRIBUTIONS NOT FOUND*" \ F9[1] = 99
L = L + 1
Goto L_2000
L_2305: Search #18,3,1;K4$,R[18],E \ If E = 2 Goto L_2400
If E Gosub ERR_SEARCH
X = K4$[1,5] \ If X <> RET2[4] Goto L_2400
L_2320: Mat Read #18,R[18],16;RED2;
Gosub L_5800
B$ = "ACCT NOT ON FILE!!"
K2$ = " ",K2$ \ K2$[1,9] = RED2[0] Using "#########"
Search #6,2,1;K2$,R[6],E \ If E Let F9[3] = 99 \ If E Goto L_2350
Mat Read #6,R[6],12;B$;
L_2350: Print #0; Using "#########"; Tab 91;RED2;
Print #0; Tab 102;B$[1,15];
Print #0; Using "-----,---.##"; Tab 119;RED2[1]
L = L + 1
T[3] = T[3] + RED2[1] \ T2[3] = T2[3] + RED2[1]
Gosub L_3160
Goto L_2305
L_2400: Search #10,2,1;K21$,R[10],E \ If Not(E) Let F9[5] = 99
If Not(E) Print #0;"*** TRANSACTION ALREADY IN HISTORY FILE *** " \ L = L + 1
Search #3,2,1;K21$,R[3],E \ If Not(E) Let F9[6] = 99
If Not(E) Print #0;"*** TRANSACTION ALREADY IN OPEN ITEMS FILE *** " \ L = L + 1
Goto L_2000
L_3000: Rem PRINT VENDOR TOTALS
If Not(T[0] + T[1] + T[2] + T[3]) Return 
Gosub L_5800
Print #0;"** VENDOR TOTALS **";
Print #0; Using "--,---,---.##"; Tab 76;T[0];
Print #0; Using "--,---,---.##"; Tab 118;T[3]
Print #0;" "
L = L + 2
For I = 0 To 3
  T9[I] = T9[I] + T[I]
  T[I] = 0
Next I
Return 
L_3100: Rem PRINT VENDOR NAME & ADDRESS
Gosub L_5800
Print #0; Using "######";A1;"  ";A$[1,30]
L = L + 1
Return 
L_3160: Rem INSERT KEY INTO A20DD
K20$ = " ",K20$ \ K20$[1,9] = RED2 Using "#########"
K20$[13,16] = L[1] Using "####" \ R[20] = R[18]
Search #20,4,1;K20$,R[20],E \ If E Gosub ERR_SEARCH
L[1] = L[1] + 1
Return 
L_4000: Rem TOTAL PRINT
Gosub L_3000
Gosub L_5800
Print #0;"** GRAND TOTALS **";
Print #0; Using "--,---,---.##"; Tab 76;T9[0];
Print #0; Using "--,---,---.##"; Tab 118;T9[3]
L = L + 1
For I = 0 To 3
  T9[I] = 0
Next I
L = 99
R9 = 2
T2[2] = T2[0] + T2[1] + T2[3]
T2[2] = - T2[2]
If C0[6] Goto L_4160
If Not(T2[0]) Goto L_4140
RED2[1] = T2[0] \ RED2 = Q[0] \ B$ = "ACCOUNTS PAYABLE"
Gosub L_4300
L_4140: If Not(T2[1]) Goto L_4160
RED2[1] = T2[1] \ RED2 = Q[1] \ B$ = "CREDIT MEMO"
Gosub L_4300
L_4160: If Not(T2[2]) Goto L_4171
RED2[1] = T2[2] \ RED2 = Q[2] \ B$ = "SUSPENSE"
F9[2] = 99
Gosub L_4300
L_4171: If Not(C0[6]) Goto L_4200
K50$ = " ",K50$
L_4177: Search #50,3,1;K50$,R[50],E \ If E = 2 Goto L_4200
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT;
K13$ = K50$[1,2]
Search #13,2,1;K13$,R[13],E \ If Not(E) Goto L_4185
If E > 1 Gosub ERR_SEARCH
DV1$[1,12] = Q[0] Using "#########   " \ DV2$[1,12] = Q[1] Using "#########   "
Goto L_4186
L_4185: Mat Read #13,R[13],42;DV1$; \ Mat Read #13,R[13],54;DV2$;
L_4186: If Not(DIVTOT[0]) Goto L_4188
RED2[1] = DIVTOT[0] \ RED2 = DV1$[2,9] \ B$ = "ACCOUNTS PAYABLE" \ Gosub L_4300
L_4188: If Not(DIVTOT[1]) Goto L_4195
RED2[1] = DIVTOT[1] \ RED2 = DV2$[2,9] \ B$ = "CREDIT MEMO" \ Gosub L_4300
L_4195: Goto L_4177
L_4200: K20$ = " ",K20$ \ K2$ = " ",K2$ \ T9 = 0 \ Gosub L_5800
Print #0;" " \ Print #0; Tab 33;"**** ACCOUNT SUMMARY TOTALS ****"
Print #0;" " \ L = L + 3
L_4215: Search #20,3,1;K20$,R[20],E \ If E = 2 Goto L_4400
If E Gosub ERR_SEARCH
If K20$[1,9] <> K2$[1,9] Gosub L_4250
K2$[1,9] = K20$[1,9]
R[18] = R[20] \ Mat Read #18,R[18],16;RED2;
T9 = T9 + RED2[1]
Goto L_4215
L_4250: If Not(T9) Return 
B$ = "ACCT NOT ON FILE!!" \ K3$ = " ",K3$ \ K3$[1,9] = K2$[1,9]
Search #6,2,1;K3$,R[6],E \ If E = 1 Let F9[3] = 99 \ If E Goto L_4270
Mat Read #6,R[6],12;B$;
L_4270: Gosub L_5800
Print #0; Tab 20;K2$[2,9]; Tab 35;B$[1,15];
Print #0; Using "--,---,---.##"; Tab 55;T9
L = L + 1
T9 = 0
Return 
L_4300: Rem PRINT TOTALS
Gosub L_5800
Print #0; Using "####"; Tab 10;L[1];
Print #0; Using "########"; Tab 20;RED2;
Print #0; Tab 35;B$;
Print #0; Using "--,---,---.##"; Tab 55;RED2[1]
L = L + 1
K4$ = " ",K4$ \ K4$[1,1] = "0" \ K4$[3,11] = RED2 Using "#########"
K4$[12,14] = L[1] Using "###"
E = 2 \ Search #18,1,0;K4$,R[18],E \ If E Gosub ERR_SEARCH
RED1 = 0 \ RED1[1] = 0 \ RED3[1] = L[1] \ RED3[2] = 0
Mat Write #18,R[18],0;RED1; \ Mat Write #18,R[18],16;RED2;
Mat Write #18,R[18],28;RED3;
Search #18,4,1;K4$,R[18],E \ If E Gosub ERR_SEARCH
Gosub L_3160
Return 
L_4400: Rem AUDIT LIST SECTION
Gosub L_4250
R9 = 1 \ If L + 6 >= 55 Let L = 99 \ Goto L_4430
Print #0;" " \ Print #0; Tab 50;"GENERAL LEDGER AUDIT LIST"
Print #0;""
Print #0; Tab 10;"ACCOUNT#"; Tab 25;"LINE"; Tab 35;"DESCRIPTION";
Print #0; Tab 63;"DEBIT"; Tab 85;"CREDIT" \ Print #0;""
L = L + 5
L_4430: K1$ = " ",K1$
L_4435: Search #20,3,1;K1$,R[20],E \ If E = 2 Goto L_4500
If E Gosub ERR_SEARCH
R[18] = R[20] \ Mat Read #18,R[18],16;RED2;
B$ = "ACCT NOT ON FILE!!"
K2$ = " ",K2$ \ K2$[1,9] = K1$[1,9]
Search #6,2,1;K2$,R[6],E \ If E Let F9[3] = 99 \ If E Goto L_4470
Mat Read #6,R[6],12;B$;
L_4470: Gosub L_5800
Print #0; Tab 9;K1$[1,9]; Tab 25;K1$[13,16];
Print #0; Tab 35;B$[1,15];
If RED2[1] >= 0 Print #0; Using "##,###,###.##"; Tab 55;RED2[1]
If RED2[1] < 0 Print #0; Using "##,###,###.##"; Tab 79;RED2[1]
L = L + 1
Goto L_4435
L_4500: Rem END
If (F9[1] + F9[2] + F9[3] + F9[4] + F9[5] + F9[6]) Goto L_8950
!If Err 0 Rem
TRY Close #0 Else Rem
!If Err 0 Gosub ERR_TRAP
!L_4525: Print @0,23;'CL';"RECURRING ENTRIES JOURNAL OK (Y/N) ";
!Input Len (16384 + 1);""X$
!Call String(1,X$)
!If X$ = "Y" Goto L_4550
!If X$ <> "N" Goto L_4525
!Goto OUTEND
if audonly goto outend:
L_4550: ! If Err 0 Gosub ERR_TRAP
Gosub L_8700
B4[1] = JRNL
Goto L_9100
L_5000: Rem PRINT LINE
Print #0; Using "####";L[1];
Print #0; Tab 5;RET1$[1,12];
If C0[6] Print #0; Using "###"; Tab 18;RP1[5];
Print #0; Tab 23;T$[RET1[0] * 3 - 2,RET1[0] * 3];
X2 = RET2[1] \ Gosub L_8900 \ Print #0; Tab 27;P$;
X2 = RET2[2] \ Gosub L_8900 \ Print #0; Tab 36;P$;
Print #0; Tab 45;RP2$[1,30];
Print #0; Using "-----,---.##"; Tab 77;RET3[0];
Return 
L_5600: Rem AUDIT LIST HEADER
Print #0; Tab 50;"GENERAL LEDGER AUDIT LIST"
Print #0;" "
Print #0; Tab 10;"ACCOUNT#"; Tab 25;"LINE";
Print #0; Tab 35;"DESCRIPTION";
Print #0; Tab 63;"DEBIT";
Print #0; Tab 85;"CREDIT"
Print #0;" "
L = 8
Return 
L_5700: Rem HEADING FOR GENERAL UPDATE
Print #0; Tab 50;"GENERAL UPDATE"
Print #0;" "
Print #0; Tab 10;"LINE#"; Tab 20;"ACCOUNT#";
Print #0; Tab 35;"DESCRIPTION"; Tab 63;"AMOUNT"
Print #0;" "
L = 8
Return 
L_5800: Rem HEADING - WAS LET L=L+1
If L < 55 Return 
If P Print #0;"\14\";
Print #0;"\15\"; Tab 50;G9$[1,40]
P = P + 1
Print #0; Tab 10;D$;
Print #0; Tab 50;"ACCOUNTS PAYABLE RECURRING ENTRIES JOURNAL";
Print #0; Tab 110;"PAGE";P
If C0[6] If DIV Print #0; Tab 5;DIV$[1,30];
X2 = C4[4] \ Gosub L_8900 \ Print #0; Tab 50;"POSTING DATE: ";P$[1,8];
if audonly<>0 print #0;tab 100;"*PREVIEW*";
Print #0; Using "######"; Tab 110;"JRNL:";JRNL
If R9 = 1 Goto L_5600
If R9 = 2 Goto L_5700
Print #0;" "
Print #0;"LINE"; Tab 5;"INVOICE#"; \ If C0[6] Print #0; Tab 18;"DIV";
Print #0; Tab 23;"TYP"; Tab 27;"INV DATE";
Print #0; Tab 36;"DUE DATE";
Print #0; Tab 45;"DESCRIPTION";
Print #0; Tab 80;"GROSS AMT";
Print #0; Tab 95;"ACCT#"; Tab 102;"ACCOUNT NAME"; Tab 125;"AMOUNT"
L = 6
Return 
L_7100: Rem READ VENDOR FILE
A$ = "VENDOR NOT ON FILE!!!" \ K2$ = RET2[0] Using "######"
Search #2,2,1;K2$,R[2],E \ If E = 1 Let F9[4] = 99 \ If E = 1 Return 
If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;A$; \ Mat Read #2,R[2],268;A1;
Return 
L_7600: Rem UPDATE DIVISION TOTAL
K50$ = " ",K50$ \ K50$[1,2] = RP1[5] Using "##"
Search #50,2,1;K50$,R[50],E \ If Not(E) Goto L_7650
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #50,1,0;K50$,R[50],E \ If E Gosub ERR_SEARCH
For X = 0 To 3 \ DIVTOT[X] = 0 \ Next X
Mat Write #50,R[50],0;DIVTOT
Search #50,4,1;K50$,R[50],E \ If E Gosub ERR_SEARCH
L_7650: Mat Read #50,R[50],0;DIVTOT
If RET1[0] <> 2 Let DIVTOT[0] = DIVTOT[0] - RET3[0]
If RET1[0] = 2 Let DIVTOT[1] = DIVTOT[1] - RET3[0]
Mat Write #50,R[50],0;DIVTOT;
Return 
L_8000: Rem RESET RECURRING ENTRIES JOURNAL
!Print @0,23;'CL';"CLEARING WORK FILE .... PLEASE WAIT...";
K1$ = " ",K1$
L_8015: Search #21,3,1;K1$,R[21],E \ If E = 2 Goto L_8100
If E Gosub ERR_SEARCH
Read #21,R[21],22;RET2[4]
RP2[5] = 0
Write #17,RET2[4],34;RP2[5];
Goto L_8015
L_8100: Rem DELETE TOTAL RECORDS FROM THE APRED FILE
K4$ = "0"
L_8120: Search #18,3,1;K4$,R[18],E \ If E = 2 Goto L_8180
If E Gosub ERR_SEARCH
If K4$[1,1] <> "0" Goto L_8180
Search #18,5,1;K4$,R[18],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #18,1,0;K4$,R[18],E \ If E Gosub ERR_SEARCH
Goto L_8120
L_8180: Rem KILL OFF TEMP FILES
Return 
L_8700: Rem VERIFY FILE SIZES
K2$ = " 0" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
If R$[60,60] = " "
	eflag=eflag+1
	Message$="INTERFACE FILE IN USE!!!..TRY LATER!!! "
  !Print @0,23;'CL RB';"INTERFACE FILE IN USE!!!..TRY LATER!!!" \ 
	goto outend:
End If 
L_8770: C4[3] = R$[60,60]
If P9$[17,17] = "Y" Return 
R$[60,60] = " "
Mat Write #15,R[15],2;R$;
R = Chf(11)
R = R - 1
L_8800: Read #11,R;H$;
If H$[63,63] = "9" If H$[1,1] = "*" Return 
R = R - 1
If R >= 0 Goto L_8800
	!Print @0,23;'CL RB';"ERROR IN INTERFACE FILE!!!";
		message$="Error In Interface File!!!"
		gosub err_search:
L_8900: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
L_8950: Rem ERROR IN PURCHASE JOURNAL
!Print @0,15;'CE'; Tab 10;"Warning:  Error in Recurring Entry Journal";
!If F9[1] Print @0,17;'CL RB';"ACCOUNT DISTRIBUTIONS NOT FOUND FOR AN OPEN ITEM"
!If F9[2] Print @0,18;'CL RB';"SUSPENSE ACCOUNT POSTING HAS BEEN MADE!!"
!If F9[3] Print @0,19;'CL RB';"GL ACCOUNT # NOT FOUND IN VALIDATION FILE!"
!If F9[4] Print @0,20;'CL RB';"AP OPEN ITEM ASSIGN TO VENDOR NOT IN MASTER FILE"
!If F9[5] Print @0,21;'CL RB';"RECURRING ENTRIES TRANSACTION ALREADY IN A/P HISTORY "
!If F9[6] Print @0,22;'CL RB';"RECURRING ENTRIES TRANSACTION ALREADY IN A/P OPEN ITEMS "
!L_8980: Print 0,23;'CL';"RECURRING ENTRIES JOURNAL NOT UPDATED!  PRESS <CR> TO RETURN TO MENU ";
!L_8985: Input Len (16384 + 1);""F$
!If F$ <> "" Goto L_8985
eflag=eflag+1
Message$=Message$+" Recurring Entries Journal Not Updated. "
If F9[1] Message$=Message$+"ACCOUNT DISTRIBUTIONS NOT FOUND FOR AN OPEN ITEM "
If F9[2] Message$=Message$+"SUSPENSE ACCOUNT POSTING HAS BEEN MADE! "
If F9[3] Message$=Message$+"GL ACCOUNT # NOT FOUND IN VALIDATION FILE! "
If F9[4] Message$=Message$+"AP OPEN ITEM ASSIGN TO VENDOR NOT IN MASTER FILE "
If F9[5] Message$=Message$+"RECURRING ENTRIES TRANSACTION ALREADY IN A/P HISTORY "
If F9[6] Message$=Message$+"RECURRING ENTRIES TRANSACTION ALREADY IN A/P OPEN ITEMS "
goto outend:


 
L_9100:! Update Purchase Journal ! Chain "LA512A"
!Comp = spec[0] ! company #                     
spec[0]=intco                               
spec[1]=c4[0] ! CURRENT/NEXT MONTH
spec[2]=c4[1] ! POSTING PERIOD                              
spec[3]=c4[2] ! POSTING date (mmddyy)                            
spec[4]=c4[3] !  LOGICAL UNIT NUMBER FOR A10IN
SPEC[5]=c4[4]! POSTING DATE YYMMDD
SPEC[6]=b4[1] !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
SPEC[7]=519! PROGRAM NUMBER
spec[8]=rec_uac                             
spec[9]=returnstatus 
spec[10]=eflag
spec[11]=t2[0]
spec[12]=t2[1]
spec[13]=t2[2]
spec[14]=t2[3]
Call "LA519a.dl4",spec[],message$,IntCo,rstr$,e$
let returnstatus=spec[9]
GOTO L_9999: ! the last line -- all updates have already

L_9700: Rem build ap files
!Call "labldfle",ACPER$
Call "labldfle.DL4",ACPER$,e$,IntCo,rstr$
Return 

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/la519!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
Gosub L_8000
L_9010: Rem exit here
Write #1,51,56;AJRNL;
If P9$[17,17] = "Y"
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,5,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
End If 
F$ = R$[8,8],"/APREA",G8$[1,2]
Call FindF(F$,X2)
If X2<>0
  Kill F$
End If 
F$ = R$[9,9],"/APRET",G8$[1,2]
Call FindF(F$,X2)
If X2<>0
  Kill F$
End If 
If C0[6]
  F$ = portnum Using "2/APRETEMP&&&&"
  Call FindF(F$,X2)
  If X2<>0
    Kill F$
  End If 
End If 
L_9060: ! Close 

L_9999: ! out of here
if eflag>0 let returnstatus=0
let spec1[9]=returnstatus
if rtrim$(message$)="" let message$="Report Complete " ! set the returnstatus 

else
	include "src/callmainerrnet.inc"
end try
End ! the whole program
