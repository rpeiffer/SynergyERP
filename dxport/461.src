! >>> Program 461
!
! description:  REBATE REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/461.dl4 src/461.src
!
! 1.0 04/09/2008 change
!
include "src/copyright.inc" ! dx
!
External Lib "librebates.lib"
Declare External Sub rebates
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 24, 2006  10:19:40
Rem /w2/papermaster/r2005//usr/acct/dek/work/r2005/mx/mx461.src (univ2) [dek] {38254}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem "MX461  -  VENDOR REBATE REPORT
Rem AUTHOR DAVE DEVITO 07/19/93
Rem LAST UPDATE **** NEW REPORT REPLACES OLD REBATE REPORT ****
! ----------  notes for rev9 upgrade for Action Unlimited Resources ------------
! 04/23/09  vst cct233216 - used rev9 program & added in custom code for:
! 12/17/04 jliu cct184901 - add a prompt - "Print customer name?"
! ------------------------------------------------------------------------------
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate
External Lib "ubsfunc.dl4"
Declare External Function OpenMySQLBrowserOutput,GetMySQLReportHeader
Declare External Sub AddMySQLReportColumnHeadings
Declare External Function AddMySQLReportData
Declare External Sub FinishMySQLReport


! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2]
Com 3%,PFU2[6],CNVTA,A[33],AMOUNT,ARCODE
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1,bl
Rem {end dim.rtn.input}
Dim 1%,MySQL_ch,reportAborted
Dim 3%,MySQLQueueID
Dim 1%,J3,J4,J5,J6,J8,X1,H3[1],H4[2],L3[3],PL[1],UN[2],S2[1]
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],EUN[2],CH_CC,URECFLAG,CTWT,EDT_ALL_FLG
Dim 1%,KL1[5],LINE_,FINALBLOCKED,STATUS,OT19Part
Dim 2%,R4,lco[1],3%,INV_ !  not 3%,LCO[1]
Dim 2%,H0[12],H5[16],SLSM[9],H6[8],L2[1],L4[3],L6[5],L9[1]
Dim 2%,ARDATE,CC1[4],DT3[1],JSDATE,JEDATE,JIDATE,JDATE[2]
Dim 2%,RB1[5],RBMIN,RBCOM,B[24],W2[9],C1[12],C4[10],TRBT[4],VRBT[4]
dim 2%,custcode,LPPPCUST,RCUSTCODE
Dim 3%,J,LINE_COUNT,SCOM[4],SMER[4],SCST[4],L5[3],L7[12],S3[17],OLM[6],RCN3[3],UNF[6]
Dim 3%,RB3[6],RB5[2],T2[25],GRAND_TOT[3],VENDOR_TOT[3],PROD_TOT[3],CONTRACT_TOT[3]
Dim 3%,CUST_TOT[3],W3[24],TRBT1[2],VRBT1[2],PF_LOAD2,M1[17],R3,U1,R[99],TP[999]
Dim 3%,SCR,REC_CC,PAGE,TEMP3,SCNTRCT,ECNTRCT,LCST,WHMISC[6],PRPARC[2]
Dim 3%,R18,KL3[1],OREF[5],REBATE_ARGS[10,4],VTM4[2]
DIM 3%,HOLDINVNO,INVCST[12],REC_INVCOST,INVCOST_REC_FOUND,invno1
DIM INVCST$[62],CHK_INVCOST$[60],K_INVCOST$[60]
Dim K18$[20],KL$[58],FILE$[30],HoldK9$[60]
Dim F1$[20],F2$[30],K29$[30],K13$[20],K14$[50],FLG$[4],K51$[8]
Dim P9$[50],J6$[40],P60$[50],F$[16],H1$[6],V0$[12],P0$[10],H0$[20]
Dim HMAT$[2],K2$[50],K3$[50],K4$[50],K5$[50],K6$[50],K7$[50],K8$[50]
Dim K9$[100],K10$[50],L6$[60],L1$[20],S3$[33],MT$[2],RCN$[70],RB$[12]
Dim A1$[142],A$[156],A2$[30],SHPUNT$[4],COSTUNT$[4],RBUNT$[4],INV_DATE$[10]
Dim EXP_DATE$[10],CNAME$[30],ST_DATE$[10],END_DATE$[10],ARDATE$[8]
Dim PROD$[12],BRK_PROD$[12],ZIP$[30],CONTRACT_DESC$[30],SOLIDL$[132]
Dim CC$[20],CCREF$[10],CRFLAG$[1],SCRATCH$[80],SLSM1$[118],PREVSLSM$[3]
Dim RETVAL$[512],MSGTXT$[75],Z2$[2],P61$[256],vendcnt$[50]
Dim Message$[300],WebStr$[400],custom_customer$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[2000],tmp1$[500],tmp2$[500],tmp3$[500],tmpx$[2000],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim 3%,srn[5],sa1$[118],REPOPT$[1],vendname$[30],keyvend$[30],3%,rec_vend
bl = 1
!
!! dx add xport reporting code
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
COID=IntCo
! - E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
! - F$ = COID Using "CNTRL#"
SOLIDL$ = "_",SOLIDL$
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,60,6;FLG$;
For J = 2 To 19
  Read TEMP3 \ If TEMP3 = -1 Goto L_849
  J2 = Abs(Fra(TEMP3) * 1000) \ If J2 < 88 Or J2 > Chf(1) - 1 Let J2 = 88
  J1 = Int(Abs(TEMP3))
  Read #1,J2,J1;J$[1,16];
  If TEMP3 < 0 Ropen #J,J$ Else Open #J,J$
L_849: Next J
Data "-1136","-1184","-1792","-1744","-2400","-304","320","-1","-1808","-1168","-1728","1200"
Data "-1120","-48.150","-1 ","-1824","-1328","-1152"
J$="4/INVCOST"+STR$(COID)
Call FindF(j$,found)
if not(found) let invcostf=0 Else let invcostf=1
if invcostf
	ROpen #41,J$
	ch_invcost=41
Endif
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(Trim$(custom_customer$))
If Err 0 Let J8 = Spc(8)
J8 = 0 \ F = Chf(0)
If Err 0 Gosub ERR_TRAP
EDII = (FLG$[2,2] = "T" Or FLG$[2,2] = "H")
!!If EDII
!!  Open #51,"EDICNTRL" + Str$(COID)
!!End If 
! - SCRATCH$ = Str$(Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
CH_CC = 16;CH_SSUM = 89;CH_SLSM = 17
if EDII ROpen #51,"cntrl/EDICNTRL" + Str$(intCO)
Open #CH_CC,"2/custcont" + Str$(intCO)
CRFLAG$ = "R"
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNU(H) = Int(Abs(H)) + Sgn(Fra(Abs(H))) * Sgn(H)
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
Mat Read #1,3,0;CNAME$;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,0,108;ARDATE;
YEAR_ = ARDATE$[7,8]
!
!
! call dxsave(0,"tmp/461in.txt!")
!
!! dx add xport reporting code
call dxget("I0",tmp$) \ if rtrim$(tmp$)="" Let Final = 0 else let Final = 99
call dxget("I1",tmp$) \ ARCODE = tmp$
call dxget("I2",tmp$) \ YEAR_ = tmp$
call dxget("I3",tmp$) \ if rtrim$(tmp$)="" Let START_DATE = 010170 ELSE LET START_DATE = tmp$
call dxget("I4",tmp$) \ if rtrim$(tmp$)="" let END_DATE = 123159 else let END_DATE = tmp$
call dxget("I5",tmp$) \ START_VENDOR = tmp$
call dxget("I6",tmp$) \ if rtrim$(tmp$)="" let END_VENDOR = 999999 else let END_VENDOR = tmp$
call dxget("I7",tmp$) \ SCNTRCT = tmp$
call dxget("I8",tmp$) \ if rtrim$(tmp$)="" let ECNTRCT = 9999999 else let ECNTRCT = tmp$
call dxget("I9",tmp$) \ SORT = tmp$ !! 1 - 4 
call dxget("I10",tmp$) \ WHSE = tmp$ !! 1 -99 0 all
call dxget("I11",tmp$) \ DIV = tmp$ !! 1 -99 0 all
call dxget("I12",tmp$) \ CHKPTYPE = tmp$ ! 1 - 100  0=all
call dxget("I13",tmp$) \ if rtrim$(tmp$)="" Let ENC_CREDITS = 0 else let ENC_CREDITS = 1 !!Include credits on report ?
call dxget("I14",tmp$) \ if rtrim$(tmp$)="" Let DIRORD = 0 else let DIRORD = 1 !!Include direct order type on report ? 
call dxget("I15",tmp$) \ if rtrim$(tmp$)="" Let UNQUAL_PRINT = 0 else let UNQUAL_PRINT = 1 !!Include items not qualified for rebate ? 
call dxget("I16",tmp$) \ if rtrim$(tmp$)="" Let LBSOLD_PRINT = 0 else let LBSOLD_PRINT = 1 !! Print weight sold ?   
call dxget("I17",tmp$) \ if rtrim$(tmp$)="" Let VENDPRINT = 0 else let VENDPRINT = 1 !!
call dxget("I18",tmp$) \ if rtrim$(tmp$)="" Let USE2CST = 0 else let USE2CST = 1 !!description> Use 2nd Line Cost from Invoice Line?
if custom_customer$="JPAPER" and USE2CST<>1
	let e$ = "Please check Use 2nd Line Cost from Invoice Line?." \ goto err_msg ! error 10000
endif
call dxget("I19",tmp$) \ if rtrim$(tmp$)="" Let CUSTPRFLAG = 0 else let CUSTPRFLAG = 1 !!desrciption >Base rebate on cust price from invoice Line? 
if custom_customer$="JPAPER"
	if p61$[52,52]<>"Y" and custprflag=0 
		let e$ = "Please check Base Rebate on Cust Price from Inv Line." \ goto err_msg ! error 10000
	endif
endif
If custom_customer$="ACTION"
	call dxget("PRTCNM",tmp$)
	if RTrim$(tmp$)="" let prntcustn=0 else let prntcustn=1
Else ! others always print customer name
	prntcustn=1
Endif
call dxget("REPOPT",tmp$)
	if RTrim$(tmp$)=""
		let repopt$="D"
	else
		repopt$="S" 
	endif
	if repopt$="S" and final<>0
		let e$ = "Final Report Option Must Be Ran in Detail" \ goto err_msg ! error 10000
	endif
!
!! dx end
!
if J8 let Final=0 ! can't be final run if not printing to printer
!
IF ARCODE < 1 OR ARCODE > 12 LET B1=0 ! e$ = "Invalid month code, must be between 1 and 12!" \ bl = 0!!\ error 10000 
IF YEAR_ < 0 or YEAR_ > 99 LET b1=0 ! e$ = "Invalid year code, must be between 0 and 99!"  \ bl = 0!!\ error 10000
!
if START_VENDOR < 0 or START_VENDOR > 999999  let e$ = "Invalid starting vendor code, must be between 0 and 999999!" \ goto err_msg ! error 10000
if END_VENDOR < START_VENDOR or END_VENDOR > 999999  Let e$ = "Invalid ending vendor code, must be between starting vendor code and 999999!" \ goto err_msg !error 10000
!
if SCNTRCT < 0 or SCNTRCT > 9999999 let e$="Invalid starting contract number, must be between 0 and 9999999!" \ goto err_msg !goto err_msg !error 10000
if ECNTRCT < SCNTRCT or ECNTRCT > 9999999 Let e$ = "Invalid ending contract number, must be between starting contract number and 9999999!" \ goto err_msg !error 10000
!
if WHSE < 0 or WHSE > 99 let e$="Invalid warehouse, must be between 0 and 99!" \ goto err_msg !error 10000
!
if DIV < 0 or DIV > 99 Let e$="Invalid division, must be between 0 and 99!" \ goto err_msg !error 10000 
!
if CHKPTYPE < 0 or CHKPTYPE > 100 let e$="Invalid customer price type, must be between 0 and 100!" \ goto err_msg !error 10000
!

!
! starting date
X$ = START_DATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \START_DATE = X$
X2 = START_DATE
Gosub NUM2DATE
Call VerifyDate(X$,X$,E) \ If E if bl = 0 Let e$="Invalid starting date!" \ goto err_msg !error 10000
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let JSDATE = -1 else let JSDATE = X$[1,5]
If JSDATE < 0  if bl = 0 let e$="Invalid starting date!" \ goto err_msg !error 10000 
!
!Ending date
X$ = END_DATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \ END_DATE = X$
X2 = END_DATE
gosub NUM2DATE
Call VerifyDate(X$,X$,E) \ If E if bl = 0 let e$="Invalid ending date!" \ goto err_msg !error 10000
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let JEDATE = -1 else let JEDATE = X$[1,5]
If JEDATE < JSDATE if bl = 0 let e$ = "Invalid ending date, must be >= starting date!" \ goto err_msg !error 10000
!
if P61$[52,52] <> "Y" Let CUSTPRFLAG = 0 

if J8 ! dx xml, setup rstr$
  !<section>
	If repopt$="S"
		let mysql_ch=-1
	else
		MySQL_ch = OpenMySQLBrowserOutput(e$)
	endif
	if MySQL_ch <> -1
		if repopt$="S" 
			e$="MySQL not available for Summary Report "
			error 10000
		endif
		MySQLQueueID = GetMySQLReportHeader(e$,MySQL_ch,"461")
		if MySQLQueueID = 0
			e$ = "Could not get MySQL report header!"
			error 10000
		end if
	else
		search rstr$,"<section>",e
		if e<>0
			tmp$=rstr$[1,e-1]
			rstr$=tmp$
		endif 
		tmp$ = bsdel$,"461",fdel$,rdel$
		call addtostr(e$,rstr$,tmp$)
	end if
End if
If J8 = 0 or MySQLQueueID !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
iF j8
	if repopt$="S"
		tmp$="Vendor Id",fdel$
		tmp$=tmp$,"Vendor Name ",fdel$
		tmp$=tmp$,"Ship Quantity",fdel$
		tmp$=tmp$,"Rebate Amount",fdel$
		if lbsold_print<>0 
			tmp$=tmp$,"LBS Sold",fdel$
		endif
		Call addtostr(e$,rstr$,tmp$+rdel$)
		goto L_1370:
	endif
  tmp$ = "VENDOR NUMBER",fdel$
  tmp$ = tmp$,"VENDOR NAME",fdel$
  If VENDPRINT  Let tmp$ = tmp$,"VENDOR ITEM",fdel$
  tmp$ = tmp$, "CUSTOMER NUMBER",fdel$,"CUSTOMER NAME",fdel$
  if SORT <> 3
    tmp$ = tmp$, "CUSTOMER ADDRESS",fdel$,"CUSTOMER CITY",fdel$
    tmp$ = tmp$, "CUSTOMER STATE",fdel$,"CUSTOMER ZIP",fdel$
  end if
  tmp$ = tmp$,"PRODUCT CODE",fdel$ 
  tmp$ = tmp$,"DESCRIPTION",fdel$
  tmp$ = tmp$,"PRODUCT TYPE",fdel$
  tmp$ = tmp$, "INVOICE NUMBER",fdel$
  tmp$ = tmp$, "INVOICE DATE",fdel$
  tmp$ = tmp$, "CNTRCT# CUST REF",fdel$
  If SORT	= 2 or SORT = 4
	tmp$ = tmp$,"CONTRACT NAME",fdel$
	tmp$ = tmp$,"CONTACT",fdel$
	tmp$=tmp$,"VENDOR CONTR",fdel$
	tmp$=tmp$,"VEND CONTR DESC",fdel$
	tmp$ = tmp$,"CUST REF #",fdel$
  End if
  tmp$ = tmp$, "EXP DATE",fdel$
  If CUSTPRFLAG !"cct166476 - base on cust price from inv hist
    tmp1$ = "CUST PR"
  Else 
    ! "cct 155732 - show which cost used
    If Not(USE2CST) let tmp1$ = "REPLEN" Else tmp1$ = "INV LN"
  End If 
  tmp1$ = tmp1$,"COST"
  tmp$ = tmp$,tmp1$,fdel$,tmp1$," TYPE",fdel$
  tmp$ = tmp$, "REBATE CONT COST",fdel$
  tmp$ = tmp$, "REBATE UNIT",fdel$
  tmp$ = tmp$, "UNITS",fdel$
  if lbsold_print<>0
	tmp$ = tmp$, "UNIT LBS SOLD",fdel$
  END IF
  tmp$ = tmp$, "EXTENDED REBATE",fdel$
  if MySQLQueueID
	call AddMySQLReportColumnHeadings(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$)
  else
	Call addtostr(e$,rstr$,tmp$+rdel$)
  end if
End If 
!
L_1370: Rem
!!If Err 0 Gosub ERR_ESCAPE
Gosub L_8100
!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ PAGE_LEN = Chf(0)
!!If Err 0 Gosub ERR_ESCAPE
!If J8 If J8 <> 49 Goto ERR_TRAP
PAGE_LEN = 60 \ If J8 Let PAGE_LEN = 22;SCRPRT = 99
J2 = 0
If FINAL And ARCODE Gosub Build_rebttmp
K9$ = " ",K9$
!!Print @5,22;'CL';"Printing, please wait... "
LINE_COUNT = 99
If Not(ARCODE)
  X2 = START_DATE \ Gosub ISDUNPACK \ ST_DATE$ = X$
  X2 = END_DATE \ Gosub ISDUNPACK \ END_DATE$ = X$
End If 
BRK_VENDOR = -1;BRK_CUST = -1;BRK_PROD$ = "";BRK_CONTRACT = -1
!
L_2010: 
Search #9,3,1;K9$,R3,E 	
If E Goto L_9100
if reportAborted goto OUTEND:
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,22;PCTR;" Records Printed";
!!    Print Using "   Page ####";PAGE;
!!  End If 
End If 
If SORT = 1
  R2 = K9$[31,37]
  R8 = K9$[25,30]
  CUST = K9$[7,12]
  PROD$[1,12] = K9$[13,24]
End If 
If SORT = 2
  R2 = K9$[37,43]
  R8 = K9$[31,36]
  CONTRACT = K9$[7,12]
  PROD$[1,12] = K9$[19,30]
  CUST = K9$[13,18]
End If 
If SORT = 3
  R2 = K9$[37,43]
  R8 = K9$[31,36]
  CONTRACT = K9$[25,30]
  PROD$[1,12] = K9$[7,18]
  CUST = K9$[19,24]
End If 
If SORT = 4
  R2 = K9$[37,43]
  R8 = K9$[31,36]
  CONTRACT = K9$[7,12]
  PROD$[1,12] = K9$[13,24]
  CUST = K9$[25,30]
End If 
R4 = K9$[51,56]
R18 = K9$[57,62]
VENDOR = K9$[1,6]
If BRK_VENDOR = -1 Let BRK_VENDOR = VENDOR
If BRK_PROD$ = "" Let BRK_PROD$ = PROD$ \ PRODUCT_PRINT = 99
If SORT <> 3 If BRK_CUST = -1 Let BRK_CUST = CUST \ CUST_PRINT = 99
If SORT = 2 Or SORT = 4 If BRK_CONTRACT = -1 Let BRK_CONTRACT = CONTRACT;CONTRACT_PRINT = 99
If VENDOR <> BRK_VENDOR Gosub L_4260
If SORT = 2 Or SORT = 4 If BRK_CONTRACT <> CONTRACT Gosub L_4170
If (SORT = 1) Or (SORT = 2) If BRK_CUST <> CUST Gosub L_4080
If SORT = 4 If BRK_CUST <> CUST Let CUST_PRINT = 99 \ BRK_CUST = CUST
If BRK_PROD$ <> PROD$ Gosub L_4000
Mat Read #3,R3,8;L3;
Mat Read #3,R3,16;L4;
Mat Read #3,R3,32;L5;
Mat Read #3,R3,56;L6;
Mat Read #3,R3,80;L6$;
Mat Read #3,R3,140;L1$;
Mat Read #3,R3,168;L7;
Mat Read #3,R3,370;S3$;
Mat Read #3,R3,250;UN;
Mat Read #3,R3,260;S3;
Mat Read #3,R3,446;EUN;
Mat Read #3,R3,452;UNF;
Mat Read #3,R3,404;OLM;
Mat Read #3,R3,494;LCO;
Read #3,R3,502;LCST;
Read #3,R3,514;CTWT;
Mat read #3,r3,518;invno;
If L1$[14,16] = "KIT"
  L4[0] = R4
  Mat Read #18,R18,0;KL$;
  Mat Read #18,R18,58;KL1;
  Mat Read #18,R18,78;KL3;
End If 
Mat Read #4,L4[0],0;A$;
Mat Read #4,L4[0],256;A;
Mat Read #4,L4[0],156;B;
Mat Read #4,L4[0],512;PFU1;
Mat Read #4,L4[0],554;PFU2;
mat read #4,L4[0],596;prparc;
Mat Read #4,L4[0],894;C4;
Mat Read #4,L4[0],938;PF_LOAD2;
Mat Read #2,R2;H0;
If H0[0] = 31 Let MULT = -1 Else Let MULT = 1
Mat Read #2,R2,52;H3;
Mat Read #2,R2,56;P0$;
Mat Read #2,R2,66;V0$;
Mat Read #2,R2,78;H4;
Mat Read #2,R2,84;H0$;
Mat Read #2,R2,104;H5;
Mat Read #2,R2,408;H6;
Mat Read #2,R2,272;H1$;
mat  read #2,r2,508;OT19Part;
Mat Read #2,R2,512;OREF;
Mat Read #19,oref[4],8;SA1$; ! "ship to name,addr,etc.
Mat Read #19,oref[4],154;srn; ! "ship to name,addr,etc.
If H5[7] = 15 Let L7[4] = S3[7]
X2 = H0[8] \ Gosub YMD2JUL \ X2 = 0
JIDATE = X2
Gosub READ_REBATE_DETAIL
if custom_customer$="JPAPER"
	Gosub Get_Rebate_Hdr: ! "get's rcn$ (needed!)
endif
Gosub L_30000
Gosub L_8800
If Not(W2[3]) Let W2[3] = B[24]
if p61$[125,125]="Y" let W2[3]=B[24] ! always Prod vend
gosub l_6900:! check for reb vendor
X2 = H0[8] \ Gosub ISDUNPACK \ INV_DATE$ = X$
If RB1[4] Let X2 = RB1[4] \ Gosub ISDUNPACK \ EXP_DATE$ = X$
If Not(RB1[4]) Let EXP_DATE$ = " none "
If RB$[1,3] = "#  " Or RB1[5] <> 1 Let RBUM[0] = PFU1[RBUM[0]]
If PFU1[11] > 0 Mat Read #12,PFU1[11],10;COSTUNT$;
If PFU1[11] = -1 Let COSTUNT$ = "CWT "
If PFU1[11] = -3 Let COSTUNT$ = "LB  "
If PFU1[9] > 0 Mat Read #12,PFU1[9],10;SHPUNT$
If PFU1[9] = -1 Let COSTUNT$ = "CWT "
If PFU1[9] = -3 Let COSTUNT$ = "LB  "
If RBUM[0] > 0 Mat Read #12,RBUM[0],10;RBUNT$
If RBUM[0] = -1 Let RBUNT$ = "CWT "
If RBUM[0] = -3 Let RBUNT$ = "LB  "
Gosub L_6800 ! vendtag
LET INVCOST_REC_FOUND=0
IF NOT(USE2CST) ! " not using 2nd line cost
	GOSUB CHK_FOR_INVCOSTREC: ! use po cost from history
	IF INVCOST_REC_FOUND GOTO BYPASS_SETCOST_REBATE:
ENDIF 
If P9$[32,32] = "Y"
  If M1[17] = 1 Let COST = W3[17]
  If M1[17] = 2 Let COST = W3[14]
  If M1[17] = 3 Let COST = W3[15]
  If M1[17] = 4 Let COST = W3[16]
  If M1[17] = 5 Let COST = W3[18]
  if m1[17]=6 let cost=whmisc[2]
End If 
If P9$[32,32] <> "Y" Or COST = 0
  If M1[17] = 1 Let COST = B[8]
  If M1[17] = 2 Let COST = PF_LOAD2
  If M1[17] = 3 Let COST = B[21]
  If M1[17] = 4 Let COST = B[10]
  If M1[17] = 5 Let COST = C4[4]
  if m1[17]=6 let cost=prparc[2]
End If 
If Not(COST) 
REM IF DEFAULT COST IS ZERO USE PO COST
If P9$[32,32] = "Y" LET COST = W3[16]
ENDIF 
If Not(COST) Let COST = B[10]
if custom_customer$="JPAPER"
	!If Use2CST And LCST Let COST=LCST ! "cct 155732 - use 2nd line cost
	If LCST Let COST=LCST ! "cct 155732 - use 2nd Inv Line Cost (custom-jpaper)
else
	If Use2CST And LCST Let COST=LCST ! "cct 155732 - use 2nd line cost
endif
If CUSTPRFLAG Let COST = OLM[3]
BYPASS_SETCOST_REBATE: REM
CNVTA = COST;CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2
Gosub L_20000
DISP_COST = AMOUNT
DISP_COST = FNR(DISP_COST)
If L1$[14,16] = "KIT"
  KL3[1] = KL3[1] * MULT
  CNVTA = KL3[1];CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 1
Else 
  L7[4] = L7[4] * MULT
  CNVTA = L7[4];CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 1
End If 
Gosub L_20000
QTY_SHIP = AMOUNT
If UNF[5]
  WGT_SHIP = ((L7[4] * L6[4]) / UNF[5])
Else 
  WGT_SHIP = L7[4] * L6[4]
End If 
If L1$[14,16] = "KIT"
  WGT_SHIP = 0
  REPL_COST = FNR(COST * KL3[1])
Else 
  REPL_COST = FNR(COST * L7[4])
End If 
EXT_REBATE = 0;REBATE_UNIT = 0;REBATE_COST = 0
If RB[0] = 1
  REBATE_UNIT = FNR(DISP_COST * (RB5[0] / 100))
  REBATE_COST = (DISP_COST - REBATE_UNIT)
  EXT_REBATE = FNR(REBATE_UNIT * QTY_SHIP)
End If 
If RB[0] = 2
  REBATE_UNIT = RB5[0]
  REBATE_COST = (DISP_COST - REBATE_UNIT)
  EXT_REBATE = FNR(QTY_SHIP * RB5[0])
End If 
If RB[0] = 3
  If RB$[1,3] = "#  " Or RB1[5] <> 1 Let AMOUNT = RB5[0] \ Goto L_2850
  CNVTA = RB5[0];CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2
  Gosub L_20000
L_2850: REBATE_COST = AMOUNT
  REBATE_UNIT = DISP_COST - REBATE_COST
  EXT_REBATE = FNR(REBATE_UNIT * QTY_SHIP)
End If 
If (DISP_COST <= REBATE_COST) And Not(UNQUAL_PRINT) Goto L_2010
If (DISP_COST <= REBATE_COST) And UNQUAL_PRINT Goto L_3510
Gosub L_3000 ! totals
L_3510: ! 
if repopt$="S" goto L_2010:
Gosub HEADING
If CONTRACT_PRINT Gosub L_4600
If SORT = 4 If PRODUCT_PRINT Gosub L_4700
If CUST_PRINT Gosub L_4500
if custom_customer$="JPAPER"
	gosub l_4550:! print ship list for each line
endif
Gosub LINE_DETAIL
Goto L_2010
!
L_3000: Rem TOTALS
GRAND_TOT[0] = GRAND_TOT[0] + QTY_SHIP;GRAND_TOT[1] = GRAND_TOT[1] + EXT_REBATE
VENDOR_TOT[0] = VENDOR_TOT[0] + QTY_SHIP;VENDOR_TOT[1] = VENDOR_TOT[1] + EXT_REBATE
PROD_TOT[0] = PROD_TOT[0] + QTY_SHIP;PROD_TOT[1] = PROD_TOT[1] + EXT_REBATE
CONTRACT_TOT[0] = CONTRACT_TOT[0] + QTY_SHIP;CONTRACT_TOT[1] = CONTRACT_TOT[1] + EXT_REBATE
CUST_TOT[0] = CUST_TOT[0] + QTY_SHIP;CUST_TOT[1] = CUST_TOT[1] + EXT_REBATE
GRAND_TOT[2] = GRAND_TOT[2] + WGT_SHIP
VENDOR_TOT[2] = VENDOR_TOT[2] + WGT_SHIP
PROD_TOT[2] = PROD_TOT[2] + WGT_SHIP
CONTRACT_TOT[2] = CONTRACT_TOT[2] + WGT_SHIP
CUST_TOT[2] = CUST_TOT[2] + WGT_SHIP
If PRSSUM Gosub ACCUM_SSUM
Return 
!
L_4000: Rem PRODUCT TOTAL
IF REPOPT$="S" GOTO CLRPRoDTOT:
If Not(PROD_TOT[0]) And Not(PROD_TOT[1]) And Not(PROD_TOT[2]) Goto L_4060
Gosub HEADING
!
IF NOT(j8)
	Print #0; Tab 4;"PRODUCT ";A$[140,151];" ";A$[9,38];" ";A$[63,92];
	Print #0; Tab 88;" *** PRODUCT TOTAL *** ";
	If Not(Fra(PROD_TOT[0])) Print #0; Using "---------#"; Tab 112;PROD_TOT[0];
	If Fra(PROD_TOT[0]) Print #0; Using "------#.##"; Tab 112;PROD_TOT[0];
	Print #0; Using "------#.##"; Tab 122;PROD_TOT[1]
	line_count=line_count+1
	If VENDPRINT Print #0; Tab 4;"VENDOR ITEM ";A$[93,112];
	!If LBSOLD_PRINT Print #0; Using "-------------#"; Tab 108;PROD_TOT[2]
	!If Not(VENDPRINT) If Not(LBSOLD_PRINT) Print #0;" "
	!Print #0;" "
	if lbsold_print 
		PRINT #0; USING "-------------#"; TAB 108;PROD_TOT[2]
		line_count=line_count+1
	endif
	IF NOT(VENDPRINT) and NOT(LBSOLD_PRINT) 
		PRINT #0;" "
		line_count=line_count+1
	endif
	PRINT #0;" "
	LET line_count=line_count+1
END IF
! LINE_COUNT = LINE_COUNT + 3

CLRPRODTOT: PROD_TOT[0] = 0;PROD_TOT[1] = 0;PROD_TOT[2] = 0
L_4060: BRK_PROD$ = PROD$
If SORT = 4 Let CONTRACT_PRINT = 99 \ PRODUCT_PRINT = 99
Return 
!
L_4080: Rem CUSTOMER TOTAL
IF REPOPT$="S" goto clrcusttot: 
If Not(CUST_TOT[0]) And Not(CUST_TOT[1]) And Not(CUST_TOT[2]) Goto L_4150
Gosub L_4000
If SORT = 4 Goto L_4150
Gosub HEADING
IF NOT(j8)
  If prntcustn ! custom_customer$="ACTION"  ! optional print customer stuff
	Print #0; Tab 78;" *** CUSTOMER ";BRK_CUST;" TOTAL *** ";
	If Not(Fra(CUST_TOT[0])) Print #0; Using "---------#"; Tab 112;CUST_TOT[0];
	If Fra(CUST_TOT[0]) Print #0; Using "------#.##"; Tab 112;CUST_TOT[0];
	Print #0; Using "------#.##"; Tab 122;CUST_TOT[1]
	!If LBSOLD_PRINT Print #0; Using "---------#"; Tab (112);CUST_TOT[2]
	!Print #0;" " 
	line_count=line_count+1
	if lbsold_print 
		PRINT #0; USING "---------#"; TAB(112);CUST_TOT[2]
		line_count=line_count+1 
	endif
 Endif ! action CUSTOM - option to NOT print customer

	PRINT #0;" " \ LET line_count=line_count+1
END IF
!LINE_COUNT = LINE_COUNT + 2
clrcusttot: CUST_TOT[0] = 0;CUST_TOT[1] = 0;CUST_TOT[2] = 0
L_4150: BRK_CUST = CUST
CUST_PRINT = 99
Return 
!
L_4170: Rem CONTRACT TOTAL
if repopt$="S" goto clrctrcttot
If Not(CONTRACT_TOT[0]) And Not(CONTRACT_TOT[1]) And Not(CONTRACT_TOT[2]) Goto L_4240
Gosub L_4080
Gosub HEADING
IF NOT(J8)
	Print #0; Tab 76;" *** CONTRACT #";BRK_CONTRACT;" TOTAL *** ";
	If Not(Fra(CONTRACT_TOT[0])) Print #0; Using "---------#"; Tab 112;CONTRACT_TOT[0];
	If Fra(CONTRACT_TOT[0]) Print #0; Using "------#.##"; Tab 112;CONTRACT_TOT[0];
	Print #0; Using "------#.##"; Tab 122;CONTRACT_TOT[1]
	!If LBSOLD_PRINT Print #0; Using "---------#"; Tab (112);CONTRACT_TOT[2]
	!Print #0;" " 
	line_count=line_count+1 
	if lbsold_print 
		PRINT #0; USING "---------#"; TAB(112);CONTRACT_TOT[2]
		line_count=line_count+1 
	endif
	PRINT #0;" " \ LET line_count=line_count+1
END IF
!LINE_COUNT = LINE_COUNT + 2
If VENDOR = BRK_VENDOR If E <> 2 IF NOT(J8) Print #0;SOLIDL$ \ LINE_COUNT = LINE_COUNT + 1
clrctrcttot: CONTRACT_TOT[0] = 0;CONTRACT_TOT[1] = 0;CONTRACT_TOT[2] = 0
L_4240: BRK_CONTRACT = CONTRACT
CONTRACT_PRINT = 99
If SORT = 4 Let PRODUCT_PRINT = 99 \ CUST_PRINT = 99
Return 
!
L_4260: Rem VENDOR TOTAL
If Not(VENDOR_TOT[0]) And Not(VENDOR_TOT[1]) And Not(VENDOR_TOT[2]) Goto L_4340
if repopt$="S"
	gosub heading:
	let vendname$="Not on File"
	let keyvend$=brk_vendor using "######"
	search #6,2,1;keyvend$,rec_vend,e
	if not(e)
		mat read #6,rec_vend,0;vendname$;
	endif
	if j8
		tmpx$ = BRK_VENDOR Using "######",fdel$ !! vendor number
		tmpx$ = tmpx$,rtrim$(vendname$),fdel$ !! vendor name
	    tmpx$=tmpx$,( VENDOR_TOT[0] Using "---------#.##"),fdel$ 
		tmpx$=tmpx$,( VENDOR_TOT[1] Using "---------#.##"),fdel$ 
		IF LBSOLD_PRINT<>0
			tmpx$=tmpx$,(VENDOR_TOT[2] USING "---------#"),fdel$ 
		ENDIF
		Call addtostr(e$,rstr$,tmpx$+rdel$)	
	else
		print #0; using "######"; tab 5;brk_vendor;
		print #0; tab 15; vendname$[1,30];
		Print #0; Using "---------#.##"; Tab 50;VENDOR_TOT[0];
		Print #0; Using "---------#.##"; tab 65;VENDOR_TOT[1];
		IF LBSOLD_PRINT<>0
			PRINT #0; USING "---------#";TAB 80;VENDOR_TOT[2];
		ENDIF
		PRINT #0;""
		pRINT #0;""
		let linecount=linecount+1
	endif
	goto clrvendtot:
endif
If SORT = 3 Gosub L_4000
!If LINE_COUNT + 4 > PAGE_LEN Let LINE_COUNT = LINE_COUNT + 8 \ Gosub HEADING
GOSUB Heading
If SORT = 1 Gosub L_4080
If SORT = 2 Or SORT = 4 Gosub L_4170
Gosub HEADING

if not(J8)
  Print #0; Tab 73;" *** VENDOR #";BRK_VENDOR;" TOTAL *** ";
  If Not(Fra(VENDOR_TOT[0])) Print #0; Using "---------#"; Tab 112;VENDOR_TOT[0];
  If Fra(VENDOR_TOT[0]) Print #0; Using "------#.##"; Tab 112;VENDOR_TOT[0];
  scratch$=(Vendor_TOT[1] using "------#.##")                                    
  if scratch$[3,3]="*"        
  		print #0;" "
		line_count=line_count+1
		Print #0; Using "--------#.##"; Tab 120;VENDOR_TOT[1]
	else
		Print #0; Using "------#.##"; Tab 122;VENDOR_TOT[1]
  endif
  !If LBSOLD_PRINT Print #0; Using "---------#"; Tab (112);VENDOR_TOT[2]
  !Print #0;" " 
  line_count=line_count+1 
	if lbsold_print 
		PRINT #0; USING "---------#"; TAB(112);VENDOR_TOT[2]
		line_count=line_count+1 
	endif
	gosub heading:
	PRINT #0;" " \ LET line_count=line_count+1
end if
!
!LINE_COUNT = LINE_COUNT + 2
clrvendtot: VENDOR_TOT[0] = 0;VENDOR_TOT[1] = 0;VENDOR_TOT[2] = 0
L_4340: BRK_VENDOR = VENDOR
IF REPOPT$<>"S" LINE_COUNT = 99
Return 
!
L_4360: Rem GRAND TOTAL
If BRK_VENDOR = -1 Goto L_4367
Gosub L_4260
L_4367: Gosub HEADING
If Not(J8)
  if repopt$="S"
		print #0; tab 15;"* * *  Grand Totals  * * *";
		Print #0; Using "---------#.##"; Tab 50;GRAND_TOT[0];
		Print #0; Using "---------#.##"; tab 65;GRAND_TOT[1];
		IF LBSOLD_PRINT<>0
			PRINT #0; USING "---------#";TAB 80;GRAND_TOT[2];
		ENDIF
		PRINT #0;""
		goto clrgrdtot: !
	endif
  
  
  Print #0; Tab 88;" *** GRAND TOTAL *** ";
  If Not(Fra(GRAND_TOT[0])) Print #0; Using "---------#"; Tab 112;GRAND_TOT[0];
  If Fra(GRAND_TOT[0]) Print #0; Using "------#.##"; Tab 112;GRAND_TOT[0];
    scratch$=(GRAND_TOT[1] using "------#.##")                                    
  if scratch$[3,3]="*"                                                          
        print #0;" " \ line_count=line_count+1                                  
        print #0;Using "---------#.##";tab 119;GRAND_TOT[1]                          
  else                                                                          
        Print #0; Using "------#.##"; Tab 122;GRAND_TOT[1]                      
  endif                                                                        
  !  Print #0; Using "------#.##"; Tab 122;GRAND_TOT[1]                          

  rem Print #0; Using "------#.##"; Tab 122;GRAND_TOT[1]
  !If LBSOLD_PRINT Print #0; Using "---------#"; Tab (112);GRAND_TOT[2]
  line_count=line_count+1 
	if lbsold_print 
		PRINT #0; USING "---------#"; TAB(112);GRAND_TOT[2]
		line_count=line_count+1 
	endif
End if
clrgrdtot: GRAND_TOT[0] = 0;GRAND_TOT[1] = 0;GRAND_TOT[2] = 0
Return 
!
L_4500: Rem PRINT CUSTOMER INFO
If Not(CUST_PRINT) Return 
if repopt$="S" return
Gosub L_8850
If SORT = 4 If BRK_PROD$ = PROD$ if Not (J8) Print #0;" " \ LINE_COUNT = LINE_COUNT + 1
!if j8 Let LINE_COUNT = LINE_COUNT + 1
!
if Not(J8)
  If SORT = 1 Print #0;SOLIDL$ \ line_count=line_count+1
  if prntcustn ! standard or optional on ACTION
	  Print #0; Using " CUSTOMER ###### : "; Tab 1;CUST;A1$[31,60];"  ";
	  Print #0;A1$[61,90];"  ";
	  Print #0;A1$[121,135];" ";A1$[136,137];" ";ZIP$[1,10]
	  line_count=line_count+1
  Endif
  Print #0;" "
  if custom_customer$="JPAPER"
	IF SORT=1 LET line_count=line_count+3 ELSE  LET line_count=line_count+3
  else
	line_count=line_count+1 
  endif
end if
!
CUST_PRINT = 0
!If SORT = 1 Let LINE_COUNT = LINE_COUNT + 3 Else Let LINE_COUNT = LINE_COUNT + 2
Return 
!
L_4550: ! shiplist
if repopt$="S" return
if invno1=oref[1] return
Mat Read #19,oref[4],8;SA1$; ! "ship to name,addr,etc.
Mat Read #19,oref[4],154;srn; ! "ship to name,addr,etc.
PRINT #0; USING " SHIPTO ######."; TAB 1;cust;
PRINT #0; USING "&&&&&& : ";srn[1];SA1$[1,30];"  ";
PRINT #0;SA1$[31,60];"  ";
PRINT #0;SA1$[91,105];" ";SA1$[106,107];" ";SA1$[108,117]
IF SORT=1 LET line_count=line_count+1 
let invno1=oref[1]
RETURN 

L_4600: Rem CONTRACT PRINT
if repopt$="S" return
RCN$ = " ",RCN$
if custom_customer$="JPAPER"
	GOSUB L_8700:
else
	GOSUB L_8400:
endif
If Not(CONTRACT_PRINT) Return 
Gosub GET_CC
!
If Not(J8)
  Print #0; Using "CONTRACT ######  "; Tab 1;CONTRACT;
  Print #0; Tab 20;RCN$[41,70];
  Print #0;"   CONTACT: ";RCN$[1,20];
  PRINT #0; "  CUST REF# ";CCREF$		! "CCT140427
  line_count=line_count+1
  print #0;tab 1;"VENDOR'S CONTRACT ";VENDCNT$[1,20];TAB 40;VENDCNT$[21,50];
  Print #0;" "
  line_count=line_count+1
End if
!
CONTRACT_PRINT = 0
! LINE_COUNT = LINE_COUNT + 2 ! 1
Return 
!
L_4700: Rem PRINT PRODUCT INFO
if repopt$="S" return

If Not(PRODUCT_PRINT) Return 
!
if not(J8)
	Print #0; Tab 4;"PRODUCT ";A$[140,151];"  ";;A$[9,38];"  ";A$[63,92]
	If VENDPRINT Print #0; Tab 4;"VENDOR ITEM ";A$[93,112] Else Print #0;" "
	LINE_COUNT = LINE_COUNT + 2
End if
!
PRODUCT_PRINT = 0

Return 
LINE_DETAIL: Rem PRINT DETAIL LINE
IF REPOPT$="S" return
If LINE_COUNT > PAGE_LEN Gosub HEADING
!
IF j8 !!m1
	tmp1$ = BRK_VENDOR Using "######",fdel$ !! vendor number
	tmp1$ = tmp1$,rtrim$(A2$),fdel$ !! vendor name
	tmp2$ = CUST Using "######",fdel$,rtrim$(A1$[31,60]),fdel$ !!custo_number ^ custo_name
	if SORT <> 3
		tmp2$ = tmp2$,rtrim$(A1$[61,90]),fdel$ 
		tmp2$ = tmp2$,rtrim$(A1$[121,135]),fdel$,A1$[136,137],fdel$,ZIP$[1,10],fdel$
	end if
	tmp3$ = rtrim$(A$[140,151]),fdel$,rtrim$(A$[9,36]),fdel$ !! product code ^ description
		If H0[0] = 30 Let tmp$ = OREF[1] Using "########",fdel$,INV_DATE$,fdel$
		If H0[0] = 31 Let tmp$ = OREF[1] Using "########","C",fdel$,INV_DATE$,fdel$
		if H0[0] <> 31 and H0[0] <> 30 Let tmp$ = "",fdel$,"",fdel$
		tmp$ = tmp$, RB1[0] Using "######",fdel$
	if SORT = 2 or SORT = 4
		tmp$ = tmp$, RCN$[41,70],fdel$
		tmp$ = tmp$, RCN$[1,20],fdel$
		tmp$=tmp$,RTrim$(VENDCNT$[1,20]),fdel$ ! vend contr
		tmp$=tmp$,RTrim$(VENDCNT$[21,50]),fdel$ ! cntr desc
		Gosub GET_CC     
		tmp$=tmp$, CCREF$,fdel$
	end if
	tmp$ = tmp$, EXP_DATE$,fdel$
	tmp$ = tmp$, DISP_COST Using "-----#.##",fdel$,RBUNT$,fdel$!! /cas
	If REBATE_COST Let tmp$ = tmp$, REBATE_COST Using "-----#.##",fdel$ Else Let tmp$ = tmp$,"",fdel$

	CUST = H0[4] \ Gosub L_8850
	tmp$ = tmp$, REBATE_UNIT Using "-----#.##",fdel$
	If Fra(QTY_SHIP) Let tmp$ = tmp$, QTY_SHIP Using "------#.##",fdel$
	If Not(Fra(QTY_SHIP)) Let tmp$ = tmp$, QTY_SHIP Using "---------#",fdel$
    If LBSOLD_PRINT<>0
		Let tmp$ = tmp$, WGT_SHIP Using "------------#",FDEL$ ! Else Let tmp$ = tmp$,"",fdel$
	endif
	If H0[0] = 31 If EXT_REBATE >= 0 Let EXT_REBATE = 0
	tmp$ = tmp$, EXT_REBATE Using "------#.##",fdel$

	If ARCODE And (L7[4] <> 0 Or EXT_REBATE <> 0) And FINAL
	  If Not(DISP_COST <= REBATE_COST) Gosub update_rebttmp
	End If 
	If ARCODE And (L7[4] <> 0 Or EXT_REBATE <> 0) And FINAL Gosub ACCUM_REBATE_TO_TEMP
	Gosub GET_CC
	If SORT = 3 Let tmp2$ = H0[4] Using "######",fdel$,rtrim$(A1$[31,52]),fdel$
	!!If LBSOLD_PRINT Let tmp$ = tmp$, WGT_SHIP Using "------------#" Else Let tmp$ = tmp$,"",fdel$
	If VENDPRINT let tmp1$ = tmp1$,rtrim$(A$[93,112]),fdel$  !!VENDOR ITEM
	tmp3$ = tmp3$,rtrim$(A$[63,92]),fdel$ !!ANCHOR_PRODUCT (product type)
	tmpx$ = tmp1$,tmp2$,tmp3$,tmp$		  
	if MySQLQueueID
		if not(AddMySQLReportData(e$,MySQL_ch,MySQLQueueID,fdel$,tmpx$))
			! possible user abort - report deleted exit now
			reportAborted = 1
		end if
	else
		Call addtostr(e$,rstr$,tmpx$+rdel$)
	end if
	Return 
END IF 
!
If SORT <> 4 Print #0; Tab 1;A$[140,151];" ";A$[9,36];
If H0[0] = 30 Print #0; Using "########"; Tab 43;OREF[1]; Tab 52;INV_DATE$;
If H0[0] = 31 Print #0; Using "########"; Tab 42;"C"; Tab 43;OREF[1]; Tab 52;INV_DATE$;
Print #0; Using "######"; Tab 62;RB1[0]; Tab 69;EXP_DATE$;
Print #0; Using "-----#.##/"; Tab 78;DISP_COST;RBUNT$;
If REBATE_COST Print #0; Using "-----#.##"; Tab 93;REBATE_COST;
CUST = H0[4] \ Gosub L_8850
Print #0; Using "-----#.##"; Tab 102;REBATE_UNIT;
If Fra(QTY_SHIP) Print #0; Using "------#.##"; Tab 112;QTY_SHIP;
If Not(Fra(QTY_SHIP)) Print #0; Using "---------#"; Tab 112;QTY_SHIP;
If H0[0] = 31 If EXT_REBATE >= 0 Let EXT_REBATE = 0
Print #0; Using "------#.##"; Tab 122;EXT_REBATE;
Print #0;""
LINE_COUNT = LINE_COUNT + 1
If ARCODE And (L7[4] <> 0 Or EXT_REBATE <> 0) And FINAL
  If Not(DISP_COST <= REBATE_COST) Gosub update_rebttmp
End If 
If ARCODE And (L7[4] <> 0 Or EXT_REBATE <> 0) And FINAL Gosub ACCUM_REBATE_TO_TEMP
Gosub GET_CC
!If SORT = 3 Print #0; Using "######"; Tab 71;H0[4]; Tab (78);A1$[31,52];
!If LBSOLD_PRINT Print #0; Using "------------#"; Tab 109;WGT_SHIP Else Print #0;""
!LINE_COUNT = LINE_COUNT + 1
if (sort=1 or sort=3) and ccref$[1,3]<>"   " and len(ccref$)>0
	PRINT #0; TAB(61);"REF# ";CCREF$[1,10];		! "cct140427,234696
endif
IF SORT=3 If PrntCustn PRINT #0; USING "######"; TAB 71;H0[4]; TAB(78);A1$[31,52];
if lbsold_print 
	PRINT #0; USING "------------#"; TAB 109;WGT_SHIP 
else 
	print #0;""
endif
LET line_count=line_count+1
Return 
!
HEADING: Rem HEADINGS
If LINE_COUNT < PAGE_LEN Goto L_5940
!!If PAGE If J8 Input "\15\PRESS <CR> TO CONTINUE "J$
If PAGE If Not(J8) Print #0;"\14\";
PAGE = PAGE + 1
LINE_COUNT = 2
K6$ = " ",K6$;K6$[1,6] = BRK_VENDOR Using "######"
Search #6,2,1;K6$,R6,E
If E Let A2$ = " *** NOT ON FILE " 
if E =0 Mat Read #6,R6,0;A2$;
!L_5850:
iF j8 RETURN
!
Print #0; Tab 59;"REBATE REPORT"
Print #0; Tab 50;CNAME$; Tab 116;"PAGE";PAGE
line_count=2
If CUSTPRFLAG
  Print #0;"CUST PRICE";
Else 
  If USE2CST Print #0;"INVL COST"; Else Print #0;"PROD COST";
End If 
If Not(ARCODE) Print #0; Tab 50;"FOR ";ST_DATE$;" TO ";END_DATE$ \ line_count=line_count+1
If ARCODE Print #0; Tab 50;"FOR AR MONTH ";ARCODE;" ";
if repopt$="S"
	print #0;tab 50;"VENDOR TOTALS"
ELSE
	If SORT = 2 Print #0; Tab 50;"SORT BY VENDOR / CONTRACT / CUSTOMER "
	If SORT = 1 Print #0; Tab 50;"SORT BY VENDOR / CUSTOMER "
	If SORT = 4 Print #0; Tab 50;"SORT BY VENDOR / CONTRACT / PRODUCT / CUSTOMER"
	If SORT = 3 Print #0; Tab 50;"SORT BY VENDOR / PRODUCT "
endif
line_count=line_count+1
Print #0; Tab 10;"PRICE TYPE: "; \ If CHKPTYPE Print #0;CHKPTYPE; Else Print #0;"ALL ";
If WHSE Print #0; Using "##"; Tab 45;"FOR WAREHOUSE: ";WHSE; Else Print #0; Tab 45;"FOR ALL WAREHOUSES ";
If DIV Print #0; Using "##"; Tab 65;"AND DIVISION: ";DIV Else Print #0; Tab 65;"AND ALL DIVISIONS "
line_count=line_count+1
Print #0;""
line_count=line_count+1
if repopt$="S"
	print #0;tab 5; "Vendor#";
	print #0;tab 15;"Vendor Name ";
	print #0;tab 50;"Ship Quantity";
	print #0;tab 65;"Rebate Amount";
	if lbsold_print<>0 
		print #0;tab 82;"LBS Sold";
	endif
	print #0;""
	print #0;""
	let line_count=line_count+1
	return
endif
If BRK_VENDOR = -1 
	Print #0;"VENDOR NUMBER:  NO REBATES FOR THIS SELECTION " \ line_count=line_count+1
	Goto L_5895
Endif
Print #0; Using "###### ";"VENDOR NUMBER:  ";BRK_VENDOR;
Print #0; Tab 30;"NAME:  ";A2$; Tab 110;"AR DATE:  ";ARDATE$
line_count=line_count+1
L_5895: Print #0;""
line_count=line_count+1
If SORT <> 4 Print #0; Tab 2;"PRODUCT";
Print #0; Tab 44;"INVOICE"; Tab 52;"INVOICE"; Tab 60;"CNTRCT#";
Print #0; Tab 69;"EXP DATE";
If CUSTPRFLAG !"cct166476 - base on cust price from inv hist
  Print #0; Tab 80;"CUST PR";
Else 
  If Not(USE2CST) ! "cct 155732 - show which cost used
    Print #0; Tab 80;"REPLEN";
  Else 
    Print #0; Tab 80;"INV LN";
  End If 
End If 
Print #0;" COST"; Tab 95;"REBATE"; Tab 104;"REBATE/";
Print #0; Tab 117;"UNITS"; Tab 124;"EXTENDED"
line_count=line_count+1
If SORT <> 4 Print #0; Tab 1;" CODE "; Tab 14;"DESCRIPTION";
Print #0; Tab 45;"NUMBER";
Print #0; Tab 54;"DATE"; Tab 60;"CUST REF";
If SORT = 3 if prntcustn Print #0; Tab 71;"CUST #"; Tab 77;" CUSTOMER NAME ";
If LBSOLD_PRINT
  Print #0; Tab 93;"CONT COST"; Tab 107;"UNIT"; Tab 114;"LBS SOLD"; Tab 126;"REBATE";
Else 
  Print #0; Tab 93;"CONT COST"; Tab 107;"UNIT"; Tab 126;"REBATE";
End If 
Print #0;""
line_count=line_count+1
L_5940: Return 
!
READ_REBATE_DETAIL: Rem READ REBATE DETAIL
Mat Read #8,R8,0;RB$;
Mat Read #8,R8,12;RB1;
Mat Read #8,R8,36;RBUM;
Mat Read #8,R8,40;RB;
Mat Read #8,R8,46;RB3;
Mat Read #8,R8,118;RBWH;
Mat Read #8,R8,126;RBL1;
Mat Read #8,R8,138;RB5;
Return 
!
Build_rebttmp: ! L_6100: Rem BUILD TEMP FILE FOR UPDATE
KSIZE = 10
F1$ = "6/REBTTMP",UserID$
Call FindF(F1$,H1)
If H1 Kill F1$
F2$ = "[1:32] ",F1$
Build #29,F2$
Search #29,0,1;K29$,KSIZE,E 
If E gosub err_search ! let e$="Can't build '",F1$,"'!" \ goto err_msg !error 10000
L1 = 1000 
Search #29,0,0;K29$,L1,E 
If E gosub err_search ! let e$="Can't build '",F1$,"'!" \ goto err_msg !error 10000
MYA = (ARCODE * 100) + YEAR_
Return 
!
update_rebttmp:  ! L_6200: Rem UPDATE TEMP FILE
K29$ = " ",K29$;K29$[1,6] = VENDOR Using "######"
K29$[7] = MYA Using "####";K29$[11] = RB1[0] Using "######"
Search #29,2,1;K29$,R29,E 
If E = 1
  Gosub L_6300
  For X1 = 0 To 4
    TRBT[X1] = 0
    If X1 <= 2 Let TRBT1[X1] = 0
  Next X1
Else 
  Mat Read #29,R29,0;TRBT;
  Mat Read #29,R29,20;TRBT1;
End If 
TRBT[0] = VENDOR;TRBT[1] = MYA;TRBT[2] = RB1[0]
TRBT[3] = ARDATE;TRBT[4] = 0
TRBT1[0] = TRBT1[0] + EXT_REBATE;TRBT1[1] = 0;TRBT1[2] = 0
Mat Write #29,R29,0;TRBT;
Mat Write #29,R29,20;TRBT1;
Return 
!
L_6300: Rem NEED NEW TEMP REC
E = 2;R29 = 0
Search #29,1,0;K29$,R29,E 
If E gosub err_search ! let e$="Can't get record for '",F1$,"'!" \ error 10000
Search #29,4,1;K29$,R29,E 
If E gosub err_search !Let e$ = "Can't add key '",K29$,"' to dir# 1 for ",F1$,"!" \error 10000
Return 
!
ACCUM_REBATE_TO_TEMP: Rem update temp file when running report. will use
K29$ = " ",K29$
K29$[1,6] = "rebate";K29$[7,12] = R8 Using "######"
Search #29,2,1;K29$,R29,E 
If E = 1
  Gosub L_6300
  For X1 = 0 To 4
    TRBT[X1] = 0
    If X1 <= 2 Let TRBT1[X1] = 0
  Next X1
  TRBT[0] = RB1[0]
Else 
  Mat Read #29,R29,0;TRBT;
  Mat Read #29,R29,20;TRBT1;
End If 
TRBT1[0] = TRBT1[0] + L7[4]
TRBT1[1] = TRBT1[1] + EXT_REBATE
TRBT1[2] = TRBT1[2] + L5[3]
X2 = RB1[3] \ Gosub YMD2JUL \ X2 = 0
LBDATE = X2
X2 = H0[8] \ Gosub YMD2JUL \ X2 = 0
JIDATE = X2
If H0[0] = 30 And (JIDATE > LBDATE)
  TRBT[1] = H0[8]
End If 
Mat Write #29,R29,0;TRBT;
Mat Write #29,R29,20;TRBT1;
Mat Write #29,R29,38;RB$[1,12];
Return 
!
UPDATE_REBATEDTL: Rem accumlate qty since start, rebate
Mat Read #29,R29,0;TRBT;
Mat Read #29,R29,20;TRBT1;
Mat Read #29,R29,38;PROD$;
R8 = K29$[7,12]
Gosub READ_REBATE_DETAIL
If PROD$[1,12] <> RB$[1,12] Or TRBT[0] <> RB1[0]
  E = 0!! \ Gosub ERR_SEARCH
End If 
RB3[4] = RB3[4] + TRBT1[0]
RB3[5] = RB3[5] + TRBT1[1]
RB3[6] = RB3[6] + TRBT1[2]
X2 = RB1[3] \ Gosub YMD2JUL \ X2 = 0
LBDATE = X2
X2 = TRBT[1] \ Gosub YMD2JUL \ X2 = 0
JIDATE = X2
If JIDATE > LBDATE
  RB1[3] = TRBT[1]
  Write #8,R8,24;RB1[3];
End If 
Mat Write #8,R8,46;RB3;
Return 
!
!!L_6400: Rem CHECK IF UPDATE IS WANTED
!!!!Print @5,4;'CL';"MONTH CODE";@19,4;ARCODE;@28,4;YEAR_;
!!L_6430:!! Print @0,6;'CL';"Do you want to Post these totals? (Y/N)    ";
!!J0$ = "60010145 6";J1 = 0;J5$ = ""
!!Gosub ISINPUT
!!If J1 = 0 Return 
!!If J1 <> 1 Goto L_6430
!!L_6460: Print @0,7;'CL';"Enter a Reference Posting Date (mmddyy)    ";
!!J0$ = "50000640 7";J1 = ARDATE;J5$ = ""
!!Gosub ISINPUT \ If J1 = 0 Goto L_6430
!!MTH = J$[1,2];YR = J$[7,8]
!!X2 = (MTH * 100) + YR \ If X2 = MYA Goto L_6500
!!J7$ = "MONTH/YEAR DO NOT AGREE WITH REPORT SELECTIONS!"
!!Gosub ISERRMSG \ Goto L_6460
!
L_6500: Rem OKAY
!ARDATE = J1
K29$ = " ",K29$
k29$[1,6]="rebate"
L_6520: 
Search #29,3,1;K29$,R29,E 
If E = 2 Return 
If K29$[1,6] = "rebate" Gosub UPDATE_REBATEDTL 
Goto L_6520
!
L_6800: Rem READ VENDTAG
K14$ = " ",K14$;M1[17] = 0
K14$[1,6] = VENDOR Using "######"
Search #14,2,1;K14$,R14,E
If E Goto L_6830
Mat Read #14,R14,206;M1;
L_6830: If M1[17] < 1 Or M1[17] > 6 Let M1[17] = 4
Return 
L_6900: REM READ VENDTAG
orig_vendor=w2[3]
LET K14$=" ",K14$
LET K14$[1,6]=w2[3]USING "######"
SEARCH #14,2,1;K14$,R14,E
IF not(E)
	MAT  READ #14,R14,462;VTM4;
	if vtm4[1] let w2[3]=vtm4[1]
end if
RETURN 

L_8100: Rem SORT
!!Print @5,22;'CL';"Sorting,please wait... "
! - Gosub BUILD_SORT_FILE 
Gosub CLEAR_SORT_FILE
K2$ = " ",K2$
If ARCODE !!If FULLYEAR = 0
  If YEAR_ < 68 Let FULLYEAR = 2000 + YEAR_
  If YEAR_ > 67 Let FULLYEAR = 1900 + YEAR_
End If 
If ARCODE
  K2$[1,4] = FULLYEAR Using "&&&&"
  K2$[5] = ARCODE Using "&&"
  DIR = 1
else
  K2$[1] = JSDATE Using "######"
  DIR = 2
endif
L_8110: !
Search #15,3,DIR;K2$,R2,E 
If E Return 
SORTCTR = SORTCTR + 1
!!If Not(Fra(SORTCTR / 500))
!!  Print Using "#######";@25,22;SORTCTR;" Records Processed";
!!End If 
If ARCODE Let X2 = K2$[5,6]
If ARCODE = 0
  X2 = K2$[1,6]
  Gosub JUL2YMD \ X2 = DT3[0]
End If 
Mat Read #2,R2,0;H0;
Mat Read #2,R2,52;H3;
Mat Read #2,R2,78;H4;
Mat Read #2,R2,408;H6;
Mat Read #2,R2,104;H5;
MAT  READ #2,R2,508;OT19PART;
If H5[7]=19 And OT19Part Goto L_8110: ! "NO OT 19 Partials - ONLY FINALS
Mat Read #2,R2,512;OREF;
Mat Read #11,OREF[5],8;T2;
If ENC_CREDITS And H0[0] = 31 And H3[1] = 3 Goto L_8110
If WHSE If WHSE <> H4[2] Goto L_8110
If DIV If DIV <> H5[8] Goto L_8110
If ARCODE = 0 and H0[8] <> X2 and not(j8)
	if repopt$<>"S" 
		IF NOT(J8) Print #0;"DATA ERROR ";K2$ \ line_count=line_count+1
		Goto L_8110
	endif
endif
X2[1] = (Fra(T2[25] / 100) * 100)
If ARCODE<>0 and X2 <> X2[1] 
	if repopt$<>"S"
		if not(j8) Print #0;"DATA ERROR ";K2$ \ line_count=line_count+1
		Goto L_8110
	endif
endif
X2[1] = K2$[3,4]
If ARCODE
  If ARCODE <> X2 Or YEAR_ <> X2[1] Return 
End If 
X2 = H0[8] \ Gosub YMD2JUL \ X2 = 0
JIDATE = X2
If Not(ARCODE)
  If JIDATE > JEDATE Return 
End If 
If Not(ENC_CREDITS) If H0[0] = 31 Goto L_8110
If H5[7] = 8 Or H5[7] = 16 Goto L_8110
CUST = H0[4] \ Gosub L_8850
If H6[0] Let PTYPE = H6[0] Else Let PTYPE = C1[7]
If CHKPTYPE If CHKPTYPE <> PTYPE Goto L_8110
If Not(DIRORD) If H5[7] = 2 Goto L_8110
K3$ = " ",K3$
K3$ = K2$[9,18]
L_8165: Search #3,3,1;K3$,R3,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8110
If K3$[1,10] <> K2$[9,18] Goto L_8110
Mat Read #3,R3,8;L3;
Mat Read #3,R3,16;L4;
Mat Read #3,R3,140;L1$;
Mat Read #3,R3,168;L7;
Mat Read #3,R3,260;S3;
Mat Read #3,R3,404;OLM;
Mat Read #3,R3,494;LCO;
mat read #3,r3,518;invno;
If L3[0] Goto L_8165
if custom_customer$="JPAPER"
	let a$[140,151]=l1$[1,12]  ! grab that product code
endif
If H5[7] = 15 Let L7[4] = S3[7]
If Not(L7[4]) Goto L_8165
If L1$[14,16] = "KIT"
  K18$ = " ",K18$;K18$[1,10] = OREF[1] Using "##########"
  K18$[11,13] = L3[2] Using "###"
NEXT_KIT: Search #18,3,1;K18$,R18,E \ If E Goto L_8165
  INV_ = K18$[1,10];LINE_ = K18$[11,13]
  If INV_ <> OREF[1] Or LINE_ <> L3[2] Goto L_8165
  Mat Read #18,R18,0;KL$;
  Mat Read #18,R18,58;KL1;
  Mat Read #18,R18,78;KL3;
  If KL1[3] Or KL1[5] = -2 Goto NEXT_KIT
  Gosub GET_PROD
  Gosub L_8800
Else 
  Mat Read #4,L4[0],0;A$;
  Mat Read #4,L4[0],156;B;
  Gosub L_8800
End If 
If Not(W2[3]) Let W2[3] = B[24]
if p61$[125,125]="Y" let W2[3]=B[24] ! always Prod vend
gosub l_6900:! check for reb vendor
IF W2[3]>=START_VENDOR if w2[3]<=end_vendor GOTO goone:
IF orig_vendor>=START_VENDOR if orig_vendor<=end_vendor GOTO goone:
GOTO L_8165:! it's neither
goone:! it's okay to continue
If EDII
  K51$ = W2[3] Using "VN######"
  Search #51,2,1;K51$,R[51],E
  If Not(E)
    Mat Read #51,R[51],8;TP;
    If Int(Abs(TP[867])) Goto L_8165
  End If 
End If 
FOUND = 0;LOW_REBATE_COST=0;HOLDK9$=""
let costpass=0
let custcode=h0[4]
srchrebate: ! search rebate by customer or  bill to customer
LET K7$=" ",K7$;K7$[1,6]=custcode USING "######"
goto call_rebates:

! as there is a goto (to call_rebates) above the rest no longer used?
! K7$ = " ",K7$;K7$[1,6] = H0[4] Using "######"
If LCO[1] <> 0
  K7$[7,12] = LCO[1] Using "######"
Else 
  Goto CALL_REBATES
End If 
If custom_customer$="CUSTOM_ACME" ! normally "ACME" - needs work/checking
 !! not sure how this will fit in with the new Call_rebates
	LET FOUND=0;LOW_REBATE_COST=0;HOLDK9$=""
	LET K7$=" ",K7$;K7$[1,6]=H0[4] USING "######"
	A_8235: SEARCH #7,3,2;K7$,R7,E \ IF E>2 GOSUB ERR_SEARCH:
	IF E GOTO L_8280:
	LET X2=K7$[1,6] \ IF X2<>H0[4] GOTO L_8280:
	MAT  READ #7,R7,0;RCN3;
	MAT  READ #7,R7,24;RCN$
	IF RCN3[3]<>W2[3] GOTO A_8235:
	IF SCNTRCT AND SCNTRCT>RCN3[0] GOTO A_8235:
	IF ECNTRCT AND ECNTRCT<RCN3[0] GOTO A_8235:
	GOSUB CONVERT_RCN3DATES:
	IF RCN3[1] IF JIDATE<JDATE[1] GOTO A_8235:
	IF RCN3[2] IF JIDATE>JDATE[2] GOTO A_8235:
	GOSUB L_8600: ! find details
	IF FOUND
		GOSUB L_8500: ! insert sortkey
		IF L1$[14,16]="KIT" GOTO NEXT_KIT:
	ENDIF 
	GOTO A_8235:
Endif
Rem legacy loop below. now only used for lines with contract# on them.
L_8235: 
Search #7,2,2;K7$,R7,E 
If E Goto L_8280

!IF E
!	if h0[4]<>h0[1] and costpass=0
!		let costpass=99
!		let custcode=h0[1] 
!		goto srchrebate: ! look for under bill to customer
!	else
!		goto l_8280:
!	endif
!endif
X2 = K7$[1,6]
! If X2 <> H0[4] Goto L_8280
IF X2<>custcode
	!if h0[4]<>h0[1] and costpass=0
	!	let costpass=99
	!	let custcode=h0[1]
	!	goto srchrebate:
	!else
		GOTO L_8280: ! "hit next customer
	!endif
endif
Mat Read #7,R7,0;RCN3;
Mat Read #7,R7,24;RCN$;
MAT  READ #7,R7,94;vendcnt$;
If RCN3[3] <> W2[3] Goto L_8280
If SCNTRCT And SCNTRCT > RCN3[0] Goto L_8280
If ECNTRCT And ECNTRCT < RCN3[0] Goto L_8280
Gosub CONVERT_RCN3DATES
If RCN3[1] If JIDATE < JDATE[1] Goto L_8280
If RCN3[2] If JIDATE > JDATE[2] Goto L_8280
Gosub L_8600 ! find detauls
If FOUND
  Gosub L_8500 ! insert sortkey
  If L1$[14,16] = "KIT" Goto NEXT_KIT Else Goto L_8165
Else 
  If LCO[1] Goto L_8280
End If 
Goto L_8280
! above is legacy code not used?!
!
!! this is used in the L_4600: routine!
L_8700: LET K7$=" ",K7$;K7$[1,6]=CONTRACT USING "######"
SEARCH #7,2,1;K7$,R7,E \ IF E>1 GOSUB ERR_SEARCH: 
If Not(E)
	MAT  READ #7,R7,24;RCN$;
Else
	Let RCN$=" ",RCN$
Endif
RETURN 




CALL_REBATES: Rem                  find the right rebate
LET RCUSTCODE=CUSTCODE                     
IF LPPPCUST<>0 ! IF PRICE MASTER USE THAT     
	LET RCUSTCODE=LPPPCUST                   
ENDIF                                      
rebate_loop: ! for price master - check price master cust 1st then order cust
Mat REBATE_ARGS = Zer
REBATE_ARGS[1,0] = 4
REBATE_ARGS[2,0] = 5
REBATE_ARGS[3,0] = 14
REBATE_ARGS[4,0] = 7
REBATE_ARGS[5,0] = 8
REBATE_ARGS[1,1] = L4[0]
REBATE_ARGS[2,1] = R5
REBATE_ARGS[1,2] = H4[2]
rebate_args[2,2]=rcustcode  ! REBATE_ARGS[2,2] = H0[4]
REBATE_ARGS[3,2] = 0
REBATE_ARGS[4,2] = H0[8] ! was H0[9]
REBATE_ARGS[5,2] = PTYPE
!If Tim(4) = 102406 If Spc(6) = 48 Stop 
!Call "rebates",REBATE_ARGS[],A$[140,151],STATUS
!If Tim(4) = 102406 If Spc(6) = 48 Stop 
j1$=""
call rebates(e$,REBATE_ARGS[],A$[140,151],STATUS,0,j1$,rstr$)
if status<>0 and lpppcust<>0 ! could not find a rebate and using pricemaster
    if rcustcode=lpppcust and lpppcust<>custcode !                          
        let rcustcode=custcode                                              
        goto rebate_loop: ! try with ordering customer                      
    endif                                                                   
endif                                                                       
If Not(STATUS) ! we found a rebate
  R8 = REBATE_ARGS[5,1]
  R7 = REBATE_ARGS[4,1]
  Mat Read #7,R7,0;RCN3;
  Mat Read #7,R7,24;RCN$;
  MAT  READ #7,R7,94;vendcnt$;
  If RCN3[0] >= SCNTRCT And RCN3[0] <= ECNTRCT ! range of rebate contracts
    Gosub L_8500 ! insert sortkey
  End If 
End If 
Rem
Goto L_8165
!
Rem
Rem
CONVERT_RCN3DATES: Rem "Conver to Julian
X2 = RCN3[1] \ Gosub YMD2JUL \ X2 = 0
JDATE[1] = X2
X2 = RCN3[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[2] = X2
Return 
!
L_8280:  ! search on price rebate type
! not used new version w/call rebates - used by acme?
let costpass=0
K7$ = " ",K7$;K7$[1,6] = PTYPE Using "PT### "
F$ = " ",F$;F$[1,6] = K7$[1,6]
L_8285: Search #7,3,2;K7$,R7,E \ If E > 2 Gosub ERR_SEARCH
If E And Not(FOUND) Goto CALL_REBATES
If E Goto L_8165
If K7$[1,6] <> F$[1,6] Goto CALL_REBATES
if custom_customer$="CUSTOM_ACME" ! acme's
	IF E OR K7$[1,6]<>F$[1,6]
		IF LOW_REBATE_COST 
			GOSUB INSERT_SORT:
		else
			if w2[3]<>orig_vendor
				let w2[3]=orig_vendor
				LET K7$=" ",K7$;K7$[1,6]=H0[4] USING "######"
				goto A_8235:
			end if
		end if
		GOTO L_8165:
	ENDIF 
Endif
Mat Read #7,R7,0;RCN3;
Mat Read #7,R7,24;RCN$;
MAT  READ #7,R7,94;vendcnt$;
If RCN3[3] <> W2[3] Goto L_8285
Gosub CONVERT_RCN3DATES
If RCN3[1] If JIDATE < JDATE[1] Goto L_8285
If RCN3[2] If JIDATE > JDATE[2] Goto L_8285
If SCNTRCT And SCNTRCT > RCN3[0] Goto L_8285
If ECNTRCT And ECNTRCT < RCN3[0] Goto L_8285
Gosub L_8600 ! find details
If Not(FOUND) Goto L_8285
Gosub L_8500 ! insert sortkey
if custom_customer$="CUSTOM_ACME"
	IF LOW_REBATE_COST GOSUB INSERT_SORT:
Endif
If L1$[14,16] = "KIT" Goto NEXT_KIT Else Goto L_8165
! above is legacy code not used with call rebates?!

!----- start --- rem to match classic mode -----------
!L_8400: ! COST PASS (used when printing contract
!K7$ = " ",K7$
!let costpass=0
!let rcustcode=h0[4]
!IF LPPPCUST<>0 LET RCUSTCODE=LPPPCUST 
!setrebkey: ! set rebate key
!LET K7$=" ",K7$;K7$[1,6]=rcustcode USING "######"
!K7$[1,6] = H0[4] Using "######"
!L_8405: Search #7,3,2;K7$,R7,E \ If E > 2 Gosub ERR_SEARCH
!IF E
!	if costpass=0 and h0[4]<>rcustcode
!		let rcustcode=h0[4]
!		let costpass=99
!		goto setrebkey:
!	else
!		GOTO L_8445:
!	endif
!endif
!X2 = K7$[1,6] !\ If X2 <> H0[4] Goto L_8445
!IF X2<>RCUSTCODE
!	if costpass=0 and h0[4]<>rcustcode
!		let rcustcode=h0[4]
!		let costpass=99
!		goto setrebkey:
!	else
!		GOTO L_8445:
!	endif
!endif
!----- end --- rem to match classic mode -----------
!------ start --- code that matches classic -------
L_8400: ! get contract
let cust=h0[4]
gosub l_8850: ! need to re-read may not have read at this point
let vendcnt$=" ",vendcnt$
if lpppcust<>0 and lpppcust<>h0[4]
	let k7$=" ",k7$
	let k7$[1,6]=lpppcust using "######"
	let k7$[7,12]=contract using "######"
	search #7,2,2;k7$,r7,e
	if not(e)  
		MAT  READ #7,R7,0;RCN3;       
		MAT  READ #7,R7,24;RCN$       
		MAT  READ #7,R7,94;vendcnt$;  
		return
	endif
endif
LET K7$=" ",K7$;K7$[1,6]=H0[4] USING "######"
let k7$[7,12]=contract using "######"
L_8405: SEARCH #7,2,2;K7$,R7,E \ IF E>2 GOSUB err_search:! was mode 3
IF E GOTO L_8445:
MAT  READ #7,R7,0;RCN3;
MAT  READ #7,R7,24;RCN$
MAT  READ #7,R7,94;vendcnt$;
! !------ start --- lines belowed rem out to match changes in classic mode
!If RCN3[0] <> CONTRACT Goto L_8405
!If RCN3[3] <> W2[3] Goto L_8405
!Gosub CONVERT_RCN3DATES
!If RCN3[1] If JIDATE < JDATE[1] Goto L_8405
!If RCN3[2] If JIDATE > JDATE[2] Goto L_8405
!If RCN3[0] <> CONTRACT Goto L_8405
!------ end--- code that matches classic -------
Return 
!
L_8445: Gosub L_8850
If H6[0] Let PTYPE = H6[0] Else Let PTYPE = C1[7]
K7$ = " ",K7$;K7$[1,6] = PTYPE Using "PT### "
F$ = " ",F$;F$[1,6] = K7$[1,6]
L_8455: Search #7,3,2;K7$,R7,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
If K7$[1,6] <> F$[1,6] Return 
Mat Read #7,R7,0;RCN3;
Mat Read #7,R7,24;RCN$;
MAT  READ #7,R7,94;vendcnt$;
If RCN3[0] <> CONTRACT Goto L_8455
If RCN3[3] <> W2[3] Goto L_8455
Gosub CONVERT_RCN3DATES
If RCN3[1] If JIDATE < JDATE[1] Goto L_8455
If RCN3[2] If JIDATE > JDATE[2] Goto L_8455
If RCN3[0] <> CONTRACT Goto L_8455
Return 
!
L_8500: Rem INSERT SORT KEY
If custom_customer$="ACME"
	GOSUB READ_REBATE_DETAIL:
	GOSUB CALC_REBATE:
Endif
K9$ = " ",K9$
If SORT = 1
  K9$[1,6] = W2[3] Using "######"
  K9$[7,12] = H0[4] Using "######";K9$[13,24] = A$[140,151]
  K9$[25,30] = R8 Using "######";K9$[31,37] = R2 Using "#######"
  K9$[38,44] = R3 Using "#######"
End If 
If SORT = 2
  K9$[1,6] = W2[3] Using "######"
  K9$[7,12] = RCN3[0] Using "######";K9$[13,18] = H0[4] Using "######"
  K9$[19,30] = A$[140,151]
  K9$[31,36] = R8 Using "######";K9$[37,43] = R2 Using "#######"
  K9$[44,50] = R3 Using "#######"
End If 
If SORT = 3
  K9$[1,6] = W2[3] Using "######"
  K9$[7,18] = A$[140,151]
  K9$[19,24] = H0[4] Using "######";K9$[25,30] = RCN3[0] Using "######"
  K9$[31,36] = R8 Using "######";K9$[37,43] = R2 Using "#######"
  K9$[44,50] = R3 Using "#######"
End If 
If SORT = 4
  K9$[1,6] = W2[3] Using "######"
  K9$[7,12] = RCN3[0] Using "######";K9$[13,24] = A$[140,151]
  K9$[25,30] = H0[4] Using "######"
  K9$[31,36] = R8 Using "######";K9$[37,43] = R2 Using "#######"
  K9$[44,50] = R3 Using "#######"
End If 
If L1$[14,16] = "KIT"
  K9$[51,56] = R4 Using "######"
  K9$[57,62] = R18 Using "######"
End If 
Search #9,4,1;K9$,R3,E \ If E > 1 Gosub ERR_SEARCH
! If E Let e$ = "syserrorfile 461 sortfile mode (m)=4 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",K9$ \error 10000
!Return 
if custom_customer$="ACME"
	IF REBATE_COST<LOW_REBATE_COST OR (HOLDK9$="" AND LOW_REBATE_COST=0)
		LET HOLDK9$=" ",HOLDK9$;HOLDK9$=K9$;LOW_REBATE_COST=REBATE_COST
	ENDIF
Endif
RETURN 

INSERT_SORT: REM"cct161722 custom for acme
LET K9$=" ",K9$;K9$=HOLDK9$
IF SORT=1
	LET R3=HOLDK9$[38,44]
ELSE 
	LET R3=HOLDK9$[44,50]
ENDIF 
SEARCH #9,4,1;K9$,R3,E \ IF E>1 GOSUB ERR_SEARCH:
RETURN 
!
L_8600: Rem FIND DETAL
K8$ = " ",K8$;K8$[1,6] = RCN3[0] Using "######";K8$[7,18] = A$[140,151]
K8$[19] = ""
Search #8,2,1;K8$,R8,E !!\ If E > 1 Gosub ERR_SEARCH
If E Goto L_8630
Gosub L_8680
If FOUND Return 
!
L_8630: LET K8$=" ",K8$;K8$[1,6]=RCN3[0] USING "######";K8$[7,7]="-"
LET K8$[8,18]=A$[116,126]    !COST GROUP
LET K8$[19]=""
SEARCH #8,2,1;K8$,R8,E \ IF E>1 GOSUB err_search:
IF E GOTO L_8640:
GOSUB L_8680:
IF FOUND RETURN
!
L_8640: LET K8$=" ",K8$;K8$[1,6]=RCN3[0] USING "######";K8$[7,7]="*"
K8$[8,11] = A$[152,155]
K8$[19] = ""
Search #8,2,1;K8$,R8,E !!\ If E > 1 Gosub ERR_SEARCH
If E Goto L_8655
Gosub L_8680
If FOUND Return 
L_8655: K8$ = " ",K8$;K8$[1,6] = RCN3[0] Using "######";K8$[7,7] = "#"
K8$[19] = ""
Search #8,2,1;K8$,R8,E !!\ If E > 1 Gosub ERR_SEARCH
If E Return 
Gosub L_8680
Return 
!
L_8680: Rem CHECK DETAIL
Gosub READ_REBATE_DETAIL
X2 = RB1[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[1] = X2
X2 = RB1[4] \ Gosub YMD2JUL \ X2 = 0
JDATE[2] = X2
If RB1[2] If JIDATE < JDATE[1] Return 
If RB1[4] If JIDATE > JDATE[2] Return 
If RBWH If RBWH <> H4[2] Return 
FOUND = 99
Return 
!
GET_PROD: Rem FIND PROD
K4$ = " ",K4$;K4$ = KL$[13,24]
Search #4,2,1;K4$,R4,E \ If E>1 Gosub ERR_SEARCH
if Not(E) ! allow for se 1?
Mat Read #4,R4,0;A$;
Mat Read #4,R4,156;B;
else
	a$=" ",a$;a$[9]="PRODUCT NOT FOUND"
	clear b[]
Endif
Return 
!
L_8800: Rem FIND PROD WHSE
K5$ = " ",K5$;K5$[1,12] = A$[140,151];K5$[13,14] = H4[2] Using "##"
For X2 = 14 To 24 \ W3[X2] = 0 \ Next X2 \ W3[3] = 0
Search #5,2,1;K5$,R5,E !!\ If E > 1 Gosub ERR_SEARCH
If E Goto L_8842
Mat Read #5,R5,38;W2;
Mat Read #5,R5,78;W3;
mat read #5,r5,800;whmisc;
if p61$[125,125]="Y" let W2[3]=B[24] ! always Prod vend
L_8842: If P9$[32,32] = "Y" Gosub L_69000
Return 
!
L_8850: Rem CUSTOMER
K10$ = " ",K10$;K10$[1,6] = CUST Using "######"
Search #10,2,1;K10$,R10,E \ If E>1 Gosub ERR_SEARCH
if not(E) ! allow for se 1
Mat Read #10,R10,0;A1$;
Mat Read #10,R10,348;ZIP$;
Mat Read #10,R10,142;C1;
Mat Read #10,R10,420;U1;
MAT  READ #10,R10,724;LPPPCUST; 
Else
	a1$=" ",a1$;a1$[31]="CUSTOMER NOT FOUND"
	zip$=" ",zip$
	clear c1[]
	u1=0
	lpppcust=0
endif
! If P60$[33,33]<>"Y" Let LPPPCust=0
if p61$[100,100]<>"Y" let LPPPCust=0
If LPPPCust<1 Or LPPPCust>999999 or Fra(LPPPCust) Let LPPPCust=0 ! invalid code
If a1$[138,138]="Y" Let LPPPCust=0 ! auth buy list
If LPPPCust=C1[1] Let LPPPCust=0 ! "only for diff
Return 
!
CHK_FOR_INVCOSTREC: REM " use po cost from invcost record if found for line
if not(invcostf) or ch_invcost=0 Return ! no file
LET K_INVCOST$=" ",K_INVCOST$!
LET K_INVCOST$[1,10]=INVNO USING "##########"
LET K_INVCOST$[11,13]=L3[2] USING "###"
LET CHK_INVCOST$=" ",CHK_INVCOST$
LET CHK_INVCOST$=K_INVCOST$[1,13]
SEARCH #CH_INVCOST,3,1;K_INVCOST$,REC_INVCOST,E
IF E OR K_INVCOST$[1,13]<>CHK_INVCOST$[1,13] !  " no invcost record found
	LET INVCOST_REC_FOUND=0
	GOTO END_CHK_FOR_INVCOSTREC:

ENDIF 
MAT  READ #CH_INVCOST,REC_INVCOST,0;INVCST$
MAT  READ #CH_INVCOST,REC_INVCOST,22;INVCST
IF INVCST$[1,12]=L1$[1,12] ! " same product #
	IF INVNO=INVCST[8] ! " same invoice #
		!LET COST=INVCST[3]
		If M1[17] = 1 Let COST = INVCST[0] ! load
		  If M1[17] = 2 Let COST = INVCST[1] ! load2
		  If M1[17] = 3 Let COST = INVCST[2] ! avg
		  If M1[17] = 4 Let COST = INVCST[3] ! PO
		  If M1[17] = 5 Let COST = INVCST[5] ! base
		  if m1[17]=6 let cost=INVCST[4] ! net po
		  if not(cost) let cost=INVCST[3]
		  if cost
		  rem if a cost was found set the flag otherwise use prod/prodwhse file
			LET INVCOST_REC_FOUND=1
			else
		  INVCOST_REC_FOUND=0
		endif 
	ENDIF 
ENDIF 
END_CHK_FOR_INVCOSTREC: REM
RETURN 
! - BUILD_SORT_FILE: Rem -------create indexed sort file for various functions
! - F$ = Spc(6) Using "6/SORTWORK&&&!"
! - FILE$ = "[1:050] ",F$
! - BUILD_LOOP: Rem
! - E = 0 \ If Err 0 Let E = Spc(8)
! - Build #9,FILE$
! - If E = 40 Close #9 \ Goto BUILD_LOOP
!!If E Gosub ERR_SEARCH
! - If Err 0 Gosub ERR_TRAP
! - R[9] = 50 \ Search #9,0,1;F$,R[9],E !!\ If E Gosub ERR_SEARCH
! - R[9] = 1 \ Search #9,0,0;F$,R[9],E !!\ If E Gosub ERR_SEARCH
! - R[9] = 0 \ Search #9,1,0;F$,R[9],E!!! \ If E Gosub ERR_SEARCH
! - END_BUILD_SORT_FILE: Rem
! - Return 
!
CLEAR_SORT_FILE: Rem clear out sort file
K9$ = " ",K9$
Search #9,3,1;K9$,V1,E \ If E > 2 Gosub ERR_SEARCH
If Not(E)
  Search #9,5,1;K9$,V1,E \ If E Gosub ERR_SEARCH
  !If E Let e$ = "syserrorfile 461 sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K9$ \error 10000
  Goto CLEAR_SORT_FILE
End If 
END_CLEAR_SORT_FILE: Rem
Return 
!
L_9100: Rem
Gosub L_4360
If PRSSUM Gosub PRINT_SSUM
If Not(FINAL) Goto L_9160
If Not(ARCODE) Goto L_9160
If WHSE <> 0 Goto L_9160
If DIV <> 0 Goto L_9160
If J8 Goto L_9160
!If Err 0 Rem
!Close #0
!If Err 0 Gosub ERR_TRAP
Gosub L_6500 ! update rebatedtl last buy date
L_9160: 
Goto OUTEND
!
GET_CC: Rem-------------------------------------custcont record
CC$ = " ",CC$
CC$[1] = RB1[0] Using "######"
CC$[7] = CUST Using "######"
Search #CH_CC,2,1;CC$,REC_CC,E
!!If E > 2 Gosub ERR_SEARCH
If E
  For SCR = 0 To 4
    CC1[SCR] = 0
  Next SCR
  CCREF$ = " ",CCREF$
Else 
  Mat Read #CH_CC,REC_CC,0;CC1;
  Mat Read #CH_CC,REC_CC,20;CCREF$;
End If 
Return 
!
OPEN_SSUM: Rem "======== create indexed sort file for various functions
! - F$ = Spc(6) Using "6/SORTWORKA&&&!"
F$="6/SORTWORKA",UserID
SCRATCH$ = "[1:3] ",F$
Build #CH_SSUM,SCRATCH$
R[9] = 25 \ Search #CH_SSUM,0,1;F$,R[9],E \ If E Gosub ERR_SEARCH
!if E let e$="Can't build '",F$,"'!" \ error 10000
R[9] = 1 \ Search #CH_SSUM,0,0;F$,R[9],E \ If E Gosub ERR_SEARCH
!if E let e$="Can't build '",F$,"'!" \ error 10000
R[9] = 0 \ Search #CH_SSUM,1,0;F$,R[9],E \ If E Gosub ERR_SEARCH
!if E let e$="Can't build '",F$,"'!" \ error 10000
Return 
!
ACCUM_SSUM: Rem ---------------------------------------------------
SCRATCH$ = " ",SCRATCH$
SCRATCH$ = H0[11] Using "###"
SCRATCH$[4] = H0[4] Using "######"
Search #CH_SSUM,2,1;SCRATCH$,SCR,E \ If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_SSUM,SCR;SSUM;
  SSUM = SSUM + EXT_REBATE
Else 
  SSUM = EXT_REBATE
  E = 2 \ Search #CH_SSUM,1,0;SCRATCH$,SCR,E \ If E Gosub ERR_SEARCH
  Search #CH_SSUM,4,1;SCRATCH$,SCR,E \ If E Gosub ERR_SEARCH
  ! If E Let e$ = "syserrorfile 461 sortfilea mode (m)=4 keyno (k)=1 r=",SCR," e=",e," keyval (k$)=",SCRATCH$ \error 10000
End If 
Mat Write #CH_SSUM,SCR;SSUM;
Return 
!
PRINT_SSUM: Rem -------------------------------slsm summary
BAIL = 1;LINE_COUNT = PAGE_LEN
SCRATCH$ = " ",SCRATCH$;PREVSLSM$ = ""
PRSSUM_LOOP: Rem
Search #CH_SSUM,3,1;SCRATCH$,SCR,E !!\ If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_SSUM,SCR;SSUM;
  If SCRATCH$[1,3] <> PREVSLSM$ And LINE_COUNT + 4 >= PAGE_LEN Let LINE_COUNT = PAGE_LEN
  Gosub HEADING
  If LINE_COUNT = 10
    Print #0; Tab (25);"*** SALESMAN TOTALS ***"
    Print #0;""
    !Print #0; Tab (10);"SALESMAN                  CUSTOMER";
	if prntcustn
	  	PRINT #0; TAB(10);"SALESMAN                  CUSTOMER";
	else
		print #0; tab(10);"SALESMAN";
	ENDIF
    Print #0; Tab (80);"REBATE AMOUNT"
    Print #0; Tab (10);"------------------------";
    Print #0;" ------------------------------------";
    Print #0; Tab (80);"--------------"
	line_count=line_count+4 ! 1
  End If 
  If SCRATCH$[1,3] <> PREVSLSM$
    If PREVSLSM$ <> "" Gosub PRINT_SLSMTOT
    Gosub GET_SLSM
    Print #0; Tab (10);SCRATCH$[1,3];" ";SLSM1$[1,20];" ";
  End If 
  CUST = SCRATCH$[4]
  Gosub L_8850
  if prntcustn
	Print #0; Tab (37);SCRATCH$[4];" ";A1$[31,60];
	Print #0; Using "###,###,###.##"; Tab (80);SSUM
  Else
	Print #0;" "
  Endif
  line_count=line_count+1
  SLSMTOT = SLSMTOT + SSUM
  PREVSLSM$ = SCRATCH$[1,3]
  Goto PRSSUM_LOOP
End If 
Gosub PRINT_SLSMTOT
Return 
!
PRINT_SLSMTOT: Rem--------------------------------------------
Print #0; Tab (80);"--------------"
Print #0; Tab (10);"SLSM ";PREVSLSM$;" TOTAL:";
Print #0; Using "###,###,###.##"; Tab (80);SLSMTOT
Print #0;""
LINE_COUNT = LINE_COUNT + 3
SLSMTOT = 0
Return 
!
GET_SLSM: Rem
F$ = " ",F$
F$ = SCRATCH$[1,3]
Search #CH_SLSM,2,1;F$,REC_SLSM,E
If E
  SLSM1$[1,30] = "NOT FOUND"
Else 
  Mat Read #CH_SLSM,REC_SLSM,0;SLSM1$
End If 
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
For X1 = 0 To 6
  If PFU1[X1] = RBUM[0]
    PFU1[7] = RBUM[0]
    If X1 = 0
      PFU2[6] = 1
    Else 
      PFU2[6] = PFU2[X1 - 1]
    End If 
    Goto DONE_CHECK
  End If 
Next X1
DONE_CHECK: A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0
PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[15] = CTWT
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0
For X1 = 1 To 7
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 

Get_Rebate_Hdr: ! "need header Info
Let RCN$=" ",RCN$;K7$=" ",K7$
Let K7$=RB1[0] Using "######"
Search #7,2,1;k7$,R7,E \ If E>1 Gosub Err_Search:
If Not(E)
  Mat Read #7,r7,24;rcn$;
Endif
Return

!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
  if p61$[125,125]="Y" let W2[3]=B[24] ! always Prod vend
End If 
Return 
!
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
CALC_REBATE: REM=====cct161722 custom for acme
GOSUB L_30000:
GOSUB L_6800:
LET INVCOST_REC_FOUND=0
IF NOT(USE2CST) GOSUB CHK_FOR_INVCOSTREC: ! get po cost from hist
IF INVCOST_REC_FOUND GOTO BYPASS_SETCOST:
IF P9$[32,32]="Y"
	IF M1[17]=1 LET COST=W3[17]
	IF M1[17]=2 LET COST=W3[14]
	IF M1[17]=3 LET COST=W3[15]
	IF M1[17]=4 LET COST=W3[16]
	IF M1[17]=5 LET COST=W3[18]
	if m1[17]=6 let cost=whmisc[2]
ENDIF 
IF P9$[32,32]<>"Y" OR COST=0
	IF M1[17]=1 LET COST=B[8]
	IF M1[17]=2 LET COST=PF_LOAD2
	IF M1[17]=3 LET COST=B[21]
	IF M1[17]=4 LET COST=B[10]
	IF M1[17]=5 LET COST=C4[4]
	if m1[17]=6 let cost=prparc[2]
ENDIF 
IF NOT(COST) LET COST=B[10]
BYPASS_SETCOST: REM
LET CNVTA=COST;CNVTU[0]=0;CNVTU[1]=RBUM[0];CNVTU[2]=2
GOSUB L_20000:
LET DISP_COST=AMOUNT
LET DISP_COST=FNR(DISP_COST)
LET EXT_REBATE=0;REBATE_UNIT=0;REBATE_COST=0
IF RB[0]=1
	LET REBATE_UNIT=FNR(DISP_COST*(RB5[0]/100))
	LET REBATE_COST=(DISP_COST-REBATE_UNIT)
	LET EXT_REBATE=FNR(REBATE_UNIT*QTY_SHIP)
ENDIF 
IF RB[0]=2
	LET REBATE_UNIT=RB5[0]
	LET REBATE_COST=(DISP_COST-REBATE_UNIT)
	LET EXT_REBATE=FNR(QTY_SHIP*RB5[0])
ENDIF 
IF RB[0]=3
	IF RB$[1,3]="#  " OR RB1[5]=2 LET AMOUNT=RB5[0] \ GOTO NEXTONE:
	LET CNVTA=RB5[0];CNVTU[0]=0;CNVTU[1]=RBUM[0];CNVTU[2]=2
	GOSUB L_20000:
NEXTONE: LET REBATE_COST=AMOUNT
	LET REBATE_UNIT=DISP_COST-REBATE_COST
	LET EXT_REBATE=FNR(REBATE_UNIT*QTY_SHIP)
ENDIF 
RETURN 
!
! - BAD_RANGE: Rem
! - MSGTXT$ = "Ending value must be Greater than or Equal to starting value!"
! - Call "errmsg",MSGTXT$
! - Return 
!

!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
ERR_SEARCH: Rem
ENUM = E;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+msc$(4)
E$ = msg$
Call programdump("dump/rr461se!","")
Goto ERR_MSG ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$ = E$
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End 
OUTEND: Rem exit
!dx close
If J8 ! dx xml
	if MySQLQueueID and not(reportAborted)
		call FinishMySQLReport(e$,MySQL_ch,MySQLQueueID)
	else
		Call addtostr(e$,rstr$,esdel$) !end section
		Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
	end if
End If 
!

End 
!
!!If J8 Input @0,23;"PRESS <CR> TO EXIT";J$
!!If Err 0 Rem
!!Close #9
!!If Err 0 Gosub ERR_TRAP
!!Chain "MX000C"
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
