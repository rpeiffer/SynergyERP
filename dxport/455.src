! >>> Program 455
!
! description Product Customer MTD/YTD Summary - by Product
!
! loadsave -w -n 100,10 -o prog/dxport/455.dl4 src/455.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  1, 2001  12:24:39
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx455.src (univ2) [kag] {08423}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX455 - PRODUCT/CUSTOMER SALES
Rem AUTHOR: DD   APR  9, 1987
Rem LAST UPDATE: roman 07/03/1991.   units conversion/clean up
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],MONTH_[4],3%,PFU2[6],CNVTA,A[33]
Com MTH$[108]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
dim ProdNo$[12],ProdDesc$[30],ProdDesc2$[30]
Dim 1%,M9,WHSE,F,X1,ARMONTH,BOYMONTH,ch_pw
Dim 2%,C1,D9[5],X2,SLSM
Dim 3%,S2[12,2],H2[12,2],J,X3,T9[20],T8[20],Z1[12,2],Z2[12,2]
dim 3%,PARM[10],WHMISC2[7]
Dim C1$[30],A$[156],P$[12],P9$[50]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8]
Dim K1$[50],K2$[12],K3$[12],Z1$[50],X$[10],T9$[26]
Dim J5$[12],J6$[12],J7$[20],kpw$[50],3%
For J = 2 To 6
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1808","1792","2016","-1","1744"
ch_pw=6
Mat Read #1,0,100;ARDATE$;
Read #1,0,120;M9;
Read #1,3;CNAME$;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,51,74;BOYMONTH;
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 22
!
!!!! dx add xport reporting code
dim tmp$[500]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"455",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!!!! dx add xport reporting code
call dxget("h1",tmp$) \ H1=tmp$ ! warehouse
call dxget("k2",K2$) ! starting product
call dxget("k3",K3$) ! endng product
call dxget("j2",J2$) ! detail or totals (D/T)
!!!! dx end
!
If H1<0 or H1 > D9[5] let e$="Invalid warehouse entered!" \ error 10000
!
if K3$="" let K3$="}",K3$
if K3$<K2$let e$="Invalid ending product, must be > starting product!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

! - L_1000: Rem "========================================= picks
! - Print 'CS';@0,0;"MX455";@30,0;"PRODUCT / CUSTOMER SALES"
! - L_1010: Print @0,5;'CL';"Print  S: MTD/YTD summary or  D: 12 (month) sales detail  E: Exit";
! - Input J2$ \ If J2$ = "E" Goto OUTEND
! - If J2$ = "S" Goto L_1035
! - If J2$ = "D" Chain "MX455B"
! - Goto L_1010
! - L_1035: Print @0,7;'CL';"Print  R: Regular or  C: Sorted by Commodity Code  E: Exit? ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
! - If J2$ = "R" Goto L_1060
! - If J2$ = "C" Chain "MX455A"
! - Goto L_1035
! - L_1060: Print @0,10;'CE';"ENTER WAREHOUSE,   0: FOR ALL ";
! - Input ""K2$
! - H1 = K2$ \ If H1 < 0 Goto L_1060
! - If H1 > D9[5] Goto L_1060
! - If K2$ <> "0" If Not(H1) Goto L_1060
! - L_1110: Print @0,12;"ENTER STARTING PRODUCT, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - Print @6,14;"ENDING   PRODUCT, <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "}}}}}}}}}}}}"
! - If K2$ <= K3$ Goto L_1200
! - Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50
! - Print @0,22;'CL' \ Goto L_1110
! - L_1200: Print @0,16;"PRINT  D: DETAIL OR  T: PRODUCT TOTALS ONLY? ";
! - Input ""J2$
! - If J2$ = "D" Goto L_1450
! - If J2$ <> "T" Goto L_1200
! - L_1450: Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto L_9010
! - If Z1$ = "R" Goto L_1000
! - If Z1$ <> "P" Goto L_1450
! - If Len(K3$) < 12 Let K3$[Len(K3$) + 1] = "            "
!
! *** Process Section
!
if j8 ! dx xml headings
  tmp$="PRODUCT",fdel$,"PRODUCT DESC",fdel$
  If P9$[26,26] = "Y" let tmp$=tmp$,"PRODUCT DESC #2",fdel$
  if J2$="D" ! detail
    tmp$=tmp$,"CUST #",fdel$,"CUST NAME",fdel$
	tmp$=tmp$,"SALESMAN",fdel$,"WHSE",fdel$
  endif
  tmp$=tmp$,"YEAR",fdel$
  tmp$=tmp$,"MTD UNITS",fdel$,"MTD SALES",fdel$
  tmp$=tmp$,"MTD GP",fdel$,"MTD PERCENT",fdel$
  tmp$=tmp$,"YTD UNITS",fdel$,"YTD SALES",fdel$
  tmp$=tmp$,"YTD GP",fdel$,"YTD PERCENT",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
J1 = 90 \ J2 = 0 \ K1$ = K2$
! - If Err 0 Gosub ERR_ESCAPE
Gosub L_5800
L_1530: Search #3,2,1;K1$,R1,E
If Not(E) Goto L_1570
L_1550: Search #3,3,1;K1$,R1,E
If E = 2 Goto L_9100
L_1570: If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #3,R1;A$;
Mat Read #3,R1,256;A;
Mat Read #3,R1,512;PFU1;
Mat Read #3,R1,554;PFU2;
GET_PRODWHSE: REM LOOK UP PROD GROUP
LET Kpw$=" ",Kpw$
if h1
let whs=h1
else
LET WHS=1
endif
LET PARM[2]=1
CHK_WHSE: REM
IF WHS>99 GOTO gotgroup:
LET Kpw$[1,12]=A$[140,151]
LET Kpw$[13,14]=WHS USING "##" 
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E
IF E
	IF WHS=99 GOTO L_1550: !! task 28935   
	if h1=0
		LET WHs=WHS+1 
	else 
		let whs=99
	endif
    GOTO CHK_WHSE:
ENDIF
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;
CHK_PRODGRP: REM 
LET PARM[0]=0     
LET PARM[1]=WHMISC2[0]     
Call ProdGroup(e$,intco,Parm[]) 
gotgroup: !        
IF PARM[2]=0 GOTO L_1550 ! discontinued                                                         
J3$ = " ",J3$ \ J4$ = " ",J4$
J3$ = K1$ \ J4$ = K1$
Gosub L_1800 \ Gosub L_1900
F = 0
If J3$[1,12] <> K1$[1,12] Let F = F + 1
If J4$[1,12] <> K1$[1,12] Let F = F + 1
If F = 2 Goto L_1550
Gosub L_4500
L_1700: Rem FIND WHICH IS FIRST
If J5$[1,2] = "~~" If J6$[1,2] = "~~" Goto L_1550
If J5$ < J6$ Let F = 4
If J5$ > J6$ Let F = 5
If J5$ = J6$ Let F = 6
On F - 3 Goto L_1770,L_1780,L_1790
Goto L_1550
L_1770: Gosub L_2500 \ Gosub L_2000 \ Gosub L_1800 \ Gosub L_1910 \ Goto L_1700
L_1780: Gosub L_3000 \ Gosub L_2000 \ Gosub L_1900 \ Gosub L_1810 \ Goto L_1700
L_1790: Gosub L_2500 \ Gosub L_3000 \ Gosub L_2000 \ Gosub L_1800 \ Gosub L_1900 \ Goto L_1700
Goto L_1530
!
L_1800: Rem "============================ seq read current file
Search #4,3,2;J3$,R4,E
If E = 2 Let J3$ = "~",J3$ \ Goto L_1810
L_1810: For C = 0 To 12
  For R = 0 To 2
    S2[C,R] = 0
  Next R
Next C
J5$ = " ",J5$ \ J5$ = J3$[13,18]
If J3$[1,12] <> K1$[1,12] Let J5$ = "~",J5$
Return 
!
L_1900: Rem "=========================== seq read history file
J4$ = J3$
R5 = R4
L_1910: For C = 0 To 12
  For R = 0 To 2
    H2[C,R] = 0
  Next R
Next C
J6$ = " ",J6$ \ J6$ = J4$[13,18]
If J4$[1,12] <> K1$[1,12] Let J6$ = "~",J6$
Return 
!
L_2000: Rem "================================= process records
If H1 If H1 <> WHSE Return 
Gosub L_3500
T9 = S2[M9,1] - S2[M9,2] \ T9[1] = S2[0,1] - S2[0,2]
T9[6] = H2[M9,1] - H2[M9,2] \ T9[10] = H2[0,1] - H2[0,2]
Gosub L_5800
Gosub L_5000
Gosub L_2200
Return 
!
L_2200: Rem "============================== totals
T9[2] = T9[2] + 1 \ T8[2] = T8[2] + 1
T9[3] = T9[3] + S2[M9,0] \ T8[3] = T8[3] + S2[M9,0]
T9[4] = T9[4] + S2[M9,1] \ T8[4] = T8[4] + S2[M9,1]
T9[5] = T9[5] + T9 \ T8[5] = T8[5] + T9
T9[7] = T9[7] + S2[0,0] \ T8[7] = T8[7] + S2[0,0]
T9[8] = T9[8] + S2[0,1] \ T8[8] = T8[8] + S2[0,1]
T9[9] = T9[9] + T9[1] \ T8[9] = T8[9] + T9[1]
T9[12] = T9[12] + 1 \ T8[12] = T8[12] + 1
T9[13] = T9[13] + H2[M9,0] \ T8[13] = T8[13] + H2[M9,0]
T9[14] = T9[14] + H2[M9,1] \ T8[14] = T8[14] + H2[M9,1]
T9[15] = T9[15] + T9[6] \ T8[15] = T8[15] + T9[6]
T9[17] = T9[17] + H2[0,0] \ T8[17] = T8[17] + H2[0,0]
T9[18] = T9[18] + H2[0,1] \ T8[18] = T8[18] + H2[0,1]
T9[19] = T9[19] + T9[10] \ T8[19] = T8[19] + T9[10]
Return 
!
L_2500: Rem "=================================== read salescurr
Mat Read #4,R4,0;P$;
Mat Read #4,R4,12;C1;
Mat Read #4,R4,16;S2;
Read #4,R4,254;WHSE;
Gosub L_7000
Return 
!
L_3000: Rem "=================================== read saleshist
Mat Read #4,R5,0;P$;
Mat Read #4,R5,12;C1;
Mat Read #4,R5,256;H2;
Read #4,R5,254;WHSE;
Gosub L_7040
Return 
!
L_3500: Rem "======================================= read customer
J7$ = " ",J7$ \ J7$ = C1 Using "######"
SLSM = 0
Search #2,2,1;J7$,R2,E
If E = 1 Let C1$[1,30] = "** ERROR ** CUSTOMER NOT FOUND" \ Goto L_3580
Mat Read #2,R2,30;C1$;
Read #2,R2,150;SLSM;
L_3580: Return 
!
L_4000: Rem "======================================== grand totals
if J8 return ! dx xml
!
J1 = J1 + 3 \ Gosub L_5800
Print #0;"\15\ TOTALS";
Print #0; Using "--------#"; Tab 43;T9[3];
Print #0; Using "--------#.##"; Tab 53;T9[4];
Print #0; Using "--------#.##"; Tab 66;T9[5];
T1 = 0 \ If T9[4] Let T1 = FNR(T9[5] / T9[4] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T9[7];
Print #0; Using "--------#.##"; Tab 97;T9[8];
Print #0; Using "--------#.##"; Tab 110;T9[9];
T1 = 0 \ If T9[8] Let T1 = FNR(T9[9] / T9[8] * 100)
Print #0; Using "----.##"; Tab 123;T1;
Print #0;"\15\ LAST YEAR TOTALS";
Print #0; Using "--------#"; Tab 43;T9[13];
Print #0; Using "--------#.##"; Tab 53;T9[14];
Print #0; Using "--------#.##"; Tab 66;T9[15];
T1 = 0 \ If T9[14] Let T1 = FNR(T9[15] / T9[14] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T9[17];
Print #0; Using "--------#.##"; Tab 97;T9[18];
Print #0; Using "--------#.##"; Tab 110;T9[19];
T1 = 0 \ If T9[18] Let T1 = FNR(T9[19] / T9[18] * 100)
Print #0; Using "----.##"; Tab 123;T1;
Return 
!
L_4500: Rem "======================================= product totals
if J8 if J2$="D" return ! dx xml
!
If Not(T8[2]) Goto L_4740
!
if J8 
  tmp$=ProdNo$,fdel$,ProdDesc$,fdel$
  If P9$[26,26] = "Y" let tmp$=tmp$,ProdDesc2$,fdel$
  tmp$=tmp$,"THIS",fdel$
  tmp$=tmp$,T8[3] Using "------#.##",fdel$
  tmp$=tmp$,T8[4] Using "--------#.##",fdel$
  tmp$=tmp$,T8[5] Using "--------#.##",fdel$
  T1 = 0 \ If T8[4] Let T1 = FNR(T8[5] * 100 / T8[4])
  tmp$=tmp$,T1 Using "----.##",fdel$
  tmp$=tmp$,T8[7] Using "-------#.##",fdel$
  tmp$=tmp$,T8[8] Using "--------#.##",fdel$
  tmp$=tmp$,T8[9] Using "--------#.##",fdel$
  T1 = 0 \ If T8[8] Let T1 = FNR(T8[9] * 100 / T8[8])
  tmp$=tmp$,T1 Using "----.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  tmp$=ProdNo$,fdel$,ProdDesc$,fdel$
  If P9$[26,26] = "Y" let tmp$=tmp$,ProdDesc2$,fdel$
  tmp$=tmp$,"LAST",fdel$
  tmp$=tmp$,T8[13] Using "------#.##",fdel$
  tmp$=tmp$,T8[14] Using "--------#.##",fdel$
  tmp$=tmp$,T8[15] Using "--------#.##",fdel$
  T1 = 0 \ If T8[14] Let T1 = FNR(T8[15] * 100 / T8[14])
  tmp$=tmp$,T1 Using "----.##",fdel$
  tmp$=tmp$,T8[17] Using "-------#.##",fdel$
  tmp$=tmp$,T8[18] Using "--------#.##",fdel$
  tmp$=tmp$,T8[19] Using "--------#.##",fdel$
  T1 = 0 \ If T8[18] Let T1 = FNR(T8[19] * 100 / T8[18])
  tmp$=tmp$,T1 Using "----.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  goto L_4740 ! clear totals
endif
!
J1 = J1 + 4 \ Gosub L_5800
Print #0;"\15\ PRODUCT TOTALS";
Print #0; Using "--------#"; Tab 43;T8[3];
Print #0; Using "--------#.##"; Tab 53;T8[4];
Print #0; Using "--------#.##"; Tab 66;T8[5];
T1 = 0 \ If T8[4] Let T1 = FNR(T8[5] / T8[4] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T8[7];
Print #0; Using "--------#.##"; Tab 97;T8[8];
Print #0; Using "--------#.##"; Tab 110;T8[9];
T1 = 0 \ If T8[8] Let T1 = FNR(T8[9] / T8[8] * 100)
Print #0; Using "----.##"; Tab 123;T1;
Print #0;"\15\ LAST YEAR TOTALS";
Print #0; Using "--------#"; Tab 43;T8[13];
Print #0; Using "--------#.##"; Tab 53;T8[14];
Print #0; Using "--------#.##"; Tab 66;T8[15];
T1 = 0 \ If T8[14] Let T1 = FNR(T8[15] / T8[14] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T8[17];
Print #0; Using "--------#.##"; Tab 97;T8[18];
Print #0; Using "--------#.##"; Tab 110;T8[19];
T1 = 0 \ If T8[18] Let T1 = FNR(T8[19] / T8[18] * 100)
Print #0; Using "----.##"; Tab 123;T1
Print #0;" "
L_4740: Rem
For I = 0 To 20 \ T8[I] = 0 \ Next I
Return 
!
L_5000: Rem "===================================== print line
if J8 
  ProdNo$=A$[140,151] \ ProdDesc$=rtrim$(A$[9,38]) ! customer for xml total
  If P9$[26,26] = "Y" let ProdDesc2$=rtrim$(A$[63,92])
  if J2$="T" return ! dx xml, totals only
  !
  tmp$=ProdNo$,fdel$,ProdDesc$,fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,ProdDesc2$,fdel$
  tmp$=tmp$,C1 using "######",fdel$,rtrim$(C1$[1,30]),fdel$
  tmp$=tmp$,SLSM using "###",fdel$,whse using "###",fdel$
  tmp$=tmp$,"THIS",fdel$
  tmp$=tmp$,S2[M9,0] Using "------#.##",fdel$
  tmp$=tmp$,S2[M9,1] Using "--------#.##",fdel$
  tmp$=tmp$,T9 Using "--------#.##",fdel$
  T1 = 0 \ If S2[M9,1] Let T1 = FNR(T9 * 100 / S2[M9,1])
  tmp$=tmp$,T1 Using "----.##",fdel$
  tmp$=tmp$,S2[0,0] Using "------#.##",fdel$
  tmp$=tmp$,S2[0,1] Using "--------#.##",fdel$
  tmp$=tmp$,T9[1] Using "--------#.##",fdel$
  T1 = 0 \ If S2[0,1] Let T1 = FNR(T9[1] * 100 / S2[0,1])
  tmp$=tmp$,T1 Using "----.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  tmp$=ProdNo$,fdel$,ProdDesc$,fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,ProdDesc2$,fdel$
  tmp$=tmp$,C1 using "######",fdel$,rtrim$(C1$[1,30]),fdel$
  tmp$=tmp$,SLSM using "###",fdel$,whse using "###",fdel$
  tmp$=tmp$,"LAST",fdel$
  tmp$=tmp$,H2[M9,0] Using "------#.##",fdel$
  tmp$=tmp$,H2[M9,1] Using "--------#.##",fdel$
  tmp$=tmp$,T9[6] Using "--------#.##",fdel$
  T1 = 0 \ If H2[M9,1] Let T1 = FNR(T9[6] * 100 / H2[M9,1])
  tmp$=tmp$,T1 Using "----.##",fdel$
  tmp$=tmp$,H2[0,0] Using "------#.##",fdel$
  tmp$=tmp$,H2[0,1] Using "--------#.##",fdel$
  tmp$=tmp$,T9[10] Using "--------#.##",fdel$
  T1 = 0 \ If H2[0,1] Let T1 = FNR(T9[10] * 100 / H2[0,1])
  tmp$=tmp$,T1 Using "----.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
If Not(T8[2]) Print #0;"PRODUCT: ";A$[140,151];"DESCRIPTION: ";A$[9,38];
If Not(T8[2]) If P9$[26,26] = "Y" Print #0;"   ";A$[63,92];
If Not(T8[2]) If J2$ = "D" Print #0;" " \ J1 = J1 + 2
If J2$ = "T" Return 
J1 = J1 + 3 \ Gosub L_5800
Print #0; Using "######"; Tab 2;C1;
Print #0; Tab 13;C1$[1,30];
Print #0; Using "--------#"; Tab 43;S2[M9,0];
Print #0; Using "--------#.##"; Tab 53;S2[M9,1];
Print #0; Using "--------#.##"; Tab 66;T9;
T1 = 0 \ If S2[M9,1] Let T1 = FNR(T9 / S2[M9,1] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;S2[0,0];
Print #0; Using "--------#.##"; Tab 97;S2[0,1];
Print #0; Using "--------#.##"; Tab 110;T9[1];
T1 = 0 \ If S2[0,1] Let T1 = FNR(T9[1] / S2[0,1] * 100)
Print #0; Using "----.##"; Tab 123;T1
Print #0; Using "####"; Tab 13;"SALESMAN: ";SLSM;
Print #0; Using "###"; Tab 37;WHSE;
Print #0; Using "--------#"; Tab 43;H2[M9,0];
Print #0; Using "--------#.##"; Tab 53;H2[M9,1];
Print #0; Using "--------#.##"; Tab 66;T9[6];
T1 = 0 \ If H2[M9,1] Let T1 = FNR(T9[6] / H2[M9,1] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;H2[0,0];
Print #0; Using "--------#.##"; Tab 97;H2[0,1];
Print #0; Using "--------#.##"; Tab 110;T9[10];
T1 = 0 \ If H2[0,1] Let T1 = FNR(T9[10] / H2[0,1] * 100)
Print #0; Using "----.##"; Tab 123;T1
Print #0;" "
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
If J1 < J9 Return 
If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 455 - ";T9$;
Print #0; Tab 44;"P R O D U C T / C U S T O M E R   S A L E S"
Print #0;"\15\";
Print #0; Tab 47;"---------------- M T D ----------------";
Print #0; Tab 91;"---------------- Y T D ----------------"
Print #0; Tab 2;"CUST #";
Print #0; Tab 13;"CUSTOMER NAME"; Tab 36;"WHSE";
Print #0; Tab 47;"UNITS";
Print #0; Tab 53;"DOLLAR SALES";
Print #0; Tab 68;"GR. PROFIT";
Print #0; Tab 79;"PERCENT";
Print #0; Tab 91;"UNITS";
Print #0; Tab 97;"DOLLAR SALES";
Print #0; Tab 112;"GR. PROFIT";
Print #0; Tab 123;"PERCENT"
Print #0;" "
Return 
!
L_7000: Rem CONVERT UNITS
If Not(PFU1[9]) Return 
For I = 0 To 12
  X3 = S2[I,0] \ Gosub L_10000
  S2[I,0] = AMOUNT
Next I
Return 
!
L_7040: If Not(PFU1[9]) Return 
For I = 0 To 12
  X3 = H2[I,0] \ Gosub L_10000
  H2[I,0] = AMOUNT
Next I
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH
For I = 0 To 12
  For X6 = 0 To 2
    If I Let S2[I,X6] = Int(Z1[X7,X6] + .5) Else Let S2[0,X6] = Int(Z1[0,X6] + .5)
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_8100: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH \ X8 = 0
For I = 0 To 12
  For X6 = 0 To 2
    If Not(I) Let H2[0,X6] = Int(Z2[0,X6] + .5) \ Goto L_8160
    If Not(X8) Let H2[I,X6] = Int(Z2[X7,X6] + .5) Else Let H2[I,X6] = Int(Z1[X7,X6] + .5)
L_8160: Next X6
  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
try call dxclose() else rem
end
!
! - L_9010: Print 'CS'
! - Chain "MX000C"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[9]
CNVTU[2] = 1
CNVTA = X3
Gosub L_20000
X3 = AMOUNT
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
