! >>> Program 669
!
! description Inventory Class Analysis by Warehouse
!
! loadsave -w -n 100,10 -o prog/dxport/669.dl4 src/669.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 18, 2003  15:02:56
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/mx/mx669.src (univ2) [jcs] {35660}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX669 - INVENTORY CLASS ANALYSIS REPORT
Rem 09/21/96
Rem Last Update: jlp 10/11/96 - line 2036, assign whse based on key
! ------------------------------------------------------------------------------
! 01/11/12  vst task10448 - copied 'r2002' source; added "custom_customer$" code
!                   Added HTBERRY custom code for the following:      
! 12/23/09 jliu cct237329 - add the product turns
! -----------------------------------------------------------------------------
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
Declare External Function OpenMySQLBrowserOutput,GetMySQLReportHeader
Declare External Sub AddMySQLReportColumnHeadings
Declare External Function AddMySQLReportData
Declare External Sub FinishMySQLReport


!
Declare Intrinsic Sub FindF,InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,MONTH_[4]
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
Com MTH$[108]
! - C2 = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNA(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) * .1)
! - Window On 
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim VendorName$[30],CommDesc$[16]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim 1%,MySQL_ch,reportAborted
Dim 3%,MySQLQueueID

Dim U5$[20],SUNIT$[4],CUNIT$[4],UNIT$[10],MSG$[256]
Dim P1$[156],D$[35],P9$[50],RETVAL$[512],Z2$[1]
Dim 1%,Y7,Y8,Y9,F,X1,P1[1],PGBRK,FTIME,PSUTOT,WHLM[1],LM[1],TABS
Dim 1%,whprd1[1],PRD1[4],MTBl
Dim 2%,B1[24],A3,X2,C4[8]
Dim 3%,A1[33],A2[7],COST,UnitType,CUNIT,J,X3,T9[20],P3[3],W3[24],W5[12]
Dim J$[75],CNAME$[30],J2$[20],J3$[40],J4$[75],J5$[75],ARDATE$[8],S$[18]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],Z1$[50],K5$[60],COST$[4]
Dim 2%,Q0[1],PMASK$[12],SCLASS,ECLASS
Dim BUYR$[1],VEND$[1],COMM$[1],RANK$[1],CLAS$[1],PROD$[1],SCOMM$[4]
Dim ECOMM$[4],SRANK$[1],SCLAS$[1],SPROD$[12],EPROD$[12],ZERODOL$[5],ZEROQOH$[5]
Dim K6$[14],K8$[14],K9$[50],RCOMM$[4],RPROD$[12],DD$[130],J7$[6],J0$[16],J1$[75]
Dim 2%,SBUYR,EBUYR,SVEND,EVEND,RBUYR,RVEND,W2[9],W7[14],RCLAS,E,J1,V9,J8,J9,WH7[3]
Dim 1%,I,DD,W1[2],BOYMONTH,ARMONTH,SCRPRT,URECFLAG
Dim 3%,UU[11],RRANK,TOTRRANK,TOTT9,TOTCLASS,CLASSRANK,PCTR
DIM 3%,whmisc[6],whmisc2[7],totturns,totprod
dim custom_customer$[30]
! dx add xport reporting code
DXSetup:
Dim tmp$[1000],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Mat Read #1,19,50;P9$;
For J = 2 To 7
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","2288","2528","1728","1744","2400"
!
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18 \ SCRPRT = 99
Mat Read #1,0,100;ARDATE$;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,51,74;BOYMONTH;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
Read #1,3;CNAME$;
Read #1,0,120;Y7; \ Read #1,51,72;Y8;
Y9 = Y7 - Y8 \ If Y9 <= 0 Let Y9 = Y9 + 12
Y8 = Y9
COST$ = "ABWL"
!
MONTH_[1] = 1;MONTH_[2] = ARMONTH \ rem ! - Call "UTMONTHS",MONTH_[],MTH$
Call UTMonths(e$,MONTH_[],MTH$,BOYMONTH) ! set up month headers
!

!
J$ = " ",J$ 
J$ = "2/SPRODRANK"+Str$(IntCo)
try
  Ropen #8,J$
else
  e$="File '",J$,"' not built, please run 939/Assign Inv Classes first!" \ error 10000
end try
!

!
!  dx add xport reporting code
call dxget("sortbuyer",tmp$) \ if tmp$="" let BUYR$="N" else BUYR$="Y" ! sort by buyer, y/n
call dxget("begbuyer",tmp$) \ SBUYR=tmp$ ! starting buyer
call dxget("endbuyer",tmp$) \ if tmp$="" let EBUYR=999 else EBUYR=tmp$ ! ending buyer
call dxget("sortvendor",tmp$) \ if tmp$="" let VEND$="N" else VEND$="Y" ! sort by vendor, y/n
call dxget("begvendor",tmp$) \ SVEND=tmp$ ! starting vendor
call dxget("endvendor",tmp$) \ if tmp$="" let EVEND=999999 else EVEND=tmp$ ! ending vendor
call dxget("sortcomm",tmp$) \ if tmp$="" let COMM$="N" else COMM$="Y" ! sort by commodity, y/n
call dxget("begcomm",tmp$) \ SComm$=UCase$(tmp$)+Blank$ ! starting commodity
call dxget("endcomm",tmp$) \ ECOMM$=UCase$(tmp$)+EndParam$ ! ending commodity
call dxget("sortrank",tmp$) \ if tmp$="" let RANK$="N" else RANK$="Y" ! sort by ranking dollar, y/n
call dxget("rankorder",SRANK$) ! rank $ order in, a/d
call dxget("sortclass",tmp$) \ if tmp$="" let CLAS$="N" else CLAS$="Y"! sort by inv class, y/n
call dxget("begclass",tmp$) \ SCLASS=tmp$ ! starting inv class
call dxget("endclass",tmp$) \ if tmp$="" let ECLASS=13 else ECLASS=tmp$ ! ending inv class
call dxget("classorder",SCLAS$) ! inv class order in, a/d
call dxget("sortprod",tmp$) \ if tmp$="" let PROD$="N" else PROD$="Y" ! sort by product, y/n
call dxget("begprod",tmp$) \ SPROD$=UCase$(tmp$)+Blank$ ! starting product
call dxget("endprod",tmp$) \ EProd$=UCase$(tmp$)+EndParam$ ! ending product
call dxget("zerodol",tmp$) \ if tmp$="" let ZERODOL$="N" else ZERODOL$="Y" ! include zero ranking
Call dxget("zeroqoh",tmp$) \ if tmp$="" let ZEROQOH$="N" else ZEROQOH$="Y" ! exclude zero QOH
call dxget("whse",tmp$) \ if tmp$="" let WHSE=1 else WHSE=tmp$ ! warehouse
call dxget("costtype",tmp$) \ UnitType=tmp$ ! avg cost
call dxget("ictable",tmp$) \ x1=tmp$ ! table used for ranking (1 is default!)
mtbl=1 \ if x1=2 let mtbl=2 ! if not table 2 it is table 1!
!  dx end
!
! buyer section
if SBUYR<0 or SBUYR>999 let e$="Invalid starting buyer, must be between 0 and 999!" \ error 10000
if EBUYR<SBUYR or EBUYR>999 let e$="Invalid ending buyer, must be between starting buyer and 999!" \ error 10000
!
! vendor section
if SVEND<0 or SVEND>999999 let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if EVEND<SVEND or EVEND>999999 let e$="Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
!
! commodity section
SCOMM$=SCOMM$,Blank$
ECOMM$=ECOMM$,EndParam$
if ECOMM$<SCOMM$ OR ECOMM$>EndParam$[1,len(ECOMM$)] let e$="Invalid ending commodity!" \ error 10000
!
! ranking section
if RANK$="N" let SRANK$=""
!
! inventory class section
if SCLASS<0 or SCLASS>13 let e$="Invalid starting class, must be between 0 and 13!" \ error 10000
if ECLASS<SCLASS or ECLASS>999 let e$="Invalid ending class, must be between starting class and 999!" \ error 10000
if CLAS$="N" let SCLAS$=""
!
! product section
SPROD$=SPROD$,Blank$
EPROD$=EPROD$,EndParam$
if EPROD$<SPROD$ or EPROD$>EndParam$ let e$="Invalid ending product, must be between starting product and ",EndParam$[1,12],"!" \ error 10000
!
! warehouse
if WHSE<1 or WHSE>99 let e$="Invalid warehouse, must be between 1 and 99!" \ error 10000
!
! average cost
U5$ = " ",U5$
If UnitType = 1 Let U5$ = "AVG. COST"
If UnitType = 2 Let U5$ = "BASE COST"
If UnitType = 3 Let U5$ = "WHSE COST"
If UnitType = 4 Let U5$ = "LAST COST"
!
If J8 ! dx xml, setup rstr$
	!<section>
	MySQL_ch = OpenMySQLBrowserOutput(e$)
	if MySQL_ch <> -1
		MySQLQueueID = GetMySQLReportHeader(e$,MySQL_ch,"669")
		if MySQLQueueID = 0
			e$ = "Could not get MySQL report header!"
			error 10000
		end if
	else
		tmp$ = bsdel$,"669",fdel$,rdel$
		Call addtostr(e$,rstr$,tmp$)
	end if
End If
If J8 = 0 or MySQLQueueID !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
! - Print 'CS'
! - Print @0,0;"-MX669-";@22,0;"INVENTORY CLASS ANALYSIS REPORT BY WAREHOUSE"
! - J$ = " ",J$ \ J$[1,2] = "2/" \ J$[3,13] = C2 Using "SPRODRANK#"
! - E = 0 \ Call FindF(J$,E)
! - If Not(E) !not found
! -   MSG$ = "  PROGRAM 939 MUST BE RUN FIRST  "
! -   Gosub ISERRMSG \ Goto OUTEND
! - Else 
! -   Window Open @8,10; Size 65,5; Using ""
! - PROMPT_ME: Print @0,0;'CE';
! -   Print "PROGRAM 939 SHOULD BE RUN FIRST TO UPDATE THE DATA"
! -   Print @0,Msc(34 - 1);"ENTER   <CR> TO CONTINUE  OR  E:EXIT    ";
! -   Input Len 16384 + 1;""U5$
! -   Call String(1,U5$)
! -   If U5$ <> "E" And U5$ <> "" Goto PROMPT_ME
! -   If U5$ = "E" Goto OUTEND
! -   Window Close 
! - End If 
! - Ropen #8,J$
! - Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
! - PMASK$ = "##########"
! - X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
! - PMASK$[X,X] = "."
! - Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
! - If Err 0 Let J8 = Spc(8)
! - J8 = 0 \ J9 = Chf(0)
! - If Err 0 Gosub ERR_TRAP
! - If J8 If J8 <> 49 Gosub ERR_TRAP
! - J9 = 55 \ If J8 Let J9 = 18;SCRPRT = 99
! - Mat Read #1,0,100;ARDATE$;
! - Mat Read #1,0,120;ARMONTH;
! - Mat Read #1,51,74;BOYMONTH;
! - Read #1,3;CNAME$;
! - Read #1,0,120;Y7; \ Read #1,51,72;Y8;
! - Y9 = Y7 - Y8 \ If Y9 <= 0 Let Y9 = Y9 + 12
! - Y8 = Y9
! - MONTH_[1] = 1;MONTH_[2] = ARMONTH \ Call "UTMONTHS",MONTH_[],MTH$
! - COST$ = "ABWL"
! - Call "Progdflt","669","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@"
! -   RETVAL$ = " ",RETVAL$
! -   RETVAL$[1,1] = "N"
! -   RETVAL$[8,8] = "N"
! -   RETVAL$[21,21] = "N"
! -   RETVAL$[30,30] = "N"
! -   RETVAL$[32,32] = "N"
! -   RETVAL$[38,38] = "N"
! -   RETVAL$[63,63] = "N"
! -   RETVAL$[64,64] = "Y"
! -   RETVAL$[65,66] = 1 Using "##"
! -   RETVAL$[67,67] = 1 Using "#"
! -   Call "Progdfltw","669","",77,RETVAL$,URECFLAG
! - End If 
! - Goto L_1200
! - PRINT_SCREEN: Rem ========================== print screen
! - Print 'CS' \ Print @0,0;"-MX669-";@22,0;"INVENTORY CLASS ANALYSIS REPORT BY WAREHOUSE"
! - Print @10,2;"SORT BY:";
! - Print @35,2;'BR';"STARTING";@55,2;"ENDING";'ER';
! - Print @14,3;"1> BUYER :";
! - If RETVAL$[1,1] = "Y"
! -   Print @30,3;"Y"; \ BUYR$ = "Y"
! -   Print @35,3;RETVAL$[2,4];
! -   Print @55,3;RETVAL$[5,7];
! -   SBUYR = RETVAL$[2,4]
! -   EBUYR = RETVAL$[5,7]
! - Else 
! -   If RETVAL$[1,1] = "N" Print @30,3;"N"; \ BUYR$ = "N"
! - End If 
! - Print @14,5;"2> VENDOR :";
! - If RETVAL$[8,8] = "Y"
! -   Print @30,5;"Y"; \ VEND$ = "Y"
! -   Print @35,5;RETVAL$[9,14];
! -   Print @55,5;RETVAL$[15,20];
! -   SVEND = RETVAL$[9,14]
! -   EVEND = RETVAL$[15,20]
! - Else 
! -   If RETVAL$[8,8] = "N" Print @30,5;"N"; \ VEND$ = "N"
! - End If 
! - Print @14,7;"3> COMMODITY :";
! - If RETVAL$[21,21] = "Y"
! -   Print @30,7;"Y"; \ COMM$ = "Y"
! -   Print @35,7;RETVAL$[22,25];
! -   Print @55,7;RETVAL$[26,29];
! -   SCOMM$ = RETVAL$[22,25]
! -   ECOMM$ = RETVAL$[26,29]
! - Else 
! -   If RETVAL$[21,21] = "N" Print @30,7;"N"; \ COMM$ = "N"
! - End If 
! - Print @14,9;"4> RANKING $ :";
! - If RETVAL$[30,30] = "Y"
! -   Print @30,9;"Y"; \ RANK$ = "Y"
! -   Print @38,9;"Order: ";RETVAL$[31,31];"    A: ascending  D: descending ";
! -   SRANK$ = RETVAL$[31,31]
! - Else 
! -   If RETVAL$[30,30] = "N" Print @30,9;"N"; \ RANK$ = "N"
! - End If 
! - Print @14,11;"5> INV.CLASS :";
! - If RETVAL$[32,32] = "Y"
! -   Print @30,11;"Y"; \ CLAS$ = "Y"
! -   Print @35,11;RETVAL$[34,35];
! -   Print @55,11;RETVAL$[36,37];
! -   Print @38,12;"Order: ";RETVAL$[33,33];"    A: ascending  D: descending ";
! -   SCLAS$ = RETVAL$[33,33]
! -   SCLASS = RETVAL$[34,35]
! -   ECLASS = RETVAL$[36,37]
! - Else 
! -   If RETVAL$[32,32] = "N" Print @30,11;"N"; \ CLAS$ = "N"
! - End If 
! - Print @14,14;"6> PRODUCT :";
! - If RETVAL$[38,38] = "Y"
! -   Print @30,14;"Y"; \ PROD$ = "Y"
! -   Print @35,14;RETVAL$[39,50];
! -   Print @55,14;RETVAL$[51,62];
! -   SPROD$ = RETVAL$[39,50]
! -   EPROD$ = RETVAL$[51,62]
! - Else 
! -   If RETVAL$[38,38] = "N" Print @30,14;"N"; \ PROD$ = "N"
! - End If 
! - Print @14,16;"7> Print Products with Zero Ranking ?";
! - If RETVAL$[63,63] = "Y" Print @54,16;"Y" \ ZERODOL$ = "Y"
! - If RETVAL$[63,63] = "N" Print @54,16;"N" \ ZERODOL$ = "N"
! - Print @14,17;"8> Exclude Products with Current Zero on Hand ?";
! - If RETVAL$[64,64] = "Y" Print @63,17;"Y" \ ZEROQOH$ = "Y"
! - If RETVAL$[64,64] = "N" Print @63,17;"N" \ ZEROQOH$ = "N"
! - Print @14,18;"9> Enter Warehouse & Cost to use on the report ";
! - If RETVAL$[1,5] <> "@@@@@"
! -   WHSE = RETVAL$[65,66]
! -   Print @20,19;"WAREHOUSE:    ";WHSE
! -   UNIT = RETVAL$[67,67]
! -   Gosub GET_COST_DESC
! -   Print @20,20;"CURRENT COST: ";U5$
! - End If 
! - Return 
! - L_1010: Print @30,3;'CL';
! - If BUYR$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 130 3" \ J5$ = "Enter  Y: or  N: "
! - Gosub L_7000
! - If J1 Let BUYR$ = "Y" Else Let BUYR$ = "N"
! - If BUYR$ = "N"
! -   RETVAL$[1,1] = "N"
! -   Return 
! - End If 
! - If BUYR$ <> "Y" Goto L_1010
! - L_1014: J0$ = "3000 335 3" \ J5$ = "Enter Beginning Buyer maximum 999" \ J1 = SBUYR
! - Gosub L_7000
! - SBUYR = J1
! - J0$ = "3000 355 3" \ J1 = EBUYR \ If Not(J1) Let J1 = 999
! - J5$ = "Enter Ending Buyer maximum 999"
! - Gosub L_7000
! - EBUYR = J1
! - If EBUYR < SBUYR Goto L_1014
! - RETVAL$[1,1] = "Y"
! - RETVAL$[2,4] = SBUYR Using "###"
! - RETVAL$[5,7] = EBUYR Using "###"
! - Return 
! - L_1020: Print @30,5;'CL';
! - If VEND$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 130 5" \ J5$ = "Enter  Y: or  N: "
! - Gosub L_7000
! - If J1 Let VEND$ = "Y" Else Let VEND$ = "N"
! - If VEND$ = "N"
! -   RETVAL$[8,8] = "N"
! -   Return 
! - End If 
! - If VEND$ <> "Y" Goto L_1020
! - GET_VEND: J0$ = "3000 635 5" \ J5$ = "Enter beginning vendor maximum 999999" \ J1 = SVEND
! - Gosub L_7000
! - SVEND = J1
! - J0$ = "3000 655 5" \ J5$ = "Enter ending vendor maximum 999999" \ J1 = EVEND \ If Not(EVEND) Let J1 = 999999
! - Gosub L_7000
! - EVEND = J1
! - If EVEND < SVEND Goto GET_VEND
! - RETVAL$[8,8] = "Y"
! - RETVAL$[9,14] = SVEND Using "######"
! - RETVAL$[15,20] = EVEND Using "######"
! - Return 
! - L_1030: Print @30,7;'CL';
! - If COMM$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 130 7" \ J5$ = "Enter  Y:  or  N: "
! - Gosub L_7000
! - If J1 Let COMM$ = "Y" Else Let COMM$ = "N"
! - If COMM$ = "N"
! -   RETVAL$[21,21] = "N"
! -   Return 
! - End If 
! - If COMM$ <> "Y" Goto L_1030
! - GET_COMM: J0$ = "2    435 7" \ J5$ = "Enter beginning commodity code maximum ''zzzz'' " \ J1$ = SCOMM$
! - Gosub L_7000
! - SCOMM$ = J$
! - J0$ = "2    455 7" \ J5$ = "Enter ending commodity code maximum ''zzzz'' " \ J1$ = ECOMM$
! - If ECOMM$ = "" Or ECOMM$ = "    " Let J1$ = "zzzz"
! - Gosub L_7000
! - ECOMM$ = J$
! - If ECOMM$ < SCOMM$ Goto GET_VEND
! - RETVAL$[21,21] = "Y"
! - RETVAL$[22,25] = SCOMM$
! - RETVAL$[26,29] = ECOMM$
! - Return 
! - L_1040: Print @30,9;'CL';
! - If RANK$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 130 9" \ J5$ = "Enter  Y: or  N: "
! - Gosub L_7000
! - If J1 Let RANK$ = "Y" Else Let RANK$ = "N"
! - If RANK$ = "N"
! -   RETVAL$[30,30] = "N"
! -   Return 
! - End If 
! - If RANK$ <> "Y" Goto L_1040
! - Print @38,9;"Order: ";@50,9;" A: ascending   D: descending ";
! - L_1044: Rem
! - J0$ = "2    14509" \ J5$ = "Enter sort order  A: ascending   D: descending" \ J1$ = SRANK$
! - Gosub L_7000
! - X$ = J$
! - Call String(1,X$)
! - If X$ <> "A" And X$ <> "D" Goto L_1044
! - SRANK$ = X$
! - RETVAL$[30,30] = "Y"
! - RETVAL$[31,31] = SRANK$
! - Return 
! - L_1050: Print @30,11;'CL'; \ Print @30,12;'CL';
! - If CLAS$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 13011" \ J5$ = "Enter  Y:  or  N: "
! - Gosub L_7000
! - If J1 Let CLAS$ = "Y" Else Let CLAS$ = "N"
! - If CLAS$ = "N"
! -   RETVAL$[32,32] = "N"
! -   Return 
! - End If 
! - If CLAS$ <> "Y" Goto L_1050
! - Gosub L_11000
! - Print @38,12;"Order: ";@50,12;" A: ascending  D: descending ";
! - L_1054: Rem
! - J0$ = "2    14512" \ J5$ = "Enter sort order  A: ascending   D: descending" \ J1$ = SCLAS$
! - Gosub L_7000
! - X$ = J$
! - Call String(1,X$)
! - If X$ <> "A" And X$ <> "D" Goto L_1054
! - SCLAS$ = X$
! - RETVAL$[32,32] = "Y"
! - RETVAL$[33,33] = SCLAS$
! - RETVAL$[34,35] = SCLASS Using "##"
! - RETVAL$[36,37] = ECLASS Using "##"
! - Return 
! - L_1060: Print @30,14;'CL';
! - If PROD$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 13014" \ J5$ = "Enter  Y:  or  N: "
! - Gosub L_7000
! - If J1 Let PROD$ = "Y" Else Let PROD$ = "N"
! - If PROD$ = "N"
! -   RETVAL$[38,38] = "N"
! -   Return 
! - End If 
! - If PROD$ <> "Y" Goto L_1060
! - GET_PROD: J0$ = "2   123514" \ J5$ = "Enter beginning product code maximum ''zzzzzzzzzzzz'' " \ J1$ = SPROD$
! - Gosub L_7000
! - SPROD$ = J$
! - J0$ = "2   125514" \ J5$ = "Enter ending product code maximum ''zzzzzzzzzzzz'' " \ J1$ = EPROD$
! - If J1$ = "" Or J1$ = "            " Let J1$ = "zzzzzzzzzzzz"
! - Gosub L_7000
! - EPROD$ = J$
! - If EPROD$ < SPROD$ Goto GET_PROD
! - RETVAL$[38,38] = "Y"
! - RETVAL$[39,50] = SPROD$
! - RETVAL$[51,62] = EPROD$
! - Return 
! - L_1070: Print @54,16;'CL';
! - If ZERODOL$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 15416" \ J5$ = "Enter  Y:  or  N: "
! - Gosub L_7000
! - If J1 Let ZERODOL$ = "Y" Else Let ZERODOL$ = "N"
! - If ZERODOL$ = "Y"
! -   RETVAL$[63,63] = "Y"
! -   Return 
! - End If 
! - If ZERODOL$ <> "N" Goto L_1070
! - RETVAL$[63,63] = "N"
! - Return 
! - L_1085: Print @63,17;'CL';
! - If ZEROQOH$ = "Y" Let J1 = 1 Else Let J1 = 0
! - J0$ = "6000 16317" \ J5$ = "Enter  Y:  or  N: "
! - Gosub L_7000
! - If J1 Let ZEROQOH$ = "Y" Else Let ZEROQOH$ = "N"
! - If ZEROQOH$ = "Y"
! -   RETVAL$[64,64] = "Y"
! -   Return 
! - End If 
! - If ZEROQOH$ <> "N" Goto L_1085
! - RETVAL$[64,64] = "N"
! - Return 
! - L_1100: Rem
! - L_1110: Gosub L_10500
! - Print @20,19;"WAREHOUSE:    ";WHSE
! - Print @20,20;"CURRENT COST: ";U5$
! - Print @0,21;'CL'
! - Return 
! - L_1200: Rem ========================= get ranges
! - Gosub PRINT_SCREEN
! - STDFINALQ: Rem "standard final question
! - Print @0,22;'CL';
! - Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P: print  S: save defaults  E: exit ";
! - Input ""Z1$
! - Call String(1,Z1$)
! - If Z1$ = "P" Goto L_1500
! - If Z1$ = "E" Goto OUTEND
! - If Z1$ = "R"
! -   For Z = 1 To 9
! -     On Z Gosub L_1010,L_1020,L_1030,L_1040,L_1050,L_1060,L_1070,L_1085,L_1110
! -   Next Z
! -   Goto STDFINALQ
! - End If 
! - If Z1$ = "S"
! - ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only,  <CR>: do not save  ";
! -   Input Len 16384 + 1;""Z2$ \ Call String(1,Z2$)
! -   If Z2$ = "" Goto STDFINALQ
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "Progdfltw","669","",77,RETVAL$,URECFLAG
! -   Print @0,22;'CL';
! - End If 
! - Z = Z1$
! - If Z >= 1 And Z <= 9
! -   On Z Gosub L_1010,L_1020,L_1030,L_1040,L_1050,L_1060,L_1070,L_1085,L_1110
! - End If 
! - Goto STDFINALQ
!
! *** Sorting Section
L_1500: 
! - Print @0,22;"Sorting, please wait... ";'CE'; \ Signal 3,0
K8$ = " ",K8$
If WHSE <> 0 Let K8$[1,2] = WHSE Using "##"
Search #8,2,1;K8$,R8,E
If Not(E) Goto L_1570
L_1550: Search #8,3,1;K8$,R8,E
If E = 2 Goto L_1900
Rem {begin src/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
L_1570: if mtbl=1 Read #8,R8,14;RRANK ! extended value for ranking
if mtbl=2 Read #8,R8,92;RRANK ! table 2 extended value
K8 = K8$[1,2]
If ZERODOL$ = "N" If RRANK = 0 Goto L_1550
!If WHSE <> 0 And K8 <> WHSE Goto L_1900
if k8<>Whse goto L_1900 ! whse zero = main prod
K1$[1,12] = K8$[3,14]
Search #2,2,1;K1$,R1,E
If E = 1 Goto L_1550
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,894;C4;
mat read #2,r1,1294;PRD1;
if whse
K6$[1,12] = K8$[3,14];K6$[13,14] = K8$[1,2]
Search #6,2,1;K6$,R6,E
If E = 1 Goto L_1550
Mat Read #6,R6,32;W1;
Mat Read #6,R6,38;W2;
Mat Read #6,R6,696;W7;
MAT  READ #6,R6,846;WHMISC2;
Mat read #6,r6,1038;whprd1;
Else ! main prod
	w1[2]=0;w2[3]=b1[24]
endif
RBUYR = W1[2]
RVEND = W2[3]
If RVEND = 0 Let RVEND = B1[24]
RCOMM$ = P1$[152,155]
!RCLAS = W7[6]
if whse 
	if mtbl=1 LET RCLAS=W7[6]
	if mtbl=2 let RCLAS=whprd1[0]
else ! main prod
	if mtbl=1 let RCLAS=c4[8]
	if mtbl=2 let RCLAS=prd1[4]
endif
! If RCLAS = 0 Let RCLAS = C4[8]
RPROD$ = K8$[3,14]
K9$ = " ",K9$
K9$[1,2] = K8$[1,2]
If BUYR$ = "N" Goto L_1790
If SBUYR > RBUYR Or EBUYR < RBUYR Goto L_1550
K9$[3,8] = RBUYR Using "######"
L_1790: If VEND$ = "N" Goto L_1800
If SVEND > RVEND Or EVEND < RVEND Goto L_1550
K9$[9,14] = RVEND Using "######"
L_1800: If COMM$ = "N" Goto L_1810
If SCOMM$ > RCOMM$[1,Len(SCOMM$)] Or ECOMM$ < RCOMM$[1,Len(ECOMM$)] Goto L_1550
K9$[15,18] = RCOMM$
L_1810: If RANK$ = "N" Goto L_1820
If RRANK >= 0 If SRANK$ = "D" Let RRANK = 999999999.99 - RRANK
If RRANK < 0 If SRANK$ = "D" Let RRANK = -999999999.99 - RRANK
K9$[19,31] = RRANK Using "-#########.##"
L_1820: If CLAS$ = "N" Goto L_1830
If SCLASS > RCLAS Or ECLASS < RCLAS Goto L_1550
If SCLAS$ = "D" Let RCLAS = 99 - RCLAS
K9$[32,33] = RCLAS Using "##"
L_1830: If PROD$ = "N" Goto L_1834
If SPROD$ > RPROD$[1,Len(SPROD$)] Or EPROD$ < RPROD$[1,Len(EPROD$)] Goto L_1550
L_1834: K9$[34,45] = RPROD$
Search #9,4,1;K9$,R9,E
If E Let e$ = "syserrorfile 669 sortfile mode (m)=4 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_1550
!
! *** Process Section
L_1900:
!
if J8 ! dx xml headings
  !
  if BUYR$="N" if VEND$="N" if COMM$="N" ! no on sorting items
    tmp$=""
  else
    tmp$="BUYER",fdel$,"VENDOR",fdel$,"VENDOR NAME",fdel$
    tmp$=tmp$,"COMMODITY",fdel$,"COMMODITY DESC",fdel$
  endif
  tmp$=tmp$,"ITEM CODE",fdel$,"DESCRIPTION",fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"LAST SOLD",fdel$,"LAST RECD",fdel$,"U/M",fdel$
  tmp$=tmp$,"CURRENT ON HAND",fdel$,U5$,fdel$
  tmp$=tmp$,U5$," U/M",fdel$
  tmp$=tmp$,"EXT COST",fdel$,"RANKING$",fdel$
  tmp$=tmp$,"INV. CLASS",fdel$
  if custom_customer$="HTBERRY" let tmp$=tmp$,"TURNS",fdel$
  tmp$=tmp$,"MINIMUM",fdel$,"MIN U/M",fdel$
  tmp$=tmp$,"MAXIMUM",fdel$,"MAX U/M",fdel$
  tmp$=tmp$,"AVG. LEAD TIME",fdel$
  For I = 12 To 1 Step -1
    tmp$=tmp$,"ADJ USAGE ",MTH$[I * 3 - 2,I * 3],fdel$
  Next I
  !
  if MySQLQueueID
	call AddMySQLReportColumnHeadings(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$)
  else
	call addtostr(e$,rstr$,tmp$+rdel$)
  end if
end if
!
! - Print @0,22;"Printing, please wait... ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K9$ = " ",K9$ \ J1 = 90 \ V9 = 0
TOTCLASS = 0;CLASSRANK = 0;HOLD_CLASS = -99
let totturns=0;totprod=0
L_1930: Search #9,3,1;K9$,R9,E
If E = 2 Goto L_9100
if reportAborted goto OUTEND

Rem {begin src/inc/rtn.printmsg.i}
if not(SCRRPT) let PCTR=PCTR+1
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
K1$[1,12] = K9$[34,45]
K8$[3,14] = K9$[34,45];K8$[1,2] = K9$[1,2]
Search #8,2,1;K8$,R8,E
If E let e$="Can't find '",K8$,"' is product rank file!" \ error 10000
if MTBL=1 Read #8,R8,14;RRANK; ! extend value for ranking
Mat Read #8,R8,20;UU; ! 12 month usage
if MTBL=2 Read #8,R8,92;RRANK; ! value used in table 2
Search #2,2,1;K1$,R1,E
If E let e$="Can't find '",K1$,"' is product file!" \ error 10000
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1; \ Mat Read #2,R1,256;A;
Mat Read #2,R1,460;A2; \ Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2; \ Mat Read #2,R1,894;C4;
mat read #2,r1,1294;prd1;
if whse
K6$[1,12] = K1$[1,12]
K6$[13] = K9$[1,2]
Gosub L_10300 \ Goto L_1930  ! whse
If P9$[32,32] = "Y" Gosub L_69000 ! set whse
else
	w3[15]=0;w3[16]=0;w3[17]=0;w3[18]=0
endif ! using whse
Gosub L_10200 ! set cost
T9 = 0 \ T9[1] = 0 \ T9[2] = 0 \ T9[3] = 0
Gosub L_2500 ! get on hand
If P1$[152,155] = "MACH" Let A1 = 0
If P1$[152,155] = "LABR" Let A1 = 0
If P1$[152,155] = "TIME" Let A1 = 0
T9[2] = A1 - A1[1] - A1[3]
If P9$[28,28] = "Y" Let T9[2] = T9[2] + A1[2]
If B1[20] = 0 Let B1[20] = 1
T9[3] = FNR(A1 * (COST))
Y9 = Y8;T9[4] = 0
T9[1] = 0 \ If T9 Let T9[1] = FNR(A[0] / T9)
Gosub L_10000 ! convert
If ZEROQOH$ = "Y" If A1[0] = 0 Goto L_2190
!If HOLD_CLASS = -99 Let HOLD_CLASS = W7[6]
!If CLAS$ = "Y" If W7[6] <> HOLD_CLASS Gosub CLASS_SUBTOTAL
IF HOLD_CLASS=-99 
  if whse
	if mtbl=1 LET HOLD_CLASS=W7[6];PCLS=W7[6]
	if mtbl=2 let HOLD_CLASS=whprd1[0];PCLS=whprd1[0]
  Else
	if mtbl=1 let HOLD_CLASS=C4[8];PCLS=C4[8]
	IF MTBL=2 LET HOLD_CLASS=PRD1[4];PCLS=PRD1[4]
  ENDIF
ENDIF
if whse 
	if mtbl=1 LET PCLS=W7[6]
	if mtbl=2 let PCLS=whprd1[0]
else ! main prod
	if mtbl=1 let PCLS=c4[8]
	if mtbl=2 let PCLS=prd1[4]
endif
IF CLAS$="Y" IF PCLS<>HOLD_CLASS GOSUB CLASS_SUBTOTAL
Gosub L_5800
Gosub L_5000
L_2190: Goto L_1930
!
L_2500: Rem GET ON HAND FROM SPRODLOT
A1[0] = 0 \ A1[1] = 0 \ A1[3] = 0
J4$ = " ",J4$ \ J4$ = P1$[140,151]
L_2530: Search #4,3,2;J4$,R4,E
If E Return 
If J4$[1,12] <> P1$[140,151] Return 
Mat Read #4,R4,66;P1;
Mat Read #4,R4,82;P3;
K9 = K9$[1,2]
If K9 <> P1 Goto L_2530
A1 = A1 + P3[0] - P3[1]
A1[3] = A1[3] + P3[3]
Goto L_2530
!
L_3000: Rem "=============================== sort break
DD$ = " ",DD$ \ DD = 1
If K9$[3,8] = "      " Goto L_3100
DD$[DD,DD + 11] = "   BUYER#: " \ DD = DD + 12
DD$[DD,DD + 5] = K9$[3,8] \ DD = DD + 6
L_3100: If K9$[9,14] = "      " Goto L_3200
DD$[DD,DD + 11] = "   VENDOR: " \ DD = DD + 12
DD$[DD,DD + 5] = K9$[9,14] \ DD = DD + 6
DD$[DD,DD + 1] = "  " \ DD = DD + 2
D$ = " ",D$ \ D$[1,20] = "VENDOR NOT ON FILE  "
J7$[1,6] = K9$[9,14]
Search #7,2,1;J7$,R7,E
If E Goto L_3180
Read #7,R7;D$
VendorName$=rtrim$(D$[1,30])
L_3180: DD$[DD,DD + 29] = D$[1,30] \ DD = DD + 30
L_3200: If K9$[15,18] = "    " Goto L_3290
DD$[DD,DD + 13] = "   COMMODITY: " \ DD = DD + 14
DD$[DD,DD + 3] = K9$[15,18] \ DD = DD + 4
DD$[DD,DD + 1] = "  " \ DD = DD + 2
D$ = " ",D$ \ D$[1,16] = "CODE NOT ON FILE"
J3$ = " ",J3$ \ J3$[1,4] = K9$[15,18]
Search #3,2,1;J3$,R3,E
If E Goto L_3280
Read #3,R3;D$
CommDesc$=rtrim$(D$[1,16])
L_3280: DD$[DD,DD + 15] = D$[1,16] \ DD = DD + 16
L_3290: 
if J8=0 Print #0;" " \ Print #0; Tab 0;DD$
J1 = J1 + 2
Return 
!
CLASS_SUBTOTAL: Rem
if J8=0 ! print
  If J1 + 3 > J9 Gosub L_5800
  Print #0;" "
  Print #0; Tab 50;"SUBTOTAL FOR CLASS ";HOLD_CLASS;
  Print #0; Using "---------#.##"; Tab 83;TOTCLASS;
  if custom_customer$="HTBERRY"
	PRINT #0; USING "---------#.##"; TAB 96;CLASSRANK;
	print #0;" AVG TURNS ";
	x3=0 \ if totprod let x3=totturns/totprod
	PRINT #0; USING "-------#.##";x3
  else
	  Print #0; Using "---------#.##"; Tab 96;CLASSRANK
  Endif
  Print #0;" "
  J1 = J1 + 3
endif
TOTCLASS = 0 \ CLASSRANK = 0 \ HOLD_CLASS = PCLS ! W7[6]
let totturns=0 \ let totprod=0
Return 
!
L_5000: Rem "====================================== print line
if J8 
  if BUYR$="N" if VEND$="N" if COMM$="N" ! no on sorting items
    tmp$=""
  else
    tmp$=K9$[3,8],fdel$,K9$[9,14],fdel$,VendorName$,fdel$
    tmp$=tmp$,K9$[15,18],fdel$,CommDesc$,fdel$
  endif
  tmp$=tmp$,P1$[140,151],fdel$,rtrim$(P1$[9,38]),fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,rtrim$(P1$[63,92]),fdel$
  X2 = W2[6] \ Gosub L_7700 \ tmp$=tmp$,X$,fdel$
  X2 = WH7[0] \ Gosub L_7700 \ tmp$=tmp$,X$,fdel$
  tmp$=tmp$,SUNIT$,fdel$
  tmp$=tmp$,LTrim$(A1[0] Using "----------#.##"),fdel$
  tmp$=tmp$,COST Using PMASK$,fdel$,CUNIT$,fdel$
  tmp$=tmp$,LTrim$(T9[3] Using "----------#.##"),fdel$
  tmp$=tmp$,LTrim$(RRANK Using "----------#.##"),fdel$
  tmp$=tmp$,PCLS Using "##",fdel$
  if custom_customer$="HTBERRY"
	tmp$=tmp$,whmisc2[2] using "----##",fdel$
  Endif
  tmp$=tmp$,W3[3] Using "######",fdel$,SUNIT$,fdel$
  tmp$=tmp$,W3[4] Using "######",fdel$,SUNIT$,fdel$
  tmp$=tmp$,FNA(W2[0] * 30) Using " ###.## DAYS ",fdel$
  For I = 0 To 11
    tmp$=tmp$,FNU(UU[I]) Using "---------#",fdel$
  Next I
  !
  if MySQLQueueID
	if not(AddMySQLReportData(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$))
		! possible user abort - report deleted exit now
		reportAborted = 1
	end if
  else
	call addtostr(e$,rstr$,tmp$+rdel$)
  end if
  return
endif
!
Print #0; Tab 0;P1$[140,151];
Print #0; Tab 13;P1$[9,38];
X2 = W2[6] \ Gosub L_7700
Print #0; Tab 44;X$;
Print #0; Tab 53;SUNIT$;
Print #0; Using "-------#.##"; Tab 57;A1[0];
Print #0; Using PMASK$; Tab 68;COST;" /";CUNIT$;
Print #0; Using "-------#.##"; Tab 85;T9[3];
Print #0; Using "---------#.##"; Tab 96;RRANK;
if custom_customer$="HTBERRY"
	PRINT #0; USING "##"; TAB 110;PCLS; ! W7[6];
	print #0; using "----##";tab 115;whmisc2[2]
else	
	Print #0; Using "##"; Tab 110;PCLS ! W7[6]
Endif
If P9$[26,26] = "Y" Print #0; Tab 13;P1$[63,92];
X2 = WH7[0] \ Gosub L_7700
Print #0; Tab 44;X$;"   ";
Print #0; Using "Min ###### ";W3[3];SUNIT$;
Print #0; Using "/ Max ###### ";W3[4];SUNIT$;
Print #0;" AVG. LEAD TIME ";
Print #0; Using " ###.## DAYS ";FNA(W2[0] * 30)
Gosub L_6000
Print #0;"    ";
For I = 0 To 11
  Print #0; Using "---------#";FNU(UU[I]);
Next I
Print #0;" "
Print #0;""
TOTT9 = TOTT9 + T9[3]
TOTRRANK = TOTRRANK + RRANK
TOTCLASS = TOTCLASS + T9[3]
CLASSRANK = CLASSRANK + RRANK
let totturns=totturns+whmisc2[2]
let totprod=totprod+1
J1 = J1 + 4
Return 
!
L_5800: Rem "====================================== headings
if J8 goto PrintHeadingExit ! dx xml
!
If S$[1,2] <> K9$[1,2] Let J1 = 999
If J1 < J9
  If S$ <> K9$[1,18]
    Gosub L_3000 \ S$ = K9$[1,18] \ Goto L_5990
  Else 
    Return 
  End If 
End If 
! - If V9 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9 If Not(J8) Print #0;"\14\";
V9 = V9 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V9
Print #0;" - MX669 - ";T9$;
Print #0; Tab 37;"I N V E N T O R Y   C L A S S   A N A L Y S I S   R E P O R T"; Tab 120;" "
Print #0; Tab 5;"CLASS TABLE ";str$(MTBL);
Print #0; Tab 58;"FOR WAREHOUSE ";K9$[1,2];
Print #0;"\15\"
Print #0; Tab 43;"LAST SOLD";
Print #0; Tab 60;"CURRENT";
Print #0; Tab 110;"INV."
Print #0; Tab 0;"ITEM CODE";
Print #0; Tab 13;"PRODUCT DESCRIPTION";
Print #0; Tab 43;"LAST RECD";
Print #0; Tab 53;"U/M";
Print #0; Tab 60;"ON HAND";
Print #0; Tab 72;U5$;
Print #0; Tab 88;"EXT COST";
Print #0; Tab 101;"RANKING$";
if custom_customer$="HTBERRY"
	PRINT #0; TAB 110;"CLASS";
	print #0; tab 117;"TURNS"
else
	Print #0; Tab 110;"CLASS"
Endif
Print #0;" "
!
PrintHeadingExit:
Gosub L_3000
S$ = K9$[1,18]
L_5990: Return 
!
L_6000: Rem ================== print header for adjusted usage prior 12 months
if J8 return ! dx xml
!
Print #0; Tab 8;"ADJUSTED USAGE PRIOR 12 MONTHS"
Print #0;"           ";
For I = 12 To 1 Step -1
  Print #0;MTH$[I * 3 - 2,I * 3];"       ";
Next I
Print #0;""
J1 = J1 + 2
Return 
!
! - L_7000: Rem  call input
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Call "Input",J1,J$,J0$,J1$,J4$,J5$
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  if MySQLQueueID and not(reportAborted)
	call FinishMySQLReport(e$,MySQL_ch,MySQLQueueID)
  else
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
  end if
End If 
!
End 
!
! - Print 'CS' \ Close 
! - Chain "MX000"
!
L_9100: Rem END OF THIS RANGE
if J8 goto OUTEND ! dx xml
!
If CLAS$ = "Y" Gosub CLASS_SUBTOTAL
GOSUB L_5800: ! CHECK IF NEW HDR NEEDED!
Print #0;""
Print #0; Tab 5;"TOTAL: ";
Print #0; Using "---------#.##"; Tab 83;TOTT9;
Print #0; Using "---------#.##"; Tab 96;TOTRRANK
J1 = J1 + 1
Gosub PRT_SELECTS
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_10000: Rem "========================== convert to desireed u/m's
CNVTU[0] = 0
CNVTU[1] = PFU1[11]
CNVTU[2] = 2
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
For X = 0 To 11
  CNVTA = UU[X] \ Gosub L_20000 \ UU[X] = AMOUNT
Next X
CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = W3[3]
Gosub L_20000 \ W3[3] = AMOUNT
CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = W3[4]
Gosub L_20000 \ W3[4] = AMOUNT
For X = 0 To 3
  If X = 3 Goto L_10110
  If X = 1 Goto L_10130
  If X = 0 Let CNVTU[2] = 5
  CNVTA = T9[X] \ Gosub L_20000 \ T9[X] = AMOUNT
L_10110: CNVTA = A1[X] \ Gosub L_20000 \ A1[X] = AMOUNT
L_10130: Next X
If PFU1[8] = -1 Let SUNIT$ = "CWT "
If PFU1[8] = -3 Let SUNIT$ = "LB  "
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
If PFU1[11] = -1 Let CUNIT$ = "CWT "
If PFU1[11] = -3 Let CUNIT$ = "LB  "
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
Return 
!
L_10200: Rem SET COST
If UnitType = 1
  If W3[15] and P9$[32,32] = "Y" Let COST = W3[15] Else Let COST = B1[21]
End If 
If UnitType = 2
  If W3[18] and P9$[32,32] = "Y" Let COST = W3[18] Else Let COST = C4[4]
End If 
If UnitType = 3
  If W3[17] and P9$[32,32] = "Y" Let COST = W3[17] Else Let COST = B1[8]
End If 
If UnitType = 4
  If W3[16] and P9$[32,32] = "Y" Let COST = W3[16] Else Let COST = B1[10]
End If 
Return 
L_10300: Rem WAREHOUSE
Search #6,2,1;K6$,R6,E
If E Return 
Mat Read #6,R6,38;W2;
Mat Read #6,R6,78;W3;
Mat Read #6,R6,228;W5;
Mat Read #6,R6,428;WH7;
Mat Read #6,R6,696;W7;
MAT  READ #6,R6,846;WHMISC2;
Mat read #6,r6,1038;whprd1;
Return 1
! - L_10500: Rem SELECT UNIT
! - Window Open @5,5; Size 70,12; Using " SELECT COST "
! - L_10520: Print 'CS'
! - Print @5,1;"Enter warehouse ## ,  0: For All ";
! - Print @5,3;" 1: AVERAGE   "; Tab 45;" 3: WAREHOUSE"
! - Print @5,4;" 2: BASE   "; Tab 45;" 4: LAST "
! - Print @10,6;"Enter cost to use on the report  ";
! - L_10560: Print @37,1;
! - J0$ = "3000 237 1" \ J5$ = "" \ J1 = WHSE
! - Gosub L_7000
! - WHSE = J1
! - If WHSE < 0 Or WHSE > 99 Goto L_10560
! - RETVAL$[65,66] = WHSE Using "##"
! - J0$ = "3 00 142 6" \ J1 = 0
! - J5$ = "Enter cost (1-4) or press <CR> to go back to warehouse prompt"
! - GET_COST: Gosub L_7000
! - If J4$ = "" Goto L_10520
! - UNIT = J1
! - If UNIT < 1 Goto GET_COST
! - If UNIT > 4 Goto GET_COST
! - Gosub GET_COST_DESC
! - RETVAL$[67,67] = UNIT Using "#"
! - Window Close 
! - Window Off 
! - Return 
!
GET_COST_DESC: Rem
U5$ = " ",U5$
If UnitType = 1 Let U5$ = "AVG. COST "
If UnitType = 2 Let U5$ = "BASE COST"
If UnitType = 3 Let U5$ = "WHSE COST "
If UnitType = 4 Let U5$ = "LAST COST "
Return 
!
! - L_11000: Rem prompt for starting & ending inv.class
! - L_11010: Rem
! - J0$ = "3000 23511" \ J5$ = "Enter starting inventory class maximum 13" \ J1 = SCLASS
! - Gosub L_7000
! - SCLASS = J1
! - J0$ = "3000 25511" \ J5$ = "Enter ending inventory class maximum 13" \ J1 = ECLASS \ If Not(ECLASS) Let J1 = 13
! - Gosub L_7000
! - ECLASS = J1
! - If ECLASS < SCLASS Goto L_11010
! - Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - was If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ rem ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B1[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B1[21]
  If Not(W3[16]) Let W3[16] = B1[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B1[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B1[24]
End If 
Return 
!
PRT_SELECTS: Rem  Print Report Selections
If J1 + 10 > J9 Let J1 = 99 \ Gosub L_5800
Print #0;""
Print #0; Tab 5;"Report Selections:"
If BUYR$ = "Y" Print #0; Using "###"; Tab 10;"Sorted by Buyer, Range from ";SBUYR;" to ";EBUYR
If VEND$ = "Y" Print #0; Using "######"; Tab 10;"Sorted by Vendor, Range from ";SVEND;" to ";EVEND
If COMM$ = "Y" Print #0; Tab 10;"Sorted by Commodity, Range from ";SCOMM$;" to ";ECOMM$
If RANK$ = "Y"
  Print #0; Tab 10;"Sorted by Ranking $";
  If SRANK$ = "A" Print #0;"in Ascending order"
  If SRANK$ = "D" Print #0;"in Descending order"
End If 
If CLAS$ = "Y"
  Print #0; Using "###"; Tab 10;"Sorted by Class, Range from ";SCLASS;" to ";ECLASS;
  If SCLAS$ = "A" Print #0;"in Ascending order"
  If SCLAS$ = "D" Print #0;"in Descending order"
End If 
If PROD$ = "Y" Print #0; Tab 10;"Sorted by Product, Range from ";SPROD$;" to ";EPROD$
Print #0; Tab 10;"Products with zero ranking are ";
If ZERODOL$ = "N" Print #0;"not ";
Print #0;"included"
Print #0; Tab 10;"Products with zero on hand are ";
If ZEROQOH$ = "Y" Print #0;"not ";
Print #0;"included"
Print #0; Tab 10;"Warehouse: ";WHSE
Print #0; Tab 10;"Cost: ";U5$
Return 
!
! - ISERRMSG: Rem"========== display the error message on screen ========
! - Window Open @(40 - Len(MSG$) / 2 - 2),10; Size (Len(MSG$) + 4),3; Using ""
! - Print MSG$;
! - Pause 60
! - Window Close 
! - Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
