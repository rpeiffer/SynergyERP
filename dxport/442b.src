! >>> Program 442b
!
! description Product Rank
!
! loadsave -w -n 100,10 -o prog/dxport/442b.dl4 src/442b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 13, 2003  13:20:14
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx442b.src (univ2) [jcs] {23360}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX442B - PRODUCT RANK REPORT
Rem AUTHOR: DAVE  OCT 13, 1986
Rem LAST UPDATE:
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub FindF,InpBuf,String,Time
Declare Intrinsic Function findchannel
!
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
Window Off 
If Err 0 Gosub ERR_TRAP
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
dim Blank$[50] \ Blank$=" ",Blank$
Dim A$[156],P9$[50]
Dim SUNIT$[4]
Dim 2%,B1[24],3%,A1[19]
Dim 3%,C5[5],X8[2],TX8[2],PARM[10],WHMISC2[7]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8]
Dim 1%,F,X9[1],ch_pw,2%,X2,3%,J,X3[1],T7,T8[20],T9[20]
Dim K1$[50],K2$[20],K3$[20],K4$[20],X$[10],T9$[26],HOLDCOMM$[4]
Dim K99$[50],SCRATCH$[80],F$[16],kpw$[50],custom_customer$[30]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 4
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","1728","1744"
ch_pw=4
Mat Read #1,0,100;ARDATE$;
Mat Read #1,19,50;P9$;
Read #1,3;CNAME$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
If P9$[40,40] = "Y" Let SHIFT = 21 Else Let SHIFT = 0
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) 
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 20
!
!!!! dx add xport reporting code
dim tmp$[300]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"442b",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!!!! dx add xport reporting code
call dxget("k2",k2$) ! starting product
call dxget("k3",k3$) ! ending product
call dxget("status",tmp$) \ X9=tmp$ ! status, 1=active 2=all
call dxget("values",tmp$) \ X9[1]=tmp$ ! 1=units & 2=dollars
call dxget("percent",tmp$) \ if tmp$="" let P1=100 else P1=tmp$ ! top percentage
call dxget("sort",tmp$) \ if tmp$="" let F=2 else F=9 ! sort by commodity
call dxget("j2",J2$) ! starting commodity
call dxget("j3",J3$) ! ending commodity
!!!! dx end
!
K1$ = K2$
!
if K3$="" let K3$="}}}}}}"
if K3$<K2$let e$="Invalid ending code, must be > starting code!" \ error 10000
!
If X9 = 2 Let X9 = 3 ! status
!
if P1<=0 or P1>100 let e$="Invalid percentage, must be between 1 and 100!" \ error 10000
!
J2$=J2$,Blank$ \ J2$=J2$[1,4]
!
if J3$ = "" Let J3$ = "}}}}"
J3$=J3$,Blank$ \ J3$=J3$[1,4]
if J3$<J2$  let e$="Invalid ending commodity, must be > starting commodity!" \ error 10000
!
! - L_900: Rem GET RANGES
! - Print @0,21;"ENTER STARTING CODE, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - Print @6,23;"ENDING   CODE, <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "}}}}}}"
! - If K2$ <= K3$ Goto L_990
! - Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: K1$ = K2$
! - J1 = 90 \ J2 = 0
! - If Len(K3$) < 12 Let K3$[Len(K3$) + 1] = "            "
! - L_1000: Print @0,22;'CE';"SELECTIONS:  1: ACTIVE,  2: ALL ";
! - Input ""J$
! - X9 = J$ \ If X9 < 1 Or X9 > 2 Goto L_1000
! - If X9 = 2 Let X9 = 3
! - L_1040: Print @0,22;'CE';"SELECT:  1: UNITS,  2: DOLLARS ";
! - Input ""J$ \ If Len(J$) > 1 Goto L_1040
! - X9[1] = J$ \ If Not(X9[1]) Goto L_1040
! - If X9[1] > 2 Goto L_1040
! - If X9[1] < 1 Goto L_1040
! - Gosub L_1700
! - L_1100: Rem
! - Print @0,23;'CL';"SORT BY COMMODITY CODE? (Y/N) ";
! - Input ""J2$ \ If J2$ = "Y" Goto L_1200
! - If J2$ <> "N" Goto L_1100
! - F = 2
! - J2$ = "    " \ J3$ = "}}}}"
! - Goto L_1400
! - L_1200: Rem CTGY
! - Print @0,21;'CE';"ENTER STARTING COMMODITY, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
! - If Len(J2$) < 4 Let J2$[Len(J2$) + 1] = "    "
! - J2$[5] = ""
! - Print @6,22;'CE';"ENDING COMMODITY,   <CR> FOR LAST,    E: TO EXIT ";
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
! - If J3$ = "" Let J3$ = "}}}}"
! - If Len(J3$) < 4 Let J3$[Len(J3$) + 1] = "    "
! - J3$[5] = ""
! - If J2$ <= J3$ Goto L_1300
! - Print @0,21;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
! - Signal 3,30 \ Goto L_1200
!
! - L_1300: Rem
! - F = 9
! *** Sort Section
L_1400: Rem BY CTGY
! - Print @0,22;'CE';"Clearing sort file...please wait" \ Signal 3,0
J4$ = " ",J4$
L_1415: Search #9,3,1;J4$,V1,E
If E Goto L_1500
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 442b sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1415
L_1500: Rem SORT IT
! - Print @0,22;'CE';"Sorting...please wait" \ Signal 3,0
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E
If E Goto L_1800
L_1530: If K1$[1,Len(K3$)] > K3$ Goto L_1800
Mat Read #2,R1,0;A$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,512;PFU1;
Mat Read #2,R1,554;PFU2;
GOSUB GET_PRODWHSE:  
If A$[152,155] < J2$[1,4] Goto L_1520
If A$[152,155] > J3$[1,4] Goto L_1520
Mat Read #2,R1,298;C5;
If X9[1] = 1 Let X3 = C5[3]
If X9[1] = 2 Let X3 = C5[1]
IF PARM[2]=0 IF NOT(X3) GOTO  L_1520:    
X8[0] = X3
If X9[1] = 1 Gosub L_10000
If X9 = 3 Goto L_1567
If X9 = 1 If Not(X3) Goto L_1520
L_1567: T7 = T7 + Abs(X8[0])
J4$ = " ",J4$
J4$[5,16] = (99999999.99 - X3) Using "#########.##"
J4$[17] = K1$
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 442b sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1520
!
! - L_1700: Rem % TO PRINT
! - Print @0,22;'CE';"ENTER THE TOP % TO PRINT, <CR> FOR ALL ";
! - Input ""J$ \ If Len(J$) > 3 Goto L_1700
! - If J$ = "" Let J$ = "100"
! - P1 = J$ \ If P1 <= 0 Goto L_1700
! - If P1 > 100 Goto L_1700
! - Return 
!
! *** Process Section
L_1800: Rem
K1$ = " ",K1$ \ K3$ = "}",K3$
!
J2$ = "SALES - "
If X9[1] = 1 Let J2$ = J2$,"UNITS"
If X9[1] = 2 Let J2$ = J2$,"DOLLARS" 
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

!
! *** Process Section 
!
if j8 ! dx xml headings
  if F=9
    tmp$="COMMODITY",fdel$,"RANK",fdel$
  else
    tmp$="RANK",fdel$
  endif
  tmp$=tmp$,"ITEM #",fdel$
  If P9$[40,40] = "Y" let tmp$=tmp$,"VEND ITEM #",fdel$
  tmp$=tmp$,"DESCRIPTION",fdel$
  if P9$[26,26] = "Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"SALES",fdel$
  if X9[1]=1 let tmp$=tmp$,"U/M",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
J = 0
If F = 9 ! sort commodity
  Gosub OPEN_SORT99
  Gosub DO_SORT
Else 
  CH = 9
End If 
HOLDCOMM$ = " ",HOLDCOMM$
K1$ = " ",K1$
L_2000: Search #CH,3,1;K1$,R1,E
If E Goto L_9100
Mat Read #2,R1,0;A$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,298;C5;
Mat Read #2,R1,512;PFU1;
Mat Read #2,R1,554;PFU2;
if custom_customer$="PCS" and a$[152,155]="TIME" goto L_2000:
If X9[1] = 1 Let X3 = C5[3]
If X9[1] = 2 Let X3 = C5[1]
X8[0] = X3
If X9[1] = 1 Gosub L_10000
J = J + 1
If F = 9 !"sort by comm
  If HOLDCOMM$[1,4] <> K1$[1,4] Gosub L_4500
  HOLDCOMM$[1,4] = K1$[1,4]
End If 
X2 = B1[12] \ Gosub L_7700
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[4] = T9[4] + X3 \ T8[4] = T8[4] + X3
X8[1] = X8[1] + X8[0]
If P1 = 100 Goto L_2350
If X8[1] >= (T7 * (P1 / 100)) Let K1$ = "}}}}"
L_2350: Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\TOTALS";
Print #0; Using "-------,--#.##"; Tab 52 + SHIFT;T9[4];
Return 
!
L_4500: Rem SUBTTL
if J8 return ! dx xml
!
If HOLDCOMM$[1,4] = "    " Goto L_4570
Gosub L_5800
Print #0;"\15\";HOLDCOMM$[1,4];" TOTALS";
Print #0; Using "-------,--#.##"; Tab 52 + SHIFT;T8[4];
Print #0;"\15\"
J1 = J1 + 2
L_4570: For I = 0 To 20
  T8[I] = 0
Next I
Return 
!
L_5000: Rem PRINT LINE
if J8
  if F=9 ! sort by commodity
    tmp$=HOLDCOMM$[1,4],fdel$,J Using "#####",fdel$
  else
    tmp$=J Using "#####",fdel$
  endif
  tmp$=tmp$,A$[140,151],fdel$
  If P9$[40,40] = "Y" tmp$=tmp$,A$[93,112],fdel$
  tmp$=tmp$,A$[9,38],fdel$
  If P9$[26,26] = "Y" tmp$=tmp$,A$[63,92],fdel$
  tmp$=tmp$,X3[0] Using "-------,--#.##",fdel$
  If X9[1] = 1 let tmp$=tmp$,SUNIT$,fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
Print #0; Using "#####"; Tab 1;J;
Print #0; Tab 8;A$[140,151];
If P9$[40,40] = "Y" Print #0; Tab 21;A$[93,112];
Print #0; Tab 21 + SHIFT;A$[9,38];
Print #0; Using "-------,--#.##"; Tab 52 + SHIFT;X3[0];
If X9[1] = 1 Print #0;"  ";SUNIT$;
Print #0;" "
If P9$[26,26] = "Y" Print #0; Tab 21 + SHIFT;A$[63,92] \ J1 = J1 + 1
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 442B - ";T9$;
Print #0; Tab 54;"PRODUCT RANKING REPORT"
Print #0; Tab 5;"TOP";P1;"% OF SALES";
Print #0; Tab 56;J2$
Print #0;" "
Print #0; Tab 1;"RANK";
Print #0; Tab 8;"ITEM #";
If P9$[40,40] = "Y" Print #0; Tab 21;"VEND ITEM #";
Print #0; Tab 21 + SHIFT;"DESCRIPTION";
Print #0; Tab 61 + SHIFT;"SALES"
Print #0;" "
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]   
Call ProdGroup(e$,intco,Parm[])               
RETURN                       
!
OUTEND: Rem "EXIT PROGRAM
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
try call dxclose() else rem
end
!
! - Print 'CS'
! - Close #2,#3
! - If Err 0 Rem
! - Close #99
! - If Err 0 Gosub ERR_TRAP
! - SCRATCH$ = "6/SORTWORKC" + Str$(Spc(6))
! - Call FindF(SCRATCH$,A9)
! - If A9
! -   Kill SCRATCH$
! - End If 
! - Chain "MX442"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
Goto OUTEND
!
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[9]
CNVTU[2] = 1
CNVTA = X3
Gosub L_20000
X3 = AMOUNT
If PFU1[9] = -1 Let SUNIT$ = "CWT "
If PFU1[9] = -3 Let SUNIT$ = "LB  "
If PFU1[9] > 0 Mat Read #3,PFU1[9],10;SUNIT$;
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG ! -  If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
OPEN_SORT99: Rem
CH=findchannel() 
! - If Err 0 Rem
! - Close #99
! - If Err 0 Gosub ERR_ESCAPE
SCRATCH$ = "[1:1] 6/SORTWORKC" + Str$(Spc(6)) + "!"
Build #CH,SCRATCH$
R[9] = 25
Search #CH,0,1;F$,R[9],E 
If E Let e$ = "syserrorfile 442b sortfile mode (m)=0 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",F$ \error 10000
R[9] = 1
Search #CH,0,0;F$,R[9],E
If E Let e$ = "syserrorfile 442b sortfile mode (m)=0 keyno (k)=0 r=",R[9]," e=",e," keyval (k$)=",F$ \error 10000
R[9] = 0
Search #CH,1,0;F$,R[9],E
If E Let e$ = "syserrorfile 442b sortfile mode (m)=1 keyno (k)=0 r=",R[9]," e=",e," keyval (k$)=",F$ \error 10000
Return 
!
DO_SORT: Rem print top % and sort by comm code
K1$ = " ",K1$
SORT_LOOP: Search #9,3,1;K1$,R1,E
If E Goto END_SORTLOOP
Mat Read #2,R1,0;A$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,298;C5;
Mat Read #2,R1,512;PFU1;
Mat Read #2,R1,554;PFU2;
GOSUB GET_PRODWHSE:  
if parm[2]=0 goto sort_loop:
K99$ = " ",K99$
K99$[1,4] = A$[152,155]
K99$[5,16] = K1$[5,16]
K99$[17] = A$[140,151]
Search #CH,4,1;K99$,R1,E
If E Let e$ = "syserrorfile 442b sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K99$ \error 10000
If X9[1] = 1 Let X3 = C5[3]
If X9[1] = 2 Let X3 = C5[1]
TX8[0] = X3
If X9[1] = 1 Gosub L_10000
TX8[1] = TX8[1] + TX8[0]
If TX8[1] >= (T7 * (P1 / 100)) Goto END_SORTLOOP
Goto SORT_LOOP
END_SORTLOOP: Rem
Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
