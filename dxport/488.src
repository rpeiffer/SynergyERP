! >>> Program 488
!
! description  S/N Repair History Report
!
! loadsave -w -n 100,10 -o prog/dxport/488.dl4 src/488.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 29, 2004  10:59:11
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx1/sn488.src (univ2) [jcs] {51523}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem SN488 - SERIAL NUMBER REPAIR PRINT
Rem
Rem AUTHOR: UBS JULY 1993 - REV 1.0
!
Declare Intrinsic Sub DateToJulian,InpBuf,JulianToDate,String,Time,VerifyDate
!
!Option Default Dialect IRIS1
Com 1%,SC,SR,Z9[9],J4$[50]
Com 2%,SN[3]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim K$[60],K1$[6],K2$[60],K3$[6],K4$[50],K5$[60],K6$[20]
Dim SN$[224],A$[156],C$[30],V$[30],RP$[132]
Dim UM$[4],P9$[50],UDA$[30],S1$[6],S2$[6],TEMP$[40]
Dim 1%,SN1[2],P1[1],PFU1[20],RP0[2]
Dim 3%,SN3[6],P3[4],RP2[2],INVNO
Dim 2%,SN2[9],D8,Q0[1],D9[5],RP1[3]
Dim FDATE$[8],TDATE$[8],JDATE$[8]
Dim J$[50],J0$[20],J1$[30],J2$[30],J3$[40],J5$[70]
Dim J7$[70],J8$[8],J9$[50],D1$[10],X$[10],M1$[20]
Dim 1%,J0,J2,J3,J4,J5,J6,J9[2],3%,J1
Dim T9$[30],HOLD$[60]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
For J = 2 To 8
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$[1,16];
  Open #J,J$
L_830: Next J
Data "416","1792","2992","-1","1808","2400","1728"

Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Mat Read #1,115,0;D9;
Read #1,3,0;J1$;
Mat Read #1,67,196;UDA$;
Mat Read #1,115,40;Q0; \ If Not(Q0[1]) Let Q0[1] = 2
J$ = "#####" \ M1$ = "#######.",J$[1,Q0[1]]
L_900: Rem START
Gosub L_8000
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
J9 = 60 \ If J8 Let J9 = 20
!!Print 'CS';@0,0;"REPAIR HISTORY PRINT"
!!Print @50,0;"SN488"
!!Goto L_1000
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"488",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("SICODE",K1$) \ K1$ = UCase$(K1$),Blank$
call dxget("EICODE",K3$) \ K3$ = UCase$(K3$),EndParam$
call dxget("SSNUMBER",S1$) \ S1$ = UCase$(S1$),Blank$
call dxget("ESNUMBER",S2$) \ S2$ = UCase$(S2$),EndParam$
call dxget("CORDER",tmp$)  \ if tmp$="" let SORT=1 else SORT = tmp$
!
! product
If K3$ < K1$ Let e$ = "Invalid ending item code, must be >= than starting item code!" \ error 10000
!
! serial #
If S2$ < S1$ Let e$ = "Invalid ending serial number, must be >= than starting serial number!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!

!!L_1000: Rem
!!Print @0,10;"Enter Starting Item Code, <CR>: first,  E: exit  ";
!!Input ""J$ \ If J$ = "E" Goto OUTEND
!!K1$ = J$
!!Input ""J$ \ If J$ = "E" Goto OUTEND
!!If J$ = "" Let J$ = "}}}}}}"
!!K3$ = J$
!!If K1$ <= K3$ Goto L_1070
!!Print @0,20;'RB CE';"INVALID RANGE!" \ Signal 3,30 \ Goto L_1000
!!L_1070: Print @0,14;'CE';"Enter Starting Serial Number, <CR>: first,  E: exit  ";
!!Input ""J$ \ If J$ = "E" Goto OUTEND
!!S1$ = J$
!!Print @6,15;"Ending   Serial Number, <CR>: last,   E: exit  ";
!!Input ""J$ \ If J$ = "E" Goto OUTEND
!!If J$ = "" Let J$ = "}}}}}}"
!!S2$ = J$
!!If S1$ <= S2$ Goto L_1120
!!Print @0,22;'CE';"INVALID RANGE!" \ Signal 3,30 \ Goto L_1070
!!L_1120: Print @0,18;'CE';"Print in  1: Item or  2: Serial  Code order?  ";
!!Input ""J$ \ If J$ = "E" Goto OUTEND
!!If J$ <> "1" If J$ <> "2" Goto L_1120
!SORT = J$
!L_1160: Print @0,20;'CE';"CHOOSE:  P: print,  R: reselect,  E: exit   ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ = "R" Goto L_1000
!If J$ <> "P" Goto L_1160
!!Goto L_1900
!!L_1900: Rem
!!Print @0,22;'CE';"PRINTING, PLEASE WAIT" \ Signal 3,0
!!If Err 0 Gosub ERR_ESCAPE
!!goto startPrinting
!
if J8 
  J0 = 6 \ Gosub L_5700
  tmp$ = D1$,fdel$
  tmp$ = tmp$, "PRODUCT DESCRIPTION",fdel$
  tmp$ = tmp$, "PRODUCT DESCRIPTION 2",fdel$
  tmp$ = tmp$, "MODEL",fdel$
  tmp$ = tmp$, "LAST RPR",fdel$
  tmp$ = tmp$, "STATUS",fdel$
  tmp$ = tmp$, "WRNTY RPR$",fdel$
  tmp$ = tmp$, "REIMB $",fdel$
  tmp$ = tmp$, "NON-WRNTY",fdel$
  tmp$ = tmp$, trim$(UDA$[1,14]),fdel$
  tmp$ = tmp$, trim$(UDA$[15,28]),fdel$
  tmp$ = tmp$, "SERIAL NUMBER",fdel$
  tmp$ = tmp$, "MFR EXPIRES",fdel$
  tmp$ = tmp$, "OURS EXPIRES",fdel$
  tmp$ = tmp$, "DATE",fdel$
  tmp$ = tmp$, "PROBLEM DESCRIPTION",fdel$
  tmp$ = tmp$, "PROBLEM DESCRIPTION 2",fdel$
  tmp$ = tmp$, "ORDER",fdel$
  tmp$ = tmp$, "WTY",fdel$
  tmp$ = tmp$, "REPAIR $",fdel$
  tmp$ = tmp$, "CLAIM",fdel$
  tmp$ = tmp$, "INVOICE",fdel$
  tmp$ = tmp$, "WH",fdel$
  tmp$ = tmp$, "COST",fdel$
  tmp$ = tmp$, "CUSTOMER",fdel$
  tmp$ = tmp$, "CUSTOMER NAME",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
endif
!
startPrinting:
!!-!If J8 Print 'CS'
J1 = 99;J2 = 0
If SORT = 1 Let K$ = K1$
If SORT = 2 Let K$ = S1$
HOLD$ = " ",HOLD$
L_2000: Rem LOOP IT
Search #4,3,SORT;K$,R4,E
If E = 2 Goto L_9100
TEMP$ = K$[1,12] \ If SORT = 2 Let TEMP$ = K$[31,42]
If TEMP$[1,Len(K1$)] < K1$ Goto L_2000
If TEMP$[1,Len(K3$)] > K3$ Goto L_2000
TEMP$ = K$[13,42] \ If SORT = 2 Let TEMP$ = K$[1,30]
If TEMP$[1,Len(S1$)] < S1$ Goto L_2000
If TEMP$[1,Len(S2$)] > S2$ Goto L_2000
Gosub L_6100
Gosub L_3000
Goto L_2000
Gosub L_6500
HEDR = 0 \ If HOLD$[1,12] <> RP$[1,12] Let HEDR = 9
If HOLD$[13,42] <> RP$[13,42] Let HEDR = 9
HOLD$ = RP$[1,42]
Gosub L_5800
If HEDR Gosub L_5000
Gosub L_5200
Goto L_2000
!
L_3000: Rem GET/READ SERIAL NUMBER
K2$ = " ",K2$ \ K2$[1,30] = RP$[13,42]
L_3010: 
Search #2,3,1;K2$,R2,E
If E = 2 Return 
If K2$[1,30] <> RP$[13,42] Return 
Gosub L_6000
If SN$[1,12] <> RP$[1,12] Goto L_3010
Return 1
!
L_4600: Rem MFG EXPIRE
X2 = SN2[1] \ Gosub L_7700
EXPD = SN2[9] \ Gosub L_4700
if J8
  tmp1$ = tmp1$,X$,fdel$  !!mfr expires
else
  Print #0; Tab 40;X$;"  ";
end if
Return 
!
L_4650: Rem OURS
X2 = SN2[6] \ Gosub L_7700
EXPD = SN2[7] \ Gosub L_4700
if J8
  tmp1$ = tmp1$,X$,fdel$  !!ours expires
else
  Print #0; Tab 55;X$;"  ";
end if
Return 
!
L_4700: Rem GET MFG WARRANTY EXPIRE
If X$ = "00/00/00" Or X$[1,3] = "   " Goto L_4795
FLG = 1;E = 0;FDATE$ = X$[1,8]
Call VerifyDate(FDATE$,TDATE$,E)
FDATE$ = TDATE$;FLG = 1;E = 0
Call DateToJulian(FLG,FDATE$,TDATE$,E)
DAYS = TDATE$;DAYS = DAYS + EXPD
JDATE$ = 100000 + DAYS Using "#######";FDATE$ = JDATE$[3]
FLG = 1;E = 0
Call JulianToDate(FLG,FDATE$,X$,E)
L_4795: Return 
!
L_5000: Rem PRINT INFO
If J8
  J1 = J1 + 2
  tmp1$ = SN$[1,12],fdel$
  tmp1$ = tmp1$,trim$(SN$[85,114]),fdel$  !!product description
  tmp1$ = tmp1$,trim$(SN$[115,144]),fdel$  !!product description 2
  tmp1$ = tmp1$,trim$(SN$[65,84]),fdel$  !!model
  X2 = SN2[8] \ Gosub L_7700
  tmp1$ = tmp1$,X$[1,8],fdel$  !!last rpr
  If SN1[2] = 0 tmp1$ = tmp1$,"OPEN",fdel$  !!status
  If SN1[2] = 1 tmp1$ = tmp1$,"SOLD",fdel$
  If SN1[2] = 2 tmp1$ = tmp1$,"ON HOLD",fdel$
  If SN1[2] = 3 tmp1$ = tmp1$,"COMMITTED",fdel$
  If SN1[2] = 4 tmp1$ = tmp1$,"IN PROCESS",fdel$
  If SN1[2] = 5 tmp1$ = tmp1$,"ON CR MEMO",fdel$
  tmp1$ = tmp1$,SN3[5] Using "-------#.##",fdel$  !!wrnty rpr$
  tmp1$ = tmp1$,SN3[6] Using "-------#.##",fdel$  !!reimb$
  tmp1$ = tmp1$,SN3[3] Using "-------#.##",fdel$  !!non-wrnty
  tmp1$ = tmp1$,trim$(SN$[205,224]),fdel$  !!s/n uda1
  tmp1$ = tmp1$,SN3[4] Using "-------#.####",fdel$  !!s/n uda2
  tmp1$ = tmp1$,trim$(SN$[35,64]),fdel$  !!serial number
  Gosub L_4600
  Gosub L_4650
Else
  If (J1 + 6) > J9 Let J1 = 99 \ Gosub L_5800
  !
  Print #0;"\15\" \ J1 = J1 + 2
  Print #0; Tab 1;SN$[1,12];
  Print #0; Tab 15;SN$[85,114]; Tab 50;SN$[65,84];
  X2 = SN2[8] \ Gosub L_7700
  Print #0; Tab 75;X$[1,8];
  Print #0; Using "-------#.##"; Tab 85;SN3[5];
  Print #0; Tab 100;SN$[205,224]
  Print #0; Tab 15;SN$[115,144];
  If SN1[2] = 0 Print #0; Tab 50;"OPEN";
  If SN1[2] = 1 Print #0; Tab 50;"SOLD";
  If SN1[2] = 2 Print #0; Tab 50;"ON HOLD";
  If SN1[2] = 3 Print #0; Tab 50;"COMMITTED";
  If SN1[2] = 4 Print #0; Tab 50;"IN PROCESS";
  If SN1[2] = 5 Print #0; Tab 50;"ON CR MEMO";
  Print #0; Using "-------#.##"; Tab 73;SN3[6]; Tab 85;SN3[3];
  Print #0; Using "--------#.####"; Tab 100;SN3[4]
  Print #0; Tab 1;SN$[35,64];
  Gosub L_4600
  Gosub L_4650
  !
  Print #0;"\15\"
  Print #0;"  DATE"; Tab 10;"DESCRIPTION"; Tab 46;"ORDER";
  Print #0; Tab 55;"WTY"; Tab 70;"REPAIR $"; Tab 90;"CUSTOMER"
  Print #0; Tab 4;"CLAIM"; Tab 44;"INVOICE"; Tab 55;"WH";
  Print #0; Tab 73;"COST"; Tab 90;"NAME"
End If
J1 = J1 + 5 \ Gosub L_5800
Return
!
L_5200: Rem DETAIL LINE
X2 = RP1[0] \ Gosub L_7700
If J8
  tmp$ = tmp1$,X$[1,8],fdel$  !!date
  tmp$ = tmp$,trim$(RP$[43,72]),fdel$  !!problem description
  tmp$ = tmp$,trim$(RP$[73,102]),fdel$  !!problem description 2
  tmp$ = tmp$,RP1[1] Using "######",fdel$  !!order
  X$ = "NO" 
  If RP0[0] = 1 Let X$ = "YES"
  tmp$ = tmp$,X$[1,3],fdel$  !!wty
  tmp$ = tmp$,RP2[0] Using "$------#.##",fdel$  !!repair $
  X$ = "NO" 
  If RP0[2] = 1 Let X$ = "YES"
  If RP0[2] = 2 Let X$ = "PAID"
  tmp$ = tmp$,X$[1,4],fdel$  !!claim
  tmp$ = tmp$,RP2[2] Using "########",fdel$  !!invoice
  tmp$ = tmp$,RP0[1] Using "##",fdel$  !!wh
  tmp$ = tmp$,RP2[1] Using "$------#.##",fdel$  !!cost
  tmp$ = tmp$,RP1[3] Using "######",fdel$  !!customer
  tmp$ = tmp$,trim$(RP$[103,132]),fdel$  !!customer name
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  Print #0; Tab 1;X$[1,8];
  Print #0; Tab 10;RP$[43,72];
  Print #0; Using "######"; Tab 45;RP1[1];
  X$ = "NO" \ If RP0[0] = 1 Let X$ = "YES"
  Print #0; Tab 55;X$[1,3];
  Print #0; Using "$------#.##"; Tab 67;RP2[0];
  Print #0; Using "######"; Tab 90;RP1[3]
  X$ = "NO" \ If RP0[2] = 1 Let X$ = "YES"
  If RP0[2] = 2 Let X$ = "PAID"
  Print #0; Tab 4;X$[1,4];
  Print #0; Using "########"; Tab 10;RP$[73,102]; Tab 43;RP2[2];
  Print #0; Using "##"; Tab 55;RP0[1];
  Print #0; Using "$------#.##"; Tab 67;RP2[1];
  Print #0; Tab 90;RP$[103,132]
End If
J1 = J1 + 1
Return 
!
L_5700: Rem GET FLD
J6 = (J0 - 1) * 10
If J6 < 0 Let J6 = 0
Read #1,18,J6;D1$;
Return 
!
L_5800: Rem HEADINGS ROUTINE
If J8 return
!
J1 = J1 + 1 \ If J1 < J9 Return
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 488 - ";T9$;
Print #0; Tab 53;"SERIAL NUMBER REPAIR REPORT"
Print #0;"\15\";
J0 = 6 \ Gosub L_5700
Print #0;D1$;
Print #0; Tab 15;"DESCRIPTION"; Tab 50;"MODEL"; 
Print #0; Tab 75;"LAST RPR"; Tab 85;"WRNTY RPR$";
Print #0; Tab 100;UDA$[1,14]
Print #0; Tab 50;"STATUS"; Tab 75;"REIMB $";
Print #0; Tab 85;"NON-WRNTY";
Print #0; Tab 100;UDA$[15,28]
Print #0; Tab 1;"SERIAL NUMBER";
Print #0; Tab 40;"MFR EXPIRES";
Print #0; Tab 55;"OURS EXPIRES";
Print #0;""
Print #0;"\15\";
Return 
!
L_6000: Rem READ
Mat Read #2,R2,0;SN$;
Mat Read #2,R2,284;INVNO;
Mat Read #2,R2,290;SN1;
Mat Read #2,R2,298;SN2;
Mat Read #2,R2,342;SN3;
If Z9 = 0 If SN1[1] = 0 Let SN1[1] = PFU1[0]
If SN1[1] > 0 Read #8,SN1[1],10;UM$;
Return 
!
L_6100: Rem READ TRANS
Mat Read #4,R4,0;RP$;
Mat Read #4,R4,132;RP0;
Mat Read #4,R4,138;RP1;
Mat Read #4,R4,154;RP2;
Return 
!
L_6500: Rem GET PROD
J3$ = SN$[1,12]
Search #3,2,1;J3$,R3,E \ If E Return 
Mat Read #3,R3,0;A$;
Mat Read #3,R3,512;PFU1;
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
! - X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
! - X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
! - Return 
!
L_8000: Rem CLEAR
SN$ = " ",SN$;RP$ = " ",RP$
For K = 0 To 9
  If K <= 2 Let SN1[K] = 0;RP0[K] = 0
  SN2[K] = 0
  If K <= 6 Let SN3[K] = 0
  If K <= 3 Let RP1[K] = 0
  If K <= 2 Let RP2[K] = 0
Next K
Return 
!
L_9100: Rem END OF RANGE
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!If K1$ = "" And K3$[1,5] = "}}}}}" Goto OUTEND
!!Goto L_900
!!Stop 
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End 
!
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
!
Rem {end rtn.error.s}
