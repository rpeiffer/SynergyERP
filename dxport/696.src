! >>> Program 696
!
! description  P/I Inventory Exceptions
!
! loadsave -w -n 100,10 -o prog/dxport/696.dl4 src/696.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 19, 2006  16:28:41
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx696.src (univ2) [txc] {52311}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX696     -  PHYSICAL INVENTORY EXCEPTION REPORT
Rem              (OTHERWISE KNOWN AS THE NOT COUNTED REPORT)
Rem "Last Update: 03/01/85 MULTI-WHSE
!
Declare Intrinsic Sub InpBuf,String
Declare Intrinsic Function FindChannel
!
!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,PL1[1],RASL[5],FOUNDGOODTAG
Dim K1$[50],A$[156],CNAME$[30],CURDATE$[8],P2$[6],F$[60],FILE$[60]
Dim 3%,P1[2],T[9],T1[9],T2[9],W3[24],R[99]
Dim P0$[66],3%,P3[3]
Dim 3%,SUNIT,BKUNIT,CUNIT,SUNIT$[4],BKUNIT$[4],CUNIT$[4],AMOUNT
Dim 2%,Q0[1],PMASK$[12],STCOMDY$[4],ENDCOMDY$[4],HPROD$[12]
Dim W9$[2],K2$[30],K3$[30],K4$[30],J$[10],X$[10],STPROD$[12],ENDPROD$[12]
Dim P9$[50],2%,D9[5],W9[1],B[24],W2$[16],K6$[60],SPACES$[6]
Dim LOC1$[6],LOC2$[6],Z1$[50],ZERO$[1],PLOC$[18],K7$[50],KF8$[50]
Dim K11$[4],L11$[5],L2$[2],3%,WHLBS[1],PRPARC[3],LBSOH
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[2500],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="{",EndParam$
dim EndParam1$[12] \ EndParam1$="}",EndParam1$
!
Dim exclude$[500]
Dim commaString$[300],XX$[40]
!
!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
!J9 = 55 \ If J8 Let J9 = 18
!
If Err 0 Let F = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60
If F Let L9 = 20
J8 = F
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For I = 2 To 11
  Read X \ If X = -1 Goto L_825
  Read #1,88,X;K1$;
  Ropen #I,K1$
L_825: 
Next I
Data "704","2528","1792","1728","1744","208","2352","-1","-1","2288"
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!!Window On 
Mat Read #1,3,0;CNAME$;
Read #1,3,164;CURDATE$;
SPACES$ = " ",SPACES$
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"696",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("WHSE",tmp$) \ W9[0] = tmp$ !!##
call dxget("BALANCE",tmp$) \ if tmp$ = "" let ZERO$ = "N" else ZERO$ = "Y"  !!check 
call dxget("SPROD",STPROD$) \ STPROD$ = STPROD$,Blank$
call dxget("EPROD",ENDPROD$) \ ENDPROD$ = ENDPROD$,EndParam$
call dxget("ALLCODE",tmp$) \ if tmp$ = "" let ALTF = 0 else ALTF = 9  !!check
call dxget("SCOMMDY",tmp$) \ STCOMDY$ = tmp$,Blank$
call dxget("ECOMMDY",tmp$) \ ENDCOMDY$ = tmp$,EndParam1$
call dxget("EXCLUDE",exclude$)
!
!validations warehouse
If D9[5] = 1 let  W9[0] = 1
If W9[0] < 1 Or W9 > D9[5] let e$ = "Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000
!
!products with zero balances?
If P9$[41,41] = "W" Call "CHKWRASL",W9,RASL[]
If ENDPROD$ < STPROD$ let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
!commodity code
If ENDCOMDY$ < STCOMDY$ let e$ = "Invalid ending commodity code, must be >= than starting commodity code!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!

!Exclude
! - parseChannel=FindChannel()
! - gosub L_15440 !!Building File to handle the comma separated string for excluded commodity codes
commaString$=exclude$
verifChannel=11
keyLength=4
alphanumeric=1
errorFlag=0
CFLG = 1
gosub parseCommaString
if errorFlag=1 Let e$ = "Commodity ",tmp$," not Found" \ error 10000
if errorFlag=2 Let e$ = "Error building commodities list" \ error 10000
if errorFlag=3 Let CFLG = 0
!
!!L_1000: Rem 
!!Print 'CS'
!!Print @0,0;"MX696";@25,0;"PHYSICAL EXCEPTION REPORT"
!!Print @5,5;"ENTER WAREHOUSE TO PRINT OR  E: TO EXIT: "
!!Print @5,7;"INCLUDE PRODUCTS WITH ZERO BALANCES? (Y/<CR>) "
!!If D9[5] = 1 Print @46,5;"1" \ W9[0] = 1 \ Goto L_1150
!!L_1120: !!Print @46,5;'CL'; \ Input ""K1$ \ If K1$ = "E" Goto outend !!L_9010
!!W9[0] = K1$ \ If W9[0] < 1 Or W9 > D9[5] Goto L_1120
!!L_1150: Rem
!!If P9$[41,41] = "W" Call "CHKWRASL",W9,RASL[]
!!L_1155:! Print @51,7;'CL'; \ Input ""K1$ \ If K1$ = "" Let K1$ = "N"
!!If K1$ = "N" Print @51,7;"NO" \ ZERO$ = "N" \ Goto L_1200
!!If K1$ = "Y" Print @51,7;"YES" \ ZERO$ = "Y" \ Goto L_1200
!!Goto L_1155
!!L_1200: !!Print @5,9;"STARTING PRODUCT CODE <CR> FOR ALL ";
!!Input ""K1$
!!If K1$ = "" Let STPROD$ = "" \ ENDPROD$ = "{",ENDPROD$ \ Goto L_1300
!!STPROD$ = K1$
!!Print @5,10;"ENDING PRODUCT CODE <CR> FOR LAST ";
!!Input ""K1$
!!If K1$ = "" Let ENDPROD$ = "{",ENDPROD$ \ Goto L_1300
!!ENDPROD$ = K1$
!!If ENDPROD$ < STPROD$ Goto L_1200
!!L_1300: !!Print @5,11;"PRINT ALL ALTERNATIVE ITEM CODES? (Y/N)   ";
!!Input ""Z1$ \ If Z1$ = "E" Goto OUTEND
!!If Z1$ <> "Y" If Z1$ <> "N" Goto L_1300
!!ALTF = 0
!!If Z1$ = "Y" Let ALTF = 9
!!Print @5,12;"STARTING COMMODITY CODE <CR> FOR ALL ";
!!Input ""K1$
!!STCOMDY$ = K1$,"    "
!!If K1$ = "" Let STCOMDY$ = "    ";ENDCOMDY$ = "{",ENDCOMDY$ \ Goto L_1500
!!Print @5,13;"ENDING  COMMODITY CODE <CR> FOR LAST  ";
!!Input ""K1$
!!ENDCOMDY$ = K1$,"}}}}"
!!If K1$ = "" Let ENDCOMDY$ = "{",ENDCOMDY$
!!L_1500: !!Gosub L_15000!!!!!!!!!!!!!
!!L_1510: !!Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E"  Goto outend !!L_9010
!!If Z1$ = "R" Goto L_1000
!!If Z1$ <> "P" Goto L_1510
!!!end input
!!If L9 > 30 Print @0,22;'CE';"Printing...please wait"; Else Print 'CS'
!!If Err 0 Gosub ERR_ESCAPE
!
if j8
  tmp$ = "PRODUCT",fdel$
  tmp$ = tmp$ ,"DESCRIPTION",fdel$
  tmp$ = tmp$ ,"DESCRIPTION 2",fdel$
  tmp$ = tmp$ ,"WHSE #",fdel$
  tmp$ = tmp$ ,"STOCK LOCATION",fdel$
  tmp$ = tmp$ ,"BOOK QUANTITY",fdel$
  tmp$ = tmp$ ,"U/M",fdel$
  tmp$ = tmp$ ,"UNIT COST",fdel$
  tmp$ = tmp$ ,"DOLLAR EXTENSION",fdel$
  If P9$[1,1] <> "N" let tmp$ = tmp$ ,"LOT NUMBER",fdel$
  tmp$ = tmp$ ,"CATCH WGT",fdel$
  If Not(RASL) let tmp$ = tmp$ ,"MULT LOCATIONS",fdel$
  if ALTF let tmp$ = tmp$ ,"ALT ITEMS ",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
Gosub L_5800
K1$ = " ",K1$
K1$ = STPROD$
L_2000: Rem LOOP IT HERE !!
L_2020: 
Search #3,3,4;K1$,V2,E 
If E Goto L_8000
W9[1] = K1$[13,14] \ If W9[1] <> W9 Goto L_2000
If X0 If X0 <> W9[1] Goto L_8000
L_2042: 
Mat Read #3,V2;P0$;
Mat Read #3,V2,82;P3;
Mat Read #3,V2,114;P2$;
If P0$[1,Len(ENDPROD$)] > ENDPROD$ Goto L_8000
If P0$[1,Len(STPROD$)] < STPROD$ Or P0$[1,Len(ENDPROD$)] > ENDPROD$ Goto L_2020
If L8 > 0 
  if not(j8) Print #0;" " 
  L = L + 1
End if
L8 = 0 \ X0 = W9[1] \ Gosub L_3000
If Not(CFLG) Goto L_2055
K11$ = " ",K11$ \ K11$ = A$[152,155]
Search #9,2,1;K11$,R[11],E 
If E Goto L_2055
If K11$ = A$[152,155] Goto L_2000
L_2055: Rem
If A$[152,(151 + Len(STCOMDY$))] < STCOMDY$ Goto L_2000
If A$[152,(151 + Len(ENDCOMDY$))] > ENDCOMDY$ Goto L_2000
If ZERO$ = "N" If W3[0] = 0 Goto L_2000
KF8$ = " ",KF8$;KF8$[1,12] = A$[140,151]
K4$[1,2] = X0 Using "##"
K4$[3,8] = V3 Using "######"
If RASL
  K4$[9,14] = P2$[1,6];K4$[15] = ""
Else 
  K4$[9] = ""
End If 
K3$ = K4$
A[0] = P3[0] - P3[1]
FOUNDGOODTAG = 0
TAG_LOOP:
Search #2,3,2;K4$,V1,E 
If RASL
  If K4$[1,14] <> K3$[1,14] Or E
    If FOUNDGOODTAG = 0
      Goto L_2200
    Else 
      Goto L_2000
    End If 
  End If 
Else 
  If K4$[1,8] <> K3$[1,8] Or E
    If FOUNDGOODTAG = 0
      Goto L_2200
    Else 
      Goto L_2000
    End If 
  End If 
End If 
Mat Read #2,V1,26;P1;
If P1[0] = -99 Goto L_2200
FOUNDGOODTAG = 1
Goto TAG_LOOP
!
L_2200: Rem "=======
Gosub L_5000
Goto L_2000
L_2230: Rem
Goto L_2042
L_3000: Rem READ PRODUCT
If K1$[1,1] = "" Or K1$[1,12] = "            " Let A$ = "~",A$ \ Return 
K2$ = " ",K2$ \ K2$ = K1$[1,12]
Search #4,2,1;K2$,V3,E 
If E Let A$ = "~",A$ \ Return 
Mat Read #4,V3,0;A$;
Mat Read #4,V3,156;B;
Mat Read #4,V3,256;A;
Mat Read #4,V3,512;PFU1;
Mat Read #4,V3,554;PFU2;
Mat Read #4,V3,596;PRPARC;
K7$ = " ",K7$ \ K7$[1,12] = A$[140,151]
Gosub L_4000
If P9$[32,32] = "Y" If W3[15] Let B[21] = W3[15]
If Len(LOC1$) < 6 Let LOC1$[Len(LOC1$) + 1,6] = SPACES$[Len(LOC1$) + 1,6]
If Len(LOC2$) < 6 Let LOC2$[Len(LOC2$) + 1,6] = SPACES$[Len(LOC2$) + 1,6]
Return 
!
L_3300: Rem PROD LOC
PLOC$ = " ",PLOC$
Search #7,3,1;K7$,R7,E
If E Return 
If K7$[1,12] <> A$[140,151] Return 
Mat Read #7,R7,18;PL1;
If PL1[0] <> W9[0] Return 
Mat Read #7,R7,0;PLOC$;
Return 
!
L_3400: Rem PRIN PRINT MULTI LOCS
PTAB = 50
L_3420:
Gosub L_3300
If PLOC$[13,18] = "      " Return 
If LOC1$[1,6] = PLOC$[13,18] Or LOC2$[1,6] = PLOC$[13,18] Goto L_3420
if j8!!xml
  tmp$ = tmp$ ,PLOC$[13,18]," "
else
  Print #0; Tab PTAB;PLOC$[13,18];
End if !!!
PTAB = PTAB + 8
If PTAB <= 58 Goto L_3420
Return 
!
L_3800: Rem GET ALL ALT ITEMS
DONE = 0
L_3810: Search #8,3,2;KF8$,R8,E \ If E = 2 Let DONE = 9
!!If E If Not(DONE) Gosub ERR_SEARCH
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
L_4000: Rem "=========================================== get whse record
LOC1$ = " ",LOC1$;LOC2$ = " ",LOC2$;W2$ = " ",W2$;K6$ = " ",K6$
LBSOH = 0
K6$[1,12] = A$[140,151];K6$[13,14] = W9[0] Using "##"
Search #6,2,1;K6$,R6,E 
If E Return 
Mat Read #6,R6,78;W3;
Mat Read #6,R6,404;W2$;
Mat Read #6,R6,980;WHLBS;
LBSOH = WHLBS[0]
Return 
!!
L_5000: Rem TOTAL FOR THIS PART
Gosub L_10000
If A$[152,155] = "MACH" Return 
If A$[152,155] = "LABR" Return 
If L8 > 0 Goto L_5070
if j8 !!xml
  tmp$ = rtrim$(A$[140,151]),fdel$ !!Product
  tmp$ = tmp$,rtrim$(A$[9,38]),fdel$  !!Description 
  tmp$ = tmp$ ,rtrim$(A$[63,92]),fdel$!!description2
else 
  Print #0; Tab 1;A$[140,151]; !!Product
  Print #0; Tab 15;A$[9,38];  !!Description 
End if!!
L_5070: 
if J8!!xml
  If L8 > 0 let tmp$ = X0 Using "##",fdel$ else tmp$ = tmp$ ,X0 Using "##",fdel$  !!whse
  If RASL let tmp$ = tmp$,P2$[1,6],fdel$ !!stock location
  If Not(RASL)
    If LOC1$[1,6] = "      " And LOC2$[1,6] = "      "   Gosub L_3400 \ tmp$ = tmp$,"",fdel$ \ Goto L_5150
    If LOC1$[1,6] <> "      " let tmp$ = tmp$ ,LOC1$[1,6]," " 
    If LOC2$[1,6] <> "      " let tmp$ = tmp$ ,LOC2$[1,6],fdel$ \ Goto L_5150
    Gosub L_3400
	tmp$ = tmp$ ,"",fdel$
  End If
Else
  Print #0; Using "##"; Tab 47;X0; !!whse
  If RASL Print #0; Tab 50;P2$[1,6]; 
  If Not(RASL)
    PTAB = 50
    If LOC1$[1,6] = "      " And LOC2$[1,6] = "      " Gosub L_3400 \ Goto L_5150
    If LOC1$[1,6] <> "      " Print #0; Tab PTAB;LOC1$[1,6]; \ PTAB = PTAB + 8
    If LOC2$[1,6] <> "      " Print #0; Tab PTAB;LOC2$[1,6]; \ Goto L_5150
    Gosub L_3400
  End If 
End if!!
!
L_5150: 
if J8!!xml
  tmp$ = tmp$ ,BKUNIT Using "-------#.##",fdel$!!book quantity
  tmp$ = tmp$ ,rtrim$(SUNIT$),fdel$ !!UM
  tmp$ = tmp$ ,CUNIT Using PMASK$," ",rtrim$(CUNIT$),fdel$!!unit cost
  tmp$ = tmp$ ,FNR(A[0] * B[21]) Using "---------#.##",fdel$ !!dollar extension
  If P9$[1,1] <> "N"  !!Lost number
    If P9$[1,1] = "Y" let tmp$ = tmp$ ,rtrim$(P0$[13,24])
    If P9$[1,1] = "B" If A$[113,113] = "Y" let tmp$ = tmp$ ,rtrim$(P0$[13,24])
    tmp$ = tmp$ ,"",fdel$
  End if
  !!tmp$ = tmp$ ,rtrim$(A$[63,92]),fdel$!!description2
  If A$[127,127] = "Y" And HPROD$ <> A$[140,151] ! " Print Catch Weight LBS
    tmp$ = tmp$ ,LBSOH Using "-------#.##"," ","LB",fdel$ !!!field 1
    L = L + 1
    HPROD$ = A$[140,151]
  Else 
    tmp$ = tmp$ ,"",fdel$!!!!field 1
  End If 
Else
  Print #0; Using "-------#.##"; Tab 65;BKUNIT;!!book quantity
  Print #0; Tab 77;SUNIT$; !!UM
  Print #0; Using PMASK$; Tab 85;CUNIT;" ";CUNIT$;;!!unit cost
  Print #0; Using "---------#.##"; Tab 100;FNR(A[0] * B[21]); !!dollar extension
  If P9$[1,1] = "Y" Print #0; Tab 115;P0$[13,24];!Lost number
  If P9$[1,1] = "B" If A$[113,113] = "Y" Print #0; Tab 115;P0$[13,24];!Lost number
  Print #0;""
  Print #0; Tab 15;A$[63,92];!!description2
  If A$[127,127] = "Y" And HPROD$ <> A$[140,151] ! " Print Catch Weight LBS
    Print #0; Using "-------#.##"; Tab 65;LBSOH;
    Print #0; Tab 77;"LB"
    L = L + 1;HPROD$ = A$[140,151]
  End If 
End if!!!
If Not(RASL)
  Gosub L_3400
  if j8 !!xml
    tmp$ = tmp$,fdel$ ! end of mult locations
  End if !!  
End if
if not(j8)  Print #0;"" 
L = L + 1
If ALTF 
  Gosub L_5400
  if j8 !!xml
    tmp$ = tmp$,"",fdel$ ! end of alt items
  End if!!
End if
if j8!!
  call addtostr(e$,rstr$,tmp$+rdel$)
end if!!
L8 = L8 + 1
L = L + 1
If BKUNIT > 0 Let T1 = T1 + BKUNIT
If A[0] > 0 Let T1[1] = T1[1] + FNR(A[0] * B[21])
If L > L9 Gosub L_5800
Return 
!
L_5400: Rem PRINT ALTS
POS1 = 0 \ Gosub L_3800
If Not(DONE) 
  if j8 !!xml
    tmp$ = tmp$ ,rtrim$(KF8$[13,36])
  else
    Print #0; Tab 1;"ALT ITEMS: ";KF8$[13,36];
  End if!!
End if
If Not(DONE) Let POS1 = 35
L_5420: If Not(DONE) Gosub L_3810
If Not(DONE) 
  if J8 !!xml
    tmp$ = tmp$ ," ,", rtrim$(KF8$[13,36]) 
  else
    Print #0;", ";KF8$[13,36]; 
  End if !!
  POS1 = POS1 + 26
End if
If Not(DONE) 
  If POS1 > 106 !
    if not(j8) Print #0;"" 
    L = L + 1;POS1 = 0
  End if
end if
If Not(DONE) Goto L_5420
if not(j8) If POS1 Print #0;"" 
L = L + 1
Return 
!
L_5800: Rem TOP OF FORM
if j8 return 
If P = 0 Goto L_5835
If L9 > 30 Goto L_5830
!!Print "PRESS <CR> TO CONTINUE ";
!!Input ""J$
!!Print 'CS'; 
Goto L_5835
L_5830:  if not(J8) Print #0;"\14\"
L_5835: P = P + 1
Print #0; Tab 2;CURDATE$; Tab (66 - (Len(CNAME$) / 2));CNAME$; Tab 115;"PAGE ";P
Print #0;" - 696 - ";Msc$(3);
Print #0; Tab 44;"P H Y S I C A L   E X C E P T I O N   R E P O R T"
Print #0;" "
Print #0; Tab 1;"PRODUCT"; Tab 15;"DESCRIPTION";
Print #0; Tab 52;"STOCK"; Tab 69;"BOOK"; Tab 87;"UNIT"; Tab 104;"DOLLAR"
Print #0; Tab 43;"WHSE #";
Print #0; Tab 51;"LOCATION"; Tab 67;"QUANTITY"; Tab 77;"U/M"; Tab 87;"COST";
Print #0; Tab 103;"EXTENSION";
If P9$[1,1] <> "N" Print #0; Tab 115;"LOT NUMBER";
Print #0;"\15\"
L = 7
Return 
!
L_8000: Rem END OF FILE & WHSE TOTALS
If W9[1] = 0 Goto L_2230
if not (j8)
  Print #0;"\15\\15\";
  Print #0; Tab 40;"*** WAREHOUSE TOTALS ***";
  Print #0; Using "-------#.##"; Tab 65;T1;
  Print #0; Using "----------#.##"; Tab 99;T1[1]
End if
For I = 0 To 1
  T2[I] = T2[I] + T1[I]
  T1[I] = 0
Next I
If X0 = D9[5] Goto L_8110
Gosub L_5800
If Not(W9[0]) If X0 <> W9[1] Goto L_2230
L_8110: 
if not (J8)
  Print #0;"\15\\15\";
  Print #0; Tab 40;"*** REPORT TOTALS ***";
  Print #0; Using "-------#.##"; Tab 65;T2;
  Print #0; Using "----------#.##"; Tab 99;T2[1]
endif
goto outend
!
!!OUTEND: Rem EXIT ROUTINE
!If L9 < 30 Goto L_9100
!L_9005: Rem
!L_9010: Print 'CS'
!Close 
!Chain "MX000"
!Stop 
!L_9100: Rem FOR SCREEN PRINT ONLY
!Print "\15\PRESS <CR> TO EXIT ";
!Input ""K1$
!Goto L_9005
!Stop 
L_10000: Rem CONVERT
If PFU1[8] = -1 Let SUNIT$ = "CWT "
If PFU1[8] = -3 Let SUNIT$ = "LB  "
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
CUNIT$ = " ",CUNIT$
If PFU1[11] = -1 Let CUNIT$ = "CWT "
If PFU1[11] = -2 Let CUNIT$ = "LOT "
If PFU1[11] = -3 Let CUNIT$ = "LB  "
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = A[0]
Gosub L_20000 \ BKUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2;CNVTA = B[21]
Gosub L_20000 \ CUNIT = AMOUNT
Return 
!
!!-!L_15000: Rem COMMODITY CODE SELECTION
!!-!!!Print 'CS' 
!!-!Gosub L_15440
!!-!CO = 2;RO = 8
!!-!!!Print @25,0;"Commodity Code Selection"
!!-!!!Print @0,5;" S: select Codes to Exclude, or  <CR>: none ";'CL';
!!-!Input Len 5;""L11$
!!-!If L11$ = "" Let CFLG = 0 \ Return 
!!-!CFLG = 1
!!-!!!Print @0,8;'BR'; Tab 32;"EXCLUDE"; Tab 78;'ER';
!!-!L_15090:!! L11$ = " ",L11$
!!-!L_15100: !!Print @0,5;"Enter Commodity Code to Exclude,  -: to search, or  E: to end entry ";'CL';
!!-!Input Len 5;""L11$
!!-!If L11$[1,1] = "-" Swap 1,"SW684" \ Goto L_15100
!!-!If L11$ = "E"
!!-!L_15140: Input @42,6;"Selections Correct? (Y/N) "L2$
!!-!  If L2$[1,1] = "Y" Let CFLAG = 1 \ Return 
!!-!  If L2$[1,1] <> "N" Goto L_15140 Else Goto L_15000
!!-!End If 
!!-!If L11$ = "" Goto L_15090
!!-!Goto L_15340
!!-!L_15200: Rem display seclected commodity codes
!!-!K11$ = " ",K11$ \ K11$[1,Len(L11$[1,4])] = L11$[1,4]
!!-!Search #98,2,1;K11$,R[11],E
!!-!If Not(E)
!!-!  !!Print @68,6;'CL BR';"ON LIST";
!!-!  !!Signal 3,15
!!-!  !!Print @68,6;'ER CL';
!!-!  Goto L_15090
!!-!End If 
!!-!RO = RO + 2
!!-!If RO > 18 Let CO = CO + 6 \ RO = 10 \ If CO > 77 Let CO = 74
!!-!!!Print @CO,RO;K11$
!!-!Search #98,4,1;K11$,R[11],E
!!-!If E Let e$ = "syserrorfile 696 sortfile mode (m)=4 keyno (k)=1 r=",R[11]," e=",e," keyval (k$)=",K11$ \ error 10000
!!-!!
!!-!Goto L_15090
!!-!L_15340: Rem VALIDATE COMMODITY CODE
!!-!K11$ = " ",K11$ \ K11$[1,Len(L11$[1,4])] = L11$[1,4]
!!-!Search #11,2,1;K11$,R[11],E \ If E > 2 Goto ERR_TRAP
!!-!If E
!!-!  !!Print @68,6;'CL BR';"NOT FOUND";
!!-!  !!Signal 3,15
!!-!  !!Print @68,6;'ER CL'
!!-!  Goto L_15090
!!-!End If 
!!-!Goto L_15200
!!-!!!!
!
! - L_15440: Rem "======== create indexed sort file for various functions
! - F$ = Spc(6) Using "6/SORTWORK&&&&!"
! - FILE$ = "[1:1] ",F$
! - L_15470:
! - E = 0 \ If Err 0 Let E = Spc(8)
! - Build #98,FILE$
! - If E = 40 Close #98 \ Goto L_15470
!!If E Gosub ERR_SEARCH
!!If Err 0 Gosub ERR_ESCAPE
! - R[99] = 50 \ Search #98,0,1;F$,R[99],E !!\ If E Gosub ERR_SEARCH
! - R[99] = 1 \ Search #98,0,0;F$,R[99],E !!\ If E Gosub ERR_SEARCH
! - R[99] = 0 \ Search #98,1,0;F$,R[99],E !!\ If E Gosub ERR_SEARCH
! - Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: 
! - Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: Signal 2,X1,AMOUNT,FLAG !!\ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
parseCommaString:
!!-!print commaString$ 
!!-!  XX$=""
!!-!  Search #verifChannel,3,1;XX$,R12,E
!!-!  stop!!ver
If commaString$ 
  tmp$=commaString$
 nextItem:
  X2 = 0 \ Let X$ = tmp$ To "," : X2
  XX$=trim$(X$)
  X$=" ",X$
  aa=len(XX$)
  if aa>0
    if alphanumeric
	  X$[1,aa]=XX$
	else
      X$[keyLength-aa+1,keyLength]=XX$
	endif
  endif
  XX$=" ",XX$
  XX$=X$[1,keyLength]
  !
  Search #verifChannel,2,1;XX$,R12,E
  if E errorFlag=1 \ tmp$=XX$ \ Return
  !
  Search #9,4,1;XX$,R12,E 
  if E errorFlag=2 \ Return
  if Len(tmp$)<x2 Return
  if X2 let tmp$=tmp$[X2+1] \ goto nextItem
else
  errorFlag=3 \ Return
endif
Return
!
OUTEND:
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End