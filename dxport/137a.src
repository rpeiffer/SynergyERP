! >>> Program 137a
!
! description:  VENDOR REBATE REPORT >>> Special Pricing by Salesman  	
!
! loadsave -w -n 100,10 -o prog/dxport/137a.dl4 src/137a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 12, 2003  15:53:01
Rem /w/papermaster/r2002//usr/acct/zyc/work/r2002/mx1/mx137a.src (univ2) [zyc] {16016}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX137A -      PRICE PRINTOUT
Rem AUTHOR:       UNIVERSAL  07/16/1991
Rem Notes:        taken from MX299
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!!Option Default Dialect IRIS1
Com 2%,N1[11],1%,N2[5],N1$[42],V9[4],J8,TIME$[22],DATE$[8],CNAME$[30],ITEM_LAB$[10]
Com 1%,PFU1[20],CNVTU[2],UN[2],Z9[9]
Com 2%,C4[8]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],FIELD,BASEX
Com J4$[50]
!
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
If Err 0 Rem
For I = 2 To 30
  If I <> 9 Close #I
Next I
If Err 0 Gosub ERR_TRAP
Dim K33$[50],K34$[50],KCUST$[50],1%,TYPE,RB[2],RBL1[1],RBWH,RBUM[1]
Dim 2%,RB1[5],3%,RBCOST,RBSLCOST,RB5[2],RP_COST,SPSLCOST
dim 1%,pm5[5,4],whparc[5],3%,PRPARC[3],PF_LOAD2,WHMISC[6]
DIM 1%,C0,C1,M5[3],M8,PTYPE,F,X1,SPC3[2],SPCUM[1],J9[2],WHSE
DIM 1%,SPWH,LM[1],WHLM[1],RBCOSTFLAG,2%,DT3[1],JWDATE,JPCDATE
DIM 2%,B[24],C2,M6[3],CFC1[12],C4[8],Z1[5],Z7[3],CUST,Q0[1],D9[5]
Dim 2%,PCDATE,AXCESS,TMP,UNITX,SPC1[5],3%,SPC5[4],PREC[1],x2[9]
Dim 3%,M7,BRACKET,BRACKET1,J,X3,T9[10],C5[5],SPC4[6],QOH,B1[9,2],W3[24]

Dim 1%,SPC6[4],aptype[8],abtype[8],amtype[8],3%,apfact[8],amqty[8],OrdQty ! add'l spcl prices2-9
DIM 3%,SRN[4],PRPARC[3],WHMISC[6],PF_LOAD2

Dim CMDY1$[4],CMDY2$[4],K4$[50],K5$[50],C1$[142],Z1$[50],SCRATCH$[80]
Dim A2$[30],BK$[10],A1$[142],W1$[32],V1$[30],S1$[30],I$[60]
Dim J$[40],J0$[10],J1$[30],J2$[20],J3$[40],J5$[75],J7$[75],J8$[8]
Dim K2$[50],K3$[20],X$[10],T9$[26],K9$[50],P9$[50],MESS$[50]
Dim K7$[25],A$[156],PTYPE$[30],K13$[50],PAKS$[15],UNIT$[4],K17$[50]
Dim PUNIT$[4],SUNIT$[4],QUNIT$[4],Z2$[10],PMASK$[20],F1$[16]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[200],tmp2$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Let COID=IntCo
!
For J = 2 To 14
  Read X2 \ If X2 = -1 Goto L_830
  Read #1,88,X2;J$;
  Open #J,J$
L_830: Next J
Data "1792","2880","2288","752","1728","1808","1936","-1","1824","1712","1952","2400","1744"
!
ROPEN #15,"2/SPRICEMARK"+Str$(COID)
let ch_commodity=17
Ropen #ch_commodity,"2/COMMODITY"+Str$(COID)
! - Call "MX671BRK5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX
!
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "---------#"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55;Scrn=0 \ If J8 Let J9 = 20;Scrn=9
J1 = 90
!
Mat Read #1,19,50;P9$;
Read #1,3,0;J1$;
Read #1,0,100;J8$;
Read #1,0,112;PCDATE;
N1$ = " ",N1$
!
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"137a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
! call moved for .net fields
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
if e$ error 10000 ! error from called program
!
call dxget("SCUST",tmp$) \  tmp1 = tmp$
call dxget("ECUST",tmp$) \  If tmp$ = "" Let tmp2 = 999999 else Let tmp2 = tmp$
call dxget("SPROD",tmp$) \	N1$[13,24] = ucASE$(tmp$),Blank$
call dxget("EPROD",tmp$) \  N1$[25,36] = UCase$(tmp$),EndParam$
call dxget("SPERS",tmp$) \  tmp3 = tmp$
call dxget("EPERS",tmp$) \  If tmp$ = "" let tmp4 = 999 else let tmp4 = tmp$
call dxget("SVEND",tmp$) \  N1[0] = tmp$
call dxget("EVEND",tmp$) \  If tmp$ = "" let N1[1] = 999999 else let N1[1] = tmp$
call dxget("SDATE",tmp$) \  If tmp$ = "" let SDATE = 010170 else let SDATE = tmp$
call dxget("EDATE",tmp$) \  If tmp$ = "" let EDATE = 123159 else let EDATE = tmp$
call dxget("SWHSE",tmp$) \  N1[4] = tmp$
call dxget("EWHSE",tmp$) \  If tmp$ = "" let N1[5] = 99 else let N1[5] = tmp$
call dxget("SORTBY",tmp$) \  If tmp$ = "" let N2[0] = 1 else let N2[0] = tmp$ !droplist 1 2 3 4 5
call dxget("SELECT",tmp$) \  If tmp$ = "" let N2[2] = 3 else let N2[2] = tmp$ !droplist 1 2 3
call dxget("EXPRICES",tmp$) \  If tmp$ = "" let N2[4] = 0 else let N2[4] = 1
call dxget("CANCELDATE",tmp$) \  If tmp$ = "" let N2[5] = 0 else let N2[5] = 1
!
!Validations Customer
If tmp1 < 0 or tmp1 > 999999 let e$ = "Invalid starting customer, must be between 0 and 999999!" \ error 10000
If tmp2 < tmp1 or tmp2 > 999999 let e$ = "Invalid ending customer, must be between starting customer and 999999!" \ error 10000
N1$[1,6]  = tmp1 Using "######"
N1$[7,12] = tmp2 Using "######"
!
!validation product
If N1$[25,36] < N1$[13,24] let  e$="Invalid ending product code, must be >= than starting product code!" \ error 10000
!
!Validations Salesperson
If tmp3 < 0 or tmp3 > 999 let e$ = "Invalid starting salesperson, must be between 0 and 999!" \ error 10000
If tmp4 < tmp3 or tmp4 > 999 let e$ = "Invalid ending salesperson, must be between starting salesperson and 999!" \ error 10000
N1$[37,39] = tmp3 Using "###"
N1$[40,42] = tmp4 Using "###"
!
!Validations Vendor
IF N1[0] < 0 OR N1[0] > 999999 let e$ = "Invalid starting vendor, must be between 0 and 999999!" \ error 10000
IF N1[1] < N1[0] OR N1[1] > 999999 let e$ = "Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
!
!validations date
X$ = SDATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \SDATE = X$
X2 = SDATE
Gosub L_7700
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let N1[2] = -1 else let N1[2] = X$[1,5]
If N1[2] < 0 let e$="Invalid starting expire date!" \ error 10000 
!
X$ = EDATE Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \EDATE = X$
X2 = EDATE
Gosub L_7700
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let N1[3] = -1 else let N1[3] = X$[1,5]
If N1[3] < 0 Let e$ = "Invalid ending expire date!" \ error 10000
If N1[3] < N1[2] Let e$ = "Invalid ending expire date, must be >= starting expire date!" \ error 10000
tmp1$ = "0"
!
!Validations warehouse
IF N1[4] < 0 OR N1[4] > 99 LET e$ = "Invalid starting warehouse, must be between 0 and 99!" \ error 10000
IF N1[5] < N1[4] OR N1[5] > 99 LET e$ = "Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
!
X2 = PCDATE \ Gosub L_7820 \ X2 = 0
If X2 Let JPCDATE = X2 Else Gosub L_7650
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If
!
!Print @0,22;'CE';"SORTING, PLEASE WAIT . . ." \ Signal 3,0
!
J5$ = " ",J5$
L_1015: 
Search #9,3,1;J5$,R1,E
If E Goto L_1050
Search #9,5,1;J5$,R1,E
If E Let e$ = "syserrorfile 137a sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J5$ \error 10000
!!If E Gosub ERR_SEARCH
Goto L_1015
!
L_1050: 
K2$ = " ",K2$;K2$ = N1$[1,6]
I$ = " ",I$;I$[1,6] = N1$[1,6]
!
L_1100: Rem THRU SPCPRICE
If F7 = 99 Return 
Search #8,3,1;K2$,R8,E
If E Goto L_1900
If CONTRACT_FLAG And K2$[1,6] <> I$[7,12]
  Gosub GET_CONTRACT \ If E = 2 Goto L_1900
  Goto L_1100
End If 
If K2$[1,6] > N1$[7,12] And CONTRACT_FLAG = 0 !"cust does not match
  CONTRACT_FLAG = 1 \ Gosub GET_CONTRACT \ If E = 2 Goto L_1900
  Goto L_1100
End If 
If K2$[7,7] = "*" Or K2$[7,7] = "#" Or K2$[7,7] = "&" or k2$[7,7]="-" Goto L_1140
If K2$[7,18] < N1$[13,24] Goto L_1100
If K2$[7,18] > N1$[25,36] Goto L_1100
!
L_1140: 
Mat Read #8,R8,12;Z1;
Mat Read #8,R8,12;SPC1;
Mat Read #8,R8,36;SPCUM;
Mat Read #8,R8,40;SPC3; 
Mat Read #8,R8,46;SPC4;
Read #8,R8,118;SPWH; 
Mat Read #8,R8,138;SPC5;
!
X2 = SPC1[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE > JPCDATE Goto L_1100
X2 = SPC1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If SPC1[4] = 0 If N2[5] = 1 Goto L_1200
If N2[4] = 0 If SPC1[4] If JWDATE < JPCDATE Goto L_1100
If N2[2] = 3 Goto L_1190
X2 = Z1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
L_1190: 
If JWDATE < N1[2] Goto L_1100
If JWDATE > N1[3] Goto L_1100
L_1200: 
If SPWH < N1[4] Goto L_1100
If SPWH > N1[5] Goto L_1100
If K2$[1,6] = "999999" Goto L_1500
If CONTRACT_FLAG Let J3 = I$[1,6]
If Not(CONTRACT_FLAG) Let J3 = Z1[0]
Gosub L_7100 \ Goto L_1100
L_1215: X$ = CFC1[2] Using "###"
If X$[1,3] < N1$[37,39] Goto L_1100
If X$[1,3] > N1$[40,42] Goto L_1100
If K2$[7,7] = "*" Goto L_1240
If K2$[7,7] = "#" Goto L_1240
If K2$[7,7] = "&" Goto L_1240
if k2$[7,7]="-" goto L_1240:
Goto L_1400
!
L_1240: Rem THRU PRODUCT
If K2$[7,7] = "*" Goto L_1300
J$ = " ",J$;J$ = N1$[13,24]
Search #2,2,1;J$,R2,E
If Not(E) Goto L_1260
L_1255: 
Search #2,3,1;J$,R2,E 
If E = 2 Goto L_1490
L_1260: If J$[1,12] > N1$[25,36] Goto L_1490
Gosub L_7225
L_1261: Rem please save this for return +1
If B[24] < N1[0] Goto L_1255
If B[24] > N1[1] Goto L_1255
If K2$[7,7] <> "&" Goto L_1290
TMP = K2$[12,15]
If TMP <> PFU1[19] Goto L_1255
!
L_1290: ! chk cost grp
if K2$[7,7]<>"-" GOTO L_1420:
IF K2$[8,11]<>A$[116,126] GOTO L_1490:
goto L_1420:
!
L_1300: Rem BY COMM
J$ = " ",J$;J$ = K2$[8,11]
L_1310: 
Search #2,3,3;J$,R2,E
If E Goto L_1490
If J$[1,4] <> K2$[8,11] Goto L_1490
Gosub L_7225
L_1311: Rem please save this for return +1
If B[24] < N1[0] Goto L_1310
If B[24] > N1[1] Goto L_1310
If J$[5,16] < N1$[13,24] Goto L_1310
If J$[5,16] > N1$[25,36] Goto L_1310
Goto L_1420
L_1400: Rem GET PROD
J$ = K2$[7,18] \ Gosub L_7200 \ Goto L_1100
If B[24] < N1[0] Goto L_1100
If B[24] > N1[1] Goto L_1100
L_1420: Rem BUILD KEY
J5$ = " ",J5$ \ If A$[140,151] = "Z ZZZZZZZZZZ" Goto L_1470
If N2[0] = 1 And Not(CONTRACT_FLAG) Let J5$[1,6] = Z1 Using "######"
If N2[0] = 1 And CONTRACT_FLAG Let J5$[1,6] = CFC1[1] Using "######"
If N2[0] = 1 If F7 = 99 Let J5$[1,6] = CFC1[1] Using "######"
If N2[0] = 2 Let J5$[1,12] = A$[140,151]
If N2[0] = 3 Let J5$[1,3] = CFC1[2] Using "###"
If N2[0] = 4 Let J5$[1,6] = B[24] Using "######"
If N2[0] = 5 Let J5$[1,6] = Z1[4] Using "######"
J5$[13] = K2$
If K2$[7,7] = "*" Or K2$[7,7] = "#" Or K2$[7,7] = "&" or k2$[7,7]="-" Let J5$[19] = A$[140,151]
If K2$[1,1] = "C" Let J5$[13,18] = CFC1[1] Using "######"
If F7 = 99 Let J5$[13,18] = CFC1[1] Using "######"
Search #9,4,1;J5$,R8,E
If E>1 Let e$ = "syserrorfile 137a sortfile mode (m)=4 keyno (k)=1 r=",R8," e=",e," keyval (k$)=",J5$ \error 10000
L_1470: If K2$[7,7] = "*" Goto L_1310
If K2$[7,7] = "#" Or K2$[7,7] = "&" or k2$[7,7]="-" Goto L_1255
L_1490: Goto L_1100
!
L_1500: Rem PROMO ROUTINE
K7$ = " ",K7$;K7$ = N1$[1,6];F7 = 99
Search #7,2,1;K7$,R7,E
If Not(E) Goto L_1530
L_1520: 
Search #7,3,1;K7$,R7,E
If E Goto L_1580
L_1530: If K7$[1,6] > N1$[7,12] Goto L_1580
Gosub L_7140
Gosub L_1215
Goto L_1520
!
L_1580: Rem END THIS PROMO, GET NEXT
F7 = 0
Goto L_1100
L_1900: Rem PRINT
If J8
  If N2[0] = 2
    tmp$ = "ITEM CODE",fdel$!! tmp$ = tmp$,ITEM_LAB$,fdel$!!
	tmp$ = tmp$,"DESCRIPTION 1",fdel$
	tmp$ = tmp$,"DESCRIPTION 2",fdel$
    tmp$ = tmp$,"CUST #",fdel$
	tmp$ = tmp$,"NAME",fdel$
	tmp$ = tmp$,"SALESMAN",fdel$
    tmp$ = tmp$,"VENDOR NAME",fdel$
  else
    tmp$ = "CUST #",fdel$
	tmp$ = tmp$,"NAME",fdel$
	tmp$ = tmp$,"SALESMAN",fdel$
    tmp$ = tmp$,"VENDOR NAME",fdel$
    tmp$ = tmp$,"ITEM CODE",fdel$!! tmp$ = tmp$,ITEM_LAB$,fdel$!!
	tmp$ = tmp$,"DESCRIPTION 1",fdel$
	tmp$ = tmp$,"DESCRIPTION 2",fdel$
  End if
  tmp$ = tmp$,"PACK SIZE",fdel$
  tmp$ = tmp$,"WH/SM COST",fdel$
  tmp$ = tmp$,"PRICE",fdel$
  tmp$ = tmp$,"G/P $",fdel$
  tmp$ = tmp$,"GP %",fdel$
  tmp$ = tmp$,"SRT DATE",fdel$
  tmp$ = tmp$,"EXP DATE",fdel$
  tmp$ = tmp$,"LST DATE",fdel$
  tmp$ = tmp$,"QTY SINCE START",fdel$
  tmp$ = tmp$,"QTY SINCE START U/M",fdel$
  tmp$ = tmp$,"SPECIAL PRICE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!Print @0,22;'CE';"PRINTING, PLEASE WAIT . . ." \ Signal 3,0
!If J8 Print 'CS'
!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
!!
J5$ = " ",J5$
L_1940: 
Search #9,3,1;J5$,R1,E
If E Goto OUTEND 
J3 = J5$[13,18] \ Gosub L_7100 \ Goto L_1940
Gosub L_7400
J$ = J5$[19] \ Gosub L_7200 \ Goto L_1940
BRACKET = 1;QUNIT = PFU1[8]
F8 = 0
If N2 = 2 Goto L_1990
If UWORK = 0 Goto L_1985
X2 = J5$[13,18] \ If X2 <> UWORK Gosub L_5300
L_1985: 
UWORK = J5$[13,18] \ Goto L_2000
L_1990:
If A2$[1,1] = "" Or A2$[1,5] = "     " Goto L_1996
If A2$[1,12] <> J5$[1,12] Gosub L_5300
L_1996: 
A2$ = J5$[1,12]
L_2000: Rem "================================== now lookup price
Gosub L_3000
F8 = 0;T9 = 0;T9[1] = 0;PTYPE$ = " ",PTYPE$;MESS$ = " ",MESS$
Gosub L_25000
If N2[2] = 1 If RBCOST = 0 Goto L_1940
If N2[2] = 2 If RBCOST <> 0 Goto L_1940
If T9 = -2 Let T9 = 0
If T9 = -1 Let T9 = 0
If C4[2] = 1 If Not(T9) Gosub L_2400
If BRACKET If C4[2] = 2 If Not(T9) Gosub L_6500
CNVTU[0] = 0 \ CNVTU[1] = PRICE
CNVTU[2] = 2 \ CNVTA = T9
Gosub L_20000
T9 = AMOUNT \ CNVTA = COST \ Gosub L_20000
COST = AMOUNT
!If F8 <> 99 Goto L_1940
If F8 <> 99 If J8 If tmp1$ <> "0"
    tmp$ = tmp1$
    tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$
    tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
End If
If F8 <> 99 Goto L_1940
CNVTA = SPC4[4]
CNVTU[0] = 0 \ CNVTU[1] = PRICE \ CNVTU[2] = 1
Gosub L_20000
QOH = AMOUNT
If PRICE = -1 Let SUNIT$ = "CWT " \ Goto L_2160
If PRICE = -2 Let SUNIT$ = "LOT " \ Goto L_2160
If PRICE = -3 Let SUNIT$ = "LB  " \ Goto L_2160
Read #6,PRICE,10;SUNIT$;
Gosub L_5800
L_2160: 
Gosub L_5000
PROD = 0 \ COMDY = 0 \ ALLPROD = 0;grp=0
Goto L_1940
!
L_2400: Rem "========================= calc from comm file!
IF C1=1 LET FIELD=0
IF C1>2 IF C1<9 LET FIELD=C1-2
IF C1 IF C1<>2 IF C1<>9 GOSUB L_12000:
IF C1=0 LET T9=A[C2+19] \ LET MESS$="(LIST PRICE ",C2,")" \ GOTO L_2590: ! "use one if the lists
IF C1=1 LET T9[1]=B[8] \ LET Z1$="WHSE" ! "use whse cost
IF C1=2 LET T9[1]=B[10] \ LET Z1$="LAST" ! "use lst/po cost
IF C1=3 LET T9[1]=A[20] \ LET Z1$="LIST 1" ! "use list 1
IF C1=4 LET T9[1]=A[21] \ LET Z1$="LIST 2" ! "use list 2
IF C1=5 LET T9[1]=A[22] \ LET Z1$="LIST 3" ! "use list 3
IF C1=6 LET T9[1]=A[23] \ LET Z1$="LIST 4" ! "use list 4
IF C1=7 LET T9[1]=A[24] \ LET Z1$="LIST 5" ! "use list 5
IF C1=8 LET T9[1]=A[25] \ LET Z1$="LIST 6" ! "use list 6
IF C1=9 LET T9[1]=C4[4] \ LET Z1$="BASE" ! "use base cost
IF C2=0 LET C2=1 ! "check multiplier
LET T9=(T9[1]*C2) ! "apply multipler to base
CNVTU[0] = 0 \ CNVTU[1] = PRICE
CNVTU[2] = 2 \ CNVTA = T9[1]
Gosub L_20000
LET MESS$="(",AMOUNT,"[",Z1$,"] x ",C2,")"
L_2590: Rem IF T9 LET PTYPE$="MATRIX PRICE" ! "OK we have a matrix price!
Return
!
L_3000: Rem "==================================== get commodity info
J2$ = " ",J2$ \ J2$ = A$[152,155]
Search #4,2,1;J2$,R3,E
If E Goto L_3100
k17$[1,4] = J2$[1,4] ! " cmdty$[32,35]
k17$[5] = c0 using "### " ! "Price type
Search #ch_commodity,2,1;k17$,rec_cmdty,e  \ if e>1 Goto L_3100
If not(e) ! "ALLOW FOR NOT FOUND
  mat read #ch_commodity,rec_cmdty,40;c1;
  mat read #ch_commodity,rec_cmdty,42;C2;
! mat read #ch_commodity,rec_cmdty,46;p0;
Else
  Let C1=0;C2=1
Endif
! MAT  READ #4,R3,36;C2; ! "multiplier array  (should be C1)
! MAT  READ #4,R3,440;C1; ! "types array (should be C2)
IF NOT(C1) IF NOT(C2) LET C2=1 ! "use list 1 if none there
Return 
L_3100: Rem NOT FOUND
C1 = 0 \ C2 = 1
Return 
!
L_4325: Rem BASE TYPE
FIELD = 0
If SPC3[1] = 2 Let FIELD = 0
If SPC3[1] > 3 If SPC3[1] < 10 Let FIELD = SPC3[1] - 3
If FIELD Gosub L_12000
If SPC3[1] = 1 Let BASEX = C4[4]
If SPC3[1] = 2 Let BASEX = B[8]
If SPC3[1] = 3 Let BASEX = B[10]
If SPC3[1] = 4 Let BASEX = A[20]
If SPC3[1] = 5 Let BASEX = A[21]
If SPC3[1] = 6 Let BASEX = A[22]
If SPC3[1] = 7 Let BASEX = A[23]
If SPC3[1] = 8 Let BASEX = A[24]
If SPC3[1] = 9 Let BASEX = A[25]
If SPC3[1] = 10 Let BASEX = SPSLCOST \ If SPC5[3] = 4 Let BASEX = COST
If SPC3[1] = 11 Let BASEX = SPSLCOST \ If SPC5[3] = 4 Let BASEX = COST
If SPC3[1] = 12
  If C4[2] = 1 Gosub L_2400
  If C4[2] = 2 Gosub L_6500
  BASEX = T9
  T9 = 0
End If 
Return
!
GET_CONTRACT: Rem
Search #3,3,2;I$,R0,E
If E = 2 Return 
If I$[1,6] > N1$[7,12] Let E = 2 \ Return 
CONTRACT = I$[8,12]
K2$ = " ",K2$ \ K2$[1,6] = I$[7,12]
Return
!
L_5000: Rem PRINT
If J8
  tmp2$ = tmp1$
  gosub L_7300 ! get vendor name
  If N2 <> 2
    tmp2$ = tmp2$,rtrim$(V1$),fdel$
    tmp2$ = tmp2$,rtrim$(A$[140,151]),fdel$
    tmp2$ = tmp2$,rtrim$(A$[9,38]),fdel$
    tmp2$ = tmp2$,rtrim$(A$[63,92]),fdel$
  End if
  If N2 = 2
    tmp2$ = tmp2$,rtrim$(K7$[1,6]),fdel$
	tmp2$ = tmp2$,rtrim$(A1$[31,60]),fdel$
	tmp2$ = tmp2$,rtrim$(S1$),fdel$
    tmp2$ = tmp2$,rtrim$(V1$),fdel$
  End if
Else
  If N2 <> 2 Print #0; Tab 1;A$[140,151];" ";A$[9,38];" ";A$[63,92];
  If N2 = 2 Print #0; Tab 1;K7$[1,6]; Tab 10;A1$[31,60]; Tab 42;S1$;
End if
!CASO 1: Sort by = 1, 3, 4, 5
If J8
  tmp$ = tmp2$
  tmp$ = tmp$,rtrim$(PAKS$),fdel$
  tmp$ = tmp$,COST Using "---#.##",fdel$
  tmp$ = tmp$,T9 Using "---#.##",fdel$
  T9[2] = T9 - COST
  tmp$ = tmp$,T9[2] Using "---#.##",fdel$
  T9[3] = 0 \ If T9 Let T9[3] = FNR((T9[2] * 100) / T9)
  tmp$ = tmp$,T9[3] Using "---#.##",fdel$
  X2 = SPC1[2] \ Gosub L_7700
  tmp$ = tmp$,X$,fdel$
  X2 = Z1[4] \ Gosub L_7700
  tmp$ = tmp$,X$,fdel$
  X2 = SPC1[3] \ Gosub L_7700
  tmp$ = tmp$,X$,fdel$
  tmp$ = tmp$,QOH Using "-----#,###.##",fdel$
  tmp$ = tmp$,rtrim$(SUNIT$),fdel$
  tmp$ = tmp$,rtrim$(PTYPE$),fdel$
  call addtostr(e$,rstr$,tmp$+rdel$) 
Else
  Print #0; Tab 75;PAKS$;
  Print #0; Using PMASK$; Tab 91;COST;
  If RBCOSTFLAG Print #0;"*";
  If SPCOSTFLAG Print #0;"@";
  Print #0; Using PMASK$; Tab 104;T9;
  T9[2] = T9 - COST
  Print #0; Using PMASK$; Tab 114;T9[2];
  T9[3] = 0 \ If T9 Let T9[3] = FNR((T9[2] * 100) / T9)
  Print #0; Using "---#.##"; Tab 123;T9[3]
  Gosub L_7300
  Print #0; Tab 1;V1$;
  X2 = SPC1[2] \ Gosub L_7700
  Print #0; Tab 40;X$;
  X2 = Z1[4] \ Gosub L_7700
  Print #0; Tab 50;X$;
  X2 = SPC1[3] \ Gosub L_7700
  Print #0; Tab 60;X$;
  Print #0; Using "-----#,###.##"; Tab 80;QOH;" ";SUNIT$;
  Print #0; Tab 100;PTYPE$;
  Print #0;"\15\"
  J1 = J1 + 2
End if
Return 
!
L_5300: Rem PRINT LINE
If J8
  If N2 = 2
    tmp1$ = rtrim$(A$[140,151]),fdel$
    tmp1$ = tmp1$,rtrim$(A$[9,38]),fdel$
    tmp1$ = tmp1$,rtrim$(A$[63,92]),fdel$
  End if
  If N2 <> 2
    tmp1$ = rtrim$(K7$[1,6]),fdel$
	tmp1$ = tmp1$,rtrim$(A1$[31,60]),fdel$
	tmp1$ = tmp1$,rtrim$(S1$),fdel$
  End if
Else
  Gosub L_5800
  If N2 = 2 Print #0; Tab 1;A$[140,151];" ";A$[9,38];" ";A$[63,92]
  If N2 <> 2 Print #0; Tab 1;K7$[1,6]; Tab 10;A1$[31,60]; Tab 80;S1$
  Print #0;""
  J1 = J1 + 1
End if
Return
!
L_5800: Rem HEADINGS ROUTINE
If J8=0
  ITEM_LAB$="ITEM CODE"
  J1 = J1 + 1 \ If J1 < J9 Return 
  !If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
  If J2 Print #0;"\14\";
  J2 = J2 + 1 \ J1 = 9
  Print #0;"\12\";
  T9$ = "" \ Call Time(T9$)
  Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
  Print #0;" - 137A - ";T9$;
  Print #0; Tab 50;"SPECIAL PRICING BY SALESMAN";
  Print #0; Tab 120;"@ - special cost"
  If N2[0] = 1 Print #0; Tab 55;"IN CUSTOMER ORDER";
  If N2[0] = 2 Print #0; Tab 55;"IN PRODUCT ORDER";
  If N2[0] = 3 Print #0; Tab 55;"IN SALESMAN ORDER";
  If N2[0] = 4 Print #0; Tab 55;"IN VENDOR # ORDER";
  If N2[0] = 5 Print #0; Tab 55;"IN EXP. DATE ORDER";
  Print #0; Tab 120;"* - rebate cost"
  Print #0;""
  If N2 = 2 Print #0; Tab 1;"CUST #"; Tab 10;"NAME"; Tab 42;"SALESMAN";
  If N2 <> 2 Print #0; Tab 1;ITEM_LAB$; Tab 14;"DESCRPT 1"; Tab 45;"DESCRPT 2";
  Print #0; Tab 75;"PACK SIZE"; Tab 89;"WH/SM COST";
  Print #0; Tab 109;"PRICE"; Tab 118;"G/P $"; Tab 126;"GP %"
  Print #0; Tab 1;"VENDOR NAME"; Tab 40;"SRT DATE";
  Print #0; Tab 50;"EXP DATE"; Tab 60;"LST DATE";
  Print #0; Tab 80;"QTY SINCE START"
  Print #0;"\12\";
  If Spc(16) > 5299 If Spc(16) < 5400 Goto L_5990
endif
Gosub L_5300
L_5990: Return 
!
L_6500: Rem CALC BRACKET PRICE
If SPC3 = 4 Let BRACKET1 = SPC3[1] \ Goto L_6517
If BRACKET > 0 Gosub L_8000
If Not(BRACKET) Let X3 = 0 \ Return 
BRACKET1 = Abs(BRACKET)
If SPC3 = 5 Let BRACKET1 = BRACKET1 + (SPC3[1])
L_6517: 
MESS$ = "(B",BRACKET1,":",C4[4],"BC"
B4 = (BRACKET1 * 1000) - 1000 + C4[3]
If B4 < 0 Goto L_6690
If B4 > Chf(11) - 1 Goto L_6690
Mat Read #11,B4,0;M5;
Mat Read #11,B4,10;M6;
If BRACKET1 > 1 If Not(M6[0]) Let BRACKET1 = BRACKET1 - 1 \ Goto L_6517
M7 = C4[4]
CNVTU[0] = 0 \ CNVTU[1] = PFU1[11] \ CNVTU[2] = 2 \ CNVTA = M7 \ Gosub L_20000 \ M7 = AMOUNT
For M8 = 0 To 3
  If Not(M6[M8]) Goto L_6630
  If M5[M8] Let M7 = M7 + (M6[M8]) \ MESS$ = MESS$,"+",M6[M8]
  If Not(M5[M8]) Let M7 = M7 + (M7 * (M6[M8] / 100)) \ MESS$ = MESS$,"+",M6[M8],"%"
Next M8
L_6630: 
MESS$ = MESS$,")"
X4 = M7
CNVTU[0] = PFU1[11] \ CNVTU[1] = 0 \ CNVTU[2] = 2 \ CNVTA = X4 \ Gosub L_20000 \ X4 = AMOUNT
M7 = X4
T9 = M7
L_6690: Return 
!
L_6700: Rem WHSE
For X2 = 14 To 24 \ W3[X2] = 0 \ Next X2
WHLM[0] = 0;WHLM[1] = 0
If P9$[32,32] <> "Y" Or WHSE = 0 Return 
K2$ = " ",K2$
K2$[1,12] = A$[140,151] \ K2$[13] = WHSE Using "##"
Search #14,2,1;K2$,R2,E 
If E Goto L_6790
Mat Read #14,R2,0;W1$;
Mat Read #14,R2,78;W3;
Mat Read #14,R2,842;WHLM;
mat read #14,r2,384;whparc;
Mat read #14,r2,800;whmisc;
A$[93,112] = W1$[13,32]
Gosub L_69000
Gosub L_12400
B[8] = W3[17] \ B[10] = W3[16] \ B[21] = W3[15]
C4[4] = W3[18] \ A[0] = W3 \ A[3] = W3[2]
For CT = 20 To 25 \ A[CT] = W3[CT - 1] \ Next CT
COST = W3[17]
L_6790: Return
!
L_7100: C0=0
K7$ = J3 Using "######"
Search #7,2,1;K7$,R7,E
If E = 1 Return 
L_7140: 
Mat Read #7,R7,0;A1$;
Mat Read #7,R7,142;CFC1;
Mat Read #7,R7,194;C5;
let c0=cfc1[7]
Return 1
!
L_7200: Rem GET PROD
Search #2,2,1;J$,R2,E 
If E Return 
L_7225: Mat Read #2,R2,0;A$;
Mat Read #2,R2,156;B;
Mat Read #2,R2,256;A;
Mat Read #2,R2,512;PFU1;
Mat Read #2,R2,554;PFU2;
Mat Read #2,R2,620;LM; \ PREC[0] = R2
Mat Read #2,R2,894;C4;
Mat Read #2,R2,956;PAKS$;
MAT  READ #2,R2,596;PRPARC;
READ #2,R2,938;PF_LOAD2;
PRICE = PFU1[12]
Gosub L_12510
COST = B[8]
Return 1
!
L_7300: Rem VENDOR NAME
K13$ = " ",K13$;K13$ = B[24] Using "######"
Search #13,2,1;K13$,R13,E
If E Goto L_7340
Mat Read #13,R13,0;V1$;
Return 
L_7340: Rem NG
V1$ = " ",V1$
V1$ = "VENDOR NOT ASSIGNED"
Return 
!
L_7400: Rem GET SLSM
If N2[0] = 3 If CFC1[2] <> UWORK[2] Let J1 = 99
J7$ = " ",J7$;J7$ = CFC1[2] Using "###"
UWORK[2] = CFC1[2]
Search #10,2,1;J7$,R10,E
If E Goto L_7450
Mat Read #10,R10,0;S1$;
Return 
L_7450: Rem NG
S1$ = " ",S1$
S1$ = "SALESMAN NOT FOUND"
Return 
!
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
PCDATE = X$
Call DateToJulian(1,X$,X$,E) !!\ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JPCDATE = X2
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "  NONE  "
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
!
! - DT3[0] = X2;DT3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
!
L_8000: Rem "======================== determine bracket from qty/weight
Mat Read #12,B[22],0;B1;
For M8 = 9 To 0 Step -1
  If B1[M8,0] < 0 Gosub L_8100 \ Goto L_8031
  If B1[M8,0] <= BRACKET Goto L_8050
L_8031: If B1[M8,0] < 0 If Abs(B1[M8,0]) <= WEIGHT Goto L_8050
Next M8
BRACKET = 0
Goto L_8060
L_8050: BRACKET = - (M8 + 1)
L_8060: Return 
!
L_8100: Rem "calc weight for given qty
FACTOR = 1
If A[5] = 1 Let CNVTU[1] = 0 \ Goto L_8150
For X2 = 0 To 6
  If PFU2[X2] = A[5] Let CNVTU[1] = PFU1[X2 + 1] \ Goto L_8150
Next X2
CNVTU[1] = 0 \ FACTOR = A[5]
L_8150: CNVTA = BRACKET
CNVTU[0] = QUNIT \ CNVTU[1] = CNVTU[1] \ CNVTU[2] = 1
Gosub L_20000
WEIGHT = A[6] * AMOUNT / FACTOR
Return 
!
!OUTEND: Rem EXIT PROGRAM
!Print 'CS'
!Chain "MX000C"
!Close 
!Chain "MX000"
!Stop 
!L_9100: Rem END OF THIS RANGE
!!!If Scrn Input @0,23;"PRESS <CR> TO EXIT     "J$ \ Print 'CS';
!Goto OUTEND
!End 
!
L_12000: Rem CALC LOADED COST AND L PRICES FROM TABLE
IF FIELD<1 OR FIELD>6 RETURN 
IF C4[2]<>1 RETURN 
IF C4[3]=0 RETURN 
mat read #15,c4[3],18;pm5;
LET BASEX=C4[4]
if pm5[field-1,4]=1 let basex=b[10]
if pm5[field-1,4]=2 let basex=b[8]
if pm5[field-1,4]=3 let basex=pf_load2
if pm5[field-1,4]=4 let basex=b[21]
if pm5[field-1,4]=5 let basex=prparc[2]
GOSUB L_19000:
! X4 RETURNED

!
!
LET A[19+FIELD]=X4
Return 
!
L_12400: Rem Calc loads from load markup
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA
  End If 
End If 
Return 
!
L_12510: 
If LM[0]
  WH = 0;LTBL = LM[0];CNVTA = 0
  Gosub L_12610 \ B[8] = CNVTA
End If 
If LM[1]
  WH = 0;LTBL = LM[1];CNVTA = 0
  Gosub L_12610 \ PF_LOAD2 = CNVTA
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,IntCO,e$,rstr$
if e$ error 10000 ! error from called program
Return 
!
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
if e$ error 10000 ! error from called program
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: 
! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: 
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
if e$ error 10000 ! error from called program
!
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_23000: Rem CHECK FOR REBATE
RBCOST = 0 \ RBSLCOST = 0 \ SPSLCOST = 0 \ RBCOSTFLAG = 0
SPCOSTFLAG = 0
Read #1,88,320;F1$;
Ropen #33,F1$
Read #1,88,304;F1$;
Ropen #34,F1$
TYPE = 0
L_23070:
K34$ = " ",K34$
If W2[3] Let K34$[1,6] = W2[3] Using "######" Else Let K34$[1,6] = B[24] Using "######"
X2 = 0 \ TYPE = TYPE + 1
If TYPE > 8 Goto L_23600
L_23110: 
Search #34,3,4;K34$,R34,E
If E Goto L_23070
X2 = K34$[1,6]
If W2[3] If X2 <> W2[3] Goto L_23070
If Not(W2[3]) If X2 <> B[24] Goto L_23070
KCUST$ = " ",KCUST$
If TYPE < 5 Let KCUST$[1,6] = CFC1[1] Using "######" Else Let KCUST$[1,6] = CFC1[7] Using "PT### "
KCUST$[7,12] = K34$[7,12]
Search #34,2,2;KCUST$,R34,E
If E Goto L_23110
K33$ = " ",K33$
If TYPE = 1 Or TYPE = 5
  K33$[1,12] = A$[140,151];K33$[13] = K34$[7,12],""
End If 
If TYPE = 2 Or TYPE = 6
	LET K33$[1,1]="-";K33$[2,12]=A$[116,126];K33$[13]=K34$[7,12],""
ENDIF 
IF TYPE=3 OR TYPE=7
  K33$[1,1] = "*";K33$[2,5] = A$[152,155];K33$[13] = K34$[7,12],""
End If 
If TYPE = 4 Or TYPE = 8
  K33$[1,1] = "#";K33$[13] = K34$[7,12],""
End If 
Search #33,2,2;K33$,R33,E
If E Goto L_23110
Mat Read #33,R33,12;RB1;
Mat Read #33,R33,36;RBUM;
Mat Read #33,R33,40;RB;
Mat Read #33,R33,118;RBWH;
Mat Read #33,R33,126;RBL1;
Mat Read #33,R33,138;RB5;
X2 = RB1[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE > JPCDATE Goto L_23110
X2 = RB1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If RB1[4] If JWDATE < JPCDATE Goto L_23110
If P9$[32,32] = "Y" If RBWH If RBWH <> H4[2] Goto L_23110
If TYPE <> 1 And TYPE <> 5 Let RBUM[0] = PFU1[RBUM[0]] \ RBUM[1] = PFU1[RBUM[1]]
If P9$[32,32] = "Y" And W3[16] <> 0 Let RP_COST = W3[16] Else Let RP_COST = B[10]
If RB[0] = 3 ! FLAT REBATE COST
  RBCOST = RB5[0]
  If TYPE <> 1 And TYPE <> 5 Let CNVTU[0] = RBUM[0];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = RBCOST \ Gosub L_20000 \ RBCOST = AMOUNT
End If 
If RB[0] = 1 Let RBCOST = (RP_COST * ((100 - RB5[0]) / 100))
If RB[0] = 2 Let CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2;CNVTA = RP_COST \ Gosub L_20000
If RB[0] = 2 Let CNVTA = (AMOUNT - RB5[0]);CNVTU[0] = RBUM[0];CNVTU[1] = 0 \ Gosub L_20000
If RB[0] = 2 Let RBCOST = AMOUNT
If RBL1[0] = 4 Let RBSLCOST = 0
If RBL1[0] = 3
  RBSLCOST = RB5[1];RBSLCOST_TYPE = 99
  If TYPE <> 1 And TYPE <> 5 Let CNVTU[0] = RBUM[1];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = RBSLCOST \ Gosub L_20000 \ RBSLCOST = AMOUNT
End If 
If RBL1[0] = 1 Or RBL1[0] = 2
  If RBL1[1] = 1 Let BASEX = C4[4]
  If RBL1[1] = 1 If P9$[32,32] = "Y" If W3[18] Let BASEX = W3[18]
  If RBL1[1] = 2 Let BASEX = B[8]
  If RBL1[1] = 2 If P9$[32,32] = "Y" If W3[17] Let BASEX = W3[17]
  If RBL1[1] = 3 Let BASEX = B[10]
  If RBL1[1] = 3 If P9$[32,32] = "Y" If W3[16] Let BASEX = W3[16]
  If RBL1[1] = 4 Let BASEX = RBCOST
End If 
If RBL1[0] = 1 Let RBSLCOST = (BASEX * ((100 + RB5[1]) / 100))
If RBL1[0] = 2 Let CNVTU[0] = 0;CNVTU[1] = RBUM[1];CNVTU[2] = 2;CNVTA = BASEX \ Gosub L_20000
If RBL1[0] = 2 Let CNVTA = (AMOUNT + RB5[1]);CNVTU[0] = RBUM[1];CNVTU[1] = 0 \ Gosub L_20000
If RBL1[0] = 2 Let RBSLCOST = AMOUNT
If RBSLCOST And (Not(COST) Or RBSLCOST < COST) Let COST = RBSLCOST;RBCOSTFLAG = 1
L_23600: Rem exit
Close #33
Close #34
Return 
!
L_24800: Rem Valid unit for product (special price)?
For X = 0 To 7
  If UNITX = PFU1[X] Return 1
Next X
Return 
!
L_24900: Rem ===== Check for cust/contract ======
I$ = " ",I$;I$[1,6] = CFC1[1] Using "######"
L_24920: 
Search #3,3,2;I$,R0,E 
If E Return 
X2 = I$[1,6] \ If X2 <> CFC1[1] Return 
K9$[1,6] = I$[7,12]
Search #8,2,1;K9$,Z8,E
If Not(E) Gosub L_25500 \ If T9 Goto L_24980
Goto L_24920
L_24980: Rem CONTRACT=I$[8,12] ! "retain contract #
Return 
!
L_25000: Rem Special Pricing (rek - 01/21/93) / NON-STANDARD VERSION
Gosub L_23000
T9 = 0 \ F8 = 0
PROD = 99 \ L9[0] = 2
K9$ = " ",K9$ \ K9$[1,6] = CFC1[1] Using "######" 
K9$[7,18] = A$[140,151] \ K9$[19] = ""
Search #8,2,1;K9$,Z8,E  
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
Gosub L_24900 \ If T9 Goto L_29980
K9$[1,6] = "999999" \ L9[0] = 3
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980

LET PROD=0;L9[0]=15 ! "customer/cost group price
LET K9$=" ",K9$;K9$[1,6]=CFC1[1] USING "######";K9$[7,7]="-"
LET K9$[8,18]=A$[116,126];K9$[19]=""
SEARCH #8,2,1;K9$,Z8,E
IF NOT(E) GOSUB L_25500: \ IF T9 GOTO L_29980:
GOSUB L_24900: \ IF T9 GOTO L_29980: ! "check contracts/exit if one 
LET K9$[1,6]="999999";L9[0]=16 ! "cost group promotion
SEARCH #8,2,1;K9$,Z8,E
IF NOT(E) GOSUB L_25500: \ IF T9 GOTO L_29980:

PROD = 0  \ L9[0] = 4
K9$ = " ",K9$ \ K9$[1,6] = CFC1[1] Using "######" \ K9$[7,7] = "*"
K9$[8,11] = A$[152,155];K9$[19] = ""
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
Gosub L_24900 \ If T9 Goto L_29980
K9$[1,6] = "999999";L9[0] = 7
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
L9[0] = 12
K9$ = " ",K9$ \ K9$[1,6] = CFC1[1] Using "######" \ K9$[7,7] = "&"
K9$[8,11] = UNIT$[1,4] \ K9$[12,15] = UNITX Using "####" \ K9$[19] = ""
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
Gosub L_24900 \ If T9 Goto L_29980
K9$[1,6] = "999999" \ L9[0] = 11
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
L9[0] = 6
K9$ = " ",K9$ \ K9$[1,6] = CFC1[1] Using "######" \ K9$[7,7] = "#" \ K9$[19] = ""
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
Gosub L_24900 \ If T9 Goto L_29980
K9$[1,6] = "999999" \ L9[0] = 8
Search #8,2,1;K9$,Z8,E 
If Not(E) Gosub L_25500 \ If T9 Goto L_29980
T9 = 0 \ L9[0] = 0 
Goto L_29980
!
L_25500: Rem Now get special price
Mat Read #8,Z8,12;Z1;
Mat Read #8,Z8,12;SPC1;
Mat Read #8,Z8,36;SPCUM;
Mat Read #8,Z8,40;SPC3;
Mat Read #8,Z8,46;SPC4;
Mat Read #8,Z8,138;SPC5;
Read #8,Z8,118;SPWH;
mat read #8,Z8,168;spc6; ! this & below - 9 add'l prices
mat read #8,Z8,178;aptype;
mat read #8,Z8,196;abtype;
mat read #8,Z8,214;amtype;
mat read #8,Z8,232;apfact;
mat read #8,Z8,286;amqty;
If SPWH Let WHSE = SPWH \ Gosub L_6700
X2 = SPC1[2] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE > JPCDATE Goto L_29970
If (SPC3[0] = 4 Or SPC3[0] = 5) And C4[2] <> 2 Goto L_29970
X2 = SPC1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If N2[4] = 0 And SPC1[4] And JWDATE < JPCDATE Goto L_29970
!
!
if spc6[1]<>1 and spc6[1]<>2 let spc6[1]=1 ! default = qty min
! now the check of which price to use
let mlvl=0 ! no multiple levels yet
for x=0 to 8 \ if aptype[x] let mlvl=1 \ next x ! has a type (use prctype as decider)
if mlvl ! has levels - find right one - if not use main (orig)
	gosub MLVL_SPR:
Endif
! to make less changes - move whatever level into std var names
if spc6[1]<>1 and spc6[1]<>2 let spc6[1]=1 ! default = qty min
!
!
T9 = 0
T9 = SPC5[0]
UNITX = SPCUM[0] \ Gosub L_24800 \ SPCUM[0] = PRICE
UNITX = SPCUM[1] \ Gosub L_24800 \ SPCUM[1] = PFU1[11]
If PROD Let PRICE = SPCUM[0]	! ;C3[4] = SPCUM[1]
If SPC5[3] = 3 And SPC5[1] Let SPSLCOST = SPC5[1]
If Not(PROD) If SPC5[3] = 3 And SPSLCOST Let CNVTA = SPSLCOST;CNVTU[0] = PFU1[11];CNVTU[1] = 0;CNVTU[2] = 2 \ Gosub L_20000 \ SPSLCOST = AMOUNT
If SPC5[4] = 1 Let BASEX = C4[4]
If SPC5[4] = 1 If P9$[32,32] = "Y" If W3[18] Let BASEX = W3[18]
If SPC5[4] = 2 Let BASEX = B[8]
If SPC5[4] = 2 If P9$[32,32] = "Y" If W3[17] Let BASEX = W3[17]
If SPC5[4] = 3 Let BASEX = B[10]
If SPC5[4] = 3 If P9$[32,32] = "Y" If W3[16] Let BASEX = W3[16]
If SPC5[4] = 4 Let BASEX = RBCOST
IF SPC5[4]=5 LET BASEX=PF_LOAD2
IF SPC5[4]=5 IF P9$[32,32]="Y" IF W3[14] LET BASEX=W3[14]
if spc5[4]=6 let basex=prparc[2]
if spc5[4]=6 IF P9$[32,32]="Y" IF WHMISC[2] let basex=whmisc[2]
If SPC5[3] = 1 If BASEX Let SPSLCOST = (BASEX * ((100 + SPC5[1]) / 100))
If SPC5[3] = 2 If BASEX Let CNVTU[0] = 0;CNVTU[1] = SPCUM[1];CNVTU[2] = 2;CNVTA = BASEX \ Gosub L_20000
If SPC5[3] = 2 If AMOUNT Let CNVTA = (AMOUNT + SPC5[1]);CNVTU[0] = SPCUM[1];CNVTU[1] = 0 \ Gosub L_20000
If SPC5[3] = 2 If AMOUNT Let SPSLCOST = AMOUNT
If SPSLCOST And (Not(COST) Or SPSLCOST < COST) Let COST = SPSLCOST \ SPCOSTFLAG = 1
If RBSLCOST If Not(SPSLCOST) Let SPSLCOST = RBSLCOST
If Not(PROD) And SPC3[0] = 3 ! "fixed price for commdy, allprod or size sp's
  CNVTU[0] = PFU1[12];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = T9
  Gosub L_20000 \ T9 = AMOUNT
End If 
If Not(SPC5[0]) And (SPC3[0] = 4 Or SPC3[0] = 5) Let T9 = -1 \ Goto L_25750
If SPC3[0] = 6 Let X3 = -2;MESS$ = "BREAK JUMP" \ Goto L_25750
If SPC3[0] = 1 Or SPC3[0] = 2 Gosub L_4325
If SPC3[0] = 3 Let MESS$ = "FIXED PRICE" \ Goto L_25740
If SPC4[2] = 2 And SPC5[0] And (SPC3[0] = 4 Or SPC3[0] = 5)
  Gosub L_6500
  BASEX = T9;T9 = (BASEX * ((100 + SPC5[0]) / 100));Z1$ = " + "
  If SPC5[0] > 0 Let MESS$[Len(MESS$)] = ")+",SPC5[0],"%" Else Let MESS$[Len(MESS$)] = ")",SPC5[0],"%"
End If 
If SPC3[0] = 1 Let T9 = (BASEX * ((100 + SPC5[0]) / 100)) \ If SPC5[0] > 0 Let Z1$ = " +" Else Let Z1$ = " "
If SPC3[0] = 2 Let T9 = (BASEX / ((100 - SPC5[0]) / 100))
If Not(T9) Goto L_25740
CNVTU[0] = 0;CNVTU[1] = PRICE
CNVTU[2] = 2;CNVTA = BASEX \ Gosub L_20000
If SPC3[0] <> 4 And SPC3[0] <> 5 Let MESS$ = "(",AMOUNT,Z1$,SPC5[0],"%)"
If SPC3[0] = 2 Let MESS$ = "(",SPC5[0],"%"," GP% of ",AMOUNT,")"
L_25740: If T9
  F8 = 99
  If SPC3[0] = 3 And (L9[0] = 2 Or L9[0] = 4 Or L9[0] = 6 Or L9[0] = 12)
    L9[0] = 13
  End If 
Else 
  SPC5[0] = 0;SPC5[1] = 0
End If 
L_25750: If PROD If T9 Let PTYPE$ = "SPECIAL PRICE"
If K9$[7,7] = "#" If T9 Let PTYPE$ = "SPECIAL ALL PRODS"
If K9$[7,7] = "*" If T9 Let PTYPE$ = "COMMODITY  PRICE"
If K9$[7,7] = "&" If T9 Let PTYPE$ = "SIZE PRICE"
if k9$[7,7]="-" if t9 let PTYPE$="COST GROUP PRICE"
If T9 If K9$[1,6] = "999999" Let PTYPE$ = PTYPE$," -PROMOTION"
L_29970: Return 
L_29980: Rem Exit from special pricing
Return 
!
! sort special price 1 - 10 by min qty/wgt
MLVL_SPR: ! multi level - return mlvl 1-10 (1 default)
LET UWORK[10]=1;S3[4]=1 ! FOR MIN LEVEL
if spc3[2] ! qty um check
	let unit=spc3[2]
	! gosub CheckUnit: ! "check if valid unit
	if not(unit) let spc3[2]=0 ! "bad unit
Endif
amount=UWORK[10] ! base
if prod and spc3[2]
	let cnvtu[0]=0;cnvtu[1]=spc3[2];cnvtu[2]=1;cnvta=UWORK[10] ! "convert qty
	gosub L_20000: ! "get quantity in AMOUNT
Endif
if not(prod) and not(spc3[2])
	let cnvtu[0]=0; cnvtu[1]=pfu1[9]; cnvtu[2]=1; cnvta=UWORK[10]
   gosub L_20000:
Endif
OrdQty=amount ! for check of min=qty, s3[4]=weight
x2[1]=0;x2[2]=0;x2[3]=0;x2[4]=0 ! qty/wgt >=
if spc6[1]=1 ! main (price 1) - set the bar
	if ordqty>=spc4[0] and x2[1]<=spc4[0] let x2[1]=spc4[0];mlvl=1
Endif
if spc6[1]=2 ! main (price 1) - set the bar
	if s3[4]>=spc4[0] and x2[2]<=spc4[0] let x2[2]=spc4[0];mlvl=1
Endif
for x=0 to 8
	if aptype[x]>0 and aptype[x]<9 ! prctype determines used
		if amtype[x]<>2 let amtype[x]=1 ! default = qty
		if amtype[x]=1 ! qty
			if ordqty>=amqty[x] and x2[1]<=amqty[x] let x2[1]=amqty[x];x2[3]=x+2
		Endif
		if amtype[x]=2 ! wgt
			if s3[4]>=amqty[x] and x2[2]<=amqty[x] let x2[2]=amqty[x];x2[4]=x+2
		Endif
	Endif
Next x
! x2[3]=qtylvl;x2[4]=wgtlvl
if x2[3]=0 and x2[4]=0 RETURN ! no match of any other levels - use 1
if x2[1]=ordqty and X2[2]=s3[4] ! tie goes to wgt per specs
	if x2[4] 
		let mlvl=x2[4] 
		goto mlsprdone:
	Endif ! no wgt lvl - continue
Endif
MLvl=x2[4];x2[9]=0 ! wgt lvl has priority unless really low wgt lvl
if ordqty let X2[9]=s3[4]/ordqty ! unit wgt
if (x2[9]*x2[1])>x2[2] let mlvl=x2[3] ! qty lvl wgt>wgt lvl (ie: 20 cs>5 lbs)
If x2[1] and x2[2]=0 and x2[3]<>0 let mlvl=x2[3] ! qty level>0 - wght lvl=0
if x2[1]=0 and x2[2]=0 and x2[4]<>0 let mlvl=x2[4] ! both zero - use wgt
if mlvl=0 and x2[3]<>0 let Mlvl=x2[3] ! no wgt - use qty

MLSPRDone: ! done
if mlvl>1 ! from price 2-10 - move to standard vars
	x=mlvl-2 ! var displ 0-8
	SPC3[0]=APTYPE[X];SPC3[1]=ABTYPE[X]
	spc4[0]=amqty[x];spc6[1]=amtype[x]
	spc5[0]=apfact[x]
Endif
if mlvl<1 let mlvl=1
Return
!
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
OUTEND: Rem EXIT PROGRAM
!
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 	
try call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 