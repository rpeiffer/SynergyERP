! >>> Program 232
!
! description Credit Check Report
! loadsave -w -n 100,10 -o prog/dxport/232.dl4 src/232.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 26, 2003  11:49:40
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/mx2/mx232.src (univ2) [mary] {30593}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem MX232 - CREDIT CHECK REPORT
Rem AUTHOR: DAVE
Rem LAST UPDATE:  rek 6/9/92  division add/sort
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim rstr$[5000]
dim 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50]
dim 2%,WHSE,JRNL
dim 1%,IntCo,eflg,returnstatus
dim e$[500] ! 
dim 3%,SPREC,rec_uac,tottran
Dim N$[30],R$[15],Custom_Customer$[30]
Dim 1%,FLAG
Dim 2%,T1[5],T2,D3[1],C1[12],ORDERNO
Dim 3%,C4[5],T3,CFIN[8]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],ARDATE$[8]
Dim 1%,F,X1,PD1[9],SDIV,EDIV,DIV,2%,X2,3%,J,X3
Dim K1$[50],K2$[20],K3$[20],X$[10],U5$[20],I$[10]
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],Message$[600]
!Dim action$[30],options$[30],userid$[8]
!Dim rstr$[2000],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo 
!Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
!Open #1,J$
eflg=0
returnstatus=1
For J = 2 To 4
  If J = 4 Let J$ = "CNTRL/PRTDFLT" \ Goto L_825
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
L_825: If J1 <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "992","-1808"
Mat Read #1,0,100;ARDATE$;
Read #1,3;CNAME$;
Mat Read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
!If Err 0 Let J8 = Spc(8)
J8 = 0 !\ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 !  \ If J8 Let J9 = 20
!Print 'CS';@0,1;"MX232 - CREDIT CHECK REPORT";
!L_900: Rem GET RANGES
!L_910: Print @0,17;"Enter starting division, <CR> for all or   E: to exit: ";'CE';
!SDIV = 0;EDIV = 0
!Input Len 16386;""K2$ \ If K2$ = "E" Goto OUTEND
!If K2$ = "" Let K3$ = "99";EDIV = 99 \ Goto L_971
!SDIV = K2$ \ If SDIV > 0 And SDIV < 100 Goto L_940
!Print @0,23;'RB';"INVALID DIVISION!"; \ Signal 3,20 \ SDIV = 0 \ Goto L_910
!L_940: Print @1,19;"Enter ending division,  <CR> for last or  E: to exit: ";'CE';
!Input Len 16386;""K3$ \ If K3$ = "E" Goto OUTEND
!If K3$ = "" Let K3$ = "99"
!EDIV = K3$ \ If EDIV > 0 And EDIV < 100 Goto L_965
!Print @0,23;'RB';"INVALID DIVISION!"; \ Signal 3,20 \ EDIV = 0 \ Goto L_940
!L_965: If SDIV <= EDIV Goto L_971
!Print @0,23;'RB';"INVALID RANGE!";'CE'; \ Signal 3,20 \ Goto L_900
!L_971: Print @0,21;"Sort by Order Number ? (Y/N) ";'CE';
!Input Len 16387;""I$ \ If I$ <> "Y" And I$ <> "N" Goto L_971
!If I$ = "Y" Let SORT_ORDER = 1 Else Let SORT_ORDER = 0
Call dxget("SDIV",tmp$)                                                 
let SDIV=tmp$
Call dxget("EDIV",tmp$) 
let ediv=tmp$
If sdiv > ediv
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Ending Division Number Must Be Greater Than Starting. "
	! goto outend:
endif
if not(sdiv) and not(ediv)
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Starting or Ending Division Number Must Be Entered. "
	! goto outend:	
endif
Call DXGet("SORTORDER",tmp$)
LET SORT_ORDER=0
if tmp$<>"" let sort_order=1
Call dxget("PRPRT",tmp$) ! (NOT ADDED?)      
audonly = 0 \ If tmp$ <> "" Let audonly = 1  
if eflg<>0 goto outend:
K2$ = "";K3$ = "}}}}}}"
K1$ = K2$ \ If J2 If Not(J8) Print #0;"\14\";
J1 = 90 \ J2 = 0
L_1500: Rem SORT BY DIVISION
!Print @0,22;'CE';"Sorting...please wait"; \ Signal 3,0
Search #9,3,1;K1$,V1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1550
Search #9,5,1;K1$,V1,E \ If E Gosub ERR_SEARCH
Goto L_1500
L_1550: Rem
K1$ = K2$
L_1560: Search #2,3,1;K1$,V1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
Mat Read #2,V1,0;T1;
Read #2,V1,70;ORDERNO;
PD1[1] = 0
If T1[5] < 0 Or T1[5] > Chf(4) - 1 Goto L_1580
Mat Read #4,T1[5],0;PD1;
L_1580: Gosub L_1800 \ Goto L_1588
Mat Read #3,R3,142;C1;
Mat Read #3,R3,544;CFIN;
L_1588: DIV = PD1[1] \ If Not(DIV) Let DIV = CFIN[4]
If DIV < SDIV Or DIV > EDIV Goto L_1560
J4$ = " ",J4$
If Not(SORT_ORDER)
  J4$ = DIV Using "##    "
  J4$[7,9] = C1[2] Using "###"
Else 
  J4$ = ORDERNO Using "######";J4$[7,9] = C1[2] Using "###"
End If 
J4$[10] = K1$
Search #9,4,1;J4$,V1,E \ If E Gosub ERR_SEARCH
Goto L_1560
L_1800: Rem GET CUSTOMER
J2$ = " ",J2$ \ J2$ = T1[2] Using "######"
Search #3,2,1;J2$,R3,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Return 1
C1[2] = 0;CFIN[4] = 0
Return 
L_1900: !  Print @0,22;'CE';"Printing...please wait"; \ Signal 3,0
J3$ = "0000000000"
!If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
If SORT_ORDER
  K1$ = " ",K1$ \ Goto L_2000
Else 
  K1$ = K2$
End If 
Search #9,2,1;K1$,R1,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2010
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
L_2010: Rem
Mat Read #2,R1,0;T1;
Mat Read #2,R1,24;N$;
Mat Read #2,R1,54;R$;
Mat Read #2,R1,70;T2;
Mat Read #2,R1,74;T3;
Gosub L_3000
Read #1,22,(T1[1] - 1) * 16;J2$[1,16];
J$ = T1[1] Using "## " \ J$[4] = J2$
J2$ = "NO " \ If T1[4] = 99 Let J2$ = "YES"
If T1[4] = 90 Let J2$ = "HLD"
Gosub L_5800
If Not(SORT_ORDER) If K1$[1,2] <> J3$[1,2] Print #0;"\15\DIVISION ";K1$[1,2] \ J3$ = K1$ \ J1 = J1 + 2
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS CALC
Return 
J3$ = "0000000000"
L_3000: Rem GET CR CHK TYPE
If Not(T1) Let J4$ = "NO CHECK"
If T1 Let J4$ = T1 Using "FLAG ### DAYS PAST DUE"
If T1 = 999 Let J4$ = "ORDER TO ORDER"
Return 
L_5000: Rem PRINT LINE
Print #0; Tab 0;K1$[7,9];
Print #0; Using "######"; Tab 4;T1[2];
Print #0; Tab 11;N$[1,27];
X2 = T1[3] \ Gosub L_7770
Print #0; Tab 38;X$[1,8];
Print #0; Using "######"; Tab 47;T2;
Print #0; Using "###,###.##"; Tab 54;T3;
Print #0; Tab 65;J4$[1,27];
Print #0; Tab 92;J$[1,20];
Print #0; Tab 112;J2$[1,3];
Print #0; Tab 116;R$[1,15];
if custom_customer$="ACME" ! wants a triple space!
	PRINT #0;"\15\"	! "cct83108, triple space the report, custom for acme
	PRINT #0;"\15\"
Else
Print #0;"\15\";
Endif
tottran=tottran+1
Return 
L_5800: Rem HEADINGS ROUTINE
If custom_Customer$="ACME"
	LET J1=J1+3 \ IF J1<J9 RETURN 
Else
	J1 = J1 + 1 \ If J1 < J9 Return 
Endif
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "U5$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
if custom_customer$="ACME" Let J1=8
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 232 - ";Msc$(3);
Print #0; Tab 47;"C R E D I T   C H E C K   R E P O R T";
if audonly<>0 print #0;tab 120;"*Preview*";
print #0;""
Print #0;"\15\"
Print #0; Tab 0;"SLM";
Print #0; Tab 5;"CUST#";
Print #0; Tab 11;"CUSTOMER NAME";
Print #0; Tab 38;"DATE";
Print #0; Tab 46;"ORDER #";
Print #0; Tab 57;"ORD AMT";
Print #0; Tab 65;"CREDIT CHK TYPE";
Print #0; Tab 92;"CREDIT CODE";
Print #0; Tab 112;"OKAY";
Print #0; Tab 117;"REASON";
Print #0;" "
Print #0;"\15\";
J3$ = "000000"
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem CLEAR
If audonly=1 return ! preview only do not clear
if eflg<>0 return
!Print @0,23;'CE';"DO YOU WANT TO CLEAR THE FILE? (Y/N) ";
!Input ""J$ \ If J$ = "N" Return 
!If J$ <> "Y" Goto L_8000
!If Err 0 Gosub ERR_TRAP

K1$ = " ",K1$
L_8052: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
K2$ = " ",K2$;K2$ = K1$[10];K2$[19] = ""
Search #2,2,1;K2$,R2,E
If E Or R2 <> R1 Gosub ERR_SEARCH
Search #2,5,1;K2$,R2,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #2,1,0;K2$,R2,E \ If E Gosub ERR_SEARCH
Goto L_8052

L_9100: Rem END OF THIS RANGE
!Print #0;"\15\**  END  **";
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!If Err 0 Rem
!Close #0
!If Err 0 Gosub ERR_TRAP
Gosub L_8000
Goto OUTEND
Stop 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Chain "MX000C"
!Close 
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflg)
	if not(tottran)
		returnstatus=1
		let message$=message$+"There are no transactions available to list"
		
		message$=message$+"."
	else
		Let message$=message$+" "+str$(tottran)+" Transaction(s) Listed"
		If audonly<>1 let Message$=Message$+" and Cleared"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program