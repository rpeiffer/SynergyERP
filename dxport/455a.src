! >>> Program 455a
!
! description Product Customer MTD/YTD Summary - by Commodity
!
! loadsave -w -n 100,10 -o prog/dxport/455a.dl4 src/455a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  1, 2001  12:31:49
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx455a.src (univ2) [kag] {52221}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX455A - COMMODITY / CUSTOMER SALES
Rem AUTHOR: DD   APR  9, 1987
Rem LAST UPDATE: roman 07/05/1991  units conversion / clean up
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],MONTH_[4],3%,PFU2[6],CNVTA,A[33]
Com MTH$[108]
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
dim CustNo$[6],CustName$[30],Commodity$[4],CommodityDesc$[16]
Dim 1%,M9,WHSE,F,F1,F2,X1,BOYMONTH,ARMONTH,ch_pw
Dim 2%,C1,D9[5],X2,SLSM
Dim 3%,parm[10],whmisc2[7]
Dim 3%,S2[12,2],H2[12,2],J,X3,T9[20],T8[20],T7[20],Z1[12,2],Z2[12,2]
Dim C1$[30],A$[156],P0$[156],P$[12],P9$[50],Z1$[50]
Dim J$[40],J0$[20],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8]
Dim K1$[50],K2$[4],K3$[20],X$[10],T9$[26],D$[35]
Dim J5$[12],J6$[12],K4$[30],K5$[4],K6$[30],3%
dim kpw$[50] 
Read #1,88,2288;J$;
Ropen #6,J$
Read #1,3;CNAME$;
For J = 2 To 7
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1808","1792","2016","-1","-1","1744"
ch_pw=7
Mat Read #1,0,100;ARDATE$;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,51,74;BOYMONTH;
Read #1,0,120;M9;
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 22
F = 0
!
!!!! dx add xport reporting code
dim tmp$[500]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"455a",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!!!! dx add xport reporting code
call dxget("h1",tmp$) \ H1=tmp$ ! warehouse
call dxget("k2",K2$) ! starting commodity
call dxget("k5",K5$) ! endng commodity
!!!! dx end
!
If H1<0 or H1 > D9[5] let e$="Invalid warehouse entered!" \ error 10000
!
if K5$="" let K5$="}",K5$
if K5$<K2$let e$="Invalid ending commodity, must be > starting commodity!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

! - L_1000: Rem "=============================== picks
! - L_1010: Print 'CS';@0,0;"MX455A";@30,0;"COMMODITY / CUSTOMER SALES"
! - L_1020: Print @0,10;"ENTER WAREHOUSE,   0: FOR ALL ";
! - Input ""K2$
! - H1 = K2$ \ If H1 < 0 Goto L_1020
! - If H1 > D9[5] Goto L_1020
! - If K2$ <> "0" If Not(H1) Goto L_1010
! - L_1070: Print @0,12;"ENTER STARTING COMMODITY, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - Print @6,14;"ENDING   COMMODITY, <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K5$ \ If K5$ = "E" Goto OUTEND
! - If K5$ = "" Let K5$ = "}}}}"
! - If K2$ <= K5$ Goto L_1450
! - Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50 \ Print @0,22;'CL' \ Goto L_1070
! - L_1450: Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto L_9010
! - If Z1$ = "R" Goto L_1000
! - If Z1$ <> "P" Goto L_1450
!
! *** Process Section
!
if j8 ! dx xml headings
  tmp$="COMMODITY",fdel$,"COMMODITY DESC",fdel$
  tmp$=tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"SALESMAN",fdel$,"WHSE",fdel$
  tmp$=tmp$,"MTD UNITS",fdel$,"MTD SALES",fdel$
  tmp$=tmp$,"MTD GP",fdel$,"MTD PERCENT",fdel$
  tmp$=tmp$,"YTD UNITS",fdel$,"YTD SALES",fdel$
  tmp$=tmp$,"YTD GP",fdel$,"YTD PERCENT",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
J1 = 90 \ J2 = 0 \ K4$ = K2$
! - Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
Gosub L_5800
Search #3,2,3;K4$,R2,E
If Not(E) Goto L_1555
L_1540: Search #3,3,3;K4$,R2,E
If E = 2 Goto L_9100
L_1555: !
MAT  READ #3,R2,0;A$;    
gosub get_prodwhse:      
IF PARM[2]=0 GOTO L_1540:
If K4$[1,Len(K5$)] > K5$ Goto L_9100
K6$ = " ",K6$ \ K6$ = K4$[5,16]
Search #4,2,2;K6$,V1,E
If Not(E) Goto L_1590
K6$ = " ",K6$ \ K6$ = K4$[5,16]
Goto L_1540
L_1590: Rem "commodity has activity
If J5$ = "" Let J5$ = K4$[1,4] \ Gosub L_3500
If J5$[1,4] <> K4$[1,4] Gosub L_4500
K6$ = " ",K6$
L_1610: Search #2,3,1;K6$,R3,E
If E = 2 Goto L_1665
K1$ = " ",K1$ \ K1$ = K6$[1,6]
J3$ = " ",J3$ \ J4$ = " ",J4$ \ K1$[7] = ""
J3$ = K1$ \ J4$ = K1$ \ M = 2
Gosub L_1800 \ Gosub L_1900
If J3$[1,2] <> "~~" Goto L_1685
If J4$[1,2] <> "~~" Goto L_1685
Goto L_1610
!
L_1665: Rem "end of customers
Gosub L_5000
K4$[5] = "~"
Goto L_1540
!
L_1685: Rem "yup! there is activity for this customer
If J6$ = "" Let J6$ = K6$[1,6]
If J6$ <> K6$[1,6] Gosub L_5000
If J3$[1,2] <> "~~" Gosub L_2500
If J4$[1,2] <> "~~" Gosub L_3000
Goto L_1750
!
L_1715: Rem SEE IF MULTI WHSES
M = 3 \ Gosub L_1800 \ Gosub L_1900
If J3$[1,6] <> K1$[1,6] Let J3$ = "~",J3$
If J4$[1,6] <> K1$[1,6] Let J4$ = "~",J4$
If J3$[1,2] <> "~~" Gosub L_2500
If J4$[1,2] <> "~~" Gosub L_3000
L_1750: If (F1 + F2) Gosub L_2000
If J3$[1,2] <> "~~" Goto L_1715
If J4$[1,2] <> "~~" Goto L_1715
Goto L_1610
!
L_1800: Rem "============================== seq read salescurr
Search #4,M,1;J3$,R4,E
If E = 1 Or E = 2 Let J3$ = "~",J3$ \ Goto L_1810
L_1810: For C = 0 To 12
  For R = 0 To 2
    S2[C,R] = 0
  Next R
Next C
F1 = 1
If J3$[1,6] <> K1$[1,6] Let J3$ = "~",J3$ \ Goto L_1880
D9 = J3$[19,20] \ If H1 If H1 <> D9 Let M = 3 \ Goto L_1800
J0$ = J3$[7,18] \ Gosub L_2800
L_1880: F1 = 0
Return 
!
L_1900: Rem "============================= seq read saleshist
J4$ = J3$
R5 = R4
For C = 0 To 12
  For R = 0 To 2
    H2[C,R] = 0
  Next R
Next C
F2 = 1
If J4$[1,6] <> K1$[1,6] Let J4$ = "~",J4$ \ Goto L_1980
D9 = J4$[19,20] \ If H1 If H1 <> D9 Goto L_1900
J0$ = J4$[7,18] \ Gosub L_2800
L_1980: F2 = 0
Return 
!
L_2000: Rem "================================= process records
Gosub L_2600
T9 = S2[M9,1] - S2[M9,2] \ T9[1] = S2[0,1] - S2[0,2]
T9[6] = H2[M9,1] - H2[M9,2] \ T9[10] = H2[0,1] - H2[0,2]
Gosub L_5800
Gosub L_2200
Return 
!
L_2200: Rem "==================================== totals
T9[2] = T9[2] + 1 \ T8[2] = T8[2] + 1
T9[3] = T9[3] + S2[M9,0] \ T8[3] = T8[3] + S2[M9,0]
T9[4] = T9[4] + S2[M9,1] \ T8[4] = T8[4] + S2[M9,1]
T9[5] = T9[5] + T9 \ T8[5] = T8[5] + T9
T9[7] = T9[7] + S2[0,0] \ T8[7] = T8[7] + S2[0,0]
T9[8] = T9[8] + S2[0,1] \ T8[8] = T8[8] + S2[0,1]
T9[9] = T9[9] + T9[1] \ T8[9] = T8[9] + T9[1]
T9[12] = T9[12] + 1 \ T8[12] = T8[12] + 1
T9[13] = T9[13] + H2[M9,0] \ T8[13] = T8[13] + H2[M9,0]
T9[14] = T9[14] + H2[M9,1] \ T8[14] = T8[14] + H2[M9,1]
T9[15] = T9[15] + T9[6] \ T8[15] = T8[15] + T9[6]
T9[17] = T9[17] + H2[0,0] \ T8[17] = T8[17] + H2[0,0]
T9[18] = T9[18] + H2[0,1] \ T8[18] = T8[18] + H2[0,1]
T9[19] = T9[19] + T9[10] \ T8[19] = T8[19] + T9[10]
T7[2] = T7[2] + 1 \ T7[3] = T7[3] + S2[M9,0]
T7[4] = T7[4] + S2[M9,1] \ T7[5] = T7[5] + T9
T7[7] = T7[7] + S2[0,0] \ T7[8] = T7[8] + S2[0,1]
T7[9] = T7[9] + T9[1] \ T7[12] = T7[12] + 1
T7[13] = T7[13] + H2[M9,0] \ T7[14] = T7[14] + H2[M9,1]
T7[15] = T7[15] + T9[6] \ T7[17] = T7[17] + H2[0,0]
T7[18] = T7[18] + H2[0,1] \ T7[19] = T7[19] + T9[10]
Return 
!
L_2500: Rem "=================================== read salescurr
If Not(F1) Return 
Mat Read #4,R4,0;P$;
Mat Read #4,R4,12;C1;
Mat Read #4,R4,16;S2;
Read #4,R4,254;WHSE;
Gosub L_7000
Return 
!
L_2600: Rem "============================== get customer
J2$ = " ",J2$ \ J2$ = K6$[1,6]
SLSM = 0
Search #2,2,1;J2$,R2,E
If E = 1 Let C1$ = "* ERROR * CUSTOMER NOT FOUND!" \ Goto L_2640
Mat Read #2,R2,30;C1$;
Read #2,R2,150;SLSM;
CustNo$=J2$[1,6] \ CustName$=rtrim$(C1$[1,30])
L_2640: Return 
!
L_2800: Rem "================================= get product
J$ = " ",J$ \ J$ = J0$[1,12]
Search #3,2,1;J$,V1,E
If E = 1 Return 
Mat Read #3,V1,0;A$;
Mat Read #3,V1,256;A;
Mat Read #3,V1,512;PFU1;
Mat Read #3,V1,554;PFU2; 
If A$[152,155] = J5$[1,4] Return 1
Return 
!
L_3000: Rem "=================================== read saleshist
If Not(F2) Return 
Mat Read #4,R5,0;P$;
Mat Read #4,R5,12;C1;
Mat Read #4,R5,256;H2;
Read #4,R5,254;WHSE;
Gosub L_7040
Return 
!
L_3500: Rem "================================ get commodity
J2$ = " ",J2$ \ J2$ = K4$[1,4]
Search #6,2,1;J2$,R6,E
If E = 1 Goto L_3540
Mat Read #6,R6;D$;
Goto L_3560
L_3540: Rem "not found
D$[1,16] = "COMM NOT FOUND!"
L_3560: 
if J8=0 If F <> 99 Print #0;"COMMODITY: ";J2$;" DESC: ";D$[1,16];"\15\"
J1 = J1 + 2
Commodity$=J2$ \ CommodityDesc$=rtrim$(D$[1,16])
Return 
!
L_4000: Rem "=================================== grand total
if J8 return ! dx xml
!
J1 = J1 + 3 \ Gosub L_5800
Print #0;"\15\ TOTALS";
Print #0; Using "--------#"; Tab 43;T9[3];
Print #0; Using "--------#.##"; Tab 53;T9[4];
Print #0; Using "--------#.##"; Tab 66;T9[5];
T1 = 0 \ If T9[4] Let T1 = FNR(T9[5] * 100 / T9[4])
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T9[7];
Print #0; Using "--------#.##"; Tab 97;T9[8];
Print #0; Using "--------#.##"; Tab 110;T9[9];
T2 = 0 \ If T9[8] Let T2 = FNR(T9[9] * 100 / T9[8])
Print #0; Using "----.##"; Tab 123;T2;
Print #0;"\15\ LAST YEAR TOTALS";
Print #0; Using "--------#"; Tab 43;T9[13];
Print #0; Using "--------#.##"; Tab 53;T9[14];
Print #0; Using "--------#.##"; Tab 66;T9[15];
T1 = 0 \ If T9[14] Let T1 = FNR(T9[15] * 100 / T9[14])
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T9[17];
Print #0; Using "--------#.##"; Tab 97;T9[18];
Print #0; Using "--------#.##"; Tab 110;T9[19];
T2 = 0 \ If T9[18] Let T2 = FNR(T9[19] * 100 / T9[18])
Print #0; Using "----.##"; Tab 123;T2;
Return 
!
L_4500: Rem "======================================== commodity totals
if J8 return ! dx xml
!
If Not(T8[2]) Goto L_4740
K6$ = " ",K6$ \ Gosub L_5000
J1 = J1 + 4 \ Gosub L_5800
Print #0;"\15\ COMMODITY TOTALS";
Print #0; Using "--------#"; Tab 43;T8[3];
Print #0; Using "--------#.##"; Tab 53;T8[4];
Print #0; Using "--------#.##"; Tab 66;T8[5];
T1 = 0 \ If T8[4] Let T1 = FNR(T8[5] * 100 / T8[4])
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T8[7];
Print #0; Using "--------#.##"; Tab 97;T8[8];
Print #0; Using "--------#.##"; Tab 110;T8[9];
T2 = 0 \ If T8[8] Let T2 = FNR(T8[9] * 100 / T8[8])
Print #0; Using "----.##"; Tab 123;T2;
Print #0;"\15\ LAST YEAR TOTALS";
Print #0; Using "--------#"; Tab 43;T8[13];
Print #0; Using "--------#.##"; Tab 53;T8[14];
Print #0; Using "--------#.##"; Tab 66;T8[15];
T1 = 0 \ If T8[14] Let T1 = FNR(T8[15] * 100 / T8[14])
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T8[17];
Print #0; Using "--------#.##"; Tab 97;T8[18];
Print #0; Using "--------#.##"; Tab 110;T8[19];
T2 = 0 \ If T8[18] Let T2 = FNR(T8[19] * 100 / T8[18])
Print #0; Using "----.##"; Tab 123;T2
Print #0;" "
L_4740: Rem
For I = 0 To 20
  T8[I] = 0
Next I
If J5$ <> K4$[1,4] Gosub L_3500
J5$ = K4$[1,4]
Return 
!
L_5000: Rem "========================================== print line
If Not(T7[2]) Goto L_5140
!
if J8
  tmp$=Commodity$,fdel$,CommodityDesc$,fdel$
  tmp$=tmp$,CustNo$,fdel$,CustName$,fdel$
  tmp$=tmp$,SLSM using "###",fdel$,WHSE using "##",fdel$
  tmp$=tmp$,T7[3] Using "------#.##",fdel$
  tmp$=tmp$,T7[4] Using "--------#.##",fdel$
  tmp$=tmp$,T7[5] Using "--------#.##",fdel$
  T1 = 0 \ If T7[4] Let T1 = FNR(T7[5] / T7[4] * 100)
  tmp$=tmp$,T1 Using "----.##",fdel$
  tmp$=tmp$,T7[7] Using "------#.##",fdel$
  tmp$=tmp$,T7[8] Using "--------#.##",fdel$
  tmp$=tmp$,T7[9] Using "--------#.##",fdel$
  T1 = 0 \ If T7[8] Let T1 = FNR(T7[9] / T7[8] * 100)
  tmp$=tmp$,T1 Using "----.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
  tmp$=Commodity$,fdel$,CommodityDesc$,fdel$
  tmp$=tmp$,CustNo$,fdel$,CustName$,fdel$
  tmp$=tmp$,SLSM using "###",fdel$,WHSE using "##",fdel$
  tmp$=tmp$,T7[13] Using "------#.##",fdel$
  tmp$=tmp$,T7[14] Using "--------#.##",fdel$
  tmp$=tmp$,T7[15] Using "--------#.##",fdel$
  T1 = 0 \ If T7[14] Let T1 = FNR(T7[15] * 100 / T7[14])
  tmp$=tmp$,T1 Using "----.##",fdel$
  tmp$=tmp$,T7[17] Using "------#.##",fdel$
  tmp$=tmp$,T7[18] Using "--------#.##",fdel$
  tmp$=tmp$,T7[19] Using "--------#.##",fdel$
  T1 = 0 \ If T7[18] Let T1 = FNR(T7[19] * 100 / T7[18])
  tmp$=tmp$,T1 Using "----.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  Goto L_5140 ! clear totals
endif
!
J1 = J1 + 3 \ Gosub L_5800
Print #0; Tab 1;J2$[1,6];
Print #0; Tab 10;C1$[1,30];
Print #0; Using "--------#"; Tab 43;T7[3];
Print #0; Using "--------#.##"; Tab 53;T7[4];
Print #0; Using "--------#.##"; Tab 66;T7[5];
T1 = 0 \ If T7[4] Let T1 = FNR(T7[5] / T7[4] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T7[7];
Print #0; Using "--------#.##"; Tab 97;T7[8];
Print #0; Using "--------#.##"; Tab 110;T7[9];
T1 = 0 \ If T7[8] Let T1 = FNR(T7[9] / T7[8] * 100)
Print #0; Using "----.##"; Tab 123;T1
Print #0; Using "###"; Tab 10;"SALESMAN: ";SLSM;
Print #0; Using "###"; Tab 37;WHSE;
Print #0; Using "--------#"; Tab 43;T7[13];
Print #0; Using "--------#.##"; Tab 53;T7[14];
Print #0; Using "--------#.##"; Tab 66;T7[15];
T1 = 0 \ If T7[14] Let T1 = FNR(T7[15] / T7[14] * 100)
Print #0; Using "----.##"; Tab 79;T1;
Print #0; Using "--------#"; Tab 87;T7[17];
Print #0; Using "--------#.##"; Tab 97;T7[18];
Print #0; Using "--------#.##"; Tab 110;T7[19];
T1 = 0 \ If T7[18] Let T1 = FNR(T7[19] / T7[18] * 100)
Print #0; Using "----.##"; Tab 123;T1
Print #0;" "
L_5140: For I = 0 To 20 \ T7[I] = 0 \ Next I
J6$ = K6$[1,6]
Gosub L_2600
Return 
!
L_5800: Rem "======================================= headings
if J8 return ! dx xml
!
If J1 < J9 Return 
If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 455A - ";T9$;
Print #0; Tab 42;"C O M M O D I T Y / C U S T O M E R   S A L E S"
Print #0;"\15\";
Print #0; Tab 47;"---------------- M T D ----------------";
Print #0; Tab 91;"---------------- Y T D ----------------"
Print #0; Tab 1;"CUST # ";
Print #0; Tab 10;"CUSTOMER NAME"; Tab 36;"WHSE";
Print #0; Tab 47;"UNITS";
Print #0; Tab 53;"DOLLAR SALES";
Print #0; Tab 68;"GR. PROFIT";
Print #0; Tab 79;"PERCENT";
Print #0; Tab 91;"UNITS";
Print #0; Tab 97;"DOLLAR SALES";
Print #0; Tab 112;"GR. PROFIT";
Print #0; Tab 123;"PERCENT"
Print #0;" "
Return 
!
L_7000: Rem CONVERT UNITS
If Not(PFU1[9]) Return 
For I = 0 To 12
  X3 = S2[I,0] \ Gosub L_10000
  S2[I,0] = AMOUNT
Next I
Return 
!
L_7040: If Not(PFU1[9]) Return 
For I = 0 To 12
  X3 = H2[I,0] \ Gosub L_10000
  H2[I,0] = AMOUNT
Next I
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH
For I = 0 To 12
  For X6 = 0 To 2
    If I Let S2[I,X6] = Int(Z1[X7,X6] + .5) Else Let S2[0,X6] = Int(Z1[0,X6] + .5)
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_8100: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH;X8 = 0
For I = 0 To 12
  For X6 = 0 To 2
    If Not(I) Let H2[0,X6] = Int(Z2[0,X6] + .5) \ Goto L_8160
    If Not(X8) Let H2[I,X6] = Int(Z2[X7,X6] + .5) Else Let H2[I,X6] = Int(Z1[X7,X6] + .5)
L_8160: Next X6
  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]                  
Call ProdGroup(e$,intco,Parm[])
RETURN                  
!
OUTEND: Rem EXIT PROGRAM
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
try call dxclose() else rem
end
!
! - L_9010: Print 'CS'
! - Chain "MX000C"
!
L_9100: Rem END OF THIS RANGE
F = 99
Gosub L_5000
F = 99 \ Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[9]
CNVTU[2] = 1
CNVTA = X3
Gosub L_20000
X3 = AMOUNT
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
