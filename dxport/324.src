! >>> Program 324
!
! description Miscellaneous Receipts To Stock Journal and Accept - Part 1 
! loadsave -w -n 100,10 -o prog/dxport/324.dl4 src/324.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 30, 2008  13:44:59
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx324.src (univ2) [jcs] {49063}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem MX324   R-T-S JOURNAL
Rem AUTHOR: BOBBY FISCHER   MAY 18, 1987
Rem LAST UPDATE: 5/92 - ADD SERIAL NUMBER PRINT
Try
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim rstr$[5000]
dim 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50]
dim 2%,WHSE,JRNL
dim 1%,IntCo,eflg,returnstatus
dim e$[500] ! 
dim 3%,SPREC,rec_uac
!If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,MRTS2[3],GLSECT
Dim 2%,MRTS3[3],CL[2],L9,MJRNL,D0
Dim 3%,MRTS0[5],MRTS4[2],RSN[99],R[50]
Dim 3%,DISP_QTY,DISP_EXT,DISP_COST,DSP_LINE_TOT,DISP_QTY1,LBSFACTOR,LBSUNIT
Dim 3%,PGLCOST,UIDREC[1]
Dim MRTS0$[34],MRTS1$[22],KEYMRTS1$[30],MRTS2$[18],MRTS3$[12]
Dim RCDESC$[17],USR$[40]
Dim 1%,PCAT,2%,SB[24],COMMCODE$[4],MBFLG$[1],SP1$[156]
Dim L9$[2],G8$[2],G9$[140],CLIENT$[4],K24$[20]
Dim P1$[156],L1$[34],P8$[7],P60$[50],U8$[131]
Dim 1%,S,ACCEPTED,URECFLAG,WPF[1023]
Dim 1%,CH_GLARCNTRL,CH_GLM,CH_GLTEMP,CH_WH,CH_FIFOW,CH_PRODWHSE
Dim 1%,CFLAG,C0[3],EFLAG[4],COSTTYPE
Dim 2%,Q[5],Q5,B[24],PWHREC,D9[5],COID,FIFL
Dim 2%,CLIENT,GTEMP1[3],ARDATE,L,V7,V8,V9,VV9,VL
Dim 2%,WHOS
Dim 3%,PW3[24],AVGCOST,INVACCT,INVAMT,RESACCT,RESAMT,GTEMP0[2],W3[24]
Dim 3%,REC_GLARCNTRL,REC_GLTEMP,REC_PRODWHSE
Dim 3%,FQ9[2],FQTY,GLCOST[1],FCOST[1],FICOST[1],UNITGLCOST[1],FGLCOST[1],FLCOST[1]
Dim 3%,TOTCOST[1],TOTCOST1,Q3[1]
Dim K23$[50],K22$[50],CMD$[100],FLW$[50]
Dim J8$[8],U1$[21],C1$[30],D8$[8],GLTKEY$[50],FLK$[50],PRODKEY$[50]
Dim 1%,F,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],K21$[20],K20$[50],K9$[50],GLNAME$[22],T9$[26]
Dim SNK$[50],SN1$[54],PMASK$[12],2%,Q0[1]
Dim P9$[50],3%,SUNIT,CUNIT,SUNIT$[4],CUNIT$[4],3%
Dim PRODWHSE$[15],SCRATCH$[50],RETVAL$[512],POPT$[1],Z2$[2]
Dim 1%,TIEBREAKER,CH_FIFOS
Dim P61$[256],FSKEY$[30],ACPER$[4]
Dim SRCDIR$[50],TXTFNAME$[50],TXTNAME$[50]
Dim 3%,REC_FIFOL,REC_FIFOW,REC_FIFOS,FIFOUNIT,FC2[1]
Dim COMP$[10],WH$[10]
Dim 1%,FIFOSPECCH[10],FIFOSPEC1[10],FIFOSPEC$[150],2%,FIFOSPEC2[10],3%,FIFOSPEC3[16]
Rem {begin src/inc/dim.glarcntrl.i}
Dim 1%,GLC[2]
Dim 2%,GLC0
Dim 3%,GLC1[10],GLC2[20],GLC3[20],GLC4[20],GLC5[20],GLC6[20],GLC7[20]
Dim 3%,GLC8[20],GLC9[20],GLC10[20],GLC11[20],GLC12[20],GLC13[20],GLC14[20]
Rem {end dim.glarcntrl.i}
Dim 1%,FL1[2]
Dim 2%,FL2[3]
Dim 3%,FL3[14],FL4[1]
Dim FL1$[80]
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],Message$[600]
!Dim action$[30],options$[30],userid$[8]
!Dim rstr$[2000],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflg=0
returnstatus=1
abortjournal=0
Call dxget("IJABRT",tmp$)                                                 
tmp$ = UCase$(trim$(tmp$))                                                                                                          
If tmp$ <> "" !
  eflg=1
  abortjournal=99
  Message$ = "Abort Register Checked. No Journal Printed and/or Updated."                                            
  ReturnStatus = 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
  goto L_9010:
ENDIf   
for ctr=2 to 89
	try close #ctr else rem
next ctr
rec_uac = GetUIDRec(e$,IntCo,Userid$)
Mat Read #1,3,172;ARDATE;
Mat Read #1,52,60;P8$;
Mat Read #1,60,50;P60$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Mat Read #1,0,108;D0;
Mat Read #1,52,0;CL;
If P9$[17,17] = "M"
  !Print 'CS';@20,0;"Misc Receipts To Stock Journal";@0,0;"-mx324-";
!ASKGLQUEST: Rem rem system is setup in g/l maintenance mode
  !Print @0,22;'CE';"*WARNING: GENERAL LEDGER IS NOT ACTIVATED!!!";
  !Print @0,23;'CL RB';"Do you wish to continue? (YES/N) ";
  !Input Len (16384 + 3);""X$
  !Call String(1,X$)
  !If X$ = "N" Goto L_9010
  !If X$ <> "YES" Goto ASKGLQUEST
End If 
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 8
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "-1","1792","1728","-1","-1","2976","1744"
! Ropen #79,"USERCNTRL"
!X2 = Spc(5)
!COID = Int((X2 - Int(X2 / 16384) * 16384) / 64)
J$ = "2/RSNRTS" + Str$(COID) \ Ropen #10,J$
J$ = "6/MISCRTS" + Str$(COID) \ Open #2,J$
CH_CNTRL = 1
CH_PRODWHSE = 8
CH_GLARCNTRL = 23
CH_GLM = 21
CH_GLTEMP = 22
Read #1,88,2768;J$; \ open #26,J$
ch_wh=26
CLFLAG = 0
Call dxget("WHSE",J$) ! whse                          
let whse=j$
if whse<0 or whse>99
	let eflg=eflg+1
	Message$ = Message$+ " Invalid Warehouse Number Entered"
endif
Call dxget("PRPRT",tmp$) ! (NOT ADDED?)     
audonly = 0 \ If tmp$ <> "" Let audonly = 1 
Rem CHECK FOR PORTS USING 321 & 323
Mat Read #26,99,900;WPF;
If WPF[321] <> 0 Or WPF[323] <> 0 Or WPF[324] <> 0 ! [J]=321 OR WPF[J]=323
  If WPF[321] <> 0 AND WPF[321]<>REC_UAC
	message$="checking lock"
	e=3 ! check if flag set  with time checking
	call "proglock.dl4","321",e,message$
	if not(e)  ! did not find entry
		! remove other locking
		read #ch_wh,99,900;wpf
		wpf[321]=0
		write #ch_wh,99,900;wpf;
	else
	    eflg=eflg+1
		message$=message$+"Entry In Process "
		UIDREC = WPF[321]
		If UIDREC > 0 
			!Call "getuidinfo",UIDREC,USR$
			USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
			message$=message$+"By User "+rtrim$(usr$[21])
		endif
		message$=message$+" - Please Try Later. "
		Goto L_9010
		!Call "getuidinfo",UIDREC,USR$
		!Print @0,22;'CL RB';"** PROGRAM 321 BEING RUN BY USER ";USR$[21];" TRY LATER. ";
    endif
  End If 
  If WPF[323] <> 0 AND WPF[323]<>REC_UAC
  	e=3 ! check if flag set  with time checking
	call "proglock.dl4","321",e,message$    ! 323 sets same flag as 321
	if not(e)  ! did not find entry
		! remove other locking
		read #ch_wh,99,900;wpf
		wpf[321]=0
		write #ch_wh,99,900;wpf;
	else
	    eflg=eflg+1
		message$=message$+"Delete In Process "
		UIDREC = WPF[323]
		If UIDREC > 0
			!Call "getuidinfo",UIDREC,USR$
			USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
			message$=message$+"By User "+rtrim$(usr$[21])
		endif
		message$=message$+" - Please Try Later. "
		Goto L_9010
		!\ Call "getuidinfo",UIDREC,USR$
		!Print @0,22;'CL RB';"** PROGRAM 323 BEING RUN BY USER ";USR$[21];" TRY LATER. ";
	endif
  End If 
  If WPF[324] <> 0 AND WPF[324]<>REC_UAC ! MTG
  	e=3 ! check if flag set  with time checking
	call "proglock.dl4","324",e,message$   
	if not(e)  ! did not find entry
		! remove other locking
		read #ch_wh,99,900;wpf
		wpf[324]=0
		write #ch_wh,99,900;wpf;
	else
		eflg=eflg+1
		message$=message$+"Journal/Accept In Process "
		UIDREC = WPF[324]
		!\ Call "getuidinfo",UIDREC,USR$
		! Print @0,22;'CL RB';"** PROGRAM 324 BEING RUN BY USER ";USR$[21];" TRY LATER. ";
		If UIDREC > 0
			!Call "getuidinfo",UIDREC,USR$
			USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
			message$=message$+"By User "+rtrim$(usr$[21])
		endif
		message$=message$+" - Please Try Later. "
		Goto L_9010
	End If
  endif
  !Print "PRESS <CR> TO EXIT";
  !Input ""J$
  
End If 
!Call "getuidrec",UIDREC[1]
UIDREC[1] = GetUIDRec(e$,IntCo,Userid$)
WPF[324] = UIDREC[1]
Mat Write #26,99,900;WPF;

!!!! status check !!!!
If P9$[17,17] = "Y" ! open g/l files
  Mat Read #CH_CNTRL,88,48;J$; \ Open #24,J$
  Mat Read #CH_CNTRL,88,464;J$; \ Open #23,J$
  Mat Read #CH_CNTRL,88,176;J$; \ Open #21,J$
  J$ = COID Using "6/glmrstemp#" \ Open #22,J$
  Mat Read #1,51,0;C0;
  If C0[3] And P8$[7,7] = "W"
    CLFLAG = 99
  End If 
  K23$ = " ",K23$;K23$[1,6] = "DFAULT"
  Search #CH_GLARCNTRL,2,1;K23$,REC_GLARCNTRL,E
  If E > 1 Gosub ERR_SEARCH
  If E
GLARCNTRLERROR: Rem "DFA" key missing in file add in 935
    !Print @0,22;"G/L Interface Control Error...Need 'DFA' Setup In Selection 935";
    !Print @0,23;"Press <CR> to return to main menu ";
    !Input Len 1;""J$
    !Call String(1,J$)
    !If J$ <> "" Goto GLARCNTRLERROR
    let eflg=eflg+1
    message$=message$+"G/L Interface Control Error...Need 'DFA' Setup In Selection 935"
    Goto L_9000
  End If 
  K22$ = " ",K22$
  Search #CH_GLTEMP,2,1;K22$,REC_GLTEMP,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
GLMRSTEMPERROR: Rem space key exist in use elsewhere
    !Print @0,22;"Misc Receipts To Stock Are in Process Elsewhere. Try Again Later.";
    !Print @0,23;"Press <CR> to return to main menu ";
    !Input Len 1;""J$
    !Call String(1,J$)
    !If J$ <> "" Goto GLMRSTEMPERROR
  	e=3 ! check if flag set  with time checking
	call "proglock.dl4","324",e,message$    
	if not(e)  ! did not find entry
	  	e=3 ! check if flag set  with time checking
		call "proglock.dl4","324a",e,message$    ! 323 sets same flag as 321
		if not(e)  ! did not find entry
			!! clear glmrstemp of entries
			k22$ = " ",k22$
			search #ch_gltemp,5,1;k22$,rec_gltemp,e \ if e > 2 gosub err_search
			e=3 \ search #ch_gltemp,1,0;k22$,rec_gltemp,e \ if e > 1 gosub err_search
gltestloop:	search #ch_gltemp,3,1;k22$,rec_gltemp,e \ if e > 2 gosub err_search
			if not(e)
				search #ch_gltemp,4,1;k22$,rec_gltemp,e \ if e > 1 gosub err_search
				e=3
				search #ch_gltemp,1,0;k22$,rec_gltemp,e \ if e > 1 gosub err_search
				goto gltestloop:
			endif
		endif
	else
		eflg=eflg+1
		message$=message$+"Misc Receipts To Stock Are in Process Elsewhere. Try Again Later."
		Goto L_9000
	endif
  End If 
  K22$ = " ",K22$
  E = 2 \ Search #CH_GLTEMP,1,0;K22$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
  Search #CH_GLTEMP,4,1;K22$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
End If 
!! looks past the point of setup or in process abort
msg$="locking 324"
call "proglock.dl4","324",1,msg$
If P60$[9,9] = "L" Or P60$[9,9] = "F"
  Read #CH_CNTRL,88,3008;J$; \ Open #19,J$
  Read #CH_CNTRL,88,3024;J$; \ Open #20,J$
  Mat Read #1,3,192;FIFL;
  J$ = rec_uac Using "files/6/FIFOMRSTMP&&&&"
  CMD$ = " ",CMD$
  CMD$ = "[1:1] ",J$,"!"
  Build #32,CMD$
  REC_FIFOW = 13
  CH_FIFOW = 32
  Search #CH_FIFOW,0,1;FLW$,REC_FIFOW,E \ If E Gosub ERR_SEARCH
  REC_FIFOW = 1
  Search #CH_FIFOW,0,0;FLW$,REC_FIFOW,E \ If E Gosub ERR_SEARCH
  Close #32
  Open #32,J$
  If P61$[60,60] = "Y"
    J$ = "4/FIFOSPC" + Str$(COID) \ Ropen #30,J$
  End If 
End If 
CH_FIFOL = 19
CH_FIFOT = 20
CH_FIFOS = 30
J$ = rec_uac Using "files/6/MRSWERP&&&&"
CMD$ = " ",CMD$
CMD$ = "[1:1] ",J$,"!"
Build #29,CMD$
REC_MRTS = 5
CH_MRSW = 29
Search #CH_MRSW,0,1;KEYMRTS1$,REC_MRTS,E \ If E Gosub ERR_SEARCH
REC_MRTS = 1
Search #CH_MRSW,0,0;KEYMRTS1$,REC_MRTS,E \ If E Gosub ERR_SEARCH
Close #29
Open #29,J$
GLSECT = 0
Mat Read #1,0,100;D8$;
Read #1,3;C1$;
Mat Read #1,115,0;D9;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "###########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!If Err 0 Let V8 = Spc(8)
!V8 = 0 \ V7 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If V8 If V8 <> 49 Goto ERR_TRAP
V7 = 62;v8=0
!If V8
  !V7 = 23;SCRPRT = 99
!End If 
L_900: Rem TEST & GET NUMBERS
Read #1,20;S
If S > 3 
   	e=3 ! check if flag set  with time checking
	call "proglock.dl4","324a",e,message$   
	if e  ! found an entry
		let eflg=eflg+1
		message$=message$+" Accept is in process elsewhere "
	else
		s=3 !! force more checking
	endif
endif
If S = 3
   	e=3 ! check if flag set  with time checking
	call "proglock.dl4","321",e,message$   !! no 323 flag gets set   
	if e  ! found entry
		let eflg=eflg+1
		Message$=message$+" Entry/Delete is in process elsewhere "
	else
		s=1 !! force more checking
	endif
endif
If S = 1
   	e=3 ! check if flag set  with time checking
	call "proglock.dl4","321",e,message$   
	if e  ! found entry
		let eflg=eflg+1
		message$=message$+" Entry is in process elsewhere "
	else
		s=2 !! don't do zero, safer to run journal and have it not find anything later
	endif
endif
If S <> 2
  If S = 0 
	let eflg=eflg+1
	message$=message$+"NO ENTRIES TO ACCEPT  "
  	Goto OUTEND2 
  endif
End If 
S = 4
Write #1,20;S;
L_1900: Rem start prompts
!Gosub PRINT_SCREEN
!Goto INPUTS
STARTPRINT: Rem start print here
if eflg goto outend2: 
if audonly<>1 
	Read #1,20,170;MJRNL;
	If MJRNL <= 0 Or MJRNL > 999999
	MJRNL = 1
	Write #1,20,170;MJRNL;
	End If 
	JRNL = MJRNL
Endif
If P61$[60,60] = "Y" ! build text file to print with special cost
  SPICERFLAG = 0
  If Not(SPICERFLAG)
    !SRCDIR$ = "REPORTDIR"
    !System 28,SRCDIR$
  Else 
    SRCDIR$ = "/u/syspgms/tmp"
    Call FindF(SRCDIR$,A9)
    If Not(A9)
      CMD$ = "mkdir " + SRCDIR$
      System CMD$
    End If 
  End If 
  Rem filename create under the srcdir  directory
  Rem filename comp+warehouse+324+yymm+jrnl (.tiebreaker if needed)
  WH$ = WHSE Using "w&&"
  COMP$ = "c" + Str$(COID)
  TXTNAME$[1,3] = "324"
  X$ = D0 Using "&&&&&&"
  ACPER$[1,4] = X$[1,4]
  TXTNAME$[4,7] = ACPER$[1,4]
  TXTNAME$[8,13] = JRNL Using "&&&&&&"
  TXTFNAME$ = SRCDIR$ + "/" + COMP$ + WH$ + TXTNAME$
  Call FindF(TXTFNAME$,A9)
  If A9 ! already exists
    TIEBREAKER = 0
GETNEWFILENAME: Rem try to find a new filename
    TXTNAME$[14,14] = "."
    TXTNAME$[15,15] = TIEBREAKER Using "&"
    TXTFNAME$ = SRCDIR$ + "/" + COMP$ + WH$ + TXTNAME$
    Call FindF(TXTFNAME$,A9)
    If A9
      If TIEBREAKER = 9
	let eflg=eflg+1
	Let message$=message$+" Cannot Create a Print File. "
        !Print @0,22;'CE';"Print Cannot Create Print File ";
        !Print @0,23;'CE';"Press <CR> to return to Menu ";
        !Input Len 1;""J$
        Goto OUTEND
      End If 
      TIEBREAKER = TIEBREAKER + 1
      Goto GETNEWFILENAME
    End If 
  End If 
  CH_TXT = FindChannel()
  Build #CH_TXT, + TXTFNAME$
End If 
KEYMRTS1$ = " ",KEYMRTS1$
If Not(SCRPRT)
  !Print @0,23;'CL';"PRINTING, PLEASE WAIT . . .  ";
End If 
TOTCOST = 0;TOTCOST[1] = 0
!If V8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
L = 90 \ V9 = 0 \ VL = 90 \ VV9 = 0
SRCHMRTS: Rem start search of misc receipts file
Search #2,3,1;KEYMRTS1$,REC_MRTS,E \ If E = 2 Goto L_9100
If E Gosub ERR_SEARCH
Mat Read #2,REC_MRTS,0;MRTS0;
Mat Read #2,REC_MRTS,36;MRTS0$;
Mat Read #2,REC_MRTS,70;MRTS1$;
Mat Read #2,REC_MRTS,104;MRTS2;
If WHSE
  If WHSE <> MRTS2[2] Goto SRCHMRTS
End If 
If MRTS2[3] Goto SRCHMRTS
Mat Read #2,REC_MRTS,112;MRTS3
Mat Read #2,REC_MRTS,132;MRTS2$
Mat Read #2,REC_MRTS,150;MRTS3$
Mat Read #2,REC_MRTS,174;MRTS4
let mrts2[3]=100+tim(10)
Mat Write #2,REC_MRTS,104;MRTS2;
Search #CH_MRSW,4,1;KEYMRTS1$,REC_MRTS,E \ If E Gosub ERR_Search
Mat Read #3,MRTS0[1];P1$;
Mat Read #3,MRTS0[1],512;PFU1;
Mat Read #3,MRTS0[1],554;PFU2;
Mat Read #3,MRTS0[1],256;A;
Mat Read #3,MRTS0[1],156;B;
LBSFACTOR = A[5]
LBSUNIT = A[6]
If P1$[127,127] = "Y"
  Rem for catch weight items
  If Abs(MRTS0[0]) > 0 And Abs(MRTS4[1] > 0) And (Sgn(MRTS0[0]) = Sgn(MRTS4[1]))
    LBSUNIT = Abs((MRTS4[1] / MRTS0[0]) * LBSFACTOR)
  End If 
End If 
SCRATCH$ = MRTS2[2] Using "##"
PRODWHSE$ = P1$[140,151] + SCRATCH$
Search #CH_PRODWHSE,2,1;PRODWHSE$,REC_PRODWHSE,E
If Not(E) Mat Read #8,REC_PRODWHSE,78;PW3;
COSTTYPE = 0
If MRTS0[3] = 0 ! cost absent (no change)
  If P9$[32,32] = "Y" And Not(E) And PW3[15] ! warehouse pricing
    Q3 = PW3[15];COSTTYPE = 1
    Q3[1] = PW3[15]
  Else 
    Q3 = B[21];COSTTYPE = 1
    Q3[1] = B[21]
  End If 
  If MRTS2[1] <> 0 ! ! pronto accept
    If MRST0[0] <> 0 ! quantity <> 0
      If MRTS0[4] <> 0 ! ext gl cost <>0
        Q3 = Abs(MRTS0[4] / MRTS0[0]);COSTTYPE = 2
      End If 
      If MRTS4[2] <> 0
        Q3[1] = Abs(MRTS4[2] / MRTS0[0])
      End If 
    End If 
  End If 
  Q5 = MRTS3[0]
Else 
  Q3 = MRTS0[3]
  Q5 = MRTS3[1]
End If 
If P9$[32,32] = "Y" And Not(E) And PW3[15]
  AVGCOST = PW3[15]
Else 
  AVGCOST = B[21]
End If 
QTY = MRTS0[0]
If MRTS3[0] = -3
  If P1$[127,127] <> "Y" Goto BYPSSSTF
  If P61$[73,73] <> "Y" Goto BYPSSSTF
  If P61$[73,73] = "Y" And MRTS4[1] = 0 Goto BYPSSSTF
End If 
If MRTS0[0]
  If P60$[9,9] = "F" Or P60$[9,9] = "L"
    If Not(MRTS2[1]) ! not pronto accept
      QTY = MRTS0[0]
      Gosub UPDATEFIFO
    End If 
  End If 
  If P9$[17,17] = "Y"
    Gosub GETGLARCNTRL
    Gosub GETGLCOST
    CLIENT = 0
    If CFLAG Gosub GETCLIENT
    If Not(CLIENT) Let CLIENT = CL[0]
    COMMCODE$[1,4] = P1$[152,155]
    MBFLG$ = P1$[139,139]
    PCAT = B[11]
    Gosub GETGLINVENT
    INVACCT = GTEMP0[0];INVAMT = GLCOST[0]
    If P61$[60,60] = "Y" Let INVAMT = GLCOST[1]
    If MRTS2[0] <> 99
      Gosub GETGLREASON
      RESACCT = GTEMP0[0]
    Else 
      GLCOST[0] = - GLCOST[0]
      GLCOST[1] = - GLCOST[1]
      GTEMP0[0] = 0
      PRODKEY$[1,12] = MRTS3$[1,12]
      Search #3,2,1;PRODKEY$,R[3],E
      If Not(E)
        Mat Read #3,R[3],0;SP1$;
        Mat Read #3,R[3],156;SB;
        COMMCODE$[1,4] = SP1$[152,155]
        MBFLG$ = SP1$[139,139]
        PCAT = SB[11]
        Gosub GETGLINVENT
        RESACCT = GTEMP0[0]
      End If 
    End If 
    RESAMT = GLCOST[0]
    Q3 = Abs(GLCOST[0] / MRTS0[0])
    If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
      Q3 = Abs(GLCOST / MRTS4[1] * A[6] / A[5])
    End If 
    EFLAG[4] = 0
    If P61$[60,60] = "Y" Let RESAMT = GLCOST[1]
  End If 
End If 
BYPSSSTF: Rem "Bypass on Catch Wgt LB Adj Only!
Gosub L_5800
If P61$[60,60] = "Y" And CH_TXT <> 0 Gosub TXTPAGEHEAD
R[10] = MRTS2[0]
If Not(R[10]) Or R[10] > (Chf(10) - 1)
  RCDESC$ = "Invalid Reason Code"
Else 
  Mat Read #10,R[10],0;RCDESC$;
  If Len(RCDESC$) = 0 Or RCDESC$[1,3] = "   "
    RCDESC$ = "Invalid Reason Code"
  End If 
End If 
DISP_EXT = FNR(MRTS0[0] * Q3)
If Q3
  If PFU1[11] > 0 And PFU1[0] <> PFU1[11]
    DISP_QTY = MRTS0[0];DISP_COST = Q3
    Gosub CALC_DISP_EXT
  End If 
  If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
    DISP_QTY = MRTS0[0];DISP_COST = Q3
    Gosub CALC_DISP_EXT
  End If 
End If 
If MRTS3[0] = -3 Let Q3 = 0;DISP_EXT = 0
DSP_LINE_TOT = DISP_EXT
Gosub L_5000
If P61$[60,60] = "Y" And CH_TXT <> 0
  Gosub TXTLNPRNT
End If 
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  If MRTS4[1] <> 0 Goto GETTOTALS
Else 
  If MRTS0[0] <> 0 Goto GETTOTALS
End If 
Print #0;"" \ L = L + 1
If P61$[60,60] = "Y" And CH_TXT <> 0
  Print #CH_TXT;"" \ VL = VL + 1
End If 
Goto SRCHMRTS
GETTOTALS: Rem print total here
TOTCOST = TOTCOST + DSP_LINE_TOT
TOTCOST[1] = TOTCOST[1] + PGLCOST
If MRTS2[0] = 99
  TOTCOST1 = - DSP_LINE_TOT
  TOTCOST = TOTCOST + TOTCOST1
  TOTCOST[1] = TOTCOST[1] + PGLCOST
End If 
If P9$[17,17] = "Y"
  If P1$[127,127] = "Y" And P61$[73,73] = "Y" And MRTS3[0] = -3
    If Not(MRTS4[1]) Goto BYPASSGLPRNT
  Else 
    If MRTS0[0] = 0 Goto BYPASSGLPRNT
  End If 
  Gosub L_5100
End If 
BYPASSGLPRNT: Rem bypass print of g/l acct
Gosub L_4400
Print #0;"" \ L = L + 1
If P61$[60,60] = "Y" And CH_TXT <> 0
  Print #CH_TXT;"" \ VL = VL + 1
End If 
If MRTS2[0] = 99 ! reason code 99 broken/cases
  PRODKEY$ = " ",PRODKEY$
  PRODKEY$[1,12] = MRTS3$[1,12]
  Search #3,2,1;PRODKEY$,R[3],E \ If E > 1 Goto ERR_SEARCH
  If Not(E)
    Mat Read #3,R[3];P1$;
    Mat Read #3,R[3],512;PFU1;
    Mat Read #3,R[3],554;PFU2;
    Mat Read #3,R[3],256;A;
    Mat Read #3,R[3],156;B;
    SCRATCH$ = MRTS2[2] Using "##"
    PRODWHSE$ = P1$[140,151] + SCRATCH$
    For X2 = 14 To 24 \ W3[X2] = 0 \ Next X2
    Search #8,2,1;PRODWHSE$,PWHREC,E
    If Not(E) Mat Read #8,PWHREC,78;W3;
    Q3 = (Abs(TOTCOST1) / MRTS4)
    Q5 = MRTS3[3]
    Gosub L_5800
    Gosub PRNT2LINE
    Print #0;"" \ L = L + 1
    If P61$[60,60] = "Y" And CH_TXT <> 0
      Gosub TXTPAGEHEAD
      Gosub TXTLNPRNT2
      Print #CH_TXT;"" \ VL = VL + 1
    End If 
  End If 
End If 
Goto SRCHMRTS

L_4400: Rem PRINT SERIAL NO'S
If MRTS0[0] = 0 Return 
SNO = 0 \ If P1$[8,8] <> "Y" Return 
SNK$ = " ",SNK$;SNK$[1,9] = MRTS0[5] Using "R########"
L_4420: Search #7,3,1;SNK$,R7,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[2,9]
If X2 <> MRTS0[5] Goto L_4480
Mat Read #7,R7,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ Gosub L_5800
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"" \ L = L + 2
Return 

L_5000: Rem PRINT LINE
Gosub L_6000
let totmrts=totmrts+1
Print #0; Using "########";MRTS0[5];
Print #0; Tab 10;P1$[140,151];
Print #0; Tab 23;P1$[9,38];
Print #0; Using "##"; Tab 54;MRTS2[2];
If MRTS0[0] = 0
  Print #0; Tab 57;"DELETED"; \ Goto L_5780
End If 
If MRTS2[1]
  Print #0; Tab 57;"ACCEPT";
Else 
  Print #0; Tab 57;"Open";
End If 
If MRTS0[0] ! quantity
  If MRTS3[0] = -3
    SUNIT = MRTS4[1]
    SUNIT$ = "LB   "
    If MRTS0[3] <> 0
      Q3 = CUNIT
    End If 
  End If 
  Print #0; Using "-------#.##"; Tab 64;SUNIT;SUNIT$;
End If 
If MRTS0[3] = 0 !"cost absent - not change
  Print #0; Tab 79;"  NO CHANGE";
Else 
  If Q3 Or (P9$[17,17] = "Y" And MRTS2[1] <> 0)
    Print #0; Using PMASK$; Tab 79;CUNIT;CUNIT$;
  End If 
  If Q3 Or (P9$[17,17] = "Y" And MRTS2[1] <> 0)
    If P9$[17,17] = "Y" And MRTS2[1] <> 0 Let DSP_LINE_TOT = MRTS0[4]
    Print #0; Using "----------#.##"; Tab 95;DSP_LINE_TOT;
  Else 
    Print #0; Tab 95;"NO CHANGE";
  End If 
End If 
If MRTS3[0] = -3 Goto BYPSSLNE
If P9$[1,1] <> "N"
  Print #0; Tab 111;MRTS0$[1,12];
End If 
Print #0; Tab 125;MRTS0$[13,18];
BYPSSLNE: Rem "bypass lot/location
Print #0;"" \ L = L + 1
Print #0; Tab 5;MRTS0$[19,34];
If P9$[26,26] = "Y"
  Print #0; Tab 30;P1$[63,92];
End If 
If MRTS3[0] <> -3 And P1$[127,127] = "Y" ! quantity (lbs)
  Print #0; Using "-------#.##"; Tab 64;MRTS4[1];"LB";
End If 
Print #0; Using "## "; Tab 111;MRTS2[0];RCDESC$[1,17];
L_5780: Print #0;"" \ L = L + 1
If MRTS3[0] = -3 Return 
If MRTS2[1] = 0 And MRTS0[0] <> 0 ! not accepted & not deleted
  L = L + 1
  Gosub PRINT_CURRENT
End If 
Return 
TXTLNPRNT: Rem PRINT LINE into text file
If P61$[60,60] <> "Y" Return 
If Not(CH_TXT) Return 
Gosub L_6000
Print #CH_TXT; Using "########";MRTS0[5];
Print #CH_TXT; Tab 10;P1$[140,151];
Print #CH_TXT; Tab 23;P1$[9,38];
Print #CH_TXT; Using "##"; Tab 54;MRTS2[2];
If MRTS0[0] = 0
  Print #CH_TXT; Tab 57;"DELETED"; \ Goto ENDTXTLNPRNT
End If 
If MRTS2[1]
  Print #CH_TXT; Tab 57;"ACCEPT";
Else 
  Print #CH_TXT; Tab 57;"Open";
End If 
If MRTS0[0] ! quantity
  If MRTS3[0] = -3
    SUNIT = MRTS4[1]
    SUNIT$[1,4] = "LB   "
  End If 
  Print #CH_TXT; Using "-------#.##"; Tab 64;SUNIT;SUNIT$;
End If 
DISP_COST = 0
If MRTS0[0]
  DISP_COST = (GLCOST[1] / MRTS0[0])
  CNVTU[0] = 0;CNVTU[1] = Q5;CNVTU[2] = 2;CNVTA = DISP_COST
  Gosub L_20000
  CUNIT = AMOUNT
  If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
    DISP_COST = GLCOST[1] / MRTS4[1]
  End If 
End If 
If DISP_COST = 0 !"cost absent - not change
  Print #CH_TXT; Tab 79;"  NO CHANGE";
Else 
  Print #CH_TXT; Using PMASK$; Tab 79;CUNIT;CUNIT$;
End If 
PGLCOST = GLCOST[1]
If MRTS0[0] Let PGLCOST = (Abs(GLCOST[1]) * Sgn(MRTS0))
Print #CH_TXT; Using "----------#.##"; Tab 95;PGLCOST;
If MRTS3[0] <> -3
  If P9$[1,1] <> "N"
    Print #CH_TXT; Tab 111;MRTS0$[1,12];
  End If 
  Print #CH_TXT; Tab 125;MRTS0$[13,18];
End If 
Print #CH_TXT;"" \ VL = VL + 1
Print #CH_TXT; Tab 5;MRTS0$[19,34];
If P9$[26,26] = "Y"
  Print #CH_TXT; Tab 30;P1$[63,92];
End If 
If MRTS3[0] <> -3 And P1$[127,127] = "Y" ! quantity (lbs)
  Print #CH_TXT; Using "-------#.##"; Tab 64;MRTS4[1];"LB";
End If 
Print #CH_TXT; Using "## "; Tab 111;MRTS2[0];RCDESC$[1,17];
ENDTXTLNPRNT: Print #CH_TXT;"" \ VL = VL + 1
Return 
L_5100: Rem print line gl info
CH_PRNT = 0
If P61$[60,60] = "Y" And CH_TXT <> 0
  CH_PRNT = CH_TXT
  Gosub TXTPAGEHEAD
Else 
  Gosub L_5800
End If 
If Not(EFLAG[4])
  GLACCT = INVACCT \ Gosub GETGLNAME
Else 
  GLNAME$ = "*Client/GL Not Found*"
End If 
Print #CH_PRNT; Using "########"; Tab 20;INVACCT;
Print #CH_PRNT; Tab 29;GLNAME$;
Print #CH_PRNT; Using "--,---,---.##"; Tab 52;INVAMT;
If Not(EFLAG[4])
  GLACCT = RESACCT \ Gosub GETGLNAME
Else 
  GLNAME$ = "*Client/GL Not Found*"
End If 
Print #CH_PRNT; Using "########"; Tab 70;RESACCT;
Print #CH_PRNT; Tab 79;GLNAME$;
Print #CH_PRNT; Using "--,---,---.##"; Tab 102;RESAMT;
Print #CH_PRNT;""
Return 
PRNT2LINE: Rem PRINT LINE
Print #0; Tab 10;P1$[140,151];
Print #0; Tab 23;P1$[9,38];
If MRTS4 ! quantity convert to
  CNVTU[0] = 0;CNVTU[1] = MRTS3[3];CNVTU[2] = 1;CNVTA = MRTS4
  Gosub L_20000
  SUNIT = AMOUNT
  If MRTS3[3] > 0
    Read #4,MRTS3[3],10;SUNIT$;
  Else 
    SUNIT$ = " ",SUNIT$
    If MRTS3[3] = -1 Let SUNIT$ = "CWT "
    If MRTS3[3] = -2 Let SUNIT$ = "LOT "
    If MRTS3[3] = -3 Let SUNIT$ = "LB  "
  End If 
  Print #0; Using "-------#.##"; Tab 64;SUNIT;SUNIT$;
End If 
If Q3
  CNVTU[0] = 0;CNVTU[1] = Q5;CNVTU[2] = 2;CNVTA = Q3
  Gosub L_20000
  CUNIT = AMOUNT
  If Q5 > 0
    Read #4,Q5,10;CUNIT$;
  Else 
    CUNIT$ = " ",CUNIT$
    If Q5 = -1 Let CUNIT$ = "CWT "
    If Q5 = -2 Let CUNIT$ = "LOT "
    If Q5 = -3 Let CUNIT$ = "LB  "
  End If 
  Print #0; Using PMASK$; Tab 79;CUNIT;CUNIT$;
End If 
Print #0; Using "----------#.##"; Tab 95;TOTCOST1;
If P9$[1,1] <> "N"
  Print #0; Tab 111;MRTS2$[1,12];
End If 
Print #0; Tab 125;MRTS2$[13,18];
Print #0;"" \ L = L + 1
If P9$[26,26] = "Y"
  Print #0; Tab 30;P1$[63,92];
  Print #0;"" \ L = L + 1
End If 
Return 
TXTLNPRNT2: Rem PRINT txt line 2
If P61$[60,60] <> "Y" Return 
If Not(CH_TXT) Return 
Print #CH_TXT; Tab 10;P1$[140,151];
Print #CH_TXT; Tab 23;P1$[9,38];
If MRTS4 ! quantity convert to
  CNVTU[0] = 0;CNVTU[1] = MRTS3[3];CNVTU[2] = 1;CNVTA = MRTS4
  Gosub L_20000
  SUNIT = AMOUNT
  If MRTS3[3] > 0
    Read #4,MRTS3[3],10;SUNIT$;
  Else 
    SUNIT$ = " ",SUNIT$
    If MRTS3[3] = -1 Let SUNIT$ = "CWT "
    If MRTS3[3] = -2 Let SUNIT$ = "LOT "
    If MRTS3[3] = -3 Let SUNIT$ = "LB  "
  End If 
  Print #CH_TXT; Using "-------#.##"; Tab 64;SUNIT;SUNIT$;
End If 
DISP_COST = 0
If MRTS4 Let DISP_COST = GLCOST[1] / MRTS4
If DISP_COST
  CNVTU[0] = 0;CNVTU[1] = Q5;CNVTU[2] = 2;CNVTA = DISP_COST
  Gosub L_20000
  CUNIT = AMOUNT
  If Q5 > 0
    Read #4,Q5,10;CUNIT$;
  Else 
    CUNIT$ = " ",CUNIT$
    If Q5 = -1 Let CUNIT$ = "CWT "
    If Q5 = -2 Let CUNIT$ = "LOT "
    If Q5 = -3 Let CUNIT$ = "LB  "
  End If 
  Print #CH_TXT; Using PMASK$; Tab 79;CUNIT;CUNIT$;
End If 
PGLCOST = GLCOST[1]
If MRTS4 Let PGLCOST = (Abs(GLCOST[1]) * Sgn(MRTS4))
Print #CH_TXT; Using "----------#.##"; Tab 95;PGLCOST;
If P9$[1,1] <> "N"
  Print #CH_TXT; Tab 111;MRTS2$[1,12];
End If 
Print #CH_TXT; Tab 125;MRTS2$[13,18];
Print #CH_TXT;"" \ VL = VL + 1
If P9$[26,26] = "Y"
  Print #CH_TXT; Tab 30;P1$[63,92];
  Print #CH_TXT;"" \ VL = VL + 1
End If 
Return 
L_5800: Rem HEADINGS ROUTINE
L = L + 1 \ If L < V7 Return 
!If V9 If V8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9 If Not(V8) Print #0;"\14\";
V9 = V9 + 1 \ L = 7
If Not(V8) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;D8$; Tab (64 - Len(C1$) / 2);C1$; Tab 120;"PAGE";V9
Print #0;"-MX324-";
If P9$[17,17] = "Y"
  Print #0;"(";P8$[5,5];") ";
End If 
Print #0;T9$;
Print #0; Tab 51;"MISCELLANEOUS RECEIPTS TO STOCK JOURNAL";
if audonly=0
	Print #0; Using "######"; Tab 120;"JRNL#";JRNL
else
	print #0;tab 120;"Audit"
endif
Print #0;""
If Not(GLSECT)
  Print #0; Tab 3;"ENTRY";
  Print #0; Tab 10;"ITEM CODE";
  Print #0; Tab 23;"ITEM DESCRIPTION";
  Print #0; Tab 54;"WH";
  Print #0; Tab 57;"STATUS";
  Print #0; Tab 67;"QUANTITY";
  Print #0; Tab 81;"UNIT COST";
  If P9$[17,17] = "Y"
    Print #0; Tab 95;"EXT G/L COST";
  Else 
    Print #0; Tab 98;"EXT COST";
  End If 
  If P9$[1,1] <> "N"
    Print #0; Tab 111;"LOT NUMBER";
  End If 
  Print #0; Tab 125;"LOCAT";
  Print #0;""
  Print #0; Tab 5;"COMMENT";
  Print #0; Tab 111;"REASON "
  Print #0;""
Else 
  If CLFLAG
    Print #0; Using "#### "; Tab 15;"Client: ";CLIENT;G9$[10,50]
    L = L + 1
  End If 
  Print #0; Tab 15;U8$[15,105]
  Print #0; Tab 20;"ACCOUNT #"; Tab 50;"AMOUNT"; Tab 70;"ACCOUNT DESCRIPTION"
  Print #0; Tab 15;U8$[15,105]
  Print #0;" "
End If 
Return 
TXTPAGEHEAD: Rem HEADINGS ROUTINE for text file
If P61$[60,60] <> "Y" Return 
If Not(CH_TXT) Return 
VL = VL + 1 \ If VL < V7 Return 
If VV9 Print #CH_TXT;"\14\";
VV9 = VV9 + 1 \ VL = 7
Print #CH_TXT;""
T9$ = "" \ Call Time(T9$)
Print #CH_TXT; Tab 10;D8$; Tab (64 - Len(C1$) / 2);C1$; Tab 120;"PAGE";VV9
Print #CH_TXT;"-MX324-";
If P9$[17,17] = "Y"
  Print #CH_TXT;"(";P8$[5,5];") ";
End If 
Print #CH_TXT;T9$;
Print #CH_TXT; Tab 51;"MISCELLANEOUS RECEIPTS TO STOCK JOURNAL";
Print #CH_TXT; Using "######"; Tab 120;"JRNL#";JRNL
Print #CH_TXT;"fspc:";COMP$;WH$;TXTNAME$
If Not(GLSECT)
  Print #CH_TXT; Tab 3;"ENTRY";
  Print #CH_TXT; Tab 10;"ITEM CODE";
  Print #CH_TXT; Tab 23;"ITEM DESCRIPTION";
  Print #CH_TXT; Tab 54;"WH";
  Print #CH_TXT; Tab 57;"STATUS";
  Print #CH_TXT; Tab 67;"QUANTITY";
  Print #CH_TXT; Tab 81;"UNIT COST";
  If P9$[17,17] = "Y"
    Print #CH_TXT; Tab 95;"EXT G/L COST";
  Else 
    Print #CH_TXT; Tab 98;"EXT COST";
  End If 
  If P9$[1,1] <> "N"
    Print #CH_TXT; Tab 111;"LOT NUMBER";
  End If 
  Print #CH_TXT; Tab 125;"LOCAT";
  Print #CH_TXT;""
  Print #CH_TXT; Tab 5;"COMMENT";
  Print #CH_TXT; Tab 111;"REASON "
  Print #CH_TXT;""
Else 
  If CLFLAG
    Print #CH_TXT; Using "#### "; Tab 15;"Client: ";CLIENT;G9$[10,50]
    VL = VL + 1
  End If 
  Print #CH_TXT; Tab 15;U8$[15,105]
  Print #CH_TXT; Tab 20;"ACCOUNT #"; Tab 50;"AMOUNT"; Tab 70;"ACCOUNT DESCRIPTION"
  Print #CH_TXT; Tab 15;U8$[15,105]
  Print #CH_TXT;" "
End If 
Return 
GLSUMSECTION: Rem gl print summary section
U8$ = "-",U8$
L = 99 \ GLSECT = 99 \ VL = 99
T9 = 0;T9[1] = 0
CLIENT = 0;INVACCT = 0
K1$ = " ",K1$ \ K1$[1,4] = CLIENT Using "####"
SRCHGLTEMP: Search #CH_GLTEMP,3,1;K1$,REC_GLTEMP,E
If E = 2
  Gosub PRTACCTTOT
  Gosub PRTSUMTOT
  Return 
End If 
If E Gosub ERR_SEARCH
Mat Read #CH_GLTEMP,REC_GLTEMP,0;GTEMP0;
Mat Read #CH_GLTEMP,REC_GLTEMP,18;GTEMP1;
If Not(GTEMP0[1]) Goto SRCHGLTEMP
If CLIENT <> GTEMP1[0]
  If CLIENT
    Gosub PRTACCTTOT
    Gosub PRTSUMTOT
    INVACCT = 0
  End If 
  If CLFLAG
    CLIENT = GTEMP1[0]
    Gosub GETGLMASTER
  End If 
End If 
CLIENT = GTEMP1[0]
If INVACCT <> GTEMP0[0]
  If INVACCT
    Gosub PRTACCTTOT
  End If 
End If 
INVACCT = GTEMP0[0]
T9[1] = T9[1] + GTEMP0[1]
Goto SRCHGLTEMP
PRTACCTTOT: Rem print summary acct totals
If Not(T9[1]) Return 
K21$ = " ",K21$ \ K21$[2,9] = INVACCT Using "########"
If Not(EFLAG[4])
  E = 0 \ Search #21,2,1;K21$,R[21],E \ If E > 1 Gosub ERR_SEARCH
  If E = 1
    GLNAME$ = "***ACCT NOT ON FILE***"
    EFLAG[0] = 99;EFLAG[2] = 99
  Else 
    Mat Read #21,R[21],14;GLNAME$;
  End If 
Else 
  GLNAME$ = "Client/GL Not Found"
End If 
CH_PRNT = 0
If P61$[60,60] = "Y" And CH_TXT <> 0
  CH_PRNT = CH_TXT
  Gosub TXTPAGEHEAD
Else 
  Gosub L_5800
End If 
Print #CH_PRNT; Tab 20;K21$;
Print #CH_PRNT; Using "----,---,---.##"; Tab 45;T9[1];
Print #CH_PRNT; Tab 70;GLNAME$;
T9 = T9 + T9[1]
T9[1] = 0
INVACCT = 0
Print #CH_PRNT;""
Return 
PRTSUMTOT: Rem print summary of account totals
CH_PRNT = 0
If P61$[60,60] = "Y" And CH_TXT <> 0 Let CH_PRNT = CH_TXT
Print #CH_PRNT; Tab 15;U8$[15,105]
Print #CH_PRNT; Using "----,---,---.##"; Tab 45;T9
Print #CH_PRNT; Tab 15;U8$[15,105]
If T9
  Print #CH_PRNT; Tab 30;"*** OUT OF BALANCE *** NO UPDATE PERFORMED!!!"
  EFLAG[0] = 99;EFLAG[1] = 99
End If 
Return 
L_6000: Rem
If MRTS3[0] = -3 And P61$[73,73] = "Y"
  If MRTS4[1] <> 0
    If MRTS0[4]
      CUNIT = Abs(MRTS0[4] / MRTS4[1])
      CUNIT$ = "LB  "
      Return 
    Else 
      If MRTS0[3]
        CNVTA = MRTS0[3]
        CNVTU[0] = 0;CNVTU[1] = -3;CNVTU[2] = 2
        Gosub L_20000
        CUNIT = AMOUNT
        CUNIT$ = "LB  "
        Return 
      End If 
    End If 
  End If 
End If 
CNVTU[0] = 0
CNVTU[1] = MRTS3[0]
CNVTU[2] = 1
CNVTA = MRTS0[0]
Gosub L_20000
SUNIT = AMOUNT
CNVTU[0] = 0
CNVTU[1] = Q5
CNVTU[2] = 2
CNVTA = Q3
Gosub L_20000
CUNIT = AMOUNT
If MRTS3[0] > 0 Mat Read #4,MRTS3[0],10;SUNIT$;
If MRTS3[0] = -1 Let SUNIT$ = "CWT "
If MRTS3[0] = -3 Let SUNIT$ = "LB  "
If Q5 > 0 Mat Read #4,Q5,10;CUNIT$;
If Q5 = -1 Let CUNIT$ = "CWT "
If Q5 = -3 Let CUNIT$ = "LB  "
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
PRINT_SCREEN: Rem
!Call "progdflt","324","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$ = " ",RETVAL$
! RETVAL$[1,2] = " 0"
! RETVAL$[3,3] = "B"
! Call "progdfltw","324","",77,RETVAL$,URECFLAG
!End If 
!Print 'CS'
!Print @20,0;"Misc Receipts To Stock Journal";@0,0;"-mx324-";
!Print @2,4;"1> Warehouse    :";
!WHSE = RETVAL$[1,2]
!Print Using "##";@20,4;WHSE;
Return 
INPUTS: Rem
!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save default  E: exit ";
!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!Print @0,23;'CE';
!If X$ = "P" Goto STARTPRINT
!If X$ = "E" Goto OUTEND
!If X$ = "R" Goto EDT_ALL
!If X$ = "" Goto INPUTS
!If X$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all   U: user access only  <CR>: do not save ";
 ! Input Len 16384 + 1;""Z2$
!  Call String(1,Z2$)
 ! If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "progdfltw","324","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL'
!End If 
! = X$
!If X < 1 Or X > 2 Goto INPUTS
!Gosub EDT_FLDS
!Goto INPUTS
!EDT_ALL: Rem "want's all
!For X = 1 To 1
!  Gosub EDT_FLDS
!Next X
!Goto INPUTS
!EDT_FLDS: Rem "edit them here
!FLG = 1
!On X Gosub L_8000
!Return 
!L_8000: Rem CHECK WAREHOUSE
!L_8010: Rem LET WHSE=0 \ IF D9[5]=1 GOTO L_8090: ! "only 1 whse, don't ask
!J0$ = "3000022004"
!J1 = WHSE
!J5$ = "Enter Warehouse or  0: for all"
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!Gosub ISINPUT
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!WHSE = J1
!If WHSE < 0 Or WHSE > D9[5] Goto L_8010
!RETVAL$[1,2] = WHSE Using "##"
!Return 
PRINT_CURRENT: Rem----------------------------------------
CNVTU[0] = 0;CNVTU[1] = MRTS3[0];CNVTU[2] = 1;CNVTA = A[0]
Gosub L_20000
Print #0; Using "PRIOR ON HAND:------#.##"; Tab (23);AMOUNT;SUNIT$;
CNVTU[1] = Q5;CNVTU[2] = 2;CNVTA = AVGCOST
Gosub L_20000
Print #0; Using "  AVG COST:------#.##";AMOUNT;CUNIT$;
Print #0;""
L = L + 1
Return 

L_9100: Rem END OF THIS RANGE
If TOTCOST
  Gosub L_5800
  Print #0;""
  Print #0; Using "TOTAL COST  ----,---,---,--#.## "; Tab 84;TOTCOST
  If P61$[60,60] = "Y" And CH_TXT <> 0
    Print #CH_TXT;""
    Print #CH_TXT; Using "TOTAL COST  ----,---,---,--#.## "; Tab 84;TOTCOST[1]
  End If 
End If 
If P9$[17,17] = "Y"
  Gosub GLSUMSECTION
  If EFLAG[0]
    !Print @0,19;'CE';"**** No Update Perform ****";
    Print #0;"***** No Update Perform ****"
    eflg=eflg+1
    message$=message$+" **No Update Performed** "
    If EFLAG[1]
      !Print @0,20;'CL';"** Out of Balance ** ";
      Print #0;"*** Out of Balance ***"
      eflg=eflg+1
      message$=message$+" **Out Of Balance ** "
    End If 
    If EFLAG[2]
      !Print @0,21;'CL';"** Error in G/L Account Numbers **";
      Print #0;"** Error in G/L Account Numbers **"
      eflg=eflg+1
      message$=Message$+" ** Error in G/L Account Numbers ** "
    End If 
    If EFLAG[3]
      !Print @0,22;'CL';"** Error in Client/GL File **";
      Print #0;"** Error in Client/GL File **"
      eflg=eflg+1
      message$=message$+" ** Error in Client/GL File **"
      
    End If 
    ! Print @0,23;'CL';"Press <CR> to return to menu "; \ Input ""J$
    Goto OUTEND
  End If 
End If 
!If Err 0 Rem
! Try Close #0 Else Rem
! If Err 0 Gosub ERR_TRAP
!Print @10,22;'CE';" ---- Journal Complete ---- ";
PROMPTOK: Rem prompt is journal is ok to accept
!Print @0,23;'CL';"Do you want to accept journal (Y/N) ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
!If J$ = "N" Goto OUTEND
!If J$ <> "Y" Goto PROMPTOK
!!! mtg --- check aud work
 If audonly = 1 GOTO OUTEND: ! audit only
Read #1,20,170;MJRNL
MJRNL = MJRNL + 1 \ If MJRNL > 999999 Let MJRNL = 1
Write #1,20,170;MJRNL;
! Print @0,22;'CE';@0,23;"Accepting Miscellaneous Receipts. Please Wait...";
If P60$[9,9] = "F" Or P60$[9,9] = "L"
  Gosub CLEARFIFOWORK
End If 
If P9$[17,17] = "Y"
  K22$ = " ",K22$
CLRGLTMP: Rem clear gl temp to go to accept
  Search #CH_GLTEMP,3,1;K22$,REC_GLTEMP,E \ If E = 2 Goto SETSTATUS
  If E Gosub ERR_SEARCH
  Search #CH_GLTEMP,5,1;K22$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #CH_GLTEMP,1,0;K22$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
  Goto CLRGLTMP
End If 
SETSTATUS: Rem set status
CMD$ = REC_uac Using "6/MRSWERP&&&&"
Call FindF(CMD$,A9)
If A9
  KEYMRTS1$ = " ",KEYMRTS1$
CLRMRSWORK2: Rem clear status 1 items to 2
  Search #CH_MRSW,3,1;KEYMRTS1$,REC_MRTS,E \ If E = 2 Goto ENDCLRMRS2
  If E Gosub ERR_SEARCH
  Mat Read #2,REC_MRTS,104;MRTS2
  MRTS2[3] = 2
  Mat Write #2,REC_MRTS,104;MRTS2;
  Search #CH_MRSW,5,1;KEYMRTS1$,REC_MRTS,E \ If E Gosub ERR_SEARCH
  Goto CLRMRSWORK2
ENDCLRMRS2: Rem end of file clear / kill of file
  !If Err 0 Rem
  Try Close #CH_MRSW Else  Rem
  !If Err 0 Gosub ERR_TRAP
  Kill CMD$
End If 
gosub clear_lost_status:
!If Err 0 Rem
For X = 2 To 99 
	Try Close #X Else Rem
Next X
!If Err 0 Gosub ERR_TRAP
!Chain "mx324a.dl4"
msg$="unlock 324"
call "proglock.dl4","324",0,msg$
Call "mx324a.dl4",sprec,whse,jrnl,eflg,rec_uac,message$,IntCo,rstr$,e$
let aok=1
goto L_9010: 

GETGLNAME: Rem get name of gl acct
K21$ = " ",K21$
K21$[2,9] = GLACCT Using "########"
Search #21,2,1;K21$,R[21],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  GLNAME$ = "***ACCT NOT ON FILE***"
  EFLAG[0] = 99;EFLAG[2] = 99
Else 
  Mat Read #21,R[21],14;GLNAME$;
End If 
Return 

GETGLARCNTRL: Rem find glarcntrl record
K20$ = " ",K20$ \ K20$[1,2] = MRTS2[2] Using "##"
Search #CH_GLARCNTRL,2,1;K20$,REC_GLARCNTRL,E
If E > 1 Gosub ERR_SEARCH
If E = 1
  K20$ = "DFAULT"
  Search #CH_GLARCNTRL,2,1;K20$,REC_GLARCNTRL,E \ If E Gosub ERR_SEARCH
End If 
Rem {begin src/inc/read.glarcntrl.i}
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,0;GLC;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,8;GLC1;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,80;GLC2;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,206;GLC3;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,332;GLC4;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,458;GLC5;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,584;GLC6;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,710;GLC7;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,836;GLC8;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,962;GLC9;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,1088;GLC10;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,1214;GLC11;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,1340;GLC12;
Mat Read #CH_GLARCNTRL,REC_GLARCNTRL,1718;GLC0;
Rem {end read.glarcntrl.i}
Return 
GETGLINVENT: Rem add to gltemp file
For X = 0 To 2 \ GTEMP0[X] = 0 \ Next X
For X = 0 To 3 \ GTEMP1[X] = 0 \ Next X
If P9$[2,2] = "M"
  If COMMCODE$[1,4] = "LABR"
    If P8$[3,3] = "Y"
      GTEMP0[0] = GLC8[PCAT]
    Else 
      GTEMP0[0] = GLC8[0]
    End If 
  Else 
    If COMMCODE$[1,4] = "MACH"
      If P8$[3,3] = "Y"
        GTEMP0[0] = GLC10[PCAT]
      Else 
        GTEMP0[0] = GLC10[0]
      End If 
    Else 
      If COMMCODE$[1,4] = "TIME"
        If P8$[3,3] = "Y"
          GTEMP0[0] = GLC9[PCAT]
        Else 
          GTEMP0[0] = GLC9[0]
        End If 
      Else 
        If MBFLG$ = "M" !finished good
          If P8$[3,3] = "Y"
            GTEMP0[0] = GLC4[PCAT]
          Else 
            GTEMP0[0] = GLC4[0]
          End If 
        Else 
          If MBFLG$ = "B" ! raw material inventory
            If P8$[3,3] = "Y"
              GTEMP0[0] = GLC11[PCAT]
            Else 
              GTEMP0[0] = GLC11[0]
            End If 
          End If 
        End If 
      End If 
    End If 
  End If 
Else 
  If P8$[3,3] = "Y"
    GTEMP0[0] = GLC4[PCAT]
  Else 
    GTEMP0[0] = GLC4[0]
  End If 
End If 
Gosub ADDGLTEMP
Return 
GETGLREASON: Rem get gl account for reason code
For X = 0 To 2 \ GTEMP0[X] = 0 \ Next X
GLCOST = - GLCOST[0]
GLCOST[1] = - GLCOST[1]
Mat Read #10,MRTS2[0],30;RSN;
GTEMP0[0] = RSN[MRTS2[2]]
If Not(GTEMP0[0]) Let GTEMP0[0] = RSN[0]
Gosub ADDGLTEMP
Return 
ADDGLTEMP: Rem add to gl temp file
GTEMP0[1] = 0
GTEMP1[0] = CLIENT
GTEMP1[1] = MRTS2[2]
If MRTS3[2]
  GTEMP1[2] = MRTS3[2]
Else 
  GTEMP1[2] = ARDATE
End If 
GTEMP1[3] = MRTS2[0]
GLTKEY$ = " ",GLTKEY$;GLTKEY$[1,4] = CLIENT Using "####"
GLTKEY$[5,12] = GTEMP0[0] Using "########"
GLTKEY$[13,14] = GTEMP1[1] Using "##"
GLTKEY$[15,20] = GTEMP1[2] Using "######"
GLTKEY$[21,24] = GTEMP1[3] Using "####"
Search #CH_GLTEMP,2,1;GLTKEY$,REC_GLTEMP,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  E = 2 \ Search #CH_GLTEMP,1,0;GLTKEY$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
  Gosub WRITEGLTEMP
  Search #CH_GLTEMP,4,1;GLTKEY$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
End If 
Gosub READGLTEMP
If P61$[60,60] = "Y"
  GTEMP0[1] = GTEMP0[1] + GLCOST[1]
Else 
  GTEMP0[1] = GTEMP0[1] + GLCOST
End If 
Gosub WRITEGLTEMP
Return 
READGLTEMP: Rem read general ledger temp file
Mat Read #CH_GLTEMP,REC_GLTEMP,0;GTEMP0
Mat Read #CH_GLTEMP,REC_GLTEMP,18;GTEMP1
Return 
WRITEGLTEMP: Rem write general ledger temp file
Mat Write #CH_GLTEMP,REC_GLTEMP,0;GTEMP0
Mat Write #CH_GLTEMP,REC_GLTEMP,18;GTEMP1;
Return 
GETGLCOST: Rem get the general ledger cost
If P9$[17,17] <> "Y" Return 
If MRTS2[1] ! accepted already
  GLCOST[0] = MRTS0[4]
  GLCOST[1] = MRTS4[2]
  Return 
End If 
If MRTS0[3] And MRTS0[0] > 0
  DISP_EXT = FNR(MRTS0[0] * MRTS0[3])
  If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
    DISP_QTY = MRTS0[0];DISP_COST = MRTS0[3]
    Gosub CALC_DISP_EXT
  End If 
  If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
    DISP_QTY = MRTS0[0];DISP_COST = MRTS0[3]
    Gosub CALC_DISP_EXT
  End If 
  GLCOST[0] = DISP_EXT
  If P61$[60,60] = "Y" ! get the special cost
    REC_WHSE = (MRTS2[2]) - 1
    If REC_WHSE < 0 Goto ENDADDGLCOST1
    If REC_WHSE > 99 Goto ENDADDGLCOST1
    Read #26,REC_WHSE,2970;WHOS;
    If Not(WHOS) Goto ENDADDGLCOST1
    FSKEY$ = " ",FSKEY$
    FSKEY$[1,12] = P1$[140,151];FSKEY$[13,16] = WHOS Using "####"
    Search #CH_FIFOS,2,1;FSKEY$,REC_FIFOS,E \ If E > 1 Gosub ERR_SEARCH
    If E = 1 Goto ENDADDGLCOST1
    Mat Read #CH_FIFOS,REC_FIFOS,38;FC2;
    DISP_EXT = FNR(MRTS0[0] * FC2[0])
    If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
      DISP_QTY = MRTS0[0];DISP_COST = FC2[0]
      Gosub CALC_DISP_EXT
    End If 
  End If 
ENDADDGLCOST1: Rem end of glcost 1 update
  GLCOST[1] = DISP_EXT
  Return 
End If 
UNITGLCOST = 0;GLCOST[0] = 0;GLCOST[1] = 0
If P60$[9,9] = "F" Or P60$[9,9] = "L"
  If P8$[5,5] = "F" Or P8$[5,5] = "I"
    GLCOST[0] = FCOST \ GLCOST[1] = FCOST[1]
    Return 
  End If 
End If 
If P9$[32,32] = "Y"
  K9$ = " ",K9$ \ K9$[1,12] = P1$[140,151] \ K9$[13,14] = MRTS2[2] Using "##"
  Search #CH_PRODWHSE,2,1;K9$,REC_PRODWHSE,E
  If Not(E)
    Mat Read #CH_PRODWHSE,REC_PRODWHSE,78;PW3;
    If P8$[5,5] = "R" Or P8$[5,5] = "F"
      UNITGLCOST = PW3[16]
    Else 
      If P8$[5,5] = "I"
        UNITGLCOST = PW3[16] + FNR((PW3[16] * FIFL) / 100)
      Else 
        If P8$[5,5] = "W"
          UNITGLCOST = PW3[17]
        Else 
          If P8$[5,5] = "B"
            UNITGLCOST = PW3[18]
          Else 
            UNITGLCOST = PW3[15]
          End If 
        End If 
      End If 
    End If 
  End If 
End If 
If Not(UNITGLCOST)
  If P8$[5,5] = "R" Or P8$[5,5] = "F"
    UNITGLCOST = B[10]
  Else 
    If P8$[5,5] = "I"
      UNITGLCOST = B[10] + FNR((B[10] * FIFL) / 100)
    Else 
      If P8$[5,5] = "W"
        UNITGLCOST = B[8]
      Else 
        If P8$[5,5] = "B"
          UNITGLCOST = PR_C4[4]
        Else 
          UNITGLCOST = B[21]
        End If 
      End If 
    End If 
  End If 
End If 
If Not(UNITGLCOST) Let UNITGLCOST = W7[3]
DISP_EXT = FNR(QTY * UNITGLCOST)
If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
  DISP_QTY = QTY;DISP_COST = UNITGLCOST
  Gosub CALC_DISP_EXT
End If 
GLCOST[0] = DISP_EXT
GLCOST[1] = DISP_EXT
Return 
UPDATEFIFO: Rem UPDATE FIFOLOT & FIFOTRANS
!If Err 0 Gosub ERR_TRAP
FLBSFACTOR = LBSFACTOR
FLBSUNIT = LBSUNIT
FCOST = 0;FCOST[1] = 0
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Return 
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  If Not(MRTS4[1]) Return 
Else 
  If Not(QTY) Return 
End If 
For CTR = 0 To 16
  If CTR < 11 Let FIFOSPECCH[CTR] = 0;FIFOSPEC1[CTR] = 0;FIFOSPEC2[CTR] = 0
  FIFOSPEC3[CTR] = 0
Next CTR
FIFOSPEC$ = " ",FIFOSPEC$
Rem set fifo spec variable for channel #
FIFOSPECCH[0] = 19
FIFOSPECCH[1] = 20
FIFOSPECCH[2] = 30
FIFOSPECCH[3] = 26
FIFOSPECCH[4] = 3
FIFOSPECCH[5] = 8
FIFOSPECCH[6] = 32
Rem set fifospec 1 variables
FIFOSPEC1[0] = 324
FIFOSPEC1[1] = MRTS2[2]
FIFOSPEC1[2] = MRTS2[2]
FIFOSPEC1[3] = MRTS2[2]
FIFOSPEC1[4] = 0
FIFOSPEC1[5] = MRTS2[0]
Rem set fifospec 2 variables
FIFOSPEC2[0] = JARDATE
FIFOSPEC2[1] = 0
Rem set fifospec 3 variables
FIFOSPEC3[0] = QTY
FIFOSPEC3[1] = MRTS0[5]
FIFOSPEC3[2] = 0
FIFOSPEC3[3] = MRTS0[3]
FIFOSPEC3[4] = FLBSUNIT
FIFOSPEC3[5] = FLBSFACTOR
FIFOSPEC3[6] = QTY
FIFOSPEC3[7] = Abs(MRTS4[1])
FIFOSPEC3[8] = 0
FIFOSPEC3[9] = 0
Rem set fifospec$ variable
FIFOSPEC$ = " ",FIFOSPEC$
FIFOSPEC$[1,12] = P1$[140,151]
FIFOSPEC$[87,102] = MRTS0$[19,34]
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  If Not(MRTS4[1]) Return 
  FIFOSPEC3[0] = MRTS4[1]
  If MRTS4[1] >= 0 ! positive qty  check cost
    If MRTS0[3] ! cost has been calculated ! need price per lb
      If MRTS3[1] <> -3 ! enter costing  <>-3
        FIFOSPEC3[3] = Abs((MRTS0[3] * QTY) / MRTS4[1])
      Else 
        CNVTA = MRTS0[3]
        CNVTU[0] = 0;CNVTU[1] = -3;CNVTU[2] = 2
        Gosub L_20000
        FIFOSPEC3[3] = AMOUNT
      End If 
    End If 
  Else 
    FIFOSPEC3[3] = 0
  End If 
End If 
!Call "MXFIFOCOST",FIFOSPECCH[],FIFOSPEC1[],FIFOSPEC2[],FIFOSPEC3[],FIFOSPEC$
Call "MXFIFOCOST.DL4",FIFOSPECCH[],FIFOSPEC1[],FIFOSPEC2[],FIFOSPEC3[],FIFOSPEC$,e$,rstr$                                                               
FCOST[0] = FIFOSPEC3[8]
FCOST[1] = FIFOSPEC3[9]
Return 
FCOST = 0;FCOST[1] = 0
FQ9[0] = QTY \ FQ9[1] = 0 \ FQ9[2] = 0
If Not(FQ9[0]) Goto ENDFIFOUPDATE
If FQ9[0] >= 0 Goto GETLASTCOST
!If Err 0 Gosub ERR_TRAP
FLK$ = " ",FLK$ \ FLK$[1,12] = P1$[140,151] \ FLK$[13,14] = MRTS2[2] Using "##" \ MODE = 3
If P60$[9,9] = "L" Let FLK$[15] = "999999" \ MODE = 6
SEARCHFIFOLOT: Rem loop thru fifo lot file for open lot amounts
Search #CH_FIFOL,MODE,1;FLK$,REC_FIFOL,E \ If E = 2 Goto GETLASTCOST
If E Gosub ERR_SEARCH
If FLK$[1,12] <> P1$[140,151] Goto GETLASTCOST
S9 = FLK$[13,14] \ If S9 <> MRTS2[2] Goto GETLASTCOST
Mat Read #CH_FIFOL,REC_FIFOL,102;FL3; \ If Not(FL3 - FL3[1]) Goto SEARCHFIFOLOT
FQ9[2] = FQ9[0] - FQ9[1]
If FQ9[2] > 0 If (FL3[0] - FL3[1]) < 0 Goto ALLOCLOTQTY
FQTY = FL3[0]
For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
If FQ9[2] < 0 If FQTY > 0 Goto ALLOCLOTQTY
If FQ9[2] >= 0 Goto SEARCHFIFOLOT
Goto SEARCHFIFOLOT
ALLOCLOTQTY: Gosub READFIFOLOT
If FQ9[2] > 0
  If (FL3[1] - FL3[0]) > 0 If (FL3[1] - FL3[0]) < FQ9[2] Let FQ9[2] = (FL3[1] - FL3[0])
  FL3[10] = Int(FL3[10] - FQ9[2])
Else 
  FQTY = FL3[0]
  For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
  For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
  If FL3[0] If FQTY < Abs(FQ9[2]) Let FQ9[2] = - (FQTY)
  FL3[10] = Int(FL3[10] - FQ9[2])
End If 
Gosub WRITEFIFOLOT
Search #CH_FIFOW,2,1;FLK$,REC_FIFOW,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  REC_FIFOW = REC_FIFOL
  Search #CH_FIFOW,4,1;FLK$,REC_FIFOW,E \ If E Gosub ERR_SEARCH
End If 
DISP_QTY = FQ9[2]
DISP_COST = 0
If P8$[5,5] = "I" Let DISP_COST = FL3[7]
If P8$[5,5] = "F" Let DISP_COST = FL3[6]
DISP_EXT = FNR(DISP_QTY * DISP_COST)
If DISP_COST
  If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
    Gosub CALC_DISP_EXT
  End If 
End If 
FCOST = FCOST + DISP_EXT
If P61$[60,60] = "Y" And FL3[14] <> 0
  DISP_COST = FL3[14]
  If DISP_COST
    If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
      Gosub CALC_DISP_EXT
    End If 
    DISP_EXT = FNR(DISP_QTY * DISP_COST)
  End If 
  FCOST[1] = FCOST[1] + DISP_EXT
Else 
  FCOST[1] = FCOST[1] + DISP_EXT
End If 
FQ9[1] = Int(FQ9[1] + FQ9[2]) \ If FQ9[0] = FQ9[1] Goto ENDFIFOUPDATE
Goto SEARCHFIFOLOT
READFIFOLOT: Rem READ FIFOLOT
Rem {begin src/inc/read.fifolot.i}
Mat Read #CH_FIFOL,REC_FIFOL,0;FL1
Mat Read #CH_FIFOL,REC_FIFOL,6;FL1$
Mat Read #CH_FIFOL,REC_FIFOL,86;FL2
Mat Read #CH_FIFOL,REC_FIFOL,102;FL3
Rem {end read.fifolot.i}
Return 
WRITEFIFOLOT: Rem WRITE FIFOLOT
Rem {begin src/inc/write.fifolot.i}
Mat Write #CH_FIFOL,REC_FIFOL,0;FL1
Mat Write #CH_FIFOL,REC_FIFOL,6;FL1$
Mat Write #CH_FIFOL,REC_FIFOL,86;FL2
Mat Write #CH_FIFOL,REC_FIFOL,102;FL3;
Rem {end write.fifolot.i}
Return 
GETLASTCOST: Rem CHECK LAST FIFO COST
FQ9[2] = FQ9[0] - FQ9[1] \ If Not(FQ9[2]) Goto ENDFIFOUPDATE
FLK$ = " ",FLK$ \ FLK$[1,12] = P1$[140,151] \ FLK$[13,14] = MRTS2[2] Using "##" \ MODE = 3
If P60$[9,9] = "F" Let MODE = 6 \ FLK$[15] = "999999"
Search #CH_FIFOL,MODE,1;FLK$,REC_FIFOL,E
If E If E <> 2 Gosub ERR_SEARCH
If Not(E)
  X = FLK$[13,14]
  If FLK$[1,12] = P1$[140,151] And X = MRTS2[2]
    FIFOUNIT = 0
    If P8$[5,5] = "F" Read #CH_FIFOL,REC_FIFOL,138;FIFOUNIT;
    If P8$[5,5] = "I" Read #CH_FIFOL,REC_FIFOL,144;FIFOUNIT;
    DISP_EXT = FNR(FIFOUNIT * FQ9[2])
    If FIFOUNIT
      If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
        DISP_QTY = FQ9[2];DISP_COST = FIFOUNIT
        Gosub CALC_DISP_EXT
      End If 
    End If 
    FCOST = FCOST + DISP_EXT
    Read #CH_FIFOL,REC_FIFOL,186;FL3[14];
    If P61$[60,60] = "Y"
      If FQ9[2] > 0 ! adding in check for special cost
        REC_WHSE = (MRTS2[2]) - 1
        If REC_WHSE < 0 Goto ENDADDSPCCOST
        If REC_WHSE > 99 Goto ENDADDSPCCOST
        Read #26,REC_WHSE,2970;WHOS;
        If Not(WHOS) Goto ENDADDSPCCOST
        FSKEY$ = " ",FSKEY$;FSKEY$[1,12] = P1$[140,151]
        FSKEY$[13,16] = WHOS Using "####"
        Search #CH_FIFOS,2,1;FSKEY$,REC_FIFOS,E \ If E > 1 Gosub ERR_SEARCH
        If Not(E)
          Mat Read #CH_FIFOS,REC_FIFOS,38;FC2;
          FL3[14] = FC2[0]
        End If 
      End If 
ENDADDSPCCOST: Rem end of adding spc cost
      If FL3[14] <> 0 ! get special cost
        DISP_EXT = FNR(FL3[14] * FQ9[2])
        If FL3[14]
          If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
            DISP_QTY = FQ9[2];DISP_COST = FL3[14]
            Gosub CALC_DISP_EXT
          End If 
        End If 
        FCOST[1] = FCOST[1] + DISP_EXT
      Else 
        FCOST[1] = FCOST[1] + DISP_EXT
      End If 
    End If 
  End If 
  Goto ENDSPECCOST
End If 
If P9$[32,32] = "Y"
  K9$ = " ",K9$ \ K9$[1,12] = P1$[140,151] \ K9$[13,14] = MRTS2[2] Using "##"
  Search #CH_PRODWHSE,2,1;K9$,REC_PRODWHSE,E
  If Not(E)
    Mat Read #CH_PRODWHSE,REC_PRODWHSE,78;PW3;
    If PW3[16]
      DISP_EXT = FNR(FQ9[2] * PW3[16])
      If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
        DISP_QTY = FQ9[2];DISP_COST = PW3[16]
        Gosub CALC_DISP_EXT
      End If 
      FCOST = FCOST + DISP_EXT
      Goto ENDLASTCOST
    End If 
  End If 
End If 
Mat Read #3,MRTS0[1],156;B;
DISP_EXT = FNR(FQ9[2] * B[10])
If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
  DISP_QTY = FQ9[2];DISP_COST = B[10]
  Gosub CALC_DISP_EXT
End If 
FCOST = FCOST + DISP_EXT
ENDLASTCOST: Rem end last cost ! check for special cost
If P61$[60,60] = "Y"
  REC_WHSE = MRTS2[2] - 1
  If REC_WHSE < 0 Goto SETSPECCOST
  If REC_WHSE > 99 Goto SETSPECCOST
  Read #26,REC_WHSE,2970;WHOS;
  If Not(WHOS) Goto SETSPECCOST
  FSKEY$ = " ",FSKEY$;FSKEY$[1,12] = P1$[140,151]
  FSKEY$[13,16] = WHOS Using "####"
  Search #CH_FIFOS,2,1;FSKEY$,REC_FIFOS,E \ If E > 1 Gosub ERR_SEARCH
  If E Goto SETSPECCOST
  Mat Read #CH_FIFOS,REC_FIFOS,38;FC2;
  DISP_EXT = FNR(FQ9[2] * FC2[0])
  If PFU1[11] > 0 And PFU1[11] <> PFU1[0]
    DISP_QTY = FQ9[2];DISP_COST = FC2[0]
    Gosub CALC_DISP_EXT
  End If 
  FCOST[1] = FCOST[1] + DISP_EXT
  Goto ENDSPECCOST
End If 
SETSPECCOST: Rem product does not have a special cost
FCOST[1] = FCOST[1] + DISP_EXT
ENDSPECCOST: Rem endof special cost update
ENDFIFOUPDATE: Rem end of fifo update for this lot
! If Err 0 Gosub ERR_ESCAPE
Return 
CLEARFIFOWORK: Rem clear fifo work file
FLW$ = " ",FLW$
SEARCHFIFOWORK: Rem search thru fifo work file
Search #CH_FIFOW,3,1;FLW$,REC_FIFOW,E \ If E = 2 Goto KILLFIFOWORK
If E Gosub ERR_SEARCH
REC_FIFOL = REC_FIFOW
Gosub READFIFOLOT
FL3[10] = 0
Gosub WRITEFIFOLOT
Search #CH_FIFOW,5,1;FLW$,REC_FIFOW,E \ If E Gosub ERR_SEARCH
Goto SEARCHFIFOWORK
KILLFIFOWORK: Rem kill temp fifo work file
CMD$ = rec_uac Using "6/FIFOMRSTMP&&&&"
Call FindF(CMD$,A9)
If A9
  Close #CH_FIFOW
  Kill CMD$
End If 
Return 
GETCLIENT: Rem get valid client #
If Not(CLFLAG)
  CLIENT = CL[0]
  Return 
End If 
If (MRTS2[2] - 1) >= 0
  Mat Read #26,(MRTS2[2] - 1),844;CLIENT;
End If 
If Not(CLIENT) Let CLIENT = CL[0]
EFLAG[4] = 0
Gosub GETGLMASTER
Return 

GETGLMASTER: Rem get correct gl master file
K24$ = " ",K24$;K24$[3,6] = CLIENT Using "####"
Search #24,2,1;K24$,R[24],E \ If E > 1 Gosub ERR_SEARCH
If E
  EFLAG[0] = 99;EFLAG[3] = 99;EFLAG[4] = 99
  Return 
End If 
Mat Read #24,R[24],0;G9$;
L9 = G9$[135,136]
If L9 < 10 Let L9$ = L9 Using "#" Else Let L9$ = L9 Using "##"
CLIENT$ = CLIENT Using "####"
For X = 1 To 4
  If CLIENT$[X,X] = " " Let CLIENT$[X,X] = "."
Next X
G8$[1,1] = CL[1] Using "&&";G8$[2,2] = CL[2] Using "&&"
CMD$ = L9$,"/GLM",G8$[1,2],CLIENT$
Call FindF(CMD$,A9)
If Not(A9)
  EFLAG[0] = 99;EFLAG[3] = 99;EFLAG[4] = 99
Else 
  !If Err 0 Rem
  Try Close #21 Else Rem
  !If Err 0 Gosub ERR_TRAP
  Open #21,CMD$
End If 
Return 


clear_lost_status: !! clear MRTS2[3] that seems set wrong
let keymrts1$=" ",keymrts1$
cls_loop: search #2,3,1;keymrts1$,rec_mrts,e
if e>2 gosub err_search:
if not(e)
	mat read #2,rec_mrts,104;mrts2;
	if whse
		if whse<>mrts2[2] goto cls_loop:
	endif
	if mrts2[3] <> 1 and mrts2[3]<100 goto cls_loop: ! not marked as in 324 process
	j=mrts2[3]-100  !! get day of month set
	if j<>tim(10)
		let mrts2[3]=0
		mat write #2,rec_mrts,104;mrts2;
	endif
	goto cls_loop:
endif
return


End 
CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
COSTUM = PFU1[11]
If MRTS0[3] > 0 Let COSTUM = MRTS3[1]
If Not(COSTUM) Let COSTUM = PFU1[11]
DISP_QTY1 = DISP_QTY
!! CNVTA = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 1 \ Gosub L_20000
CNVTA = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 5 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA = DISP_COST;CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
If MRTS3[1] = -1 Let DISP_EXT = FNR(DISP_COST * (LBSUNIT * DISP_QTY1) / LBSFACTOR / 100)
If MRTS3[1] = -3 Let DISP_EXT = FNR(DISP_COST * (LBSUNIT * DISP_QTY1) / LBSFACTOR)
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: GoTo L_20120:  !  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End


OUTEND: Rem EXIT
S = 2 \ Write #1,20;S;
OUTEND2: If P60$[9,9] = "F" Or P60$[9,9] = "L"
  Gosub CLEARFIFOWORK
End If 
If P9$[17,17] = "Y"
DELGLMRSTEMP: Rem delete keys/records for glmrstemp file
  K22$ = ""
  Search #CH_GLTEMP,3,1;K22$,REC_GLTEMP,E \ If E = 2 Goto CLEARMRSWORK
  If E Gosub ERR_SEARCH
  Search #CH_GLTEMP,5,1;K22$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #CH_GLTEMP,1,0;K22$,REC_GLTEMP,E \ If E Gosub ERR_SEARCH
  Goto DELGLMRSTEMP
End If 
CLEARMRSWORK: Rem clear mrtstmp file & reset status
CMD$ = REC_UAC Using "6/MRSWERP&&&&"
Call FindF(CMD$,A9)
If A9
  KEYMRTS1$ = " ",KEYMRTS1$
CLRMRSWORK1: Rem clear status 1 items to 0
  Search #CH_MRSW,3,1;KEYMRTS1$,REC_MRTS,E \ If E = 2 Goto ENDCLRMRS1
  If E Gosub ERR_SEARCH
  Mat Read #2,REC_MRTS,104;MRTS2
  MRTS2[3] = 0
  Mat Write #2,REC_MRTS,104;MRTS2;
  Search #CH_MRSW,5,1;KEYMRTS1$,REC_MRTS,E \ If E Gosub ERR_SEARCH
  Goto CLRMRSWORK1
ENDCLRMRS1: Rem end of file clear / kill of file
  Kill CMD$
End If 
If P61$[60,60] = "Y" And CH_TXT = 99 ! remove special cost file
  Call FindF(TXTFNAME$,A9)
  If A9
    !If Err 0 Rem
    Try Close #CH_TXT Else Rem
    !  Err 0 Gosub ERR_TRAP
    Kill TXTFNAME$
  End If 
End If 
L_9000: Rem rem exit with no updates of files
Mat Read #26,99,900;WPF
WPF[324] = 0
Mat Write #26,99,900;WPF;
msg$="unlock 324"
call "proglock.dl4","324",0,msg$
gosub clear_lost_status:
L_9010: Rem bypass flg reset
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
if not(aok)
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflg)
	if not(totmrts)
		returnstatus=1
		let message$=message$+"There are no miscellaneous receipts available to list"
		if whse<>0
			let message$=message$+" for warehouse "+str$(whse)
		endif
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totmrts)+" Miscellaneous Receipts To Stock Listed"
	endif
endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
outend9: ! everything has been written in called program
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
