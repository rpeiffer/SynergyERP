! >>> Program 242
!
! description CREDIT VERIFICATION JOURNAL
!
! loadsave -w -n 100,10 -o prog/dxport/242.dl4 src/242.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem "MX242A   -- CREDIT  Verification  (taken from mx246a cct #53894)
Rem "Author   -- Roman Sawycky
Rem "Date     -- 08/30/1993
! "Last Update: 
!              071195 cct#77052 clean up summary
!              05/20/97 cct100530-added "DELETED_CM" flag to prevent an error if a cust# is deleted on a c/m that was deleted.
! 04/17/98 cct108935 tc fix error if salesman not exist
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 21, 2004  12:38:45
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx2/mx242a.src (univ2) [jcs] {22104}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FormatDate,InpBuf,String,getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
!Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 3%,PFU2[6],CNVTA,A[33],AMOUNT
If Err 0 Gosub ERR_TRAP

Dim 1%,E,F,F9,H4[2],I,J1,J2,J8,J9,L3[3],P1,S1,S2,S7,W0,X,X1
Dim 1%,SORT,PASS,OLS2[1],H3[1],POS_,REC,COSTCHG,EUN[2]
Dim 2%,D9[5],H0[12],H5[16],L4[3],L6[5],R1,R5,R6,W1,X2,GPL,C0[4],SP,LTAX2
Dim 2%,SLSM[9],I_CTR,Q0[1],DIV,DL[12],H6[8],PRODB[24]
Dim 3%,J,L5[3],T2[25],T4[4],T5[4],T6[4],T7[13],T9[20],T16[8],OLM[6],UNF[6]
Dim 3%,SUNIT[3],PUNIT,SUNIT$[4],PUNIT$[4],UNIT,UNIT$[4],CUNIT,CUNIT$[4]
Dim 3%,T10[7],T11[2],CAT[19,5],TOTCOM,LTAX1,OREF[5],DL3
Dim 3%,X3,L7[9],L7$[6],N1$[25],S3[17],C8[2],S5[3],SCOM[4],SMER[4],SCST[4]
Dim 3%,TT2[25],TTOT[14],CFIN[8],W3[24],LDCOST,INVNET,TOTNET,TOTFCST
Dim C1$[30],C2$[30],S1$[118],D1$[8],D9$[10],F1$[16],J$[40],CNAME$[30]
Dim J2$[20],J3$[40],ARDATE$[8],K1$[50],K2$[40],K3$[20],L6$[60],DT$[50]
Dim S$[25],K11$[40],S2$[30],K6$[50],PMASK$[15],SNK$[50],SN1$[54]
Dim L1$[20],P0$[20],P1$[156],P9$[50],P60$[50],X$[20],Z1$[50],TFLE$[30]
Dim K17$[30],LINES$[132],DL1$[20]
Dim msg$[100]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
B$=" ",B$
LINES$ = "-",LINES$
!Try 
!call dxopen() ! may not need this! NEEDS FOR DXTEST RUN!!
!Else
	Rem
!End try
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo

For J = 2 To 17
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1840","1856","1872","1888","1808","1792","2256","-1","2224","1824","1728","1248","2944"
Data "-1","-1","1744"
Gosub L_6800
Mat Read #1,0,100;ARDATE$;
Mat Read #1,115,0;D9;
Read #1,18,30;D9$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,3;CNAME$;
Read #1,88,800;F1$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
W0 = D9[5]
Dim 3%,T8[W0,6],COMM[W0,2],3%
!If Err 0 Let J8 = Spc(8)
J8 = 0
Try J9 = Chf(0) Else Let J8=49
J9 = 55 \ If J8 Let J9 = 20;scrprt=9
S1 = 9;S2 = 10
MULTIS = 0 \ If P9$[21,21] = "Y" Let MULTIS = 1
! moved from 242 - check if any credits
LET X$=" 9"                                     
SEARCH #2,3,1;X$,V1,E \ IF E>2 GOSUB ERR_SEARCH:
If Not(E)                             
	IF X$[1,2]=" 9" goto L_1000 ! RETURN 1                        
	IF X$[1,2]="10" goto L_1000 ! RETURN 1   
Endif
E$="NO CREDIT MEMOS FOUND"  
goto ERR_MSG ! outend
L_1000: Rem "================================================ inputs
EFLG=0;Message$=""
Call DXGET("RN242",TMP$)
! call programdump("/tmp/cvlog0!","")
If tmp$="" 
	tmp1$="OK - Report Not Run"
	Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
	goto L_9020
Endif
!Print 'CS';@0,0;"MX242A";@25,0;"CREDIT VERIFICATION"
L_1010: !Print @0,3;"HAVE CREDITS BEEN PRINTED? (Y/N  E: EXIT) ";'CE';
S7 = 0 
Call DXGet("RPRTJ",J$)
K2$ = UCASE$(Trim$(J$)) \ if k2$="" let K2$="N" ELSE LET K2$="Y"
If K2$ = "Y" Let S7 = S2
If K2$ = "N" Let S7 = S1
If Not(S7) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection is Y or N! " !Goto L_1010
!K1$ = "2" \ Goto L_1095
L_1080: !If S7 = 10 Print @0,4;'CE';"ENTER TYPE:  1: CASH,  2: ORDERS ";
!If S7 = 11 Print @0,4;'CE';"REPRINT TYPE:  1: CASH,  2: ORDERS ";
!Input ""K1$ ! =========  EVIDENTLY DON'T ASK THIS ITS ALWAYS A 2 ===========
L_1095: P1=2 ! If Len(K1$) > 1 Goto L_1080 Else Let P1 = K1$
!If Fra(P1) Or P1 < 1 Or P1 > 2 Goto L_1080
L_1105: Rem "====== which warehouse(s) to print
!Print @0,5;'CE';"ENTER ";D9$;" #,  0: FOR ALL, OR  E: TO EXIT ";
Call DXGet("WHS",tmp$) \ j1=tmp$
w1=J1
If Fra(W1) Or W1 < 0 Or W1 > D9[5] let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse is 0 to 99! "!Goto L_1105
L_1140: Rem "========= which division(s) to print
!Print @0,7;'CE';"ENTER DIVISION #,   0: FOR ALL, OR  E: TO EXIT ";
Call DXGet("DIV",tmp$) \ let j1=tmp$
DIV = J1
If Fra(DIV) Or DIV < 0 Or DIV > 99 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division is 0 to 99! "!Goto L_1140
L_1165: !Print @0,9;'CE';"PRINT  1: REGULAR,  2: TOTAL PAGES ONLY (1-2)   ";
call dxget("RGTT",tmp$)
SUMM=tmp$
If Fra(SUMM) Or SUMM < 1 Or SUMM > 2 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Select 1 or 2! " !Goto L_1165
SUMM = SUMM - 1
If SUMM Let PASS = 0 ! ;SORT = 1 \ Goto L_1300 ! WEB MUST HAVE ALL POSSIBLE PROMPTS!!
L_1210: !Print @0,11;'CE';"PRINT:  1: CREDIT VERIFICATION,  2: SALESPERSON VERIFICATION,  3: BOTH ";
! ALWAYS HAS TO ASK AS NO WAY TO NOT ASK ON BLOCKID !!
Call DXGET("JRTYPE",tmp$) \ j1=tmp$
SORT = J1 \ if SUMM Let Sort=1
If Fra(SORT) Or SORT < 1 Or SORT > 3 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto L_1210
If SORT < 3 Let PASS = 0 !\ Goto L_1222
If Sort=3 let SORT = 1 \ PASS = 1
L_1222: !Print @0,13;'CE';"PRINT CREDIT LINES IN  D: DETAIL OR  S: SUMMARY, OR  E: TO EXIT  ";
call dxget("LDTSUM",tmp$) \ j$=Trim$(tmp$)
If SUMM=1 let j$="S"
DT$ = J$
If DT$ = "S" Let LNDETL = 0
If DT$ = "D" Let LNDETL = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto L_1222
L_1255: Rem ENTERED BY?
!Print @0,15;'CE';"INCLUDE ENTERED BY CREDIT TOTALS PAGE? (Y/N) ";
Call DXGet("EBTTL",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
ENTD = J1 
If J1 <> 0 If j1 <> 1 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!Goto L_1255
!ENTD = 0
!If DT$ = "Y" Let ENTD = 99
if SUMM let ENTD=0 ! summary
L_1300: Rem "==ok
! always P to print!
If Eflg>0 ! found an issue
	let tmp$="THERE ARE "+Str$(eflg)+" ISSUES THAT NEED FIXING.. "+Message$
	ReturnStatus=1 ! 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
	call CreateNetStatus(e$,ReturnStatus,tmp$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
	  Goto L_9020 ! OutEnd - 
Endif
If SCRPRT ! dx xml, setup rstr$ (PRINT TO BROWSER)
  !<section>
  tmp$ = bsdel$,"242",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
  tmp$ = "MESSAGE" ! PER ALL - NO XCEL OPTION! (MULTI LINE & MULTI SECTION!!)
  call addtostr(e$,rstr$,tmp$+rdel$)
  Goto OutEnd ! don't even process!!
Endif
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If ! LET'S NOT DO THIS UNTIL END OF REPORT?
! IT LOOPS TO 1400 for multiple passes
L_1400: Rem "================================================ clear all tot's
!Print @0,22;'CL';"Clearing Totals..."; \ Signal 3,0
For J = 0 To 25
  T2[J] = 0
  If J < 14 Let T7[J] = 0
  If J < 21 Let T9[J] = 0
  If J < 8 Let T10[J] = 0
  If J < 3 Let T11[J] = 0
  If J < 15 Let TTOT[J] = 0
  If J < 9 Let T16[J] = 0
  If J < 5 Let T4[J] = 0;T5[J] = 0;T6[J] = 0
Next J
For J = 0 To D9[5]
  For J1 = 0 To 6
    If J1 < 7 Let T8[J,J1] = 0
    If J1 < 3 Let COMM[J,J1] = 0
  Next J1
Next J
For J = 0 To 999 !  \ If Not(Fra(J / 50)) Print ".";
  REC = J \ Gosub L_6750
Next J
SLSMTDGP = 0;SLSYTDGP = 0;SLSMTDSL = 0;SLSYTDSL = 0
TOTNET = 0;TOTFCST = 0
!Print @0,22;'CE';"Sorting...please wait"; \ Signal 3,0
K1$ = " ",K1$
Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1550 ! means first pass thru - other passes find keys
Goto L_1900
L_1550: Rem "=========================================== now do sort
K1$ = " ",K1$;K1$ = S7 Using "##     "
K3$ = K1$
L_1570: Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1700
If K1$[1,2] <> K3$[1,2] Goto L_1700
Mat Read #2,R1;H0;
Mat Read #2,R1,78;H4;
Mat Read #2,R1,52;H3 \ If H3[1] = 6 Goto L_1570
Mat Read #2,R1,104;H5;
Mat Read #2,R1,278;SLSM;
Mat Read #2,R1,512;OREF;
If W1 If W1 <> H4[2] Goto L_1570
If DIV If DIV <> H5[8] Goto L_1570
K2$ = " ",K2$
K2$ = H0[7] Using "&&&&&&";K2$[7] = OREF[1] Using "##########"
K2$[17,17] = "A"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;TSRT = 0
K2$[1,1] = "#";K2$[2,4] = H0[11] Using "###"
If MULTIS
  For X = 0 To 4 \ If SLSM[X] = 0 Goto L_1655
    TSRT = 1
    K2$[2,4] = SLSM[X] Using "###" \ Gosub L_1660
L_1655: Next X
  If TSRT = 0 Goto L_1660
  TSRT = 0 \ Goto L_1690
End If 
L_1660: K2$[5] = H0[7] Using "######";K2$[11] = OREF[1] Using "##########"
K2$[21,21] = "A"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
If TSRT = 1 If MULTIS Return 
L_1690: Goto L_1570
L_1700: Rem "=========================================== now do sort
K1$ = " ",K1$;K1$ = S7 Using "##     "
K3$ = K1$
L_1730: Search #13,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
If K1$[1,2] <> K3$[1,2] Goto L_1900
Mat Read #13,R1;DL;
Read #13,R1,100;DL3;
If W1 If W1 <> DL[8] Goto L_1730
If DIV If DIV <> DL[9] Goto L_1730
K2$ = " ",K2$
K2$ = DL[3] Using "&&&&&&";K2$[7] = DL3 Using "##########"
K2$[17,17] = "D"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$
K2$[1,1] = "#";K2$[2,4] = DL[6] Using "###"
K2$[5] = DL[3] Using "######";K2$[11] = DL3 Using "##########"
K2$[21,21] = "D"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
Goto L_1730
L_1900: Rem "========================================= start print
!Print @0,22;'CE';"Printing...please wait"; \ Signal 3,0
!If J8 Print 'CS';
J2 = 0;J1 = 90
!If Err 0 Gosub ERR_ESCAPE
If SORT = 1 Let POS_ = 17
If SORT = 2 Let POS_ = 21
K1$ = "# " \ SP = 9999
If SORT = 1 Let K1$[1,2] = "#}"
I_CTR = 0
L_2000: Rem "===================================== main invoice loop here!
L_2005: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If SORT = 2 If K1$[1,1] <> "#" Goto L_9100
If K1$[1,1] = "''" Goto L_2005
If K1$[POS_,POS_] = "D" Goto L_5400
Mat Read #2,R1,0;H0
If SORT = 2 If MULTIS Gosub L_3500
If SP <> H0[11] And SP <> 9999 Gosub L_4800
SP = H0[11] \ Gosub L_10000
Mat Read #2,R1,446;P0$
Mat Read #2,R1,78;H4
Mat Read #2,R1,104;H5
Mat Read #2,R1,278;SLSM
Mat Read #2,R1,318;SCOM
Mat Read #2,R1,348;SMER
Mat Read #2,R1,378;SCST
Mat Read #2,R1,408;H6;
Mat Read #2,R1,512;OREF;
W0 = H4[2]
Mat Read #3,H0[2],8;S1$
Mat Read #4,H0[3],8;T2;
I_CTR = I_CTR + 1
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
Gosub L_6600
T2[4] = T2[4] + T2[6]
D1$ = H0[8] Using "&&&&&&" \ Call FormatDate(D1$,D1$,E)
TOTCOM = 0
For X = 0 To 4 \ TOTCOM = TOTCOM + SCOM[X] \ Next X
Gosub L_3000 \ Gosub L_3200
If SUMM Goto L_2140
Gosub L_5800
If LNDETL Gosub L_5000 Else Gosub L_5700
L_2140: Gosub L_2200
If SUMM Goto L_2155
If LNDETL Gosub L_4500
If LNDETL Gosub L_5200
L_2155: Gosub L_2500
Goto L_2000
L_2200: Rem "=========================== verif totals calc
TOT = 0 \ If SORT = 2 If MULTIS Gosub L_2400
For J = 0 To 5
  If TOT = 1 Goto L_2220
  If J = 1 Let T11[J] = T11[J] + (H5[13] - H5[14])
  If J = 2 Let T11[J] = T11[J] + TOTCOM
L_2220: If J = 2 Goto L_2240
  T9[J] = T9[J] + T2[J]
  If TOT = 0 Let T10[J] = T10[J] + T2[J]
L_2240: Next J
T9[2] = T9[2] + T2[7]
If TOT = 0 Let T10[2] = T10[2] + T2[7]
If TOT = 0 Let T10[6] = T10[6] + (H5[13] - H5[14])
If TOT = 0 Let T10[7] = T10[7] + TOTCOM
If T2[10] <= 0 Goto L_2310
If C0[2] = 0 Goto L_2310
If T2[10] > 3 Goto L_2310
REC = H5[0] \ Gosub L_6700
If C0[2] Let T6[C0[2] - 1] = T6[C0[2] - 1] + C8[0]
T6[4] = T6[4] + T2[0]
T5[C0[2] - 1] = T5[C0[2] - 1] + T2[0]
If T2[12] >= T2[0] Goto L_2300
T4[C0[2] - 1] = T4[C0[2] - 1] + (T2[0] - (C8[0] + C8[1]))
L_2300: REC = H5[0] \ Gosub L_6750
L_2310: Rem
INVNET = FNR((H5[13] - H5[14]) - (H5[13] * CFIN[8] / 100))
If TOT = 0 Let TOTNET = TOTNET + INVNET
If TOT = 0 Let TOTFCST = TOTFCST + T2[20]
Return 
L_2360: Rem ENT'D BY TOTALS
REC = H5[0] \ Gosub L_6700
For J = 0 To 5
  If J = 2 Let T16[J] = T16[J] + T2[7] \ Goto L_2380
  T16[J] = T16[J] + T2[J]
L_2380: Next J
T16[6] = T16[6] + H5[14]
T16[7] = T16[7] + 1
REC = H5[0] \ Gosub L_6750
Return 
L_2400: Rem MULTI-REP TOTALS
TOT = 0 \ If SLMN = -1 Return 
T10[0] = T10[0] + SMER[SLMN];T10[1] = T10[1] + SMER[SLMN]
T11[1] = T11[1] + (SMER[SLMN] - SCST[SLMN])
T11[2] = T11[2] + SCOM[SLMN]
T10[6] = T10[6] + (SMER[SLMN] - SCST[SLMN]);T10[7] = T10[7] + SCOM[SLMN]
TOTCOST = TOTCOST + SCST[SLMN]
TOT = 1
Return 
L_2500: Rem "=========================================== add to wh totals
If SORT <> 2 Or Not(MULTIS) Goto L_2530
Z1$ = " ",Z1$;Z1$ = "''",K1$[5,16]
Search #9,2,1;Z1$,J,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2590
Search #9,4,1;Z1$,J,E \ If E Gosub ERR_SEARCH
L_2530: For J = 0 To 5
  If J = 1 Let COMM[0,J] = COMM[0,J] + (H5[13] - H5[14])
  If J = 1 Let COMM[W0,J] = COMM[W0,J] + (H5[13] - H5[14])
  If J = 2 Let COMM[0,J] = COMM[0,J] + TOTCOM
  If J = 2 Let COMM[W0,J] = COMM[W0,J] + TOTCOM
  If J = 2 Let T8[0,J] = T8[0,J] + T2[7]
  If J = 2 Let T8[W0,J] = T8[W0,J] + T2[7] \ Goto L_2570
  T8[0,J] = T8[0,J] + T2[J] \ T8[W0,J] = T8[W0,J] + T2[J]
L_2570: Next J
T8[0,6] = T8[0,6] + (H5[13] - H5[14]) \ T8[W0,6] = T8[W0,6] + (H5[13] - H5[14])
Gosub L_2360
L_2590: Return 
L_3000: Rem "======================================== read customer name
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E \ If E > 2 Gosub ERR_SEARCH
If E If DELETED_CM = 1 ! deleted c/m, okay if cust# has been deleted
  C1$ = " ",C1$ \ C1$ = "DELETED CUSTOMER"
  Return 
End If 
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,544;CFIN;
Return 
L_3200: Rem "======================================== read bill to
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E \ If E > 1 Gosub ERR_SEARCH
If E If H0[1] = H0[4] Gosub ERR_SEARCH
If E If H0[1] <> H0[4] Let H0[1] = H0[4] \ Goto L_3200
Mat Read #6,R6,30;C2$;
Return 
L_3500: Rem MULTI SLSM RTN
If SORT <> 2 If Not(MULTIS) Return 
SLMN = -1;X2 = K1$[2,4]
Mat Read #2,R1,278;SLSM
For X = 0 To 4 \ If SLSM[X] = 0 Goto L_3540
  If X2 = SLSM[X] Let SLMN = X
L_3540: Next X
If SLMN = -1 Return 
If SLSM[SLMN] <> 0 Let H0[11] = SLSM[SLMN]
Return 
L_3600: Rem PRINT SLSM SUMMARY
If SLMN = -1 Return 1
Print #0; Using "-----#.##"; Tab 46;SMER[SLMN];
Print #0; Using "------#.## "; Tab 83;SMER[SLMN];SCST[SLMN];SMER[SLMN] - SCST[SLMN];
If SMER[SLMN] Print #0; Using " ---.-"; Tab 115;((SMER[SLMN] - SCST[SLMN]) / SMER[SLMN]) * 100;
Print #0; Using "-----#.##"; Tab 122;SCOM[SLMN];
Return 
L_3700: Rem MULTI-REP INV TOTALS
If SLMN = -1 Return 1
If SORT <> 2 Return 1
Print #0; Using " CREDIT ###### TOTALS: "; Tab 10;H0[7];
X$ = "-----#.##" \ If J1 + 6 >= J9 Let J1 = 99 \ Gosub L_5800
If SMER[SLMN] Print #0; Using X$; Tab 105;"SUBTOTAL"; Tab 122;SMER[SLMN] \ J1 = J1 + 1
Print #0; Using X$; Tab 105;"C/M TOTAL"; Tab 122;SMER[SLMN] \ J1 = J1 + 1
Print #0; Using X$; Tab 105;"GROSS PROFIT"; Tab 122;SMER[SLMN] - SCST[SLMN] \ J1 = J1 + 1
If SMER[SLMN] Print #0; Using X$; Tab 105;"GROSS PROFIT %"; Tab 122;(SMER[SLMN] - SCST[SLMN]) / SMER[SLMN] * 100 \ J1 = J1 + 1
Gosub L_5800
Print #0; Using "COMMISSION RATE: ###.##% "; Tab 86;SLSM[SLMN + 5];
Print #0; Using "AMOUNT: -----#.##"; Tab 114;0 - SCOM[SLMN];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_4000: Rem "=========================================== verif totals
If SORT = 2 Goto L_4085
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 10;"VERIFIFICATION TOTALS";
Print #0; Tab 45;"C/M COUNT"; Tab 56;"MDSE AMT"; Tab 69;"DISC";
Print #0; Tab 75;"MISC/HAND"; Tab 86;"TAX AMT"; Tab 95;"FREIGHT";
Print #0; Tab 110;"GP"; Tab 122;"C/M TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Using "#####"; Tab 47;I_CTR;
Print #0; Using "-----###.##"; Tab 53;T9[1];
Print #0; Using "-----#.##"; Tab 64;T9[3];
Print #0; Using "-----#.##"; Tab 70;T9[4];
Print #0; Using "-----#.##"; Tab 84;T9[2];
Print #0; Using "-----#.##"; Tab 93;T9[5];
Print #0; Using "-----#.##"; Tab 105;T11[1];
Print #0; Using "-----###.##"; Tab 120;T9[0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
L_4085: If PASS = 0 Gosub L_6200
If P1 = 1 Gosub L_7000 \ F9 = 0 \ J1 = 90
J1 = 75 \ Gosub L_5800
For J = 0 To 20 \ T9[J] = 0 \ Next J
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 38;"GP";
If SORT = 2 Print #0; Tab 48;"COMMISSION";
Print #0; Tab 62;"MDSE AMT"; Tab 77;"DISC"; Tab 84;"MISC/HAND";
Print #0; Tab 96;"TAX AMT"; Tab 109;"FREIGHT"; Tab 122;"C/M TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
For W0 = 1 To D9[5]
  For J = 0 To 6
    If T8[W0,J] Gosub L_4165
  Next J
Next W0
W0 = 0
L_4165: Rem "==================================== grand tot's  (mtd & ytd)
Print #0;" "; \ J1 = J1 + 1 \ Gosub L_5800
If W0 Print #0;D9$;":";W0;
If Not(W0) Print #0;" ALL ";D9$;"S:";
Print #0; Tab 15;"VERIF. TOTALS";
Print #0; Using "-----###.##"; Tab 29;COMM[W0,1];
If SORT = 2 Print #0; Using "-----###.##"; Tab 47;COMM[W0,2];
Print #0; Using "--------#.##"; Tab 59;T8[W0,1];
Print #0; Using "------#.##"; Tab 72;T8[W0,3];
Print #0; Using "------#.##"; Tab 83;T8[W0,4];
Print #0; Using "------#.##"; Tab 95;T8[W0,2];
Print #0; Using "-------#.##"; Tab 106;T8[W0,5];
Print #0; Using "-------#.##"; Tab 120;T8[W0,0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Mat Read #8,W0,42;T7;
For X1 = 0 To 6
  T7[X1] = T7[X1] - T8[W0,X1]
  T7[X1 + 7] = T7[X1 + 7] - T8[W0,X1]
Next X1
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 15;"MTD TOTALS";
Print #0; Using "----------#.##"; Tab 26;T7[6];
Print #0; Using "----------#.##"; Tab 57;T7[1];
Print #0; Using "-------#.##"; Tab 71;T7[3];
Print #0; Using "-------#.##"; Tab 82;T7[4];
Print #0; Using "-------#.##"; Tab 94;T7[2];
Print #0; Using "-------#.##"; Tab 106;T7[5];
Print #0; Using "----------#.##"; Tab 117;T7[0];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Print #0; Tab 15;"YTD TOTALS";
Print #0; Using "----------#.##"; Tab 26;T7[13];
Print #0; Using "----------#.##"; Tab 57;T7[8];
Print #0; Using "-------#.##"; Tab 71;T7[10];
Print #0; Using "-------#.##"; Tab 82;T7[11];
Print #0; Using "-------#.##"; Tab 94;T7[9];
If T7[12] > 0 Print #0; Using "########.##"; Tab 106;T7[12];
If T7[12] <= 0 Print #0; Using "-------#.##"; Tab 106;T7[12];
Print #0; Using "----------#.##"; Tab 117;T7[7];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
J = 7 \ If W0 Return 
! Signal 3,20
If Err 0 Gosub ERR_TRAP
Return 
L_4400: Rem PRINT SERIAL NO'S
If L3 <> 0 Or L7[4] = 0 Return 
If L3[1] = 0 Return 
SNO = 0 \ If P1$[8,8] <> "Y" Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[7] Using "######";SNK$[7,9] = L3[2] Using "###"
L_4420: Search #14,3,1;SNK$,R14,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[7] Or LN <> L3[2] Goto L_4480
Mat Read #14,R14,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ J1 = J1 + 1 \ Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Return 
L_4500: Rem "=========================================== detail line loop
T9[6] = 0
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4515: Search #5,3,1;J2$,R5,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
If SORT = 2 If MULTIS If L4[1] <> SP Goto L_4515
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L6$; \ Mat Read #5,R5,140;L1$;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,260;S3; \ Mat Read #5,R5,256;OLS2;
Mat Read #5,R5,404;OLM; \ Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
PUNIT$ = "   ";CUNIT$ = "    ";SUNIT$ = "    ";P1$ = " ",P1$
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1]
OLM[3] = OLM[3] - S3[15]
If Not(L3)
  Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2;
  Mat Read #7,L4,0;P1$; \ Mat Read #7,L4,256;A;
  Mat Read #7,L4,156;PRODB;
End If 
Gosub L_30000
COSTCHG = 0 \ If Not(L3) Gosub L_10500
For X = 0 To 3 \ SUNIT[X] = 0 \ Next X \ CUNIT = 0;PUNIT = 0
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let OLS2[0] = 3
If OLS2[0] = 3 Or L3[2] >= 900 Goto L_4700
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_4700
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000
  SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
PUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
Gosub L_20000
CUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000 \ L6[1] = AMOUNT
If UN[0] > 0 Mat Read #12,UN[0],10;SUNIT$;
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] > 0 Mat Read #12,UN[1],10;PUNIT$;
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UN[2] > 0 Mat Read #12,UN[2],10;CUNIT$;
If UN[2] = -1 Let CUNIT$ = "CWT "
If UN[2] = -2 Let CUNIT$ = "LOT "
If UN[2] = -3 Let CUNIT$ = "LB  "
L_4700: Gosub L_5800
If L3[2] >= 900 Let L5[3] = 0 - L5[3]
If LNDETL Gosub L_5500 Else Gosub L_6400
T9[9] = FNR(L5[3] - S3[12])
T9[6] = T9[6] + T9[9]
T9[10] = T9[10] + T9[9]
Gosub L_4400
Goto L_4515
L_4800: Rem "======================================= salesrep sub-totals
If SORT <> 2 Return 
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 10;"** ";
Print #0; Using "SALESPERSON ### TOTALS: "; Tab 10;SP \ J1 = J1 + 1
Print #0; Tab 25;"GP"; Tab 43;"CP"; Tab 55;"COMMISSION";
Print #0; Tab 68;"MDSE AMT"; Tab 81;"DISC"; Tab 87;"MISC/HAND";
Print #0; Tab 98;"TAX AMT"; Tab 106;"FREIGHT"; Tab 115;"F COST";
Print #0; Tab 122;"C/M TOTAL" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Using "-----###.##"; Tab 17;T10[6];
Print #0; Using "-----###.##"; Tab 35;TOTNET;
Print #0; Using "-----###.##"; Tab 54;T10[7];
Print #0; Using "-----###.##"; Tab 65;T10[1];
Print #0; Using "-----#.##"; Tab 76;T10[3];
Print #0; Using "-----#.##"; Tab 87;T10[4];
Print #0; Using "-----#.##"; Tab 95;T10[2];
Print #0; Using "----#.##"; Tab 105;T10[5];
Print #0; Using "----#.##"; Tab 113;TOTFCST;
Print #0; Using "-----###.##"; Tab 120;T10[0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 1;"MTD TOTALS ";
Print #0; Using "-----###.##"; Tab 17;SLSMTDGP - T10[6]; Tab 54;S5[2] - T10[7]; Tab 65;SLSMTDSL - (T10[1] - T10[3]);
For J = 0 To 7 \ T10[J] = 0 \ Next J
J1 = 100
TOTCOST = 0;TOTNET = 0;TOTFCST = 0
Print #0;" "
Return 
L_5000: Rem "======================================= invoice header line
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Using "######";H0[7];
Print #0; Using "########"; Tab 7;OREF[1];
Print #0; Using "##"; Tab 16;H5[7]; Tab 21;D1$;
Print #0; Using "######"; Tab 30;H0[4];
Print #0; Tab 37;C1$[1,11]; Tab 49;P0$;
Print #0; Tab 69;S1$[1,20];
Print #0; Using "###"; Tab 90;H5[0];
Print #0; Using "### "; Tab 94;H0[11];S2$[1,20];
Print #0; Using "###.##%"; Tab 123;CFIN[8];
Print #0;""
Print #0;"" \ J1 = J1 + 2 \ Gosub L_5800
If Not(LNDETL) Goto L_5140
Print #0; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 19;"DESCRIPTION";
Print #0; Tab 41;"QTY ORD"; Tab 49;"QTY SHIP"; Tab 59;"U/M";
Print #0; Tab 66;"STK"; Tab 78;"PRICE"; Tab 99;"COST"; Tab 106;"C";
Print #0; Tab 111;"EXT COST"; Tab 122;"EXT PRICE"
J1 = J1 + 1 \ Gosub L_5800
Goto L_5190
L_5140: Rem 1 LINE SUMMARY
Print #0; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 18;"DESCRIPTION";
Print #0; Tab 51;"QTY SHP";
Print #0; Tab 62;"EXT PRICE"; Tab 74;"EXT COST";
Print #0; Tab 86;"G PROFIT"; Tab 97;"PCT";
Print #0; Tab 104;"C PROFIT"; Tab 115;"COM%";
Print #0; Tab 124;"COMM $"
J1 = J1 + 1 \ Gosub L_5800
L_5190: Return 
L_5200: Rem "=========================================== invoice totals
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If SORT = 2 If MULTIS Gosub L_3700 \ Goto L_5290
If J1 + 5 >= J9 Let J1 = 99 \ Gosub L_5800
Print #0; Using "CREDIT  ###### TOTALS: ";"*** ";H0[7];
X$ = "-----#.##"
If H0[12] = 1 If T2[10] Gosub L_5300
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If MULTIS Gosub L_6000
Print #0; Tab 25;"GP"; Tab 32;"PCT"; Tab 43;"CP";
If Not(MULTIS) Print #0; Tab 49;"RATE"; Tab 55;"COMMISSION";
L_5214: Print #0; Tab 68;"MDSE AMT"; Tab 81;"DISC"; Tab 87;"MISC/HAND";
Print #0; Tab 97;"TAX AMT"; Tab 105;"FREIGHT"; Tab 113;"FRT COST";
Print #0; Tab 122;"C/M TOTAL" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Using X$; Tab 19;(H5[13] - H5[14]);
T0 = 0 \ If H5[13] Let T0 = FNR((H5[13] - H5[14]) / H5[13] * 100)
Print #0; Using "---#.##"; Tab 28;T0;
Print #0; Using X$; Tab 37;INVNET;
If MULTIS Goto L_5260
Print #0; Using "###.##"; Tab 47;SLSM[5];
Print #0; Using X$; Tab 56;0 - SCOM[0];
L_5260: Print #0; Using X$; Tab 67;T2[1];
Print #0; Using X$; Tab 76;T2[3];
Print #0; Using X$; Tab 87;T2[4];
Print #0; Using X$[2]; Tab 96;T2[7];
Print #0; Using X$[2]; Tab 104;T2[5];
Print #0; Using X$[2]; Tab 113;T2[20];
Print #0; Using X$; Tab 122;T2[0]
Print #0;"" \ J1 = J1 + 2
Print #0;"" \ Print #0;LINES$ \ J1 = J1 + 2 \ Gosub L_5800
L_5290: Return 
L_5300: Rem "================================================= cash
Print #0; Using "PAID BY: # "; Tab 25;T2[10];
C2$ = "CASH" \ If T2[10] = 2 Let C2$ = "CHECK ########"
If T2[10] <> 3 Goto L_5340
L_5340: Print #0; Tab 36;C2$[1,15];
Print #0; Using " PAID:-------#.##";T2[12];
Return 
L_5400: Rem ===================================== print deleted items
If SUMM Goto L_2000
Mat Read #13,R1;DL
Mat Read #13,R1,80;DL1$;
H0[11] = DL[6]
H0[4] = DL[1]
DELETED_CM = 1
Gosub L_3000
DELETED_CM = 0
If SP <> H0[11] If SP <> 9999 Gosub L_4800
SP = H0[11] \ Gosub L_10000
D1$ = DL[4] Using "&&&&&&" \ Call FormatDate(D1$,D1$,E)
Gosub L_5800
Print #0; Using "########";DL3;
Print #0; Using "######"; Tab 10;DL[3];
Print #0; Tab 21;D1$;
Print #0; Using "######"; Tab 30;DL[1];
Print #0; Tab 37;C1$[1,20];
Print #0; Tab 60;"* * D E L E T E D * * "; \ If Not(LNDETL) Print #0; Tab 80;"WHY: ";DL1$ \ J1 = J1 + 1 \ Goto L_5480
Print #0; Using "###"; Tab 90;DL[11];
Print #0; Using "### "; Tab 94;DL[6];S2$[1,30];
Print #0;"" \ Print #0;"" \ Print #0;LINES$ \ J1 = J1 + 3 \ Gosub L_5800
L_5480: Gosub L_5800
Goto L_2000
L_5500: Rem "============================================= invoice detail line
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #0; Tab 2;J2$[10,10]; \ Goto L_5520
Print #0; Using "###"; Tab 1;L3[2];
L_5520: Print #0; Tab 5;L1$[1,12]; Tab 19;L6$[1,20];
If OLS2[0] = 3 Print #0;L6$[21,30];
If OLS2[0] = 3 Goto L_5600
Print #0; Using "--------.##"; Tab 39;SUNIT[1];SUNIT[3];
Print #0; Tab 61;SUNIT$;
If L3[1] = 1 Print #0; Tab 66;"YES";
If L3[1] = 0 Print #0; Tab 67;"NO";
Print #0; Using PMASK$; Tab 74;PUNIT;"/";PUNIT$;
Print #0; Using PMASK$; Tab 91;CUNIT;"/";CUNIT$;
If COSTCHG Print #0; Tab 106;"*";
Print #0; Using "-------#.##"; Tab 108;S3[12];
Print #0; Using "-------#.##"; Tab 120;L5[3];
L_5600: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 5;L1$[14,16]; Tab 19;L6$[31,50];
If OLS2[0] = 3 Print #0;L6$[51,60];
If OLS2[0] = 3 Goto L_5690
If P60$[42,42] = "Y"
  Print #0;"" \ J1 = J1 + 1
  Print #0; Using "TAX CODE:###";L6[5]; \ Print #0; Using "------.##";" TAX AMOUNT: ";LTAX1;
  Print #0; Using "(###.##%)";LTAX2;
End If 
Print #0; Using "G PROFIT -----#.##  "; Tab 50;L5[3] - S3[12];
T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
Print #0; Using "(---#.##%)";T0;
LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
Print #0; Using "C PROFIT -----#.##"; Tab 81;LDCOST;
Print #0; Using "###.##"; Tab 100;"COM% ";OLM[5];
Print #0; Using "-------#.##"; Tab 112;"COMM$ ";0 - OLM[6];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If S3[0] Print #0; Using "CUTTING CHARGE ####.#####"; Tab 50;S3[0];
If S3[1] Print #0; Using "CUTTING COST ####.#####"; Tab 80;S3[1];
L_5690: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_5700: Rem PRINT SUMMARY LINE
Print #0; Using "########"; Tab 1;OREF[1];
Print #0; Using "######"; Tab 10;H0[7]; Tab 17;H0[4]; Tab 24;C1$[1,20];
If SORT = 2 If MULTIS Gosub L_3600 \ Goto L_5765
Print #0; Using "-----#.##"; Tab 46;T2[1];
Print #0; Using "----#.## "; Tab 56;T2[7];T2[5];T2[4];
Print #0; Using "------#.## "; Tab 83;T2[0];
If SORT = 2 If Not(PRTSCOST) Goto L_5760
Print #0; Using "------#.## "; Tab 94;H5[14];H5[13] - H5[14];
If H5[13] Print #0; Using " ---.-"; Tab 115;(H5[13] - H5[14]) / H5[13] * 100;
L_5760: Print #0; Using "-----#.##"; Tab 122;SCOM[0]
L_5765: Rem PRINT #0;" "
J1 = J1 + 1
Return 
L_5800: Rem "=========================================== headings
If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\12\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 242A - ";Msc$(3);
Print #0; Tab 40;"D A I L Y   C R E D I T   V E R I F I C A T I O N";
If W1 Print #0; Tab 100;D9$;":";W1
If Not(W1) Print #0; Tab 100;"ALL ";D9$;"S"
Print #0; Tab 5;N1$;
If P1 = 1 Print #0; Tab 52;"C A S H   C U S T O M E R S";
If P1 = 2 Print #0; Tab 50;"C R E D I T   C U S T O M E R S";
If DIV Print #0; Tab 100;"DIVISION:";DIV Else Print #0; Tab 100;"ALL DIVISIONS"
If LNDETL If Not(F9) Goto L_5900
If Not(LNDETL) If Not(F9) Goto L_5950
If F9 = 99 Goto L_6250
Print #0;""
Print #0; Tab 1;"ENTD BY"; Tab 11;"CASH TND/CHNG"; Tab 26;"INV$/SHORT";
Print #0; Tab 41;"CHKS TND/CHNG"; Tab 56;"INV$/SHORT";
Print #0; Tab 74;"CRED CARD"; Tab 85;"INV$/SHORT"; Tab 114;"DRAWER TOTAL"
Print #0;""
Return 
L_5900: Rem "master heading
Print #0;""
Print #0; Tab 1;"C/M #"; Tab 8;"INV #"; Tab 15;"ORD";
Print #0; Tab 25;"DATE"; Tab 30;"CUST #"; Tab 37;"CUSTOMER NAME";
Print #0; Tab 58;"PO #"; Tab 69;"SHIPPED TO"; Tab 90;"TKN";
Print #0; Tab 95;"SLSM"; Tab 125;"COMMN"
Print #0; Tab 15;"TYPE"; Tab 90;"BY"; Tab 126;"S/C"
Print #0;""
Return 
L_5950: Rem SUMMARY HEADING
Print #0;""
Print #0; Tab 3;"C/M"; Tab 12;"INV"; Tab 18;"C U S T O M E R"; Tab 50;"AMOUNT";
Print #0; Tab 62;"TAX"; Tab 67;"FREIGHT"; Tab 78;"MISC"; Tab 87;" TOTAL";
If SORT = 2 If Not(PRTSCOST) Goto L_5968
Print #0; Tab 99;"TOTAL"; Tab 108;"GROSS"; Tab 116;"PROFIT";
L_5968: Print #0; Tab 127;"COMM"
Print #0; Tab 4;"#"; Tab 13;"#"; Tab 18;"CODE"; Tab 24;"NAME"; Tab 87;"AMOUNT";
If SORT = 2 If Not(PRTSCOST) Goto L_5980
Print #0; Tab 100;"COST"; Tab 108;"PROFIT"; Tab 119;"%";
L_5980: Print #0; Tab 128;"AMT"
Return 
L_6000: Rem "=========================================== salesman commissions
If Not(SLSM[0] + SLSM[1] + SLSM[2] + SLSM[3] + SLSM[4]) Goto L_6110
Print #0; Tab 64;" MERCH $    COST $" \ J1 = J1 + 1
For X5 = 0 To 4
  If Not(SLSM[X5]) Goto L_6100
  K11$ = " ",K11$ \ K11$ = SLSM[X5] Using "###"
  Search #11,2,1;K11$,V1,E
  If E Gosub ERR_SEARCH
  Mat Read #11,V1,0;S$;
  Print #0; Using "SLSM ### "; Tab 30;SLSM[X5];S$[1,25];
  Print #0; Using "-----#.## "; Tab 64;SMER[X5];SCST[X5];
  Print #0; Using " COMMIS  ###.##%";SLSM[X5 + 5];
  Print #0; Using " COMMIS -----#.##";0 - SCOM[X5]
  J1 = J1 + 1 \ Gosub L_5800
L_6100: Next X5
L_6110: Return 
L_6200: Rem ENT'D BY TOTALS
If Not(ENTD) Return 
J1 = 90 \ F9 = 99 \ Gosub L_5800
For J = 0 To 999
  REC = J \ Gosub L_6700
  If Not(T16[7]) Goto L_6235
  Gosub L_6300
L_6235: Next J
F9 = 0
Return 
L_6250: Rem HEADING
Print #0;""
Print #0; Tab 5;"ENTERED BY TOTALS";
Print #0; Tab 45;"C/M COUNT"; Tab 56;"MDSE AMT"; Tab 69;"DISC";
Print #0; Tab 75;"MISC/HAND"; Tab 86;"TAX AMT"; Tab 95;"FREIGHT";
Print #0; Tab 104;"C/M TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_6300: Rem PRINT LINE
Print #0; Using "###"; Tab 5;J;
Print #0; Using "#####"; Tab 47;T16[7];
Print #0; Using "----###.##"; Tab 53;T16[1];
Print #0; Using "-----#.##"; Tab 64;T16[3];
Print #0; Using "-----#.##"; Tab 73;T16[4];
Print #0; Using "-----#.##"; Tab 84;T16[2];
Print #0; Using "-----#.##"; Tab 93;T16[5];
Print #0; Using "-----###.##"; Tab 102;T16[0];
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6400: Rem ORDER LINE SUMMARY (1 LINER)
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #0; Tab 2;J2$[10,10]; \ Goto L_6420
Print #0; Using "###"; Tab 1;L3[2];
L_6420: Print #0; Tab 5;L1$[1,12]; Tab 18;L6$[1,30];
If OLS2[0] = 3 Goto L_6485
Print #0; Using "--------.##"; Tab 49;SUNIT[3];
Print #0; Using "-------#.##"; Tab 60;L5[3];
Print #0; Using "-------#.##"; Tab 71;S3[12];
If COSTCHG Print #0; Tab 82;"*";
Print #0; Using "-------#.##"; Tab 83;FNR(L5[3] - S3[12]);
T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
Print #0; Using "---#.##"; Tab 94;T0;
LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
Print #0; Using "-------#.##"; Tab 101;LDCOST;
Print #0; Using "###.##"; Tab 113;OLM[5];
Print #0; Using "-------#.##"; Tab 119;OLM[6];
L_6485: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_6600: Rem "================================================ cash sale logic
For X2 = 0 To 4 \ C0[X2] = 0 \ Next X2
For X2 = 0 To 2 \ C8[X2] = 0 \ Next X2
K6$ = " ",K6$
K6$ = H0[7] Using "######"
Search #10,2,1;K6$,R6,E \ If E > 1 Gosub ERR_SEARCH
If E Return 
Mat Read #10,R6,0;C0;
Mat Read #10,R6,20;C8;
C0[2] = Int(C0[2])
C0[3] = Int(C0[3])
Return 
L_6700: Rem READ TEMP WORKFILE
Try
	Mat Read #16,REC,0;T4;
	Mat Read #16,REC,30;T5;
	Mat Read #16,REC,60;T6;
	Mat Read #16,REC,90;T16;
Else
	clear t4[]
	Clear t5[]
	clear t6[]
	clear t16[]
End try
Return 
L_6750: Rem WRITE TEMP WORKFILE
Mat Write #16,REC,0;T4;
Mat Write #16,REC,30;T5;
Mat Write #16,REC,60;T6;
Mat Write #16,REC,90;T16;
Return 
L_6800: Rem BUILD TEMP WORK FILE FOR ENTERED BY TOTALS PAGE
TFLE$ = " ",TFLE$
TFLE$ = "[1000:72]6/REGTEMP"
TFLE$ = TFLE$,Spc(6) Using "&&&&"
TFLE$ = TFLE$,"!"
Build #16,TFLE$
Close #16
TFLE$ = TFLE$[10]
tmp$="chmod go+rw files/"+LCase$(TFLE$[1,13])+"*"
System tmp$
Open #16,TFLE$
Return 
L_7000: Rem "================================================= cash totals
F9 = 9 \ J1 = 90
Gosub L_5800
For I = 1 To 999
  REC = I \ Gosub L_6700
  If T6[4] Gosub L_7030
Next I
Goto L_7200
L_7030: Rem PRINT IT
Print #0; Using "###"; Tab 1;I;
Print #0; Using "-----,--#.##"; Tab 11;T6[0];T5[0]; Tab 41;T6[1];
Print #0; Using "-----,--#.##";T5[1]; Tab 71;T6[2];T5[2];
T6[3] = FNR(T6[0] + T6[1] + T6[2]) \ T5[3] = FNR(T5[0] + T5[1] + T5[2])
Print #0; Using "---,---,--#.##"; Tab 101;T6[3];T6[4]
Gosub L_7300
Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";T4[1]; Tab 71;T9[13];T4[2];
T4[3] = FNR(T4[0] + T4[1] + T4[2]) \ Gosub L_7300
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[3];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
For X = 0 To 4 \ TTOT[X + 10] = TTOT[X + 10] + T6[X]
  TTOT[X + 5] = TTOT[X + 5] + T5[X] \ TTOT[X] = TTOT[X] + T4[X]
  T6[X] = 0
Next X
REC = I \ Gosub L_6750
Return 
L_7200: Rem TOTALS
If Not(TTOT[8]) Goto L_7280
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 1;"TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;TTOT[10];TTOT[5]; Tab 41;TTOT[11];
Print #0; Using "-----,--#.##";TTOT[6]; Tab 71;TTOT[12];TTOT[7];
Print #0; Using "---,---,--#.##"; Tab 101;TTOT[13];TTOT[14];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Gosub L_7340
Print #0; Using "-----,--#.##"; Tab 11;T9[11];TTOT[0]; Tab 41;T9[12];
Print #0; Using "-----,--#.##";TTOT[1]; Tab 71;T9[13];TTOT[2];
Print #0; Using "---,---,--#.##"; Tab 101;T9[14];TTOT[3];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Print #0;"PROOF TOTAL";
Print #0; Using "-----,--#.##"; Tab 11;(TTOT[10] - T9[11]); Tab 41;(TTOT[11] - T9[12]);
Print #0; Using "-----,--#.##"; Tab 71;(TTOT[12] - T9[13]);
Print #0; Using "---,---,--#.##"; Tab 101;(TTOT[13] - T9[14]);TTOT[3];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
L_7280: Gosub L_7400
Return 
L_7300: Rem CHG PAID
T9[11] = FNR(T6[0] - (T5[0] - T4[0]))
T9[12] = FNR(T6[1] - (T5[1] - T4[1]))
T9[13] = FNR(T6[2] - (T5[2] - T4[2]))
T9[14] = FNR(T6[3] - (T5[3] - T4[3]))
Return 
L_7340: Rem TOT CHG PAID
T9[11] = FNR(TTOT[10] - (TTOT[5] - TTOT[0]))
T9[12] = FNR(TTOT[11] - (TTOT[6] - TTOT[1]))
T9[13] = FNR(TTOT[12] - (TTOT[7] - TTOT[2]))
T9[14] = FNR(TTOT[13] - (TTOT[8] - TTOT[3]))
Return 
L_7400: Rem DRAW AUD
For X = Len(F1$) To 1 Step -1
  If F1$[X,X] = "" Goto L_7420
  If F1$[X,X] <> " " Goto L_7430
L_7420: Next X
If X <= 1 Goto L_7480
L_7430: T9[1] = (TTOT[10] - T9[11]) \ T9[2] = (TTOT[11] - T9[12])
T9[3] = (TTOT[12] - T9[13]) \ T9[4] = (TTOT[13] - T9[14])
T9[0] = TTOT[3]
If W1 Let J2$ = (100 + W1) Using "###"
If W1 Goto L_7500
For X1 = 1 To D9[5]
  J2$ = (100 + X1) Using "###"
  Gosub L_7500
Next X1
If F Goto L_7655
L_7480: If Err 0 Gosub ERR_TRAP
Return 
L_7500: Rem TRY FILE
F1$[X + 1] = J2$[2]
!If Err 0 Rem
Try Close #21  ELSE REM
If Err 0 Goto L_7480
Open #21,F1$
If Err 0 Gosub ERR_TRAP
Print #0;"  WHSE: ";J2$[2];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Gosub L_5800
For F = 1 To Chf(21) - 1
  Read #21,F;H4[0],H4[1],H4[2],X2,TT2[11],T2[12],J2$;
  X$ = X2 Using "&&&&&&" \ Call FormatDate(X$,X$,E)
  Print #0; Using "### "; Tab 1;H4[1];
  If H4[2] > 1 If H4[2] < 4 Goto L_7580
  Print #0; Using "-----,--#.##"; Tab 11;T2[12];
L_7580: Print #0; Tab 28;X$;
  If H4[2] = 2 Print #0; Using "-----,--#.##"; Tab 41;T2[12];
  J3$ = " ",J3$ \ J3$ = "OTHER TYPE" \ If H4[2] = 1 Let J3$ = "CASH"
  If H4[2] = 2 Let J3$ = TT2[11] Using "CHECK #########"
  If H4[2] <> 3 Goto L_7602
  J3$ = "CREDIT CARD" \ If TT2[11] = 1 Let J3$ = "MASTER CARD"
  If TT2[11] = 2 Let J3$ = "VISA CARD"
  If TT2[11] = 3 Let J3$ = "AMER. EXPRESS"
L_7602: Print #0; Tab 56;J3$;
  If H4[2] = 3 Print #0; Using "-----,--#.##"; Tab 71;T2[12];
  Print #0; Using "---,---,--#.##"; Tab 101;T2[12]; Tab 117;J2$[1,15];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
  Gosub L_5800
  If H4[2] = 1 Let T9[1] = T9[1] + T2[12]
  If H4[2] = 2 Let T9[2] = T9[2] + T2[12]
  If H4[2] = 3 Let T9[3] = T9[3] + T2[12]
  If H4[2] = 4 Let T9[0] = T9[0] + T2[12]
  T9[4] = T9[4] + T2[12]
Next F
If Not(W1) Return 
L_7655: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0;"FINAL PROOF";
Print #0; Using "-----,--#.##"; Tab 11;T9[1]; Tab 41;T9[2];
Print #0; Using "-----,--#.##"; Tab 71;T9[3];
Print #0; Using "---,---,--#.##"; Tab 101;T9[4];T9[0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 

L_10000: Rem SLSM
K11$ = " ",K11$
K11$ = H0[11] Using "###"
Search #11,2,1;K11$,R11,E \ If E > 1 Gosub ERR_SEARCH
If E
  S2$ = " ",S2$
  S2$[1,30] = "***** SALESMAN NOT FOUND *****"
  For X = 0 To 3 \ S5[X] = 0 \ Next X
  For X = 0 To 19
    For J = 0 To 5
      CAT[X,J] = 0
    Next J
  Next X
Else 
  Mat Read #11,R11,0;S2$;
  Mat Read #11,R11,118;S5;
  Mat Read #11,R11,142;CAT;
End If 
If SORT <> 2 Goto L_10190
SLSMTDGP = 0;SLSYTDGP = 0
SLSMTDSL = 0;SLSYTDSL = 0
For X = 0 To 19
  SLSMTDGP = SLSMTDGP + CAT[X,4]
  SLSYTDGP = SLSYTDGP + CAT[X,5]
  SLSMTDSL = SLSMTDSL + CAT[X,2]
  SLSYTDSL = SLSYTDSL + CAT[X,3]
Next X
L_10190: Return 
L_10500: Rem CHECK FOR COST VS LOAD/WHSE COST CHANGE
LDCOST = PRODB[8]
If P9$[32,32] <> "Y" Goto L_10600
K17$ = " ",K17$;K17$[1,12] = L1$[1,12];K17$[13,14] = H4[2] Using "##"
Search #17,2,1;K17$,R17,E \ If E Goto L_10600
Mat Read #17,R17,78;W3;
If W3[17] Let LDCOST = W3[17]
Goto L_10600
L_10600: Rem CHECK IF DIFF
COSTCHG = 0
If LDCOST <> L5[1] Let COSTCHG = 1
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! ALWAYS UB5+
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,E$,RSTR$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If OLS2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$
Call programdump("tmp/cv242se!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End

L_9100: Rem END
Gosub L_4800
Gosub L_4000
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For J = 0 To 20 \ T9[J] = 0 \ Next J
If Not(PASS) Goto OUTEND
PASS = 0;SORT = 2
Print #0;"\14\";
Goto L_1400
!Stop 
OUTEND: Rem EXIT
!Print 'CS'
TFLE$[Len(TFLE$)] = "" 
Try Close #16 Else REM
Try Kill TFLE$ ELSE REM
If SCRPRT ! dx xml (TO BROWSER NOT POSSIBLE - LET IT GET ERROR?)
	tmp$="CANNOT RUN TO BROWSER - NO REPORT!!!!!!"
	call addtostr(e$,rstr$,tmp$+rdel$)
  Call addtostr(e$,rstr$,esdel$) !end section

  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
Else
	tmp$="OK - REPORT COMPLETE"
	Call SetOutput(e$,rstr$,1,tmp$) ! send ok and message
End If 
L_9020: ! bypass mssg - just exit
!Print 'CS'
!Chain "MX000C"
!Chain "MX000"
!Stop 
Try call dxclose() Else Rem
END
Rem {begin rtn.error.s}
Err_Trap: ! pm 
!
include "src/callmainerrnet.inc"
End
!
Rem {end rtn.error.s}