!>>> Program 980f
!
! description  purge rebate staging 
!
! loadsave -w -n 100,10 -o prog/dxport/980f.dl4 src/980f.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2010  14:29:58
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/htberry.r10/ut980f.src (univ2) [valerie] {10317}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function AddToMYReports
Declare Intrinsic Sub DateToJulian,InpBuf,String,programdump,findf
!Option Default Dialect IRIS1
Rem ut980f staged rebate purge
Com 1%,COST_LEV[3],COMM_LEV,Z9[9]
If Err 0 Gosub ERR_TRAP
Dim RCN$[70],VENDCNT$[50],RB$[12],SPUDA2$[30],M1$[40],CCREF$[20]
Dim K$[60],K1$[60],K2$[60],K3$[60],K4$[60],K5$[60]
Dim Key0$[60],KEY1$[60],KEY2$[60]
Dim SPACE$[500],SCRATCH$[80],RETVAL$[512],Z2$[2]
Dim F$[20],P61$[256],MSGTXT$[75],VRCINFO$[60]
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],URECFLAG,INCEXPIRED,RBWHSE
Dim 2%,RB1[5],RBMIN,RBCOM,CONTRACT,CC1[4],START_VENDOR,END_VENDOR,DATE
Dim 2%,START_CONTRACT,END_CONTRACT,WORKCONT,JSDATE,JEDATE,JIDATE,JDATE[2]
Dim 2%,VCONTRACT,VINFO
Dim 3%,RCN3[3],RB3[6],RBN,RB5[2]
! Window On 
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],message$[200],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
SPACE$ = " ",SPACE$
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = "cntrl/cntrl" + Str$(COID)
Mat Read #1,61,0;P61$;
Mat Read #1,0,112;DATE;
X2 = DATE \ Gosub YMD2JUL \ X2 = 0
JSDATE = X2
VINFO = 0 ! \ If P61$[82,82] = "Y" Let VINFO = 1 ! NOT ON SERP AT THIS TIME!
if err 0 goto NOSTGFle
F$ = "3/stgrbheader" + Str$(COID)
Open #2,F$
F$ = "3/stgrbdetail" + Str$(COID)
Open #3,F$
F$ = "2/stgrbcustcnt" + Str$(COID)
Open #4,F$
F$ = "2/stgrbnotes" + Str$(COID)
Open #5,F$
If VINFO ! vendor info file used
  F$ = "3/stgrbvinfo" + Str$(COID)
  Open #6,F$
End If 
F$ = "3/stgrbtrack" + Str$(COID)
Open #7,F$
if err 0 gosub err_trap
START_HERE: Rem all starts
START_VENDOR = 0
END_VENDOR = 999999
START_CONTRACT = 0
END_CONTRACT = 999999
!Gosub DISPLAY_SCREEN
INPUTS: Rem
VEND_RANGE: Rem
GET_START_VEND: Rem
!J0$ = "3000063507-"
!J5$ = "Enter the starting vendor code maximum 999999"
!J1 = START_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_START_VEND
call dxget("SVEND",tmp$)
if tmp$="" Let tmp$=Str$(Start_Vendor)
j1=tmp$
START_VENDOR = J1
GET_END_VEND: Rem
!J0$ = "3000065507-"
!J5$ = "Enter the ending vendor code maximum 999999"
!J1 = END_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_END_VEND
call dxget("EVEND",tmp$)
if tmp$="" Let tmp$=Str$(end_vendor)
j1=tmp$
END_VENDOR = J1
If END_VENDOR < START_VENDOR
  !Gosub BAD_RANGE
  message$="INVALID VENDOR RANGE"
  Goto err_msg ! VEND_RANGE
End If 
!RETVAL$[1,6] = START_VENDOR Using "######"
!RETVAL$[7,12] = END_VENDOR Using "######"
!Return 
CONTR_RANGE: Rem ------------------------------------
!J0$ = "3000063508"
!J5$ = "Enter the starting contract number maximum 999999"
!J1 = START_CONTRACT
!Gosub ISINPUT
CALL DXGET("SCONTR",tmp$)
if tmp$="" let tmp$=Str$(Start_Contract)
j1=tmp$
START_CONTRACT = J1
!J0$ = "3000065508"
!J5$ = "Enter the ending contract number maximum 999999"
!J1 = END_CONTRACT
!Gosub ISINPUT
call dxget("ECONTR",tmp$)
if tmp$="" let tmp$=Str$(End_Contract)
j1=tmp$
END_CONTRACT = J1
If END_CONTRACT < START_CONTRACT
  !Gosub BAD_RANGE
  message$="INVALID CONTRACT RANGE"
  Goto err_msg ! CONTR_RANGE
End If 
!RETVAL$[13,18] = START_CONTRACT Using "######"
!RETVAL$[19,24] = END_CONTRACT Using "######"
!Return 
!Print @0,23;'CE';"Enter #:field to edit  S: save defaults  P: begin Purge or  E: exit ";
!Input Len 16384 + 3;""J$ \ Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "P" Goto BEGIN_PURGE
!If J$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
!  Input Len 16384 + 1;""Z2$
!  Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "progdfltw","980f","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL'
!End If 
!If J$ = "" Goto INPUTS
!X = J$
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On X Gosub VEND_RANGE,CONTR_RANGE
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Goto INPUTS
ReportDir$ = "REPORTDIR" \ System 28,ReportDir$
BaseName1$ = "stagerbt_Purge"+dateusing$(Tim#(0),"YYMMDDHHNNSS")
StatusFile$ = ReportDir$ + "/"+BaseName1$
Call FindF(StatusFile$,tmp)
If tmp Kill StatusFile$
StatChan = 88 ! FindChannel() ! channel to build text file need fixed channel
Try Close #88 Else Rem
Try
	Build #StatChan,StatusFile$ As "TEXT"
Else
	returnstatus=1
	let message$=messaGE$+"Error in Building Status File "
	goto err_msg ! outend:
end TRY
Try Close #StatChan Else Rem
Try
	Open #StatChan,StatusFile$
else
	returnstatus=1
	let message$=message$+"Error in Opening Status File "
	goto err_msg  ! outend:
end TRY
Print #StatChan;"Update Process Started..."
! PAUSE 20
e = AddToMYReports(BaseName1$) 
if e<0
	message$=message$+"Error adding to my reports!" 
	returnstatus=1
	goto err_msg ! outend:
endif
BEGIN_PURGE: Rem let's start copying shall we
!Print @1,10;'CL';"Do you want to delete the Contracts in the Stage area Y/N ?";
!Input Len 16384 + 1;""J$ \ Call String(1,J$)
!If J$ <> "Y" If J$ <> "N" Goto BEGIN_PURGE
!If J$ = "N" Goto OUTEND
returnstatus=0 ! or is it 1?
message$="Please check under My Reports "+basename1$+" for status and completion"
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)
NumPrg=0
K$ = " ",K$ ! \ K$ = ""
PURGE_LOOP: Rem start with header
Search #2,3,1;K$,R2,E
If E
  !Input @0,22;'CL';" Purge complete press <CR> ";J$
  Goto OUTEND
End If 
CH_RBHEAD = 2;REC_RBHEAD = R2
Gosub READ_REBATE_HEADER
If RCN3[0] < START_CONTRACT Goto PURGE_LOOP
If RCN3[0] > END_CONTRACT Goto PURGE_LOOP
If RCN3[3] < START_VENDOR Goto PURGE_LOOP
If RCN3[3] > END_VENDOR Goto PURGE_LOOP
WORKCONT = RCN3[0]
!Print @10,10;'CL';"contract ";K$
Print #StatChan;"Contract ";K$
NumPrg=NumPrg+1
Gosub CLEAR_OUT_WORKAREA
Goto PURGE_LOOP
DISPLAY_SCREEN: Rem DISPLAY INPUT SCREEN
!Call "progdflt","980f","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$[1,6] = "     0"
!  RETVAL$[7,12] = "999999"
!  RETVAL$[13,18] = "      0"
!  RETVAL$[19,24] = "999999"
!  Call "progdfltw","980f","",77,RETVAL$,URECFLAG
!End If 
!Print @0,0;'CS ED';"-ut980f-";@30,0;"STAGED REBATE PURGE UTILITY";
!Print @1,2;'CL BD';"This utility will purge rebates copied to the Staged area";'ED';
!Print @35,5;'BR';"STARTING";@55,5;"ENDING";'ER';'BD';
!Print @1,7;"    VENDOR CODE";
!Print @1,8;"    CONTRACT NUMBER";
!Print @0,7;" 1> ";@0,8;" 2> ";
!START_VENDOR = RETVAL$[1,6]
!END_VENDOR = RETVAL$[7,12]
!START_CONTRACT = RETVAL$[13,18]
!END_CONTRACT = RETVAL$[19,24]
!Print Using "######";@35,7;START_VENDOR;@55,7;END_VENDOR;
!Print Using "######";@35,8;START_CONTRACT;@55,8;END_CONTRACT;
Return 

BAD_RANGE: Rem
!MSGTXT$ = "Ending value must be Greater than or Equal to starting value!"
!Call "errmsg",MSGTXT$
Return 
READ_REBATE_HEADER: Rem
Mat Read #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Read #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Read #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
READ_REBATE_DETAIL: Rem
Mat Read #CH_RBDETL,REC_RBDETL,0;RB$
Mat Read #CH_RBDETL,REC_RBDETL,12;RB1
Mat Read #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Read #CH_RBDETL,REC_RBDETL,40;RB
Mat Read #CH_RBDETL,REC_RBDETL,46;RB3
Mat Read #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Read #CH_RBDETL,REC_RBDETL,118;RBWH;
Read #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Read #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Read #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
READ_REBATE_CUSTOMER: Rem
Mat Read #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Read #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
READ_REBATE_NOTES: Rem
Mat Read #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Read #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
READ_REBATE_VINFO: Rem
Mat Read #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Read #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Read #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
CLEAR_OUT_WORKAREA: Rem
If VINFO ! using vendor info file
  Key0$ = " ",Key0$
  Key0$ = WORKCONT Using "######"
DEL_VINFO_LOOP: Rem
  Search #6,3,1;Key0$,R6,E
  If E Goto DEL_CUSTCONT
  WORK = Key0$[1,6]
  If WORK <> WORKCONT Goto DEL_CUSTCONT
  Search #6,5,1;Key0$,R6,E
  E = 3
  Search #6,1,0;Key0$,R6,E \ If E Gosub ERR_SEARCH
  Goto DEL_VINFO_LOOP
End If 
DEL_CUSTCONT: Rem clear out contractfile
Key0$ = " ",Key0$
Key0$ = WORKCONT Using "######"
DEL_CUSTCONT_LOOP: Rem go through customer contract
Search #4,3,1;Key0$,R4,E
If E Goto DEL_REBATE_NOTES
WORK = Key0$[1,6]
If WORKCONT <> WORK Goto DEL_REBATE_NOTES
KEY1$ = Key0$[7,12] + Key0$[1,6]
Search #4,5,2;KEY1$,R,E
Search #4,5,1;Key0$,R4,E \ If E Gosub ERR_SEARCH
E = 3
Search #4,1,0;Key0$,R4,E \ If E Gosub ERR_SEARCH
Goto DEL_CUSTCONT_LOOP
DEL_REBATE_NOTES: Rem let's got through notes
Key0$ = " ",Key0$
Key0$ = WORKCONT Using "######"
DEL_NOTE_LOOP: Rem go through rebate notest
Search #5,3,1;Key0$,R5,E
If E Goto DEL_REBATE_DETAIL
WORK = Key0$[1,6]
If WORKCONT <> WORK Goto DEL_REBATE_DETAIL
Search #5,5,1;Key0$,R5,E \ If E Gosub ERR_SEARCH
E = 3
Search #5,1,0;Key0$,R5,E \ If E Gosub ERR_SEARCH
Goto DEL_NOTE_LOOP
DEL_REBATE_DETAIL: Rem now the detail records
Key0$ = " ",Key0$
Key0$ = WORKCONT Using "######"
DEL_DETAIL_LOOP: Rem go through customer contract first
Search #3,3,1;Key0$,R3,E
If E Goto DEL_REBATE_HEADER
WORK = Key0$[1,6]
If WORKCONT <> WORK Goto DEL_REBATE_HEADER
Mat Read #3,R3,12;RB1
KEY1$ = Key0$[7,18] + Key0$[1,6]
Search #3,5,2;KEY1$,R,E
KEY1$ = " ",KEY1$
KEY1$[1,6] = RB1[1] Using "######"
KEY1$[7] = Key0$
Search #3,5,3;KEY1$,R,E
Search #3,5,1;Key0$,R3,E \ If E Gosub ERR_SEARCH
E = 3
Search #3,1,0;Key0$,R3,E \ If E Gosub ERR_SEARCH
Goto DEL_DETAIL_LOOP
DEL_REBATE_HEADER: Rem not the header
Key0$ = " ",Key0$
Key0$ = WORKCONT Using "######"
Search #2,2,1;Key0$,R2,E \ If E Gosub ERR_SEARCH
KEY1$ = " ",KEY1$
KEY1$ = RCN3[3] Using "######"
KEY1$[7] = Key0$
Search #2,5,4;KEY1$,R,E
If VENDCNT$[1,20] <> SPACE$[1,20]
  KEY1$ = " ",KEY1$
  KEY1$[1,6] = RCN3[3] Using "######"
  KEY1$[7,26] = VENDCNT$[1,20]
  KEY1$[27] = Key0$
  Search #2,5,5;KEY1$,R,E
End If 
KEY1$ = " ",KEY1$
KEY1$[1,6] = WORKCONT Using "######"
DEL_CUSTDIR_LOOP: Rem work on dirs 2 and 3
Search #2,3,3;KEY1$,R,E
If E Goto DEL_REBATE_DIR1
If KEY1$[1,6] <> Key0$[1,6] Goto DEL_REBATE_DIR1
Search #2,5,3;KEY1$,R,E
KEY2$ = " ",KEY2$
KEY2$ = KEY1$[7,12] + KEY1$[1,6]
Search #2,5,2;KEY2$,R,E
Goto DEL_CUSTDIR_LOOP
DEL_REBATE_DIR1: Rem let's get rid of it!
Search #2,5,1;Key0$,R2,E \ If E Gosub ERR_SEARCH
E = 3
Search #2,1,0;Key0$,R2,E \ If E Gosub ERR_SEARCH
DEL_TRACK_FILE: Rem clear out tracking file
K5$ = WORKCONT Using "######"
STAGE_TRACK_LOOP: Rem go thru tracking
Search #7,3,1;K5$,R7,E \ If E Goto DONE_WITH_STAGE
X2 = K5$[1,6] \ If X2 <> WORKCONT Goto DONE_WITH_STAGE
Search #7,5,1;K5$,R5,E \ If E Goto STAGE_TRACK_LOOP
Goto STAGE_TRACK_LOOP
DONE_WITH_STAGE: Rem ALL DONE
Return 
CONVERT_RCN3DATES: Rem "Conver to Julian
X2 = RCN3[1] \ Gosub YMD2JUL \ X2 = 0
JDATE[1] = X2
X2 = RCN3[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[2] = X2
Return 

YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
IF X2<=0 LET E=1 \ RETURN
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1

Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: !X1 = Len(J7$)
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}

NOSTGFle: ! files missing - can not use
message$="REBATE STAGING NOT AVAILABLE"
! FALL ON THROUGH
ERR_MSG: ! something is awry
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
Print #StatChan;Message$
Call programdump("tmp/980fse!","")
goto Err_Msg:
OUTEND: Rem "Done
!Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
message$="Complete. "+Str$(NumPrg)+" stage contracts removed"
Print #StatChan;Message$
try close #StatChan Else Rem
!Close 
!Chain "mx000"
END
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!!Rem {end rtn.error.s}
include "src/callmainerrnet.inc"
End