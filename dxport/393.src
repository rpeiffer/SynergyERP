! >>> Program 393
!
! description: MIN MAX  - Sort by Vendor/Product
!
! loadsave -w -n 100,10 -o prog/dxport/393.dl4 src/393.src
!
! 1.0 04/01/2008 
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR  3, 2006  15:00:07
Rem /w/papermaster/r2002//usr/acct/dek/work/r2002/po/po393.src (univ2) [dek] {16922}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem PO393  MIN MAX  - Sort by Vendor/Product
Rem Converted to bedit on  04/30/1996
Rem LAST UPDATE  roman 02/09/1993. check do-not-reorder flag cct #48631
! CUSTOM UPCW ! 7/30/09 jliu cct234637 round up the reorder qty base on vendor order u/m
! -------------------------CUSTOM CODE FOR GENERAL PAPER GOODS  ---------------------------------------------------
! 02/08/16 vst task26710 - if custom_customer$="GPG" print out the product's "ABCD" classification (U3$[1,2]) 
!							 right before the description in brackets.
! --------------------------------------------------------------------------------------------
 !--------------------------------------------------------------------------------------------
! ----------  NOTES FOR UPGRADE  ZEPHYR ----------------------------
! 02/27/05 vst cct187777 - used rev8 prog & added in custom code for:
! 02/14/97 sls cct 98125 - added 'USAGE' column to the report.
! 03/18/97 jcs cct100150- option for <CR> for all whses.
! -----------------------------------------------------------------------------

Declare Intrinsic Sub InpBuf,String
!!-!! Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
!!-!! If Spc(13) = 11 !!-!! Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim U9$[131],X$[10],Y$[80],K16$[60],W1$[32]
Dim U5$[50],K1$[50],D8$[12],F$[16],V$[20]  !!!-!! ,I0$[20],I1$[20],I2$[20],I3$[20],I4$[20]
Dim P9$[50],KTR$[50],K12$[50],Custom_customer$[30]
Dim S1$[12],S2$[12],K9$[60],VEND$[30],K5$[60],runit$[4]
Dim D$[156],CNAME$[30],SUNIT$[4],UNIT$[10],K2$[50]
Dim U3$[60]
Dim 1%,F,T1[1],H4,W0[3],L1[5],ORD_L3[3],ORD_UN[2]
Dim 2%,X2,W2[9],B[24],D9[5],L2[2],ORD_H0[12],ORD_H5[16],ORD_L2[2],ORD_L4[3]
Dim 2%,ORD_L6[5],Q4,Q8
Dim 2%,W7[14]
Dim 3%,Q2,Q3,AMOUNT,PLP3[4],QTYBO,L3[6],ORD_L7[12],ORD_S3[17],ORD_OLM[6]
Dim 3%,J,X1,W3[24],W5[25],A1[7]
Dim 3%,PROD_REC,QTYBO,TRANSIN_QTY
Dim 3%,TTLUSAGE
Def FNR(X) = Sgn(X) * (Int((Abs(X) * 100) + .5) / 100)
Def FNU(X) = Int(Abs(X) + Sgn(Fra(Abs(X)))) * Sgn(X)
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

BEGINP: Rem "First what Type Report to Run
!!-!! Print 'CS';@0,0;"PO393";@50,0;"MIN/MAX REPORT"
!!-!! Print @0,2;"PLEASE SELECT REPORT TYPE"
!!-!! Print @5,4;"1> WITH UNIT SALES"
!!-!! Print @5,5;"2> WITHOUT UNIT SALES"
!!-!! Print @0,8;"ENTER SELECTION,  E: exit   ";
!!-!! Input Len 16385;""F$ \ If F$ = "E" Goto OUTEND
!!-!! If F$ <> "1" If F$ <> "2" Goto BEGINP
!!-!! If F$ = "1" Chain "PO393A"
For K1 = 3 To 20
  Read J \ If J = -1 Goto NXTFLE
  Read #1,88,J;F$;
  Ropen #K1,F$
NXTFLE: Next K1
Data "1792","2432","2400","1808","1728","2416","-1","2448","2464"
Data "-1","-1","2480","2512","2336","2528","1744","1888","1840"
Read #1,3;CNAME$;
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
mat read #1,115,60;custom_customer$; ! ALT
custom_customer$=RTrim$(UCase$(custom_customer$))
U5$ = Msc$(3)
D8$ = U5$[1,12]
If Err 0 Let J8 = Spc(8)
J8 = 0 \  N = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
L9 = 60 ! \ If J8 Let L9 = 20
!

!
!!!! dx add xport reporting code
call dxget("I0",V$) \ if V$="" let SVEND="0" else SVEND=V$			!ENTER STARTING	
call dxget("I1",V$) \ if V$="" let EVEND="999999" else EVEND=V$		!ENTER ENDING VENDOR
call dxget("I2",V$) \ ALLPRD = V$									!Product Type
call dxget("I3",V$) !\ ! CHECK WAREHOUSE
if rtrim$(V$)=""
	let WHSE="1" 
	if custom_customer$="ZEPHYR" LET WHSE=0 
else
	WHSE=V$			!CHECK WAREHOUSE
	IF CUSTOM_CUSTOMER$="ZEPHYR"
		IF NOT(WHSE) AND RTRIM$(V$)<>"0"
			let e$="Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000
		ENDIF
	ENDIF
ENDIF
call dxget("I4",UNIT$) \ UnitType = UNIT$							!SELECT UNIT
call dxget("VPB",tmp$) \ pbvc=0 \ if tmp$<>"" let pbvc=1			! page break on vendor 
call dxget("INCARB",tmp$) \ incarb=0 \ if tmp$="Y" let incarb=1 ! include calc source 5 arbitrary
call dxget("AVLBR",tmp$) \ avlinbr=0 \ if tmp$="Y" let avlinbr=1 ! show available in browser list
if not(J8) let avlinbr=0 ! not to browser - no option
!!!! dx end
REM let incarb=1 ! remove this line 
If P9$[33,33] <> "Y" Let WHSE = 1
If D9[5] = 1 Let WHSE = 1
If P9$[33,33] = "Y" Let WHDETL = 1 else WHDETL = 0
!
if SVEND<0 or SVEND>999999 let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if SVEND>EVEND or EVEND>999999 let e$="Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
!
IF CUSTOM_CUSTOMER$="ZEPHYR"
	if WHSE < 0 or WHSE > D9[5] let e$="Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000
ELSE
	if WHSE < 1 or WHSE > D9[5] let e$="Invalid warehouse, must be between 1 and ",D9[5],"!" \ error 10000
ENDIF
!
U5$ = " ",U5$
If UnitType = 1 Let U5$ = "IN STOCKING UNITS "
If UnitType = 2 Let U5$ = "IN SELLING UNITS "
If UnitType = 3 Let U5$ = "IN PURCHASING UNITS "
If UnitType = 4 Let U5$ = "IN COSTING UNITS "
If UnitType = 5 Let U5$ = "IN PRICING UNITS "
If UnitType = 6 Let U5$ = "IN PRODUCTION UNITS "
UnitType = UnitType + 7
!
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"393",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
!!-!! STRTHERE: Rem "Here's the start
!!-!! Window On 
!!-!! Print 'CS'
!!-!! Print @0,0;"PO393";@30,0;"MIN / MAX PURCHASE REPORT"
!!-!! Print @6,4;'CE';"ENTER STARTING VENDOR OR <CR> FOR FIRST ";
!!-!! Input Len 16390;""V$
!!-!! SVEND = V$
!!-!! Print @6,6;"ENTER ENDING VENDOR OR   <CR> FOR LAST ";
!!-!! Input Len 16390;""V$
!!-!! If V$ = "" Let V$ = "999999"
!!-!! EVEND = V$
!!-!! If SVEND > EVEND
!!-!!   Print @10,22;"INVALID RANGE "; \ Signal 3,30
!!-!!   Goto STRTHERE
!!-!! End If 
!!-!! ENT_PRODTYPE: Rem "Enter the Product Type
!!-!! Print @6,8;'CL';"PRINT  1: ALL PRODUCTS,  2: PRODUCTS BELOW MIN,   E: TO EXIT ";
!!-!! Input Len 16385;""V$ \ If V$ = "E" Goto OUTEND
!!-!! ALLPRD = V$
!!-!! If ALLPRD <> 1 And ALLPRD <> 2 Goto ENT_PRODTYPE
!!-!! ENT_WHSE: Rem CHECK WAREHOUSE
!!-!! If P9$[33,33] <> "Y" Let WHSE = 1 \ Goto ENT_UM
!!-!! WHSE = 1 \ If D9[5] = 1 Goto WHSE_DONE
!!-!! Print @0,10;"Enter warehouse to use (1-";Str$(D9[5]);
!!-!! Print ") or   E: to exit ";'CE';
!!-!! Input Len 16386;""X$ \ If X$ = "E" Goto OUTEND
!!-!! WHSE = X$
!!-!! If WHSE < 1 Or WHSE > D9[5] Print 'RB'; \ Goto ENT_WHSE
!!-!! WHSE_DONE: Rem "that's all
!!-!! ENT_UM: Rem SELECT UNIT
!!-!! Window Open @5,10; Size 70,12; Using " SELECT DEFAULT UNIT "
!!-!! REENTUM: Print 'CS'
!!-!! Print 
!!-!! Print Tab 5;" 1: STOCKING  "; Tab 45;" 4: COSTING"
!!-!! Print Tab 5;" 2: SELLING  "; Tab 45;" 5: PRICING"
!!-!! Print Tab 5;" 3: PURCHASING "
!!-!! Print 
!!-!! Print Tab 10;"Enter unit to show on report ";
!!-!! Input ""UNIT$
!!-!! UNIT = UNIT$
!!-!! If UNIT < 1 Goto REENTUM
!!-!! If UNIT > 5 Goto REENTUM
!!-!! U5$ = " ",U5$
!!-!! If UNIT = 1 Let U5$ = "IN STOCKING UNITS "
!!-!! If UNIT = 2 Let U5$ = "IN SELLING UNITS "
!!-!! If UNIT = 3 Let U5$ = "IN PURCHASING UNITS "
!!-!! If UNIT = 4 Let U5$ = "IN COSTING UNITS "
!!-!! If UNIT = 5 Let U5$ = "IN PRICING UNITS "
!!-!! If UNIT = 6 Let U5$ = "IN PRODUCTION UNITS "
!!-!! UNIT = UNIT + 7
!!-!! Window Close 
!!-!! Window Off 
!!-!! 
if J8 !dx xml headings
	tmp$="VENDOR",fdel$		!;W2[3];VEND$
	tmp$=tmp$,"VENDOR NAME",fdel$
	tmp$=tmp$,"ITEM CODE",fdel$
	if custom_customer$="GPG"
		tmp$=tmp$,"CLASS",fdel$  ! "task26710 - ABCD class
	end if
	tmp$=tmp$,"DESCRIPTION1",fdel$
	tmp$=tmp$,"VENDOR ITEM",fdel$
	tmp$=tmp$,"DESCRIPTION2",fdel$
	tmp$=tmp$,"UM",fdel$
	tmp$=tmp$,"MIN",fdel$
	tmp$=tmp$,"MAX",fdel$
	tmp$=tmp$,"ON HAND",fdel$
	tmp$=tmp$,"ON SO",fdel$
	tmp$=tmp$,"ON PO +TRS IN",fdel$
	tmp$=tmp$,"ON BO",fdel$
	tmp$=tmp$,"SUGGESTED",fdel$
	if avlinbr
		tmp$=tmp$,"AVAILABLE",fdel$
	endif
	!!-!! tmp$=tmp$,"REORDER ",fdel$
	if custom_customer$="ZEPHYR"
		tmp$=tmp$,"USAGE",fdel$
	endif
	!
	call addtostr(e$,rstr$,tmp$+rdel$)
	!return ! dx xml
end if
!
! -FINALQ: Rem "standard final Question
!!-!! Print @0,20;'CE';"Select   P: !!-!! Print  R: reselect  E: exit  ";
!!-!! Input Len 16385;""K9$ \ Call String(1,K9$)
!!-!! If K9$ = "E" Goto OUTEND
!!-!! If K9$ = "R" Goto STRTHERE
!!-!! If K9$ <> "P" Goto FINALQ
!
STRTSORT: Rem SORT BY VENDOR
!!-!! Print @0,21;'CE';@5,21;"SORTING PLEASE WAIT"; \ Signal 3,0
K9$ = " ",K9$
CLRSORT_LOOP: Rem "Clear sort file
Search #9,3,1;K9$,R1,E \ If E = 2 Goto CLRSORT_DONE
!!-!! If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R1,E !!-!! \ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 393 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
Goto CLRSORT_LOOP
!
CLRSORT_DONE: Rem "okay now sort
K1$ = " ",K1$
PRODFLE_LOOP: Rem "thru Product File
Search #3,3,1;K1$,R1,E
If E = 2 Goto SORT_DONE
Mat Read #3,R1;D$;
Mat Read #3,R1,256;A;
Mat Read #3,R1,156;B;
For X = 0 To 9 \ W2[X] = 0 \ Next X
IF CUSTOM_CUSTOMER$="ZEPHYR"
	w1$=" ",w1$
	w0[0]=0
	if whse<>0 GOSUB Get_PrdWhse \ GOTO ProdFle_Loop: ! "whse
ELSE
	Gosub GET_PRDWHSE \ Goto PRODFLE_LOOP
ENDIF
If Not(W2[3]) Let W2[3] = B[24]
!If W0[0] If W0[0] = 1 Goto PRODFLE_LOOP
If W2[3] < SVEND Or W2[3] > EVEND Goto PRODFLE_LOOP
!If W1[0] <> WHSE Goto PRODFLE_LOOP
K9$ = " ",K9$;K9$[1,6] = W2[3] Using "######"
K9$[7,19] = K1$[1,12]
Search #9,4,1;K9$,R1,E 
If E Let e$ = "syserrorfile 393 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
Goto PRODFLE_LOOP
!
SORT_DONE: Rem Sort Done! BEGIN
L = 99 \ P = 0
!!-!! Print @0,22;'CS';"PRINTING PLEASE WAIT" \ Signal 3,0
!!-!! If J8 Print 'CS'
! - Signal 3,0
!!-!! If Err 0 Gosub ERR_ESCAPE 
K1$ = " ",K1$
VEND = -999
SORTFLE_LOOP: Rem "Loop thru Sorted Info
Search #9,3,1;K1$,R1,E
If E = 2 Goto SRTLOOP_DONE
X2 = K1$[1,6] 
If X2 <> VEND 
  If PBVC ! PAGE brk on vendor change
	Let L = 9999
  Endif
    Let Newvend=1
	if vend=-999 let newvend=0 ! not new - 1st one
endif
VEND = X2
Mat Read #3,R1;D$;
Mat Read #3,R1,256;A;
Mat Read #3,R1,512;PFU1;
Mat Read #3,R1,554;PFU2;
Mat Read #3,R1,460;A1;
Mat Read #3,R1,156;B;
Mat Read #3,R1,204;Q8;
MAT  READ #3,R1,684;U3$;	! "TASK26710 - ADDED FOR GPG (ABCD CLASS)
For X = 0 To 9 \ W2[X] = 0 \ Next X
If custom_customer$="ZEPHYR"
	w1$=" ",w1$
	w0[0]=0
	LET PROD_REC=R1 \ GOSUB Get_TransQty
	IF P9$[33,33]="Y" and whse<>0 gosUB Get_PrdWhse \ GOTO SortFle_Loop: ! "WHSE / BACK IF NONE
	IF NOT (WHSE) GOSUB L_10900: ! "GET USAGE FOR ALL WHSES-cct98125-zephyr
ELSE
	PROD_REC = R1 \ Gosub GET_TRANSQTY
	If P9$[33,33] = "Y" Gosub GET_PRDWHSE \ Goto SORTFLE_LOOP
ENDIF
If Not(W2[3]) Let W2[3] = B[24]
Gosub GET_BCKORD
If W0[0] = 2 And (A[3] <= 0 And QTYBO <= 0) Goto SORTFLE_LOOP
Gosub CONVERT_STUFF
Q3 = A[0] - (A[3] + QTYBO) + A[2] + TRANSIN_QTY
Rem IF ALLPRD=2 IF W7[12]=6 IF Q3>B[9] OR (B[9]=0 AND Q3=0) GOTO SortFle_Loop:
If ALLPRD = 2
  If W7[12] <> 6 and w7[12]<>5 Goto SORTFLE_LOOP
 if not(incarb) if w7[12]=5 Goto SORTFLE_LOOP
  
  If Q3 > B[9] or (B[9] = 0 And Q3 = 0) Goto SORTFLE_LOOP
 
  rem If B[9] = 0 And Q3 = 0 Goto SORTFLE_LOOP
End If 
if newvend and j8=0
  If l+3<L9 ! don't print if will go over max lines
	gosub get_vendor
	Print #0;""
	Print #0; Using "  VENDOR  ######    ";W2[3];VEND$
	Print #0;""
	l=l+3
  Else ! just do new header
	L=999
  Endif
	Newvend=0
Endif
Gosub PRNT_HEDNG
Gosub PRNT_DETL
Gosub ADDTOTALS
Goto SORTFLE_LOOP
!
ADDTOTALS: Rem TOTALS CALC
T9[1] = T9[1] + A[0]
T9[2] = T9[2] + A[0]
Return 
!
GET_BCKORD: Rem "============================================= FIND QTY B/O
QTYBO = 0
K16$ = " ",K16$;K16$[1,12] = D$[140,151]
K16$[13,14] = WHSE Using "##"
PRDLOT_LOOP: Rem "loop thru all for Prod/Whse
Search #17,3,4;K16$,R16,E !!-!! \ If E > 2 Gosub ERR_SEARCH
If E Return 
If K16$[1,12] <> D$[140,151] Return 
X2 = K16$[13,14]
If Whse<>0 and X2 <> WHSE Return 
Mat Read #17,R16,82;PLP3;
QTYBO = QTYBO + PLP3[4]
Goto PRDLOT_LOOP
!
L_4000: Rem TOTAL PRINT
!
if J8 return
!
Gosub PRNT_HEDNG
Print #0;" "
Print #0; Tab 1;"** TOTALS **";
Print #0; Using "##,###,###.##"; Tab 63;T9[1];
Print #0; Using "#,###,###,###.##"; Tab 110;T9[2];
Print #0;" "
U9$ = " ",U9$
Return 
!
PRNT_DETL: Rem !!-!! Print LINE
!
If J8 
	Gosub GET_VENDOR
	tmp$=W2[3] Using "######",fdel$	!VENDOR
	tmp$=tmp$,rtrim$(VEND$),fdel$ !VENDOR Name
	tmp$=tmp$,rtrim$(D$[140,151]),fdel$ !ITEM CODE
	if custom_customer$="GPG"
		tmp$=tmp$,rtrim$(u3$[1,2]),fdel$  ! "task26710 - ABCD class
	end if
	tmp$=tmp$,rtrim$(D$[9,38]),fdel$ !DESCRIPTION1
	tmp$=tmp$,rtrim$(D$[93,112]),fdel$ !VENDOR ITEM
	tmp$=tmp$,rtrim$(D$[63,92]),fdel$ !DESCRIPTION2
	tmp$=tmp$,rtrim$(SUNIT$[1,4]),fdel$	!UM
	tmp$=tmp$,B[9] Using "-----#.##",fdel$ !MIN
	tmp$=tmp$,A1[1] Using "-------#.##",fdel$ !MAX
	tmp$=tmp$,A[0] Using "-------#.##",fdel$ !ON HAND
	tmp$=tmp$,A[3] Using "-------#.##",fdel$ !ON SO
	tmp$=tmp$,A[2] + TRANSIN_QTY Using "-------#.##",fdel$ !ON PO +TRS IN
	tmp$=tmp$,QTYBO Using "-------#.##",fdel$ !ON BO
	if custom_customer$<>"UPCW"
	  	select case W7[12]
				case 6
					If A1[1] > Q3 tmp$=tmp$,FNU(A1[1] - Q3) Using "-------#",fdel$ else tmp$=tmp$," ",fdel$
				case 5
					tmp$=tmp$,FNU(W3[11]) Using "-------#",fdel$
				case else
					tmp$=tmp$," ",fdel$
			end select
		
	Else ! is upcw
		IF A1[1]>Q3 
		   !"cct#234637
		   LET RORDQTY=A1[1]-Q3
		   if w7[12]=5 let rordqty=w3[11]
			rem if calc source 5 use set reorder qty
		   LET CNVTU[0]=pfu1[UnitType]                   
		   LET CNVTU[1]=0         
		   LET CNVTU[2]=1                   
		   LET CNVTA=RORDQTY \ GOSUB CONVERT:  
		   LET baseqty=AMOUNT                  
		   LET CNVTU[0]=0             
		   LET CNVTU[1]=pfu1[20]         !"vendor order u/m                      
		   LET CNVTU[2]=1                      
		   LET CNVTA=baseQTY \ GOSUB CONVERT:  
		   LET rordqty=AMOUNT
		   LET CNVTU[0]=pfu1[20]                                       
			LET CNVTU[1]=0              
			LET CNVTU[2]=1          
			LET CNVTA=fnu(RORDQTY) \ GOSUB CONVERT:    
			LET baseqty=AMOUNT     
			LET CNVTU[0]=0                                    
			LET CNVTU[1]=pfu1[UnitType]       
			LET CNVTU[2]=1                                    
			LET CNVTA=baseQTY \ GOSUB CONVERT: 
			let pqty=amount
			tmp$=tmp$, fnu(pqty) USING "-------#"," ",sunit$[1,4],fdel$
		else
			tmp$=tmp$," ",fdel$
		endif
	Endif
	if avlinbr ! wants available in browser version
		qtyavl=a[0]-A[3] ! ONHAND-ONSO (already coverted)
		tmp$=tmp$,LTRIM$(qtyavl Using "-----------#.##"),fdel$ !available
	Endif
	if custom_customer$="ZEPHYR"
		tmp$=tmp$,LTRIM$(W3[9] Using "-----------#.##"),fdel$ !usage
	endif
	!
	call addtostr(e$,rstr$,tmp$+rdel$)
	return ! dx xml
end if
!
IF CUSTOM_CUSTOMER$="ZEPHYR"
	PRINT #0; TAB 1;D$[140,151];
	PRINT #0; TAB 21;D$[9,38];
	PRINT #0; TAB 52;SUNIT$[1,4];
	PRINT #0; USING "-----#.##"; TAB 57;B[9];
	PRINT #0; USING "-------#.##"; TAB 66;A[0];
	PRINT #0; USING "-------#.##"; TAB 77;A[3];
	PRINT #0; USING "-------#.##"; TAB 88;A[2]+TRANSIN_QTY;
	PRINT #0; USING "-------#.##"; TAB 99;QTYBO;
	PRINT #0; USING "------#.##"; TAB 110;W3[9]; ! "cct98125 -zephyr
	IF A1[1]>Q3 PRINT #0; USING "------#.##"; TAB 120;fnu(A1[1]-Q3);
	PRINT #0;""
	PRINT #0; TAB 1;D$[93,112];
	PRINT #0; TAB 21;D$[63,92];
	PRINT #0; USING "-------#.##"; TAB 55;A1[1];
	PRINT #0; TAB 120;"__________"
	PRINT #0;" "
	LET L=L+3
	RETURN
ENDIF !!!!!!!!!!!!!! ZEPHYR 
Print #0; Tab 1;D$[140,151];
IF CUSTOM_CUSTOMER$="GPG"
	PRINT #0; TAB 23;"[";U3$[1,2];"]";
	PRINT #0; TAB 28;D$[9,33];
ELSE
	PRINT #0; TAB 23;D$[9,38];
ENDIF
Print #0; Tab 55;SUNIT$[1,4];
Print #0; Using "-----#.##"; Tab 59;B[9];
Print #0; Using "-------#.##"; Tab 70;A[0];
Print #0; Using "-------#.##"; Tab 80;A[3];
Print #0; Using "-------#.##"; Tab 90;A[2] + TRANSIN_QTY;
Print #0; Using "-------#.##"; Tab 100;QTYBO;
If custom_customer$<>"UPCW"
   IF W7[12]=5
         Print #0; Using "-------#.##"; Tab 110;FNU(w3[11]); ! (rordqty);
	ELSE
		If A1[1] > Q3 Print #0; Using "-------#.##"; Tab 110;FNU(A1[1] - Q3);
   ENDIF
Else
 IF A1[1]>Q3 
   !"cct#234637
   LET RORDQTY=A1[1]-Q3
   if w7[12]=5 let rordqty=w3[11]
   LET CNVTU[0]=pfu1[UnitType]                   
   LET CNVTU[1]=0         
   LET CNVTU[2]=1                   
   LET CNVTA=RORDQTY \ GOSUB CONVERT:  
   LET baseqty=AMOUNT                  
   LET CNVTU[0]=0             
   LET CNVTU[1]=pfu1[20]         !"vendor order u/m                      
   LET CNVTU[2]=1                      
   LET CNVTA=baseQTY \ GOSUB CONVERT:  
   LET rordqty=AMOUNT                  
!   PRINT #0; USING "-------#"; TAB 111;fnu(rordqty);" ";runit$[1,4];
 endif
Endif
Print #0;""
Print #0; Tab 1;D$[93,112];
Print #0; Tab 23;D$[63,92];
Print #0; Using "-------#.##"; Tab 57;A1[1];
If custom_customer$<>"UPCW"
Print #0; Tab 120;"__________"
Print #0;" "
Else ! upcw
	IF A1[1]>Q3    !"and pfu1[20]<>pfu1[UnitType]   
		LET CNVTU[0]=pfu1[20]                                       
		LET CNVTU[1]=0              
		LET CNVTU[2]=1          
		LET CNVTA=fnu(RORDQTY) \ GOSUB CONVERT:    
		LET baseqty=AMOUNT     
		LET CNVTU[0]=0                                    
		LET CNVTU[1]=pfu1[UnitType]       
		LET CNVTU[2]=1                                    
		LET CNVTA=baseQTY \ GOSUB CONVERT: 
		let pqty=amount
		PRINT #0; USING "-------#";tab 114;fnu(pqty);" ";sunit$[1,4]; 
	endif
	PRINT #0;" " 
	PRINT #0; TAB 120;"__________"
	!PRINT #0;" "
Endif
L = L + 3
Return 
!
PRNT_HEDNG: Rem HEADING ROUTINE
!
If J8 return
!
! L = L + 1
If L < L9 Return 
If P <> 0
  If J8
    Input "\15\PRESS <CR> TO CONTINUE "J$
    !!-!! Print 'CS'
  End If 
  Print #0;"\14\";
End If 
P = P + 1
U9$ = " ",U9$
Gosub GET_VENDOR
U9$[2,18] = "DATE ",D8$
U9$[107,119] = WHSE Using "WAREHOUSE ##/"
IF CUSTOM_CUSTOMER$="ZEPHYR"
	IF NOT (WHSE) LET U9$[105,119]="ALL WAREHOUSES/" 		! " custom for zephyr
ENDIF
U9$[120,128] = P Using "PAGE ###"
U9$[45,100] = "M I N  /  M A X   P U R C H A S E   R E P O R T "
Print #0;" - 393 - ";Msc$(3); Tab 52;CNAME$
Print #0;U9$
Print #0; Tab 50;U5$[1,20];
If ALLPRD = 1
  Print #0; Tab 72;"ALL PRODUCTS "
Else 
  Print #0; Tab 72;"PRODUCTS BELOW MIN. "
End If 
If pbvc ! new vend - new page
	Print #0; Using "  VENDOR  ######    ";W2[3];VEND$
Endif
IF CUSTOM_CUSTOMER$="ZEPHYR"
	PRINT #0; USING "  VENDOR  ######    ";W2[3];VEND$
	PRINT #0; TAB 1;"ITEM CODE"; TAB 21;"DESCRIPTION";
	Print #0; TAB 62;"MIN"; TAB 94;"ON PO"; TAB 119;"SUGGESTED"
	PRINT #0; TAB 1;"VENDOR ITEM"; TAB 52;"UM"; TAB 62;"MAX";
	PRINT #0; TAB 70;"ON HAND"; TAB 83;"ON SO"; TAB 94;"+TRS IN";
	PRINT #0; TAB 105;"ON BO"; TAB 114;"USAGE"; TAB 121;"REORDER "
	LET U9$=" ",U9$
	PRINT #0;U9$
	L = 5
	if pbvc let L=6
	If not(pbvc) ! new page - print vendor
		Print #0; Using "  VENDOR  ######    ";W2[3];VEND$
		Print #0;""
		L=L+2 ! added extra lines
		newvend=0
	Endif
	RETURN
ENDIF
Print #0; Tab 1;"ITEM CODE"; 
IF CUSTOM_CUSTOMER$="GPG"
	PRINT #0; TAB 29;"DESCRIPTION";
ELSE
	PRINT #0; Tab 24;"DESCRIPTION";
end if
Print #0; Tab 65;"MIN"; Tab 98;"ON PO"; Tab 117;"SUGGESTED"
Print #0; Tab 1;"VENDOR ITEM"; Tab 55;"UM"; Tab 65;"MAX";
Print #0; Tab 74;"ON HAND"; Tab 87;"ON SO"; Tab 98;"+TRS IN";
Print #0; Tab 109;"ON BO"; Tab 118;"REORDER "
U9$ = " ",U9$
Print #0;U9$
L = 5
if pbvc let L=6
If not(pbvc) ! new page - print vendor
	Print #0; Using "  VENDOR  ######    ";W2[3];VEND$
	Print #0;""
	L=L+2 ! added extra lines
	newvend=0
Endif

Return 
GET_VENDOR: Rem READ VENDOR
K5$ = " ",K5$
K5$ = W2[3] Using "######"
Search #5,2,1;K5$,R5,E !!-!! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #5,R5,0;VEND$;
Else 
  VEND$ = " ",VEND$;VEND$ = "NOT ON FILE"
End If 
Return 

L_10900: ! ADD USAGE FOR ALL WHSES
LET K2$=" ",K2$;K2$[1,12]=D$[140,151];TTLUSAGE=0
L_10920: SEARCH #18,3,1;K2$,R8,E \ IF E=2 RETURN 
! IF E GOSUB Err_Search:
IF K2$[1,12]<>D$[140,151] RETURN 
GOSUB Read_PrdWhse: 
LET TTLUSAGE=TTLUSAGE+W3[9]
GOTO L_10920:

READ_PRDWHSE: Rem READ WHPR FILE
Mat Read #18,R8,0;W1$;
Mat Read #18,R8,38;W2;
Mat Read #18,R8,78;W3;
Mat Read #18,R8,228;W5;
Mat Read #18,R8,420;W0;
Mat Read #18,R8,696;W7;
Return 
SRTLOOP_DONE: Rem OUT OF HERE
If Not(J8) Goto OUTEND
!!-!! Input "\15\PRESS <CR> TO EXIT "J$
Goto OUTEND
!
CONVERT_STUFF: Rem "==================================== converts
CNVTU[0] = 0
CNVTU[1] = PFU1[UnitType]
CNVTU[2] = 1
CNVTA = B[9] \ Gosub CONVERT
B[9] = AMOUNT
CNVTA = A1[1] \ Gosub CONVERT
A1[1] = AMOUNT
CNVTA = w3[11] \ Gosub CONVERT
w3[11] = AMOUNT
CNVTA = QTYBO \ Gosub CONVERT \ QTYBO = AMOUNT
CNVTA = TRANSIN_QTY \ Gosub CONVERT \ TRANSIN_QTY = AMOUNT
For X = 0 To 3
  CNVTA = A[X] \ CNVTU[2] = 1 \ Gosub CONVERT
  A[X] = AMOUNT
Next X
if custom_customer$="ZEPHYR"
	LET CNVTA=TTLUSAGE \ LET CNVTU[2]=1 \ GOSUB Convert: ! " cct98125-zephyr
	LET W3[9]=AMOUNT ! "usage rate						 ! " cct98125-zephyr
ENDIF
If PFU1[UnitType] = -1 Let SUNIT$ = "CWT " \ Goto TISDONE
If PFU1[UnitType] = -2 Let SUNIT$ = "LOT " \ Goto TISDONE
If PFU1[UnitType] = -3 Let SUNIT$ = "LB  " \ Goto TISDONE
If PFU1[UnitType] > 0 Mat Read #7,PFU1[UnitType],10;SUNIT$;
TISDONE: ! upcw reorder um
IF PFU1[20]=-1 LET RUNIT$="CWT "                              
IF PFU1[20]=-2 LET RUNIT$="LOT "                              
if pfu1[20]=-3 let Runit$="LB  "                              
IF PFU1[20]>0 MAT  READ #7,PFU1[20],10;RUNIT$; 
Return 
GET_PRDWHSE: Rem "========================= read Single prodwhse record
LET TTLUSAGE=0   ! cct  cct98125 - zephyr  
K2$ = D$[140,151] \ K2$[13] = WHSE Using "##"
Search #18,2,1;K2$,R8,E !!-!! \ If E > 1 Gosub ERR_SEARCH
If E Return 
Gosub READ_PRDWHSE
If W0[0] If W0[0] = 1 Return 
A[3] = W3[2]
B[9] = W3[3]
A[0] = W3[0]
A1[1] = W3[4]
If W1$[13,15] <> "  " Let D$[93,112] = W1$[13,32]
A[2] = W3[1]
TTLUSAGE=W3[9]      ! " cct98125 - zephyr 
Return 1
GET_TRANSQTY: Rem ADD UP TRANSFER QTY
TRANSIN_QTY = 0
KTR$ = " ",KTR$;KTR$[1,6] = PROD_REC Using "######"
ORDLINE_LOOP: Rem "go thru all for ProdRec
Search #19,3,2;KTR$,LINE_REC,E
If E Return 
X2 = KTR$[1,6]
If PROD_REC <> X2 Return 
Mat Read #19,LINE_REC;ORD_L2;
Mat Read #19,LINE_REC,56;ORD_L6;
Mat Read #19,LINE_REC,168;ORD_L7;
Mat Read #19,LINE_REC,260;ORD_S3;
For X = 0 To 12
  ORD_H0[X] = 0;ORD_H5[X] = 0
Next X
For ST = 1 To 7
  K12$[1,2] = ST Using "##"
  K12$[3,8] = ORD_L2[1] Using "######"
  Search #20,2,1;K12$,R20,E !!-!! \ If E > 1 Gosub ERR_SEARCH
  If E Goto NXT_STATUS
  Mat Read #20,R20,0;ORD_H0;
  Mat Read #20,R20,104;ORD_H5;
  Goto GOT_ORDER
NXT_STATUS: Rem "Next Ord Status (Up to 7)
Next ST
Goto ORDLINE_LOOP
GOT_ORDER: Rem "check if transfer / Whse #
If ORD_H5[7] <> 16 Goto ORDLINE_LOOP
If whse<>0 and ORD_H5[11] <> WHSE Goto ORDLINE_LOOP
TRANSIN_QTY = TRANSIN_QTY + (ORD_L7[2] - ORD_L7[0])
Goto ORDLINE_LOOP
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB	!!-!! was If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!-!! \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!-!! \ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!-!! \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}

OUTEND: Rem EXIT ROUTINE
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 

ERR_TRAP:
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 