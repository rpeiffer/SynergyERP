! >>> Program 135c
!
! description Mass Change Buying Source
! loadsave -w -n 100,10 -o prog/dxport/135c.dl4 src/135c.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem   MX135c   -  gordon graham buying source utility prog 
Rem   author:  rce 06/09/95      
Rem
!   update:  cct98628 01/97- added coding back to change "do not reorder" flag
!            rjs - 06/12/97 - add vendor range to selection cct104028
!            zyc - 09/18/01 - cct150400 unable to edit field 13
!            zyc - 10/15/01 - cct151079 do not allow neg min max value
!            zyc - 01/22/02 - cct153893 new option for do not reorder-no change
!            zyc - 02/08/02 - cct154446 don't prompt for min/max if fld11 is 4|5
!            kag - 04/18/02 - cct156523 correct vendor lookup-use called version
!            kag - 05/28/02 - cct157141 reword do not reorder option and add O
!            zyc - 01/08/04 - cct174724 problem with EOQ 

Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR  3, 2009  11:02:49
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx1/mx135c.src (univ2) [txc] {06522}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub CheckDigits,InpBuf,String,programdump,FindF
Declare Intrinsic Function findchannel
! Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$,openfile

If Err 0 Gosub ERR_TRAP
Dim 1%,SC,SR,CNVTU[2],SRC,COST_LEV[3],COST_SEC,Z9[9],UN[2]
Dim 2%,E1
Dim 3%,UNIT,CNVTA
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],Msg$[500],rstr$[2000] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
Dim Basename1$[128],ReportDir$[128],StatusFile$[256]
Rem {begin src/inc/dim.prod.i}
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim PRFLG$[10],PRMKUPTYP$[4],PIC$[50],PRIML$[12]
Dim 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Dim 1%,PRBASE,PRPARC2[3],PRD1[4],AGEDAY
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 2%,STK[2],FDT[1],PRMKUP[3],PRD0[2]
Dim 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,LBSORD,FUT[1],PRREDI[1],PRD2[3]
Rem {end dim.prod.i}
Rem {begin src/inc/dim.prwh.i}
Dim W1$[32],WH3$[24],WHFLG$[10],WHMKUPTYP$[4],WCOMM$[4]
Dim 2%,W2[9],W7[14],WH7[3],WHLPOOL,WHFDT[1],WHMKUP[3]
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 1%,RESTRICTED,WHBASE,WHPARC2[3]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHMISC2[7]
Dim 3%,WHFUT[2],VLIST,WHREDI[1],WHLBS[1]
Rem {end dim.prwh.i}
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
DIM_VARS: Rem
Dim 1%,BWH,EWH,BICLASS,EICLASS
Dim 1%,ARMONTH,MTHDAYS,UNT,MMO,AVGMTHDAYS
DIM 1%,HOLDFLAG,PORTSCR,AA1$[40],file$[80],cmd$[80],line_$[200]
Dim 2%,LTIME,SALE,SSTOCK,BVEND,EVEND,VEND
Dim 2%,MINFAC,MAXFAC,BDAYS[24]
Dim 3%,R[99],FACTOR,AMOUNT,R_cpid
Dim K2$[16],K3$[14],P9$[50],P60$[50],P61$[256],BCOMM$[4],ECOMM$[4],K_cpid$[50]
Dim BPROD$[12],EPROD$[12],V1$[10],W9$[4],I$[12],u9$[50]
Dim Custom_customer$[30]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

OPEN_FILES: Rem          opens files here
For J = 2 To 4
  Read J1
  If J1 = -1 Goto NXTF
  Read #1,88,Abs(J1);J$;
  If J1 > 0 Open #J,J$ Else Ropen #J,J$
NXTF: Rem
Next J
Data "1792","1744","-2288"
Mat Read #1,60,50;P60$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
if P61$[111,111] = "Y"
	ch_cpid = OpenFile(-9928,IntCo) \ if ch_cpid=-1 Error 42 ! cpi detail
end if
Read #1,0,120;ARMONTH;
Mat Read #1,11,0;BDAYS;
MTHDAYS = BDAYS[ARMONTH]
If MTHDAYS <= 0 Let MTHDAYS = 21
avgMthDays=MTHDAYS  ! WAS 30 AVGMTHDAYS = 30
!"cct208298                                                                 
AA1$=UCase$(userid$)                                              
If custom_customer$="MORRISETTE" ! may not work on any other customer/system!!!
	LET FILE$="/v/reports/dnrlog" 
	MDNRLog=1 ! dflt=y
	CALL FindF(file$,FOUND)
	IF NOT(FOUND)
	   LET CMD$="touch "+file$
	   TRy
		SYSTEM CMD$
		Mdnrlog=1
	   Else
		MDNRLog=0
	   End try
	ENDIF
	If MDNRLog
		MDNRch=findchannel()
		Try
			OPEN #MDNRch,file$
			MDNRLog=1
		Else
			MDNRLog=0
		End try
		IF NOT(FOUND)
		   PRINT #MDNRch;"      The DO NOT RECORDER FLAG Log           ";MSC$(0)         
		   print #MDNRch;tab 0;"Access Code"; tab 12;"Old Flag"; tab 22;"New Flag";     
		   print #MDNRch;tab 40;"Prod code";tab 60;"whse";tab 70;"Date changes";        
		   print #MDNRch;tab 100;"Program#"                                             
		endif 
	Endif
Endif ! custom morrisette - dnr log
I$="}}}}}}}}}}}}" ! END
INIT_VARS: Rem sort flags
MINFAC = 0;MAXFAC = 0
FLG = 0;ReturnStatus=0
CFLG = 0;Message$=""
DFLG = 0; VFLG = 0
MMFLG = 0
MMO = 0
PFLG = 0
WFLG = 0
BPROD$ = "           1";EPROD$ = "ZZZZZZZZZZZZ";BCOMM$ = "   0";ECOMM$ = "ZZZZ"
BVEND = 1;EVEND = 999999
CH_PRWH = 3;CH_PROD = 2;BWH = 0;EWH = 99;BICLASS = 0;EICLASS = 99
MAIN: Rem
!Gosub PRINT_RANGES
FLG = 0
!Goto FLD1 \ FLG = 1
!Goto INPUTS
PRINT_RANGES: Rem
!Print 'CS'
!Print @0,0;"-MX135C-";@20,0;"Mass Change Buying Source"
!Print @2,1;"1> Enter Starting Warehouse Number :";
!Print @2,2;"2> Enter Ending Warehouse Number   :";
!Print @2,4;"3> Enter Starting Commodity Code   :";
!Print @2,5;"4> Enter Ending Commodity Code     :";
!Print @2,7;"5> Enter Starting Inventory Class  :";
!Print @2,8;"6> Enter Ending Inventory Class    :";
!Print @2,10;"7> Enter Starting Product Code     :";
!Print @2,11;"8> Enter Ending Product Code       :";
!Print @2,13;"9> Enter Starting Vendor Code      :";
!Print @1,14;"10> Enter Ending Vendor Code        :";
!Print @1,16;"11> Enter Buying Source             :";
! conditional prompts
! 12> Min Factor/days  Max factor/days (BS=6 only)
! 12> set minmax to zero (BS<>6)
! 13> Chg Source or Minmax (B6=6 only)
! 14> Do not reorder (all)
! 15> Season start / end month (BS=3 only)
!Return 
INPUTS: Rem
!X2 = Spc(14) \ If X2 Goto INPUTS
!Print @0,23;"Enter #:field to edit  U: update  E: exit  ";'CL';
!Input Len 16384 + 2;""X$ \ Call String(1,X$)
!If X$ = "U" Goto UPDATE
!If X$ = "E" Goto OUTEND
!If X$ = "" Goto INPUTS
!F = 0 \ If Err 0 Let F = Spc(8)
!Call CheckDigits(X$)
!If F Goto INPUTS
!If Err 0 Gosub ERR_ESCAPE
!X = X$
!If X <= 10 Let J5$ = "Enter range, <CR> for default"
!If X >= 11 Let J5$ = "Enter % to be used for calculation"
!FLG = 1
!On X Gosub FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,FLD7,FLD8
!If BS <> 6
!  On X - 8 Gosub FLD9,FLD10,FLD11,FLD12,FLD13A,FLD14
!Else 
!  On X - 8 Gosub FLD9,FLD10,FLD11,FLD12,FLD13A,FLD14A,FLD14
!End If 
!Goto INPUTS
FLD1: Rem
!J5$ = "Enter starting warehouse, <CR> for all, or  E: Exit"
!J1$ = BWH;J0$ = "1 00034001"
!Gosub ISINPUT
!If J4$ = "E" Goto OUTEND
!If J4$ = ""
!  BWH = 0;EWH = 99;WFLG = 0
!  Print @40,1;BWH;'CL';
!  Print @40,2;EWH;'CL';
!  If FLG Return Else Goto FLD3
!End If 
Call Dxget("BWH",j$)
BWH = J$
!Print @40,1;BWH;'CL';
If BWH Let WFLG = 1
J5$ = " ",J5$
FLD2: Rem
!J5$ = "Enter ending warehouse, or <CR> for last"
!J1$ = EWH;J0$ = "1 00034002"
!Gosub ISINPUT
call dxget("EWH",J$)
EWH = J$
if EWH let WFLG=1 ! could be 0 to 8
If Trim$(J$) = ""
  EWH = 99
  !Print @40,2;EWH;'CL';
  !If FLG Return Else Goto FLD3
End If 
!Print @40,2;EWH;'CL';
If BWH > EWH
  Message$ = Message$+"Invalid warehouse range  "
  Returnstatus=1
End If 
!If FLG Return 
FLD3: Rem
!J5$ = "Enter starting commodity code, <CR>: All, or  -: Help"
!J1$ = BCOMM$;J0$ = "2 00044004"
!Gosub ISINPUT
!If J4$ = ""
!  BCOMM$ = "   0";ECOMM$ = "ZZZZ";CFLG = 0
!  Print @40,4;BCOMM$;'CL';
!  Print @40,5;ECOMM$;'CL';
!  If FLG Return Else Goto FLD5
!End If 
!If J$[1,1] = "-" Swap 1,"sw684" \ Goto FLD3
!Gosub CHECK_COMM \ Goto FLD3
Call dxget("BCOMM",J$)
BCOMM$ = UCase$(J$)+B$
!Print @50,4;V1$;'CL';
If Trim$(BCOMM$) <> "" Let CFLG = 1 ! they entered a start commodity
J5$ = " ",J5$
FLD4: Rem
!J5$ = "Enter ending commodity code, <CR> for last, or  -: Help"
!J1$ = ECOMM$;J0$ = "2 00044005"
!Gosub ISINPUT
!If J$[1,1] = "-" Swap 1,"sw684" \ Gosub FLD4
!If J4$ <> "" Gosub CHECK_COMM \ Goto FLD4
Call dxget("ECOMM",J$)
ECOMM$ = UCase$(J$)+I$
if trim$(J$)<>"" let cflg=1 ! could be blank to xx
If Trim$(J$) = ""
  ECOMM$ = "ZZZZ"
  !Print @40,5;ECOMM$;'CL';
  !If FLG Return Else Goto FLD5
End If 
!If J4$ = "" Let V1$ = " ",V1$
!Print @40,5;ECOMM$;@50,5;V1$;'CL';
J5$ = " ",J5$
If BCOMM$ > ECOMM$
  Message$ = Message$+ "Invalid commodity code range  "
  ReturnStatus=1
End If 
!If FLG Return 
FLD5: Rem
!J5$ = "Enter starting inventory class code, or <CR>: All"
!J1 = BICLASS;J0$ = "3000024007"
!Gosub ISINPUT
!If J4$ = ""
!  BICLASS = 0;EICLASS = 99
!  Print @40,7;BICLASS;'CL';
!  Print @40,8;EICLASS;'CL';
!  If FLG Return Else Goto FLD7
!End If 
Call dxget("BICLASS",tmp$)
J1=tmp$
BICLASS = J1
!Print @40,7;BICLASS;'CL';
!J5$ = " ",J5$
FLD6: Rem
!J5$ = "Enter ending inventory class code, or <CR> for last"
!J1 = EICLASS;J0$ = "3000024008"
!Gosub ISINPUT
call dxget("EICLASS",tmp$)
J1=tmp$
EICLASS = J1
If Trim$(tmp$) = ""
  EICLASS = 99
  !Print @40,8;EICLASS;'CL';
  !If FLG Return Else Goto FLD7
End If 
If BICLASS > EICLASS
  Message$ = Message$+"Invalid class code range  "
  ReturnStatus=1
End If 
!Print @40,8;EICLASS;'CL';
!If FLG Return 
FLD7: Rem
!J5$ = "Enter starting product code, <CR>: All, or  -: Help"
!J1$ = BPROD$;J0$ = "2 00124010"
!Gosub ISINPUT
!If J4$ = ""
!  BPROD$ = "           1";EPROD$ = "ZZZZZZZZZZZZ";PFLG = 0
!  Print @40,10;BPROD$;'CL';
!  Print @40,11;EPROD$;'CL';
!  If FLG Return Else Goto FLD9
!End If 
!Gosub PRODSCAN \ Goto FLD7
call dxget("BPROD",j$)
BPROD$ = UCase$(J$)+B$
If Trim$(BPROD$) <> "" Let PFLG = 1 ! they entered a start product
J5$ = " ",J5$
FLD8: Rem
!J5$ = "Enter ending product code, <CR> for last, or  -: Help"
!J1$ = EPROD$;J0$ = "2 00124011"
!Gosub ISINPUT
Call Dxget("EPROD",J$)
If RTrim$(J$) = ""
  J$ = "ZZZZZZZZZZZZ"
  !Print @40,11;EPROD$;'CL';
  !If FLG Return Else Goto FLD9
Else ! check blank start - entered end
 let PFLG=1 ! 
End If 
!Gosub PRODSCAN \ Goto FLD8
EPROD$ = UCase$(J$)+I$
!Print @40,11;EPROD$;'CL';
If BPROD$ > EPROD$
  Message$ = Message$+"Invalid product code range  "
  Returnstatus=1
End If 
J5$ = " ",J5$
!If FLG Return 
FLD9: Rem
!J5$ = "Enter starting vendor code, <CR>: All, or  -: Help"
!J1$ = BVEND;J0$ = "1 00064013"
!Gosub ISINPUT
Call dxget("BVEND",J$)
!If J4$ = ""
!  BVEND = 1;EVEND = 999999;VFLG = 0
!  Print @40,13;BVEND;'CL';
!  Print @40,14;EVEND;'CL';
!  If FLG Return Else Goto FLD11
!End If 
!If J4$[1,1] = "-" Call "MXVEND5",J4$ \ Goto FLD9
BVEND = J$
!Print @40,13;BVEND;'CL';
If BVEND Let VFLG = 1 ! entered nonzero start vendor
J5$ = " ",J5$
FLD10: Rem
!J5$ = "Enter ending vendor code, <CR> for last, or  -: Help"
!J1$ = EVEND;J0$ = "1 00064014"
!Gosub ISINPUT
!If J4$[1,1] = "-" Call "MXVEND5",J4$ \ Goto FLD10
call dxget("EVEND",J$)
EVEND = J$
If Trim$(J$) = ""
  EVEND = 999999
  !Print @40,14;EVEND;'CL';
  !If FLG Return Else Goto FLD11
Else
	let VFLG=1
End If 
!Print @40,14;EVEND;'CL';
If BVEND > EVEND
  Message$ = Message$+"Invalid vendor code range  "
  Returnstatus=1
End If 
!If FLG Return 
FLD11: Rem     buying source
FLG = 0;RFLG = 0;MMFLG = 0
MMO = 0
!J5$ = "1: EOQ  2: Inv Class  3: Seasonal  4: Start Up  5: Arbitrary  6: MIN/MAX"
!Print @40,16;'CE';
!J1 = 0;J0$ = "3000014016"
!Gosub ISINPUT
Call dxget("BS",J$)
J1=J$
BS = J1
If BS = 1 Goto SetVar ! Print @45,16;"EOQ";'CL'; \ Goto SETVAR
If BS = 2 Goto SetVar ! Print @45,16;"Inv Class";'CL'; \ Goto SETVAR
If BS = 3 Goto SetVar ! Print @45,16;"Seasonal";'CL'; \ Goto SETVAR
If BS = 4 Goto SetVar ! Print @45,16;"Start Up";'CL'; \ Goto SETVAR
If BS = 5 Goto SetVar ! Print @45,16;"Arbitrary";'CL'; \ Goto SETVAR
If BS = 6 Goto FLD13 ! Print @45,16;"Min/Max";'CL'; \ Goto FLD13
Message$=Message$+"Invalid Buying Source: "+Str$(BS)+"  "
e$=Message$ ! it uses e$
returnstatus=1
goto ERR_MSG ! get out NOW!
SETVAR: Rem  4 - 5
MMFLG = 0
MINFAC = 99
MAXFAC = 99
! Goto FLD12? it's NEXT LINE!
FLD12: Rem  1 - 5
If BS > 5 Goto FLD13
!Print @1,18;"12> Set Min/Max to 0?  (Y/N)        :";'CL';
!J5$ = "Enter (Y/N)"
!J1$ = "N";J0$ = "2200014018"
!Gosub ISINPUT
call dxget("MMFLG",J$)
If J$ = "" Let J$ = "N"
If J$ <> "Y" If J$ <> "N" ! Goto FLD12
	Message$=Message$+"Invalid answer. Y or N Only  "
	Returnstatus=1
Endif
If J$ = "Y" Let MMFLG = 1
If J$ = "N" Let MMFLG = 0
!If MMFLG Print @40,18;"Yes";'CL'; Else Print @40,18;"No ";'CL';
J5$ = " ",J5$
!If FLG Return 
If BS = 3 Goto FLD15
If BS > 3 Goto FLD14
Goto Check_INPUTS
FLD13: Rem  6  Only
If BS <> 6 Goto FLD13A
!Print @0,17;"Enter factor to be applied to average monthly usage to develop Min/Max levels";
!Print @1,18;"12> Enter Min Factor (Neg qty=days) :";'CL';
!J5$ = "Enter months of demand for minimum level, 99=no change, 0=set to zero"
!J1 = 1;J0$ = "4200054118"
!Gosub ISINPUT
Call dxget("MINFAC",tmp$)
J1=tmp$
MINFAC = J1
!Print @40,18;J1 Using "-##.##";'CL';
If J1 < 0 ! "Entered Days
  J1 = Abs(J1)
  X2 = FNR(J1 / AVGMTHDAYS)
  MINFAC = X2
End If 
!If MINFAC = 0
!  Goto FLD13A
!End If 
!If FLG Return 
FLD13A: Rem
If BS < 6 Goto FLD14
!Print @1,19;"13> Enter Max Factor (Neg qty=days) :";'CL';
!J5$ = "Enter months of demand for maximum level, 99=no change, 0=set to zero"
!J1 = 1;J0$ = "4200054119"
If MMFLG
  MAXFAC = 0
!  Print @40,19;MAXFAC Using "###.##";'CL';
  Goto FLD14A
End If 
!Gosub ISINPUT
call dxget("MAXFAC",tmp$)
J1=tmp$
MAXFAC = J1
!Print @40,19;MAXFAC Using "-##.##";'CL';
If J1 < 0 ! "Entered Days
  J1 = Abs(J1)
  X2 = FNR(J1 / AVGMTHDAYS)
  MAXFAC = X2
End If 
J5$ = " ",J5$
!If FLG Return Else Goto FLD14A
FLD14A: Rem "only change existing min/max qty or mass change
If BS = 3 GOTO FLD15 ! And X = 14 Goto FLD15
If BS <> 6 Goto FLD14
!Print @1,20;"14> Change Source or Only Min/Max qty? ";'CL';
!J5$ = "Enter  S: to change source or  M: for only min/max qty"
!J1$ = "S" \ If MMO Let J1$ = "M"
!J0$ = "2 00 14020"
!Gosub ISINPUT
Call dxget("MMO",J$)
If J$ <> "S" And J$ <> "M" ! Goto FLD14A
	Returnstatus=1
	Message$=Message$+"Invalid answer. M or S Only  "
Endif
MMO = 0
If J$ = "M" Let MMO = 1
!If FLG Return Else Goto FLD14
FLD14: Rem  do not reorder prompt
If BS = 3 Goto FLD15 !  And X = 13 Goto FLD15
If BS < 5 Goto FLD15A
!If BS <> 6
!  Print @1,21;"13> Change Do Not Reorder to Y/N/O or <CR> for No change:";'CL';
!Else 
!  Print @1,21;"15> Change Do Not Reorder to Y/N/O or <CR> for No change:";'CL';
!End If 
!J5$ = "Enter  Y: Yes  N: No  O: Occasional or <CR>: No Change "
!J1$ = " ";J0$ = "2200015921"
!Gosub ISINPUT
Call dxget("RFLG",j$)
if J$="-" let j$=" "
If J$ <> "Y" And J$ <> "N" And J$ <> "O" And J$ <> "" And J$ <> " " ! Goto FLD14
	ReturnStatus=1
	Message$=Message$+"Answer is Y/N/O/no change Only  "
Endif
If J$ = "Y" Let RFLG = 99
If J$ = "N" Let RFLG = 1
If J$ = "O" Let RFLG = 2
If J$ = "" Or J$ = " " Let RFLG = 0
!If RFLG = 99 Print @59,21;"Yes";'CL';
!If RFLG = 1 Print @59,21;"No ";'CL';
!If RFLG = 2 Print @59,21;"Occasional ";'CL';
!If Not(RFLG) Print @59,21;"No Change";'CL';
J5$ = " ",J5$
!If FLG Return Else Goto INPUTS
Goto Check_inputs
FLD15: Rem   seasonal dates
If BS <> 3
  Goto Check_inputs ! If FLG Return Else Goto INPUTS
End If 
!Print @1,19;"13> Enter start of season month     :";'CL';
!J5$ = "Enter MM <CR>: no change"
!J1 = SDATE;J0$ = "3 00024019"
!Gosub ISINPUT
Call dxget("SDATE",tmp$)
J1=tmp$
SDATE = J1
If J1=0 ! J4$ = ""
  !If Not(SDATE) Print @50,19;"No Change";'CL';
  DFLG = 0
End If 
!If FLG Return 
FLD15A: Rem
If BS <> 3
  Goto Check_InputS ! If FLG Return Else Goto INPUTS
End If 
!Print @1,20;"14> Enter end of season month       :";'CL';
!J5$ = "Enter date format MM <CR>: no change"
!J1 = EDATE;J0$ = "3 00024020"
!Gosub ISINPUT
call dxget("EDATE",tmp$)
J1=tmp$
EDATE = J1
If J1 = 0
  !If Not(EDATE) Print @50,20;"No Change";'CL';
Else 
  DFLG = 1
End If 
J5$ = " ",J5$
!If FLG Return 
!Goto INPUTS
Check_Inputs: ! see if okay
If ReturnStatus<>0 ! not okay
	e$=Message$ ! it uses e$
	Goto Err_Msg
Endif
UPDATE: Rem
! due to timeout issue - NOW SEND TO STATUS FILE!!
ReportDir$ = "REPORTDIR" \ System 28,ReportDir$
	BaseName1$ = "masschange_135c_"+dateusing$(Tim#(0),"YYMMDDHHNNSS")
	StatusFile$ = ReportDir$ + "/"+BaseName1$
	Call FindF(StatusFile$,tmp)
	If tmp Kill StatusFile$
	StatChan = FindChannel() ! channel to build text file need fixed channel
	! Try Close #88 Else Rem
	Try
		Build #StatChan,StatusFile$ As "TEXT"
	Else
		returnstatus=1
		let e$="Error in Building Status File "
		goto ERR_MSG
	end TRY
	Try Close #StatChan Else Rem
	Try
		Open #StatChan,StatusFile$
	else
		returnstatus=1
		let e$="Error in Opening Status File "
		goto ERR_MSG
	end TRY
	Print #StatChan;"Update Process Started..."
	! PAUSE 20
	e = AddToMYReports(BaseName1$) 
	if e<0
		e$="Error adding to my reports!" 
		returnstatus=1
		goto ERR_MSG
	endif
	returnstatus=0 ! or is it 1?
	message$="Please check under My Reports "+basename1$+" for status and completion"
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
	Call AddToStr(e$,rstr$,WebStr$)                            
	Call SetOutPut(e$,rstr$)
!Print @0,23;"Records updated...";'CL';
K2$ = " ",K2$;K3$ = " ",K3$
Numscan=0
If CFLG
  K2$[1,4] = BCOMM$;K2$[5] = BPROD$[1,12]
Else 
  K2$ = BPROD$[1,12]
End If 
!  goto nextstep testing
! still needs check of match! (dropping char 12 of product no good!)
if cflg ! comm/beg prod
	Search #2,2,3;K2$,REC_PROD,E \ If E > 2 Gosub ERR_SEARCH
	if not(e) ! a match!
		Gosub READ_PROD
		K3$ = " ",K3$;K3$[1,12] = K2$[5,16]
		goto gotfrstone
	Endif
Else ! prod
	Search #2,2,1;K2$,REC_PROD,E \ If E > 2 Gosub ERR_SEARCH
	if not(e) ! a match!
		Gosub READ_PROD
		K3$ = " ",K3$;K3$[1,12] = K2$[1,12]
		goto gotfrstone
	Endif
Endif
SEARCHP: Rem 
	If CFLG
		Search #2,3,3;K2$,REC_PROD,E \ If E > 2 Gosub ERR_SEARCH
		If E Goto NEXTSTEP
		If K2$[1,4] > ECOMM$ Goto NEXTSTEP
		If PFLG ! entered start prod - check it
			if k2$[5,16] < BProd$ goto searchp ! too low
			If K2$[5,16] > EPROD$ Goto SEARCHP ! too high
		Endif
		Gosub READ_PROD
		K3$ = " ",K3$;K3$[1,12] = K2$[5,16]
	Else 
		Search #2,3,1;K2$,REC_PROD,E \ If E > 2 Gosub ERR_SEARCH
		If E Goto NEXTSTEP
		If PFLG If K2$[1,12] > EPROD$ Goto SEARCHP
		Gosub READ_PROD
		K3$ = " ",K3$;K3$[1,12] = K2$[1,12]
	End If
	if P61$[111,111] = "Y"
		! don't mess with anything on CPI contracts
		K_cpid$ = " ",K_cpid$
		if cflg
			K_cpid$[1,12] = k2$[5,16]
		else
			K_cpid$[1,12] = k2$[1,12]
		end if
		search #ch_cpid,3,2;K_cpid$,R_cpid,e \ if e>2 GOSUB ERR_SEARCH
		if not(e)
			if cflg
				if K_cpid$[1,12] = k2$[5,16] goto SEARCHP
			else
				if K_cpid$[1,12] = k2$[1,12] goto SEARCHP
			end if
		end if
	end if
	Gotfrstone: ! found match of beginning
	numscan=numscan+1
	if not(fra(numscan/500))
		tmp$="Scanned "+Str$(numscan)+" Product "+k3$
	endif
	SEARCHW: Rem
		Search #3,3,1;K3$,REC_PRWH,E \ If E > 2 Gosub ERR_SEARCH
		If E Goto SEARCHP
		If K3$[1,12] <> A$[140,151] Goto SEARCHP
		If K3$[13,14] > "98" Goto SEARCHW ! don't do whse 99?
		If WFLG
			Mat Read #3,REC_PRWH,32;W1;
			If W1[0] < BWH Goto SEARCHW
			If W1[0] > EWH Goto SEARCHP
		End If 
		Gosub READ_PRWH
		LET HOLDFLAG=W0[0]
		If W7[6] < BICLASS Or W7[6] > EICLASS Goto SEARCHW
		If VFLG
			VEND = W2[3] \ If Not(VEND) Let VEND = B[24]
			If VEND < BVEND Goto SEARCHW
			If VEND > EVEND Goto SEARCHW
		End If 
		If MMFLG
			W3[3] = 0
			W3[4] = 0
			WH7[2] = 0
			WH7[3] = 0
		End If 
		If MINFAC = 0
			W3[3] = 0
			WH7[2] = 0
		End If 
		If MAXFAC = 0
			W3[4] = 0
			WH7[3] = 0
		End If 
		If Not(MMO) ! "change buying source
			W7[12] = BS
		Else ! "only change min/max on source match otherwise Next
			If W7[12] <> BS Goto SEARCHW
		End If 
		If BS = 3 !"seasonal
			W0[1] = 1
			If DFLG
				If SDATE Let W0[2] = SDATE
				If EDATE Let W0[3] = EDATE
			End If 
		Else 
			W0[1] = 0
		End If 
		If BS = 6 !"bs>3
			If Not(MMFLG)
				If MINFAC <> 99 And MINFAC <> 0
					If W3[9] > 0
						If custom_customer$<>"HTBERRY"
							W3[3] = W3[9] * MINFAC
						Else
							w3[3]=w3[9]*(minfac+w2[0])  !"forecast*(minfac+avg lead time)=minamt
						Endif
					Else 
						W3[3] = 0
					End If 
					WH7[2] = MINFAC
					if Custom_customer$="HTBERRY"
						If minfac
							let whfut[2]=w2[0]
							rem save the avg lead time if used in the calc
						else
							whfut[2]=0
						endif
					Endif
					AMOUNT = W3[3] \ Gosub L_6910
					W3[3] = AMOUNT
				End If 
				If MAXFAC <> 99 And MAXFAC <> 0
					If W3[9] > 0
						W3[4] = W3[9] * MAXFAC
					Else 
						W3[4] = 0
					End If 
					WH7[3] = MAXFAC
					AMOUNT = W3[4] \ Gosub L_6910
					W3[4] = AMOUNT
				End If 
			End If 
			If RFLG = 99
				W0[0] = 1
			Else 
				If RFLG = 1
					W0[0] = 0
				Else 
					If RFLG = 2
						W0[0] = 2
					End If 
				End If 
			End If 
		End If 
		WRITEW: Rem
		K = K + 1
		if not(fra(k/200))!
			tmp$="Updated "+Str$(k)+" Product "+k3$
			print #statchan;tmp$
		endif
		! Print @18,23;K Using "######";
		Mat Write #3,REC_PRWH,420;W0;
		Mat Write #3,REC_PRWH,78;W3;
		Mat Write #3,REC_PRWH,696;W7;
		Mat Write #3,REC_PRWH,428;WH7;
		if custom_customer$="HTBERRY"
			mat write #3,rec_prwh,896;whfut;
		Endif
		If custom_customer$="MORRISETTE"
			IF MDNRLog and HOLDFLAG<>W0[0]                                              
			U9$=MSC$(0)
			LOOP_LOG: READ #MDNRch;LINE_$; \ IF LINE_$ GOTO LOOP_LOG:          
			print #MDNRch;tab 0;aa1$[1,10];                                  
			if holdflag=1 print #MDNRch;tab 12;"Y";                          
			if holdflag=0 print #MDNRch;tab 12;"N";                          
			if holdflag=2 print #MDNRch;tab 12;"O";                          
			if wh0[0]=1 print #MDNRch;tab 22;"Y";                            
			if wh0[0]=0 print #MDNRch;tab 22;"N";                            
			if wh0[0]=2 print #MDNRch;tab 22;"O";                            
			print #MDNRch;tab 40;w1$[1,12];tab 60;w1[0];tab 70;u9$[1,30];    
			print #MDNRch;tab 100;"135C"                                     
			ENDIF
		Endif ! custom - morrisette - dnr log
	Goto SEARCHW
READ_PRWH: Rem
Rem {begin src/inc/read.prwh.i}
Mat Read #CH_PRWH,REC_PRWH,0;W1$
Mat Read #CH_PRWH,REC_PRWH,32;W1
Mat Read #CH_PRWH,REC_PRWH,38;W2
Mat Read #CH_PRWH,REC_PRWH,78;W3
Mat Read #CH_PRWH,REC_PRWH,228;W5
Mat Read #CH_PRWH,REC_PRWH,384;WHPARC
Read #CH_PRWH,REC_PRWH,396;WHLPOOL
Mat Read #CH_PRWH,REC_PRWH,400;WCOMM$
Read #CH_PRWH,REC_PRWH,404;FCWGT
Mat Read #CH_PRWH,REC_PRWH,420;W0
Mat Read #CH_PRWH,REC_PRWH,428;WH7
Mat Read #CH_PRWH,REC_PRWH,444;WH8
Mat Read #CH_PRWH,REC_PRWH,540;WH9
Mat Read #CH_PRWH,REC_PRWH,696;W7
Mat Read #CH_PRWH,REC_PRWH,756;WH3$
Mat Read #CH_PRWH,REC_PRWH,780;WHLV
Read #CH_PRWH,REC_PRWH,798;WHRPLN
Mat Read #CH_PRWH,REC_PRWH,800;WHMISC
Mat Read #CH_PRWH,REC_PRWH,842;WHLM
Mat Read #CH_PRWH,REC_PRWH,846;WHMISC2
Read #CH_PRWH,REC_PRWH,894;RESTRICTED
Mat Read #CH_PRWH,REC_PRWH,896;WHFUT
Mat Read #CH_PRWH,REC_PRWH,914;WHFDT
Read #CH_PRWH,REC_PRWH,922;VLIST
Mat Read #CH_PRWH,REC_PRWH,928;WHFLG$
Read #CH_PRWH,REC_PRWH,938;WHBASE
Mat Read #CH_PRWH,REC_PRWH,940;WHMKUP
Mat Read #CH_PRWH,REC_PRWH,956;WHMKUPTYP$
Mat Read #CH_PRWH,REC_PRWH,960;WHPARC2
Mat Read #CH_PRWH,REC_PRWH,968;WHREDI
Mat Read #CH_PRWH,REC_PRWH,980;WHLBS
Rem {end read.prwh.i}
Return 
READ_PROD: Rem
Rem {begin src/inc/read.prod.i}
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,596;PRPARC
Mat Read #CH_PROD,REC_PROD,620;LM
Mat Read #CH_PROD,REC_PROD,624;PR_PO
Mat Read #CH_PROD,REC_PROD,628;AGEDAY
Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,664;LBSORD
Mat Read #CH_PROD,REC_PROD,670;U4
Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,846;PFTB
Read #CH_PROD,REC_PROD,854;UPCT
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Read #CH_PROD,REC_PROD,938;PF_LOAD2
Mat Read #CH_PROD,REC_PROD,944;PR_A2$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Mat Read #CH_PROD,REC_PROD,1018;PFN
Mat Read #CH_PROD,REC_PROD,1030;STK
Mat Read #CH_PROD,REC_PROD,1048;FDT
Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
Mat Read #CH_PROD,REC_PROD,1066;PRBASE
Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
Mat Read #CH_PROD,REC_PROD,1088;FUT
Mat Read #CH_PROD,REC_PROD,1100;PRPARC2
Mat Read #CH_PROD,REC_PROD,1108;PRREDI
Mat Read #CH_PROD,REC_PROD,1120;PIC$
Mat Read #CH_PROD,REC_PROD,1270;PRD0
Mat Read #CH_PROD,REC_PROD,1282;PRIML$
Mat Read #CH_PROD,REC_PROD,1294;PRD1
Mat Read #CH_PROD,REC_PROD,1304;PRD2
Rem {end read.prod.i}
Return 
L_6900: Rem ROUND UP TO QTY IN Vendor Ordering / PURCHASING UM
For UNT = 1 To 7
  If PFU1[20] And PFU1[UNT] = PFU1[20] Goto L_6925
Next UNT
L_6910: Rem "Only to Purchasing Units
For UNT = 1 To 7
  If PFU1[UNT] = PFU1[8] Goto L_6925
Next UNT
FACTOR = 1 \ Goto L_6935
L_6925: If PFU1[UNT] < 0 Let FACTOR = 1 \ Goto L_6935
FACTOR = PFU2[UNT - 1] \ If FACTOR <= 0 Let FACTOR = 1
L_6935: If Fra(AMOUNT / FACTOR) ! " >=.5  ALWAYS ROUND UP
  AMOUNT = Int(1 + (AMOUNT / FACTOR)) * FACTOR
End If 
Return 
NEXTSTEP: Rem
Unlock #2,#3
!Input "      Press <CR> to Exit"X$
OUTEND: Rem
!Close 
!Chain "mx000"
ReturnStatus=0 ! 0= ok in blockid, is =1 elsewhere
Message$="Complete - "+Str$(K)+" Product & Warehouse Records Updated"
 !call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
 !call AddToStr(e$,rstr$,WebStr$)
 !call SetOutPut(e$,rstr$)
 Print #statchan;message$
 try Call dxclose() else rem
End 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER

ISERRMSG: !
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
ERR_SEARCH: Rem
! If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
if statchan
	print #statchan;e$
endif
call programdump("tmp/135cse!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
  
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}