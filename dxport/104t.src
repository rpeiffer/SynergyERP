! >>> Program 104t
!
! description Customer Labels, Free Form Label
!
! loadsave -w -n 100,10 -o prog/dxport/104t.dl4 src/104t.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 17, 2002  15:21:45
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx1/mx104t.src (univ2) [txc] {51996}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX104T
Rem FREE FORM LABEL PRINT
Rem     tc 4/15/97 cct102201 remove CR from print line
!
Declare Intrinsic Sub InpBuf,String
! - Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
If Err 0 Gosub ERR_TRAP
!
Dim tmp$[800],tmp1$[500],webstr$[500],message$[500]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
!
Dim 1%,E,J0,J2,J3,J4,J5,J6,J8,J9,X1,X$[40]
Dim 2%,X2,U5,U6,U7,U8,PTRNM$[50]
Dim 3%,C4
Dim U5$[10],J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim TEXT1$[30],TEXT2$[30],TEXT3$[30],TEXT4$[30],TEXT5$[30],J5MSG$[30],F$[10]
Dim B1$[142],B2$[142],B3$[142],B4$[142],B5$[142]
Dim P9$[15],2%
! - If Err 0 Rem
U7 = 1 \ C3 = 1
!
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60
If P Let L9 = 22
!
! dx add xport reporting code
DXSetup:
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"104t",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("labels",tmp$) \ if tmp$="" let U5=2 else U5=tmp$ ! # of labels across
call dxget("line1",Text1$) \ Text1$=Text1$,Blank$ ! 1st line of label
call dxget("line2",Text2$) \ Text2$=Text2$,Blank$ ! 2nd line of label
call dxget("line3",Text3$) \ Text3$=Text3$,Blank$ ! 3rd line of label
call dxget("line4",Text4$) \ Text4$=Text4$,Blank$ ! 4th line of label
call dxget("line5",Text5$) \ Text5$=Text5$,Blank$ ! 5th line of label
call dxget("nolabels",tmp$) \ if tmp$="" let U6=1 else U6=tmp$ ! # of labels to print
!  dx end
!
! # of labels accross
if U5<1 or U5>4 let e$="Invalid number of labels across, must be between 1 and 4!" \ error 10000
!
! # of labels to print
if U6<1 or U6>9999 let e$="Invalid number of labels to print, must be between 1 and 9999!" \ error 10000
!
!stop
gosub L_1800 ! format print
goto L_5000 ! print
!
! - Gosub L_800
! - If Err 0 Gosub ERR_ESCAPE
! - L_170: Print 'CS';"ENTER NUMBER OF LABELS ACROSS (1 THRU 4 VALID) ";
! - Input ""F$
! - U5 = F$
! - If U5 < 1 Print 'RB CL';" INVALID " \ Goto L_170
! - If U5 > 4 Print 'RB CL';" INVALID " \ Goto L_170
! - B1$ = " ",B1$
! - B2$ = " ",B2$
! - B3$ = " ",B3$
! - B4$ = " ",B4$
! - B5$ = " ",B5$
! - Print 'CS'
! - Gosub L_1000
! - Gosub L_1100
! - Gosub L_1200
! - Gosub L_1300
! - Gosub L_1400
! - Gosub L_1500
! - Gosub L_1800
! - L_265: Gosub L_1600
! - L_270: Print @0,15;'CE';"Enter Line # to reenter,  C: change # of label to print,  P: print, or  E: end ";
! - Input ""U5$
! - If U5$ = "E" Goto OUTEND
! - If U5$ = "e" Goto OUTEND
! - If U5$ = "P" Goto L_5000
! - If U5$ = "p" Goto L_5000
! - If U5$ = "C" Goto L_265
! - If U5$ = "c" Goto L_265
! - W = U5$
! - If W > 5 Goto L_270
! - K = W
! - On W - 0 Gosub L_1100,L_1200,L_1300,L_1400,L_1500
! - Goto L_270
! - Print @0,0;'CS';"MX104T"; Tab 25;"FREE FORM LABEL PRINT"
! - L_570: Print @0,2;"ALIGNMENT AID?  (Y/N) ";
! - Input ""F$
! - If F$ = "N" Goto L_630
! - If F$ <> "Y" Goto L_570
! - Gosub L_8500
! - Goto L_570
! - L_630: Rem
! - L_800: Rem RETAIN PRINTER NAME
! - PTRNM$ = Chf$(800)
! - If Err 0 Gosub ERR_TRAP
! - If PTRNM$[1,1] = "" Or PTRNM$[1,1] = " "
! -   PTRNM$ = "screen"
! -   Goto L_895
! - End If 
! - Search PTRNM$,"ub/sys",POS1
! - If POS1 = 0 Let PTRNM$ = "file" \ Goto L_895
! - J$ = " ",J$
! - J$ = PTRNM$;POS_ = 1;POS1 = 0
! - L_884: Search J$[POS_],"/",POS1
! - If POS1 Let POS_ = (POS_ + POS1) \ Goto L_884
! - If J$[POS_,POS_] <> "$" Let PTRNM$[1,1] = "$";PTRNM$[2] = J$[POS_] \ Goto L_895
! - PTRNM$ = J$[POS_]
! - L_895: Return 
! - L_1000: Rem PRINT SCREEN
! - Print @0,5;"TEXT LINE 1 : "
! - Print @0,6;"TEXT LINE 2 : "
! - Print @0,7;"TEXT LINE 3 : "
! - Print @0,8;"TEXT LINE 4 : "
! - Print @0,9;"TEXT LINE 5 : "
! - J5MSG$ = "Enter any text (30 chars. max)"
! - Return 
! - L_1100: Rem GET TEXT LINE 1
! - J0$ = "2 00301405" \ J5$ = J5MSG$
! - Gosub L_7000
! - TEXT1$[1,30] = J$
! - Return 
! - L_1200: Rem GET TEXT LINE 2
! - J0$ = "2 00301406" \ J5$ = J5MSG$
! - Gosub L_7000
! - TEXT2$[1,30] = J$
! - Return 
! - L_1300: Rem GET TEXT LINE 3
! - J0$ = "2 00301407" \ J5$ = J5MSG$
! - Gosub L_7000
! - TEXT3$[1,30] = J$
! - Return 
! - L_1400: Rem GET TEXT LINE 4
! - J0$ = "2 00301408" \ J5$ = J5MSG$
! - Gosub L_7000
! - TEXT4$[1,30] = J$
! - Return 
! - L_1500: Rem GET TEXT LINE 5
! - J0$ = "2 00301409" \ J5$ = J5MSG$
! - Gosub L_7000
! - TEXT5$[1,30] = J$
! - Return 
! - L_1600: Rem # OF LABELS
! - Print @0,13;"Enter Number of Labels to Print, <CR> FOR 3 ";
! - Input ""F$
! - If F$ = "" Let F$ = "3"
! - If Len(F$) > 4 Goto L_1600
! - U6 = F$
! - Return 
! - L_1700: Rem REPRINT TEXT LINES
! - Print @14,5;TEXT1$
! - Print @14,6;TEXT2$
! - Print @14,7;TEXT3$
! - Print @14,8;TEXT4$
! - Print @14,9;TEXT5$
! - Return 
!
L_1800: Rem LOADING BUFFER
B1$[C3,C3 + Len(TEXT1$)] = TEXT1$
B2$[C3,C3 + Len(TEXT2$)] = TEXT2$
B3$[C3,C3 + Len(TEXT3$)] = TEXT3$
B4$[C3,C3 + Len(TEXT4$)] = TEXT4$
B5$[C3,C3 + Len(TEXT5$)] = TEXT5$
C3 = C3 + 30
U7 = U7 + 1
If U7 <= U5 Goto L_1800
Return 
!
L_5000: Rem PRINT LABELS
U8 = Int(U6 / U5 + .5)
For COUNT = 1 To U8
  Print #0; Tab 1;B1$[1,132]
  Print #0; Tab 1;B2$[1,132]
  Print #0; Tab 1;B3$[1,132]
  Print #0; Tab 1;B4$[1,132]
  Print #0; Tab 1;B5$[1,132]
  Print #0;" "
Next COUNT
goto OUTEND
!
! - If Err 0 Rem
! - If PTRNM$ <> "screen" And PTRNM$ <> "file" Close #0
! - If Err 0 Gosub ERR_TRAP
! - L_5140: Rem  missing line
! - L_5200: Print @0,22;"IS PRINTING OK (Y/N) ? ";
! - Input " "J4$
! - If J4$ = "Y" Goto OUTEND
! - If J4$ = "y" Goto OUTEND
! - If J4$ = "N" Or J4$ = "n"
! -   If PTRNM$ = "screen" Or PTRNM$ = "file"
! -     If PTRNM$ = "screen" Print #0;'CS'
! -     Gosub L_1000 \ Gosub L_1700 \ Goto L_270
! -   Else 
! -     Open #0,PTRNM$ \ Goto L_270
! -   End If 
! - End If 
! - If J4$ <> "Y" If J4$ <> "N" Goto L_5200
! - Return 
! - L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 <> 3 If J0 <> 4 Goto L_7070
! - If J0 = 3 Let J2$ = "#",J2$
! - If J0 = 4 Let J2$ = "-",J2$
! - J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - L_7070: J1$[J3 + 1] = ""
! - If J0 < 3 Goto L_7105
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 = 6 Goto L_7105
! - If J0 <> 5 Goto L_7100
! - J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6
! - J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
! - L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! - If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
! - L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
! - Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) <= J3 Goto L_7130
! - J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
! - L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
! - If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
! - J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
! - L_7145: For J10 = 1 To Len(J9$)
! -   If J9$[J10,J10] >= " " If J9$[J10,J10] <= "~" Next J10 \ Goto L_7160
! - J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
! - L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7265,L_7330 \ Stop 
! - L_7165: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto L_7345
! - L_7185: J9 = 0;J9[1] = 0 \ For J10 = 1 To Len(J9$)
! -   If J0 = 4 If J10 = 1 If J9$[1,1] = "-" Goto L_7235
! -   If J0 = 4 If J10 = 1 If J9$[1,1] = "+" Goto L_7235
! -   If J9$[J10,J10] > "/" If J9$[J10,J10] < ":" Goto L_7230
! -   If J9$[J10,J10] = " " Goto L_7235
! -   If J10 <> 1 Or Len(J0$) < 11 Goto L_7210
! -   J7$ = "" \ Let J7$ = J0$[10] To J9$[J10,J10] : J7 \ If J7 Goto L_7235
! - L_7210: If J9$[J10,J10] <> "." Goto L_7250
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
! -   If J9 Goto L_7250
! -   J9 = 1
! - L_7230: If J9 Let J9 = J9 + 1
! -   If Not(J9) Let J9[1] = J9[1] + 1
! - L_7235: Next J10
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
! - L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
! - If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
! - L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - L_7260: Gosub L_7600 \ Goto L_7105
! - L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
! - If J9[1] < 1 Goto L_7325
! - On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
! - On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
! - Goto L_7325
! - L_7285: If J9[1] > 30 Goto L_7325
! - L_7290: If J9[1] > 31 Goto L_7325
! - Goto L_7315
! - L_7300: If J9[1] > 29 Goto L_7325
! - If Not(Fra(J9[2] / 4)) Goto L_7315
! - If J9[1] > 28 Goto L_7325
! - L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
! - J$ = X$ \ J3 = 8 \ Goto L_7345
! - L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
! - L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
! - L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
! - L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
! - Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
! - Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
! - Print @0,Msc(34) - 1;'CL'; \ Return 
! - L_7700: Return 
! - B1$ = " ",B1$
! - B2$ = " ",B2$
! - B3$ = " ",B3$
! - B4$ = " ",B4$
! - Return 
! - L_8500: Rem ALIGNMENT AID
! - Print #0;" "
! - For X1 = 1 To 4
! -   For X2 = 1 To U9
! -     Print #0; Tab ((X2 - 1) * LW + 1);"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
! -   Next X2
! -   Print #0;" "
! - Next X1
! - Print #0;" "
! - Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
if not (j8)
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)!
endif
Try Call dxclose() else rem
End 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
! - Stop 
! - Gosub L_5140
! - If L9 > 30 Goto L_9150
! - Input "\15\PRESS <CR> TO EXIT "B$
! - : Rem CLOSE ROUTINE
! - Goto OUTEND
! 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
