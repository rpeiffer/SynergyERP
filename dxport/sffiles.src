! SFFILES.LIB
! loadsave -w -n 100,10 -o prog/dxport/sffiles.lib src/sffiles.src
! 5/23/06 jjg
!rce 02/22/07 R9 changes

! file subroutines to support sf
!
Declare Intrinsic Function findchannel,trim$,dateusing$,callstat$
Declare Intrinsic Sub programdump,dxopen,dxget,dxset,dxclose,dxsave
Declare Intrinsic Sub time 
!
! *declare external libs & subs & functions
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr
!
!structure includes!
!Include "src/ubscust.inc"
Include "src/ubscust.inc"
!Include "src/carthdr.inc"
Include "src/carthdr.inc"
!Include "src/cartdet.inc"
Include "src/cartdet.inc"
!Include "src/cartsp.inc" 
Include "src/cartsp.inc" 
!Include "src/ubsmiscchrg.inc"
Include "src/ubsmiscchrg.inc" 
!Include "src/ubsshiplist.inc"
Include "src/ubsshiplist.inc" 
!Include "src/ubszone.inc"
Include "src/ubszone.inc"  
!Include "src/ubsprod.inc    
Include "src/ubsprod.inc"    
!Include "src/ubswhse.inc
Include "src/ubswhse.inc"

external function getcartdet(e$,cartdc,cartdet. as cartdet)
!--------------------------------------------------------------------
! get cart detail record, if not there return neg number
 try
 dim k$[52],b$[30]
 b$=" ",b$
 k$=cartdet.userid$,cartdet.custid$,cartdet.ltype$,cartdet.lineno using "###",cartdet.prod$,b$
 k$=k$[1,34]
 k=1
 search #cartdc,2,k;k$,r,e
  If e = 0
   Read record #Cartdc,r;cartdet.;
  Else
  r = e * -1 !<0 error
  End If
 else
 if spc(8)<>10000
   call suberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  error 10000
 end try
End function r !getcartdet
!

external function getcurrentdate(chan)                                    
dim x$[10],u5$[50],j4$[75]                                               
dim 2%,x,x1,x2,d8  

Read #chan,0,112;D8;                                    
x2 = d8                                                 
!"find current date                                     
U5$ = ""                                                
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"            
Call Time(U5$)                                          
For K1 = 1 To 12                                        
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto L7940       
Next K1                                                 
L7940: X$ = "/",X$                                      
X$[1,2] = K1 Using "##"                                 
X$[4,5] = U5$[5,6]                                      
X$[7,8] = U5$[11,12]                                    
For K1 = 1 To 8                                         
   If X$[K1,K1] = " " Let X$[K1,K1] = "0"                
Next K1                                                 
!"pack date                                             
x2 = X$[4,5] \ X1 = X$[1,2] \ x2 = x2 + X1 * 10 ^ 2   
X1 = X$[7,8] \ x2 = x2 + X1 * 10 ^ 4      
D8 = x2                                   
End Function D8 !getcurrentdate
!
external function getum(e$,chan,um$)
! -----------------------------------------------------------------
! get a um record #
 try
  dim k$[4],hold$[4]
  If trim$(um$) = "CWT" Let r=-1
  If trim$(um$) = "LOT" Let r=-2
  If trim$(um$) = "LB" Let r=-3
  If r=0
   k$=um$,"   "\hold$=k$
   search #chan,2,1;k$,r,e
   if k$<>hold$ let e=2
   if e let e$=um$," um not found on um file!"\ error 10000
  end if
 Else
     Call suberr(e$,Spc(8),Spc(10),Msc$(2))
 End Try   
end function r !getum


external function getzone(e$,chan,zone$,zn. as zone,...)               
! -----------------------------------------------------------------      
! get a zone record                                                    
! pass chan channel # of zone file, zone$ is zone code               
  Try     
	dim  k$[2], hold$[2]
	k$=zone$
	hold$=k$
    Search #Chan,2,1;k$,r,e                                                  
	If k$ <> hold$ Let e = 2                                                 
	  If e = 0                                                                  
	    Read record #Chan,r;zn.;     
	  Else                                                                      
	    r = e * -1 !<0 error                                                    
	  End If                                                                   
  Else                                                                        
     Call suberr(e$,Spc(8),Spc(10),Msc$(2))                                     
  End Try   
End Function r !getzone

external function getwhavail(e$,chan,product$,warehouse) 
!get the available qty from product warehouse file
!chan - product warehouse file
Try                                                                         
  Dim k$[80],hold$[80]
  Dim wh. As whse     
  Dim 3%,whavail

  whavail=0 
  k$=" ",k$
  K$[1,len(product$)] = product$                    
  K$[13,14] = warehouse Using "##"       
  hold$ = k$                            
  Search #chan,2,1;k$,r,E            
  If Trim$(k$) <> Trim$(hold$) Let e = 2       
  If e = 0                   
     Read Record #chan,r;wh.; 
	 whavail=wh.w3[0]-wh.w3[2]
  Else
     r = e * -1    !<0 error
  End If 
Else
   Call suberr(e$,Spc(8),Spc(10),Msc$(2))                                    
End Try                                                                     
End Function whavail   !'"get whse avail 

external function getprod(e$,chan,product$,pr. as prod,...) 
!"get a product record
!"chan - product file
Try                                                                       
  dim k$[80],hold$[80]
  dim 3% 
  k$ = " ",k$                                          
  k$[1,Len(product$)] = product$                       
  hold$ = k$                                           
  Search #chan,2,1;k$[1,12],r,e                              
  If Trim$(k$) <> Trim$(hold$) Let e = 2               
  If e = 0                                             
     Read Record #chan,r;pr.;                           
  Else                                                 
	  r = e * -1                                         
  End If                                               
Else                                                   
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))               
End Try                                                
End Function r   !"getprod                                    

external function getcust(e$,chan,cust$,cu. as customer,...)
! -----------------------------------------------------------------
! get a customer record
! pass chan channel # of customer file, cust$ is customer #
! optionally pass lockflag, if <>0 keeps record locked
! returns cu. of record and function returns record # or <0 is error
  Try
    try enter lockflag else lockflag=0
    Dim k$[80],hold$[80],3%
    k$ =  val(cust$) using "######"
    hold$ = k$
    k = 1
    Search #Chan,2,k;k$,r,e
    If k$ <> hold$ Let e = 2
    If e = 0
     if lockflag=0 Read record #Chan,r;cu.; else read record #chan,r;cu.
    Else
      r = e * -1 !<0 error
    End If
  Else
   Call suberr(e$,Spc(8),Spc(10),Msc$(2))
  End Try
End Function r !getcust
!

external function getshiplist(e$,chan,cust$,shipcust,shipto$,sh. as shiplist,...)    
! -----------------------------------------------------------------M          
! get a shiplist record                                                      
! pass chan channel # of shiplist file
! cust$ is customer #  shipto$ is ship to number               
! optionally pass lockflag, if <>0 keeps record lockedM                       
! returns sh. of record and function returns record # or <0 is error       
  Try                                                                        
	try enter lockflag else lockflag=0                                       
    Dim k$[80],hold$[80],3%  
    if rtrim$(shipto$)="" exit function -9
    if shipcust<=0 let shipcust=val(cust$)
    k$ =  shipcust using "######",".",val(shipto$) using "&&&&&&"           
    hold$ = k$                                                               
	k = 1                                                                    
    Search #Chan,2,k;k$,r,e                                                  
    If k$ <> hold$ Let e = 2                                                 
    If e = 0                                                                 
      if lockflag=0 Read record #Chan,r;sh.; else read record #chan,r;sh.     
	Else                                                                     
	   r = e * -1 !<0 error  
	End If                                                                   
 Else                                                                       
	 Call suberr(e$,Spc(8),Spc(10),Msc$(2))                           
 End Try                                                                    
End Function r !"getshiplist                                             

!
external function getsalesman(e$,chan,k$,sales$,...)
! -----------------------------------------------------------------
! get a salesman record
! pass chan channel # of salesman file, k$ is key value 
! optionally pass lockflag, if <>0 keeps record locked
! returns sales$ of record and function returns record # or <0 is error
  Try
    try enter lockflag else lockflag=0
    Dim k$[80],hold$[80],3%
    hold$ = k$
    k = 1
    Search #Chan,2,k;k$,r,e
    If k$ <> hold$ Let e = 2
    If e = 0
     if lockflag=0 mat Read #Chan,r;sales$; else mat read #chan,r;sales$
    Else
     r = e * -1 !<0 error
     sales$="-NOF-"
    End If
  Else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
  End Try
End Function r !getsalesman
!
!
external function getordertype$(CTLC,otype)
! ----------------------------------------------------------------
! gets and returns order type description
! pass chanel of control file and order type #
  Dim otypedesc$[16]
  Dim 1%,J1,X,X1,X2,MS1[2]
  Dim 3%
  otypedesc$ = " ",otypedesc$
  Try 
    J1 = otype;X = 20;X1 = 62
    X2 = J1 * X - X
    If X2 < 0 Let X2 = 0
    Read #CTLC,X1,X2;otypedesc$;
    If otypedesc$ = "" otypedesc$ = " "
  Else 
    otypedesc$ = " "
  End Try 
End Function otypedesc$ !getordertype$
!
!
external function getmisccharge$(chan,mcode,mc. as miscchrg,...)               
! --------------------------------------------------------
! gets misc code and returns misc description for order 
! mc.ms1[2] - type 1=p/o 2=order
  Dim miscdesc$[20]                                      
  Dim 1%,J1,X,X1,X2                                       
  Dim 3%                                                 
	miscdesc$ = " ",miscdesc$                            
    Try                                                     
     J1 = mcode
	 If J1 < 0 Let J1=0
	 Read record #chan,J1;mc.;
	 miscdesc$=rtrim$(mc.ms$[1,20])
     If mc.ms1[2]<>2
		miscdesc$ = " "   
	 End If
	 If miscdesc$ = "" miscdesc$ = " "  
	Else                                                    
	 miscdesc$ = " "                                      
    End Try                                                 
End Function miscdesc$ !getmisccharge$   

External Function buildsortfile(e$,keylen,flag)
  ! builds a key only sort file and returns channel #
  ! pass keylen in words, flag=0 build, 1 open
  Try
   Dim ID$[8],filename$[60],v$[keylen * 2],filename2$[60],4%
    filename$ = "/u/dl4/2/sorti/sort",Spc(6) Using "&&&"
    sortchan = FindChannel()
    If flag = 1
      Open #sortchan,filename$
    Else
     filename2$ = "<00> [10:256] ",filename$,"!"
      Build #sortchan,filename2$ As "Universal Indexed-Contiguous"
      Rem key lengths in words
      r = keylen
      Search #sortchan,0,1;v$,r,e
      If e
       Close #sortchan
        sortchan = e * -1
      Else
       v$ = "" \ r = 0 \ e = 0
        Search #sortchan,0,0;v$,r,e
        If e
         Close #sortchan
         sortchan = e * -1
        End If
      End If
     If e = 0
       Close #sortchan
        Open #sortchan,filename$
      End If
    End If
  Else
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
  End Try
End Function sortchan !buildsort

         

