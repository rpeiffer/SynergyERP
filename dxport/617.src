! >>> Program 617
!
! description General Ledger Journal Entry Post
! loadsave -w -n 100,10 -o prog/dxport/617.dl4 src/617.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR  7, 2007  14:22:33
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/gl617.src (univ2) [bill] {63969}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem GL617 G/L REVERSING JOURNAL ENTRIES BATCH POST
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[800],rstr$[2000] ! error 
DIM 3%,GLPSTAT,glpmsg$[100]
Dim R$[64],P$[64],S$[10],F2$[16],V$[13],X$[10]
Dim APER$[4],m3$[10],c3$[10],m4$[10],f3$[30],v9$[30]
Dim H$[4],C1$[4],C2$[6],B1$[4]
Dim A6$[140],I$[12],B2$[6],Z7$[20]
Dim F9$[2],F8$[16],1%,L9,S1$[4]
Dim 1%,S9[1],FYE,YEAR_,MONTH_,2%,PERIOD,YEAR_$[4]
Dim 2%,A,C,B,R[23],B4,B1,B2,C3,CLIENT,ACPER[1]
Dim 2%,BATCH,GRP[1],USR[1],PDATE
Dim 3%,R3,C2[2]
Dim 3%,L1,L2,D,W,S,E,P
Dim 4%,H3
!Print 'CS';"-gl617-"; Tab 20;"PROCESS REVERSING JOURNAL ENTRIES";
Dim j$[50],work$[50],sfile$[50]
dIM GROUPID$[1]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
!call dxopen() ! needed?
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=intCO
REC_UAC = GetUIDRec(e$,IntCo,Userid$) 

for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
message$=""
totrec=0
Mat Read #1,51,6;S9;
s$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
s$[2,2]=groupid$
GRP[0] = intco
USR[0] = groupid$
S$[1,1] = GRP[0] Using "#"
S$[2,2] = USR[0] Using "#"
GRP[1] = GRP[0];USR[1] = USR[0]
F2$ = " ",F2$
F2$ = "1/ACF",S$[1,2]
Call FindF(F2$,A9)
if not(a9)
	message$="GENERAL LEDGER IS NOT AVAILABLE FOR YOUR ACCOUNT"
	eflag=eflag+1
	goto outend:
endif

Open #3,F2$
CHGL[0] = 3
if not(s9)
	let c=1
else
	call dxget ("CLIENTID",tmp$)
	let c=tmp$
	if c<0 or c>9999
		let eflag=eflag+1
		let message$="Invalid Client Id Submitted"
		goto outend:
	endif
endif
! C1$=C using "####"
V$ = " ",V$
V$[3,6] = C Using "####"
Search #3,2,1;V$,R[3],E \ If E > 1 Gosub ERR_SEARCH
if e<>0
	let eflag=eflag+1
	let message$="Client "+str$(c)+" Not on File"
	goto outend:
endif
client=c
Mat Read #3,R[3];A6$;
S$[3,6]=c using "####"
L9 = A6$[135,136] \ If L9 > 9 Let F9$ = L9 Using "##"
FYE = A6$[128,129]
If L9 < 10 Let F9$ = L9 Using "#"
! Print @0,23;'CL';
For I = 3 To 6
  If S$[I,I] = " " Let S$[I,I] = "."
Next I
S1$ = S$[3,6]


Try Close #2 else rem
!S$[3,6] = C1$
F2$ = F9$,"/GLM",S$[1,6]
Call FindF(F2$,A9) 
if not(a9)
	let eflag=eflag+1
	let message$="General Ledger Master File For Client "+str$(c)+" Not Found. "
	goto outend:
endif
call dxget ("acctper",tmp$) ! MMYY format
let c1=0
if len(tmp$)=4
	let glmo=tmp$[1,2]
	let glyr=tmp$[3,4]
	let work$=glyr using "&&"
	let work$[3]=glmo using "&&"
	let tmp=work$
endif
if tmp<=0 or tmp>9999
	let eflag=eflag+1
	let message$=Message$+"Invalid Accounting Period Submitted"
	goto outend:
endif
c1$=work$

Call dxget("SBTH",tmp$) \ b= tmp$ !!STARTING Check #
If b<0 Or b>999
	eflag=eflag+1
	Let MESSAGe$ = "Invalid Batch Number"
	Goto outend:
ENDIF 
c2$=b using "###" \ c3=b

call dxget ("revacctper",tmp$) ! MMYY format
let tmp=0
if len(tmp$)=4
	let glmo=tmp$[1,2]
	let glyr=tmp$[3,4]
	let work$=glyr using "&&"
	let work$[3]=glmo using "&&"
	let tmp=work$
endif
if tmp<=0 or tmp>9999
	let eflag=eflag+1
	let message$=Message$+"Invalid Accounting Period Submitted"
	goto outend:
endif
b1$=work$
IF C1$=B1$
	let eflag=eflag+1
	let message$=message$+"Reverse Account Period May Not be the Same as Batch Accounting Period "
	goto outend:
endif

Call Dxget("POSTDAY",tmp$)	
let tmp3=tmp$
if tmp3<=0 or tmp3>31
	let eflag=eflag+1
	message$="Invalid Posting Day Submitted"
	goto outend:
endif
let tmp$=tmp3 using "&&"
let m3$=b1$[3,4]+tmp$[1,2]+b1$[1,2] ! mmddyy foramt
b2$=m3$ ! mmddyy
M4$ = M3$[1,2],"/",M3$[3,4],"/",M3$[5,6]
Call VerifyDate(M4$,M4$,E) 
if e<>0
let eflag=eflag+1
	message$="Invalid Posting Day Submitted"
	goto outend:
endif


For I = 1 To 3
  If C2$[I,I] = " " Let C2$[I,I] = "."
Next I
F2$ = F9$,"/G",S$[1,2],S1$[1,4],C1$,C2$
F8$ = F2$
Call FindF(F2$,A9)
If Not(A9) 
	LET EFLAG=EFLAG+1
	LET message$=message$+"Batch "+str$(b)+" Not Found. "	
	goto outend
endif
Try Close #4 Else Rem
Try
	Eopen #4,F2$ 
Else 
	LET EFLAG=EFLAG+1
	LET message$=message$+"Batch "+str$(b)+" Not Available for Update. "
	goto outend:
end try


R = Chf(4) - 1
L_540: Read #4,R;R$
If R$[10,20] = "1  PAY    1"
	If R$[22,22] <> "P"
		let eflag=eflag+1
		Message$=Message$+" Batch "+str$(b)+" Not Printed. "
		goto outend
	endif
	If R$[1,1] = "B"
		eflag=eflag+1
		message$=Message$+" Batch "+str$(b)+" flagged as budget - cannot reverse. "
		Goto OUTEND
	End If 
	MEMOFLAG = 0
	If R$[1,1] = "M"
		MEMOFLAG = 99
	 Else 
		C2 = R$[51,60]
		C2[1] = R$[31,40] \ C2[1] = C2[1] / 100
		C2[2] = R$[41,50] \ C2[2] = C2[2] / 100
		If C2 <> 0 Or (C2[1] - C2[2]) <> 0
			let eflag=eflag+1
			let Message$=Message$+" Batch "+str$(c3)+" Out of Balance. "
			goto outend:
		End If 
	End If 
End If 
R = R - 1
If R < 0
	eflag=eflag+1
	message$=Message$+" Batch "+str$(b)+" Ended Improperly. "
	Goto OUTEND
End If 
! Rem check status
Read #4,r;R$;
P$ = R$
If R$[63,63] = "9" If R$[1,1] = "*"
	!Goto L_880
else
	eflag=eflag+1
	message$=Message$+" Batch "+str$(c3)+" Ended Improperly. "
	Goto outend:
End If 
If R$[62,62] = "U"
	eflag=eflag+1
	message$=Message$+" Batch "+str$(b)+" In Process Elsewhere. "
	Goto OUTEND
End If 

P$[2,5] = C Using "####"
For I = 2 To 5
  If P$[I,I] = " " Let P$[I,I] = "."
Next I
F2$ = F9$,"/GLM",S$[1,2],P$[2,5]
Call FindF(F2$,A9)
If Not(A9)
	let eflag=eflag+1
	message$=message$+" G/L Master File Not Found. "
	Goto OUTEND
End If 
Open #2,F2$
L1 = A6$[128,129]
X1 = C1$[3,4]
L2 = C1$[1,2]
B1 = B1$[3,4]
B2 = B1$[1,2]
If B1 > L1 Let B2 = B2 + 1
If B2 > 99 Let B2 = 0
If X1 > L1 Let L2 = L2 + 1
If L2 > 99 Let L2 = 0
If L2 <> B2
	let eflag=eflag+1
	message$=message$+" Reversing Entries Must Apply to Same Fiscal Year "
	Goto OUTEND
End If 
ACPER = L2
V$ = " ",V$
Search #2,2,1;V$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If E<>0
	let eflag=eflag+1
	Message$=Message$+" G/L Control Record Not Found. Update Ended. "
	goto outend:
End If 
Mat Read #2,R[2],70;H3;
H$ = H3 Using "&&&&"
P = H$[3,4]
If P <> 14 If P <> 39 Let P = 39
Dim 4%,M3[P]
Mat Read #2,R[2],70;M3;
H3 = P$[6,9]
S = R$[2,5]
E = R$[6,9]
For I = 1 To P
  If I <> 13 And I <> 26 And I <> 39
    If M3[I] = S Let S = I
    If M3[I] = E Let E = I
  End If 
Next I
For I = 1 To P
  If I <> 13 And I <> 26 And I <> 39
    If M3[I] = H3 Goto L_1240
  End If 
Next I
let eflag=eflag+1
message$=message$+"Accounting Period "+P$[6,9]+" Not Found in G/L File. Update Ended."
goto outend:

L_1240: A = I
D = A * 8 + 70
B4 = B1$[1,4]
For I = 1 To P
  If I <> 13 And I <> 26 And I <> 39
    If M3[I] = B4 Goto L_1280
  End If 
Next I

let eflag=eflag+1
message$=message$+"Accounting Period "+B1$[1,4]+" Not Found in G/L File. Update Ended."
goto outend:
L_1280: Rem here we goto glpost
PRGNUM = 617
For Q = 0 To 3 \ CHGL[Q] = 0 \ Next Q
CHGL[0] = 3
CHGL[1] = 4
CHGL[2] = 2
ACPER = C1$[1,4]
ACPER[1] = 0
BATCH = C3
PDATE = 0
glpstat=0
glpmsg$=""
totrec=totrec+1
Call "glpost.dl4",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE,intco,rstr$,glpstat,glpmsg$                                                      
if glpstat<>0
	let eflag=eflag+1
	let message$=message$+"Batch "+str$(c3)+" "+rtrim$(glpmsg$)+". "
endif
! Call "glpost",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE
Rem reversing period
ACPER = C1$[1,4]
ACPER[1] = B1$[1,4]
PDATE = B2$
glpstat=0
glpmsg$=""
Call "glpost.dl4",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE,intco,rstr$,glpstat,glpmsg$                                                      
if glpstat<>0
	let eflag=eflag+1
	let message$=message$+"Batch "+str$(c3)+" "+rtrim$(glpmsg$)+". "
endif
!Call "glpost",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE
Goto OUTEND

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT PROGRAM
Try Close Else Rem
Call FindF(V9$,A9)
If A9<>0
  Kill V9$
End If 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"Batch Not Updated."
		message$=message$+"."
	else
		Let message$=message$+"Batch Updated. "
		
	endif
endif
if message$="" let message$="Process Complete"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
end try
End

