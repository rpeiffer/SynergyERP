! >>> Program 564
!
! description  A/P OPEN CHECK LIST 
!
! loadsave -w -n 100,10 -o prog/dxport/564.dl4 src/564.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 25, 2001  15:54:47
Rem /usr/acct/r97//usr/acct/kag/work/r97/ap/la564.src (univ2) [kag] {22655}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem LA564 - M1020- A/P OPEN CHECK LISTING - MAY 1986 - MTK
Rem LAST UPDATE: MTG 11/92 MULTIPLE BANK FLAG - V5
Rem 
!!jlp 02/07/97 fix the check for check #/date,line 2153
!
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
dim 1%,a5currid,3%,a5currfact
dim 1%,currpass
dim 1%,apbCURRID,3%,apbCURRFACT,keycurr$[30],currdesc$[30],2%,bnk_currid,3%,curr_rate,bankname$[30],k4$[20]
dim 1%,cnvcu[10],3%,cnvca[10]
dim 1%,oiCURRID,3%,oicurrfact
dim 1%,aph_CURRID,3%,aph_currfact
dim 3%,aphmerch,aphfreight,aphmisc,grossapamt,discapamt,netapamt,currvaramt,grosspayamt, discamt, checkamt
dim 3%,glexchamt,glexchacct
dim p61$[256],currdesc$[30]
Dim 3%,F9,1%,F6[1],A3$[30],3%,T3
Dim 2%,N,DT3[1],JDATE[5],1%,C0[2],C2[1],M1,E
Dim J$[10],J1$[6],J2$[6],J3$[6]
Dim 2%,A1,A2,C[2],L1,P9,R,V1,X,A9,B9,C9,J8,J9,W9
Dim 1%,RECFLAG
Dim 3%,T2,C1
Dim D6$[8],D8$[25],D9$[10],C$[30],G8$[2],G9$[40],R2$[4],R$[20],V$[20]
Dim K$[20],F$[16],X$[50]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[100],tmp3$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNS(H) = Int(Abs(H)*100)*.01 * sgn(h)

Mat Read #1,51,18;C0;
Mat Read #1,61,0;p61$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
Call Time(D8$)
!
!!Gosub L_2510
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
W9 = intCO
A9 = Int(W9 / 16384)
B9 = Int((W9 - A9 * 16384) / 64)
C9 = W9 - (A9 * 16384 + B9 * 64)
G8$[1,1] = C9 Using "#"
G8$[2,2] = B9 Using "#"
!
! open files
C15 = OpenFile("AP.A00AP10",-intCo,1) \ If C15 = -1 Error 42  ! a00ap10
C16 = OpenFile("GL.ACF",-intCo,1) \ If C16 = -1 Error 42  ! acf10
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"564",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("BANK",tmp$) \ F9=tmp$ !!ENTER BANK#!!!!!!!!!!
let bankid=f9

call dxget("I0",tmp$) \  N =tmp$  !!!select option desired:  droplist
call dxget("START",J1$) 
if rtrim$(j1$)=""
	if n=1 ! check date
		let j1$="010170"
	else
		let j1$="0"
	endif
endif
call dxget("END",J2$) 
if rtrim$(j2$)=""
	if n=1 ! check date
		let j2$="123159"
	else
		let j2$="999999"
	endif
endif
call dxget("I1",tmp$)  \  if rtrim$(tmp$)="" let RECFLAG = 0 else  RECFLAG =99 !!! include reconciled checks on listing (Y/N
!
!!validations !!!!!!
If Not(C0)
	Let F9 = 1   ! default bank#
	let bankid=1
endif

!
! starting & ending check date or number
if N = 1 ! check date
  !starting date 
  If rtrim$(J1$) = "" Let A1 = 010170
  !!ending date 
  If rtrim$(J2$) = "" Let J2$ = "123159"
  N0 = 2
  J3$ = J1$[5,6],J1$[1,2],J1$[3,4]
  A1 = J3$[1,6]
  X2 = A1
  X$ = X2 Using "&&&&&&"
  Call DateToJulian(1,X$,X$,E)
  If E Let e$ = "Invalid starting date!" \ error 10000
  X2 = X$[1,5]
  JDATE[0] = X2
  J3$ = J2$[5,6],J2$[1,2],J2$[3,4]
  A2 = J3$[1,6]
  X2 = A2 
  If A2 <> 999999 
    X$ = X2 Using "&&&&&&"
    Call DateToJulian(1,X$,X$,E) 
    If E  let e$ = "Invalid ending date!" \ error 10000 
    X2 = X$[1,5]
  end if
  JDATE[1] = X2
  If JDATE[0] > JDATE[1] e$ = "Invalid ending date, must be >= starting date!" \ error 10000
else  ! check #
  A1 = rtrim$(J1$) ! starting check@
  if rtrim$(J2$)="" let A2 = 999999 else  A2 = J2$ ! ending check #
  N0 = 1
  if A1 < 0 or A1 > 999999 let e$="Invalid starting number, must be between 0 and 999999!" \ error 10000
  if A2 < A1 or A2 > 999999 Let e$ = "Invalid ending number, must be between starting number and 999999!" \ error 10000
  J1$ =" ",J1$ 
  J2$ =" ",J2$
End if 
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
!J9 = 55 \ If J8 Let J9 = 18
!
!Call Time(D8$)
!W9 = Spc(5)
!A9 = Int(W9 / 16384)
!B9 = Int((W9 - A9 * 16384) / 64)
!C9 = W9 - (A9 * 16384 + B9 * 64)
!G8$[1,1] = B9 Using "#"
!G8$[2,2] = C9 Using "#"
!
V$ = " ",V$
V$ = "20"
Search #C15,2,1;V$,V1,E
If E let e$="Can't find '",V$,"' in a00ap10 File!" \ error 10000
Mat Read #C15,V1,10;R$;
 V$ = " ",V$
V$ = " 0"
Search #C15,2,1;V$,V1,E
If E let e$="Can't find '",V$,"' in a00ap10 File!" \ error 10000
Mat Read #C15,V1,32;R$;
F$ = R$[13,13],"/","A50CR",G8$[1,2]
Ropen #2,F$
Mat Read #1,88,112;F$; \ Ropen #3,F$

if p61$[136,136]="Y"
	ch_curr=OpenFile(9712,intCo) \ If Ch_curr = -1 Error 42 ! currency header file
endif
if bankid<>0
	K4$ = bankid Using "##"
	bnk_currid=0
	bankname$=" ",bankname$
	currdesc$=" ",currdesc$
	curr_rate=0
	Search #3,2,1;K4$,V1,E 
	if e<>0
		let e$="Invalid Bank Selected!" \ error 10000
	endif
	mat read #3,V1,54;bnk_currid;
	mat read #3,V1,2;bankname$;
	if p61$[136,136]="Y"
		let keycurr$=bnk_currid using "####"
		search #ch_curr,2,1;keycurr$,rec_curr,e
		if e<>0
			let currdesc$=" ",currdesc$
			let curr_rate=0
		else
			mat read #ch_curr,rec_curr,2;currdesc$;
			mat read #ch_curr,rec_curr,846;curr_rate;
		endif
	else
		let currdesc$=" ",currdesc$
		let curr_rate=0
	endif
endif


V$ = "10"
E = 0
Search #C15,2,1;V$,V1,E
Mat Read #C15,V1,2;R2$;
V$ = " ",V$
V$[3,6] = R2$[1,4]
Search #C16,2,1;V$,V1,E
Mat Read #C16,V1,10;G9$;
!
!!V$ = " ",V$
!!V$ = "20"
!!Search #15,2,1;V$,V1,E
!!If E Goto L_965
!!Mat Read #15,V1,10;R$;
!!If R$[3,3] = "0" Goto L_945
!!Goto L_945
!!!!Print 'RB CR CL';"CHECK REGISTER MUST BE ACCEPTED"
!!!!Signal 3,30
!!!!Goto L_2340
!!L_945: V$ = " ",V$
!!V$ = " 0"
!!Search #15,2,1;V$,V1,E
!!If Not(E) Goto L_980
!!!!L_965: !!Print 'CL RB';"ERR IN A00AP REC # ";V$
!!!!Signal 3,5
!!!!Gosub ERR_SEARCH
!!L_980: Mat Read #15,V1,32;R$;
!!F$ = R$[13,13],"/","A50CR",G8$[1,2]
!!Ropen #2,F$
!!Mat Read #1,88,112;F$; \ Ropen #3,F$
!!V$ = "10"
!!E = 0
!!Search #15,2,1;V$,V1,E
!!!!If E Gosub ERR_SEARCH
!!Mat Read #15,V1,2;R2$;
!!V$ = " ",V$
!!V$[3,6] = R2$[1,4]
!!Search #16,2,1;V$,V1,E
!!!!If E Gosub ERR_SEARCH
!!Mat Read #16,V1,10;G9$;
!!!!Print 'CS';@1,0;G9$[1,40]; Tab 45;" A/P OPEN CHECK LIST"
!!!!If Err 0 Gosub ERR_ESCAPE
!


if j8 <>0
   tmp$ ="BANK #",fdel$,"BANK NAME",fdel$,"CHECK #",fdel$
   tmp$ = tmp$,"VENDOR #",fdel$, "VENDOR NAME",fdel$
   tmp$ = tmp$, "DATE ",fdel$,"AMOUNT",fdel$,"RECONCILE",FDEL$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if 
!
Gosub L_2380!
K$ = " ",K$ \ K$[1,2] = F9 Using "##"
K$[3,8] = A1 Using "######"
If N = 1 Let K$[3,8] = JDATE[0] Using "######"
L_2040: E = 0
L_2050: Search #2,3,N0;K$,R,E
If E = 2 Goto L_2270
!!If E Gosub ERR_SEARCH
Mat Read #2,R,0;C;
Mat Read #2,R,12;C1;
Mat Read #2,R,18;C2;
Mat Read #2,R,22;C$;
Mat Read #2,r,54;a5currid; ! 9 CURRID                S        CURRID          2    54   
Mat Read #2,r,56;a5currfact; !  10 CURRENCY FACT         T        CURRFACT        6    56  
If Not(RECFLAG) And C2[1] <> 0 Goto L_2050
If A2 = 0 Goto L_2144
If N = 1 ! "DATE
  X2 = C[2]
  JDATE[2] = X2
End If 
If N = 1 If JDATE[2] > JDATE[1] Goto L_2050
If N = 2 If C[1] > A2 Goto L_2050
L_2144: If Not(A1) Goto L_2154
If N = 1 ! "DATE
  X2 = C[2]
  JDATE[2] = X2
End If 
If N = 1 If JDATE[2] < JDATE[0] Goto L_2050
If N = 2 If C[1] < A1 Goto L_2050
L_2154: F6[1] = K$[1,2]
If F9<>0
	If F9 <> F6[1] Goto L_2270
endif
If F6<>0
	If F6 <> F6[1] Gosub L_3000
endif
If F6 <> F6[1] Gosub L_3100
F6 = F6[1]
If L1 > J9 Gosub L_2380
if p61$[136,136]="Y" and curr_rate<>0 and a5currfact<>0
	let cnvcu[0]=1
	let cnvcu[1]=1
	let cnvca[0]=c1
	let cnvca[1]=a5currfact
	call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
	let c1=fns(cnvca[0])
endif
IF J8 
  tmp$=F6[1] Using "##  ",fdel$
  tmp$=tmp$,rtrim$(A3$),fdel$
  tmp$=tmp$,C[1] Using "######",fdel$ 
  If C[0]  let tmp$=tmp$,C[0] Using "######",fdel$ else tmp$=tmp$,"",fdel$
  tmp$=tmp$,rtrim$(C$[1,30]),fdel$
  X2 = C[2] \ Gosub L_7770
  D6$ = X$[1,8]
  tmp$=tmp$,D6$,fdel$
  tmp$=tmp$,C1  Using "###,###,###.##",fdel$
  if c2[1]<>0
	let tmp$=tmp$,"Y",fdel$
  else
	let tmp$=tmp$,"N",fdel$
  endif
  call addtostr(e$,rstr$,tmp$+rdel$)
ELSE
  Print #0; Using "######"; Tab 2;C[1]; !!CHECK #
  If C[0] Print #0; Using "######"; Tab 12;C[0]; !!VENDOR #
  Print #0; Tab 25;C$[1,30];!!VENDOR NAME
  X2 = C[2] \ Gosub L_7770
  D6$ = X$[1,8]
  Print #0; Tab 60;D6$;!!DATE
  Print #0; Using "###,###,###.##"; Tab 77;C1;!!!AMOUNT
  If C2[1] Print #0;"*";
  Print #0;""
END IF
!
T2 = T2 + C1
L1 = L1 + 1
T3 = T3 + C1
Goto L_2040
L_2270: Gosub L_3000
If L > 48 Goto L_2380
if not(j8)
  Print #0; Tab 77;"--------------"
  Print #0; Tab 35;" T O T A L  A M O U N T";
end if
L_2290: 
if not(j8)
  Print #0; Using "##,###,###.##"; Tab 77;T2
  Print #0;" "
  Print #0;"\15\";" 564  - END -  ";
end if
goto OUTEND
!
!!If Err 0 Rem
!!If J8 Input "PRESS <CR> TO CONTINUE: "J$
!!L_2340: !!Close  
!!Chain "MX000"
!
L_2380: Rem HEADINGS
if j8 return
If P9 Print #0;"\14\";
!!If P9 If J8 Input "PRESS <CR> TO CONTINUE: "J$ \ Print 'CS';
P9 = P9 + 1
Print #0; Tab 50;G9$[1,40]
Print #0;D8$; Tab 50;"ACCOUNTS PAYABLE OPEN CHECK LISTING";
Print #0; Tab 110;"PAGE:";P9
if p61$[136,136]="Y" and bank_currid<>0
	print #0;"Currency: ";currdesc$[1,30]
else
	Print #0;""
endif
Print #0; Tab 2;"CHECK #"; Tab 12;"VENDOR #"; Tab 25;
Print #0;"VENDOR NAME"; Tab 60;"DATE"; Tab 84;"AMOUNT"
L1 = 6
Return 
!
L_2510: !!Print 'CS'; Tab 25;"OPEN CHECK LISTING "
!!If Not(C0) Let F9 = 1 \ Goto L_2520
!!Print @5,2;"ENTER BANK#, <CR> FOR ALL,  E: TO END: "; \ Input ""J$
!!If J$ = "E" Goto L_2340
!!F9 = 0 \ If J$ = "" Goto L_2520
!!F9 = J$
!!L_2520:!! Print @0,23;'CL';"Enter selection or <CR> to exit. ";
!!L_2530: !!Print @5,5;'CL';"SELECT OPTION DESIRED:  1: CHECK DATE,  2: CHECK # ";
!!Input ""J$
!!If J$ = "" Goto OUTEND
!!N = J$
!!If N < 1 Goto L_2530
!!If N > 2 Goto L_2530
!!If N = 1 Let N0 = 2
!!If N = 2 Let N0 = 1
!!If N = 1 Goto L_2750
!!L_2590:!! Print @5,7;"ENTER STARTING NUMBER OR <CR> FOR ALL ";
!!Input ""J$
!!A1 = J$
!!If A1 = 0 Let A2 = 0!!!!!!!!!!!!!!!!!!!!!!
!!If A1 = 0 Goto L_2900
!!Print @5,9;'CL';"ENTER ENDING NUMBER OR <CR> FOR ALL ";
!!Input ""J$
!!A2 = J$
!!If Not(A2) Let A2 = 999999
!!If A1 <= A2 Goto L_2900
!!Print @0,23;'CL RB';"ENDING NUMBER MUST BE GREATER THAN STARTING ";
!!Signal 3,30
!Print @55,7;'CL'
!Print @5,9;'CL';
!Print @0,23;'CL';
!!Goto L_2590
!!L_2750: Rem *** DATE SELECTION ***
!!Print @0,23;'CL';"Enter starting date (MMDDYY) or <CR> for 1st.";
!!Print @5,5;"DATE:";'CL';
!!Input ""J$
If J$ = "" Let A1 = 0!!!
J1$ = J$
L_2810: !!Print @0,23;'CL';"Enter ending date (MMDDYY) or <CR> for last.";
!!Print @5,6;"DATE:";'CL';
!!Input ""J$
stop
If J$ = "" Let J2$ = "9",J2$!!!ending date
If J$ <> "" Let J2$ = J$
J3$ = J1$[5,6],J1$[1,2],J1$[3,4]
A1 = J3$[1,6]
X2 = A1 \ Gosub L_7820 \ A1 = 0
JDATE[0] = X2
J3$ = J2$[5,6],J2$[1,2],J2$[3,4]
A2 = J3$[1,6]
X2 = A2 \ If A2 <> 999999 Gosub L_7820 \ Goto L_2810
JDATE[1] = X2
If JDATE[0] <= JDATE[1] Goto L_2900
!!Print @0,23;'RB CL';"INVALID RANGE ENTERED!"; \ Signal 3,20
!!Print @0,23;'CL' 
!!Goto L_2750

L_2900: !!Print @0,23;'CL';
L_2905: !!Print @5,11;'CL';"INCLUDE RECONCILED CHECKS ON LISTING (Y/N OR  E: TO END) ";
!!Input ""J$ \ If J$ = "E" Goto OUTEND
!!RECFLAG = 0 \ If J$ = "Y" Let RECFLAG = 99 \ Goto L_2995
!!If J$ <> "N" Goto L_2905
!!Goto L_2995
!!L_2995: Return 
stop
!
L_3000: Rem PRINT BANK TOTALS
if j8 return
If L1 > 48 Gosub L_2380
Print #0; Tab 77;"--------------"
Print #0; Tab 35;" BANK TOTAL AMOUNT";
Print #0; Using "###,###,###.##"; Tab 77;T3
L1 = L1 + 2
T3 = 0
Return 
!
L_3100: Rem PRINT BANK NAME
A3$ = "BANK NOT ON FILE!!!"
V$ = F6[1] Using "##"
Search #3,2,1;V$,V1,E
If E = 1 Goto L_3150
!!If E Gosub ERR_SEARCH
Mat Read #3,V1,2;A3$;
L_3150: If L1 > 48 Gosub L_2380
if not(j8)
  Print #0;" "
  Print #0; Using "##  ";"BANK:  ";F6[1];A3$!
  Print #0;""
end if
L1 = L1 + 3
Return 
!
NUM2DATE:
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_7770: Rem DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] 
Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return  1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
OUTEND: Rem END 
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section

External Lib "libgeneral.lib"
Declare External Sub XMLtoExcel
Call XMLtoExcel(e$,"tcw_text.txt",rstr$)

  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
End 
!!Close 
!!Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End
