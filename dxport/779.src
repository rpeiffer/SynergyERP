! 779 - Inventory Turns report
! from Morrisette
!
! loadsave -w -n 100,10 -o prog/dxport/779.dl4 src/779.src
!
include "src/copyright.inc"
Rem MX779 - Inventory Turns Report
Rem ERG/Morrisette: 05/23/07
Rem MANY SORT OPTIONS
Rem BEDIT Version: 2.3 OBJECT CODE     Created: MAY 31, 2011  12:57:23
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/morris.r10/mx779.src (univ2) [valerie] {34929}
Rem  Copyright (c) 2011 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! "NOTE: The Individual/Multiple selections will not be saved!"
! Tried droplists by libfilehandler, but if more than 1 - it screws up
Declare Intrinsic Sub FormatDate,InpBuf,String,Time
!Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External sub GetCostLevels

If Err 0 Gosub ERR_TRAP
!Print 'WD';
!Window On 
Dim 1%,COST_LEV[3]
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim FLE$[20],K1$[60],K2$[60],K3$[60],K4$[60],K5$[60]
Dim A$[156],VEND$[30],BUYR$[30],GRP$[30],RETVAL$[512]
Dim ANS$[20],CNAM$[30],STIM$[26],ARDATE$[8],Z2$[5]
Dim P9$[50],P60$[50],P61$[256],SITEM$[12],EITEM$[12]
Dim PROD$[12],SPACES$[80],TITLE$[30],START$[30]
Dim 1%,COID,V9[5],SCRN,FLD,WHSE,TRNSRT,SC,SR
Dim 1%,IWHS,IVND,IBUY,IGRP,IITM,SWHSE,EWHSE,RTYPE,RSORT,TRNDR
Dim 1%,W0[3],W1[2],CH,J,WH,ARMTH,PRTNM[5],MTH[24]
Dim 2%,ARDATE,JDATE[5],B[24],VEND,BUYR,PGRP
Dim 2%,SVEND,EVEND,SBUYR,EBUYR,SPGRP,EPGRP
Dim 2%,W2[9]
Dim 3%,WHMISC2[7],NOREC,TTLS[30],PWS[12,2],PWSL[12,2]
Dim 3%,PWAVG[12],PWAVGL[12],COGS,ITURNS
Dim 3%,R[99],HLDBRK[9],SCAN[12],TURNS
Dim Message$[800],WebStr$[800],Custom_Customer$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For J = 2 To 9
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #1,88,J1;FLE$;
  Ropen #J,FLE$
NXTFLE: Next J
Data "1792","1744","-1","2400","-1","-1","-1","-1"
FLE$ = "4/PWSALES" + Str$(COID)
Ropen #4,FLE$
FLE$ = "2/BUYERS"
Ropen #6,FLE$
FLE$ = "2/PRODGRP" + Str$(COID)
Ropen #7,FLE$
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Read #1,0,108;ARDATE;
Read #1,0,120;ARMTH;
X$ = ARDATE Using "&&&&&&"
Call FormatDate(X$,X$,E)
If E
  Mat Read #1,0,100;ARDATE$;
Else 
  ARDATE$ = X$
End If 
SR = 3;SC = 5
Mat Read #1,3,0;CNAM$;
mat read #1,115,60;custom_customer$;
let custom_customer$=UCase$(trim$(custom_customer$))
SPACES$ = " ",SPACES$
UserID$=UCase$(userid$)
Call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
!Call "progdflt","779","",77,RETVAL$ ! we'll use BLOCKID save defaults
!If RETVAL$[1,5] = "@@@@@"
  IWHS = 0
  IVND = 0
  IBUY = 0
  IGRP = 0
  IITM = 0
  SWHSE = 1;EWHSE = 99
  SVEND = 0;EVEND = 999999
  SBUYR = 0;EBUYR = 999
  SPGRP = 0;EPGRP = 999
  SITEM$ = " ",SITEM$
  EITEM$ = "z",EITEM$
  RTYPE = 0
  RSORT = 1
  TRNDR = 0
  TRNSRT = 0
  NMTH = 12
!  RETVAL$ = " ",RETVAL$
!Else 
!  IWHS = RETVAL$[1,1]
!  IVND = RETVAL$[2,2]
!  IBUY = RETVAL$[3,3]
!  IGRP = RETVAL$[4,4]
!  IITM = RETVAL$[5,5]
!  RSORT = RETVAL$[6,7]
!  RTYPE = RETVAL$[8,8]
!  TRNDR = RETVAL$[9,9]
!  If Not(IWHS) ! range
!    SWHSE = RETVAL$[10,11];EWHSE = RETVAL$[12,13]
!  Else 
!    SWHSE = 0;EWHSE = 0
!  End If 
!  If Not(IVND) ! "range
!    SVEND = RETVAL$[14,19];EVEND = RETVAL$[20,25]
!  Else 
!    SVEND = 0;EVEND = 0
!  End If 
!  If Not(IBUY) ! "range
!    SBUYR = RETVAL$[26,28];EBUYR = RETVAL$[29,31]
!  Else 
!    SBUYR = 0;EBUYR = 0
!  End If 
!  If Not(IGRP) ! "range
!    SPGRP = RETVAL$[32,34];EPGRP = RETVAL$[35,37]
!  Else 
!    SPGRP = 0;EPGRP = 0
!  End If 
!  If Not(IITM) ! "range
!    SITEM$ = RETVAL$[38,49];EITEM$ = RETVAL$[50,61]
!  Else 
!    SITEM$ = " ",SITEM$;EITEM$ = SITEM$
!  End If 
!  NMTH = RETVAL$[62,63]
!End If 
Rem as there is no way to store "INDIVIDUAL" Entries in RetVal
Rem get the fields for these again!
TRNSRT = 0
If RSORT = 2 Or RSORT = 4 Or RSORT = 6 Or RSORT = 8 Or RSORT = 10 Let TRNSRT = 1
If RSORT = 12 Or RSORT = 15 Or RSORT = 16 Or RSORT = 19 Or RSORT = 20 Let TRNSRT = 1
! call dxsave(0,"tmp/779in.txt!")
Clear Message$
Eflag=0
STARTHERE: Rem "
!Gosub SHOESCRN
!SHOESCRN: Rem "entry fields
!Print 'CS ED';@0,0;"-MX779-";
!Print @32,0;"ITEM TURNS REPORT";
!Print @30,2;'BR';"STARTING";@50,2;"ENDING";'ER';
!Print 'BD';
!Print @4,4;"WAREHOUSE";
!Print @4,5;"VENDOR";
!Print @4,6;"BUYER";
!Print @4,7;"PRODUCT GROUP";
!Print @4,8;"PRODUCT CODE";
!Print @4,10;"REPORT TYPE";
!Print @4,12;"SORT ORDER";
!Print @4,15;"SOLD WITHIN";
!Print @32,15;"MONTHS";
!Print 'ED';
!Print @0,4;" 1> ";@0,5;" 2> ";@0,6;" 3> ";@0,7;" 4> ";
!Print @0,8;" 5> ";@0,10;" 6> ";@0,12;" 7> ";
!Print @0,15;" 9> ";
!Return 
!Gosub SHODATA

FLD1: Rem "warehouse
!J5$ = "Enter the Field Type (M=multiple Individual or R=range)"
!J0$ = "2 000120 4";J1$ = "R"
!If IWHS Let J1$ = "M"
!Gosub ISINPUT
!If J$ <> "M" And J$ <> "R" Goto FLD1
!IWHS = 0 \ If J$ = "M" Let IWHS = 1
!If IWHS Gosub ENT_IMULTI \ Goto FLD1_DONE
Call Dxget("INDWHS",tmp$)
iF RTRIM$(TMP$)<>"" ! entered a whse or more
	X = 1                                                                     
	NextINWh: !  
	x$="";Fld=1
	X2 = 0 \ Let X$ = tmp$ To "," : X2 
	if rtrim$(x$)="" goto exitInwh:
	IF LEN(X$)>0 AND LEN(X$)<3
		J1=X$
		IF J1>=0 AND J1<=99
			J$=J1 USING "##" \ Gosub Ent_IMulti
		Endif
	endif                                           
    If X2 Let tmp$ = tmp$[X2 + 1]
	if x2 Goto NextInWh                
	ExitInWh: !
	IWHS=1 ! individ
	Gosub Chk_entry
Else
	V9=0
endif  
If not(IWhs) AND V9=0 ! not individ - range
	!J5$ = "Enter the starting warehouse #"
	!J0$ = "3000023004";J1 = SWHSE
	!Gosub ISINPUT
	call dxget("SWHSE",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(Swhse)
	J1=tmp$
	SWHSE = J1
	EWHSE: Rem "ending
	!J5$ = "Enter the ending warehouse #"
	!J0$ = "3000025004";J1 = EWHSE
	!Gosub ISINPUT
	call dxget("EWHSE",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(EWHSE)
	J1=tmp$
	If J1 < SWHSE
	  J7$ = "INVALID WHSE RANGE ENTERED!"
	  Gosub ISERRMSG
	  EFlag=Eflag+1
	End If 
	EWHSE = J1
Endif
FLD1_DONE: Rem "retain in retval$
!RETVAL$[1,1] = Str$(IWHS)
!If Not(IWHS)
!  RETVAL$[10,11] = SWHSE Using "##"
!  RETVAL$[12,13] = EWHSE Using "##"
!Else 
!  RETVAL$[10,13] = SPACES$
!End If 
!Return 
FLD2: Rem "Vendor
!J5$ = "Enter the Field Type (M=multiple Individual or R=range)"
!J0$ = "2 000120 5";J1$ = "R"
!If IVND Let J1$ = "M"
!Gosub ISINPUT
!If J$ <> "M" And J$ <> "R" Goto FLD2
!IVND = 0 \ If J$ = "M" Let IVND = 1
!If IVND Gosub ENT_IMULTI \ Goto FLD2_DONE
Call Dxget("INDVEND",tmp$)
iF RTRIM$(TMP$)<>"" ! entered a whse or more
	X = 1                                                                     
	NextINVn: !  
	x$="";fld=2
	X2 = 0 \ Let X$ = tmp$ To "," : X2 
	if rtrim$(x$)="" goto exitInvn:
	IF LEN(X$)>0 AND LEN(X$)<7
		J1=X$
		IF J1>=0 AND J1<=999999
			J$=J1 USING "######" \ Gosub Ent_IMulti
		Endif
	endif                                           
    If X2 Let tmp$ = tmp$[X2 + 1]
	if x2 Goto NextInVn                
	ExitInVn: !
	IVND=1 ! individ
	Gosub Chk_entry
Else
	v9=0
endif 
If Not(IVND) and v9=0 ! range it
	!J5$ = "Enter the starting Vendor #"
	!J0$ = "3000063005";J1 = SVEND
	!Gosub ISINPUT
	call dxget("SVEND",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(SVEND)
	j1=tmp$
	SVEND = J1
	EVEND: Rem "ending
	!J5$ = "Enter the ending Vendor #"
	!J0$ = "3000065005";J1 = EVEND
	!Gosub ISINPUT
	call dxget("EVEND",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(EVEND)
	j1=tmp$
	If J1 < SVEND
	  J7$ = "INVALID VENDOR RANGE ENTERED!"
	  Gosub ISERRMSG
	  EFlag=Eflag+1
	End If 
	EVEND = J1
Endif
FLD2_DONE: Rem "retain in retval$
!RETVAL$[2,2] = Str$(IVND)
!If Not(IVND)
!  RETVAL$[14,19] = SVEND Using "######"
!  RETVAL$[20,25] = EVEND Using "######"
!Else 
!  RETVAL$[14,25] = SPACES$
!End If 
!Return 
FLD3: Rem "Buyer
!J5$ = "Enter the Field Type (M=multiple Individual or R=range)"
!J0$ = "2 000120 6";J1$ = "R"
!If IBUY Let J1$ = "M"
!Gosub ISINPUT
!If J$ <> "M" And J$ <> "R" Goto FLD3
!IBUY = 0 \ If J$ = "M" Let IBUY = 1
!If IBUY Gosub ENT_IMULTI \ Goto FLD3_DONE
Call Dxget("INDBUYR",tmp$)
iF RTRIM$(TMP$)<>"" ! entered a whse or more
	X = 1                                                                     
	NextINby: !  
	x$="";fld=3
	X2 = 0 \ Let X$ = tmp$ To "," : X2 
	if rtrim$(x$)="" goto exitInby:
	IF LEN(X$)>0 AND LEN(X$)<4 ! 0-999
		j1=x$
		if j1>=0 and j1<=999
			J$=j1 using "###" \ Gosub Ent_IMulti
		Endif
	endif                                           
    If X2 Let tmp$ = tmp$[X2 + 1]
	if x2 Goto NextInby                
	ExitInby: !
	IBUY=1 ! individ
	Gosub Chk_entry
Else
	v9=0
endif 
If Not(IBuy) and v9=0 ! range
	!J5$ = "Enter the starting Buyer #"
	!J0$ = "3000033006";J1 = SBUYR
	!Gosub ISINPUT
	call dxget("SBUY",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(SBUYR)
	j1=tmp$
	SBUYR = J1
	EBUYR: Rem "ending
	!J5$ = "Enter the ending Buyer #"
	!J0$ = "3000035006";J1 = EBUYR
	!Gosub ISINPUT
	call dxget("EBUY",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(EBUYR)
	j1=tmp$
	If J1 < SBUYR
	  J7$ = "INVALID BUYER RANGE ENTERED!"
	  Gosub ISERRMSG
	  EFlag=Eflag+1
	End If 
	EBUYR = J1
Endif
FLD3_DONE: Rem "retain in retval$
!RETVAL$[3,3] = Str$(IBUY)
!If Not(IBUY)
!  RETVAL$[26,28] = SBUYR Using "###"
!  RETVAL$[29,31] = EBUYR Using "###"
!Else 
!  RETVAL$[26,31] = SPACES$
!End If 
!Return 
FLD4: Rem "Product Group
!J5$ = "Enter the Field Type (M=multiple Individual or R=range)"
!J0$ = "2 000120 7";J1$ = "R"
!If IGRP Let J1$ = "M"
!Gosub ISINPUT
!If J$ <> "M" And J$ <> "R" Goto FLD4
!IGRP = 0 \ If J$ = "M" Let IGRP = 1
!If IGRP Gosub ENT_IMULTI \ Goto FLD4_DONE
Call Dxget("INDGRP",tmp$)
iF RTRIM$(TMP$)<>"" ! entered a whse or more
	X = 1                                                                     
	NextINGP: !  
	x$="";fld=4
	X2 = 0 \ Let X$ = tmp$ To "," : X2 
	if rtrim$(x$)="" goto exitIngp:
	IF LEN(X$)>0 AND LEN(X$)<3
		j1=x$
		if j1>=0 and j1<=999
			J$=J1 using "###" \ Gosub Ent_IMulti
		endif
	endif                                           
    If X2 Let tmp$ = tmp$[X2 + 1]
	if x2 Goto NextInGP
	ExitInGP: !
	IGRP=1 ! individ
	Gosub Chk_entry
Else
	v9=0
endif 
If Not(IGRP) and v9=0 ! range
	!J5$ = "Enter the starting Product Group #"
	!J0$ = "3000033007";J1 = SPGRP
	!Gosub ISINPUT
	Call dxget("SPGRP",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(SPGRP)
	j1=tmp$
	SPGRP = J1
	EPGRP: Rem "ending
	!J5$ = "Enter the ending Product Group #"
	!J0$ = "3000035007";J1 = EPGRP
	!Gosub ISINPUT
	Call dxget("EPGRP",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(EPGRP)
	j1=tmp$
	If J1 < SPGRP
	  J7$ = "INVALID GROUP RANGE ENTERED!"
	  Gosub ISERRMSG
	  EFlag=Eflag+1
	End If 
	EPGRP = J1
Endif
FLD4_DONE: Rem "retain in retval$
!RETVAL$[4,4] = Str$(IGRP)
!If Not(IGRP)
!  RETVAL$[32,34] = SPGRP Using "###"
!  RETVAL$[35,37] = EPGRP Using "###"
!Else 
!  RETVAL$[32,37] = SPACES$
!End If 
!Return 
FLD5: Rem "Product Code
!J5$ = "Enter the Field Type (M=multiple Individual or R=range)"
!J0$ = "2 000120 8";J1$ = "R"
!If IITM Let J1$ = "M"
!Gosub ISINPUT
!If J$ <> "M" And J$ <> "R" Goto FLD5
!IITM = 0 \ If J$ = "M" Let IITM = 1
!If IITM Gosub ENT_IMULTI \ Goto FLD5_DONE
Call Dxget("INDPROD",tmp$)
iF RTRIM$(TMP$)<>"" ! entered a whse or more
	X = 1                                                                     
	NextINPr: !  
	x$="";fld=5
	X2 = 0 \ Let X$ = tmp$ To "," : X2 
	if rtrim$(x$)="" goto exitInpr:
	IF LEN(X$)>0 AND LEN(X$)<13
		J$[1,12]=UCASE$(X$)+SPACES$ \ Gosub Ent_IMulti
	endif                                           
    If X2 Let tmp$ = tmp$[X2 + 1]
	if x2 Goto NextInpr                
	ExitInpr: !
	IITM=1 ! individ
	Gosub Chk_entry
Else
	v9=0
endif 
If Not(IITM) and v9=0 ! range
	!J5$ = "Enter the starting Product Code"
	!J0$ = "2 00123008";J1$ = SITEM$
	!Gosub ISINPUT
	call dxget("SPROD",tmp$) \ if rtrim$(tmp$)="" let tmp$=SITEM$
	J$=UCase$(RTrim$(tmp$))
	SITEM$ = J$+Spaces$
	EITEM: Rem "ending
	!J5$ = "Enter the ending Product Code"
	!J0$ = "2 00125008";J1$ = EITEM$
	!Gosub ISINPUT
	Call dxget("EPROD",tmp$) \ if rtrim$(tmp$)="" let tmp$=EITEM$
	J1$=UCase$(RTrim$(tmp$))
	If J1$ < SITEM$
	  J7$ = "INVALID PRODUCT RANGE ENTERED!"
	  Gosub ISERRMSG
	  EFlag=Eflag+1
	End If 
	EITEM$ = J1$+SPACES$ ! "zzzzzzzzzzzzz"
Endif
FLD5_DONE: Rem "retain in retval$
!RETVAL$[5,5] = Str$(IITM)
!If Not(IITM)
!  RETVAL$[38,49] = SITEM$
!  RETVAL$[50,61] = EITEM$
!Else 
!  RETVAL$[38,61] = SPACES$
!End If 
!Return 
FLD6: Rem "Detail or Summary
!J5$ = "Enter  D: for Product Detail  S: for Summary Only"
!J0$ = "2 00012010";J1$ = "D"
!If RTYPE = 1 Let J1$ = "S"
Call dxget("DETLSUMM",tmp$)
!Gosub ISINPUT
J$=UCase$(Rtrim$(tmp$))
!If J$ <> "D" And J$ <> "S" Goto FLD6
RTYPE = 0
If J$ = "S" Let RTYPE = 1
!RETVAL$[8,8] = Str$(RTYPE)
If TRNSRT ! "let 'em know on Summary - Turns is Not APPLICABLE
  !If RTYPE = 1 Print @20,13;'CL';"N/A";
  !If RTYPE = 0 ! "okay
  !  X$ = "A" \ If TRNDR = 1 Let X$ = "D"
  !  Print @20,13;'CL';X$[1,1];
  !End If 
End If 
!Return 
FLD7: Rem "Sort Selection
!Window Open @0,4; Size 80,18; Using "SORT OPTIONS"
!Print 'CS ED';
!Print @0,2;" 1> Whse, Product Code";@40,2;"11> Whse, Buyer, Prod Grp, Prod Code"
!Print @0,3;" 2> Whse, Turns";@40,3;"12> Whse, Buyer, Prod Grp, Turns";
!Print @0,4;" 3> Whse, Prod Grp, Prod Code";@40,4;"13> Whse, Vendor, Buyer, Code";
!Print @0,5;" 4> Whse, Prod Grp, Turns";@40,5;"14> Whse, Vendor, Buyer, Grp, Code";
!Print @0,6;" 5> Whse, Vendor, Prod Code";@40,6;"15> Whse, Vendor, Buyer, Turns";
!Print @0,7;" 6> Whse, Vendor, Turns";@40,7;"16> Whse, Vendor, Buyer, Grp, Turns";
!Print @0,8;" 7> Whse, Vendor, Prod Grp, Prod Code";@40,8;"17> Whse, Buyer, Vendor, Prod Code";
!Print @0,9;" 8> Whse, Vendor, Prod Grp, Turns";@40,9;"18> Whse, Buyer, Vendor, Grp, Code";
!Print @0,10;" 9> Whse, Buyer, Prod Code";@40,10;"19> Whse, Buyer, Vendor, Turns";
!Print @0,11;"10> Whse, Buyer, Turns";@40,11;"20> Whse, Buyer, Vendor, Grp, Turns";
EDT_SORT: Rem "
!Print @0,14;"SORT ORDER #";'CL';
!J5$ = "Enter the Sorting Order Wanted (1-20)"
!J0$ = "3000021514";J1 = RSORT
!Gosub ISINPUT
call dxget("SORTBY",tmp$)
J1=tmp$
!If J1 < 0 Or J1 > 20 Goto EDT_SORT
RSORT = J1
!Window Close 
TRNSRT = 0
If RSORT = 2 Or RSORT = 4 Or RSORT = 6 Or RSORT = 8 Or RSORT = 10 Let TRNSRT = 1
If RSORT = 12 Or RSORT = 15 Or RSORT = 16 Or RSORT = 19 Or RSORT = 20 Let TRNSRT = 1
!Print Using "##";@20,12;RSORT;
If TRNSRT ! "turns is a key field
!  Print 'BD';@4,13;"TURNS SORT";'ED';
!  Print @0,13;" 8> ";
!  If RTYPE = 0
!    If TRNDR Print @20,13;'CL';"D"; Else Print @20,13;'CL';"A";
!  Else 
!    Print @20,13;'CL';"N/A";
!  End If 
Else 
!  Print @0,13;'CL';
End If 
!RETVAL$[6,7] = RSORT Using "##"
!Gosub SHODATA
!Return 
FLD8: Rem "turns direction
If Not(TRNSRT) Let TRNDR = 0 \ Goto FLD8_DONE
If RTYPE = 1 Goto FLD8_DONE
!J5$ = "Enter  A: ascending order  D: descending order"
!J0$ = "2 00012013";J1$ = "A"
!If TRNDR Let J1$ = "D"
!Gosub ISINPUT
Call dxget("TRNDIR",tmp$)
J$=UCase$(RTrim$(tmp$))
!If J$ <> "A" And J$ <> "D" Goto FLD8
TRNDR = 0
If J$ = "D" Let TRNDR = 1
FLD8_DONE: Rem "
!RETVAL$[9,9] = Str$(TRNDR)
!Return 
FLD9: Rem "number of months no sales
!J0$ = "3000022515";J1 = NMTH
!J5$ = "Enter the Number of Months that sold within"
!Gosub ISINPUT
Call dxget("MNSOLD",tmp$)
Let J1=tmp$
If J1 < 1 Or J1 > 23 ! Goto FLD9
	J7$ = "INVALID Months Sold ENTERED! (1-23)"
	  Gosub ISERRMSG
	  EFlag=Eflag+1
Endif
NMTH = J1
!RETVAL$[62,63] = NMTH Using "##"
For I = 1 To 24
  MTH[I] = 0
Next I
For I = 1 To NMTH
  J = ARMTH + 1 - I
  If J <= 0 Let J = ARMTH + 13 - I
  If J <= 0 Let J = J + 12
  If I > 12 Let MTH[J + 12] = 1 Else Let MTH[J] = 1
Next I
Goto WhatNow ! Return ! DONE WITH SELECTIONS
ENT_IMULTI: Rem "enter the multiple selections
If FLD = 1 ! Whse
  K5$ = "~W";CH = 0;ANS$ = "Warehouse"
End If 
If FLD = 2 ! "Vendor
  K5$ = "~V";CH = 5;ANS$ = "Vendor"
End If 
If FLD = 3 ! "Buyer
  K5$ = "~B";CH = 6;ANS$ = "Buyer"
End If 
If FLD = 4 ! "Prod Group
  K5$ = "~G";CH = 7;ANS$ = "Group"
End If 
If FLD = 5 ! "Product
  K5$ = "~P";CH = 2;ANS$ = "Product"
End If 
!Window Open @0,0; Size 80,24; Using "MULTIPLE " + ANS$ + " ENTRY"
!Print 'CS';
!Print @0,2;" ";ANS$;
!REDISPL_SEL: Rem "redisplay selections
!V9 = 0;V9[1] = 4
!Print @0,V9[1];'CE';
!K1$ = " ",K1$;K1$ = K5$ + SPACES$
!MI_LOOP: Rem "
!Search #9,3,1;K1$,R[9],E \ If E = 2 Goto MID_DONE
!If E Gosub ERR_SEARCH
!If K1$[1,2] <> K5$[1,2] Goto MID_DONE
!If V9[1] > 20 ! "too many
!  V9 = V9 + 15
!  V9[1] = 4
!End If 
!Print @V9,V9[1];K1$[3];
!V9[1] = V9[1] + 1
!Goto MI_LOOP
MID_DONE: Rem "finished, now ask for next thing to add
!J5$ = "ENTER A " + ANS$ + " <CR>: end  R: redisplay"
!If CH = 2 Let J5$ = J5$ + "  Lookup Option"
!If CH <> 2 Let J5$ = J5$ + "  L: list"
!J0$ = "3000061502RL";J1 = 0
!If FLD = 1 Let J0$[5,6] = "02"
!If FLD = 3 Or FLD = 4 Let J0$[5,6] = "03"
!If FLD = 5 ! "item
!  J0$ = "2 00121502R";J1$ = ""
!End If 
!Gosub ISINPUT
!If J4$ = "R" Goto REDISPL_SEL
!If J4$ = "" Goto IM_DONE
!If J4$ = "L" And CH <> 2 ! "all but product
!  SCAN[0] = 0;SCAN[2] = 1;SCAN[3] = 0;SCAN[5] = 0;SCAN[8] = 1
!  If CH = 0 Let SCAN[1] = -2768 Else Let SCAN[1] = CH
!  If CH = 5 Let SCAN[4] = 6
!  If CH = 0 Let SCAN[4] = 2;SCAN[5] = 4;SCAN[8] = 3
!  If CH = 6 Let SCAN[4] = 3;SCAN[8] = 2
!  If CH = 7 Let SCAN[4] = 3
!  SCAN[6] = 30;SCAN[7] = 0
!  START$ = J4$[2];TITLE$ = ANS$ + " Lookup"
!  Call "MXSCAN",SR,SC,SCAN[],TITLE$,START$
!  Goto MID_DONE
!End If 
!If CH = 2 Gosub PRODSCAN \ Goto MID_DONE
K1$ = " ",K1$;K1$ = K5$ + J$
!Search #9,2,1;K1$,R,E \ If E > 1 Gosub ERR_SEARCH
!If Not(E) ! "existing, do a delete
!QESEL: Rem "
!  Print @0,21;'CE';"EXISTING ENTRY, DELETE IT? (Y/N)  ";
!  Input Len 16384 + 1;""X$ \ Call String(1,X$)
!  If X$ <> "Y" And X$ <> "N" Goto QESEL
!  If X$ = "N" Goto MID_DONE
!  If X$ <> "Y" Goto QESEL
!  Search #9,5,1;K1$,R,E \ If E Gosub ERR_SEARCH
!  Print @0,22;'CE';"ENTRY DELETED";
!  Signal 3,20
!  Goto MID_DONE
!End If 
If CH > 0 ! "can check a file
  If CH = 5 Or CH = 7 Or CH = 2
    K2$ = " ",K2$;K2$ = J$
    Search #CH,2,1;K2$,R,E \ If E > 1 Gosub ERR_SEARCH
    If E
      J7$ = ANS$+" Entry Not Found in File!"
      Gosub ISERRMSG \ EFlag=Eflag+1
      Goto IM_DONE
    End If 
  Else ! "is a record (Buyer)
	J1=j$
    If J1 < 0 Or J1 > 999 Or Fra(J1)
      J7$ = "BUYER NOT FOUND!"
      Gosub ISERRMSG \ EFlag=Eflag+1
      Goto IM_DONE
    End If 
  End If 
Else ! "warehouse
  j1=j$
  If J1 <= 0 Or J1 > 99 Or Fra(J1)
    J7$ = "WAREHOUSE NOT FOUND!"
    Gosub ISERRMSG \ EFlag=Eflag+1
    Goto IM_DONE
  End If 
End If 
Search #9,4,1;K1$,R[9],E \ If E > 1 Gosub ERR_SEARCH
!Print @0,22;'CE';"ENTRY ADDED";
!Signal 3,20
!Goto MID_DONE
IM_DONE: Rem "done
!Window Close 
!Gosub CHK_ENTRY
!Gosub SHODATA
Return 
CHK_ENTRY: Rem "see if REALLY Multiple
V9 = 0
K1$ = " ",K1$;K1$ = K5$ + SPACES$
CMI_LOOP: Rem "
Search #9,3,1;K1$,R[9],E \ If E = 2 Goto CMI_DONE
If E Gosub ERR_SEARCH
If K1$[1,2] <> K5$[1,2] Goto CMI_DONE
V9 = V9 + 1
START$ = K1$
Goto CMI_LOOP
CMI_DONE: Rem "
If V9 = 1 ! "one can be a RANGE! 2+ is a multiple entry
  If FLD = 1 Let IWHS = 0;SWHSE = K1$[3];EWHSE = SWHSE
  If FLD = 2 Let IVND = 0;SVEND = K1$[3];EVEND = SVEND
  If FLD = 3 Let IBUY = 0;SBUYR = K1$[3];EBUYR = SBUYR
  If FLD = 4 Let IGRP = 0;SPGRP = K1$[3];EPGRP = SPGRP
  If FLD = 5 Let IITM = 0;SITEM$ = K1$[3];EITEM$ = SITEM$
  Search #9,5,1;K1$,R,E \ If E Gosub ERR_SEARCH
End If 
If V9 = 0 ! "none - just change flag
  If FLD = 1 Let IWHS = 0
  If FLD = 2 Let IVND = 0
  If FLD = 3 Let IBUY = 0
  If FLD = 4 Let IGRP = 0
  If FLD = 5 Let IITM = 0
End If 
Return 
PRODSCAN: Rem "scan it?
!If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
!If J4$[1,1] >= "A" If J4$[1,1] <= "Z" Return 1
!X1 = 0;X2 = 0
!If J4$[1,1] = "]" If Not(WH) Let X1 = 1
!Call "MXPROD5",J4$,X1,X2
Return 

SHODATA: Rem "existing selections
!Print 'ED';
!If IWHS
!  Print @20,4;"M";'CL';
!  Print @30,4;"*";
!Else 
!  Print @20,4;"R";'CL';
!  Print Using "##";@30,4;SWHSE;@50,4;EWHSE;
!End If 
!If IVND
!  Print @20,5;"M";'CL';@30,5;"*";
!Else 
!  Print @20,5;"R";'CL';
!  Print Using "######";@30,5;SVEND;@50,5;EVEND;
!End If 
!If IBUY
!  Print @20,6;"M";'CL';@30,6;"*";
!Else 
!  Print @20,6;"R";'CL';
!  Print Using "###";@30,6;SBUYR;@50,6;EBUYR;
!End If 
!If IGRP
!  Print @20,7;"M";'CL';@30,7;"*";
!Else 
!  Print @20,7;"R";'CL';
!  Print Using "###";@30,7;SPGRP;@50,7;EPGRP;
!End If 
!If IITM
!  Print @20,8;"M";'CL';@30,8;"*";
!Else 
!  Print @20,8;"R";'CL';
!  Print @30,8;SITEM$;@50,8;EITEM$
!End If 
!If RTYPE Print @20,10;"S"; Else Print @20,10;"D";
!Print Using "##";@20,12;RSORT;
!Print @25,12;'CL';
!If RSORT = 1 Print "Whse, product code";
!If RSORT = 2 Print "Whse, Turns";
!If RSORT = 3 Print "Whse, Prod Group, Prod Code";
!If RSORT = 4 Print "Whse, Prod Group, Turns";
!If RSORT = 5 Print "Whse, Vendor, Prod Code";
!If RSORT = 6 Print "Whse, Vendor, Turns";
!If RSORT = 7 Print "Whse, Vendor, Prod Group, Prod Code";
!If RSORT = 8 Print "Whse, Vendor, Prod Group, Turns";
!If RSORT = 9 Print "Whse, Buyer, Product Code";
!If RSORT = 10 Print "Whse, Buyer, Turns";
!If RSORT = 11 Print "Whse, Buyer, Prod Group, Prod Code";
!If RSORT = 12 Print "Whse, Buyer, Prod Group, Turns";
!If RSORT = 13 Print "Whse, Vendor, Buyer, Prod Code";
!If RSORT = 14 Print "Whse, Vendor, Buyer, Prod Grp, Prod Code";
!If RSORT = 15 Print "Whse, Vendor, Buyer, Turns";
!If RSORT = 16 Print "Whse, Vendor, Buyer, Prod Group, Turns";
!If RSORT = 17 Print "Whse, Buyer, Vendor, Prod Code";
!If RSORT = 18 Print "Whse, Buyer, Vendor, Prod Group, Prod Code";
!If RSORT = 19 Print "Whse, Buyer, Vendor, Turns";
!If RSORT = 20 Print "Whse, Buyer, Vendor, Prod Group, Turns";
!If TRNSRT ! "turns is a key field
!  Print 'BD';@4,13;"TURNS SORT";'ED';
!  Print @0,13;" 8> ";
!  If RTYPE = 0 ! "detail
!    If TRNDR Print @20,13;'CL';"D"; Else Print @20,13;'CL';"A";
!  Else ! "summary
!    Print @20,13;'CL';"N/A";
!  End If 
!Else 
!  Print @0,13;'CL';
!End If 
!Print Using "##";@25,15;NMTH;
!Return 
WHATNOW: Rem "next?
If EFlag>0 goto OutFail ! Err_Msg
! It's ok - Start it
clear e$
Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!Print @0,22;'CE';"SELECT  #: field  A: all  P: print  S: save  E: exit   ";
!Input Len 16384 + 2;""ANS$ \ Call String(1,ANS$)
!If ANS$ = "E" Goto OUTEND
!If ANS$ = "P" Goto STRTSORT
!If ANS$ = "A" Goto EDT_ALL
!If ANS$ = "S" ! "save fields
!  If IWHS Or IVND Or IBUY Or IGRP Or IITM ! "individual/multiple
!    Print @0,22;'CE';"NOTE: The Individual/Multiple selections will not be saved!";
!    Print @0,23;"PRESS <CR> TO CONTINUE  ";
!    Input Len 16384 + 1;""ANS$
!  End If 
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
!  Input ""Z2$ \ Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto WHATNOW
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "Progdfltw","779","",77,RETVAL$,URECFLAG
!  Goto WHATNOW
!End If 
!FLD = ANS$
!If FLD > 0 And FLD < 10 Gosub EDT_FLDS
!Goto WHATNOW
!EDT_ALL: Rem "
!For FLD = 1 To 9
!  Gosub EDT_FLDS
!Next FLD
!Goto WHATNOW
!EDT_FLDS: Rem "
!On FLD Gosub FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,FLD7,FLD8,FLD9
!Return 
STRTSORT: Rem"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
SCRN = 0 \ If J8 Let SCRN = 1
!If SCRN Print 'NR';
!Print @0,22;'CE';"SORTING, PLEASE WAIT  ";
NOREC = 0
K1$ = " ",K1$
If Not(IITM) Let K1$ = SITEM$ + SPACES$
Search #2,2,1;K1$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto SPFFRST
SPROD_LOOP: Rem "product loop
Search #2,3,1;K1$,R[2],E \ If E = 2 Goto SORTDONE
If E Gosub ERR_SEARCH
SPFFRST: Rem "
NOREC = NOREC + 1
!If Not(Fra(NOREC / 100)) Print @40,22;NOREC;K1$;'CL';
If IITM ! "did multiples
  K2$ = "~P" + K1$
  Search #9,2,1;K2$,R,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1 Goto SPROD_LOOP
Else ! "range
  If K1$[1,12] > EITEM$[1,12] Goto SORTDONE
End If 
Mat Read #2,R[2],156;B;
K2$ = " ",K2$;K2$[1,12] = K1$
If Not(IWHS) Let K2$[13,14] = SWHSE Using "##"
Search #3,2,1;K2$,R[3],E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto FFSPRWH
SPRWH_LOOP: Rem "product warehouse
Search #3,3,1;K2$,R[3],E \ If E = 2 Goto SPROD_LOOP
If E Gosub ERR_SEARCH
FFSPRWH: Rem "found start whse
If K2$[1,12] <> K1$[1,12] Goto SPROD_LOOP
X1 = K2$[13]
If IWHS ! "individual entry
  K3$ = " ",K3$;K3$ = "~W" + X1 Using "##"
  Search #9,2,1;K3$,R,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1 Goto SPRWH_LOOP
Else 
  If X1 > EWHSE Goto SPROD_LOOP
End If 
Mat Read #3,R[3],32;W1;
Mat Read #3,R[3],38;W2;
Mat Read #3,R[3],420;W0;
Mat Read #3,R[3],846;WHMISC2;
If Custom_customer$="ACME" If RSORT=10 goto SAPrd ! Acme wants all prods on sort 10 - task 59916
If W0[0] <> 0 Goto SPRWH_LOOP ! Cary Duley only DNR=N used! if Y or O - BYPASS
SAPrd: ! acme wants all prods on sort 10
WHSE = K2$[13,14]
VEND = W2[3]
If VEND <= 0 Let VEND = B[24]
BUYR = W1[2]
PGRP = WHMISC2[0]
TURNS = WHMISC2[2]
PROD$ = K1$[1,12]
If IGRP ! "individual groups
  K3$ = " ",K3$;K3$ = "~G" + PGRP Using "###"
  Search #9,2,1;K3$,R,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1 Goto SPRWH_LOOP
Else 
  If PGRP < SPGRP Or PGRP > EPGRP Goto SPRWH_LOOP
End If 
If IVND ! "individual vendors
  K3$ = " ",K3$;K3$ = "~V" + VEND Using "######"
  Search #9,2,1;K3$,R,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1 Goto SPRWH_LOOP
Else 
  If VEND < SVEND Or VEND > EVEND Goto SPRWH_LOOP
End If 
If IBUY ! "individual Buyers
  K3$ = " ",K3$;K3$ = "~B" + BUYR Using "###"
  Search #9,2,1;K3$,R,E \ If E > 1 Gosub ERR_SEARCH
  If E = 1 Goto SPRWH_LOOP
Else 
  If BUYR < SBUYR Or BUYR > EBUYR Goto SPRWH_LOOP
End If 
If TRNSRT ! "if turns are part of sort key
  Gosub GET_COGS
  TURNS = 0
  If WHMISC2[1] Let TURNS = FNR(COGS / WHMISC2[1])
End If 
Rem sort: wwvvvvvvbbbgggttttttttpppppppppppp
Rem disp: 1234567891123456789212345678931234
Rem                0         0         0
Rem 17+ : wwbbbvvvvvvgggttttttttpppppppppppp
K5$ = " ",K5$
K5$[1,2] = WHSE Using "##"
If RSORT = 1 ! "whse/prod
  K5$[23] = PROD$
End If 
If RSORT = 2 ! "whse/turns/prod
  If TRNDR = 0 ! "ascending
    K5$[15,22] = TURNS Using "#####.##"
  Else ! "descending
    K5$[15,22] = 9999.99 - TURNS Using "#####.##"
  End If 
  K5$[23] = PROD$
End If 
If RSORT = 3 ! "whse/pgrp/prod
  K5$[12,14] = PGRP Using "###"
  K5$[23] = PROD$
End If 
If RSORT = 4 ! "whse/grp/turns
  K5$[12,14] = PGRP Using "###"
  If TRNDR = 0 ! "ascending
    K5$[15,22] = TURNS Using "#####.##"
  Else ! "descending
    K5$[15,22] = 9999.99 - TURNS Using "#####.##"
  End If 
  K5$[23] = PROD$
End If 
If RSORT >= 5 And RSORT <= 8 ! "Whse/vendor/
  K5$[3,8] = VEND Using "######"
  If RSORT = 6 Or RSORT = 8 ! "turns
    If TRNDR = 0 ! "ascending
      K5$[15,22] = TURNS Using "#####.##"
    Else ! "descending
      K5$[15,22] = 9999.99 - TURNS Using "#####.##"
    End If 
  End If 
  If RSORT = 7 Or RSORT = 8 ! "add prod group
    K5$[12,14] = PGRP Using "###"
  End If 
  K5$[23] = PROD$
End If 
If RSORT >= 9 And RSORT <= 12 ! "whse/buyer
  K5$[9,11] = BUYR Using "###"
  If RSORT = 10 Or RSORT = 12 ! "turns
    If TRNDR = 0 ! "ascending
      K5$[15,22] = TURNS Using "#####.##"
    Else ! "descending
      K5$[15,22] = 9999.99 - TURNS Using "#####.##"
    End If 
  End If 
  If RSORT = 11 Or RSORT = 12 ! "prod group
    K5$[12,14] = PGRP Using "###"
  End If 
  K5$[23] = PROD$
End If 
If RSORT >= 13 And RSORT <= 20 ! "whse/vend/buy OR whse/buy/vend
  If RSORT = 15 Or RSORT = 16 Or RSORT = 19 Or RSORT = 20
    If TRNDR = 0 ! "ascending
      K5$[15,22] = TURNS Using "#####.##"
    Else ! "descending
      K5$[15,22] = 9999.99 - TURNS Using "#####.##"
    End If 
  End If 
  If RSORT = 14 Or RSORT = 16 Or RSORT = 18 Or RSORT = 20 ! "prod group
    K5$[12,14] = PGRP Using "###"
  End If 
  If RSORT >= 13 And RSORT <= 16 ! "vend/buy
    K5$[3,8] = VEND Using "######"
    K5$[9,11] = BUYR Using "###"
  End If 
  If RSORT >= 17 ! "buy/vend
    K5$[3,5] = BUYR Using "###"
    K5$[6,11] = VEND Using "######"
  End If 
  K5$[23] = PROD$
End If 
Search #9,4,1;K5$,R[2],E \ If E Gosub ERR_SEARCH
Goto SPRWH_LOOP
SORTDONE: Rem "finished - start print
!Print @0,22;'CE';"PRINTING, PLEASE WAIT";
V9 = 90;V9[1] = 62;V9[2] = 0
If SCRN Let V9[1] = 20
!If SCRN Print 'CS';
If Not(NMTH) Let NMTH = 12
For I = 1 To 24
  MTH[I] = 0
Next I
For I = 1 To NMTH
  J = ARMTH + 1 - I
  If J <= 0 Let J = ARMTH + 13 - I
  If J <= 0 Let J = J + 12
  If I > 12 Let MTH[J + 12] = 1 Else Let MTH[J] = 1
Next I
K1$ = " ",K1$
NOREC = 0;PRTNM[1] = 1;PRTNM[2] = 1
For X1 = 0 To 9 \ HLDBRK[X1] = -1 \ Next X1
If RSORT <= 4
  HLDBRK[1] = -2;HLDBRK[2] = -2
  PRTNM[1] = 0;PRTNM[2] = 0
End If 
If RSORT >= 5 And RSORT <= 8 Let HLDBRK[2] = -2;PRTNM[2] = 0
If RSORT >= 9 And RSORT <= 12 Let HLDBRK[1] = -2;PRTNM[1] = 0
If RSORT <= 2 Let HLDBRK[3] = -2
If RSORT = 5 Or RSORT = 6 Let HLDBRK[3] = -2
If RSORT = 9 Or RSORT = 10 Let HLDBRK[3] = -2
If RSORT = 13 Or RSORT = 15 Let HLDBRK[3] = -2
If RSORT = 17 Or RSORT = 19 Let HLDBRK[3] = -2
SRTFLE_LOOP: Rem "until hit the "~" keys
Search #9,3,1;K1$,R[2],E \ If E = 2 Goto RPT_DONE
If E Gosub ERR_SEARCH
If K1$[1,1] = "~" Goto RPT_DONE
NOREC = NOREC + 1
!If Not(SCRN)
!  If Not(Fra(NOREC / 100)) Print @40,22;'CL';NOREC;K1$[23];
!End If 
WHSE = K1$[1,2]
VEND = K1$[3,8] \ If RSORT >= 17 Let VEND = K1$[6,11]
BUYR = K1$[9,11] \ If RSORT >= 17 Let BUYR = K1$[3,5]
PGRP = K1$[12,14]
PROD$ = K1$[23,34]
Rem we don't subtotal on turns change!
If HLDBRK[0] = -1 Let HLDBRK = WHSE
If HLDBRK <> WHSE ! "whse changed - ALL OTHERS CHANGED!
  If HLDBRK[3] <> -2 Gosub PGRP_SUBTTL
  If RSORT < 17 ! "vend before buyer
    If HLDBRK[2] <> -2 Gosub BUYR_SUBTTL
    If HLDBRK[1] <> -2 Gosub VEND_SUBTTL
  Else ! "buyer before vendor
    If HLDBRK[1] <> -2 Gosub VEND_SUBTTL
    If HLDBRK[2] <> -2 Gosub BUYR_SUBTTL
  End If 
  Gosub WHSE_SUBTTL
End If 
If RSORT < 17 ! "vendor is before buyer
  If HLDBRK[1] <> -2 ! "vendor
    If HLDBRK[1] = -1 Let HLDBRK[1] = VEND
    If VEND <> HLDBRK[1] ! "vendor different
      If HLDBRK[3] <> -2 Gosub PGRP_SUBTTL
      If HLDBRK[2] <> -2 Gosub BUYR_SUBTTL
      Gosub VEND_SUBTTL
    End If 
  End If 
  If HLDBRK[2] <> -2 ! "buyer
    If HLDBRK[2] = -1 Let HLDBRK[2] = BUYR
    If BUYR <> HLDBRK[2]
      If HLDBRK[3] <> -2 Gosub PGRP_SUBTTL
      Gosub BUYR_SUBTTL
    End If 
  End If 
Else ! "buyer is before vendor
  If HLDBRK[2] <> -2 ! "buyer
    If HLDBRK[2] = -1 Let HLDBRK[2] = BUYR
    If BUYR <> HLDBRK[2] ! "diff buyer
      If HLDBRK[3] <> -2 Gosub PGRP_SUBTTL
      If HLDBRK[1] <> -2 Gosub VEND_SUBTTL
      Gosub BUYR_SUBTTL
    End If 
  End If 
  If HLDBRK[1] <> -2 ! "vendor
    If HLDBRK[1] = -1 Let HLDBRK[1] = VEND
    If VEND <> HLDBRK[1] ! "diff vendor
      If HLDBRK[3] <> -2 Gosub PGRP_SUBTTL
      Gosub VEND_SUBTTL
    End If 
  End If 
End If 
If HLDBRK[3] <> -2 ! "prod group
  If HLDBRK[3] = -1 Let HLDBRK[3] = PGRP
  If PGRP <> HLDBRK[3] Gosub PGRP_SUBTTL
End If 
Mat Read #2,R[2],0;A$;
K2$ = " ",K2$;K2$[1,12] = PROD$;K2$[13,14] = WHSE Using "##"
Search #3,2,1;K2$,R[3],E \ If E > 1 Gosub ERR_SEARCH
If Not(E) ! "get group & turns (always prints)
  Mat Read #3,R[3],32;W1;
  Mat Read #3,R[3],38;W2;
  Mat Read #3,R[3],846;WHMISC2;
  PGRP = WHMISC2[0]
  TURNS = WHMISC2[2]
Else 
  PGRP = K1$[12,14]
  TURNS = K1$[15,22]
  WHMISC2[1] = 0
End If 
V9[5] = 0
Gosub GET_COGS
TURNS = 0
If WHMISC2[1] Let TURNS = FNR(COGS / WHMISC2[1])
If HLDBRK[1] <> -2 ! "get vendor
  Gosub GET_VEND
End If 
If HLDBRK[2] <> -2 ! "get buyer
  Gosub GET_BUYER
End If 
If HLDBRK[3] <> -2 ! "get group
  Gosub GET_PGRP
End If 
Gosub RPT_HEADER
If Not(RTYPE) ! "it's a detail report
  Gosub PROD_DETAIL
End If 
Rem if it's a summary report, you still need TITLES
If (RTYPE) <> 0 ! " SUMMARY
  If PRTNM[1] Gosub PRNT_VEND
  If PRTNM[2] Gosub PRNT_BUYR
End If 
TTLS[0] = TTLS[0] + COGS
TTLS[1] = TTLS[1] + WHMISC2[1]
TTLS[4] = TTLS[4] + COGS
TTLS[5] = TTLS[5] + WHMISC2[1]
TTLS[8] = TTLS[8] + COGS
TTLS[9] = TTLS[9] + WHMISC2[1]
TTLS[12] = TTLS[12] + COGS
TTLS[13] = TTLS[13] + WHMISC2[1]
TTLS[16] = TTLS[16] + COGS
TTLS[17] = TTLS[17] + WHMISC2[1]
Goto SRTFLE_LOOP
GET_COGS: Rem "get 12 months cost
K4$ = " ",K4$;K4$ = K2$
COGS = 0
Search #4,2,1;K4$,R[4],E \ If E > 1 Gosub ERR_SEARCH
If E Return 
Mat Read #4,R[4],14;PWS;
Mat Read #4,R[4],248;PWSL;
Mat Read #4,R[4],638;PWAVG;
Mat Read #4,R[4],716;PWAVGL;
COGS = 0
For X1 = 1 To 12
  If MTH[X1]
    If X1 <> ARMTH
      COGS = COGS + FNR(PWS[X1,0] * PWAVG[X1])
    Else ! "for this month - use LAST YEAR
      COGS = COGS + FNR(PWSL[X1,0] * PWAVGL[X1])
    End If 
  End If 
Next X1
Rem IF MORE THAN 12 MONTHS ADD IN LAST YEAR'S
For X1 = 13 To 24
  If MTH[X1]
    COGS = COGS + FNR(PWSL[X1 - 12,0] * PWAVGL[X1 - 12])
  End If 
Next X1
Return 
GET_VEND: Rem "need vendor name
K4$ = " ",K4$;K4$ = VEND Using "######"
Search #5,2,1;K4$,R[5],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #5,R[5],0;VEND$;
Else 
  VEND$ = " ",VEND$
  VEND$ = "VENDOR NOT ON FILE"
End If 
Return 
GET_BUYER: Rem "need buyer name
R[6] = BUYR
If R[6] > 0 And R[6] < Chf(6)
  Mat Read #6,R[6],0;BUYR$;
Else 
  BUYR$ = " ",BUYR$
  BUYR$ = "BUYER NOT ON FILE"
End If 
Return 
GET_PGRP: Rem "product group name
K4$ = " ",K4$;K4$ = PGRP Using "###"
Search #7,2,1;K4$,R[7],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #7,R[7],0;GRP$;
Else 
  GRP$ = " ",GRP$
  GRP$ = "GROUP NOT ON FILE"
End If 
Return 
GRND_TOTAL: Rem "report totals
V9 = 90;V9[5] = 9
Gosub RPT_HEADER
Print #0; Tab 10;"**** REPORT TOTALS ****";
Print #0; Using "----,---,--#.##"; Tab 80;TTLS[0];
Print #0; Using "----,---,--#.##"; Tab 95;TTLS[1];
ITURNS = 0
If TTLS[1] Let ITURNS = FNR(TTLS[0] / TTLS[1])
Print #0; Using "-----#.##"; Tab 110;ITURNS
Return 
WHSE_SUBTTL: Rem "
If (V9 + 3) > V9[1] Let V9 = 90
Gosub RPT_HEADER
Print #0;"\15\"
Print #0; Using "##"; Tab 10;"**** WAREHOUSE ";HLDBRK[0];" TOTALS ****";
Print #0; Using "----,---,--#.##"; Tab 80;TTLS[4];
Print #0; Using "----,---,--#.##"; Tab 95;TTLS[5];
ITURNS = 0
If TTLS[5] Let ITURNS = FNR(TTLS[4] / TTLS[5])
Print #0; Using "-----#.##"; Tab 110;ITURNS
HLDBRK = WHSE
V9[0] = 90
TTLS[4] = 0;TTLS[5] = 0
Return 
VEND_SUBTTL: Rem "vendor
If (V9 + 3) > V9[1] Let V9[0] = 90
Gosub RPT_HEADER
Print #0;"\15\"
Print #0; Using "######"; Tab 10;"**** VENDOR ";HLDBRK[1];" TOTALS ****";
Print #0; Using "----,---,--#.##"; Tab 80;TTLS[8];
Print #0; Using "----,---,--#.##"; Tab 95;TTLS[9];
ITURNS = 0
If TTLS[9] Let ITURNS = FNR(TTLS[8] / TTLS[9])
Print #0; Using "-----#.##"; Tab 110;ITURNS
HLDBRK[1] = VEND;PRTNM[1] = 1
V9[0] = V9[0] + 3
TTLS[8] = 0;TTLS[9] = 0
Return 
BUYR_SUBTTL: Rem "buyer
If (V9[0] + 3) > V9[1] Let V9[0] = 90
Gosub RPT_HEADER
Print #0;"\15\"
Print #0; Using "###"; Tab 10;"**** BUYER ";HLDBRK[2];" TOTALS ****";
Print #0; Using "----,---,--#.##"; Tab 80;TTLS[12];
Print #0; Using "----,---,--#.##"; Tab 95;TTLS[13];
ITURNS = 0
If TTLS[13] Let ITURNS = FNR(TTLS[12] / TTLS[13])
Print #0; Using "-----#.##"; Tab 110;ITURNS
HLDBRK[2] = BUYR;PRTNM[2] = 1
V9[0] = V9[0] + 3
TTLS[12] = 0;TTLS[13] = 0
Return 
PGRP_SUBTTL: Rem "prod group
If (V9[0] + 3) > V9[1] Let V9[0] = 90
Gosub RPT_HEADER
Print #0;""
Print #0; Using "###"; Tab 10;"** GROUP ";HLDBRK[3];" ";GRP$;" TOTALS **";
Print #0; Using "----,---,--#.##"; Tab 80;TTLS[16];
Print #0; Using "----,---,--#.##"; Tab 95;TTLS[17];
ITURNS = 0
If TTLS[17] Let ITURNS = FNR(TTLS[16] / TTLS[17])
Print #0; Using "-----#.##"; Tab 110;ITURNS
Print #0;""
HLDBRK[3] = PGRP
V9[0] = V9[0] + 3
TTLS[16] = 0;TTLS[17] = 0
Return 
PRNT_VEND: Rem "print vendor name
Print #0; Using "######"; Tab 4;"VENDOR: ";HLDBRK[1];"  ";VEND$
V9[0] = V9[0] + 1;PRTNM[1] = 0
Return 
PRNT_BUYR: Rem "Print Buyer name
Print #0; Using "###"; Tab 4;"BUYER: ";HLDBRK[2];"  ";BUYR$
V9[0] = V9[0] + 1;PRTNM[2] = 0
Return 
PROD_DETAIL: Rem "product line detail
If PRTNM[1] Gosub PRNT_VEND
If PRTNM[2] Gosub PRNT_BUYR
Print #0; Using "###"; Tab 1;PGRP;
Print #0; Tab 5;PROD$; Tab 18;A$[9,38];
Print #0; Tab 49;A$[63,92];
Print #0; Using "----,---,--#.##"; Tab 80;COGS;
Print #0; Using "----,---,--#.##"; Tab 95;WHMISC2[1];
Print #0; Using "-----#.##"; Tab 110;TURNS
V9 = V9 + 1
Return 
RPT_HEADER: Rem "header
If V9[0] < V9[1] Return 
If V9[2] ! "page 1+
  !If SCRN
  !  Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
  !  Input Len 16384 + 1;""ANS$
  !  Print 'CS';
  !End If 
  Print #0;"\14\";
End If 
Print #0;"\15\";
V9[2] = V9[2] + 1
Print #0; Tab 2;"DATE: ";ARDATE$;
Print #0; Tab (65 - Int(Len(CNAM$) / 2));CNAM$;
Print #0; Tab 110;"PAGE: ";V9[2]
Print #0;" -779- ";
STIM$ = ""
Call Time(STIM$)
Print #0;STIM$;
Print #0; Tab 54;"INVENTORY TURNS REPORT";
Print #0;""
Print #0;""
Print #0;" WAREHOUSE ";WHSE
Print #0; Tab 1;"GRP"; Tab 5;"ITEM CODE";
Print #0; Tab 18;"DESCRIPTION 1"; Tab 49;"DESCRIPTION 2";
Print #0; Tab 82;"COST OF GOODS";
Print #0; Tab 97;"AVG INVENTORY";
Print #0; Tab 114;"TURNS"
Print #0;""
V9[0] = 8
If V9[5] Return 
If HLDBRK[1] <> -2 ! "Vendor Print
  Gosub PRNT_VEND
End If 
If HLDBRK[2] <> -2 ! "Buyer print
  Gosub PRNT_BUYR
End If 
Return 
PRNT_SELECTS: Rem "print selections made
If V9[0] + 10 > V9[1] Let V9[1] = 90
V9[5] = 9
Gosub RPT_HEADER
Print #0;"\15\"
Print #0;" FIGURES ON REPORT ARE FOR ";Str$(NMTH);" MONTHS PRIOR TO ";ARDATE$[1,3];ARDATE$[7,8]
Print #0;"WAREHOUSE ";
If Not(IWHS) ! "range
  Print #0; Using "##"; Tab 20;"FROM ";SWHSE;" TO ";EWHSE
Else 
  K2$ = "~W";V9 = 3
  Gosub PRNT_INS
End If 
Print #0;"VENDOR ";
If Not(IVND) ! "range
  Print #0; Using "######"; Tab 20;"FROM ";SVEND;" TO ";EVEND
Else 
  K2$ = "~V";V9 = 7
  Gosub PRNT_INS
End If 
Print #0;"BUYER";
If Not(IBUY) ! "range
  Print #0; Using "###"; Tab 20;"FROM ";SBUYR;" TO ";EBUYR
Else 
  K2$ = "~B";V9 = 4
  Gosub PRNT_INS
End If 
Print #0;"PROD GROUP";
If Not(IGRP) ! "range
  Print #0; Using "###"; Tab 20;"FROM ";SPGRP;" TO ";EPGRP
Else 
  K2$ = "~G";V9 = 4
  Gosub PRNT_INS
End If 
Print #0;"ITEM CODE";
If Not(IITM) ! "range
  Print #0; Tab 20;"FROM ";SITEM$;" TO ";EITEM$
Else 
  K2$ = "~P";V9 = 13
  Gosub PRNT_INS
End If 
Print #0;"REPORT IN ";
If RTYPE Print #0;"SUMMARY" Else Print #0;"DETAIL"
Print #0;"SORTED ORDER: ";
If RSORT = 1 Print #0;"Whse, product code";
If RSORT = 2 Print #0;"Whse, Turns";
If RSORT = 3 Print #0;"Whse, Prod Group, Prod Code";
If RSORT = 4 Print #0;"Whse, Prod Group, Turns";
If RSORT = 5 Print #0;"Whse, Vendor, Prod Code";
If RSORT = 6 Print #0;"Whse, Vendor, Turns";
If RSORT = 7 Print #0;"Whse, Vendor, Prod Group, Prod Code";
If RSORT = 8 Print #0;"Whse, Vendor, Prod Group, Turns";
If RSORT = 9 Print #0;"Whse, Buyer, Product Code";
If RSORT = 10 Print #0;"Whse, Buyer, Turns";
If RSORT = 11 Print #0;"Whse, Buyer, Prod Group, Prod Code";
If RSORT = 12 Print #0;"Whse, Buyer, Prod Group, Turns";
If RSORT = 13 Print #0;"Whse, Vendor, Buyer, Prod Code";
If RSORT = 14 Print #0;"Whse, Vendor, Buyer, Prod Grp, Prod Code";
If RSORT = 15 Print #0;"Whse, Vendor, Buyer, Turns";
If RSORT = 16 Print #0;"Whse, Vendor, Buyer, Prod Group, Turns";
If RSORT = 17 Print #0;"Whse, Buyer, Vendor, Prod Code";
If RSORT = 18 Print #0;"Whse, Buyer, Vendor, Prod Group, Prod Code";
If RSORT = 19 Print #0;"Whse, Buyer, Vendor, Turns";
If RSORT = 20 Print #0;"Whse, Buyer, Vendor, Prod Group, Turns";
Print #0;""
If TRNSRT And RTYPE = 0
  Print #0;"TURNS IN ";
  If TRNDR Print #0;"DESCENDING ORDER"
  If Not(TRNDR) Print #0;"ASCENDING ORDER"
End If 
Print #0;"SOLD WITHIN ";Str$(NMTH);" MONTHS"
Return 
PRNT_INS: Rem "print the individual selections
K3$ = " ",K3$;K3$ = K2$[1,2] + SPACES$
Print #0; Tab 20;
V9[3] = 20
PINS_LOOP: Rem "until not same anymore
Search #9,3,1;K3$,R[9],E \ If E = 2 Goto PINS_DONE
If E Gosub ERR_SEARCH
If K3$[1,2] <> K2$[1,2] Goto PINS_DONE
If V9[3] + V9 > 130 ! "will go past eol
  Print #0;""
  Print #0; Tab 20;
  V9[3] = 20
End If 
Print #0;K3$[3];" ";
V9[3] = V9[3] + V9
Goto PINS_LOOP
PINS_DONE: Rem "finito
Print #0;""
Return 
RPT_DONE: Rem "through all sorted
If HLDBRK[3] <> -2 Gosub PGRP_SUBTTL
If RSORT < 17 ! "vend before buyer
  If HLDBRK[2] <> -2 Gosub BUYR_SUBTTL
  If HLDBRK[1] <> -2 Gosub VEND_SUBTTL
Else ! "buyer before vendor
  If HLDBRK[1] <> -2 Gosub VEND_SUBTTL
  If HLDBRK[2] <> -2 Gosub BUYR_SUBTTL
End If 
Gosub WHSE_SUBTTL
Gosub GRND_TOTAL
Gosub PRNT_SELECTS
!If SCRN
!  Print @0,23;'CL';"PRESS <CR> TO EXIT  ";
!  Input Len 16384 + 1;""ANS$
!End If 
OUTEND: Rem "DONE
!Print 'CS'
!Chain "MX000C"
!Close 
!Chain "MX000"
! try Call dxclose() else rem
END
Rem {begin call.input.i}
ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!Call "Input",J1,J$,J0$,J1$,J4$,J5$
Return 
ISERRMSG: ! X1 = Len(J7$)
Message$=message$+Str$(EFlag+1)+": "+J7$+"  "
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return
Return
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/779.se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

OutFail: ! 
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK
tmp$="ERRORS IN SELECTION! "+Message$
message$=tmp$
! fall thru
ERR_MSG: ! send message
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
! Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$) 
Call SetOutPut(e$,rstr$)                                   
End  
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End