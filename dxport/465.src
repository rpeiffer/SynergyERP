! >>> Program 465
!
! description Customer Sales MTD/YTD Summary
!
! loadsave -w -n 100,10 -o prog/dxport/465.dl4 src/465.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Declare Intrinsic Sub DateToJulian,InpBuf,String,Time

Declare External Sub UTMonths

! - Option Default Dialect IRIS1
Rem AUTHOR: DADE   AUG  4, 1994
Rem LAST UPDATE:  031695 rce add cash option cct#72474
Rem               011697 jlp fix dflt cost used for rebate cct 99078
Com 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim L$[60],L1$[20],C1$[30],I$[50],I1$[50],KCUST$[50],UM$[4]
Dim 1%,H4[2],L3[3],UN[2],EUN[2],S2[1],RBUM[1],RB[2],RBWH,RBL1[1],PT[37],FLG
Dim 1%,CTWT
Dim 2%,H5[16],H6[8],L2[1],L4[3],L6[5],B[24],C4[10],W2[9],RB1[5]
Dim 2%,H0[12],DT3[1],JODATE,JWDATE
Dim 3%,A1[7],L5[3],S3[17],OLM[6],UNF[6],W3[24],RB3[6],RB5[2]
Dim 3%,PRPARC[3],WHMISC[6]
Dim 4%,AMOUNT,3%,BASE,RBCOST,RBSLCOST,COST,TTLPRC,TTLCOST
Dim 3%,PRFT,DPLY[10],TTLPRFT,L7[12],PF_LOAD2,M1[17]
Dim J8$[8],SK$[60],Proda$[156]
Dim 1%,F
Dim 3%,J,X3,T9[20],R[40],KO$[50],WHLM[1],LM[1],3%
Dim K1$[50],K2$[20],K3$[20],T9$[26],P9$[50],P60$[50]
Dim FLG$[2]
Dim MSG$[256]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70],pru$[20],J2a$[20]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim J2a$[20],J2b$[20]
Dim 2%,GPMIN,LASTORD,WHSE,FIRSTORD
Dim C4$[20],C2$[20],C3$[20],C5$[20],FIRSTORD$[10],WHSE$[10],GPMIN$[10],LASTORD$[10],K2w$[20]
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 12
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1888","1840","1792","1744","1728","1808","320","-1","304","752","1120"
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,3;J1$;
WHSEPR = 0 \ If P9$[32,32] = "Y" Let WHSEPR = 9
MINORDER = 999999;MAXORDER = 0
J8 = 0
If Err 0 Let J8 = Spc(8)
J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
!
! -  dx add xport reporting code
dim tmp$[400],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$ = bsdel$,"465",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
Call dxget("J2",tmp$) \ FLG=tmp$ ! report for 0=credit 1=cash
Call dxget("J2a",tmp$)	\ if tmp$="" let FIRSTORD=0 else FIRSTORD=tmp$ ! beg order
Call dxget("J2b",tmp$)	\ if tmp$="" let LASTORD=999999 else LASTORD=tmp$ ! end ordre
Call dxget("K2",tmp$) \ PCALC = tmp$ ! profit on 1=order cost 2= po net cost
Call dxget("C1",tmp$) \ if tmp$="" let RCOST=0 else RCOST=1 ! replace cost with net rebate code
Call dxget("C2",tmp$) \ WHSE=tmp$ ! warehouse
Call dxget("C4",tmp$) \ if tmp$="" let GPMIN=99 else GPMIN=tmp$ ! profit % exception minimum
!
! report for (credit or cash)
if FLG=0 let FLG$=" 1" else FLG$=" 5" ! credit or cash
!
! starting order
if FIRSTORD<0 or FIRSTORD>999999 let e$="Invalid starting order, must be between 0 and 999999!" \ error 10000
!
! ending order
if LASTORD<FIRSTORD or LASTORD>999999 let e$="Invalid ending order, must be between starting order and 999999!" \ error 10000
!
! warehouse
if WHSE<0 or WHSE>99 let e$="Invalid warehouse, must be between 0 and 99!" \ error 10000
!
! gross profit minimum
if GPMIN<0 or GPMIN>=100 let e$="Invalid gross profit minimum, must be between 0 and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
! - Call dxget("J2",J2$)	\ PCALC = J2$
! - Call dxget("J2a",J2$)	\ if J2$="" let RCOST = 0 else 	let RCOST = 1
! - J2a$ = J2$
! - Call dxget("J2b",J2b$)	\ J2b$ = J2$!PRINT (P) 
! - Call dxget("K2",K2$)
! - !
! - Call dxget("J4",J4$)!J4$! - 
! - Call dxget("J5",J5$)!J5$! - 
! - Call dxget("K2w",K2w$)!K2$ for call "input"! - 
! - Call dxget("K3",K3$)!K3$! - 
! - 
! - Call dxget("FIRSTORD",FIRSTORD$)	\ IF Not(FIRSTORD$) let FIRSTORD = 0
! - Call dxget("WHSE",WHSE$)			\ IF Not(WHSE$) let WHSE = 0
! - Call dxget("GPMIN",GPMIN$)			\ IF Not(GPMIN$)  let GPMIN = 99 
! - Call dxget("LASTORD",LASTORD$)		\ IF Not(LASTORD$) let LASTORD = 999999
Rem {end dim.rtn.input}
! - 		L_900: Rem GET RANGES
! - 		Print 'CS'
! - 		Print @0,0;"-MX465-";@25,0;"PROFIT EXCEPTION REPORT"
! - 		Print @0,8;"ENTER   1:CREDIT,  2:CASH,  OR  E:EXIT               ";'CL';
! - 		Print @0,10;"ENTER STARTING ORDER, <CR> FOR FIRST                 ";'CL';
! - 		Print @0,12;"ENTER ENDING   ORDER, <CR> FOR LAST                  ";'CL';
! - 		Print @0,14;"PROFIT BASED ON   1:ORDER COST  OR  2:NET PO COST?   ";'CL';
! - 		Print @0,16;"REPLACE THE COST WITH NET REBATE COST? (Y/N)         ";'CL';
! - 		Print @0,18;"ENTER WHSE ##,  <CR> FOR ALL                         ";'CL';
! - 		Print @0,20;"ENTER PROFIT % EXCEPTION MINIMUM                     ";'CL';
! - 		Print @0,22;"ENTER   P:PRINT,  R:RESELECT,  E:EXIT                ";'CL';
! - 		Gosub L_10000
! - 		ORD_QUEST: Rem==========================================================
! - 		FIRSTORD = 0
! - 		K2$ = K2w$
!
!- Call "Input",FIRSTORD,K2$,"3 02 65310","",J4$,J5$
! - 		If FIRSTORD < 0 Or FIRSTORD > 999999 Goto ORD_QUEST
! - 		END_ORD_QUEST: Rem
! - 		LASTORD = 999999
!
! -	Call "Input",LASTORD,K3$,"3 02 65312","",J4$,J5$
! - 		If LASTORD < 0 Or LASTORD > 999999 Goto END_ORD_QUEST
! - 		L_970: If FIRSTORD <= LASTORD Goto L_990
! - 		MSG$ = " INVALID ORDER RANGE!  " \ Gosub ERRMSG \ Goto ORD_QUEST
! - 		L_990: K1$ = K2$ \ If J2 If Not(J8) Print #0;"\14\";
! - 		J1 = 90 \ J2 = 0

! - 		L_1000: Rem========================================= ADDITIONAL QUESTIONS
! - 		! - Print @0,14;"PROFIT BASED ON   1:ORDER COST  OR  2:NET PO COST?   ";'CL';

! - 		Input ""J2$ \ 
! - 		Call String(1,J2$)
! - 		If J2$ = "E" Goto OUTEND
! - 		If J2$ <> "1" And J2$ <> "2" And J2$ <> "E" Goto L_1000
! - 		PCALC = J2$ 
! - 		If PCALC <> 1 And PCALC <> 2 Goto L_1000
!		L_1050: Rem
! - 		Print @0,16;"REPLACE THE COST WITH NET REBATE COST? (Y/N)         ";'CL';

! - 		Input ""J2$ \ Call String(1,J2$) ! -  J2a$! - 
! - 		If J2$ = "E" Goto OUTEND
! - 		If J2$ <> "Y" And J2$ <> "N" And J2$ <> "E" Goto L_1050
! - 		RCOST = 0
! - 		If J2$ = "Y" Let RCOST = 1
! - 		L_1100: Rem
! - 		WHSE = 0
! - Call "Input",WHSE,J2$,"3 02 25318","",J4$,J5$
! - 		If WHSE < 0 If WHSE > 99 If Fra(WHSE) Goto L_1100
! - 		If WHSE = 0 Print @53,18;"ALL"
! - 		L_1200: Rem
! - 		GPMIN = 99
!
! - Call "Input",GPMIN,J2$,"3 02 25320","",J4$,J5$
! - 		If GPMIN < 0 Or GPMIN >= 100 Goto L_1200
! - 		L_1300: Rem
! - 		Print @0,22;"ENTER   P:PRINT,  R:RESELECT,  E:EXIT                ";'CL';
!
! - 		Input ""J2$ \ Call String(1,J2$) ! - J2b$! - !
! - 		If J2$ = "E" Goto OUTEND
! - 		If J2$ = "R" Goto L_900
! - 		If J2$ <> "P" Goto L_1300
! - 		If J2$ <> "P" And J2$ <> "R" And J2$ <> "E" Goto L_1300
!
!  *** Sort Section
! - 		Print @0,22;"SORTING, PLEASE WAIT . . .  ";'CE' \ Signal 3,0
SK$ = " ",SK$
L_1420: Search #9,3,1;SK$,R9,E
If E = 2 Goto L_1441
Search #9,5,1;SK$,R9,E 
If E Let e$ = "syserrorfile 465 sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",SK$ \ error 10000
! -  If Err 0 Gosub ERR_ESCAPE
Goto L_1420
!
L_1441: Rem MAKING SOME MORE ROOM AROUND HERE!
KO$ = " ",KO$ \ KO$[1,2] = FLG$
If FIRSTORD Let KO$[3,8] = FIRSTORD - 1 Using "######" Else Let KO$[3,8] = "      "
L_1445: Search #3,3,1;KO$,R3,E
If E Goto L_1800
Gosub L_3300
If FLG And H0[0] > 6 And H0[0] < 58
  KO$ = " ",KO$ \ KO$[1,2] = "58"
  If FIRSTORD Let KO$[3,8] = FIRSTORD - 1 Using "######" Else Let KO$[3,8] = "      "
  Goto L_1445
End If 
If FLG If H0[0] <> 5 And H0[0] <> 6 And H0[0] <> 58 Goto L_1800
If Not(FLG) If H0[0] > 1 Goto L_1800
If FIRSTORD If H0[7] < FIRSTORD Goto L_1445
If LASTORD If H0[7] > LASTORD Goto L_1445
If WHSE If H4[2] <> WHSE Goto L_1445
If Not(H0[7]) Goto L_1445
If H0[7] < MINORDER Let MINORDER = H0[7]
If H0[7] > MAXORDER Let MAXORDER = H0[7]
K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
L_1500: Search #2,3,1;K1$,R1,E
If E = 2 Goto L_1445
X2 = K1$[1,6] \ If X2 <> H0[7] Goto L_1445
Gosub L_3800
If L7[2] = 0 And OLM[3] = 0 And L5[1] = 0 Goto L_1500
Gosub L_3500
Gosub L_6500
Gosub L_6000
If COST = 0 Let COST = L5[1]
Gosub L_2200
If PRFT > GPMIN Goto L_1500
SK$ = " ",SK$
SK$[1,4] = H0[11] Using "####" ! salesman #
SK$[5,10] = K1$[1,6]
If RBCOST = 0 Let R[8] = 0
Search #9,4,1;SK$,R3,E 
! if E=1 (match on key), continues sort.
TTLPRC = 0;TTLCOST = 0;PRFT = 0
T9 = 0
Goto L_1500
!
! *** Process Section
L_1800: Rem DONE
! -  Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! -  If J8 Print 'CS';
! -  If Err 0 Gosub ERR_ESCAPE
!
if j8 ! dx xml headings
  tmp$="SALESMAN",fdel$,"ORDER#",fdel$
  tmp$=tmp$,"CUST NO",fdel$,"NAME",fdel$
  tmp$=tmp$,"TYPE",fdel$,"PRTP",fdel$,"WHSE",fdel$
  tmp$=tmp$,"PRODUCT",fdel$,"DESCRIPTION",fdel$
  tmp$=tmp$,"LN",fdel$,"PRICE",fdel$,"ORD COST",fdel$
  tmp$=tmp$,"NET COST",fdel$,"BASE COST",fdel$
  tmp$=tmp$,"REBATE FLAG",fdel$
  tmp$=tmp$,"QTY",fdel$,"UM",fdel$,"PROFIT",fdel$
  tmp$=tmp$,"REBATE INFORMATION",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K1$ = " ",K1$;K3$ = "}}}}}}"
ORDER = 0;ORDP = 0;SLSM = 0;SK$ = " ",SK$
L_1950: Search #9,3,1;SK$,R3,E 
If E Goto L_9100
PRTLINE = 0;RBFLAG = 0
L_1970: K1$ = " ",K1$ \ If SLSM = 0 Let SLSM = SK$[1,4]
K1$[1,6] = SK$[5,10];ORDER = 0
X2 = SK$[1,4] \ If X2 <> SLSM Gosub L_4200
Gosub L_3300
If LASTORD If LASTORD < H0[7] Goto L_1950
If Not(FLG) If H0[0] > 1 Goto L_1950
If FLG If H0[0] <> 5 And H0[0] <> 6 And H0[0] <> 58 Goto L_1950
If WHSE If H4[2] <> WHSE Goto L_1950
L_2000: Search #2,3,1;K1$,R1,E
If E = 2 Gosub L_4500 \ Goto L_1950
! -  If E Gosub ERR_SEARCH
If K1$[1,6] <> SK$[5,10] Gosub L_4500 \ Goto L_1950
Gosub L_3800
If L7[2] = 0 And OLM[3] = 0 And L5[1] = 0 Goto L_2000
If ORDER = 0 Let ORDER = K1$[1,6]
X2 = K1$[1,6] \ If X2 <> ORDER Gosub L_4500
ORDER = K1$[1,6]
If ORDP = 0 Gosub L_3300
Gosub L_3500
Gosub L_3000
Gosub L_2200
If PRFT > GPMIN Goto L_2000
Gosub L_5800
If ORDP = 0 Gosub L_5100 
Gosub L_5000
! - Signal 2,J0,A,B ! - \ ! -  If J0 <> -1 Gosub L_9615
Goto L_2000
!
L_2200: Rem TOTALS CALC (USE BASE OF NUMBERS)
PRFT = 0
If PCALC <> 2 Let T9 = OLM[3] - L5[1]
If PCALC = 2 Let T9 = OLM[3] - COST
If OLM[3] Let PRFT = FNR((T9 * 100) / OLM[3])
TTLPRC = TTLPRC + L5[0]
If PCALC = 2 Let TTLCOST = TTLCOST + FNR(L7[2] * COST)
If PCALC <> 2 Let TTLCOST = TTLCOST + FNR(L7[2] * L5[1])
Return 
!
L_3000: Rem UNITS CONVERT (ALL TO SAME UNIT "SELL")
If L7[2] = 0 And L5[0] = 0 Return 
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 2
CNVTA = OLM[3] \ Gosub L_20000
DPLY[0] = AMOUNT
CNVTA = L5[1] \ Gosub L_20000
DPLY[1] = AMOUNT
CNVTU[2] = 1;CNVTA = L7[2] \ Gosub L_20000
DPLY[3] = AMOUNT
If Not(L3[0]) Let COST = C4[4] Else Let COST = L5[1]
Gosub L_6500
Gosub L_6000
If COST = 0 Let COST = L5[1]
CNVTU[2] = 2;CNVTA = PRPARC[2]
If WHSEPR If WHMISC[2] Let CNVTA = WHMISC[2]
Gosub L_20000 \ DPLY[2] = AMOUNT
CNVTU[2] = 2;CNVTA = COST \ Gosub L_20000
DPLY[4] = AMOUNT
UM$ = "ERR."
If UN[0] > 0 Read #6,UN[0],10;UM$;
If UN[0] = -1 Let UM$ = "CWT "
If UN[0] = -2 Let UM$ = "LOT "
If UN[0] = -3 Let UM$ = "LB  "
Return 
!
L_3100: Rem ===== set n/s units for conversions
If S2[0] = 3 Goto L_3180
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1];PFU1[13] = UN[0]
PFU1[15] = CTWT
PFU1[16] = EUN[0];PFU1[17] = EUN[0];PFU1[18] = UN[0]
PFU1[19] = UN[0]
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
	If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_3180: COST = L5[1]
Return 
!
J3$ = " ",J3$
For STAT = 1 To 6
  J3$[1,2] = STAT Using "##"
  J3$[3] = L2[1] Using "######"
  Search #3,2,1;J3$,R3,E ! -  \ If E > 1 Gosub ERR_SEARCH
  If E = 0 Goto L_3260
Next STAT
Return 
L_3260: Rem OKAY
Return 1
!
L_3300: Rem READ ORDER
Mat Read #3,R3,0;H0;
Mat Read #3,R3,78;H4;
Mat Read #3,R3,104;H5;
Mat Read #3,R3,408;H6;
Mat Read #11,H6,28;PT;
If Not(H0[7]) Return 
DFT_COST = PT[H5[7] - 1]
If DFT_COST <= 0 Let DFT_COST = P60$[29,29]
X2 = H0[9] \ Gosub YMD2JUL \ X2 = 0
JODATE = X2
J2$ = " ",J2$;J2$ = H0[4] Using "######"
Search #7,2,1;J2$,R7,E ! - \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_3460
Mat Read #7,R7,30;C1$;
Return
L_3460: Rem NG
C1$ = " ",C1$;C1$ = "CUSTOMER NOT FOUND!"
Return 
!
L_3500: Rem READ PROD & PRODWHSE
proda$=" ",proda$
If L3[0] = 1 Goto L_3100
R[4] = L4 \ If R[4] <= 0 Goto L_3100
mat read #4,r[4],0;proda$;
Mat Read #4,R[4],156;B;
Mat Read #4,R[4],256;A;
Mat Read #4,R[4],512;PFU1;
Mat Read #4,R[4],554;PFU2;
Mat Read #4,R[4],894;C4;
Mat Read #4,R[4],938;PF_LOAD2;
Mat Read #4,R[4],460;A1;
Mat Read #4,R[4],596;PRPARC;
COST = 0
For X2 = 14 To 24 \ W3[X2] = 0 \ Next X2
WHMISC[2] = 0;W2[3] = 0
J4$ = " ",J4$;J4$ = L1$[1,12];J4$[13] = H4[2] Using "##"
Search #5,2,1;J4$,R[5],E ! - \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_3635
Mat Read #5,R[5],38;W2;
Mat Read #5,R[5],78;W3;
Mat Read #5,R[5],800;WHMISC;
L_3635: If P9$[32,32] = "Y" Gosub L_69000
Return 
W2[3] = B[24];W3[14] = PF_LOAD2;W3[15] = B[21];W3[16] = B[10];W3[17] = B[8]
W3[18] = C4[4];WHMISC[2] = PRPARC[2]
Return 
!
L_3800: Rem READ ORDER LINE
Mat Read #2,R1,0;L2;
Mat Read #2,R1,8;L3;
Mat Read #2,R1,16;L4;
Mat Read #2,R1,32;L5;
Mat Read #2,R1,80;L$;
Mat Read #2,R1,140;L1$;
Mat Read #2,R1,168;L7;
Mat Read #2,R1,250;UN;
Mat Read #2,R1,260;S3;
Mat Read #2,R1,404;OLM;
Mat Read #2,R1,446;EUN;
Mat Read #2,R1,452;UNF;
Read #2,R1,514;CTWT;
Mat Read #2,R1,56;L6;
Mat Read #2,R1,256;S2;
Return 
!
L_4000: Rem TOTAL PRINT
if j8  return
If (J1 + 3) > J9 Let J1 = 90 \ Gosub L_5800
Print #0;"\15\** TOTALS **";
TTLPRFT = 0
T9[2] = T9[11] - T9[12]
If T9[11] Let TTLPRFT = FNR((T9[2] * 100) / T9[11])
Print #0; Using "--------#.##"; Tab 58;T9[11];
If PCALC <> 2 Print #0; Using "--------#.##"; Tab 71;T9[12];
If PCALC = 2 Print #0; Using "--------#.##"; Tab 84;T9[12];
Print #0; Using "----#.##%"; Tab 104;" REPORT PROFIT  ";TTLPRFT;
Print #0;" "
Return 
!
L_4200: Rem SLSM TOTALS
if j8  return
If (J1 + 3) > J9 Let J1 = 90 \ Gosub L_5800
Print #0;"\15\*** SALESMAN";SLSM;" TOTALS **";
TTLPRFT = 0
T9[2] = T9[8] - T9[9]
If T9[8] Let TTLPRFT = FNR((T9[2] * 100) / T9[8])
Print #0; Using "--------#.##"; Tab 58;T9[8];
If PCALC <> 2 Print #0; Using "--------#.##"; Tab 71;T9[9];
If PCALC = 2 Print #0; Using "--------#.##"; Tab 84;T9[9];
Print #0; Using "----#.##%"; Tab 104;" REPORT PROFIT  ";TTLPRFT
T9[8] = 0;T9[9] = 0
J1 = 90
SLSM = SK$[1,4]
Return	
!
L_4500: Rem PRINT ORDER TOTALS
if j8  goto L_4585 ! dx xml
!
If Not(PRTLINE) Goto L_4585
If TTLPRC = 0 And TTLCOST = 0 And ORDP = 0 Goto L_4585
TTLPRFT = 0
T9[1] = TTLPRC - TTLCOST
If TTLPRC Let TTLPRFT = FNR((T9[1] * 100) / TTLPRC)
Print #0; Tab 1;"** ORDER";ORDER;"TOTALS **";
Print #0; Using "--------#.##"; Tab 58;TTLPRC;
If PCALC <> 2 Print #0; Using "--------#.##"; Tab 69;TTLCOST;
If PCALC = 2 Print #0; Using "--------#.##"; Tab 80;TTLCOST;
Print #0; Using "----#.##%"; Tab 107;"  ORDER PROFIT  ";TTLPRFT;
Print #0;"\15\"
J1 = J1 + 2
T9[11] = T9[11] + TTLPRC;T9[12] = T9[12] + TTLCOST
T9[8] = T9[8] + TTLPRC;T9[9] = T9[9] + TTLCOST
L_4585: ORDP = 0;TTLPRC = 0;TTLCOST = 0
Return 
!
L_5000: Rem PRINT LINE
!
if J8 ! dx xml
  tmp$=SK$[1,4],fdel$ ! salesman
  tmp$ = tmp$,H0[7] Using "######",fdel$		  
  tmp$ = tmp$,H0[4] Using "######",fdel$	
  tmp$ = tmp$,rtrim$(C1$[1,30]),fdel$
  tmp$ = tmp$,H5[7] Using "##",fdel$
  tmp$ = tmp$,H6[0] Using "##",fdel$
  tmp$ = tmp$,H4[2] Using "##",fdel$
  ORDP = 9
  ! - if J2a$
  ! -   tmp$ = tmp$,fdel$	
  ! - else
  ! -   tmp$ = fdel$	 
  ! - END IF
  tmp$ = tmp$,L1$[1,12],fdel$
  tmp$ = tmp$,rtrim$(L$[1,30]),fdel$
  tmp$ = tmp$,L3[2]	Using "###",fdel$
  tmp$ = tmp$,DPLY[0] Using "------#.##",fdel$
  tmp$ = tmp$,DPLY[1] Using "------#.##",fdel$	  
  tmp$ = tmp$,DPLY[2] Using "------#.##",fdel$	  
  tmp$ = tmp$,DPLY[4] Using "-----#.##",fdel$
  if RBFLAG let tmp1$="*RB" else tmp1$=""
  tmp$=tmp$,tmp1$,fdel$
  ! - if RBFLAG
  ! -   tmp$ = tmp$," *RB",fdel$
  ! - else	
  ! -   tmp$ = tmp$,fdel$
  ! - end if
  RBFLAG = 0
  tmp$ = tmp$,DPLY[3] Using "-------#.##",fdel$	  
  tmp$ = tmp$,UM$[1,4],fdel$
  tmp$ = tmp$,PRFT Using "----#.###%",fdel$	
  !
  if RBCOST ! rebate cost
    tmp$=tmp$,"*REBATE COST* -CONTRACT-",RB1[0]
    X2 = RB1[4] \ Gosub L_7700
    tmp$=tmp$,RBCOST Using "  (-----#.####)  "
    tmp$=tmp$,"EXP DATE: ",X$[1,8],fdel$
  else
    tmp$=tmp$,"",fdel$
  endif
  !	  
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
PRTLINE = 99
Print #0; Tab 5;L1$[1,12];
Print #0; Tab 22;L$[1,30];
Print #0; Using "###"; Tab 54;L3[2];
Print #0; Using "------#.##"; Tab 58;DPLY[0];
Print #0; Using "------#.##"; Tab 69;DPLY[1];
Print #0; Using "------#.##"; Tab 80;DPLY[2];
Print #0; Using "-----#.##"; Tab 91;DPLY[4];
If RBFLAG Print #0;" *RB";
RBFLAG = 0
Print #0; Using "-------#.##"; Tab 101;DPLY[3];
Print #0; Tab 116;UM$[1,4];
Print #0; Using "----#.###%"; Tab 121;PRFT;
If RBCOST Gosub L_5200
Print #0;"\15\";
return
!
L_5100: Rem PRINT CUSTOMER INFO
if J8 return
If (J1 + 5) > J9 Let J1 = 90 \ Gosub L_5800
Print #0; Using "######"; Tab 3;H0[7];
Print #0; Using "######"; Tab 13;H0[4];
Print #0; Tab 22;C1$[1,30];
Print #0; Using "##"; Tab 55;"TYPE: ";H5[7];
Print #0; Using "##"; Tab 65;"PRTP: ";H6[0];
Print #0; Using "##"; Tab 75;"WHSE: ";H4[2];
ORDP = 9
Print #0;"\15\";
Return 
!
L_5200: Rem FOUND A REBATE
Print #0;""
Print #0; Tab 46;"*REBATE COST* -CONTRACT-";RB1[0];
X2 = RB1[4] \ Gosub L_7700
Print #0; Using "-----#.####"; Tab 80;"(";RBCOST;")";
Print #0; Tab 99;"EXP DATE: ";X$[1,8]
J1 = J1 + 2
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 465 - ";T9$;
Print #0; Tab 54;"PROFIT EXCEPTION REPORT"
Print #0; Tab 10;"PRINT ANY <";GPMIN;"%";
Print #0; Tab 55;"PROFIT ON ";
If PCALC <> 2 Print #0;"ORD COST";
If PCALC = 2 Print #0;"NET  COST";
If RCOST Print #0;" - NET=REBATE"
If Not(RCOST) Print #0;""
Print #0; Using "ORDER ###### to ###### "; Tab 54;MINORDER;MAXORDER
Print #0;"\15\";
Print #0; Tab 3;"ORDER#";
Print #0; Tab 12;"CUST NO";
Print #0; Tab 22;"NAME";
Print #0; Tab 55;"LN";
Print #0; Tab 63;"PRICE";
Print #0; Tab 71;"ORD COST";
Print #0; Tab 83;"NET COST";
Print #0; Tab 92;"BASE COST";
Print #0; Tab 109;"QTY";
Print #0; Tab 115;"UM";
Print #0; Tab 125;"PROFIT";
Print #0;" "
ORDP = 0
Print #0;"\15\";
If J2 = 1 If Not(J8) Let J1 = J1 + 2
Return 
!
L_6000: Rem CHECK FOR REBATE
RBCOST = 0 \ RBSLCOST = 0;TYPE = 0;R[8] = 0
If L3[0] = 1 Return 
If Not(RCOST) Return 
RBCOST = 0 \ RBSLCOST = 0;TYPE = 0;R[8] = 0
I$ = " ",I$;I$[1,6] = H0[4] Using "######"
Search #10,3,2;I$,R[10],E
If E Goto L_6015
X2 = I$[1,6] \ If X2 = H0[4] Goto L_6039
L_6015: I$ = " ",I$;I$[1,6] = H6 Using "PT###"
Search #10,3,2;I$,R[10],E
If E Return 
If I$[1,2] <> "PT" Return 
X2 = I$[3,5] \ If X2 <> H6 Return 
L_6039: I$ = " ",I$
L_6040: I$ = " ",I$ \ If W2[3] Let I$[1,6] = W2[3] Using "######" Else Let I$[1,6] = B[24] Using "######"
X2 = 0 \ TYPE = TYPE + 1
If TYPE > 8 Goto L_6350
L_6055: Search #10,3,4;I$,R[10],E
! -  If E > 2 Gosub ERR_SEARCH
If E Goto L_6039
X2 = I$[1,6]
If W2[3] If X2 <> W2[3] Goto L_6040
If Not(W2[3]) If X2 <> B[24] Goto L_6040
KCUST$ = " ",KCUST$
If TYPE < 5 Let KCUST$[1,6] = H0[4] Using "######" Else Let KCUST$[1,6] = H6 Using "PT### "
KCUST$[7,12] = I$[7,12]
Search #10,2,2;KCUST$,R[10],E
If E Goto L_6055
I1$ = " ",I1$
If TYPE = 1 Or TYPE = 5
  I1$[1,12] = L1$[1,12];I1$[13] = I$[7,12],""
End If 
IF TYPE=2 OR TYPE=6
	LET I1$[1,1]="-";I1$[2,12]=proda$[116,126];I1$[13]=I$[7,12],""
ENDIF 
IF TYPE=3 OR TYPE=7
  I1$[1,1] = "*";I1$[2,5] = L1$[17,20];I1$[13] = I$[7,12],""
End If 
If TYPE = 3 Or TYPE = 8
  I1$[1,1] = "#";I1$[13] = I$[7,12],""
End If 
Search #8,2,2;I1$,R[8],E
! -  If E > 1 Gosub ERR_SEARCH
If E Goto L_6055
Mat Read #8,R[8],12;RB1;
Mat Read #8,R[8],36;RBUM;
Mat Read #8,R[8],40;RB;
Mat Read #8,R[8],118;RBWH;
Mat Read #8,R[8],126;RBL1;
Mat Read #8,R[8],138;RB5;
X2 = RB1[2] \ Gosub YMD2JUL \ X2 = 0
JWDATE = X2
If JWDATE > JODATE Goto L_6055
X2 = RB1[4] \ Gosub YMD2JUL \ X2 = 0
JWDATE = X2
If RB1[4] If JWDATE < JODATE Goto L_6055
If WHSEPR If RBWH If RBWH <> H4[2] Goto L_6055
If TYPE <> 1 And TYPE <> 5 Let RBUM[0] = PFU1[RBUM[0]] \ RBUM[1] = PFU1[RBUM[1]]
Gosub L_6400
If RB[0] = 3 Let RBCOST = RB5[0]
If RB[0] = 1 Let RBCOST = (B[10] * ((100 - RB5[0]) / 100))
If RB[0] = 2 Let CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2;CNVTA = X2 \ Gosub L_20000
If RB[0] = 2 Let CNVTA = (AMOUNT - RB5[0]);CNVTU[0] = RBUM[0];CNVTU[1] = 0 \ Gosub L_20000
If RB[0] = 2 Let RBCOST = AMOUNT
If RBL1[0] = 4 Let RBSLCOST = 0
If RBL1[0] = 3 Let RBSLCOST = RB5[1]
If RBL1[0] = 1 Or RBL1[0] = 2
  If RBL1[1] = 1 Let BASE = C4[4]
  If RBL1[1] = 1 If WHSEPR Let BASE = W3[18]
  If RBL1[1] = 2 Let BASE = B[8]
  If RBL1[1] = 2 If WHSEPR Let BASE = W3[17]
  If RBL1[1] = 3 Let BASE = B[10]
  If RBL1[1] = 3 If WHSEPR Let BASE = W3[16]
  If RBL1[1] = 4 Let BASE = RBCOST
  If RBL1[1] = 5 Let BASE = PF_LOAD2
  If RBL1[1] = 5 If WHSEPR Let BASE = W3[14]
End If 
If RBL1[0] = 1 Let RBSLCOST = (BASE * ((100 + RB5[1]) / 100))
If RBL1[0] = 2 Let CNVTU[0] = 0;CNVTU[1] = RBUM[1];CNVTU[2] = 2;CNVTA = BASE \ Gosub L_20000
If RBL1[0] = 2 Let CNVTA = (AMOUNT + RB5[1]);CNVTU[0] = RBUM[1];CNVTU[1] = 0 \ Gosub L_20000
If RBL1[0] = 2 Let RBSLCOST = AMOUNT
RBFLAG = 0
If RBCOST If COST > RBCOST And RCOST Let COST = RBCOST;RBFLAG = 99
L_6350: CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 2;CNVTA = RBCOST
Gosub L_20000 \ RBCOST = AMOUNT
Return 
!
L_6400: Rem GET REBATE COST
J2$ = " ",J2$
If W2[3] Let J2$ = W2[3] Using "######" Else Let J2$ = B[24] Using "######"
Search #12,2,1;J2$,R[12],E ! - \ If E > 1 Gosub ERR_SEARCH
If E = 1 Let M1[17] = 0 \ Goto L_6440
Mat Read #12,R[12],206;M1;
L_6440: If M1[17] = 0 Let M1[17] = 4
If M1[17] = 1
  If WHSEPR Let X2 = W3[17] Else Let X2 = B[8]
Else 
  If M1[17] = 2
    If WHSEPR Let X2 = W3[14] Else Let X2 = PF_LOAD2
  Else 
    If M1[17] = 3
      If WHSEPR Let X2 = W3[15] Else Let X2 = B[21]
    Else 
      If M1[17] = 4
        If WHSEPR Let X2 = W3[16] Else Let X2 = B[10]
      Else 
        If M1[17] = 5
          If WHSEPR Let X2 = W3[18] Else Let X2 = C4[4]
		Else
			if m1[17]=6
				if whsepr let x2=whmisc[2] Else let x2=prparc[2]
			endif
        End If 
      End If 
    End If 
  End If 
End If 
Return 
!
L_6500: Rem GET CURRENT COST
If L3[0] = 1 Return 
If WHSEPR Let COST = W3[18] Else Let COST = C4[4]
Return 
If H5[7] <> 8 ! "not a consignment
  If WHSEPR ! "set loaded cost
	COST = W3[17]
	If DFT_COST = 2
	  COST = W3[14]
	Else 
	  If DFT_COST = 3
		COST = W3[15]
	  Else 
		If DFT_COST = 4
    	  COST = W3[16]
		Else 
		  If DFT_COST = 5
			COST = W3[18]
		  End If 
		End If 
	  End If 
	End If 
  Else 
	COST = B[8]
	If DFT_COST = 2
	  COST = PF_LOAD2
	Else 
	  If DFT_COST = 3
		COST = B[21]
	  Else 
		If DFT_COST = 4
		  COST = B[10]
		Else 
		  If DFT_COST = 5
			COST = C4[4]
		  End If 
		End If 
	  End If 
	End If 
  End If 
End If 
Return 
! below not ref'd and would need add'l coding
If PRPARC[2] Let COST = PRPARC[2]
If WHSEPR If WHMISC[2] Let COST = WHMISC[2]
Return 
L_7700: Rem  *X2 TO X$ V1.0
X$ = " ",X$ \ X$[10] = ""
If Not(X2) Let X$ = "  none  " \ Goto L_7760
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
L_7760: Return 
!
! - L_10000: Rem ASK IF CASH OR CREDIT
! - Print @0,8;"ENTER   1:CREDIT,  2:CASH,  OR  E:EXIT               ";'CL';
! - Input ""K2$ 
! - Call String(1,K2$)
! - If K2$ = "E" Goto OUTEND
! - If K2$ <> "1" And K2$ <> "2" And K2$ <> "E" Goto L_10000
! - If K2$ = "1" Let FLG = 0 \ FLG$ = " 1"
! - If K2$ = "2" Let FLG = 1 \ FLG$ = " 5"
! - Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 ! - \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG ! - \ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG ! - \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
	If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
! - ERRMSG: Rem"========== display the error message on screen ========
! - Window Open @(40 - Len(MSG$) / 2 - 2),10; Size (Len(MSG$) + 4),3; Using ""
! - Print MSG$;
! - Pause 60
! - Window Close 
! - Return 
OUTEND: Rem EXIT
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section  
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - 		Chain "MX000C"
! - 		Close 
! - 		Chain "MX000"
! 
L_9100: Rem END
! - 		Gosub L_4500 \ Gosub L_4200 \ Gosub L_4000
! - 		If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
! - 		For K = 0 To 20
! - 		  T9[K] = 0
! - 		Next K
        goto OUTEND
! - 		If K2$ = "" Goto OUTEND
! - 		Goto L_900
! - 		Rem {begin rtn.error.s}
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
