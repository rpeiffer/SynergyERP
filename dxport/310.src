! >>> Program 310
!
! description ACCOUNTS RECEIVABLE AGING BY DAYS USING INVOICE DATE
!
! loadsave -w -n 100,10 -o prog/dxport/310.dl4 src/310.src
!
! 1.0 03/14/2008 
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY  4, 2005  14:27:23
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/mx/mx310.src (univ2) [bill] {06337}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem     MX310   INSTANT AGING - ACCOUNTS RECEIVABLE AGING
Rem     *************
Rem     GEORGE DOSCHER
!
Declare Intrinsic Sub DateToJulian,FileInfo,FormatDate,InpBuf,String,VerifyDate
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 1%,AGEBUCK[3],CUST2[2],DDAY
Dim 1%,X,A0[10],FLAG
Dim 1%,PA[256],R1,2%,C3,X3[1]
Dim 2%,A2[5],A4[7],ARDATE,J6,K,D9,A1[2]
Dim 2%,C1[12],D3[1],PRCNTAR[6],SCUST,ECUST,COID
Dim 3%,A3[3],C4[6],T1,P1,T9[5],ARREF[1]
Dim 3%,A127[25],AA127[128,1]
Dim 4%,T8[2],BUCK,E2,E3,C2,TOTAR
Dim K2$[40],K3$[6],K4$[40],K5$[50]
Dim B1$[10],J6$[16]
Dim CNAME$[30],P9$[50],P61$[256]
Dim AGEBUCK$[100]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
!!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Def FNR(X) = Sgn(X) * Int((Abs(X) + .005) * 100) / 100
K2$ = " ",K2$
For J = 2 To 3
  Read J1 \ If J1 = -1 Goto L_850
  Read #1,88,J1;J$;
  Open #J,J$
  If J = 2 Let K2$ = J$
L_850: Next J
Data "1504","1808"
!!J$ = COID Using "2/ARTERMCODE#" \ Ropen #50,J$
Mat Read #1,61,0;P61$;
!
STARTHERE: Rem start input here
!!SCUST = 0;ECUST = 999999
For X = 0 To 5 \ T9[X] = 0 \ Next X
For X = 0 To 2 \ T8[X] = 0 \ Next X
Read #1,3,0;CNAME$;
Mat Read #1,19,50;P9$;
Read #1,0,108;ARDATE;
Mat Read #1,20,130;AGEBUCK;
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
J$ = intCo Using "2/ARTERMCODE#" \ Ropen #50,J$
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"310",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("ARDATE",tmp$) \ ARDATE = tmp$
call dxget("SCUST",tmp$) \ SCUST = tmp$
call dxget("ECUST",tmp$) \ if tmp$ = "" Let ECUST = 999999 else Let ECUST = tmp$ 
!
X$ = ARDATE Using "&&&&&&" \ tmp1$ = X$[5,6],X$[1,2],X$[3,4] \ ARDATE = tmp1$
Call DateToJulian(1,tmp1$,tmp1$,E) \ If E Let e$ = "Invalid aging date!" \ error 10000 
!
If SCUST < 0 Or SCUST > 999999 Let e$ = "Invalid starting customer, must be between 0 and 999999!" \ error 10000
If ECUST < SCUST Or ECUST > 999999 Let e$ = "Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
If J8
  AGEBUCK$[1,20] = "CURRENT"
  If P9$[50,50] = "M" ! age by month
    If P9$[25,25] = "Y" ! age by due date
      AGEBUCK$[21,40] = "PAST DUE"
      AGEBUCK$[41,60] = "OVER 1 MONTH"
      AGEBUCK$[61,80] = "OVER 2 MONTHS"
      AGEBUCK$[81,100] = "OVER 3 MONTHS"
    Else 
      AGEBUCK$[21,40] = "OVER 1 MONTH"
      AGEBUCK$[41,60] = "OVER 2 MONTHS"
      AGEBUCK$[61,80] = "OVER 3 MONTHS"
      AGEBUCK$[81,100] = "OVER 4 MONTHS"
    End If 
  Else 
    If P61$[67,67] = "Y"
      AGEBUCK$[1,20] = "PERIOD 1"
      AGEBUCK$[21,40] = "PERIOD 2"
      AGEBUCK$[41,60] = "PERIOD 3"
      AGEBUCK$[61,80] = "PERIOD 4"
      AGEBUCK$[81,100] = "PERIOD 5"
    Else 
      For X = 0 To 3
        AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
      Next X
      If P9$[25,25] = "Y" And AGEBUCK[0] = 0
        AGEBUCK$[21,40] = "PAST DUE"
      End If 
    End If 
  End If 
Else
  AGEBUCK$[1,20] = "CURRENT............:"
  If P9$[50,50] = "M" ! age by month
    If P9$[25,25] = "Y" ! age by due date
      AGEBUCK$[21,40] = "PAST DUE...........:"
      AGEBUCK$[41,60] = "OVER 1 MONTH.......:"
      AGEBUCK$[61,80] = "OVER 2 MONTHS......:"
      AGEBUCK$[81,100] = "OVER 3 MONTHS......:"
    Else 
      AGEBUCK$[21,40] = "OVER 1 MONTH.......:"
      AGEBUCK$[41,60] = "OVER 2 MONTHS......:"
      AGEBUCK$[61,80] = "OVER 3 MONTHS......:"
      AGEBUCK$[81,100] = "OVER 4 MONTHS......:"
    End If 
  Else 
    If P61$[67,67] = "Y"
      AGEBUCK$[1,20] = "PERIOD 1...........:"
      AGEBUCK$[21,40] = "PERIOD 2...........:"
      AGEBUCK$[41,60] = "PERIOD 3...........:"
      AGEBUCK$[61,80] = "PERIOD 4...........:"
      AGEBUCK$[81,100] = "PERIOD 5...........:"
    Else 
      For X = 0 To 3
        AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
        AGEBUCK$[((X * 20) + 34),((X * 20) + 40)] = "......:"
      Next X
      If P9$[25,25] = "Y" And AGEBUCK[0] = 0
        AGEBUCK$[21,40] = "PAST DUE...........:"
      End If 
    End If 
  End If 
End if
!
Rem determine number of saract records- 2 methods
K4$ = " ",K4$
Call FileInfo(K4$,A127[],K2$,AA127)
!
E = 7
Search #2,1,0;K2$,F1,E 
if e let F1=0 ! was If E Gosub ERR_SEARCH
T1 = F1
If AA127[0,1] > 100 If AA127[0,1] + 30 < T1 Let T1 = AA127[0,1]
!
!!Gosub L_5400 \ Gosub L_5000
!!L_2000: Rem EDIT
!!Print @0,23;'CL';"Enter #:field to edit  P: print  E: exit ";
!!Input Len (16384 + 1);""J4$
!!Call String(1,J4$)
!1If J4$ = "P" Goto L_4000
!!If J4$ = "E" Goto OUTEND
!!W = J4$
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On W Gosub L_3000,SELCUST
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Goto L_2000
!
Goto L_4000
!
L_2500: Rem "======================================== get cust record
Mat Read #3,R3,142;C1
Mat Read #3,R3,194;CUST2
Mat Read #3,R3,210;C4
For K = 0 To 5 \ C4[K] = 0 \ Next K
Return 
!
L_2600: Rem "====================================== age AR record
Mat Read #2,R2,0;A2
Mat Read #2,R2,24;A3
Mat Read #2,R2,124;A0
Mat Read #2,R2,154;A4
Mat Read #2,R2,190;A1
Mat Read #2,R2,316;ARREF
If A0[10] = 1 Goto L_2800
A3 = A3[0] - A3[1] - A3[2]
T = Int(100 * Fra(A2[3]))
If T > 5
  If P9$[19,19] = "N"
    BUCK = 1
    Goto UPDATEAR
  Else 
    A3 = - (A3)
  End If 
End If 
If Not(A2[4]) ! does not have an invoice date
  !!Gosub L_3200
  e$ = "Bad date found in a/r record!" \ error 10000
End If
If P9$[50,50] = "D"
  D9 = A2[4]
  If P9$[25,25] = "Y"
    If A4[3]
      X$ = A4[3] Using "&&&&&&"
      Call DateToJulian(1,X$,X$,E)
      If Not(E) Let D9 = X$
    End If 
  End If 
  E2 = E3 - D9
  If E2 < -15000 Let E2 = E2 + 36525
  If E2 <= AGEBUCK[0]
    BUCK = 0
  Else 
    If E2 <= AGEBUCK[1]
      BUCK = 2
    Else 
      If E2 <= AGEBUCK[2]
        BUCK = 3
      Else 
        If E2 <= AGEBUCK[3]
          BUCK = 4
        Else 
          BUCK = 5
        End If 
      End If 
    End If 
  End If 
Else ! "age by months
  If P9$[25,25] = "Y" And A4[3] <> 0
    X$ = A4[3] Using "&&&&&&"
  Else 
    X2 = A2[4] \ Gosub L_7870
  End If 
  If X$[1,2] < "70"
    C2 = X$[1,2];C2 = (C2 + 100) * 12;X = X$[3,4];C2 = C2 + X
  Else 
    C2 = X$[1,2];C2 = C2 * 12;X = X$[3,4];C2 = C2 + X
  End If 
  E2 = E3 - C2
  If E2 < -600 Let E2 = E2 + 1200
  If E2 <= 0
    BUCK = 0
  Else 
    BUCK = E2 + 1
    If BUCK > 5 Let BUCK = 5
  End If 
End If 
T8[1] = T8[1] + A3;T8[2] = T8[2] + A3 * E2
UPDATEAR: Rem update a/r balance
C4[BUCK] = C4[BUCK] + A3
A2[3] = BUCK + Fra(A2[3])
If Not(A2[0]) Let A2[0] = C1[2]
Mat Write #2,R2,0;A2;
L_2800: Rem end aging transaction
Unlock #2
Return 
!
!!L_3000: Rem "==================================== change aging date
!!J0$ = "5000 618 3" \ J2$ = "&&&&&&"
!!J1 = ARDATE
!!J5$ = "Enter date to use to age the accounts receivable"
!!Gosub ISINPUT
!!ARDATE = J1
!!J5$ = ""
!!Return 
!!SELCUST: Rem select customer range
!!SCUST = 0;ECUST = 999999
!!J0$ = "3000 62006"
!!J2$ = "######" \ J1 = SCUST
!!J5$ = "Enter Starting Customer Code"
!!Gosub ISINPUT
!!SCUST = J1
!!J0$ = "3000 63206"
!!J2$ = "######" \ J1 = ECUST
!!J5$ = "Enter Ending Customer Code"
!!Gosub ISINPUT
!!ECUST = J1
!!If SCUST > ECUST
!!  Print @0,23;'CL';'RB';"Ending Customer Code Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto SELCUST
!!End If 
!!Return 
!!L_3200: Rem INVALID DATE CORRECTION
!!Print @7,15;"BAD DATE FOUND IN A/R RECORD";@7,17;"CUSTOMER NUMBER";
!!Print @39,17;"REFERENCE NO.";@66,17;"TYPE";
!!Print @7,19;"CURRENT DATE";@39,19;"ENTER CORRECT DATE";
!!Print @24,17;K2$[1,6];@54,17;K2$[9,16];@72,17;K2$[17,17];'RB';
!!X2 = A2[4] \ Gosub L_7770 \ Print @24,19;X$;
!!J0$ = "5 00  5919" \ J1 = ARDATE
!!Gosub L_3300
!!L_3250: J5$ = "ENTER CORRECT DATE" \ Gosub ISINPUT \ J5$ = ""
!!X2 = J1 \ Gosub L_7840 \ Goto L_3250
!!A2[4] = X2
!!Gosub L_3350 \ Print @0,15;'CE'
!!Print @0,22; Tab 16;"AGING ACCOUNTS RECEIVABLE";'CL';
!!Return 
!
L_3300: Rem DELETE DIR 2 & 3
J$ = " ",J$ \ J$ = K2$[1,6] \ J$[7] = A2[4] Using "######"
J$[13] = K2$[7] \ J$[24] = ""
Search #2,2,2;J$,V1,E 
If E Goto L_3340
Search #2,5,2;J$,V1,E 
If E Let e$ = "syserrorfile a/r file mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J$ \ error 10000
L_3340: Rem "now Dir #3
K4$ = " ",K4$;K4$[1,6] = A1[1] Using "######"
K4$[7] = J$
K4$[30] = ""
Search #2,2,3;K4$,V1,E 
If Not(E) ! "only if found - delete it?
  Search #2,5,3;K4$,V1,E 
  If E Let e$ = "syserrorfile a/r file mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K4$ \ error 10000
End If 
K5$ = " ",K5$;K5$[1,6] = K4$[1,6]
K5$[7,22] = J$[7,22]
K5$[23,28] = J$[1,6];K5$[29,29] = J$[23]
K5$[30] = ""
Search #2,2,5;K5$,V1,E 
If Not(E) ! "if found - delete
  Search #2,5,5;K5$,V1,E !!\ If E Gosub ERR_SEARCH
  If E Let e$ = "syserrorfile a/r file mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K5$ \ error 10000
End If 
Return 
!
L_3350: Rem INSERT DIR 2 & Dir 3
J$ = " ",J$;J$ = K2$[1,6];J$[7] = A2[4] Using "######"
J$[13] = K2$[7] \ If J$[24,24] = "" Let J$[24] = " "
V1 = R2
Search #2,4,2;J$,V1,E 
If E Let e$ = "syserrorfile a/r file mode (m)=4 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J$ \ error 10000
K4$ = " ",K4$;K4$[1,6] = A1[1] Using "######"
V1 = R2 \ K4$[7] = J$
Search #2,4,3;J$,V1,E 
If E Let e$ = "syserrorfile a/r file mode (m)=4 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J$ \ error 10000
K5$ = " ",K5$;K5$[1,6] = K4$[1,6]
K5$[7,22] = J$[7,22]
K5$[23,28] = J$[1,6];K5$[29] = J$[23]
V1 = R2
Search #2,4,5;K5$,V1,E 
If E Let e$ = "syserrorfile a/r file mode (m)=4 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K5$ \ error 10000
Return 
!
L_4000: Rem "======================================== age AR
!!If SCUST = 0 And ECUST = 999999 Gosub L_5450
!!Print @0,22;'CE';"Aging Account Receivable...Please Wait...";
!
If J8
  
  if  rtrim$(AGEBUCK$[1,20]) = "CURRENT" 
    tmp1$ = ARDATE Using "&&&&&&" 
    tmp$ = rtrim$(AGEBUCK$[1,20])," ",tmp1$[3,4],"/",tmp1$[5,6],"/",tmp1$[1,2],fdel$
  Else
    tmp$ = rtrim$(AGEBUCK$[1,20]),fdel$
  End if
  For X = 1 To 4
    tmp$ = tmp$, rtrim$(AGEBUCK$[((X * 20) + 1),((X * 20) + 20)]),fdel$
  Next X
  tmp$ = tmp$, "UNAPPLIED CREDITS",fdel$
  tmp$ = tmp$, "AVERAGE AGE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
X$ = ARDATE Using "&&&&&&"
If P9$[50,50] = "D" ! "age by days
  Call DateToJulian(1,X$) \ E3 = X$
Else ! age by months
  If X$[1,2] < "70"
    E3 = X$[1,2];E3 = (E3 + 100) * 12;X = X$[3,4];E3 = E3 + X
  Else 
    E3 = X$[1,2];E3 = E3 * 12;X = X$[3,4];E3 = E3 + X
  End If 
End If 
K3$ = " ",K3$ \ K3$ = SCUST Using "######"
Search #3,2,1;K3$,R3,E
If Not(E) Goto STARTCUSTAGING
!!If SCUST = 0 And ECUST = 999999 Gosub L_5100
L_4030: 
Search #3,3,1;K3$,R3,E 
If E Goto L_6530
!!X2 = K3$[1,6] \ If X2 > ECUST Goto L_6000
X2 = K3$[1,6] \ If X2 > ECUST Goto L_6530
STARTCUSTAGING: Rem read & age customer here
!!If SCUST = 0 And ECUST = 999999 Gosub L_5100
Gosub L_2500
If P9$[50,50] <> "M" And P61$[67,67] = "Y" ! not by month/by term code
  Mat Read #1,20,130;AGEBUCK;
  If CUST2[0] > 0 And CUST2[0] <= 99
    Read #50,(CUST2[0]),30;DDAY;
    If DDAY = 0 Let DDAY = 1
    If DDAY > 0
      AGEBUCK[0] = DDAY
      AGEBUCK[1] = DDAY * 2
      AGEBUCK[2] = DDAY * 3
      AGEBUCK[3] = DDAY * 4
    End If 
  End If 
End If 
K2$ = " ",K2$;K2$[1,6] = K3$
!!Print @31,10;K3$;
L_4070:
Search #2,3,1;K2$,R2,E 
If E Goto L_4200
If K2$[1,6] <> K3$[1,6] Goto L_4200
P1 = P1 + 1 !!\ If Not(Fra(P1 / 25)) Gosub L_5100
Gosub L_2600
Goto L_4070
!
L_4200: Rem END THIS CUSTOMER
Mat Write #3,R3,210;C4;
For X1 = 0 To 5 \ T9[X1] = T9[X1] + C4[X1] \ Next X1
L_4230: 
! - Signal 2,P,P1,P2
! - If P = -1 Goto L_4290
! - If P <> Spc(6) Goto L_4230
!
ABORTPROMPT: Rem abort program here
!!Print @0,22;'CL';"ABORT REQUESTED! Enter  A: abort  <CR>: continue  ";
!!Input Len (16384 + 1);""J4$
!!Call String(1,J4$)
!!If J4$ = "A" Goto OUTEND
!!If J4$ <> "" Goto ABORTPROMPT
L_4290: Goto L_4030
!!L_5000: Rem "================================= screen data
!!X$ = ARDATE Using "&&&&&&" \ Call FormatDate(X$) \ Print @18,3;X$;
!!Print Using "######";@20,6;SCUST;@32,6;ECUST;
!!Print " "
!!Return 
!!L_5100: Rem DISPLAY PROGRESS
!!If T1 Print Using " ### % ";@62,10;(P1 * 100 / T1);
!!Return 
!!L_5400: Rem "====================================== screen labels
!!Print 'CS';@0,0;"-mx310-";@15,0;"ACCOUNTS RECEIVABLE AGING BY ";
!!If P9$[50,50] = "D" Print "DAYS "; Else Print "MONTHS ";
!!If P9$[25,25] = "Y" Print "USING DUE DATE" Else Print "USING INVOICE DATE"
!!Print @2,3;"1> AGING DATE";
!!Print @18,5;"STARTING";@32,5;"ENDING";
!!Print @2,6;"2> CUSTOMER";
!!Print @7,10;"NOW SCANNING CUSTOMER  [      ]";
!!Return 
!!L_5450: Rem  progress label
!!Print @51,10;"PROGRESS  [       ]";
!!Print @7,12;"CURRENT NUMBER OF ACTIVITIES";
!!Print Using "#,###,###";@38,12;T1;
!!Return 
!!L_6000: Rem "=====================================
!!TOTAR = T9[5] + T9[4] + T9[3] + T9[2] - T9[1] + T9[0]
!!For X = 0 To 5
!!  If TOTAR
!!    PRCNTAR[X] = FNR((T9[X] / TOTAR) * 100)
!!  Else 
!!    PRCNTAR[X] = 0
!!  End If 
!!Next X
!!Print @0,1;'CE';
!!Signal 3,0
!!J$ = "---,---,--#.##"
!!Print @10,5;AGEBUCK$[1,20];
!!Print Using J$;@34,5;"$";T9[0];
!!Print Using "   ----.##%";PRCNTAR[0]
!!For X = 1 To 4
!!  Print @10,(X + 6);AGEBUCK$[((X * 20) + 1),((X * 20) + 20)];
!!  Print Using J$;@35,(X + 6);T9[X + 1];
!!  Print Using "   ----.##%";PRCNTAR[X + 1]
!!Next X
!!Print @35,11;"--------------";
!!Print @10,12;"SUBTOTAL...........:";
!!Print Using J$;@35,12;(T9[0] + T9[2] + T9[3] + T9[4] + T9[5]);
!!If TOTAR
!!  PRCNTAR[0] = FNR(((T9[0] + T9[2] + T9[3] + T9[4] + T9[5]) / TOTAR) * 100)
!!Else 
!!  PRCNTAR[0] = 0
!!End If 
!!Print Using "   ----.##%";PRCNTAR[0]
!!Print @10,13;"UNAPPLIED CREDITS..:";
!!Print Using J$;@34,13;"(";T9[1];")";
!!Print Using "  ----.##%";PRCNTAR[1]
!!Print @35,14;"--------------";
!!Print @10,15;"TOTAL A/R..........:";
!!Print Using J$;@35,15;(T9[0] + T9[2] + T9[3] + T9[4] + T9[5] - T9[1]);
!!If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR = 0
!!Print #0; Using "   ----.##%";PRCNTAR[0]
!!If T8[1] Print Using "-----#.##";@23,18;"AVERAGE AGE =  ";T8[2] / T8[1];
!!If P9$[50,50] = "D" Print " DAYS"; Else Print " MONTHS";
!!L_6200:!! Print @0,22;'CE';"DO YOU WANT A PRINTED COPY? (Y/N) ";
!!Input Len (16384 + 1);""J4$
!!Call String(1,J4$)
!!If J4$ <> "N" And J4$ <> "Y" Goto L_6200
!!If J4$ = "N"
!!  If SCUST = 0 And ECUST = 999999 Goto OUTEND
!!  Goto STARTHERE
!!End If 
!!!X1 = 310
!!STATUS = 0
!!Call "mxprsel",X1,STATUS
!!If STATUS = 1 Goto OUTEND
!!If STATUS > 2
!!  Print @0,22;'CE RB';"PRINTER ERROR HAS OCCURRED!!!"; \ Signal 3,30
!!  Goto L_6200
!!End If 
!!Goto L_6530
!
L_6530: !!If Err 0 Gosub ERR_ESCAPE
!!Print @0,22;'CE';"Printing...Please Wait...";
!
If J8
  TOTAR = T9[5] + T9[4] + T9[3] + T9[2] - T9[1] + T9[0]
  For X = 0 To 5
    If TOTAR
      PRCNTAR[X] = FNR((T9[X] / TOTAR) * 100)
    Else 
      PRCNTAR[X] = 0
    End If 
  Next X
  J$ = "---,---,--#.##"
  tmp$ = T9[0] Using J$,fdel$
  For X = 1 To 4
    tmp$ = tmp$, T9[X + 1] Using J$,fdel$
  Next X
  tmp$ = tmp$,T9[1] Using J$,fdel$
  If T8[1] Let tmp$ = tmp$, T8[2] / T8[1] Using "----#.##" !!AVERAGE AGE
  If P9$[50,50] = "D" Let tmp$ = tmp$, " DAYS",fdel$ Else Let tmp$ = tmp$, " MONTHS",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Goto OUTEND
End if
!
Print #0;"\15\";
Print #0;"-mx310-"; Tab 25;CNAME$
Print #0;Msc$(3);
X$ = ARDATE Using "&&&&&&" \ Call FormatDate(X$)
Print #0; Tab 25;"INSTANT AGING TOTALS FOR ";X$
If SCUST <> ECUST
  Print #0; Using "######"; Tab 25;"For Customers: ";SCUST;" thru ";ECUST
Else 
  Print #0; Using "######"; Tab 25;"For Customer#: ";SCUST
End If 
Print #0;""
TOTAR = T9[5] + T9[4] + T9[3] + T9[2] - T9[1] + T9[0]
For X = 0 To 5
  If TOTAR
    PRCNTAR[X] = FNR((T9[X] / TOTAR) * 100)
  Else 
    PRCNTAR[X] = 0
  End If 
Next X
J$ = "---,---,--#.##"
Print #0; Tab 5;AGEBUCK$[1,20];
Print #0; Using J$; Tab 28;T9[0];
Print #0; Using "   ----.##%";PRCNTAR[0]
For X = 1 To 4
  Print #0; Tab 5;AGEBUCK$[((X * 20) + 1),((X * 20) + 20)];
  Print #0; Using J$; Tab 28;T9[X + 1];
  Print #0; Using "   ----.##%";PRCNTAR[X + 1]
Next X
Print #0; Tab 28;"--------------"
Print #0; Tab 5;"SUBTOTAL...........:";
Print #0; Using J$; Tab 28;(T9[0] + T9[2] + T9[3] + T9[4] + T9[5]);
If TOTAR
  PRCNTAR[0] = FNR(((T9[0] + T9[2] + T9[3] + T9[4] + T9[5]) / TOTAR) * 100)
Else 
  PRCNTAR[0] = 0
End If 
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0; Tab 5;"UNAPPLIED CREDITS..:";
Print #0; Using J$; Tab 27;"(";T9[1];")";
Print #0; Using "  ----.##%";PRCNTAR[1]
Print #0; Tab 28;"--------------"
Print #0; Tab 5;"TOTAL A/R..........:";
Print #0; Using J$; Tab 28;(T9 - T9[1] + T9[2] + T9[3] + T9[4] + T9[5]);
If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR[0] = 0
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0;" "
Print #0;" "
If T8[1] Print #0; Using "----#.##"; Tab 10;" AVERAGE AGE = ";T8[2] / T8[1];
If P9$[50,50] = "D" Print #0;" DAYS" Else Print #0;" MONTHS"
If Not(STATUS)
  Close #0
End If 
!!Goto L_6200
Goto OUTEND
!
Rem {begin call.input.i}
!!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end call.input.i}
!!L_7770: Rem DATE JULIAN X2 TO X$
!!D3[0] = X2;FLAG = 1;X$ = " "
!!Call "JULIANUTIL",D3[],X$,FLAG
!!Return 
!!Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
!!X2 = X$[1,6]
!!Return 
!!L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
!!X$ = X2 Using "&&&&&&"
!!Call DateToJulian(1,X$,X$,E) \ If E Return 
!!X2 = X$[1,5]
!!Return 1
!
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
OUTEND: Rem EXIT ROUTINE
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!
! dx close
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 