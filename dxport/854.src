! >>> Program 854
!
! description   Costed BOM Print
!
! loadsave -w -n 100,10 -o prog/dxport/854.dl4 src/854.src
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 1.7d OBJECT CODE     Created: MAR  6, 1997  15:39:37
Rem Source: /usr/acct/xindist/src/mx854.s  (univ) [jcs]
Rem  Copyright (c) 1997 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time,Time
Option Default Dialect IRIS1
Rem MX854 - BOMPRINT
Rem         JANUARY 1980 BY D.G.
Rem LAST UPDATE: 10/21/1994 - LOAD MARKUP & WHSE COSTING
try ! main try
Dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],J4$[50]
Dim 1%,COST_LEV[3]
Dim 3%,P3,A1[20],A2[17],A3[10],A4[10],Q
Dim 3%,I8,T1[10],L1[10],WGHT
Dim 3%,G[4],R[20],BMAMT,COST,AMNT
Dim P9$[50],X$[10],ANS$[10]
Dim G$[20],N9$[30],N1$[36]
Dim L$[5],P1$[10],K30$[40]
Dim 3%,T0,W3[24],PREC[1],WHMISC[6],PRPARC[3],PF_LOAD2
Dim 3%,R4[100],R5,S3,2%,S4,C4[10],1%,ECOST,WHSE,LM[1],WHLM[1]
Dim 2%,P0[2],W2[9],1%,D0[100],WHPARC[5]
Dim 2%,C2,Y,B[24],B1
Dim 2%,R2,C,R1,E2,D9[5],1%,I,S2[3]
Dim 1%,E1,X,F,P9,S9,P[1],L9,T,F9,Z1
Dim F$[20],P$[156],U$[9],N$[12],H$[156],A1$[31]
Dim A$[20],J$[20],C$[800],B1$[12],E1$[12],N2$[26]
Dim I$[30],B$[30],K$[66],K1$[30],U5$[50]
Dim M1$[20],M2$[20],J0$[5],J1$[5]
Dim P0$[4],T9$[26],U9$[132],D8$[8],Y$[12]
Dim 2%,I2,3%
dim useOptItems$[1],explOptMake$[1]
! DX stuff
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[200]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]

dim 3%

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 10000 + .5) * .0001)
Def FNP(X) = FNR(X * X1)

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

For E1 = 2 To 7
	Read X
	If Not(X) Goto L_830
	Read #1,88,X;F$[1,16];
	Open #E1,F$
L_830: Next E1
Data "0","1792","1728","0","656","1744"
CH_PROD = 3;CH_CCODE = 4;CH_BOM = 6;CH_PRWHS = 7
U$ = "---,###"
Mat Read #1,3;N9$;
Mat Read #1,19,50;P9$;
Read #1,3,164;D8$;
Mat Read #1,115;D9;

Gosub GET_PRNTR
Call Time(U5$)
I4 = 0
M1$ = "######.####"
M2$ = "##,###.####"


b1$ = GetParameter$("BEGPART")
e1$ = GetParameter$("ENDPART")
if e1$ = "" let e1$ = "ZZZZZZZZZZZZZ"
l$ = ucase$(GetParameter$("SINGMULT"))
if l$ <> "S" and l$ <> "M"
	e$ = "Single/Multi-level explosion prompt must be 'S' or 'M'!"
	error 10000
end if
! CHECK TO SEE IF BOM LEVEL ALLOWS, IF NOT FORCE SINGLE
If P9$[16,16] = "S" Let L$ = "S"
WHSE = 0
If P9$[32,32] = "Y" and COST_LEV[1] ! warehouse pricing turned on and allowed to see it
	WHSE = GetParameter$("WHSE")
	If WHSE < 0 Or WHSE> D9[5]
		e$ = "Invalid warehouse entered!"
		error 10000
	end if
end if

useOptItems$ = GetParameter$("USEOPTITEMS")
explOptMake$ = GetParameter$("EXPLOPTMAKE")

!
! printing starts here
!
! Print @0,22;'CE';"PRINTING, PLEASE WAIT. ." \ Signal 3,0
A1$ = " ",A1$;A1$ = B1$
Search #CH_PROD,2,1;A1$,R,E
If E > 1 error 11000
If Not(E) Let Y$ = A1$
If Not(E) Goto L_1640
PRODFLELOOP: Rem "Loop Thru ProdFle
	Search #CH_PROD,3,1;A1$,R,E
	If E = 2 Goto OUTEND
	If A1$ > E1$ Goto OUTEND
	If E error 11000
	Y$ = A1$
	L_1640: C2 = R
	Read #CH_PROD,C2,0;P1$;
	A$ = R Using "#####   0    0"
	Search #CH_BOM,2,1;A$,I2,E
	If A$[15,16] <> P1$[6,7] Let E = 1
	If Not(E) Goto L_1690
	L_1660: Search #CH_BOM,3,1;A$,I2,E
		If E Goto PRODFLELOOP
		I2 = A$[1,5]
		If I2 <> C2 Goto PRODFLELOOP
		If A$[15,16] <> P1$[6,7] Goto L_1660
	I2 = 0
	A$ = ""
	L_1690: !
	B$ = " ",B$
	T0 = 0
	For E1 = 1 To 10
		L1[E1] = 0
		T1[I] = 0
		If E1 <= 4
			G[E1] = 0
		End If 
	Next E1
	C$ = " ",C$
	Mat Read #CH_PROD,R,0;H$;
	A$ = A1$
	X1 = 1
	! STARTEXPL: Rem
	S2[3] = 0
	E2 = C2 \ Gosub READ_PROD
	B1 = PFU1[8]
	Gosub PRNTHEADING
	Gosub PRNTCOLHEAD
	E2 = C2 \ Gosub READ_PROD
	B1 = PFU1[8]
	R2 = C2
	S8 = 0
	Gosub EXPL_BOM
	P = 0
	I4 = I4 + 1
	If L$ = "S" Gosub SUMMTTLS
	If L$ = "M" Gosub PRNTBOMTTL
Goto PRODFLELOOP


ADDLINECNT: If L9 > L8 Gosub CHKPGLEN
	L9 = L9 + 1
Return 

CHKPGLEN: Rem HEADING ROUTINE
	If SCRN RETURN
	Gosub PRNTHEADING
	Gosub PRNTCOLHEAD
Return 


EXPL_BOM: Rem EXPLOSION
	D0 = 1
	A$ = R2 Using "#####   0    0"
	Search #CH_BOM,2,1;A$,R,R1
	F$ = A$
	If R1 = 0 Goto L_3065
	CHKBOM: Rem "Find Top
	Search #CH_BOM,3,1;F$,R,R1
	L_3065: If R1 <> 0 Return 
	If A$[1,5] <> F$[1,5] Return 
	R3 = F$[1,5] \ If R3 <= 0 Goto CHKBOM
	Read #CH_PROD,R3,0;P1$;
	If F$[15,16] <> P1$[6,7] Goto CHKBOM
	I = 0
	Gosub ADDLINECNT
	Print #0;""
	F$ = A$
	TOPPRODBOM: Rem "Make Level 1 Loop
	Search #CH_BOM,3,1;F$,S4,R1
	If R1 <> 0 Goto TOPLVLDONE
	If A$[1,5] <> F$[1,5] Return 
	R3 = F$[1,5] \ If R3 <= 0 Goto TOPPRODBOM
	Read #CH_PROD,R3,0;P1$;
	If F$[15,16] <> P1$[6,7] Goto TOPPRODBOM
	Read #CH_BOM,S4;S3;
	Mat Read #CH_BOM,S4,6;N1$;
	Mat Read #CH_BOM,S4,48;S2;
	Mat Read #CH_BOM,S4,56;N2$;
	R4[I] = S3
	Gosub ADDLINECNT
	H = 999
	J$[1,14] = F$[1,14]
	S = J$[6,9]
	J0$ = "Y";J1$ = "Y"
	Gosub STARTPRNT
	If J0$ = "N" Goto PRODBOMDONE
	If L$ = "S" Goto PRODBOMDONE
	H = 0
	I = 1
	CHKIFADDLLEVEL: Rem "See if there's another BOM
	C$[I * 15 + 1,I * 15 + 14] = E2 Using "#####   0    0"
	G$ = C$[I * 15 + 1,I * 15 + 14]
	R3 = G$[1,5] \ If R3 <= 0 Goto BOMLVLDONE
	Read #CH_PROD,R3,0;P1$;
	G$[15,16] = P1$[6,7]
	Search #CH_BOM,2,1;G$,R,R1
	D0[1] = 1
	If R1 = 0 Goto L_3325
	MAKEBOMLOOP: Rem "Make Level BOM Loop
	Search #CH_BOM,3,1;G$,R,R1
	L_3325: If R1 <> 0 Goto BOMLVLDONE
	If G$[1,5] <> C$[I * 15 + 1,I * 15 + 5] Goto BOMLVLDONE
	R3 = G$[1,5] \ If R3 <= 0 Goto MAKEBOMLOOP
	Read #CH_PROD,R3,0;P1$;
	If G$[15,16] <> P1$[6,7] Goto MAKEBOMLOOP
	L_3350: G$ = C$[I * 15 + 1,I * 15 + 14]
	R3 = G$[1,5] \ Read #CH_PROD,R3,0;P1$;
	G$[15,16] = P1$[6,7]
	L_3360: Search #CH_BOM,3,1;G$,S4,R1
	If R1 <> 0 Goto BOMLVLDONE
	If G$[1,5] <> C$[I * 15 + 1,I * 15 + 5] Goto BOMLVLDONE
	R3 = G$[1,5] \ If R3 <= 0 Goto L_3360
	Read #CH_PROD,R3,0;P1$;
	If G$[15,16] <> P1$[6,7] Goto L_3360
	Read #CH_BOM,S4;S3;
	Mat Read #CH_BOM,S4,6;N1$;
	Mat Read #CH_BOM,S4,48;S2;
	Mat Read #CH_BOM,S4,56;N2$;
	R4[I] = S3
	Gosub ADDLINECNT
	J$ = G$;J0$ = "Y";J1$ = "Y"
	Gosub STARTPRNT
	C$[I * 15 + 1,I * 15 + 14] = G$
	If J0$ = "N" Goto MAKEBOMLOOP
	I = I + 1
	Goto CHKIFADDLLEVEL
	BOMLVLDONE: Rem Done with Level
	I = I - 1
	If I = 0 Goto PRODBOMDONE
	Goto L_3350
	PRODBOMDONE: Rem "Done with all Levels
	C$ = " ",C$
	I = 0
	Goto TOPPRODBOM
	TOPLVLDONE: Rem Top Prod BOM Done
Return 

READ_PRDWHSE: Rem READ PRODWHSE
	K30$ = " ",K30$;K30$[1,12] = P$[140,151]
	If Not(WHSE) Let K30$[13] = 1 Using "##" Else Let K30$[13] = WHSE Using "##"
	Search #CH_PRWHS,2,1;K30$,R[7],E \ If E > 1 error 11000
	If E = 1 Goto L_3770
	Mat Read #CH_PRWHS,R[7],38;W2;
	Mat Read #CH_PRWHS,R[7],78;W3;
	Mat Read #CH_PRWHS,R[7],384;WHPARC;
	Mat Read #CH_PRWHS,R[7],800;WHMISC;
	Mat Read #CH_PRWHS,R[7],842;WHLM;
	If W3[17] Let B[8] = W3[17]
Return 
L_3770: Rem NOT FOUND
	Mat W3 = Zer \ Mat WHLM = Zer \ Mat WHMISC = Zer
	W3[0] = 0;WHLM[0] = 0;WHMISC[0] = 0
Return 

READ_PROD: Rem READ PROD
	If S2[3] = 1 Return 
	L_3805: Mat Read #CH_PROD,E2;P$;
	Mat Read #CH_PROD,E2,156;B;
	Mat Read #CH_PROD,E2,256;A;
	Mat Read #CH_PROD,E2,512;PFU1;
	Mat Read #CH_PROD,E2,554;PFU2; \ Mat Read #CH_PROD,E2,620;LM;
	Mat Read #CH_PROD,E2,596;PRPARC; \ Mat Read #CH_PROD,E2,894;C4;
	Mat Read #CH_PROD,E2,938;PF_LOAD2;
	If Not(B[8]) Let B[8] = B[21]
	If Not(B[8]) Let B[8] = B[10]
	PREC[0] = E2;R[3] = E2
	If PFU1[8] <= 0 Let PFU1[8] = PFU1[0]
	If PFU1[13] <= 0 Let PFU1[13] = PFU1[0]
	If P9$[32,32] = "Y"
		If WHSE Gosub READ_PRDWHSE
		If WHSE Gosub SETWHSEINFO
	End If 
	If ECOST Gosub CALCCOST
	A2 = B[8];ECOST = 0
	Return 
Return 

PRNTBOMTTL: Rem TOTAL PRINT
	If Not(SCRN) Gosub PRNTHEADING
	Print #0;"\15\"; Tab 15;"*** C O S T   S U M M A R Y ***";
	Print #0;"\15\\15\DESCRIPTION";
	Print #0; Tab 25;"QUANTITY"; \ If COST_LEV[1] Print #0; Tab 40;"EXT COST";
	Print #0;"\15\";
	T = 5
	Print #0;"LABOR TIME";
	Gosub L_4500
	T = 6
	Print #0;"\15\";
	Print #0;"MACHINE TIME";
	Gosub L_4500
	T = 7
	Print #0;"\15\";
	Print #0;"FIXED TIME";
	A2[7] = A2[7] - A2[8]
	Gosub L_4500
	Print #0;"\15\";
	T = 8
	Print #0;"SET-UP TIME";
	Gosub L_4500
	Print #0;"\15\";
	Print #0;"\15\"; Tab 5;"***SUB-TOTAL***";
	Gosub L_4535
	Print #0;"\15\";
	Print #0;"\15\";
	If Not(COST_LEV[1]) Goto L_4265
	T = 1
	Print #0;"RAW MATERIAL";
	Gosub L_4515
	Print #0;"\15\";
	Print #0;"MACHINE COSTS";
	Gosub L_4515
	Print #0;"\15\";
	Print #0;"LABOR COSTS";
	Gosub L_4515
	Print #0;"\15\";
	Print #0;"FIXED COSTS";
	Gosub L_4515
	Print #0;"\15\";
	Print #0;"\15\"; Tab 5;"***SUB-TOTAL***";
	Gosub L_4550
	Print #0;"\15\\15\";
	SUMMTTLS: Rem Summary Total
	K1$ = "*",K1$
	A2[12] = A2[1] + A2[2] + A2[3] + A2[4]
	If Not(COST_LEV[1]) Goto L_4265
	Print #0; Tab 25;K1$;"\15\";
	Print #0; Tab 25;"*"; Tab 54;"*\15\";
	Print #0; Tab 25;"*  TOTAL COST = $";
	Print #0; Using "######.####";A2[12]; Tab 54;"*"
	Print #0; Tab 25;"*"; Tab 54;"*\15\";
	Print #0; Tab 25;K1$;"\15\";
	L_4265: For T = 0 To 17
		If T > 10 Goto L_4285
		A4[T] = 0
		A3[T] = 0
		L_4285: A2[T] = 0
	Next T
	K$ = "\15\"
Return 

L_4500: Rem PRINT SUMM
	Print #0; Using M1$; Tab 25;A2[T];
Return 
L_4515: Rem PRINT COSTS
	Print #0; Using M2$; Tab 40;A2[T];
	T = T + 1
Return 
L_4535: Rem  SUB TOT 1
	Print #0; Using M1$; Tab 25;A2[5] + A2[6] + A2[7] + A2[8];
Return 
L_4550: Rem  SUB TOT 2
	Print #0; Using M2$; Tab 40;A2[1] + A2[2] + A2[3] + A2[4];
Return 

GET_WEIGHT: Rem EXT WEGHT
	E2 = J$[1,5]
	Gosub L_3805
	If I < 1 Let I8 = 1 \ Goto L_4715
	I8 = R4[I - 1] \ If I8 <= 0 Let I8 = 1
	L_4715: CNVTA = I8;CNVTU[0] = PFU1[8];CNVTU[1] = 0;CNVTU[2] = 1
	Gosub CONVERT:
	If A[5] = 0 Let A[5] = 1
	WGHT = (A[6] * AMNT / A[5])
Return 

STARTPRNT: Rem
	Gosub GET_WEIGHT
	E2 = J$[10,14]
	If L9 > L8 Gosub CHKPGLEN
	If S2[3] = 1 Goto L_5040
	ECOST = 1 \ Gosub READ_PROD
	If S2[2] = 1 Gosub OPTNLQ
	If S2[2] = 1 If P$[139,139] = "M" If J1$ = "Y" Gosub OPTNLMAKEQ
	If J1$ = "N" Return 
	If S2[2] = 2 Let J0$ = "N"
	S3 = R4[I] \ Gosub BASE2PRDU
	R4[I] = BMAMT
	A2 = COST
	L_5040: Rem
	If I = 0 Gosub PRNTLVL1 \ Goto L_5072
	For X = 1 To I
		Print #0;" ";
	Next X
	Print #0;I + 1;" ";
	I1 = 1 + 1 * I
	L_5072: If S2[3] = 1 Let P$ = " ",P$;P$[140,141] = "Z ";P$[9,34] = N2$[1,26]
	Print #0; Tab I1;N1$[25,27];" ";P$[140,151];" ";
	If S2[2] = 2 Print #0;"@";
	If S2[3] = 1 Goto PRNTPRODINFO
	Gosub PRNTBOMINFO
	Gosub COSTPRNT
	PRNTPRODINFO: Print #0; Tab 90;P$[9,38];
	If S2[3] = 1 Goto L_5220
	If L$ = "M" Gosub L_5605
	If L$ = "M" If Not(I) Let T0 = T0 + I8
	If L$ = "S" Let T0 = T0 + I8
	Goto PRNTADDLPRODINFO
	PRNTBOMINFO: Rem Print BOM
	R5 = 1
	X9 = 0 \ If I > 0 Let X9 = I - 1
	For X = X9 To I
		R5 = R5 * R4[X]
	Next X
	If I >= 1 Let R5 = R5 / 1
	If S2[1] <> 1 Let R5 = R4[I]
	Print #0; Using "######.####"; Tab 35;R5;
	X1 = 1
	If S2[1] = -1 Print #0;"F"; \ X1 = 1
	If S2[1] = 0 Print #0;"%"; \ X1 = .01
	If S2[1] = 1 Print #0;" "; \ X1 = 1
	If S2[1] = 2 Print #0;"#"; \ X1 = .01
	P$[123,125] = "ERR" \ If S2[0] > 0 Read #CH_CCODE,S2[0],10;P$[123,125];
	Print #0; Tab 49;P$[123,125];
	Print #0; Tab 54;P$[156,156];
	Print #0; Tab 56;P$[152,155];
Return 

PRNTADDLPRODINFO: Rem
	If S2[2] <> 2 If P$[139,139] = "M" Gosub CONVMAKETOSTK
	If S2[1] <> 1 Let R5 = R4[I]
	L_5220: Print #0;""
	If P9$[26,26] = "Y" Print #0; Tab 90;P$[63,92] \ L9 = L9 + 1
Return 

PRNTLVL1: Rem SINGLE LEVEL
	Print #0;"1 ";
Return 

COSTPRNT: Rem COST CALCULATION & PRINT
	ECOST = 1 \ Gosub READ_PROD
	Gosub BASE2PRDC
	I2 = COST
	Gosub FIXDCOSTCONV
	If COST_LEV[1] Print #0; Using "$$$###.####"; Tab 60;I2;
	If S2[2] <> 2 If P9$[16,16] = "M" If P$[139,139] = "M" Let I2 = I2 - B[3]
	If I2 < 0 Let I2 = COST
	I8 = FNR(R5 * I2);X1 = 1
	If S2[1] = 0 Let I8 = FNR(R5 * COST);X1 = .01
	If S2[1] = 2 Let I8 = FNR((WGHT * R5) * COST);X1 = .01
	If S2[2] <> 2 If P9$[16,16] = "M" If P$[139,139] = "M" Let I8 = I8 + B[3]
	I8 = FNP(I8)
	If Not(COST_LEV[1]) Goto L_5458
	If I = 0 Print #0; Using "$$$$###.####"; Tab 76;I8;
	If I > 0 Print #0; Using "$$$$###.####"; Tab 72;I8;
	L_5458: If I > 0 Goto L_5490
	If S2[2] <> 2 If P9$[16,16] = "M" If P$[139,139] = "M" Goto ADDMAKECOSTS
	If S2[1] = -1 Goto ADDFIXED
	If P$[152,155] = "MACH" Goto ADDTIME
	If P$[152,155] = "LABR" Goto ADDTIME
	L_5480: Rem REST JUST COST TIMES QUANTITY
	If I > 0 Goto L_5490
	A2[1] = A2[1] + I8
L_5490: Return 

ADDMAKECOSTS: Rem MADE PART PUT ALL IN TIMES QTY
	Mat Read #CH_PROD,E2,156;B;
	If Not(B[1]) Goto L_5480
	If L$ = "S" Goto L_5480
	Goto L_5480
	A2[1] = A2[1] + FNR(R5 * B[1])
	A2[2] = A2[2] + FNR(R5 * B[2])
	A2[4] = A2[4] + B[3]
	A2[5] = A2[5] + FNR(R5 * B[4])
	A2[6] = A2[6] + FNR(R5 * B[5])
	A2[7] = A2[7] + B[6]
	A2[8] = A2[8] + B[18]
Return 
ADDTIME: Rem MACHINE / LABOR
	If P$[152,155] = "MACH" Let Z7 = 2 \ A2[6] = A2[6] + R5
	If P$[152,155] <> "MACH" Let Z7 = 3 \ A2[5] = A2[5] + R5
	A2[Z7] = A2[Z7] + I8
Return 
ADDFIXED: Rem FIXED WHATEVER
	A2[4] = A2[4] + I8
	A2[7] = A2[7] + R5
	If P$[152,155] = "TIME" Let A2[8] = A2[8] + R5
Return 
L_5605: Rem TOTAL COST CALC
	P0$ = P$[152,155]
	A2[12] = A2[12] + I8
Return 
PRNTCOLHEAD: U9$ = " ",U9$
	Print #0; Tab 1;"LVL/SEQ";
	Print #0; Tab 10;"ITEM NUMBER";
	Print #0; Tab 43;"QTY PER";
	Print #0; Tab 51;"UM";
	Print #0; Tab 54;"MC";
	Print #0; Tab 57;"CC";
	If Not(COST_LEV[1]) Goto L_5745
	Print #0; Tab 60;"  UNIT COST";
	Print #0; Tab 76;"EXTENDED COST";
	L_5745: Print #0; Tab 100;"DESCRIPTION"
	L9 = 5
	If P9$[26,26] = "Y" Let L9 = L9 + 1
Return 
PRNTHEADING: Rem HEADINGS
	U9$ = " ",U9$
	I9 = I9 + 1
	If I9 <> 1 Print #0;"\14\"
	T9$ = "" \ Call Time(T9$)
	Print #0;" - 854 - ";T9$;
	Print #0; Tab (Int(66 - (Len(N9$) / 2)));N9$
	Print #0; Tab 2;"DATE ",D8$;
	Print #0; Tab 48;"C O S T E D   B I L L   O F   M A T E R I A L ";
	Print #0; Using "PAGE ###"; Tab 120;I9
	U9$ = " ",U9$
	If WHSE Print #0;" WHSE: ";WHSE;
	Print #0;" "
	U9$[48,95] = " ",U9$[48,95]
	H$[123,125] = "ERR" \ If B1 > 0 Read #CH_CCODE,B1,10;H$[123,125];
	Print #0;"\15\ITEM NUMBER: ";Y$;
	Print #0;"   DESCRIPTION    : ";H$[9,38];"  ";H$[123,125];
	Print #0;"  REV LVL ";H$[6,7]
	If P9$[26,26] = "Y" Print #0; Tab 45;H$[63,92] \ L9 = L9 + 1
Return 

CONVMAKETOSTK: Rem PRDTN=>STK
	E2 = J$[10,14] \ Gosub READ_PROD
	BMAMT = R5 \ Gosub PRD2STKU
	R4[I] = S3
	E2 = J$[10,14]
Return 

OPTNLMAKEQ: Rem OPTIONAL PATH -> TAKE IT?
	! optional make item - explode it?
	j0$ = explOptMake$
	if j0$ <> "Y" let j0$ = "N"
	If L$ = "S" Let J0$ = "N"
Return

OPTNLQ: Rem OPT - RM
	! option item - use it?
	j1$ = useOptItems$
	if j1$ <> "Y" let j1$ = "N"
Return

BASE2PRDU: Rem BASE(S3) -> PRDTN
	CNVTA = S3;CNVTU[0] = 0;CNVTU[1] = S2[0];CNVTU[2] = 5
	If (S2[1] = 0 Or S2[1] = 2) Let AMNT = S3 \ Goto L_6810
	Gosub CONVERT
	L_6810: If AMNT <= 0 Let AMNT = S3
	BMAMT = AMNT
	BASE2PRDC: Rem BASE COST -> PRDTN COST
	CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 2
	Gosub CONVERT
	If AMNT <= 0 Let AMNT = A2
	COST = FNR(AMNT)
Return 

PRD2STKU: Rem PRDTN -> STK  UNITS
	CNVTA = BMAMT;CNVTU[0] = PFU1[13];CNVTU[1] = PFU1[8];CNVTU[2] = 5
	If (S2[1] = 0 Or S2[1] = 2) Let AMNT = BMAMT \ Goto L_6860
	Gosub CONVERT
	L_6860: If AMNT <= 0 Let AMNT = BMAMT
	S3 = AMNT \ Return 
	STK2BASEC: Rem STOCK -> BASE COST
	CNVTA = COST \ CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 2
	Gosub CONVERT \ If AMNT <= 0 Let AMNT = COST
	COST = AMNT
Return 

FIXDCOSTCONV: CNVTA = B[3];CNVTU[0] = 0;CNVTU[1] = S2[0];CNVTU[2] = 2
	Gosub CONVERT \ B[3] = AMNT
Return 

CONVERT: Rem "====== unibasic 5+ logic
	If S2[3] = 1 Let AMNT = CNVTA \ return
	Call "MXPRCONV5.DL4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
	If FLAG Let E = FLAG \ error 11000
	AMNT = CNVTA
Return 


GET_PRNTR: Rem CHECK PRINTER TYPE
	F=0
	try
		N = Chf(0)
	else
		F = Spc(8)
	end try
	L8 = 60;SCRN = 0
	If F Let L8 = 22;SCRN = 1
	IF F
		e$ = "Browswer output not supported."
		error 10000
	else
		Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
	end if
Return 

CALCCOST: Rem CALC LOADS FROM LOAD MARKUP
	If P9$[32,32] = "Y" And WHSE > 0
		If WHLM[0]
			WH = WHSE;LTBL = WHLM[0];CNVTA = 0
			Gosub L_8405 \ If R[3] > 0 Let W3[17] = CNVTA;B[8] = CNVTA
		End If 
		If WHLM[1]
			WH = WHSE;LTBL = WHLM[1];CNVTA = 0
			Gosub L_8405 \ If R[3] > 0 Let W3[14] = CNVTA;PF_LOAD2 = CNVTA
		End If 
	Else 
		If LM[0]
			WH = 0;LTBL = LM[0];CNVTA = 0
			Gosub L_8405 \ If R[3] > 0 Let B[8] = CNVTA
		End If 
		If LM[1]
			WH = 0;LTBL = LM[1];CNVTA = 0
			Gosub L_8405 \ If R[3] > 0 Let PF_LOAD2 = CNVTA
		End If 
	End If 
Return 

L_8405: Rem CALL
	OTYPE = 1
	Call "MXLOAD5.DL4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 

SETWHSEINFO: Rem ===== check/set warehouse with valid data
	If P9$[32,32] = "Y" ! "warehouse pricing turned on
		X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
		If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
		For X2 = 20 To 25
			If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
		Next X2
		If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
		If Not(W3[17]) Let W3[17] = B[8]
		If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
		If Not(W3[14]) Let W3[14] = PF_LOAD2
		If Not(W3[15]) Let W3[15] = B[21]
		If Not(W3[16]) Let W3[16] = B[10]
		If Not(W3[18]) Let W3[18] = C4[4]
		If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
		If WHPARC[0] Let B[22] = WHPARC[0]
		If Not(W2[3]) Let W2[3] = B[24]
	End If 
Return 


OUTEND: Rem EXIT
Close 
Stop 
End

else ! main try
	include "src/callmainerrnet.inc"
end try
