Rem AVA.QGETTAXOUT
!
! loadsave -w -n 100,10 -o prog/dxport/ava.qgettaxout.dl4 src/ava.qgettaxout.src
!
Rem  Copyright (c) 2016 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
include "src/copyright.inc" ! dx
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus

Declare Intrinsic Sub DateToJulian,FindF,FormatDate,InpBuf,String,Time,VerifyDate
Declare Intrinsic Function FindChannel
! Option Default Dialect IRIS1
Rem AVA.QGETTAXOUT - CREATE A FILE FROM 1 QUOTE
Rem 53250
Rem Called program
Rem WILL HANDLE MIXED POSITIVE/NEGATIVE LINES!!!
Rem Per avalara: Credits SEND NEGATIVE VALUES!!! - SEND NO "&"'s !!!?
Rem  IF template txt file changed/added CHECK/CHANGE THIS PROGRAM
Rem text file for template: txt/ava.gettax.xmlo
Rem file for storing order & ava transid: 7/AVAQTETRANS#
Rem file sent: YYYYMMDDHHMMSSOOOOOO.pl
If Err 0 Gosub ERR_TRAP
Enter ORDREC,CCHAN[],Intco,rstr$
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim WRKLINE$[500],TMPLINE$[500],VAR$[10],WORK$[5000],TEMP$[500]
Dim FLE$[90],RETVAL$[512],AVAACCTNO$[20],AVALCKEY$[16],DIRTO$[64]
Dim AVAOID$[20],S1$[118],S2$[20],A1$[142],A2$[30],A3$[22],L1$[20]
Dim L$[60],N2$[118],P0$[20],PDESC$[60],CUSTOM_CUSTOMER$[30],AVAUDA2$[20]
Dim S3$[33],K1$[64],K2$[64],K3$[64],K4$[64],XMLFLE$[60],TMPFLE$[60]
Dim X$[20],VARNM$[40],AVAPC$[20],LOGFNM$[40],SPACES$[200],TEXNO$[20]
Dim TAXDESC$[20],TAXTDESC$[36],INXMLFLE$[60],UDA$[20],PMCN$[30]
Dim LV1$[500],LV2$[500],LV3$[500],LV4$[500],LV5$[500],LV6$[500]
Dim LV7$[500],LV8$[500],LV9$[500],LV10$[500],LV11$[500],LV12$[500] ! variables to hold repeating line data
Dim 1%,X,X1[9],COID,CH_CNTRL,CH_CUST,CH_ROL,CH_ROS,CH_ROT,CH_ROL,CH_TMPL
Dim 1%,L3[3],S2[1],H4[2],TCB,CH_ROH,CH_TAX,POS0,POS1,POS2,POS3,CH_DTL,CH_PROD
Dim 1%,CH_AVATRNS,TTLLNS,LDLN,LNNO,SCR,STTAXE,CREDIT,CH_TAXT,FLESENTO
Dim 2%,X2[9],H0[12],MCODE[9],L4[3],L6[5],H6[8],JDATE[5]
Dim 3%,X3[9],SRN[5],T2[25],MCHARGE[9,1],L5[3],L7[12]
Dim 3%,ROSREC,ROTREC,ROLREC,OREF[5],R[99],PMOHC,E,H
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim WebStr$[256],msg$[100],message$[300] ! ,RSTR$[500]
SPACES$ = " ",SPACES$
FLESENTO = 0 ! no file sent
If ORDREC <= 0 Goto OUTEND
returnstatus=1;message$="OK"
COID = Intco
CH_CNTRL = 1
If Err 0 Let X2 = Spc(8)
X2 = 0
X3 = Chf(CH_CNTRL)
If Err 0 Gosub ERR_TRAP
If X2 ! cntrl not open
  Open #1,"cntrl/cntrl" + Str$(COID)
End If 
If CCHAN[1] <= 0 ! No cust
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[1] = CHNL
  Read #CH_CNTRL,88,1808;FLE$[1,16];
  Ropen #CCHAN[1],FLE$
  CCHAN[1] = 0 - CCHAN[1] ! "show we opened
End If 
CH_CUST = Abs(CCHAN[1])
If CCHAN[2] <= 0 ! no roh
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[2] = CHNL
  Read #CH_CNTRL,88,1280;FLE$[1,16];
  Open #CCHAN[2],FLE$
  CCHAN[2] = 0 - CCHAN[2] ! "show we opened
End If 
CH_ROH = Abs(CCHAN[2])
If CCHAN[3] <= 0 ! no ros
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[3] = CHNL
  Read #CH_CNTRL,88,1392;FLE$[1,16];
  Open #CCHAN[3],FLE$
  CCHAN[3] = 0 - CCHAN[3] ! "show we opened
End If 
CH_ROS = Abs(CCHAN[3])
If CCHAN[4] <= 0 ! no rot
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[4] = CHNL
  Read #CH_CNTRL,88,2656;FLE$[1,16];
  Open #CCHAN[4],FLE$
  CCHAN[4] = 0 - CCHAN[4] ! "show we opened
End If 
CH_ROT = Abs(CCHAN[4])
If CCHAN[5] <= 0 ! no rol
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[5] = CHNL
  Read #CH_CNTRL,88,1344;FLE$[1,16];
  Ropen #CCHAN[5],FLE$
  CCHAN[5] = 0 - CCHAN[5] ! "show we opened
End If 
CH_ROL = Abs(CCHAN[5])
If CCHAN[6] <= 0 ! no TAX
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[6] = CHNL
  Read #CH_CNTRL,88,2176;FLE$[1,16];
  Ropen #CCHAN[6],FLE$
  CCHAN[6] = 0 - CCHAN[6] ! "show we opened
End If 
CH_TAX = Abs(CCHAN[6])
If CCHAN[7] <= 0 ! no TAXTYPE
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[7] = CHNL
  Read #CH_CNTRL,88,928;FLE$[1,16];
  Ropen #CCHAN[7],FLE$
  CCHAN[7] = 0 - CCHAN[7] ! "show we opened
End If 
CH_TAXT = Abs(CCHAN[7])
If CCHAN[8] <= 0 ! no SPROD
  CHNL = 97 \ Gosub GETCHAN
  If CHNL > 1 Let CCHAN[8] = CHNL
  Read #CH_CNTRL,88,1792;FLE$[1,16];
  Ropen #CCHAN[8],FLE$
  CCHAN[8] = 0 - CCHAN[8] ! "show we opened
End If 
CH_PROD = Abs(CCHAN[8])
CHNL = 97 \ Gosub GETCHAN
If CHNL > 1 Let CH_WHI = CHNL
Read #CH_CNTRL,88,2768;FLE$[1,16];
Ropen #CH_WHI,FLE$ ! just open the whinfo file!!
! add nonstock for new uda fields
CH_Nstk=FindChannel()
read #ch_cntrl,88,1424;fle$[1,16];
ROpen #ch_nstk,fle$
! and close it at the end!
mat read #ch_cntrl,115,60;custom_customer$;
CUSTOM_CUSTOMER$=UCASE$(TRIM$(CUSTOM_CUSTOMER$))
Read #CH_CNTRL,3,0;PMCN$; ! company name
if custom_customer$="PIEDMONT" ! we MUST MAKE NAME WHAT AVALARA EXPECTS?! (25 Max)
	PMCN$="Piedmont 7040"
endif
If custom_customer$="WENELSON"
	if coid=1 let PMCN$="PDX" ! "Nelson Portland"
	if coid=3 let PMCN$="SPKN" ! spokane
	if coid=5 let PMCN$="SEA" ! seattle
Endif
CHNL = 97 \ Gosub GETCHAN
If Err 0 Gosub ERR_TRAP ! getchan changes to err_escape:?
If CHNL > 1 ! valid channel
  Call "progdflt","AVA","",CHNL,RETVAL$
  If RETVAL$[1,5] = "@@@@@" Let RETVAL$ = " ",RETVAL$
  AVAACCTNO$ = RETVAL$[1,20] ! "customer id
  AVALCKEY$ = RETVAL$[21,36] ! "licensekey
  DIRTO$ = RETVAL$[37,101] ! "send file to
  LOGFNM$ = RETVAL$[102,139] ! "log file name
Else ! "NO DEFAULTS!?
  returnstatus=0;message$="NO DEFAULTS DEFINED!"
  !Signal 3,30
  Goto OUTDONE
End If 
AVAACCTNO$=Trim$(AVAACCTNO$)
AVALCKEY$=Trim$(AVALCKEY$)
DIRTO$=Trim$(DIRTO$)
PMCN$=Trim$(PMCN$)
If AVAACCTNO$ = "" Or DIRTO$ = "" ! "NEED THESE!! Or avaDPC$="" OR
  returnstatus=0;message$="MISSING DEFAULT VALUES!"
  ! Signal 3,30
  Goto OUTDONE
End If 
LOGFNM$=Trim$(LCASE$(LOGFNM$))
If LOGFNM$ = "" ! no name defined - hardcode default name
  LOGFNM$ = "files/1/avataxout.log"
Else ! see if set for dl4
  IF Logfnm$[1,1]<>"/" and LOGFNM$[1,6]<>"files/" ! NEEDS THIS ON DL4!!
	TEMP$="files/"+logfnm$
	logfnm$=temp$ ! MUST START WITH files/ if to a directory!
  Endif
End If 
If DIRTO$ = "" Or DIRTO$[1,10] = SPACES$[1,10] Let DIRTO$ = "/tmp/" ! SEND IT SOMEWHERE!
FLE$ = "txt/ava.gettax.xmlo" ! ava name = gettax
Call FindF(FLE$,H)
If Not(H)
  returnstatus=0;message$="TEMPLATE FILE NOT FOUND"
  !Signal 3,30
  Goto OUTDONE
End If 
CHNL = 97 \ Gosub GETCHAN
If Err 0 Gosub ERR_TRAP ! getchan changes to err_escape:?
If CHNL > 1 ! valid
  CH_TMPL = CHNL
  Open #CH_TMPL,FLE$
Else 
  returnstatus=0;message$="TEMPLATE FILE NOT OPENED"
  !Signal 3,30
  Goto OUTDONE
End If 
FLE$ = "7/AVAQTETRANS" + Str$(COID) ! orders=AVAORDTRANS
CHNL = 97 \ Gosub GETCHAN
If Err 0 Gosub ERR_TRAP ! getchan changes to err_escape:?
Call FindF(FLE$,H)
If Not(H) ! not found - build
  WORK$ = "[1:256] " + FLE$
  Build #CHNL,WORK$
  R = 15;E = 0
  Search #CHNL,0,1;K1$,R,E \ If E Gosub ERR_SEARCH ! "dir 1 - store order&tids (active)
  R = 15;E = 0
  Search #CHNL,0,2;K1$,R,E \ If E Gosub ERR_SEARCH ! "dir 2 - stores abandoned TIDs
  R = 1
  Search #CHNL,0,0;K1$,R,E \ If E Gosub ERR_SEARCH
  Close #CHNL ! so can reopen
End If 
If CHNL > 1 ! valid
  CH_AVATRNS = CHNL
  Open #CH_AVATRNS,FLE$
Else 
  returnstatus=0;message$="TRANSACTION FILE NOT OPENED"
  ! Signal 3,30
  Goto OUTDONE
End If 
JDATE[0] = Tim(6) ! today in julian
Mat Read #CH_ROH,ORDREC,0;H0;
Mat Read #CH_ROH,ORDREC,78;H4;
Mat Read #CH_ROH,ORDREC,408;H6;
Mat Read #CH_ROH,ORDREC,446;P0$;
Mat Read #CH_ROH,ORDREC,512;OREF;
Read #CH_TAX,H4[0],412;TCB;
If TCB <> 2 Goto OUTDONE ! NOT ava TAX CALC!
CREDIT = 0;INVOICE = 0
If H0[0] >= 9 And H0[0] <= 12 Let CREDIT = 1
If H0[0] >= 5 And H0[0] <= 7 Let INVOICE = 1
If H0[0] = 58 Or H0[0] = 59 Let INVOICE = 1
If H0[0] >= 90 ! in process/edit/etc
  If H6[2] >= 9 And H6[2] <= 12 Let CREDIT = 1
  If H6[2] >= 5 And H6[2] <= 7 Let INVOICE = 1
  If H6[2] = 58 Or H6[2] = 59 Let INVOICE = 1
End If 
STTAXE = 0
Mat Read #CH_TAX,H4[0],0;TAXDESC$;
Call String(1,TAXDESC$)
POS0 = 1;POS1 = 0
Search TAXDESC$[POS0],"EXEMPT",POS1
If POS1 Let STTAXE = 1 ! "in case customer has no tax exempt No
WHREC = H4[2] - 1 ! as that's what they programmed!
Mat Read #CH_WHI,WHREC,4;N2$; ! name, etc
ROSREC = H0[2]
ROTREC = H0[3]
Mat Read #CH_ROS,ROSREC,8;S1$;
Mat Read #CH_ROS,ROSREC,126;S2$;
Mat Read #CH_ROS,ROSREC,154;SRN;
Mat Read #CH_ROT,ROTREC,8;T2;
Mat Read #CH_ROT,ROTREC,168;MCODE;
Mat Read #CH_ROT,ROTREC,208;MCHARGE;
If T2[1] < 0 Let CREDIT = 1 ! AVA wants NEGATIVE QUANTITIES FOR CMs!!!
If SRN[4] > 0 And SRN[4] < Chf(CH_TAXT)
  STTAXE = 0 ! SRN[4] holds what mx2??a got - mxline uses A0[3]???
  Mat Read #CH_TAXT,SRN[4],0;TAXTDESC$;
Else 
  TAXTDESC$ = " ",TAXTDESC$
End If 
Call String(1,TAXTDESC$)
POS0 = 1;POS1 = 0
Search TAXTDESC$[POS0],"EXEMPT",POS1
If POS1 Let STTAXE = 1 ! "in case customer has no tax exempt No
K1$ = " ",K1$;K1$ = H0[4] Using "######"
Search #CH_CUST,2,1;K1$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto OUTDONE ! NO CUST - NO SEND
Mat Read #CH_CUST,R[2],0;A1$;
Mat Read #CH_CUST,R[2],348;A2$;
Mat Read #CH_CUST,R[2],388;A3$;
AVAOID$ = " ",AVAOID$ ! ava trans id
K2$ = " ",K2$;K2$ = H0[7] Using "######"
Search #CH_AVATRNS,2,1;K2$,R,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) ! found it - get trans
  AVAOID$ = K2$[7]
End If 
If E ! do for all ! was and Credit ! see if unused tids from previous credits
  K2$ = " ",K2$
SRCH4PTID: Rem
  Search #CH_AVATRNS,3,2;K2$,R,E \ If E > 2 Gosub ERR_SEARCH
  If Not(E) And (K2$[1,1] = "" Or K2$[1,4] = "    ") ! get rid of blanks!
    Search #CH_AVATRNS,5,2;K2$,R,E \ If E Gosub ERR_SEARCH ! remove it
    Goto SRCH4PTID ! see if more
  End If 
  If Not(E) And K2$[1,1] <> "" And K2$[1,4] <> "    " ! got one
    AVAOID$ = K2$
    Search #CH_AVATRNS,5,2;K2$,R,E \ If E Gosub ERR_SEARCH ! remove it & use it
  End If 
End If 
AVAOID$=Trim$(AVAOID$)
If AVAOID$ = "" Let AVAOID$ = " "
K3$ = " ",K3$;K3$[1,6] = H0[7] Using "######"
TTLLNS = 0
TOTNOLINES: Rem tot lines
Search #CH_ROL,3,1;K3$,R[3],E \ If E = 2 Goto TTLLDONE
If E Gosub ERR_SEARCH
X2 = K3$[1,6] \ If X2 <> H0[7] Goto TTLLDONE
Mat Read #CH_ROL,R[3],32;L5;
Mat Read #CH_ROL,R[3],168;L7;
Mat Read #CH_ROL,R[3],256;S2;
If L7[4] = 0 Goto TOTNOLINES ! zero ship (zero extens allowed)
If S2[0] = 3 Goto TOTNOLINES ! message line (just in case)
TTLLNS = TTLLNS + 1
Goto TOTNOLINES
TTLLDONE: Rem finished
PMOHC = 0 ! "pm order handling charge (Per Chuck - Misc & Other)
If T2[4] <> 0 ! add misc
  PMOHC = PMOHC + T2[4]
End If 
If T2[5]<>0 ! ADD FRGT NOW
	PMOHC=PMOHC+T2[5]
Endif
If T2[6] <> 0 ! add handling
  PMOHC = PMOHC + T2[6]
End If
! Per MVM - ALWAYS CLEAR TAX $
let t2[7]=0 ! CLEAR TAX!!
Mat Write #CH_ROT,ROTREC,8;T2;
let gettax=9
if ttllns=0 and pmohc=0 ! no lines or misc charges
	let t2[7]=0 ! CLEAR TAX!!
	Mat Write #CH_ROT,ROTREC,8;T2;
	let gettax=0 ! NO TAX TO GET
	Goto Orddone ! bypass - as Avalara will return ERROR!
Endif 
TEXNO$ = "" ! tax exempt no (Set up Later)
TEMP$ = "" \ Call Time(TEMP$) ! get todays info
WORK$ = TEMP$[1,13] ! just the MMM dd, yyyy
X1 = 5 ! need yyyymmdd
Call VerifyDate(WORK$,X$,E,X1)
WORK$ = X$[1,8] ! yyyymmdd
WORK$[9] = Tim(11) Using "&&" ! hour
WORK$[11] = Tim(12) Using "&&" ! minute
WORK$[13] = Tim(13) Using "&&" ! second
WORK$[15] = H0[7] Using "&&&&&&" ! order
XMLFLE$ = WORK$ + ".pl" ! final file name (PERL Script)
INXMLFLE$ = WORK$ + "in.txt"
TMPFLE$ = "/tmp/" + WORK$[1,14] + Spc(6) Using "&&&&" ! temp(detail)=/tmp/YYYYMMDDHHMMSSPPPP
CHNL = 90 \ Gosub GETCHAN
If Err 0 Gosub ERR_TRAP ! getchan changes to err_escape:?
CH_DTL = CHNL
Build #CH_DTL, + TMPFLE$ + "!"
TEMPLT_LOOP: Rem read until detail done
WRKLINE$ = ""
Gosub READ_TEMPLATE
If WRKLINE$ = "" Goto ORDDONE
If WRKLINE$[1,6] = "DOHEAD" Goto ORDDONE ! finished detail marker (ADDED MANUALLY TO FILE!)
if varnm$="LNNOS" and wrkline$[1,10]="<ns1:Line>" goto chk4line ! (WE NEED TEMPLATE LINES)
Gosub PARS_LINE
If Not(POS1) ! no variable
  Print #CH_DTL;WRKLINE$
Else ! need to insert a variable
  If VARNM$ <> "LNNOS" And VARNM$ <> "FRLNNO" ! "don't send line detail here or now
    If VARNM$ = "LNNOS" Or VARNM$ = "FRLNNO" ! "No line detail to send
      Rem DO NOTHING
    Else 
      Print #CH_DTL;WRKLINE$[1,POS1 - 1]; ! send beginning string
    End If 
  End If 
  If VARNM$ = "ACCOUNTID" ! trans id
    Print #CH_DTL;AVAACCTNO$;
  End If 
  If VARNM$ = "AVAPWID" ! license key
    Print #CH_DTL;AVALCKEY$;
  End If 
  If VARNM$ = "AVACLIENT" !
    Print #CH_DTL;"ubs connector ver. 1.1";
  End If 
  If VARNM$ = "AVAADAPTER" !
    Print #CH_DTL;"ver. 1.1";
  End If 
  If VARNM$ = "AVADEVNAME" !
    Print #CH_DTL;"ubs connector ver. 1.1";
  End If 
  If VARNM$ = "PMDATE" ! "on credits - send date
    X2 = H0[10]
    If CREDIT Let X2 = H0[9]
    If INVOICE Let X2 = H0[8]
    X$ = X2 Using "&&&&&&" ! NEED A DATE CHECK (causes ava Hang if no good)
    Call DateToJulian(1,X$,X$,E) \ If E Let X$ = "0"
    JDATE[1] = X$ ! ship date julian
    JDATE[2] = JDATE[0] - JDATE[1] ! diff between today & Shipdate
    If JDATE[2] < 0 Or JDATE[2] > 400 ! future or >1 yr is NO GOOD
      X$ = XMLFLE$[3,8] ! from file name yyyymmdd drop the 1st 2 yy(20)
      X2 = X$[1,6] ! just the yymmdd part
    End If 
    X$ = X2 Using "&&&&&&" ! x2 is either ship or corrected date
    X1 = 4
    Call FormatDate(X$,X$,E,X1) ! "try from yymmdd to mm/dd/yyyy
    WORK$ = X$[7,10] + "-" + X$[1,2] + "-" + X$[4,5] !  +"T11:14:37"
    Print #CH_DTL;WORK$; ! " X$;
  End If 
  If VARNM$ = "PMUCODE" ! company name
    Print #CH_DTL;PMCN$;
  End If 
  If VARNM$ = "AVAOID" ! trans id
    Print #CH_DTL;AVAOID$;
  End If 
  If VARNM$ = "PMTYPE" ! avalara doc type
    TEMP$ = "SalesOrder"
    !If INVOICE Let TEMP$ = "SalesInvoice"
    !If CREDIT Let TEMP$ = "ReturnInvoice"
    Print #CH_DTL;TEMP$; !! avaDPC$;
  End If 
  If VARNM$ = "PMOHC" ! pm handling ! sent as order line (freight) for ava
    X$ = Abs(PMOHC) Using "-------#.##"
    x$=LTrim$(X$)
    Print #CH_DTL;X$;
  End If 
  If VARNM$ = "PMCUST" ! Ordering Cust ID
    Print #CH_DTL;Str$(H0[4]); !
  End If 
  If VARNM$ = "PMORDNO" ! PM trans id (order #)
    X$ = H0[7] Using "######"
    !If H0[5] Let X$ = X$ + "-" + Str$(H0[5]) ! need 1 time # so add backorders?
	X$=X$+"Q" ! so ALWAYS DIFFERENT THAN ORDER!!
    x$=LTrim$(X$)
    Print #CH_DTL;X$;
  End If 
  If VARNM$ = "PMINVNO" ! pm inv no
    !If INVOICE Or CREDIT
    !  Print #CH_DTL;Str$(OREF[1]);
    !Else ! not on orders!
      Print #CH_DTL;" ";
    !End If 
  End If 
  If VARNM$ = "PMCPONO" ! pm cust po no
    TEMP$ = P0$
    TEMP$=Trim$(TEMP$)
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMDISC" ! discount charge
    X$ = Abs(T2[3]) Using "-------#.##"
    x$=LTrim$(X$)
    Print #CH_DTL;X$;
  End If 
  If VARNM$ = "PMTX" ! tax exempt no
    TEMP$ = A2$[11,28]
    TEMP$=Trim$(TEMP$)
    If TEMP$ = "" And STTAXE ! none for Cust but code says exempt
      TEMP$ = "EXEMPT"
    End If 
    Print #CH_DTL;TEMP$;
    TEXNO$ = TEMP$
  End If 
  If VARNM$ = "PMTAXI" ! tax exempt Issuer
    If TEXNO$ <> "" ! has tax no - send customer state
      If TEXNO$ <> "EXEMPT"
        X$ = A1$[136,137]
        If X$ = "" Or X$[1,2] = "  " Let X$ = S1$[106,107]
        Print #CH_DTL;X$;
      End If 
      If TEXNO$ = "EXEMPT" ! ship to state needed
        X$ = S1$[106,107] ! from ship to
        If X$[1,1] = "" Or X$[1,2] = "  " Let X$ = A1$[136,137]
        x$=Trim$(X$)
        Print #CH_DTL;X$;
      End If 
    Else 
      Print #CH_DTL;"  ";
    End If 
  End If 
  If VARNM$ = "PMTAXR" ! tax exempt reason
    If TEXNO$ <> "" ! has tax no - send reason
      Print #CH_DTL;"010"; ! "ava reason 010 Sales to Tax Exempt Certificate Holder
    Else 
      Print #CH_DTL;"  ";
    End If 
  End If 
  If VARNM$ = "PMORDTTL" ! order total  NOT USED AVA
    ! LET T2[0]=T2[1]-T2[3]+T2[4]+T2[5]+T2[6]+T2[7] ! "grand total
    X3 = T2[1] + pmohc ! + T2[5] + PMOHC
    Rem Let X$=X3 Using "-------#.##" ! NO TOTAL SENT IF LINES ARE SENT(ava)
    X$ = "0" ! no total for order if lines sent
    x$=LTrim$(X$)
    Print #CH_DTL;X$;
  End If 
  If VARNM$ = "PNCADDR1" ! ship from addr 1
    TEMP$ = N2$[31,60] ! Ship from
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A1$[61,90]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! name field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PNCADDR2" ! ship from addr 2
    TEMP$ = N2$[61,90] ! Ship from
    ! If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A1$[91,120]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! name field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PNCCITY" ! ship FROM city
    TEMP$ = N2$[91,105] ! ship from
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A1$[121,135] ! none-use cust
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PNCZIP" ! ship from zip
    TEMP$ = N2$[108,117] !  ship from
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A2$[1,10]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PNCST" ! ship from state
    TEMP$ = N2$[106,107] !  ship from
    If TEMP$[1,1] = "" Or TEMP$[1,2] = "  " Let TEMP$ = A1$[136,137]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMSCITY" ! ship to city
    TEMP$ = S1$[91,105] ! ship to
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A1$[121,135] ! none-use cust
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMSCTRY" ! ship to country
    TEMP$ = S2$[1,15] ! from ship to
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A3$[7,21]
    Temp$=Trim$(TEMP$)
    X2 = TEMP$ \ If X2 <> 0 Let TEMP$ = "" ! won't be any numbered countries!
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMSZIP" ! ship to zip
    TEMP$ = S1$[108,117] ! from ship to
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A2$[1,10]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMSST" ! ship to state
    TEMP$ = S1$[106,107] ! from ship to
    If TEMP$[1,1] = "" Or TEMP$[1,2] = "  " Let TEMP$ = A1$[136,137]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMSADD1" ! ship to address 1
    TEMP$ = S1$[31,60] ! from ship to
    If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A1$[61,90]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "PMSADD2" ! ship to address 2
    TEMP$ = S1$[61,90] ! from ship to
    ! If TEMP$[1,1] = "" Or TEMP$[1,5] = "     " Let TEMP$ = A1$[91,120]
    Temp$=Trim$(TEMP$)
    WORK$ = TEMP$ ! field needs to be checked for and to..
    Gosub CHK4CHARS ! replace "invalid" characters
    TEMP$ = WORK$ ! replaced with space
    Print #CH_DTL;TEMP$;
  End If 
  If VARNM$ = "TTLLNS" ! total # lines
    Print #CH_DTL;Str$(TTLLNS); ! total # lines
  End If 
  If TTLLNS > 0 And VARNM$ = "LNNOS" ! needs to know what lines will follow & how many?
  End If 
  !If VARNM$ <> "LNNOS" ! no line detail yet!
    If VARNM$ = "LNNOS" ! "No line detail to send
      Rem DO NOTHING
    Else 
      If VARNM$ = "FRLNNO" And pmohc <> 0 ! has freight - send as a line!!
        Print #CH_DTL;"<ns1:Line>"
        Print #CH_DTL;"<ns1:No>";Str$(TTLLNS + 1);"</ns1:No>" ! 1 higher than last sent line
        Print #CH_DTL;"<ns1:OriginCode>0</ns1:OriginCode>"
        Print #CH_DTL;"<ns1:DestinationCode>1</ns1:DestinationCode>"
        Print #CH_DTL;"<ns1:ItemCode>FREIGHT</ns1:ItemCode>"
        Print #CH_DTL;"<ns1:TaxCode>FR</ns1:TaxCode>"
        Print #CH_DTL;"<ns1:Qty>1</ns1:Qty>"
		! LET T2[0]=T2[1]-T2[3]+T2[4]+T2[5]+T2[6]+T2[7] ! "grand total
        ! PMOHC = PMOHC + T2[5] ! also hdlg & misc!! already added!
		! pmohc=t2[4]+t2[5]+t2[6] ! (t2[3] sent separate)
        If CREDIT Let PMOHC = 0 - PMOHC ! rev sign on credits!
        TEMP$ = PMOHC Using "--------#.##"
        Temp$=LTrim$(TEMP$)
        Print #CH_DTL;"<ns1:Amount>";TEMP$;"</ns1:Amount>"
        Print #CH_DTL;"<ns1:Discounted>false</ns1:Discounted>"
        Print #CH_DTL;"<ns1:Description>Shipping Charge</ns1:Description>"
        Print #CH_DTL;"</ns1:Line>"
      Else 
        Print #CH_DTL;WRKLINE$[POS2 + 1] ! send remaining string
      End If ! frlnno
    End If ! =lnnos
  !End If ! of <>lnnos
  CHK4LINE: ! 
  POS0 = 1;POS3 = 0
  Search WRKLINE$[POS0],"<ns1:Line>",POS3 ! HAS TO BE HARDCODED TO LOOK FOR
  If POS3 ! LINES that repeat for every line sent
    LV1$ = WRKLINE$;LDLN = 1
RTLOOP2: Rem loop until last line for lines
    Gosub READ_TEMPLATE
    If WRKLINE$ = "" Goto ORDDTLDONE ! if we hit this the template is SCREWED UP!
    LDLN = LDLN + 1
    If LDLN = 2 Let LV2$ = WRKLINE$
    If LDLN = 3 Let LV3$ = WRKLINE$
    If LDLN = 4 Let LV4$ = WRKLINE$
    If LDLN = 5 Let LV5$ = WRKLINE$
    If LDLN = 6 Let LV6$ = WRKLINE$
    If LDLN = 7 Let LV7$ = WRKLINE$
    If LDLN = 8 Let LV8$ = WRKLINE$
    If LDLN = 9 Let LV9$ = WRKLINE$
    If LDLN = 10 Let LV10$ = WRKLINE$
    If LDLN = 11 Let LV11$ = WRKLINE$
	If LDLN = 12 Let LV12$ = WRKLINE$
    POS0 = 1;POS3 = 0
    Search WRKLINE$[POS0],"</ns1:Line>",POS3 ! HAS TO BE HARDCODED TO LOOK FOR
    If POS3 Goto ORDDTLDONE
    Goto RTLOOP2
ORDDTLDONE: Rem done with line save
    K4$ = " ",K4$;K4$[1,6] = H0[7] Using "######"
    LNNO = 1
ODLOOP: Rem order detail loop
    Search #CH_ROL,3,1;K4$,R[4],E \ If E = 2 Goto ORDLNDONE
    If E Gosub ERR_SEARCH
    X2 = K4$[1,6] \ If X2 <> H0[7] Goto ORDLNDONE
    Mat Read #CH_ROL,R[4],8;L3;
    Mat Read #CH_ROL,R[4],16;L4;
    Mat Read #CH_ROL,R[4],32;L5;
	Mat Read #CH_ROL,R[4],56;L6;
    Mat Read #CH_ROL,R[4],80;L$; ! desc!
    Mat Read #CH_ROL,R[4],140;L1$;
    Mat Read #CH_ROL,R[4],168;L7;
    Mat Read #CH_ROL,R[4],256;S2;
    Mat Read #CH_ROL,R[4],370;S3$;
    If L7[4] = 0 Goto ODLOOP ! zero qty ship DO NOT SEND NEG LINES!!
    If S2[0] = 3 Goto ODLOOP ! message line (just in case)
    If CREDIT ! need qty/extension as negative
      L7[4] = 0 - L7[4]
      L5[3] = 0 - L5[3]
    End If 
	clear avapc$ ! clear/null on every line!
	clear AVAUDA2$ ! uda # 2
    If L3[0] = 0 And L4[0] > 1 And L4[0] <= Chf(CH_PROD) - 1 ! piedmont loaded ava PCode in UDA 2(1st alpha uda)
      Mat Read #CH_PROD,L4[0],684;UDA$; ! uda2 which is 1st string uda field
      UDA$=Trim$(UDA$)
      If Len(UDA$) > 1 And Len(UDA$) <= 9 ! ava up to 8 digits
        AVAPC$ = UDA$ ! okay - send it
      End If 
	  ! also uses uda 2 now ! which is UDA 3 in 671/679
	  mat read #ch_prod,L4[0],704;uda$;
	  UDA$=Trim$(UDA$)
      If Len(UDA$) > 1 And Len(UDA$) <= 8 ! ava up to 8 digits
        AVAUDA2$ = UDA$ ! okay - send it
      End If 
    Else ! nonstock/bad record
      clear avapc$ ! ava prod code for the line item - blank=ord default (avadpc$)
	  clear AVAUDA2$ ! uda # 2
	  If L3[0] = 1 And L4[0] > 1 And L4[0] <= Chf(CH_NSTK) - 1
		  ! added uda's to sproddesc - so read 2 udas from there!
		  mat read #ch_nstk,L4[0],208;uda$;
		  UDA$=Trim$(UDA$)
		  If Len(UDA$) > 1 And Len(UDA$) <= 9 ! ava up to 9 digits
			AVAPC$ = UDA$ ! okay - send it
		  End If 
		  ! also uses uda 2 now ! which is UDA 3 in nonstk screen
		  mat read #ch_nstk,L4[0],238;uda$;
		  UDA$=Trim$(UDA$)
		  If Len(UDA$) > 1 And Len(UDA$) <= 8 ! ava up to 8 digits (normally 1 char?)
			AVAUDA2$ = UDA$ ! okay - send it
		  End If 
	  End if
    End If 
	! ADDED 04/2016 - if taxflag on line is 0/N - send Avalara "NT"
	if l6[5]=0 let AVAPC$="NT" ! that's what they say to send
	! nothing mentioned for uda2 - send as is
    For LDLN = 1 To 12 ! up to 12 line detail lines
      WRKLINE$ = ""
      If LDLN = 1 Let WRKLINE$ = LV1$
      If LDLN = 2 Let WRKLINE$ = LV2$
      If LDLN = 3 Let WRKLINE$ = LV3$
      If LDLN = 4 Let WRKLINE$ = LV4$
      If LDLN = 5 Let WRKLINE$ = LV5$
      If LDLN = 6 Let WRKLINE$ = LV6$
      If LDLN = 7 Let WRKLINE$ = LV7$
      If LDLN = 8 Let WRKLINE$ = LV8$
      If LDLN = 9 Let WRKLINE$ = LV9$
      If LDLN = 10 Let WRKLINE$ = LV10$
      If LDLN = 11 Let WRKLINE$ = LV11$
	  If LDLN = 12 Let WRKLINE$ = LV12$
      If Len(WRKLINE$) > 1
        Gosub PARS_LINE
        If POS1 ! has variable
          Print #CH_DTL;WRKLINE$[1,POS1 - 1]; ! send beginning string
          If VARNM$ = "LNNO" ! file line no
            Print #CH_DTL;Str$(L3[2]); ! line # on order
          End If 
          If VARNM$ = "PMDESC" ! order line desc
            TEMP$ = L$[1,30] ! first 30
            WORK$ = TEMP$ ! field needs to be checked for and to..
            Gosub CHK4CHARS ! replace "invalid" characters (&')
            TEMP$ = WORK$ ! replaced with 'valid'
            Temp$=Trim$(TEMP$)
            PDESC$ = TEMP$ + " "
            TEMP$ = L$[31,60] ! all 60
            WORK$ = TEMP$ ! field needs to be checked for and to..
            Gosub CHK4CHARS ! replace "invalid" characters (&')
            TEMP$ = WORK$ ! replaced with 'valid'
            Temp$=Trim$(TEMP$)
            PDESC$ = PDESC$ + TEMP$
            Print #CH_DTL;PDESC$; ! desc on order
          End If ! pmdesc
          If VARNM$ = "PMPRD" ! pm item code
            TEMP$ = L1$[1,12] ! ALWAYS THE ITEM CODE!!
            WORK$ = TEMP$ ! field needs to be checked for and to..
            Gosub CHK4CHARS ! replace "invalid" characters (&')
            TEMP$ = WORK$ ! replaced with 'valid'
            Temp$=Trim$(TEMP$)
            Print #CH_DTL;TEMP$;
          End If 
          If VARNM$ = "PMOQTY" ! PM ship qty (INTEGER ONLY! SO BASE U/M)
            X3 = L7[4] ! allow zero extens - but no zero qty
            Print #CH_DTL;Str$(X3);
          End If 
          If VARNM$ = "PMEPRC" ! extended price
            TEMP$ = L5[3] Using "--------#.##"
            Temp$=LTrim$(TEMP$)
            Print #CH_DTL;TEMP$;
          End If 
          If VARNM$ = "AVATX" ! ava tax code
            Print #CH_DTL;AVAPC$;
          End If 
		  IF VARNM$="AVACUDA" ! another Avalara field from UDA
			Print #ch_Dtl;AVAUDA2$;
		  endif
          Print #CH_DTL;WRKLINE$[POS2 + 1] ! send remaining string
        Else ! no variable
          Print #CH_DTL;WRKLINE$
        End If ! var or not
      End If ! of string exists for variable
    Next LDLN
    TTLLNS = L3[2] ! last line sent (for frt)
    Goto ODLOOP
ORDLNDONE: Rem line detail done
  End If ! of line item detail send
End If ! of varnm$ or not
Goto TEMPLT_LOOP
READ_TEMPLATE: Rem read (needs any processing?)
Read #CH_TMPL;WRKLINE$;
STRPCCHAR: Rem "remove cr/lf etc
If Len(WRKLINE$) > 1 
  if WRKLINE$[Len(WRKLINE$)] < " "
	WRKLINE$[Len(WRKLINE$)] = "" ! Strip control chars
	Goto STRPCCHAR
  Endif
End If 
Return 
PARS_LINE: Rem See if line holds variables
VARNM$ = " ",VARNM$
POS0 = 1;POS1 = 0;POS2 = 0
Search WRKLINE$[POS0],"~",POS1
If Not(POS1) Return ! none there
Let VARNM$ = WRKLINE$[POS1 + 1] To "~" : POS2 ! variable now has ~name~
VARNM$ = WRKLINE$[POS1 + 1,POS2 - 1] ! trim the ~'s
Call String(1,VARNM$) ! make sure UPPERCASE
Return 
CHK4CHARS: Rem ava considers certain characters "invalid"
If WORK$ = "" Return ! "no need to check as there's NOTHING THERE
For X = 1 To Len(WORK$)
  If WORK$[X,X] = "&" Let WORK$[X,X] = "+"
  If WORK$[X,X] = "'" Let WORK$[X,X] = "`" ! perl doesn't like ' (single quote)
Next X
Return 
ORDDONE: Rem detail done, now header
if gettax=0 goto OUTDONE ! There are no details to send! - just leave 
Close #CH_DTL ! close detail
WORK$ = TMPFLE$ + "H!" ! name =/tmp/YYYYMMDDHHMMSSPPPPH (same as dtl with H appended)
Build #CH_DTL, + WORK$ ! build the temp header file
HDR_LOOP: Rem rest is header
WRKLINE$ = ""
Gosub READ_TEMPLATE
If WRKLINE$ = "" Goto FINFILE
If WRKLINE$[1,6] = "DOHEAD" Goto HDR_LOOP ! place holder (not part of send file)
Gosub PARS_LINE ! see if any needed data
If POS1 ! yes data needed
  Print #CH_DTL;WRKLINE$[1,POS1 - 1]; ! send beginning string
  If VARNM$ = "LENGTH" ! "get byte count of detail file
    WORK$ = "wc -c " + TMPFLE$ + " > /tmp/WC" + Str$(H0[7]) + Str$(Spc(6))
    System WORK$,X2
    If Not(X2) ! no errors
      WORK$ = "/tmp/WC" + Str$(H0[7]) + Str$(Spc(6)) ! file sent to above
      If Err 0 Rem
      Close #76
      If Err 0 Gosub ERR_TRAP
      Open #76,WORK$
      TEMP$ = "";X3 = 0
WCR_LOOP: Rem if loop needed
      Read #76;TEMP$;
      If TEMP$ <> "" ! hopefully one line w/no blank start/end
        X3 = TEMP$ ! get any number before the file name
      End If 
      Close #76
      Kill WORK$ ! clean up temp wc file
      Print #CH_DTL;Str$(X3);
    End If 
  End If 
  Print #CH_DTL;WRKLINE$[POS2 + 1] ! send remaining string
Else ! JUST SEND whole line - nothing user changeable
  Print #CH_DTL;WRKLINE$
End If 
Goto HDR_LOOP
FINFILE: Rem now add the xml detail
Print #CH_DTL;"" ! Skip a line (insert a blank line after header
Close #CH_DTL ! close header file
X2 = 0;X3 = 0 ! error = none
X$ = "\\" ! get rid of backslash
WORK$ = "tr -d '" + X$ + "000' < " + TMPFLE$ + "H > " + DIRTO$ + XMLFLE$ ! hdr to final
System WORK$,X2
WORK$ = "tr -d '" + X$ + "000' < " + TMPFLE$ + " >> " + DIRTO$ + XMLFLE$ ! detail append to final
System WORK$,X3
If X2 Or X3 ! unix reported errors
  returnstatus=0;message$="ERROR REPORTED ON FILE COMPILATION"
  call programdump("tmp/gettaxue!","")
End If 
DELPTRNS: Rem delete any/all entries for this order
K1$ = " ",K1$;K1$ = H0[7] Using "######"
Search #CH_AVATRNS,2,1;K1$,R,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) ! found previous DELETE IT! (to prevent old or bad info accumulation)
  Search #CH_AVATRNS,5,1;K1$,R,E \ If E Gosub ERR_SEARCH
  Goto DELPTRNS
End If 
K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
K1$[7] = SPACES$[1,20];R = ORDREC ! ALWAYS SHOW SEND OUT AS NO TID (this way can see if receive back!)
Search #CH_AVATRNS,4,1;K1$,R,E \ If E > 1 Gosub ERR_SEARCH ! "ALLOW DUPE!!
WORK$ = TMPFLE$ + "H"
If Err 0 Rem
Kill WORK$ ! remove temp header
Kill TMPFLE$ ! remove temp detail
If Err 0 Gosub ERR_TRAP
ORDFINISH: Rem finish
!If Not(CREDIT) Print @0,23;'CL';"ORDER "; Else Print @0,23;'CL';"CREDIT ";
!Print Using "######";H0[7];" ";
!Print "FILE CREATED. ";
!If X2 Or X3 Print "UNIX FILE ERROR"; Else Print "NO PROBLEMS";
!If X2 Or X3 Signal 3,20 ! ONLY PAUSE IF PROBLEM
Close #CH_TMPL
Close #CH_AVATRNS
If Not(CREDIT) Let TEMP$ = "QUOTE: " + H0[7] Using "######"
!If CREDIT Let TEMP$ = "CREDIT: " + H0[7] Using "######"
TEMP$ = TEMP$ + "  " + Msc$(3) ! +"\215\"
TEMP$ = TEMP$ + " avaTID: " + AVAOID$
If Not(X2) And Not(X3) Let TEMP$ = TEMP$ + " FILE IS: " + DIRTO$ + XMLFLE$
If X2 Or X3 Let TEMP$ = TEMP$ + " UNIX ERROR: " + Str$(X2) + " :Headfile  " + Str$(X3) + " :Detlfile "
WORK$ = "echo " + TEMP$ + " >> " + LOGFNM$ ! append to logfile
System WORK$
If Not(X2) And Not(X3) ! "no errors on file create
  WORK$ = "chmod +x " + DIRTO$ + XMLFLE$
  System WORK$,X1 ! need to make it executable
  ! Print @0,22;'CL';"SENDING FILE NOW";
  WORK$ = DIRTO$ + XMLFLE$ + " " + DIRTO$ + INXMLFLE$
  System WORK$ ! "execute - results to inxmlfle$
  FLESENTO = 1
End If 
OUTDONE: Rem finished or major required file/data missing
If Err 0 Rem
For X = 1 To 10
  If CCHAN[X] <= 0 ! we opened
    X1 = Abs(CCHAN[X]) ! stored as 0-chan
    If X1 > 0 Close #X1
  End If 
Next X
Close #CH_WHI
Close #ch_nstk
If Err 0 Gosub ERR_TRAP
OUTEND: Rem outta here
If FLESENTO And H0[7] ! we sent a file so call read program?
  WORK$ = DIRTO$ + INXMLFLE$
  Call "ava.qxmlfle.in.dl4",H0[7],WORK$,intco,rstr$ ! send order & response in file
End If 
End 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
CHNL=FindChannel()
Return 
OutErr: ! something amiss
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End
Rem {end rtn.getchan.i}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
Call programdump("tmp/ava.qgettaxoutse!","")
returnstatus=0
message$=msg$
goto OutErr ! alt - send user info
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
