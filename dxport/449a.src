! >>> Program 449a
!
! description Inventory Analysis Report (Print)
!
! loadsave -w -n 100,10 -o prog/dxport/449a.dl4 src/449a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 17, 2003  15:40:07
Rem /w/papermaster/r2002//usr/acct/zyc/work/r2002/mx/mx449a.src (univ2) [zyc] {62123}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX449A INVENTORY ANALYSIS PRINT SECTION
Rem AUTHOR: DAVE DEVITO  07/07/92
Rem LAST UPDATE:
!--------------NOTES FOR UPGRADE TO REV10 FOR PAPER & CHEMICAL ----------------- 
!jliu 02/25/03 cct165195 - If products commodity code is "TIME" do not print
! 
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub InpBuf,String
! - Option Default Dialect IRIS1
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8,SORT_BY_WHSE,WHS,UnitType,U5$,STMY,ENMY,INCZERO,TOTCOST,TOTVALUE,WHSECOST,WHSEVALUE,csv

!
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[500],tmp1$[100]
dim Blank$[50] \ Blank$=" ",Blank$
!
dim 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNT(X)=SGN(X)*(INT(ABS(X)*1000+.5)*.001)

Dim 1%,M,W1[2],B1[3],T[2],L2,L1[5],F,X1,SCRPRT,CH_PW
Dim 2%,W2[9],B[24],H0[5],X2,C0
Dim 3%,A[33],A1[7],W3[16],W4[9],W5[12],W6[12],J,X3,T9[20],PCTR
Dim 3%,P3[3],L3[6],WH9[23],MNAMES$[40],W8[12],W9[12],parm[10],whmisc2[7]
Dim W1$[32],A$[156],V0$[116],SUNIT$[4],UNIT$[10],P9$[50],SORTBY$[10]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8],PRODTMP$[12]
DIM K1$[75],K2$[20],X$[10],U3$[132],V$[60],K1TMP$[4],comm$[4],d$[36]
Dim Fld$[60],Space$[128]
Dim 3%,OnHand,EXValue,CUMCost,CUMValue
Dim 3%,kpw$[50],custom_customer$[30]
U3$ = "-",U3$
Let Space$=" ",Space$
For J = 2 To 10
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1744","1792","2528","2432","2416","2400","1728","-1","2288"
CH_PW=2
Mat Read #1,0,100;ARDATE$;
MNAMES$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Read #1,0,120;M;
Read #1,3;CNAME$;
Mat Read #1,19,50;P9$;
Read #1,3,184;C0;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(trim$(custom_customer$))
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18 \ SCRPRT = 1
PCTR = 0
Let NumRec=0
If CSV<>0 Gosub FirstRec:
If SORT_BY_WHSE = 0 Let SORTBY$ = "PRODUCT"
If SORT_BY_WHSE = 1 Let SORTBY$ = "WAREHOUSE"
If SORT_BY_WHSE = 2 Let SORTBY$ = "COMMODITY"
K1$ = "}",K1$
!
! *** Process Section
!
if J8 ! dx xml headings
  !
  tmp$="" ! by product
  if SORT_BY_WHSE=1 let tmp$="WAREHOUSE",fdel$
  if SORT_BY_WHSE=2 let tmp$="COMMODITY",fdel$,"COMMODITY DESCRIPTION",fdel$
  tmp$=tmp$,"ITEM #",fdel$,"DESCRIPTION",fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"UNITS SOLD",fdel$,"U/M",fdel$
  tmp$=tmp$,"UNIT COST",fdel$,"UNITS SOLD VALUE",fdel$
  tmp$=tmp$,"% OF SALES",fdel$,"QTY ON HAND",fdel$
  tmp$=tmp$,"QTY ON HAND VALUE",fdel$,"% OF INVT.",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
If SORT_BY_WHSE Let FIRSTKEY = 1
L_2000: 
! - If Err 0 Gosub ERR_ESCAPE
Search #9,6,1;K1$,R1,E
If E Goto L_9100
If SORT_BY_WHSE = 1 If FIRSTKEY Let K1TMP$ = K1$[1,2] \ FIRSTKEY = 0
If SORT_BY_WHSE = 2 If FIRSTKEY Let K1TMP$ = K1$[1,4] \ Gosub GETCOMMCODE \ FIRSTKEY = 0
Mat Read #3,R1,0;A$;
Mat Read #3,R1,156;B;
Mat Read #3,R1,256;A;
Mat Read #3,R1,460;A1;
Mat Read #3,R1,512;PFU1;
Mat Read #3,R1,554;PFU2;
if custom_customer$="PCS"
	if a$[152,155]="TIME" goto L_2000:  	! " custom for pcs cct#165195
Endif
ONHAND = A[0]
K2$ = " ",K2$
If SORT_BY_WHSE = 1 Or WHS
  If SORT_BY_WHSE = 0 Let K2$[13,14] = WHS Using "##" \ WHSE = WHS
  If SORT_BY_WHSE = 1
    Let WHTMP = K1$[1,2]
    K2$[13,14] = 100 - WHTMP Using "##" \ WHSE=100-WHTMP
  endif
  If SORT_BY_WHSE = 2 Let K2$[13,14] = WHS Using "##" \ WHSE = WHS
  if sort_by_whse=0 
		if custom_customer$="WHITERIVER"
			let k2$[1,12]=k1$[31,42]
		else
			let k2$[1,12]=k1$[16,27]
		endif
	endif
	if sort_by_whse=1 
		if custom_customer$="WHITERIVER"
			let k2$[1,12]=k1$[33,44]
		ELSE
			let k2$[1,12]=k1$[18,29]
		endif
	endif
	if sort_by_whse=2
		if custom_customer$="WHITERIVER"
			LET K2$[1,12]=K1$[35,46]
		else
			let k2$[1,12]=k1$[20,31]     
		endif
	endif
  
  Search #2,2,1;K2$,R2,E 
  If E 
    For cnt=0 to 16 \ W3[cnt]=0 \ next cnt
  endif
  if E=0 
  Mat Read #2,R2,78;W3;
  mat read #2,r2,846;WHMISC2; 
LET PARM[0]=0               
LET PARM[1]=WHMISC2[0]  
Call ProdGroup(e$,intco,Parm[])
  endif
End If 
if not(whs)
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]                   
Call ProdGroup(e$,intco,Parm[])
endif
if parm[2]=0 goto l_2000: ! discontinued 
If WHS Or SORT_BY_WHSE = 1
  If W3[15] Let COST = W3[15] Else Let COST = B[21]
  ONHAND = W3[0]
End If 
If Not(WHS) And SORT_BY_WHSE <> 1
  COST = B[21]
End If 
If P9$[32,32] = "N" Let COST = B[21]
if custom_customer$="WHITERIVER"
	if sort_by_whse=0 let untsld=k1$[43,62]
	IF sort_by_whse=1 let untsld=k1$[45,64]
	if sort_by_whse=2 let untsld=k1$[47,66]
ELSE
	if sort_by_whse=0 let untsld=k1$[28,47]
	IF sort_by_whse=1 let untsld=k1$[30,49] 
	if sort_by_whse=2 let untsld=k1$[32,50]
endif
EXCOST = 0;EXCOST = FNR(UNTSLD * COST)
If EXCOST < 0 Let EXCOST = 0
EXVALUE = FNR(ONHAND * COST)
If EXVALUE < 0 Let EXVALUE = 0
If OnHand<0 Or EXValue<0 Let EXValue=0
Gosub L_2200
! - Gosub PRINTMESSAGE
Gosub L_5800
Gosub L_10000
Gosub L_5000
Goto L_2000
!
L_2200: Rem CALC
T9[0] = W3[0] - W3[2]
Return 
Print #0; Tab 1;"VENDOR: ";J3$;" ";V0$[1,30];
Print #0;" ";V0$[31,60];" ";V0$[91,105];" ";V0$[106,107];
Print #0;" ";V0$[108,116]
Print #0;" "
J1 = J1 + 2
Return 
!
L_5000: Rem "======================================= print line
If SORT_BY_WHSE = 2 And K1TMP$ <> K1$[1,4]
	IF NOT(CSV)
		Print #0;"" \ J1 = J1 + 1
		Gosub GETCOMMCODE
	ENDIF
End If 
CUMCOST = CUMCOST + EXCOST
CUMVALUE = CUMVALUE + EXVALUE
If CSV<>0 Goto CSVDetail: !
if J8 ! dx xml
  tmp$="" ! by product
  if SORT_BY_WHSE=1 let tmp$=K2$[13,14],fdel$ ! by warehouse
  if SORT_BY_WHSE=2 let tmp$=K1$[1,4],fdel$,D$[1,16],fdel$ ! by commodity
  tmp$=tmp$,A$[140,151],fdel$,rtrim$(A$[9,38]),fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,rtrim$(A$[63,92]),fdel$
  tmp$=tmp$,UNSOLD Using "--------#.##",fdel$,SUNIT$,fdel$
  tmp$=tmp$,DCOST Using "------#.##",fdel$
  tmp$=tmp$,EXCOST Using "-------#.##",fdel$
  If Not(WHS) And SORT_BY_WHSE <> 1
    If TOTCOST let tmp1$=(CUMCOST / TOTCOST) * 100 Using "---#.###%" else tmp1$=""
	tmp$=tmp$,tmp1$,fdel$
    tmp$=tmp$,ONHAND Using "--------#.##",fdel$
    tmp$=tmp$,EXVALUE Using "--------#.##",fdel$
    If TOTVALUE let tmp1$=(CUMVALUE / TOTVALUE) * 100 Using "###.####%" else tmp1$=""
	tmp$=tmp$,tmp1$,fdel$
    If SORT_BY_WHSE = 2 Let CUMCOST = 0;CUMVALUE = 0
  End If 
  If WHS Or SORT_BY_WHSE = 1
    If WHSECOST[WHSE] let tmp1$=(CUMCOST / WHSECOST[WHSE]) * 100 Using "---#.###%" else tmp1$=""
	tmp$=tmp$,tmp1$,fdel$
    tmp$=tmp$,ONHAND Using "--------#.##",fdel$
    tmp$=tmp$,EXVALUE Using "--------#.##",fdel$
    If WHSEVALUE[WHSE] let tmp1$=(CUMVALUE / WHSEVALUE[WHSE]) * 100 Using "###.####%" else tmp1$=""
	tmp$=tmp$,tmp1$,fdel$
    If SORT_BY_WHSE = 2 Let CUMCOST = 0;CUMVALUE = 0
  End If 
	!
    call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
Print #0; Tab 1;A$[140,151];
Print #0; Tab 13;A$[9,38];
Print #0; Using "--------#.## "; Tab 43;UNSOLD;SUNIT$;
Print #0; Using "------#.##"; Tab 60;DCOST;
Print #0; Using "-------#.##"; Tab 71;EXCOST;
If Not(WHS) And SORT_BY_WHSE <> 1
  If TOTCOST Print #0; Using "---#.###%"; Tab 85;(CUMCOST / TOTCOST) * 100;
  Print #0; Using "--------#.##"; Tab 95;ONHAND;
  Print #0; Using "--------#.##"; Tab 108;EXVALUE;
  If TOTVALUE Print #0; Using "###.####%"; Tab 122;(CUMVALUE / TOTVALUE) * 100;
  If SORT_BY_WHSE = 2 Let CUMCOST = 0;CUMVALUE = 0
End If 
If WHS Or SORT_BY_WHSE = 1
  If WHSECOST[WHSE] Print #0; Using "---#.###%"; Tab 85;(CUMCOST / WHSECOST[WHSE]) * 100;
  Print #0; Using "--------#.##"; Tab 95;ONHAND;
  Print #0; Using "--------#.##"; Tab 108;EXVALUE;
  If WHSEVALUE[WHSE] Print #0; Using "###.####%"; Tab 122;(CUMVALUE / WHSEVALUE[WHSE]) * 100;
  If SORT_BY_WHSE = 2 Let CUMCOST = 0;CUMVALUE = 0
End If 
Print #0;" "
If P9$[26,26] = "Y" If A$[63,65] <> "   " Print #0; Tab 13;A$[63,92] \ J1 = J1 + 1
Return 
!
L_5800: Rem "================================== headings'
If CSV Goto CSVHeader:
if J8 return ! dx xml
!
J1 = J1 + 1 \ If (SORT_BY_WHSE <> 1 And Not(WHS)) Or (SORT_BY_WHSE <> 1 And WHS) If J1 < J9 Return 
If SORT_BY_WHSE = 1
  J1 = J1 + 1 \ If J1 < J9 And K1$[1,2] = K1TMP$[1,2] Return 
  If K1$[1,2] <> K1TMP$[1,2] Let CUMCOST = 0 \ CUMVALUE = 0
End If 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1
J1 = 6
If SORT_BY_WHSE = 1 Let WHSETMP = K1$[1,2] \ WHSE = 100 - WHSETMP
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" -mx449a- ";Msc$(3);
Print #0; Tab 50;"INVENTORY ANALYSIS REPORT ";
X$ = STMY Using "&&&&&&"
Print #0;" FOR ";X$[5,6];"/";X$[1,4];" TO ";
X$ = ENMY Using "&&&&&&"
Print #0;X$[5,6];"/";X$[1,4]
If Not(WHS) And SORT_BY_WHSE = 1 Print #0; Tab 57;" WAREHOUSE: ";WHSE \ J1 = J1 + 1
Print #0; Tab 25;"SORTED BY ";SORTBY$;
If WHS Print #0;"       FOR WAREHOUSE: ";WHSE; Else Print #0;"       FOR ALL WAREHOUSES ";
Print #0;"       ";U5$;"\15\";
Print #0; Tab 1;"ITEM #"; Tab 13;"DESCRIPTION";
Print #0; Tab 50;"UNITS"; Tab 66;"UNIT"; Tab 85;"% OF"; Tab 100;"QTY";
Print #0; Tab 125;"% OF"
Print #0; Tab 51;"SOLD U/M"; Tab 66;"COST"; Tab 77;"VALUE"; Tab 86;"SALES";
Print #0; Tab 100;"ON HAND"; Tab 113;"VALUE"; Tab 125;"INVT."
Print #0;" "
If SORT_BY_WHSE = 2 Gosub GETCOMMCODE
K1TMP$ = K1$[1,4]
Return 
!
GETCOMMCODE: Rem
COMM$ = " ",COMM$
COMM$ = K1$[1,4]
Search #10,2,1;COMM$,R10,E 
If E let D$="COMMODITY NOT FOUND",Blank$
if E=0 Mat Read #10,R10,0;D$;
if J8=0
  Print #0; Tab 5;"COMMODITY: ";K1$[1,4];"     COMMODITY DESCRIPTION: ";D$[1,16];
  Print #0;"" \ J1 = J1 + 1
endif
K1TMP$ = K1$[1,4]
Return 

CSVDetail: ! " Write Fixed Length fields
Let Fld$=A$[140,151];Length=12 \ Gosub WritIt: ! "Item Code
! Print #0;"''";CNAME$;"'',"; ! "Company Name 
Let Fld$=A$[9,38];Length=30 \ Gosub WritIt: ! "desc 1
! IF P9$[26,26]="Y" PRINT #0;"''";A$[63,92];"'',"; ! "2nd desc
Let Fld$=UnSold Using "----------#.##";Length=15 \ Gosub WritIt:
Let Fld$=SUnit$;Length=4 \ Gosub WritIt:
Let Fld$=DCost USING "----------#.##";Length=15 \ Gosub WritIt:
Let Fld$=EXCost USING "----------#.##";Length=15 \ Gosub WritIt:
! IF NOT SORT_BY_WHSE
! IF TOTCOST PRINT #0; USING "---#.###%";(CUMCOST/TOTCOST)*100;",";
! ELSE 
! IF WHSECOST[WHSE] PRINT #0; USING "---#.###%";(CUMCOST/WHSECOST[WHSE])*100;",";
! ENDIF 
Let Fld$=OnHand USING "----------#.##";Length=15 \ Gosub WritIt:
Let Fld$=EXVALUE USING "----------#.##";Length=15 \ Gosub WritIt:
! IF NOT SORT_BY_WHSE
! IF TOTVALUE PRINT #0; USING "###.####%";(CUMVALUE/TOTVALUE)*100;
! ELSE 
! IF WHSEVALUE[WHSE] PRINT #0; USING "###.####%";(CUMVALUE/WHSEVALUE[WHSE])*100;
! ENDIF 
Let Fld$=A$[152,155];Length=4 \ gosub WritIt:
PRINT #0;"\215\";
Return

FirstRec: ! "Send totals as first Rec
Let A$=" ",a$;a$[140,140]="0"
If Whse Or Sort_BY_Whse
	Let TotCost=0;TotValue=0
		For X=1 to 99
			 Let TotCost=TotCost+WhseCost[x]
			 Let TotValue=TotValue+WhseValue[x]
	   Next X
Endif
Let EXCOST=TOTCOST;EXVALUE=TOTVALUE
Let X$=STMY Using "&&&&&&"
Let A$[9,15]=X$[5,6]+"/"+X$[1,4];A$[16,19]=" TO "
Let X$=ENMY Using "&&&&&&"
Let A$[20,26]=X$[5,6]+"/"+X$[1,4]
Goto CSVDETAIL:

WritIt: ! "Write Text
Let Fld$=Fld$+Space$
Let Fld$[length+1]=""
Write #0;Fld$;
Let Fld$=" ",Fld$
FLD$=ucase$(Fld$)
Return

CSVHeader: ! "
If Sort_By_Whse
	IF K1$[1,2]<>K1TMP$ LET CUMCOST=0 \ LET CUMVALUE=0
	LET K1TMP$=K1$[1,2]
Endif
Return ! "only once
gosub FirstRec:
Return ! "not sending Header!!
PRINT #0;"''ITEM #''";",''COMPANY NAME''";",''DESCRIPTION''";
If P9$[26,26]="Y" Print #0;",''DESCRIPTION 2''";
PRINT #0;",UNITS SOLD 12 MTHS,''U/M''";",COST,UNIT VALUE";",% OF SALES";",QTY ON HAND";
PRINT #0;",VALUE";",% OF INVT.";",COMM"
! IF P9$[40,40]="Y" PRINT #0;TAB 1;"VENDOR ITEM #";
! PRINT #0; TAB 43;"PAST 12MTH U/M"; TAB 66;"COST"; TAB 77;"VALUE"; TAB 86;"SALES";
! PRINT #0; TAB 98;"ON HAND"; TAB 113;"VALUE"; TAB 125;"INVT."
Let J2=J2+1
Return

!
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try Call dxclose() else rem
End 
!
! - Window On 
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! 
L_9100: Rem END OF THIS RANGE
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[UnitType]
CNVTU[2] = 1
CNVTA = UNTSLD \ Gosub L_20000
UNSOLD = AMOUNT
CNVTA = ONHAND \ Gosub L_20000
ONHAND = AMOUNT
CNVTU[2] = 2
CNVTA = COST \ Gosub L_20000
DCOST = AMOUNT
If PFU1[UnitType] = -1 Let SUNIT$ = "CWT "
If PFU1[UnitType] = -3 Let SUNIT$ = "LB  "
If PFU1[UnitType] > 0 Mat Read #8,PFU1[UnitType],10;SUNIT$;
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - was If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ rem ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
! - SORTMESSAGE: Rem
! - Print @0,22;"Sorting, Please Wait...";
! - PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed"
! - Return 
! - PRINTMESSAGE: Rem
! - If Not(SCRPRT)
! -   Print @0,22;"Printing, Please Wait...";
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 50))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";J2;
! -   End If 
! - End If 
! - Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
