! >>> Program 485a
!
! description:   SERIAL NUMBER OUT OF WARRANTY PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/485a.dl4 src/485a.src
!
! 1.0 04/09/2008 change
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 29, 2004  10:05:20
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx1/sn485a.src (univ2) [jcs] {24976}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem SN485A - SERIAL NUMBER OUT OF WARRANTY PRINT
Rem AUTHOR: UBS   MAY  1, 1992
Rem LAST UPDATE:
!
Declare Intrinsic Sub DateToJulian,InpBuf,JulianToDate,String,Time
!!Option Default Dialect IRIS1
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8,N1,N2,N1$,V9,CNAME$,ITEM_LAB$
!
If Err 0 Gosub ERR_TRAP
Dim SN$[224],UM$[4],PMSK$[15]
Dim 1%,SN1[2]
Dim 2%,SN2[9],C1[1],V0[1]
Dim 3%,SN3[6],INVNO
Dim FDATE$[8],JDATE$[8]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[40],K3$[40],X$[10],T9$[26],P9$[50]
Dim IT1$[20],IT2$[20],SNK$[30],SNK1$[30]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 2%,Q0[1]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
!
Mat Read #1,115,40;Q0;
If Q0[1] < 2 Let Q0[1] = 2
PMSK$ = "----#######"
E = Len(PMSK$) \ E = E - Q0[1] \ If E < 0 Let E = Q0[1]
PMSK$[E,E] = "."
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;J1$;
FDATE$ = J8$[7,8],J8$[1,2],J8$[4,5] \ Gosub L_3100 \ CDATE = JDATE$
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 \ If J8 Let J9 = 20
!
L_900: Rem SET UP RANGES
DR = N2[0] \ If DR > 0 If DR < 2 Goto L_920
DR = 1
L_920: C1 = N1$[1,6];C1[1] = N1$[7,12]
IT1$ = N1$[13,24];IT2$ = N1$[25,36]
V0 = N1$[37,42];V0[1] = N1$[43,48]
SNK$ = N1$[49,78]
SNK1$ = N1$[79,108]
TYP = N2[2] - 1
F = 0
For I = 30 To 2 Step -1
  If SNK$[I,I] <> " " Goto L_1030
  If SNK$[I,I] = " " Let SNK$[I,I] = ""
Next I
L_1030: For I = 30 To 2 Step -1
  If SNK1$[I,I] <> " " Goto L_1050
  If SNK1$[I,I] = " " Let SNK1$[I,I] = ""
Next I
L_1050: Rem
For I = 12 To 2 Step -1
  If IT1$[I,I] <> " " Goto L_1080
  If IT1$[I,I] = " " Let IT1$[I,I] = ""
Next I
L_1080: For I = 12 To 2 Step -1
  If IT2$[I,I] <> " " Goto L_1100
  If IT2$[I,I] = " " Let IT2$[I,I] = ""
Next I
L_1100: Rem
If J2 If Not(J8) Print #0;"\14\";
J1 = 90 \ J2 = 0
If DR = 1 Let K1$ = SNK$;K3$ = SNK1$
If DR = 2 Let K1$ = IT1$;K3$ = IT2$
!
If J8
  tmp$ = "SERIAL NUMBER",fdel$
  tmp$ = tmp$, ITEM_LAB$,fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$
  tmp$ = tmp$, "DESCRIPTION 2",fdel$
  tmp$ = tmp$, "LOT FROM",fdel$
  tmp$ = tmp$, "WH",fdel$
  tmp$ = tmp$, "STATUS",fdel$
  if N2[2] = 1
    tmp$ = tmp$, "MODEL",fdel$
    tmp$ = tmp$, "VENDOR CODE",fdel$
    tmp$ = tmp$, "VENDOR NAME",fdel$
    tmp$ = tmp$, "P. O.",fdel$
    tmp$ = tmp$, "P. O. DATE",fdel$
    tmp$ = tmp$, "EXPIRED",fdel$
  end if
  if N2[2] = 2
    tmp$ = tmp$,"CUST #",fdel$
    tmp$ = tmp$,"CUST NAME",fdel$
    tmp$ = tmp$,"INV",fdel$
    tmp$ = tmp$,"INV DATE",fdel$
    tmp$ = tmp$,"ORD",fdel$
    tmp$ = tmp$,"EXPIRED",fdel$
  End if
  If N2[1] 
    tmp$ = tmp$,"UDA 1",fdel$
    tmp$ = tmp$,"UDA 2",fdel$
    tmp$ = tmp$,"WARRANTY MFG",fdel$
    tmp$ = tmp$,"WARRANTY OURS",fdel$
    tmp$ = tmp$,"REPAIRS",fdel$
    tmp$ = tmp$,"REIMB",fdel$
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
!!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
Search #2,2,DR;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #2,3,DR;K1$,R1,E
If E Goto OUTEND
L_2010: 
If K1$[1,Len(K3$)] > K3$ Goto OUTEND
Mat Read #2,R1,0;SN$;
Mat Read #2,R1,284;INVNO;
Mat Read #2,R1,290;SN1;
Mat Read #2,R1,298;SN2;
Mat Read #2,R1,342;SN3;
Gosub L_3000 \ Goto L_2000
UM$ = "ERR "
If SN1[1] > 0 Read #3,SN1[1],10;UM$;
J2$ = " ",J2$
If SN1[2] = 0 Let J2$ = "OPEN"
If SN1[2] = 1 Let J2$ = "SOLD"
If SN1[2] = 2 Let J2$ = "ON HOLD"
If SN1[2] = 3 Let J2$ = "COMMITTED"
If SN1[2] = 4 Let J2$ = "IN PROCESS"
If SN1[2] = 5 Let J2$ = "ON CR MEMO"
Gosub L_5800
Gosub L_5000
Gosub L_2200
! - Signal 2,J0,A,B !!\ If J0 <> -1 Gosub L_9615
Goto L_2000
!
L_2200: Rem TOTALS CALC
Return 
!
L_3000: Rem SEE IF IN RANGE
If SN$[1,Len(IT1$)] < IT1$ Return 
If SN$[1,Len(IT2$)] > IT2$ Return 
If SN$[35,(35 + Len(SNK$))] < SNK$ Return 
If SN$[35,(35 + Len(SNK1$))] > SNK1$ Return 
If SN1[0] < N1[4] Return 
If SN1[0] > N1[5] Return 
If N2[2] = 2 Or SN2[1] = 0 Goto L_3060
FDATE$ = 1000000 + SN2[1] Using "#######";FDATE$ = FDATE$[2];DAYS = 0
Gosub L_3100 \ DAYS = JDATE$ \ DAYS = DAYS + SN2[9]
If DAYS > CDATE Return 
L_3060: If SN2[2] < V0[0] Return 
If SN2[2] > V0[1] Return 
If SN2[5] < C1[0] Return 
If SN2[5] > C1[1] Return 
If N2[2] = 1 Or SN2[6] = 0 Goto L_3090
FDATE$ = 1000000 + SN2[6] Using "#######";FDATE$ = FDATE$[2];DAYS = 0
Gosub L_3100 \ DAYS = JDATE$ \ DAYS = DAYS + SN2[7]
If DAYS > CDATE Return 
L_3090: Return 1
L_3100: Rem DATE CONVERT YYMMDD TO JULIAN DDDDD (DAYS SINCE 1/1/68)
FLG = 1;E = 0
Call DateToJulian(FLG,FDATE$,JDATE$,E)
If E Let JDATE$ = "00000"
Return 
!
L_3200: Rem FROM JDATE DDDDD TO MM/DD/YY
If X$[1,3] = "00/" Or X$[1,3] = "   " Goto L_3290
FDATE$ = DAYS Using "#####";FLG = 1;E = 0
If FDATE$[1,1] = " " Let FDATE$[1,1] = "0"
Call JulianToDate(FLG,FDATE$,X$,E)
L_3290: Return 
L_4000: Rem TOTAL PRINT
If J8 Return
Gosub L_5800
Print #0;"\15\** END **";
Return 
!
L_5000: Rem PRINT LINE
If J8
  tmp$ = rtrim$(SN$[35,64]),fdel$
  tmp$ = tmp$, rtrim$(SN$[1,12]),fdel$
  tmp$ = tmp$, rtrim$(SN$[85,114]),fdel$
  tmp$ = tmp$, rtrim$(SN$[115,144]),fdel$
  tmp$ = tmp$, rtrim$(SN$[13,24]),fdel$
  tmp$ = tmp$, SN1 Using "##",fdel$
  tmp$ = tmp$, rtrim$(J2$[1,10]),fdel$
  If N2[2] = 1 
    tmp$ = tmp$, rtrim$(SN$[65,84]),fdel$ !Model
    tmp$ = tmp$, SN2[2] Using "######",fdel$,rtrim$(SN$[175,204]),fdel$ !!VEND
    X2 = SN2[1] \ Gosub L_7700
    tmp$ = tmp$, SN2[0] Using "######",fdel$,X$[1,8],fdel$ !!P.O.
    Gosub L_3200 \ tmp$ = tmp$, X$,fdel$ !!EXPIRED
  End if
  If N2[2] = 2 
    tmp$ = tmp$, SN2[5] Using "######",fdel$,rtrim$(SN$[145,172]),fdel$!!CUST #
    X2 = SN2[6] \ Gosub L_7700
    tmp$ = tmp$, INVNO Using "########",fdel$,X$[1,8],fdel$
    tmp$ = tmp$, SN2[4] Using "######",fdel$ !!ORD
    Gosub L_3200 \ tmp$ = tmp$,X$,fdel$ !!EXPIRED
  End if
  If N2[1]
    tmp$ = tmp$, rtrim$(SN$[205,224]),fdel$ !!UDA 1
    tmp$ = tmp$, SN3[4] Using "--------#.####",fdel$ !!UDA 2 
    tmp$ = tmp$, SN2[9] Using "####",fdel$,SN2[7] Using "####",fdel$!!WARRANTY: MFG , OURS
    tmp$ = tmp$, (SN3[5] + SN3[3]) Using "------#.##",fdel$ !!REPAIRS
	tmp$ = tmp$, SN3[6] Using "------#.##",fdel$ !!REIMB 
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
Print #0; Tab 0;SN$[35,64];
Print #0; Tab 32;SN$[1,12];
Print #0; Tab 44;SN$[85,114];
Print #0; Tab 75;SN$[115,144];
Print #0; Tab 105;SN$[13,24];
Print #0; Using "##"; Tab 118;SN1;
Print #0; Tab 121;J2$[1,10];
Print #0;""
If N2[2] <> 1 Goto L_5090
Print #0; Tab 5;"MODEL: ";SN$[65,84];
Print #0; Using "######"; Tab 35;"VEND: ";SN2[2];" ";SN$[175,204];
X2 = SN2[1] \ Gosub L_7700
Print #0; Using "######"; Tab 80;"P.O. ";SN2[0];"  ";X$[1,8];
If N2[2] = 1 Gosub L_3200 \ Print #0; Tab 102;" EXPIRED ";X$;
Print #0;""
If N2[2] <> 2 Goto L_5125
L_5090: Print #0; Using "######"; Tab 5;"CUST #: ";SN2[5];" ";SN$[145,172];
X2 = SN2[6] \ Gosub L_7700
Print #0; Using "########"; Tab 50;"INV ";INVNO;" ";X$[1,8];
Print #0; Using "######"; Tab 73;"ORD ";SN2[4];
If N2[2] = 2 Gosub L_3200 \ Print #0; Tab 85;" EXPIRED ";X$;
Print #0;""
L_5125: If N2[1] = 0 Goto L_5780
Print #0; Tab 3;"UDA 1 ";SN$[205,224];
Print #0; Using "--------#.####"; Tab 30;"UDA 2 ";SN3[4];
Print #0; Using "####"; Tab 53;"WARRANTY: MFG ";SN2[9];" OURS ";SN2[7];
Print #0; Using "------#.##"; Tab 85;" REPAIRS ";(SN3[5] + SN3[3]);" REIMB ";SN3[6];
Print #0;""
L_5780: 
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
If J8 Return
!
If N2[1] Let J1 = J1 + 3
J1 = J1 + 3 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 485 - ";T9$;
Print #0; Tab 48;"SERIAL NUMBER OUT OF WARRANTY REPORT"
Print #0;"\15\";
Print #0; Tab 1;"SERIAL NUMBER";
Print #0; Tab 32;ITEM_LAB$;
Print #0; Tab 44;"DESCRIPTION";
Print #0; Tab 75;"DESCRIPTION 2";
Print #0; Tab 105;"LOT FROM";
Print #0; Tab 118;"WH";
Print #0; Tab 121;"STATUS";
Print #0;" "
Print #0;"\15\";
If J2 = 1 Let J1 = J1 + 2
Return 
!
L_7700: Rem  *X2 TO X$ V1.0
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT
Gosub L_4000
!
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
Try Call dxclose() Else REM
End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
! - L_9100: Rem END
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!For K = 0 To 20
!!  T9[K] = 0
!!Next K
!!If K2$ = "" Goto OUTEND
!!Goto L_900
!!Stop
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
