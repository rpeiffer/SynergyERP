! >>> Program 794a1
!
! description FIFO / LIFO Stock	Inventory Ledger
!			  Detail, no sort by Vendor	or Category
!
! loadsave -w -n 100,10	-o prog/dxport/794a1.dl4 src/794a1.src
!
! 1.0 mm/dd/yyyy change??
!
include	"src/copyright.inc"	! dx
!
Rem	BEDIT Version: 2.2 OBJECT CODE	   Created:	JUN	13,	2006  12:22:12
Rem	/w2/papermaster/r2005//usr/acct/mary/work/r2005/mx77/mx794a1.src (univ2) [mary]	{49406}
Rem	 Copyright (c) 2006	Universal Business Systems,	Inc.
Rem	   ****	ALL	CHANGES	MUST BE	MADE IN	SOURCE!!! ****
Rem
Rem	MX794A1	- FIFO/LIFO	STOCK LEDGER CARD IN DETAIL-NO SORT	BY VEND/CAT
Rem	AUTHOR:	EWR	  DEC 31, 1983
Rem	LAST UPDATE:  03/1997 -	FIFO USES JULIAN DATES
!
Declare	Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
! -	Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
Dim	L1$[56],A$[156],T1$[15]
Dim	1%,L1[3],EOF
Dim	3%,T9,L2[4],QTY[4]
Dim	2%,DATEX[1],WHSE,OPROD$[12],NPROD$[12],PROD1$[12],PROD2$[12]
Dim	PK$[12],K9$[60],S1$[24]
Dim	2%,B[24],D3[1],JDATE[1]
Dim	SUNIT$[4],1%,PFU1[20]
Dim	X$[10]
Dim	1%,FL1[2],FL1$[80],2%,FL2[3],3%,FL3[8]
Dim	1%,FT1[3],FT1$[72],2%,FT2[3],3%,FT3[3]
Dim	2%,FIFL,P60$[50],FLT$[50],3%,FQ9[2],FQTY,R[23],FLK$[50],J88
Dim	FTK$[50],P61$[256]
Dim	J$[40],J0$[10],J1$[40],J2$[20]
Dim	1%,F,X1,2%,X2,3%,J,X3
Dim	U9$[30],P$[8]
Dim	T9$[26]
Dim	U8$[131]
Dim	U5$[50],D8$[8],K1$[50],K2$[20],K3$[20]
!
Dim	tmp$[1500],tmp1$[1000],tmp2$[1000]
Dim	action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim	e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx	error handling variables
dim	Blank$[50] \ Blank$=" ",Blank$
dim	EndParam$[50] \	EndParam$="}",EndParam$
!
Def	FNR(X) = Sgn(X)	* (Int(Abs(X) *	100	+ .5) *	.01)
!Goto L_870
J88	= Spc(5)
J$ = Int((J88 -	Int(J88	/ 16384) * 16384) /	64)	Using "CNTRL# "
For	I =	2 To 7
  Read L
  If L = -1	Goto L_855
  Read #1,88,L;J$;
  Ropen	#I,J$
L_855: Next	I
Data "3008","1792","3024","0","1984","1728"
L_870: Mat Read	#1,0,100;D8$;
Read #1,3;U9$;
Mat	Read #1,60,50;P60$;
Mat	Read #1,61,0;P61$;
F =	0
If Err 0 Let F = Spc(8)
P =	Chf(0)
L8 = 60
If F Let L8	= 22
F =	0
P =	0 \	L =	90
!
If Err 0 Let J8	= Spc(8)
J8 = 0 \ J9	= Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8	<> 49 Goto ERR_TRAP
J9 = 55	\ If J8	Let	J9 = 18
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 !	dx xml,	setup rstr$
  !<section>
  tmp$ = bsdel$,"794a1",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
end if 
!
call dxget("I0",PROD1$)	\ PROD1$ = PROD1$, Blank$ !!Starting Product Code
call dxget("I1",PROD2$)	\ PROD2$ = PROD2$, EndParam$ !!Ending Product Code 
call dxget("I2",tmp$)	\ DATEX[0] = tmp$  !!Starting Date (MMDDYY)
call dxget("I3",tmp$)	\ IF tmp$ =	"" LET DATEX[1]	= 999999 else LET DATEX[1] = tmp$  !!ending	Date (MMDDYY)
call dxget("I4",tmp$)	\ WHSE = tmp$  !!Enter Warehouse #
!
if PROD2$ <	PROD1$ LET e$ =	"Invalid ending	product	code, must be >= than starting product code!" \	error 10000
!
X$ = DATEX[0] Using	"&&&&&&"
tmp1$ =	X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \ DATEX[0] =	X$
X2 = DATEX[0]
Gosub NUM2DATE
IF DATEX[0]
  Call VerifyDate(X$,X$,E) \ If	E Let X$ = "	"
  X2 = X$[1,6]
  X$ = X2 Using	"&&&&&&"
  Call DateToJulian(1,X$,X$,E) 
  if E or X2 = 0 let JDATE[0] =	-1 else	let	JDATE[0] = X$[1,5]
  If JDATE[0] <	0 let e$="Invalid date,	must be	<= 123199!"	\ error	10000 
ELSE
  JDATE[0] = 0
end if
!
X$ = DATEX[1] Using	"&&&&&&"
tmp1$ =	X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \DATEX[1] = X$
IF DATEX[1]	= 999999 
  JDATE[1] = 36525
else
  X2 = DATEX[1]
  Gosub	NUM2DATE
  Call VerifyDate(X$,X$,E) \ If	E Let X$ = "	"
  X2 = X$[1,6]
  X$ = X2 Using	"&&&&&&"
  Call DateToJulian(1,X$,X$,E)
  if E or X2 = 0 let JDATE[1] =	-1 else	let	JDATE[1] = X$[1,5]
  If JDATE[1] <	JDATE[0] let e$	= "Invalid ending date,	must be	between	starting date and 123199!" \ error 10000
end if
!
If WHSE	< 0	Or WHSE	> 99 let e$	= "Invalid warehouse, must be between 0	and	99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!!If Err 0 Gosub ERR_ESCAPE
!!Goto L_1200
!!L_1000: Rem REPORT RANGES
!!If P60$[9,9] = "F" Print @0,0;'CS'; Tab 20;"FIFO STOCK INVENTORY LEDGER IN DETAIL";
!!If P60$[9,9] = "L" Print @0,0;'CS'; Tab 20;"LIFO STOCK INVENTORY LEDGER IN DETAIL";
!!L_1200: PROD1$ = " ",PROD1$ \	PROD2$ = "}",PROD2$
!!!!Print @0,10;'CE';"Enter	Starting Product Code, <CR>	for	all, 'E' to	end: ";
!!Input	""J2$ \	If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1300
!!PROD1$ = J2$
!!Print	@0,11;'CE';"Enter Ending Product Code, <CR>	for	last, 'E' to end : ";
!!Input	""J2$ \	If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1250
!!PROD2$ = J2$
!!L_1250: If PROD2$	>= PROD1$ Goto L_1300
!!Print	@0,23;'CL RB';"Ending Product Code must	be greater than	Starting Product";
!!Signal 3,30
!!Goto L_1200
!!L_1300: Rem ENTER	DATE
!!DATE[0] =	0;JDATE[0] = 0;DATE[1] = 999999;JDATE[1] = 36525
!!L_1310: Print	@0,14;'CE';"Enter Starting Date	(MMDDYY),<CR> for all, 'E' to end: ";
!!Input	""J2$
!!If J2$ = "E" Goto	OUTEND
!!If J2$ = "" Goto L_1400
!!If Len(J2$) <> 6 Goto	L_1310
!!X2 = J2$;J2$ = X2	Using "&&&&&&"
!!J0$ =	J2$[5,6],J2$[1,4] \	DATE[0]	= J0$[1,6]
!!X2 = DATE[0] \ Gosub L_7820 \	Goto L_1300
!!JDATE[0] = X2
!!L_1340: Print	@0,15;'CL';"Enter Ending Date (MMDDYY),	<CR> for last, 'E' to end: ";
!!Input	""J2$ \	J0$	= J2$[5,6],J2$[1,4]
!!If J2$ = "" Goto L_1370
!!If J2$ = "E" Goto	OUTEND
!!If Len(J2$) <> 6 Goto	L_1340
!!X2 = J2$;J2$ = X2	Using "&&&&&&"
!!J0$ =	J2$[5,6],J2$[1,4] \	DATE[1]	= J0$[1,6]
!!X2 = DATE[1] \ Gosub L_7820 \	Goto L_1340
!!JDATE[1] = X2
!!L_1370: If JDATE[1] >= JDATE[0] Goto L_1400
!!Print	@0,23;'CL RB';"Ending Date must	be greater than	Starting Date";
!!Signal 3,30 \	Goto L_1300
!!L_1400: Rem ENTER	WAREHOUSE
!!WHSE = 0
!!L_1405: Print	@0,18;'CL';"Enter Warehouse	#, <CR>	for	all, 'E' to	end: ";
!!Input	""J2$ \	If J2$ = "E" Goto OUTEND
!!If J2$ = "" Goto L_1500
!!WHSE = J2$ \ If WHSE < 0 Goto	L_1405
!!If WHSE >	99 Goto	L_1405
!
if j8 
  tmp$ = "PRODUCT CODE",fdel$  
  tmp$ = tmp$,"DESCRIPTION 1",fdel$
  tmp$ = tmp$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$,"TRANS#",fdel$
  tmp$ = tmp$,"DATE",fdel$
  tmp$ = tmp$,"SOURCE",fdel$
  tmp$ = tmp$,"COMMENT",fdel$
  if not(WHSE) Let tmp$	= tmp$,"WH",fdel$
  tmp$ = tmp$,"TRANS TYPE",fdel$
  tmp$ = tmp$,"U/M",fdel$
  tmp$ = tmp$,"BEG BAL",fdel$
  tmp$ = tmp$,"QTY IN",fdel$
  tmp$ = tmp$,"QTY OUT",fdel$
  tmp$ = tmp$,"TOTAL",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
L_1500:	Rem
!!Print	@0,23;'CL';"SORTING...PLEASE WAIT....";
Gosub L_8500
FLK$ = " ",FLK$	\ FLK$[1,Len(PROD1$)] =	PROD1$
EOF	= 0
OPROD$ = ""
For	X =	0 To 4 \ QTY[X]	= 0	\ Next X
L_1730:	Search #2,3,1;FLK$,R[2],E \	If E = 2 Let EOF = 99 \	Goto L_1990
!!If E Gosub ERR_SEARCH
If FLK$[1,Len(PROD2$)] > PROD2$	Let	EOF	= 99 \ Goto	L_1990
Gosub L_8000
If WHSE	If WHSE	<> FL1[0] Goto L_1730
NPROD$ = FLK$[1,12]	\ If OPROD$	<> "" And OPROD$ <>	NPROD$ Goto	L_1990
OPROD$ = NPROD$
FTK$ = " ",FTK$	\ FTK$[1,6]	= R[2] Using "######"
L_1810:	Search #4,3,1;FTK$,R[4],E \	If E = 2 Goto L_1730
!!If E Gosub ERR_SEARCH
Gosub L_8100
If FT2[0] <> R[2] Goto L_1730
If FT2[2] <	JDATE[0] Let QTY[0]	= QTY[0] + FT3[0]
If FT2[2] <	JDATE[0] Goto L_1810
If FT2[2] >	JDATE[1] Goto L_1810
If FT1[0] =	66 Goto	L_1810
QTY[4] = 99
K9$	= "	",K9$
K9$[1,12] =	FT1$[1,12]
K9$[13,18] = FT2[2]	Using "######"
K9$[19,26] = R[4] Using	"########"
R[9] = R[4]
Search #9,4,1;K9$,R[9],E !!\ If	E Gosub	ERR_SEARCH
If E Let e$	= "syserrorfile	794a1 sortfile mode	(m)=4 keyno	(k)=1 r=",R[9]," e=",e," keyval	(k$)=",K9$ \error 10000
Goto L_1810
L_1990:	If Not(QTY[0]) And Not(QTY[4]) Goto	L_2500
Gosub L_3300
K9$	= "	",K9$
L_2000:	Search #9,3,1;K9$,R[9],E \ If E	= 2	Goto L_2500
!!If E Gosub ERR_SEARCH
R[4] = R[9]	\ Gosub	L_8100
If FT3[0] >= 0 Let QTY[1] =	FT3[0]
If FT3[0] <	0 Let QTY[2] = FT3[0]
Gosub L_5800
Gosub L_5000
Gosub L_2900
Goto L_2000
L_2500:	Rem	CLEAR SORT & TOTALS
Gosub L_8500
For	X =	0 To 4 \ QTY[X]	= 0	\ Next X
If EOF Goto	L_9100
FLK$ = NPROD$ \	OPROD$ = NPROD$
Goto L_1730
L_2900:	Rem	TOTALS CALC
QTY[1] = 0 \ QTY[2]	= 0
Return 
L_3300:	Rem	LOOK UP	PRODUCT
K1$	= "	",K1$ \	K1$[1,12] =	OPROD$
A$ = " ",A$	\ A$[9,38] = "**** PRODUCT NOT ON FILE *****"
Search #3,2,1;K1$,R[3],E \ If E	= 1	Goto L_3360
!!If E Gosub ERR_SEARCH
Mat	Read #3,R[3],0;A$;
Mat	Read #3,R[3],512;PFU1;
QTY[3] = QTY[0]
L_3360:	
IF NOT(J8) Print #0;"" \ L = L + 1
Gosub L_5800
if j8 
  tmp1$	= rtrim$(K1$[1,12]),fdel$,rtrim$(A$[9,37]),fdel$,rtrim$(A$[63,90]),fdel$
  if not(WHSE) Let tmp2$ = tmp1$,"",fdel$,"",fdel$,"",fdel$	else Let tmp2$ = tmp1$,"",fdel$,"",fdel$
  tmp2$	= tmp2$,"",fdel$,"",fdel$,"",fdel$
  GOSUB	L_5050
  QTY[0] = 0
  return
end if
Print #0;K1$[1,12];" ";A$[9,37];" ";A$[63,90];
Gosub L_5051
QTY[0] = 0
Return 
Gosub L_5800
Print #0;"\15\ ** END **"
If L8 <	30 Print #0;"\15\\15\"
L =	90
Return 
L_4300:	Rem	READ TC
J =	L1 - 1
Read #1,108,J *	15;T1$[1,15];
Return 
L_5000:	Rem	PRINT LINE FOR SUMMARY
!
if j8
  tmp2$	= tmp1$,FT2[0] Using "######",fdel$
  X2 = FT2[2] \	Gosub L_7770 \ P$ =	X$
  tmp2$	= tmp2$, P$[1,8],fdel$
  tmp2$	= tmp2$, rtrim$(FT1$[41,52]),fdel$
  tmp2$	= tmp2$, rtrim$(FT1$[53,72]),fdel$
  If Not(WHSE) Let tmp2$ = tmp2$, FT1[1] Using "##", fdel$ 
  L1 = FT1[0] \	Gosub L_4300
  tmp2$	= tmp2$, rtrim$(T1$[1,12]),fdel$
  L_5050: SUNIT$ = " ",SUNIT$
  If A$[127,127] = "Y" And P61$[73,73] = "Y"
	SUNIT$[1,2]	= "LB"
  Else 
	If PFU1[0] > 0 Mat Read	#7,PFU1[0],10;SUNIT$;
	If PFU1[0] = -1	Let	SUNIT$ = "CWT "
	If PFU1[0] = -2	Let	SUNIT$ = "LOT "
	If PFU1[0] = -3	Let	SUNIT$ = "LB  "
  End If 
  tmp$ = tmp2$,	SUNIT$[1,4],fdel$
  If QTY[0]	Let	tmp$ = tmp$, QTY[0]	Using "---------.##",fdel$ ELSE	Let	tmp$ = tmp$	,"",fdel$
  tmp$ = tmp$, QTY[1] Using	"########.##",fdel$
  tmp$ = tmp$, Abs(QTY[2]) Using "########.##",fdel$
  QTY[3] = QTY[3] +	(QTY[1]	+ QTY[2])
  tmp$ = tmp$, QTY[3] Using	"----------#.##",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Print #0; Using	"######";FT2[0];
X2 = FT2[2]	\ Gosub	L_7770 \ P$	= X$
Print #0; Tab 7;P$[1,8];
Print #0; Tab 17;FT1$[41,52];
Print #0; Tab 30;FT1$[53,72];
If Not(WHSE) Print #0; Using "##"; Tab 53;FT1[1];
L1 = FT1[0]	\ Gosub	L_4300
Print #0; Tab 57;T1$[1,12];
L_5051:	SUNIT$ = " ",SUNIT$
If A$[127,127] = "Y" And P61$[73,73] = "Y"
  SUNIT$[1,2] =	"LB"
Else 
  If PFU1[0] > 0 Mat Read #7,PFU1[0],10;SUNIT$;
  If PFU1[0] = -1 Let SUNIT$ = "CWT	"
  If PFU1[0] = -2 Let SUNIT$ = "LOT	"
  If PFU1[0] = -3 Let SUNIT$ = "LB	"
end if 
Print #0; Tab 71;SUNIT$[1,4];
If QTY[0] Print	#0;	Using "---------.##"; Tab 76;QTY[0];
Print #0; Using	"########.##"; Tab 89;QTY[1];
Print #0; Using	"########.##"; Tab 101;Abs(QTY[2]);
QTY[3] = QTY[3]	+ (QTY[1] +	QTY[2])
Print #0; Using	"----------#.##"; Tab 114;QTY[3];
Print #0;""
Return 
L_5800:	L =	L +	1
If L < L8 Return 
If P = 0 Goto L_5825
!!If L8	= 22 Print @0,23;'CL';"PRESS <CR> TO CONTINUE "; \ Input ""X$
!!If L8	= 22 Print 'CS';
L_5825:	
!
if j8 return
!
If P Print #0;"\14\";
T9$	= "" \ Call	Time(T9$)
Print #0;"\15\ - 794A1 - ";T9$;
Print #0; Tab (Int(66 -	Len(U9$) / 2));U9$
P =	P +	1
Print #0; Tab 10;"DATE:	";D8$;
If P60$[9,9] = "F" Print #0; Tab 30;"F I F O   S T O C K   T R A N S A C T I O N   L E D G E R	 D E T A I L";
If P60$[9,9] = "L" Print #0; Tab 30;"L I F O   S T O C K   T R A N S A C T I O N   L E D G E R	 D E T A I L";
Print #0; Tab 110;"PAGE";P
If WHSE	Print #0; Using	"##"; Tab 5;"FOR WAREHOUSE:	";WHSE;
If Not(WHSE) Print #0; Tab 5;"FOR ALL WAREHOUSES";
X2 = DATEX[0] \	Gosub L_8900
Print #0; Tab 38;"FOR THE PERIOD BEGINNING ";P$[1,8];" THRU	";
X2 = DATEX[1] \	Gosub L_8900
Print #0;P$[1,8]
Print #0;" "
Print #0;"TRANS#"; Tab 7;"DATE"; Tab 17;"SOURCE"; Tab 30;"COMMENT";
If Not(WHSE) Print #0; Tab 53;"WH";
Print #0; Tab 57;"TRANS	TYPE"; Tab 71;"U/M";
Print #0; Tab 82;"BEG BAL";	Tab	93;"QTY	IN"; Tab 105;"QTY OUT";
Print #0; Tab 123;"TOTAL";
Print #0;""
L =	8 \	Return 
Print #0;""
L =	8
Return 
NUM2DATE:
X$ = " ",X$	\ X$[10] = ""
X$[1,3]	= Int(X2 / 10 ^	2 -	Int(X2 / 10	^ 4) * 10 ^	2) + 10	^ 2	Using "###"
X$[4,6]	= Fra(X2 / 10 ^	2) * 10	^ 2	+ 10 ^ 2 Using "###"
X$[7,9]	= Int(X2 / 10 ^	4) + 10	^ 2	Using "###"
X$[4,4]	= "/" \	X$[7,7]	= "/" \	X$ = X$[2]
Return 
L_7770:	Rem	DATE JULIAN	X2 TO X$
D3[0] =	X2;FLAG	= 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E	Let	X$ = "	  "
X2 = X$[1,6] \ Return 
L_7820:	Rem	 CONVERT YYMMDD	TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2	Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E	Return 
X2 = X$[1,5] \ Return 1
D3[0] =	X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2	Using "&&&&"
D3[0] =	X$[1,2];D3[1] =	X$[3,4]
If D3[0] > 67 Let D3[0]	= 1900 + D3[0]
If D3[0] < 68 Let D3[0]	= 2000 + D3[0]
X$[1,4]	= D3[0]	Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000:	Rem	READ FIFOLOT
Mat	Read #2,R[2],0;FL1;
Mat	Read #2,R[2],6;FL1$
Mat	Read #2,R[2],86;FL2;
Mat	Read #2,R[2],102;FL3;
Return 
L_8100:	Rem	READ FIFOTRANS FILE
Mat	Read #4,R[4],0;FT1$;
Mat	Read #4,R[4],72;FT1;
Mat	Read #4,R[4],80;FT2;
Mat	Read #4,R[4],96;FT3;
Return 
L_8500:	Rem	CLEAR SORT FILE
K9$	= "	",K9$
L_8510:	Search #9,3,1;K9$,R[9],E \ If E	= 2	Goto L_8550
Search #9,5,1;K9$,R[9],E !!\ If	E Gosub	ERR_SEARCH
If E Let e$	= "syserrorfile	794a1 sortfile mode	(m)=5 keyno	(k)=1 r=",R[9]," e=",e," keyval	(k$)=",K9$ \error 10000
Goto L_8510
L_8550:	Return 
L_8900:	Rem	PUT	DATE FROM X2 INTO P$
U5$	= X2 Using "&&&&&&&"
If Not(X2) Let U5$ = " 000000"
P$[1,2]	= U5$[4,5]
P$[3,3]	= "/"
P$[4,5]	= U5$[6,7]
P$[6,6]	= "/"
P$[7,8]	= U5$[2,3]
Return 
!
L_9100:	Rem	END	OF THIS	RANGE
goto OUTEND
!If	L8 = 22	Print @0,23;'CL';"PRESS	<CR> TO	CONTINUE ";	\ Input	""X$
!Goto L_1000
!End 
!
OUTEND:	Rem	EXIT ROUTINE
! dx close
If j8 !	dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1	flag puts 0	status seciton in, puts	</page>	in
end if 
!
try call dxclose() else rem
End	
!
!!Print	'CS'
!!Chain	"MX000C"
!!Stop 
Rem	{begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)	 V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire	error routine
include	"src/callmainerrnet.inc"
End
