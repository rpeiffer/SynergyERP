! >>> Program 441g
!
! description Bill-to Customer 12 Month Sales
!
! loadsave -w -n 100,10 -o prog/dxport/441g.dl4 src/441g.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 27, 2005  09:53:07
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx441g.src (univ2) [txc] {14060}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX441G - BILL TO 12 MONTH SALES
Rem AUTHOR: DAVE  DEC 29, 1987
Rem LAST UPDATE: roman 07/09/1991   clean up / fix
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,MONTH_[4]
Com MTH$[108]
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) + .5))
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim 1%,F,X1[1],C0[1],BOYMONTH,ARMONTH
Dim 2%,C1[12],C2[12],X2,SCALE
Dim 3%,S1[12,2],S2[12,2],S3[12,2],J,X3[1],T7[12,2],T8[12],T9[12,2]
Dim 3%,Z1[12,2],Z2[12,2]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8],C1$[142]
Dim K1$[50],K2$[20],K3$[20],K4$[20],K5$[20],X$[10],T9$[26]
dim CustName$[30],J9$[2]
!
For J = 2 To 3
  Read J1 \ If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;CNAME$;
Mat Read #1,51,74;BOYMONTH; \ Mat Read #1,0,120;ARMONTH;
Mat Read #1,0,100;ARDATE$;
SCALE = 1
Data "1808","2064"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 21
!
MONTH_[1] = 1;MONTH_[2] = 0 \ rem ! - Call "UTMONTHS",MONTH_[],MTH$
Call UTMonths(e$,MONTH_[],MTH$,BOYMONTH) ! set up month headers
!
!!!! dx add xport reporting code
dim tmp$[300]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"441g",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!!!! dx add xport reporting code
call dxget("k2",k2$) ! starting customer
call dxget("k3",k3$) ! ending customer
call dxget("x1",tmp$) \ X1=tmp$ ! 1=this year, 2=last year, 3=both & 4=difference only
call dxget("units",tmp$) \ x1[1]=tmp$ ! 1=units & 2=dollars
call dxget("sort",tmp$) \ if tmp$="" let C=2 else C=9 ! sort by customer category
call dxget("j2",tmp$) \ J2$=tmp$ ! starting category
call dxget("j3",tmp$) \ j3$=tmp$ ! endng category
call dxget("scale",tmp$) \ scale=tmp$ ! scaling factor
!!!! dx end
!
X2=K2$ \ K2$ = X2 Using "######"
if X2<0 or X2>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
!
if K3$="" let K3$="999999"
X2=K3$ \ K3$ = X2 Using "######"
if K3$<K2$ or X2>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
F = X1[1] - 1 ! units / dollars
!
if J2$="" let J2$="  1"
X2=J2$ \ J2$=X2 using "###"
if X2<1 or X2>999 let e$="Invalid starting category, must be between 1 and 999!" \ error 10000
!
if J3$="" let J3$="999"
X2=J3$ \J3$=X2 using "###"
if J3$<J2$ or X2>999 let e$="Invalid ending category, must be between starting category and 999999!" \ error 10000
!
IF SCALE<1 let SCALE=1
If SCALE>10000 let SCALE=10000
!
X3 = K2$ \ X3[1] = K3$ ! beg/end billto
C0 = J2$ \ C0[1] = J3$ ! beg/end category
if X1[1]=1 let J9$="UN" else J9$="$"
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  
End If 

if C=2 gosub L_1850 
!
! - L_900: Rem "======================================= get picks
! - Print 'CS'
! - Print @0,0;"MX441G"
! - Print @30,0;"BILLTO 12 MONTH SALES"
! - Print @0,14;"ENTER STARTING BILLTO, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - X2 = K2$ \ K2$ = X2 Using "######"
! - Print @6,15;"ENDING   BILLTO, <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "999999"
! - X2 = K3$ \ K3$ = X2 Using "######"
! - If K2$ <= K3$ Goto L_990
! - Print @0,14;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: J1 = 70 \ J2 = 0
! - X3 = K2$ \ X3[1] = K3$
! - L_1000: Print @0,16;'CE';"SELECTIONS:  1: THIS YEAR,  2: LAST YEAR,  3: BOTH,  4: DIFF ONLY ";
! - Input ""J$
! - X1 = J$ \ If X1 < 1 Or X1 > 4 Goto L_1000
! - L_1040: Print @0,17;'CE';"SELECT:  1: UNITS,  2: DOLLARS ";
! - Input ""J$
! - X1[1] = J$ \ If X1[1] < 1 Or X1[1] > 2 Goto L_1040
! - F = X1[1] - 1
! - L_1100: Rem
! - Print @0,18;'CL';"SORT BY CUSTOMER CATEGORY? (Y/N) ";
! - Input ""J2$ \ If J2$ = "Y" Goto L_1200
! - If J2$ <> "N" Goto L_1100
! - C = 2
! - Gosub L_1850
! - C0[0] = 0 \ C0[1] = 999
! - Goto L_1325
! - L_1200: Rem CTGY
! - Print @0,19;'CE';"ENTER STARTING CATEGORY, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
! - If J2$ = "" Let J2$ = "1"
! - X2 = J2$ \ If X2 <= 0 Goto L_1200
! - If X2 > 999 Goto L_1200
! - J2$ = X2 Using "###"
! - L_1240: Print @6,20;'CE';"ENDING  CATEGORY,  <CR> FOR LAST,    E: TO EXIT ";
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
! - If J3$ = "" Let J3$ = "999"
! - X2 = J3$ \ If X2 <= 0 Goto L_1240
! - If X2 > 999 Goto L_1240
! - J3$ = X2 Using "###"
! - If J2$ <= J3$ Goto L_1324
! - Print @0,19;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
! - Signal 3,30 \ Goto L_1200
! - L_1324: Rem
! - C0 = J2$ \ C0[1] = J3$
! - C = 9
! - L_1325: Print @0,21;'CE';"ENTER SCALING FACTOR FOR QUANTITIES OR <CR> FOR DEFAULT OF 1:";
! - Input ""J$
! - SCALE = J$;SCALE = Int(SCALE)
! - If SCALE < 1 Let SCALE = 1
! - If SCALE > 10000 Let SCALE = 10000
!
! *** sort section
! - Print @0,23;'CE';"Clearing sort file"; \ Signal 3,0
J4$ = " ",J4$
L_1415: 
Search #9,3,1;J4$,V1,E
If E Goto L_1500
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 441g sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1415
!
L_1500: Rem SORT IT
! - Print @0,23;'CE';"Sorting...please wait"; \ Signal 3,0
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E
If E Goto L_1800
L_1530: Rem
Mat Read #2,R1,142;C1;
If C1[4] < X3[0] Goto L_1520
If C1[4] > X3[1] Goto L_1520
Gosub L_1600
If C2[9] < C0[0] Goto L_1520
If C2[9] > C0[1] Goto L_1520
J4$ = " ",J4$ \ If C = 9 Let J4$ = C2[9] Using "###"
J4$[4] = C1[4] Using "######"
J4$[10] = K1$
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 441g sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1520
!
L_1600: Rem "====================== get bill to
K4$ = " ",K4$ \ K4$ = C1[4] Using "######"
Search #2,2,1;K4$,R2,E
If E Goto OUTEND2
Mat Read #2,R2,142;C2;
Return 
!
L_1800: Rem
K1$ = " ",K1$ \ K3$ = " ",K3$
Gosub L_1850
Goto L_1900
!
L_1850: 
J2$ = " ",J2$
J2$ = "SALES - "
If X1[1] = 1 Let J2$ = J2$,"UNITS"
If X1[1] = 2 Let J2$ = J2$,"DOLLARS"
Return 
!
! *** process
L_1900:
! - Print @0,23;"Printing...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
!
if J8 ! dx xml headings
  If C=9
    tmp$="CATEGORY",fdel$,"CUST #",fdel$
  else
    tmp$="CUST #",fdel$
  endif
  tmp$=tmp$,"NAME",fdel$,"DESC",fdel$,"STATE",fdel$
  For I = 1 To 12
    tmp$=tmp$,MTH$[I * 3 - 2,I * 3],fdel$
  Next I
  tmp$=tmp$,"TOTAL",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
Gosub L_2200
K5$ = " ",K5$
L_2000: 
Search #9,3,1;K1$,R1,E
If E Goto L_9100
If K1$[4,9] <> K3$[4,9] Gosub L_2100
Mat Read #2,R1,142;C1;
Gosub L_1600
Mat Read #2,R2,0;C1$;
Mat S1 = Zer \ Mat S2 = Zer
Mat Read #3,R1,4;Z1;
Mat Read #3,R1,238;Z2;
For I = 0 To 12 \ Z1[I,0] = Int(FNR(Z1[I,0] / SCALE));Z2[I,0] = Int(FNR(Z2[I,0] / SCALE)) \ Next I
Gosub L_2500 \ Gosub L_2600
Gosub L_2300
Goto L_2000
!
L_2100: 
If K3$[4,9] = "      " Goto L_2185
Gosub L_5800
Gosub L_5000
Gosub L_2200
If K5$[1,3] <> K1$[1,3] Gosub L_4500
K5$ = K1$
L_2185: K3$ = K1$
Return 
!
L_2200: Rem TOTALS CALC
For X = 0 To 2
  For I = 0 To 12
    T7[I,X] = T7[I,X] + S3[I,X]
    T9[I,X] = T9[I,X] + S3[I,X]
    S3[I,X] = 0
  Next I
Next X
Return 
!
L_2300: Rem TOTAL BILLTO
For I = 1 To 12
  S3[I,0] = S3[I,0] + Int(S1[I,F])
  S3[I,1] = S3[I,1] + Int(S2[I,F])
  S3[I,2] = S3[I,2] + (Int(S1[I,F]) - Int(S2[I,F]))
Next I
S3[0,0] = S3[0,0] + Int(S1[0,F])
S3[0,1] = S3[0,1] + Int(S2[0,F])
S3[0,2] = S3[0,2] + (Int(S1[0,F]) - Int(S2[0,F]))
Return 
!
L_2500: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH
For I = 0 To 12
  For X6 = 0 To 2
    If I Let S1[I,X6] = Z1[X7,X6] Else Let S1[0,X6] = Z1[0,X6]
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_2600: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH;X8 = 0
For I = 0 To 12
  For X6 = 0 To 2
    If Not(I) Let S2[0,X6] = Z2[0,X6] \ Goto L_2640
    If Not(X8) Let S2[I,X6] = Z2[X7,X6] Else Let S2[I,X6] = Z1[X7,X6]
L_2640: Next X6
  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
If X1 = 4 Goto L_4090
If X1 = 2 Goto L_4090
Print #0; Tab 23;"THIS YEAR"; \ F1 = 0
Gosub L_4300
L_4090: Print #0;" "
Print #0; Tab 23;
If X1 = 1 Goto L_4180
If X1 = 4 Goto L_4180
Print #0;"LAST YEAR"; \ F1 = 1
Gosub L_4300
Print #0;" "
L_4180: If X1 = 1 Goto L_4265
If X1 = 2 Goto L_4265
Print #0; Tab 23;"DIFF. "; \ F1 = 2
Gosub L_4300
Print #0;" " \ Print #0;" "
L_4265: Return 
!
L_4300: Rem
Print #0; Using "------#"; Tab 33;T9[1,F1];
Print #0; Using "------#"; Tab 40;T9[2,F1];
Print #0; Using "------#"; Tab 47;T9[3,F1];
Print #0; Using "------#"; Tab 54;T9[4,F1];
Print #0; Using "------#"; Tab 61;T9[5,F1];
Print #0; Using "------#"; Tab 68;T9[6,F1];
Print #0; Using "------#"; Tab 75;T9[7,F1];
Print #0; Using "------#"; Tab 82;T9[8,F1];
Print #0; Using "------#"; Tab 89;T9[9,F1];
Print #0; Using "------#"; Tab 96;T9[10,F1];
Print #0; Using "------#"; Tab 103;T9[11,F1];
Print #0; Using "------#"; Tab 110;T9[12,F1];
Print #0; Using "------##"; Tab 117;T9[0,F1];
Return 
!
L_4500: Rem SUBTTL
if J8 return ! dx xml
!
If K5$[1,3] = "   " Goto L_4580
Gosub L_5800
Print #0;"\15\** ";K5$[1,3];" TOTALS **";
If X1 = 4 Goto L_4522
If X1 = 2 Goto L_4522
Print #0; Tab 25;" TH YR"; \ F1 = 0
Gosub L_4600
L_4522: Print #0;" "
Print #0; Tab 26;
If X1 = 1 Goto L_4536
If X1 = 4 Goto L_4536
Print #0;"LS YR"; \ F1 = 1
Gosub L_4600
Print #0;" "
L_4536: If X1 = 1 Goto L_4546
If X1 = 2 Goto L_4546
Print #0; Tab 25;" DIFF. "; \ F1 = 2
Gosub L_4600
Print #0;" "
L_4546: Print #0;"\15\";
J1 = J1 + 2
L_4580: For I = 0 To 12 \ For K = 0 To 2
    T7[I,K] = 0
  Next K \ Next I
Return 
!
L_4600: Rem
Print #0; Using "------#"; Tab 33;T7[1,F1];
Print #0; Using "------#"; Tab 40;T7[2,F1];
Print #0; Using "------#"; Tab 47;T7[3,F1];
Print #0; Using "------#"; Tab 54;T7[4,F1];
Print #0; Using "------#"; Tab 61;T7[5,F1];
Print #0; Using "------#"; Tab 68;T7[6,F1];
Print #0; Using "------#"; Tab 75;T7[7,F1];
Print #0; Using "------#"; Tab 82;T7[8,F1];
Print #0; Using "------#"; Tab 89;T7[9,F1];
Print #0; Using "------#"; Tab 96;T7[10,F1];
Print #0; Using "------#"; Tab 103;T7[11,F1];
Print #0; Using "------#"; Tab 110;T7[12,F1];
Print #0; Using "------##"; Tab 117;T7[0,F1];
Return 
!
L_5000: Rem PRINT LINE
if J8 ! dx xml
  CustName$=rtrim$(C1$[31,50])
  !
  If X1 = 1 or X1 = 3
    if C=9 ! sort by category
	  tmp$=K1$[1,3],fdel$,C2[1] Using "######",fdel$
	else
      tmp$=C2[1] Using "######",fdel$
	endif
    tmp$=tmp$,CustName$,fdel$
	tmp$=tmp$,C1$[136,137],fdel$
    tmp$=tmp$,"TYR ",J9$,fdel$
    for cnt=1 to 12
	  tmp$=tmp$,S3[cnt,0] Using "--------#",fdel$
	next cnt
	tmp$=tmp$,S3[0,0],fdel$
	!
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  If X1 = 2 or X1 = 3 
    if C=9 ! sort by category
	  tmp$=K1$[1,3],fdel$,C2[1] Using "######",fdel$
	else
      tmp$=C2[1] Using "######",fdel$
	endif
    tmp$=tmp$,CustName$,fdel$
	tmp$=tmp$,C1$[136,137],fdel$
    tmp$=tmp$,"LYR  ",J9$,fdel$
    for cnt=1 to 12
	  tmp$=tmp$,S3[cnt,1] Using "--------#",fdel$
	next cnt
	tmp$=tmp$,S3[0,1],fdel$
	!
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  If X1 = 3 or X1 = 4 
    if C=9 ! sort by category
	  tmp$=K1$[1,3],fdel$,C2[1] Using "######",fdel$
	else
      tmp$=C2[1] Using "######",fdel$
	endif
    tmp$=tmp$,CustName$,fdel$
	tmp$=tmp$,C1$[136,137],fdel$
    tmp$=tmp$,"DIF ",J9$,fdel$
    for cnt=1 to 12
	  tmp$=tmp$,S3[cnt,2] Using "--------#",fdel$
	next cnt
	tmp$=tmp$,S3[0,2],fdel$
	!
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  return
endif
!
Print #0; Using "######"; Tab 1;C2[1];
Print #0; Tab 8;C1$[31,50];
If X1 = 4 Goto L_5072
If X1 = 2 Goto L_5072
Print #0;" TYR";
F1 = 0 \ Gosub L_5300
L_5072: Print #0;" "
Print #0; Tab 8;C1$[136,137]; Tab 25;
If X1 = 1 Goto L_5170
If X1 = 4 Goto L_5170
Print #0;"    LYR";
F1 = 1 \ Gosub L_5300
Print #0;" "
L_5170: If X1 = 1 Goto L_5270
If X1 = 2 Goto L_5270
Print #0; Tab 29;"DIF";
F1 = 2 \ Gosub L_5300
Print #0;" "
L_5270: Print #0;"\15\";
Return 
!
L_5300: Print #0; Using "------#"; Tab 33;S3[1,F1];
Print #0; Using "------#"; Tab 40;S3[2,F1];
Print #0; Using "------#"; Tab 47;S3[3,F1];
Print #0; Using "------#"; Tab 54;S3[4,F1];
Print #0; Using "------#"; Tab 61;S3[5,F1];
Print #0; Using "------#"; Tab 68;S3[6,F1];
Print #0; Using "------#"; Tab 75;S3[7,F1];
Print #0; Using "------#"; Tab 82;S3[8,F1];
Print #0; Using "------#"; Tab 89;S3[9,F1];
Print #0; Using "------#"; Tab 96;S3[10,F1];
Print #0; Using "------#"; Tab 103;S3[11,F1];
Print #0; Using "------#"; Tab 110;S3[12,F1];
Print #0; Using "-------#"; Tab 117;S3[0,F1];
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
If X1 = 3 Let J1 = J1 + 1
If X1 > 1 Let J1 = J1 + 1
J1 = J1 + 2 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 441G - ";T9$;
Print #0; Tab 50;"BILL TO  12 MONTH SALES REPORT";
If SCALE > 1 Print #0;" ( scaling factor of";SCALE;")" Else Print #0;" "
Print #0; Tab 53;J2$
Print #0;" "
Print #0; Tab 1;"CUST #";
Print #0; Tab 8;"NAME";
Print #0; Tab 36;
For I = 1 To 12
  Print #0;MTH$[I * 3 - 2,I * 3];"    ";
Next I
Print #0; Tab 120;"TOTAL"
Print #0;" "
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND2: Rem BILL-TO CUSTOMER NUMBER NOT FOUND- GIVE MESSAGE
e$ = "AN INVALID CUSTOMER BILL-TO NUMBER HAS BEEN FOUND IN" 
e$=e$,"CUSTOMER NUMBER: ",C1[1],"."
error 10000
!
! - Print @0,15;'CE';
! - Print @0,15;'CL';"AN INVALID CUSTOMER BILL-TO NUMBER HAS BEEN FOUND IN"
! - Print @0,16;'CL';"CUSTOMER NUMBER: ";C1[1];".  "
! - Print @0,17;'CL';"PLEASE CORRECT THE PROBLEM IN PROGRAM 101 & THEN RE-RUN"
! - Print @0,18;'CL';"THIS PROGRAM."
! - Print @0,19;'CL';
! - Print @0,20;"PRESS <CR> TO EXIT ";'CL';
! - Input ""J$
OUTEND: Rem EXIT ROUTINE
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
end
!
! - Print 'CS'
! - Close #2,#3
! - Chain "MX441"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
Gosub L_2100 \ Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
Goto OUTEND
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
