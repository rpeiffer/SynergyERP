!    dxblockdefaults.dl4 - builds page block user defaults file
!
!    "dxblockdefaults.bas" 1.0 02/10/2010
!
! loadsave -w -n 100,10 -o dxblockdefaults.dl4 src/dxblockdefaults.src
!
!    All rights reserved.    (C) Copyright 2010 by:
!    Dynamic Concepts, Inc.   Aliso Viejo, California USA
!
!    "@(#) dxblockdefaults.bas 1.0@(#)"
!
!
declare intrinsic sub findf
declare intrinsic function findchannel
! *declare external libs & subs & functions
external lib "dxblockgeneral.lib" !general routines
declare external sub blocksuberr,blockreadsystemfile
declare external function blockgetprogrampath$
!
include "src/dxblockfiles.bsh"
!
Def Struct defaultskey1      :Key "ID" + Unique
 Member userid$[8]  :Key "Userid"
 Member ID$[8]		:Key "ID"
 Member 1%,Seq		:Key "Seq"
End Def
!
!
!
!
Function CreateDir(dir$,type$)
  Dim 1%,found,itslen,ndir$[60]
  ndir$ = dir$
  itslen = Len(ndir$)
  If ndir$[itslen] = "/" or ndir$[itslen]="\\"
    ndir$[itslen] = ""
  End If
  Call FindF(ndir$,found)
  If Not(found)
    ! We have to build the directory.
    Try
    Build #0,ndir$ As "directory"
      Close #0
    Else
    Print Msc$(2);" building ";ndir$;" directory for ";type$;" files!"
      Errclr
     Error 10000
    End Try
  End If
End Function found ! CreateDir
!-----------------------------------------------------------------
!
External Sub BackUp(FileDir$,BackupDir$,Dataset$,FileType$)
  Dim 1%,foundit
  ! Backs up the dataset if it exists in Filesdir directory
  ! into "old"Filesdir directory after removing older backup copy
  !
  Dim Target$[93],Temp$[93]
  Target$ = BackUpdir$ +  Dataset$
  If FileType$ = "F" let Target$ = Target$ + ".dbf"
  Try
      Kill Target$
  Else
    If Spc(8) <> 42
      Print Msc$(2);" in clearing old ";Target$
      Error 10000
      Exit Sub
    End If
  End Try
  Temp$ = Target$
  Target$ = FileDir$ +  Dataset$
  If FileType$="F" let Target$ = Target$ + ".dbf"
  Call FindF(Target$,foundit)
  If Not(foundit)  Exit Sub ! nothing to copy
  existed=createdir(backupdir$,"backup") !build dir if needed
  Target$ = Target$ + " " + Temp$
  Try
   Duplicate Target$
    Print "Copying ";Target$
  Else
   Print Msc$(2);" in making backup file ";Target$;" on line ";Spc(10)
    Error 10000
  End Try
End Sub
!
!    Name:     CreateBlockDefaults() - create a new blockdefaults file
!    Synopsis: Call CreateBlockDefaults(E$,FileName$,Drvr$)
!              Creates a new blockdefaults file using the Drvr$ class.
!    Return value:
!        Success: E$=""
!        Failure: E$<>"", Error 10000
!
External Sub CreateBlockDefaults(E$,FileName$,Drvr$)
 !
 Dim BlockDefaults. As blockdefaults
 Dim DefaultsKey1. As defaultskey1
 Dim tmp$[95]
 !
Try
 Chan=findchannel()
  Print "Building ";FileName$
 tmp$=FileName$,"!"
 Build #Chan,tmp$ As Drvr$
  Define Record #Chan;BlockDefaults.
  Add Index #Chan,1;DefaultsKey1.
  close #Chan
 Else
 if spc(8) <> 10000
   call blocksuberr(e$,Spc(8),Spc(10),Msc$(2))
  end if
  error 10000
 End Try
End Sub !CreateBlockDefaults
!
!
!
! **main procedure
!
!
Dim e$[500] !error
Try
 Dim config. as blockconfig
 Dim filename$[93],backupdir$[80],ndir$[80]
 ! need to get filenames and drvr from dxsystem.txt
 !
 !read system file parameters
 Call blockreadsystemfile(e$,config.)
 !
 config.filebut$="blockdefaults"  !!!!!!!!!!!!!!hardcode the defaults file name!!!
 !
 !backup any existing files first
 ndir$ = config.filedir$
 If ndir$[len(ndir$)] = "/" or ndir$[len(ndir$)]="\\"
    ndir$[len(ndir$)] = ""
 End If
 pos1 = pos(ndir$,="/",-1)
 pos2 = pos(ndir$,="\\",-1)
 if pos1=0 let pos1=pos2
 backupdir$="old",config.filedir$
 if pos1 let backupdir$=config.filedir$[1,pos1],"old",config.filedir$[pos1+1]
 !
 Call backup(config.filedir$,backupdir$,config.filebut$,config.filetype$)
 !
 !build the files

 Call CreateBlockDefaults(e$,config.filedir$+config.filebut$,config.drvr$)
 If config.filetype$="F"
 filename$ = config.filedir$ + config.filebut$ + ".dbf <666>"
 Modify filename$
 End If
 !
 !
 Print "DynamicXport Page Definitions User Defaults database file created!"
Else
 ! error routine
  if spc(8)<>10000
   call blocksuberr(e$,spc(8),spc(10),msc$(2))
  end if
   print e$
End Try