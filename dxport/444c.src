! >>> Program 444c
!
! description Salesman 12 Month Sales
!
! loadsave -w -n 100,10 -o prog/dxport/444c.dl4 src/444c.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 31, 2001  16:21:09
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx444c.src (univ2) [kag] {07613}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX444C - SALESMAN 12 MONTH SALES
Rem AUTHOR: DAVE  DEC 29, 1987
Rem LAST UPDATE: NATE 11/19/93
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,MONTH_[4],MTH$[108]
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim C1$[118]
Dim 1%,PGP
Dim 2%,C1[12],SCALE
Dim 3%,S1[12,2],S2[12,2],Z1[12,2],Z2[12,2],GP1[12],GP2[12],LP[12]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,I,F,X1[1],C0[1],TABS[12],ARMONTH,BOYMONTH,2%,X2,3%,J,X3,T8[12],T9[12,4]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26]
Def FNR(X) = Sgn(X) * (Int(Abs(X) + .5))
For J = 2 To 3
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;J1$;
SCALE = 1
Mat Read #1,0,120;ARMONTH; \ Mat Read #1,51,74;BOYMONTH;
Mat Read #1,0,100;J8$;
Data "1824","2048"
For I = 1 To 12 \ Read TABS[I] \ Next I
Data "18","27","36","45","54","63","72","81","90","99","108","117"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) 
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 21
!
MONTH_[1] = 1;MONTH_[2] = 0 \ rem ! - Call "UTMONTHS",MONTH_[],MTH$
Call UTMonths(e$,MONTH_[],MTH$,BOYMONTH) ! set up month headers
!
!
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"444c",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("k2",K2$) ! starting salesman
Call dxget("k3",K3$) ! ending salesman
Call dxget("year_",tmp$) \ X1=tmp$ ! year, 1=this, 2=last, 3=both, 4=diff only
Call dxget("sales",tmp$) \ X1[1]=tmp$ ! sales, 1=units, 2=dollars 
Call dxget("scale",tmp$) \ scale=tmp$ ! scaling factor
Call dxget("pgp",tmp$) \ if tmp$="" let pgp=0 else pgp=-1 ! print gr profit
!!!  dx end
!
X2=K2$ \ K2$ = X2 Using "###"
if X2<0 or X2>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
!
if K3$="" let K3$="999"
X2=K3$ \ K3$ = X2 Using "###"
if K3$<K2$ or X2>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
F = X1[1] - 1 ! sales
!
if scale<1 let scale=1
if scale>10000 let scale=10000
!
K1$ = K2$ \ J1 = 70 \ J2 = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

! - L_900: Rem GET RANGES
! - Print @0,18;"ENTER STARTING SLSM, <CR> FOR ALL,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - If K2$ = "" Let K3$ = "999" \ Goto L_970
! - X2 = K2$ \ K2$ = X2 Using "###"
! - Print @0,19;"ENTER ENDING   SLSM, <CR> FOR LAST,   E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "999"
! - X2 = K3$ \ K3$ = X2 Using "###"
! - L_970: If K2$ <= K3$ Goto L_990
! - Print @0,18;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: K1$ = K2$ \ J1 = 70 \ J2 = 0
! - L_1000: Print @0,20;'CE';"SELECTIONS:  1: THIS YEAR,  2: LAST YEAR,  3: BOTH,  4: DIFF ONLY ";
! - Input ""J$
! - If Len(J$) > 2 Goto L_1000
! - X1 = J$ \ If X1 < 1 Goto L_1000
! - If X1 > 4 Goto L_1000
! - L_1040: Print @0,21;'CE';"SELECT:  1: UNITS,  2: DOLLARS ";
! - Input ""J$ \ If Len(J$) > 1 Goto L_1040
! - X1[1] = J$ \ If Not(X1[1]) Goto L_1040
! - If X1[1] > 2 Goto L_1040
! - If X1[1] < 1 Goto L_1040
! - F = X1[1] - 1
! - If X1[1] = 1
! -   Print @0,22;'CE';"ENTER SCALING FACTOR FOR QUANTITIES OR <CR> FOR DEFAULT OF 1:";
! -   Input ""J$
! -   SCALE = J$;SCALE = Int(SCALE)
! -   If SCALE < 1 Let SCALE = 1
! -   If SCALE > 10000 Let SCALE = 10000
! - End If 
! - If X1 <> 4
! -   Print @0,22;'CL';"PRINT GROSS PROFIT FIGURES (Y/<CR>),   E: TO EXIT : ";
! -   Input ""J$ \ If J$ = "E" Goto OUTEND
! -   If J$[1,1] = "Y"
! -     PGP = -1
! -   Else 
! -     PGP = 0
! -   End If 
! - Else 
! -   PGP = 0
! - End If 
!
! *** Process Section
!
if j8 ! dx xml headings
  tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$
  tmp$=tmp$,"STATE",fdel$,"TYPE",fdel$
  For I = 1 To 12
    tmp$=tmp$,MTH$[I * 3 - 2,I * 3],fdel$
  Next I
  tmp$=tmp$,"TOTALS",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
J2$ = " ",J2$
J2$ = "SALES - "
If X1[1] = 1 Let J2$ = J2$,"UNITS"
If X1[1] = 2 Let J2$ = J2$,"DOLLARS"
! - Print @0,23;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #2,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;C1$;
Mat S1 = Zer \ Mat S2 = Zer
Mat Read #3,R1,4;Z1;
Mat Read #3,R1,238;Z2;
For I = 0 To 12 \ Z1[I,0] = Int(FNR(Z1[I,0] / SCALE));Z2[I,0] = Int(FNR(Z2[I,0] / SCALE)) \ Next I
Gosub L_2500 
Gosub L_2600
T8 = 0 \ S1[0,F] = 0 \ S2[0,F] = 0
For I = 1 To 12
  T8[0] = T8[0] + (S1[I,F] - S2[I,F]) \ T8[I] = 0
  S1[0,F] = S1[0,F] + S1[I,F] \ S2[0,F] = S2[0,F] + S2[I,F]
  T8[I] = T8[I] + (S1[I,F] - S2[I,F])
Next I
Mat GP1 = Zer \ Mat GP2 = Zer \ GP1 = 0;GP2 = 0
For I = 1 To 12
  GP1[I] = FNR(S1[I,1] - S1[I,2])
  GP2[I] = FNR(S2[I,1] - S2[I,2])
  GP1[0] = GP1[0] + GP1[I] \ GP2[0] = GP2[0] + GP2[I]
Next I
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
For I = 0 To 12
  T9[I,2] = T9[I,2] + T8[I]
  T9[I,0] = T9[I,0] + S1[I,F]
  T9[I,1] = T9[I,1] + S2[I,F]
  T9[I,3] = T9[I,3] + GP1[I]
  T9[I,4] = T9[I,4] + GP2[I]
Next I
Return 
!
L_2500: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH
For I = 0 To 12
  For X6 = 0 To 2
    If I Let S1[I,X6] = Z1[X7,X6] Else Let S1[0,X6] = Z1[0,X6]
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_2600: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH;X8 = 0
For I = 0 To 12
  For X6 = 0 To 2
    If Not(I) Let S2[0,X6] = Z2[0,X6] \ Goto L_2640
    If Not(X8) Let S2[I,X6] = Z2[X7,X6] Else Let S2[I,X6] = Z1[X7,X6]
L_2640: Next X6
  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **"
If X1 = 1 Or X1 = 3
  Print #0; Tab 3;"THIS YEAR"; \ F = 0
  Gosub TOTAL_LINE_PRINT
End If 
If X1 = 2 Or X1 = 3
  Print #0; Tab 3;"LAST YEAR"; \ F = 1
  Gosub TOTAL_LINE_PRINT
End If 
If X1 = 3 Or X1 = 4
  Print #0; Tab 2;"DIFFERENCE"; \ F = 2
  Gosub TOTAL_LINE_PRINT
End If 
If (X1 = 1 Or X1 = 3) And PGP
  Print #0; Tab (1);"THIS YR G/P"; \ F = 3
  Gosub TOTAL_LINE_PRINT
End If 
If (X1 = 2 Or X1 = 3) And PGP
  Print #0; Tab (1);"LAST YR G/P"; \ F = 4
  Gosub TOTAL_LINE_PRINT
End If 
Print #0;"\15\";
Return 
!
TOTAL_LINE_PRINT: Print #0; Using "--------#"; Tab 13;T9[1,F];
Print #0; Using "--------#"; Tab 22;T9[2,F];
Print #0; Using "--------#"; Tab 31;T9[3,F];
Print #0; Using "--------#"; Tab 40;T9[4,F];
Print #0; Using "--------#"; Tab 49;T9[5,F];
Print #0; Using "--------#"; Tab 58;T9[6,F];
Print #0; Using "--------#"; Tab 67;T9[7,F];
Print #0; Using "--------#"; Tab 76;T9[8,F];
Print #0; Using "--------#"; Tab 85;T9[9,F];
Print #0; Using "--------#"; Tab 94;T9[10,F];
Print #0; Using "--------#"; Tab 103;T9[11,F];
Print #0; Using "--------#"; Tab 112;T9[12,F];
Print #0; Using "---------#"; Tab 121;T9[0,F]
Return 
!
L_5000: Rem PRINT LINE
if J8
  tmp1$=K1$[1,3],fdel$
  tmp1$=tmp1$,rtrim$(C1$[1,30]),fdel$
  tmp1$=tmp1$,C1$[106,107],fdel$
  !
  If X1 = 1 or X1 = 3
    tmp$=tmp1$,"THIS YEAR",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,S1[cnt,F] Using "-------#",fdel$
    Next cnt
    tmp$=tmp$,S1[0,F] Using "--------#",fdel$
    !
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  If X1 = 2 or X1 = 3
    tmp$=tmp1$,"LAST YEAR",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,S2[cnt,F] Using "-------#",fdel$
    Next cnt
    tmp$=tmp$,S2[0,F] Using "--------#",fdel$
    !
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  If X1 = 3 or X1 = 4
    tmp$=tmp1$,"DIFFERENCE",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,T8[cnt] Using "-------#",fdel$
    Next cnt
    tmp$=tmp$,T8[0] Using "--------#",fdel$
    !
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  If (X1 = 1 Or X1 = 3) And PGP
    tmp$=tmp1$,"THIS YR G/P",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,GP1[cnt] Using "-------#",fdel$
    Next cnt
    tmp$=tmp$,GP1[0] Using "--------#",fdel$
    !
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  If (X1 = 2 Or X1 = 3) And PGP
    tmp$=tmp1$,"LAST YR G/P",fdel$
    For cnt = 1 To 12
      tmp$=tmp$,GP2[cnt] Using "-------#",fdel$
    Next cnt
    tmp$=tmp$,GP2[0] Using "--------#",fdel$
    !
    call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  return
endif  
!
Print #0; Tab 1;K1$[1,3];
Print #0; Tab 5;C1$[1,30];"  ";C1$[106,107]
If X1 <> 4 And X1 <> 2
  Print #0; Tab 3;"THIS YEAR";
  For I = 0 To 12 \ LP[I] = S1[I,F] \ Next I
  Gosub LINE_PRINT
End If 
If X1 <> 1 And X1 <> 4
  Print #0; Tab 3;"LAST YEAR";
  For I = 0 To 12 \ LP[I] = S2[I,F] \ Next I
  Gosub LINE_PRINT
End If 
If X1 <> 1 And X1 <> 2
  Print #0; Tab 2;"DIFFERENCE";
  For I = 0 To 12 \ LP[I] = T8[I] \ Next I
  Gosub LINE_PRINT
End If 
If (X1 = 1 Or X1 = 3) And PGP
  Print #0; Tab (1);"THIS YR G/P";
  For I = 0 To 12 \ LP[I] = GP1[I] \ Next I
  Gosub LINE_PRINT
End If 
If (X1 = 2 Or X1 = 3) And PGP
  Print #0; Tab (1);"LAST YR G/P";
  For I = 0 To 12 \ LP[I] = GP2[I] \ Next I
  Gosub LINE_PRINT
End If 
Print #0;""
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
If X1 = 3 Let J1 = J1 + 2
If PGP Let J1 = J1 + 1
If PGP And X1 = 3 Let J1 = J1 + 1
J1 = J1 + 3 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 444C - ";T9$;
Print #0; Tab 50;"SALESMAN 12 MONTH SALES REPORT"
Print #0; Tab 53;J2$; \ If SCALE > 1 Print #0;" ( scaling factor of";SCALE;")" Else Print #0;" "
Print #0;"\15\";
Print #0; Tab 1;"SALESPERSON";
For I = 1 To 12 \ Print #0; Tab TABS[I];MTH$[I * 3 - 2,I * 3]; \ Next I
Print #0; Tab 124;"TOTALS";
Print #0;" "
Print #0;"\15\";
Return 
!
LINE_PRINT: Rem print 1 line of info
Print #0; Using "-------#"; Tab 14;LP[1];
Print #0; Using "-------#"; Tab 23;LP[2];
Print #0; Using "-------#"; Tab 32;LP[3];
Print #0; Using "-------#"; Tab 41;LP[4];
Print #0; Using "-------#"; Tab 50;LP[5];
Print #0; Using "-------#"; Tab 59;LP[6];
Print #0; Using "-------#"; Tab 68;LP[7];
Print #0; Using "-------#"; Tab 77;LP[8];
Print #0; Using "-------#"; Tab 86;LP[9];
Print #0; Using "-------#"; Tab 95;LP[10];
Print #0; Using "-------#"; Tab 104;LP[11];
Print #0; Using "-------#"; Tab 113;LP[12];
Print #0; Using "--------#"; Tab 122;LP[0]
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
! 
L_9100: Rem END OF THIS RANGE
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 12 \ For K1 = 0 To 4
    T9[K,K1] = 0
  Next K1 \ Next K
If K2$ = "" Goto OUTEND
goto OUTEND ! - was Goto L_900
! 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
