! >>> Program 129
!
! description Pricing, Special Price Report
!
! loadsave -w -n 100,10 -o prog/dxport/129.dl4 src/129.src
!
! 1.0 mm/dd/yyyy change??
! 05/2011 - have to remove browser as there are so many options it will never work
!   added X flag to blockid def
!
include "src/copyright.inc" ! dx
!
External Lib "librebates.lib"
Declare External Sub rebates
!
External Lib "ubsfunc.dl4"
Declare External Sub getcostlevels,USERCNTRL
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 19, 2003  11:38:58
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx1/mx129.src (univ2) [txc] {53223}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX129         Special Price List
Rem Author:        Roman  (02/27/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,String,Time,VerifyDate,FindF
!!Option Default Dialect IRIS1
Com 1%,COST_LEV[3],COMM_LEV,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP

!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim P$[12],A$[156],A1$[142],P60$[50],LBL$[13],Z2$[50],CNAME$[30]
Dim ITEM_LAB$[10],P9$[50],PUM$[4],CUM$[4],CCD$[14],PURGEVAL$[512]
Dim 2%,C1[5],V9[4],SPMIN,SPCOM,DESC$[16],Q0[1],DATEx,SCDATE,ECDATE
Dim 2%,SSLSM,ESLSM,SDIV,EDIV,CFC1[12],DT3[1],JWDATE,JSCDATE,JECDATE
Dim J8$[8],QUM$[4],PMASK$[15],SCRATCH$[80],MSGTXT$[75],CGPD$[30]
Dim 1%,F,X1,SPCUM[1],C3[2],UNT,SPBRK[1],2%,X2,X3,D6,RCTR,3%,J,AMOUNT,SPC4[6],PCTR
Dim 1%,LM[1],WHLM[1],SPWH,J9[3],3%,SPC5[4],BASEX,PRICE,MARK,HOLD[2]
Dim 1%,A5[10],a2$[50]
Dim 1%,STATUS,3%,REBATE_ARGS[10,4],RBCOST
Dim 1%,SPC6[4],APTYPE[8],ABTYPE[8],AMTYPE[8],3%,APFACT[8],AMQTY[8]
Dim K1$[50],K2$[6],K3$[6],K4$[12],K5$[12],X$[10],T9$[26],Z1$[50]
Dim K6$[30],3%,CFIN[8],W3[24],PREC[1],2%,B[24],C4[10],RETVAL$[512]
Dim 3%,PRPARC[3],WHMIsc[6]
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
!
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
For J = 2 To 12
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 >= 0 Open #J,J$ \ Goto L_830
  Ropen #J,J$
L_830: Next J
Data "1936","-1808","-1792","-1","-1744","-1728","-2288","-1","-1120","-304","-320"
! 2=SPCPRICE, 3=CUSTOMER, 4=PRODUCT, 6=PWHSE, 7=CCODES, 8=COMMCODE
! 10=VendTag,11=ContractH,12=RebateDtl,13=costgrp
Let j$="2/COSTGRP"+STR$(intCO)
CALL FINDF(J$,CGRP)
IF CGRP
	ROPEN #13,J$
ENDIF

call UserCntrl(userID$,A2$,A5[],ss,intCo)
call getcostlevels(e$,Cost_Lev[],IntCO,UserID$)
Comm_lev=a5[4]
Read #1,3,172;D6;
X$ = D6 Using "&&&&&&"
Call FormatDate(X$,J8$,E)!! \ If E Gosub ERR_SEARCH
X2 = D6 \ Gosub L_7820 \ X2 = 0
If X2 Let JSDATE = X2 Else Gosub L_7650
Read #1,3;CNAME$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,18,50;ITEM_LAB$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "-#########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])

If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[3] = Chf(0)
If J8 If J8 <> 49 Goto ERR_TRAP
If Err 0 Gosub ERR_TRAP
V9[3] = 58 \ If J8 Let V9[3] = 18
!
call dxsave(0,"tmp/129txt!")
!

!
CALL DXGET("K2",K2$) 
CALL DXGET("K3",K3$)  \ IF K3$="" LET K3$="999999"
CALL DXGET("K4",K4$) \  K4$=UCase$(K4$),Blank$ 
CALL DXGET("K5",K5$) \  K5$=UCase$(K5$),EndParam$
CALL DXGET("SCDATE",tmp$) \ if tmp$="" let  SCDATE=010170 else SCDATE=tmp$
CALL DXGET("ECDATE",tmp$) \  if tmp$=""  let ECDATE=123159  else  ECDATE=tmp$
CALL DXGET("SSLSM",tmp$) \  SSLSM=tmp$
CALL DXGET("ESLSM",tmp$) \ IF tmp$="" LET ESLSM=999 ELSE ESLSM=tmp$ 
CALL DXGET("SDIV",tmp$) \   SDIV=tmp$
CALL DXGET("EDIV",tmp$) \  IF tmp$="" LET EDIV=99 ELSE EDIV=tmp$ 
CALL DXGET("WCANDATE",tmp$)  \ IF tmp$="" LET WCANDATE=0 ELSE WCANDATE=1
!
X2 = K2$ \ K2$ = X2 Using "######"
X3 = K3$ \ K3$ = X3 Using "######"
If X2<0 or X2 > 999999 LET  e$="Invalid starting customer code, must be between 0 and 999999!"  \ ERROR 10000
If X3 < X2 or X3 > 999999 LET  e$="Invalid ending customer code, must be between starting customer code and 999999!"  \ ERROR 10000
!
If K5$ < K4$ Let e$ = "Invalid ending product code, must be >= than starting product code!"  \ error 10000
!
J2$ = SCDATE Using "&&&&&&"
X$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6] \ Gosub L_7800 \ SCDATE = X2
X2 = SCDATE \ Gosub L_7820 \ X2=0
JSCDATE = X2
if JSCDATE=0 let e$="Invalid starting cancel date!" \ error 10000
!
J2$ = ECDATE Using "&&&&&&"
X$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6] \ Gosub L_7800 \ ECDATE = X2
X2 = ECDATE \ Gosub L_7820 \ X2=0
JECDATE = X2
if JECDATE=0 let e$="Invalid ending cancel date!" \ error 10000
If JECDATE < JSCDATE let e$="Invalid ending cancel date, must be greater than starting cancel date!" \ error 10000  
!
if SSLSM < 0 or SSLSM > 999 let e$="Invalid starting salesman code, must be between 0 and 999!" \ error 10000
if ESLSM < SSLSM or ESLSM > 999 Let e$ = "Invalid ending salesman code, must be between starting salesman code and 999!" \ error 10000
!
if SDIV < 0 or SDIV > 99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
if EDIV < SDIV or EDIV > 99 Let e$ = "Invalid ending division, must be between starting division and 99!" \ error 10000
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"129",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!!L_900: Rem "=================================== get ranges
!!Call "Progdflt","129","",77,RETVAL$
!!Gosub DISPLAY_SCREEN
!!WHAT_TO_DO: Rem well what!
!!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults  E: exit  ";
!!Input ""Z1$ \ Call String(1,Z1$)
!!!!!!!!!!!!!!!!!!!!!
!!If Z1$ = "S"
!!ASK_SAVE: !!Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
!!  Input ""Z2$ \ Call String(1,Z2$)
!!  If Z2$ = "" Goto WHAT_TO_DO !!Print @0,22;'CL'; \ Goto WHAT_TO_DO
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  !!Call "Progdfltw","129","",77,RETVAL$,URECFLAG
!!  !!Print @0,22;'CL';
!!End If 
!If Z1$ = "R"
!!  For LOOP_ = 1 To 6
!!    CHOICE = LOOP_
!!    Gosub MAKE_CHOICE
!!  Next LOOP_
!!  Goto WHAT_TO_DO
!!End If 
!!If Z1$ = "P" Goto PROCESS
!!If Z1$ = "E" Goto OUTEND
!!CHOICE = Z1$
!!Gosub MAKE_CHOICE
!!Goto WHAT_TO_DO
!!MAKE_CHOICE: Rem what field do we want?
!!!!If Spc(13) = 11   @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On CHOICE Gosub SEL_CUST,SEL_PROD,SEL_DATE,SEL_SLSM,SEL_DIV,SEL_CANCEL
!!!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!
PROCESS: Rem "======================================== start sort
!
if j8 ! had to disable blockid as there can be 21+ flds (based on sysflg & field options)
  tmp$="CUST CODE ",fdel$
  tmp$=tmp$,"NAME",fdel$
  tmp$=tmp$,"ITEM CODE",fdel$
  tmp$=tmp$,"DESCRIPTION 1",fdel$
  tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"START DATE",fdel$
  tmp$=tmp$,"FACTOR",fdel$
  tmp$=tmp$,"UM",fdel$
  tmp$=tmp$,"COST",fdel$,"COST UM",fdel$
  ! tmp$=tmp$,"UM TYPE",fdel$
  tmp$=tmp$,"QTY",fdel$
  tmp$=tmp$,"SALESMAN",fdel$
  tmp$=tmp$,"DIVISION",fdel$
  tmp$=tmp$,"CANCEL DATE",fdel$ ! fld14
  tmp$=tmp$,"TYPE",fdel$
  tmp$=tmp$,"PRICE TYPE",fdel$
  tmp$=tmp$,"PRICE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF 
!
K1$ = " ",K1$ \ K1$ = K2$
!!Print @0,22;"PRINTING... please wait";'CE'; \ Signal 3,0
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = 0 \ V9[1] = 90 \ RCTR = 0
!!If J8 Print 'CS';
L_2040: Search #2,3,1;K1$,R1,E
If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
Rem {begin src/inc/rtn.printmsg.i}
!!If Not(SCRPRT)
!!  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    !!Print Using "#######";@25,22;PCTR;" Records Printed";
!!    !!Print Using "   Page ####";V9[0];
!!  End If 
!!End If 
Rem {end rtn.printmsg.i}
ALLPROD = 0;COMDY = 0;SIZE_ = 0;GRP=0
If K1$[1,6] > K3$[1,6] Goto L_9100
If K1$[7,18] < K4$ Goto L_2040
If K1$[7,18] > K5$ Let K1$[7,18] = "zzzzzzzzzzzz" \ Goto L_2040
If K1$[7,7] = "#" Let ALLPROD = 99
If K1$[7,7] = "*" Let COMDY = 99
If K1$[7,7] = "&" Let SIZE_ = 99
if k1$[7,7]="-" let GRP=99
FLG = 0 \ If ALLPROD Or COMDY Or SIZE_ Or GRP Let FLG = 1
Read #2,R1,0;P$;
Mat Read #2,R1,12;C1;
If C1[4] = 0 If WCANDATE = 0 Goto L_2040
X2 = C1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If WCANDATE And C1[4] = 0 Goto L_2110
If JWDATE < JSCDATE Goto L_2040
If JWDATE > JECDATE Goto L_2040
L_2110: Mat Read #2,R1,36;SPCUM;
Read #2,R1,118;SPWH;
Mat Read #2,R1,40;C3;
Mat Read #2,R1,46;SPC4;
Mat Read #2,R1,126;SPBRK;
Read #2,R1,130;SPMIN; \ Read #2,R1,134;SPCOM;
Mat Read #2,R1,138;SPC5;
mat read #2,r1,168;spc6;
mat read #2,r1,178;aptype;
mat read #2,r1,196;abtype;
mat read #2,r1,214;amtype;
mat read #2,r1,232;apfact;
mat read #2,r1,286;amqty;
Gosub L_3000
!
If SSLSM And (CFC1[2] < SSLSM Or CFC1[2] > ESLSM) Goto L_2040
If SDIV And (CFIN[4] < SDIV Or CFIN[4] > EDIV) Goto L_2040
Gosub L_3500
UNT = SPCUM[0] \ Gosub L_6400 \ PUM$ = X$
UNT = SPCUM[1] \ Gosub L_6400 \ CUM$ = X$
HOLD[1] = SPC5[1];HOLD[2] = SPC5[2]
If C3[2] Let UNT = C3[2] \ Gosub L_6400 \ QUM$ = X$
If C3 <> 3 Goto L_2190
HOLD = SPC5[0]
CNVTU[0] = 0 \ CNVTU[1] = SPCUM[0] \ CNVTU[2] = 2
CNVTA = SPC5[0] \ Gosub L_6900 \ SPC5[0] = FNP(AMOUNT)
L_2190: CNVTU[0] = 0 \ CNVTU[1] = SPCUM[1] \ CNVTU[2] = 2
CNVTA = SPC5[2] \ Gosub L_6900 \ SPC5[2] = FNP(AMOUNT)
CNVTU[0] = 0 \ CNVTU[1] = SPCUM[1] \ CNVTU[2] = 2
If SPC5[3] = 3 Let CNVTA = SPC5[1] \ Gosub L_6900 \ SPC5[1] = FNP(AMOUNT)
If Not(FLG) Gosub L_2500
X2 = C1[2] \ Gosub L_7700
If V9[1] > V9[3] Gosub L_5800
Gosub L_5000
Goto L_2040
L_2500: Rem CALC WHATEVER ON SINGLE ITEM

If C3[0] > 0 If C3[0] < 4 Goto L_2520
PRICE = 0;MARK = 0
Return 
L_2520: Rem IF FIXED GIVE MARKUP, ELSE GIVE PRICE
If C3[0] = 3 Goto L_2600
On C3[1] Goto L_2540,L_2545,L_2550,L_2560,L_2560,L_2560,L_2560,L_2560,L_2560,L_2565
On C3[1] - 10 Goto L_2570,L_2530,L_2530,L_2580,L_2585
L_2530: Rem "in case none
PRICE = 0;MARK = 0
Return 
L_2540: basex = C4[4] \ If WHSE And W3[18] Let basex = W3[18]
Goto L_2700
L_2545: BASEX = B[8] \ If WHSE And W3[17] Let BASEX = W3[17]
Goto L_2700
L_2550: BASEX = B[10] \ If WHSE And W3[16] Let BASEX = W3[16]
Goto L_2700
L_2560: BASEX = A[C3[1] + 16] \ If WHSE And W3[C3[1] + 15] Let BASEX = W3[C3[1] + 15]
Goto L_2700
L_2565: BASEX = HOLD[2] \ Goto L_2700
L_2570: BASEX = HOLD[1] \ Goto L_2700
L_2580: Rem "Rebate Cost
Gosub SP_CHKREBATE
BASEX = RBCOST \ Goto L_2700
Return
L_2585: ! Net po cost
Basex=PRPARC[2] \ if whse and whmisc[2] let basex=whmisc[2]
goto L_2700
L_2600: Rem FIXED - CALC MARKUP ON PROD LOAD
BASEX = B[8] \ If WHSE And W3[17] Let BASEX = W3[17]
If BASEX <= 0 Let BASEX = 0
PRICE = HOLD - BASEX 
MARK = 0
If BASEX  Let MARK = FNR(PRICE * 100 / BASEX )
Return 
L_2700: Rem NOW PERCENT WHATEVER
PRICE = 0 \ If BASEX  <= 0 Let BASEX  = 0
If C3[0] = 1 Let PRICE = (BASEX  * ((100 + SPC5[0]) / 100))
If C3[0] = 2 and spc5[0]<>100 Let PRICE = (BASEX  / ((100 - SPC5[0]) / 100))
CNVTU[0] = 0;CNVTU[1] = SPCUM[0];CNVTU[2] = 2;CNVTA = PRICE
Gosub L_6900 \ PRICE = AMOUNT
Return 
L_3000: Rem "================================================== get customer
CFC1[2] = 0;CFIN[4] = 0
J2$ = " ",J2$ \ J2$ = C1 Using "######"
A1$[31] = "*** NOT FOUND ***"
Search #3,2,1;J2$,R3,E
!!If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_3070
Mat Read #3,R3;A1$;
Mat Read #3,R3,142;CFC1;
Mat Read #3,R3,544;CFIN;
L_3070: Return 
L_3500: Rem "================================================== get product
A$ = " ",A$
If ALLPROD Let A$[9] = "-- ALL PRODUCTS -- " \ Return 
If COMDY Goto L_3600
If SIZE_ Goto L_3700
if GRP goto L_3750:
J2$ = " ",J2$ \ J2$ = P$
A$[9] = "*** NOT FOUND ***"
Search #4,2,1;J2$,R4,E !!\ If E > 1 Gosub ERR_SEARCH
If E = 1 Let FLG = 1
If E = 1 Goto L_3590
WHSE = 0
Mat Read #4,R4;A$;
Mat Read #4,R4,156;B;
Mat Read #4,R4,256;A;
Mat Read #4,R4,512;PFU1;
Mat Read #4,R4,554;PFU2;
Mat read #4,R4,596;PRPARC;
Mat Read #4,R4,620;LM; \ PREC[0] = R4
Mat Read #4,R4,894;C4;
If P9$[32,32] = "Y" Gosub L_3800 \ Gosub L_69000
Gosub L_12400
L_3590: Return 
L_3600: Rem READ COMDY
If Not(COMDY) Return 
J2$ = " ",J2$ \ J2$ = P$
A$[9] = "*** COMDY NOT ON FILE "
Search #8,2,1;J2$,R4,E
If E = 1 Return 
!!If E > 1 Gosub ERR_SEARCH
Mat Read #8,R4,0;DESC$;
A$[9] = DESC$
Return 
L_3700: Rem READ SIZE
If Not(SIZE_) Return 
UNT = P$[6,9]
Read #7,UNT;CCD$;
A$[9] = CCD$[1,10]
Return
L_3750: ! cost group
if NOT(GRP) return
A$=" ",A$;a$[9]="COST GROUP"
IF NOT(CGRP) RETURN ! NO FILE FOUND?!
LET J2$=" ",J2$ \ LET J2$=P$
LET A$[9]="*** COST GROUP NOT ON FILE "
SEARCH #13,2,1;J2$,R4,E
IF E=1 RETURN 
!!IF E>1 GOSUB Err_Search:
MAT  READ #13,R4,12;CGPD$;
LET A$[9]=CGPD$
LET A$[63]="COST GROUP PRICING"
RETURN
L_3800: Rem GET PRODWHSE
K6$ = " ",K6$;K6$ = A$[140,151];WHSE = SPWH
If WHSE <= 0 Let WHSE = 1
K6$[13,14] = WHSE Using "##"
Search #6,2,1;K6$,R6,E !!\ If E > 1 Gosub ERR_SEARCH
If E Goto L_3850
Mat Read #6,R6,78;W3;
Mat Read #6,R6,842;WHLM;
Mat read #6,R6,800;whmisc;
Return 
L_3850: Rem NOT FOUND
WHLM[0] = 0;WHLM[1] = 0
For I = 0 To 24
  W3[I] = 0
Next I
WHSE = 0
Return 
!
L_4000: Rem "================================================= done! purge?
goto OUTEND
!!X9 = 0;NOCAN = WCANDATE
!!Print @0,18;'CE RB BD BR';"!!!!!!       C A U T I O N       C A U T I O N       C A U T I O N         !!!!!!";
!!Print @0,19;"     IF YOU WISH TO CONTINUE WITH THE PURGE, PLEASE NOTE THAT IT WILL PURGE ALL "
!!Print @0,20;"     ITEMS WITHIN THE ABOVE RANGES ENTERED.                                     ";'ER ED'
!!Print @0,23;'CL';"V:view previous purge selections ";
!!Print @0,21;'CL';"PURGE ALL ITEMS (YES/N/V)? ";
!!Input ""J$ \ Call String(1,J$)
!!If J$ = "N" Goto L_9140
!!If J$ = "V"
!!  Gosub VIEW_PREVIOUS_PURGE
!!  Goto L_4000
!!End If 
!!If J$ <> "YES" Goto L_4000
!!If K2$[1,6] = "     0" And K3$[1,6] = "AAAAAA" Let X9 = X9 + 1
!!PURGEVAL$ = " ",PURGEVAL$ \ PURGEVAL$[1,58] = RETVAL$[1,58]
!!PURGEVAL$[59,59] = "0"
!!If SCDATE Goto L_4060
!!If K4$[1,12] = "            " And K5$[1,12] = "}}}}}}}}}}}}" Let X9 = X9 + 1
!!If X9 = 2 Goto L_4060
!!L_4030:
!!Print @0,22;'CE';"Include Special Prices with a Cancel Date ''NONE'' (YES/N,  E: exit)? ";
!!Input ""J$ \ Call String(1,J$)
!!If J$ = "E" Goto L_900
!!If J$ <> "YES" If J$ <> "N" Goto L_4030
!!NOCAN = 0
!!If J$ = "YES" Let NOCAN = 9
!!If J$ = "YES" Let PURGEVAL$[59,59] = "1"
!!L_4060:
!!Print @0,22;'CE';"PURGING ... please wait";
!!URECFLAG = 1
!!Call "progdfltw","129purge","",77,PURGEVAL$,URECFLAG
!!K1$ = " ",K1$;K1$ = K2$;RCTR = 0
!!L_4080: Search #2,3,1;K1$,V1,E
!!If K1$[1,1] = "C" Let E = 2
!!If E = 2 Goto L_4200
!!!!If E Gosub ERR_SEARCH
!!If K1$[1,6] > K3$[1,6] Goto L_4200
!!If K1$[7,18] < K4$ Goto L_4080
!!If K1$[7,18] > K5$ Let K1$[7,18] = "}}}}}}}}}}}}" \ Goto L_4080
!!Mat Read #2,V1,12;C1;
!!Gosub L_3000
!!If SSLSM And (CFC1[2] < SSLSM Or CFC1[2] > ESLSM) Goto L_4080
!!If SDIV And (CFIN[4] < SDIV Or CFIN[4] > EDIV) Goto L_4080
!!If NOCAN = 0 And C1[4] = 0 Goto L_4080
!!X2 = C1[4] \ Gosub L_7820 \ X2 = 0
!!JWDATE = X2
!!If NOCAN And C1[4] = 0 Goto L_4140
!!If JWDATE < JSCDATE Goto L_4080
!!If JWDATE > JECDATE Goto L_4080
!!X2 = C1[2] \ Gosub L_7820 \ X2 = 0
!!JWDATE = X2
!!If JWDATE > JSDATE Goto L_4080
!!L_4140: Rem "delete it
!!Search #2,5,1;K1$,V2,E
!!!!If E Gosub ERR_SEARCH
!!E = 3 \ Search #2,1,0;K1$,V1,E
!!!!If E Gosub ERR_SEARCH
!!RCTR = RCTR + 1
!!Goto L_4080
!!L_4200: Rem DONE
!!Print @0,22;RCTR;" ITEM(S) DELETED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!Goto L_9140
!
L_5000: Rem "================================================== detail line
!
IF J8
  tmp$=C1[0] Using "######",fdel$!!CUST CODE    fld1
  tmp$=tmp$,A1$[31,46] ,fdel$ !!NAME			fld2
  If Not(FLG) ! found
	tmp$=tmp$,P$[1,12],fdel$ \ Goto L_5035	!	fld3
  Else ! non- or no prod found
    if not(Allprod) and not(comdy) and not(size_) and not(grp)
		tmp$=tmp$,P$[1,12],fdel$ \ goto L_5035 !fld3
	Endif
  Endif
  If ALLPROD tmp$=tmp$, "ALL PRODUCTS",fdel$
  If COMDY tmp$=tmp$,"*COMDY ",P$[1,4],fdel$!!!ITEM CODE
  If SIZE_ tmp$=tmp$,"*SIZE ",P$[1,4],fdel$
  IF GRP tmp$=tmp$,"-CGRP ",P$[1,11],fdel$ 
  !!GOSUB  L_5035
  !!call addtostr(e$,rstr$,tmp$+rdel$)
  !!return 
ELSE
  Print #0; Using "######";C1[0];!!CUST CODE
  Print #0; Tab 8;A1$[31,46]; !!NAME 
  If Not(FLG) Print #0; Tab 26;P$[1,12]; \ Goto L_5035
  If ALLPROD Print #0; Tab 26;"ALL PRODUCTS";
  If COMDY Print #0; Tab 26;"*COMDY ";P$[1,4];" ";!!!ITEM CODE
  If SIZE_ Print #0; Tab 26;"*SIZE ";P$[1,4];"  ";
  IF GRP PRINT #0; TAB 26;"-";P$[1,11];
END IF 
L_5035:
if j8 
  tmp$=tmp$,rtrim$(A$[9,36]),fdel$!!!DESCRIPTION1  fld4
  tmp$=tmp$,rtrim$(A$[63,90]),fdel$ !!!DESCRIPTION2  fld5
  If C1[2] tmp$=tmp$,X$[1,8],fdel$ Else tmp$=tmp$,"NONE",fdel$!!!START CANCEL DATE fld6
  If C3[0] = 3 Or C3[0] = 7 tmp$=tmp$,SPC5[0] Using PMASK$,fdel$
  If C3[0] <> 3 If C3[0] <> 7 tmp$=tmp$,SPC5[0] Using "###.###%",fdel$!!!FACTOR TYPE fld7
  If C3[0] <> 7 tmp$=tmp$,PUM$,fdel$  Else tmp$=tmp$,"",fdel$!!!PRICE UM  fld8
  If COST_LEV[1] > 0 
	If SPC5[3] = 4 tmp$=tmp$, "STANDARD",fdel$!
	If SPC5[3] = 1 If SPC5[1] >= 0 tmp$=tmp$, SPC5[1]Using " ###.##% MARKUP",fdel$
	If SPC5[3] = 1 If SPC5[1] < 0 tmp$=tmp$, SPC5[1] Using "###.##%  DISC",fdel$
	If SPC5[3] = 2 If SPC5[1] < 0 tmp$=tmp$,SPC5[1] Using "$$#.##  DISC $" ,fdel$
	If SPC5[3] = 2 If SPC5[1] >= 0 tmp$=tmp$, SPC5[1] Using "$$#.## MARKUP",fdel$
	If SPC5[3] = 3 tmp$=tmp$, SPC5[1] Using PMASK$,fdel$ ! fld9
	tmp$=tmp$, CUM$,fdel$ !  Else tmp$=tmp$,"",fdel$ ! fld10
  Else
	tmp$=tmp$,"",fdel$,"",fdel$ ! fld9-10
  Endif
  tmp$=tmp$,SPC4[0] Using "######.#",fdel$ ! fld11
  V9[1] = V9[1] + 1
  tmp$=tmp$, CFC1[2]Using "###",fdel$	!	fld12
  tmp$=tmp$, CFIN[4]Using "##",fdel$	!	fld13
  X2 = C1[4] \ Gosub L_7700
  If C1[4] tmp$=tmp$,X$[1,8],fdel$ Else tmp$=tmp$,"NONE",fdel$!!!!CANCEL DATE  fld14
  let fldsnt=13
  Gosub L_8000 ! fld15 - price type
  If C3[0] = 1 Or C3[0] = 2 Gosub L_8100 ! finish prc type
  
  If COST_LEV[1] > 0 
   if SPC5[3] < 4 ! fld16
    If SPC5[4] = 1 tmp$=tmp$," OF BASE  COST ",fdel$ \ fldsnt=fldsnt+1
    If SPC5[4] = 2 tmp$=tmp$," OF LOADED COST ",fdel$ \ fldsnt=fldsnt+1
    If SPC5[4] = 3 tmp$=tmp$," OF LAST COST ",fdel$ \ fldsnt=fldsnt+1
    If SPC5[4] = 4 tmp$=tmp$," OF REBATE COST ",fdel$ \ fldsnt=fldsnt+1
	if spc5[4]=5 tmp$=tmp$," OF REDI COST ",fdel$ \ fldsnt=fldsnt+1
	if spc5[4] = 6 tmp$=tmp$," OF NETPO COST ",fdel$ \ fldsnt=fldsnt+1
   Endif
  
	If SPC5[3] = 3 tmp$=tmp$," FLAT COST ",fdel$ \ fldsnt=fldsnt+1
	If SPC5[3] = 5 tmp$=tmp$," FREE GOODS ",fdel$ \fldsnt=fldsnt+1
  End If 
  ! If COMM_LEV < 1000 Goto L_5195
  If SPCOM tmp$=tmp$, SPCOM Using "###.##","%",fdel$ Else tmp$=tmp$,"std",fdel$ ! fld17
  tmp$=tmp$,SPC4[1] Using "######.#",fdel$ \ fldsnt=fldsnt+2 ! fld18
ELSE
  Print #0; Tab 39;A$[9,36];!!!DESCRIPTION
  If C1[2] Print #0; Tab 69;X$[1,8]; Else Print #0; Tab 71;"NONE";!!!START CANCEL DATE 
  If C3[0] = 3 Or C3[0] = 7 Print #0; Using PMASK$; Tab 79;SPC5[0];
  If C3[0] <> 3 If C3[0] <> 7 Print #0; Using "###.###%"; Tab 79;SPC5[0];!!!FACTOR TYPE
  If C3[0] <> 7 Print #0; Tab 93;PUM$;!!!PRICE UM
  If COST_LEV[1] > 0 If SPC5[3] = 4 Print #0; Tab 100;"STANDARD";
  If COST_LEV[1] > 0 If SPC5[3] = 1 If SPC5[1] >= 0 Print #0; Using " ###.##% MARKUP"; Tab 100;SPC5[1];
  If COST_LEV[1] > 0 If SPC5[3] = 1 If SPC5[1] < 0 Print #0; Using "###.##%  DISC"; Tab 100;SPC5[1];
  If COST_LEV[1] > 0 If SPC5[3] = 2 If SPC5[1] < 0 Print #0; Using "$$#.##  DISC $"; Tab 100;SPC5[1];
  If COST_LEV[1] > 0 If SPC5[3] = 2 If SPC5[1] >= 0 Print #0; Using "$$#.## MARKUP"; Tab 100;SPC5[1];
  If SPC5[3] = 3 If COST_LEV[1] > 0 Print #0; Using PMASK$; Tab 100;SPC5[1];!!!!QTY
  If COST_LEV[1] > 0 Print #0; Tab 119;CUM$;!!!PRICE UM
  PRINT #0; USING "######"; TAB 124;SPC4[0];
  Print #0;"" \ V9[1] = V9[1] + 1
  Print #0; Using "SALESMAN ###"; Tab 5;CFC1[2];!!!!!!!!!!!!!!!!!!!!!
  Print #0; Using "DIVISION ##"; Tab 20;CFIN[4];!!!!!!!!!!!!!!!!!!!!
  Print #0; Tab 39;A$[63,90]; !!!DESCRIPTION2
  X2 = C1[4] \ Gosub L_7700
  If C1[4] Print #0; Tab 69;X$[1,8]; Else Print #0; Tab 71;"NONE";!!!!DATE
  Gosub L_8000
  If C3[0] = 1 Or C3[0] = 2 Gosub L_8100
  If COST_LEV[1] > 0 And SPC5[3] < 3
    If SPC5[4] = 1 Print #0; Tab 100;" OF BASE  COST ";
    If SPC5[4] = 2 Print #0; Tab 100;" OF LOADED COST ";
    If SPC5[4] = 3 Print #0; Tab 100;" OF LAST COST ";
    If SPC5[4] = 4 Print #0; Tab 100;" OF REBATE COST ";
	if spc5[4]=5 print #0;tab 100;" OF REDI COST ";
	if spc5[4] = 6 print #0; tab 100;" OF NETPO COST ";
  End If 
  If COST_LEV[1] If SPC5[3] = 3 Print #0; Tab 100;" FLAT COST      ";
  If COST_LEV[1] If SPC5[3] = 5 Print #0; Tab 100;" FREE GOODS     ";
  If COMM_LEV < 1000 Goto L_5195!!!INPUT
  If SPCOM Print #0; Using "###.##"; Tab 117;SPCOM;"%"; Else Print #0; Tab 118;"std";
  Print #0; Using "######.#"; Tab 124;SPC4[1]; \ V9[1] = V9[1] + 1
END IF 
L_5195: If P60$[12,12] <> "Y" Goto L_5215
Gosub L_8200
IF NOT(J8)
  Print #0; Using "BREAK TABLE ##"; Tab 63;SPBRK[0];
  Print #0; Tab 79;LBL$;
ELSE
  tmp$=tmp$, SPBRK[0] Using "BREAK TABLE ##",fdel$ ! fld19-20
  tmp$=tmp$,LBL$,fdel$ \ fldsnt=fldsnt+2
END IF 
L_5215: 
If Not(FLG) 
	If C3[0] > 0 If C3[0] < 4 Goto L_5230!!!INPUT
else
	tmp$=tmp$,"",fdel$ \ fldsnt=fldsnt+1 ! fld21
endif
If P60$[12,12] <> "Y" Goto L_5290
Goto L_5285
L_5230: Rem ===== single item print markup or calc'd price
If C3[0] = 3 Goto L_5265

IF J8
  tmp$=tmp$,"PRICE="
ELSE
  Print #0; Tab 92;"PRICE=";
END IF
X2 = C1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
!
IF J8
  If C1[4] 
	If JWDATE < JSDATE  
		tmp$=tmp$,"EXPIRED",fdel$ \ fldsnt=fldsnt+1
		Goto L_5260
	Endif
  !else ! no price
	!tmp$=tmp$,"",fdel$ \ fldsnt=fldsnt+1
	 !Goto L_5260
	
  Endif
  If PRICE tmp$=tmp$,PRICE Using "#####.###",fdel$ \ fldsnt=fldsnt+1
  if Not(PRICE) tmp$=tmp$,"NOT AVL",fdel$ \ fldsnt=fldsnt+1
ELSE 
  If C1[4] If JWDATE < JSDATE Print #0; Tab 98;"EXPIRED"; \ Goto L_5260
  If PRICE Print #0; Using "#####.###"; Tab 98;PRICE;
  If Not(PRICE) Print #0; Tab 100;"NOT AVL";
END IF
L_5260: Goto L_5285
L_5265: 
IF  J8 
  If MARK tmp$=tmp$,"% LOAD MARK",MARK Using "----#.##",fdel$ \ fldsnt=fldsnt+1
  If MARK > 0 tmp$=tmp$,"UP",fdel$
  If MARK < 0 tmp$=tmp$,"DN",fdel$
  If Not(MARK) tmp$=tmp$,"N/A",fdel$
  fldsnt=fldsnt+1
ELSE
  If MARK Print #0; Using "----#.##"; Tab 110;MARK;"% LOAD MARK";
  If MARK > 0 Print #0;"UP";
  If MARK < 0 Print #0;"DN";
  If Not(MARK) Print #0; Tab 112;" N/A";
END IF
L_5285: !
if j8 and fldsnt<16 ! missing
	if fldsnt=13 let tmp$=tmp$,fdel$,fdel$,fdel$ \ FLDSNT=fldsnt+3
	if fldsnt=14 let tmp$=tmp$,fdel$,fdel$ \ fldsnt=fldsnt+2
	if fldsnt=15 let tmp$=tmp$,fdel$ \ fldsnt=fldsnt+1
Endif
IF NOT(J8) 
	! Gosub addlprcs:
	Print #0;"" 
Endif
V9[1] = V9[1] + 1
L_5290: Rem
if j8 and fldsnt<16 ! missing
	if fldsnt=13 let tmp$=tmp$,fdel$,fdel$,fdel$ \ FLDSNT=fldsnt+3
	if fldsnt=14 let tmp$=tmp$,fdel$,fdel$ \ fldsnt=fldsnt+2
	if fldsnt=15 let tmp$=tmp$,fdel$ \ fldsnt=fldsnt+1
Endif
IF NOT(J8) 
	Gosub addlprcs:
	Print #0;"" 
Endif
V9[1] = V9[1] + 1
RCTR = RCTR + 1
if J8 call addtostr(e$,rstr$,tmp$+rdel$)
Return 
!
Addlprcs: ! print price 2-10 if loaded
For Plvl=0 to 8
  If APType[plvl]<1 or APType[plvl]>8 goto A_5290:
  ! to save major coding - use normal vars
  C3[0]=APTYPE[PLVL];C3[1]=ABTYPE[PLVL]
  SPC5[0]=APFACT[PLVL]
  SPC6[1]=AMTYPE[PLVL];SPC4[0]=AMQTY[PLVL]
IF C3=3 ! GOTO L_2190: ! "don't convert
  LET HOLD=SPC5[0] ! "retain @ base
	LET CNVTU[0]=0 \ LET CNVTU[1]=SPCUM[0] \ LET CNVTU[2]=2
  LET CNVTA=SPC5[0] \ GOSUB L_6900: \ LET SPC5[0]=FNP(AMOUNT) ! "price to cost um
Endif
IF NOT(FLG) GOSUB L_2500:
Print #0; Tab 65;"PRICE # ";plvl+2;
IF C3[0]=3 or c3[0]=7 PRINT #0; USING PMASK$; TAB 79;SPC5[0];
IF C3[0]<>3 if  c3[0]<>7 PRINT #0; USING "###.###%"; TAB 79;SPC5[0];
if c3[0]<>7 PRINT #0; TAB 93;PUM$; ! "pricing um
x$=QUM$ \ if spc6[1]=2 let X$="LBS"
PRINT #0; USING "######"; TAB 120;SPC4[0];" ";x$;
PRINT #0;"" \ LET V9[1]=V9[1]+1
GOSUB L_8000:
IF C3[0]=1 OR C3[0]=2 GOSUB L_8100:
A_5215: IF NOT(FLG) IF C3[0]>0 IF C3[0]<4 GOTO A_5230:
! IF P60$[12,12]<>"Y" GOTO A_5290:
GOTO A_5285:

A_5230: ! ===== single item print markup or calc'd price
IF C3[0]=3 GOTO A_5265: ! "fixed
PRINT #0; TAB 92;"PRICE=";
IF PRICE PRINT #0; USING "#####.###"; TAB 98;PRICE; ! "calc'd price
IF NOT(PRICE) PRINT #0; TAB 100;"NOT AVL";
A_5260: GOTO A_5285:

A_5265: IF MARK PRINT #0; USING "----#.##"; TAB 110;MARK;"% LOAD MARK";
IF MARK>0 PRINT #0;"UP";
IF MARK<0 PRINT #0;"DN";
IF NOT(MARK) PRINT #0; TAB 112;" N/A";
A_5285: PRINT #0;"" \ LET V9[1]=V9[1]+1
LPrtd=LPrtd+1
if v9[1]>v9[3] gosub L_5800:
A_5290: !
Next PLvl ! thru any 10 set up
if lprtd PRINT #0;"" \ LET V9[1]=V9[1]+1
! LET RCTR=RCTR+1
Return
!
L_5800: Rem "============================================== heading
IF J8 RETURN 
!!If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
If Not(J8) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE ";V9[0]
Print #0;" - 129 - ";T9$;
Print #0; Tab 48;"S P E C I A L   P R I C E   L I S T"
Print #0; Tab 70;"START"
Print #0; Tab 2;"CUST"; Tab 8;"NAME"; Tab 26;ITEM_LAB$;
Print #0; Tab 39;"DESCRIPTION"; Tab 70;"CANCEL";
Print #0; Tab 81;"FACTOR"; Tab 92;"PRICE";
If COST_LEV[1] > 0 Or COMM_LEV = 1000 Print #0; Tab 103;"SLSM";
If COST_LEV[1] > 0 Print #0; Tab 118;"CST UM";
Print #0; Tab 125;"MIN/MAX"
Print #0; Tab 2;"CODE"; Tab 71;"DATE"; Tab 82;"TYPE"; Tab 93;"UM";
If COST_LEV[1] > 0 Print #0; Tab 101;"COST";
If COMM_LEV = 1000 Print #0; Tab 117;"COMM";
Print #0; Tab 126;"QTY"
Print #0;""
Return 
L_6400: Rem "============================= convert from rec # um to 4 char. text
If FLG Let X$ = "N/A" \ Return 
If UNT = -1 Let X$ = "CWT " \ Goto L_6430
If UNT = -2 Let X$ = "LOT " \ Goto L_6430
If UNT = -3 Let X$ = "LB  " \ Goto L_6430
Read #7,UNT;CCD$;
X$ = CCD$[11,14]
L_6430: Return 
L_6900: Rem "============================================== unit convert rtn
If FLG Let AMOUNT = CNVTA \ Return 
Gosub L_20000
Return 
L_7000: Rem "=========================================== data input routine
! Call "input",J1,J$,J0$,J1$,J4$,J5$
Return 
Return 
L_7400: Rem QUICK DATE CHECK
J9[0] = Z1$[1,2];J9[1] = Z1$[3,4];J9[2] = Z1$[5,6]
If J9[0] = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7445
If J9[1] <= 0 Goto L_7480
J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1];X2 = J1 \ Gosub L_7700
J0 = 0
Call VerifyDate(X$,J0)
If J0 Goto L_7480
L_7445: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1];X2 = J1 \ Gosub L_7700
Gosub L_7800 \ datex = X2 \ Return 1
L_7480: Return !!Print @0,22;'RB CE';"INVALID DATE!"; \ Signal 3,20
! Print @0,22;'CE'; \ Return 
!DISPLAY_SCREEN: Rem "========================================== screen
!!Print 'CS'
!!Print @0,0;"-MX129-";@33,0;"SPECIAL PRICE LIST"
!!Print @30,2;'BR';"STARTING";'ER';@50,2;'BR';"ENDING";'ER';
!!Print @0,4;" 1> CUSTOMER CODE : "
!!Print @0,6;" 2> PRODUCT CODE : "
!!Print @0,8;" 3> CANCEL DATE : "
!!Print @0,10;" 4> SALESMAN CODE : "
!!Print @0,12;" 5> DIVISION NUMBER : "
!!Print @0,14;" 6> Include Items with Cancel Date ''NONE''?"
!!If RETVAL$[1,5] = "@@@@@"
!!  X2 = 700101 \ Gosub L_7820 \ E = 0
!!  JSCDATE = X$
!!  X2 = 591231 \ Gosub L_7820 \ E = 0
!!  JECDATE = X$
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,6] = "     0";RETVAL$[7,12] = "999999"
!!  RETVAL$[25,36] = "zzzzzzzzzzzz"
!!  RETVAL$[37,42] = JSCDATE Using "&&&&&&"
!!  RETVAL$[43,48] = JECDATE Using "&&&&&&"
!!  RETVAL$[49,51] = "  1";RETVAL$[52,54] = "999"
!!  RETVAL$[55,56] = " 1";RETVAL$[57,58] = "99"
!!  RETVAL$[59,59] = "0"
!!  !!Call "Progdfltw","129","",77,RETVAL$,0
!!End If 
!!K2$ = RETVAL$[1,6]
!!K3$ = RETVAL$[7,12]
!!K4$ = RETVAL$[13,24]
!!K5$ = RETVAL$[25,36]
!!JSCDATE = RETVAL$[37,42]
!!JECDATE = RETVAL$[43,48]
!!SSLSM = RETVAL$[49,51]
!!ESLSM = RETVAL$[52,54]
!!SDIV = RETVAL$[55,56]
!!EDIV = RETVAL$[57,58]
!!WCANDATE = RETVAL$[59,59]
!!!Print @25,4;'CL';K2$;@45,4;K3$
!!!Print @25,6;K4$;@45,6;K5$

!X2 = JSCDATE \ Gosub L_7830 \ SCDATE = X$
!X2 = SCDATE \ Gosub L_7700 !!\ Print @25,8;X$
!X2 = JECDATE \ Gosub L_7830 \ ECDATE = X$
!X2 = ECDATE \ Gosub L_7700 !!\ Print @45,8;X$
!!Print Using "###";@25,10;SSLSM;@45,10;ESLSM
!!Print Using "##";@25,12;SDIV;@45,12;EDIV
!!If WCANDATE = 0 Print @50,14;"N"
!!If WCANDATE = 1 Print @50,14;"Y"
!!Return 
!!VIEW_PREVIOUS_PURGE: Rem
!!Call "progdflt","129purge","",77,PURGEVAL$
!!If PURGEVAL$[1,5] = "@@@@@"
!!  MSGTXT$ = "No Previous Purge Selection on File !"
!!  Call "errmsg",MSGTXT$
!!  Return 
!!End If 
!!!!Window Open @5,5; Size 60,16; Using "PREVIOUS PURGE SELECTION"
!!!!Print @30,1;'BR';"STARTING";'ER';@50,1;'BR';"ENDING";'ER';
!!!!Print @0,4;"CUSTOMER CODE : ";@25,4;PURGEVAL$[1,6];@45,4;PURGEVAL$[7,12]
!!!!Print @0,5;"PRODUCT CODE : ";@25,5;PURGEVAL$[13,24];@45,5;PURGEVAL$[25,36]
!!!!Print @0,6;"CANCEL DATE : ";
!!X2 = PURGEVAL$[37,42] \ Gosub L_7830 \ X2 = X$ \ Gosub L_7700 \ Print @25,6;X$;
!!X2 = PURGEVAL$[43,48] \ Gosub L_7830 \ X2 = X$ \ Gosub L_7700 \ Print @45,6;X$
!!Print @0,7;"SALESMAN CODE : ";@25,7;PURGEVAL$[49,51];@45,7;PURGEVAL$[52,54]
!!Print @0,8;"DIVISION NUMBER : ";@25,8;PURGEVAL$[55,56];@45,8;PURGEVAL$[57,58]
!!Print @0,10;"Purge Items with Cancel Date ''NONE''?"
!!If PURGEVAL$[59,59] = "1" Print @50,10;"Y" Else Print @50,10;"N"
!!!!Input @0,14;"Please enter <CR> to exit view ";J$
!!Window Close 
!!Return 
!!SEL_CUST: Rem let's
!!CUST_LOOP: Rem
!!J5$ = "Please enter the Starting Customer Code maximum 999999"
!!J0$ = "3 00 625 4"
!!J1 = K2$
!!Gosub L_7000
!!K2$ = J1 Using "######"
!!J5$ = "Please enter the Ending  Customer Code maximum 999999"
!!J0$ = "3 00 645 4"
!!J1 = K3$
!!Gosub L_7000
!!K3$ = J1 Using "######"
!!If K2$ > K3$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  Gosub BAD_RANGE
!!  Goto CUST_LOOP
!!End If 
!!!!RETVAL$[1,6] = K2$[1,6]
!!!!RETVAL$[7,12] = K3$[1,6]
!!Return 
!!SEL_PROD: Rem get the prods
!!PROD_LOOP: Rem
!!J5$ = "Please Enter the Starting Product Code"
!!J0$ = "2 00122506" \ J1$ = K4$
!!Gosub L_7000
!!K4$ = J$
!!J0$ = "2 00124506" \ J1$ = K5$
!!J5$ = "Please Enter the Ending Product Code"
!!Gosub L_7000
!!K5$ = J$
!!If K4$ > K5$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  Gosub BAD_RANGE
!!  Goto PROD_LOOP
!!End If 
!!!!RETVAL$[13,24] = K4$[1,12]
!!!!RETVAL$[25,36] = K5$[1,12]
!!Return 
!!SEL_DATE: Rem enter the dates
!!DATE_LOOP: Rem
!!J5$ = "Please Enter the Beginning Effective Date MMDDYY "
!!J0$ = "5 000625 8"
!!X2 = JSCDATE \ Gosub L_7830 \ J1 = X$
!!Gosub L_7000 \ SCDATE = J1
!!X2 = SCDATE \ Gosub L_7820 \ Goto DATE_LOOP
!!JSCDATE = X2
!!DATE_LOOP1: Rem ending range
!!J5$ = "Please Enter the Ending Effective Date MMDDYY "
!!J0$ = "5 000645 8"
!!X2 = JECDATE \ Gosub L_7830 \ J1 = X$
!!Gosub L_7000 \ ECDATE = J1
!!X2 = ECDATE \ Gosub L_7820 \ Goto DATE_LOOP1
!!JECDATE = X2
!!If JSCDATE > JECDATE!!!!!!!!!!!!!!!!!!!!!!!!DAYS
!!  Gosub BAD_RANGE
!!  Goto DATE_LOOP
!!End If 
!!!!RETVAL$[37,42] = JSCDATE Using "&&&&&&"
!!!!RETVAL$[43,48] = JECDATE Using "&&&&&&"
!!Return 
!!SEL_SLSM: Rem
!!SLSM_LOOP: Rem
!!J5$ = "Please enter the Starting Salesman Code maximum 999"
!!J0$ = "3 00 32510"
!!J1 = SSLSM
!!Gosub L_7000
!!SSLSM = J1
!!J5$ = "Please enter the Ending Salesman Code maximum 999"
!!J0$ = "3 00 34510"
!!J1 = ESLSM
!!Gosub L_7000
!!ESLSM = J1
!!If SSLSM > ESLSM!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  Gosub BAD_RANGE
!!  Goto SLSM_LOOP
!!End If 
!!!!RETVAL$[49,51] = SSLSM Using "###"
!!!!RETVAL$[52,54] = ESLSM Using "###"
!!Return 
!!SEL_DIV: Rem
!!DIV_LOOP: Rem
!!J5$ = "Please enter the Starting Division Number maximum 99"
!!J0$ = "3 00 22512"
!!J1 = SDIV
!!Gosub L_7000
!!SDIV = J1
!!J5$ = "Please enter the Ending Division Number maximum 99"
!!J0$ = "3 00 24512"
!!J1 = EDIV
!!Gosub L_7000
!!EDIV = J1
!!If SDIV > EDIV!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  Gosub BAD_RANGE
!!  Goto DIV_LOOP
!!End If 
!!!!RETVAL$[55,56] = SDIV Using "##"
!!!!RETVAL$[57,58] = EDIV Using "##"
!!Return 
!!SEL_CANCEL: Rem dancel date of none
!!J5$ = "Please Enter Y or N"
!!J0$ = "6 00 15014"
!!J1 = WCANDATE
!!Gosub L_7000
!!WCANDATE = J1
!!!!RETVAL$[59,59] = WCANDATE Using "#"
!!Return 
!!BAD_RANGE: Rem
!!MSGTXT$ = "Ending value must be Greater than or Equal to starting value! "
!!Call "errmsg",MSGTXT$
!!Return 
!!PRINT_SELECTIONS: Rem
!!Gosub L_5800
!!Print #0;"Selection Criteria"
!!Print #0; Tab 30;"STARTING"; Tab 50;"ENDING"
!!Print #0;" 1. CUSTOMER CODE : "; Tab 25;RETVAL$[1,6]; Tab 45;RETVAL$[7,12]
!!Print #0;" 2. PRODUCT CODE : "; Tab 25;RETVAL$[13,24]; Tab 45;RETVAL$[25,36]
!!Print #0;" 3. CANCEL DATE : "; Tab 25;
!!X2 = RETVAL$[37,42] \ Gosub L_7830 \ X2 = X$
!!Gosub L_7700 \ Print #0; Tab 25;X$;
!!X2 = RETVAL$[43,48] \ Gosub L_7830 \ X2 = X$
!!Gosub L_7700 \ Print #0; Tab 45;X$
!!Print #0;" 4. SALESMAN CODE : ";L; Tab 25;RETVAL$[49,51]; Tab 45;RETVAL$[52,54]
!!Print #0;" 5. DIVISION NUMBER : "; Tab 25;RETVAL$[55,56]; Tab 45;RETVAL$[59,59]
!!Print #0;" 6. Include Items with Cancel Date ''NONE'' (Y/N)? ";
!!If RETVAL$[59,59] = "0" Print #0;"N"
!!If RETVAL$[59,59] = "1" Print #0;"Y"
!!Return 
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
D6 = X$
Call DateToJulian(1,X$,X$,E) !!\ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JSDATE = X2
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
!
L_7830: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem PRICE TYPE
!
On C3[0] Goto L_8020,L_8030,L_8040,L_8050,L_8060,L_8070,L_8080
if j8 let tmp$=tmp$,fdel$ \ fldsnt=fldsnt+1 ! no match
Return 
On C3[1] - 10 Goto L_8160
L_8020: 
IF J8
  If SPC5[0] >= 0  tmp$=tmp$,"MARK UP" ! ,fdel$
  If SPC5[0] < 0  tmp$=tmp$,"MARK DOWN" ! ,fdel$
  fldsnt=fldsnt+1
else
  If SPC5[0] > 0 Print #0; Tab 78;"MARK UP";
  If SPC5[0] < 0 Print #0; Tab 78;"MARK DOWN";
endif
Return 
L_8030:
IF J8
  tmp$=tmp$,"MARGIN" ! ,fdel$ \ fldsnt=fldsnt+1
else
  Print #0; Tab 78;"MARGIN";
endif
Return 
L_8040: 
IF J8
  tmp$=tmp$,"PRICE",fdel$ \ fldsnt=fldsnt+1
else
  Print #0; Tab 78;"PRICE";
endif 
Return 
L_8050:
IF J8
  If SPC5[0] = 0 tmp$=tmp$,C3[1] Using "BRACKET ## " ! ,fdel$
  If SPC5[0] > 0 tmp$=tmp$,C3[1] Using "MARKUP OF BRACKET ##" ! ,fdel$
  If SPC5[0] < 0 tmp$=tmp$,C3[1] Using "MARKDOWN  OF BRACKET ##" ! ,fdel$
  tmp$=tmp$,"",fdel$ ! no other type
  fldsnt=fldsnt+2
else
  If SPC5[0] = 0 Print #0; Using "BRACKET ## "; Tab 78;C3[1];
  If SPC5[0] > 0 Print #0; Using "MARKUP OF BRACKET ##"; Tab 78;C3[1];
  If SPC5[0] < 0 Print #0; Using "MARKDOWN  OF BRACKET ##"; Tab 78;C3[1];
endif
Return 
L_8060: 
IF  J8
  If SPC5[0] = 0 tmp$=tmp$,C3[1] Using "## BRKT JMP"! ,fdel$
  If SPC5[0] > 0 tmp$=tmp$,C3[1] Using "MARKUP ## BRKT JMP" ! ,fdel$
  If SPC5[0] < 0 tmp$=tmp$,C3[1] Using "MARKDOWN ## BRKT JMP" ! ,fdel$
  tmp$=tmp$,fdel$ ! no other type
  fldsnt=fldsnt+2
else
  If SPC5[0] = 0 Print #0; Using "## BRKT JMP"; Tab 78;C3[1];
  If SPC5[0] > 0 Print #0; Using "MARKUP ## BRKT JMP"; Tab 78;C3[1];
  If SPC5[0] < 0 Print #0; Using "MARKDOWN ## BRKT JMP"; Tab 78;C3[1];
endif
Return 
L_8070: Rem BREAK LEVEL JUMP
IF J8
  tmp$=tmp$,C3[1] Using "BREAK LEVEL JUMP ## LEVELS",fdel$ ! ,fdel$,fdel$
  fldsnt=fldsnt+3
else
  Print #0; Using "BREAK LEVEL JUMP ## LEVELS"; Tab 78;C3[1];
endif
Return 
L_8080: 
IF J8 
  tmp$=tmp$,"FREE GOODS",fdel$ ! ,fdel$,fdel$
  fldsnt=fldsnt+3
else
  Print #0; Tab 78;"FREE GOODS";
endif
Return 
L_8100: Rem BASEX  TYPE
If C3[0] = 4 Or C3[0] = 5 Return 
On C3[1] Goto L_8110,L_8120,L_8130,L_8140,L_8140,L_8140,L_8140,L_8140,L_8140,L_8150
On C3[1] - 10 Goto L_8160,L_8170,L_8175,L_8180,L_8105
Return 
L_8105: ! net po
IF J8
  tmp$=tmp$,"OF NET PO",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"OF NET PO";
END IF
Return
L_8110: 
IF J8
  tmp$=tmp$,"OF BASE",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"OF BASE";
END IF
Return 
L_8120: 
IF J8
  tmp$=tmp$,"OF LOADED",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"OF LOADED";
END IF
Return 
L_8130: 
IF J8
  tmp$=tmp$,"OF LAST",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"OF LAST";
END IF
Return 
L_8140:
IF J8
  tmp$=tmp$,C3[1] - 3 Using "OF LIST #",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Using "OF LIST #"; Tab 90;C3[1] - 3;
END IF
Return 
L_8150: 
IF J8
  tmp$=tmp$,"OF SP. CST",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"OF SP. CST";
END IF
Return 
L_8160: 
IF J8
  tmp$=tmp$,"SLSM CST",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"SLSM CST";
END IF
Return 
L_8170: 
IF J8
  tmp$=tmp$,"CALC. PRICE ",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab 90;"CALC. PRICE ";
END IF
Return 
L_8175: 
IF J8
  tmp$=tmp$,"REDI COST",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab (90);"REDI COST";
END IF
Return 
L_8180: 
IF J8
  tmp$=tmp$,"REBATE CST",fdel$ \ fldsnt=fldsnt+1
ELSE
  Print #0; Tab (90);"REBATE CST";
END IF
Return 
L_8200: Rem GET BREAK TYPE
LBL$ = " ",LBL$
If SPBRK[1] = 1 Let LBL$ = "ACC/NO BRK"
If SPBRK[1] = 2 Let LBL$ = "ACC/BRK"
If SPBRK[1] = 3 Let LBL$ = "NO ACC/NO BRK"
If SPBRK[1] = 4 Let LBL$ = "NO ACC/BRK"
Return 
SP_CHKREBATE: Rem "check for any rebate
Mat REBATE_ARGS = Zer
REBATE_ARGS[1,0] = 4
REBATE_ARGS[2,0] = 6
REBATE_ARGS[3,0] = 10
REBATE_ARGS[4,0] = 11
REBATE_ARGS[5,0] = 12
REBATE_ARGS[1,1] = R4
REBATE_ARGS[2,1] = R6
If WHSE < 1 Or WHSE > 99 Let WHSE = 1
REBATE_ARGS[1,2] = WHSE
REBATE_ARGS[2,2] = CFC1[1]
REBATE_ARGS[3,2] = 0
REBATE_ARGS[4,2] = D6
REBATE_ARGS[5,2] = CFC1[7]
STATUS = 0
J1$=""
!Call "rebates",REBATE_ARGS[],A$[140,151],STATUS
call rebates(e$,REBATE_ARGS[],A$[140,151],STATUS,0,j1$,rstr$) ! new external sub
If Not(STATUS) !"indicates call was successful in finding rebate
  RBCOST = REBATE_ARGS[1,3]
Else 
  RBCOST = 0
End If 
Return 
!
L_9100: Rem " end of this range
goto OUTEND
!!Gosub PRINT_SELECTIONS
!!Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!If RCTR = 0 Goto L_9140
!!If Not(J8) Goto L_4000
L_9140:!! Goto L_900
GOTO OUTEND
!!End if
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
L_12610: Rem CALL
!!OTYPE = 1
!!Call "MXLOAD5",OTYPE,WH,LTBL,PREC[],CNVTA
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050:Goto L_20120!! If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG !!\ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 

