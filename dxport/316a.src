! >>> Program 316a
!
! description A/R Customer Trial Balance, Customer Detail
!
! loadsave -w -n 100,10 -o prog/dxport/316a.dl4 src/316a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  1, 2006  11:10:30
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx316a.src (univ2) [txc] {14666}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX316A A/R AGED TRIAL BALANCE FULL DETAIL LISTING
Rem **************************************
Rem *   UNIVERSAL BUSINESS SYSTEM        *
!
External Lib "ubsfunc.dl4"
Declare External Sub UTAge5
Declare External Function OpenMySQLBrowserOutput,GetMySQLReportHeader
Declare External Sub AddMySQLReportColumnHeadings
Declare External Function AddMySQLReportData
Declare External Sub FinishMySQLReport

!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,StringSearch,FindF
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3],OPT,CUST[1],W1[1],DIV[1],SVCNUM,ACCT[1]
Com P9$[50]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
DIM CN$[10],CustNAME$[31]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim BegCust$[14],EndCust$[14],SelAcctMgr$[200]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 3%,tmp3
!
Dim 1%,MySQL_ch,reportAborted
Dim 3%,MySQLQueueID

Dim 1%,S8[2],C7,A0[10],AGECOL
Dim 1%,D9,S1[10],F,L,ACCUMARDATEINFO
Dim 1%,AGEBUCK[3]
Dim 2%,E,C9,D3[1],AMGR[1000],COID
Dim 2%,J,D,D1,D2[7],C0,ARDATE,A2[5],MINAGE,MINAGEINCLUDEALL,HOLDCUST
Dim C5$[12],D0$[81],D1$[10],D2$[10],K5$[25],KSORT$[50]
Dim K1$[50],K2$[30],K3$[25],K4$[40],K7$[6]
Dim 2%,C2[1],C1[10],A4[7],H0[12],C5,R[10],C4[1],H5[8],PRCNTAR[6]
Dim 3%,A3[11],C3[6],T9[8,3],P4,P5,T[4],CRDTOT,T2[25],GNDCRD,L3
Dim 3%,V9,PCTR,MINAMT,CFIN[8],C12[1],ORDAMT,ARREF[1]
Dim 4%,TOTAR
Dim K9$[40],K8$[20],A2$[30]
Dim F$[30],C$[112],M$[16],ARDATE$[8],P$[20],P1$[20],SNAME$[14],ENAME$[14]
Dim A3$[16],A4$[16],ARTERM$[16]
Dim CNAME$[30],Z1$[50],ext$[5]
Dim C2$[142],C3$[25],LINES$[132],CNA0$[40],PHONE$[20],SLSM$[30]
Dim AGEBUCK$[100],AGEBUCKH$[40],P61$[256]
Def FNR(X) = Sgn(X) * Int((Abs(X) + .005) * 100) / 100
! - COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Mat Read #1,20,130;AGEBUCK;
Mat Read #1,20,138;AGECOL;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
AGEBUCK$[1,20] = "CURRENT............:";AGEBUCKH$[1,8] = " CURRENT"
If P9$[50,50] = "M" ! age by month
  If P9$[25,25] = "Y" ! age by due date
    AGEBUCK$[21,40] = "PAST DUE...........:";AGEBUCKH$[9,16] = "PAST DUE"
    AGEBUCK$[41,60] = "OVER 1 MONTH.......:";AGEBUCKH$[17,24] = "OVER 1MO"
    AGEBUCK$[61,80] = "OVER 2 MONTHS......:";AGEBUCKH$[25,32] = "OVER 2MO"
    AGEBUCK$[81,100] = "OVER 3 MONTHS......:";AGEBUCKH$[33,40] = "OVER 3MO"
  Else 
    AGEBUCK$[21,40] = "OVER 1 MONTH.......:";AGEBUCKH$[9,16] = "OVER 1MO"
    AGEBUCK$[41,60] = "OVER 2 MONTHS......:";AGEBUCKH$[17,24] = "OVER 2MO"
    AGEBUCK$[61,80] = "OVER 3 MONTHS......:";AGEBUCKH$[25,32] = "OVER 3MO"
    AGEBUCK$[81,100] = "OVER 4 MONTHS......:";AGEBUCKH$[33,40] = "OVER 4MO"
  End If 
Else 
  If P61$[67,67] = "Y"
    AGEBUCK$ = " ",AGEBUCK$;AGEBUCKH$ = " ",AGEBUCKH$
    For X = 0 To 4
      AGEBUCK$[((X * 20) + 1),((X * 20) + 8)] = (X + 1) Using "PERIOD #"
      AGEBUCK$[((X * 20) + 9),((X * 20) + 20)] = "...........:"
      AGEBUCKH$[((X * 8) + 1),((X * 8) + 8)] = (X + 1) Using "PERIOD #"
    Next X
  Else 
    For X = 0 To 3
      AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
      AGEBUCK$[((X * 20) + 34),((X * 20) + 40)] = "......:"
      AGEBUCKH$[((X * 8) + 9),((X * 8) + 16)] = AGEBUCK[X] Using "OVER ###"
    Next X
    If P9$[25,25] = "Y" And AGEBUCK[0] = 0
      AGEBUCK$[21,40] = "PAST DUE...........:"
      AGEBUCKH$[9,16] = "PAST DUE"
    End If 
  End If 
End If 
LINES$ = "-",LINES$
P1$ = "-------.##"
P$ = "---,---,---.##"
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
SCRPRT = 0 \ L9 = 60
If J8 let L9 = 22 \ SCRPRT = 99
!
Read #1,0,108;ARDATE;
Read #1,0,100;ARDATE$;
Read #1,18,30;D2$;
! - If S9[0] ! frozen files
! -   ARDATE = S9[1] \ X2 = ARDATE 
! -   Gosub L_7700 \ ARDATE$ = X$
! - endif
Read #1,3;CNAME$;
D0$ = "INVSVCNSFD/ALATC/MUN.C/APAY"
! - J$ = COID Using "2/ARTERMCODE#" \ Ropen #50,J$
!
! dx add xport reporting code
DXSetup:
Dim tmp$[1800],tmp1$[1500],tmp2$[1300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
	!<section>
	MySQL_ch = OpenMySQLBrowserOutput(e$)
	if MySQL_ch <> -1
		MySQLQueueID = GetMySQLReportHeader(e$,MySQL_ch,"316a")
		if MySQLQueueID = 0
			e$ = "Could not get MySQL report header!"
			error 10000
		end if
	else
		tmp$ = bsdel$,"316a",fdel$,rdel$
		Call addtostr(e$,rstr$,tmp$)
	end if
End If 
!
!  dx add xport reporting code
call dxget("frozenacct",tmp$) \ S9[0]=tmp$  ! report option  0=current  1=frozen
if p61$[20,20]="Y" ! frozen by month
	call dxget("FRZMNTH",tmp$)
	if RTrim$(tmp$)<>"" let s9[0]=2
	x3=tmp$
	let x$=x3 using "&&&&"
	let ext$="."+x$
Endif
call dxget("frozendate",tmp$) \ S9[1]=tmp$ ! frozen aging date
call dxget("printorder",tmp$) \ D9=tmp$ ! print order  1=ref#  2=date
call dxget("custopt",tmp$) \ D1=tmp$ ! print option  1=cust#  2=cust name
call dxget("begcust",BegCust$) ! starting customer # or name
call dxget("endcust",EndCust$) ! ending customer# or name
call dxget("begwhse",tmp$) \ if tmp$="" let W1[0]=0 else W1[0]=tmp$ ! beg warehouse
call dxget("endwhse",tmp$) \ if tmp$="" let W1[1]=99 else W1[1]=tmp$ ! end warehouse
call dxget("begdiv",tmp$) \ if tmp$="" let DIV[0]=0 else DIV[0]=tmp$ ! beg division
call dxget("enddiv",tmp$) \ if tmp$="" let DIV[1]=99 else DIV[1]=tmp$ ! end division
call dxget("begacctmgr",tmp$) \ ACCT[0]=tmp$ ! beg account manager
call dxget("endacctmgr",tmp$) \ if tmp$="" let ACCT[1]=999 else ACCT[1]=tmp$ ! end acct mgr
call dxget("selacctmgr",SelAcctMgr$) ! select individual account manager
call dxget("ageservchrg",tmp$) \ if tmp$="" let SVCFLAG=0 else SVCFLAG=1 ! age service charge
call dxget("crlimitopt",tmp$) \ PRNTTYPE=tmp$ ! credit limit  1=over credit limit  2=under  3=both
call dxget("sortby",tmp$) \ if tmp$="" let SORTFLAG=0 else SORTFLAG=1 ! sort by account manager
call dxget("incaddr",tmp$) \ if tmp$="" let PRNTFLAG=0 else PRNTFLAG=1 ! include cust address & phone
!  dx end
!
! frozen report
if S9[0] ! frozen
  if s9[1]<=0 let e$="Frozen Aging date is required" \ error 10000
  tmp$=S9[1] using "&&&&&&" \ S9[1]=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
  ARDATE = S9[1] \ X2 = ARDATE 
  Gosub L_7700 \ ARDATE$ = X$
else
  S9[1]=0 ! current
endif
!
! customer
if D1=1 ! cust #
  CUST[0]=BegCust$
  CUST[1]=EndCust$ \ if EndCust$="" let CUST[1]=999999
  if CUST[0]<0 or CUST[0]>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
  if CUST[1]<CUST[0] or CUST[1]>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
  SNAME$=Blank$ \ ENAME$=EndParam$
else ! cust name
  SNAME$=BegCust$,Blank$
  ENAME$=EndCust$,EndParam$
  if ENAME$<SNAME$ let e$="Invalid ending customer name, must be >= starting customer name" \ error 10000
  CUST[0]=0 \ CUST[1]=999999
endif
!
! warehouse
if W1[0]<0 or W1[0]>99 let e$="Invalid starting warehouse, must be between 0 and 99!" \ error 10000
if W1[1]<W1[0] or W1[1]>99 let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
! division
if DIV[0]<0 or DIV[0]>99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
if DIV[1]<DIV[0] or DIV[1]>99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
!
! account manager
if SelAcctMgr$="" ! beg / end acct manager
  if ACCT[0]<0 or ACCT[0]>999 let e$="Invalid starting account manager, must be between 0 and 999!" \ error 10000
  if ACCT[1]<ACCT[0] or ACCT[1]>999 let e$="Invalid ending account manager, must be between starting account manager and 999!" \ error 10000
  IACCTMGR=0
else ! selected account managers
  gosub L_10000 ! get selected acct managers
  ACCT[0]=0 \ ACCT[1]=999999
  IACCTMGR=1
endif
!
if s9[0]=2
	read #1,88,1504;j$;
	j$=RTrim$(J$)+ext$
	call findf(j$,found)
	if not(found)
		e$="Frozen file for "+ext$+" not found" \ error 10000
	Endif
Endif
!
OPT=1 ! customer detail listing
!
For I = 3 To 8
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  If I = 4 And S9[0] 
    if s9[0]=1 let J$[Len(J$) + 1] = ".FROZ" ! frozen a/r
	if s9[0]=2 let j$=RTrim$(J$)+ext$
  End If 
  Ropen #I,J$
L_845: Next I
Data "1808","1504","1840","1872","720","1824"
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
! - D1 = 1
! - D1 = 2;D9 = 2;DIV[0] = 0;DIV[1] = 99;W1[0] = 0;W1[1] = 99;ACCT[0] = 0;ACCT[1] = 999
! - CUST[0] = 0;CUST[1] = 999999;SNAME$ = " ",SNAME$;ENAME$ = "z",ENAME$
! - SVCNUM = 0
! - SORTFLAG = 0
! - PRNTTYPE = 3
! - If OPT = 4 Or OPT = 6 Let D1 = 1
! - MINAGEINCLUDEALL = 1
! - L_1000: Rem SELECT RANGES
! - For X = 0 To 4 \ T[X] = 0 \ Next X
! - For X = 0 To 8
! -   For X1 = 0 To 3
! -     T9[X,X1] = 0
! -   Next X1
! - Next X
! - Gosub L_5600 \ Gosub L_5700
! - L_1070: Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P: print  E: exit ";
! - Input Len (16384 + 1);""J$
! - Call String(1,J$)
! - If J$ = "E" Goto L_9040
! - If J$ = "P"
! -   If OPT = 4 Chain "mx316d"
! -   If OPT = 6 Chain "mx316f"
! -   Goto L_1900
! - End If 
! - If J$ = "R"
! -   If OPT = 1
! -     For K = 1 To 9
! -       Gosub GETOPT
! -     Next K
! -   End If 
! -   If OPT = 3
! -     For K = 1 To 6
! -       Gosub GETOPT
! -     Next K
! -   End If 
! -   If OPT = 2
! -     For K = 1 To 4
! -       Gosub GETOPT
! -     Next K
! -   End If 
! -   If OPT = 4
! -     For K = 1 To 1
! -       Gosub GETOPT
! -     Next K
! -   End If 
! -   If OPT = 5
! -     For K = 1 To 8
! -       Gosub GETOPT
! -       If K = 6 And MINAGE And MINAGEINCLUDEALL Let K = 7
! -     Next K
! -   End If 
! -   If OPT = 6
! -     For K = 1 To 4
! -       Gosub GETOPT
! -     Next K
! -   End If 
! -   Goto L_1070
! - End If 
! - K = J$
! - Gosub GETOPT
! - Goto L_1070
! - GETOPT: Rem get options
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - If OPT = 3
! -   On K Gosub L_3200,L_3250,L_3400,L_3500,L_3600,EDT_PRNTCUSTADD
! - End If 
! - If OPT = 1
! -   On K Gosub L_3200,L_3250,L_3400,L_3500,EDT_ACCT,L_3600,PRNT_OCRD,EDT_SORT,EDT_PRNTCUSTADD
! - End If 
! - If OPT = 2
! -   On K Gosub L_3250,L_3400,L_3500,L_3600
! - End If 
! - If OPT = 4
! -   On K Gosub GETCUSTRNG
! - End If 
! - If OPT = 5
! -   On K Gosub L_3200,L_3250,L_3400,L_3500,L_3600,L_3650,L_3700,EDT_PRNTCUSTADD
! - End If 
! - If OPT = 6
! -   On K Gosub GETCUSTRNG,L_3400,L_3500,GETSVCNUM
! - End If 
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
If J8 = 0 or MySQLQueueID !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
L_1900: Rem start here
!
if J8 ! dx xml headings
  !
  tmp$="CUST #",fdel$,"NAME",fdel$
  if PRNTFLAG
    tmp$=tmp$,"ADDRESS",fdel$,"ADDRESS2",fdel$
	tmp$=tmp$,"CITY",fdel$,"ST",fdel$,"ZIP",fdel$
  endif
  if P9$[15,15]="Y" let tmp$=tmp$,"2ND CUST #",fdel$
  tmp$=tmp$,"TERMS",fdel$,"SALESMAN",fdel$,"ACCOUNT MANAGER",fdel$
  tmp$=tmp$,"CONTACT",fdel$,"A/P TELEPONE",fdel$
  if S9[0]=0 ! current a/r
    tmp$=tmp$,"AVG PAY DAYS",fdel$,"LAST PAY DATE",fdel$
    tmp$=tmp$,"TOTAL PENDING CREDIT",fdel$
  endif
  tmp$=tmp$,"AGE",fdel$,"DESCRIPTION",fdel$
  If P9$[25,25] = "Y" let tmp$=tmp$,"DUE",fdel$
  tmp$=tmp$,"DATE",fdel$,"TYPE",fdel$,"REFERENCE",fdel$
  tmp$=tmp$,"WH",fdel$,"OT",fdel$
  tmp$=tmp$,"ORIG AMT",fdel$,"DISC",fdel$
  If AGECOL=0 ! print oldest to current
    For X = 5 To 1 Step -1
      tmp$=tmp$,AGEBUCKH$[((X * 8) - 7),(X * 8)],fdel$
    Next X
  Else ! print current to oldest
    For X = 1 To 5
      tmp$=tmp$,AGEBUCKH$[((X * 8) - 7),(X * 8)],fdel$
    Next X
  End If 
  IF P9$[19,19]<>"Y"
	let tmp$=tmp$,"UNAPPL CREDIT",FDEL$ 
  endif
  if svcflag=0
	let tmp$=tmp$,"SVC CHRG",fdel$
  endif
   if MySQLQueueID
	call AddMySQLReportColumnHeadings(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$)
  else
	!
	call addtostr(e$,rstr$,tmp$+rdel$)
  end if
end if
!
Gosub PRESELECTCUSTOMERS
If OPT = 1 And SORTFLAG Gosub DO_SORT
! - If Not(SCRPRT) Print @0,22;'CE';"Printing, please wait...";
! - If Err 0 Gosub ERR_ESCAPE
! - If L9 = 22 Print 'CS'
! - Signal 3,0
L = 70 \ V9 = 0 \ GNDCRD = 0 \ C9 = 0
If OPT = 1 And SORTFLAG
  CH = 9
  D1 = 1
  K1$ = " ",K1$
  Goto L_2000
Else 
  CH = 3
End If 
If D1 = 1 Let K1$ = CUST[0] Using "######" Else Let K1$ = SNAME$[1,14]
Search #3,2,D1;K1$,R[3],E 
If Not(E) Goto L_2010
L_2000: 
Search #CH,3,D1;K1$,R[3],E 
If E = 2 Goto L_4000
if reportAborted goto OUTEND:
L_2010: Rem
If OPT = 1 And SORTFLAG
  If Not(HOLDACCT) Let HOLDACCT = K1$[1,3]
  TEMPACCTMGR = K1$[1,3]
  If HOLDACCT <> TEMPACCTMGR
    L = 99
    HOLDACCT = K1$[1,3]
  End If 
  X2 = K1$[4,9]
  Goto SKIP_CUSTCK
End If 
If D1 = 1
  X2 = K1$[1,6] \ If X2 > CUST[1] Goto L_4000
Else 
  X2 = K1$[15,20]
  If K1$[1,14] > ENAME$[1,14] Goto L_4000
End If 
If MINAGE And MINAGEINCLUDEALL
  KSORT$ = X2 Using "######"
  Search #9,2,1;KSORT$,R[9],E 
  If E Goto L_2000
End If 
SKIP_CUSTCK: Rem
K7$ = K1$
If D1 = 2 Let K7$ = K1$[15,20]
If D1 = 4 Let K7$ = K1$[21,26]
If OPT = 1 And SORTFLAG Let K7$ = X2 Using "######"
C2$ = " ",C2$;cn$=" ",cn$
CNA0$ = " ",CNA0$;PHONE$ = " ",PHONE$
Search #7,2,1;K7$,R[7],E 
If Not(E)
  Mat Read #7,R[7],128;CNA0$;
  Mat read #7,r[7],436;cn$;
End If 
Mat Read #3,R[3],0;C2$;
If CNA0$[1,1] <> "" If CNA0$[1,6] <> "      "
  C2$[1,20] = CNA0$[1,20]
End If 
If CNA0$[21,21] <> "" If CNA0$[21,26] <> "      "
  PHONE$[1,20] = CNA0$[21,40]
Else 
  PHONE$[1,1] = "("
  PHONE$[2,4] = C2$[21,23]
  PHONE$[5,5] = ")"
  PHONE$[6,8] = C2$[24,26]
  PHONE$[9,9] = "-"
  PHONE$[10,13] = C2$[27,30]
End If 
Mat Read #3,R[3],30;C$; \ Mat Read #3,R[3],388;C3$;
Mat Read #3,R[3],142;C1;
Mat Read #3,R[3],204;C4; \ Read #3,R[3],194;C7;
Mat Read #3,R[3],210;C3;
Mat Read #3,R[3],348;A2$;
Mat Read #3,R[3],412;ORDAMT;
Mat Read #3,R[3],544;CFIN;
Mat Read #3,R[3],668;C12;
let custname$=c$[1,30]
if ucase$(CN$[1,1])="A" let custname$="*"+c$[1,30]
if ucase$(CN$[1,1])="S" let custname$="*"+c$[1,30]
If OPT = 1
  If IACCTMGR !"cct162357
    If Not(CFIN[6]) Goto L_2000
    If CFIN[6] If Not(AMGR[CFIN[6]]) Goto L_2000
  Else 
    If Not(CFIN[6]) If ACCT[0] Goto L_2000
    If CFIN[6] < ACCT[0] Goto L_2000
    If CFIN[6] > ACCT[1] Goto L_2000
  End If 
  If PRNTTYPE = 2 !"cct162356 print acct under credit limit only
    L3 = (C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1])
    If (C1[8] - L3) < 0 Goto L_2000
    If C1[3] = 5 !"over 45 days
      L3 = C3[4] + C3[5] - C3[1]
      If L3 > 0 Goto L_2000
      Gosub CHK_O45DAYS
      If L3 Goto L_2000
    End If 
    If C1[3] = 1 !"over 30 days
      L3 = C3[3] + C3[4] + C3[5] - C3[1]
      If L3 > 0 Goto L_2000
    End If 
    If C1[3] = 2 !"over 60 days
      L3 = C3[4] + C3[5] - C3[1]
      If L3 > 0 Goto L_2000
    End If 
    If C1[3] = 3 !"over 90 days
      L3 = C3[5] - C3[1]
      If L3 > 0 Goto L_2000
    End If 
  End If 
  If PRNTTYPE = 1 !"cct162356   print the acct that are over credit limit
    L3 = (C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1])
    If (C1[8] - L3) < 0 Goto PRNT_OCRDLIMIT
    If C1[3] = 5 !"over 45 days
      L3 = C3[4] + C3[5] - C3[1]
      If L3 > 0 Goto PRNT_OCRDLIMIT
      Gosub CHK_O45DAYS
      If L3 Goto PRNT_OCRDLIMIT
    End If 
    If C1[3] = 1 !"over 30 days
      L3 = C3[3] + C3[4] + C3[5] - C3[1]
      If L3 > 0 Goto PRNT_OCRDLIMIT
    End If 
    If C1[3] = 2 !"over 60 days
      L3 = C3[4] + C3[5] - C3[1]
      If L3 > 0 Goto PRNT_OCRDLIMIT
    End If 
    If C1[3] = 3 !"over 90 days
      L3 = C3[5] - C3[1]
      If L3 > 0 Goto PRNT_OCRDLIMIT
    End If 
    Goto L_2000
  End If 
End If 
PRNT_OCRDLIMIT: Rem
If OPT <> 5
  Gosub L_2800
  GNDCRD = GNDCRD + CRDTOT
End If 
K9$ = C1[1] Using "######" \ K9$[7] = ""
Search #4,2,1;K9$,R[4],E
If Not(E) Goto L_2125
If S9[0] = 1 Goto L_2000
If C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1] = 0 If C3[1] = 0 Goto L_2000
L_2125: K9$ = C1[1] Using "######"
Read #1,18,60;D1$;
ARTERM$ = " ",ARTERM$
If C7 = 0
  ARTERM$ = "CASH SALE"
Else 
  If C7 > 0 And C7 <= 99
    Read #50,C7,0;ARTERM$;
  End If 
End If 
K4$ = K9$
L_2155:
Search #4,3,D9;K4$,R[4],E 
If E = 2 Goto L_4500
If K4$[1,6] > K9$ Goto L_4500
Mat Read #4,R[4];A2;
Mat Read #4,R[4],24;A3;
Mat Read #4,R[4],124;A0;
Mat Read #4,R[4],316;ARREF;
If A0[3] < W1[0] Goto L_2155
If A0[3] > W1[1] Goto L_2155
If A0[5] < DIV[0] Goto L_2155
If A0[5] > DIV[1] Goto L_2155
If P9$[19,19] <> "Y" Goto L_2215
If Int(100 * Fra(A2[3])) < 6 Goto L_2215
A3 = 0 - A3 \ A3[1] = 0 - A3[1] \ A3[2] = 0 - A3[2]
L_2215: Mat Read #4,R[4],108;A3$;
Mat Read #4,R[4],154;A4;
Mat Read #4,R[4],256;A4$;
AGE[1] = 0 \ ACCUMARDATEINFO = 1 \ Gosub L_3000
If OPT = 5
  If MINAGE And Not(MINAGEINCLUDEALL) And Int(AGE[1]) < MINAGE Goto L_2155
  If MINAMT And Abs(A3[0] - A3[1] - A3[2]) < MINAMT Goto L_2155
End If 
S1[1] = Fra(AGE[1]) * 10
If S1[1] > 4 Let S1[1] = 4
S1[2] = 100 * Fra(A2[3])
If C9 <> C1[1]
  If OPT = 5 Gosub L_2800 \ GNDCRD = GNDCRD + CRDTOT
  Gosub L_4300
End If 
S1[0] = S1[2] * 7 - 6
S8 = 0
If P9$[19,19] <> "Y" If S1[2] > 5 Let S8 = 5
If S8 = 5 Goto L_2290
S8 = 4 - S1[1]
If S1[2] = 2 And SVCFLAG = 0 Let S8 = 6
L_2290: Rem print lines
If OPT <> 2
  LINES = 1 \ If S1[2] = 9 And A3[9] <> 0 Let LINES = 2
  Gosub L_5800
  Gosub L_5000
End If 
T9[S8,2] = T9[S8,2] + (A3 - A3[1] - A3[2])
Goto L_2155
!
L_2800: Rem CREDIT TOTALS
K5$ = " ",K5$ \ CRDTOT = 0
K5$ = C1[1] Using "######"
L_2815: Search #5,3,2;K5$,R[5],E 
If E Goto L_2860
C5 = K5$[1,6] \ If C5 <> C1[1] Goto L_2860
Mat Read #5,R[5];H0;
Mat Read #5,R[5],104;H5;
If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(6) - 1 Goto L_2855
If H5[8] < DIV[0] Or H5[8] > DIV[1] Goto L_2855
If H0 >= 9 And H0 <= 11
  Mat Read #6,H0[3],8;T2
  CRDTOT = CRDTOT + T2[0]
End If 
L_2855: Goto L_2815
L_2860: Return 
!
L_3000: Rem AGING ROUTINE
If Not(A2[4]) let e$="No date found for reference # ",str$(ARREF),"!" \ error 10000
If P9$[19,19] <> "Y" If Int(Fra(A2[3]) * 100) > 5 Goto L_3100
X2 = A2[4] \ Gosub L_7870 \ X = D3[0]
X2 = A4[3] \ Gosub L_7840 \ A4[3] = 0
If P9$[25,25] = "Y" If A4[3] Let X = A4[3]
If Int(Fra(A2[3]) * 100) > 5 And A4[3] = 0 Let X = D3[0]
AGE[1] = 0;AGE[2] = ARDATE;AGE[3] = X;AGE[4] = 0
If P61$[67,67] = "Y" And P9$[50,50] <> "M"
  AGE[7] = C7;AGE[6] = 50
Else 
  AGE[7] = 0;AGE[6] = 0
End If 
goto L_3065 ! - wasIf Spc(4) > 1280 Goto L_3065
! - Swap 1,"UTAGE"
L_3055: rem ! - Signal 2,X,AGE[0],AGE[1] \ If X <> Spc(6) Goto L_3055
! - Goto L_3070
L_3065: rem ! - Call "UTAGE5",P9$,AGE[]
call UTAge5(e$,P9$,AGE[],1)
L_3070: If AGE[0] = 1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If AGE[0] = 2 Goto L_3100
If ACCUMARDATEINFO
  T[1] = T[1] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
  T[2] = T[2] + (A3 - A3[1] - A3[2])
  T[3] = T[3] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
  T[4] = T[4] + (A3 - A3[1] - A3[2])
End If 
L_3100: Return 
!
! - L_3200: Rem INPUT FOR SCREEN
! - J0$ = "3000 12504"
! - J2$ = "#" \ J1 = D9
! - J5$ = "Enter Print Order  1: REFERENCE # OR  2: DATE"
! - Gosub ISINPUT
! - D9 = J1
! - If D9 < 1 Or D9 > 2 Goto L_3200
! - Return 
! - L_3250: J0$ = "3000 12506"
! - J2$ = "#" \ J1 = D1
! - J5$ = "Enter Print Option  1: Customer Code or  2: Customer Name"
! - Gosub ISINPUT
! - D1 = J1
! - If D1 < 1 Or D1 > 2 Goto L_3250
! - GETCUSTRNG: Rem get customer range
! - Print @24,8;'CL';
! - If D1 = 1
! - L_3300: J0$ = "3000 63208"
! -   J2$ = "######" \ J1 = CUST[0]
! -   J5$ = "Enter Starting Customer Code"
! -   Gosub ISINPUT
! -   CUST[0] = J1
! -   J0$ = "3000 65108"
! -   J2$ = "######" \ J1 = CUST[1]
! -   J5$ = "Enter Ending Customer Code"
! -   Gosub ISINPUT
! -   CUST[1] = J1
! -   If CUST[0] > CUST[1]
! -     Print @0,23;'CL RB';"Ending Customer Code Must Be Greater Than Starting";
! -     Signal 3,20 \ Goto L_3300
! -   End If 
! - Else 
! - L_3367: J0$ = "2 00142408"
! -   J1$ = SNAME$[1,14]
! -   J5$ = "Enter Starting Customer Name"
! -   Gosub ISINPUT
! -   SNAME$[1,14] = J$
! -   J0$ = "2 00144208"
! -   J1$ = ENAME$[1,14]
! -   J5$ = "Enter Ending Customer Name"
! -   Gosub ISINPUT
! -   ENAME$[1,14] = J$
! -   If ENAME$ < SNAME$
! -     Print @0,23;'CL RB';"Ending Name Must Be Greater Than Starting Name";
! -     Signal 3,30 \ Goto L_3367
! -   End If 
! - End If 
! - Return 
! - L_3400: Rem warehouse #3
! - L_3405: J0$ = "3000 23610"
! - J2$ = "##" \ J1 = W1[0]
! - J5$ = "Enter Starting Warehouse"
! - Gosub ISINPUT
! - W1[0] = J1
! - J0$ = "3000 25410"
! - J2$ = "##" \ J1 = W1[1]
! - J5$ = "Enter Ending Warehouse"
! - Gosub ISINPUT
! - W1[1] = J1
! - If W1[0] > W1[1]
! -   Print @0,23;'CL RB';"Ending Warehouse Must Be Greater Than Starting";
! -   Signal 3,30 \ Goto L_3405
! - End If 
! - Return 
! - L_3500: Rem division #4
! - L_3505: J0$ = "3000 23612"
! - J2$ = "##" \ J1 = DIV[0]
! - J5$ = "Enter Starting Division"
! - Gosub ISINPUT
! - DIV[0] = J1
! - J0$ = "3000 25412"
! - J2$ = "##" \ J1 = DIV[1]
! - J5$ = "Enter Ending Division"
! - Gosub ISINPUT
! - DIV[1] = J1
! - If DIV[0] > DIV[1]
! -   Print @0,23;'CL RB';"Ending Division Must Be Greater Than Starting";
! -   Signal 3,25 \ Goto L_3505
! - End If 
! - Return 
! - EDT_ACCT: Rem acct manager
! - ASK_EDT_ACCT: Rem
! - IACCTMGR = 0
! - J0$ = "3000 33614I"
! - J2$ = "###" \ J1 = ACCT[0]
! - J5$ = "Enter Starting Account Manager 999 or I:Individual selects"
! - Gosub ISINPUT
! - If J4$[1,1] = "I"
! -   IACCTMGR = 1
! -   Gosub L_10000
! -   If Not(CT) Goto EDT_ACCT
! -   Print @36,14;"I - Individual selects";'CL';
! -   Return 
! - Else 
! -   IACCTMGR = 0
! -   Print @36,14;'CL';
! -   Print @0,15;'CL';
! - End If 
! - ACCT[0] = J1
! - Print Using "###";@36,14;ACCT[0];
! - J0$ = "3000 35414"
! - J2$ = "###" \ J1 = ACCT[1]
! - J5$ = "Enter Ending Account Manager"
! - Gosub ISINPUT
! - ACCT[1] = J1
! - If ACCT[0] > ACCT[1]
! -   Print @0,23;'CL RB';"Ending Account Manager Must Be Greater Than Starting";
! -   Signal 3,25 \ Goto ASK_EDT_ACCT
! - End If 
! - Return 
! - L_3600: Rem age service charges #5
! - J0$ = "6000 13714"
! - If OPT = 1 Let J0$ = "6000 13716"
! - J2$ = "#" \ J1 = SVCFLAG
! - J5$ = "Do you want to have service charges aged (Y/N)"
! - Gosub ISINPUT
! - SVCFLAG = J1
! - Return 
! - PRNT_OCRD: Rem print the acct over credit limit, acct under credit limit or both
! - J0$ = "3000 17517"
! - J2$ = "#" \ J1 = PRNTTYPE
! - J5$ = "1= Acct over credit limit, 2= acct under credit limit, 3= both"
! - Gosub ISINPUT
! - If PRNTTYPE < 1 Or PRNTTYPE > 3 Goto PRNT_OCRD
! - PRNTTYPE = J1
! - Return 
! - EDT_SORT: Rem sort by account manager
! - J0$ = "6000 13718"
! - J2$ = "#" \ J1 = SORTFLAG
! - J5$ = "Do you want to sort by account manager (Y/N)"
! - Gosub ISINPUT
! - SORTFLAG = J1
! - Return 
! - EDT_PRNTCUSTADD: Rem print customer's address and A/P phone
! - If OPT = 3
! -   J0$ = "6000 15016"
! - Else 
! -   J0$ = "6000 15019"
! - End If 
! - J2$ = "#" \ J1 = PRNTFLAG
! - J5$ = "Do you want to prnt the customer's address and A/P phone (Y/N)"
! - Gosub ISINPUT
! - PRNTFLAG = J1
! - Return 
! - L_3650: Rem minimum age -months/days
! - J0$ = "3000 35316"
! - J2$ = "###" \ J1 = MINAGE
! - If P9$[50,50] = "D"
! -   J5$ = "Enter Number of Days Minimum"
! - Else 
! -   J5$ = "Enter Number of Months Minimum"
! - End If 
! - Gosub ISINPUT
! - MINAGE = J1
! - If Not(MINAGE)
! -   MINAGEINCLUDEALL = 1
! -   Print @71,16;"Y";
! -   Return 
! - End If 
! - J0$ = "6000 17116"
! - J1 = MINAGEINCLUDEALL
! - J5$ = "Include all items for customer (even if more recent than minimum)?"
! - Gosub ISINPUT
! - MINAGEINCLUDEALL = J1
! - If MINAGEINCLUDEALL
! -   MINAMT = 0
! -   Print @49,18;MINAMT Using "#######.##"
! - End If 
! - Return 
! - L_3700: Rem minimum amount
! - If MINAGE And MINAGEINCLUDEALL
! -   Call "errmsg","Minimum amount not valid when minimum age AND all items selected!"
! -   Return 
! - End If 
! - J0$ = "3200104918"
! - J2$ = "#######.##" \ J1 = MINAMT
! - J5$ = "Enter Minimum Dollar Amount"
! - Gosub ISINPUT
! - MINAMT = J1
! - Return 
! - GETSVCNUM: Rem get service charge number
! - J0$ = "3000 65014"
! - J2$ = "######" \ J1 = SVCNUM
! - J5$ = "Enter Service Charge Number to print or  0: for all "
! - Gosub ISINPUT
! - SVCNUM = J1
! - Return 
!
L_4000: Rem    BATCH TOTALS.
if J8 Goto OUTEND ! dx xml
!
TOTAR = T9[6,1] - T9[5,1] + T9[4,1] + T9[3,1] + T9[2,1] + T9[1,1] + T9[0,1]
For X = 0 To 6
  If TOTAR
    PRCNTAR[X] = FNR((T9[X,1] / TOTAR) * 100)
  Else 
    PRCNTAR[X] = 0
  End If 
Next X
L = 99
DEJAVU = 1
Gosub L_5800
DEJAVU = 0
Print #0;"\15\\15\\15\\15\"; Tab 35;"**** ACCOUNTS RECEIVABLE TOTALS ****\15\\15\\15\"
P$ = "---,---,---.##"
Print #0; Tab 35;AGEBUCK$[81,100]; Tab 55;
Print #0; Using P$;T9[0,1];
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0; Tab 35;AGEBUCK$[61,80]; Tab 55;
Print #0; Using P$;T9[1,1];
Print #0; Using "   ----.##%";PRCNTAR[1]
Print #0; Tab 35;AGEBUCK$[41,60]; Tab 55;
Print #0; Using P$;T9[2,1];
Print #0; Using "   ----.##%";PRCNTAR[2]
Print #0; Tab 35;AGEBUCK$[21,40]; Tab 55;
Print #0; Using P$;T9[3,1];
Print #0; Using "   ----.##%";PRCNTAR[3]
Print #0; Tab 35;AGEBUCK$[1,20]; Tab 55;
Print #0; Using P$;T9[4,1];
Print #0; Using "   ----.##%";PRCNTAR[4]
If P9$[19,19] <> "Y" ! unapplied credits are not aged
  Print #0; Tab 35;"UNAPPLIED CREDIT: "; Tab 55;
  Print #0; Using P$;T9[5,1];
  Print #0; Using "   ----.##%";PRCNTAR[5]
End If 
If T9[6,1] Or SVCFLAG = 0
  Print #0; Using P$; Tab 35;"SERVICE CHARGES.:"; Tab 55;T9[6,1];
  Print #0; Using "   ----.##%";PRCNTAR[6]
End If 
Print #0; Tab 55;"--------------"
Print #0; Tab 35;"TOTAL A/R.......: "; Tab 55;
Print #0; Using P$;(T9[0,1] + T9[1,1] + T9[2,1] + T9[3,1] + T9[4,1] - T9[5,1] + T9[6,1]);
If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR[0] = 0
Print #0; Using "   ----.##%";PRCNTAR[0]
T[0] = 0
If T[4] Let T[0] = T[3] / T[4]
If P9$[50,50] <> "M" Print #0; Using "AVERAGE AGE (DAYS)----#.###"; Tab 35;T[0]
If P9$[50,50] = "M" Print #0; Using "AVERAGE AGE (MONTHS)----#.###"; Tab 35;T[0]
If GNDCRD <> 0 Print #0; Using "TOTAL PENDING CREDIT: -,---,---.##"; Tab 35;GNDCRD
For X0 = 0 To 3 \ For X1 = 0 To 8 \ T9[X1,X0] = 0 \ Next X1 \ Next X0
For X1 = 0 To 4 \ T[X1] = 0 \ Next X1
Goto OUTEND
!
L_4300: Rem print customer name
C9 = C1[1]
LET CustNAME$=c$[1,30]
IF ucase$(CN$[1,1])="A" let custname$="*"+c$[1,30]
if ucase$(CN$[1,1])="S" let custname$="*"+c$[1,30]
!
if J8 ! dx xml
  
  tmp1$=K9$,fdel$,rtrim$(Custname$[1,30]),fdel$
  If PRNTFLAG
    tmp1$=tmp1$,rtrim$(C2$[61,90]),fdel$
    tmp1$=tmp1$,rtrim$(C2$[91,120]),fdel$ 
    tmp1$=tmp1$,rtrim$(C2$[121,135]),fdel$
	tmp1$=tmp1$,C2$[136,137],fdel$,rtrim$(A2$[1,10]),fdel$
  End If 
  If P9$[15,15] = "Y" let tmp1$=tmp1$,C3$[1,6],fdel$
  tmp1$=tmp1$,rtrim$(ARTERM$),fdel$
  tmp1$=tmp1$,C1[2] using "###",fdel$,CFIN[6]using "###",fdel$
 tmp1$=tmp1$,rtrim$(C2$[1,20]),fdel$,rtrim$(PHONE$),fdel$
  If S9[0]=0 ! current a/r
    tmp1$=tmp1$,C1[10] Using "-----##.##",fdel$
    X2 = C4 \ X$ = " ",X$ \ If X2 Gosub L_7700
    tmp1$=tmp1$,X$[1,8],fdel$
    If CRDTOT <> 0 let tmp2$=CRDTOT using "-----##.##" else tmp2$=""
    tmp1$=tmp1$,tmp2$,fdel$ 
  End If 
  !  
  return
endif
!
If OPT = 2 Return 
If PRNTFLAG
  LINES = 4
Else 
  LINES = 3
End If 
DEJAVU = 1 \ Gosub L_5800 \ DEJAVU = 0
Print #0;""
Print #0;K9$;"  ";Custname$[1,30];"   TERMS:  ";ARTERM$;"  ";D1$;C1[2];
If OPT = 1
  Print #0; Using "###";"   ACCOUNT MANAGER ";CFIN[6];
End If 
If OPT = 5
  If C3[6]
    Print #0; Using "$$$$$$$#.##"; Tab 80;"LAST PAY AMT:";C3[6];
  End If 
  If C1[5]
    X2 = C1[5] \ Gosub L_7700
    Print #0; Tab 110;"LAST ORDER: ";X$[1,8];
  End If 
End If 
Print #0;""
If PRNTFLAG
  Print #0; Tab 7;C2$[61,90];
  If C2$[91,92] <> "  "
    Print #0;"  ";C2$[91,120];
  End If 
  For I = 135 To 122 Step -1
    If C2$[I,I] > " " Goto PRNTCITY
  Next I
PRNTCITY: Rem
  Print #0;",";C2$[121,I];", ";C2$[136,137];" ";A2$[1,10]
End If 
If P9$[15,15] = "Y" Print #0;C3$[1,6];
Print #0;" ";C2$[1,20];
If CNA0$[21,21] <> "" If CNA0$[21,26] <> "      "
  Print #0;"A/P PHONE: ";PHONE$;" ";
Else 
  Print #0;"PHONE: ";PHONE$;" ";
End If 
If Not(S9[0]) Print #0; Using "   AVG PAY DAYS -----##.##";C1[10];
If Not(S9[0])
  X2 = C4;X$ = " ",X$ \ If X2 Gosub L_7700
  Print #0; Tab 80;"LAST PAY DATE: ";X$[1,8];
End If 
If CRDTOT <> 0 Print #0; Using "  TOTAL PENDING CREDIT -----##.##"; Tab 102;CRDTOT;
Print #0;""
C9 = C1[1]
Return 
!
L_4500: Rem CUSTOMER TOTALS
if J8 Goto L_2000 ! dx xml
!
If C9 <> C1[1] Goto L_4590
T[0] = 0 \ If T[2] Let T[0] = T[1] / T[2]
If OPT = 2
  If Not(T9[0,2]) And Not(T9[1,2]) And Not(T9[2,2]) And Not(T9[3,2]) And Not(T9[4,2]) And Not(T9[5,2]) And Not(T9[6,2]) Goto L_4590
  LINES = 6 \ If CRDTOT Let LINES = 7
  Gosub L_5800
  Print #0;""
  Print #0;K9$; Tab 7;Custname$[1,30]; ! C$[1,30];
  If C1[0] = 9 Print #0; Tab 41;"*";
  Print #0; Tab 43;"STANDARD TERMS: ";ARTERM$;
  Print #0; Using "   AVG AGE:----#.##";T[0];
  If Not(S9[0]) Print #0; Using "   AVG PAY DAYS:  -----##.##";C1[10];
  Print #0;""
  Print #0; Tab 7;C$[31,60];
Else 
  LINES = 2 \ Gosub L_5800
  If T[0] >= 0 Print #0; Using "####.#";T[0]; Else Print #0; Using "----.#";T[0];
  Print #0;"  **** CUSTOMER TOTAL ****"; Tab 47;
End If 
P1$ = "---,---,---.##"
If Not(AGECOL) Or Not(SVCFLAG)
  AGETAB = 47
Else 
  AGETAB = 57
End If 
Print #0; Using P1$; Tab (AGETAB);(T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] - T9[5,2] + T9[6,2]);
T[1] = 0 \ T[2] = 0
If Not(AGECOL) ! print oldest to current
  For X1 = 0 To 6
    If X1 = 5 And P9$[19,19] = "Y" Goto L_4565
    If SVCFLAG <> 0 And X1 = 6 Goto L_4565
    If T9[X1,2] >= 0
      Print #0; Using "#######.##"; Tab (X1 * 10 + 61);T9[X1,2];
    Else 
      Print #0; Using "-------.##"; Tab (X1 * 10 + 61);T9[X1,2];
    End If 
L_4565: T9[X1,1] = T9[X1,1] + T9[X1,2] \ T9[X1,2] = 0
  Next X1
Else ! print current to oldest
  AGETAB = 61
  If Not(SVCFLAG)
    If T9[6,2] >= 0
      Print #0; Using "#######.##"; Tab (AGETAB);T9[6,2];
    Else 
      Print #0; Using "-------.##"; Tab (AGETAB);T9[6,2];
    End If 
    T9[6,1] = T9[6,1] + T9[6,2];T9[6,2] = 0
  End If 
  AGETAB = AGETAB + 10
  For X1 = 4 To 0 Step -1
    If T9[X1,2] >= 0
      Print #0; Using "#######.##"; Tab (AGETAB);T9[X1,2];
    Else 
      Print #0; Using "-------.##"; Tab (AGETAB);T9[X1,2];
    End If 
    AGETAB = AGETAB + 10
    T9[X1,1] = T9[X1,1] + T9[X1,2] \ T9[X1,2] = 0
  Next X1
  If P9$[19,19] <> "Y" ! age credits set to 'n'
    If T9[5,2] >= 0
      Print #0; Using "#######.##"; Tab (AGETAB);T9[5,2];
    Else 
      Print #0; Using "-------.##"; Tab (AGETAB);T9[5,2];
    End If 
    T9[5,1] = T9[5,1] + T9[5,2] \ T9[5,2] = 0
  End If 
End If 
Print #0;""
If OPT = 2
  Print #0; Tab 7;C$[91,105];" PHONE: ";
  Print #0;"(";C2$[21,23];") ";C2$[24,26];"-";C2$[27,30]
  Print #0; Tab 7;"CONTACT: ";C2$[1,20]
  K8$ = C1[2] Using "###"
  Search #8,2,1;K8$,R[8],E 
  If Not(E)
    Mat Read #8,R[8],0;SLSM$;
  Else 
    SLSM$ = "Salesperson Not On File"
  End If 
  Print #0; Using "SALESMAN ### "; Tab 7;C1[2];SLSM$
  If CRDTOT <> 0
    Print #0; Using "TOTAL PENDING CREDIT: ---,---,---.##"; Tab 10;CRDTOT
  End If 
  Print #0; Using "CREDIT LIMIT:        ----,---,---.##"; Tab 10;C12[0]
  CREDAVAIL = C12[0] - (C3[0] + C3[2] + C3[3] + C3[4] + C3[5] + ORDAMT) + C3[1]
  Print #0; Using "AVAILABLE CREDIT:   -----,---,--#.##"; Tab 10;CREDAVAIL
  L = L + 2
Else 
  Print #0;LINES$
End If 
L_4590: Goto L_2000
!
L_5000: Rem print detail line info
if J8 ! dx xml
  tmp$=tmp1$,Int(AGE[1]) Using "----#.#",fdel$
  If A3$[1,2] <> "  " let tmp2$=A3$[1,16] Else tmp2$=A4$[1,16]
  tmp$=tmp$,rtrim$(tmp2$),fdel$
  If P9$[25,25] = "Y" 
    if A4[3] 
      X2 = A4[3] \ Gosub L_7700 \ tmp2$=X$[1,5]
    else
      tmp2$=""
    End If 
	tmp$=tmp$,tmp2$,fdel$
  endif
  X2 = A2[4] \ Gosub L_7770 
  tmp$=tmp$,X$[1,8],fdel$
  TYPE = Int(Fra(A2[3]) * 100)
  tmp$=tmp$,D0$[TYPE * 3 - 2,TYPE * 3],fdel$
  tmp$=tmp$,ARREF[0] Using "########",fdel$
  If S1[2] <> 9
    tmp$=tmp$,A0[3] Using "##",fdel$,A0[6] using "##",fdel$,"",fdel$
  Else 
    tmp$=tmp$,"",fdel$,"",fdel$,Abs(A3) Using "######.##",fdel$
  End If 
  If S1[2] = 9 And A3[9] <> 0 let tmp2$=A3[9] Using "######.##" else tmp2$=""
  tmp$=tmp$,tmp2$,fdel$
  if AGECOL=0 ! oldest to current
    for cnt= 0 to 4 ! aging columns
	  if cnt=S8 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "--------.##" else tmp2$=""
	  tmp$=tmp$,tmp2$,fdel$
	next cnt
  else
     if S8>=5 
		if s8=5 and p9$[19,19]="Y" let S8=4
		if s8=6 and svcflag=0 let s8=4
		if s8>6 let s8=4
	 endif
	for cnt=4 to 0 step -1
	  if cnt=S8 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "--------.##" else tmp2$=""
      tmp$=tmp$,tmp2$,fdel$
	next cnt
  endif
  if p9$[19,19]<>"Y"
	if s8=5 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "--------.##" else tmp2$=""
	tmp$=tmp$,tmp2$,fdel$
  endif
  if svcflag=0
	if s8=6 let tmp2$=(A3[0] - A3[1] - A3[2])  Using "--------.##" else tmp2$=""
	tmp$=tmp$,tmp2$,fdel$
  endif
  if MySQLQueueID
	if not(AddMySQLReportData(e$,MySQL_ch,MySQLQueueID,fdel$,tmp$))
		! possible user abort - report deleted exit now
		reportAborted = 1
	end if
  else
	call addtostr(e$,rstr$,tmp$+rdel$)
  end if
  return
end if
!
Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
If AGE[1]
  If AGE[1] > 0 Print #0; Using "####.#";Int(AGE[1]); Else Print #0; Using "----.#";Int(AGE[1]);
End If 
If A3$[1,2] <> "  " Print #0; Tab 8;A3$[1,16]; Else Print #0; Tab 8;A4$[1,16];
If P9$[25,25] = "Y" And A4[3] <> 0
  X2 = A4[3] \ Gosub L_7700 \ Print #0; Tab 25;X$[1,5];
End If 
X2 = A2[4] \ Gosub L_7770 \ Print #0; Tab 31;X$[1,8];
TYPE = Int(Fra(A2[3]) * 100)
Print #0; Tab 41;D0$[TYPE * 3 - 2,TYPE * 3];
Print #0; Using "########"; Tab 45;ARREF[0];
If S1[2] <> 9
  Print #0; Using "##"; Tab 53;A0[3]; Tab 57;A0[6];
Else 
  Print #0; Using "######.##"; Tab 53;"[";Abs(A3);"]";
End If 
If Not(AGECOL) ! oldest to current
  Print #0; Tab (S8 * 10 + 61);
Else 
  AGETAB = 61
  If S8 >= 5
    If S8 = 5 Let AGETAB = 121
  Else 
    AGETAB = ((5 - S8) * 10 + 61)
  End If 
  Print #0; Tab (AGETAB);
End If 
If (A3[0] - A3[1] - A3[2]) >= 0
  Print #0; Using "#######.##";(A3[0] - A3[1] - A3[2]);
Else 
  Print #0; Using "-------.##";(A3[0] - A3[1] - A3[2]);
End If 
Print #0;""
Return 
!
! - L_5600: Rem DISPLAY SCREEN
! - Print 'CS';@0,0;"-mx316a-"; Tab 27;"AGED TRIAL BALANCE";
! - If OPT = 1 Or OPT = 3 Print " DETAIL";
! - If OPT = 2 Print " SUMMARY";
! - If OPT = 4 Print " BAD CHECK LIST";
! - If OPT = 5 Print " USER DEFINED";
! - If OPT = 6 Print " OPEN SERVICE CHARGES";
! - If Not(S9[0])
! -   Print @0,2;'BR';"CURRENT FILE";'ER';
! - Else 
! -   Print @0,2;'BR';"FROZEN FILE ";'ER'; Tab 15;"AGED AS OF: ";ARDATE$;
! - End If 
! - If OPT = 1 Or OPT = 3 Or OPT = 5
! -   Print @8,4;"PRINT ORDER   : "; Tab 35;"1: Reference Number or  2: Date";
! - End If 
! - If OPT <> 4 And OPT <> 6
! -   Print @8,6;"PRINT OPTION  : "; Tab 35;"1: Customer Code,  2: Customer Name, ";
! - End If 
! - Print @29,7;'BR';"STARTING";'ER';@49,7;'BR';"ENDING";'ER';
! - Print @8,8;"CUSTOMER";
! - If OPT <> 4
! -   Print @8,10;"WAREHOUSE";
! -   Print @8,12;"DIVISION";
! - End If 
! - If OPT = 1
! -   Print @8,14;"ACCT MGR";
! -   Print @8,16;"Age service charges";
! -   Print @8,17;"Print 1:Acct over credit limit  2:Acct under credit limit  3:Both";
! -   Print @8,18;"Sort by account manager";
! -   Print @8,19;"Print customer's address and A/P phone";
! - End If 
! - If OPT <> 4 And OPT <> 6 And OPT <> 1
! -   Print @8,14;"AGE SERVICE CHARGES";
! -   If OPT = 3
! -     Print @8,16;"Print customer's address and A/P phone";
! -   End If 
! - End If 
! - If OPT = 5
! -   Print @8,16;"MINIMUM ";
! -   If P9$[50,50] = "D" Print "DAY(S)"; Else If P9$[50,50] = "M" Print "MONTH(S)";
! -   Print @60,16;"ALL ITEMS?";
! -   Print @8,18;"MINIMUM AMOUNT";
! -   Print @8,19;"Print customer's address and A/P phone";
! - End If 
! - If OPT = 6
! -   Print @8,14;"SERVICE CHARGE NUMBER";
! - End If 
! - If OPT = 3 Or OPT = 5
! -   Print @5,4;"1>";@5,6;"2>";@5,10;"3>";@5,12;"4>";@5,14;"5>";
! -   If OPT = 3 Print @5,16;"6>";
! - End If 
! - If OPT = 1
! -   Print @5,4;"1>";@5,6;"2>";@5,10;"3>";@5,12;"4>";@5,14;"5>";
! -   Print @5,16;"6>";@5,17;"7>";@5,18;"8>";@5,19;"9>";
! - End If 
! - If OPT = 4
! -   Print @5,8;"1>";
! - End If 
! - If OPT = 5
! -   Print @5,16;"6>";@5,18;"7>";@5,19;"8>";
! - End If 
! - If OPT = 2
! -   Print @5,6;"1>";@5,10;"2>";@5,12;"3>";@5,14;"4>";
! - End If 
! - If OPT = 6
! -   Print @5,8;"1>";@5,10;"2>";@5,12;"3>";@5,14;"4>";
! - End If 
! - Return 
! - L_5700: Rem DISPLAY SCREEN VARIABLES
! - If OPT = 1 Or OPT = 3 Or OPT = 5
! -   Print Using "#";@25,4;D9;
! - End If 
! - If OPT <> 4 And OPT <> 6 Print Using "#";@25,6;D1;
! - If D1 = 1
! -   Print Using "######";@32,8;CUST[0];@51,8;CUST[1];
! - Else 
! -   Print @24,8;SNAME$[1,14];@42,8;ENAME$[1,14];
! - End If 
! - If OPT <> 4
! -   Print Using "##";@36,10;W1[0];@54,10;W1[1];
! -   Print Using "##";@36,12;DIV[0];@54,12;DIV[1];
! - End If 
! - If OPT = 1
! -   Print Using "###";@36,14;ACCT[0];@54,14;ACCT[1];
! -   If SVCFLAG Print @37,16;"Y" Else Print @37,16;"N";
! -   Print Using "#";@75,17;PRNTTYPE;
! -   If SORTFLAG Print @37,18;"Y" Else Print @37,18;"N";
! -   If PRNTFLAG Print @50,19;"Y" Else Print @50,19;"N";
! - End If 
! - If OPT <> 4 And OPT <> 6 And OPT <> 1
! -   If SVCFLAG Print @37,14;"Y" Else Print @37,14;"N";
! -   If OPT = 3
! -     If PRNTFLAG Print @50,16;"Y" Else Print @50,16;"N";
! -   End If 
! - End If 
! - If OPT = 5
! -   Print Using "###";@53,16;MINAGE;
! -   If MINAGEINCLUDEALL
! -     Print @71,16;"Y";
! -   Else 
! -     Print @71,16;"N";
! -   End If 
! -   Print Using "#######.##";@49,18;MINAMT;
! -   If PRNTFLAG Print @50,19;"Y" Else Print @50,19;"N";
! - End If 
! - If OPT = 6
! -   Print Using "######";@50,14;SVCNUM;
! - End If 
! - Return 
!
L_5800: Rem HEADING ROUTINE
if J8 return ! dx xml
!
L = L + LINES
If L < L9 Return 
If V9 = 0 Goto L_5835
If L9 <> 22 Goto L_5830
HEADMORE: Rem check for more
! - Print @0,23;'CL';"Press  <CR>: continue   E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Gosub L_9040
! - If J1$ <> "" Goto HEADMORE
! - Print 'CS'
L_5830: Print #0;"\14\"
L_5835: V9 = V9 + 1
Print #0;"-mx316a-";
Print #0; Tab 10;ARDATE$; Tab (66 - Int(Len(CNAME$) / 2));CNAME$; Tab 100;"PAGE";V9
Print #0; Tab 2;Msc$(3);
Print #0; Tab 49;"A G E D   T R I A L   B A L A N C E"
If OPT = 1
  Print #0; Tab 55;"D E T A I L    ";
  If SORTFLAG Print #0;"  SORT BY ACCOUNT MANAGER";
  Print #0;""
End If 
If OPT = 3 Print #0; Tab 55;"D E T A I L"
If OPT = 2 Print #0; Tab 55;"S U M M A R Y"
If OPT = 5
  Print #0; Using "OVER ### "; Tab 50;MINAGE;
  If P9$[50,50] = "D" Print #0;"DAY(S) ";
  If P9$[50,50] = "M" Print #0;"MONTH(S)";
  Print #0; Using " AND $$$$$$#.## AMOUNT ";MINAMT
End If 
If S9[0] Print #0; Tab 2;"FROZEN FILE"; Else Print #0; Tab 2;"CURRENT FILE";
Print #0; Tab 49;D2$;": ";
Print #0; Using "##";W1[0];" THRU ";W1[1];
Print #0;"   DIVISION: ";
Print #0; Using "###";DIV[0];" THRU ";DIV[1]
Print #0;" "
L = 8
If OPT <> 2
  Print #0; Tab 3;"AGE"; Tab 8;"DESCRIPTION";
  If P9$[25,25] = "Y" Print #0; Tab 25;"DUE";
  Print #0; Tab 31;"DATE"; Tab 41;"REFERENCE"; Tab 53;"WH"; Tab 57;"OT";
Else 
  If Not(AGECOL) Or Not(SVCFLAG)
    AGETAB = 51
  Else 
    AGETAB = 61
  End If 
  Print #0; Tab (AGETAB);"TOTAL";
End If 
PTAB = 63
If Not(AGECOL) ! print oldest to current
  For X = 5 To 1 Step -1
    Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
    PTAB = PTAB + 10
  Next X
  If P9$[19,19] <> "Y" Print #0; Tab 113;"UNAPL CR";
  If SVCFLAG = 0 Print #0; Tab 123;"SVC CHG";
Else ! print current to oldest
  If Not(SVCFLAG)
    Print #0; Tab (PTAB);"SVC CHG";
  End If 
  PTAB = PTAB + 10
  For X = 1 To 5
    Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
    PTAB = PTAB + 10
  Next X
  If P9$[19,19] <> "Y" Print #0; Tab (PTAB);"UNAPL CR";
End If 
Print #0;""
If V9 > 1 If Not(DEJAVU) Gosub L_4300
L = L + LINES
Return 
!
Rem {begin call.input.i}
! - ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
! - Call "Input",J1,J$,J0$,J1$,J4$,J5$
! - Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
L_7700: Rem REM  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
L_7770: Rem REM DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
L_7800: Rem REM DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
!
L_7840: Rem REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
L_7870: Rem REM CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
DO_SORT: Rem cct162357 sort by account manager - in option 1
! - Print @0,22;'CE';"Sorting, please wait...";
KSORT$ = " ",KSORT$
CLEARSORTLOOP2: Rem
Search #9,3,1;KSORT$,R[9],E 
If E Goto ENDCLEARSORTLOOP2
Search #9,5,1;KSORT$,R[9],E 
If E Let e$ = "syserrorfile 316a sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",KSORT$ \ error 10000
Goto CLEARSORTLOOP2
ENDCLEARSORTLOOP2: Rem
If D1 = 1
  K3$ = CUST[0] Using "######"
  Search #3,2,D1;K3$,R[3],E 
  If Not(E) Goto GOTEXACTCUST2
Else 
  K3$ = SNAME$[1,14]
End If 
CUSTLOOP2: Rem
Search #3,3,D1;K3$,R[3],E 
If E Goto ENDCUSTLOOP2
GOTEXACTCUST2: Rem* got exact cust # from above
If D1 = 1
  HOLDCUST = K3$[1,6]
  If HOLDCUST > CUST[1] Goto ENDCUSTLOOP2
Else 
  If K1$[1,14] > ENAME$[1,14] Goto ENDCUSTLOOP2
  HOLDCUST = K3$[15,20]
End If 
Mat Read #3,R[3],142;C1;
Mat Read #3,R[3],544;CFIN;
KSORT$[1,3] = CFIN[6] Using "###"
If D1 = 1
  KSORT$[4,9] = C1[1] Using "######"
Else 
  KSORT$[4,23] = K3$[1,20]
End If 
Search #9,4,1;KSORT$,R[3],E
If E Let e$ = "syserrorfile 316a sortfile mode (m)=4 keyno (k)=1 r=",R[3]," e=",e," keyval (k$)=",KSORT$ \ error 10000
Goto CUSTLOOP2
ENDCUSTLOOP2: Rem
Return 
!
PRESELECTCUSTOMERS: Rem
If OPT <> 5 Or Not(MINAGE) Or Not(MINAGEINCLUDEALL) Return 
! - Print @0,22;'CE';"Sorting, please wait...";
KSORT$ = " ",KSORT$
CLEARSORTLOOP: Rem
Search #9,3,1;KSORT$,R[9],E 
If E Goto ENDCLEARSORTLOOP
Search #9,5,1;KSORT$,R[9],E 
If E Let e$ = "syserrorfile 316a sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",KSORT$ \ error 10000
Goto CLEARSORTLOOP
ENDCLEARSORTLOOP: Rem
If D1 = 1
  K3$ = CUST[0] Using "######"
  Search #3,2,D1;K3$,R[3],E 
  If Not(E) Goto GOTEXACTCUST
Else 
  K3$ = SNAME$[1,14]
End If 
CUSTLOOP: Rem
Search #3,3,D1;K3$,R[3],E 
If E Goto ENDCUSTLOOP
GOTEXACTCUST: Rem* got exact cust # from above
If D1 = 1
  HOLDCUST = K3$[1,6]
  If HOLDCUST > CUST[1] Goto ENDCUSTLOOP
Else 
  If K1$[1,14] > ENAME$[1,14] Goto ENDCUSTLOOP
  HOLDCUST = K3$[15,20]
End If 
K4$ = HOLDCUST Using "######"
ARLOOP: Rem
Search #4,3,1;K4$,R[4],E 
If E Or Val(K4$[1,6]) <> HOLDCUST Goto ENDARLOOP
Mat Read #4,R[4];A2;
If A0[3] < W1[0] Or A0[3] > W1[1] Goto ARLOOP
If A0[5] < DIV[0] Or A0[5] > DIV[1] Goto ARLOOP
Mat Read #4,R[4],24;A3;
Mat Read #4,R[4],124;A0;
Mat Read #4,R[4],316;ARREF;
If P9$[19,19] = "Y" And Int(100 * Fra(A2[3])) > 5 Let A3 = 0 - A3;A3[1] = 0 - A3[1];A3[2] = 0 - A3[2]
Mat Read #4,R[4],154;A4;
AGE[1] = 0 \ ACCUMARDATEINFO = 0 \ Gosub L_3000
If Int(AGE[1]) >= MINAGE
  KSORT$ = K4$[1,6]
  Search #9,2,1;KSORT$,R[9],E 
  If E !* shouldn't be there already! - ! (possibly bad data)
    Search #9,4,1;KSORT$,R[4],E
    If E Let e$ = "syserrorfile 316a sortfile mode (m)=4 keyno (k)=1 r=",R[4]," e=",e," keyval (k$)=",KSORT$ \ error 10000
  End If 
  Goto ENDARLOOP
End If 
Goto ARLOOP
ENDARLOOP: Rem
Goto CUSTLOOP
ENDCUSTLOOP: Rem
Return 
!
OUTEND: Rem OUT
! dx close
If j8 ! dx xml
	if MySQLQueueID
		if not(reportAborted) call FinishMySQLReport(e$,MySQL_ch,MySQLQueueID)
	else
		Call addtostr(e$,rstr$,esdel$) !end section
		Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
	end if
End If 
!
try call dxclose() else rem
End 
!
! - If L9 <> 22 Goto L_9030
! - ENDMORE: Rem end ask to continue
! - Print @0,22;'CL';"End of Report Range.  Press  <CR>: continue   E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Goto L_9040
! - If J1$ <> "" Goto ENDMORE
! - L_9030: Print #0;"\14\" \ Print 'CS'; \ Goto L_1000
! - L_9040: Print 'CS'
! - Chain "MX000C"
!
L_10000: Rem INDIVIDUAL ACCT MANAGER SELECTS
For I = 1 To 1000
  AMGR[I] = 0
Next I
CT = 0
X1=1 \ EOF=0
GetNextAcctMgr:
call StringSearch(SelAcctMgr$,X1,",",X2)
if X2=-1 let X2=len(SelAcctMgr$)+1 \ EOF=1
AcctMgr=SelAcctMgr$[X1,X2-1] \ X1=X2+1
if AcctMgr<0 or AcctMgr>999 let e$="Invalid account manager '",str$(AcctMgr),"' entered!" \ error 10000
AMGR[ACCTMGR] = ACCTMGR
CT = CT + 1
if EOF=0 Goto GetNextAcctMgr
return 
!
! - Print @0,15;'CL';
! - L_10060: Print Using "ENTER ACCT MGR ### ";@0,15;CT + 1;" TO PRINT, <CR>  WHEN DONE ";'CL';
! - Input Len 16390;""Z1$
! - If Z1$ = "" Print @0,15;'CL'; \ Return 
! - ACCTMGR = Z1$
! - If ACCTMGR <= 0 Or ACCTMGR > 999
! -   Print @62,15;'RB';"INVALID ACCT MGR"; \ Signal 3,20
! -   Goto L_10060
! - End If 
! - L_10200: Rem
! - AMGR[ACCTMGR] = ACCTMGR
! - CT = CT + 1
! - Goto L_10060
! - Return 
!
CHK_O45DAYS: Rem"cct162356
K4$ = " ",K4$;K4$[1,6] = C1[1] Using "######"
AR_LOOP: Search #4,3,2;K4$,R[4],E
If E Goto END_ARLOOP
X2 = K4$[1,6] \ If X2 <> C1[1] Goto END_ARLOOP
X2 = K4$[23] \ If X2 > 4 Goto AR_LOOP
Mat Read #4,R[4],0;A2;
Mat Read #4,R[4],24;A3;
Mat Read #4,R[4],154;A4;
Mat Read #4,R[4],316;ARREF;
X2 = A2[4] \ Gosub L_7870 \ X = D3[0]
If P9$[25,25] = "Y" If A4[3] Let X = A4[3]
AGE[1] = 0;AGE[2] = ARDATE;AGE[3] = X;AGE[4] = 0
goto L_3130 ! - was If Spc(4) > 1280 Goto L_3130
! - Swap 1,"UTAGE"
L_3120: 
! - Signal 2,X,AGE[0],AGE[1] \ If X <> Spc(6) Goto L_3120
! - Goto L_3135
L_3130: ! - Call "UTAGE5",P9$,AGE[]
call UTAge5(e$,P9$,AGE[],1)
L_3135: If AGE[0] = 1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If AGE[0] = 2 Goto AR_LOOP
If Int(AGE[1]) > 45 ! "found one over 45 days
  L3 = L3 + (A3[0] - A3[1] - A3[2])
End If 
Goto AR_LOOP
END_ARLOOP: Rem "eof. see if there is a balance
Return 
!
Rem {begin src/inc/rtn.sortmsg.i}
! - PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
