! >>> Program 316h
!
! description A/R Trial Balance, Customer Credit History
!
! loadsave -w -n 100,10 -o prog/dxport/316i.dl4 src/316i.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  9, 2005  12:46:51
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/mx/mx316i.src (univ2) [mary] {13028}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem *    MX316I CUSTOMER CREDIT HISTORY REPORT
Rem **************************************
Rem *   UNIVERSAL BUSINESS SYSTEM        *
!
External Lib "ubsfunc.dl4"
Declare External Sub UTAge5
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3]
Com P9$[50]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
!
DIM CN$[10],CustNAME$[31],keycn$[30],3%,rec_cn
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim BegCust$[14],EndCust$[14]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70],rstr$[500]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 1%,F5,S8[2],C7,A0[10],FLAG
Dim 1%,D9[25],S1[10],S[21],F,R,P[2],P1,P2,P3,L,X9
Dim 1%,AGEBUCK[3],AGECOL,DDAY
Dim 2%,C,E,A2[5],C1[12],A4[7],H0[12],C6,R6,H5[8],E1[12],COID
Dim 2%,J,D,D1,D2[7],C0,ARDATE,DIV[1],D3[1],CUST[1],SCRPRT,V9
Dim 3%,A3[11],C3[5],T9[8,3],P4,P5,T[4],T8,CRDTOT,GNDCRD,T2[25]
Dim C5$[12],D0$[81],D1$[10],D2$[10],P60$[50],ARTERM$[16]
Dim K1$[30],K2$[30],K3$[25],K4$[50],K9$[50],K6$[25]
Dim F$[30],C$[30],M$[10],ARDATE$[8],P$[20],P1$[20],CNAME$[30]
Dim C2$[30],C3$[25],SEARCH_$[30]
Dim SNAME$[14],ENAME$[14]
Dim AGEBUCK$[100],AGEBUCKH$[48],P61$[256]
Dim 2%,CHT0[1],3%,CHT1[24],CHT2[24],2%,CHT3[24],CHT4[24],CHT5[24]
Dim 2%,MONTH_[24],3%,ARREF[1]
Mat Read #1,60,50;P60$;
If P60$[20,20] <> "Y"  let e$="Customer Credit History is not available" \ error 10000
!
! - COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Mat Read #1,61,0;P61$;
Mat Read #1,20,130;AGEBUCK;
Mat Read #1,20,138;AGECOL;
Mat Read #1,19,50;P9$;
P1$ = "------#.##"
P$ = "---,---,--#.##"
AGEBUCK$[1,20] = "CURRENT............:";AGEBUCKH$[1,8] = " CURRENT"
If P9$[50,50] = "M" ! age by month
  If P9$[25,25] = "Y" ! age by due date
    AGEBUCK$[21,40] = "PAST DUE...........:";AGEBUCKH$[9,16] = "PAST DUE"
    AGEBUCK$[41,60] = "OVER 1 MONTH.......:";AGEBUCKH$[17,24] = "OVER 1MO"
    AGEBUCK$[61,80] = "OVER 2 MONTHS......:";AGEBUCKH$[25,32] = "OVER 2MO"
    AGEBUCK$[81,100] = "OVER 3 MONTHS......:";AGEBUCKH$[33,40] = "OVER 3MO"
  Else 
    AGEBUCK$[21,40] = "OVER 1 MONTH.......:";AGEBUCKH$[9,16] = "OVER 1MO"
    AGEBUCK$[41,60] = "OVER 2 MONTHS......:";AGEBUCKH$[17,24] = "OVER 2MO"
    AGEBUCK$[61,80] = "OVER 3 MONTHS......:";AGEBUCKH$[25,32] = "OVER 3MO"
    AGEBUCK$[81,100] = "OVER 4 MONTHS......:";AGEBUCKH$[33,40] = "OVER 4MO"
  End If 
Else 
  If P61$[67,67] = "Y"
    AGEBUCK$ = " ",AGEBUCK$;AGEBUCKH$ = " ",AGEBUCKH$
    For X = 0 To 4
      AGEBUCK$[((X * 20) + 1),((X * 20) + 8)] = (X + 1) Using "PERIOD #"
      AGEBUCK$[((X * 20) + 9),((X * 20) + 20)] = "...........:"
      AGEBUCKH$[((X * 8) + 1),((X * 8) + 8)] = (X + 1) Using "PERIOD #"
      If X = 0 Let AGEBUCKH$[1,8] = " CURRENT"
    Next X
  Else 
    For X = 0 To 3
      AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
      AGEBUCK$[((X * 20) + 34),((X * 20) + 40)] = "......:"
      AGEBUCKH$[((X * 8) + 9),((X * 8) + 16)] = AGEBUCK[X] Using "OVER ###"
    Next X
    If P9$[25,25] = "Y" And AGEBUCK[0] = 0
      AGEBUCK$[21,40] = "PAST DUE...........:"
      AGEBUCKH$[9,16] = "PAST DUE"
    End If 
  End If 
End If 
! - F = 0
! - If Err 0 Let F = Spc(8)
! - N = Chf(5)
! - If Err 0 Gosub ERR_TRAP
! - Read #1,88,1808;F$; \ Ropen #3,F$
! - Read #1,88,1504;F$;
! - Ropen #4,F$
! - Read #1,88,336;F$; \ Ropen #5,F$
! - Read #1,88,1840;F$; \ Ropen #6,F$
! - Read #1,88,1872;F$; \ Ropen #7,F$
! - F$ = COID Using "2/ARTERMCODE#" \ Ropen #50,F$
! - Gosub L_7000
!
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 66;SCRPRT = 0
If J8 let L9 = 22 \ SCRPRT = 99
!
Mat Read #1,0,108;ARDATE;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,3;CNAME$;
! - If Not(S9[0]) Goto L_275
! - ARDATE = S9[1];X2 = ARDATE \ Gosub ISDUNPACK
! - ARDATE$ = X$
D0$ = "INVOICESVC INVNSF    DR ADJ LT CHRGCR MEMOUN.CR/OCR ADJ PAYMENT"
!
! dx add xport reporting code
DXSetup:
Dim tmp$[900],tmp1$[600],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"316i",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("custopt",tmp$) \ D1=tmp$ ! report by  1=customer#  2=customer name
call dxget("begcust",BegCust$) ! starting customer # or name
call dxget("endcust",EndCust$) ! ending customer # or name
call dxget("begdiv",tmp$) \ if tmp$="" let DIV[0]=0 else DIV[0]=tmp$ ! beg division
call dxget("enddiv",tmp$) \ if tmp$="" let DIV[1]=99 else DIV[1]=tmp$ ! end division
!  dx end
!
! customer
if D1=1 ! cust #
  CUST[0]=BegCust$
  CUST[1]=EndCust$ \ if EndCust$="" let CUST[1]=999999
  if CUST[0]<0 or CUST[0]>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
  if CUST[1]<CUST[0] or CUST[1]>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
  SNAME$=Blank$ \ ENAME$=EndParam$
else ! cust name
  SNAME$=BegCust$,Blank$
  ENAME$=EndCust$,EndParam$
  if ENAME$<SNAME$ let e$="Invalid ending customer name, must be >= starting customer name" \ error 10000
  CUST[0]=0 \ CUST[1]=999999
endif
!
! division
if DIV[0]<0 or DIV[0]>99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
if DIV[1]<DIV[0] or DIV[1]>99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
For I = 3 To 8
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  Ropen #I,J$
L_845: Next I
Data "1808","1504","336","1840","1872","720" 
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
! - D1 = 1
! - SNAME$ = " ",SNAME$;ENAME$ = "z",ENAME$
! - DIV[0] = 0;DIV[1] = 99
! - CUST[0] = 0;CUST[1] = 999999
! - Gosub L_5600
! - Gosub L_5700
! - L_900: Rem GET MORE
! - L_1000: Rem SELECT RANGES
! - For X = 0 To 4 \ T[X] = 0 \ Next X
! - For X = 0 To 8
! -   For X1 = 0 To 3
! -     T9[X,X1] = 0
! -   Next X1
! - Next X
! - Gosub L_5600 \ Gosub L_5700
! - L_1070: Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P: print  E: exit ";
! - Input Len (16384 + 1);""J$
! - Call String(1,J$)
! - If J$ = "E" Goto L_9040
! - If J$ = "P"
! -   Goto L_1100
! - End If 
! - If J$ = "R"
! -   For K = 1 To 2
! -     Gosub GETOPT
! -   Next K
! -   Goto L_1070
! - End If 
! - K = J$
! - Gosub GETOPT
! - Goto L_1070
! - GETOPT: Rem get options
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On K Gosub L_3250,L_3500
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
!
L_1100: Rem start print here
!
if J8 ! dx xml headings
  !
  tmp$=tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$
  If P9$[15,15] = "Y" let tmp$=tmp$,"2ND CUST #",fdel$
  tmp$=tmp$,"CONTACT",fdel$,"PHONE",fdel$,"SALESMAN",fdel$
  tmp$=tmp$,"TERMS",fdel$,"AVG AGE",fdel$
  tmp$=tmp$,"AVG PAY DAYS",fdel$,"TOTAL",fdel$
  If Not(AGECOL)
    For X = 5 To 1 Step -1
      tmp$=tmp$,AGEBUCKH$[((X * 8) - 7),(X * 8)],fdel$
    Next X
  Else 
    For X = 1 To 5
      tmp$=tmp$,AGEBUCKH$[((X * 8) - 7),(X * 8)],fdel$
    Next X
  End If 
  tmp$=tmp$,"UNAPL CR",fdel$,"TOTAL PENDING CREDIT",fdel$
  tmp$=tmp$,"PERIOD",fdel$,"EOM A/R BAL",fdel$
  tmp$=tmp$,"AVG PAY",fdel$,"HIGH CREDIT",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
If D1 = 1
  K1$ = CUST[0] Using "######" \ K3$ = CUST[1] Using "######"
Else 
  K1$ = SNAME$;K3$ = ENAME$
End If 
! - If Not(SCRPRT)
! -   Print @0,22;'CE';"Printing...Please Wait";
! - End If 
! - If L9 = 22 Print 'CS'
! - If Err 0 Gosub ERR_ESCAPE
!
L = 70 \ V9 = 0 \ GNDCRD = 0
Search #3,2,D1;K1$,R3,E
If Not(E) Goto L_2010
L_2000: Search #3,3,D1;K1$,R3,E 

If E Goto OUTEND
L_2010: 
If K1$[1,Len(K3$)] > K3$ Goto OUTEND
Mat Read #3,R3,0;C2$;
Mat Read #3,R3,30;C$;
Mat Read #3,R3,142;C1;
Mat Read #3,R3,194;C7;
Mat Read #3,R3,210;C3;
Mat Read #3,R3,388;C3$;
LET CN$=" ",CN$
let keycn$=" ",keycn$
let keycn$=C1[1] Using "######"
search #8,2,1;keycn$,rec_cn,e
if not(e)
	mat read #8,rec_cn,436;cn$;
endif
let custname$=c$[1,30]
if ucase$(CN$[1,1])="A" let custname$="*"+c$[1,30]
if ucase$(CN$[1,1])="S" let custname$="*"+c$[1,30]
If P9$[50,50] <> "M" And P61$[67,67] = "Y" ! not by month/by term code
  Mat Read #1,20,130;AGEBUCK;
  If C7 > 0 And C7 <= 99
    Read #50,(CUST2[0]),30;DDAY;
    If DDAY = 0 Let DDAY = 1
    If DDAY > 0
      AGEBUCK[0] = DDAY
      AGEBUCK[1] = DDAY * 2
      AGEBUCK[2] = DDAY * 3
      AGEBUCK[3] = DDAY * 4
    End If 
  End If 
  For X = 0 To 3
    AGEBUCKH$[((X * 8) + 9),((X * 8) + 16)] = AGEBUCK[X] Using "OVER ###"
  Next X
  If P9$[25,25] = "Y" And AGEBUCK[0] = 0
    AGEBUCKH$[9,16] = "PAST DUE"
  End If 
End If 
Gosub L_2800
GNDCRD = GNDCRD + CRDTOT
SEARCH_$ = " ",SEARCH_$
SEARCH_$ = C1[1] Using "######"
Search #5,2,1;SEARCH_$,R6,E 
If E Goto L_2000
Mat Read #5,R6,0;CHT0; 
Mat Read #5,R6,8;CHT1;
Mat Read #5,R6,158;CHT2; 
Mat Read #5,R6,308;CHT3;
K9$ = C1[1] Using "######" \ K9$[7] = ""
Search #4,2,1;K9$,V1,E 
If Not(E) Goto L_2081
L_2081: T8 = C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1]
If T8 Goto L_2090
For X = 0 To 24
  If CHT1[X] Goto L_2090
Next X
Goto L_2000
L_2090: 
K9$ = C1[1] Using "######"
Gosub L_2200
ARTERM$ = " ",ARTERM$
If C7 = 0
  ARTERM$ = "CASH SALE    "
Else 
  If C7 > 0 And C7 <= 99
    Read #50,C7,0;ARTERM$;
  End If 
End If 
Read #1,18,60;D1$;
Goto L_4500
!
L_2200: Rem "================================== get ar for 1 customer
K4$ = K9$
L_2210: Search #4,3,1;K4$,R4,E 
If E Return 
If K4$[1,6] > K9$ Return 
Mat Read #4,R4;A2;
Mat Read #4,R4,24;A3;
Mat Read #4,R4,124;A0;
Mat Read #4,R4,154;A4;
Mat Read #4,R4,316;ARREF;
If W1 If W1 <> A0[3] Goto L_2210
If A0[5] < DIV[0] Or A0[5] > DIV[1] Goto L_2210
If P9$[19,19] <> "Y" Goto L_2277
If Int(100 * Fra(A2[3])) < 6 Goto L_2277
A3 = - A3;A3[1] = - A3[1];A3[2] = - A3[2]
L_2277: AGE[1] = 0 \ Gosub L_3000
S1[1] = Fra(AGE[1]) * 10
E = 0
If S1[1] > 4 Let S1[1] = 4
S1[2] = Int(100 * Fra(A2[3]))
S1 = S1[2] * 7 - 6
S8 = 0
If P9$[19,19] <> "Y" If S1[2] > 5 Let S8 = 5
If S8 = 5 Goto L_2490
S8 = 4 - S1[1]
L_2490: T9[S8,2] = T9[S8,2] + (A3 - A3[1] - A3[2])
Goto L_2210
L_2800: K6$ = " ",K6$ \ CRDTOT = 0
K6$ = C1[1] Using "######"
L_2820: 
Search #6,3,2;K6$,R6,E 
If E Goto L_2910
C6 = K6$[1,6] \ If C6 <> C1[1] Goto L_2910
Mat Read #6,R6;H0; \ Mat Read #6,R6,104;H5;
If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(7) - 1 Goto L_2900
If H5[8] < DIV[0] Or H5[8] > DIV[1] Goto L_2900
If H0 >= 9 And H0 <= 11
  Mat Read #7,H0[3],8;T2
  CRDTOT = CRDTOT + T2[0]
End If 
L_2900: Goto L_2820
L_2910: Return 
!
L_3000: Rem "=========================================== aging routine
If Not(A2[4]) let e$="No date found for reference # ",str$(ARREF),"!" \ error 10000
If P9$[19,19] <> "Y" If Int(Fra(A2[3]) * 100) > 5 Goto L_3100
X2 = A2[4] \ Gosub L_7870 \ X = D3[0]
X2 = A4[3] \ Gosub L_7840 \ A4[3] = 0
If P9$[25,25] = "Y" If A4[3] Let X = A4[3]
If Int(Fra(A2[3]) * 100) > 5 And A4[3] = 0 Let X = D3[0]
AGE[1] = 0;AGE[2] = ARDATE;AGE[3] = X;AGE[4] = 0
If P61$[67,67] = "Y" And P9$[50,50] <> "M"
  AGE[7] = C7;AGE[6] = 50
Else 
  AGE[7] = 0;AGE[6] = 0
End If 
! - If Spc(4) > 1280 Goto L_3065
! - Swap 1,"UTAGE"
! - L_3055: Signal 2,X,AGE[0],AGE[1] \ If X <> Spc(6) Goto L_3055
! - Goto L_3070
! - L_3065: Call "UTAGE5",P9$,AGE[]
call UTAge5(e$,P9$,AGE[],1)
If AGE[0] = 1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If AGE[0] = 2 Goto L_3100
T[1] = T[1] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[2] = T[2] + (A3 - A3[1] - A3[2])
T[3] = T[3] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[4] = T[4] + (A3 - A3[1] - A3[2])
L_3100: Return 
!
! - L_3250: J0$ = "3000 12506"
! - J2$ = "#" \ J1 = D1
! - J5$ = "Enter Print Option  1: Customer Code or  2: Customer Name"
! - Gosub ISINPUT
! - D1 = J1
! - If D1 < 1 Or D1 > 2 Goto L_3250
! - GETCUSTRNG: Rem get customer range
! - Print @24,8;'CL';
! - If D1 = 1
! - L_3300: J0$ = "3000 63208"
! -   J2$ = "######" \ J1 = CUST[0]
! -   J5$ = "Enter Starting Customer Code"
! -   Gosub ISINPUT
! -   CUST[0] = J1
! -   J0$ = "3000 65108"
! -   J2$ = "######" \ J1 = CUST[1]
! -   J5$ = "Enter Ending Customer Code"
! -   Gosub ISINPUT
! -   CUST[1] = J1
! -   If CUST[0] > CUST[1]
! -     Print @0,23;'CL RB';"Ending Customer Code Must Be Greater Than Starting";
! -     Signal 3,20 \ Goto L_3300
! -   End If 
! - Else 
! - L_3367: J0$ = "2 00142408"
! -   J1$ = SNAME$[1,14]
! -   J5$ = "Enter Starting Customer Name"
! -   Gosub ISINPUT
! -   SNAME$[1,14] = J$
! -   J0$ = "2 00144208"
! -   J1$ = ENAME$[1,14]
! -   J5$ = "Enter Ending Customer Name"
! -   Gosub ISINPUT
! -   ENAME$[1,14] = J$
! -   If ENAME$ < SNAME$
! -     Print @0,23;'CL RB';"Ending Name Must Be Greater Than Starting Name";
! -     Signal 3,30 \ Goto L_3367
! -   End If 
! - End If 
! - Return 
! - L_3500: Rem division #4
! - L_3505: J0$ = "3000 23612"
! - J2$ = "##" \ J1 = DIV[0]
! - J5$ = "Enter Starting Division"
! - Gosub ISINPUT
! - DIV[0] = J1
! - J0$ = "3000 25412"
! - J2$ = "##" \ J1 = DIV[1]
! - J5$ = "Enter Ending Division"
! - Gosub ISINPUT
! - DIV[1] = J1
! - If DIV[0] > DIV[1]
! -   Print @0,23;'CL RB';"Ending Division Must Be Greater Than Starting";
! -   Signal 3,25 \ Goto L_3505
! - End If 
! - Return 
!
L_4500: Rem CUSTOMER TOTALS
if J8 ! dx xml
  tmp1$=K9$,fdel$,rtrim$(Custname$[1,30]),fdel$
  If P9$[15,15] = "Y" tmp1$=tmp1$,C3$[1,6],fdel$
  tmp1$=tmp1$,rtrim$(C2$[1,20]),fdel$
  tmp1$=tmp1$,"(",C2$[21,23],") ",C2$[24,26],"-",C2$[27,30],fdel$
  tmp1$=tmp1$,C1[2] using "###",fdel$,rtrim$(ARTERM$),fdel$
  T[0] = 0 \ If T[2] Let T[0] = T[1] / T[2]
  tmp1$=tmp1$,T[0] Using "----#.##",fdel$
  tmp1$=tmp1$,C1[10] Using "-----##.##",fdel$
  tmp1$=tmp1$,(T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] - T9[5,2]) Using P1$,fdel$
  X2 = 0 \ T[1] = 0 \ T[2] = 0
  If Not(AGECOL) ! print oldest to current
    For X1 = 0 To 5
      tmp1$=tmp1$,T9[X1,2] Using P1$,fdel$
      T9[X1,2] = 0
    Next X1
  Else 
    For X1 = 4 To 0 Step -1
      tmp1$=tmp1$,T9[X1,2] Using P1$,fdel$
      T9[X1,2] = 0
    Next X1
    tmp1$=tmp1$,T9[5,2] Using P1$,fdel$
    T9[5,2] = 0
  End If 
  tmp1$=tmp1$,CRDTOT Using "--,---,--#.##",fdel$
  !
else ! print
  !
  LINES = 13 \ Gosub L_5800
  Print #0;"\12\";K9$;"  ";Custname$[1,30];"     STANDARD TERMS:  ";ARTERM$;
  T[0] = 0 \ If T[2] Let T[0] = T[1] / T[2]
  Print #0; Using "   AVG AGE:----#.##";T[0];
  If Not(S9[0]) Print #0; Using "   AVG PAY DAYS:  -----##.##";C1[10];
  Print #0;""
  If P9$[15,15] = "Y" Print #0;C3$[1,6];
  Print #0;"    ";C2$[1,20];"(";C2$[21,23];") ";C2$[24,26];"-";C2$[27,30];
  Print #0;" ";D1$;C1[2];
  Print #0; Tab 60;
  Print #0;"     TOTAL";
  PTAB = 72
  If Not(AGECOL)
    For X = 5 To 1 Step -1
      Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
      PTAB = PTAB + 10
    Next X
  Else 
    For X = 1 To 5
      Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
      PTAB = PTAB + 10
    Next X
  End If 
  Print #0; Tab 122;"UNAPL CR"
  If CRDTOT <> 0 Print #0; Using "    TOTAL PENDING CREDIT --,---,---.##";CRDTOT;
  Print #0; Tab 60;
  Print #0; Using P1$;(T9[0,2] + T9[1,2] + T9[2,2] + T9[3,2] + T9[4,2] - T9[5,2]);
  PTAB = 70
  X2 = 0 \ T[1] = 0 \ T[2] = 0
  If Not(AGECOL) ! print oldest to current
    For X1 = 0 To 5
      Print #0; Using P1$; Tab (PTAB);T9[X1,2];
      T9[X1,2] = 0
      PTAB = PTAB + 10
    Next X1
  Else 
    For X1 = 4 To 0 Step -1
      Print #0; Using P1$; Tab (PTAB);T9[X1,2];
      T9[X1,2] = 0
      PTAB = PTAB + 10
    Next X1
    Print #0; Using P1$; Tab (PTAB);T9[5,2];
    T9[5,2] = 0
  End If 
  Print #0;""
endif
Gosub L_5000 ! print credit history
Goto L_2000 ! next customer
!
L_5000: Rem PRINT CREDIT HISTORY
MONTH_[0] = CHT0[1]
For X = 1 To 24
  MONTH_[X] = MONTH_[X - 1] - 1
  X$ = MONTH_[X] Using "&&&&" \ M = X$[3,4] \ If M Goto L_5040
  Y = X$[1,2] \ Y = Y - 1 \ M = 12 \ If Y < 0 Let Y = Y + 100
  X$[1,2] = Y Using "&&" \ X$[3,4] = M Using "&&"
  MONTH_[X] = X$[1,4]
L_5040: Next X
!
if J8 ! dx xml
  For X = 1 To 24
    X$ = MONTH_[X] Using "&&&&"
    tmp$=tmp1$,X$[3,4],"/",X$[1,2],fdel$
    tmp$=tmp$,CHT1[X] Using "---,---,---.##",fdel$
    tmp$=tmp$,CHT3[X] Using "----.##",fdel$
    tmp$=tmp$,CHT2[X] Using "---,---,---.##",fdel$
    !
    call addtostr(e$,rstr$,tmp$+rdel$)
  Next X
  return
end if
!
Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
Print #0; Tab 9;"EOM A/R BAL"; Tab 22;"AVG PY"; Tab 32;"HIGH CREDIT";
Print #0; Tab 53;"EOM A/R BAL"; Tab 66;"AVG PY"; Tab 76;"HIGH CREDIT";
Print #0; Tab 97;"EOM A/R BAL"; Tab 110;"AVG PY"; Tab 120;"HIGH CREDIT";
Print #0;""
For X = 1 To 8
  X$ = MONTH_[X] Using "&&&&"
  Print #0;X$[3,4];"/";X$[1,2];
  Print #0; Using "---,---,---.##"; Tab 6;CHT1[X];
  Print #0; Using "----.##"; Tab 21;CHT3[X];
  Print #0; Using "---,---,---.##"; Tab 29;CHT2[X];
  X$ = MONTH_[X + 8] Using "&&&&"
  Print #0; Tab 45;X$[3,4];"/";X$[1,2];
  Print #0; Using "---,---,---.##"; Tab 50;CHT1[X + 8];
  Print #0; Using "----.##"; Tab 65;CHT3[X + 8];
  Print #0; Using "---,---,---.##"; Tab 73;CHT2[X + 8];
  X$ = MONTH_[X + 16] Using "&&&&"
  Print #0; Tab 89;X$[3,4];"/";X$[1,2];
  Print #0; Using "---,---,---.##"; Tab 94;CHT1[X + 16];
  Print #0; Using "----.##"; Tab 109;CHT3[X + 16];
  Print #0; Using "---,---,---.##"; Tab 117;CHT2[X + 8]
Next X
Return 
!
! - L_5600: Rem DISPLAY SCREEN
! - Print 'CS';@0,0;"-mx316i-"; Tab 27;"CUSTOMER CREDIT HISTORY";
! - Print @8,6;"PRINT OPTION  : "; Tab 35;"1: Customer Code,  2: Customer Name ";
! - Print @29,7;'BR';"STARTING";'ER';@49,7;'BR';"ENDING";'ER';
! - Print @8,8;"CUSTOMER";
! - Print @8,12;"DIVISION";
! - Print @5,6;"1>";@5,12;"2>";
! - Return 
! - L_5700: Rem DISPLAY SCREEN VARIABLES
! - Print Using "#";@25,6;D1;
! - If D1 = 1
! -   Print Using "######";@32,8;CUST[0];@51,8;CUST[1];
! - Else 
! -   Print @24,8;SNAME$[1,14];@42,8;ENAME$[1,14];
! - End If 
! - Print Using "##";@36,12;DIV[0];@54,12;DIV[1];
! - Return 
!
L_5800: Rem HEADING ROUTINE
if J8 return ! dx xml
!
L = L + LINES
If L < L9 Return 
If V9 = 0 Goto L_5860
If L9 <> 22 Goto L_5850
! - HEADMORE: Rem check for more
! - Print @0,23;'CL';"Press <CR>: continue  E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Gosub L_9040
! - If J1$ <> "" Goto HEADMORE
! - Print 'CS'
L_5850: Print #0;"\14\"
L_5860: V9 = V9 + 1
Print #0;"-mx316i-";
Print #0; Tab 10;ARDATE$; Tab (66 - Int(Len(CNAME$) / 2));CNAME$; Tab 120;"PAGE";V9
Print #0; Tab 2;Msc$(3);
Print #0; Tab 49;"C U S T O M E R   C R E D I T   H I S T O R Y"
Print #0;" "
L = 4 + LINES
Return 
!
! - L_7000: Rem CHECK PRINTER TYPE
! - F = 0
! - If Err 0 Let F = Spc(8)
! - N = Chf(0)
! - If Err 0 Gosub ERR_TRAP
! - L9 = 66;SCRPRT = 0
! - If F
! -   L9 = 22
! -   SCRPRT = 99
! - End If 
! - Return 
!
Rem {begin call.input.i}
! - ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
! - Call "Input",J1,J$,J0$,J1$,J4$,J5$
! - Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
OUTEND: Rem OUT
if J8=0 print #0;"\14\"
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - If L9 <> 22 Goto L_9030
! - ENDMORE: Rem end ask to continue
! - Print @0,22;'CL';"End of Report Range.  Press <CR>: continue  E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Goto L_9040
! - If J1$ <> "" Goto ENDMORE
! - L_9030: Print #0;"\14\" \ Print 'CS'; \ Goto L_1000
! - L_9040: Print 'CS'
! - Chain "MX000C"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
