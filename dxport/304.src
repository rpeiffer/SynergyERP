! >>> Program 304
!
! description CASH RECEIPTS JOURNAL  part 1 - DETAIL 
!
! loadsave -w -n 100,10 -o prog/dxport/304.dl4 src/304.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 31, 2008  12:59:02
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx304.src (univ2) [jcs] {48284}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare Sub CurrConvUP,CurrConvDown
Rem *      MX304 C/R JOURNAL LIST        *
Rem **************************************
Rem *   UNIVERSAL BUSINESS SYSTEM        *
Com P60$[50],1%,BANK,ALLBANK
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
try
 
dim 3%,currvar,currfact,currvartot,1%,currid,currpass,bcurrid
Dim 1%,cnvcu[10],3%,cnvca[10]
dim keycurr$[20],currdesc$[30]
Dim 1%,A8,A9,E,I,L9,2%,J,D9,B6,TOTALFLAG,TOTBANKREC,REC
Dim 1%,A[2],F,L1,P,S[2],V,V1,X,PD1[7],S0,C9,P0[1023],II,FLAGB
Dim 2%,B[3],D[8],N,X1,X2,R9,L,C5,JSEQ,DT3[1],A2[5]
Dim P9$[50],3%,G1,UIDREC[1],USR$[40],Accpt$[1]
Dim 3%,T[6],T1[5],T9[9],T8[2],A4
Dim C$[30],C1$[24],C2$[30],D$[8],G$[30],M$[12],P$[127]
Dim Z$[30],K9$[60],P61$[256]
Dim B$[60],T9$[26]
Dim F$[16],X$[10],CUST$[10]
Dim 2%,I2,I3
Dim 3%,V6[6]
Dim H$[50],DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNS(H) = Int(Abs(H) * 100) * .01 * Sgn(H) ! rounding to nearest penny
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo ! E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Close #1 ! getsession open cntrl# as READONLY
F$="cntrl/cntrl"+Str$(COID)
Open #1,f$
For X = 2 To 7
  Read J
  If J = -1 Goto L_450
  Mat Read #1,88,Abs(J);F$;
  Open #X,F$
L_450: Next X
Data "-1536","-1","-1440","-1488","1456","-1504"
! Print 'CS'; Tab 0;"-MX304-"; Tab 25;"CASH RECEIPTS JOURNAL";
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
if p61$[136,136]="Y"
	let f$=coid using "2/CURRENCY#"
	ropen #20,f$
endif

TOTBANKREC = Chf(6) - 1
!If P9$[17,17] <> "M" Goto L_530
!Print @0,22;'CL';"**WARNING**: GENERAL LEDGER IS NOT ACTIVATED!!! ";
!Print @0,23;'CL';"Do you wish to continue? "; \ Input ""F$
!If F$ <> "YES" Goto L_9070
returnstatus=0
message$=""
Call DXGet("M_ACCPT",tmp$)
let tmp$=rtrim$(tmp$)
!F$=UCase$(Trim$(tmp$))
!if F$="1" let f$="Y"
!let f$="Y" ! default to yes
!If F$ <> "Y" 
	!Let Message$="OK - NO UPDATE"
	!Call SetOutput(e$,rstr$,1,message$) ! send an ok w/0 message
	!Goto L_9010
!Endif
reperr=0
IF tmp$<>"" let Accpt$="Y"
If P9$[49,49] = "Y" 
	Read #1,20,20;P0;
	If PO<>0 
		Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Electronic Cash Receipts In Process. Try Accept Later."
	endif
endif
!L_550: Ropen #77,"PRTDFLT" \ Ropen #78,"USERPORT"
!Mat Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!Mat Read #77,A4,0;PD1;
!Close #77 \ Close #78
Mat Read #1,60,50;P60$;
if p60$[6,6]<>"Y"
	Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Multiple Banks Option Not Available "
	goto L_9070:
endif

If P60$[6,6] = "Y" ! "doing cash receipts by bank
 Call DXGet("M_BANK",tmp$)
 let f$=tmp$
 if Accpt$="Y" let f$="0"
  If Len(F$) > 2
    Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Invalid Bank Number "+ F$
    !goto outend: ! !Print @0,23;'CL RB';"Invalid";
    !Signal 3,10 \ Goto L_1030
  End If 
!L_600: BANK = PD1[7] \ If Not(BANK) Let BANK = 1
!  Print @0,23;'CL';"Enter Bank # to Process, 0: All Banks, E: End ";
!  Print @1,5;'CL';"BANK NUMBER ";BANK
 ! Input @14,5;""F$
 ! Call String(1,F$)
  !If F$ = "E" Goto L_9070
 ! If Len(F$) > 2
  !  Print @0,23;'CL RB';" INVALID!!";
    ! Signal 3,10
 ! End If 
 ! Print @0,23;'CL';
  !If F$ = "" Let F$ = BANK Using "##"
 ! Print @14,5;'CL'; \ Print F$
  If F$ = "0"
    !Print @17,5;"All Banks";
    ALLBANK = 99
    BANK = 0
    Gosub L_8000
    ! Goto L_9070
    BANKTOPROC = 0
    Dim 2%,BENT[TOTBANKREC]
    For REC = 1 To TOTBANKREC
      Read #6,REC,36;P0;
      If P0 < 3
        Read #6,REC,40;I3;
        Read #6,REC,44;I2;
        If I3 <> I2 Let BANKTOPROC = 99
      End If 
    Next REC
    If Not(BANKTOPROC)
       Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- No Banks To Process"
      ! Signal 3,30
      BANK = 0
      Goto OUTEND
    End If 
  Else 
    BANK = F$
    If BANK <= 0 Or BANK >= 100
       Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Invalid Bank Number "+str$(bank)
      ! Signal 3,10
      Goto outend:
    End If 
    Gosub L_8300
    
  End If 
Else 
  BANK = 0
  Gosub L_8000
  
End If 
! If Err 0 Gosub ERR_ESCAPE
!L_800: Print @1,7;'CL';"Enter Print Option:  D: Detail,  S: Summary  E: End ";
!Input Len (16384 + 1);""F$
!Call String(1,F$)
!If F$ = "E" Goto OUTEND
!If F$ = "S" Chain "MX304A"
!If F$ <> "D" Goto L_800
Mat Read #1,20,126;JSEQ;
!L_840: Print @1,9;'CL';"Print In Customer Number Order (Y/N/E: End) ";
!Input Len (16384 + 1);""CUST$
! Call String(1,CUST$)
if eflg goto outend: ! have error leave program
LET Cust$="N" 
Call DXGet("M_CUSTORD",tmp$) ! bank - customer order 
if tmp$<>"" let Cust$="Y"
If CUST$ = "" Let CUST$ = "N"
If CUST$ = "Y" Let C9 = 9 
If CUST$ = "N" Let C9 = 2 
If CUST$ = "Y" Let C9 = 9 Else Let C9 = 2
R9 = Chf(4) \ Dim 3%,M9[R9]
R9 = Chf(5) \ Dim 3%,O9[R9]
Mat Read #1,19,50;P9$;
Gosub L_7000
F = 0
Read #1,0,108;D;
If BANK
  Read #6,BANK,40;I3;
Else 
  Read #1,20,34;I3;
End If 
Read #1,3;P$[1,30];
Mat Read #1,0,100;D$;
M$[1,11] = "----,--#.##"
STARTALLBANK: Rem start to print by a bank
If ALLBANK ! find bank to process
  BANK = BANK + 1
  If BANK <= TOTBANKREC
    For REC = BANK To TOTBANKREC
      Mat Read #6,REC,40;I3;
      Mat Read #6,REC,44;I2;
	  Mat Read #6,REC;Z$;
      Read #6,REC,36;P0;
      If I3 <> I2 And P0 < 3
        Mat Read #6,REC,40;I3
        If I3 Let BENT[REC] = I3 Else Let BENT[REC] = .01
        Read #6,REC,36;P0
        P0 = 3
        Write #6,REC,36;P0
        Goto ENDBANKSEARCH
      End If 
    Next REC
ENDBANKSEARCH: BANK = REC
  End If 
  If BANK > TOTBANKREC
    For REC = 1 To TOTBANKREC
      If BENT[REC]
        Read #6,REC,36;P0
        If Not(F9) Let P0 = 4 Else Let P0 = 0
        Write #6,REC,36;P0;
      End If 
      BENT[REC] = 0
    Next REC
    Goto UPDATEJOURNAL
  End If 
End If 
IF V>0 Print #0;"\14\"
If CUST$ = "Y" Gosub L_6500
! Print @0,22;'CL';"Printing....";
For X = 0 To 6 \ V6[X] = 0 \ Next X
!Gosub L_5800
LET V=0;L1=99
let currpass=0
if bank<>0 and p61$[136,136]="Y" 
	mat read #6,bank,248;bcurrid;
	if bcurrid<>0 
		let currpass=99
		let currdesc$=""
		let keycurr$=bcurrid using "####"
		search #20,2,1;keycurr$,rec_curr,e
		if not (e)
			mat read #20,rec_curr,2;currdesc$;
		endif
	endif
endif
B$ = " ",B$ \ B$ = I3 Using " 1#####"
If BANK Let B$[1,2] = BANK Using "##"
If C9 = 9 Let B$ = " ",B$
L_2000: Search #C9,3,1;B$,L,E
if e<>0 
	if p61$[136,136]="Y" and currpass<>0 
		Mat Read #6,A8;Z$;
		gosub L_4040:
		If L1 = 8 Gosub L_4000
		let B$ = I3 Using " 1#####"
		 If C9 = 9 Let B$ = " ",B$
		 B$[1,2] = A9 Using "##"
		 if bank<>0 let b$[1,2]=bank using "##"
		let a8=0;a9=0
		let currpass=0;F=0
		let l1=99
		let totalflag=0
		gosub L_5800: 
		goto L_2000:
	else
		if a8<>0 Mat Read #6,A8;Z$;
		! gosub L_4040:
		let f=0
		Goto L_8900
	endif
endif
If E Goto L_8900
A8 = B$[1,2] \ I2 = B$[3,7]
If C9 = 9 Let I2 = B$[9,13]
If Not(BANK)
  If I2 <= I3 Goto L_2000
  !If A8 <> A9 If A9 Gosub L_4040
  !If A8 <> A9 If L1 = 8 Gosub L_4000
  !A9 = B$[1,2]
  If A8 <> A9
	If A9>0 
		Mat Read #6,A9;Z$;
		Gosub L_4040	
	endif
    If L1 = 8 Gosub L_4000
	IF P61$[136,136]<>"Y" and A9>0
		IF L1=99 GOSUB L_5800: 
	endif
	if p61$[136,136]="Y"
		if currpass<>0
			B$ = I3 Using " 1#####"
			If C9 = 9 Let B$ = " ",B$
			 B$[1,2] = A9 Using "##"
			let currpass=0;f=0
			let a8=0;a9=0
			let l1=99
			let totalflag=0
			gosub L_5800: 
			goto L_2000:
		else
			Mat Read #6,A8;Z$;
			mat read #6,a8,248;bcurrid;
			if bcurrid<>0 
				let currpass=99
				let currdesc$=""
				let keycurr$=bcurrid using "####"
				search #20,2,1;keycurr$,rec_curr,e
				if not (e)
					mat read #20,rec_curr,2;currdesc$;
				endif
			endif
		endif
	endif
  endif
  A9 = B$[1,2]
Else 
  If A8 > BANK 
    Let A8 = BANK \ Gosub L_4000 \ A8 = B$[1,2] \ Goto L_2067
  endif
  If I2 <= I3 Goto L_2000
  If L1 = 8
    !If A8 > BANK Let A8 = BANK \ Gosub L_4000 \ A8 = B$[1,2] \ Goto L_2067
    !Gosub L_4000
	!L_2067: End If 
	!If A8 > BANK Goto L_8900
	If A8 > BANK 
		Let A8 = BANK \ Gosub L_4000 \ A8 = B$[1,2] \ Goto L_2067
	endif
	! Gosub L_4000
	L_2067: !
	End If 
	If A8 > BANK 
		if p61$[136,136]="Y" and currpass<>0 
			let a8=bank
			Mat Read #6,A8;Z$;
			Gosub L_4040
			If L1 = 8 Gosub L_4000
			let B$ = I3 Using " 1#####"
			If C9 = 9 Let B$ = " ",B$
			B$[1,2] = Bank Using "##"
			let currpass=0;f=0
			let a8=0;a9=0
			let l1=99
			let totalflag=0
			gosub l_5800
			goto L_2000:
		endif	
		Goto L_8900
	endif
End If 
Mat Read #2,L;S
Mat Read #2,L,6;D;
Mat Read #2,L,44;T;
Mat Write #2,L,156;JSEQ;
Read #2,L,86;C$[1,30],C1$[1,10];
Mat Read #2,L,126;C2$;
Mat Read #2,L,172;currid;
Mat Read #2,L,174;currfact;
Mat Read #2,L,180;CURRVAR;
if currpass<>0 and currfact<>0
	if t[1]<>0 ! bank amount
		call currconvup(t[1],currfact)
		let t[1]=fnr(t[1])
	endif
	if t[2]<>0 ! debit amount
		call currconvup(t[2],currfact)
		let t[2]=fnr(t[2])
	endif
	if t[3]<>0 ! credit amount
		call currconvup(t[3],currfact)
		let t[3]=fnr(t[3])
	endif
	if t[4]<>0 ! discount amt
		call currconvup(t[4],currfact)
		let t[4]=fnr(t[4])
	endif
	if t[6]<>0 ! discount amt
		call currconvup(t[6],currfact)
		let t[6]=fnr(t[6])
	endif
endif
If X1 = D[8] Goto L_2180
If (V6[0] + V6[1] + V6[2] + V6[3] + V6[4] + V6[5]+v6[6]) and not (currpass)
  Print #0;"*********  ENTRY OUT OF BALANCE *********" \ L1 = L1 + 1 \ F9 = 98
End If 
For X = 0 To 6 \ V6[X] = 0 \ Next X
X1 = D[8]
B6 = 0
B6 = D[6]
if l1=99 gosub L_5800: 
Gosub L_5390
Print #0; Using "#####";D[8];
F = 0
L_2180: Rem IF F>0 GOTO L_620:
If S = 0 Let C$ = "DELETED"
X2 = D[4] \ Gosub L_7700
If D[4] Print #0; Tab 6;X$[1,8];
If P61$[41,41] <> "Y" And F > 0 Goto L_2260
Gosub L_5010
If S <> 6 Goto L_2240
Mat Read #4,D[5];G$[1,24]; \ C$[1,24] = G$[1,24] \ Goto L_2250
L_2240: If Not(D) Let C$ = "J/E FOR OTHER A/R"
L_2250: Gosub L_5040
L_2260: If C1$ <> "" Goto L_2290
If T = 0 Goto L_2290
C1$ = T
L_2290: On S Goto L_2320,L_2630,L_2720,L_2800,L_2860,L_2970,pay_dep,app_dep,del_dep
If Not(F)
	if l1=99 gosub l_5800:
	Gosub L_5360
endif
Goto L_3100
L_2320: Rem      TYPE 1 APPLIED.
V6[0] = V6[0] - (T[3] - T[2]);V6[1] = V6[1] + T[1]
V6[2] = V6[2] + T[4];V6[3] = V6[3] + T[6]
if p61$[136,136]="Y" and currvar<>0 and not(currpass)
	let v6[6]=v6[6]+currvar
endif
Gosub L_5140
If Not(T[3]) If Not(T[2]) Goto L_3090
Print #0; Tab 75;
On S[2] Goto L_2380,L_2420,L_2400,L_2460,L_2420,L_2480,L_2510,L_2580,L_2440
Goto L_2600
L_2380: Print #0;"INVOICE";
If D[2]
  Mat Read #7,D[2],0;A2;
  Gosub JUL2YMD
End If 
Goto L_2490
L_2400: Print #0;"RET CHK";
Goto L_2490
L_2420: Print #0;"LATE/SVC CHG";
Goto L_2490
L_2440: Print #0;"PAYMENT ";
Goto L_2490
L_2460: Print #0; Using "########"; Tab 75;"DR ADJ"; Tab 86;T;
Goto L_2600
L_2480: Print #0; Tab 75;"CR MEMO";
If D[2]
  Mat Read #7,D[2],0;A2;
  Gosub JUL2YMD
End If 
L_2490: If S[2] = 1 Or S[2] = 6
  Print #0; Using " ########";T;
  Print #0;" ";X$[3,4];"/";X$[5,6];"/";X$[1,2];
Else 
  Print #0; Using " ########";T;
End If 
Goto L_2590
L_2510: Print #0; Tab 75;"UN.CR/OTH";
If T Print #0; Using "########"; Tab 86;T;
Goto L_2590
Print #0; Tab 75;"UN.CR/OTH";
If T Print #0; Using "########"; Tab 86;T;
S[2] = 7
Goto L_2590
L_2580: Print #0; Using "########"; Tab 75;"CR ADJ "; Tab 86;T;
L_2590: If S[2] > 5 Goto L_2810
L_2600: If T4[1] Goto L_2610
If S[2] <> 9 Goto L_2610
Print #0; Using "########"; Tab 75;"PAYMENT"; Tab 86;T4;
Goto L_2810
L_2610: T1[3] = T1[3] + T[3]
Goto L_2690
L_2630: Rem      TYPE 2 UNAPPLIED.
V6[0] = V6[0] - (T[3] - T[2])
Gosub L_5140
If S[2] = 7 Print #0; Tab 75;"UN.CR/OTH";
If S[2] = 9 Print #0; Tab 75;"PAYMENT";
If S[2] = 4 Print #0; Tab 75;"DR ADJ";
If S[2] = 8 Print #0; Tab 75;"CR ADJ";
If T Print #0; Using "########"; Tab 86;T;
T1[3] = T1[3] + T[3]
L_2690: Gosub L_5240
Goto L_3090
L_2720: Print #0; Tab 75;"CR ADJ: ";
If Not(D[6]) Let V6[0] = V6[0] - (T[3] - T[2])
If D[6] = 1 Print #0; Tab 75;"WR.OFF";
If D[6] = 2 Print #0; Tab 75;"BAD DB";
Print #0; Using "########"; Tab 86;T;
Gosub L_5240
T1[3] = T1[3] + T[3]
Goto L_3090
L_2800: Print #0; Using "########"; Tab 75;"DR. ADJ: "; Tab 86;T;
V6[0] = V6[0] - (T[3] - T[2])
L_2810: T[3] = T[2]
Gosub L_5240
T1[3] = T1[3] - T[2]
If T[3] <> 0 Print #0;"DR";
Goto L_3090
L_2860: Rem      TYPE 5 NF.
V6[0] = V6[0] - (T[3] - T[2]) \ V6[1] = V6[1] + T[1]
T[3] = T[2]
Print #0; Tab 75;"RET CHK";
If T Print #0; Using "########"; Tab 86;T;
Gosub L_5240
T1[3] = T1[3] - T[2]
Print #0;"DR";
Goto L_3090
G$ = " ",G$
If Not(D[5]) Goto L_2980
L_2970: Mat Read #4,D[5];G$[1,24];
L_2980: Print #0; Tab 56;C2$[1,30];
V6[1] = V6[1] + T[1]
If D[6] Let V6[4] = V6[4] + T[2] Else Let V6[4] = V6[4] + T[2] - T[3]
If T Print #0; Using "########"; Tab 86;T;
G$ = " ",G$
Gosub L_5270
If Not(F)
  M9[D[5]] = M9[D[5]] - T[2] + T[3]
End If 
If Not(F) Goto L_3090
T1[4] = T1[4] + T[2]
T1[5] = T1[5] + T[3]
If Not(B6)
  T8[0] = T8[0] + T[2]
End If 
If B6 = 1
  T8[1] = T8[1] + T[2]
End If 
If B6 = 2
  T8[2] = T8[2] + T[2]
End If 
goto L_3090:

L_3090: !
if l1=99 gosub L_5800:
Gosub L_5360
L_3100: F = 1
If L1 < L9 Goto L_3150
Gosub L_5800
L_3150: Goto L_2000

pay_dep: ! deposit created - type 7
! Mat Read #4,D[5];G$[1,24];
Print #0; Tab 56;C2$[1,30];
If T Print #0; Using "########"; Tab 86;T;
G$ = " ",G$
Gosub L_5270
deptot=deptot - T[2] + T[3]
Goto L_3090

app_dep: ! deposit applied - type 8
Print #0; Tab 56;C2$[1,30];
If T Print #0; Using "########"; Tab 86;T;
G$ = " ",G$
Gosub L_5270
deptot=deptot - T[2] + T[3]
V6[5] = V6[5] - (T[3] - T[2])
Goto L_3090

del_dep: ! deposit deleted - type 9
Print #0; Tab 56;C2$[1,30];
If T Print #0; Using "########"; Tab 86;T;
G$ = " ",G$
Gosub L_5270
deptot=deptot - T[2] + T[3]
V6[5] = V6[5] - (T[3] - T[2])
Goto L_3090

JUL2YMD: Rem convert julian to YYMMDD
DT3[0] = A2[4];DT3[1] = A2[4];FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_4000: Mat Read #6,A8;Z$;
Return
if l1=99 gosub l_5800: 
Print #0;"************* ";Z$;" **************";
if p61$[136,136]="Y" and currpass<>0  and rtrim$(currdesc$)<>""
	print #0;" Currency: ";currdesc$;
endif
print #0;"" 
L1 = L1 + 1
Return 
L_4040: Rem totals
If (V6[0] + V6[1] + V6[2] + V6[3] + V6[4] + V6[5]+v6[6]) AND NOT(CURRPASS)
  Print #0;"*********  ENTRY OUT OF BALANCE *********" \ L1 = L1 + 1 \ F9 = 98
End If 
For X = 0 To 6 \ V6[X] = 0 \ Next X
TOTALFLAG = 1
LET L1=99
Gosub L_5800
Mat Read #6,A9,30;G1;
M9[0] = 0
L1 = L1 + 1
Print #0;"BANK DEBIT..............";
If Not(T1) Goto L_4100
If P9$[17,17] = "Y" If A9 If Not(G1) Print #0;"*G/L ACCT ERROR*"; \ F9 = 99
L_4100: Print #0; Using "##,###,###.##"; Tab 45;T1;
If T1 <> Abs(T1) Print #0;"CR";
Print #0;""
L1 = L1 + 1
Print #0;"CASH DISCOUNT...........";
Print #0; Using "##,###,###.##"; Tab 45;O9[0];
If O9 <> Abs(O9) Print #0;"CR";
Print #0;""
L1 = L1 + 1
For X = 1 To (Chf(5) - 1)
  If Not(O9[X]) Goto L_4270
  If L1 > L9 Gosub L_5800
  Mat Read #5,X;C1$;
  Mat Read #5,X,24;G1;
  Print #0;C1$[1,21];
  If Not(O9[X]) Goto L_4220
  If P9$[17,17] = "Y" If Not(G1) Print #0;"*G/L ACCT ERROR*"; \ F9 = 99
L_4220: Print #0; Using "##,###,###.##"; Tab 45;O9[X];
  If O9[X] <> Abs(O9[X]) Print #0;"CR";
  Print #0;""
  L1 = L1 + 1
  ! Signal 3,2
L_4270: Next X
If L1 > L9 Gosub L_5800
Print #0;"FREIGHT ALLOWANCES......";
Print #0; Using "##,###,###.##"; Tab 45;T1[2];
If T1[2] <> Abs(T1[2]) Print #0;"CR";
Print #0;""
L1 = L1 + 1
If L1 > L9 Gosub L_5800
Print #0;"A/R CREDIT..............";
Print #0; Using "##,###,###.##"; Tab 60;T1[3];
If T1[3] <> Abs(T1[3]) Print #0;"DR";
Print #0;""
if deptot<>0 or p61$[94,94]="Y"
	L1 = L1 + 1
	If L1 > L9 Gosub L_5800
	Print #0;"DEPOSITS................";
	Print #0; Using "##,###,###.##"; Tab 60;Deptot;
	If Deptot <> Abs(Deptot) Print #0;"DR";
	Print #0;""
endif
IF currvartot<>0 and p61$[136,136]="Y" and currpass=0
	L1 = L1 + 1
	If L1 > L9 Gosub L_5800
	Print #0;"CURRENCY VARIANCE......";
	Print #0; Using "##,###,###.##"; Tab 60;CURRVARTOT;
	If currvartot <> Abs(currvartot) Print #0;"DR"
	Print #0;""
endif
L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"OTHER REC. CREDIT......."
For X = 1 To Chf(4) - 1
  If Not(M9[X]) Goto L_4490
  If L1 > L9 Gosub L_5800
  Mat Read #4,X;C1$;
  Mat Read #4,X,24;G1;
  Print #0;C1$[1,21];
  If Not(M9[X]) Goto L_4440
  If P9$[17,17] = "Y" If Not(G1) Print #0;"*G/L ACCT ERROR*"; \ F9 = 99
L_4440: Print #0; Using "##,###,###.##"; Tab 60;M9[X];
  If M9[X] <> Abs(M9[X]) Print #0;"DR";
  Print #0;""
  L1 = L1 + 1
  ! Signal 3,2
  M9[0] = M9[0] + M9[X]
L_4490: Next X
Print #0;"........................"
L1 = L1 + 1
If L1 > L9 Gosub L_5800
Print #0;"TOTAL DEBIT ADJUSTMENTS.";
Print #0; Using "##,###,###.##"; Tab 45;T1[5];
If T1[5] <> Abs(T1[5]) Print #0;"DR";
If T1[5] If T1[5] = Abs(T1[5]) Print #0;"CR";
Print #0;""
L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"CREDIT ADJUSTMENTS.....";
Print #0; Using "##,###,###.##"; Tab 45;T8[0];
If T8[0] <> Abs(T8[0]) Print #0;"CR";
Print #0;""
L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"WRITE OFFS (CR.ADJ)....";
Print #0; Using "##,###,###.##"; Tab 45;T8[1];
If T8[1] <> Abs(T8[1]) Print #0;"CR";
Print #0;""
L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"BAD DEBTS (CR.ADJ).....";
Print #0; Using "##,###,###.##"; Tab 45;T8[2];
If T8[2] <> Abs(T8[2]) Print #0;"CR";
Print #0;""
L1 = L1 + 1 \ If (L1 + 4) > L9 Gosub L_5800
Print #0; Tab 44;"--------------"; Tab 59;"--------------"
Print #0; Using "---,---,---.##"; Tab 44;T1 + (T1[4] - T1[5]) + T1[1] + T1[2]; Tab 59;(T1[3] + M9[0]+deptot+currvartot)
Print #0; Tab 44;"--------------"; Tab 59;"--------------"
Print #0; Using "---,---,---.##"; Tab 44;(T1 + (T1[4] - T1[5]) + T1[1] + T1[2]) - T1[3] - M9[0]-deptot-currvartot
L1 = L1 + 4 \ If L1 > L9 Gosub L_5800
if not(currpass) 
	If ((T1 + (T1[4] - T1[5]) + T1[1] + T1[2]) - T1[3] - M9[0]-deptot-currvartot)<>0 Let F9 = 98
endif
For X = 0 To Chf(4) - 1
  M9[X] = 0
Next X
For X = 0 To Chf(5) - 1
  O9[X] = 0
Next X
For X = 0 To 9
  If X < 6 Let T1[X] = 0
  If X < 3 Let T8[X] = 0
Next X
let deptot=0
let currvartot=0
let totalflag=0
let l1=99
If Not(BANK) And Not(E) Let TOTALFLAG = 0 \ Gosub L_5800
Return 
L_5010: If D Print #0; Using "######"; Tab 15;D;
If Not(D) Print #0; Using "JE ### "; Tab 15;D[5];
Return 
L_5040: Print #0; Tab 22;C$[1,18];
If Not(S) Return 
If P61$[41,41] = "Y" And F > 0 Return 
If T[1] Print #0; Using "#####,###.##"; Tab 40;T[1];
If T[1] < 0 Print #0;"CR";
T1 = T1 + T[1]
If S = 6 Return
if s=7 return
If T[1] If S <> 5 Print #0; Tab 75;"PAYMENT ";
If T If T[1] If S <> 5 Print #0; Using "########"; Tab 86;T;
Return 
L_5140: ! discount/freight
If T[4]<>0
  If T[4] > 999999
    Print #0; Using "#####,###.##"; Tab 47;T[4];
  Else 
    Print #0; Using M$; Tab 48;T[4];
  End If 
End If 
If T[4] Print #0;"(";D[7];")";
If T[6] Print #0; Using M$; Tab 64;T[6];
IF p61$[136,136]="Y" and currvar<>0 and currpass=0 
	PRINT #0; tab 105;"(CURRVAR)";
	PRINT #0; USING "-----,---.##";TAB 117;CURRVAR;
	LET CURRVARTOT=CURRVARTOT-CURRVAR
	if t[2]<>0 or t[3]<>0 
		print #0;""
		let l1=l1+1
	endif
ENDIF
T1[1] = T1[1] + T[4]
If D[7] < 0 Let D[7] = 0
If D[7] > (Chf(5) - 1) Let D[7] = 0
O9[D[7]] = O9[D[7]] + T[4]
T1[2] = T1[2] + T[6]
Return 
L_5240: If T[3] Print #0; Using M$; Tab 99;T[3];
Return 
L_5270: Rem
If Not(F) Print #0; Tab 105;
If F Print #0; Tab 117;
If F If T[3] Print #0;"   ";
If T[2] Print #0; Using M$;T[2];
If T[3] Print #0; Using M$;T[3];
If Not(F) If T[2] Print #0;"DR";
Return 
L_5360: Print #0;" "
L1 = L1 + 1
Return 
L_5390: Print #0;"\15\";
L1 = L1 + 1
Return 
L_5800: Rem      HEADING ROUTINE.
If V = 0 Goto L_5825
If L1 < L9 return
!If L9 <> 22 Goto L_5825
!Input "\15\PRESS <CR> TO CONTINUE "F$
!Print 'CS'
L_5825: If V Print #0;"\14\"
V = V + 1
Print #0;" - MX304 - "; Tab 8;"DATE: ";D$;
Print #0; Tab 51;P$; Tab 115;"  PAGE ";V;
Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 5;T9$;
If TOTALFLAG Gosub L_6000 \ Goto L_5850
Print #0; Tab 42;"C A S H  R E C E I P T S  J O U R N A L";
if p61$[136,136]="Y" and currpass<>0  and rtrim$(currdesc$)<>""
	print #0;"  Currency: ";currdesc$;
endif
Print #0; Using "######"; Tab 100;"JOURNAL: ";JSEQ
Print #0;"\15\";
Print #0; Tab 6;"DEPOSIT"; Tab 57;"CASH     FREIGHT";
Print #0; Tab 108;"    OTHER";
Print #0; Tab 119;"---ADJ---"
Print #0;"ENTRY"; Tab 8;"DATE"; Tab 15;"CUST # NAME";
Print #0; Tab 42;"BANK DEBIT   DISC&OTH  ALLOWANCE";
Print #0; Tab 78;"REFERENCE/INV DATE";
Print #0; Tab 100;"A/R CREDIT  REC. CREDIT  DR  CR"
Print #0;"\15\";
if rtrim$(z$)="" and a8<>0
	Mat Read #6,A8;Z$;
endif
Print #0;"************* ";Z$;" **************";
if p61$[136,136]="Y" and currpass<>0  and rtrim$(currdesc$)<>""
	print #0;" Currency: ";currdesc$;
endif
print #0;"" 
L1 = L1 + 1
L_5850: L1 = 9
Return 
L_6000: Rem TOTALS HEADINGS
Print #0; Tab 42;"C A S H  R E C E I P T S  T O T A L S";
if p61$[136,136]="Y" and currpass<>0  and rtrim$(currdesc$)<>""
	print #0;"  Currency: ";currdesc$;
endif
print #0;"" 
Print #0;"\15\********** TOTALS: ************ FOR ";Z$
Return 
L_6500: Rem SORT BY CUSTOMER CODE
!Print @0,22;'CL';"Sorting....";
K9$ = " ",K9$
L_6515: Search #9,3,1;K9$,R9,E \ If E = 2 Goto L_6530
If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R9,E \ If E Gosub ERR_SEARCH
Goto L_6515
L_6530: B$ = " ",B$ \ B$ = I3 Using " 1#####"
If BANK Let B$[1,2] = BANK Using "##"
L_6540: Search #2,3,1;B$,L,E \ If E = 2 Goto L_6599
If E Gosub ERR_SEARCH
A8 = B$[1,2] \ I2 = B$[3,7]
If I2 <= I3 Goto L_6540
If BANK If A8 <> BANK Goto L_6599
DTLNO = B$[8,10]
If P61$[41,41] <> "Y" Or DTLNO <= 1 ! "only cust in first trans
  Mat Read #2,L,6;D;
End If 
K9$ = " ",K9$ \ K9$[1,2] = B$[1,2] \ K9$[3,8] = D[0] Using "######"
K9$[9] = B$[3]
Search #9,4,1;K9$,L,E \ If E Gosub ERR_SEARCH
Goto L_6540
L_6599: Return 
L_7000: Rem CHECK PRINTER TYPE
F = 0
!If Err 0 Let F = Spc(8)
!N = Chf(0)
!If Err 0 Gosub ERR_ESCAPE
L9 = 60
!If F Let L9 = 22
!Print 'CR MU';"PRINTING, PLEASE WAIT . . . ";'CL'
!If L9 = 22 Print 'CS'
!Signal 3,0
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8000: Rem TEST PROCESS STATUS FOR 1 BANK
FLAGB = 1
Mat Read #1,120;P0
If P0[301] Let P0 = 1 \ Goto L_8090
If P0[302] Let P0 = 2 \ Goto L_8090
If P0[303] Let P0 = 1 \ Goto L_8090
If P0[304] Let P0 = 3 \ Goto L_8090
If P0[305] Let P0 = 5 \ Goto L_8090
If P0[306] Let P0 = 3 \ Goto L_8090
If P0[311] Let P0 = 5 \ Goto L_8090
If P0[320] Let P0 = 5 \ Goto L_8090
If P0[227] Let P0 = 5 \ Goto L_8090
FLAGB = 2
Read #1,20,8;P0[0]
If P0[0] Goto L_8090
Goto L_8200
L_8090: S0 = P0[0]
If S0 = 4 Goto L_8200
Goto L_8600
L_8200: I = 304;P0[0] = 0
!Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
P0[304] = UIDREC[1]
Mat Write #1,120;P0;
P0[0] = 3 \ Write #1,20,8;P0[0];
Return 
L_8300: Rem TEST PROCESS STATUS FOR MULTIPLE BANKS
FLAGB = 3
Read #1,20,8;S0;
Mat Read #1,120;P0;
If S0 Goto L_8620
FLAGB = 4
Mat Read #6,BANK,40;I3; \ Mat Read #6,BANK,44;I2;
If I3 = I2
	Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- No Entries to Process for Bank"+str$(bank)
	! Print 'CR RB CL';"--NO ENTRIES TO ACCEPT FOR THIS BANK---"
	!\ Signal 3,25 \
	Return 
endif
Read #1,20,8;P0 \ P0 = 3 \ Write #1,20,8;P0;
Mat Read #1,120;P0;
If P0[301] Let P0 = 1 \ Goto L_8370
If P0[302] Let P0 = 2 \ Goto L_8370
If P0[303] Let P0 = 1 \ Goto L_8370
If P0[304] Let P0 = 3 \ Goto L_8370
If P0[305] Let P0 = 5 \ Goto L_8370
If P0[306] Let P0 = 3 \ Goto L_8370
If P0[311] Let P0 = 5 \ Goto L_8370
If P0[320] Let P0 = 5 \ Goto L_8370
If P0[227] Let P0 = 5 \ Goto L_8370
L_8350: Rem NEXT I
FLAGB = 5
Read #6,BANK,36;P0[0]
If P0[0] Goto L_8370
Goto L_8490
L_8370: S0 = P0[0]
If S0 >= 4 If S0 <= 4 Goto L_8490
Gosub L_8600
Read #1,20,8;P0 \ P0 = 0 \ Write #1,20,8;P0;
Return 
L_8490: I = 304 \ P0[0] = 0
!Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
P0[304] = UIDREC[1]
Mat Write #1,120;P0;
P0[0] = 3 \ Write #6,BANK,36;P0[0];
Return 1
L_8600: Rem
S0 = Int(S0)
L_8620: ! Print 'CR RB';" ";
Rem IF PORT FLAGS NOT CHECKED, CHECK TO GIVE CLUES ON PROBLEM PORT
L_8625: Rem SEARCH FOR PORT # DONE- NOW GIVE MESSAGE
On S0 Goto L_8650,L_8660,L_8670,L_8680,L_8690
L_8630: !
	Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- CANNOT RUN JOURNAL " ! \ Signal 3,20
Return 
L_8650: ! Print "ENTRY RUNNING(301 OR 303)";
Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- ENTRY RUNNING(301 OR 303)  "	
If P0[301] Or P0[303]
  UIDREC = P0[301] \ If Not(UIDREC) Let UIDREC = P0[303]
  !Call "getuidinfo",UIDREC,USR$
   USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
   Message$=Message$+" BY USER "+USR$[21] !Print " USER ";USR$[21];
End If 
Goto L_8630
L_8660: ! Print "VERF.LIST(302)";
Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- VERF.LIST(302"
If P60$[6,6] <> "Y" let message$=message$+" OR 306"
message$=message$+") IN PROGRESS "
If P0[302] Or P0[306]
  UIDREC = P0[302] \ If Not(UIDREC) Let UIDREC = P0[306]
  !Call "getuidinfo",UIDREC,USR$
   USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
   Message$=Message$+" BY USER "+USR$[21] !Print " USER ";USR$[21];
End If 
Goto L_8630
L_8670: ! Print "JOURNAL(304";
Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Journal(304"
If P60$[6,6] <> "Y" let message$=message$+" OR 306"
message$=message$+") IN PROGRESS "
If P0[304] Or P0[306]
  UIDREC = P0[304] \ If Not(UIDREC) Let UIDREC = P0[306]
  !Call "getuidinfo",UIDREC,USR$
   USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
   Message$=Message$+" BY USER "+USR$[21] !Print " USER ";USR$[21];
End If 
Goto L_8630
L_8680: ! Print "JOURNAL(304) HAS BEEN RUN";
Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Journal(304) Has Been Run "
Goto L_8630
L_8690: !Print "ACCEPT(305, 311, 320 OR 227) IN PROGRESS";
Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Accepts (305, 311, 320, or 227) In Progress.  "
If P0[305] Or P0[311] Or P0[320] Or P0[227]
  UIDREC = P0[305] \ If Not(UIDREC) Let UIDREC = P0[311]
  If Not(UIDREC) Let UIDREC = P0[320]
  If Not(UIDREC) Let UIDREC = P0[227]
  !Call "getuidinfo",UIDREC,USR$
   USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
   Message$=Message$+" BY USER "+USR$[21] !Print " USER ";USR$[21];
End If 
Goto L_8630
L_8900: Print #0;"\15\" \ L1 = L1 + 2 \ Print #0;""
Gosub L_4040
Print #0;"\15\ - END - ";
TOTALFLAG = 0;X1=0
If F9 = 99 Print #0;"** G/L ACCOUNT NUMBER ERROR -- ";
If F9 = 98 Print #0;"** OUT OF BALANCE -- ";
If F9<>0 Print #0;"JOURNAL NOT ACCEPTED **"
L1=99
! If Err 0 Gosub ERR_TRAP
! P = Spc(6) * 2
If BANK
  If ALLBANK = 0
    Read #6,BANK,36;P0 \ P0 = 4 
    If F9<>0 Let P0 = 0
    Write #6,BANK,36;P0;
    Mat Read #1,120;P0
    P0[304] = 0 \ Mat Write #1,120;P0;
    If P0 = 0 Write #1,20,8;P0;
  End If 
Else 
  Read #1,20,8;P0 
  LET P0 = 4 
  If F9<>0 Let P0 = 0
  Write #1,20,8;P0;
  Mat Read #1,120;P0 \ P0[304] = 0 \ Mat Write #1,120;P0;
End If 
LET L1=99;F=0;A8=0;A9=0
If BANK <> 0 And ALLBANK = 99 Goto STARTALLBANK
! If L9 = 22 Input "\15\PRESS <CR> TO EXIT "F$
UPDATEJOURNAL: Rem update journal number
If Not(F9)
  JSEQ = JSEQ + 1 \ If JSEQ > 999999 Let JSEQ = 1
  Write #1,20,126;JSEQ;
End If 
If ALLBANK<>0
  ! If L9 = 22 Input "\15\PRESS <CR> TO EXIT "F$
  Read #1,20,8;P0
  P0 = 0
  Write #1,20,8;P0;
  Mat Read #1,120;P0;
  P0[304] = 0
  Mat Write #1,120;P0;
End If 
If (F9)
  !Print @0,0;'CS';"-mx304-"; Tab 20;"CASH RECEIPTS JOURNAL DETAIL";
  !Print @0,20;'CE'; Tab 10;"***CASH RECEIPTS JOURNAL NOT ACCEPTED***";
  !Print @0,21;"Please Review Journal For Error(s) Detected. ";
  !Print @0,23;'CL';"Press <Cr> to return to menu "; \ Input Len (16384 + 1);""F$
  if f9=98 let message$=Message$+" Entry Out Of Balance"
  if f9=99 let message$=Message$+" G/L Account Error"
  Reperr=Reperr+1;Message$=Message$+"-JOURNAL NOT ACCEPTED. PLEASE REVIEW FOR ERROR(S) DETECTED"
End If 
Goto L_9070

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End


!--------------------------------------------------------------------------------
Sub currconvdown(amount,factor)
! 
  try
	if p61$[136,136]="Y" and factor<>0 and amount<>0! going from currency to base             
		cnvcu[1] = 1 ! no rounding 
		let cnvcu[0]=2
		let cnvca[0]=amount
		let cnvca[1]=factor
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let amount=cnvca[0]
	endif
  else
    include "src/callsuberr.inc"
  end try
end Sub ! 

!--------------------------------------------------------------------------------
Sub currconvup(amount,factor)
! 
  try
	if p61$[136,136]="Y" and factor<>0 and amount<>0! going for base to costing um
		let cnvcu[0]=1
		let cnvcu[1]=1 ! no rounding
		let cnvca[0]=amount
		let cnvca[1]=factor
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
		let amount=cnvca[0]
	endif
  else
    include "src/callsuberr.inc"
  end try
end Sub ! 

OUTEND: Rem RESET all cash receipt flags
If ALLBANK ! check if journal was aborted
  For REC = 1 To TOTBANKREC
    If BENT[REC]
      Read #6,REC,36;P0
      If P0 <= 4 Let P0 = 0
      Write #6,REC,36;P0
      Read #6,REC,40;I3
      I3 = Int(BENT[REC])
      Write #6,REC,40;I3;
      BENT[REC] = 0
    End If 
  Next REC
End If 
! P = Spc(6) * 2
Mat Read #1,120;P0
P0[304] = 0 \ Mat Write #1,120;P0;
If BANK And ALLBANK = 0
  Read #6,BANK,36;P0 \ If P0 < 4 Let P0 = 0
  Write #6,BANK,36;P0;
  P0 = 0 \ Write #1,20,8;P0;
Else 
  Read #1,20,8;P0 \ If P0 < 4 Let P0 = 0
  Write #1,20,8;P0;
End If 
L_9070: Rem CLOSE
!Chain "MX000C"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if message$="" let message$="Report Complete"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
