! >>> Program 384
!
! description Debit Memo Journal  
! loadsave -w -n 100,10 -o prog/dxport/384.dl4 src/384.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 10, 2008  14:04:07
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/po384.src (univ2) [mary] {48530}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem PO384 DEBIT MEMO JOURNAL
Rem AUTHOR: G.DOSCHER   MAY 24, 1985
Rem LAST UPDATE:  REK 3/24/92  WAREHOUSE CHOOSE/STATUS UPDATE
Try
Com 1%,PFU1[20],CNVTU[9]
Com 3%,PFU2[6],CNVTA[4],A[33]
Com 3%,JRNL
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,F,L1[5],H4[3],NSD1[7],S7,WHSE,2%,D9[5],CONF
Dim 1%,WPF[1024]
Dim 1%,CO,SPO,RNGOPT
Dim 2%,N4,POCNTRL,CNTNUM,MJRNL
Dim 2%,B[24],C1[6],H0[5],H3[4],L2[2],NSD2[4],SDMNUM,EDMNUM
Dim 3%,C9[9],X0,J,L3[6],NSD3[9],Q1[9],R0[1],W3[24],X3[9],PL4[23]
Dim A$[156],A1$[30],A2$[30],H$[82],L1$[92],CNAME$[30]
Dim K1$[50],K2$[20],K3$[20],NSD$[96],P9$[50],U5$[30]
Dim M1$[4],U8$[131],U9$[131],V$[30],2%
Dim SN1$[54],SNK$[50],USR$[40]
Dim 3%,TOTLINEFRT,TOTLINEMISC,H8[9],PO3[12],UIDREC[1]
Dim 3%,AMOUNT,COST,XCOST,TCOST,XQTY,TQTY
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
!call dxopen() ! needed?

!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!open #9,"6/sortwork000064"
COID=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflg=0
returnstatus=1
abortjournal=0
Call dxget("IJABRT",tmp$)                                                 
tmp$ = UCase$(trim$(tmp$))                                                                                                          
If tmp$ <> "" !
  abortjournal=99
  Message$ = "OK - NO JOURNAL"                                            
  ReturnStatus = 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
  goto outend:
ENDIf     

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For K1 = 2 To 14
  Read J \ If J = -1 Goto L_820
  Read #1,88,Abs(J);J$; \ If J < 0 Ropen #K1,J$ Else Open #K1,J$
L_820: Next K1
Data "-208","-1792","-1","-2400","-1808","-2944","2416","-1","-1744","2432","-2464","-1728","-2448"
Mat Read #1,19,50;P9$;
Mat Read #1,115,0;D9;
Mat Read #1,3,0;CNAME$;
Mat Read #1,51,76;SPO;
If SPO
  Read #1,88,2768;J$; \ Open #30,J$
End If 
!PROMPTOPT: Rem individual or range option
J1 = 99 \ U8$ = "-",U8$ \ U9$ = "=",U9$
SDMNUM = 0;EDMNUM = 999999
!Print 'CS'; Tab 20;CNAME$;
!Print @0,1; Tab 20;"384 - Debit Memo Journal ";
!Print @0,10;"Debit Memos registered via this screen will NOT"
!Print "increase in status."
!Print @0,13;"Use the range screen to increase the status."
!Print @0,3;"Enter Debit Memo #, <CR> for Range,  E: to end ";
!Input Len (16384 + 6);""J$
!Call String(1,J$)
!If J$ = "E" Goto L_9010
!If J$ = "" Goto PROMPTRANGE
!RNGOPT = 0
!SDMNUM = J$
!If Not(SDMNUM) Goto PROMPTOPT
!A1$ = " ",A1$
!A1$[3,8] = SDMNUM Using "######"
!For STAT = 12 To 13
 ! A1$[1,2] = STAT Using "##"
  !Search #8,2,1;A1$,R8,E \ If E > 1 Gosub ERR_SEARCH
  !If Not(E) Goto FOUNDDM
!Next STAT
!Print @0,23;'CL RB';"Debit Memo Not Found Or Must be printed first!!!";
!Signal 3,20 \ Goto PROMPTOPT
!FOUNDDM: Rem found debit memo for print
!EDMNUM = SDMNUM
!S7 = STAT \ If STAT = 13 Let REPRINT = 1
!S1 = S7
!Gosub READPOH
!WHSE = H4[1];CONF = 0
!Gosub L_8200
!If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
!If SPO
!  Mat Read #30,WHREC,852;CNTNUM;
!End If 
!Goto READSECT
PROMPTRANGE: Rem screen display for ranges
RNGOPT = 99
!Print @0,3;'CE';
!Print @5,4;"1> Debit Memo # ";
!Print @5,5;"2> Warehouse ";
!Print @5,6;"3> Confirmation ";
!Print @5,7;"4> Reprint ";
!For W = 1 To 4
!  If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!  On W Gosub SELDMRNGE
!  If Spc(13) = 11 Print @80,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Next W
!SELOPT: Rem select option to change
!Print @0,23;'CL';"Enter #:field to edit   P: print   E: to end ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
!If J$ = "P" Goto STARTPRINT
!If J$ = "E" Goto L_9010
!W = J$
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On W Gosub SELDMRNGE
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Goto SELOPT
s7=0                              
Call dxget("RPRTJ",J$) ! reprint of jrnl (Y/N)                            
tmp$ = UCase$(trim$(J$)) \ If tmp$="" Let tmp$="N"                       
If tmp$ <> "N" Let tmp$ = "Y"
If tmp$ = "Y"
	reprint=1
	S7=13
endif                                                  
If tmp$ = "N" 
	let reprint=0
	s7=12
endif
If Not(S7) Let eflg = eflg + 1;Message$ = Message$ + Str$(eflg) + " Reprint is Y or N! " ! Goto ASK_REPRINT 
Call DXGet("WHSE",tmp$)
LET whse=tmp$
if not(whse) and rtrim$(tmp$)<>"0"
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Invalid Warehouse Number Entered. "
	! goto outend:
endif
if whse<0 or whse>99
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Invalid Warehouse Number Entered. "
	! goto outend:
endif
Call DXGet("CONFIRMED",tmp$)
LET conf=tmp$
Call dxget("PRPRT",tmp$) ! (NOT ADDED?)     
audonly = 0 \ If rtrim$(tmp$) <> "" Let audonly = 1 
if reprint<>0 let audonly=1 ! reprint flag as audit only

Call dxget("SDMNUM",tmp$)   
let sdmnum=tmp$
Call dxget("EDMNUM",tmp$)
let edmnum=tmp$
If SDMNUM > EDMNUM
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Ending Debit Memo Number Must Be Greater Than Starting. "
	! goto outend:
endif
if not(sdmnum) and not(edmnum)
	eflg=eflg+1
	Message$=Message$+str$(eflg)+" Starting or Ending Debit Memo Number Must Be Entered. "
	! goto outend:	
endif
if eflg goto outend:
STARTPRINT: Rem ok to start printing
Gosub L_8200
if eflg>0 goto outend:
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
If SPO
  Mat Read #30,WHREC,852;CNTNUM;
End If 
J1 = 99
If Not(REPRINT) And Not(AUDONLY) ! get journal #
  Read #1,20,198;MJRNL
  If MJRNL <= 0 Let MJRNL = 1
  If MJRNL >= 999999 Let MJRNL = 1
  JRNL = MJRNL
  MJRNL = MJRNL + 1
  Write #1,20,198;MJRNL;
End If 
let u5$=" ",u5$
clrsort: ! 
search #9,3,1;u5$,r8,e\if e<>0 goto startthis:
search #9,5,1;u5$,r8,e\if e<>0 gosub err_search:
goto clrsort:
startthis: ! 

TMP$="doing a lock"
call "proglock.dl4","384-"+(whse using "&&"),1,TMP$

! Print @0,23;"PRINTING, PLEASE WAIT . . . ";'CE'; \ Signal 3,0
S1 = S7
A1$ = " ",A1$
A1$[1,2] = S1 Using "##";A1$[3,8] = SDMNUM Using "######"
Search #8,2,1;A1$,R8,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto READSECT
L_1020: Search #8,3,1;A1$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8900
X0 = A1$[1,2] \ If X0 <> S1 Goto L_8900
X0 = A1$[3,8] \ If X0 > EDMNUM Goto L_8900
READSECT: Rem start reading poheader and vendor file
Gosub READPOH
Gosub READVEND
If H0 <> S1
	eflg=eflg+1
	Message$=Message$+"Bypass Debit Memo "+str$(h0[2])+" Status Error"
	j1=j1+3
	print #0;""
	print #0;"***** Bypass Debit Memo ";str$(h0[2]);" Status Error. *****"
	goto l_1020:
	!Print "STATUS ERROR-- FILE DOESN'T MATCH INDEX!" \ Gosub ERR_SEARCH
endif
If WHSE And H4[1] <> WHSE Goto L_1020
If CONF = 2 If H$[59,61] <> "NO " Goto L_1020
If CONF = 1 If H$[59,61] = "NO " Goto L_1020
F1 = 0
Gosub L_2000
Goto L_1020
L_2000: Rem LINE LOOP
A2$ = H0[2] Using "######"
L_2020: Search #11,3,1;A2$,R9,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_2300
X2 = A2$[1,6]
If X2 <> H0[2] Goto L_2300
Gosub L_6200
If R8 <> L3[0] 
	! Print "HEADER RECORD POINTER ERROR" \ Gosub ERR_SEARCH
	eflg=eflg+1
	let ponum=a1$[3]
	Message$=Message$+"Bypass Debit Memo "+str$(h0[2])+"Header Record Pointer Error On Line Number "+a2$[7]+"."
	j1=j1+3
	print #0;""
	print #0;"***** Bypass Debit Memo ";str$(h0[2]);" Header Pointer Error on Line Number ";a2$[7];". ******"
	!Print #0;""Print "HEADER RECORD POINTER ERROR" \ Gosub ERR_SEARCH
	goto L_1020:
endif
If Not(L3[4]+PL4[16]) Goto L_2200
L_2100: If SPO<>0 And REPRINT = 0 And (L3[4]+PL4[16]) <> 0
  
    Mat Read #30,WHREC,852;N4
    N4 = N4 + 1
    If N4 < 0 Let N4 = 1
    If N4 > 999999 Let N4 = 1
    POCNTRL = N4
    Mat Write #30,WHREC,852;N4;
  
  Write #11,R9,508;POCNTRL;
End If 
Gosub L_2800
If Not(F1) Gosub L_5500
Gosub L_4000
Gosub L_5800
Gosub L_5000
Gosub L_4400
L_2200: Rem END THIS LINE
Goto L_2020
L_2300: Rem PRINT TOTAL RECV $
If J1 = 99 If TXCOST = 0 And (H8[2] - TOTLINEFRT) = 0 And (PO3[5] - TOTLINEMISC) = 0 Goto L_2330
totpo=totpo+1
Gosub L_5800
Print #0; Using "TOTAL ###,###,###.##"; Tab 110;TXCOST
If (H8[2] - TOTLINEFRT)
  Print #0; Tab 100;"PLUS FREIGHT";
  Print #0; Using "---,---,---.##"; Tab 116;(H8[2] - TOTLINEFRT)
  J1 = J1 + 1
End If 
If (PO3[5] - TOTLINEMISC)
  Print #0; Tab 100;"PLUS MISC";
  Print #0; Using "---,---,---.##"; Tab 116;(PO3[5] - TOTLINEMISC)
  J1 = J1 + 1
End If 
TXCOST = 0 \ TOTLINEFRT = 0 \ TOTLINEMISC = 0
J1 = 99
Gosub L_8700
L_2330: Return 
L_2800: Rem GET PRODUCT
Call Logic(1,2 ^ 0,L1[3],X0)
Call Logic(1,2 ^ 2,L1[3],ZLINE)
If Not(X0) If Not(ZLINE)
  Gosub L_6000
  J4$ = A$[140,151] \ J4$[13] = H4[1] Using "##"
  Search #10,2,1;J4$,R10,E \ If E Gosub ERR_SEARCH
  Gosub L_6300
Else 
  If ZLINE Goto L_2950
  Gosub L_6500
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2]
  PFU1[8] = NSD1[5] \ PFU1[10] = NSD1[4] \ PFU1[11] = NSD1[3]
  A$[9,38] = NSD$[13,42] \ A$[63,92] = NSD$[43,72]
  A$[140,151] = NSD$[1,12] \ A$[93,112] = NSD$[73,92]
End If 
L_2950: Return 
SELDMRNGE: Rem select debit memo range
J0$ = "3000 62204"
J2$ = "######" \ J1 = SDMNUM
J5$ = "Enter Starting Debit Memo Number"
! Gosub ISINPUT
SDMNUM = J1
Print @30,4;"TO";
J0$ = "3000 63304"
J2$ = "######" \ J1 = EDMNUM
J5$ = "Enter Ending Debit Memo Number Code"
! Gosub ISINPUT
EDMNUM = J1
If SDMNUM > EDMNUM
  ! Print @0,23;'CL RB';"Ending Debit Memo Number Must Be Greater Than Starting";
  !Signal 3,20 \ Goto SELDMRNGE
End If 
Return 



Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER


Return 
Rem {end rtn.input.s}
L_4000: Rem CONV REC=>DSPL
CNVTA = PL4[0] \ CNVTU[0] = 0 \ CNVTU[1] = L1[5] \ CNVTU[2] = 2
Gosub L_4200 \ Q1[0] = AMOUNT
CNVTA = L3[2] \ CNVTU[0] = 0 \ CNVTU[1] = L1[4] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[1] = AMOUNT
CNVTA = L3[3] \ CNVTU[0] = 0 \ CNVTU[1] = L1[4] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[2] = AMOUNT
CNVTA = (L3[4]+PL4[16]) \ CNVTU[0] = 0 \ CNVTU[1] = L1[4] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[3] = AMOUNT
CNVTA = (L3[4]+PL4[16]) \ CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
Gosub L_4200 \ Q1[4] = AMOUNT
CNVTA = PL4[0] \ CNVTU[0] = 0 \ CNVTU[1] = PFU1[11] \ CNVTU[2] = 2
Gosub L_4200 \ Q1[5] = AMOUNT
If L1[5] = -2 Let Q1[5] = Q1[0]
Return 
L_4200: Rem CALL CONV
Gosub L_20000
Return 
L_4300: Rem GET UNITS
If X0 = -1 Let M1$ = "CWT " \ Goto L_4330
If X0 = -2 Let M1$ = "LOT " \ Goto L_4330
If X0 = -3 Let M1$ = "LB  " \ Goto L_4330
Read #13,X0,10;M1$;
L_4330: Return 
L_4400: Rem PRINT SERIAL NO'S
Call Logic(1,2 ^ 0,L1[3],X0) \ If X0 Return 
SNO = 0 \ If A$[8,8] <> "Y" Return 
If (L3[4]+PL4[16]) = 0 Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[2] Using "######";SNK$[7,9] = L1[2] Using "###"
L_4420: Search #7,3,1;SNK$,R7,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[2] Or LN <> L1[2] Goto L_4480
Mat Read #7,R7,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ J1 = J1 + 1
Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ J1 = J1 + 1
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ J1 = J1 + 2
Return 
L_5000: Rem PRINT LINE
Print #0; Using "###";L1[2];
Print #0; Tab 5;L1$[81,92]; Tab 18;L1$[1,30];
If ZLINE Goto L_5300
If Not(Q1[3])
  Print #0;"  ** ZERO QUANTITY **\15\" \ J1 = J1 + 2
  Goto L_5380
End If 
Print #0; Using "---,---,--#"; Tab 49;Q1[3];
If Fra(Q1[3]) Print #0;"+";
X0 = L1[4] \ Gosub L_4300 \ Print #0; Tab 63;M1$;
If Q1[0]
  Print #0; Using "##,###.##"; Tab 64;Q1[0];
  X0 = L1[5] \ Gosub L_4300 \ Print #0;"/";M1$;
Else 
  Print #0; Tab 70;"(no change)";
End If 
Print #0; Using "---,---,--#"; Tab 84;Q1[4];
If Fra(Q1[4]) Print #0;"+";
X0 = PFU1[8] \ Gosub L_4300 \ Print #0; Tab 96;M1$;
If Q1[0]
  Print #0; Using "##,###.##"; Tab 101;Q1[5];
  If L1[5] = -2
    X0 = -2
  Else 
    X0 = PFU1[8]
  End If 
  Gosub L_4300 \ Print #0;"/";M1$;
Else 
  Print #0; Tab 103;"(no change)";
End If 
If L1[5] = -2
  AMOUNT = PL4[0]
Else 
  AMOUNT = PL4[0] * (L3[4]) !  - PL4[16])
End If 
If L1[5] = -1 Or L1[5] = -3
  If PL4[13]
    If L1[5] = -1 Let AMOUNT = FNR(Q1[0] * (PL4[12] * (L3[4] ) / PL4[13]) / 100)  ! - PL4[16]
    If L1[5] = -3 Let AMOUNT = FNR(Q1[0] * (PL4[12] * (L3[4] ) / PL4[13])) ! - PL4[16]
  Else 
    If L1[5] = -1 Let AMOUNT = FNR(Q1[0] * (L3[5] * (L3[4]) / L3[2]) / 100)  !- PL4[16]
    If L1[5] = -3 Let AMOUNT = FNR(Q1[0] * (L3[5] * (L3[4]) / L3[2]))	 ! - PL4[16]
  End If 
End If 
Print #0; Using "#####,###.##"; Tab 118;FNR(AMOUNT);
TXCOST = TXCOST + FNR(AMOUNT)
L_5300: Print #0;"" \ J1 = J1 + 1
If SPO If POCNTRL Print #0; Using "CNTRL######";POCNTRL;
If ZLINE Print #0; Tab 18;L1$[31,60]; \ Goto L_5380
Print #0; Tab 18;L1$[31,60]; Tab 50;"VENDOR ITEM # ";A$[93,112];
If L2[1]
  If L1[5] = -2
    AMOUNT = L2[1]
  Else 
    AMOUNT = L2[1] * (L3[4]+PL4[16])
  End If 
  If (L1[5] = -1 Or L1[5] = -3)
    AMOUNT = ((L3[4]+PL4[16]) * (L2[1] * (PL4[12] / PL4[13])))
  End If 
  Print #0; Using "#####,###.##"; Tab 100;"PLUS FREIGHT"; Tab 118;FNR(AMOUNT)
  J1 = J1 + 1
  TXCOST = TXCOST + FNR(AMOUNT)
  TOTLINEFRT = TOTLINEFRT + FNR(AMOUNT)
End If 
If PL4[8]
  If L1[5] = -2
    AMOUNT = PL4[8]
  Else 
    AMOUNT = PL4[8] * (L3[4] +PL4[16])
  End If 
  If (L1[5] = -1 Or L1[5] = -3)
    AMOUNT = ((L3[4]+PL4[16]) * (PL4[8] * (PL4[12] / PL4[13])))
  End If 
  Print #0; Using "-----,---.##"; Tab 100;"PLUS MISC"; Tab 118;FNR(AMOUNT)
  J1 = J1 + 1
  TXCOST = TXCOST + FNR(AMOUNT)
  TOTLINEMISC = TOTLINEMISC + FNR(AMOUNT)
End If 
If (Not(L2[1])) And (Not(PL4[8])) Print #0;"" \ J1 = J1 + 1
If (L3[4] + L3[3]) < L3[2]
  Print #0; Tab 15;"**** RECEIVED SHORT-  ORDERED:";
  Print #0; Using "---,---,--#"; Tab 49;Q1[1]; Tab 70;"OPEN QTY: ";Q1[1] - Q1[2] - Q1[3];
  Call Logic(1,2 ^ 1,L1[3],X0) \ If X0 Print #0;"   LINE CLOSED SHORT";
  Print #0;"" \ J1 = J1 + 1
End If 
L_5380: Print #0;"\15\"; \ J1 = J1 + 1 \ Return 
L_5500: Rem NEW P.O. HEADINGS
If J1 > 45 Let J1 = 99 \ Goto L_5800
Print #0;U9$
L_5515: Print #0;"  DM #"; Tab 10;"DATE"; Tab 22;"VENDOR"; Tab 60;"PO#";
Print #0; Tab 70;"VENDOR REF#";
Print #0; Tab 89;"TYPE";
If CONF <> 2 Print #0; Tab 106;"CONFIRMED"; Tab 119;"CONF DATE";
Print #0;""
X2 = H0[3] \ Gosub L_7700
Print #0; Using "######";H0[2]; Tab 10;X$;
Print #0; Using "######: "; Tab 20;C1[1];V$;
Print #0; Using "######"; Tab 58;H3[4];
Print #0; Tab 70;H$[1,14]; Tab 89;
If H4[0] = 0 Print #0;"WAREHOUSE #";H4[1];
If H4[0] = 1 Print #0;" DIRECT";
If H4[0] = 2 Print "INDIRECT";
If CONF <> 2 Print #0; Tab 106;H$[59,68];
If CONF <> 2 If H0[5] Let X2 = H0[5] \ Gosub L_7700 \ Print #0; Tab 119;X$;
If F1 Print #0;" CONT";
Print #0;"\15\";U8$
Print #0; Tab 51;"------ RETURNED UNITS ----------";
Print #0; Tab 85;"---------- STOCK UNITS --------"
Print #0;"LN#  PRODUCT CODE";
Print #0; Tab 20;"DESCRIPTION / SIZE"; Tab 54;"QUANTITY";
Print #0; Tab 70;"UNIT COST"; Tab 85;"QUANTITY";
Print #0; Tab 100;"UNIT COST"; Tab 118;"EXT COST"
Print #0;U9$
F1 = 99 \ J1 = J1 + 7 \ Return 
L_5800: Rem HEADINGS ROUTINE
If J1 < 60 Return 
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
Print #0;"\15\";
Print #0; Tab 5;Msc$(3); Tab (65 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2;"\15\"
Print #0; Tab 42;"DEBIT MEMO RETURN JOURNAL";
IF NOT(REPRINT) AND NOT(AUDONLY)
	Print #0; Tab 120;"Jrnl: ";JRNL;
ELSE
	IF REPRINT<>0
		PRINT #0;tab 120;"Reprint";
	else
		print #0;tab 120;"Preview";
	endif
endif
	
Print #0;"\15\"
Goto L_5515
L_6000: Rem READ PRODUCT FILE
Mat Read #3,L3[1];A$;
Mat Read #3,L3[1],156;B;
Mat Read #3,L3[1],256;A;
Mat Read #3,L3[1],512;PFU1;
Mat Read #3,L3[1],554;PFU2;
Return 
L_6200: Rem READ LINE ITEM
Mat Read #11,R9;L1
Mat Read #11,R9,12;L2
Mat Read #11,R9,24;L3;
Mat Read #11,R9,66;L1$;
Mat Read #11,R9,232;PL4;
Mat Read #11,R9,508;POCNTRL;
Return 
L_6300: Rem READ WHPR FILE
Mat Read #10,R10,78;W3
Return 
L_6500: Rem READ NSTKDESC
Mat Read #14,L3[1];NSD$
Mat Read #14,L3[1],96;NSD1
Mat Read #14,L3[1],112;NSD2
Mat Read #14,L3[1],132;NSD3
Return 
READPOH: Rem read po header file
Mat Read #8,R8;H0;
Mat Read #8,R8,24;H$;
Mat Read #8,R8,222;H3;
Mat Read #8,R8,242;H4;
Mat Read #8,R8,250;H8;
Mat Read #8,R8,350;PO3;
Return 
READVEND: Rem read vendor file
Mat Read #5,H0[1];V$;
Mat Read #5,H0[1],264;C1;
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8200: Rem CHECK/SET WHSE PROC FLAGS
!If Err 0 Rem
Try Close #90 Else Rem
!If Err 0 Gosub ERR_TRAP
Read #1,88,2768;X$[1,16]; \ Open #90,X$
!Print @0,23;'CL';"CHECKING WHSE FLAGS, PLEASE WAIT"; \ Signal 3,0
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
L_8225: Mat Read #90,WHREC,900;WPF;
!Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)

If WPF[384] and WHREC <> 99
	E=3  ! CHECK with time check
	TMP$=" "
	call "proglock.dl4","384-"+(whse using "&&"),e,TMP$  !! no special flag for delete
	if e  !! found entry
		Let UIDREC = WPF[384] \ Goto L_8281
	else
		e=whse  ! pass in warehouse selected
		call "flagreset","384.DL4",e
	endif
endif
Mat Read #90,WHREC,900;WPF;



If WPF[383] <> 0 Let UIDREC = WPF[383] \ Goto L_8280
If WPF[384] <> 0 Let UIDREC = WPF[384] \ Goto L_8281
If WPF[385] <> 0 Let UIDREC = WPF[385] \ Goto L_8282
WPF[384] = UIDREC[1]
If WHSE If WHREC = 99 Let WPF[384] = 0 - WHSE
Mat Write #90,WHREC,900;WPF;
If WHSE If WHREC <> 99 Let WHREC = 99 \ Goto L_8225
If WHSE If WHREC = 99 Goto L_8277
For WHREC = 0 To 98
  Mat Read #90,WHREC,900;WPF;
  If WPF[383] <> 0 Let UIDREC = WPF[383] \ Goto L_8280
  If WPF[384] <> 0 Let UIDREC = WPF[384] \ Goto L_8281
  If WPF[385] <> 0 Let UIDREC = WPF[385] \ Goto L_8282
L_8275: Next WHREC
L_8277: Try Close #90 Else Rem
Return 
L_8282: Rem aip IF WPF[CPRT]=385
USR$ = " ",USR$
!If UIDREC > 0 Call "getuidinfo",UIDREC,USR$
!Print @0,23;'RB CL';"ACCEPT IN PROCESS USER ";USR$[21];
!Print " -- PLEASE TRY LATER."; \ Signal 3,30
If UIDREC > 0
	!Call "getuidinfo",UIDREC,USR$
	 USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
endif
eflg=eflg+1
message$=message$+"Accept In Process By User "+rtrim$(usr$[21])
message$=message$+" - Please Try Later. "
Goto L_9010
L_8281: Rem jip
USR$ = " ",USR$
!If UIDREC > 0 Call "getuidinfo",UIDREC,USR$
!Print @0,23;'RB CL';"JOURNAL IN PROCESS USER ";USR$[21];
!Print " -- PLEASE TRY LATER."; \ Signal 3,30
If UIDREC > 0
	!Call "getuidinfo",UIDREC,USR$
	 USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
endif
eflg=eflg+1
message$=message$+"Journal In Process By User "+rtrim$(usr$[21])
message$=message$+" - Please Try Later. "
Goto L_9010
L_8280: Rem PIP
USR$ = " ",USR$
!If UIDREC > 0 Call "getuidinfo",UIDREC,USR$
!Print @0,23;'RB CL';"PRINT IN PROCESS USER ";USR$[21];
!Print " -- PLEASE TRY LATER."; \ Signal 3,30
If UIDREC > 0
	!Call "getuidinfo",UIDREC,USR$
	 USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
endif
eflg=eflg+1
message$=message$+"Print In Process By User "+rtrim$(usr$[21])
message$=message$+" - Please Try Again In 5 Minutes. "
Goto L_9010
L_8300: Rem rem reset process flag for warehouse on single print
!If Err 0 Rem
Try Close #90 Else Rem
! If Err 0 Gosub ERR_TRAP
Read #1,88,2768;X$[1,16]; \ Open #90,X$
If WHSE Let WHREC = WHSE - 1 Else Let WHREC = 99
WP8225: Rem
Mat Read #90,WHREC,900;WPF;
WPF[384] = 0
Mat Write #90,WHREC,900;WPF;
If WHSE If WHREC <> 99 Let WHREC = 99 \ Goto WP8225
Try Close #90 Else Rem
Return 
L_8500: Rem UP STATUS
If S7 = 13 Return 
LET X$="Y"
If Audonly<>0 Let X$ = "N" \ Goto L_8540
if reprint<>0 let x$="N" \ goto L_8540
if eflg<>0 let x$="N" \goto L_8540
Try Close #0 Else Rem
!If Err 0 Rem
!Close #0
!If Err 0 Gosub ERR_TRAP
!Print @0,20;'RB CE';"Has this journal printed correctly (Y/N)? ";'CE';
!Input Len 16385;""X$ \ Call String(1,X$)
L_8540: If X$ = "Y" Let S7 = 13 \ Goto L_8545
!If X$ <> "N" Print 'RB'; \ Goto L_8500
S7 = 12
If X$ = "N"
  If SPO
    Write #30,WHREC,852;CNTNUM;
  End If 
  ! Print @0,23;"Resetting... please wait...";'CE';
End If 
L_8545: ! If X$ = "Y" Print @0,23;"Processing... please wait...";'CE';
A1$ = " ",A1$
L_8560: Search #9,3,1;A1$,R8,E \ If E = 2 Goto L_8680
If E Gosub ERR_SEARCH
Mat Read #8,R8;H0
U5$ = " ",U5$ \ U5$ = A1$ \ U5$[1,2] = S7 Using "##"
Search #8,4,1;U5$,R8,E \ If E Gosub ERR_SEARCH
U5$[1,2] = "17"
Search #8,5,1;U5$,R8,E \ If E Gosub ERR_SEARCH
H0[0] = S7 \ Write #8,R8;H0;
Write #8,R8,540;JRNL;
Search #9,5,1;A1$,R8,E \ If E Gosub ERR_SEARCH
Goto L_8560
L_8680: Return 
L_8700: Rem SET STATUS TO INPROCESS
If S7 = 13 Return 
Read #8,R8,0;H0
U5$ = A1$ \ U5$[1,2] = "17"
Search #8,4,1;U5$,R8,E \ If E Gosub ERR_SEARCH
Search #9,4,1;U5$,R8,E \ If E Gosub ERR_SEARCH
Search #8,5,1;A1$,R8,E \ If E Gosub ERR_SEARCH
H0 = 17 \ Write #8,R8,0;H0;
Return 
L_8900: Rem end
Gosub L_8500
!If SDMNUM = EDMNUM
!  Gosub L_8300
!  Goto PROMPTOPT
!End If 
goto outend:

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120: ! If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT PROGRAM
Gosub L_8300
TMP$="do an unlock"
call "proglock.dl4","384-"+(whse using "&&"),0,tmp$
L_9010:  ! Print 'CS' \ Close 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflg)
	if totpo=0 ! no errors and nothing to list
		returnstatus=1
		let message$=message$+"There are no debit memos available to list"
		if whse<>0
			let message$=message$+" for warehouse "+str$(whse)
		endif
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totpo)+" Debit Memo(s) Listed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program