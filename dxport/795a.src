! >>> Program 795a
!
! description: FIFO INVENTORY VALUE REPORT BY VENDOR
!
! loadsave -w -n 100,10 -o prog/dxport/795a.dl4 src/795a.src
!
! 1.0 04/07/2008 change??
!
include "src/copyright.inc" ! dx
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 13, 2006  12:43:37
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/mx77/mx795a.src (univ2) [mary] {58070}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! - Option Default Dialect IRIS1
Rem MX795A  - FIFO/LIFO  INVENTORY VALUE REPORT BY VENDOR
Rem AUTHOR: DAVE  AUG 10, 1987
Rem LAST UPDATE: option to suppress zero inventory balances -MTG
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
Dim 3%,COST,UNITX,SUNIT$[4],CUNIT$[4],CUNIT,UNIT$[10],2%,C4[8]
Dim COST$[1],U5$[20],VNAME$[30],P1$[156],PMASK$[12],SPROD$[12],EPROD$[12]
Dim P9$[50],P60$[50],I1$[10],I$[10],UM$[30],Z2$[2],RETVAL$[512]
Dim FTK$[30],FT1$[72],1%,FT1[3],2%,FT2[3],3%,FT3[3]
Dim 1%,F8,URECFLAG,PD1[2],W1[2]
Dim 2%,B1[24],A3,WHSE,Q0[1],DATEX,D3[1],JDATE,D9[5]
Dim 3%,A1[33],A2[7],T8[5],T7[5],V9[4],A4,VEND[9]
Dim 1%,G1[2],G1$[80],2%,G2[3],3%,G3[8],G4[1]
Dim J8$[8]
Dim 4%,T9[20]
Dim 1%,2%,3%,J,K6$[60],CNAME$[30],DATE$[8],CATNAME$[24],K12$[14]
Dim K1$[50],K2$[20],K3$[20],K10$[20],T9$[26],K5$[60],PK$[30],K9$[50],P61$[256]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
!
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Rem {end dim.rtn.input}
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
! - dx add xport reporting code
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[400],tmp1$[500],UNITX$[1]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,115;D9;
!!If P60$[9,9] = "F" Or P60$[9,9] = "L" Goto L_800 
If P60$[9,9] <> "F" and P60$[9,9] <> "L" Goto OUTEND
!!Print @0,22;'CL';"FIFO/LIFO INVENTORY METHOD NOT AVAILABLE....";
!!Print @0,23;'CL';"PRESS <CR> TO RETURN TO THE MENU ";
!!Input ""J$ \ Goto OUTEND
L_800: Rem OPEN FILES
For J = 2 To 12
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","0 ","1728","0","0","3008  ","3024","0","2400","1984","1744"
Mat Read #1,0,100;DATE$;
Read #1,3,0;CNAME$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let SCREEN = Spc(8)
SCREEN = 0 \ V9[4] = Chf(0)
If Err 0 Gosub ERR_TRAP
If SCREEN If SCREEN <> 49 Goto ERR_TRAP
V9[4] = 60 ! \ If SCREEN Let V9[4] = 21
!!Open #77,"PRTDFLT" \ Open #78,"USERPORT" !!NOT FOUNT
!!Mat Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!!Mat Read #77,A4,0;PD1;
!!Close #77,#78
J8=screen ! dci uses j8
! call dxsave(0,"tmp/795ain.txt!")
Call dxget("SVEND",tmp$)  \ VEND[1] = tmp$
Call dxget("EVEND",tmp$)  \ if tmp$="" let VEND[2] = 999999 else let VEND[2] = tmp$
Call dxget("SPROD",tmp$)  \ SPROD$ = UCase$(tmp$),Blank$
Call dxget("EPROD",tmp$)  \ EPROD$ = UCase$(tmp$),EndParam$
Call dxget("UNIT",UNIT$)  \ UNITX = UNIT$
Call dxget("WHSE",tmp$)   \ WHSE = tmp$
Call dxget("SBUYER",tmp$)  \  SBUYER = tmp$ 
Call dxget("EBUYER",tmp$)  \  if tmp$ = "" Let EBUYER = 999 else Let EBUYER = tmp$ 
Call dxget("SUPPRESS",tmp$) \ if tmp$ = "" let F8 = 0 else let F8 = 1
Call dxget("COST",COST$) 
Call dxget("DATE",tmp$) \ DATEX = tmp$
Call dxget("SUBCATFLAG",tmp$) \ if tmp$ = "" let SUBCATFLAG = 0 else let SUBCATFLAG = 1
!
IF VEND[1] < 0 or VEND[1] > 999999 LET e$="Invalid starting vendor code, must be between 0 and 999999!" \ error 10000	
IF VEND[2] < VEND[1] or VEND[2] > 999999 Let e$="Invalid ending vendor code, must be between starting vendor code and 999999"   \ error 10000 
!
IF EPROD$ < SPROD$ Let e$="Invalid ending product code, must be greater than starting product code!" \ error 10000
!
IF WHSE < 0 or WHSE > D9[5] LET e$="Invalid warehouse code, must be between 0 and ",D9[5],"!" \ error 10000
!
If Not(WHSE) Let SBUYER = 0 \ EBUYER = 999
IF SBUYER < 0 or SBUYER > 999 LET e$="Invalid starting buyer code, must be between 0 and 999!" \ error 10000	
IF EBUYER < SBUYER or EBUYER > 999 Let e$="Invalid ending buyer code, must be between starting buyer code and 999"   \ error 10000 
!
If DATEX 
  J2$ = DATEX Using "&&&&&&" ! as date comes MMDDYY
  I$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6]
  Call VerifyDate(I$,I1$,E) 
  if E=0
    I1$ = I$[7,8],I$[1,2],I$[4,5] \ DATEX = I1$
    X2 = DATEX \  Gosub L_7820 \ E=1
  endif
  If E let e$="Invalid ending date!" \ error 10000
  JDATE = X2
else ! all
 JDATE = 0
End If
!
If UNITX = 1 Let U5$ = "IN STOCKING UNITS"  
If UNITX = 2 Let U5$ = "IN SELLING UNITS" 
If UNITX = 3 Let U5$ = "IN PURCHASING UNITS"
If UNITX = 4 Let U5$ = "IN COSTING UNITS"
If UNITX = 5 Let U5$ = "IN PRICING UNITS"
If UNITX = 6 Let U5$ = "IN PRODUCTION UNITS"
!
UM$ = U5$
UNITX = UNITX + 7 
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 

if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"795a",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
!
!!Window On 
!!L_1000: Rem GET RANGES
!!If P60$[9,9] = "F" Print 'CS CE'; Tab 0;"-MX795A-"; Tab 10;"FIFO INVENTORY VALUE REPORT BY VENDOR";
!!If P60$[9,9] = "L" Print 'CS CE'; Tab 0;"-MX795A-"; Tab 10;"LIFO INVENTORY VALUE REPORT BY VENDOR";
!!STARTHERE: Rem "
!!Call "progdflt","795a","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,12] = "            "
!!  RETVAL$[13,24] = "zzzzzzzzzzzz"
!!  RETVAL$[25,26] = "08"
!!  RETVAL$[27,28] = PD1[2] Using "##"
!!  RETVAL$[29,29] = "N"
!!  RETVAL$[30,30] = "A"
!!  RETVAL$[31,36] = "     0"
!!  RETVAL$[37,37] = "N"
!!  RETVAL$[38,43] = "     0"
!!  RETVAL$[44,49] = "999999"
!!  Call "progdfltw","795a","",77,RETVAL$,URECFLAG
!!End If 
!!VEND[1] = RETVAL$[38,43]
!!VEND[2] = RETVAL$[44,49]
!!SPROD$[1,12] = RETVAL$[1,12]
!!EPROD$[1,12] = RETVAL$[13,24]
!!UNIT = RETVAL$[25,26]				!! UNITX = 8
!!If UNIT < 8 Or UNIT > 14 Let UNIT = 8
!!WHSE = RETVAL$[27,28]
!!If RETVAL$[29,29] = "N" Let F8 = 0 Else Let F8 = 1
!!COST$ = RETVAL$[30,30]
!!DATEX = RETVAL$[31,36]			!!DATEX = 0
!!If RETVAL$[37,37] = "N" Let SUBCATFLAG = 0 Else Let SUBCATFLAG = 1
!!Gosub GET_UMDESC
!!U5$ = " ",U5$
!!If UNITX = 8 Let U5$ = "IN STOCKING UNITS "
!!If UNITX = 9 Let U5$ = "IN SELLING UNITS "
!!If UNITX = 10 Let U5$ = "IN PURCHASING UNITS "
!!If UNITX = 11 Let U5$ = "IN COSTING UNITS "
!!If UNITX = 12 Let U5$ = "IN PRICING UNITS "
!!If UNITX = 13 Let U5$ = "IN PRODUCTION UNITS "
!!Gosub DISP_SCREEN
!!Goto INPUTS
!!INPUTS: Rem
!!Print @0,23;'CE';"Enter #: field to edit  R: reselect all  P: print S: save default or E: exit ";
!!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!!Print @0,23;'CE';
!!If X$ = "P" Goto L_1600
!!If X$ = "E" Let SCREEN = 0 \ Goto OUTEND
!!If X$ = "R" Goto EDT_ALL
!!If X$ = "" Goto INPUTS
!!If X$ = "S"
!!ASK_SAVE: Rem
!!  Print @0,22;'CL';"Save for A:all or U:user access only, <CR>: do not save ";
!!  Input Len 16384 + 1;""Z2$
!!	Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "progdfltw","795","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL'
!!End If 
!!X = X$
!!If X < 1 Or X > 8 Goto INPUTS
!!Gosub EDT_FLDS
!!Goto INPUTS
!!EDT_ALL: Rem "want's all
!!For X = 1 To 8
!!  Gosub EDT_FLDS
!!Next X
!!Goto INPUTS
!!EDT_FLDS: Rem "edit them here
!!On X Gosub EDT_VEND,EDT_PROD,EDT_UM,EDT_WHSE,EDT_SUPPRESS,EDT_COSTM
!!On X - 6 Gosub EDT_DATE,EDT_SUBCAT
!!Return 
!!EDT_PROD: Rem GET RANGES
!!J5$ = "Enter the starting product code maximum zzzzzzzzzzzz"
!!J0$ = "2 00122305" \ J1$ = SPROD$[1,12]
!!Gosub ISINPUT \ SPROD$[1,12] = J$
!!J5$ = "Enter the ending product code maximum zzzzzzzzzzzz"
!!J0$ = "2 00124305" \ J1$ = EPROD$[1,12]
!!Gosub ISINPUT \ EPROD$[1,12] = J$
!!If EPROD$[1,12] < SPROD$[1,12]
!!  Print @0,23;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50
!!  Goto EDT_PROD
!!End If 
!!RETVAL$[1,12] = SPROD$[1,12]
!!RETVAL$[13,24] = EPROD$[1,12]
!!Return 
!!EDT_UM: Rem "
!!Gosub L_10500
!!Gosub GET_UMDESC
!!Print @20,7;UM$
!!RETVAL$[25,26] = Str$(UNITX)
!!Return 
!!GET_UMDESC: Rem
!!UM$ = " ",UM$
!!If UNIT = 8 Let UM$ = "IN STOCKING UNITS   "
!!If UNIT = 9 Let UM$ = "IN SELLING UNITS    "
!!If UNIT = 10 Let UM$ = "IN PURCHASING UNITS "
!!If UNIT = 11 Let UM$ = "IN COSTING UNITS    "
!!If UNIT = 12 Let UM$ = "IN PRICING UNITS    "
!!If UNIT = 13 Let UM$ = "IN PRODUCTION UNITS "
!!Return 
!!EDT_WHSE: Rem"field#3
!!J1$ = ""
!!J0$ = "3 00023309"
!!J1 = WHSE \ J5$ = "Enter Warehouse or  0: for all"
!!Gosub ISINPUT
!!WHSE = J1
!!If WHSE < 0 Or WHSE > D9[5] Goto EDT_WHSE
!!RETVAL$[27,28] = WHSE Using "##"
!!If WHSE !"cct201630
!!  Print @0,10;"   Buyer Code";
!!  SBUYER = 0 \ EBUYER = 999
!!EDT_BUYER: Rem GET RANGES
!!  J5$ = "Enter the starting buyer code maximum 999"
!!  J0$ = "3 00032310" \ J1 = SBUYER
!!  Gosub ISINPUT \ SBUYER = J1
!!  J5$ = "Enter the ending buyer code maximum 999"
!!  J0$ = "3 00034310" \ J1 = EBUYER
!!  Gosub ISINPUT \ EBUYER = J1
!!  If EBUYER < SBUYER
!!    Print @0,23;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!";'RB CE'; \ Signal 3,50
!!    Goto EDT_BUYER
!!  End If 
!!Else 
!!  Print @0,10;'CL';
!!End If 
!!!Return 
!!EDT_SUPPRESS: Rem"field#4
!!J0$ = "6    14511" \ J1 = F8
!!J5$ = "Enter Y or N"
!!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!!F8 = J1
!!!!If J1 Let RETVAL$[29,29] = "Y" Else Let RETVAL$[29,29] = "N"
!!Return 
!!EDT_COSTM: Rem field#5 enter cost method
!!J0$ = "2 00016013"
!!J1$ = COST$
!!J5$ = "Enter cost method to use A:actual or L:load "
!!Gosub ISINPUT
!!COST$ = J$
!!If COST$ <> "A" And COST$ <> "L" Goto EDT_COSTM
!!!!RETVAL$[30,30] = COST$
!!Return 
!!EDT_DATE: Rem field#7
!!J5$ = "Enter the Ending date (MMDDYY) or ''0'' for all"
!!J0$ = "50000625150"
!!J1 = DATEX
!!Gosub ISINPUT
!!If J4$ = "0" Let DATEX = 0 \ J1 = 0 \ JDATE = 0
!!If J1 If J1 > 0 Let DATEX = J1
!!If DATEX Let X2 = DATEX \ Gosub ISDUNPACK
!!If DATEX Print @25,15;'CL';X$ Else Print @25,15;'CL';"0"
!!RETVAL$[31,36] = DATEX Using "&&&&&&"
!!If DATEX
!!  J2$ = DATEX Using "&&&&&&"
!!  I$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6]
!!  Call VerifyDate(I$,I1$,E) \ If E Goto EDT_DATE
!!  I1$ = I$[7,8],I$[1,2],I$[4,5] \ DATEX = I1$
!!  X2 = DATEX \ Gosub L_7820 \ Goto EDT_DATE
!!  JDATE = X2
!!End If 
!!Return 
!!EDT_SUBCAT: Rem"field#8
!!J0$ = "6    14517" \ J1 = SUBCATFLAG
!!J5$ = "Enter Y or N"
!!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!!SUBCATFLAG = J1
!!If J1 Let RETVAL$[29,29] = "Y" Else Let RETVAL$[29,29] = "N"
!!Return 
!!DISP_SCREEN: Rem================================= screen
!!Print 'CS'
!!Print @0,0;"-MX795-";
!!If P60$[9,9] = "F" Print 'CS CE'; Tab 30;"FIFO INVENTORY VALUE REPORT";
!!If P60$[9,9] = "L" Print 'CS CE'; Tab 30;"LIFO INVENTORY VALUE REPORT";
!!Print @23,2;"STARTING";@43,2;"ENDING"
!!Print @0,3;"1> Vendor Code";
!!Print @0,5;"2> Product Code";
!!Print @0,7;"3> Unit of Measure";
!!Print @0,9;"4> Warehouse to Print";
!!Print @0,11;"5> Suppress zero inventory? ";
!!Print @0,13;"6> Enter cost method to use A:actual or L:load?"
!!Print @0,15;"7> Enter Ending Date: ";
!!Print @0,17;"8> Subtotal the sales category? ";
!!Print Using "######";@23,3;VEND[1];@43,3;VEND[2];
!!Print @23,5;SPROD$;@43,5;EPROD$;
!!Print @20,7;UM$;
!!Print @33,9;WHSE;
!!If F8 Print @45,11;"Y"; Else Print @45,11;"N";
!!Print @60,13;COST$;
!!If DATEX
!!  J2$ = DATEX Using "&&&&&&"
!!  I$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6]
!!  Print @25,15;I$[1,8];
!!  I1$ = I$[7,8],I$[1,2],I$[4,5] \ DATEX = I1$
!!  X2 = DATEX \ Gosub L_7820 \ JDATE = 0
!!  JDATE = X2
!!Else 
!!  Print @25,15;DATEX
!!  JDATE = 0
!!End If 
!!If SUBCATFLAG Print @45,17;"Y" Else Print @45,17;"N";
!!Return 
!!EDT_VEND: Rem field#1
!!J5$ = "Enter the starting vendor code maximum 999999"
!!J0$ = "1 00062303";J1$ = VEND[1]
!!Gosub ISINPUT \ VEND[1] = J$
!!J5$ = "Enter the ending vendor code maximum 999999"
!!J0$ = "1 00064303" \ J1$ = VEND[2]
!!Gosub ISINPUT \ VEND[2] = J$
!!If VEND[2] < VEND[1]
!!  Print @0,23;'CL RB';"Ending Vendor Code must be greater than Starting Vendor Code";
!!  Signal 3,30
!!  Goto EDT_VEND
!!End If 
!!RETVAL$[38,43] = VEND[1] Using "######"
!!RETVAL$[44,49] = VEND[2] Using "######"
!!Return 
!
if j8 
	If SUBCATFLAG
	 tmp$="CATEGORY CODE",fdel$ 
	 tmp$=tmp$,"CATEGORY DESCRIPTION",fdel$ 
  	 tmp$ = tmp$,"WH",fdel$
 	Else 
	  tmp$ = "WH",fdel$
	End If 
	tmp$ = tmp$,"VENDOR",fdel$
	tmp$ = tmp$,"VENDOR NAME",fdel$
	tmp$ = tmp$,"ITEM CODE",fdel$
	tmp$ = tmp$,"DESCRIPTION 1",fdel$
	tmp$ = tmp$,"DESCRIPTION 2",fdel$
	tmp$ = tmp$,"MB",fdel$
	tmp$ = tmp$,"COMM",fdel$
	tmp$ = tmp$,"VENDOR #",fdel$
	tmp$ = tmp$,"P.O. #",fdel$
	tmp$ = tmp$,"RTS DATE",fdel$
	tmp$ = tmp$,"ON HAND",fdel$
	tmp$ = tmp$,"ON HAND U/M",fdel$
	tmp$ = tmp$,"TRANS COST",fdel$
	tmp$ = tmp$,"TRANS COST U/M",fdel$
	tmp$ = tmp$,"EXT COST",fdel$ 
	Call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
L_1600: Rem
!!If Not(SCREEN) Print @0,22;'CE';"Sorting, please wait...";
K9$ = " ",K9$
L_1610: Search #9,3,1;K9$,R[9],E
If E = 2 Goto L_1700
Search #9,5,1;K9$,R[9],E
!
!!If E Gosub ERR_SEARCH
Goto L_1610
L_1700: K1$ = " ",K1$ \ K1$[1,Len(SPROD$)] = SPROD$
L_1710: Search #7,3,1;K1$,R7,E \ If E = 2 Goto L_1900
!!If E Gosub ERR_SEARCH
If K1$[1,Len(EPROD$)] > EPROD$ Goto L_1900
If Not(SCREEN)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
End If 
Mat Read #7,R7,0;G1; \ Mat Read #7,R7,6;G1$;
Mat Read #7,R7,86;G2; \ Mat Read #7,R7,102;G3;
Mat Read #7,R7,192;G4;
Rem IF JDATE<>0 IF G2[1]>JDATE GOTO L_1710: ! "RTS > PERIOD ENDING
If WHSE AND WHSE <> G1[0] Goto L_1710
If WHSE
  Gosub GET_BUYER
  If SBUYER AND W1[2] < SBUYER Goto L_1710
  If EBUYER AND W1[2] > EBUYER Goto L_1710
End If 
PK$ = " ",PK$ \ PK$[1,12] = G1$[1,12]
Search #2,2,1;PK$,R1,E \ If E = 1 Goto L_1710
!!If E Gosub ERR_SEARCH
Mat Read #2,R1,156;B1;
If B1[24] < VEND[1] Goto L_1710
If B1[24] > VEND[2] Goto L_1710
If F8 ! 
  TMPQTY = G3[0] - G3[1]
  If DATEX ! ending date entered
	Gosub L_6000 ! recalc from fifotrans?
	TMPQTY=QTY
  Endif
  TMPCOST = G3[6]
  If COST$ = "L" Let TMPCOST = G3[7]
  TMPTOTAL = FNR(TMPCOST * TMPQTY)
  If TMPQTY = 0 And TMPTOTAL = 0 Goto L_1710
End If 
If SUBCATFLAG
  K9$ = " ",K9$
  K9$[1,2] = B1[11] Using "##"
  K9$[3,8] = B1[24] Using "######"
  K9$[9] = K1$
  R[9] = R7
Else 
  K9$ = " ",K9$
  K9$[1,2] = 0 Using "##"
  K9$[3,8] = B1[24] Using "######"
  K9$[9] = K1$
  R[9] = R7
End If 
Search #9,4,1;K9$,R[9],E !!\ If E Gosub ERR_SEARCH
!
Goto L_1710
L_1900: Rem
!!If Not(SCREEN) Print @0,22;"Printing, please wait...";
!!If SCREEN Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
HOLDCAT = 0;j2=0;V9[1]=90
K1$ = " ",K1$ \ VEND[0]=99999990
L_2000: Search #9,3,1;K1$,R7,E \ If E = 2 Goto L_9100
If E Goto L_9100
If SUBCATFLAG 
  CAT = K1$[1,2]
  If HOLDCAT And CAT <> HOLDCAT
    Gosub L_4300
    Gosub GET_CAT
    HOLDCAT = CAT
  End If 
  If HOLDCAT = 0
    Gosub GET_CAT
    HOLDCAT = CAT
  End If 
End If 
VEND[4] = K1$[3,8]
If VEND[0] <> VEND[4] Gosub L_4200
If VEND[0] <> VEND[4] Gosub L_3000
VEND[0] = VEND[4]
If K1$[9,20] <> G1$[1,12] Gosub L_5400
Mat Read #7,R7,0;G1;
If WHSE AND WHSE <> G1[0] Goto L_2000
If Not(SCREEN)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Printed";
End If 
Mat Read #7,R7,6;G1$; \ Mat Read #7,R7,86;G2; \ Mat Read #7,R7,102;G3;
Mat Read #7,R7,192;G4;
PK$ = " ",PK$ \ PK$[1,12] = G1$[1,12]
Search #2,2,1;PK$,R1,E 
If E 
  if J2>0 and J8=0 Print #0;G1$[1,12];" IS NOT IN THE MASTER FILE!" \ V9[1] = V9[1] + 1 
  Goto L_2000
endif
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,460;A2;
Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2; \ Mat Read #2,R1,894;C4; \ Mat Read #2,R1,256;A;
PROD_LBS = A[6];PROD_FACT = A[5]
QTY = G3[0] - G3[1]
If DATEX ! ending date entered
  Gosub L_6000 ! recalc from fifotrans?
  If QTY=0 And F8 = 1 Goto L_2000
  If QTY=0 And G2[1] > JDATE Goto L_2000
End If 
COST = G3[6]
If COST$ = "L" Let COST = G3[7]
T9[3] = FNR(COST * QTY)
gosub L_5800
Gosub L_5000
Goto L_2000
L_3000: Rem VENDOR CODE LOOKUP
If Not(SUBCATFLAG) Let V9[1] = 99
VNAME$ = "NOT ON FILE!!!!"
K10$[1,6] = VEND[4] Using "######"
Search #10,2,1;K10$,R0,E \ If E = 1 Goto L_3090
!!If E Gosub ERR_SEARCH
Mat Read #10,R0,0;VNAME$;
VEND[0] = VEND[4]
if j8 return
!
If SUBCATFLAG And V9[1] < 99
  Print #0; Using "######";" VENDOR: ";VEND[0];" ";VNAME$
  Print #0;""
  V9[1] = V9[1] + 2
End If 
L_3090: Return 
GET_CAT: Rem CATEGORY LOOKUP
V9[1] = 99
If CAT <= 0 Or CAT > 99
  CATNAME$ = "NOT ON FILE!!!!"
Else 
  Mat Read #11,CAT,0;CATNAME$;
End If 
HOLDCAT = CAT
Return 
L_4000: Rem TOTAL PRINT
Gosub L_4300
Gosub L_5800
if j8 return
!
Print #0;"\15\** TOTALS **";
Print #0; Using "---------#.##"; Tab 85;T9[10];
Print #0; Using "----------#.##"; Tab 117;T9[12]
Print #0;" "
Return 
L_4200: Rem PRINT VENDOR TOTALS
Gosub L_5400
If Not(T8[0] + T8[1]) Goto L_4255
Gosub L_5800
!
if j8 goto L_4255
!
Print #0;" "
Print #0;"*** VENDOR TOTALS ***";
Print #0; Using "---------#.##"; Tab 85;T8[0];
Print #0; Using "----------#.##"; Tab 117;T8[1]
Print #0;""
V9[1] = V9[1] + 3
L_4255: T8[0] = 0 \ T8[1] = 0
Return 
L_4300: Rem PRINT CATEGORY TOTALS
Gosub L_4200
If Not(T7[0] + T7[1]) Goto L_4355
Gosub L_5800
!
if j8 goto L_4355
!
Print #0;" "
Print #0;"*** CATEGORY TOTALS ***";
Print #0; Using "---------#.##"; Tab 85;T7[0];
Print #0; Using "----------#.##"; Tab 117;T7[1]
Print #0;""
V9[1] = V9[1] + 3
L_4355: T7[0] = 0 \ T7[1] = 0
Return 
L_5000: Rem PRINT LINE
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########" \ X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  SUNIT$ = " ",SUNIT$;SUNIT$[1,2] = "LB";CUNIT$ = SUNIT$
  Q0[1] = 4;PMASK$ = "#####.####"
Else 
  Gosub L_10000
End If 
If F8 And QTY = 0 And T9[3] = 0 Return 
Gosub L_5800
if j8 

	If Not(CT)
 	 If SUBCATFLAG
 	   tmp1$ = HOLDCAT Using "##",fdel$
	   tmp1$ = tmp1$,rtrim$(CATNAME$),fdel$
	   tmp1$ = tmp1$, G1 Using "##",fdel$
 	 Else 
	   tmp1$ = G1 Using "##",fdel$
	 End If 
	  tmp1$ = tmp1$, VEND[0] Using "######",fdel$
	  tmp1$ = tmp1$, RTRIM$(VNAME$),fdel$	  
	  tmp1$ = tmp1$, P1$[140,151],fdel$
	  tmp1$ = tmp1$, rtrim$(P1$[9,38]),fdel$
	  tmp1$ = tmp1$, rtrim$(P1$[63,92]),fdel$
	  tmp1$ = tmp1$, P1$[139,139],fdel$
	  tmp1$ = tmp1$, P1$[152,155],fdel$
	  V9[1] = V9[1] + 1
	End If 
!	If P9$[26,26] = "Y" If Not(CT)
!	  tmp$ = tmp1$, rtrim$(P1$[63,92])
!	else
!	  tmp$ = tmp1$
!	end if
	tmp$ = tmp1$	
	if trim$(tmp$)=""
		If SUBCATFLAG
			tmp$=HOLDCAT Using "##",fdel$ 
			tmp$=tmp$,rtrim$(CATNAME$),fdel$ 
			tmp$ = tmp$, G1 Using "##",fdel$	
		endif
	endif



	If G1[1] = 1  
		tmp$ = tmp$, G1$[55,60],fdel$,G1$[44,49],fdel$ 
	else 
		tmp$ = tmp$,"",fdel$,"",fdel$
	end if
	If F9 < 99 
		If QTY = 0 
			T9[3] = 0 
			tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
			tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
			Call addtostr(e$,rstr$,tmp$+rdel$)
			Return
		end if
	end if
	X2 = G2[1] \ Gosub L_7770
	tmp$ = tmp$,X$[1,8],fdel$
	tmp$ = tmp$,QTY Using "-------#.##",fdel$,SUNIT$,fdel$
	tmp$ = tmp$,COST Using PMASK$ ,fdel$,CUNIT$,fdel$
	tmp$ = tmp$,T9[3] Using "-------#.##",fdel$
	Call addtostr(e$,rstr$,tmp$+rdel$)
	CT = CT + 1
	TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[3]
	T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[3]
	T8[0] = T8[0] + QTY \ T8[1] = T8[1] + T9[3]
	If SUBCATFLAG Let T7[0] = T7[0] + QTY \ T7[1] = T7[1] + T9[3]
	Return 
end if ! end of xml
!
If Not(CT)
  Print #0; Tab 1;P1$[140,151];
  Print #0; Tab 13;P1$[9,38];
  Print #0; Tab 44;P1$[139,139];
  Print #0; Tab 47;P1$[152,155]
  V9[1] = V9[1] + 1
End If 
If P9$[26,26] = "Y" If Not(CT)
  Print #0; Tab 13;P1$[63,92];
End If 
If Not(WHSE) Print #0; Using "##"; Tab 52;G1;
If G1[1] = 1 Print #0; Tab 56;G1$[55,60];
If G1[1] = 1 Print #0; Tab 64;G1$[44,49];
If F9 < 99 If QTY = 0 Goto L_5230 ! 1st page check?
X2 = G2[1] \ Gosub L_7770
Print #0; Tab 75;X$[1,8];
Print #0; Using "---------#.## "; Tab 85;QTY;SUNIT$;
Print #0; Using PMASK$; Tab 104;COST;" /";CUNIT$;
Print #0; Using "-------#.##"; Tab 120;T9[3];
CT = CT + 1
TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[3]
T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[3]
T8[0] = T8[0] + QTY \ T8[1] = T8[1] + T9[3]
If SUBCATFLAG Let T7[0] = T7[0] + QTY \ T7[1] = T7[1] + T9[3]
Print #0;""
v9[1]=v9[1]+1
L_5230: ! if here - bypass date,etc?
T9[3] = 0
Return 
L_5400: Rem PRINT TOTAL
If Not(CT) Goto L_5470
If CT = 1 Goto L_5460
Gosub L_5800
!
if j8 goto L_5470
!
Print #0; Using "TOTAL ---------#.## "; Tab 79;TOTQ;SUNIT$;
Print #0; Using "-------#.##"; Tab 120;TOTCOST
L_5460: if NOT(j8) Print #0;" " 
V9[1] = V9[1] + 3
L_5470: TOTQ = 0
TOTCOST = 0
CT = 0
Return 
L_5800: Rem HEADINGS ROUTINE
!V9[1] = V9[1] + 1 \ If V9[1] < V9[4] Return
if v9[1]<V9[4] Return
!!If J2 If SCREEN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
V9[1] = 8
If SUBCATFLAG Let V9[1] = 9
!
if j8 return
!
If J2 If Not(SCREEN) Print #0;"\14\";
J2 = J2 + 1 \ V9[1] = 8
If SUBCATFLAG Let V9[1] = 9
If Not(SCREEN) Print #0;"\12\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;DATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 795A -";COST$;"- ";T9$;
If P60$[9,9] = "L" Print #0; Tab 38;"L I F O    I N V E N T O R Y   V A L U E   R E P O R T";
If P60$[9,9] = "F" Print #0; Tab 38;"F I F O    I N V E N T O R Y   V A L U E   R E P O R T";
Print #0;"   B Y   V E N D O R"
X2 = DATEX \ Gosub L_7700
If DATEX Print #0; Tab 10;"FOR THE PERIOD ENDING ";X$[1,8];
If Not(WHSE) Print #0; Tab 54;"FOR ALL WAREHOUSES ";U5$;
If WHSE Print #0; Using "FOR WAREHOUSE ## "; Tab 55;WHSE;" ";U5$;
If SUBCATFLAG Print #0;"  SUBTOTAL BY CATEGORY" Else Print #0;""
If SUBCATFLAG
  Print #0; Using "##";" CATEGORY: ";HOLDCAT;" ";CATNAME$
Else 
  Print #0; Using "######";" VENDOR: ";VEND[0];" ";VNAME$
End If 
Print #0;""
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 44;"MB";
Print #0; Tab 47;"COMM";
If Not(WHSE) Print #0; Tab 52;"WH";
Print #0; Tab 56;"VENDOR#"; Tab 64;"P.O. #";
Print #0; Tab 75;"RTS DATE";
Print #0; Tab 94;"ON HAND";
Print #0; Tab 108;"TRANS COST";
Print #0; Tab 123;"EXT COST";
Print #0;" "
If SUBCATFLAG
  Print #0;""
  Print #0; Using "######";" VENDOR: ";VEND[0];" ";VNAME$
End If 
Print #0;""
F9 = 99
Return 
L_6000: Rem FIND BALANCES
QTY = 0
FTK$ = " ",FTK$ \ FTK$[1,6] = R7 Using "######"
L_6015: Search #8,3,1;FTK$,R8,E \ If E = 2 Goto L_6090
Gosub L_8100
If FT2[0] <> R7 Goto L_6090
If JDATE <> 0 and FT2[2] > JDATE Goto L_6015
QTY = QTY + FT3[0]
Goto L_6015
L_6090: Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8100: Rem READ FIFOTRANS FILE
Mat Read #8,R8,0;FT1$;
Mat Read #8,R8,72;FT1;
Mat Read #8,R8,80;FT2;
Mat Read #8,R8,96;FT3;
Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
!!If SCREEN Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20 \ T9[K] = 0 \ Next K
T8[0] = 0 \ T8[1] = 0
!If Not(SCREEN) and not(j8) Print #0;"\14\";
Goto OUTEND

L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 2
If PFU1[UNITX] = -1 Or PFU1[UNITX] = -3
  If G4[0] <> 0 And G4[1] <> 0
    A[5] = G4[1];A[6] = G4[0]
  Else 
    A[5] = PROD_FACT;A[6] = PROD_LBS
  End If 
End If 
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 1
If PFU1[UNITX] = -1 Or PFU1[UNITX] = -3
  If G4[0] <> 0 And G4[1] <> 0
    A[5] = G4[1];A[6] = G4[0]
  Else 
    A[5] = PROD_FACT;A[6] = PROD_LBS
  End If 
End If 
CNVTA = QTY \ Gosub L_20000 \ QTY = AMOUNT
If PFU1[UNITX] > 0 Mat Read #4,PFU1[UNITX],10;SUNIT$;
If PFU1[UNITX] = -1 Let SUNIT$ = "CWT "
If PFU1[UNITX] = -3 Let SUNIT$ = "LB  "
CUNIT$ = SUNIT$
Return 
!!L_10500: Rem SELECT UNIT
!!!!Window Open @5,5; Size 70,12; Using "SELECT DEFAULT UNIT "
!!L_10520:!! Print 'CS'
!!Print 
!!Print Tab 5;" 1) STOCKING  "; Tab 45;" 4) COSTING"
!!Print Tab 5;" 2) SELLING  "; Tab 45;" 5) PRICING"
!!Print Tab 5;" 3) PURCHASING "; Tab 45;" 6) PRODUCTION"
!!Print 
!!Print Tab 10;"Enter unit to show on report ";
!!Input ""UNIT$
!!UNIT = UNIT$
!!If UNIT < 1 Goto L_10520
!!If UNIT > 6 Goto L_10520
!!U5$ = " ",U5$
!!If UNIT = 1 Let U5$ = "IN STOCKING UNITS "
!!If UNIT = 2 Let U5$ = "IN SELLING UNITS "
!!If UNIT = 3 Let U5$ = "IN PURCHASING UNITS "
!!If UNIT = 4 Let U5$ = "IN COSTING UNITS "
!!If UNIT = 5 Let U5$ = "IN PRICING UNITS "
!!If UNIT = 6 Let U5$ = "IN PRODUCTION UNITS "
!!UNIT = UNIT + 7
!!Window Close 
!!Window Off 
!!Return 
L_20000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 2%,Q0[1]
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
BUNIT = 0
If CNVTU[2] <> 5 Goto L_20170
BUNIT = 1
CNVTU[2] = 1
Goto L_20180
L_20170: BUNIT = 0
L_20180: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,19,50;P9$;
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_20250,L_20350,L_20350,L_20640
!!Gosub ERR_SEARCH
L_20250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20330
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20330
  Next X1[2]
  FLAG = 1 \ Goto L_20650
L_20330: Next X1[1]
FLAG = 0 \ Goto L_20650
L_20350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20530
  If CNVTU[X1[1]] = -1 Or CNVTU[X1[1]] = -3 Goto L_20460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20450
  Next CUNIT
  FLAG = 0 \ Goto L_20650
L_20450: If CUNIT = 0 Goto L_20530
L_20460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] = -1 ! " <>-1 GOTO L_20510: ! ITS CWT
    If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
    If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Else 
    If CNVTU[X1[1]] = -3 ! " IT's Catch Weight
      If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5]))
      If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT / (A[6] / A[5])
    Else 
      If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
      If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
    End If 
  End If 
L_20530: Next X1[1]
If CNVTU[2] <> 1 Goto L_20580
If BUNIT Goto L_20580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20580: If CNVTU[2] <> 2 Goto L_20630
If Not(CNVTU[1]) Goto L_20630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20630: FLAG = 0 \ Goto L_20650
L_20640: Rem
L_20650: Rem RETURN FROM MODES 0-2
Return 
GET_BUYER: Rem
W1[2] = 0
K12$ = " ",K12$
K12$[1,12] = G1$[1,12]
K12$[13,14] = G1[0] Using "##"
Search #12,2,1;K12$,R12,E
If Not(E)
  Mat Read #12,R12,32;W1;
End If 
Return 

ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!1Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!!!Print 'K1'; \ Window Close 
!!Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT PROGRAM
!!Print 'CS' \ Close 
!!Chain "MX000"
!
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 	
! try call dxclose() else rem
End 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
!