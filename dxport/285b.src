! >>> Program 285b
!
! description  Open Quote Reports, Product
!
! loadsave -w -n 100,10 -o prog/dxport/285b.dl4 src/285b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  2, 2004  15:13:01
Rem /w/papermaster/r2002//usr/acct/dgh/work/devl/mx2/mx285b.src (univ2) [dgh] {32719}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX285B         Open Quote Report  (product sort format)
Rem Author:        Roman   (04/19/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub DateToJulian,InpBuf,Logic,String,Time,VerifyDate
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8,N1,N2,N1$,V9,CDATEFLAG,TIME$,DATE$,CNAME$,ITEM_LAB$
!
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
dim 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],2%,C4[8]!!,comd \ comd = 0
Dim 1%,H4[2],L3[3],UN[2],2%,DT3[1],JWDATE
Dim 1%,EUN[2]
Dim 2%,B[24],H0[12],H5[16],L4[3],L6[5],CUSTSEC[1]
Dim 3%,A1[7],Z1,T2[25],L5[3],L7[11],QORD,AMOUNT
Dim 3%,UNF[6]
Dim J$[40],CCD$[14],P9$[50]
Dim 1%,F,X1,2%,X2,RCTR,3%,J,J1,T[3],HCODE
Dim K0$[50],K1$[50],K2$[50],K3$[50]
Dim X$[20],Z1$[25],BREAK$[12]
Dim L6$[60],L1$[20],A1$[142],P0$[20],S3$[33]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],comd$[12]
dim Blank$[12] \ Blank$=" ",Blank$
!
Mat Read #1,19,50;P9$;
J = N1[8] - 1 \ If J < 0 Let J = 0
J1 = N1[9] - 1 \ If J1 < 0 Let J1 = 0
HCODE = 0
For X1 = J To J1 \ HCODE = HCODE + 2 ^ X1 \ Next X1
!!Print @0,22;"Sorting,please wait... ";
K0$ = " ",N1$[1,6]
L_1515: 
Search #8,3,2;K0$,R,E
If E = 2 Goto L_2000
!!If E Gosub ERR_SEARCH
If K0$[2,7] > N1$[7,12] Goto L_2000
SCTR = SCTR + 1
!!If Not(Fra(SCTR / 500)) Print Using "#######";@25,22;SCTR;" Records Printed";
Mat Read #8,R;H0;
Mat Read #8,R,78;H4;
Mat Read #8,R,104;H5;
If H0[0] > 19 Goto L_1515
If N2[4] = 1 If H0[0] < 4 Goto L_1515
If N2[4] = 2 If H0[0] >= 4 Goto L_1515
CUSTSEC[0] = H0[4] \ Gosub L_6650 \If CUSTSEC[0] = -1 Goto L_1515
Z = N1$[37,39] \ If H0[11] < Z Goto L_1515
Z = N1$[40,42] \ If H0[11] > Z Goto L_1515
X2 = H0[9] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE < N1[0] Goto L_1515
If JWDATE > N1[1] Goto L_1515
X2 = H5[1] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If CDATEFLAG If H5[1] If JWDATE < N1[2] Goto L_1515
If CDATEFLAG If H5[1] If JWDATE > N1[3] Goto L_1515
If H4[2] If H4[2] < N1[4] Goto L_1515
If H4[2] If H4[2] > N1[5] Goto L_1515
If H5[8] If H5[8] < N1[6] Goto L_1515
If H5[8] If H5[8] > N1[7] Goto L_1515
Mat Read #10,H0[3],8;T2;
If Not(T2[21]) If Not(N1[8]) Goto L_1650
Call Logic(1,HCODE,T2[21],X1) \ If Not(X1) Goto L_1515
L_1650: If H5[7] < N1[10] Goto L_1515
If H5[7] > N1[11] Goto L_1515
K2$ = H0[7] Using "######"
L_1660: 
Search #11,3,1;K2$,R1,E
If E = 2 Goto L_1515
X2 = K2$[1,6] \ If X2 <> H0[7] Goto L_1515
!!If E Gosub ERR_SEARCH
Mat Read #11,R1,8;L3;
If L3[2] > 900 Goto L_1660
If N2[2] = 3 Goto L_1685
If N2[2] = 1 If L3[0] Goto L_1660
If N2[2] = 2 If Not(L3[0]) Goto L_1660
L_1685: Mat Read #11,R1,140;L1$;
If L1$[1,12] < N1$[13,24] Goto L_1660
If L1$[1,12] > N1$[25,36] Goto L_1660
L_1695: If L1$[1,2] = "Z " Goto L_1660
K1$ = " ",K1$
K1$[1,12] = L1$
K1$[13,14] = H0[0] Using "##"
K1$[15,20] = H0[7] Using "######"
K1$[21,23] = L3[2] Using "###"
Search #9,4,1;K1$,R1,E
If E Let e$ = "syserrorfile 285 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \ error 10000
Goto L_1660
!
L_2000: Rem "================================= start print
If J8 
  tmp$ = rtrim$(ITEM_LAB$),fdel$,"DESCRIPTION 1",fdel$,"DESCRITPION 2",fdel$
  if  N2[0]=2 and N2[1] = 0
	tmp$ = tmp$, "QUOTE & LINE",fdel$
  endif
  If N2[1] 
    tmp$ = tmp$, "CUST",fdel$,"CODE / NAME",fdel$,"DV",fdel$,"WH",fdel$
	tmp$ = tmp$, "PO NUMBER",fdel$,"QUOTE",fdel$,"LINE",fdel$
    tmp$ = tmp$, "QUO DATE",fdel$,"CANCEL DATE",fdel$,"SP",fdel$,"HOLD",fdel$
    tmp$ = tmp$, "QTY ORD",fdel$,"U/M",fdel$, "EXTENSION",fdel$
  Else 
    tmp$ = tmp$,"QTY QTE",fdel$,"QTY QTE TYPE",fdel$,"EXTENSION",fdel$
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
  comd = 1
End if
!
If Not(J8) If V9[0] Print #0;"\14\"
!!If Not(J8)
!!  Print @0,22;"Printing,please wait... ";
!!End If 
V9[1] = 100 \ V9[0] = 0 \ RCTR = 0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$ \ BREAK$ = ""
L_2070: 
Search #9,3,1;K1$,R1,E
If E = 2 Goto L_9100
Mat Read #11,R1,8;L3;
Mat Read #11,R1,16;L4;
Mat Read #11,R1,32;L5;
Mat Read #11,R1,56;L6;
Mat Read #11,R1,80;L6$;
Mat Read #11,R1,140;L1$;
Mat Read #11,R1,168;L7;
Mat Read #11,R1,250;UN;
Mat Read #11,R1,370;S3$;
Mat Read #11,R1,446;EUN;
Mat Read #11,R1,452;UNF;
If L3[0] Gosub L_30000 \ Goto L_2220
Mat Read #3,L4[0],256;A;
Mat Read #3,L4[0],512;PFU1;
Mat Read #3,L4[0],554;PFU2;
Mat Read #3,L4[0],894;C4;
L_2220: Rem "get quote header
K2$ = " ",K2$
K2$ = K1$[13,20]
K2$[9,9] = " "
Search #8,2,1;K2$,R,E
If E goto L_2070
Mat Read #8,R,0;H0;
Mat Read #8,R,446;P0$;
Mat Read #8,R,78;H4;
Mat Read #8,R,104;H5;
Mat Read #10,H0[3],8;T2;
K2$ = " ",K2$ \ K2$ = H0[4] Using "######"
A1$[31,60] = "** NOT ON FILE **"
Search #5,2,1;K2$,R2,E
If E = 1 Goto L_2410
Mat Read #5,R2,0;A1$;
If BREAK$ <> "" If BREAK$ <> K1$[1,12] Gosub L_4000
L_2410: Gosub L_3500
!!If Not(J8)
!!  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Printed";
!!End If 
If V9[1] > V9[4] Gosub L_5800
If BREAK$ = "" Gosub L_5900
Gosub L_5000
T[0] = T[0] + L5[0]
T[1] = T[1] + L5[0]
T[2] = T[2] + QORD
T[3] = T[3] + QORD
Goto L_2070
!
L_3500: Rem "========================================== convert figures
CNVTA = L7[2] \ CNVTU[0] = 0
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 1
Gosub L_20000
QORD = AMOUNT
L_3620: Rem "now get u/m from CCODES
CCD$[11,14] = "CWT"
If N2[3] = 1 If PFU1[8] = -1 Goto L_3700
If N2[3] = 2 If PFU1[9] = -1 Goto L_3700
If N2[3] = 3 If UN[0] = -1 Goto L_3700
If N2[3] = 1 Mat Read #26,PFU1[8],0;CCD$;
If N2[3] = 2 Mat Read #26,PFU1[9],0;CCD$;
If N2[3] = 3 Mat Read #26,UN[0],0;CCD$;
L_3700: 
Return 
!
L_4000: Rem "================================ sort break
if  N2[0]=2 and N2[1] = 0
  tmp1$ = tmp1$, BREAK$ ,fdel$
endif
If J8 
  If N2[1]=0
    tmp$ = tmp1$, T[3] Using "-------#.##",fdel$
    tmp$ = tmp$, CCD$[11,14],fdel$
    tmp$ = tmp$, T[1] Using "-------#.##",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	comd = 1 
  End if
  BREAK$ = "" \ T[1] = 0 \ T[3] = 0
  Return
End if
If N2[1] Print #0;"" \ V9[1] = V9[1] + 1
Print #0; Tab 81;"TOTALS: ";BREAK$;
Print #0; Using "-------#.##"; Tab 103;T[3];
Print #0; Tab 115;CCD$[11,14];
Print #0; Using "-------#.##"; Tab 120;T[1]
Print #0;""
V9[1] = V9[1] + 2
BREAK$ = "" \ T[1] = 0 \ T[3] = 0
Return 
!
L_4500: Rem "================================ grand totals
If J8 Return
Print #0; Tab 81;"GRAND TOTALS:";
Print #0; Using "-------#.##"; Tab 103;T[2];
Print #0; Using "-------#.##"; Tab 120;T[0]
Return 
!
L_5000: Rem "========================================= print detail line
If J8 
  If Not(N2[1]) Goto L_5150
  comd = 1
  tmp$ = tmp1$, L1$[14,16],"  ",H0[4] Using "######",fdel$
  tmp$ = tmp$, rtrim$(A1$[31,53]),fdel$
  tmp$ = tmp$, H5[8] Using "##",fdel$,H4[2] Using "##",fdel$
  tmp$ = tmp$, rtrim$(P0$),fdel$
  tmp$ = tmp$, H0[7] Using "######",fdel$,L3[2] Using "###",fdel$
  X2 = H0[9] \ Gosub L_7700 \ tmp$ = tmp$, X$,fdel$
  X2 = H5[1] \ Gosub L_7700 \ tmp$ = tmp$, X$,fdel$
  tmp$ = tmp$, H0[11] Using "###",fdel$
  If T2[21] Let tmp$ = tmp$, "Yes" Else tmp$ = tmp$, "None",fdel$
  tmp$ = tmp$, QORD Using "------#.##",fdel$
  tmp$ = tmp$, CCD$[11,14],fdel$
  tmp$ = tmp$, L5[0] Using "------#.##",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Goto L_5150
End if
!
If Not(N2[1]) Goto L_5150
Print #0; Tab 2;L1$[14,16];
Print #0; Using "######"; Tab 7;H0[4];
Print #0; Tab 14;A1$[31,53];
Print #0; Using "## ##"; Tab 38;H5[8];H4[2];
Print #0; Tab 44;P0$;
Print #0; Using "###### ###"; Tab 64;H0[7];L3[2];
X2 = H0[9] \ Gosub L_7700 \ Print #0; Tab 75;X$;
X2 = H5[1] \ Gosub L_7700 \ Print #0; Tab 85;X$;
Print #0; Using "###"; Tab 95;H0[11];
If T2[21] Print #0; Tab 99;"Yes"; Else Print #0; Tab 99;"None";
Print #0; Using "------#.##"; Tab 104;QORD;
Print #0; Tab 115;CCD$[11,14];
Print #0; Using "------#.##"; Tab 121;L5[0]
V9[1] = V9[1] + 1
L_5150: RCTR = RCTR + 1
BREAK$ = K1$[1,12]
Return 
!
L_5800: Rem "============================================ headings
If J8 Return
!
!!If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
Print #0;"\12\";
TIME$ = "" \ Call Time(TIME$)
Print #0; Tab 10;DATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE:";V9[0]
Print #0;" -285B - ";TIME$;
Print #0; Tab 44;"O P E N   Q U O T E    R E P O R T"
Print #0; Tab 51;"SORTED BY PRODUCT"
Print #0;""
Print #0; Tab 1;ITEM_LAB$; Tab 14;"DESCRIPTION 1"; Tab 45;"DESCRITPION 2";
If N2[1] Print #0;"" Else Print #0; Tab 105;"QTY QTE"; Tab 121;"EXTENSION"
Print #0;""
BREAK$ = ""
Return 
!
L_5900: Rem "===================== sub header
If J8
  If Not(comd) and N2[1]=1
    tmp$ = tmp1$,"",fdel$,"",fdel$,"",fdel$
    tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
    tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
    tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
    tmp$ = tmp$,"",fdel$,"",fdel$
    call addtostr(e$,rstr$,tmp$+rdel$)
  End if
  If L3[0] Let tmp1$ = "+",rtrim$(S3$[1,20]),fdel$ Else Let tmp1$ = rtrim$(L1$[1,12]),fdel$
  If N2[1] Let Z1 = 60 Else Let Z1 = 52
  tmp1$ = tmp1$, rtrim$(L6$[1,30]),fdel$,rtrim$(L6$[31,Z1]),fdel$
  comd = 0
  Return
End if
!
If L3[0] Print #0; Tab 1;"+";S3$[1,20];
If Not(L3[0]) Print #0; Tab 2;L1$[1,12];
If N2[1] Let Z1 = 60 Else Let Z1 = 52
Print #0; Tab 22;L6$[1,30]; Tab 53;L6$[31,Z1];
If N2[1] Print #0;"" \ Print #0;"" \ V9[1] = V9[1] + 2
If Not(N2[1]) Goto L_5950
Print #0; Tab 7;"CUST CODE / NAME"; Tab 38;"DV"; Tab 41;"WH"; Tab 44;"PO NUMBER"; Tab 64;"QUOTE/LINE";
Print #0; Tab 75;"QUO DATE"; Tab 84;"CANCEL DATE"; Tab 96;"SP"; Tab 99;"HOLD"; Tab 105;"QTY ORD"; Tab 115;"U/M"; Tab 121;"EXTENSION"
Print #0;""
V9[1] = V9[1] + 2
L_5950: 
Return 
!
L_6650: Rem CHECK SALESREP/CUSTOMER SECURITY
If P9$[21,21] <> "N" Let CUSTSEC[0] = 0 \ Return 
CUSTSEC[1] = 1
call "custsec.dl4",Custsec[],ctlc,userid$,e$,rstr$
!!Call "CUSTSEC",CUSTSEC[]
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
!!DT3[0] = X2;FLAG = 1;X$ = " "
!!Call "JULIANUTIL",DT3[],X$,FLAG
!!Return 
!!Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
!!X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
!!X$ = X2 Using "&&&&"
!!DT3[0] = X$[1,2];DT3[1] = X$[3,4]
!!If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
!!If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
!!X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
!!X2 = X$[1,6] \ Return 
!
L_9100: Rem END OF THIS RANGE
If RCTR Gosub L_4000
Gosub L_4500
!!Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(comd) and N2[1]
  tmp$ = tmp1$,"",fdel$,"",fdel$,"",fdel$
  tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
  tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
  tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
  tmp$ = tmp$,"",fdel$,"",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
Goto OUTEND
!
!!End 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: 
Return 
!
L_30000: Rem ===== set units for conversions (stock/nonstock version)
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
!!V9[0] = 99
!!Chain "MX285"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 