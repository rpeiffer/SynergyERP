! >>> Program 527
!
! description Accounts Payable Void Check List
! loadsave -w -n 100,10 -o prog/dxport/527.dl4 src/527.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN  9, 2007  13:22:56
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ap/la527.src (univ2) [mary] {13384}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Rem LA527 VOID CHECK DATA ENTRY LIST
Rem LAST UPDATE: MTK 3/91 - MULTIPLE BANKS V4
Rem              04/28/1997 - M1[1](M) IS JULIAN
Try
Dim 1%,C0[6],E,F1,F9,H1[1],I,L,L9,M3[1],M6,M7,P,X,X1,H3,B9,DEPT
Dim 2%,G9[3],H[2],M,M1[6],M5[1],X2,X9,DIV,DT3[1],3%,R[50]
Dim 3%,H2[3],M2[5],M8[2],Q[7],T1[5],T8[7],T9[5],T7[5],A6[2]
Dim 3%,DIVTOT[3],BNKTOT[2]
Dim A$[15],B$[9],D8$[25],F$[16],G8$[10],G9$[40],H$[30],K1$[50],K2$[30],K3$[30]
Dim M$[12],M1$[12],M5$[12],M6$[12],P$[8],R$[150],R2$[4],U5$[6],V$[20]
Dim X$[10],D$[77],K4$[30],A5$[30],I$[50]
Dim K18$[10],K50$[10],K49$[10],K8$[20],DV1$[12],DV2$[12],DV3$[12],j$[50]
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim 2%,C4[4],JRNL,3%,T[8],1%,BANK,3%,SPEC[50]
dim 1%,apt1[1],2%,apdt2,apt1$[12],3%,apt3[1],rec_apdt
dim 1%,xapt1[1],2%,xapdt2,xapt1$[12],3%,xapt3[1],rec_xapdt
dim 1%,a2ccurrid,3%,a2ccurrfact
dim 1%,currpass
dim 1%,apbCURRID,3%,apbCURRFACT,keycurr$[30],currdesc$[30],2%,bnk_currid,3%,curr_rate
dim 1%,cnvcu[10],3%,cnvca[10],amount
dim 1%,oiCURRID,3%,oicurrfact
dim 1%,aph_CURRID,3%,aph_currfact
dim 3%,aphmerch,aphfreight,aphmisc,grossapamt,discapamt,netapamt,currvaramt,grosspayamt, discamt, checkamt
dim 3%,glexchamt,glexchacct,vcvaramt
dim p61$[256],currdesc$[30]

Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)

! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
REC_UAC = GetUIDRec(e$,IntCo,Userid$)
COID=intCO
for ctr=1 to 20
	try close #ctr else rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
mat read #1,61,0;p61$;

Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf

D$ = "ACCTS PAY  CREDIT MEMORETAINAGE  CASH       MANUAL CHK DISCOUNT   SUSPENSE   "

! Rem CHECK PRINTER TYPE
F1 = 0
L9 = 55
V$ = "10"
Search #15,2,1;V$,R[15],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '10' Not On File. "
	goto L_9060:
endif
Mat Read #15,R[15],2;R2$;

V$ = " ",V$
V$[3,6] = R2$
Search #16,2,1;V$,R[16],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Client "+rtrim$(r2$[1,4])+" Not on File "
	goto L_9060:
endif
Mat Read #16,R[16],10;G9$;

Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G8$[1,1] = intco Using "#"
g8$[2,2]=groupid$

!Print 'CS';"VOID CHECK DATA ENTRY LIST"
Call Time(D8$)
L = 99
V$ = " 0"
Search #15,2,1;V$,R[15],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto L_9060:
endif

Mat Read #15,R[15],2;R$;
F$ = R$[35,35],"/A10VC",G8$[1,2] \ Ropen #2,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Ropen #8,F$
For X = 5 To 7
  Read L
  Read #1,88,Abs(L);F$;
  If L <= 0 Ropen #X,F$ Else Open #X,F$
Next X
Data "-432","-448","112"
Mat Read #1,51,10;DEPT; \ Mat Read #1,51,18;C0;
If C0[6]<>0
	F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #18,F$
	F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #19,F$
	F$ = rec_uac Using "2/APVCTEMP&&&&"
	tmp$= "FILES/",f$
	I$ = "[1:12] ",tmp$,"!"
	Build #50,I$
	R[50] = 2 \ Search #50,0,1;I$,R[50],E \ If E Gosub ERR_SEARCH
	R[50] = 1 \ Search #50,0,0;I$,R[50],E \ If E Gosub ERR_SEARCH
	Try Close #50 Else Rem
	Open #50,f$
	F$ = rec_uac Using "2/APBNKTEMP&&&&"
	tmp$= "FILES/",f$
	I$ = "[1:12] ",tmp$,"!"
	Build #49,I$
	R[49] = 2 \ Search #49,0,1;I$,R[49],E \ If E Gosub ERR_SEARCH
	R[49] = 1 \ Search #49,0,0;I$,R[49],E \ If E Gosub ERR_SEARCH
	Try Close #49 Else Rem
	open #49,f$
endif
F$ = INTCO Using "2/APDETT#"
Open #81,F$
if p61$[136,136]="Y"
	ch_curr=OpenFile(9712,intCo) \ If Ch_curr = -1 Error 42 ! currency header file
endif
Call dxget("BANKID",tmp$)
if rtrim$(tmp$)="A" 
	let bankid=0
	let currid=0
	let curr_rate=0
	currpass=0
	CURRDESC$=" ",CURRDESC$
	tmp3=0
	if p61$[136,136]="Y"
		let tmp3=0
		let bankid=0
		let K1$=" ",K1$
		do
			search #2,3,1;K1$,R[2],e
			if e=2
				if not(tmp3)
					let returnstatus=1
					let message$="No Voided Checks are Available to be Registered"
					goto L_9010:
				endif
				exit do
			endif
			if e<>0
				let returnstatus=1
				let message$="Error in Void Check File "
				goto L_9010:
			endif
			let tmp3=K1$[1,2]
			K4$ = tmp3 Using "##"
			Search #7,2,1;K4$,R[7],E 
			mat read #7,r[7],54;bnk_currid;
			currid=bnk_currid
			if bankid<>0 and tmp3<>bankid
				let returnstatus=1
				let message$="Multiple Currency Banks! Bank "+str$(bankid)+" Is in another Currency. Please select individual bank "
				goto L_9010:
			endif
			if bnk_currid<>0
				if bankid<>0 and tmp3<>bankid
					let returnstatus=1
					let message$="Multiple Currency Banks! Bank "+str$(bankid)+" Is in another Currency. Please select individual bank "
					goto L_9010:
				endif
				let bankid=tmp3
				LET CURRPASS=1
				LET CURRID=BNK_CURRID
				let keycurr$=bnk_currid using "####"
				search #ch_curr,2,1;keycurr$,rec_curr,e
				if e<>0
					let returnstatus=1
					let message$="Bank "+str$(bankid)+" Has Invalid Currency Id"
					goto L_9010:
				else
					mat read #ch_curr,rec_curr,2;currdesc$;
					mat read #ch_curr,rec_curr,846;curr_rate;
					if curr_rate<>0 let currpass=1
				endif
			endif
			if tmp3+1>99 exit do
			let k1$=" ",k1$
			let k1$[1,2]=(tmp3+1) using "##"
		loop	
	endif
else
	let bankid=tmp$
	if bankid<1 or bankid>99
		let returnstatus=1
		let eflag=eflag+1
		message$="Invalid Bank Selected. " 
		goto L_9010:
	endif
	K4$ = bankid Using "##"
	Search #7,2,1;K4$,R[7],E 
	if e<>0
		let returnstatus=0
		let eflag=eflag+1
		message$="Bank "+str$(bankid)+" Not On File "
		goto L_9010:
	endif
	LET CURR_RATE=0
	LET CURRPASS=0
	CURRDESC$=" ",CURRDESC$
	if p61$[136,136]="Y"
		mat read #7,r[7],54;bnk_currid;
		currid=bnk_currid
		if bnk_currid<>0
			let keycurr$=bnk_currid using "####"
			search #ch_curr,2,1;keycurr$,rec_curr,e
			if e<>0
				let returnstatus=1
				let message$="Bank "+str$(bankid)+" Has Invalid Currency Id"
				goto L_9010:
			else
				mat read #ch_curr,rec_curr,2;currdesc$;
				mat read #ch_curr,rec_curr,846;curr_rate;
				if curr_rate<>0 let currpass=1
			endif
		endif
	endif
endif
startpass: ! 
let f9=0
for ctr=0 to 8\let t[ctr]=0\next ctr
for ctr=0 to 5
	let t9[ctr]=0
	let t1[ctr]=0
next ctr


L_1000: Rem GET ACCOUNT #
V$ = "10" \ Search #15,2,1;V$,R[15],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto outend:
endif
Read #15,R[15],6;B$; \ Q[0] = B$
Read #15,R[15],24;B$; \ Q[1] = B$
Read #15,R[15],42;B$; \ Q[2] = B$
Read #15,R[15],132;B$; \ Q[3] = B$
Read #15,R[15],96;B$; \ Q[4] = B$
Read #15,R[15],114;B$; \ Q[5] = B$
Read #15,R[15],150;B$; \ Q[6] = B$

Gosub L_8000
K1$ = " ",K1$
L = 99 \ G9 = 0 \ B9 = 0
K1$ = " ",K1$
if bankid<>0
	let k1$[1,2]=bankid using "##"
endif
L_2000: E = 0 \ Search #2,3,1;K1$,R[2],E
If E = 2 Goto L_4000
If E Gosub ERR_SEARCH
if  bankid<>0
	let tmp3=k1$[1,2]
	if tmp3<>bankid goto L_4000:
endif
Mat Read #2,R[2],40;H3;
If B9<>0
	If B9 <> H3 Gosub L_4300
endif
If B9 <> H3 Gosub L_3200
Mat Read #2,R[2],0;H;
Mat Read #2,R[2],12;H1;
Mat Read #2,R[2],16;H2;
Mat Read #2,R[2],42;H$;
Gosub L_3100
K2$ = " ",K2$ \ K2$[1,6] = H[2] Using "######"
K2$[7,12] = H[0] Using "######" \ K2$[20,20] = "9"
Search #5,2,1;K2$,R[5],E
If E Gosub ERR_SEARCH
Mat Read #5,R[5],0;M3; \ Mat Read #5,R[5],4;M$;
Mat Read #5,R[5],16;M1;
Mat Read #5,R[5],52;M2;
let apt1[1]=0 ! currid
let apt3[0]=0 ! currency factor
let apt3[1]=0 ! currency variance
if p61$[136,136]="Y"
	search #81,2,1;k2$,rec_apdt,e
	if not(e)
		mat read #81,rec_apdt,0;apt1;
		mat read #81,rec_apdt,16;apt2;
		mat read #81,rec_apdt,40;apt1$;
		mat read #81,rec_apdt,82;apt3;
	endif
endif
F9 = 0
K3$ = " ",K3$ \ K3$[1,6] = R[5] Using "######"
L_2100: Search #6,3,1;K3$,R[6],E
If E = 2 Goto L_2200
If E Gosub ERR_SEARCH
X9 = K3$[1,6]
If X9 <> R[5] Goto L_2200
Mat Read #6,R[6],0;M5; \ Mat Read #6,R[6],8;M6; \ Mat Read #6,R[6],36;M8;
If M1 <> M8[2] Goto L_2100
Mat Read #6,R[6],12;M5$; \ Mat Read #6,R[6],22;M7;
If M7 > 7 Goto L_2100
Mat Read #6,R[6],24;M6$; \ Mat Read #6,R[6],36;M8;
K4$ = " ",K4$ \ K4$[1,6] = M5[1] Using "######"
K4$[7,18] = M6$[1,12] \ K4$[19,20] = M7 Using "##"
Search #5,2,1;K4$,R,E
If E Gosub ERR_SEARCH
Read #5,R,20;M;
Read #5,R,48;DIV;
let xapt1[1]=0 ! currid
let xapt3[0]=0 ! currency factor
let xapt3[1]=0 ! currency variance
if p61$[136,136]="Y" !  and currpass<>0
	search #81,2,1;k4$,rec_xapdt,e
	if not(e)
		mat read #81,rec_xapdt,0;xapt1;
		mat read #81,rec_xapdt,82;xapt3;		
	else
		let xapt3[0]=apt3[0]
		let xapt3[1]=0
	endif
	if xapt3[0]=0
		let xapt3[1]=0
	endif
	if xapt3[0]=apt3[0] ! same currency
		let xapt3[1]=0
	else
		if currpass=0 and xapt3[0]<>0 and apt3[0]<>0
			let xapt3[1]=m8[0]-m8[1]
			let cnvcu[0]=1
			let cnvcu[1]=1
			let cnvca[0]= xapt3[1]
			let cnvca[1]=xapt3[0]
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
			let amount=(cnvca[0])
			let cnvcu[0]=2
			let cnvcu[1]=1
			let cnvca[0]= amount 
			let cnvca[1]=apt3[0]
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
			let amount=fnr(cnvca[0])
			let xapt3[1]=xapt3[1]-amount
		else
			let xapt3[1]=0
		endif
	endif
	!Print #0; Using "------,---.##"; Tab 51;M8;
	! Print #0; Using "------,---.##"; Tab 66;M8[1];
	if xapt3[0]<>0 and currpass<>0
		let cnvcu[0]=1
		let cnvcu[1]=1
		let cnvca[0]= m8
		let cnvca[1]=xapt3[0]
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
		let m8=fnr(cnvca[0])
		let cnvcu[0]=1
		let cnvcu[1]=1
		let cnvca[0]= m8[1] 
		let cnvca[1]=xapt3[0]
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
		let m8[1]=fnr(cnvca[0])
	endif
endif
X2 = M \ Gosub L_7890
M = DT3[0]
Gosub L_5800
Gosub L_5000
F9 = 99
If C0[6] AND CURRPASS=0
	Gosub L_7600
ENDIF
Goto L_2100
L_2200: If Not(F9) Goto L_2300
Gosub L_3000
Goto L_2000
L_2300: !Print 'CS CL RB';"NO TRANSACTIONS FOUND FOR CHECK# ";H[0];
!Print @0,23;'CL RB';"PRESS <CR> TO ABORT PRINT ";
!Input ""F$
eflag=eflag+1
message$=message$+"NO TRANSACTIONS FOUND FOR CHECK# "+str$(H[0])
Goto OUTEND
L_3000: Rem PRINT CHECK TOTAL
If Not(T1[0] + T1[1] + T1[2] + T1[3]+ T1[4] ) Return 
Gosub L_5800
Print #0; Tab 25;"CHECK TOTALS";
Print #0; Using "-------,---.##"; Tab 50;T1[0]; Tab 65;T1[1]; ! Tab 81;T1[2];
IF P61$[136,136]="Y" and currpass=0 and curr_rate<>0
	Print #0; Using "---,---,---.##"; Tab 81;(T1[2]-T1[4]);
	Print #0; Using "------,---.##"; Tab 96;T1[4];
ELSE
	Print #0; Using "---,---,---.##"; Tab 81;T1[2]; 
endif
Print #0;" "
Print #0;" "
L = L + 1
For I = 0 To 4
  T9[I] = T9[I] + T1[I]
  T7[I] = T7[I] + T1[I]
  T1[I] = 0
Next I
let totrec=totrec+1
Return 
L_3100: Rem PRINT CHECK HEADING
L = L + 1
Gosub L_5800
X2 = H[1] \ Gosub L_8900
Print #0; Using "######";"CHECK : ";H[0];"    ";P$
Print #0; Using "######";"VENDOR : ";H[2];"   ";H$[1,30]
Return 
L_3200: Rem PRINT BANK HEADING
A5$ = "BANK NOT ON FILE!!!"
K2$ = H3 Using "##"
Search #7,2,1;K2$,R[7],E \ If E Goto L_3250
Mat Read #7,R[7],2;A5$;
L_3250: Gosub L_5800
Print #0; Using "##   ";"BANK: ";H3;A5$[1,30]
Print #0;" " \ Gosub L_5800
B9 = H3
Return 
Return 
L_4000: Rem TOTAL PRINT
Gosub L_4300
Gosub L_5800
Print #0;" "
Print #0;"** TOTALS **";
Print #0; Using "------,---.##"; Tab 51;T9[0];
Print #0; Using "------,---.##"; Tab 66;T9[1]; ! Tab 82;T9[2];
IF P61$[136,136]="Y" and currpass=0 and curr_rate<>0
	Print #0; Using "---,---,---.##"; Tab 81;(T9[2]-T9[4]);
	Print #0; Using "------,---.##"; Tab 96;T9[4];
ELSE
	Print #0; Using "---,---,---.##"; Tab 81;T9[2]; 
endif
Gosub L_5800
Print #0;" "
if p61$[136,136]="Y" and currpass<>0 and curr_rate<>0
	For ctr = 0 To 8 \ t[ctr] = 0 \ Next ctr 
	For ctr = 0 To 5                         
		T9[ctr] = 0                            
		T1[ctr] = 0                            
	Next ctr                                 
	for ctr = 0 to 7 \ let t8[ctr]=0 \ next ctr
	let l=99
	gosub L_8000:
	let currpass=0
	goto startpass:
endif
Gosub L_5800
Print #0; Tab 20;"* * * * *  DISTRIBUTION AUDIT LIST  * * * * *"
Print #0;" "
T8[6] = T8[0] + T8[1] + T8[2] + T8[3] + T8[4] + T8[5] + t8[7]
If C0[6] Goto L_4600
For X = 0 To 7
  If X = 3 Goto L_4160
  If X = 4 Goto L_4160
  if x = 7 goto L_4160
  If Not(T8[X]) Goto L_4160
  Gosub L_5800
  Print #0; Using "########"; Tab 20;Q[X];
  Print #0; Tab 30;D$[X * 11 + 1,X * 11 + 11];
  Print #0; Using "---,---,---.##"; Tab 51;T8[X]
L_4160: Next X
K1$ = " ",K1$
IF BANKID>0 LET K1$=(BANKID-1) USING "##"
L_4210: Search #7,3,1;K1$,R[7],E \ If E = 2 Goto L_4295
If E Gosub ERR_SEARCH
IF BANKID<>0
	LET TMP3=K1$[1,2]
	IF TMP3>BANKID GOTO L_4295
	if tmp3<>bankid goto L_4210
endif
Mat Read #7,R[7],32;A6;
Mat Read #7,R[7],2;A5$;
If A6[2]<>0	
	Gosub L_5800
	Print #0; Using "########"; Tab 20;A6;
	Print #0; Tab 30;A5$[1,23];
	Print #0; Using "-----,---.##"; Tab 53;A6[2]
endif
IF P61$[136,136]="Y" and currid<>0
	mat read #7,R[7],116;GLEXCHACCT;
	mat read #7,R[7],128;VCEXCHAMT;
	Gosub L_5800
	Print #0; Using "########"; Tab 20;GLEXCHACCT;
	Print #0; Tab 30;RTRIM$(A5$[1,23]);"Var";
	Print #0; Using "-----,---.##"; Tab 53;VCEXCHAMT
endif
Goto L_4210
L_4295: Goto OUTEND
L_4300: Rem BANK TOTAL PRINT
Gosub L_5800
Print #0; Using "##";"TOTAL FOR BANK: ";B9;
Print #0; Using "------,---.##"; Tab 51;T7[0];
Print #0; Using "------,---.##"; Tab 66;T7[1]; Tab 82;T7[2];
If p61$[136,136]="Y" and currid<>0 and currpass=0
	Print #0; Using "------,---.##"; Tab 96;T7[4];
endif
Print #0;""
Print #0;" "
Gosub L_5800
if p61$[136,136]="Y" and currpass<>0 goto L_4370: 
K2$ = B9 Using "##"
Search #7,2,1;K2$,R[7],E \ If E Goto L_4370
Mat Read #7,R[7],32;A6;
A6[2] = A6[2] + T7[2] - T7[4]
Mat Write #7,R[7],32;A6;
IF P61$[136,136]="Y" and t7[4]<>0
	mat read #7,R[7],128;VCEXCHAMT;
	let VCEXCHAMT=VCEXCHAMT+T7[4]
	mat write #7,R[7],128;VCEXCHAMT;
endif
L_4370: For X = 0 To 4
  T7[X] = 0
Next X
Return 
L_4600: Rem PRINT BANK DISTRIBUTIONS
K49$ = " ",K49$
if bankid>0 let k49$[1,2]=(bankid-1) using "##"
L_4610: Search #49,3,1;K49$,R[49],E \ If E = 2 Goto L_4800
If E Gosub ERR_SEARCH
if bankid<>0
	let tmp3=bankid
	if tmp3>bankid goto L_4800:
	if bankid<>tmp3 goto L_4610:
endif
Mat Read #49,R[49],0;BNKTOT;
If BNKTOT[0]=0 and bnktot[2]=0 goto L_4610
DIV = K49$[3,4] \ K2$ = K49$[1,2]
Search #7,2,1;K2$,R[7],E 
If Not(E)
	Mat Read #7,R[7],32;A6;
	Mat Read #7,R[7],2;A5$;
else
	A6 = Q[2] \ A5$ = "MISSING BANK"  
	let bnktot[2]=0
endif
if bnktot[0]<>0
	K8$ = " ",K8$ \ K8$[1,9] = A6 Using "#########"
	if dept<>0
		K8$[8,9] = DIV Using "&&"
		Gosub L_8500!  \ If Not(E) Goto L_4685
		if e<>0 
			K8$ = " ",K8$ \ K8$[1,9] = A6 Using "#########"
		endif
	endif
	Gosub L_8500
	Gosub L_5800
	Print #0; Tab 20;K8$[2,9]; Tab 30;A$[1,15];
	Print #0; Using "---,---,---.##"; Tab 51;BNKTOT[0];
	Print #0;""
endif
if bnktot[2]<>0
	mat read #14,r[14],116;GLEXCHACCT;
	K8$ = " ",K8$ \ K8$[1,9] = A6 Using "#########"
	if dept<>0
		K8$[8,9] = DIV Using "&&"
		Gosub L_8500!  \ If Not(E) Goto L_4685
		if e<>0 
			K8$ = " ",K8$ \ K8$[1,9] = GLEXCHACCT Using "#########"
		endif
	endif
	Gosub L_8500
	Gosub L_5800
	Print #0; Tab 20;K8$[2,9]; Tab 30;A$[1,15];
	Print #0; Using "---,---,---.##"; Tab 51;BNKTOT[2];
	Print #0;""
endif
Goto L_4610
L_4800: Rem DIVISIONAL TOTALS
K50$ = " ",K50$
L_4810: Search #50,3,1;K50$,R[50],E \ If E = 2 Goto OUTEND
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT;
DIV = K50$[1,2] \ Gosub L_7100
For I = 0 To 2
  If Not(DIVTOT[I]) Goto L_4890
  Gosub L_5800
  K8$ = " ",K8$ \ If I = 0 Let K8$[2,9] = DV1$[2,9]
  If I = 1 Let K8$[2,9] = DV2$[2,9]
  If I = 2 Let K8$[2,9] = DV3$[2,9]
  Gosub L_8500
  Print #0; Tab 20;K8$[2,9];
  Print #0; Tab 30;A$[1,15];
  Print #0; Using "---,---,---.##"; Tab 51;DIVTOT[I]
L_4890: Next I
Goto L_4810
Goto OUTEND
L_5000: Rem PRINT LINE
Print #0; Tab 10;M6$[1,12];
X2 = M
Gosub L_8900
Print #0; Tab 31;P$;
Print #0; Using "------,---.##"; Tab 51;M8;
Print #0; Using "------,---.##"; Tab 66;M8[1];
If p61$[136,136]="Y" and currid<>0 and currpass=0
	Print #0; Using "------,---.##"; Tab 82;(M8[0] - M8[1] - xapt3[1]) ;
	Print #0; Using "------,---.##"; Tab 96;xapt3[1];
	If C0[6]<>0		
		Print #0; Using "###"; Tab 120;DIV;
	endif
else
	Print #0; Using "------,---.##"; Tab 82;M8[0] - M8[1];
	If C0[6]<>0
		Print #0; Using "###"; Tab 100;DIV;
	endif
endif
Print #0;""
T1[0] = T1[0] + M8 \ T1[1] = T1[1] + M8[1]
T1[2] = T1[2] + M8 - M8[1]

If M7 <> 2 Let T8[0] = T8[0] - M8[0]
If M7 = 2 Let T8[1] = T8[1] - M8[0]
T8[3] = T8[3] + (M8[0] - M8[1])
T8[5] = T8[5] + M8[1]
If p61$[136,136]="Y" and currid<>0 and currpass=0
	T1[4]=T1[4]+xAPT3[1]
	T8[7]=T8[7]+xAPT3[1]
	T8[3]=T8[3]-XAPT3[1]
endif
Return 
L_5800: L = L + 1
If L < L9 Return 
If P = 0 Goto L_5815
!If L9 <> 19 Goto L_5810
!Print 'CR'
!Input "PRESS <CR> TO CONTINUE "F$
L_5810: If P Print #0;"\14\\15\"
L_5815: Print #0; Tab 51;G9$
P = P + 1
Print #0;D8$;
Print #0; Tab 51;"VOID CHECK DATA ENTRY LIST";
Print #0; Tab 110;"PAGE ";P
IF P61$[136,136]="Y" and currpass<>0 and curr_rate<>0
	Print #0;"Currency: ";rtrim$(currdesc$)
endif
Print #0;" "
If G9 = 99 Goto L_5925
Print #0; Tab 10;"INVOICE CODE";
Print #0; Tab 27;"INVOICE DATE";
Print #0; Tab 55;"GROSS AMT";
Print #0; Tab 71;"DISC AMT";
Print #0; Tab 86;"  PAYMENT";
If p61$[136,136]="Y" and currid<>0 and currpass=0
	Print #0; tab 96;"  VARIANCE";
	IF C0[6]<>0 PRINT #0;tab 120;"DIV";
else
	If C0[6]<>0
		Print #0; Tab 100;"DIV";
	ENDIF
ENDIF
L_5925: Print #0;" "
L = 1
IF P61$[136,136]="Y" and currpass<>0 and curr_rate<>0
	l = l+1
endif
Print #0;" "
Return 

L_7100: Rem LOOKUP DIV TOTAL
K18$ = " ",K18$ \ K18$[1,2] = DIV Using "##"
Search #18,2,1;K18$,R[18],E \ If E Goto L_7135
Mat Read #18,R[18],42;DV1$;
Mat Read #18,R[18],54;DV2$;
Mat Read #18,R[18],66;DV3$;
Goto L_7150
L_7135: DV1$ = " ",DV1$ \ DV1$[1,9] = Q[0] Using "#########"
DV2$ = " ",DV2$ \ DV2$[1,9] = Q[1] Using "#########"
DV3$ = " ",DV3$ \ DV3$[1,9] = Q[4] Using "#########"
L_7150: Return 
L_7600: Rem UPDATE DIVISION TOTAL
If Not(C0[6]) Return 
K50$ = " ",K50$ \ K50$[1,2] = DIV Using "##"
Search #50,2,1;K50$,R[50],E \ If Not(E) Goto L_7645
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #50,1,0;K50$,R[50],E \ If E Gosub ERR_SEARCH
For X = 0 To 3 \ DIVTOT[X] = 0 \ Next X
Mat Write #50,R[50],0;DIVTOT
Search #50,4,1;K50$,R[50],E \ If E Gosub ERR_SEARCH
L_7645: Mat Read #50,R[50],0;DIVTOT
If M7 <> 2 Let DIVTOT[0] = DIVTOT[0] - M8[0]
If M7 = 2 Let DIVTOT[1] = DIVTOT[1] - M8[0]
DIVTOT[2] = DIVTOT[2] + M8[1]
Mat Write #50,R[50],0;DIVTOT;
K49$ = " ",K49$ \ K49$[1,2] = H3 Using "##" \ K49$[3,4] = DIV Using "##"
Search #49,2,1;K49$,R[49],E \ If Not(E) Goto L_7750
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #49,1,0;K49$,R[49],E \ If E Gosub ERR_SEARCH
For X = 0 To 2 \ BNKTOT[X] = 0 \ Next X
Mat Write #49,R[49],0;BNKTOT;
Search #49,4,1;K49$,R[49],E \ If E Gosub ERR_SEARCH
L_7750: Mat Read #49,R[49],0;BNKTOT
BNKTOT[0] = BNKTOT[0] + (M8[0] - M8[1])-XAPT3[1]
BNKT0T[2] = BNKTOT[2] + XAPT3[1]
Mat Write #49,R[49],0;BNKTOT;
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
L_7890: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem CLEAR APCASH TOTALS ! 
K1$ = " ",K1$
if bankid>0 let k1$[1,2]=(bankid-1) using "##"
L_8020: Search #7,3,1;K1$,R[7],E
If E = 2 Return 
If E Gosub ERR_SEARCH
if bankid<>0
	let tmp3=k1$[1,2]
	if tmp3>bankid return
	if tmp3<>bankid goto L_8020:
endif
Mat Read #7,R[7],32;A6;
MAT READ #7,R[7],128;VCEXCHAMT;
!!! NOTE:  check update of variance
If Not(A6[2]) AND NOT (VCEXCHAMT) Goto L_8020
IF A6[2]<>0
	A6[2] = 0
	Mat Write #7,R[7],32;A6;
ENDIF
IF (VCEXCHAMT)<>0
	LET VCEXCHAMT=0
	MAT WRITE #7,R[7],128;VCEXCHAMT;
ENDIF
Goto L_8020
L_8500: Rem VALIDATION FILE
A$ = "INVALID ACCOUNT#"
E = 0
Search #8,2,1;K8$,R[8],E \ If E = 1 Goto L_8525
If E Gosub ERR_SEARCH
Mat Read #8,R[8],12;A$;
L_8525: Return 
L_8900: Rem PUT DATE FROM X2 INTO P$
P$ = " ",P$
If Not(X2) Return 
U5$ = X2 Using "&&&&&&"
P$[1,2] = U5$[3,4]
P$[3,3] = "/"
P$[4,5] = U5$[5,6]
P$[6,6] = "/"
P$[7,8] = U5$[1,2]
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End




OUTEND: Rem EXIT PROGRAM
Gosub L_8000
L_9010: ! 

If C0[6]<>0
	Try Close #49 Else Rem
	Try Close #50 Else Rem
	F$ = rec_uac Using "2/APVCTEMP&&&&"
	Call FindF(F$,G9) 
	if g9<>0
		Kill F$
	endif
	F$ = rec_uac Using "2/APBNKTEMP&&&&"
	Call FindF(F$,G9) 
	if g9<>0
		Kill F$
	endif
endif
L_9060: !Close 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no void checks available to list"
		message$=message$+"."
	else
		Let message$=message$+" Void Check(s) Listed" ! +str$(totrec)+" Void Check(s) Listed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program


