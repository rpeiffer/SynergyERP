! --- mx863
! description Production Order Print
!
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/863.dl4 src/863.src
!
include "src/copyright.inc"
Rem MX863 - PRODUCTION ORDER PRINT
Rem PER STANDARD 
! also chained from mx861 (AUTO PRINT)
Rem  REV 3.0 - 05/91
Rem BEDIT Version: 2.5 OBJECT CODE     Created: DEC 30, 2013  12:59:58
Rem /x/w2/pm/r2005//x/usracct/jcs/work/custom/xrev9/mx863.src (synergyux.synergy.n) [jcs] {12249}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!! 06/23/17 vst task66923 - added custom code in header for Bullen Companies
!!

External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
Declare External Function getmsg$,expandarray,openprinter

Declare Intrinsic Sub InpBuf,String,StringSearch,Time
!Option Default Dialect IRIS1

Com 1%,SC,SR,PFU1[20],CNVTU[2]
Com 2%,S9[9]
Com 3%,PFU2[6],CNVTA,A[33],J4$[50]
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim A1$[30],P$[156],X$[10],W$[180],W5$[64],P1$[156]
Dim K0$[10],K1$[10],K2$[20],K3$[30],K4$[30],J$[16],SC$[1000]
Dim T9$[26],K10$[40],P9$[50],V1$[1000],BLNK$[100],PRNT$[80]
Dim K12$[20],FIRST_LOC$[6],PLOC$[18]
Dim 1%,N1[1],N2[41,4],W1[2],W5[4],J1,J9,W0,PL1[1],CHOPEN[30],P1[1]
Dim 3%,W3[5],W7[4],COST,AMNT,BMAMT,S3,R3,RS9[9]
Dim 2%,B[24],C4[8],SPN[16]
Dim 2%,W2[7],W6[3],D8
Dim CUSTOM_CUSTOMER$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim action$[30],options$[30],userid$[8],b$[200],3%
Dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1000] ! .net delimiters
Dim nextblockid$[8],tmp$[10],custom_customer$[30]
Dim Message$[500],WebStr$[1000],msg$[100]
b$ = " ",b$
! opened in the dxblock
! call dxopen()
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
! CALL dxsave(0,"tmp/pwoprint.txt!") 	
For J = 2 To 12
  Read J1
  If J1 = -1 Goto L_230
  Read #1,88,ABS(J1);J$;
  if J1<0
	ROpen #J,J$
  Else
	Open #J,J$
  Endif
L_230: Next J
Data "512","528","1792","-1808","1728","480","-1","-1","-1","-1","208"
Read #1,0,112;D8;
Mat Read #1,19,50;P9$;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
custom_customer$=UCase$(Trim$(custom_customer$))
Mat Read #7,0;N1;
SPEC = N1;BLNK$ = " ",BLNK$
RECLEN = N1[1]
If Not(SPEC) Goto L_300
Read #1,16,0;J$[1,16];
If Err 0 Let J8 = Spc(8)
J8 = 0 \ Open #8,J$
If Err 0 Gosub ERR_TRAP
If J8 Let SPEC = 0
L_300: OVRLY2 = 0;OVRLY3 = 0
Mat Read #7,2;N1; \ If N1 Let OVRLY2 = 9
Mat Read #7,3;N1; \ If N1 Let OVRLY3 = 9
If OVRLY2 = 0 And OVRLY3 = 0 Goto L_340 ! "both not defined
If Err 0 Let J8 = Spc(8)
Read #1,16,32;J$[1,16];
J8 = 0 \ Open #10,J$ \ If J8 Let OVRLY2 = 0 ! " ***** open #10 ***
Read #1,16,48;J$[1,16];
J8 = 0 \ Open #11,J$ \ If J8 Let OVRLY3 = 0 ! " ***** open #11 ***
L_340: If Err 0 Gosub ERR_TRAP
If Err 0 Let F = Spc(8)
F = 0 \ N = Chf(0)
If Err 0 Gosub ERR_TRAP
J9 = 65 \ If F Let J9 = 21;toscreen=1
F = 0
If S9[0] = 861 ! new standard - print from 861
  If S9[2] <= 0 
	Returnstatus=1;message$="NO PWO RECORD PASSED"
	Goto ENT_DONE
  Endif
  H1 = S9[2]
  Mat Read #2,H1,0;W$;
  N0 = W$[145,150];WHSE = 0
  If N0 <= 0 
	Returnstatus=1;message$="NO PWO ORDER STORED"
	Goto ENT_DONE
  endif
  K1$ = N0 Using "#####"
  S7 = 0
  Goto PRNT_AUTO
End If 
L_800: ! Print 'CS';@0,0;"PRODUCTION ORDER PRINT";
If S9[0] = 861 Goto ENT_DONE
!Print @0,10;'CE';"ENTER WHSE #, <CR>:ALL, E:EXIT   ";
!Input Len 16386;""X$ \ If X$ = "E" Goto OUTEND
call dxget("WHSE",x$)
WHSE = X$
!If WHSE = 0 If X$ <> "" Goto L_800
If WHSE < 0 Or WHSE > 99 Or Fra(WHSE) ! Goto L_800
	returnstatus=1
	message$="INVALID WAREHOUSE"
	goto OutEnd
Endif
L_900: Rem SELECT
If S9[0] = 861 Goto ENT_DONE
!Print @0,21;'CE';"ENTER PWO #, E:exit, <CR> FOR RANGE  ";
!Input ""J$ \ If J$ = "" Goto L_1000
!If J$ = "E" Goto OUTEND
call dxget("PWORDERID",tmp$)
let j$=rtrim$(tmp$) \ if j$="" goto L_1000 ! want a range
N0 = J$ \ F = 1 \ S7 = 0
K1$ = " ",K1$ \ K1$ = N0 Using "#####"
If J$[Len(J$)] >= "A" If J$[Len(J$)] <= "Z" Let K1$[6] = J$[Len(J$)]
PRNT_AUTO: Rem " Auto Print from 861 Entry
Search #2,2,1;K1$,H1,E
If Not(E) Goto L_950
!Print 'RB CL';"ORDER";N0;"NOT FOUND!"
let returnstatus=1;message$="ORDER "+Str$(N0)+" NOT FOUND"
if not(s9[0]) goto outend
If S9[0] = 861 Goto ENT_DONE
L_945: ! Signal 3,20 \ Goto L_900
L_950: J1 = 90 \ J2 = 0 \ S7 = 0
Read #2,H1,180;W0;
If WHSE If W0 <> WHSE ! Print 'RB CL';"ORDER";N0;"NOT FOR WHSE";WHSE \ Goto L_945
	returnstatus=1
	message$="ORDER "+Str$(N0)+" NOT FOR WHSE "+Str$(WHSE)
	goto outend
Endif
K0$ = K1$ \ F = 1
Goto L_1200 ! L_2030
L_1000: Rem RANGE
F = 1 !\ Print @0,21;'CE';"IS THIS A REPRINT? (Y/N) ";
!Input ""J$ \ If J$ = "" Goto L_1000
call dxget("REPRINT",tmp$)
let j$=UCase$(RTrim$(tmp$))
If J$ = "Y" Let S7 = 2 \ Goto L_1030
! If J$ <> "N" Goto L_1000
S7 = 1
L_1030: !Print @0,22;"ENTER STARTING PWO #, <CR>:all, or E:exit   ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ = "" Goto L_1100
call dxget("STPWO",tmp$) \ let j$=RTrim$(tmp$)
X2 = J$ \ K0$ = X2 Using "#####"
!Print @0,23;"ENTER ENDING PWO #, <CR> FOR LAST ";
!Input ""J$ \ If J$ = "" Let J$ = "99999"
call dxget("ENDPWO",tmp$) \ let j$=RTrim$(tmp$)
If J$ = "" Let J$ = "99999"
X2 = J$ \ K1$ = X2 Using "#####"
If K0$ <= K1$ Goto L_1200
Message$="ENDING MUST BE GREATER THAN STARTING!"
Returnstatus=1
Goto OutEnd ! Goto L_1030
L_1100: Rem ALL
K0$ = " ",K0$
K1$ = "999999"
L_1200: Rem CONTINUE
If toscreen = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
J2 = 0 \ J1 = 90
!Print @0,21;'CE';"PRINTING. . . PLEASE WAIT "
!Signal 3,0
TOF = 0
!If J1 < 30 Print 'CS'
Search #2,2,1;K0$,H1,E
If Not(E) Goto L_2020
L_2000: Search #2,3,1;K0$,H1,E
If E Goto OutDone ! L_900
If Not(F) Goto OutDone ! L_900
L_2020: If K0$[1,5] > K1$[1,5] goto OutDone ! Goto L_900
Read #2,H1,180;W0;
If WHSE If W0 <> WHSE Goto L_2000
L_2030: Mat Read #2,H1,182;W1;
If S7 If S7 <> W1[0] Goto L_2000
Mat Read #2,H1,0;W$;
Mat Read #2,H1,188;W2;
Mat Read #2,H1,220;W3;
J1 = 90 ! each pwo on new page!
J$ = W$[121,132]
Gosub L_3000 \ Gosub L_3100
BMAMT = W3[0] \ Gosub L_6850
W3 = S3 \ P$[120,122] = "ERR"
If PFU1[8] > 0 Read #6,PFU1[8],10;P$[120,122];
P1$ = P$
If P9$[41,41] = "Y" Or P9$[41,41] = "W"
  RS9[2] = H1;RS9[4] = 863;RS9[0] = 863
  CHOPEN[0] = 1;CHOPEN[1] = 4;CHOPEN[2] = 2;CHOPEN[3] = 3
  CHOPEN[4] = 0;CHOPEN[5] = 6;CHOPEN[6] = 0;CHOPEN[7] = 0
  CHOPEN[8] = 0;CHOPEN[9] = 12
  !Call "MXRASL5",S9[],CHOPEN[]
  Call "MXRASL5.DL4",intco,Ctlc,RS9[],CHOPEN[]
End If 
Gosub L_3500 !CUST
Gosub L_5800
Gosub L_4500 !LINES
TOF = 1
If W1[0] <= 1 Let W1[0] = 2
Mat Write #2,H1,182;W1;
! let j1=99;j2=j2+1
Goto L_2000
L_3000: Rem GET PROD
K3$ = " ",K3$ \ K3$ = J$[1,12]
Search #4,2,1;K3$,R4,E
If E Goto L_3060
Mat Read #4,R4,0;P$;
E2 = R4 \ Gosub L_3800
Return 
L_3060: Rem NG
P$ = " ",P$
P$[9,38] = "ERROR! PRODUCT NOT FOUND!      "
Return 
L_3100: Rem READ SPEC
SC$ = " ",SC$ \ If Not(SPEC) Goto L_3170
Search #8,2,1;K3$,R8,E
If E Goto L_3170
Read #8,R8,24;SC$[1,RECLEN];
L_3170: Rem GET LINES
For I = 1 To 16
  SPN = (I - 1) * 38 + 1 \ SPN[I] = SC$[SPN,SPN + 2]
Next I
Return 
L_3500: Rem GET CUST
K4$ = " ",K4$ \ K4$ = W2[5] Using "######"
Search #5,2,1;K4$,R5,E
If E Goto L_3560
Mat Read #5,R5,30;A1$;
Return 
L_3560: Rem
A1$ = "ERROR! CUSTOMER NOT FOUND!    "
Return 
L_3800: Rem READ PROD
If W5[4] = -2 Return 
Mat Read #4,E2;P$;
Mat Read #4,E2,156;B;
Mat Read #4,E2,256;A;
Mat Read #4,E2,512;PFU1;
Mat Read #4,E2,554;PFU2;
If Not(B[8]) Let B[8] = B[21] !!IF NO PRDTN USE AVG
If Not(B[8]) Let B[8] = B[10] !!LAST TRY, USE P.O.
A2 = B[8]
If PFU1[8] <= 0 Let PFU1[8] = PFU1[0]
If PFU1[13] <= 0 Let PFU1[13] = PFU1[0]
Return 
L_4500: Rem WO LINES
K2$ = " ",K2$ \ K2$ = W$[145,150]
L_4510: Search #3,3,1;K2$,R3,E
If E Return 
If K2$[1,6] <> W$[145,150] Return 
Mat Read #3,R3,0;W5$;
Mat Read #3,R3,64;W5;
Mat Read #3,R3,74;W6;
Mat Read #3,R3,90;W7;
If W5[4] = -2 Let P$ = " ",P$;P$[9,34] = W5$[39,64];P$[140,141] = "Z " \ Goto L_4570
J$ = W5$[13,24]
Gosub L_3000 !PROD
S3 = W7[0] \ Gosub L_6800
W7[0] = BMAMT
P$[123,125] = "ERR" \ If W5[3] > 0 Read #6,W5[3],10;P$[123,125];
L_4570: Gosub L_5800
If CUSTOM_CUSTOMER$ <> "AMWAX"
  Gosub GET_PROD_LOCATION
End If 
Gosub L_5000
Goto L_4510
L_5000: Rem PRINT LINE
Print #0; Tab 1;W5$[13,24];
Print #0; Tab 14;P$[9,38];
Print #0; Tab 46;P$[123,125];
If CUSTOM_CUSTOMER$ = "AMWAX"
  If W5[4] <> -2 Print #0; Using "########.##"; Tab 50;W7[0];
  If P9$[26,26] = "Y" Print #0;"" \ J1 = J1 + 1
Else 
  If W5[4] <> -2 Print #0; Using "########.####"; Tab 50;W7[0];
  Print #0;"" \ J1 = J1 + 1
  Print #0; Tab 6;FIRST_LOC$[1,6];
End If 
If P9$[26,26] = "Y" Print #0; Tab 14;P$[63,92];
If Not(SPEC) Goto L_5080
For I = 1 To 16
  If SPN[I] If W5[0] = SPN[I] Gosub L_5500
Next I
L_5080: Print #0;"" ! \ J1 = J1 + 1
Return 
L_5500: Rem
Gosub L_5800
SPN = (I - 1) * 38 + 4
Print #0; Tab 65;SC$[SPN,SPN + 34]
Return 
L_5800: Rem HEADER
If Not(J2) Goto L_5830
J1 = J1 + 1 \ If J1 < 59 Return !  was 64
!If J9 < 30
!  Input "\15\PRESS RETURN TO CONTINUE "J$
!  Print 'CS'
!Else 
  Print #0;"\14\";
!End If 
L_5830: T9$ = "" \ Call Time(T9$)
T9$ = "" \ Call Time(T9$)
J2 = J2 + 1
Print #0;" - 863 -";T9$
Print #0; Tab 20;"PRODUCTION ORDER PRINT";
Print #0; Tab 60;"PAGE";J2
Print #0;"\15\"
Print #0; Tab 1;"PRODUCT #/NAME "; Tab 60;"W.O. # ";K0$[1,6]
IF CUSTOM_CUSTOMER$="AMWAX"
	Print #0; Tab 10;W$[125,132];" ";P1$[9,38]; ! "was w$[121,132]
ELSE ! USE FULL PRODCODE!
	Print #0; Tab 10;W$[121,132];" ";P1$[9,38]; ! "was w$[121,132]
ENDIF
X2 = D8 \ Gosub L_7700
Print #0; Tab 60;"W.O. DATE ";X$[1,8]
If P9$[26,26] = "Y" Print #0; Tab 23;P1$[63,92];
Print #0;" "
If CUSTOM_CUSTOMER$ = "AMWAX"
  Print #0;" " \ Print #0;" "
End If 
Print #0; Tab 1;"CUST. NAME: ";A1$[1,30]; Tab 60;"WHSE: ";W0
Print #0; Tab 1;"SALES ORDER #";W2[6];"-";W1[1];
X2 = W2[0] \ Gosub L_7700
Print #0; Tab 39;"REQ. COMPLETION/DEL. DATE:  ";X$[1,8]
If CUSTOM_CUSTOMER$ = "AMWAX"
  TWEIGHT = W2[7] * (A[6] / A[5])
  Print #0; Using "########.##"; Tab 1;"QTY TO MAKE: ";W3[0];"  ";P1$[120,122];
  Print #0; Using "########.##";"    TOTAL WEIGHT: ";TWEIGHT;" LBS."
  Print #0;" "
  Print #0; Using "########.##"; Tab 1;"NO. OF BOM'S: ";W2[7]
Else 
  Print #0; Using "########.##"; Tab 1;"QTY TO MAKE: ";W3[0];"  ";P1$[120,122]
  Print #0;" "
  Print #0; Using "########.####"; Tab 1;"NO. OF BOM'S: ";W2[7]
End If 
Print #0;"\15\"

IF custom_customer$ = "BULLEN"
  if j2=1
	IF w$[1,1]<>"" IF w$[1,4]<>"    "  
		PRINT #0; TAB 10;"1. ";W$[1,30]
	else
		print #0; tab 10;"1. RI _________  pH _________    ODOR _______"
	endif
	print #0;""
	IF w$[31,31]<>"" IF w$[31,34]<>"    "    
		PRINT #0; TAB 10;"2. ";W$[31,60]
	else
		print #0; tab 10;"2. COLOR ______________ CLARITY _____________"
	endif
	print #0;""
	IF w$[61,61]<>"" IF w$[61,64]<>"    "
		PRINT #0; TAB 10;"3. ";W$[61,90]
	else
		print #0; tab 10;"3. VISCOSITY __________ BATCH MAKER _________"
	endif
	print #0;""
	IF w$[91,91]<>"" IF w$[91,94]<>"    "    
		PRINT #0; TAB 10;"4. ";W$[91,120]
	else 
		print #0; tab 10;"4. LAB QC BY __________ DATE ________________"
	endif
	PRINT #0;""
	LET J1=20
  else
	let j1=12
  endif
  GOTO continue_with_overlay:  !
ENDIF

If CUSTOM_CUSTOMER$ <> "AMWAX"
  Print #0; Tab 10;"1. ";W$[1,30]
  Print #0; Tab 10;"2. ";W$[31,60]
  Print #0; Tab 10;"3. ";W$[61,90]
  Print #0; Tab 10;"4. ";W$[91,120]
  Print #0;""
  J1 = 19
Else 
  J1 = 16
End If 
continue_with_overlay: !
If OVRLY2 Or OVRLY3 Gosub L_6500
Print #0;""
Return 
GET_PROD_LOCATION: Rem
K12$ = " ",K12$;FIRST_LOC$ = " ",FIRST_LOC$
K12$[1,12] = W5$[13,24]
GET_LOCATION: Rem
Search #12,3,1;K12$,R12,E
PLOC$ = " ",PLOC$
If E = 2 Goto END_GET_PROD_LOCATION
If E Gosub ERR_SEARCH
If K12$[1,12] <> W5$[13,24] Goto END_GET_PROD_LOCATION
WHSENO = K12$[13,14]
If WHSENO <> W0 Goto GET_LOCATION
Mat Read #12,R12,0;PLOC$;
Mat Read #12,R12,18;PL1;
If FIRST_LOC$[1,6] = "      " Let FIRST_LOC$[1,6] = PLOC$[13,18]
If PL1[1] = 1 Let FIRST_LOC$[1,6] = PLOC$[13,18] !"primary location
If PL1[1] <> 1 Goto GET_LOCATION
END_GET_PROD_LOCATION: Rem
If FIRST_LOC$[1,6] = "      " Let FIRST_LOC$[1,6] = "STOCK "
If W5$[13,18] = "Z     " Let FIRST_LOC$ = " ",FIRST_LOC$
Return 
L_6500: Rem SEARCH / PRINT OVERLAY DATA
If OVRLY2 = 0 And OVRLY3 = 0 Return ! "screen not available
If OVRLY3 = 0 Goto L_6550 ! "bypass cust/product
Mat Read #7,3;N1;
If N1[0] = 0 Or N1[1] = 0 Goto L_6550 ! "has to be nonzero
Mat Read #7,3,4;N2;
K10$ = " ",K10$;K10$ = W2[5] Using "######";K10$[7] = P1$[140,151]
Search #11,2,1;K10$,R11,E \ If E Goto L_6550 ! "not there
Read #11,R11,24;V1$[1,N1[1]]; ! "all data in record
Goto L_6600 ! "print info
L_6550: Rem PRODUCT ALONE
If OVRLY2 = 0 Return ! "file not there
Mat Read #7,2;N1;
If N1[0] = 0 Or N1[1] = 0 Return ! "has to be nonzero
Mat Read #7,2,4;N2;
K10$ = " ",K10$;K10$ = P1$[140,151]
Search #10,2,1;K10$,R10,E \ If E Return ! "not there
Read #10,R10,24;V1$[1,N1[1]]; ! "all data in record
L_6600: Rem PRINT SPECS
BLNK = 0;BLNKL = 0
For F0 = 1 To 16 ! "16 lines/fields
  PRNT$ = " ",PRNT$;PRNT$ = V1$[N2[F0 - 1,2],N2[F0 - 1,3]]
  BLNKL = 0 \ If PRNT$ = BLNK$[1,Len(PRNT$)] Let BLNKL = 1
  BLNK = BLNK + BLNKL
  If F0 > 10 And BLNKL Goto L_6680 ! "blank line in invoice
  If F0 < 11 If BLNKL If BLNK > 2 Goto L_6680 ! "blank line
  Gosub L_5800
  Print #0; Tab 9;PRNT$
L_6680: Next F0
Print #0;"" \ Gosub L_5800
Return 
L_6800: Rem BASE(S3) -> PRDTN
CNVTA = S3 \ CNVTU[0] = 0 \ CNVTU[1] = W5[3] \ CNVTU[2] = 5
If P$[152,155] = "MACH" Or P$[152,155] = "TIME" Or P$[152,155] = "LABR" Let CNVTU[2] = 5
Gosub L_6950
If AMNT <= 0 Let AMNT = S3
BMAMT = AMNT
CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = W5[3] \ CNVTU[2] = 2
Gosub L_6950
If AMNT <= 0 Let AMNT = A2
COST = FNR(AMNT)
Return 
L_6850: Rem BASE -> STOCK UNITS
CNVTA = BMAMT \ CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
Gosub L_6950
If AMNT <= 0 Let AMNT = BMAMT
S3 = AMNT \ Return 
CNVTA = COST \ CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 2
Gosub L_6950 \ If AMNT <= 0 Let AMNT = COST
COST = AMNT
Return 
L_6950: Rem STD

L_6990: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMNT = CNVTA
Return 
L_7700: Rem  *DATE  X2 TO X$  V1.0
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
ENT_DONE: Rem "Auto Print (861) is Complete
CLOSE
Open #0,"cntrl/CNTRL.LPT"
For K = 1 To Chf(0) - 1
  Mat Read #0,K,30;P1;
  If P1[1] <> Spc(6) Goto L_8760
  P1[0] = 0;P1[1] = 0
  Mat Write #0,K,30;P1;
L_8760: Next K
Close #0
S9[0] = 0;S9[2] = 0
if returnstatus=0 ! ok
	let returnstatus=1;message$="OK"
else ! issue  =1
	let returnstatus=0 ! keep message
Endif
! Chain "MX861A" ! NFW
OUTEND: Rem EXIT
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
!Print 'CS'
!Close 
!Chain "MX000"
OutDone: ! just getout
End 
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM ",MSC$(4)
call programdump("tmp/mx863se!","")
ERROR 11000
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
end
Rem {end rtn.error.s}

