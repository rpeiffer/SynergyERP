! >>> Program serpcpi_393p
!
! description CPI MIN / MAX PURCHASE REPORT WITH
!
! loadsave -w -n 100,10 -o prog/dxport/serpcpi_393p.dl4 src/serpcpi_393p.src
!
! 1.0 04/02/2008 change
!
include "src/inc/filecpidet.inc"
Include "src/inc/filespecprice.inc" ! Special Price Lines (MANUAL KEY ADD/UPDATE ONLY!)
include "src/copyright.inc" ! dx
!
! Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 26, 2004  11:12:45
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Rem original - PO393A  MIN MAX - Sorted by buyer/vend/prod/whse
Rem LAST UPDATE  roman 02/09/1993. check do-not-reorder flag cct #48631
!
! CUSTOM UPCW ! 7/30/09 jliu cct234637 round up the reorder qty base on vendor order u/m
! CUSTOM SJERSEY ! kag cct146070 add reorder multiple field to report - southjersey
! CUSTOM ACME task #13361/cct#160913(acme) add reorder multiple field to report
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
Declare External Function OpenFile
!
External Lib "libcpi.lib"
Declare External Sub cpionhold
Declare External Function CPIQtyAvail
!
Declare Intrinsic Sub InpBuf,String
!
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!!-!! Option Default Dialect IRIS1
dim cpid. as cpidet
dim cpid2. as cpidet
dim sd. as specprice
dim sd2. as specprice
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim J$[20],X$[10],K16$[60],W1$[32],K9$[60],VEND$[30],K5$[60]
Dim D$[156],CNAME$[30],SUNIT$[4],UNIT$[10],K2$[50],PR_A2$[30],PUNIT$[4]
Dim U5$[50],K1$[50],D8$[8],F$[16],V$[20],PROD$[12],D1$[10],P61$[256]
Dim P9$[50],KTR$[50],K12$[50],K18$[50],MTH$[108],MTHH$[108]
Dim Custom_customer$[30],runit$[4],chk$[100],SMASK$[8],smask1$[9]
Dim 1%,I,head,TotCalc,rpwhse[99],ORD_H4[2],OWHT[1]
Dim 1%,F,W0[3],W1[2],ORD_L3[3],ARMTH,BOYMONTH,MONTH_[4]
Dim 1%,ALLPRD,WHSE[99],WHDETL,UnitType,COSTNO,NUMMTHS,CALEND,MTH,WHS
Dim 1%,CH_PROD,CH_VEND,CH_CCODES,CH_PRDLOT,CH_PRDWHSE
Dim 1%,CH_ROL,CH_ROH,CH_SORT,CH_VTAG,MWCP,CRChan[9]
dim 1%,cpiflag,cpiChan[99]
Dim 2%,custno,custname$[30],cprod$[12]
Dim 2%,X2,W2[9],B[24],D9[5],ORD_H0[12],ORD_H5[16],ORD_L2[2]
Dim 2%,ORD_L6[5],Q4,PR_C4[10],K1,BUYER,SVEND,EVEND,VEND,BUYR
Dim 2%,WGT,CUBES,W7[14],ORD_L4[3]
Dim 2%,ROMULT,PFACTOR,VFACTOR,D5
Dim 3%,J,X1,W3[24],W5[25],A1[7],M1[17],T9[40],CW5[25],W9[25],CW9[25]
Dim 3%,Q2,Q3,AMOUNT,PLP3[4],QTYBO,ORD_L7[12],ORD_S3[17],PF_LOAD2,REORDQTY
Dim 3%,PROD_REC,TRANSIN_QTY,COST,AMU,PRPARC[3],WHMISC[6],TRREQ_QTY
Dim 3%,R1,R5,R8,R9,REC,R10,R20,LINE_REC,REVPER,R16,SMV
dIM K11$[50],M1$[30],t2data$[2][1000]
dim bline$[132],PRUDA$[60]
dim kcpid$[60],K_cpid2$[60],K_sd$[60],K_sd2$[50]
Def FNR(X) = Sgn(X) * (Int((Abs(X) * 100) + .5) / 100)
Def FNU(X) = Int(Abs(X) + Sgn(Fra(Abs(X)))) * Sgn(X)
!!!! dx add xport reporting code
Dim tmp$[1000],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
head=0
b$=" ",b$
For K1 = 2 To 11
  Read J \ If J = -1 Goto NXTFLE
  Read #1,88,J;F$;
  Ropen #K1,F$
NXTFLE: Next K1
Data "1792","2400","1728","2528","1744","1888","1840","-1","1120","1696"
CH_PROD = 2;CH_VEND = 3;CH_CCODES = 4;CH_PRDLOT = 5;CH_PRDWHSE = 6
CH_ROL = 7;CH_ROH = 8;CH_SORT = 9;CH_VTAG = 10;CH_PRDNT=11
CH_CPID=OpenFile(-9928,IntCo) \ if ch_cpid=-1 Error 42 ! cpi detail
CH_SD=OpenFile(-1936,IntCo) \ If ch_sd=-1 Error 42 ! Contract Lines
cpiChan[0] = 1
	cpiChan[1] = CH_CPID
	cpiChan[2] = CH_SD
	cpiChan[3] = CH_PRod
	cpiChan[4] = CH_rol
Read #1,3;CNAME$;
READ #1,3,172;D5 ! system date YYMMDD
Read #1,0,120;ARMTH;
Read #1,51,74;BOYMONTH;
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
U5$ = Msc$(3)
Read #1,3,164;D8$[1,8];
mat read #1,115,60;custom_customer$; ! ALT
custom_customer$=RTrim$(UCase$(custom_customer$))
if custom_customer$="GE"
	armonth=armth
	if armth=1 
		let armth=12
		else
		let armth=armth-1
	endif
endif
let bline$="=",bline$
If Err 0 Let J8 = Spc(8)
J8 = 0 \  N = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
L9 = 60 \ If J8 Let L9 = 21
Clear CRChan[] ! used by prdcustrank
Let CRChan[0]=ch_prod  ! DO NOT CHANGE CRCHAN[] ELSEWHERE!
!
TOTCALC=1 ! calculate whse tot reorder - 1=Y, 2=N (in case customers want different things)
! if =1 - on the WH:TOT line reorder qty calc'd from totals
! if <>1 - the reorder qty is just the total of previous wh reorder qtys
!
clear whse[]
! call dxsave(0,"tmp/cpi393pin.txt!")
!

!
!!!! dx add xport reporting code
call dxget("I0",tmp$) \ BUYER=tmp$  ! buyer number
call dxget("I1",tmp$) \ SVEND = tmp$ ! starting vendor
call dxget("I2",tmp$) \ if tmp$="" let EVEND=999999 else EVEND = tmp$ ! ending vendor
call dxget("I3",tmp$) \ ALLPRD = tmp$ ! was "050107"
call dxget("I4",tmp$) \ if tmp$="" let WHSE[1] = 1;Whse=1 !  else WHSE = tmp$ ! was "051807"
iF RTRIM$(TMP$)<>"" ! entered a whse or more
	X = 1                                                                     
	NextINWh: !  
	x$="";Fld=1
	X2 = 0 \ Let X$ = tmp$ To "," : X2 
	if rtrim$(x$)="" goto exitInwh:
	IF LEN(X$)>0 AND LEN(X$)<3
		J1=X$
		IF J1>0 AND J1<=D9[5] ! 99
			if whse[j1]=0 let Whse=whse+1 ! show that whses selected
			Whse[j1]=1 ! selected the whse
		Endif
	endif                                           
    If X2 Let tmp$ = tmp$[X2 + 1]
	if x2 Goto NextInWh                
	ExitInWh: !
Endif
call dxget("I5",UNIT$) \ UnitType = UNIT$
call dxget("I6",tmp$) \ COSTNO = tmp$
call dxget("I7",tmp$) \ if tmp$="" let NUMMTHS = 12 else NUMMTHS = tmp$ ! was "051807"
call dxget("I8",tmp$) \ CALEND = tmp$
call dxget("VPB",tmp$) \ pbvc=0 \ if tmp$<>"" let pbvc=1			! page break on vendor
call dxget("DTSUM",tmp$) \ DTL=1 \ if tmp$="S" let DTL=0
call dxget("MWCP",tmp$) \ mwcp=0 \ if tmp$<>"" let mwcp=1 ! multi-whse condensed print?
call dxget("TOP2",tmp$) \ let top2c=0 \ if tmp$<>"" let top2c=1
call dxget("PTREQ",tmp$) \ trreq=0 \ if tmp$<>"" let trreq=1 ! print transfer requests
call dxget("INCARB",tmp$) \ incarb=0 \ if tmp$="Y" let incarb=1 ! include calc source 5 arbitrary
call dxget("AVLBR",tmp$) \ avlinbr=0 \ if tmp$="Y" let avlinbr=1 ! show available in browser list
if not(J8) let avlinbr=0 ! not to browser - no option
!!!! dx end
!
If P9$[33,33] <> "Y" Let WHSE = 1
If D9[5] = 1 Let WHSE = 1;whse[1]=1 ! just the one
If P9$[33,33] = "Y" Let WHDETL = 1 else WHDETL = 0

condensedFormat = 0
if whse>1 and WHDETL and mwcp let condensedFormat = 1
!
if BUYER < -1 Or BUYER > 999  let e$="Invalid buyer number, must be -1 for none, 0 for all or from 1 to 999" \ error 10000
!
if SVEND<0 or SVEND>999999 let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if SVEND>EVEND or EVEND>999999 let e$="Invalid ending vendor, must be between starting vendor vendor and 999999!" \ error 10000
!
! whse now means number of whses selected!
! if WHSE < 1 or WHSE > D9[5] let e$="Invalid warehouse, must be between 1 and 99!" \ error 10000
if whse=1 let dtl=1 ! one whse is detail
if condensedformat let top2c=0
if not(condensedformat) let trreq=0 ! per specs - no mw condensed - no trans req
!
If NUMMTHS < 1 Or NUMMTHS > 24  let e$="Invalid number of months for avg Month usage, must be between 1 and 24!" \ error 10000
!
U5$ = " ",U5$
If UnitType = 1 Let U5$ = "IN STOCKING UNITS "
If UnitType = 2 Let U5$ = "IN SELLING UNITS "
If UnitType = 3 Let U5$ = "IN PURCHASING UNITS "
If UnitType = 4 Let U5$ = "IN COSTING UNITS "
If UnitType = 5 Let U5$ = "IN PRICING UNITS "
If UnitType = 6 Let U5$ = "IN PRODUCTION UNITS "
UnitType = UnitType + 7
!
D1$ = " ",D1$
If COSTNO = 1 Let D1$ = "BASE"
If COSTNO = 2 Let D1$ = "PO"
If COSTNO = 3 Let D1$ = "NET PO"
If COSTNO = 4 Let D1$ = "AVG."
If COSTNO = 5 Let D1$ = "LOAD"
If COSTNO = 6 Let D1$ = "REDI"
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"cpi393p",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
!
GoTo STRTSORT
HeadXML:
If J8
	tmp$=""
	If BUYER <> -1 tmp$="BUYER",fdel$ !\ tmp$=tmp$,"BUYER NAME",fdel$
	tmp$=tmp$,"VENDOR",fdel$
	tmp$=tmp$,"VENDOR NAME",fdel$
	!tmp$=tmp$,"REVIEW CYCLE",fdel$
	tmp$=tmp$,"ITEM CODE",fdel$
	tmp$=tmp$,"DESCRIPTION",fdel$
	tmp$=tmp$,"DESCRIPTION2",fdel$
	IF custom_customer$="CAMPBELL"
		tmp$=tmp$,"PROD NOTE 1",fdel$
	Else
		!tmp$=tmp$,"PACK SIZE",fdel$
		tmp$=tmp$,"CONTRACT",fdel$ ! cpi - want contract not pack
		tmp$=tmp$,"# CONT",fdel$ ! number of contracts - may be >1?
	endif
	tmp$=tmp$,"VENDOR ITEM",fdel$
	If COSTNO tmp$=tmp$,D1$," COST",fdel$
	tmp$=tmp$,"UM",fdel$
	tmp$=tmp$,"ON HAND",fdel$
	tmp$=tmp$,"ON SO",fdel$
	tmp$=tmp$,"ON PO +TRS IN",fdel$
	tmp$=tmp$,"ON BO",fdel$
	if avlinbr
		tmp$=tmp$,"AVAILABLE",fdel$
	endif
	tmp$=tmp$,"AMU ",Str$(NUMMTHS)," MTHS",fdel$
	!tmp$=tmp$,"SUGGESTED",fdel$
	tmp$=tmp$,"SUGGESTED REORDER",fdel$
	tmp$=tmp$,"WT.",fdel$
	tmp$=tmp$,"CUBE",fdel$
	If WHDETL tmp$=tmp$,"WH",fdel$
	If CALEND tmp$=tmp$,"AR",fdel$
	! tmp$=tmp$,"TYPE",fdel$
	! If Not(CALEND) tmp$=tmp$,MTHH$[1,3],fdel$ Else tmp$=tmp$,MTHH$[1,3],fdel$
	for x = 0 to 1
		if x = 0
			If Not(CALEND) tmp1$ = "C12 " Else tmp1$ = "CYR "
		else
			If Not(CALEND) tmp1$ = "P12 " Else tmp1$ = "LAS "
		end if
		For I = 1 to 35
			tmp$=tmp$,tmp1$,MTHH$[I,I+2],fdel$
			I = I+2
		Next I
	next x
	tmp$=tmp$,"MIN/MAX",fdel$
	if p61$[111,111]="Y" let tmp$=tmp$,"CPI HOLD",fdel$
	if trreq let tmp$=tmp$,"TRNSREQ",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	head = 1
end if
RETURN
!
STRTSORT: Rem SORT BY BUYER/VENDOR/Prod/whse
!!-!! Print @0,21;'CE';@1,21;"SORTING PLEASE WAIT"; \ Signal 3,0
K9$ = " ",K9$
!
CLRSORT_LOOP: Rem "Clear sort file
Search #CH_SORT,3,1;K9$,R1,E 
If E = 2 Goto CLRSORT_DONE
Search #CH_SORT,5,1;K9$,R1,E 
If E Let e$ = "syserrorfile serpcpi_393p sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
Goto CLRSORT_LOOP
!
CLRSORT_DONE: Rem "okay now sort
K1$ = " ",K1$
PRODFLE_LOOP: Rem "thru Product File
Search #CH_PROD,3,1;K1$,R1,E 
If E = 2 Goto SORT_DONE
Mat Read #CH_PROD,R1;D$;
Mat Read #CH_PROD,R1,256;A;
Mat Read #CH_PROD,R1,156;B;
Mat Read #ch_prod,r1,684;pruda$;
chk$=" ",chk$
chk$[1,22]="!!!!!!!!!!"+k1$[1,12]  ! for marking prod that should print
! changed so does all whses selected (not just a single whse)
For Whs=1 to 99
  if whse[whs] ! selected it
	 
	For X = 0 To 9 \ W2[X] = 0 \ Next X
	K18$ = " ",K18$;K18$[1,12] = K1$[1,12]
	K18$[13] = WHS Using "##"
	Gosub GET_PRDWHSE \ Goto BypWhseSort ! PRODFLE_LOOP 
	REC = R9
	If Not(W2[3]) Let W2[3] = B[24]
	If W0[0] If W0[0] = 1 Goto BypWhseSort ! PRODFLE_LOOP
	If W2[3] < SVEND Or W2[3] > EVEND Goto BypWhseSort ! PRODFLE_LOOP
	If BUYER > 0 And BUYER <> W1[2] Goto BypWhseSort ! PRODFLE_LOOP
	! check if cpi contract NOW!
	cpid.ContractNumber=0;contracts = 0
	gosub getcpidet
	!if cpid.ContractNumber=0 goto BypWhseSort ! is NOT a GOT TO HAVE
	! If W1[0] <> WHSE Goto BypWhseSort ! PRODFLE_LOOP
	K9$ = " ",K9$ \ If BUYER <> -1 Let K9$[1,4] = W1[2] Using "####"
	K9$[5,10] = W2[3] Using "######"
	K9$[11] = K18$[1,14]
	Search #CH_SORT,4,1;K9$,R1,E !!-!! \ If E Gosub ERR_SEARCH
	If E Let e$ = "syserrorfile serpcpi_393p sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
	gosub check_if_print
	K1$=" ",K1$ \ K1$[1,12]=K9$[11,22]
	BypWhseSort: ! not within selections
   Endif ! of whse selected
Next Whs
Goto PRODFLE_LOOP
!
SORT_DONE: Rem Sort Done! BEGIN
If CALEND 
  Let MONTH_[1] = 1;MONTH_[2] = 0
end if
! 
If Not(CALEND) 
  Let MONTH_[1] = 1;MONTH_[2] = 1
end if
! 
Call UTMonths(e$,MONTH_[],MTH$,BOYMONTH) ! set up month headers
!
If CALEND Let MTHH$ = MTH$
If Not(CALEND)
  For I = 1 To 12
    MTH = ARMTH - I \ If MTH < 0 Let MTH = MTH + 12
    MTHH$[(I - 1) * 3 + 1] = MTH$[MTH * 3 + 1,MTH * 3 + 3]
  Next I
End If 
!
L = 99 \ P = 0
!!-!! Print @0,22;'CE';"PRINTING PLEASE WAIT" \ Signal 3,0
!!-!! If J8 !!-!! Print 'CS'
! - Signal 3,0
!!-!! ERR_ESCAPEIf Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$;whsep=0;whsel=0
chk$=" ",chk$
VEND = -999;BUYR = -1
If NUMMTHS <= 0 Let NUMMTHS = 12
If NUMMTHS > 24 Let NUMMTHS = 24
!
SORTFLE_LOOP: Rem "Loop thru Sorted Info
	Search #CH_SORT,3,1;K1$,R1,E \ If E = 2 Goto SRTLOOP_DONE
	!!-!! If E Gosub ERR_SEARCH
	if k1$[11,22]<>chk$[11,22] then chk$=" ",chk$
	if chk$[1,10]<>"!!!!!!!!!!"
		chk$[1,22]="!!!!!!!!!!"+k1$[11,22]
		search #ch_sort,2,1;chk$,chkrec,e
		if e=0 
			okprintflg=1
		else
			okprintflg=0
		endif
	endif
	if okprintflg=0 
		goto sortfle_loop
	endif
	If Whse>1 or Not(WHDETL) ! p9$[33,33]="N" ! no whse screen?
		If VEND = -999 And BUYR = -1 Let PROD$ = K1$[11,22]
		X2 = K1$[1,4] \ If X2 <> BUYR And BUYR <> -1 Let PROD$ = " ",PROD$
		X2 = K1$[5,10] \ If X2 <> VEND And VEND <> -999 Let PROD$ = " ",PROD$
		If PROD$[1,12] <> K1$[11,22]
			if whse>1 let SubT=1
			Gosub PRNT_PRDDETL ! subtotal
		End If 
		PROD$ = K1$[11,22]
	End If 
	X2 = K1$[1,4] \ If X2 <> BUYR Let L = 999
	X2 = K1$[5,10]
	If X2 <> VEND
		If pbvc ! page break on vend chg=Y
			Let L = 999
		Endif
		newvend=1
		if vend=-999 let newvend=0
	Else
		newvend=0
	Endif
	BUYR = K1$[1,4];VEND = K1$[5,10]
	Mat Read #CH_PROD,R1;D$;
	Mat Read #CH_PROD,R1,156;B;
	Mat Read #CH_PROD,R1,256;A;
	Mat Read #CH_PROD,R1,460;A1;
	Mat Read #CH_PROD,R1,512;PFU1;
	Mat Read #CH_PROD,R1,554;PFU2;
	Mat Read #CH_PROD,R1,596;PRPARC;
	Mat Read #CH_PROD,R1,894;PR_C4;
	Mat Read #CH_PROD,R1,938;PF_LOAD2;
	Mat Read #CH_PROD,R1,944;PR_A2$;
	Mat Read #ch_prod,r1,684;pruda$;
	COST = 0
	K2$ = " ",K2$;K2$ = K1$[11]
	whs = k1$[23,24]
	Gosub SRCH_PRDWHSE \ Goto SORTFLE_LOOP
	WHS = W1[0]
	If Not(W2[3]) Let W2[3] = B[24]
	Gosub GET_COST
	PROD_REC = R1 \ Gosub GET_TRANSQTY
	Gosub GET_BCKORD
	! If W0[0] = 2 And (A[3] <= 0 And QTYBO <= 0) Goto SORTFLE_LOOP
	If CALEND Gosub CONV_MTHS
	Gosub CONVERT_STUFF
	AMU = 0
	!
	For I = 0 To NUMMTHS - 1
		If Not(CALEND)
			MTH = ARMTH - I \ If MTH < 1 Let MTH = MTH + 12
			If I > 11
				MTH = (ARMTH - I) \ If MTH <= -12 Let MTH = MTH + 12
				MTH = MTH + 25
			End If 
			If W9[MTH] Let AMU = AMU + W9[MTH] Else Let AMU = AMU + W5[MTH]
		Else 
			If I < 12
				If W9[I + 1] Let AMU = AMU + W9[I + 1] Else Let AMU = AMU + W5[I + 1]
			Else 
				If W9[I + 2] Let AMU = AMU + W9[I + 2] Else Let AMU = AMU + W5[I + 2]
			End If 
		End If 
	Next I

	If WHDETL ! using whse screen (p9$[33,33]="Y")
		DAMU = AMU / NUMMTHS
		Q3 = A[0] - (A[3] + QTYBO) + A[2] + TRANSIN_QTY
		! If ALLPRD = 2 If W7[12] = 6 If Q3 > B[9] Or (B[9] = 0 And Q3 = 0) Goto SORTFLE_LOOP
		! If ALLPRD = 2
			!  If W7[12] <> 6 Goto SORTFLE_LOOP
			!  If Q3 > B[9] Goto SORTFLE_LOOP
			!  If B[9] = 0 And Q3 = 0 Goto SORTFLE_LOOP
		! End If
		Gosub GET_WGTCUBE
		if custom_customer$="SOUTHJERSEY" or custom_customer$="ACME"
			GOSUB GET_ROMULT: ! calculate the reorder multiple amount-cct146070-custom  
		Endif
		if newvend and j8=0
			If L+8<L9 ! if makes over max lines - just do tof
				gosub get_vendor
				print #0;""
				Print #0; Using "######"; Tab 2;"VENDOR: ";W2[3]; Tab 20;VEND$
				Print #0;""
				newvend=0
				L=L+3
			Else
				Let l=999
			Endif
		Endif
		Gosub PRNT_HEDNG
		If DTL 
			cpiflag=0
			if p61$[111,111]="Y" ! cpi
				let cprod$=d$[140,151]
				call cpionhold(e$,intco,cpiflag,CProd$,CustNo,CustName$)
				cpid.ContractNumber=0;contracts = 0
				gosub getcpidet
				!if cpid.ContractNumber=0 goto sortfle_loop ! is NOT a GOT TO HAVE
			endif
			let subT=0
			Gosub PRNT_DETL
		Endif
	End If 
	Whsel=whsel+1 ! it made it thru
	Gosub ADDTOTALS
Goto SORTFLE_LOOP
!
ADDTOTALS: Rem TOTALS CALC
T9[1] = T9[1] + TRANSIN_QTY
T9[2] = T9[2] + A[0]
T9[3] = T9[3] + A[3]
T9[4] = T9[4] + A[2]
T9[5] = T9[5] + QTYBO
T9[6] = T9[6] + AMU
For I = 7 To 18
  If W9[I - 6] Let T9[I] = T9[I] + W9[I - 6] Else Let T9[I] = T9[I] + W5[I - 6]
Next I
For I = 19 To 30
  If W9[I - 5] Let T9[I] = T9[I] + W9[I - 5] Else Let T9[I] = T9[I] + W5[I - 5]
Next I
LET T9[31] = t9[31] + B[9] ! Min
T9[32] = T9[32] + A1[1]
if t9[33]=0 let t9[33]=COST
! need to do calcs as on if Max>calc - sugg reorder
Q3 = A[0] - (A[3] + QTYBO) + A[2] + TRANSIN_QTY
if w7[12]<>5
If A1[1]>Q3 ! in case want sum of whse total
	LET T9[34]=T9[34]+FNU(A1[1] - Q3)
Endif
t9[35]=t9[35]+trreq_Qty
endif
if w3[12]=5
 t9[35]=t9[35]+w3[11]
 endif
Return 
!
GET_COST: Rem "Get the Report Cost
If COSTNO = 0 Return 
If COSTNO = 1 Let COST = PR_C4[4]
If COSTNO = 2 Let COST = B[10]
If COSTNO = 3 Let COST = PRPARC[2]
If COSTNO = 4 Let COST = B[21]
If COSTNO = 5 Let COST = B[8]
If COSTNO = 6 Let COST = PF_LOAD2
If P9$[32,32] = "Y"
  If COSTNO = 1 And W3[18] > 0 Let COST = W3[18]
  If COSTNO = 2 And W3[16] > 0 Let COST = W3[16]
  If COSTNO = 3 And WHMISC[2] > 0 Let COST = WHMISC[2]
  If COSTNO = 4 And W3[15] > 0 Let COST = W3[15]
  If COSTNO = 5 And W3[17] > 0 Let COST = W3[17]
  If COSTNO = 6 And W3[14] > 0 Let COST = W3[14]
End If 
Return 
!
CONV_MTHS: Rem "================= adjust this year buckets for fiscal year
For I = 0 To 25 \ CW5[I] = 0;CW9[I] = 0 \ Next I
X7 = BOYMONTH
For I = 1 To 12
  CW5[I] = W5[X7];CW9[I] = W9[X7]
  If X7 = ARMTH Let I = 13
  X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
X7 = BOYMONTH;X8 = 0
For I = 1 To 12
  If Not(X8) Let CW5[I + 13] = W5[X7 + 13] Else Let CW5[I + 13] = W5[X7]
  If Not(X8) Let CW9[I + 13] = W9[X7 + 13] Else Let CW9[I + 13] = W9[X7]
  If I If X7 = ARMTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
For I = 0 To 25 \ W5[I] = CW5[I];W9[I] = CW9[I] \ Next I
Return 
!
PRNT_PRDDETL: Rem "!!-!! Print Product Totals
TRANSIN_QTY = T9[1]
A[0] = T9[2]
A[3] = T9[3]
A[2] = T9[4];QTYBO = T9[5]
AMU = T9[6] \ DAMU = FNR(AMU / NUMMTHS)
For I = 1 To 12 \ W5[I] = T9[I + 6] \ Next I
For I = 14 To 25 \ W5[I] = T9[I + 5] \ Next I
clear w9[] ! just w5[] set
B[9] = T9[31];A1[1] = T9[32]
Cost=t9[33] ! t9[34]=sugg reorder!!!
trreq_qty=t9[35]
Q3 = A[0] - (A[3] + QTYBO) + A[2] + TRANSIN_QTY
if DTL and whse>1 and whsep<2 
if Not(condensedFormat) and whsep > 0
	print #0;bline$
	print #0;" "
	Let L=L+2
end if
goto Detl_done ! only 1 - no subtot
end if
if not(dtl) and whse>1 and whsel<1 goto detl_done ! none select
If not(subt) or Not(WHDETL) ! on total - how d
	If ALLPRD = 2 
	if incarb
	If W7[12] = 6 or W7[12]=5
	If Q3 > B[9] Or (B[9] = 0 And Q3 = 0) Goto DETL_DONE
	Endif
	else
    If W7[12] = 6
	If Q3 > B[9] Or (B[9] = 0 And Q3 = 0) Goto DETL_DONE
	Endif
	endif
	Endif
Endif
Gosub GET_WGTCUBE
if custom_customer$="SOUTHJERSEY"
	GOSUB GET_ROMULT: ! calculate the reorder multiple amount-cct146070-custom  
Endif
if newvend and j8=0 and not(condensedFormat)
	  If L+8<L9 ! if makes over max lines - just do tof
		gosub get_vendor
		print #0;""
		Print #0; Using "######"; Tab 2;"VENDOR: ";W2[3]; Tab 20;VEND$
		Print #0;""
		newvend=0
		L=L+3
	  Else
		Let l=999
	  Endif
  Endif
Gosub PRNT_HEDNG
cpiflag=0
if p61$[111,111]="Y" ! cpi
	let cprod$=d$[140,151]
	call cpionhold(e$,intco,cpiflag,CProd$,CustNo,CustName$)
	cpid.ContractNumber=0;contracts = 0
	gosub getcpidet
	! if cpid.ContractNumber=0 goto detl_Done ! NOT a GOT TO HAVE
endif
Let SUBT=1
Gosub PRNT_DETL
!
DETL_DONE: Rem "Detail Printed
For I = 0 To 40
  T9[I] = 0
Next I
whsep=0;Subt=0;whsel=0
Return 
!
GET_BCKORD: Rem "============================================= FIND QTY B/O
QTYBO = 0
K16$ = " ",K16$;K16$[1,12] = D$[140,151]
K16$[13,14] = WHS Using "##"
PRDLOT_LOOP: Rem "loop thru all for Prod/Whse
Search #CH_PRDLOT,3,4;K16$,R16,E !!-!! \ If E > 2 Gosub ERR_SEARCH
If E Return 
If K16$[1,12] <> D$[140,151] Return 
X2 = K16$[13,14]
If X2 <> WHS Return 
Mat Read #CH_PRDLOT,R16,82;PLP3;
QTYBO = QTYBO + PLP3[4]
Goto PRDLOT_LOOP
!
GET_WGTCUBE: Rem Calculate Weight and Cubes
FACTORS = 0
For X1 = 0 To 6
  If PFU1[UnitType] = PFU1[X1 + 1]
    FACTORS = PFU2[X1]
    Goto END_FACT
  End If 
Next X1
!
END_FACT: Rem
If Not(FACTORS) Let FACTORS = 1
If A[5] Let WGT = (A[6] / A[5]) * FACTORS Else Let WGT = A[6]
If A1[3] Let CUBES = (B[23] / A1[3]) * FACTORS Else Let CUBES = ORD_L6[2]
Return

! "GET_ROMULT" is custom for SOUTH JERSEY PAPER - cct146070
GET_ROMULT: !calculate the reorder multiple based on vendor um / purchase um
LET PFACTOR = 1 \ LET VFACTOR = 1
FOR X1=0 TO 6
	IF PFU1[10]=PFU1[X1+1] LET PFACTOR=PFU2[X1] !factor for purchase um
	IF PFU1[20]=PFU1[X1+1] LET VFACTOR=PFU2[X1] !factor for vendor um   
NEXT X1
LET ROMULT=VFACTOR/PFACTOR
RETURN
GET_PRODNOTE: ! custom for Campbell print the fist line in the product support notes
K11$=" ",k11$
M1$=" ",M1$
K11$[1,12]=D$[140,151] 
search #CH_PRDNT,3,1;k11$,rec_prdnt,e
if E goto PRDNTEXIT
if k11$[1,12]=D$[140,151] 
MAT READ #CH_PRDNT,REC_PRDNT,12;M1$;
ENDIF
prdntexit: ! done 
Return
!
getcpidet: ! get the cpi contract # for product
! we know all that's needed to get the first valid/open cpi contract?
let cprod$=d$[140,151] ! just in case
kcpid$=" ",kcpid$
kcpid$=cprod$+b$
cpid_loop: ! loop til find one? or prod changes
search #ch_cpid,3,2;kcpid$,rcpid,e  \ if e return
if kcpid$[1,12]<>cprod$[1,12] return ! diff prod
read record #ch_cpid,rcpid,0;cpid.;
if not(cpid.ResStock) goto SkipThisContractLine ! not a reserve stock contract 
if not(cpid.PurWhse) goto SkipThisContractLine ! no purchsing wh??
if cpid.PurWHse<>W1[0] goto SkipThisContractLine ! not on curr whse
K_sd$ = Kcpid$ ! key should match
R_sd = filegetspecprice(e$,CH_SD,"=",2,K_sd$,sd.)
if R_sd <= 0 goto SkipThisContractLine ! shouldn't happen
if sd.CancelDate and sd.CancelDate < D5 goto SkipThisContractLine ! not in effect any more
tmpContractAvail = CPIQtyAvail(e$,cpid.ContractNumber, cpid.ProductID$, dummy, cpiChan[], 0)
if tmpContractAvail <= 0 goto SkipThisContractLine ! reserve already depleted
whavail=w3[0]-w3[2]
Gosub TotalAllContracts ! ! contractAvail for all contracts set in TotalAllContracts sub
if contractAvail <= whAvail + TRANSIN_QTY + w3[1] goto SkipThisContractLine 
goto gcpiddone ! we got one (first one is the one we use!!!)
SkipThisContractLine: ! 
cpid.ContractNumber=0
goto cpid_loop
!
gcpiddone: ! got our cpi contract!
Return ! out
! 
TotalAllContracts: ! as it says?
	K_cpid2$ = " ",K_cpid2$
	K_cpid2$[1,12] = Kcpid$[1,12]
	contractAvail = 0 ! return in base units
	contracts = 0
	do
		R_cpid2 = filegetcpidet(e$,CH_CPID,">",2,K_cpid2$,cpid2.)
		if R_cpid2 <= 0 exit do
		if K_cpid2$[1,12] <> Kcpid$[1,12]  exit do
		if W1[0] <> cpid2.PurWhse goto SkipThisContractLine2
		K_sd2$ = K_cpid2$ ! key should match
		R_sd2 = filegetspecprice(e$,CH_SD,"=",2,K_sd2$,sd2.)
		if R_sd2 <= 0 goto SkipThisContractLine2 ! shouldn't happen
		if sd2.CancelDate and sd2.CancelDate < D5 goto SkipThisContractLine2 ! not in effect any more
		tmpContractAvail = CPIQtyAvail(e$,cpid2.ContractNumber, cpid2.ProductID$, dummy, cpiChan[], 0)
		! add to running total
		contractAvail=contractAvail+tmpContractAvail
		contracts = contracts + 1
		SkipThisContractLine2: !
	loop
Return
!
PRNT_DETL: Rem !!-!! Print LINE
gosub GET_PRODNOTE:
If J8 ! browser output
IniHead:
	if subt return ! don't want total lines for mult-wh on browser
	Gosub GET_VENDOR
	tmp$=""
	If BUYER <> -1 tmp$=BUYR Using "####",fdel$ !\ tmp$=tmp$,rtrim$(U5$[1,20]),fdel$
	tmp$=tmp$,W2[3] Using "######",fdel$
	tmp$=tmp$,rtrim$(VEND$),fdel$
	!tmp$=tmp$,Int(REVPER * 30)," DAYS",fdel$
	tmp$=tmp$,rtrim$(D$[140,151]),fdel$
	tmp$=tmp$,rtrim$(D$[9,38]),fdel$
	tmp$=tmp$,rtrim$(D$[63,92]),fdel$	!DESCRIPTION2
	IF custom_customer$="CAMPBELL"
		tmp$=tmp$,rtrim$(M1$[1,30]),fdel$    !PRODUCT SUPPORT NOTE 1
	ELSE
		!tmp$=tmp$,rtrim$(PR_A2$[13,25]),fdel$						!PACK SIZE
		tmp$=tmp$,Str$(cpid.ContractNumber),fdel$ ! now cpi.contract
		tmp$=tmp$,Str$(contracts),fdel$ ! no of contracts!
	ENDIF
	tmp$=tmp$,rtrim$(D$[93,112]),fdel$
	If COSTNO tmp$=tmp$,FNR(COST) Using "#####.##",fdel$
	tmp$=tmp$,SUNIT$[1,4],fdel$
	SMV=A[0] \ GOSUB SMARTMASK:
	tmp$=tmp$,A[0] Using SMASK$,fdel$
	SMV=A[3] \ GOSUB SMARTMASK:
	tmp$=tmp$,A[3] Using SMASK$,fdel$
	SMV=A[2] + TRANSIN_QTY \ GOSUB SMARTMASK:
	tmp$=tmp$,A[2] + TRANSIN_QTY Using SMASK$,fdel$
	SMV=QTYBO \ GOSUB SMARTMASK: ! WAS "AMV="??
	tmp$=tmp$,QTYBO Using SMASK$,fdel$
	if avlinbr
		qtyavl=A[0]-A[3]
		tmp$=tmp$,LTRIM$(qtyavl Using "----------#.##"),fdel$
	ENDIF
	tmp$=tmp$,DAMU Using "--------#.##",fdel$
	!tmp$=tmp$,"_____",fdel$
	if custom_customer$<>"UPCW"
		If not(subt) ! do calc's
			select case W7[12]
				case 6
					If A1[1] > Q3 tmp$=tmp$,FNU(A1[1] - Q3) Using "-------#",fdel$ else tmp$=tmp$," ",fdel$
				case 5
					tmp$=tmp$,FNU(W3[11]) Using "-------#",fdel$
				case else
					tmp$=tmp$," ",fdel$
			end select
		Else ! printing total
			IF TOTCALC=1 ! DO CALC
				If A1[1] > Q3
					tmp$=tmp$,FNU(A1[1] - Q3) Using "-------#",fdel$
				else
					tmp$=tmp$,"",fdel$
				end if
			else ! just sum total
				tmp$=tmp$,T9[34] Using "-------#",fdel$
			Endif
		Endif
	Else
		IF (not(subt) and A1[1]>Q3) or subt=1
		   !"cct#234637
		   LET RORDQTY=A1[1]-Q3
            if w7[12]=5 let rordqty=w3[11]
			rem if calc source 5 use set reorder qty
		   if subt 
			If totcalc<>1 ! want sum total
				let RORDQTY=T9[34] ! TOTALS
			Endif
		   Endif
		   LET CNVTU[0]=pfu1[UnitType]                   
		   LET CNVTU[1]=0         
		   LET CNVTU[2]=1                   
		   LET CNVTA=RORDQTY \ GOSUB CONVERT:  
		   LET baseqty=AMOUNT                  
		   LET CNVTU[0]=0             
		   LET CNVTU[1]=pfu1[20]         !"vendor order u/m                      
		   LET CNVTU[2]=1                      
		   LET CNVTA=baseQTY \ GOSUB CONVERT:  
		   LET rordqty=AMOUNT                  
		!   PRINT #0; USING "-------#"; TAB 101;fnu(rordqty);" ";runit$[1,4];
		   LET CNVTU[0]=pfu1[20]                                       
		   LET CNVTU[1]=0              
		   LET CNVTU[2]=1          
		   LET CNVTA=fnu(RORDQTY) \ GOSUB CONVERT:    
		   LET baseqty=AMOUNT     
		   LET CNVTU[0]=0                                    
		   LET CNVTU[1]=pfu1[UnitType]       
		   LET CNVTU[2]=1                                    
		   LET CNVTA=baseQTY \ GOSUB CONVERT: 
		   let pqty=amount
		   !print #0; tab 115;"(";
		   tmp$=tmp$, fnu(pqty) USING "-------#"," ",sunit$[1,4],fdel$ ! ;")"; 
		Else
			tmp$=tmp$," ",fdel$
		endif
	Endif
	If Fra(WGT) tmp$=tmp$,WGT Using "---#.##",fdel$
	If Not(Fra(WGT)) tmp$=tmp$,WGT Using "------#",fdel$
	If Fra(CUBES) tmp$=tmp$,CUBES Using "---#.##",fdel$
	If Not(Fra(CUBES)) tmp$=tmp$,CUBES Using "------#",fdel$
	If WHDETL ! using whse
		if not(Subt) tmp$=tmp$,Str$(W1[0]),fdel$
		If Subt tmp$=tmp$,"0",fdel$
	Endif
	If CALEND tmp$=tmp$,ARMTH,fdel$
	!
	For I = 0 To 11
		If Not(CALEND) Let MTH = ARMTH - I \ If MTH < 1 Let MTH = MTH + 12
		If CALEND Let MTH = I + 1
		If W9[MTH]
			tmp$=tmp$,W9[MTH] Using "---------#",fdel$
		Else 
			tmp$=tmp$,W5[MTH] Using "---------#",fdel$
		End If 
	Next I
	For I = 12 To 23
		If Not(CALEND)
			MTH = (ARMTH - I) \ If MTH <= -12 Let MTH = MTH + 12
			MTH = MTH + 25
		End If 
		If CALEND Let MTH = I + 2
		If W9[MTH]
			tmp$=tmp$,W9[MTH] Using "---------#",fdel$
		Else 
			tmp$=tmp$,W5[MTH] Using "---------#",fdel$
		End If 
	Next I
	tmp$=tmp$,A1[1] Using "----------#",fdel$
	if p61$[111,111]="Y"
		if cpiflag
			tmp$=tmp$,Str$(custno)," ",RTrim$(custname$),fdel$
		else
			tmp$=tmp$,"",fdel$
		Endif
	endif
	if trreq
		tmp$=tmp$,TRREQ_QTY Using "--------#",fdel$
	endif
	!
	call addtostr(e$,rstr$,tmp$+rdel$)
	if not(subt) let whsep=whsep+1
	Return 
end if


!
if not(condensedFormat)
	Print #0; Tab 0;D$[140,151]; Tab 12;D$[9,38]; ! Tab 43;PR_A2$[13,25];
	print #0; uSING "#####"; tab 43;cpid.ContractNumber;
	print #0; Using "####";tab 50;contracts; ! number of contracts
	If COSTNO Print #0; Using "#####.##"; Tab 57;FNR(COST);
	Print #0; Tab 66;SUNIT$[1,4];
	SMV=A[0] \ GOSUB SMARTMASK: ! ON HAND
	Print #0; Using smask$; Tab 70;A[0];
	SMV=A[3] \ GOSUB SMARTMASK: ! ON SALES ORDER
	Print #0; Using smask$; Tab 78;A[3];
	SMV=A[2] + TRANSIN_QTY \ GOSUB SMARTMASK:  ! ON PO + TRANSFER IN
	Print #0; Using smask$; Tab 86;A[2] + TRANSIN_QTY;
	smv=qtybo \ gosub smartmask: ! ON BO
	Print #0; Using smask$; Tab 94;QTYBO;
!	If DAMU<0
!		Print #0; Using "----#.##"; Tab 102;DAMU;
!	ELSE
!		Print #0; Using "#####.##"; Tab 102;DAMU;	
!	ENDIF

	smv=abs(damu) \ gosub smartmask:
	If DAMU<0
		smask1$="-"+smask$
	ELSE
		smask1$="#"+smask$	
	ENDIF
	print #0;using smask1$; tab 102;damu;
	Print #0; Tab 111;"_____";
	If Fra(WGT) Print #0; Using "---#.##"; Tab 116;WGT;
	If Not(Fra(WGT)) Print #0; Using "------#"; Tab 116;WGT;
	If Fra(CUBES) Print #0; Using "---#.##"; Tab 123;CUBES
	If Not(Fra(CUBES)) Print #0; Using "------#"; Tab 123;CUBES
	If WHDETL 
		if not(subt) Print #0; Tab 5;"WH:";Str$(W1[0]); ! detail
		If subt Print #0; Tab 5;"WH:TOT"; ! subtotal
	Endif
	Print #0; Tab 12;D$[63,92];
	Print #0; Tab 43;D$[93,112];
	IF custom_customer$="CAMPBELL"
	print #0; Tab 64;M1$[1,30];
	Endif
	if custom_customer$<>"UPCW"
		if custom_customer$="SOUTHJERSEY"
			PRINT #0;TAB 90;"[R/O MULT:";		! " ccct146070
			PRINT #0;USING "---#";TAB 101;ROMULT;TAB 106;PUNIT$;"]"; !cct146070-custom
		Endif
		if not(subt)
		    IF W7[12]=5
             Print #0; Using "-------#"; Tab 111;FNU(REORDQTY);
			 ELSE
			If A1[1] > Q3 Print #0; Using "-------#"; Tab 111;FNU(A1[1] - Q3);
			ENDIF
		Else ! wh totals
			If Totcalc=1 ! calc it
              IF W7[12]=5
             Print #0; Using "-------#"; Tab 111;FNU(REORDQTY);
			 ELSE
				If A1[1] > Q3 Print #0; Using "-------#"; Tab 111;FNU(A1[1] - Q3);
				endif
			Else ! just sum total
				If T9[34]>0 print #0; using "-------#"; Tab 111;FNU(T9[34]);
			Endif
		Endif
	Else
		IF (not(subt) and A1[1]>Q3) or subt=1
		!"cct#234637
		LET RORDQTY=A1[1]-Q3
		if w7[12]=5 let rordqty=w3[11]
		rem if calc source 5 use set reorder qty
		if subt
			if totcalc<>1 ! just sum ttl
				let RORDQTY=T9[34]
			Endif
		Endif
		LET CNVTU[0]=pfu1[UnitType]                   
		LET CNVTU[1]=0         
		LET CNVTU[2]=1                   
		LET CNVTA=RORDQTY \ GOSUB CONVERT:  
		LET baseqty=AMOUNT                  
		LET CNVTU[0]=0             
		LET CNVTU[1]=pfu1[20]         !"vendor order u/m                      
		LET CNVTU[2]=1                      
		LET CNVTA=baseQTY \ GOSUB CONVERT:  
		LET rordqty=AMOUNT                  
		!   PRINT #0; USING "-------#"; TAB 101;fnu(rordqty);" ";runit$[1,4];
		LET CNVTU[0]=pfu1[20]                                       
		LET CNVTU[1]=0              
		LET CNVTU[2]=1          
		LET CNVTA=fnu(RORDQTY) \ GOSUB CONVERT:    
		LET baseqty=AMOUNT     
		LET CNVTU[0]=0                                    
		LET CNVTU[1]=pfu1[UnitType]       
		LET CNVTU[2]=1                                    
		LET CNVTA=baseQTY \ GOSUB CONVERT: 
		let pqty=amount
		print #0; tab 115;"(";
		PRINT #0; USING "-------#";fnu(pqty);" ";sunit$[1,4];")"; 
		endif
	Endif
	Print #0;" "
	if p61$[111,111]="Y" and not(subt)
		if cpiflag
			Print #0; Tab 12;"CPI HOLD: Customer: ";Str$(custno);" ";RTrim$(custname$)
			let L=L+1
		Endif
	endif
	If CALEND Print #0; Tab 8;"AR=";ARMTH;
	IF CUSTOM_CUSTOMER$="CREST"
     Print #0; Tab 17;MTHH$[1,3];"    ";
	For W = 4 to 35
		Print #0;MTHH$[W,W+2];"    ";
		W = W + 2
	Next W
	ELSE
	Print #0; Tab 17;MTHH$[1,3];"     ";
	For W = 4 to 35
		Print #0;MTHH$[W,W+2];"     ";
		W = W + 2
	Next W
	ENDIF
	Print #0; Tab 100;"MIN/MAX"
	If Not(CALEND) Print #0; Tab 8;"C12"; Tab 13; Else Print #0; Tab 8;"CYR"; Tab 13;
	For I = 0 To 11
		If Not(CALEND) Let MTH = ARMTH - I \ If MTH < 1 Let MTH = MTH + 12
		If CALEND Let MTH = I + 1
		if custom_customer$="CREST" 
		REM TASK 51447 REPORT TO HARD TO READ WITH THE EXPANDED MASK BOOWHOO
			If W9[MTH]
			Print #0; Using "------#";W9[MTH];
			Else 
			If W5[MTH] Print #0; Using "------#";W5[MTH]; Else Print #0;"       ";
			End If 
	    ELSE
		If W9[MTH]
			Print #0; Using "-------#";W9[MTH];
		Else 
			If W5[MTH] Print #0; Using "-------#";W5[MTH]; Else Print #0;"        ";
		End If 
	ENDIF
	Next I
	IF CUSTOM_CUSTOMER$="CREST"
	Print #0; Using "-------#"; Tab 99;B[9];
	ELSE
	Print #0; Using "---------#"; Tab 99;B[9];
	ENDIF
	if custom_customer$="GPG" 
		print #0;tab 122;"[ ";pruda$[1,4];" ]";
	endif
	print #0;" "

	If Not(CALEND) Print #0; Tab 8;"P12"; Tab 13; Else Print #0; Tab 8;"LAS"; Tab 13;
	For I = 12 To 23
		If Not(CALEND)
			MTH = (ARMTH - I) \ If MTH <= -12 Let MTH = MTH + 12
			MTH = MTH + 25
		End If 
		If CALEND Let MTH = I + 2
		IF CUSTOM_CUSTOMER$="CREST"
			If W9[MTH]
			Print #0; Using "------#";W9[MTH];
			Else 
			If W5[MTH] Print #0; Using "------#";W5[MTH]; Else Print #0;"       ";
			End If 
		ELSE
			If W9[MTH]
			Print #0; Using "-------#";W9[MTH];
			Else 
			If W5[MTH] Print #0; Using "-------#";W5[MTH]; Else Print #0;"        ";
			End If 
	 End if
	Next I
	if custom_customer$="CREST"
    Print #0; Using "-------#"; Tab 99;A1[1]
	ELSE
	Print #0; Using "---------#"; Tab 99;A1[1]
	ENDIF
	Print #0;" "
	L = L + 6
	If top2c gosub gettop2cs ! top 2 customer sales
	if subt
	rem print a break line after product subtotal task 33184
	print #0;bline$
	print #0;" "
	let L=L+2
	end if
else ! condensedFormat
	if not(subt)
		Print #0; Str$(W1[0]); ! detail
	else
		Print #0; "0*"; ! subtotal
	end if
	Print #0; Tab 3;w2[3] using "######"; Tab 10;D$[140,151];
	tmp$ = "N" \ if w0[0] = 2 tmp$ = "O"
	Print #0; Tab 23;tmp$;TAB 25;D$[9,25];
	PRINT #0; TAB 43;SUNIT$[1,4];
	SMV=(A[0] - A[3]) \ GOSUB SMARTMASK: \ GOSUB AT_LEAST_1: ! AVAIL
	Print #0; Using smask$; Tab 47;SMV;
	SMV=A[2] \ GOSUB SMARTMASK: \ GOSUB AT_LEAST_1:  ! ON PO
	Print #0; Using smask$; Tab 54;SMV;
	smv=qtybo \ gosub smartmask: \ GOSUB AT_LEAST_1: ! ON BO
	Print #0; Using smask$; Tab 61;SMV;
	SMV=TRANSIN_QTY \ GOSUB SMARTMASK: \ GOSUB AT_LEAST_1: ! TRANSFER IN
	Print #0; Using smask$; Tab 68;SMV;
	if trreq
		SMV=TRREQ_QTY \ GOSUB SMARTMASK: \ GOSUB AT_LEAST_1: ! TRANSFER REQ IN/out
		Print #0; Using smask$; Tab 74;SMV; ! shoves min/max/reord over 7
		strtmnth=3 ! print only 4 not 5 months
	else
		strtmnth=4 ! print all 5 months
	endif
	Print #0; Using "------#"; Tab 75;B[9]; ! MIN
	Print #0; Using "------#"; Tab 82;A1[1]; ! MAX
	Print #0; Using "------#"; Tab 89;REORDQTY; ! MAX
	FOR I = strtmnth TO 0 STEP -1
		If Not(CALEND) Let MTH = ARMTH - (I) \ If MTH < 1 Let MTH = MTH + 12
		If CALEND Let MTH = I + 1 ! was +2 & (I+1) above
		If W9[MTH]
			SMV = W9[MTH] \ gosub smartmask: \ GOSUB AT_LEAST_1:
			Print #0; Using smask$; TAB (96+((4-i)*7));SMV;
		Else
			SMV = W5[MTH] \ gosub smartmask: \ GOSUB AT_LEAST_1:
			! If SMV Print #0; Using "------#"; TAB (96+((4-I)*7)); SMV; Else Print #0;TAB (96+((4-I)*7));"       ";
			Print #0; SMV Using smask$; TAB (96+((4-I)*7));
		End If
	NEXT I
	Print #0;""
	if p61$[111,111]="Y" and not(subt)
		if cpiflag
			Print #0; Tab 10;"CPI HOLD: Customer: ";Str$(custno);" ";RTrim$(custname$)
			let L=L+1
		Endif
	endif
	L = L + 1
	if subt
		print #0;""
		L = L + 1
	end if
end if
if not(subt) let whsep=whsep+1
Return 
!
PRNT_HEDNG: Rem HEADING ROUTINE

If J8 
	If head=0 Gosub HeadXML
	RETURN
end if
!
if condensedFormat
	If L < L9 Return 
else
	If L + 5 < L9 Return 
end if
If P <> 0
  If J8
    !!-!! Input "\15\PRESS <CR> TO CONTINUE "J$
    !!-!! Print 'CS'
  End If 
  Print #0;"\14\";
End If 
P = P + 1
Gosub GET_VENDOR
Print #0;" - CPI393P - ";Msc$(3); Tab 52;CNAME$
Print #0; Tab 2;"DATE: ";D8$;
Print #0; Tab 44;"C P I  M I N  /  M A X   P U R C H A S E   R E P O R T ";
! Print #0; Tab 106;"WAREHOUSE ";Str$(WHSE);"/";
Print #0; Tab 119;"PAGE";P
If BUYER <> -1 Print #0; Using "####"; Tab 2;"BUYER: ";BUYR;
Print #0; Tab 50;U5$[1,20];
If ALLPRD = 1 Print #0; Tab 72;"ALL PRODUCTS "; Else Print #0; Tab 72;"PRODUCTS BELOW MIN. ";
If Whse<2 
	Print #0; Tab 106;"WAREHOUSE "; ! Str$(WHSE)
Else
	print #0; Tab 100;"WAREHOUSES ";
Endif
	for x=1 to 99
		if whse[x] print #0;Str$(X);" ";
	next x
	Print #0;""

if pbvc
	Print #0; Using "######"; Tab 2;"VENDOR: ";W2[3]; Tab 20;VEND$;
Endif
Print #0; Tab 52;"REVIEW CYCLE=";Int(REVPER * 30);"DAYS"
Print #0;""
if not(condensedFormat)
	Print #0; Tab 0;"ITEM CODE";
	Print #0; Tab 12;"DESCRIPTION"; 
	Print #0; Tab 43;"CNTRT";
	print #0; tab 50;"# CTR";
	If COSTNO Print #0; Tab (Int(64 - (Len(D1$) / 2)));D1$;
	Print #0; Tab 74;"ON"; Tab 81;"ON SO"; Tab 89;"ON PO";
	Print #0; Tab 97;"ON BO"; Tab 106;"AMU"; Tab 110;"SUGGESTED  WT.  CUBE"
	Print #0; Tab 43;"VENDOR ITEM";
	If COSTNO Print #0; Tab 60;"COST";
	Print #0; Tab 67;"UM";
	Print #0; Tab 74;"HAND";
	Print #0; Tab 87;"+TRS IN"; Tab 103;Str$(NUMMTHS);" MTHS";
	Print #0; Tab 111;"REORDER ";
	Print #0;" "
else
	PRINT #0; Tab 18;"DNR Y/N/O";
	let smh=4 \ if trreq let smh=3
	FOR I = smh TO 0 STEP -1
		PRINT #0;TAB (99 + ((4-I)*7));
		if not(calend)
			if I<>0 Print #0;I;  Else Print #0;"CUR";
		Else
			Print #0;(I+1);
		endif
	NEXT I
	PRINT #0; ""
	Print #0; Tab 0;"WH";
	Print #0; Tab 3;"VEN CD"; Tab 10;"ITEM CODE";
	Print #0; Tab 23;"?";TAB 25;"ITEM DESCRIPTION";
	PRINT #0; TAB 43;"UOM";TAB 48;"QTY AV";TAB 55;"QTY PO";
	PRINT #0; TAB 62;"QTY BO";TAB 69;"QTY TR";
	if trreq 
		print #0;Tab 75;" TR REQ "; ! will shove min/max/req over 7
		let smh=1
	else
		let smh=0
	endif
	PRINT #0; TAB 76;"   MIN ";TAB 82;"   MAX ";TAB 89;" REQTY";
	
	FOR I = smh TO 4
		If not(calend)
			PRINT #0;TAB (97 + (I*7));
			if I<>4 Print #0;"MO AGO"; Else Print #0;"MONTH";
		Else
			Print #0;TAB (97 + (I*7));"MONTH";
		ENDIF
	NEXT I
	Print #0;" "
end if
L = 8
Print #0;""
if not(pbvc) and not(condensedFormat)
	Print #0; Using "######"; Tab 2;"VENDOR: ";W2[3]; Tab 20;VEND$
	Print #0;""
	l=l+2
	newvend=0
Endif
Return 
!
GET_VENDOR: Rem READ VENDOR
K5$ = " ",K5$
K5$ = W2[3] Using "######"
Search #CH_VEND,2,1;K5$,R5,E !!-!! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_VEND,R5,0;VEND$;
Else 
  VEND$ = " ",VEND$;VEND$ = "NOT ON FILE"
End If 
Search #CH_VTAG,2,1;K5$,R10,E !!-!! \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_VTAG,R10,206;M1;
Else 
  M1[8] = 0;M1[9] = 0;M1[10] = 0;M1[11] = 0
End If 
If P61$[63,63] = "Y" ! "vendor whse
  X = 2
  !Call "POVWMIN",W2[3],WHSE,M1[],X$,X
  Call "POVWMIN.dl4",W2[3],WHSE,M1[],X$,X,e$,rstr$,intCO 
End If 
REVPER = M1[11]
For X = 10 To 8 Step -1
  If Not(REVPER) If M1[X] Let REVPER = M1[X]
Next X
If REVPER < 0 Let REVPER = 0
Return 
!
READ_PRDWHSE: Rem READ WHPR FILE
Mat Read #CH_PRDWHSE,R8,0;W1$;
Mat Read #CH_PRDWHSE,R8,32;W1;
Mat Read #CH_PRDWHSE,R8,38;W2;
Mat Read #CH_PRDWHSE,R8,78;W3;
Mat Read #CH_PRDWHSE,R8,228;W5;
Mat Read #CH_PRDWHSE,R8,420;W0;
Mat Read #CH_PRDWHSE,R8,540;W9;
Mat Read #CH_PRDWHSE,R8,696;W7;
Mat Read #CH_PRDWHSE,R8,800;WHMISC;
Return 
!
SRTLOOP_DONE: Rem OUT OF HERE
If Whse>1 or Not(WHDETL) 
	If Whse>1 let subt=0
	Gosub PRNT_PRDDETL
Endif
If Not(J8) Goto OUTEND
!!-!! Input "\15\PRESS <CR> TO EXIT "J$
Goto OUTEND
!
CONVERT_STUFF: Rem "==================================== converts
CNVTU[0] = 0
CNVTU[1] = PFU1[UnitType]
CNVTU[2] = 1
CNVTA = B[9] \ Gosub CONVERT
B[9] = AMOUNT
CNVTA = A1[1] \ Gosub CONVERT
A1[1] = AMOUNT
CNVTA = w3[11] \ Gosub CONVERT
w3[11] = AMOUNT
CNVTA = QTYBO \ Gosub CONVERT \ QTYBO = AMOUNT
CNVTA = TRANSIN_QTY \ Gosub CONVERT \ TRANSIN_QTY = AMOUNT
cnvta=trreq_qty \ gosub convert \ trreq_qty=amount
For X = 0 To 3
  CNVTA = A[X] \ CNVTU[2] = 1 \ Gosub CONVERT
  A[X] = AMOUNT
Next X
For X = 0 To 25
  CNVTA = W5[X];CNVTU[2] = 1 \ Gosub CONVERT
  W5[X] = AMOUNT
  CNVTA = W9[X];CNVTU[2] = 1 \ Gosub CONVERT
  W9[X] = AMOUNT
Next X
CNVTA=W3[11];CNVTU[2] = 1 \ Gosub CONVERT \ REORDQTY = AMOUNT
CNVTA = COST;CNVTU[2] = 2 \ Gosub CONVERT
COST = AMOUNT
SUNIT$ = "ERR."
If PFU1[UnitType] = -1 Let SUNIT$ = "CWT "
If PFU1[UnitType] = -2 Let SUNIT$ = "LOT "
If PFU1[UnitType] = -3 Let SUNIT$ = "LB  "
If PFU1[UnitType] > 0 Mat Read #CH_CCODES,PFU1[UnitType],10;SUNIT$;
IF PFU1[20]=-1 LET RUNIT$="CWT "                              
IF PFU1[20]=-2 LET RUNIT$="LOT "                              
if pfu1[20]=-3 let Runit$="LB  "                              
IF PFU1[20]>0 MAT  READ #CH_CCodes,PFU1[20],10;RUNIT$;
IF PFU1[10] !if vendor code u/m, do conversion - cct146070-custom for sjp
	IF PFU1[10]=-1 LET PUNIT$="CWT "                         
	IF PFU1[10]=-2 LET PUNIT$="LOT "                         
	IF PFU1[10]>0 MAT  READ #CH_CCodes,PFU1[10],10;PUNIT$; 
ENDIF
Return 
!
GET_PRDWHSE: Rem "========================= read Single prodwhse record
K2$ = D$[140,151] \ K2$[13] = WHS Using "##"
SRCH_PRDWHSE: Rem "Start here in Printing Loop
Search #CH_PRDWHSE,2,1;K2$,R8,E !!-!! \ If E > 1 Gosub ERR_SEARCH
If E Return 
Gosub READ_PRDWHSE
If W0[0] If W0[0] = 1 Return 
A[3] = W3[2]
B[9] = W3[3]
A[0] = W3[0]
A1[1] = W3[4]
If W1$[13,15] <> "   " Let D$[93,112] = W1$[13,32]
A[2] = W3[1]
GOSUB GET_BCKORD
If W0[0] = 2 And (A[3] <= 0 And QTYBO <= 0) return
Return 1
!
GET_TRANSQTY: Rem ADD UP TRANSFER QTY
TRANSIN_QTY = 0;trreq_Qty=0
KTR$ = " ",KTR$;KTR$[1,6] = PROD_REC Using "######"
ORDLINE_LOOP: Rem "go thru all for ProdRec
Search #CH_ROL,3,2;KTR$,LINE_REC,E \ If E = 2 Return 
!!-!! If E Gosub ERR_SEARCH
X2 = KTR$[1,6]
If PROD_REC <> X2 Return 
Mat Read #CH_ROL,LINE_REC;ORD_L2;
Mat Read #CH_ROL,LINE_REC,8;ORD_L3;
MAT READ #CH_ROL,LINE_REC,16;ORD_L4;
Mat Read #CH_ROL,LINE_REC,56;ORD_L6;
Mat Read #CH_ROL,LINE_REC,168;ORD_L7;
Mat Read #CH_ROL,LINE_REC,260;ORD_S3;
If ORD_L3[0] <> 0 Goto ORDLINE_LOOP ! only inv items
! If ORD_L3[1] <> 1 Goto ORDLINE_LOOP ! only stkupdt - REQ=NO STK!
owht[0]=0
For X = 0 To 12
  ORD_H0[X] = 0;ORD_H5[X] = 0
Next X
For ST = 1 To 7
  K12$[1,2] = ST Using "##"
  K12$[3,8] = KTR$[7,12] ! ORD_L2[1] Using "######"
  Search #CH_ROH,2,1;K12$,R20,E !!-!! \ If E > 1 Gosub ERR_SEARCH
  If E Goto NXT_STATUS
  Mat Read #CH_ROH,R20,0;ORD_H0;
  Mat Read #CH_ROH,R20,104;ORD_H5;
  mat read #CH_ROH,R20,486;OWHT;
  IF ORD_L4[3]<1 OR ORD_L4[3]>99
	MAT READ #CH_ROH,R20,78;ORD_H4;
	LET ORD_L4[3]=ORD_H4[2]
  ENDIF
  Goto GOT_ORDER
NXT_STATUS: Rem "Next Ord Status (Up to 7)
Next ST
Goto ORDLINE_LOOP
!
GOT_ORDER: Rem "check if transfer / Whse #
If ORD_H5[7] <> 16 Goto ORDLINE_LOOP
if owht[0]=0 ! it's a request - whse from? if not same?
	if whs=ORD_H5[11] let trreq_Qty = trreq_Qty + (ORD_L7[2] - ORD_L7[0]) ! to
	if whs=ORD_L4[3] let trreq_Qty = trreq_Qty - (ORD_L7[2] - ORD_L7[0]) ! from
Endif
if owht[0]=1 and whs=ORD_h5[11] ! only approved and for to
	TRANSIN_QTY = TRANSIN_QTY + (ORD_L7[2] - ORD_L7[0])
Endif
! If ORD_H5[11] <> WHS Goto ORDLINE_LOOP
Goto ORDLINE_LOOP
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
!
CVTSTARTA: Goto CVTSTARTB !!-!! If Spc(4) > 1280 Goto CVTSTARTB
!
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!-!! \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!-!! \ Gosub ERR_SEARCH
Goto CVTDONE

CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!-!! \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}

check_if_print: rem see if there is some low enough to print
k1$=k9$
Mat Read #CH_PROD,R1;D$;
Mat Read #CH_PROD,R1,156;B;
Mat Read #CH_PROD,R1,256;A;
Mat Read #CH_PROD,R1,460;A1;
Mat Read #CH_PROD,R1,512;PFU1;
Mat Read #CH_PROD,R1,554;PFU2;
Mat Read #CH_PROD,R1,596;PRPARC;
Mat Read #CH_PROD,R1,894;PR_C4;
Mat Read #CH_PROD,R1,938;PF_LOAD2;
Mat Read #CH_PROD,R1,944;PR_A2$;
Mat Read #ch_prod,r1,684;pruda$;
COST = 0
K2$ = " ",K2$;K2$ = K1$[11]
Gosub SRCH_PRDWHSE \ return
WHS = W1[0]
If Not(W2[3]) Let W2[3] = B[24]
Gosub GET_COST
PROD_REC = R1 \ Gosub GET_TRANSQTY
Gosub GET_BCKORD
If W0[0] = 2 And (A[3] <= 0 And QTYBO <= 0) return
If CALEND Gosub CONV_MTHS
Gosub CONVERT_STUFF
AMU = 0
!
For I = 0 To NUMMTHS - 1
  If Not(CALEND)
    MTH = ARMTH - I \ If MTH < 1 Let MTH = MTH + 12
    If I > 11
      MTH = (ARMTH - I) \ If MTH <= -12 Let MTH = MTH + 12
      MTH = MTH + 25
    End If 
    If W9[MTH] Let AMU = AMU + W9[MTH] Else Let AMU = AMU + W5[MTH]
  Else 
    If I < 12
      If W9[I + 1] Let AMU = AMU + W9[I + 1] Else Let AMU = AMU + W5[I + 1]
    Else 
      If W9[I + 2] Let AMU = AMU + W9[I + 2] Else Let AMU = AMU + W5[I + 2]
    End If 
  End If 
Next I

If WHDETL ! using whse screen (p9$[33,33]="Y")
  DAMU = AMU / NUMMTHS
  Q3 = A[0] - (A[3] + QTYBO) + A[2] + TRANSIN_QTY
  If ALLPRD = 2 
  if incarb
  If W7[12] = 6 or w7[12]= 5
  If Q3 > B[9] Or (B[9] = 0 And Q3 = 0) return
  endif
  else
  If W7[12] = 6
  If Q3 > B[9] Or (B[9] = 0 And Q3 = 0) return
  endif
  endif
  ENDIF
  If ALLPRD = 2
      if incarb
	  If W7[12] <> 6 and w7[12]<> 5 return
	  else
       If W7[12] <> 6 return
	   endif
	  If Q3 > B[9] return
	  If B[9] = 0 And Q3 = 0 return
  End If
  Gosub GET_WGTCUBE
  if custom_customer$="SOUTHJERSEY"
	GOSUB GET_ROMULT: ! calculate the reorder multiple amount-cct146070-custom  
  Endif
End If 
search #ch_sort,4,1;chk$,r1,e 
If E>1 Let e$ = "syserrorfile serpcpi_393p sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
return

SMARTMASK: REM MASK BASED ON VALUE PRINTED
	IF condensedFormat
		if smv<=0
			SMASK$ = "------#"
		else
			smask$ = "#######"
		endif
	else
		IF FRA(SMV)=0
			SMASK$="-------#"
		ELSE
			if smv<=0
				IF ABS(SMV)<100000 SMASK$="------.#"
				IF ABS(SMV)<10000 AND FRA(SMV*10) SMASK$="-----.##"
			else
				IF ABS(SMV)<100000 SMASK$="######.#"
				IF ABS(SMV)<10000 AND FRA(SMV*10) SMASK$="#####.##"
			endif
		ENDIF
	end if
RETURN

AT_LEAST_1: ! if there is just a fractional amount, make it 1
	if smv = 0 return
	if abs(smv) < 1	smv = sgn(smv) * 1
RETURN
!
gettop2cs: ! task 27719 - want top 2 customers who bought product
! to make it easy - call a program that returns with all data
! custnum,custname,unitsls,prctoftotsls,lastsaledate
clear t2data$[]
clear rpwhse[]
! send chans,product,whse,prodrec,UM,textstrg
umrec=UnitType
if subt ! recap all whses
	for x=0 to 99 \ let rpwhse[x]=whse[x] \ next x
	let rpwhse[0]=0-rpwhse[0]
else
	let rpwhse[0]=w1[0]
endif
! note: CRChan[] sent originally with CH_PROD set only, returns with files needed open 
!       for use the next time call is made
call "prdcustrank.dl4",CRChan[],D$[140,151],rpwhse[],prod_rec,umrec,intco,calend,t2data$[]
! ok - now print what's sent (fixed length)
prtd1=0
tmp$=t2data$[1] ! line 1
If Trim$(tmp$)="" return  !no data
Print #0; Tab 5;"CUSTOMER: ";RTrim$(tmp$[1,10]);
Print #0; Tab 22;tmp$[11,40]; ! name
Print #0; Tab 54;"12 MO SALES"; TAB 66;TMP$[41,60];
Print #0; Tab 88;"% OF TOTAL"; TAB 99;TMP$[61,69];
print #0; Tab 109;"LAST SOLD"; TAB 119;TMP$[70]
L=L+1;prtd1=1
TMP$=T2DATA$[2] ! LINE 2
if trim$(tmp$)="" goto TT2Done ! no customer 2
Print #0; tab 15;rtrim$(tmp$[1,10]);
print #0; tab 22;tmp$[11,40];
print #0; tab 66;tmp$[41,60];
print #0; tab 99;tmp$[61,69];
print #0; tab 119;tmp$[70]
let l=l+1;prtd1=1
TT2Done: ! 
if prtd1
	print #0;""
	let l=l+1
Endif
Return
!
! moved from start to end
!-!! STRTHERE: Rem "Here's the start
!!-!! Window On 
!!-!! Print 'CS'
!!-!! Print @0,0;"PO393A";@30,0;"MIN / MAX PURCHASE REPORT"
!!-!! Print @0,2;'CE';"ENTER BUYER #,  -1: none,  <CR>: all,  E: exit  ";
!!-!! Input Len 16387;""X$ \ If X$ = "E" Goto OUTEND
!!-!! BUYER = X$ \ If BUYER = -1 Goto ENT_VENDRNG
!!-!! If BUYER < 0 Or BUYER > 999 Or Fra(BUYER) Goto STRTHERE
!!-!! ENT_VENDRNG: Rem "Enter Vendor Range
!!-!! Print @0,3;'CE';"ENTER STARTING VENDOR OR <CR> FOR FIRST ";
!!-!! Input Len 16390;""V$
!!-!! SVEND = V$
!!-!! Print @0,4;"ENTER ENDING VENDOR OR   <CR> FOR LAST ";
!!-!! Input Len 16390;""V$
!!-!! If V$ = "" Let V$ = "999999"
!!-!! EVEND = V$
!!-!! If SVEND > EVEND
!!-!!   Print @10,22;"INVALID RANGE "; \ Signal 3,30
!!-!!   Goto ENT_VENDRNG
!!-!! End If 
!!-!! ENT_PRODTYPE: Rem "Enter the Product Type
!!-!! Print @0,5;'CL';"PRINT  1: ALL PRODUCTS,  2: PRODUCTS BELOW MIN,   E: TO EXIT ";
!!-!! Input Len 16385;""V$ \ If V$ = "E" Goto OUTEND
!!-!! ALLPRD = V$
!!-!! If ALLPRD <> 1 And ALLPRD <> 2 Goto ENT_PRODTYPE
!!-!! ENT_WHSE: Rem CHECK WAREHOUSE
!!-!! If P9$[33,33] <> "Y" Let WHSE = 1 \ Goto ENT_UM
!!-!! WHSE = 1 \ If D9[5] = 1 Goto WHSE_DONE
!!-!! Print @0,6;"Enter warehouse to use (1-";Str$(D9[5]);
!!-!! Print ") or   E: to exit ";'CE';
!!-!! Input Len 16386;""X$ \ If X$ = "E" Goto OUTEND
!!-!! WHSE = X$
!!-!! If WHSE < 1 Or WHSE > D9[5] Print 'RB'; \ Goto ENT_WHSE
!!-!! WHSE_DONE: Rem "that's all
!!-!! WHDETL = 1
!!-!! ENT_UM: Rem SELECT UNIT
!!-!! Window Open @5,10; Size 70,12; Using " SELECT DEFAULT UNIT "
!!-!! REENTUM: Print 'CS'
!!-!! Print 
!!-!! Print Tab 5;" 1: STOCKING  "; Tab 45;" 4: COSTING"
!!-!! Print Tab 5;" 2: SELLING  "; Tab 45;" 5: PRICING"
!!-!! Print Tab 5;" 3: PURCHASING "
!!-!! Print 
!!-!! Print Tab 10;"Enter unit to show on report ";
!!-!! Input Len 16385;""UNIT$
!!-!! UNIT = UNIT$
!!-!! If UNIT < 1 Goto REENTUM
!!-!! If UNIT > 5 Goto REENTUM
!!-!! U5$ = " ",U5$
!!-!! If UNIT = 1 Let U5$ = "IN STOCKING UNITS "
!!-!! If UNIT = 2 Let U5$ = "IN SELLING UNITS "
!!-!! If UNIT = 3 Let U5$ = "IN PURCHASING UNITS "
!!-!! If UNIT = 4 Let U5$ = "IN COSTING UNITS "
!!-!! If UNIT = 5 Let U5$ = "IN PRICING UNITS "
!!-!! If UNIT = 6 Let U5$ = "IN PRODUCTION UNITS "
!!-!! UNIT = UNIT + 7
!!-!! Window Close 
!!-!! Print @0,8;'CE';U5$
!!-!! Window Open @5,8; Size 70,14; Using " SELECT COST "
!!-!! ENT_COSTTYPE: Print 'CS'
!!-!! Print 
!!-!! Print Tab 5;"0: NO COST"
!!-!! D1$ = "BASE COST"
!!-!! Print Tab 5;"1: ";D1$
!!-!! Read #1,18,110;D1$;
!!-!! Print Tab 5;"2: ";D1$
!!-!! Read #1,18,230;D1$;
!!-!! Print Tab 5;"3: ";D1$
!!-!! Read #1,18,130;D1$;
!!-!! Print Tab 5;"4: ";D1$
!!-!! Read #1,18,120;D1$;
!!-!! Print Tab 5;"5: ";D1$
!!-!! Read #1,18,220;D1$;
!!-!! Print Tab 5;"6: ";D1$
!!-!! Print 
!!-!! Print "ENTER COST TO SHOW ON REPORT: (0-6)   ";
!!-!! Input Len 16385;""X$
!!-!! COSTNO = X$
!!-!! If COSTNO < 0 Or COSTNO > 6 Or Fra(COSTNO) Goto ENT_COSTTYPE
!!-!! D1$ = " ",D1$
!!-!! If COSTNO = 1 Let D1$ = "BASE"
!!-!! If COSTNO = 2 Let D1$ = "LAST"
!!-!! If COSTNO = 3 Let D1$ = "NET PO"
!!-!! If COSTNO = 4 Let D1$ = "AVG."
!!-!! If COSTNO = 5 Let D1$ = "LOAD"
!!-!! If COSTNO = 6 Let D1$ = "REDI"
!!-!! Window Close 
!!-!! Window Off 
!!-!! If COSTNO Print @38,8;'CE';D1$;" COST" Else Print @38,8;'CE';"NO COST"
!!-!! ENT_NUMTHS: Rem "Enter Number of months for AMU
!!-!! Print @0,9;'CE';"Enter # of Months for AvgMthUsage:  12";'2ML';
!!-!! Input Len 16386;""X$ \ If X$ <> "" Print 'CL';
!!-!! If X$ = "" Let X$ = "12"
!!-!! X2 = X$
!!-!! If X2 < 1 Or X2 > 24 Or Fra(X2) Goto ENT_NUMTHS
!!-!! NUMMTHS = X2
!!-!! ENT_SLSTYPE: Rem "Enter Sales Type
!!-!! Print @0,10;'CE';"Enter  1: Rolling 24 Month, or  2: Fiscal Year  Unit Sales   ";
!!-!! Input Len 16385;""X$
!!-!! If X$ <> "1" If X$ <> "2" Goto ENT_SLSTYPE
!!-!! CALEND = 0
!!-!! If X$ = "2" Let CALEND = 1
OUTEND: Rem EXIT ROUTINE
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!!!-!! Print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
ERR_TRAP:
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 