!! >>> Program mx013r1
!
! description Dayend- Calc Due Date and Ship Dates on Orders Register Report
! loadsave -w -n 100,10 -o prog/dxport/mx013r1.dl4 src/mx013r1.src
!
! ERPScheduler Enabled
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 24, 2008  08:56:45
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx0/mx013r1.src (univ2) [txc] {01107}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time
!Option Default Dialect IRIS1
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem MX013R1 - DAYEND FUTURE \ SHIP COMPLETE CONVERSION REPORT
Rem AUTHOR: DAVE DEVITO JULY 26 1991 BASED ON MX204A
Rem LAST UPDATE:  04/29/1991 roman. add gp %  (CCT #32852)
Try
Com 1%,EOP
Com Rstr$[5000],Message$[600]
com 2%,intco
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim 1%,eflg,returnstatus
dim e$[500] ! 
dim 3%,rec_uac
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33]
!If Err 0 Gosub ERR_TRAP
Dim P0$[10],V0$[12],H0$[20],P9$[50],H1$[6]
Dim 1%,H3[1],H4[2],S1,S2,S7,UN[2],LT[1]
Dim 2%,H0[12],H5[16],C1[12],D8
Dim C1$[30],C2$[30],L1$[60],L2$[20]
Dim SUNIT[3],PUNIT,PUNIT$[4],SUNIT$[4],UNIT$[4],UNIT
Dim 3%,OLM[6],UNF[6],T2[21],L5[3],S3[17],1%,L3[3],2%,L4[3],L6[5],C2,C$[16]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8],L7$[6]
Dim 1%,F,X1,EUN[2]
Dim 2%,X2
Dim 3%,J,X3,T9[20],L7[9]
Dim K1$[50],K2$[20],K3$[20],X$[10],D1$[8],D2$[8],T$[10],T9$[26]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
S1 = 2 \ S2 = 3
for j=1 to 10
	if j<>9 and j<>88
		try close #j else rem
	endif
next j
J$ = intco Using "cntrl/CNTRL#"
Open #1,J$
For J = 2 To 10
  Read J1 \ If J1 < 1 Goto L_830
  Read #1,88,J1;J$;
  Open #J,J$
L_830: Next J
Read #1,3;CNAME$;
Mat Read #1,0,100;ARDATE$;
Read #1,3,172;D8;
Data "1840","1856","1872","1888","1808","1792","1728","-1","768"
!If Err 0 Let J8 = Spc(8)
J8 = 0 !\ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 !\ If J8 Let J9 = 20
S7 = 0
L_900: Rem GET TYPE
S7 = 7
If Not(S7) Goto L_900
J1 = 90 \ J2 = 0
T$ = "D"
let statchan=88

Try
	print #statchan;"Printing Future Order Report. "
else
	rem
end try
!Print @0,22;"Printing Future Orders Report....please wait";'CE' \ Signal 3,0
J1 = 99
!If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
K3$ = K1$
L_2000: Search #10,3,1;K1$,R1,E
If E Goto L_9100
If TYPE = 0 Let TYPE = K1$[1,2]
X2 = K1$[1,2]
If TYPE > 19 And TYPE < 23 Goto L_2000
If TYPE <> X2 Let J1 = 999 \ TYPE = X2 \ J2 = 0
Mat Read #2,R1,0;H0;
Mat Read #2,R1,52;H3;
Mat Read #2,R1,66;V0$;
Mat Read #2,R1,78;H4;
Mat Read #2,R1,84;H0$;
Mat Read #2,R1,104;H5;
Mat Read #2,R1,272;H1$;
Mat Read #2,R1,446;P0$;
Mat Read #4,H0[3],8;T2;
X2 = H0[9] \ Gosub L_7700 \ D1$ = X$
X2 = H0[10] \ Gosub L_7700 \ D2$ = X$
J1 = J1 + 3
Gosub L_3000
Gosub L_3050
Gosub L_5800
Gosub L_5000
Gosub L_2200
Gosub L_4500
Goto L_2000
L_2200: Rem TOTALS CALC
T9[12] = T9[12] + T2[1]
Return 
L_3000: Rem GET CUSTOMER NAME
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,142;C1;
Return 
L_3050: Rem GET BILL TO
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E
If E = 1 If H0[1] <> H0[4] Let H0[1] = H0[4] \ Write #2,R1,4;H0[1]; \ Goto L_3050
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C2$;
Return 
L_3500: Rem CLEAR FUTCONV FILE
K1$ = " ",K1$
L_3520: Search #10,3,1;K1$,R9,E
If E Return 
Search #10,5,1;K1$,R9,E
If E Gosub ERR_SEARCH
Goto L_3520
L_4000: Rem TOTAL PRINT
If Not(T9[12]) Return 
Gosub L_5800
Print #0;" "
Print #0; Tab 80;"** REGISTER TOTALS **";
Print #0; Using "########.##"; Tab 121;T9[12];
Return 
L_4500: Rem GO THROUGH LINES
If T$ = "S" Return 
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4530: Search #5,3,1;J2$,R5,E
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
Mat Read #5,R5,32;L5;
Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L1$;
Mat Read #5,R5,140;L2$;
Mat Read #5,R5,168;L7;
Mat Read #5,R5,250;UN;
Mat Read #5,R5,256;LT;
Mat Read #5,R5,260;S3;
Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN;
Mat Read #5,R5,452;UNF;
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1];OLM[3] = OLM[3] - S3[15]
If Not(L3) Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2; \ Mat Read #7,L4,256;A;
If L3[0] And LT[0] <> 3 Gosub L_30000
Gosub L_5800
If LT[0] = 3 Goto L_4750
For X = 1 To 3
  CNVTU[0] = 0 \ CNVTU[1] = UN[0] \ CNVTU[2] = 1 \ CNVTA = L7[X + 1] \ Gosub L_20000 \ SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0 \ CNVTU[1] = UN[1] \ CNVTU[2] = 2 \ CNVTA = OLM[3] \ Gosub L_20000 \ PUNIT = AMOUNT
Mat Read #8,UN[0],10;SUNIT$;
If UN[1] >= 0 Mat Read #8,UN[1],10;PUNIT$;
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
L_4750: Rem "
Gosub L_5500
Goto L_4530
L_5000: Rem PRINT LINE
Print #0;" "
Print #0; Using "######"; Tab 2;H0[7];
Print #0; Tab 11;D1$[1,8];
Print #0; Using "######"; Tab 20;H0[4];
Print #0; Tab 28;C1$[1,20];
Print #0; Tab 49;P0$[1,10];
Print #0; Tab 60;D2$[1,8];
Print #0; Using "###"; Tab 71;H0[11];
Print #0; Using "###"; Tab 77;H5;
Print #0; Using "##"; Tab 84;H4[2];
Print #0; Using "###"; Tab 90;H4;
Print #0; Tab 95;C2$[1,20];
Print #0; Using "########.##"; Tab 121;T2[1]
If H5[10] If TYPE = 5 Let X2 = H5[10] \ Gosub L_7700 \ Print #0; Tab 5;"CONVERSION DATE ";X$ \ J1 = J1 + 1
If TYPE = 9 Print #0; Tab 5;"STAGEING AREA ";H1$ \ J1 = J1 + 1
Print #0;" "
If T$ = "S" Return 
Print #0; Tab 9;"LINE"; Tab 15;"ITEM CODE"; Tab 29;"DESCRIPTION";
Print #0; Tab 62;"ORDERED"; Tab 72;"TO SHIP"; Tab 83;"B'ORD";
Print #0; Tab 90;"U/M"; Tab 96;"PRICE"; Tab 109;"COMM"; Tab 115;"GP %"; Tab 125;"EXTEN."
Return 
L_5500: Rem PRINT LINE DETAIL
Print #0; Using "###"; Tab 10;L3[2];
Print #0; Tab 15;L2$[1,12]; Tab 29;L1$[1,30];
Print #0; Using "######.## "; Tab 60;SUNIT[1];SUNIT[3];SUNIT[2];
Print #0; Using "#####.###/ "; Tab 90;SUNIT$;PUNIT;PUNIT$;
Print #0; Tab 109;L2$[17,20];
If L5[3] Let X3 = (L5[3] - S3[12]) / L5[3] * 100
Print #0; Using "-##.##"; Tab 114;X3;
Print #0; Using "########.##"; Tab 121;L5[3];
If P9$[26,26] <> "Y" Goto L_5580
Print #0;"" \ J1 = J1 + 1
Print #0; Tab 29;L1$[31,57]
L_5580: Print #0;" " \ J1 = J1 + 1
Return 
L_5800: Rem HEADINGS ROUTINE
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\12\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 013R1  - ";T9$;
If TYPE = 5 Print #0; Tab 38;"D A Y E N D    F U T U R E    O R D E R    R E G I S T E R"
If TYPE = 9 Print #0; Tab 38;"D A Y E N D     S H I P   C O M P L E T E     O R D E R    R E G I S T E R"
Print #0; Tab 57;"FOR  ";X$
Print #0;" "
Print #0; Tab 2;"ORDER #";
Print #0; Tab 11;"DATE";
Print #0; Tab 20;"CUST #";
Print #0; Tab 28;"NAME";
Print #0; Tab 49;"P.O. #";
Print #0; Tab 60;"SHIP DATE";
Print #0; Tab 70;"SLSM";
Print #0; Tab 76;"ENTD";
Print #0; Tab 82;"WHSE";
Print #0; Tab 88;"TAX #";
Print #0; Tab 95;"BILL TO";
Print #0; Tab 126;"TOTAL"
Print #0;" "
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

L_9100: Rem END OF THIS RANGE
Gosub L_4000
Gosub L_3500
Try
	print #statchan;"Future Order Report Complete. "
else
	rem
end try
Goto OUTEND
Stop 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 

 ERR_SEARCH: Rem                                           
 ENUM = E;ELINE = Spc(16);CTERR = 0                        
 If E = 5 Let CTERR = Err(8)                               
 e$ = "RETURN STATUS",(E + (CTERR * .001))                 
 e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4) 
  Try
	print #statchan;e$
else
	rem
endtry
 Goto ERR_MSG ! Error 10000                                
 Return ! End                                              
 ERR_MSG: ! send message       
 if e=0
	ENUM = E;ELINE = Spc(16);CTERR = spc(8)                       	                              
	e$ = "Error",(E + (CTERR * .001))                 
	e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)
	Try
		print #statchan;e$
	else
		rem
	end try
 endif	
 ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)   
 Let message$=message$+" Dayend Not Completed. "                                         
! Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)    
! Call AddToStr(e$,rstr$,WebStr$)                           
! Call SetOutPut(e$,rstr$)                                  
 End                         


OUTEND: Rem EXIT PROGRAM
!If Err 0 Rem
For C = 2 To 99
	if c<>9 and c<>88
		Try Close #C Else rem
	endif
Next C
Print #0;"\14\";
Chain "MX013R3.DL4"
!Stop 
Else
include "src/callmainerrnet.inc"
end try
End ! the whole program