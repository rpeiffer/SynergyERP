!Program Name: ubssearchinv
! loadsave -w -n 100,10 -o prog/dxport/ubssearchinv.dl4 src/ubssearchinv.src
!                                                  
!Last Updated:                                     
!rce 10/10/05  salesgroup
!rce 02/22/07 R9 changes
!
!Declare External Function INXML$
!
Declare Sub updatelog,errTrap
Declare External sub SearchINV

Include "src/invars.inc"

Dim x$[128],s$[128]
Dim bi.[100] as inInfo
Dim tot. as totInfo
Dim arrSales[999]
Dim sinv$[12],einv$[12], custpo$[20]
Dim 1%,COST_LEV[3]
Dim 2%,custid
Dim 3%,refnum
custid=0
custid=39
!refnum$="10000388"
! refnum$="test"
Try
	sinv$=refnum using "##########"
	einv$=refnum using "##########"
else 
	sinv$="0"
	einv$="0"
End Try

Call SearchINV(1,999,1,MSC$(1)+"/files/6/dx.log","  1212","  1212","01/01/2001","12/31/2031",sinv$,einv$,tot.,bi.[],ii,ss,100, arrsales[],cost_lev[], refnum, custpo$)

!x$=INXML$(1,999,bi.[],ii,s$)
!If X$<>"" Then
!	Print "Good!"
!Else
!	Print "Booo!"
!End If
print "done" \ stop
!END
!Chain ""


External Sub SearchINV(intCo,intSalesMan,debug,dlog$,scust$,ecust$,sdate$,edate$,sinv$,einv$,tot. as totInfo,iv.[] as inInfo,ii, ss,iLimit, arrSales[], cost_lev[], ...)
Try 
	Enter refnum, custpo$
	refflag=1
else
	Dim refnum$[20], custpo$[20]
	refflag=0
end try

Try

Declare Intrinsic Function FindChannel,Trim$
Declare Intrinsic Sub JulianToDate,DateToJulian, StringSearch
Declare External Function PDate$,OpenFile
Declare External Function CheckSlsm

External Lib "ubsfunc.dl4"

Include "src/ubsinvoice.inc"
Include "src/ubsorder.inc"
Include "src/ubscustomer.inc"
Include "src/ubssar.inc"

Dim ARK$[40],IHK$[12],IDK$[12],CUK$[12],SMK$[20],P9$[50],P60$[50],P61$[256]
Dim HKK$[40]

Dim OH. As ORDH
Dim IH. As INVH
Dim ID. As INVD
Dim IT. As INVT
Dim I2. As INVS2
Dim CU. As Customer
Dim AR. As SARACT

Dim 1%,debugDetail
! Variables for Channel#'s
Dim 2%,IHC,IDC,ITC,ISC,CUC,CTLC,SMC,HKC,ARC,ETC
! Variables for Search Record#
Dim 2%,IHR,IDR,ITR,ISR,CUR,CTLR,SMR,ARR,ETR
! Variables for Search Error
Dim 2%,IHE,IDE,ITE,ISE,CUE,CTLE,SME,ARE,ETE,E

Dim Sales$[35], Temp$[100], DT1$[10],DT2$[10]
Dim SLS$[3],CO$[2]
Dim QMASK$[20],PMASK$[20],EMASK$[20],DEC$[5]
Dim Msg$[256],pgmName$[20]
Dim tempdate$[6],juldate$[10],EnteredBy$[10]

Dim 1%,factor
Dim 2%,JToday 
Dim 2%, t2, LastInvDate, X1,X2
Dim 2%,Q0[1] 
Dim 2%,jsdate,jedate,jinvdate
Dim 3%,TOTCOST,TOTRESALE,totGP,CommAmt,GP
Dim 3%,tot[10]
Dim 4%,einv

einv = einv$

debugDetail=0
pgmName$="ubssearchinv"
msg$[1,50]="-",msg$ \ Call updatelog(debug)               
msg$="start...program "+pgmName$ \ Call updatelog(debug)     

ii=0
SLS$=intSalesMan Using "###" ! Passed Salesman
CO$=Str$(intCo)              ! Company

!starting inv date
tempdate$[1,2]=Val(Trim$(SDATE$[9,10])) using "##"
tempdate$[3,4]=Trim$(SDATE$[1,2])
tempdate$[5,6]=Trim$(SDATE$[4,5])
Call DateToJulian(1,val(tempdate$) using "&&&&&&",juldate$)
jsdate=Val(juldate$)                                     
!ending inv date
tempdate$[1,2]=Val(Trim$(EDATE$[9,10])) using "##"
tempdate$[3,4]=Trim$(EDATE$[1,2])                 
tempdate$[5,6]=Trim$(EDATE$[4,5])                 
Call DateToJulian(1,val(tempdate$) using "&&&&&&",juldate$)
jedate=Val(juldate$)

msg$="doing...company-"+CO$+" salesman-"+SLS$ \ Call updatelog(debug)
If debugDetail
   msg$="doing...sdate-"+SDATE$ \ Call updatelog(debug)
   msg$="doing...edate-"+EDATE$ \ Call updatelog(debug)
   msg$="doing...scust-"+SCUST$ \ Call updatelog(debug) 
   msg$="doing...ecust-"+ECUST$ \ Call updatelog(debug) 
   msg$="doing...sinv-"+SINV$ \ Call updatelog(debug) 
   msg$="doing...einv-"+EINV$ \ Call updatelog(debug) 
Endif

OHC= OpenFile(-1840,intCo)  \ If OHC=-1  Error 42    
IHC= OpenFile(-1136,intCo)  \ If IHC=-1  Error 42    
IDC= OpenFile(-1184,intCo)  \ If IDC=-1  Error 42    
ITC= OpenFile(-1168,intCo)  \ If ITC=-1  Error 42    
ISC= OpenFile(-1152,intCo)  \ If ISC=-1  Error 42    
CUC= OpenFile(-1808,intCo)  \ If CUC=-1  Error 42    
CTLC= OpenFile(-9999,intCo) \ If CTLC=-1 Error 42    
SMC= OpenFile(-1824,intCo)  \ If SMC=-1  Error 42    
HKC= OpenFile(-9994,intCo)  \ If HKC=-1  Error 42    !invhkey
ARC= OpenFile(-1504,intCo)  \ If ARC=-1  Error 42    !saract
ETC= OpenFile(-1664,intCo)  \ If ETC=-1  Error 42    !entdby


Mat Read #CTLC,19,50;P9$; 
Mat Read #CTLC,60,50;P60$;
Mat Read #CTLC,115,40;Q0; 


If not(Q0[1]) let Q0[1]=2                                                 
Let Dec$="#",Dec$;Qmask$="---,---,--#"                                    
If Q0[0] Let Qmask$="---,---,--#.",Dec$[1,Q0[0]]         !qty mask        
If Q0[1] Let Pmask$="-$$,$$$,$$$,$$$.",Dec$[1,Q0[1]]     !price mask      
Let Emask$="-$$$,$$$,$$$,$$$.##"                         !ext. price mask

For xx=0 to 10 \ tot[xx]=0  \ Next xx        
Let LastInvDate=Tim(6)
If SLS$="999" Let DT2$="ALL" Else Let DT2$ = " "


If jsdate               
   DIR=2;HKK$=" ",HKK$;HKK$[1,6]=jsdate using "######"                       
Else
   Goto OutEnd:
Endif

! changed 12/15/05 to use different keys based on filter criteria
!defaults to date search
	dflag = 1
	HEAD=HKC	! invhkey
	DIR=2		! DIR # 2: JJJJJJTTRRRRRR


if val(scust$) > 0
	dflag = 2
	HEAD=IHC	! invh
	DIR=2		! DIR # 2: CCCCCCIIIIII
	HKK$=" ",HKK$;HKK$[1,6]=scust$
endif

if val(sinv$) > 0
	dflag = 3   ! invoice specific search
	HEAD=IHC	! invh
	DIR=1		! dir1 SSIIIIII    ! DIR # 3: SSSIIIIIIB
	! HKK$=" ",HKK$;HKK$[1,3]=IntSalesMan using "###"
	status = 30
	HKK$=" ",HKK$;HKK$[1,2]=status using "##"
	HKK$[3]=Val(sinv$)-1 using "########## "  ! search 3 in use
endif

INTOP: !===============================================
Search #HEAD,3,DIR;HKK$,HKR,HKE
If HKE goto OutEnd:

!=============selection check         
if dflag=1  ! date sort
	IF Val(HKK$[1,6])<jsdate or Val(HKK$[1,6])>jedate  goto OutEnd:    !inv date
endif
if dflag=2  ! cust sort
	IF Val(HKK$[1,6])<Val(scust$) or Val(HKK$[1,6])>Val(ecust$) goto OutEnd:
endif
if dflag=3  ! inv sort
	! IF Val(HKK$[1,3])<IntSalesMan or Val(HKK$[1,3])>IntSalesMan goto OutEnd:
	IF Val(HKK$[3,12])<Val(sinv$) or Val(HKK$[3,12])>einv
		if status = 30
			let status = 31
			HKK$=" ",HKK$;HKK$[1,2]=status using "##"
			HKK$[3]=Val(sinv$)-1 using "########## "  ! search 3 in use
			goto intop
		endif
		goto OutEnd:
	Endif 
endif

If debugDetail
   msg$="doing...INTop: HKK$="+HKK$+" HKR="+HKR \ Call updatelog(debug)
   If HKE msg$="error...Search error "+HKE  \ Call updatelog(debug) 
Endif

IHR=HKR
Read Record #IHC,IHR; IH.;

!IF IH.H0[7]=9150 STOP

!=============selection check
if dflag=2 and (IH.H0[4]<Val(scust$) or IH.H0[4]>Val(ecust$)) goto INTOP:    !cust
if Val(sinv$) and (IH.ORef[1]<Val(sinv$) or IH.ORef[1]>einv)  goto INTOP:    !inv # 
if dflag<>3  ! not an invoice search
	Call DateToJulian(1,IH.H0[8] using "&&&&&&",juldate$)
	jinvdate=Val(juldate$)                                     
	IF jinvdate<jsdate or jinvdate>jedate goto INTOP:    !inv date
Endif
if refflag
	If refnum and IH.H0[7]=refnum goto GotOne	! order match
	If refnum and IH.ORef[1]=refnum goto GotOne	! invoice match
	if custpo$ gotone=0 \ Call StringSearch(UCase$(IH.po$), 1, UCase$(custpo$), gotone)
	If gotone>0 goto GotOne			! CustPO match
	Goto INTOP ! no matches
else
	goto GotOne
end if

GotOne:
!==============salesman check
If CheckSlsm(arrSales[], intSalesMan, IH.H0[11]) goto SlsPassed

! t2 = IH.H0[11]
! If intSalesMan=999 goto SLSPassed ! all reps      
! If arrSales                                       
	! for counter=0 to 999                          
		! if arrSales[counter]=t2 goto SLSPassed:
		! if not(arrSales[counter]) counter=999 ! skip to end 
	! next counter
! Endif                                             
! If intSalesMan=t2 goto SLSPassed:          

goto INTOP  !Security.                               

SLSPassed: !

If IH.H0[0]=30 then let factor=1   
If IH.H0[0]=31 then let factor=-1  


ITR = IH.ORef[5] ! Record Number To Ord Total record.
Read Record #ITC,ITR; IT.;
invcost = IT.T2[17] + IT.T2[20] + IT.tot[0]

ISR = IH.ORef[4] ! Record Number For Ship to
Read Record #ISC,ISR; I2.;


!=========================Get Customer Info.
CUK$=IH.H0[4] USING "######"
Temp$=" ",Temp$;Temp$=CUK$

Search #CUC,2,1;CUK$,CUR,CUE
If CUK$[1,6]<>Temp$ Let CUE=22

If CUE=0 Then
   Read Record #CUC,CUR;CU.;
Else
   Clear CU.
   CU.A1$[31,60]="-NOF-"
End If


!=====================entered by           
ETR=IH.H5[0];EnteredBy$=" ",EnteredBy$     

If ETR=0 Then                     
   EnteredBy$="-NOF-"             
Else                              
   Mat Read #ETC,ETR,0;EnteredBy$;
End If                            
If Trim$(EnteredBy$) = "" Let EnteredBy$ = "-null-"

!=========================Get SalesMan
SMK$=IH.H0[11] Using "### "
Temp$=" ",Temp$;Temp$=SMK$

Search #SMC,2,1;SMK$,SMR,SME
If SMK$[1,4] <> Temp$ Let SME=22

If SME=0 Then
	Mat Read #SMC,SMR;Sales$[1,30];
Else
	Sales$="-NOF-"
End If

!======================Calc Commission dollars
CommAmt=0
For X1=0 to 4
  If intSalesMan=999 Then
     CommAmt=CommAmt + IH.SCOM[X1]
  Else If intSalesMan=IH.SLSM[X1] Then
     CommAmt=CommAmt + IH.SCOM[X1]
  End If
Next X1

totcost = totcost + (invcost * factor)
totresale = totresale + (IT.T2[1] * factor)

if ih.h5[13]                                        
  gp = (((ih.h5[13] - ih.h5[14]) / ih.h5[13]) * 100)
Else
  GP=0
End If

if ii < iLimit Then
  iv.[ii].SalesMan$=Str$(IH.H0[11])+" "+Sales$
  iv.[ii].CustID$=Str$(IH.H0[4])
  iv.[ii].CustName$=CU.A1$[31,60]
  iv.[ii].OrderNo$=Str$(IH.H0[7])
  IF IHE Then iv.[ii].OrderNo$=Str$(IH.H0[7])+"NOF"            !not on File
  IF IH.H0[0]=31 Then iv.[ii].OrderNo$="C/M-"+Str$(IH.H0[7])   !c/m
  iv.[ii].InvoiceNo$=Str$(IH.ORef[1])
  iv.[ii].InvDate$=PDate$(IH.H0[8])
  iv.[ii].Amount$=IT.T2[1]*factor Using "-,$$$,$$$.##"
  iv.[ii].Tax$=IT.T2[7]*factor Using "-,$$$,$$$.##"
  iv.[ii].Freight$=IT.T2[5]*factor Using "-,$$$,$$$.##"
  iv.[ii].TInvoice$=IT.T2[0]*factor Using Emask$
  iv.[ii].Misc$=IT.T2[4]*factor Using "-,$$$,$$$.##"
  If cost_lev[1]
	iv.[ii].Cost$ = invcost * factor Using "-,---,---.##"
	iv.[ii].Profit$ = (IH.H5[13] - IH.H5[14]) * factor Using "-,---,---.##"
  Else
	iv.[ii].Cost$ = " "
	iv.[ii].Profit$ = " "
	! iv.[ii].TGPP$ = " "
  End If

  iv.[ii].TGPP$=GP*factor Using "----#.##%"
  iv.[ii].Commission$=CommAmt*factor Using "-,$$$,$$$.##"
  iv.[ii].RPTDate$=DT2$
  iv.[ii].EnteredBy$=EnteredBy$
  iv.[ii].CustPO$=IH.PO$
  ii=ii+1
Else
  Goto OutEnd:
End If

!accumulate total                                                         
tot[0] = tot[0]+IT.T2[1]*factor              !amount                      
tot[1] = tot[1]+IT.T2[7]*factor              !tax                         
tot[2] = tot[2]+IT.T2[5]*factor              !freight                     
tot[3] = tot[3]+IT.T2[4]*factor              !misc                        
tot[4] = tot[4]+IT.T2[0]*factor              !total                       
tot[5] = tot[5] + invcost * factor           !cost                        
tot[6] = tot[6]+(IH.H5[13]-IH.H5[14])*factor !profit                      
If IH.H5[13] Let totgp = ((IH.H5[13] - IH.H5[14]) * factor * 100) / IH.H5[13] Else Let totgp = 0
tot[7] = tot[7]+totgp                        !gp                          
tot[8] = tot[8]+CommAmt*factor               !comm                        
!                                                                         
tot.totamount$  = tot[0] Using Emask$                                     
tot.tottax$     = tot[1] Using Emask$                                     
tot.totfreight$ = tot[2] Using Emask$                                     
tot.totmisc$    = tot[3] Using Emask$                                     
tot.tottotal$   = tot[4] Using Emask$
If cost_lev[1]
	tot.totcost$    = tot[5] Using Emask$                                     
	tot.totprofit$  = tot[6] Using Emask$
Else
	tot.totcost$ = " "
	tot.totprofit$ = " "
End If
tot.totgp$      = tot[7] Using "----#.##%"                                
tot.totcomm$    = tot[8] Using Emask$                                     

Goto INTOP:


OutEnd: !=============================================================
Close #IHC,#IDC,#ITC,#ISC,#CUC,#CTLC,#SMC,#HKC,#ARC,#ETC
msg$="doing...end of "+pgmName$ \ Call updatelog(debug)
ss=0
Exit Sub
Else
  Temp$=""
  Call errTrap(pgmName$)
End Try

Sub updatelog(debug)                                        
  If not(debug) Exit Sub                                    
  System "echo ''" + msc$(0) + " " + msg$ + "'' >> " + dlog$
End Sub       

Sub errTrap(pgmName$)
  msg$="error...",Spc(8)," ",Msc$(2)," at ",Str$(Spc(10))," ",pgmName$
  Call updatelog(1)
End Sub
ss=0
!ss=spc(10)
End Sub

