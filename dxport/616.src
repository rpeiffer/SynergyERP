! >>> Program 616
!
! description General Ledger Journal Entry Post
!  loadsave -w -n 100,10 -o prog/dxport/616.dl4 src/616.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 20, 2007  16:00:01
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/gl616.src (univ2) [bill] {23185}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem GL616 G/L POST BATCH TO G/L MASTER FILE
Try
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[800],rstr$[2000] ! error 
DIM 3%,GLPSTAT,glpmsg$[100]
Dim R$[64],P$[64],S$[10],F2$[16],V$[13],X$[10]
Dim V9$[30],S9$[100]
Dim H$[4],C1$[4],C2$[6],B$[9]
Dim A6$[140],I$[12],F3$[30]
Dim J4$[50]
Dim F9$[2],1%,L9,Z7$[30]
Dim 2%,A9,C3,E9,Q
Dim 1%,S9[1],BFLAG,MEMOFLAG
Dim 1%,FYE,YEAR_,MONTH_,2%,PERIOD,YEAR_$[4]
Dim 1%,PRGNUM,CHGL[3]
Dim 2%,ACPER[1],CLIENT
Dim 2%,BATCH,GRP[1],USR[1],PDATE
Dim 2%,A,C,B,B8[1],COUNT
Dim 3%,R[23],C2[2]
Dim 3%,L1,W,S,E
Dim 4%,H3
Dim j$[50],work$[50],sfile$[50]
dIM GROUPID$[1]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
!call dxopen() ! needed?
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=intCO
REC_UAC = GetUIDRec(e$,IntCo,Userid$) 

for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
message$=""
Mat Read #1,51,6;S9;
s$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
s$[2,2]=groupid$
GRP[0] = intco
USR[0] = groupid$
S$[1,1] = GRP[0] Using "#"
S$[2,2] = USR[0] Using "#"
GRP[1] = GRP[0];USR[1] = USR[0]
V9$ = "/tmp/binq"

F2$ = " ",F2$
F2$ = "1/ACF",S$[1,2]
Call FindF(F2$,A9)
if not(a9)
	message$="GENERAL LEDGER IS NOT AVAILABLE FOR YOUR ACCOUNT"
	eflag=eflag+1
	goto outend:
endif
Open #3,F2$
CHGL[0] = 3
if not(s9)
	let c=1
else
	call dxget ("CLIENTID",tmp$)
	let c=tmp$
	if c<0 or c>9999
		let eflag=eflag+1
		let message$="Invalid Client Id Submitted"
		goto outend:
	endif
endif
! C1$=C using "####"
V$ = " ",V$
V$[3,6] = C Using "####"
Search #3,2,1;V$,R[3],E \ If E > 1 Gosub ERR_SEARCH
if e<>0
	let eflag=eflag+1
	let message$="Client "+str$(c)+" Not on File"
	goto outend:
endif	
client=c
Mat Read #3,R[3];A6$;
S$[3,6]=c using "####"
L9 = A6$[135,136] \ If L9 > 9 Let F9$ = L9 Using "##"
FYE = A6$[128,129]
If L9 < 10 Let F9$ = L9 Using "#"
For I = 3 To 6
  If S$[I,I] = " " Let S$[I,I] = "."
Next I
Try Close #2 else rem
! S$[3,6] = C1$
F2$ = F9$,"/GLM",S$[1,6]
Call FindF(F2$,A9) 
if not(a9)
	let eflag=eflag+1
	let message$="General Ledger Master File For Client "+str$(c)+" Not Found. "
	goto outend:
endif
call dxget ("acctper",tmp$) ! MMYY format
let c1=0
if len(tmp$)=4
	let glmo=tmp$[1,2]
	let glyr=tmp$[3,4]
	let work$=glyr using "&&"
	let work$[3]=glmo using "&&"
	let c1=work$
endif
if c1<=0 or c1>9999
	let eflag=eflag+1
	let message$=Message$+" Invalid Accounting Period Submitted"
	goto outend:
endif
C1$=C1 USING "&&&&"
L_375: Rem BATCH RANGES
BFLAG = 99
L_385: B8[0] = 0 \ B8[1] = 999
Call dxget("SBTH",tmp$) \ B8[0] = tmp$ !!STARTING Check #
If b8[0] < 0 Or b8[0] > 999
	eflag=eflag+1
	Let MESSAGe$ = Message$+" Invalid starting Batch Number"
	Goto outend:
ENDIF         
call dxget("EBTH",tmp$) \ If tmp$ = "" Let b8[1] = 999 Else Let b8[1]=TMP$
If b8[1] <0 Or b8[1] > 999
	eflag=eflag+1
	Let MESSAGe$ = Message$+" Invalid ending Batch Number"
	Goto outend
ENDIF                                   
If b8[1]<b8[0]
	eflag=eflag+1
	message$=message$+" Starting Batch Must Be Less Than Ending Batch."
	Goto outend
endif

B9 = 0
D = 0
C9 = 0
totrec=0
p$=c using "####"
c2$=c using "####"
for i=1 to 3
	if p$[i,i]=" "
		let p$[i,i]="."
		let c2$[i,i]="."
	endif
next i
V9$ = rec_uac Using "/tmp/binq&&&&&&"
let tmp$ = "files/",F9$,"/G",S$,C1$!L9$,"/G",G$[1,2],C$,D$,B$[1,3]
S9$ = "ls ",tmp$,"* >",V9$," 2>/dev/null"
Call String(2,S9$)
System S9$
S9$ = " ",S9$
S9$ = "chmod 666 ",V9$," 2>/dev/null"
System S9$
Call FindF(V9$,A9)
If Not(A9) goto outend:
Open #10,V9$
COUNT = 0
L_545: Read #10;F3$;
If F3$ = "" goto outend:
F3$[23,23]="" 
COUNT = COUNT + 1
let c3=0
If F3$[20,20] <> "."
  C3 = F3$[20,22]
Else 
  If F3$[21,21] <> "."
    C3 = F3$[21,22]
  Else 
    C3 = F3$[22,22]
  End If 
End If 

If C3 < B8[0] Goto L_545
If C3 > B8[1] Goto L_545
BATCH = C3
Call String(1,F3$)
F3$[23] = ""
Goto L_805
L_800: F3$ = F9$,"/G",S$,C1$,C2$
L_805: Call FindF(F3$,A9)
If Not(A9) goto l_1910
Try Close #4 Else Rem
Try
	open #4,F3$ 
Else 
	LET EFLAG=EFLAG+1
	LET message$=message$+"Batch "+str$(c3)+" Not Available for Update. "
	goto L_545:
end try

!If Err 0 Gosub ERR_TRAP
!Print @0,22;'CL';"Current Batch Updating: ";C3;

L_845: R[4] = Chf(4) - 1
L_850: Read #4,R[4];R$
If R$[10,20] = "1  PAY    1"
	If R$[22,22] <> "P"
		let eflag=eflag+1
		Message$=Message$+" Batch "+str$(c3)+" Not Printed. "
		goto l_1910:
	endif
   
	MEMOFLAG = 0
	If R$[1,1] = "M"
		MEMOFLAG = 99
	Else 
		C2 = R$[51,60]
		C2[1] = R$[31,40] \ C2[1] = C2[1] / 100
		C2[2] = R$[41,50] \ C2[2] = C2[2] / 100
		If C2 <> 0 Or (C2[1] - C2[2]) <> 0
			let eflag=eflag+1
			let Message$=Message$+" Batch "+str$(c3)+" Out of Balance. "
			goto l_1910:
		End If 
	End If 
End If
B$=R$ ! save for budget/memo info
!get next record
R[4] = R[4] - 1
If R[4] < 0
	eflag=eflag+1
	message$=Message$+" Batch "+str$(c3)+" Ended Improperly. "
	Goto L_1910
End If 
Read #4,R[4];R$;
P$ = R$
If R$[63,63] = "9" If R$[1,1] = "*"
	!Goto L_880
else
	eflag=eflag+1
	message$=Message$+" Batch "+str$(c3)+" Ended Improperly. "
	Goto L_1910
End If 
! Rem check if batch is updated
If R$[62,62] = "U"
	eflag=eflag+1
	message$=Message$+" Batch "+str$(c3)+" In Process Elsewhere. "
	goto L_1910
endif

For I = 2 To 5
  If P$[I,I] = " " Let P$[I,I] = "."
Next I
If B$[1,1] = "B"
  F2$ = F9$,"/GLB",S$[1,6]!,P$[2,5]
  Call FindF(F2$,A9)
  If Not(A9)
	let eflag=eflag+1
	message$=message$+" Budget File Not Found For Batch "+str$(c3)+". "
	goto L_1910
  endif
  Try Close #2 Else REm
  Open #2,F2$
Else 
  !F2$ = F9$,"/GLM",S$[1,2],P$[2,5]
  F2$ = F9$,"/GLM",S$[1,6]
  Call FindF(F2$,A9)
  If Not(A9)
	let eflag=eflag+1
	message$=message$+" G/L Master File Not Found For Batch "+str$(c3)+". "
	goto L_1910
  End If 
  Try Close #2 Else Rem
  Open #2,F2$
End If 
CHGL[2] = 2
L_1060: V$ = " ",V$
Search #2,2,1;V$,R[2],E 
If E<>0
	let eflag=eflag+1
	Message$=Message$+" G/L Control Record Not Found. Update Ended. "
	goto outend:
End If 
Mat Read #2,R[2],70;H3;
H$ = H3 Using "####"
P = H$[3,4]
If P <> 14 If P <> 39 Let P = 39
Dim 4%,M3[P]
Mat Read #2,R[2],70;M3;
H3 = P$[6,9]
H3=C1$
S = B$[2,5]
E9 = B$[6,9]
If B$[1,1] = "B"
	For I = 1 To P
		If I <> 13 And I <> 26 And I <> 39
			If M3[I] = S Let S = I \ Goto L_1205
		End If 
	Next I
	L_1205: Rem for budget ending period
	For I = 1 To P
		If I <> 13 And I <> 26 And I <> 39
			If M3[I] = E9 Let E9 = I \ Goto L_1230
		End If 
	Next I
	let eflag=eflag+1
	message$=message$+"Accounting Period Not Found in Budget File. Update Ended."
	goto outend:
End If 
L_1230: Rem check g/l acct period
For I = 1 To P
  If I <> 13 And I <> 26 And I <> 39
    If M3[I] = H3 Goto L_1266
  End If 
Next I
let eflag=eflag+1
message$=message$+"Accounting Period Not Found in G/L File. Update Ended."
goto outend:

L_1266: Rem call to glpost
PRGNUM = 616
For Q = 0 To 3 \ CHGL[Q] = 0 \ Next Q
CHGL[0] = 3
CHGL[1] = 4
CHGL[2] = 2
ACPER = C1$[1,4]
ACPER[1] = 0
BATCH = C3
PDATE = 0
glpstat=0
glpmsg$=""
totrec=totrec+1
Call "glpost.dl4",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE,intco,rstr$,glpstat,glpmsg$                                                      
if glpstat<>0
	let eflag=eflag+1
	let message$=message$+"Batch "+str$(c3)+" "+rtrim$(glpmsg$)+". "
endif
L_1910: ! If Err 0 Rem

Try  Close #2 Else Rem
For X = 4 To 9
	Try Close #X Else Rem
Next X
 
Goto L_545

goto outend:


ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End


OUTEND: Rem EXIT PROGRAM
Try Close Else Rem
Call FindF(V9$,A9)
If A9<>0
  Kill V9$
End If 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no g/l batches available to Update"
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totrec)+" G/L Batches Updated "
		
	endif
endif
if message$="" let message$="Process Complete"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
end try
End