! >>> Program 114b
!
! description  S/C Price List with Sales Dollars
!
! loadsave -w -n 100,10 -o prog/dxport/114b.dl4 src/114b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  16:38:52
Rem /w2/papermaster/r2005//usr/acct/rce/work/r2005/mx1/mx114b.src (univ2) [rce] {34018}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX114b - SALESMAN / CUSTOMER PRICE LISTING  w/SALES
Rem AUTHOR: HARRY HENDERSON   NOV 22, 1988
Rem
! CUSTOM CHANGES FOR:
! JERSEY PAPER - From task 35425 - MTG
!
!  *** Note : only the 1st three ship to's appear in the xml string
!
include "src/inc/fileprtdefault.inc"
External Lib "libprice.lib"
Declare External Sub SysPriceCalc
External Lib "ubsfunc.dl4"
Declare External sub GetCostLevels,GetPortDefault,USERCNTRL
!
Declare Intrinsic Sub DateToJulian,String
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2]
Com 2%,C4[8]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],FIELD,BASEX
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!If Err 0 Gosub L_9600
If Err 0 Gosub L_9500
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNS(X) = Sgn(X) * (Int(Abs(X) * 1000 + .5) * .0001)
DEF FNT(X)=SGN(X)*(INT(ABS(X)*10+.5)/10)
Dim 1%,TBS[5],LPFLAG,HEAD$[10]
TBS[0] = 19
TBS[1] = 42
TBS[2] = 57
TBS[3] = 1 ! print price desc & no print vend item?
TBS[4] = 0
If TBS[3] = 0 Goto L_700
TBS[0] = 14;TBS[1] = 42;TBS[2] = 50
L_700: Rem "==================================== dim vars
Dim K33$[50],K34$[50],KCUST$[50],1%,TYPE,RB[2],RBL1[1],RBWH,RBUM[1]
Dim 2%,RB1[5],DF,3%,RBCOST,RBSLCOST,RB5[2],RP_COST,SPSLCOST,PREC[1]
Dim P$[16],C1$[142],A$[156],D6$[20],A3$[30],A2$[30],S8$[5],S7$[5]
Dim LUNIT$[4],UNIT$[4],BUNIT$[4],PUNIT$[4],CUNIT$[4],P9$[50],I$[60],PHONE$[20]
Dim LCunit$[4],3%,LCost
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 1%,LPEUN[2],M5[3],M8,F,X1,BREAKPAGE,DEPT,B3,ARMTH,BOYMTH,3%,T7[10],SLS,QTY
Dim 1%,C3[4],C5[2],P4[100],P0[100],SPCUM[1],SPC3[2],WHPARC[5],PD1[9],3%,LSLS,LQTY
Dim 1%,Y6,Y7,Y8,LM[1],WHLM[1],Cost_Lev[4],SPCUM[1],SPCC3[2],SPWH,prcsrc
Dim 1%,prntflag,a5[10],ua2$[50]
Dim 2%,UNITX,C1[2],B[24],Z7[3],CFC1[12],ARDATE,Z1[1],X2,M6[3],P2[100],COID
Dim 2%,WHBLD[2],W7[14],WHSE,DFWH,D9[20],JA9[2],LPDEPT,JDATE[5],J9[2],SPC1[5]
Dim 2%,SPC1[5],Q0[1],LPR1[3],3%,CFC4[5],ARAMT,DEXT,BRKAMT,PERM[1],LPUNF[6]
Dim 3%,BRACKET,BRACKET1,M7,SPC4[6],SPC5[4],2%,DT,BRKLVL,JUMP_,L6[1],SGPRICE
Dim 3%,J,X3[9],X6,T9[20],C2[2],B1[9,2],C7,MU,LPC4[3],LPR[4],S1[12,2],S2[12,2],W3[24],LP
Dim 3%,Z2[12,2],W3[24],WHLV[2],WHMISC[6],A4,PRPARC[3],PF_LOAD2
Dim 3%,FLEPTR[20,1],SPECS[50],MSGDESC$[150],R[99]
Dim CNAME$[30],J3$[6],ARDATE$[8],C5$[16],Z1$[50],D1$[10],Custom_customer$[30]
Dim S9$[8],A1$[50],S1$[30],K4$[40],K8$[1],EFFDATE$[8],REPDATE$[8],F1$[16]
Dim K1$[50],K2$[60],K3$[60],X$[10],K9$[50],U5$[130],BK$[10]
Dim K6$[12],K7$[12],AUTH$[1],P2$[84],COMM$[4],D$[35],P60$[50],A4$[22]
Dim K25$[40],K26$[40],ST$[142],HLD$[40],PMASK$[12],WH$[2],WHPROD$[12],W1$[32]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[2000],tmp1$[1000],tmp2$[1000],tmp3$[1000],tmp4$[1000],tmp0$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
Def FNF(H) = Int((Abs(H) * 20 + .5) * Sgn(H)) / 20
!
!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID = intCO
CH_CNTRL = 1;CH_LASTPRC = 2;CH_PROD = 3;CH_CUST = 4;CH_BRKTBL = 5;CH_SPCPRC = 6
CH_SLSM = 7;CH_COMMD = 8;CH_SORT = 9;CH_CNTRTH = 10;CH_DEPT = 11;CH_CCODES = 12
CH_PRDMRK = 13;CH_ZONE = 14;CH_VEND = 15;CH_SCURR = 16;CH_PRDWHSE = 17;CH_PTYPE = 18
!
If Err 0 Gosub L_9500
For J = 2 To 18
  Read J1 \ If J1 = -1 Goto NXTFLE
  Read #CH_CNTRL,88,J1;J$;
  Ropen #J,J$
NXTFLE: 
Next J
Data "1376","1792","1808","1952","1936","1824","2288","-1","2880","1632","1728","1712","1920","2400","2016"
Data "1744","752"
!
For J = 25 To 30
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Open #J,J$
L_830: 
Next J
Data "2112","2016","-1","-1","-1","-1"
Dim Prt. as prtdefault
Read #1,51,74;BOYMTH; 
Mat Read #1,115,0;D9;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCASE$(TRIM$(custom_customer$))
Read #1,0,120;ARMTH; 
MTH = ARMTH
NOMTHS = ARMTH - BOYMTH 
If NOMTHS <= 0 Let NOMTHS = NOMTHS + 12
Mat Read #1,115,40;Q0; 
If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "#######" \ IF Q0[1]>2 LET PMASK$="########" ! ADD 1
if custom_customer$="JPAPER"
	LET PMASK$="#########" 
endif
X = Len(PMASK$) - (Q0[1]) \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub L_9500
!If Err 0 Gosub L_9600
If Err 0 Gosub L_9500
If J8 If J8 <> 49 Goto L_9500
J9 = 60 !\ If J8 Let J9 = 22
Mat Read #1,0,100;ARDATE$;
Read #1,0,108;ARDATE;
Read #1,3;CNAME$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
U5$ = "-",U5$
!Open #77,"PRTDFLT","USERPORT"
!Read #78,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
!Mat Read #77,A4,0;PD1;
!Close #77,#78

JDATE[0] = Tim(6)
!
Call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
call UserCntrl(userID$,uA2$,A5[],ss,intCo)
Call GetPortDefault(e$,IntCO,UserID$,portnum,rec_uac,prt.)
DFWH = prt.Wh ! PD1[2]
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"114b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
J$ = "2/ARTERMCODE"+Str$(intCO) \ Ropen #20,J$
!
!call dxget("print",tmp$) \ if tmp$ = "1" let C4 = 99 else C4 = 0  !Print 1 Regular 2 with Sales Report
call dxget("scust",tmp$) \ X0 = tmp$!Starting Customer
call dxget("ecust",tmp$) \ if tmp$ = "" let X5 = 999999  else X5 = tmp$!Ending Customer
call dxget("scode",K6$) \ K6$ = UCase$(K6$),Blank$ !Starting Item Code
call dxget("ecode",K7$) \ K7$ = UCase$(K7$),EndParam$!Ending Item Code
call dxget("spersons",tmp$) \ S1 = tmp$!Starting Sales Persons
call dxget("epersons",tmp$) \ if tmp$ = "" let S2 = 999 else S2 = tmp$ !Ending Sales Persons
call dxget("date",tmp1$)  !Effective Date
call dxget("sort",tmp$) \ SORT = tmp$!Sort by  1 2 3
call dxget("prices",tmp$) \ UMTYPE = tmp$!Show Prices In 1 2 3
call dxget("lastprices",tmp$) \ if tmp$ = "" let LPFLAG = 0 else LPFLAG = 1!Print Last Prices
call dxget("bracket",tmp$) \ If tmp$ = "" Let BRACKET = -9 Else Let BRACKET = 1!Enter Bracket #
call dxget("stocks",tmp$) \ if tmp$ = "" let NSFLG = 0 else NSFLG = 1!Print Non-Stocks 
call dxget("whse",tmp$) \ if tmp$="" let whse=DFWH else let whse=tmp$
call dxget("costs",tmp$) \ let pcost=0 \ if UCase$(RTrim$(tmp$))="Y" let PCost=1 ! print costs
if custom_customer$="JPAPER"
	Call dxget("inclscp",tmp$)\ if tmp$="" let Inclscp=0 Else let Inclscp=1
Endif
if cost_lev[1]=0 let PCost=0 ! no load security - no print
! PCost=1;whse=1 ! TEST ONLY
!
!validation customer
If X0 < 0 Or X0 > 999999 Let e$ = "Invalid starting customer code, must be between 0 and 999999!" \ error 10000
If X5 < X0 Or X5 > 999999 Let e$ = "Invalid ending customer code, must be between starting customer code and 999999!" \ error 10000
!
!validation sales
If S1 < 0 Or S1 > 999 Let e$ = "Invalid starting sales persons, must be between 0 and 999!" \ error 10000
If S2 < S1 Or S2 > 999 Let e$ = "Invalid ending sales persons, must be between starting sales persons and 999!" \ error 10000
!
!validation item code
If K7$ < K6$ Let  e$ = "Invalid ending item code, must be >= than starting item code!" \ error 10000
!
! effective date
if tmp1$ <> ""
  tmp2$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
else
  tmp2$ = ARDATE
End if
errFlag = 0
JA1 = tmp2$
X2 = JA1 \ Gosub YMD2JUL \ if errFlag = 1 let e$ = "Invalid effective date!" \ error 10000
JDATE[1] = X2
DT = JA1;X2 = JA1 \ Gosub L_7700 \ EFFDATE$ = X$
!
tmp1$ = ""  \ tmp2$ = ""
If UMTYPE = 3 Let HEAD$ = "  LAST" Else Let HEAD$ = "CURRENT"
!
!validations warehouse
If P9$[32,32] = "Y"
  If WHSE < 0 Or WHSE > D9[5] Let e$ = "Invalid warehouse!" \ error 10000
Else
  WHSE = 0
End if
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!!Gosub L_15000
!!F9 = 0
!!For Y = 3 To 19
!!  !If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  On Y Gosub L_1160,L_1160,L_31200,L_31300,L_31400,L_1160,L_1160,L_1160,L_31700,L_1160,L_1160,L_31500
!!  On Y - 12 Gosub L_31600,L_31900,L_31800,L_1160,L_1160,L_32000,L_32300
!!  !If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Next Y
!!L_1050: Print @10,23;'CL';"ENTER #: Field to edit,  P: print,  E: end ";
!!Input ""Z1$
!!If Z1$ = "P" Goto L_1900
!!If Z1$ = "E" Goto L_9000
!!Y = Z1$
!!If Y >= 1 And Y <= 19
!!  !If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  On Y Goto L_1170
!!  On Y - 1 Gosub L_31000,L_31200,L_31300,L_31400,L_1160,L_1160,L_1160,L_31700,L_1160,L_1160,L_31500
!!  On Y - 12 Gosub L_31600,L_31900,L_31800,L_1160,L_1160,L_32000,L_32300
!!  !If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!End If 
!!Goto L_1050
!!L_1160: Return 
!!L_1170: If Err 0 Rem
!!For X = 2 To 30
!!  If X = 9 Goto L_1200
!!  Close #X
!!L_1200: Next X
!!Chain "MX114"
!
L_1900: Rem "========
If J8
  tmp$="SLSM",fdel$,"SLSM NAME",fdel$
  tmp$ = tmp$,"CUSTOMER",fdel$
  tmp$ = tmp$, "CUSTOMER NAME",fdel$
  tmp$=tmp$,"ADDRESS",fdel$
  tmp$=tmp$,"ADDRESS 2",fdel$
  tmp$=tmp$,"CITY",fdel$
  tmp$=tmp$,"STATE",fdel$
  tmp$=tmp$,"ZIP",fdel$
  tmp$ = tmp$ ,"PHONE",fdel$
  tmp$ = tmp$ ,"TERMS",fdel$
  tmp$=tmp$,"SHIP TO",fdel$
  tmp$=tmp$,"SHIP TO 2",fdel$
  tmp$=tmp$,"SHIP TO 3",fdel$
  tmp$ = tmp$ ,"ITEM CODE",fdel$
  tmp$ = tmp$ ,"DESCRIPTION",fdel$
  If P9$[26,26] = "Y" let tmp$ = tmp$ ,"DESCRIPTION2",fdel$
  tmp$ = tmp$ ,"CURRENT PRICE",fdel$
  IF CUSTOM_CUSTOMER$="JPAPER"
	if lpflag let tmp$ = tmp$ ,"SKU",fdel$
	let tmp$ = tmp$ ,"LOC",fdel$
  ELSE
	If LPFLAG  let tmp$ = tmp$ ,"LAST PRICE",fdel$
	tmp$ = tmp$ ,"CODE",fdel$
  Endif
  tmp$ = tmp$ ,"LAST ORDERED",fdel$
  tmp$ = tmp$ ,"UNIT LYTD",fdel$
  tmp$ = tmp$ ,"UNIT YTD",fdel$
  tmp$ = tmp$ ,"SALES MTD",fdel$
  tmp$ = tmp$ ,"SALES YTD",fdel$
  If Not(TBS[3]) If P9$[40,40] = "Y" let tmp$ = tmp$ ,"VENDOR ITEM",fdel$
  If UMTYPE > 1
    tmp$ = tmp$ ,"BASE PRICE",fdel$
  End If 
  tmp$=tmp$,"WHSE",fdel$
  if pcost and custom_customer$<>"JPAPER" ! print costs
	tmp$=tmp$,"CURRENT COST",fdel$,"GP%",fdel$
	if LPFlag tmp$=tmp$,"LAST COST",fdel$
  Endif
  !tmp$ = tmp$ ,"",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  !
End if
!COMM$ = "----";
!DEPT = -9999!!!
Gosub L_6000
!If Not(J8) Print @0,22;'CL';"Printing... please wait";'CE'; \ Signal 3,0
!If J8 Print 'CS';
!If Err 0 Gosub L_9600
If Err 0 Gosub L_9500
J1 = 90 \ J2 = 0
K4$ = "";J4$ = ""
C1$ = " ",C1$
K1$ = " "
L_2000: 
Search #9,3,1;K1$,R1,E 
If E Goto L_9100
L6[0] = 0 \ L6[1] = 0 \ SGPRICE = 0
If K4$ = "" Goto L_2012
If K1$[1,3] <> K4$[1,3] Gosub L_3800
L_2012: 
If J4$[1,1] <> "" If K1$[13,18] <> J4$[1,6] Gosub L_8500 \ Gosub L_5900
if custom_customer$="JPAPER"
	If K1$[37,37]="*" ! "Special price record
		Gosub setup_Special
		goto L_2015
	endif
endif
Mat Read #2,R1,0;P$;
Mat Read #2,R1,12;DF;
Mat Read #2,R1,16;C1;
Mat Read #2,R1,28;C2;
Mat Read #2,R1,46;C3;
Mat Read #2,R1,56;P2$;
Mat Read #2,R1,140;LPC4;
Mat Read #2,R1,168;LPR;
Mat Read #2,R1,198;LPR1;
Mat Read #2,R1,220;LPUNF;
Mat Read #2,R1,214;LPEUN; 
Mat Read #2,R1,262;PERM;
Read #2,R1,320;LPDEPT;
L_2015: ! 
if custom_customer$="JPAPER" Gosub Get_Cust: ! "need cust info for pricing
J3$ = "n/a"
If C3 Let J3$ = C3 Using "--#"
If TBS[3] Gosub L_2200 ! venditem(0) or prctype desc
X3 = 0 \ X9 = 0
UOM = C3[3]
If K4$ = "" Gosub L_3400
If Not(LPC4[3]) Gosub L_3500
DOLP = 1
If LPFLAG 
  Let X3 = C2[1];UOM = C3[3] 
  Gosub L_10000 ! convert?
  LP = X3;X3 = 0;LUNIT$ = UNIT$;UNIT$ = " ",UNIT$
  x3=c2[2];uom=C3[3] ! or costum? c3[2]
  gosub L_10000
  LCost=x3;x3=0;lcunit$=Unit$;Unit$=" ",unit$
endif
DOLP = 0
Gosub L_5800
If LPC4[3] Gosub L_4100 \ Goto END_PRICE
PROD = 99;JUMP_ = 0;AMQTY = 0;DEXT = 0
GET_PRICE: Rem "Use Call "Price" to get price/cost
For X = 0 To 30 \ SPECS[X] = 0 \ Next X
FLEPTR[1,0] = CH_PROD;FLEPTR[1,1] = R[CH_PROD]
FLEPTR[2,0] = CH_PRDWHSE;FLEPTR[2,1] = WHBLD[2]
FLEPTR[3,0] = CH_COMMD;FLEPTR[3,1] = R[CH_COMMD]
FLEPTR[4,0] = CH_LASTPRC;FLEPTR[4,1] = R1
if custom_customer$="JPAPER"
	If K1$[37,37]="*" Let FlePtr[4,1]=0 ! "Built from Product
else
	If K1$[29,29] = "*" Let FLEPTR[4,1] = 0
endif
FLEPTR[5,0] = CH_SPCPRC;FLEPTR[5,1] = 0
if custom_customer$="JPAPER"
	If K1$[37,37]="*" Let FlePtr[5,1]=R1 ! "
endif
FLEPTR[6,0] = CH_CNTRTH;FLEPTR[6,1] = 0
FLEPTR[7,0] = CH_CCODES;FLEPTR[7,1] = 0
FLEPTR[8,0] = CH_BRKTBL;FLEPTR[8,1] = 0
SPECS[0] = 299;SPECS[1] = AMQTY;SPECS[2] = WEIGHT;SPECS[3] = CFC1[1]
SPECS[4] = WHSE;SPECS[5] = DT;SPECS[6] = LPDEPT;SPECS[7] = CFC1[7]
If JDATE[1] > JDATE[0] ! "future eff date
  SPECS[5] = 0 - DT
End If 
SPECS[8] = 1;SPECS[9] = DFT_COST;SPECS[10] = 0;SPECS[11] = 0
SPECS[12] = 0;SPECS[13] = C3[2];SPECS[14] = C3[3];SPECS[15] = C3[3]
SPECS[16] = 0;SPECS[17] = COST;SPECS[18] = 0;SPECS[19] = 0
SPECS[20] = X3
!
Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
!
If SPECS[0] <> 0 Let SPECS[23] = X3;SPECS[17] = COST
C3[3] = SPECS[14];C3[4] = SPECS[15];COST = SPECS[17]
BASEX = SPECS[20];X3 = SPECS[23];PCTYPE = SPECS[25];CONTRACT = SPECS[27]
L9[0] = PCTYPE
prcsrc=l9[0]
if prcsrc>82 and prcsrc<118
	let prcsrc=prcsrc-100
endif
If prcsrc >= 2 And prcsrc <= 4 Let SPCL = 1
If prcsrc >= 6 And prcsrc <= 8 Let SPCL = 1
If prcsrc >= 11 And prcsrc <= 13 Let SPCL = 1
if prcsrc>=15 AND prcsrc<=16 LET SPCL=1

If C4[2] = 2 And Not(CONTRACT) And Not(SPCL)
  If BRACKET > 0
    SPECS[11] = BRACKET;SPECS[0] = 3;SPECS[20] = BASEX
    ! 
	Call SysPriceCalc(e$,FLEPTR[],SPECS[],MSGDESC$,0,"",rstr$)
	!
    If SPECS[0] <> 0 Let SPECS[17] = COST;SPECS[23] = X3
    COST = SPECS[17];X3 = SPECS[23];BASEX = SPECS[20]
  Else 
    X3 = 0
  End If 
End If 
END_PRICE: Rem 
CNVTU[0] = 0;CNVTU[1] = PFU1[0];CNVTU[2] = 2;CNVTA = BASEX
Gosub L_20000 \ BASEX = AMOUNT
If PFU1[0] > 0 Mat Read #12,PFU1[0],10;BUNIT$;
Gosub L_5000
L9[0] = 0;LPEUN[2] = 0;PERM[0] = 0;PERM[1] = 0
let prntflag=1
Goto L_2000
!
L_2200: Rem MORSE SPECIAL
If C3 >= -17 And C3 <= -8 Let J3$ = "MPB",((C3[0] + 7) * -1)
If C3 >= -6 And C3 <= -1 Let J3$ = "LP",(C3[0] * -1)
If C3 = -7 Let J3$ = "MP"
If C3 = 1 Let J3$ = "MXP"
If C3 = 2 Or C3 = 6 Or C3 = 12 Let J3$ = "CT"
If C3 = 3 Or C3 = 8 Let J3$ = "PPRM"
If C3 = 4 Let J3$ = "CCCT"
If C3 = 7 Let J3$ = "CPRM"
If C3 = 5 Let J3$ = "10 BRK"
If C3 = 9 Let J3$ = "QB",(Fra(LPR[0]) * 100)
If C3 = 10 Let J3$ = "DISC"
If C3 = 11 Let J3$ = "UPRM"
If C3 = 13 Let J3$ = "FP"
Return 

SetUp_Special: ! "Special/Contract Record
Mat Read #6,R1,0;P$;
Mat Read #6,r1,12;spc1;
Mat Read #6,r1,36;SPCUM;
Mat Read #6,r1,40;spcc3;
Read #6,r1,118;SPWH;
Let C4[2]=0 ! "Category?
Let CFC1[1]=0 ! "Order #
Let C3[0]=2 ! "price type
Let C3[1]=0 ! "dept
Let C3[2]=spcc3[2] \ If C3[2]=0 Let C3[2]=SPCUM[0] ! "Sell UM
Let C3[3]=SPCUM[0] ! "price UM
Let LPC4[3]=0 ! "it's a prod
Let C2[1]=0;C2[0]=0;C2[2]=0 ! "last qty/price/cost
Let UOM=C3[3]
Return

Get_Cust: ! "need cust info for pricing
LET k9$=K1$[13,18]
SEARCH #4,2,1;k9$,V1,E \ IF E>1 Error 11000 ! GOSUB Err_Search:
IF E Return
MAT  READ #4,V1,0;C1$;
MAT  READ #4,V1,142;CFC1;
MAT  READ #4,V1,194;C5;
MAT  READ #4,V1,210;CFC4; ! "A/R TOTALS
MAT  READ #4,V1,348;A2$;
MAT  READ #4,V1,388;A4$;
Return
!
L_3000: Rem "================================ get customer
if J8=0 If J1 + 7 > J9 Let J1 = 99 \ Return 
J4$ = K1$[13,18]
Search #4,2,1;J4$,V1,E 
If E Let C1$ = "ERROR! ",J4$," NOT FOUND!" \ Goto L_3050
Mat Read #4,V1,0;C1$;
Mat Read #4,V1,142;CFC1;
Mat Read #4,V1,194;C5;
Mat Read #4,V1,210;CFC4;
Mat Read #4,V1,348;A2$;
Mat Read #4,V1,388;A4$;
PHONE$ = " ",PHONE$;PHONE$[2,4] = C1$[21,23]
If C1$[28,30] = "   " Let PHONE$[5,5] = "-";PHONE$[6] = C1$[24,30]
If C1$[28,30] <> "   " Let PHONE$[1,1] = "(";PHONE$[5,5] = ")"
If C1$[28,30] <> "   " Let PHONE$[7] = C1$[24,26],"-",C1$[27,30]
L_3050: Rem PRINT
P3 = CFC1[7]
If C5[0] > 0 Or C5[0] <= 99
  Read #20,C5[0],0;C5$;
Else 
  C5$ = "Invalid Term"
End If 
if J8
  tmp2$=tmp0$ ! slsm data!
  tmp2$ = tmp2$,K1$[13,18], fdel$
  tmp2$ = tmp2$,rtrim$(C1$[31,60]),fdel$
  tmp2$=tmp2$,rtrim$(C1$[61,90]),fdel$
  tmp2$=tmp2$,rtrim$(C1$[91,120]),fdel$
  tmp2$=tmp2$,rtrim$(C1$[121,135]),fdel$
  tmp2$=tmp2$,C1$[136,137],fdel$
  tmp2$=tmp2$,rtrim$(A2$[1,10]),fdel$
  tmp2$ = tmp2$ ,PHONE$ ,fdel$
  tmp2$ = tmp2$ ,C5$ ,fdel$
  tmp4$ = "" \ Gosub L_3300 ! ship to 000000
  tmp2$=tmp2$,tmp4$,fdel$
  tmp4$="" \Gosub L_3310 ! ship to 000001
  tmp2$=tmp2$,tmp4$,fdel$
  tmp4$="" \ Gosub L_3310 ! ship to 000002
  tmp2$ = tmp2$,tmp4$,fdel$
Else
  Print #0;"\12\";"CUSTOMER: ";K1$[13,18]; Tab 40;"SHIP TO:"
  Print #0; Tab 3;PHONE$; Tab 25;C5$
  Print #0; Tab 1;C1$[31,60]; \ Gosub L_3300
  Print #0; Tab 1;C1$[61,90]; \ Gosub L_3310
  If C1$[91,100] = "          " Let J1 = J1 - 1 \ Goto L_3090
  Print #0; Tab 1;C1$[91,120]; \ Gosub L_3310
End if
L_3090: 
if J8=0 Print #0; Tab 1;C1$[121,135];", ";C1$[136,137];" ";A2$[1,10]; \ Gosub L_3310
J1 = J1 + 7
F7 = 99
L_3096: 
Return 1
!
L_3110: Rem FOR PAGE
if J8
  tmp2$=tmp0$ ! slsm info
  tmp2$ = tmp2$,J4$[1,6],fdel$
  tmp2$ = tmp2$ ,rtrim$(C1$[31,60]),fdel$ 
  tmp2$=tmp2$,rtrim$(C1$[61,90]),fdel$
  tmp2$=tmp2$,rtrim$(C1$[91,120]),fdel$
  tmp2$=tmp2$,rtrim$(C1$[121,135]),fdel$
  tmp2$=tmp2$,C1$[136,137],fdel$
  tmp2$=tmp2$,rtrim$(A2$[1,10]),fdel$
  tmp2$ = tmp2$ ,PHONE$,fdel$,rtrim$(C5$),fdel$
  tmp4$ = "" \ Gosub L_3300 ! ship to 000000
  tmp2$=tmp2$,tmp4$,fdel$
  tmp4$="" \Gosub L_3310 ! ship to 000001
  tmp2$=tmp2$,tmp4$,fdel$
  tmp4$="" \ Gosub L_3310 ! ship to 000002
  tmp2$ = tmp2$,tmp4$,fdel$
Else
  Print #0;"\12\";"CUSTOMER: ";J4$[1,6];" ";C1$[31,60]
  Print #0; Tab 3;PHONE$; Tab 25;C5$
End if
J1 = J1 + 4
If F7 <> 88 Let F7 = 99
Return 
!
L_3300: Rem GET SHIPTO'S
K25$ = " ",K25$ \ K25$[1,6] = CFC1[1] Using "######"
L_3310: 
Search #25,3,1;K25$,R25,E 
if E = 2 Goto L_3380
X2 = K25$[1,6] \ If X2 <> CFC1[1] Goto L_3380
Mat Read #25,R25,0;ST$;
if J8
  tmp4$ = tmp4$ ,rtrim$(K25$[8,13]),", ",rtrim$(ST$[1,30]),", ",rtrim$(ST$[91,105])
  tmp4$ = tmp4$ ,", ",ST$[106,107],", ",rtrim$(ST$[108,117]) 
Else
  Print #0; Tab 40;K25$[8,13]; Tab 50;ST$[1,30];" ";ST$[91,105];" ";
  Print #0;ST$[106,107];" ";ST$[108,117];
End if
L_3380: 
if not(J8) Print #0;""
Return 
!
L_3400: Rem "============================= get salesman
K4$ = " ",K4$
K4$ = K1$[1,3]
Search #7,2,1;K4$,R4,E 
If E Let S1$ = " *** NOT ON FILE ***" \ Goto L_3470
Mat Read #7,R4,0;S1$;
L_3470: 
Rem PRINT #0;TAB 50;"SALESMAN: ";K4$[1,3];" ";S1$
if j8 let tmp0$=K4$[1,3],fdel$,RTrim$(S1$[1,30]),fdel$
Return 
!
L_3500: Rem "============================== get product
J2$ = P$[1,12] \ If LPC4[3] Gosub L_30000
Search #3,2,1;J2$,R[CH_PROD],E 
If E Let A$ = " ",A$ \ A$[9,38] = "ERROR! PRODUCT NOT FOUND!" \ Goto L_3550
Mat Read #3,R[CH_PROD],0;A$;
Mat Read #3,R[CH_PROD],256;A;
Mat Read #3,R[CH_PROD],156;B;
Mat Read #3,R[CH_PROD],512;PFU1;
Mat Read #3,R[CH_PROD],554;PFU2;
Mat Read #3,R[CH_PROD],894;C4;
Mat Read #3,R[CH_PROD],938;PF_LOAD2;
Mat Read #3,R[CH_PROD],944;A3$;
Mat Read #3,R[CH_PROD],620;LM; 
PREC[0] = R[CH_PROD]
Gosub L_4500
If WHSE Gosub L_8100
Gosub L_12400
COST = B[8] \ If C2[2] = 0 Let C2[2] = B[8]
L_3550: 
If K1$[28,28] <> "*" Goto L_3590
If UMTYPE = 1 Let UOM = PFU1[12]
If UMTYPE = 2 Let UOM = PFU1[0]
P2$[81,84] = A$[152,155]
LPC4[1] = B[24]
LPC4[2] = B[11]
L_3590: Rem FALL THRU
T7[0] = 0;T7[1] = 0;T7[2] = 0;T7[3] = 0
For J = 0 To 2
  For I = 0 To 12
    S2[I,J] = 0;S1[I,J] = 0
  Next I
Next J
K26$ = " ",K26$;K26$[1,6] = C1[0] Using "######";K26$[7,18] = P$[1,12]
If K26$[1,18] = HLD$[1,18] Goto L_3690
HLD$ = K26$
L_3620: 
Search #26,3,1;K26$,R26,E
If E = 2 Goto L_3690
If K26$[1,18] <> HLD$[1,18] Goto L_3690
Mat Read #26,R26,16;S1;
Mat Read #26,R26,256;S2;
Gosub L_3720
T7[2] = T7[2] + S1[MTH,1]
NMTH = ARMTH + 1 \ If NMTH > 12 Let NMTH = 1
T7[1] = T7[1] + QTY
T7[3] = T7[3] + SLS
T7[8] = T7[8] + S2[NMTH,1]
T7[0] = T7[0] + LQTY
T7[6] = T7[6] + S2[MTH,1]
T7[7] = T7[7] + LSLS
Goto L_3620
!
L_3690: Rem ADD TO TOTALS
T7[4] = T7[4] + T7[2]
T7[5] = T7[5] + T7[3]
Rem LET T7[0]=S2[0,0] ! LYTD UNITS - WAS ACT. STUFFING WHOLE OF L YEAR-ONLY LAST WARE-OVERWRITING ACCUM LQTY-WMB 2/03
Return 
!
L_3720: Rem GET ONLY YTD THRU MONTH
SLS = 0;QTY = 0;LSLS = 0;LQTY = 0
X2 = NOMTHS + 1
X = BOYMTH
For I = 1 To X2
  SLS = SLS + S1[X,1];LSLS = LSLS + S2[X,1]
  QTY = QTY + S1[X,0];LQTY = LQTY + S2[X,0]
  X = X + 1 \ If X > 12 Let X = X - 12
Next I
Return 
!
L_3800: Rem "==================================== totals
Gosub L_8500
Gosub L_8000
J4$ = "";F7 = 0
Return 
!
L_4100: Rem   SET VARIABLES FOR NON STOCKS
A$[9,38] = P2$[21,50]
B[24] = 0
A$[93,112] = P2$[1,20]
A$[63,92] = P2$[51,80]
J3$ = " ",J3$
B[8] = C2[2]
A3$[13,27] = " ",A3$[13,27]
T7[0] = 0;T7[1] = C2[0]
X3 = C2[1]
TYUNIT = C2[0];LYUNIT = 0
PFU1[0] = LPEUN[0];PFU1[1] = C3[2];PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[9] = C3[2]
PFU1[11] = C3[4]
PFU1[12] = C3[3]
Mat Read #2,R1,220;PFU2;
Mat A = Zer
C4[2] = 0
Gosub L_10000 \ LP = X3
J3$ = "N/S     "
If PFU1[12] > 0 Mat Read #12,PFU1[12],10;PUNIT$;
CNVTU[0] = 0;CNVTU[1] = PFU1[0];CNVTU[2] = 2;CNVTA = C2[2]
Gosub L_20000 \ BASEX = AMOUNT
If PFU1[0] > 0 Mat Read #12,PFU1[0],10;BUNIT$;
Return 
!
L_4500: Rem "================================= get commodity
K3$ = " ",K3$ \ K3$ = A$[152,155]
Search #8,2,1;K3$,R[CH_COMMD],E 
If E Goto L_4550
Goto L_4580
L_4550: Rem "error
P4[P3] = 0
L_4580: Return 
!
L_5000: Rem "===================================== print line
If Not(LPC4[3]) Gosub L_10000 \ Gosub L_10070
if J8
  tmp1$ = rtrim$(P$[1,12]),fdel$
  tmp1$ = tmp1$ ,rtrim$(A$[9,38]) ,fdel$
  If P9$[26,26] = "Y" Let tmp1$ = tmp1$ ,rtrim$(A$[63,92]),fdel$
  If Not(X3) And UMTYPE <> 2 Let tmp1$ = tmp1$ ,"ASK" 
  If X3 And UMTYPE <> 2 let tmp1$ = tmp1$ ,X3 Using PMASK$,"/",PUNIT$
  tmp1$ = tmp1$ ,"",fdel$
  IF CUSTOM_CUSTOMER$="JPAPER"
	if lpflag ! "hidden cost
		Let J5$=Cost Using PMask$
		Let j1$=" ",J1$;J1$=""
		For X=1 to len(j5$)
			If J5$[X,X]<>" " and J5$[x,x]<>"."
				Let J1$[Len(j1$)+1]=J5$[x,x]
			Endif
		Next X
		tmp1$ = tmp1$ ,"1",J1$,"5",fdel$  !  ;
		! PRINT #0; USING PMASK$; TAB 60 ;LP;"/";lunit$; !"last price
	Endif
	Let J3$=" ",j3$;X3[1]=0
	!If Cost<>0  ! NOT USING GTM
	!IF X3[0]<>0
	!	Let X3[1]=FNT((x3-Cost)*100/Cost)
	!ENDIF
	IF X3[0]<>0
		LET X3[1]=FNT((X3-COST)*100/X3) 
	ENDIF
	Let J5$=X3[1] Using "----#.#"
	Let J3$=""
	For X=1 to len(J5$)
		If J5$[x,x]<>" " And J5$[x,x]<>"."
			let J3$[len(j3$)+1]=J5$[x,x]
		Endif
	Next X
	tmp1$ = tmp1$ ,"A",J3$,"1",fdel$
	LET X2=C1[2] \ GOSUB Num2Date:
	If K1$[37,37]="*" Let X$="  N/A   "
	tmp1$ = tmp1$ ,X$[1,8],fdel$ ! "order date
  ELSE
	If LPFLAG  Let tmp1$ = tmp1$ ,LP Using PMASK$ ,"/",LUNIT$,fdel$
	tmp1$ = tmp1$ ,J3$,fdel$
	X2 = C1[2] \ Gosub L_7700 
	tmp1$ = tmp1$ ,X$[1,8],fdel$
  Endif
  If not(LPC4[3])
    tmp1$ = tmp1$ ,T7[0] Using "-------#",fdel$
    tmp1$ = tmp1$ ,T7[1] Using "-------#",fdel$
    tmp1$ = tmp1$ ,T7[2] Using "------#.##",fdel$
    tmp1$ = tmp1$ ,T7[3] Using "-------#.##",fdel$
  Else
    tmp1$ = tmp1$ ,"",fdel$
	tmp1$ = tmp1$ ,"",fdel$
	tmp1$ = tmp1$ ,"",fdel$
	tmp1$ = tmp1$ ,"",fdel$
  End if
  If Not(TBS[3]) If P9$[40,40] = "Y" let tmp1$ = tmp1$ ,rtrim$(A$[93,110]),fdel$
  !If P9$[26,26] = "Y" let tmp1$ = tmp1$ ,A$[63,92] ,fdel$
  If UMTYPE > 1
    If BASEX let tmp1$ = tmp1$ ,BASEX Using PMASK$,"/",BUNIT$ ,fdel$
    If Not(BASEX) tmp1$ = tmp1$ ,"ASK" ,fdel$
  End If 
  tmp1$=tmp1$,Str$(Whse),fdel$
  if pcost and custom_customer$<>"JPAPER"
	tmp1$=tmp1$,Cost using Pmask$,"/",PUNIT$,fdel$
	x3[1]=0 ! gp
	If X3[0] let X3[1]=(x3-cost)*100/X3
	TMP1$=tmp1$,X3[1] using "-----#.##",fdel$
	if LPFLAG let tmp1$=tmp1$,LCOST using PMASK$,"/",LCunit$,fdel$
  Endif
  tmp$ = tmp2$ ,tmp1$
  call addtostr(e$,rstr$,tmp$+rdel$)
 !
Else
  Print #0; Tab 0;P$[1,12];
  Print #0; Tab TBS[0];A$[9,38];
  If Not(X3) And UMTYPE <> 2 Print #0; Tab TBS[1];"    ASK";
  If X3 And UMTYPE <> 2 Print #0; Using PMASK$; Tab TBS[1];X3;"/";PUNIT$;
  IF CUSTOM_CUSTOMER$="JPAPER"
	if lpflag ! "hidden cost
		Let J5$=Cost Using PMask$
		Let j1$=" ",J1$;J1$=""
		For X=1 to len(j5$)
			If J5$[X,X]<>" " and J5$[x,x]<>"."
				Let J1$[Len(j1$)+1]=J5$[x,x]
			Endif
		Next X
		Print #0;Tab 60;"1";J1$;"5";
		! PRINT #0; USING PMASK$; TAB 60 ;LP;"/";lunit$; !"last price
	Endif
	Let J3$=" ",j3$;X3[1]=0
	!If Cost<>0  ! NOT USING GTM
	!IF X3[0]<>0
	!	Let X3[1]=FNT((x3-Cost)*100/Cost)
	!ENDIF
	IF X3[0]<>0
		LET X3[1]=FNT((X3-COST)*100/X3) 
	ENDIF
	Let J5$=X3[1] Using "----#.#"
	Let J3$=""
	For X=1 to len(J5$)
		If J5$[x,x]<>" " And J5$[x,x]<>"."
			let J3$[len(j3$)+1]=J5$[x,x]
		Endif
	Next X
	PRINT #0; TAB 71;"A";J3$;"1";
	LET X2=C1[2] \ GOSUB Num2Date:
	If K1$[37,37]="*" Let X$="  N/A   "
	PRINT #0; TAB 81;X$[1,8]; ! "order date
	IF LPC4[3] GOTO L_5330:
  ELSE
	  If LPFLAG Print #0; Using PMASK$; Tab 60;LP;"/";LUNIT$;
	  Print #0; Tab 73;J3$;
	  X2 = C1[2] \ Gosub L_7700 \ Print #0; Tab 81;X$[1,8];
	  If LPC4[3] Goto L_5330
  Endif
  Print #0; Using "-------#"; Tab 89;T7[0];
  Print #0; Using "-------#"; Tab 100;T7[1];
  Print #0; Using "------#.##"; Tab 110;T7[2];
  Print #0; Using "-------#.##"; Tab 120;T7[3];
  L_5330: Print #0;""
  If Not(TBS[3]) If P9$[40,40] = "Y" Print #0; Tab 0;A$[93,110];
  If P9$[26,26] = "Y" Print #0; Tab TBS[0];A$[63,92];
  If PCost and custom_customer$<>"JPAPER"
	Print #0; using PMask$;tab TBS[1];Cost;
	x3[1]=0 ! gp
	If X3[0] let X3[1]=(x3-cost)*100/X3
	Print #0; using "---#.##%";x3[1];
	if lpflag Print #0;using PMask$;Tab 60;LCost;
	Print #0;"  "; ! incase base prnt too
  Endif
  If UMTYPE > 1
    If BASEX Print #0; Using PMASK$; Tab TBS[1];BASEX;"/";BUNIT$;
    If Not(BASEX) Print #0; Tab TBS[1];"    ASK";
  End If 
  Print #0;" "
End if
J1 = J1 + 2
L_5420: Return 
!
L_5800: Rem "==================================== headings
If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
if J8=0
  If J2 Print #0;"\14\";
  J2 = J2 + 1 \ J1 = 4
  Print #0;"\12\";
  Print #0; Tab 2;Msc$(3);
  Print #0; Tab (60 - Len(CNAME$) / 2);CNAME$;
  If WHSE Print #0; Tab 90;"WAREHOUSE";WHSE;
  Print #0; Tab 119;"PAGE";J2
  Print #0; Tab 5;"EFFECTIVE DATE: ";EFFDATE$;
  Print #0; Tab 45;"CUSTOMER  PRICE  LISTING";
  Print #0;" MONTH -";ARMTH
  Print #0; Tab 50;"SALESMAN: ";K4$[1,3];" ";S1$
end if
If F7 = 1 Goto L_5970
If F7 = 88 Or F7 = 99
  Gosub L_3110 \ Goto L_5910
End If 
L_5900: 
Gosub L_3000 \ Goto L_5800  !gosub has return 1
L_5910: 
if J8=0
  Print #0;""
  Print #0; Tab 1;"ITEM CODE"; Tab TBS[0];"DESCRIPTION";
  If UMTYPE <> 2 Print #0; Tab 47;"CURRENT"; Else Print #0; Tab 47;"BASE";
  If LPFLAG Print #0; Tab 61;"LAST";
  Print #0; Tab 81;"LAST";
  Print #0; Tab 92;"UNITS";
  Print #0; Tab 102;"UNITS"; Tab 113;"SALES $"; Tab 124;"SALES $"
  If Not(TBS[3]) If P9$[40,40] = "Y" Print #0; Tab 1;"VENDOR ITEM";
  If UMTYPE <> 3 Print #0; Tab 47;"PRICE"; Else Print #0; Tab 47;"BASE";
  IF CUSTOM_CUSTOMER$="JPAPER"
	if lpflag PRINT #0; TAB 61;"SKU";
	print #0; tab 71; "LOC"; 
  ELSE
	If LPFLAG Print #0; Tab 61;"PRICE";
	Print #0; Tab 73;"CODE";
  Endif
  Print #0; Tab 81;"ORDERED";
  Print #0; Tab 92;"LYTD"; Tab 103;"YTD";
  Print #0; Tab 115;"MTD"; Tab 126;"YTD";
  Print #0;" "
endif
F7 = 99
L_5970: 
J1 = J1 + 3
L_5990: Return 
!
L_6000: Rem "================================== sort
K1$ = " ",K1$ \ Z1 = 0
K1$ = X0 Using "######"
!Print @0,22;"Sorting...please wait";'CL';
IF CUSTOM_CUSTOMER$="JPAPER"
	LET K4$=" ",K4$ \ LET Z1=0;NumRec=0
	LET K4$=X0 USING "######" ! SET TO STARTING CUSTOMER	
	Let K4$=" ",K4$;K4$=X0 Using "######"
	Search #4,2,1;K4$,R4,e \ if e>1 Error 11000 ! Gosub Err_Search:
	If Not(E) Goto L_6010:
	CustFleLoop: ! "through all custs in range
	Search #4,3,1;K4$,R4,e \ if e=2 Goto L_6400:
	If E Error 11000 ! Gosub Err_Search:
	L_6010: ! "
	Let X2=K4$[1,6] \ If X2>X5 Goto L_6400:
	MAT  READ #4,R4,0;C1$;
	IF AUTH$="Y" AND C1$[138,138]<>"Y" GOTO CustFleLoop: ! "only want auth buy list customers
	MAT  READ #4,R4,142;CFC1;
	MAT  READ #4,R4,194;C5;
	IF CFC1[1]<X0 GOTO CustFleLoop: ! "cust code too low
	IF CFC1[1]>X5 GOTO L_6400: ! "cust code too high - done
	IF CFC1[2]<S1 GOTO CustFleLoop: ! "salesrep too low
	IF CFC1[2]>S2 GOTO CustFleLoop: ! "salesrep too high
	Let K1$=" ",k1$;K1$=K4$[1,6]
endif
L_6220: ! 
Search #2,3,1;K1$,R1,E 
!If E Goto L_6400
IF E<>0 
	if custom_customer$="JPAPER"
		GOTO LPLDone:
	else
		goto L_6400:
	endif
endif
If K1$[1,6]<>K4$[1,6] ! only on jpaper is k4$ set/used
	if custom_customer$="JPAPER"
		GOTO LPLDone:
	!else
	!	goto L_6400:
	endif
endif
If K1$[11,22] < K6$ Goto L_6220
If K1$[11,22] > K7$ Let K1$[11,22] = "zzzzzzzzzzzz" \ Goto L_6220
Mat Read #2,R1,0;P$;
Mat Read #2,R1,16;C1;
Mat Read #2,R1,28;C2;
Mat Read #2,R1,56;P2$;
Mat Read #2,R1,140;LPC4;
J4$ = C1[0] Using "######"
If Not(NSFLG) If LPC4[3] Goto L_6220
Search #4,2,1;J4$,V1,E 
If E Goto L_6220
Mat Read #4,V1,0;C1$;
If AUTH$ = "Y" And C1$[138,138] <> "Y" Goto L_6220
Mat Read #4,V1,142;CFC1;
Mat Read #4,V1,194;C5;
If CFC1[1] < X0 Goto L_6220
IF CUSTOM_CUSTOMER$="JPAPER"
	IF CFC1[1]>X5 GOTO LPLDone: ! "cust code too high
ENDIF
If CFC1[1] > X5 Goto L_6400
If CFC1[2] < S1 Goto L_6220
If CFC1[2] > S2 Goto L_6220
if a5[5]<>0
	if cfc1[2]<>a5[5]  goto L_6220:   !"cct#242616
ENDIF
A1$ = " ",A1$ \ A1$[1,3] = CFC1[2] Using "###"
If SORT = 1 Let A1$[4,9] = K1$[1,6]
If SORT = 2 Let A1$[4,12] = C1$[31,39]
If SORT = 3 Let A1$[4,12] = C1$[121,129]
A1$[13,18] = K1$[1,6];A1$[19,30] = P$[1,12];A1$[31,36] = R1 Using "######"
Search #9,4,1;A1$,R1,E 
If E Let e$ = "syserrorfile 114b sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",A1$ \ error 10000
Z1 = CFC1[1]
Goto L_6220
L_6400: 
Return 
!
LPLDone: ! "got to check spc/cont
If Not(INCLSCP) Goto CustFleLoop: ! "don't want contr/spcl
MAT  READ #4,R4,0;C1$;
IF AUTH$="Y" AND C1$[138,138]<>"Y" GOTO CustFleLoop: ! "only want auth buy list customers
MAT  READ #4,R4,142;CFC1;
MAT  READ #4,R4,194;C5;
IF CFC1[1]<X0 GOTO CustFleLoop: ! "cust code too low
IF CFC1[1]>X5 GOTO LPLDone: ! "cust code too high
IF CFC1[2]<S1 GOTO CustFleLoop: ! "salesrep too low
IF CFC1[2]>S2 GOTO CustFleLoop: ! "salesrep too high
LET A1$=" ",A1$ \ LET A1$[1,3]=CFC1[2] USING "###" ! "salesrep
IF SORT=1 LET A1$[4,9]=K4$[1,6] ! "cust # sort
IF SORT=2 LET A1$[4,12]=C1$[31,39] ! "name sort
IF SORT=3 LET A1$[4,12]=C1$[121,129] ! "city sort
LET A1$[13,18]=K4$[1,6] !";A1$[19,30]=P$[1,12];A1$[31,36]=R1 USING "######" ! "cust, prod, REC #
Let A1$[37]=" " ! "no indicator
Let Z1=CFC1[1]
If INCLSCP Gosub Get_SPCCONT:
Goto CustFleLoop:

Get_SPCCont: ! "check special/Contract files
Let K9$=A1$ ! "last key for Cust
Let K2$=" ",k2$;k2$=Z1 Using "######"
SPR_Loop: ! " 
Search #6,3,1;k2$,R6,e \ if e=2 goto Chk_Contr:
If E Error 11000 ! Gosub Err_Search:
Let x2=k2$[1,6] \ If x2<>Z1 Goto Chk_Contr:
Let NumRec=NumRec+1
! If Not(Fra(NumRec/100)) Print @40,22;NumRec;K4$
If K2$[7,7]="*" Or K2$[7,7]="#" or K2$[7,7]="&" Goto SPR_Loop:
If K2$[7,18]<K6$ Goto SPR_Loop:
if K2$[7,18]>K7$ Goto SPR_Loop:
Mat Read #6,r6,12;SPC1;
Let X2=SPC1[2] \ If X2 Gosub YMD2Jul: \ Let X2=0
if JDate[0]<X2 Goto SPR_Loop: ! "not started yet
Let X2=SPC1[4] \ If X2<>999999 Gosub YMD2Jul: \ Let X2=99999
If Jdate[0]>X2 Goto SPR_Loop: ! "ended
Read #6,r6,118;SPWH;
If Whse And SPWH And SPWH<>Whse Goto SPR_Loop: ! "wrong whse
Let K3$=" ",k3$;K3$=K9$[1,18]
Let K3$[19,30]=K2$[7] ! "prod code
Let K3$[31]=""
Search #9,2,1;K3$,R9,E \ if e>1 Error 11000 ! Gosub Err_Search:
If E ! "not there already - add it
  Let K3$[31,36]=R6 Using "######"
  Let K3$[37]="*" ! "indicator
  Search #9,4,1;K3$,R6,e \ if e>1 Error 11000 ! Gosub Err_Search:
Endif
Goto SPR_LOOP:

Chk_Contr: ! "contract's check
Let K2$=" ",K2$;K2$[1,1]="C"  ! "contracts start w/"C"
SPCLoop: ! "
Search #6,3,1;K2$,R6,e \ if e=2 goto SPContDone:
If E Error 11000 ! Gosub Err_Search:
If K2$[1,1]<>"C" Goto SPContDone:
Let NumRec=NumRec+1
! If Not(Fra(NumRec/100)) Print @40,22;NumRec;K4$
If K2$[7,7]="*" Or K2$[7,7]="#" or K2$[7,7]="&" Goto SPCLoop:
If K2$[7,18]<K6$ Goto SPCLoop:
If K2$[7,18]>K7$ Goto SPCLoop:
Mat Read #6,r6,12;SPC1;
Let X2=SPC1[2] \ If X2 Gosub YMD2Jul: \ Let X2=0
if JDate[0]<X2 Goto SPCLoop: ! "not started yet
Let X2=SPC1[4] \ If X2<>999999 Gosub YMD2Jul: \ Let X2=99999
If Jdate[0]>X2 Goto SPCLoop: ! "ended
Read #6,r6,118;SPWH;
If Whse And SPWH And SPWH<>Whse Goto SPCLoop: ! "wrong whse for contract
Let K3$=" ",K3$
Let K3$=k2$[1,6];K3$[7]=Z1 Using "######"
Search #10,2,3;K3$,R0,E \ if e>1 Error 11000  ! Gosub Err_Search:
If E Goto SPCLoop: ! "not for this Cust
Let K3$=" ",k3$;K3$=K9$[1,18]
Let K3$[19,30]=K2$[7] ! "prod code
Let K3$[31]=""
Search #9,2,1;K3$,R9,E \ if e>1 Error 11000 ! Gosub Err_Search:
If E ! "not there already - add it
  Let K3$[31,36]=R6 Using "######" ! "special price record
  Let K3$[37]="*" ! "indicator
  Search #9,4,1;K3$,R6,E \ if e>1 Error 11000  ! Gosub Err_Search:
Endif
Goto SPCLoop:

SpContDone: ! "Done
Let A1$=K9$
RETURN 
!
OTHER_NAMES: Rem GET ALTERNATE NAMES FIELD (IE:PRODUCT CODE)
J2 = (J0 - 1) * 10
Read #1,18,J2;D1$;
Return 
!
!!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!JA2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 <> 3 If J0 <> 4 Goto L_7070
!!If J0 = 3 Let J2$ = "#",J2$
!!If J0 = 4 Let J2$ = "-",J2$
!!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!L_7070: J1$[J3 + 1] = ""
!!If J0 < 3 Goto L_7105
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If JA1 Let J1$ = "Y"
!!If J0 = 6 Goto L_7105
!!If J0 <> 5 Goto L_7100
!!J9$ = JA1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!!L_7100: J1$ = JA1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) <= J3 Goto L_7130
!!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!!L_7145: For JA8 = 1 To Len(J9$)
!!  If J9$[JA8,JA8] >= " " If J9$[JA8,JA8] <= "~" Next JA8 \ Goto L_7160
!!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!!L_7165: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto L_7345
!!L_7185: JA9 = 0;JA9[1] = 0 \ For JA8 = 1 To Len(J9$)
!!  If J0 = 4 If JA8 = 1 If J9$[1,1] = "-" Goto L_7235
!!  If J0 = 4 If JA8 = 1 If J9$[1,1] = "+" Goto L_7235
!!  If J9$[JA8,JA8] > "/" If J9$[JA8,JA8] < ":" Goto L_7230
!!  If J9$[JA8,JA8] = " " Goto L_7235
!!  If JA8 <> 1 Or Len(J0$) < 11 Goto L_7210
!!  J7$ = "" \ Let J7$ = J0$[10] To J9$[JA8,JA8] : J7 \ If J7 Goto L_7235
!!L_7210: If J9$[JA8,JA8] <> "." Goto L_7250
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!!  If JA9 Goto L_7250
!!  JA9 = 1
!!L_7230: If JA9 Let JA9 = JA9 + 1
!!  If Not(JA9) Let JA9[1] = JA9[1] + 1
!!L_7235: Next JA8
!!If J0 = 5 Goto L_7265
!!If JA9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!!L_7242: If J6 If JA9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!!If J0 = 4 If J6 If JA9[1] > (J3 - J6 - 2) Let JA9[1] = 99 \ Goto L_7242
!!JA1 = J9$ \ J$ = JA1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!L_7260: Gosub L_7600 \ Goto L_7105
!!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!!JA9[0] = J9$[1,2] \ JA9[1] = J9$[3,4] \ JA9[2] = J9$[5,6]
!!If JA9 = 0 If JA9[1] = 0 If JA9[2] = 0 Goto L_7315
!!If JA9[1] < 1 Goto L_7325
!!On JA9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!!On JA9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!!Goto L_7325
!!L_7285: If JA9[1] > 30 Goto L_7325
!!L_7290: If JA9[1] > 31 Goto L_7325
!!Goto L_7315
!!L_7300: If JA9[1] > 29 Goto L_7325
!!If Not(Fra(JA9[2] / 4)) Goto L_7315
!!If JA9[1] > 28 Goto L_7325
!!L_7315: JA1 = JA9[2] * 10 ^ 4 + JA9 * 10 ^ 2 + JA9[1] \ X2 = JA1 \ Gosub L_7700
!!J$ = X$ \ J3 = 8 \ Goto L_7345
!!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!!L_7330: If J9$ = "N" Let JA1 = 0 \ J$ = "N" \ Goto L_7345
!!If J9$ = "Y" Let JA1 = 1 \ J$ = "Y" \ Goto L_7345
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!!Print @0,Msc(34) - 1;'CL'; \ Return
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
Num2Date: ! 2nd name
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If X2 = 0 Let X$ = "        "
Return 
Date2Num: ! *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
 LET X2=X$[4,5] \ LET X1=X$[1,2] \ LET X2=X2+X1*10^2
 LET X1=X$[7,8] \ LET X2=X2+X1*10^4
RETURN 

Jul2Date: ! REM DATE JULIAN X2 TO X$  
LET DT3[0]=X2;FLAG=1;X$=" "
If x2<=0 Let X$=" ",x$ \ return
CALL "JULIANUTIL",DT3[],X$,FLAG
RETURN 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1 \ Return 
X2 = X$[1,5]
Return !1
Jul2YMD:  !  REM CONVERT JULIAN TO YYMMDD       
LET DT3[0]=X2;DT3[1]=X2;FLAG=0
if X2<=0 Return
CALL "JULIANUTIL",DT3[],X$,FLAG
RETURN 

YM2LongYear: ! Rem Convert YYMM to YYYYMM
If X2<=0 Return
Let X$=X2 Using "&&&&"
Let DT3[0]=X$[1,2];DT3[1]=X$[3,4]
If DT3[0]>67 let DT3[0]=1900+DT3[0]
If DT3[0]<68 Let DT3[0]=2000+DT3[0]
Let X$[1,4]=DT3[0] Using "&&&&"
Let X$[5,6]=DT3[1] Using "&&"
Let X2=X$[1,6]
Return
!
L_8000: Rem SLSM TOTALS
F7 = 1 \ If J1 + 3 > J9 Let J1 = 99 \ Gosub L_5800
if not(J8)
  Print #0; Tab 70;"** SALESMAN TOTALS THIS YEAR:";
  Print #0; Using "-------#.##"; Tab 109;T9[4];
  Print #0; Using "-------#.##"; Tab 120;T9[5]
  Print #0; Tab 70;"** SALESMAN TOTALS LAST YTD :";
  Print #0; Using "-------#.##"; Tab 109;T9[6];
  Print #0; Using "-------#.##"; Tab 120;T9[7]
  Print #0; Tab 61;"** SALESMAN TOTALS LAST YEAR NEXT MONTH:";
  Print #0; Using "-------#.##"; Tab 109;T9[8];
  Print #0; Using "-------#.##"; Tab 120;T9[9]
End if
J1 = 999
For I = 0 To 10
  T9[I] = 0
Next I
Gosub L_3400
Return 
!
L_8100: Rem GET WHSE
WHPROD$[1,12] = A$[140,151]
WHBLD[0] = 17;WHBLD[1] = WHSE;WHBLD[2] = 0
Call "GETWHSE.dl4",WHPROD$,WHBLD[],W1$,W3[],WHPARC[],WHLV[],W7[],WHMISC[],E,e$,rstr$
If P9$[32,32] = "Y" Gosub L_69000
If WHBLD[2] > 0 Mat Read #17,WHBLD[2],842;WHLM;
B[8] = W3[17];B[10] = W3[16];B[21] = W3[15];B[22] = WHPARC[0]
C4[3] = WHPARC[1];C4[4] = W3[18];PF_LOAD2 = W3[14]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
L_8500: Rem "================================= CUSTOMER TOTALS
F7 = 88;T7[9] = T7[7] + T7[8]
If J1 + 5 > J9 Let J1 = 99 \ Gosub L_5800
if not(J8)
  Print #0;""
  IF CUSTOM_CUSTOMER$="JPAPER"
	PRINT #0; TAB 1;"TOT A/R BAL: ";
  ELSE
	Print #0; Tab 1;"BAL: ";
  Endif
End if
ARAMT = CFC4[0] + CFC4[2] + CFC4[3] + CFC4[4] + CFC4[5] - CFC4[1]
if not(j8)
  Print #0; Using "--------#.##";ARAMT;
  Print #0; Tab 70;"** CUSTOMER TOTALS THIS YEAR:";
  Print #0; Using "-------#.##"; Tab 109;T7[4];
  Print #0; Using "-------#.##"; Tab 120;T7[5]
  Print #0; Tab 70;"** CUSTOMER TOTALS LAST YTD :";
  Print #0; Using "-------#.##"; Tab 109;T7[6];
  Print #0; Using "-------#.##"; Tab 120;T7[7]
  Print #0; Tab 61;"** CUSTOMER TOTALS LAST YEAR NEXT MONTH:";
  Print #0; Using "-------#.##"; Tab 109;T7[8];
  Print #0; Using "-------#.##"; Tab 120;T7[9]
End if
For I = 0 To 10
  T9[I] = T9[I] + T7[I]
  T7[I] = 0
Next I
if not(j8) Print #0;""
F7 = 0
J1 = J1 + 5
Return 
!
L_10000: Rem CONVERT
X6 = X3
If UOM > 0 Mat Read #12,UOM,10;UNIT$;
CNVTU[0] = 0
CNVTU[1] = UOM
CNVTU[2] = 2
X3 = X3 - L6[1]
If L6[0] Let X3 = X3 - (X3 * (L6[0] / 100))
X6 = X3
CNVTA = X3
Gosub L_20000
X3 = FNP(AMOUNT)
cnvta=Cost
gosub L_20000
Cost=fnp(amount)
Return 
L_10070: CNVTU[0] = 0
CNVTU[1] = UOM
CNVTU[2] = 1
CNVTA = T7[0]
Gosub L_20000
T7[0] = AMOUNT
If UOM > 0 Mat Read #12,UOM,10;PUNIT$;
If UOM = -1 Let PUNIT$ = "CWT "
If UOM = -2 Let PUNIT$ = "LOT "
If UOM = -3 Let PUNIT$ = "LB  "
CNVTU[0] = 0
CNVTU[1] = UOM
CNVTU[2] = 1
CNVTA = T7[1]
Gosub L_20000
T7[1] = AMOUNT
Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA;B[8] = W3[17]
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA;PF_LOAD2 = W3[14]
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1]
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
!!L_15000: Rem ================================================ screen
!Window Off \ Window On 
!Print @0,0;"MX114B";@26,0;"SALESMAN/CUSTOMER PRICE LIST"
!Print @0,2;" 1> <C>ustomer Version <S>alesperson Version <O>rder sheet <P>rice review? S";'CL'
!Print @0,3;" 2> PRINT    1.Regular, or 2:with $ Sales Report? (1,2)    2";'CL';
!Print @0,4;'CL';
!Print @18,5;"-STARTING-";@33,5;"-ENDING-"
!Print @0,6;" 3> CUSTOMERS";'CL';@45,6;" 9> EFFECTIVE DATE: ";'CL';
!J0 = 6 \ Gosub OTHER_NAMES \ Print @0,7;" 4> ";D1$;'CL';@48,7;"(for special price calculation)"
!Print @0,8;" 5> SALESPERSONS";'CL'
!Print @0,9;'CL';
!Print @0,10;'CL';
!Print @0,11;'CL';
!Print @0,12;'CL';
!Print @0,13;'CL';
!Print @0,14;" 12> SORT BY 1:CODE, 2:NAME, or 3:CITY ? ";'CL'
!Print @0,15;" 13> SHOW PRICES IN: 1-PRICING UM, 2-BASE UM, 3-BOTH? ";'CL';
!Print @0,16;" 14> PRINT LAST PRICES?  (Y/N) ";'CL';
!Print @0,17;" 15> ENTER BRACKET # TO USE FOR TEN BRACKET PRICES OR <CR> FOR NO PRICE ";'CL';
!Print @0,19;'CL';
!Print @0,20;'CL'
!If P9$[32,32] = "Y" Print @0,21;" 18> ENTER WAREHOUSE TO PRINT FOR, ''0'' FOR MAIN ";'CE'; Else Print @0,21;'CE'
!Print @0,22;" 19> PRINT NON-STOCKS? (Y/N) ";
!Window Off 
!!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: 
! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: 
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub L_9580
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub L_9580
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !\ Gosub L_9580
AMOUNT = CNVTA
L_20160: Return 
!
L_30000: Rem ===== set units for conversions (stock/nonstock version)
A[6] = LPR1[0] \ A[5] = LPUNF[5]
If Not(A[5]) Let A[5] = 1 \ LPUNF[5] = 1
PFU1[0] = LPEUN[0];PFU1[1] = C3[2]
PFU1[2] = C3[3];PFU1[3] = C3[4]
PFU1[4] = LPEUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = C3[2];PFU1[9] = C3[2];PFU1[10] = LPEUN[1]
PFU1[11] = C3[4];PFU1[12] = C3[3]
If Not(LPC4[3]) Goto L_30060
PFU1[13] = C3[2];PFU1[16] = LPEUN[0];PFU1[17] = LPEUN[0]
PFU1[18] = C3[2];PFU1[19] = C3[2]
L_30060: PFU2[0] = LPUNF[0];PFU2[1] = LPUNF[1]
PFU2[2] = LPUNF[2];PFU2[3] = LPUNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Return 
!
!L_31000: J5$ = " ",J5$;J0$ = "1 00015903" \ J1$ = "2"
!!Gosub L_7000
!!If J$ = "1" Let C4 = 99 \ Goto L_1170
!!If J$ <> "2" Goto L_31000
!!Return 
!!L_31200: J5$ = "<CR> FOR FIRST";J0$ = "1 00062106" \ J1$ = "      "
!!Gosub L_7000 \ X0 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00063306" \ J1$ = "999999"
!!Gosub L_7000 \ X5 = J$
!!If X0 > X5 Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!" \ Gosub L_7600 \ Goto L_31200
!!Return 
!!L_31300: J5$ = "<CR> FOR FIRST" \ J0$ = "2 00121707" \ J1$ = "            "
!!Gosub L_7000 \ K6$ = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "2 00123007" \ J1$ = "zzzzzzzzzzzz"
!!Gosub L_7000 \ K7$ = J$
!!If K7$ < K6$ Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!" \ Gosub L_7600 \ Goto L_31300
!!Return 
!!L_31400: J5$ = "<CR> FOR FIRST" \ J0$ = "1 00032408" \ J1$ = "   "
!!Gosub L_7000 \ S1 = J$
!!J5$ = "<CR> FOR LAST" \ J0$ = "1 00033608" \ J1$ = "999"
!!Gosub L_7000 \ S2 = J$
!!If S1 > S2 Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub L_7600 \ Goto L_31400
!!Return 
!!L_31500: J0$ = "2 00014114" \ J1$ = "1" \ J5$ = "ENTER SORT CHOICE"
!!Gosub L_7000
!!If J$ <> "1" And J$ <> "2" And J$ <> "3" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_31600
!!SORT = J$ \ If SORT < 1 Or SORT > 3 Goto L_31500
!!Return 
!!L_31600: J0$ = "2 00015415" \ J1$ = "1"
!!Gosub L_7000
!!If J$ <> "1" And J$ <> "2" And J$ <> "3" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_31600
!!UMTYPE = J$
!!If UMTYPE = 3 Let HEAD$ = "  LAST" Else Let HEAD$ = "CURRENT"
!!Return 
!!L_31700: Rem
!!J5$ = "<CR> FOR DEFAULT DATE" \ J0$ = "5 00086406" \ JA1 = ARDATE
!!Gosub L_7000
!!X2 = JA1 \ Gosub YMD2JUL \ Goto L_31700
!!JDATE[1] = X2
!!DT = JA1;X2 = JA1 \ Gosub L_7700 \ EFFDATE$ = X$
!!Return 
!!L_31800: J0$ = "2 00037217" \ J1$ = "   "
!!Gosub L_7000
!!If J$ = "   " Let BRACKET = -9 Else Let BRACKET = J$
!!Return 
!!L_31900: J0$ = "6 00013116" \ J1 = 1
!!Gosub L_7000
!!LPFLAG = JA1
!!Return 
!!L_32000: J0$ = "3 00024821" \ JA1 = DFWH
!!If P9$[32,32] = "Y"
!!  Gosub L_7000
!!Else 
!!  WHSE = 0 \ Goto L_32040
!!End If 
!!WHSE = JA1
!!If WHSE < 0 Or WHSE > D9[5] Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_32000
!!L_32040: Return
!!L_32300: Rem    non stocks
!!J0$ = "6 00012922" \ JA1 = 0
!!Gosub L_7000
!!NSFLG = 0 \ If JA1 Let NSFLG = 1
!!Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
L_9000: Rem EXIT ROUTINE
outend: ! EXIT ROUTINE
!Print 'CS'
!Chain "MX000C"
!Stop 
L_9100: Rem END OF THIS RANGE
if prntflag<>0
	Gosub L_3800
endif
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
  try call dxclose() else rem
End 
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!Goto L_9000 
!
L_9500: Rem  *ERROR ROUTINE  (ESCAPE TRAP)    V3.0  9/91 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End