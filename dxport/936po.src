! >>> Program 936po
!
! description Purchase Order General Ledger Control File Print
! loadsave -w -n 100,10 -o prog/dxport/936po.dl4 src/936po.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  16:23:32
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/ut936po.src (univ2) [mary] {65195}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,StringSearch,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel 
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem UT936po G/L - PO CONTROL MAINTENANCE PRINT
Rem LAST UPDATE: MTG 11/91
Rem LAST UPDATE: Prod Sls Categories are in the key & at G[3]
!If Err 0 Gosub ERR_ESCAPE
Try
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim rstr$[5000],usr$[40]
dim 1%,poglflag
dim 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50]
dim 2%,scust,ecust,purdate
dim 1%,IntCo,eflg,returnstatus,tottab[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],Message$[600]
dim 3%,rec_uac
Dim 1%,E,G[3],L9,CLFLAG,C[17],F9
Dim 1%,C0[7],SPO
Dim 2%,A9,D1[1],J1,J2,J8,J9,M5[5],O1[1],P1[1],R[23],W1[1],COID
Dim 2%,P9,X1,X2,CLIENT,S1[8]
Dim F$[30],P8$[7],X$[30],G8$[2],POTYPE$[2]
Dim U5$[131],J5$[80],P60$[50]
Dim 3%,G1[11],G2,G3,G4,G5,G6,G7,G8
Dim 3%,G9,G0,K9,M0,M1,M2
Dim J$[40],J1$[30],J8$[8]
Dim W5$[30],O5$[30],P5$[24],D5$[24]
Dim A$[36],K$[30],K1$[50],K2$[20],CLIENT$[4],G9$[140],L9$[2],K7$[30]
Dim P9$[20],P$[30],P61$[256]
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]

!Dim action$[30],options$[30],userid$[8]
!Dim rstr$[2000],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
!Call DXOpen() ! needed for testing
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!Call dxsave(0,"/tmp/md936po.txt!")

Coid=IntCo 
! Close #1 ! getsession open cntrl# as READONLY
eflg=0
message$=""
returnstatus=0
!X2 = Spc(5)
!COID = Int((X2 - Int(X2 / 16384) * 16384) / 64)
F$ = "cntrl/CNTRL" + Str$(COID)
try close #1 else rem
ropen #1,f$
MAT READ #1,61,0;P61$;
L_740: Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
L_790: Mat Read #1,52,60;P8$; \ Mat Read #1,51,0;C; \ Mat Read #1,52,0;S1;
F$ = "6/GLPOCNTRL" + Str$(COID)
Call FindF(F$,A9)
If Not(A9)
	eflg=eflg+1
	message$=message$+"G/L - P/O - A/P Interface Not Available"
	returnstatus=1 ! no print
 	Goto OUTEND
Else 
  Open #2,F$
End If 
Mat Read #1,51,18;C0;
If Not(C0[4])
	eflg=eflg+1
	message$=message$+"G/L - P/O - A/P Interface Not Available"
	returnstatus=1 ! no print
 	Goto OUTEND
End If 
Mat Read #1,51,76;SPO;
If Not(SPO)
 	eflg=eflg+1
	message$=message$+"G/L - P/O - A/P  Interface Not Available"
	returnstatus=1 ! no print
 	Goto OUTEND
End If 
mat read #1,51,88;poglflag;
!if not(poglflag)
!	eflg=eflg+1
!	message$=message$+"G/L - P/O Interface Not Available"
!	returnstatus=1 ! no print
! 	Goto OUTEND
!End If 
For X = 3 To 7
  Read J1
  If J1 <> -1
    Read #1,88,J1;F$;
    Ropen #X,F$
  End If 
Next X
Data "176","2768","-1","1984","48"
If Not(C[3]) Goto L_900
If P8$[7,7] <> "W" Goto L_900
CLFLAG = 99
Close #3
L_900: M5[4] = Chf(4) \ If M5[4] > 99 Let M5[4] = 99
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
!If Err 0 Let J8 = Spc(8)
J8 = 0 !\ J9 = Chf(0)
!If Err 0 Gosub ERR_ESCAPE
!If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 62 \ If J8 Let J9 = 18
!L_1100: Rem ENTER RANGES
!Print 'CS';"  -936PO- PURCHASE ORDER GENERAL LEDGER INTERFACE CONTROL ";
!W1[0] = 0 \ W1[1] = M5[4]
!L_1115: Print @0,3;'CL';"ENTER STARTING WAREHOUSE NUMBER, <CR> FOR ALL, 'E' TO END: ";
!Input Len 16384 + 2;""K2$
!If K2$ = "" Goto L_1165
!If K2$ = "E" Goto OUTEND
!W1[0] = K2$
!If W1[0] < 0 Goto L_1115
!Print @0,5;'CL';"ENTER ENDING WAREHOUSE NUMBER, <CR> FOR LAST, 'E' TO END ";
!Input Len 16384 + 2;""K2$
!If K2$ = "" Goto L_1165
!If K2$ = "E" Goto OUTEND
!W1[1] = K2$
!L_1165: If W1[0] <= W1[1] Goto L_1300
!Print @0,23;'CL RB';"ENDING WAREHOUSE MUST BE GREATER THE STARTING WAREHOUSE";
!Signal 3,15 \ Goto L_1100
!L_1300: Rem ENTER ORDER TYPES
!POTYPE$ = "0"
!If P8$[2,2] = "N" Goto L_1400
!J5$ = "Enter Type W: whse D: direct I: indirect  <CR>: all  E: end "
!If P60$[46,46] = "Y"
!  J5$ = "TYPES> W:wh  D:dir  I:indir  IW:imp wh  ID:imp dir  II:imp ind  <CR>: all  E:end"
!End If 
!Print @0,23;'CL';J5$;
!Print @0,13;'CL';"ENTER PURCHASE ORDER TYPE: ";
!Input Len 16384 + 2;""K2$
!Call String(1,K2$)
!If K2$ = "E" Goto OUTEND
!If K2$ = ""
!  POTYPE$ = "0"
!  Goto L_1400
!End If 
!POTYPE$ = K2$
!If POTYPE$ = "W" Goto L_1400
!If POTYPE$ = "D" Goto L_1400
!If POTYPE$ = "I" Goto L_1400
!If P60$[46,46] = "Y"
!  If POTYPE$ = "IW" Goto L_1400
!  If POTYPE$ = "ID" Goto L_1400
!  If POTYPE$ = "II" Goto L_1400
!End If 
!Goto L_1300
!L_1400: Rem PRODUCT CATEGORIES
!P1[0] = 0 \ P1[1] = 20
!If P8$[3,3] = "N" Goto L_1500
!Print @0,18;'CL';"ENTER STARTING PRODUCT CATEGORY, <CR> FOR ALL, 'E' TO END: ";
!Input Len 16384 + 2;""K2$
!If K2$ = "" Goto L_1465
!If K2$ = "E" Goto OUTEND
!P1[0] = K2$
!Print @0,20;'CL';"ENTER ENDING PRODUCT CATEGORY, <CR> FOR LAST, 'E' TO END ";
!Input Len 16384 + 2;""K2$
!If K2$ = ""
!  P1[1] = 20
!  Goto L_1465
!End If 
!If K2$ = "E" Goto OUTEND
!P1[1] = K2$
!!L_1465: If P1[0] <= P1[1] Goto L_1500
!Print @0,23;'CL RB';"ENDING PRODUCT CATEGORY MUST BE GREATER THE STARTING PRODUCT CATEGORY";
!Signal 3,15 \ Print @0,20;'CL'; \ Goto L_1400
call dxget("SWHSNUMBER",tmp$) \ W1[0] = tmp$
if rtriM$(tmp$)="" let w1[0]=0
call dxget("EWHSNUMBER",tmp$) \ if RTRIM$(tmp$)="" Let W1[1] = 99   else Let W1[1] = tmp$

call dxget("ORDERTYPE",tmp$) \ let potype$=ucase$(rtrim$(tmp$))
if rtrim$(tmp$)="" let potype$="0"
call dxget("SPRODCATEG",tmp$) \ if RTRIM$(tmp$)="" Let P1[0] = 0   else Let P1[0] = tmp$
call dxget("EPRODCATEG",tmp$) \ if RTRIM$(tmp$)="" Let P1[1] = 20   else Let P1[1] = tmp$
!
!validations

If P8$[3,3] = "N" Let P1[0] = 0 \ P1[1] = 20 ! no product category
!warehouse
If W1[0] < 0  or W1[0] > 99
	let Message$="Invalid starting warehouse number, must be between 0 and 99! "
	let eflg=eflg+1 
endif
If W1[1] < W1[0] or W1[1] > 99
	let message$=message$+"Invalid ending warehouse number, must be between starting warehouse number and 99! " 
	let eflg=eflg+1
endif
!order type
if potype$="0" or potype$="W" or potype$="D" or potype$="I" or POTYPE$ = "IW" or POTYPE$ = "ID" or POTYPE$ = "II" 
	! potype entered it ok
else
	let message$=message$+"Invalid Purchase Order Type Selection. "
	let eflg=eflg+1
endif
!
!product category
If P1[0] < 0  or P1[0] > 20
	let message$=message$+"Invalid starting product category, must be between 1 and 20! " 
	eflg=eflg+1
endif ! \ error 10000
If P1[1] < P1[0] or P1[1] > 20
	let message$="Invalid ending product category, must be between starting product category and 20! "
	eflg=eflg+1
endif
If eflg>0
	let returnstatus=1
	goto outend:
endif
L_1500: Rem CHECK PARAMETERS
totrec=0
If W1[1] > M5[4] Let W1[1] = M5[4]
If P1[1] > 20 Let P1[1] = 20
!Print 'CR MU CL MU CL';" PRINTING... PLEASE WAIT . . . ";
J1 = 90 \ J2 = 0
!If J8 Print 'CS'
!If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$ \ K1$ = W1[0] Using "##"
L_2000: Search #2,3,1;K1$,R[2],E
If E Goto outend:
Mat Read #2,R[2];G;
If G[0] < W1[0] Goto L_2000
If G[0] > W1[1] Goto L_2000
If POTYPE$ <> "0"
  If POTYPE$ = "W" And G[2] <> 1 Goto L_2000
  If POTYPE$ = "D" And G[2] <> 2 Goto L_2000
  If POTYPE$ = "I" And G[2] <> 3 Goto L_2000
  If POTYPE$ = "IW" And G[2] <> 4 Goto L_2000
  If POTYPE$ = "ID" And G[2] <> 5 Goto L_2000
  If POTYPE$ = "II" And G[2] <> 6 Goto L_2000
End If 
If G[3] < P1[0] Goto L_2000
If G[3] > P1[1] Goto L_2000
Mat Read #2,R[2],32;G1;
CLIENT = 0 \ If CLFLAG Gosub L_8400
If poglflag<>0
	LET L9= 9
else
	let l9=3
endif
If CLFLAG Let L9 = L9 + 1
L_2140: Gosub L_5800
totrec=totrec+1
Gosub L_5000
Goto L_2000
L_5000: Rem PRINT LINE
Print #0;""
If CLFLAG Print #0; Using "#### "; Tab 20;"CLIENT: ";CLIENT;G9$[11,40]
Print #0;"WAREHOUSE: ";
If G[0]
  Mat Read #4,(G[0] - 1),4;W5$;
  Print #0; Using "##  ";G[0];W5$;
Else 
  If K1$[1,6] = "DFAULT" Print #0;"DFA"; \ Goto PRNTGLACCT
End If 
If K1$[5,6] <> "  "
  Print #0; Using "##  "; Tab 42;"P.O. TYPE: ";
  If G[2] = 1
    Print #0;" W - Warehouse";
  Else 
    If G[2] = 2
      Print #0;" D - Direct";
    Else 
      If G[2] = 3
        Print #0;" I - Indirect ";
      Else 
        If G[2] = 4
          Print #0;"IW - Import Whse";
        Else 
          If G[2] = 5
            Print #0;"ID - Import Dir";
          Else 
            If G[2] = 6
              Print #0;"II - Import Indir";
            End If 
          End If 
        End If 
      End If 
    End If 
  End If 
End If 
If G[3] ! product cat
  Mat Read #6,G[3],0;P5$;
  Print #0; Using "##  "; Tab 93;"PRODUCT CATEGORY: ";G[3];P5$[1,24];
End If 
PRNTGLACCT: Rem print gl acct dist
Print #0;""
Print #0;"INVENTORY...............:";
K9 = G1[0] \ Gosub L_8000
Print #0; Using "########"; Tab 29;G1[0]; Tab 41;A$[15,36];
IF POGLFLAG<>0
	Print #0; Tab 67;"NONSTOCK INVENTORY......:";
	K9 = G1[6] \ Gosub L_8000
	Print #0; Using "########"; Tab 96;G1[6]; Tab 108;A$[15,36];
	Print #0;""
	Print #0;"ACCRUED PURCHASES.......:";
	K9 = G1[1] \ Gosub L_8000
	Print #0; Using "########"; Tab 29;G1[1]; Tab 41;A$[15,36];
	Print #0; Tab 67;"NONSTOCK ACCRUED PURCHAS:";
	K9 = G1[7] \ Gosub L_8000
	Print #0; Using "########"; Tab 96;G1[7]; Tab 108;A$[15,36];
ENDIF
Print #0;""
Print #0;"FREIGHT CHARGES.........:";
K9 = G1[2] \ Gosub L_8000
Print #0; Using "########"; Tab 29;G1[2]; Tab 41;A$[15,36];
IF POGLFLAG<>0
	Print #0; Tab 67;"NONSTOCK COST VARIANCE..:";
	K9 = G1[8] \ Gosub L_8000
	Print #0; Using "########"; Tab 96;G1[8]; Tab 108;A$[15,36];
	Print #0;""
	Print #0;"MISCELLANEOUS CHARGES...:";
	K9 = G1[3] \ Gosub L_8000
	Print #0; Using "########"; Tab 29;G1[3]; Tab 41;A$[15,36];
	Print #0; Tab 67;"NONSTOCK QTY VARIANCE...:";
	K9 = G1[9] \ Gosub L_8000
	Print #0; Using "########"; Tab 96;G1[9]; Tab 108;A$[15,36];
	Print #0;""
	Print #0;"COST VARIANCE...........:";
	K9 = G1[4] \ Gosub L_8000
	Print #0; Using "########"; Tab 29;G1[4]; Tab 41;A$[15,36];
	PRINT #0;tab 67; "QTY VARIANCE............:";
	LET K9=G1[5] \ GOSUB L_8000:
	PRINT #0; USING "########"; TAB 96;G1[5]; TAB 108;A$[15,36];
ENDIF
if p61$[136,136]="Y"
	print #0;""
	PRINT #0;"CURRENCY EXCHANGE VARIAN:";
	LET K9=G1[10] \ GOSUB L_8000:
	PRINT #0; USING "########"; TAB 29;G1[10]; TAB 41;A$[15,36];
	LET J1=J1+1
endif
Print #0;""
Print #0;""
Return 
L_5800: Rem HEADINGS ROUTINE
J1 = J1 + L9 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <RETURN> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4 + L9
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 936 - ";
Print #0; Tab 50;"GENERAL LEDGER - PURCHASE ORDER UPDATE CODES"
Print #0;""
Return 
L_8000: Rem SEARCH FOR GENERAL LEDGER ACCOUNT
K$ = " ",K$ \ K$[2,9] = K9 Using "########"
Search #3,2,1;K$,R[3],E \ If Not(E) Goto L_8080
A$[15,36] = "ACCOUNT NOT ON FILE!!" \ Return 
If E <> 1 Gosub ERR_SEARCH
L_8080: Mat Read #3,R[3],0;A$;
Return 
L_8400: Rem OPEN G/L MASTER FILE FOR MULTIPLE CLIENTS
If Not(CLFLAG) Return 
!If Err 0 Rem
Try Close #3 Else Rem
!If Err 0 Gosub ERR_TRAP
If Not(CLIENT)
  If P8$[7,7] = "W"
    If G[0] Mat Read #4,(G[0] - 1),844;CLIENT; Else Let CLIENT = S1[0]
  End If 
End If 
K7$ = " ",K7$ \ K7$[3,6] = CLIENT Using "####"
Search #7,2,1;K7$,R[7],E \ If E Gosub ERR_SEARCH
Mat Read #7,R[7],0;G9$;
F9 = G9$[135,136] \ If F9 < 10 Let L9$ = F9 Using "#" Else Let L9$ = F9 Using "##"
CLIENT$ = CLIENT Using "####"
For X = 1 To 4
  If CLIENT$[X,X] = " " Let CLIENT$[X,X] = "."
Next X
G8$[1,1] = S1[1] Using "&" \ G8$[2,2] = S1[2] Using "&"
F$ = L9$,"/GLM",G8$[1,2],CLIENT$
Call FindF(F$,A9)
If Not(A9)
	message$= message$ + "GENERAL LEDGER MASTER FILE NOT FOUND FOR CLIENT "+str$(CLIENT) \ Gosub ERR_SEARCH
  !Print @0,23;'CL RB';"GENERAL LEDGER MASTER FILE NOT FOUND FOR CLIENT ";CLIENT \ Gosub ERR_SEARCH
End If 
Open #3,F$
Return 
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
if rtrim$(message$)<>""
	let msg$=msg$+rtrim$(message$)
endif
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!let returnstatus=1
if not(eflg) and message$=""
	let message$=message$+"Report Complete. "
	let returnstatus=0

endif
if not(totrec) and eflg=0
	let message$=message$+" No Records Available to Print "
	let returnstatus=1
endif
if message$="" let message$="Report Complete"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
outend9: ! everything has been written in called program
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program