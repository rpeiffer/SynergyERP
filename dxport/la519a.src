! >>> Program LA519a
!
! description Accounts Payable Recurring Entries - General Ledger Interface
!
! loadsave -w -n 100,10 -o prog/dxport/la519a.dl4 src/la519a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 28, 2004  13:32:21
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/ap/la519a.src (univ2) [mary] {56798}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String
Option Default Dialect IRIS1
Declare Intrinsic Sub FindF,InpBuf,String
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Try
  Enter spec[],message$,IntCo,rstr$,e$ 
  dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  dim e$[500]!,message$[600]
	dIM GROUPID$[1]
	Dim 2%,C4[4],3%,Q[2],T2[3],2%,B4[1]
	Dim 1%,PRGNUM,EFLAG,RETURNSTATUS
	DIM 3%,REC_UAC
Comp = spec[0] ! company #                     
intCo = spec[0]                                
C4[0] = spec[1] ! CURRENT/NEXT MONTH
C4[1]= spec[2] ! POSTING PERIOD                              
C4[2] = spec[3]  ! POSTING date (mmddyy)                            
C4[3] = spec[4] !  LOGICAL UNIT NUMBER FOR A10IN
C4[4] = SPEC[5] ! POSTING DATE YYMMDD
B4[1] = SPEC[6] !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
B4[0] = SPEC[2] ! POSTING PERIOD
PRGNUM=SPEC[7] ! PROGRAM NUMBER
rec_uac = spec[8]                              
returnstatus = spec[9] 
eflag=spec[10]
t2[0]=spec[11]
t2[1]=spec[12]
t2[2]=spec[13]
t2[3]=spec[14]
Portnum=rec_uac
Rem LA519A RECURRING ENTRY JOURNAL PART 2 - G/L INTERFACE
Rem 10/89
Rem #2-A80VM,#3-A20OI,#6-A10VL,#7-AM0DO,#8-AM0DD
!If Err 0 Gosub ERR_TRAP
!Print "UPDATING GENERAL LEDGER --- PLEASE WAIT!!!"
Dim 1%,C0[6],E,X,X1
Dim 2%,X2,X$[10]
Dim 2%,COMP,CLIENT
Dim 3%,R[50]
Dim 3%,H1,T[1],T9
Dim A$[30],B$[30],H$[68],H1$[68],H9$[1],K1$[30],K2$[30],P$[8],2%
Dim F$[16],G8$[2],Q$[9],R$[63],2%,G9[3]
Dim P9$[50],CLIENT$[4]
Dim KEYVEND$[10],KEYRET$[30],KEYRED$[30],KEYVL$[30],VENDNAME$[30]
Dim KEYDIV$[20],DIV1$[24]
Rem dim aprec file #17
Dim 2%,RP1[5],1%,RP2[6],RP1$[8],RP2$[39],3%,RP3[3]
Rem dim apred file #18
Dim 2%,RED1[1],RED1$[8],3%,RED2[1],1%,RED3[2]
Dim RED1$[8]
Rem dim apret file #19
Dim 1%,RET1[2],2%,RET2[5],3%,RET3[2],RET1$[12]
Rem dim glap detail file
Dim 2%,GLD[6],GLD$[12],GLD1$[30],GLD2$[12],4%,GLD1,1%,GLD2[2]
Dim 3%,REC_GLD,GLDKEY1$[50],GLDKEY2$[50]
Rem dim glap temp file
Dim 3%,GLA1[1],2%,GLA2[3],GLA0$[12],GLA1$[30],1%,GLA3
Dim KEYGLAP$[50],3%,REC_GLA
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim 3%
G8$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
g8$[2,2]=groupid$
Goto L_900

Rem LET C4[0]=CURRENT =0  OR NEXT MONTH =1
Rem LET C4[1]=POSTING PERIOD (YYMM)
Rem LET C4[2]=POSTING DATE (MMDDYY)
Rem LET C4[3]=LOGICAL UNIT NUMBER FOR A10IN
Rem LET C4[4]=POSTING DATE (YYMMDD)
Rem let b4[1]=recurring entry journl
Rem port = port error occur for div file
Rem T2[0]=ACCOUNTS PAYABLE AMOUNT
Rem T2[1]=CREDIT MEMO AMOUNT
Rem T2[2]=SUSPENSE AMOUNT
Rem OPEN FILES
!X2 = Spc(5)
!F$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
comp=intco
F$ = COMP Using "cntrl/CNTRL#"
Open #1,F$
Mat Read #1,19,50;P9$;
Mat Read #1,51,18;C0;
Mat Read #1,88,16;F$; \ Open #15,F$
Mat Read #1,88,48;F$; \ Open #16,F$
!G9[0] = Spc(5) \ G9[1] = Int(G9[0] / 16384) \ G9[2] = Int((G9[0] - G9[1] * 16384) / 64)
!G9[3] = G9[0] - (G9[1] * 16384 + G9[2] * 64) \ G8$[1,1] = G9[2] Using "#"
!G8$[2,2] = G9[3] Using "#"
K2$ = " 0"
Search #15,2,1;K2$,R[15],E
if e<>0
	eflag=eflag+1
	Message$="RECORD '0' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif
Mat Read #15,R[15],2;R$;
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #2,F$
F$ = R$[53,53],"/A20OI",G8$[1,2] \ Open #3,F$
F$ = R$[9,9],"/APRED",G8$[1,2] \ Open #18,F$
F$ = R$[8,8],"/APREC",G8$[1,2] \ Open #17,F$
F$ = R$[8,8],"/APREA",G8$[1,2] \ Open #20,F$
F$ = R$[8,8],"/APRET",G8$[1,2] \ Open #21,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Open #6,F$
R$[60,60] = C4[3] Using "#"
Mat Read #1,88,432;F$; \ Open #10,F$
If C0[2] Mat Read #1,88,144;F$; \ Open #12,F$
X$ = C4[1] Using "&&&&"
F$ = R$[33,33],"/AM0DO",G8$[1,2],X$[1,4] \ Open #7,F$
F$ = R$[34,34],"/AM0DD",G8$[1,2],X$[1,4]
Open #8,F$
If P9$[17,17] <> "Y"
  F$ = R$[60,60],"/A10IN",G8$[1,2],X$[1,4]
  Open #11,F$
End If 
If C0[6]
  F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #13,F$
  F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #14,F$
  If Not(portnum) Let portnum = rec_uac
  F$ = portnum Using "2/APRETEMP&&&&"
  Call FindF(F$,A9)
  If Not(A9)
	eflag=eflag+1
	message$=message$+"DIVISION TEMP FILE NOT FOUND FOR PORT "+str$(PORTNUM)
	goto err_search:
	!Print @0,23;'CL';"DIVISION TEMP FILE NOT FOUND FOR PORT ";PORTNUM; \ Gosub ERR_TRAP
  endif
  Open #50,F$
End If 
If P9$[17,17] = "Y"
  F$ = COMP Using "6/GLAPTEMP#"
  Open #75,F$
  F$ = COMP Using "4/GLAPDETL#"
  Open #77,F$
End If 
L_900: Rem start update here
Mat Read #1,19,50;P9$;
Mat Read #1,51,18;C0;
K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Read #15,R[15],2;CLIENT$;
CLIENT = CLIENT$
Read #15,R[15],6;Q$;
Q[0] = Q$
Read #15,R[15],24;Q$;
Q[1] = Q$
Read #15,R[15],150;Q$;
Q[2] = Q$
T[0] = 0
T[1] = 0
T9 = 0
H1 = 0
If P9$[17,17] <> "Y"
  R[11] = Chf(11)
  R[11] = R[11] - 1
L_930: Read #11,R[11];H1$;
  H1$[63,63] = "9" \ If H1$[1,1] = "*" Goto L_960
  R[11] = R[11] - 1
  If R[11] >= 0 Goto L_930
  eflag=eflag+1
  message$=message$+"ERROR IN INTERFACE FILE!!!"
	goto err_search: !
  !Print @0,23;'CL RB';"ERROR IN INTERFACE FILE!!!!";
  !Goto ERR_MAIN
End If 
L_960: K2$ = "20"
Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],10;H9$;
If P9$[17,17] = "Y" Goto UPDATEGL
K1$ = " ",K1$
L_1005: Search #20,3,1;K1$,R[20],E
If E = 2 Goto L_4600
If E Gosub ERR_SEARCH
R[18] = R[20]
Mat Read #18,R[18],28;RED3;
If RED3[2] = 3 Goto L_1005
Mat Read #18,R[18],16;RED2;
Mat Read #18,R[18],0;RED1;
If Not(RED2[1]) Goto L_1170
If B$[1,9] = K1$[1,9] Goto L_1090
If B$[28,28] = "S" Gosub L_4100
K2$ = " ",K2$ \ K2$[1,9] = K1$[1,9]
Search #6,2,1;K2$,R[6],E
If E = 1 
	eflag=eflag+1
	message$=message$+"ACCT# "+(K2$)+"NOT FOUND IN VALIDATION FILE!!!"
	!Print @0,23;'CL RB';"ACCT# ";K2$;"NOT FOUND IN VALIDATION FILE!!!"
  endif
If E<>0 Gosub ERR_SEARCH
Mat Read #6,R[6],0;B$;
If B$[28,28] = "N" Let B$[28,28] = "S"
L_1090: Mat Read #18,R[18],16;RED2
If RED2[1] > 0 Let T = T + RED2[1]
If RED2[1] < 0 Let T[1] = T[1] + RED2[1]
If B$[28,28] = "S" Goto L_1170
If Not(RED1) Gosub L_4100
If Not(RED1) Goto L_1170
R[17] = RED1[0]
Mat Read #17,R[17],0;RP1;
Mat Read #17,R[17],58;RP1$;
A$ = "VENDOR NOT ON FILE !!!"
K2$ = RP1[0] Using "######"
Search #2,2,1;K2$,R[2],E
If E = 1 Goto L_1165
If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;A$;
L_1165: Gosub L_4200
L_1170: RED3[2] = 3 \ Mat Write #18,R[18],28;RED3;
Goto L_1005
L_4100: Rem...  POST SUMMARY TO INTERFACE FILE
H1 = T + T[1]
H$ = " ",H$
H$[1,1] = H9$[1,1]
H$[2,10] = B$[1,9]
H$[14,19] = C4[2] Using "######"
H$[20,25] = C4[2] Using "######"
H$[26,50] = "A/P RECURRING ENTRIES    "
H$[59,62] = (R[11] + 1) Using "####"
H$[63,63] = "0"
Goto L_4500
L_4200: Rem ... SET UP G/L DETAIL RECORD
H$ = " ",H$
H$[1,1] = H9$[1,1]
H$[2,10] = B$[1,9]
H$[14,19] = RP1[0] Using "######"
H$[20,25] = C4[2] Using "######"
H$[26,55] = RP1$[1,8],"/",A$[1,21]
H$[59,62] = (R[11] + 1) Using "####"
H$[63,63] = "0"
H1 = RED2[1]
Goto L_4500
L_4500: Rem WRITE TO GLHISTORY
K2$ = " ",K2$ \ K2$[1,9] = B$[1,9]
H$[59,62] = (R[11] + 1) Using "####"
H$[63,63] = "0"
Write #11,R[11];H$;
Write #11,R[11],1;H1;
R[11] = R[11] + 1
T = 0 \ T[1] = 0
T9 = T9 + H1
Return 
L_4600: Rem SUSPENSE ACCOUNT POSTING
If (T[0] - T[1]) Gosub L_4100
If Not(T9) Goto OUTEND
H$ = " ",H$ \ H$[1,1] = H9$[1,1]
H$[2,10] = Q[2] Using "#########"
H$[14,19] = C4[2] Using "######"
H$[20,25] = C4[2] Using "######"
H$[26,50] = "A/P RECURRING ENTRIES    "
H$[59,62] = (R[11] + 1) Using "####"
H$[63,63] = "0"
H1 = - T9
Gosub L_4500
!Print @0,22;'CL RB';"SUSPENSE ACCOUNT POSTING HAS BEEN MADE FOR ";H1
!Print @0,23;'CL RB';"PRESS <CR> TO CONTINUE UPDATE ";
!Input Len (16384 + 1);""X$
eflag=eflag+1
message$=message$+" SUSPENSE ACCOUNT POSTING HAS BEEN MADE FOR "+STR$(H1)
Goto OUTEND
UPDATEGL: Rem start update  for g/l direct interface
KEYRET$ = " ",KEYRET$
SRCHRET: Search #21,3,1;KEYRET$,R[21],E \ If E = 2 Goto OUTEND
Mat Read #21,R[21],0;RET1;
Mat Read #21,R[21],6;RET2;
Mat Read #21,R[21],30;RET3;
Mat Read #21,R[21],54;RET1$
R[17] = RET2[4]
Mat Read #17,R[17],0;RP1;
Mat Read #17,R[17],24;RP2;
If RP2[5] <> 9 Goto SRCHRET
Mat Read #17,R[17],58;RP1$;
Mat Read #17,R[17],66;RP2$;
Mat Read #17,R[17],96;RP3
KEYVEND$ = " ",KEYVEND$
KEYVEND$ = RET2[0] Using "######"
Search #2,2,1;KEYVEND$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #2,R[2],0;VENDNAME$;
Else 
  VENDNAME$ = " ",VENDNAME$
  VENDNAME$[1,18] = "Vendor Not On File"
End If 
KEYRED$ = " ",KEYRED$
KEYRED$[1,5] = R[17] Using "#####"
SRCHRED: Rem search for a/p distributions
Search #18,3,1;KEYRED$,R[18],E \ If E = 2 Goto ALLOCAP
If E Gosub ERR_SEARCH
R[0] = KEYRED$[1,5] \ If R[0] <> R[17] Goto ALLOCAP
Mat Read #18,R[18],0;RED1;
Mat Read #18,R[18],8;RED1$;
Mat Read #18,R[18],16;RED2;
Mat Read #18,R[18],28;RED3
If RED3[2] = 3 Goto SRCHRED
Gosub UPGLDET
Rem! look up validation file for post detail or summary
KEYVL$ = " ",KEYVL$
KEYVL$[1,9] = RED2[0] Using "#########"
Search #6,2,1;KEYVL$,R[6],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #6,R[6],0;B$;
  If B$[28,28] <> "D" Let DETFLAG = 0 Else Let DETFLAG = 99
Else 
  DETFLAG = 99
End If 
Gosub UPGLAPTEMP
RED3[2] = 3 \ Mat Write #18,R[18],28;RED3;
Goto SRCHRED
ALLOCAP: Rem allocate a/p distributions
RED2[0] = 0
Rem divisions are not used in recurring entries !!
If C0[6] ! division update is set
  KEYDIV$ = " ",KEYDIV$
  KEYDIV$[1,2] = RP1[5] Using "##"
  Search #13,2,1;KEYDIV$,R[13],E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Mat Read #13,R[13],42;DIV1$;
    If RET1[0] = 2
      RED2[0] = DIV1$[14,21]
    Else 
      RED2[0] = DIV1$[2,9]
    End If 
  End If 
End If 
If Not(RED2[0])
  If RET1[0] = 2
    RED2[0] = Q[1]
  Else 
    RED2[0] = Q[0]
  End If 
End If 
RED2[1] = - (RET3[0])
Gosub UPGLDET
DETFLAG = 0
Gosub UPGLAPTEMP
RP2[5] = 2 \ Write #17,R[17],34;RP2[5];
Goto SRCHRET
UPGLAPTEMP: Rem update gl ap temp file (#75)
For X = 0 To 1 \ GLA1[X] = 0 \ Next X
For X = 0 To 2 \ GLA2[X] = 0 \ Next X
GLA0$ = " ",GLA0$;GLA1$ = " ",GLA1$
GLA3 = 0
GLA1[0] = RED2[0]
GLA2[0] = B4[1]
GLA2[1] = CLIENT
If DETFLAG
  GLA2[2] = RET2[0]
  GLA2[3] = 0
  GLA0$[1,12] = RET1$[1,12]
  GLA1$[1,30] = VENDNAME$[1,30]
  GLA3[0] = RET1[0]
End If 
KEYGLAP$ = " ",KEYGLAP$
KEYGLAP$[1,4] = GLA2[1] Using "####"
KEYGLAP$[5,12] = GLA1[0] Using "########"
KEYGLAP$[13,18] = GLA2[2] Using "######"
KEYGLAP$[19,30] = GLA0$[1,12]
KEYGLAP$[31,32] = GLA3 Using "##"
Search #75,2,1;KEYGLAP$,REC_GLA,E \ If E > 1 Gosub ERR_SEARCH
If E
  E = 2 \ Search #75,1,0;KEYGLAP$,REC_GLA,E \ If E Gosub ERR_SEARCH
  Mat Write #75,REC_GLA,0;GLA1;
  Mat Write #75,REC_GLA,12;GLA2;
  Mat Write #75,REC_GLA,28;GLA0$;
  Mat Write #75,REC_GLA,40;GLA1$;
  Mat Write #75,REC_GLA,70;GLA3;
  Search #75,4,1;KEYGLAP$,REC_GLA,E \ If E Gosub ERR_SEARCH
End If 
Mat Read #75,REC_GLA,0;GLA1
GLA1[1] = GLA1[1] + RED2[1]
Mat Write #75,REC_GLA,0;GLA1;
Return 
UPGLDET: Rem up gl detail file
For X9 = 0 To 6 \ GLD[X9] = 0 \ Next X9
For X9 = 0 To 2 \ GLD2[X9] = 0 \ Next X9
GLD$ = " ",GLD$;GLD1$ = " ",GLD1$;GLD2$ = " ",GLD2$
GLD1 = 0
GLD[0] = CLIENT
GLD[1] = C4[1]
GLD[2] = RET2[0]
GLD[3] = 0
GLD[4] = RET2[1]
GLD[5] = C4[4]
GLD[6] = B4[1]
GLD$[1,9] = RED2[0] Using "#########"
GLD1$[1,30] = VENDNAME$[1,30]
GLD2$[1,12] = RET1$[1,12]
GLD2[0] = RET1[0]
GLD2[1] = 519
GLD2[2] = RP1[5]
GLDKEY1$ = " ",GLDKEY1$
GLDKEY1$[1,4] = GLD[1] Using "&&&&"
GLDKEY1$[5,16] = GLD$[1,12]
GLDKEY1$[17,22] = GLD[6] Using "######"
GLDKEY1$[23,28] = GLD[2] Using "######"
GLDKEY1$[29,40] = GLD2$[1,12]
GLDKEY1$[41,42] = GLD2[0] Using "##"
Search #77,2,1;GLDKEY1$,REC_GLD,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  E = 2 \ Search #77,1,0;GLDKEY1$,REC_GLD,E \ If E Gosub ERR_SEARCH
  Mat Write #77,REC_GLD,0;GLD;
  Mat Write #77,REC_GLD,40;GLD$;
  Mat Write #77,REC_GLD,52;GLD1$;
  Mat Write #77,REC_GLD,82;GLD2$;
  Mat Write #77,REC_GLD,106;GLD1;
  Mat Write #77,REC_GLD,114;GLD2;
  Search #77,4,1;GLDKEY1$,REC_GLD,E \ If E Gosub ERR_SEARCH
  GLDKEY2$ = " ",GLDKEY2$
  GLDKEY2$[1,6] = GLD[2] Using "######"
  GLDKEY2$[7,18] = GLD2$[1,12]
  GLDKEY2$[19,20] = GLD2[0] Using "##"
  GLDKEY2$[21,32] = GLD$[1,12]
  GLDKEY2$[33,36] = GLD[1] Using "&&&&"
  GLDKEY2$[37,42] = GLD[6] Using "######"
  Search #77,4,2;GLDKEY2$,REC_GLD,E \ If E Gosub ERR_SEARCH
End If 
Rem add amount into transaction
Mat Read #77,REC_GLD,106;GLD1
GLD1 = GLD1 + RED2[1]
Mat Write #77,REC_GLD,106;GLD1;
Return 

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/la512a!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)



OUTEND: Rem exit from here
If P9$[17,17] <> "Y"
  Write #11,R[11];H1$;
  Write #11,R[11],1;H1;
End If 
Comp = spec[0] ! company #                     
spec[0]=intco                               
spec[1]=c4[0] ! CURRENT/NEXT MONTH
spec[2]=c4[1] ! POSTING PERIOD                              
spec[3]=c4[2] ! POSTING date (mmddyy)                            
spec[4]=c4[3] !  LOGICAL UNIT NUMBER FOR A10IN
SPEC[5]=c4[4]! POSTING DATE YYMMDD
SPEC[6]=b4[1] !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
SPEC[7]=519! PROGRAM NUMBER
spec[8]=rec_uac                             
spec[9]=returnstatus 
spec[10]=eflag
spec[11]=t2[0]
spec[12]=t2[1]
spec[13]=t2[2]
spec[14]=t2[3]
Call "LA519B.dl4",spec[],message$,IntCo,rstr$,e$
 
Else
	ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program

