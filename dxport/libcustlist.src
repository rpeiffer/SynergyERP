! libcustlist.lib
!
! supporting library of customer list routines for browser
!
! 1.0 08/23/07
!
! loadsave -w -n 100,10 -o prog/dxport/libcustlist.lib src/libcustlist.src
!
include "src/copyright.inc"
!
! sub & functions for list library
!
!  S   GetCustNoteOI      gets Note 1 & 2 from Custnotes File
!  S   getCustSpecN       gets the list of notes in CustSpec File
!  S   GetCustSHNotes     get the list of ship/pack notes in CUSTSHNOTE File
!  S   GetCustKeyWords    get a list of keywords for CSLKEYWRD file
!  S   GetCustGeneral     get misc general fields from cust & custnotes
!  S   GetCustCCard       get the credit card details
!  S   GetCustABook       get contact list - selector & data
!  S   GetCustRoute       get zone/stop
!  S   GetCustClass       get misc data (ABC, AcctMgr, etc)
!  S   GetCustComm		  get commission data
!  S   GetCustDocd		  get document delivery
!  S   GetCustRebate	  get customer rebate information
!  S   CustList			  get Customer Scan List (MXCUST5)
!
include "src/inc/filecustnotes.inc" ! customer notes file
include "src/inc/filecust.inc" ! "customer file
include "src/inc/filecustspec.inc" ! "customer specs(notes)
include "src/inc/filecustshnote.inc" ! "customer ship/pack notes
include "src/inc/filecslkeywrd.inc" ! "cust/shiplist keywords
include "src/inc/fileccctype.inc" ! credit cards for Customer
include "src/inc/filecontlist.inc" ! "address book file
include "src/inc/filecszone.inc" ! customer/shiplist zone
include "src/inc/filezonefle.inc" ! zone file
include "src/inc/filecollagent.inc" ! account manager
include "src/inc/fileaddon.inc" ! addon file for sls zone desc
! NO - DO NOT USE filecustslsm.inc - THIS IS BROKEN
! include "src/inc/filecustslsm.inc" ! customer/shiplist multi-slsm comm split
include "src/inc/filedocdeliv.inc" ! document delivery
include "src/inc/fileshiplist.inc" ! shiplist
Include "src/inc/fileprtdefault.inc" ! port defaults
!
External Lib "libgeneral.lib"
Declare External Sub SubErr,GetDelimiters

External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,buildsort,fmtphone2$
Declare External Function GetUIDRec
Declare External Sub GetPortDefault

Declare Intrinsic Sub Env,FormatDate,programdump,Stringsearch

External Lib "getslsmname.lib"
Declare External Function GetSlsmName$

Declare External Sub DOCDSETTYPE
Declare Sub updatelog
Declare function DoStrgSrch

External Sub GetCustNoteOI(e$,Cust$,List$[],CustRec,maxcnt,CTLChan,CNChan,CustChan,cust. as cust)

  ! Creates a list of the customer's 2 notes
  ! 
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer notes list (2)
  ! CustRec	   : Customer Rec
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : control file channel
  ! CNChan     : customernotes file channel
  ! CustChan   : customer file channel
  ! cust.      : customer data
 
  try
!
   dim 1%,tmp1,Dir
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,CNRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100]
!
	dim CN. as custnotes
!	dim cust. as cust - we're passing it
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	tmpcnt=maxcnt
	clear List$[]
!
 	List$[0]=bsdel$,"CUSTOMEROINOTES",fdel$
	!
	WebStr$="ID",fdel$,"Note 1",fdel$,"Note 2",fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	!
	cust$[7]=""
	CustKey$=Cust$
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
!	CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
		CustKey$=Cust$
		mode$="=" ! "match
		Dir=1 ! "custnotes dir 1 = Customer No
		CNrec=filegetcustnotes(e$,CNchan,mode$,dir,CustKey$,CN.) 
		If CNRec<0 Clear CN.
		WebStr$=CustKey$,fdel$ ! Customer key
        WebStr$=WebStr$,RTrim$(CN.NotesLine1$),fdel$ ! Note 1
		WebStr$=WebStr$,RTrim$(CN.NotesLine2$),fdel$ ! Note 2
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	endif
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustNoteOI
! -------------------------------------------------------------------------------------

External Sub getCustSpecN(e$,Cust$,List$[],CustRec,maxcnt,CTLChan,CSChan,CustChan,cust. as cust)

  ! Creates a list of the customer's notes from custspec file
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer notes list
  ! CustRec    : customer record #
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : control file channel
  ! CSChan     : customerspec file channel
  ! CustChan   : customer file channel
  ! cust.      : customer data 
 
  try
!
  dim 1%,tmp1,Dir,CSDir
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,CSRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],CSKey$[64],Mode$[2],CSMode$[2],blank$[100]
!
	dim CSN. as custspec
!	dim cust. as cust - we're passing it
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	call dxget("NEXTLINE",tmp$)
	NSLine=tmp$
	tmpcnt=maxcnt
	clear List$[]
!
 	List$[0]=bsdel$,"CUSTOMERSUPNOTES",fdel$
	!
	WebStr$="ID",fdel$,"Line",fdel$,"Note",fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	x1=0 ! track line number (per the web - skipped lines get nulls!)
	if nsline let x1=nsline-1 ! next line
	cust$[7]=""
	CustKey$=Cust$
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
		CSKey$=Cust$,"    "  ! "space fill after cust#
		if nsline let CSKEY$=CUST$+" "+NSLINE USING "###"
	  	CSMode$=">=" ! "greater than
	  CSDir=1 ! "only 1 dir
	  Do
	    CSRec=filegetcustspec(e$,CSChan,CSMode$,CSDir,CSKey$,CSN.)
        if CSRec<0 or CSKey$[1,len(CustKey$)]<>CustKey$ exit do
		CSMode$=">" ! "get next
		CSDir=1 ! "dir 1
		IF ROW>102 ! 33263 - max 100 per time
			let e$="RS=5  NEXTLINE="+CSKEY$[8,10]
			exit do
		endif
		x1=x1+1 ! printing line #
		x=CSKey$[8,10] ! current line #
		if (x-x1>99) or (x-x1<0) let x=0 ! ignore it (no 99 or negative null lines!!)
		if x and x<>x1 ! something missed (exclude 0)
		  for L0=x1 to x-1 ! stop 1 line before current
			WebStr$=CustKey$,fdel$ ! Customer key
			WebStr$=WebStr$,Str$(L0),fdel$ ! Line Number
			WebStr$=WebStr$,fdel$ ! Note
			List$[row]=WebStr$
			row=row+1
			if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		   Next L0
		endif
		!
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		!		
		WebStr$=CustKey$,fdel$ ! Customer key
        WebStr$=WebStr$,CSKey$[8,10],fdel$ ! Line Number
		WebStr$=WebStr$,RTrim$(CSN.Message$),fdel$ ! Note
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		x1=CSKey$[8,10] ! last line sent
	  loop
	  !
    endif

	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! "getCustSpecN
! -------------------------------------------------------------------------------------

External Sub GetCustSHNotes(e$,Cust$,List$[],CustRec,maxcnt,CTLChan,CSHChan,CustChan,cust. as cust)

  ! Creates a list of the customer's 5 ship/pack notes
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer ship/pack notes list (5)
  ! CustRec    : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : control file channel
  ! CSHChan    : custshnotes file channel
  ! CustChan   : customer file channel
  ! cust.      : customer data
 
  try
!
   dim 1%,tmp1,Dir
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,CNRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100]

	dim CSHN. as custshnote
!	dim cust. as cust - we're passing it
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	tmpcnt=maxcnt
	clear List$[]
 	List$[0]=bsdel$,"CUSTOMERSHNOTES",fdel$
	!
	WebStr$="ID",fdel$,"Ship Note 1",fdel$,"Ship Note 2",fdel$
	WebStr$=WebStr$,"Ship Note 3",fdel$,"Pack Note 1",fdel$,"Pack Note 2",fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	!
	cust$[7]=""
	CustKey$=Cust$
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - passed!
	if CustRec>0
		CustKey$=Cust$
		mode$="=" ! "match
		Dir=1 ! "custshnotes dir 1 = Customer No
		CNrec=filegetcustshnote(e$,CSHchan,mode$,dir,CustKey$,CSHN.) 
		If CNRec<0 Clear CSHN.
		WebStr$=CustKey$,fdel$ ! Customer key
        WebStr$=WebStr$,RTrim$(CSHN.ShipNote1$),fdel$ ! Note 1
		WebStr$=WebStr$,RTrim$(CSHN.ShipNote2$),fdel$ ! Note 2
		WebStr$=WebStr$,RTrim$(CSHN.ShipNote3$),fdel$ ! Note 3
		WebStr$=WebStr$,RTrim$(CSHN.PickingNote1$),fdel$ ! Note 1
		WebStr$=WebStr$,RTrim$(CSHN.PickingNote2$),fdel$ ! Note 2
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	endif

	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustSHNotes
! -------------------------------------------------------------------------------------
External Sub GetCustKeyWords(e$,Cust$,List$[],CustRec,maxcnt,CTLChan,CKWChan,CustChan,cust. as cust)

  ! Creates a list of the customer's keywords from cslkeywrd file
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer notes list
  ! CustRec    : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : Control file channel
  ! CKWChan    : cslkeywrd file channel
  ! CustChan   : customer file channel
  ! cust.      : customer data
 
  try
!
    dim 1%,tmp1,Dir,CKWDir
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,CKWRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[700],Message$[200]
	dim CustKey$[64],CKWKey$[64],Mode$[2],CKWMode$[2],blank$[100]
!
	dim CKW. as cslkeywrd
	! dim cust. as cust - pass it
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	tmpcnt=maxcnt
	clear List$[]
!
 	List$[0]=bsdel$,"CUSTOMERKEYWORDS",fdel$
	WebStr$="ID",fdel$,"Keyword 1",fdel$,"Keyword 2",fdel$
	WebStr$=WebStr$,"Keyword 3",fdel$,"Keyword 4",fdel$
	WebStr$=WebStr$,"Keyword 5",fdel$,"Keyword 6",fdel$
	WebStr$=WebStr$,"Keyword 7",fdel$,"Keyword 8",fdel$
	WebStr$=WebStr$,"Keyword 9",fdel$,"Keyword 10",fdel$
	WebStr$=WebStr$,"Keyword 11",fdel$,"Keyword 12",fdel$
	WebStr$=WebStr$,"Keyword 13",fdel$,"Keyword 14",fdel$
	WebStr$=WebStr$,"Keyword 15",fdel$,"Keyword 16",fdel$
	WebStr$=WebStr$,"Keyword 17",fdel$,"Name Keyword 1",fdel$
	WebStr$=WebStr$,"Name Keyword 2",fdel$
	WebStr$=WebStr$,"Addr 1 Keyword 1",fdel$,"Addr 1 Keyword 2",fdel$
	WebStr$=WebStr$,"Addr 2 Keyword 1",fdel$,"Addr 2 Keyword 2",fdel$
	WebStr$=WebStr$,"City Keyword",fdel$,"State Keyword",fdel$
	WebStr$=WebStr$,"ZipCode Keyword",fdel$,"Phone Keyword",fdel$
	WebStr$=WebStr$,"Contact Keyword",fdel$,"AP Ph# Keyword",fdel$
	WebStr$=WebStr$,"AP Contact KeyWord",fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	!
	Cust$[7]="" ! "trim after 6 chars
	CustKey$=Cust$
	
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
		CKWKey$=Cust$
		if len(CKWKey$)<7 let CKWKey$=CKWKey$+" " ! cust is 7, shiplist is 13 (.000000)
		CustKey$=Cust$
		if len(CustKey$)<7 let CustKey$=CustKey$+" " ! "minimum 7 (space after Cust#)
	  	CKWMode$="=" ! "Equal to key
	    CKWDir=1 ! "only 1 dir

	    CKWRec=filegetcslkeywrd(e$,CKWChan,CKWMode$,CKWDir,CKWKey$,CKW.)
        if CKWRec<0 or CKWKey$[1,len(CustKey$)]<>CustKey$ Clear CKW.
		!
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		!		
		WebStr$=RTrim$(CustKey$),fdel$ ! Customer key
		WebStr$=WebStr$,RTrim$(CKW.Keyword1$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword2$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword3$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword4$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword5$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword6$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword7$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword8$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword9$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword10$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword11$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword12$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword13$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword14$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword15$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword16$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword17$),fdel$ ! Note
		WebStr$=WebStr$,RTrim$(CKW.Keyword18$),fdel$ ! Name 1
		WebStr$=WebStr$,RTrim$(CKW.Keyword19$),fdel$ ! Name 2
		WebStr$=WebStr$,RTrim$(CKW.Keyword20$),fdel$ ! Addr1
		WebStr$=WebStr$,RTrim$(CKW.Keyword21$),fdel$ ! Addr1
		WebStr$=WebStr$,RTrim$(CKW.Keyword22$),fdel$ ! Addr2
		WebStr$=WebStr$,RTrim$(CKW.Keyword23$),fdel$ ! Addr2
		WebStr$=WebStr$,RTrim$(CKW.Keyword24$),fdel$ ! City
		WebStr$=WebStr$,RTrim$(CKW.Keyword25$),fdel$ ! State
		WebStr$=WebStr$,RTrim$(CKW.Keyword26$),fdel$ ! Zip
		WebStr$=WebStr$,RTrim$(CKW.Keyword27$),fdel$ ! Phone
		WebStr$=WebStr$,RTrim$(CKW.Keyword28$),fdel$ ! Contact
		WebStr$=WebStr$,RTrim$(CKW.Keyword29$),fdel$ ! AP Phone
		WebStr$=WebStr$,RTrim$(CKW.Keyword30$),fdel$ ! AP Contact
		List$[row]=WebStr$
		row=row+1

		!
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	endif

	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustKeyWords
! -------------------------------------------------------------------------------------
External Sub GetCustGeneral(e$,Cust$,List$[],CustRec,maxcnt,CTLChan,CNChan,CustChan,Cust. as cust)

  ! Creates a list of the customer's misc general fields
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer misc list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : Control file channel
  ! CNChan     : customernotes file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
 
  try
!
   dim 1%,tmp1,Dir
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,CNRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],action2$[30]
	dim custom_customer$[30]
!
	dim CN. as custnotes
!	dim cust. as cust  ! "we passed it!
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	call dxget("ACTION2",action2$)
	action2$=UCase$(RTrim$(action2$))
	tmpcnt=maxcnt
	clear List$[]
!
 	List$[0]=bsdel$,"CUSTOMERGENERAL",fdel$
	!
	WebStr$="ID",fdel$,"Allow Manual Shiplist",fdel$,"AP Contact",fdel$
	Webstr$=WebStr$,"AP Phone",fdel$,"Customer Discount",fdel$
	WebStr$=WebStr$,"Default Order Type",fdel$,"Last Edit",fdel$
	WebStr$=WebStr$,"Prevent Mass Delete",fdel$,"Price on Order",fdel$,"Ship With Invoice",fdel$
	Webstr$=Webstr$,"Allow Substitute"+fdel$
	Webstr$=Webstr$,"Price Inc. Note"+fdel$ 
 	Webstr$=Webstr$,"Back Order"+fdel$
	Webstr$=Webstr$,"# Duplicate Inv"+fdel$
	Webstr$=Webstr$,"CUSTOM_CUSTOMER"+fdel$
	Webstr$=Webstr$,"CUTMUPCT"+fdel$
	Webstr$=Webstr$,"PRTMFGPART"+fdel$
	WebStr$=WebStr$,"POS Cust Only"+fdel$
	WebStr$=WebStr$,"Premier Customer"+fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	dprec=1
	if custrec<=0 let dprec=0
	if action2$="ADD" let dprec=1
	if dprec ! was CustRec>0 - we want to show defaults on add
		CustKey$=Cust$
		mode$="=" ! "match
		Dir=1 ! "custnotes dir 1 = Customer No
		CNrec=filegetcustnotes(e$,CNchan,mode$,dir,CustKey$,CN.) 
		If CNRec<0 Clear CN.
		WebStr$=CustKey$,fdel$ ! Customer key
		tmp$="N" \ if Cust.ManualShiplist=1 let tmp$="Y"
        WebStr$=WebStr$,tmp$,fdel$ ! allow manual shiplist
		WebStr$=WebStr$,RTrim$(CN.ApContact$),fdel$ ! ap contact name
		WebStr$=WebStr$,RTrim$(CN.ApPhone$),fdel$ ! ap phone number
		WebStr$=WebStr$,RTrim$(Cust.CustomerDiscount Using "###.##"+" %"),fdel$ ! "customer disc %
		WebStr$=WebStr$,Str$(Cust.DefaultOrderType),fdel$ ! default order type
		tmp1$=Cust.LastEditDate Using "&&&&&&" ! need yymmdd
	    Call FormatDate(tmp1$,tmp$,tmp,4)
	    if tmp let tmp$=""
		WebStr$=WebStr$,tmp$,fdel$ ! "last edit date
		tmp$="N" \ if Cust.PreventMassDelete=1 let tmp$="Y"
		WebStr$=WebStr$,tmp$,fdel$ ! "prevenet mass delete ! ?? also one at 720 in custfile??
		tmp$="N" \ if Cust.PrintOrderPrices=1 let tmp$="Y"
		WebStr$=WebStr$,tmp$,fdel$ ! print prices on orders
		WebStr$=WebStr$,RTrim$(Cust.ShpWithInvoiceYN$),fdel$ ! Ship with invoice
		Tmp$="N"\ If cust.Substitutes<>0 let tmp$="Y" ! 
		WebStr$=WebStr$,tmp$,fdel$ ! Allow substitute
		tmp$="N"\ if cust.NotifyPriceChg<>0 let tmp$="Y"
		WebStr$=WebStr$,tmp$,fdel$ ! Price Notification
		tmp$="N" \ if cust.BoSAllowedFlag<>0 let tmp$="Y"	
		WebStr$=WebStr$,tmp$,fdel$ ! Back Order
		Webstr$=Webstr$,cust.NoDupInvToPrt$+fdel$	! # Duplicate Inv.
		mat read #CTLChan,115,60;custom_customer$;
		webstr$=webstr$,rtrim$(custom_customer$),fdel$
		webstr$=webstr$,str$(cust.Omahacpmup),fdel$
		let tmp$="N"
		if rtrim$(ucase$(cust.PrntMfgPart$))="Y" let tmp$="Y" 
		webstr$=webstr$,tmp$,fdel$
		tmp$="N" \ if cust.PrepaidMin=1 let tmp$="Y"
		webstr$=webstr$,tmp$,fdel$ ! POS Only Customer (layout wrong!)
		! add for 62459 - Premier Customer
		tmp$="N" \ if CN.PRMCUST$="A" or cn.PRMCUST$="S" let tmp$=cn.PRMCUST$
		!webstr$="Premier Customer"+fdel$+X$[1,1]
		webstr$=webstr$+tmp$[1,1]+fdel$ ! currently 3 options A,S,N
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	endif
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustGeneral
! -------------------------------------------------------------------------------------
External Sub GetCustCCard(e$,Cust$,List$[],SList$[],CustRec,maxcnt,CTLChan,CCChan,CustChan,Intco,PWENT$,Cust. as cust)

  ! Creates a list of the customer's Credit Cards on file
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer misc list
  ! SList$[]	: SELECTOR LIST
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : Control file channel
  ! CCChan     : customer ccctype file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
 
  try
!
   dim 1%,tmp1,Dir,row,srow
	dim 2%,tmp2,tmpcnt,stmpcnt
    dim 3%,tmp3,CCRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],CCType$[100]
	dim a2$[50],CCPSWD$[10],userid$[10],action2$[30]
!
	dim CCType. as ccctype
!	dim cust. as cust  ! "we passed it!
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	call dxget("S_USER.ID",userid$)
	call dxget("ACTION2",action2$)
	action2$=RTrim$(UCase$(action2$))
	  mat read #ctlchan,49,0;CCType$; ! credit card type descs
	  mat read #ctlchan,2,120;ccpswd$;
	ccpswd$=RTrim$(UCase$(ccpswd$))
	urec=GetUIDRec(e$,IntCo,Userid$)
	if urec>0
		UCChan=OpenFile(-9988,intCo)
		if ucchan>0
			mat read #ucchan,urec,336;A2$;
			try close #ucchan Else rem
		Else
			clear a2$
		Endif
	Else
		clear a2$
	Endif
	PWEnt$=UCase$(PWEnt$)
	tmpcnt=maxcnt;stmpcnt=maxcnt
	clear List$[]
	Clear SList$[]
!
 	SList$[0]=bsdel$,"CREDITCARDS",fdel$
	SList$[1]="ID",fdel$,"Name",fdel$
	WebStr$=Cust$[1,6],fdel$ ! Customer # in key
	WebStr$=WebStr$,RTrim$(Cust.Name$),fdel$ ! customer name
	SList$[2]=WebStr$
	SList$[3]=esdel$ ! end of section
	SList$[4]=bsdel$,"CARDSELECT",fdel$ ! start of selector section
	List$[0]=bsdel$,"CARDDATA",fdel$
	!
	WebStr$="ID",fdel$,"Card Type",fdel$
	Webstr$=WebStr$,"Expires",fdel$,"Card Number",fdel$
	WebStr$=WebStr$,"Dept Name",fdel$
	SList$[5]=WebStr$
	WebStr$=WebStr$,"Address",fdel$
	webstr$=webstr$,"City",fdel$
	Webstr$=Webstr$,"State",fdel$
	WebStr$=WebStr$,"ZipCode",fdel$
	Webstr$=webstr$,"Sec Code",fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	srow=6 ! starting row for selector
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	if srow>stmpcnt let stmpcnt=expandarray(e$,SList$[])
	if a2$[30,30]<>"Y" goto NoCCScrn
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
		CustKey$=Cust$+"  "
		mode$=">=" ! "match or greater
		Dir=1 ! "cctype dir 1 = Customer No/credit card #
	  DO
		CCrec=filegetccctype(e$,CCchan,mode$,dir,CustKey$,CCType.) 
		If CCRec<0 Or CustKey$[1,6]<>Cust$[1,6] Exit do
		mode$=">" ! "switch to next key
		Dir=1 ! still use dir 1
		WebStr$=CustKey$[1,6],fdel$ ! Customer # in key
		! WebStr$=WebStr$,RTrim$(Cust.Name$),fdel$ ! customer name in header
		tmp1=CCType.CCType
		tmp2=tmp1*10-9
		tmp$=""
		if tmp1>0 and tmp1<11 ! "zero is no desc
		  tmp$=CCType$[tmp2,tmp1*10]
		end if
		WebStr$=WebStr$,RTrim$(Str$(tmp1)+" "+tmp$),fdel$ ! credit card type & name
		tmp$=CCType.ExpDate using "&&&&&&" ! "mmyyyy
		tmp1$=tmp$[1,2],"/",tmp$[3,6] ! convert to MM/YYYY
		WebStr$=WebStr$,RTrim$(tmp1$),fdel$ ! card expire MM/YYYY
		if action2$="" ! inquiry
			if pwent$<>ccpswd$
				tmp$=RTrim$(CCType.CCNum$)
				x2=Len(tmp$)
				if x2>4
					for x=1 to x2-4 ! leave last 4
						tmp$[x,x]="*"
					next x
				Else ! send none
					tmp$[1,x2]="*****"
				Endif
				webstr$=webstr$,tmp$,fdel$ ! coded card
			Else ! match
				WebStr$=WebStr$,RTrim$(CCType.CCNum$),fdel$ ! "card number
			Endif
		Else ! edit
			WebStr$=WebStr$,RTrim$(CCType.CCNum$),fdel$ ! "card number
		Endif
		WebStr$=WebStr$,RTrim$(CCType.CCName$),fdel$ ! department
		SList$[srow]=WebStr$
		srow=srow+1
		if srow>stmpcnt let stmpcnt=expandarray(e$,SList$[])
		WebStr$=WebStr$,RTrim$(CCType.CCAddr$),fdel$ ! address of cardholder
		WebStr$=WebStr$,RTrim$(CCType.CCCITY$),fdel$ ! city
		WebStr$=WebStr$,RTrim$(CCType.CCState$),fdel$ ! state
		WebStr$=WebStr$,RTrim$(CCType.CCZip$),fdel$ ! zip of cardholder
		webstr$=webstr$,RTrim$(cctype.CCSCODE$),fdel$ ! sec code
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	  Loop
	endif
	NoCCScrn: ! done
	!
	List$[row]=esdel$ ! end of section
	SList$[srow]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustCCard
! -------------------------------------------------------------------------------------
External Sub GetCustABook(e$,Cust$,Slist$[],List$[],CustRec,maxcnt,CTLChan,ABChan,CustChan,Cust. as cust)

  ! Creates a list of the customer's Address Book Entries on file
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! SList$[]	: .net selector string
  ! List$[]    : Customer misc list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! CTLChan    : Control file channel
  ! ABChan     : customer Contact file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
 
 ! Note: this requires a "dropdown list" selector of which record to display
 ! I will do this by creating 2 lists (1: for ddl, 2: for data) that
 ! 1-ddl added to the string as data read, the 2-data sent back as normal
  try
!
   dim 1%,tmp1,Dir
	dim 2%,tmp2,tmpcnt,row,srow,stmpcnt
    dim 3%,tmp3,CCRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],action2$[30]
!	dim SList$[maxcnt,700]
!
	dim CABook. as contlist
!	dim cust. as cust  ! "we passed it!
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	call dxget("ACTION2",action2$)
	action2$=RTrim$(UCase$(action2$))

	tmpcnt=maxcnt
	stmpcnt=maxcnt

	clear List$[] ! main data list
	clear SList$[] ! selector (dropdown) list
!
 	List$[0]=bsdel$,"ADDRBOOKDATA",fdel$ ! data section header
	SList$[0]=bsdel$,"ADDRESSBOOK",fdel$ ! list section header
	!
	WebStr$="ID",fdel$,"CONT#",fdel$,"First Name",fdel$,"Last Name",fdel$
	Webstr$=WebStr$,"Title",fdel$ ! "extent of selector list
	SList$[1]=WebStr$ ! load it to temp selector list
	WebStr$=WebStr$,"Phone Number",fdel$ ! continue with data headers
	WebStr$=WebStr$,"Phone Ext",fdel$,"EMail",fdel$
	Webstr$=WebStr$,"Pager",fdel$,"Pager PIN",fdel$
	WebStr$=WebStr$,"FAX Number",fdel$,"Cell Number",fdel$
	Webstr$=WebStr$,"Phone 2",fdel$,"FAX 2",fdel$
	if action2$="" ! inquiry
		webstr$=webstr$,"EMail CC1",fdel$,"EMail CC2",fdel$
		webstr$=webstr$,"EMail CC3",fdel$
	Else ! already coded on web for Comment
		WebStr$=WebStr$,"Comment 1",fdel$,"Comment 2",fdel$
		WebStr$=WebStr$,"Comment 3",fdel$
	Endif
	webstr$=webstr$,"Last Edit",fdel$
	Webstr$=WebStr$,"CRTYPE",fdel$,"CTDESC",fdel$
    List$[1]=WebStr$ ! load to data list
	!
	row=2 ! starting row for data
	srow=2 ! start of sel row
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Cust$[7]="" ! make sure its only 6
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
		CustKey$="CS"+Cust$+"  "
		mode$=">=" ! "match or greater
		Dir=1 ! "dir1 = type(CS) cust# ABnumber
	  DO
		CCrec=filegetcontlist(e$,ABchan,mode$,dir,CustKey$,CABook.) 
		If CCRec<0 Or CustKey$[3,8]<>Cust$[1,6] Exit do
		if CustKey$[1,2]<>"CS" Exit do ! customer is always CS type
		mode$=">" ! "switch to next key
		Dir=1 ! still use dir 1
		WebStr$=CustKey$[3,8],fdel$ ! Customer # in key
		WebStr$=WebStr$,RTrim$(CustKey$[9,10]),fdel$ ! contact number
		WebStr$=WebStr$,RTrim$(CABook.FirstName$),fdel$ ! first name
		WebStr$=WebStr$,RTrim$(CABook.LastName$),fdel$ ! last name
		WebStr$=WebStr$,RTrim$(CABook.TitlePos$),fdel$ ! title/pos
		SList$[srow]=WebStr$ \ srow=srow+1
		if srow<stmpcnt let stmpcnt=expandarray(e$,SList$[])
		WebStr$=WebStr$,FMTphone2$(Str$(CABook.Phone)),fdel$ ! phone
		WebStr$=WebStr$,Str$(CABook.PhoneExt),fdel$ ! extension
		WebStr$=WebStr$,RTrim$(CABook.EmailAddr$),fdel$ ! Email
		WebStr$=WebStr$,FMTphone2$(Str$(CABook.Pager)),fdel$ ! pager
		WebStr$=WebStr$,Str$(CABook.PagerPin),fdel$ ! pager pin
		WebStr$=WebStr$,FMTphone2$(Str$(CABook.Fax)),fdel$ ! fax
		WebStr$=WebStr$,FMTphone2$(Str$(CABook.CellPhone)),fdel$ ! cell
		WebStr$=WebStr$,FMTphone2$(Str$(CABook.Phone2)),fdel$ ! phone 2
		WebStr$=WebStr$,FMTphone2$(Str$(CABook.Fax2)),fdel$ ! fax 2
		WebStr$=WebStr$,RTrim$(CABook.Comment1$),fdel$ ! comment
		WebStr$=WebStr$,RTrim$(CABook.Comment2$),fdel$ ! comment
		WebStr$=WebStr$,RTrim$(CABook.Comment3$),fdel$ ! comment
		if CABook.EditDate<>0 ! it's julian date (it says)
		  tmp$=JDate$(CABook.EditDate) ! julian date to mm/dd/yyyy
		else
		  tmp$="      "
		endif
		WebStr$=WebStr$,RTrim$(tmp$),fdel$ ! last edit date
		! need contact type/desc
		x=CABook.ContrecordType
		if x<1 or x>3 let x=1
		tmp$="Sales" \ if x=2 let tmp$="Payables"
		if x=3 let tmp$="Other"
		webstr$=webstr$,Str$(X),fdel$,tmp$,fdel$
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	  Loop

	endif
	! send selector list now
	SList$[srow]=esdel$ ! end of section
	! call AddToStr(e$,rstr$,SList$[]) ! "add the selector list to string before returning
	!
	List$[row]=esdel$ ! end of section (data)
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustABook
! -------------------------------------------------------------------------------------
External Sub GetCustRoute(e$,Cust$,List$[],CustRec,maxcnt,intCo,CTLChan,ZNChan,CustChan,Cust. as cust)

  ! Creates a list of the customer's Routing (System Flag)
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer misc list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! CTLChan    : Control file channel
  ! ZNChan     : Zone file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
 
  try
!
   dim 1%,tmp1,Dir,CSZ
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,CSRec,ZNRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],P61$[256],ZNKey$[64]
!
	dim Zone. as zonefle
	dim CSZone. as cszone
!	dim cust. as cust  ! "we passed it!
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	Try
	  mat read #CTLChan,61,0;P61$; ! system flags
	Else
	  CtlChan=OpenFile(-9999,intCo) \ if CtlChan<0 Error 42
	end Try
	mat read #CTLChan,61,0;P61$; ! system flags
	If P61$[34,34]<>"Y" Let P61$[34,34]="N"
	CSZ=0
	if P61$[34,34]="Y" ! uses cszone
	  CSZ=OpenFile(-9997,intCo) \ if CSZ= -1 let P61$[34,34]="N" ! not found = not used
	endif
	tmpcnt=maxcnt
	clear List$[]
!
 	List$[0]=bsdel$,"ROUTING",fdel$
	! If P61$[34,34]="N" ! send customer
	 WebStr$="ID",fdel$,"Zone",fdel$,"Desc",fdel$,"Stop",fdel$
	! Else ! send cszone (all one string)
	 WebStr$=WebStr$,"ShipList",fdel$,"Lead Time",fdel$
	 WebStr$=WebStr$,"Sun Zone",fdel$,"Sun Stop",fdel$
	 Webstr$=WebStr$,"Mon Zone",fdel$,"Mon Stop",fdel$
	 WebStr$=WebStr$,"Tue Zone",fdel$,"Tue Stop",fdel$
	 Webstr$=WebStr$,"Wed Zone",fdel$,"Wed Stop",fdel$
	 WebStr$=WebStr$,"Thu Zone",fdel$,"Thu Stop",fdel$
	 Webstr$=WebStr$,"Fri Zone",fdel$,"Fri Stop",fdel$
	 WebStr$=WebStr$,"Sat Zone",fdel$,"Sat Stop",fdel$
	 WebStr$=WebStr$,"SysFlag",fdel$
	! endif
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Cust$[7]="" ! make sure its only 6
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	  ! if P61$[34,34]="N" ! customer data
		ZNKey$=Cust.ZoneNumber$
		mode$="="
		dir=1
		ZNRec=filegetzonefle(e$,ZNChan,mode$,dir,ZNKey$,Zone.)
		if ZNRec<0 Clear Zone.
		WebStr$=Cust$,fdel$ ! cust #
		if P61$[34,34]="N" ! customer data
		  !send the desc separate because if edit drop lists
		  WebStr$=WebStr$,Cust.ZoneNumber$,fdel$
		  WebStr$=WebStr$,RTrim$(Zone.Desc$),fdel$ ! "zone & desc
		  WebStr$=WebStr$,Str$(Cust.sStop),fdel$ ! stop
		else
		  WebStr$=WebStr$,FDEL$,fdel$,fdel$ ! "send nulls for zone/stop
		endif
	  ! Else ! cszone data sent
		CustKey$=Cust$+".000000" ! use zero shiplist as customer
		mode$="=" ! match only
		Dir=1 ! "cszone dir 1 = Customer No/Shiplist #
		CSRec=0
		If P61$[34,34]="Y" ! "only if there/used
		 CSRec=filegetcszone(e$,CSZ,mode$,dir,CustKey$,CSZone.) 
		endif
		If CSRec<=0 Clear CSZone.

		! WebStr$=CustKey$[1,6],fdel$ ! Customer # in key (sent already)
		WebStr$=WebStr$,CustKey$[8,13],fdel$ ! shiplist number (000000)
		WebStr$=WebStr$,Str$(CSZone.LeadTime),fdel$ ! leadtime
		For tmp1=0 to 6
		  if tmp1=0 let ZNKey$=CSZone.SunZone$ \ tmp2=CSZone.SunStop
		  if tmp1=1 let ZNKey$=CSZone.MonZone$ \ tmp2=CSZone.MonStop
		  if tmp1=2 let ZNKey$=CSZone.TueZone$ \ tmp2=CSZone.TueStop
		  if tmp1=3 let ZNKey$=CSZone.WedZone$ \ tmp2=CSZone.WedStop
		  if tmp1=4 let ZNKey$=CSZone.ThuZone$ \ tmp2=CSZone.ThuStop
		  if tmp1=5 let ZNKey$=CSZone.FriZone$ \ tmp2=CSZone.FriStop
		  If tmp1=6 let ZNKey$=CSZone.SatZone$ \ tmp2=CSZone.SatStop
		  mode$="="
		  dir=1
		  ZNKey$=ZNKey$+"  " \ ZNKey$[3]="" 
		  If ZNKey$>"  "
		    ZNRec=filegetzonefle(e$,ZNChan,mode$,dir,ZNKey$,Zone.)
		  else
		    ZNRec=-1
		  endif
		  if ZNRec<0 Clear Zone.
		  WebStr$=WebStr$,RTrim$(ZNKey$+" "+Zone.Desc$),fdel$ ! day zone/desc
		  WebStr$=WebStr$,Str$(tmp2),fdel$ ! day Stop #
		Next tmp1
		If CSZ>0 Close #CSZ
	  ! end if ! " get zone data based on flag
	    
		WebStr$=WebStr$,P61$[34,34],fdel$ ! send system flag as last field
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustRoute
! -------------------------------------------------------------------------------------
External Sub GetCustClass(e$,Cust$,List$[],CustRec,maxcnt,intCo,CTLChan,CustChan,Cust. as cust)

  ! Creates a list of the customer's Misc fields
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer misc list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! CTLChan    : Control file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
 
  try
!
   dim 1%,tmp1,Dir,AMC,SZNC
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,AMRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],P61$[256],ZNKey$[64]
	dim custom_customer$[30]
!
	dim AMGR. as collagent
	dim SZN. as addon

!	dim cust. as cust  ! "we passed it!
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	Try
	   mat read #CTLChan,61,0;P61$; ! system flags
	Else
	   CtlChan=OpenFile(-9999,intCo) \ if CTLChan=-1 Error 42
	end try
	mat read #CTLChan,61,0;P61$; ! system flags
	mat read #CTLChan,115,60;custom_customer$;

	Custom_customer$=UCase$(Trim$(custom_customer$))
	! if p61$[42,42]=Y uses ABC Factor else none

    AMC=OpenFile(-3040,intCo) \ if AMC = -1 Error 42 ! not found = Account Manager
	SZNC=OpenFile(-2832,intCo) \ if SZNC = -1 Error 42 ! addon/sales zone

	tmpcnt=maxcnt
	clear List$[]
!
	Mode$="="
	Dir=1
	ZNKey$="     0" ! "key for sls zone desc$
	ZNRec=filegetaddon(e$,SZNC,mode$,dir,ZNKey$,SZN.)
	if ZNRec<0 Clear SZN.

 	List$[0]=bsdel$,"CLASSIFICATION",fdel$
	WebStr$="ID",fdel$
	If P61$[42,42]="Y" ! send customer abc data
	 WebStr$=WebStr$,"ABC Factor",fdel$,"ABC Score",fdel$
	Else ! send nu
	 WebStr$=WebStr$," ",fdel$," ",fdel$
	endif
	 WebStr$=WebStr$,"Acct Mgr",fdel$
	 WebStr$=WebStr$,"AuthBuy",fdel$,"ConsWhse",fdel$
	 Webstr$=WebStr$,"DefltWhse",fdel$,"DelChgLvl",fdel$
	 WebStr$=WebStr$,"SIC Code",fdel$,"Priority",fdel$
	 Webstr$=WebStr$,"Sales Area",fdel$,"BG ASN",fdel$
	 WebStr$=WebStr$,"Web Flag",fdel$
	
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Cust$[7]="" ! make sure its only 6
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
	  WebStr$=Cust$,fdel$ ! cust #
	  if P61$[42,42]="Y" ! customer ABC data
	   WebStr$=WebStr$,Rtrim$(Cust.AbcOverheadFactor Using "#.##"),fdel$
	   WebStr$=WebStr$,RTrim$(Cust.AbcScore Using "---#.##"),fdel$
	  else
	   WebStr$=WebStr$," ",fdel$," ",fdel$ ! "nothing sent
	  endif
		AMRec=Cust.CollectionAgent
		if AMRec>0 read record #AMC,AMRec,0;AMGR.;
		if AMRec<=0 Clear AMGR.
		WebStr$=WebStr$,RTrim$(Str$(Cust.CollectionAgent)+" "+AMGR.CollectionAgent$),fdel$ ! "agnt & name
		if cust.authbuylist$="" let cust.authbuylist$="N"
		WebStr$=WebStr$,RTrim$(Cust.AuthBuyList$),fdel$ ! Use Auth Buy list
		WebStr$=WebStr$,Str$(Cust.ConsignWh),fdel$ ! consignment whse
		WebStr$=WebStr$,Str$(Cust.DefaultWhse),fdel$ ! default whse
		WebStr$=WebStr$,Str$(Cust.DeliverChgLevel),fdel$ ! delivery charge level
		if custom_customer$="WENELSON"
			WebStr$=WebStr$,trim$(cust.UserDefined3$[11,20]),fdel$ ! sic code
		else
			WebStr$=WebStr$,Str$(Cust.SicCode),fdel$ ! sic code
		endif
		WebStr$=WebStr$,Str$(Cust.Priority),fdel$ ! priority
		tmp1=Cust.CustSalesZone
		if tmp1>0 and tmp1<11
		 tmp$=SZN.ZoneDesc$[tmp1*10-9,tmp1*10]
		else
		 tmp$=""
		endif
		WebStr$=WebStr$,RTrim$(Str$(Cust.CustSalesZone)+" "+tmp$),fdel$ ! slszone & desc
		if cust.networkasn$="" or cust.networkasn$=" " let cust.networkasn$="N" !patch .net needs Y or N
		WebStr$=WebStr$,RTrim$(Cust.NetworkAsn$),fdel$ ! network/BG ASN
		tmp$="N" \ if Cust.EccosFlag=1 let tmp$="Y"
		WebStr$=WebStr$,RTrim$(tmp$),fdel$ ! eccos flag

		If AMC>0 Close #AMC
		If SZNC>0 Close #SZNC

		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	endif ! valid cust rec
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustClass
! -------------------------------------------------------------------------------------
External Sub GetCustComm(e$,Cust$,List$[],CustRec,maxcnt,intCo,CTLChan,CustChan,Cust. as cust,cnotes. as custnotes)

  ! Creates a list of the customer's Commission fields
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer misc list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! CTLChan    : Control file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
 
  try
!
	dim 1%,tmp1,Dir,tmpch,CSMC,SCType
	dim 2%,tmp2,tmpcnt,Slsm
	Dim 1%,CSType[4,3]
	Dim 2%,Cs1[4],CSPCT[4,3]
	dim 3%,tmp3,CSMRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
	dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200],P9$[50]
	dim CustKey$[64],Mode$[2],blank$[100],P61$[256],SlsmName$[30]
!


!	dim cust. as cust  ! "we passed it!
!       NOPE - CSM. very broken
!	dim CSM. as custslsm ! slsm multi/split
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	Try
	   mat read #CTLChan,61,0;P61$; ! system flags
	Else
	   CtlChan=OpenFile(-9999,intCo) \ if CTLChan=-1 Error 42
	end try
	mat read #CTLChan,19,50;P9$; ! system flags
	mat read #CTLChan,61,0;P61$; ! system flags
	SCType=0 !using split commissions?
	If P9$[21,21] <> "Y" ! split by category takes priority
		SCType = P61$[72,72]
		If P61$[72,72] = "Y" Let SCType = 1
	end if
	
	CSMC=OpenFile(-9969,intCo) \ if CSMC = -1 Let SCType = 0
	! if p61$[72,72]=Y uses multiple commissions else none
	tmpcnt=maxcnt
	clear List$[]
!
 	List$[0]=bsdel$,"COMMISSION",fdel$
	WebStr$="FIELD",fdel$,"VALUE",fdel$
	List$[1]=WebStr$
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	cust$[7]=""
	CustKey$=Cust$
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	If CustRec>0
		WebStr$="ID",fdel$
		WebStr$=WebStr$,Cust$,fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		WebStr$="Comm Serv Charge",fdel$
		WebStr$=WebStr$,RTrim$(Cust.SlsComServiceChar using "###.##"+" %"),fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		WebStr$="Comm Grid",fdel$
		WebStr$=WebStr$,Str$(Cust.CommissionGrid),fdel$
		List$[row]=WebStr$
		row=row+1
		WebStr$="Comm Chargeback Grid",fdel$
		WebStr$=WebStr$,Str$(cnotes.CommCBTable),fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		if not(SCType) goto SkipSplitCommissions
		WebStr$="CommissionByCategory",fdel$
		WebStr$=WebStr$,Str$(Cust.CommissionByCategory),fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		if (Cust.CommissionByCategory) let SCType = 0
		if not(SCType) goto SkipSplitCommissions
		!
		! Split Commission Stuff
		!
		tmp3=0
		WebStr$="Comm Alloc Table",fdel$
		WebStr$=WebStr$,"Percent",fdel$ ! "header for following data
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		WebStr$="Salesperson",fdel$
		WebStr$=WebStr$,"Split",fdel$ ! "header for following data
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		CustKey$=Cust$
		CustKey$[7]=" " ! "so knows it not shiplist
		mode$="="
		Dir=1 ! only 1 dir
		! NO - very broken
		! CSMRec=filegetcustslsm(e$,CSMC,mode$,dir,CustKey$,CSM.)
		SEARCH #CSMC,2,1;CustKey$,CSMRec,E \ if e>1 error 11000
		if e
			clear cs1[]
			clear cspct[]
			clear CSType[]
		else
			Mat Read #CSMC,CSMRec,4;Cs1;
			Mat Read #CSMC,CSMRec,184;CSPCT;
			Mat Read #CSMC,CSMRec,268;CSType;
		end if
		! sales person
		let tmpch=-1 \ Slsm=cs1[0]
		if Slsm<=0 Let Slsm=cust.SalesmanCode
		let slsmname$=getslsmname$(tmpch,Slsm,intco)
		Let WebStr$=Str$(Slsm)+" "+RTrim$(Slsmname$)+fdel$
		tmp2=CSPCT[0,0]
		!if tmp2=0 and sctype <> 2 let tmp2=100
		WebStr$=WebStr$,RTrim$(tmp2 Using "###"),fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		tmp3=tmp3+tmp2
		for i = 1 to 4
			if cs1[i]>0
				! sales person
				let tmpch=-1 \ Slsm=cs1[i]
				let slsmname$=getslsmname$(tmpch,Slsm,intco)
				Let WebStr$=Str$(Slsm)+" "+RTrim$(Slsmname$)+fdel$
				tmp2=cspct[i,0]
				WebStr$=WebStr$,RTrim$(tmp2 Using "###"),fdel$
				tmp3=tmp3+tmp2
			Else
				WebStr$="0",fdel$," ",fdel$ ! "send zero row
			Endif
			List$[row]=WebStr$
			row=row+1
			if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		next i
		WebStr$="  ",fdel$,"-----",fdel$ ! "underline percents
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		WebStr$="Total of Splits",fdel$,RTrim$(tmp3 Using "####"),fdel$ ! total split
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		Close #CSMC
		SkipSplitCommissions: !
	endif ! valid cust rec
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustComm
! -------------------------------------------------------------------------------------
External Sub GetCustDocD(e$,Cust$,List$[],SList$[],CustRec,maxcnt,intCo,CTLChan,CustChan,Cust. as cust,rstr$)

  ! Creates a list of the customer's Document Del fields
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer data list
  ! SList$[]	: Selector data list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! CTLChan    : Control file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
  ! rstr$      : rstring
 
  try
!
   dim 1%,tmp1,Dir,MAXTYPE,DCDChan,ABChan,DDType,ABDir
	dim 2%,tmp2,tmpcnt,row,srow,stmpcnt
    dim 3%,tmp3,DCDRec, ABRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200],P9$[50]
	dim CustKey$[64],Mode$[2],blank$[100],P61$[256]
	dim DOCDPREFIX$[4],DOCDDESCRIPT$[24],DDKey$[64]
	DIM VIATYPE$[100],CNtype$[2],ABKey$[64],ABMode$[4]
	dim action2$[20],fields$[1,30]

!

!	dim cust. as cust  ! "we passed it!
	dim Docd. as docdeliv ! document delivery file
	dim ABK. as contlist ! contact list (address book)
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	Try
	   mat read #CTLChan,61,0;P61$; ! system flags
	Else
	   CtlChan=OpenFile(-9999,intCo) \ if CTLChan=-1 Error 42
	end try
	mat read #CTLChan,19,50;P9$; ! system flags  ??for
	mat read #CTLChan,61,0;P61$; ! system flags  ??for
	
	DCDChan=OpenFile(-9968,intCo) \ if DCDChan = -1 Error 42
	ABChan=OpenFile(-9998,intCo) \ if ABChan = -1 Error 42
	
	tmpcnt=maxcnt
	stmpcnt=maxcnt
	
	call dxget("action2",action2$)
	action2$=ucase$(action2$)
	if action2$="EDIT" !include CS address book droplist
	  clear list$[]
	  call filedroplistcontlist(e$,list$[],100,ABChan,"",fields$[],1,"CS"+cust$,"0") !drop list of address book, 0 None and 'CS' records

      call addToStr(e$,rstr$,list$[])
	  ! ALSO VIA LIST
	  clear list$[]
	  list$[0]=bsdel$,"VIALIST",fdel$
	  list$[1]="ID",fdel$,"DESC",fdel$
	  List$[2]="0",fdel$,"Print",fdel$
	  list$[3]="1",fdel$,"FAX",fdel$
	  List$[4]="2",fdel$,"EMail",fdel$
	  !List$[5]="3",fdel$,"EMail",fdel$
	  list$[5]="9",fdel$,"Not Print",fdel$
	  List$[6]=esdel$
	  call addToStr(e$,rstr$,list$[])
	  ! and a DOC TYPE LIST
	  clear List$[]
	  List$[0]=bsdel$,"DOCTYPE",fdel$
	  List$[1]="ID",fdel$,"DESC",fdel$
	  List$[2]="INV",fdel$,"Invoice",fdel$
	  List$[3]="SO",fdel$,"Sales Order",fdel$
	  List$[4]="STM",fdel$,"Statement",fdel$
	  List$[5]=esdel$
	  call addToStr(e$,rstr$,list$[])
    end if
	clear List$[]

	LET VIATYPE$[1]="Print"   
	LET VIATYPE$[11]="FAX"    
	LET VIATYPE$[21]="Email"
	VIATYPE$[91]="Not Print" !??
	CNType$="CS" ! "use same as contlist type
	MAXTYPE=3 ! maximum # of doc types (from 0)
!
 	SList$[0]=bsdel$,"DOCDELIV",fdel$ ! selector section
	List$[0]=bsdel$,"DOCDELVDATA",fdel$ ! "data section
	WebStr$="ID",fdel$,"Doctype",fdel$,"Docdesc",fdel$,"VIA",fdel$,"contkey",fdel$,"Recipient",fdel$
	SList$[1]=WebStr$
	WebStr$="ID",fdel$,"Doctype",fdel$,"Docdesc",fdel$,"VIA",fdel$,"contkey",fdel$,"Recipient",fdel$,"Fax/URL",fdel$
	List$[1]=WebStr$
	row=2 ! starting row for data
	srow=2 ! start row for sel data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	cust$[7]=""
	CustKey$=Cust$
	Dir=1 ! "of customer code
	If CustRec>0
		DDKey$=CNType$+CustKey$+" "
		mode$=">"
		Dir=1
		Do
			DCDRec=filegetdocdeliv(e$,DCDChan,mode$,dir,DDKey$,Docd.)
			If DCDRec<0 Or DDKey$[1,2]<>CNType$ Exit Do
			If DDKey$[3,8]<>Cust$[1,6] Exit Do
			WebStr$=cust$,fdel$ ! dockey
			DDType=0
			FOR TYPE=0 TO MAXTYPE
				Call DOCDSETTYPE(Type,DocDPrefix$,DocDDescript$)
			    IF DOCDPREFIX$=DocD.DocumentType$
				  Let DDType=Type
				  exit for ! exit loop NOW
				endif
			NEXT TYPE
			
			WebStr$=WebStr$,docdprefix$,fdel$,RTrim$(DocDDescript$),fdel$ ! doc desc
			tmp$=VIATYPE$[DocD.Via*10+1]
			tmp$[11]="" ! cut it at limit of desc
			WebStr$=WebStr$,str$(DocD.Via)," ",RTrim$(tmp$),fdel$ ! via
			! get data from contlist file (addr book)
			ABKey$=CNType$+Cust$+DocD.AddrEntry Using "##"
			ABMode$="=" ! exact match
			ABDir=1
			ABRec=filegetcontlist(e$,ABChan,abmode$,abdir,ABKey$,ABK.)
			If ABRec<0 
				Clear ABK. 
				ABKey$="0"
				tmp$="None"
			Else
				tmp$=ABK.TitlePos$
			Endif
			! If DocD.Via=0 let tmp$="None" \ABKey$="0" ! print has no recipient
			WebStr$=WebStr$,ABKey$,fdel$,RTrim$(tmp$),fdel$ ! recipient
			SList$[srow]=WebStr$ ! for selector - done
			srow=srow+1
			if srow>stmpcnt let stmpcnt=expandarray(e$,SList$[])
			tmp$="N/A" ! in case print is via
			If DocD.Via=1 ! fax
			  tmp$=Str$(ABK.Fax)
			endif
			If DocD.Via=2 ! email
			  tmp$=ABK.EmailAddr$
			endif
			WebStr$=WebStr$,RTrim$(tmp$),fdel$ ! fax # or URL

			List$[row]=WebStr$
			row=row+1
			if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
			  
		Loop

	endif ! valid cust rec
	Close #DCDChan
	Close #ABChan
	!
	SList$[srow]=esdel$ ! end of section
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustDocD
! -------------------------------------------------------------------------------------
External Sub GetCustRebate(e$,Cust$,List$[],CustRec,maxcnt,intCo,CustChan,Cust. as cust)
  ! Creates a list of the customer's Misc fields
  !
  ! e$         : error message
  ! Cust$      : Cust #
  ! List$[]    : Customer misc list
  ! CustRec	   : Customer Record #
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! CTLChan    : Control file channel
  ! CustChan   : customer file channel
  ! Cust.      : customer data
  try
!
	dim 1%,tmp1,Dir
	dim 2%,tmp2,tmpcnt
	dim 3%,tmp3
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
	dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100]
!
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
!
	! if p61$[42,42]=Y uses ABC Factor else none

	tmpcnt=maxcnt
	clear List$[]
!
	List$[0]=bsdel$,"CUSTREBATE",fdel$
	WebStr$="ID",fdel$
	WebStr$=WebStr$,"Type",fdel$
	WebStr$=WebStr$,"Days",fdel$
	Webstr$=WebStr$,"TypeDescription",fdel$,"GraceDays",fdel$
	Webstr$=WebStr$,"Percent",fdel$
	List$[1]=WebStr$
	!
	row=2 ! starting row for data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Cust$[7]="" ! make sure its only 6
	mode$="=" ! "exact match
	Dir=1 ! "of customer code
	! CustRec=filegetcust(e$,CustChan,mode$,dir,CustKey$,cust.) - it's passed
	if CustRec>0
		WebStr$=Cust$,fdel$ ! cust #
		WebStr$=WebStr$,str$(Cust.CustRebateType),fdel$
		WebStr$=WebStr$,Str$(Cust.CustRebateDays),fdel$
		select case Cust.CustRebateType
			case 0
				WebStr$=WebStr$,"None",fdel$
			case 1
				WebStr$=WebStr$,"Based on Paid A/R",fdel$
			case 2
				WebStr$=WebStr$,"Based on Invoice",fdel$
			case else
				WebStr$=WebStr$,"UNKNOWN",fdel$
		end select
		WebStr$=WebStr$,Str$(Cust.CustRebateGrace),fdel$
		WebStr$=WebStr$,Str$(Cust.CustRebatePercent),fdel$
		!
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	endif ! valid cust rec
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustRebate

! -------------------------------------------------------------------------------------
External Sub DOCDSETTYPE(Type,DocDPrefix$,DocDDescript$) !  Set document delivery types
IF TYPE=0
  LET DOCDPREFIX$="INV "
  LET DOCDDESCRIPT$="Invoice"
ENDIF
IF TYPE=1
  LET DOCDPREFIX$="PO  "
  LET DOCDDESCRIPT$="Purchase Order"
ENDIF
IF TYPE=2
  LET DOCDPREFIX$="SO  "
  LET DOCDDESCRIPT$="Sales Order"
ENDIF
IF TYPE=3
  LET DOCDPREFIX$="STM "
  LET DOCDDESCRIPT$="Statement"
ENDIF
End Sub ! docdsettype
! -------------------------------------------------------------------------------------
External Sub CustList(e$,IntCo,List$[],maxcnt,ctlc,cuc,debugdetail,dblog$,Userid$)
! intco = company #     doc=CustScanList.doc
! List$[] = return data
! maxcnt = max # lines
! ctlc = cntrl file chan (NEG=Bill/post to list)
! cuc = Custfile channel
! debugdetail = 0-NO, 1=YES  to show debug details
! dblog$ = file for storing debug info
! UserId$ = Userid of person running
! added - cust/slsm security 10/09/2009
Declare sub updatelog ! ,SLSearch
Declare function DoStrgSrch
  Try
	dim K$[60],P9$[50],P60$[50],P61$[256],Stxt$[60]
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	Dim k1$[60],k2$[60],k3$[60],Prod$[12],Mfld$[30]
	Dim LPCol1$[30],LPCol2$[40],LPCol3$[40],LPCol4$[40]
	Dim Spaces$[200],SUM$[4],Unit$[4],SKey$[60],PMask$[20]
	Dim X$[20],QMask$[20],Cust$[60],dmsg$[200],SLKey$[60]
	Dim HWSTR$[500],Custom_customer$[30]
	Dim SPKey$[50],SPName$[30]
	
	Dim 1%,SType,LPSrch,OType,Whse,Pram[5],AVUM,BPList
	Dim 1%,Cnvtu[2],Flag,X1[9],X[9],PSD[2],A5[10]
	Dim 2%,row,tmpcnt,Custnum,Dept,Shpl,X2[9],Cust,Q0[1]
	Dim 2%,JDate[5],Frq[2],CustSec[1],USlsm
	Dim 3%,Rec[99],QtyAvl,Amount,CNVTA,X3[9]
	If debugdetail let debug=1 Else let debug=0
	if ctlc<0 let bplist=1 \ ctlc=abs(ctlc) ! bill to
	if cuc<0 let bplist=2 \ cuc=abs(cuc) ! post to
	Dim Cust. as cust
	dim CKW. as cslkeywrd
	dim Shpl. as shiplist
	dim prt. as prtdefault
	Dim CN. as custnotes
	Spaces$=" ",Spaces$
	Try
	  Mat read #ctlc,19,50;p9$;
	else
	  CTlc=OpenFile(-9999,Intco) \ if ctlc=-1 Error 42
	End try
	UCREC=GetUIDRec(e$,IntCo,Userid$)
	If UCREC>0
		UCC=OpenFile(-9988,IntCo)
		if UCC>0
			mat read #UCC,UCRec,386;A5;
			Close #UCC
		Else 
			A5[5]=0 ! allow
		Endif
	Else ! no rec
		A5[5]=0 ! allow it?
	Endif
	!! if UCase$(Trim$(userid$))="JIMS" call dxsave(0,"tmp/csin.txt!")
	mat read #ctlc,115,60;custom_customer$;
	Custom_customer$=UCase$(RTrim$(custom_customer$))
	If custom_customer$="MORRISETTE" LET A5[5]=0 ! TASK#32430
	Let USlsm=A5[5] ! slsm for security
	Mat Read #ctlc,19,50;p9$;
	Mat Read #ctlc,60,50;P60$;
	Mat Read #ctlc,61,0;P61$;
	
	Returnstatus=1 ! ok flag
	If Cuc<=0
		CUC=OpenFile(-1808,IntCo) \ if CUC=-1 Error 42
	Endif
	SMC=OpenFile(-1824,IntCo) \ if SMC=-1 Error 42 ! salesman file
	CNC=Openfile(-720,intCo) \ If CNC = -1 Error 42 !custnotes
	! get search parameters to find other files
	Call DXGet("STEXT",tmp$) ! search text
	Let Stxt$=tmp$ ! RTrim$(tmp$) ! rtrim removes characters?
	Call DXGet("STYPE",tmp$) ! search based on
	tmp$=RTrim$(tmp$) \ tmp$=UCase$(tmp$)
	SType=-1 ! no type yet
	If tmp$="NAME" Let SType=0 ! Name type 
	If tmp$="CODE" Let SType=1 ! 
	If tmp$="ADDRESS" Let SType=2 !
	If tmp$="CITY" Let SType=3 ! 
	If tmp$="STATE" let SType=4 !
	If tmp$="ZIPCODE" Let SType=5 !
	If tmp$="UDA1" let SType=6 ! UDA
	If tmp$[1,4]="KEYW" Let SType=7 ! keyword
	If tmp$="PHONE" Let Stype=8 ! Phone
	If tmp$="CONTACT" let SType=9
	If tmp$="ALL" let SType=10 ! scan all
	Call DXGet("BCDATA",tmp$) ! begins with/contains
	DType=0 ! begins with
	tmp$=UCase$(tmp$)
	If tmp$[1,1]="C" let DType=1 ! contains
	Call dxget("INCLSL",tmp$) ! include shiplist
	shpl=0 \ if UCase$(RTRIM$(tmp$))="Y" let shpl=1
	Call dxget("DIV",tmp$) ! division
	div=tmp$ \ If div<0 or div>99 or fra(div) let div=0
	if RTrim$(tmp$)="" let div=-1 ! use default
	if custom_customer$="ACTION" and div<0 let div=0 ! no default - only sent
	if bplist let div=0 ! all bill/post tos? Yes
	if div<0 ! get dflt
		Call GetPortDefault(e$,IntCO,UserID$,portnum,rec_uac,prt.)
		let div=prt.Div ! now default
	Endif
	! got passed data - continue
	If SType=7 ! need keyword index
		KWC=OpenFile(-9971,IntCo) \ if KWC=-1 Error 42 ! cust keyword index file
		SFC=buildsort(e$,30,0) ! index file
	Endif
	If SType=10 or stype=7 ! need keyword file
		CKC=OpenFile(-9972,IntCo) \ if CKC=-1 Error 42 ! cust keyword file
	Endif
	if shpl=1
		SLC=OpenFile(-2112,Intco) \ if SLC=-1 Error 42 ! shiplist
		! uses SFC & CKC
	Endif
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
	if debugdetail
		tmp$="BEGIN" \ if dtype=1 let tmp$="CONTAIN"
		dmsg$="Scan  T="+Str$(SType)
		dmsg$=dmsg$+" "+tmp$+" "+Stxt$
		Call updatelog(debug,dblog$,dmsg$,Userid$)
	Endif
	Clear List$[]
	Let tmpcnt=maxcnt;row=0
	! LIST HEADER
	List$[0]=bsdel$,"CUSTOMERSEARCH",fdel$
	WebStr$="CUSTID",fdel$,"NAME",fdel$
	WebStr$=WebStr$,"ADDR1",fdel$,"ADDR2",fdel$
	WebStr$=WebStr$,"CITY",fdel$,"ST",fdel$
	WebStr$=WebStr$,"ZIP",fdel$,"PHONE",fdel$
	!tmp$="UDA" \ if stype=7 or stype=10 let tmp$="KEYWORD"
	let tmp$="KEYWORD"
	WebStr$=WebStr$,"CONTACT",fdel$,tmp$,fdel$
	Webstr$=webstr$,"BILLTO",fdel$
	let webstr$=webstr$,"ABC",fdel$ ! for Rutherford
	webstr$=Webstr$,"SALESPERSON",fdel$ ! always
	WebStr$=WebStr$,"PREMIERCUST",fdel$ ! always (not on shiplist??)
	List$[1]=WebStr$
	row=2;K2$=""
	Let SKey$=Spaces$;NumSrch=0
	if stype=1 ! and dtype=0 ! code
		x3=Stxt$
		!SKey$=X3 Using "######"
		!if x3 let k2$=Skey$ Else Let K2$=""
		stxt$=Str$(X3)
	Endif
	! now the scans - do if / endif and a loop
	NxtKey: ! start here
	notcustm=0 ! for shiplist match and cust doesn't
	If SType<>7 ! all rest use custfile
		CUR=filegetcust(e$,CUC,">",1,SKey$,Cust.)
		NumSrch=NumSrch+1
		If Cur<=0 let E$="" \ goto csdone
		if bplist ! wants bill/post to (no billtos on list)
			if bplist=1 and cust.CustomerBillTo<>cust.CustomerCode goto NxtKey
			if bplist=2 and cust.ARPostCust<>cust.CustomerCode goto NxtKey
		Endif
		if div>0 and cust.Division<>div goto NxtKey ! not same division
		tmp$=UCase$(STxt$) ! matrh string (always compare same CASE)
		If Len(tmp$)=0 goto AllMtch ! no search data? ALL MATCH?
		If stype=0 let tmp1$=UCase$(cust.Name$)! name
		if stype=1 ! by code
			let tmp1$=Spaces$
			if K2$<>"" if skey$[1,6]<>K2$ goto csdone
			X3=Skey$;tmp1$=Str$(X3)
		Endif
		if stype=2 let tmp1$=UCase$(cust.Addr1$)+UCase$(cust.Addr2$) ! address
		If stype=3 let tmp1$=UCase$(cust.City$) ! city
		if stype=4 let tmp1$=UCase$(cust.State$) ! state
		if stype=5 let tmp1$=cust.Zip4$ ! zip
		if stype=6 let tmp1$=UCase$(cust.UserDefined1$) ! uda1
		if stype=8 let tmp1$=cust.Phone$ ! phone
		if stype=9 let tmp1$=UCase$(cust.Contact$) ! contact
		If Stype=10 ! load/check all
			X1=0
			For x=1 to 8 ! load/check 8 fields
				If X=1 let tmp1$=UCase$(cust.Name$)! name
				if X=2 let tmp1$=UCase$(cust.Addr1$)+UCase$(cust.Addr2$) ! address
				If X=3 let tmp1$=UCase$(cust.City$) ! city
				if X=4 let tmp1$=UCase$(cust.State$) ! state
				if X=5 let tmp1$=cust.Zip4$ ! zip
				if X=6 let tmp1$=UCase$(cust.UserDefined1$) ! uda1
				if X=7 let tmp1$=cust.Phone$ ! phone
				if X=8 let tmp1$=UCase$(cust.Contact$) ! contact
				! do check
				X1=DoStrgSrch(dtype,tmp$,tmp1$)
				If X1>=1 Let X=99 ! search til found only
			Next X
		Else ! single search
		! search string
		  X1=DoStrgSrch(dtype,tmp$,tmp1$)
		Endif
		! if stype=1 let x1=1 ! all codes match
		if SType<>10 and shpl=0 and x1<>1 goto Nxtkey ! no match - cust only
		if stype<>10 and shpl=1 and x1<>1 let notcustm=9
		! if also shiplist - KEEP GOING!!! and load webstr$
		If Stype=10 and x1<>1 ! no match yet on ALL- check keyword file
			Cust$=" ",Cust$;X1=0
			Cust$[1,6]=Cust.CustomerCode Using "######"
			Cust$[8]="" ! leave 7 blank
			CKR=filegetcslkeywrd(e$,CKC,"=",1,Cust$,CKW.)
			If CKR<=0 goto NxtKey ! not found anywhere
			tmp1$=UCASE$(CKW.Keyword1$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword2$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword3$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword4$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword5$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword6$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword7$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword8$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword9$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword10$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword11$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword12$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword13$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword14$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword15$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword16$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword17$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword18$) ! Name 1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword19$) ! Name 2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword20$) ! Addr1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword21$) ! Addr1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword22$) ! Addr2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword23$) ! Addr2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword24$) ! City
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword25$) ! State
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword26$) ! Zip
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword27$) ! Phone
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword28$) ! Contact
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword29$) ! AP Phone
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword30$) ! AP Contact
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			if not(shpl) Goto NxtKey ! no match
			if shpl let notcustm=9 ! no cust - maybe shiplist?
		GotKWMtch: ! found one - continue
		Endif ! of also check keywords on all
	Endif ! of type<>7
	If Stype=7  ! do keywords ONLY - incleding shiplist
		If NumSrch=0 let K$=" ",K$
		iF dtype=0 ! begins with
			If NumSrch=0 let K$=UCase$(STXT$)+Spaces$ ! blank fill it!
			Search #KWC,3,1;K$,R,E
			NumSrch=NumSrch+1
			If E=2 goto csdone
			let tmp$=UCase$(STXT$)
			let tmp1$=UCase$(K$[1,15])
			If Len(tmp$)>0 
				If tmp$<>tmp1$[1,len(tmp$)] goto csdone ! no match
			Endif ! no search = ALL MATCH
		Else ! contains (search ALL KeyWords) - includes shiplist keywords!
			Search #KWC,3,1;K$,R,E
			NumSrch=NumSrch+1
			If E=2 goto csdone
			let tmp$=UCase$(STXT$)
			let tmp1$=UCase$(K$[1,15])
			If Len(Tmp$)>0 
				Call StringSearch(tmp1$,tmp$,X1) ! x1=1 for found
				if x1<1 goto nxtkey ! not found
			Endif ! all match
		Endif
		! so matches - get customer
		SLKWRD=0
		Cust$=K$[16,21] \ if K$[22,22]="." let SLKWrd=1 ! NxtKey ! shiplist
		if slkwrd and not(shpl) goto NxtKey ! no shiplists
		cur=filegetcust(e$,CUC,"=",1,Cust$,cust.)
		If CUR<0 goto NxtKey ! not found
		if div>0 and cust.Division<>Div goto NxtKey ! wrong div
		!cust$=K$[16] ! check whole / cust or keyword
		Search #SFC,4,1;Cust$,CUR,E
		If E=1 Goto NxtKey ! already sent once!
		let skey$=K$[16,21]
	Endif
	AllMtch: ! did not enter search text - ALL MATCH
	! first do a sslsm sec check - Do internal chk instead of call "custsec.dl4"
	If USlsm>0 ! has one on ucc
	     CUSTSEC[0]=cust.customercode
           CUSTSEC[1] = 1
		 if p9$[21,21]="N"
			call "custsec.dl4",Custsec[],ctlc,userid$,e$,rstr$
		 else
			custsec[0]=0
		 endif
		 if custsec[0]=-1 goto nxtkey ! NO ACCESS - DIFF SLSM
		rem if cust.SalesmanCode<>USlsm goto nxtkey ! NO ACCESS - DIFF SLSM
	Endif
	! made thru - load string - including where it's a shiplist keyword
	if cust.customercode<=0 goto NxtKey
	WebStr$=Str$(cust.CustomerCode),fdel$ ! cust #
	WebStr$=WebStr$,RTrim$(cust.Name$),fdel$ ! name
	WebStr$=WebStr$,RTrim$(cust.Addr1$),fdel$ ! addr 1
	WebStr$=WebStr$,RTrim$(cust.Addr2$),fdel$ ! addr 2
	WebStr$=WebStr$,RTrim$(cust.City$),fdel$ ! city
	WebStr$=WebStr$,RTrim$(cust.State$),fdel$ ! state
	WebStr$=WebStr$,RTrim$(cust.Zip4$),fdel$ ! zip
	WebStr$=WebStr$,RTrim$(cust.Phone$),fdel$ ! phone
	WebStr$=WebStr$,RTrim$(cust.Contact$),fdel$ ! contact
	If Stype<>7 and SType<>10
		WebStr$=WebStr$,RTrim$(cust.UserDefined1$),fdel$ ! uda (if not keyword)
	Else ! is keyword
		WebStr$=WebStr$,RTrim$(tmp1$),fdel$ ! keyword match
	Endif
	webstr$=webstr$,Str$(Cust.CustomerBillTo),fdel$ ! billto
	WEBSTR$=webstr$,str$(cust.AbcScore),fdel$ !for Rutherford
	if cust.SalesmanCode>0
		let spkey$=" ",spkey$
		let spkey$=cust.SalesmanCode using "###"
		Search #SMC,2,1;spkey$,R9,E
		if not(e)
			mat read #smc,r9,0;spname$;
		Else
			clear spname$
			spname$="Slsprsn not on file"
		Endif
	Else
		clear spname$
		spname$="No Salesperson entered"
	Endif
	Webstr$=webstr$,Str$(cust.SalesmanCode)," ",RTrim$(spname$),fdel$
	!added 08/2017 - premier customer indicator (62459)
	k3$=" ",k3$;k3$=cust.CustomerCode using "######"
	CNrec=filegetcustnotes(e$,CNC,"=",1,K3$,CN.) 
	If CNRec<0 Clear CN.
	Clear X$
	X$="N" \ if CN.PRMCUST$="A" or CN.PRMCUST$="S" let X$="Y"
	webstr$=webstr$,X$,fdel$ ! is it premier customer Y or N
	if notcustm=9 and shpl
		let HWSTR$=webstr$ ! hold in case shiplist match
	Else ! just add it
		List$[row]=WebStr$
		Let row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Endif
	if row>1000 ! put limit on - prevent 2mb error
		returnstatus=0
		e$="Please narrow search"
		goto CSDone
	Endif
	SLKWord: ! 
	IF shpl ! wants shiplist also
		! call SLSearch() ! can't send all data - so insert code
		SLKey$=SKey$+"  "
	NxtSLKey: ! start here
	!If SType<>7 ! all rest use custfile - nope still thru all shipl 
		SLR=filegetshiplist(e$,SLC,">",1,SLKey$,shpl.)
		NumSrch=NumSrch+1
		If SLr<=0 let E$="" \ goto csldone
		If SLKey$[1,6]<>SKey$[1,6] let e$="" \ goto CSLDone
		
		tmp$=UCase$(STxt$) ! match string (always compare same CASE)
		If Len(tmp$)=0 goto AllSLMtch ! no search data? ALL MATCH?
		If stype=0 let tmp1$=UCase$(shpl.Name$)! name
		if stype=1 ! by code
			let tmp1$=Spaces$
			if K2$<>"" if skey$[1,6]<>K2$ goto csldone
			X3=Skey$;tmp1$=Str$(X3)
		Endif
		if stype=2 let tmp1$=UCase$(shpl.Address$)+UCase$(shpl.OptAddress$) ! address
		If stype=3 let tmp1$=UCase$(shpl.City$) ! city
		if stype=4 let tmp1$=UCase$(shpl.State$) ! state
		if stype=5 let tmp1$=shpl.ZipCode$ ! zip
		if stype=6 let tmp1$=UCase$(shpl.UdaAlpha1$) ! uda1
		if stype=7 let x1=1 ! the keywords for both gotten above
		if stype=8 let tmp1$=shpl.PhoneNumber$ ! phone
		if stype=9 let tmp1$=UCase$(shpl.Contact$) ! contact
		If Stype=10 ! load/check all
			X1=0
			For x=1 to 8 ! load/check 8 fields
				If X=1 let tmp1$=UCase$(shpl.Name$)! name
				if X=2 let tmp1$=UCase$(shpl.Address$)+UCase$(shpl.OptAddress$) ! address
				If X=3 let tmp1$=UCase$(shpl.City$) ! city
				if X=4 let tmp1$=UCase$(shpl.State$) ! state
				if X=5 let tmp1$=shpl.ZipCode$ ! zip
				if X=6 let tmp1$=UCase$(shpl.UdaAlpha1$) ! uda1
				if X=7 let tmp1$=shpl.PhoneNumber$ ! phone
				if X=8 let tmp1$=UCase$(shpl.Contact$) ! contact
				! do check
				X1=DoStrgSrch(dtype,tmp$,tmp1$)
				If X1>=1 Let X=99 ! search til found only
			Next X
		Else ! single search
		! search string
		  X1=DoStrgSrch(dtype,tmp$,tmp1$)
		Endif
		if stype=7 let x1=1 ! all codes match
		if SType<>10 and x1<1 goto NxtSLkey ! no match
		If (Stype=10 and x1<1) or SType=7 ! no match yet - check keyword file
			Cust$=" ",Cust$;X1=0 ! just for this shiplist
			Cust$[1,13]=slkey$ ! shpl.ShiplistNumber Using "######.&&&&&&"
			Cust$[14]="" ! leave 7 blank
			CKR=filegetcslkeywrd(e$,CKC,"=",1,Cust$,CKW.)
			If CKR<=0 goto NxtSLKey ! not found anywhere
			tmp1$=UCASE$(CKW.Keyword1$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword2$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword3$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword4$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword5$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword6$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword7$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword8$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword9$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword10$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword11$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword12$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword13$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword14$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword15$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword16$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword17$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword18$) ! Name 1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword19$) ! Name 2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword20$) ! Addr1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword21$) ! Addr1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword22$) ! Addr2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword23$) ! Addr2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword24$) ! City
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword25$) ! State
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword26$) ! Zip
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword27$) ! Phone
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword28$) ! Contact
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword29$) ! AP Phone
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			tmp1$=UCASE$(CKW.Keyword30$) ! AP Contact
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotSLKWMtch	
			Goto NxtSLKey ! no match
		GotSLKWMtch: ! found one - continue
		Endif ! of also check keywords on all
	! Endif ! of type<>7
	
		AllSLMtch: ! did not enter search text - ALL MATCH
		! first do a sslsm sec check - Do internal chk instead of call "custsec.dl4"
		!If USlsm>0 ! has one on ucc
		!	if shpl.SalesmanCode<>USlsm goto nxtSLkey ! NO ACCESS - DIFF SLSM
		!Endif
		! made thru - load string
		if Int(shpl.ShiplistNumber)=0 goto NxtSLKey
		tmp$=shpl.ShiplistNumber using "######.&&&&&&"
		WebStr$=tmp$[1,6],fdel$ ! cust #
		WebStr$=WebStr$,RTrim$(shpl.Name$),fdel$ ! name
		WebStr$=WebStr$,RTrim$(shpl.Address$),fdel$ ! addr 1
		WebStr$=WebStr$,RTrim$(shpl.OptAddress$),fdel$ ! addr 2
		WebStr$=WebStr$,RTrim$(shpl.City$),fdel$ ! city
		WebStr$=WebStr$,RTrim$(shpl.State$),fdel$ ! state
		WebStr$=WebStr$,RTrim$(shpl.ZipCode$),fdel$ ! zip
		WebStr$=WebStr$,RTrim$(shpl.PhoneNumber$),fdel$ ! phone
		WebStr$=WebStr$,RTrim$(shpl.Contact$),fdel$ ! contact
		If Stype<>7 and SType<>10
			WebStr$=WebStr$,RTrim$(shpl.UdaAlpha1$),fdel$ ! uda (if not keyword)
		Else ! is keyword
			WebStr$=WebStr$,RTrim$(tmp1$),fdel$ ! keyword match
		Endif
		!webstr$=webstr$,Str$(shpl.ShiplistNumber),fdel$ ! billto
		tmp$=shpl.ShiplistNumber using "######.&&&&&&"
		webstr$=webstr$,tmp$,fdel$,fdel$ ! shiplist number + place holder for ABC
		if shpl.Slsm>0
			let spkey$=" ",spkey$
			let spkey$=shpl.Slsm using "###"
			search #smc,2,1;spkey$,R10,E
			if not(e)
				mat read #smc,r10,0;spname$;
			Else
				let shpl.slsm=cust.SalesmanCode
			endif
		else ! means use the customer
			let shpl.slsm=cust.SalesmanCode
		endif
		webstr$=webstr$,Str$(shpl.slsm)," ",spname$,fdel$
		webstr$=webstr$," ",fdel$ ! no premier cust on shiplist!?
		if notcustm=9 ! cust did not match - send it now!
			List$[row]=HWSTR$
			Let row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
			notCustm=0
		Endif
		List$[row]=WebStr$
		Let row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		if row>1000 ! put limit on - prevent 2mb error
			returnstatus=0
			e$="Please narrow search"
			goto CSLDone
		Endif
		goto NxtSLKey
		CSLDone: ! finished
	Endif ! of include shiplist
	Goto NxtKey

	CSDone: ! finished
	if debugdetail
		dmsg$="Scan complete NUM="+Str$(row-2)+" "+e$ \ Call updatelog(debug,dblog$,dmsg$,Userid$)
	Endif
	! done
    List$[row]=esdel$ \ row=row+1 ! end of section
	if SMC>0 try close #SMC Else Rem
	if KWC>0 try close #KWC Else Rem
	if SFC>0 try close #SFC Else Rem
	if CKC>0 try close #CKC Else Rem
	IF SLC>0 try close #SLC Else Rem
	!
	if returnstatus=1 Let E$=""
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! CustList
! -------------------------------------------------------------------------------------
Sub updatelog(debug,dblog$,dmsg$,Userid$)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " Userid "+Userid$+" " + dmsg$ + "'' >> " + dblog$
End Sub 
! 
!--------------------------------------------------------------------
Function DoStrgSrch(dtype,tmp$,tmp1$)
! string search function
! returns x1 (<=0 = NO MATCH, 1=match
X1=0 ! no match
if dtype=0 ! begins with
	If tmp$=tmp1$[1,Len(tmp$)] let x1=1
Else ! contains
	Call StringSearch(tmp1$,tmp$,X1) ! x1=1 for found
	if x1>=1 let x1=1 ! is looking for 1
Endif
End Function x1
! 
!--------------------------------------------------------------------
