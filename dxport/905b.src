!>>> Program 905b
!
! description  Change Tax zone - Orders/credits
!
! loadsave -w -n 100,10 -o prog/dxport/905b.dl4 src/905b.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2010  14:28:20
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/htberry.r10/uptaxorders.src (univ2) [valerie] {37080}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub InpBuf,String,programdump
!Option Default Dialect IRIS1
Rem uptaxorders - change old tax zone to new tax zone in the orders .
Com 1%,SC,SR,Z8[9],J4$[60]
If Err 0 Gosub ERR_TRAP
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],P8,J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim K1$[50],K2$[30],ANS$[20],A$[20],P60$[50],P9$[50],RTYPE$[1]
Dim F$[16],CMD$[64],A1$[142],KEY_$[50],CNAME$[30],S1$[30]
Dim 1%,COID,C2[2],H4[2]
Dim 2%,L6[5],LTAX2[0],H0[12],A1,H5[16]
Dim 3%,R2,R3,OZONE,NZONE,T2[25],TAXABLE
Dim 1%,MCTXBL[9],DCLVL
Dim 2%,PASSINFO[9],CH[99],T1[5],MCODE[9],R5,V1
Dim 3%,MCHARGE[9,1],TOT[4],CFIN[8],R[99]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNV(X) = Sgn(X) * (Int(Abs(X) * 100 + .9999999) * .01)
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],message$[200],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
! always to printer
PAGE_LEN = 60 ! \ If P8 Let PAGE_LEN = 22;SCRPRT = 99
If Err 0 Gosub ERR_TRAP
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
Mat Read #1,3,0;CNAME$;
If P60$[42,42] = "Y" ! Tax by line - no good Goto OUTEND
	message$="NOT VALID FOR TAX BY LINE"
	goto err_msg
Endif
For I = 2 To 5
  Read R1 \ If R1 = -1 Goto L_260
  Read #1,88,Abs(R1);F$;
  If R1 <= 0 Ropen #I,F$ Else Open #I,F$
L_260: Next I
Data "1840","1872","-2176","-1856"
! call dxsave(0,"tmp/905bin.txt!")
STARTHERE: Rem "no need for Screen
!Print 'CS';@0,0;"uptaxorders";@25,0;"CHANGE TAX ZONE ON ORDERS/CREDITS"
!Print @0,4;" 1> OLD TAX ZONE ";
!Print @0,6;" 2> NEW TAX ZONE ";
!Gosub GET_OLD_ZONE
!Gosub GET_NEW_ZONE
!Goto WHATNOW
WHATNOW: Rem "
!Print @0,22;'CE';"ENTER  #: field  U: Update orders/credits  E: exit   ";
!Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
!If ANS$ = "" Or ANS$ = "E" Goto OUTEND
!If ANS$ = "U" Goto UPFIELDS
!WK = ANS$
!If WK <> 1 If WK <> 2 Goto WHATNOW
!If WK = 1 Gosub GET_OLD_ZONE
!If WK = 2 Gosub GET_NEW_ZONE
!Goto WHATNOW
GET_OLD_ZONE: ! Print @20,4;'CL';
!J0$ = "3000 420 4" \ J1 = 0
!X$ = Chf(4) - 1 \ J5$ = "Enter tax zone  (1 -",X$[1,Len(X$) - 1],")"
!Gosub ISINPUT \ J5$ = ""
call dxget("OLDZNE",tmp$)
j4$=Trim$(tmp$)
If J4$ = "" Goto OUTEND
R4 = j4$ ! J1
If R4 >= 1 If R4 < Chf(4)
  Gosub READ_ZONE
  If A$[1,1] > " "
    !Print @25,4;A$[1,20];
    OZONE = R4
    Goto OLD_CODE_OK
  End If 
End If 
!J7$ = "INVALID TAX ZONE" \ Gosub ISERRMSG \ Goto GET_OLD_ZONE
message$="INVALID OLD TAX ZONE" \ goto err_msg
OLD_CODE_OK: ! Return 
GET_NEW_ZONE: ! Print @20,6;'CL';
!J0$ = "3000 420 6" \ J1 = 0
!X$ = Chf(4) - 1 \ J5$ = "Enter tax zone  (1 -",X$[1,Len(X$) - 1],")"
!Gosub ISINPUT \ J5$ = ""
call dxget("NEWZNE",tmp$)
j4$=Trim$(tmp$)
If J4$ = "" Goto OUTEND
R4 = J4$ ! J1
If R4 >= 1 If R4 < Chf(4)
  Gosub READ_ZONE
  If A$[1,1] > " "
    !Print @25,6;A$[1,20];
    NZONE = R4
    Goto NEW_CODE_OK
  End If 
End If 
!J7$ = "INVALID TAX ZONE" \ Gosub ISERRMSG \ Goto GET_NEW_ZONE
message$="INVALID NEW TAX ZONE" \ goto err_msg
NEW_CODE_OK: ! Return 

UPFIELDS: Rem update orders/credit
If not(scrprt) ! L9 <> 22
  !Print @0,23;'CL';" PRINTING... PLEASE WAIT . . . ";
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
Else ! is to browser
Endif
LINECOUNT = 99
Gosub PRINT_HEADER
K1$ = " ",K1$ ! \ K1$ = ""
CTR = 0
! Print @5,12;'CL';"Checking orders/credits ...";
ORD_LOOP: Rem let's go through orders
Search #2,3,1;K1$,R2,E \ If E = 2 Goto OUTEND
If E Gosub ERR_SEARCH
If K1$[1,2] > " 6" If K1$[1,2] < " 9" Goto UPFIELDS
If K1$[1,2] > "10" Goto OUTEND
CTR = CTR + 1 ! \ If Not(Fra(CTR / 100)) Print @20,12;'CL';CTR;
Mat Read #2,R2,0;H0
Mat Read #2,R2,78;H4
Mat Read #2,R2,104;H5
If H4 = OZONE
  Mat Read #3,H0[3],8;T2
  Mat Read #5,H0[2],8;S1$
  T2[0] = T2[0] - T2[7]
  H4 = NZONE
  R4 = H4
  Gosub READ_ZONE
  T2[2] = A1
  If RTYPE$ <> "N" And RTYPE$ <> "U" Let RTYPE$ = "N"
  T2[7] = FNR(T2[8] * (T2[2] / 100))
  If RTYPE$ = "U" Let T2[7] = FNV(T2[8] * (T2[2] / 100))
  If H5[7] = 10 Or H5[7] = 6 Let T2[6] = 0 - T2[7] ! sample/donation
  ! T2[0] = T2[0] + T2[7]
  T2[0] = T2[1] - T2[3] + T2[4] + T2[5] + T2[6] + T2[7]
  Mat Write #2,R2,78;H4
  Mat Write #3,H0[3],8;T2
  Gosub PRINT_HEADER
  Print #0; Tab 5;K1$[1,2]; Tab 14;K1$[3]; Tab 25;S1$
  LINECOUNT = LINECOUNT + 1
End If 
Goto ORD_LOOP
PRINT_HEADER: Rem
If LINECOUNT + 1 < PAGE_LEN Goto GO_BACK
!If P8
!  If PAGE
!HEADMORE: Rem check for more
!    Print @0,23;'CL';"Press  <CR>: continue   E: exit ";
!    Input Len 1;""J$
!    Call String(1,J$)
!    If J$ = "E" Goto OUTEND
!    If J$ <> "" Goto HEADMORE
!  End If 
!  Print 'CS'
!Else 
  If PAGE Print #0;"\14\";
!End If 
PAGE = PAGE + 1
LINECOUNT = 5
Print #0; Tab 1;"905B"; Tab 20;"TAX ZONE CHANGE ORDERS/CREDITS";
Print #0; Tab 40;CNAME$;"  PAGE";PAGE
Print #0; Using "######"; Tab 20;"FROM ZONE";OZONE;" TO";NZONE
Print #0;""
Print #0; Tab 2;"STATUS"; Tab 10;"ORDER/CREDIT"; Tab 30;"CUSTOMER "
Print #0;""
GO_BACK: Return 
READ_ZONE: Rem read the zone file
Mat Read #4,R4,0;A$;
Mat Read #4,R4,20;A1;
Read #4,R4,414;RTYPE$;
Return 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: ! X1 = Len(J7$)
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
ERR_MSG: ! something is awry
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
goto Err_Msg:
OUTEND: Rem "Done
!Close 
!Chain "mx000"
END
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!!Rem {end rtn.error.s}
include "src/callmainerrnet.inc"
End 