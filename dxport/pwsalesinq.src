! pwsalesinq.src  --- Displays product sales inquiry --- 
! loadsave -w -n 100,10 -o prog/dxport/pwsalesinq.dl4 src/pwsalesinq.src
Rem BEDIT Version: 2.1 OBJECT CODE     Created: JUN  8, 2000  09:51:16
Rem /usr/acct/r97//usr/acct/dave/work/devl/ut/pwsalesinq.src (univ2) [dave] {03955}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare External sub pwsalesinq



External Sub pwsalesinq(Chan[],specs[],prodcode$,msg$,errtype,list$[],maxcnt,cost_lev[])
Declare Intrinsic Sub InpBuf,String
!!Option Default Dialect IRIS1
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault
Declare External Function OpenFile,PDate$,FormatDate2$
External Lib "libgeneral.lib"
Declare External Sub SubErr,CreateNetStatus,GetDelimiters
Declare External Sub GetSession,AddToStr,SetOutPut
Declare External Function getmsg$,expandarray 
External Lib "libprodconv.lib" 
Declare External Function ConvProdAmount 
include "src/copyright.inc"


Try

Rem display the fileds saved in the pwsales file.
Rem eom oh, avg cost, demand, usage and service level for
Rem this year / last year
dim 1%,PFU1[20],CNVTU[9],X1,WH
dim 1%,SC,SR,Z9[9],J4$[50],COST_LEV[3]
dim 2%,S9[3]
dim 3%,PFU2[6],CNVTA[4],A[33],UNIT,R5,A$[156],AVGCOST
 
Dim PW$[12],X$[10]
Dim 1%,PW[0],ARMONTH,BOYMONTH
Dim 2%,SRVLVL[12,1],LSRVLVL[12,1]
Dim 3%,PWS[12,2],PWOH[12],PWSL[12,2],PWOHL[12],PWAVG[12],PWAVGL[12]
Dim 3%,PWFRCST[12],PWFRCSTL[12]
! product warehouse dim 
Dim W1$[32],W2$[24],WH3$[24]
Dim 2%,W2[9],W7[14],WH7[3]
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHSLS[7]
dim keyprod$[50],WEBSTR$[2500],E$[256],WHNAME$[30]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000] 
Dim K2$[50],K3$[50],K4$[50],M1$[40],K5$[50]
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J5$[75],J6$[40],J7$[75],CC$[4]
Dim 3%
wh=specs[1]
main=specs[2]
vendor=specs[3]
intco=specs[10] ! company #
call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
! openfiles 
if not (chan[0]) ! cntrl file #1
	ctlc = OpenFile(-9999,intCo) \ If ctlc = -1 Error 42 !control 
else
	let ctlc=chan[0]
endif
if not (chan[1]) ! product file #2 * 
	 Ch_Prod = OpenFile(-1792,intCo) \ If Ch_Prod = -1 Error 42  !product file 
else
	let ch_prod=chan[1]
endif
if not (chan[2]) ! product warehouse #3 * 
	Ch_PrWh = OpenFile(-1744,intCo) \ If Ch_PrWh = -1 Error 42  !"product warehouse file
else
	let ch_prwh=chan[2]
endif
if not (chan[3]) ! unit of measure file #5* 
	Ch_Ccode = OpenFile(-1728,intCo) \ If Ch_Ccode = -1 Error 42  !u/m codes file
else
	let ch_ccode=chan[3]
endif
If not (chan[4]) ! product warehouse sales #4
	ch_pwsls=OpenFile(-9963,intCo) \ If Ch_pwsls = -1 Error 42 ! product sales
else
	let ch_pwsls=chan[4]
endif
If not (chan[5]) ! warehouse info #4
	ch_wh=OpenFile(-2768,intCo) \ If Ch_wh = -1 Error 42 ! product sales
else
	let ch_wh=chan[5]
endif
Read #ctlc,51,74;BOYMONTH;
Read #ctlc,0,120;ARMONTH;
M1$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
let whname$="Warehouse Not On File"
if wh>0 and wh<100
	read #ch_wh,(wh-1),4;whname$;
endif
let keyprod$=" ",keyprod$
if len(prodcode$)>0
	let keyprod$[1,len(prodcode$)]=prodcode$
	search #ch_prod,2,1;keyprod$,rec_prod,e
	if e<>0
		let errflag=99
		let msg$="Product ",rtrim$(prodcode$),"Not on file "
	else
		MAT  READ #ch_prod,rec_prod,0;A$; 
		mat  read #ch_prod,rec_prod,512;pfu1;
		mat  read #ch_prod,rec_prod,554;pfu2;         
	endif
endif
GETPWSALES: Rem READ FULL PWSALES FILE
K4$ = " ",K4$ \ K4$[1,12] = PRODCODE$[1,12]
K4$[13,14] = WH Using "##"
Search #ch_pwsls,2,1;K4$,R33,E
if e 
	let msg$="Product Code ",rtrim$(prodcode$)," For Whse ",str$(wh)," Not on File"
	let errflag=99
endif
if not(e)
  Mat Read #ch_pwsls,R33,14;PWS;
  Mat Read #ch_pwsls,R33,248;PWSL;
  Mat Read #ch_pwsls,R33,482;PWOH;
  Mat Read #ch_pwsls,R33,560;PWOHL;
  Mat Read #ch_pwsls,R33,638;PWAVG;
  Mat Read #ch_pwsls,R33,716;PWAVGL;
  Mat Read #ch_pwsls,R33,794;PWFRCST;
  Mat Read #ch_pwsls,R33,872;PWFRCSTL;
  Mat Read #ch_pwsls,R33,950;SRVLVL;
  Mat Read #ch_pwsls,R33,1054;LSRVLVL;
  Gosub GETPRODWHSE
  If Not(UNIT) Let UNIT = PFU1[10]
  If UNIT = -1 Let CC$[1,4] = "CWT "
  If UNIT > 0
    Mat Read #ch_ccode,UNIT,10;CC$;
  End If 
  CNVTU[0] = 0;CNVTU[1] = UNIT;CNVTU[2] = 1
  For X = 1 To 12
    If X = ARMONTH
      PWOH[X] = W3[0]
      PWAVG[X] = AVGCOST
    End If 
    CNVTU[0] = 0;CNVTU[1] = UNIT;CNVTU[2] = 1
    CNVTA = PWOH[X] \ Gosub L_20000 \ PWOH[X] = AMOUNT
    CNVTA = PWOHL[X] \ Gosub L_20000 \ PWOHL[X] = AMOUNT
    CNVTA = PWFRCST[X] \ Gosub L_20000 \ PWFRCST[X] = AMOUNT
    CNVTA = PWFRCSTL[X] \ Gosub L_20000 \ PWFRCSTL[X] = AMOUNT
    CNVTU[0] = 0;CNVTU[1] = UNIT;CNVTU[2] = 2
    CNVTA = PWAVG[X] \ Gosub L_20000 \ PWAVG[X] = AMOUNT
    CNVTA = PWAVGL[X] \ Gosub L_20000 \ PWAVGL[X] = AMOUNT
  Next X
  Gosub GETPRODWHSE
End If 
DRAWSCREEN: Rem
let row=1
clear list$[]
List$[0]=bsdel$,"Inventory History",fdel$
webstr$="Product Code",fdel$
webstr$=webstr$,"Desc1",fdel$
webstr$=webstr$,"Desc2",fdel$
webstr$=webstr$,"Whid",fdel$
webstr$=webstr$,"Whname",fdel$
webstr$=webstr$,"UnitOfMeasure",fdel$
list$[1]=webstr$
let row=row+1
if not (errflag)
	webstr$=rtrim$(a$[140,151]),fdel$
	webstr$=webstr$,rtrim$(a$[9,38]),fdel$
	webstr$=webstr$,rtrim$(a$[63,92]),fdel$
	webstr$=webstr$,rtrim$(wh using "##"),fdel$
	webstr$=webstr$,rtrim$(whname$),fdel$ ! warehouse name
	webstr$=webstr$,rtrim$(cc$[1,4]),fdel$
	let list$[row]=webstr$
	row=row+1
endif
list$[row]=esdel$ ! end of heading section
let row=row+1
List$[row]=bsdel$,"Current Year",fdel$
let row=row+1
webstr$="MTH",fdel$
webstr$=webstr$,"EOM ON HAND",fdel$
If cost_lev[0]
	webstr$=webstr$,"EOM AVG COST",fdel$
else
	webstr$=webstr$,"",fdel$
endif
webstr$=webstr$,"EST DEMAND",fdel$
webstr$=webstr$,"ACT USAGE",fdel$
webstr$=webstr$,"LINES ORDERED",fdel$
webstr$=webstr$,"LINES SHIPPED",fdel$
webstr$=webstr$,"SERVICE LEVEL PCT",fdel$
list$[row]=webstr$
let row=row+1
webstr$=""
if not(errflag)
	for MoCtr = 1 to 12
		webstr$=rtrim$(M1$[(MoCtr - 1) * 3 + 1,(MoCtr - 1) * 3 + 3]),fdel$
		If MoCtr > ARMONTH ! not there yet all 0
			webstr$=webstr$,"0",fdel$ ! on hand
			If COST_LEV[0]
				webstr$=webstr$,"0",fdel$ ! average cost
			else
				webstr$=webstr$,"",fdel$ ! avg cost -- secured
			endif
			webstr$=webstr$,"0",fdel$ ! est demand
			webstr$=webstr$,"0",fdel$ ! act usage
			webstr$=webstr$,"0",fdel$ ! lines ordered
			webstr$=webstr$,"0",fdel$ ! lines shipped
			webstr$=webstr$,"0",fdel$ ! service level 
		else
			webstr$=webstr$,( PWOH[MoCtr]Using "--------#.##"),fdel$ ! on hand
			
			If COST_LEV[0]
				webstr$=webstr$,(PWAVG[MoCtr] Using "--------.##"),fdel$ ! avg cost
			else
				webstr$=webstr$,"",fdel$
			endif
			
			webstr$=webstr$,(PWFRCST[MoCtr] Using "------#.##"),fdel$ ! est demand
			webstr$=webstr$,(W5[MoCtr] Using "------#.##"),fdel$ ! act usage
			webstr$=webstr$,(SRVLVL[MoCtr,1] Using "----#"),fdel$ ! lines ordered
			webstr$=webstr$,(SRVLVL[MoCtr,0] Using "----#"),fdel$ ! lines shipped
			If SRVLVL[MoCtr,1]
				webstr$=webstr$,((SRVLVL[MoCtr,0] / SRVLVL[MoCtr,1]) * 100  Using "---#.##"),fdel$
			else
				webstr$=webstr$,"0",fdel$
			endif
		endif
		list$[row]=webstr$
		let row=row+1
	next MoCtr
endif
let list$[row]=esdel$ ! end of the current year
let row=row+1
List$[row]=bsdel$,"Last Year",fdel$
let row=row+1
webstr$="MTH",fdel$
webstr$=webstr$,"EOM ON HAND",fdel$
If cost_lev[0]
	webstr$=webstr$,"EOM AVG COST",fdel$
else
	webstr$=webstr$,"",fdel$
endif
webstr$=webstr$,"EST DEMAND",fdel$
webstr$=webstr$,"ACT USAGE",fdel$
webstr$=webstr$,"LINES ORDERED",fdel$
webstr$=webstr$,"LINES SHIPPED",fdel$
webstr$=webstr$,"SERVICE LEVEL PCT",fdel$
list$[row]=webstr$
let row=row+1
webstr$=""
if not(errflag)
	for MoCtr = 1 to 12
		webstr$=rtrim$(M1$[(MoCtr - 1) * 3 + 1,(MoCtr - 1) * 3 + 3]),fdel$
		If MoCtr <= ARMONTH ! use last year numbers 
			webstr$=webstr$,(PWOHL[MoCtr] Using "------#.##"),fdel$ ! on hand
			If COST_LEV[0]
				webstr$=webstr$,(PWAVGL[MoCtr] Using "--------.##"),fdel$ ! average cost
			else
				webstr$=webstr$,"",fdel$ ! avg cost -- secured
			endif
			webstr$=webstr$,(PWFRCSTL[MoCtr] Using "------#.##"),fdel$ ! est demand
			webstr$=webstr$,(W5[MoCtr+13] Using "------#.##"),fdel$ ! act usage
			webstr$=webstr$,(LSRVLVL[MoCtr,1] Using "----#"),fdel$ ! lines ordered
			webstr$=webstr$,(LSRVLVL[MoCtr,0] Using "----#"),fdel$ ! lines shipped
			If LSRVLVL[MoCtr,1]
				webstr$=webstr$,((LSRVLVL[MoCtr,0] / LSRVLVL[MoCtr,1]) * 100  Using "---#.##"),fdel$
			else
				webstr$=webstr$,"0",fdel$
			endif
		else  ! within the current year
			webstr$=webstr$,( PWOH[MoCtr]Using "--------#.##"),fdel$ ! on hand
			
			If COST_LEV[0]
				webstr$=webstr$,(PWAVG[MoCtr] Using "--------.##"),fdel$ ! avg cost
			else
				webstr$=webstr$,"",fdel$
			endif
			
			webstr$=webstr$,(PWFRCST[MoCtr] Using "------#.##"),fdel$ ! est demand
			webstr$=webstr$,(W5[MoCtr] Using "------#.##"),fdel$ ! act usage
			webstr$=webstr$,(SRVLVL[MoCtr,1] Using "----#"),fdel$ ! lines ordered
			webstr$=webstr$,(SRVLVL[MoCtr,0] Using "----#"),fdel$ ! lines shipped
			If SRVLVL[MoCtr,1]
				webstr$=webstr$,((SRVLVL[MoCtr,0] / SRVLVL[MoCtr,1]) * 100  Using "---#.##"),fdel$
			else
				webstr$=webstr$,"0",fdel$
			endif
		endif
		list$[row]=webstr$
		let row=row+1
	next MoCtr
endif
let list$[row]=esdel$ ! end of the current year
let row=row+1
GOTO OUTEND:


GETPRODWHSE: Rem SPRODWHSE
For X = 0 To 25\W5[X]=0\NEXT X
K5$ = " ",K5$
K5$[1,12] = PRODCODE$[1,12]
K5$[13,14] = WH Using "##"
Search #ch_prwh,2,1;K5$,REC_PRWH,E
If E Return 
Rem {begin srcdevl/inc/READ.PRWH.I}
Mat Read #CH_PRWH,REC_PRWH,0;W1$;
Mat Read #CH_PRWH,REC_PRWH,32;W1;
Mat Read #CH_PRWH,REC_PRWH,38;W2;
Mat Read #CH_PRWH,REC_PRWH,78;W3;
Mat Read #CH_PRWH,REC_PRWH,228;W5;
Mat Read #CH_PRWH,REC_PRWH,384;WHPARC;
Mat Read #CH_PRWH,REC_PRWH,396;W2$;
Mat Read #CH_PRWH,REC_PRWH,420;W0;
Mat Read #CH_PRWH,REC_PRWH,428;WH7;
Mat Read #CH_PRWH,REC_PRWH,444;WH8;
Mat Read #CH_PRWH,REC_PRWH,540;WH9;
Mat Read #CH_PRWH,REC_PRWH,696;W7;
Mat Read #CH_PRWH,REC_PRWH,756;WH3$
Mat Read #CH_PRWH,REC_PRWH,780;WHLV;
Mat Read #CH_PRWH,REC_PRWH,798;WHRPLN;
Mat Read #CH_PRWH,REC_PRWH,800;WHMISC;
Mat Read #CH_PRWH,REC_PRWH,842;WHLM;
Mat Read #CH_PRWH,REC_PRWH,846;WHSLS;
Read #CH_PRWH,REC_PRWH,894;FCWGT;
Rem {end READ.PRWH.I}
CNVTU[0] = 0;CNVTU[1] = UNIT;CNVTU[2] = 1
For X = 0 To 25
  CNVTA = W5[X] \ Gosub L_20000 \ W5[X] = AMOUNT
Next X
Return 
 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050:  Rem "====== unibasic 5+ logic
if not(cnvta) let amount=0\Goto L_20160
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG 
if not(flag)
	AMOUNT = CNVTA
else
	let amount=0
endif
L_20160: Return 

Outend: ! End the subroutine 
if not (chan[0]) and ctlc<>1 close #ctlc! cntrl file #1
if not (chan[1]) close #ch_prod !  product file #2 * 
if not (chan[2]) close #ch_prwh ! product warehouse #3 * 
if not (chan[3]) close #ch_ccode! unit of measure file #5* 
Else
	 include "src/callsuberr.inc"
end try
end sub 