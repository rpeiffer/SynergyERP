! >>> Program 068
!
! description PRICE MARK UP PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/068.dl4 src/068.src
!
! 1.0 mm/dd/yyyy change??
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 26, 2001  10:28:34
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx0/mx068.src (univ2) [kag] {09743}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

include "src/copyright.inc" ! dx
Declare Intrinsic Sub InpBuf,String
! - Option Default Dialect IRIS1
Rem MX068  PRICE  MARKUP FILE LIST
Rem AUTHOR: MTK   JUL 26, 1984
Rem  LAST UPDATE:  G.DOSCHER  2/26/85
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim 1%,F,X1,2%,X2,3%,J,X3
Dim U9$[30],X$[10],D$[16],D1$[10],CDesc$[100]
Dim U5$[50],D8$[8],K1$[50],K2$[20],K3$[20]
Dim M5$[3]
Dim 1%,M5[5,4]
Dim 3%,M6[5,3]
Dim 3%,M7
Dim 3%,M8,M9[1]
Dim 2%,B3,B4
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[600],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

For I = 2 To 2
  Read L
  If Not(L) Goto L_825
  Read #1,88,L;J$;
  Ropen #I,J$
L_825: Next I
Read #1,3;U9$;
Data "2720"
Close #2
Open #2,"2/SPRICEMARK"+Str$(IntCo) ! "WORK IN PROCESS ONLY!!
Mat Read #1,0,100;D8$;
L = 60
P = 0
M5$ = "%$G"
CDesc$="BASEP.O.LOADLD2 AVG.NTPO"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"068",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
CALL DXGET("STABLE",tmp$) \  If tmp$ = "" Let M9 = 1 ELSE M9 = tmp$
CALL DXGET("ETABLE",tmp$) \  If tmp$ = "" Let M9[1] = 999 ELSE M9[1] = tmp$
!
IF M9 < 1 or M9 >= 999 LET  e$ = "Invalid starting table code, must be between 1 and 999 !"   \ error 10000
if M9[1] > 999 or M9 > M9[1]  LET  e$ = "Invalid ending table code, must be between starting table code and 999!"   \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!!L_1000: Rem ENTER RANGE
!!L_1010: Print @0,20;"ENTER STARTING TABLE,  <CR>: FIRST,   E: EXIT : ";'CE';
!!Input ""K2$
!!If K2$ = "E" Goto OUTEND
!!If K2$ = "" Let K2$ = "1"
!!M9 = K2$!!!!!!!!!!!!!!!!!!!!!!!!!
!!If M9 < 1 Goto L_1010
!!If M9 >= 999 Goto L_1010
!!L_1070: Print 'CR';"ENTER ENDING TABLE,    <CR>: LAST : ";'CL';
!!Input ""K3$
!!If K3$ = "" Let K3$ = "999"
!!M9[1] = K3$!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!If M9[1] < 1 Goto L_1070
!!If M9[1] > 999 Goto L_1070
!!Goto L_1170

!!!    Print 
!!!    M9[0] = 1
!!!    M9[1] = 999

!!L_1170: If M9 <= M9[1] Goto L_1210!!!!!!!!!!!!!!!!!!!!!!!!
!!Print 'CR MU CL MU CL RB';" INVALID RANGE ";
!!Signal 3,20
!!Goto L_1000
!!L_1210: Print @0,21;"PRINTING, PLEASE WAIT . . . ";'CE';
!!!   Signal 3,0
!!If Err 0 Gosub ERR_ESCAPE
!
            
if j8  !dx XML head
    tmp$ = "TABLE",fdel$
	tmp$ = tmp$,"FIELD",fdel$,"BCST",fdel$
    tmp$ = tmp$,"MARKUP1",fdel$
	tmp$ = tmp$,"MARKUP2",fdel$
    tmp$ = tmp$,"MARKUP3",fdel$
   	tmp$ = tmp$,"MARKUP4",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
For B3 = M9[0] To M9[1]
  M8 = 0
  Read #2,B3,0;D$
  R1 = B3 ! (B4 * 1000) - 1000 + B3
  Mat Read #2,R1,78;M6;
  For B4 = 0 To 5
    
    
    For X = 0 To 3
      M8 = M8 + Abs(M6[B4,X])
    Next X
  Next B4
  If Not(M8) Goto L_2250
  
  Gosub L_5800
  if not(j8) Print #0;""  
  L = L + 1  
  IF J8 
    ! tmp$=B3 Using "###","-",D$,FDEL$
  ELSE
    Print #0; Using "###"; Tab 8;"TABLE ";B3;" - ";D$;"\15\" !!!!!!!!!!!!!!!!!!
    Print #0; Tab 2;"FIELD"; Tab 19;"BC";
	Print #0; Tab 27;"MARKUP1"; Tab 47;"MARKUP2";
    Print #0; Tab 67;"MARKUP3"; Tab 87;"MARKUP4" \ L = L + 3
  END IF
  For B4 = 0 To 5
    R1 = B3 ! (B4 * 1000) - 1000 + B3
    Mat Read #2,R1,18;M5;
    Mat Read #2,R1,78;M6;
    For B5 = 3 To 0 Step -1
      If M6[B4,B5] Goto L_2220
    Next B5
L_2220: Rem.
    Gosub L_5000
  Next B4
L_2250: 
Next B3
Goto L_9100
Return 
!
L_5000: Rem PRINT LINE
!
IF J8
  tmp$=B3 using "###"," - ",D$,FDEL$
  tmp$=tmp$,B4+1 using "##",". "
ELSE
  Print #0; Using "##"; Tab 2;B4+1;". ";
END IF 
x1=m5[b4,4] ! 0 to 5
x1=x1*4+1 ! 1,5,9,13,17,21
TMP1$=cdesc$[x1,x1+3]
On B4+2 Gosub L_5425,L_5435,L_5445,L_5455,L_5465,L_5475,L_5505,L_5520 ! LP'S
IF J8
	tmp$=tmp$,Str$(M5[b4,4])," ",tmp1$,fdel$
ELSE
	  Print #0; Using "#";Tab 19;M5[b4,4]; !"cost base
	  Print #0; tab 21;tmp1$;
ENDIF
If B5 = -1 Let B5 = 0
For X = 0 To B5
IF J8
  
  tmp$=tmp$,M6[B4,X] Using "----#.##",M5$[M5[B4,X] + 1,M5[B4,X] + 1],FDEL$
ELSE 
  Print #0; Using "----#.##"; Tab 26 + X * 20;M6[B4,X];
  Print #0; Tab 37 + X * 20;M5$[M5[B4,X] + 1,M5[B4,X] + 1];
  END IF
Next X
For X = 0 To (2-B5)
	IF J8 tmp$=tmp$,"",FDEL$ 
Next X
!
IF NOT(J8) 
Print #0;"" \ L = L + 1
ELSE
	L=L+1
	call addtostr(e$,rstr$,tmp$+rdel$)
end if
Return 

L_5300: Rem GET FLD
J2 = (J0 - 1) * 10
Read #1,18,J2;D1$;
Return 

L_5425: J0 = 13 \ Gosub L_5300
IF J8 let tmp$=tmp$,D1$,FDEL$ else Print #0;D1$;
Return 

L_5435: J0 = 15 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 

L_5445: J0 = 16 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 

L_5455: J0 = 17 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 

L_5465: J0 = 18 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 

L_5475: J0 = 19 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 

L_5505: J0 = 20 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 

L_5520: J0 = 23 \ Gosub L_5300
IF J8 
  tmp$=tmp$,D1$,FDEL$
  RETURN
END IF 
Print #0;D1$;
Return 
!
L_5800: Rem HEADINGS
If L < 45 Return 
If P  AND  NOT(J8) Print #0;"\14\";
IF NOT(J8)
  Print #0;"\15\"; Tab (Int(66 - Len(U9$) / 2));U9$
END IF 
P = P + 1
IF NOT(J8) 
  Print #0; Tab 10;"DATE: ";D8$;
  Print #0; Tab 49;"PRICE / COST  MARKUP FILE LIST"; Tab 110;"PAGE";P
  Print #0;" "
END IF 
L = 1
Return 
!
OUTEND: Rem EXIT PROGRAM
!!Close \ Chain "MX000"
L_9100: Rem END OF THIS RANGE
!!Print 'CS'
!!Goto OUTEND
!!Stop 
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
 try call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 