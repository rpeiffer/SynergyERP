! >>> Program 464b
!
! description Order Margin Change report
!
! loadsave -w -n 100,10 -o prog/dxport/464b.dl4 src/464b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem CHANGEMARGIN based on MX204A - ORDER REGISTER
Rem AUTHOR: RJS/DD task 26229
Rem
Rem BEDIT Version: 2.4 OBJECT CODE     Created: SEP 23, 2013  08:16:39
Rem /x/w2/pm/r2005//x/usracct/jcs/work/custom/xrev9/marginchange.src (synergyux.synergy.n) [jcs] {33736}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,getglobals
! Option Default Dialect IRIS1

!
If Err 0 Gosub ERR_ESCAPE
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[100] \ Blank$=" ",Blank$
dim EndParam$[100] \ EndParam$="}",EndParam$
dim 3%,tmp3
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3],3%,PFU2[6],CNVTA,A[33]
Dim 1%,H3[1],H4[2],S1,S2,S7,UN[2],LT[1],L3[3],F,X1,SORT,EUN[2],BYPASS221
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],T9[11],PRINTALL,D,CTR,LPC3[4],TEST
Dim 1%,PCHAN[20],cost_lev[4]
Dim 2%,H0[12],H5[16],C1[12],Q0[1],L4[3],L6[5],X2,S9[1],DIV,S5,TRUCK,X4
Dim 2%,LTAX2,L9[1],LCO[1],LPC5[3],ORDER[1],SLSM[1],ODW
Dim 3%,T2[21],L5[3],S3[17],J,X3,REGTOT,L7[9],SUNIT[3],PUNIT,UNIT,REGAVGGP
Dim 3%,AMOUNT,T16[8],OLM[5],GT[4],UNF[6],J1,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8,Z9
Dim 3%,SLSMTOT,OSLSM,LTAX1,CUNIT,REGTOTCOST,SLSMTOTCOST,ORDGP,LPC2[2]
Dim 3%,LPUNIT,LCPUNIT,LPGP,L_QUANT,LP
Dim C1$[30],C2$[30],L1$[60],L2$[20],S1$[118],S2$[20],J1$[20],T2$[7]
Dim PUNIT$[4],SUNIT$[4],UNIT$[4],PMASK$[15],ZONE$[50],TRUCK$[50],SRT$[40]
Dim P0$[20],V0$[12],H0$[20],P9$[50],U5$[10],TFLE$[40],J0$[15],J5$[55]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[75],ARDATE$[8],L7$[6],J7$[75]
Dim CUNIT$[4],CZONE$[2],P61$[256],L_PRICEKEY$[40],LSUNIT$[4],LPDATE$[8]
Dim K1$[50],K2$[20],K3$[20],X$[40],D1$[8],D2$[8],T$[10],J9$[256],P60$[50]
Dim 2%,SMREC,OHPRNT
Dim 2%,OTC,CURDATE,LPC1[2],PDESC$[3],CDESC$[3],LPDESC$[3],LCDESC$[3],3%
Dim A1$[142],SCRATCH$[80],3%,SORDREC
Dim D$[132],MW$[1],SZONE$[2],EZONE$[2]
Dim SLS$[118],SM$[10]
Dim U_ZONE$[1000][10]
  Dim blockid$[100],Message$[500],Webstr$[600],Msg$[1000]
!
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$) ! get cost levels
!
For J = 2 To 15
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1840","-1856","-1872","-1888","-1808","-1792","-1728","-1","-1664","-1920","-1376","-1","-1968","-1824"
call dxsave(0,"tmp/464bsin.txt!")
Read #1,3;CNAME$;
Mat Read #1,0,100;ARDATE$;
Read #1,2,200;OTC; ! "one time customer #
Mat Read #1,3,172;CURDATE;
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2 ! "decimal places
D$ = "-",D$
PMASK$ = "##########" ! "set std size mask
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1]) ! PRICE ROUNDING
! Gosub L_6800 ! "open tempfile on #16
If Err 0 Let V8 = Spc(8)
V8 = 0 \ V9 = Chf(0) \ If Err 0 Gosub ERR_ESCAPE
If V8 If V8 <> 49 Goto ERR_TRAP
V9 = 55 \ If V8 Let V9 = 20
S7 = 0 \ S1 = 2 \ S2 = 3 \ ORDER[0] = 0;ORDER[1] = 999999
S7 = 1
T$ = "D" ! ALWAYS DETAIL
DIV = 0
TRUCK$ = ""
ZONE$ = ""
PRINTALL = 1;F = 0
ENTD = 0
SORT = 5 ! SLSM/CUSTNAME
WHSE = 0
SLSM[0] = 1;SLSM[1] = 999
! Window On 
Gosub L_7800 ! clear sortfile
!Gosub L_10000 ! screen
L_10000: Rem =========================================== screen
!Print 'CS'
!Print @0,0;"marginchange";@33,0;"MARGIN CHANGE REPORT"
!Print @1,3;"1. SALESMAN RANGE"
!Print @1,5;"2. ENTER SHIP DATE (MMDDYY)";
!Print @10,6;"EXACT MATCH";
!Print @1,7;"3. ENTER FIRST ZONE TO PRINT, '-' FOR RANGE, <CR> FOR ALL ";
!Print @1,9;"4. MARGIN TYPE: A: ALL, U: UP ONLY, D: DOWN ONLY";
! Return 
For Y = 1 To 4
  On Y Gosub L_1450,ENT_ORDDATE,L_1190,ENT_MTYPE
Next Y
! after input - do the zones
Call getglobals("blockx",0,blockid$)
!if blockid$="464b" CALL DXSAVE(0,"tmp/464bin.txt!")
!if blockid$<>"464b" call dxsave(0,"tmp/464b2in.txt!")
If blockid$ = "464b" ! and zone$<>""
!	call programdump("tmp/464bdata!","")
	Call env(2,"NEXTBLOCK","464b2")
!	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
!	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
Endif
!CALL programdump("tmp/464b2data!","")
call dxget("ALLZONES", tmp$) \ tmp$=UCase$(RTrim$(tmp$))
let zone$=blank$ \ if tmp$="Y" clear zone$
ALLZONES=0 \ IF tmp$="Y" let allzones=1
if zone$<>"" ! not all
	!call dxget("SZONE",tmp$) ! reload with selection
	!LET SZONE$=RTRIM$(TMP$)+bLANK$
	!CALL DXGET("EZONE",TMP$)
	!LET EZONE$=RTRIM$(TMP$)+"}}"
	K1$ = " ",K1$ ! clear previous list - load selected
	Search #9,3,1;K1$,V1,E
	While Not(E)
		Search #9,5,1;K1$,V1,E
		Search #9,3,1;K1$,V1,E
	Wend
	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		if tmp$ <> ""
			ZONE$ =  U_ZONE$[i]+"  "
			J4$ = " ",J4$ \ J4$ = "}"+ZONE$
			LET J4$[4]=""
			Search #9,4,1;J4$,V1,E
		end if
	Next i
	
end if ! if not(allZones) 
! all done
Goto L_1500
L_1020: !J0$ = "6 00014103" \ J1 = 0
!Gosub L_7000
If J1 Let S7 = S2 Else Let S7 = S1
V1 = 90;V2 = 0;F = 0 \ Return 
L_1060: !J5$ = "ENTER 'D' FOR FULL DETAIL OR 'S' FOR SUMMARY" \ J0$ = "2 00014105" \ J1$ = "D"
!Gosub L_7000
!If J$ <> "D" And J$ <> "S" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1060
T$ = J$
J5$ = " ",J5$
Return 
L_1090: !J0$ = "2 00024307" \ J1$ = ""
!Gosub L_7000
If J$ = "" Let DIV = 0 Else Let DIV = J$
Return 
L_1120: !J0$ = "2 00066209" \ J1$ = ""
!Gosub L_7000
If J$ = "      " Let TRUCK$ = "" \ Goto L_1185
If J$ = "-     " Let TRUCK$ = "-" \ Gosub L_6200 \ Goto L_1185
TRUCK$ = J$
TRUCK = J$
If TRUCK < 0 Or TRUCK > 999999 Let J7$ = "INVALID TRUCK" \ Gosub L_7600 ! \ Goto L_1120
! Gosub L_6250 \ Goto L_2800
L_1185: Return 
L_1190: Rem ! now just get list for next
!J5$ = "Enter a zone  -: for range  <CR>: all"
!J0$ = "2 00026107" \ J1$ = ""
!Gosub L_7000
gosub L_6400: ! ONLY get the list
Return
!call dxget("AZONE",tmp$) \ let j$[1,2]=rtrim$(tmp$)+blank$
If J$ = "  " Let ZONE$ = "" \ Goto L_1265
!If J$ = "- " Let ZONE$ = "-" \ Gosub L_6400 \ Goto L_1265
ZONE$ = J$
If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
K1$ = ZONE$
Search #11,2,1;K1$,R,E ! \ If E > 1 Gosub ERR_SEARCH
If E
  J7$ = "ZONE NOT ON FILE!" \ Gosub L_7600
  !Goto L_1190
End If 
CZONE$ = K1$
Gosub L_6435 ! \ Goto L_2850 ! add to sort - get next
L_1265: Return 
L_1270: !J0$ = "6 00014013" \ J1 = 1
!Gosub L_7000
PRINTALL = 1 \ If Not(J1) Let PRINTALL = 0
Gosub L_1280
Return 
L_1275: Rem  A Range of ORDERS
L_1275A: Rem START range into order[0]
!J5$ = "Enter the starting order number to print"
!J0$ = "3000 64520" \ J1 = ORDER[0]
!Gosub L_7000
ORDER[0] = J1
L_1275B: Rem END range into order[1]
!J5$ = "Enter the ending order number to print"
!J0$ = "3000 65520" \ J1 = ORDER[1]
!Gosub L_7000
ORDER[1] = J1
If ORDER[0] > ORDER[1]
  J7$ = "ORDER RANGE INVALID"
  Gosub ISERRMSG !\ Goto L_1275
End If 
Return 
L_1280: !If PRINTALL
!  Print @1,14;'CL'
!  Print @1,15;'CL'
!  Goto L_1298
!End If 
L_1288: !Print @5,14;"1. PICKING TICKETS PRINTED ON PICKLIST  or  "
!Print @5,15;"2. PICKING TICKETS PRINTED THAT ARE NOT ON PICKLIST? (1/2)  "
!J0$ = "2 00017015" \ J1$ = "1" \ Gosub L_7000
!If J$ <> "1" And J$ <> "2" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1288
S9[0] = 2 \ If J$ = "2" Let S9[0] = 1
L_1298: Return 
L_1300: !J0$ = "6 00014316" \ J1 = 1
!Gosub L_7000
ENTD = 0 \ If J1 Let ENTD = 9
Return 
L_1330: !J5$ = "CHOOSE THE SORT OPTION DESIRED";J0$ = "2 00015517";J1$ = "O"
!Gosub L_7000
!If J$ <> "O" And J$ <> "T" And J$ <> "D" And J$ <> "W" And J$ <> "Z" And J$ <> "S"
!  J7$ = "INVALID ENTRY"
!  Gosub L_7600 \ Goto L_1330
!End If 
SORT = 0 \ If J$ = "T" Let SORT = 1
If J$ = "D" Let SORT = 2 ! "sort=0 by order;sort=1 by truck/zone;sort=2 by div
If J$ = "W" Let SORT = 3 ! " sort=3 by whse/order
If J$ = "Z" Let SORT = 4 ! " sort=4 by zone
If J$ = "S" Let SORT = 5 ! " sort by salesman/cust name/order#
J5$ = " ",J5$
Return 
L_1400: Rem WHSE
!J5$ = "ENTER WAREHOUSE DESIRED, <CR>=ALL";J1 = 0
!J0$ = "3000 24320" \ Gosub L_7000
If J1 < 0 Or J1 > 99 Or Fra(J1) Goto L_1400
WHSE = J1
Return 
L_1450: Rem  A Range of salesman
L_1450A: Rem START range into slsm[0]
!J5$ = "Enter the starting salesrep number to print"
!J0$ = "3000 63003" \ J1 = SLSM[0]
!Gosub L_7000
Call dxget("U_SSLSM",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(SLSM[0])
let j1=tmp$
SLSM[0] = J1
L_1450B: Rem END range into slsm[1]
!J5$ = "Enter the ending order number to print"
!J0$ = "3000 64003" \ J1 = SLSM[1]
!Gosub L_7000
call dxget("U_ESLSM",tmp$) \ if rtrim$(tmp$)="" let tmp$=Str$(SLSM[1])
let j1=tmp$
SLSM[1] = J1
If SLSM[0] > SLSM[1]
  J7$ = "SALESPERSON RANGE INVALID!"
  Gosub ISERRMSG !\ Goto L_1450
End If 
Return 
ENT_ORDDATE: Rem if they want a single date
Gosub L_6600 ! get date NOW
! F = 1 ! we got the date!
! J5$ = "Exact date match?"
!J0$ = "6 00003506";J1 = 0
!Gosub L_7000
call dxget("U_EXDTM",tmp$) \ let j1=0
if UCase$(rtrim$(tmp$))="Y" let j1=1
EDM = J1
Return 
!J5$ = "Enter the Shipping Date desired (0=ALL)"
!J0$ = "5000064005";J1 = ODW
!Gosub L_7000
!ODW = J1
!Return 
ENT_MTYPE: Rem Margin check wanted
!J5$ = "Print A: all  U: up  D: down"
!J0$ = "2 00015509";J1$ = MW$
!Gosub L_7000
call dxget("U_MCTYPE",tmp$) \ let J$=UCase$(RTrim$(tmp$))
If J$ <> "A" And J$ <> "U" And J$ <> "D" 
	J7$="Margin Type invalid"
	gosub ISERRMSG
ENDIF
MW$ = J$
Return 
L_1500: ! 
!Print @0,21;'CL';"ENTER #:Field to edit, P:print, or E:end ";
!Input ""K2$
if eflag=0 let k2$="P"
if eflag goto OutErr
If K2$ = "P" Goto L_1900
If K2$ = "E" Goto OUTEND
!Y = K2$
!If Y > 0 And Y < 5
!  On Y Gosub L_1450,ENT_ORDDATE,L_1190,ENT_MTYPE
!End If 
!Print @0,22;'CE';
!Goto L_1500
L_1900: ! ok to go
If V8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

Gosub L_8300 ! "sort the orders
V1 = 90
!Print @0,23;'CL';"PRINTING...";
!If V8 Print 'CS'
If Err 0 Gosub ERR_ESCAPE !"allow user requested abort
K1$ = " ",K1$;CWHSE = 0;CZONE$ = " ",CZONE$
oslsm=0
L_2000: Search #9,3,1;K1$,R1,E ! \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If K1$[1,1] >= "{" Goto L_9100 !"ran into truck/zone keys
Mat Read #2,R1,0;H0
Mat Read #2,R1,52;H3
Mat Read #2,R1,446;P0$
Mat Read #2,R1,66;V0$
Mat Read #2,R1,78;H4
Mat Read #2,R1,84;H0$
Mat Read #2,R1,104;H5 ! "lock header
Mat Read #3,H0[2],8;S1$; \ Mat Read #3,H0[2],126;S2$;
Read #3,H0[2],146;S5;
Mat Read #4,H0[3],8;T2;
If OSLSM And (SORT = 2 Or SORT = 5) And H0[11] <> OSLSM Gosub SLSM_BREAK
OSLSM = H0[11]
X2 = H0[9] \ Gosub L_7700 \ D1$ = X$ ! "order date
X2 = H0[10] \ Gosub L_7700 \ D2$ = X$ ! "ship date - old due date
If SORT = 3 ! "by whse
  X2 = K1$[1,2] \ If CWHSE = 0 Let CWHSE = X2
  If X2 <> CWHSE Gosub WHSE_BREAK
  CWHSE = K1$[1,2]
End If 
If SORT = 4 ! "by zone
  If CZONE$[1,2] = "  " Let CZONE$[1,2] = K1$[1,2]
  If K1$[1,2] <> CZONE$[1,2] Gosub ZONE_BREAK
  CZONE$[1,2] = K1$[1,2]
End If 
Gosub L_3000 ! "get customer
Gosub L_3050 ! "get bill to
if t$="S"
Gosub L_5800 ! "headings
Gosub L_2200 ! "totals
Endif
If T$ <> "S"
  Gosub L_4500 ! "go thru lines (detail only)
  Gosub L_5800 ! "check if now at end of page
End If 
Goto L_2000 ! "next order
L_2200: Rem ========================== TOTALS CALC
REGTOT = REGTOT + T2[1]
REGTOTCOST = REGTOTCOST + T2[17]
SLSMTOT = SLSMTOT + T2[1]
SLSMTOTCOST = SLSMTOTCOST + T2[17]
Return

L_2800: Rem CONTINUE ENTERING TRUCKS
!Print @0,22;'CE';"   ENTER NEXT TRUCK TO PRINT, WHEN DONE ENTER ''E''";
!Print @0,10;TRUCK; \ TRUCK$ = TRUCK \ X1 = X1 + Len(TRUCK$);X2 = 10
L_2812: If X1 > 80 Let X2 = X2 + 1;X1 = 0
L_2814: !Print @X1,X2;
!Input Len 16390;""TRUCK$ \ If TRUCK$ = "E" Return 
If TRUCK$ = "" Or TRUCK$[1,2] = "  " Goto L_2814
TRUCK = TRUCK$
If TRUCK < 0 Or TRUCK > 999999 Or Fra(TRUCK) Goto L_2814
Gosub L_6250
X1 = X1 + Len(TRUCK$) + 1 \ If X1 > 75 Let X2 = X2 + 1;X1 = 0
Goto L_2812
L_2850: Rem KEEP ENTERING ZONES
!Print @0,22;'CE';"  ENTER ADDITIONAL ZONE TO PRINT, WHEN DONE ENTER ''/''"
!Print @0,12;ZONE$; \ X1 = Len(ZONE$) + 1;X2 = 12
L_2865: If X1 > 76 Let X2 = X2 + 1;X1 = 0
L_2870: !Print @X1,X2; \ Input Len 16386;""ZONE$
If ZONE$ = "/" Return 
If ZONE$ = "" Or ZONE$ = "  " Goto L_2870
If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
K1$ = ZONE$
Search #11,2,1;K1$,R,E ! \ If E > 1 Gosub ERR_SEARCH
If E
  !Print @0,13;"ZONE NOT FOUND!"
  !Signal 3,20
  !Print @0,13;'CL';
  Goto L_2870
End If 
CZONE$ = K1$ \ Gosub L_6435 ! \ Print @X1,X2;CZONE$;
X1 = X1 + Len(ZONE$) + 1
If X1 > 77 Let X2 = X2 + 1;X1 = 0
Goto L_2865
L_3000: Rem ========================== GET CUSTOMER NAME
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E
If E ! Gosub ERR_SEARCH
	let c1$=" ",c1$
	c1$="CUSTOMER NOT FOUND!"
Else
!Mat Read #6,R6,0;A1$;
Mat Read #6,R6,30;C1$;
!Mat Read #6,R6,142;C1;
Endif
Return 
GET_SLSM_NAME: Rem need salesman name for sort 5 report
SM$ = " ",SM$ \ SM$ = H0[11] Using "###"
Search #15,2,1;SM$,SMREC,E
If E ! 
	SLS$=" ",SLS$
	SlS$="SALESPERSON MISSING"
Else
Mat Read #15,SMREC,0;SLS$;
Endif
SLS$[116]=sm$
Return 
L_3050: Rem ========================== GET BILL TO
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E
If E = 1 If H0[1] <> H0[4] Let H0[1] = H0[4] \ Goto L_3050
If E ! Gosub ERR_SEARCH
	let c2$=" ",c2$
	let c2$="BILL TO NOT FOUND!"
Else
Mat Read #6,R6,30;C2$;
endif
If H0[1] = OTC Let C2$ = S1$ ! "one time cust - billto addr=shipto addr
Return 
L_4500: Rem ========================== GO THRU LINES
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4530: Search #5,3,1;J2$,R5,E !\ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6]
If X3 <> H0[7]
  If OHPRNT
    Print #0;D$ ! dashes
    V1 = V1 + 1
  End If 
  OHPRNT = 0
  Return ! "hit next order
End If 
Mat Read #5,R5,8;L3; \ Mat Read #5,R5,16;L4;
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L1$; \ Mat Read #5,R5,140;L2$;
Mat Read #5,R5,160;L9;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,256;LT; ! "usually S2
Mat Read #5,R5,260;S3; \ Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
Mat Read #5,R5,494;LCO;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
If Not(L7[4]) Goto L_4530 ! NOTHING being shipped
Gosub CLEAR_LPFIELDS
If Not(L3) Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2; \ Mat Read #7,L4,256;A;
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
If L3[0] Gosub L_30000
For X = 1 To 3 \ SUNIT[X] = 0 \ Next X
PUNIT = 0;SUNIT$ = " ",SUNIT;PUNIT$ = " ",PUNIT$;CUNIT = 0;CUNIT$ = " ",CUNIT$
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let LT[0] = 3 ! "repair info
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_4755 ! "repair info
If LT[0] = 3 Goto L_4755
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000
  SUNIT[X] = AMOUNT ! "qty ord, b'ord, shipped
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
PUNIT = AMOUNT ! "price per unit
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
Gosub L_20000 \ CUNIT = AMOUNT ! "unit cost
CNVTU[1] = UN[1];CNVTA = L5[1]
Gosub L_20000 \ CUNITP = AMOUNT ! cost in pricing um
If UN[0] > 0 Mat Read #8,UN[0],10;SUNIT$;
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] > 0 Mat Read #8,UN[1],10;PUNIT$;
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UN[2] > 0 Mat Read #8,UN[2],10;CUNIT$;
If UN[2] = -1 Let CUNIT$ = "CWT "
If UN[2] = -2 Let CUNIT$ = "LOT "
If UN[2] = -3 Let CUNIT$ = "LB  "
If Not(L6[1]) Goto LAST_PRICE
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000
L6[1] = AMOUNT !;PUNIT=PUNIT-L6[1]
LAST_PRICE: Rem REMGET LAST PRICE AMOUNTS FOR THIS CUSTOMER & PRODUCT
L_PRICEKEY$ = " ",L_PRICEKEY$
L_PRICEKEY$[1,6] = H0[4] Using "######"
L_PRICEKEY$[7,10] = L9[1] Using "####"
L_PRICEKEY$[11,23] = L2$[1,13]
Search #12,3,1;L_PRICEKEY$,R12,E
!If E > 2 Gosub ERR_SEARCH
If E Goto L_4530 ! RETURN
LP = L_PRICEKEY$[1,6] \ If LP <> H0[4] Gosub CLEAR_LPFIELDS \ Goto L_4530 !L_4755:
LP = L_PRICEKEY$[7,10] \ If LP <> L9[1] Gosub CLEAR_LPFIELDS \ Goto L_4530 !L_4755:
If L_PRICEKEY$[11,23] <> L2$[1,13] Gosub CLEAR_LPFIELDS \ Goto L_4530 ! L_4755:
Mat Read #12,R12,16;LPC1;
Mat Read #12,R12,28;LPC2;
Mat Read #12,R12,46;LPC3;
Mat Read #12,R12,276;LPC5;
If Not(LPC1[1]) Goto L_4530 ! no last order skip
If LPC3[2] > 0 Mat Read #8,LPC3[2],10;LSUNIT$;
If LPC3[2] = -1 Let LSUNIT$ = "CWT "
If LPC3[2] = -2 Let LSUNIT$ = "LOT "
X2 = LPC1[2] \ Gosub L_7700 \ LPDATE$ = X$
CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 2;CNVTA = LPC2[1]
Gosub L_20000 \ LPUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 2;CNVTA = LPC2[2]
Gosub L_20000 \ LCUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 1;CNVTA = LPC2[0]
Gosub L_20000
L_QUANT = AMOUNT
X3 = L7[4] ! compare apples to apples (and same qty) - not extension to units
LPPEXT = FNR(LPC2[1] * X3);LPCEXT = FNR(LPC2[2] * X3)
If L5[3] Let X3 = (L5[3] - S3[12]) / L5[3] * 100 Else Let X3 = 0 ! "gtm
If LPPEXT Let LPGP = (LPPEXT - LPCEXT) / LPPEXT * 100 Else Let LPGP = 0
If MW$ <> "A" ! not for all - check up or down
  If FNR(X3) = FNR(LPGP) Goto L_4530 ! same never prints
  If MW$ = "U" And FNR(X3) <= FNR(LPGP) Goto L_4530 ! want higher and less
  If MW$ = "D" And FNR(X3) >= FNR(LPGP) Goto L_4530 ! want lower and more
End If 
L_4755: Gosub L_5800 ! "headings
Gosub L_5500 ! "print detail line
Goto L_4530 ! "next line
CLEAR_LPFIELDS: Rem if no last price record, clear out the last price fields
LSUNIT$ = "" \ LPDATE$ = "--------"
LPUNIT = 0 \ LCUNIT = 0
L_QUANT = 0 \ LPGP = 0
Return 
L_5000: Rem ========================== ORDER HEADER LINE
If OHPRNT Return ! order header printed
CTR = 0
OHPRNT = 1 !flag that we printed order header
Print #0;""
Print #0; Using "######";H0[7];
Print #0; Tab 7;D1$[1,8];
Print #0; Using "######"; Tab 16;H0[4];
Print #0; Tab 23;C1$[1,13]; ! "chop the name, need the whole po #
Print #0; Tab 37;P0$; ! "po number
Print #0; Tab 57;D2$[1,8];
Print #0; Using "###"; Tab 67;H0[11];
Print #0; Using "###"; Tab 72;H5;
Print #0; Using "##"; Tab 76;H4[2];
Print #0; Using "###"; Tab 80;H4;
Print #0; Using "######"; Tab 85;S5; ! "truck
Print #0; Tab 93;S2$[19,20]; ! "zone
Print #0; Using "####"; Tab 98;H4[1]; ! "stop
Print #0; Using "-------#.##"; Tab 108;T2[1]; ! "mdse amt
If COST_LEV[1]
  Print #0; Using "-------#.##"; Tab 120;T2[17]
Else 
  Print #0;""
End If 
Print #0; Tab 20;C2$[1,20];
If H5[13] Let ORDGP = FNR((H5[13] - H5[14]) / H5[13] * 100) Else Let ORDGP = 0
If COST_LEV[1]
  Print #0; Using "    ---#.##"; Tab 120;ORDGP
Else 
  Print #0;""
End If 
V1 = V1 + 3
Gosub L_5088
If T$ = "S" Return ! "summary only
Return 
L_5088: Rem =========================== SUBHEADER
Print #0; Tab 2;"LINE"; Tab 7;"ITEM CODE"; Tab 20;"DESCRIPTION";
Print #0; Tab 43;"ORDERED"; Tab 53;"SHIPPED"; Tab 63;"B'ORD";
Print #0; Tab 74;"GTM%"; Tab 81;"PRICE";
If COST_LEV[1]
  Print #0; Tab 97;"COST"; Tab 111;"EXT PRICE"; Tab 123;"EXT COST"
Else 
  Print #0; Tab 111;"EXT PRICE"
End If 
V1 = V1 + 1
Return 
GET_PCDESC: Rem "Price & Cost Descriptions
PDESC$ = " ",PDESC$;CDESC$ = " ",CDESC$
If LT[0] = 3 Return 
If L3[0] = 1 Return 
PDESC$ = L9[0] Using "--#"
CDESC$ = LCO[0] Using "--#"
LPDESC$ = " ",LPDESC$;LCDESC$ = " ",LCDESC$
If LPDATE$[1,3] = "---" Return 
LPDESC$ = LPC3[0] Using "--#"
LCDESC$ = LPC5[0] Using "--#"
Return 
L_5500: Rem ========================== ORDER LINE DETAIL
Gosub L_5000 ! print order header if hasn't
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #0; Tab 6;J2$[10,10]; \ Goto L_5520 ! "repair info line
Print #0; Using "###"; Tab 3;L3[2];
L_5520: Print #0; Tab 7;L2$[1,12]; Tab 20;L1$[1,20]; ! "item #/desc 1
If LT[0] = 3 Print #0;"" \ V1 = V1 + 1 \ Goto L_5562 ! "message line
If Fra(SUNIT[1]) = 0 Print #0; Using "--------#"; Tab 41;SUNIT[1]; Else Print #0; Using "------.##"; Tab 41;SUNIT[1];
If Fra(SUNIT[3]) = 0 Print #0; Using "--------#";SUNIT[3]; Else Print #0; Using "------.##";SUNIT[3];
If Fra(SUNIT[2]) = 0 Print #0; Using "--------#";SUNIT[2]; Else Print #0; Using "------.##";SUNIT[2];
If L5[3] Let X3 = (L5[3] - S3[12]) / L5[3] * 100 Else Let X3 = 0 ! "gtm
Print #0; Using "---#.##"; Tab 71;FNR(X3); !gtm
Print #0; Using PMASK$; Tab 73;PUNIT;"/";PUNIT$;
Print #0; Tab 89;PDESC$;
If COST_LEV[1]
  Print #0; Using PMASK$; Tab 91;CUNIT;"/";CUNIT$;
  Print #0; Tab 107;CDESC$;
  Print #0; Using "-------#.##"; Tab 109;L5[3];
  Print #0; Using "-------#.##"; Tab 120;S3[12]
Else 
  Print #0; Using "-------#.##"; Tab 109;L5[3]
End If 
V1 = V1 + 1
Print #0; Tab 22;"LAST ORDER";
Print #0; Tab 42;LPDATE$;
Print #0; Using "------.##";L_QUANT;
If LPPEXT Let LPGP = (LPPEXT - LPCEXT) / LPPEXT * 100 Else Let LPGP = 0
Print #0; Using "LGP %:---#.##"; Tab 60;FNR(LPGP);
Print #0; Using PMASK$; Tab 73;LPUNIT;"/";LSUNIT$;
Print #0; Tab 89;LPDESC$;
Print #0; Using PMASK$; Tab 91;LCUNIT;"/";LSUNIT$;
Print #0; Tab 107;LCDESC$;
If EUN[2] Print #0; Tab 111;"PPU";
X$ = "" \ If FNR(LPGP) < FNR(X3) Let X$ = "U"
If FNR(LPGP) > FNR(X3) Let X$ = "D"
Print #0; Tab 120;X$; ! WANT THE UP OR DOWN DESIGNATION
Print #0;""
V1 = V1 + 1
L_5562: If P9$[26,26] = "Y" Print #0; Tab 22;L1$[31,60]; ! "desc 2
If LT[0] = 3 Goto L_5581
If P60$[42,42] = "Y"
  Print #0; Using "  TAX CODE:### ";L6[5]; \ Print #0; Using "------.##";" TAX AMT:";LTAX1;
  Print #0; Using " (###.##%)";LTAX2;
End If 
L_5581: If Not(LT[0] = 3 And P9$[26,26] = "N") Print #0;"" \ V1 = V1 + 1
SLPrnt=SLPrnt+1
Return 
L_5800: Rem ========================== HEADINGS
If V1 < V9 Return ! WAS J1=J1+2
!If V2 If V8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V2 If Not(V8) Print #0;"\14\";
V2 = V2 + 1 \ V1 = 8
If Not(V8) Print #0;"\12\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V2
Print #0;" - 464B - ";Msc$(3);
Print #0; Tab 52;"M A R G I N  C H A N G E"
If WHSE Print #0; Tab 10;"WHSE";WHSE; Else Print #0; Tab 10;"ALL WHSES";
If DIV Print #0; Using "##"; Tab 58;"FOR DIVISION ";DIV;
If Not(DIV) Print #0; Tab 58;"FOR ALL DIVISIONS ";
If ORDER[0] <> 0 Or ORDER[1] <> 999999
  Print #0; Tab 103;" ORDERS ";ORDER[0];" TO ";ORDER[1]
Else 
  Print #0;""
End If 
If SORT = 2
  Print #0; Using "###";"DIVISION ";H5[8];"  SALESMAN ";H0[11]
Else 
  If SORT = 4
    Print #0;"ZONE ";S2$[19,20]
  Else 
    If SORT = 5
      Gosub GET_SLSM_NAME
      Print #0;"SALESMAN NUMBER ";SLS$[116,118];"  NAME: ";SLS$[1,30]
    Else 
      Print #0;""
    End If 
  End If 
End If 
If F9 = 9 Goto L_6000 ! "entered by headers
Print #0; Tab 0;"ORDER #";
Print #0; Tab 10;"DATE";
Print #0; Tab 17;"CUST CODE / NAME";
Print #0; Tab 37;"PO NUMBER";
Print #0; Tab 56;"SHIP DATE";
Print #0; Tab 66;"SLSM";
Print #0; Tab 71;"ENTD";
Print #0; Tab 76;"WH";
Print #0; Tab 79;"TAX#";
Print #0; Tab 86;"TRUCK";
Print #0; Tab 93;"ZN";
Print #0; Tab 98;"STOP";
Print #0; Tab 107;"TOTAL AMOUNT";
If COST_LEV[1]
  Print #0; Tab 120;"TOTAL COST"
Else 
  Print #0;""
End If 
Print #0; Tab 19;"BILL TO NAME";
If COST_LEV[1]
  Print #0; Tab 120;"TOTAL GTM %"
Else 
  Print #0;" "
End If 
Print #0;" "
Return 
L_6000: Rem ========================== ENT'D BY HEADINGS
Print #0; Tab 5;"ENTERED BY";
Print #0; Tab 30;"# ORDERS"; Tab 41;"# LINES";
Print #0; Tab 50;"ORDER TOTALS";
If COST_LEV[1]
  Print #0; Tab 64;"ORDER TOTALS COST"
Else 
  Print #0;""
End If 
Return 
L_6200: Rem ========================== SELECT TRUCKS
!Window Open @0,0; Size 79,24; Using "TRUCK SELECTION"
!If Not(F) Gosub L_6600 !"GET DELIVERY DATE
K1$ = " ",K1$
L_6240: Rem " thru File
If P61$[34,34] <> "Y"
  Search #11,3,1;K1$,R,E ! \ If E > 2 Gosub ERR_SEARCH
  If E Goto L_6258 !"display the trucks that ship
  Mat Read #11,R,36;T2$; \ Mat Read #11,R,32;TRUCK;
  If T2$[F,F] <> "Y" Goto L_6240 !"zone don't ship
Else 
  Search #2,3,1;K1$,R,E \ If E Goto L_6258
  !If E Gosub ERR_SEARCH
  X2 = K1$[1,2] \ If X2 > 3 Goto L_6258
  Mat Read #2,R,0;H0;
  Mat Read #2,R,78;H4;
  Mat Read #2,R,104;H5;
  Read #3,H0[2],146;S5;
  Mat Read #3,H0[2],126;S2$;
  If WHSE If H4[2] <> WHSE Goto L_6240 ! "wrong whse
  If DIV If DIV <> H5[8] Goto L_6240 ! "division check
  If (H5[7] = 21 Or H5[7] = 22) Goto L_6240 ! "repair-do not check if on picklist
  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ X2 = 999999
  If X2 > JDATE Goto L_6240
  TRUCK = S5
End If 
Gosub L_6250 \ Goto L_6240
L_6250: Rem INSERT SELECTED TRUCK INTO SORTFILE
J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
Search #9,4,1;J4$,R,E ! \ If E > 1 Gosub ERR_SEARCH
Return 
L_6258: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!Print @0,1;'CE';"THE FOLLOWING TRUCKS SHIP ON";X$[9]
K1$ = "{" \ X = 5
For I = 6 To 20
  Search #9,3,1;K1$,R,E ! \ If E > 2 Gosub ERR_SEARCH
  If E Goto L_6282
  If K1$[1,1] <> "{" Goto L_6282
  ! Print @X,I - 2;K1$[2];
  If I = 20 Let X = X + 10
  If X > 75 Goto L_6282
  If I = 20 Let I = 5
Next I
L_6282: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ = "Y" Goto L_6306
!If J$ <> "N" Goto L_6282
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_6258
TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_6282
K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
Search #9,5,1;K3$,R,E
! If E > 1 Gosub ERR_SEARCH
Goto L_6258
L_6306: !Window Close 
Return 
L_6400: Rem ========================== SELECT ZONE(S) - START BY SORTING
!RETURN ! NOT WORKING??
!Window Open @0,0; Size 79,24; Using "ZONE SELECTION"
!If Not(F) Gosub L_6600 !"GET DELIVERY DATE
K1$ = " ",K1$
L_6410: Rem "thru File
!If P61$[34,34] <> "Y"
!  Search #11,3,1;K1$,R,E ! \ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_6455
!  Mat Read #11,R,36;T2$;
!  If T2$[F,F] <> "Y" Goto L_6410 ! "zone don't ship
!  CZONE$ = K1$
!Else  ! ALWAYS WHAT'S ON FILE!!
  Search #2,3,1;K1$,R,E \ If E Goto L_6455
  ! If E Gosub ERR_SEARCH
  X2 = K1$[1,2] \ If X2 > 4 Goto L_6455
  Mat Read #2,R,0;H0;
  Mat Read #2,R,78;H4;
  Mat Read #2,R,104;H5;
  !Read #3,H0[2],146;S5;
  Mat Read #3,H0[2],126;S2$;
  If WHSE If H4[2] <> WHSE Goto L_6410 ! "wrong whse
  If DIV If DIV <> H5[8] Goto L_6410 ! "division check
  If H0[11] < SLSM[0] Or H0[11] > SLSM[1] Goto L_6410
  If (H5[7] = 21 Or H5[7] = 22) Goto L_6410 ! "repair-do not check if on picklist
  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ X2 = 999999
  If X2 > JDATE Goto L_6410
  CZONE$ = S2$[19,20]
!End If 
if rtrim$(czone$)="" goto L_6410 ! no blank/null please
Gosub L_6435 \ Goto L_6410
L_6435: Rem INSERT SELECTED ZONE INTO SORTFILE
J4$ = " ",J4$ \ J4$ = "}"+CZONE$+BLANK$
LET J4$[4]="" ! CUT AT MAX
Search #9,4,1;J4$,R,E ! \ If E > 1 Gosub ERR_SEARCH
Return 
L_6455: Rem ============ DISPLAY THE ZONES THAT SHIP
!Print @0,1;'CE';"THE FOLLOWING ZONES SHIP ON";X$[9]
k1$=" ",K1$;zonecnt=0
K1$ = "}" !\ X = 5
azloop: ! For I = 6 To 20
  Search #9,3,1;K1$,R,E ! \ If E > 2 Gosub ERR_SEARCH
  If E Goto L_6515
  If K1$[1,1] <> "}" Goto L_6515
	U_ZONE$[ZONECNT] = trim$(K1$[2])
    ZONECNT = ZONECNT + 1
!    If I = 20 Let I = 5
goto azloop ! Next I
L_6515: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO PRINT? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ = "Y" Goto L_6567
!If J$ <> "N" Goto L_6515
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_6455
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,R,E
! If E > 1 Gosub ERR_SEARCH
!Goto L_6455
L_6567: ! Window Close 
Return 
L_6600: Rem ========================== SELECT DELIVERY DATE
!J0$ = "50000631 5" \ J1 = CURDATE;J5$ = "ENTER DELIVERY DATE OR <CR> FOR TODAY'S DATE"
!Gosub L_7000 \ If J1 = 0 Goto L_6675
call dxget("U_SHDATE",tmp$) ! returns as MMDDYY
if rtrim$(tmp$)="" ! none - use today
	let x$=CURDATE using "&&&&&&"
	let tmp$=x$[3,6]+x$[1,2] ! need as MMDDYY
Endif
let x$=tmp$[5,6]+tmp$[1,4] ! program wants YYMMDD
let j1=x$
X2 = J1 \ Gosub YMD2JUL \ let x2=TIM(6) !  Goto L_6600
JDATE = X2
X2 = J1 \ Gosub L_7700
Gosub L_6900 !!DAY
D8 = J1;ODW = J1
!Print @40,5;X$[9];
F = Z9 + 1 \ If F < 1 Goto L_6675
If F > 7 Goto L_6675
Return ! it's a prompt now - no ok needed
L_6650: !Print @0,22;'CE';"DATE OKAY? (Y/N/E) "; \ Input ""J$
!Print @0,22;'CE';
If J$ = "E" Goto OUTEND
If J$ = "Y" Return 
If J$ <> "N" Goto L_6650
Goto L_6600
L_6675: !Print @0,22;"INVALID DATE ! ";'CE'; \ Signal 3,15 \ Goto L_6600
L_6700: Rem ========================== READ TEMP
!Mat Read #16,REC,0;T16;
Return 
L_6750: Rem ========================== WRITE TEMP
!Mat Write #16,REC,0;T16;
Return 
L_6800: Rem ========================== BUILD TEMPORARY WORKFILE
Return
TFLE$ = " ",TFLE$
TFLE$ = "[1000:72]6/REGTEMP"
TFLE$ = TFLE$,Spc(6) Using "&&&&"
TFLE$ = TFLE$,"!"
Build #16,TFLE$
Close #16
TFLE$ = TFLE$[10]
Open #16,TFLE$
Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
L_7600: ! 
Message$=message$+J7$+"   "
let eflag=eflag+1
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
YMD2JUL: Rem "
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
L_7800: Rem ================ CLEAR THE SORT FILE
!Print @0,23;'CL';"CLEARING SORT FILE...";
K1$ = " ",K1$
L_7830: Search #9,3,1;K1$,R,E ! \ If E > 2 Gosub ERR_SEARCH
If E Goto L_7870
Search #9,5,1;K1$,R,E ! \ If E Gosub ERR_SEARCH
Goto L_7830
L_7870: ! Print @0,23;'CL';
Return 
L_8300: Rem ========================== SORT THE ORDERS
!Print @0,23;'CL';"SORTING...";
SRT$ = " ",SRT$;K1$ = " ",K1$;K1$ = S7 Using "##     "
If ORDER[0] <> 0 Let K1$[3,8] = (ORDER[0] - 1) Using "######"
K3$ = " 4"
L_8340: Search #2,3,1;K1$,R1,E \ If E Return 
! If E Gosub ERR_SEARCH
If K1$[1,2] > K3$[1,2] Return ! "hit next status
Mat Read #2,R1,0;H0;
If ORDER[0] <> 0 Or ORDER[1] <> 999999
  If H0[7] < ORDER[0] Or H0[7] > ORDER[1] Goto L_8340
End If 
If H0[11] < SLSM[0] Or H0[11] > SLSM[1] Goto L_8340
X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ X2 = 999999
If X2 > JDATE Goto L_8340
If EDM And X2 <> JDATE Goto L_8340 ! exact match wanted
Mat Read #2,R1,78;H4;
Mat Read #2,R1,104;H5;
Mat Read #3,H0[2],8;S1$;
Read #3,H0[2],146;S5;
Mat Read #3,H0[2],126;S2$;
If allzones Goto L_8405 !"all zones selected
CLEAR X$
let x$=s2$[19,20]+blank$
ZONE$ = " ",ZONE$;ZONE$ = "}"+x$[1,2]
ZONE$[4]="" ! cut at max
Search #9,2,1;ZONE$,R,E ! \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8340 !"not one of the selected zones
!IF S2$[19,20]<SZONE$ OR S2$[19,20]>EZONE$ GOTO L_8340:
L_8405: !If TRUCK$ = "" Goto L_8410 !"all trucks selected
!TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
!Search #9,2,1;TRUCK$,R,E ! \ If E > 2 Gosub ERR_SEARCH
!If E Goto L_8340 !"not one of the selected trucks
L_8410: If WHSE If H4[2] <> WHSE Goto L_8340 ! "wrong whse
If DIV If DIV <> H5[8] Goto L_8340 ! "division check
If (H5[7] = 21 Or H5[7] = 22) Goto L_8442 ! "repair-do not check if on picklist
If PRINTALL Goto L_8442
S9[1] = S1$[118,118] \ If S9[1] = 3 Let S9[1] = 2
If S9[1] If S9[1] <> S9[0] Goto L_8340
If S9[1] = 0 If S9[0] = 2 Goto L_8340
If BYPASS221 If H5[7] = 11 Goto L_8340
L_8442: Mat Read #4,H0[3],8;T2
X4 = T2[21] \ For K = 0 To 11
  T9[K] = Sgn(Fra(X4 / 2)) \ X4 = Int(X4 / 2)
Next K
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
LLP_SORT: Rem LINE LOOP FOR SORT
Search #5,3,1;J2$,R5,E ! \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8340
X3 = J2$[1,6]
If X3 <> H0[7] Goto L_8340
Mat Read #5,R5,8;L3; \ Mat Read #5,R5,16;L4;
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L1$; \ Mat Read #5,R5,140;L2$;
Mat Read #5,R5,160;L9;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,256;LT; ! "usually S2
Mat Read #5,R5,260;S3; \ Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
Mat Read #5,R5,494;LCO;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
If Not(L7[4]) Goto LLP_SORT ! NOTHING being shipped
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let LT[0] = 3 ! "repair info
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto LLP_SORT ! "repair info
If LT[0] = 3 Goto LLP_SORT ! NO ZLINES
L_PRICEKEY$ = " ",L_PRICEKEY$
L_PRICEKEY$[1,6] = H0[4] Using "######"
L_PRICEKEY$[7,10] = L9[1] Using "####"
L_PRICEKEY$[11,23] = L2$[1,13]
Search #12,3,1;L_PRICEKEY$,R12,E
! If E > 2 Gosub ERR_SEARCH
If E Goto LLP_SORT ! RETURN    ! no lastprice - NO MARGIN!
LP = L_PRICEKEY$[1,6] \ If LP <> H0[4] Goto LLP_SORT ! DIFF CUST
LP = L_PRICEKEY$[7,10] \ If LP <> L9[1] Goto LLP_SORT !DIFF DEPT
If L_PRICEKEY$[11,23] <> L2$[1,13] Goto LLP_SORT ! DIFF PROD
Mat Read #12,R12,16;LPC1;
Mat Read #12,R12,28;LPC2;
Mat Read #12,R12,46;LPC3;
Mat Read #12,R12,276;LPC5;
If Not(LPC1[1]) Goto LLP_SORT ! no last order skip
If MW$ = "A" Goto SUSORT ! AS THEY WANT ALL - JUST ONE LINE NEEDED ON ORDER
X3 = L7[4] ! compare apples to apples (and same qty) - not extension to units
LPPEXT = FNR(LPC2[1] * X3);LPCEXT = FNR(LPC2[2] * X3)
If L5[3] Let X3 = (L5[3] - S3[12]) / L5[3] * 100 Else Let X3 = 0 ! "gtm
If LPPEXT Let LPGP = (LPPEXT - LPCEXT) / LPPEXT * 100 Else Let LPGP = 0
If MW$ = "U" And FNR(X3) <= FNR(LPGP) Goto LLP_SORT ! want higher and order's less
If MW$ = "D" And FNR(X3) >= FNR(LPGP) Goto LLP_SORT ! want lower and order's more
SUSORT: Rem ADD TO SORT
SRT$ = " ",SRT$
If SORT = 1 ! TRUCK/ZONE
  SRT$ = S5 Using "######" ! "truck #
  SRT$[7,8] = S2$[19,20] ! "zone
  SRT$[9] = 9000 - H4[1] Using "####" ! rvrse stop/see mx203b/has to match
End If 
If SORT = 2 ! division/slsm
  SRT$ = H5[8] Using "###"
  SRT$[4] = H0[11] Using "###          "
End If 
If SORT = 3 Let SRT$[1,2] = H4[2] Using "##";SRT$[4,9] = H0[7] Using "######"
If SORT = 4 Let SRT$[1,2] = S2$[19,20]
SRT$[13] = K1$[1,8] ! "status/order
If SORT = 5 ! slsm/cust name/order#
  SRT$ = H0[11] Using "###"
  Gosub L_3000 ! get customer name
  SRT$[4,33] = C1$[1,30]
  SRT$[34,39] = H0[7] Using "######"
End If 
Search #9,4,1;SRT$,R1,E ! "same recno as header
! If E Gosub ERR_SEARCH
Goto L_8340

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050 ! "um window
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160 ! "going to same units
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160 ! "lot
If CNVTU[2] = 0 Goto L_20050 !!THIS TESTS IF VALID CONVERSION
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160 ! "none there
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
!Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160 !!TEST IF VALID CONVERSION
If FLAG Let E = FLAG ! \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If LT[0] = 3 Goto L_30099 ! "message line (ZLINE)
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0] ! "base and selling units
PFU1[2] = UN[1];PFU1[3] = UN[2] ! "pricing and costing
PFU1[4] = EUN[1] ! "purchasing
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1] ! "stock,sell,purch dflt
PFU1[11] = UN[2];PFU1[12] = UN[1] ! "cost,price dflt
If Not(L3[0]) Goto L_30060 ! "leave as is (NONSTOCK)
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0] ! "prod,up,bkn dflt
PFU1[18] = UN[0];PFU1[19] = UN[0] ! "pack,size dflt
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1] ! "selling and pricing factor
PFU2[2] = UNF[2];PFU2[3] = UNF[3] ! "costing and purchasing
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
WHSE_BREAK: Rem -----------------------------------------------------
Print #0;""
If MW$ <> "A"
  Print #0; Using "###"; Tab 75;"END OF WAREHOUSE ";CWHSE;
  Goto WBDONE
End If 
Print #0; Using "###"; Tab (75);"WAREHOUSE";CWHSE;" TOTALS";
Print #0; Using "-------#.##"; Tab (108);SLSMTOT;
If COST_LEV[1]
  Print #0; Using "-------#.##"; Tab 120;SLSMTOTCOST
Else 
  Print #0;""
End If 
WBDONE: Rem
Print #0;""
SLSMTOT = 0;SLSMTOTCOST = 0
If SORT
  V1 = 90
  Gosub L_5800
End If 
Return 
SLSM_BREAK: Rem -----------------------------------------------------
if slprnt=0 goto SLBRKDone ! no lines printed for him
Print #0;""
!If MW$ <> "A"
  Print #0; Using "###"; Tab 80;"END OF SALESPERSON ";OSLSM;
  Goto SBDONE ! WHAT TOTALS? - IS FOR ALL ORDERS/LINES!
!End If ! unrem if and endif for slsm totals? (we print certain lines & totals are whole order!
Print #0; Using "SALESMAN ### TOTALS"; Tab (80);OSLSM;
Print #0; Using "-------#.##"; Tab (108);SLSMTOT;
If COST_LEV[1]
  Print #0; Using "-------#.##"; Tab 120;SLSMTOTCOST
Else 
  Print #0;""
End If 
SBDONE: Rem
Print #0;""
If SORT
  V1 = V9
  Gosub L_5800
End If 
SLBRKDONE: ! 
SLSMTOT = 0;SLSMTOTCOST = 0;SLPrnt=0
Return 
ZONE_BREAK: Rem -----------------------------------------------------
Print #0;""
If MW$ <> "A"
  Print #0; Tab (75);"END OF ZONE ";CZONE$; ! " TOTALS";
  Goto ZBDONE
End If 
Print #0; Tab (75);"ZONE ";CZONE$;" TOTALS";
Print #0; Using "-------#.##"; Tab (108);SLSMTOT;
If COST_LEV[1]
  Print #0; Using "-------#.##"; Tab 120;SLSMTOTCOST
Else 
  Print #0;""
End If 
ZBDONE: Rem
Print #0;""
SLSMTOT = 0;SLSMTOTCOST = 0
If SORT
  V1 = 90
  Gosub L_5800
End If 
Return 
ISERRMSG: 
let message$=message$+J7$+"   "
let eflag=eflag+1
Return ! X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
OutErr: ! some kind of input issue
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
Call programdump("tmp/464bse!","")
goto OutErr:
L_9100: Rem ========================== END OF THIS RANGE
! If V8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
End 
OUTEND: Rem ========================== EXIT PROGRAM
!If Err 0 Goto L_9005
!TFLE$[Len(TFLE$)] = "" \ Close #16 \ Kill TFLE$
!If Err 0 Rem
! Window Close 
L_9005: If Err 0 Gosub ERR_TRAP
If V8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK

ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 
