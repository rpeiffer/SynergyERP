! >>> Program 227A
!
! description INVOICE ACCEPT PART 2
!
! loadsave -w -n 100,10 -o prog/dxport/227a.dl4 src/227a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX227A INVOICE ACCEPT PART 2 - UPDATE MO-GL FILES
Rem Last Update:  3/93 (rek) - back out freight addons)
Rem  jlp 10/28/96 - change open to ropen, div & whinfo files
!               jlp 11/05/96 - kitflag not reset if kit line right before nonstock line 
!               03/1997 - FIFO USES JULIAN DATES
!               4/98 ac cct112384 clear out gl cost for Z lines
! jliu 2/23/99 cct119860 if the cost u/m is cwt, let the qty equal to
!      the ext. wt. and recalculate the glcost
! 	mtg 03/10/99 cct#120642 ptch#1736 prob message line in g/l
! JLIU 4/13/99 cct120817 assign A[5] and A[6] before calculating the glcost
! jlp 5/27/99 cct118014 for kits, if no cost, use kit cost
! jlp 8/16/99 cct125553 fix glcost for type 15, cwt cost
! jliu 12/15/99 cct130084 get the sign from the order qty in L2500 routine
! mtg 02/09/00 cct132670 mfg fix update finished goods to correct g/l acct
! add status channel for myreports
!
! -------NOTES FOR UPGRADE TO REV10 FOR PAPER & CHEMICAL ------------------------
! mtg 03/12/96 cct 87846 - on associated items (vendor code 4920) with commodity
!                          code of "TIME", use load cost from line for g/l cost.
! mtg 07/03/06 cct 92363 - modified above change(cct87846) to use average cost
!                          instead of load cost from the line for g/l cost.
! ! custom code for checking-> IF P8$[5,5]="P" (in 2 places, labeled with "P&C")! remove not pcs was for horowitz cct#103663
!->also fixed a bug, moved the label "L_7770:" up 1 line so the previous line
!   would be executed if whse pricing is turned off
! ------------  NOTES FOR UPGRADE TO XREV9 FOR WHITE RIVER PAPER  ---------------
! used rev9 program and added in custom code for:
! rjs 02/08/2000 cct130603 united stationers update g/l cost with loaded cost
! ------------------------------------------------------------------------------
!
!  Restart instructions:  NONE AT THIS TIME!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 12, 2006  15:09:18
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/mx2/mx227a.src (univ2) [mary] {33359}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,VerifyDate
!Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Try
Com 1%,TERMFLAG,IntCo,icflag,statchan
Com 1%,PFU1[20],CNVTU[2],SC,SR,FLAG
Com 2%,PASSR[9]
Com 3%,PFU2[6],A[33],CNVTA[4],e$[500],rstr$[2000]
!
DIM 1%,fmcode
Dim 1%,B0,B1[2],B5,B8,C[17],CLFLAG,C2,E,H3[1],H4[2],L3[3],L9,S,S2[1],X1
Dim 1%,UN[2],JTL[2],JTL2,WHSE,LWHSE,HWHSE
Dim 1%,RESTART,LINENUM,PORTNUM,TRACK[1],TYPE,PART,TRACKDATE$[25]
dim 1%,OT19Part,OT19Rmd,S5
dIM 1%,HGLWHSE
DIM 1%,USGLFLAG ! United Stationer's update of g/l with load cost
Dim 2%,WHOS
Dim 2%,B4[3],B[2],C0,C8[1],CLIENT,H,H0[12],H5[16],J,L4[3],L6[5],N0,P,S9[8],X2
Dim 2%,A0,JRNL,D8,B3[1],H6[8],ARDATE,WDATE,S0[8],MCODE[9],COMP,ORDNUM
Dim 3%,A4,B2,B6[1],B7[3],B9,L5[3],L7[12],QTY,JTL1[14]
Dim 3%,T2[25],A9[1],TOT[4],LTAX1,MCHARGE[9,1],OREF[5],INVNO,N1
DIM 3%,Tot_sell,CustOrd,M2[20]
Dim A$[40],A1$[40],A9$[156],F$[20],K$[40],K1$[40],K2$[40],K3$[40],K5$[40]
Dim G8$[2],K35$[40],SCRATCH$[80],Z1$[10]
Dim K4$[40],L2$[20],V1$[30],X$[10],P8$[7],P9$[50]
Dim KL$[58],1%,KL1[5],KITFLAG,3%,KITCOST,KL3[1],2%,KL2[1],K14$[40],K24$[40]
Dim 1%,PFU1[20],WHLM[1],LM[1],2%,D3[1],JARDATE
Dim 1%,G[2],3%,G1[10],G2[20],G3[20],G4[20],G5[20],G6[20],G7[20],G8[20]
Dim 3%,G0[20],G9[20],M0[20],M1[20],S3[17],OLM[5],R[50],TOTGL
dim 1%,pgmlit,k40$[30],3%,whmisc2[7]
Dim 3%,FTRECA,FTRECB,LETTER$[1]
Dim K9$[40],2%,C1[24],C4[8],3%,P5,W3[24],A[33]
Dim 1%,MODE,FL1[2],FL1$[80],2%,FL2[3],3%,FL3[14],FL4[1]
Dim 1%,FT1[3],FT1$[72],2%,FT2[3],3%,FT3[3]
Dim 2%,FIFL,P60$[50],FLT$[50],TL6[5],3%,FQ9[2],FQTY,FLK$[50],I$[30]
Dim P61$[256],FSKEY$[40],3%,FC2[1]
Dim 2%,GLD[6],GLD$[12],GLD1$[30],GLD2$[2],4%,GLD1,REC_GLD,1%,GLD2[1]
Dim GLDKEY1$[50],GLDKEY2$[50],KEYCUST$[40],CUSTNAME$[30]
Dim 3%,GLCOST,FCOST,FICOST[1],FI4[1],AQTY,TEMPCOST,TUNF[6],TL5[3],TL7[12],UNF[6]
Dim SRTK$[50],K18$[40],K25$[40],K8$[40]
Dim ADDKEY$[40],TRACKFILE$[30],custom_customer$[30]
Dim 1%,WHPARC[5],2%,W2[9],3%,PF_LOAD2,WHMISC[6],PRPARC[3]
Dim 1%,FIFOSPECCH[10],FIFOSPEC1[10],FIFOSPEC$[150],2%,FIFOSPEC2[10],3%,FIFOSPEC3[16]
DIM HGLCOMM$[4]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
!Try 
!call dxopen() ! may not need this! NEEDS FOR DXTEST RUN!!
!Else
	Rem
!End try
RESTART0: Rem let restart = 1
X2 = Spc(5)
COMP = IntCO ! Int((X2 - Int(X2 / 16384) * 16384) / 64)
If RESTART
  F$ = "cntrl/cntrl"+Str$(COMP)
  !If COMP > 9 Let F$ = COMP Using "cntrl##"
  Open #1,F$
End If 
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
MAT READ #1,52,82;HGLWHSE;	 ! HELD INVENTORY WAREHOUSE
IF HGLWHSE<1 OR HGLWHSE>99 LET HGLWHSE=0
MAT READ #1,52,100;HGLCOMM$; ! HELD INVENTORY COMMODITY CODE
FOR CTR=1 TO 4
	IF HGLCOMM$[CTR,CTR]="" LET HGLCOMM$[CTR,CTR]=" "
NEXT CTR
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
CUSTOM_CUSTOMER$ = UCase$(trim$(CUSTOM_CUSTOMER$))
let usglflag=0
if custom_customer$="ARDS3455" let usglflag=1
if custom_customer$="PCS" let usglflag=1
if custom_customer$="WHITERIVER" let usglflag=1
If P9$[17,17] <> "Y" And P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_9005
If RESTART
  SCRATCH$ = "files/1/227track" + Str$(COMP)
  Open #80,SCRATCH$
  Read #80,0,0;TRACK[0],TRACK[1],ORDNUM,LINENUM,PORTNUM,PART,TYPE,TRACKDATE$;
Else 
  TRACKFILE$ = "files/1/227track"+Str$(COMP)
  SCRATCH$ = "[1:42] " + TRACKFILE$ + "!" \ Build #80,SCRATCH$
  Try Close #80  Else rem
  tmp$="chmod go+rw "+Trackfile$
  System tmp$
  Open #80,TRACKFILE$
  PORTNUM = Spc(6);PART = 2;TYPE = TERMFLAG;TRACKDATE$ = Msc$(3)
  Write #80,0,0;TRACK[0],TRACK[1],ORDNUM,LINENUM,PORTNUM,PART,TYPE,TRACKDATE$;
End If 
! Statchan=88 ! instead of keeping irm open (pass it as com)
If statchan Print #statchan;"Part 2 of accept starting"
If RESTART
  !Print 'CS';@0,10;"The track file contains the following values: "
  !Print @2,12;"Order:    ";ORDNUM;@25,12;"Line:  ";LINENUM;
  !Print @2,13;"Track[0]: ";TRACK[0];@25,13;"Track[1]: ";TRACK[1];
  !Print @2,15;"Port: ";PORTNUM;"  Part: ";
  !If PART = 1 Print "mx227";
  !If PART = 2 Print "mx227a";
  !If PART = 3 Print "mx227b";
  !Print "   Type: ";
  !If TYPE = 0 Print "Both (cash & orders)";
  !If TYPE = 1 Print "Cash";
  !If TYPE = 2 Print "Orders";
  !Print @2,16;"Date/Time Started: ";TRACKDATE$;
ASK_READY: !Print @0,23;"Ready to begin the restart? (Y/N) (last chance!) ";
  !Input ""Z1$ \ Call String(1,Z1$)
  !If Z1$ <> "Y" And Z1$ <> "N" Goto ASK_READY
  !If Z1$ = "N" Goto L_9100
End If 
Mat Read #1,52,60;P8$; \ Mat Read #1,52,0;S0;
Mat Read #1,0,108;D8;
X$ = D8 Using "&&&&&&" \ POSTPER = X$[1,4]
For X1 = 2 To 25
  Read J
  If P9$[17,17] <> "Y" If X1 < 8 Goto L_320
  If J = -1 Goto L_320
  Read #1,88,J;F$;
  Open #X1,F$
L_320: Next X1
Data "64","240","256","272","464","2032","1840","-1","1872","1888","2128","2176"
Data "1792","1808","1856","1744 ","1184","-1","-1","-1","-1","-1","1312"," 1136"
! #1-CNTRL, #2-GLARTEMP, #3-SARMOH, #4-SARMOL, #5-SARMOA, #6-GLARCNTRL,
! #7-MISCCHRG, #8-SORDFLEH, #9-SORTFLE , #10-SORDFLET, #11-SORDFLEL 
! #12-SPRODESC,#13-STAXCODE, #14-SPROD,#15-CUST,#16-SORDFLES 
! #17-PRODWHSE, #19-FIFOLOT, #20-FIFOTRANS, #21-DIVIFLE, #22-ACF, #23-WHINFO
! #24-SORDLKITL, #25-INVH #29-fifospc,#35-JSDETL FILE
F$ = "3/JSDETL"+Str$(COMP) \ Open #35,F$
Read #1,88,2768;F$; \ Ropen #23,F$
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_500
Read #1,88,3008;F$; \ Open #19,F$
Read #1,88,3024;F$; \ Open #20,F$
If P61$[60,60] = "Y"
  F$ = "4/FIFOSPC"+Str$(COMP) \ Ropen #29,F$
End If 
Try Close #40 Else  REM
f$="2/PRODGRP"+Str$(COMP)
ROPEN #40,f$! PRODGROUP
Mat Read #1,3,192;FIFL;
I$ = " ",I$
I$ = "[1:256] 6/FIFOITMP";I$[Len(I$) + 1] = Spc(6) Using "&&&&","!"
If RESTART
  I$ = PORTNUM Using "6/FIFOITMP&&&&"
  Open #30,I$
  Goto L_500
End If 
Build #30,I$
R[30] = 13 \ Search #30,0,1;I$,R[30],E \ If E error 11000
R[30] = 1 \ Search #30,0,0;I$,R[30],E \ If E error 11000
L_500: Rem BUILD CREDIT MEMO SORT FILE ON CHANNEL #31
Mat Read #1,0,108;ARDATE;
X2 = ARDATE \ Gosub L_17820 \ X2 = 0
If X2 Let JARDATE = X2 Else Gosub L_17600
I$ = " ",I$
I$ = "[1:256] 6/SORTITMP";I$[Len(I$) + 1] = Spc(6) Using "&&&&","!"
If RESTART
  I$ = PORTNUM Using "6/SORTITMP&&&&"
  Open #31,I$
  Goto CREATE_FIFOIADD
End If 
Build #31,I$
R[31] = 13 \ Search #31,0,1;I$,R[31],E \ If E error 11000
R[31] = 1 \ Search #31,0,0;I$,R[31],E \ If E error 11000
CREATE_FIFOIADD: If P60$[9,9] = "F" Or P60$[9,9] = "L"
  F$ = "6/FIFOIADD"+Str$(COMP)
  Call FindF(F$,A9)
  If Not(A9)
    I$ = "[1:256] ",F$,"!"
    Build #32,I$
    R[32] = 7 \ Search #32,0,1;I$,R[32],E \ If E error 11000
    R[32] = 1 \ Search #32,0,0;I$,R[32],E \ If E error 11000
    Close #32
  End If 
  tmp$="chmod go+rw files/"+LCase$(F$)+"*"
  System tmp$
  Open #32,F$
End If 
CLFLAG = 0
If P9$[17,17] <> "Y" Goto L_600
F$ = "4/GLARDETL"+Str$(COMP)
Open #55,F$
Mat Read #1,51,0;C; \ If Not(C[3]) Goto L_600
If P8$[7,7] <> "W" And P8$[7,7] <> "D" Goto L_600
CLFLAG = 99
If P8$[7,7] = "D" Read #1,88,688;F$; \ Ropen #21,F$
L_600: Rem SORT INVOICES BY JOURNAL #
! call programdump("/tmp/ialog9!","")
S = 7 \ K1$ = " ",K1$ \ K1$[1,2] = S Using "##"
V1$ = K1$
If RESTART Goto L_900
L_620: Search #8,3,1;K1$,R[8],E \ If E = 2 Goto L_700
If E error 11000
If K1$[1,2] <> V1$[1,2] Goto L_700
Mat Read #8,R[8],0;H0;
Mat Read #8,R[8],104;H5;
Mat Read #8,R[8],508;OT19Part;
Mat Read #8,R[8],512;OREF;
If PASSR[1] = 757 ! "came from separate OT 16 Accept
  If H5[7] <> 16 Goto L_620
  If PASSR[3] And H5[11] <> PASSR[3] Goto L_620
Else 
  If H5[7] = 16 Goto L_620
End If 
! if h6[7]=36 or h5[7]=37 goto L_620 ! EVAP NOT READY
INVNO = OREF[1]
R[10] = H0[3] \ Mat Read #10,R[10],8;T2;
If TERMFLAG = 1 And T2[10] = 0 Goto L_620
If TERMFLAG = 2 And T2[10] <> 0 Goto L_620
R[10] = H0[3] \ Mat Read #10,R[10],164;JRNL;
SRTK$ = " ",SRTK$
SRTK$[1,6] = JRNL Using "######"
SRTK$[7,16] = OREF[1] Using "##########"
SRTK$[17,22] = H0[7] Using "######"
SRTK$[23,28] = R[8] Using "######"
R[31] = R[8]
Search #31,4,1;SRTK$,R[31],E \ If E error 11000
If R[8] <> R[31] error 11000
Goto L_620
L_700: Rem CLEAR GLARTEMP EXCEPT FOR SPACE RECORD
! call programdump("/tmp/ialog10!","")
If P9$[17,17] <> "Y" Goto L_900
V1$ = " ",V1$
L_710: Search #2,3,1;V1$,R[2],E
If E = 2 Goto L_900
If E error 11000
Search #2,5,1;V1$,R[2],E
If E error 11000
E = 3 \ Search #2,1,0;V1$,R[2],E
If E error 11000
Goto L_710
L_900: SRTK$ = " ",SRTK$
L_1000: Rem *
Search #31,3,1;SRTK$,R[31],E \ If E = 2 Goto L_8800
If E error 11000
SCR = SRTK$[17,22]
If RESTART
  If ORDNUM <> SCR Goto L_1000
End If 
ORDNUM = SCR \ Write #80,0,4;ORDNUM;
If Not(RESTART) Let TRACK[0] = 0 \ Write #80,0,0;TRACK[0];
R[8] = R[31] \ N0 = 0 \ N1 = 0
Mat Read #8,R[8];H0;
Mat Read #8,R[8],52;H3;
Mat Read #8,R[8],78;H4;
Mat Read #8,R[8],104;H5;
Mat Read #8,R[8],408;H6;
mat  read #8,r[8],508;OT19Part;
Mat Read #8,R[8],512;OREF;
CLIENT = 0;HWHSE = H4[2];WHSE = H4[2]
If CLFLAG
  If P8$[7,7] = "D" Mat Read #21,H5[8],76;CLIENT;
  If P8$[7,7] = "W" Mat Read #23,H4[2],844;CLIENT;
End If 
If Not(CLIENT) Let CLIENT = S0[0]
R[10] = H0[3];INVNO = OREF[1]
Mat Read #10,R[10],8;T2;
Mat Read #10,R[10],164;JRNL; \ Mat Read #10,R[10],328;TOT;
Mat Read #10,R[10],168;MCODE; \ Mat Read #10,R[10],208;MCHARGE;
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
N0 = H0[7]
If P9$[17,17] <> "Y" Goto L_2000
CUSTNAME$ = " ",CUSTNAME$
KEYCUST$ = " ",KEYCUST$;KEYCUST$[1,6] = H0[4] Using "######"
Search #15,2,1;KEYCUST$,R[15],E
If E
  CUSTNAME$ = "Customer Not On File          "
Else 
  Mat Read #15,R[15],30;CUSTNAME$;
End If 
K25$ = " ",K25$;K25$[1,2] = "30";K25$[3,12] = OREF[1] Using "##########"
Search #25,2,1;K25$,R[25],E \ If E error 11000
TOTGL = 0
Gosub L_6900
If H5[7]=19 And OT19Part Goto L_1480 ! "bypass on OT 19 partial
B0 = 0 \ C0 = CLIENT
B8 = 1
N0 = H0[7] \ N1 = OREF[1]
B[0] = H0[4];B[2] = H0[8];B1 = H4[2];B2 = T2
B1[1] = H5[8] \ B1[2] = H5[7]
B3[0] = D8 \ B3[1] = JRNL
K$ = " ",K$ \ K$[1,4] = C0 Using "####" \ K$[5,6] = B1 Using "##"
K$[7,12] = B3[0] Using "######" \ K$[13,22] = INVNO Using "##########"
K$[23,28] = B[0] Using "######" \ K$[29,30] = B8 Using "##"
If RESTART
  Search #3,2,1;K$,R[3],E
  If Not(E)
    B4[0] = R[3] \ B4[1] = H0[4]
    Goto UPDATE_AR
  End If 
End If 
E = 2 \ Search #3,1,0;K$,R[3],E
If E error 11000
Mat Write #3,R[3],0;B
Mat Write #3,R[3],12;B1
Mat Write #3,R[3],18;B2
Mat Write #3,R[3],24;B3
Mat Write #3,R[3],32;B8 \ Mat Write #3,R[3],34;C0;
Write #3,R[3],38;INVNO;
Search #3,4,1;K$,R[3],E \ If E error 11000
UPDATE_AR: If TRACK[0] > 0 Goto L_1230
B4[0] = R[3] \ B4[1] = H0[4]
B4[3] = 0
If Not(T2) Goto END_AR
B5 = 0 \ B6 = G1[0] \ B6[1] = T2[0] \ B9 = T2[0]
Gosub L_5000
END_AR: TRACK[0] = TRACK[0] + 1 \ Write #80,0,0;TRACK[0];
L_1230: If TRACK[0] > 1 Goto L_1250
If Not(T2[3]) Goto END_DISC
B5 = 1 \ B6 = G1[1] \ B6[1] = T2[3] \ B9 = T2[3]
Gosub L_5000
END_DISC: TRACK[0] = TRACK[0] + 1 \ Write #80,0,0;TRACK[0];
L_1250: If TRACK[0] > 2 Goto L_1270
If Not(T2[6]) Goto END_HAND
B5 = 2 \ B6 = G1[2] \ B6[1] = - T2[6] \ B9 = - T2[6]
Gosub L_5000
END_HAND: TRACK[0] = TRACK[0] + 1 \ Write #80,0,0;TRACK[0];
L_1270: If TRACK[0] > 3 Goto UPDATE_SALESTAX
For X = 0 To 9
  If MCHARGE[X,0]
		Mat Read #7,MCODE[X],44;B6[0]; !\ If Not(B6) Let B6 = G1[3]
		IF NOT (B6) ! MISC CHARGE CODE DOES NOT HAVE A G/L #
			IF INT(FRA(MCODE[x]*10)*10)=9 !  sys calculated delivery charge
				LET B6=G1[6]
			ELSE
				LET FMCODE=0
				If H5[7]=2 ! DIRECTS
					READ #1,171,242;FMCODE;
				ELSE
					IF H5[7]<>16 ! do not include transfers
						read #1,172,242;fmcode;
					endif
				endif
				if fmcode<>0 and fmcode=int(mcode[x]) let b6=g1[6]
			endif
		endif
		IF NOT(B6)
			LET B6=G1[3]
		ENDIF
    B5 = 7 \ B9 = - (MCHARGE[X,0]) \ B6[1] = B9
    Gosub L_5000
  End If 
Next X
TRACK[0] = TRACK[0] + 1 \ Write #80,0,0;TRACK[0];
UPDATE_SALESTAX: If TRACK[0] > 4 Goto L_1385
A4 = 0
If (Not(T2[7]) And P60$[42,42] <> "Y") Goto END_SALESTAX
If P60$[42,42] = "Y" And TOT[3] = 0 Goto END_SALESTAX
R[13] = H4[0]
Mat Read #13,R[13],60;A4;
If Not(A4) Let A4 = G1[4]
B5 = 4 \ B6 = A4
If P60$[42,42] <> "Y"
  B9 = - (T2[7])
  B6[1] = - (T2[7])
Else 
  B9 = - (TOT[3]) \ B6[1] = - (TOT[3])
End If 
Gosub L_5000
END_SALESTAX: TRACK[0] = TRACK[0] + 1 \ Write #80,0,0;TRACK[0];
L_1385: If TRACK[0] > 5 Goto L_1405
If Not(T2[5]) Goto END_FREIGHT
B5 = 5 \ B6 = G1[5] \ B6[1] = - T2[5] \ B9 = - T2[5]
Gosub L_5000
END_FREIGHT: TRACK[0] = TRACK[0] + 1 \ Write #80,0,0;TRACK[0];
L_1405: Rem UPDATE FREIGHT COST
Goto L_1430
If Not(T2[20]) Goto L_1430
B5 = 6 \ B6 = G1[6] \ B6[1] = T2[20] \ B9 = T2[20]
Gosub L_5000
L_1430: Rem UPDATE PREPAID FREIGHT
Goto L_1455
If Not(T2[19]) Goto L_1455
B5 = 7 \ B6 = G1[7] \ B6[1] = - T2[19] \ B9 = - T2[19]
Gosub L_5000
L_1455: Rem UPDATE CASH
Goto L_1480
If Not(T2[12] + T2[13]) Goto L_1480
B5 = 8 \ B6 = G1[8] \ B6[1] = (T2[12] + T2[13]) \ B9 = (T2[12] + T2[13])
Gosub L_5000
L_1480: Goto L_2000
L_2000: Rem LINE ITEM
A$ = " ",A$ \ A$[1,6] = N0 Using "######"
If RESTART If LINENUM Let A$[7,9] = LINENUM - 1 Using "###"
A1$ = A$
L_2010: Search #11,3,1;A$,R[11],E \ If E If E <> 2 error 11000
If E = 2 Or A$[1,6] <> A1$[1,6]
  If P9$[17,17] = "Y" Mat Write #25,R[25],498;TOTGL;
  If H5[7]=19 And OT19Part Gosub Updt_OT19Head
  Goto L_1000
End If 
If (H5[7] = 21 Or H5[7] = 22) And A$[7,9] = "   " Goto L_2010
LINENUM = A$[7,9] \ Write #80,0,8;LINENUM;
A1$ = A$
Mat Read #11,R[11],256;S2;
Mat Read #11,R[11],8;L3;
If L3[2] > 900 Goto L_2010
Mat Read #11,R[11],16;L4;
Mat Read #11,R[11],32;L5;
Mat Read #11,R[11],56;L6;
Mat Read #11,R[11],140;L2$;
Mat Read #11,R[11],168;L7;
Mat Read #11,R[11],250;UN;
Mat Read #11,R[11],260;S3; \ Mat Read #11,R[11],404;OLM;
Mat Read #11,R[11],452;UNF;
Mat Read #11,R[11],508;LTAX1;
If S2[0] = 3 Goto L_2160
LWHSE = L4[3] \ If LWHSE < 1 Or LWHSE > 99 Let LWHSE = HWHSE
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1]
OLM[3] = OLM[3] - S3[15]
KITFLAG = 0
If L3[0] Goto L_2115
If P9$[22,22] = "Y" And L2$[14,16] = "KIT" And L7[4] <> 0 And L3[0] = 0 And S2[0] = 0 Goto L_4000
R[14] = L4[0] \ Gosub L_6300
Gosub L_6200 \ If P9$[32,32] = "Y" Gosub L_69000
L_2115: If P9$[17,17] = "Y" Gosub L_7700
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_2150
If L3[1] = 0 Goto L_2150
If L3[0] = 1 Goto L_2150
If TRACK[1] > 0 Goto L_2150
If L7[4] < 0 Gosub L_10000
Gosub L_5400
If P8$[5,5] = "I" Let GLCOST = FCOST
If P8$[5,5] = "F" Let GLCOST = FCOST
If H5[7]=19 And Not(OT19Part) Let GLCOST=L7[10] ! "from prev ships
TRACK[1] = TRACK[1] + 1 \ Write #80,0,2;TRACK[1];
L_2150: If P9$[17,17] <> "Y" Goto LNDone: ! was L_2010
WHSE = LWHSE
Gosub L_6900
L_2160: If S2[0] <> 3 Let L7[10] = GLCOST Else Let L7[10] = 0
Write #11,R[11],228;L7[10];
K18$ = " ",K18$
K18$[1,10] = OREF[1] Using "##########";K18$[11,13] = L3[2] Using "###"
Search #18,2,1;K18$,R[18],E \ If E Goto L_2176
If S2[0] <> 3
  L7[10] = GLCOST
  TOTGL = TOTGL + GLCOST
Else 
  L7[10] = 0
End If 
Write #18,R[18],228;L7[10];
! CHECK HERE
IF L7[7]<>0
	IF L7[10]=0 ! no extended g/l cost
		LET L7[7]=0
		WRITE #18,R[18],210;L7[7];
	ELSE
		IF L3[1]=1 ! STOCK UPDATE is set to Y 
			LET L7[7]=0
			WRITE #18,R[18],210;L7[7];
		ENDIF
	ENDIF
ENDIF
L_2176: If S2[0] = 3 Goto L_2010
If TRACK[1] < 2 If H5[7] <> 8 And H5[7] <> 16 Gosub L_8000
If TRACK[1] < 2 Let TRACK[1] = TRACK[1] + 1 \ Write #80,0,2;TRACK[1];
If L3[3] <= 1 Let L3[3] = 1
If L3[3] > 20 Let L3[3] = 20
B4[3] = L3[3] \ B6 = 0
If P8$[3,3] <> "Y" Let B4[3] = 0
Gosub L_2250
!If H5[7] <> 8 And H5[7] <> 16 Let TRACK[1] = 0;RESTART = 0
!Write #80,0,2;TRACK[1];
If H5[7] <> 8 And H5[7] <> 16 Goto LNDONE: ! was L_2010
XFER = 99
WHSE = LWHSE \ WHSE = H5[11] \ Gosub L_6900
GLCOST = - GLCOST
Gosub L_2300
WHSE = LWHSE
XFER = 0
LnDone: ! "line item done HERE instead of L_2010:!!
If H5[7]=19 and OT19Part Gosub Updt_OT19Line:
TRACK[1] = 0 \ Write #80,0,2;TRACK[1]; \ RESTART = 0
Goto L_2010
L_2250: Rem UPDATE SALES TAX BY LINE ITEM
If TRACK[1] > 2 Goto L_2300
If H5[7]=19 And OT19Part Goto End_sales: ! "not on parts - wait until final
If P60$[42,42] <> "Y" Goto END_TAXBYLINE
If Not(LTAX1) Goto END_TAXBYLINE
A4 = 0 \ R[13] = L6[5] \ B0 = L6[5] \ B5 = 9
Mat Read #13,R[13],60;A4; \ If Not(A4) Let A4 = G1[4]
B6 = A4
B9 = - LTAX1 \ B6[1] = - LTAX1
Gosub L_5000
END_TAXBYLINE: TRACK[1] = TRACK[1] + 1 \ Write #80,0,2;TRACK[1];
L_2300: Rem UPDATE SALES
If XFER If TRACK[1] > 6 Goto L_2400
If Not(XFER) If TRACK[1] > 3 Goto L_2400
If H5[7]=19 And OT19Part Goto End_sales: ! "not on parts - wait until final
If Not(L5[3]) Goto END_SALES
B5 = 10 \ B6 = G2[B4[3]]
B9 = - L5[3]
B6[1] = - L5[3]
Gosub L_5000
END_SALES: TRACK[1] = TRACK[1] + 1 \ Write #80,0,2;TRACK[1];
L_2400: Rem UPDATE COST OF SALES
if l2$[17,20]=HGLCOMM$[1,4] and h5[7]=1 and L3[1]<>0 ! HELD STOCK COMMODITY CODE, ORDER TYPE 1, UPDATE STOCK=Y
	if hglwhse<>0
		let whse=hglwhse
		GOSUB L_6900: ! READ GLARCNTRL
	endif
endif

If XFER If TRACK[1] > 7 Goto L_2500
If Not(XFER) If TRACK[1] > 4 Goto L_2500
If H5[7] = 8 Or H5[7] = 16 Goto END_COGS
If Not(GLCOST) Goto END_COGS
B9 = GLCOST
If Not(B9) Goto END_COGS
B5 = 12 \ B6 = G5[B4[3]]
If H5[7]=19 And OT19Part Let B6=M2[B4[3]] ! "to cogs accrual
IF P8$[4,4]="Y" and H5[7]=1 and l3[0]=0 and l3[1]=0 and pgmlit<>0 ! updt ns=Y, ot=1whs, stkupdt=N,nsitem=N, millitem=Y
		let hordtype=h5[7]
		let h5[7]=2 ! mill item treat as direct
		gosub L_6900:
		let b6=g5[b4[3]]
		let h5[7]=1
		gosub L_6900:
endif
B6[1] = GLCOST
B9 = B6[1]
Gosub L_5000
END_COGS: TRACK[1] = TRACK[1] + 1 \ Write #80,0,2;TRACK[1];
L_2500: Rem UPDATE INVENTORY
If XFER If TRACK[1] > 8 Goto L_2605
If Not(XFER) If TRACK[1] > 5 Goto L_2605
If Not(GLCOST) Goto END_INV
If H5[7] <> 7 Goto L_2525
WHSE = LWHSE \ WHSE = H5[11] \ Gosub L_6900
WHSE = LWHSE
L_2525: B5 = 13 \ B6 = G4[B4[3]] \ B6[1] = GLCOST * (-1)
B9 = B6[1]
If Not(B6[1]) Goto END_INV
If P9$[2,2] <> "M" Goto L_2600
If L2$[17,20] = "LABR" Let B6 = G8[B4[3]] \ B5 = 15 \ Goto L_2600
If L2$[17,20] = "TIME" Let B6 = G9[B4[3]] \ B5 = 16 \ Goto L_2600
If L2$[17,20] = "MACH" Let B6 = G0[B4[3]] \ B5 = 17 \ Goto L_2600
If L3[0] = 1 Goto L_2600
If L3[1] = 0 Goto L_2600
K4$ = " ",K4$ \ K4$[1,16] = L2$[1,16]
Search #14,2,1;K4$,R[14],E \ If E = 1 Goto L_2600
If E error 11000
Mat Read #14,R[14],0;A9$;
If A9$[139,139] = "B" Let B5 = 14 \ B6 = M0[B4[3]]
If A9$[139,139] = "M" Let B5 = 13 \ B6 = G4[B4[3]]
!L_2600: Gosub L_5000
L_2600: ! "
If H5[7]=19 And Not(Ot19Part) Let B6=M2[b4[3]] ! "from cogs accrual
IF P8$[4,4]="Y" and H5[7]=1 and l3[0]=0 and l3[1]=0 and pgmlit<>0
	let hordtype=h5[7]
	let h5[7]=2 ! mill item treat as direct
	gosub L_6900:
	let b6=g4[b4[3]]
	let h5[7]=1
	gosub L_6900:
endif
GOSUB L_5000: ! "update armol
END_INV: TRACK[1] = TRACK[1] + 1 \ Write #80,0,2;TRACK[1];
L_2605: Return 
L_4000: Rem kits
KITCOST = 0 \ KITFLAG = 99
K24$ = " ",K24$ \ K24$[1,9] = A$[1,9]
L_4015: Search #24,3,1;K24$,R[24],E \ If E = 2 Goto L_4110
If E error 11000
If A$[1,9] <> K24$[1,9] Goto L_4110
Mat Read #24,R[24],0;KL$; \ If KL$[1,12] <> L2$[1,12] Goto L_4015
Mat Read #24,R[24],58;KL1; \ Mat Read #24,R[24],70;KL2;
Mat Read #24,R[24],78;KL3;
If Not(KL1[3])
  K14$ = KL$[13,24] \ Search #14,2,1;K14$,R[14],E \ If E error 11000
  WHSE = LWHSE
  Gosub L_6300 \ Gosub L_6200 \ If P9$[32,32] = "Y" Gosub L_6900
  If A9$[152,155] = "MACH" Or A9$[152,155] = "TIME" Or A9$[152,155] = "LABR" Let KL1[3] = 1 \ Goto L_4085
  If P9$[17,17] = "Y" Gosub L_7700
  If P60$[9,9] = "F" Or P60$[9,9] = "L"
    Gosub L_5400
    If FCOST > 0 And (P8$[5,5] = "F" Or P8$[5,5] = "I") Let GLCOST = FCOST
  End If 
Else 
L_4085: GLCOST = 0
  If P8$[4,4] = "Y" Let GLCOST = (KL3[0] * KL3[1])
End If 
KITCOST = KITCOST + GLCOST
Goto L_4015
L_4110: Rem END OF KIT
GLCOST = FNR(KITCOST)
If P9$[17,17] = "Y" And GLCOST = 0 Let GLCOST = FNR(L5[1])
If Not(GLCOST) Let GLCOST = FNR(L5[1])
Goto L_2150
L_5000: Rem UPDATE ARMOL
K2$ = " ",K2$ \ K2$[1,6] = R[3] Using "######"
K2$[7,8] = B4[3] Using "##"
If P60$[42,42] = "Y" Let K2$[9,12] = B0 Using "####"
K2$[13,14] = B5 Using "##" \ K2$[15,22] = B6 Using "########"
Search #4,2,1;K2$,R[4],E \ If E = 1 Goto L_5050
If E error 11000
Mat Read #4,R[4],18;B6
B6[1] = B6[1] + B9
Mat Write #4,R[4],18;B6;
Goto L_5100
L_5050: E = 2 \ Search #4,1,0;K2$,R[4],E
If E error 11000
Mat Write #4,R[4],0;B4
Mat Write #4,R[4],16;B5
Mat Write #4,R[4],18;B6 \ Mat Write #4,R[4],30;B0;
Write #4,R[4],32;INVNO;
Search #4,4,1;K2$,R[4],E
If E error 11000
L_5100: Rem UPDATE ARMOA
If Not(B9) Return 
K3$ = " ",K3$ \ K3$[1,4] = CLIENT Using "####" \ K3$[5,12] = B6 Using "########"
Search #5,2,1;K3$,R[5],E
If E = 1 Goto L_5150
If E error 11000
Mat Read #5,R[5],0;B7; \ Mat Read #5,R[5],24;A0
B7[1] = B7[1] + B9
Mat Write #5,R[5],0;B7 \ Mat Write #5,R[5],24;A0;
Goto L_5200
L_5150: E = 2 \ Search #5,1,0;K3$,R[5],E
If E error 11000
B7 = B6 \ B7[1] = B9 \ B7[2] = 0 \ B7[3] = 0 \ A0 = CLIENT
Mat Write #5,R[5],0;B7 \ Mat Write #5,R[5],24;A0;
Search #5,4,1;K3$,R[5],E
If E error 11000
L_5200: Rem UPDATE GLARTEMP
K3$ = " ",K3$ \ K3$[1,4] = CLIENT Using "####"
K3$[5,12] = B6 Using "########" \ K3$[13,18] = JRNL Using "######"
Search #2,2,1;K3$,R[2],E \ If E > 1 error 11000
If E = 1
  A9 = B6 \ A9[1] = 0 \ C8[0] = JRNL \ C8[1] = CLIENT
  E = 2 \ Search #2,1,0;K3$,R[2],E \ If E error 11000
  Mat Write #2,R[2],0;A9
  Mat Write #2,R[2],12;C8;
  Search #2,4,1;K3$,R[2],E \ If E error 11000
End If 
Mat Read #2,R[2],0;A9; \ Mat Read #2,R[2],12;C8
A9[1] = A9[1] + B9
Mat Write #2,R[2],0;A9 \ Mat Write #2,R[2],12;C8;
Gosub UPGLDET
B9 = 0
Return 
UPGLDET: Rem up gl detail file
For X9 = 0 To 6 \ GLD[X9] = 0 \ Next X9
GLD$ = " ",GLD$;GLD1$ = " ",GLD1$;GLD2$ = " ",GLD2$
GLD1 = 0;GLD2[0] = 0;GLD2[1] = 0
GLD[0] = CLIENT
GLD[1] = POSTPER
GLD[2] = H0[4]
GLD[4] = H0[8]
GLD[5] = D8
GLD[6] = JRNL
GLD$[1,9] = B6 Using "#########"
GLD1$[1,30] = CUSTNAME$[1,30]
GLD2$ = " S"
GLD2[0] = 227
GLD2[1] = 30
GLDKEY1$ = " ",GLDKEY1$
GLDKEY1$[1,4] = GLD[1] Using "&&&&"
GLDKEY1$[5,16] = GLD$[1,12]
GLDKEY1$[17,22] = GLD[6] Using "######"
GLDKEY1$[23,32] = INVNO Using "##########"
GLDKEY1$[33,38] = GLD[2] Using "######"
GLDKEY1$[39,40] = GLD2[1] Using "##"
Search #55,2,1;GLDKEY1$,REC_GLD,E \ If E > 1 error 11000
If E = 1
  E = 2 \ Search #55,1,0;GLDKEY1$,REC_GLD,E \ If E error 11000
  Mat Write #55,REC_GLD,0;GLD;
  Mat Write #55,REC_GLD,40;GLD$;
  Mat Write #55,REC_GLD,52;GLD1$;
  Mat Write #55,REC_GLD,82;GLD2$;
  Mat Write #55,REC_GLD,84;GLD1;
  Mat Write #55,REC_GLD,92;GLD2;
  Write #55,REC_GLD,96;INVNO;
  Search #55,4,1;GLDKEY1$,REC_GLD,E \ If E error 11000
  GLDKEY2$ = " ",GLDKEY2$
  GLDKEY2$[1,6] = GLD[2] Using "######"
  GLDKEY2$[7,16] = INVNO Using "##########"
  GLDKEY2$[17,18] = GLD2[1] Using "##"
  GLDKEY2$[19,30] = GLD$[1,12]
  GLDKEY2$[31,34] = GLD[1] Using "&&&&"
  GLDKEY2$[35,40] = GLD[6] Using "######"
  Search #55,4,2;GLDKEY2$,REC_GLD,E \ If E error 11000
End If 
Mat Read #55,REC_GLD,84;GLD1
GLD1 = GLD1 + B9
Mat Write #55,REC_GLD,84;GLD1;
Return 
L_5400: Rem UPDATE FIFOLOT & FIFOTRAS
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Return 
FCOST = 0
If H5[7]=19 And Not(OT19Part) ! "master final invoice
	Let FCOST=L7[10] ! "use what have
	Return ! "fifo updated previously on partials
Endif
If H5[7] = 15 And H0[5] <> 0 Return 
QTY = - L7[4];WHSE = LWHSE
If H5[7] = 7 Let WHSE = H5[11]
If H5[7] = 15 Let QTY = - L7[2]
If KITFLAG Let QTY = - KL3[1] \ If Not(KL3[1]) Return 
If A9$[127,127] = "Y" And P61$[73,73] = "Y"
  If Not(S3[4]) Return 
Else 
  If Not(QTY) Return 
End If 
For CTR = 0 To 16
  If CTR < 11 Let FIFOSPECCH[CTR] = 0;FIFOSPEC1[CTR] = 0;FIFOSPEC2[CTR] = 0
  FIFOSPEC3[CTR] = 0
Next CTR
Rem set fifo spec variable for channel #
FIFOSPEC$ = " ",FIFOSPEC$
FIFOSPECCH[0] = 19
FIFOSPECCH[1] = 20
FIFOSPECCH[2] = 29
FIFOSPECCH[3] = 23
FIFOSPECCH[4] = 14
FIFOSPECCH[5] = 17
FIFOSPECCH[6] = 30
Rem set fifospec 1 variables
FIFOSPEC1[0] = 227
FIFOSPEC1[1] = WHSE
FIFOSPEC1[2] = WHSE
FIFOSPEC1[3] = H5[11]
FIFOSPEC1[4] = H5[7]
Rem set fifospec 2 variables
FIFOSPEC2[0] = JARDATE
FIFOSPEC2[1] = POSTPER
Rem set fifospec 3 variables
FIFOSPEC3[0] = QTY
FIFOSPEC3[1] = OREF[1]
FIFOSPEC3[2] = H0[4]
FIFOSPEC3[3] = 0
FIFOSPEC3[4] = L6[4]
FIFOSPEC3[5] = UNF[5]
FIFOSPEC3[6] = QTY
FIFOSPEC3[7] = S3[4] * (Sgn(QTY))
FIFOSPEC3[8] = 0
FIFOSPEC3[9] = 0
Rem set fifospec$ variable
FIFOSPEC$ = " ",FIFOSPEC$
FIFOSPEC$[1,12] = A9$[140,151]
Rem let fifospec$[13,24]= lot code
Rem let fifospec$[25,34]= serial #
Rem let fifospec$[35,40]= location
If A9$[127,127] = "Y" And P61$[73,73] = "Y"
  If Not(S3[4]) Return 
  FIFOSPEC3[0] = S3[4] * (Sgn(QTY))
End If 
Call "MXFIFO.dl4",FIFOSPECCH[],FIFOSPEC1[],FIFOSPEC2[],FIFOSPEC3[],FIFOSPEC$,E$,IntCo,rstr$
FCOST = (FIFOSPEC3[8] * (-1))
If P61$[60,60] = "Y" Let FCOST = (FIFOSPEC3[9] * (-1))
Return 
FQ9[0] = Int(QTY) \ FQ9[1] = 0 \ FQ9[2] = 0
L_5427: FQ9[2] = FQ9[0] - FQ9[1]
FICOST = 0 \ FICOST[1] = 0 \ WDATE = 0 \ FI4[0] = 0;FI4[1] = 0
Gosub L_5500
FQ9[1] = Int(FQ9[1] + FQ9[2])
FICOST = FL3[6];FICOST[1] = FL3[14]
FI4[0] = FL4[0];FI4[1] = FL4[1]
If P61$[60,60] = "Y" And FL3[14] <> 0
  FCOST = FCOST + (FNR(FQ9[2] * FL3[14]) * (-1))
Else 
  If P8$[5,5] = "I" Let FCOST = FCOST + (FNR(FQ9[2] * FL3[7]) * (-1))
  If P8$[5,5] = "F" Let FCOST = FCOST + (FNR(FQ9[2] * FL3[6]) * (-1))
End If 
If (H5[7] <> 8 And H5[7] <> 16) Goto L_5490
AQTY = - FQ9[2] \ FQ9[2] = - FQ9[2]
WHSE = H5[11] \ WDATE = FL2[1]
L_5455: Gosub L_5500
AQTY = AQTY - FQ9[2] \ If Not(AQTY) Goto L_5470
FQ9[2] = AQTY \ Goto L_5455
L_5470: WHSE = LWHSE
L_5490: If FQ9[0] <> FQ9[1] Goto L_5427
Return 
L_5500: Rem UPDATE FIFOLOT & FIFOTRANS
FLK$ = " ",FLK$ \ FLK$[1,12] = A9$[140,151] \ FLK$[13,14] = WHSE Using "##" \ MODE = 3
If P60$[9,9] = "L" Let FLK$[15] = "999999" \ MODE = 6
L_5510: Search #19,MODE,1;FLK$,R[19],E \ If E = 2 Goto L_5700
If E error 11000
If FLK$[1,12] <> A9$[140,151] Goto L_5700
S9 = FLK$[13,14] \ If S9 <> WHSE Goto L_5700
Mat Read #19,R[19],102;FL3; \ If Not(FL3 - FL3[1]) Goto L_5510
If FQ9[2] > 0 If (FL3[0] - FL3[1]) < 0 Goto L_5590
If FL3[3] <= 0 Let FL3[3] = 0 \ Goto L_5555
If FL3[3] <= Abs(FQ9[2]) Let FL3[3] = 0 \ Goto L_5555
FL3[3] = FL3[3] - Abs(FQ9[2]) \ If FL3[3] < 0 Let FL3[3] = 0
L_5555: FQTY = FL3[0]
For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
If FQ9[2] < 0 If FQTY > 0 Goto L_5590
If FQ9[2] >= 0 Goto L_5510
If FL3[0] Goto L_5510
Mat Read #19,R[19],86;FL2;
If JARDATE = FL2[1] Goto L_5590
Goto L_5510
L_5590: Gosub L_6000
If FQ9[2] < 0 Goto L_5615
If (FL3[1] - FL3[0]) > 0 If (FL3[1] - FL3[0]) < FQ9[2] Let FQ9[2] = (FL3[1] - FL3[0])
FL3[0] = Int(FL3[0] + FQ9[2])
Goto L_5650
L_5615: If FQ9[2] > 0 Goto L_5650
If FL3[3] <= 0 Let FL3[3] = 0 \ Goto L_5635
FQTY = FL3[0]
For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
FL3[3] = FL3[3] - Abs(FQ9[2]) \ If FL3[3] < 0 Let FL3[3] = 0
L_5635: FQTY = FL3[0]
For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
If FL3[0] If FQTY < Abs(FQ9[2]) Let FQ9[2] = - (FQTY)
FL3[1] = Int(FL3[1] - FQ9[2])
L_5650: FL2[2] = JARDATE
If FICOST[1] > 0 Let FL3[14] = FICOST[1]
If FICOST[0] > 0
  FL4[0] = FI4[0];FL4[1] = FI4[1]
  FL3[6] = FICOST[0] \ Goto L_5675
End If 
If FL3[6] Goto L_5675
L_5675: FL3[7] = FL3[6] + ((FL3[6] * FIFL) / 100)
L_5680: Gosub L_6050
Gosub L_6400
Gosub L_5900
Return 
L_5700: Rem CREATE FIFOLOT
FL1$ = " ",FL1$
For S9 = 0 To 14
  If S9 < 3 Let FL1[S9] = 0
  If S9 < 3 Let FL2[S9] = 0
  If S9 < 2 Let FL4[S9] = 0
  FL3[S9] = 0
Next S9
FL1[0] = WHSE \ FL1[1] = 16
If H5[7] = 8 And FQ9[2] > 0 Let FL1[1] = 8
If H5[7] = 16 And FQ9[2] > 0 Let FL1[1] = 10
If H5[7] = 16 And FQ9[2] <= 0 Let FL1[1] = 28
If H5[7] = 8 And FQ9[2] < 0 Let FL1[1] = 22
If H5[7] = 6 Or H5[7] = 10 Let FL1[1] = 26
FL1[2] = PFU1[0]
FL1$[1,12] = A9$[140,151]
FL1$[41,50] = OREF[1] Using "I ########" \ FL1$[50,60] = H0[4] Using "CUST ######"
FL2[1] = JARDATE
If H5[7] = 16 And WDATE <> 0 And FQ9[2] > 0 Let FL2[1] = WDATE
If FQ9[2] > 0 Let FL3[0] = Int(FQ9[2])
If FQ9[2] < 0 Let FL3[1] = Int(Abs(FQ9[2]))
If FICOST
  FL3[6] = FICOST
  FL4[0] = FI4[0];FL4[1] = FI4[1]
End If 
If FICOST[1] Let FL3[14] = FICOST[1]
If FL3[6] Goto L_5845
If H5[7] = 8 Or H5[7] = 16 Goto L_5845
FLK$[1,12] = A9$[140,151] \ FLK$[13,14] = FL1[0] Using "##" \ FLK$[15] = "999999" \ MODE = 6
If P60$[9,9] = "L" Let FLK$[15] = "" \ MODE = 3
Search #19,MODE,1;FLK$,R[19],E \ If E = 2 Goto L_5835
If E error 11000
S9 = FLK$[13,14]
If FLK$[1,12] = A9$[140,151] And S9 = FL1[0]
  Mat Read #19,R[19],192;FL4;
  Read #19,R[19],186;FL3[14];
  Read #19,R[19],138;FL3[6]; \ Goto L_5845
End If 
L_5835: Rem no lots to get cost from
If P61$[60,60] = "Y"
  R[23] = FL1[0] - 1 \ If R[23] < 0 Goto GETWHSECOST
  If R[23] > 99 Goto GETWHSECOST
  Read #23,R[23],2970;WHOS;
  If Not(WHOS) Goto GETWHSECOST
  FSKEY$ = " ",FSKEY$;FSKEY$[1,12] = A9$[140,151]
  FSKEY$[13,16] = WHOS Using "####"
  Search #29,2,1;FSKEY$,R[29],E \ If E > 1 error 11000
  If E Goto GETWHSECOST
  Mat Read #29,R[29],38;FC2;
  FL3[14] = FC2[0]
End If 
GETWHSECOST: Rem get cost
If P9$[32,32] = "Y" And W3[16] <> 0 Let FL3[6] = W3[16] \ Goto L_5845
FL3[6] = C1[10]
L_5845: FL3[7] = FL3[6] + ((FL3[6] * FIFL) / 100)
FLK$ = " ",FLK$
E = 2 \ Search #19,1,0;FLK$,R[19],E \ If E error 11000
FL2 = R[19]
Gosub L_6050
Gosub L_6400
FLK$ = " ",FLK$ \ FLK$[1,12] = FL1$[1,12] \ FLK$[13,14] = FL1 Using "##"
FLK$[15,20] = FL2[1] Using "######" \ FLK$[21,26] = FL2 Using "######"
Search #19,4,1;FLK$,R[19],E \ If E error 11000
Gosub L_5900
Return 
L_5900: Rem FIFOTRANS FILE UPDATE
For S9 = 0 To 3 \ FT1[S9] = 0 \ FT2[S9] = 0 \ FT3[S9] = 0 \ Next S9
FT1$ = " ",FT1$ \ FT1$[1,12] = A9$[140,151]
FT1$[41,50] = OREF[1] Using "I ########"
FT1$[53,63] = H0[4] Using "CUST ######"
FT1[0] = 16 \ If H5[7] = 8 And FQ9[2] > 0 Let FT1[0] = 8
If H5[7] = 16 And FQ9[2] > 0 Let FT1[0] = 10
If H5[7] = 8 And FQ9[2] < 0 Let FT1[0] = 22
If H5[7] = 6 Or H5[7] = 10 Let FT1[0] = 26
If H5[7] = 16 And FQ9[2] < 0 Let FT1[0] = 28
FT1[1] = WHSE
FT1[2] = Spc(6) \ FT2[0] = FL2[0]
FT2[2] = JARDATE \ FT3[0] = FQ9[2]
FT3[1] = FL3[6] \ FT3[2] = FL3[7] \ FT3[3] = FL3[14]
FLT$ = " ",FLT$
E = 2 \ Search #20,1,0;FLT$,R[20],E \ If E error 11000
If R[20] <= 999999 Let FT2[1] = R[20]
Gosub L_6100
FLT$[1,6] = FT2[0] Using "######" \ FLT$[7,12] = FT2[2] Using "######"
If R[20] <= 999999
  FLT$[13,18] = FT2[1] Using "######"
Else 
  FTRECA = Int((R[20] - 1000000) / 100000)
  FTRECB = Fra(R[20] / 100000) * 100000
  Call String(4,FTRECA + 193,LETTER$)
  FLT$[13,13] = LETTER$[1,1]
  FLT$[14,18] = FTRECB Using "#####"
End If 
Search #20,4,1;FLT$,R[20],E \ If E error 11000
Return 
L_6000: Rem READ FIFOLOT
Mat Read #19,R[19],0;FL1
Mat Read #19,R[19],6;FL1$
Mat Read #19,R[19],86;FL2
Mat Read #19,R[19],102;FL3
Mat Read #19,R[19],192;FL4
Return 
L_6050: Rem WRITE FIFOLOT
Mat Write #19,R[19],0;FL1
Mat Write #19,R[19],6;FL1$
Mat Write #19,R[19],86;FL2
Mat Write #19,R[19],102;FL3;
Mat Write #19,R[19],192;FL4;
Return 
L_6100: Rem WRITE FIFOTRANS
Mat Write #20,R[20],0;FT1$;
Mat Write #20,R[20],72;FT1;
Mat Write #20,R[20],80;FT2;
Mat Write #20,R[20],96;FT3;
Return 
L_6200: Rem PRODWHSE FILE
For S9 = 14 To 24 \ W3[S9] = 0 \ Next S9
K9$ = " ",K9$ \ K9$[1,12] = A9$[140,151]
K9$[13,14] = WHSE Using "##"
Search #17,2,1;K9$,R[17],E \ If E = 1 Goto L_6240
If E error 11000
Mat Read #17,R[17],38;W2;
Mat Read #17,R[17],78;W3;
Mat Read #17,R[17],384;WHPARC;
Mat Read #17,R[17],800;WHMISC;
L_6240: Rem.
Return 
L_6300: Rem PRODUCT FILE
Mat Read #14,R[14],0;A9$;
Mat Read #14,R[14],0;A9$;
Mat Read #14,R[14],156;C1;
Mat Read #14,R[14],256;A;
Mat Read #14,R[14],894;C4;
Mat Read #14,R[14],512;PFU1;
Mat Read #14,R[14],596;PRPARC;
Read #14,R[14],938;PF_LOAD2;
Return 
L_6400: Rem INSERT KEY INTO FIFOLOT
Search #30,2,1;FLK$,R[30],E \ If Not(E) Goto L_6425
If E > 1 error 11000
R[30] = R[19]
Search #30,4,1;FLK$,R[30],E \ If E error 11000
L_6425: Return 
L_6900: Rem GLARCNTRL
If P8$[2,2] = "N" Goto L_6940
K4$ = " ",K4$ \ K4$[1,2] = WHSE Using "##"
If P8$[1,1] = "Y" Let K4$[3,4] = H5[8] Using "##"
K4$[5,6] = H5[7] Using "##"
Search #6,2,1;K4$,R[6],E \ If E Goto L_6940
Goto L_7000
L_6940: If P8$[1,1] = "N" Goto L_6965
K4$ = " ",K4$ \ K4$[1,2] = WHSE Using "##"
K4$[3,4] = H5[8] Using "##"
Search #6,2,1;K4$,R[6],E \ If E Goto L_6965
Goto L_7000
L_6965: K4$ = " ",K4$ \ K4$[1,2] = WHSE Using "##"
Search #6,2,1;K4$,R[6],E \ If E Goto L_6985
Goto L_7000
L_6985: ! get default
if whse=HGLWHSE and l2$[17,20]=HGLCOMM$[1,4]
	return ! use what already is on file
endif
K4$ = "DFAULT" \ Search #6,2,1;K4$,R[6],E \ If E error 11000
Goto L_7000
L_7000: Rem READ GLARCNTRL
Mat Read #6,R[6],0;G;
Mat Read #6,R[6],8;G1;
Mat Read #6,R[6],80;G2;
Mat Read #6,R[6],206;G3;
Mat Read #6,R[6],332;G4;
Mat Read #6,R[6],458;G5;
Mat Read #6,R[6],584;G6;
Mat Read #6,R[6],710;G7;
Mat Read #6,R[6],836;G8;
Mat Read #6,R[6],962;G9;
Mat Read #6,R[6],1088;G0;
Mat Read #6,R[6],1214;M0;
Mat Read #6,R[6],1340;M1;
mat  read #6,r[6],1466;M2;
Return 
L_7700: Rem GET GENERAL LEDGER COST
If H5[7]=19 And Not(OT19Part) ! "final bill
	Let GLCOST=L7[10] ! "retain previous calcs / shipments
	Return
Endif
P5 = 0 \ GLCOST = 0
let pgmlit=0
If P9$[17,17] <> "Y" Return 
if usglflag<>0 ! if custom_customer$="PCS" or custom_customer$="WHITERIVER" ARDS3455
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" !P&C#87846,92363
		IF L3[0]=0  ! nonstock item
			GOTO L_7720 
		ELSE 
			GOTO L_7825 !P&C #87846,92363 ! default gl cost to load cost
		endif
	ENDIF  !P&C#87846,92363
Endif
if l3[1]=0 ! stock update is No
  if usglflag<>0 ! if custom_customer$="PCS" ARDS3455
	if l2$[17,20]="LABR" OR l2$[17,20]="MACH" RETURN ! removed OR l2$[17,20]="TIME" pcs
  Else
	If L2$[17,20] = "LABR" Or L2$[17,20] = "MACH" Or L2$[17,20] = "TIME" Return 
  Endif
endif
If L3[0]<>0 Goto L_7795 ! non-stock
If L3[1] = 0 Goto L_7795
L_7720: If (H5[7] = 8 Or H5[7] = 16) Goto L_7730
L_7725: Rem IF L3[1]=0 AND L5[1]=0 GOTO L_7815: ! RTS=NO & COST IS 0 ASSUME PRICE ADJ
L_7730: P5 = 0 \ If P9$[32,32] <> "Y" Goto L_7765
if usglflag<>0  !if custom_customer$="PCS" ARDS3455 WHITERIVER
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" !whit#130603
		IF CUSTOM_CUSTOMER$="WHITERIVER" !whit#130603
			p5=w3[17]!white #130603 united item use loaded cost for g/l cost
			goto l_7760:
		else
			GOTO L_7755 !P&C
		endif
	endif
Endif
If P8$[5,5] = "R" Or P8$[5,5] = "F" Let P5 = W3[16] \ Goto L_7760
If P8$[5,5] = "I" Let P5 = W3[16] + ((W3[16] * FIFL) / 100) \ Goto L_7760
If P8$[5,5] = "W" Let P5 = W3[17] \ Goto L_7760
If P8$[5,5] = "B" Let P5 = W3[18] \ Goto L_7760
!if custom_customer$="PCS"  ! remove not pcs was for horowitz cct#103663
!	IF P8$[5,5]="P" LET P5=WHMISC[2] \ GOTO L_7760 !NET PO COST! " custom -P&C
!Endif
L_7755: P5 = W3[15]
L_7760: If P5 Goto L_7790
L_7765: !
if usglflag<>0 ! pcs, whiteriver, ARDS3455
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y"
		if custom_customer$="WHITERIVER"
			p5=c1[8]!white river #130603 united items use loaded cost for g/l cost
			GOTO L_7790: 
		endif
	else
		GOTO L_7785 !P&C
	Endif
endif
If P8$[5,5] = "R" Or P8$[5,5] = "F" Let P5 = C1[10] \ Goto L_7790
If P8$[5,5] = "I" Let P5 = C1[10] + ((C1[10] * FIFL) / 100) \ Goto L_7790
If P8$[5,5] = "W" Let P5 = C1[8] \ Goto L_7790
If P8$[5,5] = "B" Let P5 = C4[4] \ Goto L_7790
!if custom_customer$="PCS" ! ! remove not pcs was for horowitz cct#103663
!	IF P8$[5,5]="P" LET P5=PRPARC[2] \ GOTO L_7790 ! NET PO COST! "custom for P&C
!endif
L_7785: P5 = C1[21]
L_7790: Rem IF P5>0 LET L5[1]=P5
L_7795: GLCOST = 0
if usglflag<>0 ! if custom_customer$="PCS" or custom_customer$="WHITERIVER"  "ARDS3455"
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" 
		if custom_customer$="ARDS3455" let p5=0
		if not(p5) let p5=l7[7] 
		if not(p5) let p5=l5[1] 
		GOTO L_7820: !P&C
	endif
Endif
IF P8$[4,4]="Y"
	if l3[0]=1 or h5[7]=2 ! nonstock or direct
		if not(p5) let p5=l7[7]
		if not(p5) let p5=l5[1]
		goto L_7825:
	else
		if h5[7]=3 and p60$[22,22]="N" ! indirect - update stock =n 
			if not(p5) let p5=l7[7] ! default to gl cost
			if not(p5) let p5=l5[1] ! no cost default to load cost
			goto L_7825:
		else
			If L3[1] = 0 and H5[7]=1 and l3[0]=0 ! update gl =Y order type 1 and stock item! stock update is N
				! check product group in prodwhse
				K9$ = " ",K9$ \ K9$[1,12] = A9$[140,151]
				K9$[13,14] = WHSE Using "##"
				Search #17,2,1;K9$,R[17],E 
				if not(e)
					mat read #17,r[17],846;whmisc2;
					if whmisc2[0]<>0
						let k40$=whmisc2[0] using "###"
						search #40,2,1;k40$,r[40],e !\ if e<>0 goto L_2715:
						IF NOT(E)
							mat read #40,r[40],136;pgmlit;
							if pgmlit<>0
								if not(p5) let p5=l7[7] ! default to gl cost
								if not(p5) let p5=l5[1] ! no cost default to load cost
								goto L_7825:
							endif ! pgmlit
						ENDIF ! if not(e)
					endif! if whmisc
				endif ! if not (e)
			endif!  l3[1] warehouse order and Goto L_2715 ! stock is No
		endif ! else
	endif ! else
endif	!p8$[4,4]	
!If P8$[4,4] = "Y" And L3[0] = 1 Goto L_7825
!If P8$[4,4] = "Y" And H5[7] = 3 And P60$[22,22] = "N" Goto L_7825
!If P8$[4,4] = "Y" And H5[7] = 2 Goto L_7825
If L3[1] = 0 Goto L_7860
If L3[0] = 1 Goto L_7860
L_7820: If P5 > 0 Let L5[1] = P5
L_7825: If H5[7] = 15 Let QTY = L7[2] Else Let QTY = L7[4]
If KITFLAG Let QTY = KL3[1]
If KITFLAG If P5 <= 0 Let L5[1] = KL3[0]
If UN[2] = -2 And QTY Let QTY = 1
If L7[7] Let GLCOST = FNR(L7[7] * QTY) Else Let GLCOST = FNR(L5[1] * QTY)
If UN[2] = -1 Or UN[2] = -3 !"cct119860 cct#120817
  Mat Read #11,R[11],32;TL5; \ Mat Read #11,R[11],56;TL6;
  Mat Read #11,R[11],168;TL7; \ Mat Read #11,R[11],452;TUNF;
  If TL7[7] Let TEMPCOST = TL7[7] Else Let TEMPCOST = L5[1]
  If P5 <= 0 Let A[5] = TUNF[5];A[6] = TL6[4]
  IF L3[0]<>0 LET A[5]=TUNF[5];A[6]=TL6[4] ! non-stock use factors from line 
  IF NOT(A[5])
	LET A[5]=TUNF[5];A[6]=TL6[4] ! non-stock use factors from line 
  ENDIF
  IF NOT(A[5]) LET A[5]=1
  IF NOT(A[6]) LET A[6]=1
  QTY = S3[4]
  TEMPSIGN = Sgn(TL7[2])
  If H5[7] = 15 Let QTY = FNR(Abs((TL6[4] * TL7[2]) / A[5]))
  CNVTA = TEMPCOST \ CNVTU[0] = 0 \ CNVTU[1] = -1 \ CNVTU[2] = 2
  Gosub L_20000 \ TEMPCOST = AMOUNT
  GLCOST = FNR(TEMPCOST / 100 * QTY) * TEMPSIGN
End If 
If H5[7] = 15 And H0[5] <> 0 Let GLCOST = 0
L_7860: Return 
L_8000: Rem JSDETL UPDATE
If H5[7]=19 And OT19Part Return ! "no update until final
if l2$[17,20]=HGLCOMM$[1,4] and h5[7]=1 and L3[1]<>0 ! HELD STOCK COMMODITY CODE, ORDER TYPE 1, UPDATE STOCK=Y - bypass
    return ! cost of goods and sales are updated on order type 3 for this item
endif
JTL[0] = WHSE;JTL[1] = H5[8];JTL[2] = H5[7]
JTL2 = 30
K35$ = " ",K35$;K35$[1,2] = JTL2 Using "##";K35$[3,4] = JTL[0] Using "##"
K35$[5,6] = JTL[1] Using "##";K35$[7,8] = H5[7] Using "##"
Search #35,2,1;K35$,R[35],E \ If E > 1 error 11000
If E = 1 Gosub L_8200
Mat Read #35,R[35],6;JTL1
JTL1[14] = JTL1[14] + GLCOST
Mat Write #35,R[35],6;JTL1;
For X = 2 To 3
  JTL2 = X;K35$[1,2] = JTL2 Using "##"
  Search #35,2,1;K35$,R[35],E \ If E > 1 error 11000
  If E = 1 Gosub L_8200
  Mat Read #35,R[35],6;JTL1
  JTL1[14] = JTL1[14] + GLCOST
  Mat Write #35,R[35],6;JTL1;
Next X
Return 
L_8200: Rem CREATE JSDETL REC
E = 2 \ Search #35,1,0;K35$,R[35],E \ If E error 11000
For X9 = 0 To 14 \ JTL1[X9] = 0 \ Next X9
Search #35,4,1;K35$,R[35],E \ If E error 11000
Mat Write #35,R[35],0;JTL
Mat Write #35,R[35],6;JTL1
Mat Write #35,R[35],126;JTL2
Return 
L_8800: Rem CLEAR INVOICE REGISTER TOTAL IN SARMOA
! call programdump("/tmp/ialog11!","")
If P9$[17,17] <> "Y" Goto L_8850
K3$ = " ",K3$
L_8810: Search #5,3,1;K3$,R[5],E \ If E = 2 Goto L_8850
If E error 11000
Mat Read #5,R[5],0;B7
B7[2] = 0
Mat Write #5,R[5],0;B7;
Goto L_8810
L_8850: Rem CLEAR CR MEMO FIFO TOTALS
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_8900
K3$ = " ",K3$
L_8865: Search #30,3,1;K3$,R[30],E \ If E = 2 Goto L_8900
If E error 11000
R[19] = R[30] \ Mat Read #19,R[19],102;FL3
FL3[2] = 0 \ FL3[3] = 0
Mat Write #19,R[19],102;FL3;
Goto L_8865
L_8900: Rem REMOVE WORKFILES
I$ = "6/SORTITMP";I$[Len(I$) + 1] = PORTNUM Using "&&&&"
Kill I$
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto OUTEND
I$ = "6/FIFOITMP";I$[Len(I$) + 1] = PORTNUM Using "&&&&"
Kill I$
Goto OUTEND
L_10000: Rem ADD TO FIFO ADD FOR NEGATIVE ITEMS
If H5[7]=19 And Not(OT19Part) Return ! "do on partials not final
If P60$[9,9] = "F" Or P60$[9,9] = "L"
  ADDKEY$ = " ",ADDKEY$;ADDKEY$[1,12] = A9$[140,151]
  ADDKEY$[13,14] = WHSE Using "##"
  Search #32,2,1;ADDKEY$,R[32],E \ If E > 1 error 11000
  If E = 1
    Search #32,4,1;ADDKEY$,R[32],E \ If E error 11000
  End If 
End If 
Return 
L_17600: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) \ If E error 11000
ARDATE = X$
Call DateToJulian(1,X$,X$,E) \ If E error 11000
X2 = X$[1,5]
JARDATE = X2
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_17820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ error 11000
AMOUNT = CNVTA
L_20160: Return 
! OT 19 changes:
Updt_OT19Line: ! "as far ot19 partials go (DON'T GO TO 227B!)
Mat Read #11,r[11],32;l5;
Mat Read #11,r[11],168;L7;
Mat Read #11,r[11],260;S3;
Let L7[0]=L7[0]+L7[4] ! "prev ship
Let L7[1]=L7[1]+L5[3] ! "prev bill
Let L7[4]=0;L5[3]=0;S3[4]=0;S3[12]=0;LTax1=0 ! "zero ship ttls
Let S3[6]=0;S3[7]=0;S3[9]=0;S3[10]=0
Mat Write #11,r[11],32;l5;
Mat Write #11,r[11],168;L7;
Mat Write #11,r[11],260;S3;
Let X1=0
Write #11,r[11],548;x1; ! "no lonnger printed
If L7[0]<>L7[2] Let OT19rmd=1 ! "not finished - all it takes is one line
Return

Updt_OT19Head: ! "reset header of ot19partial as this is it for them
! it will change status back so 227b does not find it!
Mat Read #8,R[8],0;H0;
mat read #8,r[8],78;h4; ! stop # on roh
Mat Read #8,r[8],104;H5;
Mat Read #10,H0[3],8;T2; ! "reread totals
Mat Read #10,H0[3],328;Tot;
mat read #16,h0[2],146;S5;  ! truck on ROS
Gosub OT19CustOnOrd: ! "needs on order updated
Let H0[5]=H0[5]+1 ! "# ships
Let Tot_sell=0;H5[13]=0;H5[14]=0
Let tot[4]=Tot[4]+t2[1] ! "$ prev ship
LET H5[5]=H5[5]+T2[16] ! "weight of last ship?
Let K8$=" ",k8$;K8$[1,2]=H0[0] Using "##"
Let K8$[3]=H0[7] Using "######"
Search #8,5,1;k8$,R,E \ if e error 11000 ! "delete old status
If OT19Rmd=1 ! " if 1=still some to ship
	let h4[1]=0	! Stop#
	let s5=0	! Truck #
	Let H0[0]=1  
	If P9$[45,45]="Y" Let H0[0]=2 ! "bypass 221 ( if "A" =1 too)
Else ! "all ordered=prevshipped
	Let H0[0]=4
	If P9$[45,45]="Y" OR P9$[45,45]="A" Let H0[0]=3 ! "bypass 221 (no 4!)
Endif
Let k8$[1,2]=H0[0] Using "##"
Let R=R[8]
Search #8,4,1;K8$,r,e \ if e error 11000 ! "insert new status
Mat write #8,r[8],0;h0;
Mat Write #8,R[8],56;Tot_sell;
Mat Write #8,R[8],104;H5;
mat write #8,r[8],78;h4; ! stop # on roh      
mat write #16,h0[2],146;S5; !  truck on ROS    
FOR I=0 TO 25
	IF I<3 LET TOT[I]=0
	IF I<10 LET MCODE[I]=0;MCHARGE[I,0]=0;MCHARGE[I,1]=0
	IF I<>2 and i<>24 LET T2[I]=0
NEXT I
LET JRNL=0
MAT  WRITE #10,H0[3],8;T2; ! "totals
MAT  WRITE #10,H0[3],164;JRNL; ! "journal
MAT  WRITE #10,H0[3],168;MCODE; \ MAT  WRITE #10,H0[3],208;MCHARGE;
MAT  WRITE #10,H0[3],328;TOT;
Let Ot19rmd=0 ! "reset final flag
Return

Ot19CustOnOrd: ! "need this updated
Let K8$=H0[4] Using "######"
Search #15,2,1;K8$,R[15],E \ if e Goto OT19HDone:
READ #15,R[15],412;CUSTORD
IF P60$[40,40]="O" and (t2[24]-tot[4])>0
	LET CUSTORD=CUSTORD-(T2[0]-T2[1]+T2[24]-tot[4]) ! using ordered mdse subtot
	If P60$[40,40]="O" and (t2[24]-(Tot[4]+T2[1]))>0 ! "new figures
	  ! "NOTE - after t2[0]=0;t2[1]=0;t2[24]=same;tot[4]=tot[4]+t2[1]
	  let custord=custord+(t2[24]-(tot[4]+T2[1]))
	Endif
ELSE 
	LET CUSTORD=CUSTORD-T2[0] ! "reduce on order 
ENDIF 

WRITE #15,R[15],412;CUSTORD;
If H0[1]=H0[4] Goto Ot19HDone:
Let K8$=H0[1] Using "######"
Search #15,2,1;K8$,R[15],E \ if e Goto OT19HDone:
READ #15,R[15],412;CUSTORD
IF P60$[40,40]="O" and (t2[24]-tot[4])>0
	LET CUSTORD=CUSTORD-(T2[0]-T2[1]+T2[24]-tot[4]) ! using ordered mdse subtot
	If P60$[40,40]="O" and (t2[24]-(Tot[4]+T2[1]))>0 ! "new figures
   	 	! "NOTE - after t2[0]=0;t2[1]=0;t2[24]=same;tot[4]=tot[4]+t2[1]
    	let custord=custord+(t2[24]-(tot[4]+T2[1]))
	Endif
ELSE 
	LET CUSTORD=CUSTORD-T2[0] ! "reduce on order 
ENDIF 
WRITE #15,R[15],412;CUSTORD;
Ot19HDone: ! "finito
Return
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = C1[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = C1[21]
  If Not(W3[16]) Let W3[16] = C1[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let C1[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = C1[24]
End If 
Return
!
End
OUTEND: Rem END
!Print @0,22;'CE RB RB';"PART 2 COMPLETE..."; \ Signal 3,10
if statchan print #statchan;"PART 2 COMPLETE"
!Signal 3,5
L_9005: !If Err 0 Rem
For X1 = 2 To 35
  Try Close #X1 Else Rem
Next X1
Try Close #80 Else rem
Try Close #40 Else rem
If P9$[17,17] = "Y"
  Try Close #55 Else REM
End If 
! call programdump("/tmp/ialog12!","")
Chain "227B.DL4"
L_9100: !Close 
!Chain ""
!Return 
!Stop 
Rem {begin rtn.error.s}
Else
!
If statchan print #statchan;"Part 2 - Error... Please call Universal."
include "src/callmainerrnet.inc"
end try
End ! the whole program