! >>> Program glcdpost
!
! description Accounts Payable - Part 2 - g/l interface - 525/528 Check Reg/Void Check
!
! loadsave -w -n 100,10 -o prog/dxport/glcdpost.dl4 src/glcdpost.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 18, 2007  12:11:40
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ap/glcdpost.src (univ2) [mary] {40691}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Declare Intrinsic Sub FindF,InpBuf,String
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Try
  Enter spec[],message$,IntCo,rstr$,e$ 
  dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  dim e$[500]!,message$[600]
  
Rem glcdpost - G/L INTERFACE FOR cash disbursements
Rem AUTHOR: MTG   JUNE 2004
Rem LAST UPDATE:
Try Close Else Rem
Dim 2%,C4[4],3%,Q[2],T2[3],2%,JRNL
DIM 1%,PRGNUM,eflag,returnstatus
dim 2%,comp,3%,rec_uac
Comp = spec[0] ! company #                     
intCo = spec[0]                                
C4[0] = spec[1] ! CURRENT/NEXT MONTH
C4[1]= spec[2] ! POSTING PERIOD                              
C4[2] = spec[3]  ! POSTING date (mmddyy)                            
C4[3] = spec[4] !  LOGICAL UNIT NUMBER FOR A10IN
C4[4] = SPEC[5] ! POSTING DATE YYMMDD
JRNL = SPEC[6] !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE

PRGNUM=SPEC[7] ! PROGRAM NUMBER
rec_uac = spec[8]                              
returnstatus = spec[9] 
eflag=spec[10]

Dim J$[30],X$[10]
Dim 2%,S1[8],D0,F$[20],X9
Dim 2%,ACPER[1],BATCH,GRP[1],USR[1],W,L1,PDATE
Dim 1%,CHGL[3]
Dim G9$[140]
Dim K2$[30]
Dim 1%,E,S
Dim 1%,L9,B,B3,2%,V2$[50],F2$[30],F3$[30],T9$[64],P8$[6],P9$[64],R9$[64]
Dim G$[2],L9$[2],D$[4],B$[3],C$[4],3%,C2[1],T,2%
Dim F1$[20]
Dim 2%,COMP
Dim 1%,X1,I,L,2%,X2,J8,CLIENT
Dim 3%,R[55]
Dim D8$[8],CLIENT$[4],U1$[2],KEYAP$[10],PO$[6]
Rem glcdtemp file
Dim 3%,GLA1[1],2%,GLA2[3],GLA1$[30],1%,GLA3[1]
Dim U5$[50],groupid$[2],msg$[100],glpmsg$[100]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],WebStr$[600],blockid$[100]

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!If Err 0 Rem
!Close
!If Err 0 Gosub ERR_TRAP
!J8 = Spc(5)
COMP = Intco ! Int((J8 - Int(J8 / 16384) * 16384) / 64)
J$ = COMP Using "cntrl/CNTRL#"
Open #1,J$

Rem if restart remove chain read set var b4 & c4 - set restart var to 99
RESTART = 0
If RESTART
  Rem RESTART SECTION
  Rem DIM 2%,jrnl,C4[4]
  Rem LET C4[0]=CURRENT =0  OR NEXT MONTH =1
  Rem LET C4[1]=POSTING PERIOD (YYMM)
  Rem LET C4[2]=POSTING DATE (MMDDYY)
  Rem LET C4[3]=LOGICAL UNIT NUMBER FOR A10IN
  Rem LET C4[4]=POSTING DATE (YYMMDD)
  Rem jrnl=BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
  Rem LET B4=C4[1] ! SET TO YYMM
End If 
!J8 = Spc(5)
!COMP = Int((J8 - Int(J8 / 16384) * 16384) / 64)
!J$ = Int((J8 - Int(J8 / 16384) * 16384) / 64) Using "CNTRL# "
!Open #1,J$
Mat Read #1,19,50;P9$;
If P9$[17,17] <> "Y" Goto OUTEND
Mat Read #1,52,60;P8$;
J$ = COMP Using "6/GLCDTEMP#"
Open #2,J$
Read #1,88,16;J$; \ Ropen #15,J$
Read #1,88,48;J$; \ Open #16,J$
Rem #2=GLAPTEMP,#15-A00APgu, #16-ACFgu,#4-batch
READA00AP10: Rem read A00AP File for g/l group & user
KEYAP$ = "10"
Search #15,2,1;KEYAP$,R[15],E
If E<>0
  If E = 1 
	message$=message$+"ERROR, RECORD ''10'' NOT IN A00AP FILE"
	goto outend:
  ENDIF
End If 
Read #15,R[15],2;CLIENT$;
S1[0] = CLIENT$[1,4]
Mat Read #15,R[15],168;U1$;
S1[1] = U1$[1,1]
S1[2] = U1$[2,2]
G$[1,1] = S1[1] Using "#"
GRP[0] = S1[1]
G$[2,2] = S1[2] Using "#"
USR[0] = S1[2]
!W = Spc(5)
!L1 = Int(W / 16384)
!GRP[1] = Int((W - L1 * 16384) / 64)
!USR[1] = W - (L1 * 16384 + GRP[1] * 64)
Call DXGet("u_group",groupid$)
GRP[1] = COMP ! Int((W - L1 * 16384) / 64)
USR[1] = groupid$ ! W - (L1 * 16384 + GRP[1] * 64)
L_1100: Rem SELECT POSTING PERIOD

ACPER = C4[1]
X$ = C4[1] Using "&&&&"

X$ = C4[2] Using "&&&&&&"

PDATE = C4[2]
CLIENT = 0

V2$ = " ",V2$
L_6120: Search #2,3,1;V2$,R[2],E
If E = 2
  Gosub L_6300 \ Goto L_8000
End If 
If E Gosub ERR_Search
Mat Read #2,R[2],0;GLA1;
Mat Read #2,R[2],12;GLA2;
Mat Read #2,R[2],40;GLA1$;
Mat Read #2,R[2],70;GLA3;
If Not(GLA2[1]) Let GLA2[1] = S1[0]
If CLIENT <> GLA2[1]
  If CLIENT Gosub L_6300
  Gosub L_6400 \ CLIENT = GLA2[1]
End If 
R9$ = " ",R9$
R = R + 1
R9$[1,1] = "D"
R9$[3,10] = GLA1[0] Using "########"
Rem determine if posting in detail or summary
If Not(GLA2[3]) ! posting in summary no check #
  If JRNL
    R9$[14,19] = JRNL Using "&&&&&&"
  Else 
    R9$[14,19] = C4[2] Using "&&&&&&"
  End If 
  R9$[20,25] = C4[2] Using "&&&&&&"
  If PRGNUM = 525
    R9$[26,41] = "CHECK REGISTER  "
  Else 
    If PRGNUM = 528
      R9$[26,42] = "VOID CHECK JRNL  "
    End If 
  End If 
  R9$[43,48] = JRNL Using "######"
Else 
  R9$[14,19] = GLA2[3] Using "######"
  R9$[20,25] = C4[2] Using "&&&&&&"
  R9$[26,52] = GLA1$[1,27]
End If 
R9$[53,58] = JRNL Using "######"
Rem **** r9$[53,58] contain batch/journal number link used in glpost  *****
R9$[59,62] = R Using "####"
R9$[63,63] = "0"
T = GLA1[1]
Write #4,R[4];R9$
Write #4,R[4],1;T;
R[4] = R[4] + 1
If GLA1[1] > 0 Let C2 = C2 + GLA1[1]
If GLA1[1] < 0 Let C2[1] = C2[1] + GLA1[1]
Goto L_6120
L_6300: Rem RESET BATCH
If Not(GLA2[1]) Return 
R = R + 1
T9$[59,62] = R Using "####"
T = 0
Write #4,R[4];T9$
Write #4,R[4],1;T;
R[4] = R[4] + 1
P9$ = " ",P9$
C2[1] = Abs(C2[1])
P9$[31,40] = (C2[0] * 100) Using "##########"
P9$[41,50] = (C2[1] * 100) Using "##########"
P9$[51,60] = ((C2[0] - C2[1]) * 100) Using "----------"
P9$[10,20] = "1  PAY    1"
P9$[21,21] = "0"
P9$[25,25] = GRP[1] Using "&"
P9$[26,26] = USR[1] Using "&"
T = 0
Write #4,R[4];P9$;
Write #4,R[4],1;T;
Try Close #4 Else Rem
For Q = 0 To 3 \ CHGL[Q] = 0 \ Next Q
CHGL[0] = 16
ACPER[1] = 0
!Call "glpost",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE
glpstat=0
Call "glpost.dl4",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE,IntCo,rstr$,glpstat,glpmsg$
Return 
L_6400: Rem LOOKUP CLIENT & CREATE BATCH
K2$ = " ",K2$ \ K2$[3,6] = GLA2[1] Using "####"
Search #16,2,1;K2$,R[16],E \ If E Gosub ERR_SEARCH
Mat Read #16,R[16],0;G9$;
L9 = G9$[135,136]
If L9 < 10 Let L9$ = L9 Using "#" Else Let L9$ = L9 Using "##"
C$ = GLA2[1] Using "####"
For I = 1 To 4
  If C$[I,I] = " " Let C$[I,I] = "."
Next I
TIEBREAKER = 0
GETNUM: Rem get the batch #
TIEBREAKER = TIEBREAKER + 1
K2$ = " ",K2$ \ K2$[3,6] = GLA2[1] Using "####" \ K2$[7,8] = "PG"
Search #16,2,1;K2$,R[16],E \ If E Gosub ERR_SEARCH
Mat Read #16,R[16],132;B
B3 = B \ B3 = B3 + 1 \ If B3 > 999 Let B3 = 1
Mat Write #16,R[16],132;B3;
!Print @0,23;'CL';"PROCESSING CLIENT#: ";K2$[3,6];" BATCH#: ";B;
BATCH = B
!Signal 3,10
D$ = C4[1] Using "&&&&"
B$ = B Using "###"
For I = 1 To 3
  If B$[I,I] = " " Let B$[I,I] = "."
Next I

!If Err 0 Gosub ERR_SEARCH
tmp$="files/",L9$,"/G",G$[1,2],C$,D$,B$[1,3]
! F2$ = "<00> ",L9$,"/G",G$[1,2],C$,D$,B$[1,3]
!F3$ = F2$[6]
F2$ = "<00> ",tmp$
F3$ = tmp$
Call FindF(F3$,A9)
If A9 ! already exists
  If TIEBREAKER > 999
  Msg$="No Available Batch Numbers to process " \ Gosub ERR_SEARCH
    !Print @0,23;'CL';"No Available Batch Numbers to process "; \ Gosub ERR_SEARCH
  End If 
  Goto GETNUM
End If 
Build #4,F2$
R[4] = 0 \ T9$ = " ",T9$ \ T = 0
Write #4,R[4];T9$
Write #4,R[4],1;T
Try Close #4 Else Rem
tmp$="chmod go+rw "+F3$
System tmp$
Eopen #4,F3$
R = 0
T9$[1,1] = "*"
T9$[2,5] = C$
T9$[6,9] = C4[1] Using "&&&&"
T9$[10,12] = B Using "###"
T9$[13,50] = G9$[1,38]
T9$[51,52] = G$[1,2]
T9$[63,63] = "9"
C2[0] = 0 \ C2[1] = 0
CLIENT = GLA2[1]
Return 
L_8000: Rem CLEAR GLCMTEMP
V2$ = ""
L_8010: Search #2,3,1;V2$,R[2],E
If E = 2 Goto L_8100
If E Gosub ERR_SEARCH
Search #2,5,1;V2$,R[2],E
If E Gosub ERR_SEARCH
E = 3 \ Search #2,1,0;V2$,R[2],E
If E Gosub ERR_SEARCH
Goto L_8010
L_8100: Rem END
!Print 'CR RB';"----ACCEPTED----"
if glpstat<>0
	let eflag=eflag+1 
	let message$=message$+"Batch Not Updated Because "+glpmsg$
endif
Let AOK=1
Goto OUTEND
U5$ = X2 Using "&&&&&&"
X$[1,2] = U5$[3,4]
X$[3,3] = "/"
X$[4,5] = U5$[5,6]
X$[6,6] = "/"
X$[7,8] = U5$[1,2]
Return 

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/glappost!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)
End

OUTEND: Rem EXIT ROUTINE
for x=1 to 89
	Try Close #x Else Rem
Next x
if eflag>0
	let returnstatus=0
	spec[9]=returnstatus
endif

Else
!
include "src/callmainerrnet.inc"
end try
End ! the whole program