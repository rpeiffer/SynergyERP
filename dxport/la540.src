! >>> Program La540
!
! description Accounts Payable End of Month
! loadsave -w -n 100,10 -o prog/dxport/la540.dl4 src/la540.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"

Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR  3, 2008  16:03:54
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/ap/la540.src (univ2) [txc] {48974}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,String,Time,VerifyDate
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Rem LA540 A/P VENDOR MASTER FILE CLOSE
Rem LAST UPDATE: 3/91 MTK -MULTIPLE BANKS- V3
Rem LAST UPDATE: 8/93 MTG SO THAT DAYSTART WILL NOT NEED TO BE RUN.
Try
	Enter SPEC1[],MESSAGE$,rstr$ 
	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
	dim xdate$[50]
	dim 3%,spec[50],totrec
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,A,B5[1],C0[6],D9,E,F,G,L,O,P,U,X1,RP2[6],EFLAG,APCLOSE,APFORCE540
Dim 2%,A1,A9,B[5],C2,C3[2],C4[4],C9[2],D0,E1,F9[2],K9[2],L9,N8[2],R0,R1,R2,V,V1,X2
Dim 2%,B4[1],C1[8],K1,X9,RP1[5],MONTH_,X3,X4,COMP
Dim 3%,A3[7],B6[3],C[9],D,N9,R9,T9[2],O3[9],X,I,VT1[14],R[50]
Dim 4%,T[4],W
Dim C$[8],D$[25],F$[30],G$[6],G1$[2],G9$[119],L$[63],M$[10],M1$[13],M2$[14],M3$[11]
Dim N$[20],N1$[15],N2$[15],N3$[15],O$[6],R$[30],R2$[4],V$[30],V1$[20]
Dim X$[10],X1$[10],K9$[30],U5$[30],RP1$[8],2%
Dim R9$[64],D8$[8],J4$[40]
Dim P60$[50],p9$[50]
dim prevac$[4],uacname$[20]
Dim KEYPOCT$[30],KEYPOCT2$[30],PCT$[12],KEYPOH$[30]
Dim 1%,SPO,PCT3[2],3%,PCT2[5],PCT4[1],PCT5[9],2%,PCT1[5]
Dim 2%,FDAY,COMP,JAPDATE,JRTSDATE,JPOSTDATE
Dim KEY12$[30],2%,G7,3%
dIM GROUPID$[1]
Dim 3%
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Comp=spec1[0] ! company #
intco=spec1[0]
o=spec1[1] ! 1=month to date, 2=year to date
Audonly=spec1[2]

Acper=spec1[4]

rec_uac=spec1[8]
returnstatus=spec1[9]
message$=""

Rem open files    
F$="cntrl/Cntrl"+str$(comp)
Open #1,F$
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
Try Close #9 Else Rem
let onchannelno=9
sortchan = blockbuildsort(e$,25,0,onchannelno)
Def FNR(X) = Int(X) + Not(Not(Fra(X)))
!X2 = Spc(5) \ COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
Mat Read #1,51,76;SPO;
If SPO<>0
	F$ = COMP Using "2/poctfle#"
	Open #30,F$
	Mat Read #1,60,50;P60$;
	 FDAY = 0
	If P60$[9,9] = "L" Or P60$[9,9] = "F"
		 Mat Read #1,3,196;FDAY;
	End If 
	If FDAY < 120 Let FDAY = 120
	Mat Read #1,88,2416;F$;
	Open #31,F$
End If 
Mat Read #1,51,18;C0;
Mat Read #1,51,36;C1;
Mat Read #1,51,86;APFORCE540;

M$ = "###,###.##"
M1$ = "##,###,###.##"
M2$ = "###,###,###.##"
M3$ = "####,###.##"
P = 0 \ L = 99
Call Time(D$)
eflag=0
!returnstatus=0
!let message$=""
G1$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
g1$[2,2]=groupid$
Mat Read #1,0,134;D0;
C$ = D0 Using "&&&&&&"
let tmp3=c$[1,4]
If Acper<>tmp3
	let eflag=eflag+1
	Let message$="Accounting Period Submitted Not Current Month. "
	goto outend2:
endif
v$ = " 0" \ Search #15,2,1;v$,R[15],E 
if e<>0
	let eflag=eflag+1
	Message$="RECORD '0' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif
Mat Read #15,R[15],2;L$;
N$ = " ",N$
N$ = L$[33,33],"/AM0DO",G1$[1,2],C$[1,4]
Call FindF(N$,A9)
If Not(A9)
	let eflag=eflag+1
	let message$="Monthly Purchase Files for the Period ",c$[3,4],"/",c$[1,2]," Not Available. "
	goto outend2:
endif
N$ = L$[34,34],"/AM0DD",G1$[1,2],C$[1,4]
Call FindF(N$,A9)
If Not(A9)
	let eflag=eflag+1
	let message$="Monthly Purchase Files for the Period ",c$[3,4],"/",c$[1,2]," Not Available. "
	goto outend2:
endif
N$ = L$[41,41],"/AM0CR",G1$[1,2],C$[1,4]
Call FindF(N$,A9)
If Not(A9)
	let eflag=eflag+1
	let message$="Monthly Check Files for the Period ",c$[3,4],"/",c$[1,2]," Not Available. "
	goto outend2:
endif
N$ = L$[42,42],"/AM0CD",G1$[1,2],C$[1,4]
Call FindF(N$,A9)
If Not(A9)
	let eflag=eflag+1
	let message$="Monthly Check Files for the Period ",c$[3,4],"/",c$[1,2]," Not Available. "
	goto outend2:
endif
F$ = L$[31,31],"/A80VM",G1$[1,2]
Call FindF(F$,A9)
If NOT(A9)
	LET eflag=eflag+1
	message$=message$+" Vendor Master File "+f$+" Not Found. "
else
	Open #2,F$
End If 
F$ = L$[53,53],"/A20OI",G1$[1,2]
Call FindF(F$,A9)
If NOT(A9)
	LET eflag=eflag+1
	message$=" Accounts Payable Open Item File "+f$+" Not Found. "
else
  Open #3,F$
End If 
Rem monthly adjustments ! verify monthly adjustements accepted for the month
F$ = L$[37,37],"/A10AJ",G1$[1,2]
Call FindF(F$,A9)
If NOT(A9)
	LET eflag=eflag+1
	message$=Message$+ " Monthly A/P Adjustment File "+f$+" Not Found "
else
	Open #12,F$
	KEY12$ = " ",KEY12$
	do
		Search #12,3,1;KEY12$,R[12],E \ If E=2 exit do
		If E Gosub ERR_SEARCH
		Mat Read #12,R[12],20;G7;
		If G7 = acper! acct period match not acccepted
			let eflag=eflag+1
			let message$=message$+" Monthly Adjustments Open. "
			exit do
		endif
	loop
endif
If C0[3] ! batch mode
	F$ = L$[45,45],"/APBTH",G1$[1,2]
	Call FindF(F$,A9)
	If NOT(A9)
		LET eflag=eflag+1
		message$=message$+" Batch File "+f$+" Not Found "
	else
		Open #14,F$ ! verify open batches
		K9$ = " ",K9$ \ K9$[1,4] = acper Using "####"
		totrec=0
		do
			Search #14,3,1;K9$,R[14],E \ If E = 2 exit do
			If E Gosub ERR_SEARCH
			X9 = K9$[1,4] \ If X9 <> acper  exit do
			Mat Read #14,R[14],0;B4;
			Mat Read #14,R[14],8;B5;
			Mat Read #14,R[14],12;B6;
			If B5 = 6 or b5=9
				goto getnxtapb: ! ! batch is ok accepted or deleted
			endif
			if B5=0 or b5=1 ! check if there are any entries
					if b5[1]=0 and b6[0]=0 and b6[1]=0 and b6[2]=0 and b6[3]=0 ! no values in batch
						V$ = " ",V$
						do 
							Search #3,3,1;V$,R[3],E
							If E = 2
								if not(audonly)
									let b5=9 ! delete
									mat write #14,r[14],8;b5;
								endif
								Goto getnxtapb:
							endif
							If E Gosub ERR_SEARCH
							Mat Read #3,R[3],40;O3;
							IF O3[8]=B4[0] AND O3[9]=B4[1] ! POSTING PERIOD AND BATCH MATCH
								goto errapb:
							endif
						loop
					endif				
			endif
			errapb: ! error in apbatch
			eflag=eflag+1
			if not (totrec)
				let message$=message$+"Please Check Data Entry for Open Batches: "+str$(b4[1])
				let totrec=totrec+1
			else
				if totrec>10
					let message$=message$+",etc. "
					exit do
				endif
				let message$=message$+","+str$(b4[1])
				totrec=totrec+1
			endif
			getnxtapb: ! 
		loop
	endif
endif
F$ = L$[35,35],"/A10VC",G1$[1,2] \ Open #50,F$
LET K9$=" ",K9$
SEARCH #50,3,1;K9$,R[20],E
IF NOT(E)
	let eflag=eflag+1
	let totrec=totrec+1
	message$=Message$+" Void Check Entries Exists for Bank "+k9$[1,2]
endif
try
	close #50
else
	rem !!!!
end try 

F$ = L$[56,56],"/A20CR",G1$[1,2] \ Open #50,F$
LET K9$=" ",K9$
SEARCH #50,3,1;K9$,R[20],E
IF NOT(E)
	let eflag=eflag+1
	let totrec=totrec+1
	message$=Message$+" Checks Are Not Been Registered for Bank "+k9$[1,2]
endif
try
	close #50
else
	rem !!!!
end try 

F$ = L$[8,8],"/APREC",G1$[1,2]
Call FindF(F$,A9) 
if not(a9)
	LET eflag=eflag+1
	message$=message$+" File "+f$+" Not Found. "
else
	Open #20,F$
	K9$ = " ",K9$
	totrec=0
	do
		Search #20,3,1;K9$,R[20],E \ If E<>0 exit do
		Mat Read #20,R[20],0;RP1;
		Mat Read #20,R[20],24;RP2;
		Mat Read #20,R[20],58;RP1$;
		If Rp1[3]=acper
			let eflag=eflag+1
			if not(totrec)
				let eflag=eflag+1
				let totrec=totrec+1
				message$=Message$+" Check Recurring Entries List for Open Transactions: "
				message$=message$+"Vend "+str$(RP1[0])+" Trans "+rtrim$(RP1$[1,8])
			else
				if totrec>4
					let message$=message$+",etc. "
					exit do
				endif	
				message$=message$+",Vend "+str$(RP1[0])+" Trans "+rtrim$(RP1$[1,8])
				exit do
			endif
				
		endif
	loop
endif
If C0[6] !check division
	F$ = L$[2,2],"/APVDV",G1$[1,2] 
	Call FindF(F$,A9) 
	if not(a9)
		LET eflag=eflag+1
		message$=message$+" File "+f$+" Not Found. "
	else
		Open #18,F$
	End If 
endif


if eflag<>0 goto outend2:
If L$[51,51] = " "
	let eflag=eflag+1
	message$="CHECK REGISTER IN PROCESS ELSEWHERE...PLEASE TRY AGAIN LATER...."
	Goto Outend2:
End If 

If L$[61,61] = " "
	let eflag=eflag+1
	message$="PURCHASE JOURNAL IN PROCESS ELSEWHERE...PLEASE TRY AGAIN LATER...."
	Goto Outend2:
End If 
If P9$[17,17] <> "Y"
  If L$[60,60] = " "
	let eflag=eflag+1
	message$="INTERFACE FILE IN USE ELSEWHERE...PLEASE TRY AGAIN LATER.."
	Goto OutEnd2:
  End If 
End If 
if eflag<>0 goto outend2:
L$[61,61] = " " \ L$[51,51] = " "
Mat Write #15,R[15],2;L$;


L_840: Rem POSTING MONTHS
Mat Read #1,0,134;D0;
!! need to get previous month file
let c$=d0 using "&&&&&&"
let c9=c$[3,4] ! month
let c9=c9-1
if c9<=0
	let c9=c$[1,2]\let c9=c9-1\if c9<0 let c9=99
	let c$[1,2]=c9 using "&&"
	let c$[3,4]="12"
else
	let c$[3,4]=c9 using "&&"
endif
let c3[2]=c$[1,4]
C$ = D0 Using "&&&&&&"
If SPO
  X$ = D0 Using "&&&&&&";X$[5,6] = "01"
  Call DateToJulian(1,X$,X$,E) \ If E Gosub ERR_SEARCH
  JAPDATE = X$
End If 
C3 = C$[1,4]
C4[1] = C$[3,4]
MONTH_ = C4[1]
C$ = C3 Using "&&&&"


O = spec1[1] ! 1 = end of month, 2=end of year
if o<1 or o>2
	let eflag=eflag+1
	let message$="Invalid End of Period Option Submitted."
	goto outend
endif
! START REPORT HERE
IF EFLAG<>0 GOTO OUTEND:
Gosub L_5800
V$ = " ",V$
L_2010: Search #2,3,1;V$,R[2],E \ If E = 2 Goto L_2500
If E Gosub ERR_SEARCH
Mat Read #2,R[2];R$; \ Mat Read #2,R[2],264;B;
Mat Read #2,R[2],304;C;
Mat Read #2,R[2],498;A3;
G$ = B[2] Using "&&&&&&"
Print #0;V$;"  ";R$;"  ";
If B[2] Print #0;G$[3,4];"/";G$[5,6];"/";G$[1,2];"  ";
If Not(B[2]) Print #0;"          ";
G$ = " ",G$
C[0] = C[0] + C[6] + C[9] - C[5]
For E = 0 To 4
  If C[E] < 0 Let G$[E + 1,E + 1] = "-"
Next E
Print #0; Using "###,### ######";B[4];" ";B[5];"  ";
Print #0; Using M3$;C[1];G$[2,2];" ";
Print #0; Using M$;C[2];G$[3,3];" ";
Print #0; Using M1$;C[3];G$[4,4];
Print #0; Using M$;" ";C[4];G$[5,5];
Print #0; Using M3$;" ";C;G$[1,1];"\15\"
Gosub L_5800
V = V + 1
For E = 0 To 4
  T[E] = T[E] + C[E]
Next E
Goto L_2010
L_2500: Rem TOTALS
Print #0; Using "###,###";"\15\TOTAL NO. OF VENDORS: ";V;
G$ = " ",G$
For E = 0 To 4
  If T[E] < 0 Let G$[E + 1,E + 1] = "-"
Next E
Print #0; Using M2$; Tab 54;"GRAND    ";T[1];G$[2,2]; Tab 90;
Print #0; Using M2$;T[3];G$[4,4]; Tab 115;T;G$[1,1]
Print #0; Using M2$; Tab 54;"TOTALS"; Tab 75;T[2];G$[3,3]; Tab 102;
Print #0; Using M2$;T[4];G$[5,5];"\15\"
Print #0;"\15\-END-LA540"
Print #0;"\14\"
!Signal 3,0
!If Err 0 Rem
tRY Close #0 eLSE rEM
!If Err 0 Gosub ERR_TRAP
L_3000:! Print 'CS CR'; Tab 20;G9$[1,40]
!Print Tab 20;"ACCOUNTS PAYABLE END OF MONTH "
!Print @5,5;"**** MAKE SURE ALL REPORTS HAVE BEEN PRINTED AND ALL ";
!Print @5,6;"TRANSACTIONS HAVE BEEN RECORDED BEFORE PROCEEDING ****"
!Print @5,10;"PROCEED WITH END OF MONTH (Y/N) ";
!Input Len (16384 + 1);""G$
!If G$ = "Y" Goto L_3050
!If G$ = "N" Goto OUTEND
!Print @0,23;'CL RB';"INVALID!!!"; \ Signal 3,20
!Goto L_3000
IF AUDONLY<>0 GOTO OUTEND: ! AUDIT ONLY
L_3050: ! If Err 0 Gosub ERR_TRAP
If C0[3] Gosub L_6000
Read #1,0,116;A \ Mat Read #1,0,124;D8$ \ Read #1,0,134;D0
Y = D8$[7,8]
A = A + 1
If A > 12 Let A = 1 \ Y = Y + 1 \ If Y > 99 Let Y = 0
D8$[1,2] = A Using "&&" \ D8$[4,5] = "01" \ D8$[7,8] = Y Using "&&"
X$ = D8$[7,8],D8$[1,2],D8$[4,5] \ D0 = X$[1,6]
Write #1,0,116;A \ Mat Write #1,0,124;D8$ \ Write #1,0,134;D0;
Mat Read #1,51,36;C1 \ C1[0] = C1[1] \ C1[1] = 1 \ Mat Write #1,51,36;C1;
! Print "\15\\15\...PLEASE WAIT..."
V$ = " ",V$
L_3105: Search #2,3,1;V$,R[2],E \ If E = 2 Goto L_3300
If E Gosub ERR_SEARCH
Mat Read #2,R[2];R$;
Mat Read #2,R[2],264;B;
Mat Read #2,R[2],304;C;
Mat Read #2,R[2],498;A3
If O = 2 Goto L_3140
L_3140: C[1] = 0
C[2] = 0
C[7] = 0
If O = 1 Goto L_3190
C[8] = 0
A3[0] = C[3]
C[3] = 0
C[4] = 0
B[4] = 0
B[5] = 0
L_3190: If MONTH_ <> 12 Goto L_3200
A3[7] = A3[6] \ A3[6] = 0
L_3200: C[1] = C[1] + C[5]
C[2] = C[2] + C[6]
C[3] = C[3] + C[5]
C[4] = C[4] + C[6]
C[7] = C[7] + C[9]
C[8] = C[8] + C[9]
A3[6] = A3[6] + C[9]
C[9] = 0
C[5] = 0
C[6] = 0
Mat Write #2,R[2],264;B
Mat Write #2,R[2],304;C;
Mat Write #2,R[2],498;A3;
Goto L_3105
L_3300: Rem DIVISIONAL VENDOR
If Not(C0[6]) Goto L_3400
V$ = " ",V$
L_3310: Search #18,3,1;V$,R[18],E \ If E = 2 Goto L_3400
If E Gosub ERR_SEARCH
Mat Read #18,R[18],8;VT1
VT1[0] = VT1[1] \ VT1[1] = 0
VT1[4] = VT1[5] \ VT1[5] = 0
VT1[8] = VT1[9] \ VT1[9] = 0
If MONTH_ <> 12 Goto L_3350
VT1[13] = VT1[12] \ VT1[12] = 0
L_3350: If O <> 2 Goto L_3370
VT1[3] = VT1[2] \ VT1[2] = 0
VT1[7] = VT1[6] \ VT1[6] = 0
VT1[11] = VT1[10] \ VT1[10] = 0
L_3370: VT1[2] = VT1[2] + VT1[0]
VT1[6] = VT1[6] + VT1[4]
VT1[10] = VT1[10] + VT1[8]
VT1[12] = VT1[12] + VT1[8]
Mat Write #18,R[18],8;VT1;
Goto L_3310
L_3400: Rem UPDATE OPEN ITEM FILE
EFLAG = 0
V$ = " ",V$
L_3415: Search #3,3,1;V$,R[3],E
If E = 2 Goto L_3800
If E Gosub ERR_SEARCH
If O$[1,1] = "9" Let EFLAG = 99
If O$[1,1] = "0" Let EFLAG = 99
Mat Read #3,R[3],0;O$;
Mat Read #3,R[3],40;O3
If O$[1,1] = "6" Goto L_3500
L_3455: O$[5,5] = "0"
O3[5] = O3[5] + O3[7]
O3[7] = 0
Mat Write #3,R[3],0;O$;
Mat Write #3,R[3],40;O3;
Goto L_3415
L_3500: Rem DELETE PAID ITEM
If O$[1,1] = "6" If O3 = (O3[5] + O3[7]) Goto L_3520
If O$[1,1] = "6" If Not(O3[5] + O3[7]) Goto L_3520
If O3[0] <> (O3[5] + O3[7]) Goto L_3455
L_3520: Search #3,5,1;V$,R[3],E
If E Gosub ERR_SEARCH
E = 3 \ Search #3,1,0;V$,R[3],E
If E Gosub ERR_SEARCH
Goto L_3415
L_3800: Rem RESET ENTRY NUMBER
If EFLAG Goto L_3900
Mat Read #1,51,44;E1 \ E1 = 0 \ Mat Write #1,51,44;E1;
Goto L_3900
L_3900: Rem UPDATE VENDOR DIVISION TOTAL
If SPO Gosub UPDATEPOCTFLE
Gosub L_4000
! Print "\15\...UPDATING COMPLETE...";
Rem UPDATE LAST DATE EOM/EOY WAS RUN. INTO C1[8]
Mat Read #1,51,36;C1
Gosub GETDATE
C1[8] = X$[1,6]
Mat Write #1,51,36;C1;
!signal 3,20
Goto OUTEND
L_4000: Rem CLEAR MONTHLY PURCHASE JOURNAL
! keep the closing month for backup
! remove the previous month instead
let prevac$=c3[2] using "&&&&"
! remove previous month ap files
LET N$=L$[33,33],"/AM0DO",G1$[1,2],prevac$[1,4]
Call FindF(N$,A9)
if (a9)
	Try kill n$ Else Rem
endif
LET N1$=L$[34,34],"/AM0DD",G1$[1,2],prevac$[1,4]
Call FindF(N1$,A9)
if (a9)
	Try kill n1$ Else Rem
endif
LET N2$=L$[41,41],"/AM0CR",G1$[1,2],prevac$[1,4]
Call FindF(N2$,A9)
if (a9)
	Try kill n2$ Else Rem
endif
LET N3$=L$[42,42],"/AM0CD",G1$[1,2],prevac$[1,4]
Call FindF(N3$,A9)
if (a9)
	Try kill n3$ Else Rem
endif
C3 = C$
C3 = C3 + 2
C$ = C3 Using "&&&&"
C3 = C$[3,4]
If C3 < 13 Goto L_4080
C3 = C3 - 12
C2 = C$[1,2]
C2 = C2 + 1 \ If C2 > 99 Let C2 = 0
C2 = (C2 * 100) + C3
C$ = C2 Using "&&&&"
L_4080: ! Close #7,#8,#9,#10
Call "labldfle.DL4",C$,e$,IntCo,rstr$ ! Call "labldfle",C$
Return 
L_5800: Rem PRINT HEADING & INCREMENT LINE COUNTER
L = L + 2
If L < 55 Return 
P = P + 1
If P = 1 Goto L_5830
Print #0;"\14\"
L_5830: Print #0; Tab 45;G9$[1,40]
IF audonly<>0
	print #0;"**Preview**";
endif
Print #0; Tab 45;"VENDOR MASTER ";
If O = 1 Print #0;"MONTHLY";
If O = 2 Print #0;"YEARLY";
Print #0;" CLOSE REPORT - ";C$[3,4];"/";C$[1,2];
Print #0; Using "####"; Tab 90;D$; Tab 120;"PAGE ";P
Print #0;"\15\VEND NO  NAME"; Tab 40;"DATE ACCT   NO.OF  AVG.PAY  ----";
Print #0;"MONTH TO DATE----      ----YEAR TO DATE-----   A/P BALANCE"
Print #0; Tab 42;"OPENED    INV.PD   TIME   PURCHASES   DISCOUNTS      ";
Print #0;"PURCHASES   DISCOUNTS\15\"
L = 6
Return 
L_6000: Rem DELETE BATCHES FOR THIS ACCOUNTING PERIOD
K9$ = " ",K9$ \ K9$[1,4] = C3 Using "####"
L_6010: Search #14,3,1;K9$,R[14],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
X9 = K9$[1,4] \ If X9 <> C3 Goto L_6010
Mat Read #14,R[14],0;B4;
Mat Read #14,R[14],8;B5;
Mat Read #14,R[14],12;B6
If B5 = 6 Goto L_6060
If B5 = 9 Goto L_6060
Goto L_6010:
L_6060: Search #14,5,1;K9$,R[14],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #14,1,0;K9$,R[14],E \ If E Gosub ERR_SEARCH
Goto L_6010
GETDATE: Rem GET CURRENT DATE
U5$ = ""
X$ = " ",X$
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
Rem FIGURE OUT WHICH MONTH
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto GETDATE2
Next K1
Stop 
GETDATE2: X$ = " ",X$
Rem DATE IN FORMAT YYMMDD- ZERO FILLED
X$[1,2] = U5$[11,12]
X$[3,4] = K1 Using "##"
X$[5,6] = U5$[5,6]
For K1 = 1 To 6
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 

UPDATEPOCTFLE: Rem update next month & purges po control number closed over 120 days
If Not(SPO) Return 
KEYPOCT$ = " ",KEYPOCT$
SRCHPOCTFLE: Rem srchpoctfle file
Search #30,3,1;KEYPOCT$,R[30],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
Mat Read #30,R[30],0;PCT1
Mat Read #30,R[30],78;PCT4
Mat Read #30,R[30],90;PCT5
If PCT4[0] <> 0 Or PCT4[1] <> 0 Or PCT5[6] <> 0 Or PCT5[7] <> 0 Let PCT1[5] = D0
PCT4[0] = 0;PCT4[1] = 0
PCT5[4] = PCT5[4] + PCT5[6]
PCT5[5] = PCT5[5] + PCT5[7]
PCT5[6] = 0;PCT5[7] = 0
Mat Write #30,R[30],0;PCT1
Mat Write #30,R[30],78;PCT4 \ Mat Write #30,R[30],90;PCT5;
Mat Read #30,R[30],60;PCT3;
if pct3[0]=97 or pct3[0]=98 goto srchpoctfle: ! in manual close process
if pct3[0]=87 or pct3[0]=88 goto srchpoctfle: ! in unreceive process
If PCT3[0] ! closed for a/p
  Mat Read #30,R[30],0;PCT1
  If PCT1[4]
    X$ = PCT1[4] Using "&&&&&&"
    Call DateToJulian(1,X$,X$,E) !\ If E Gosub ERR_SEARCH
	if e<>0 goto srchpoctfle: ! bypass bad date
    JRTSDATE = X$
  End If 
  If Not(PCT1[4]) Or ((JAPDATE - JRTSDATE) < FDAY) Goto SRCHPOCTFLE
  If PCT1[5]
    X$ = PCT1[5] Using "&&&&&&"
    Call DateToJulian(1,X$,X$,E) !\ If E Gosub ERR_SEARCH
	if e<>0 goto srchpoctfle: ! bypass bad date
    JPOSTDATE = X$
  End If 
  If Not(PCT1[5]) Or ((JAPDATE - JPOSTDATE) < FDAY) Goto SRCHPOCTFLE
  If P60$[19,19] = "Y" Or P60$[49,49] = "M" Or P60$[49,49] = "F" Or P60$[49,49] = "B"
    KEYPOH$ = " ",KEYPOH$
    KEYPOH$[1,6] = PCT1[2] Using "######"
    KEYPOH$[7,12] = PCT1[0] Using "######"
    Search #31,2,2;KEYPOH$,R[31],E \ If E > 1 Gosub ERR_SEARCH
    If Not(E)
      Read #31,R[31],248;APCLOSE;
      If Not(APCLOSE) Goto SRCHPOCTFLE
    End If 
  End If 
  Search #30,5,1;KEYPOCT$,R[30],E \ If E Gosub ERR_SEARCH
  KEYPOCT2$ = " ",KEYPOCT2$
  KEYPOCT2$[1,6] = PCT1[3] Using "######"
  KEYPOCT2$[7,8] = PCT3[1] Using "##"
  KEYPOCT2$[9,14] = PCT1[0] Using "######"
  KEYPOCT2$[15,18] = PCT1[1] Using "####"
  Search #30,5,2;KEYPOCT2$,R[30],E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #30,1,0;KEYPOCT$,R[30],E \ If E Gosub ERR_SEARCH
End If 
Goto SRCHPOCTFLE

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/la540.se!","")
Call programdump() 
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/la540.se!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End



OUTEND: Rem END

V$ = " 0" \ Search #15,2,1;V$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;L$; \ L$[51,51] = "1" \ L$[61,61] = "1"
Mat Write #15,R[15],2;L$;
OUTEND2: Close 
if eflag>0 let returnstatus=0
let spec1[9]=returnstatus
if rtrim$(message$)="" let message$="Complete" ! set the returnstatus 

else
	include "src/callmainerrnet.inc"
end try
End ! the whole program