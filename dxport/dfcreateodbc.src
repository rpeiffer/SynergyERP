!    dfcreateodbc.dl4 - program to create odbc profiles for xport based file definitions
!
!    "dfcreateodbc.bas" 1.0 6/7/2007
!
!    All rights reserved.    (C) Copyright 2007 by:
!    Dynamic Concepts, Inc.   Aliso Viejo, California USA
!
!    "@(#) dfcreateodbc.bas 1.0@(#)"
!
! loadsave -w -n 100,10 -o dfcreateodbc.dl4 src/dfcreateodbc.src
!
!This source code is free to use and duplicate with purchase of dL4
!license
!
! *declare dl4 intrinsic subs & functions
!
declare intrinsic sub dxget,dxset,dxsave,dxclose
Declare Intrinsic Function findchannel,DateUsing$,Trim$,replace$
Declare Intrinsic Sub StringSearch,FindF
!
External Lib "dfgeneral.lib"
Declare External Sub dfmainerr,dfsuberr,ReadSystemFile,Openfiles
declare external function GetProgramPath$
!
Declare Sub OpenSection,InputSection,InputCutUpdate,ProcessSection,CleanupField
Declare Function GetKeyName,MaskField$
!  
include "src/dffiles.bsh"
!
! **main procedure
!
dim DH. as FileDefHdr
dim DF. as FileDefFields
dim DK. as FileDefKey
Dim config. as config
!
dim optiondir$[60],buttonlist$[5,50],nextlist$[5,100]
!
Dim PathInc$[100],PathLib$[100],FileName$[50],CurFile$[50],BatFile$[100]
dim BegKey$[48],EndKey$[48],FileKey$[48],FieldKey$[48],DirKey$[48]
dim FileRec$[36],FieldRec$[50]
Dim e$[200],I8$[1]
dim tmp$[100],tmp1$[100],tmpold$[100],tmptext$[100],tmpkey$[48],tmpname$[50]
dim Dir1$[300],Dir2$[300],Dir3$[300],Dir4$[300],Dir5$[300]
dim Dir6$[300],Dir7$[300],Dir8$[300],Dir9$[300]
dim OldDir1$[300],OldDir2$[300],OldDir3$[300],OldDir4$[300],OldDir5$[300]
dim OldDir6$[300],OldDir7$[300],OldDir8$[300],OldDir9$[300]
dim codepath$[100],filepath$[100]
dim Blank$[100] \ Blank$=" ",Blank$
dim U$[100] \ U$="-",U$

dim nextCutDir$[100]

!
Dim 1%,C[20],FileMat[3],FieldMat[2],tmpcnt,tmp1
Dim 2%,tmp2
Dim 3%,tmp3
Dim 4%,tmp4
!
!
Try ! main try
!
!
!coming from xport button
try call dxget("u_filekey",begkey$) else let xport=0 !filename
if begkey$<>""
	endkey$=begkey$
	xport=1
end if
if xport=0
	;'cs';"Create ODBC Profile file(s) for file definition(s)"
	;""
	call InputCutUpdate()
	call InputSection() \ if errflag chain "" ! input beg/end files
end if
Call OpenSection() ! open files
!
! if we are coming from dynamicX default some items that
! would be input in "InputSection"
!
if xport
	!
	! PathInc$=config.odbcdir$  ! path for creating odbc profile file
	codepath$=config.odbcdir$  ! path for creating odbc profile file
	filepath$=config.filedir$  ! path were data files live
end if
  !
DoAnotherOne: !
FileKey$=BegKey$
FileRec=-2 
search >= #c[0],1;FileKey$
Do
	try read record #c[0],FileRec;DH.; else exit do
	if DH.FileName$[1,len(EndKey$)]>EndKey$ exit do
	!
	if lcase$(DH.Active$)="a" ! active file
		CurFile$=lcase$(rtrim$(DH.FileName$))! current file, used for file naming
		p1 = Pos(curfile$, = "/",-1) !last slash
		If p1 Let curfile$ = curfile$[p1 + 1]
		!
		c[11]=findchannel() ! chan for profile file
		!
		Call ProcessSection(I8$) ! create profile file
		!
	endif
	FileRec=-1 ! next file def record
loop
if cutUpdate
	call InputSection() \ if errflag chain "" ! input beg/end files
	goto DoAnotherOne:
end if
! close files
Close
!
if xport
	e$='fx',curfile$," ODBC Definition Profile file successfully generated!<br>File placed in ",CodePath$
	call dxset("s_msg",e$)
	buttonlist$[0]="Close"
	nextlist$[0]="close"
	call dxset("buttonlist",buttonlist$[])
	call dxset("nextlist",nextlist$[])
	try call dxget("s_view.optiondir",optiondir$) else let optiondir$="dxstd/"
	call dxset("output",optiondir$+"msg.html")
	call dxclose()
end if
Else ! main try
  ! error routine
	if xport
		if spc(8)<>10000 
			call dfsuberr(e$,spc(8),spc(10),msc$(2))
			!call programdump("")
		end if
		call dfmainerr(e$,spc(8),buttonlist$[],nextlist$[])
	else
		;"error";spc(8);" at line ";spc(10)
		stop
	end if
End Try
!
End
!
! ------------------------------------------------
Sub OpenSection()
!
Try
	! need to get filenames from dxsystem.txt
	!
	!read system file parameters
	Call ReadSystemFile(e$,config.)
	!
	! open files
	!
	Call openfiles(e$,config.,c[]) ! dxport files
	!
else
	if xport
		if spc(8)<>10000
			call dfsuberr(e$,Spc(8),Spc(10),Msc$(2))
			!call programdump("")
		end if
		error 10000
	else
		;"error";spc(8);" at line ";spc(10)
		stop
	end if
end try
!
End Sub ! opensection
!
! ------------------------------------------------
Sub InputCutUpdate()
!
try
	nextCutDir$ = "nextcut/odbc"
	cutUpdate = 0
	do
		print "Do you want to generate definitions to go out in next release? ";
		input ""tmp$ \ print "" \ tmp$ = lcase$(tmp$)
		if tmp$ = "y" cutUpdate = 1 \ exit do
		if tmp$ = "n" exit do
	loop
	call findf(nextCutDir$,e,tmp$)
	if not(e) ! directory not there
		print nextCutDir$+" directory does not exist!  aborting..."
		stop
	end if
	codepath$=tmp$+"/"
	filepath$="/u/serp/"
else
	;"error";spc(8);" at line ";spc(10)
	stop
end try
!
End Sub ! InputCutUpdate


!
! ------------------------------------------------
Sub InputSection()
!
try
	!
	BegInput:
	!
	if not(cutUpdate) 
		;""
		;"Enter Code Destination Path (/u/odbcdl4/db/erp_dev/) ";
		input ""tmp$
		! tmp$=Lcase$(tmp$)
		if tmp$="END" let errflag=1 \ exit sub
		if tmp$=":" or tmp$="n" goto BegInput
		If tmp$ codepath$=tmp$ else codepath$="/u/odbcdl4/db/erp_dev/"
		if codepath$[LEN(codepath$),LEN(codepath$)]<>"/" let codepath$=codepath$+"/"
		print ""
	end if
	print"Code Destination Path ";codepath$
	print ""
	if not(cutUpdate) 
		;""
		;"Enter File Home Path (/u/serpdevl/) ";
		input ""tmp$
		! tmp$=Lcase$(tmp$)
		if tmp$="END" let errflag=1 \ exit sub
		if tmp$=":" or tmp$="N" goto BegInput
		If tmp$ filepath$=tmp$ else filepath$="/u/serpdevl/"
		if filepath$[LEN(filepath$),LEN(filepath$)]<>"/" let filepath$=filepath$+"/"
		print ""
	end if
	print"File Home Path ";filepath$
	print ""
	!
	;"Enter File (ALL=All Files,<CR>=EXIT) ";
	input ""BegKey$
	BegKey$=Ucase$(BegKey$)
	if BegKey$="" let errflag=1 \ exit sub
	if BegKey$="ALL" let BegKey$ = ""
	;""
	;""
	if BegKey$ print "File ='";BegKey$;"'" else print "All Files"
	CorrInput:
	;""
	;"Correct <Y/N> ";
	input ""tmp$
	tmp$=Ucase$(tmp$)
	if tmp$="END" let errflag=1 \ exit sub
	if tmp$=":" or tmp$="N" goto BegInput
	if tmp$<>"Y" goto CorrInput
	if BegKey$ let EndKey$=BegKey$," " else let EndKey$="~"
	print""

else
	;"error";spc(8);" at line ";spc(10)
	stop
end try
!
End Sub ! inputsection
!
! ------------------------------------------------
Sub ProcessSection(I8$)
!
Try
	!
	! build profile file
	! FileName$=CurFile$
	! tmp$=PathInc$,FileName$,"!"
	FileName$=Replace$(CurFile$,".","_")
	tmp$=codepath$,FileName$,"!"
	build #c[11],+ tmp$
	tmp$=codepath$,FileName$
	modify tmp$+" <664>"
	;#c[11];"[FullISAMView]"
	;#c[11];"; File ID ";CurFile$;" ";DH.Desc$;"  generated ";DateUsing$(tim#(0),"MM/DD/YY")
	!  ;#c[11];"File=/u/1/";FileName$  
	;#c[11];"File=";filepath$;DH.userdef2$
	;#c[11];"[Record]"
	;#c[11];";  Field=<fldnam>,<pos>,<fmt>,<align>,<fill>{,<opts>}"
	!
        lastbyte = -1
	!
	FieldKey$=DH.FileName$ ! - ,DH.Version$
	FieldRec=-2
	search >= #c[1],1;FieldKey$
	do
		try read record #c[1],FieldRec;DF.; else exit do
		if DF.FileName$<>DH.FileName$ exit do
		if DF.Version$=DH.Version$ if lcase$(DF.Active$)<>"n"
			!
			position = df.position
			If df.position = -1
				position = lastbyte + 1 !default
			End If 
			If df.precision > 0
				lastbyte = position + df.precision - 1
			Else 
				If position / 2 <> Int(position / 2) Let position = position + 1 !numerics must start on even byte
				lastbyte = position + (Int(df.precision * -1) * 2) - 1
			End If 
			! set up text string with field info
			call CleanupField() ! removes special characters for field name
			tmptext$="Field=",tmpname$,",",str$(Position),","
			tmptext$=tmptext$,str$(abs(DF.Precision))
			if DF.Precision<0 let tmptext$=tmptext$,"%" ! numeric
			!align L,R, fill character, opts string
			if DF.Align$<>"" 
				tmptext$=tmptext$,",",DF.Align$   !L or R
			else if DF.Fillchar$<>"" or DF.Opts$<>""
				tmptext$=tmptext$,","
			end if 
			if DF.Fillchar$<>""
				tmptext$=tmptext$,",",DF.Fillchar$
			else if DF.Opts$<>""
				tmptext$=tmptext$,","
			end if
			if DF.Opts$<>""
				tmptext$=tmptext$,",",rtrim$(MaskField$(DF.Opts$)) ! align & fill not used
			endif
			;#c[11];tmptext$ ! write to text file
			!
		endif
		FieldRec=-1 ! next field defs record
	loop
	!
	! index definitions
	keycnt=0 \holdseq=0
	DirKey$=DH.FileName$ ! - ,DH.Version$
	DirRec=-2
	search >= #c[2],1;DirKey$
	do
		try read record #c[2],DirRec;DK.; else exit do
		if DK.FileName$<>DH.FileName$ exit do
		if DK.Version$=DH.Version$ 
			rcdstat=GetKeyName() ! gets name from field def
			if rcdstat ! field position not found
				e$="Can't find record position ",str$(DK.RcdPosition)," in ",DK.FileName$
				!
				print e$ \ exit do
			endif
			call CleanupField() ! puts DK.ShortDesc$ to tmpname$
			If DK.seq<>holdseq
				keycnt=keycnt+1
				;#c[11];"[Index";str$(DK.seq);"]"
				;#c[11];"Name=";"By";rtrim$(tmpname$);str$(DK.seq)
				if keycnt=1 print #c[11];";  KeyPart=<fldnam>,<pos>,<fmt>,<prefix>,<charset>,<opts>"
				holdseq=DK.seq
				startpos=0 ! starting position for new index
			End If
			tmptext$="KeyPart=",rtrim$(tmpname$),","
			tmptext$=tmptext$,str$(startpos),",",str$(DK.Precision)
			if DK.Prefix$<>"" 
				tmptext$=tmptext$,",''",DK.Prefix$,"''"   
			else if DK.Charset$<>"" or DK.Opts$<>""
				tmptext$=tmptext$,",''''"
			end if 
			if DK.Charset$<>""
				tmptext$=tmptext$,",''",DK.Charset$,"''"
			else if DK.Opts$<>""
				tmptext$=tmptext$,",''''"
			end if
			if DK.Opts$ let tmptext$=tmptext$,",",MaskField$(DK.Opts$)
			;#c[11];tmptext$
			startpos=startpos+DK.Precision ! starting position for next part of key
		endif
		DirRec=-1 ! next key defs record
	loop
	!
	close #c[11]
	!
else
	if xport
		if spc(8)<>10000
			call dfsuberr(e$,Spc(8),Spc(10),Msc$(2))
			!call programdump("")
		end if
		error 10000
	else
		;"error";spc(8);" at line ";spc(10)
		;" on file: ";filename$
		stop
	end if
end try
!
End Sub ! processsection
!
! ------------------------------------------------
function GetKeyName()
!
! gets DFfield defs record from DF key defs
!
Try
  !
	FieldKey$=DH.FileName$ ! - ,DH.Version$
	FieldRec=-2
	search >= #c[1],1;FieldKey$
	do
		try read record #c[1],FieldRec;DF.; else exit do
		if DF.FileName$<>DH.FileName$ exit do
		if DF.Version$=DH.Version$ 
			!
			! check key record description to field position
			if DF.Seq=DK.RcdPosition exit function 0
			!
		endif
		FieldRec=-1 ! next field defs record
	loop
	rcdstat=-1
else
	if xport
		if spc(8)<>10000
			call dfsuberr(e$,Spc(8),Spc(10),Msc$(2))
			!call programdump("")
		end if
		error 10000
	else
		;"error";spc(8);" at line ";spc(10)
		stop
	end if
end try
!
End function rcdstat ! getkeyname
!
! ------------------------------------------------
Sub CleanupField()
!
! Removes special characters in DF.ShortDesc$ and puts into tmpname$
!
Try
	!
	! tmp1$=ucase$(DF.ShortDesc$)
	tmp1$=ucase$(DF.VarName$)
	tmp1$=Replace$(tmp1$,"#","NO")
	tmp1$=Replace$(tmp1$,"&","AND")
	! tmp1$=Replace$(tmp1$,"$","DLRS")
	tmp1$=Replace$(tmp1$,"$","")
	tmp1$=Replace$(tmp1$,"%","PCT")
	For cnt=1 to len(tmp1$)
		if tmp1$[cnt,cnt]>" " if tmp1$[cnt,cnt]<"0" let tmp1$[cnt,cnt]=" "
		if tmp1$[cnt,cnt]>"9" if tmp1$[cnt,cnt]<"A" let tmp1$[cnt,cnt]=" "
		if tmp1$[cnt,cnt]>"Z" let tmp1$[cnt,cnt]=" "
	next cnt
	tmp1$=Replace$(tmp1$," ","_")
	if tmp1$[1,1]<"A" or tmp1$[1,1]>"Z" let tmpname$="SP" else tmpname$=""
	tmpname$=tmpname$,tmp1$
else
	if xport
		if spc(8)<>10000
			call dfsuberr(e$,Spc(8),Spc(10),Msc$(2))
			!call programdump("")
		end if
		error 10000
	else
		;"error";spc(8);" at line ";spc(10)
		stop
	end if
end try
!
End sub ! cleanupfield
!
! ------------------------------------------------
Function MaskField$(tmp1$)
!
! Properly format DF.Opts$
!
Try
	!
	! tmp1$=ucase$(DF.Opts$)
	tmp1$=Replace$(tmp1$,"(#","(''#")
	tmp1$=Replace$(tmp1$,"#)","#'')")
	! tmpname$=tmpname$,tmp1$
else
	if xport
		if spc(8)<>10000
			call dfsuberr(e$,Spc(8),Spc(10),Msc$(2))
			!call programdump("")
		end if
		error 10000
	else
		;"error";spc(8);" at line ";spc(10)
		stop
	end if
end try
!
End Function tmp1$ ! maskfield
!
! ------------------------------------------------
