!!>>> Program 550
!
! description  A/P Vendor Detail History
!
! loadsave -w -n 100,10 -o prog/dxport/550.dl4 src/550.src
!
include	"src/copyright.inc"	! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 23, 2003  11:08:39
Rem /w/papermaster/r2002//usr/acct/mary/work/r2002/ap/la550.src (univ2) [mary] {12453}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem LA550 A/P DETAIL HISTORY
Rem AUTHOR: MTK   MAR 24, 1987
Rem LAST UPDATE: 2/90 OPTION FOR VENDOR NAME SORT
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function OpenFile

!
!!Option Default Dialect IRIS1
!!If Err 0 Gosub ERR_ESCAPE
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
Dim 1%,C0[6],E,F,I,K,L,L9,M[1],N,P,X1,DIR,comd,pageflag
Dim 1%,Z9,2%,B9,K6$[14],K7$[14],K8$[30]
Dim 2%,D1,M1[8],R1,X,X2,A9,F9,F$[16],G9[3],G8$[2],R$[63],R2$[4],D9,D8[1]
Dim 2%,DIV[2],DIVFLAG,TOTFLAG,DT3[1],JDATE[5],COMP,PONUM
Dim 3%,M2[4],T9[15]
Dim J$[40],K1$[50],K2$[20],K3$[20],M$[12],M1$[10],M2$[4],P$[8],U5$[50],2%
Dim G9$[40],2%,K1[1],K2[1],K3,3%,T[4],T1[4],T2[4]
Dim T$[30],D$[25],X$[10],D8$[10],DIV$[30],K10$[30],I$[30]
Dim 2%,R[23],M9,M5[1],1%,M6,M7,3%,M8[2],B8[1],M5$[12],M6$[12]
Dim K4$[30],K5$[30],2%
Dim A$[30],KEYAPH$[40],K23$[40],POLINE$[131]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim	tmp$[800],tmp1$[800],tmp2$[500],tmp3$[500],tmp4$[500],SVENDOR$[14],EVENDOR$[14],comd$[5]
Dim	action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]
!
dim	Blank$[50] \ Blank$=" ",Blank$
dim	EndParam$[50] \	EndParam$="z",EndParam$
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim blockid$[100],msg$[100]

! Try call dxopen() Else Rem ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=INTCo
!Try
	Call dxsave(0,"/tmp/md550.txt!")
!else
!	rem
!end try
tRY Close #1 eLSE rEM ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Mat Read #1,88,16;F$; \ rOpen #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ rOpen #16,F$ ! acf
V8=0
MAXL = 60 
T$ = "INVC/MM/C            V/CPAY"
Call Time(D$)
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G8$[1,1] = intco Using "#"
g8$[2,2]=groupid$
K2$ = " 0"
Search #15,2,1;K2$,R[15],E
If E <>0
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto OUTend:
endif
Mat Read #15,R[15],2;R$;
F$ = R$[31,31],"/A80VM",G8$[1,2]\ Ropen #4,F$
K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E = 1 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '0' Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
K2$ = " ",K2$ \ K2$[3,6] = R2$
Search #16,2,1;K2$,R[16],E
If E = 1 
	eflag=eflag+1
	message$="Client "+k2$[3,6]+"Not On File. "
	goto outend:
endif
If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
Mat Read #1,51,18;C0;
!
For X = 2 To 3
  Read L
  Read #1,88,L;J$;
  Ropen #X,J$
Next X
Data "432","448"
!
Mat Read #1,51,18;C0;
If C0[4]<>0 
  J$ = COMP Using "2/APPOHH#" \ rOpen #23,J$
  J$ = COMP Using "2/APPOLH#" \ rOpen #24,J$
End If 
!Gosub L_7000
L_7000: Rem CHECK PRINTER TYPE
F = 0

!try
!	N = Chf(0) \ L9 = 55
!else
!	J8 = 99 \ L9 = 23
!end try
let j8=0 ! set to no browser ever
let l9=55
F = 0
DIVFLAG = 0
If C0[6]<>0
	F$ = R$[1,1],"/APDIV",G8$ \ Ropen #10,F$
endif
!!L_1000: 
L = 99 \ P = 0
A9 = 0
!
!
T$ = "INVC/MM/C            V/CPAY"

!
Call dxsave(0,"/tmp/md550.txt1!")
If J8 !	dx xml,	setup rstr$
  !<section>
  tmp$ = bsdel$,"550",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End	If 
!
let eflag=0
let message$=""
call dxget("POPTION",tmp$) \ Z9 = tmp$! PRINT OPTION:  1: VENDOR CODE   2: VENDOR NAME   E: END 
if z9<1 or z9>2
	let eflag=eflag+1
	let message$=message$+"Invalid Print Option. "
endif
call dxget("SVENDOR",SVENDOR$)
call dxget("EVENDOR",EVENDOR$)
k1=0;k1[1]=999999
If Z9 = 1 
	IF rtrim$(EVENDOR$)= "" Let EVENDOR$ = "999999"
	if rtrim$(evendor$)="zzzzzzzzzzzzzz" let EVENDOR$ = "999999"                    
	K1 = SVENDOR$ \ K1[1] = EVENDOR$
	If K1 < 0 or K1 > 999999 
		let eflag=eflag+1
		Let message$ =message$+ "Invalid starting vendor code, must be between 0 and 999999! "
		goto gettranopt:
	endif
	If K1[1] < 0 or K1[1] > 999999 
		let eflag=eflag+1
		Let message$ = message$+"Invalid ending vendor code, must be between 0 and 999999! "
		goto gettranopt:
	endif
	If K1[1] < K1 
		let eflag=eflag+1
		Let message$ = message$+"Ending Vendor Must be greater than Starting. "
		goto gettranopt:	
	endif
Else ! by vendor name
	if rtrim$(svendor$)="0" let svendor$=" ",svendor$
	if rtrim$(evendor$)= "999999" let EVENDOR$ = "zzzzzzzzzzzzzz"
	K6$ = rtrim$(ucase$(SVENDOR$)),Blank$
	K7$ = rtrim$(Ucase$(EVENDOR$)),EndParam$
	If K7$ < K6$ 
		let eflag=eflag+1
		Let message$ = message$+"Ending Vendor Must be greater than Starting. "
		goto gettranopt:
	endif
End if
gettranopt: ! 
call dxget("PRITRANS",tmp$) \ DIR = tmp$  !!PRINT TRANSACTIONS BY  1: purchasing vendor  2: paying vendor "; ! 2-3
if dir<1 or dir>2
	let eflag=eflag+1
	let message$=message$+"Invalid Print Transaction By Option. "
endif
If DIR = 1 Let DIR = 2 Else Let DIR = 3
call dxget("OPTIDESIR",tmp$) \ K3 = tmp$  !!enter option desired:  1: all  2: open only  3: paid only "
if k3<1 or k3>3
	let eflag=eflag+1
	let message$=message$+"Invalid Print Open/Paid Transaction Option. "
endif

call dxget("SDATE",tmp$) \ D8[0] = tmp$
if rtrim$(tmp$)="" let d8[0]=010170
call dxget("EDATE",tmp$) \ let d8[1]=tmp$ 
if rtrim$(tmp$)="" let d8[0]=123159
let jdate[0]=0;jdate[1]=999999
If D8[0] <> 0 
	J$ = D8[0] Using "&&&&&&"
	D8[0] = J$[5,6],J$[1,2],J$[3,4] \ X2 = D8[0]
	Gosub L_7820 
	If errflag<>0
		let eflag=eflag+1
		Let message$ = message$+ "Invalid starting date! " 
		goto getdivopt:
	endif
	JDATE[0] = X2
endif
if d8[1]<>999999
	J$ = D8[1] Using "&&&&&&"
	D8[1] = J$[5,6],J$[1,2],J$[3,4] \ X2 = D8[1]
	Gosub L_7820
	if errflag<>0
		let eflag=eflag+1
		Let message$ = message$+ "Invalid ending date! " 
		goto getdivopt:
	endif
	JDATE[1] = X2
endif
If JDATE[1] < JDATE[0] 
	let eflag=eflag+1
	Let message$ = message$+ "Ending date must be greater than starting! " 
	goto getdivopt:
endif


getdivopt: ! division 
let divflag=0;totflag=0
div[1]=0;div[2]=99
if c0[6]<>0
	call dxget("DIVFLAG",tmp$)
	IF tmp$ = "" Let DIVFLAG = 0 Else Let DIVFLAG = 99 !!print report by divisions (y/n)
	call dxget("SDIV",tmp$)	\ DIV[1] = tmp$
	if div[1]<0 or div[1]>99
		let eflag=eflag+1
		Let message$ =message$+ "Invalid starting division, must be between 0 and 99! "
		goto startprnt:	
	endif
	call dxget("EDIV",tmp$)	\ if tmp$ = "" Let DIV[2] = 99 else let DIV[2] = tmp$ 
	if div[2]<0 or div[2]>99
		let eflag=eflag+1
		Let message$ =message$+ "Invalid endif division, must be between 0 and 99! "
		goto startprnt:	
	endif

	call dxget("TOTFLAG",tmp$) \ if tmp$ =  "" Let TOTFLAG = 0 Else Let TOTFLAG = 99 !!Include consolidated division report (Y/N)
endif
!
Startprnt: ! startprint section
if eflag<>0 goto outend:
let pageflag=0
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If 
!
Call dxsave(0,"/tmp/md550.txt2!")
L_1730: if not(divflag) goto L_1900: ! 
K10$ = " ",K10$ \ K10$[1,2] = DIV[1] Using "##"
Search #10,2,1;K10$,R[10],E \ If Not(E) Goto L_1755
If E > 1 Gosub ERR_SEARCH
L_1745: Search #10,3,1;K10$,R[10],E \ If E = 2 Goto L_1770
If E Gosub ERR_SEARCH
L_1755: DIV[0] = K10$ \ If DIV[0] > DIV[2] Goto L_1770
Mat Read #10,R[10],12;DIV$;
Goto L_1900
!
L_1770: Rem END OF DIVISION RANGE
DIVFLAG = 0
If TOTFLAG<>0
	let totflag=0
	Goto L_1900
endif
	
Goto OUTEND
L_1900: 
!
If J8 ! browser option
  If DIR = 3 Let tmp$ = "PAYMENT VENDOR COD",fdel$,"PAYMENT VENDOR NAME",fdel$ Else tmp$ = ""
  tmp$ = tmp$, "VENDOR CODE",fdel$,"VENDOR NAME",fdel$
  tmp$ = tmp$, "REFERENCE#",fdel$
  tmp$ = tmp$, "TYP",fdel$
  If C0[6] Let tmp$ = tmp$, "DIV",fdel$
  tmp$ = tmp$, "P.O.#",fdel$
  tmp$ = tmp$, "INV DATE",fdel$
  tmp$ = tmp$, "DUE DATE",fdel$
  tmp$ = tmp$, "DIS DATE",fdel$
  tmp$ = tmp$, "INVOICE AMT",fdel$
  tmp$ = tmp$, "DISCOUNT",fdel$
  tmp$ = tmp$, "PAYMENT",fdel$
  tmp$ = tmp$, "BALANCE",fdel$
  tmp$ = tmp$, "CHECK#",fdel$
  tmp$ = tmp$, "CHK DATE",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
comd$ = "   " \ TMP_POS = 1
!
!!Print @0,23;'CL';"PRINTING...PLEASE WAIT...";
L = 99
! - Signal 3,0
K1$ = " ",K1$ \ K1$[1,6] = K1[0] Using "######"
If Z9 = 1 Goto L_2000
K8$ = K6$
L_1940: 
Search #4,3,2;K8$,R[4],E 
If E Goto L_9100
If K8$[1,Len(K7$)] > K7$ Goto L_9100
Read #4,R[4],268;D1;
K1 = D1 \ K1[1] = D1
K1$ = K1 Using "######"
L_2000: 
Search #2,3,DIR;K1$,R[2],E 
If Z9 = 2 If E Goto L_1940
If E Goto L_9100
Mat Read #2,R[2],16;M1;
Mat Read #2,R[2],52;M2;
If DIVFLAG If DIV[0] <> M1[8] Goto L_2000
If Z9 = 1
  If DIR <> 3
    If M1 > K1[1] Goto L_9100
  Else 
    If M2[4] > K1[1] Goto L_9100
  End If 
Else 
  If DIR <> 3
    If M1 <> K1 Goto L_1940
  Else 
    If M2[4] <> K1 Goto L_1940
  End If 
End If 
JDATE[2] = M1[1]
If JDATE[2] < JDATE[0] Goto L_2000
If JDATE[2] > JDATE[1] Goto L_2000
Mat Read #2,R[2],0;M;
If M > 3 Goto L_2000
If M[1] = 1 If K3 = 2 Goto L_2000
If M[1] = 0 If K3 = 3 Goto L_2000
If DIR = 3
  If PAYTO <> M2[4]
    Gosub L_3200 \ A9 = 0
    If PAYTO Gosub L_3300
    If PAYTO <> M2[4] Gosub L_3400
  End If 
  PAYTO = M2[4]
End If 
If A9 If A9 <> M1 Gosub L_3200
If A9 <> M1 Gosub L_3100
A9 = M1
Mat Read #2,R[2],4;M$;
Gosub L_5800
Gosub L_5000
Goto L_2000
!
L_3100: Rem GET VENDOR NAME
K2$ = " ",K2$ \ K2$[1,6] = M1 Using "######"
A$ = "VENDOR NOT ON FILE!!!"
Search #4,2,1;K2$,R[4],E
If E Goto L_3130
Mat Read #4,R[4],0;A$;
L_3130: If Not(J8) Print #0;" "
L = L + 1
Gosub L_5800
!
If J8  
  If DIR = 2 Let tmp2$ = "" !!rtrim$(G9$[1,40]),fdel$
  tmp1$ = tmp2$, M1 Using "######",fdel$,rtrim$(A$),fdel$
  Return
End if
!
Print #0; Using "######  ";M1;A$
Return 
!
L_3200: Rem VENDOR TOTAL PRINT
If J8
  For I = 0 To 4
    T9[I] = T9[I] + T[I]
    If DIR = 3 Let T2[I] = T2[I] + T[I]
    T[I] = 0
  Next I
  Return
End if
!
If Not(T[0]) And Not(T[1]) And Not(T[2]) And Not(T[3]) Return 
Gosub L_5800
Print #0;" "
Print #0;"** VENDOR TOTALS **";
Print #0; Using "----------.##"; Tab 56;T[0];
Print #0; Using "----------.##"; Tab 70;T[1];
Print #0; Using "----------.##"; Tab 84;T[2];
Print #0; Using "----------.##"; Tab 98;T[3];
For I = 0 To 4
  T9[I] = T9[I] + T[I]
  If DIR = 3 Let T2[I] = T2[I] + T[I]
  T[I] = 0
Next I
L = L + 1
Return 
!
L_3300: Rem PAY TO VENDOR TOTAL PRINT
If J8
  For I = 0 To 4
    T2[I] = 0
  Next I
  Return
End if
If Not(T2[0]) And Not(T2[1]) And Not(T2[2]) And Not(T2[3]) Return 
Gosub L_5800
Print #0;" "
Print #0;"** PAYMENT VENDOR TOTALS **";
Print #0; Using "----------.##"; Tab 56;T2[0];
Print #0; Using "----------.##"; Tab 70;T2[1];
Print #0; Using "----------.##"; Tab 84;T2[2];
Print #0; Using "----------.##"; Tab 98;T2[3];
For I = 0 To 4
  T2[I] = 0
Next I
Print #0;""
L = L + 1
Return
!
L_3400: Rem GET PAYTO VENDOR NAME
K2$ = " ",K2$ \ K2$[1,6] = M2[4] Using "######"
A$ = "PAYMENT VENDOR NOT ON FILE!!!"
Search #4,2,1;K2$,R[4],E
If Not(E)
  Mat Read #4,R[4],0;A$;
End If 
!
If J8
  tmp2$ = M2[4] Using "######",fdel$,rtrim$(A$),fdel$
  Return
End if
Print #0;"" \ L = L + 1
Gosub L_5800
Print #0; Using "######  ";"PAYMENT VENDOR: ";M2[4];A$
Return 
!
L_4000: Rem TOTAL PRINT
If J8 
  For I = 0 To 3 \ T9[I] = 0 \ Next I
  Return
End if
!
Gosub L_5800
Print #0;"\15\** GRAND TOTALS **";
Print #0; Using "----------.##"; Tab 56;T9[0];
Print #0; Using "----------.##"; Tab 70;T9[1];
Print #0; Using "----------.##"; Tab 84;T9[2];
Print #0; Using "----------.##"; Tab 98;T9[3];
For I = 0 To 3 \ T9[I] = 0 \ Next I
Print #0;"\14\";
Call dxsave(0,"/tmp/md550.txt4!")
Return 
!
L_5000: Rem PRINT LINE
If J8
  tmp$ = tmp1$, rtrim$(M$[1,12]),fdel$
  tmp$ = tmp$, T$[M * 3 - 2,M * 3],fdel$
  If C0[6] Let tmp$ = tmp$, M1[8] Using "###",fdel$
  If M1[7] Let tmp$ = tmp$, M1[7] Using "######",fdel$ Else Let tmp$ = tmp$,"",fdel$
  X2 = M1[1] \ Gosub L_7770 \ P$ = X$[1,8]
  tmp$ = tmp$, P$[1,8],fdel$
  X2 = M1[3] \ Gosub L_8900
  tmp$ = tmp$, P$[1,8],fdel$
  X2 = M1[4] \ Gosub L_8900
  tmp$ = tmp$, P$[1,8],fdel$
  tmp$ = tmp$, M2[0] Using "----------.##",fdel$
  T[0] = T[0] + M2[0] \ comd = 0
  If M2[2] Goto L_5150
  CL_5060: tmp$ = tmp$, M2[1] Using "----------.##",fdel$
  tmp$ = tmp$, M2[2] Using "----------.##",fdel$
  tmp$ = tmp$, (M2[0] - M2[1] - M2[2]) Using "----------.##",fdel$
  If M1[5] Let tmp$ = tmp$, M1[5] Using "######",fdel$ Else Let tmp$ = tmp$,"",fdel$
  X2 = M1[6] \ Gosub L_8900
  If M1[6] Let tmp$ = tmp$, P$[1,8] Else tmp$ = tmp$,""
  If M1[5] If Not(M2[2]) !! has check number but no payment
    If M[0] = 3 And Not(M[1]) !! manual check still open
      tmp$ = tmp$, "OPEN",fdel$
    Else 
      tmp$ = tmp$, "VOID",fdel$
    End If 
  Else
    tmp$ = tmp$,"",fdel$
  End If 
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  Print #0;M$[1,12];
  Print #0; Tab 13;T$[M * 3 - 2,M * 3];
  If C0[6] Print #0; Using "###"; Tab 17;M1[8];
  If M1[7] Print #0; Using "######"; Tab 21;M1[7];
  X2 = M1[1] \ Gosub L_7770 \ P$ = X$[1,8]
  Print #0; Tab 28;P$[1,8];
  X2 = M1[3] \ Gosub L_8900
  Print #0; Tab 37;P$[1,8];
  X2 = M1[4] \ Gosub L_8900
  Print #0; Tab 46;P$[1,8];
  Print #0; Using "----------.##"; Tab 56;M2[0];
  T[0] = T[0] + M2[0]
  If M2[2] Goto L_5150
  L_5060: Print #0; Using "----------.##"; Tab 70;M2[1];
  Print #0; Using "----------.##"; Tab 84;M2[2];
  Print #0; Using "----------.##"; Tab 98;(M2[0] - M2[1] - M2[2]);
  If M1[5] Print #0; Using "######"; Tab 112;M1[5];
  X2 = M1[6] \ Gosub L_8900
  If M1[6] Print #0; Tab 119;P$[1,8];
  If M1[5] If Not(M2[2]) ! has check number but no payment
    If M[0] = 3 And Not(M[1]) ! manual check still open
      Print #0; Tab 128;"OPEN";
    Else 
      Print #0; Tab 128;"VOID";
    End If 
  End If 
  Print #0;""
End if
!
T[1] = T[1] + M2[1]
T[2] = T[2] + M2[2]
T[3] = T[3] + (M2[0] - M2[1] - M2[2])
Gosub CHKMULTPO
Return 
!
L_5150: Rem GET DETAIL HISTORY ON PAYMENTS
F9 = 0 \ B8 = M2[0] - M2[3] \ B8[1] = M2[3]
K4$ = " ",K4$ \ K4$[1,6] = R[2] Using "######"
L_5165: 
Search #3,3,1;K4$,R[3],E
If E = 2 Goto L_5400
!!If E Gosub ERR_SEARCH
X2 = K4$[1,6]
If X2 <> R[2] Goto L_5400
Mat Read #3,R[3],0;M5; \ Mat Read #3,R[3],8;M6;
Mat Read #3,R[3],10;M5$; \ Mat Read #3,R[3],22;M7;
Mat Read #3,R[3],24;M6$; \ Mat Read #3,R[3],36;M8;
!!If M7 < 8 Goto L_5165
If M7 < 8 
  If J8 Let tmp3$ = tmp$,"",fdel$,"",fdel$,"",fdel$
  Goto L_5165
End if
If F9 Gosub L_5800
!!If M7 = 8 Goto L_5265
If M7 <> 8 
  If J8
    tmp3$ = tmp$, M8[1] Using "----------.##",fdel$
    tmp3$ = tmp3$, M8[0] - M8[1] Using "----------.##",fdel$
    B8 = B8 - (M8[0] - M8[1])
    T[1] = T[1] + M8[1]
    T[2] = T[2] + M8[0] - M8[1]
    tmp3$ = tmp3$, B8 Using "----------.##",fdel$
  Else
    Print #0; Using "----------.##"; Tab 70;M8[1];
    Print #0; Using "----------.##"; Tab 84;M8[0] - M8[1];
    B8 = B8 - (M8[0] - M8[1])
    T[1] = T[1] + M8[1]
    T[2] = T[2] + M8[0] - M8[1]
    Print #0; Using "----------.##"; Tab 98;B8;
  End if
Else 
  If J8 Let tmp3$ = tmp$,"",fdel$,"",fdel$,"",fdel$
End if
L_5265: 
If J8 
  tmp3$ = tmp3$,M6$[1,6],fdel$
Else
  Print #0; Tab 110;M6$[1,6];
End if 
K5$ = " ",K5$ \ K5$[1,6] = M8[2] Using "######"
K5$[7,18] = M6$[1,12] \ K5$[19,20] = M7 Using "##"
Search #2,2,1;K5$,R,E
If E = 1
  X2 = M6$[1,6] \ If M1[6] If X2 = M1[5] Let X2 = M1[6] \ Gosub L_8900 \ Goto L_5305
  Goto L_5315
End If 
!!If E Gosub ERR_SEARCH
Mat Read #2,R,20;M9;
X2 = M9 \ Gosub L_7770 \ P$ = X$[1,8]
L_5305: 
!
If J8
  tmp3$ = tmp3$, P$[1,8]
  If M7 = 8 Let tmp3$ = tmp3$, "VOID",fdel$ Else Let tmp3$ = tmp3$,"",fdel$
  call addtostr(e$,rstr$,tmp3$+rdel$)
  comd = 1
Else
  Print #0; Tab 118;P$[1,8];
  If M7 = 8 Print #0; Tab 127;"VOID";
End if
!
L_5315: If Not(J8) Print #0;""
F9 = 99
Goto L_5165
L_5400: If Not(F9) ! "GOTO L_5060:
  M2[1] = M2[3];M2[2] = M2[2] - M2[3]
  If J8 Goto CL_5060 Else Goto L_5060
End If 
T[3] = T[3] + B8
If C0[4] 
  If J8
    If Not(comd)
      tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
      tmp$ = tmp$,"",fdel$,"",fdel$
      call addtostr(e$,rstr$,tmp$+rdel$)
	End if
  End if
  Gosub CHKMULTPO
End if
Return 
!
CHKMULTPO: Rem check for multiple po numbers to print
If C0[4]
  POLINE$ = "";POS_ = 0
  KEYAPH$ = " ",KEYAPH$ \ KEYAPH$[1,6] = M1[0] Using "######"
  KEYAPH$[7,18] = M$[1,12] \ KEYAPH$[19,20] = M[0] Using "##"
  K23$ = " ",K23$;K23$[1,20] = KEYAPH$[1,20]
SEARCHAPPOH: Rem search for all po's applied
  Search #23,3,1;K23$,R[23],E 
  If E = 2 Goto ENDSEARCHAPPOH
  If KEYAPH$[1,20] <> K23$[1,20] Goto ENDSEARCHAPPOH
  PONUM = K23$[21,26]
  If PONUM <> M1[7] ! po number different
    If POLINE$ = "" Or POS_ > 121
      If POS_ > 121 Gosub PRNTPOLINE
      POLINE$ = " ",POLINE$
      If O1 <> 2
        POLINE$[3] = PONUM Using "Purchase Order(s): ######"
		If J8 Let tmp3$ = PONUM Using "PO ######" \ TMP_POS = 10 \ comd$ = "PO "
      Else 
        POLINE$[3] = PONUM Using "Debit Memo(s)    : ######"
		If J8 Let tmp3$ = PONUM Using "DM ######" \ TMP_POS = 10 \ comd$ = "DM "
      End If 
      POS_ = 28
    Else 
      POLINE$[POS_,POS_] = ","
      POLINE$[POS_ + 1,POS_ + 7] = PONUM Using " ######"
	  If J8 Let tmp3$[TMP_POS,TMP_POS+8] = tmp3$,comd$,PONUM Using "######",fdel$ \ TMP_POS = TMP_POS+9
      POS_ = POS_ + 8
    End If 
  End If 
  Goto SEARCHAPPOH
ENDSEARCHAPPOH: Rem end search appoh
  If POLINE$ <> "" Gosub PRNTPOLINE
End If 
Return 
!
PRNTPOLINE: Rem print poline for multiple po's
If J8
  If DIR = 3 Let tmp$ = "",fdel$,"",fdel$ ELse Let tmp$ = ""
  tmp$ = tmp$, "",fdel$,"",fdel$,"",fdel$
  If C0[6] Let tmp$ = tmp$, "",fdel$, "",fdel$ Else Let tmp$ = tmp$,"",fdel$
  for K = 1 to TMP_POS - 9
    tmp4$ = tmp$,tmp3$[k,k+8],fdel$
	tmp4$ = tmp4$,"",fdel$,"",fdel$,"",fdel$
	tmp4$ = tmp4$,"",fdel$,"",fdel$,"",fdel$
	tmp4$ = tmp4$,"",fdel$,"",fdel$,"",fdel$
	call addtostr(e$,rstr$,tmp4$+rdel$)
	K = K + 8 
  Next K
  TMP_POS = 1 \ comd$ = "   "
  POLINE$ = "" \ POS_ = 0
End if
If POLINE$ = "" Return 
Gosub L_5800
Print #0;POLINE$
POLINE$ = "";POS_ = 0
Return 
!
L_5800: 
!
If J8 Return
L = L + 1
If L < L9 Return 
If Not(P) If L9 = 23 Goto L_5825
If L9 <> 23 Goto L_5830
!!Input "\15\PRESS <CR> TO CONTINUE "J$
L_5825:!! Print 'CS'
L_5830: If P Print #0;"\14\";
P = P + 1
if p>900 and pageflag=0
	Call addtostr(e$,rstr$,esdel$) !end section
	 Message$="Report is still processing.  Check myreports later. "
	 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	 call addToStr(e$,rstr$,webstr$)
	 call setoutput(e$,rstr$)
  ! Call setoutput(e$,rstr$,2) !2 fl
	let pageflag=99
endif
Print #0;" "
Print #0; Tab 50;G9$[1,40]
Print #0;D$;
Print #0; Tab 50;"ACCOUNTS PAYABLE HISTORY";
If Z9 = 1 Print #0;" BY VENDOR CODE ";
If DIR <> 3
  If Z9 = 2 Print #0;" BY VENDOR NAME ";
Else 
  If Z9 = 1 Print #0;" BY PAYMENT VENDOR CODE ";
  If Z9 = 2 Print #0;" BY PAYMENT VENDOR NAME ";
End If 
Print #0; Tab 110;"PAGE";P
If DIVFLAG Print #0;DIV$[1,30];
If Not(D8) Let P$ = "00/00/00" \ Goto L_5885
X2 = D8 \ Gosub L_8900
L_5885: Print #0; Tab 50;"FROM ";P$[1,8];
X2 = D8[1] \ Gosub L_8900 \ Print #0;" TO ";P$[1,8]
Print #0;" "
Print #0;"REFERENCE#";
Print #0; Tab 12;"TYP";
If C0[6] Print #0; Tab 17;"DIV";
Print #0; Tab 22;"P.O.#";
Print #0; Tab 28;"INV DATE";
Print #0; Tab 37;"DUE DATE";
Print #0; Tab 46;"DIS DATE";
Print #0; Tab 58;"INVOICE AMT";
Print #0; Tab 75;"DISCOUNT";
Print #0; Tab 90;"PAYMENT";
Print #0; Tab 104;"BALANCE";
Print #0; Tab 112;"CHECK#";
Print #0; Tab 119;"CHK DATE";
Print #0;" "
L = 8
Print #0;"\15\";
Return 
!

!
!!NUM2DATE:
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return 
!
L_7770: Rem DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Let errflag = 1 \ Return 
X2 = X$[1,5] \ Return  !!Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
errflag = 1
Return 
!
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
!L_8700: Rem VENDOR NAME LOOK UP
!L_8715: E = 0
!Search #4,3,2;K2$,R1,E
!If Not(E) Goto L_8750
!!!If E <> 2 Gosub ERR_SEARCH
!!Print @5,6;'CL RB';"END OF FILE"
!!!Signal 3,15
!!!Print @5,6;'CL'
!!!Goto L_1000
!Goto OUTEND!!ADD
!L_8750: Mat Read #4,R1;A$;
!Read #4,R1,268;D1;
!!!Print @0,5;'CL';"VENDOR: ";
!L_8765: 
!!!Print Using "###### ";D1;A$[1,30];
!!!Print @50,5;'CL';"O.K.?  (Y/N/R/E) ";
!!!Input "" Len 1;F$
!!!If F$ = "E" Goto OUTEND
!!!If F$ = "R" Goto L_1000
!!!If F$ = "N" Goto L_8715
!!!If F$ <> "Y" Goto L_8765
!K1 = D1
!K1[1] = D1
!return
!
L_8900: Rem PUT DATE FROM X2 INTO P$
If X2 = 0 Let P$ = " ",P$
If X2 = 0 Return 
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_3200
Gosub L_4000
If DIVFLAG Goto L_1745
!!If L9 <> 23 Goto L_9120
!!Input "\15\PRESS <CR> TO CONTINUE "J$
!!L_9120: 
For K = 0 To 10
  T9[K] = 0
Next K
goto Outend:
!!Goto L_1000
!!Stop 
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/la550se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$   
Call Programdump()
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                                               
!
OUTEND: Rem EXIT PROGRAM
! dx close
if not (pageflag)
If j8 ! dx xml ! browser
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If
if not(j8)
	Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
	let returnstatus=0
	If Eflag>0
		ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
		tmp$=""
	Endif
	if not(eflag)
		returnstatus=0
		if message$="" let message$="Complete "
	endif

	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
	try Call dxclose() else rem
endif
endif
ELSE
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program

