Rem QVendScrn - Select Vendors for Quote Cost
Rem cct 159835 - Bosworth
Rem Part of the "Quote Management System"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 13, 2006  16:07:23
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/misc/qvendscrn.src (univ2) [txc] {52829}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
! loadsave -w -s -n 100,10 -o prog/dxport/qvendscrn src/qvendscrn.src
!
include "src/copyright.inc" ! dx
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String
Declare Intrinsic Sub Programdump
! Option Default Dialect IRIS1
! We're ONLY DOING DELETE HERE  (rec[0]=-199)
Enter REC[],H0[],L3[],L4[],IntCo
If Err 0 Gosub ERR_TRAP
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim ANS$[20],K1$[60],K2$[50],K3$[50],F$[16]
Dim L1$[20],L6$[60],VENDA$[30],QUM$[4]
Dim 1%,QLFAX,CNVTU[2],PFU1[20],UN[2],EUN[2],H4[2]
Dim 1%,ZLINE,ALTVEND,DLINE,FLAG,QLVSEL
Dim 2%,QLFAXDATE,L6[5],B[24],W2[9],QLVEND,DT3[1]
Dim 3%,QLCOST,S3[17],UNF[6],PFU2[6],A[33],A1[7]
Dim 3%,L7[12],R[99],CNVTA,AMOUNT,DCOST
Dim msg$[100]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
If REC[0] = -199 Goto STARTHERE
ALTVEND = 36
If Err 0 Rem
Close #ALTVEND
If Err 0 Gosub ERR_TRAP
Read #1,88,1568;F$;
Ropen #ALTVEND,F$
STARTHERE: Rem "
If REC[0] = -199 ! "qlv file may not be open
  F$ = "6/QVENDLN" + Str$(COID)
  Call FindF(F$,FOUND)
  If Not(FOUND) Goto OUTEXIT
  If Err 0 Rem
  Close #35
  If Err 0 Gosub ERR_TRAP
  Open #35,F$
  DELQLVONLY = 1
Else 
  DELQLVONLY = 0
  GOTO OUTEXIT ! ADDED TO PREVENT ANY OTHER USAGE!!!!!!!!!!!!!!!
End If 
NONSTOCK = 0;ZLINE = 0
If L3[0] = 1 Let NONSTOCK = 1
K1$ = " ",K1$;QLV = 0;QLCENT = 0;QLVCLSD = 0
K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
QLVDLOOP: Rem "
Search #35,3,1;K1$,R[35],E \ If E = 2 Goto CHEKQVLDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> H0[7] Goto CHEKQVLDONE
X2 = K1$[7,9] \ If X2 <> L3[2] Goto CHEKQVLDONE
If Not(DELQLVONLY)
  QLV = 1
  Gosub READ_QLV
  If QLCOST Let QLCENT = 1
  If QLVSEL Let QLVCLSD = 1
Else 
  Search #35,5,1;K1$,R[35],E \ If E Gosub ERR_SEARCH
  E = 3
  Search #35,1,0;K1$,R[35],E \ If E Gosub ERR_SEARCH
End If 
Goto QLVDLOOP
CHEKQVLDONE: Rem "done
If DELQLVONLY ! "whe're deleting (in mxline/mx287/mx281e)
  Close #35
  Goto OUTEXIT
End If 
R[8] = REC[8];R[11] = REC[11]
Mat Read #8,R[8],78;H4;
WHSE = H4[2]
Gosub READ_ROL
If L4[3] And L4[3] > 0 And L4[3] < 99 And Not(Fra(L4[3])) Let WHSE = L4[3]
QUM$ = " ",QUM$
If UN[2] = -1 Let QUM$ = "CWT "
If UN[2] = -2 Let QUM$ = "LOT "
If UN[2] > 0 Read #26,UN[2],10;QUM$;
Window Open @2,2; Size 73,20; Using "VENDORS FOR RFP"
Print 'CS';@0,0;"QVENDSCRN";
Print @0,2;"QUOTE";H0[7];@15,2;"LINE";L3[2]
Print @0,3;L1$[1,12];@15,3;L6$[1,30];@61,3;"/";QUM$;
If QLV Gosub SHO_LINES
If Not(QLV) Goto ADDQLV
QLVWHATNOW: Rem "
Print @0,Msc(34) - 2;'CE';"SELECT  #: vendor  A: add vendor  R: redisplay  E: exit  ";
Input Len 16384 + 6;""ANS$ \ Call String(1,ANS$)
If ANS$ = "E" Goto OUTEND
If ANS$ = "R" Gosub SHO_LINES \ Goto QLVWHATNOW
If ANS$ = "A" Goto ADDVEND
X2 = ANS$ \ If X2 Gosub EDTVEND
Goto QLVWHATNOW
EDTVEND: Rem "see if vendor there
K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
K1$[10] = X2 Using "######"
Search #35,2,1;K1$,R[35],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
QADDVEND: Rem "
  Print @0,Msc(34) - 2;'RB CE';"RECORD NOT FOUND! ADD VENDOR? (Y/N)  ";
  Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
  If ANS$ <> "Y" And ANS$ <> "N" Goto QADDVEND
  If ANS$ = "N" Return 
  VEND = X2 \ Gosub CHECKVEND \ Goto BADVEND
  Goto STARTVADD
Else 
  Gosub READ_QLV
  Print @0,6;'CE';
  DLINE = 6
  X2 = QLFAXDATE \ Gosub NUM2DATE
  VEND = QLVEND
  Gosub CHECKVEND \ VENDA$ = "VENDOR NOT FOUND!"
  Gosub SHODETAIL
End If 
QLLEDIT: Rem "
If Not(QLCOST)
  Print @0,Msc(34) - 2;'CE';"SELECT:  1: flag to fax  2: enter Cost  D: delete  E: end  ";
Else 
  Print @0,Msc(34) - 2;'CE';"SELECT:  S: select as Vendor for Quote  D: delete  E: end  ";
End If 
Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
If ANS$ = "E" Goto QLEDTDONE
If ANS$ = "S" And QLCOST Goto VEND2LINE
If ANS$ = "D" Goto DELVEND
FLD = ANS$
If FLD <> 1 And FLD <> 2 Goto QLLEDIT
On FLD Gosub EDT_FXFLAG,EDT_QLCOST
Goto QLLEDIT
QLEDTDONE: Rem "
Gosub WRITE_QLV
Goto QLVWHATNOW
EDT_FXFLAG: Rem "
If QLFAX = 1 And QLFAXDATE <> 0
  J7$ = "Vendor has had fax sent already!"
  Gosub ISERRMSG
  Return 
End If 
J5$ = "Enter Y to have faxing send this vendor a RFP"
J0$ = "6000 142 6";J1 = QLFAX
Gosub ISINPUT
QLFAX = J1
Return 
EDT_QLCOST: Rem "cost from vendor
J5$ = "Enter the Cost the Vendor has supplied in " + QUM$
J0$ = "34001155 6";J1 = DCOST
Gosub ISINPUT
DCOST = J1
CNVTU[0] = UN[2];CNVTU[1] = 0;CNVTU[2] = 2
CNVTA = J1 \ Gosub CONVERT
QLCOST = AMOUNT
Return 
DELVEND: Rem "delete this line
K3$ = " ",K3$;K3$ = H0[7] Using "######"
K3$[7] = L3[2] Using "###"
K3$[10] = QLVEND Using "######"
Search #35,2,1;K3$,R[35],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto QLVWHATNOW
Search #35,5,1;K3$,R[35],E \ If E Gosub ERR_SEARCH
E = 3
Search #35,1,0;K3$,R[35],E \ If E Gosub ERR_SEARCH
Print @0,Msc(34) - 2;'CE';"VENDOR DELETED!";
Signal 3,20
Print @0,6;'CE';
Goto QLVWHATNOW
VEND2LINE: Rem "selected as the vendor for the line
If QLVCLSD And Not(QLVSEL) ! "already selected a vendor
  Print @0,Msc(34) - 2;'CE';"A VENDOR WAS SELECTED FOR THIS QUOTE!";
  Print @0,Msc(34) - 2;"REPLACE WITH THIS VENDOR/COST? (Y/N)  ";
  Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
  If ANS$ <> "Y" And ANS$ <> "N" Goto VEND2LINE
  If ANS$ = "N" Goto VND2LINEDONE
  K3$ = " ",K3$;K3$ = H0[7] Using "######"
  K3$[7] = L3[2] Using "###"
FQLVS: Rem "
  Search #35,3,1;K3$,R[98],E \ If E = 2 Goto FQLVSDONE
  If E Gosub ERR_SEARCH
  X2 = K3$[1,6] \ If X2 <> H0[7] Goto FQLVSDONE
  X2 = K3$[7,9] \ If X2 <> L3[2] Goto FQLVSDONE
  Read #35,R[98],22;X1;
  If X1 Let X1 = 0
  Write #35,R[98],22;X1;
  Goto FQLVS
FQLVSDONE: Rem "
End If 
S3[14] = QLVEND
L7[7] = QLCOST
Mat Write #11,R[11],168;L7;
Mat Write #11,R[11],260;S3;
QLVSEL = 1
VND2LINEDONE: Rem "
Print @0,Msc(34) - 2;'CE';"VENDOR AND COST ADDED TO LINE";
Signal 3,15
Print @0,Msc(34) - 2;'CE';
Goto QLEDTDONE
SHO_LINES: Rem "display lines
Print @0,4;'CE';
Print @0,5;"VENDOR";@10,5;"NAME";@41,5;"RFP?";
Print @46,5;"DATE";@60,5;"COST";
DLINE = 5
K1$ = " ",K1$;K1$ = H0[7] Using "######"
K1$[7] = L3[2] Using "###"
QLVLOOP: Rem "
Search #35,3,1;K1$,R[35],E \ If E = 2 Goto SHOQLVDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> H0[7] Goto SHOQLVDONE
X2 = K1$[7,9] \ If X2 <> L3[2] Goto SHOQLVDONE
Gosub READ_QLV
X2 = QLFAXDATE \ Gosub NUM2DATE
VEND = QLVEND
Gosub CHECKVEND \ Goto QLVLOOP
DLINE = DLINE + 1
If DLINE > Msc(34) - 4
QLVMORE: Rem "
  Print @0,Msc(34) - 1;'CL';"-MORE- Select  <CR>: continue  E: end   ";
  Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
  If ANS$ = "E" Goto SHOQLVDONE
  If ANS$ <> "" Goto QLVMORE
  Print @0,6;'CE';
  DLINE = 6
End If 
Gosub SHODETAIL
Goto QLVLOOP
SHODETAIL: Rem "line detail
Print Using "######";@0,DLINE;VEND;@10,DLINE;VENDA$[1,30];
If QLVSEL Print @7,DLINE;"S";
If QLFAX Print @42,DLINE;"Y"; Else Print @42,DLINE;"N";
If QLFAXDATE Print @46,DLINE;X$[1,8];
If QLCOST
  CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2
  CNVTA = QLCOST \ Gosub CONVERT
  DCOST = AMOUNT
  Print Using "######.####";@55,DLINE;DCOST;
Else 
  DCOST = 0
End If 
Return 
SHOQLVDONE: Rem "done
Return 
ADDQLV: Rem "add lines for all poss vends
If NONSTOCK ! "only one option - the vendor on line
  If S3[14] <> 0 ! "only if one loaded
    VEND = S3[14] \ Gosub ADDQLVLINE
  End If 
Else ! "stock items
  VEND = S3[14] \ Gosub ADDQLVLINE
  R[3] = L4[0]
  Mat Read #3,R[3],156;B;
  VEND = B[24] \ Gosub ADDQLVLINE
  K2$ = L1$[1,12];K2$[13] = WHSE Using "##"
  Search #30,2,1;K2$,R[30],E \ If E > 1 Gosub ERR_SEARCH
  If E = 0
    Mat Read #30,R[30],38;W2;
    VEND = W2[3] \ Gosub ADDQLVLINE
  End If 
  K2$ = " ",K2$;K2$[1,12] = L1$[1,12]
ALTVLOOP: Rem "thru all alts for product
  Search #ALTVEND,3,1;K2$,R[36],E \ If E = 2 Goto ALTVDONE
  If E Gosub ERR_SEARCH
  If K2$[1,12] <> L1$[1,12] Goto ALTVDONE
  VEND = K2$[13,18] \ Gosub ADDQLVLINE
  Goto ALTVLOOP
ALTVDONE: Rem "
End If 
Gosub SHO_LINES
Goto QLVWHATNOW
READ_ROL: Rem "get other Line Info
Mat Read #11,R[11],56;L6;
Mat Read #11,R[11],80;L6$;
Mat Read #11,R[11],140;L1$;
Mat Read #11,R[11],168;L7;
Mat Read #11,R[11],250;UN;
Mat Read #11,R[11],260;S3;
Mat Read #11,R[11],446;EUN;
Mat Read #11,R[11],452;UNF;
Gosub L_30000
Return 
READ_QLV: Rem " (don't bother reading quote/line #)
Read #35,R[35],0;QLFAX;
Read #35,R[35],2;QLFAXDATE;
Read #35,R[35],6;QLCOST;
Read #35,R[35],12;QLVEND;
Read #35,R[35],22;QLVSEL;
Return 
WRITE_QLV: Rem "
Write #35,R[35],0;QLFAX;
Write #35,R[35],2;QLFAXDATE;
Write #35,R[35],6;QLCOST;
Write #35,R[35],12;QLVEND;
Write #35,R[35],16;H0[7];
Write #35,R[35],20;L3[2];
Write #35,R[35],22;QLVSEL;
Return 
ADDVEND: Rem "add a different Vendor
Print @0,6;'CE';
J5$ = "Enter Vendor #  Name  List Option or <CR>: end"
J0$ = "2 00 800 6";J1 = 0
Gosub ISINPUT
If J4$ = "" Goto QLVWHATNOW
Gosub VENDWIND
If J4$ = "" Goto ADDVEND
VEND = J$
STARTVADD: Rem "got vendor - add it
Gosub CHECKVEND \ Goto ADDVEND
Print @0,6;'CE';
Gosub ADDQLVLINE
DLINE = 6 \ Gosub SHODETAIL
Goto QLLEDIT
VENDWIND: Rem "call to Mxvend5
If J4$[1,1] >= "0" And J4$[1,1] <= "9" Return 
Call "MXVEND5",J4$
Return 
CHECKVEND: Rem "check if valid Vendor
K3$ = " ",K3$;K3$ = VEND Using "######"
Search #2,2,1;K3$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Return 
Mat Read #2,R[2],0;VENDA$;
Return 1
BADVEND: Rem "no such vendor
J7$ = "VENDOR NOT ON FILE!"
Gosub ISERRMSG
Goto QLVWHATNOW
ADDQLVLINE: Rem "
If Not(VEND) Return 
Gosub CHECKVEND \ Return 
K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
K1$[10] = VEND Using "######"
Search #35,2,1;K1$,R[35],E \ If E > 1 Gosub ERR_SEARCH
If E = 0 Return 
E = 2;R[35] = 0
Search #35,1,0;K1$,R[35],E \ If E Gosub ERR_SEARCH
Search #35,4,1;K1$,R[35],E \ If E Gosub ERR_SEARCH
QLFAX = 0;QLFAXDATE = 0;QLCOST = 0;QLVEND = VEND;QLVSEL = 0
Gosub WRITE_QLV
Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If ZLINE Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(NONSTOCK) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
OUTEND: Rem "done
Close #ALTVEND
Window Close 
OUTEXIT: Rem "exit without window
End 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
J0 = J0$[1,1]
J6 = J0$[2,2]
J2 = J0$[3,4]
J3 = J0$[5,6]
J4 = J0$[7,8]
J5 = J0$[9,10]
If J0 < 3 Let J2$ = " ",J2$
If J1$ = "" Let J1$[1,J3] = " ",J1$
If J0 >= 3 If J0 <= 4
  If J0 = 3 Let J2$ = "#",J2$
  If J0 = 4 Let J2$ = "-",J2$
  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
End If 
J1$[J3 + 1] = ""
If J0 < 3 Goto ISENTER
If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
If J0 <> 6
  If J0 = 5
    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
    J1$ = J9$[4,7],J9$[2,3],"  "
  Else 
    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
  End If 
End If 
ISENTER: Rem
If J5 < Msc(34) - 1
  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
End If 
Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
If Len(J4$) > J3
  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
End If 
J9$ = J4$
If Not(Len(J9$))
  If J0$[3,4] = "00"
    J9$ = J1$
  Else 
    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
  End If 
End If 
For J8 = 1 To Len(J9$)
  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
    Gosub ISERRMSG \ Goto ISENTER
  End If 
Next J8
On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
ISTYPE1: J$ = J0$[2,2],J$
If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
If J0 = 2 Let J$[1,Len(J9$)] = J9$
Goto ISOUT
ISTYPE3: Rem
J9 = 0
X1 = 0
For J8 = 1 To Len(J9$)
  If J0 = 4 And Not(X1)
    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
      X1 = 1
      Goto ISNCONT1
    End If 
  End If 
  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
  If J9$[J8,J8] = " " Goto ISNCONT1
  If Len(J0$) > 10
    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
  End If 
  If J9$[J8,J8] <> "." Goto ISNUMERR1
  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
  If J9 Goto ISNUMERR1
  J9 = 1
ISNCONT2: Rem
  X1 = 1
  If J9 Let J9 = J9 + 1
ISNCONT1: Rem
Next J8
If J0 = 5 Goto ISTYPE5
If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
ISDECERR: Gosub ISERRMSG \ Goto ISENTER
ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
If J9[1] = 0 Goto ISDTERR
On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
Goto ISDTERR
ISMO30: If J9[1] > 30 Goto ISDTERR
ISMO31: If J9[1] > 31 Goto ISDTERR
Goto ISDTOUT
ISMOFEB: If J9[1] > 29 Goto ISDTERR
If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
  If J9[1] > 28 Goto ISDTERR
End If 
ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
J$ = X$ \ J3 = 8 \ Goto ISOUT
ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
ISTYPE6: Call String(1,J9$)
If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
Gosub ISERRMSG \ Goto ISENTER
ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
ISERRMSG: X1 = Len(J7$)
Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
Print 'K1'; \ Window Close \ Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
Rem {begin rtn.error.s}
ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Goto ERR_MAIN
ERR_MAIN: Rem
! If Err 0 Rem
e$ = msg$
call programdump("tmp/beqvendscrn!","")
If Spc(8) <> 10000 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[])
End 
Rem {end rtn.error.s}