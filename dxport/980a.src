!>>> Program 980a
!
! description  set up rebate staging
!
! loadsave -w -n 100,10 -o prog/dxport/980a.dl4 src/980a.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2010  14:29:24
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/htberry.r10/ut980a.src (univ2) [valerie] {33454}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub DateToJulian,InpBuf,String,programdump
! Option Default Dialect IRIS1
Rem ut980a copy rebate file over to a work area
Com 1%,COST_LEV[3],COMM_LEV,Z9[9]
If Err 0 Gosub ERR_TRAP
Dim RCN$[70],VENDCNT$[50],RB$[12],SPUDA2$[30],M1$[40],CCREF$[20]
Dim K$[60],K1$[60],K2$[60],K3$[60],K4$[60],K5$[60]
Dim FKEY$[60],KEY1$[60],KEY2$[60]
Dim SPACE$[500],SCRATCH$[80],RETVAL$[512],Z2$[2],U5$[50]
Dim F$[20],P61$[256],MSGTXT$[75],VRCINFO$[60],KC$[60]
Dim 1%,RBUM[1],RB[2],RBWH,RBL1[1],URECFLAG,INCEXPIRED,RBWHSE
Dim 2%,RB1[5],RBMIN,RBCOM,CONTRACT,CC1[4],START_VENDOR,END_VENDOR,SDATE
Dim 2%,START_CONTRACT,END_CONTRACT,WORKCONT,JSDATE,JEDATE,JIDATE,JDATE[2]
Dim 2%,VCONTRACT,VINFO
Dim 3%,RCN3[3],RB3[6],RBN,RB5[2]
Dim K7$[50],V$[30]
! Window On 
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],message$[200],webstr$[500],msg$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Rem {end dim.rtn.input}
!call dxsave(0,"tmp/980ain.txt!")
SPACE$ = " ",SPACE$
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = "cntrl/cntrl" + Str$(COID)
Mat Read #1,61,0;P61$;
Mat Read #1,0,112;SDATE;
X2 = SDATE \ Gosub YMD2JUL \ X2 = tim(6)
JSDATE = X2
VINFO = 0 ! \ If P61$[82,82] = "Y" Let VINFO = 1 ! NOT ON SERP AT THIS TIME
For X = 2 To 7
  Read J \ If J = -1 Goto L_280
  Read #1,88,Abs(J);F$;
  If J >= 0 Open #X,F$ Else Ropen #X,F$
L_280: Next X
Data "-304","-320","-1","-1","-1","-2400"
F$ = "2/custcont" + Str$(COID)
Ropen #4,F$
F$ = "2/rebtnotes" + Str$(COID)
Ropen #5,F$
F$ = "3/stgrbheader" + Str$(COID)
try ! as may not be there
	Open #12,F$
Else
	msfle=1
End try
F$ = "3/stgrbdetail" + Str$(COID)
try ! as may not be there
	Open #13,F$
Else
	msfle=2
End try
F$ = "2/stgrbcustcnt" + Str$(COID)
try ! as may not be there
	Open #14,F$
Else
	msfle=3
End try
F$ = "2/stgrbnotes" + Str$(COID)
try ! as may not be there
	Open #15,F$
Else
	msfle=4
End try
If VINFO ! vendor info file used
  F$ = "3/rbtvinfo" + Str$(COID)
  Ropen #6,F$
  F$ = "3/stgrbvinfo" + Str$(COID)
  try ! as may not be there
	Open #16,F$
  Else
	msfle=5
  End try
End If 
if msfle goto Nostgfle
START_HERE: Rem all starts
START_VENDOR = 0
END_VENDOR = 999999
START_CONTRACT = 0
END_CONTRACT = 999999
!Gosub DISPLAY_SCREEN
INPUTS: Rem
!Print @0,23;'CE';"Enter #:field to edit  S: save defaults  C: begin copy or  E: exit ";
!Input Len 16384 + 3;""J$ \ Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "C" Goto BEGIN_COPY
!If J$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
!  Input Len 16384 + 1;""Z2$
!  Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "progdfltw","980a","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL'
!End If 
!If J$ = "" Goto INPUTS
!X = J$
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On X Gosub VEND_RANGE,CONTR_RANGE,EXPIREDREBATES
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Goto INPUTS
VEND_RANGE: Rem
GET_START_VEND: Rem
!J0$ = "3000063507-"
!J5$ = "Enter the starting vendor code maximum 999999"
!J1 = START_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_START_VEND
call dxget("SVEND",tmp$)
IF RTRIM$(tmp$)="" let tmp$=Str$(START_VENDOR)
j1=tmp$
START_VENDOR = J1
GET_END_VEND: Rem
!J0$ = "3000065507-"
!J5$ = "Enter the ending vendor code maximum 999999"
!J1 = END_VENDOR
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"LAVEND" \ Goto GET_END_VEND
call dxget("EVEND",tmp$)
IF RTRIM$(tmp$)="" let tmp$=Str$(END_VENDOR)
J1=tmp$
END_VENDOR = J1
If END_VENDOR < START_VENDOR
  !Gosub BAD_RANGE
  Message$="INVALID VENDOR RANGE!"
  Goto ERR_MSG ! VEND_RANGE
End If 
!RETVAL$[1,6] = START_VENDOR Using "######"
!RETVAL$[7,12] = END_VENDOR Using "######"
!Return 
CONTR_RANGE: Rem ------------------------------------
CONTR_RANGE_START: Rem
!J0$ = "3000063508=/"
!J5$ = "Enter the starting contract number maximum 999999 or /= for lookup"
!J1 = START_CONTRACT
!Gosub ISINPUT
!If J4$[1,1] = "/" Or J4$[1,1] = "="
!  CHKCONTRACT = 0
!  Gosub L_5200
!  If CHKCONTRACT
!    J1 = CHKCONTRACT
!    Print @35,8;J$[1,6]
!  Else 
!    Goto CONTR_RANGE_START
!  End If 
!End If 
call dxget("SCONTR",tmp$)
IF RTRIM$(tmp$)="" let tmp$=Str$(START_CONTRACT)
J1=tmp$
START_CONTRACT = J1
CONTR_RANGE_END: Rem
!J0$ = "3000065508=/"
!J5$ = "Enter the ending contract number maximum 999999 or /= for lookup"
!J1 = END_CONTRACT
!Gosub ISINPUT
!If J4$[1,1] = "/" Or J4$[1,1] = "="
!  CHKCONTACT = 0
!  Gosub L_5200
!  If CHKCONTRACT
!    J1 = CHKCONTRACT
!    Print @55,8;J$[1,6]
!  Else 
!    Goto CONTR_RANGE_END
!  End If 
!End If 
call dxget("ECONTR",tmp$)
IF RTRIM$(tmp$)="" let tmp$=Str$(End_Contract)
j1=tmp$
END_CONTRACT = J1
If END_CONTRACT < START_CONTRACT
  !Gosub BAD_RANGE
  MESSAGE$="INVALID CONTRACT RANGE"
  Goto ERR_MSG ! CONTR_RANGE
End If 
!RETVAL$[13,18] = START_CONTRACT Using "######"
!RETVAL$[19,24] = END_CONTRACT Using "######"
!Return 
EXPIREDREBATES: Rem do we include expired rebateso
!J0$ = "6 00013509"
!J5$ = "Enter Y or N  "
!J1 = INCEXPIRED \ Gosub ISINPUT
call dxget("INCEXPD",tmp$)
j1=0 \ if UCase$(Trim$(tmp$))="Y" let j1=1
INCEXPIRED = J1
!If INCEXPIRED Let RETVAL$[25,25] = "Y" Else Let RETVAL$[25,25] = "N"
!Return 
! ALSO OVERWRITE EXISTING!
call dxget("OVRWRTE",tmp$)
ovrwrt=0 \ if UCase$(Trim$(tmp$))="Y" let ovrwrt=1
BEGIN_COPY: Rem let's start copying shall we
numcpy=0
K$ = " ",K$ ! \ K$ = ""
COPY_LOOP: Rem start with header
Search #2,3,1;K$,R2,E
If E GOTO OUTEND
!  Input @0,22;'CL';"Update complete press <CR> to continue ";J$
!  Goto START_HERE
!End If 
CH_RBHEAD = 2;REC_RBHEAD = R2
Gosub READ_REBATE_HEADER
If RCN3[0] < START_CONTRACT Goto COPY_LOOP
If RCN3[0] > END_CONTRACT Goto COPY_LOOP
If RCN3[3] < START_VENDOR Goto COPY_LOOP
If RCN3[3] > END_VENDOR Goto COPY_LOOP
If Not(INCEXPIRED)
  Gosub CONVERT_RCN3DATES
  If RCN3[2] If JSDATE > JDATE[2] Goto COPY_LOOP
End If 
! Print @10,10;'CL';"contract ";K$
K1$ = K$
Search #12,2,1;K1$,R12,E
If E If E > 1 Gosub ERR_SEARCH
WORKCONT = K$
If Not(E)
WHAT_TO_DO: Rem
  J$ = ""
  !Print @0,11;"This contract is already in work area Skip or Overwrite (S/O) ";
  !Input Len 16384 + 1;""J$ \ Call String(1,J$)
  !If J$ <> "S" If J$ <> "O" Goto WHAT_TO_DO
  If not(Ovrwrt) Goto COPY_LOOP
  If Ovrwrt ! J$ = "O"
    WORKCONT = K1$
    Gosub CLEAR_OUT_WORKAREA
  End If 
End If 
If VINFO ! they are using the vinfo file
  FKEY$ = " ",FKEY$
  FKEY$ = WORKCONT Using "######"
COPY_VINFO_LOOP: Rem go through rebate notest
  Search #6,3,1;FKEY$,R6,E
  If E Goto COPY_CUSTCONT
  WORK = FKEY$[1,6]
  If WORKCONT <> WORK Goto COPY_CUSTCONT
  CH_RBVINFO = 6;REC_RBVINFO = R6
  Gosub READ_REBATE_VINFO
  E = 2
  Search #16,1,0;FKEY$,R16,E \ If E Gosub ERR_SEARCH
  CH_RBVINFO = 16;REC_RBVINFO = R16
  Gosub WRITE_REBATE_VINFO
  Search #16,4,1;FKEY$,R16,E \ If E Gosub ERR_SEARCH
  Goto COPY_VINFO_LOOP
End If 
COPY_CUSTCONT: Rem go through the customer contract file
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
COPY_CUSTCONT_LOOP: Rem go through customer contract first
Search #4,3,1;FKEY$,R4,E
If E Goto COPY_REBATE_NOTES
WORK = FKEY$[1,6]
If WORKCONT <> WORK Goto COPY_REBATE_NOTES
CH_RBCUST = 4;REC_RBCUST = R4
Gosub READ_REBATE_CUSTOMER
E = 2
Search #14,1,0;FKEY$,R14,E \ If E Gosub ERR_SEARCH
CH_RBCUST = 14;REC_RBCUST = R14
Gosub WRITE_REBATE_CUSTOMER
KEY1$ = FKEY$[7,12] + FKEY$[1,6]
Search #14,4,2;KEY1$,R14,E \ If E Gosub ERR_SEARCH
Search #14,4,1;FKEY$,R14,E \ If E Gosub ERR_SEARCH
Goto COPY_CUSTCONT_LOOP
COPY_REBATE_NOTES: Rem let's got through notes
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
COPY_NOTE_LOOP: Rem go through rebate notest
Search #5,3,1;FKEY$,R5,E
If E Goto COPY_REBATE_DETAIL
WORK = FKEY$[1,6]
If WORKCONT <> WORK Goto COPY_REBATE_DETAIL
CH_RBNOTE = 5;REC_RBNOTE = R5
Gosub READ_REBATE_NOTES
E = 2
Search #15,1,0;FKEY$,R15,E \ If E Gosub ERR_SEARCH
CH_RBNOTE = 15;REC_RBNOTE = R15
Gosub WRITE_REBATE_NOTES
Search #15,4,1;FKEY$,R15,E \ If E Gosub ERR_SEARCH
Goto COPY_NOTE_LOOP
COPY_REBATE_DETAIL: Rem now go through the detail
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
COPY_DETAIL_LOOP: Rem go through customer contract first
Search #3,3,1;FKEY$,R3,E
If E Goto COPY_REBATE_HEADER
WORK = FKEY$[1,6]
If WORKCONT <> WORK Goto COPY_REBATE_HEADER
CH_RBDETL = 3;REC_RBDETL = R3
Gosub READ_REBATE_DETAIL
E = 2
Search #13,1,0;FKEY$,R13,E \ If E Gosub ERR_SEARCH
CH_RBDETL = 13;REC_RBDETL = R13
Gosub WRITE_REBATE_DETAIL
KEY1$ = FKEY$[7,18] + FKEY$[1,6]
Search #13,4,2;KEY1$,R13,E \ If E Gosub ERR_SEARCH
KEY1$ = " ",KEY1$
KEY1$[1,6] = RB1[1] Using "######"
KEY1$[7] = FKEY$
Search #13,4,3;KEY1$,R13,E \ If E Gosub ERR_SEARCH
Search #13,4,1;FKEY$,R13,E \ If E Gosub ERR_SEARCH
Goto COPY_DETAIL_LOOP
COPY_REBATE_HEADER: Rem now to the header
FKEY$ = K$
E = 2
Search #12,1,0;FKEY$,R12,E \ If E Gosub ERR_SEARCH
CH_RBHEAD = 12;REC_RBHEAD = R12
Gosub WRITE_REBATE_HEADER
KEY1$ = " ",KEY1$
KEY1$ = RCN3[3] Using "######"
KEY1$[7] = FKEY$
Search #12,4,4;KEY1$,R12,E \ If E Gosub ERR_SEARCH
If VENDCNT$[1,20] <> SPACE$[1,20]
  KEY1$ = " ",KEY1$
  KEY1$[1,6] = RCN3[3] Using "######"
  KEY1$[7,26] = VENDCNT$[1,20]
  KEY1$[27] = FKEY$
  Search #12,4,5;KEY1$,R12,E \ If E Gosub ERR_SEARCH
End If 
KEY1$ = " ",KEY1$
KEY1$[1,6] = WORKCONT Using "######"
COPY_CUSTDIR_LOOP: Rem work on dirs 2 and 3
Search #2,3,3;KEY1$,R2,E
If E Goto COPY_REBATE_DIR1
If KEY1$[1,6] <> FKEY$[1,6] Goto COPY_REBATE_DIR1
Search #12,4,3;KEY1$,R12,E \ If E Gosub ERR_SEARCH
KEY2$ = " ",KEY2$
KEY2$ = KEY1$[7,12] + KEY1$[1,6]
Search #12,4,2;KEY2$,R12,E
Goto COPY_CUSTDIR_LOOP
COPY_REBATE_DIR1: Rem let's get rid of it!
Search #12,4,1;FKEY$,R12,E \ If E Gosub ERR_SEARCH
numcpy=numcpy+1
Goto COPY_LOOP
DISPLAY_SCREEN: Rem DISPLAY INPUT SCREEN
!Call "progdflt","980a","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$[1,6] = "     0"
!  RETVAL$[7,12] = "999999"
!  RETVAL$[13,18] = "      0"
!  RETVAL$[19,24] = "999999"
!  RETVAL$[25,25] = "N"
!  Call "progdfltw","980a","",77,RETVAL$,URECFLAG
!End If 
!Print @0,0;'CS ED';"-ut980a-";@30,0;"REBATE COPY UTILITY";
!Print @1,2;'CL BD';"Copy rebate header, lines, notes and customers to stage area";'ED';
!Print @35,5;'BR';"STARTING";@55,5;"ENDING";'ER';'BD';
!Print @1,7;"    VENDOR CODE";
!Print @1,8;"    CONTRACT NUMBER";
!Print @1,9;"    INCLUDE EXPIRED CONTRACTS ?";
!Print @0,7;" 1> ";@0,8;" 2> ";@0,9;" 3> ";
!START_VENDOR = RETVAL$[1,6]
!END_VENDOR = RETVAL$[7,12]
!START_CONTRACT = RETVAL$[13,18]
!END_CONTRACT = RETVAL$[19,24]
!INCEXPIRED = 0
!If RETVAL$[25,25] = "Y" Let INCEXPIRED = 1
!Print Using "######";@35,7;START_VENDOR;@55,7;END_VENDOR;
!Print Using "######";@35,8;START_CONTRACT;@55,8;END_CONTRACT;
!If INCEXPIRED
!  Print @35,9;"Y"
!Else 
!  Print @35,9;"N"
!End If 
Return 

READ_REBATE_HEADER: Rem
Mat Read #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Read #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Read #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
READ_REBATE_DETAIL: Rem
Mat Read #CH_RBDETL,REC_RBDETL,0;RB$
Mat Read #CH_RBDETL,REC_RBDETL,12;RB1
Mat Read #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Read #CH_RBDETL,REC_RBDETL,40;RB
Mat Read #CH_RBDETL,REC_RBDETL,46;RB3
Mat Read #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Read #CH_RBDETL,REC_RBDETL,118;RBWH;
Read #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Read #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Read #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
READ_REBATE_CUSTOMER: Rem
Mat Read #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Read #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
READ_REBATE_NOTES: Rem
Mat Read #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Read #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
READ_REBATE_VINFO: Rem
Mat Read #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Read #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Read #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
WRITE_REBATE_HEADER: Rem
Mat Write #CH_RBHEAD,REC_RBHEAD,0;RCN3;
Mat Write #CH_RBHEAD,REC_RBHEAD,24;RCN$;
Mat Write #CH_RBHEAD,REC_RBHEAD,94;VENDCNT$
Return 
WRITE_REBATE_DETAIL: Rem
Mat Write #CH_RBDETL,REC_RBDETL,0;RB$
Mat Write #CH_RBDETL,REC_RBDETL,12;RB1
Mat Write #CH_RBDETL,REC_RBDETL,36;RBUM
Mat Write #CH_RBDETL,REC_RBDETL,40;RB
Mat Write #CH_RBDETL,REC_RBDETL,46;RB3
Mat Write #CH_RBDETL,REC_RBDETL,88;SPUDA2$
Mat Write #CH_RBDETL,REC_RBDETL,118;RBWH;
Write #CH_RBDETL,REC_RBDETL,120;RBN;
Mat Write #CH_RBDETL,REC_RBDETL,126;RBL1;
Mat Write #CH_RBDETL,REC_RBDETL,138;RB5;
Return 
WRITE_REBATE_CUSTOMER: Rem
Mat Write #CH_RBCUST,REC_RBCUST,0;CC1;
Mat Write #CH_RBCUST,REC_RBCUST,20;CCREF$;
Return 
WRITE_REBATE_NOTES: Rem
Mat Write #CH_RBNOTE,REC_RBNOTE,0;CONTRACT;
Mat Write #CH_RBNOTE,REC_RBNOTE,4;M1$;
Return 
WRITE_REBATE_VINFO: Rem
Mat Write #CH_RBVINFO,REC_RBVINFO,0;VCONTRACT;
Mat Write #CH_RBVINFO,REC_RBVINFO,4;RBWHSE;
Mat Write #CH_RBVINFO,REC_RBVINFO,6;VRCINFO$;
Return 
CLEAR_OUT_WORKAREA: Rem
If VINFO ! using vendor info file
  FKEY$ = " ",FKEY$
  FKEY$ = WORKCONT Using "######"
DEL_VINFO_LOOP: Rem
  Search #16,3,1;FKEY$,R16,E
  If E Goto DEL_CUSTCONT
  WORK = FKEY$[1,6]
  If WORK <> WORKCONT Goto DEL_CUSTCONT
  Search #16,5,1;FKEY$,R16,E
  E = 3
  Search #16,1,0;FKEY$,R16,E \ If E Gosub ERR_SEARCH
  Goto DEL_VINFO_LOOP
End If 
DEL_CUSTCONT: Rem clear out contractfile
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
DEL_CUSTCONT_LOOP: Rem go through customer contract
Search #14,3,1;FKEY$,R14,E
If E Goto DEL_REBATE_NOTES
WORK = FKEY$[1,6]
If WORKCONT <> WORK Goto DEL_REBATE_NOTES
KEY1$ = FKEY$[7,12] + FKEY$[1,6]
Search #14,5,2;KEY1$,R,E
Search #14,5,1;FKEY$,R14,E \ If E Gosub ERR_SEARCH
E = 3
Search #14,1,0;FKEY$,R14,E \ If E Gosub ERR_SEARCH
Goto DEL_CUSTCONT_LOOP
DEL_REBATE_NOTES: Rem let's got through notes
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
DEL_NOTE_LOOP: Rem go through rebate notest
Search #15,3,1;FKEY$,R15,E
If E Goto DEL_REBATE_DETAIL
WORK = FKEY$[1,6]
If WORKCONT <> WORK Goto DEL_REBATE_DETAIL
Search #15,5,1;FKEY$,R15,E \ If E Gosub ERR_SEARCH
E = 3
Search #15,1,0;FKEY$,R15,E \ If E Gosub ERR_SEARCH
Goto DEL_NOTE_LOOP
DEL_REBATE_DETAIL: Rem now the detail records
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
DEL_DETAIL_LOOP: Rem go through customer contract first
Search #13,3,1;FKEY$,R13,E
If E Goto DEL_REBATE_HEADER
WORK = FKEY$[1,6]
If WORKCONT <> WORK Goto DEL_REBATE_HEADER
Mat Read #13,R13,12;RB1
KEY1$ = FKEY$[7,18] + FKEY$[1,6]
Search #13,5,2;KEY1$,R,E
KEY1$ = " ",KEY1$
KEY1$[1,6] = RB1[1] Using "######"
KEY1$[7] = FKEY$
Search #13,5,3;KEY1$,R,E
Search #13,5,1;FKEY$,R13,E \ If E Gosub ERR_SEARCH
E = 3
Search #13,1,0;FKEY$,R13,E \ If E Gosub ERR_SEARCH
Goto DEL_DETAIL_LOOP
DEL_REBATE_HEADER: Rem not the header
FKEY$ = " ",FKEY$
FKEY$ = WORKCONT Using "######"
Search #12,2,1;FKEY$,R12,E \ If E Gosub ERR_SEARCH
CH_RBHEAD = 12
REC_RBHEAD = R12
Gosub READ_REBATE_HEADER
KEY1$ = " ",KEY1$
KEY1$ = RCN3[3] Using "######"
KEY1$[7] = FKEY$
Search #12,5,4;KEY1$,R,E
If VENDCNT$[1,20] <> SPACE$[1,20]
  KEY1$ = " ",KEY1$
  KEY1$[1,6] = RCN3[3] Using "######"
  KEY1$[7,26] = VENDCNT$[1,20]
  KEY1$[27] = FKEY$
  Search #12,5,5;KEY1$,R,E
End If 
KEY1$ = " ",KEY1$
KEY1$[1,6] = WORKCONT Using "######"
DEL_CUSTDIR_LOOP: Rem work on dirs 2 and 3
Search #12,3,3;KEY1$,R,E
If E Goto DEL_REBATE_DIR1
If KEY1$[1,6] <> FKEY$[1,6] Goto DEL_REBATE_DIR1
Search #12,5,3;KEY1$,R,E
KEY2$ = " ",KEY2$
KEY2$ = KEY1$[7,12] + KEY1$[1,6]
Search #12,5,2;KEY2$,R,E
Goto DEL_CUSTDIR_LOOP
DEL_REBATE_DIR1: Rem let's get rid of it!
Search #12,5,1;FKEY$,R12,E \ If E Gosub ERR_SEARCH
E = 3
Search #12,1,0;FKEY$,R12,E \ If E Gosub ERR_SEARCH
Return 
CONVERT_RCN3DATES: Rem "Conver to Julian
X2 = RCN3[1] \ Gosub YMD2JUL \ X2 = 0
JDATE[1] = X2
X2 = RCN3[2] \ Gosub YMD2JUL \ X2 = 0
JDATE[2] = X2
Return 

YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
if x2<=0 let e=1 \ return
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If X2 = 0 Let X$ = "NONE    "
Return 
L_3500: Rem FIND VENDOR
K7$ = " ",K7$
K7$[1,6] = RCN3[3] Using "######"
Search #7,2,1;K7$,R7,E
If E > 1 Gosub ERR_SEARCH
V$ = " ",V$;V$[1,30] = "VENDOR NOT ON FILE !!! "
If Not(E)
  Mat Read #7,R7,0;V$;
End If 
Return 
L_5200: Rem LIST CONTRACTS
Return ! not available - web
!CLINE = 0;NUM = J4$[2]
!Window Open @2,5; Size 75,19; Using "CONTRACT LISTING"
!DIR = 1
!If J4$[1,1] = "=" Let DIR = 4
!If J4$[1,1] = "/" Let DIR = 5
!Print @0,0;'BR BD';SPACE$[1,73];'ED ER';
!If DIR <> 5
!  Print @0,0;'BR BD';"CONTRACT";@20,0;"START";@29,0;"END"
!  Print @10,0;"VENDOR"
!  Print @45,0;"CONTRACT DESCRIPTION"
!Else 
!  Print @1,0;'BR BD';"VENDOR'S CONTRACT";@22,0;"VENDOR";@30,0;"CONTRACT";
!  Print @42,0;"START";@52,0;"END";
!End If 
!L_5225: Print @74,0;'ED ER';
!KC$ = " ",KC$ \ If NUM Let KC$[1,6] = NUM Using "######"
!L_5230: Search #2,3,DIR;KC$,R2,E \ If E Goto L_5400
!Mat Read #2,R2,0;RCN3;
!Mat Read #2,R2,24;RCN$;
!Mat Read #2,R2,94;VENDCNT$;
!If DIR = 4 Let CONTRACT = KC$[7,12]
!If DIR = 5 Let CONTRACT = KC$[27]
!Gosub L_3500
!L_5260: CLINE = CLINE + 1 \ If CLINE >= 14 Goto L_5300
!L_5270: If DIR <> 5 Print Using "###### ";@2,CLINE;CONTRACT;
!If DIR = 5 Print Using "###### ";@0,CLINE;VENDCNT$[1,20];
!If DIR = 4 Print Using "######";@10,CLINE;RCN3[3];
!If DIR = 5 Print Using "######";@22,CLINE;RCN3[3];
!If DIR = 5 Print Using "######";@30,CLINE;CONTRACT;
!COL = 20 \ If DIR = 5 Let COL = 40
!L_5282: X2 = RCN3[1] \ Gosub L_7700 \ Print @COL,CLINE;X$;
!COL = 29 \ If DIR = 5 Let COL = 50
!X2 = RCN3[2] \ Gosub L_7700 \ Print @COL,CLINE;X$;
!If DIR <> 5 Print @45,CLINE;RCN$[41,68]
!Print @9,CLINE + 1;'BD';
!If DIR <> 5
!  Print @10,CLINE + 1;V$[1,30] \ CLINE = CLINE + 1
!End If 
!If DIR = 5 !show differnt on line
!  Print @15,CLINE + 1;V$[1,25];@45,CLINE + 1;RCN$[41,68];
!  CLINE = CLINE + 1
!End If 
!L_5290: Print @75,CLINE;'ED'; \ Goto L_5230
!L_5300: Rem MORE
!Print @0,19;'CE BR BD';" - MORE -, Contract#, <CR>:continue, E:end  ";'ED ER';
!Input Len 16384 + 6;""U5$ \ Print @0,19;'CE'; \ Call String(1,U5$)
!If U5$ = "E" Goto L_5350
!X2 = U5$ \ If X2 > 0 Goto L_5440
!If U5$ <> "" Goto L_5300
!Print @0,1;'CE'
!CLINE = 1
!Goto L_5270
!L_5350: Rem DONE
!Window Close 
!Return 
!L_5400: Rem DONE
!Print @0,19;'CE BR BD';" - END -, Enter Contract #, R:relist, E:end  ";'ED ER';
!Input Len 16384 + 6;""U5$ \ Print @0,19;'CE'; \ Call String(1,U5$)
!If U5$ = "E" Goto L_5350
!If U5$ = "R" Print @0,1;'CE'; \ CLINE = 0 \ Goto L_5225
!CONTRACT = 0
!X2 = U5$ \ If X2 > 0 If X2 < 999999 If Not(Fra(X2)) Goto L_5440
!L_5430: Print @0,19;'RB BR';"  INVALID CONTRACT NUMBER";'ER';
!Signal 3,20 \ Goto L_5400
!L_5440: CONTRACT = X2;J$ = CONTRACT Using "######"
!Search #2,2,1;J$,R2,E \ If E Goto L_5430
!CHKCONTRACT = X2
!Window Close 
!Return 
Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: ! X1 = Len(J7$)
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
BAD_RANGE: Rem
MSGTXT$ = "Ending value must be Greater than or Equal to starting value!"
! Call "errmsg",MSGTXT$
message$=msgtxt$
Return 
NOSTGFle: ! files missing - can not use
message$="REBATE STAGING NOT AVAILABLE"
! FALL ON THROUGH
ERR_MSG: ! something is awry
Returnstatus=1 ! on blk id - means no good
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
End
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Message$=Msg$
Call programdump("tmp/980ase!","")
goto Err_Msg:
OUTEND: Rem "Done
Returnstatus=0 ! on blk id - means 0=good
Message$="Complete "+Str$(numcpy)+" contracts copied"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
!Close 
!Chain "mx000"
END
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!!Rem {end rtn.error.s}
include "src/callmainerrnet.inc"
End 
