! >>> Program lacalcdist
!
! description A/P Data Entry Calc g/l distributions
! loadsave -w -n 100,10 -o prog/dxport/lacalcdist.dl4 src/lacalcdist.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  15:48:42
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/lacalcdist.src (univ2) [mary] {61506}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,VerifyDate
!Option Default Dialect IRIS1
Declare Intrinsic Sub FindF,InpBuf,String
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Rem lacalcdist  calculate g/l distributions
!Enter CH_AP[],APVEND,transid$,INVTYPE,SRC
Rem ch_ap hold channel numbers for
Rem ch_ap[0]=appoh ch_ap[1]=appol  ch_ap[2]=poctfle  ch_ap[3]=pohead
Rem ch_ap[4]=poline, Ch_ap[5]=a20di, ch_ap[6]=a20oi
Rem if ch_ap[] if set to 0 will open files
Rem need gl po control file to determine gl
Rem need gl control
Rem need gl po dist charges
!If Err 0 Gosub ERR_TRAP
Try
	Enter CH_AP[],APVEND,TRANSID$,INVTYPE,SRC,MESSAGE$,IntCo,rstr$,RETURNSTATUS,REC_UAC,found 
	dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error 
Dim 1%,PFU1[20],CNVTU[9],SC,SR,FLAG
Dim 3%,A[33],PFU2[6],INVFRgT,INVMISC,NSFRgT,NSMISC
Dim 3%,CNVTA[4]
dim 2%,nsprodcat
Dim P8$[7]
Dim F$[30],SCRATCH$[80],KEYTMP$[30],3%,REC_TMP
Dim KEYAPDA$[30],3%,REC_APDA,REC_APDH,RECCHK
Dim KEYOI$[30],3%,REC_OI
Dim KEYDI$[30],3%,REC_DI
Dim 1%,X1,L1[5],PL0[4],NSD1[7],PO1[9]
Dim 1%,H4[3],FLAGS[11],WH1[99,2],DFLT_DIST_TYPE
Dim 3%,MS2[99],MS1
Dim 2%,X2,PFB[24],Q0[1],L2[2],NSD2[4],PH[4],H0[5],H3[4],GRP[3],2%
Dim 2%,APFRT,COMP
Dim 3%,PFA1[7],AMOUNT,LINE_FRT,FRT_CHRG,HAZ[4],FRT[4],MISC[4]
Dim 3%,L3[6],PL[5],PL4[23],NSD3[9],H8[9],PO3[10]
Dim 3%,QTY,BILL_QTY,TMP_CHARGE,DISP_COST,DISP_QTY,DISP_EXT
Dim X$[10],P9$[50],U5$[10],PFA$[156],UNT$[4]
Dim L1$[120],NSD$[96],H$[82],H1$[116],P60$[50]
Dim GRP$[2],FNAME$[50]
DIM 1%,NONSTOCK,PMISC[2]
DIM 3%,POMISC,POFREIGT
Dim APHKEY$[30],APLKEY$[40],POCKEY$[30],POLKEY$[30],PRODKEY$[50],POHKEY$[30]
Dim 3%,REC_PROD,REC_POH,REC_POL,REC_POC,REC_APH,REC_APL
Dim 3%,PRODLBS,PRODFACT,POLBS,POFACT,WEIGHT,PIECE,CUBE
Dim 3%,TOTINV,TOTINVAPP
Dim M1$[12],AM1$[12],2%,M1[8],AM1[2]
dim 1%,ordnsflg
Dim 2%,DI1[1],DI$[12],3%,DI2[1],1%,DI3[2]
Dim 3%,GLTMP[1]
Dim APH$[12]
Dim 1%,APH1[0],APH3[4]
Dim 2%,APH0[2]
Dim 3%,APH2[2],APH4[4]
Dim APL$[12]
Dim 1%,APL1[5],APL3
Dim 2%,APL0[2]
Dim 3%,APL2[6],APL4[2]
Dim PCT$[12]
Dim 1%,PCT3[2],PCT0[1],PCT7[2]
Dim 2%,PCT1[5]
Dim 3%,PCT2[5],PCT4[1],PCT5[11],PCT6[1],PCT9[4],PCT8[10]
Dim 3%,GLVAR,GLTOT
Rem dim for glpocntrl variables
Dim 1%,PRODCAT,CH_GLC,GLC0[3],3%,GLC1[9],GLACCT,REC_GLC,GLCKEY$[50]
Rem dim for gl temp
Dim GLTKEY$[30],3%,REC_GLT,GLT0[1]
Dim 3%,QTYVAR,BQTYVAR,COSTVAR,BCOSTVAR
Dim 3%,DSP_RQTY,DSP_PQTY,DSP_CQTY,DSP_RCOST,DSP_CCOST
Dim 3%,svfrgt,svmisc
dim custom_customer$[30]

COMP = INTCO! Int((X2 - Int(X2 / 16384) * 16384) / 64)

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Rem open files    
if not (ch_ap[20]) ! cntrl file
	ctlc = OpenFile(9999,intCo) \ If ctlc = -1 Error 42 !control 
else
	let ctlc=ch_ap[20]
endif
if not(Ch_ap[0]) ! appoh file
	ch_aph=OpenFile(9802,intCo) \ If Ch_aph = -1 Error 42!
else
	let ch_aph=ch_ap[0]
endif
if not(ch_ap[1])
	ch_apl=OpenFile(9803,intCo) \ If Ch_apl = -1 Error 42!
else
	let ch_apl=ch_ap[1]
endif

if not(Ch_ap[2])
	ch_poc=OpenFile(9944,intCo) \ If Ch_poc = -1 Error 42!
else
	let ch_poc=ch_ap[2]
endif
if not (ch_ap[3]) ! purchase order header  #8
	 Ch_Poh = openfile(2416,intCo) \ If Ch_Poh = -1 Error 42     !"po header file
else
	ch_poh=ch_ap[3]
endif
if not (ch_ap[4]) ! po lines #9
	Ch_PoL = openfile(2432,intCo) \ If Ch_Pol = -1 Error 42     !"po lines file
else
	let ch_pol=ch_ap[4]
endif

if not(ch_ap[5]) ! a20di
	ch_di=OpenFile(9806,intCo) \ If Ch_di = -1 Error 42 ! ap dist file
else
	let ch_di=ch_ap[5]
endif
if not (ch_ap[6]) ! a20oi =CH_OI
	ch_oi=OpenFile( 9801,intCo) \ If Ch_oi = -1 Error 42 ! open item file
else
	ch_oi=ch_ap[6]
endif
if not(ch_ap[7]) ! apdeth=CH_APDH
    ch_apdh=OpenFile(432,intCo) \ If Ch_apdh = -1 Error 42 ! ap detail header file  
else
    ch_apdh=ch_ap[7]
endif
if not(ch_ap[8]) !=CH_APDA
	ch_apda=OpenFile(144,intCo) \ If Ch_apda = -1 Error 42 ! ap detail gl acct file
else
	ch_apda=ch_ap[8]
endif
if not (ch_ap[9]) ! product file #3
	 Ch_Prod = OpenFile(1792,intCo) \ If Ch_Prod = -1 Error 42  !product file 
else
	let ch_prod=ch_ap[9]
endif
If not (ch_ap[10]) ! warehouse file #12 
	Ch_Wh = OpenFile(2768,intCo) \ If Ch_Wh = -1 Error 42  !" warehouse file
else
	let ch_wh=ch_ap[10]
endif
if not(ch_ap[11]) ! pomisc
	ch_misc = OpenFile(-9949,intCo) \ If ch_misc = -1 Error 42 !po misc charge 
else
	CH_MISC=ch_ap[11]
			
endif
if not (ch_ap[12]) !  nonstock #14
	ch_nstk=OpenFile(2448,intCo) \ If Ch_nstk = -1 Error 42 ! nonstock product
else
	let ch_nstk=ch_ap[12]
endif


Mat Read #ctlc,60,50;P60$;
Mat Read #ctlc,52,60;P8$;
Mat Read #ctlc,51,88;poglflag;
mat read #ctlc,115,60;custom_customer$;
  let custom_customer$=UCase$(trim$(custom_customer$))
	
CH_GLC = FindChannel() ! CHNL
F$ = "6/GLPOCNTRL" + Str$(INTCO) \ Ropen #CH_GLC,F$
IF POGLFLAG<>0
	GLCKEY$ = " ",GLCKEY$;GLCKEY$[1,6] = "DFAULT"
	Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E > 1 Gosub ERR_SEARCH
	If E
		RETURNSTATUS=0
		message$="G/L - P/O INTERFACE CONTROL NOT SETUP PROPERLY. Default Record Missing"
		Goto OUTEND
	End If 
endif
Rem! build ap tmp file for gl dist
Rem find open item record
KEYOI$ = " ",KEYOI$
KEYOI$[1,6] = APVEND Using "######"
KEYOI$[7,18] = transid$[1,12]
KEYOI$[19,20] = INVTYPE Using "##"
Search #CH_OI,2,1;KEYOI$,REC_OI,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  returnstatus=0
  message$="Open Item "+rtrim$(transid$)+"For Vendor "+str$(apvend)+" Record Not Found "
  Goto OUTEND
End If 
Rem find ap deth record
Search #CH_APDH,2,1;KEYOI$,REC_APDH,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
	returnstatus=0
	message$="A/P HISTORY "+RTRIM$(TRANSID$)+"For Vendor "+str$(apvend)+" Record Not Found "
	Goto OUTEND
End If 
MAT READ #CH_APDH,REC_APDH,4;M1$;
MAT READ #CH_APDH,REC_APDH,16;M1;
CH_TMP = FindChannel() 
FNAME$ = "files/6/la510tmp" + Str$(REC_UAC)
SCRATCH$=""
SCRATCH$ = "[1:12] " + FNAME$ + "!"
Build #CH_TMP,SCRATCH$
REC_TMP = 6
Search #CH_TMP,0,1;KEYTMP$,REC_TMP,E \ If E Gosub ERR_SEARCH
REC_TMP = 1 \ Search #CH_TMP,0,0;KEYTMP$,REC_TMP,E \ If E Gosub ERR_SEARCH
Close #CH_TMP
Open #CH_TMP,FNAME$

KEYAPDA$ = " ",KEYAPDA$
KEYAPDA$[1,6] = REC_APDH Using "######"
Rem clear apdeta distribtuion
SRCHAPDETA: Rem search and delete transaction for apdeta file
Search #CH_APDA,3,1;KEYAPDA$,REC_APDA,E \ If E = 2 Goto CLRA20DI
If E Gosub ERR_SEARCH
RECCHK = KEYAPDA$[1,6] \ If RECCHK <> REC_APDH Goto CLRA20DI
MAT READ #CH_APDA,REC_APDA,0;AM1;
IF M1[0]<>AM1[1] GOTO SRCHAPDETA:
MAT READ #CH_APDA,REC_APDA,12;AM1$;
IF RTRIM$(AM1$)<>RTRIM$(M1$) GOTO SRCHAPDETA:
Search #CH_APDA,5,1;KEYAPDA$,REC_APDA,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #CH_APDA,1,0;KEYAPDA$,REC_APDA,E \ If E Gosub ERR_SEARCH
Goto SRCHAPDETA
CLRA20DI: Rem! clear account distributions
Rem clear a20di distribution
KEYDI$ = " ",KEYDI$
KEYDI$[1,5] = REC_OI Using "#####"
SRCHDELDI: Rem search thru dist file and find the dist to be recalculated
Search #CH_DI,3,1;KEYDI$,REC_DI,E \ If E = 2 Goto ENDDELDI
If E Gosub ERR_SEARCH
X2 = KEYDI$[1,5]
If X2 <> REC_OI Goto ENDDELDI
Mat Read #CH_DI,REC_DI,32;DI3;
Rem if not(di3[2]) goto srchdeldi: ! enter manually do not delete
Search #CH_DI,5,1;KEYDI$,REC_DI,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #CH_DI,1,0;KEYDI$,REC_DI,E \ If E Gosub ERR_SEARCH
Goto SRCHDELDI
ENDDELDI: Rem end delete of distributions
Rem get starting di item #
DITEM = 1
KEYDI$ = " ",KEYDI$
KEYDI$[1,5] = REC_OI Using "#####"
FNDITEM: Rem find the item #
Search #CH_DI,3,1;KEYDI$,REC_DI,E \ If E = 2 Goto STARTHERE
If E Gosub ERR_SEARCH
X2 = KEYDI$[1,5] \ If X2 <> REC_OI Goto STARTHERE
DITEM = KEYDI$[12,14]
DITEM = DITEM + 1
Goto FNDITEM
STARTHERE: Rem start looking to find out what to do
APHKEY$ = " ",APHKEY$
APHKEY$[1,6] = APVEND Using "######"
APHKEY$[7,18] = transid$[1,12]
APHKEY$[19,20] = INVTYPE Using "##"
APHKEY$[21,26] = PONUM Using "######"
SRCHAPPOH: Rem search for distributions
Search #CH_APH,3,1;APHKEY$,REC_APH,E \ If E = 2 Goto CREATEDIST
If E Gosub ERR_SEARCH
If APHKEY$[1,20] <> KEYOI$[1,20] Goto CREATEDIST
Gosub READ_APPOH
TOTINV = APH2[0]
TOTINVAPP = 0
PONUM = APHKEY$[21,26]
POHKEY$ = " ",POHKEY$
POHKEY$[1,6] = APH0[2] Using "######";POHKEY$[7,12] = PONUM Using "######"
Search #CH_POH,2,2;POHKEY$,REC_POH,E \ If E Gosub ERR_SEARCH
Gosub READ_POH
Read #CH_WH,(H4[1] - 1),122;DFLT_DIST_TYPE;
let ordnsflg=0
if h4[0]=1 let ordnsflg=1 ! direct 
if h4[0]=2 and p60$[22,22] <> "Y" let ordnsflg=1 ! indirect - update stock flag is no
if h4[0]=5 let ordnsflg=1 ! import direct
if h4[0]=6 and p60$[22,22]<>"Y" let ordnsflg=1 ! import indirect
if not(poglflag) ! need to check if pogl key exist
	let whse=h4[1]
	gosub getglcntrl:
	if not(found) goto outend:
endif	
If APH2[1] ! freight charge
	If DFLT_DIST_TYPE = 0 or ORDNSFLG=1 ! distribution type=0 not spread among products
		WHSE = H4[1]
		Gosub GETGLCNTRL
		GLAMT = APH2[1]
		if glc1[2]<>0
			GLACCT = GLC1[2]
			Gosub UPDATEGLTMP
		endif
	Else 
		If P60$[49,49] <> "F" And P60$[49,49] <> "B"
			WHSE = H4[1]
			Gosub GETGLCNTRL
			GLAMT = APH2[1]
			if glc1[2]<>0
				GLACCT = GLC1[2]
				Gosub UPDATEGLTMP
			endif
		Else 
			If DFLT_DIST_TYPE <> 0 And (P60$[49,49] = "F" Or P60$[49,49] = "B")
				TOTINV = TOTINV + APH2[1]
			End If 
		End If
	endif
endif
If APH2[2] ! misc charge
  For X2 = 0 To 4
    If APH3[X2]
      Mat Read #CH_MISC,APH3[X2],24;MS1;
      Mat Read #CH_MISC,APH3[X2],30;MS2;
      If Not(MS1) Or DFLT_DIST_TYPE = 0 Or (P60$[49,49] <> "M" And P60$[49,49] <> "B") or ORDNSFLG=1
		if poglflag<>0
			GLAMT = APH4[X2]
			GLACCT = MS2[H4[1]]
			If Not(GLACCT) Let GLACCT = MS2[0]
			If Not(GLACCT)
				WHSE = H4[1]
				Gosub GETGLCNTRL
				GLACCT = GLC1[3]
			End If 
			if glacct<>0
				Gosub UPDATEGLTMP
			endif
		endif
      Else 
        TOTINV = TOTINV + APH4[X2]
      End If 
    End If 
  Next X2
End If 
Rem search thru lines to find the po accrual acct
APLKEY$ = " ",APLKEY$
APLKEY$[1,26] = APHKEY$[1,26]
SRCHAPPOL: Rem search thru ap keys
Search #CH_APL,3,1;APLKEY$,REC_APL,E
If E And E <> 2 Gosub ERR_SEARCH
If APLKEY$[1,26] <> APHKEY$[1,26] Or E = 2
	gosub checkglamt: ! po done need to round values 
	let glacct=0
	If not(poglflag)<>0
		if nsfrgt<>0         
			glamt=aph2[1]-(fnr(invfrgt))
			let prodcat=0
			PRODKEY$ = " ",PRODKEY$
			PRODKEY$[1,12] = "Z ZZZZZZZZZZ"
			Search #CH_PROD,2,1;PRODKEY$,REC,E
			If not(E)
				MAT READ #CH_PROD,REC,200;NSPRODCAT;
				let prodcat=nsprodcat
			endif
			WHSE = H4[1]! ;PRODCAT=0     ! need to get freight from product category         
			Gosub GETGLCNTRL                 
			if glc1[2]<>0                      
                GLACCT = GLC1[2]           
                Gosub UPDATEGLTMP          
                LET TOTINVAPP=TOTINVAPP+GLAMT
			endif                
		endif 
		if totinv<>totinvapp and abs(totinv-totinvapp)<.10
			if aph2[1]<>0 And (P60$[49,49] = "F" Or P60$[49,49] = "B") and ORDNSFLG=1
				GLAMT = FNR(TOTINV - TOTINVAPP)
				!Gosub GETGLCNTRL
				let glacct=glc1[4] 
				if glacct<>0
					Gosub UPDATEGLTMP
				endif
			else
				if aph2[2]<>0 and (P60$[49,49] = "M" Or P60$[49,49] = "B") and ORDNSFLG<>1
					GLAMT = FNR(TOTINV - TOTINVAPP)
					!Gosub GETGLCNTRL
					let glacct=glc1[4] 
					if glacct<>0
						Gosub UPDATEGLTMP
					endif
				endif
			endif
		endif
	endif
	IF pogflag<>0
		If TOTINV <> TOTINVAPP  
			GLAMT = FNR(TOTINV - TOTINVAPP)
			If GLAMT
				WHSE = H4[1]
				PRODCAT = 0
				Gosub GETGLCNTRL
				if poglflag<>0 ! 
					If H4[0] = 0 Or H4[0] = 3
						! If stock item and update stock = Y
						GLACCT = GLC1[4]
					Else 
						If P60$[22,22] = "Y" And (H4[0] = 1 Or H4[0] = 4) ! indirect
							! If stock item and update stock = Y
							gLACCT = GLC1[4]
						Else 
							GLACCT = GLC1[8]
						End If 
					End If 
				else
					let glacct=glc1[4] ! only 1 inventory account
				endif
				if glacct<>0
					Gosub UPDATEGLTMP
				endif
			End If 
		End If 
	Endif
	Goto SRCHAPPOH
End If 
Mat Read #CH_APL,REC_APL,0;APL0;
Mat Read #CH_APL,REC_APL,12;APL$;
Mat Read #CH_APL,REC_APL,24;APL1;
Mat Read #CH_APL,REC_APL,36;APL2;
Mat Read #CH_APL,REC_APL,78;APL3;
IF NOT(APL2[0]) AND NOT(APL2[2]) AND NOT (APL2[3]) AND NOT(APL2[4]) GOTO SRCHAPPOL: ! NOTHING APPLIED
POCKEY$ = " ",POCKEY$
POCKEY$[1,6] = APL0[1] Using "######"
POCKEY$[7,12] = APL0[2] Using "######"
POCKEY$[13,16] = APL1[3] Using "####"
POCKEY$[17,18] = APL1[5] Using "##"
Search #CH_POC,2,1;POCKEY$,REC_POC,E \ If E Gosub ERR_SEARCH
Gosub READ_POC
POLKEY$ = " ",POLKEY$;POLKEY$[1,6] = PONUM Using "######"
POLKEY$[7] = PCT1[1] Using "###"
Search #CH_POL,2,1;POLKEY$,REC_POL,E \ If E Gosub ERR_SEARCH
Gosub READ_POL
If PCT6[0]
  LBSUNIT = PCT6[0];LBSFACTOR = PCT6[1]
  POLBS = PCT6[0];POFACT = PCT6[1]
End If 
Mat Read #CH_POC,REC_POC,24;PCT2;
Gosub UNPKFLG
If FLAGS[2] Goto SRCHAPPOL
Gosub GET_PROD
APL4[0] = 0;APL4[1] = 0;APL4[2] = 0
If PCT3[0] ! line has already be closed goes to cost variance
  GLAMT = 0
  GLAMT = APL2[0] * APL2[1]
  !GLAMT = GLAMT + APL2[0] * APL2[3]
  !GLAMT = GLAMT + APL2[0] * APL2[4]
  IF NOT(NONSTOCK) AND PMISC[0]<>0        
    GLAMT = GLAMT + APL2[0] * APL2[3]  
    GLAMT = GLAMT + APL2[0] * APL2[4]  
    LET INVFRgT=INVFRT+APL2[0] * APL2[3] 
    LET INVMISC=INVMISC+APL2[0] * APL2[4]
else                                   
    let nsfrgt=nsfrt+ APL2[0] * APL2[3]
    let nsmisc=nsmisc+APL2[0] * APL2[4]
    let svfrt=apl2[2]                 
    let svmisc=apl2[3]                 
endif                                  
  ! GLAMT = FNR(GLAMT)
  WHSE = APL1[5]
  If PCT7[2] Let PRODCAT = PCT7[2] Else Let PRODCAT = PFB[11]
  Gosub GETGLCNTRL
  GLTOT = GLAMT
  GLVAR = 0
  If APL2[1] <> 0 And APL2[0] <> 0 ! cost variance
    If (APL2[0] + PCT2[3]) > (PCT2[0] + PCT5[3]) ! we have a qty variance
      QTYVAR = ((APL2[0] + PCT2[3]) - (PCT2[0] + PCT5[3]))
      GLVAR = FNR((QTYVAR * APL2[1]) + (QTYVAR * APL2[3]) + (QTYVAR * APL2[4]))
	  if poglflag<>0
		If Not(FLAGS[0])
			 GLACCT = GLC1[5]
		Else 
			GLACCT = GLC1[9]
		End If 
	  else ! no pogl interface -- all variances go to inventory
			LET GLACCT=0
			If H4[0] = 0 Or H4[0] = 3
				IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
				if (nonstock) let glacct=glc1[0]		! If stock item and update stock = Y	
				IF CUSTOM_CUSTOMER$="MIDATLANTIC"
					if PCT7[2]=12 OR PCT7[2]=13 
						LET GLACCT=GLC1[0]
					ENDIF
				ENDIF
			Else 
				if h4[0]=1 or h4[0]=4
					If P60$[22,22] = "Y" 
						IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
						if (nonstock) let glacct=glc1[0]		! If stock item and update stock = YAnd (H4[0] = 1 Or H4[0] = 4) ! indirect
						IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
					else
						let glacct=glc1[0]
					endif
				else ! directs
					let glacct=glc1[0] 
				endif		
			endif 
	  endif
		GLAMT = GLVAR
      TOTINVAPP = TOTINVAPP + GLAMT
      APL4[2] = GLAMT
	  if glacct<>0 
		Gosub UPDATEGLTMP
	  endif
      GLTOT = GLTOT - GLVAR
    End If 
  End If 
  GLAMT = GLTOT
  if poglflag<>0
	If Not(FLAGS[0])
		GLACCT = GLC1[4]
	Else 
		GLACCT = GLC1[8]
	End If 
  else
	!let glacct=glc1[0] ! ! no pogl interface -- all variances go to inventory
			LET GLACCT=0
			If H4[0] = 0 Or H4[0] = 3
				IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
				if (nonstock) let glacct=glc1[0]		! If stock item and update stock = Y
				IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
			Else 
				if h4[0]=1 or h4[0]=4
					If P60$[22,22] = "Y" 
						IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
						if (nonstock) let glacct=glc1[0]		! If stock item and update stock = YAnd (H4[0] = 1 Or H4[0] = 4) ! indirect
						IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
					else
						let glacct=glc1[0]
					endif
				else ! directs
					let glacct=glc1[0] 
				endif	
			ENDIF
  endif
  APL4[1] = GLAMT
  TOTINVAPP = TOTINVAPP + GLAMT
  If GLAMT
    Gosub UPDATEGLTMP
  End If 
  Gosub WRITE_APPOL
  Goto SRCHAPPOL
End If 
GETCOSTS: Rem get qty & costs
APQTY = 0
APQTY = APL2[0]
If Not(APQTY)
  APQTY = PCT2[3] + PCT5[3]
End If 
If Not(APQTY)
  APQTY = PCT2[0] + PCT5[3]
End If 
POQTY = PCT2[0] + PCT5[3]
APCOST = 0
APCOST = APL2[1]
APFREIGHT = 0
If P60$[49,49] = "F" Or P60$[49,49] = "B" and ORDNSFLG<>1
	APFREIGHT = APL2[3]
	If APFREIGHT<>0
		If L1[5] = -1 Or (L1[5] = -3 And PCT0 = 0)
			If L1[5] = -1 Let APFREIGHT = APFREIGHT * 100
			CNVTA = APFREIGHT
			A[5] = LBSFACTOR;A[6] = LBSUNIT
			CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
			Gosub L_20000
			APFREIGHT = AMOUNT
			A[5] = PRODFACT;A[6] = PRODLBS			
		End If 
  End If
  
End If 
APMISC = 0
If P60$[49,49] = "M" Or P60$[49,49] = "B" and ORDNSFLG=1
  APMISC = APL2[4]
  If L1[5] = -1 Or (L1[5] = -3 And PCT0 = 0)
    If APMISC
      If L1[5] = -1 Let APMISC = APMISC * 100
      CNVTA = APMISC
      A[5] = LBSFACTOR;A[6] = LBSUNIT
      CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
      Gosub L_20000
      APMISC = AMOUNT
      A[5] = PRODFACT;A[6] = PRODLBS
    End If 
  End If 
End If 
APCOST = APCOST ! + APMISC + APFREIGHT
POCOST = 0
If APL2[1] ! if there is an ap cost
  POCOST = PCT2[1]
  If PCT2[1]
    POCOST = PCT2[1]
    If L1[5] = -1 Or L1[5] = -3
      A[5] = PRODFACT;A[6] = PRODLBS
      CNVTA = PCT2[1];CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
      Gosub L_20000
      If Not(PCT0) ! not a per lb item
        A[5] = LBSFACTOR;A[6] = LBSUNIT
        CNVTA = AMOUNT;CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
        Gosub L_20000
      End If 
      POCOST = AMOUNT
      A[5] = PRODFACT;A[6] = PRODLBS
    End If 
  End If 
End If 
POFREIGHT = 0
If P60$[49,49] = "F" Or P60$[49,49] = "B" and ORDNSFLG<>1
  If PCT5[0]
    If APL1[4] <> 0 Or APL2[2] <> 0
      POFREIGHT = PCT5[0]
    End If 
  End If 
End If 
If P60$[49,49] = "M" Or P60$[49,49] = "F" and ORDNSFLG<>1
  If PCT5[1]
    If APL1[4] <> 0 Or APL2[3] <> 0
      POMISC = PCT5[1]
    End If 
  End If 
End If 
If L1[5] = -1 Or (L1[5] = -3 And PCT0 = 0)
  If POFREIGHT
    If L1[5] = -1 Let POFREIGHT = POFREIGHT * 100
    CNVTA = POFREIGHT
    A[5] = LBSFACTOR;A[6] = LBSUNIT
    CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
    Gosub L_20000
    POFREIGHT = AMOUNT
    A[5] = PRODFACT;A[6] = PRODLBS
  End If 
  If POMISC
    If L1[5] = -1 Let POMISC = POMISC * 100
    A[5] = LBSFACTOR;A[6] = LBSUNIT
    CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
    Gosub L_20000
    POMISC = AMOUNT
    A[5] = PRODFACT;A[6] = PRODLBS
  End If 
End If 
POCOST = POCOST !+ POFREIGHT + POMISC
Rem find variance
QTYVAR = 0
PREVQTY = 0
If APL2[1]
  PREVQTY = PCT2[3]
End If 
If (APQTY + PREVQTY) <> POQTY ! we have a qty variance
  If Not(APL1[4]) ! line is not closed
    If (APQTY + PREVQTY) > POQTY
      QTYVAR = (APQTY + PREVQTY) - POQTY
    End If 
  Else ! line closed with variance
    QTYVAR = (APQTY + PREVQTY) - POQTY
  End If 
  If QTYVAR
    GLAMT = (QTYVAR * APCOST)
    APL4[2] = GLAMT
    QTYVARAMT = GLAMT
    WHSE = L1[1]
    If PCT7[2] Let PRODCAT = PCT7[2] Else Let PRODCAT = PFB[11]
    Gosub GETGLCNTRL
	IF POGLFLAG<>0
		If Not(FLAGS[0]) !
			GLACCT = GLC1[5]
		 Else 
			GLACCT = GLC1[9]
		End If 
	ELSE
		!GLACCT=GLC1[0] ! no pogl interface -- all variances go to inventory
		LET GLACCT=0
		If H4[0] = 0 Or H4[0] = 3
				IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
				if (nonstock) let glacct=glc1[0]		! If stock item and update stock = Y	
				IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
			Else 
				if h4[0]=1 or h4[0]=4
					If P60$[22,22] = "Y" 
						IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
						if (nonstock) let glacct=glc1[0]		! If stock item and update stock = YAnd (H4[0] = 1 Or H4[0] = 4) ! indirect
						IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
					else
						let glacct=glc1[0]
					endif
				else ! directs
					let glacct=glc1[0] 
				endif
			ENDIF
	endif
	if glacct<>0
		Gosub UPDATEGLTMP
	endif
  End If 
End If 
Rem post po variance
IF NOT(POGLFLAG)
	IF (APL2[0]+APL2[2])<>0 
		GLAMT = FNR((APQTY) * APCOST)
	ENDIF
	if not(flags[0]) and PMISC[0]<>0           
        let glamt=glamt+(apqty*apfreight) 
        let glamt=glamt+(apqty*apmisc)     
        let invfrgt=invfrgt+(apqty*apfreight)
        let invmisc=invmisc+(apqty*apmisc) 
	else                                       
        let nsfrgt=nsfrgt+(apqty*apfreight)
        let nsmisc=nsmisc+(apqty*apmisc)  
	endif                                     
else
	If APL1[4] ! line closed
		GLAMT = FNR(PCT9[4] - PCT8[2])
	Else 
		If (APQTY + PREVQTY) < POQTY
			GLAMT = FNR((APQTY) * POCOST)
			let glamt=glamt+(apqty*pofreight)
			let glamt=glamt+(apqty*pomisc)
		Else 
			GLAMT = FNR(PCT9[4] - PCT8[2])
		End If 
	End If 
	If INVTYPE <> 2
		If GLAMT > FNR(PCT9[4] - PCT8[2]) Let GLAMT = FNR(PCT9[4] - PCT8[2])
	Else 
		If GLAMT < FNR(PCT9[4] - PCT8[2]) Let GLAMT = FNR(PCT9[4] - PCT8[2])
	End If 
endif
APL4[0] = GLAMT
If GLAMT
  WHSE = L1[1]
  If PCT7[2] Let PRODCAT = PCT7[2] Else Let PRODCAT = PFB[11]
  Gosub GETGLCNTRL
  if poglflag<>0
	If Not(FLAGS[0])
		GLACCT = GLC1[1]
	Else 
		GLACCT = GLC1[7]
	End If 
  else
	!GLACCT=GLC1[0] ! no pogl interface -- all variances go to inventory
	LET GLACCT=0
			If H4[0] = 0 Or H4[0] = 3
				IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
				if (nonstock) let glacct=glc1[0]		! If stock item and update stock = Y	
				IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
			Else 
				if h4[0]=1 or h4[0]=4
					If P60$[22,22] = "Y" 
						IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
						if (nonstock) let glacct=glc1[0]		! If stock item and update stock = YAnd (H4[0] = 1 Or H4[0] = 4) ! indirect
						IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
					else
						let glacct=glc1[0]
					endif
				else ! directs
					let glacct=glc1[0] 
				endif
			ENDIF
  endif
  if glacct<>0
	Gosub UPDATEGLTMP
  endif
End If 
DSP_CQTY = APQTY
DSP_CCOST = APCOST
COSTAMT = FNR(APQTY * APCOST)
If Not(PCT0)
  CNVTA = APQTY;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 1
  Gosub L_20000
  DSP_CQTY = AMOUNT
  CNVTA = APCOST;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
  Gosub L_20000
  DSP_CCOST = AMOUNT
  If L1[5] = -2
    COSTAMT = DSP_CCOST
  Else 
    If L1[5] = -1 Or L1[5] = -3
      If PCT6[0] <> 0 And PCT6[1] <> 0
        LBSUNIT = PCT6[0];LBSFACTOR = PCT6[1]
      Else 
        LBSUNIT = PL4[12];LBSFACTOR = PL4[13]
      End If 
      If LBSFACTOR <= 0 Let LBSFACTOR = 1
      If L1[5] = -1 Let COSTAMT = FNR(DSP_CCOST * (LBSUNIT * APQTY) / LBSFACTOR / 100)
      If L1[5] = -3 Let COSTAMT = FNR(DSP_CCOST * (LBSUNIT * APQTY) / LBSFACTOR)
    End If 
  End If 
  IF NOT(APL2[0]) AND NOT(APL2[2]) LET COSTAMT=0 ! no amount applied and not closed
End If 
Rem let costamt=fnr(dsp_cqty*dsp_ccost)
GLAMT = COSTAMT - (APL4[0] + APL4[2])
If not(flags[0]) and PMISC[0]<>0
	glamt = glamt+(apqty*apfreight)
	glamt = glamt+(apqty*apmisc)
endif
APL4[1] = GLAMT
If GLAMT
  WHSE = L1[1]
  If PCT7[2] Let PRODCAT = PCT7[2] Else Let PRODCAT = PFB[11]
  Gosub GETGLCNTRL
  if poglflag<>0
	If Not(FLAGS[0]) ! stock item
		GLACCT = GLC1[4]
	Else 
		GLACCT = GLC1[8]
	End If 
  else
	!GLACCT=GLC1[0] ! no pogl interface -- all variances go to inventory
	LET GLACCT=0
			If H4[0] = 0 Or H4[0] = 3
				IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
				if (nonstock) let glacct=glc1[0]		! If stock item and update stock = Y
				IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
			Else 
				if h4[0]=1 or h4[0]=4
					If P60$[22,22] = "Y" 
						IF Not(nonstock) and PMISC[0]<>0 let glacct=glc1[0]
						if (nonstock) let glacct=glc1[0]		! If stock item and update stock = YAnd (H4[0] = 1 Or H4[0] = 4) ! indirect
						IF CUSTOM_CUSTOMER$="MIDATLANTIC"
							if PCT7[2]=12 OR PCT7[2]=13 
								LET GLACCT=GLC1[0]
							ENDIF
						ENDIF
					else
						let glacct=glc1[0]
					endif
				else ! directs
					let glacct=glc1[0] 
				endif
			ENDIF
  endif
  if glacct<>0
	Gosub UPDATEGLTMP
  endif
End If 
TOTINVAPP = TOTINVAPP + (APL4[0] + APL4[1] + APL4[2])
Gosub WRITE_APPOL
Goto SRCHAPPOL
UNPKFLG: Rem UNPACK L1[3] TO FLAGS[x]
X2 = L1[3] \ For K = 0 To 11
  FLAGS[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K 
Nonstock=flags[0]
Return 
GET_PROD: Rem FIND PRODUCT
If Not(FLAGS[0])
  PRODKEY$ = " ",PRODKEY$
  PRODKEY$[1,12] = L1$[81,92]
  Search #CH_PROD,2,1;PRODKEY$,REC_PROD,E
  If E Return 
  Mat Read #CH_PROD,REC_PROD,0;PFA$;
  Mat Read #CH_PROD,REC_PROD,156;PFB;
  Mat Read #CH_PROD,REC_PROD,256;A;
  Mat Read #CH_PROD,REC_PROD,460;PFA1;
  Mat Read #CH_PROD,REC_PROD,512;PFU1;
  Mat Read #CH_PROD,REC_PROD,554;PFU2;
  PRODLBS = A[6];PRODFACT = A[5]
Else 
  Mat Read #CH_NSTK,L3[1];NSD$
  Mat Read #CH_NSTK,L3[1],96;NSD1
  Mat Read #CH_NSTK,L3[1],112;NSD2
  Mat Read #CH_NSTK,L3[1],132;NSD3
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  PL4[12] = NSD3[6];PL4[13] = NSD3[7];PL4[14] = NSD3[2];PL4[15] = NSD3[8]
  PFU1[8] = NSD1[5];PFU1[10] = NSD1[4];PFU1[11] = NSD1[3];PFU1[15] = NSD1[7]
  L1$[1,30] = NSD$[13,42];L1$[31,60] = NSD$[43,72];L1$[61,80] = NSD$[73,92]
  L1$[81,92] = NSD$[1,12]
  PFB[11] = NSD1[1]
  PRODLBS = PL4[12];PRODFACT = PL4[13]
End If 
Return 
READ_POH: Rem READ PO RECORD
Mat Read #CH_POH,REC_POH;H0;
Mat Read #CH_POH,REC_POH,24;H$;
Mat Read #CH_POH,REC_POH,106;H1$;
Mat Read #CH_POH,REC_POH,222;H3;
Mat Read #CH_POH,REC_POH,242;H4;
Mat Read #CH_POH,REC_POH,250;H8;
Mat Read #CH_POH,REC_POH,310;PH;
Mat Read #CH_POH,REC_POH,330;PO1;
Mat Read #CH_POH,REC_POH,350;PO3;
Return 
READ_POL: Rem read po line
Mat Read #CH_POL,REC_POL;L1;
Mat Read #CH_POL,REC_POL,12;L2;
Mat Read #CH_POL,REC_POL,24;L3;
Mat Read #CH_POL,REC_POL,66;L1$;
Mat Read #CH_POL,REC_POL,186;PL;
Mat Read #CH_POL,REC_POL,222;PL0;
Mat Read #CH_POL,REC_POL,232;PL4;
MAT  READ #CH_POL,REC_POL,376;PMISC; 
POLBS = PL4[12];POFACT = PL4[13]
GOSUB UNPKFLG:
LET NONSTOCK=FLAGS[0]
Return 
READ_POC: Rem read pocontrol line
Mat Read #CH_POC,REC_POC,0;PCT1;
Mat Read #CH_POC,REC_POC,24;PCT2;
Mat Read #CH_POC,REC_POC,60;PCT3;
Mat Read #CH_POC,REC_POC,66;PCT$;
Mat Read #CH_POC,REC_POC,78;PCT4;
Mat Read #CH_POC,REC_POC,90;PCT5;
Mat Read #CH_POC,REC_POC,162;PCT6;
Mat Read #CH_POC,REC_POC,174;PCT7;
Mat Read #CH_POC,REC_POC,180;PCT9;
Mat Read #CH_POC,REC_POC,210;PCT8;
Mat Read #CH_POC,REC_POC,288;PCT0;
Return 
READ_APPOL: Rem read appo line file
Mat Read #CH_APL,REC_APL,0;APL0;
Mat Read #CH_APL,REC_APL,12;APL$;
Mat Read #CH_APL,REC_APL,24;APL1;
Mat Read #CH_APL,REC_APL,36;APL2;
Mat Read #CH_APL,REC_APL,78;APL3
Mat Read #CH_APL,REC_APL,92;APL4
Return 
WRITE_APPOL: Rem write appo line file
Mat Write #CH_APL,REC_APL,0;APL0
Mat Write #CH_APL,REC_APL,12;APL$
Mat Write #CH_APL,REC_APL,24;APL1
Mat Write #CH_APL,REC_APL,36;APL2
Mat Write #CH_APL,REC_APL,78;APL3
Mat Write #CH_APL,REC_APL,92;APL4
Return 
READ_APPOH: Rem read appo head file
Mat Read #CH_APH,REC_APH,0;APH0;
Mat Read #CH_APH,REC_APH,12;APH$;
Mat Read #CH_APH,REC_APH,24;APH1;
Mat Read #CH_APH,REC_APH,30;APH2;
Mat Read #CH_APH,REC_APH,48;APH3;
Mat Read #CH_APH,REC_APH,58;APH4;
Return 
GETGLCNTRL: Rem from glpocntrl
POTYPE = H4[0] \ If H4[0] < 3 Let POTYPE = H4[0] + 1
for ctr=0 to 9 \let glc1[ctr]=0 \ next ctr
	 

If P8$[2,2] = "Y" !ORDER TYPE
  GLCKEY$ = " ",GLCKEY$ \ GLCKEY$[1,2] = WHSE Using "##"
  If POTYPE Let GLCKEY$[5,6] = POTYPE Using "##"
  If PRODCAT Let GLCKEY$[7,8] = PRODCAT Using "##"
  Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E) Goto FNDGLCNTRL
  If PRODCAT ! find without cat
    GLCKEY$[7,8] = "  "
    Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E > 1 Gosub ERR_SEARCH
    If Not(E) Goto FNDGLCNTRL
  End If 
End If 
GLCKEY$ = " ",GLCKEY$ \ GLCKEY$[1,2] = WHSE Using "##"
If PRODCAT Let GLCKEY$[7,8] = PRODCAT Using "##"
Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto FNDGLCNTRL
If PRODCAT
  GLCKEY$[7,8] = "  "
  Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E) Goto FNDGLCNTRL
End If 
if poglflag<>0
	GLCKEY$ = "DFAULT"
	If PRODCAT Let GLCKEY$[7,8] = PRODCAT Using "##"
	Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E > 1 Gosub ERR_SEARCH
	If Not(E) Goto FNDGLCNTRL
	GLCKEY$[7,8] = "  "
	Search #CH_GLC,2,1;GLCKEY$,REC_GLC,E \ If E Gosub ERR_SEARCH
else
	found=0
	return ! no pogl interface
endif
FNDGLCNTRL: Rem g/l control record found
Mat Read #CH_GLC,REC_GLC,0;GLC0;
Mat Read #CH_GLC,REC_GLC,32;GLC1;
found=99
Return 
UPDATEGLTMP: Rem update gl temp file
If INVTYPE = 2 Let GLAMT = GLAMT * (-1)
GLTKEY$ = " ",GLTKEY$
GLTKEY$[1,8] = GLACCT Using "########"
Search #CH_TMP,2,1;GLTKEY$,REC_GLT,E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  GLT0 = GLACCT \ GLT0[1] = 0
  E = 2 \ Search #CH_TMP,1,0;GLTKEY$,REC_GLT,E \ If E Gosub ERR_SEARCH
  Mat Write #CH_TMP,REC_GLT,0;GLT0;
  Search #CH_TMP,4,1;GLTKEY$,REC_GLT,E \ If E Gosub ERR_SEARCH
End If 
Mat Read #CH_TMP,REC_GLT,0;GLT0
GLT0[1] = GLT0[1] + GLAMT
Mat Write #CH_TMP,REC_GLT,0;GLT0
GLAMT = 0
Return 

Checkglamt: ! check g/l amounts for rounding after po
GLTKEY$ = " ",GLTKEY$
SRCHchkgl: Rem
Search #CH_TMP,3,1;GLTKEY$,REC_GLT,E \ If E = 2 return
If E Gosub ERR_SEARCH
Mat Read #CH_TMP,REC_GLT,0;GLT0;
TOTINVAPP = TOTINVAPP-glt0[1] ! subtract old amount
let glt0[1]=fnr(glt0[1])
Mat Write #CH_TMP,REC_GLT,0;GLT0;
TOTINVAPP = TOTINVAPP+GLT0[1] ! add in round amount
goto srchchkgl
return


CREATEDIST: Rem create ap distributions
GLTKEY$ = " ",GLTKEY$
SRCHGLT: Rem
Search #CH_TMP,3,1;GLTKEY$,REC_GLT,E \ If E = 2 Goto ENDSRCHGLT
If E Gosub ERR_SEARCH
Mat Read #CH_TMP,REC_GLT,0;GLT0;
DI1[0] = REC_OI
DI1[1] = APVEND
DI$ = transid$
DI2[0] = GLT0[0]
DI2[1] = GLT0[1]
DI3[0] = DITEM
DI3[1] = INVTYPE
DI3[2] = 99
KEYDI$ = " ",KEYDI$
KEYDI$[1,5] = DI1[0] Using "#####"
KEYDI$[6,11] = DI1[1] Using "######"
KEYDI$[12,14] = DI3[0] Using "###"
E = 2 \ Search #CH_DI,1,0;KEYDI$,REC_DI,E \ If E Gosub ERR_SEARCH
Mat Write #CH_DI,REC_DI,0;DI1;
Mat Write #CH_DI,REC_DI,8;DI$;
Mat Write #CH_DI,REC_DI,20;DI2;
Mat Write #CH_DI,REC_DI,32;DI3;
Search #CH_DI,4,1;KEYDI$,REC_DI,E \ If E Gosub ERR_SEARCH
DITEM = DITEM + 1
Goto SRCHGLT
ENDSRCHGLT: Rem end of update
Goto OUTEND

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: GOTO L_20120 !If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
L_20080: !Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End


OUTEND: Rem EXIT
if not (ch_ap[20]) ! cntrl file   
        Try Close #ctlc Else Rem  
endif                             
if not(Ch_ap[0]) ! appoh file     
        Try CLose #ch_aph Else Rem
endif                             
if not(ch_ap[1])                  
        Try Close #ch_apl Else Rem
endif                             
if not(Ch_ap[2])                  
        Try Close #ch_poc Else Rem
endif                             
if not (ch_ap[3]) ! purchase order
        Try Close #ch_poh Else Rem
endif                             
if not (ch_ap[4]) ! po lines #9   
        Try Close #ch_pol Else Rem
endif                             
if not(ch_ap[5]) ! a20di          
        Try Close #ch_di Else Rem 
endif                             
if not (ch_ap[6]) ! a20oi =CH_OI  
        Try Close #ch_oi Else Rem    
endif                                
if not(ch_ap[7]) ! apdeth=CH_APDH    
        Try Close #ch_apdh Else Rem  
endif                                
if not(ch_ap[8]) !=CH_APDA           
         Try Close #ch_apda Else Rem 
endif                                
if not (ch_ap[9]) ! product file #3  
          Try Close #Ch_Prod Else Rem
endif                                
If not (ch_ap[10]) ! warehouse file #
         Try Close #Ch_Wh Else Rem   
endif                                
if not(ch_ap[11]) ! pomisc           
        Try Close #ch_misc Else Rem  
endif                                
if not (ch_ap[12]) !  nonstock #14   
        Try Close #ch_nstk Else Rem  
endif                                
if ch_glc<>0
	Try Close #CH_GLC Else Rem
Endif
If CH_TMP<>0
  FNAME$ = "files/6/la510tmp" + Str$(rec_uac)
  Try Close #CH_TMP Else Rem
  Call FindF(FNAME$,A9)
  If A9
    Kill FNAME$
  End If 
End If 
!End 
!Stop 
ELSE
!
include "src/callmainerrnet.inc"
end try
end