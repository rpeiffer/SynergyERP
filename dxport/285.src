! >>> Program 285
!
! description: OPEN QUOTE REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/285.dl4 src/285.src
!
! 1.0 04/09/2008 change
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 23, 2002  12:54:21
Rem /w/papermaster/r2002//usr/acct/jliu/work/devl/mx2/mx285.src (univ2) [jliu] {09766}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX285          Open QUOTE  Report  (selector)
Rem Author:        Roman  (04/18/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time
! - Option Default Dialect IRIS1
dim 2%,N1[11],1%,N2[4],N1$[42],V9[4],J8,CDATEFLAG
dim TIME$[22],DATE$[8],CNAME$[30],ITEM_LAB$[10]
!!Window On 
!!Print 'CS'
!!Window Off 
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim Z1$[50],F1$[16],F2$[26],A$[26],K$[130],X$[40]
Dim J$[75],J0$[11],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],X1,URECFLAG
Dim 2%,X2,DT3[1],4%,J1
Dim RETVAL$[256],Z2$[2]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[10],SPROD$[12],EPROD$[12]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
If V9[0] = 99 Goto L_1000
For J = 2 To 27
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;F1$;
  Ropen #J,F1$
L_830: Next J
Data "-1","1792","-1","1808","-1","-1","1280","-1","2656","1344","1424","-1","1824","-1","-1","-1"
Data "-1","-1","-1","-1","-1","-1","688","2768","1728","1664"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[4] = Chf(0) !!\ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[4] = 55 \ If J8 Let V9[4] = 18
Read #1,3;CNAME$;
Read #1,18,50;ITEM_LAB$;
Read #1,0,100;DATE$;
TIME$ = "" \ Call Time(TIME$) \ TIME$ = TIME$[15]
L_1000: 
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"285",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
! dx add xport reporting code
Call dxget("SCUST",tmp$) \ SCUST = tmp$ 
Call dxget("ECUST",tmp$) \ if tmp$ = "" Let ECUST = 999999 Else Let ECUST = tmp$ 
call dxget("SPROD",tmp$) \  SPROD$ = tmp$,Blank$
call dxget("EPROD",tmp$) \  EPROD$ = tmp$,EndParam$
call dxget("SSLSM",tmp$) \  SSLSM = tmp$
call dxget("ESLSM",tmp$) \  If tmp$ = "" Let ESLSM = 999 Else Let ESLSM = tmp$
call dxget("SQDATE",tmp$) \  If tmp$ = "" Let START_QDATE = 010170 Else Let START_QDATE = tmp$
call dxget("EQDATE",tmp$) \  If tmp$ = "" Let END_QDATE = 123159 Else Let END_QDATE = tmp$
call dxget("SCDATE",tmp1$) \ If tmp1$ = "" Let START_CDATE = 010170 Else Let START_CDATE = tmp1$
call dxget("ECDATE",tmp$) \  If tmp$ = "" Let END_CDATE = 123159 Else Let END_CDATE = tmp$
call dxget("SWHSE",tmp$) \  N1[4] = tmp$
call dxget("EWHSE",tmp$) \  If tmp$ = "" Let N1[5] = 99 Else Let N1[5] = tmp$
call dxget("SDIV",tmp$) \  N1[6] = tmp$
call dxget("EDIV",tmp$) \  If tmp$ = "" Let N1[7] = 99 Else Let N1[7] = tmp$
call dxget("SHOLD",tmp$) \  N1[8] = tmp$
call dxget("EHOLD",tmp$) \  If tmp$ = "" Let N1[9] = 12 Else Let N1[9] = tmp$
call dxget("SORDERT",tmp$) \  N1[10] = tmp$
call dxget("EORDERT",tmp$) \  If tmp$ = "" Let N1[11] = 40 Else Let N1[11] = tmp$
call dxget("SORTBY",tmp$) \  N2[0] = tmp$
call dxget("dt",tmp$) \ If tmp$ = "D" Let N2[1] = 1 Else Let N2[1] = 0 
call dxget("PICK",tmp$) \  N2[2] = tmp$
call dxget("SHWUM",tmp$) \  N2[3] = tmp$
call dxget("PRINTORDER",tmp$) \ N2[4] = tmp$
!
! customer code 
If SCUST < 0 Or SCUST > 999999 Let e$="Invalid starting customer code, must be between 0 and 999999!" \ error 10000
If ECUST < SCUST Or ECUST > 999999 Let e$="Invalid ending customer code, must be between starting customer code and 999999!" \ error 10000
!
! product code 
If EPROD$ < SPROD$ let  e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
! salesman
If SSLSM < 0 Or SSLSM > 999 Let e$="Invalid starting salesman code, must be between 0 and 999!" \ error 10000
If ESLSM < SSLSM Or ESLSM > 999 Let e$="Invalid ending salesman code, must be between starting salesman code and 999!" \ error 10000
!
! starting order date
errflag = 0 \ tmp2$ = START_QDATE Using "&&&&&&" 
X$ = tmp2$[5,6],tmp2$[1,2],tmp2$[3,4] \ X2 = X$ 
If X2 Gosub YMD2JUL \ If errflag Let e$ = "Invalid starting order date!" \ error 10000
START_QDATE = X2
!
! ending order date
tmp2$ = END_QDATE Using "&&&&&&" 
X$ = tmp2$[5,6],tmp2$[1,2],tmp2$[3,4] \ X2 = X$
Gosub YMD2JUL \ If errflag Let e$ = "Invalid ending order date!" \ error 10000
END_QDATE = X2
If END_QDATE < START_QDATE Let e$ = "Invalid ending order date, must be >= starting order date!" \ error 10000
!
! starting cancel date
tmp2$ = START_CDATE Using "&&&&&&" 
X$ = tmp2$[5,6],tmp2$[1,2],tmp2$[3,4] \ X2 = X$
If X2 Gosub YMD2JUL \ If errflag Let e$ = "Invalid starting cancel date!" \ error 10000
START_CDATE = X2
!
! ending cancel date
tmp2$ = END_CDATE Using "&&&&&&" 
X$ = tmp2$[5,6],tmp2$[1,2],tmp2$[3,4] \ X2 = X$
If X2 Gosub YMD2JUL \ If errflag Let e$ = "Invalid ending cancel date!" \ error 10000
END_CDATE = X2
If END_CDATE < START_CDATE Let e$ = "Invalid ending cancel date, must be >= starting cancel date!" \ error 10000
!
CDATEFLAG = 1 \ If tmp1$ = "0" Let CDATEFLAG = 0
!
! warehouse
If N1[4] < 0 Or N1[4] > 99 Let e$ = "Invalid starting warehouse, must be between 0 and 99!" \ error 10000
If N1[5] < N1[4] Or N1[5] > 99 Let e$ = "Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
! divisions
If N1[6] < 0 Or N1[6] > 99 Let e$ = "Invalid starting divisions, must be between 0 and 99!" \ error 10000
If N1[7] < N1[6] Or N1[7] > 99 Let e$ = "Invalid ending divisions, must be between starting divisions and 99!" \ error 10000
!
! Hold codes
If N1[8] < 0 Or N1[8] > 12 Let e$ = "Invalid starting hold, must be between 0 and 12!" \ error 10000
If N1[9] < N1[8] Or N1[9] > 12 Let e$ = "Invalid ending hold, must be between starting hold and 12!" \ error 10000
!
! order type
If N1[10] < 0 Or N1[10] > 40 Let e$ = "Invalid starting order type, must be between 0 and 40!" \ error 10000
If N1[11] < N1[10] Or N1[11] > 40 Let e$ = "Invalid ending order type, must be between starting order type and 40!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
N1$[1,6] = SCUST Using "######"
N1$[7,12] = ECUST Using "######"
N1$[13,24] = SPROD$ 
N1$[25,36] = EPROD$
N1$[37,39] = SSLSM Using "###"
N1$[40,42] = ESLSM Using "###"
N1[0] = START_QDATE
N1[1] = END_QDATE
N1[2] = START_CDATE
N1[3] = END_CDATE
!
Rem "=================================== get ranges
!!If Spc(13) = 11 Print @0,24;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!Call "progdflt","285","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,6] = "     0"
!!  RETVAL$[7,12] = "999999"
!!  RETVAL$[13,24] = "            "
!!  RETVAL$[25,36] = "zzzzzzzzzzzz"
!!  RETVAL$[37,39] = "  0"
!!  RETVAL$[40,42] = "999"
!!  RETVAL$[43,48] = "700101"
!!  RETVAL$[49,54] = "591231"
!!  RETVAL$[55,60] = "700101"
!!  RETVAL$[61,66] = "591231"
!!  RETVAL$[67,68] = " 0"
!!  RETVAL$[69,70] = "99"
!!  RETVAL$[71,72] = " 0"
!!  RETVAL$[73,74] = "99"
!!  RETVAL$[75,76] = " 0"
!!  RETVAL$[77,78] = "12"
!!  RETVAL$[79,80] = " 0"
!!  RETVAL$[81,82] = "40"
!!  RETVAL$[83,83] = "1"
!!  RETVAL$[84,84] = "0"
!!  RETVAL$[85,85] = "3"
!!  RETVAL$[86,86] = "3"
!!  RETVAL$[87,87] = "3"
!!  Call "progdfltw","285","",77,RETVAL$,URECFLAG
!!End If 
!!Gosub DISP_SCREEN
!!Goto INPUTS
!!INPUTS: Rem
!!Print @0,23;'CE';"Enter #: field to edit  R: reselect all  P: print S: save default or E: exit ";
!!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!!Print @0,23;'CE';
!!If X$ = "P" Goto L_1450
!!If X$ = "E" Let J8 = 0 \ Goto OUTEND
!!If X$ = "R" Goto EDT_ALL
!!If X$ = "" Goto INPUTS
!!If X$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for A:all or U:user access only, <CR>: do not save ";
!!  Input Len 16384 + 1;""Z2$
!!  Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "progdfltw","285","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL'
!!End If 
!!X = X$
!!If X < 1 Or X > 14 Goto INPUTS
!!Gosub EDT_FLDS
!!Goto INPUTS
!!EDT_ALL: Rem "want's all
!!For X = 1 To 14
!!  Gosub EDT_FLDS
!!Next X
!!Goto INPUTS
!!EDT_FLDS: Rem "edit them here
!!On X Gosub L_1010,L_1040,L_1070,L_1100,L_1130
!!On X - 5 Gosub L_1160,L_1190,L_1220,L_1230,L_1248
!!On X - 10 Gosub L_1260,L_1280,L_1300,L_1380
!!Return 
!!L_1010: Rem "customer code range
!!J5$ = "Enter the starting customer code maximum 999999"
!!J0$ = "3 00062403" \ J1 = SCUST
!!Gosub ISINPUT \ SCUST = J1
!!J5$ = "Enter the ending customer code maximum 999999"
!!J0$ = "3 00063803" \ J1 = ECUST
!!Gosub ISINPUT \ ECUST = J1
!!If ECUST < SCUST Gosub L_1395 \ Goto L_1010
!!N1$[1,6] = SCUST Using "######"
!!N1$[7,12] = ECUST Using "######"
!!RETVAL$[1,6] = SCUST Using "######"
!!RETVAL$[7,12] = ECUST Using "######"
!!Return 
!!L_1040: Rem"product code range
!1J5$ = "Enter the starting product code maximum zzzzzzzzzzzz"
!!J0$ = "2 00121804" \ J1$ = N1$[13,24]
!!Gosub ISINPUT \ N1$[13,24] = J$
!!J5$ = "Enter the ending product code maximum zzzzzzzzzzzz"
!!J0$ = "2 00123204" \ J1$ = N1$[25,36]
!!Gosub ISINPUT \ N1$[25,36] = J$
!!If N1$[25,36] < N1$[13,24] Gosub L_1395 \ Goto L_1040
!!RETVAL$[13,24] = N1$[13,24]
!!RETVAL$[25,36] = N1$[25,36]
!!Return 
!!L_1070: Rem"salesmane range
!!J5$ = "Enter the starting salesman code maximum 999"
!!J0$ = "3 00032705" \ J1 = SSLSM
!!Gosub ISINPUT \ SSLSM = J1
!!J5$ = "Enter the ending salesman code maximum 999"
!!J0$ = "3 00034105" \ J1 = ESLSM
!!Gosub ISINPUT \ ESLSM = J1
!!If ESLSM < SSLSM Gosub L_1395 \ Goto L_1070
!!N1$[37,39] = SSLSM Using "###"
!!N1$[40,42] = ESLSM Using "###"
!!RETVAL$[37,39] = N1$[37,39]
!!RETVAL$[40,42] = N1$[40,42]
!!Return 
!!L_1100: Rem"Quote dates
!!If START_QDATE = 0 Let START_QDATE = 700101
!!J1 = START_QDATE
!!J5$ = "Please Enter the Starting Date MMDDYY  "
!!J0$ = "5 00082206"
!!Gosub ISINPUT \ X2 = 0
!!If J1 Let X2 = J1 \ Gosub YMD2JUL \ Goto L_1100
!!START_QDATE = J1;N1[0] = X2
!!ENT_ENDQDATE: Rem "Ending
!!J0$ = "5 00083606"
!!J5$ = "Please Enter the Ending date MMDDYY    "
!!If END_QDATE = 0 Let END_QDATE = 591231
!!J1 = END_QDATE
!!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto ENT_ENDQDATE
!!END_QDATE = J1;N1[1] = X2
!!If N1[1] < N1[0] Gosub L_1395 \ Goto L_1100
!!RETVAL$[43,48] = START_QDATE Using "######"
!!RETVAL$[49,54] = END_QDATE Using "######"
!!Return 
!!L_1130: Rem"cancel dates
!!CDATEFLAG = 1
!!If START_CDATE = 0 Let START_CDATE = 700101
!!J1 = START_CDATE
!!J5$ = "Please Enter the Starting Date MMDDYY or 0: for No Cancel Date "
!!J0$ = "5 000822070"
!!Gosub ISINPUT \ X2 = 0
!!If J4$ = "0"
!!  CDATEFLAG = 0
!!  Print @22,7;"NONE                   "
!!  RETVAL$[55,60] = 0 Using "######"
!!  Return 
!!End If 
!!If J1 Let X2 = J1 \ Gosub YMD2JUL \ Goto L_1130
!!START_CDATE = J1;N1[2] = X2
!!ENT_ENDCDATE: Rem "Ending
!!J0$ = "5 00083607"
!!J5$ = "Please Enter the Ending date MMDDYY    "
!!If END_CDATE = 0 Let END_CDATE = 591231
!!J1 = END_CDATE
!!Gosub ISINPUT
!!X2 = J1 \ Gosub YMD2JUL \ Goto ENT_ENDCDATE
!!END_CDATE = J1;N1[3] = X2
!!If N1[3] < N1[2] Gosub L_1395 \ Goto L_1130
!!RETVAL$[55,60] = START_QDATE Using "######"
!!RETVAL$[61,66] = END_QDATE Using "######"
!!Return 
!!L_1160: Rem"warehouse
!!J5$ = "Enter the starting warehouse maximum 99 "
!!J0$ = "3 00022808" \ J1 = N1[4]
!!Gosub ISINPUT \ N1[4] = J1
!!If N1[4] > 99 Gosub L_1390 \ Goto L_1160
!!L_1165: Rem"ending whse
!!J5$ = "Enter the ending warehouse maximum 99 "
!!J0$ = "3 00024208" \ J1 = N1[5]
!!Gosub ISINPUT \ N1[5] = J1
!!If N1[5] > 99 Gosub L_1390 \ Goto L_1165
!!If N1[5] < N1[4] Gosub L_1395 \ Goto L_1160
!!RETVAL$[67,68] = N1[4] Using "##"
!!RETVAL$[69,70] = N1[5] Using "##"
!!Return 
!!L_1190: Rem"division
!!J5$ = "Enter the starting division maximum 99 "
!!J0$ = "3 00022809" \ J1 = N1[6]
!!Gosub ISINPUT \ N1[6] = J1
!!If N1[6] > 99 Gosub L_1390 \ Goto L_1190
!!L_1195: Rem"ending divison
!!J5$ = "Enter the ending division maximum 99 "
!!J0$ = "3 00024209" \ J1 = N1[7]
!!Gosub ISINPUT \ N1[7] = J1
!!If N1[7] > 99 Gosub L_1390 \ Goto L_1195
!!If N1[7] < N1[6] Gosub L_1395 \ Goto L_1190
!!RETVAL$[71,72] = N1[6] Using "##"
!!RETVAL$[73,74] = N1[7] Using "##"
!!Return 
!!L_1220: Rem"hold code
!!J5$ = "Enter the starting hold code maximum 12"
!!J0$ = "3 00022810" \ J1 = N1[8]
!!Gosub ISINPUT \ N1[8] = J1
!!If N1[8] > 12 Gosub L_1390 \ Goto L_1220
!!L_1225: Rem"ending hold code
!!J5$ = "Enter the ending hold code maximum 12"
!!J0$ = "3 00024210" \ J1 = N1[9]
!!Gosub ISINPUT \ N1[9] = J1
!!If N1[9] > 12 Gosub L_1390 \ Goto L_1225
!!If N1[9] < N1[8] Gosub L_1395 \ Goto L_1220
!!RETVAL$[75,76] = N1[8] Using "##"
!!RETVAL$[77,78] = N1[9] Using "##"
!!Return 
!!L_1230: Rem"order type
!!J5$ = "Enter the starting order type maximum 40 "
!!J0$ = "3 00022811" \ J1 = N1[10]
!!Gosub ISINPUT \ N1[10] = J1
!!If N1[10] > 40 Gosub L_1390 \ Goto L_1230
!!L_1235: Rem"ending order type
!!J5$ = "Enter the ending order type maximum 40 "
!!J0$ = "3 00024211" \ J1 = N1[11]
!!Gosub ISINPUT \ N1[11] = J1
!!If N1[11] > 40 Gosub L_1390 \ Goto L_1235
!!If N1[11] < N1[10] Gosub L_1395 \ Goto L_1230
!!RETVAL$[79,80] = N1[10] Using "##"
!!RETVAL$[81,82] = N1[11] Using "##"
!!Return 
!!L_1248: Rem sort by
!!J5$ = "Choose the sort option desired"
!!J0$ = "3 00026014" \ J1 = N2[0]
!!Gosub ISINPUT \ N2[0] = J1
!!If N2[0] < 1 Or N2[0] > 10 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1248
!!RETVAL$[83,83] = N2[0] Using "#"
!!Return 
!!L_1260: Rem
!!J5$ = "Enter D: full detail or S: summary "
!!J0$ = "2 00014516"
!!If N2[1] Let J1$ = "D" Else Let J1$ = "S"
!!Gosub ISINPUT
!!If J$ = "s" Let J$ = "S"
!!If J$ = "d" Let J$ = "D"
!!If J$ <> "D" And J$ <> "S" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1260
!!If J$ = "D" Let N2[1] = 1 Else Let N2[1] = 0
!!If N2[1] Print @45,16;"D"; Else Print @45,16;"S";
!!RETVAL$[84,84] = N2[1] Using "#"
!!Return 
!!L_1280: Rem pick
!!J5$ = "Choose 1, 2 or 3"
!!J0$ = "3 00015717" \ J1 = N2[2]
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1280
!!SET_TYPE: Rem
!!N2[2] = J1
!!RETVAL$[85,85] = N2[2] Using "#"
!!Return
!!L_1300: Rem
!!J5$ = "Enter the u/m type"
!!J0$ = "3 00016218" \ J1 = N2[3]
!!Gosub ISINPUT
!!L_1340: If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1300
!!N2[3] = J1
!!RETVAL$[86,86] = N2[3] Using "#"
!!Return 
!!L_1380: Rem
!!J5$ = "1:Only quotes copied to orders  2:Only quotes not copied to orders  3:both"
!!J0$ = "3 00016219" \ J1 = N2[4]
!!Gosub ISINPUT
!!If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1380
!!N2[4] = J1
!!RETVAL$[87,87] = N2[4] Using "#"
!!Return 
!!L_1390: Rem
!!J7$ = "ENTER VALUE MUST BE LESS THAN OR EQUAL TO THE MAXIMUM NUMBER! "
!!Gosub L_7600
!!Return 
!!L_1395: Rem
!!J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
!!Gosub L_7600
!!Return 
!
L_1450: Rem "================== all picked
A$ = Spc(6) \ A$ = A$[2,Len(A$) - 1]
Read #1,88,912;F1$;
L_1540: 
If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1540
P2 = 0 \ Let F2$ = F1$ To "*" : P2 !!\ If Not(P2) Gosub ERR_SEARCH
!!Print @0,22;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
F1$[P2] = A$
Call FindF(F1$,H1)
!!If Err 0 Rem
! - If Err 0 Gosub ERR_TRAP
! - Close #9 \ If Err 0 Gosub ERR_TRAP
! - If H1 Kill F1$
! - F2$ = "[1:256] ",F1$
! - Build #9,F2$
! - Search #9,0,1;K$,KSIZE,E !!\ If E Gosub ERR_SEARCH
! - L1 = 1000 \ Search #9,0,0;K$,L1,E !!\ If E Gosub ERR_SEARCH
! - If V9[4] > 30 Let J8 = 0 Else Let J8 = 1
!
If N2[0] = 2 Let tmp$="285b.dl4" else Let tmp$="285a.dl4"
Chain tmp$
chain write CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8,N1,N2,N1$,V9,CDATEFLAG,TIME$,DATE$,CNAME$,ITEM_LAB$
!
!!DISP_SCREEN: Rem "========================================== screen
!!Print 'CS'
!!Print @0,0;"-MX285-";@33,0;"OPEN QUOTE REPORT"
!!Print @20,2;'BR';"STARTING";@36,2;"ENDING";'ER';
!!Print @51,2;"10> SORT BY ";@60,3;" 1: CUSTOMER"
!!Print @0,3;"  1> CUSTOMERS";@60,4;" 2: PRODUCT"
!!Print @0,4;"  2> PRODUCTS";@60,5;" 3: SALESPERSON"
!!Print @0,5;"  3> SALESPERSONS";@60,6;" 4: CANCEL DATE"
!!Print @0,6;"  4> ORDER DATES";@60,7;" 5: ENTERED BY"
!!Print @0,7;"  5> CANCEL DATES";@60,8;" 6: HOLD CODE"
!!Print @0,8;"  6> WAREHOUSES";@60,9;" 7: STATUS"
!!Print @0,9;"  7> DIVISIONS";@60,10;" 8: WAREHOUSE"
!!Print @0,10;"  8> HOLD CODES";@60,11;" 9: DIVISION"
!!Print @0,11;"  9> QUOTE TYPE";@60,12;"10: QUOTE TYPE"
!!Print @52,14;"CHOOSE:"
!!Print @1,16;"11> Print  D: full detail or  S: summary? "
!!Print @1,17;"12> Pick  1: stock only  2: non stock only  3: both?"
!!Print @1,18;"13> Show U/M'S in  1: stock  2: selling  3: as entered? "
!!Print @1,19;"14> Print 1: ordered  2: not ordered  3: both?"
!!SCUST = RETVAL$[1,6]
!!ECUST = RETVAL$[7,12]
!!N1$[1,6] = RETVAL$[1,6]
!!N1$[7,12] = RETVAL$[7,12]
!!Print @24,3;N1$[1,6];@38,3;N1$[7,12];
!!N1$[13,24] = RETVAL$[13,24]
!!N1$[25,36] = RETVAL$[25,36]
!!Print @18,4;N1$[13,24];@32,4;N1$[25,36];
!!SSLSM = RETVAL$[37,39]
!!ESLSM = RETVAL$[40,42]
!!N1$[37,39] = RETVAL$[37,39]
!!N1$[40,42] = RETVAL$[40,42]
!!Print @27,5;N1$[37,39];@41,5;N1$[40,42];
!!START_QDATE = RETVAL$[43,48] \ END_QDATE = RETVAL$[49,54]
!!X2 = START_QDATE
!!If X2
!!  Gosub L_7700
!!  Print @22,6;X$;
!!  X2 = START_QDATE \ Gosub YMD2JUL \ X = X \ N1[0] = X2
!!End If 
!!X2 = END_QDATE
!!If X2
!!  Gosub L_7700
!!  Print @36,6;X$;
!!  X2 = END_QDATE \ Gosub YMD2JUL \ X = X \ N1[1] = X2
!!End If 
!!START_CDATE = RETVAL$[55,60] \ END_CDATE = RETVAL$[61,66]
!!X2 = START_CDATE
!!If X2 = 0
!!  Print @22,7;"NONE                   "
!!  CDATEFLAG = 0
!!  Goto SKIP_CDATE
!!Else 
!!  CDATEFLAG = 1
!!End If 
!!If X2
!!  Gosub L_7700
!!  Print @22,7;X$;
!!  X2 = START_CDATE \ Gosub YMD2JUL \ X = X \ N1[2] = X2
!!End If 
!!X2 = END_CDATE
!!If X2
!!  Gosub L_7700
!!  Print @36,7;X$;
!!  X2 = END_CDATE \ Gosub YMD2JUL \ X = X \ N1[3] = X2
!!End If 
!!SKIP_CDATE: Rem
!!N1[4] = RETVAL$[67,68]
!!N1[5] = RETVAL$[69,70]
!!Print Using "##";@28,8;N1[4];@42,8;N1[5];
!!N1[6] = RETVAL$[71,72]
!!N1[7] = RETVAL$[73,74]
!!Print Using "##";@28,9;N1[6];@42,9;N1[7];
!!N1[8] = RETVAL$[75,76]
!!N1[9] = RETVAL$[77,78]
!!Print Using "##";@28,10;N1[8];@42,10;N1[9];
!!N1[10] = RETVAL$[79,80]
!!N1[11] = RETVAL$[81,82]
!!Print Using "##";@28,11;N1[10];@42,11;N1[11];
!!N2[0] = RETVAL$[83,83]
!!Print Using "##";@60,14;N2[0];
!!N2[1] = RETVAL$[84,84]
!!If N2[1] Print @45,16;"D"; Else Print @45,16;"S";
!!N2[2] = RETVAL$[85,85]
!!Print Using "#";@57,17;N2[2];
!!N2[3] = RETVAL$[86,86]
!!Print Using "#";@62,18;N2[3];
!!N2[4] = RETVAL$[87,87]
!!Print Using "#";@62,19;N2[4];
!!Return 
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end rtn.input.s}
!!L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!!Print @0,Msc(34) - 1;'CL';
!!Return 
!
Rem {begin srcdevl/inc/rtn.date.i}
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \If E  errflag = 1 \  Return
X2 = X$[1,5]
Return 
!
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
Rem {end rtn.date.i}
OUTEND: Rem EXIT PROGRAM
!!Print 'CS'
For J = 2 To 27
  Read J1 \ If J1 = -1 Goto CLOSEFOR
  Close #J
CLOSEFOR: Next J
Data "-1","1792","-1","1808","-1","-1","1280","-1","2656","1344","1424","-1","1824","-1","-1","-1"
Data "-1","-1","-1","-1","-1","-1","688","2768","1728","1664"
!!Chain "MX000C"
!!Stop 
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End