! >>> Program 680a
!
! description  Inventory Price Report
!
! loadsave -w -n 100,10 -o prog/dxport/680a.dl4 src/680a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,String,Time,VerifyDate
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 19, 2003  14:41:55
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/mx/mx680a.src (univ2) [jcs] {19110}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
! - Option Default Dialect IRIS1
Rem MX680A         INVENTORY PRICE REPORT
Rem Author:        DAVID DEVITO   (04/09/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
! Last Update:   zyc 05/30/02 cct157733 b/e51@2530
! jliu 8/11/08 cct125176 bring the prod group to rev9
! --------------  NOTES FOR UPGRADE TO XREV9 FOR WHITE RIVER PAPER --------------
! used rev9 program & added in custom code for:
! 10/30/99 vst cct128115-Do not print LP5 or LP6
! -----------------------------------------------------------------------------
! ----------------  notes for rev10 upgrade for F.P.C.  -------------------------
! used xrev9 program & added in custom code for:
! 10/01/93 rjs cct 56039 - 5000 & 5800 routine different prices 1-6 go across 
!                           and % markup back in
! ------------------------------------------------------------------------------

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Dim 1%,PFU1[20],CNVTU[2],UN[2]
Dim 2%,C4[8]
Dim 3%,PFU2[6],CNVTA,A[33],UWORK[10],BASEX,FIELD
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim P1$[156],P9$[50]
Dim 1%,C0,C1[21],WHSE,WHPARC[5],LM[1],WHLM[1],PM5[5,4]
Dim 2%,B1[24],C2[21],P9,P7$[43],R2[1,45],P8,P8$[43],D9[5],Q0[1]
Dim 3%,X4,PACK,W3[24],PREC[1],WHMISC2[7],PARM[5]
Dim 3%,WHMISC[6],PF_LOAD2,prparc[3]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],PCDATE$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[10],K7$[50],PUNIT$[4],CUNIT$[4]
Dim K1$[50],K2$[4],K3$[4],X$[10],T9$[26],K9$[50],K6$[50],M1$[30]
Dim D$[35],Z1$[50],Z2$[20],PMASK$[20],WH$[20],T2$[16]
dim dlog$[50],prwh$[14],custom_customer$[30]
!
dim tmp$ [1000],tmp1$[900]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Mat Read #1,19,50;P9$; \ If P9$[10,10] <> "Y" Goto OUTEND
LET COID=INTCo
For J = 2 To 7
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","-1","2288","2096","1728","1744"
!DATA 1792,-1,2288,2096,1728,1744
ROPEN #3,"2/SPRICEMARK"+Str$(COID) ! dont need pdesckey rev9 uses pricemark xrev9=Spricemark
Mat Read #1,0,112;X2;
Gosub L_7700 \ PCDATE$ = X$[1,8]
Mat Read #1,115;D9;
! -------------------------------------
mat read #1,115,60;custom_customer$;
let custom_customer$=UCase$(Trim$(custom_customer$))
Mat Read #1,115,40;Q0;
Z2$ = "#####"
PMASK$ = "#####.",Z2$[1,Q0[1]]
Read #1,3;CNAME$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
! - dx add xport reporting code
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!call dxsave(0,"tmp/680ain.txt!")
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$  = bsdel$,"680a",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$ )
End if
!
call dxget("I0",K2$) \  K2$ = UCase$(K2$),Blank$
call dxget("I1",K3$) \  K3$ = UCase$(K3$),EndParam$
call dxget("I2",tmp$) \ if tmp$="" let COMM_DIGIT = 4 else let COMM_DIGIT = tmp$
call dxget("I3",tmp$) \ PCOST = tmp$
call dxget("I4",tmp$) \ if tmp$="" let NUMCOPY=1 else NUMCOPY = tmp$
!
if K3$ < K2$ let e$ = "Invalid ending commodity code, must be >= than starting commodity code!" \ error 10000
!
if COMM_DIGIT < 1 or COMM_DIGIT > 4 Let e$ = "Invalid sorting commodity code, must be between 1 and 4!" \ error 10000
!
IF J8 Let NUMCOPY = 1 ! xml
if NUMCOPY < 1 or NUMCOPY > 5 let e$ = "Invalid number of copies, must be between 1 and 5!" \ error 10000
!
!!L_900: Rem "=================================== get ranges
!!Gosub L_7500
!!K2$ = " ",K2$ \ K3$ = " ",K3$
!!!!Print @62,5;'CL'; \ Gosub L_7000 \ K2$[1,Len(Z1$)] = Z1$[1,Len(Z1$)] \ If Z1$ = "E" Goto L_9010
!!!!Print @62,6;'CL'; \ Gosub L_7000 \ K3$[1,Len(Z1$)] = Z1$[1,Len(Z1$)] \ If Z1$ = "E" Goto L_9010
!!If K3$ = "" Let K3$ = "}}}}"
!!If K3$ < K2$ Gosub L_985 \ Goto L_900
!!L_971: Print @62,8;'CL'; \ Gosub L_7000 \ COMM_DIGIT = Z1$
!!If Z1$ = "" Let COMM_DIGIT = 4
!!If COMM_DIGIT < 1 Or COMM_DIGIT > 4 Goto L_971
!!L_975: Print @62,10;'CL'; \ Gosub L_7000 \ PCOST = Z1$
!!If Not(PCOST) Or PCOST > 4 Goto L_975
!!Print @62,12;'CL'; \ Gosub L_7000 \ NUMCOPY = Z1$
!!If Z1$ = "" Let NUMCOPY = 1
!!If NUMCOPY > 5 Print Using "######";'ER BR';@61,12;NUMCOPY;'ER';" ";'EB BB';"< WATCH!";'EB'
!!Goto L_986
!!L_985: Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50 \ Return 
!!L_986: WHSE = 0 \ If P9$[32,32] = "N" Goto L_990
!!L_987: Print @62,14;'CL'; \ Gosub L_7000 \ WHSE = Z1$ \ If Z1$ = "E" Goto L_9010
!!If Not(WHSE) If Z1$ <> "" Print 'RB'; \ Goto L_987
!!If WHSE < 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_987
!!L_990: !!Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto L_9010
!!!!If Z1$ = "R" Goto L_900
!!If Z1$ <> "P" Goto L_990
!!Print @0,22;"SORTING...please wait";'CE'; \ Signal 3,0
!
if j8 
  tmp$ = "COMMODITY",fdel$
  tmp$ = tmp$,"COMMODITY DESCRIPTION 1",fdel$
  tmp$ = tmp$,"COMMODITY DESCRIPTION 2",fdel$
  tmp$ = tmp$,"ITEM CODE",fdel$
  tmp$ = tmp$ ,"VENDOR ITEM #",fdel$
  tmp$ = tmp$ ,"DESCRIPTION 1",fdel$
  tmp$ = tmp$ ,"DESCRIPTION 2",fdel$
  tmp$ = tmp$ ,"PACK",fdel$
  tmp$ = tmp$ ,"U/M",fdel$
  tmp$ = tmp$ ,"PRICE 1",fdel$
  tmp$ = tmp$ ,"PRICE 2",fdel$
  tmp$ = tmp$ ,"PRICE 3",fdel$
  tmp$ = tmp$ ,"PRICE 4",fdel$
  if custom_customer$<>"WHITERIVER"
  tmp$ = tmp$ ,"PRICE 5",fdel$
  tmp$ = tmp$ ,"PRICE 6",fdel$
  Endif
  if PCOST <> 4
   if PCOST = 2 Or PCOST = 3 let tmp$ = tmp$ ,"SELLING COST",fdel$
   if PCOST = 1 Or PCOST = 3 let tmp$ = tmp$ ,"HOUSE COST",fdel$
  end if
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
Endif
!
J1 = 70 \ J2 = 0
K1$ = " ",K1$ \ Gosub L_8000
For COPY = 1 To NUMCOPY
  J2 = 0 \ J1 = 99 \ K1$ = " ",K1$
  !!Print Using "PRINTING COPY #### of ####  please wait";@0,22;'CE';COPY;NUMCOPY; \ Signal 3,0
  !!If J8 Print 'CS';
  !!If Err 0 Gosub ERR_ESCAPE
  P1$ = " ",P1$
L_2000: 
  Search #9,3,1;K1$,R1,E 
  If E Goto NextCopy
  If K1$[1,COMM_DIGIT] <> P1$[152,151 + COMM_DIGIT] Let J1 = 99
  Mat Read #2,R1,0;P1$;
  Mat Read #2,R1,156;B1;
  Mat Read #2,R1,256;A; ! let's stick with A[]
  D = 0
  Mat Read #2,R1,512;PFU1;
  Mat Read #2,R1,554;PFU2;
  Mat Read #2,R1,620;LM; \ PREC[0] = R1
  MAT  READ #2,R1,596;prparc;
	MAT  READ #2,R1,894;C4;
	mat read #2,r1,938;pf_load2;
  If P9$[32,32] = "Y" And WHSE Gosub L_6800
  BASEX = C4[4] \ Gosub L_4500
  Gosub L_4000
  Gosub L_3000
  !If C1[C0] = 0 Let C2[C0] = C2[C0] + 19
  !If C1[C0] = 0 If C2[C0] < 20 Let C2[C0] = 20
  T9 = 0 \ T9[1] = 0
  Gosub L_10000
  Gosub L_5800
  Gosub L_5000
  Goto L_2000
NextCopy:
next copy
goto OUTEND
!
L_3000: Rem GET COMMODITY
J2$ = " ",J2$ \ J2$ = P1$[152,155]
Search #4,2,1;J2$,R3,E 
If E Goto L_3100
Mat Read #4,R3,0;D$;
!Mat Read #4,R3,36;C2;
!Mat Read #4,R3,120;C1;
Goto L_3120
L_3100: Rem NOT FOUND
  C1[C0] = 0 \ C2[C0] = 1
L_3120: Return
L_3500: Rem FIND IF PROD GROUP IS ALLOWED
PARM[0] = 0
PARM[1] = WHMISC2[0]
!Call "MXPRODGRP5",PARM[]
Call ProdGroup(e$,intco,Parm[])
Return 
!
L_4000: Rem FIND PACK
For X9 = 0 To 7
  If PFU1[X9] = PFU1[12] Goto L_4050
Next X9
PACK = 0 \ Return 
L_4050: 
If X9 = 0 Let PACK = 1
If X9 > 0 Let PACK = PFU2[X9 - 1]
Return 
!
L_4500: Rem MARK UP CALC
Gosub L_12400
If C4[2] = 1 And C4[3] > 0 Goto L_4530
Goto L_4690
L_4530: ! Matrix price for LP 1-6
	Mat read #3,c4[3],18;pm5;
	FOR FIELD=1 TO 6
		Let basex=c4[4] ! "base cost (default)
		if pm5[field-1,4]=1 let basex=b1[10] ! "last
		if pm5[field-1,4]=2 let basex=b1[8] ! "load
		if pm5[field-1,4]=3 let basex=pf_load2 ! "load2
		if pm5[field-1,4]=4 let basex=b1[21] ! "average
		if pm5[field-1,4]=5 let basex=prparc[2] !  "net po
		GOSUB L_19000:
		! X4 RETURNED

		LET a[19+FIELD]=X4
Next FIELD
L_4690: Return 
!
L_5000: Rem PRINT LINE
if j8
  tmp$ = rtrim$(D$[32,35]),fdel$  !!commodity
  tmp$ = tmp$,rtrim$(D$[1,16]),fdel$  !!commodity description 1
  tmp$ = tmp$,rtrim$(D$[17,31]),fdel$ !!commodity description 2
  tmp$ = tmp$,rtrim$(P1$[140,151]),fdel$  !!item code
  tmp$ = tmp$,rtrim$(P1$[93,112]),fdel$  !!vendor 
  tmp$ = tmp$,rtrim$(P1$[9,38]),fdel$  !!description 1
  tmp$ = tmp$,rtrim$(P1$[63,92]),fdel$  !!description 2
  tmp$ = tmp$,PACK Using "######",fdel$,PUNIT$,fdel$  !!pack ^ u/m
  tmp$ = tmp$,A[20] Using PMASK$,fdel$
  tmp$ = tmp$,A[21] Using PMASK$,fdel$
  tmp$ = tmp$,A[22] Using PMASK$,fdel$
  tmp$ = tmp$,A[23] Using PMASK$,fdel$
  if custom_customer$<>"WHITERIVER"
  tmp$ = tmp$,A[24] Using PMASK$,fdel$
  tmp$ = tmp$,A[25] Using PMASK$,fdel$
  Endif
  If PCOST = 2 Or PCOST = 3 Let tmp$ = tmp$,B1[8] Using PMASK$,fdel$!!
  If PCOST = 1 Or PCOST = 3 Let tmp$ = tmp$,C4[4] Using PMASK$,fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
Print #0; Tab 0;P1$[140,151];
Print #0; Tab 16;P1$[9,38];
Print #0; Using "######"; Tab 48;PACK; Tab 56;PUNIT$;
if custom_customer$="FPC"
		PRINT #0; USING "####.###"; TAB 60;A[20]; TAB 69;A[21]; TAB 78;A[22]; TAB 87;A[23]; TAB 96;A[24]; TAB 105;A[25];
		IF PCOST=2 OR PCOST=3 PRINT #0; USING "#####.###"; TAB 114;B1[8]; !"whse/load cost
		IF PCOST=1 OR PCOST=3 PRINT #0; USING "#####.###"; TAB 123;C4[4] !"base cost
		IF PCOST=2 OR PCOST=4 PRINT #0;" "
		PRINT #0; TAB 0;P1$[93,112]; TAB 22;P1$[63,92]; ! "vendor # / desc 2
		IF NOT(C4[4]) PRINT #0;" " \ GOTO L_5150: ! "no cost (cannot do %'s)
Else
	Print #0; Using PMASK$; Tab 60;A[20]; Tab 75;A[23];
	If PCOST = 2 Or PCOST = 3 Print #0; Using PMASK$; Tab 91;B1[8];
	If PCOST = 1 Or PCOST = 3 Print #0; Using PMASK$; Tab 109;C4[4]
	If PCOST = 2 Or PCOST = 4 Print #0;" "
	Print #0; Tab 0;P1$[93,112]; Tab 22;P1$[63,92];!!vendor item { description 2
	!Print #0; Using PMASK$; Tab 60;A[21]; Tab 75;A[24]
	!Print #0; Using PMASK$; Tab 60;A[22]; Tab 75;A[25]
	PRINT #0; USING PMASK$; TAB 60;A[21]; 
	if custom_customer$<>"WHITERIVER" Print #0; using PMask$; TAB 75;A[24] Else Print #0;""
	PRINT #0; USING PMASK$; TAB 60;A[22]; 
	if custom_customer$<>"WHITERIVER" print #0; Using PMask$; TAB 75;A[25] Else Print #0;""
	!
	Print #0;" " \ Goto L_5150
Endif
Print #0; Using "-###.##%"; Tab 60;(A[20] / C4[4] - 1) * 100;
Print #0; Using "-###.##%"; Tab 69;(A[21] / C4[4] - 1) * 100;
Print #0; Using "-###.##%"; Tab 78;(A[22] / C4[4] - 1) * 100;
Print #0; Using "-###.##%"; Tab 87;(A[23] / C4[4] - 1) * 100;
Print #0; Using "-###.##%"; Tab 96;(A[24] / C4[4] - 1) * 100;
Print #0; Using "-###.##%"; Tab 105;(A[25] / C4[4] - 1) * 100
L_5150: Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return
!
if custom_Customer$="FPC"
	let j1=j1+2
Else
	J1 = J1 + 4
endif
If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Or COPY > 1 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
Print #0;"\15\";
Print #0;
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;PCDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE ";J2
Print #0;" - 680A - ";T9$; Tab 50;"INVENTORY PRICE REPORT"
Print #0;" "
Print #0; Tab 8;"COMMODITY: ";D$[32,35];" -    ";D$[1,16];" ";D$[17,31];
Print #0;"   WAREHOUSE -"; \ If WHSE Print #0;WHSE Else Print #0;" ALL"
Print #0;" "
if custom_customer$="FPC"
		PRINT #0; TAB 1;"ITEM CODE"; TAB 73;"L  I  S  T    P  R  I  C  E  S";
		IF PCOST=2 OR PCOST=3 PRINT #0; TAB 115;"SELLING";
		IF PCOST=1 OR PCOST=3 PRINT #0; TAB 125;"HOUSE";
else
Print #0; Tab 1;"ITEM CODE"; Tab 68;"LIST  PRICES";
If PCOST = 2 Or PCOST = 3 Print #0; Tab 94;"SELLING";
If PCOST = 1 Or PCOST = 3 Print #0; Tab 112;"HOUSE";
endif
Print #0;""
Print #0; Tab 1;"VENDOR ITEM #";
Print #0; Tab 20;"DESCRIPTION";
Print #0; Tab 50;"PACK"; Tab 56;"U/M";
if custom_customer$="FPC"
		PRINT #0; TAB 65;"1"; TAB 74;"2"; TAB 82;"3"; TAB 91;"4"; TAB 100;"5"; TAB 109;"6";
		IF PCOST=2 OR PCOST=3 PRINT #0; TAB 116;"COST";
		IF PCOST=1 OR PCOST=3 PRINT #0; TAB 125;"COST";
else
	if custom_customer$="WHITERIVER"
		PRINT #0; TAB 65;"1-3"; TAB 80;"4"; !TAB 82;"3"; TAB 91;"4"; TAB 100;"5"; TAB 109;"6"; ! cct128115-removed "-6", do not print lp5 & lp6
	Else
		Print #0; Tab 65;"1-3"; Tab 80;"4-6";
	Endif
	If PCOST = 2 Or PCOST = 3 Print #0; Tab 94;"COST";
	If PCOST = 1 Or PCOST = 3 Print #0; Tab 112;"COST";
endif
Print #0;" "
Print #0;" "
Return 
!
L_6800: Rem PRODUCT WAREHOUSE INFO
For CT = 0 To 24
  If CT < 6 Let WHPARC[CT] = 0;whmisc[ct]=0
  If CT < 25 Let W3[CT] = 0
Next CT
WHLM[0] = 0;WHLM[1] = 0
WH$ = " ",WH$ \ WH$[1,12] = P1$[140,151]
WH$[13,14] = WHSE Using "##"
Search #7,2,1;WH$,R2,E
If E Goto L_6856
Mat Read #7,R2,78;W3;
Mat Read #7,R2,842;WHLM;
Mat Read #7,R2,384;WHPARC;
mat read #7,r2,800;whmisc;
Mat Read #7,R2,846;whmisc2;
L_6856: If P9$[32,32] = "Y" Gosub L_69000
B1[8] = W3[17] \ B1[10] = W3[16] \ B1[21] = W3[15]
C4[4] = W3[18] \ A[0] = W3[0] \ A[3] = W3[2]
LET C4[4]=W3[18] \ LET A=W3 \ LET A[3]=W3[2]
	let pf_load2=w3[14];prparc[2]=whmisc[2]
For CT = 20 To 25
  A[CT] = W3[CT - 1]
Next CT
Return 
!
!!L_7000: Rem "=========================================== data input routine
!!  Input ""Z1$
!!  Return 
!!L_7500: Rem "========================================== screen
!!  Print 'CS'
!!  Print @0,0;"MX680A";@32,0;"INVENTORY PRICE REPORT"
!!  Print @1,5;"ENTER STARTING COMMODITY CODE,  <CR> FOR FIRST,  E: TO EXIT: "
!!  Print @7,6;"ENDING   COMMODITY CODE,  <CR> FOR LAST,   E: TO EXIT: "
!!  Print @10,8;"DIGITS TO SORT COMMODITY CODE BY <CR>: FOR FOUR(4):"
!!  Print @1,10;"ENTER COST TO PRINT  1> HOUSE  2> SELLING  3> BOTH  4> NONE:"
!!  Print @27,12;"NUMBER OF COPIES <CR>: FOR ONE(1):"
!!  If P9$[32,32] = "N" Goto L_7600
!!  Print @16,14;"ENTER WAREHOUSE, <CR>: FOR MAIN,  E: TO EXIT: "
!!L_7600: Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem "========================================= sort by commodity code
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_8030
L_8020: Search #2,3,1;K1$,R1,E
If E Goto L_8150
L_8030: Mat Read #2,R1,0;P1$;
If P1$[152,155] < K2$[1,4] Goto L_8020
If P1$[152,155] > K3$[1,4] Goto L_8020
gosub L_6800: 
Gosub L_3500: \ If Not (PARM[4]) Goto L_8020:
K9$ = " ",K9$
K9$[1,COMM_DIGIT] = P1$[152,151 + COMM_DIGIT]
K9$[5,17] = P1$[140,151]
Search #9,4,1;K9$,R1,E
If E 
	if E=1 Goto L_8020
	Let e$ = "syserrorfile 680a sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
endif
Goto L_8020
L_8150: K1$ = " ",K1$
Return 
!
L_9010: 
!!  Print 'CS'
!!  Chain "MX000C"
!!Stop 
! - L_9100: Rem END OF THIS RANGE
! - Next COPY
! - Goto OUTEND
! - Print @0,23;"PRINT MATRIX SHEET FOR THIS CATEGORY? ";'CL'; \ Input ""J$
! - If J$ = "N" Goto OUTEND
! - If J$ <> "Y" Goto OUTEND
! - Chain "MX686A"
! - Chain Write C0
! - Stop 
!
L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[12]
CNVTU[2] = 2
CNVTA = B1[8] \ Gosub L_20000
B1[8] = AMOUNT
CNVTA = C4[4] \ Gosub L_20000
C4[4] = AMOUNT
CNVTU[1] = PFU1[12]
CNVTU[2] = 2
For X = 20 To 25
  CNVTA = A[X] \ AMOUNT = 0 \ If CNVTA Gosub L_20000
  A[X] = AMOUNT
Next X
If PFU1[12] = -1 Let PUNIT$ = "CWT "
If PFU1[12] = -2 Let PUNIT$ = "LOT "
If PFU1[12] = -3 Let PUNIT$ = "LB  "
If PFU1[12] > 0 Mat Read #6,PFU1[12],10;PUNIT$;
If PFU1[11] = -1 Let CUNIT$ = "CWT "
If PFU1[11] = -2 Let CUNIT$ = "LOT "
If PFU1[11] = -3 Let CUNIT$ = "LB  "
If PFU1[11] > 0 Mat Read #6,PFU1[11],10;CUNIT$;
Return 
!
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE <> 0
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ B1[8] = CNVTA
  End If
  if whlm[1]
	  let wh=whse;ltbl=whlm[1];cnvta=0
	  gosub L_12610: \ let pf_load2=cnvta ! "was w3[14]
    Endif
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B1[8] = CNVTA
  End If
  if lm[1]
	  let wh=0;ltbl=whlm[1];cnvta=0
	  gosub L_12610: \ let pf_load2=cnvta 
    Endif
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
if e$ error 10000 ! error from called program
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: 
! - Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: 
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
if e$ error 10000 ! error from called program
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B1[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B1[21]
  If Not(W3[16]) Let W3[16] = B1[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B1[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B1[24]
End If 
Return 
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT PROGRAM
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 	
!Try Call dxclose() Else REM
End 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
