! >>> Program imvrel
!
! description imgaing related documents 
!
! loadsave -w -n 100,10 -o prog/dxport/imvrel.dl4 src/imvrel.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Declare Intrinsic Sub FindF,String,programdump
Option Default Dialect IRIS1
Option String ReDIM Is Legal  
!
! imvrel Imaging - View related documents
!      George Doscher  14-Jan-1997
!GED:01/14/97:Initial program (created from im473)
!dgh:04/06/06:cct201269:update for VD type.
!dgh:05/02/06:cct203136:define the key for Vendor Document images properly
If Err 0 Gosub Err_Trap
Enter DocType$,Code$,Mode,List$[]
! Syntax: Call "ImVRel",{prefix},{code},{mode},List$[]
!
!    Where:  prefix  = document type
!        code  = type-specific code (eg: product code)
!        mode  = 0-check  1-display
!            : returns 0-success
!                  1-no documents for this code
!                  2-invalid prefix
!                  3-not an imaging device
!                  4-imaging not installed
!    
!    In check mode, call only sees if any documents exist for selected
!      type/code.
!
!	List$ will contain any matching keys
!
Dim Spaces$[80],LUCode$[20]
Dim Ext$[4],Work$[80],IType$[25],IRef$[25]
Dim 2%,CH_ImIdx,E
Dim 3%,RecArray[10]

! #include dim.imsettype.i
! Dims for ImSettype include file                                
Dim 1%, SeqDispl                                                 
Dim DTDescription$[20], DTIndex1$[20], DTIndex2$[20], DTImode$[6]
Dim DTLookup$[16], DTReffile$[4], Prefix$[2]
!
! #include dim.rtn.input
! #include dim.imidx.i
! dim.imidx.i (ImIndex)            
Dim Imi$[66]                       
Dim 3%,Imi1, 1%,Imi2[3], 2%,Imi3[2]

Dim Key1_ImIdx$[40]

!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[250],pdffilename$[100],mergedir$[200]
Dim 2%,uport,tmp$[500]

Dim action$[30],options$[30],userid$[8],b$[200],3%
Dim action1$[30],action2$[30],action3$[30] ! actions for programs
Dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1000] ! .net delimiters
Dim WebStr$[1000],Message$[200],blockid$[10],j4$[75]
Dim 4%
!
  b$ = " ",b$
  !
  ! Call dxopen()
  !
  Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)

!  Call dxsave(0,Msc$(1)+"/524.in!")  ! \ Stop
! Call programdump("/x1/xslspro/imglist11!","") ! dump program vars
coid=intco  ! comes from getssion
!

Def FNR(x) = (Int(Abs(x) * 100 + .5) * .01) * Sgn(x)
! See if imaging is installed
Call FindF("6/IMIndex" + Str$(coid),E)
If Not(E)
  Mode = 4
  End 
End If 
! If Spc(13) <> 11 And Spc(13) <> 12
!  Mode = 3
!  End 
! End If 
! Channel assignments
! ----------------------
CH_Cntrl = 1
CH_ImIdx = 2
False = 0;True = Not(False)
Spaces$ = " ",Spaces$
Ext$ = ".tif"
! find an available channel for the image index file & open
If Err 0 Let E = Spc(8)
CH_ImIdx = 99
CHIMLoop: E = 0
Open #CH_ImIdx,"6/IMIndex" + Str$(coid)
If E
  If E <> 40 Gosub Err_Trap
  CH_ImIdx = CH_ImIdx - 1
  If CH_ImIdx < 1
    Print 'CR RB';"No channels available!"
    Gosub Err_Search
  End If 
  Goto CHIMLoop
End If 
If Err 0 Gosub Err_Trap
Type = 0;Prefix$ = ""
TypeLoop: Prefix$ = ""
Gosub SetType
If Prefix$
  Call String(1,Prefix$)
  Call String(1,DocType$)
  If DocType$ = Prefix$ Goto CTCont
  Type = Type + 1
  Goto TypeLoop
End If 
! no such type
Mode = 2
Goto OutEnd
!
CTCont: ! found type
! see if any exist
Clear List$
List$[0]=bsdel$,"Images",fdel$
List$[1]="keyvar",fdel$,"Reference",fdel$,"Comment",fdel$
!
! ----- reformat callcode base on type ----------
If Prefix$ = "VD" Let LUCode$ = Val(Code$) Using "######"
If Prefix$ = "PL" Let LUCode$ = Code$ + Spaces$;LUCode$[13] = ""
If Prefix$ = "CD" Let LUCode$ = Val(Code$) Using "######"
If Prefix$ = "MD" Let LUCode$ = Code$
If Prefix$ = "PO" Let LUCode$ = Val(Code$) Using "######"	! PO#

Key1_ImIdx$ = Prefix$ + LUCode$
KeyLen = Len(Key1_ImIdx$)
Search #CH_ImIdx,2,1;Key1_ImIdx$,Rec_ImIdx,E \ If E > 2 Gosub Err_Search
If E Or Not(Mode)
  ! abort of check only or none exist
  Mode = E
  Close #CH_ImIdx
  End 
End If 
Main: ! Window Open @5,5; Size 60,16; Using DTDescription$
! Print @0,0;'BR';" #"; Tab (28);"Comments"; Tab (Msc(33) - 1);'ER';
EntryList: ! Print @0,1;'CE';
Gosub TypeHead  ! Set Itype$
Line_ = 0
Gosub RAClear
Key1_ImIdx$ = Prefix$ + LUCode$
KeyLen = Len(Key1_ImIdx$)
ELLoop: Search #CH_ImIdx,3,1;Key1_ImIdx$,Rec_ImIdx,E \ If E > 2 Gosub Err_Search
If Key1_ImIdx$[1,KeyLen] <> Prefix$ + LUCode$
  E = 2;Key1_ImIdx$ = Prefix$ + LUCode$
End If 
If Not(E)
  Line_ = Line_ + 1
  If Fra(line_ / 10) = 0 Dim RecArray[line_ + 10] !! task 32384  
  RecArray[Line_] = Rec_ImIdx
  Gosub ReadImIdx
  Unlock #CH_ImIdx
  Gosub TypeRef
  list$[Line_+1] = key1_imidx$,fdel$,iref$,fdel$,RTrim$(imi$[31,60]),fdel$
  Goto ELLoop
End If 
!
!
OutEnd: ! clean-up & exit
! Call programdump("tmp/imglist!","") ! dump program vars
If Spc(13) = 11
  ! terminate the viewer client
  ! Call "ShowImage","", - CH_ImIdx,E
End If 
Close #CH_ImIdx
End 

! ============== misc routines ================================
Stop "Illegal entry into routines"
!#include imSetType.i
SETTYPE: REM Hard-coded paramaters for recognized form types
LET DTDESCRIPTION$=""
IF TYPE=0
  LET DTDESCRIPTION$="Delivery receipt"
  LET PREFIX$="dr"
  LET DTINDEX1$="Order number"
  LET DTINDEX2$=""
  LET DTIMODE$="B"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF 
IF TYPE=1
  LET DTDESCRIPTION$="Product literature"
  LET PREFIX$="pl"
  LET DTINDEX1$="Item code"
  LET DTINDEX2$="Reference code"
  LET DTIMODE$="M"
  LET DTLOOKUP$="Product description"
  LET DTREFFILE$="PROD"
ENDIF 
IF TYPE=2
  LET DTDESCRIPTION$="Customer document"
  LET PREFIX$="cd"
  LET DTINDEX1$="Customer#"
  LET DTINDEX2$="Reference code"
  LET DTIMODE$="M"
  LET DTLOOKUP$="Customer name"
  LET DTREFFILE$="CUST"
ENDIF 
IF TYPE=3
  LET DTDESCRIPTION$="Vendor invoice"
  LET PREFIX$="vi"
  LET DTINDEX1$="Vendor code"
  LET DTINDEX2$="Vendor invoice no."
  LET DTIMODE$="M"
  LET DTLOOKUP$="Vendor name"
  LET DTREFFILE$="VEND"
ENDIF 
IF TYPE=4
  LET DTDESCRIPTION$="Vendor statement"
  LET PREFIX$="vs"
  LET DTINDEX1$="Vendor code"
  LET DTINDEX2$="Date (yymmdd)"
  LET DTIMODE$="M"
  LET DTLOOKUP$="Vendor name"
  LET DTREFFILE$="VEND"
ENDIF 
IF TYPE=5
  LET DTDESCRIPTION$="Vendor document"
  LET PREFIX$="vd"
  LET DTINDEX1$="Vendor code"
  LET DTINDEX2$="Reference code"
  LET DTIMODE$="M"
  LET DTLOOKUP$="Vendor name"
  LET DTREFFILE$="VEND"
ENDIF 
IF TYPE=6
  LET DTDESCRIPTION$="MSDS Sheet"
  LET PREFIX$="md"
  LET DTINDEX1$="MSDS Number"
  LET DTINDEX2$=""
  LET DTIMODE$="M"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF 
IF TYPE=7
  LET DTDESCRIPTION$="Picking document"
  LET PREFIX$="pd"
  LET DTINDEX1$="Order number"
  LET DTINDEX2$=""
  LET DTIMODE$="B"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF 
IF TYPE=8
  LET DTDESCRIPTION$="Misc. document"
  LET PREFIX$="mi"
  LET DTINDEX1$="+subtype"
  LET DTINDEX2$="Key"
  LET DTIMODE$="M"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF 
IF TYPE=9
  LET DTDESCRIPTION$="Credit memo"
  LET PREFIX$="cm"
  LET DTINDEX1$="Order number"
  LET DTINDEX2$=""
  LET DTIMODE$="B"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF 
IF TYPE=10
  LET DTDESCRIPTION$="Concrete ticket"
  LET PREFIX$="ct"
  LET DTINDEX1$="Date (yymmdd)"
  LET DTINDEX2$="Concrete ticket#"
  LET DTIMODE$="B"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF 
IF TYPE=11
  LET DTDESCRIPTION$="Order Source"
  LET PREFIX$="so"
  LET DTINDEX1$="Order Number"
  LET DTINDEX2$=""
  LET DTIMODE$="B"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF
IF TYPE=12
  LET DTDESCRIPTION$="Purchase Order"
  LET PREFIX$="po"
  LET DTINDEX1$="PO Num"
  LET DTINDEX2$=""
  LET DTIMODE$="B"
  LET DTLOOKUP$=""
  LET DTREFFILE$=""
ENDIF
RETURN 
REM {end imSetType.i}
!
TypeHead: ! type-specific column headings
If Prefix$ = "DR" Itype$ ="Del Recpt" ! Print ""; ! no sub-type to do !!!!!
If Prefix$ = "VI" Itype$ ="Vendor Inv"
If Prefix$ = "VS" Itype$ ="Vendor Stmt"
If Prefix$ = "PL" Itype$ ="Product Lit"
If Prefix$ = "CD" Itype$ ="Customer Doc"
If Prefix$ = "VD" Itype$ ="Vendor Doc"
If Prefix$ = "MI" Itype$ ="Misc. Doc"
If Prefix$ = "CT" Itype$ ="Cement Ticket No."
If Prefix$ = "MD" Itype$ ="MSDSheet"
If Prefix$ = "PD" Itype$ ="Pick Doc"
If Prefix$ = "OS" Itype$ ="Order Source"
If Prefix$ = "PO" Itype$ ="Purchase Order"
Return 
!-------------------------------------------------
TypeRef: ! type-specific reference number
If Prefix$ = "DR" IRef$="Del Recpt"
If Prefix$ = "VI" IRef$=Imi$[9,28]
If Prefix$ = "VS" IRef$=Imi$[11,12],"/",Imi$[13,14],"/",Imi$[9,10]
If Prefix$ = "PL" IRef$=Imi$[15,28]
If Prefix$ = "CD" IRef$=Imi$[9,28]
If Prefix$ = "VD" IRef$=Imi$[9,28]
If Prefix$ = "MI" IRef$=Imi$[7,28]
If Prefix$ = "CT" IRef$=Imi$[9,16]
If Prefix$ = "MD" IRef$=Imi$[15,28]
If Prefix$ = "PO" IRef$=Rtrim$(Code$)  ! Imi$[9,28]
Return 

ReadImIdx: !
! #include read.imidx.i
! Read ImIndex file                                 
Mat Read #CH_ImIdx, Rec_ImIdx,    0     ;       Imi$
Mat Read #CH_ImIdx, Rec_ImIdx,   66     ;       Imi1
Mat Read #CH_ImIdx, Rec_ImIdx,   72     ;       Imi2
Mat Read #CH_ImIdx, Rec_ImIdx,   80     ;       Imi3
!
Return 

RAClear: For x = 0 To 10 \  RecArray[x] = 0 \ Next x
Return 

RTrim_: Work$=RTrim$(work$)
Return 

ISERRMSG: ! Call "MsgBox",J7$
Return 

Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
Err_Search: !
!
! dx replace entire error routine
! include "src/callmainerrnet.inc"
Include "src/callsuberr.inc"
End 
