! >>> Program 268pcnprt
!
! description Price Change Notification - REPORT ONLY!!
!
! loadsave -w -n 100,10 -o prog/dxport/268pcnprt.dl4 src/268pcnprt.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem op268pcnprt
Rem Price Change Notification Form Generator (Print Version)
Rem Author: Nate 4/23/97 CCT#97581
! 
!???:01/06/00:Converted to Bedit   (mkbedit 1.2b)
! jliu4/26/04 cct177600 add the selection by sale range and/or customer range 
! -------------  notes for rev9 upgrade for Runge Paper Company ----------------
! 12/04/07 vst cct221050 - added the following rev9 code to custom program:
! 08/28/02 jcs cct158307 - dept to 2% variable - lastprice key change
! ------------------------------------------------------------------------------

Rem BEDIT Version: 2.3 OBJECT CODE     Created: DEC 17, 2010  11:50:53
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/misc/op268pcnprt.src (univ2) [txc] {33615}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FormatDate,InpBuf,String
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Enter WHSE,FLEPTR2[],REC_CUST,CH_LPT,CNAME$
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim Rstr$[500] \ rstr$="268ocnprt"
Dim 1%,CH_CUST
Dim A3$[22],BT$[20],U2$[60],A2$[30],A1$[142],BA1$[142]
Dim 2%,A0[3],C1[12],REC,C3[1]
Dim 1%,S0[20],SUB_,SZN,C7[4],C0,C2[2],C8,C11[2]
Dim 3%,C4[6],C10[5],CFIN[8],U1,C9,C5[5],C6[9],REC_CUST
Dim LP$[12],LP2$[84],LPMT$[2]
Dim 1%,LPC3[4],AI,LPEUN[2],LPWH
Dim 2%,LPDF,LPC1[2],LPR1[3],LPC5[3],LPPCDATE,LPDEPT
Dim 3%,LPC2[2],LPC4[3],LPR[4],LPUNF[6],PERM[1],LPLPERM
Dim 1%,CH_VEND,VNDA[4],VNDM4[1],VBANK
Dim 2%,VND1[6],VND3
Dim 3%,REC_VEND,VNDA2[11],VNDC1[5],VND4[1],VNDA3[7]
Dim VNDA$[264],VNDC2$[44],VNDA1$[20],VNDA2$[8],VNDA3$[4],VCTRY$[15]
Dim VNDA5$[60]
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60],PRFLG$[10]
Dim PRMKUPTYP$[4]
Dim 1%,CH_PROD,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1],PRBASE
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1],FDT[1]
Dim 2%,PRMKUP[3]
Dim 3%,REC_PROD,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Dim 3%,FUT[2]
Dim 1%,FXTMP$[50],SFTMP$[50],LGTMP$[50],LINEFEED$[100],FXDIR$[50],BLOCK$[500]
Dim 1%,DATE$[8],KPROD$[50],KVEND$[50],KSORT$[50],CCD$[14],PUNIT$[4]
Dim 1%,EXISTS,TRUE,FALSE,GOLINE,LINE_,PAGE,PAGELENGTH,SECOND_ADDR,CURRENT,FUTURE
Dim 1%,CNVTU[2],PRODLENGTH,CH_CCODES
Dim ALPHA$[26],PHONE$[13],CNA$[100],CNA0$[68]
Dim KCUSTNOTES$[50],S1$[118],TMPCUST$[6],K13$[4]
Dim 2%,BRK,EFF_DATE,CNODATE
Dim 3%,PRICE[1],PRICEP[1],CNVTA,AMOUNT
TRUE = 1;FALSE = 0
LINEFEED$ = "\15\",LINEFEED$
CURRENT = 0;FUTURE = 1
ALPHA$ = "abcdefghijklmnopqrstuvwxyz"
CH_CNTRL = FLEPTR2[0]
CH_PROD = FLEPTR2[1]
CH_CCODES = FLEPTR2[7]
CH_SORT = FLEPTR2[9]
CH_CUST = FLEPTR2[10]
CH_VEND = FLEPTR2[11]
CH_CUSTNOTES = FLEPTR2[12]
CH_SLSM = FLEPTR2[13]
MAIN: Rem
Mat Read #CH_CUST,REC_CUST,0,30;A1$
Mat Read #CH_CUST,REC_CUST,142;C1
Mat Read #CH_CUST,REC_CUST,194;C2
Mat Read #CH_CUST,REC_CUST,200;C3
Mat Read #CH_CUST,REC_CUST,208;C0
Mat Read #CH_CUST,REC_CUST,210;C4
Mat Read #CH_CUST,REC_CUST,252;C5
Mat Read #CH_CUST,REC_CUST,288;C6
Mat Read #CH_CUST,REC_CUST,348;A2$
Mat Read #CH_CUST,REC_CUST,378;C7
Mat Read #CH_CUST,REC_CUST,388;A3$
Mat Read #CH_CUST,REC_CUST,410;C8
Mat Read #CH_CUST,REC_CUST,412;C9
Mat Read #CH_CUST,REC_CUST,418;SUB_
Mat Read #CH_CUST,REC_CUST,420;U1
Mat Read #CH_CUST,REC_CUST,426;U2$
Mat Read #CH_CUST,REC_CUST,486;A0
Mat Read #CH_CUST,REC_CUST,502;S0
Mat Read #CH_CUST,REC_CUST,544;CFIN
Mat Read #CH_CUST,REC_CUST,598;SZN
Mat Read #CH_CUST,REC_CUST,600;BT$
Mat Read #CH_CUST,REC_CUST,620;REC
Mat Read #CH_CUST,REC_CUST,624;C10
Mat Read #CH_CUST,REC_CUST,660;C11
Unlock #CH_CUST
Gosub GET_PHONEFAX_NUM
Gosub GET_SLSMNAME
LINE_ = 1;PAGE = 1;PAGELENGTH = 60
Print #CH_LPT; Tab (60);Tim(9) Using "&&";"/";Tim(10) Using "&&";"/";Tim(8) Using "&&"
LINE_ = LINE_ + 1
Print #CH_LPT; Tab (60);"PCN" + C1[2] Using "&&&" + "-" + C1[1] Using "&&&&&&"
LINE_ = LINE_ + 1
GOLINE = 8 \ Gosub ADVANCE_LINE
Print #CH_LPT; Tab 7;A1$[31,60]
LINE_ = LINE_ + 1
Print #CH_LPT; Tab 7;A1$[61,90]
LINE_ = LINE_ + 1
BLOCK$ = A1$[91,120] \ Gosub TRIM
If BLOCK$
  Print #CH_LPT; Tab 7;BLOCK$
  LINE_ = LINE_ + 1
  SECOND_ADDR = TRUE
Else 
  SECOND_ADDR = FALSE
End If 
BLOCK$ = A1$[121,135] \ Gosub TRIM \ Print #CH_LPT; Tab 7;BLOCK$;", ";
BLOCK$ = A1$[136,137] \ Gosub TRIM \ Print #CH_LPT;BLOCK$;"  ";
BLOCK$ = A2$[1,10] \ Gosub TRIM \ Print #CH_LPT;BLOCK$;
If Not(SECOND_ADDR)
  Print #CH_LPT;
  LINE_ = LINE_ + 1
Else 
  Print #CH_LPT;""
  LINE_ = LINE_ + 1
End If 
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT; Tab 7;"Attn: Purchasing Department"
LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"Phone: ";
PHONE$ = " ",PHONE$
If BA1$[21,21] <> " " If BA1$[21,21] <> ""
  PHONE$[1,1] = ""
  PHONE$[2,4] = BA1$[21,23]
  PHONE$[5,5] = "-"
End If 
If BA1$[24,24] <> " " If BA1$[24,24] <> ""
  PHONE$[6,8] = BA1$[24,26]
  PHONE$[9,9] = "-"
  PHONE$[10,13] = BA1$[27,30]
  Print #CH_LPT; Tab 8;PHONE$[1,13];
End If 
Print #CH_LPT; Tab 45;"RE:   Price Change Notification"
LINE_ = LINE_ + 1
Print #CH_LPT;"Fax: ";
Print #CH_LPT; Tab 9;CNA0$[9,28]
LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"Dear Customer,"
LINE_ = LINE_ + 1
Print #CH_LPT;""
LINE_ = LINE_ + 1
Print #CH_LPT;"Several of our suppliers have announced price changes effective during the "
LINE_ = LINE_ + 1
Print #CH_LPT;"next several weeks.  It is necessary for us to pass these changes on."
LINE_ = LINE_ + 1
Print #CH_LPT;"Listed below are the affected items you have purchased in the last 12 months."
LINE_ = LINE_ + 1
Print #CH_LPT;"These are your new prices as of the effective date noted below."
LINE_ = LINE_ + 1
Print #CH_LPT;""
LINE_ = LINE_ + 1
Print #CH_LPT;""
LINE_ = LINE_ + 1
Gosub SUBHEADER
KSORT$ = "";LAST_VENDOR = -1
LOOP_SORT: Search #CH_SORT,3,1;KSORT$,REC_SORT,E \ If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_SORT,REC_SORT,0;LPC3
  Mat Read #CH_SORT,REC_SORT,10;PRICE
  Mat Read #CH_SORT,REC_SORT,22;EFF_DATE;
  KPROD$ = KSORT$[7]
  Search #CH_PROD,2,1;KPROD$,REC_PROD,E \ If E Gosub ERR_SEARCH
  Mat Read #CH_PROD,REC_PROD,0;A$
  Mat Read #CH_PROD,REC_PROD,156;B
  Mat Read #CH_PROD,REC_PROD,256;A
  Mat Read #CH_PROD,REC_PROD,460;A1
  Mat Read #CH_PROD,REC_PROD,508;A2
  Mat Read #CH_PROD,REC_PROD,512;PFU1
  Mat Read #CH_PROD,REC_PROD,554;PFU2
  Mat Read #CH_PROD,REC_PROD,596;PRPARC
  Mat Read #CH_PROD,REC_PROD,620;LM
  Mat Read #CH_PROD,REC_PROD,624;PR_PO
  Read #CH_PROD,REC_PROD,630;LLC
  Mat Read #CH_PROD,REC_PROD,632;PSN$
  Mat Read #CH_PROD,REC_PROD,652;PSN
  Mat Read #CH_PROD,REC_PROD,660;U2
  Mat Read #CH_PROD,REC_PROD,670;U4
  Read #CH_PROD,REC_PROD,678;U3
  Mat Read #CH_PROD,REC_PROD,684;U3$
  Mat Read #CH_PROD,REC_PROD,744;HZ$
  Mat Read #CH_PROD,REC_PROD,834;A3
  Mat Read #CH_PROD,REC_PROD,846;PFTB
  Read #CH_PROD,REC_PROD,854;UPCT
  Mat Read #CH_PROD,REC_PROD,856;C1$
  Mat Read #CH_PROD,REC_PROD,894;PR_C4
  Read #CH_PROD,REC_PROD,938;PF_LOAD2
  Mat Read #CH_PROD,REC_PROD,944;PR_A2$
  Mat Read #CH_PROD,REC_PROD,974;PFCO
  Mat Read #CH_PROD,REC_PROD,990;PLV
  Mat Read #CH_PROD,REC_PROD,1002;PLC
  Mat Read #CH_PROD,REC_PROD,1018;PFN
  Mat Read #CH_PROD,REC_PROD,1030;FUT
  Mat Read #CH_PROD,REC_PROD,1048;FDT
  Mat Read #CH_PROD,REC_PROD,1056;PRFLG$
  Mat Read #CH_PROD,REC_PROD,1066;PRBASE
  Mat Read #CH_PROD,REC_PROD,1068;PRMKUP
  Mat Read #CH_PROD,REC_PROD,1084;PRMKUPTYP$
  Unlock #CH_PROD
  VENDOR = KSORT$[1,6]
  If VENDOR <> LAST_VENDOR
    KVEND$ = VENDOR Using "######"
    Search #CH_VEND,2,1;KVEND$,REC_VEND,E \ If E > 2 Gosub ERR_SEARCH
    If Not(E)
      Mat Read #CH_VEND,REC_VEND,0;VNDA$
      Mat Read #CH_VEND,REC_VEND,264;VND1
      Mat Read #CH_VEND,REC_VEND,292;VNDA2
      Mat Read #CH_VEND,REC_VEND,364;VNDC1
      Mat Read #CH_VEND,REC_VEND,400;VNDC2$
      Mat Read #CH_VEND,REC_VEND,444;VND3
      Mat Read #CH_VEND,REC_VEND,448;VND4
      Mat Read #CH_VEND,REC_VEND,460;VNDA1$
      Mat Read #CH_VEND,REC_VEND,480;VNDA2$
      Mat Read #CH_VEND,REC_VEND,488;VNDA
      Mat Read #CH_VEND,REC_VEND,498;VNDA3
      Mat Read #CH_VEND,REC_VEND,546;VNDA3$
      Mat Read #CH_VEND,REC_VEND,554;VNDM4
      Mat Read #CH_VEND,REC_VEND,558;VCTRY$
      Mat Read #CH_VEND,REC_VEND,574;VBANK
      Mat Read #CH_VEND,REC_VEND,576;VNDA5$
      Unlock #CH_VEND
    Else 
      VNDA$ = "Supplier not on file"
    End If 
    VENDOR_BREAK = TRUE
    LAST_VENDOR = VENDOR
  End If 
  If VENDOR_BREAK
    VENDOR_BREAK = FALSE
  End If 
  If LINE_ > PAGELENGTH Gosub TOF
  BLOCK$ = KSORT$[7] \ Gosub TRIM
  PRODLENGTH = Len(BLOCK$) + 1
  Print #CH_LPT;BLOCK$;" ";
  BLOCK$ = A$[9,38] + A$[63,92] \ Gosub TRIM
  Print #CH_LPT;BLOCK$[1,36 - PRODLENGTH];
  CNVTA = PRICE[CURRENT]
  CNVTU[0] = 0
  CNVTU[1] = LPC3[3]
  CNVTU[2] = 2
  Gosub CONVERT
  PRICEP[CURRENT] = AMOUNT
  CNVTA = PRICE[FUTURE]
  CNVTU[0] = 0
  CNVTU[1] = LPC3[3]
  CNVTU[2] = 2
  Gosub CONVERT
  PRICEP[FUTURE] = AMOUNT
  If LPC3[3] = -1 Let PUNIT$ = "CWT "
  If LPC3[3] = -2 Let PUNIT$ = "LOT "
  If LPC3[3] = -3 Let PUNIT$ = "LB  "
  If LPC3[3] > 0 Mat Read #CH_CCODES,LPC3[3],0;CCD$; \ PUNIT$ = CCD$[11,14]
  Print #CH_LPT; Tab (40);PRICEP[FUTURE] Using "$,$$$,$$#.####";
  Print #CH_LPT; Tab 60;PUNIT$;
  DATE$ = EFF_DATE Using "&&&&&&"
  Call FormatDate(DATE$,DATE$,E)
  Print #CH_LPT; Tab (65);DATE$
  LINE_ = LINE_ + 1
  Goto LOOP_SORT
End If !"end of sort traversal
If LINE_ + 14 > PAGELENGTH Gosub TOF
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"Pricing is not guaranteed, and is considered price prevailing at time of"
LINE_ = LINE_ + 1
Print #CH_LPT;"delivery. If you have any questions please let me know. We appreciate"
LINE_ = LINE_ + 1
Print #CH_LPT;"your business and thank you for understanding."
LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"Sincerely," \ LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Print #CH_LPT;S1$[1,30] \ LINE_ = LINE_ + 1
Print #CH_LPT;"Sales Representative" \ LINE_ = LINE_ + 1
Print #CH_LPT;""
LINE_ = LINE_ + 1
GOLINE = 57 \ Gosub ADVANCE_LINE
Goto OUTEND
SUBHEADER: Rem"print the sub heading
Print #CH_LPT; Tab (46);"New"
LINE_ = LINE_ + 1
Print #CH_LPT;"Item Number / Description";
Print #CH_LPT; Tab (47);"Price"; Tab 60;"UM"; Tab (65);"Eff.Date"
LINE_ = LINE_ + 1
Print #CH_LPT;"" \ LINE_ = LINE_ + 1
Return 
ADVANCE_LINE: Rem"========== move to the line requested
If GOLINE <= LINE_ Return 
Print #CH_LPT;LINEFEED$[LINE_,GOLINE - 1];
LINE_ = GOLINE
Return 
TOF: Rem"========== form feed
Print #CH_LPT;"\14\";
LINE_ = 1
Return 
TRIM: Rem"===== trim off leading and trailing spaces from the given string
I = 1;J = Len(BLOCK$)
LOOP_TRIM1: If I <= J If BLOCK$[I,I] = " " Let I = I + 1 \ Goto LOOP_TRIM1
If I < J
LOOP_TRIM2: If BLOCK$[J,J] = " " Let J = J - 1 \ Goto LOOP_TRIM2
End If 
If I < J Let BLOCK$ = BLOCK$[I,J] Else Let BLOCK$ = ""
Return 
GET_PHONEFAX_NUM: Rem"get the phone and fax number from bill to code
TMPCUST$ = C1[4] Using "######"
Search #CH_CUST,2,1;TMPCUST$,TMPREC,E
If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_CUST,TMPREC,0;BA1$
Else 
  BA1$ = " ",BA1$
End If 
KCUSTNOTES$ = C1[4] Using "######"
Search #CH_CUSTNOTES,2,1;KCUSTNOTES$,REC_CUSTNOTES,E
If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_CUSTNOTES,REC_CUSTNOTES,0,30;CNA$
  Mat Read #CH_CUSTNOTES,REC_CUSTNOTES,100;CNA0$
  Mat Read #CH_CUSTNOTES,REC_CUSTNOTES,168;CNODATE
  Unlock #CH_CUSTNOTES
Else 
  CNA0$ = " ",CNA0$
End If 
Return 
GET_SLSMNAME: Rem
K13$ = C1[2] Using "### "
Search #CH_SLSM,2,1;K13$,REC_SLSM,E
If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_SLSM,REC_SLSM,0;S1$;
Else 
  S1$ = " ",S1$
End If 
Return 
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+msc$(4)
Error 11000
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
!include "src/callmainerrnet.inc"
include "src/callmainerrnet_call.inc"
End
OUTEND: End 
