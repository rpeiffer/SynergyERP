! >>> Program 391
!
! description Purchasing P.O. Status Report
!
! loadsave -w -n 100,10 -o prog/dxport/391.dl4 src/391.src
! 
! ERP Scheduler enabled
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 13, 2004  15:02:59
Rem /w/papermaster/r2002//usr/acct/jliu/work/devl/po/po391.src (univ2) [jliu] {49813}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem PO391  PURCHASE ORDER STATUS REPORT
Rem  AUTHOR: G.DOSCHER   2/26/81
Rem  LAST UPDATE:  G.DOSCHER  3/14/85
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
declare Intrinsic function FindChannel

Declare External Function GetParameter$
Declare External Sub ERPCronSuccess

External Lib "ubsfunc.dl4"
Declare External Function BuildSort

!! Option Default Dialect IRIS1
Com 2%,CODATE
Try ! Main try
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Vendor$[6],VendorName$[30],PO$[6],Type$[3],OrderDate$[8],DueDate$[8]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim 1%,F,WHSE,H4[3],PO1[9]
Dim 2%,D9[5],sbuyer,ebuyer
Dim 2%,H0[5],V2,X2T[3],H3[4],DT3[1],JDATE[5]
Dim A$[50],A1$[50],A2$[50],D$[8],F$[20],F1$[30],H$[82],H1$[116],M$[20]
Dim P$[80],R1$[20],R2$[20],R3$[20],R4$[20],S$[180],S2$[400],U5$[131]
Dim C$[1],U6$[63],U9$[131],V$[31],X$[20],P9$[50],ANS$[2],BUYER$[30]
! - Gosub L_10000
For K1 = 2 To 12 \ Read J \ If J = -1 Goto L_820
  Read #1,88,J;F$; \ Ropen #K1,F$
L_820: Next K1
Data "-1","1792","-1","2400","1808","-1","2416","-1","2432","2464","1728"

Read #1,0,100;D$;
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
S2$ = "ENTERED" \ S2$[20] = "PRINTED" \ S2$[40] = "REGISTERED"
S2$[60] = "OPEN" \ S2$[80] = "IN PROCESS" \ S2$[100] = "REC. REG'D"
S2$[120] = "CLOSED"
S2$[200] = "DEBIT MEMO ENTERED" \ S2$[220] = "DEBIT MEMO PRINTED"
S2$[240] = "DEBIT MEMO REGISTERED" \ S2$[260] = "DEBIT MEMO ACCEPTED"
S2$[320] = "DEBIT MEMO CLOSED"
A$ = "" \ S1 = 99 \ L1 = 99 \ P1 = 0
j8=0
try
	L2 = Chf(0)
else
	LET J8 = spc(8)
end try
L2 = 60 \ If J8 Let L2 = 21
! - Goto L_7000 ! input
!
! dx add xport reporting code
DXSetup:
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
if erpCron
	! stub routine does not build sort file before
	! running and this program assumes it is there
	! and open
	if BuildSort(e$,25,0,9) <> 9 error 42
end if 
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"391",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
D1 = GetParameter$("sortby") ! sort by
if d1<1 or d1>7 or d1=5
	e$="Invalid sort by!" \ error 10000
end if
S$ = GetParameter$("duedate") ! due date cutoff
R1$ = GetParameter$("begsortby") ! starting sort by
R2$ = GetParameter$("endsortby") ! ending sort by
F9 = GetParameter$("postatus") ! po status 1=comfirmed, 2=non-comfirmed, 3=both
tmp$ = GetParameter$("closedpo") ! include closed PO
if not(erpCron)
	if tmp$="" let C$="N" else C$="Y" ! include closed po
else
	c$ = tmp$
end if
tmp$ = rtrim$(GetParameter$("whse")) \ if tmp$="" let tmp$="1"
whse=tmp$[1,2] ! warehouse
!let whse=whse+1! sent from droplist record #
if whse<1 or whse>99 let e$="Invalid warehouse" \ error 10000
!  dx end
!
! due date cutoff
X2 = S$ \ S$ = X2 Using "&#####" \ M$ = S$[5,6],S$[1,4]
CODATE = M$
errflag=0
X2 = CODATE \ Gosub L_17840 \ if CODATE let errflag=1
If errflag let e$="Invalid due date cutoff!" \ error 10000
JDATE[5] = X2
!
! starting & ending sortby section  
!           *** note : no sort by '5', different program
!
if D1=1 or D1=2 ! vendor or PO #
  if D1=1
    tmp$="vendor" 
	T[0] = 1 \ T[1] = 35 \ T[2] = 47 \ T[3] = 56
	D2 = 2 \ C1 = 9 
  else
	tmp$="p.o. #"
	T[0] = 13 \ T[1] = 1 \ T[2] = 47 \ T[3] = 56
	D2 = 1 \ C1 = 9 
  endif
  X2=R1$ \ R1$=X2 using "######"
  if R2$="" let R2$="999999"
  X3=R2$ \ R2$=X3 using "######"
  If X2<0 Or X2>999999 let e$="Invalid starting ",tmp$,", must be between 0 and 999999!" \ error 10000
  If X3<X2 Or X3>999999 let e$="Invalid ending ",tmp$,", must be between starting vendor and 999999!" \ error 10000
endif
!
if D1=3 or D1=4 ! order or due date
  if D1=3 let T[0] = 22 \ T[1] = 10 \ T[2] = 1 \ T[3] = 56 
  if D1=4 let T[0] = 22 \ T[1] = 10 \ T[2] = 56 \ T[3] = 1
  D2 = 2 \ C1 = 9 
  X2 = R1$ \ S$=X2 using "&&&&&&"
  R1$ = S$[5,6],S$[1,4] ! starting yymmdd
  if R2$="" let R2$="999999"
  X3 = R2$ \ S$=X3 using "&&&&&&"
  R2$ = S$[5,6],S$[1,4] ! ending yymmdd
  X2 = R1$[1,6] \ Gosub L_17840 \ X2 = 0
  R1$ = X2 Using "######"
  X2 = R2$[1,6] \ Gosub L_17840 \ If X2 = 999999 Let X2 = R2$[1,6]
  R2$ = X2 Using "######"
endif
! 
if D1=6
  R1$="" \ R2$="999999" ! all open orders
  T[0] = 13 \ T[1] = 1 \ T[2] = 47 \ T[3] = 56
  T[4] = 63 \ F9 = 3 \ C1 = 8
endif
!
if D1=7 ! buyer
  T[0] = 1 \ T[1] = 35 \ T[2] = 47 \ T[3] = 56
  D2 = 2 \ C1 = 9 
  X2=R1$ \ R1$=X2 using "###"
  if R2$="" let R2$="999"
  X3=R2$ \ R2$=X3 using "###"
  If X2<0 Or N1[1]>999 let e$="Invalid starting buyer, must be between 0 and 999!" \ error 10000
  If N1[2]<N1[1] Or N1[2]>999 let e$="Invalid ending buyer, must be between starting buyer and 999!" \ error 10000
endif
let sbuyer=0;ebuyer=999
if d1<>7
	tmp$ = GetParameter$("sbuyer") ! starting sort by
	if rtrim$(tmp$)="" let sbuyer=0 else let sbuyer=tmp$
	tmp$ = GetParameter$("ebuyer") ! ending sort by
	if rtrim$(tmp$)="" let ebuyer=999 else let ebuyer=tmp$
	If sbuyer<0 Or sbuyer>999 let e$="Invalid starting buyer, must be between 0 and 999!" \ error 10000
	If ebuyer<sbuyer Or ebuyer>999 let e$="Invalid ending buyer, must be between starting buyer and 999!" \ error 10000
endif
!
! warehouse
If WHSE<1 Or WHSE>D9[5] let e$="Invalid warehouse, must be between 1 and ",D9[5],"!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
gosub L_8000 ! sort section
!
! **** Process Section
!
if J8 ! dx xml headings
  !
  select case D1
    case 1 ! vendor
      tmp$="VENDOR",fdel$,"VENDOR NAME",fdel$
	  tmp$=tmp$,"P.O. #",fdel$,"LVL",fdel$
	  tmp$=tmp$,"ORDER DATE",fdel$,"DUE DATE",fdel$
    case 3 ! order date
      tmp$="ORDER DATE",fdel$,"P.O. #",fdel$,"LVL",fdel$
      tmp$=tmp$,"VENDOR",fdel$,"VENDOR NAME",fdel$,"DUE DATE",fdel$
    case 4 ! due date
      tmp$="DUE DATE",fdel$,"P.O. #",fdel$,"LVL",fdel$
	  tmp$=tmp$,"VENDOR",fdel$,"VENDOR NAME",fdel$,"ORDER DATE",fdel$
    case 7 ! buyer
      tmp$="BUYER",fdel$,"BUYER NAME",fdel$
      tmp$=tmp$,"P.O. #",fdel$,"LVL",fdel$
	  tmp$=tmp$,"ORDER DATE",fdel$,"DUE DATE",fdel$
	  tmp$=tmp$,"VENDOR",fdel$,"VENDOR NAME",fdel$
    case else ! po# or all open orders
      tmp$="P.O. #",fdel$,"LVL",fdel$
	  tmp$=tmp$,"VENDOR",fdel$,"VENDOR NAME",fdel$
	  tmp$=tmp$,"ORDER DATE",fdel$,"DUE DATE",fdel$
  end select
  tmp$=tmp$,"CONFIRMED",fdel$,"CONFIRMED DATE",fdel$
  tmp$=tmp$,"VENDOR REF #",fdel$,"TERMS",fdel$
  tmp$=tmp$,"SHIP VIA",fdel$,"LINE",fdel$
  tmp$=tmp$,"STATUS",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
L_2000: 
Search #C1,3,1;A$,R0,E
If E Goto OUTEND
Mat Read #8,R0;H0;
Mat Read #8,R0,330;PO1;
If C$ = "N" If H0 > 13 Goto L_2000
If C$ = "N" If H0 = 7 Goto L_2000
X2 = H0[4] \ Gosub L_17840 \ X2 = 0
JDATE[0] = X2
If JDATE[5] And JDATE[0] >= JDATE[5] Goto L_2000
Mat Read #8,R0,24;H$;
Mat Read #8,R0,222;H3;
Mat Read #8,R0,242;H4;
If WHSE <> H4[1] Goto L_2000
If H0[1] = 0 Goto L_2000
Read #5,H0[1],268;V2;
Read #5,H0[1],0;V$;
On F9 Goto L_2070,L_2090,L_2100
L_2070: If H0[5] Goto L_2100
Goto L_2000
L_2090: If H0[5] Goto L_2000
L_2100: If L1 > L2 Gosub L_5800
If D1 = 7
  TMPBUY = A$[2,7] ! from sort new vendor
  If HOLDBUY<>0
	If HOLDBUY <> TMPBUY
		Gosub L_5800
	endif
    HOLDBUY = TMPBUY
  Else 
    If Not(HOLDBUY) Let HOLDBUY = TMPBUY
  End If 
End If 
If S1 <> H0 Gosub L_6000
Gosub L_5000
Goto L_2000
!
L_5000: Rem PRINT DETAIL
if J8 ! dx xml
  !
  Vendor$=V2 Using "######" \ VendorName$=rtrim$(V$[1,len(V$)-1])
  PO$=H0[2] Using "######"
  Type$=""
  If H3[2] <> 0 Let Type$=Type$,"-",Str$(H3[2])
  If H4[2] Let Type$=Type$,"F"
  X2 = H0[3] \ Gosub L_6500
  OrderDate$=P$
  X2 = H0[4] \ Gosub L_6500
  If H0[4] let DueDate$=P$ else DueDate$=Blank$ 
  !
  select case D1
    case 1 ! vendor
      tmp$=Vendor$,fdel$,VendorName$,fdel$
	  tmp$=tmp$,PO$,fdel$,Type$,fdel$
	  tmp$=tmp$,OrderDate$,fdel$,DueDate$,fdel$
    case 3 ! order date
      tmp$=OrderDate$,fdel$,PO$,fdel$,Type$,fdel$
      tmp$=tmp$,Vendor$,fdel$,VendorName$,fdel$,DueDate$,fdel$
    case 4 ! due date
      tmp$=DueDate$,fdel$,PO$,fdel$,Type$,fdel$
	  tmp$=tmp$,Vendor$,fdel$,VendorName$,fdel$,OrderDate$,fdel$
    case 7 ! buyer
	  gosub GET_BUYER
      tmp$=PO1[6] Using "######",fdel$,rtrim$(Buyer$),fdel$
      tmp$=tmp$,PO$,fdel$,Type$,fdel$
	  tmp$=tmp$,OrderDate$,fdel$,DueDate$,fdel$
	  tmp$=tmp$,Vendor$,fdel$,VendorName$,fdel$
    case else ! po# or all open orders
      tmp$=PO$,fdel$,Type$,fdel$
	  tmp$=tmp$,Vendor$,fdel$,VendorName$,fdel$
	  tmp$=tmp$,OrderDate$,fdel$,DueDate$,fdel$
  end select
  tmp$=tmp$,rtrim$(H$[59,68]),fdel$
  P$ = " " \ X2 = H0[5]
  If X2 Gosub L_6500
  tmp$=tmp$,P$,fdel$,rtrim$(H$[1,14]),fdel$
  tmp$=tmp$,rtrim$(H$[35,48]),fdel$,rtrim$(H$[15,24]),fdel$
  Gosub L_6600
  tmp$=tmp$,X2 Using "###",fdel$
  tmp=(H0-1)*20 \  if tmp=0 let tmp=1
  u5$=" ",u5$
  If H0[0] < 90 If H0[0] Let U5$=S2$[tmp]
  tmp$=tmp$,Rtrim$(U5$),fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
L1 = L1 + 1
U6$ = " ",U6$
If D1 = 7
  !U6$[T[0],T[0] + 5] = PO1[6] Using "######"
  !Gosub GET_BUYER
  !U6$[T[0] + 8,T[0] + 32] = BUYER$ + "                              "  ! in case BUYER$ is too short
  U6$[T[0],T[0] + 5] = V2 Using "######" ! Vendor Code
  U6$[T[0] + 8,T[0] + 32] = V$ ! Vendor Name
Else 
  U6$[T[0],T[0] + 5] = V2 Using "######"
  U6$[T[0] + 8,T[0] + 32] = V$
End If 
U6$[T[1],T[1] + 6] = H0[2] Using "######"
If H3[2] <> 0 Let U6$[T[1] + 6,T[1] + 9] = "-",Str$(H3[2])
If H4[2] Let U6$[T[1] + 10,T[1] + 10] = "F"
X2 = H0[3]
Gosub L_6500
U6$[T[2],T[2] + 7] = P$
X2 = H0[4]
Gosub L_6500
If H0[4] = 0
  U6$[T[3],T[3] + 7] = "        "
Else 
  U6$[T[3],T[3] + 7] = P$
End If 
Print #0;U6$; Tab 65;H$[59,68]; Tab 76;
P$ = " "
X2 = H0[5]
If X2 Gosub L_6500
Print #0;P$; Tab 86;H$[1,14]; Tab 101;H$[35,48]; Tab 116;H$[15,24]; Tab 128;
Gosub L_6600
Print #0; Using "###";X2
Return 
!
L_5800: Rem HEADINGS
if J8 return ! dx xml
!
! - If P1 If L8 Input @0,23;"PRESS <CR> TO CONTINUE "X$
If L8 Print 'CS';
If P1 If Not(L8) Print #0;"\14\";
P1 = P1 + 1 \ L1 = 4 \ S1 = -1
Print #0;"\15\"; Tab 10;D$; Tab 44;"PURCHASE ORDER STATUS REPORT - ";
Print #0; Using "WAREHOUSE  ##";WHSE;
Print #0; Tab 120;"PAGE";P1
If D1=7
	GOSUB GET_BUYER:
	PRINT #0; "BUYER:";
	print #0; using "######";po1[6];
	print #0;" ";Buyer$;
endif

If CODATE
Then 
  X2 = CODATE \ Gosub L_6500
Else 
  P$ = "N/A"
End If 
Print #0; Tab (55);"CUTOFF DATE: ";P$
Print #0;U9$
Return 
L_6000: Rem NEW STATUS
If L1 > L2 - 2 Gosub L_5800
L1 = L1 + 2
U5$ = "* ",U5$ \ tmp=(H0-1)*20 \  if tmp=0 let tmp=1
If H0[0] < 90 If H0[0] Let U5$[63 - (Len(S2$[tmp]) / 2),69 + (Len(S2$[tmp]) / 2)] = "   ",S2$[tmp],"   "
if J8=0 Print #0;"\15\";U5$
S1 = H0
Return 
!
L_6500: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
!
L_6600: Rem COUNT LINES
A2$ = H0[2] Using "######"
X2 = 0
L_6630: Search #10,3,1;A2$,V1,E
If E Return 
X3 = A2$[1,6]
If X3 <> H0[2] Return 
X2 = X2 + 1
Goto L_6630
!
! - L_7000: Rem SELECT RANGE OPTION
! - Print 'CS CR'; Tab 22;"PURCHASE ORDER STATUS REPORT"
! - Print @0,8;
! - Print Tab 20;"1> VENDOR                  2> P.O. NUMBER";'CR'
! - Print Tab 20;"3> ORDER DATE              4> DUE  DATE";'CR'
! - Print Tab 20;"5> PRODUCT                 6> ALL OPEN ORDERS";'CR'
! - Print Tab 20;"7> BUYER"
! - L_7060: Print @0,5;'CL';"ENTER SORT/RANGE OPTION,  E: TO EXIT...: ";
! - Input ""S$
! - If S$ = "E" Goto OUTEND
! - X1 = S$
! - If X1 > 0 If X1 <= 7 Goto L_7095
! - Print 'RB';"  INVALID! -  "
! - Signal 3,15
! - Goto L_7060
! - L_7095: Gosub L_9200
! - On X1 Goto L_7110,L_7200,L_7300,L_7500,L_9100,L_7600,L_7115
! - L_7110: Rem  BY VENDOR
! - F1$ = "VENDOR CODE"
! - M$ = "######"
! - Gosub L_7800
! - T[0] = 1 \ T[1] = 35 \ T[2] = 47 \ T[3] = 56
! - D1 = 1 \ D2 = 2 \ C1 = 9 \ Goto L_7700
! - L_7115: Rem  BY BUYER
! - F1$ = "BUYER CODE"
! - M$ = "###"
! - Gosub L_7800
! - T[0] = 1 \ T[1] = 35 \ T[2] = 47 \ T[3] = 56
! - D1 = 7 \ D2 = 2 \ C1 = 9 \ Goto L_7700
! - L_7200: Rem  BY P.O.#
! - F1$ = "P.O. NUMBER"
! - M$ = "######"
! - Gosub L_7800
! - T[0] = 13 \ T[1] = 1 \ T[2] = 47 \ T[3] = 56
! - D1 = 2 \ D2 = 1 \ C1 = 9 \ Goto L_7700
! - L_7300: Rem  BY ORDER DATE
! - F1$ = "ORDER DATE (MMDDYY)"
! - M$ = "&#####"
! - Gosub L_7800
! - T[0] = 22 \ T[1] = 10 \ T[2] = 1 \ T[3] = 56
! - D1 = 3 \ D2 = 2 \ C1 = 9 \ Goto L_7700
! - L_7500: Rem  BY DUE  DATE
! - F1$ = "DUE  DATE (MMDDYY)"
! - M$ = "&#####"
! - Gosub L_7800
! - T[0] = 22 \ T[1] = 10 \ T[2] = 56 \ T[3] = 1
! - D1 = 4 \ D2 = 2 \ C1 = 9 \ Goto L_7700
! - L_7600: Rem  ALL ORDERS
! - Gosub L_7900
! - T[0] = 13 \ T[1] = 1 \ T[2] = 47 \ T[3] = 56
! - T[4] = 63 \ F9 = 3 \ C1 = 8
! - L_7700: Rem GET CONF. OPTION
! - Print 'CS CR'; Tab 22;"PURCHASE ORDER STATUS REPORT"
! - Print @0,7;
! - Print Tab 30;"1> CONFIRMED ONLY"
! - Print 'CR'; Tab 30;"2> NON-CONFIRMED ONLY"
! - L_7725: Print 'CR'; Tab 30;"3> ALL"
! - Print @0,4;'CL';"ENTER SELECTION...: ";
! - Input ""S$
! - X2 = S$
! - If X2 > 0 If X2 < 4 Goto L_7755
! - Print 'RB';"  INVALID! -  " \ Signal 3,15 \ Goto L_7725
! - L_7755: F9 = X2
! - L_7765: Print @0,14;"DO YOU WANT TO SHOW CLOSED PURCHASE ORDERS?  (Y/N) ";'CE';
! - Input ""C$ \ If C$ <> "Y" If C$ <> "N" Print 'RB'; \ Goto L_7765
! - If X1 <> 5 Gosub L_8300
! - Goto L_8000
! - L_7800: Rem GET RANGE
! - Print 'CS CR'; Tab 22;"PURCHASE ORDER STATUS REPORT"
! - Print @0,4;"ENTER STARTING ";F1$;", <CR> FOR ALL,  E: TO EXIT ";
! - Input ""R1$
! - If R1$ = "E" Goto OUTEND
! - If R1$ = "" Goto L_7900
! - Print 'CR'
! - L_7850: Print 'MU CR CL';"ENTER ENDING ";F1$;", <CR> FOR LAST.               ";
! - Input ""R2$ \ If R2$ = "" Let R2$ = "9",R2$ \ R2$[Len(M$) + 1] = ""
! - X2 = R1$ \ R1$ = X2 Using M$
! - X2 = R2$ \ R2$ = X2 Using M$
! - If D1 = 3 Or D1 = 4 Gosub L_7950
! - If R1$ <= R2$ Goto L_7940
! - Print 'RB MU CR CL';"STARTING CODE MUST BE LESS THAN ENDING CODE! -  ";
! - Signal 3,15
! - Goto L_7850
! - L_7900: R1$ = " ",R1$
! - R2$ = "9",R2$
! - L_7940: Return 
!
L_7950: Rem DATE RANGE JULIAN
Gosub L_8200
X2 = R1$[1,6] \ Gosub L_17840 \ X2 = 0
R1$ = X2 Using "######"
X2 = R2$[1,6] \ Gosub L_17840 \ If X2 = 999999 Let X2 = R2$[1,6]
R2$ = X2 Using "######"
Return 
!
L_8000: Rem SORT ON FIELD D1
If D1 = 6 Goto L_8900 ! no sort, all open orders
! - Print @0,16;'CL';"SORTING... PLEASE WAIT . . . ";
! - Signal 3,0
A$ = " ",A$
L_8040: Search #9,3,1;A$,R0,E
If E Goto L_8100
Search #9,5,1;A$,R0,E
Goto L_8040
L_8100: 
! - Print ". ";
! - Signal 3,0
R1 = R1$
R2 = R2$
A$ = " "
L_8130: Search #8,3,1;A$,R0,E
If E Goto L_8900
Mat Read #8,R0;H0;
Mat Read #8,R0,330;PO1;
If C$ = "N" If H0 > 13 Goto L_8130
If C$ = "N" If H0 = 7 Goto L_8130
If D1 = 1 If H0[1] Read #5,H0[1],268;V2; \ S$ = V2 Using "######"
If D1 = 1 Let H0[1] = S$
If D1 = 7 Let S$ = PO1[6] Using "######"
If D1 = 7 Let BUYER = S$
If D1 = 7
  If Not(BUYER) Goto L_8130
  If BUYER >= R1 If BUYER <= R2
    Goto L_8160
  Else 
    Goto L_8130
  End If 
End If 
if d1<>7
   ! if not (po1[6]) goto L_8130:
   if po1[6]<sbuyer goto L_8130: 
   if po1[6]>ebuyer goto L_8130:
endif
If D1 = 3 Or D1 = 4 Gosub L_8400
If H0[D1] >= R1 If H0[D1] <= R2 Goto L_8160
Goto L_8130
L_8160: Rem
A1$ = A$[1,1]
If D1 = 7
  A1$[2] = BUYER Using "######"
Else 
  A1$[2] = H0[D1] Using "######"
End If 
A1$[8] = H0[D2] Using "######"
Search #9,4,1;A1$,R0,E
If E Let e$ = "syserrorfile 391 sortfile mode (m)=4 keyno (k)=1 r=",R0," e=",e," keyval (k$)=",A1$ \ error 10000
Goto L_8130
!
L_8200: Rem INVERT DATE STRING
S$ = R1$
R1$ = S$[5,6],S$[1,4],""
S$ = R2$
R2$ = S$[5,6],S$[1,4],""
Return 
!
! - L_8300: Rem CHECK WAREHOUSE
! - L_8310: WHSE = 1 \ If D9[5] = 1 Goto L_8390
! - Print @0,21;"Enter warehouse to use (1-";
! - Print Using "##";D9[5];") or   E: to exit ";'CE';
! - Input Len 16386;""X$ \ If X$ = "E" Goto L_9010
! - WHSE = X$
! - If WHSE <= 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_8310
! - L_8390: Return 
!
L_8400: Rem DATE CHECKER
X2 = H0[D1] \ Gosub L_17840 \ X2 = 0
H0[D1] = X2
Return 
!
L_8900: Rem SET-UP HEADING STRING
U9$ = " ",U9$ 
If D1 = 7
  !U9$[T,T + 13] = "BUYER---NAME "
  U9$[T,T + 13] =  "Vendor   Name"
Else 
  U9$[T,T + 13] = "VENDOR---NAME"
End If 
U9$[T[1],T[1] + 6] = " P.O.#"
U9$[T[2],T[2] + 6] = " ORDER"
U9$[T[3],T[3] + 5] = " DUE "
U9$[66,81] = "CONFIRMED---DATE"
U9$[87,108] = "VENDOR REF.#     TERMS"
U9$[118] = "SHIP VIA  LINES"
A$ = " ",A$
! - Print @0,16;'CL';"PRINTING... PLEASE WAIT . . . ";
! - Signal 3,0
A$ = " "
HOLDBUY = 0
return
!
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
call ERPCronSuccess()
!

End 
!
! - If L8 Input @0,23;"PRESS <CR> TO EXIT "X$
! - L_9010: Chain "MX000C"
! - L_9100: Rem CHAIN TO BY PRODUCT
! - Chain "PO391A"
!
! - L_9200: Rem enter cutoff due date
! - L_9210: Print @0,15;'CL';"ENTER DUE DATE CUTOFF, <CR> FOR NO CUTOFF: ";
! - Input ""S$
! - If S$ = "E" Goto OUTEND
! - X2 = S$ \ S$ = X2 Using "&#####" \ M$ = S$[5,6],S$[1,4],""
! - CODATE = M$
! - X2 = CODATE \ Gosub L_17840 \ If CODATE Goto L_9210
! - JDATE[5] = X2
! - Return 
! - End 
! - L_10000: Rem CHOOSE STANDARD OR DETAIL
! - L_10010: Print 'CS'
! - Print @0,5;" 1> STANDARD REPORT "
! - Print @0,6;" 2> LINE DETAIL "
! - Input @0,8;"ENTER SELECTION, OR   E: TO EXIT  "ANS$
! - If ANS$ = "E" Goto OUTEND
! - If ANS$ = "" Goto L_10010
! - If ANS$ >= "A" Goto L_10010
! - X2 = ANS$
! - If X2 = 1 Return 
! - If X2 = 2 Chain "PO391B"
! - Goto L_10010
!
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - Return 
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_17840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
!
!
GET_BUYER: Rem "============================== get buyer
tmp=findchannel()
Open #tmp,"2/BUYERS"
BUYER$ = " ",BUYER$
If PO1[6] And PO1[6] <= 999 Mat Read #tmp,PO1[6];BUYER$;
Close #tmp
Return 

Else ! main try
	include "src/callmainerrnet.inc"
end try
