! >>> Program 396
!
! description PURCHASE DECISION REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/396.dl4 src/396.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
External Lib "libprod.lib"
Declare External Sub prodgroup
!
REM BEDIT Version: 2.2 OBJECT CODE     Created: AUG  3, 2006  12:54:00    
REM /w2/papermaster/r2005//usr/acct/dek/work/r2005/po/po396.src (univ2) [dek] {22236}                                                                     
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,String,Time,Time
! - Option Default Dialect IRIS1
Rem PO396  PURCHASE DECISION REPORT
Rem USES MIN/MAX
Rem LAST UPDATE  roman 02/09/1993. check do-not-reorder flag cct #48631
! CUSTOM CHANGES ! SoJersey ??? wmb 199780
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim 3%,J,X1,W3[24],PLP3[4],QMAX
Dim 1%,F,T1[1],H4[3],L1[5],W0[3],NONSTOCK,W1[2]
DIM 1%,ARMONTH
DIM 2%,BDAYS[24]
Dim 2%,X2[9],L2[2],D9[5],B[24],SVEND,EVEND,W2[9],BUYER,SBUYER,EBUYER
Dim D$[156],CNAME$[30],T9$[26],SUNIT$[4],UNIT$[10],K2$[50]
Dim 3%,Q2,Q3,AMOUNT,L3[6],QTYBO,whmisc2[7],parm[5]
Dim U9$[131],X$[10],Y$[80],SPROD$[12],EPROD$[12],SCOMM$[4],ECOMM$[4]
Dim U5$[50],K1$[50],D8$[12],F$[16],UM$[30],VEND$[30]
Dim P1$[15],P2$[15],P9$[50],F1$[16],F2$[30],RETVAL$[512]
Dim S1$[12],S2$[12],K16$[60],SPACES$[80],LINE_$[130],keyprod$[40]
Dim 2%,Q4,Q8,H0[5],BUYERNM$[30],3%,ONPOQTY
Dim Custom_customer$[30]
!
dim Blank$[128]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
! - dx add xport reporting code
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
dim tmp$[400],tmp1$[500],UNITX$[1]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
C9 = -1
Read #1,3;CNAME$;
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
mat read #1,115,60;custom_customer$; ! ALT
custom_customer$=RTrim$(UCase$(custom_customer$))
MAT READ #1,11,0;BDAYS;
READ #1,0,120;ARMONTH;
LET MTHDAYS=BDAYS[ARMONTH]
U5$ = "" \ Call Time(U5$)
D8$ = U5$[1,12]
J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 63 \ If J8 Let L9 = 20;J8 = 1
For K1 = 3 To 18
  Read J \ If J = -1 Goto L_850
  Read #1,88,J;F$;
  Ropen #K1,F$
L_850: Next K1
Data "1792","-1","2400","1808","1728","2416","-1","2448","2464"
Data "-1","2432","2480","2512","2336","2528","1744"
Open #4,"2/BUYERS"
!!SPACES$ = " ",SPACES$
LINE_$ = "-",LINE_$
Call dxsave(0,"tmp/396in.txt!")
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"396",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
Call dxget("SORT",tmp$)		\ SORT = tmp$
call dxget("SPROD",SPROD$) \ SPROD$=SPROD$,Blank$
! - Call dxget("SPROD",tmp$)	\ if tmp$ = "" let SPROD$ = Blank$,SPROD$	 else let SPROD$ = tmp$,Blank$ 
Call dxget("EPROD",EPROD$)	\ EPROD$=EPROD$,EndParam$
Call dxget("SCOMM",SCOMM$)	\ SCOMM$ = SCOMM$, Blank$
Call dxget("ECOMM",ECOMM$)	\ ECOMM$ = ECOMM$, EndParam$
Call dxget("SVEND",tmp$)	\ SVEND = tmp$
Call dxget("EVEND",tmp$)	\ if tmp$ = "" let EVEND = 999999	 else let EVEND = tmp$
Call dxget("WHSE",tmp$)		\ IF tmp$ = "" LET WHSE = 1	else let WHSE = tmp$
Call dxget("UNITX",tmp$)	\ UNITX = tmp$ !!UNIT
!
! - Call dxget("BSORT",tmp$)	\ tmp1$=tmp$
! - Call dxget("SBUYER",tmp$)	\ IF tmp$ = "" OR tmp1$="N" OR SORT <> 3 let SBUYER = 0   ELSE let SBUYER = tmp$
! - Call dxget("EBUYER",tmp$)	\ IF tmp$ = "" OR tmp1$="N" OR SORT <> 3  let EBUYER = 999 ELSE let EBUYER = tmp$
call dxget("BSORT",tmp$) \ if tmp$="" let BUYSORT = 0 else BUYSORT = 1 ! sotr buyer/vendor
call dxget("SBUYER",tmp$) \ SBUYER=tmp$ ! starting buyer
call dxget("EBUYER",tmp$) \ if tmp$="" let EBUYER=999 else EBUYER=tmp$ ! ending buyer
!
! buyer
if SORT<>3 let BUYSORT=0 ! \ SBUYER=0 \ EBUYER=999 ! product or commodity
!
If EPROD$ < SPROD$ LET e$ = "Invalid ending product code, must be >= to starting product code!"   \ call dxget("elementeprod",tmp$)\call dxset("focus",tmp$)\error 10000
If ECOMM$ < SCOMM$ LET e$ = "Invalid starting and ending commodity code range!" \ error 10000	

if SVEND < 0 or SVEND > 999999 let e$="Invalid starting buyer, must be between 0 and 999999!" \ error 10000	
If EVEND < SVEND or EVEND > 999999 LET e$ = "Invalid ending buyer, must be >= to starting vendor and 99999!" \ error 10000	
!
if SBUYER < 0 or SBUYER > 999 let e$="Invalid starting buyer, must be between 0 and 999!" \ error 10000	

If EBUYER < SBUYER or EBUYER > 999 LET e$ = "Invalid starting and ending buyer code range!"     \ error 10000

If UNITX = 1 Let UM$ = "IN STOCKING UNITS   "
If UNITX = 2 Let UM$ = "IN SELLING UNITS    "
If UNITX = 3 Let UM$ = "IN PURCHASING UNITS "
If UNITX = 4 Let UM$ = "IN COSTING UNITS    "
If UNITX = 5 Let UM$ = "IN PRICING UNITS    "
If UNITX = 6 Let UM$ = "IN PRODUCTION UNITS "
!
UNITX = UNITX + 7
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 

If J8
	tmp$=""
	if sort=3  !! by vendor
		tmp$ = "VENDOR",fdel$
		tmp$ = tmp$,"VENDOR NAME",vend$,fdel$
		if buysort
			tmp$ = tmp$,"BUYER",fdel$
			tmp$ = tmp$,"BUYER NAME",fdel$
		endif
	endif
	tmp$=tmp$,"ITEM CODE",fdel$
	tmp$=tmp$,"DESCRIPTION",fdel$
	tmp$=tmp$,"UM",fdel$
	tmp$=tmp$,"MB",fdel$
	tmp$=tmp$,"CC",fdel$
	tmp$=tmp$,"MIN",fdel$
	tmp$=tmp$,"MAX",fdel$
	tmp$=tmp$,"STOCK",fdel$
	tmp$=tmp$,"ALLOC",fdel$
	tmp$=tmp$,"AVAIL",fdel$
	tmp$=tmp$,"PO QTY",fdel$
	tmp$=tmp$,"PO #",fdel$
	tmp$=tmp$,"DUE ",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
end if

STARTRPT: Rem "
!!Window Off 
If SORT = 3 Gosub SORTBYVEND
CHAN = 3;D = 1;S1$ = " ",S1$;S2$ = "}",S2$
If SORT = 1 Let D = 1;S1$ = SPROD$;S2$ = EPROD$
If SORT = 2 Let D = 3;S1$ = SCOMM$;S2$ = ECOMM$
If SORT = 3 Let D = 1;CHAN = 12
NUMREC = 0;HVEND = -1;PRNTVEND = 0;HBUYER = -1
L = 99 \ P = 0
!!Print 'CS';"PDR WORKING  ...  PLEASE WAIT!"
!!If L9 = 20 Print 'CS'
Signal 3,0
!!If Err 0 Gosub ERR_ESCAPE
K1$ = S1$
Search #CHAN,2,D;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #CHAN,3,D;K1$,R1,E
L_2010: If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
If K1$[1,Len(S2$)] > S2$ Goto L_9100
NUMREC = NUMREC + 1
!!If Not(J8) And Not(Fra(NUMREC / 250)) Print @41,22;NUMREC;K1$
P1$ = R1 Using "######    0  0" !! p1$ number of regis
P2$ = P1$
Mat Read #3,R1;D$;
If SORT <> 3 ! "already done in sort rtn
  If D$[140,151] < SPROD$ Goto L_2000
  If D$[140,151] > EPROD$ Goto L_2000
  If D$[152,155] < SCOMM$ Goto L_2000
  If D$[152,155] > ECOMM$ Goto L_2000
Else ! "sorted by (buyer) / vendor / prod
  X2 = K1$[5,10]
  BUYER = K1$[1,4]
  If HVEND = -1
    HVEND = X2
    Gosub PRNTVEND
  End If 
  If X2 <> HVEND
    If BUYSORT And BUYER <> HBUYER
      L = 90
    End If 
    Gosub PRNTSEP
    PRNTVEND = 0
    HVEND = X2
    Gosub PRNTVEND
  End If 
  HBUYER = BUYER
End If 
Mat Read #3,R1,156;B;
Mat Read #3,R1,256;A;
Mat Read #3,R1,512;PFU1;
Mat Read #3,R1,554;PFU2;
Mat Read #3,R1,204;Q8;
LET LEADTIME=B[0]
Gosub L_11000 \ Goto L_2000
if not(parm[2]) or not(parm[3]) goto L_2000:
If B[24] < SVEND Or B[24] > EVEND Goto L_2000
If WBUYER < SBUYER Or WBUYER > EBUYER Goto l_2000
Gosub L_2500
If W0[0] = 2 And (QTYBO <= 0 And A[3] <= 0) Goto L_2000
Gosub L_10000 
Q3 = A[0] - (A[1] + A[3] + QTYBO)
If Q3 >= Q4 Goto L_2000
Gosub L_5800 !!print heading 
Gosub L_5000 !!print line
Gosub L_2170
Goto L_2000
!
L_2170: Rem TOTALS CALC
T9[1] = T9[1] + A[0]
T9[2] = T9[2] + Q3
Return 
!
L_2500: Rem "============================================= FIND QTY B/O
QTYBO = 0
K16$ = " ",K16$;K16$[1,12] = D$[140,151]
K16$[13,14] = WHSE Using "##"
L_2530: Search #17,3,4;K16$,R16,E !!\ If E > 2 Gosub ERR_SEARCH
If E Return 
If K16$[1,12] <> D$[140,151] Return 
X2 = K16$[13,14]
If WHSE If X2 <> WHSE Return 
Mat Read #17,R16,82;PLP3;
QTYBO = QTYBO + PLP3[4]
Goto L_2530
!
L_3000: Rem OPEN PO'S
L_3010: C9 = C9 + 1
L_3020: Search #13,3,2;P1$,R2,E !!\ If E > 2 Gosub ERR_SEARCH
!!if E return
If E or P1$[1,6] <> P2$[1,6]
	if comd = 0 AND J8
		tmp1$ = tmp1$, "",fdel$
		tmp1$ = tmp1$, "",fdel$
		tmp1$ = tmp1$, "",fdel$
		call addtostr(e$,rstr$,tmp1$+rdel$)
	end if
	return
end if
!!If P1$[1,6] <> P2$[1,6] Return 
Mat Read #13,R2,0;L1;
Mat Read #13,R2,12;L2;
Mat Read #13,R2,24;L3;
If L1[0] = 3 Goto L_3020
If L3[2] - L3[3] <= 0 Goto L_3020
Call Logic(1,2 ^ 0,L1[3],NONSTOCK) \ If NONSTOCK Goto L_3020
MAT  READ #8,L3[0],0;H0;                  
IF H0>6 AND H0<>90 AND H0<>91 GOTO L_3020 ! EXCLUDE CLOSED!!
!Mat Read #8,L3[0],238;T1; ! NOT L1[1] ! WHSE??
mat Read #8,L3[0],242;H4;
If WHSE And H4[1] <> WHSE Goto L_3020
IF H4<>0 AND H4<>4 GOTO L_3020
!If T1[1] Goto L_3020
Gosub L_10200
!
if j8 
	tmp$ = tmp1$,L3[2] - L3[3]  Using "#######",fdel$
	tmp$ = tmp$,P1$[7,12],fdel$
	X$ = L2[2] Using "&&&&&&"
	tmp$ = tmp$,X$[3,6],X$[1,2]
	IF (q3+onpoqty)<q4
		let tmp$=tmp$,"*"
	endif
	tmp$=tmp$, fdel$ 
    call addtostr(e$,rstr$,tmp$+rdel$)
	L = L + 1
	comd = 1
	Goto L_3010
else
	Print #0; Using "#######"; Tab 110;L3[2] - L3[3];
	Print #0; Tab 118;P1$[7,12];
	X$ = L2[2] Using "&&&&&&"
	if custom_customer$<>"SOUTHJERSEY"
		Print #0; Tab 125;X$[3,6];X$[1,2];
		IF (q3+onpoqty)<q4 ! (avail+poqty)<minqty
			print #0;"*";
		endif
		print #0;""
	Else
		Print #0; Tab 124;X$[3,4]; ! " show as MMDDYY
		Print #0; Tab 126;"/";
		Print #0; Tab 127;X$[5,6];
		Print #0; Tab 129;"/";
		Print #0; Tab 130;x$[1,2]
	Endif
	L = L + 1
	gosub L_5800   ! check if need new page
	Goto L_3010
end if 
!
L_4000: Rem Report TOTAL PRINT
If J8 Return
PRNTVEND = 1
Gosub L_5800
Print #0;" "
Print #0; Tab 1;"** TOTALS **";
Print #0; Using "---,---,--#.##"; Tab 65;T9[1];
Print #0; Using "---,---,--#.##"; Tab 87;T9[2];
Print #0;" "
U9$ = " ",U9$
Return 
!
PRNTSEP: Rem "Line separating vendors
if not(j8) Print #0;LINE_$
L = L + 1
Gosub L_5800
Return 
PRNTVEND: Rem "
If PRNTVEND Return 
If L + 2 >= L9 Let L = 80
Gosub L_5800
U5$ = " ",U5$
U5$ = HVEND Using "######"
Search #5,2,1;U5$,R5,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #5,R5,0;VEND$;
Else 
  VEND$ = " ",VEND$
  VEND$ = "VENDOR NOT FOUND!"
End If 
if not(j8) Print #0; Tab 1;U5$[1,6]; Tab 10;VEND$;
If BUYSORT ! "sorted by buyer/vendor
  BUYERNM$ = " ",BUYERNM$
  If BUYER > 1 And BUYER <= 999
    Mat Read #4,BUYER,0;BUYERNM$;
  End If 
if not(j8)  Print #0; Using "###"; Tab 45;"BUYER: ";BUYER;"  ";BUYERNM$;
End If 
if not(j8) Print #0;"\15\"
L = L + 2
PRNTVEND = 1
Return 
L_5000: Rem PRINT LINE
!
comd = 0
if j8
	tmp1$=""
	if sort=3  !! by vendor
		tmp1$ = hvend,fdel$
		tmp1$ = tmp1$,vend$,fdel$
		if buysort
			tmp1$=tmp1$,buyer,fdel$
			tmp1$=tmp1$,buyernm$,fdel$
		endif
	endif
	tmp1$ = tmp1$, D$[140,151],fdel$
	tmp1$ = tmp1$, D$[9,34],fdel$
	tmp1$ = tmp1$, SUNIT$[1,4],fdel$
	tmp1$ = tmp1$, D$[139,139],fdel$
	tmp1$ = tmp1$, D$[152,155],fdel$
	tmp1$ = tmp1$, Q4  Using "########" ,fdel$
	tmp1$ = tmp1$, QMAX Using "########",fdel$
	If Not(Fra(A[0]))
	  tmp1$ = tmp1$, A[0] Using "--------#", fdel$
	Else 
	  tmp1$ = tmp1$, A[0] Using "--------#.##", fdel$
	End If 
	If Not(Fra(A[1] + A[3] + QTYBO))
	  tmp1$ = tmp1$,(A[1] + A[3] + QTYBO)  Using "--------#", fdel$
	Else 
	  tmp1$ = tmp1$,(A[1] + A[3] + QTYBO) Using "--------#.##" ,fdel$
	End If 
	If Not(Fra(Q3))
	  tmp1$ = tmp1$, Q3  Using "--------#", fdel$
	Else 
	  tmp1$ = tmp1$, Q3 Using "--------#.##", fdel$
	End If
		U9$ = " ",U9$
		Gosub L_3000
		L = L + 1
		C9 = -1
	return
end if
!
Print #0; Tab 1;D$[140,151];
if custom_customer$<>"SOUTHJERSEY"
	Print #0; Tab 13;D$[9,34];
	Print #0; Tab 40;SUNIT$[1,4];
	Print #0; Tab 45;D$[139,139];
	Print #0; Tab 47;D$[152,155];
	Print #0; Using "########"; Tab 52;Q4;
	Print #0; Using "########"; Tab 60;QMAX;
	If Not(Fra(A[0]))
	  Print #0; Using "-------#"; Tab 68;A[0]; !!stock
	Else 
	  Print #0; Using "-------#.##"; Tab 68;A[0];	!! stock
	End If 
	If Not(Fra(A[1] + A[3] + QTYBO))
	  Print #0; Using "-------#"; Tab 79;(A[1] + A[3] + QTYBO);	!!alloc
	Else 
	  Print #0; Using "-------#.##"; Tab 79;(A[1] + A[3] + QTYBO);	!!alloc
	End If 
	If Not(Fra(Q3))
	  Print #0; Using "-------#"; Tab 90;Q3;	!!avali
	Else 
	  Print #0; Using "-------#.##"; Tab 90;Q3;	!!avali
	End If 
Else ! 
	PRINT #0; TAB 13;D$[9,38]; !WAS TO ,34
	PRINT #0; TAB 45;SUNIT$[1,4]; !WAS 40
	PRINT #0; TAB 49;D$[139,139];
	PRINT #0; TAB 51;D$[152,155];
	PRINT #0; USING "########"; TAB 56;Q4;
	!! Print #0; Using "########"; Tab 60;QMax;
	If Not(fra(A[0]))
	  Print #0; Using "-------#";Tab 65;A[0];
	Else
	  PRINT #0; USING "-------#.##"; TAB 65;A[0];
	Endif
	If Not(Fra(A[1]+A[3]+QtyBO))
	  Print #0; Using "-------#";Tab 76;(A[1]+A[3]+QtyBO);
	Else
	  PRINT #0; USING "-------#.##"; TAB 76;(A[1]+A[3]+QTYBO);
	Endif
	If Not(Fra(Q3))
	  Print #0; Using "-------#";Tab 87;Q3;
	Else
	  PRINT #0; USING "-------#.##"; TAB 87;Q3;
	Endif
	PRINT #0; USING "####"; TAB 98;FNR(LEADTIME*MTHDAYS);
Endif
Print #0; Tab 102;"........";	
U9$ = " ",U9$
Gosub L_3000
If Not(C9) Print #0;"\15\"; \ L = L + 1
C9 = -1
Return 

L_5800: Rem HEADING ROUTINE
If J8 Return
If L < L9 Return 
U9$ = " ",U9$
If P = 0 Goto L_5845
If Not(J8) Goto L_5840
!! Input "\15\PRESS <CR> TO CONTINUE "J$
!! Print 'CS'
L_5840: Print #0;"\14\";
L_5845: P = P + 1
T9$ = "" \ Call Time(T9$)
Print #0;" - 396 - ";T9$; Tab 52;CNAME$
U9$[2,18] = "DATE ",D8$
If WHSE Let U9$[107,119] = WHSE Using "WAREHOUSE ##/"
U9$[120,128] = P Using "PAGE ###"
U9$[45,100] = "P U R C H A S E   D E C I S I O N   R E P O R T "
Print #0;U9$
Print #0; Tab 45;UM$[1,20];", FROM VENDOR ";SVEND;" TO ";EVEND
Print #0;" "
U9$ = " ",U9$
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 14;"DESCRIPTION";
if custom_customer$<>"SOUTHJERSEY"
	Print #0; Tab 41;"UM";
	Print #0; Tab 45;"MB";
	Print #0; Tab 48;"CC";
	Print #0; Tab 57;"MIN";
	Print #0; Tab 65;"MAX";
	Print #0; Tab 71;"STOCK";
	Print #0; Tab 82;"ALLOC";
	Print #0; Tab 93;"AVAIL";
	Print #0; Tab 112;"PO QTY";
	Print #0; Tab 119;"PO #";
	Print #0; Tab 125;"DUE ";
	Print #0;""
	L = 7;PRNTVEND = 0
Else
	PRINT #0; TAB 45;"UM"; !was 41
	PRINT #0; TAB 49;"MB"; !45
	PRINT #0; TAB 52;"CC"; !48
	PRINT #0; TAB 59;"MIN"; !57
	!! Print #0; Tab 65;"MAX";
	PRINT #0; TAB 67;"STOCK"; !71
	PRINT #0; TAB 78;"ALLOC"; !82
	PRINT #0; TAB 89;"AVAIL"; !93
	PRINT #0; TAB 100;"LEAD"; !NEW VARIABLE
	PRINT #0; TAB 113;"PO QTY";
	PRINT #0; TAB 120;"PO #";
	PRINT #0; TAB 126;"DUE ";
	PRINT #0;" "
	PRINT #0; TAB 100;"DAYS"
	!! LET L=7
	LET L=8;PrntVend=0
Endif
U9$ = " ",U9$
Print #0;U9$
Return 
L_6300: Rem READ WHPR FILE
Mat Read #18,R8,32;W1;
Mat Read #18,R8,38;W2;
Mat Read #18,R8,78;W3;
Mat Read #18,R8,420;W0;
mat read #18,r8,846;whmisc2;
gosub prodgroup: 
Return 

PRODGROUP: REM
PARM[0] = -1
PARM[1] = WHMISC2[0]
!Call "MXPRODGRP5",PARM[]
call ProdGroup(e$,intco,Parm[])
Return 

SORTBYVEND: Rem "build sort file on 12, then sort by vend/prod
Read #1,88,912;F1$;
If F1$ = "" Let F1$ = "6/SORTWORK*"
L_1020: If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1020
P2 = 0 \ Let F2$ = F1$ To "*" : P2
If Not(P2) Let F1$ = "6/SORTWORK";P2 = 11
!!Print @0,21;"PREPARING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
F1$[P2] = Str$(Spc(6))
Call FindF(F1$,H1)
If H1 Kill F1$
F2$ = "[1:256] ",F1$
Build #12,F2$
Search #12,0,1;K1$,KSIZE,E !!\ If E Gosub ERR_SEARCH
L1 = 1000 \ Search #12,0,0;K1$,L1,E !!\ If E Gosub ERR_SEARCH
try close #12 else rem
open #12,f1$
!!Print @0,21;'CE';@0,22;"SORTING, Please Wait  "
K1$ = " ",K1$;NUMREC = 0
K1$ = SPROD$
Search #3,2,1;K1$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto GOT1PROD
PRODFLELOOP: Rem "thru prods
Search #3,3,1;K1$,R1,E \ If E = 2 Goto SORTDONE
!!If E Gosub ERR_SEARCH
GOT1PROD: Rem "found 1st
If K1$ > EPROD$ Goto SORTDONE
NUMREC = NUMREC + 1
! If Not(Fra(NUMREC / 250)) Print @40,22;NUMREC;K1$
Mat Read #3,R1;D$;
Mat Read #3,R1,156;B;
Mat Read #3,R1,192;Q4;
Mat Read #3,R1,256;A;
LET ONPOQTY=A[2]
If D$[152,155] < SCOMM$ Or D$[152,155] > ECOMM$ Goto PRODFLELOOP
Gosub L_11000 \ Goto PRODFLELOOP
if not(parm[2]) or not(parm[3]) goto ProdFLeLoop:
If B[24] < SVEND Or B[24] > EVEND Goto PRODFLELOOP
If WBUYER < SBUYER Or WBUYER > EBUYER Goto PRODFLELOOP
Mat Read #3,R1,512;PFU1;
Mat Read #3,R1,554;PFU2;
Mat Read #3,R1,204;Q8;
Gosub L_2500
If W0[0] = 2 And (QTYBO <= 0 And A[3] <= 0) Goto PRODFLELOOP
Q3 = A[0] - (A[1] + A[3] + QTYBO)
If Q3 >= Q4 Goto PRODFLELOOP
K2$ = " ",K2$
If BUYSORT Let K2$[1,4] = WBUYER Using "####"
K2$[5,10] = B[24] Using "######"
K2$[11] = K1$
Search #12,4,1;K2$,R1,E !!\ If E > 1 Gosub ERR_SEARCH
Goto PRODFLELOOP
SORTDONE: Rem "done
Return 
!
L_9100: Rem OUT OF HERE
Gosub L_4000
!!If L9 <> 20 Goto OUTEND
!!Input "\15\PRESS <CR> TO EXIT "J$
Goto OUTEND
!!stop 
L_10000: Rem 
CNVTU[0] = 0
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 1
CNVTA = Q4 \ Gosub L_20000
Q4 = AMOUNT
CNVTA = QTYBO \ Gosub L_20000 \ QTYBO = AMOUNT
CNVTA = QMAX \ Gosub L_20000 \ QMAX = AMOUNT
CNVTA = ONPOQTY\ Gosub L_20000 \ ONPOQTY= AMOUNT
For X = 1 To 3 Step 2
  CNVTA = A[X] \ CNVTU[2] = 1 \ Gosub L_20000
  A[X] = AMOUNT
Next X
CNVTA = A[0] \ CNVTU[2] = 1 \ Gosub L_20000
A[0] = AMOUNT
CNVTU[0] = PFU1[8] \ CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 1 \ CNVTA = Q4 \ Gosub L_20000
Q4 = AMOUNT
If PFU1[UNITX] = -1 Let SUNIT$ = "CWT " \ Goto L_10180
If PFU1[UNITX] = -2 Let SUNIT$ = "LOT " \ Goto L_10180
If PFU1[UNITX] = -3 Let SUNIT$ = "LB  " \ Goto L_10180
If PFU1[UNITX] > 0 Mat Read #7,PFU1[UNITX],10;SUNIT$;
L_10180: Return 
L_10200: Rem PO LINE
For X = 2 To 3
  CNVTU[0] = 0
  CNVTU[1] = PFU1[UNITX]
  CNVTU[2] = 1
  CNVTA = L3[X] \ Gosub L_20000
  L3[X] = AMOUNT
Next X
Return 
!!L_10500: Rem SELECT UNIT
!!Window Open @5,10; Size 70,12; Using " SELECT DEFAULT UNIT "
!!L_10520: Print 'CS'
!!Print 
!!Print Tab 5;" 1: STOCKING  "; Tab 45;" 4: COSTING"
!!Print Tab 5;" 2: SELLING  "; Tab 45;" 5: PRICING"
!!Print Tab 5;" 3: PURCHASING "
!!Print 
!!Print Tab 10;"Enter unit to show on report ";
!!Input Len 16384 + 1;""UNIT$ \ If UNIT$ = "" And UNIT > 7 Let UNIT$ = UNIT - 7
!!UNIT = UNIT$
!!If UNIT < 1 Goto L_10520
!!If UNIT > 5 Goto L_10520
!!UM$ = " ",UM$
!!If UNIT = 1 Let UM$ = "IN STOCKING UNITS "
!!If UNIT = 2 Let UM$ = "IN SELLING UNITS "
!!If UNIT = 3 Let UM$ = "IN PURCHASING UNITS "
!!If UNIT = 4 Let UM$ = "IN COSTING UNITS "
!!If UNIT = 5 Let UM$ = "IN PRICING UNITS "
!!If UNIT = 6 Let UM$ = "IN PRODUCTION UNITS "
!!UNIT = UNIT + 7
!!Window Close 
!!Return 
L_11000: Rem "========================= read prodwhse record
WBUYER = 0
K2$ = D$[140,151] \ K2$[13] = WHSE Using "##"
If Not(WHSE) Let K2$[13] = ""
Search #18,2,1;K2$,R8,E !! \ If E > 1 Gosub ERR_SEARCH
If E Return 
Gosub L_6300
Q4 = W3[3]
QMAX = W3[4]
WBUYER = W1[2]
ONPOQTY=W3[1]
If Not(WHSE) Return 1
A[0] = 0;A[1] = 0;A[3] = 0
If W2[3] Let B[24] = W2[3]
If W0[0] If W0[0] = 1 Return 
A[0] = W3[0];A[1] = 0;A[3] = W3[2]
LET LEADTIME=W2[0]
Return 1
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT ROUTINE
!if rstr$="" chain "MX000.dl4"
	If J8 ! dx xml
	  Call addtostr(e$,rstr$,esdel$) !end section
	  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
	End If 	
	try Call dxclose() else rem
End 
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
!