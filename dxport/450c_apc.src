! 450c_apc.dl4 - Commission report - "amalgamated"
!  Custom for Acme Paper
!
! loadsave -w -n 100,10 -o prog/dxport/450c_apc.dl4 src/450c_apc.src
!
include "src/copyright.inc"
Rem BEDIT Version: 1.9 OBJECT CODE     Created: AUG 26, 1999  16:51:27
Rem /usr/acct/r97/src/mx450c.acme.s (univ2) [judy] {46593}
Rem  Copyright (c) 1999 Universal Business Systems, Inc.
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 21, 2006  13:35:26
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/acme.r9/mx450c.src (univ2) [jcs] {05376}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! Acme custom modifications:
!  80651 - SLS, 83441 - SLS, 83642- SLS, 177379 - LIU, 178892 - LIU
! --- in order to speed development time (and avoid issues) - using acme custom version
!
! Differences from standard serp450c:
! 1. no hypothetical commission
! 2. no historical comm option
! 3. no audit version
! 4. no summary - only detail
! 5. adds q/profit (something with Backorders - 80651 qualifying gross profit)
! 6. Sort is different (59 chars)
! 7. extended Invoice history routines
! 8. is by shiplist instead of billto (83642)
! 
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,String
!Option Default Dialect IRIS1

Def FNW(H) = Sgn(H) * (Int(Abs(H) * 1 + .5) * 1)
If Err 0 Gosub ERR_TRAP
Dim C1$[30],J$[20],J1$[30],J2$[20],J3$[40],J4$[40],J7$[60],K9$[60]
Dim H9$[60],P60$[50],CF$[1],P9$[50],F$[16],FILE$[30]
Dim J8$[8],J9$[50],K1$[60],K2$[20],K3$[20],S1$[30],Z1$[50],X$[10],MCODE$[2]
Dim 1%,E,N3,N4,S4[1],X1,3%,A3[13],J,S2[1],T8[20],T9[20],S6[1],T6[1],T5[1]
Dim 1%,A0[10],BOFLAG,ARMTH,2%,CG1[99,11],3%,CP,TNQP,SNQP,CNQP,NQP,QP
Dim 3%,T10[20],T7[1],S10,MTOTAL[94,1],T4[20],SLS1[3],ORDTYPE[20,1]
Dim 2%,A2[5],J1,J2,J3,J4,J7[2],J8,J9,N1,N2,R3,R4,R5,S1[3],S3[1],S8,X2
Dim 2%,C1[12],SMAT$[2],K8$[50],CG[13]
Dim 3%,BOS,BOC,BOQP,R1,OREF[5],CUSTK7
Dim 2%,DT3[1],JWDATE,JDATE[1],QGP4OT2,QGP4OT,BOQPFLAG
Dim 3%,ORGS,ORGC,S7[1]
Dim 2%,H0[12],H5[16],3%,ORGORDNO,SRN[4],T2[25],TOT[4]
Dim ARMTH$[8],K7$[70]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[600],msg$[100],rstr$[2000],webstr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128],action1$[30],action2$[30]
dim List$[100,100],Custom_customer$[30]
! call dxopen() ! for standalone run
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
!Print 'CS'
try Close #9 Else Rem
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 10
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "2240","-1824","-1808","-1504","-1584","-1136","-1152","-1","-1168"
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,182,76;QGP4OT2;
Mat Read #1,182,80;QGP4OT;
If Not(QGP4OT2) Let QGP4OT2 = 25
If Not(QGP4OT) Let QGP4OT = 50
CF$ = P60$[37,37]
COMPANY = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Ropen #29,"4/SORDFLEHHKEY" + Str$(COMPANY)
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 20
CT = 0
! call dxsave(0,"tmp/450capc.txt!")
Gosub L_8500 ! build new sort
L_900: Rem GET RANGES
ARCODE = 0
!Print 'CS';@0,0;"MX450C";@15,0;"SALESMAN COMMISSION AMALGMATION";@57,0;Msc$(3)
L_906: !Print @0,5;"ENTER AR MONTH TO PRINT OR <CR> FOR DATE RANGE, ''E'' EXIT  : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
call dxget("ARCODE",k2$)
If K2$ = "" Goto L_915
ARCODE = K2$
If ARCODE < 1 Or ARCODE > 12 ! Goto L_906
  e$="INVALID MONTH ENTERED"
  goto ERR_MSG
Endif
L_910: !Print @0,6;"ENTER YEAR ## TO PRINT  ''E'' EXIT  : ";'CE';
!Input ""K2$ \ YEAR_ = K2$
call dxget("AYEAR",tmp$) \ Year_=tmp$
If YEAR_<0 or YEAR_ > 99 ! Goto L_910
	e$="INVALID YEAR ENTERED"
	goto ERR_MSG
Endif
Goto L_990
L_915: !Print @0,5;"ENTER STARTING DATE, <CR> FOR FIRST, ''E'' TO EXIT : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
call dxget("SDATE",k2$)
If K2$ = "" Let K2$ = "010170"
J9$ = K2$ \ Gosub L_7340 \ Goto OUTEND ! return=NG, +1=OK
X$ = J$ \ Gosub L_7800 \ N1 = X2
X2 = N1 \ Gosub YMD2JUL \ Let E=E ! Goto L_915
if x2<=0 or E
	e$="INVALID START DATE"
	goto ERR_Msg
Endif
JDATE[0] = X2
L_940: !Print @0,6;"ENTER ENDING   DATE, <CR> FOR LAST,  ''E'' TO EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
call dxget("EDATE",k3$)
If K3$ = "" Let K3$ = "123159"
J9$ = K3$ \ Gosub L_7340 \ Goto OUTEND ! L_940
X$ = J$ \ Gosub L_7800 \ N2 = X2
X2 = N2 \ Gosub YMD2JUL \ Let E=E ! Goto L_940
If X2<=0 or E
	e$="INVALID END DATE"
	goto Err_msg
Endif
JDATE[1] = X2
If JDATE[0] <= JDATE[1] Goto L_990
!J7$ = "INVALID RANGE" \ Gosub L_7600 \ Goto L_900
e$="INVALID DATE RANGE"
goto ERR_MSG
L_990: K1$ = " ",K1$
J1 = 90 \ J2 = 0
L_1000: Rem ***** INPUT SALESMAN RANGE == BWB == 4/9/87
N3 = 0 \ N4 = 0
!Print @0,8;"ENTER STARTING SLSM #, <CR> FOR FIRST, ''E'' TO EXIT: ";'CE';
!Input ""K2$
!If K2$ = "E" Goto OUTEND
call dxget("SSLSM",k2$)
N3 = K2$
K2$ = " ",K2$
K2$[1,3] = N3 Using "###"
!Print @0,9;"ENTER ENDING   SLSM #, <CR> FOR LAST,  ''E'' TO EXIT: ";'CL';
!Input ""K3$
call dxget("ESLSM",k3$)
If K3$ = "" Let N4 = 999 \ Goto L_1150
!If K3$ = "E" Goto OUTEND
N4 = K3$
K3$ = " ",K3$
K3$ = N4 Using "###"
If N3 <= N4 Goto L_1150
!J7$ = "INVALID RANGE!" \ Gosub L_7600 \ Goto L_1000
e$="INVALID SALESPERSON RANGE"
goto ERR_Msg
L_1150: Rem ***** CONTINUE
!Print @0,11;"PAY COMMISSIONS ON PAID INVOICE ONLY (Y/<CR>) ";
!Input ""K3$
call dxget("PAIDO",k3$)
If K3$ = "Y" Let PAID_ONLY = 99 Else Let PAID_ONLY = 0
ASK_QDETAIL: !  Print @0,13;"PRINT Q/PROFIT DETAIL (Y/<CR>) ";
!Input ""K3$
call dxget("QDTL",k3$)
If K3$ = "Y" Or K3$ = "y"
  Q_DETAIL = 1
Else 
  Q_DETAIL = 0
End If 
!Print @5,15;'ER BR';" RANGES ENTERED ABOVE WILL BE PURGED WHEN 460 IS RUN ";'ER'
L_1450: Rem "================== all picked
!Print @10,22;'CE';
!Input "CHOOSE P:Print, R:Reselect, E:Exit "Z1$ \ If Z1$ = "E" Goto OUTEND
!If Z1$ = "R" Goto L_900
!If Z1$ <> "P" Goto L_1450
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
!If Err 0 Gosub ERR_ESCAPE
Gosub L_7000 ! sort it
!Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
TYPE = 0
!If J8 Print 'CS';
K1$ = N3 Using "###"
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If K1$[24,24] = "!"
  SALES = K1$[25,34] \ COST = K1$[35,44] \ QP = K1$[45,53]
  Goto L_2000
End If 
If Not(X9)
  X2 = K1$[16,21] \ Gosub JUL2YMD
  X9 = X2
End If 
If Not(TYPE) Let TYPE = K1$[22,23]
If Not(OTYPE) Let OTYPE = K1$[22,23]
If K1$[22,23] = "99" Let CREDIT = 99 Else Let CREDIT = 0
Mat Read #2,R1,0;S1;
Mat Read #2,R1,16;S2;
Mat Read #2,R1,28;S3;
Mat Read #2,R1,36;S4;
Mat Read #2,R1,40;S6; \ Mat Read #2,R1,52;SMAT$;
Mat Read #2,R1,54;S7
X5 = K1$[22,23] \ O9 = K1$[22,23]
Gosub L_3200
If Not(S10) Let S10 = BILLTO
If S10 <> BILLTO Or X9 <> S1[3] Or TYPE <> X5 Or OTYPE <> O9 Gosub L_4200
If ARCODE If S4[0] <> ARCODE Goto L_2000
X2 = S1[3] \ Gosub YMD2JUL \ X2 = 0
JWDATE = X2
If Not(ARCODE) If JWDATE < JDATE[0] Goto L_2000
If Not(ARCODE) If JWDATE > JDATE[1] Goto L_2000
If S1[0] < N3 Goto L_2000
If S1[0] > N4 Goto L_9100
If SMAT$ = "" Let SMAT$ = " "
If S8 If S8 <> S1 Gosub L_4500
If S10 If S10 <> BILLTO Gosub L_4600
Gosub L_3000
Gosub L_3400
X5 = K1$[22,23]
If X5 <> 99 Goto L_2260
T9 = 0 - T9
S6 = 0 - S6
S2 = 0 - S2 \ S2[1] = 0 - S2[1]
L_2260: Rem
Gosub L_5800
If HEADING Gosub L_5230 \ Gosub L_5190
Gosub L_5000
Gosub L_2320
Goto L_2000
L_2320: Rem TOTALS CALC
T4[5] = T4[5] + S2[0] \ T3[0] = T3[0] + S6[0] \ T4[6] = T4[6] + T9 \ T4[7] = T4[7] + S2[1]
T4[8] = T4[8] + NC
T9[5] = T9[5] + S2[0] \ T8[5] = T8[5] + S2[0] \ T10[5] = T10[5] + S2[0]
T6[0] = T6[0] + S6[0] \ T5[0] = T5[0] + S6[0] \ T7[0] = T7[0] + S6[0]
T9[6] = T9[6] + T9 \ T8[6] = T8[6] + T9 \ T10[6] = T10[6] + T9
T9[7] = T9[7] + S2[1] \ T8[7] = T8[7] + S2[1] \ T10[7] = T10[7] + S2[1]
TNQP = TNQP + NQP \ SNQP = SNQP + NQP \ CNQP = CNQP + NQP
If T9 >= S2 Let T9[8] = T9[8] + S2[1] \ T8[8] = T8[8] + S2[1] \ T10[8] = T10[8] + S2[1]
If CF$ = "C"
  If T9 >= S2 Let S4[1] = 1 Else Let S4[1] = 0
End If 
If CF$ = "A"
  If Abs(T9) >= Abs(S2) Let S4[1] = 1 Else Let S4[1] = 0
End If 
!Call String(3,SMAT$[1,1],M9) ! does NOT RETURN VALUE > 160!!! on dl4
!If X5 <> 99 Let MTOTAL[(M9 - 160),0] = MTOTAL[(M9 - 160),0] + S2[0]
!If X5 <> 99 Let MTOTAL[(M9 - 160),1] = MTOTAL[(M9 - 160),1] + S6[0]
Mat Write #2,R1,36;S4;
Return 
L_3000: Rem GET SLSM NAME
If S8 = S1 Return 
J2$ = " ",J2$ \ J2$ = S1 Using "###"
Search #3,2,1;J2$,R3,E
If E = 1 Let S1$ = "** ERROR ** SALESMAN NOT FOUND" \ Goto L_3050
If E Gosub ERR_SEARCH
Mat Read #3,R3;S1$;
Mat Read #3,R3,118;SLS1;
L_3050: Return 
L_3200: Rem GET CUSTOMER
For X = 0 To 12 \ C1[X] = 0 \ Next X
J3$ = " ",J3$ \ J3$ = S3[1] Using "######"
Search #4,2,1;J3$,R4,E
If E = 1 Let C1$ = "** ERROR ** CUSTOMER NOT FOUND" \ Goto L_3240
If E Gosub ERR_SEARCH
Mat Read #4,R4,30;C1$;
Mat Read #4,R4,142;C1;
BILLTO = C1[4]
L_3240: Rem
Return 
L_3400: Rem GET A/R RECORD
A0[6] = 0
PAID = 0
J4$ = " ",J4$ \ J4$ = S3[1] Using "######"
If S7 Let J4$[7] = S7 Using "##########" Else Let J4$[7] = S7[1] Using "##########"
If K1$[22,23] = " 1" Let J4$[17,17] = "1" Else Let J4$[17,17] = "6"
Search #5,2,1;J4$,R5,E
If E Let PAID = 99 \ Goto L_3500
Mat Read #5,R5;A2;
Mat Read #5,R5,24;A3;
Mat Read #5,R5,124;A0;
T9 = A3[1] + A3[2]
If (A3[1] + A3[2]) >= A3[0] Let PAID = 99
If P9$[36,36] = "N" Let T9 = T9 + A3[9]
T1 = Int(Fra(A2[3]) * 100)
Return 
L_3500: Rem NOT FOUND SO MUST BE PAID
T9 = S2[0]
Return 
L_4000: Rem TOTAL PRINT
Gosub L_5800
Print #0;"** TOTALS **";
If T9[5] Print #0; Using " ----#%"; Tab 32;FNW((T9[5] - T5[0]) / T9[5] * 100);
If T9[0] Print #0; Using "----#%"; Tab 39;FNW((T9[5] - T5[0]) / T9[0] * 100);
Print #0; Using "-----------#.##"; Tab 46;T9[5];
Print #0; Using "---------#.##"; Tab 62;T5[0];
Print #0; Using "-------#.##"; Tab 76;T9[5] - T5[0];
Print #0; Using "-------#.##"; Tab 88;TNQP;
Print #0;""
Return 
L_4200: Rem PRINT TOTALS FOR A COMMON DATE
Goto L_4275
J1 = J1 + 2 \ Gosub L_5800
If SLS1[1] = 0 Let CP = SLS1[0] Else Gosub L_6000
Print #0; Tab 18;"** TOTALS >>";
If TYPE = 99 Let CP = 0
If T4[5] Print #0; Using "----#%"; Tab 32;FNW((T4[5] - T3[0]) / T4[5] * 100);
Print #0; Using "-----------#.##"; Tab 46;T3[0];
Print #0; Using "-----------#.##"; Tab 62;T4[5] - T3[0];
Print #0; Using "-----------#.##"; Tab 78;T4[5];
Print #0; Using "-----------#.##"; Tab 94;T4[7];
Print #0; Using "-----------#.##"; Tab 110;T4[8]
Print #0;""
L_4275: TOTNEW = TOTNEW + T4[8]
GRANDNEW = GRANDNEW + T4[8]
TOTNEWC = TOTNEWC + T4[8]
CT = 0
X9 = S1[3]
NEWCOM = 0
OTYPE = O9
TYPE = X5
For X = 0 To 94
  MTOTAL[X,0] = 0 \ MTOTAL[X,1] = 0
Next X
For X = 0 To 20 \ T4[X] = 0 \ ORDTYPE[X,0] = 0 \ ORDTYPE[X,1] = 0
Next X
T3[0] = 0
Return 
L_4500: Rem SALESMAN TOTAL
Gosub L_4600
Gosub L_5800
Print #0;""
Print #0;"** SALESMAN ";S8;" TOTALS **";
If T8[5] Print #0; Using " ----#%"; Tab 32;FNW((T8[5] - T6[0]) / T8[5] * 100);
If T6[0] Print #0; Using "----#%"; Tab 39;FNW((T8[5] - T6[0]) / T6[0] * 100);
Print #0; Using "-----------#.##"; Tab 46;T8[5];
Print #0; Using "---------#.##"; Tab 62;T6[0];
Print #0; Using "-------#.##"; Tab 76;T8[5] - T6[0];
Print #0; Using "-------#.##"; Tab 88;SNQP
S8 = 0 \ T8[5] = 0 \ T8[6] = 0 \ T8[7] = 0 \ T8[8] = 0 \ TOTNEW = 0
T6[0] = 0 \ SNQP = 0
J1 = 9999
Return 
L_4600: Rem CUSTOMER TOTAL
J1 = J1 + 3
Gosub L_5800
If HEADING Gosub L_5230
Print #0;""
Print #0; Using "######";"** CUSTOMER ";S10;" TOTALS **";
If T10[5] Print #0; Using " ----#%"; Tab 32;FNW((T10[5] - T7[0]) / T10[5] * 100);
If T7[0] Print #0; Using "----#%"; Tab 39;FNW((T10[5] - T7[0]) / T7[0] * 100);
Print #0; Using "-----------#.##"; Tab 46;T10[5];
Print #0; Using "---------#.##"; Tab 62;T7[0];
Print #0; Using "-------#.##"; Tab 76;T10[5] - T7[0];
Print #0; Using "-------#.##"; Tab 88;CNQP
Print #0;""
S10 = 0 \ T10[5] = 0 \ T10[6] = 0 \ T10[7] = 0 \ T10[8] = 0
TOTNEWC = 0 \ CNQP = 0
T7[0] = 0
Return 
L_5000: Rem PRINT LINE
NC = 0 \ CP = 0
If X5 <> 99 Gosub L_6100
If X5 <> 99 If SLS1[1] = 0 Let CP = SLS1[0]
If X5 = 99 And CF$ = "C"
  If T9 >= S2 Let NC = S2[1] \ CP = S1[2]
End If 
If X5 = 99 And CF$ = "A"
  If Abs(T9) >= Abs(S2) Let NC = S2[1] \ CP = S1[2]
End If 
If TYPE <> 99 Let NC = FNR((S2[0] - S6[0]) * (CP / 100))
If PAID_ONLY If Not(CREDIT) If Not(PAID) Let NC = 0
If S10 <> BILLTO If Not(HEADING) Gosub L_5190
NQP = S2[0] - S6[0]
ORGORDNO = 0
BOS = 0;BOC = 0;OWFLAG = 0;BOFLAG = 0
If X5 <> 99
  Gosub L_5300
End If 
If X5 < 99 Print #0; Using "########"; Tab 7;S7[1];
If X5 = 99 Print #0; Using "CR########"; Tab 5;S7[1];
X2 = S1[3] \ Gosub L_7700
Print #0; Using "##"; Tab 16;S3[0];"  ";SMAT$[1,1];
Print #0; Tab 23;X$[1,8];
If S2 Print #0; Using " ----#%"; Tab 32;FNW((S2[0] - S6[0]) / S2[0] * 100);
If S6[0] Print #0; Using "----#%"; Tab 39;FNW((S2[0] - S6[0]) / S6[0] * 100);
Print #0; Using "-----------#.##"; Tab 46;S2[0];
Print #0; Using "---------#.##"; Tab 62;S6[0];
Print #0; Using "-------#.##"; Tab 76;S2[0] - S6[0];
If X5 <> 99 If NQP < 0 Goto L_5151
If X5 = 99 Goto L_5151
If Not(BOFLAG)
  If X5 <> 2 If QP <= QGP4OT Let NQP = 0
  If X5 = 2 If QP <= QGP4OT2 Let NQP = 0
End If 
If BOFLAG
  If BOQPFLAG And BOQP
    NQP = BOQP
  End If 
  If Not(BOQPFLAG) Let NQP = 0
End If 
L_5151: Print #0; Using "-------#.##"; Tab 88;NQP;
If ORGORDNO Print #0; Using "######"; Tab 104;ORGORDNO;
Print #0; Using "--#%"; Tab 124;CP;
If PAID_ONLY If PAID Print #0;" *";
CT = CT + 1
S8 = S1
S10 = BILLTO
Print #0;""
Return 
L_5190: Rem PRINT CUSTOMER
Print #0; Using "######"; Tab 0;BILLTO;
Print #0; Tab 7;C1$ \ J1 = J1 + 1
Return 
L_5230: Rem print salesman!
If Not(S8) Print #0; Using "###";"SALESMAN ";S1;" ";S1$
If S8 Print #0; Using "###";"SALESMAN ";S8;" ";S1$
Print #0;" "
J1 = J1 + 2
SALESMAN = 1
Return 
L_5300: Rem ========================= check if it is a backorder
BOFLAG = 0;ORGORDNO = 0;BOQP = 0
K7$ = " ",K7$
K7$[1,2] = "30";K7$[3,12] = K1$[25,34]
Search #7,2,1;K7$,R7,E
If E Goto L_5410
Mat Read #7,R7,0;H0;
Mat Read #7,R7,104;H5;
Mat Read #7,R7,512;OREF;
If OREF[2] ! " H5[6]
  ORGORDNO = OREF[2]
Else 
  ORGORDNO = H0[7]
End If 
CUST = BILLTO
Gosub L_5500
L_5410: Return 
L_5500: Rem  =========================== is backorder, calculate total order's gp
K7$ = " ",K7$;BOS = 0;BOC = 0;OWFLAG = 0;BOQPFLAG = 0
K7$[1,6] = CUST Using "######"
K7$[7,16] = ORGORDNO Using "##########"
L_5520: Search #29,3,5;K7$,R7,E
CUSTK7 = K7$[1,6]
If CUSTK7 <> CUST Goto L_5750
If E Goto L_5750
CUSTK7 = K7$[7,16]
If CUSTK7 <> ORGORDNO Goto L_5750
Mat Read #7,R7;H0;
If H0[0] = 31 Goto L_5750
Mat Read #7,R7,104;H5;
Mat Read #7,R7,512;OREF;
Mat Read #10,OREF[5],8;T2;
Mat Read #10,OREF[5],328;TOT;
If H0[7] <> ORGORDNO ! not orginal order
  If OREF[2] = ORGORDNO
    Goto L_5660
  End If 
Else 
  Goto L_5660
End If 
Goto L_5520
L_5660: Rem
If S7[1] <> OREF[1] Let BOFLAG = 1
If H0[8] > S1[3] Goto L_5520
If H0[8] = S1[3] And S7[1] < OREF[1] Goto L_5520
L_5700: BOS = T2[1] + TOT[1]
BOC = T2[17] + TOT[2]
If Not(BOQPFLAG)
  BOQP = BOQP + BOS - BOC
Else 
  BOQP = 0
End If 
If Q_DETAIL And Not(BOQPFLAG) And OREF[1] <> S7[1]
  Gosub L_5800
  If HEADING Gosub L_5230 \ Gosub L_5190
  Print #0; Using "########"; Tab 6;OREF[1];
  X2 = H0[8] \ Gosub L_7700
  Print #0; Tab 23;X$[1,8];
  Print #0;"   Q/profit dtl";
  Print #0; Using "-----------#.##"; Tab 46;BOS;
  Print #0; Using "---------#.##"; Tab 62;BOC;
  Print #0; Using "-------#.##"; Tab 76;BOS - BOC
End If 
If BOQP >= QGP4OT
  BOQPFLAG = 1
End If 
Goto L_5520
L_5750: Return 
L_5800: Rem HEADINGS ROUTINE
HEADING = 0
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 9
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 450C - ";Msc$(3);
Print #0; Tab 47;"S A L E S M A N   C O M M I S S I O N"
If ARCODE Print #0; Tab 46;"FOR ARMONTH CODE ";ARCODE \ Goto L_5853
X2 = N1 \ Gosub L_7700
Print #0; Tab 46;"RUN FOR DATES ";X$;" THROUGH ";
X2 = N2 \ Gosub L_7700 \ Print #0;X$
L_5853: If PAID_ONLY Print #0; Tab 50;"COMMISSION ON PAID INV ONLY "
Print #0;" "
Print #0; Tab 1;"CUST NO";
Print #0; Tab 11;"CUSTOMER NAME" ! ;
Print #0; Tab 8;"INV/CM  OT MC";
Print #0; Tab 25;"DATE";
Print #0; Tab 34;"GP %";
Print #0; Tab 41;"MU %";
Print #0; Tab 57;"SALE";
Print #0; Tab 71;"COST";
Print #0; Tab 81;"PROFIT";
Print #0; Tab 91;"Q/PROFIT";
Print #0; Tab 102;"ORIG_ORD_NO";
Print #0; Tab 124;"COMM %";
Print #0;" "
Print #0;"\15\";
HEADING = 1
Return 
L_6000: Rem RECALCULATE COMMISSION FOR INVOICES
!MAX = MTOTAL[0,0] \ MAXCODE = 0
!For MCODE = 1 To 94
!  If MTOTAL[MCODE,0] > MAX Let MAXCODE = MCODE \ MAX = MTOTAL[MCODE,0]
!Next MCODE
!Call String(4,MAXCODE + 160,MCODE$[1,1])
L_6100: Rem GET CORRECT GRID
K8$ = " ",K8$
K8$[1,3] = SLS1[1] Using "###"
K8$[4,5] = S3[0] Using "##"
K8$[6,6] = SMAT$[1,1]
K8$[7] = ""
Search #6,2,1;K8$,R8,E
If Not(E) Goto L_6320
K8$[4,5] = " 0"
Search #6,2,1;K8$,R8,E
If Not(E) Goto L_6320
K8$[4,5] = S3[0] Using "##"
K8$[6,6] = " "
Search #6,2,1;K8$,R8,E
If Not(E) Goto L_6320
K8$[4,5] = " 0"
Search #6,2,1;K8$,R8,E
If E
  Mat CG = Zer \ Mat CG1 = Zer
  Goto L_6350
End If 
L_6320: Mat Read #6,R8,6;CG;
Mat Read #6,R8,62;CG1;
If CG[12] = 1 Let AMOUNT = SALES Else Let AMOUNT = SALES - COST
L_6350: Rem
TOT = 0
If CG[12] = 1 And (SALES - COST) < CG[13] Goto L_6690
GP = 0
If SALES Let GP = FNW(((SALES - COST) / SALES) * 100) Else Let GP = 0
If GP > 99 Let GP = 99
If GP < 0 Let GP = 0
For REC = GP To 1 Step -1
  For X8 = 0 To 11
    If CG1[REC,0] Goto L_6620
  Next X8
Next REC
Goto L_6690
L_6620: If GP > REC Let GP = REC
REC = GP
For X8 = 11 To 0 Step -1
  If CG[X8] < AMOUNT Goto L_6700
Next X8
L_6690: CP = 0 \ Goto L_6710
L_6700: CP = CG1[REC,X8] ! was [REC,0] !(always column 1?)
L_6710: Return 
L_7000: Rem sort commission file
!Print @0,22;"Sorting...please wait";'CE'; \ Signal 3,0
K1$ = N3 Using "###"
L_7030: Search #2,3,1;K1$,R1,E
If E Goto L_7330
Mat Read #2,R1,0;S1;
Mat Read #2,R1,16;S2;
Mat Read #2,R1,28;S3;
Mat Read #2,R1,36;S4;
Mat Read #2,R1,40;S6;
Mat Read #2,R1,52;SMAT$;
Mat Read #2,R1,54;S7;
Gosub L_3200
TYPE = K1$[14,14]
If Not(C1[4]) Goto L_7030
If YEAR_ If YEAR_ <> Int(S1[3] / 10000) Goto L_7030
If ARCODE If S4[0] <> ARCODE Goto L_7030
X2 = S1[3] \ Gosub YMD2JUL \ X2 = 0
JWDATE = X2
If Not(ARCODE) If JWDATE < JDATE[0] Goto L_7030
If Not(ARCODE) If JWDATE > JDATE[1] Goto L_7030
If S1[0] < N3 Goto L_7030
If S1[0] > N4 Goto L_7330
Gosub L_3400
If Not(S3[0]) And A0[6] > 0 Let S3[0] = A0[6]
If TYPE = 1 Gosub L_8300
K9$ = " ",K9$
K9$[1,3] = K1$[1,3]
K9$[4,9] = C1[4] Using "######"
K9$[10,15] = SRN[1] Using "######"
K9$[16,21] = JWDATE Using "######"
If K1$[14,14] = "1" !"invoice - cct177379
  If S3[0] = 2 !"direct order
    K9$[22,23] = " 2"
  Else 
    K9$[22,23] = " 1"
  End If 
Else 
  K9$[22,23] = "99"
End If 
K9$[24,24] = "~"
K9$[25,34] = S7[1] Using "##########"
K9$[35,35] = K1$[14,14]
K9$[36] = ""
Search #9,4,1;K9$,R1,E
If E Gosub ERR_SEARCH
If TYPE = 1 Gosub L_8000
Goto L_7030
L_7330: Return 
L_7340: Rem CHECK DATES
If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7480
J7[0] = J9$[1,2] \ J7[1] = J9$[3,4] \ J7[2] = J9$[5,6]
On J7 Goto L_7410,L_7430,L_7410,L_7400,L_7410,L_7400
On J7 - 6 Goto L_7410,L_7410,L_7400,L_7410,L_7400,L_7410
Goto L_7480
L_7400: If J7[1] > 30 Goto L_7480
L_7410: If J7[1] > 31 Goto L_7480
Goto L_7460
L_7430: If J7[1] > 29 Goto L_7480
If Not(Fra(J7[2] / 4)) Goto L_7460
If J7[1] > 28 Goto L_7480
L_7460: J4 = J7[2] * 10 ^ 4 + J7 * 10 ^ 2 + J7[1] \ X2 = J4 \ Gosub L_7700
J$ = X$ \ J3 = 8 \ Goto L_7490
L_7480: ! J7$ = "INVALID DATE !" \ Gosub L_7600 \ Return 
	e$="INVALID DATE"
	goto Err_Msg
L_7490: J$[J3 + 1] = "" \ Return 1
L_7600: Return 
L_7700: Rem uses this name too
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
L_7800: Rem uses this name too
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
L_8000: Rem ADD HEADER REC FOR DATE
H9$ = K9$
J7$ = " ",J7$ \ SALES = 0 \ COST = 0 \ QP = 0
H9$[24,24] = "!"
H9$[25,53] = J7$[25,53]
Search #9,3,1;H9$,H9,E
If E Goto L_8100
If H9$[1,23] <> K9$[1,23] Goto L_8100
If H9$[24,24] <> "!" Goto L_8100
SALES = H9$[25,34] \ COST = H9$[35,44] \ QP = H9$[45,53]
Search #9,5,1;H9$,H9,E
If E Gosub ERR_SEARCH
L_8100: H9$[24,24] = "!"
H9$[25,53] = J7$[25,53]
SALES = SALES + S2[0]
COST = COST + S6[0]
QP = QP + (S2[0] - S6[0])
H9 = 0
H9$[25,34] = SALES Using "-######.##"
H9$[35,44] = COST Using "-######.##"
If Abs(QP) <= 99999.99
  H9$[45,53] = QP Using "-#####.##"
Else 
  If QP < 0
    H9$[45,53] = "-99999.99"
  Else 
    H9$[45,53] = " 99999.99"
  End If 
End If 
Search #9,4,1;H9$,H9,E
If E Gosub ERR_SEARCH
Return 
L_8300: Rem ================================= get ship-to code
K7$ = " ",K7$;SRN[1] = 0
K7$[1,2] = "30";K7$[3,12] = K1$[4,13]
Search #7,2,1;K7$,R7,E
If E Goto L_8370
Mat Read #7,R7;H0;
Mat Read #7,R7,512;OREF;
Mat Read #8,OREF[4],154;SRN;
L_8370: Return 
L_8500: Rem CREATE SORT FILE - dir is 60 chars!
F$ = Spc(6) Using "6/SORTWORK&&&&!"
FILE$ = "[1:1] ",F$
Build #9,FILE$
R[9] = 30 \ Search #9,0,1;F$,R[9],E \ If E Gosub ERR_SEARCH
R[9] = 1 \ Search #9,0,0;F$,R[9],E \ If E Gosub ERR_SEARCH
R[9] = 0 \ Search #9,1,0;F$,R[9],E \ If E Gosub ERR_SEARCH
Return 

L_9100: Rem END OF THIS RANGE
Gosub L_4200 \ Gosub L_4500
Gosub L_4000
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
OUTEND: Rem EXIT PROGRAM
!Print 'CS'
Close #9
!Chain "MX000C"
!Stop 
End
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/acme450cse!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                             

Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
