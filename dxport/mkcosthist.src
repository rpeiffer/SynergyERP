! >>> Program mkcosthist
!  REPLACED WITH EXTERNAL CALL TO LIBPROD.LIB - MKCOSTHIST()
!  PLEASE PHASE THIS OUT AND USE THE CALL IN LIBPROD
! description Retain Cost Changes
! loadsave -w -n 100,10 -o prog/dxport/mkcosthist.dl4 src/mkcosthist.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem mkcsthst create cost history records in 4/costhist#
Rem dade paper CCT 188529
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  8, 2005  13:54:42
Rem /w/papermaster/r2002//usr/acct/txc/work/custom/dadedevl/mkcosthist.src (univ2) [txc] {61950}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,PDate$,getuidrec
Declare External Function ChkAltItem$,formatdate2$
Declare External Sub UserCntrl
! Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Enter CSTHST$,CSTHST[],CHAN,IntCo,Userid$,e$,rstr$
Dim rstr$[5000],Message$[600]
dim action$[30],options$[30],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim nextblockid$[8],WebStr$[600],blank$[200]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim 1%,SCR,FILE$[16]
Dim KEY_CSTHST1$[50],KEY_CSTHST2$[50],TIME$[6],ACODE$[10]
Dim 3%
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)

If CHAN = 0
  STARTCHAN = findchannel() ! 99
  !Call "UTCHAN5",STARTCHAN
  !Signal 6,-3,X,X
  FILE$ = "4/costhist"+Str$(COID)
  CH_CSTHST = STARTCHAN
  Open #CH_CSTHST,FILE$
Else 
  CH_CSTHST = CHAN
End If 
!Call "UTCHAN5",STARTCHAN
!Signal 6,-3,X,X
! CH_USERPORT = findchannel() ! STARTCHAN
! Ropen #CH_USERPORT,"userport"
! Mat Read #CH_USERPORT,Spc(6);SCR; ! usercntrl rec!!!
SCR=GetUIDRec(e$,IntCo,Userid$)
!Call "UTCHAN5",STARTCHAN
!Signal 6,-3,X,X
CH_USERCNTRL = findchannel() ! STARTCHAN
Ropen #CH_USERCNTRL,"usercntrl"
If SCR > 0
  Mat Read #CH_USERCNTRL,SCR,260;ACODE$;
End If 
If SCR = -1 Let ACODE$[1,10] = "system    "
E = 2
Search #CH_CSTHST,1,0;KEY_CSTHST1$,REC_CSTHST,E
If E Gosub ERR_SEARCH
SETUP_REC: Rem
TIME$ = " ",TIME$
TIME$[1,2] = Tim(11) Using "&#"
TIME$[3,4] = Tim(12) Using "&#"
TIME$[5,6] = Tim(13) Using "&#"
CSTHST[1] = TIME$
CSTHST[0] = Tim(6)
CSTHST$[13,22] = ACODE$[1,10]
KEY_CSTHST1$ = " ",KEY_CSTHST1$
KEY_CSTHST1$[1,12] = CSTHST$[1,12]
KEY_CSTHST1$[13,14] = CSTHST[6] Using "##"
KEY_CSTHST1$[15,19] = CSTHST[0] Using "&&&&#"
KEY_CSTHST1$[20,25] = TIME$[1,6]
KEY_CSTHST1$[26,27] = CSTHST[2] Using "##"
KEY_CSTHST2$ = " ",KEY_CSTHST2$
KEY_CSTHST2$[1,14] = KEY_CSTHST1$[1,14]
KEY_CSTHST2$[15,16] = CSTHST[2] Using "##"
KEY_CSTHST2$[17,27] = KEY_CSTHST1$[15,25]
Search #CH_CSTHST,4,1;KEY_CSTHST1$,REC_CSTHST,E
If E = 1 If TRYS = 0
  TRYS = 1
  ! Signal 3,11
  Goto SETUP_REC
End If 
If E Gosub ERR_SEARCH
TRYS = 0
Search #CH_CSTHST,4,2;KEY_CSTHST2$,REC_CSTHST,E
If E Gosub ERR_SEARCH
Mat Write #CH_CSTHST,REC_CSTHST,0;CSTHST$
Mat Write #CH_CSTHST,REC_CSTHST,52;CSTHST;
OUTEND: Rem
Try Close #CH_CSTHST Else Rem
! Try Close #CH_USERPORT Else Rem
Try Close #CH_USERCNTRL Else Rem
End
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/mkcsthstse!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
Rem {end rtn.error.s}
End