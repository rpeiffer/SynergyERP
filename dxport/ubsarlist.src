!Program Name: ubsarlist
!
! loadsave -w -s -n 100,10 -o prog/dxport/ubsarlist.dl4 src/ubsarlist.src
!
!Last Updated:                                   
!zyc 09/01/04 cct182085 modified path for include
!zyc 09/03/04 cct182085 add log file
!zyc 09/09/04 cct182085 modified CalcARs
!zyc 09/09/04 cct182085 do not use CalcARs
!zyc 09/16/04 cct182589 using dir 5 - 2/scustomer#
!zyc 09/24/04 cct182799 using smart mask
!rce 10/10/05  salesgroup
!

Include "src/cuvars.inc"
Declare external sub arlist
Declare Sub updatelog,errTrap

dim cus.[12000] as arInfo
dim tot. as totarInfo
Dim arrSales[999]

call arlist(1,999,cus.[],ii,ss,12000, arrSales[])
stop

External Sub ARList(intCo, intSalesMan, debug, dlog$, cus.[] as arInfo, tot. as totarInfo, ii, ss, iLimit,Key1$, arrSales[], ...)

Try 
	Enter custid
else
	rem
end try

Try
print msc$(0)
Declare Intrinsic Function FindChannel,Trim$
Declare External Function FDate$,BaseName$,FMTPhone$,OpenFile
Declare External Sub CalcARs
Declare Intrinsic Sub DXGet,DXPut,StringSearch
External Lib "ubsfunc.dl4"

Include "src/ubscustomer.inc"

Dim CUK$[12],SMK$[20],P9$[50],P61$[256]

Dim CU. As Customer

Dim 1%,debugDetail
! Variables for Channel#'s
Dim 2%,CUC,CTLC,SMC,ARC
! Variables for Search Record#
Dim 3%,CUR,CTLR,SMR,ARR
! Variables for Search Error
Dim 2%,CUE,CTLE,SME,ARE


Dim Sales$[35], Temp$[100]
Dim SLS$[3],CO$[1]
Dim Msg$[256],pgmName$[20]
Dim QMASK$[20],PMASK$[20],EMASK$[20],dec$[5]

Dim 3%,ARS[5]
Dim 2%, t2
Dim 2%, Q0[1]
Dim 3%,tot[10]


debugDetail=0
pgmName$="ubsarlist"
msg$[1,50]="-",msg$ \ Call updatelog(debug)               
msg$="start...program "+pgmName$ \ Call updatelog(debug)     

ii=0

SLS$=intSalesMan Using "###" ! Passed Salesman
CO$=Str$(intCo) ! Company
msg$="doing...company-"+CO$+" salesman-"+SLS$ \ Call updatelog(debug)

CUC=OpenFile(-1808,intCo)   \ If CUC=-1  Error 42
CTLC= OpenFile(-9999,intCo) \ If CTLC=-1 Error 42
SMC= OpenFile(-1824,intCo)  \ If SMC=-1  Error 42
ARC= OpenFile(-1504,intCo)  \ If ARC=-1  Error 42   ! SARACT

Read #CTLC,19,50;P9$; ! What is this?
Mat Read #CTLC,115,40;Q0; 

If not(Q0[1]) let Q0[1]=2                                                       
Let Dec$="#",Dec$;Qmask$="---,---,--#"                                         
If Q0[0] Let Qmask$="---,---,--#.",Dec$[1,Q0[0]]         !qty mask      
If Q0[1] Let Pmask$="---,---,---,---.",Dec$[1,Q0[1]]     !price mask        
Let Emask$="-$$$,$$$,$$$,$$$.##"                         !ext. price mask       


! For xx=0 to 10  
	! tot[xx]=0   
! Next xx         
clear tot[] \ tot[0]=0

If SLS$="999" Then
  CUK$=""     !Key1$
Else
  CUK$=SLS$   !Key1$
End If

arrayloop: !
if arrSales
	CUK$=arrsales[counter] using "###"
Endif

ARTOP: Rem Loop Through Customer on Salesman directory (default sort)

Search #CUC,3,5;CUK$,CUR,CUE

IF SLS$<>"999"
	if arrsales  ! using salesgroup
		If val(CUK$[1,3]) <> arrSales[counter]
			Let CUE=22
			counter=counter+1
			if arrSales[counter] and counter<1000 goto arrayloop  ! if more loop
		endif
	else
		If CUK$[1,3]<>SLS$ Let CUE=22
	endif
endif


If CUE Then
   Key1$=""
   Goto AREND:
End If

If debugDetail                                                      
   msg$="doing...Search #CUC: CUK$="+CUK$+" CUR="+CUR \ Call updatelog(debug) 
   If CUE msg$="error...Search error "+CUE  \ Call updatelog(debug) 
Endif 
Read Record #CUC,CUR; CU.;

if custid and CU.C1[1] <> custid goto ARTOP

! If intSalesMan<>999 If intSalesMan<>CU.C1[2] Goto ARTop: ! Security

If CU.A1$[21,30] = "          " Let CU.A1$[21,30]="         0" ! Phone# Fix

! Get SalesMan

SMK$=CU.C1[2] Using "### "
Temp$=SMK$

Search #SMC,2,1;SMK$,SMR,SME
If SMK$[1,4] <> Temp$ Let SME=22

If debugDetail                                                      
   msg$="doing...Search #SMC: SMK$="+SMK$+" SMR="+SMR \ Call updatelog(debug) 
   If SME msg$="error...Search error "+SME  \ Call updatelog(debug) 
Endif   
If SME=0 Then
	Mat Read #SMC,SMR;Sales$[1,30];
Else
	Sales$="-NOF-"
End If

Temp$=Sales$
Sales$=""
For X1=1 to Len(Temp$)
	If Temp$[X1,X1]="'" Then
           Sales$=Sales$,"\\"
        End If
	Sales$=Sales$,Temp$[X1,X1]
Next X1

!Call CalcARs(CU.C1[1],ARS[],P9$,ARC,CTLC)
!
ARS[1] = CU.C4[0]                                                     
ARS[2] = CU.C4[2]                                                     
ARS[3] = CU.C4[3]                                                     
ARS[4] = CU.C4[4]                                                     
ARS[5] = CU.C4[5]                                                     
ARS[0] = (CU.C4[0] + CU.C4[2] + CU.C4[3] + CU.C4[4] + CU.C4[5]) - CU.C4[1]



For X1=0 to 4
   If ARS[X1]<>0 Goto ARList:
Next X1
Goto ARTop:

ARList: Rem here we list them
!accumulate total                                                               
tot[0] = tot[0]+ARS[0]          !total
tot[1] = tot[1]+ARS[1]          !current
tot[2] = tot[2]+ARS[2]          !30
tot[3] = tot[3]+ARS[3]          !60
tot[4] = tot[4]+ARS[4]          !90
tot[5] = tot[5]+ARS[5]          ! per. 4


If ii < iLimit Then
   cus.[ii].SLSNo$=Str$(CU.C1[2])
   cus.[ii].SLSName$=Trim$(Sales$)
   cus.[ii].CustNumber$=Str$(CU.C1[1])
   cus.[ii].CustName$=CU.A1$[31,60]
   cus.[ii].Contact$=CU.A1$[1,20]
   If Trim$(cus.[ii].Contact$)="" Let cus.[ii].Contact$="n/a"
   cus.[ii].Phone$=FMTPhone$(Val(CU.A1$[21,30]))
   If Trim$(cus.[ii].Phone$)="" Let cus.[ii].Phone$=""
   cus.[ii].ARBal$=ARS[0] Using Emask$   !"--,---,---.##"
   cus.[ii].Current$=ARS[1] Using Emask$ !"--,---,---.##"
   cus.[ii].Over30$=ARS[2] Using Emask$  !"--,---,---.##"
   cus.[ii].Over60$=ARS[3] Using Emask$  !"--,---,---.##"
   cus.[ii].Over90$=ARS[4] Using Emask$  !"--,---,---.##"
   cus.[ii].PastDue$=ARS[5] Using Emask$  !"--,---,---.##"
   Key1$=CUK$[4,9]
   ii=ii+1
   Goto ARTop:
End If



AREnd: !===============================================================
If ii < iLimit Then                                           
   tot.totTotal$=TOT[0] Using Emask$        
   tot.totCurrent$=TOT[1] Using Emask$     
   tot.totOver30$=TOT[2] Using Emask$      
   tot.totOver60$=TOT[3] Using Emask$       
   tot.totOver90$=TOT[4] Using Emask$       
   tot.totPastDue$ = TOT[5] Using Emask$
   ii=ii+1                                                    
End If                                                        


Close #CUC,#CTLC,#SMC,#ARC
msg$="doing...end of "+pgmName$ \ Call updatelog(debug)
print msc$(0)
ss=0
Exit Sub
Else
  ss=spc(10)
  Call errTrap(pgmName$)
End Try


Sub updatelog(debug)                                        
	If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " " + msg$ + "'' >> " + dlog$
End Sub   


Sub errTrap(pgmName$)
  msg$="error...",Spc(8)," ",Msc$(2)," at ",Str$(Spc(10))," ",pgmName$
  Call updatelog(1)
End Sub


ss=Spc(10)

End Sub

