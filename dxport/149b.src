! >>> Program 149b
!
! description Alternate Item Code List with no UPC Code
!
! loadsave -w -n 100,10 -o prog/dxport/149b.dl4 src/149b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  4, 2002  17:32:27
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx1/mx149noupc.src (univ2) [kag] {04154}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX149NOUPC - ITEMS WITH NO UPC CODE
Rem AUTHOR: FOR PHOENIX   JAN  4, 1994
Rem LAST UPDATE:
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim A$[156],VN$[30],STAGK$[50]
Dim 2%,B[24],M1[1]
Dim J8$[8]
Dim 1%,F,X1,W1[2],W0[3],V9[4],RASL[5]
Dim 2%,X2,W2[9]
Dim 3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],T9$[26],P9$[50]
Dim RETVAL$[512],Z2$[50],MSGTXT$[75]
Dim Z1$[2],K4$[20],K5$[50],K6$[50],W1$[32],K9$[50]
Dim BPROD$[12],EPROD$[12],PROD$[12],LOC$[6],BUYER$[30]
Dim OLDK1$[3],COMP$[30],RFLG$[1]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
For J = 2 To 7
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1744","2352","2400","208","2528","1792"
Ropen #8,"2/buyers"
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;COMP$;
INIT_VARS: Rem
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
!!BPROD$ = "           1";EPROD$ = "ZZZZZZZZZZZZ"
!!BWH = 0;EWH = 99
!!BBUYER = 0;EBUYER = 999
!!SORT = 3
!!WFLAG = 0 \ RFLG = 0
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
SCREEN = J8
V9[3] = 60 \ If SCREEN Let V9[3] = 20;SCRPRT = 99
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"149b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If
!
call dxget("SORT",tmp$) \ SORT = tmp$
call dxget("BBUYER",tmp$) \ BBUYER = tmp$
call dxget("EBUYER",tmp$) \ If tmp$ = "" Let EBUYER = 999 Else Let EBUYER = tmp$
call dxget("SPRODC",BPROD$) \ BPROD$ = BPROD$,Blank$
call dxget("EPRODC",EPROD$) \ EPROD$ = EPROD$,EndParam$
call dxget("BWH",tmp$) \ BWH = tmp$
call dxget("EWH",tmp$) \ If tmp$ = "" Let EWH = 99 Else Let EWH = tmp$
call dxget("RFLG",tmp$) \ if tmp$ = "" Let RFLG = 0 Else Let RFLG = 1
!
If SORT = 3 Let BBUYER = 0 \ EBUYER = 999
!
If BBUYER < 0 or BBUYER > 999 let e$="Invalid starting buyer code, must be between 0 and 999!" \ error 10000
If EBUYER < BBUYER or EBUYER > 999 let e$="Invalid ending buyer code, must be between starting buyer code and 999!" \ error 10000
!
If BPROD$ > EPROD$ Let e$="Invalid ending product code, must be >= than starting product code!" \ error 10000
!
If BWH = EWH Let WFLAG = 1 Else Let WFLAG = 0
!
!!L_900: Rem
!!Call "Progdflt","149noupc","",77,RETVAL$
!!Gosub DISPLAY_SCREEN
!!WHAT_TO_DO: Rem well what!
!!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults  E: exit ";
!!Input ""Z1$ \ Call String(1,Z1$)
!!If Z1$ = "S"
!!ASK_SAVE:!! Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
!!  Input ""Z2$ \ Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto WHAT_TO_DO
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "Progdfltw","149noupc","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL';
!!End If 
!!If Z1$ = "R"
!!  For LOOP_ = 1 To 4
!!    CHOICE = LOOP_
!!    Gosub MAKE_CHOICE
!!  Next LOOP_
!!  Goto WHAT_TO_DO
!!End If 
!!If Z1$ = "P" Goto MAIN
!!If Z1$ = "E" Goto OUTEND
!!CHOICE = Z1$
!!Gosub MAKE_CHOICE
!!Goto WHAT_TO_DO
!!MAKE_CHOICE: Rem what field do we want?
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On CHOICE Gosub FLD1,FLD4,FLD6,FLD8
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
MAIN: Rem
if j8 ! browser
	tmp$="PROD CODE",fdel$,"DESCRIPTION 1",fdel$
	tmp$=tmp$,"DESCRIPTION 2",FDEL$,"VENDOR ITEM",fdel$
	tmp$=tmp$,"VENDOR",fdel$
	If sort=1 or sort=3
		tmp$=tmp$,"VENDOR NAME",fdel$
	Else
		tmp$=tmp$,"BIN",fdel$
	Endif
	If Not(WFLAG)
		tmp$ = tmp$,"WH",fdel$
	End If
	call addtostr(e$,rstr$,tmp$+rdel$)
Endif
OLDK1$ = " ",OLDK1$
If SORT = 1 Gosub L_8100
If SORT = 2 Gosub L_8200
If SORT = 1 Or SORT = 2 Let CH = 9 Else Let CH = 2
If SORT = 3 Let K1$ = BPROD$ Else Let K1$ = " ",K1$
If V9[0] If Not(SCRPRT) Print #0;"\14\";
V9[1] = 90 \ V9[0] = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
!!Print @0,22;"Printing,please wait...  ";'CE'; \ Signal 3,0
!!If SCREEN Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
Search #CH,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #CH,3,1;K1$,R1,E
If E = 2 Goto L_9100
L_2010: Rem
If SORT <> 3 If K1$[10,9 + Len(EPROD$)] > EPROD$ Goto L_2000
If SORT = 3 If K1$[1,Len(EPROD$)] > EPROD$ Goto L_9100
If SORT <> 3 Let WHSENUM = K1$[22,23] Else Let WHSENUM = K1$[13,14]
If WHSENUM < BWH Goto L_2000
If WHSENUM > EWH Goto L_2000
Mat Read #2,R1,0;W1$;
Mat Read #2,R1,32;W1;
Mat Read #2,R1,38;W2;
Mat Read #2,R1,420;W0;
If RFLG If W0[0] <> 0 Goto L_2000
STAGK$ = " ",STAGK$
If SORT = 3
  STAGK$ = K1$[1,12]
Else 
  STAGK$ = K1$[10,21]
End If 
Search #3,2,2;STAGK$,R3,E
If E = 0 !"found one in 2/stagitem
  Mat Read #3,R3,4;M1;
  If M1[1] = 1 Goto L_2000
End If 
VN$ = "VENDOR NOT ON FILE"
If W2[3] > 0 Gosub L_3000
K = K + 1
!!If Not(SCREEN)
!!  If Not(Fra(K / 500))
!!    Print Using "###### records printed";@28,22;'CL';K;
!!    Print Using "   Page ####";V9[0];
!!  End If 
!!End If 
If SORT = 1 Or SORT = 2
  If K1$[1,3] <> OLDK1$[1,3] And OLDK1$[1,3] <> "   "
    J1 = 90
    Gosub L_5800
  End If 
End If 
Gosub L_5800
Gosub L_5000
OLDK1$[1,3] = K1$[1,3]
Signal 2,J0,A,B !!\ If J0 <> -1 Gosub L_9615
Goto L_2000
L_3000: Rem VENDOR NAME
J2$ = " ",J2$;J2$ = W2[3] Using "######"
Search #4,2,1;J2$,R4,E !!\ If E > 1 Gosub ERR_SEARCH
If E Return 
Mat Read #4,R4,0;VN$;
Return 
L_5000: Rem PRINT LINE
PROD$ = W1$[1,12]
Search #7,2,1;PROD$,R7,E
If E Return
Mat Read #7,R7,0;A$;
!
If J8 
  tmp$ = rtrim$(A$[140,151]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,38]),fdel$
  tmp$ = tmp$, rtrim$(A$[63,92]),fdel$
  tmp$ = tmp$, rtrim$(A$[93,112]),fdel$
  tmp$ = tmp$, W2[3] Using "######",fdel$
  If SORT = 1 Or SORT = 3
    tmp$ = tmp$, rtrim$(VN$[1,25]),fdel$
  Else 
    tmp$ = tmp$, K1$[4,9],fdel$
  End If 
  If Not(WFLAG)
    tmp$ = tmp$, WHSENUM Using "##",fdel$
  End If
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return 
End if
!
Print #0; Tab 1;A$[140,151];
Print #0; Tab 14;A$[9,38];
Print #0; Tab 45;A$[63,92];
Print #0; Tab 76;A$[93,112];
Print #0; Using "######"; Tab 97;W2[3];
If SORT = 1 Or SORT = 3
  Print #0; Tab 104;VN$[1,25];
Else 
  Print #0; Tab 114;K1$[4,9];
End If 
If Not(WFLAG)
  Print #0; Using "##"; Tab 129;WHSENUM;
End If 
Print #0;"\15\";
Return 
L_5800: Rem HEADINGS ROUTINE
!
If J8 Return
V9[1] = V9[1] + 1 \ If V9[1] < V9[3] Return 
!!If V9[0] If SCRPRT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(SCRPRT) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 12
If Not(SCRPRT) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(COMP$) / 2);COMP$; Tab 120;"PAGE";V9[0]
Print #0;" - 149B - ";T9$;
Print #0; Tab 49;"ITEMS WITH NO UPC CODE"
If SORT = 1 Print #0; Tab 49;"SORT BY BUYER/VENDOR "
If SORT = 2 Print #0; Tab 49;"SORT BY BUYER/BIN LOCATION"
If WFLAG
  Print #0; Using "##"; Tab 49;"From whse ";BWH;" to whse ";EWH
Else 
  Print #0; Tab 49;"For all warehouse"
End If 
Print #0; Tab 49;"From product ";BPROD$;" to ";EPROD$
If SORT = 1 Or SORT = 2
  BUYER = K1$[1,3] \ BUYER$ = "BUYER NOT ON FILE"
  If BUYER Mat Read #8,BUYER,0;BUYER$;
  Print #0; Using "###"; Tab 5;"BUYER : ";BUYER; Tab 20;BUYER$[1,30]
End If 
Print #0;"\15\";
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 14;"DESCRIPTION";
Print #0; Tab 45;"DESCRIPTION 2";
Print #0; Tab 76;"VENDOR ITEM";
Print #0; Tab 97;"VENDOR";
If SORT = 1 Or SORT = 3 Print #0; Tab 105;"VENDOR NAME";
If SORT = 2 Print #0; Tab 114;"LOCATION";
If Not(WFLAG) Print #0; Tab 128;"WHSE";
Print #0;" "
Print #0;"\15\";
V9[1] = V9[1] + 2
Return 
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return  
L_9100: Rem END
!!If SCREEN Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
Goto OUTEND
!!If K2$ = "" Goto OUTEND
!!Goto L_900
!!L_9905: !!Print @0,Msc(34);'CL RB';"RECORD LOCKED ERROR. Enter  R: retry,  E: exit  ";
!!Input ""X$ \ Print @0,Msc(34);'CL';
!!If X$ = "R" Return -1
!!If X$ <> "E" Goto L_9905
!!Goto OUTEND
!!End 
!!DISPLAY_SCREEN: Rem
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,1] = "3"
!!  RETVAL$[2,4] = "  0"
!!  RETVAL$[5,7] = "999"
!!  RETVAL$[8,19] = "            "
!!  RETVAL$[20,31] = "zzzzzzzzzzzz"
!!  RETVAL$[32,33] = " 0"
!!  RETVAL$[34,35] = "99"
!!  RETVAL$[36,36] = "N"
!!  Call "Progdfltw","149noupc","",77,RETVAL$,0
!!End If 
!!Print 'CS'
!!Print @0,0;"-MX149NOUPC-";@33,0;"ITEMS WITH NO UPC CODE ";
!!Print @0,2;" 1> SORT BY";@25,2;"1: Buyer/Vendor,  2: Buyer/Bin,  3: Product"
!!Print @0,6;" 2> PRODUCT CODE: ";
!!Print @0,8;" 3> WAREHOUSE : ";
!!Print @0,10;" 4> Only print products with a do not reorder flag set to  ''N''? ";
!!SORT = RETVAL$[1,1]
!!BBUYER = RETVAL$[2,4]
!!EBUYER = RETVAL$[5,7]
!!BPROD$ = RETVAL$[8,19]
!!EPROD$ = RETVAL$[20,31]
!!BWH = RETVAL$[32,33]
!!EWH = RETVAL$[34,35]
!!RFLG$ = RETVAL$[36,36]
!!Print Using "#";@20,2;SORT;
!!If SORT = 1 Or SORT = 2
!!  Print @0,4;"   BUYER CODE: ";
!!  Print Using "###";@25,4;'CL';BBUYER;@45,4;EBUYER;
!!Else 
!!  Print @0,4;'CL';
!!End If 
!!Print @25,6;'CL';BPROD$;@45,6;EPROD$;
!!Print Using "##";@25,8;'CL';BWH;@45,8;EWH;
!!Print @65,10;RFLG$;
!!Return 
!!FLD1: Rem
!!J5$ = "Enter sort by  1: Buyer/vendor,  2: Buyer/Bin,  3: Product"
!!J1$ = SORT;J0$ = "3000 120 2"
!!J1 = SORT
!!Gosub ISINPUT
!!SORT = J1
!!If SORT > 3 Or SORT < 1 Goto FLD1
!!Print Using "#";@20,2;SORT;
!!RETVAL$[1,1] = SORT Using "#"
!!If SORT = 1 Or SORT = 2
!!  Print @0,4;"   BUYER CODE: ";
!!  Goto FLD2
!!Else 
!!  Print @0,4;'CL';
!!End If 
!!Return 
!!FLD2: Rem
!!J5$ = "Enter starting buyer code maximum 999"
!!J1 = BBUYER;J1$ = BBUYER;J0$ = "3000 325 4"
!!Gosub ISINPUT
!!BBUYER = J1
!!Print Using "###";@25,4;BBUYER;'CL';
!!J5$ = " ",J5$
!!FLD3: Rem
!!J5$ = "Enter ending buyer code maximum 999"
!!J1 = EBUYER;J1$ = EBUYER;J0$ = "3000 345 4"
!!Gosub ISINPUT
!!EBUYER = J1
!!Print Using "###";@45,4;EBUYER;'CL';
!!If BBUYER > EBUYER
!!  J7$ = "Invalid buyer range"
!!  Gosub ISERRMSG
!!  Goto FLD2
!!End If 
!!RETVAL$[2,4] = BBUYER Using "###"
!!RETVAL$[5,7] = EBUYER Using "###"
!!Return 
!!FLD4: Rem
!!J5$ = "Enter starting product code maximum zzzzzzzzzzzz "
!!J1$ = BPROD$;J0$ = "2 00122506"
!!Gosub ISINPUT
!!BPROD$ = J$
!!Print @25,6;BPROD$;'CL';
!!J5$ = " ",J5$
!!FLD5: Rem
!!J5$ = "Enter ending product code maximum zzzzzzzzzzzz "
!!J1$ = EPROD$;J0$ = "2 00124506"
!!Gosub ISINPUT
!!EPROD$ = J$
!!Print @45,6;EPROD$;'CL';
!!If BPROD$ > EPROD$
!!  J7$ = "Invalid product code range"
!!  Gosub ISERRMSG
!!  Goto FLD4
!!End If 
!!J5$ = " ",J5$
!!RETVAL$[8,19] = BPROD$
!!RETVAL$[20,31] = EPROD$
!!Return 
!!FLD6: Rem
!!J5$ = "Enter starting warehouse number maximum 99 "
!!J1$ = BWH;J0$ = "3000 225 8"
!!J1 = BWH
!!Gosub ISINPUT
!!BWH = J1
!!Print Using "##";@25,8;BWH;'CL';
!!J5$ = " ",J5$
!!FLD7: Rem
!!J5$ = "Enter ending warehouse number maximum 99"
!!J1$ = EWH;J0$ = "3000 245 8"
!!J1 = EWH
!!Gosub ISINPUT
!!EWH = J1
!!Print Using "##";@45,8;EWH;'CL';
!!If BWH > EWH
!!  J7$ = "Invalid warehouse range"
!!  Gosub ISERRMSG
!!  Goto FLD6
!!End If 
!!If BWH = EWH Let WFLAG = 1
!!RETVAL$[32,33] = BWH Using "##"
!!RETVAL$[34,35] = EWH Using "##"
!!Return 
!!FLD8: Rem
!!If RFLG$ = "Y" Let J1 = 1 Else Let J1 = 0
!!J0$ = "6000 16510" \ J5$ = "Enter Y or N"
!!Gosub ISINPUT
!!If J1 Let RFLG$ = "Y" Else Let RFLG$ = "N"
!!If RFLG$ <> "Y" If RFLG$ <> "N" Goto FL8
!!If RFLG$ = "Y" Let RFLG = 1 Else Let RFLG = 0
!!RETVAL$[36,36] = RFLG$
!!Return 
L_8100: Rem======build the sort file
!!Print @0,22;'CL';"Sorting,please wait...";
K1$ = BPROD$
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_8110
LOOP1: Search #2,3,1;K1$,R1,E
If E Goto END_SORT_LOOP1
L_8110: Rem
If K1$[1,Len(EPROD$)] > EPROD$ Goto END_SORT_LOOP1
WHSENUM = K1$[13,14]
If WHSENUM < BWH Goto LOOP1
If WHSENUM > EWH Goto LOOP1
Mat Read #2,R1,0;W1$;
Mat Read #2,R1,32;W1;
Mat Read #2,R1,38;W2;
If W1[2] < BBUYER Goto LOOP1
If W1[2] > EBUYER Goto LOOP1
K = K + 1
If Not(SCREEN)
  ! If Not(Fra(K / 500)) Print Using "###### records processed";@28,22;'CL';K;
End If 
K9$ = " ",K9$
K9$[1,3] = W1[2] Using "###"
K9$[4,9] = W2[3] Using "######"
K9$[10,24] = K1$[1,14]
Search #9,4,1;K9$,R1,E !!\ If E Gosub ERR_SEARCH
Goto LOOP1
END_SORT_LOOP1: Rem
Return 
L_8200: Rem====== build sort file buyer/vendor
!!Print @0,22;'CL';"Sorting,please wait...";
K1$ = BPROD$
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_8210
LOOP2: Search #2,3,1;K1$,R1,E
If E Goto END_SORT_LOOP2
L_8210: Rem
If K1$[1,Len(EPROD$)] > EPROD$ Goto END_SORT_LOOP2
WHSENUM = K1$[13,14]
If WHSENUM < BWH Goto LOOP2
If WHSENUM > EWH Goto LOOP2
Mat Read #2,R1,0;W1$;
Mat Read #2,R1,32;W1;
Mat Read #2,R1,38;W2;
If W1[2] < BBUYER Goto LOOP2
If W1[2] > EBUYER Goto LOOP2
If P9$[41,41] = "W" Call "CHKWRASL",W1[0],RASL[]
K = K + 1
If Not(SCREEN)
  If Not(Fra(K / 500))
    !Print Using "###### records processed";@28,22;'CL';K;
  End If 
End If 
If RASL ! " p9$[41,41]="Y"
  Gosub GET_RASL_BIN
Else 
  Gosub GET_BIN
End If 
Goto LOOP2
END_SORT_LOOP2: Rem
Return 
GET_RASL_BIN: Rem ======== get bin location for rasl
LOC$ = " ",LOC$ \ COUNT = 0
K6$ = " ",K6$
K6$[1,14] = K1$[1,14] \ K6$[15] = ""
LOOP_SPRODLOT: Rem
Search #6,3,2;K6$,R6,E
If E Goto END_GET_RASL_BIN
If K6$[1,12] <> K1$[1,12] Goto END_GET_RASL_BIN
If K6$[13,14] <> K1$[13,14] Goto END_GET_RASL_BIN
LOC$ = K6$[15,20] \ COUNT = COUNT + 1
TRIM_LOC: Rem
If LOC$[1,1] = " " Let LOC$ = LOC$[2] \ Goto TRIM_LOC
If Not(Len(LOC$)) Let LOC$ = "STOCK "
K9$[1,3] = W1[2] Using "###"
K9$[4,9] = LOC$
K9$[10] = K1$
Search #9,4,1;K9$,R1,E \ If E Goto LOOP_SPRODLOT
Goto LOOP_SPRODLOT
END_GET_RASL_BIN: Rem
If COUNT = 0 !"not in sprodlot
  K9$[1,3] = W1[2] Using "###"
  K9$[4,9] = "STOCK "
  K9$[10] = K1$
  Search #9,4,1;K9$,R1,E !!\ If E Gosub ERR_SEARCH
End If 
Return 
GET_BIN: Rem======== get bin location for non rasl
LOC$ = " ",LOC$ \ COUNT = 0
K5$ = " ",K5$
K5$[1,14] = K1$[1,14] \ K5$[15] = ""
LOOP_PRODLOC: Rem
Search #5,3,1;K5$,R5,E
If E Goto END_GET_BIN
If K5$[1,14] <> K1$[1,14] Goto END_GET_BIN
LOC$ = K5$[15,20] \ COUNT = COUNT + 1
TRIM_LOC5: Rem
If LOC$[1,1] = " " Let LOC$ = LOC$[2] \ Goto TRIM_LOC
If Not(Len(LOC$)) Let LOC$ = "STOCK "
K9$[1,3] = W1[2] Using "###"
K9$[4,9] = LOC$
K9$[10] = K1$
Search #9,4,1;K9$,R1,E !!\ If E Goto LOOP_PRODLOC
Goto LOOP_PRODLOC
END_GET_BIN: Rem
If COUNT = 0 !" not in prodloc file
  K9$[1,3] = W1[2] Using "###"
  K9$[4,9] = "STOCK "
  K9$[10] = K1$
  Search #9,4,1;K9$,R1,E !!\ If E Gosub ERR_SEARCH
End If 
Return 
!!L_7000: Rem " ========= call input
!!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end rtn.input.s}
!
OUTEND: Rem EXIT
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"149b.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
Try Call dxclose() ELSE REM
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 