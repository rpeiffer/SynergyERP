! >>> Program 088
!
! description Rebate Contract Listing
!
! loadsave -w -n 100,10 -o prog/dxport/088.dl4 src/088.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  6, 2004  10:39:09
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx0/mx088.src (univ2) [txc] {52272}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX088     Rebate Contract List
Rem Author:        Roman  (02/27/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate,FindF
!!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],SEC_LEV,3%,PFU2[6],CNVTA,A[33]
if Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim RB$[12],A$[156],A1$[142],P60$[50],LBL$[13]
Dim ITEM_LAB$[10],P9$[50],PUM$[4],CUM$[4],CCD$[14]
Dim 2%,RB1[5],V9[4],RBMIN,RBCOM,CUST_CODE,DESC$[16]
Dim 2%,DT3[1],CURJDATE,JWDATE,SCRATCH$[80]
Dim J8$[8],QUM$[4],PMASK$[12],EXPDATE$[8],vendcnt$[50]
Dim PREVCONT$[20],HDR$[20],HDR2$[20],HDR3$[20],HDR4$[20]
Dim 1%,F,RBUM[1],RB[2],UNT,RBL1[1],2%,D6,RCTR,3%,J,AMOUNT,RB3[6]
Dim 1%,RBWH,3%,RB5[2],BASEX,PRICE,MARK,HOLD,RCN3[3],RBCOST,RBSLCOST
Dim K1$[50],K2$[30],K3$[6],K4$[12],K5$[12],T9$[26],Z1$[50],K10$[50]
dim 1%,BRKONC,2%,HLDCONTR,CNAME$[30]
Dim 1%,LM[1],WHLM[1],WHPARC[5],2%,W2[9],3%,PRPARC[3],PF_LOAD2,WHMISC[6]
Dim T6$[60],CHK$[60],K6$[40],3%,W3[24],2%,B[24],C4[10],Q0[1],VEN$[264]
Dim PT$[24],K7$[6],RCN$[70],CT$[50],CGPD$[30]
Dim 3%,COUNT,R5,SAVE_R5,PRINT_TO_SCREEN,COMD,jedate,jsdate
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[30],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J6,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 2%,X2,X3
!
dim tmp$[1200],tmp1$[100],tmp2$[1500]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
! -  dx add xport reporting code
dim Blank$[50]	  \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="Z",EndParam$
!
COMD=0
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
coid=intCO
!
! Call dxsave(0,"tmp/088in.txt!")
!
For J = 2 To 12
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Open #J,J$ Else Ropen #J,J$
L_830: Next J
Data "320","1808","1792","304","1744","1728","2288","-1","2400","752","320"
! 2=REBATEDTL, 3=CUSTOMER, 4=PRODUCT, 5=RBCNTRTH, 7=CCODES, 8=COMMCODE
! 10=VENDOR, #11=price type, #12=RO DTL, #13=costgrp
Let j$="2/COSTGRP"+STR$(coid)
CALL FINDF(J$,CGRP)
IF CGRP
	ROPEN #13,J$
ENDIF
Read #1,3,172;D6;
X2 = D6 \ Gosub L_7700 \ J8$ = X$
X2 = D6 \ Gosub L_7820 \ X2 = 0
If X2 Let CURJDATE = X2 Else Gosub L_7650
Read #1,3;J1$;
j1$=rtrim$(j1$)
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Read #1,18,50;ITEM_LAB$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])

If Err 0 Let PRINT_TO_SCREEN = Spc(8)
PRINT_TO_SCREEN = 0 \ V9[3] = Chf(0)
If Err 0 Gosub ERR_TRAP
If PRINT_TO_SCREEN If PRINT_TO_SCREEN <> 49 Goto ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
V9[3] = 58 \ If PRINT_TO_SCREEN Let V9[3] = 18
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
!

!call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
! Call dxsave(0,"tmp/088in.txt!")
!
CALL DXGET("STVEND",tmp$) \IF rtrim$(tmp$)="" LET STVEND=1 ELSE STVEND=tmp$
CALL DXGET("ENDVEND",tmp$) \ IF rtrim$(tmp$)="" LET ENDVEND=999999 ELSE ENDVEND=tmp$
CALL DXGET("K2",tmp$) \  IF rtrim$(tmp$)="" let K2$="1"  ELSE  K2$=tmp$
CALL DXGET("K3",tmp$) \  IF rtrim$(tmp$)="" LET K3$="999999" ELSE K3$=tmp$
CALL DXGET("K4",K4$) \ K4$=rtrim$(ucase$(K4$)),Blank$
CALL DXGET("K5",K5$) \ K5$=rtrim$(ucase$(K5$)),EndParam$
CALL DXGET("PCUST",tmp$) \IF rtrim$(tmp$)="" LET PCUST=0 ELSE  PCUST=1
CALL DXGET("D",tmp$) \ IF rtrim$(tmp$)="V" LET  D=3  ELSE D=1 
CALL DXGET("PEXP",tmp$)
let pexp=0
IF Rtrim$(tmp$)=""  LET PEXP=1 
if ucase$(rtrim$(tmp$))="X" let pexp=2
if ucase$(rtrim$(tmp$))="A" let pexp=3
if ucase$(rtrim$(tmp$))="B" let pexp=1 ! ELSE PEXP=2
if not(pexp)
	let e$="Invalid Expired Contracts Option" \ error 10000
endif
CALL DXGET("EXDATE",TMP1$) !!\ if TMP1$="" let EXDATE=D6 
CALL DXGET("BRKONC",tmp$)\brkonc=tmp$
if rtrim$(tmp$)<>"" let brkonc=99

! VENDOR
if STVEND<=0 or STVEND>999999 let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if ENDVEND<STVEND or ENDVEND>999999 let e$="Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
K7$[1,6] = ENDVEND Using "######"
!
X2 = K2$ \ K2$ = X2 Using "######"
X3 = K3$ \ K3$ = X3 Using "######"
if X2<=0 or X2>999999 let e$="Invalid starting contract number, must be between 0 and 999999!" \ error 10000
if X3<X2 or X3>999999 let e$="Invalid ending contract number, must be between starting contract number and 999999!" \ error 10000
!
If K5$ < K4$  LET  e$="Invalid ending item code, must be >= than starting item code!" \ error 10000
!

!
IF PEXP=2 or PEXP=3
  !
  if RTRIM$(TMP1$)="" 
    EXDAT=D6
  ELSE
    X$ = TMP1$
    tmp1$ = X$[5,6],X$[1,2],X$[3,4]
    X$ = tmp1$ \EXDAT = X$
    X2 = EXDAT
    gosub L_7700
    Call VerifyDate(X$,X$,E) \ If E LET  e$="Invalid expiration date!" \ error 10000
    X2 = X$[1,6]
    EXDAT = X2
	IF PEXP=3 LET PEXP=4 ! ACTIVE ONLY EXPIRES TODAY THEN
  END IF
  X2 = EXDAT  \ X$ = X2 Using "&&&&&&"
  Call DateToJulian(1,X$,X$,E) \ If E LET  e$="Invalid expiration date must be <= 123199!" \ error 10000
  X2=X$[1,5]
  JEDATE = X2 \ EXPDATE$ = TMP1$
END IF
!
J5$ = "" 
!

if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"088",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

if j8
if PCUST
  tmp$="VENDOR CODE",fdel$
  tmp$=tmp$,"VENDOR NAME",fdel$
  tmp$=tmp$,"CONTRACT",fdel$
 tmp$=tmp$,"CONTRACT NAME",fdel$
 tmp$=tmp$,"VENDOR'S CONTRACT",FDEL$
 tmp$=tmp$,"VENDOR'S CONTRACT DESC",fdel$
 tmp$=tmp$,"CUST CODE",fdel$
  tmp$=tmp$,"CUST NAME ",fdel$
 tmp$=tmp$,"ITEM CODE",fdel$
 tmp$=tmp$,"DESCRIPTION",fdel$
 tmp$=tmp$,"DESCRIPTION_2",fdel$
 tmp$=tmp$,"START DATE",fdel$
 tmp$=tmp$,"FACTOR",fdel$
 tmp$=tmp$," REBATE U/M",fdel$
 tmp$=tmp$,"COST",fdel$
 tmp$=tmp$,"COST UM",fdel$
  tmp$=tmp$,"CANCEL DATE",fdel$
 tmp$=tmp$,"TYPE",fdel$
 tmp$=tmp$,"COST DESC",fdel$
 else 
tmp$="VENDOR CODE",fdel$
  tmp$=tmp$,"VENDOR NAME",fdel$
  tmp$=tmp$,"CONTRACT",fdel$
 tmp$=tmp$,"CONTRACT NAME",fdel$
 tmp$=tmp$,"VENDOR'S CONTRACT",FDEL$
 tmp$=tmp$,"VENDOR'S CONTRACT DESC",fdel$
 tmp$=tmp$,"ITEM CODE",fdel$
 tmp$=tmp$,"DESCRIPTION",fdel$
 tmp$=tmp$,"DESCRIPTION_2",fdel$
 tmp$=tmp$,"START DATE",fdel$
 tmp$=tmp$,"FACTOR",fdel$
 tmp$=tmp$," REBATE U/M",fdel$
 tmp$=tmp$,"COST",fdel$
 tmp$=tmp$,"COST UM",fdel$
  tmp$=tmp$,"CANCEL DATE",fdel$
 tmp$=tmp$,"TYPE",fdel$
 tmp$=tmp$,"COST DESC",fdel$
 end if
 
 call addtostr(e$,rstr$,tmp$+rdel$)

 end if 
 

END_EXPIRED_CONTRACTS_ONLY: Rem!!!!!!!!!!!!!!!!!
CONTINUE_QUEST: Rem
!!Print @10,22;'CL';
!!Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$
!!If Z1$ = "E" Goto OUTEND
!!If Z1$ = "R" Goto GET_RANGES
!!If Z1$ <> "P" Goto CONTINUE_QUEST
K1$ = " ",K1$ \ K1$ = STVEND Using "######";T6$ = " "
!!Print @0,22;"PRINTING... please wait";'CE'; \ Signal 3,0
If D = 1 Let K1$[1,6] = K2$[1,6]
V9[0] = 0 \ V9[1] = 90 \ RCTR = 0
LET HLDCONTR=-1 
!If PRINT_TO_SCREEN IF NOT(J8) Print 'CS';
GET_NEXT_REC: Rem
Search #2,3,D;K1$,R1,E
If E = 2 Goto END_OF_RANGE
!!If E Gosub ERR_SEARCH
Mat Read #2,R1,12;RB1;
J4$ = " ",J4$
J4$ = K1$[1,6] \ If D = 3 Let J4$ = K1$[7,12]
Search #5,2,1;J4$,R5,E
!!If E <> 0 Gosub ERR_SEARCH
Mat Read #5,R5,0;RCN3;
Mat Read #5,R5,24;RCN$;
MAT  READ #5,R5,94;vendcnt$;
ALLPROD = 0;COMDY = 0;SIZE_ = 0;grp=0
LET X2=RB1[2] \ GOSUB L_7820: \ LET X2=0
LET JSDATE=X2
X2 = RB1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If D = 3
  If K1$[7,12] < K2$[1,6] Goto GET_NEXT_REC
  If K1$[7,12] > K3$[1,6] Goto GET_NEXT_REC
  If K1$[1,6] > K7$[1,6] Goto END_OF_RANGE
  If K1$[13,24] < K4$ Goto GET_NEXT_REC
  If K1$[13,24] > K5$ Let K1$[13,24] = "zzzzzzzzzzzz" \ Goto GET_NEXT_REC
  If PEXP = 2
	if  Not(RB1[4]) Goto GET_NEXT_REC
	if JEDATE < JWDATE Goto GET_NEXT_REC
  endif
  if PEXP=3 ! all active contracts
		IF JSDATE>CURJDATE GOTO get_next_rec:!  not active yet
		if rb1[4]<>0 and JWDATE<JEDATE GOTO get_next_rec:! is expired
	end if	
	IF PEXP=4! active contracts about to expire based on date keyed
		IF NOT (RB1[4]) GOTO get_next_rec:! no cancel date
		IF JWDATE>JEDATE GOTO get_next_rec: !not about to expire
		IF JWDATE<CURJDATE GOTO get_next_rec: !is expired as of doday
	end if
  If K1$[13,13] = "#" Let ALLPROD = 99
  If K1$[13,13] = "*" Let COMDY = 99
  If K1$[13,13] = "&" Let SIZE_ = 99
  if k1$[13,13]="-" let GRP=99
  LET FLG=0 \ IF ALLPROD OR COMDY OR SIZE_ or GRP LET FLG=1
End If 
If D = 1
  If K1$[1,6] < K2$[1,6] Goto GET_NEXT_REC
  If K1$[1,6] > K3$[1,6] Goto END_OF_RANGE
  If RCN3[3] < STVEND Goto GET_NEXT_REC
  If RCN3[3] > ENDVEND Goto GET_NEXT_REC
  If K1$[7,18] < K4$ Goto GET_NEXT_REC
  If K1$[7,18] > K5$ Let K1$[7,18] = "zzzzzzzzzzzz" \ Goto GET_NEXT_REC
  If PEXP = 2 
	If Not(RB1[4]) Goto GET_NEXT_REC
	If JEDATE < JWDATE Goto GET_NEXT_REC
  endif
  if PEXP=3 ! all active contracts
		IF JSDATE>CURJDATE GOTO get_next_rec:!  not active yet
		if rb1[4]<>0 and JWDATE<JEDATE GOTO get_next_rec:! is expired
	end if	
	IF PEXP=4! active contracts about to expire based on date keyed
		IF NOT (RB1[4]) GOTO get_next_rec:! no cancel date
		IF JWDATE>JEDATE GOTO get_next_rec: !not about to expire
		IF JWDATE<CURJDATE GOTO get_next_rec: !is expired as of doday
	end if
  If K1$[7,7] = "#" Let ALLPROD = 99
  If K1$[7,7] = "*" Let COMDY = 99
  if k1$[7,7]="-" Let GRP=99
  LET FLG=0 \ IF ALLPROD OR COMDY OR SIZE_ OR GRP LET FLG=1
End If 
Read #2,R1,0;RB$;
Mat Read #2,R1,12;RB1;
If RB1[1] <> RCN3[3] Let RB1[1] = RCN3[3]
Mat Read #2,R1,36;RBUM;
Read #2,R1,118;RBWH;
Mat Read #2,R1,40;RB;
Mat Read #2,R1,46;RB3;
Mat Read #2,R1,126;RBL1;
Read #2,R1,130;RBMIN; \ Read #2,R1,134;RBCOM;
Mat Read #2,R1,138;RB5;
IF HLDCONTR=-1 LET HLDCONTR=RB1[0]                      
LET X2=RB1[0] \ IF BRKONC<>0 AND X2<>HLDCONTR LET V9[1]=90 
LET HLDCONTR=RB1[0]                                     
Gosub L_3500
UNT = RBUM[0] \ Gosub GET_UM \ PUM$ = X$
UNT = RBUM[1] \ Gosub GET_UM \ CUM$ = X$
If RB[2] Let UNT = RB[2] \ Gosub GET_UM \ QUM$ = X$
If RB <> 3 Goto L_2165
HOLD = RB5[0]

CNVTU[0] = 0 \ CNVTU[1] = RBUM[0] \ CNVTU[2] = 2
CNVTA = RB5[0] \ Gosub UNIT_CONVERT \ RBCOST = AMOUNT
L_2165: CNVTU[0] = 0 \ CNVTU[1] = RBUM[1] \ CNVTU[2] = 2
CNVTA = RB5[2] \ Gosub UNIT_CONVERT \ RB5[2] = AMOUNT
If RBL1[0] = 3 Let CNVTU[0] = 0 \ CNVTU[1] = RBUM[1] \ CNVTU[2] = 2
If RBL1[0] = 3 Let CNVTA = RB5[1] \ Gosub UNIT_CONVERT \ RBSLCOST = AMOUNT
If D = 3 If K1$[7,12] <> T6$[1,6] Gosub GET_VENDOR \ If PCUST Gosub PRINT_CUSTOMERS
If D = 1 If K1$[1,6] <> T6$[1,6] Gosub GET_VENDOR \ If PCUST Gosub PRINT_CUSTOMERS
If Not(FLG) Gosub CALC_PRICE
If Not(FLG) Gosub CALC_COST
If V9[1] > V9[3] Gosub PRINT_HEADER
X2 = RB1[2] \ Gosub L_7700
DUPE = 0 \ Gosub L_3200
Gosub PRINT_DETAIL_LINE
Goto GET_NEXT_REC

PRINT_CUSTOMERS: Rem "============================ print customers on contract
Numcust=0 \ if not(j8) let numcust=1 ! allow for browser no custs
CT$ = T6$[1,6] 
CUST_SEARCH: Rem
Search #5,3,3;CT$,R5,E \ If E and numcust>0 Goto END_CUST_SEARCH
If CT$[1,6] <> T6$[1,6] and numcust>0 Goto END_CUST_SEARCH
IF E OR CT$[1,6] <> T6$[1,6] AND J8 LET NUMCUST=-1
IF J8 !!
  IF COMD
    If Not(FLG) 
      tmp$=tmp$,RB$[1,12],fdel$ !!item code
    else
      If ALLPROD  tmp$=tmp$,"ALL PRODUCTS",fdel$!!
      If COMDY  tmp$=tmp$,"*COMDY ",RB$[1,4],fdel$!!
      If SIZE_  tmp$=tmp$,"*SIZE ",fdel$,RB$[1,4],fdel$!
	  If GRP  tmp$=tmp$,"-CGRP ",RB$[1,4],fdel$!!
    end if
    tmp$=tmp$,A$[9,36],fdel$!!DESCRIPTION_1
	tmp$=tmp$,A$[63,90],fdel$!!DESCRIPTION 2
    X2 = RB1[2] \ Gosub L_7700
    If RB1[2]
      tmp$=tmp$,X$[1,8],fdel$ !!START CANCEL
	else
	  tmp$=tmp$,"NONE",fdel$!!START CANCEL
	end if

	If RB[0] = 3
      tmp$=tmp$, RBCOST Using PMASK$,fdel$  !!FACTOR
	end if
	If RB[0] = 1 tmp$=tmp$,RB5[0] Using "###.###%",fdel$
    If RB[0] = 2 tmp$=tmp$,RB5[0] Using "-$$#.#### / ",fdel$
	tmp$=tmp$,PUM$,fdel$!!REBATE UM
    If Not(FLG) Gosub CALC_COST
	If RBL1[0] <> 4 
	  If RBSLCOST 
	   tmp$=tmp$,RBSLCOST Using PMASK$,fdel$ 
	  else 
	   tmp$=tmp$,"",fdel$  !!COST!		 
	  end if
	End if
	If RBL1[0] = 4 
	  tmp$=tmp$,"use standard",fdel$,fdel$
	else
      tmp$=tmp$,CUM$,fdel$ !!UM
	end if
   
    X2 = RB1[4] \ Gosub L_7700
    If RB1[4] 
      tmp$=tmp$,X$[1,8],fdel$
    else
      tmp$=tmp$,"NONE",fdel$ !!DATE
    end if
    Gosub L_8000
    If RBL1[0] = 1 If RB5[1] >= 0 
      tmp$=tmp$,RB5[1] Using "###.###%"," Mark Up "
    end if
    If RBL1[0] = 1 If RB5[1] < 0 
      tmp$=tmp$,RB5[1] Using "###.###%"," Discount "
    end if

    If RBL1[0] = 2 If RB5[1] >= 0
      tmp$=tmp$,RB5[1] Using "-$$$#.####"," Mark Up "
    end if
    If RBL1[0] = 2 If RB5[1] < 0 
      tmp$=tmp$,RB5[1] Using "-$$$#.####"," Discount "
    end if
    If RBL1[0] = 3 !!!!!!!!!!!!
      tmp$=tmp$,"Flat cost",fdel$
    end if
	if rbl1[0]=4 ! no of or desc
		tmp$=tmp$,"standard",fdel$
	Endif
    IF RBL1[0] = 1 Or RBL1[0] = 2 ! or rbl1[0]=4
		select case rbl1[1]
			case 1  
				let tmp$=tmp$,"of BASE cost",fdel$
			case 2  
				let tmp$=tmp$,"of loaded cost",fdel$!!!FIELD TYPE 1
			case 3  
			let tmp$=tmp$,"of last cost",fdel$
			case 4 
				let  tmp$=tmp$,"of rebated cost",fdel$
			case 5 
				let tmp$=tmp$,"of redi cost",fdel$
			case else
				tmp$=tmp$,fdel$
		end select
    End if
    COMD=0
    call addtostr(e$,rstr$,tmp$+rdel$)	
  END IF 
END IF
If V9[1] > V9[3] Gosub PRINT_HEADER
IF NUMCUST=-1 LET CT$[7]="       ";NUMCUST=1
If CT$[7,8] = "PT" Let PT = CT$[9,11] \ Mat Read #11,PT,0;PT$; \ Goto L_2470 
CUST_CODE = CT$[7,12]
If CT$[7,8] <> "PT" Gosub GET_CUSTOMER
L_2470: Gosub PRINT_CONTR_AND_CUST
numcust=numcust+1
Goto CUST_SEARCH
END_CUST_SEARCH: Rem
Return 

CALC_PRICE: Rem CALC WHATEVER ON SINGLE ITEM
If RB[0] > 0 If RB[0] < 4 Goto L_2520
PRICE = 0;MARK = 0
Return 
L_2520: Rem IF FIXED GIVE MARKUP, ELSE GIVE PRICE
If RB[0] = 3 Goto L_2600
If P9$[32,32] = "Y" And W3[16] Let BASEX = W3[16] Else Let BASEX = B[10]
Goto GET_PERCENT
Return 
BASEX = C4[4] \ If WHSE And W3[18] Let BASEX = W3[18]
Goto GET_PERCENT
BASEX = B[8] \ If WHSE And W3[17] Let BASEX = W3[17]
Goto GET_PERCENT
BASEX = B[10] \ If WHSE And W3[16] Let BASEX = W3[16]
Goto GET_PERCENT
BASEX = A[RB[1] + 16] \ If WHSE And W3[RB[1] + 15] Let BASEX = W3[RB[1] + 15]
Goto GET_PERCENT
BASEX = RB5[2] \ Goto GET_PERCENT
BASEX = RB5[1] \ Goto GET_PERCENT
Return 
L_2600: Rem FIXED - CALC MARKUP ON PROD LOAD
BASEX = B[8] \ If WHSE And W3[17] Let BASEX = W3[17]
If BASEX <= 0 Let BASEX = 0
PRICE = HOLD - BASEX
MARK = 0
If BASEX Let MARK = FNR(PRICE * 100 / BASEX)
Return 
GET_PERCENT: Rem NOW PERCENT WHATEVER
RBCOST = 0 \ If BASEX <= 0 Let BASEX = 0
If RB[0] = 1 Let RBCOST = (BASEX * ((100 - RB5[0]) / 100))
If RB[0] = 2
  CNVTA = BASEX;CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2
  Gosub UNIT_CONVERT
  CNVTA = (AMOUNT - RB5[0]);CNVTU[0] = RBUM[0];CNVTU[1] = 0;CNVTU[2] = 2
  Gosub UNIT_CONVERT \ RBCOST = AMOUNT
End If 
END_GET_PERCENT: Rem
Return 
LOAD_DFLT: Rem LOAD DEFAULT
X$ = "ERR!"
If UNT = 8 Let X$ = "STK"
If UNT = 9 Let X$ = "SELL"
If UNT = 10 Let X$ = "PURH"
If UNT = 11 Let X$ = "COST"
If UNT = 12 Let X$ = "PRCE"
END_LOAD_DFLT: Rem
Return 
CALC_COST: Rem "============================= calculate rebate special cost
If RBL1[0] = 3 Or RBL1[0] = 4 Return 
If RBL1[1] = 1 Let BASEX = C4[4] \ If WHSE And W3[18] Let BASEX = W3[18]
If RBL1[1] = 2 Let BASEX = B[8] \ If WHSE And W3[17] Let BASEX = W3[17]
If RBL1[1] = 3 Let BASEX = B[10] \ If WHSE And W3[16] Let BASEX = W3[16]
If RBL1[1] = 4 Let BASEX = RBCOST
If rbl1[1] = 5 Let BASEX = pf_load2 \ IF WHSE AND W3[14] LET BASEX=W3[14] 
If RBL1[0] = 1
  RBSLCOST = BASEX * ((100 + RB5[1]) / 100)
  CNVTA = RBSLCOST;CNVTU[0] = 0;CNVTU[1] = RBUM[1];CNVTU[2] = 2
  If RB[0] = 3 And RBL1[1] = 4 Let CNVTU[0] = RBUM[0]
  Gosub UNIT_CONVERT \ RBSLCOST = AMOUNT
End If 
If RBL1[0] = 2
  CNVTA = BASEX;CNVTU[0] = 0;CNVTU[1] = RBUM[1];CNVTU[2] = 2
  If RB[0] = 3 And RBL1[1] = 4 Let CNVTU[0] = RBUM[0]
  Gosub UNIT_CONVERT \ RBSLCOST = AMOUNT + RB5[1]
End If 
Return 
GET_CUSTOMER: Rem "================================================== get customer
J2$ = " ",J2$ \ J2$ = CUST_CODE Using "######"
A1$[31] = "*** NOT FOUND ***"
Search #3,2,1;J2$,R3,E
!!If E > 1 Gosub ERR_SEARCH
If E = 1 Goto END_GET_CUSTOMER
Mat Read #3,R3;A1$;
END_GET_CUSTOMER: Rem
Return 
L_3200: Rem CHECK FOR DUPE IN SPCPRICE
If Not(PDUP) Return 
J4$ = " ",J4$;J4$[1,6] = RB1[0] Using "######"
L_3210: Search #5,3,3;J4$,R9,E \ If E Return 
X2 = J4$[1,6] \ If X2 <> RB1[0] Return 
CHK$ = K1$;CHK$[1,6] = J4$[7,12];CHK$[19] = ""
Search #2,2,1;CHK$,R6,E
If Not(E) Let DUPE = 99
Goto L_3210
L_3500: Rem "================================================== get product
A$ = " ",A$
If ALLPROD Let A$[9] = "-- ALL PRODUCTS -- " \ Return 
If COMDY Goto L_3600
If SIZE_ Goto L_3700
if GRP goto L_3750:
J2$ = " ",J2$ \ J2$ = RB$
A$[9] = "*** NOT FOUND ***";a$[63]="MISSING";a$[140]=RB$
Search #4,2,1;J2$,R4,E !!\ If E > 1 Gosub ERR_SEARCH
If E = 1 Let FLG = 1
If E = 1 Goto L_3590
WHSE = 0
Mat Read #4,R4;A$;
Mat Read #4,R4,156;B;
Mat Read #4,R4,256;A;
Mat Read #4,R4,620;LM;
Mat Read #4,R4,596;PRPARC;
Mat Read #4,R4,938;PF_LOAD2;
Mat Read #4,R4,512;PFU1;
Mat Read #4,R4,554;PFU2;
Mat Read #4,R4,894;C4;
If P9$[32,32] = "Y" Gosub L_3800
If P9$[32,32] = "Y" Gosub L_69000
L_3590: Return 
L_3600: Rem READ COMDY
If Not(COMDY) Return 
J2$ = " ",J2$ \ J2$ = RB$
A$[9] = "*** COMDY NOT ON FILE ";a$[63]="MISSING";a$[140]=RB$
Search #8,2,1;J2$,R4,E
If E = 1 Return 
!!If E > 1 Gosub ERR_SEARCH
Mat Read #8,R4,0;DESC$;
A$[9] = DESC$;a$[63]="COMMODITY"
Return 
L_3700: Rem READ SIZE
If Not(SIZE_) Return 
UNT = RB$[6,9]
If UNT Read #7,UNT;CCD$; Else Let CCD$ = " ",CCD$;CCD$[11,14] = "N/A "
A$[9] = CCD$[1,10];a$[63]="SIZE"
Return
L_3750: ! cost group
if NOT(GRP) return
A$=" ",A$;a$[9]="COST GROUP";a$[63]="CST GRP"
IF NOT(CGRP) RETURN ! NO FILE FOUND?!
LET J2$=" ",J2$ \ LET J2$=RB$
LET A$[9]="*** COST GROUP NOT ON FILE ";a$[63]="MISSING";a$[140]=RB$
SEARCH #13,2,1;J2$,R4,E
IF E=1 RETURN 
!!IF E>1 GOSUB Err_Search:
MAT  READ #13,R4,12;CGPD$;
LET A$[9]=CGPD$
LET A$[63]="COST GROUP PRICING"
RETURN
L_3800: Rem GET PRODWHSE
K6$ = " ",K6$;K6$ = A$[140,151];WHSE = RBWH
If WHSE <= 0 Let WHSE = 1
K6$[13,14] = WHSE Using "##"
Search #6,2,1;K6$,R6,E !!\ If E > 1 Gosub ERR_SEARCH
If E Goto L_3850
Mat Read #6,R6,38;W2;
Mat Read #6,R6,78;W3;
Mat Read #6,R6,384;WHPARC;
Mat Read #6,R6,800;WHMISC;
Mat Read #6,R6,842;WHLM;
Return 
L_3850: Rem NOT FOUND
For I = 0 To 24
  W3[I] = 0
Next I
WHSE = 0
Return 

GET_VENDOR: Rem FIND VENDOR
If V9[1] > V9[3] Gosub PRINT_HEADER
K10$ = " ",K10$
K10$[1,6] = RB1[1] Using "######"
Search #10,2,1;K10$,R10,E
If E
  VEN$[1,30] = "VENDOR NOT ON FILE !!!        "
Else 
  Mat Read #10,R10,0;VEN$
End If 
IF NOT(J8) 
  Print #0; Using "VENDOR ######   "; Tab 10;RB1[1];VEN$[1,30]!!!!!
end if
V9[1] = V9[1] + 1
IF NOT(J8) 
  Print #0; Tab 8;"CONTRACT ";J4$[1,6];"   ";RCN$[41,70];
  PRINT #0; "   VENDOR'S CONTRACT ";VENDCNT$[1,20];"   ";vendcnt$[21,50]
end if

V9[1] = V9[1] + 1
If D = 3 Let T6$[1,6] = K1$[7,12];T6$[7] = ""
If D = 1 Let T6$[1,6] = K1$[1,6];T6$[7] = ""
END_GET_VENDOR: Rem
Return 
PRINT_DETAIL_LINE: Rem "========================= detail line
IF J8  !
  tmp$=TMP2$
  !!tmp$=CUST_CODE Using "######",fdel$ !!!CUST CODE
  !!tmp$=tmp$,A1$[31,60],fdel$  !!!CUST NAME 
  !!tmp$=tmp$,RB1[1] Using "######",fdel$!! 
  !!tmp$=tmp$,rtrim$(VEN$[1,30]),fdel$!! VENDOR NAME
  !!tmp$=tmp$,RB1[0] Using "######",fdel$!! CONTRACT
  !!tmp$=tmp$,rtrim$(RCN$[41,70]),fdel$!! NAME 1
ELSE
  Print #0; Using "######";RB1[0];!! CONTRACT
END IF!!!
IF J8!!
  If DUPE tmp$=tmp$," ** DUPLICATE **",fdel$
ELSE
  If DUPE Print #0; Tab 8;" ** DUPLICATE **";!
END IF
IF J8  !!
  if PCUST=0
    tmp$=RB1[1] Using "######",fdel$!!  !!VENDOR CODE
    tmp$=tmp$,rtrim$(VEN$[1,30]),fdel$!! VENDOR NAME
    tmp$=tmp$,RB1[0] Using "######",fdel$!! CONTRACT
    tmp$=tmp$,rtrim$(RCN$[41,70]),fdel$!! NAME 1
	tmp$=tmp$,rtrim$(VENDCNT$[1,20]),fdel$,rtrim$(vendcnt$[21,50]),fdel$!!vendor cont name and desc
  end if

  If Not(FLG) tmp$=tmp$,RB$[1,12],fdel$ \ Goto L_5035 !!ITEM CODE
ELSE
  If Not(FLG) Print #0; Tab 26;RB$[1,12]; \ Goto L_5035 !!ITEM CODE
END IF!!!
IF J8 !
  If ALLPROD  tmp$=tmp$,"ALL PRODUCTS",fdel$ \ Goto L_5035 !!
  If COMDY  tmp$=tmp$,"*COMDY ",RB$[1,4],fdel$ \ Goto L_5035 !!
  If SIZE_  tmp$=tmp$,"*SIZE ",fdel$,RB$[1,4],fdel$ \ Goto L_5035!
  IF GRP tmp$=tmp$,"-CGRP ",RB$[1,11],fdel$ \ Goto L_5035 !!
  let tmp$=tmp$,rb$[1,12],fdel$ ! missing prod
ELSE
  If ALLPROD Print #0; Tab 26;"ALL PRODUCTS";!
  If COMDY Print #0; Tab 26;"*COMDY ";RB$[1,4];" ";!
  If SIZE_ Print #0; Tab 26;"*SIZE ";RB$[1,4];"  ";!
  IF GRP PRINT #0; TAB 26;"-";RB$[1,11];
END IF
L_5035:

IF J8 !
  tmp$=tmp$,A$[9,38],fdel$!!DESCRIPTION_1
ELSE
  Print #0; Tab 39;A$[9,36];!!DESCRIPTION_1
END IF  !!!

If RB1[2]
  IF J8 !
    tmp1$=X$[1,8],fdel$ !!START CANCEL
  ELSE
    Print #0; Tab 69;X$[1,8]; !!START CANCEL
  END IF  !!
Else 
  IF J8 !
    tmp1$=tmp1$,"NONE",fdel$!!START CANCEL
  ELSE
    Print #0; Tab 71;"NONE";!!START CANCEL
  END IF!!!
END IF

If RB[0] = 3
  IF J8 !
    tmp1$=tmp1$, RBCOST Using PMASK$,fdel$  !!FACTOR
  ELSE
    Print #0; Using PMASK$; Tab 78;RBCOST;  !!FACTOR
  END IF!!!!
END IF
IF J8 !
  If RB[0] = 1 tmp1$=tmp1$,RB5[0] Using "###.###%",fdel$  
  If RB[0] = 2 tmp1$=tmp1$,RB5[0] Using "-$$#.#### / ",fdel$
ELSE
  If RB[0] = 1 Print #0; Using "###.###%"; Tab 79;RB5[0];  
  If RB[0] = 2 Print #0; Using "-$$#.#### / "; Tab 79;RB5[0];!!
END IF
IF J8 !
  tmp1$=tmp1$,PUM$,fdel$!!REBATE UM
ELSE
  Print #0; Tab 92;PUM$;!!REBATE UM
END IF!!!

If RBL1[0] <> 4 If RBSLCOST 
  IF J8!
    tmp1$=tmp1$,RBSLCOST Using PMASK$,fdel$  !!COST
  ELSE 
   Print #0; Using PMASK$; Tab 108;RBSLCOST;  !!COST
  END IF !!
ELSE
  tmp1$=tmp1$," ",fdel$  !!COST
END IF


IF J8 !
  If RBL1[0] = 4 tmp1$=tmp1$,"use standard",fdel$ ! ,fdel$
ELSE
  If RBL1[0] = 4 Print #0; Tab 108;"use standard";
END IF

If RBL1[0] <> 4 
  IF J8!
    tmp1$=tmp1$,CUM$,fdel$ !!UM
  ELSE
    Print #0; Tab 119;CUM$; !!UM
  END IF!!!
END IF
IF J8 !
  V9[1] = V9[1] + 1
  if rtrim$(a$[63,90])="" let a$[63,90]="  "
  tmp$=tmp$,A$[63,90],fdel$!!DESCRIPTION 2
  tmp$=tmp$,TMP1$
ELSE
  Print #0;"" \ V9[1] = V9[1] + 1
  Print #0; Tab 39;A$[63,90];!!DESCRIPTION 2
END IF!!!

X2 = RB1[4] \ Gosub L_7700

If RB1[4] 
  IF J8!!
    tmp$=tmp$,X$[1,8],fdel$
  ELSE
    Print #0; Tab 69;X$[1,8];
  END IF!!!!
Else 
  IF J8 !
    tmp$=tmp$,"NONE",fdel$ !!DATE
  ELSE
    Print #0; Tab 71;"NONE"; !!DATE
  END IF
END IF
Gosub L_8000
If RBL1[0] = 1 If RB5[1] >= 0 
  IF J8!
    tmp$=tmp$,RB5[1] Using "###.###%"," Mark Up "
  ELSE
    Print #0; Using "###.###%"; Tab 109;RB5[1];" Mark Up ";
  END IF !!!!
END IF
If RBL1[0] = 1 If RB5[1] < 0 
  IF J8!!
    tmp$=tmp$,RB5[1] Using "###.###%"," Discount "
  ELSE
    Print #0; Using "###.###%"; Tab 109;RB5[1];" Discount ";
  END IF !!!
END IF
If RBL1[0] = 2 If RB5[1] >= 0
  IF J8!
    tmp$=tmp$,RB5[1] Using "-$$$#.####"," Mark Up "!!COST ,TYPE COST
  ELSE
    Print #0; Using "-$$$#.####"; Tab 109;RB5[1];" Mark Up ";!!COST ,TYPE COST
  END IF!!!
END IF
If RBL1[0] = 2 If RB5[1] < 0 
  IF J8 !
    tmp$=tmp$,RB5[1] Using "-$$$#.####"," Discount "
  ELSE
    Print #0; Using "-$$$#.####"; Tab 109;RB5[1];" Discount ";
  END IF !!!	
END IF

If RBL1[0] = 3 !
  IF J8 !
    tmp$=tmp$,"Flat cost",fdel$
  ELSE
    Print #0; Tab 109;"Flat cost";
  END IF  !!!
END IF
if rbl1[0]=4 ! standard
	if j8$ let tmp$=tmp$,"standard",fdel$
Endif
if not(j8) Print #0;"" 
V9[1] = V9[1] + 1
If RBL1[0] = 1 Or RBL1[0] = 2 ! or rbl1[0]=4
		select case rbl1[1]
			case 1  
				IF J8!
				     tmp$=tmp$,"of BASE cost",fdel$
				ELSE
					Print #0; Tab 109;"of base cost";
				END IF!!!
			case 2  
				if j8
					let tmp$=tmp$,"of loaded cost",fdel$!!!FIELD TYPE 1
				else
					Print #0; Tab 109;"of loaded cost";!!!FIELD TYPE 1
				endif
			case 3  
				if j8
					let tmp$=tmp$,"of last cost",fdel$
				else
					Print #0; Tab 109;"of last cost";
				endif
			case 4 
				if j8
					let  tmp$=tmp$,"of rebated cost",fdel$
				else
					Print #0; Tab 109;"of rebated cost";
				endif
			case 5 
				if j8
					let tmp$=tmp$,"of redi cost",fdel$
				else
					Print #0; Tab 109;"of redi cost";
				endif
			case else
				if j8 then tmp$=tmp$,fdel$
		end select               
END IF
  IF J8 !
    call addtostr(e$,rstr$,tmp$+rdel$)	
	COMD=0
  END IF!!!

Goto L_5245
If RB[0] = 3 Goto L_5225
if not(j8) Print #0; Tab 92;"PRICE=";
X2 = RB1[4] \ Gosub L_7820 \ X2 = 0
JWDATE = X2


If RB1[4] If JWDATE < CURJDATE if not(j8) Print #0; Tab 98;"EXPIRED"; 
Goto L_5220
If PRICE if not(j8) Print #0; Using PMASK$; Tab 98;PRICE;
If Not(PRICE) if not(j8) Print #0; Tab 100;"NOT AVL";

L_5220: Goto L_5245
L_5225: 
If MARK if not(j8) Print #0; Using "----#.##"; Tab 110;MARK;"% LOAD MARK";
If MARK > 0 if not(j8) Print #0;"UP";
If MARK < 0  if not(j8) Print #0;"DN";
If Not(MARK) if not(j8) Print #0; Tab 112;" N/A";
L_5245: if not(j8) Print #0;"" 
V9[1] = V9[1] + 1
if not(j8) Print #0;"" 
V9[1] = V9[1] + 1
RCTR = RCTR + 1
RBCOST = 0;RBSLCOST = 0
Return 
PRINT_CONTR_AND_CUST: Rem "============ print contract/customer
if not(j8) Print #0;CT$[1,6];

If CT$[7,8] <> "PT"
  IF NOT(J8)
    Print #0; Using "######"; Tab 8;CUST_CODE;!!!!!!!!!!!
    Print #0; Tab 15;A1$[31,60];
  ELSE !
	tmp$=RB1[1] Using "######",fdel$!! !! VENDOR CODE
    tmp$=tmp$,rtrim$(VEN$[1,30]),fdel$ !!!VENDOR NAME
	tmp$=tmp$,RB1[0] Using "######",fdel$!! CONTRACT CODE
	tmp$=tmp$,rtrim$(RCN$[41,70]),fdel$!! CONTRACT NAME
	tmp$=tmp$,rtrim$(VENDCNT$[1,20]),fdel$,rtrim$(vendcnt$[21,50]),fdel$!!vendor cont name and desc
	tmp$=tmp$,CUST_CODE Using "######",fdel$!!!CUST CODE
	tmp$=tmp$,A1$[31,60],fdel$   !!CUST NAME
	COMD=1
	TMP2$=tmp$
    !
  END IF
End If 
If CT$[7,8] = "PT" 
  IF J8 
	tmp$=RB1[1] Using "######",fdel$!! !! VENDOR CODE
    tmp$=tmp$,rtrim$(VEN$[1,30]),fdel$ !!!VENDOR NAME
	tmp$=tmp$,RB1[0] Using "######",fdel$!! CONTRACT CODE
    tmp$=tmp$,rtrim$(RCN$[41,70]),fdel$!! CONTRACT NAME
	tmp$=tmp$,rtrim$(VENDCNT$[1,20]),fdel$,rtrim$(vendcnt$[21,50]),fdel$!!vendor cont name and desc
    tmp$=tmp$,"Price type ",CT$[9,11],fdel$,"DESC: ",PT$,fdel$ !
	tmp2$=tmp$
  ELSE
    Print #0; Tab 8;"Price type ";CT$[9,11];" ";PT$; !
  END IF
END IF
IF NOT(J8) Print #0;"" 
V9[1] = V9[1] + 1
END_PRINT_CONTR_AND_CUST: Rem
Return 
PRINT_HEADER: Rem "============================================== heading
!!If V9[0] If PRINT_TO_SCREEN Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(PRINT_TO_SCREEN) IF NOT(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
If Not(PRINT_TO_SCREEN) Print #0;""
T9$ = "" \ Call Time(T9$)
IF NOT(J8)
  Print #0; Tab 10;J8$; Tab int((132 - Len(J1$)) / 2);J1$; Tab 120;"PAGE ";V9[0]
  Print #0;" - 088 - ";T9$;
  Print #0; Tab 46;"R E B A T E    C O N T R A C T    L I S T";
END IF 
X2 = EXDAT \ Gosub L_7700
IF NOT(J8)
  If PEXP = 2 Print #0; Tab 88;"  - EXPIRED CONTRACTS AS OF",X$;
  IF PEXP=3 PRINT #0; TAB 88;"  - ACTIVE CONTRACTS AS OF",X$;
  IF PEXP=4 PRINT #0; TAB 88;"  - ACTIVE CONTRACTS ABOUT TO EXPIRE AS OF",X$;
  Print #0;""
  Print #0; Tab 70;"START"
  Print #0; Tab 2;"CONTRACT"; Tab 26;ITEM_LAB$;
  Print #0; Tab 39;"DESCRIPTION"; Tab 70;"CANCEL";
  Print #0; Tab 81;"FACTOR"; Tab 93;"REBATE";
  Print #0; Tab 110;"SLSM"; Tab 118;"COST"
  Print #0;
  Print #0; Tab 2;" Number"; Tab 71;"DATE"; Tab 82;"TYPE";
  Print #0; Tab 94;"UM"; Tab 108;"COST/COMM"; Tab 119;"UM";
  Print #0;
  Print #0;""
END IF

END_PRINT_HEADER: Rem
Return 
GET_UM: Rem "============================= convert from rec # um to 4 char. text
If FLG Gosub LOAD_DFLT \ Return 
If UNT = -1 Let X$ = "CWT " \ Goto END_GET_UM
If UNT = -2 Let X$ = "LOT " \ Goto END_GET_UM
If UNT = -3 Let X$ = "LB  " \ Goto END_GET_UM
If UNT Read #7,UNT;CCD$; Else Let CCD$ = " ",CCD$;CCD$[11,14] = "N/A "
X$ = CCD$[11,14]
END_GET_UM: Rem
Return 
UNIT_CONVERT: Rem "============================================== unit convert rtn
If FLG Let AMOUNT = CNVTA \ Return 
Gosub L_20000
END_UNIT_CONVERT: Rem
Return 


END_DISPLAY_SCREEN: Rem
L_7600:!! Print @0,22;'CR BR BD'; Tab (37 - Len(J7$) / 2);'ED';"  ";
if not (j8) Print J7$;"  ";'BD'; Tab 77;'ER ED RB'; \ Signal 3,20
!!Print @0,23;'CL'; 
Return 
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
D6 = X$
Call DateToJulian(1,X$,X$,E) !!\ If E Gosub ERR_SEARCH
X2 = X$[1,5]
CURJDATE = X2
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "

X2 = X$[1,6] \ Return 

L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 

X2 = X$[1,5] \ Return 1

DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem PRICE TYPE
On RB[0] Goto L_8020,L_8030,L_8040
Return 
On RB[1] - 10 Goto L_8160
L_8020:
IF J8!!
  tmp$=tmp$,"DISCOUNT",fdel$
ELSE
  Print #0; Tab 78;"DISCOUNT";
END IF!!
Return 
L_8030: 
IF J8!!
  tmp$=tmp$,"$ DISCOUNT",fdel$
ELSE
  Print #0; Tab 78;"$ DISCOUNT";
END IF!!!
Return 
L_8040: 
IF J8!!
  tmp$=tmp$,"PRICE",fdel$
ELSE
  Print #0; Tab 78;"PRICE";
END IF!!

Return 

If RB5[0] = 0 Print #0; Using "BRACKET ## "; Tab 78;RB[1];
If RB5[0] > 0 Print #0; Using "MARKUP OF BRACKET ##"; Tab 78;RB[1];
If RB5[0] < 0 Print #0; Using "MARKDOWN  OF BRACKET ##"; Tab 78;RB[1];
Return 
If RB5[0] = 0 Print #0; Using "## BRKT JMP"; Tab 78;RB[1];
If RB5[0] > 0 Print #0; Using "MARKUP ## BRKT JMP"; Tab 78;RB[1];
If RB5[0] < 0 Print #0; Using "MARKDOWN ## BRKT JMP"; Tab 78;RB[1];
Return 
Print #0; Using "BREAK LEVEL JUMP ## LEVELS"; Tab 78;RB[1];
Return 
If RB[0] = 4 Or RB[0] = 5 Return 
On RB[1] Goto L_8110,L_8120,L_8130,L_8140,L_8140,L_8140,L_8140,L_8140,L_8140,L_8150
On RB[1] - 10 Goto L_8160,L_8170
Return 
L_8110: Print #0; Tab 90;"OF BASE";
Return 
L_8120: Print #0; Tab 90;"OF LOADED";
Return 
L_8130: Print #0; Tab 90;"OF LAST";
Return 
L_8140: Print #0; Using "OF LIST #"; Tab 90;RB[1] - 3;
Return 
L_8150: Print #0; Tab 90;"OF SP. CST";
Return 
L_8160: Print #0; Tab 90;"SLSM CST";
Return 
L_8170: Print #0; Tab 90;"CALC. PRICE ";
Return 
LBL$ = " ",LBL$
If BRL1[1] = 1 Let LBL$ = "ACC/NO BRK"
If BRL1[1] = 2 Let LBL$ = "ACC/BRK"
If BRL1[1] = 3 Let LBL$ = "NO ACC/NO BRK"
If BRL1[1] = 4 Let LBL$ = "NO ACC/BRK"
Return 
!!!OUTEND 
END_OF_RANGE: Rem " end of this range
!!Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL';
!!Input ""J$
If RCTR = 0 Goto END_END_OF_RANGE
END_END_OF_RANGE: Rem
Goto OUTEND

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120!!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG !!\ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
!
OUTEND: Rem EXIT PROGRAM
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section

!External Lib "libgeneral.lib"
!Declare External Sub XMLtoExcel
!Call XMLtoExcel(e$,"tcw_text.txt",rstr$)

  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK


!
include "src/callmainerrnet.inc"
End 