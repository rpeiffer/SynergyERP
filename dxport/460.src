! >>> Program 460
!
! description  Commission Purge
!
! loadsave -w -n 100,10 -o prog/dxport/460.dl4 src/460.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem MX460
Rem ** SALESMAN COMMISSION UPDATE **
Rem U.B.S.
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 24, 2010  12:20:07
Rem /w2/papermaster/r2005//usr/acct/rgp/work/custom/xrev9/mx460.src (univ2) [rgp] {48308}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function AddToMYReports
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate,programdump,FindF
Option Default Dialect IRIS1


try ! main try
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim F$[16],V$[31],V1$[31],V2$[31],V2_2$[31],L$[132],V3$[31],K11$[31],K11_2$[31],K5$[50]
Dim 2%,X2,V1,E,V3,R[23]
Dim 2%,S1[3],S3[1],3%,S2[1],1%,S4[1],S$[30]
Dim I$[8],M$[13],M1$[5],P$[8],D8$[80],1%,L9,K,P9
Dim K2$[40],K3$[40],J$[40],J7$[50],J9$[50],X$[10],SMAT$[2],U5$[50],J4$[50]
Dim 3%,T[3],T1[3],S6[1],S7[2],HistS7[1],TT,COID
Dim 2%,N1,N2,N3,N4,X2,J3,J4,J7[2],X1,S80,S81,A2[4]
Dim 2%,DT3[1],JDATE[1],JWDATE,3%,CS9[3],COMMSRVCHG
Dim 3%,OCS1[3],SplitPercent
Dim K12$[30],K12_2$[32]
Dim 1%,AS1[3],AS4[1],SplitFlag,SplitType
Dim 2%,R12,AS2[1],Division
Dim 3%,AS3[5],AORIGCOMM,AS5[6],x3[9]
Dim SOURCE$[10],AS_$[60],custom_Customer$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[200],webstr$[200],message$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[20]	  \ Blank$=" ",Blank$
dim EndParam$[20] \ EndParam$="z",EndParam$
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128]
!
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) * 100)+ .5) / 100))
! call dxopen() ! for dxtest/standalone
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!X2 = IntCo ! Spc(5)
!F$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
!TT = Spc(5) \ COID = Int((TT - Int(TT / 16384) * 16384) / 64)
COID=Intco
returnstatus=0
Gosub L_7900 ! curr date
PURGEDATE = X2
X2 = 0
For K1 = 2 To 6
  Read K2
  If K2 = -1 Goto L_825
  Read #1,88,K2;F$;
  Open #K1,F$
L_825: Next K1
Data "2240","1824","-1","1504","1408"
Open #11,"4/sslsmcommh" + Str$(COID)
Open #12,"4/commaudit" + Str$(COID)
Open #13,"4/commaudith" + Str$(COID)
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
!Print 'CS'
!Print @0,0;"-MX460-";@25,0;"SALESMAN COMMISSION UPDATE";
!Print @0,3;"THIS PROGRAM CLEARS THE SALESMAN COMMISSION RECORDS USED TO DETERMINE"
!Print "SALESMAN COMMISSIONS.  BE SURE THAT THE SALESMAN COMMISSION REPORT"
!Print "AND AUDIT LIST HAVE BEEN RUN FIRST, AND ARE CORRECT!!!"

message$="";eflg=0
L_900: Rem GET RANGES
ARCODE = 0
L_906: !Print @0,7;"ENTER AR MONTH TO PURGE OR <CR> FOR DATE RANGE,   E: EXIT  : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
Call dxget("AMNTH",tmp$) \ k2$=RTrim$(tmp$)
If K2$ = "" Goto L_915
ARCODE = K2$
If ARCODE < 1 Or ARCODE > 12 ! Goto L_906
	eflg=eflg+1;message$="Invalid Month (1-12)"
Endif
Goto L_990 ! bypass range as its a MONTH
L_915: Rem
!Print @0,7;"ENTER STARTING DATE (MMDDYY), <CR> FOR FIRST, E: EXIT : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
call dxget("SDATE",tmp$) \ k2$=RTrim$(tmp$)
If K2$ = "" Let K2$ = "010170"
J9$ = K2$ \ Gosub L_7250 \ goto L_940 ! Goto L_900 ! continue for all
X$ = J$ \ Gosub L_7800 \ N1 = X2
X2 = N1 \ Gosub L_7820 \ X=E ! Goto L_915
if e
	eflg=eflg+1;Message$=Message$+" INVALID DATE 1"
Endif
JDATE[0] = X2 ! \ Print @56,7;'CL';J$
L_940: Rem
!Print @0,8;"ENTER ENDING   DATE (MMDDYY), <CR> FOR LAST,  E: EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
call dxget("EDATE",tmp$) \ k3$=RTrim$(tmp$)
If K3$ = "" Let K3$ = "123159"
J9$ = K3$ \ Gosub L_7250 \ goto L_990 ! Goto L_940
X$ = J$ \ Gosub L_7800 \ N2 = X2
X2 = N2 \ Gosub L_7820 \ X=E ! Goto L_940
if e
	eflg=eflg+1;Message$=Message$+" INVALID DATE 2"
Endif
JDATE[1] = X2 !\ Print @56,8;'CL';J$
If JDATE[0] <= JDATE[1] Goto L_990
!J7$ = "INVALID RANGE" \ Gosub L_7600 \ Goto L_900
Eflg=Eflg+1;message$=" Invalid Date Range"
L_990: Rem
L_1000: Rem ***** INPUT SALESMAN RANGE == BWB == 4/9/87
N3 = 0 \ N4 = 0
!Print @0,10;"ENTER STARTING SLSM #, <CR> FOR FIRST, E: EXIT: ";'CE';
!Input ""K2$
!If K2$ = "E" Goto OUTEND
call dxget("SSLSM",tmp$) \ k2$=RTrim$(tmp$)
N3 = K2$
K2$ = " ",K2$
K2$[1,3] = N3 Using "###"
!Print @48,10;'CL';K2$[1,3]
!Print @0,11;"ENTER ENDING   SLSM #, <CR> FOR LAST,  E: EXIT: ";'CL';
!Input ""K3$
call dxget("ESLSM",tmp$) \ k3$=RTrim$(tmp$)
If K3$ = "" Let N4 = 999 !\ Goto L_1104
!If K3$ = "E" Goto OUTEND
N4 = K3$
K3$ = " ",K3$
L_1104: K3$ = N4 Using "###"
!Print @48,11;'CL';K3$[1,3]
If N3 <= N4 Goto L_1450
!J7$ = "INVALID RANGE" \ Gosub L_7600 \ Goto L_1000
eflg=eflg+1;Message$=message$+" Invalid Salesperson Range"
L_1450: !Print @0,22;'CL';"DO YOU WISH TO PURGE THESE RANGES? (YES,N) ";
!Input ""F$
!Call String(1,F$)
!If F$ = "N" Goto OUTEND
!If F$ <> "YES" Goto L_1450
!Print @0,22;'CL';"NOW PURGING...PLEASE WAIT."
!Signal 3,0
if eflg ! input issues
	goto OutErr  !cannot go forward
Endif
Clear message$
message$=""
! now build status reporting file
ReportDir$ = "REPORTDIR" \ System 28,ReportDir$
BaseName1$ = "commission_purge"+dateusing$(Tim#(0),"YYMMDDHHNNSS")
StatusFile$ = ReportDir$ + "/"+BaseName1$
Call FindF(StatusFile$,tmp)
If tmp Kill StatusFile$
StatChan = 88 ! FindChannel() ! channel to build text file need fixed channel
Try Close #88 Else Rem
Try
	Build #StatChan,StatusFile$ As "TEXT"
Else
	returnstatus=1
	let message$=messaGE$+"Error in Building Status File "
	goto outerr
end TRY
Try Close #StatChan Else Rem
Try
	Open #StatChan,StatusFile$
else
	returnstatus=1
	let message$=message$+"Error in Opening Status File "
	goto outerr:
end TRY
Print #StatChan;"Purge Process Started..."
! PAUSE 20
x3 = AddToMYReports(BaseName1$) 
if x3<0
	message$=message$+"Error adding to my reports!" 
	returnstatus=1
	goto outerr:
endif
! send message as we're going for it
returnstatus=0 ! or is it 1?
message$="Please check under My Reports "+basename1$+" for status and completion"
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)
V2$ = " ",V2$
V2$ = K2$
L_2000: Search #2,3,1;V2$,V1,E
	If E = 2 Goto L_8900
	If E error 11000
	R[2] = V1
	Mat Read #2,R[2];S1;
	Mat Read #2,R[2],16;S2;
	Mat Read #2,R[2],28;S3;
	Mat Read #2,R[2],36;S4;
	Mat Read #2,R[2],40;S6;
	Mat Read #2,R[2],52;SMAT$;
	Mat Read #2,R[2],54;S7;
	Mat Read #2,R[2],72;CS9;
	!if custom_customer$="HTBERRY" ! no longer custom
		mat  read #2,r[2],100;commsrvchg;
	!Endif
	Mat Read #2,R[2],112;OCS1;
	mat Read #2,R[2],136;SplitFlag;
	mat Read #2,R[2],138;SplitType;
	mat Read #2,R[2],140;Division;
	If S4[1] <> 1 Goto L_2000
	L_2100: If ARCODE If S4[0] <> ARCODE Goto L_2000
	X2 = S1[3] \ Gosub L_7820 \ X2 = 0
	JWDATE = X2
	If Not(ARCODE) If JWDATE < JDATE[0] Goto L_2000
	If Not(ARCODE) If JWDATE > JDATE[1] Goto L_2000
	If S1[0] < N3 Goto L_2000
	If S1[0] > N4 Goto L_2000
	If Not(Fra(NO_PUR / 100)) ! show status Print @30,22;'CL';NO_PUR
		Print #StatChan;"Purged ";Str$(NO_PUR);" Key: ";V2$
	Endif
	NO_PUR = NO_PUR + 1
	Gosub UPDATE_COMMHIST
	Gosub UPDATE_COMMAUDITHIST
	V1 = R[2]
	Search #2,5,1;V2$,V1,E
	If E error 11000
	V2_2$ = " ",V2_2$
	V2_2$[1,4] = Division using "####"
	V2_2$[5,7] = S1[0] Using "###"
	V2_2$[8,17] = S7[1] Using "##########"
	V2_2$[18,18] = V2$[14,14]
	Search #2,5,2;V2_2$,V1,E
	If E error 11000
	E = 3
	Search #2,1,0;V2$,V1,E
	If E error 11000
Goto L_2000
L_7250: Rem CHECK DATES
If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
J7[0] = J9$[1,2] \ J7[1] = J9$[3,4] \ J7[2] = J9$[5,6]
If J7[1] = 0 Goto L_7325
On J7 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
On J7 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
Goto L_7325
L_7285: If J7[1] > 30 Goto L_7325
L_7290: If J7[1] > 31 Goto L_7325
Goto L_7315
L_7300: If J7[1] > 29 Goto L_7325
If Not(Fra(J7[2] / 4)) Goto L_7315
If J7[1] > 28 Goto L_7325
L_7315: J4 = J7[2] * 10 ^ 4 + J7 * 10 ^ 2 + J7[1] \ X2 = J4 \ Gosub L_7700
J$ = X$ \ J3 = 8 \ Goto L_7345
L_7325: ! J7$ = "INVALID DATE !" \ Gosub L_7600 \ Return 
eflg=eflg+1;message$=message$+" Invalid Date Entered"
Return ! will fail it
L_7345: J$[J3 + 1] = "" \ Return 1
L_7600:! Print @0,22;'CR BR BD'; Tab (37 - Len(J7$) / 2);'ED';"  ";
!Print J7$;"  ";'BD'; Tab 77;'ER ED RB'; \ Signal 3,20
!Print @0,23;'CL'; \ Return 
Return
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
UPDATE_COMMHIST: Rem"cct158506 store the record to slsm comm history file
Gosub GET_ARPAIDDATE
S81 = PURGEDATE
S80 = A2[1]
HistS7[0] = s7[0]
HistS7[1] = s7[1]
SplitPercent = s7[2]
K11$ = " ",K11$
K11$ = V2$
Search #11,2,1;K11$,R11,E \ If Not(E) Return 
E = 2 \ Search #11,1,0;K11$,R11,E \ If E error 11000
Search #11,4,1;K11$,R11,E \ If E error 11000
K11_2$ = " ",K11_2$
k11_2$[1,4] = Division using "####"
k11_2$[5,7] = S1[0] Using "###"
k11_2$[8,17] = HistS7[1] Using "##########"
k11_2$[18,18] = K11$[14,14]
Search #11,4,2;K11_2$,R11,E \ If E error 11000
Mat Write #11,R11;S1;
Mat Write #11,R11,16;S2;
Mat Write #11,R11,28;S3;
Mat Write #11,R11,36;S4;
Mat Write #11,R11,40;S6;
Mat Write #11,R11,52;SMAT$;
Mat Write #11,R11,54;HistS7;
Write #11,R11,68;S80;
Mat Write #11,R11,72;CS9;
Write #11,R11,96;S81;
!if custom_customer$="HTBERRY" ! no longer custom
	mat write #11,r11,100;commsrvchg;
!Endif
Mat Write #11,R11,112;OCS1;
mat Write #11,R11,136;SplitFlag;
mat Write #11,R11,138;SplitType;
mat Write #11,R11,140;SplitPercent;
mat Write #11,R11,146;Division;
Return 
UPDATE_COMMAUDITHIST: Rem
K12$ = " ",K12$
K12$[1,13] = V2$[1,13]
PCA_LOOP: Rem
Search #12,3,1;K12$,R12,E \ If E > 2 error 11000
If E Goto END_PCA_LOOP
If K12$[1,13] <> V2$[1,13] Goto END_PCA_LOOP
If K12$[26,26] <> V2$[14,14] Goto PCA_LOOP
Mat Read #12,R12,0;AS1;
Mat Read #12,R12,8;AS2;
Mat Read #12,R12,16;AS3;
Mat Read #12,R12,52;SOURCE$;
Mat Read #12,R12,62;AS_$;
Mat Read #12,R12,122;AORIGCOMM;
Mat Read #12,R12,128;AS4;
Mat Read #12,R12,132;AS5;
K12_2$ = " ",K12_2$
K12_2$[1,6] = AS2[0] Using "######"
K12_2$[7,29] = K12$[4,26]
K12_2$[30,32] = k12$[1,3]
E = 2 \ Search #13,1,0;K2$,R13,E
If E error 11000
Search #13,4,1;K12$,R13,E \ If E error 11000
Search #13,4,2;K12_2$,R13,E \ If E error 11000
Mat Write #13,R13,0;AS1;
Mat Write #13,R13,8;AS2;
Mat Write #13,R13,16;AS3;
Mat Write #13,R13,52;SOURCE$;
Mat Write #13,R13,62;AS_$;
Mat Write #13,R13,122;AORIGCOMM;
Mat Write #13,R13,128;AS4;
Mat Write #13,R13,132;AS5;
Search #12,5,1;K12$,R12,E \ If E error 11000
Search #12,5,2;K12_2$,R12,E \ If E error 11000
E = 3 \ Search #12,1,0;K12$,R12,E
If E error 11000
Goto PCA_LOOP
END_PCA_LOOP: Rem
Return 
GET_ARPAIDDATE: Rem"cct158506 get the ar paid date
K5$ = " ",K5$ \ K5$ = S3[1] Using "######"
If S7 Let K5$[7] = S7 Using "##########" Else Let K5$[7] = S7[1] Using "##########"
K5$[17] = V2$[14]
Search #5,2,1;K5$,R5,E
If E Goto L_3500
Mat Read #5,R5;A2;
L_3500: Rem NOT FOUND SO MUST BE PAID
Search #6,2,1;K5$,R6,E \ If E > 1 error 11000
If Not(E)
  Mat Read #6,R6;A2;
Else 
  A2[1] = 0
End If 
Return 
L_7900: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto L_7940
Next K1
L_7940: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
E=1 ! fail
if x2<=0 return
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return
e=0 ! no fail
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8900: Rem
!Print @0,22;'CE';"NUMBER PURGED=";NO_PUR
!Print @0,23;'CL';"PRESS <CR> TO EXIT   ";
!Input ""J$
Message$="Complete. Number Purged= "+Str$(No_Pur)
Print #StatChan;Message$
try close #StatChan Else Rem
Goto OUTEND
OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
End

OutErr: ! send back message
returnstatus=1 ! always on blockid errors
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End
!
else ! main try
	if StatChan
		PRINT #StatChan;"FATAL ERROR OCCURED - DUMP WILL BE CREATED - CONTACT UNIVERSAL BUSINESS SYSTEMS!"
	end if
	include "src/callmainerrnet.inc"
End Try 
!
