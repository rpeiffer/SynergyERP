! >>> Program 626
!
! description G/L, Detail Income Statement 
!
! loadsave -w -n 100,10 -o prog/dxport/626.dl4 src/626.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 24, 2006  12:22:11
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/ap/gl626.src (univ2) [mary] {22414}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem  GL626 - INCOME STATEMENT WITH FINANCIAL CONTROLS
Rem   UNIVERSAL BUSINESS SYSTEMS, INC.
Rem   LAST UPDATE: 06/92 MTG
!
Declare Intrinsic Sub FindF,InpBuf,String,getglobals
! - Option Default Dialect IRIS1
Com 2%,CLIENT,1%,SSF

!!If Err 0 Gosub ERR_ESCAPE
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
dim blockid$[8]
Dim A$[60],A1$[36],B1$[139],B6$[168],B7$[168],C1$[10]
Dim REPTYPE$[1],PERIOD$[4],CP1$[4],CP2$[4],PP1$[4],PP2$[4]
Dim KEYDEPT$[30],fye$[4]
Dim D$[30],F$[16],F9$[2],M$[15],N$[4],P$[30],MASK$[8],PTRNM$[50],groupid$[1]
Dim K$[50],K2$[10],K3$[20],K4$[20],K5$[20],K6$[10],K7$[20],K9$[50]
Dim SUSP$[12],T$[10],T1$[10],T2$[10],T9$[10],V$[12],2%
dim 1%,archhist
Dim 1%,D5,E,F9[1],FIRSTPR,I,I9,L,L9,P,S1[1],S9[5]
Dim 2%,B1,C1[2],C9[6],D6[1],G8[3],N,P1[2],R[9],T[10],V1,W,X,X3
Dim 2%,PLEN,P6[1],VDATE!!!
Dim 2%,CPER[1],PPER[1],COMP,SUPRZ,PRTACCT,CMPAR
Dim 4%,D3
Dim 4%,T0[14],T9[10,14]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[100],tmp3$[100],tmp4$[100],tmp5$[100],tmp6$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	

dim custom_customer$[30]

Rem {end dim.rtn.input}
M$ = "----,---,--#.##"
!
!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
!J9 = 55 \ If J8 Let J9 = 18
!
If Err 0 Gosub ERR_TRAP
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
!!If J8 If J8 <> 49 Goto ERR_ESCAPE
J9 = 60 \ If J8 Let J9 = 24
!!If Not(J8)
!!
!!  PTRNM$ = Chf$(800)
!!  Search PTRNM$,"ub/sys",E
!!  If Not(E)
!!    Print 'CS';"-gl626-"; Tab 23;"INCOME STATEMENT";
!!L_245: 
!!    SSF = 0 \ Print @0,23;'CL';"Report in spreadsheet format (Y/N) "; \ Input Len (16384 + 1);""J$
!!    Call String(1,J$)
!!    If J$ = "Y" Let SSF = 99 \ Goto L_250
!!    If J$ <> "N" Goto L_245
!!  End If 
!!End If 
!
!    call dxopen() ! needed? 
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Mat Read #ctlc,115,60;custom_customer$;           
custom_customer$ = UCase$(Trim$(custom_customer$))
!
!
Call getglobals("blockx",0,blockid$)
!open #9,"6/sortwork066"
! blockid$="6262"

if blockid$="626" ! validate 1st screen

	call dxget("U_PRTACCT",tmp$) \ if rtrim$(tmp$) = "" Let PRTACCT = 0 else Let PRTACCT = 99 !!print general ledger account numbers (Y/N)
	call dxget("U_REPTYPE",REPTYPE$)  !!Report Type:  D=Detail,  S=Summary
	Mat Read #1,51,6;S9;
	Mat Read #1,51,94;archhist;
	tmp1$="N"\d6=0
	if s9[2]<>0 ! department validate
		call dxget("U_PRINTDEPT",tmp1$) !!PRINT BY DEPARTMENT
		if rtrim$(tmp1$)="Y"
			call dxget("U_DEPT",tmp$) \ D6 = tmp$ !!PRINT BY DEPARTMENT
			if d6<=0 or d6>99
				let e$="Invalid Department Entered For Print By Department"
				error 10000
			endif
		endif
		if rtrim$(tmp1$)="R"
			call dxget("U_BASE",tmp$) 
			if rtrim$(tmp$) <> "" 
				let e$="Print base option is invalid on Department Range" 
				error 10000
			endif
		endif
	endif
	if prtacct=99 ! print account #
		if reptype$="S"
			let e$="Printing Account Numbers is an invalid option when Printing Report in Summary"
			error 10000
		endif
		if tmp1$="R" 
			let e$="Printing Account Numbers is an invalid option when Printing Department Range"
			error 10000
		endif
	endif
	if s9[0]<>0
		call dxget("U_CLIENT",tmp$) \ W = tmp$ !!CLIENT
		if w<1 or w>9999
			let e$="Invalid Client Number Entered"
			error 10000
		endif
	else
		w=1
	endif
	Call dxget("u_group",groupid$)             
	If RTrim$(groupid$) = "" Let groupid$ = "0"
	C1$[1,1] = intco Using "#" \ C1$[2,2] = groupid$
	F$ = "1/ACF",C1$[1,2]!!!jesu
	Call FindF(F$,B1) \ If Not(B1) let e$="File ",F$," not found!!!" \ error 10000
	Ropen #2,F$
	K2$ = " ",K2$ \ K2$ = W Using "######"
	Search #2,2,1;K2$,R[2],E  \ If E let e$ = "Client not on file!!!" \ error 10000
	Mat Read #2,R[2],0;B1$;
	CLIENT = W
	L9 = B1$[135,136]
	If L9 > 9 Let F9$ = L9 Using "##"
	If L9 < 10 Let F9$ = L9 Using "#"
	N$ = W Using "####"
	For I = 1 To 4
		 If N$[I,I] = " " Let N$[I,I] = "."
	Next I
	!F$ = F9$,"/GLM",C1$[1,2],N$
	!Call FindF(F$,B1) \ If Not(B1) e$ = "File ",F$," not found " \ error 10000
	!Ropen #3,F$
	if archhist<>0
		Call dxget("U_ARCHHIST",tmp$)
		if rtrim$(tmp$)=""
			Call dxget("U_ARCHYR",tmp$)
			if rtrim$(tmp$)<>""
				let e$ = "Invalid Archive Year Entered" \ error 10000
			endif
			F$ = F9$,"/GLM",C1$[1,2],N$
			let archhist=0
		else
			Call dxget("U_ARCHYR",tmp$)
			if rtrim$(tmp$)=""
				let e$ = "Invalid Archive Year Entered" \ error 10000
			endif
			let tmp3=tmp$
			if tmp3<0 or tmp3>99
				let e$ = "Invalid Archive Year Entered" \ error 10000
			endif
			let fye$[1,2]=".."
			let fye$[3,4]=tmp3 using "&&"
			F$ = F9$,"/GLM",C1$[1,2],N$,fye$
		endif
	else
		F$ = F9$,"/GLM",C1$[1,2],N$
	endif
	Call FindF(F$,B1)
	If Not(B1) 
		if archHist<>0
			e$ = "Archived File ",F$," not found " \ error 10000
		else
			e$ = "File ",F$," not found " \ error 10000
		endif
	ENDIF
	Ropen #3,F$
	If S9[1]
		F$ = F9$,"/GLB",C1$[1,2],N$
		if archhist<>0
			F$ = F9$,"/GLB",C1$[1,2],N$,fye$
		endif
		Call FindF(F$,B1)
		If Not(B1)
			S9[1] = 0
		Else 
			Ropen #4,F$
		End If 
	End If 
	K3$ = " ",K3$
	Search #3,2,1;K3$,R[3],E 
	if e<>0
		e$="GL Master Control Record Not Set-up for Client "+str$(client)
		error 10000
	endif
	Mat Read #3,R[3],70;D3;
	D5 = (Fra(D3 / 100)) * 100
	If D5 <> 14 If D5 <> 39 Let D5 = 39
	Dim 4%,A3[D5],A4[D5],2%
	Mat Read #3,R[3],70;A3;
	If S9[1] ! BUDGETS
		
		K4$ = " ",K4$
		Search #4,2,1;K4$,R[4],E 
		if e <>0
			let e$="Budget Master Control Record Not Set-Up for Client "+str$(client)
			error 10000
		endif
		Mat Read #4,R[4],70;A4;
		For X = 1 To D5
			If A3[X] <> A4[X]
				 goto valacper: 
			 End If 
		Next X
	End If ! open acf --- validate the client 
	valacper: ! validate accounting periods
	call dxget("U_SCPER",tmp$) \ CPER[0] = tmp$ !!Starting Current Accounting Period (MMYY)
	if cper[0]<0100 or cper[0]>1299
		let e$="Invalid Starting Current Accounting Period"
		error 10000
	endif
	tmp$ = CPER[0] Using "&&&&" \ PERIOD$ = tmp$[3,4],tmp$[1,2]\cper[0]=period$
	Gosub VERIFYPERIOD 
	If errflag
		e$ = "Invalid starting current accounting period"
 		error 10000
	End if    
	call dxget("U_ECPER",tmp$) \ CPER[1] = tmp$ !!Ending Current Account Period (MMYY)
	if cper[1]<0100 or cper[1]>1299
		let e$="Invalid Ending Current Accounting Period"
		error 10000
	endif
	C1[0] = X1 \ C1[1] = X3 
	tmp$ = CPER[1] Using "&&&&" \ PERIOD$ = tmp$[3,4],tmp$[1,2] \cper[1]=period$
	Gosub VERIFYPERIOD 
	If errflag
		e$ = "Invalid ending current accounting period"
 		error 10000
	End if 
	If X3 <> C1[1] Let e$ = "Accounting periods must be in same fiscal year!" \ error 10000
	If CPER[0] > CPER[1]
		Let  e$ = "Invalid ending date, must be >= starting date!" \ error 10000
	endif
	call dxget("U_CMPAR",tmp$) \ if rtrim$(tmp$) = "" Let CMPAR = 0 else Let CMPAR = 99
	if cmpar<>0
		call dxget("U_SPERIOD",tmp$) \ PPER[0] = tmp$ !!Starting Prior Accounting Period (MMYY)
		if pper[0]<0100 or pper[0]>1299
			let e$="Invalid Starting Prior Accounting Period"
			error 10000
		endif
		tmp$ = PPER[0] Using "&&&&" \ PERIOD$ = tmp$[3,4],tmp$[1,2] \pper[0]=period$
		Gosub VERIFYPERIOD 
		If errflag
			e$ = "Invalid starting prior accounting period"
 			error 10000
		End if    
		call dxget("U_EPERIOD",tmp$) \ PPER[1] = tmp$ !!Ending Prior Accounting Period (MMYY)
		if pper[1]<0100 or pper[1]>1299
			let e$="Invalid Ending Prior Accounting Period"
			error 10000
		endif
		 P1[0] = X1 \ P1[1] = X3 \ PP1$ = PPER[0] Using "&&&&"
		tmp$ = PPER[1] Using "&&&&" \ PERIOD$ = tmp$[3,4],tmp$[1,2] \pper[1]=period$
		Gosub VERIFYPERIOD 
		If errflag
			e$ = "Invalid starting prior accounting period"
 			error 10000
		End if 
		!validations starting & ending prior accounting period
		If X3 <> P1[1] Let e$ = "Accounting periods must be in same fiscal year!" \ error 10000
		P1[2] = X1 \ If PPER[0] > PPER[1] Let e$ = "Invalid ending prior accounting period!" \ error 10000
		
	endif
	! verify departments
	IF S9[2]<>0 AND D6<>0
		 Read #1,88,128;J$;
		 ropen #6,j$
		K6$ = " ",K6$ \ K6$[1,4] = W Using "####" \ K6$[5,6] = D6 Using "##"
		Search #6,2,1;K6$,R[6],E 
		If E Let e$ = "Department not found!" \ error 10000
	endif
	! verify profit centers
	If S9[3] ! profit centers
		call dxget("U_PROFITBYCENTER",tmp2$) \ if rtrim$(tmp2$) = "" let tmp2$ = "N"
		if rtrim$(tmp2$)="Y"
			call dxget("U_PROFITCENTER",tmp$) \ P6 = tmp$
			if p6<=0 or p6>9999
				let e$="Invalid Profit Center Entered "
				error 10000
			endif
			J$ = intco Using "1/GLPCTR#" \ Ropen #7,J$
			PLEN = S9[5] - S9[4] + 1 \ If PLEN < 1 Let PLEN = 1
			MASK$[1,PLEN] = "#",MASK$[1,PLEN]
			K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
			Search #7,2,1;K7$,R[7],E 
			If E<>0
				let e$ = "Profit center not found" \ error 10000
			endif
		endif	
	endif ! profit centers
endif ! validate the first screen


If blockid$ = "626"
	Call dxget("U_printdept",tmp$) !R indicates can enter dept # per column on next page
	if tmp$="R"
		call dxget("U_BASE",tmp$) 
		if tmp$ <> "" 
			let e$="Print base option is invalid on Department Range" 
			error 10000
		endif
		Call env(2,"NEXTBLOCK","626R")
	else
		call dxget("U_BASE",tmp$) 
		if tmp$ <> "" 	
			Call env(2,"NEXTBLOCK","6262")
		else
			Call env(2,"NEXTBLOCK","6261")
		endif
	endif
	Call setoutput(e$,rstr$,1) 
	End
End If
!
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"626",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
L = 99 \ S1 = 1 \ A$ = " ",A$ \ D6 = 0 \ P6 = 0 \ OCMPAR = CMPAR
SELALL = 99
Mat Read #1,51,6;S9;
Mat Read #1,51,94;archhist;
call dxget("U_BASE",tmp$) 
if tmp$ <> "" 
	If S9[2]<>0 ! departments
		call dxget("U_PRINTDEPT",tmp6$) \ if tmp6$ = ""  let tmp6$ = "N"
		IF TMP6$="R"
			let e$="Print base % is invalid on Department Range" \ error 10000
		endif
	endif
	chain "626a.dl4" !with base
endif
call dxget("U_SSF",tmp$) \ if tmp$ = "" Let SSF = 0 else Let SSF = 99 !!Report in spreadsheet format (Y/N)
call dxget("U_CLIENT",tmp$) \ W = tmp$
call dxget("U_PRINTDEPT",tmp6$) \ if tmp6$ = ""  let tmp6$ = "N"
IF TMP6$="R" CHAIN "626b.dl4" !RANGE
call dxget("U_DEPT",tmp$) \ D6 = tmp$
call dxget("U_PROFITBYCENTER",tmp2$) \ if tmp2$ = "" let tmp2$ = "N"
call dxget("U_PROFITCENTER",tmp$) \ P6 = tmp$
call dxget("U_SCPER",tmp$) \ CPER[0] = tmp$ !!Starting Current Accounting Period (MMYY)
call dxget("U_ECPER",tmp$) \ CPER[1] = tmp$ !!Ending Current Account Period (MMYY)
call dxget("U_CMPAR",tmp$) \ if tmp$ = "" Let CMPAR = 0 else Let CMPAR = 99 !!Do you want to print comparative acct period data 
call dxget("U_SPERIOD",tmp$) \ PPER[0] = tmp$ !!Starting Prior Accounting Period (MMYY)
call dxget("U_EPERIOD",tmp$) \ PPER[1] = tmp$ !!Ending Prior Accounting Period (MMYY)
call dxget("U_REPTYPE",REPTYPE$) 
call dxget("U_PRTACCT",tmp$) \ if tmp$ = "Y" let PRTACCT = 1 else  PRTACCT = 0
call dxget("U_SUPRZ",tmp$) \ if tmp$ = "Y" let SUPRZ = 1 else  SUPRZ = 0
call dxset("U_SSF","")
call dxset("U_CLIENT","")
call dxset("U_PRINTDEPT","")
call dxset("U_DEPT","")
call dxset("U_PROFITBYCENTER","")
call dxset("U_PROFITCENTER","")
call dxset("U_SCPER","")
call dxset("U_ECPER","")
call dxset("U_CMPAR","")
call dxset("U_SPERIOD","")
call dxset("U_EPERIOD","")
call dxset("U_REPTYPE","")
call dxset("U_PRTACCT","")
call dxset("U_SUPRZ","")
!!columns
call dxget("COL1",tmp$) \ C9[1] = tmp$  !!col 1
call dxget("COL2",tmp$) \ C9[2] = tmp$  !!col 2
call dxget("COL3",tmp$) \ C9[3] = tmp$  !!col 3
call dxget("COL4",tmp$) \ C9[4] = tmp$  !!col 4
call dxget("COL5",tmp$) \ C9[5] = tmp$  !!col 5
call dxget("COL6",tmp$) \ C9[6] = tmp$  !!col 6





If Not(J8)
  PTRNM$ = Chf$(800)
  Search PTRNM$,"ub/sys",E !!Report in spreadsheet format
  ! If E SSF = 0 
End If 

If SSF Let M$ = "-----------#.##"
Mat Read #1,51,6;S9;
!!G8[0] = Spc(5) \ G8[1] = Int(G8[0] / 16384)
!!G8[2] = Int((G8[0] - G8[1] * 16384) / 64) \ G8[3] = G8[0] - (G8[1] * 16384 + G8[2] * 64)
!!C1$[1,1] = G8[2] Using "#" \ C1$[2,2] = G8[3] Using "#"
G8[0] = intCO \ G8[1] = Int(G8[0] / 16384)
G8[2] = Int((G8[0] - G8[1] * 16384) / 64) \ G8[3] = G8[0] - (G8[1] * 16384 + G8[2] * 64)
Call dxget("u_group",groupid$)             
If RTrim$(groupid$) = "" Let groupid$ = "0"
g8[3]=intco ! company #
g8[2]=groupid$
C1$[1,1] = G8[3] Using "#" \ C1$[2,2] = G8[2] Using "#"

F$ = "1/ACF",C1$[1,2]
Call FindF(F$,B1) \ If Not(B1) let e$="File ",F$," not found!!!" \ error 10000
Ropen #2,F$
!validations client
If Not(S9) Let W = 1 
K2$ = " ",K2$ \ K2$ = W Using "######"
Search #2,2,1;K2$,R[2],E  \ If E let e$ = "Client not on file!!!" \ error 10000
Mat Read #2,R[2],0;B1$;
CLIENT = W
L9 = B1$[135,136]
If L9 > 9 Let F9$ = L9 Using "##"
If L9 < 10 Let F9$ = L9 Using "#"
N$ = W Using "####"
For I = 1 To 4
  If N$[I,I] = " " Let N$[I,I] = "."
Next I
!
!F$ = F9$,"/GLM",C1$[1,2],N$
!Call FindF(F$,B1)
!If Not(B1) Let e$ = "File ",F$," not found!" \ error 10000
if archhist<>0
	Call dxget("U_ARCHHIST",tmp$)
	if rtrim$(tmp$)=""
		Call dxget("U_ARCHYR",tmp$)
		if rtrim$(tmp$)<>""
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		F$ = F9$,"/GLM",C1$[1,2],N$
		let archhist=0
	else
		Call dxget("U_ARCHYR",tmp$)
		if rtrim$(tmp$)=""
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		let tmp3=tmp$
		if tmp3<0 or tmp3>99
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		let fye$[1,2]=".."
		let fye$[3,4]=tmp3 using "&&"
		F$ = F9$,"/GLM",C1$[1,2],N$,fye$
	endif
else
	F$ = F9$,"/GLM",C1$[1,2],N$
endif
Call FindF(F$,B1)
If Not(B1) 
	if archist<>0
		e$ = "Archived File ",F$," not found " \ error 10000
	else
		e$ = "File ",F$," not found " \ error 10000
	endif
endif
Ropen #3,F$
If S9[1] ! BUDGET INFORMATION
  F$ = F9$,"/GLB",C1$[1,2],N$
  if archhist<>0
	F$ = F9$,"/GLB",C1$[1,2],N$,fye$
  endif
  Call FindF(F$,B1)
  If Not(B1)
    S9[1] = 0
  Else 
    Ropen #4,F$
  End If 
End If 
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E 
Mat Read #3,R[3],70;D3;
D5 = (Fra(D3 / 100)) * 100
If D5 <> 14 If D5 <> 39 Let D5 = 39
Dim 4%,A3[D5],A4[D5],2%
Mat Read #3,R[3],70;A3;
If S9[1] 
  K4$ = " ",K4$
  Search #4,2,1;K4$,R[4],E 
  Mat Read #4,R[4],70;A4;
  For X = 1 To D5
    If A3[X] <> A4[X] ! 
		for ctr=1 to 6! CHECK IF ANY COLUMNS goto OPENFILES
			if c9[ctr]>6 and c9[ctr]<15
				let e$="GL MASTER DATES DO NOT AGREE WITH GL BUDGET" \ error 10000
			endif
		next ctr
	endif
	Next X
End If 
!!!
OPENFILES: Rem open data files
!!X2 = Spc(5)
X2 = intCO
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
!J$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
comp=intco
J$ = (comp) Using "CNTRL#"
For X2 = 5 To 6
  Read R
  If Not(R) Goto L_890
  Read #1,88,R;J$;
  Ropen #X2,J$
L_890: Next X2
Data " 192"," 128"
If S9[3] ! profit centers
  J$ = COMP Using "1/GLPCTR#" \ Ropen #7,J$
  PLEN = S9[5] - S9[4] + 1 \ If PLEN < 1 Let PLEN = 1
  MASK$[1,PLEN] = "#",MASK$[1,PLEN]
End If
!!!
If Err 0 Gosub ERR_TRAP
If S9[2] ! departments
  KEYDEPT$ = CLIENT Using "####" \ Search #6,3,1;KEYDEPT$,R[6],E
  If E = 2 Goto GETPROFCENTER
  X = KEYDEPT$[1,4]
  If X = CLIENT
    If tmp6$ = "N" let D6 = 0 \ Goto GETPROFCENTER!!
    If CLIENT = 99 And ( tmp6$ = "Y") Gosub GETDEPTGL!!!
    If D6
      K6$ = " ",K6$ \ K6$[1,4] = W Using "####" \ K6$[5,6] = D6 Using "##"
      Search #6,2,1;K6$,R[6],E \ If E let e$ = "Department not found" \ error 10000
      Mat Read #6,R[6],8;D$; 
    End if
  End If 
Else 
  D6 = 0
End If 
GETPROFCENTER:
If S9[3] ! profit centers
  If tmp2$ = "Y" 
    If P6 
      K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
      Search #7,2,1;K7$,R[7],E \ If E let e$ = "Profit center not found" \ error 10000
      Mat Read #7,R[7],8;P$;
    End if
  Else
    P6 = 0
  End if
Else 
  P6 = 0
End If 
!!!validations starting accounts period
tmp1$ = CPER[0] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ CPER[0] = PERIOD$
Gosub VERIFYPERIOD 
If errflag
  e$ = "Invalid starting accounting period"
  if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
  error 10000
End if 
C1[0] = X1 \ C1[1] = X3 \ CP1$ = CPER[0] Using "&&&&"
!!
!!!validations ending accounts period
tmp1$ = CPER[1] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ CPER[1] = PERIOD$
Gosub VERIFYPERIOD
If errflag
  e$ = "Invalid ending accounting period"
  if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
  error 10000
End if
If X3 <> C1[1]  let e$ = "Accounting Periods Must Be in Same Fiscal Year" \ error 10000
C1[2] = X1
If CPER[0] > CPER[1]let e$ = "Ending Current Accounting Period Must Be Greater Than Starting" \ error 10000
CP2$ = CPER[1] Using "&&&&"
!
if CMPAR 
  !!!!!!validations starting prior period
  tmp1$ = PPER[0] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ PPER[0] = PERIOD$
  Gosub VERIFYPERIOD
  If errflag
    e$ = "Invalid starting prior accounting period"
    if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
    error 10000
  End if
  P1[0] = X1 \ P1[1] = X3 \ PP1$ = PPER[0] Using "&&&&"
  !!!Ending Prior Account Period (YYMM)
  tmp1$ = PPER[1] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ PPER[1] = PERIOD$
  Gosub VERIFYPERIOD
  If errflag
    e$ = "Invalid ending prior accounting period"
    if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
    error 10000
  End if    
  !validations starting & ending prior accounting period
  If X3 <> P1[1] Let e$ = "Accounting periods must be in same fiscal year!" \ error 10000
  P1[2] = X1 \ If PPER[0] > PPER[1] Let e$ = "Invalid ending prior accounting period!" \ error 10000
  PP2$ = PPER[1] Using "&&&&"
End if
!!!report type 
If REPTYPE$ = "S" let PRTACCT = 0
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call env(2,"NEXTBLOCK","626") !special go back to 626 page
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
! 
! - Print 'CS';"-gl626-"; Tab 23;"DETAIL INCOME STATEMENT";
! - L_251: 
! - Print @0,23;'CL';"PRINT REPORT WITH BASE ACCOUNT % (Y/N)  E: end "; \ Input Len (16384 + 1);""J$
! - Call String(1,J$)
! - If J$ = "Y" Chain "GL626A"
! - If J$ = "E" Goto OUTEND
! - If J$ <> "N" Goto L_251
!!If SSF Let M$ = "-----------#.##"

!Mat Read #1,51,6;S9;
!G8[0] = Spc(5) \ G8[1] = Int(G8[0] / 16384)
!G8[2] = Int((G8[0] - G8[1] * 16384) / 64) \ G8[3] = G8[0] - (G8[1] * 16384 + G8[2] * 64)
!C1$[1,1] = G8[2] Using "#" \ C1$[2,2] = G8[3] Using "#"
!F$ = "1/ACF",C1$[1,2]
!Call FindF(F$,B1)
!If Not(B1)
!  Print @0,23;'CL RB';"FILE ";F$," NOT FOUND!!!"; \ Signal 3,50 \ Goto OUTEND
!End If 
!Ropen #2,F$
L_465: !!Print 'CS';"-gl626-"; Tab 23;"INCOME STATEMENT";
!!If Not(S9) Let W = 1 \ Goto L_495
L_475: Rem enter client number
!!Print @0,1;'CL';"CLIENT # ";
!!Input Len (16384 + 4);""J$
!!Call String(1,J$)
!!If J$ = "" Goto OUTEND
!!If J$ = "E" Goto OUTEND
!!W = J$
L_495: !!K2$ = " ",K2$ \ K2$ = W Using "######"
!!Search #2,2,1;K2$,R[2],E !!\ If E > 1 Gosub ERR_SEARCH
!If E
!  Print @0,23;'CL RB';"CLIENT NOT ON FILE!!!"; \ Signal 3,30
!  Print @0,23;'CL RB'; \ Goto L_475
!End If 
!!Mat Read #2,R[2],0;B$;
!!Print Using "####  ";@0,1;'CL';"CLIENT #";@10,1;W;B$[11,50];
!!CLIENT = W
!!If S9
!!L_535:!! Print @0,23;'CL';"IS THIS THE CORRECT CLIENT (Y/N) ";
  !!Input Len (16384 + 1);""J$
  !!Call String(1,J$)
  !!If J$ = "N" Goto L_465
  !!If J$ <> "Y" Goto L_535
!!End If 
!!Print @0,23;'CL';
!L9 = B$[135,136]
!If L9 > 9 Let F9$ = L9 Using "##"
!If L9 < 10 Let F9$ = L9 Using "#"
!N$ = W Using "####"
!For I = 1 To 4
!  If N$[I,I] = " " Let N$[I,I] = "."
!Next I
!F$ = F9$,"/GLM",C1$[1,2],N$
!Call FindF(F$,B1)
!If Not(B1)
!  Print @0,23;'CL RB';"FILE ";F$;" NOT FOUND "; \ Signal 3,50 \ Goto OUTEND
!End If 
!Ropen #3,F$
!If S9[1] ! BUDGET INFORMATION
!  F$ = F9$,"/GLB",C1$[1,2],N$
!  Call FindF(F$,B1)
!  If Not(B1)
!    S9[1] = 0
!  Else 
!    Ropen #4,F$
!  End If 
!End If 
!K3$ = " ",K3$
!Search #3,2,1;K3$,R[3],E !!\ If E Gosub ERR_SEARCH
!Mat Read #3,R[3],70;D3;
!D5 = (Fra(D3 / 100)) * 100
!If D5 <> 14 If D5 <> 39 Let D5 = 39
!Dim 4%,A3[D5],A4[D5],2%
!Mat Read #3,R[3],70;A3;
!If S9[1] ! BUDGET
!  K4$ = " ",K4$
!  Search #4,2,1;K4$,R[4],E !!\ If E Gosub ERR_SEARCH
!  Mat Read #4,R[4],70;A4;
!  For X = 1 To D5
!    If A3[X] <> A4[X]
!      Print @0,23;'CL RB';"G/L MASTER DATES DO NOT AGREE WITH G/L BUDGET";
!      Signal 3,40 \ Goto OPENFILES
!    End If 
!  Next X
!End If 
!OPENFILES: Rem open data files
!X2 = Spc(5)
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
!J$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
!For X2 = 5 To 6
!  Read R
!  If Not(R) Goto L_890
!  Read #1,88,R;J$;
!  Ropen #X2,J$
!L_890: Next X2
!Data " 192"," 128"
!If S9[3] ! profit centers
!  J$ = COMP Using "1/GLPCTR#" \ Ropen #7,J$
!  PLEN = S9[5] - S9[4] + 1 \ If PLEN < 1 Let PLEN = 1
!  MASK$[1,PLEN] = "#",MASK$[1,PLEN]
!End If

L_1000: Rem PRINT SELECTION OPTIONS
!!L = 99 \ S1 = 1 \ A$ = " ",A$ \ D6 = 0
!!Print 'CS';"-gl626-"; Tab 23;"INCOME STATEMENT";
!!Print Using "####  ";'CL';@0,1;"CLIENT #";@10,1;W;B$[11,50];
!!If S9[2] ! departments
  !!KEYDEPT$ = CLIENT Using "####" \ Search #6,3,1;KEYDEPT$,R[6],E
  !!If E = 2 Goto GETPROFCENTER
  !!If E If E <> 2 Gosub ERR_SEARCH
  !!X = KEYDEPT$[1,4]
!  If X = CLIENT
!L_1025: 
!    ! - Print @0,23;'CL';"PRINT BY DEPARTMENT (Y/N),  R: for range, OR E: end ";
!    Print @0,23;'CL';"PRINT BY DEPARTMENT (Y/N) OR E: end ";
!    Input Len (16384 + 1);""J$
!    Call String(1,J$)
!    If J$ = "E" Goto OUTEND
!    If J$ = "N" Goto GETPROFCENTER
!    If CLIENT = 99 And (J$ = "R" Or J$ = "Y") Gosub GETDEPTGL
!    ! - If J$ = "R" Chain "GL626B"
!    If J$ <> "Y" Goto L_1025
!L_1050: Print @0,2;"DEPARTMENT "; \ Input Len (16384 + 2);""J$
!    If Len(J$) > 2 Goto L_1050
!    D6 = J$
!    If Not(D6) Goto L_1025
!    K6$ = " ",K6$ \ K6$[1,4] = W Using "####" \ K6$[5,6] = D6 Using "##"
!    Search #6,2,1;K6$,R[6],E !!\ If E > 1 Gosub ERR_SEARCH
!    If E
!      Print @0,23;'CL RB';"DEPARTMENT NOT FOUND"; \ Signal 3,20 \ Print @0,23;'CL';
!      Goto L_1050
!    End If 
!    Mat Read #6,R[6],8;D$; \ Print @30,2;'CL';D$[1,30];
!  End If 
!End If 
!!GETPROFCENTER: Rem PROFIT CENTER
!!P6 = 0
!If S9[3] ! profit centers
!L_1110: P6 = 0 \ Print @0,23;'CL';"PRINT BY PROFIT CENTER (Y/N), or  E: to end ";
!  Input Len (16384 + 1);""J$
!  Call String(1,J$)
!  If J$ = "E" Goto OUTEND
!  If J$ = "N" Goto STARTHERE
!  If J$ <> "Y" Goto L_1110
!L_1135: P6 = 0 \ Print @0,3;'CL';"PROFIT CENTER# "; \ Input Len (16384 + 8);""J$
!  P6 = J$ \ If Not(P6) Goto L_1110
!  K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
!  Search #7,2,1;K7$,R[7],E
!  !!If E > 1 Gosub ERR_SEARCH
!  If E
!    Print @0,23;'CL RB';"PROFIT CENTER NOT FOUND"; \ Signal 3,20 \ Print @0,23;'CL';
!    Goto L_1135
!  End If 
!  Mat Read #7,R[7],8;P$; \ Print @30,3;'CL';P$[1,30];
!End If 
STARTHERE: Rem start screen here
!!Gosub PRNTSCRN
!!SELECTALL: Rem to re-select all items
!!SELALL = 99
!!For OPT = 1 To 5
 !! On OPT Gosub GETCURRPERIOD,GETCOMPARE,GETREPTYPE,GETSUPPRESS,GETRPTCOL
!!Next OPT
!!SELALL = 0
!!SELOPT: Rem selection options
!!Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P:  print  E: end ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "P" Goto L_1800
!!If J$ = "R" Goto SELECTALL
!!OPT = J$
!!On OPT Gosub GETCURRPERIOD,GETCOMPARE,GETREPTYPE,GETSUPPRESS,GETRPTCOL
!!Goto SELOPT


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
L_1800: Rem start here
B6$ = " ",B6$;B7$ = " ",B7$
B6$[1,12] = "     CURRENT"
If CPER[0] = CPER[1]
  B7$[1,12] = "       MONTH"
Else 
  B7$[1,12] = "      PERIOD"
End If 
B6$[13,24] = "     CURRENT" \ B7$[13,24] = "        YEAR"
B6$[25,36] = "       PRIOR"
If PPER[0] = PPER[1]
  B7$[25,36] = "       MONTH"
Else 
  B7$[25,26] = "      PERIOD"
End If 
B6$[37,48] = "       PRIOR" \ B7$[37,48] = "        YEAR"
If PPER[0] = PPER[1] And CPER[0] = CPER[1]
  B6$[49,60] = "MTD VARIANCE"
Else 
  B6$[49,60] = "PER VARIANCE"
End If 
B7$[49,60] = "CUR TO PRIOR"
B6$[61,72] = "YTD VARIANCE" \ B7$[61,72] = "CUR TO PRIOR"
B6$[73,84] = "      BUDGET"
If CPER[0] = CPER[1]
  B7$[73,84] = " CURRENT MTD"
Else 
  B7$[73,84] = " CURRENT PER"
End If 
B6$[85,96] = "      BUDGET" \ B7$[85,96] = " CURRENT YTD"
If CPER[0] = CPER[1]
  B6$[97,108] = "  MTD BUDGET"
Else 
  B6$[97,108] = "  PER BUDGET"
End If 
B7$[97,108] = "    VARIANCE"
B6$[109,120] = "  YTD BUDGET" \ B7$[109,120] = "    VARIANCE"
B6$[121,132] = "      BUDGET"
If PPER[0] = PPER[1]
  B7$[121,132] = "   PRIOR MTD"
Else 
  B7$[121,132] = "   PRIOR PER"
End If 
B6$[133,144] = "      BUDGET" \ B7$[133,144] = "   PRIOR YTD"
If PPER[0] = PPER[1]
  B6$[145,156] = "   PRIOR MTD"
Else 
  B6$[145,156] = "   PRIOR PER"
End If 
B7$[145,156] = "  BUDGET VAR"
B6$[157,168] = "   PRIOR YTD" \ B7$[157,168] = "  BUDGET VAR"
!!Print 'CS CR';"NOW CLEARING SORT FILE........PLEASE WAIT." \ Signal 3,0
K9$ = ""
if j8  !!!head XML
  tmp$ = "CLIENT NUMBER ",fdel$
  tmp$ = tmp$, "CLIENT NAME",fdel$
  If REPTYPE$ = "D"
    If PRTACCT let tmp$ = tmp$, "CODE ",fdel$
  end if
  tmp$ = tmp$, "DESCRIPTION",fdel$
   
  If C9[1]
    tmp$ = tmp$,rtrim$(B6$[((C9[1] * 12) - 11),(C9[1] * 12)])," ", rtrim$(B7$[((C9[1] * 12) - 11),(C9[1] * 12)]),fdel$
  End If
  If C9[2]
    tmp$ = tmp$,rtrim$(B6$[((C9[2] * 12) - 11),(C9[2] * 12)])," ",rtrim$(B7$[((C9[2] * 12) - 11),(C9[2] * 12)]) ,fdel$
  End If
  If C9[3]
    tmp$ = tmp$, rtrim$(B6$[((C9[3] * 12) - 11),(C9[3] * 12)])," ", rtrim$(B7$[((C9[3] * 12) - 11),(C9[3] * 12)]),fdel$
  End If
  If C9[4]
    tmp$ = tmp$, rtrim$(B6$[((C9[4] * 12) - 11),(C9[4] * 12)])," ", rtrim$(B7$[((C9[4] * 12) - 11),(C9[4] * 12)]),fdel$
  End If
  If C9[5]
    tmp$ = tmp$,rtrim$(B6$[((C9[5] * 12) - 11),(C9[5] * 12)])," ", rtrim$(B7$[((C9[5] * 12) - 11),(C9[5] * 12)]) ,fdel$
  End If
  If C9[6]
    tmp$ = tmp$,rtrim$(B6$[((C9[6] * 12) - 11),(C9[6] * 12)])," ",rtrim$(B7$[((C9[6] * 12) - 11),(C9[6] * 12)]) ,fdel$
  End If
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if!!!
L_1815: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_1845
!!If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R[9],E !!\ If E Gosub ERR_SEARCH
Goto L_1815
L_1845: !!Print 'CR';"NOW SORTING.......PLEASE WAIT." \ Signal 3,0
For X = 0 To 10
  T[X] = 0
Next X
K3$ = " ",K3$
L_1865: Search #3,3,1;K3$,R[3],E \ If E = 2 Goto L_1950
!!If E Gosub ERR_SEARCH
Gosub L_8000
If D6 ! departments
  D6[1] = A1$[8,9] \ If D6[1] <> D6 Goto L_1865
End If 
If P6 ! profit centers
  P6[1] = A1$[S9[4],S9[5]] \ If P6[1] <> P6 Goto L_1865
End If 
If A1$[13,13] <> "0" Goto L_1865
If A1$[14,14] <> "I" And A1$[14,14] <> "E" And A1$[14,14] <> "O" And A1$[14,14] <> "R" Goto L_1865
K9$ = " ",K9$ \ K9$[1,10] = T1$[1,10]
K9$[11,19] = A1$[1,9] \ K9$[20,20] = "3"
R[9] = R[3]
Search #9,4,1;K9$,R[9],E !!\ If E Gosub ERR_SEARCH
Goto L_1865
L_1950: Rem SORT PLANDIN FILE
K5$ = ""

L_1960:

Search #5,3,1;K5$,R[5],E \ If E = 2 Goto L_2000
!!If E Gosub ERR_SEARCH
Mat Read #5,R[5],60;T2$; \ If T2$[7,7] <> "I" Goto L_1960
Mat Read #5,R[5],70;T$;
F9[1] = 0 \ If REPTYPE$ <> "S" Goto L_1980
If T$[3,3] = " " Goto L_1980
K$ = " ",K$ \ K$[1,10] = K5$[1,10]
Search #9,3,1;K$,R[9],E \ If E = 2 Goto L_1980
!!If E Gosub ERR_SEARCH
If K$[1,10] = K5$[1,10] Let F9[1] = 1
L_1980: K9$ = " ",K9$ \ K9$[1,10] = T$[1,10] \ K9$[20,20] = "5"
K9$[19,19] = F9[1] Using "#"
Search #9,4,1;K9$,R[5],E !!\ If E Gosub ERR_SEARCH
Goto L_1960
L_2000: !!Print 'CR';"NOW PRINTING....PLEASE WAIT." \ Signal 3,0
K9$ = ""
L_2050: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
If T9$ <> "" If T9$[1,10] <> K9$[1,10] Gosub L_4000
T9$[1,10] = K9$[1,10]
T = K9$[20,20]
If T = 3 Goto L_2200
R[5] = R[9]
F9 = 99
F9[1] = K9$[19,19]
If F9[1] Goto L_2140
Gosub L_8300
Gosub L_5500
F9 = 0
L_2140: For V9 = 2 To 10
  If K9$[V9,V9] = " " Let T[V9 - 1] = R[5] \ Goto L_2190
Next V9
T[10] = R[5]
L_2190: Goto L_2050
L_2200: Rem READ G/L MASTER FILE
R[3] = R[9]
Gosub L_8000
For X = 0 To 14
  T0[X] = 0
Next X
For X = C1[0] To C1[2]
  T0[1] = T0[1] + A3[X]
Next X
For X = C1[1] To C1[2]
  T0[2] = T0[2] + A3[X]
Next X
If CMPAR
  For X = P1[0] To P1[2]
    T0[3] = T0[3] + A3[X]
  Next X
  For X = P1[1] To P1[2]
    T0[4] = T0[4] + A3[X]
  Next X
  T0[5] = T0[1] - T0[3]
  T0[6] = T0[2] - T0[4]
End If 
If S9[1] ! budget on
  K4$ = " ",K4$ \ K4$[1,12] = A1$[1,12]
  Search #4,2,1;K4$,R[4],E
  !!If E > 1 Gosub ERR_SEARCH

!! IF BUDGET EXIST, READ IT, OTHERWISE ASSUME ZERO & COMPUTE-TASK#58317
  If Not(E)
    Gosub L_8100
  ELSE 
    FOR X=0 TO D5
      LET A4[X]=0
    NEXT X
  End If 
    For X = C1[0] To C1[2]
      T0[7] = T0[7] + A4[X]
    Next X
    For X = C1[1] To C1[2]
      T0[8] = T0[8] + A4[X]
    Next X
    T0[9] = T0[7] - T0[1]
    T0[10] = T0[8] - T0[2]
    If CMPAR
      For X = P1[0] To P1[2]
        T0[11] = T0[11] + A4[X]
      Next X
      For X = P1[1] To P1[2]
        T0[12] = T0[12] + A4[X]
      Next X
      T0[13] = T0[11] - T0[3]
      T0[14] = T0[12] - T0[4]
    End If 
  !! End If 
End If 
L_2400: If Not(SUPRZ) Goto L_2500
For X = 1 To 6
  If C9[X]<>0 
	If T0[C9[X]] Goto L_2500
  ENDIF
Next X
L_2425: Goto L_2050
L_2500: Rem PRINT BALANCES
If F9[1] Goto L_2520
Gosub L_5800
Gosub L_5000
L_2520: For I9 = 1 To 10
  For X = 0 To 14
    If T[I9] Let T9[I9,X] = T9[I9,X] + T0[X]
  Next X
Next I9
Goto L_2050
GETCURRPERIOD: Rem get current period  #1
!!!J0$ = "3000043205"
!!J2$ = "&&&&" \ J1 = CPER[0]
!!J5$ = "Enter Starting Current Accounting Period (YYMM)"
!!Gosub ISINPUT
!!PERIOD$ = J1 Using "&&&&"
!!Gosub VERIFYPERIOD
!!Goto GETCURRPERIOD
!!C1[0] = X1
!!C1[1] = X3
!!CPER[0] = J1
!!Print Using "&&&&";@32,5;CPER[0];
!!CP1$ = CPER[0] Using "&&&&"
GETECURRPERIOD: Rem get ending current period
!!If Not(CPER[1]) Let CPER[1] = CPER[0]
!!J0$ = "3000 45105"
!!J2$ = "&&&&" \ J1 = CPER[1]
!!J5$ = "Enter Ending Current Account Period (YYMM)"
!!Gosub ISINPUT
!!PERIOD$ = J1 Using "&&&&"
!!Gosub VERIFYPERIOD
!!Goto GETECURRPERIOD
!!If X3 <> C1[1] ! crossed fiscal year
!!  Print @0,23;'CL RB';"Accounting Periods Must Be in Same Fiscal Year";
!!  Signal 3,20
 !! Goto GETECURRPERIOD
!!End If 
!!CPER[1] = J1
!!C1[2] = X1
!!If CPER[0] > CPER[1]
!!  Print @0,23;'CL RB';"Ending Current Accounting Period Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETCURRPERIOD
!!End If 
!!Print Using "&&&&";@51,5;CPER[1];
!!CP2$ = CPER[1] Using "&&&&"
Return 
GETCOMPARE: Rem prompt for comparitive
!!OCMPAR = CMPAR
!!J0$ = "6000 13706"
!!J2$ = "#" \ J1 = CMPAR
!!J5$ = "Do you want to print comparative acct period data (Y/N)"
!!Gosub ISINPUT
!!CMPAR = J1
!If CMPAR = 0 ! no comparative
!  Print @0,7;'CL';
!  If Not(SELALL) And OCMPAR <> 0 And CMPAR = 0 ! check if rpt col have prior
!    For X = 1 To 6
!      If (C9[X] > 2 And C9[X] < 7) Or IF_[C9[X] > 10 And C9[X] < 15]
!        Goto GETRPTCOL
!      End If 
!    Next X
!  End If 
!  Return 
!End If 
!!Print @0,7;'CL';"   PRIOR PERIOD (YYMM)";
GETPRIORPERIOD: Rem get prior period info
!!J0$ = "3000 43207"
!!J2$ = "&&&&" \ J1 = PPER[0]
!!J5$ = "Enter Starting Prior Accounting Period (YYMM)"
!!Gosub ISINPUT
!!PERIOD$ = J1 Using "&&&&"
!!Gosub VERIFYPERIOD
!!Goto GETPRIORPERIOD
!!PPER[0] = J1
!!P1[0] = X1
!!P1[1] = X3
!!Print Using "&&&&";@32,7;PPER[0];
!!PP1$ = PPER[0] Using "&&&&"
GETEPRIORPERIOD: Rem get ending prior period info
!!If Not(PPER[1]) Let PPER[1] = PPER[0]
!!J0$ = "3000 45107"
!!J2$ = "&&&&" \ J1 = PPER[1]
!!J5$ = "Enter Ending Prior Account Period (YYMM)"
!!Gosub ISINPUT
!PERIOD$ = J1 Using "&&&&"
!Gosub VERIFYPERIOD
!Goto GETEPRIORPERIOD
!If X3 <> P1[1] ! crossed fiscal year
!  Print @0,23;'CL';"Accounting Periods Must Be in Same Fiscal Year";
!  Signal 3,20
!  Goto GETEPRIORPERIOD
!End If 
!PPER[1] = J1
!P1[2] = X1
!If PPER[0] > PPER[1]
!  Print @0,23;'CL RB';"Ending Prior Accounting Period Must Be Greater Than Starting";
!  Signal 3,20 \ Goto GETPRIORPERIOD
!End If 
!Print Using "&&&&";@51,7;PPER[1];
!PP2$ = PPER[1] Using "&&&&"
Return 
GETREPTYPE: Rem prompt for detail or summary  #3
!!J0$ = "2 00013708"
!!J1$ = REPTYPE$
!!J5$ = "Enter Report Type:  D=Detail,  S=Summary"
!!Gosub ISINPUT
!!If J$ <> "D" And J$ <> "S" Goto GETREPTYPE
!!REPTYPE$ = J$
!If REPTYPE$ = "S"
!  PRTACCT = 0
!  Print @0,9;'CL';
!  Return 
!End If 
!!Print @0,9;"     PRINT G/L ACCOUNT NUMBER ";
GETPRINTACCT: Rem if detail print g/l account numbers
!!J0$ = "6000 13709"
!!J2$ = "#" \ J1 = PRTACCT
!!J5$ = "Do you want to print general ledger account numbers (Y/N)"
!!Gosub ISINPUT
!!PRTACCT = J1
Return 
Return 
GETSUPPRESS: Rem prompt to suppress zero account balances #4
!!J0$ = "6000 13710"
!!J2$ = "#" \ J1 = SUPRZ
!!J5$ = "Do you want to suppress print of zero account balances (Y/N)"
!!Gosub ISINPUT
!!SUPRZ = J1
Return 
GETRPTCOL: Rem get report columns  #5
!For X = 0 To 6
!  C9[X] = 0
!Next X
!Gosub PRNTRPTCOL
!Print @0,22;'CL';"NOTE: 6 columns is the maximum to select";
!For X = 1 To 6
!ENTCOL: Print @0,23;'CL';"Enter Column number to print, <CR> for no more columns, or  E: to end ";
!  Input Len (16384 + 2);""J$
!  Call String(1,J$)
!  If J$ = "E" Goto OUTEND
!  If J$ = "" Goto ENDENTCOL
!  C9 = J$
!  If C9 < 1 Or C9 > 14 Goto INVALIDCOL
!  If Not(S9[1]) ! no budget
!    If C9 > 6 Goto INVALIDCOL
!    If Not(CMPAR) If C9 > 2 Goto INVALIDCOL
!  Else 
!    If Not(CMPAR) ! budget checks
!      If C9 > 10 Goto INVALIDCOL
!      If C9 > 2 If C9 < 7 Goto INVALIDCOL
!    End If 
!  End If 
!  C9[X] = C9
!  If C9 < 7 Print Using "*#*";@2,C9 + 13;X;
!  If C9 > 6 Print Using "*#*";@42,C9 + 7;X;
!Next X
!ENDENTCOL: Rem end of entering columns
Return 
INVALIDCOL: !!Print @0,23;'CL RB';"INVALID SELECTION!"; \ Signal 3,10
!!Goto ENTCOL
L_4000: Rem PRINT TOTAL SECTION FOR LEVELS
For I9 = 10 To 1 Step -1
  If Not(T[I9]) Goto L_4065
  If K9$[1,I9] = T9$[1,I9] Goto L_4070
  R[5] = T[I9] \ Gosub L_8300
  For X = 0 To 14
    T0[X] = T9[I9,X]
  Next X
  Gosub L_4500
  For X = 0 To 14
    T9[I9,X] = 0
  Next X
  T[I9] = 0
L_4065: Next I9
If K9$[1,1] <> T9$[1,1] Let L = 99
L_4070: Return 
L_4500: Rem PRINT TOTALS HERE
If Not(F9[1]) Goto L_4515
If Not(SUPRZ) Goto L_4525
For X9 = 1 To 6
  If Not(C9[X9]) Goto L_4507
  If T0[C9[X9]] Goto L_4525
Next X9
L_4507: Goto L_4592
L_4515: Gosub L_5800
if not(j8)Print #0;" "
L_4525: Gosub L_5800
if not(j8) If SSF And PRTACCT <> 0 Print #0;",";
If F9[1] Let A$[31,60] = A$[1,30]
if not(j8)
  Print #0;A$[31,60]; 
  If SSF Print #0;",";
  If C9[1]
    Print #0; Using M$; Tab 32;(T0[C9[1]] * S1);
    If SSF Print #0;",";
  End If 
  If C9[2]
    Print #0; Using M$; Tab 50;(T0[C9[2]] * S1);
    If SSF Print #0;",";
  End If 
  If C9[3]
    Print #0; Using M$; Tab 65;(T0[C9[3]] * S1);
    If SSF Print #0;",";
  End If 
  If C9[4]
    Print #0; Using M$; Tab 82;(T0[C9[4]] * S1);
    If SSF Print #0;",";
  End If 
  If C9[5]
    Print #0; Using M$; Tab 99;(T0[C9[5]] * S1);
    If SSF Print #0;",";
  End If 
  If C9[6]
    Print #0; Using M$; Tab 116;(T0[C9[6]] * S1);
    If SSF Print #0;",";
  End If 
  Print #0;""
End if
If F9[1] Goto L_4592
if not(j8) Print #0;"" 
L = L + 1
L_4592: F9[1] = 0
Return 
L_5000: Rem PRINT DETAIL LINE
!!stop!!!!!kk
if j8 let tmp$=B1$[3,8],fdel$,B1$[11,50],fdel$!!client  # , name
If REPTYPE$ = "S"
  if j8!!!
    tmp$=tmp$,A1$[15,36],fdel$
  else
    Print #0;A1$[15,36];
    If SSF Print #0;",";
  end if!!!
  Goto L_5015
End If 
If PRTACCT ! ACCT #
  if j8!!xml
      tmp$=tmp$,A1$[2,9],fdel$
  else 
    Print #0;A1$[2,9]; \ If SSF Print #0;",";
  end if!!
End If 
if j8
  tmp$=tmp$,A1$[15,36],fdel$
else 
  Print #0; Tab 9;A1$[15,36]; \ If SSF Print #0;",";
end if
L_5015:
If C9[1]
  if j8
    tmp$=tmp$,(T0[C9[1]] * S1) Using M$,fdel$
  else 
    Print #0; Using M$; Tab 32;(T0[C9[1]] * S1);
    If SSF Print #0;",";
  end if
End If 
If C9[2]
  if j8
    tmp$=tmp$,(T0[C9[2]] * S1) Using M$,fdel$
  else 
    Print #0; Using M$; Tab 50;(T0[C9[2]] * S1);
    If SSF Print #0;",";
  end if
End If 
If C9[3]
  if j8
   tmp$=tmp$,(T0[C9[3]] * S1) Using M$,fdel$
  else
    Print #0; Using M$; Tab 65;(T0[C9[3]] * S1);
    If SSF Print #0;",";
  end if
End If 
If C9[4]
  if j8
    tmp$=tmp$,(T0[C9[4]] * S1) Using M$,fdel$
  else
    Print #0; Using M$; Tab 82;(T0[C9[4]] * S1);
    If SSF Print #0;",";
  end if
End If 
If C9[5]
  if  j8
    tmp$=tmp$,(T0[C9[5]] * S1) Using M$,fdel$
  else 
    Print #0; Using M$; Tab 99;(T0[C9[5]] * S1);
    If SSF Print #0;",";
  end if
End If 
If C9[6]
  if j8
    tmp$=tmp$,(T0[C9[6]] * S1) Using M$,fdel$
	
  else
    Print #0; Using M$; Tab 116;(T0[C9[6]] * S1);
    If SSF Print #0;",";
  end if
End If 
if j8
  Call addtostr(e$,rstr$,tmp$+rdel$)
else
  Print #0;""
end if
Return 
L_5500: Rem PRINT HEADINGS
If A$[1,5] = "     " Return 
Gosub L_5800
if not(j8) Print #0; Tab 2;A$[1,30]
if not(j8) Print #0;" " 
L = L + 1
Return 
L_5800: Rem *** HEADING ***
if j8 return
L = L + 1
If L < J9 Return 
P = P + 1
If P > 1 Print #0;"\14\";
!!If J8 If P > 1 Input "PRESS <CR> TO CONTINUE: "J$ \ Print 'CS';
Print #0;"\15\";
Print #0; Tab 40;"CLIENT: ";B1$[3,8];B1$[11,50]
If D6 Print #0; Tab 2;D$[1,30]; \ If SSF Print #0;",";
Print #0; Tab 50;"I N C O M E  S T A T E M E N T"; \ If SSF Print #0;",";
Print #0; Using "PAGE ###"; Tab 115;P
If P6 Print #0; Tab 2;P$[1,30]; \ If SSF Print #0;",";
If CPER[0] = CPER[1]
  Print #0; Tab 50;"FOR THE CURRENT PERIOD OF ";CP1$[3,4];"/";CP1$[1,2]
Else 
  Print #0; Tab 40;"FOR THE CURRENT PERIOD OF ";CP1$[3,4];"/";CP1$[1,2];
  Print #0;" THRU ";CP2$[3,4];"/";CP2$[1,2]
End If 
If CMPAR
  If PPER[0] = PPER[1]
    Print #0; Tab 50;"FOR THE PRIOR PERIOD OF ";PP1$[3,4];"/";PP1$[1,2]
  Else 
    Print #0; Tab 40;"FOR THE PRIOR PERIOD OF ";PP1$[3,4];"/";PP1$[1,2];
    Print #0;" THRU ";PP2$[3,4];"/";PP2$[1,2]
  End If 
End If 
Print #0;" "
If SSF
  Print #0;","; \ If PRTACCT Print #0;",";
End If 

If C9[1]
  Print #0; Tab 35;B6$[((C9[1] * 12) - 11),(C9[1] * 12)];
  If SSF Print #0;",";
End If 
If C9[2]
  Print #0; Tab 53;B6$[((C9[2] * 12) - 11),(C9[2] * 12)];
  If SSF Print #0;",";
End If 
If C9[3]
  Print #0; Tab 68;B6$[((C9[3] * 12) - 11),(C9[3] * 12)];
  If SSF Print #0;",";
End If 
If C9[4]
  Print #0; Tab 85;B6$[((C9[4] * 12) - 11),(C9[4] * 12)];
  If SSF Print #0;",";
End If 
If C9[5] ! 5TH LINE
  Print #0; Tab 102;B6$[((C9[5] * 12) - 11),(C9[5] * 12)];
  If SSF Print #0;",";
End If 
If C9[6]
  Print #0; Tab 119;B6$[((C9[6] * 12) - 11),(C9[6] * 12)];
  If SSF Print #0;",";
End If 
Print #0;""
If SSF
  Print #0;","; \ If PRTACCT Print #0;",";
End If 
If C9[1]
  Print #0; Tab 35;B7$[((C9[1] * 12) - 11),(C9[1] * 12)];
  If SSF Print #0;",";
End If 
If C9[2] !PRINT #0; TAB 53;B7$[((C9[2]*12)-11),(C9[2]*12)]; ! 2ND LINE
  Print #0; Tab 53;B7$[((C9[2] * 12) - 11),(C9[2] * 12)];
  If SSF Print #0;",";
End If 
If C9[3] ! PRINT #0; TAB 68;B7$[((C9[3]*12)-11),(C9[3]*12)]; ! 3RD LINE
  Print #0; Tab 68;B7$[((C9[3] * 12) - 11),(C9[3] * 12)];
  If SSF Print #0;",";
End If 
If C9[4] ! PRINT #0; TAB 85;B7$[((C9[4]*12)-11),(C9[4]*12)]; ! 4TH LINE
  Print #0; Tab 85;B7$[((C9[4] * 12) - 11),(C9[4] * 12)];
  If SSF Print #0;",";
End If 
If C9[5] ! PRINT #0; TAB 102;B7$[((C9[5]*12)-11),(C9[5]*12)]; ! 5TH LINE
  Print #0; Tab 102;B7$[((C9[5] * 12) - 11),(C9[5] * 12)];
  If SSF Print #0;",";
End If 
If C9[6] ! PRINT #0; TAB 119;B7$[((C9[6]*12)-11),(C9[6]*12)]; ! 6TH LINE
  Print #0; Tab 119;B7$[((C9[6] * 12) - 11),(C9[6] * 12)];
  If SSF Print #0;",";
End If 
Print #0;""
Print #0;" "
L = 9
If P <= 1 Goto L_5995
If F9 = 99 Goto L_5995
If A$[1,5] = "     " Goto L_5995
Print #0; Tab 2;A$[1,30];
If P > 1 Print #0;" (CONT.)"
Print #0;" "
L = L + 2
L_5995: Return 
PRNTSCRN: Rem print screen headings
!!Print @0,4;'CE';
!!Print @0,4;'CE';@29,4;'BR';"STARTING";'ER';@49,4;'BR';"ENDING";'ER';
!!Print @0,5;"1> CURRENT PERIOD (YYMM)";
!!Print @0,6;"2> COMPARATIVE   ";
!!Print @0,7;"     PRIOR PERIOD (YYMM)";
!!Print @0,8;"3> REPORT TYPE "; Tab 45;"D=detail S=Summary";
!!Print @0,9;"     PRINT G/L ACCOUNT NUMBER ";
!!Print @0,10;"4> SUPPRESS ZERO ACCT BALANCE";
!!Print @0,12;"5> REPORT COLUMNS ";
PRNTRPTCOL: Rem print report columns
!!Print @10,13;'CE BR';"***  ACTUAL ***";'ER';
!!If S9[1] Print @49,13;'BR';"*** BUDGET ***";'ER';
!!Print @7,14;"1) CURRENT PERIOD MTD";
!!Print @7,15;"2) CURRENT PERIOD YTD";
!!If CMPAR
!!  Print @7,16;"3) PRIOR PERIOD MTD";
!!  Print @7,17;"4) PRIOR PERIOD YTD";
!!  Print @7,18;"5) VARIANCE CURR TO PRIOR MTD";
!!  Print @7,19;"6) VARIANCE CURR TO PRIOR YTD";
!!End If 
!!If S9[1]
!!  Print @46,14;" 7) CURRENT PERIOD MTD";
!!  Print @46,15;" 8) CURRENT PERIOD YTD";
!!  Print @46,16;" 9) VARIANCE CURRENT PERIOD MTD";
!!  Print @46,17;"10) VARIANCE CURRENT PERIOD YTD";
!!  If CMPAR
!!    Print @46,18;"11) PRIOR PERIOD MTD";
!!    Print @46,19;"12) PRIOR PERIOD YTD";
!!    Print @46,20;"13) VARIANCE PRIOR MTD";
!!    Print @46,21;"14) VARIANCE PRIOR YTD";
!!  End If 
!!End If 
Return 
VERIFYPERIOD: Rem entered account period
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99" Goto PRNTBADDATE
If PERIOD$[1,2] <> PERIOD$[3,4]
  If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12" Goto PRNTBADDATE
End If 
N = Int(D3 / 100)
B1 = PERIOD$
For X = 1 To D5
  If X <> 13 and X <> 26 and X <> 39
    If A3[X] = B1 Goto PERIODFND
  End If 
Next X
errflag = 1
!!Print @0,23;'CL RB';"Accounting Period Not Found "; \ Signal 3,30
!!Print @0,23;'CL';
Return 
PERIODFND: X1 = X
If X1 < N + 2 Let X3 = 0
If X1 > N + 1 Let X3 = N + 2
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 3
Return 
!!Return 1
PRNTBADDATE: Rem  print invalid date entered
errflag = 2
!!Print @0,23;'CL RB';"Invalid Accounting Period "; \ Signal 3,15
!!Print @0,23;'CL';
Return
L_6900: Rem GET ACCT PERIODS
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E !!\ If E Gosub ERR_SEARCH
Mat Read #3,R[3],70;D3;
Mat Read #3,R[3],70;A3;
Return 
L_8000: Rem READ GLM
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],48;T1$;
Mat Read #3,R[3],70;A3;
Return 
L_8100: Rem READ GLB
Mat Read #4,R[4],70;A4;
Return 
L_8300: Rem READ PLANDIN
Mat Read #5,R[5];A$;
Mat Read #5,R[5],60;T2$; \ Mat Read #5,R[5],70;T$;
S1 = 1 \ If T2$[8,8] = "Y" Let S1 = -1
Return 
PROBLEMCHECK: Rem CHECK FOR G/L # WITH PROBLEMS(STATS/ DIV #)
Read #1,88,16;F$;
SUSP$ = " ",SUSP$
Call FindF(F$,B1)
If B1 = 0 Goto CHECK2
Ropen #15,F$
V$ = "10"
Search #15,2,1;V$,V1,E
If E = 1 Goto CHECK2
!!If E Gosub ERR_SEARCH
Read #15,V1,150;SUSP$;
Close #15
CHECK2: FIRSTPR = 0
K3$ = " ",K3$
CHECK3: Search #3,3,1;K3$,R[3],E
If E = 2 Return 
!!If E Gosub ERR_SEARCH
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],48;T1$;
Mat Read #3,R[3],70;A3;
If A1$[13,13] <> "0" Goto CHECK3
K5$ = " ",K5$
K5$ = T1$
If Len(K5$) < 10 Let K5$[Len(K5$) + 1,10] = "          "
K6$ = " ",K6$
K6$[1,4] = CLIENT Using "####"
J2 = K3$[8,9]
K6$[5,6] = J2 Using "##"
Search #5,2,1;K5$,R[5],E
If E = 0 Goto CHECK5
!!If E > 1 Gosub ERR_SEARCH
If SUSP$[1,9] = K3$[1,9]
  E = 0
  For X2 = 0 To 39
    If A3[X2] <> 0 Let E = E + 1
  Next X2
  If E = 0 Goto CHECK5
End If 
If FIRSTPR = 0
  if not(j8) Print #0; Tab 5;"G/L NUMBERS WITH SETUP PROBLEMS(MAY AFFECT TOTALS):"
  if not(j8) Print #0;" "
  FIRSTPR = 1
End If 
if not(j8) Print #0; Tab 5;"G/L # ";K3$[1,9];" INVALID OR MISSING STAT TYPE"
CHECK5: Search #6,2,1;K6$,R[6],E
If E = 0 Goto CHECK3
!!If E > 1 Gosub ERR_SEARCH
If D6 = 0 Goto CHECK3
If SUSP$[1,9] = K3$[1,9]
  E = 0
  For X2 = 0 To 39
    If A3[X2] <> 0 Let E = E + 1
  Next X2
  If E = 0 Goto CHECK3
End If 
If FIRSTPR = 0
  if not(j8) Print #0; Tab 5;"G/L NUMBERS WITH SETUP PROBLEMS(MAY AFFECT TOTALS):"
  if not(j8) Print #0;" "
  FIRSTPR = 1
End If 
if not(j8) Print #0; Tab 5;"G/L # ";K3$[1,9];" DEPARTMENT NOT FOUND"
Goto CHECK3
Return 


!!If J8 Print @0,23;'CL';
!!If J8 Input "PRESS <CR> TO CONTINUE: "J$
!!Chain "MX000C"
L_9100: Rem END OF RANGE
K9$ = " ",K9$
Gosub L_4000
Rem GOSUB PROBLEMCHECK:
Gosub L_6900
!!If J8 Print @0,23;'CL';"PRESS <CR> TO CONTINUE: "; \ Input ""J$
!!Goto L_1000
GOTO OUTEND
! 
GETDEPTGL: Rem get g/l department file
F$ = F9$,"/GLM",C1$[1,2],N$,"D"
Call FindF(F$,B1)
If B1
  If Err 0 Rem
  Close #3
  !!If Err 0 Gosub ERR_ESCAPE
  Ropen #3,F$
End If 
If S9[1]
  F$ = F9$,"/GLB",C1$[1,2],N$,"D"
  Call FindF(F$,B1)
  If B1
    If Err 0 Rem
    Close #4
    !!If Err 0 Gosub ERR_ESCAPE
    Ropen #4,F$
  Else 
    S9[1] = 0
  End If 
End If 
Return 
Rem {begin call.input.i}
ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
Call "Input",J1,J$,J0$,J1$,J4$,J5$
Return 
ISERRMSG: X1 = Len(J7$)
Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
Print 'K1'; \ Window Close \ Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}

OUTEND: Rem END
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End


