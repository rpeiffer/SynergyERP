! >>> Program 798
!
! description Fifo Inventory Adjusment Report
!
! loadsave -w -n 100,10 -o prog/dxport/798.dl4 src/798.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  4, 2006  09:54:49
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx77/mx798.src (univ2) [txc] {07877}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem mx798 - MISC INVENTORY ADJUSTMENTS
Rem AUTHOR: DAVE  AUG 10, 1987
Rem LAST UPDATE: option to suppress zero inventory balances -MTG
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim U5$[20]
Dim 2%,COID
Dim 3%,COST,UNITX,SUNIT$[4],CUNIT$[4],CUNIT,UNIT$[10],2%,C4[8]
Dim 3%,OCOST,NCOST,RSTOT[99],LOTCOST,COSTVAR[99]
Dim 3%,DISP_QTY,DISP_EXT,DISP_COST
Dim FTK$[50]
Dim FT1$[72],1%,FT1[3],2%,FT2[3],3%,FT3[3]
Dim 2%,SDATE,EDATE,D3[1],JDATE[1]
Dim COST$[1]
Dim P1$[156],PMASK$[12],MISCRTS$[21]
Dim P9$[50],P60$[50],P61$[256]
Dim 1%,F8,TRANSTYPE
Dim 2%,B1[24],A3,WHSE,Q0[1]
Dim 3%,A1[33],A2[7]
Dim 1%,FL1[2],FL1$[80],2%,FL2[3],3%,FL3[8],FL4[1]
Dim J$[40],J1$[30],J2$[20],J8$[8]
Dim 1%,X1[9],2%,X2,3%,J,T9[20],K6$[60]
Dim K1$[50],K2$[12],K3$[12],X$[10],T9$[26],K5$[60]
Dim PTRNM$[50]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="}",EndParam$
!
!
!If P60$[9,9] = "F" Or P60$[9,9] = "L" Goto L_800
!Print @0,22;'CL';"FIFO/LIFO INVENTORY METHOD NOT AVAILABLE....";
!Print @0,23;'CL';"PRESS <CR> TO RETURN TO THE MENU ";
!Input ""J$ \ Goto OUTEND

!L_800: Rem OPEN FILES
!SOUTHWEST = 1
!If SOUTHWEST
!  If Err 0 Let J8 = Spc(8)
!  J8 = 0 \ J9 = Chf(0)
!  If Err 0 Gosub ERR_ESCAPE
!  If J8 If J8 <> 49 Goto ERR_ESCAPE
!  J9 = 60 \ If J8 Let J9 = 24
!  If Not(J8)
!    PTRNM$ = Chf$(800)
!    Search PTRNM$,"ub/sys",E
!    If Not(E)
!ASKSSQUEST: Rem ask for spreadsheet
!      Print @0,23;'CL';"Print Report in spreadsheet format (Y/N) ";
!      Input Len (16384 + 1);""J$
!      Call String(1,J$)
!      If J$ = "Y" Chain "MX798SS"
!      If J$ <> "N" Goto ASKSSQUEST
!    End If 
!  End If 
!End If 

For J = 2 To 8
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","0 ","1728","0","0","3008","3024"
X2 = Spc(5)
COID = Int((X2 - Int(X2 / 16384) * 16384) / 64)
! - J$ = "2/RSNRTS" + Str$(COID) \ Ropen #10,J$
Mat Read #1,0,100;J8$;
Read #1,3;J1$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])

If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 62 \ If J8 Let J9 = 21
!
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"798",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
J$ = "2/RSNRTS" + Str$(intCO) \ Ropen #10,J$
!
CALL DXGET("K2",K2$) \ K2$ = K2$,Blank$
CALL DXGET("K3",K3$)\   K3$ = K3$,EndParam$
CALL DXGET("WHSE",tmp$) \  WHSE = tmp$
CALL DXGET("SDATE",tmp$) \ IF tmp$ = ""  LET SDATE = 010170 else LET SDATE= tmp$
CALL DXGET("EDATE",tmp$) \   IF tmp$ = ""  LET EDATE = 123159 else LET EDATE= tmp$
CALL DXGET("COST",COST$) 
CALL DXGET("UNITX",UNIT$) \ UNITX = UNIT$
CALL DXGET("J2",tmp$) \  TRANSTYPE = tmp$
!
! product
if K3$ < K2$ let e$ = "Invalid ending code, must be greater than starting code!" \ error 10000
!
!WAREHOUSE
If WHSE < 0 or WHSE > 99 LET e$ = " Invalid warehouse, must be between 0 and 99 " \ ERROR 10000
!
! starting date
J2$ = SDATE Using "&&&&&&"
X$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6] \ Gosub L_7800 \ SDATE = X2
X2 = SDATE \ Gosub L_7820 \ X2=0
if E let e$ = "Invalid starting date!" \ error 10000
JDATE[0] = X2
!
! ending date
J2$ = EDATE Using "&&&&&&"
X$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6] \ Gosub L_7800 \ EDATE = X2
X2 = EDATE \ Gosub L_7820 \ X2=0
if E let e$ = "Invalid ending date!" \ error 1000
JDATE[1] = X2
If JDATE[1] < JDATE[0] let e$ = "Invalid ending date, must be between starting date and 123199!" \ error 10000  
!
K1$ = K2$
J1 = 90 \ J2 = 0
!
U5$ = " ",U5$
If UNITX = 1 Let U5$ = "IN STOCKING UNITS "
If UNITX = 2 Let U5$ = "IN SELLING UNITS "
If UNITX = 3 Let U5$ = "IN PURCHASING UNITS "
If UNITX = 4 Let U5$ = "IN COSTING UNITS "
If UNITX = 5 Let U5$ = "IN PRICING UNITS "
If UNITX = 6 Let U5$ = "IN PRODUCTION UNITS "
UNITX = UNITX + 7
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!
!!ITEM CODE DESCRIPTION WH COMMENT DATE QUANTITY COST TOTAL
!L_900: Rem GET RANGES
!If P60$[9,9] = "F" Print 'CS CE'; Tab 20;"FIFO INVENTORY ADJUSTMENT REPORT";
!If P60$[9,9] = "L" Print 'CS CE'; Tab 20;"LIFO INVENTORY ADJUSTMENT REPORT";
!Print @5,2;"ENTER STARTING CODE, <CR> FOR ALL,  ''E'' TO EXIT : ";'CE';
!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!If K2$ = "" Let K3$ = "}}}}}}" \ Goto L_970
!Print @5,4;"ENTER ENDING   CODE, <CR> FOR LAST, ''E'' TO EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!If K3$ = "" Let K3$ = "}}}}}}"
!L_970: If K2$ <= K3$ Goto L_990
!Print @5,23;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!L_990: K1$ = K2$
!J1 = 90 \ J2 = 0
!Gosub L_10500
!Print @0,5;'CE';@5,7;U5$;

!L_1000: Rem ASK FOR WAREHOUSE
!Print @5,10;'CE';"Enter warehouse ##,  0 for all ";
!Input ""J2$
!WHSE = J2$
!If WHSE > 99 Goto L_1000
!L_1100: Rem ENTER DATE RANGES
!
!SDATE = 700101;JDATE[0] = 0;EDATE = 591231;JDATE[1] = 36525

!L_1105: Print @0,12;'CL';"Enter Starting Date (MMDDYY), (E) to end, <CR> for all  : ";
!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!If J2$ = "" Goto L_1200
!If Len(J2$) < 6 Goto L_1105
!X2 = J2$;J2$ = X2 Using "&&&&&&"
!X$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6] \ Gosub L_7800 \ SDATE = X2
!X2 = SDATE \ Gosub L_7820 \ Goto L_1100
!JDATE[0] = X2
!L_1120: Print @0,14;'CL';"Enter Ending Date (MMDDYY), (E) to end, <CR> for last: ";
!Input ""J2$
!If J2$ = "" Goto L_1150
!If J2$ = "E" Goto OUTEND
!If Len(J2$) <> 6 Goto L_1120
!X2 = J2$;J2$ = X2 Using "&&&&&&"
!X$ = J2$[1,2],"/",J2$[3,4],"/",J2$[5,6] \ Gosub L_7800 \ EDATE = X2
!X2 = EDATE \ Gosub L_7820 \ Goto L_1120
!JDATE[1] = X2
!L_1150: If JDATE[1] >= JDATE[0] Goto L_1200
!Print @0,23;'CL RB';"ENDING DATE MUST BE GREATER THAN STARTING DATE"; \ Signal 3,20
!Print @0,12;'CE';
!Goto L_1100
!L_1200: Print @0,16;'CE';"Enter cost method to use (A)ctual, (L)oad, or (E)nd: ";
!Input ""J2$ \ If J2$ = "E" Goto OUTEND
!If J2$ = "A" Let COST$ = J2$ \ Goto L_1300
!If J2$ <> "L" Goto L_1200
!COST$ = "L"

!L_1300: Print @0,18;'CE';"Enter Adjustment type 1: Misc Rts  2: Inventory Reset  3: Physical  4: PO & DM ";
!Input Len (16384 + 1);""J2$
!Call String(1,J2$)
!If J2$ = "E" Goto OUTEND
!TRANSTYPE = J2$
!If TRANSTYPE < 0 Goto L_1300
!If TRANSTYPE > 4 Goto L_1300
!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
!
if j8 
	tmp$ = "ITEM CODE",fdel$
    tmp$ = tmp$,"DESCRIPTION",fdel$
	if P9$[26,26] = "Y" let tmp$ = tmp$,"DESCRIPTION 2",fdel$
	tmp$ = tmp$,"WH",fdel$
	tmp$ = tmp$,"TRANS#",fdel$
    tmp$ = tmp$,"COMMENT",fdel$
   	tmp$ = tmp$,"DATE",fdel$
	tmp$ = tmp$,"QUANTITY",fdel$
	tmp$ = tmp$,"QUANTITY U/M",fdel$
	tmp$ = tmp$,"COST",fdel$
	tmp$ = tmp$,"COST U/M",fdel$
	tmp$ = tmp$,"TOTAL",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
L_2000: 
Search #7,3,1;K1$,R7,E \ If E = 2 Goto L_9100
If E Goto L_9100
If K1$[1,Len(K3$)] > K3$ Goto L_9100
If K1$[1,12] <> FL1$[1,12] Gosub L_5400
Mat Read #7,R7,0;FL1;
If WHSE If WHSE <> FL1[0] Goto L_2000
Mat Read #7,R7,6;FL1$; \ Mat Read #7,R7,86;FL2; \ Mat Read #7,R7,102;FL3;
Mat Read #7,R7,192;FL4;
K2$ = " ",K2$ \ K2$[1,12] = FL1$[1,12]
Search #2,2,1;K2$,R1,E 
If E  let J1 = J1 + 1 \ Goto L_2000 !!Print #0;FL1$[1,12];" IS NOT IN THE MASTER FILE!" \
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1;
Mat Read #2,R1,460;A2;
Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2; \ Mat Read #2,R1,894;C4; \ Mat Read #2,R1,256;A;
If PFU1[11] = -1 Or PFU1[11] = -3
  If FL4[0] Let A[5] = FL4[1];A[6] = FL4[0]
End If 
FTK$ = " ",FTK$ \ FTK$[1,6] = R7 Using "######"
L_2170: 
Search #8,3,1;FTK$,R8,E \ If E = 2 Goto L_2000
!If E Gosub ERR_SEARCH
Mat Read #8,R8,80;FT2;
If FT2[0] <> R7 Goto L_2000
If FT2[2] < JDATE[0] Goto L_2170
If FT2[2] > JDATE[1] Goto L_2170
Mat Read #8,R8,0;FT1$; \ Mat Read #8,R8,72;FT1;
If TRANSTYPE = 1
  If FT1[0] = 7 Or FT1[0] = 30
    If FT1$[41,52] = "PROG 325    " Goto L_2239
    If FT1$[41,48] = "MISC RTS" Goto L_2239
  Else 
    Goto L_2170
  End If 
End If 
If TRANSTYPE = 2
  If FT1[0] = 7 Or FT1[0] = 30 Or FT1[0] = 13 Or FT1[0] = 15
    If FT1$[41,52] = "PROG 775    " Goto L_2239
  Else 
    Goto L_2170
  End If 
End If 
If TRANSTYPE = 3
  If FT1[0] = 11 Or FT1[0] = 24 Or FT1[0] = 25
    If FT1$[41,52] = "PROG 697    " Goto L_2239
  Else 
    Goto L_2170
  End If 
End If 
If TRANSTYPE = 4
  If FT1[0] = 1 Or FT1[0] = 31
    Goto L_2239
  Else 
    Goto L_2170
  End If 
End If 
Goto L_2170
L_2239: Mat Read #8,R8,96;FT3;
QTY = FT3[0]
If COST$ = "L"
  OCOST = FT3[2]
  LOTCOST = FL3[7]
End If 
If COST$ = "A"
  OCOST = FT3[1]
  LOTCOST = FL3[6]
End If 
DISP_EXT = FNR(FT3[0] * OCOST)
T9[0] = DISP_EXT
If PFU1[11] > 0 And PFU1[11] <> PFU1[0] ! cost<> base um
  DISP_QTY = FT3[0];DISP_COST = OCOST
  Gosub CALC_DISP_EXT
End If 
Rem LET T9[0]=disp_ext!FNR(FT3[0]*OCOST)
Mat Read #8,R8,0;FT1$;
If TRANSTYPE = 1 ! miscrts
  RTSCODE = FT1$[70,72]
  RSTOT[RTSCODE] = RSTOT[RTSCODE] + t9[0] ! DISP_EXT
  If LOTCOST <> OCOST
    COSTVAR[RTSCODE] = COSTVAR[RTSCODE] - t9[0] ! DISP_EXT
    DISP_EXT = FNR(FT3[0] * LOTCOST)
    COSTVAR[RTSCODE] = COSTVAR[RTSCODE] + DISP_EXT
    If PFU1[11] > 0 And PFU1[11] <> PFU1[0] ! cost<>base um
      DISP_QTY = FT3[0];DISP_COST = LOTCOST
      Gosub CALC_DISP_EXT
    End If 
    Rem let costvar[rtscode]=costvar[rtscode]+disp_ext
  End If 
End If 
Gosub L_5000
Goto L_2170
L_4000: Rem TOTAL PRINT
Gosub L_5400
Gosub L_5800
if not(j8)
 print #0;""
 Print #0;"** TOTALS **";
 Print #0; Using "---------#.##"; Tab 75;T9[10];
 Print #0; Using "----------#.##"; Tab 112;T9[12]
 Print #0;""
 let j1=j1+2 
end if
If TRANSTYPE = 1
if not(j8)
  gosub L_5800: 
  Print #0; Tab 30;"Reason";
  Print #0; Tab 55;"Actual Cost";
  Print #0; Tab 70;"Cost Adjust";
  Print #0; Tab 95;"Total Adjusted"
end if
For X = 0 To 99
  If RSTOT[X] <> 0 Or COSTVAR[X] <> 0
    Gosub L_5800
    if not(j8) Print #0; Using "## "; Tab 25;X;
    If X <> 0
      Mat Read #10,X,0;MISCRTS$;
     if not(j8)  Print #0; Tab 30;MISCRTS$;
    End If 
    if not(j8)
      Print #0; Using "-----------.##"; Tab 55;RSTOT[X];
      Print #0; Using "-----------.##"; Tab 70;COSTVAR[X];
      Print #0; Using "-----------.##"; Tab 95;(RSTOT[X] + COSTVAR[X])
    end if
  End If 
Next X
End If 
Return 
!
L_5000: Rem PRINT LINE
QTY = FT3[0]
COST = OCOST \ Gosub L_10000 \ OCOST = COST
Gosub L_5800
IF J8 !!!XML
  tmp$=P1$[140,151],fdel$!!ITEM CODE
  tmp$=tmp$,rtrim$(P1$[9,37]),fdel$ !!DESCRIPTION_1
  If P9$[26,26] = "Y" let tmp$=tmp$,rtrim$(P1$[63,91]),fdel$
  tmp$=tmp$,FL1 Using "##",fdel$ !!WHSE
  tmp$=tmp$,FT2[0] Using "######",fdel$  ! trans#
  tmp$=tmp$,rtrim$(FT1$[53,72]),fdel$!!COMMENT
  X2 = FT2[2] \ Gosub L_7770
  tmp$=tmp$,X$[1,5],fdel$  !!DATE
  tmp$=tmp$,QTY Using "-------#.##",fdel$ !!QUANTITY
  tmp$=tmp$,SUNIT$,fdel$ !!QUANTITY COL
  tmp$=tmp$,OCOST Using PMASK$,fdel$  !!!COST
  tmp$=tmp$,CUNIT$,fdel$  !!!COST COL
  tmp$=tmp$,T9[0] Using "-------#.##",fdel$  !!!TOTAL
  CT = CT + 1
  TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[0]
  T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[0]
  T9[0] = 0
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
If Not(CT)
  Print #0;P1$[140,151];!!ITEM CODE
  Print #0; Tab 12;P1$[9,37]; !!DESCRIPTION_1
End If 
If P9$[26,26] = "Y" If CT = 1
  Print #0; Tab 12;P1$[63,91]; !!!DESCRIPTION_2
End If 
If Not(WHSE) Print #0; Using "##"; Tab 42;FL1; !!WHSE
If WHSE Print #0; Using "######"; Tab 42;FT2[0];  !!
Print #0; Tab 50;FT1$[53,72];!!COMMENT
X2 = FT2[2] \ Gosub L_7770
Print #0; Tab 71;X$[1,5];  !!DATE
Print #0; Using "-------#.##"; Tab 77;QTY;"/";SUNIT$;!!QUANTITY
Print #0; Using PMASK$; Tab 94;OCOST;"/";CUNIT$;  !!!COST
Print #0; Using "-------#.##"; Tab 112;T9[0];  !!!TOTAL
CT = CT + 1
TOTQ = TOTQ + QTY \ TOTCOST = TOTCOST + T9[0]
T9[10] = T9[10] + QTY \ T9[12] = T9[12] + T9[0]
Print #0;""
T9[0] = 0
Return 
!
L_5400: Rem PRINT TOTAL
If Not(CT) Goto L_5470
If CT = 1 Goto L_5460
Gosub L_5800
if not(j8)
  Print #0; Using "TOTAL -------#.## "; Tab 71;TOTQ;SUNIT$;
  Print #0; Using "-------#.##"; Tab 112;TOTCOST
end if
L_5460:  
if not(j8) Print #0;"" 
  J1 = J1 + 1
L_5470: 
  TOTQ = 0
  TOTCOST = 0
  CT = 0
Return 
!
L_5800: Rem HEADINGS ROUTINE
if j8 return
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\12\";
T9$ = "" \ Call Time(T9$)
Mat Read #1,0,100;J8$;
Read #1,3;J1$;
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 798 -";COST$;"- ";T9$;
If P60$[9,9] = "F" Print #0; Tab 38;"F I F O   ";
If P60$[9,9] = "L" Print #0; Tab 38;"L I F O   ";
If TRANSTYPE = 1 Print #0;"M I S C E L L A N E O U S   R E C E I P T S"
If TRANSTYPE = 2 Print #0;"I N V E N T O R Y    R E S E T S"
If TRANSTYPE = 3 Print #0;"P H Y S I C A L   I N V E N T O R Y "
If TRANSTYPE = 4 Print #0;"Purchase Orders & Debit Memos";
If Not(WHSE) Print #0; Tab 54;"FOR ALL WAREHOUSES ";U5$
If WHSE Print #0; Using "FOR WAREHOUSE ## "; Tab 55;WHSE;" ";U5$
X2 = SDATE \ Gosub L_7700
Print #0; Tab 54;"FROM ";X$[1,8];
X2 = EDATE \ Gosub L_7700
Print #0;" THRU ";X$[1,8]
Print #0;"\12\";
Print #0;"ITEM CODE";
Print #0; Tab 12;"DESCRIPTION";
If Not(WHSE) Print #0; Tab 42;"WH";
If WHSE Print #0; Tab 42;"TRANS#";
Print #0; Tab 49;"COMMENT";
Print #0; Tab 70;"DATE";
Print #0; Tab 80;"QUANTITY";
Print #0; Tab 95;"    COST";
Print #0; Tab 112;"     TOTAL";
Print #0;" "
Print #0;"\12\";
F9 = 99
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 

L_7800: Rem DATE X$ TO X2
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 

X$ = X2 Using "&&&&"
D3[0] = X$[1,2];D3[1] = X$[3,4]
If D3[0] > 67 Let D3[0] = 1900 + D3[0]
If D3[0] < 68 Let D3[0] = 2000 + D3[0]
X$[1,4] = D3[0] Using "&&&&";X$[5,6] = D3[1] Using "&&"
X2 = X$[1,6] \ Return 

L_9100: Rem END OF THIS RANGE
Gosub L_4000
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
If K2$ = "" Goto OUTEND
If Not(J8) Print #0;"\14\";
goto OUTEND ! - was Goto L_900 ! you had !goto L_900
L_10000: Rem
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  SUNIT$ = " ",SUNIT$;SUNIT$[1,2] = "LB";CUNIT$ = SUNIT$
  Return 
End If 
CNVTU[0] = 0
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 2
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[UNITX]
CNVTU[2] = 1
CNVTA = QTY \ Gosub L_20000 \ QTY = AMOUNT
If PFU1[UNITX] > 0 Mat Read #4,PFU1[UNITX],10;SUNIT$;
If PFU1[UNITX] = -1 Let SUNIT$ = "CWT "
CUNIT$ = SUNIT$
Return 
!
If UNITX = 1
  If W3[15] and P9$[32,32] = "Y" Let COST = W3[15] Else Let COST = B1[21]
End If 
If UNITX = 2
  If W3[18] and P9$[32,32] = "Y" Let COST = W3[18] Else Let COST = C4[4]
End If 
If UNITX = 3
  If W3[17] and P9$[32,32] = "Y" Let COST = W3[17] Else Let COST = B1[8]
End If 
If UNITX = 4
  If W3[16] and P9$[32,32] = "Y" Let COST = W3[16] Else Let COST = B1[10]
End If 
Return 
!
For X = 0 To 24 \ W3[X] = 0 \ Next X
If Not(WHSE) Return 
K5$ = " ",K5$
K5$[1,12] = P1$[140,151]
K5$[13,14] = WHSE Using "##"
Search #5,2,1;K5$,R5,E
If E Return 
Mat Read #5,R5,78;W3;
Return 
!
!L_10500: Rem SELECT UNIT
!Window Open @5,5; Size 70,12; Using "SELECT DEFAULT UNIT "
!L_10520: Print 'CS'
!Print 
!Print Tab 5;" 1) STOCKING  "; Tab 45;" 4) COSTING"
!Print Tab 5;" 2) SELLING  "; Tab 45;" 5) PRICING"
!Print Tab 5;" 3) PURCHASING "; Tab 45;" 6) PRODUCTION"
!Print 
!Print Tab 10;"Enter unit to show on report ";
!Input ""UNIT$
!UNIT = UNIT$
!If UNIT < 1 Goto L_10520
!If UNIT > 6 Goto L_10520
!U5$ = " ",U5$
!If UNIT = 1 Let U5$ = "IN STOCKING UNITS "
!If UNIT = 2 Let U5$ = "IN SELLING UNITS "
!If UNIT = 3 Let U5$ = "IN PURCHASING UNITS "
!If UNIT = 4 Let U5$ = "IN COSTING UNITS "
!If UNIT = 5 Let U5$ = "IN PRICING UNITS "
!If UNIT = 6 Let U5$ = "IN PRODUCTION UNITS "
!UNIT = UNIT + 7
!Window Close 
!Window Off 
!Return 
!
CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
CNVTA = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 1 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA = DISP_COST;CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
Return 
!
L_20000: Rem   MXPRCONV    PRODUCT FILE UNITS CONVERT UNIBASIC 4<
Dim 2%,Q0[1]
Def FNN(H) = Int(Abs(H) * 10 ^ Q0[1] + .5) * 10 ^ - Q0[1] * Sgn(H)
Def FNT(H) = Int(Abs(H) * 10 ^ Q0[1]) * 10 ^ - Q0[1] * Sgn(H)
Def FNV(H) = Int(Abs(H) * 10 ^ Q0[1] + .9999999) * 10 ^ - Q0[1] * Sgn(H)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
BUNIT = 0
If CNVTU[2] <> 5 Goto L_20170
BUNIT = 1
CNVTU[2] = 1
Goto L_20180
L_20170: BUNIT = 0
L_20180: Rem
If SC = 0 Let SC = 10
If SR = 0 Let SR = 8
Mat Read #1,19,50;P9$;
Mat Read #1,115,40;Q0;
On CNVTU[2] + 1 Goto L_20250,L_20350,L_20350,L_20640
!Gosub ERR_SEARCH
L_20250: Rem CHECK IF VALID CONVERSION
For X1[1] = 0 To 1
  If CNVTU[X1[1]] = 0 Goto L_20330
  If CNVTU[X1[1]] = -1 Goto L_20330
  For X1[2] = 0 To 7
    If CNVTU[X1[1]] = PFU1[X1[2]] Goto L_20330
  Next X1[2]
  FLAG = 1 \ Goto L_20650
L_20330: Next X1[1]
FLAG = 0 \ Goto L_20650
L_20350: Rem CONVERT COST/PRICE/QTY
AMOUNT = CNVTA
For X1[1] = 0 To 1
  CMODE = 1 \ If X1[1] Let CMODE = -1
  If CNVTU[X1[1]] = 0 Goto L_20530
  If CNVTU[X1[1]] = -1 Goto L_20460
  For CUNIT = 0 To 7
    If PFU1[CUNIT] = CNVTU[X1[1]] Goto L_20450
  Next CUNIT
  FLAG = 0 \ Goto L_20650
L_20450: If CUNIT = 0 Goto L_20530
L_20460: If CNVTU[2] = 2 Let CMODE = - CMODE
  If CNVTU[X1[1]] <> -1 Goto L_20510
  If A[5] If CMODE < 0 Let AMOUNT = (AMOUNT * (A[6] / A[5])) / 100
  If A[6] If A[5] If CMODE > 0 Let AMOUNT = AMOUNT * 100 / (A[6] / A[5])
  Goto L_20530
L_20510: If CMODE > 0 Let AMOUNT = AMOUNT * PFU2[CUNIT - 1]
  If PFU2[CUNIT - 1] If CMODE < 0 Let AMOUNT = AMOUNT / PFU2[CUNIT - 1]
L_20530: Next X1[1]
If CNVTU[2] <> 1 Goto L_20580
If BUNIT Goto L_20580
If CNVTU[1] If CNVTU[1] <> PFU1[0] Let AMOUNT = FNR(AMOUNT)
If Fra(AMOUNT) If Not(CNVTU[1]) Or CNVTU[1] = PFU1[0] Let AMOUNT = FNU(AMOUNT)
L_20580: If CNVTU[2] <> 2 Goto L_20630
If Not(CNVTU[1]) Goto L_20630
If P9$[42,42] = "N" Let AMOUNT = FNN(AMOUNT)
If P9$[42,42] = "T" Let AMOUNT = FNT(AMOUNT)
If P9$[42,42] = "U" Let AMOUNT = FNV(AMOUNT)
L_20630: FLAG = 0 \ Goto L_20650
L_20640: Rem
L_20650: Rem RETURN FROM MODES 0-2
Return 
!
!
OUTEND: Rem EXIT PROGRAM
! dx close

If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!

Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 