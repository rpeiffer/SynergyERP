! >>> Program 379r
!
! description SCHEDULED DELIVERIES REPORT
!
! loadsave -w -n 100,10 -o prog/dxport/379r.dl4 src/379r.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 10, 2006  17:09:19
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/po/po379r.src (univ2) [txc] {16543}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem  po379r   SCHEDULED DELIVERIES REPORT
Rem  AUTHOR:  vst    MAY 2005
Rem  cct189446- Program to print out a report for Scheduled Deliveries.  The
!
Declare Intrinsic Function findchannel
Declare Intrinsic Sub InpBuf,String,Time,DateToJulian
!
!!Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,F,H4[3],PO1[9],X1,CHN
Dim 1%,CH_RPT,CH_SCRNTXT,CH_CNTRLLPT,CH_CNTRLPROG,STAT,MINSEL,MAXSEL,WHSENO
Dim 2%,H0[5],H3[4],X2
Dim 3%,J,J1,H8[9],PO3[12],X3[1],SORTREC
Dim 3%,POHREC,VDRREC,ENDDATE,STARTDATE,HOLDDATE,R9,PONOTESREC,PONUMBER
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[50],D8$[8]
Dim A$[264],M1$[60],X$[50],X1$[10]
Dim HOLDDATE$[6],ENDDATE$[6],STARTDATE$[6],STARTTIME$[5],ENDTIME$[5]
Dim SCRATCH$[80],TIME$[22],TOTMASK$[10],WHSENO$[2]
Dim F$[16],SORTKEY$[50],POHEAD$[20],PO_DUEDATE$[6],PONOTESKEY$[20],ANS$[2]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[900],tmp1$[900],tmp2$[500],tmp3$[500],tmp4$[2000]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
CH_RPT = 0
CH_SCRNTXT = 5
CH_CNTRLLPT = 6
CH_CNTRLPROG = 7
MINSEL = 1
MAXSEL = 1
Dim 1%,OPNRPT[MAXSEL]
Dim 1%,HARDCOPY[MAXSEL]
STAT = 1
OPNRPT[1] = 1 \ HARDCOPY[1] = 0
!
!!Call "prtopen",CH_RPT,CH_CNTRLLPT,CH_CNTRLPROG,STAT,HARDCOPY[SCR]
!!If Not(X1) Goto OPENFILES
!!X2 = Spc(5)
!!J$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
!!Open #1,J$
!
OPENFILES: Rem OPEN FILES
X1 = 0 \ X2 = 0
For K1 = 2 To 4
  Read J
  If J = -1 Goto GET_NEXT
  Read #1,88,J;J$;
  Ropen #K1,J$
GET_NEXT: Next K1
Read #1,3;J1$;
Mat Read #1,0,112;X2;
Gosub L_7700 \ D8$ = X$[1,8]
Data "2416","2400","2464"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 60 \ If J8 Let J9 = 20
J1 = 90 \ J2 = 0
CH_POHEAD = 2
CH_VENDOR = 3
CH_PONOTES = 4
CH_SORT = 9
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"379r",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("SPERIOD",tmp$) \ STARTDATE = tmp$
call dxget("ENDDATE",tmp$) \ If tmp$ = "" let ENDDATE = 999999 Else let ENDDATE = tmp$
call dxget("WHSENO",tmp$) \ WHSENO = tmp$
!
!Validation starting date
STARTDATE$ = STARTDATE Using "&&&&&&" \ HOLDDATE$ = STARTDATE$[5,6],STARTDATE$[1,4]
If STARTDATE <> 0 Call DateToJulian(1,HOLDDATE$,X1$,E) \ If E Let e$ = "Invalid starting date!" \ error 10000
HOLDDATE = HOLDDATE$ \ STARTDATE$ = HOLDDATE Using "&#####"
STARTDATE = STARTDATE$
!
!Validation ending date
HOLDDATE$ = " ",HOLDDATE$
ENDDATE$ = ENDDATE Using "&&&&&&" \ HOLDDATE$ = ENDDATE$[5,6],ENDDATE$[1,4] 
If ENDDATE <> 999999 Call DateToJulian(1,HOLDDATE$,X1$,E) \ If E Let e$ = "Invalid ending date!" \ error 10000
HOLDDATE = HOLDDATE$ \ ENDDATE$ = HOLDDATE Using "&#####"
If ENDDATE$ < STARTDATE$ let e$ = "Invalid ending date, must be >= starting date!" \ error 10000
ENDDATE = ENDDATE$
!
!Validation warehouse
If WHSENO < 1 Or WHSENO > 99 Let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!!BEGIN_: Rem
!!GET_DUE_DATE: Rem
!!Print 'CS';
!!Print @10,5;"SCHEDULED DELIVERIES REPORT"
!!Print @6,10;"Enter due date (MMDDYY), <CR>: for range E: to end   ";
!!Input ""STARTDATE$
!!If STARTDATE$[1,1] = "E" Goto OUTEND
!!If STARTDATE$[1,1] = "" Goto GET_RANGE
!!If Len(STARTDATE$) <> 6 Goto GET_DUE_DATE
!!HOLDDATE$ = " ",HOLDDATE$
!!HOLDDATE$[1,2] = STARTDATE$[5,6]
!!HOLDDATE$[3,4] = STARTDATE$[1,2]
!!HOLDDATE$[5,6] = STARTDATE$[3,4]
!!HOLDDATE = HOLDDATE$[1,6]
!!HOLDDATE$ = HOLDDATE Using "&#####"
!!STARTDATE$ = HOLDDATE$
!!ENDDATE$ = STARTDATE$
!!Goto CONTINUE_ON
!!GET_RANGE: Rem
!!Print 'CS';
!!Print @10,5;"SCHEDULED DELIVERIES REPORT"
!!Print @6,10;"Enter starting due date (MMDDYY), <CR>: for all,  E: to end   ";
!!Input ""STARTDATE$
!!If STARTDATE$ = "E" Goto OUTEND
!!If STARTDATE$ = ""
!!  STARTDATE$ = "000000"
!!  ENDDATE$ = "999999"
!!  Goto CONTINUE_ON
!!End If 
!!HOLDDATE$ = " ",HOLDDATE$
!!HOLDDATE$[1,2] = STARTDATE$[5,6]
!!HOLDDATE$[3,4] = STARTDATE$[1,2]
!!HOLDDATE$[5,6] = STARTDATE$[3,4]
!!HOLDDATE = HOLDDATE$[1,6]
!!HOLDDATE$ = HOLDDATE Using "&#####"
!!STARTDATE$ = HOLDDATE$
!!!!Print @8,12;"Enter ending due date (MMDDYY), <CR>: for all,  E: to end   ";
!!Input ""ENDDATE$
!!If ENDDATE$[1,1] = "E" Goto OUTEND
!!If ENDDATE$[1,1] = ""
!!  ENDDATE$ = "999999"
!!  Goto CONTINUE_ON
!!End If 
!!HOLDDATE$ = " ",HOLDDATE$
!!HOLDDATE$[1,2] = ENDDATE$[5,6]
!!HOLDDATE$[3,4] = ENDDATE$[1,2]
!!HOLDDATE$[5,6] = ENDDATE$[3,4]
!!HOLDDATE = HOLDDATE$[1,6]
!!HOLDDATE$ = HOLDDATE Using "&#####"
!!ENDDATE$ = HOLDDATE$
!!If ENDDATE$ < STARTDATE$
!!  Print 'RB MU CR CL';"STARTING DATE MUST BE LESS THAN ENDING DATE!! ";
!!  Signal 3,15
!!  Goto GET_DUE_DATE
!!End If 
!!CONTINUE_ON: Rem
!!STARTDATE = STARTDATE$
!!ENDDATE = ENDDATE$
!!WHSE_SELECT: Rem
!!Print @6,14;'CL';"Enter warehouse # to print for,  E: to end   ";
!!Input ""WHSENO$
!!If WHSENO$ = "E" Goto OUTEND
!!WHSENO = WHSENO$
!!If WHSENO < 1 Or WHSENO > 99 Goto WHSE_SELECT
!!Print @6,18;'CL';"Enter P: to print or E: to end   ";
!!Input ""ANS$
!!If ANS$ = "E" Goto OUTEND
!
!
TOTMASK$ = "------#.##"
!
!!Gosub OPEN_SORTFILE9
Gosub CLEAR_SORT
Gosub START_SORT
!
If J8
  tmp$ = "BAY",fdel$
  tmp$ = tmp$, "DUE DATE",fdel$
  tmp$ = tmp$, "PO #",fdel$
  tmp$ = tmp$, "VEND #",fdel$
  tmp$ = tmp$, "VENDOR NAME",fdel$
  tmp$ = tmp$, "DETAILS",fdel$
  tmp$ = tmp$, "START TIME",fdel$
  tmp$ = tmp$, "END TIME",fdel$
  tmp$ = tmp$, "TOTAL PCS",fdel$
  tmp$ = tmp$, "TOTAL CUBE",fdel$
  tmp$ = tmp$, "TOTAL WT",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,22;'CE';"PRINTING . . . PLEASE WAIT ";
!!If Err 0 Gosub ERR_ESCAPE
SORTKEY$ = " ",SORTKEY$
GET_NEXT_SORTKEY: Rem
Search #CH_SORT,3,1;SORTKEY$,POHREC,E
If E = 2 Goto END_OF_RANGE
Mat Read #CH_POHEAD,POHREC,0;H0;
Mat Read #CH_POHEAD,POHREC,222;H3;
Mat Read #CH_POHEAD,POHREC,242;H4;
Mat Read #CH_POHEAD,POHREC,250;H8;
Mat Read #CH_POHEAD,POHREC,330;PO1;
Mat Read #CH_POHEAD,POHREC,350;PO3;
VDRREC = SORTKEY$[20,25]
Mat Read #CH_VENDOR,VDRREC,0;A$;
Gosub PRINT_HEADINGS
Gosub PRINT_LINES
Gosub PRINT_PONOTES
Goto GET_NEXT_SORTKEY
Goto END_OF_RANGE
Goto OUTEND
!
PRINT_LINES: Rem ===================================================
If J8 
  tmp$ = H3[3] Using "######",fdel$
  tmp$ = tmp$, rtrim$(A$[1,30]),fdel$
  !
  tmp1$ = PO1[7] Using "##",fdel$
  tmp1$ = tmp1$, SORTKEY$[5,6],"/",SORTKEY$[7,8],"/",SORTKEY$[3,4],fdel$
  tmp1$ = tmp1$, H0[2] Using "######",fdel$
  STARTTIME$[1,2] = Int(PO3[7]) Using "&#"
  STARTTIME$[3,3] = ":"
  STARTTIME$[4,5] = Fra(PO3[7]) * 100 Using "&#"
  tmp3$ = STARTTIME$[1,5],fdel$
  ENDTIME$[1,2] = Int(PO3[8]) Using "&#"
  ENDTIME$[3,3] = ":"
  ENDTIME$[4,5] = Fra(PO3[8]) * 100 Using "&#"
  tmp3$ = tmp3$, ENDTIME$[1,5],fdel$
  tmp3$ = tmp3$,PO3[10] Using TOTMASK$,fdel$
  tmp3$ = tmp3$, PO3[9] Using TOTMASK$,fdel$
  tmp3$ = tmp3$, H8[1] Using TOTMASK$,fdel$
  tmp2$ = ""
  Return
End if
!
Gosub PRINT_HEADINGS
Print #0; Using "##"; Tab 1;PO1[7]; !!!bay
Print #0; Tab 5;SORTKEY$[5,6];"/";
Print #0;SORTKEY$[7,8];"/";
Print #0;SORTKEY$[3,4];
Print #0; Using "######"; Tab 15;H0[2];  !!po # 
Print #0; Using "######"; Tab 23;H3[3];  !!vend #
Print #0; Tab 32;A$[1,30];  !!vendor name
STARTTIME$[1,2] = Int(PO3[7]) Using "&#"
STARTTIME$[3,3] = ":"
STARTTIME$[4,5] = Fra(PO3[7]) * 100 Using "&#"
Print #0; Tab 68;STARTTIME$[1,5];
ENDTIME$[1,2] = Int(PO3[8]) Using "&#"
ENDTIME$[3,3] = ":"
ENDTIME$[4,5] = Fra(PO3[8]) * 100 Using "&#"
Print #0; Tab 79;ENDTIME$[1,5];
Print #0; Using TOTMASK$; Tab 86;PO3[10];
Print #0; Using TOTMASK$; Tab 98;PO3[9];
Print #0; Using TOTMASK$; Tab 110;H8[1];  !!total wt
Print #0;""
Return 
!
PRINT_HEADINGS: Rem ==========================
If J8 Return
!
J1 = J1 + 1
If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
Print #0;"\15\";
Print #0; Tab 10;D8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;"" \ J1 = J1 + 2
TIME$ = "" \ Call Time(TIME$)
Print #0;" - 379R - ";TIME$;
Print #0; Tab 50;"SCHEDULED DELIVERIES FOR  ";
If STARTDATE$[1,6] = "000000"
  Print #0;STARTDATE$[1,2];"/";
  Print #0;STARTDATE$[3,4];"/";
  Print #0;STARTDATE$[5,6];" to ";
Else 
  X2 = STARTDATE \ Gosub L_7700
  Print #0;X$;" to ";
End If 
X2 = ENDDATE \ Gosub L_7700
Print #0;X$
Print #0;""
J1 = J1 + 2
Print #0; Tab 0;"BAY";
Print #0; Tab 5;"DUE DATE";
Print #0; Tab 15;"  PO #";
Print #0; Tab 23;"VEND #";
Print #0; Tab 32;"VENDOR NAME";
Print #0; Tab 65;"START TIME";
Print #0; Tab 76;" END TIME";
Print #0; Tab 86;" TOTAL PCS";
Print #0; Tab 98;"TOTAL CUBE";
Print #0; Tab 110;"  TOTAL WT"
Print #0;""
J1 = J1 + 2
Return 
!
PRINT_PONOTES: Rem
M1$ = " ",M1$ \ tmp2$ = ""
PONOTESKEY$ = " ",PONOTESKEY$
M1 = 1
PONOTESKEY$ = H0[2] + M1 * 10 ^ 6 Using "#######"
GET_NEXT_NOTE: Rem
Search #CH_PONOTES,3,1;PONOTESKEY$,PONOTESREC,E
If E = 2 Goto END_PRINT_PONOTES
If PONOTESKEY$[1,1] = "2" Goto END_PRINT_PONOTES
PONUMBER = PONOTESKEY$[2,7]
If PONUMBER <> H0[2] Goto END_PRINT_PONOTES
Mat Read #CH_PONOTES,PONOTESREC,0;M1$;
Gosub PRINT_HEADINGS
!
If J8
  tmp2$ = tmp2$,rtrim$(M1$[1,50])," "
  Goto GET_NEXT_NOTE
End if
!
Print #0; Tab 38;M1$[1,50]
Goto GET_NEXT_NOTE
END_PRINT_PONOTES: Rem
!
If J8 
  tmp4$ = tmp1$,tmp$,tmp2$,fdel$,tmp3$
  call addtostr(e$,rstr$,tmp4$+rdel$)
  return
End if
!
Print #0;""
J1 = J1 + 1
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
!!OPEN_SORTFILE9: Rem
!!SCRATCH$ = "[1:1] 6/SORTWORK" + Str$(Spc(6)) + "!"
!!Build #9,SCRATCH$
!!R9 = 25 \ Search #9,0,1;F$,R9,E !!\ If E Gosub ERR_SEARCH
!!R9 = 1 \ Search #9,0,0;F$,R9,E !!\ If E Gosub ERR_SEARCH
!!R9 = 0 \ Search #9,1,0;F$,R9,E !!\ If E Gosub ERR_SEARCH
!!Return 
!
CLEAR_SORT: Rem ==========================clear the sort file
SORTKEY$ = " ",SORTKEY$
CLEARSORT_LOOP: Rem
Search #CH_SORT,3,1;SORTKEY$,SORTREC,E
If Not(E)
  Search #CH_SORT,5,1;SORTKEY$,SORTREC,E
  If E Let e$ = "syserrorfile 379r sortfile mode (m)=5 keyno (k)=1 r=",SORTREC," e=",e," keyval (k$)=",SORTKEY$ \ error 10000
  !!If E Gosub ERR_SEARCH
  Goto CLEARSORT_LOOP
End If 
Return 
!
START_SORT: Rem
!!Print @0,22;'CE';"SORTING . . . PLEASE WAIT ";
SORTKEY$ = " ",SORTKEY$
POHEAD$ = " ",POHEAD$
GET_NEXT_REC: Rem
Search #CH_POHEAD,3,1;POHEAD$,POHREC,E
If E = 2 Goto END_SORT
POSTAT = POHEAD$[1,2]
If POSTAT > 6 Goto END_SORT
Mat Read #CH_POHEAD,POHREC,242;H4;
If H4[1] <> WHSENO Goto GET_NEXT_REC
Mat Read #CH_POHEAD,POHREC,0;H0;
PO_DUEDATE$ = H0[4] Using "&#####"
If PO_DUEDATE$ < STARTDATE$ Goto GET_NEXT_REC
If PO_DUEDATE$ > ENDDATE$ Goto GET_NEXT_REC
Mat Read #CH_POHEAD,POHREC,350;PO3;
If Not(PO3[7]) Goto GET_NEXT_REC
Mat Read #CH_POHEAD,POHREC,0;H0;
Mat Read #CH_POHEAD,POHREC,330;PO1;
SORTKEY$ = " ",SORTKEY$
SORTKEY$[1,2] = PO1[7] Using "##"
SORTKEY$[3,8] = H0[4] Using "&#####"
SORTKEY$[9,13] = PO3[7] Using "##.##"
SORTKEY$[14,19] = H0[2] Using "######"
SORTKEY$[20,25] = H0[1] Using "######"
Search #CH_SORT,4,1;SORTKEY$,POHREC,E
If E Let e$ = "syserrorfile 379r sortfile mode (m)=4 keyno (k)=1 r=",POHREC," e=",e," keyval (k$)=",SORTKEY$ \ error 10000
Goto GET_NEXT_REC
END_SORT: Rem
SORTKEY$ = " ",SORTKEY$
Return 
!
END_OF_RANGE: Rem
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
!!J2 = 0
!!Goto GET_DUE_DATE
!!End 
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
!!Print 'CS'
!!Chain "MX000C"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 