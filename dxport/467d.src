!!>>> Program 467d
!
! description   ABC ANALYSIS - ANALYSIS REPORT  
!
! loadsave -w -n 100,10 -o prog/dxport/467d.dl4 src/467d.src
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 29, 2002  10:21:33
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx/mx467d.src (univ2) [kag] {64259}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc" ! dx
Declare Intrinsic Sub FormatDate,InpBuf,JulianToDate,String,Time
!!Option Default Dialect IRIS1
Rem ***************************************************************
Rem ***************************************************************
Rem *-
Dim SYSDATE$[22],COMP$[30],TITLE$[60]
Dim SORT_KEY$[14],DATE_STR$[8]
Dim 1%,RETVAL
Dim 2%,I,X,Y,CUR_SNUM
Dim J$[75],J0$[10],J1$[75],J4$[75],J5$[75]
Dim 4%,J1
Dim 2%,SUMMARYONLY
Dim 2%,INPUTCUST,SUMMARYSORT
Dim TODAY$[8],DASHED_LINE$[132],DOUBLE_DASHED_LINE$[132]
Dim 2%,LINE_NO,PAGE_NO
Dim CPD_KEY$[8],TOT_KEY$[8],SNAME$[30],C$[157],ODESC$[60]
Dim 2%,CPD_REC_NO,TOT_REC_NO,SNUM,CD[2],APD,YEARS[3],MONTHS[3]
Dim 3%,SCORE[3]
Dim 3%,AR[4],SALES[3,7],GPD[3,7],ORDERS[3,7],LINES[3,7],ADJ_GPD[3,7]
Dim 3%,BROKEN[3],BROKEN_GPD[3],COF
Dim 3%,PR_TOT[3,5]
Dim 3%,TMP
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
! -  dx add xport reporting code
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]

!Window On 
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Gosub OPENFILES
Read #1,3,0;COMP$;
TCOMP: If COMP$[Len(COMP$)] = " " Let COMP$ = COMP$[1,Len(COMP$) - 1] \ Goto TCOMP
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!INPUT


CALL DXGET("INPUTCUST",TMP$) \ INPUTCUST=TMP$
CALL DXGET("SUMMARYONLY",TMP$) \ if tmp$=""  let SUMMARYONLY=0 else  SUMMARYONLY=1!!CHECK
CALL DXGET("SUMMARYSORT",TMP$) \  SUMMARYSORT=TMP$ !!DROPLIST

if inputcust<>0 let summaryonly=0;summarysort=1 ! if customer - no summ & always 1

!!Gosub DISPLAYSCREEN
Gosub GETPARAMS \ If Not(RETVAL) Goto OUTEND
Gosub SORTABCDATA

Gosub PRINTREPORT
!!OUTEND
goto outend!!!
OPENFILES: Rem
C2 = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
J$ = C2 Using "2/ABCDATA#" \ If C2 > 9 Let J$ = C2 Using "2/ABCDATA##"
Ropen #2,J$
Return 
CLOSEFILES: Rem
Close #2
Return 
!!DISPLAYSCREEN: Rem
!!Call Time(SYSDATE$)
!!Print 'CS';@0,0;"-MX467D-"
!!Print @40 - (Len(COMP$) / 2),0;'BR';COMP$;'ER';
!!Print @58,0;SYSDATE$
!!Print @0,1;"----------------------------------------";
!!Print "----------------------------------------";
!!TITLE$ = "ABC ANALYSIS - ANALYSIS REPORT"
!!Print @40 - (Len(TITLE$) / 2),2;TITLE$;
!!Print @0,3;"----------------------------------------";
!!Print "----------------------------------------";
!!Print @1,5;" 1> CUST (0=ALL)"
!!Print @1,6;" 2> SUMMARY ONLY (Y/<CR>)"
!!Print @1,7;" 3> SORT SUMMARY (1/2/3)"
!!Return 
GETPARAMS: Rem
RETVAL = 1!!!!!!!!!!!!!!!!!!!!!!!!
!!INPUTCUST = 0
!!SUMMARYONLY = 0
!!SUMMARYSORT = 1
!!For I = 1 To 3
!!  !!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!  On I Gosub GETFLD1,GETFLD2,GETFLD3
!!  !!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!  If I = 1 And INPUTCUST Let I = 3
!!Next I
!!PARAMLOOP: Rem
!!Print @0,23;'CL';@17,23;
!!Print "Enter #:field to edit   P: print  E: exit  ";
!!Input Len 7;""J$
!!Call String(1,J$)
!!If J$ = "P" Goto ENDPARAMLOOP
!!If J$ = "E" Let RETVAL = 0 \ Goto ENDPARAMLOOP
!!I = J$
!!If INPUTCUST And I > 1
!!  Call "errmsg","Option not active unless printing all customers!"
!!  Goto PARAMLOOP
!!End If 
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On I Gosub GETFLD1,GETFLD2,GETFLD3
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!If I < 1 Or I > 3 Print 'RB';
!!Goto PARAMLOOP
!!ENDPARAMLOOP: Rem
Return 
!!GETFLD1: Rem
!!J0$ = "3004063005"
!!J1 = INPUTCUST
!!J5$ = "Enter customer to print report for,  0: for ALL."
!!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!!INPUTCUST = J1
!!Return 
!!GETFLD2: Rem
!!J0$ = "6004013006"
!!J1 = SUMMARYONLY
!!J5$ = "Enter  Y: to print salesrep/grand totals only,  N: for customer"," detail."
!!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!!SUMMARYONLY = J1
!!Return 
!!GETFLD3: Rem
!!J0$ = "3004023007"
!!J1 = SUMMARYSORT
!!J5$ = "Sort customer ranking by  1: current year,  2: last year,  3: ","2 years ago."
!!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!!If J1 < 1 Or J1 > 3
!!  Call "errmsg","Must enter 1, 2, or 3!"
!!  Goto GETFLD3
!!End If 
!!SUMMARYSORT = J1
!!Return 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!END INPUT
SORTABCDATA: Rem
!!Print @0,23;'CL';"SORTING...";
If INPUTCUST
  CPD_KEY$ = "C",INPUTCUST Using "######"
  Search #2,2,1;CPD_KEY$,CPD_REC_NO,E !!\ If E > 1 Gosub ERR_SEARCH
  If E Return 
  Read #2,CPD_REC_NO,0;SNUM;
  SORT_KEY$ = SNUM Using "###",CPD_KEY$[2,7]
  Search #9,4,1;SORT_KEY$,CPD_REC_NO,E !!\ If E Gosub ERR_SEARCH
  !Print @0,23;'CL';
  Return 
End If 
CPD_KEY$ = "C"
ABCSORTLOOP: Rem
Search #2,3,1;CPD_KEY$,CPD_REC_NO,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto ENDABCSORTLOOP
If CPD_KEY$[1,1] <> "C" Goto ENDABCSORTLOOP
Read #2,CPD_REC_NO,0;SNUM;
Mat Read #2,CPD_REC_NO,1338;SCORE;
SORT_KEY$ = SNUM Using "###",CPD_KEY$[2,7]
Search #9,4,1;SORT_KEY$,CPD_REC_NO,E !!\ If E Gosub ERR_SEARCH
If SCORE[SUMMARYSORT] >= 0
  SORT_KEY$ = "1",SCORE[SUMMARYSORT] Using "####.##",CPD_KEY$[2,7]
Else 
  SORT_KEY$ = "0",(1000 + SCORE[SUMMARYSORT]) Using "####.##",CPD_KEY$[2,7]
End If 
Search #9,4,2;SORT_KEY$,CPD_REC_NO,E !!\ If E Gosub ERR_SEARCH
Goto ABCSORTLOOP
ENDABCSORTLOOP: Rem
!Print @0,23;'CL';
Return 
PRINTREPORT: Rem
!Print @0,23;'CL';"PRINTING...";
PAGE_NO = 0
DASHED_LINE$ = "-",DASHED_LINE$
DOUBLE_DASHED_LINE$ = "=",DOUBLE_DASHED_LINE$
TODAY$ = Tim(5)
Call JulianToDate(TODAY$)
SORT_KEY$ = ""
CUR_SNUM = -1
PRINTLOOP: Rem
Search #9,3,1;SORT_KEY$,CPD_REC_NO,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto ENDPRINTLOOP
Read #2,CPD_REC_NO,0;SNUM;
If CUR_SNUM <> SNUM
  If CUR_SNUM <> -1 Gosub PRINTSALESMAN
  CUR_SNUM = SNUM
End If 
If Not(SUMMARYONLY) Gosub PRINTCUST
Goto PRINTLOOP
ENDPRINTLOOP: Rem
If PAGE_NO < 1 Return 
If INPUTCUST Print #0;"\14\"; \ Return 
Gosub PRINTSALESMAN
Gosub PRINTGRANDTOTALS
PAGE_NO = 0
SORT_KEY$ = "Z",SORT_KEY$
SUMMARYLOOP: Rem
Search #9,6,2;SORT_KEY$,CPD_REC_NO,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto ENDSUMMARYLOOP
Gosub PRINTSUMMARYLINE
Goto SUMMARYLOOP
ENDSUMMARYLOOP: Rem
Return 
PRINTCUST: Rem
Read #2,CPD_REC_NO,4;SNAME$;
Read #2,CPD_REC_NO,34;C$;
Mat Read #2,CPD_REC_NO,192;CD;
Read #2,CPD_REC_NO,204;APD;
Mat Read #2,CPD_REC_NO,208;AR;
Read #2,CPD_REC_NO,238;ODESC$[1];
Read #2,CPD_REC_NO,250;ODESC$[13];
Read #2,CPD_REC_NO,262;ODESC$[25];
Read #2,CPD_REC_NO,274;ODESC$[37];
Read #2,CPD_REC_NO,286;ODESC$[49];
Mat Read #2,CPD_REC_NO,298;YEARS;
Mat Read #2,CPD_REC_NO,314;MONTHS;
Mat Read #2,CPD_REC_NO,330;SALES;
Mat Read #2,CPD_REC_NO,522;GPD;
Mat Read #2,CPD_REC_NO,714;ORDERS;
Mat Read #2,CPD_REC_NO,906;LINES;
Mat Read #2,CPD_REC_NO,1098;ADJ_GPD;
Mat Read #2,CPD_REC_NO,1290;BROKEN;
Mat Read #2,CPD_REC_NO,1314;BROKEN_GPD;
Mat Read #2,CPD_REC_NO,1338;SCORE;
Read #2,CPD_REC_NO,1362;COF;
If PAGE_NO > 0 Print #0;"\14\";
PAGE_NO = PAGE_NO + 1
Print #0;TODAY$; Tab (44);
Print #0;"ABC ANALYSIS - CUSTOMER ABC ANALYSIS REPORT";
Print #0; Tab (123);"PAGE: ";PAGE_NO
Print #0;"SALESMAN: ";SNUM Using "###";" - ";SNAME$
Print #0;DOUBLE_DASHED_LINE$
Print #0;"+";DASHED_LINE$[2,53];"+";DASHED_LINE$[55,132]
Print #0;"| ";SORT_KEY$[4,9];" - "; Tab (11);C$[1,30]; Tab (53);"|";
Print #0; Tab (60);"LAST ORDER: ";
If CD[1] = 0
  DATE_STR$ = "NEVER"
Else 
  DATE_STR$ = CD[1] Using "&&&&&&"
  if date_str$[1,2]<>"**"
  Call FormatDate(DATE_STR$)
  endif
End If 
Print #0;DATE_STR$; Tab (85);"LAST PAYMENT: ";
If CD[2] = 0
  DATE_STR$ = "NONE"
Else 
  DATE_STR$ = CD[2] Using "&&&&&&"
  if date_str$[1,2]<>"**"
  Call FormatDate(DATE_STR$)
	endif
End If 
Print #0;DATE_STR$
Print #0;"| "; Tab (11);C$[31,60]; Tab (53);"|";
Print #0; Tab (60);"TERMS: ";C$[118,133]; Tab (85);
Print #0;"PRICE TYPE: ";C$[134,157]
If C$[61,61] <> " "
  Print #0;"| "; Tab (11);C$[61,90]; Tab (53);"|";
Else 
  Print #0;"| "; Tab (11);C$[91,105];", ";C$[106,107];"  ";
  Print #0;C$[108,117]; Tab (53);"|";
End If 
Print #0; Tab (60);"AVG PAY DAYS: ";APD Using "-###&.&&";
Print #0; Tab (85);"UNAPPLIED CREDIT: ";AR[0] Using "$,$$$,$$&.&&"
If C$[61,61] <> " "
  Print #0;"| "; Tab (11);C$[91,105];", ";C$[106,107];"  ";
  Print #0;C$[108,117]; Tab (53);"|";
Else 
  Print #0;"|"; Tab (53);"|";
End If 
Print #0; Tab (60);"CUR: ";AR[1] Using "$$,$$$,$$&";"  ";
Print #0;">30: ";AR[2] Using "$$,$$$,$$&";"  ";
Print #0;">60: ";AR[3] Using "$$,$$$,$$&";"  ";
Print #0;">90: ";AR[4] Using "$$,$$$,$$&";"  "
If CD[0] !* for some reason, sometimes this isn't set
  DATE_STR$ = CD[0] Using "&&&&&&"
    if date_str$[1,2]<>"**"
  Call FormatDate(DATE_STR$)
  endif
Else 
  DATE_STR$ = "**/**/**"
End If 
Print #0;"| DATE ESTABLISHED: ";DATE_STR$; Tab (53);"|";
Print #0; Tab (60);"OVERHEAD FACTOR: ";COF Using "#.##"
Print #0;"+";DASHED_LINE$[2,53];"+"
Print #0;
Gosub PRINTORDERDETAILS
Print #0;
Print #0;"**** RATING ****";
Print #0; Tab (29);
For X = 3 To 1 Step -1
  Print #0;SCORE[X] Using "----&.&&";"            ";
Next X
Print #0;
Return 
PRINTSALESMAN: Rem
TOT_KEY$ = "S",CUR_SNUM Using "######"
Search #2,2,1;TOT_KEY$,TOT_REC_NO,E
!!If E > 1 Gosub ERR_SEARCH
If E Return 
Read #2,TOT_REC_NO,4;SNAME$;
Read #2,TOT_REC_NO,238;ODESC$[1];
Read #2,TOT_REC_NO,250;ODESC$[13];
Read #2,TOT_REC_NO,262;ODESC$[25];
Read #2,TOT_REC_NO,274;ODESC$[37];
Read #2,TOT_REC_NO,286;ODESC$[49];
Mat Read #2,TOT_REC_NO,298;YEARS;
Mat Read #2,TOT_REC_NO,314;MONTHS;
Mat Read #2,TOT_REC_NO,330;SALES;
Mat Read #2,TOT_REC_NO,522;GPD;
Mat Read #2,TOT_REC_NO,714;ORDERS;
Mat Read #2,TOT_REC_NO,906;LINES;
Mat Read #2,TOT_REC_NO,1098;ADJ_GPD;
Mat Read #2,TOT_REC_NO,1290;BROKEN;
Mat Read #2,TOT_REC_NO,1314;BROKEN_GPD;
If PAGE_NO > 0 Print #0;"\14\";
PAGE_NO = PAGE_NO + 1
Print #0;TODAY$; Tab (44);
Print #0;"ABC ANALYSIS - CUSTOMER ABC ANALYSIS REPORT";
Print #0; Tab (123);"PAGE: ";PAGE_NO
Print #0;"SALESMAN: ";CUR_SNUM;" - ";SNAME$;
Print #0; Tab (109);"*** SALESMAN TOTALS ***"
Print #0;DOUBLE_DASHED_LINE$
Print #0;
Print #0;"*** ORDER BREAKDOWN ***"
Gosub PRINTORDERDETAILS
Return 
PRINTGRANDTOTALS: Rem
TOT_KEY$ = "T     0"
Search #2,2,1;TOT_KEY$,TOT_REC_NO,E
!!If E > 1 Gosub ERR_SEARCH
If E Return 
Read #2,TOT_REC_NO,238;ODESC$[1];
Read #2,TOT_REC_NO,250;ODESC$[13];
Read #2,TOT_REC_NO,262;ODESC$[25];
Read #2,TOT_REC_NO,274;ODESC$[37];
Read #2,TOT_REC_NO,286;ODESC$[49];
Mat Read #2,TOT_REC_NO,298;YEARS;
Mat Read #2,TOT_REC_NO,314;MONTHS;
Mat Read #2,TOT_REC_NO,330;SALES;
Mat Read #2,TOT_REC_NO,522;GPD;
Mat Read #2,TOT_REC_NO,714;ORDERS;
Mat Read #2,TOT_REC_NO,906;LINES;
Mat Read #2,TOT_REC_NO,1098;ADJ_GPD;
Mat Read #2,TOT_REC_NO,1290;BROKEN;
Mat Read #2,TOT_REC_NO,1314;BROKEN_GPD;
If PAGE_NO > 0 Print #0;"\14\";
PAGE_NO = PAGE_NO + 1
Print #0;TODAY$; Tab (44);
Print #0;"ABC ANALYSIS - CUSTOMER ABC ANALYSIS REPORT";
Print #0; Tab (123);"PAGE: ";PAGE_NO
Print #0;"*** COMPANY GRAND TOTALS ***";
Print #0; Tab (104);"*** COMPANY GRAND TOTALS ***"
Print #0;DOUBLE_DASHED_LINE$
Print #0;
Print #0;"*** ORDER BREAKDOWN ***"
Gosub PRINTORDERDETAILS
Return 
PRINTORDERDETAILS: Rem*
Mat PR_TOT = Zer
For X = 1 To 3
  For Y = 1 To 7
    PR_TOT[X,1] = PR_TOT[X,1] + SALES[X,Y]
    PR_TOT[X,2] = PR_TOT[X,2] + GPD[X,Y]
    PR_TOT[X,3] = PR_TOT[X,3] + ORDERS[X,Y]
    PR_TOT[X,4] = PR_TOT[X,4] + LINES[X,Y]
    PR_TOT[X,5] = PR_TOT[X,5] + ADJ_GPD[X,Y]
  Next Y
Next X
Print #0; Tab (21);ODESC$[1]; Tab (38);ODESC$[13]; Tab (50);
Print #0;ODESC$[25]; Tab (63);ODESC$[37]; Tab (77);ODESC$[49]; Tab (95);
Print #0;"OTHER"; Tab (107);"CREDITS"; Tab (121);"OVERALL"
Print #0; Tab (21);DASHED_LINE$[22,128]
For X = 3 To 1 Step -1
  Print #0;"# ORDERS: ";YEARS[X] Using "&&"; Tab (23);
  For Y = 1 To 7
    Print #0;ORDERS[X,Y] Using "###,###";"       ";
  Next Y
  Print #0;PR_TOT[X,3] Using "###,###"
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"# ORDER LINES: ";YEARS[X] Using "&&"; Tab (23);
  For Y = 1 To 7
    Print #0;LINES[X,Y] Using "###,###";"       ";
  Next Y
  Print #0;PR_TOT[X,4] Using "###,###"
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"AVG LINES/ORDER: ";YEARS[X] Using "&&"; Tab (24);
  For Y = 1 To 7
    If ORDERS[X,Y] <> 0
      Print #0;LINES[X,Y] / ORDERS[X,Y] Using "###.##";
    Else 
      Print #0;0 Using "###.##";
    End If 
    Print #0;"        ";
  Next Y
  If PR_TOT[X,3] <> 0
    Print #0;PR_TOT[X,4] / PR_TOT[X,3] Using "###.##"
  Else 
    Print #0;0 Using "###.##"
  End If 
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"TOTAL SALES $: ";YEARS[X] Using "&&"; Tab (19);
  For Y = 1 To 7
    Print #0;SALES[X,Y] Using "---,---,--&";"   ";
  Next Y
  Print #0;PR_TOT[X,1] Using "---,---,--&"
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"AVG SLS $/ORDER: ";YEARS[X] Using "&&"; Tab (20);
  For Y = 1 To 7
    If ORDERS[X,Y] <> 0
      Print #0;SALES[X,Y] / ORDERS[X,Y] Using "--,---,--&";
    Else 
      Print #0;0 Using "--,---,--&";
    End If 
    Print #0;"    ";
  Next Y
  If PR_TOT[X,3] <> 0
    Print #0;PR_TOT[X,1] / PR_TOT[X,3] Using "--,---,--&"
  Else 
    Print #0;0 Using "--,---,--&"
  End If 
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"TOTAL GP $: ";YEARS[X] Using "&&"; Tab (20);
  For Y = 1 To 7
    Print #0;GPD[X,Y] Using "--,---,--&";"    ";
  Next Y
  Print #0;PR_TOT[X,2] Using "--,---,--&"
  Print #0;"    (ADJUSTED)"; Tab (20);
  For Y = 1 To 7
    Print #0;ADJ_GPD[X,Y] Using "--,---,--&";"    ";
  Next Y
  Print #0;PR_TOT[X,5] Using "--,---,--&"
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"AVG GP $/ORDER: ";YEARS[X] Using "&&"; Tab (20);
  For Y = 1 To 7
    If ORDERS[X,Y] <> 0
      Print #0;GPD[X,Y] / ORDERS[X,Y] Using "--,---,--&";
    Else 
      Print #0;0 Using "--,---,--&";
    End If 
    Print #0;"    ";
  Next Y
  If PR_TOT[X,3] <> 0
    Print #0;PR_TOT[X,2] / PR_TOT[X,3] Using "--,---,--&"
  Else 
    Print #0;0 Using "--,---,--&"
  End If 
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"GPM: ";YEARS[X] Using "&&"; Tab (23);
  For Y = 1 To 7
    If Y = 7
      MULTIPLIER = -100
    Else 
      MULTIPLIER = 100
    End If 
    If SALES[X,Y] <> 0
      Print #0;(GPD[X,Y] / SALES[X,Y]) * MULTIPLIER Using "---&.&&";"%";
    Else 
      Print #0;0 Using "-##&.&&";"%";
    End If 
    Print #0;"      ";
  Next Y
  If PR_TOT[X,1] <> 0
    Print #0;(PR_TOT[X,2] / PR_TOT[X,1]) * 100 Using "---&.&&";"%"
  Else 
    Print #0;0 Using "-##&.&&";"%"
  End If 
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"% OF TOTAL SALES $: ";YEARS[X] Using "&&"; Tab (23);
  TMP = PR_TOT[X,1] / 100
  For Y = 1 To 7
    If TMP <> 0
      Print #0;SALES[X,Y] / TMP Using "---&.&&";"%";
    Else 
      Print #0;0 Using "---&.&&";"%";
    End If 
    Print #0;"      ";
  Next Y
  Print #0;
Next X
Print #0;
For X = 3 To 1 Step -1
  Print #0;"% OF TOTAL GP $: ";YEARS[X] Using "&&"; Tab (23);
  TMP = PR_TOT[X,2] / 100
  For Y = 1 To 7
    If TMP <> 0
      Print #0;GPD[X,Y] / TMP Using "---&.&&";"%";
    Else 
      Print #0;0 Using "---&.&&";"%";
    End If 
    Print #0;"      ";
  Next Y
  Print #0;
Next X
Print #0;
Print #0; Tab (35);YEARS[3] Using "&&"; Tab (55);YEARS[2] Using "&&";
Print #0; Tab (75);YEARS[1] Using "&&"
Print #0; Tab (35);"--"; Tab (55);"--"; Tab (75);"--"
Print #0;"AVG ORDERS/MONTH"; Tab (30);
For X = 3 To 1 Step -1
  If MONTHS[X] <> 0
    Print #0;PR_TOT[X,3] / MONTHS[X] Using "###,###";"             ";
  Else 
    Print #0;0 Using "###,###";"             ";
  End If 
Next X
Print #0;
Print #0;"AVG SALES $/MONTH"; Tab (27);
For X = 3 To 1 Step -1
  If MONTHS[X] <> 0
    Print #0;PR_TOT[X,1] / MONTHS[X] Using "--,---,--&";"          ";
  Else 
    Print #0;0 Using "--,---,--&";"             ";
  End If 
Next X
Print #0;
Print #0;"AVG GP $/MONTH"; Tab (27);
For X = 3 To 1 Step -1
  If MONTHS[X] <> 0
    Print #0;PR_TOT[X,2] / MONTHS[X] Using "--,---,--&";"          ";
  Else 
    Print #0;0 Using "--,---,--&";"             ";
  End If 
Next X
Print #0;
Print #0;"    (ADJUSTED)"; Tab (27);
For X = 3 To 1 Step -1
  If MONTHS[X] <> 0
    Print #0;PR_TOT[X,5] / MONTHS[X] Using "--,---,--&";"          ";
  Else 
    Print #0;0 Using "--,---,--&";"             ";
  End If 
Next X
Print #0;
Print #0;"WHSE BROKEN/TOTAL"; Tab (22);
For X = 3 To 1 Step -1
  Print #0;BROKEN[X] Using "###,###";"/";
  Print #0;LINES[X,1] Using "###,###";"     ";
Next X
Print #0;
Print #0;"GP $ ON BROKEN"; Tab (27);
For X = 3 To 1 Step -1
  Print #0;BROKEN_GPD[X] Using "--,---,--&";"          ";
Next X
Print #0;
Return 
PRINTSUMMARYHEADING: Rem
Print #0;"\14\";
PAGE_NO = PAGE_NO + 1
Print #0;TODAY$; Tab (39);
Print #0;"ABC ANALYSIS - CUSTOMER ABC ANALYSIS REPORT - SUMMARY";
Print #0; Tab (123);"PAGE: ";PAGE_NO
Print #0;DOUBLE_DASHED_LINE$
Print #0;"CUSTOMER"; Tab (10);"NAME"; Tab (48);YEARS[3] Using "&&"; Tab (58);
Print #0;YEARS[2] Using "&&"; Tab (68);YEARS[1] Using "&&"
Print #0;DOUBLE_DASHED_LINE$
LINE_NO = 5
Return 
PRINTSUMMARYLINE: Rem
If Not(PAGE_NO) Or LINE_NO > 60 Gosub PRINTSUMMARYHEADING
Read #2,CPD_REC_NO,34;C$;
Mat Read #2,CPD_REC_NO,298;YEARS;
Mat Read #2,CPD_REC_NO,1338;SCORE;
Print #0;SORT_KEY$[9,14]; Tab (10);C$[1,30]; Tab (42);
Print #0;SCORE[3] Using "----&.&&"; Tab (52);
Print #0;SCORE[2] Using "----&.&&"; Tab (62);
Print #0;SCORE[1] Using "----&.&&"
LINE_NO = LINE_NO + 1
Return 

OUTEND: Rem
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If
Gosub CLOSEFILES
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!GOSUB L_XML
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!

Try Call dxclose() Else REM
End 
!!Chain "MX467"
!!Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!!If Spc(8) = 99 ! "escape hit/return back
!!  Print 'RB ML';" ";'ML';
!!  Return -1
!!End If 
!!If Spc(8) = 123 ! "record lock
!!  Escdis 
!!  Window Open @0,0; Size 30,3; Using ""
!!  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
!!  Signal 3,50
!!  Window Close 
!!  Escclr 
!!  Return -1
!!End If 
!!Dim 2%
!!Window Off 
!!Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
!!ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
!!If ENUM = 157 Let CTERR = Err(8)
!!Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
!!Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
!!Goto ERR_MAIN
!!ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
!!Dim 2%
!!Window Off 
!!Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
!!ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
!!If E = 5 Let CTERR = Err(8)
!!Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
!!Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
!!Goto ERR_MAIN
!!ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
!!If Spc(8) <> 99 Goto ERR_TRAP
!!If Err 0 Rem
!!CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
!!If Err 0 Gosub ERR_TRAP
!!Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
!!Input Len 16385;""ABREQ$
!!Call String(1,ABREQ$)
!!Print @0,Msc(34) - 1;'CL';
!!If Err 0 Gosub ERR_ESCAPE
!!If ABREQ$ <> "Y"
!!  Print 'ML';" ";'ML';
!!  Return -1
!!End If 
!!Goto OUTEND
!!ERR_MAIN: Rem "main error handling logic
!!If Err 0 Rem
!!Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
!!PNAME$ = Msc$(4)
!!Call String(1,PNAME$)
!!POS_ = 1;POS1 = 0
!!NAMEPARSE: Rem "get program name from path
!!Search PNAME$[POS_],"/",POS1
!!If POS1
!!  POS_ = (POS_ + POS1)
!!  Goto NAMEPARSE
!!End If 
!!Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
!!Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
!!Print "TRACE: ";'CL';
!!STACKLOOP: Rem "print nesting information
!!Print Using "<#####> ";Spc(16);
!!If Spc(14) Goto STACKLOOP
!!Print 'CR';"************************************"
!!Close #0
!!Open #0,"errorlog"
!!Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
!!Close #0
!!Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
!!PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
!!Call String(2,PNAME$)
!!System 28,PNAME1$
!!Call String(5,PNAME2$)
!!PNAME2$ = " ",PNAME2$
!!PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
!!Call InpBuf(PNAME2$)
!!Stop 
!!Rem {end rtn.error.s}


include "src/callmainerrnet.inc"
End 