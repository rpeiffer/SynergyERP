! >>> Program 454sp
!
! description Customer Product Sales (MTD/YTD summary)
!
! loadsave -w -n 100,10 -o prog/dxport/454sp.dl4 src/454sp.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem MX454sp - CUSTOMER Ship to/PRODUCT SALES (FOR ACME) 
Rem AUTHOR: DD   APR  9, 1987
Rem LAST UPDATE:  DAVE
Rem BEDIT Version: 2.3 OBJECT CODE     Created: APR 27, 2012  10:12:36
Rem /w2/papermaster/r2005//usr/acct/dave/work/custom/xrev9/mx454.src (univ2) [dave] {28859}
Rem  Copyright (c) 2012 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
  Declare External Function getmsg$,expandarray
  !
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Declare Intrinsic Sub InpBuf,String,Time
! Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim CUSTNAME$[30],A$[156],P$[12],STPROD$[12],LSTPROD$[12],SPACES$[12]
Dim 1%,M9,WHSE,F,X1,Y1,LPC3[4],CLFLAG,FYE,MONTH1,GL2[4],GL[17],FMONTH[25],BOYMONTH
dim 1%,ch_pw
DIM 1%,warehs
dim 2%,sship,eship
Dim 2%,C1[2],D9[5],X4,X2,STSLSM,LSTSLSM,STCUST,LSTCUST,LPC1[2],CLIENT,P8[14],WHCLIENT,DIVCLIENT
Dim 3%,S1[12,2],S2[12,2],C5[5],J,X3,T9[20],T8[20],T7[20],DIV,S5[25,2],S0[12,2]
Dim 3%,AMOUNT,GPPCT,LPC2[2],LPR[4],LPRICE,LCOST,parm[10],whmisc2[7]
Dim 3%,r[50],tmp3,tmp4
dim keyship$[50],slname$[30],keysl$[50],slcust$[20]
dim 2%,SLSLSM
Dim P9$[50],Z1$[50],S1$[50],K10$[50],K9$[50],K4$[50]
Dim J$[75],J0$[10],J1$[75],CNAME$[30],J2$[40],J3$[40],J4$[75],ARDATE$[8]
Dim K1$[50],K2$[6],K3$[20],X$[10],T9$[26],STCUST$[6],LSTCUST$[6],K11$[4]
Dim K12$[30],GL$[140],P8$[8],xmask$[30],xmask1$[30],kpw$[50]
Dim J5$[75],J6$[40],J7$[75],J9$[75]
Dim SLSMNAME$[30],SCUST$[6],SSLSM$[3],PRICE$[1],ODATE$[6],LPRICE$[10]
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9
Dim 4%,J1
Dim 3%,PTYMTDU,PTYMTDS,PTYMTDP,PLYMTDU,PLYMTDS,PLYMTDP
Dim 3%,PTYYTDU,PTYYTDS,PTYYTDP,PLYYTDU,PLYYTDS,PLYYTDP
Dim 3%,CTYMTDU,CTYMTDS,CTYMTDP,CLYMTDU,CLYMTDS,CLYMTDP
Dim 3%,CTYYTDU,CTYYTDS,CTYYTDP,CLYYTDU,CLYYTDS,CLYYTDP
Dim 3%,STYMTDU,STYMTDS,STYMTDP,SLYMTDU,SLYMTDS,SLYMTDP
Dim 3%,STYYTDU,STYYTDS,STYYTDP,SLYYTDU,SLYYTDS,SLYYTDP
Dim 3%,GTYMTDU,GTYMTDS,GTYMTDP,GLYMTDU,GLYMTDS,GLYMTDP
Dim 3%,GTYYTDU,GTYYTDS,GTYYTDP,GLYYTDU,GLYYTDS,GLYYTDP
!!!! dx add xport reporting code
dim tmp$[2000],tmp1$[100],tmp2$[100],msg$[200],tmp3$[400],message$[200],webstr$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
B$=" ",b$ ! blanks
For J = 2 To 14
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1808","1792","2016","1744","1728","2288","1728","-1","1376","1824","-1","688", "2112"
! #2 - Cust, 3- product, #4-SLSCURR, 5-PRODWHSE, 6-CCODES, 7 -COMMHEAD, 8-CCODES, 9 -SORT
!#10 - LASTPRICE, #11-SSLSM, #12-N/U, #13-DIVIFLE, #14-SHIPLIST
!#20 - SLLASTPRICE, #24 - CSLSALES 

Mat Read #1,19,50;P9$;
If P9$[17,17] = "Y"
  Read #1,88,48;J$; \ Ropen #12,J$
End If 
ch_pw=5
let j$="3/SLLSTPRC"+str$(intco)
ropen #20,j$
let j$="4/CSLSALES"+str$(intco)
Ropen #24,j$


Read #1,3;CNAME$;
Read #1,0,120;M9;
Mat Read #1,51,0;GL; \ Mat Read #1,51,72;GL2;
Mat Read #1,52,0;P8; \ Mat Read #1,52,60;P8$;
Mat Read #1,115;D9;
If Err 0 Let PJ8 = Spc(8)
PJ8 = 0 \ PJ9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If PJ8 If PJ8 <> 49 Goto ERR_TRAP
PJ9 = 56 \ If PJ8 Let PJ9 = 22
xmask$="------------#.##"
xmask1$="------------#.#"
! call dxsave(0,"tmp/454spin.txt!")
L_8000: Rem ============================================ screen
!Print 'CS'
!Print @0,0;"MX454sp";@30,0;"CUSTOMER / PRODUCT SALES"
!Print @0,2;"1. Print MTD/YTD summary or 12 sales detail ? (S/D/E) "
!Print @0,4;"2. Print Regular or Sorted by Commodity Code? (R/C) "
!Print @18,6;"-STARTING-";@33,6;"-ENDING-"
!Print @1,7;"3. CUSTOMER"
!Print @1,8;"4. PRODUCT"
!Print @1,9;"5. SALESPERSONS"
!Print @1,11;"6. DO YOU WANT LAST YEAR SALES FIGURE? (Y/N) "
!Print @1,13;"7. DO YOU WANT DETAIL OR CUSTOMER TOTALS ONLY? (D/T) ";
!Print @1,15;'CL';"8. CLIENT # ";
!Return 
!L_8200: J0$ = "2 00015802" \ J1$ = "S"
!Gosub L_7000
!If J$ <> "S" And J$ <> "D" And J$ <> "E" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_8200
!If J$ = "D" Chain "MX454spB"
!If J$ = "E" Goto OUTEND
!Return 
!L_8260: J0$ = "2 00015604" \ J1$ = "R"
!Gosub L_7000
!If J$ <> "R" And J$ <> "C" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_8260
!If J$ = "C" Chain "MX454spA"
!Return 
L_8310: !J5$ = "<CR> FOR FIRST";J0$ = "1 00062107" \ J1$ = "      "
Call dxget("SCUST",J$) \ STCUST = J$
!J5$ = "<CR> FOR LAST ";J0$ = "1 00063307" \ J1$ = "999999"
Call dxget("ECUST",J$) \ if rtrim$(j$)="" let J$="999999"
LSTCUST = J$
If STCUST > LSTCUST 
Let E$ = "ENDING CUSTOMER MUST BE GREATER THAN OR EQUAL TO STARTING CUSTOMER!" \ error 10000 
ENDIF 
! ship to code
Call dxget("SSHIP",J$) \ SSHIP = rtrim$(J$)
Call dxget("ESHIP",J$) \ if RTRIM$(j$)="" let J$="999999"
ESHIP = J$
If SSHIP > ESHIP
Let E$ = "ENDING SHIPTO MUST BE GREATER THAN OR EQUAL TO STARTING SHIPTO!" \error 10000 ! \ Goto Err_Msg
ENDIF 
call dxget("WHSE",J$)
If rtrim$(j$)=""
	let warehs=0
else
	let warehs=rtrim$(j$)
	if warehs<0 or warehs>99
		let e$="Invalid Warehouse Entered" \error 10000 
	endif
endif

L_8370: !J5$ = "<CR> FOR FIRST" \ J0$ = "2 00121708" \ J1$ = "            "
call dxget("SPROD",j$) \ STPROD$ = UCase$(J$)+b$
!J5$ = "<CR> FOR LAST" \ J0$ = "2 00123008" \ J1$ = "zzzzzzzzzzzz"
Call dxget("EPROD",j$) \ if rtrim$(j$)="" Let j$="}}}}}}}}}}}}"
LSTPROD$ = UCase$(rtrim$(J$))+"}}}}}}}}}}}}"
If LSTPROD$ < STPROD$ 
Let E$ = "ENDING PRODUCT MUST BE GREATER THAN OR EQUAL TO STARTING PRODUCT!" \ error 10000 
Endif 
L_8430: !J5$ = "<CR> FOR FIRST" \ J0$ = "1 00032409" \ J1$ = "   "
Call dxget("SSLSM",j$) \ STSLSM = J$
!J5$ = "<CR> FOR LAST" \ J0$ = "1 00033609" \ J1$ = "999"
Call dxget("ESLSM",J$) \ if rtrim$(j$)="" let j$="999"
LSTSLSM = J$
If STSLSM > LSTSLSM 
Let E$ = "ENDING SALESPERSON MUST BE GREATER THAN OR EQUAL TO STARTING SALESPERSON!" \ error 10000 
Endif 
L_8490: LYFLAG = 1
!J5$ = " ",J5$ \ J0$ = "6 00015211" \ J1 = 1 \ Gosub L_7000
Call dxget("LYFLAG",tmp$) \ j1=0 \ if tmp$="Y" let j1=1
If Not(J1) Let LYFLAG = 0
!Return 
L_8530: !J0$ = "2 00015713" \ J1$ = "D"
call dxget("DTL",tmp$) \ let j$=UCase$(RTrim$(tmp$))
If J$ <> "D" And J$ <> "T" 
	Let E$ = "INVALID RESPONSE - D OR T ONLY" \ error 10000 
Endif
DTLFLAG = 1
If J$ = "T" Let DTLFLAG = 0
! note 6000 routine
LET CLFLAG=0;CLIENT=0;FYE=GL2[0];MONTH1=GL2[0]                                 
IF P8$[7,7]="W" or p8$[7,7]="D"
	let clflag=99
	if p9$[17,17]<>"Y" let clflag=0
	if gl[3]=0 let clflag=0
endif 
L_6000: Rem determine fiscal year/client
!Print @0,17;'CL';
CLIENT = 0;FYE = GL2[0];MONTH1 = GL2[0]
!If P9$[17,17] <> "Y" Return 
!If GL[3] And (P8$[7,7] = "W" Or P8$[7,7] = "D")
L_6015: !Print @1,15;'CL';"8. Client # , <CR> for all, 'E' to end "; \ Input ""J$
!If J$ = "E" Goto OUTEND
call dxget("CLIENT",tmp$) \ let j$=RTrim$(tmp$)
If J$ <> "" !Goto L_6200
	  X = J$;K12$ = " ",K12$;K12$[3,6] = X Using "####"
	  Search #12,2,1;K12$,R12,E
	  If E = 1
		E$="Client "+STR$(X)+" Not On File!!!!" \ error 10000 
	  End If 
	  If E Gosub ERR_SEARCH
	  Mat Read #12,R12,0;GL$;
	  CLIENT = J$
	  !Print @45,15;'CL';GL$[11,50];
	  FYE = GL$[128,129]
End if
!Else 
!  K12$ = " ",K12$;K12$[3,6] = P8 Using "####"
!  Search #12,2,1;K12$,R12,E
!  If E Goto L_6125
!  Mat Read #12,R12,0;GL$;
!  FYE = GL$[128,129]
!End If 
!	L_6200: Rem calendar/fiscal
!MONTH1 = GL2[0]
!If P9$[17,17] <> "Y" Return 
!If FYE = GL2[0] And GL2[0] = 12 Return 
!L_6215: Print @0,17;'CL';"Enter option desired: 1-calendar year or 2-fiscal year ";
!Input ""J$ \ X = J$ \ If X < 1 Or X > 2 Goto L_6215
!If X = 1
!  MONTH1 = 12;BOYMONTH = 1
!Else 
!  If FYE <> 12 Let MONTH1 = FYE Else Let MONTH1 = GL2[0]
!  BOYMONTH = MONTH1 + 1 \ If BOYMONTH > 13 Let BOYMONTH = 1
!End If 
!Return 
if client<>0
	let clflag=0
endif ! using client
LET MONTH1=GL2[0]                                                                                                                  
call dxget("YEARTYPE",Tmp$)
if rtrim$(tmp$)=""
	let x=1
else
	LET X=TMP$
endif
if x<1 or x>2
	let e$="Invalid Year Type Selected " \ error 10000 
endif
IF X=1                                                                        
	LET MONTH1=12;BOYMONTH=1                                                     
ELSE                                                                          
	LET MONTH1=FYE                             
	LET BOYMONTH=MONTH1+1 \ IF BOYMONTH>13 LET BOYMONTH=1                        
ENDIF 
L_6125: Rem
L_1200: !Print @10,22;'CL';"ENTER #:Field to edit, P:Print  or E:End ";
Z1$="P" ! Input ""Z1$
!If Z1$ = "P" Goto L_1500
!If Z1$ = "E" Goto OUTEND
!Y = Z1$
!If Y >= 1 And Y <= 8
!  On Y Gosub L_8200,L_8260,L_8310,L_8370,L_8430,L_8490,L_8530,L_6000
!End If 
!Goto L_1200
If PJ8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
ELSE ! XML PRINT
 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"454sp",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
 ! now xml headers
 tmp$="SALESMAN",fdel$,"S NAME",fdel$,"CUST #",fdel$,"SHIP CODE",fdel$,"NAME",fdel$
  if DTLFlag ! detail
    tmp$=tmp$,"PRODUCT",fdel$,"PRODUCT DESC",fdel$
	!tmp$=tmp$,"WHSE",fdel$,"PRODUCT DESC #2",fdel$
	tmp$=tmp$,"PROD DESC 2",fdel$ ! whse?
	TMP$=tmp$,"LAST DATE",FDEL$,"LAST PRICE",FDEL$,"LAST GP%",FDEL$
  endif
  tmp$=tmp$,"YEAR",fdel$
  tmp$=tmp$,"MTD UNITS",fdel$,"MTD SALES",fdel$
  tmp$=tmp$,"MTD GP",fdel$,"MTD PERCENT",fdel$
  tmp$=tmp$,"YTD UNITS",fdel$,"YTD SALES",fdel$
  tmp$=tmp$,"YTD GP",fdel$,"YTD PERCENT",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
End If 
L_1500: Rem ========================================== start the sort
GOSUB L_6300  !  If MONTH1 <> 12 Gosub L_6300
K9$ = " "
L_1520: Search #9,3,1;K9$,R9,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1560
Search #9,5,1;K9$,R9,E \ If E Gosub ERR_SEARCH
Goto L_1520
L_1560: Rem ========================================== sorting
! Print @0,22;'CE';"Sorting ......... Please wait ";
K4$ = " ",K4$
let k4$[1,6]=stcust using "######"
L_1590: Search #24,3,1;K4$,R4,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
If K4$[13,24] < STPROD$ Goto L_1590
If K4$[13,24] > LSTPROD$ Goto L_1590
! get the customer
let tmp3=k4$[1,6] 
If tmp3<stcust goto L_1590
if tmp3>lstcust goto L_1900 ! 
let tmp3=k4$[7,12]
if tmp3<sship goto L_1590
if tmp3>eship ! reach last ship code for that customer
	let k4$[7,12]="zzzzzz"
	goto L_1590
endif
IF warehs<>0
	let tmp3=k4$[25,26]
	if tmp3<>warehs goto L_1590:
endif
! 
let tmp3=k4$[7,12]
let keyship$=" ",keyship$
let keyship$[1,6]=k4$[1,6]
let keyship$[7,7]="."
let keyship$[8]=tmp3 using "&&&&&&"
search #14,2,1;keyship$,r[14],e
if not(e)
	mat read #14,r[14],390;SLSLSM;
	if slslsm<>0
		if slslsm<StSLSM goto L_1590
		if slslsm>lstSLSM goto L_1590
		let c1[2]=SLSLSM
		goto endslsmchk: ! 
	endif
endif		
K2$ = " ",K2$ \ K9$ = " ",K9$
K2$[1,6] = K4$[1,6]
Search #2,2,1;K2$,R2,E
Mat Read #2,R2,142;C1;
If C1[2] < STSLSM Goto L_1590
If C1[2] > LSTSLSM Goto L_1590
!
endslsmchk: ! 
gosub get_prodwhse:      
if parm[2]=0 GOTO L_1590
Mat Read #2,R2,568;DIV;
If P9$[17,17] = "Y" And GL[3] <> 0 And CLIENT <> 0 And P8$[7,7] = "D"
  Mat Read #13,DIV,76;DIVCLIENT;
  If DIVCLIENT <> CLIENT Goto L_1590
End If 
K9$[1,3] = C1[2] Using "###" ! saleperson
K9$[4,9] = k4$[1,6] ! customer C1[1] Using "######"
K9$[10,15]=K4$[7,12] ! ship to customer
K9$[16,27] = K4$[13,24] ! product code
Search #9,2,1;K9$,R9,E \ If E = 0 Goto L_1590
Search #9,4,1;K9$,R4,E \ If E Gosub ERR_SEARCH
Goto L_1590
L_1900: Rem ========================================= print
! Print @0,22;"Printing ......... please wait"; \ Signal 3,0
!If PJ8 Print 'CS';
PJ1 = 90 \ PJ2 = 0
! If Err 0 Gosub ERR_TRAP
Gosub L_5800
FSTIME = 1 \ K9$ = " ",K9$
L_1970: Search #9,3,1;K9$,R9,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If FSTIME<>0
  Gosub L_4600 ! slsmname ! using k9$[1,3]
  Gosub GETSLNAME: ! L_4700 ! custname
  FSTIME = 0
  Goto L_2070
End If 
If SSLSM$ <> K9$[1,3] Gosub L_3000 \ Goto L_2140
If SCUST$ <> K9$[4,9] Gosub L_4000 \ Goto L_2140
IF SLCUST$<> K9$[10,15] GOSUB L_4000\ goto L_2140
L_2070: ! read the record
Gosub L_4800 ! last price
Gosub L_5800 ! hdg
Gosub L_5300 ! print line
Gosub L_2200 ! total it
SCUST$ = K9$[4,9]
SSLSM$ = K9$[1,3]
LET SLCUST$=K9$[10,15]
L_2140: Goto L_1970
L_2200: Rem ================================== calculate totals
CTYMTDU = CTYMTDU + PTYMTDU \ CTYMTDS = CTYMTDS + PTYMTDS \ CTYMTDC = CTYMTDC + PTYMTDC
CLYMTDU = CLYMTDU + PLYMTDU \ CLYMTDS = CLYMTDS + PLYMTDS \ CLYMTDC = CLYMTDC + PLYMTDC
STYMTDU = STYMTDU + PTYMTDU \ STYMTDS = STYMTDS + PTYMTDS \ STYMTDC = STYMTDC + PTYMTDC
SLYMTDU = SLYMTDU + PLYMTDU \ SLYMTDS = SLYMTDS + PLYMTDS \ SLYMTDC = SLYMTDC + PLYMTDC
GTYMTDU = GTYMTDU + PTYMTDU \ GTYMTDS = GTYMTDS + PTYMTDS \ GTYMTDC = GTYMTDC + PTYMTDC
GLYMTDU = GLYMTDU + PLYMTDU \ GLYMTDS = GLYMTDS + PLYMTDS \ GLYMTDC = GLYMTDC + PLYMTDC
CTYYTDU = CTYYTDU + PTYYTDU \ CTYYTDS = CTYYTDS + PTYYTDS \ CTYYTDC = CTYYTDC + PTYYTDC
CLYYTDU = CLYYTDU + PLYYTDU \ CLYYTDS = CLYYTDS + PLYYTDS \ CLYYTDC = CLYYTDC + PLYYTDC
STYYTDU = STYYTDU + PTYYTDU \ STYYTDS = STYYTDS + PTYYTDS \ STYYTDC = STYYTDC + PTYYTDC
SLYYTDU = SLYYTDU + PLYYTDU \ SLYYTDS = SLYYTDS + PLYYTDS \ SLYYTDC = SLYYTDC + PLYYTDC
GTYYTDU = GTYYTDU + PTYYTDU \ GTYYTDS = GTYYTDS + PTYYTDS \ GTYYTDC = GTYYTDC + PTYYTDC
GLYYTDU = GLYYTDU + PLYYTDU \ GLYYTDS = GLYYTDS + PLYYTDS \ GLYYTDC = GLYYTDC + PLYYTDC
Return 
L_2500: Rem =========================================== print grand total
IF PJ8 RETURN
Print #0;"" \ PJ1 = PJ1 + 1
Print #0;"  GRAND    TOTALS";
Print #0; Using "-----#.#"; Tab 56;GTYMTDU;
Print #0; Using "------#.##"; Tab 65;GTYMTDS;
GTYMTDP = 0 \ GTYMTDP = GTYMTDS - GTYMTDC
Print #0; Using "------#.##"; Tab 76;GTYMTDP;
GPPCT = 0 \ If GTYMTDS Let GPPCT = FNR(GTYMTDP * 100 / GTYMTDS)
Print #0; Using "--#.#"; Tab 87;GPPCT;
Print #0; Using "-------#.#"; Tab 93;GTYYTDU;
Print #0; Using "-------#.##"; Tab 103;GTYYTDS;
GTYYTDP = 0 \ GTYYTDP = GTYYTDS - GTYYTDC
Print #0; Using "-------#.##"; Tab 115;GTYYTDP;
GPPCT = 0 \ If GTYYTDS Let GPPCT = FNR(GTYYTDP * 100 / GTYYTDS)
Print #0; Using "--#.#"; Tab 127;GPPCT
PJ1 = PJ1 + 1
If Not(LYFLAG) Goto L_2805
Print #0; Tab 31;"LY";
Print #0; Using "-----#.#"; Tab 56;GLYMTDU;
Print #0; Using "------#.##"; Tab 65;GLYMTDS;
GLYMTDP = 0 \ GLYMTDP = GLYMTDS - GLYMTDC
Print #0; Using "------#.##"; Tab 76;GLYMTDP;
GPPCT = 0 \ If GLYMTDS Let GPPCT = FNR(GLYMTDP * 100 / GLYMTDS)
Print #0; Using "--#.#"; Tab 87;GPPCT;
Print #0; Using "-------#.#"; Tab 93;GLYYTDU;
Print #0; Using "-------#.##"; Tab 103;GLYYTDS;
GLYYTDP = 0 \ GLYYTDP = GLYYTDS - GLYYTDC
Print #0; Using "-------#.##"; Tab 115;GLYYTDP;
GPPCT = 0 \ If GLYYTDS Let GPPCT = FNR(GLYYTDP * 100 / GLYYTDS)
Print #0; Using "--#.#"; Tab 127;GPPCT
PJ1 = PJ1 + 1
L_2805: Print #0;"" \ PJ1 = PJ1 + 1
Return 
L_3000: Rem ============================================= salesman break
Gosub L_5800 ! hdg
Gosub L_4100 ! cust ttls
Gosub L_5800 ! hdg
Gosub L_3200 ! slsm ttls
PJ1 = 99
Gosub L_5800 ! hdg
Gosub L_4600 ! new slsm name
Gosub L_5800 ! hdg
gosub getslname: ! Gosub L_4700 ! new cust name
Gosub L_4800 ! last price
Gosub L_5800 ! hdg
Gosub L_5300 ! print line
SCUST$ = K9$[4,9]
SSLSM$ = K9$[1,3]
slcust$=K9$[10,15]
CTYMTDU = 0;CTYMTDS = 0;CTYMTDC = 0;CTYYTDU = 0;CTYYTDS = 0;CTYYTDC = 0
CLYMTDU = 0;CLYMTDS = 0;CLYMTDC = 0;CLYYTDU = 0;CLYYTDS = 0;CLYYTDC = 0
STYMTDU = 0;STYMTDS = 0;STYMTDC = 0;STYYTDU = 0;STYYTDS = 0;STYYTDC = 0
SLYMTDU = 0;SLYMTDS = 0;SLYMTDC = 0;SLYYTDU = 0;SLYYTDS = 0;SLYYTDC = 0
Gosub L_2200
Return 
L_3200: Rem =========================================== print salesman total
IF PJ8 IF DTLFLAG RETURN ! no xml totals if detail
if PJ8 ! totals
	tmp$=" ",tmp$
	clear tmp$
	tmp$=SSLSM$,fdel$,"TOTALS",fdel$,"",fdel$,"",fdel$,"",fdel$ ! slsm/no cust
	tmp$=tmp$,"TYR",fdel$
	tmp$=tmp$,LTrim$(STYMTDU Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(STYMTDS Using xmask$),fdel$
	STYMTDP = 0 \ STYMTDP = STYMTDS - STYMTDC
	tmp$=tmp$,LTrim$(STYMTDP Using xmask$),fdel$
	GPPCT = 0 \ If STYMTDS Let GPPCT = FNR(STYMTDP * 100 / STYMTDS)
	tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(STYYTDU Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(STYYTDS Using xmask$),fdel$
	STYYTDP = 0 \ STYYTDP = STYYTDS - STYYTDC
	tmp$=tmp$,LTrim$(STYYTDP Using xmask$),fdel$
	GPPCT = 0 \ If STYYTDS Let GPPCT = FNR(STYYTDP * 100 / STYYTDS)
	tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	If LYFLAG
		tmp$=" ",tmp$
		clear tmp$
		tmp$=SSLSM$,fdel$,"TOTALS",fdel$,"",fdel$,"",fdel$,"",fdel$ ! slsm/no cust
		tmp$=tmp$,"LYR",fdel$
		tmp$=tmp$,LTrim$(SLYMTDU Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(SLYMTDS Using xmask$),fdel$
		SLYMTDP = 0 \ SLYMTDP = SLYMTDS - SLYMTDC
		tmp$=tmp$,LTrim$(SLYMTDP Using xmask$),fdel$
		GPPCT = 0 \ If SLYMTDS Let GPPCT = FNR(SLYMTDP * 100 / SLYMTDS)
		tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(SLYYTDU Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(SLYYTDS Using xmask$),fdel$
		SLYYTDP = 0 \ SLYYTDP = SLYYTDS - SLYYTDC
		tmp$=tmp$,LTrim$(SLYYTDP Using xmask$),fdel$
		GPPCT = 0 \ If SLYYTDS Let GPPCT = FNR(SLYYTDP * 100 / SLYYTDS)
		tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
	Endif
Else ! print/pdf
	Print #0;"" \ PJ1 = PJ1 + 1
	Print #0;"SALESMAN  ";SSLSM$;" TOTALS";
	Print #0; Using "-----#.#"; Tab 56;STYMTDU;
	Print #0; Using "------#.##"; Tab 65;STYMTDS;
	STYMTDP = 0 \ STYMTDP = STYMTDS - STYMTDC
	Print #0; Using "------#.##"; Tab 76;STYMTDP;
	GPPCT = 0 \ If STYMTDS Let GPPCT = FNR(STYMTDP * 100 / STYMTDS)
	Print #0; Using "--#.#"; Tab 87;GPPCT;
	Print #0; Using "-------#.#"; Tab 93;STYYTDU;
	Print #0; Using "-------#.##"; Tab 103;STYYTDS;
	STYYTDP = 0 \ STYYTDP = STYYTDS - STYYTDC
	Print #0; Using "-------#.##"; Tab 115;STYYTDP;
	GPPCT = 0 \ If STYYTDS Let GPPCT = FNR(STYYTDP * 100 / STYYTDS)
	Print #0; Using "--#.#"; Tab 127;GPPCT
	PJ1 = PJ1 + 1
	If Not(LYFLAG) Goto L_3505
	Print #0; Tab 31;"LY";
	Print #0; Using "-----#.#"; Tab 56;SLYMTDU;
	Print #0; Using "------#.##"; Tab 65;SLYMTDS;
	SLYMTDP = 0 \ SLYMTDP = SLYMTDS - SLYMTDC
	Print #0; Using "------#.##"; Tab 76;SLYMTDP;
	GPPCT = 0 \ If SLYMTDS Let GPPCT = FNR(SLYMTDP * 100 / SLYMTDS)
	Print #0; Using "--#.#"; Tab 87;GPPCT;
	Print #0; Using "-------#.#"; Tab 93;SLYYTDU;
	Print #0; Using "-------#.##"; Tab 103;SLYYTDS;
	SLYYTDP = 0 \ SLYYTDP = SLYYTDS - SLYYTDC
	Print #0; Using "-------#.##"; Tab 115;SLYYTDP;
	GPPCT = 0 \ If SLYYTDS Let GPPCT = FNR(SLYYTDP * 100 / SLYYTDS)
	Print #0; Using "--#.#"; Tab 127;GPPCT
	PJ1 = PJ1 + 1
	L_3505: Print #0;"" \ PJ1 = PJ1 + 1
	Print #0;"" \ PJ1 = PJ1 + 1
Endif
Return 
L_4000: Rem =============================================== customer break
Gosub L_5800 ! hdg
Gosub L_4100 ! cust ttl
Gosub L_5800 ! hdg
gosub getslname: ! Gosub L_4700 ! new custname
Gosub L_4800 ! last price
Gosub L_5800 ! hdg
Gosub L_5300 ! print line
SCUST$ = K9$[4,9]
SSLSM$ = K9$[1,3]
slcust$=K9$[10,15]
CTYMTDU = 0;CTYMTDS = 0;CTYMTDC = 0;CTYYTDU = 0;CTYYTDS = 0;CTYYTDC = 0
CLYMTDU = 0;CLYMTDS = 0;CLYMTDC = 0;CLYYTDU = 0;CLYYTDS = 0;CLYYTDC = 0
Gosub L_2200
Return 
L_4100: Rem =========================================== print customer shiplist total
IF PJ8 IF DTLFLAG RETURN ! no xml totals
if PJ8 ! xml
	tmp$=" ",tmp$
	clear tmp$
	tmp$=tmp1$,SCUST$,fdel$,slcust$,fdel$,"TOTALS",fdel$ ! slsm / cust
	!tmp$=tmp$,"",fdel$,"",fdel$,"",fdel$ ! prod
	!tmp$=tmp$,"",fdel$,"",fdel$,"",fdel$ ! lastprice
	tmp$=tmp$,"TYR",fdel$
	tmp$=tmp$,LTrim$(CTYMTDU Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(CTYMTDS Using xmask$),fdel$
	CTYMTDP = 0 \ CTYMTDP = CTYMTDS - CTYMTDC
	tmp$=tmp$,LTrim$(CTYMTDP Using xmask$),fdel$
	GPPCT = 0 \ If CTYMTDS Let GPPCT = FNR(CTYMTDP * 100 / CTYMTDS)
	tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(CTYYTDU Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(CTYYTDS Using xmask$),fdel$
	CTYYTDP = 0 \ CTYYTDP = CTYYTDS - CTYYTDC
	tmp$=tmp$,LTrim$(CTYYTDP Using xmask$),fdel$
	GPPCT = 0 \ If CTYYTDS Let GPPCT = FNR(CTYYTDP * 100 / CTYYTDS)
	tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	If LYFLAG
		tmp$=" ",tmp$
		clear tmp$
		tmp$=tmp1$,SCUST$,fdel$,slcust$,fdel$,"TOTALS",fdel$ ! slsm / cust
		tmp$=tmp$,"LYR",fdel$
		tmp$=tmp$,LTrim$(CLYMTDU Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(CLYMTDS Using xmask$),fdel$
		CLYMTDP = 0 \ CLYMTDP = CLYMTDS - CLYMTDC
		tmp$=tmp$,LTrim$(CLYMTDP Using xmask$),fdel$
		GPPCT = 0 \ If CLYMTDS Let GPPCT = FNR(CLYMTDP * 100 / CLYMTDS)
		tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(CLYYTDU Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(CLYYTDS Using xmask$),fdel$
		CLYYTDP = 0 \ CLYYTDP = CLYYTDS - CLYYTDC
		tmp$=tmp$,LTrim$(CLYYTDP Using xmask$),fdel$
		GPPCT = 0 \ If CLYYTDS Let GPPCT = FNR(CLYYTDP * 100 / CLYYTDS)
		tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
	Endif
Else ! pdf/printer
	Print #0;"" \ PJ1 = PJ1 + 1
	Print #0;"CUSTOMER  ";SCUST$;" Ship: ";slcust$;" TOTALS";
	Print #0; Using "-----#.#"; Tab 56;CTYMTDU;
	Print #0; Using "------#.##"; Tab 65;CTYMTDS;
	CTYMTDP = 0 \ CTYMTDP = CTYMTDS - CTYMTDC
	Print #0; Using "------#.##"; Tab 76;CTYMTDP;
	GPPCT = 0 \ If CTYMTDS Let GPPCT = FNR(CTYMTDP * 100 / CTYMTDS)
	Print #0; Using "--#.#"; Tab 87;GPPCT;
	Print #0; Using "-------#.#"; Tab 93;CTYYTDU;
	Print #0; Using "-------#.##"; Tab 103;CTYYTDS;
	CTYYTDP = 0 \ CTYYTDP = CTYYTDS - CTYYTDC
	Print #0; Using "-------#.##"; Tab 115;CTYYTDP;
	GPPCT = 0 \ If CTYYTDS Let GPPCT = FNR(CTYYTDP * 100 / CTYYTDS)
	Print #0; Using "--#.#"; Tab 127;GPPCT
	PJ1 = PJ1 + 1
	If Not(LYFLAG) Goto L_4405
	Print #0; Tab 31;"LY";
	Print #0; Using "-----#.#"; Tab 56;CLYMTDU;
	Print #0; Using "------#.##"; Tab 65;CLYMTDS;
	CLYMTDP = 0 \ CLYMTDP = CLYMTDS - CLYMTDC
	Print #0; Using "------#.##"; Tab 76;CLYMTDP;
	GPPCT = 0 \ If CLYMTDS Let GPPCT = FNR(CLYMTDP * 100 / CLYMTDS)
	Print #0; Using "--#.#"; Tab 87;GPPCT;
	Print #0; Using "-------#.#"; Tab 93;CLYYTDU;
	Print #0; Using "-------#.##"; Tab 103;CLYYTDS;
	CLYYTDP = 0 \ CLYYTDP = CLYYTDS - CLYYTDC
	Print #0; Using "-------#.##"; Tab 115;CLYYTDP;
	GPPCT = 0 \ If CLYYTDS Let GPPCT = FNR(CLYYTDP * 100 / CLYYTDS)
	Print #0; Using "--#.#"; Tab 127;GPPCT
	PJ1 = PJ1 + 1
	L_4405: Print #0;"" \ PJ1 = PJ1 + 1
	Print #0;"" \ PJ1 = PJ1 + 1
End if ! xml/prnt
Return 
L_4600: Rem ================================== get & print salesman
SLSMNAME$ = " ",SLSMNAME$ \ K11$ = " ",K11$
K11$[1,3] = K9$[1,3]
Search #11,2,1;K11$,R11,E \ If E > 1 Gosub ERR_SEARCH
If E Let SLSMNAME$ = " NOT FOUND                    " \ Goto L_4670
Mat Read #11,R11,0;SLSMNAME$;
L_4670: ! 
If not(PJ8)
Print #0;"SALESMAN ";K9$[1,3];": ";SLSMNAME$
PJ1 = PJ1 + 1
Print #0;"" \ PJ1 = PJ1 + 1
Else ! xml head 1
	tmp1$=K9$[1,3],fdel$,RTrim$(SLSMNAME$),fdel$
Endif
Return 

L_4700: Rem ========================================== get & print customer
CUSTNAME$ = " ",CUSTNAME$ \ K2$ = " ",K2$
K2$ = K9$[4,9]
Search #2,2,1;K2$,R2,E \ If E > 1 Gosub ERR_SEARCH
If E Let CUSTNAME$ = " NOT FOUND                    " \ Goto L_4760
Mat Read #2,R2,30;CUSTNAME$;
L_4760: !
If not(pj8)
	Print #0;"CUST  ";K9$[4,9];": ";CUSTNAME$
	PJ1 = PJ1 + 1
	Print #0;"" \ PJ1 = PJ1 + 1
Else 
  tmp2$=K9$[4,9],FDEL$,RTRIM$(CUSTNAME$),FDEL$
ENDIF
Return 

getslname: ! get shiplist name
let slname$=" ",slname$
let keysl$=" ",keysl$
let keysl$[1,6]=k9$[4,9]
let tmp3=k9$[10,15]
let keysl$[7,7]="."
let keysl$[8]=tmp3 using "&&&&&&"
search #14,2,1;keysl$,r[14],e
if not(e)
	Mat Read #14,R[14],0;SLNAME$;
else
	! get the customer 
	K2$ = K9$[4,9]
	search #2,2,1;K2$,R2,E 
	if not(e)
		Mat Read #2,R2,30;SLNAME$;
	else
		let slname$="Not on File "
	endif
endif
If not(pj8)
	Print #0;"CUST:";K9$[4,9];" Ship Code: ";keysl$[8,13];"  ";SLNAME$
	PJ1 = PJ1 + 1
	Print #0;"" \ PJ1 = PJ1 + 1
Else 
  tmp2$=K9$[4,9],FDEL$,keysl$[8,13],fdel$, RTRIM$(SLNAME$),FDEL$
ENDIF


L_4800: Rem ========================================== get last price & mtd, ytd
PRICE$ = " ",PRICE$ \ K10$ = " ",K10$ \ LPRICE$ = " ",LPRICE$
LPRICE = 0;LCOST = 0
Gosub L_5700 ! PROD INFO
K10$[1,6] = K9$[4,9] ! CUST CODE
let tmp3=k9$[10,15] ! ship to code
let k10$[7,12]=tmp3 using "&&&&&&"
If P9$[44,44] <> "Y" ! department
	Let K10$[13,16] = "   0"
endif
K10$[17,28] = K9$[16,27]  ! product code
Search #20,3,1;K10$,R10,E \ If E > 2 Gosub ERR_SEARCH
If E Let LPRICE$ = " NOT FOUND" \ GOTO L_5040
If K10$[17,28] <> K9$[16,27] Let LPRICE$ = " NOT FOUND" \ Goto L_5040
Mat Read #20,R10,16;LPC1;
Mat Read #20,R10,28;LPC2;
Mat Read #20,R10,46;LPC3;
Mat Read #20,R10,168;LPR;
CNVTA = LPC2[1];CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 2
Gosub L_20000 \ LPRICE = AMOUNT
CNVTA = LPC2[2];CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 2
Gosub L_20000 \ LCOST = AMOUNT
If LPC3[0] = 1 Or LPC3[0] = 5 Or LPC3[0] = 9 Let PRICE$ = "S"
If LPC3[0] >= 2 And LPC3[0] <= 4 Or LPC3[0] >= 6 And LPC3[0] <= 8 Or LPC3[0] >= 11 And LPC3[0] <= 13
  If LPR[1]
    PRICE$ = "C"
  Else 
    PRICE$ = "*"
  End If 
End If 
ODATE$ = LPC1[2] Using "&&&&&&"
L_5040: Rem =================================== get salescurr
PTYMTDU = 0;PLYMTDU = 0;PTYMTDS = 0;PLYMTDS = 0;PTYMTDC = 0;PLYMTDC = 0
PTYYTDU = 0;PLYYTDU = 0;PTYYTDS = 0;PLYYTDS = 0;PTYYTDC = 0;PLYYTDC = 0
K4$ = " ",K4$
K4$[1,6] = K9$[4,9] 
K4$[7,12]=K9$[10,15]
K4$[13,24]=K9$[16,27] ! \ K4$[7,18] = K9$[10,21]
L_5070: Search #24,3,1;K4$,R4,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_5190
If K9$[16,27] <> K4$[13,24] Goto L_5190 ! different product
if warehs<>0
	tmp3=k4$[25,26]
	if tmp3<>warehs goto L_5070:
endif
let tmp3=K9$[10,15]
let tmp4=k4$[7,12]
if tmp3<>tmp4 goto L_5190: ! different ship to
Mat Read #24,R4,0;P$;
Mat Read #24,R4,16;S1;
Mat Read #24,R4,256;S2;
GOSUB L_6600  ! If MONTH1 <> 12 Gosub L_6600
PTYMTDU = PTYMTDU + S1[M9,0];PTYYTDU = PTYYTDU + S1[0,0]
PLYMTDU = PLYMTDU + S2[M9,0];PLYYTDU = PLYYTDU + S2[0,0]
PTYMTDS = PTYMTDS + S1[M9,1];PTYYTDS = PTYYTDS + S1[0,1]
PLYMTDS = PLYMTDS + S2[M9,1];PLYYTDS = PLYYTDS + S2[0,1]
PTYMTDC = PTYMTDC + S1[M9,2];PTYYTDC = PTYYTDC + S1[0,2]
PLYMTDC = PLYMTDC + S2[M9,2];PLYYTDC = PLYYTDC + S2[0,2]
Goto L_5070
L_5190: Rem =============================== units convert to selling u/m
X3 = PTYMTDU \ Gosub L_10000 \ PTYMTDU = AMOUNT
X3 = PTYYTDU \ Gosub L_10000 \ PTYYTDU = AMOUNT
X3 = PLYMTDU \ Gosub L_10000 \ PLYMTDU = AMOUNT
X3 = PLYYTDU \ Gosub L_10000 \ PLYYTDU = AMOUNT
Return 
L_5300: Rem ======================================== print line
If Not(DTLFLAG) Goto L_5670
IF PJ8 ! XML it
	tmp3$=" ",tmp$
	clear tmp3$
	tmp3$=tmp1$,tmp2$ ! slsm/cust always
	tmp3$=tmp3$,RTrim$(A$[140,151]),fdel$,RTrim$(A$[9,38]),fdel$
	tmp3$=tmp3$,RTrim$(A$[63,92]),fdel$
	if LPrice$[1,10]=B$[1,10] ! found
		tmp3$=tmp3$,ODATE$[3,4],"/",ODATE$[5,6],"/",ODATE$[1,2],fdel$
	  tmp3$=tmp3$,LTrim$(LPRICE Using XMask$)
	  tmp3$=tmp3$,PRICE$,fdel$
	  GPPCT = 0 \ If LPRICE Let GPPCT = FNR((LPRICE - LCOST) * 100 / LPRICE)
	  tmp3$=tmp3$,LTrim$(GPPCT Using xmask1$),fdel$
	Else ! not found
		tmp3$=tmp3$,"",fdel$,"",fdel$,"",fdel$ ! date/price/prct
	Endif ! last price
	tmp$=" ",tmp$
	clear tmp$
	tmp$=tmp3$,"TYR",fdel$ ! year
	tmp$=tmp$,LTrim$(PTYMTDU Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(PTYMTDS Using xmask$),fdel$
	PTYMTDP = 0 \ PTYMTDP = PTYMTDS - PTYMTDC
	tmp$=tmp$,LTrim$(PTYMTDP Using xmask$),fdel$
	GPPCT = 0 \ If PTYMTDS Let GPPCT = FNR(PTYMTDP * 100 / PTYMTDS)
	tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(PTYYTDU Using xmask1$),fdel$
	tmp$=tmp$,LTrim$(PTYYTDS Using xmask$),fdel$
	PTYYTDP = 0 \ PTYYTDP = PTYYTDS - PTYYTDC
	tmp$=tmp$,LTrim$(PTYYTDP Using xmask$),fdel$
	GPPCT = 0 \ If PTYYTDS Let GPPCT = FNR(PTYYTDP * 100 / PTYYTDS)
	tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
	If LYFLAG ! also has last year
		tmp$=" ",tmp$
		clear tmp$
		tmp$=tmp3$,"LYR",fdel$
		tmp$=tmp$,LTrim$(PLYMTDU Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(PLYMTDS Using xmask$),fdel$
		PLYMTDP = 0 \ PLYMTDP = PLYMTDS - PLYMTDC
		tmp$=tmp$,LTrim$(PLYMTDP Using xmask$),fdel$
		GPPCT = 0 \ If PLYMTDS Let GPPCT = FNR(PLYMTDP * 100 / PLYMTDS)
		tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(PLYYTDU Using xmask1$),fdel$
		tmp$=tmp$,LTrim$(PLYYTDS Using xmask$),fdel$
		PLYYTDP = 0 \ PLYYTDP = PLYYTDS - PLYYTDC
		tmp$=tmp$,LTrim$(PLYYTDP Using xmask$),fdel$
		GPPCT = 0 \ If PLYYTDS Let GPPCT = FNR(PLYYTDP * 100 / PLYYTDS)
		tmp$=tmp$,LTrim$(GPPCT Using xmask1$),fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
	Endif
Else ! pdf/printer
	Print #0;P$[1,12];
	Print #0; Tab 13;A$[9,27];
	If LPRICE$[1,10] = "          "
	  Print #0; Tab 33;ODATE$[3,4];"/";ODATE$[5,6];"/";ODATE$[1,2];
	  Print #0; Using "###.##"; Tab 42;LPRICE;
	  Print #0;PRICE$;
	  GPPCT = 0 \ If LPRICE Let GPPCT = FNR((LPRICE - LCOST) * 100 / LPRICE)
	  Print #0; Using "--#.#"; Tab 50;GPPCT;
	Else 
	  Print #0; Tab 33;LPRICE$;
	End If 
	Print #0; Using "-----#.#"; Tab 56;PTYMTDU;
	Print #0; Using "------#.##"; Tab 65;PTYMTDS;
	PTYMTDP = 0 \ PTYMTDP = PTYMTDS - PTYMTDC
	Print #0; Using "------#.##"; Tab 76;PTYMTDP;
	GPPCT = 0 \ If PTYMTDS Let GPPCT = FNR(PTYMTDP * 100 / PTYMTDS)
	Print #0; Using "--#.#"; Tab 87;GPPCT;
	Print #0; Using "------#.#"; Tab 94;PTYYTDU;
	Print #0; Using "-------#.##"; Tab 103;PTYYTDS;
	PTYYTDP = 0 \ PTYYTDP = PTYYTDS - PTYYTDC
	Print #0; Using "-------#.##"; Tab 115;PTYYTDP;
	GPPCT = 0 \ If PTYYTDS Let GPPCT = FNR(PTYYTDP * 100 / PTYYTDS)
	Print #0; Using "--#.#"; Tab 127;GPPCT
	PJ1 = PJ1 + 1
	If Not(LYFLAG) Goto L_5665
	Print #0; Tab 31;"LY";
	Print #0; Using "-----#.#"; Tab 56;PLYMTDU;
	Print #0; Using "------#.##"; Tab 65;PLYMTDS;
	PLYMTDP = 0 \ PLYMTDP = PLYMTDS - PLYMTDC
	Print #0; Using "------#.##"; Tab 76;PLYMTDP;
	GPPCT = 0 \ If PLYMTDS Let GPPCT = FNR(PLYMTDP * 100 / PLYMTDS)
	Print #0; Using "--#.#"; Tab 87;GPPCT;
	Print #0; Using "------#.#"; Tab 94;PLYYTDU;
	Print #0; Using "-------#.##"; Tab 103;PLYYTDS;
	PLYYTDP = 0 \ PLYYTDP = PLYYTDS - PLYYTDC
	Print #0; Using "-------#.##"; Tab 115;PLYYTDP;
	GPPCT = 0 \ If PLYYTDS Let GPPCT = FNR(PLYYTDP * 100 / PLYYTDS)
	Print #0; Using "--#.#"; Tab 127;GPPCT
	PJ1 = PJ1 + 1
	L_5665: Print #0;"" \ PJ1 = PJ1 + 1
Endif ! xml or print
L_5670: Return 
L_5700: Rem ====================================== get product info
K3$ = " ",K3$ \ K3$ = K9$[16,27]
Search #3,2,1;K3$,R3,E
If E Goto L_5755
Mat Read #3,R3;A$;
Mat Read #3,R3,256;A;
Mat Read #3,R3,512;PFU1;
Mat Read #3,R3,554;PFU2;
Return 
L_5755: Rem not found
A$ = " ",A$
A$[9,27] = "PRODUCT NOT FOUND! "
Return 
L_5800: Rem HEADINGS ROUTINE
If PJ8 Return ! not on xml
If PJ1 < PJ9 Return 
!If PJ2 If PJ8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If PJ2 If Not(PJ8) Print #0;"\14\";
PJ2 = PJ2 + 1 \ PJ1 = 9
If Not(PJ8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";PJ2
If CLIENT Print #0; Using "#### "; Tab 50;"CLIENT: ";CLIENT;GL$[11,50];
If MONTH1 <> GL2[0] Print #0; Tab 100;"YEAR END: ";MONTH1;
Print #0;""
Print #0;" -454sp- ";T9$;
Print #0; Tab 45;"C U S T O M E R   S H I P T O   S A L E S"
Print #0; Tab 50;"    by salesman/customer/product"
Print #0;"\15\";
if warehs<>0
	print #0;"Warehouse: ";warehs;
endif
Print #0; Tab 50;" BY SELLING UNIT OF MEASURE"
Print #0;" "
Print #0; Tab 33;"*-------- LAST ------* *----------- M - T - D ------------*";
Print #0;" *------------ Y - T - D --------------*"
Print #0;"ITEM NO.";
Print #0; Tab 13;"DESCRIPTION"; Tab 35;"DATE    PRICE   GP %";
Print #0; Tab 59;"UNITS      SALES     PROFIT  GP %";
Print #0; Tab 97;"UNITS       SALES      PROFIT  GP %"
Print #0;"============ =================== ";
Print #0; Tab 33;"======================";
Print #0; Tab 56;"==================================== ======================================="
Return 


L_6300: Rem SET UP FMONTH (EACH HOLD MONTH# 1-24)
For X = 0 To 25 \ FMONTH[X] = X \ Next X
X7 = BOYMONTH;X8 = 0;X9 = 0
For I = 1 To 12
  If Not(X9) Let FMONTH[I] = X7 Else Let FMONTH[I] = 0 - X7
  If Not(X8) Let FMONTH[I + 13] = X7 + 13 Else Let FMONTH[I + 13] = X7
  If X7 = M9 Let X8 = 1;X9 = 1
  X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
L_6600: Rem LOAD CALCULATED MTD/YTD BALANCE
For X = 1 To 12
  For X2 = 0 To 2
    S5[X,X2] = S1[X,X2];S5[X + 13,X2] = S2[X,X2]
  Next X2
Next X
For X = 0 To 2 \ S1[0,X] = 0 \ S2[0,X] = 0 \ Next X
For X = 1 To 12
  If FMONTH[X] > 0
    For X2 = 0 To 2 \ S1[0,X2] = S1[0,X2] + S5[FMONTH[X],X2] \ Next X2
  End If 
Next X
For X = 14 To 25
  If FMONTH[X] > 0
    For X2 = 0 To 2 \ S2[0,X2] = S2[0,X2] + S5[FMONTH[X],X2] \ Next X2
  End If 
Next X
Return 
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
L_7600: Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]                    
Call ProdGroup(e$,intco,Parm[])
RETURN                          
!
OUTEND: Rem EXIT PROGRAM
! dx close
if pj8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
end
L_9100: Rem END OF THIS RANGE
Gosub L_5800 ! hdg
Gosub L_4100 ! cust ttl
Gosub L_5800 ! hdg
Gosub L_3200 ! slsm ttls
Gosub L_5800 ! hdg
Gosub L_2500 ! grand totals
! If PJ8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
Stop 
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[9]
CNVTU[2] = 1
CNVTA = X3
Gosub L_20000
X3 = AMOUNT
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: ! always call
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
ERR_SEARCH: Rem
	ENUM = E ;ELINE = Spc(16);CTERR = 0
	If E = 5 Let CTERR = Err(8)
	msg$ = "RETURN STATUS",(E + (CTERR * .001))
	msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
	E$=msg$
	Call programdump("tmp/454spse!","")
	Call programdump()
	Goto Err_Msg
	End
	ERR_MSG: ! send message
	ReturnStatus=0 ! no good (ONLY DISPLAYS IF =1 ??)
	Message$=E$
		  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
		  call AddToStr(e$,rstr$,WebStr$)
		  call SetOutPut(e$,rstr$)
	End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end