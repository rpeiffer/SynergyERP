!!>>> Program 536
!
! description  accounts payable aged trial balance by due date
!
! loadsave -w -n 100,10 -o prog/dxport/536.dl4 src/536.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 21, 2002  09:30:19
Rem /w/papermaster/r2002//usr/acct/mary/work/r2002/ap/la536.src (univ2) [mary] {34061}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem LA536 (533) A/P AGED OPEN INVOICE REPORT
Rem AUTHOR: MTK   OCT 18, 1984
Rem MODIFIED FOR 12 CHAR INV CODE - 3/85 - PCCC - MTK
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1

Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray

External Lib "ubsfunc.dl4"
Declare External Function OpenFile

!

!!Option Default Dialect IRIS1
if err 0 gosub ERR_TRAP
Dim groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim A$[30],B1$[8],1%,X[12],D$[8],D1$[8],A1$[10],G$[2],F$[16],F1$[16]
Dim 1%,L8,O4[1],C0[6]
Dim V$[10],R$[60],P3$[5],V1$[20],G9$[40],R2$[4],K10$[20],DIV$[30]
Dim I$[4],I3$[12],X$[10],VEND$[6]
Dim 3%,C3[5],J8,j81,totrec,tmp
Dim 2%,A,B,I1[3],X3,R[23]
Dim 2%,JAGDATE,JAPDATE
Dim 3%,C[9],A3[7],T9[11],i
!
Try
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
! -  dx add xport reporting code

Dim tmp$[1500],tmp1$[200],TMP3$[100],blockid$[100],msg$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$
!
Dim J$[40]
Dim 1%,X1,2%,X2
Dim P$[8]
Dim U5$[50],D8$[8],K1$[50],K2$[20],K3$[20]
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
W = 0



!call dxopen() ! needed?                                                  
                                                          
 !                                         !
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
! Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intco,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
J81 = intCO
!J$ = Int((J81 - Int(J81 / 16384) * 16384) / 64) Using "CNTRL# "
!W = intCO
!A1 = Int(W / 16384)
!B1 = Int((W - A1 * 16384) / 64)
!C1 = W - (A1 * 16384 + B1 * 64)

If Err 0 Let J8 = Spc(8)
J8 = 0 !
Try
	J9 = Chf(0) 
else
	let j8=49
end try
If J8 If J8 <> 49 Gosub ERR_TRAP
if Err 0 Gosub ERR_TRAP
l8 = 60 \ If J8 Let l8 = 23
!K1$ = " "




Call dxget("u_group",groupid$)              
If RTrim$(groupid$) = "" Let groupid$ = "0" 
G$[1,1] = intco Using "#"                   
G$[2,2] = groupid$                          

message$="" !
C15 = OpenFile("AP.A00AP10",-intCo,1) \ If C15 = -1 Error 42  ! a00ap10
C16 = OpenFile("GL.ACF",-intCo,1) \ If C16 = -1 Error 42  ! acf10
V$ = " 0"
Search #c15,2,1;V$,R[15],E
If E = 1                                                          
  eflag = eflag + 1                                               
  Message$ = "Error In A/P Control File. Record '0' Not On File. "
  Goto OUTEND                                                     
End If
if e gosub err_search:
Mat Read #c15,R[15],2;R$;


! get client name
V1$ = "10"
Search #c15,2,1;V1$,R[15],E
If E = 1                                                            
   eflag = eflag + 1                                                 
   Message$ = "Error In A/P Control File. Record '10' Not On File. "  
   Goto OUTEND                                                       
 End If                                                              
 If E Gosub ERR_SEARCH                                               

Mat Read #c15,R[15],2;R2$;
V1$ = " ",V1$
V1$[3,6] = R2$
Search #c16,2,1;V1$,R[16],E
If E = 1                                                            
   eflag = eflag + 1                                                 
   Message$ = "Error Client Number "+r2$=" Not on File. "  
   Goto OUTEND                                                       
 End If                                                              
 If E Gosub ERR_SEARCH 

Mat Read #c16,R[16],10;G9$;
F$ = R$[53,53],"/A20OI",G$[1,2]
F1$ = R$[31,31],"/A80VM",G$[1,2]
Ropen #2,F$
ROpen #3,F1$
Mat Read #1,0,100;D8$;
Mat Read #1,51,18;C0;
P = 0
if C0[6]
	F$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,F$
end if


! get date
call dxget("DATE",D$)
If Len(D$) <> 6
	let eflag=eflag+1
	LET message$=message$+" Invalid Date Entered "
	goto getstartvend:
endif
D1$ = D$[1,2],"/",D$[3,4],"/",D$[5,6]
Call VerifyDate(D1$,D$,E)
if e<>0
	let eflag=eflag+1
	LET message$=message$+" Invalid Date Entered "
	goto getstartvend:
endif
D$ = D1$[7,8],D1$[1,2],D1$[4,5]
X2 = D$[1,6] \ Gosub L_7840 \ X2 = 0
JAGDATE = X2

getstartvend: ! getting starting vendor
call dxget("SVEND",K2$)
if k2$="" let k2$="0"
let tmp=k2$
if tmp<0 or tmp>999999
	let eflag=eflag+1
	let message$=message$+" Invalid Starting Vendor. "
	goto getendvend:
endif
let k2$=tmp using "######"

getendvend: !
call dxget("EVEND",K3$) 
IF K3$="" Let K3$ = "999999" 
let tmp=k3$
if tmp<0 or tmp>999999
	let eflag=eflag+1
	let message$=message$+" Invalid Ending Vendor. "
	goto getdiv:
endif
let k3$=tmp using "######"
if not (eflag)
	if k2$>k3$
		let eflag=eflag+1
		let message$=message$+" Starting Vendor Must Be Greater Than Ending Vendor. "
	endif
endif

getdiv: !
if not(c0[6])
	let divflag=0;div[1]=0;div[2]=0;totflag=0
else

	call dxget("RDIVISIONS",tmp$) \ IF tmp$="" LET DIVFLAG = 0 else LET DIVFLAG = 99
	if divflag<>0
		call dxget("SDIVISION",tmp$)
		if tmp$="" let tmp$="0"
		let div[1]=tmp$
		if div[1]<0 or div[1]>99
			let eflag=eflag+1
			let message$=message$+" Invalid Starting Division. "
			goto getenddiv:
		endif
		getenddiv: ! get ending division
		call dxget("EDIVISION",tmp$) 
		if tmp$="" let tmp$="99"
		let div[2]=tmp$
		if div[2]<0 or div[2]>99
			let eflag=eflag+1
			let message$=message$+" Invalid Ending Division. "
			goto getconsdiv:
		endif
		if not(eflag)
			if div[1]>div[2]
				let eflag=eflag+1
				let message$=" Starting Division Must Be Greater Than Ending Division"
			endif
		endif
		
		getconsdiv:
		call dxget("CDIVISION",tmp$) \ if tmp$="" let TOTFLAG=0 else TOTFLAG=99
	endif
endif
IF EFLAG<>0 GOTO OUTEND: !

!
! can't use the new method as the ending of the report (below)
! attempts to send a status back - which won't work
! if we close out the dx session (setoutput)
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  ! Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!

! must be done after parameter validation
! as the validation may need to send back
! error message

If J8 ! dx xml, setup rstr$
  !<section> 
  tmp$ = bsdel$,"536",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 


!
if j8
  tmp$="CLIENT",FDEL$
  tmp$=tmp$,"VENDOR #",fdel$
  tmp$=tmp$,"VENDOR NAME",fdel$
  tmp$=tmp$,"INV. CODE",fdel$
  tmp$=tmp$,"DUE DATE",fdel$
  tmp$=tmp$,"FUTURE",fdel$
  tmp$=tmp$,"CREDIT",fdel$
  tmp$=tmp$,"CURRENT ",fdel$
  tmp$=tmp$,"OVER 30",fdel$
  tmp$=tmp$,"OVER 60",fdel$
  tmp$=tmp$,"OVER 90",fdel$
  tmp$=tmp$,"TOTAL",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
if DIVFLAG=0 goto L_1900
!
! start with division
L_1435:
K10$ = " ",K10$ \ K10$[1,2] = DIV[1] Using "##"
Search #10,2,1;K10$,R[10],E \ If Not(E) Goto L_1460
!!If E > 1 Gosub ERR_SEARCH
L_1450:
Search #10,3,1;K10$,R[10],E \ If E = 2 Goto L_1500
!!If E Gosub ERR_SEARCH
L_1460: DIV[0] = K10$ \ If DIV[0] > DIV[2] Goto L_1500
Mat Read #10,R[10],12;DIV$;
Goto L_1900
!
L_1500: Rem END OF DIVISION RANGE
DIVFLAG = 0
If TOTFLAG Goto L_1900
Goto OUTEND

L_1900: E = 0
!!
K1$ = K2$
VEND$ = ""
L = 60
!
L_2000: 
Search #2,3,1;K1$,R[2],E 
If E = 2 Goto L_9100
Mat Read #2,R[2],0;I$;
If I$[1,1] = "0" Goto L_2000
If I$[1,1] = "6" Goto L_2000
If I$[1,1] = "9" Goto L_2000
If I$[3,3] = "3" Goto L_2000
Mat Read #2,R[2],112;O4;
If DIVFLAG If DIV[0] <> O4[1] Goto L_2000
If K1$[1,6] > K3$[1,6] Goto L_9100
If VEND$[1,6] <> K1$[1,6] Gosub L_4200
VEND$[1,6] = K1$[1,6]
Mat Read #2,R[2],12;I1;
Mat Read #2,R[2],40;C;
Mat Read #2,R[2],100;I3$;
If I$[3,3] = "2" Let A = 1
If I$[3,3] = "2" Goto L_2160
X2 = I1[3] \ Gosub L_7840 \ X2 = 0
JAPDATE = X2;A = JAGDATE - JAPDATE
If A > 0 Let A = Int(A / 30) + 2
If A <= 0 Let A = 0
If A > 5 Let A = 5
L_2160: Gosub L_5800
let totrec=totrec+1
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[11] = T9[11] + (C - C[5] - C[7])
T9[A + 5] = T9[A + 5] + (C - C[5] - C[7])
A3[6] = A3[6] + (C - C[5] - C[7])
A3[A] = A3[A] + (C - C[5] - C[7])
I$[4,4] = A
Return 
!
L_4000: Rem TOTAL PRINT
Gosub L_5800
IF J8 RETURN
Print #0;"** TOTALS **";
Print #0; Using "---------.--"; Tab 46;T9[5];
Print #0; Using "---------.--"; Tab 58;T9[6];
Print #0; Using "---------.##"; Tab 70;T9[7];
Print #0; Using "---------.##"; Tab 82;T9[8];
Print #0; Using "---------.##"; Tab 94;T9[9];
Print #0; Using "---------.##"; Tab 106;T9[10];
Print #0; Using "---------.##"; Tab 118;T9[11];
Print #0;""
Return 
!
L_4200: Rem NEW VENDOR
If VEND$ = "" Goto L_4300
Gosub L_5800
IF NOT(J8)
  Print #0;"* * * VENDOR TOTALS * * *";
  Print #0; Using "---------.##"; Tab 46;A3[0];
  Print #0; Using "---------.##"; Tab 58;A3[1];
  Print #0; Using "---------.##"; Tab 70;A3[2];
  Print #0; Using "---------.##"; Tab 82;A3[3];
  Print #0; Using "---------.##"; Tab 94;A3[4];
  Print #0; Using "---------.##"; Tab 106;A3[5];
  Print #0; Using "---------.##"; Tab 118;A3[6];
  Print #0;" "
END IF
For I = 0 To 5 \ C3[I] = A3[I] \ Next I
If DIVFLAG Goto L_4280
L_4280: 
For I9 = 0 To 6 \ A3[I9] = 0 \ Next I9
IF NOT(J8) Print #0;" " 
L = L + 1
If E Return 
If K1$[1,6] > K3$[1,6] Return 
!
L_4300: Rem SEARCH VENDOR FILE
If VEND$ = "" Gosub L_5800
A1$[1,6] = K1$[1,6]
A$ = " ",A$
A$ = "NOT ON FILE!!!"
E = 0
Search #3,2,1;A1$,R[3],E
If E Goto L_4345
Mat Read #3,R[3],0;A$;
L_4345: IF NOT(J8) Print #0;A1$[1,6]; Tab 7;A$[1,18];
Return 
!
L_5000: Rem PRINT LINE
if j8!!!xml
  tmp$=rtrim$(G9$),fdel$
  tmp$=tmp$,A1$[1,6],fdel$,RTRIM$(A$[1,30]),fdel$
  tmp$=tmp$,RTRIM$(I3$[1,12]),fdel$
  X2 = I1[3] \ Gosub L_8900
  tmp$=tmp$,P$[1,8],fdel$
  if A<=0 
    tmp$=tmp$,(C[0] - C[5] - C[7]) Using "---------.##",fdel$ !!!future
    tmp$=tmp$,"0.00",fdel$ ! CM
	tmp$=tmp$,"0.00",fdel$ !CURRENT
	tmp$=tmp$,"0.00",fdel$ !30
	tmp$=tmp$,"0.00",fdel$ !60
	tmp$=tmp$,"0.00",fdel$ !90
  else 
	if A=1
	  tmp$=tmp$,"0.00",fdel$
      tmp$=tmp$,(C[0] - C[5] - C[7]) Using "---------.##",fdel$  !!cr/memo
	  tmp$=tmp$,"0.00",fdel$
	  tmp$=tmp$,"0.00",fdel$
	  tmp$=tmp$,"0.00",fdel$
	  tmp$=tmp$,"0.00",fdel$
	else 
      if A=2
         tmp$=tmp$,"0.00",fdel$
		 tmp$=tmp$,"0.00",fdel$
		 tmp$=tmp$,(C[0] - C[5] - C[7]) Using "---------.##",fdel$ !!current 
		 tmp$=tmp$,"0.00",fdel$
		 tmp$=tmp$,"0.00",fdel$
		 tmp$=tmp$,"0.00",fdel$
	  else 
	     if A=3
			tmp$=tmp$,"0.00",fdel$
			tmp$=tmp$,"0.00",fdel$
			tmp$=tmp$,"0.00",fdel$
			tmp$=tmp$,(C [0]- C[5] - C[7])Using "---------.##" ,fdel$!!!over 30
			tmp$=tmp$,"0.00",fdel$
			tmp$=tmp$,"0.00",fdel$
		 else 
           if A=4
		     tmp$=tmp$,"0.00",fdel$
			 tmp$=tmp$,"0.00",fdel$
			 tmp$=tmp$,"0.00",fdel$
			 tmp$=tmp$,"0.00",fdel$
             tmp$=tmp$,(C[0] - C[5] - C[7]) Using "---------.##" ,fdel$!! over 60
			 tmp$=tmp$,"0.00",fdel$
		   else 
		     tmp$=tmp$,"0.00",fdel$
		     tmp$=tmp$,"0.00",fdel$
		     tmp$=tmp$,"0.00",fdel$
		     tmp$=tmp$,"0.00",fdel$
		     tmp$=tmp$,"0.00",fdel$
             tmp$=tmp$,(C[0] - C[5] - C[7]) Using "---------.##" ,fdel$!! over 90
		   end if
		end if
      end if
    end if 
  end if 
 tmp$=tmp$,(C - C[5] - C[7]) Using "---------.##",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
else !
  Print #0; Tab 26;I3$[1,12];!!invoice code
  X2 = I1[3] \ Gosub L_8900
  Print #0; Tab 38;P$[1,8];!!due date
  Print #0; Using "---------.##"; Tab (A * 12 - 12 + 58);C - C[5] - C[7];!!future, cr/memo, current , over 30 60 90
  Print #0; Using "---------.##"; Tab 118;C - C[5] - C[7];!!total
  Print #0;" "
End if!!!
Return 
!
L_5800: 
if J8 return ! dx xml
!
L = L + 1
If L < L8 Return 
If L8 <> 23 Goto L_5820
!!If P <> 0 Input "\15\PRESS <CR> TO CONTINUE "J$
L_5820: 
If P Print #0;"\14\";
Print #0;"\15\"; Tab (Int(66 - Len(G9$) / 2));G9$
P = P + 1
Print #0; Tab 10;"DATE: ";D8$;
Print #0; Tab 37;"ACCOUNTS PAYABLE AGED OPEN INVOICE REPORT BY DUE DATE";
Print #0; Tab 110;"PAGE";P
If DIVFLAG Print #0; Tab 5;DIV$[1,30];
Print #0; Tab 45;"AGING DATE AS OF ";D1$
Print #0;" "
Print #0; Tab 9;"VENDOR NAME ";
Print #0; Tab 26;"INVOICE CODE";
Print #0; Tab 39;"DUE DATE";
Print #0; Tab 52;"FUTURE";
Print #0; Tab 64;"CR/MEMO";
Print #0; Tab 75;"CURRENT";
Print #0; Tab 87;"OVER 30";
Print #0; Tab 99;"OVER 60";
Print #0; Tab 111;"OVER 90";
Print #0; Tab 124;"TOTAL";
Print #0;""
L = 6
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!

!!L_8100: !!Print 'CS'; Tab 20;"ACCOUNTS PAYABLE AGED TRIAL BALANCE"
!!L_8102: !!Print @15,5;'CL';"ENTER ACCOUNTS PAYABLE AGING DATE (MMDDYY) ";
!!Input ""D$
!!If D$ = "" Goto OUTEND
!!If D$ = "-1" Goto OUTEND
!!If Len(D$) <> 6 Print 'RB CL';" INVALID!! " \ Signal 3,20 \ Goto L_8102
!!D1$ = D$[1,2],"/",D$[3,4],"/",D$[5,6]
!!Call VerifyDate(D1$,D$,E)
!!If E
!!  Print @0,23;'CL RB';"INVALID DATE!!!!"; \ Signal 3,30 \ Goto L_8100
!!End If 
!!Print @15,7;'CL';"AGING WILL BE AS OF ";D1$;
!!L_8120: !!Print @15,9;'CL';"AGING DATE OK (Y/N) ";
!!Input ""D$
!!If D$ = "-1" Goto OUTEND
!!If D$ = "N" Goto L_8100
!!If D$ <> "Y" Goto L_8120
!!D$ = D1$[7,8],D1$[1,2],D1$[4,5]
!!X2 = D$[1,6] \ Gosub L_7840 \ X2 = 0
!!JAGDATE = X2
!!Return 

!
L_8900: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&"
P$[1,2] = U5$[3,4]
P$[3,3] = "/"
P$[4,5] = U5$[5,6]
P$[6,6] = "/"
P$[7,8] = U5$[1,2]
If P$[1,1] = "0" Let P$[1,1] = " "
Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4200
Gosub L_4000
For K = 0 To 11
  T9[K] = 0
Next K
If DIVFLAG Goto L_1450
goto OUTEND
!
!!L_9145: 
!!If L8 = 23 Input "\15\PRESS <CR> TO CONTINUE "J$
!!Goto L_1000
!!Stop 
!

ERR_SEARCH: Rem                               
ENUM = E;ELINE = Spc(16);CTERR = 0            
If E = 5 Let CTERR = Err(8)                   
msg$ = "RETURN STATUS",(E + (CTERR * .001))   
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$                                     
Call programdump("/tmp/536.se!","")        
Call programdump()                            
! goto err_msg ! Error 10000                  
e$ = msg$ \ Error 10000                       
Return ! End 

ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End                 

OUTEND: Rem EXIT PROGRAM

If j8 and not(eflag) ! dx xml
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
else
	ReturnStatus = 0                                                        
	If eflag > 0                                                            
		ReturnStatus = 1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues             
		tmp$ = ""                                                             
	End If                                                                  
	If Not(eflag)                                                           
		If Not(totrec)                                                        
			ReturnStatus = 1                                                    
			Message$ = Message$ + "There are no transactions to print"          
			Message$ = Message$ + "."                                           
		Else                                                                  
			Message$ = Message$ + " " + Str$(totrec) + " Transaction(s) Printed"
		End If                                                                
	End If                                                                  
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)                  
	Call AddToStr(e$,rstr$,WebStr$)                                         
	Call SetOutPut(e$,rstr$)                                                
End If 
Else
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program