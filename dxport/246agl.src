! >>> Program 246agl
!
! description CREDIT JOURNAL - Part 3
!
! loadsave -w -n 100,10 -o prog/dxport/246agl.dl4 src/246agl.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX246AGL   - CREDIT JOURNAL
Rem AUTH: ANTO   MAR 20, 1987
Rem LAST UPDATE: MTK 7/88 INTFC G/L
! Last Update:  roman 06/07/1991.  routine to check totals (4500)
! Last Update: B.Swet 3/17/92 add routine to set status in tracdel (3800)
! last update:  rek 3/11/93 freight addons
!               jlp 12/05/96  ropen #21,#23
!  jliu 2/23/99 cct#119860 if the cost u/m is cwt, let the qty equal
!       to the ext wt and recalculate the glcost
!		mtg 2/28/99 cct#120299 include all slsm cost for daily load cost
!  jlp 5/27/99 cct118014 for kits, if no cost, use kit cost
!  jlp 6/21/99 cct123873 if g/l not on, still need kit file opened
!  jlp 12/9/99 cct129899 skip c/m type 6 during checking lines vs totals
! jliu 12/15/99 cct130084 get teh sign from the order qty in L2500 routine 
! jliu 8/24/04 cct181646 add the range of whse and range of division
! -------NOTES FOR UPGRADE TO REV10 FOR PAPER & CHEMICAL ------------------------
! mtg 03/12/96 cct 87846 - on associated items (vendor code 4920) with commodity
!                          code of "TIME", use load cost from line for g/l cost.
! mtg 07/03/06 cct 92363 - modified above change(cct87846) to use average cost
!                          instead of load cost from the line for g/l cost.
!  custom code for checking-> IF P8$[5,5]="P" (in 2 places, labeled with "P&C")
!->also fixed a bug, moved the label "L_7770:" up 1 line so the previous line
!   would be executed if whse pricing is turned off
! ---------   NOTES FOR UPGRADE TO XREV9 FOR WHITE RIVER PAPER ------------------
! used rev9 program & added in custom code for:
! rjs 02/08/2000 cct130603 united items use loaded cost for g/l cost
! ------------------------------------------------------------------------------
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 28, 2008  11:55:17
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx246agl.src (univ2) [jcs] {54502}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,getglobals,env,programdump
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave
Declare Intrinsic function findchannel
External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
  Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare Intrinsic Sub DateToJulian 
Declare External Sub GetCostLevels
Declare External function buildsort,getuidrec
!Option Default Dialect IRIS1
Try

Com 2%,S9[9]
Com 1%,PFU1[20],CNVTU[2],SC,SR,FLAG,IntCo,AudOnly,Cost_lev[3]
Com 3%,PFU2[6],A[33],CNVTA[4],rstr$[2000]
DIM 1%,HGLWHSE
dim 1%,fmcode
dim 1%,usglflag
Dim F$[20],F1$[16],P8$[7],K4$[30],K35$[20],K35A$[20],K5$[20]
Dim 1%,G[2],3%,G1[10],G2[20],G3[20],G4[20],G5[20],G6[20],G7[20],G8[20]
Dim 1%,F9[4],GLDET,MODE,JTL[2],JTL2,BDGLACCT,P0[1023]
Dim 1%,H3[1],C[17],CLFLAG,L9,WHLM[1],LM[1],REBATEFLAG,LOCKPORT
Dim 3%,B7[3],G9[20],G0[20],M0[20],M1[20],B6[1],B9,LINESALES,LINECOSTS,S3[17]
Dim 3%,T1[3],GLCOST,GLCOST1,FCOST,OLM[5],TOT[4],LTAX1,A[33],MCHARGE[9,1]
Dim 1%,W0,B4,J7,3%,JTL1[14],JTTL[13],4%,T6
Dim 1%,H4[2],S1,S2,S7,J1,J2,J8,J9,P1,OLS2[1],MTAB
Dim 2%,H0[12],W1,D9[5],H5[16],N1,DL[12],H6[8],MCODE[9]
Dim 2%,B0,B8[1],S[8],CLIENT,TL6[5],LC0[1],CHKCLIENT
Dim C1$[30],C2$[30],L1$[60],L2$[20],P9$[50],U8$[131]
Dim 3%,QTY,T2[25],L5[3],L7[12],T7[13],1%,UN[2],L3[3],2%,L4[3],L6[5]
Dim 2%,JRNL,A3$[36]
Dim 2%,JRNL1,D1[1],BADDATECHECK
dim 3%,r[50],FF9[6],X4[6]
dim 1%,pgmlit,k40$[30],3%,whmisc2[7]
Dim J$[20],CNAME$[30],J2$[20],J3$[40],J4$[40],J8$[8],D9$[10]
Dim 1%,F8,X1,x11,E,J,2%,X2,3%,X3,T9[20]
Dim KL$[58],1%,KL1[5],KITFLAG,3%,KITCOST,KL3[1],2%,KL2[1],K24$[20],K16$[20]
Dim K1$[50],K3$[20],X$[10],D1$[10],D2$[5]
Dim 1%,WHSE,LOCKRELEASED,HWHSE,LWHSE,ABRT_FLAG[10]
DIM HGLCOMM$[4]
Dim P1$[156],A$[10],CRIP$[40]
Dim 2%,B[24],C4[8],FIFL
Dim 3%,P5,W3[24],TEMPCOST,UNF[6],R1
Dim 3%,TL5[3],TL7[12],TUNF[6]
Dim G9$[140],L9$[2],CLIENT$[4],G8$[2]
Dim P60$[50],K9$[30],XX$[10],U5$[40]
Dim P61$[256],userid$[8],custom_customer$[30]
Dim nextblockid$[8],Message$[800],WebStr$[800]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],msg$[100]
Chain Read T8,intco,rstr$,audonly
!If Err 0 Let J8 = Spc(8)
J8 = 0
Try  J9 = Chf(0)  Else Let J8=49
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 60 \ If J8 Let J9 = 24
Dim 1%,FL1[2],FL1$[80],2%,FL2[3],3%,FL3[14]
Dim 1%,FT1[3],FT1$[72],2%,FT2[3],3%,FT3[3]
Dim 2%,FIFL,FLT$[50],3%,FQ9[2],FQTY,FLK$[50],I$[30]
Dim FSKEY$[30],3%,FC2[1]
Dim 1%,FIFOSPECCH[10],FIFOSPEC1[10],FIFOSPEC$[150],2%,FIFOSPEC2[10],3%,FIFOSPEC3[16]
Dim 2%,COID
Dim 2%,WHOS
Dim 3%
D9 = Spc(5)
COID = IntCo ! Int((D9 - Int(D9 / 16384) * 16384) / 64)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
S1 = 10 \ S2 = 11 \ U8$ = "=",U8$
LOCKRELEASED = 0
S7 = S9[0];JRNL = S9[3];GLDET = S9[4]
Call dxget("S_USER.ID",userid$) \ userid$ = UCase$(userid$) !user id
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
MAT READ #1,52,82;HGLWHSE;	 ! HELD INVENTORY WAREHOUSE
IF HGLWHSE<1 OR HGLWHSE>99 LET HGLWHSE=0
MAT READ #1,52,100;HGLCOMM$; ! HELD INVENTORY COMMODITY CODE
FOR CTR=1 TO 4
	IF HGLCOMM$[CTR,CTR]="" LET HGLCOMM$[CTR,CTR]=" "
NEXT CTR
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,0,100;J8$;
Read #1,18,120;D1$;
Read #1,3;CNAME$;

Mat Read #1,0,108;D1;
Mat Read #1,20,218;BADDATECHECK;
!! REM GET DATES. CONVERT CURRENT DATE TO JULIAN
!! REM NOW USES X2 TO CONVERT TO JULIAN
X2 = Tim(6) ! today's date julian     
FF9[1] = X2
!!  FF9[1] IS CURRENT DATE IN JULIAN
!! ---------------------------
X2 = D1 !CONVERT CURRENT A/R DATE TO JULIAN
tmp$ = X2 Using "&&&&&&"
Call DateToJulian(1,tmp$,tmp1$,e) ! from yymmdd to jjjjj
If Not(e) Let FF9[2] = tmp1$ Else Let FF9[2] = 0
!!  FF9[2] IS CURRENT A/R DATE IN JULIAN
!! ---------------------------
!! REM CHECK IF # OF DAYS FOR BAD DATE CHECK IS REASONABLE
!! VALID VALUES 14-350 DAYS, & -1 FOR DISABLED, 0 DEFAULTS TO 60 DAYS
If BADDATECHECK > 350 Let BADDATECHECK = 60
If BADDATECHECK = 0 Let BADDATECHECK = 60
If BADDATECHECK >= 0 If BADDATECHECK < 14 Let BADDATECHECK = 60
If BADDATECHECK < 0 If BADDATECHECK <> -1 Let BADDATECHECK = 60

Mat Read #1,52,60;P8$; \ Mat Read #1,52,0;S;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
CUSTOM_CUSTOMER$ = UCase$(trim$(CUSTOM_CUSTOMER$))
let usglflag=0
if custom_customer$="ARDS3455" let usglflag=1
if custom_customer$="PCS" let usglflag=1
if custom_customer$="WHITERIVER" let usglflag=1
! If Err 0 Rem
For J = 10 To 30
	Try Close #J Else Rem
Next J
Try Close #40 Else  REM
! If Err 0 Gosub ERR_TRAP
CRIP$ = "cntrl/crip"+str$(COID)
For J = 10 To 24
  Read J1 \ If J1 = -1 Goto L_850
  If J = 16 Goto L_830
  If J = 13 Goto L_830
  If J = 24 Goto L_830
  If J = 18 Goto L_830
  If P9$[17,17] <> "Y" Goto L_850
L_830: Read #1,88,J1;J$;
  Open #J,J$
L_850: Next J
Data "2176","80","464","1248","2032","-1","1792","272","1744","-1","-1","-1","-1","-1","1312"
Mat Read #1,88,2768;J$; \ Ropen #23,J$
If P9$[17,17] = "Y" Mat Read #1,88,48;J$; \ Open #22,J$
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_1000
For J = 19 To 20
  Read J1 \ If J1 = -1 Goto L_930
  Read #1,88,J1;J$;
  Open #J,J$
L_930: Next J
Data "3008","3024"
If P61$[60,60] = "Y"
  J$ = "4/FIFOSPC"+Str$(COID) 
  Ropen #29,J$
End If 
j$="2/PRODGRP"+Str$(COID)
ROPEN #40,J$! PRODGROUP
Mat Read #1,3,192;FIFL;
I$ = " ",I$
I$ = "[1:256] 6/FIFOCTMP";I$[Len(I$) + 1] = Spc(6) Using "&&&&","!"
Build #30,I$
R[30] = 13
Search #30,0,1;I$,R[30],E \ If E Gosub ERR_SEARCH
R[30] = 1 \ Search #30,0,0;I$,R[30],E \ If E Gosub ERR_SEARCH
L_1000: ! If Err 0 Gosub ERR_ESCAPE
! Print @0,22;"PROCESSING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
Gosub L_4500
If F9 Goto OUTEND
If P9$[17,17] <> "Y" And P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_9100
CLFLAG = 0
If P9$[17,17] <> "Y" Goto L_1700
Mat Read #1,51,0;C; \ If Not(C[3]) Goto L_1700
If P8$[7,7] <> "W" And P8$[7,7] <> "D" Goto L_1700
CLFLAG = 99
Mat Read #1,88,688;J$; \ Ropen #21,J$
L_1700: Rem CLR GLCMTEMP EXC SP REC
If P9$[17,17] <> "Y" Goto L_1800
J4$ = " ",J4$
L_1720: Search #11,3,1;J4$,R[11],E
If E = 2 Goto L_1800
If E Gosub ERR_SEARCH
Search #11,5,1;J4$,R[11],E
If E Gosub ERR_SEARCH
E = 3 \ Search #11,1,0;J4$,R[11],E
If E Gosub ERR_SEARCH
Goto L_1720
L_1800: F8 = 0
! Print @0,22;"PROCESSING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! If J8 Print 'CS';
K1$ = " ",K1$
J1 = 90
J1 = 99 \ F8 = 0 \ K1$ = "#}"
L_2010: Search #9,3,1;K1$,R[9],E \ If E > 2 Gosub ERR_SEARCH
If E = 2 Goto L_2800
If K1$[1,1] = "#" Goto L_2800
If K1$[17,17] = "D" Goto L_2010
For J = 0 To 3 \ T1[J] = 0 \ Next J
R[2] = R[9] \ Gosub L_3600
T1[2] = - H5[14]
T9[1] = T9[1] - H5[14]
CLIENT = 0;HWHSE = H4[2];WHSE = HWHSE
If CLFLAG
  If P8$[7,7] = "D" Mat Read #21,H5[8],76;CLIENT;
  If P8$[7,7] = "W" Mat Read #23,H4[2],844;CLIENT;
End If 
If Not(CLIENT) Let CLIENT = S[0]
If S7 = 11 If JRNL If JRNL1 <> JRNL Goto L_2010
If P9$[17,17] = "Y" Gosub L_8800
Gosub L_3000
If P9$[17,17] = "Y" Gosub L_5000
REBATEFLAG = 0
If Not(GLDET) Goto L_2120
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800 \ Gosub L_5900 \ F8 = 99
Endif
L_2120: J2$ = " ",J2$ \ J2$ = H0[7] Using "######  "
L_2130: Search #5,3,1;J2$,R[5],E
If E = 2 Goto L_2400
If E Gosub ERR_SEARCH
X3 = J2$[1,6]
If X3 <> H0[7] Goto L_2400
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_2130
Gosub L_3700
If L3[2] > 900 Goto L_2130
If OLS2[0] = 3 Goto L_2130
LWHSE = L4[3] \ If LWHSE <= 0 Or LWHSE > 99 Let LWHSE = HWHSE
If Not(L3[0]) Let R[16] = L4[0] \ Gosub L_7400
WHSE = LWHSE
If P9$[17,17] = "Y" Gosub L_8800
GLCOST1 = L7[10]
KITFLAG = 0
If P9$[22,22] = "Y" And L2$[14,16] = "KIT" And L7[4] <> 0 And L3[0] = 0 And OLS2[0] = 0 Goto L_8500
Gosub L_2500
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Goto L_2300
If L3[1] = 0 Goto L_2300
If L3[0] = 1 Goto L_2300
If P9$[17,17] = "Y" If P8$[5,5] = "I" If S7 = 11 Let GLCOST = GLCOST1 \ Goto L_2300
If P9$[17,17] = "Y" If P8$[5,5] = "F" If S7 = 11 Let GLCOST = GLCOST1 \ Goto L_2300
If S7 = 11 Goto L_2300
WHSE = LWHSE
If H5[7] = 8 Let WHSE = HWHSE \ WHSE = H5[11] \ L7[4] = - L7[4]
Gosub L_6600
If H5[7] = 8 Let WHSE = LWHSE \ L7[4] = - L7[4]
If P8$[5,5] = "I" Let GLCOST = FCOST
If P8$[5,5] = "F" Let GLCOST = FCOST
L_2300: If P9$[17,17] <> "Y" Goto L_2130
If Not(GLDET) Goto L_2315
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800
endif
L_2315: Gosub L_5500
L7[10] = GLCOST \ Write #5,R[5],228;L7[10];
If glcost=0 and l7[7]<>0 and l3[0]=0 and l3[1]=0! no gl cost, unit gl cost, stock item, update n
	let l7[7]=0\write #5,r[5],210;l7[7];
endif
If H5[7] <> 8 Goto L_2130
WHSE = LWHSE \ WHSE = H5[11]
GLCOST = - (GLCOST)
If P9$[17,17] = "Y" Gosub L_8800
If Not(GLDET) Goto L_2355
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800
endif
L_2355: Gosub L_5500
WHSE = LWHSE
Goto L_2130
L_2400: Rem END OF LINE ITEMS
F8 = 0
If Not(GLDET) Goto L_2475
If Not(T1[0]) Goto L_2430
J7 = 1 \ Gosub L_5800
Print #0; Using "*** INVOICE IS OUT OF BALANCE FOR ORDER ###### ***"; Tab 15;H0[7]
F9[0] = 99;F9[1] = 99
L_2430: If Abs(T1[3]) <= Abs(T1[1]) Goto L_2445
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800
	Print #0; Tab 15;"*** COST IS GREATER THAN SALE ***"
endif
L_2445: If Abs(T1[3]) <= Abs(T1[2]) Goto L_2460
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800
	Print #0; Tab 15;"*** TOTAL G/L COST IS GREATER THAN ";D1$;": G/L COST= ";T1[3];"  ";D1$;"= ";T1[2];
	If REBATEFLAG
		Print #0;" (Rebate/Contract Cost)";
	End If 
	Print #0;""
endif
REBATEFLAG = 0
L_2460: ! 
if f9[3]=99
	LET J7=1 \ GOSUB L_5800:                                                 
	PRINT #0; USING "*** G/L Account Number Error for Order ###### ***";TAB 15;H0[7];
	let f9=99; f9[2]=99 ! flag as acct not found
	let f9[3]=0
endif 
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800 \ Print #0;U8$[1,130]
	Print #0;""
	J1 = J1 + 1
endif
L_2475: Goto L_2010
L_2500: Rem GLARCNTRL PRD CAT
GLCOST = 0
If L3[3] <= 1 Let L3[3] = 1
If L3[3] >= 20 Let L3[3] = 20
B4 = L3[3]
If P8$[3,3] <> "Y" Let B4 = 0
P5 = 0
If H3[1] = 3 Goto L_2715
IF usglflag<>0 ! if custom_customer$="PCS" or custom_customer$="WHITERIVER" if custom_customer$="ARDS3455"
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" !P&C#87846,92363
	 IF L3[0]=0 GOTO L_2545 ELSE  GOTO L_2690 !P&C#87846,92363
	ENDIF  !P&C#87846,92363
Endif
if l3[1]=0
	if usglflag<>0 ! if custom_customer$="PCS" if custom_customer$="ARDS3455"
		if l2$[17,20]="LABR" OR l2$[17,20]="MACH" RETURN ! "custom pcs-
	Else
	  If L2$[17,20] = "LABR" Or L2$[17,20] = "MACH" Or L2$[17,20] = "TIME" Return 
	End If
Endif
If L3[0] Goto L_2660 ! nonstock item
If L3[1] = 0 Goto L_2660 ! update stock N
L_2545: If H5[7] = 8 Goto L_2560
If L3[1] = 0 And L5[1] = 0 Goto L_2715
L_2560: If P9$[17,17] <> "Y" Goto L_2715
P5 = 0 \ If P9$[32,32] <> "Y" Goto L_2630
K9$ = " ",K9$ \ K9$[1,12] = P1$[140,151]
K9$[13,14] = WHSE Using "##"
Search #18,2,1;K9$,R[18],E \ If E = 1 Goto L_2630
If E Gosub ERR_SEARCH
Mat Read #18,R[18],78;W3;
If P9$[32,32] = "Y" Gosub L_69000
if usglflag<>0 ! if custom_customer$="PCS" if custom_customer$="ARDS3455"
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" 
		if custom_customer$="WHITERIVER"
			p5=w3[17]! white#130603 united item use loaded cost for g/l cost
			goto l_2625:
		else
			GOTO L_2620 !P&C
		endif
	endif
endif

If P8$[5,5] = "R" Or P8$[5,5] = "F" Let P5 = W3[16] \ Goto L_2625
If P8$[5,5] = "I" Let P5 = W3[16] + ((W3[16] * FIFL) / 100) \ Goto L_2625
If P8$[5,5] = "W" Let P5 = W3[17] \ Goto L_2625
If P8$[5,5] = "B" Let P5 = W3[18] \ Goto L_2625
L_2620: P5 = W3[15]
L_2625: If P5 Goto L_2655
L_2630: !
if usglflag<>0 ! if custom_customer$="PCS" if custom_customer$="ARDS3455"
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" 
		if custom_customer$="WHITERIVER" !whit#130603
			p5=b[8]!white#130603  united item use loaded cost for g/l cost
			goto l_2655:
		else
			GOTO L_2650 !P&C
		endif
	endif
endif

If P8$[5,5] = "R" Or P8$[5,5] = "F" Let P5 = B[10] \ Goto L_2655
If P8$[5,5] = "I" Let P5 = B[10] + ((B[10] * FIFL) / 100) \ Goto L_2655
If P8$[5,5] = "W" Let P5 = B[8] \ Goto L_2655
If P8$[5,5] = "B" Let P5 = C4[4] \ Goto L_2655
L_2650: P5 = B[21]
L_2655: Rem IF P5>0 LET L5[1]=P5
L_2660: GLCOST = 0
let pgmlit=0
if usglflag<>0 ! if custom_customer$="PCS" or custom_customer$="WHITERIVER" ! if custom_customer$="ARDS3455"
	IF L2$[17,20]="TIME" AND P9$[2,2]<>"M" AND L3[1]=0 AND P8$[4,4]="Y" 
		if custom_customer$="ARDS3455" let p5=0
		if not(p5) let p5=l7[7] 
		if not(p5) let p5=l5[1] 
		LET GLCOST=FNR(P5*L7[4])
		GOTO L_2685: !P&C
	endif
endif ! below not remmed on PCS??
!If P8$[4,4] = "Y" And L3[0] = 1 Goto L_2690
!If P8$[4,4] = "Y" And H5[7] = 3 And P60$[22,22] = "N" Goto L_2690
!If P8$[4,4] = "Y" And H5[7] = 2 Goto L_2690
!If L3[1] = 0 Goto L_2715
!If L3[0] = 1 Goto L_2715
If L3[0] = 1 ! nonstock item                                    
    let glcost=0                                                
    IF P8$[4,4]="Y" and h3[1]<>3                                
        IF L7[7]<>0                                             
                LET GLCOST=FNR(L7[7]*l7[4])                     
        ELSE                                                    
                LET GLCOST=FNR(L5[1]*l7[4])                     
        Endif                                                   
    endif                                                       
    Goto L_2715: ! nonstock                                     
endif                                                           
If L3[1] = 0 ! update stock no                                  
    let glcost=0                                                
    if h3[1]=3 goto L_2715: ! price change credit memo type     
    if p8$[4,4]<>"Y" goto L_2715: ! update non-inventory not Yes
	if H5[7]=1 and l3[0]=0 ! update gl =Y order type 1 and stock item
		! check product group in prodwhse
		K9$ = " ",K9$ \ K9$[1,12] = P1$[140,151]
		K9$[13,14] = WHSE Using "##"
		Search #18,2,1;K9$,R[18],E \ If E = 1 Goto L_2715:
		If E Gosub ERR_SEARCH
		mat read #18,r[18],846;whmisc2;
		if not(whmisc2[0]) goto L_2715:
		let k40$=whmisc2[0] using "###"
		search #40,2,1;k40$,r[40],e\ if e<>0 goto L_2715:
		mat read #40,r[40],136;pgmlit;
		if not(pgmlit) goto L_2715:
		IF L7[7]<>0                                                 
			LET GLCOST=FNR(L7[7]*l7[4])                             
		ELSE                                                        
			LET GLCOST=FNR(L5[1]*l7[4])                             
		Endif         ! 
	endif!  warehouse order and Goto L_2715 ! stock is No
    if h5[7]<2 goto L_2715: ! not direct
	if H5[7]>3 goto L_2715: ! not indirect   
    if H5[7]=3 AND P60$[22,22]<>"N" GOTO L_2715:    ! indirect and stock update flag is not N                       
    IF L7[7]<>0                                                 
        LET GLCOST=FNR(L7[7]*l7[4])                             
    ELSE                                                        
        LET GLCOST=FNR(L5[1]*l7[4])                             
    Endif                                                       
    Goto L_2715: ! 
endif
L_2685: If P5 > 0 Let L5[1] = P5
L_2690: QTY = L7[4]
If KITFLAG Let QTY = KL3[1]
If KITFLAG If P5 <= 0 Let L5[1] = KL3[0]
If UN[2] = -2 And P5 = 0 Let QTY = 1
!If L7[7] Let GLCOST = FNR(L7[7] * QTY) Else Let GLCOST = FNR(L5[1] * QTY)
If UN[2] = -1 Or UN[2] = -3 !"cct#119860
  Mat Read #5,R[5],32;TL5; \ Mat Read #5,R[5],56;TL6;
  Mat Read #5,R[5],168;TL7; \ Mat Read #5,R[5],452;TUNF;
  If TL7[7] Let TEMPCOST = TL7[7] Else Let TEMPCOST = L5[1]
  QTY = S3[4]
  TEMPSIGN = Sgn(TL7[2])
  If P5 <= 0 Let A[5] = TUNF[5];A[6] = TL6[4]
  IF L3[0]<>0 LET A[5]=TUNF[5];A[6]=TL6[4] ! non-stock use factors from line 
  IF NOT(A[5])
	LET A[5]=TUNF[5];A[6]=TL6[4] ! non-stock use factors from line 
  ENDIF
  IF NOT(A[5]) LET A[5]=1
  IF NOT(A[6]) LET A[6]=1
  CNVTA = TEMPCOST \ CNVTU[0] = 0 \ CNVTU[1] = -1 \ CNVTU[2] = 2
  Gosub L_20000 \ TEMPCOST = AMOUNT
  GLCOST = FNR(TEMPCOST / 100 * QTY) * TEMPSIGN
End If 
L_2715: Return 
L_2800: Rem ACCT TTLS
If P9$[17,17] <> "Y" Goto L_9100
CLIENT = 0
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	D2$ = "DAILY";T9[0] = T9[1]
	Gosub L_5800 \ Print #0; Tab 70;D2$;" ";D1$; \ Print #0; Using "---------#.##"; Tab 92;T9[0]
	Gosub L_4150 \ D2$ = "M-T-D";T9[0] = T9[2]
	Gosub L_5800 \ Print #0; Tab 70;D2$;" ";D1$; \ Print #0; Using "---------#.##"; Tab 92;T9[0]
	Print #0;" "
	Print #0;" "
	Print #0;" "
	J1 = J1 + 5
endif
F8 = 98 \ T6 = 0 \ BDGLACCT = 0
If GLDET Let J1 = 99
Rem LET J1=99  !IF NEW PAGE NEEDED AFTER DAILY/MTD LOADED COST PRINTED
K1$ = " ",K1$
L_2836: Search #11,3,1;K1$,R[11],E
If E = 2
  Gosub L_2950 \ Goto L_4000
End If 
If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;B6; \ Mat Read #11,R[11],12;B8;
If B8[1] <> CLIENT
  If CLIENT Gosub L_2950
  CLIENT = B8[1] \ Gosub L_8400
  If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	If J1 + 4 >= J9 Gosub L_5810 Else Gosub L_6000
	Gosub L_5800 \ Print #0; Using "#### "; Tab 35;"CLIENT: ";CLIENT;G9$[11,50]
	Print #0;"" \ J1 = J1 + 1
  endif
End If 
Gosub L_4200
J7 = 1
Gosub L_6100
If BDGLACCT Goto L_2932
K3$ = " ",K3$ \ K3$[1,4] = CLIENT Using "####" \ K3$[5,12] = B6 Using "########"
Search #17,2,1;K3$,R[17],E \ If Not(E) Goto L_2932
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #17,1,0;K3$,R[17],E \ If E Gosub ERR_SEARCH
B7[0] = B6 \ B7[1] = 0 \ B7[2] = 0 \ B7[3] = 0 \ B0 = B8[1]
Mat Write #17,R[17],0;B7 \ Mat Write #17,R[17],24;B0;
Search #17,4,1;K3$,R[17],E \ If E Gosub ERR_SEARCH
L_2932: BDGLACCT = 0 \ Goto L_2836
L_2950: Rem PRINT ACCT TTLS
Gosub L_6200
If T6
  F9[0] = 99;F9[1] = 99
End If 
If F9
  Print #0;"**** ";
  If F9[1] Print #0;"OUT OF BALANCE!!! ";
  If F9[2] Print #0;"ACCOUNT NOT ON FILE!!! ";
  If f9[4] Print #0;"UNREASONABLE/BAD DATE ";
  Print #0;"NO UPDATE PERFORMED!!! ****"
  Message$="**** "
  If F9[1] let message$=message$+"OUT OF BALANCE!!! "
  If F9[2] let message$=message$+"ACCOUNT NOT ON FILE!!! "
  If f9[4] Let Message$ = Message$ + "UNREASONABLE/BAD DATE "
  let message$=message$+"NO UPDATE PERFORMED!!! ****"
  Goto OUTEND
End If 
Return 
L_3000: Rem CUST
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R[6],E
If E Gosub ERR_SEARCH
Mat Read #6,R[6],30;C1$;
Return 
L_3200: Rem BILLTO
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R[6],E
If E > 1 Gosub ERR_SEARCH
If E If H0[1] = H0[4] Gosub ERR_SEARCH
If E If H0[1] <> H0[4] Let H0[1] = H0[4] \ Write #2,R[2],4;H0[1] \ Goto L_3200
Mat Read #6,R[6],30;C2$;
Return 
L_3500: Rem CHG STS
J4$ = " ",J4$ \ J4$ = 93 Using "##"
J4$[3] = H0[7] Using "######"
Search #2,2,1;J4$,R[2],E
If E Return 
Search #2,5,1;J4$,R[2],E
If E Gosub ERR_SEARCH
J4$[1,2] = S2 Using "##"
J4$[3] = H0[7] Using "###### "
Search #2,4,1;J4$,R[2],E
If E Gosub ERR_SEARCH
H0 = S2 \ Write #2,R[2];H0;
Return 
L_3600: Rem READ HEAD
Mat Read #2,R[2],0;H0
Mat Read #2,R[2],52;H3;
Mat Read #2,R[2],78;H4
Mat Read #2,R[2],104;H5
Mat Read #2,R[2],408;H6
R[4] = H0[3]
Mat Read #4,R[4],8;T2;
Mat Read #4,R[4],164;JRNL1; \ Mat Read #4,R[4],168;MCODE;
Mat Read #4,R[4],208;MCHARGE; \ Mat Read #4,R[4],328;TOT;
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
Return 
L_3700: Rem READ LINE
Mat Read #5,R[5],8;L3;
Mat Read #5,R[5],16;L4;
Mat Read #5,R[5],32;L5;
Mat Read #5,R[5],56;L6;
Mat Read #5,R[5],80;L1$;
Mat Read #5,R[5],140;L2$;
Mat Read #5,R[5],168;L7;
Mat Read #5,R[5],250;UN;
Mat Read #5,R[5],256;OLS2;
Mat Read #5,R[5],260;S3;
Mat Read #5,R[5],404;OLM; \ Mat Read #5,R[5],508;LTAX1;
Mat Read #5,R[5],452;UNF;
Mat Read #5,R[5],494;LC0;
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1]
Return 
L_3800: Rem ========================================= CHANGE STATUS DELETED
J4$ = " ",J4$ \ J4$ = S1 Using "##"
J4$[3] = DL[3] Using "##########"
Search #13,2,1;J4$,R[2],E
If E Return 
Search #13,5,1;J4$,R[2],E
If E Gosub ERR_SEARCH
J4$[1,2] = S2 Using "##"
J4$[3] = DL[3] Using "##########"
Search #13,4,1;J4$,R[2],E
If E Gosub ERR_SEARCH
DL[0] = S2 \ Write #13,R[2];DL[0];
Return 
L_4000: Rem MONTH TO DATE GL BALANCES
T6 = 0 \ J7 = 1
If P9$[17,17] <> "Y" Goto L_9100
F8 = 97 \ Print #0;"" \ J1 = J1 + 1
K1$ = " ",K1$ \ CLIENT = 0
L_4021: Search #17,3,1;K1$,R[17],E \ If E = 2 Goto L_4100
If E Gosub ERR_SEARCH
Mat Read #17,R[17],0;B7; \ Mat Read #17,R[17],24;B0;
B6[1] = 0
K3$ = K1$[1,4] \ Search #11,3,1;K3$,R[11],E \ If E = 2 Goto L_4021
If E Gosub ERR_SEARCH
If K1$[1,4] <> K3$[1,4] Goto L_4021
If CLIENT <> B0
  If CLIENT Gosub L_2950
  CLIENT = B0 \ Gosub L_8400
  If J1 + 4 >= J9 Gosub L_5810 Else Gosub L_6000
  Gosub L_5800 \ Print #0; Using "#### "; Tab 35;"CLIENT:";CLIENT;G9$[11,50]
  Print #0;"" \ J1 = J1 + 1
End If 
B6[1] = 0 \ If S7 = 11 Goto L_4081
K3$ = " ",K3$ \ K3$[1,12] = K1$[1,12]
Search #11,2,1;K3$,R[11],E \ If E = 1 Goto L_4081
If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;B6; \ Mat Read #11,R[11],12;B8;
L_4081: B6[1] = B6[1] + B7[1] + B7[2] + B7[3]
B6 = B7 \ Gosub L_4200
Gosub L_6100
Goto L_4021
L_4100: Rem PRINT ACCT TTLS
Gosub L_6200
Goto L_9100
L_4150: Rem GET MTD LOAD
Mat Read #8,0,42;T7;
T9[3] = T7[1]
If P9$[35,35] = "Y" Let T9[3] = T9[3] + T7[5]
If P9$[38,38] = "Y" Let T9[3] = T9[3] + T7[4]
T9[2] = T9[3] - T7[6]
If S7 = S2 Return 
T9[2] = T9[2] - T9[1]
Return 
L_4200: Rem READ ACCOUNT NAME FOR GLM
BDGLACCT = 0
A3$[15] = "*ACCT NOT ON FILE*"
J4$ = " ",J4$ \ J4$[1,9] = B6 Using "#########"
Search #15,2,1;J4$,R[15],E \ If E Let F9[0] = 99;F9[2] = 99
If E Let BDGLACCT = 99 \ Goto L_4250
Mat Read #15,R[15],0;A3$;
L_4250: Return 
L_4300: Rem UPDATE OK
If T6 Return 
If S7 = S2 Return 
! If Err 0 Rem
Try Close #0 Else Rem
!If Err 0 Gosub ERR_TRAP
If AudOnly Return ! NO UPDATE!
L_4320: ! Print @0,22;'CE';" HAS THIS JOURNAL PRINTED CORRECTLY? (Y/N) ";
!Input ""X$ \ If X$ = "N" Return 
X$="Y" ! if here, we're doing update
If X$ <> "Y" Goto L_4320
TMP$="doing a lock"
call "proglock.dl4","246AGL",1,TMP$
! Print @0,22;'CE';"Updating..."
For W0 = 0 To D9[5]
  Mat Read #8,W0,42;T7
  For X1 = 0 To 6
    T7[X1] = T7[X1] - T8[W0,X1]
    T7[X1 + 7] = T7[X1 + 7] - T8[W0,X1]
  Next X1
  Mat Write #8,W0,42;T7;
Next W0
Gosub L_4400
Gosub L_6500
LOCKRELEASED = 1
If P9$[17,17] = "Y" Gosub L_7200
If P60$[9,9] = "F" Or P60$[9,9] = "L" Gosub L_7300
Gosub L_7000
Read #1,20,46;N1
N1 = N1 + 1 \ If N1 > 999999 Let N1 = 1
Write #1,20,46;N1;
Return 
L_4400: Rem UPDATE JRNL SUMMARY DETAIL BY WH/DIV/OTYPE
For J = 0 To 13 \ JTTL[J] = 0 \ Next J
K35A$ = " ",K35A$;K35A$[1,2] = 1 Using "##"
L_4420: Search #35,3,1;K35A$,R35,E \ If E > 2 Gosub ERR_SEARCH
If E = 2 Goto L_4499
J = K35A$[1,2] \ If J <> 1 Goto L_4499
WH = K35A$[3,4];DV = K35A$[5,6];OTYP = K35A$[7]
Mat Read #35,R35,6;JTL1;
For J = 0 To 9 \ JTTL[J] = 0 - JTL1[J] \ Next J
JTTL[13] = JTL1[13];JTTL[11] = JTL1[11];JTTL[12] = JTL1[12]
K35$ = K35A$;K35$[1,2] = 2 Using "##"
Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Gosub L_6400
Mat Read #35,R35,6;JTL1
For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
Mat Write #35,R35,6;JTL1;
K35$[1,2] = 3 Using "##"
Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Gosub L_6400
Mat Read #35,R35,6;JTL1
For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
Mat Write #35,R35,6;JTL1;
K35$[1,2] = 31 Using "##"
Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Gosub L_6400
Mat Read #35,R35,6;JTL1
For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
Mat Write #35,R35,6;JTL1;
Gosub L_6460
For J = 0 To 13 \ JTTL[J] = 0 \ Next J
Goto L_4420
L_4499: Return 
L_4500: Rem "=================== check prices/costs  (lines vs. totals)
J1 = 90 \ J2 = 0
K1$ = "93"
L_4520: Search #2,3,1;K1$,R[2],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_4900
If K1$[1,2] > "93" Goto L_4900
Mat Read #2,R[2],0;H0
Mat Read #2,R[2],52;H3 \ If H3[1] = 6 Goto L_4520
Mat Read #2,R[2],104;H5
Mat Read #2,R[2],408;H6
Mat Read #4,H0[3],8;T2;
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
X4 = h0[8] !CHECK IF DATE REASONABLE
Gosub L_6799
LINESALES = 0 \ LINECOSTS = 0
K3$ = " ",K3$;K3$ = K1$[3,8]
L_4590: Search #5,3,1;K3$,R[5],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_4700
If K3$[1,6] <> K1$[3,8] Goto L_4700
X2 = K3$[7,10] \ If X2 > 900 Goto L_4700
If (H5[7] = 21 Or H5[7] = 22) And K3$[7,9] = "   " Goto L_4590
Mat Read #5,R[5],32;L5;
Mat Read #5,R[5],260;S3;
Mat Read #5,R[5],404;OLM;
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1]
LINESALES = LINESALES + L5[3]
LINECOSTS = LINECOSTS + S3[12]
Goto L_4590
L_4700: Rem "end of order. check totals here
!! REM CHECK FOR UNREASONABLE DATES FIRST
abrt_flag[3] = 0
If BADDATECHECK <> -1
  If X4[3] > BADDATECHECK
    f9 = 99;f9[4] = 99
    FF9[4] = h0[8] !STORE DATE & ORDER #
    FF9[5] = h0[7]
    abrt_flag[3] = 1
  End If 
End If 

X2 = K1$[1,2]
If H0[0] <> X2 Goto L_4715
If abrt_flag[3] = 1 Goto L_4715  !BAD OR UNREASONABLE DATE
If (LINESALES = T2[1]) And (LINECOSTS = T2[17]) Goto L_4790
L_4715: Gosub L_4800
Gosub DISP_ERROR_INFO
If H0[0] <> X2 Print #0;"STATUS ERRORS" \ J1 = J1 + 1
J1 = J1 + 1
F9 = 99;F9[1] = 99
L_4790: Goto L_4520
L_4800: Rem "heading
If J1 < J9 Return 
! If Not(J2) If J8 Print 'CS'
If Not(J8) Print #0;"\14\"
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;" ";
Print #0; Tab 10;J8$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 246AGL - ";Msc$(3);
Print #0; Using "######";"  JOURNAL: ";JRNL;
Print #0; Tab 52;"C R E D I T   J O U R N A L";
If Audonly print #0;" - PREVIEW"  Else Print #0;""
Print #0;" "
If J2 > 1 Goto L_4885
Print #0;"CREDIT JOURNAL HAS NOT BEEN ACCEPTED!"
Print #0;" "
Print #0;"THE FOLLOWING IS A LIST OF CREDITS WHERE COST/PRICE PROBLEMS WERE"
Print #0;"DETECTED.  PLEASE CORRECT THE PROBLEMS AND RUN THE CORRECTED JOURNAL."
Print #0;" "
Print #0;"IF UNABLE TO CORRECT THE PROBLEMS, CONTACT UNIVERSAL BUSINESS SYSTEMS."
Print #0;" "
J1 = J1 + 7
L_4885: Print #0; Tab 1;"ORDER #"; Tab 10;"CUSTOMER"; Tab 21;"TOTAL COSTS";
Print #0; Tab 39;"LINE COSTS"; Tab 57;"TOTAL SALES"; Tab 75;"LINE SALES"
Print #0;" "
Return 
L_4900: Rem "end of check
Return 
L_5000: Rem PRINT LINES
If Not(GLDET) Goto L_5130
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 4 \ Gosub L_5800
	Print #0; Using "######";H0[7];
	Print #0; Using "######"; Tab 10;"CUSTOMER: "; Tab 20;H0[4];
	Print #0; Tab 28;C1$[1,30];
	Print #0; Using "###"; Tab 61;"WHS: ";HWHSE;
	Print #0; Using "###"; Tab 71;"DIV: ";H5[8];
	Print #0; Using "###"; Tab 81;"ORDER TYPE: ";H5[7];
	Print #0; Using "##"; Tab 98;"CREDIT TYPE: ";H3[1]
	Print #0;""
	Print #0; Tab 2;"ACCTS REC:";
	Print #0; Using "########"; Tab 12;G1[0];
	Print #0; Using "---------.##"; Tab 22;( - T2[0]);
endif
L_5130: B6 = G1[0] \ B9 = - T2 \ Gosub L_7500
If Not(GLDET) Goto L_5190
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	Print #0; Tab 38;"DISCOUNT:";
	Print #0; Using "########"; Tab 48;G1[1];
	Print #0; Using "------.##"; Tab 58;( - T2[3]);
endif
L_5190: B6 = G1[1] \ B9 = - T2[3] \ Gosub L_7500
If Not(GLDET) Goto L_5240
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	Print #0; Tab 69;"OTHER   :";
	Print #0; Using "########"; Tab 79;G1[2];
	Print #0; Using "------.##"; Tab 89;T2[6];
endif
L_5240: B6 = G1[2] \ B9 = T2[6] \ Gosub L_7500
If P60$[42,42] <> "Y" And T2[7] = 0 Goto L_5300
If P60$[42,42] = "Y" And TOT[3] = 0 Goto L_5300
B9 = 0 \ If P60$[42,42] <> "Y" Let B9 = T2[7] Else Let B9 = TOT[3]
If Not(B9) Let B6 = 0 \ Goto L_5275
R[10] = H4[0] \ Read #10,R[10],60;B6; \ If Not(B6) Let B6 = G1[4]
L_5275: If Not(GLDET) Goto L_5295
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	Print #0; Tab 100;"SLS TAX :";
	Print #0; Using "########"; Tab 110;B6;
	Print #0; Using "------.##"; Tab 120;B9;
endif
L_5295: Gosub L_7500
L_5300: If Not(GLDET) Goto L_5340
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	Print #0;""
	Print #0; Tab 2;"FREIGHT : ";
	Print #0; Using "########"; Tab 12;G1[5];
	Print #0; Using "---------.##"; Tab 22;T2[5];
endif
L_5340: B6 = G1[5] \ B9 = T2[5] \ Gosub L_7500
MTAB = 38
For X = 0 To 9
  If Not(MCHARGE[X,0]) Goto L_5485
  Mat Read #14,MCODE[X],44;B6[0]; !\ If Not(B6) Let B6 = G1[3]
  IF NOT (B6) ! MISC CHARGE CODE DOES NOT HAVE A G/L #
		IF INT(FRA(MCODE[X]*10)*10)=9 !  sys calculated delivery charge
			LET B6=G1[6]
		ELSE
			LET FMCODE=0
			If H5[7]=2 ! DIRECTS
				READ #1,171,242;FMCODE;
			ELSE
				IF H5[7]<>16 ! do not include transfers
					read #1,172,242;fmcode;
				endif
			endif
			if fmcode<>0 and fmcode=int(mcode[x]) let b6=g1[6]
		endif
	endif
	IF NOT(B6)
		LET B6=G1[3]
	ENDIF
  B9 = MCHARGE[X,0]
  If GLDET
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		If MTAB > 100
			Print #0;"" \ J7 = 1 \ Gosub L_5800 \ MTAB = 2
		End If 
		Print #0; Using "########"; Tab (MTAB);"MISC CHG:"; Tab (MTAB + 10);B6;
		If MTAB = 2 Print #0; Using "---------.##"; Tab (MTAB + 20);B9;
		If MTAB <> 2 Print #0; Using "------.##"; Tab (MTAB + 20);B9;
		If MTAB = 2 Let MTAB = 38 Else Let MTAB = MTAB + 31
	Endif
  End If 
  Gosub L_7500
L_5485: Next X
If GLDET 
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		Print #0;""
	endif
endif
Return 
L_5500: Rem GL LINE DETL
If GLDET
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		If LC0[1]
			If Abs(S3[12]) < Abs(GLCOST)
				REBATEFLAG = 99
				Print #0; Using "CNTRCT######";LC0[1];
			End If 
		End If 
	endif
End If 
If P60$[42,42] = "Y"
  If LTAX1
    B9 = LTAX1 \ Mat Read #10,L6[5],60;B6; \ If Not(B6) Let B6 = G1[4]
    If GLDET
		If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
			Print #0; Using "########"; Tab 16;B6;
			Print #0; Using "-------.##"; Tab 27;B9;
		endif
    End If 
    Gosub L_7500
  End If 
End If 
If GLDET
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		Print #0; Using "####"; Tab 40;L3[3];
	endif
End If 
T1[1] = T1[1] - L5[3]
B6 = 0 \ B9 = L5[3]
B6 = G3[B4]
If GLDET
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		Print #0; Using "########"; Tab 49;B6;
		Print #0; Using "---------.##"; Tab 60;B9;
	endif
End If 
Gosub L_7500
! COST OF GOODS SOLD
If GLCOST ! NO G/L COST
  B6 = 0 \ B9 = GLCOST * (-1)
  If H5[7] = 8 Goto L_5605
  B6 = G5[B4]
  if l2$[17,20]=HGLCOMM$[1,4] and h5[7]=1 and L3[1]<>0 ! HELD STOCK COMMODITY CODE, ORDER TYPE 1, UPDATE STOCK=Y
		IF HGLWHSE<>0
			let whse=HGLWHSE
			gosub L_8800:
			LET B6=G5[B4]
		ENDIF
	endif
	IF P8$[4,4]="Y" and H5[7]=1 and l3[0]=0 and l3[1]=0 and pgmlit<>0 ! updt ns=Y, ot=1whs, stkupdt=N,nsitem=N, millitem=Y
		let hordtype=h5[7]
		let h5[7]=2 ! mill item treat as direct
		gosub L_8800:
		let b6=g5[b4]
		let h5[7]=1
		gosub L_8800:
	endif
  If GLDET
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		Print #0; Using "########"; Tab 75;B6;
		Print #0; Using "---------.##"; Tab 86;B9;
	endif
  End If 
  T1[3] = T1[3] + B9
  Gosub L_7500
End If 
L_5605: Rem ** INVENTORY ***
If GLCOST = 0 Goto L_5690
If H5[7] <> 7 Goto L_5630
WHSE = HWHSE \ WHSE = H5[11] \ Gosub L_8800
WHSE = LWHSE
L_5630: B6 = G4[B4] \ B9 = GLCOST
IF P8$[4,4]="Y" and H5[7]=1 and l3[0]=0 and l3[1]=0 and pgmlit<>0
		let hordtype=h5[7]
		let h5[7]=2 ! mill item treat as direct
		gosub L_8800:
		let b6=g4[b4]
		let h5[7]=1
		gosub L_8800:
		goto L_5670:
endif
If P9$[2,2] <> "M" Goto L_5670
If L2$[17,20] = "LABR" Let B6 = G8[B4] \ Goto L_5670
If L2$[17,20] = "TIME" Let B6 = G9[B4] \ Goto L_5670
If L2$[17,20] = "MACH" Let B6 = G0[B4] \ Goto L_5670
If L3[0] = 1 Goto L_5670
R[16] = L4[0]
Mat Read #16,R[16],0;P1$;
If P1$[139,139] = "B" Let B6 = M0[B4]
L_5670: If Not(GLDET) Goto L_5685
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	Print #0; Using "########"; Tab 104;B6;
	Print #0; Using "---------.##"; Tab 115;B9;
endif
L_5685: Gosub L_7500
L_5690:! End of line
If GLDET
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		Print #0;""
	endif
endif
Return 
L_5800: Rem HEADING
J1 = J1 + J7 \ If J1 < J9 Return 
L_5810: ! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6 + J7
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
If P61$[60,60] = "Y" And (F8 = 97 Or F8 = 98)
  Print #0;" - 246SGL - ";
Else 
  Print #0;" - 246AGL - ";
End If 
Print #0;P8$[5,5];" ";Msc$(3);
Print #0; Tab 45;"D A I L Y  C R E D I T  J O U R N A L";
If Audonly print #0;" - PREVIEW"  Else Print #0;""
Read #1,18,30;D9$;
If S7 = 11 If Not(JRNL) Print #0; Tab 5;"ALL UNACCEPTED JOURNALS"; \ Goto L_5855
Print #0; Using "######"; Tab 5;"JOURNAL: ";JRNL;
L_5855: If Not(GLDET) Print #0; Tab 45;"G E N E R A L   L E D G E R   S U M M A R Y"
If GLDET Print #0; Tab 45;"G E N E R A L   L E D G E R   D E T A I L"
Print #0;""
If F8 = 97 Goto L_6000
If F8 = 98 Goto L_6000
If F8 = 99 Let J1 = J1 + 1 \ Goto L_5900
Return 
L_5900: Rem PRINT LINE ITEMS
If P60$[42,42] = "Y"
  Print #0; Tab 16;"TAX ACCT"; Tab 27;"TAX AMOUNT";
End If 
Print #0; Tab 39;"CTGY#";
Print #0; Tab 47;"SALES ACCT";
Print #0; Tab 63;"SALES AMT";
Print #0; Tab 75;"CGS ACCT";
Print #0; Tab 88;"CGS AMOUNT";
Print #0; Tab 101;"INVENT ACCT";
Print #0; Tab 117;"INVENT AMT";
Print #0;" "
Return 
L_6000: Rem PRINT ACCOUNT SUMMARY HEADING
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	If F8 = 97 Print #0; Tab 15;U8$[1,31];" *** MONTH TO DATE *** ";U8$[1,36] \ Goto L_6030
	Print #0; Tab 15;U8$[1,90]
	L_6030: Print #0; Tab 20;"ACCOUNT #"; Tab 50;"AMOUNT"; Tab 70;"ACCOUNT DESCRIPTION"
	Print #0; Tab 15;U8$[1,90]
	J1 = J1 + 3
endif
Return 
L_6100: Rem SUMMARY
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800
	Print #0; Using "########"; Tab 20;B6;
	Print #0; Using "----------.##"; Tab 43;B6[1];
	Print #0; Tab 70;A3$[15,36]
endif
T6 = T6 + B6[1]
Return 
L_6200: Rem PRINT ACCT BALANCE TOTALS
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
	J7 = 1 \ Gosub L_5800
	Print #0; Tab 15;U8$[1,90]
	Print #0; Using "--------.##"; Tab 45;T6;
	Print #0;""
	Print #0; Tab 15;U8$[1,90]
	J7 = J7 + 2
endif
Return 
L_6400: Rem ADD NEW JSDETL
E = 2
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Search #35,4,1;K35$,R35,E \ If E Gosub ERR_SEARCH
JTL[0] = WH;JTL[1] = DV;JTL[2] = OTYP
For J = 0 To 14 \ JTL1[J] = 0 \ Next J
JTL2 = K35$[1,2]
Mat Write #35,R35,0;JTL;
Mat Write #35,R35,6;JTL1; \ Mat Write #35,R35,126;JTL2;
Return 
L_6460: Rem DELETE journal record/key
K35$ = K35A$
Search #35,2,1;K35$,R35,E \ If E Return 
Search #35,5,1;K35$,R35,E \ If E Gosub ERR_SEARCH
E = 3
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Return 
L_6500: Rem OKAY
K1$ = "#}"
L_6520: Search #9,3,1;K1$,R[9],E \ If E > 2 Gosub ERR_SEARCH
If E Return 
If K1$[1,1] = "#" Goto L_6520
R[2] = R[9]
If K1$[17,17] = "D" Goto L_6580
Mat Read #2,R[2];H0
If H0 = 93 Gosub L_3500
Goto L_6520
L_6580: Mat Read #13,R[2];DL;
If DL[0] = S1 Gosub L_3800
Goto L_6520
L_6600: Rem UPDATE FIFOLOT & FIFOTRANS
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Return 
FCOST = 0
If H3[1] = 3 Return 
QTY = L7[4]
If H5[7] = 7 Let WHSE = H5[11]
If H5[7] = 8 Let QTY = - L7[4];WHSE = H5[11]
If KITFLAG Let QTY = KL3[1]
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  If Not(S3[4]) Return 
Else 
  If Not(QTY) Return 
End If 
For CTR = 0 To 16
  If CTR < 11 Let FIFOSPECCH[CTR] = 0;FIFOSPEC1[CTR] = 0;FIFOSPEC2[CTR] = 0
  FIFOSPEC3[CTR] = 0
Next CTR
FIFOSPEC$ = " ",FIFOSPEC$
Rem set fifo spec variable for channel #
FIFOSPECCH[0] = 19
FIFOSPECCH[1] = 20
FIFOSPECCH[2] = 29
FIFOSPECCH[3] = 23
FIFOSPECCH[4] = 16
FIFOSPECCH[5] = 18
FIFOSPECCH[6] = 30
Rem set fifospec 1 variables
FIFOSPEC1[0] = 246
FIFOSPEC1[1] = WHSE
FIFOSPEC1[2] = WHSE
FIFOSPEC1[3] = LWHSE
FIFOSPEC1[4] = H5[7]
Rem set fifospec 2 variables
FIFOSPEC2[0] = JARDATE
FIFOSPEC2[1] = 0
Rem set fifospec 3 variables
FIFOSPEC3[0] = QTY
FIFOSPEC3[1] = REFNO
FIFOSPEC3[2] = H0[4]
FIFOSPEC3[3] = L7[7]
If KITFLAG Let FIFOSPEC3[3] = 0
FIFOSPEC3[4] = L6[4]
FIFOSPEC3[5] = UNF[5]
FIFOSPEC3[6] = QTY
FIFOSPEC3[7] = S3[4] * (Sgn(QTY))
FIFOSPEC3[8] = 0
FIFOSPEC3[9] = 0
Rem set fifospec$ variable
FIFOSPEC$ = " ",FIFOSPEC$
FIFOSPEC$[1,12] = P1$[140,151]
Rem let fifospec$[13,24]= lot code
Rem let fifospec$[25,34]= serial #
Rem let fifospec$[35,40]= location
If P1$[127,127] = "Y" And P61$[73,73] = "Y"
  If Not(S3[4]) Return 
  FIFOSPEC3[0] = S3[4] * (Sgn(QTY))
  If L7[7]
    DISP_EXT = L7[7] * QTY
    FIFOSPEC3[3] = DISP_EXT / S3[4]
  End If 
End If 
Call "MXFIFOCOST.DL4",FIFOSPECCH[],FIFOSPEC1[],FIFOSPEC2[],FIFOSPEC3[],FIFOSPEC$,e$,rstr$
FCOST = FIFOSPEC3[8]
If P61$[60,60] = "Y" Let FCOST = FIFOSPEC3[9]
Return 
Rem! old fifo code
FCOST = 0 \ If Not(L7[4]) Goto L_6790
If H3[1] = 3 Return 
FQ9[0] = (Int(L7[4])) \ FQ9[1] = 0 \ FQ9[2] = 0
If KITFLAG Let FQ9[0] = Int(KL3[1]) \ If Not(KL3[1]) Return 
If FQ9[0] >= 0 Goto L_6900
! If Err 0 Gosub ERR_TRAP
FLK$ = " ",FLK$ \ FLK$[1,12] = P1$[140,151] \ FLK$[13,14] = WHSE Using "##" \ MODE = 3
If P60$[9,9] = "L" Let FLK$[15] = "999999" \ MODE = 6
L_6635: Search #19,MODE,1;FLK$,R[19],E \ If E = 2 Goto L_6745
If E Gosub ERR_SEARCH
If FLK$[1,12] <> P1$[140,151] Goto L_6745
S9 = FLK$[13,14] \ If S9 <> WHSE Goto L_6745
Mat Read #19,R[19],102;FL3; \ If Not(FL3 - FL3[1]) Goto L_6635
FQ9[2] = FQ9[0] - FQ9[1]
If FQ9[2] > 0 If (FL3[0] - FL3[1]) < 0 Goto L_6690
FQTY = FL3[0]
For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
If FQ9[2] < 0 If FQTY > 0 Goto L_6690
If FQ9[2] >= 0 Goto L_6635
Goto L_6635
L_6690: Gosub L_6800
If FQ9[2] < 0 Goto L_6709
If (FL3[1] - FL3[0]) > 0 If (FL3[1] - FL3[0]) < FQ9[2] Let FQ9[2] = (FL3[1] - FL3[0])
FL3[4] = Int(FL3[4] - FQ9[2])
Goto L_6721
L_6709: If FQ9[2] > 0 Goto L_6739
FQTY = FL3[0]
For S9 = 1 To 5 \ FQTY = FQTY - FL3[S9] \ Next S9
For S9 = 8 To 11 \ FQTY = FQTY - FL3[S9] \ Next S9
If FL3[0] If FQTY < Abs(FQ9[2]) Let FQ9[2] = - (FQTY)
FL3[4] = Int(FL3[4] - FQ9[2])
L_6721: Gosub L_6850
Search #30,2,1;FLK$,R[30],E \ If Not(E) Goto L_6733
If E > 1 Gosub ERR_SEARCH
R[30] = R[19] \ Search #30,4,1;FLK$,R[30],E \ If E Gosub ERR_SEARCH
L_6733: Rem get the fifo cost
If P61$[60,60] = "Y" And FL3[14] <> 0
  FCOST = FCOST + FNR(FQ9[2] * FL3[14])
Else 
  If P8$[5,5] = "I" Let FCOST = FCOST + FNR(FQ9[2] * FL3[7])
  If P8$[5,5] = "F" Let FCOST = FCOST + FNR(FQ9[2] * FL3[6])
End If 
L_6739: FQ9[1] = Int(FQ9[1] + FQ9[2]) \ If FQ9[0] = FQ9[1] Goto L_6790
Goto L_6635
L_6745: Rem THE REST IS NOT FOUND
FQ9[2] = FQ9[0] - FQ9[1] \ If Not(FQ9[2]) Goto L_6790
FLK$[1,12] = P1$[140,151] \ FLK$[13,14] = WHSE Using "##" \ FLK$[15] = "999999" \ MODE = 6
If P60$[9,9] = "L" Let FLK$[15] = "" \ MODE = 3
Search #19,MODE,1;FLK$,R[19],E \ If E = 2 Goto L_6780
If E Gosub ERR_SEARCH
X = FLK$[13,14]
If FLK$[1,12] = P1$[140,151] And X = WHSE
  Read #19,R[19],186;FL3[14];
  If P61$[60,60] = "Y" And FL3[14] <> 0
    FCOST = FCOST + FNR(FQ9[2] * FL3[14]) \ Goto L_6790
  Else 
    If P8$[5,5] = "F"
      Read #19,R[19],138;FL3[6];
      FCOST = FCOST + FNR(FL3[6] * FQ9[2]) \ Goto L_6790
    End If 
    If P8$[5,5] = "I"
      Read #19,R[19],144;FL3[7];
      FCOST = FCOST + FNR(FL3[7] * FQ9[2]) \ Goto L_6790
    End If 
  End If 
End If 
L_6780: Rem not lots exist find the cost
If P61$[60,60] = "Y"
  R[23] = WHSE - 1
  If R[23] < 0 Goto GETWHSEFCOST
  If R[23] > Chf(23) Goto GETWHSEFCOST
  Read #23,R[23],2970;WHOS;
  If Not(WHOS) Goto GETWHSEFCOST
  FSKEY$ = " ",FSKEY$;FSKEY$[1,12] = P1$[140,151]
  FSKEY$[13,16] = WHOS Using "####"
  Search #29,2,1;FSKEY$,R[29],E \ If E > 1 Gosub ERR_SEARCH
  If E Goto GETWHSEFCOST
  Mat Read #29,R[29],38;FC2;
  FCOST = FCOST + (FNR(FQ9[2] * FC2[0]) * (-1)) \ Goto L_6790
End If 
GETWHSEFCOST: Rem get warehouse fifo cost
If P9$[32,32] = "Y"
  K9$ = " ",K9$ \ K9$[1,12] = P1$[140,151] \ K9$[13,14] = WHSE Using "##"
  Search #18,2,1;K9$,R[18],E
  If Not(E)
    Mat Read #18,R[18],78;W3;
    If W3[16] Let FCOST = FCOST + FNR(FQ9[2] * W3[16]) \ Goto L_6790
  End If 
End If 
Mat Read #16,L4[0],156;B; \ FCOST = FCOST + FNR(FQ9[2] * B[10])
L_6790: ! If Err 0 Gosub ERR_ESCAPE
Return 
L_6800: Rem READ FIFOLOT
Mat Read #19,R[19],0;FL1
Mat Read #19,R[19],6;FL1$
Mat Read #19,R[19],86;FL2
Mat Read #19,R[19],102;FL3
Return 
L_6850: Rem WRITE FIFOLOT
Mat Write #19,R[19],0;FL1
Mat Write #19,R[19],6;FL1$
Mat Write #19,R[19],86;FL2
Mat Write #19,R[19],102;FL3;
Return 
L_6900: Rem CHECK LAST FIFO COST
FQ9[2] = L7[4]
If Not(KITFLAG) And L7[7] <> 0
  FCOST = FCOST + (FNR(L7[7] * FQ9[2]))
  Goto L_6950
End If 
FLK$ = " ",FLK$ \ FLK$[1,12] = P1$[140,151] \ FLK$[13,14] = LWHSE Using "##" \ MODE = 3
If P60$[9,9] = "F" Let MODE = 6 \ FLK$[15] = "999999"
Search #19,MODE,1;FLK$,R[19],E \ If E = 2 Goto L_6940
If E Gosub ERR_SEARCH
X = FLK$[13,14]
If FLK$[1,12] = P1$[140,151] And X = LWHSE
  Read #19,R[19],186;FL3[14];
  If P61$[60,60] = "Y" And FL3[14] <> 0
    FCOST = FCOST + (FNR(FL3[14] * FQ9[2])) \ Goto L_6950
  Else 
    If P8$[5,5] = "F"
      Read #19,R[19],138;FL3[6]; \ FCOST = FCOST + (FNR(FL3[6] * FQ9[2]))
      Goto L_6950
    End If 
    If P8$[5,5] = "I"
      Read #19,R[19],144;FL3[7]; \ FCOST = FCOST + (FNR(FL3[7] * FQ9[2]))
      Goto L_6950
    End If 
  End If 
End If 
L_6940: Rem get the special cost
If P61$[60,60] = "Y"
  FSKEY$ = " ",FSKEY$;FSKEY$[1,12] = P1$[140,151];FSKEY$[13,14] = WHSE Using "##"
  Search #29,2,1;FSKEY$,R[29],E \ If E > 1 Gosub ERR_SEARCH
  If E = 1
    FSKEY$[13,14] = " 0"
    Search #29,2,1;FSKEY$,R[29],E \ If E > 1 Gosub ERR_SEARCH
    If E = 1 Goto GETWHSEFCOST1
  End If 
  Mat Read #29,R[29],38;FC2;
  FCOST = FCOST + (FNR(FQ9[2] * FC2[0]) * (-1)) \ Goto L_6950
End If 
GETWHSEFCOST1: Rem get warehouse fifo cost
If P9$[32,32] = "Y"
  K9$ = " ",K9$ \ K9$[1,12] = P1$[140,151] \ K9$[13,14] = LWHSE Using "##"
  Search #18,2,1;K9$,R[18],E
  If Not(E)
    Mat Read #18,R[18],78;W3;
    If W3[16] Let FCOST = FCOST + FNR(FQ9[2] * W3[16]) \ Goto L_6950
  End If 
End If 
Mat Read #16,L4[0],156;B; \ FCOST = FCOST + FNR(FQ9[2] * B[10])
L_6950: ! If Err 0 Gosub ERR_ESCAPE
Return 

!!================================================
L_6799: Rem ROUTINE TO CHECK REASONABLENESS OF DATES- 1) COMPARES 2 DATES:
If BADDATECHECK = -1 Let X4[3] = 0 \ Return !FLAG SET TO NO CHECK
XX$ = " ",XX$
tmp$ = X4 Using "&&&&&&"
Call DateToJulian(1,tmp$,tmp1$,e) ! from yymmdd to jjjjj
If e <> 0 Let X4[3] = 99999 \ Return !BAD DATE- SAY SO
!! GOOD DATE SO E=0 - PUT IN CONVERTED JULIAN DATE for COMPARE
X4[2] = tmp1$
!!  FF9[1] IS CURRENT DATE IN JULIAN (tim[6])
!!  FF9[2] IS CURRENT A/R DATE IN JULIAN
X4[3] = Abs(FF9[1] - X4[2]) ! NUMBER OF DAYS DIFF-DATES IN JULIAN
X4[4] = Abs(FF9[2] - X4[2])
If X4[4] > X4[3] Let X4[3] = X4[4]
Return 
!!================================================

L_7000: Rem DRAW AUD SECTION
Return 
L_7200: Rem UPDATE REG TOTALS IN SARMOA
If P9$[17,17] <> "Y" Return 
K1$ = " ",K1$
L_7215: Search #11,3,1;K1$,R[11],E \ If E = 2 Goto L_7285
If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;B6; \ Mat Read #11,R[11],12;B8;
K3$ = " ",K3$ \ K3$[1,12] = K1$[1,12]
Search #17,2,1;K3$,R[17],E \ If Not(E) Goto L_7265
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #17,1,0;K3$,R[17],E \ If E Gosub ERR_SEARCH
B7 = B6 \ B7[1] = 0 \ B7[2] = 0 \ B7[3] = 0 \ B0 = B8[1]
Mat Write #17,R[17],0;B7 \ Mat Write #17,R[17],24;B0;
Search #17,4,1;K3$,R[17],E \ If E Gosub ERR_SEARCH
L_7265: Mat Read #17,R[17],0;B7; \ Mat Read #17,R[17],24;B0
B7[3] = B7[3] + B6[1]
Mat Write #17,R[17],0;B7 \ Mat Write #17,R[17],24;B0;
Goto L_7215
L_7285: Return 
L_7300: Rem UPDATE FIFOLOT TOTALS
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Return 
K1$ = " ",K1$
L_7315: Search #30,3,1;K1$,R[30],E \ If E = 2 Goto L_7390
If E Gosub ERR_SEARCH
R[19] = R[30]
Mat Read #19,R[19],102;FL3;
FL3[5] = Int(FL3[5] + FL3[4])
FL3[4] = 0
Mat Write #19,R[19],102;FL3;
Search #30,5,1;K1$,R[30],E \ If E Gosub ERR_SEARCH
Goto L_7315
L_7390: Return 
L_7400: Rem READ PRODUCT FILE
Mat Read #16,R[16],0;P1$;
Mat Read #16,R[16],156;B; \ Mat Read #16,R[16],256;A;
Mat Read #16,R[16],894;C4;
Return 
L_7500: Rem UPDATE GLARTEMP
If Not(B9) Return 
if not(b6) let f9[3]=99 ! no gl account #
T1[0] = T1[0] + B9
K3$ = " ",K3$ \ B8[1] = CLIENT \ K3$[1,4] = B8[1] Using "####"
K3$[5,12] = B6 Using "########"
Search #11,2,1;K3$,R[11],E
If not(e)
	Mat Read #11,R[11],0;B6 \ Mat Read #11,R[11],12;B8
	B6[1] = B6[1] + B9
	Mat Write #11,R[11],0;B6 \ Mat Write #11,R[11],12;B8;
else
	L_7600: E = 2 \ Search #11,1,0;K3$,R[11],E
	If E Gosub ERR_SEARCH
	B6[1] = B9 \ B8 = 0 \ B8[1] = CLIENT
	Mat Write #11,R[11],0;B6 \ Mat Write #11,R[11],12;B8;
	Search #11,4,1;K3$,R[11],E
	If E Gosub ERR_SEARCH
endif
if gldet<>0 ! check lines
	if chkclient<>client
		gosub L_8400: ! open the g/l master file
		let chkclient=client
	endif
	if b6<>0
		LET J4$=" ",J4$ \ LET J4$[1,9]=B6 USING "#########"  
		SEARCH #15,2,1;J4$,R[15],e
		if e<>0 let f9[3]=99
	endif
endif
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8000: Rem CLR GLCMTEMP
If P9$[17,17] <> "Y" Return 
J4$ = ""
L_8015: Search #11,3,1;J4$,R[11],E
If E = 2 Return 
If E Gosub ERR_SEARCH
Search #11,5,1;J4$,R[11],E
If E Gosub ERR_SEARCH
E = 3 \ Search #11,1,0;J4$,R[11],E
If E Gosub ERR_SEARCH
Goto L_8015
L_8100: Rem CLEAR FIFO WORKFILE & UPDATE FIFOTOTALS
If P60$[9,9] <> "F" And P60$[9,9] <> "L" Return 
K1$ = " ",K1$
L_8115: Search #30,3,1;K1$,R[30],E \ If E = 2 Goto L_8160
If E Gosub ERR_SEARCH
R[19] = R[30]
Mat Read #19,R[19],102;FL3;
FL3[4] = 0
Mat Write #19,R[19],102;FL3;
Search #30,5,1;K1$,R[30],E \ If E Gosub ERR_SEARCH
Goto L_8115
L_8160: Close #30
I$ = "6/FIFOCTMP";I$[Len(I$) + 1] = Spc(6) Using "&&&&"
Kill I$
Return 
L_8200: Rem "================================================== clear jsdetl
K35$ = " ",K35$;K35$[1,2] = " 1"
L_8220: Search #35,3,1;K35$,R35,E \ If E If E <> 2 Gosub ERR_SEARCH
If E = 2 Goto L_8290
X3 = K35$[1,2] \ If X3 <> 1 Goto L_8290
Search #35,5,1;K35$,R35,E \ If E Gosub ERR_SEARCH
E = 3
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Goto L_8220
L_8290: Return 
L_8400: Rem OPEN G/L MASTER FILE FOR MULTIPLE CLIENTS
! If Err 0 Rem
Try Close #15 Else Rem
!If Err 0 Gosub ERR_ESCAPE
K5$ = " ",K5$ \ K5$[3,6] = CLIENT Using "####"
Search #22,2,1;K5$,R[22],E \ If E Gosub ERR_SEARCH
Mat Read #22,R[22],0;G9$;
L9 = G9$[135,136] \ If L9 < 10 Let L9$ = L9 Using "#" Else Let L9$ = L9 Using "##"
CLIENT$ = CLIENT Using "####"
For X11 = 1 To 4
  If CLIENT$[X11,X11] = " " Let CLIENT$[X11,X11] = "." ! ! task # 52766 chg var causing be#20
Next X11
G8$[1,1] = S[1] Using "&" \ G8$[2,2] = S[2] Using "&"
F$ = L9$,"/GLM",G8$[1,2],CLIENT$
Call FindF(F$,A9)
If Not(A9)
  e$="GENERAL LEDGER MASTER FILE NOT FOUND FOR CLIENT "+Str$(CLIENT) \ Gosub ERR_MSG
End If 
Open #15,F$
Return 
L_8500: Rem KITS
If L3[3] <= 1 Let L3[3] = 1
If L3[3] >= 20 Let L3[3] = 20
B4 = L3[3]
If P8$[3,3] <> "Y" Let B4 = 0
GLCOST = 0 \ If H3[1] = 3 Goto L_8645
KITCOST = 0 \ KITFLAG = 99
K24$ = " ",K24$ \ K24$[1,9] = J2$[1,9]
L_8515: Search #24,3,1;K24$,R[24],E \ If E = 2 Goto L_8630
If E Gosub ERR_SEARCH
If K24$[1,9] <> J2$[1,9] Goto L_8630
Mat Read #24,R[24],0;KL$; \ If KL$[1,12] <> L2$[1,12] Goto L_8515
Mat Read #24,R[24],58;KL1; \ Mat Read #24,R[24],70;KL2;
Mat Read #24,R[24],78;KL3;
If Not(KL1[3])
  K16$ = " ",K16$ \ K16$[1,12] = KL$[13,24]
  Search #16,2,1;K16$,R[16],E \ If E Gosub ERR_SEARCH
  Gosub L_7400
  If P1$[152,155] = "MACH" Or P1$[152,155] = "TIME" Or P1$[152,155] = "LABR" Let KL1[3] = 1 \ Goto L_8605
  If P9$[17,17] = "Y" Gosub L_2500
  If P60$[9,9] = "F" Or P60$[9,9] = "Y"
    If S7 = 11 And (P8$[5,5] = "I" Or P8$[5,5] = "F") Let GLCOST = GLCOST1 \ Goto L_8640
    WHSE = LWHSE \ Gosub L_6600
    If FCOST > 0 And (P8$[5,5] = "I" Or P8$[5,5] = "F") Let GLCOST = FCOST
  End If 
Else 
L_8605: GLCOST = 0
  If P8$[4,4] = "Y" Let GLCOST = (KL3[0] * KL3[1])
End If 
KITCOST = KITCOST + GLCOST
Goto L_8515
L_8630: Rem ENDOF KIT
GLCOST = FNR(KITCOST)
L_8640: If P9$[17,17] = "Y" And GLCOST = 0 Let GLCOST = FNR(L5[1])
L_8645: Goto L_2300
L_8800: Rem GLARCNTRL
If P9$[17,17] <> "Y" Return 
If P8$[2,2] = "N" Goto L_8840
K4$ = " ",K4$ \ K4$[1,2] = WHSE Using "##"
If P8$[1,1] = "Y" Let K4$[3,4] = H5[8] Using "##"
K4$[5,6] = H5[7] Using "##"
Search #12,2,1;K4$,R[12],E \ If E Goto L_8840
Goto L_8900
L_8840: If P8$[1,1] = "N" Goto L_8865
K4$ = " ",K4$ \ K4$[1,2] = WHSE Using "##"
K4$[3,4] = H5[8] Using "##"
Search #12,2,1;K4$,R[12],E \ If E Goto L_8865
Goto L_8900
L_8865: K4$ = " ",K4$ \ K4$[1,2] = WHSE Using "##"
Search #12,2,1;K4$,R[12],E \ If E Goto L_8880
Goto L_8900
L_8880:  ! get default
if whse=HGLWHSE and l2$[17,20]=HGLCOMM$[1,4] return ! use what already is on file
K4$ = "DFAULT" \ Search #12,2,1;K4$,R[12],E \ If E Gosub ERR_SEARCH
Goto L_8900
L_8900: Rem READ GLARCNTRL
Mat Read #12,R[12],0;G;
Mat Read #12,R[12],8;G1;
Mat Read #12,R[12],80;G2;
Mat Read #12,R[12],206;G3;
Mat Read #12,R[12],332;G4;
Mat Read #12,R[12],458;G5;
Mat Read #12,R[12],584;G6;
Mat Read #12,R[12],710;G7;
Mat Read #12,R[12],836;G8;
Mat Read #12,R[12],962;G9;
Mat Read #12,R[12],1088;G0;
Mat Read #12,R[12],1214;M0;
Mat Read #12,R[12],1340;M1;
Return 

L_9100: Rem END
If F9 Goto OUTEND
!If Err 0 Rem
Try Close #0  Else Rem
!If Err 0 Gosub ERR_TRAP
Gosub L_4300
! If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For X1 = 0 To 10
  T9[X1] = 0
Next X1
Goto OUTEND
Stop 
DISP_ERROR_INFO: Rem---------------------------------to screen & report
If abrt_flag[3]
  Print #0; Using "######"; Tab 1;h0[7];
  Print #0; Using "######"; Tab 10;h0[4];
  U5$ = " ",U5$
  XX$ = " ",XX$
  U5$[1,6] = h0[8] Using "&&&&&&"
  XX$[1,2] = U5$[3,4]
  XX$[4,5] = U5$[5,6]
  XX$[7,8] = U5$[1,2]
  XX$[3,3] = "/"
  XX$[6,6] = "/"
  Print #0; Tab 20;XX$[1,8];
  Print #0;"  ";X4[3];"DAYS";
  Print #0;" *** DATE OUT OF RANGE(UNREASONABLE DATE) "
  Message$ = Message$ + "DATE OUT OF RANGE(UNREASONABLE DATE) "
!! NOW CHECK IF THERE IS A LINE TOTALS PROBLEM-IF NOT - RETURN
  If (LINESALES = T2[1]) And (LINECOSTS = T2[17]) Return 
End If 

Print #0; Using "######"; Tab 1;H0[7];
Print #0; Using "######"; Tab 10;H0[4];
Print #0; Using "######.#########"; Tab 21;T2[17];
Print #0; Using "######.#########"; Tab 39;LINECOSTS;
Print #0; Using "######.#########"; Tab 57;T2[1];
Print #0; Using "######.#########"; Tab 75;LINESALES
!Print 'CS RB';@0,5;" ****************** ERROR ********************"
!Print @0,6;" *** LINE TOTALS DO NOT MATCH ORDER TOTALS ***"
!Print @0,7;" *********************************************";@0,9;
!Print Using "ORDER NO ######   CUSTOMER ######";H0[7];H0[4]
!Print @1,11;"LINE COSTS/"; Tab (30);"LINE SALES/"
!Print @1,12;"TOTAL COSTS"; Tab (30);"TOTAL SALES"
!Print Using "######.#########";@0,14;LINECOSTS;
!Print Using "######.#########";@0,15;T2[17];
!Print Using "######.#########";@28,14;LINESALES;
!Print Using "######.#########";@28,15;T2[1];
!Print @0,22;" PRESS <ENTER> TO CONTINUE ";
!Input ""X$
Let Message$="ORDER PROBLEMS - LINES DO NOT EQUAL HEADER TOTALS"
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B[21]
  If Not(W3[16]) Let W3[16] = B[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B[24]
End If 
Return 
RELEASE_LOCKS: Rem ------------------------------SET ORDER STATUS BACK
K1$ = "#}"
RELEASE_NEXT_LOCK: Rem
Search #9,3,1;K1$,R[9],E \ If E > 2 Gosub ERR_SEARCH
If E Return 
If K1$[1,1] = "#" Goto RELEASE_NEXT_LOCK
R[2] = R[9] \ R1 = R[9]
If K1$[17,17] = "D" Goto RELEASE_NEXT_LOCK
Mat Read #2,R[2];H0
If H0 = 93 Gosub CLEAR_JRNL_STATUS
Goto RELEASE_NEXT_LOCK
END_RELEASE_LOCKS: Rem ----------------------------------
SET_JRNL_STATUS: Rem "=================================== 92 = JOURNAL
If H0 >= 90 Return 
Read #2,R1,416;H6[2]
Read #2,R1,64;LOCKPORT
H6[2] = H0
LOCKPORT = Spc(6)
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #2,2,1;A$,R1,E \ If E = 1 Goto L_17110
If E Gosub ERR_SEARCH
Search #2,5,1;A$,R1,E
If E Gosub ERR_SEARCH
H0 = 92
L_17110: A$[1,2] = H0 Using "##"
E = 0
Search #2,4,1;A$,R1,E
If E > 1 Gosub ERR_SEARCH
Write #2,R1,0;H0
Write #2,R1,416;H6[2]
Write #2,R1,64;LOCKPORT;
Return 
CLEAR_JRNL_STATUS: Rem "=================================== RESET STATUS
If H0 < 93 Return 
Read #2,R1,416;H6[2]
Read #2,R1,64;LOCKPORT
If H6[2] <= 0 Let H6[2] = 10
If H6[2] > 11 Or Fra(H6[2]) Let H6[2] = 10
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #2,2,1;A$,R1,E \ If E = 1 Goto L_17420
If E Gosub ERR_SEARCH
Search #2,5,1;A$,R1,E
If E Gosub ERR_SEARCH
L_17420: A$[1,2] = H6[2] Using "##"
E = 0
Search #2,4,1;A$,R1,E
If E > 1 Gosub ERR_SEARCH
H0 = H6[2];H6[2] = 0
LOCKPORT = 0
Write #2,R1,0;H0
Write #2,R1,416;H6[2]
Write #2,R1,64;LOCKPORT;
Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
E$=msg$
Call programdump("tmp/cj246aglse!","")
goto Err_Msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
OUTEND: Rem EXIT
If P9$[17,17] = "Y" Gosub L_8000
Gosub L_8200
If P60$[9,9] = "F" Or P60$[9,9] = "L" Gosub L_8100
If Not(LOCKRELEASED) Gosub RELEASE_LOCKS
Kill CRIP$
Mat Read #1,120;P0;
P0[246] = 0
Mat Write #1,120;P0;
TMP$="do an unlock"
call "proglock.dl4","246",0,tmp$
TMP$="do an unlock"
call "proglock.dl4","246AGL",0,tmp$
If (F9) ! bad data/no update
	tmp$=Message$ ! added to rstr$ already!
Else
	tmp$="JOURNAL COMPLETE - OK"
	If AUDONLY tmp$="PREVIEW COMPLETE - NO UPDATE"
Endif
Let RN247=0 ! =========================== Change to 1 when ready to autorun 247 =============
If not(f9) and not(audonly) and RN247<>0 ! we're moving onto the next
	For X=2 to 89 ! printer already closed - leave 1 open
		Try Close #X  Else Rem
	Next X
	
	Chain "247.dl4"
Else
	Call SetOutput(e$,rstr$,1,tmp$) ! send ok and message
	! call programdump("/tmp/crlog11!","")
Endif
!Print 'CS'
!Chain "MX000C"
!Chain "MX000"
!Stop 
Try call dxclose() Else Rem
Rem {begin rtn.error.s}
Else
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
