! >>> Program 439
!
! description Product Evaluation
!
! loadsave -w -n 100,10 -o prog/dxport/439.dl4 src/439.src
!
! 1.0 03/14/2008 
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  6, 2004  15:16:19
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/mx/mx439.src (univ2) [mary] {27186}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!  ****
Rem
Rem MX439 - PRODUCT EVALUATION
Rem AUTHOR: DAVE
Rem LAST UPDATE:  roman 05/30/1991.  fix prompts/breaks
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
!Declare Intrinsic Sub InpBuf,String
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
!!Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],MONTH_[4]
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],AMOUNT
Com MTH$[108]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim A$[156],S1$[12],K9$[100],RETVAL$[512]
Dim 1%,M9,ARMONTH,EOYMONTH,LAST_YEAR,BILL_TO,BOYMONTH,M8,DDF
Dim 1%,F,C5[2],X1,FIRSTTIME,ch_pw
Dim 2%,C1[12],C2,C4[12],DSP3[4],X4[3],X5,X6,X2,DPTBRK,COID
Dim 3%,P2[12,2],LYP2[12,2],TP2[12,2],TLYP2[12,2],Z1[12,2],Z2[12,2],CUST
Dim 3%,P3[12,2],J,X3[9],T9[2,4],cont[5],parm[10],whmisc2[7]
Dim P9$[50],SUNIT$[4],PUNIT$[4],PROD$[12],KPROD$[12],Z1$[50],S3$[30]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8],M$[20],PKSZ$[15]
Dim K1$[50],K2$[20],K3$[20],X$[10],K4$[50],A2$[30],C1$[142],ARTERM$[16]
Dim J5$[12],J6$[12],D$[24],I$[6],I1$[6],I2$[6],I3$[6],I4$[6],I5$[6],I6$[6],C5$[16],K5$[50],U5$[131],2%
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp1$[300],tmp2$[300],tmp$[900],kpw$[50]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
U5$ = "-",U5$
!!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For J = 2 To 8
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1632","1792","1648","1808","1824","1728","1744"
ch_pw=8
Read #1,3;CNAME$;
Read #1,51,72;EOYMONTH;
Mat Read #1,51,74;BOYMONTH;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,19,50;P9$;
Read #1,0,120;M9; \ ARMONTH = M9
J8 = 0
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 22
J1 = 99
M9 = ARMONTH;M1 = 0;M2 = 999999;BILL_TO = 0;LAST_YEAR = 0;SLSMSORT = 0
!RETVAL$ = " ",RETVAL$
!
MONTH_[1] = 3;MONTH_[2] = 0  
Call UTMonths(e$,MONTH_[],MTH$,BOYMONTH) ! set up month headers
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"439",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
! dx add xport reporting code
Call dxget("MOTH",tmp$) \ If RTRIM$(tmp$)="" Let M9=ARMONTH else Let M9=tmp$ !! month
Call dxget("SELECTION",tmp$) \ LAST_YEAR=RTRIM$(tmp$)! 1=this year  2=last year
call dxget("SORT",tmp$) \ if RTRIM$(tmp$)="B" let BILL_TO=1 else Let BILL_TO=0! BILL_TO=tmp$ ! sort by  0=customer  1=bill to
Call dxget("SSORT",tmp$) \ M1=RTRIM$(tmp$)	! starting sort by CUSTOMER
Call dxget("ESORT",tmp$) \ If RTRIM$(tmp$)="" let M2=999999 else Let M2=tmp$ ! ending sort by CUSTOMER 
Call dxget("SALES",tmp$) \ If RTRIM$(tmp$)="" let SLSMSORT=0 else Let SLSMSORT=1 ! sort by salesman
! dx end
! year
LAST_YEAR = LAST_YEAR - 1
!
! month 
If M9 < 1 Or M9 > 12 Let e$ = "Invalid report month, must be between 1 and 12!" \ error 10000
If M9 > ARMONTH Let LAST_YEAR = 1 ! month in last year
!
! starting & ending sort by
If M1 < 0 or M1 > 999999 Let e$ = "Invalid starting report by, must be between 0 and 999999!" \ error 10000
If M2 < M1 or M2 > 999999 Let e$ = "Invalid ending report by, must be between starting report by and 999999!" \ error 10000
!
For I = 0 To 2
  For J = 0 To 4 \ T9[I,J] = 0 \ Next J 
Next I
X3 = -1 \ DPTBRK = -1 \ PROD$ = ""
X3[1] = -1

!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

!
!!Call "ProgDflt","439","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!!  RETVAL$[1,6] = M1 Using "######"
!!  RETVAL$[7,12] = M2 Using "######"
!!  RETVAL$[13,13] = BILL_TO Using "#"
!!  RETVAL$[14,14] = SLSMSORT Using "#"
!!End If 
!!M1 = RETVAL$[1,6]
!!M2 = RETVAL$[7,12]
!!BILL_TO = RETVAL$[13,13]
!!SLSMSORT = RETVAL$[14,14]
!!For I = 0 To 2 \ For J = 0 To 4 \ T9[I,J] = 0 \ Next J \ Next I
!!X3 = -1 \ DPTBRK = -1 \ PROD$ = ""
!!X3[1] = -1
!!Gosub PRNTSCREEN
!!L_1500: Rem "=====
!!! print @0,22;'CE';"SELECT  #: field  P: print  R: reselect  S: save defaults  E: exit   ";
!!Input Len 16384 + 1;""Z1$ \ 
!Z1$ = "P"
!Call String(1,Z1$)
!!  If Z1$ = "E" Goto OUTEND
!!  If Z1$ = "R" Goto EDT_ALL
!!  If Z1$ = "P" Goto STARTREPRT
!!Gosub L_6500
!!Gosub L_6680
!!Gosub EDT_SLSMS
!!Goto STARTREPRT
!!If Z1$ = "S"
!!  Goto STARTREPRT
!!ASK_SAVE: !! print @0,22;'CE';"Save for A: all  U: user access only  <CR>: do not save  ";
!! Input Len 16384 + 1;""J2$ \ Call String(1,J2$)
!!   If J2$ = "" Print @0,22;'CL'; \ Goto L_1500
!!   If J2$ <> "A" And J2$ <> "U" Goto ASK_SAVE
!!   If J2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!   Call "Progdfltw","439","",77,RETVAL$,URECFLAG
!!   Print @0,22;'CL';
!!  Goto L_1500
!!End If 
!!FLD = Z1$
!!If FLD > 0 And FLD < 4 Gosub EDT_FLDS
!!Goto L_1500
!!EDT_ALL: Rem
!!For FLD = 1 To 3
!!  Gosub EDT_FLDS
!!Next FLD
!!Goto L_1500
!!EDT_FLDS: Rem "
!!On FLD Gosub L_6500,L_6680,EDT_SLSMS
!!Return
!!STARTREPRT: Rem "
!!If Err 0 Gosub ERR_ESCAPE
!
If J8 
  tmp$ = "CUSTOMER CODE",fdel$,"CUSTOMER NAME",fdel$
  tmp$ = tmp$,"ADDRESS",fdel$,"CITY",fdel$,"STATE",fdel$,"ZIP",fdel$
  tmp$ = tmp$,"SLSM CODE",fdel$,"SLSM NAME",fdel$,"TERMS",fdel$
  tmp$ = tmp$,"PRODUCT",fdel$,"VEND ITEM #",fdel$,"DESCRIPTION 1",fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,"DESCRIPTION 2",fdel$
  tmp$ = tmp$,"SELL U/M",fdel$
  tmp$ = tmp$,"UNIT COUNT",fdel$
  tmp1$ = "AVG PRICE",fdel$,"AVG PRICE TYPE",fdel$
  M7 = M9
  For X5 = 0 To 3
    M9 = M7 - X5 \ If M9 < 1 Let M9 = M9 + 12
    Gosub L_6000  
	If X5 = 0
	  tmp$ = tmp$,rtrim$(tmp2$)," UNITS",fdel$,tmp1$
	  tmp$ = tmp$,rtrim$(tmp2$)," SALES",fdel$
	Else
	  tmp$ = tmp$,rtrim$(tmp2$)," UNITS",fdel$	
	End if
  Next X5
  M9 = M7
  call addtostr(e$,rstr$,tmp$+rdel$)
END IF 
!
J1 = 99
K4$ = " ",K4$;K4$[1,6] = M1 Using "######"
FIRSTTIME = 1

If BILL_TO Or SLSMSORT Goto L_2100
!
! *** Customer Section
!! print @0,22;'CE';"Printing...please wait";
FIRSTTIME = 1;NUMREC = 0
L_2010: 
Search #4,3,1;K4$,R4,E
If E = 2 Goto L_9100
!If E Gosub ERR_SEARCH
NUMREC = NUMREC + 1
!! If Not(J8) And Not(Fra(NUMREC / 200)) Print @40,22;NUMREC;K4$[1,6]
CUST = K4$[1,6];KPROD$[1,12] = K4$[11,22]
Gosub L_2500
If C2 < M1 Goto L_2010
If C2 > M2 Goto L_9100
GOSUB L_3500a: ! "get product 
IF PARM[2]=0 GOTO L_2010:     
If FIRSTTIME Let FIRSTTIME = 0;X3 = C2;DPTBRK = DSP3
If C2 <> X3 Gosub L_4100
If DSP3[0] <> DPTBRK Gosub L_4000
If KPROD$[1,12] <> PROD$[1,12] Gosub L_5000
Gosub L_4700
!Gosub L_3500
Goto L_2010
!
! *** Salesman / Bill to Section
L_2100: 
Rem BILL TO SORT LOGIC
J1 = 90
Gosub L_8000 ! sort
!! print @0,22;"Printing...please wait";'CE';
K4$ = " ",K4$;NUMREC = 0
L_2112:
Search #9,3,1;K4$,R4,E 
If E = 2 Goto L_9100
NUMREC = NUMREC + 1
!! If Not(J8) And Not(Fra(NUMREC / 200)) Print @40,22;NUMREC;K4$[1,9]
If Not(BILL_TO) Let CUST = K4$[4,9] Else Let CUST = K4$[40,45]
KPROD$[1,12] = K4$[14,25]
Gosub L_2500
GOSUB L_3500a: ! "get product
IF PARM[2]=0 GOTO L_2112:    
If FIRSTTIME Let FIRSTTIME = 0;X3 = C2;DPTBRK = DSP3
Z1 = K4$[4,9]
If Z1 = X3 Goto L_2139
Gosub L_4100
L_2139: Rem "
If SLSMSORT
  S1 = K4$[1,3]
  If S1 <> X3[1] Let J1 = 99
  X3[1] = S1
End If 
If DSP3[0] = DPTBRK Goto L_2154
Gosub L_4000
L_2154: If S1$ = PROD$ Goto L_2163
Gosub L_5000
L_2163: Rem MAT READ #4,R4,16;P2; ! "sales array re-read
Gosub L_4700 !\ Gosub L_3500
Goto L_2112
!
L_2200: Rem CALC TOTALS
T9[0,0] = T9[0,0] + TP2[M9,0]
T9[0,1] = T9[0,1] + TP2[M9,1]
X4[1] = M9 - 1 \ If X4[1] < 1 Let X4[1] = X4[1] + 12
X4[2] = M9 - 2 \ If X4[2] < 1 Let X4[2] = X4[2] + 12
X4[3] = M9 - 3 \ If X4[3] < 1 Let X4[3] = X4[3] + 12
T9[0,2] = T9[0,2] + TP2[X4[1],0]
T9[0,3] = T9[0,3] + TP2[X4[2],0]
T9[0,4] = T9[0,4] + TP2[X4[3],0]
T9[1,0] = T9[1,0] + TP2[M9,0]
T9[1,1] = T9[1,1] + TP2[M9,1]
T9[1,2] = T9[1,2] + TP2[X4[1],0]
T9[1,3] = T9[1,3] + TP2[X4[2],0]
T9[1,4] = T9[1,4] + TP2[X4[3],0]
T9[2,0] = T9[2,0] + TP2[M9,0]
T9[2,1] = T9[2,1] + TP2[M9,1]
T9[2,2] = T9[2,2] + TP2[X4[1],0]
T9[2,3] = T9[2,3] + TP2[X4[2],0]
T9[2,4] = T9[2,4] + TP2[X4[3],0]
For MT = 0 To 12
  For CT = 0 To 2
    TP2[MT,CT] = 0 \ TLYP2[MT,CT] = 0
  Next CT 
Next MT
Return 
!
For I = 0 To 12 
  For I1 = 0 To 2
	P3[I,I1] = P3[I,I1] + P2[I,I1]
  Next I1
Next I
Return 
For I = 0 To 12 
  For I1 = 0 To 2
	P2[I,I1] = P3[I,I1]
  Next I1 
Next I
Return 
!
L_2500: Rem "========================================== read divhist
Mat Read #4,R4,0;S1$;
Mat Read #4,R4,12;C2;
Mat Read #4,R4,16;Z1; \ Gosub L_3300
Mat Read #4,R4,250;Z2; \ Gosub L_3400
Read #4,R4,488;DSP3[0];
If BILL_TO If X3 < 0 Let X3 = K4$[4,9]
If Not(BILL_TO) If DPTBRK < 0 Let X3 = C2
If DPTBRK < 0 Let DPTBRK = DSP3[0];F7 = 99
If PROD$ = "" Let PROD$[1,12] = S1$[1,12] \ gosub L_3500
If Not(LAST_YEAR) Goto L_2750
For I = 0 To 12 \ For I1 = 0 To 2
	P2[I,I1] = LYP2[I,I1]
	LYP2[I,I1] = 0
  Next I1 \ Next I
L_2750: Return 
!
L_3000: Rem "====================================== get customer
J4$ = X3 Using "######"
Search #5,2,1;J4$,V1,E 
If E = 1 
  C1$[31,60] = "ERROR! CUSTOMER NOT FOUND!";C5 = 999 
Else
  Mat Read #5,V1,0;C1$;
  Mat Read #5,V1,142;C4;
  Mat Read #5,V1,194;C5;
  Mat Read #5,V1,348;A2$;
End if
ARTERM$ = " ",ARTERM$
If C5[0] = 0
  ARTERM$ = "CASH SALE"
Else 
  If C5[0] > 0 And C5[0] <= 99
	Read #50,C5[0],0;ARTERM$;
  End If 
End If 
If SLSMSORT Let C4[2] = K4$[1,3]
Gosub L_3105
!
if J8! print
  tmp1$ = X3 Using "######",fdel$!!CUSTOMER
  tmp1$ = tmp1$, rtrim$(C1$[31,60]),fdel$
  tmp1$ = tmp1$, rtrim$(C1$[61,90]),fdel$
  tmp1$ = tmp1$, rtrim$(C1$[121,135]),fdel$
  tmp1$ = tmp1$, C1$[136,137],fdel$
  tmp1$ = tmp1$, rtrim$(A2$[1,10]),fdel$
  tmp1$ = tmp1$, C4[2],fdel$,rtrim$(S3$),fdel$ !SLSM
  tmp1$ = tmp1$, ARTERM$,fdel$ !!TERMS
 
Else
  Print #0; Using "######";"\12\";"CUSTOMER: ";X3;
  Print #0; Using "###"; 
  Print #0; Tab 20;	C1$[31,60]; 
  Print #0; Tab 60;	"SLSM ";C4[2];" ";S3$
  Print #0; Tab 20;	C1$[61,90]; 
  Print #0; Tab 60;	"TERMS ";ARTERM$
  Print #0; Tab 20;	C1$[121,135]; 
  Print #0; Tab 37;	C1$[136,137]; 
  Print #0; Tab 41;	A2$[1,10]
  Print #0;U5$
end if
J1 = J1 + 3
Return 
!
L_3105: Rem GET SLSM NAME
K5$ = " ",K5$
K5$ = C4[2] Using "###"
Search #6,2,1;K5$,R5,E 
If E let S3$ = " *** NOT ON FILE ***" 
if E=0 Mat Read #6,R5,0;S3$;
Return 
!
L_3300: Rem "========================== adjust this year buckets for fiscal year
X7 = BOYMONTH
For I = 0 To 12
  For X6 = 0 To 2
	If I Let P2[I,X6] = FNR(Z1[X7,X6]) Else Let P2[0,X6] = FNR(Z1[0,X6])
  Next X6
  If I If X7 = ARMONTH Let I = 13
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_3400: Rem "========================== adjust last year buckets for fiscal year
X7 = BOYMONTH \ X8 = 0
For I = 0 To 12
  For X6 = 0 To 2
	If Not(I) Let LYP2[0,X6] = FNR(Z2[0,X6]) \ Goto L_3460
	If Not(X8) Let LYP2[I,X6] = FNR(Z2[X7,X6]) Else Let LYP2[I,X6] = FNR(Z1[X7,X6])
L_3460: Next X6
  If I If X7 = ARMONTH Let X8 = 1
  If I Let X7 = X7 + 1 \ If X7 = 13 Let X7 = 1
Next I
Return 
!
L_3500a: ! "=========================== get product to check prodgroups   
SEARCH #3,2,1;kPROD$,R3,E 
! IF E>1 GOSUB ERR_SEARCH  
IF E GOTO L_3540a  
!MAT  READ #3,R3;A$;  
!MAT  READ #3,R3,512;PFU1; \ MAT  READ #3,R3,554;PFU2  
!MAT  READ #3,R3,256;A;  
!MAT  READ #3,R3,956;PKSZ$;  
gosub GET_PRODWHSE:  
!IF S1$="Z ZZZZZZZZZZ" LET PFU1[9]=-9;PFU1[12]=-9 ! "non stocks   
L_3540a: RETURN
!
L_3500: Rem "=========================== get product
Search #3,2,1;PROD$,R3,E 
If E Let A$ = " ",A$;A$[9,38] = "ERROR! PRODUCT NOT FOUND." \ Goto L_3540
Mat Read #3,R3;A$;
Mat Read #3,R3,512;PFU1; \ Mat Read #3,R3,554;PFU2;
Mat Read #3,R3,256;A;
Mat Read #3,R3,956;PKSZ$;
!gosub GET_PRODWHSE:
If S1$ = "Z ZZZZZZZZZZ" Let PFU1[9] = -9;PFU1[12] = -9
L_3540: Return 
!
L_3600: Rem CONVERT MONTH (X1) TO ROLLING MONTH (X2)
If BOYMONTH <= X1 Let X2 = X1 - BOYMONTH + 1 Else Let X2 = 13 - (BOYMONTH - X1)
Return 
!
L_4000: Rem "====================== department totals
If PRTLNE Gosub L_5000
Read #2,DPTBRK,0;D$;
IF J8 goto DeptTotalExit
Print #0;" "
Print #0; Tab 0;"* * * * * * ";D$[1,19];" TOTALS ";
Print #0; Using "-------#.##"; Tab 58;T9[0,0];
Print #0; Using "-------$.##"; Tab 85;T9[0,1];
Print #0; Using "-------#.##"; Tab 97;T9[0,2]; Tab 109;T9[0,3]; Tab 121;T9[0,4]
Print #0;" " \ Print #0;" "
J1 = J1 + 4
!
DeptTotalExit:
T9[0,0] = 0;T9[0,1] = 0;T9[0,2] = 0;T9[0,3] = 0;T9[0,4] = 0
F7 = 99
DPTBRK = DSP3[0]
Return 
!
L_4100: Rem "========================== customer totals
Gosub L_4000
if J8 goto CustTotalExit
Print #0; Using "######"; Tab 0;"* * * * * * CUSTOMER ";X3;" TOTALS ";
Print #0; Using "--------#.##"; Tab 57;T9[1,0];
Print #0; Using "--------$.##"; Tab 84;T9[1,1];
Print #0; Using "--------#.##"; Tab 96;T9[1,2]; Tab 108;T9[1,3]; Tab 120;T9[1,4]
Print #0;" "
!
CustTotalExit:
T9[1,0] = 0;T9[1,1] = 0;T9[1,2] = 0;T9[1,3] = 0;T9[1,4] = 0
If BILL_TO Let X3 = K4$[4,9] Else Let X3 = C2
J1 = 99
Return 
!
L_4200: Rem "============================ grand totals
!
Gosub L_4100
if J8 Return 
Print #0; Using "--------#.##"; Tab 0;"* * * * * * GRAND TOTALS"; Tab 57;T9[2,0];
Print #0; Using "--------$.##"; Tab 84;T9[2,1];
Print #0; Using "--------#.##"; Tab 96;T9[2,2]; Tab 108;T9[2,3]; Tab 120;T9[2,4]
Return 
!
L_4700: Rem TOTAL UP P2 AND LYP2 INTO TP2 AND TLYP2 FOR CUST DEPT PROD TOTAL
PRTLNE = 99
For MT = 0 To 12
  For CT = 0 To 2
    TP2[MT,CT] = TP2[MT,CT] + P2[MT,CT]
	TLYP2[MT,CT] = TLYP2[MT,CT] + LYP2[MT,CT]
  Next CT
Next MT
Return 
!
L_5000: Rem "================================== detail line
Gosub L_5800
if Not(F7) Goto L_5050
Read #2,DPTBRK,0;D$;
if Not(j8) Print #0; Tab 0;D$[1,19] \ Print #0;" "
J1 = J1 + 2 \ F7 = 0
!
L_5050: 
If J8
  tmp$ = tmp1$, rtrim$(PROD$[1,12]),fdel$,rtrim$(A$[93,104]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,32]),fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,rtrim$(A$[63,92]),fdel$ 
  Gosub L_10000
  tmp$ = tmp$,SUNIT$,fdel$,PKSZ$,fdel$
  tmp$ = tmp$,TP2[M9,0] Using "------#.##",fdel$
  CNVTU[0] = PFU1[9] \ CNVTU[1] = PFU1[12] \ CNVTU[2] = 2 \ CNVTA = 0
  If TP2[M9,0] Let CNVTA = TP2[M9,1] / TP2[M9,0]
  Gosub L_20000
  If TP2[M9,0] 
	tmp$ = tmp$,AMOUNT Using "-$$$$$$.##",fdel$	
	tmp$ = tmp$,PUNIT$,fdel$					
  else
	tmp$ = tmp$,"",fdel$,"",fdel$
  end if 
  tmp$ = tmp$,FNR(TP2[M9,1]) Using "-$$$$$$.##",fdel$
  X6 = 0
  For X5 = 1 To 3
    X4 = M9 - X5 \ If X4 < 1 Let X4 = X4 + 12 \ X6 = 1
    CNVTU[0] = 0 \ CNVTU[1] = PFU1[9] \ CNVTU[2] = 1
    If X6 let CNVTA = TLYP2[X4,0] else CNVTA = TP2[X4,0]
    Gosub L_20000
    TP2[X4,0] = AMOUNT
    tmp$ = tmp$,TP2[X4,0] Using "-------#.##",fdel$
  Next X5		
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  Goto PrintDetailExit
End if
!
Print #0; Tab 0;PROD$[1,12];!!product
Print #0; Tab 13;A$[9,32];  !! description
Gosub L_10000
Print #0; Tab 38;SUNIT$; Tab 43;PKSZ$; !!sell um ,unit count
Print #0; Using "------#.##"; Tab 59;TP2[M9,0]; !!january unit
CNVTU[0] = PFU1[9];CNVTU[1] = PFU1[12];CNVTU[2] = 2;CNVTA = 0
If TP2[M9,0] Let CNVTA = TP2[M9,1] / TP2[M9,0]
Gosub L_20000
If TP2[M9,0] Print #0; Using "-$$$$$$.##"; Tab 70;AMOUNT; !!average price
If TP2[M9,0] Print #0; Tab 80;"/";PUNIT$;
Print #0; Using "-$$$$$$.##"; Tab 86;FNR(TP2[M9,1]); !!january sales
X6 = 0
For X5 = 1 To 3
  X4 = M9 - X5 \ If X4 < 1 Let X4 = X4 + 12 \ X6 = 1
  CNVTU[0] = 0 \ CNVTU[1] = PFU1[9] \ CNVTU[2] = 1
  If X6 !"dip into the last year's array
	CNVTA = TLYP2[X4,0]
  Else 
    CNVTA = TP2[X4,0]
  End If 
  Gosub L_20000
  TP2[X4,0] = AMOUNT
  Print #0; Using "-------#.##"; Tab (97 + ((X5 - 1) * 12));TP2[X4,0]; !!december , november october
Next X5
Print #0;"" \ J1 = J1 + 1
Print #0; Tab 0;A$[93,104];!!item #
If P9$[26,26] = "Y" Print #0; Tab 13;A$[63,92]; !!description2
Print #0;"" \ Print #0;" " \ J1 = J1 + 2
!
PrintDetailExit:
PRTLNE = 0 \ PROD$[1,12] = KPROD$[1,12] 
gosub l_3500
Gosub L_2200
return
!
L_5800: Rem HEADINGS ROUTINE
If J8 Gosub L_3000 \ Return
If J1 < J9 Return
!! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
!If J8 Print 'CS'
J2 = J2 + 1 \ J1 = 7
Print #0;"\12\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 121;"PAGE";J2
Print #0;" - 439 - ";Msc$(3);
Gosub L_6000
If LAST_YEAR Let M$ = M$," LAST YEAR" Else Let M$ = M$," THIS YEAR"
Print #0; Tab 45;"PRODUCT EVALUATION REPORT FOR ";M$
If BILL_TO Print #0; Tab 50;"SORTED BY BILL TO CODE" \ J1 = J1 + 1
Print #0;" "
Gosub L_3000
Gosub L_6000
Print #0; Tab 0;"PRODUCT"; Tab 13;"DESCRIPTION"; Tab 38;"SELL"; Tab 61;M$; Tab 75;"AVERAGE"; Tab 89;M$;
M7 = M9
For X5 = 1 To 3
  M9 = M7 - X5 \ If M9 < 1 Let M9 = M9 + 12
  Gosub L_6000
  Print #0; Tab (99 + ((X5 - 1) * 12));M$;
Next X5
Print #0;" "
M9 = M7
J1 = 11
F7 = 99
Print #0; Tab 0;"VEND ITEM #";
Print #0; Tab 38;"U/M";
Print #0; Tab 43;"UNIT COUNT";
Print #0; Tab 61;" UNITS";
Print #0; Tab 76;"PRICE"; Tab 90;"SALES"; Tab 101;"UNITS"; Tab 113;"UNITS"; Tab 125;"UNITS"
return
!
L_6000: Rem MONTH NAME
M$ = " ",M$
If J8 
  tmp2$ = MTH$[M9 * 9 - 8,M9 * 9]
  Return
End if
M$ = MTH$[M9 * 9 - 8,M9 * 9]
L_6010: 
If M$[Len(M$),Len(M$)] = " "  Let M$ = M$[1,Len(M$) - 1] \ Goto L_6010
Return 
!
!!PRNTSCREEN: Rem "show screen first
!! print @0,0;'CS ED ER';
!! print @0,0;"MX439";@30,0;"PRODUCT EVALUATION"
!!X1 = ARMONTH \ Gosub L_3600 \ M9 = X2
!!Gosub L_6000
!! print Using "### ";@6,2;"CURRENT MONTH IS";ARMONTH;M$
!! print @0,3;" 1> ENTER MONTH FOR REPORT ";
!! print Using "##";@30,3;ARMONTH;" ";M$
!! print @0,5;"    DO YOU WANT ";M$;" OF   ";'BR';" T:";'ER';" THIS YEAR OR  ";'BR';" L:";'ER';" LAST YEAR: ";
!! print @65,5;"T";
!! print @0,7;" 2> SORT BY   ";'BR';" C:";'ER';" CUSTOMER OR  ";'BR';" B:";'ER';" BILL TO CODE: ";
!!If Not(BILL_TO) Print @60,7;"C"; Else Print @60,7;"B";
!!If Not(BILL_TO) Let Z1$ = "CUSTOMER" Else Let Z1$ = "BILL TO "
!! print @0,8;"    ENTER STARTING ";Z1$
!! print @40,8;"ENDING   ";
!! print Using "######";@32,8;M1;@50,8;M2;
!! print @0,10;" 3> SORT BY SALESMAN?";
!! If Not(SLSMSORT) Print @30,10;"N"; Else Print @30,10;"Y";
!!Return 
!!
!!L_6500: Rem SELECT MONTH ! "don't save defaults
!! print @0,22;'CE';"ENTER A Month (1-12), <CR> for Current";@30,3;
!! Input Len 16384 + 12;""I$
!!If I$ = "" Let I$ = Str$(M9)
!!X = I$
!!If X < 1 Or X > 12 Goto L_6500
!!X1 = X \ Gosub L_3600 \ M9 = X2
!!L_6620: Gosub L_6000
!! print Using "##";@30,3;'CL';M9;" ";M$;
!!X1 = ARMONTH \ Gosub L_3600 \ If M9 <= X2 Goto L_6625
!! print @65,5;"L"; \ LAST_YEAR = 1
!! print @50,3;"LAST YEAR";
!!L_6625: Rem "done
!!L_6640: Rem "what year
!!X1 = ARMONTH \ Gosub L_3600 \ If M9 <= X2 Goto L_6645
!! print @65,5;"L"; \ LAST_YEAR = 1 \ Goto L_6650
!!L_6645: Rem "
!! print @0,22;'CE';"Enter  T for this year  L for last year";@65,5;
!! Input Len 16384 + 1;""I$ \ Call String(1,I$)
!!If I$ = ""
!!  If Not(LAST_YEAR) Let I$ = "T"
!!  If LAST_YEAR Let I$ = "L"
!!End If 
!!If I$ <> "T" And I$ <> "L" Goto L_6640
!!If I$ <> "T" And I$ <> "L" let e$="ONLY T/L VALUES ALLOWED" \ error 10000
!!LAST_YEAR = 0 \ If I$ = "L" Let LAST_YEAR = 1
!!L_6650: Rem "done
!!Return 
!!L_6680: Rem SELECT CUSTOMER/BILL TO SORT
!! print @0,22;'CE';"Enter  B to sort by Bill To  C for Customer";@60,7;
!! Input Len 16384 + 1;""I$ \ Call String(1,I$)
!! If I$ = ""
!!   If Not(BILL_TO) Let I$ = "C"
!!   If BILL_TO Let I$ = "B"
!! End If 
!!If I$ <> "C" And I$ <> "B" Goto L_6680
!!If I$ <> "C" And I$ <> "B" let e$="ONLY B/C VALUES ALLOWED" \ error 10000
!!BILL_TO = 0 \ If I$ = "B" Let BILL_TO = 1
!!If BILL_TO Let Z1$ = "BILL TO " Else Let Z1$ = "CUSTOMER"
!! print @0,22;'CE';"Enter the ";Z1$;" Range";@19,8;Z1$
!!L_6740: !! print @32,8;
!! Input ""I$ \ If I$ = "" Let I$ = Str$(M1)
!!I$ = I4$ !\ If I$ = "" Let I$ = Str$(M1)
!!L_6770: !! print @50,8;
! Input ""I$ \ If I$ = "" Let I$ = Str$(M2)
!!I$ = I5$ !\ If I$ = "" Let I$ = Str$(M2)
!!If M1 > M2 Print @5,22;"INVALID RANGE!"; \ Signal 3,20 \ Goto L_6740
!!print Using "######";@32,8;M1;@50,8;M2;
!!RETVAL$[1,6] = M1 Using "######"
!!RETVAL$[7,12] = M2 Using "######"
!!RETVAL$[13,13] = BILL_TO Using "#"
!!Return 
!!EDT_SLSMS: Rem "salesman Sort?
!! print @0,22;'CE';"ENTER  Y  or  N";@30,10;
!! Input Len 16384 + 1;""I$ \ Call String(1,I$)
!!If I$ = ""
!!  If SLSMSORT Let I$ = "Y" Else Let I$ = "N"
!!End If 
!!If I$ <> "Y" And I$ <> "N" Goto EDT_SLSMS
!!If I$ <> "Y" And I$ <> "N" let e$="ONLY N/Y VALUES ALLOWED" \ error 10000
!!SLSMSORT = 0
!!If I$ = "Y" Let SLSMSORT = 1
!!RETVAL$[14,14] = SLSMSORT Using "#"
!!Return 
!
L_8000: Rem SORT FILE BY BILL TO or Salesman
!! print @0,22;"Sorting...please wait";'CE';
K4$ = " ",K4$;NUMREC = 0
If SLSMSORT And Not(BILL_TO) Let K4$[1,6] = M1 Using "######"
L_8030: 
Search #4,3,1;K4$,R4,E 
If E = 2 Goto L_8170
K9$ = " ",K9$;K9$[10,39] = K4$[7,36]
Mat Read #4,R4,12;C2;
NUMREC = NUMREC + 1
!! If Not(Fra(NUMREC / 200)) Print @40,22;NUMREC;K4$[1,6]
J4$ = C2 Using "######"
Search #5,2,1;J4$,V1,E 
If E = 1
  K9$[1,3] = "!!!"
  K9$[4,9] = "!!!!!!";K9$[40,45] = "!!!!!!" \ Goto L_8150
else
  Mat Read #5,V1,142;C1;
End If 
If BILL_TO
  K9$[40,45] = C2 Using "######"
  If C1[4] < M1 Goto L_8030
  If C1[4] > M2 Goto L_8030
  K9$[4,9] = C1[4] Using "######"
Else 
  If C1[1] < M1 Goto L_8030
  If C1[1] > M2 Goto L_8170
  K9$[4,9] = C2 Using "######"
  K9$[40,45] = C1[4] Using "######"
End If 
If SLSMSORT
  K9$[1,3] = C1[2] Using "###"
End If 
L_8150: 
Search #9,4,1;K9$,R4,E 
If E Let e$ = "syserrorfile 439 sortfile mode (m)=4 keyno (k)=1 r=",R4," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_8030
L_8170: Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4200
!- If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_10000: Rem "=========================== convert to selling units
CNVTU[0] = 0;CNVTU[1] = PFU1[9];CNVTU[2] = 1;CNVTA = TP2[M9,0]
If PFU1[9] <> -9 Gosub L_20000 Else Let AMOUNT = CNVTA
TP2[M9,0] = AMOUNT
SUNIT$ = "    ";PUNIT$ = "    "
If PFU1[9] > 0 Mat Read #7,PFU1[9],10;SUNIT$;
If PFU1[9] = -1 Let SUNIT$ = "CWT "
If PFU1[9] = -2 Let SUNIT$ = "LOT "
If PFU1[9] = -3 Let SUNIT$ = "LB  "
If PFU1[12] > 0 Mat Read #7,PFU1[12],10;PUNIT$;
If PFU1[12] = -1 Let PUNIT$ = "CWT "
If PFU1[12] = -2 Let PUNIT$ = "LOT "
If PFU1[12] = -3 Let PUNIT$ = "LB  "
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X,AMOUNT,FLAG \ rem !!If X = -1 Let E = 0 !\ Gosub ERR_SEARCH
If X <> Spc(6) Goto L_20080
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]                  
Call ProdGroup(e$,intco,Parm[])               
RETURN                 
!
Rem {begin rtn.error.s}
OUTEND: Rem EXIT ROUTINE
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
ERR_TRAP: 
include "src/callmainerrnet.inc"
End  