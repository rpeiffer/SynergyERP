! >>> Program 784c
!
! description   PO into stock dates received
!
! loadsave -w -n 100,10 -o prog/dxport/784c.dl4 src/784c.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 17, 2001  14:30:08
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx683.src (univ2) [kag] {07823}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time,DateToJulian,JulianToDate,FindF
! Option Default Dialect IRIS1
Rem MX683          Material Code Listing
Rem Author:        Roman Sawycky III  (02/04/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
Com 1%,PFU1[20],CNVTU[2]
Com 3%,PFU2[6],CNVTA,A[33],AMOUNT
If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim M1$[25],Z1$[50]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
DIM LT0$[56],1%,LT1[3],2%,3%,R1,K9$[50],LT2[5]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],F1$[16],F2$[26],A$[26],K$[130]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],tmp3$[800],date$[10]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
DIM KPR$[50],PA$[156],2%,B[24],3%,qtyrec,lineqty
DIM 2%,H0[5],KP0$[50],RECVDATE$[10]
dim Blank$[20]	 

DIM 3%
LET Blank$=" ",Blank$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 4
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Mat Read #1,0,100;J8$;
Data "2512","1792","2416"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
rem build sort file 

A$ = Spc(6) \ A$ = A$[2,Len(A$) - 1]
Read #1,88,912;F1$;
L_1540: If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1540
P2 = 0 \ Let F2$ = F1$ To "*" : P2 
If Not(P2) let e$="error with sort file name in control file" \ error 10000
! - Print @0,23;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
Call dxsave(0,"tmp/ddin.txt!") 
KSIZE = 20
F1$[P2] = A$
Call FindF(F1$,H1)
try Close #9 else rem 
If H1 Kill F1$
F2$ = "[1:256] ",F1$
Build #9,F2$
Search #9,0,1;K$,KSIZE,E 
If E Let e$ = "syserrorfile, can't build 784C sortfile!" \error 10000
L1 = 1000 
Search #9,0,0;K$,L1,E
If E Let e$ = "syserrorfile, can't build 784C sortfile!" \error 10000
close #9
open #9,F1$
L_900: Rem "=================================== get ranges
!Gosub L_7500
!Print @51,5;'CL'; \ Gosub L_7000 \ K2$ = Z1$ \ If K2$ = "E" Goto L_9010
Call dxget("SDATE",tmp2$)
!Print @51,7;'CL'; \ Gosub L_7000 \ K3$ = Z1$ \ If K3$ = "E" Goto L_9010
call dxget("EDATE",tmp3$)
vendor=0
call dxget("VENDOR",tmp$)
let vendor=tmp$
if vendor=0
 Let e$="Please specify a Vendor for the report "
 error 10000
 endif
if tmp2$ = ""
  D1 = 0
else
  If Len(tmp2$) <> 6  let e$ = "Invalid starting date!" \ error 10000
  DATE$ = tmp2$[5,6],tmp2$[1,4]
  Call DateToJulian(1,DATE$,DATE$,E) \ If E let e$ = "Invalid starting date!" \ error 10000
  D1 = DATE$
End if

if tmp3$ = ""
  D2 = 36525
else
  If Len(tmp3$) <> 6  let e$ = "Invalid ending date!" \ error 10000
  DATE$ = tmp3$[5,6],tmp3$[1,4]
  Call DateToJulian(1,DATE$,DATE$,E) \ If E let e$ = "Invalid ending date!" \ error 10000
  D2 = DATE$
End if
If D1 > D2 let e$ = "Invalid ending date, must be >= starting date!" \ error 10000

!L_985: Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50 \ Return 
!L_990: Print @10,20;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto L_9010
!If Z1$ = "R" Goto L_900
!If Z1$ <> "P" Goto L_990
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
Endif
if j8 ! xml
	tmp$ = bsdel$,"784c",fdel$,rdel$
	Call addtostr(e$,rstr$,tmp$)
    tmp$="Vendor",fdel$
	tmp$=tmp$,"PO Number",fdel$
	tmp$=tmp$,"Date Received",fdel$
	tmp$=tmp$,"PO Date",fdel$
    tmp$=tmp$,"Pieces received",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
End If 
J1 = 90 \ J2 = 0
rem sort the invtrans by PO # and date
let k1$=" ",k1$
let k1$[1,5]=d1 using "#####"
L_2000: ! LOOP
Search #2,3,1;K1$,R2,E
If E Goto Sortdone:
L_2010: !
let x2=k1$[1,5]
if x2>d2 goto sortdone:
mat read #2,R2,0;LT0$;
MAT READ #2,R2,56;LT1;
MAT READ #2,R2,64;LT2;
IF LT1[0]<>1 GOTO L_2000: ! NOT A PO 
let ponumber=lt0$[28,36]
vendcode=lt0$[41,56]
if vendcode<>vendor goto l_2000: !
gosub getproduct

REM Not a normal sortfile , needs a data side
let k9$=" ",k9$
let k9$[1,6]=vendcode using "######"
let k9$[7,12] = PONUMBER using "######"
let k9$[13,17]= lt2[0] using "#####" 

SEARCH #9,2,1;K9$,R1,E
If E > 1
rem if e=1 dont stop we just want a key for each date the po was receved on 
Let e$ = "syserrorfile 784C sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",E," keyval (k9$)=",K9$ \ Error 10000
endif
if not(e)
mat read #9,r1,0;qtyrec;
let qtyrec = qtyrec+ lineqty
mat write #9,r1,0;qtyrec;
else
LET E=2 
SEARCH #9,1,0;K9$,R1,E ! "get new record #    
IF E
Let e$ = "syserrorfile 784C sortfile mode (m)=0 keyno (k)=1 r=",R1," e=",E," keyval (k9$)=",K9$ \ Error 10000
ENDIF
SEARCH #9,4,1;K9$,R1,E
IF E 
Let e$ = "syserrorfile 784C sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",E," keyval (k9$)=",K9$ \ Error 10000
ENDIF
qtyrec=lineqty
mat write #9,r1,0;qtyrec;
endif
GOTO L_2000: ! 
sortdone: rem now to print it 
rem print 
k9$=" ",k9$
PRT_LOOP: REM 
search #9,3,1;k9$,r1,e
if e=2 goto l_9100:
If E
Let e$ = "syserrorfile 784C sortfile mode (m)=3 keyno (k)=1 r=",R1," e=",E," keyval (k9$)=",K9$ \ Error 10000
endif
mat read #9,r1,0;qtyrec;
rem mat read #2,R1,0;LT0$;
rem MAT READ #2,R1,56;LT1;
rem MAT READ #2,R1,64;LT2;
ponumber=k9$[7,12]
vendcode=k9$[1,6]
lt2[0]=k9$[13,17]
DATE$ = " ",DATE$;X$ = " ",X$
RECVDATE$=" ",RECVDATE$
DATE$ = LT2[0] Using "&&&&&"
Call JulianToDate(1,DATE$,DATE$,E) 
if E let DATE$=""
! X$ = DATE$
LET RECVDATE$=DATE$
gosub getpohead
Gosub L_5800
Gosub L_5000
Goto PRT_LOOP
L_2200: Rem TOTALS CALC
Return 
L_4000: Rem TOTAL PRINT
if j8 return
Gosub L_5800
Print #0;"\15\** END **";
Return 
L_5000: Rem PRINT LINE
if j8
    tmp$=vendcode using "######",fdel$
	tmp$=tmp$,ponumber using "######",fdel$
	tmp$=tmp$,RTrim$(RECVDATE$[1,8]),fdel$
	tmp$=tmp$,RTrim$(x$[1,8]),fdel$
	tmp$=tmp$,qtyrec using "###,###,###.##",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
Else
	Print #0; USING "######";TAB 4;VENDCODE;
    Print #0; USING "######";TAB 12;PONUMBER;
	Print #0; Tab 26;RECVDATE$;
    print #0;tab 43;x$;
	print #0;using "###,###,###.##";tab 53;qtyrec;
	Print #0;"\15\";
Endif
Return 
L_5800: Rem HEADINGS ROUTINE
if j8 return
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 784c - ";T9$;
Print #0; Tab 45;"PO DATES RECEIVED"
Print #0;"\15\";
Print #0; Tab 4;"VENDOR";
Print #0; Tab 12;"PO NUMBER";
Print #0; Tab 25;"DATE RECEIVED";
Print #0; Tab 42;"PO DATE";
Print #0; Tab 53;"Pieces received";
Print #0;" "
Print #0;"\15\";
Return 
getpohead: ! 
LET H0[3]=0
for st=1 to 7
 let kp0$[1,2]=st using "##"
 let kp0$[3,8]=ponumber using "######"
 search #4,2,1;kp0$,rec_po,e
 if e=0 
 mat read #4,rec_po,0;h0;
LET ST=99
ENDIF
 next st
 LET X$=" ",X$
 IF H0[3]
 LET X2=H0[3]
 GOSUB L_7700: 
 ELSE
 LET X$="err"
 endif
return
getproduct: ! READ PRODUCT 
LET KPR$=" ",KPR$
LET KPR$[1,12]=LT0$[1,12]
SEARCH #3,2,1;KPR$,REC_PROD,E
IF E 
Let e$ = "syserrorfile 784C product file mode (m)=2 keyno (k)=1 r=",rec_prod," e=",E," keyval (kpr$)=",Kpr$ 
Error 10000
endif
Mat read #3,rec_prod,156;b;
Mat read #3,rec_prod,256;a;
Mat read #3,rec_prod,512;PFU1;
Mat read #3,rec_prod,554;PFU2;

rem convert
CNVTU[0] = 0;CNVTU[1] = PFU1[8] ;CNVTU[2] = 1
CNVTA = LT2[2] 
Gosub L_20000
lineqty = AMOUNT
return

!L_7000: Rem "=========================================== data input routine
!Input ""Z1$
!Return 
!L_7500: Rem "========================================== screen
!Print 'CS'
!Print @0,0;"MX683";@30,0;"MATERIAL CODE LISTING"
!Print @1,5;"ENTER STARTING CODE, <CR> FOR FIRST,  E: TO EXIT: "
!Print @1,7;"ENTER ENDING CODE,   <CR> FOR LAST,   E: TO EXIT: "
!Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!!If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return
OUTEND: Rem EXIT PROGRAM
L_9010: !Print 'CS'
! call programdump("tmp/d6831!","")
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try Call dxclose() else rem
End
!Close 
!Chain "MX000"
!Stop 
L_9100: Rem END OF THIS RANGE
REM Gosub L_4000
GOTO OUTEND
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
If K2$ = "" Goto OUTEND
!Goto L_900
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End