! >>> Program serp204
!
! description ORDER REGISTER 
!
! loadsave -w -n 100,10 -o prog/dxport/serp204.dl4 src/serp204.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX204A - ORDER REGISTER
Rem AUTHOR: ANTONOVICH   MAR 20, 1987
Rem RUNGE CUSTOM VERSION
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 27, 2008  11:15:09
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx204a.src (univ2) [jcs] {57205}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! LAST UPDATE:  04/29/1991 roman. add gp %  (CCT #32852)
!               10/25/1991 roman. up to 5 decimal unit price
!               05/07/92 - ADD ZONE SELECT & PICKLIST OPTION 
!               02/10/1993 - Add option for entered by totals
!               07/20/1993 - Zone sort/reformat print (rek)
!               11/23/93 - rjs add non-stock
!               05/11/1994 - roman.  expand po # to 20.
!               05/20/94 - nate. add selection by truck & clean up code
!               10/04/95 - suh show cost if cost security is set for the user running the report.
!                jcs CCT 98661 - allow additional zones/trucks
!               02/20/97-CCT 99485, add whse option/sort
!               04/07/97-CCT100697, add sort and page break by zone
!               02/10/99 zyc cct119570 suppress detail header if no line                              
! 03/04/99 jliu cct120417 print the cost/profit when the loaded cost is
!          set to 1 to 2
! 10/18/00 jliu cct140835 print the ship date instead of the due date
! 6/18/03 jliu cct168743 show last qty, price, cost and gp
! 02/24/04 dgh cct176213 make gp% use FNR
! 09/17/04 dek cct181642 RUNGE Custom single/range of orders.
! 01/31/07 dek cct212373 lastprice key dept now=4 bytes.
! 12/06/07 vst cct221044 - change "LAST INVOICE" TO "LAST ORDER"

! ----------  notes for 'xrev9/erp' upgrade for Morrisette Paper  --------------
! 08/16/04 zyc  cct181727 add ability to email each sales rep their report
! 09/22/04 zyc  cct182828 add astricks between order numbers
! 01/25/10 txc  cct238110 allow lines up to 999
! ------------------------------------------------------------------------------
! 04/04/12 JCS  ACME custom - no order type 5
! ---------------  notes for rev10 upgrade for Jersey Paper  --------------------
! used xrev9 program and added in custom code for:
! 12/31/01 kag cct150941 - option to sort by salesperson - MADE STANDARD!!
! 02/24/04 dgh cct176213 - make gp% use FNR - call it GTM not GP
! ------------------------------------------------------------------------------
!

Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,getglobals,env,programdump
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave
Declare Intrinsic function findchannel
External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
  Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
Declare External Function openprinter

External Lib "dxblockcustom.lib"
Declare External Sub blockPrintersDropList
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
Declare External function OpenFile
Declare External function buildsort,getuidrec,chkDteFrmt$
declare external function GetUIDInfo$,formatdate2$

Declare sub L_1240,L_1900,chkpflag,ChkORIP
Declare sub GetTrkList,GetZNList
!Option Default Dialect IRIS1
Try
Dim 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3],3%,PFU2[6],CNVTA,A[33]
! If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 1%,H3[1],H4[2],S1,S2,S7,UN[2],LT[1],L3[3],F,X1,SORT,EUN[2],BYPASS221
dim 1%,sw[20]
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],T9[11],PRINTALL,D,CTR,LPC3[4],TEST
Dim 1%,PCHAN[20],P0[1023]
DIM 1%,emailRep,ucRec,chan,emCh,needOpenEmCh,Ch_lpt
Dim 2%,H0[12],H5[16],C1[12],Q0[1],L4[3],L6[5],X2,S9[1],DIV,S5,TRUCK,X4
Dim 2%,LTAX2,L9[1],LCO[1],LPC5[3],ORDER[1],struck,etruck
Dim 3%,T2[21],L5[3],S3[17],J,X3,REGTOT,L7[9],SUNIT[3],PUNIT,UNIT,REGAVGGP
Dim 3%,AMOUNT,T16[8],OLM[5],GT[4],UNF[6],J1,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8,Z9
Dim 3%,SLSMTOT,OSLSM,LTAX1,CUNIT,REGTOTCOST,SLSMTOTCOST,ORDGP,LPC2[2]
Dim 3%,LPUNIT,LCPUNIT,LPGP,L_QUANT,LP,Rol0,NetCost[2],jdate[9]
DIM sls$[118],sm$[10],3%,smrec,R12
DIM emailFrom$[48],slsEmail$[50],sys$[560],k15$[40],astLINE$[132]
Dim C1$[30],C2$[30],L1$[60],L2$[20],S1$[118],S2$[20],J1$[20],T2$[7]
Dim PUNIT$[4],SUNIT$[4],UNIT$[4],PMASK$[15],ZONE$[50],TRUCK$[50],SRT$[40]
Dim P0$[20],V0$[12],H0$[20],P9$[50],U5$[10],TFLE$[40],J0$[15],J5$[55]
Dim J$[50],CNAME$[30],J2$[20],J3$[40],J4$[75],ARDATE$[8],L7$[6],J7$[75]
Dim CUNIT$[4],CZONE$[2],P61$[256],L_PRICEKEY$[40],LSUNIT$[4],LPDATE$[8]
Dim K1$[50],K2$[20],K3$[20],X$[40],D1$[8],D2$[8],T$[10],J9$[256],P60$[50]
Dim 2%,OTC,CURDATE,LPC1[2],PDESC$[3],CDESC$[3],LPDESC$[3],LCDESC$[3],3%
Dim A1$[142],SCRATCH$[80],S3$[33],3%,SORDREC,R[99]
Dim KTruck$[40],KZone$[40],Indord$[700]
Dim D$[132],ORIP$[40],nextblockid$[8],Message$[400],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],msg$[100],ptmp$[30]
Dim action$[30],options$[30],userid$[8],bLANK$[200],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
Dim action1$[30],action2$[30],Divname$[24],whsename$[30],custom_customer$[30]
Dim 3%,maxcnt \ maxcnt=100
Dim List$[maxcnt,100]
Dim LIST_TRUCK$[100,30],zero$[100]
  Dim SZONE$[100,30]
  Dim blockid$[100]
blank$=" ",blank$
! call dxopen() ! needed for standalone run
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
COID = IntCo ! " E=Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
!call programdump("/tmp/orlog0!","")
! call dxget("u_custom_customer", custom_customer$)

For J = 2 To 17
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "1840","-1856","-1872","-1888","-1808","-1792","-1728","-1","-1664","-1920","-1376","-1","-1968","-1824"
Data "-1","-1"
! TEMP FILE IS OPENED ON #16
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
Close #1 ! getsessions opens it as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,j$
Read #1,3;CNAME$;
Mat Read #1,115,60;Custom_customer$;
Let custom_customer$=UCASE$(TRIM$(custom_customer$))
Mat Read #1,0,100;ARDATE$;
Read #1,2,200;OTC;
Mat Read #1,3,172;CURDATE;
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
let zero$="0",zero$
sw[0] = 0 ! afflink
sw[1] = 0 ! selwhdivflag
sw[2] = 0 ! force entries in truck range if not indord
select case custom_customer$
	case "RUNGE"
		let J$="7/affcustlist"+Str$(COID)
		Call FindF(J$,Found)
		if found
			sw[0] = 1 ! afflink
			ropen #17,J$
		end if
	case "RANCHO"
		sw[1] = 1 ! selwhdivflag
	case "CSS"
		sw[1] = 1 ! selwhdivflag
	case "MORRISETTE"
		sw[1] = 1 ! selwhdivflag
	case "PIEDMONT"
		sw[1] = 1 ! selwhdivflag
	case "AREA8045","NW8045"
		sw[2] = 1 ! force truck range if not indord
End Select
LET astLINE$="*",astLINE$
If P9$[45,45] <> "N" Let BYPASS221 = 1
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
D$ = "-",D$
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
ORIP$ = "cntrl/orip" + Str$(COID)
action1$=UCase$(RTRIM$(action1$)) ! action$ used in oemenu
Returnstatus=1
! always check for other run/if data
Call L_1240() ! see if any status2
If returnstatus=0 goto OR204Done
! CHECK PROGLOCK
E=3  ! CHECK with time check
call "proglock.dl4","204",e,message$  !! no special flag for delete
if e  !! found entry
	message$="In process by another user. Try again in 5 minutes"
	goto or204Done
endif
call chkpflag() ! check prog/user flag
If returnstatus=0 goto OR204Done
call chkorip() ! look for ip files
If returnstatus=0 goto OR204Done
returnstatus=0
message$="Action1 not found"
Select Case Action1$

	case "GETLISTS" ! droplists								doc=ORG204-GetDroplists.doc
		returnstatus=1
		message$="OK"
		clear list$[]
		list$[0]=bsdel$,"Printers",fdel$
		List$[1]="Name",fdel$,"Id",fdel$,"Default",fdel$
		call AddToStr(e$,rstr$,List$[])
		pdfoption=1
		xmloption=0 ! BROWSER NOT OK  (MULTIPLE PRINT FORMATS for diff status!)
		Call blockPrintersDropList(rstr$,xmloption,pdfoption)
		Call AddToStr(e$,rstr$,esdel$) ! end of section 
		clear list$[]
		list$[0]=bsdel$,"REPORTTYPE",fdel$
		list$[1]="RPTTYPE",fdel$,"DESC",fdel$
		List$[2]="D",fdel$,"D - Detail",fdel$
		List$[3]="S",fdel$,"S - Summary",fdel$
		List$[4]=esdel$
		call AddToStr(e$,rstr$,List$[])
		Clear list$[]
		list$[0]=bsdel$,"PICKLIST",fdel$
		list$[1]="PLPRNT",fdel$,"DESC",fdel$
		List$[2]="0",fdel$,"0 - All Orders",fdel$
		List$[3]="1",fdel$,"1 - PICKING TICKETS PRINTED ON PICKLIST",fdel$
		List$[4]="2",fdel$,"2 - PICKING TICKETS NOT ON PICKLIST",fdel$
		List$[5]=esdel$
		call AddToStr(e$,rstr$,List$[])
		Clear list$[]
		list$[0]=bsdel$,"SORTOPTIONS",fdel$
		List$[1]="SRTOPT",fdel$,"DESC",fdel$
		! (O)RDER, (T)RUCK/ZONE, (D)IV/SLSM, (W)HSE, (Z)ONE
		List$[2]="O",fdel$,"O - Order #",fdel$
		list$[3]="T",fdel$,"T - Truck/Zone",fdel$
		list$[4]="D",fdel$,"D - Division/Salesperson",fdel$
		List$[5]="W",fdel$,"W - Warehouse",fdel$
		List$[6]="Z",fdel$,"Z - Zone",fdel$
		List$[7]="S",fdel$,"S - Salesperson",fdel$
		List$[8]=esdel$
		call AddToStr(e$,rstr$,List$[])
		Clear list$[]
		List$[0]=bsdel$,"DIVILIST",fdel$
		List$[1]="DIV",fdel$,"NAME",fdel$
		if  sw[1] ! selwhdivflag=99
			List$[2]=" ",fdel$,"----Please Select----",fdel$
			List$[3]="0",fdel$,"0 - ALL",fdel$
			row=4
		else
			List$[2]="0",fdel$,"0 - ALL",fdel$
			row=3
		endif
		chan=OpenFile(-688,Intco) \ if chan=-1 error 42 ! division
		X2=chf(chan)-1
		for x=1 to x2
			try
			mat read #chan,x,0;DIVNAME$;
			else
				divname$=""
			End try
			tmp$=rtrim$(divname$)
			if tmp$<>""
				list$[row]=Str$(X),fdel$,Str$(x)," - ",tmp$,fdel$
				row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
			Endif
		Next X
		try close #chan Else Rem
		List$[row]=esdel$
		call AddToStr(e$,rstr$,List$[])
		Clear list$[]
		List$[0]=bsdel$,"WHSELIST",fdel$
		List$[1]="WHSE",fdel$,"NAME",fdel$
	    if sw[1] ! selwhdivflag<>0
			List$[2]=" ",fdel$,"----Please Select----",fdel$
			List$[3]="0",fdel$,"0 - ALL",fdel$
			row=4
		else
			List$[2]="0",fdel$,"0 - ALL",fdel$
			row=3
		endif
		chan=Openfile(-2768,Intco) \ if chan=-1 error 42 ! whseinfo
		X2=CHF(chan)-1 
		if x2>98 let x2=98 ! is 0-98=1-99
		for x=0 to x2
			try
			mat read #chan,x,4;whsename$;
			else
				whsename$=""
			End try
			tmp$=rtrim$(whsename$)
			if tmp$<>""
				list$[row]=Str$(X+1),fdel$,Str$(x+1)," - ",tmp$,fdel$
				row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
			Endif
		Next X
		try close #chan Else Rem
		List$[row]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! need divs,whses,printers
	case "GETTRUCKS" ! truck selector						doc=ORG204-GetTruckDroplist.doc
		e$="Option no longer valid - internal error!"
		error 10000
		returnstatus=1
		message$="OK"
		Try
			v9=CHF(9) ! is there a sortfile?
		Else
			X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w
			! if x2<0 Error 10000 ! problem with build
		End try
		call GetTrkList()
		call addtostr(e$,rstr$,List_Truck$[])
	Case "GETZONES" ! zone selector							doc=ORG204-GetTruckDroplist.doc
		returnstatus=1
		message$="OK"
		Try
			v9=CHF(9) ! is there a sortfile?
		Else
			X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w
			! if x2<0 Error 10000 ! problem with build
		End try
		call GetZNList()
		call addtostr(e$,rstr$,SZone$[])
	case "PRINT" ! start print								doc=ORG204-PrintRegister.doc
		returnstatus=1
		message$="OK"
		Try
			v9=CHF(9) ! is there a sortfile?
		Else
			X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w
			! if x2<0 Error 10000 ! problem with build
		End try
		call L_1900()
	! end of print
End select
OR204Done: ! finished
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
	Call AddToStr(e$,rstr$,WebStr$)                            
	Call SetOutPut(e$,rstr$)
Else
Rem {begin rtn.error.s}
!
include "src/callmainerrnet.inc"
end try
End ! the whole program

!------------------------------------------------------------------------------
Sub L_1900() ! start it now
 Try
		Gosub L_6800 ! build us a temp work file

		V8 = 0 ! will always be report - no screen!
		V9 = 55 \ If V8 Let V9 = 20
		S7 = 0 \ S1 = 2 \ S2 = 3 \ ORDER[0] = 0;ORDER[1] = 999999
		J8=V8 ! NO XML FILE !!!V8 ! J8 used in addition to V8 ! !Window On 

		Gosub L_7800 ! clr sortfile
	! Gosub L_10000 ! screen
	V1 = 90;V2 = 0;F=0
	Rem ========================== SELECT DELIVERY DATE
	Call DXGet("SHIPDATE",tmp$)
	tmp$=chkDteFrmt$(e$,tmp$)
	If Trim$(tmp$)="" 
		let tmp1$=ARDate$[7,8],ardate$[1,2],ardate$[4,5]
		SELALL=1
	Else
		tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy to yyyymmdd
		J4$=tmp1$[3,8]
		tmp1$=J4$
	Endif
	tmp$ = tmp1$ ! [5,6],tmp1$[1,2],tmp1$[3,4] ! from yymmdd
	!call programdump("/tmp/orlog1!","")
	  J1 = tmp$
	  if J1<=0 let SELALL=1;j1=curdate
	X2 = J1 \ Gosub YMD2JUL \ If errFlag = 1 Let e$ = "Invalid date!" \ Goto Err_Msg  !!!CONVERT YYMMDD TO JULIAN
	JDATE = X2
	X2 = J1 \ Gosub L_7700 ! x2 to mm/dd/yy
	Gosub L_6900 ! get day of week
	D8 = J1
	!Print @36,2;X$;
	F = Z9 + 1 \ If F < 1 or F > 7 Let e$ = "Invalid date!!" \ Goto Err_Msg 

	! Reprint Y/N
	Call DXGET("REPRNT",tmp$) \ if UCase$(tmp$)="Y" let J1=1 Else Let J1=0
	! Gosub L_7000 ! REPrint Y/N
	If J1 Let S7 = S2 Else Let S7 = S1
	call dxget("EXDATE",tmp$) ! new - print only for the date
	EXDMATCH=0 \ if UCase$(RTRIM$(tmp$))="Y" let EXDMATCH=1
	if SELall and EXDMATCH ! let exdmatch=0 ! cannot match no date!
		e$="No Date Entered to Print" \ goto Err_Msg ! let's stop 'em
	Endif
	! "ENTER 'D' FOR FULL DETAIL OR 'S' FOR SUMMARY" 
	Call DXGET("RPTTYPE",tmp$) \ let j$=Trim$(UCase$(tmp$))
	If j$<>"D" and j$<>"S" Let J$="D"
	T$ = J$
	J5$ = " ",J5$

	! Division
	

	! Picklist option 0=all, 1=not, 2=on
	Call DXGET("PLPRNT",tmp$)
	If tmp$="0" let PrintAll=1

	If PRINTALL
		Let S9[0]=0
	Else ! f 
		!Print @5,14;"1. PICKING TICKETS PRINTED ON PICKLIST  or  "
		!Print @5,15;"2. PICKING TICKETS PRINTED THAT ARE NOT ON PICKLIST? (1/2)  "
		J$=Trim$(tmp$)
		S9[0] = 2 \ If J$ = "2" Let S9[0] = 1
	Endif
	Rem START range into order[0]
	Call DXGET("STORDER",tmp$)!Gosub L_7000
	ORDER[0] = tmp$ ! J1
	Rem END range into order[1]
	Call DXGET("ENDORDER",tmp$)!Gosub L_7000
	if tmp$="" let tmp$="999999"
	ORDER[1] = tmp$ ! J1
	If ORDER[0] > ORDER[1]
	  J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
	  E$=J7$ \ Goto Err_Msg ! Gosub ISERRMSG \ Goto L_1275
	End If 
	! ADDED 12/30/10 - INDIVIDUAL ORDERS - TASK 903
	Call DXGet("INDORD",indord$)
	if indord$[1,3]>"   "
		let indord=1
		if indord$[len(indord$)]<>"," let indord$=indord$+","  ! add a trailing comma
	else
		indord=0  ! individual order list
	end if
	If Order[0]>0 and order[1]<999999 and indord ! range or individ - NOT BOTH!
		J7$ = "ENTER A RANGE OR INDIVIDUAL ORDERS - CAN NOT HAVE BOTH!"
	  E$=J7$ \ Goto Err_Msg ! Gosub ISERRMSG \ Goto L_1275
	End If
	Call DXGET("DIV",tmp$) ! DIVISION
	J$=TRIM$(tmp$)
	if sw[1] and not(indord) ! selwhdivflag<>0 and not(indord)
		If J$ = "" 
			e$="No Division Selected to Print" \ goto Err_Msg ! let's stop 'em
		endif
	endif
	!Let DIV = 0 Else 
	Let DIV = J$
	! Entered by totals page
	Call DXGET("EBYTOTS",tmp$) ! Gosub L_7000 ! entered by totals page
	J1=0 \ if UCase$(tmp$)="Y" let j1=1
	ENTD = 0 \ If J1 Let ENTD = 9
	 
	! "CHOOSE THE SORT OPTION DESIRED"
	Call DXGet("SRTOPT",tmp$) ! Gosub L_7000
	j$=Trim$(UCASE$(tmp$))
	If J$ <> "O" And J$ <> "T" And J$ <> "D" And J$ <> "W" And J$ <> "Z" AND j$<>"S"
	  J7$ = "INVALID ENTRY FOR SORT OPTION"
	  e$=J7$ \ Goto Err_Msg 
	End If 
	SORT = 0 \ If J$ = "T" Let SORT = 1
	If J$ = "D" Let SORT = 2
	If J$ = "W" Let SORT = 3
	If J$ = "Z" Let SORT = 4
	if j$="S" let Sort=5
	J5$ = " ",J5$
	 
	Rem WHSE
	Call DXGet("WHSE",tmp$)
	if sw[1] and not(indord) ! checking warehouse if individual order is not select
		if rtrim$(tmp$)=""
			e$="No Warehouse Selected to Print" \ goto Err_Msg ! let's stop 'em
		endif
	endif
	Let j1=Tmp$
	if custom_customer$ = "MAYFIELD" and not(J1)
		e$ = "Cannot run for all warehouses.  Please select one."
		goto Err_msg
	end if
	If J1 < 0 Or J1 > 99 Or Fra(J1) Let J1=0 ! Goto L_1400
	WHSE = J1

	! NEW - PROMPT FOR PREVIEW OR FINAL
	Call DXGET("PRVUPRT",tmp$)
	Let AudOnly=0 \ if UCase$(tmp$)="Y" Let AUDONLY=1
	Rem ALL TRUCKS
! 	let truck$="SEL"
! 	Call DXGet("ALLTRKSEL",tmp$)
! 	If UCase$(tmp$)="Y" let Truck$="" ! means all
	truck$ = ""
	call dxget("STRUCK",tmp$) \ struck=tmp$
	if not(struck) and len(rtrim$(tmp$))
		if tmp$[1,len(rtrim$(tmp$))]<>zero$[1,len(rtrim$(tmp$))] then e$="Invalid Truck" \ goto Err_Msg 
	endif
	if sw[2] and not(indord)
		if rtrim$(tmp$) = ""
			e$="No Beginning Truck Selected to Print" \ goto Err_Msg ! let's stop 'em
		end if
	end if
	call dxget("ETRUCK",tmp$) \ etruck=tmp$
		if len(rtrim$(tmp$))
			for i=1 to len(rtrim$(tmp$))
				if tmp$[i,i]<>" " and (tmp$[i,i]<"0" or tmp$[i,i]>"9") then e$="Invalid Truck" \ goto Err_Msg
			next i
		endif
		if not(etruck) and len(rtrim$(tmp$))
		e$="Invalid Truck" \ goto Err_Msg 
	endif
	if sw[2] and not(indord)
		if rtrim$(tmp$) = ""
			e$="No Ending Truck Selected to Print" \ goto Err_Msg ! let's stop 'em
		end if
	end if
	if tmp$ = "" etruck = 999999
	Rem ALL ZONES
	Let zone$="SL"
	Call DXGET("ALLZNESEL",tmp$)
	If UCase$(tmp$)="Y" Let Zone$="" ! means all

	
	Rem ========================== LOAD UP SELECT TRUCKS
	if truck$="" Goto L_6282 ! wants ALL

	L_6282: Rem ============= END TRUCKS
	!call programdump("/tmp/orlog3!","")
	Rem ========================== SELECT ZONE(S) - START BY LOADING
	If Zone$="" Goto L_6515 ! wants all zones
	L_6515: Rem ============= END ZONES
	
	L_1500: ! 
	!! reload from block
	!clearing sort file...
	If Truck$<>"" OR Zone$<>""
		Gosub L_7800 ! clr sortfile (again - reload selected trucks/zones
	Endif
	!
	If truck$<>""
		call dxget("TRUCKCNT",tmp$)

		TRUCKCNT = tmp$
		If truckcnt>=1
			for i = 1 to TRUCKCNT ! -1
				call dxget("TRUCKS" + str$(i),tmp$)
				truck = tmp$
				if not(truck) and len(rtrim$(tmp$))
					if tmp$[1,len(rtrim$(tmp$))]<>zero$[1,len(rtrim$(tmp$))]  goto badtruck 
				endif
				!tmp$ = "on"!!!dci2
				if tmp$ <> ""  !!on
					TRUCK = tmp$
					J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
					Search #9,4,1;J4$,V1,E
				end if
				badtruck: !! alpha truck number sent
			Next i
		Endif ! of trucks select
	Endif
	If Zone$<>""
		call dxget("ZONECNT",tmp$)
		ZONECNT = tmp$
		if zonecnt>=1
			for i = 1 to ZONECNT  ! -1
				call dxget("ZONES" + str$(i),tmp$)
				!tmp$ = "on" !!!dci2
				if tmp$ <> "" 
					ZONE$ =  tmp$ ! U_ZONE$[i]
					J4$ = " ",J4$ \ J4$ = "}",ZONE$
					Search #9,4,1;J4$,V1,E 
				end if
			Next i
		Endif ! of zones selected
	Endif
	IF INDORD ! parse out orders to register
		kpos=0
		do
		  tmp$=indord$[KPOS+1] TO ",":KPOS
		  if kpos>1 and kpos<=len(indord$)
			iord=tmp$
			j4$=" ",j4$;j4$[1,2]="}:" ! make diff from zones
			if iord>0 and iord<=999999
				j4$[3]=iord using "######"
				v1=0
				Search #9,4,1;J4$,V1,E 
				! if e>1 gosub err_search ! allow dupes
			Endif
		  Else ! past or at end
			exit do
		  Endif ! of within string
		Loop
	Endif ! of individ orders
	call dxget("Printer",tmp$) ! let's see if 1 selected (-- = NONE)
	tmp$=rtrim$(tmp$)
	if tmp$[1,2]="--"
			Returnstatus=0
			Message$="NO PRINTER SELECTED"
			goto ERR_MSG ! Done
	Endif
	onchannelno=0 ! zero for channel 
	printchan = openprinter(e$,onchannelno) 
	Toscreen=0
	if printchan=-1 let Toscreen=1 ! to browser
	if toscreen
		Returnstatus=0
		Message$="NO Browser Print"
		goto ERR_MSG ! Done
	Endif
	let j8=toscreen
	GOSUB EmailSalesCopy: !* do we email a copy to sales rep
	if e$ <> ""
		Returnstatus=0
		Message$=e$
		goto ERR_MSG ! Done
	end if
	! Call dxsave(0,"tmp/204ain.txt!") ! save web data sent
	! DUE TO WEB - WE CREATE ORIP UPON ACTUAL RUN!!
		Chan=Findchannel()
		R[99]=GetUIDRec(e$,IntCo,Userid$)
	  !tmp$="<666> "+ORip$+"!"
	  tmp$=ORip$+"!"
	  Build #CHan,+tmp$
	  Print #Chan;"order register started ";Msc$(3)
	  Print #Chan;"user ";R[99];" SPC 5= ";Spc(5)
	  Close #Chan
	  tmp$="chmod go+rw files/"+LCase$(ORip$)+"*"
	  System tmp$
	! moved from starting
	If J8 ! dx xml, setup rstr$ (PRINT TO BROWSER)
	  !<section>
	  tmp$ = bsdel$,"204a",fdel$,rdel$
	  Call addtostr(e$,rstr$,tmp$)
	End If 
	if J8 ! set up xml headings?
	  tmp$ = "MESSAGE" ! PER ALL - NO XCEL OPTION! (MULTI LINE & MULTI SECTION!!)
	  AUDONLY=1 ! change to AUDIT/Preview ONLY
	  Goto OutEnd ! don't even process!!
	Endif
	iF S7=S2 LET AUDONLY=1 ! reprint
	Mat Read #1,120;P0
	P0[204] = R[99] ! gotten above
	Mat Write #1,120;P0;
	message$="do a lock"
	call "proglock.dl4","204",1,message$
Gosub L_8300 ! sort
V1 = 90
!Print @0,23;'CL';"PRINTING...";
!call programdump("/tmp/orlog6!","")
  !If Err 0 Gosub ERR_TRAP
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
	! try call dxclose() else rem
!
K1$ = " ",K1$;CWHSE = 0;CZONE$ = " ",CZONE$
L_2000: Search #9,3,1;K1$,R1,E  \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
If K1$[1,1] >= "{" Goto L_9100
Mat Read #2,R1,0;H0
Mat Read #2,R1,52;H3
Mat Read #2,R1,446;P0$
Mat Read #2,R1,66;V0$
Mat Read #2,R1,78;H4
Mat Read #2,R1,84;H0$
Mat Read #2,R1,104;H5
Mat Read #3,H0[2],8;S1$; \ Mat Read #3,H0[2],126;S2$;
Read #3,H0[2],146;S5;
Mat Read #4,H0[3],8;T2;
If OSLSM And (SORT = 2 or SORT=5) And H0[11] <> OSLSM
	Gosub SLSM_BREAK
	V1 = V9 ! force a new header for next rep
end if
If H0[11]<>OSLSM and (Sort=2 or Sort=5) and emailRep
	needOpenEmCh=1
Else
	needOpenEmCh=0
Endif
LET OSLSM=H0[11] \ GOSUB GET_SLSM:
X2 = H0[9] \ Gosub L_7700 \ D1$ = X$
X2 = H0[10] \ Gosub L_7700 \ D2$ = X$
If SORT = 3 ! "by whse
  X2 = K1$[1,2] \ If CWHSE = 0 Let CWHSE = X2
  If X2 <> CWHSE Gosub WHSE_BREAK
  CWHSE = K1$[1,2]
End If 
If SORT = 4 ! "by zone
  If CZONE$[1,2] = "  " Let CZONE$[1,2] = K1$[1,2]
  If K1$[1,2] <> CZONE$[1,2] Gosub ZONE_BREAK
  CZONE$[1,2] = K1$[1,2]
End If 
Gosub L_3000 ! cust
Gosub L_3050 ! billto
Gosub L_5800 ! header
Gosub L_5000 ! details
Gosub L_2200 ! totals
If T$ <> "S"
  Gosub L_4500 ! line detail
  If Not(J8) Print #0;D$
  V1 = V1 + 1
  Gosub L_5800
End If 
If H0[0] = S1 And Not(BYPASS221) 
	If Not(AUDONLY) Gosub L_3500 ! status change if not to Invoiced
Endif
if J8 ! xml detail
  !xml
Endif
Goto L_2000
L_2200: Rem ========================== TOTALS CALC
REGTOT = REGTOT + T2[1]
REGTOTCOST = REGTOTCOST + T2[17]
SLSMTOT = SLSMTOT + T2[1]
SLSMTOTCOST = SLSMTOTCOST + T2[17]
REC = H5[0] \ Gosub L_6700
For J = 0 To 5
  If J = 2 Let T16[J] = T16[J] + T2[7] \ Goto L_2270
  If J = 4 Let T16[J] = T16[J] + T2[6] + T2[4] \ Goto L_2270
  T16[J] = T16[J] + T2[J]
L_2270: Next J
T16[6] = T16[6] + T2[17]
T16[7] = T16[7] + 1
Gosub L_2400 \ T16[8] = T16[8] + NOLINES
REC = H5[0] \ Gosub L_6750
Return 
L_2400: Rem TOTAL # LINES
NOLINES = 0
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_2420: Search #5,3,1;J2$,R5,E  \ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
NOLINES = NOLINES + 1
Goto L_2420

L_3000: Rem ========================== GET CUSTOMER NAME
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E
If E Gosub ERR_SEARCH
Mat Read #6,R6,0;A1$;
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,142;C1;
Return 
L_3050: Rem ========================== GET BILL TO
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E
If E = 1 If H0[1] <> H0[4] Let H0[1] = H0[4] \ Write #2,R1,4;H0[1] \ Goto L_3050
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C2$;
If H0[1] = OTC Let C2$ = S1$
Return 
L_3500: Rem ========================== CHANGE STATUS
J4$ = " ",J4$ \ J4$ = S1 Using "##"
J4$[3] = H0[7] Using "######"
Search #2,2,1;J4$,R2,E
If E Return 
If R2 <> R1 Let E = 0  \ Gosub ERR_SEARCH
Search #2,5,1;J4$,R2,E
If E Gosub ERR_SEARCH
J4$[1,2] = S2 Using "##"
J4$[3] = H0[7] Using "###### "
Search #2,4,1;J4$,R1,E
If E Gosub ERR_SEARCH
H0 = S2 \ Write #2,R1;H0;
Gosub DO_ASN
Return 

L_4000: Rem ========================== TOTAL PRINT
	Gosub L_5800
	If SORT = 2 or sort=5 Let SORT = 0 \ Gosub SLSM_BREAK
	If SORT = 3 Let SORT = 0 \ Gosub WHSE_BREAK
	If SORT = 4 Let SORT = 0 \ Gosub ZONE_BREAK
	CH_LPT=0
	LOOP_TOTAL: !
	If Not(J8) ! 
		Print #CH_LPT;" "
		Print #CH_LPT; Tab 20;"REGISTER LINES TOTALS";
		If COST_LEV[1]
			If REGTOT Let REGAVGGP = FNR((REGTOT - REGTOTCOST) / REGTOT * 100)
			if custom_customer$="JPAPER"
				PRINT #CH_LPT; TAB 60;"GTM %: ";
			Else
				Print #CH_LPT; Tab 60;"GP %: ";
			Endif
			Print #CH_LPT; Using "---#.##";REGAVGGP;
		End If 
		Print #CH_LPT; Using "-------#.##"; Tab 108;REGTOT;
		If COST_LEV[1]
		Print #CH_LPT; Using "-------#.##"; Tab 120;REGTOTCOST
		Else 
		Print #CH_LPT;""
		End If 
		Print #CH_LPT;" "
	Endif ! not xml
	IF CH_LPT=0 AND EMCH<>-1 AND SORT=2 LET CH_LPT=EMCH \ GOTO LOOP_TOTAL: 
Return 

L_4200: Rem ========================== ENTERED BY TOTALS
If Not(ENTD) Return 
Mat GT = Zer
V1 = 90 \ F9 = 9 \ Gosub L_5800
For J = 0 To 999
  REC = J \ Gosub L_6700
  If T16[7] = 0 Goto L_4240
  Mat Read #10,REC,0;J1$;
  Gosub L_4350
  Gosub L_4300
L_4240: Next J
Gosub L_4400
F9 = 0
Return 
L_4300: Rem ========================== PRINT TOTALS
If Not(J8)
	Print #0; Using "###"; Tab 5;REC; Tab 10;J1$[1,10];
	Print #0; Using "########"; Tab 30;T16[7];
	Print #0; Using "########"; Tab 40;T16[8];
	Print #0; Using "---------#.##"; Tab 49;T16[1];
	If COST_LEV[1]
	  Print #0; Using "---------#.##"; Tab 64;T16[6]
	Else 
	  Print #0;""
	End If 
Endif
V1 = V1 + 1
Gosub L_5800
Return 
L_4350: Rem CALCULATE GRAND TOTALS
GT[1] = GT[1] + T16[7]
GT[2] = GT[2] + T16[8]
GT[3] = GT[3] + T16[1]
GT[4] = GT[4] + T16[6]
Return 
L_4400: Rem ========================== PRINT GRAND TOTALS
If Not(J8)
	Print #0; Tab 30;"--------"; Tab 40;"--------"; Tab 50;"------------";
	If COST_LEV[1]
	  Print #0; Tab 64;"-----------------"
	Else 
	  Print #0;""
	End If 
Endif
V1 = V1 + 1 \ Gosub L_5800
If Not(J8)
	Print #0; Using "########"; Tab 30;GT[1]; Tab 40;GT[2];
	Print #0; Using "---------#.##"; Tab 49;GT[3];
	If COST_LEV[1]
	  Print #0; Using "---------#.##"; Tab 64;GT[4]
	Else 
	  Print #0;""
	End If 
Endif
V1 = V1 + 1 \ Gosub L_5800
Return 
L_4500: Rem ========================== GO THRU LINES
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4530: Search #5,3,1;J2$,R5,E  \ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3; \ Mat Read #5,R5,16;L4;
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L1$; \ Mat Read #5,R5,140;L2$;
Mat Read #5,R5,160;L9;
CTR = CTR + 1
If CTR = 1 Let D = 0 Else Let D = 1
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,256;LT;
Mat Read #5,R5,260;S3; \ Mat Read #5,R5,404;OLM;
MAT READ #5,R5,370;S3$;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
Mat Read #5,R5,494;LCO;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
READ #5,R5,564;ROL0;
If Not(L3) Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2; \ Mat Read #7,L4,256;A;
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
If L3[0] Gosub L_30000
For X = 1 To 3 \ SUNIT[X] = 0 \ Next X
PUNIT = 0;SUNIT$ = " ",SUNIT;PUNIT$ = " ",PUNIT$;CUNIT = 0;CUNIT$ = " ",CUNIT$
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let LT[0] = 3
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_4755
IF custom_customer$ <> "MORRISETTE"
	If L3[2] >= 990 Goto L_4530
end if
If LT[0] = 3 Goto L_4755
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000
  SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
PUNIT = AMOUNT
! 12137 - show net cost - not unit cost
IF S3[11]=-3 AND L7[2] LET CHBASE=(S3[1]/L7[2]) ELSE  LET CHBASE=S3[1]
LET NETCOST=L5[1]+CHBASE
IF ROL0
  IF ROL0<0
    LET NETCOST=NETCOST+ABS(ROL0)
  ELSE
    LET NETCOST=NETCOST+(NETCOST*(ROL0/100))
  ENDIF
ENDIF
If CUSTOM_CUSTOMER$ = "SOUTHJERSEY"
   CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = NetCost ! L5[1]
Else
   CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = NetCost ! L5[1]
endif
Gosub L_20000 \ CUNIT = AMOUNT
If UN[0] > 0 Mat Read #8,UN[0],10;SUNIT$;
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] > 0 Mat Read #8,UN[1],10;PUNIT$;
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If CUSTOM_CUSTOMER$ = "SOUTHJERSEY"
   If UN[1] > 0 Mat Read #8,UN[2],10;CUNIT$;
   If UN[1] = -1 Let CUNIT$ = "CWT "
   If UN[1] = -2 Let CUNIT$ = "LOT "
   If UN[1] = -3 Let CUNIT$ = "LB  "
else
   If UN[2] > 0 Mat Read #8,UN[2],10;CUNIT$;
   If UN[2] = -1 Let CUNIT$ = "CWT "
   If UN[2] = -2 Let CUNIT$ = "LOT "
   If UN[2] = -3 Let CUNIT$ = "LB  "
endif
If Not(L6[1]) Goto LAST_PRICE
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000
L6[1] = AMOUNT
LAST_PRICE: Rem GET LAST PRICE AMOUNTS FOR THIS CUSTOMER & PRODUCT
L_PRICEKEY$ = " ",L_PRICEKEY$
L_PRICEKEY$[1,6] = H0[4] Using "######"
IF P9$[44,44]="Y"
	LET L_PRICEKEY$[7,10]=L9[1] USING "####"
else
	LET L_PRICEKEY$[7,10]=0 USING "####"
endif
PTMP$=L2$[1,12]+BLANK$
IF L3[0] AND S3$[1,4]<>"    " LET PTMP$=S3$[1,20] ! NSTK USES VENDITEM
ptmp$[21]="" ! cut at 20
L_PRICEKEY$[11,30] = ptmp$ ! prod or venditem
Search #12,3,1;L_PRICEKEY$,R12,E
If E > 2 Gosub ERR_SEARCH
If E 
Gosub CLEAR_LPFIELDS 
Goto L_4755
Endif
LP = L_PRICEKEY$[1,6] \ If LP <> H0[4] Gosub CLEAR_LPFIELDS \ Goto L_4755
iF P9$[44,44]="Y"
	LET LP=L_PRICEKEY$[7,10] 
	IF LP<>L9[1] GOSUB CLEAR_LPFIELDS: \ GOTO L_4755
endif
If L_PRICEKEY$[11,30] <> ptmp$[1,20] Gosub CLEAR_LPFIELDS \ Goto L_4755
Mat Read #12,R12,16;LPC1;
Mat Read #12,R12,28;LPC2;
Mat Read #12,R12,46;LPC3;
Mat Read #12,R12,276;LPC5;
If LPC3[2] > 0 Mat Read #8,LPC3[2],10;LSUNIT$;
If LPC3[2] = -1 Let LSUNIT$ = "CWT "
If LPC3[2] = -2 Let LSUNIT$ = "LOT "
X2 = LPC1[2] \ Gosub L_7700 \ LPDATE$ = X$
CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 2;CNVTA = LPC2[1]
Gosub L_20000 \ LPUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 2;CNVTA = LPC2[2]
Gosub L_20000 \ LCUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = LPC3[2];CNVTU[2] = 1;CNVTA = LPC2[0]
Gosub L_20000
L_QUANT = AMOUNT
L_4755: Gosub L_5800 ! header
Gosub L_5500 ! line detail
Goto L_4530
CLEAR_LPFIELDS: Rem if no last price record, clear out the last price fields
LSUNIT$ = "" \ LPDATE$ = "--------"
LPUNIT = 0 \ LCUNIT = 0
L_QUANT = 0 \ LPGP = 0
Return 
L_5000: Rem ========================== ORDER HEADER LINE
	CTR = 0
	LET CH_LPT=0
	LET linesRequired = 3
	if custom_customer$ = "MORRISETTE" let linesRequired = 4
	LOOP_LINE: !
	if custom_customer$ = "MORRISETTE"
		PRINT #CH_LPT;astLINE$
	end if
	If J8 ! xml line load
	Else
		if custom_customer$="JPAPER" PRINT #CH_LPT;"" ! moved from bottom
		Print #CH_LPT; Using "######";H0[7];
		Print #CH_LPT; Tab 7;D1$[1,8];
		Print #CH_LPT; Using "######"; Tab 16;H0[4];
		Print #CH_LPT; Tab 23;C1$[1,13];
		Print #CH_LPT; Tab 37;P0$;
		Print #CH_LPT; Tab 57;D2$[1,8];
		Print #CH_LPT; Using "###"; Tab 67;H0[11];
		Print #CH_LPT; Using "###"; Tab 72;H5;
		Print #CH_LPT; Using "##"; Tab 76;H4[2];
		Print #CH_LPT; Using "####"; Tab 80;H4;
		Print #CH_LPT; Using "######"; Tab 85;S5;
		Print #CH_LPT; Tab 93;S2$[19,20];
		Print #CH_LPT; Using "####"; Tab 98;H4[1];
		Print #CH_LPT; Using "-------#.##"; Tab 108;T2[1];
		If COST_LEV[1]
			Print #CH_LPT; Using "-------#.##"; Tab 120;T2[17]
		Else 
			Print #CH_LPT;""
		End If 
		Print #CH_LPT; Tab 20;C2$[1,20];
		If H5[13] Let ORDGP = FNR((H5[13] - H5[14]) / H5[13] * 100) Else Let ORDGP = 0
		If COST_LEV[1]
			Print #CH_LPT; Using "    ---#.##"; Tab 120;ORDGP
		Else 
			Print #CH_LPT;""
		End If 
		if custom_customer$<>"JPAPER" ! they do at beginning
			Print #CH_LPT;""
		Endif
	Endif
	IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_LINE:
	LET V1=V1+linesRequired
	If T$ = "S" Return 
Return 

L_5088: Rem =========================== SUBHEADER
	LET CH_LPT=0
	LOOP_SUBHEADER: !==
	If Not(J8)
		Print #CH_LPT; Tab 2;"LINE"; Tab 7;"ITEM CODE"; Tab 20;"DESCRIPTION";
		Print #CH_LPT; Tab 43;"ORDERED"; Tab 53;"SHIPPED"; Tab 65;"B'ORD";
		if custom_customer$="JPAPER"
			PRINT #CH_LPT; TAB 74;"GTM%"; TAB 81;"PRICE";
		Else
			Print #CH_LPT; Tab 71;"U/M"; Tab 81;"PRICE";
		Endif
		If COST_LEV[1]
		Print #CH_LPT; Tab 98;"COST"; Tab 110;"EXT PRICE"; Tab 123;"EXT COST"
		Else 
		Print #CH_LPT; Tab 110;"EXT PRICE"
		End If 
	Endif
	IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_SUBHEADER: 
	V1 = V1 + 1
Return 

GET_PCDESC: Rem "Price & Cost Descriptions
PDESC$ = " ",PDESC$;CDESC$ = " ",CDESC$
If LT[0] = 3 Return 
If L3[0] = 1 Return 
PDESC$ = L9[0] Using "--#"
CDESC$ = LCO[0] Using "--#"
LPDESC$ = " ",LPDESC$;LCDESC$ = " ",LCDESC$
If LPDATE$[1,3] = "---" Return 
LPDESC$ = LPC3[0] Using "--#"
LCDESC$ = LPC5[0] Using "--#"
Return 
L_5500: Rem ========================== ORDER LINE DETAIL
	If D = 0 Gosub L_5088
	D = 1 \ Gosub GET_PCDESC
	LET CH_LPT=0
	LOOP_LINE_DETAIL_1: !==
	If Not(J8)
		If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #CH_LPT; Tab 6;J2$[10,10]; \ Goto L_5520
		Print #CH_LPT; Using "###"; Tab 3;L3[2];
		L_5520: Print #CH_LPT; Tab 7;L2$[1,12]; Tab 20;L1$[1,20];
		If LT[0] = 3 Print #CH_LPT;"" \ V1 = V1 + 1 \ Goto L_5562
		If custom_customer$<>"JPAPER" ! std print
			Print #CH_LPT; Using "------.##"; Tab 41;SUNIT[1];SUNIT[3];SUNIT[2];
			Print #CH_LPT; Tab 69;SUNIT$;
		Else
			IF FRA(SUNIT[1])=0 PRINT #CH_LPT;USING "--------#";TAB 41;SUNIT[1];ELSE PRINT #CH_LPT; USING "------.##"; TAB 41;SUNIT[1];
			IF FRA(SUNIT[3])=0 PRINT #CH_LPT;USING "--------#";SUNIT[3];ELSE PRINT #CH_LPT; USING "------.##"; SUNIT[3];  
			IF FRA(SUNIT[2])=0 PRINT #CH_LPT;USING "--------#";SUNIT[2];ELSE PRINT #CH_LPT; USING "------.##"; SUNIT[2]; 
			!PRINT #0; TAB 71;SUNIT$; ! "selling um
			IF L5[3] LET X3=(L5[3]-S3[12])/L5[3]*100 ELSE  LET X3=0 ! "gtm                  
			PRINT #CH_LPT; USING "---#.##";TAB 71;X3; !gtm ! seems like would run in to price, etc
		Endif
		If custom_customer$<>"JPAPER" 
			Print #CH_LPT; Using PMASK$; Tab 73;PUNIT;"/";PUNIT$;
		else
			Print #CH_LPT; Using "----.&&"; PUNIT;"/";PUNIT$; 
		endif
		Print #CH_LPT; Tab 89;PDESC$;
		If COST_LEV[1]
			If custom_customer$<>"JPAPER" 
				Print #CH_LPT; Using PMASK$; Tab 91;CUNIT;"/";CUNIT$;
			else
				Print #CH_LPT; Using "----.&&"; Tab 91;CUNIT;"/";CUNIT$;
			endif
			Print #CH_LPT; Tab 107;CDESC$;
			Print #CH_LPT; Using "-------#.##"; Tab 109;L5[3];
			Print #CH_LPT; Using "-------#.##"; Tab 120;S3[12]
		Else 
			Print #CH_LPT; Using "-------#.##"; Tab 109;L5[3]
		End If 
		IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_LINE_DETAIL_1:
		V1 = V1 + 1
		LET CH_LPT=0
		LOOP_LINE_DETAIL_1_5: ! 
		if custom_customer$ = "MORRISETTE"
			PRINT #CH_LPT; TAB 22;"LAST INVOICE";                                
		else
			PRINT #CH_LPT; TAB 22;"LAST ORDER";                                
		end if
		Print #CH_LPT; Tab 42;LPDATE$;
		Print #CH_LPT; Using "------.##";L_QUANT;
		If LPUNIT Let LPGP = (LPUNIT - LCUNIT) / LPUNIT * 100 Else Let LPGP = 0
		IF COST_LEV[1]<>0
			Print #CH_LPT; Using "LGP %:---#.##"; Tab 60;LPGP;
		ENDIF
		Print #CH_LPT; Using PMASK$; Tab 73;LPUNIT;"/";LSUNIT$;
		Print #CH_LPT; Tab 89;LPDESC$;
		IF COST_LEV[1]<>0
			Print #CH_LPT; Using PMASK$; Tab 91;LCUNIT;"/";LSUNIT$;
		ENDIF
		Print #CH_LPT; Tab 107;LCDESC$;
		If EUN[2] Print #CH_LPT; Tab 111;"PPU";
		Print #CH_LPT;""
	Endif
	IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_LINE_DETAIL_1_5:
	V1 = V1 + 1
	L_5562: ! "
	LET CH_LPT = 0
	LOOP_LINE_DETAIL_2: !==
	If Not(J8)
	   If CUSTOM_CUSTOMER$ <> "SOUTHJERSEY"
		If P9$[26,26] = "Y" Print #CH_LPT; Tab 22;L1$[31,60];
	   endif
		If LT[0] = 3 Goto L_5581
		if custom_customer$<>"JPAPER" ! standard - jersey paper no print
			If L5[3] Let X3 = FNR((L5[3] - S3[12]) / L5[3] * 100) Else Let X3 = 0
			If COST_LEV[1]
				Print #CH_LPT; Tab 49;"COMM: ";L2$[17,20];
				Print #CH_LPT; Using "  GP %:---#.##";X3;
			Else 
				Print #CH_LPT; Tab 49;"COMM: ";L2$[17,20];
			End If 
		Endif
		If P60$[42,42] = "Y"
			Print #CH_LPT; Using "  TAX CODE:### ";L6[5]; \ Print #CH_LPT; Using "------.##";" TAX AMT:";LTAX1;
			Print #CH_LPT; Using " (###.##%)";LTAX2;
		End If 
		L_5581: If Not(LT[0] = 3 And P9$[26,26] = "N") Print #CH_LPT;""
		IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_LINE_DETAIL_2:
		V1 = V1 + 1
	Endif
Return 

L_5800: Rem ========================== HEADINGS
If V1 < V9 Return 
! If V2 If V8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
IF V2 and emCh<>-1 PRINT #emCh;"\14\";
If V2 If Not(V8) Print #0;"\14\";
V2 = V2 + 1 \ V1 = 8
IF emCh<>-1 PRINT #emCh;"\15\";
If Not(V8) Print #0;"\15\";
let CH_LPT = 0
LOOP_HEAD: !
If Not(J8) ! aka v8
	Print #CH_LPT; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V2
	Print #CH_LPT;" - 204A - ";Msc$(3);
	Print #CH_LPT; Tab 52;"O R D E R    R E G I S T E R";
	If AudOnly ! tell 'em not final
		If S7=S1 Print #CH_LPT;"  - PREVIEW"
		If S7=S2 Print #CH_LPT;"  - REPRINT"
	Else
		Print #CH_LPT;""
	Endif
	If WHSE Print #CH_LPT; Tab 10;"WHSE";WHSE; Else Print #CH_LPT; Tab 10;"ALL WHSES";
	If DIV Print #CH_LPT; Using "##"; Tab 58;"FOR DIVISION ";DIV;
	If Not(DIV) Print #CH_LPT; Tab 58;"FOR ALL DIVISIONS ";
	If ORDER[0] <> 0 Or ORDER[1] <> 999999
	  Print #CH_LPT; Tab 103;" ORDERS ";ORDER[0];" TO ";ORDER[1]
	Else 
	  Print #CH_LPT;""
	End If 
	If SORT = 2
		Print #CH_LPT; Using "###";"DIVISION ";H5[8];"  SALESMAN ";H0[11]
	Else 
		If SORT = 4
			Print #CH_LPT;"ZONE ";S2$[19,20]
		Else
			IF SORT=5
				GOSUB GET_SLSM_NAME:
				PRINT #CH_LPT;"SALESMAN NUMBER ";SLS$[116,118];"  NAME: ";SLS$[1,30]
			ELSE
				Print #CH_LPT;""
			Endif
		End If 
	End If 
	If F9 = 9 Goto L_6000 ! entered by
	Print #CH_LPT; Tab 0;"ORDER #";
	Print #CH_LPT; Tab 10;"DATE";
	Print #CH_LPT; Tab 17;"CUST CODE / NAME";
	Print #CH_LPT; Tab 37;"PO NUMBER";
	Print #CH_LPT; Tab 56;"SHIP DATE";
	Print #CH_LPT; Tab 66;"SLSM";
	Print #CH_LPT; Tab 71;"ENTD";
	Print #CH_LPT; Tab 76;"WH";
	Print #CH_LPT; Tab 79;"TAX #";
	Print #CH_LPT; Tab 86;"TRUCK";
	Print #CH_LPT; Tab 93;"ZN";
	Print #CH_LPT; Tab 98;"STOP";
	Print #CH_LPT; Tab 107;"TOTAL AMOUNT";
	If COST_LEV[1]
		Print #CH_LPT; Tab 120;"TOTAL COST"
	Else 
		Print #CH_LPT;""
	End If 
	Print #CH_LPT; Tab 19;"BILL TO NAME";
	If COST_LEV[1]
	  if custom_customer$<>"JPAPER" ! std
		Print #CH_LPT; Tab 120;"TOTAL GP %"
	  Else
		PRINT #CH_LPT; TAB 120;"TOTAL GTM %"
	  Endif
	Else 
		Print #CH_LPT;" "
	End If 
	Print #CH_LPT;" "
	IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_HEAD:  
Endif
Return 
L_6000: Rem ========================== ENT'D BY HEADINGS
	LET CH_LPT=0
	LOOP_ENTERED_BY: !
	If Not(J8)
		Print #CH_LPT; Tab 5;"ENTERED BY";
		Print #CH_LPT; Tab 30;"# ORDERS"; Tab 41;"# LINES";
		Print #CH_LPT; Tab 50;"ORDER TOTALS";
		If COST_LEV[1]
		Print #CH_LPT; Tab 64;"ORDER TOTALS COST"
		Else 
		Print #CH_LPT;""
		End If 
	Endif
	IF CH_LPT=0 AND EMCH<>-1 AND SORT=2  LET CH_LPT=EMCH \ GOTO LOOP_ENTERED_BY:   
Return 


L_6700: Rem ========================== READ TEMP
Try ! DL4 - generates BE 52 until written!!?
	Mat Read #16,REC,0;T16;
Else
	for x=0 to 8 \ let t16[x]=0 \ next x
End try
Return 
L_6750: Rem ========================== WRITE TEMP
Mat Write #16,REC,0;T16;
Return 
L_6800: Rem ========================== BUILD TEMPORARY WORKFILE
TFLE$ = " ",TFLE$
TFLE$ = "[1000:72]6/REGTEMP"
TFLE$ = TFLE$,Spc(6) Using "&&&&"
tmp1$=TFle$[10]
TFLE$ = TFLE$,"!"
Build #16,TFLE$
Close #16
TFLE$ = TFLE$[10]
tmp$="chmod go+rw files/"+LCase$(tmp1$)+"*"
System tmp$
Open #16,TFLE$
Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!! as this is web based - THERE IS NO DIRECT INPUT!!
Return
!! no input on web!!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
YMD2JUL: Rem "
Errflag=0
If X2 <= 0 let errflag=1 \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errflag=1 \ Return 
X2 = X$[1,5]
Return ! "  1
L_7800: Rem ================ CLEAR THE SORT FILE
! Print @0,23;'CL';"CLEARING SORT FILE...";
K1$ = " ",K1$
L_7830: Search #9,3,1;K1$,R,E  \ If E > 2 Gosub ERR_SEARCH
If E Goto L_7870
Search #9,5,1;K1$,R,E  \ If E Gosub ERR_SEARCH
Goto L_7830
L_7870: ! Print @0,23;'CL';
Return 
L_8000: Rem ========================== CHANGE STATUS (bypass221 = report run first)
Try ! If Err 0 Rem
Close #0
Else ! If Err 0 Gosub ERR_TRAP
	Rem
End try
L_8040: ! Print @0,23;'CE';"   HAS THIS REGISTER PRINTED CORRECTLY? (Y/N) ";
!Input ""U5$
! we will be handling this with a Preview / Final Q
!If U5$ = "N" Return 
!If U5$ <> "Y" Goto L_8040
If AUDONLY Return ! not final run!
!If Err 0 Gosub ERR_TRAP
K1$ = " ",K1$
L_8110: Search #9,3,1;K1$,R1,E  \ If E > 2 Gosub ERR_SEARCH
If E Return 
If K1$[1,1] >= "{" Return 
Mat Read #2,R1,0;H0
Gosub L_3500
Goto L_8110
L_8300: Rem ========================== SORT THE ORDERS
!Print @0,23;'CL';"SORTING...";
SRT$ = " ",SRT$;K1$ = " ",K1$;K1$ = S7 Using "##     "
if indord let order[0]=0 ! to be sure
If ORDER[0] <> 0 Let K1$[3,8] = (ORDER[0] - 1) Using "######"
K3$ = K1$
L_8340: Search #2,3,1;K1$,R1,E \ If E = 2 Return 
If E Gosub ERR_SEARCH
If K1$[1,2] <> K3$[1,2] Return 
Mat Read #2,R1,0;H0;
if not(indord)
  If ORDER[0] <> 0 Or ORDER[1] <> 999999
	If H0[7] < ORDER[0] Or H0[7] > ORDER[1] Goto L_8340
  End If 
Else ! individuals
	j4$=" ",j4$;j4$[1,2]="}:"
	j4$[3]=H0[7] USING "######"
	SEARCH #9,2,1;J4$,r,E
	if e goto L_8340 ! not selected
Endif
Mat Read #2,R1,78;H4;
Mat Read #2,R1,104;H5;
Mat Read #3,H0[2],8;S1$;
Read #3,H0[2],146;S5;
Mat Read #3,H0[2],126;S2$;
IF CUSTOM_CUSTOMER$="ACME"
	IF H5[7]=5 GOTO L_8340
	if h5[7]=9 goto L_8340 ! skip ship comp
ENDIF
If ZONE$ = "" Goto L_8405
KZONE$ = " ",KZONE$;KZONE$ = "}",S2$[19,20]
Search #9,2,1;KZONE$,R,E  \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8340
L_8405: if s5 < struck OR s5 > etruck goto L_8340
If TRUCK$ = "" Goto L_8410
KTRUCK$ = " ",KTRUCK$;KTRUCK$ = "{",S5 Using "######"
Search #9,2,1;KTRUCK$,R,E  \ If E > 2 Gosub ERR_SEARCH
If E Goto L_8340
L_8410: If WHSE If H4[2] <> WHSE Goto L_8340
If DIV If DIV <> H5[8] Goto L_8340
If (H5[7] = 21 Or H5[7] = 22) Goto L_8442
If EXDMATCH ! wants only those for date entered
	X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL \ If errflag=1 let X2 = 999999
	If X2 <> JDATE Goto L_8340
Endif
If PRINTALL Goto L_8442
S9[1] = S1$[118,118] \ If S9[1] = 3 Let S9[1] = 2
If S9[1] If S9[1] <> S9[0] Goto L_8340
If S9[1] = 0 If S9[0] = 2 Goto L_8340
If BYPASS221 If H5[7] = 11 Goto L_8340
L_8442: Mat Read #4,H0[3],8;T2
X4 = T2[21] \ For K = 0 To 11
  T9[K] = Sgn(Fra(X4 / 2)) \ X4 = Int(X4 / 2)
Next K
If BYPASS221 If T9[11] Goto L_8340
SRT$ = " ",SRT$
If SORT = 1 ! TRUCK/ZONE
  SRT$ = S5 Using "######"
  SRT$[7,8] = S2$[19,20]+"  " ! in case missing
  SRT$[9] = 9000 - H4[1] Using "####"
End If 
If SORT = 2 ! division/slsm
  SRT$ = H5[8] Using "###"
  SRT$[4] = H0[11] Using "###          "
End If 
If SORT = 3 Let SRT$[1,2] = H4[2] Using "##";SRT$[4,9] = H0[7] Using "######"
If SORT = 4 Let SRT$[1,2] = S2$[19,20]+"  " ! in case missing
If len(Srt$)<12 let srt$=srt$+Blank$ ! FILL IT TO 12 min
SRT$[13] = K1$[1,8]
IF SORT=5 ! slsm/cust name/order#
	LET SRT$=H0[11] USING "###"
	GOSUB L_3000: ! get customer name
	LET SRT$[4,33]=C1$[1,30]
	LET SRT$[34,39]=H0[7] USING "######"
ENDIF
Search #9,4,1;SRT$,R1,E
If E Gosub ERR_SEARCH
Goto L_8340
DO_ASN: Rem "send asn now?
SORDREC = R1
If Not(SORDREC) Return 
Let PChan[1]=1;PChan[5]=6;PChan[6]=8;PChan[7]=7;PChan[8]=2 ! "cnt,cust,ccode,prod,roh
Let PChan[9]=3;PChan[10]=4;PChan[11]=5;PChan[12]=14 ! "ros,rot,rol,rom
Let PChan[0]=2 ! " asn status (from) 2=ord reg
Let Scratch$="AFFASN"
Call FindF(Scratch$,X2)
IF x2 !AFFLINK ASN THERE
	if sw[0] ! afflink - 7/affcust opened
		J3$=" ",J3$
		J3$=H0[4] USING "######"
		SEARCH #17,2,1;J3$,R15,E
		IF NOT(E) !is an afflink customer
			call "AFFASN.DL4",SORDREC,pchan[],e$,IntCo,rstr$
		end if
	end if
end if
SCRATCH$ = "NSCASN.DL4"
Call FindF(SCRATCH$,X2)
If Not(X2) Return 
Gosub L_3000
If A1$[142,142] <> "Y" Return 
PCHAN[1] = 1;PCHAN[5] = 6;PCHAN[6] = 8;PCHAN[8] = 2
PCHAN[9] = 3;PCHAN[10] = 4;PCHAN[11] = 5;PCHAN[12] = 14
PCHAN[0] = 2
Call "NSCASN.DL4",SORDREC,PCHAN[],e$,IntCo,rstr$
If PCHAN[0] = 0 ! "sent successfully
End If 
Return 

L_9100: Rem ========================== END OF THIS RANGE
Gosub L_4000 \ Gosub L_4200
!If V8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If BYPASS221 And S7 = S1 Gosub L_8000
TMP$="Register Complete! ok"
!Call SetOutput(e$,rstr$,1,tmp$) ! send ok and message
!call programdump("/tmp/orlog8!","")
Goto OUTEND
! End 
L_10000: Rem =========================================== screen
!Print 'CS'
!Print @0,0;"MX204A";@33,0;"ORDER REGISTER"
!Print @1,3;"1. IS THIS A REPRINT? (Y/N) "
!Print @1,5;"2. PRINT FULL DETAIL OR SUMMARY? (D/S) "
!Print @1,7;"3. ENTER DIVISION TO PRINT, <CR> FOR ALL "
!Print @1,9;"4. ENTER FIRST TRUCK TO PRINT, '-' FOR RANGE, <CR> FOR ALL "
!Print @1,11;"5. ENTER FIRST ZONE TO PRINT, '-' FOR RANGE, <CR> FOR ALL "
!Print @1,13;"6. INCLUDE ALL PICKING TICKETS? (Y/N) " ! add 1:on pklist 2:not on pklist
!Print @1,17;"8. INCLUDE ENTERED BY TOTALS PAGE? (Y/N) "
!Print @1,18;"9. SORT BY (O)RDER, (T)RUCK/ZONE, (D)IV/SLSM, (W)HSE, (Z)ONE? "
!Print @0,19;"10. ENTER WAREHOUSE TO PRINT, <CR>=ALL "
!Print @0,20;"11. ENTER RANGE OF ORDERS "
! New question - Preview Print or Final Run
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !If Spc(4) > 1280 Goto L_20120
!
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG  \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If LT[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
WHSE_BREAK: Rem -----------------------------------------------------
If Not(J8)
	Print #0;""
	Print #0; Using "###"; Tab (75);"WAREHOUSE";CWHSE;" TOTALS";
	Print #0; Using "-------#.##"; Tab (108);SLSMTOT;
	If COST_LEV[1]
	  Print #0; Using "-------#.##"; Tab 120;SLSMTOTCOST
	Else 
	  Print #0;""
	End If 
	Print #0;""
Endif
SLSMTOT = 0;SLSMTOTCOST = 0
If SORT
  V1 = 90
  Gosub L_5800
End If 
Return 

SLSM_BREAK: Rem -----------------------------------------------------
	LET CH_LPT=0
	LOOP_SLSM_BREAK: !
	If Not(J8)
		Print #CH_LPT;""
		Print #CH_LPT; Using "SALESMAN ### TOTALS"; Tab (80);OSLSM;
		Print #CH_LPT; Using "-------#.##"; Tab (108);SLSMTOT;
		If COST_LEV[1]
			Print #CH_LPT; Using "-------#.##"; Tab 120;SLSMTOTCOST
		Else 
			Print #CH_LPT;""
		End If 
		Print #CH_LPT;""
	Endif
	IF CH_LPT=0 AND EMCH<>-1 LET CH_LPT=EMCH \ GOTO LOOP_SLSM_BREAK:
	SLSMTOT = 0;SLSMTOTCOST = 0
Return 
ZONE_BREAK: Rem -----------------------------------------------------
If Not(J8)
	Print #0;""
	Print #0; Tab (75);"ZONE ";CZONE$;" TOTALS";
	Print #0; Using "-------#.##"; Tab (108);SLSMTOT;
	If COST_LEV[1]
	  Print #0; Using "-------#.##"; Tab 120;SLSMTOTCOST
	Else 
	  Print #0;""
	End If 
	Print #0;""
Endif
SLSMTOT = 0;SLSMTOTCOST = 0
If SORT
  V1 = 90
  Gosub L_5800
End If 
Return 

GET_SLSM_NAME: !need salesman name for sort 5 report
LET SM$=" ",SM$ \ LET SM$=H0[11] USING "###"
SEARCH #15,2,1;SM$,SMREC,E
IF E RETURN
MAT READ #15,SMREC,0;SLS$;
RETURN

Get_Slsm: !========================================================SLSM
	Let K15$=" ",K15$;K15$=H0[11] USING "###"
	SEARCH #15,2,1;K15$,R15,E \ IF E>1 GOSUB Err_Search:
	If e 
		slsEmail$=""
	Else
		mat  read #15,r15,922;slsEmail$;
	Endif
	IF needOpenEmCh Gosub OpenEmailChan:  
Return


!*-----
!* should we email a copy to each sales rep if possible?
!* sets emailRep to 1 if okey dokey
!*-----
EmailSalesCopy: !====================================================
	emailRep=0
	emCh=-1 !* channel for email pipe - show none
	e$=""
	call DxGet("E_SREP", tmp$) \ i = tmp$
	if not(i) return ! not emailing report
	if P61$[30,30]<>"Y"
		E$ = "Email report option not enabled, cannot email to salesreps!"
		return !* no email reports option - required!
	end if
	if Sort<>2
		e$ = "Not sort by salesrep, cannot email to salesreps!"
		return          !* not requesting sales rep copy
	end if
	!*
	!* if user don't wanna email it, don't go any further
	!*
	URec=GetUIDRec(e$,IntCo,Userid$)
	uc_ch = openfile(-9988, intCo) \ if uc_ch = -1 error 42
	Read #uc_ch,uRec,212;EMAILFROM$;
	Close #uc_ch
	Call "mxvaleaddr.dl4",EMAILFROM$,X1,e$
	If Not(X1) Or EMAILFROM$ = ""
		e$ = "Your email address is invalid in user setup, cannot email sales rep journal!"
		return
	End If
	e$ = ""
	emailRep=1
return

!*-----
!* open email channel based for sales rep
!* sets emCH to -1 if not done, not -1 if done
!*-----
OpenEmailChan: !=======================================================
	if emCh<>-1
		close #emCh
		emCh=-1
	endif
	if sort<>2 or not(emailRep) return
	call "mxvaleaddr.dl4",slsEmail$,x1,e$
	if not(x1) or slsEmail$="" return
	!* everything OK - lets rock!
	sys$="$/usr/ub/sys/email.report -f ''",emailFrom$,"'' -t ''",slsEmail$,"''"
	sys$=sys$," -s ''","Order Register (204)","''"
	sys$=sys$," -c ''","Attached is your order register (204).","''"
	chan=99 \ call "utchan5",chan
	signaL 2,x1,chan,e \ if e gosub Err_Search: !* blow out if error
	emCh=chan
	open #emCh,sys$
return


ISERRMSG: X1 = Len(J7$)
Return
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
E$=msg$
Call programdump("tmp/or204ase!","")
Goto Err_Msg 
Return ! End
ERR_MSG: ! send message
ReturnStatus=0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
GOTO l_9010 ! End
OUTEND: Rem ========================== EXIT PROGRAM
Try ! If Err 0 Rem
	Kill ORIP$
Else
	Rem
End try
Mat Read #1,120;P0
P0[204] = 0
Mat Write #1,120;P0;
message$="do an unlock"
call "proglock.dl4","204",0,message$
!If Err 0 Goto L_9005
Try
	TFLE$[Len(TFLE$)] = ""
	Close #16 
	Kill TFLE$
Else
	Rem
End Try
!If Err 0 Rem
!Window Close
If j8 ! dx xml (TO BROWSER NOT POSSIBLE - LET IT GET ERROR?)
	tmp$="CANNOT RUN TO BROWSER - NO UPDATE PERFORMED!!!!!!"
	call addtostr(e$,rstr$,tmp$+rdel$)
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  !External Lib "libgeneral.lib"
  !Declare External Sub XMLtoExcel
  !Call XMLtoExcel(e$,"204a.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 

!	For X=0 to 90
!		Try	Close #X Else	Rem
!		!End try
!	Next X

L_9005: !If Err 0 Gosub ERR_TRAP
! we have the choice of send messages or off to next part - SHOW MESSAGES!
!Call getglobals("blockx",0,blockid$)
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
! needs to restart rstr$??
! If blockid$ = "204a" or blockid$="204a1"
!	Nextblockid$="999" ! sebd 'em back to biginning?
!	call env(2,"NEXTBLOCK","999") !  nextblockid$)
!	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
!	End
! Endif
!Print 'CS';
!Chain "MX000C"
!Stop 
L_9010: ! no run
!call programdump("/tmp/orlog7!","")
! try Call dxclose() else rem
!End
Else
Rem {begin rtn.error.s}
!
include "src/callsuberr.inc"
end try
End sub ! L_1900
!------------------------------------------------------------------------------
Sub L_1240()
! see if any to register
 Try
	dim f$[60]
	F$ = " 2";Chan=2
	Search #Chan,3,1;F$,V1,E
	! Close #Chan
	If E>2 gosub err_search2
	If E Goto L_1320 ! " = 2 Goto L_1320
	!If E Gosub ERR_SEARCH
	If F$[1,2] = " 2" goto CODone ! Return 1
	If F$[1,2] = " 3" goto CODone ! Return 1
	L_1320: Message$="NO ORDERS TO BE REGISTERED "
	Returnstatus=0
	goto CODone
	ERR_SEARCH2: Rem
	ENUM = E ;ELINE = Spc(16);CTERR = 0
	If E = 5 Let CTERR = Err(8)
	msg$ = "RETURN STATUS",(E + (CTERR * .001))
	msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
	E$=msg$
	Call programdump("tmp/or204ase!","")
	Goto Err_Msg2 
	Return ! End
	ERR_MSG2: ! send message
	ReturnStatus= 0 ! no good (ONLY DISPLAYS IF =1 ??)
	Message$=E$
	
	CODone: ! finished
 Else
Rem {begin rtn.error.s}
!
include "src/callsuberr.inc"
end try
End sub ! L_1240
!------------------------------------------------------------------------------
Sub ChkPFlag()
! check program flags
 Try
	dim 1%,reset_count,3%
	Dim Usr$[40]
	L_490: Rem TEST PRINTER FLAG
	!Call "getuidrec",R[99]
	R[99]=GetUIDRec(e$,IntCo,Userid$)
	reset_count = 0
	Mat Read #1,120;P0;
	If P0[204] <> 0 Goto L_580
	If P0[205] <> 0 Goto L_590

	Goto CPFDone ! Return 1
	L_570: Rem Print
	R = P0[203]
	!Call "getuidinfo",R,USR$
	Usr$=GetUIDInfo$(e$,IntCo,R)
	Message$="ORDERS BEING PRINTED BY USER "+USR$[21]
	Goto L_600
	L_580: Rem register
	if not(reset_count) ! txc added
		Call "flagreset","SERP204.DL4",e
		reset_count=1
		if e=1 goto L_490:  ! reset worked
	endif
	R = P0[204]
	!Call "getuidinfo",R,USR$
	Usr$=GetUIDInfo$(e$,IntCo,R)
	Message$="ORDERS BEING REGISTERED BY USER "+USR$[21]
	Goto L_600
	L_590: Rem accept
	R = P0[205]
	!Call "getuidinfo",R,USR$
	Usr$=GetUIDInfo$(e$,IntCo,R)
	Message$="ORDERS BEING ACCEPTED BY USER "+USR$[21]
	L_600: ! Return ! Signal 3,30 \ Return 
	L_610: Rem OUT
	Returnstatus=0
	Message$=Message$+" ORDER REGISTER ABORTED -- NOT RUN"
	CPFDone: ! finished
 Else
Rem {begin rtn.error.s}
!
include "src/callsuberr.inc"
end try
End sub ! ChkPFlag
!------------------------------------------------------------------------------
Sub ChkORIP()
! see if ip file
  Try
	dim OAIP$[40],MESS$[256],USR$[40]
	OAIP$ = "cntrl/oaip" + Str$(COID)
	R[99]=GetUIDRec(e$,IntCo,Userid$)
	!call programdump("/tmp/oralog1!","")
	E = 0 \ Call FindF(OAIP$,E)
	If E ! found one
	  Message$="ORDER ACCEPT IN PROCESS DETECTED! CANNOT RE-START."
	  SCRATCH$ = OAIP$
	  USERPORTINFO[1] = 205
	  !System "cat " + OAIP$
	  Gosub MESSAGE
	  Goto CHKIPFAIL
	End If 
	reset_count = 0
chkorip1: E = 0 \ Call FindF(ORIP$,E)
	If E
		if not(reset_count) ! txc added
			Call "flagreset","SERP204.DL4",e
			reset_count=1
			if e=1 goto chkorip1:  ! reset worked
		endif
	  Message$="ORDER REGISTER IN PROCESS DETECTED! CANNOT RE-START."
	  SCRATCH$ = ORIP$
	  !System "cat " + ORIP$
	  Gosub MESSAGE
	  Goto CHKIPFAIL
	End If 
	Goto CHKIPDone
	CHKIPFAIL: ! failed
	Returnstatus=0
	goto chkipdone

	MESSAGE: Rem ADD INFO ON ACCEPT BOMB IF IT COULD BE IN PROGRESS
	Chan=Findchannel()
	Open #Chan,SCRATCH$
	MESS1: Read #Chan;MESS$;
	If MESS$ = "" Close #Chan \ Return 
	If MESS$[1,4] <> "user" Goto MESS1
	Close #Chan
	For K1 = 6 To 22
	  If MESS$[K1,K1 + 2] = "SPC" Goto MESS2
	Next K1
	Return 
	MESS2: R = MESS$[6,K1 - 1]
	USR$ = " ",USR$
	Chan=Findchannel()
	Ropen #Chan,"cntrl/USERCNTRL"
	If R > 0 If R < Chf(Chan) Read #Chan,R[0],280;USR$; ! user desc
	If R = -1 Let USR$ = "SYSTEM ADMINSTRATOR"
	Close #Chan
	Message$=Message$+" *******************************************"
	!Print "NOTE: SOMEONE MAY CURRENTLY BE RUNNING THE ";
	!If USERPORTINFO[1] = 204 Print "ORDER REGISTER. "
	!If USERPORTINFO[1] = 205 Print "ORDER ACCEPT. "
	K1 = 20 \ If USR$[16,20] = "     " Let K1 = 15 \ If USR$[11,15] = "     " Let K1 = 10
	Message$=Message$+" PLEASE CHECK " \ If USR$[1,5] <> "     " Message$=Message$+"WITH "+USR$[1,K1]
	Message$=Message$+" TO SEE IF THIS IS TRUE."
	!Print "IF THIS IS THE CASE, AND THERE HAVE BEEN NO ERRORS ON THE OTHER PORT,"
	!Print "PLEASE WAIT UNTIL THEY ARE FINISHED. THEN YOU CAN RUN THIS JOURNAL AGAIN."
	Message$=Message$+" IF THERE IS A PROBLEM, PLEASE CONTACT UNIVERSAL."
	Return

	CHKIPDone: ! finished
 Else
Rem {begin rtn.error.s}
!
include "src/callsuberr.inc"
end try
End sub ! ChkORIP
!------------------------------------------------------------------------------
Sub GetTrkList()
  Try
	clear List_Truck$[]
	List_truck$[0]=bsdel$,"TRUCKLIST",fdel$
	List_truck$[1]="TRUCK",fdel$
	row=2
	tmpcnt=maxcnt
	Call DXGet("SHIPDATE",tmp$)
	tmp$=chkDteFrmt$(e$,tmp$)
	If Trim$(tmp$)="" 
		let tmp1$=ARDate$[7,8],ardate$[1,2],ardate$[4,5]
		SELALL=1
	Else
		tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy to yyyymmdd
		J4$=tmp1$[3,8]
		tmp1$=J4$
		SELALL=0
	Endif
	tmp$ = tmp1$ ! [5,6],tmp1$[1,2],tmp1$[3,4] ! from yymmdd
	!call programdump("/tmp/orlog1!","")
	  J1 = tmp$
	  if J1<=0 let selall=1;j1=curdate
	X2 = J1 \ Gosub YMD2JUL2 \ If errFlag = 1 Let e$ = "Invalid date!" \ Goto Err_Msg3  !!!CONVERT YYMMDD TO JULIAN
	JDATE = X2
	X2 = J1 !\ Gosub L_7700 ! x2 to mm/dd/yy
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
	! Gosub L_6900 ! get day of week
	Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
	If Z1 < 85 Let Z1 = Z1 + 100
	Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
	Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
	J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
	X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],""
	D8 = J1
	!Print @36,2;X$;
	F = Z9 + 1 \ If F < 1 or F > 7 Let e$ = "Invalid date!!" \ Goto Err_Msg3 
	Call DXGET("DIV",tmp$) ! DIVISION
	J$=TRIM$(tmp$)
	if sw[1] ! selwhdivflag<>0
		if rtrim$(tmp$)=""
			e$="No Division Selected to Print" \ goto Err_Msg3 ! let's stop 'em
		endif
	endif
	let div=j$
		!Let DIV = 0 Else Let DIV = J$
	
	Call DXGet("WHSE",tmp$)
	if sw[1] ! selwhdivflag<>0
		if rtrim$(tmp$)=""
			e$="No Warehouse Selected to Print" \ goto Err_Msg3 ! let's stop 'em
		endif
	endif
	Let j1=Tmp$
	If J1 < 0 Or J1 > 99 Or Fra(J1) Let J1=0 ! Goto L_1400
	WHSE = J1
		K1$ = " ",K1$
	L_6240: Rem " thru File
	If P61$[34,34] <> "Y"
	  Search #11,3,1;K1$,R,E  \ If E > 2 Gosub ERR_SEARCH3
	  If E Goto L_6258
	  Mat Read #11,R,36;T2$; \ Mat Read #11,R,32;TRUCK;
	  if not(SELALL)
		If T2$[F,F] <> "Y" Goto L_6240
	  Endif
	Else 
	  Search #2,3,1;K1$,R,E \ If E = 2 Goto L_6258
	  If E Gosub ERR_SEARCH3
	  X2 = K1$[1,2] \ If X2 > 3 Goto L_6258
	  Mat Read #2,R,0;H0;
	  Mat Read #2,R,78;H4;
	  Mat Read #2,R,104;H5;
	  Read #3,H0[2],146;S5;
	  Mat Read #3,H0[2],126;S2$;
	  IF CUSTOM_CUSTOMER$="ACME"
		if H5[7]=5 GOTO L_6240
		if H5[7]=9 GOTO L_6240
	  ENDIF
	  If WHSE If H4[2] <> WHSE Goto L_6240
	  If DIV If DIV <> H5[8] Goto L_6240
	  If (H5[7] = 21 Or H5[7] = 22) Goto L_6240
	  If Not(SELALL) ! for a date
		  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL2 \ If errFlag = 1 Let X2 = 999999 !!!!
		  If X2 > JDATE Goto L_6240
	  Endif
	  TRUCK = S5
	End If 
	Rem INSERT SELECTED TRUCK INTO SORTFILE
	J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	Search #9,4,1;J4$,R,E \ If E > 1 Gosub ERR_SEARCH3
	
	Goto L_6240 ! Return 
	L_6258: Rem ============ Count THE TRUCKS THAT SHIP
	!Print @0,1;'CE';"THE FOLLOWING TRUCKS SHIP ON";X$[9]
	
	K1$ = "{" \ TruckCnt=0
	TC_Loop: !For I = 6 To 20
	  Search #9,3,1;K1$,R,E \ If E > 2 Gosub ERR_SEARCH3
	  If E Goto RTLDone ! L_6282
	  If K1$[1,1] <> "{" Goto RTLDone ! L_6282
	List_truck$[row]=trim$(K1$[2]),fdel$
	row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List_Truck$[])
	!  LIST_TRUCK$[TRUCKCNT] = trim$(K1$[2])
	!	TRUCKCNT = TRUCKCNT + 1
	  !Print @X,I - 2;K1$[2];
	  !If I = 20 Let X = X + 10
	  !If X > 75 Goto L_6282
	  !If I = 20 Let I = 5
	Goto TC_Loop !Next I
	RTLDone: ! 
	LIST_Truck$[row]=esdel$
	goto GTRDone
	YMD2JUL2: Rem "
	Errflag=0
	If X2 <= 0 let errflag=1 \ Return 
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E) \ If E let errflag=1 \ Return 
	X2 = X$[1,5]
	Return ! "  1

	ERR_SEARCH3: Rem
	ENUM = E ;ELINE = Spc(16);CTERR = 0
	If E = 5 Let CTERR = Err(8)
	msg$ = "RETURN STATUS",(E + (CTERR * .001))
	msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
	E$=msg$
	Call programdump("tmp/or204ase!","")
	Goto Err_Msg3 
	Return ! End
	ERR_MSG3: ! send message
	ReturnStatus=0 ! no good (ONLY DISPLAYS IF =1 ??)
	Message$=E$
	!	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	!	  call AddToStr(e$,rstr$,WebStr$)
	!	  call SetOutPut(e$,rstr$)
	! End
	GTRDONE: ! finished
 Else
Rem {begin rtn.error.s}
!
include "src/callsuberr.inc"
end try
End sub ! GetTrkList
!------------------------------------------------------------------------------
Sub GetZNList()
  Try
	clear SZone$[]
	SZone$[0]=bsdel$,"ZONELIST",fdel$
	SZone$[1]="ZONE",fdel$
	row=2
	Call DXGet("SHIPDATE",tmp$)
	tmp$=chkDteFrmt$(e$,tmp$)
	If Trim$(tmp$)="" 
		let tmp1$=ARDate$[7,8],ardate$[1,2],ardate$[4,5]
		SELALL=1
	Else
		tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy to yyyymmdd
		J4$=tmp1$[3,8]
		tmp1$=J4$
		SELALL=0
	Endif
	tmp$ = tmp1$ ! [5,6],tmp1$[1,2],tmp1$[3,4] ! from yymmdd
	!call programdump("/tmp/orlog1!","")
	  J1 = tmp$
	  if J1<=0 let SELALL=1;j1=curdate
	X2 = J1 \ Gosub YMD2JUL3 \ If errFlag = 1 Let e$ = "Invalid date!" \ Goto Err_Msg4  !!!CONVERT YYMMDD TO JULIAN
	JDATE = X2
	X2 = J1 !\ Gosub L_7700 ! x2 to mm/dd/yy
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
	!Gosub L_6900 ! get day of week
	Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
	If Z1 < 85 Let Z1 = Z1 + 100
	Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
	Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
	J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
	X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],""
	D8 = J1
	!Print @36,2;X$;
	F = Z9 + 1 \ If F < 1 or F > 7 Let e$ = "Invalid date!!" \ Goto Err_Msg4 
	Call DXGET("DIV",tmp$) ! DIVISION
	!if rtrim$(tmp$)=""
	!	returnstatus=0
	!	message$="No Division Selected to Print" ! \ goto Err_Msg4 ! let's stop 'em
	!endif
	J$=TRIM$(tmp$)
	If J$ = "" Let DIV = 0 Else Let DIV = J$
	Call DXGet("WHSE",tmp$)
	!if rtrim$(tmp$)=""
	!	returnstatus=0	
	!	message$="No Warehouse Selected to Print" !\ goto Err_Msg4 ! let's stop 'em
	!endif
	Let j1=Tmp$
	If J1 < 0 Or J1 > 99 Or Fra(J1) Let J1=0 ! Goto L_1400
	WHSE = J1
	K1$ = " ",K1$
	L_6410: Rem "thru File
	If P61$[34,34] <> "Y"
	  Search #11,3,1;K1$,R,E  \ If E > 2 Gosub ERR_SEARCH4
	  If E Goto L_6455
	  Mat Read #11,R,36;T2$;
	  if not(SELALL)
		If T2$[F,F] <> "Y" Goto L_6410
	  Endif
	  CZONE$ = K1$
	Else 
	  Search #2,3,1;K1$,R,E \ If E = 2 Goto L_6455
	  If E Gosub ERR_SEARCH4
	  X2 = K1$[1,2] \ If X2 > 3 Goto L_6455
	  Mat Read #2,R,0;H0;
	  Mat Read #2,R,78;H4;
	  Mat Read #2,R,104;H5;
	  Read #3,H0[2],146;S5;
	  Mat Read #3,H0[2],126;S2$;
	  IF CUSTOM_CUSTOMER$="ACME"
		IF H5[7]=5 GOTO L_6410
		if H5[7]=9 GOTO L_6410
	  ENDIF
	  If WHSE If H4[2] <> WHSE Goto L_6410
	  If DIV If DIV <> H5[8] Goto L_6410
	  If (H5[7] = 21 Or H5[7] = 22) Goto L_6410
	  If Not(SELALL)
		  X2 = H0[10] \ If X2 <> 999999 Gosub YMD2JUL3 \ If errflag=1 let X2 = 999999
		  If X2 > JDATE Goto L_6410
	  Endif
	  CZONE$ = S2$[19,20]
	End If 
	Rem INSERT SELECTED ZONE INTO SORTFILE
	J4$ = " ",J4$ \ J4$ = "}",CZONE$
	Search #9,4,1;J4$,R,E  \ If E > 1 Gosub ERR_SEARCH4
	
	Goto L_6410 ! Return 
	L_6455: Rem ============ Count THE ZONES THAT SHIP
	!Print @0,1;'CE';"THE FOLLOWING ZONES SHIP ON";X$[9]
	
	K1$ = "}" \ ZONECNT = 0
	ZC_Loop: ! For I = 6 To 20
	  Search #9,3,1;K1$,R,E  \ If E > 2 Gosub ERR_SEARCH4
	  If E Goto RZLDone ! L_6515
	  If K1$[1,1] <> "}" goto RZLDone ! Goto L_6515
	SZone$[row]=trim$(K1$[2]),fdel$ ! CZone$
	row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,SZone$[])
	!  SZONE$[ZONECNT] = trim$(K1$[2])
	!	ZONECNT = ZONECNT + 1
	  !Print @X,I - 2;K1$[2];
	  !If I = 20 Let X = X + 10
	  !If X > 75 Goto L_6515
	  !If I = 20 Let I = 5
	Goto ZC_Loop ! Next I
	RZLDone: ! 
	SZone$[row]=esdel$
	goto GZNDONE

	YMD2JUL3: Rem "
	Errflag=0
	If X2 <= 0 let errflag=1 \ Return 
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E) \ If E let errflag=1 \ Return 
	X2 = X$[1,5]
	Return ! "  1

	ERR_SEARCH4: Rem
	ENUM = E ;ELINE = Spc(16);CTERR = 0
	If E = 5 Let CTERR = Err(8)
	msg$ = "RETURN STATUS",(E + (CTERR * .001))
	msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
	E$=msg$
	Call programdump("tmp/or204ase!","")
	Goto Err_Msg4 
	Return ! End
	ERR_MSG4: ! send message
	ReturnStatus=0 ! no good (ONLY DISPLAYS IF =1 ??)
	Message$=E$
	!	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	!	  call AddToStr(e$,rstr$,WebStr$)
	!	  call SetOutPut(e$,rstr$)
	!End
	GZNDone: ! finished
 Else
Rem {begin rtn.error.s}
!
include "src/callsuberr.inc"
end try
End sub ! GetZNList
!------------------------------------------------------------------------------