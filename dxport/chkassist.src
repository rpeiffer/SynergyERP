! --- chkassist.dl4
!
! Check to see if the assistant is defined and if it is running
!
! loadsave -w -n 100,10 -o prog/dxport/chkassist.dl4 src/chkassist.src
!
! This program, by definition, has to rely on running a unibasic
! program for the account we want to test.  This is facilitated
! through "execubprog.sh" script.
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus

! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile

Declare Intrinsic Function findchannel

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try

dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[255],list$[maxcnt,100],scratch$[100],spaces$[100]
spaces$=" ",spaces$
dim message$[150],webstr$[200]

Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

mychan = findchannel()
Open #mychan,"/usr/ub/bin/execubprog.sh chkassist" As "Bidirectional pipe command"
For x = 1 To 50
	Read #mychan,-1,-1,100;tmp$ ! 10 second timeout
	If tmp$[1,17] = "chkassist_status|" Let x = 100
Next x
Close #mychan
If tmp$[1,17] = "chkassist_status|"
	Message$=tmp$[18,len(tmp$)-1]
	ReturnStatus=1
else
	Message$="Error checking assistant status!"
	ReturnStatus=0
end if
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
OUTEND: Rem EXIT ROUTINE
call setoutput(e$,rstr$)
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end
