! --- serp938.dl4
! Inventory Class program converted from ut938
!
! 1.0 10/26/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp938.dl4 src/serp938.src
!
! From the original code:
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG  4, 2005  08:55:17
Rem /w2/papermaster/r2005//usr/acct/valerie/work/r2005/ut/ut938.src (univ2) [valerie] {38147}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem UT938 CLASSIFICATION BREAKDOWN
Rem AUTHOR D DEVITO
Rem 07/07/92
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
! COMBINE 2 TABLES: CLASS 1 AND CLASS 2
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"
!
Declare Intrinsic Sub InpBuf,String
! Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
Declare External Function openfile
!Declare External Function openfile,pdate$,jdate$,Formatdate2$

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[3200],tmp2$[500],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen() ! done in fmmenu
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

Dim 1%,J9[2],ch_cntrl,Ct[5],countFreq[11]
Dim 2%,CLASS[12],UDC[24],hD[2]
Dim 3%,J
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J5$[75],J7$[75],J9$[75]
Dim X$[10],P9$[50],U5$[50],J4$[50]

!
! control file is open read only - need to open it r/w
!
close #1 ! getsession opens the cntrl file as read only, need write access.
CH_CNTRL = openfile(9999,intCO)
mat read #ch_cntrl,70,52;ct;
if ct[0]<0 or ct[0]>3 or fra(ct[0]) let ct[0]=0 ! valid data check
if ct[1]<0 or ct[1]>3 or fra(ct[1]) let ct[1]=0
if ct[2]<0 or ct[2]>900 or fra(ct[2]) let ct[2]=180
if ct[3]<0 or ct[3]>900 or fra(ct[3]) let ct[3]=180
IF CT[4]<>1 LET CT[4]=0
IF CT[5]<>1 LET CT[5]=0

tablno=69
if action$="ICB2938" LET TABLNO=70 ! class 2
Mat Read #ch_cntrl,TABLNO,0;CLASS;
Mat Read #ch_cntrl,TABLNO,64;UDC;
if TABLNO=69 let Hd[0]=ct[0];hd[1]=ct[2];HD[2]=CT[4] ! method/days
if TABLNO=70 let hd[0]=ct[1];hd[1]=ct[3];HD[2]=CT[5]
if tablno=70 mat read #ch_cntrl,tablno,160;countFreq;
!
! call dxsave(0,"tmp/938in.txt!")
! GETTING the table
!
if action1$ = "GETDATA"
	gosub LoadData
	Message$=""
	goto OutEnd:
!
! Set data to defaults - don't write out until submit
!
else if action1$ = "DEFAULTS"
	gosub DefaultData
	Message$=""
	goto OutEnd:
!
! SUBMITTING DATA
!
else if action1$ = "SUBMITDATA"
	gosub UnloadDataAndUpdate
	! section x - status
	Message$="Record updated."
	goto OutEnd:
!
! UNKNOWN ACTION
!
else
	e$ = "Unknown action1: "+action1$ \ error 10000
end if


! ***********************************************************************
! Nobody but us subroutines and exit code down here
! ***********************************************************************

!----------------------------------------------------------------------------
! build initial drop list of existing warehouses
!----------------------------------------------------------------------------
LoadData: !
	tmp$=bsdel$+"DeadStock"+fdel$+rdel$
	tmp$=tmp$+"DeadStock"+fdel$+"Method"+fdel$+"MinDays"+fdel$+"RankType"+fdel$
	tmp$=tmp$+rdel$
	tmp$=tmp$+str$(class[0])+fdel$+Str$(hd[0]+1)+fdel$+Str$(hd[1])+fdel$+Str$(hd[2])+fdel$
	tmp$=tmp$+rdel$+esdel$
	call addToStr(e$,rstr$,tmp$)
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	tmp$=tmp$+"ClassPercent"+fdel$+"UnusualHigh"+fdel$+"UnusualLow"+fdel$
	if tablno = 70 tmp$=tmp$+"CountFreq"+fdel$
	tmp$=tmp$+rdel$
	call addToStr(e$,rstr$,tmp$)
	For I = 1 To 12
		FLD = (2 * (I - 1))
		tmp$=str$(class[I])+fdel$+str$(UDC[FLD])+fdel$+str$(UDC[FLD+1])+fdel$
		if tablno = 70 tmp$ = tmp$+str$(countFreq[i-1])+fdel$
		call addToStr(e$,rstr$,tmp$+rdel$)
	Next I
	call addToStr(e$,rstr$,esdel$)
	! add - method droplist
	tmp$=bsdel$+"MethodList"+fdel$+rdel$
	tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
	tmp$=tmp$+"1"+fdel$+"1 Cost"+fdel$+rdel$
	tmp$=tmp$+"2"+fdel$+"2 Sales"+fdel$+rdel$
	tmp$=tmp$+"3"+fdel$+"3 Profit"+fdel$+rdel$
	tmp$=tmp$+"4"+fdel$+"4 HITS"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	call addToStr(e$,rstr$,esdel$)
	! add - method droplist
	tmp$=bsdel$+"RankTypeList"+fdel$+rdel$
	tmp$=tmp$+"RID"+fdel$+"RDesc"+fdel$+rdel$
	tmp$=tmp$+"0"+fdel$+"0 Item Count"+fdel$+rdel$
	tmp$=tmp$+"1"+fdel$+"1 Method Total"+fdel$+rdel$
	call addToStr(e$,rstr$,tmp$)
	call addToStr(e$,rstr$,esdel$)
Return

!----------------------------------------------------------------------------
! set data to the defaults and resend
!----------------------------------------------------------------------------
DefaultData: !
	hd[0]=0;hd[1]=180 ! method/days
	hd[2]=0
	CLASS[0] = 10;UDC[0] = 100;UDC[1] = 50
	UDC[2] = 200;UDC[3] = 25
	UDC[4] = 300;UDC[5] = 25
	CLASS[1] = 7.5;CLASS[2] = 7.5
	CLASS[3] = 10;CLASS[4] = 10
	UDC[6] = 300;UDC[7] = 25
	UDC[8] = 300;UDC[7] = 25
	CLASS[12] = 9;UDC[22] = 1000;UDC[23] = 0
	For I = 5 To 11
		FLD = (2 * (I - 1))
		CLASS[I] = 8;UDC[FLD] = 800;UDC[FLD + 1] = 0
	Next I
	clear countFreq[]
	gosub LoadData
Return

!----------------------------------------------------------------------------
! unload and write
!----------------------------------------------------------------------------
UnloadDataAndUpdate: !
	call dxget("DeadStock", tmp$) \ class[0]=tmp$
	call dxget("METHOD",tmp$) \ j1=tmp$
	if j1<1 or j1>4 or fra(j1)
		e$="Please select Method 1-4 only"
		error 10000
	endif
	hd[0]=j1-1 ! so back to 0-3
	call dxget("MinDays",tmp$) \ j1=tmp$
	if j1<0 or j1>900 or fra(j1)
		e$="Invalid Minimum Days"
		error 10000
	endif
	let hd[1]=j1
	call dxget("RankType",tmp$) \ j1=tmp$
	if j1<0 or j1>1 or fra(j1)
		e$="Please select Type 0 or 1 only"
		error 10000
	endif
	hd[2]=j1 ! so back to 0-3
	totused = 0
	! please notice that the names are now "LOW & "HIGHUNUSUAL" instead of "UNUSUALHIGH" & LOW"
	! because that is what is on the call sheets and is what the front end sends!!
	for i = 1 to 12
		FLD = (2 * (I - 1))
		call dxget("ClassPercent"+str$(i), tmp$) \ class[i]=tmp$
		totused = totused+class[i]
		call dxget("HighUnusual"+str$(i), tmp$) \ udc[fld] = tmp$
		call dxget("LowUnusual"+str$(i), tmp$) \ udc[fld+1] = tmp$
		if tablno = 70
			call dxget("CountFreq"+str$(i),tmp$) \ countFreq[i-1] = tmp$
		end if
		
	next i
	if totused <> 100
		e$ = "100% of products have to be assigned!"
		Error 10000
	end if
	if TABLNO=69 let ct[0]=hd[0];ct[2]=hd[1];ct[4]=hd[2] ! method/days
	if TABLNO=70 let ct[1]=hd[0];ct[3]=hd[1];ct[5]=hd[2]
	MAT WRITE #CH_CNTRL,70,52;CT;
	Mat Write #ch_cntrl,TABLNO,0;CLASS;
	Mat Write #ch_cntrl,TABLNO,64;UDC;
	if tablno=70 mat write #ch_cntrl,tablno,160;countFreq;
Return


! Gosub L_5000

! L_2000: Print @0,22;" ENTER #:field to edit,  D: defaults, <CR> exit  ";
! Input Len 16386;""U5$ \ Call String(1,U5$)
! If U5$ = "" Goto L_8000
! If U5$ = "D" Gosub L_6000 \ Gosub L_5000
! CL = U5$
! If Not(CL) Or CL > 13 Goto L_2000
! If CL = 1 Gosub L_2160 \ Goto L_2080
! Gosub L_2100
! L_2080: Gosub L_5000
! Goto L_2000

! L_2100: Rem CLASS Maint
! 	J0$ = CL + 6 Using "32000622##"
! 	FLD = (2 * (CL - 2))
! 	J5$ = CL - 1 Using "ENTER PERCENT OF ITEMS IN CLASS ## "
! 	J1 = CLASS[CL - 1]
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! 	Gosub L_7000
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! 	CLASS[CL - 1] = J1
! 	J0$ = CL + 6 Using "3000 440##"
! 	J5$ = "FOR CLASS " + Str$(CL - 1) + " Enter the High Unusual Usage Percent"
! 	J1 = UDC[FLD]
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! 	Gosub L_7000
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! 	UDC[FLD] = J1
! 	J0$ = CL + 6 Using "3000 450##"
! 	J5$ = "FOR CLASS " + Str$(CL - 1) + " Enter the Low Unusual Usage Percent"
! 	J1 = UDC[FLD + 1]
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! 	Gosub L_7000
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! 	UDC[FLD + 1] = J1
! Return
! 
! L_2160: Rem DEAD STOCK BREAKPOINT
! 	J0$ = "3200093204"
! 	J5$ = "ENTER ANNUAL DOLLAR AMOUNT FOR DEAD STOCK "
! 	J1 = CLASS[0]
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! 	Gosub L_7000
! 	If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! 	CLASS[0] = J1
! Return

! L_5000: Rem DISPLAY CLASS PRECENTS
! 	Print @0,0;'CS';
! 	Print @20,1;"INVENTORY CLASS BREAKDOWN"
! 	TOTUSED = 0
! 	Print Using "$$$,$$#.##";@4,4;"1> DEAD STOCK BREAKPOINT $ ";CLASS[0];
! 	Print @40,5;"UNUSUAL USAGE";@40,6;"HIGH";@51,6;"LOW"
! 	For X = 1 To 12
! 		FLD = (2 * (X - 1))
! 		Print Using "##>     CLASS ##  ###.## % ";@4,7 + X;X + 1;X;CLASS[X];
! 		Print Using "####%";@40,7 + X;UDC[FLD];@50,X + 7;UDC[FLD + 1]
! 		TOTUSED = TOTUSED + CLASS[X]
! 	Next X
! 	Print Using "PERCENT OPEN #######.## %";@50,4;TOTUSED - 100;
! Return

! L_6000: Rem SET DEFAULTS
! 	CLASS[0] = 10;UDC[0] = 100;UDC[1] = 50
! 	UDC[2] = 200;UDC[3] = 25
! 	UDC[4] = 300;UDC[5] = 25
! 	CLASS[1] = 7.5;CLASS[2] = 7.5
! 	CLASS[3] = 10;CLASS[4] = 10
! 	UDC[6] = 300;UDC[7] = 25
! 	UDC[8] = 300;UDC[7] = 25
! 	CLASS[12] = 9;UDC[22] = 1000;UDC[23] = 0
! 	For X1 = 5 To 11
! 		FLD = (2 * (X1 - 1))
! 		CLASS[X1] = 8;UDC[FLD] = 800;UDC[FLD + 1] = 0
! 	Next X1
! Return


! L_8000: Rem EXIT
! 	If TOTUSED - 100 <> 0
! 		Print @0,22;'CL RB';" 100 % OF PRODUCTS HAVE TO BE ASSIGNED "
! 		Signal 3,20
! 		Goto L_2000
! 	End If
! 	Mat Write #ch_cntrl,69,0;CLASS;
! 	Mat Write #ch_cntrl,69,64;UDC;
! 	Chain "MX000"
! Stop

OUTEND: Rem EXIT ROUTINE
ReturnStatus=1
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end