! badcchk
!
! loadsave -w -n 100,10 -o prog/dxport/badcchk.dl4 src/badcchk.src
!
Rem badcchk
Rem check / delete special characters from certain files
Rem you select file
Rem BEDIT Version: 2.3 OBJECT CODE     Created: MAY 23, 2012  12:46:07
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/badcchk.src (univ2) [jcs] {02370}
Rem  Copyright (c) 2012 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String

If Err 0 Gosub ERR_ESCAPE
Dim K1$[50],V$[264],C$[142],P$[156],SL$[142]
DIM SL1$[34],SL2$[120],SL3$[56],SL4$[60]
Dim WORK$[400],ANS$[10],F$[20],BLANK$[100]
Dim WRK1$[500]
Dim 1%,FLECHK[9],COID,CCLR,BADCHAR
Dim 3%,R[99]
COID = 1 ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
F$ = "cntrl/CNTRL" + Str$(COID)
Ropen #1,F$
BLANK$ = " ",BLANK$
Print 'CS ED';@0,0;"BADCCHK";@30,0;"CHECK FOR CONTROL CHARS"
Print @60,0;F$
Print @10,2;"CHECK PRODUCT FILE: Y";'ML';
Input Len 16384 + 1;""ANS$ \ If ANS$ = "" Let ANS$ = "Y"
FLECHK[1] = 0 \ If ANS$ = "Y" Let FLECHK[1] = 1
Print @10,3;"CHECK CUSTOMER FILE: Y";'ML';
Input Len 16384 + 1;""ANS$ \ If ANS$ = "" Let ANS$ = "Y"
FLECHK[2] = 0 \ If ANS$ = "Y" Let FLECHK[2] = 1
Print @10,4;"CHECK VENDOR FILE: Y";'ML';
Input Len 16384 + 1;""ANS$ \ If ANS$ = "" Let ANS$ = "Y"
FLECHK[3] = 0 \ If ANS$ = "Y" Let FLECHK[3] = 1
Print @10,5;"CHECK SHIPLIST FILE: Y";'ML';
INPUT LEN 16384+1;""ANS$ \ IF ANS$="" LET ANS$="Y"
FLECHK[4]=0 \ IF ANS$="Y" LET FLECHK[4]=1
DOWITH: Rem WHAT TO DO WITH CHARS
Print @0,18;"CHECK ONLY=C OR CHECK & CLEAR=R (C/R)  ";
Input Len 16384 + 1;""ANS$
CCLR = 0 \ If ANS$ = "R" Let CCLR = 1
WHATNXT: Rem ADD MORE FILES ABOVE
Print @0,20;" ENTER  ''X'' TO EXIT OR <CR> TO PROCEED  ";
Input Len 16384 + 1;""ANS$
If ANS$ = "X" Chain ""
If ANS$ <> "" Goto WHATNXT
Print @0,21;'CE';"CHECKING FILES, PLEASE WAIT..."
If FLECHK[1] ! PRODUCT
  NUMREC = 0;NUMFIX = 0
  Read #1,88,1792;F$
  Open #2,F$
  Print @0,22;'CL';"CHECKING PRODUCT"
  K1$ = " ",K1$
PFLE_LOOP: Rem LOOP ALL
  Search #2,3,1;K1$,R[2],E
  If E Goto PFDONE
  NUMREC = NUMREC + 1
  If Not(Fra(NUMREC / 100)) Print @35,22;'CL';NUMREC;K1$
  Mat Read #2,R[2],0;P$;
  WORK$ = P$[6]
  Gosub CHK4CHARS
  If BADCHAR
    Print @0,23;'CL';"FOUND CHARACTER IN: ";K1$
    P$[6] = WRK1$
  End If 
  If BADCHAR And CCLR ! CHECK/CLR - REWRITE
    Mat Write #2,R[2],0;P$;
    NUMFIX = NUMFIX + 1
  End If 
  Goto PFLE_LOOP
PFDONE: Rem FINISHED
  Print @40,2;'CL';"PRODUCT DONE. ";NUMFIX;" RECORDS ";
  if cclr print "FIXED" Else Print "FOUND"
  Close #2
End If 
If FLECHK[2] ! CUSTOMER
  NUMREC = 0;NUMFIX = 0
  Read #1,88,1808;F$
  Open #2,F$
  Print @0,22;'CL';"CHECKING CUSTOMER"
  K1$ = " ",K1$
CFLE_LOOP: Rem LOOP ALL
  Search #2,3,1;K1$,R[2],E
  If E Goto CFDONE
  NUMREC = NUMREC + 1
  If Not(Fra(NUMREC / 100)) Print @35,22;'CL';NUMREC;K1$
  Mat Read #2,R[2],0;C$;
  WORK$ = C$
  Gosub CHK4CHARS
  If BADCHAR
    Print @0,23;'CL';"FOUND CHARACTER IN: ";K1$
    C$ = WRK1$
  End If 
  If BADCHAR And CCLR ! CHECK/CLR - REWRITE
    Mat Write #2,R[2],0;C$;
    NUMFIX = NUMFIX + 1
  End If 
  Goto CFLE_LOOP
CFDONE: Rem FINISHED
  Print @40,3;'CL';"CUSTOMER DONE. ";NUMFIX;" RECORDS ";
  if cclr print "FIXED" Else Print "FOUND"
  Close #2
End If 
If FLECHK[3] ! VENDOR
  NUMREC = 0;NUMFIX = 0
  Read #1,88,2400;F$
  Open #2,F$
  Print @0,22;'CL';"CHECKING VENDOR"
  K1$ = " ",K1$
VFLE_LOOP: Rem LOOP ALL
  Search #2,3,1;K1$,R[2],E
  If E Goto VFDONE
  NUMREC = NUMREC + 1
  If Not(Fra(NUMREC / 100)) Print @35,22;'CL';NUMREC;K1$
  Mat Read #2,R[2],0;V$;
  WORK$ = V$
  Gosub CHK4CHARS
  If BADCHAR
    Print @0,23;'CL';"FOUND CHARACTER IN: ";K1$
    V$ = WRK1$ + BLANK$
  End If 
  If BADCHAR And CCLR ! CHECK/CLR - REWRITE
    Mat Write #2,R[2],0;V$;
    NUMFIX = NUMFIX + 1
  End If 
  Goto VFLE_LOOP
VFDONE: Rem FINISHED
  Print @40,4;'CL';"VENDOR DONE. ";NUMFIX;" RECORDS ";
  if cclr print "FIXED" Else Print "FOUND"
  Close #2
End If 
IF FLECHK[4] ! SHIPLIST
	NUMREC=0;NUMFIX=0
	READ #1,88,2112;F$
	OPEN #2,F$
	PRINT @0,22;'CL';"CHECKING SHIPLIST"
	K1$=" ",K1$
	SLFLE_LOOP: ! LOOP ALL
	SEARCH #2,3,1;K1$,R[2],E
	IF E GOTO SLFDONE:
	NUMREC=NUMREC+1
	IF NOT(FRA(NUMREC/100)) PRINT @35,22;'CL';NUMREC;K1$
	MAT READ #2,R[2],0;SL$;
	WORK$=SL$ ! CHECK all 
	GOSUB CHK4CHARS:
	IF BADCHAR 
		PRINT @0,23;'CL';"FOUND CHARACTER IN: ";K1$
		SL$=WRK1$ ! +BLANK$ ! move back in & FILL IT?
	ENDIF
	IF BADCHAR AND CCLR ! CHECK/CLR - REWRITE
		MAT WRITE #2,R[2],0;SL$;
		NUMFIX=NUMFIX+1
	ENDIF
	! MULTIPLE STRINGS TO CHECK
	MAT READ #2,R[2],150;SL1$; ! COUNTRY, ETC
	WORK$=SL1$ ! CHECK all 
	GOSUB CHK4CHARS:
	IF BADCHAR 
		PRINT @0,23;'CL';"FOUND CHARACTER IN: ";K1$
		SL1$=WRK1$ ! +BLANK$ ! move back in & FILL IT?
	ENDIF
	IF BADCHAR AND CCLR ! CHECK/CLR - REWRITE
		MAT WRITE #2,R[2],150;SL1$;
		NUMFIX=NUMFIX+1
	ENDIF
	MAT READ #2,R[2],204;SL2$; ! SHIP INSTR
	WORK$=SL2$ ! CHECK all 
	GOSUB CHK4CHARS:
	IF BADCHAR 
		PRINT @0,23;'CL';"FOUND CHARACTER IN: ";K1$
		SL2$=WRK1$ ! +BLANK$ ! move back in & FILL IT?
	ENDIF
	IF BADCHAR AND CCLR ! CHECK/CLR - REWRITE
		MAT WRITE #2,R[2],204;SL2$;
		NUMFIX=NUMFIX+1
	ENDIF
	MAT READ #2,R[2],330;SL4$; ! uda
	WORK$=SL4$ ! CHECK all 
	GOSUB CHK4CHARS:
	IF BADCHAR 
		PRINT @0,23;'CL';"FOUND CHARACTER IN: ";K1$
		SL4$=WRK1$ ! +BLANK$ ! move back in & FILL IT?
	ENDIF
	IF BADCHAR AND CCLR ! CHECK/CLR - REWRITE
		MAT WRITE #2,R[2],330;SL4$;
		NUMFIX=NUMFIX+1
	ENDIF
	MAT READ #2,R[2],396;SL3$; ! PHONE ETC
	WORK$=SL3$ ! CHECK all 
	GOSUB CHK4CHARS:
	IF BADCHAR 
		PRINT @0,23;'CL';"FOUND CHARACTER IN: ";K1$
		SL3$=WRK1$ ! +BLANK$ ! move back in & FILL IT?
	ENDIF
	IF BADCHAR AND CCLR ! CHECK/CLR - REWRITE
		MAT WRITE #2,R[2],396;SL3$;
		NUMFIX=NUMFIX+1
	ENDIF
	GOTO SLFLE_LOOP:
	SLFDONE: ! FINISHED
	PRINT @40,5;'CL';"SHIPLIST DONE. ";NUMFIX;" RECORDS ";
	if cclr print "FIXED" Else Print "FOUND"
	CLOSE #2
ENDIF
OUTEND: Rem done
Print @0,23;"DONE CHECKING"
Chain ""
CHK4CHARS: Rem CHECK AND REPLACE
BADCHAR = 0
If Len(WORK$) = 0 Return 
WRK1$ = " ",WRK1$
WRK1$ = ""
For X = 1 To Len(WORK$)
  If WORK$[X,X] < " " Or WORK$[X,X] > "~" ! OUT OF STD ASCII RANGE
    WRK1$[X,X] = " "
    BADCHAR = 1
  Else ! IT'S OK
    WRK1$[X,X] = WORK$[X,X]
  End If 
Next X
Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) = 99 ! "escape hit/return back
  Print 'RB ML';" ";'ML';
  Return -1
End If 
If Spc(8) = 123 ! "record lock
  Escdis 
  Window Open @0,0; Size 30,3; Using ""
  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
  Signal 3,50
  Window Close 
  Escclr 
  Return -1
End If 
Dim 2%
Window Off 
Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
If ENUM = 157 Let CTERR = Err(8)
Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
Goto ERR_MAIN
ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
Dim 2%
Window Off 
Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
Goto ERR_MAIN
ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) <> 99 Goto ERR_TRAP
If Err 0 Rem
CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
If Err 0 Gosub ERR_TRAP
Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
Input Len 16385;""ABREQ$
Call String(1,ABREQ$)
Print @0,Msc(34) - 1;'CL';
If Err 0 Gosub ERR_ESCAPE
If ABREQ$ <> "Y"
  Print 'ML';" ";'ML';
  Return -1
End If 
Goto OUTEND
ERR_MAIN: Rem "main error handling logic
If Err 0 Rem
Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
PNAME$ = Msc$(4)
Call String(1,PNAME$)
POS_ = 1;POS1 = 0
NAMEPARSE: Rem "get program name from path
Search PNAME$[POS_],"/",POS1
If POS1
  POS_ = (POS_ + POS1)
  Goto NAMEPARSE
End If 
Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
Print "TRACE: ";'CL';
STACKLOOP: Rem "print nesting information
Print Using "<#####> ";Spc(16);
If Spc(14) Goto STACKLOOP
Print 'CR';"************************************"
Close #0
Open #0,"errorlog"
Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
Close #0
Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
Call String(2,PNAME$)
System 28,PNAME1$
Call String(5,PNAME2$)
PNAME2$ = " ",PNAME2$
PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
Call InpBuf(PNAME2$)
Stop 
Rem {end rtn.error.s}
