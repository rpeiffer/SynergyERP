! >>> Program 316crest
!
! description A/R Customer Trial Balance, Custom for Crest - based from 316s.dl4
!
! loadsave -w -n 100,10 -o prog/dxport/316crest.dl4 src/316crest.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  1, 2006  11:11:19
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx316s.src (univ2) [txc] {33485}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE ! ****
Rem
Rem *   MX316s - A/R BY Salesman/Customer*
Rem *   UNIVERSAL BUSINESS SYSTEM        *
Rem *   SEPT - OCT  1983                 *
!
External Lib "ubsfunc.dl4"
Declare External Sub UTAge5
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,FindF
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3]
Com P9$[50]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Detail$[1]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 3%,tmp3
!
Dim 1%,S8,C7,A0[10],CSLSM,LINES
Dim 1%,J0,J2,J3,J4,J5,J6,J7,J8,J9[2]
Dim 1%,AGEBUCK[3],AGECOL,DDAY
Dim 2%,PRCNTAR[6],lstpaydate
Dim 4%,TOTAR
Dim 3%,V9,PCTR
Dim 4%,J1,1%,FLAG,2%,D3[1]
Dim 1%,S1[2],F,L,SVCFLAG,W1[1]
Dim 2%,E,A4[7],A2[5],C1[10],ARDATE,C2[1],H0[12],C5,R[20],E1[12],DIV[1]
Dim 2%,X1[9],SLSM[1],H5[8],COID
Dim C5$[12],D1$[10],D2$[10],ABREQ$[10],A3$[16],A4$[60],RETVAL$[512]
Dim J$[60],J0$[20],J1$[60],J2$[60],J4$[50],J5$[80],J7$[60],J9$[50]
Dim K7$[30],K1$[30],K2$[30],K3$[50],K4$[50],K5$[25],SLSMNAME$[30]
Dim Custa1$[142],ext$[5],c1$[142]
Dim 3%,A3[13],C3[5],T9[9,3],P4,P5,T[4],CRDTOT,T2[25],GNDCRD,SLMCRD
Dim 3%,ARREF[1]
Dim K9$[50],X$[10],CNAME$[30],C2$[30],C3$[30],D0$[81],CONTACT$[20]
Dim F$[30],C$[112],ARDATE$[8],P$[20],P1$[20],P2$[20],A$[100],A0$[68]
Dim AGEBUCK$[120],AGEBUCKH$[40],PHONE$[30],ARTERM$[16],P61$[256]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) / 100)
P1$ = "--------.##";P2$ = "--------#.##"
F = 0
Mat Read #1,20,130;AGEBUCK;
Mat Read #1,20,138;AGECOL;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
AGEBUCK$[1,20] = "CURRENT............:";AGEBUCKH$[1,8] = " CURRENT"
If P9$[50,50] = "M" ! age by month
  If P9$[25,25] = "Y" ! age by due date
    AGEBUCK$[21,40] = "PAST DUE...........:";AGEBUCKH$[9,16] = "PAST DUE"
    AGEBUCK$[41,60] = "OVER 1 MONTH.......:";AGEBUCKH$[17,24] = "OVER 1MO"
    AGEBUCK$[61,80] = "OVER 2 MONTHS......:";AGEBUCKH$[25,32] = "OVER 2MO"
    AGEBUCK$[81,100] = "OVER 3 MONTHS......:";AGEBUCKH$[33,40] = "OVER 3MO"
  Else 
    AGEBUCK$[21,40] = "OVER 1 MONTH.......:";AGEBUCKH$[9,16] = "OVER 1MO"
    AGEBUCK$[41,60] = "OVER 2 MONTHS......:";AGEBUCKH$[17,24] = "OVER 2MO"
    AGEBUCK$[61,80] = "OVER 3 MONTHS......:";AGEBUCKH$[25,32] = "OVER 3MO"
    AGEBUCK$[81,100] = "OVER 4 MONTHS......:";AGEBUCKH$[33,40] = "OVER 4MO"
  End If 
Else 
  If P61$[67,67] = "Y"
    AGEBUCK$ = " ",AGEBUCK$;AGEBUCKH$ = " ",AGEBUCKH$
    For X = 0 To 4
      AGEBUCK$[((X * 20) + 1),((X * 20) + 8)] = (X + 1) Using "PERIOD #"
      AGEBUCK$[((X * 20) + 9),((X * 20) + 20)] = "...........:"
      AGEBUCKH$[((X * 8) + 1),((X * 8) + 8)] = (X + 1) Using "PERIOD #"
    Next X
  Else 
    For X = 0 To 3
      AGEBUCK$[((X * 20) + 21),((X * 20) + 33)] = AGEBUCK[X] Using "OVER ### DAYS"
      AGEBUCK$[((X * 20) + 34),((X * 20) + 40)] = "......:"
      AGEBUCKH$[((X * 8) + 9),((X * 8) + 16)] = AGEBUCK[X] Using "OVER ###"
    Next X
    If P9$[25,25] = "Y" And AGEBUCK[0] = 0
      AGEBUCK$[21,40] = "PAST DUE...........:"
      AGEBUCKH$[9,16] = "PAST DUE"
    End If 
  End If 
End If 

J8 = 0
If Err 0 Let J8 = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 62;SCRN = 0
!If J8 Let L9 = 23;SCRN = 1

let j8=0 !!!! there is not browser option
!
Read #1,18,30;D2$;
Read #1,0,108;ARDATE; 
Mat Read #1,0,100;ARDATE$;
Read #1,3;CNAME$;
D0$ = "INVSVCNSFD/ALATC/MUN.C/APAY"

!
! dx add xport reporting code
DXSetup:
Dim tmp$[800],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!

!
!  dx add xport reporting code
call dxget("frozenacct",tmp$) \ S9[0]=tmp$  ! report option  0=current  1=frozen
if p61$[20,20]="Y" ! frozen by month
	call dxget("FRZMNTH",tmp$)
	if RTrim$(tmp$)<>"" let s9[0]=2
	x3=tmp$
	let x$=x3 using "&&&&"
	let ext$="."+x$
Endif
call dxget("frozendate",tmp$) \ S9[1]=tmp$ ! frozen aging date
call dxget("begslsm",tmp$) \ SLSM[0]=tmp$ ! starting salesman
call dxget("endslsm",tmp$) \ if tmp$="" let SLSM[1]=999 else SLSM[1]=tmp$ ! ending salesman
call dxget("begwhse",tmp$) \ if tmp$="" let W1[0]=0 else W1[0]=tmp$ ! beg warehouse
call dxget("endwhse",tmp$) \ if tmp$="" let W1[1]=99 else W1[1]=tmp$ ! end warehouse
call dxget("begdiv",tmp$) \ if tmp$="" let DIV[0]=0 else DIV[0]=tmp$ ! beg division
call dxget("enddiv",tmp$) \ if tmp$="" let DIV[1]=99 else DIV[1]=tmp$ ! end division
call dxget("ageservchrg",tmp$) \ if tmp$="" let SVCFLAG=0 else SVCFLAG=1 ! age service charge
call dxget("dt",tmp$) \ if rtrim$(tmp$)="S" let DETAIL=0 else DETAIL=1 ! detail or summary
!if detail<>0 and j8<>0  ! undo of task#23944
!	let e$="Detail Option is Not Available on Browser" \ error 10000
!endif
call dxget("printorder",tmp$) \ DIRNUM=tmp$ ! print order  1=ref#  2=date
call dxget("zerobal",tmp$) \ if tmp$="" let ZEROBAL=0 else ZEROBAL=1 ! print zero balance
!  dx end
!
! frozen report
if S9[0] ! frozen
	if s9[1]<=0 let e$="Frozen Aging date is required" \ error 10000
  tmp$=S9[1] using "&&&&&&" \ S9[1]=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
  ARDATE = S9[1] \ X2 = ARDATE 
  Gosub ISDUNPACK \ ARDATE$ = X$
else
  S9[1]=0 ! current
endif
!
! salesman
if SLSM[0]<0 or SLSM[0]>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
if SLSM[1]<SLSM[0] or SLSM[1]>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
! warehouse
if W1[0]<0 or W1[0]>99 let e$="Invalid starting warehouse, must be between 0 and 99!" \ error 10000
if W1[1]<W1[0] or W1[1]>99 let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
! division
if DIV[0]<0 or DIV[0]>99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
if DIV[1]<DIV[0] or DIV[1]>99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
!
if s9[0]=2
	read #1,88,1504;j$;
	j$=RTrim$(J$)+ext$
	call findf(j$,found)
	if not(found)
		e$="Frozen file for "+ext$+" not found" \ error 10000
	Endif
Endif
!
For I = 3 To 8
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  If I = 4 And S9[0] 
    if s9[0]=1 let J$[Len(J$) + 1] = ".FROZ" ! frozen a/r
	if s9[0]=2 let j$=RTrim$(J$)+ext$
  End If 
  Ropen #I,J$
L_845: Next I
Data "1808","1504","1840","1872","1824","720"
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 

!
! sort section
L_1500: 
! - Print @0,19;'CE';@0,22;"Sorting... please wait";
K9$ = " ",K9$;K3$ = " ",K3$;NUMREC = 0
L_1530: 
Search #9,3,1;K9$,R[9],E 
If E Goto L_1600
Search #9,5,1;K9$,R[9],E 
If E Let e$ = "syserrorfile 316s sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1530
L_1600: 
Search #3,3,1;K3$,R[3],E 
If E Goto L_1900
Mat Read #3,R[3],142;C1;
MAT READ #3,R[3],204;LSTPAYDATE;
Mat Read #3,R[3],210;C3;
NUMREC = NUMREC + 1
! - If Not(Fra(NUMREC / 200)) Print @40,22;'CL';NUMREC;K3$;
If Not(S9[0]) And C3[0] + C3[2] + C3[3] + C3[4] + C3[5] - C3[1] = 0 If C3[1] = 0 Goto L_1600
If C1[2] < SLSM[0] Goto L_1600
If C1[2] > SLSM[1] Goto L_1600
K9$ = " ",K9$
K9$[1,3] = C1[2] Using "###"
K9$[4] = K3$
Search #9,4,1;K9$,R[3],E 
If E Let e$ = "syserrorfile 316s sortfile mode (m)=4 keyno (k)=1 r=",R[3]," e=",e," keyval (k$)=",K9$ \ error 10000
Goto L_1600
!
! process section
L_1900: 
!

If J8=0 And P > 0 Print #0;"\14\"
L = 70 \ P = 0 \ GNDCRD = 0;TFLAG = 0
K1$ = " ",K1$;PRNTCUST = 0;NUMREC = 0
Read #1,18,60;D1$;
CSLSM = 0
! - Print @0,22;'CE';"Printing... please wait";
L_2000: 
Search #9,3,1;K1$,R[3],E 
If E<>0
	Gosub L_4500 
	Goto L_4000
endif
K9$ = K1$[4]
!NUMREC = NUMREC + 1
! - If Not(SCRN) And Not(Fra(NUMREC / 200)) Print @40,22;'CL';NUMREC;K1$
mat  read #3,r[3],0;custa1$;
Mat Read #3,R[3],0;C2$;
Mat Read #3,R[3],30;C$;
Mat Read #3,R[3],348;C3$;
Mat Read #3,R[3],142;C1;
Mat Read #3,R[3],146;C2;
Read #3,R[3],194;C7;
MAT READ #3,R[3],204;LSTPAYDATE;
Mat Read #3,R[3],210;C3;
READ_CUSTNOTES: Rem
A$ = " ",A$ \ A0$ = " ",A0$
Search #8,2,1;K9$,R[8],E
If Not(E)
  Mat Read #8,R[8],100;A0$;
End If 
DONE_CUSTNOTES: Rem
If CSLSM = 0 
	Let CSLSM = C1[2];L = 99
else
	If CSLSM <> C1[2] 
		Gosub L_4500 
		let cslsm=c1[2]
	endif
endif
ARTERM$ = " ",ARTERM$
If C7 = 0
  ARTERM$ = "CASH SALE     "
Else 
  If C7 > 0 And C7 <= 99
    Read #50,C7,0;ARTERM$;
  End If 
End If 
If P9$[50,50] <> "M" And P61$[67,67] = "Y" ! not by month/by term code
  Mat Read #1,20,130;AGEBUCK;
  If C7 > 0 And C7 <= 99
    Read #50,C7,30;DDAY;
    If DDAY = 0 Let DDAY = 1
    If DDAY > 0
      AGEBUCK[0] = DDAY
      AGEBUCK[1] = DDAY * 2
      AGEBUCK[2] = DDAY * 3
      AGEBUCK[3] = DDAY * 4
    End If 
  End If 
End If 
!Gosub L_2800
!GNDCRD = GNDCRD + CRDTOT;SLMCRD = SLMCRD + CRDTOT
Gosub L_2200
If Not(T9[0,2]) And Not(T9[1,2]) And Not(T9[2,2]) And Not(T9[3,2]) And Not(T9[4,2]) And Not(T9[5,2]) And Not(T9[6,2]) Goto L_2000
T[0] = 0 \ If T[2] Let T[0] = T[1] / T[2]
Gosub L_5000
Goto L_2000
!
L_2200: Rem "=================================== ar for this customer
K4$ = K9$
L_2210: Search #4,3,DIRNUM;K4$,R[4],E 
If E Return 
If K4$[1,6] <> K9$ Return 
Mat Read #4,R[4];A2;
Mat Read #4,R[4],24;A3;
Mat Read #4,R[4],124;A0;
Mat Read #4,R[4],108;A3$;
Mat Read #4,R[4],256;A4$;
Mat Read #4,R[4],316;ARREF;
If A0[3] < W1[0] Or A0[3] > W1[1] Goto L_2210
If A0[5] < DIV[0] Or A0[5] > DIV[1] Goto L_2210
If Not(ZEROBAL) And Not(A3[0] - A3[1] - A3[2]) Goto L_2210
S1[2] = Int(100 * Fra(A2[3]))
If S1[2] > 5
  For X = 0 To 2 \ A3[X] = - A3[X] \ Next X
End If 
Mat Read #4,R[4],154;A4;
AGE[1] = 0 \ Gosub L_3000
S1[1] = Fra(AGE[1]) * 10
If S1[1] > 4 Let S1[1] = 4
S8 = 0
If S1[2] > 5 And P9$[19,19] <> "Y" Let S8 = 4 ! NOT AGING THROW IN CURRENT
If S8 = 5 Goto L_2305
S8 = 4 - S1[1]
If S1[2] = 2 And SVCFLAG = 0 Let S8 = 4 ! NOT AGING THROW IN CURRENT
L_2305: T9[S8,2] = T9[S8,2] + (A3[0] - A3[1] - A3[2])
let t9[9,2]=t9[9,2]+(A3[0] - A3[1] - A3[2])
If DETAIL
  If Not(PRNTCUST) 
	 Gosub PRNTCUSTNAME
  endif
  Gosub PRNTDETAIL
End If 
Goto L_2210
!
L_2800: Rem CUSTOMER ON ORDER TOTAL
K5$ = " ",K5$ \ CRDTOT = 0
K5$ = C1[1] Using "######"
L_2815: Search #5,3,2;K5$,R[5],E 
If E Goto L_2860
C5 = K5$[1,6] \ If C5 <> C1[1] Goto L_2860
Mat Read #5,R[5];H0; \ Mat Read #5,R[5];H5;
If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(6) - 1 Goto L_2855
If H5[8] < DIV[0] Or H5[8] < DIV[1] Goto L_2855
If H0 >= 9 And H0 <= 11
  Mat Read #6,H0[3],8;T2
  CRDTOT = CRDTOT + T2[0]
End If 
L_2855: Goto L_2815
L_2860: Return 
!
! get salesman record
GetSalesPerson:
K7$ = CSLSM Using "### " 
Search #7,2,1;K7$,R[7],E 
If E=0 Mat Read #7,R[7],0;SLSMNAME$; else SLSMNAME$ = "NOT ON FILE !"
return 
!
L_3000: Rem AGING ROUTINE
If Not(A2[4]) let e$="No date found for reference # ",str$(ARREF),"!" \ error 10000
If P9$[19,19] <> "Y" If Int(Fra(A2[3]) * 100) > 5 Goto L_3100
X2 = A2[4] \ Gosub L_7870 \ X = D3[0]
X2 = A4[3] \ Gosub L_7840 \ A4[3] = 0
If P9$[25,25] = "Y" If A4[3] Let X = A4[3]
If Int(Fra(A2[3]) * 100) > 5 And A4[3] = 0 Let X = D3[0]
AGE[1] = 0;AGE[2] = ARDATE;AGE[3] = X;AGE[4] = 0
If P61$[67,67] = "Y" And P9$[50,50] <> "M"
  AGE[7] = C7;AGE[6] = 50
Else 
  AGE[7] = 0;AGE[6] = 0
End If 

call UTAge5(e$,P9$,AGE[],1)
L_3070: If AGE[0] = 1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If AGE[0] = 2 Goto L_3100
T[1] = T[1] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[2] = T[2] + (A3 - A3[1] - A3[2])
T[3] = T[3] + (Int(AGE[1]) * (A3 - A3[1] - A3[2]))
T[4] = T[4] + (A3 - A3[1] - A3[2])
L_3100: Return 

L_4000: Rem    BATCH TOTALS.
if J8 goto OUTEND ! dx xml
!
CSLSM = SLSM[0];TFLAG = 99
LINES = 0 \ L = 99 \ Gosub L_5800
TOTAR = T9[6,1] + T9[5,1] + T9[4,1] + T9[3,1] + T9[2,1] + T9[1,1] + T9[0,1]
For X = 0 To 6
  If TOTAR
    PRCNTAR[X] = FNR((T9[X,1] / TOTAR) * 100)
  Else 
    PRCNTAR[X] = 0
  End If 
Next X
Print #0;"\15\\15\\15\\15\"; Tab 35;"**** ACCOUNTS RECEIVABLE TOTALS ****\15\\15\\15\"
P$ = "---,---,---.##"
Print #0; Tab 35;AGEBUCK$[81,100]; Tab 55;
Print #0; Using P$;T9[0,1];
Print #0; Using "   ----.##%";PRCNTAR[0]
Print #0; Tab 35;AGEBUCK$[61,80]; Tab 55;
Print #0; Using P$;T9[1,1];
Print #0; Using "   ----.##%";PRCNTAR[1]
Print #0; Tab 35;AGEBUCK$[41,60]; Tab 55;
Print #0; Using P$;T9[2,1];
Print #0; Using "   ----.##%";PRCNTAR[2]
Print #0; Tab 35;AGEBUCK$[21,40]; Tab 55;
Print #0; Using P$;T9[3,1];
Print #0; Using "   ----.##%";PRCNTAR[3]
Print #0; Tab 35;AGEBUCK$[1,20]; Tab 55;
Print #0; Using P$;T9[4,1];
Print #0; Using "   ----.##%";PRCNTAR[4]

Print #0; Tab 55;"--------------"
Print #0; Tab 35;"TOTAL A/R..........:"; Tab 55;
Print #0; Using P$;(T9[2,1] + T9[3,1] + T9[4,1] + T9[5,1] + T9[6,1] + T9[0,1] + T9[1,1]);
If TOTAR Let PRCNTAR[0] = FNR((TOTAR / TOTAR) * 100) Else Let PRCNTAR[0] = 0
Print #0; Using "   ----.##%";PRCNTAR[0]
T[0] = 0
If T[4] Let T[0] = T[3] / T[4]
Print #0; Tab 35;"AVERAGE ";
If P9$[50,50] = "D" Print #0; Using "(DAYS)----#.###";T[0]
If P9$[50,50] = "M" Print #0; Using "(MONTHS)----#.###";T[0] / 30.416
If GNDCRD <> 0 Print #0; Using "TOTAL PENDING CREDIT ------,---.##"; Tab 35;GNDCRD
GNDCRD = 0
! - Print "\15\"
ENDMORE: Rem prompt for more ranges
goto OUTEND

!
L_4500: Rem "===================================== SALESMAN TOTALS
LINES = 2 \ Gosub L_5800
Print #0;TAB 25;"SALESREP ";CSLSM;" TOTALS";
PRINT #0;USING "---,---,---.##";TAB 57;T9[9,3];! BALANCE
				
If Not(AGECOL) ! oldest to current
  Print #0; Using "-,---,---.##"; Tab 71;T9[0,3]; 
  Print #0; Using "-,---,---.##"; Tab 83;T9[1,3];
  Print #0; Using "-,---,---.##"; Tab 95;T9[2,3];
  Print #0; Using "-,---,---.##"; Tab 107;T9[3,3];
  Print #0; Using "-,---,---.##"; Tab 119;T9[4,3];
  Print #0;""
  let agetab=75
  for ctr=0 to 4	
	let tmp3=0
	if t9[9,3]<>0
		let tmp3=fnr((t9[ctr,3]/t9[9,3])*100)
	endif
	print #0;using "----.##%";tab agetab;tmp3;
	let agetab=agetab+12
  next ctr
  let agetab=0
  print #0;""  
Else 
  Print #0; Using "-,---,---.##"; Tab 71;T9[4,3]; 
  Print #0; Using "-,---,---.##"; Tab 83;T9[3,3];
  Print #0; Using "-,---,---.##"; Tab 95;T9[2,3];
  Print #0; Using "-,---,---.##"; Tab 107;T9[1,3];
  Print #0; Using "-,---,---.##"; Tab 119;T9[0,3];
  Print #0;""
  let agetab=75
  for ctr=4 to 0 step -1
	
	let tmp3=0
	if t9[9,2]<>0
		let tmp3=fnr((t9[ctr,2]/t9[9,2])*100)
	endif
	print #0;using "----.##%";tab agetab;tmp3;
	let agetab=agetab+12
  next ctr
  let agetab=0
  print #0;""
endif
Print #0;""
For X = 0 To 9
  T9[X,3] = 0
Next X
Print #0;""

!
ExitSalesmanTotal:
SLMCRD = 0;PRNTCUST = 0
L = 99;CSLSM = C1[2]
Return 
!
PRNTDETAIL: Rem  "
!
LINES = 1 \ Gosub L_5800 \ if not(prntcust) Gosub PRNTCUSTNAME
TYPE = Int(Fra(A2[3]) * 100)
print #0; tab 7;D0$[TYPE * 3 - 2,TYPE * 3]; ! type
Print #0; Using "########"; Tab 12;ARREF[0];
X2 = A2[4] \ Gosub L_7770 \ Print #0; Tab 23;X$[1,8]; ! trans date
If P9$[25,25] = "Y" And A4[3] <> 0
	X2 = A4[3] \ Gosub ISDUNPACK \ Print #0; Tab 32;X$[1,8]; ! due date
End If 
If A3$[1,2] <> "  " Print #0; Tab 41;A3$[1,14]; Else Print #0; Tab 41;A4$[1,14];
print #0; using "---,---,---.##";tab 57;T9[9,2]; ! running balance
If Not(AGECOL) ! oldest to current
	if s8>=4 let agetab=119 ! put in current
	if s8=3 let agetab=107
	if s8=2 let agetab=95
	if s8=1 let agetab=83
	if s8<=0 let agetab=71
else
	if s8>=4 let agetab=71 ! 
	if s8=3 let agetab=83 !let agetab=107
	if s8=2 let agetab=95 
	if s8=1 let agetab=107
	if s8<=0 let agetab=119 ! put in current 
endif
Print #0; Tab (AGETAB);
If (A3[0] - A3[1] - A3[2]) >= 0
  Print #0; Using "#,###,###.##";(A3[0] - A3[1] - A3[2]);
Else 
  Print #0; Using "-,---,---.##";(A3[0] - A3[1] - A3[2]);
End If 
Print #0;""

Return 
!
PRNTCUSTNAME: Rem "
If rTRIM$(A0$[29,31])= ""
  CONTACT$ = Custa1$[1,20]
Else 
  CONTACT$ = A0$[29,48]
End If 
STRIP_CONTACT: Rem tighten up the contact name
COUNTER = Len(CONTACT$)
IF COUNTER>0
	If CONTACT$[COUNTER,COUNTER] = " " And RTRIM$(CONTACT$) <> ""
		CONTACT$ = CONTACT$[1,COUNTER - 1]
		Goto STRIP_CONTACT
	End If 
ENDIF
If RTRIM$(A0$[49,51]) = ""
  PHONE$ = "("+custa1$[21,23]+") "+custa1$[24,26]+"-"+custa1$[27,30] ! CUSTA1$[21,30]
Else 
  PHONE$ = A0$[49,68]
End If 
STRIP_PHONE: Rem tighten up the phone number
COUNTER = Len(PHONE$)
IF COUNTER>0
	If PHONE$[COUNTER,COUNTER] = " " And rTRIM$(PHONE$) <> ""
		PHONE$ = PHONE$[1,COUNTER - 1]
		Goto STRIP_PHONE
	End If 
ENDIF
!if J8=0 
!   PRINT #0;K9$;"  ";contact$;" ";phone$;tab(45);" ";custa1$[61,90];
!  if custa1$[91,95]<>"     " print #0;" ";custa1$[91,95];
! print #0;""
! print #0;tab 9;custa1$[31,60];"(";custa1$[21,23];") ";custa1$[24,26];"-";custa1$[27,30];
! Print #0;"   STANDARD TERMS:  ";arterm$;
! IF NOT(S9[0])
!	PRINT #0; USING "   AVG PAY DAYS -----##.##";C1[10]
! else
!	print #0;""
! endif
!endif
Lines=3\gosub L_5800:
  Print #0;USING "######";C1[1];! code
  Print #0;using "###";tab 8;c1[2]; ! slsm #
  print #0;tab 13;C$[1,30]; ! customer name 
  print #0;tab 45;rtrim$(cUSTA1$[121,135]);",";CUSTA1$[136,137]; 
  print #0;tab 65;contact$[1,20];
  print #0;tab 87;phone$;
  let x$=" ",x$
  if lstpaydate<>0
	let x$=lstpaydate using "&&&&&&"
  endif
  print #0;tab 109;x$[3,4];"/";x$[5,6];"/";x$[1,2];! last pay date
  print #0;" "
  print #0;tab 45;"TERMS: ";arterm$
  print #0;""
PRNTCUST = 1
Return 
!
L_5000: Rem "===================================== CUSTOMER TOTALS
!
if DETAIL<>0 AND not(prntcust) Gosub PRNTCUSTNAME
LINES = 5 \ if not(detail) let lines = 2
Gosub L_5800 
If Not(DETAIL)
  Print #0;USING "######";C1[1];! code
  Print #0;using "###";tab 8;c1[2]; ! slsm #
  print #0;tab 13;C$[1,30]; ! customer name 
  print #0;tab 45;rtrim$(c1$[121,135]);",";C1$[136,137]; 
  print #0;tab 65;contact$[1,20];
  print #0;tab 87;phone$;
  let x$=" ",x$
  if lstpaydate<>0
	let x$=lstpaydate using "&&&&&&"
  endif
  print #0;tab 109;x$[3,4];"/";x$[5,6];"/";x$[1,2];! last pay date
  print #0;" "
  print #0;tab 45;"TERMS: ";arterm$
else
	Print #0;""
endif

Print #0;TAB 25;"CUSTOMER TOTALS";
PRINT #0;USING "---,---,---.##";TAB 57;T9[9,2];! BALANCE			
If Not(AGECOL) ! oldest to current
  if t9[0,2]<0 Print #0; Using "-,---,---.##"; Tab 71;T9[0,2]; else Print #0; Using "#,###,###.##"; Tab 71;T9[0,2];
  if t9[1,2]<0 Print #0; Using "-,---,---.##"; Tab 83;T9[1,2]; else Print #0; Using "#,###,###.##"; Tab 83;T9[1,2];
  if t9[2,2]<0 Print #0; Using "-,---,---.##"; Tab 95;T9[2,2]; else Print #0; Using "#,###,###.##"; Tab 95;T9[2,2];
  if t9[3,2]<0 Print #0; Using "-,---,---.##"; Tab 107;T9[3,2]; else Print #0; Using "#,###,###.##"; Tab 107;T9[3,2];
  if t9[4,2]<0 Print #0; Using "-,---,---.##"; Tab 119;T9[4,2];else Print #0; Using "#,###,###.##"; Tab 110;T9[4,2];
  Print #0;""
  let agetab=75
  for ctr=0 to 4	
	let tmp3=0
	if t9[9,2]<>0
		let tmp3=fnr((t9[ctr,2]/t9[9,2])*100)
	endif
	print #0;using "----.##%";tab agetab;tmp3;
	let agetab=agetab+12
  next ctr
  print #0;""  
Else 
  Print #0; Using "-,---,---.##"; Tab 71;T9[4,2]; 
  Print #0; Using "-,---,---.##"; Tab 83;T9[3,2];
  Print #0; Using "-,---,---.##"; Tab 95;T9[2,2];
  Print #0; Using "-,---,---.##"; Tab 107;T9[1,2];
  Print #0; Using "-,---,---.##"; Tab 119;T9[0,2];
  Print #0;""
  let agetab=75
  for ctr=4 to 0 step -1
	let tmp3=0
	if t9[9,2]<>0
		let tmp3=fnr((t9[ctr,2]/t9[9,2])*100)
	endif
	print #0;using "----.##%";tab agetab;tmp3;
	let agetab=agetab+12
  next ctr
  print #0;""
endif

LINES = 1 \ Gosub L_5800 
Print #0;""
!
ExitCustomerTotal:
T[1] = 0 \ T[2] = 0
For X = 0 To 9
  T9[X,1] = T9[X,1] + T9[X,2]
  T9[X,3] = T9[X,3] + T9[X,2]
  T9[X,2] = 0
Next X
PRNTCUST = 0
Return 

!
L_5800: Rem "==================================== HEADING ROUTINE
If L + LINES < L9
  L = L + LINES
  Return 
End If 
If P  Print #0;"\14\"

P = P + 1
Print #0;" - 316CRE -";
Print #0; Tab 10;ARDATE$; Tab (66 - Int(Len(CNAME$) / 2));CNAME$; Tab 100;"PAGE";P
Print #0; Tab 2;Msc$(3);
Print #0; Tab 49;"A G E D   T R I A L   B A L A N C E"
If S9[0] Print #0; Tab 2;"FROZEN FILE"; Else Print #0; Tab 2;"CURRENT FILE";
Print #0; Tab 51;"CUSTOMER ";
If Not(DETAIL) Print #0;"TOTALS"; Else Print #0;"DETAIL";
Print #0;" BY SALESPERSON"
If CSLSM gosub GetSalesperson
If TFLAG
  SLSMNAME$ = SLSM[1] Using " Thru ###"
End If 
If CSLSM Or TFLAG
  Print #0; Using "### ";D1$;" ";CSLSM;SLSMNAME$;
End If 
Print #0; Tab 49;D2$;": ";
Print #0; Using "##";W1[0];" THRU ";W1[1];
Print #0;"  DIVISION: ";
Print #0; Using "###";DIV[0];" THRU ";DIV[1]
Print #0;" "
IF NOT(DETAIL)
	PRINT#0;TAB 0;"CUST#";
ENDIF
Print #0;tab 8;"SLS";
print #0;tab 13;"--------CUSTOMER NAME--------";
print #0;tab 45;"----CITY/STATE----";
PRINT #0;tab 65;"----CONTACT NAME----";
PRINT #0;TAB 87;"-----PHONE NBR-----";
PRINT #0;TAB 109;"LAST PAY";
PRINT #0;""
IF DETAIL<>0
	PRINT #0;TAB 0;"CUST#";
	PRINT #0;TAB 7;"TYPE";
	PRINT #0;TAB 13;"TRAN NR";
	PRINT #0;TAB 23;"TRAN DTE";
	PRINT #0;TAB 32;"DUE DATE";
	PRINT #0;TAB 41;"--COMMENT--";
ENDIF
PRINT #0;TAB 64;"BALANCE";
PTAB = 75
If Not(AGECOL) ! oldest to current
  For X = 5 To 1 Step -1
    Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
    PTAB = PTAB + 12
  Next X
Else 
  For X = 1 To 5
    Print #0; Tab (PTAB);AGEBUCKH$[((X * 8) - 7),(X * 8)];
    PTAB = PTAB + 12
  Next X
End If 
Print #0;""
Print #0;""
L = 6 + LINES
PRNTCUST = 0
Return 

ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end rtn.input.s}
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!
L_7870: Rem CONVERT JULIAN TO YYMMDD
D3[0] = X2;D3[1] = X2;FLAG = 0
Call "JULIANUTIL",D3[],X$,FLAG
Return 
!
OUTEND: Rem OUT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
!try call dxclose() else rem
End 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
