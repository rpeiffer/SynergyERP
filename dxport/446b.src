! >>> Program 446b
!
! description Open Backorder Report, Print by Product or Buyers
!
! loadsave -w -n 100,10 -o prog/dxport/446b.dl4 src/446b.src
!
! ERP Scheduler Enabled
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN  6, 2005  14:04:02
Rem /w/papermaster/r2002//usr/acct/zyc/work/r2002/mx/mx446b.src (univ2) [zyc] {40403}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX446B         Back Order Report
Rem Author:        Roman   (04/29/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
! jliu cct146141 4/27/01 - add vendor sort
! ----------   notes for upgrade to xrev9 for Morrisette Paper  -----------------
! vst 07/16/05 cct192588 - used prog from rev8(r2002) because there was no 
!                          source code on rev9(r2005) for mx446b & added in
!                          custom code for:
! 04/30/99  ac cct121930 - add option to show transfer qtys.
!                          'transflg' is used in the 'com' stmt 
!                          custom rtn:  L_31000:
! ----------------------------------------------------------------------------
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
Declare External Sub ERPCronSuccess
External Lib "ubsfunc.dl4"        
Declare External Function OpenFile

! - Option Default Dialect IRIS1
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,N1,N2,N1$,V9,J8,TIME$,DATE$,CNAME$,ITEM_LAB$,POFLG,STOCKFLG,transflg
!
Try
dim 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],2%,C4[8] ! old com line
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1000],tmp1$[1000],tmp2$[1000]
dim Vendor$[6],Buyer$[3],TMP_L1$[12],vsh_break$[21]
!
Dim 1%,EUN[2],H4[2],L3[3],UN[2],S2[1],W1[2],POMISC[2],CTWT
Dim 2%,DT3[1],JWDATE,svend,evend
Dim 2%,B[24],H0[12],H5[16],L4[3],L6[5],R[27],R1,BUYER,HA3[2],W2[9],VENDOR
Dim 3%,A1[7],Z1,T2[25],L5[3],L7[11],QBORD,UPRICE,QAVAIL,W3[24],OLM[5],M1[17],S3[17]
Dim 3%,DIRW3[2],POL3[6]
Dim J$[40],CCD$[14],W$[60],HEADER$[8],A$[156]
Dim 1%,F,X1,2%,X2,RCTR,CH_VEND
Dim 3%,J,J1,T[3],UNF[6]
Dim K0$[50],K1$[50],K2$[50],K3$[50],P9$[50],K27$[50],K12$[10],P60$[50]
Dim X$[20],Z1$[25],BREAK$[12],BUYERHOLD$[5],vendorhold$[6],KEY_VEND$[6],A_VEND$[264]
Dim L6$[60],L1$[20],A1$[142],P0$[20],S3$[33],CCD$[14],PRODHOLD$[12]
Dim 1%,PL1[5],ORD_TYPE_MIX,LL3[3],LS2[1],poh4[3], POL1[5]
Dim 3%,PL3[6],PL4[23],TMPONPO,TMPAVAIL,TMPBO,LL7[12]
Dim KPOH$[30],KPOL$[30],K11$[50],KTR$[50],W1$[32],pruda$[60]
Dim KY$[16],k16$[100],CUSTOM_CUSTOMER$[30]
Dim 2%,POH0[5],PL2[2],LL2[1],LL4[3]
dim 1%,TR1[13],TRL1[10]
DIM 2%,L2[1],OLDH0[12],OLDH5[16]
dim 3%,TRL3[21] 
Dim 3%
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
MAT  READ #1,115,60;CUSTOM_CUSTOMER$;  
LET custom_customer$ = UCase$(Trim$(custom_customer$))    
! If N2[0] = 2 Let HEADER$ = "PRODUCT" Else Let HEADER$ = "BUYER"
IF N2[0]=2 LET HEADER$="PRODUCT" 
if n2[0]=4 LET HEADER$="BUYER"
if n2[0]=5 
	let header$="VENDOR"
Endif
if n2[0]=4 or n2[0]=5 Ch_Vend = OpenFile(-2400,intCo) \ If Ch_Vend = -1 Error 42  ! vend
	svend=N1$[43,48]
	evend=N1$[49,54]
! Endif
ORD_TYPE_MIX = 0
If N2[7] = 2 And N2[8] = 2 Let ORD_TYPE_MIX = -1
If P60$[22,22] <> "Y"
  If N2[7] >= 2 And N2[8] <= 3 Let ORD_TYPE_MIX = -1
End If 
If N2[7] < 2 And N2[8] < 2 Let ORD_TYPE_MIX = 1
If P60$[22,22] <> "Y"
  If N2[7] > 2 Let ORD_TYPE_MIX = 1
Else 
  If N2[7] > 3 Let ORD_TYPE_MIX = 1
End If 
!
! *** Sort Section
! - Print @0,22;"SORTING...please wait";'CE'; \ Signal 3,0
K0$ = N1$[1,6]
L_1530: Search #8,3,2;K0$,R,E
If E = 2 Goto L_2000
If K0$[1,6] > N1$[7,12] Goto L_2000
Mat Read #8,R,0;H0;
Mat Read #8,R,78;H4;
Mat Read #8,R,104;H5;
If H0[0] > N2[10] Goto L_1530
If H0[0] < N2[9] Goto L_1530
if h0[0] >=20 and h0[0]<=29 goto l_1530     ! skip deleted
if h0[0]>=9 and h0[0]<=19 goto l_1530		! skip credits
Z = N1$[37,39] \ If H0[11] < Z Goto L_1530
Z = N1$[40,42] \ If H0[11] > Z Goto L_1530
If H5[7] > N2[8] Goto L_1530
If H5[7] < N2[7] Goto L_1530

X2 = H0[9] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE < N1[0] Goto L_1530
If JWDATE > N1[1] Goto L_1530
If N2[4] If H4[2] <> N2[4] Goto L_1530
K2$ = H0[7] Using "######"
L_1700: Search #11,3,1;K2$,R1,E
If E = 2 Goto L_1530
X2 = K2$[1,6] \ If X2 <> H0[7] Goto L_1530
Mat Read #11,R1,256;S2;
If (H5[7] = 21 Or H5[7] = 22) And K2$[7,9] = "   " Let S2[0] = 3
If S2[0] = 3 Goto L_1700
Mat Read #11,R1,8;L3;
If L3[2] > 900 Goto L_1700
Mat Read #11,R1,168;L7;
If Not(L7[3]) Goto L_1700
Mat Read #11,R1,16;L4;
Mat Read #11,R1,140;L1$;
Mat Read #11,R1,260;S3;
LET PROD_REC=L4[0]					! " cct121930
TMP_L1$=L1$[1,12]
If L3[0] <> 0
	if RTRIM$(s3$[1,12])<>"" then TMP_L1$=S3$[1,12]
  A[0] = 0;A[1] = 0;A[2] = 0;A[3] = 0;VENDOR = S3[14];BUYER = 0
  K12$ = " ",K12$;K12$[1,9] = K2$[1,9]
  Search #12,2,1;K12$,R[12],E 
  If E
    HA3[1] = 0
  Else 
    Mat Read #12,R[12],120;HA3;
  End If 
  BUYER = HA3[1] \ Goto L_1810
End If 
Mat Read #3,L4[0],156;B;
Mat Read #3,L4[0],256;A;
VENDOR = B[24]
L_1810: Gosub L_6000   !! get prodwhse
If Not(STOCKFLG) !"cct156922 exclude the items that qonpo+oqvail>=qbord
  LET dirW3[0]=0;dirW3[1]=0;dirW3[2]=0 
  TMPAVAIL = W3[0] - W3[2]
  If Not(N2[4]) Let TMPAVAIL = A[0] - A[3]
  TMPONPO = W3[1]
  If Not(N2[4]) Let TMPONPO = A[2]
  LET TMPBO=L7[3]
  !If (TMPONPO + TMPAVAIL) >= L7[3] Goto L_1700
  If H5[7] = 2 Or (H5[7] = 3 And P60$[22,22] <> "Y") And L3[0] = 0
    !Gosub L_3000
    !If DIRW3[1] >= L7[3] Goto L_1700
	if L4[2]
		GOSUB L_3000:     !!GET ON PO FOR NONSTOCKS                  
		IF DIRW3[1]>=L7[3] GOTO L_1700:                      
	else 
		gosub check_polines:
		IF DIRW3[1]>=L7[3] GOTO L_1700:
	endif
  else
	!! CK IF IT WOULD FAIL ANYWAY. IF NOT, ACCUM B/O QTY FOR ALL LINES IN PROD
	IF TMPBO<=(TMPONPO+TMPAVAIL) LET TMPBO=0 \ GOSUB L_3300:
	IF (TMPONPO+TMPAVAIL)>=TMPBO GOTO L_1700:               
  ENDIF ! dir chk 
End If ! stockflg
If BUYER < N1[2] Or BUYER > N1[3] Goto L_1700
IF vendor<svend or vendor>evend goto L_1700  !"check vendor range
!If L3[0] If L4[2] If Not(POFLG) Goto L_1700
If L3[0] and L4[2] and not(POFLG) 
    if custom_customer$="HTBERRY" 
		   IF NOT(POFLG) Goto L_1700
	ENDIF
	gosub L_3000:
	If PL4[10] = H0[7] and PL4[11] = L3[2] Goto L_1700  !! skip, is on PO file
endif
If N2[2] = 3 Goto L_1820
If N2[2] = 2 If L3[0] Goto L_1840
If N2[2] = 1 If Not(L3[0]) Goto L_1820
Goto L_1700
L_1820: If TMP_L1$[1,12] < N1$[13,24] Goto L_1700
If TMP_L1$[1,12] > N1$[25,36] Goto L_1700
L_1840: If N2[5] = 1
  If Not(L3[0]) If (W3[0] - W3[2]) <= 0 Goto L_1700
End If 
K1$ = " ",K1$
If N2[0] = 4 ! LOAD UP SORT FILE WITH BUYER SORT
  K1$[1,3] = BUYER Using "###"
  K1$[4,9] = VENDOR Using "######"
  K1$[10,21] = TMP_L1$
  K1$[22,27] = H0[7] Using "######"
  K1$[28,30] = L3[2] Using "###"
Endif
if N2[0]=2 ! LOAD UP SORT FILE WITH PRODUCT SORT
  K1$[1,12] = TMP_L1$
  K1$[13,14] = H4[2]
  K1$[15,16] = H0[0] Using "##"
  K1$[17,22] = H0[7] Using "######"
  K1$[23,25] = L3[2] Using "###"
End If 
if N2[0]=5       ! sort by vendor
	LET K1$[1,6]=VENDOR USING "######"                    
	LET K1$[7,9]=BUYER USING "###"       
	LET K1$[10,21]=TMP_L1$ ! PRODUCT CODE                 
	LET K1$[22,27]=H0[7] USING "######" ! ORDER NUMBER
	LET K1$[28,30]=L3[2] USING "###" ! LINE           
endif
Search #9,4,1;K1$,R1,E
If E Let e$ = "syserrorfile 446 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \error 10000
Goto L_1700
!
L_2000: Rem "================================= start print
! 
! *** Process Section
!
if J8 ! dx xml headings
  !
  tmp$=""
  if N2[0]=5 let tmp$="VENDOR #",fdel$,"BUYER #",fdel$
  if N2[0]=4 let tmp$="BUYER #",fdel$,"VENDOR #",fdel$
  tmp$=tmp$,"ITEM CODE",fdel$,"DESCRIPTION 1",fdel$
  tmp$=tmp$,"DESCRIPTION 2",fdel$
  if N2[1] ! detail
    if N2[0]=4 let tmp$=tmp$,"VENDOR ITEM #",fdel$
	tmp$=tmp$,"CUST #",fdel$,"NAME",fdel$,"DIV",fdel$,"WH",fdel$
    tmp$=tmp$,"CUST PO",fdel$,"ORDER",fdel$,"LINE",fdel$,"ORD DATE",fdel$
    tmp$=tmp$,"SHIP DATE",fdel$,"SP",fdel$,"HOLD",fdel$
    tmp$=tmp$,"QTY B/ORD",fdel$,"U/M",fdel$,"EXTENSION",fdel$
    If POFLG or STOCKFLG let tmp$=tmp$,"PO INFORMATION",fdel$
  else ! summary
    tmp$=tmp$,"PRODUCT",fdel$,"QTY B/ORD",fdel$,"EXTENSION",fdel$
  endif
  if transflg and n2[1]=0 let tmp$=tmp$,"QTY ON TRANS",fdel$
  tmp$=tmp$,"QTY ON PO",fdel$,"QTY AVAIL",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
If Not(J8) If V9[0] Print #0;"\14\"
! - Print @0,22;"PRINTING...please wait";'CE'; \ Signal 3,0
V9[1] = 100 \ V9[0] = 0 \ RCTR = 0
LET T[1]=0 \ LET T[3]=0
LET dirW3[0]=0;dirW3[1]=0;dirW3[2]=0 
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$ \ BREAK$ = ""
buyerhold$ = "" \ vendorhold$ = "" 
L_2070: Search #9,3,1;K1$,R1,E 
If E Goto L_9100
If buyerhold$ = "" Or vendorhold$ = ""                           
  If N2[0] = 4 Let buyerhold$ = k1$[1,3] \ vendorhold$ = k1$[4,9] 
  If N2[0] = 5 Let vendorhold$ = k1$[1,6] \ buyerhold$ = k1$[7,9] 
End If        
!IF N2[0] = 4 AND PRODHOLD$="" THEN PRODHOLD$=K1$[10,21]
If N2[0] = 2 If BREAK$ <> "" If BREAK$ <> K1$[1,12] Gosub L_4000
! If N2[0] = 4 If BREAK$ <> "" If BREAK$ <> K1$[10,21] Gosub L_4000
IF (N2[0]=4 OR N2[0]=5) and BREAK$<>"" and BREAK$<>K1$[10,21] GOSUB L_4000
Mat Read #11,R1,8;L3;
Mat Read #11,R1,16;L4;
Mat Read #11,R1,32;L5;
Mat Read #11,R1,56;L6;
Mat Read #11,R1,80;L6$;
Mat Read #11,R1,140;L1$;
Mat Read #11,R1,168;L7;
Mat Read #11,R1,250;UN;
Mat Read #11,R1,256;S2;
Mat Read #11,R1,370;S3$;
Mat Read #11,R1,404;OLM;
If S2[0] = 3 Goto L_2070  ! MESSAGE
Mat Read #11,R1,446;EUN;
Mat Read #11,R1,452;UNF;
Mat Read #11,R1,514;CTWT;
LET PROD_REC=L4[0]		! " cct121930
LET pruda$=" ",PRUDA$
If L3[0]
  A[0] = 0;A[1] = 0;A[2] = 0;A[3] = 0
  W3[0] = 0;W3[1] = 0;W3[2] = 0
  Gosub L_30000 \ Goto L_2215
End If 
Mat Read #3,L4[0];A$;
Mat Read #3,L4[0],256;A;
Mat Read #3,L4[0],512;PFU1;
Mat Read #3,L4[0],554;PFU2;
Mat Read #3,L4[0],894;C4;
MAT READ #3,L4[0],684;pruda$;
L_2215: Rem GOSUB L_6000: ! "get whse record
K2$ = " ",K2$
If N2[0] = 4 or n2[0]=5
  K2$[3,8] = K1$[22,27]
  Vendor$=K1$[4,9] \ Buyer$=K1$[1,3]
  if n2[0]=5 let vendor$=k1$[1,6];buyer$=k1$[7,9]
endif
If N2[0] = 2 Let K2$ = K1$[15,22]
K2$[10,10] = " "
Gosub L_2500 \ Goto L_2070  !! look for roh header
Mat Read #8,R,0;H0;
Mat Read #8,R,446;P0$;
Mat Read #8,R,78;H4;
Mat Read #8,R,104;H5;
Gosub L_6000
Mat Read #10,H0[3],8;T2;
Mat POH0 = Zer \ POH0[0] = 0
If (ORD_TYPE_MIX = 0 Or ORD_TYPE_MIX = -1) And L3[0] = 0
  Mat POH0 = Zer \ POH0[0] = 0 \ Gosub L_3000   !!GET ON PO FOR NONSTOCKS
  If ORD_TYPE_MIX = -1
    W3[1] = DIRW3[1]
  Else 
    W3[1] = W3[1] + DIRW3[1]
  End If 
End If 
If POFLG And L3[0]
  Mat POH0 = Zer \ POH0[0] = 0 \ Gosub L_3000   !!GET ON PO FOR NONSTOCKS
  W3[1] = W3[1] + DIRW3[1]
End If 
K2$ = " ",K2$ \ K2$ = H0[4] Using "######"
A1$[31,60] = "** NOT ON FILE **"
Search #5,2,1;K2$,R2,E
If E = 1 Goto L_2410
Mat Read #5,R2,0;A1$;
L_2410: Gosub L_3500   !! convert figures
! ---------   custom code for morrisette - cct121930
TRANSIN_QTY=0
IF TRANSFLG 
	GOSUB L_31000:
	LET CNVTA=TRANSIN_QTY \ LET CNVTU[0]=0;CNVTU[1]=UN[0];CNVTU[2]=1
	GOSUB L_20000:
	LET TRANSIN_QTY=AMOUNT
Endif
! -----------------------------------------------------
If N2[1] If V9[1] > V9[4] - 1 Gosub L_5800 \ Gosub L_5900 \ Goto L_2430
If N2[1] = 0 If V9[1] > V9[4] + 1 Gosub L_5800
If BREAK$ = "" 
	IF N2[1] and n2[0]=2 Gosub L_5900
ENDIF

!stop

IF N2[0]=4 !! CHECK IF BUYER, VENDOR OR PROD BREAK 
	IF N2[1] LET Z1=60 ELSE  LET Z1=52 ! "length of desc 2
	IF N2[0]=4 OR N2[0]=5 LET Z1=52
	LFFLG=0
	IF k1$[1,3]<>vsh_break$[1,3] PRINT #0; TAB 1;K1$[1,3]; \ LFFLG=1
	IF k1$[4,9]<>vsh_break$[4,9] 
		KEY_VEND$=k1$[4,9] \ gosub get_vend_name
		print #0; tab 10;key_vend$; tab 17;a_vend$[1,30]; \ LFFLG=1
		vsh_break$=k1$[1,21]
	ENDIF
	IF L3[0] 
		IF PRODHOLD$<>s3$[1,12]
			PRINT #0; TAB 49;"+";S3$[1,12];
			PRINT #0; TAB 63;L6$[1,30]; TAB 93;L6$[31,Z1]; \ LFFLG=1
			PRODHOLD$=s3$[1,12]
		ENDIF
	ELSE
		IF PRODHOLD$<>K1$[10,21]
			PRINT #0; TAB 49;L1$[1,12];
			PRINT #0; TAB 63;L6$[1,30]; TAB 93;L6$[31,Z1]; \ LFFLG=1
			PRODHOLD$=K1$[10,21]
		ENDIF
	ENDIF
	IF LFFLG=1 PRINT #0;" " \ V9[1]=V9[1]+1
ENDIF
if n2[0]=5 and k1$[1,21]<>vsh_break$ 
	Z1 = 52                     
	gosub vendor_subheader
	PRINT #0;" " \ V9[1]=V9[1]+1
	vsh_break$=k1$[1,21]
endif

L_2430: Gosub L_5000 ! print detail
T[0] = T[0] + FNR(L7[3] * OLM[3])
T[1] = T[1] + FNR(L7[3] * OLM[3])
T[2] = T[2] + QBORD
T[3] = T[3] + QBORD
IF N2[0]=4 LET BUYERHOLD$=K1$[1,3] \ vendorhold$=K1$[4,9] 
if n2[0]=5 let vendorhold$=k1$[1,6] \ buyerhold$=K1$[7,9]
if n2[0]=2 LET BUYERHOLD$="  "
Goto L_2070
!
L_2500: Rem "=============================== look for header
For ST = 1 To 59
  K2$[1,2] = ST Using "##"
  Search #8,2,1;K2$,R,E 
  If Not(E) Goto L_2580
Next ST
Return 
L_2580: Rem "found it
Return 1
!
L_3000: Rem GET ON PO FOR NONSTOCKS
mat dirw3=zer \ let dirw3[0]=0
Mat POH0 = Zer \ POH0[0] = 0
If Not(L4[2]) Return 
KPOH$ = " ",KPOH$;KPOH$[3] = L4[2] Using "######"
For X = 1 To 7
  KPOH$[1,2] = X Using "##"
  Search #6,2,1;KPOH$,R6,E 
  if E = 0 Goto L_3050
Next X
Return 
L_3050: Rem GOT HEADER - GO FOR LINE
Mat Read #6,R6,0;POH0;
KPOL$ = " ",KPOL$;KPOL$[1,6] = L4[2] Using "######"
L_3060: Search #7,3,1;KPOL$,R7,E 
If E = 2 Return 
X2 = KPOL$[1,6] \ If X2 <> L4[2] Return 
Mat Read #7,R7,0;PL1;
Call Logic(1,2 ^ 0,PL1[3],NONSTK)          
IF nonstk<>L3[0] GOTO L_3060:       
Mat Read #7,R7,12;PL2;
Mat Read #7,R7,24;PL3;
Mat Read #7,R7,232;PL4;
Mat Read #7,R7,376;POMISC;
If PL4[10] = H0[7] And PL4[11] = L3[2] Goto L_3100
Goto L_3060
!
L_3100: Rem GOT A LINE (ONLY 1?)
If PL1[0] > 2 Let CLPO = 1 \ Return 
If POMISC[0] And ORD_TYPE_MIX = 0 Goto L_3190
DIRW3[1] = DIRW3[1] + PL3[2] - PL3[3]
If (PL3[2] - PL3[3]) < 0 Let DIRW3[1] = DIRW3[1] + Abs(PL3[2] - PL3[3])
L_3190: Return 
! ! added by WMB to native
L_3300: !! ADD ALL THE B/O QTY'S ON ALL THE ORDER LINES TO SEE IF TOT > AVAL+PO
LET K11$=" ",K11$
LET TMPBO=0 !  ACCUMULATE TOTAL B/O AMT FOR A PRODUCT
K11$[1,6]=L4[0] USING "######"
L_3310: SEARCH #11,3,2;K11$,R11,E
IF E RETURN 
!IF E GOSUB Err_Search:
LET X2=K11$[1,6] \ IF X2<>L4[0] RETURN 
MAT  READ #11,R11,0;LL2;
MAT  READ #11,R11,8;LL3;
MAT  READ #11,R11,16;LL4;
MAT  READ #11,R11,168;LL7;
MAT  READ #11,R11,256;LS2;
IF LL7[3]=0 GOTO L_3310:
!! EXCLUDE MESSAGE LINES, DIFF WARE, ETC
IF LS2[0]=3 GOTO L_3310: ! "message line
IF N2[4] IF N2[4]<>LL4[3] GOTO L_3310: !DIFF WARE

!! EXCLUDE NON-STOCKS(PROB NOT THERE) & C/M
IF LL3[0]=1 GOTO L_3310: !NON-STOCKS
IF LL2[0]=12 GOTO L_3310: !C/M

TMPBO=TMPBO + LL7[3]
GOTO L_3310:

check_polines: ! "    check po lines for direct qty
mat dirw3=zer \ let dirw3[0]=0
LET KPOL$=" ",KPOL$;KPOL$[1,6]=L4[0] USING "######"
ckpo1: SEARCH #7,3,2;KPOL$,R7,E \ IF E RETURN                  
!IF E GOSUB ERR_SEARCH:                                            
LET X2=KPOL$[1,6] \ IF X2<>L4[0] RETURN   
MAT  READ #7,R7,0;POL1; 
MAT  READ #7,R7,24;POL3;                                          
MAT  READ #7,R7,232;PL4;                                          
MAT  READ #7,R7,376;POMISC;                                       
mat read #6,pol3[0],242;poh4;
Call Logic(1,2 ^ 0,POL1[3],NONSTK)       
IF NONSTK<>L3[0] GOTO  ckpo1:   ! record numbers match but stock type needs to also   
IF poh4[0]<>1 and poh4[0]<>5 goto ckpo1:
IF not (PL4[10]=H0[7] AND PL4[11]=L3[2]) GOSUB L_3100:                  
GOTO ckpo1:                                                      
return
L_3500: Rem "========================================== convert figures
CNVTA = L7[3] \ CNVTU[0] = 0
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 1
Gosub L_20000 \ QBORD = AMOUNT
If L3[0] If UN[0] >= 0 Mat Read #26,UN[0],0;CCD$; \ Goto L_3690
CCD$[11,14] = "CWT"
If L3[0] <> 0 Goto L_3690
If N2[3] = 1 If PFU1[8] = -1 Goto L_3690
If N2[3] = 2 If PFU1[9] = -1 Goto L_3690
If N2[3] = 3 If UN[0] = -1 Goto L_3690
If N2[3] = 3 If UN[0] = -2 Let CCD$[11,14] = "LOT " \ Goto L_3690
If N2[3] = 3 And UN[0] = -3 Let CCD$[11,14] = "LB  " \ Goto L_3690
If N2[3] = 1 Mat Read #26,PFU1[8],0;CCD$;
If N2[3] = 2 Mat Read #26,PFU1[9],0;CCD$;
If N2[3] = 3 Mat Read #26,UN[0],0;CCD$;
L_3690: Rem "convert unit price to desired u/m values
CNVTA = OLM[3] \ CNVTU[0] = 0
If L3[0] <> 0 Let UPRICE = OLM[3] \ Goto L_3825
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 2
CNVTA = L6[1] \ CNVTU[0] = 0
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 2 \ Gosub L_3900 \ L6[1] = J1
L_3825: CNVTA = W3[0] - W3[2] \ CNVTU[0] = 0
If Not(N2[4]) Let CNVTA = A[0] - A[3];CNVTU[0] = 0
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 1
Gosub L_3900 \ QAVAIL = J1
CNVTA = W3[1]
If Not(N2[4]) Let CNVTA = A[2]
CNVTU[0] = 0
Gosub L_3900 \ QONPO = J1
Return 
L_3900: Rem
Gosub L_20000
J1 = AMOUNT
Return 
!
L_4000: Rem "================================ sort break
IF N2[1] LET Z1=60 ELSE  LET Z1=52 ! "length of desc 2
IF N2[0]=4 OR N2[0]=5 LET Z1=52
if J8 if N2[1] goto SummaryPrintExit ! dx xml, detail format
!
if J8 ! dx xml, summary
  tmp$=""
  if N2[0]=5 let tmp$=Vendor$,fdel$,Buyer$,fdel$ 
  if n2[0]=4 let tmp$=Buyer$,fdel$,Vendor$,fdel$
  if L3[0] let tmp2$="+",S3$[1,12] else tmp2$=L1$[1,12]
  tmp$=tmp$,tmp2$,fdel$
  tmp$=tmp$,rtrim$(L6$[1,30]),fdel$,rtrim$(L6$[31,60]),fdel$
  tmp$=tmp$,BREAK$,fdel$
  tmp$=tmp$,T[3] Using "-------#.##",fdel$
  tmp$=tmp$,T[1] Using "--,---,--#.##",fdel$
  if transflg let tmp$=tmp$,LTrim$(transin_qty USING "--------#"),fdel$
  If L3[0] And CLPO let tmp2$="*" else tmp2$=""
  tmp$=tmp$,QONPO Using "--------#.## ",tmp2$,fdel$
  tmp$=tmp$,QAVAIL Using "--------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
else
  !If N2[0] = 4 Gosub L_5200 ! buyer fields
  IF n2[0]=2 GOSUB L_5200
  Print #0; Tab 81;"TOTALS: ";BREAK$;
  Print #0; Using "-------#.##"; Tab 103;T[3];
  Print #0; Using "--,---,--#.##"; Tab 119;T[1]
  IF TRANSFLG PRINT #0; USING "--------# (QTY ON TRANS)"; TAB 44;TRANSIN_QTY;	!"cct121930
  Print #0; Using "--------#.## (QTY ON PO )"; Tab 74;QONPO;
  If L3[0] And CLPO Print #0;"*";
  Print #0; Using "--------#.## (QTY AVAIL)"; Tab 102;QAVAIL
  Print #0;""
endif
V9[1] = V9[1] + 3
!
SummaryPrintExit:
FLAG1 = 0
BREAK$ = "" \ T[1] = 0 \ T[3] = 0
DIRW3[0] = 0;DIRW3[1] = 0;DIRW3[2] = 0
CLPO = 0
If N2[0] = 4 If N2[6] If BUYERHOLD$ <> K1$[1,3] Gosub L_5800
if n2[0]=5 if n2[6] if vendorhold$<>k1$[1,6] gosub L_5800
If N2[0] = 2 If N2[6] Gosub L_5800
!If N2[0] = 4 Let buyerhold$ = k1$[1,3] \ vendorhold$ = k1$[4,9] 
If N2[0] = 5 Let vendorhold$ = k1$[1,6] \ buyerhold$ = k1$[7,9] 
If N2[0] = 2 Let buyerhold$ = "  "                              
Return 
!
L_4500: Rem "================================ grand totals
if J8 return ! dx xml
!
Print #0; Tab 81;"GRAND TOTALS:";
Print #0; Using "-------#.##"; Tab 103;T[2];
Print #0; Using "---,---,--#.##"; Tab 118;T[0]
Return 
!
L_5000: Rem "========================================= print detail line
IF TRANSFLG			! "cct121930 - custom for morrisette
	FOR X=0 TO 12
		LET H0[X]=OLDH0[X];H5[X]=OLDH5[X]
	NEXT X
ENDIF 
if J8 if N2[1]=0 goto DetailPrintExit ! dx xml, summary format
!
if J8 ! dx xml, detail
  if N2[0]=4 or N2[0]=5 let tmp$=Vendor$,fdel$,Buyer$,fdel$ else tmp$=""
  if L3[0] let tmp2$="+",S3$[1,12] else tmp2$=L1$[1,12]
  tmp$=tmp$,tmp2$,fdel$
  tmp$=tmp$,rtrim$(L6$[1,30]),fdel$,rtrim$(L6$[31,60]),fdel$
  if N2[0]=4 let tmp$=tmp$,S3$[1,12],fdel$
  tmp$=tmp$,H0[4] Using "######",fdel$
  tmp$=tmp$,rtrim$(A1$[31,60]),fdel$
  tmp$=tmp$,H5[8] Using "##",fdel$
  tmp$=tmp$,H4[2] using "##",fdel$
  tmp$=tmp$,P0$[1,12],fdel$
  tmp$=tmp$,H0[7] Using "######",fdel$
  tmp$=tmp$,L3[2] using "###",fdel$
  X2 = H0[9] \ Gosub L_7700 ! mask order date
  tmp$=tmp$,X$,fdel$
  X2 = H0[10] \ Gosub L_7700 ! mask ship date
  tmp$=tmp$,X$,fdel$
  tmp$=tmp$,H0[11] Using "###",fdel$
  If T2[21] let tmp$=tmp$,"Yes",fdel$ Else let tmp$=tmp$,"None",fdel$
  tmp$=tmp$,QBORD Using "------#.##",fdel$
  tmp$=tmp$,CCD$[11,14],fdel$
  tmp$=tmp$,FNR(L7[3] * OLM[3]) Using "------#.##",fdel$
  !
  goto DetailPrintCont
endif
!
If Not(N2[1]) Goto L_5150
Print #0; Using "######"; Tab 7;H0[4];
Print #0; Tab 14;A1$[31,60];
Print #0; Using "## ##"; Tab 45;H5[8];H4[2];
Print #0; Tab 51;P0$[1,12];
Print #0; Using "######/###"; Tab 64;H0[7];L3[2];
X2 = H0[9] \ Gosub L_7700 \ Print #0; Tab 75;X$;
X2 = H0[10] \ Gosub L_7700 \ Print #0; Tab 85;X$;
Print #0; Using "###"; Tab 95;H0[11];
If T2[21] Print #0; Tab 99;"Yes"; Else Print #0; Tab 99;"None";
Print #0; Using "------#.##"; Tab 104;QBORD;
Print #0; Tab 115;CCD$[11,14];
Print #0; Using "--,---,--#.##"; Tab 119;FNR(L7[3] * OLM[3])
V9[1] = V9[1] + 1
!
DetailPrintCont:
If POH0[2]
  If PL2[2] Let X2 = PL2[2] Else Let X2 = POH0[4]
  gosub L_7700 ! mask po due date
  if J8 AND (POFLG OR STOCKFLG)
    tmp$=tmp$,POH0[2] Using "PO: ######  ","DUE :",X$,fdel$
  else
    Print #0; Using "PO: ######   "; Tab 50;POH0[2];
    Gosub L_7700 \ Print #0;"DUE: ";X$
    V9[1] = V9[1] + 1
  endif
else
  if J8 and(POFLG or STOCKFLG) let tmp$=tmp$,"",fdel$
End If 
if J8
  If L3[0] And CLPO let tmp2$="*" else tmp2$=""
  tmp$=tmp$,QONPO Using "--------#.## ",tmp2$,fdel$
  tmp$=tmp$,QAVAIL Using "--------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
endif
!
DetailPrintExit:
L_5150: RCTR = RCTR + 1
If N2[0] = 2 Let BREAK$ = K1$[1,12]
If N2[0] = 4 Let BREAK$ = K1$[10,21]
if n2[0]=5 let break$=k1$[10,21]
Return 
!
L_5200: Rem "===================== sub header
if J8 return ! dx xml
!
If FLAG1 and n2[0]<>2 Return 
!Print #0; Tab 1;K1$[4,9]; Tab 11;K1$[1,3];
if n2[0]=4 PRINT #0; TAB 1;buyerhold$; TAB 11;vendorhold$;
if n2[0]=5 print #0; tab 1;vendorhold$; tab 11;buyerhold$;
if n2[0]<>2
	If L3[0] Print #0; Tab 19;"+";S3$[1,20];
	If Not(L3[0]) Print #0; Tab 19;L1$[1,12];
	Print #0; Tab 32;L6$[1,30]; Tab 62;L6$[31,52];
else
	If L3[0] Print #0; Tab 1;"+";S3$[1,20];
	If Not(L3[0]) Print #0; Tab 1;L1$[1,12];
	Print #0; Tab 23;L6$[1,30]; Tab 53;L6$[31,52];
	
endif
Return 
!
L_5800: Rem "============================================ headings
if J8 return ! dx xml
!
! - If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 7
If Not(J8) Print #0;"\12\";
Print #0; Tab 10;DATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE:";V9[0]
Print #0;" - 446B - ";Msc$(3);
Print #0; Tab 48;"B A C K O R D E R  R E P O R T"
Print #0; Tab 51;"SORTED BY ";HEADER$;
print #0;" - BUYER #s: ";n1[2];" - ";n1[3]
If Not(N2[4])
  Print #0; Tab 51;"ALL WAREHOUSES ";
Else 
  Print #0; Using "WAREHOUSE ##/"; Tab 48;N2[4];
End If 
Print #0; Using "ORDER TYPE ##";N2[7]; \ Print #0;" - "; \ Print #0; Using "##";N2[8]
If N2[0] = 2 Print #0;" "
Print #0;""
Print #0;" "
If N2[0] = 2 Print #0; Tab 1;ITEM_LAB$; Tab 14;"DESCRIPTION 1"; Tab 45;"DESCRIPTION 2";
!If N2[0] = 4 Print #0; Tab 1;"BUYER #"; Tab 10;"VENDOR #"; Tab 18;ITEM_LAB$; Tab 32;"DESCRIPTION 1"; Tab 62;"DESCRIPTION 2";
IF n2[0]=4 
	IF N2[1]
		PRINT #0; TAB 1;"BUYER #"; TAB 10;"VENDOR #";TAB 19;"VENDOR NAME";TAB 49;ITEM_LAB$; TAB 63;"DESCRIPTION 1"; TAB 93;"DESCRIPTION 2";
	ELSE
		Print #0; Tab 1;"BUYER #"; Tab 10;"VENDOR #"; Tab 18;ITEM_LAB$; Tab 32;"DESCRIPTION 1"; Tab 62;"DESCRIPTION 2";
	ENDIF
Endif

IF n2[0]=5 
	IF N2[1]
		PRINT #0; TAB 1;"VENDOR #"; TAB 11;"VENDOR NAME";TAB 41;"BUYER #"; TAB 49;ITEM_LAB$; TAB 63;"DESCRIPTION 1"; TAB 93;"DESCRIPTION 2";
	ELSE
		PRINT #0; TAB 1;"VENDOR #"; TAB 10;"BUYER #"; TAB 18;ITEM_LAB$; TAB 32;"DESCRIPTION 1"; TAB 62;"DESCRIPTION 2";
	ENDIF
Endif
if not(transflg)
	If N2[1] Print #0;"" Else Print #0; Tab 105;"QTY B/ORD"; Tab 121;"EXTENSION"
else
	IF N2[1] PRINT #0;"" ELSE  PRINT #0; TAB 112;"QTY B/ORD"; TAB 124;"EXTENSION"
endif
Print #0;""
Return 
!
L_5900: Rem "===================== sub header
if J8 return ! dx xml
!
If E = 2 Goto L_5925
If Not(N2[1]) If V9[1] > V9[4] - 1 Gosub L_5800
IF N2[1] LET Z1=60 ELSE  LET Z1=52 ! "length of desc 2
IF N2[0]=4 OR N2[0]=5 LET Z1=52

IF N2[0]=2
	IF L3[0] 
		PRINT #0; TAB 1;"+";S3$[1,11]; ! "non-stk (vendor #)
	ELSE
		PRINT #0; TAB 2;L1$[1,12];
	ENDIF
	PRINT #0; TAB 14;L6$[1,30]; TAB 45;L6$[31,Z1];
	if custom_customer$="GPG"
		print #0;tab 80;"[ ";pruda$[1,4];" ]";
	ENDIF
ENDIF

IF N2[0]=4 
	IF NOT(N2[1])
		PRINT #0; TAB 1;buyerhold$; tab 11; vendorhold$;    ! K1$[4,9]; TAB 11;K1$[1,3];
		IF L3[0] 
			PRINT #0; TAB 19;"+";S3$[1,12];
		ELSE
			PRINT #0; TAB 19;L1$[1,12];
		ENDIF
		PRINT #0; TAB 32;L6$[1,30]; TAB 62;L6$[31,Z1];
	ELSE
		key_vend$ = vendorhold$ \ gosub get_vend_name
		PRINT #0; TAB 1;buyerhold$;
		print #0; tab 10;vendorhold$; tab 17;a_vend$[1,30];
		IF L3[0] 
			PRINT #0; TAB 49;"+";S3$[1,12];
		ELSE
			PRINT #0; TAB 49;L1$[1,12];
		ENDIF
		PRINT #0; TAB 63;L6$[1,30]; TAB 93;L6$[31,Z1];
	ENDIF
ENDIF

if n2[0]=5 
	!IF NOT(N2[1])
	!	print #0; tab 1;vendorhold$; tab 11;buyerhold$; 
	!	IF L3[0] 
	!		PRINT #0; TAB 19;"+";S3$[1,12];
	!	ELSE
	!		PRINT #0; TAB 19;L1$[1,12];
	!	ENDIF
	!	PRINT #0; TAB 32;L6$[1,30]; TAB 62;L6$[31,Z1];
	!ELSE
		gosub vendor_subheader
	!ENDIF
ENDIF
LET FLAG1=1
!IF N2[0]=4 OR N2[0]=5 IF L3[0] PRINT #0; TAB 19;"+";S3$[1,12];
!IF N2[0]=2 IF L3[0] PRINT #0; TAB 1;"+";S3$[1,11]; ! "non-stk (vendor #)
!IF N2[0]=4 OR N2[0]=5 IF NOT(L3[0]) PRINT #0; TAB 19;L1$[1,12];
!IF N2[0]=2 IF NOT(L3[0]) PRINT #0; TAB 2;L1$[1,12];
!IF N2[1] LET Z1=60 ELSE  LET Z1=52 ! "length of desc 2
!IF N2[0]=4 OR N2[0]=5 LET Z1=52
!IF N2[0]=4 OR N2[0]=5 PRINT #0; TAB 32;L6$[1,30]; TAB 62;L6$[31,Z1];
!IF N2[0]=2 PRINT #0; TAB 14;L6$[1,30]; TAB 45;L6$[31,Z1];
L_5925: IF N2[1] PRINT #0;"" \ PRINT #0;"" \ LET V9[1]=V9[1]+2 ! "full detail
IF NOT(N2[1]) GOTO L_5950: ! "summary
!IF N2[0]=4 OR (N2[0]=5
!	IF L3[0] PRINT #0; TAB 1;"VENDOR ITEM # ";S3$[1,12]
!	IF NOT(L3[0]) PRINT #0; TAB 1;"VENDOR ITEM # ";A$[93,112]
!	PRINT #0; TAB 1;" "
!	LET V9[1]=V9[1]+2
!endif
PRINT #0; TAB 8;"CUST #"; TAB 15;"NAME"; TAB 46;"DV"; TAB 49;"WH";
PRINT #0; TAB 53;"CUST PO"; TAB 64;"ORDER/LINE"; TAB 75;"ORD DATE";
PRINT #0; TAB 84;"SHIP DATE"; TAB 95;"SP"; TAB 99;"HOLD";
PRINT #0; TAB 105;"QTY B/ORD"; TAB 115;"U/M"; TAB 121;"EXTENSION"
PRINT #0;""
LET V9[1]=V9[1]+2
L_5950: Return 


vendor_subheader: rem used in 2 places
		key_vend$=vendorhold$ \ gosub get_vend_name
		print #0; tab 1;vendorhold$; tab 11;a_vend$[1,30];
		PRINT #0; tab 42;buyerhold$;  ! k1$[1,6]; tab 11;k1$[7,9]; ! "sort by vendor
		IF L3[0] 
			PRINT #0; TAB 49;"+";S3$[1,12];
		ELSE
			PRINT #0; TAB 49;L1$[1,12];
		ENDIF
		PRINT #0; TAB 63;L6$[1,30]; TAB 93;L6$[31,Z1];
return

!
L_6000: Rem "get whse rec for product
For W = 0 To 2 \ W1[W] = 0 \ Next W
For W = 0 To 9 \ W2[W] = 0 \ Next W
For W = 0 To 24 \ W3[W] = 0 \ Next W
If L3[0] Return 
BUYER = 0
If P9$[33,33] = "N" Return 
W$ = " ",W$
W$[1,12] = L1$[1,12]
W$[13,14] = H4[2] Using "##"
Search #20,2,1;W$,W9,E 
If E Goto L_6100
MAT  READ #20,W9,0;W1$;	! "cct121930
Mat Read #20,W9,38;W2;
Mat Read #20,W9,78;W3;
Mat Read #20,W9,32;W1;
BUYER = W1[2]
If W2[3] Let VENDOR = W2[3]
L_6100: Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
!try Call dxclose() else rem
call ERPCronSuccess()
End 
!
! - V9[0] = 99
! - Chain "MX446"
!
L_9100: Rem END OF THIS RANGE
If RCTR Gosub L_4000
Gosub L_4500
! - Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE "; \ Input ""J$
Goto OUTEND
! 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - was If Spc(4) > 1280 Goto L_20120

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2]
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[15] = CTWT
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
L_31000: !ADD UP TRANSFER QTY		! "custom for morrisette  cct121930
LET TRANSIN_QTY=0
FOR X=0 TO 12
	LET OLDH0[X]=H0[X];OLDH5[X]=H5[X]
NEXT X
IF L3[0]<>0 RETURN 
LET KTR$=" ",KTR$;KTR$[1,6]=PROD_REC USING "######"
L_31030: SEARCH #11,3,2;KTR$,LINE_REC,E8
IF E8 GOTO L_31360:
LET X2=KTR$[1,6]
IF PROD_REC<>X2 GOTO L_31360:
MAT  READ #11,LINE_REC;L2;
MAT  READ #11,LINE_REC,168;LL7;
FOR X=0 TO 12
	LET H0[X]=0;H5[X]=0
NEXT X
FOR ST=1 TO 7
	LET K12$[1,2]=ST USING "##"
	LET K12$[3,8]=L2[1] USING "######"
	SEARCH #8,2,1;K12$,R12,E8 ! \ IF E8>1 GOSUB ERR_SEARCH:
	IF E8 GOTO L_31310:
	MAT  READ #8,R12,0;H0;
	MAT  READ #8,R12,104;H5;
	GOTO L_31320:
L_31310: NEXT ST
GOTO L_31030:
L_31320: IF H5[7]<>16 GOTO L_31030:
IF H5[11]<>N2[4] GOTO L_31030:
LET TRANSIN_QTY=TRANSIN_QTY+(LL7[2]-LL7[0])
GOTO L_31030:
L_31360: REM GET MORE TRANSFER INFO
LET COMP=IntCo ! INT((SPC 5-INT(SPC 5/16384)*16384)/64)
LET K16$=" ",K16$ \ LET K16$[1,12]=W1$[1,12]
L_31380: SEARCH #16,3,2;K16$,R[16],E8 \ IF E8 GOTO L_31510:
! IF E8 GOSUB ERR_SEARCH:
IF K16$[1,12]<>W1$[1,12] GOTO L_31510:
MAT  READ #16,R[16],0;TRL1;
IF TRL1[0]=2 GOTO L_31380:
IF TRL1[7]<>0 GOTO L_31380:
MAT  READ #16,R[16],22;TRL3;
MAT  READ #15,TRL3[1],0;TR1;
IF COMP<>TR1[4] GOTO L_31380:
IF W1<>TR1[5] GOTO L_31380:
IF TR1[1]<>2 GOTO L_31380:
LET TRANSIN_QTY=TRANSIN_QTY+(TRL3[3])
GOTO L_31380:

L_31510: RETURN

get_vend_name: !! get the vendor name
!	if key_vend$<>vendorhold$
	!key_vend$=vendorhold$
	A_vend$=" ",A_VEND$
	SEARCH #CH_VEND,2,1;KEY_VEND$,REC_VEND,E
	IF E=0 MAT READ #CH_VEND,REC_VEND,0;A_VEND$;
!	endif
return

!
else ! main try
	include "src/callmainerrnet.inc"
End try
end
