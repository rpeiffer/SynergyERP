! >>> Program 528
!
! description Accounts Payable Void Check Journal/Accept
! loadsave -w -n 100,10 -o prog/dxport/528.dl4 src/528.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV  9, 2006  16:42:29
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/la528.src (univ2) [bill] {54561}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenFile

Rem LA528 ACCOUNT PAYABLE VOID CHECK JOURNAL
Rem LAST UPDATE: 3/91 - MTK - MULTIPLE BANKS V4
Rem              04/28/1997 - M1[1](M) IS JULIAN
Try
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[800],rstr$[2000] ! error 
dim xdate$[50]
Dim 2%,C4[4],JRNL,3%,Q[7],T[8],1%,BANK,3%,SPEC[50]
dim 1%,apt1[1],2%,apdt2,apt1$[12],3%,apt3[1],rec_apdt
dim 1%,xapt1[1],2%,xapdt2,xapt1$[12],3%,xapt3[1],rec_xapdt
dim 1%,a2ccurrid,3%,a2ccurrfact
dim 1%,currpass
dim 1%,apbCURRID,3%,apbCURRFACT,keycurr$[30],currdesc$[30],2%,bnk_currid,3%,curr_rate
dim 1%,cnvcu[10],3%,cnvca[10]
dim 1%,oiCURRID,3%,oicurrfact
dim 1%,aph_CURRID,3%,aph_currfact
dim 3%,aphmerch,aphfreight,aphmisc,grossapamt,discapamt,netapamt,currvaramt,grosspayamt, discamt, checkamt
dim 3%,glexchamt,glexchacct,vcvaramt
dim p61$[256],currdesc$[30]
Dim 1%,C0[6],E,I,L,N1[1],P,S6,S7,S[1],X1,N3,B9,DEPT
Dim 2%,C3[1],D0,F9[4],G9[3],M[3],N[2],DIV
Dim 2%,S1[8],S5[1],X,X2,DT3[1],SCRATCH
Dim 3%,R[50]
Dim 3%,N2[3],S2[4],S8[2],T1[5],T9[5],T7[4],A6[2],DIVTOT[3]
Dim 3%,BNKTOT[2]
Dim A$[15],D1$[25],D2$[77],F$[16],G8$[2],G9$[40],H$[68],K1$[30]
Dim K2$[30],K3$[30],K4$[30],N$[30],P$[8],Q$[9],R$[63],J$[20]
Dim R2$[4],S$[12],S5$[12],S6$[12],U5$[10],X$[10],A5$[30],I$[50]
Dim K18$[10],K50$[10],K49$[10],K5$[20],DV1$[12],DV2$[12],DV3$[12],ACPER$[4]
Dim P9$[50],KEYGLAP$[50],CHECKDATE$[6],2%,COMP,AJRNL
Dim 1%,CDTMP0[1],2%,CDTMP1[1],3%,CDTMP2[2],CDTMP3[2],KEYCDT$[30]
dIM GROUPID$[1]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim 3%

Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=intCO
REC_UAC = GetUIDRec(e$,IntCo,Userid$) 

for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
mat read #1,61,0;p61$;
! verify current account period
! need control file open first
Read #1,0,134;apdate; !current ap date yymmdd format                   
tmp$ = apdate Using "&&&&&&" \ tmp1$ = tmp$[3,4],"/",tmp$[1,2] !mm/yy
Call dxget("u_apdate",tmp$)
if rtrim$(tmp$)<>rtrim$(tmp1$) 
	Call dxset("u_apdate",tmp1$)                                              
	yy = tmp1$[4,5] \ mm = tmp1$[1,2] \ mm = mm + 1 
	If mm > 12
		Let mm = 1 \ yy = yy + 1
	endif                                                                       
	tmp1$ = mm Using "&&","/",yy Using "&&"                                   
	Call dxset("u_nextapdate",tmp1$)
	Call AddToStr(e$,rstr$,esdel$) !end section -- DXBLOCK
	returnstatus=1
	let message$="Please Re-Select Accounting Period"
	tmp$ = rtrim$(blockid$)
	Call env(2,"NEXTBLOCK",tmp$)                                          
	Call SetOutPut(e$,rstr$,returnstatus,message$)! ,1) !1 flag puts 0 status section, puts </page>
	end
endif
eflag=0
returnstatus=0 ! blockid no errors
Dim 3%
Call dxget("SELECMONTH",tmp$) \ tmp3=rtrim$(tmp$)
if tmp3<1 or tmp3>2
	let returnstatus=1
	let eflag=eflag+1
	message$="Invalid Accounting Period Selected" 
	goto L_9060
endif
MAT  READ #1,0,134;apdate;     ! yymmdd                             
LET tmp$=apdate USING "&&&&&&"                               
let acctper=tmp$[1,4]
let c4[0]=0
if tmp3=2
	let c4[0]=1
	LET tmpmth=tmp$[3,4]                                         
	LET tmpmth=tmpmth+1                                            
	IF tmpmth>12 ! next year
		LET tmpmth=1                                      
		tmpyr=tmp$[1,2]
		tmpyr=tmpyr+1
		if tmpyr>99 let tmpyr=0
		let tmp$[1,2]=tmpyr using "&&"
		let tmp$[3,4]=tmpmth using "&&"
	else
		LET tmp$[3,4]=tmpmth USING "&&"
	endif
	let acctper=tmp$[1,4]
endif
Call Dxget("POSTDAY",tmp$)	
let tmp3=tmp$
if tmp3=0 or tmp3>31
	eflag=eflag+1
	let returnstatus=1
	message$="Invalid Posting Day Submitted"
	goto L_9060
endif
let tmp$=tmp3 using "&&"
let tmp1$=acctper using "&&&&"
let xdate$=tmp1$[1,4],tmp$[1,2]
let postdate=xdate$     ! yymmdd format          
Call DateToJulian(5,XDATE$,XDATE$,errflag)   
If (errflag)  
	eflag=eflag+1
	ReturnStatus = 1                           
	 Message$ = "Invalid Posting Day Submitted"    
	Goto L_9060                         
End If                                       

c4[1]=acctper

let xdate$=POSTDATE using "&&&&&&"
let tmp$=xdate$[3,6],xdate$[1,2] 
c4[2]=tmp$ ! posting date in mmddyy format
c4[3]=1 ! default lu for a10in file
c4[4]=postdate ! yymmdd
Call dxget("PRPRT",tmp$)     
audonly = 0 \ If tmp$ <> "" Let audonly = 1
!
Mat Read #1,88,16;F$;
Open #15,F$
Mat Read #1,88,48;F$
Open #16,F$
 
Mat Read #1,19,50;P9$;

G8$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
g8$[2,2]=groupid$
K2$ = " 0"
Search #15,2,1;K2$,R[15],E
if e<>0
	eflag=eflag+1
	returnstatus=1
	Message$="RECORD '0' NOT FOUND IN A00AP" 
	goto L_9060
endif
L_660: Mat Read #15,R[15],2;R$;
If P9$[17,17] <> "Y"
  If R$[60,60] =" " 
	 returnstatus=1
	eflag=eflag+1
	Message$="UPDATE IN PROCESS ELSEWHERE...TRY AGAIN LATER.."
	Goto L_9060
	End If 
ENDIF
L_665: Rem open files
If P9$[17,17] = "Y"
  F$ = COMP Using "6/GLCDTEMP#"
  Open #75,F$
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,2,1;KEYGLAP$,R,E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    If Not(RESTART)
     	returnstatus=1
	Eflag=eflag+1
	message$="Cash Disbursement Transactions are in Process Elsewhere "
      Goto L_9060
    End If 
  Else 
    E = 2 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
    Search #75,4,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  End If 
  F$ = COMP Using "4/GLCDDETL#"
  Open #77,F$
End If 
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #2,F$
F$ = R$[35,35],"/A10VC",G8$[1,2] \ Open #3,F$
F$ = R$[53,53],"/A20OI",G8$[1,2] \ Open #4,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Open #5,F$
F$ = R$[43,43],"/A50CR",G8$[1,2] \ Open #17,F$
For I = 12 To 14
  Read L \ Mat Read #1,88,Abs(L);F$;
  If L <= 0 Ropen #I,F$ Else Open #I,F$
Next I
Data "432","448","112"
Mat Read #1,51,10;DEPT; \ Mat Read #1,51,18;C0;
If C0[6] ! ap divisions
  F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #18,F$
  F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #19,F$
  F$ = rec_uac Using "2/APVCTEMP&&&&"
  tmp$= "FILES/",f$
  I$ = "[1:12] ",TMP$,"!"
  Build #50,I$
  R[50] = 2 \ Search #50,0,1;I$,R[50],E \ If E Gosub ERR_SEARCH
  R[50] = 1 \ Search #50,0,0;I$,R[50],E \ If E Gosub ERR_SEARCH
  tRY Close #50 eLSE rEM
  Open #50,F$
  F$ = rec_uac Using "2/APBNKTEMP&&&&"
  tmp$= "FILES/",f$
  I$ = "[1:12] ",TMP$,"!"
  Build #49,I$
  R[49] = 2 \ Search #49,0,1;I$,R[49],E \ If E Gosub ERR_SEARCH
  R[49] = 1 \ Search #49,0,0;I$,R[49],E \ If E Gosub ERR_SEARCH
  tRY Close #49 Else Rem
  Open #49,F$
End If 
F$ = COMP Using "2/APDETT#"
Open #81,F$
if p61$[136,136]="Y"
	ch_curr=OpenFile(9712,intCo) \ If Ch_curr = -1 Error 42 ! currency header file
endif
Call dxget("BANKID",tmp$)
if rtrim$(tmp$)="A" 
	let bankid=0
	let currid=0
	let curr_rate=0
	currpass=0
	CURRDESC$=" ",CURRDESC$
	tmp3=0
	if p61$[136,136]="Y"
		let tmp3=0
		let bankid=0
		let K1$=" ",K1$
		do
			search #3,3,1;K1$,R[3],e
			if e=2
				if not(tmp3)
					let returnstatus=1
					let message$="No Voided Checks are Available to be Registered"
					goto L_9010:
				endif
				exit do
			endif
			if e<>0
				let returnstatus=1
				let message$="Error in Void Check File "
				goto L_9010:
			endif
			let tmp3=K1$[1,2]
			K4$ = tmp3 Using "##"
			Search #14,2,1;K4$,R[14],E 
			mat read #14,r[14],54;bnk_currid;
			currid=bnk_currid
			if bankid<>0 and tmp3<>bankid
				let returnstatus=1
				let message$="Multiple Currency Banks! Bank "+str$(bankid)+" Is in another Currency. Please select individual bank "
				goto L_9010:
			endif
			if bnk_currid<>0
				if bankid<>0 and tmp3<>bankid
					let returnstatus=1
					let message$="Multiple Currency Banks! Bank "+str$(bankid)+" Is in another Currency. Please select individual bank "
					goto L_9010:
				endif
				let bankid=tmp3
				LET CURRPASS=1
				LET CURRID=BNK_CURRID
				let keycurr$=bnk_currid using "####"
				search #ch_curr,2,1;keycurr$,rec_curr,e
				if e<>0
					let returnstatus=1
					let message$="Bank "+str$(bankid)+" Has Invalid Currency Id"
					goto L_9010:
				else
					mat read #ch_curr,rec_curr,2;currdesc$;
					mat read #ch_curr,rec_curr,846;curr_rate;
					if curr_rate<>0 let currpass=1
				endif
			endif
			if tmp3+1>99 exit do
			let k1$=" ",k1$
			let k1$[1,2]=(tmp3+1) using "##"
		loop	
	endif
else
	let bankid=tmp$
	if bankid<1 or bankid>99
		let returnstatus=1
		let eflag=eflag+1
		message$="Invalid Bank Selected. " 
		goto L_9010:
	endif
	K4$ = bankid Using "##"
	Search #14,2,1;K4$,R[14],E 
	if e<>0
		let returnstatus=0
		let eflag=eflag+1
		message$="Bank "+str$(bankid)+" Not On File "
		goto L_9010:
	endif
	LET CURR_RATE=0
	LET CURRPASS=0
	CURRDESC$=" ",CURRDESC$
	if p61$[136,136]="Y"
		mat read #14,r[14],54;bnk_currid;
		currid=bnk_currid
		if bnk_currid<>0
			let keycurr$=bnk_currid using "####"
			search #ch_curr,2,1;keycurr$,rec_curr,e
			if e<>0
				let returnstatus=1
				let message$="Bank "+str$(bankid)+" Has Invalid Currency Id"
				goto L_9010:
			else
				mat read #ch_curr,rec_curr,2;currdesc$;
				mat read #ch_curr,rec_curr,846;curr_rate;
				if curr_rate<>0 let currpass=1
			endif
		endif
	endif
endif


!!! stop here

K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R2$;
K2$ = " ",K2$ \ K2$[3,6] = R2$
Search #16,2,1;K2$,R[16],E
If E Gosub ERR_SEARCH
Mat Read #16,R[16],10;G9$;
!L_1100: Rem SELECT POSTING PERIOD
!Print 'CS'; Tab 20;G9$[1,40]
!Print Tab 20;"VOID CHECK JOURNAL"
Mat Read #1,0,134;D0;
X$ = D0 Using "######"
X$ = C4[1] Using "&&&&" \ ACPER$ = C4[1] Using "&&&&"

If P9$[17,17] <> "Y"
BLDA10IN: Rem BUILD MONTHLY INTERFACE FILE IF NEEDED
  F$ = R$[60,60],"/A10IN",G8$[1,2],X$[1,4]
  Call FindF(F$,X2)
  If Not(X2)
    Gosub L_9700
    Goto BLDA10IN
  End If 
  Open #11,F$
End If 
BLDAM0CR: Rem BUILD MONTHLY CHECK REGISTER FILE IF NEEDED
F$ = R$[41,41],"/AM0CR",G8$[1,2],X$[1,4]
Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0CR
End If 
Open #8,F$
BLDAM0CD: Rem BUILD MONTHLY CHECK REGISTER DIST IF NEEDED
F$ = R$[42,42],"/AM0CD",G8$[1,2],X$[1,4]
Call FindF(F$,X2)
If Not(X2)
  Gosub L_9700
  Goto BLDAM0CD
End If 
Open #9,F$
K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Read #15,R[15],6;Q$;
Q[0] = Q$
Read #15,R[15],24;Q$;
Q[1] = Q$
Read #15,R[15],132;Q$;
Q[2] = Q$
Read #15,R[15],96;Q$;
Q[3] = Q$
Read #15,R[15],114;Q$;
Q[4] = Q$
Read #15,R[15],150;Q$;
Q[5] = Q$
F9[1] = 0
F9[2] = 0
D2$ = "ACCTS PAY  CREDIT MEMOCASH       MANUAL CHK DISCOUNT   SUSPENSE   "
L = 99 \ G9 = 0 \ B9 = 0
Gosub L_8000
Read #1,51,52;AJRNL;
JRNL = AJRNL + 1
If JRNL <= 0 Let JRNL = 1
If JRNL > 999999 Let JRNL = 1
Write #1,51,52;JRNL;
startpass: ! 
let f9=0
for ctr=0 to 8\let t[ctr]=0\next ctr
for ctr=0 to 5
	let t9[ctr]=0
	let t1[ctr]=0
next ctr
L = 99 \ G9 = 0 \ B9 = 0

K1$ = " ",K1$
if bankid<>0
	let k1$[1,2]=bankid using "##"
endif
!If Err 0 Gosub ERR_ESCAPE
L_2000: E = 0 \ Search #3,3,1;K1$,R[3],E
If E = 2 Goto L_4000
If E Gosub ERR_SEARCH
if  bankid<>0
	let tmp3=k1$[1,2]
	if tmp3<>bankid goto L_4000:
endif
Mat Read #3,R[3],40;N3;
If B9<>0
	If B9 <> N3 Gosub L_4300
endif
If B9 <> N3 Gosub L_3200
Mat Read #3,R[3],0;N;
Mat Read #3,R[3],12;N1;
Mat Read #3,R[3],16;N2;
Mat Read #3,R[3],42;N$;
Rem GOSUB L_3100: !MOVE PRINTING OF CK HEADING SO POSTING DATE CAN BE CK
K2$ = " ",K2$ \ K2$[1,6] = N[2] Using "######"
K2$[7,12] = N[0] Using "######" \ K2$[20,20] = "9" ! apdeth
Search #12,2,1;K2$,R[12],E
If E Gosub ERR_SEARCH
Mat Read #12,R[12],0;S; \ Mat Read #12,R[12],4;S$;
Mat Read #12,R[12],16;S1;
Mat Read #12,R[12],52;S2;
Gosub L_3100 ! print check heading
let apt1[1]=0 ! currid
let apt3[0]=0 ! currency factor
let apt3[1]=0 ! currency variance
if p61$[136,136]="Y"
	search #81,2,1;k2$,rec_apdt,e
	if not(e)
		mat read #81,rec_apdt,0;apt1;
		mat read #81,rec_apdt,16;apt2;
		mat read #81,rec_apdt,40;apt1$;
		mat read #81,rec_apdt,82;apt3;
	endif
endif
F9 = 0
K3$ = " ",K3$ \ K3$[1,6] = R[12] Using "######"
L_2100: Search #13,3,1;K3$,R[13],E
If E = 2 Goto L_2200
If E Gosub ERR_SEARCH
X2 = K3$[1,6]
If X2 <> R[12] Goto L_2200
Mat Read #13,R[13],0;S5; \ Mat Read #13,R[13],8;S6; \ Mat Read #13,R[13],36;S8;
If S1 <> S8[2] Goto L_2100
Mat Read #13,R[13],12;S5$; \ Mat Read #13,R[13],22;S7;
If S7 > 7 Goto L_2100
Mat Read #13,R[13],24;S6$; \ Mat Read #13,R[13],36;S8;
K4$ = " ",K4$ \ K4$[1,6] = S5[1] Using "######"
K4$[7,18] = S6$[1,12] \ K4$[19,20] = S7 Using "##"
Search #12,2,1;K4$,R,E
If E Gosub ERR_SEARCH
Read #12,R,20;M;
Mat Read #12,R,48;DIV;
let xapt3[1]=0
if p61$[136,136]="Y" !  and currpass<>0
	search #81,2,1;k4$,rec_xapdt,e
	if not(e)
		mat read #81,rec_xapdt,0;xapt1;
		mat read #81,rec_xapdt,82;xapt3;		
	else
		let xapt3[0]=apt3[0]
		let xapt3[1]=0
	endif
	if xapt3[0]=0
		let xapt3[1]=0
	endif
	if xapt3[0]=apt3[0] ! same currency
		let xapt3[1]=0
	else
		if currpass=0 and xapt3[0]<>0 and apt3[0]<>0
			let xapt3[1]=S8[0]-S8[1]
			let cnvcu[0]=1
			let cnvcu[1]=1
			let cnvca[0]= xapt3[1]
			let cnvca[1]=xapt3[0]
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
			let amount=(cnvca[0])
			let cnvcu[0]=2
			let cnvcu[1]=1
			let cnvca[0]= amount 
			let cnvca[1]=apt3[0]
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
			let amount=fnr(cnvca[0])
			let xapt3[1]=xapt3[1]-amount
		else
			let xapt3[1]=0
		endif
	endif
	!Print #0; Using "------,---.##"; Tab 51;S8;
	! Print #0; Using "------,---.##"; Tab 66;S8[1];
	if xapt3[0]<>0 and currpass<>0
		let cnvcu[0]=1
		let cnvcu[1]=1
		let cnvca[0]= S8
		let cnvca[1]=xapt3[0]
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
		let S8=fnr(cnvca[0])
		let cnvcu[0]=1
		let cnvcu[1]=1
		let cnvca[0]= S8[1] 
		let cnvca[1]=xapt3[0]
		call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$ ! bring up to bank currency based on open item
		let S8[1]=fnr(cnvca[0])
	endif
endif
X2 = M \ Gosub L_7890
M = DT3[0]
Gosub L_5800
Gosub L_5000
F9[1] = F9[1] + 1
F9 = 99
If C0[6] Gosub L_7600
Goto L_2100
L_2200: If Not(F9) Goto L_2300
Gosub L_3000
Goto L_2000
L_2300: !Print 'CS CL RB';"NO TRANSACTIONS FOUND FOR CHECK# ";N[0];
!Print @0,23;'CL RB';"PRESS <CR> TO ABORT PRINT ";
!Input Len (16384 + 1);""F$
eflag=eflag+1
message$=message$+"NO TRANSACTIONS FOUND FOR CHECK# "+str$(n[0])
Goto OUTEND
L_3000: Rem PRINT CHECK TOTAL
If Not(T1[0] + T1[1] + T1[2] + T1[3] + T1[4] ) Return 
Gosub L_5800
Print #0; Tab 25;"CHECK TOTALS";
!Print #0; Using "------,---.##"; Tab 51;T1[0]; Tab 66;T1[1]; ! Tab 81;T1[2];
Print #0; Using "-------,---.##"; Tab 50;T1[0]; Tab 65;T1[1];
IF P61$[136,136]="Y" and currpass=0 and curr_rate<>0
	Print #0; Using "---,---,---.##"; Tab 81;(T1[2]-T1[4]);
	Print #0; Using "------,---.##"; Tab 96;T1[4];
ELSE
	Print #0; Using "---,---,---.##"; Tab 81;T1[2]; 
endif
Print #0;" "
Print #0;" "
L = L + 1
For I = 0 To 4
  T9[I] = T9[I] + T1[I]
  T7[I] = T7[I] + T1[I]
  T1[I] = 0
Next I
let totrec=totrec+1
Return 
L_3100: Rem PRINT CHECK HEADING
L = L + 1
Gosub L_5800
X2 = N[1] \ Gosub L_8900
Print #0; Using "######";"CHECK : ";N[0];"    ";P$
Print #0; Using "######";"VENDOR : ";N[2];"   ";N$[1,30]
Rem COMPUTE PERIOD FROM DATE & COMPARE
SCRATCH = Int(S1[2] / 100)
If SCRATCH = C4[1] Return 
If C4[0] = 0 If SCRATCH = C3[1] !IF IT MATCHES THE WRONG MONTH
  Print #0;"  ***** WARNING ****** CANNOT VOID CHECK. PAID IN NEXT MONTH.  PLEASE VOID IT IN THAT MONTH  *******"
  F9[2] = 99
  Return 
End If 
If C4[0] = 1 If SCRATCH = C3[0] !IF IT MATCHES THE WRONG MONTH-2nd poss choice
  Print #0;"  ***** WARNING ****** CANNOT VOID CHECK. PAID IN CURRENT MONTH.  PLEASE VOID IT IN THAT MONTH  *******"
  F9[2] = 99
  Return 
End If 
If SCRATCH <> C3[0] If SCRATCH <> C3[1] Return 
Rem not sure if it WILL EVER GET THIS FAR DOWN
Return 
L_3200: Rem PRINT BANK HEADING
A5$ = "BANK NOT ON FILE!!!"
K2$ = N3 Using "##"
Search #14,2,1;K2$,R[14],E \ If E Goto L_3250
Mat Read #14,R[14],2;A5$;
L_3250: Gosub L_5800
Print #0; Using "##   ";"BANK: ";N3;A5$[1,30]
Print #0;" " \ Gosub L_5800
B9 = N3
Return 

L_4000: Rem TOTAL PRINT
Gosub L_4300
Gosub L_5800
Print #0;" "
Print #0;"** TOTALS **";
Print #0; Using "---,---,---.##"; Tab 50;T9[0];
Print #0; Using "---,---,---.##"; Tab 65;T9[1]; !Tab 81;T9[2];
IF P61$[136,136]="Y" and currpass=0 and curr_rate<>0
		Print #0; Using "---,---,---.##"; Tab 81;(T9[2]-T9[4]);
		Print #0; Using "------,---.##"; Tab 96;T9[4];
ELSE
	Print #0; Using "---,---,---.##"; Tab 81;T9[2]; 
endif
For I = 0 To 4
  T9[I] = 0
Next I
Gosub L_5800
Print #0;" "
if p61$[136,136]="Y" and currpass<>0 and curr_rate<>0
	For ctr = 0 To 8 \ t[ctr] = 0 \ Next ctr 
	For ctr = 0 To 5                         
		T9[ctr] = 0                            
		T1[ctr] = 0                            
	Next ctr                                 
	for ctr = 0 to 7 \ let t8[ctr]=0 \ next ctr
	let l=99
	gosub L_8000:
	let currpass=0
	goto startpass:
endif
Gosub L_5800
Print #0; Tab 20;"* * * * *  DISTRIBUTION AUDIT LIST  * * * * *"
Print #0;" "
T[5] = T[0] + T[1] + T[2] + T[3] + T[4]+ T[7]
If C0[6] Goto L_4600
For X = 0 To 7
  If X = 3 Goto L_4120
  If X = 2 Goto L_4120
  if x = 7 goto L_4120
  If Not(T[X]) Goto L_4120
  Gosub L_5800
  Print #0; Using "########"; Tab 20;Q[X];
  Print #0; Tab 30;D2$[X * 11 + 1,X * 11 + 11];
  Print #0; Using "------,---.##"; Tab 52;T[X]
L_4120: Next X
K2$ = " ",K2$
IF BANKID>0 LET K2$=(BANKID-1) USING "##"
L_4140: Search #14,3,1;K2$,R[14],E \ If E = 2 Goto L_4200
If E Gosub ERR_SEARCH
IF BANKID<>0
	LET TMP3=K2$[1,2]
	IF TMP3>BANKID GOTO L_4200
	if tmp3<>bankid goto L_4140
endif
Mat Read #14,R[14],32;A6; ! \ If Not(A6[2]) Goto L_4140
Mat Read #14,R[14],2;A5$;
if A6[2]<>0
	Gosub L_5800
	Print #0; Using "########"; Tab 20;A6;
	Print #0; Tab 30;A5$[1,23];
	Print #0; Using "-----,---.##"; Tab 53;A6[2]
endif
IF P61$[136,136]="Y" and currid<>0
	mat read #14,R[14],116;GLEXCHACCT;
	mat read #14,R[14],128;VCEXCHAMT;
	IF VCEXCHAMT<>0
		Gosub L_5800
		Print #0; Using "########"; Tab 20;GLEXCHACCT;
		Print #0; Tab 30;RTRIM$(A5$[1,23]);"Var";
		Print #0; Using "-----,---.##"; Tab 53;VCEXCHAMT
	ENDIF
endif
Goto L_4140
L_4200: !If Err 0 Rem
If F9[2] <> 0
  Print #0;" "
  Print #0;" WARNING: ATTEMPTING TO VOID CHECKS IN THE WRONG MONTH. ACCEPT ABORTED"
  let eflag=eflag+1
  let message$=message$+"WARNING: ATTEMPTING TO VOID CHECKS IN THE WRONG MONTH. ACCEPT ABORTED"
End If 
!Close #0
!If Err 0 Gosub ERR_TRAP
If F9[2] <> 0
  !Print 'CR CL';"WARNING: CANNOT ACCEPT. ATTEMPTING TO VOID CHECKS IN THE "
  !Print 'CL';"WRONG MONTH. PRESS <CR> TO EXIT PROGRAM ";
  !Input ""F$
  Goto OUTEND
End If 
L_4230:! Print @0,23;'CL RB';"ACCEPT VOID CHECK JOURNAL (Y/N) ";
!Input Len (16384 + 1);""F$
!Call String(1,F$)
!If F$ = "N" Goto OUTEND
!If F$ <> "Y" Goto L_4230
if eflag<>0 goto outend:
Try Close #0 Else Rem
if audonly<>0 goto outend:
L_6250: Rem check register ok
Gosub L_8700
BANK = 0 ! B9
spec[0]=intco                               
spec[1]=c4[0] ! CURRENT/NEXT MONTH
spec[2]=c4[1] ! POSTING PERIOD                              
spec[3]=c4[2] ! POSTING date (mmddyy)                            
spec[4]=c4[3] !  LOGICAL UNIT NUMBER FOR A10IN
SPEC[5]=c4[4]! POSTING DATE YYMMDD
SPEC[6]=jrnl !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
SPEC[7]=528! PROGRAM NUMBER
spec[8]=rec_uac                             
spec[9]=returnstatus 
spec[10]=eflag

for ctr=0 to 7
	spec[11+ctr]=t[ctr]
next ctr
spec[25]=bankid
Call "LA528A.dl4",spec[],message$,IntCo,rstr$,e$
goto L_9060: ! 


L_4300: Rem BANK TOTAL PRINT
Gosub L_5800
Print #0; Using "##";"TOTAL FOR BANK: ";B9;
Print #0; Using "------,---.##"; Tab 51;T7[0];
Print #0; Using "------,---.##"; Tab 66;T7[1]; ! Tab 82;T7[2];
If p61$[136,136]="Y" and currid<>0 and currpass=0
	Print #0; Using "------,---.##"; Tab 82;(T7[2]-T7[4]); ! Tab 82;T7[2];
	Print #0; Using "------,---.##"; Tab 96;T7[4];
ELSE
	Print #0; Using "------,---.##"; Tab 82;T7[2]; ! Tab 82;T7[2];
endif
Print #0;""
Print #0;" "
Gosub L_5800
if p61$[136,136]="Y" and currpass<>0 goto L_4370: 
K2$ = B9 Using "##"
Search #14,2,1;K2$,R[14],E \ If E Goto L_4370
Mat Read #14,R[14],32;A6;
A6[2] = A6[2] + T7[2] - t7[4]
Mat Write #14,R[14],32;A6;
IF P61$[136,136]="Y" and t7[4]<>0
	mat read #14,R[14],128;VCEXCHAMT;
	let VCEXCHAMT=VCEXCHAMT+T7[4]
	mat write #14,R[14],128;VCEXCHAMT;
endif
L_4370: For I = 0 To 4
  T7[I] = 0
Next I
Return 
L_4600: Rem PRINT BANK DISTRIBUTIONS
K49$ = " ",K49$
if bankid>0 let k49$[1,2]=(bankid-1) using "##"
L_4610: Search #49,3,1;K49$,R[49],E \ If E = 2 Goto L_4800
If E Gosub ERR_SEARCH
if bankid<>0
	let tmp3=k49$[1,2]
	if tmp3>bankid goto L_4800:
	if tmp3<>bankid goto L_4610:
endif
Mat Read #49,R[49],0;BNKTOT
If Not(BNKTOT[0]) AND NOT (BNKTOT[2]) Goto L_4610
DIV = K49$[3,4] \ K2$ = K49$[1,2]
Search #14,2,1;K2$,R[14],E 
IF NOT(E)
	Mat Read #14,R[14],32;A6;
	Mat Read #14,R[14],2;A5$;
ELSE
	A6 = Q[2] \ A5$ = "MISSING BANK" 
	LET BNKTOT[2]=0
ENDIF
K5$ = " ",K5$ \ K5$[1,9] = A6 Using "#########"
If DEPT <> 0 And C0[6] <> 0 And DIV <> 0 ! find acct# by division
	K5$[8,9] = DIV Using "&&"
	Gosub L_8500 
	IF E<>0 ! \ If Not(E) Goto L_4685
		K5$ = " ",K5$ \ K5$[1,9] = A6 Using "#########"
	ENDIF
End If 
Gosub L_8500
Gosub L_5800
Print #0; Tab 20;K5$[2,9]; Tab 30;A$[1,15];
BNKTOT[1] = K5$[2,9]
Mat Write #49,R[49],0;BNKTOT;
Print #0; Using "---,---,---.##"; Tab 51;BNKTOT[0];
Print #0;""

if bnktot[2]<>0
	mat read #14,r[14],116;GLEXCHACCT;
	K5$ = " ",K5$ \ K5$[1,9] = A6 Using "#########"
	if dept<>0 AND C0[6]<>0 AND DIV<>0 
		K5$[8,9] = DIV Using "&&"
		Gosub L_8500!  \ If Not(E) Goto L_4685
		if e<>0 
			K5$ = " ",K5$ \ K5$[1,9] = GLEXCHACCT Using "#########"
		endif
	endif
	Gosub L_8500
	Gosub L_5800
	Print #0; Tab 20;K5$[2,9]; Tab 30;A$[1,15];
	Print #0; Using "---,---,---.##"; Tab 51;BNKTOT[2];
	Print #0;""
endif
Goto L_4610
L_4800: Rem DIVISIONAL TOTALS
K50$ = " ",K50$
L_4810: Search #50,3,1;K50$,R[50],E \ If E = 2 Goto L_4200
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT;
DIV = K50$[1,2] \ Gosub L_7100
For I = 0 To 2
  If Not(DIVTOT[I]) Goto L_4890
  Gosub L_5800
  K5$ = " ",K5$ \ If I = 0 Let K5$[2,9] = DV1$[2,9]
  If I = 1 Let K5$[2,9] = DV2$[2,9]
  If I = 2 Let K5$[2,9] = DV3$[2,9]
  Gosub L_8500
  Print #0; Tab 20;K5$[2,9];
  Print #0; Tab 30;A$[1,15];
  Print #0; Using "---,---,---.##"; Tab 51;DIVTOT[I]
L_4890: Next I
Goto L_4810
Goto L_4200
L_5000: Rem PRINT LINE
Print #0; Tab 10;S6$[1,12];
X2 = M
Gosub L_8900
Print #0; Tab 31;P$;
Print #0; Using "------,---.##"; Tab 51;S8;
Print #0; Using "------,---.##"; Tab 66;S8[1];
!Print #0; Using "------,---.##"; Tab 82;S8[0] - S8[1];
!If C0[6] Print #0; Using "###"; Tab 100;DIV;
If p61$[136,136]="Y" and currid<>0 and currpass=0
	Print #0; Using "------,---.##"; Tab 82;(s8[0] - s8[1] - xapt3[1]) ;
	Print #0; Using "------,---.##"; Tab 96;xapt3[1];
	If C0[6]<>0		
		Print #0; Using "###"; Tab 120;DIV;
	endif
else
	Print #0; Using "------,---.##"; Tab 82;(s8[0] - s8[1]);
	If C0[6]<>0
		Print #0; Using "###"; Tab 100;DIV;
	endif
endif
Print #0;""
T1[0] = T1[0] + S8 \ T1[1] = T1[1] + S8[1]
T1[2] = T1[2] + S8 - S8[1]
If S7 <> 2 Let T[0] = T[0] - S8[0]
If S7 = 2 Let T[1] = T[1] - S8[0]
T[2] = T[2] + (S8[0] - S8[1])
T[4] = T[4] + S8[1]
If p61$[136,136]="Y" and currid<>0 and currpass=0
	T1[4]=T1[4]+xAPT3[1]
	T[7]=T[7]+xAPT3[1]
	T[2]=T[2]-XAPT3[1]
endif
Return 
L_5800: L = L + 1
If L < 55 Return 
If P Print #0;"\14\\15\"
Print #0; Tab 51;G9$[1,40];
if audonly<>0 Print #0;tab 100;"*Preview*";
Print #0; Tab 110;"JOURNAL#";JRNL
P = P + 1
Print #0;D1$;
Print #0; Tab 51;"VOID CHECK JOURNAL";
Print #0; Tab 110;"PAGE ";P
X2 = C4[4] \ Gosub L_8900
IF P61$[136,136]="Y" and currpass<>0 and curr_rate<>0
	Print #0;"Currency: ";rtrim$(currdesc$);
endif
Print #0; Tab 51;"POSTING DATE: ";P$[1,8]
Print #0;" "
If G9 = 99 Goto L_5925
Print #0; Tab 10;"INVOICE CODE";
Print #0; Tab 27;"INVOICE DATE";
Print #0; Tab 55;"GROSS AMT";
Print #0; Tab 71;"DISC AMT";
Print #0; Tab 86;"  PAYMENT";
If p61$[136,136]="Y" and currid<>0 and currpass=0
	Print #0; tab 96;"  VARIANCE";
	IF C0[6]<>0 PRINT #0;tab 120;"DIV";
else
	If C0[6]<>0
		Print #0; Tab 100;"DIV";
	ENDIF
ENDIF
! If C0[6] Print #0; Tab 100;"DIV";
L_5925: Print #0;" "
L = 1
Print #0;" "
Return 
L_7100: Rem LOOKUP DIV TOTAL
K18$ = " ",K18$ \ K18$[1,2] = DIV Using "##"
Search #18,2,1;K18$,R[18],E \ If E Goto L_7135
Mat Read #18,R[18],42;DV1$;
Mat Read #18,R[18],54;DV2$;
Mat Read #18,R[18],66;DV3$;
Goto L_7150
L_7135: DV1$ = " ",DV1$ \ DV1$[1,9] = Q[0] Using "#########"
DV2$ = " ",DV2$ \ DV2$[1,9] = Q[1] Using "#########"
DV3$ = " ",DV3$ \ DV3$[1,9] = Q[4] Using "#########"
L_7150: Return 
L_7600: Rem UPDATE DIVISION TOTAL
If Not(C0[6]) Return 
K50$ = " ",K50$ \ K50$[1,2] = DIV Using "##"
Search #50,2,1;K50$,R[50],E \ If Not(E) Goto L_7645
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #50,1,0;K50$,R[50],E \ If E Gosub ERR_SEARCH
For X = 0 To 3 \ DIVTOT[X] = 0 \ Next X
Mat Write #50,R[50],0;DIVTOT
Search #50,4,1;K50$,R[50],E \ If E Gosub ERR_SEARCH
L_7645: Mat Read #50,R[50],0;DIVTOT
If S7 <> 2 Let DIVTOT[0] = DIVTOT[0] - S8[0]
If S7 = 2 Let DIVTOT[1] = DIVTOT[1] - S8[0]
DIVTOT[2] = DIVTOT[2] + S8[1]
Mat Write #50,R[50],0;DIVTOT;
K49$ = " ",K49$ \ K49$[1,2] = N3 Using "##" \ K49$[3,4] = DIV Using "##"
Search #49,2,1;K49$,R[49],E \ If Not(E) Goto L_7750
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #49,1,0;K49$,R[49],E \ If E Gosub ERR_SEARCH
For X = 0 To 2 \ BNKTOT[X] = 0 \ Next X
Mat Write #49,R[49],0;BNKTOT;
Search #49,4,1;K49$,R[49],E \ If E Gosub ERR_SEARCH
L_7750: Mat Read #49,R[49],0;BNKTOT
BNKTOT[0] = BNKTOT[0] + (S8[0] - S8[1]) - XAPT3[1]
BNKTOT[2] = BNKTOT[2] + XAPT3[1]
Mat Write #49,R[49],0;BNKTOT;
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
L_7890: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem CLEAR APCASH TOTALS
K1$ = " ",K1$
if bankid>0 let k1$[1,2]=(bankid-1) using "##"
L_8020: Search #14,3,1;K1$,R[14],E
If E = 2 Return 
If E Gosub ERR_SEARCH
if bankid<>0
	let tmp3=k1$[1,2]
	if tmp3>bankid return
	if tmp3<>bankid goto L_8020:
endif
Mat Read #14,R[14],32;A6;
if a6[2]<>0
	A6[2] = 0
	Mat Write #14,R[14],32;A6;
endif
MAT READ #14,R[14],128;VCEXCHAMT;
IF (VCEXCHAMT)<>0
	LET VCEXCHAMT=0
	MAT WRITE #14,R[14],128;VCEXCHAMT;
ENDIF
Goto L_8020
L_8500: Rem VALIDATION FILE
A$ = "INVALID ACCOUNT#"
E = 0
Search #5,2,1;K5$,R[5],E \ If E = 1 Goto L_8525
If E Gosub ERR_SEARCH
Mat Read #5,R[5],12;A$;
L_8525: Return 
L_8700: Rem VERIFY FILES
If P9$[17,17] = "Y" Return 
L_8850: K1$ = " 0" \ Search #15,2,1;K1$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
If R$[60,60] <> " " Goto L_8880
	eflag=eflag+1
	message$=message$+"INTERFACE FILE IN USE...TRY AGAIN LATER..No Update Performed."

Goto OUTEND
L_8880: C4[3] = R$[60,60] \ R$[60,60] = " " \ Mat Write #15,R[15],2;R$;
R = Chf(11) \ R = R - 1
L_8890: Read #11,R;H$;
If H$[63,63] = "9" If H$[1,1] = "*" Return 
R = R - 1
If R >= 0 Goto L_8890
!Print @0,23;'CL RB';"ERROR IN INTERFACE FILE!!";
	eflag=eflag+1
	message$="ERROR IN INTERFACE FILE!!"
E = 99 \ Gosub ERR_SEARCH
L_8900: Rem PUT DATE FROM X2 INTO P$
P$ = " ",P$
If Not(X2) Return 
U5$ = X2 Using "&&&&&&"
P$[1,2] = U5$[3,4]
P$[3,3] = "/"
P$[4,5] = U5$[5,6]
P$[6,6] = "/"
P$[7,8] = U5$[1,2]
Return 
UPDATECDTMP: Rem update cd temp file
KEYCDT$ = " ",KEYCDT$
KEYCDT$[1,2] = N3 Using "##"
KEYCDT$[3,8] = N Using "######"
KEYCDT$[9,14] = N[2] Using "######"
KEYCDT$[15,16] = " 0"
Return 

L_9700: Rem build monthly files
Call "labldfle",ACPER$
Return 
Stop 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End


OUTEND: Rem EXIT PROGRAM
Gosub L_8000
Write #1,51,52;AJRNL;
L_9010: Rem exit to clear keyglap file
If P9$[17,17] = "Y"
  KEYGLAP$ = " ",KEYGLAP$
  Search #75,2,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  Search #75,5,1;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
  E = 3 \ Search #75,1,0;KEYGLAP$,R,E \ If E Gosub ERR_SEARCH
End If 
L_9060: Rem end reset flag
Try Close  Else Rem
If C0[6] ! divisions
  F$ = rec_uac Using "2/APVCTEMP&&&&"
  Call FindF(F$,G9)
  If G9
    Kill F$
  End If 
  F$ = rec_uac Using "2/APBNKTEMP&&&&"
  Call FindF(F$,G9)
  If G9
    Kill F$
  End If 
End If 


Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no void checks available to register"
		message$=message$+"."
	else
		Let message$=message$+" Void Check(s) " ! +str$(totrec)+" Void Check(s) "
		if audonly<>0
			let message$=message$+ "Registered. "
		else
			let message$=message$+ "Accepted. "
		endif
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program

