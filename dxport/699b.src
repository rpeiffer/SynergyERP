! >>> Program 699b
!
! description Alternate Vendor File
!
! loadsave -w -n 100,10 -o prog/dxport/699b.dl4 src/699b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 30, 2003  12:44:25
Rem /w/papermaster/r2002//usr/acct/jliu/work/devl/po/po699b.src (univ2) [jliu] {41003}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem PO699b    altvend file print
Rem jliu cct167173 5/28/03 add the option to print the alt. vendor file
!
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1
Com 1%,J4$[75],PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,AMOUNT,A[33]
Def FNA(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) * .01)
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim F$[16]
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9[2],Y,EDIT_,UNITX,URECFLAG
Dim 2%,X,X1,AV2[6],PRICE,Q0[1]
Dim 3%,J1,X2,R[30]
Dim J$[60],J0$[20],J1$[60],J2$[60],J5$[70],J7$[60]
Dim J9$[50],X$[10],AV1$[32],A$[156],AV$[264],VENDNAME$[264]
Dim U9$[50],U3$[80],W$[60],Y$[80],T9$[26],VEND$[6]
Dim U5$[50],PMASK$[12],CNAME$[30]
Dim RETVAL$[512],Z1$[50],Z2$[50],MSGTXT$[75]
Dim K1$[50],SPROD$[20],EPROD$[20],SVEND$[6],EVEND$[6]
Dim W9$[9],UNIT$[4],FILE$[16],SCRATCH$[80]
Dim K2$[50],K4$[50],J8$[8]
Dim A1$[28],T2$[7],A2$[2],Z3$[12],OPT$[10]
Dim 1%,Z0,Z2[4],V9[4]
Dim 2%,Z1[4]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
!If COID < 10 Let FILE$ = COID Using "cntrl/cntrl#"
!If COID > 9 Let FILE$ = COID Using "cntrl/cntrl##"
!!If Err 0 Rem
!If Err 0 Gosub ERR_TRAP
!Close #1
!Ropen #1,FILE$
!If Err 0 Gosub ERR_TRAP
!U3$ = " ",U3$
!OPT$ = "@%&-=?/,*"
!Mat Read #1,115,40;Q0
!Mat Read #1,0,100;J8$;
!Read #1,3;CNAME$;
!If Q0[1] <= 0 Let Q0[1] = 2
!PMASK$ = "-------#####"
!X = Len(PMASK$) - Q0[1]
!If X < 0 Let X = A0[1]
!PMASK$[X,X] = "."
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[3] = 60 \ If J8 Let V9[3] = 20;SCRPRT = 99
!
!For J = 2 To 6
!  Read J1
!  If J1 = -1 Goto L_830
!  Read #1,88,Abs(J1);J$;
!  If J1 > 0 Open #J,J$ Else Ropen #J,J$
!L_830: Next J
!Data "1568","-1792","-2400","-1","-1728"
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If intCo < 10 Let FILE$ = intCo Using "cntrl/cntrl#"
If intCo > 9 Let FILE$ = intCo Using "cntrl/cntrl##"
Try Close #1 else rem
Ropen #1,FILE$
If Err 0 Gosub ERR_TRAP
U3$ = " ",U3$
OPT$ = "@%&-=?/,*"
Mat Read #1,115,40;Q0
Mat Read #1,0,100;J8$;
Read #1,3;CNAME$;
If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "-------#####"
X = Len(PMASK$) - Q0[1]
If X < 0 Let X = A0[1]
PMASK$[X,X] = "."
!
For J = 2 To 6
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 > 0 Open #J,J$ Else Ropen #J,J$
L_830: Next J
Data "1568","-1792","-2400","-1","-1728"
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"699b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If
!
call dxget("SPRODUC",SPROD$) \ SPROD$ = SPROD$,Blank$
call dxget("EPRODUC",EPROD$) \ EPROD$ = EPROD$,EndParam$
call dxget("SVEND",tmp$) \ BVEND = tmp$
call dxget("EVEND",tmp$) \ If tmp$ = "" Let EVEND = 999999 Else Let EVEND = tmp$
call dxget("SORT",tmp$) \ SORT = tmp$
call dxget("PBFLAG",tmp$) \ if tmp$ = "" Let PBFLAG = 0 Else Let PBFLAG = 99
!
If SPROD$ > EPROD$ Let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
If BVEND < 0 or BVEND > 999999 let e$ = "Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
If EVEND < BVEND or EVEND > 999999 let e$ = "Invalid ending vendor code, must be between starting vendor code and 999999!" \ error 10000
!
SVEND$ = BVEND Using "######"
EVEND$ = EVEND Using "######"
!
If SORT = 1 Let PBFLAG = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!!Call "Progdflt","699b","",77,RETVAL$
!!Gosub DISPLAY_SCREEN
!!WHAT_TO_DO: Rem well what!
!!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults E: exit ";
!!Input ""Z1$ \ Call String(1,Z1$)
!!If Z1$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR> do not save ";
!!  Input ""Z2$ \ Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto WHAT_TO_DO
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "Progdfltw","699b","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL';
!!End If 
!!If Z1$ = "R"
!!  For LOOP_ = 1 To 3
!!    CHOICE = LOOP_
!!    Gosub MAKE_CHOICE
!!  Next LOOP_
!!  Goto WHAT_TO_DO
!!End If 
!!If Z1$ = "P" Goto L_990
!!If Z1$ = "E" Goto OUTEND
!!CHOICE = Z1$
!!Gosub MAKE_CHOICE
!!Goto WHAT_TO_DO
!!MAKE_CHOICE: Rem what field do we want?
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On CHOICE Gosub SEL_PROD,SEL_VENDOR,PICK_SORT
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!!SEL_PROD: Rem get the prods
!!PROD_LOOP: Rem
!!J5$ = "Please Enter the Starting Item Code maximum zzzzzzzzzzzz"
!!J0$ = "2 00122504" \ J1$ = SPROD$
!!Gosub ISINPUT
!!SPROD$ = J$
!!J0$ = "2 00124504" \ J1$ = EPROD$
!!J5$ = "Please Enter the Ending Item Code maximum zzzzzzzzzzzz"
!!Gosub ISINPUT
!!EPROD$ = J$
!!If SPROD$ > EPROD$
!!  Gosub BAD_RANGE
!!  Goto PROD_LOOP
!!End If 
!!RETVAL$[1,12] = SPROD$[1,12]
!!RETVAL$[13,24] = EPROD$[1,12]
!!Return 
!!SEL_VENDOR: Rem get the vendor
!!VEND_LOOP: Rem
!!J5$ = "Please Enter the Starting Vendor Code  maximum 999999"
!!J0$ = "2 00062506" \ J1$ = SVEND$
!!Gosub ISINPUT
!!BVEND = J$ \ SVEND$ = BVEND Using "######"
!!J0$ = "2 00064506" \ J1$ = EVEND$
!!J5$ = "Please Enter the Ending Vendor Code maximum 999999"
!!Gosub ISINPUT
!!EVEND = J$ \ EVEND$ = EVEND Using "######"
!!If SVEND$ > EVEND$
!!  Gosub BAD_RANGE
!!  Goto VEND_LOOP
!!End If
!!RETVAL$[25,30] = SVEND$[1,6]
!!RETVAL$[31,36] = EVEND$[1,6]
!!Return 
!!BAD_RANGE: Rem
!!MSGTXT$ = "Ending value must be Greater than or Equal to starting value"
!!Call "errmsg",MSGTXT$
!!Return 
!!PICK_SORT: Rem
!!J0$ = "3000011508"
!!J5$ = "Enter sort to use (1-2) "
!!J1 = SORT
!!Gosub ISINPUT
!!SORT = J1
!!If SORT < 1 Or SORT > 2 Goto PICK_SORT
!!RETVAL$[37,37] = SORT Using "#"
!!If SORT = 2
!!  PBFLAG = 0
!!  Print @5,10;"PAGE BREAK BETWEEN VENDORS? (Y/N)"
!!  J0$ = "6000 14010"
!!  J2$ = "#" \ J1 = PBFLAG
!!  J5$ = "Do you want to page break between vendors (Y/N)"
!!  Gosub ISINPUT
!!  PBFLAG = J1
!!  If PBFLAG Let RETVAL$[38,38] = "Y" Else Let RETVAL$[38,38] = "N"
!!End If 
!!If SORT = 1 Print @5,10;'CL'
!!Return 
!!DISPLAY_SCREEN: Rem
!!Print 'CS'
!!Print @0,0;"-MX699B-";@33,0;" ALTERNATE VENDOR FILE LISTING  ";
!!Print @30,2;'BR';"STARTING";'ER';@50,2;'BR';"ENDING";'ER';
!!Print @0,4;" 1> ITEM CODE : "
!!Print @0,6;" 2> VENDOR CODE: "
!!Print @0,8;" 3> SORT BY         1: ITEM CODE  2: VENDOR CODE "
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,12] = "            "
!!  RETVAL$[13,24] = "zzzzzzzzzzzz"
!!  RETVAL$[25,30] = "     0"
!!  RETVAL$[31,36] = "999999"
!!  RETVAL$[37,37] = "1"
!!  RETVAL$[38,38] = "N"
!!  Call "Progdfltw","699b","",77,RETVAL$,0
!!End If 
!!SPROD$ = RETVAL$[1,12]
!!EPROD$ = RETVAL$[13,24]
!!SVEND$ = RETVAL$[25,30]
!!EVEND$ = RETVAL$[31,36]
!!SORT = RETVAL$[37,37]
!!If RETVAL$[38,38] = "N" Let BPFLAG = 0 Else Let BPFLAG = 1
!!Print @25,4;'CL';SPROD$;@45,4;EPROD$;
!!Print @25,6;'CL';SVEND$;@45,6;EVEND$;
!!Print Using "#";@15,8;SORT;
!!If SORT = 2
!!  Print @5,10;"PAGE BREAK BETWEEN VENDORS? (Y/N)";
!!  Print @40,10;RETVAL$[38,38]
!!End If 
!!Return 
!
L_990: Rem
If J8 
  If SORT = 2 Let tmp$ = "VENDOR #",fdel$,"VENDOR NAME",fdel$ 
  !If SORT = 1 Let tmp$ = "VENDOR #",fdel$
  If SORT = 1 Let  tmp$ = "ITEM CODE#",fdel$ else  tmp$ = tmp$, "ITEM CODE#",fdel$
  tmp$ = tmp$, "VENDOR ITEM CODE#",fdel$
  tmp$ = tmp$, "LAST ORDER DATE",fdel$
  tmp$ = tmp$, "LAST UNIT PRICE",fdel$
  tmp$ = tmp$, "AVG LEAD TIME",fdel$
  tmp$ = tmp$, "LEAD TIME 1",fdel$
  tmp$ = tmp$, "LEAD TIME 2",fdel$
  If SORT = 1 Let tmp$ = tmp$ ,"VENDOR #",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,21;"Printing,please wait... ";'CE'; \ Signal 3,0
!!If SCRPRT Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
!
If SORT = 2
  Gosub CLEAR_SORT
  Gosub DO_SORT
  CH = 9
  K2$ = " ",K2$
Else 
  CH = 2
  K2$ = " ",K2$
End If 
V9[1] = 90 \ V9[0] = 0
!
PRNT_LOOP: Rem
Search #CH,3,1;K2$,R2,E
If E Goto OUTEND
Gosub GET_VENDNAME
If SORT = 1
  If K2$[1,Len(SPROD$)] < SPROD$ Goto PRNT_LOOP
  If K2$[1,Len(EPROD$)] > EPROD$ Goto OUTEND
  If Val(K2$[13,18]) < Val(SVEND$) Or Val(K2$[13,18]) > Val(EVEND$) Goto PRNT_LOOP
End If 
If SORT = 2
  If HOLDVEND = 0 Let HOLDVEND = K2$[1,6]
  If HOLDVEND <> Val(K2$[1,6])
    If PBFLAG
      V9[1] = 90
      Gosub HEADER
    Else 
	  If Not(J8)
        Print #0;""
        Print #0; Tab 2;"VENDOR #";K2$[1,6];" ",VENDNAME$[1,30]
        Print #0;""
	  End if
      V9[1] = V9[1] + 3
    End If 
    HOLDVEND = K2$[1,6]
  End If 
End If 
Mat Read #2,R2;AV1$;
Mat Read #2,R2,32;AV2;
Gosub HEADER
!
If J8 
  If SORT = 2 Let tmp$ = K2$[1,6],fdel$,rtrim$(VENDNAME$[1,30]),fdel$ 
  !!If SORT = 1 Let tmp$ = AV2[0] Using "######",fdel$
  If SORT = 1 Let tmp$ = rtrim$(AV1$[1,12]),fdel$ else tmp$ = tmp$,rtrim$(AV1$[1,12]),fdel$
  tmp$ = tmp$, rtrim$(AV1$[13,32]),fdel$
  X2 = AV2[1] \ Gosub L_7700
  tmp$ = tmp$, X$,fdel$
  CNVTU[0] = 0 \ CNVTU[1] = UNITX \ CNVTU[2] = 2 \ CNVTA = AV2[2]
  Gosub CONVERT
  tmp$ = tmp$, AMOUNT Using PMASK$
  tmp$ = tmp$, UNIT$,fdel$
  tmp$ = tmp$, FNA(AV2[3] * 30) Using "####.##"," Days",fdel$
  tmp$ = tmp$, FNA(AV2[4] * 30) Using "####.##"," Days",fdel$
  tmp$ = tmp$, FNA(AV2[5] * 30) Using "####.##"," Days",fdel$  
  If SORT = 1 Let tmp$ = tmp$,AV2[0] Using "######",fdel$ !!
  call addtostr(e$,rstr$,tmp$+rdel$)
  If Not(SCRPRT) Let PCTR = PCTR + 1
  Goto PRNT_LOOP
  Return 
End if
!
Print #0; Tab 1;AV1$[1,12];
Print #0; Tab 14;AV1$[13,32];
X2 = AV2[1] \ Gosub L_7700
Print #0; Tab 35;X$;
CNVTU[0] = 0 \ CNVTU[1] = UNITX \ CNVTU[2] = 2 \ CNVTA = AV2[2]
Gosub CONVERT
Print #0; Using PMASK$; Tab 50;AMOUNT;
Print #0;UNIT$;
Print #0; Using "####.##  Days"; Tab 68;FNA(AV2[3] * 30);
Print #0; Using "####.##  Days"; Tab 86;FNA(AV2[4] * 30);
Print #0; Using "####.##  Days"; Tab 104;FNA(AV2[5] * 30);
If SORT = 1 Print #0; Using "######"; Tab 122;AV2[0];
Print #0;""
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,21;PCTR;" Records Printed"
!!    Print Using "   Page ####";V9[0];
!!  End If 
End If
Goto PRNT_LOOP
Return 
!
HEADER: Rem HEADINGS ROUTINE
If J8 Return
!
V9[1] = V9[1] + 1 \ If V9[1] < V9[3] Return 
!!If V9[0] If SCRPRT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V9[0]
Print #0;" - mx699B -";T9$;
Print #0; Tab 45;"ALTERNATE VENDOR REPORT"
Print #0; Tab 45;"SORT BY ";
If SORT = 2
  Print #0;"VENDOR CODE"
Else 
  Print #0;"ITEM CODE"
End If 
Print #0; Tab 1;"ITEM CODE#";
Print #0; Tab 14;"VENDOR ITEM CODE#";
Print #0; Tab 35;"LAST ORDER";
Print #0; Tab 50;"LAST UNIT";
Print #0; Tab 68;"AVG LEAD TIME";
Print #0; Tab 86;"LEAD TIME 1";
Print #0; Tab 104;"LEAD TIME 2";
If SORT = 1 Print #0; Tab 122;"VENDOR #";
Print #0;""
Print #0; Tab 38;"DATE";
Print #0; Tab 52;"PRICE";
Print #0;""
If SORT = 2
  Print #0; Tab 2;"VENDOR #";K2$[1,6];" ";VENDNAME$[1,30]
  V9[1] = V9[1] + 1
End If 
Print #0;""
Return 
!
GET_VENDNAME: Rem
If SORT = 1
  VEND$ = K2$[13,18]
Else 
  VEND$ = K2$[1,6]
End If 
Search #4,2,1;VEND$,R4,E
if E let VENDNAME$ = "VENDOR NOT FOUND! "
If Not(E)
  Mat Read #4,R4,0;AV$;
  VENDNAME$ = AV$
End If 
Return 
!
DO_SORT: Rem
!!Print @5,22;'CL';"Sorting,please wait... "
SORT_LOOP: 
Search #2,3,1;K2$,R2,E 
If E Goto END_SORTLOOP
!!SORTCTR = SORTCTR + 1
!!If Not(Fra(SORTCTR / 500))
!!  Print Using "#######";@25,22;SORTCTR;" Records Processed";
!!End If 
If K2$[1,Len(SPROD$)] < SPROD$ Goto SORT_LOOP
If K2$[1,Len(EPROD$)] > EPROD$ Goto END_SORTLOOP
If Val(K2$[13,18]) < Val(SVEND$) Or Val(K2$[13,18]) > Val(EVEND$) Goto SORT_LOOP
Mat Read #2,R2,0;AV1$;
Mat Read #2,R2,32;AV2;
K4$ = " ",K4$
K4$[1,6] = K2$[13,18]
K4$[7,18] = K2$[1,12]
Search #9,4,1;K4$,R2,E
If E Let e$ = "syserrorfile 699b sortfile mode (m)=4 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",K4$ \ error 10000
!!If E Gosub ERR_SEARCH
Goto SORT_LOOP
!
END_SORTLOOP: Rem
K2$ = " ",K2$
Return 
!
CLEAR_SORT: Rem ==========================clear the sort file
! - CHNL = 9 \ Gosub CHNLFREE
! - If CHNLFREE
! -  Gosub OPEN_SORT
! - Else 
K4$ = " ",K4$
CLEARSORT_LOOP: Rem
Search #9,3,1;K4$,V1,E 
If Not(E)
  Search #9,5,1;K4$,V1,E
  if E Let e$ = "syserrorfile 699b sortfile mode (m)=5 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K4$ \ error 10000
  Goto CLEARSORT_LOOP
End If 
Return 
!
! - OPEN_SORT: Rem
! - SCRATCH$ = "[1:1] 6/SORTWORK" + Str$(Spc(6)) + "!"
! - Build #9,SCRATCH$
! - R[9] = 25 \ Search #9,0,1;F$,R[9],E !!\ If E Gosub ERR_SEARCH
! - R[9] = 1 \ Search #9,0,0;F$,R[9],E !!\ If E Gosub ERR_SEARCH
! - R[9] = 0 \ Search #9,1,0;F$,R[9],E !!\ If E Gosub ERR_SEARCH
! - Return 
!
! - CHNLFREE: Rem check to see if a channel is being used
! - If Err 0 Let CHNLFREE = Spc(8)
! - CHNLFREE = 0
! - E = Chf(CHNL)
! - If Err 0 Gosub ERR_ESCAPE
! - If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
! - END_CHNLFREE: Rem
! - Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
!!L_9100: Rem END OF THIS RANGE
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!!Goto OUTEND
!!L_8000: A1$ = " ",A1$ \ T2$ = " ",T2$ \ Mat AV2 = Zer
!!D0 = 0;D1 = 0;Z0 = 0
!!Mat Z1 = Zer
!!J4$ = " ",J4$ \ J1$ = " ",J1$
!!Z2$ = " ",Z2$;Z3$ = " ",Z3$
!!EDIT_ = 1 \ UNITX = 0
!!AV$ = " ",AV$ \ AV1$ = " ",AV1$
!!AMOUNT = 0
!!Return 
!!
!!L_10700: Rem FIND UNIT ABBR
!!UNIT$ = "ERR!"
!!If UNIT = -1 Let UNIT$ = "CWT "
!!If UNIT = -2 Let UNIT$ = "LOT "
!!If UNIT = -3 Let UNIT$ = "LB  "
!!If UNIT <= 0 Goto L_10790
!!Mat Read #6,UNIT,10;UNIT$;
!!L_10790: Return 
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ J7$ = J0$[10] To J9$[J8,J8] \ If J7$ <> "" Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
!
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB !!If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
!!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
!
OUTEND: Rem EXIT ROUTINE
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End 
!
!!Print 'CS'
!!Close 
!!Chain "mx000"
!!Stop 
!!Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End