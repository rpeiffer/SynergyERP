! --- dxblockgui.dl4
! General Program to respond to dl4term gui block requests and access Page Block Routines in dxblockcalls.lib 
!
! loadsave -w -n 100,10 -o dxblockgui.dl4 src/dxblockgui.src
!
! 1.0 3/26/2008 new 
! if blockid has a filename associated with it, chains to block'filename'.dl4 generated code to process
! else if action=print chains to 'blockid'.dl4 print program
! else show input prompts for report (type=prompt)
!
!include copyright, common libs, common intrinsics
! *declare common dl4 intrinsic subs & functions
declare intrinsic function trim$,dateusing$,fmtof
declare intrinsic sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
!
! *declare common external libs & subs & functions
external lib "libgeneral.lib" !general routines
declare external sub suberr,mainerr,getsession,setoutput,addtostr
declare external function getmsg$,expandarray
!
!
!
! *declare dl4 intrinsic subs & functions
declare intrinsic function findchannel,trim$,dateusing
declare intrinsic sub programdump,dxget,dxset,dxsave,env,getglobals,setglobals 
!
!
external lib "dxblockgeneral.lib"
declare external function blockbuildsort
!
external lib "libgeneral.lib"
declare external sub getsession,setoutput,addtostr
declare external function expandarray,openprinter
!
!
external lib "dxblockcallsgui.lib" !page block routines
declare external sub setblock,setcols,setvalues,getvalues
!
External Lib "gui2.lib"
Declare External Sub guistatusline
!
!
!
! **main procedure
!
!
! dim variables used by program
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
try
 !
 dim blockid$[8],tmp$[100],filename$[20],action1$[30]
 dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
 dim programname$[50]
 b$=" ",b$
 !
  call dxget("blockid",blockid$)
 !
 close !close all open channels
 !
 call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 fdel$="GUI"
 call env(2,"FDEL",fdel$)
 action$="input"
 !
 !
 call dxget("blockid",blockid$)
 !
 !
 !setblock will get blockid definition,  
 !if printprompts type will  as well, else it will return program to chain to
 !for printing, or for table or edit types
 call setblock(e$,blockid$,action$,programname$,rstr$) !
 !
 if rstr$="E" goto endprog:
 !
 if action$="TABLE" or action$="EDIT" or action$="SAVE" or action$="DELETE" 
 !
  call setglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
  chain programname$ !block'defstruct filename'.dl4 (set in setblock/hdrlist)
 end if
 !
 if programname$<>"" !action=print, chain to print program
  !note:getsession always opens control file on #1
   !open printer on # defined in dfsystem.txt
   call getglobals("dfsystem",1,tmp$)
   tmp=tmp$
   printchan=openprinter(e$,tmp) !also redirects to check for pdf if pdf
  end if
   !
   !build sort file and open on # defined in dfsystem.txt (if null,don't build), always 25wd key (as was mx0/mx000 program)
   call getglobals("dfsystem",2,tmp$)
   if tmp$<>""
    tmp=tmp$
    sortchan=blockbuildsort(e$,25,0,tmp)
   end if
  !
  Call guistatusline(-1,"Please wait, printing...")
  signal 3,0
  !
  chain programname$  !print program, or code generated file maintenance program
 !
 !chain back to menu if exit button pressed
 endprog:
 ;'XX EQ';
 !menu program to chain back to is defined in dfsystem.txt
 call getglobals("dfsystem",6,tmp$)
 chain tmp$
 end
else
 ! error routine
  if spc(8)<>10000
   call suberr(e$,spc(8),spc(10),msc$(2))
   !call programdump("")
  end if
  call mainerr(e$,spc(8),buttonlist$[],nextlist$[])
end try
end
