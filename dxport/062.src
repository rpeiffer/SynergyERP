! >>> Program 062
!
! description:  PENDING LOAD/BASE COST CHANGE PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/062.dl4 src/062.src
!
! 1.0 04/09/2008 change
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUN 22, 2005  11:08:40
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! - Option Default Dialect IRIS1
Rem s MX062  PENDING BASE COST UPDATE LISTING
Rem AUTHOR: DAVID DEVITO
Rem LAST UPDATE:  roman  05/25/1991  clean up
! -----------------  notes for rev9 upgrade for F.P.C. ------------------------
! 02/18/08 vst cct223092 - used rev9 program & added in custom codde for:
! 06/07/00 rjs cct134387 - shortened vdr#, removed increase/decrease column 
!                          (% chg has positive & neg). Shifted columns to left &
!                          put the % between pending base/load & effective date

! -----------------------------------------------------------------------------

!
External Lib "libinputs.lib"
Declare External Sub SelectWH
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!
Com 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 1%,F,X1,2%,X2,3%,J
Dim 2%,DT3[1],JD1,JD2,JPEDATE,JWEDATE,JEFF_DATE,SCRATCH$[80],STARTCODE$[12]
Dim K1$[50],K2$[50],K3$[12],SORT$[2],X$[10],CCD$[14],ARDATE$[8],A$[156]
Dim T2$[56],T1$[12],CNAME$[30],Z1$[50],P9$[50],WH$[60],PMASK$[12]
Dim 1%,PFTB[3],J9[2],WHPARC[5],WH[99],2%,Q0[1],WHPRICE
Dim 2%,T1[4],T3[4],PFCO[3],B[24],C4[7],V9[4],W7[5],SCRPRT
dim 2%,baseper,loadper
Dim 3%,AMOUNT,W3[24],WHMISC[6],PRPARC[3],CUR_LOAD,PEN_LOAD,OLD_LOAD,PCTR
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim SelWhse$[200],Custom_customer$[30]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!!!! dx add xport reporting code
Dim tmp$[1000],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
!
For J = 2 To 4
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","1728","1744"
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
DEF FNR(X)=SGN(X)*(INT(ABS(X)*100+.5)/100)
!!Window On 
Mat Read #1,19,50;P9$;
Read #1,3;CNAME$;
Read #1,0,100;ARDATE$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCASE$(TRIM$(custom_customer$))
!!custom_customer$="FPC" ! ===============>> TEST ONLY <<===========
If Err 0 Let J7 = Spc(8)
J7 = 0 \ V9[4] = Chf(0)
!!If Err 0 Gosub ERR_ESCAPE
If J7 If J7 <> 49 Goto ERR_TRAP
V9[4] = 58 \ If J7 Let V9[4] = 18
SCRPRT = J7
WHSEPRICE = 0
If P9$[32,32] = "Y" Let WHSEPRICE = 1
For X = 1 To 99 \ WH[X] = 1 \ Next X
PRDMAIN = 1 \ WH[0] = -1
If WHSEPRICE Let WH[0] = 0
MAIN_SCREEN: Rem let's display everything
!!CHOICE = 0
!!K2$ = ""
!!K3$ = "zzzzzzzzzzzz"
!!D1 = 700101
!!D2 = 591231
!!X2 = D1 \ Gosub L_7820 \ E = 0
!!JD1 = X2
!!X2 = D2 \ Gosub L_7820 \ E = 0
!!JD2 = X2
!!SORT$ = "P"
!!OPT = 0
If Err 0 Let J8 = Spc(8)
J8 = 0 \  N = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
!! dx add xport reporting code
call dxget("I0",SORT$)
call dxget("I1",K2$) \ K2$=K2$,Blank$
call dxget("I2",K3$) \ K3$=K3$,EndParam$
call dxget("I4",tmp$) \ if tmp$ = "" Let D1 = 010170 Else Let D1 = tmp$
call dxget("I5",tmp$) \ if tmp$ = "" Let D2 = 123159 Else Let D2 = tmp$
call dxget("selwhse",SelWhse$) ! list of warehouses if P9$[32,32]="Y"
!
STARTCODE=K2$
if K3$<K2$ let e$ = "Invalid ending product code, must be greater than starting product code!" \ error 10000
!
X$ = D1 Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \D1 = X$
X2 = D1
gosub L_7700
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
JD1 = X$[1,5]
If E let e$="Invalid starting date!" \ error 10000 
!
X$ = D2 Using "&&&&&&"
tmp1$ = X$[5,6],X$[1,2],X$[3,4]
X$ = tmp1$ \D2 = X$
X2 = D2
gosub L_7700
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6]
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
if E or X2 = 0 let JD2 = -1 else let JD2 = X$[1,5]
if JD2 < JD1 let e$="Invalid ending date, must be between starting date and 123199!" \ error 10000 
!
! warehouse list
call SelectWH(e$,SelWhse$,WH[],P9$[32,32])
if e$ error 10000 ! error message
if P9$[32,32]="Y" let WHSEPRICE=1 else WHSEPRICE=0
!

if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"062",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!

If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

!
!!Print 'CS'
!!Print @0,0;"-MX062-";@30,0;"AUTOMATIC BASE COST CHANGE PRINT"
!!Print @0,4;" 1. Sort By  P:product  D:effective date  C:commodity : ";SORT$
!!Print @30,6;'BR';"STARTING";'ER';@50,6;'BR';"ENDING";'ER';
!!Print @0,8;" 2. Product Code : ";@25,8;K2$;@45,8;K3$
!!X2 = D1 \ Gosub L_7700
!!Print @0,10;" 3. Effective Date : ";
!!Print @25,10;X$;
!!X2 = D2 \ Gosub L_7700
!!Print @45,10;X$
!!If WHSEPRICE ! if warehouse pricing turned on ask for whse and change prompts
!!  Print @0,12;" 4. Warehouse Number : ";
!!  Print @23,12;'CL';
!!  If Not(WH) Print @23,12;"ALL   ";
!!  If WH > 1 Print @23,12;" MW ";
!!  If WH = 1 ! "only one selected - show which one
!!    For X1 = 1 To 99
!!      If WH[X1] Let X = X1
!!    Next X1
!!!!    Print Using "##";@23,12;X;
!!  End If 
!!  If PRDMAIN And WH >= 0 Print "+";
!!  If PRDMAIN Print "MAIN";
!!End If 
!!L_1450: Rem "================== all picked
!!Print @10,22;'CL';"Enter  #:field to edit  R:reselect all  P:print  E:exit ";
!!Input ""Z1$
!!Call String(1,Z1$)
!!Print @0,22;'CE';
!!If Z1$ = "E" Goto OUTEND
!!If Z1$ = "R" Let CHOICE = 0 \ Goto L_1010
!!If Z1$ = "P" Goto L_1900
!!CHOICE = Z1$
!!On CHOICE Goto L_1010,L_1030,L_1110,L_1082
!!Goto L_1450
!!L_1010: Rem how do you want to print
!!J5$ = "Please enter how you wish to sort this report"
!!J0$ = "2 02015604" \ J1$ = SORT$
!!Gosub L_7000
!!SORT$ = J$
!!If SORT$ <> "P" If SORT$ <> "D" If SORT$ <> "C" Print 'RB'; \ Goto L_1010
!!If CHOICE = 1 Goto L_1450
!!L_1030: Rem starting product range
!!J5$ = "Please Enter the Starting Product Code"
!!J0$ = "2 00122508" \ J1$ = K2$
!!Gosub L_7000
!!K2$ = J$
!!STARTCODE$ = K2$
!!L_1040: Rem ending product range
!!J0$ = "2 00124508" \ J1$ = K3$
!!J5$ = "Please Enter the Ending Product Code"
!!Gosub L_7000
!!K3$ = J$
!!BADRANGE = 0
!!Gosub CHECK_PROD_RANGE
!!If BADRANGE Goto L_1030
!!If CHOICE Goto L_1450
!!L_1110: Rem starting date range
!!J5$ = "Please Enter the Beginning Effective Date MMDDYY "
!!J0$ = "5 00062510"
!!X2 = JD1 \ Gosub L_7830 \ J1 = X$
!!Gosub L_7000 \ D1 = J1
!!X2 = D1 \ Gosub L_7820 \ Goto L_1110
!!JD1 = X2
!!L_1140: Rem ending range
!!J5$ = "Please Enter the Ending Effective Date MMDDYY "
!!J0$ = "5 00064510"
!!X2 = JD2 \ Gosub L_7830 \ J1 = X$
!!Gosub L_7000 \ D2 = J1
!!X2 = D2 \ Gosub L_7820 \ Goto L_1140
!!JD2 = X2
!!Gosub CHECK_DATE_RANGE
!!If BADRANGE Goto L_1110
!!If CHOICE = 3 Goto L_1450
!!L_1082: Rem whse selection
!!If Not(WHSEPRICE) Goto L_1450
!!Gosub WHSSEL
!!If WH >= 0 And WH <= 99 Goto SHO_WSEL
!!If WH = -1 And PRDMAIN Goto SHO_WSEL
!!Goto L_1450
!!SHO_WSEL: Rem "whse selection
!!Print @23,12;'CL';
!!If Not(WH) Print @23,12;"ALL   ";
!!If WH > 1 Print @23,12;" MW ";
!!If WH = 1 ! "only one selected - show which one
!!  For X1 = 1 To 99
!!    If WH[X1] Let X = X1
!!  Next X1
!!  Print Using "##   ";@23,12;X;
!!End If 
!!If PRDMAIN And WH >= 0 Print "+";
!!If PRDMAIN Print "MAIN";
!!Goto L_1450
!!WHSSEL: Rem "warehouse selection
!!Window Open @0,5; Size 79,18; Using "WAREHOUSE PRINT SELECTION"
!!WHSSEL_STRT: Print 'CS';
!!For X = 1 To 99
!!  If X <= 25
!!    COL = (X - 1) * 3;ROW = 0
!!  End If 
!!  If X > 25 And X <= 50
!!    COL = (X - 26) * 3;ROW = 3
!!  End If 
!!  If X > 50 And X <= 75
!!    COL = (X - 51) * 3;ROW = 6
!!  End If 
!!  If X > 75
!!    COL = (X - 76) * 3;ROW = 9
!!  End If 
!!  Print Using "##";@COL + 1,ROW;X;
!!  X$ = "n" \ If WH[X] Let X$ = "Y"
!!  Print @COL + 2,ROW + 1;X$;
!!Next X
!!SHOS2SEL: Rem
!!ROW = Msc(34) - 3
!!Print @0,ROW;"S2> UPDATE MAIN PRODUCT FILE ALSO? (Y/N) ";
!!X$ = "N" \ If PRDMAIN Let X$ = "Y"
!!Print @42,ROW;X$[1,1];
!!QWHSSEL: Rem "
!!Print @0,Msc(34) - 1;'CL';"ENTER WHSE # TO CHANGE  ALL: change all  <CR>: done  ";
!!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!!If X$ = "" Goto WHSSEL_DONE
!!If X$ = "ALL"
!!  For X = 1 To 99 \ WH[X] = Not(WH[X]) \ Next X
!!  PRDMAIN = Not(PRDMAIN)
!!  Goto WHSSEL_STRT
!!End If 
!!If X$ = "S2" Let PRDMAIN = Not(PRDMAIN) \ Goto SHOS2SEL
!!X1 = X$ \ If X1 < 1 Or X1 > 99 Or Fra(X1) Goto QWHSSEL
!!WH[X1] = Not(WH[X1]) \ Goto WHSSEL_STRT
!!WHSSEL_DONE: Rem " if all zero then wh[0]=0  Else put ANY number in wh[0]
!!WH[0] = 0 \ For X = 1 To 99 \ WH[0] = WH[0] + WH[X] \ Next X
!!If Not(PRDMAIN) And WH[0] = 0 ! "all turned to NO
!!  Print @0,Msc(34) - 1;'CL';"YOU MUST SELECT AT LEAST 1 WAREHOUSE!";
!!  Signal 3,20
!!  Goto QWHSSEL
!!End If 
!!If PRDMAIN And WH[0] = 0 Let WH = -1
!!If WH[0] = 99 ! "All selected - inform of such
!!NWHSCONF: Rem "
!!  Print @0,Msc(34) - 1;'CL';"ALL WAREHOUSES TO BE UPDATED!  CORRECT? (<Y>/N)  Y";'ML';
!!  Input Len 16384 + 1;""X$ \ Call String(1,X$)
!!  If X$ = "" Let X$ = "Y"
!!  If X$ <> "Y" And X$ <> "N" Goto NWHSCONF
!!  If X$ = "N" Goto QWHSSEL
!!  WH[0] = 0
!!End If 
!!Window Close 
!!Return 
!!CHECK_DATE_RANGE: Rem
!!BADRANGE = 0
!!If JD1 > JD2 Gosub L_1200
!!Return 
!!CHECK_PROD_RANGE: Rem
!!BADRANGE = 0
!!If K2$ > K3$ Gosub L_1200
!!Return 
!!L_1200: Rem "error (bad range)
!!J7$ = "Ending value must be Greater than or Equal to starting value! "
!!Gosub L_7600
!!BADRANGE = 1
!!Return 
!!!
!!
!
if j8 
  tmp$ = "PRODUCT",fdel$,"WH",fdel$
  tmp$ = tmp$,"DESCRIPTION 1",fdel$,"DESCRIPTION 2",fdel$
  If P9$[40,40] = "Y" let tmp$ = tmp$,"VENDOR ITEM #",fdel$
  tmp$ = tmp$,"COMM",fdel$
  tmp$ = tmp$,"I/D",fdel$
  tmp$ = tmp$,"MARKUP TABLE PREV",fdel$
  tmp$ = tmp$,"MARKUP TABLE CURR",fdel$
  tmp$ = tmp$,"MARKUP TABLE PEND",fdel$
  tmp$ = tmp$,"PREVIOUS BASE",fdel$
  tmp$ = tmp$,"PREVIOUS LOAD",fdel$
  tmp$ = tmp$,"DATE EXPIRED",fdel$
  tmp$ = tmp$,"BREAK TABLE PREV",fdel$
  tmp$ = tmp$,"BREAK TABLE CURR",fdel$
  tmp$ = tmp$,"BREAK TABLE PEND",fdel$
  tmp$ = tmp$,"CURRENT BASE",fdel$
  tmp$ = tmp$,"CURRENT BASE TYPE",fdel$
  tmp$ = tmp$,"CURRENT LOAD",fdel$
  tmp$ = tmp$,"CURRENT LOAD TYPE",fdel$
  tmp$ = tmp$,"PENDING BASE",fdel$
  tmp$ = tmp$,"PENDING LOAD",fdel$
  tmp$ = tmp$,"EFFECTIVE DATE",fdel$
  if custom_customer$="FPC"
	tmp$=tmp$,"BASE CHG PRCT",FDEL$
	tmp$=tmp$,"LOAD CHG PRCT",FDEL$
  Endif
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
Goto L_1900
L_1500: Rem "========================== sort routine
!!Print @0,22;"Sorting, Please Wait...";
PCTR = 0
K1$ = K2$
L_1530: Search #2,3,1;K1$,R2,E
NXT_PROD = 0
If E = 2 Return 
!!If E Gosub ERR_SEARCH
PCTR = PCTR + 1
!!If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
If K1$ > K3$ Return 
If K1$ = "Z ZZZZZZZZZZ" Goto L_1810
Mat Read #2,R2,0;A$;
Mat Read #2,R2,974;PFCO;
X2 = PFCO[1] \ Gosub L_7820 \ X2 = 0
JPEDATE = X2
If P9$[32,32] = "Y" And Not(PRDMAIN) And WH >= 0 Goto SRTWHS
If Not(JPEDATE) Goto SRTWHS
If JPEDATE < JD1 Or JPEDATE > JD2 Goto SRTWHS
K2$ = JPEDATE Using "######" \ K2$[7] = A$[152,155]
K2$[11] = K1$
Search #9,4,1;K2$,R2,E
If E Let e$ = "syserrorfile 062 sortfile mode (m)=4 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",K2$ \error 10000
!!If E Gosub ERR_SEARCH
SRTWHS: Rem "
If WH = -1 Goto L_1810
WH$ = " ",WH$ \ WH$[1,12] = A$[140,151]
L_1680: Rem " Sort Whse Loop ! "IF P9$[32,32]="Y"
Gosub L_6040
If PROD_WH_FOUND = 0 Let NXT_PROD = 99 \ Goto L_1810
X2 = W7[3] \ Gosub L_7820 \ X2 = 0
JWEDATE = X2
K2$ = " ",K2$
If JWEDATE < JD1 Or JWEDATE > JD2 Goto L_1810
K2$[1,6] = JWEDATE Using "######" \ K2$[7,10] = A$[152,155]
K2$[11,22] = K1$[1,12] \ K2$[23,24] = W9 Using "##"
K2$[25,30] = R4 Using "######"
If NXT_PROD Goto L_1810
Goto L_1790
K2$[11] = K1$
L_1790: Search #9,4,1;K2$,R2,E
If E Let e$ = "syserrorfile 062 sortfile mode (m)=4 keyno (k)=1 r=",R2," e=",e," keyval (k$)=",K2$ \error 10000
!!If E Gosub ERR_SEARCH
L_1810: If P9$[32,32] <> "Y" Or NXT_PROD Goto L_1530
Goto L_1680
L_1900: Rem "========================== print
!!Window Off 
!!Print @0,22;"Printing, Please Wait...";
If SORT$ = "D" Gosub L_1500
PCTR = 0
K1$ = K2$ \ V9[0] = 0 \ V9[1] = 99
CH = 2 \ If SORT$ = "D" Let CH = 9 \ K1$ = ""
DIR = 1 \ If SORT$ = "C" Let DIR = 3 \ K1$ = ""
!!If J7 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
If SORT$ = "C" Goto L_2000
Search #CH,2,1;K1$,R2,E
If Not(E) Goto L_2030
L_2000: Search #CH,3,DIR;K1$,R2,E
If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
L_2030: Rem "r2 will always be product record!
Mat Read #2,R2,0;A$;
If SORT$ = "P" If A$[140,151] > K3$ Goto L_9100
If SORT$ = "C" If A$[140,151] < K2$ Goto L_2510
If SORT$ = "C" If A$[140,151] > K3$ Goto L_2510
NXT_PROD = 0
Mat Read #2,R2,156;B;
Mat Read #2,R2,256;A;
Mat Read #2,R2,512;PFU1;
Mat Read #2,R2,554;PFU2;
Mat Read #2,R2,846;PFTB;
Mat Read #2,R2,596;PRPARC;
Mat Read #2,R2,894;C4;
Mat Read #2,R2,974;PFCO;
X2 = PFCO[1] \ Gosub L_7820 \ X2 = 0
JPEDATE = X2
CUR_BASE = C4[4] \ PEN_BASE = PFCO[0]
CUR_LOAD = B[8];PEN_LOAD = PRPARC[0];OLD_LOAD = PRPARC[1]
CUR_BRK = B[22];PEN_BRK = PFTB[0];OLD_BRK = PFTB[2]
OLD_BASE = PFCO[2] \ EFF_DATE = PFCO[1];JEFF_DATE = JPEDATE
CUR_MRK = C4[3];PEN_MRK = PFTB[1];OLD_MRK = PFTB[3]
If P9$[32,32] = "Y" And Not(PRDMAIN) And WH >= 0 Goto PRNTWHS
W9 = K1$[23,24]
If SORT$ = "D" And W9 > 0 And WH >= 0 Goto PRNTWHS
Gosub STRTCHECK
WH$ = " ",WH$;WH$[1,12] = A$[140,151]
W9 = 0
Goto L_2510
PRNTWHS: Rem "
WH$ = " ",WH$;WH$[1,12] = A$[140,151]
W9 = 0
If WH = -1 Let NXT_PROD = 1 \ Goto L_2510
L_2170: Rem " Whse loopIF P9$[32,32]="Y"
If SORT$ <> "D"
  Gosub L_6040
  If Not(PROD_WH_FOUND) Let NXT_PROD = 99
  If NXT_PROD Goto L_2510
End If 
If SORT$ = "D"
  R4 = K1$[25]
  W9 = K1$[23,24]
  Gosub L_6200
  NXT_PROD = 99
End If 
X2 = W7[3] \ Gosub L_7820 \ X2 = 0
JWEDATE = X2
CUR_BASE = W3[18];CUR_LOAD = W3[17];CUR_MRK = WHPARC[1];CUR_BRK = WHPARC[0]
PEN_BASE = W7[2];PEN_LOAD = WHMISC[0];PEN_MRK = WHPARC[5];PEN_BRK = WHPARC[4]
EFF_DATE = W7[3];JEFF_DATE = JWEDATE
OLD_BASE = W7[4];OLD_LOAD = WHMISC[1];OLD_MRK = WHPARC[3];OLD_BRK = WHPARC[2]
Gosub STRTCHECK
Goto L_2510
STRTCHECK: Rem "
If Not(JEFF_DATE) Goto L_2500
If JEFF_DATE < JD1 Or JEFF_DATE > JD2 Goto L_2500
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2;CNVTA = CUR_BASE \ Gosub L_20000
CUR_BASE = FNP(AMOUNT)
CNVTA = CUR_LOAD \ Gosub L_20000 \ CUR_LOAD = FNP(AMOUNT)
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2;CNVTA = PEN_BASE \ Gosub L_20000
PEN_BASE = FNP(AMOUNT)
CNVTA = PEN_LOAD \ Gosub L_20000 \ PEN_LOAD = FNP(AMOUNT)
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2;CNVTA = OLD_BASE \ Gosub L_20000
OLD_BASE = FNP(AMOUNT)
CNVTA = OLD_LOAD \ Gosub L_20000 \ OLD_LOAD = FNP(AMOUNT)
If SORT$ = "D" If EFF_DATE <> S1 Let V9[1] = 99 \ S1 = EFF_DATE
If PFU1[11] = -1 Let CCD$[11,14] = "CWT " \ Goto L_2490
If PFU1[11] = -2 Let CCD$[11,14] = "LOT " \ Goto L_2490
If PFU1[11] = -3 Let CCD$[11,14] = "LB  " \ Goto L_2490
Read #3,PFU1[11],0;CCD$;
baseper=0
if pen_base 
   if cur_base baseper=fnr(((pen_base-cur_base)/cur_base)*100)!cct 134387 add % change 
end if 
loadper=0
if pen_load 
   if cur_load loadper=fnr(((pen_load-cur_load)/cur_load)*100)! cct 134387 add % change    
end if
L_2490: Gosub L_5800
Gosub L_5000
L_2500: Rem "done or bypassed!
Return 
L_2510: Rem "bypass print or next
If Not(SCRPRT) Or V9[0] = 0 ! "no pg printed yet
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 50))
!!    Print Using "#######";@25,22;PCTR;" Records Processed";
!!    Print Using "   Page ####";V9[0];
!!  End If 
End If 
If P9$[32,32] <> "Y" Or NXT_PROD Goto L_2000
If SORT$ = "D" Goto L_2000
Goto L_2170
!
L_5000: Rem "===== print line
!
if J8 ! TO BROWSER
	
	tmp$ = rtrim$(A$[140,151]),fdel$
	If W9 = 0
	  tmp$ = tmp$,"M",fdel$
	Else 
	  tmp$ = tmp$,W9 Using "##",fdel$
	End If 
	tmp$ = tmp$, rtrim$(A$[9,38]),fdel$!!desvriptio 1
	tmp$ = tmp$, rtrim$(A$[63,92]),fdel$ !! desvcription 2
	If P9$[40,40] = "Y"  Let tmp$ = tmp$,rtrim$(A$[93,112]),fdel$ !!item #
	tmp$ = tmp$, A$[152,155],fdel$ !!comm
	If PEN_BASE > CUR_BASE Let tmp$ = tmp$,"+",fdel$ !!i/d
	If PEN_BASE < CUR_BASE Let tmp$ = tmp$,"-",fdel$
	if PEN_BASE = CUR_BASE Let tmp$ = tmp$,"",fdel$

	X2 = OLD_MRK \ Gosub L_5110 \ tmp$ = tmp$,X$[1,4],fdel$
	X2 = CUR_MRK \ Gosub L_5110 \ If CUR_MRK = 0 Let X$ = "NONE"
	tmp$ = tmp$, X$[1,4],fdel$
	X2 = PEN_MRK \ Gosub L_5110 \ tmp$ = tmp$,X$[1,4],fdel$

	tmp$ = tmp$, LTrim$(OLD_BASE Using PMASK$),fdel$
	tmp$ = tmp$, LTrim$(OLD_LOAD Using PMASK$),fdel$

	X2 = PFCO[3] \ Gosub L_7700 \ tmp$ = tmp$,X$,fdel$

	X2 = OLD_BRK \ Gosub L_5110 \ tmp$ = tmp$, X$[1,4],fdel$
	X2 = CUR_BRK \ Gosub L_5110 \ If CUR_BRK = 0 Let X$ = "NONE"
	tmp$ = tmp$, X$[1,4],fdel$
	X2 = PEN_BRK \ Gosub L_5110 \ tmp$ = tmp$, X$[1,4],fdel$

	tmp$ = tmp$, LTrim$(CUR_BASE Using PMASK$),fdel$,CCD$[11,14],fdel$
	tmp$ = tmp$, LTrim$(CUR_LOAD Using PMASK$),fdel$,CCD$[11,14],fdel$

	tmp$ = tmp$, LTrim$(PEN_BASE Using PMASK$),fdel$
	tmp$ = tmp$, LTrim$(PEN_LOAD Using PMASK$),fdel$

	X2 = EFF_DATE \ Gosub L_7700 \ tmp$ = tmp$, X$,fdel$
	if custom_customer$="FPC"
	  tmp$=tmp$,LTrim$(baseper using "-###.##%"),fdel$
	  tmp$=tmp$,LTrim$(loadper using "-###.##%"),fdel$
	endif
	V9[1] = V9[1] + 1
	call addtostr(e$,rstr$,tmp$+rdel$)
	Return 
end if ! of browser vers
!

Print #0; Tab 0;A$[140,151];
If W9 = 0
  Print #0; Tab 14;" M";
Else 
  Print #0; Using "##"; Tab 14;W9;
End If 
Print #0; Tab 17;A$[9,38];
if custom_customer$="FPC" ! custom print
	IF P9$[40,40]="Y" PRINT #0; TAB 48;A$[93,108]; ! "vend item #
	PRINT #0; TAB 65;A$[152,155]; ! "commodity
	rem IF PEN_BASE>CUR_BASE PRINT #0; TAB 76;"+"; ! "cost increase
	rem IF PEN_BASE<CUR_BASE PRINT #0; TAB 76;"-"; ! "cost decrease
	PRINT #0; USING PMASK$; TAB 70;OLD_BASE; ! "previous base                       
	LET X2=PFCO[3] \ GOSUB L_7700: \ PRINT #0; TAB 81;X$; ! "date previous          
	PRINT #0; USING PMASK$; TAB 89;CUR_BASE; ! "current base                        
	PRINT #0; TAB 99;"/";CCD$[11,14]; ! "costing u/m                                
	PRINT #0; USING PMASK$; TAB 104;PEN_BASE; ! "pending base                       
	print #0;using "-###.##%";tab 115;baseper;                                      
	LET X2=EFF_DATE \ GOSUB L_7700: \ PRINT #0; TAB 124;X$ ! "effective date        
	LET V9[1]=V9[1]+1 ! "line ctr                                                   
	PRINT #0; TAB 17;A$[63,92]; ! "desc 2                                           
	PRINT #0; USING PMASK$; TAB 70;OLD_LOAD; TAB 89;CUR_LOAD; TAB 99;"/";CCD$[11,14]; tab 104;pen_load;
	print #0;using "-###.##%";tab 115;loadper
Else
	If P9$[40,40] = "Y" Print #0; Tab 48;A$[93,112];
	Print #0; Tab 70;A$[152,155];
	If PEN_BASE > CUR_BASE Print #0; Tab 76;"+";
	If PEN_BASE < CUR_BASE Print #0; Tab 76;"-";
	Print #0; Using PMASK$; Tab 78;OLD_BASE;
	X2 = PFCO[3] \ Gosub L_7700 \ Print #0; Tab 89;X$;
	Print #0; Using PMASK$; Tab 97;CUR_BASE;
	Print #0; Tab 107;"/";CCD$[11,14];
	Print #0; Using PMASK$; Tab 112;PEN_BASE;
	X2 = EFF_DATE \ Gosub L_7700 \ Print #0; Tab 123;X$
	V9[1] = V9[1] + 1
	Print #0; Tab 17;A$[63,92];
	Print #0; Using PMASK$; Tab 78;OLD_LOAD; Tab 97;CUR_LOAD; Tab 107;"/";CCD$[11,14]; Tab 112;PEN_LOAD
End if
V9[1] = V9[1] + 1
X2 = OLD_MRK \ Gosub L_5110 \ Print #0; Tab 50;"MARKUP TABLE:  ";X$[1,4];
X2 = CUR_MRK \ Gosub L_5110 \ If CUR_MRK = 0 Let X$ = "NONE"
Print #0; Tab 71;X$[1,4];
X2 = PEN_MRK \ Gosub L_5110 \ Print #0; Tab 77;X$[1,4];
X2 = OLD_BRK \ Gosub L_5110 \ Print #0; Tab 85;"BREAK TABLE:  ";X$[1,4];
X2 = CUR_BRK \ Gosub L_5110 \ If CUR_BRK = 0 Let X$ = "NONE"
Print #0; Tab 105;X$[1,4];
X2 = PEN_BRK \ Gosub L_5110 \ Print #0; Tab 111;X$[1,4];
Print #0;""
V9[1] = V9[1] + 1
Return 
L_5110: Rem TABLE CHANGE DESC
X$ = " ",X$
X$ = X2 Using "---#" \ If X2 = 0 Let X$ = "NCHG"
If X2 = -1 Let X$ = "NONE"
Return 
L_5800: Rem "==================================== headings
If V9[1] < V9[4] Return 
!!If V9[0] If J7 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J7) if not(j8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 9
!
if j8 return
!
If Not(J7) Print #0;"\15\";
Print #0; Tab 0;"-MX062-"; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V9[0]
Print #0; Tab 42;"PENDING BASE/LOAD COST CHANGE LISTING BY ";
If SORT$ = "P" Print #0;"PRODUCT CODE"
If SORT$ = "D" Print #0;"DATE"
If SORT$ = "C" Print #0;"COMMODITY CODE"
If SORT$ = "D" Let X2 = EFF_DATE \ Gosub L_7700
If SORT$ = "D" Print #0; Tab 48;"COST CHANGES EFFECTIVE ";X$
Print #0;" "
Print #0; Tab 0;"PRODUCT"; Tab 14;"WH"; Tab 17;"DESCRIPTION";
If P9$[40,40] = "Y" Print #0; Tab 48;"VENDOR ITEM #";
if custom_customer$="FPC" ! custom
	PRINT #0; TAB 65;"COMM"; TAB 72;"PREVIOUS"; TAB 83;"DATE";                      
	PRINT #0; TAB 93;"CURRENT"; TAB 106;"PENDING"; TAB 117;"%";TAB 123;"EFFECTIVE"  
	PRINT #0; TAB 71;"BASE/LOAD"; TAB 81;"EXPIRED"; TAB 92;"BASE/LOAD"; TAB 105;"BASE/LOAD";
	print #0;TAB 115;"CHANGE"; TAB 125;"DATE" 
Else
	Print #0; Tab 70;"COMM"; Tab 76;"I/D"; Tab 80;"PREVIOUS"; Tab 91;"DATE";
	Print #0; Tab 101;"CURRENT"; Tab 114;"PENDING"; Tab 123;"EFFECTIVE"
	Print #0; Tab 79;"BASE/LOAD"; Tab 89;"EXPIRED"; Tab 100;"BASE/LOAD"; Tab 113;"BASE/LOAD"; Tab 125;"DATE"
Endif
Print #0; Tab 65;"PREV"; Tab 71;"CURR"; Tab 77;"PEND";
Print #0; Tab 99;"PREV"; Tab 105;"CURR"; Tab 111;"PEND"
Print #0;" "
Return 
L_6040: PROD_WH_FOUND = 0
Search #4,3,1;WH$,R4,E
If E Return 
If WH$[1,12] <> A$[140,151] Return 
W9 = WH$[13,14]
If Not(WH[W9]) Goto L_6040
Gosub L_6200
PROD_WH_FOUND = 1
Return 
L_6200: Rem READ PROD WHSE FILE
Mat Read #4,R4,78;W3;
Mat Read #4,R4,384;WHPARC;
Mat Read #4,R4,696;W7;
Mat Read #4,R4,800;WHMISC;
Return 
!!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!Call "input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
!!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!!Print @0,Msc(34) - 1;'CL'; \ Return 
!!SCRATCH$ = "" \ Call Time(SCRATCH$)
!!SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) !!\ If E Gosub ERR_SEARCH
!!DATE = X$
!!Call DateToJulian(1,X$,X$,E) !!\ If E Gosub ERR_SEARCH
!!X2 = X$[1,5]
!!CURJDATE = X2
!!Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
L_7830: Rem CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
!
L_9100: Rem END OF THIS RANGE
!!If J7 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
V9[1] = 99
!!Gosub PRINT_SELECTION_CRITERIA
!!If J7 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
 
PRINT_SELECTION_CRITERIA: Rem
Gosub L_5800
Print #0; Tab 50;"REPORT SELECTION CRITERIA"
Print #0;""
Print #0; Tab 10;" 1. Sort By  P:product  D:effective date  C:commodity : ";SORT$
Print #0;""
Print #0; Tab 40;"STARTING"; Tab 60;"ENDING"
Print #0;""
Print #0; Tab 10;" 2. Product Code : "; Tab 35;STARTCODE$; Tab 55;K3$
X2 = D1 \ Gosub L_7700
Print #0; Tab 10;" 3. Effective Date : "; Tab 35;X$;
X2 = D2 \ Gosub L_7700
Print #0; Tab 55;X$
If WHSEPRICE ! if warehouse pricing turned on ask for whse and change prompts
  Print #0; Tab 10;" 4. Warehouse Number : ";
  If Not(WH) Print #0;"ALL   ";
  If WH > 1 Print #0;" MW ";
  If WH = 1 ! "only one selected - show which one
    For X1 = 1 To 99
      If WH[X1] Let X = X1
    Next X1
    Print #0; Using "##   ";X;
  End If 
  If PRDMAIN And WH >= 0 Print #0;"+";
  If PRDMAIN Print #0;"MAIN";
  Print #0;""
End If 
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
Rem {begin rtn.error.s}
!
OUTEND: Rem EXIT PROGRAM
!!Print 'CS' \ Close 
!!Chain "MX000"
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
