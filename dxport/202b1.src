! >>> Program 202b1
!
! description  Open Quote Reports, Customer
!
! loadsave -w -n 100,10 -o prog/dxport/202b1.dl4 src/202b1.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  9, 2004  14:30:22
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/mx2/mx202b1.src (univ2) [mary] {05506}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
!!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8
!! 
!!
!!Option Default Dialect IRIS1
Rem MX202B1 - TRUCK ROUTING REPORT PRINT, SORT IS IN MX202A
Rem AUTHOR: MTK   MAR 28, 1989
Rem LAST UPDATE:
Com 1%,PFU1[20],CNVTU[2],UN[2],2%,D8,3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
Dim S1$[118],D2$[20],S2$[20],L6$[60],L1$[156],STP$[4],SSTP$[4]
Dim 1%,L3[3],H4[2],F9[1],TSTOP[2],S2[1],EUN[2],H3[1]
Dim 2%,S1[1],S5,L2[1],L4[3],L6[5],H0[12],H5[16],H6[8],TRMS[1],B[24]
Dim 2%,COID
Dim C5$[20],DELDATE$[24]
Dim 3%,L5[3],L7[12],S3[17],T2[25],TCOD[2],TOTPCS,TOTCUBE,TOTWGHT,TOTSTOP
DIM 3%,A1[7],T8[2],A1$[156],UNF[6],SRN[4]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[75],SJ4$[40],ARDATE$[8],SUNIT$[4]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[20],K9$[50],FNAME$[20]
Dim K8$[30],C8$[50],C9$[50],ULINE$[80],HYPHEN$[80]
DIM K12$[13],SA$[142],SR$[33],SI$[120],K14$[10],M1$[40]
DIM CUSTOM_CUSTOMER$[30]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[500]
!
Def FNR(H) = Sgn(H) * (Int(Abs(H) * 100 + .5) * .01)
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
COID=intCO
FNAME$ = "2/ARTERMCODE" + Str$(COID) \ Ropen #50,FNAME$
Read #1,3,0;CNAME$;
Mat Read #1,0,100;ARDATE$;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;                 
CUSTOM_CUSTOMER$ = UCase$(trim$(CUSTOM_CUSTOMER$))   
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 60 \ If J8 Let J9 = 22
J1 = 99;FTIME = 1
ULINE$ = "_",ULINE$;HYPHEN$ = "-",HYPHEN$
Gosub L_6000
!!Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
If Err 0 Gosub ERR_TRAP
J4$ = "";STP$ = ""
F9[0] = 99;F9[1] = 99;K1$ = " ",K1$
L_2000: Search #9,3,1;K1$,R1,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto OUTEND
If K1$[1,1] >= "{" Goto OUTEND
If FTIME Gosub L_3000 \ FTIME = 0
If STP$ = "" Let STP$ = K1$[9,12]
If J4$ = "" Let J4$ = K1$
If K1$[1,6] <> J4$[1,6] Gosub L_4000 \ Gosub L_3000
If K1$[7,8] <> J4$[7,8] Gosub L_4200
J4$ = K1$
Mat Read #3,R1,0;H0; \ Mat Read #3,R1,52;H3;
Mat Read #3,R1,78;H4; \ Mat Read #3,R1,84;C5$;
Mat Read #3,R1,104;H5; \ Mat Read #3,R1,408;H6;
Mat Read #4,H0[2],0;S1; \ Mat Read #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
MAT READ #4,H0[2],154;SRN;
Mat Read #7,H0[3],8;T2;
K2$ = " ",K2$ \ K2$[1,6] = H0[7] Using "######"
L_2045: Search #5,3,1;K2$,V1,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2100
X2 = K2$[1,6] \ If X2 <> H0[7] Goto L_2100
If (H5[7] = 21 Or H5[7] = 22) And K2$[7,9] = "   " Goto L_2045
Mat Read #5,V1,8;L3; \ Mat Read #5,V1,16;L4;
Mat Read #5,V1,168;L7; \ Mat Read #5,V1,250;UN; \ Mat Read #5,V1,260;S3;
Mat Read #5,V1,256;S2;
Mat Read #5,V1,56;L6; \ Mat Read #5,V1,80;L6$;
Mat Read #5,V1,446;EUN; \ Mat Read #5,V1,452;UNF;
IF CUSTOM_CUSTOMER$="ACME"   
   IF NOT(L7[2]-L7[0]) GOTO L_2045:
else
   IF NOT(L7[4]) GOTO L_2045 ! "none to ship
endif
If S2[0] = 3 Goto L_2045
If L3[0] Gosub L_30000 \ Goto L_2075
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A;
Mat Read #6,L4[0],512;PFU1; \ Mat Read #6,L4[0],554;PFU2;
Mat Read #6,L4[0],460;A1;
IF CUSTOM_CUSTOMER$="ACME"   
   IF (L7[2]-L7[0])>0 AND A1[3] LET T8[1]=T8[1]+((L7[2]-L7[0])*L6[2])/A1[3]
else
   IF L7[4]>0 AND A1[3] LET T8[1]=T8[1]+(L7[4]*L6[2])/A1[3]
endif
L_2075: !
IF CUSTOM_CUSTOMER$="ACME"   
   LET CNVTU[0]=0;CNVTU[1]=PFU1[8];CNVTU[2]=1;CNVTA=L7[2]-L7[0] \ GOSUB L_20000:
   LET L7[2]=FNU(AMOUNT)
else
   LET CNVTU[0]=0;CNVTU[1]=PFU1[8];CNVTU[2]=1;CNVTA=L7[4] \ GOSUB L_20000:
   LET L7[4]=FNU(AMOUNT)
endif
If PFU1[8] > 0 Read #10,PFU1[8],10;SUNIT$;
If PFU1[8] = -1 Let SUNIT$ = "CWT "
IF CUSTOM_CUSTOMER$="ACME"  
   LET T8=T8+L7[2]
else
   LET T8=T8+L7[4] ! "qty and cube
endif
T8[2] = T8[2] + S3[4]
Goto L_2045
L_2100: If Not(T8[1] + T8[0] + T8[2]) Goto L_2180
Gosub L_8100
Gosub L_8200
Gosub L_5800
Gosub L_5000
IF CUSTOM_CUSTOMER$="ACME"   
   GOSUB PRNT_SHIPLIST:
   GOSUB PRNT_MESSAGES:
endif
If K1$[9,12] <> STP$ Let TSTOP[1] = TSTOP[1] + 1;TSTOP[2] = TSTOP[2] + 1
STP$ = K1$[9,12]
L_2180: Gosub L_2200
!Signal 2,J0,A,B \ If J0 <> -1 Gosub L_9615
Goto L_2000
L_2200: Rem TOTALS CALC
T9[0] = T9[0] + T8[0] \ T9[1] = T9[1] + T8[1]
TCOD[1] = TCOD[1] + TCOD[0];TCOD[2] = TCOD[2] + TCOD[0]
T9[2] = T9[2] + T8[0] \ T9[3] = T9[3] + T8[1]
T9[4] = T9[4] + T8[2];T9[5] = T9[5] + T8[2]
T8 = 0 \ T8[1] = 0 \ T8[2] = 0
TCOD[0] = 0
Return 
L_3000: Rem ================ get total pcs, cube, weight and stops
Gosub L_11900
TOTSTOP = TSTOP[2];TOTPCS = T9[0];TOTCUBE = T9[1];TOTWGHT = T9[4]
For X = 0 To 2 \ TCOD[X] = 0;T8[X] = 0;TSTOP[X] = 0 \ Next X
For X = 0 To 20 \ T9[X] = 0 \ Next X
Return 
L_4000: Rem TRUCK TOTAL
Gosub L_4200
If Not(T9[0] + T9[1] + T9[4]) Let TSTOP[2] = 0
T9[0] = 0;T9[1] = 0;T9[4] = 0
TSTOP[2] = 0;TCOD[2] = 0
J4$ = K1$
J1 = 99
F9[0] = 99
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
Return 
L_4200: Rem ZONE TOTAL
F9[1] = 99;TSTOP[1] = TSTOP[1] + 1;TSTOP[2] = TSTOP[2] + 1;STP$ = K1$[9,12]
If Not(T9[2] + T9[3] + T9[5]) Let TSTOP[1] = 0
Return 
Print #0;" " \ J1 = J1 + 1
Gosub L_5800
Print #0;"*** TOTALS FOR ZONE ";S2$[19,20];"***";
Print #0; Using "####"; Tab 35;"(NUMBER OF STOPS: ";TSTOP[1];")";
Print #0; Using "----------.##"; Tab 91;T9[2];
Print #0; Using "-------.##"; Tab 104;T9[3];
Print #0; Using "------.##"; Tab 111;T9[5];
If TCOD[1] Print #0; Using "------.##"; Tab 122;TCOD[1];
T9[2] = 0 \ T9[3] = 0 \ T9[5] = 0
TSTOP[1] = 0;TCOD[1] = 0
Print #0;" " \ Print #0;" " \ J1 = J1 + 1
F9[1] = 99
Return 
L_5000: Rem PRINT LINE
Print #0; Using "####"; Tab 0;H4[1];
Print #0; Using "######"; Tab 6;H0[7];
Print #0; Using "######"; Tab 15;H0[4];
Print #0; Tab 23;S1$[1,30];
Print #0; Tab 67;"|     |     |"
Print #0; Tab 35;S1$[31,60];
Print #0; Tab 67;"|     |     |"
If H3[1] = 6 And H0 = 9
  Print #0; Tab 4;"*** PICK UP  ***";
Else 
  Print #0; Tab 4;"PIECES";
  Print #0; Using "######.##"; Tab 11;T8;
End If 
Print #0; Tab 35;S1$[61,90];
Print #0; Tab 67;"|     |     |"
If H3[1] = 6 And H0[0] = 9
  Print #0; Tab 4;"* FOR CREDIT ***";
Else 
  Print #0; Tab 4;"CUBE";
  Print #0; Using "######.##"; Tab 11;T8[1];
End If 
Print #0; Tab 35;S1$[91,105];"  ";S1$[106,107];" ";S1$[108,117];
Print #0; Tab 67;"|__:__|__:__|"
If H3[1] = 6 And H0[0] = 9
  Print #0; Tab 4;"****************";
Else 
  Print #0; Tab 4;"WEIGHT";
  Print #0; Using "######.##"; Tab 11;T8[2];
End If 
If C5$[1,5] <> "     " Print #0; Tab 35;"ATTN: ";C5$[1,20];
Print #0; Tab 67;"|     |     |"
If C8$[1,5] <> "     " Print #0; Tab 25;"NOTE: ";C8$[1,35];
Print #0; Tab 67;"|     |     |"
Print #0; Tab 67;"|     |     |"
F9[0] = 0;F9[1] = 0
J1 = J1 + 7
Return 
L_5800: Rem HEADINGS ROUTINE
If J1 + 7 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 17
If Not(J8) Print #0;"\15\";
If Not(J8)
  Print #0; Tab (42 - Len(CNAME$) / 2);CNAME$
  Print #0; Tab 30;"TRUCK ROUTING AND"; Tab 70;"PAGE";J2
  Print #0; Tab 33;"DELIVERY LOG"
  Print #0; Tab 0;"DATE ";ARDATE$;
  Print #0; Tab ((80 - PX) / 2 - 1);DELDATE$
  Print #0;" "
  Print #0; Tab 0;"TRUCK ";
  Print #0; Using "######"; Tab 6;S5;
  Print #0; Tab 42;"DELIVER TOTAL PIECES";
  Print #0; Using "#######.##"; Tab 64;TOTPCS
  Print #0; Tab 56;"CUBE";
  Print #0; Using "#######.##"; Tab 64;TOTCUBE
  Print #0; Tab 0;"DRIVER ";ULINE$[1,28];
  Print #0; Tab 56;"WEIGHT";
  Print #0; Using "#######.##"; Tab 64;TOTWGHT
  Print #0;""
  Print #0; Tab 0;"DEPARTURE TIME______:________";
  Print #0;"MILEAGE____________";
  Print #0; Tab 49;"BREAK TIME____:____TO____:____"
  Print #0;""
  Print #0; Tab 0;"RETURN TIME_________:________MILEAGE____________";
  Print #0; Tab 58;"REFUEL_________GALLONS"
  Print #0;""
  Print #0; Tab 0;"  NO. OF STOPS";
  Print #0; Using "####"; Tab 17;TOTSTOP;
  Print #0; Tab 25;"NO. OF ADD-ON ORDERS________   NO. OF PICK-UPS________"
  Print #0;HYPHEN$[1,67];"|-----------|"
  Print #0; Tab 0;"STOP   ORDER   ACCT.#       NAME/ADDRESS";
  Print #0; Tab 67;"|   TIME    |"
  Print #0; Tab 0;HYPHEN$[1,67];"|_IN__|_OUT_|"
End if
Return 
L_6000: Rem ==================== get delivery date
X2 = D8 \ Gosub L_7700
Gosub L_6900
DELDATE$[1,24] = "FOR:",X$[1,20]
For X = 1 To 24
  If DELDATE$[X,X] = " " Goto L_6070
Next X
L_6070: PX = X - 1
Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = "-",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
If Fra(L7[4]) Return 
L6[2] = L7[4] * L6[2]
L7[4] = Int(L7[4])
L6$[58,60] = A1$[123,125]
Return 
L_8100: Rem CHECK FOR COD
TRMS[0] = 0;TRMS[1] = 0
If H0[12] > 0 And H0[12] <= 99
  Mat Read #50,H0[12],52;TRMS;
End If 
If TRMS[1] <> 99 Return 
T2[22] = ((T2[1] - T2[3] - H6[6]) * TRMS[0] / 100)
TCOD[0] = FNR(T2[0] - T2[22])
Return 
L_8200: Rem GET NOTES
K8$ = " ",K8$;K8$[1,6] = H0[4] Using "######"
Search #8,2,1;K8$,K1,E !!\ If E > 1 Gosub ERR_SEARCH
C8$ = " ",C8$;C9$ = " ",C9$
If E Goto L_8270
Mat Read #8,K1,0;C8$;
Mat Read #8,K1,50;C9$;
L_8270: Return 
OUTEND: Rem EXIT ROUTINE
Gosub L_4000
!Print 'CS'
!!!
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
Try Call dxclose() Else rem
End 
!!!
!!Chain "MX000C"
Stop 
Stop 
L_11900: Rem ======================== get pcs, cube, weight and stops
K9$ = " ",K9$
SJ4$ = "";SSTP$ = ""
K9$[1,6] = K1$[1,6]
L_12000: Search #9,3,1;K9$,R9,E !!\ If E > 2 Gosub ERR_SEARCH
If E Return 
If K9$[1,1] >= "{" Gosub L_14000 \ Return 
If SSTP$ = "" Let SSTP$ = K9$[9,12]
If SJ4$ = "" Let SJ4$ = K9$
If K9$[1,6] <> SJ4$[1,6] Gosub L_14000 \ Return 
If K9$[7,8] <> SJ4$[7,8] Gosub L_14200
SJ4$ = K9$
Mat Read #3,R9,0;H0; \ Mat Read #3,R9,52;H3;
Mat Read #3,R9,78;H4;
Mat Read #3,R9,84;C5$;
Mat Read #3,R9,104;H5;
Mat Read #3,R9,408;H6;
Mat Read #4,H0[2],0;S1;
Mat Read #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$;
Mat Read #4,H0[2],146;S5;
Mat Read #7,H0[3],8;T2;
If H3[1] = 6 And H0[0] = 9 Goto L_12100
K2$ = " ",K2$ \ K2$[1,6] = H0[7] Using "######"
L_12045: Search #5,3,1;K2$,V1,E !!\ If E > 2 Gosub ERR_SEARCH
If E Goto L_12100
X2 = K2$[1,6] \ If X2 <> H0[7] Goto L_12100
If (H5[7] = 21 Or H5[7] = 22) And K2$[7,9] = "   " Goto L_12045
Mat Read #5,V1,8;L3; \ Mat Read #5,V1,16;L4;
Mat Read #5,V1,168;L7; \ Mat Read #5,V1,250;UN; \ Mat Read #5,V1,260;S3;
Mat Read #5,V1,256;S2;
Mat Read #5,V1,56;L6; \ Mat Read #5,V1,80;L6$;
Mat Read #5,V1,446;EUN; \ Mat Read #5,V1,452;UNF;
IF CUSTOM_CUSTOMER$="ACME"   
   IF NOT(L7[2]-L7[0]) GOTO L_12045:
else
   IF NOT(L7[4]) GOTO L_12045  ! "none to ship
endif
If S2[0] = 3 Goto L_12045
If L3[0] Gosub L_30000 \ Goto L_12075
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A;
Mat Read #6,L4[0],512;PFU1; \ Mat Read #6,L4[0],554;PFU2;
Mat Read #6,L4[0],460;A1;
IF CUSTOM_CUSTOMER$="ACME"    
   IF (L7[2]-L7[0])>0 AND A1[3] LET T8[1]=T8[1]+((L7[2]-L7[0])*L6[2])/A1[3]
else
   IF L7[4]>0 AND A1[3] LET T8[1]=T8[1]+(L7[4]*L6[2])/A1[3]
endif
L_12075: !
IF CUSTOM_CUSTOMER$="ACME"    
   LET CNVTU[0]=0;CNVTU[1]=PFU1[8];CNVTU[2]=1;CNVTA=L7[2]-L7[0] \ GOSUB L_20000:
   LET L7[2]=FNU(AMOUNT)
else
   LET CNVTU[0]=0;CNVTU[1]=PFU1[8];CNVTU[2]=1;CNVTA=L7[4] \ GOSUB L_20000:
   LET L7[4]=FNU(AMOUNT)
endif
If PFU1[8] > 0 Read #10,PFU1[8],10;SUNIT$;
If PFU1[8] = -1 Let SUNIT$ = "CWT "
IF CUSTOM_CUSTOMER$="ACME"    
   LET T8=T8+L7[2] 
else
   LET T8=T8+L7[4] ! "qty and cube 
endif
T8[2] = T8[2] + S3[4]
Goto L_12045
L_12100: If Not(T8[1] + T8[0] + T8[2]) Goto L_12180
If K9$[9,12] <> SSTP$ Let TSTOP[1] = TSTOP[1] + 1;TSTOP[2] = TSTOP[2] + 1
SSTP$ = K9$[9,12]
L_12180: Gosub L_12200
!!!Signal 2,J0,A,B \ If J0 <> -1 Gosub L_9615
Goto L_12000
L_12200: Rem TOTALS CALC
T9[0] = T9[0] + T8[0] \ T9[1] = T9[1] + T8[1]
TCOD[1] = TCOD[1] + TCOD[0];TCOD[2] = TCOD[2] + TCOD[0]
T9[2] = T9[2] + T8[0] \ T9[3] = T9[3] + T8[1]
T9[4] = T9[4] + T8[2];T9[5] = T9[5] + T8[2]
T8 = 0 \ T8[1] = 0 \ T8[2] = 0
TCOD[0] = 0
Return 
L_14000: Rem TRUCK TOTAL
Gosub L_14200
SJ4$ = K9$
Return 
L_14200: Rem ZONE TOTAL
TSTOP[1] = TSTOP[1] + 1;TSTOP[2] = TSTOP[2] + 1;STP$ = K9$[9,12]
If Not(T9[2] + T9[3] + T9[5]) Let TSTOP[1] = 0
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set n/s units for conversions
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1];PFU1[13] = UN[0]
PFU1[16] = EUN[0];PFU1[17] = EUN[0];PFU1[18] = UN[0]
PFU1[19] = UN[0]
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
!========== custom codes for Acme
PRNT_MESSAGES: REM "======================================= message
LET PRNTMSG=0
LET M1$=" ",M1$
LET K14$=" ",K14$;K14$[1,6]=H0[7] USING "######"
LET K14$[7,9]="  1";K14$[10,10]=""
L_5315: SEARCH #14,3,1;K14$,R14,E  !!" IF E>2 GOSUB ERR_SEARCH:
IF E GOTO L_5365:
LET ORDNUM=K14$[1,6]
IF ORDNUM<>H0[7] GOTO L_5365:
LET I=K14$[7,9] \ IF I>600 GOTO L_5365:
MAT  READ #14,R14;M1$;
GOSUB L_5800:
IF NOT(PRNTMSG)
	PRINT #0; TAB 0;"SPECIAL MESSAGE: ";
ENDIF 
PRINT #0; TAB 20;M1$ \ LET J1=J1+1 \ LET PRNTMSG=PRNTMSG+1
GOTO L_5315:

L_5365: REM
RETURN 

PRNT_SHIPLIST: REM     
READSHIPLIST: REM
LET SI$=" ",SI$
LET SA$=" ",SA$
LET SR$=" ",SR$
LET K12$=" ",K12$
LET K12$[1,6]=SRN[2] USING "######" \ LET K12$[7,7]="."
LET K12$[8,13]=SRN[1] USING "&&&&&&"
SEARCH #12,2,1;K12$,R12,E \ IF E RETURN 
MAT  READ #12,R12,0;SA$;
MAT  READ #12,R12,150;SR$;
MAT  READ #12,R12,204;SI$;
IF SI$[1,1]<>"" IF SI$[1,4]<>"    "
   PRINT #0; TAB 0;"SHIPPING NOTE: ";
   PRINT #0; TAB 20;SI$[1,30];
ENDIF 
IF SI$[31,31]<>"" IF SI$[31,34]<>"    "
   PRINT #0; TAB 60;SI$[31,60];
ENDIF 
IF (SI$[31,31]<>"" AND SI$[31,34]<>"    ") OR (SI$[1,1]<>"" AND SI$[1,4]<>"    ")
	PRINT #0;" " \ LET J1=J1+1
ENDIF 
IF SI$[61,61]<>"" IF SI$[61,64]<>"    "
   PRINT #0; TAB 20;SI$[61,90];
ENDIF 
IF SI$[91,91]<>"" IF SI$[91,94]<>"    "
   PRINT #0; TAB 60;SI$[91,120];
ENDIF 
IF (SI$[31,31]<>"" AND SI$[31,34]<>"    ") OR (SI$[1,1]<>"" AND SI$[1,4]<>"    ")
	PRINT #0;" " \ LET J1=J1+1
ENDIF 
RETURN 


Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
!
!Rem {end rtn.error.s}
