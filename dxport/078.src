! >>> Program 078
!
! description  LOAD MARKUP PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/078.dl4 src/078.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 14, 2005  11:26:33
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx0/mx078.src (univ2) [jcs] {51852}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
Option Default Dialect IRIS1
Rem MX078  PRODUCT LOAD COST MARKUP PRINT
Rem AUTHOR: MTK   JUL 26, 1984
Rem  LAST UPDATE:  G.DOSCHER  2/26/85
If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim 1%,F,X1,2%,X2,3%,J,X3
Dim U9$[30],X$[10],D$[24]
Dim U5$[50],D8$[8],K1$[50],K2$[20],K3$[20]
Dim M5$[4]
Dim 1%,LM1[37,5],LM3[37,3]
Dim 2%,LM2[37,3],LM4[37,3]
Dim 3%,M7
Dim 3%,M8,M9[1]
Dim 2%,B3,B4
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
For I = 2 To 2
  Read L \ If L = -1 Goto L_825
  J2 = Abs(Fra(L) * 1000) \ If J2 < 88 Or J2 > Chf(1) - 1 Let J2 = 88
  J1 = Int(Abs(L))
  Read #1,J2,J1;J$[1,16];
  If L >= 0 Open #I,J$ Else Ropen #I,J$
L_825: Next I
Read #1,3;U9$;
Data "-32.150"
Mat Read #1,0,100;D8$;
L_845: L = 90
P = 0
M5$ = "%$GH"

!If Err 0 Let J8 = Spc(8)
!J8 = 0 \ J9 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!J9 = 60
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[900],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"078",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if

CALL DXGET("K2",tmp$) \  If tmp$ = "" Let M9 = 1 ELSE M9 = tmp$
CALL DXGET("K3",tmp$) \  If tmp$ = "" Let M9[1] = 999 ELSE M9[1] = tmp$

!
IF M9 < 1 or M9 >= 999 LET  e$ = "Invalid starting table code, must be between 1 and 999 !"   \ error 10000
if M9[1] > 999 or M9 > M9[1]  LET  e$ = "Invalid ending table code, must be between starting table code and 999!"   \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

!
!L_1000: Rem ENTER RANGE
!L_1010: Print @0,20;"ENTER STARTING TABLE,  <CR>: ALL,   E: EXIT : ";'CE';
!Input ""K2$
!If K2$ = "" Goto L_1140
!If K2$ = "E" Goto OUTEND
!M9 = K2$
!If M9 < 1 Goto L_1010
!If M9 >= 999 Goto L_1010
!L_1070: Print 'CR';"ENTER ENDING TABLE,    <CR>: LAST : ";'CL';
!Input ""K3$
!If K3$ = "" Let K3$ = "999"
!M9[1] = K3$
!If M9[1] < 1 Goto L_1070
!If M9[1] > 999 Goto L_1070
!Goto L_1170
!L_1140: Print 
!M9[0] = 1
!M9[1] = 999
!L_1170: If M9 <= M9[1] Goto L_1900
!Print 'CR MU CL MU CL RB';" INVALID RANGE ";
!Signal 3,20
!Goto L_1000
!L_1900: Print @0,21;"PRINTING, PLEASE WAIT . . . ";'CE';
!Signal 3,0
!If Err 0 Gosub ERR_ESCAPE

if j8  !dx XML head
    tmp$ = "TABLE NUMBER ",fdel$
	tmp$ = tmp$,"TABLE NAME",fdel$
	tmp$ = tmp$,"NUMERATION",fdel$
	tmp$ = tmp$,"ORDER TYPE",fdel$
	tmp$ = tmp$,"COST CODE",fdel$
	tmp$ = tmp$,"COST NAME",fdel$
    tmp$ = tmp$,"MARKUP1",fdel$
	tmp$ = tmp$,"MARKUP2",fdel$
    tmp$ = tmp$,"MARKUP3",fdel$
   	tmp$ = tmp$,"MARKUP4",fdel$
    tmp$ = tmp$,"MARKUP5",fdel$
	tmp$ = tmp$,"MARKUP6",fdel$
    tmp$ = tmp$,"MARKUP7",fdel$
   	tmp$ = tmp$,"MARKUP8",fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
end if
!

!

For B3 = M9[0] To M9[1]
  M8 = 0
  R1 = B3
  If Err 0 Goto L_2245
  Mat Read #2,R1,24;LM1;
  !If Err 0 Gosub ERR_ESCAPE
  For B4 = 1 To 38
    M8 = M8 + LM1[B4 - 1,4]
  Next B4
  If Not(M8) Goto L_2250
  Mat Read #2,B3,0;D$;
  Gosub L_5800
  Print #0;"" \ L = L + 1
    if NOT (j8)
		Print #0; Using "###"; Tab 8;"TABLE ";B3;" - ";D$;"\15\"
	end if
!if j8
if NOT (j8)
	Print #0;" - ";D$;"\15\" 
end if
  if not(j8)
  Print #0; Tab 5;"ORDER TYPE"; Tab 42;"MARKUP1"; Tab 53;"MARKUP2";
  Print #0; Tab 64;"MARKUP3"; Tab 75;"MARKUP4"; Tab 86;"MARKUP5";
  Print #0; Tab 97;"MARKUP6"; Tab 108;"MARKUP7"; Tab 119;"MARKUP8"
  end if
  L = L + 3
  R1 = B3
  Mat Read #2,R1,24;LM1;
  Mat Read #2,R1,480;LM2;
  Mat Read #2,R1,1100;LM3;
  Mat Read #2,R1,1404;LM4;
  For B4 = 1 To 38
    For B5 = 3 To 0 Step -1
      If LM2[B4 - 1,B5] Goto L_2220
    Next B5
L_2220: Rem.
    Gosub L_5000
  Next B4
L_2245: !If Err 0 Gosub ERR_ESCAPE
L_2250: Next B3
Goto L_9100

L_5000: Rem PRINT LINE

if j8
	 tmp$ = B3 Using "###",fdel$ !TABLE NUMBER
     tmp$ = tmp$,rtrim$(D$),fdel$ ! TABLE NAME
    tmp$ = tmp$,B4 Using "##",fdel$ ! NUMERATION
else
	Print #0; Using "##"; Tab 2;B4;
end if
Gosub L_5200
if j8
    tmp$ = tmp$,LM1[B4 - 1,4] Using "##",fdel$ ! COST CODE
else
	Print #0; Using "##"; Tab 27;LM1[B4 - 1,4];
end if
Gosub L_5300
If LM1[B4 - 1,4] = 0 if not(j8) Goto L_5122 !!important 
If B5 = -1 Let B5 = 0
For X = 0 To 7
  If X <= 3 ! "first group
    if j8
       If LM2[B4 - 1,X] 
		let tmp$ = tmp$,LTrim$(LM2[B4 - 1,X] Using "----#.##")  ! ,fdel$ 
		X1 = LM1[B4 - 1,X]
		tmp$=tmp$,"  ",M5$[X1 + 1,X1 + 1],fdel$
	   else 
		let tmp$=tmp$,fdel$!MARKUP X -> VALUE %
	   Endif
    else
	   If LM2[B4 - 1,X] = 0  Goto NXTCALC
	   Print #0; Using "----#.##"; Tab 40 + X * 11;LM2[B4 - 1,X];    
    end if
	X1 = LM1[B4 - 1,X]
    if NOT (j8)
	   Print #0; Tab 49 + X * 11;M5$[X1 + 1,X1 + 1];	
    end if  
  Else ! "second Group
    if j8
       If LM4[B4 - 1,X - 4] 
		let tmp$ = tmp$,LTrim$(LM4[B4 - 1,X - 4] Using "----#.##") ! ,fdel$
		X1 = LM3[B4 - 1,X - 4]
		tmp$=tmp$,"  ",M5$[X1 + 1,X1 + 1],fdel$
	   else 
	     let tmp$=tmp$,fdel$ !MARKUP X -> VALUE %
	   Endif
    else
	   If LM4[B4 - 1,X - 4] = 0  Goto NXTCALC
	   Print #0; Using "----#.##"; Tab 40 + X * 11;LM4[B4 - 1,X - 4];	
    end if
	X1 = LM3[B4 - 1,X - 4]
   if NOT (j8)
	   Print #0; Tab 49 + X * 11;M5$[X1 + 1,X1 + 1];
    end if 
  End If 

NXTCALC: Rem "see if more
Next X
call addtostr(e$,rstr$,tmp$+rdel$) 

L_5122: J$ = "N" \ If LM1[B4 - 1,5] = 1 Let J$ = "Y"
Print #0;"" \ L = L + 1  
If J8 If B4 = 17 Gosub L_5150
Return 

L_5150: Rem SCREEN STOP
!Print 
!Input @0,23;"PRESS <CR> TO CONTINUE "J$
!Print @0,22;'CL';
Return 
L_5200: Rem PRINT ORDER TYPE
J2$ = " ",J2$
X2 = (B4 - 1) * 20
Read #1,62,X2;J2$;
If J2$[1,1] = "" Or J2$[1,6] = "      " Let J2$ = B4 Using "ORDER TYPE ##"
if j8
    tmp$ = tmp$,rtrim$(J2$),fdel$ !ORDER TYPE
else
	Print #0; Tab 5;J2$;
end if
Return 
L_5300: Rem GET COST NAME
J0$ = " ",J0$
X1 = LM1[B4 - 1,4]
If X1 = 0 Let J0$ = "NOT USED" \ Goto L_5370
If X1 = 5 Let J0$ = "AS ENTERED" \ Goto L_5370
If X1 = 3 Let J0$ = "BASE COST" \ Goto L_5370
D1 = 0
If X1 = 1 Let D1 = 14
If X1 = 2 Let D1 = 12
If X1 = 4 Let D1 = 24
If Not(D1) Goto L_5370
X1 = (D1 - 1) * 10
Read #1,18,X1;J0$;
L_5370: 
if j8
    tmp$ = tmp$,rtrim$(J0$),fdel$ ! COST NAME
else
	Print #0; Tab 30;J0$;
end if
Return 
L_5800: Rem HEADINGS
If L < J9 Return 
!If J8 If P Input @0,23;"PRESS <CR> TO CONTINUE "J$
if j8 return
!
If P Print #0;"\14\";
Print #0;"\15\"; Tab (Int(66 - Len(U9$) / 2));U9$
P = P + 1
Print #0; Tab 10;"DATE: ";D8$;
Print #0; Tab 49;"PRODUCT LOAD COST MARKUP TABLE LIST"; Tab 110;"PAGE";P
Print #0;" "
L = 39
Return 
!OUTEND: Rem EXIT PROGRAM
Close \ Chain "MX000"
L_9100: Rem END OF THIS RANGE
!If J8 Input @0,23;"PRESS <CR> TO CONTINUE  "J$
!Print 'CS'
If K2$ = "" Goto OUTEND  
Goto L_845
Stop 
Rem {begin rtn.error.s}
!ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!If Spc(8) = 99 ! "escape hit/return back
!  Print 'RB ML';" ";'ML';
!  Return -1
!End If 
!If Spc(8) = 123 ! "record lock
!  Escdis 
!  Window Open @0,0; Size 30,3; Using ""
!  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
!  Signal 3,50
!  Window Close 
!  Escclr 
!  Return -1
!End If 
!Dim 2%
!Window Off 
!Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
!ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
!If ENUM = 157 Let CTERR = Err(8)
!Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
!Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
!Goto ERR_MAIN
!ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
!Dim 2%
!Window Off 
!Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
!ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
!If E = 5 Let CTERR = Err(8)
!Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
!Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
!Goto ERR_MAIN
!ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
If Spc(8) <> 99 Goto ERR_TRAP
If Err 0 Rem
!CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
If Err 0 Gosub ERR_TRAP
!!Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
!Input Len 16385;""ABREQ$
!Call String(1,ABREQ$)
!!Print @0,Msc(34) - 1;'CL';
!!If Err 0 Gosub ERR_ESCAPE
!If ABREQ$ <> "Y"
!  Print 'ML';" ";'ML';
!  Return -1
!End If 
Goto OUTEND
!ERR_MAIN: Rem "main error handling logic
!If Err 0 Rem
!Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
!PNAME$ = Msc$(4)
!Call String(1,PNAME$)
!POS_ = 1;POS1 = 0
!NAMEPARSE: Rem "get program name from path
!Search PNAME$[POS_],"/",POS1
!If POS1
!  POS_ = (POS_ + POS1)
!  Goto NAMEPARSE
!End If 
!Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
!Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
!Print "TRACE: ";'CL';
!STACKLOOP: Rem "print nesting information
!Print Using "<#####> ";Spc(16);
!If Spc(14) Goto STACKLOOP
!!Print 'CR';"************************************"
!Close #0
!Open #0,"errorlog"
!Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
!Close #0
!!Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
!PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
!Call String(2,PNAME$)
!System 28,PNAME1$
!Call String(5,PNAME2$)
!PNAME2$ = " ",PNAME2$
!PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
!Call InpBuf(PNAME2$)
!Stop 
!Rem {end rtn.error.s}

OUTEND: Rem EXIT PROGRAM

! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!

Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 