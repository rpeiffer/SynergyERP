! serp450afp.dl4 - Commission report
! Custom version for All Florida Paper
!
! loadsave -w -n 100,10 -o prog/dxport/serp450afps.dl4 src/serp450afps.src
!
Rem MX450 - SALESMAN COMMISSION (for morrisette)
Rem AUTHOR:   MAR 27, 1987
Rem LAST UPDATE: roman  05/30/1991  fix prompts
! mod B.Swet 2/26/92 add cust sort moved gp% & cost in with column
!          03/28/1997 - DATE COMPARE JULIAN
!  jlp 2/11/98 cct110393 sales not accumulated right if run by month
!  jlp 3/17/98 cct110205 and 110903
!  jliu 6/7/99 cct123526 take care no commssion for the salesman
!  sms 7/19/99 leap year
!  jlp 7/19/99 cct122312 number prompts, fix purge flag
!  tc 1/4/00 cct131003 fix assign of YEAR variable
!  jlp 1/4/00 (cct131003) also fix YEAR check for y2k
!  Added a year check for current month sale print 02/14/00  rab
!  jliu 04/03/00 cct134601 y2k problem
! jliu 5/22/02 cct157166 print a summery line for each salesperson for the
!              the non-amalgamted version
! jliu 6/27/02 cct158506 on the aduit version print a "*" next to the inv/cm
!              that are marked to purge. Add an option to unmark items.
! jliu 7/3/02 cct158716 add the new prompt 
!             "Use  C: current or  H: historical slsm commission records"
! jliu 7/18/02 cct159076 fix the checking AR paid date logic
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 30, 2009  16:33:17
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx450.src (univ2) [txc] {21710}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc"
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
Declare External Function openprinter

External Lib "dxblockcustom.lib"
Declare External Sub blockPrintersDropList
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
Declare External Function chkDteFrmt$,buildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,programdump
Declare Intrinsic Function findchannel
! Option Default Dialect IRIS1

Def FNW(H) = Sgn(H) * (Int(Abs(H) * 1 + .5) * 1)
If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim C1$[30],J$[75],J1$[75],J2$[20],J3$[40],J4$[75],J7$[50],K9$[50],J0$[10]
Dim J8$[8],J9$[50],K1$[50],K2$[20],K3$[20],S1$[30],Z1$[50],X$[10],SMAT$[1]
Dim P60$[50],CF$[1],P9$[50],COMP$[30],J5$[75],ARDATE$[10],TEMP$[10]
Dim 1%,Z2$[2],URECFLAG
Dim 1%,ARMONTH,custr[2]
Dim 1%,E,N3,N4,S4[1],X1,3%,A3[13],J,S2[1],T8[20],T9[20],S6[1]
Dim 3%,T10[20],S10,S7[1],PT8[5],PT9[5],PT10[5],4%,J1
Dim 2%,A2[5],J2,J3,J4,J7[2],J8,J9,N1,N2,R1,R3,R4,R5,S1[3],S3[1],S8,X2
Dim 2%,C1[12],JDATE[1],ARDATE,DT3[1],JWDATE,SPAYDATE,EPAYDATE,JSPAYDATE,JEPAYDATE,JPAYDATE,3%
Dim 2%,JARPAYDATE
Dim K98$[50],SCRATCH$[80],SNAME$[15],F$[16]
Dim 3%,GP,COST,PROFIT,PRIMTH,CURMTH,AMTPAID,COMMAMT,COMMDUE
Dim 3%,ARREF[1],X3[9],ocs1[3],custr_pct
! commission audit file vars
dim k7$[30]
dim 1%,as1[3],as4[1]
dim 2%,r7,as2[1]
dim 3%,as3[5],aorigcomm,as5[6]
dim source$[10],cas$[60]

! transaction "roll ups"
dim commType$[4],minNotMet$[1]
dim 3%,commAdj[5]

Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[600],msg$[100],rstr$[2000],webstr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128],action1$[30],action2$[30],custom_customer$[30]
Dim List$[100,100] ! for lists
! call dxopen() ! for standalone run
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
call dxget("u_custom_customer",custom_customer$)

!Print 'CS'
action1$=UCase$(RTrim$(action1$))
Mat Read #1,60,50;P60$;

For J = 2 To 7
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "2240","-1824","-1808","-1504","-1408","-1"
OPEN #7,"4/commaudit"+STR$(intco)
Read #1,3;COMP$;
Mat Read #1,0,100;J8$;
Mat Read #1,0,108;ARDATE;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,19,50;P9$;
CF$ = P60$[37,37]
ARDATE$ = ARDATE Using "&&&&&&"
CH_SLSMCOMM = 2
ch_commaudit = 7
! check screen print upon submit
SORTKEY = 0
returnstatus=1;message$="OK"
EPAYDATE = 591231;SPAYDATE = 700101
Gosub HIST_FIND

SORTKEY = 0
ARCODE = 0
YEAR_ = 0
N3 = 0
N4 = 999
SUMM = 0
PRTCOST = 0

EDARCODE: Rem
call dxget("ARMONTH",tmp$)
K2$=RTrim$(tmp$) ! Call String(1,K2$)
If K2$ = ""
  ARCODE = 0
  Goto Eddate !Gosub EDDATE
End If
ARCODE = K2$ ! \ 
If ARCODE < 1 Or ARCODE > 12 ! Goto EDARCODE
	returnstatus=0
	e$="Invalid Month Number"
	goto ERR_MSG
Endif
EDYEAR: Rem
call dxget("ARYEAR",tmp$)
tmp$=Trim$(tmp$)
if len(tmp$)>2 ! sent 4 digit?
	K2$=tmp$[3,4] ! just last 2
Else
	k2$=RTrim$(tmp$)
Endif
YEAR_ = K2$

EDDATE: Rem
if ARCode goto EdSlsm ! one or the other
If STARTDATE = 0 Let STARTDATE = 700101
call dxget("STARTDATE",tmp$)
tmp1$=chkDteFrmt$(E$,tmp$)
if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
if tmp1$<>""
	tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
Else
	tmp$="19"+StartDate using "&&&&&&"
Endif
J1=tmp$[3,10]
If J1 Let X2 = J1 \ Gosub L_7820 \ X2=-1 ! Goto EDDATE
if x2<=0
	returnstatus=0
	e$="Invalid Start Date"
	goto err_msg
Endif
STARTDATE = J1;JDATE[0] = X2

EDENDDATE: Rem "Ending
If ENDDATE = 0 Let ENDDATE = 591231
J1 = ENDDATE
call dxget("ENDDATE",tmp$)
tmp1$=chkDteFrmt$(E$,tmp$)
if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
if tmp1$<>""
	tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
Else
	tmp$="20"+EndDate using "&&&&&&"
Endif
J1=tmp$[3,10]
X2 = J1 \ Gosub L_7820 \ X2=-1 ! Goto EDENDDATE
if x2<=0
	returnstatus=0
	e$="Invalid End Date"
	goto err_msg
Endif
ENDDATE = J1;JDATE[1] = X2
If JDATE[0] > JDATE[1]
  E$="Invalid Date Range"
  goto err_msg
End If 

EDSLSM: Rem ***** INPUT SALESMAN RANGE == BWB == 4/9/87
call dxget("STSLSM",tmp$) \ if tmp$="" let tmp$=Str$(N3)
k2$=tmp$
N3 = K2$
call dxget("ENDSLSM",tmp$) \ if tmp$="" let tmp$=Str$(N4)
K3$=tmp$
N4 = K3$
If N3 <= N4 Goto SLSMDONE
e$="Invalid Salesperson Range"
goto err_msg

SLSMDONE: Rem
EDCOST: Rem PRINT COST & G/P
call dxget("COSTGP",tmp$)
j1=0 \ if ucase$(tmp$)="Y" let j1=1
PRTCOST = 0 \ If J1 Let PRTCOST = 1

EDPURGE: Rem  paid only , all , or audit version ?
PRT_PAIDONLY = 0
UNMARK_PURGE = 0
call dxget("PRGTYPE",tmp$)
z1$=tmp$
If Z1$ <> "1" And Z1$ <> "2" And Z1$ <> "3" ! Goto EDPURGE
	returnstatus=0
	e$="Please select 1 2 or 3"
	goto err_msg
Endif
PURGEFLAG = Z1$

If PURGEFLAG = 1 or PURGEFLAG = 3
	call dxget("PAIDONLY",tmp$)
	j1=0 \ if UCase$(tmp$)="Y" let j1=1
	PRT_PAIDONLY = 0 \ If J1 Let PRT_PAIDONLY = 1
	If PRT_PAIDONLY = 1
		PAYDATE: Rem
		If Not(SPAYDATE) Let SPAYDATE = 700101
		J1 = SPAYDATE
		call dxget("STPAYDATE",tmp$)
		tmp1$=chkDteFrmt$(E$,tmp$)
		if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
		if tmp1$<>""
			tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
		Else
			tmp$="19"+SPAYDATE using "&&&&&&"
		Endif
		J1=tmp$[3,10]
		If J1 Let X2 = J1 \ Gosub L_7820 \ X2=-1 ! Goto PAYDATE
		if x2<=0
			e$="Invalid Start Payment Date"
			goto err_msg
		Endif
		SPAYDATE = J1;JSPAYDATE = X2
		ENDPAYDATE: Rem "Ending payment date
		If EPAYDATE = 0 Let EPAYDATE = ARDATE
		J1 = EPAYDATE
		call dxget("ENDPAYDATE",tmp$)
		tmp1$=chkDteFrmt$(E$,tmp$)
		if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
		if tmp1$<>""
			tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
		Else
			tmp$="20"+EPAYDATE using "&&&&&&"
		Endif
		J1=tmp$[3,10]
		X2 = J1 \ Gosub L_7820 \ X2=-1 ! Goto ENDPAYDATE
		if x2<=0
			e$="Invalid End Payment Date"
			goto err_msg
		Endif
		EPAYDATE = J1;JEPAYDATE = X2
		If JEPAYDATE < JSPAYDATE
			e$="Invalid Payment Date Range"
			goto err_msg
		End If
	End If
End If !"purgeflag =1

HIST_QUEST: Rem
UNMARK_PURGE = 0
if havehist ! only ask if it's there
	call dxget("CHCOMM",tmp$)
	tmp$=UCase$(RTrim$(tmp$))
Else
	tmp$="C"
Endif
J$=tmp$
If J$ <> "H" And J$ <> "C" ! Goto HIST_QUEST
	e$="Please select C or H"
	goto err_msg
Endif
HIST = 0 \ If J$ = "H" Let HIST = 1
If J$ = "H"
	HIST = 1
	Close #CH_SLSMCOMM
	close #ch_commaudit
	SCRATCH$ = Str$(IntCo) ! Str$(Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
	Open #CH_SLSMCOMM,"4/SSLSMCOMMH" + SCRATCH$
	open #ch_commaudit,"4/commaudith" + scratch$
Else
	HIST = 0
End If
If Not(HIST) And PURGEFLAG = 3
	call dxget("UMKPRG",tmp$)
	J1=0 \ if tmp$="Y" let j1=1
	UNMARK_PURGE = 0 \ If J1 Let UNMARK_PURGE = 1
End If
call dxget("Printer",tmp$) ! let's see if 1 selected (-- = NONE)
tmp$=rtrim$(tmp$)
if tmp$[1,2]="--"
	Returnstatus=0
	e$="NO PRINTER SELECTED"
	goto ERR_MSG ! Done
Endif
onchannelno=0 ! zero for channel
printchan = openprinter(e$,onchannelno)
Toscreen=0
if printchan=-1 let Toscreen=1 ! to browser
let SCREENPRINT=toscreen
X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w/40C
MAIN: Rem

MAXLINES = 59 ! \ If SCREENPRINT Let MAXLINES = 20
LN = 99
if screenprint ! xml 
	tmp$ = bsdel$,"450afps",fdel$,rdel$
	call addtostr(e$,rstr$,tmp$)
	! set headings
	if summ ! slsm /grand totals only
		tmp$="SLSM",FDEL$,"NAME",FDEL$
	Else ! slsm/cust/detail/grand
		tmp$="SLSM",FDEL$,"NAME",FDEL$
		tmp$=tmp$,"REF #",fdel$,"REF DATE",fdel$,"TYPE",fdel$
		tmp=tmp$,"CUST",fdel$,"CUSTNAME",fdel$
	Endif ! rest is standard
	tmp$=tmp$,"COMMSBL $",fdel$
	If PRTCOST
		tmp$=tmp$,"COMMSBL CST",fdel$,"GROSS PROFIT",fdel$,"GP %",fdel$
	Endif
	tmp$=tmp$,"MIN?",fdel$,"INV NET OF EXCL PRODS",fdel$
	tmp$=tmp$,"REBATE AMT",fdel$,"REBATE %",fdel$
! 	if not(arcode) tmp$=tmp$,"PRV MNTH",fdel$
! 	tmp$=tmp$,"SALES",fdel$,"PAID",fdel$,"COMMISSION",fdel$
	tmp$=tmp$,"TERMS DISC.",fdel$,"OTHER DISC.",fdel$
 	IF PRTCOST tmp$=tmp$,"NET GPD",fdel$
! 	If PURGEFLAG = 1 And SUMM = 0 And PRT_PAIDONLY = 1
! 		tmp$=tmp$,"PAID DATE",fdel$
! 	Else
! 		tmp$=tmp$,"DUE",fdel$
! 	Endif
	tmp$=tmp$,"OVER 60",fdel$,"COMM %",fdel$,"COMM. DUE",fdel$
	tmp$=tmp$,"MAN?",fdel$
! 	If PURGEFLAG = 3 let tmp$=tmp$,"UNMRKD",fdel$
	tmp$=tmp$,rdel$
	call addtostr(e$,rstr$,tmp$)
Else ! normal print - send in process
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
Endif
If Err 0 Gosub ERR_TRAP
Gosub SORTCOMMFILE
If Not(SUMM)
	Gosub CLEAR_SORT
End If

COUNT = 0
K1$ = N3 Using "###"
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
	If E Goto L_9100
	Mat Read #2,R1,0;S1;
	Mat Read #2,R1,16;S2;
	Mat Read #2,R1,28;S3;
	Mat Read #2,R1,36;S4;
	Mat Read #2,R1,40;S6;
	Mat Read #2,R1,54;S7;
	MAT  READ #2,R1,112;ocs1;
	COUNT = COUNT + 1
	If ARCODE If S4[0] <> ARCODE Goto L_2000
	X2 = S1[3] \ Gosub L_7820 \ X2 = 0
	JWDATE = X2
	If Not(ARCODE) If JWDATE < JDATE[0] Goto L_2000
	If Not(ARCODE) If JWDATE > JDATE[1] Goto L_2000
	If S1[0] < N3 Goto L_2000
	If S1[0] > N4 Goto L_9100
	If S8 If S8 <> S1 Gosub L_4500
	If S10 If S10 <> S3[1] Gosub L_4600
	If Not(S8) Gosub L_3000
	If Not(S10) Gosub L_3200
	Gosub L_3400
	Rem CHECKING A/R WILL DETERMINE IF "PAID"(INCL DATE RANGE&MERCH AMT)
	If PRT_PAIDONLY = 1
		If ARPAID = 0 Goto L_2000
	End If
	X5 = K1$[20,21]
	If X5 < 6 Goto L_2150
	S6 = 0 - S6
	T9 = 0 - T9
	S2 = 0 - S2 \ S2[1] = 0 - S2[1]
	L_2150: Rem
	If SUMM Goto L_2165
	If X5 < 6 If PURGEFLAG = 1 If PRT_PAIDONLY If Not(ARPAID) Goto L_2000
	Gosub L_5800
	L_2165: If HEADING Gosub L_5300 \ Gosub L_5200
	Gosub RollUpTrans:
	Gosub L_5000
	If Not(HIST) If PURGEFLAG = 3 If UNMARK_PURGE !"cct158507
		If S4[1] Let S4[1] = 0
		Mat Write #CH_SLSMCOMM,R1,36;S4;
	End If
	Gosub L_2200
Goto L_2000

L_2200: Rem TOTALS CALC
	! T10 - customer total
	! T9 - grand total
	! T8 - salesrep total
	!
	! [1] - current cost
	! [2] - original cost
	! [4] - original merch $
	! [5] - current merch $
	! [6] - current paid
	! [7] - commission amount
	! [8] - commission amount due
	! [9] - terms discount
	! [10] - other c/r discount
	! [11] - Rebate: Invoice Net of Excluded Products
	! [12] - Rebate: Rebate Amount
	!
! 	If ARCODE
! 		T9[5] = T9[5] + S2[0] \ T8[5] = T8[5] + S2[0] \ T10[5] = T10[5] + S2[0]
! 	Else
! 		If ARMONTH <> S4[0] ! not right month
! 			PT9[5] = PT9[5] + S2[0]
! 			PT8[5] = PT8[5] + S2[0]
! 			PT10[5] = PT10[5] + S2[0]
! 		Else
! 			TEMP$ = S1[3] Using "&&&&&&"
! 			If ARDATE$[1,2] = TEMP$[1,2] ! is the year the same?
! 				T9[5] = T9[5] + S2[0]
! 				T8[5] = T8[5] + S2[0]
! 				T10[5] = T10[5] + S2[0]
! 			Else
! 				PT9[5] = PT9[5] + S2[0]
! 				PT8[5] = PT8[5] + S2[0]
! 				PT10[5] = PT10[5] + S2[0]
! 			End If
! 		End If
! 	End If
	! no break out by current and prev month, just total the
	! current merch $
	T9[5] = T9[5] + S2[0] \ T8[5] = T8[5] + S2[0] \ T10[5] = T10[5] + S2[0]
	T9[4] = T9[4] + ocs1[2] \ T8[4] = T8[4] + ocs1[2] \ T10[4] = T10[4] + ocs1[2]
	T8[1] = T8[1] + S6[0] \ T9[1] = T9[1] + S6[0] \ T10[1] = T10[1] + S6[0]
	T8[2] = T8[2] + ocs1[3] \ T9[2] = T9[2] + ocs1[3] \ T10[2] = T10[2] + ocs1[3]
	T9[6] = T9[6] + T9 \ T8[6] = T8[6] + T9 \ T10[6] = T10[6] + T9
	T9[7] = T9[7] + S2[1] \ T8[7] = T8[7] + S2[1] \ T10[7] = T10[7] + S2[1]
	If CF$ = "C"
		If X5 < 6
			If Abs(T9) >= Abs(S2) Or ARPAID !this is for invoices
				T9[8] = T9[8] + S2[1];T8[8] = T8[8] + S2[1];T10[8] = T10[8] + S2[1]
			End If
		Else ! this is for credits, no need to check applied amount
			T9[8] = T9[8] + S2[1];T8[8] = T8[8] + S2[1];T10[8] = T10[8] + S2[1]
		End If
	End If
	If CF$ = "A"
		If Abs(T9) >= Abs(S2) Or ARPAID
			T9[8] = T9[8] + S2[1];T8[8] = T8[8] + S2[1];T10[8] = T10[8] + S2[1]
		End If
	End If
	T9[9] = T9[9] + commAdj[2] \ T8[9] = T8[9] + commAdj[2] \ T10[9] = T10[9] + commAdj[2]
	T9[10] = T9[10] + commAdj[3] \ T8[10] = T8[10] + commAdj[3] \ T10[10] = T10[10] + commAdj[3]
	T9[11] = T9[11] + (ocs1[2] - commAdj[5]) \ T8[11] = T8[11] + (ocs1[2] - commAdj[5]) \ T10[11] = T10[11] + (ocs1[2] - commAdj[5])
	T9[12] = T9[12] + commAdj[4] \ T8[12] = T8[12] + commAdj[4] \ T10[12] = T10[12] + commAdj[4]
	If PURGEFLAG = 1
		If CF$ = "C"
			If X5 < 6
				If Abs(T9) >= Abs(S2) Or ARPAID Let S4[1] = 1 Else Let S4[1] = 0
			Else
				S4[1] = 1
			End If
		End If
		If CF$ = "A"
			If Abs(T9) >= Abs(S2) Or ARPAID Let S4[1] = 1 Else Let S4[1] = 0
		End If
	Else
		If PURGEFLAG = 2 Let S4[1] = 1
	End If
	Mat Write #2,R1,36;S4;
Return

L_3000: Rem GET SLSM NAME
	If S8 = S1 Return
	J2$ = " ",J2$ \ J2$ = S1 Using "###"
	Search #3,2,1;J2$,R3,E
	If E = 1 Let S1$ = "** ERROR ** SALESMAN NOT FOUND" \ Goto L_3050
	If E Gosub ERR_SEARCH
	Mat Read #3,R3;S1$;
	L_3050: Return
	L_3200: Rem GET CUSTOMER
	For X = 0 To 12 \ C1[X] = 0 \ Next X
	If S3[1] = S10 Return
	J3$ = " ",J3$ \ J3$ = S3[1] Using "######"
	Search #4,2,1;J3$,R4,E
	If E = 1
		Let C1$ = "**CUSTOMER NOT FOUND"
		custr_pct = 0
		Goto L_3240
	end if
	If E Gosub ERR_SEARCH
	Mat Read #4,R4,30;C1$;
	Mat Read #4,R4,142;C1;
	Mat Read #4,R4,784;custr;
	Mat Read #4,R4,790;custr_pct;
	if not(custr[0]) custr_pct = 0
	L_3240: Rem
Return

L_3400: Rem GET A/R RECORD
	ARPAID = 0
	J4$ = " ",J4$ \ J4$ = S3[1] Using "######"
	If S7 Let J4$[7] = S7 Using "##########" Else Let J4$[7] = S7[1] Using "##########"
	J4$[17] = K1$[20];J4$[18] = ""
	Search #5,2,1;J4$,R5,E
	If E Goto L_3500
	Mat Read #5,R5;A2;
	Mat Read #5,R5,24;A3;
	T9 = A3[1] + A3[2]
	T1 = Int(Fra(A2[3]) * 100)
	Rem IF NOT PAID IN FULL, BUT MERCH AMOUNT PAID- WE CALL IT "PAID"
	Rem ************************************
	Rem NOTE: IF THE CUSTOMER DOES NOT WANT THIS CONDITION, THEN
	Rem CHANGING IT IS SIMPLE, JUST REM OUT THIS SECTION.- WMB 12/2008
	If Abs(A3[0] - T9) <> 0 And Abs(T9) >= Abs(S2)
		If Not(PRT_PAIDONLY)
			ARPAID = 1
		Else
			If Not(A2[1])
				ARPAID = 1
			Else
				X2 = A2[1] \ Gosub L_7820 \ Goto BADARPAYDATE
				JARPAYDATE = X2
				If JARPAYDATE >= JSPAYDATE And JARPAYDATE <= JEPAYDATE
					ARPAID = 1
				End If
			End If
		End If
	End If
	Rem ************************************
	If Abs(A3[0] - T9) = 0
		If Not(PRT_PAIDONLY)
			ARPAID = 1
		Else
			If Not(A2[1])
				ARPAID = 1
			Else
				X2 = A2[1] \ Gosub L_7820 \ Goto BADARPAYDATE
				JARPAYDATE = X2
				If JARPAYDATE >= JSPAYDATE And JARPAYDATE <= JEPAYDATE
					ARPAID = 1
				End If
			End If
		End If
	End If
Return

L_3500: Rem NOT FOUND SO MUST BE PAID
	Search #6,2,1;J4$,R6,E \ If E > 1 Gosub ERR_SEARCH
	If Not(E)
		Mat Read #6,R6;A2;
	Else
		A2[1] = 0
	End If
	T9 = S2[0]
	If PRT_PAIDONLY = 0
		ARPAID = 1
	Else
		If Not(A2[1])
			ARPAID = 1
		Else
			X2 = A2[1] \ Gosub L_7820 \ Goto BADARPAYDATE
			JARPAYDATE = X2
			If JARPAYDATE >= JSPAYDATE And JARPAYDATE <= JEPAYDATE
				ARPAID = 1
			End If
		End If
	End If
Return

BADARPAYDATE: Rem bad date convert from julian
	ARPAID = 1
Return 

L_4000: Rem TOTAL PRINT
	if screenprint ! xml
		if summ
			tmp$=fdel$,"REPORT TOTALS",fdel$ ! skip slsm#
		Else
			tmp$=fdel$,"REPORT TOTALS",fdel$
			tmp$=tmp$,fdel$,fdel$,fdel$ ! no inv / date /type
			tmp$=tmp$,fdel$,fdel$ ! no cust / name
		Endif ! rest is standard
		tmp$=tmp$,ltrim$(t9[4] using "-------#.##"),fdel$
		If PRTCOST
			tmp$=tmp$,ltrim$(t9[2] using "-------#.##"),fdel$
			tmp$=tmp$,ltrim$(t9[4] - t9[2] using "-------#.##"),fdel$
			If t9[4]
				tmp$=tmp$,ltrim$(FNW((t9[4] - t9[2]) / t9[4] * 100) Using "---#.##%"),fdel$
			else
				tmp$=tmp$,fdel$
			end if
		else
			tmp$=tmp$,fdel$,fdel$,fdel$
		Endif
		tmp$=tmp$,fdel$ ! no min field
		tmp$=tmp$, ltrim$(t9[11] Using "-------#.##"),fdel$
		tmp$=tmp$, ltrim$(t9[12] Using "----#.##"),fdel$
		tmp$=tmp$,fdel$ ! no rebate %
		tmp$=tmp$,ltrim$(t9[9] using "-----#.##"),fdel$
		tmp$=tmp$,ltrim$(t9[10] using "-----#.##"),fdel$
		IF PRTCOST
			tmp$=tmp$,ltrim$(t9[5] - t9[1] using "-------#.##"),fdel$
		else
			tmp$=tmp$,fdel$
		end if
		tmp$=tmp$,fdel$,fdel$ ! no comm % or "over 60" field
		tmp$=tmp$,ltrim$(t9[8] Using "-----#.##"),fdel$
		tmp$=tmp$,fdel$ ! no manual trans field
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		return ! that's all
	Endif
	Gosub L_5800
	Print #0;"** TOTALS **"
	print #0; using "-------#.##"; tab 37; t9[4];
	Print #0; Using "-------#.##"; Tab 49;t9[4] - t9[2];
	Print #0; Using "-------#.##"; Tab 64;t9[11];
	Print #0; Using "----#.##"; Tab 76;t9[12];
	Print #0; Using "----#.##"; Tab 85;t9[9];
	print #0; using "----#.##";tab 94;t9[10];
	IF PRTCOST
		print #0; using "-------#.##";tab 103;(t9[5] - t9[1]);
	end if
	print #0; using "-------#.##"; tab 119; t9[8]
	! NEXT LINE
	if prtcost print #0; using "-------#.##"; tab 37;t9[2];
	print #0; ""
	print #0; ""
Return

L_4500: Rem SALESMAN TOTAL
	if not(SalesRecap) and S10 Gosub L_4600
	Gosub L_5800
	if screenprint ! xml
		if summ
			tmp$=Str$(S8),fdel$,S1$[1,15]," TOTALS",fdel$ !
		Else
			tmp$=Str$(s8),fdel$,S1$[1,15]," TOTALS",fdel$
			tmp$=tmp$,fdel$,fdel$,fdel$ ! no inv / date /type
			tmp$=tmp$,fdel$,fdel$ ! no cust / name
		Endif ! rest is standard
		tmp$=tmp$,ltrim$(t8[4] using "-------#.##"),fdel$
		If PRTCOST
			tmp$=tmp$,ltrim$(t8[2] using "-------#.##"),fdel$
			tmp$=tmp$,ltrim$(t8[4] - t8[2] using "-------#.##"),fdel$
			If t8[4]
				tmp$=tmp$,ltrim$(FNW((t8[4] - t8[2]) / t8[4] * 100) Using "---#.##%"),fdel$
			else
				tmp$=tmp$,fdel$
			end if
		else
			tmp$=tmp$,fdel$,fdel$,fdel$
		Endif
		tmp$=tmp$,fdel$ ! no min field
		tmp$=tmp$, ltrim$(t8[11] Using "-------#.##"),fdel$
		tmp$=tmp$, ltrim$(t8[12] Using "----#.##"),fdel$
		tmp$=tmp$,fdel$ ! no rebate %
		tmp$=tmp$,ltrim$(t8[9] using "-----#.##"),fdel$
		tmp$=tmp$,ltrim$(t8[10] using "-----#.##"),fdel$
		IF PRTCOST
			tmp$=tmp$,ltrim$(t8[5] - t8[1] using "-------#.##"),fdel$
		else
			tmp$=tmp$,fdel$
		end if
		tmp$=tmp$,fdel$,fdel$ ! no comm % or "over 60" field
		tmp$=tmp$,ltrim$(t8[8] Using "-----#.##"),fdel$
		tmp$=tmp$,fdel$ ! no manual trans field
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto STLDone ! that's all
	Endif
	Print #0;""
	Print #0; Tab 0;"**SLSM ";S8;" ";S1$[1,15];" TOTALS**"
	print #0; using "-------#.##"; tab 37; t8[4];
	Print #0; Using "-------#.##"; Tab 49;t8[4] - t8[2];
	Print #0; Using "-------#.##"; Tab 64;t8[11];
	Print #0; Using "----#.##"; Tab 76;t8[12];
	Print #0; Using "----#.##"; Tab 85;t8[9];
	print #0; using "----#.##";tab 94;t8[10];
	IF PRTCOST
		print #0; using "-------#.##";tab 103;(t8[5] - t8[1]);
	end if
	print #0; using "-------#.##"; tab 119; t8[8]
	! NEXT LINE
	if prtcost print #0; using "-------#.##"; tab 37;t8[2];
	print #0; ""
	! If Not(ARCODE) Print #0; Using "-------#.##"; Tab 74;PT8[5];
	STLDone: ! finish
	IF NOT(SalesRecap) If Not(SUMM) Gosub INSERT_SUMTMP
	clear t8
	S8 = 0 \ T8[5] = 0 \ T8[6] = 0 \ T8[7] = 0 \ T8[8] = 0
	t8[4] = 0 \ t8[2] = 0 \ t8[9] = 0 \ t8[10] = 0
	T8[1] = 0 \ PT8[5] = 0
	If SUMM Let LN = LN + 3 \ Goto L_4590
	LN = 9999
L_4590: Return

L_4600: Rem CUSTOMER TOTAL
	goto L_4645: ! no customer totals for this report
	If SUMM Goto L_4645
	Gosub L_5800
	If HEADING Gosub L_5300
	if screenprint ! xml
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto L_4645 ! that's all
	Endif
	L_4645: !
	clear t10
	S10 = 0 \ T10[5] = 0 \ T10[6] = 0 \ T10[7] = 0 \ T10[8] = 0
	T10[1] = 0 \ PT10[5] = 0
Return

L_4700: Rem Print the salesman total again
	LN = 999
	SalesRecap = 1
	K98$ = " ",K98$
	SORT_LOOP: Search #ch_98,3,1;K98$,R98,E \ If E > 2 Gosub ERR_SEARCH
		If E Return
		Mat Read #ch_98,R98,0;SNAME$;
 		mat Read #ch_98,R98,16;t8;
! 		Read #ch_98,R98,16;GP;
! 		Read #ch_98,R98,22;COST;
! 		Read #ch_98,R98,28;PROFIT;
! 		Read #ch_98,R98,34;PRIMTH;
! 		Read #ch_98,R98,40;CURMTH;
! 		Read #ch_98,R98,46;AMTPAID;
! 		Read #ch_98,R98,52;COMMAMT;
! 		Read #ch_98,R98,58;COMMDUE;
		S1 = k98$[1,3]
		s1$[1,15] = SNAME$[1,15]
		gosub L_4500:
	Goto SORT_LOOP
Return

L_5000: Rem PRINT LINE
	If SUMM Goto L_5160
	If S10 <> S3[1] If Not(HEADING) Gosub L_5200
	if screenprint ! xml
		if summ
			If Not(S8) tmp$=Str$(S1),fdel$,RTrim$(S1$),fdel$
			If S8 tmp$=Str$(S8),fdel$,RTrim$(S1$),fdel$
		Else
			If Not(S8) tmp$=Str$(S1),fdel$,RTrim$(S1$),fdel$
			If S8 tmp$=Str$(S8),fdel$,RTrim$(S1$),fdel$
			tmp$=tmp$,str$(s7[1]),fdel$ !inv #
			x2=S1[3] \ GOSUB L_7700
			tmp$=tmp$,X$,fdel$ ! inv / date
			tmp$=tmp$,commType$,fdel$
			tmp$=tmp$,Str$(S3[1]),fdel$,RTrim$(C1$),fdel$ ! cust/name
		Endif ! rest is standard
		tmp$=tmp$,LTrim$(ocs1[2] using "-------#.##"),fdel$
		If PRTCOST
			tmp$=tmp$,LTrim$(ocs1[3] Using "--------#.##"),fdel$
			tmp$=tmp$,LTrim$(ocs1[2] - ocs1[3] Using "--------#.##"),fdel$
			x3=0
			if ocs1[2] let x3=FNW((ocs1[2] - ocs1[3]) / ocs1[2] * 100)
			tmp$=tmp$,LTrim$(X3 Using "----#.##%"),fdel$
		else
			tmp$=tmp$,fdel$,fdel$,fdel$
		Endif
		tmp$=tmp$,minNotMet$,fdel$
		tmp$ = tmp$,ltrim$(ocs1[2] - commAdj[5] using "-------#.##"),fdel$
		tmp$ = tmp$,LTrim$(commAdj[4] using "-----#.##"),fdel$
		tmp$=tmp$,ltrim$(custr_pct Using "---#.##%"),fdel$
		tmp$ = tmp$,LTrim$(commAdj[2] using "-----#.##"),fdel$
		tmp$ = tmp$,Ltrim$(commAdj[3] using "-----#.##"),fdel$
		if prtcost
			tmp$=tmp$,LTrim$(S2[0] - s6[0] using "--------#.##"),fdel$
		else
			tmp$=tmp$,fdel$
		end if
		tmp1$ = "" \ if commAdj[1] tmp1$ = "**"
		tmp$=tmp$,tmp1$,fdel$
		tmp1$=""
		tmp$=tmp$,LTrim$(s1[2] Using "----#.##%"),fdel$
		If X5 >= 6 ! it's a credit
			If CF$ = "C"
				tmp1$=LTrim$(S2[1] Using "-------#.##")
			Else
				If Abs(T9) >= Abs(S2) Or ARPAID tmp1$=LTrim$(S2[1] Using "-------#.##")
			End If
		Else
			If Abs(T9) >= Abs(S2) Or ARPAID tmp1$=LTrim$(S2[1] Using "-------#.##")
		End If
		tmp$=tmp$,tmp1$,fdel$
		tmp1$ = "" \ if commAdj[0] tmp1$ = "#"
		tmp$=tmp$,tmp1$,fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto L_5160 ! that's all
	Endif
	! LINE 1
	Print #0; Using "########"; Tab 0;S7[1]; ! ref no
	Print #0; tab 11; commType$; ! trans type
	print #0; using "######"; tab 16; s3[1]; ! customer #
	print #0; using "-------#.##"; tab 37; ocs1[2]; ! original inv $
	if prtcost print #0; using "-------#.##"; tab 49; ocs1[2] - ocs1[3]; ! original GPD
	print #0; tab 61; minNotMet$; ! did not meet min
	print #0; using "-------#.##"; tab 64; ocs1[2] - commAdj[5]; ! net of excluded products
	print #0; using "----#.##"; tab 76; commAdj[4]; ! rebate amout
	print #0; using "----#.##"; tab 85; commAdj[2]; ! terms disc
	print #0; using "----#.##"; tab 94; commAdj[3]; ! other disc
	if prtcost print #0; using "-------#.##";tab 103;(s2[0] - s6[0]); ! net gpd
	If X5 >= 6 ! it's a credit
		If CF$ = "C"
			Print #0; Using "-------#.##"; Tab 119;S2[1];
		Else
			If Abs(T9) >= Abs(S2) Or ARPAID Print #0; Using "-------#.##"; Tab 119;S2[1];
		End If
	Else
		If Abs(T9) >= Abs(S2) Or ARPAID Print #0; Using "-------#.##"; Tab 119;S2[1];
	End If
	if commAdj[0] print #0; tab 131;"#";
	print #0;""
	!
	! LINE 2
	X2 = S1[3] \ Gosub L_7700
	Print #0; Tab 0;X$[1,8];
	print #0; tab 11;c1$[1,24];
	if prtcost
		print #0; using "-------#.##"; tab 37; ocs1[3]; ! original inv cost
		If ocs1[2] Print #0; Using "---#.##%"; Tab 55;FNW((ocs1[2] - ocs1[3]) / ocs1[2] * 100);
	end if
	print #0; Using "---#.##%"; tab 76; custr_pct;
	if commAdj[1] print #0; tab 115; "**"; ! chargeback indicator
	print #0; Using "---#.##%"; tab 124; custr_pct

! 	If PURGEFLAG = 3 If S4[1] Print #0;"*";
	Print #0;""
	LN = LN + 2
	L_5160: S8 = S1
	S10 = S3[1]
Return

RollUpTrans: ! roll up transactions into summary information
	clear commAdj[]
	select case val(k1$[20,20])
		case 1
			commType$="IN"
		case 2
			commType$="IN-M"
		case 6
			commType$="CM"
		case 8
			commType$="CM-M"
		case else
			commType$=k1$[20,20],"?"
	end select
	minNotMet$ = " "
	! assume if there is profit and there is a commission %
	! that if we are paying 0, it must be a matter of the minimum
	! not being met
	if s2[0]-s6[0] > 0 and s1[2] > 0 and s2[1] = 0 minNotMet$ = "*"
	k7$=" ",k7$
	k7$[1,3] = k1$[1,3]
	k7$[4,13] = k1$[10,19]
	pca_loop: !
		search #ch_commaudit,3,1;k7$,r7,e \ if e>2 gosub err_search:
		if e goto end_pca_loop:
		if k7$[1,3] <> k1$[1,3] OR k7$[4,13] <> k1$[10,19] goto end_pca_loop:
		if k7$[26,26] <> k1$[20,20] goto pca_loop: ! wrong type
		mat read #ch_commaudit,r7,16;as3;
		mat read #ch_commaudit,r7,128;as4;
		mat read #ch_commaudit,r7,62;cas$;
		mat read #ch_commaudit,r7,132;as5;
		select case as4[0]
			case 1
				! manual adjustment, this could be
				! anything
				commAdj[0] = 1 ! show one occurred
			case 2
				! chargeback adjustment
				commAdj[1] = 1 ! show one occurred
			case 3
				! A/R Terms disount, GP adjustment
				! amount is equal to reduction in inv/cm$
				commAdj[2] = commAdj[2] + (as5[2] - as5[3])
			case 4
				! C/R Other discount, GP Adjustment
				commAdj[3] = commAdj[3] + (as5[2] - as5[3])
			case 5
				! rebate adjustment, GP adjustment
				commAdj[4] = commAdj[4] + (as5[2] - as5[3])
				! product $ excluded
				commAdj[5] = as5[6]
		end select
		goto pca_loop:
	end_pca_loop: !
RETURN


L_5200: Rem PRINT CUSTOMER
	If SUMM Return
	if screenprint return ! sent every line
! 	Print #0; Using "######"; Tab 0;S3[1];
! 	Print #0; Tab 7;C1$[1,18];
Return

L_5300: Rem print salesman!
	If SUMM Goto L_5335
	if screenprint goto L_5335 ! sent every line
	If Not(S8) Print #0; Using "###";"SALESMAN ";S1;" ";S1$
	If S8 Print #0; Using "###";"SALESMAN ";S8;" ";S1$
	Print #0;" "
	LN = LN + 2
	L_5335: SALESMAN = 1
Return

L_5800: Rem HEADINGS ROUTINE
	if screenprint return ! has already!
	HEADING = 0
	If LN < MAXLINES Return
	!If J2 If SCREENPRINT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
	If J2 If Not(SCREENPRINT) Print #0;"\14\";
	J2 = J2 + 1 \ LN = 8
	If Not(SCREENPRINT) Print #0;"\15\";
	Print #0; Tab 10;J8$; Tab (64 - Len(COMP$) / 2);COMP$; Tab 120;"PAGE";J2
	Print #0;" - 450afp - ";Msc$(3);
	If HIST
		Print #0; Tab 47;"S A L E S M A N   C O M M I S S I O N   H I S T O R Y"
	Else
		Print #0; Tab 47;"S A L E S M A N   C O M M I S S I O N"
	End If
	If Not(PRT_PAIDONLY)
		If ARCODE Print #0; Tab 56;"FOR A/R MONTH CODE ";ARCODE \ Goto L_5852
		X2 = STARTDATE \ Gosub L_7700
		Print #0; Tab 46;"RUN FOR DATES ";X$;" THROUGH ";
		X2 = ENDDATE \ Gosub L_7700 \ Print #0;X$
	Else
		If ARCODE
			Print #0; Tab 20;"Transactions for A/R Month Code ";ARCODE;
		Else
			X2 = STARTDATE \ Gosub L_7700
			Print #0; Tab 15;"Transactions as of ";X$;" Through ";
			X2 = ENDDATE \ Gosub L_7700 \ Print #0;X$;
		End If
		X2 = SPAYDATE \ Gosub L_7700
		Print #0; Tab 65;"Paid as of ";X$;" Through ";
		X2 = EPAYDATE \ Gosub L_7700
		Print #0;X$
	End If
	L_5852: If Not(HIST) If PURGEFLAG < 3 Print #0; Tab 52;"RUN FOR PURGE ";
	If HIST Print #0; Tab 52;"RUN FOR HISTORY ";
	If PURGEFLAG = 1 Print #0;"PAID ONLY"
	If PURGEFLAG = 2 Print #0;"ALL IN RANGE"
	If PURGEFLAG = 3 Print #0; Tab 55;"AUDIT VERSION ONLY"
	Print #0;" "
	! If Not(ARCODE) Print #0; Tab 75;"-- N E T    S A L E --"
	Print #0; Tab 0; "REF # /";
	print #0; tab 11; "TP /";
 	Print #0; Tab 16;"CUSTOMER CODE /";
 	print #0; Tab 37;"COMMSBL $ /";
	if prtcost Print #0; Tab 49;"GROSS PROFT /"; ! " * "
	print #0; tab 64;"INV NET OF";
	print #0; tab 76;"REBT $ /";
	print #0; tab 85;"TERMS";
	print #0; tab 94;"OTHER";
	if prtcost print #0; tab 103;"NET GROSS"; ! " ** "
	print #0; tab 119; "COMM $ /"

	Print #0; Tab 0;"REF DATE";
 	Print #0; Tab 11;"CUSTOMER NAME"
	If PRTCOST Print #0; Tab 37;"COMMSBL CST";
	if prtcost Print #0; Tab 49;"GP %";
	print #0; tab 64; "EXCL PRODS";
	print #0; tab 76;"REBATE %";
	print #0; tab 85;"DISCOUNT";
	print #0; tab 94;"DISCOUNT";
	if prtcost print #0; tab 103;"PROFIT $";
	print #0; tab 119;"COMM %"

	Print #0;"\15\";
	HEADING = 1
Return

SORTCOMMFILE: Rem sort commission file
	! Print @0,22;'CL';"Sorting...please wait";'CE'; \ Signal 3,0
	COUNT = 0
	K1$ = N3 Using "###"
	L_7020: Search #2,3,1;K1$,R1,E
		If E = 2 Goto L_7170
		If E Gosub ERR_SEARCH
		Mat Read #2,R1,0;S1;
		Mat Read #2,R1,28;S3;
		Mat Read #2,R1,36;S4;
		Mat Read #2,R1,52;SMAT$;
		COUNT = COUNT + 1
		! If Fra(COUNT / 100) = 0 Print @30,22;COUNT Using "###,###";
		Gosub L_3200
		If ARCODE If S4[0] <> ARCODE Goto L_7020
		If YEAR_ Or ARCODE ! year could be zero when entering month/year
			X$ = S1[3] Using "&&&&&&";TEMPYR = X$[1,2]
			TEMPMTH = X$[3,4]
			If S4[0] <> TEMPMTH ! invoice date not match ar period on record
				If S4[0] >= 11 And TEMPMTH <= 3 ! period at eoy, but invoice date in next
					TEMPYR = TEMPYR - 1
					If TEMPYR < 0 Let TEMPYR = 100 - TEMPYR
				End If
				If S4[0] <= 2 And TEMPMTH >= 10 ! period at start of year ,  invoice
					TEMPYR = TEMPYR + 1
				End If
			End If
			If TEMPYR >= 100 Let TEMPYR = TEMPYR - 100
			If YEAR_ <> TEMPYR Goto L_7020
		End If
		X2 = S1[3] \ Gosub L_7820 \ X2 = 0
		JWDATE = X2
		If Not(ARCODE) If JWDATE < JDATE[0] Goto L_7020
		If Not(ARCODE) If JWDATE > JDATE[1] Goto L_7020
		If S1[0] < N3 Goto L_7020
		If S1[0] > N4 Goto L_7170
		K9$ = " ",K9$
		K9$[1,3] = K1$[1,3]
		K9$[4,9] = S3[1] Using "######"
		K9$[10] = K1$[4]
		Search #9,4,1;K9$,R1,E
		If E Gosub ERR_SEARCH
		SORTKEY = SORTKEY + 1
	Goto L_7020
L_7170: Return 

CLEAR_SORT: Rem ==========================clear the sort file
	ch_98 = findchannel()
	gosub open_sort:
! 	CHNL = 98 \ Gosub CHNLFREE
! 	If CHNLFREE
! 		Gosub OPEN_SORT
! 	Else
! 		K98$ = " ",K98$
! 		CLEARSORT_LOOP: Rem
! 		Search #ch_98,3,1;K98$,V1,E \ If E > 2 Gosub ERR_SEARCH
! 		If Not(E)
! 			Search #ch_98,5,1;K98$,V1,E
! 			Goto CLEARSORT_LOOP
! 		End If
! 	End If
Return

OPEN_SORT: Rem
	SCRATCH$ = "[1:256] 6/SUMTMP" + Str$(Spc(6)) + "!"
	Build #ch_98,SCRATCH$
	R98 = 25 \ Search #ch_98,0,1;SCRATCH$,R98,E \ If E Gosub ERR_SEARCH
	R98 = 1000 \ Search #ch_98,0,0;SCRATCH$,R98,E \ If E Gosub ERR_SEARCH
	R98 = 0 \ Search #ch_98,1,0;SCRATCH$,R98,E \ If E Gosub ERR_SEARCH
Return

INSERT_SUMTMP: Rem====== insert summary tmp file
	K98$ = " ",K98$
	K98$[1,3] = S8 Using "###"
	Search #ch_98,2,1;K98$,R98,E \ If E > 2 Gosub ERR_SEARCH
	If E = 1 ! "insert record
		K98$[1,3] = S8 Using "###"
		E = 2
		Search #ch_98,1,0;K98$,R98,E
		If E Gosub ERR_SEARCH
		Search #ch_98,4,1;K98$,R98,E
		If E Gosub ERR_SEARCH
		SNAME$[1,15] = S1$[1,15]
		If (PT8[5] + T8[5])
			GP = FNW((PT8[5] + T8[5] - T8[1]) / (PT8[5] + T8[5]) * 100)
		Else
			GP = 0
		End If
		COST = T8[1]
		PROFIT = PT8[5] + T8[5] - T8[1]
		PRIMTH = PT8[5]
		CURMTH = T8[5]
		AMTPAID = T8[6]
		COMMAMT = T8[7]
		COMMDUE = T8[8]
		Mat Write #ch_98,R98;SNAME$;
 		Mat Write #ch_98,R98,16;t8;
! 		Write #ch_98,R98,16;GP;
! 		Write #ch_98,R98,22;COST;
! 		Write #ch_98,R98,28;PROFIT;
! 		Write #ch_98,R98,34;PRIMTH;
! 		Write #ch_98,R98,40;CURMTH;
! 		Write #ch_98,R98,46;AMTPAID;
! 		Write #ch_98,R98,52;COMMAMT;
! 		Write #ch_98,R98,58;COMMDUE;
		SUM_COUNT = SUM_COUNT + 1
	End If
Return

GETCHAN: Rem search for open channel (counts down from supplied chnl #)
	For SCR = CHNL To 1 Step -1
		CHNL = SCR
		Gosub CHNLFREE
		If CHNLFREE
			SCR = 1
		Else
			CHNL = 0
		End If
	Next SCR
Return

CHNLFREE: Rem check to see if a channel is being used
	If Err 0 Let CHNLFREE = Spc(8)
	CHNLFREE = 0
	E = Chf(CHNL)
	If Err 0 Gosub ERR_TRAP
	If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
	END_CHNLFREE: Rem
Return

HIST_FIND: Rem--------------------------------------------------
	SCRATCH$ = "4/SSLSMCOMMH" + Str$(IntCo) ! Str$(Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
	Call FindF(SCRATCH$,SCR)
	If Not(SCR)
		HAVEHIST = 0
	Else
		HAVEHIST = 1
	End If
Return

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
	Return
	DT3[0] = X2;FLAG = 1;X$ = " "
	Call "JULIANUTIL",DT3[],X$,FLAG
Return

L_7800: Rem DATE X$ TO X2
	Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
	X2 = X$[1,6] \ Return
	L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
	if x2<=0 return
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E) \ If E Return
	X2 = X$[1,5] \ Return 1
	DT3[0] = X2;DT3[1] = X2;FLAG = 0
	Call "JULIANUTIL",DT3[],X$,FLAG
Return

L_9100: Rem END OF THIS RANGE
If Not(SORTKEY) ! no salesman commission found cct123526
	!Print @0,2;"NO COMMISSION FOR SALESMAN ";N3;
	!If N3 <> N4 Print @32,2;" - ";N4
	Goto L_4270
End If
Gosub L_4500
Gosub L_4000
If Not(SUMM)
	Gosub L_4700
	if not(screenprint)
		Print #0;""
		LN = LN + 1
	Endif
	Gosub L_4000
End If
L_4270: ! If SCREENPRINT Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND

OUTEND: Rem EXIT PROGRAM
If screenprint ! dx xml
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
Endif
End

ERR_SEARCH: Rem
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/450afp!","")
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
	ReturnStatus = 0 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
	Message$ = e$
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	Call AddToStr(e$,rstr$,WebStr$)
	Call SetOutPut(e$,rstr$)
End

Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
