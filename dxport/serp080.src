! serp080.dl4 - Perm Price log view/purge
! 1.0 02/02/2010 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp080.dl4 src/serp080.src
!
Rem mx080 permtrack view tracking file for perm price changes
rem permlog[3]!
!       1 - 70 update to perm price                                         
!       2 - 70 update to pending perm price                                 
!       3 - perm price set in O/E updated in 227                            
!       4 - Manual edit to perm price done in 117                           
!       5 - Manual edit to pending perm price done in 117                   
!       6 - Manual  edit to perm price  via Sales Pro.                      
!       7 - Manual  edit to pend perm price  via Sales Pro.                 
!       8 - New LP perm record from 117                                     
!       9 - New LP perm record from 227lp                                   
!      10 - New LP perm record from 281                                     
!      11 - Manual edit to LP perm record from 281                          
!      12 - Manual delete LP record from 117                                
!      13 - Manual delete LP record from 284                                
!      14 - New LP record from Sales Pro                                    
!      15 - Manual delete LP record from Salespro                           
!      16 - Rollback of 70 perm price                  
!	   17 - Purged LP record in 119
! ADD NEW types TO SENDTYPE() and SCANPPLOG(if needed)
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB  4, 2010  13:16:28
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc"
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports

External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
Declare External Function GetUIDRec,ChkAltItem$

Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,JulianToDate,String
Declare Intrinsic Sub programdump

Declare Sub ScanPPLog,SendType,PPLDetail,READ_PROD
Declare Sub Convert,PPTDESC,CostDesc,P70View,W70View
Declare Sub DoPurge
Declare Function ChkDateFrmt$

Try
Dim 1%,PFU1[20],CNVTU[2],UN[2],Z9[9],COST_LEV[3],COMM_LEV,3%,ILU
Dim 3%,PFU2[6],CNVTA,A[33],UWORK[15],LPREC,WASCALLED
Dim J4$[60],PROD$[32],TITLE$[50]

Dim A1$[156],CUNIT$[4],F$[20],K5$[50],K7$[50],CMDY$[4],A2$[30]
Dim P1$[12],P2$[92],P9$[50],PUNIT$[4],RPLY$[46],Z1$[50]
Dim SPROD$[30],SUNIT$[4],CMDESC$[16],K1$[30],PMASK$[20],P60$[50]
Dim DFLT_MASK$[20],P61$[256],CUSTNAME$[30],LBL$[3],WK1$[2],WK$[2]
Dim 1%,AI,LCT,LPC3[4],SR,SC,LPEUN[2],POINT
Dim 2%,B[24],C1[2],E,I,L,R1[20],R4,X5,LPR1[3],RECCNT,LN[20],Q0[1]
Dim 2%,LPC5[2],LPDEPT,CH_CUST,CH_LASTP,C4[8]
Dim 3%,C2[2],C5[3],LPR[4],X3,LPUNF[6],PERM[1],PF_LOAD2,PLV[1],TPRICE
Dim 2%,CUST,DEPT,LPSL,I$[30],3%,R2,R[40]
Dim PPLOG$[60],LOG70$[44],1%,WHSE70[99],3%,PERMLOG[35],LOG70[20],RJDATE,DATE
Dim DL$[80],KEY_$[50],DESC$[30],DATE$[12],CUST$[6],TYPEDSP$[500],WKEY$[50],NAME$[40]
Dim TDESC$[50],Key1$[60],Key2$[60],Key3$[60],Key4$[60]
Dim GRAP1$[160],GRAP2$[70],GRAP3$[10],WH$[10],PMPT$[5],C$[30],CJ3$[70],CLR$[70]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[600],msg$[100],rstr$[2000],webstr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128],action1$[30],action2$[30]
Dim 2%,maxcnt,3% \ maxcnt=50 ! init max records in arrays for list
dim List$[maxcnt,1200] ! for .net (larger size - ZLines)
Dim Blank$[100]
Blank$=" ",Blank$
! call dxopen() ! for standalone run (not from oemenu)
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
action$=UCase$(action$)
 action$=RTrim$(Action$) ! "trim spaces from end
 action1$=UCase$(action1$)
 action1$=RTrim$(Action1$) ! "trim spaces from end
 action2$=UCase$(action2$)
 action2$=RTrim$(Action2$) ! "trim spaces from end
Def FNU(H) = Int(Abs(H) + Sgn(Fra(Abs(H)))) * Sgn(H)
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Mat Read #1,19,50;P9$; \ Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Or Q0[1] > 5 Let Q0[1] = 2
tmp$="######"
DFLT_MASK$ = "########.",tmp$[1,Q0[1]]
PMask$=DFLT_MASK$
DL$ = "_",DL$
TYPEDSP$ = " ",TYPEDSP$
TYPEDSP$ = "70PP  70PPP O/E   117PP 117PPPSPPP  SPPPP NEW117NEWO/ENEWQOTQOTPP "
TYPEDSP$ = TYPEDSP$ + "DEL117DEL284NEWSP DELSP ROLLBK119PRG"
Z1$ = "2/permpricelog" + Str$(COID)
Ropen #2,Z1$
Z1$ = "2/prog70log" + Str$(COID)
Ropen #3,Z1$
Read #1,88,1808;Z1$;
Ropen #4,Z1$
Read #1,88,1792;Z1$;
Ropen #5,Z1$
Read #1,88,1376;Z1$;
Ropen #6,Z1$
Read #1,88,1728;Z1$;
Ropen #7,Z1$
Read #1,88,1664;Z1$;
Ropen #15,Z1$
Read #1,88,1824;Z1$;
Ropen #16,Z1$
! call dxsave(0,"tmp/080in.txt!")
START: Rem rem =====================
ALLCUST = 0
ALLPROD = 0
TYPE = 0
SEQNUM = 0
RJDATE = 999999
BAKWARD = 1
ALLDATES = 1
CUST$ = " ",CUST$
PROD$ = " ",PROD$
returnstatus=0
message$="Action1 not found"
Select case Action1$
	case "GETLIST" ! list of update types					doc=PPLog-GetSysFlags.doc
		returnstatus=1
		message$="OK"
		call SendType()
	case "PURGE" ! AS in mx080p								doc=PPLog-PurgeLog.doc
		returnstatus=1
		message$="OK"
		call dxget("PURGEDATE",tmp$)
		tmp$=chkDateFrmt$(tmp$)
		if tmp$[1,1]<"0" and tmp$[1,1]>"9" let tmp$=""
		if tmp$<>""
			tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy to yyyymmdd
			tmp2$=tmp1$[3,8] ! just yymmdd
			J1=tmp2$
			X$ = J1 Using "&&&&&&"
			Call DateToJulian(1,X$,X$,E)
			If E 
				returnstatus=0
				message$="Invalid Date"
				goto PPLMDone
			Endif
			J1 = X$[1,5]
		Else
			returnstatus=0
			message$="Invalid Purge Date"
			Goto PPLMDone
		Endif
		PJDATE = J1
		call DOPURGE()
	case "GETCUST" ! get cust for selection					doc=PPLog-GetCust.doc
		returnstatus=1
		message$="OK"
		call dxget("CUSTID",tmp$)
		CUST = tmp$
		if cust<0 or cust>999999 or fra(cust)
			returnstatus=0
			message$="Invalid Customer Number"
			goto PPLMDone
		Endif
		KEY_$ = CUST Using "######"
		CUSTNAME$ = " ",CUSTNAME$ \ CUSTNAME$[1,13] = "All Customers"
		If Cust
		  Search #4,2,1;KEY_$,R4,E
		  If E
			message$ = "CUSTOMER NOT FOUND!"
			RETURNSTATUS=0
			Goto PPLMDone
		  End If 
		  Mat Read #4,R4,30;CUSTNAME$
		End If 
		Clear List$[]
		List$[0]=bsdel$,"CUSTINFO",fdel$
		List$[1]="CUSTID",fdel$,"NAME",fdel$
		List$[2]=Str$(Cust),fdel$,RTrim$(CUSTNAME$),fdel$
		List$[3]=esdel$
		call addtostr(e$,rstr$,List$[])
	case "GETPROD" ! get prod for selection					doc=PPLog-GetProd.doc
		returnstatus=1
		message$="OK"
		call dxget("PRODID",tmp$)
		Prod$=UCase$(RTrim$(tmp$))+blank$
		If Prod$[1,12]<>Blank$[1,12] ! ""
			tmp$=ChkAltItem$(e$,IntCo,Prod$)
			If tmp$<>"" If tmp$[1,2]<>"  " let prod$=tmp$ ! has alt item
		Endif
		DESC$ = " ",DESC$ \ DESC$[1,12] = "ALL PRODUCTS"
		If Prod$[1,12]<>blank$[1,12] ! ""
		  J4$ = " ",J4$
		  J4$ = Prod$+Blank$
		  Search #5,2,1;J4$,R5,E 
		  If E
			Message$ = "PRODUCT NOT FOUND!"
			returnstatus=0
			Goto PPLMDone
		  End If 
		  Mat Read #5,R5,0;A1$;
		  DESC$ = A1$[9,38]
		  PROD$[1,12] = Prod$+Blank$
		End If 
		Prod$[13]=""
		Clear List$[]
		List$[0]=bsdel$,"PRODINFO",fdel$
		List$[1]="PRODID",fdel$,"DESC1",fdel$
		List$[2]=Prod$,fdel$,RTrim$(DESC$),fdel$
		List$[3]=esdel$
		call addtostr(e$,rstr$,List$[])
	case "DOSCAN" ! do the scan (need limit?)				doc=PPLog-DoScan.doc
		returnstatus=1
		message$="OK"
		! get vars
		call dxget("CUSTID",tmp$)
		Cust=tmp$
		if cust<0 or cust>999999 or fra(cust)
			returnstatus=0
			message$="Invalid Customer"
			goto PPLMDone
		Endif
		if cust=0
			ALLCUST = 1;CUST = 999999 
		Endif
		call dxget("PRODID",tmp$)
		Prod$=UCase$(RTRIM$(tmp$))
		if Prod$=""
			ALLPROD = 1;PROD$ = "z",PROD$
		Endif
		PROD$=PROD$+BLANK$
		PROD$[13]=""
		call dxget("PLTYPE",tmp$)
		Type=tmp$
		if type<0 or type>17
			returnstatus=0
			message$="Invalid Type"
			goto PPLMDone
		Endif
		call dxget("SEQ70",tmp$)
		SEQNUM=tmp$
		If SEQNUM < 0 Or SEQNUM > 999999 
			returnstatus=0
			message$="Invalid 70 Sequence"
			goto PPLMDone
		Endif
		call dxget("STDATE",tmp$) \ tmp$=RTrim$(tmp$)
		IF TMP$="0" LET TMP$=""
		if tmp$<>""
		tmp$=chkDateFrmt$(tmp$)
		if tmp$[1,1]<"0" and tmp$[1,1]>"9" let tmp$=""
		endif
		if tmp$<>""
			tmp1$=formatdate2$(tmp$) ! mm/dd/yyyy to yyyymmdd
			tmp2$=tmp1$[3,8] ! just yymmdd
			J1=tmp2$
			X$ = J1 Using "&&&&&&"
			Call DateToJulian(1,X$,X$,E)
			If E 
				returnstatus=0
				message$="Invalid Date"
				goto PPLMDone
			Endif
			J1 = X$[1,5]
		Else
			j1=0;ALLDATES = 1
		Endif
		RJDATE = J1
		Call dxget("SCNDIR",tmp$)
		Let J4$=UCase$(RTrim$(tmp$))
		If J4$[1,1] <> "F" If J4$[1,1] <> "B" 
			returnstatus=0
			message$="Invalid Scan Direction"
			Goto PPLMDone
		Endif
		Bakward=1 ! default is back
		If J4$[1,1] = "F" Let BAKWARD = 0
		If BAKWARD
		  If Not(RJDATE) Let RJDATE = 999999
		  If ALLCUST Let CUST = 999999
		  If ALLPROD Let PROD$ = "Z",PROD$
		End If 
		If Not(BAKWARD)
		  If RJDATE = 999999 Let RJDATE = 0
		  If ALLCUST Let CUST = 0
		  If ALLPROD Let PROD$ = " ",PROD$
		End If 
		Prod$[13]=""
		call ScanPPLog() ! was L_15000
	case "DETAIL" ! detail for a log line					doc=PPLog-LogDetail.doc
		returnstatus=1
		message$="OK"
		call dxget("PPLREC",tmp$)
		LRec=tmp$
		if LRec<1 or LRec>chf(2)-1 ! no good
			returnstatus=0
			message$="Invalid Record Number"
			goto PPLMDone
		Endif
		
		call PPLDetail() ! was L_15980
	case "P70DETAIL" ! if update was from 70 prog-details	doc=PPLog-PPURunDetail.doc
		returnstatus=1
		message$="OK"
		call dxget("P70LU",tmp$)
		LRec=tmp$
		if LRec<1 or LRec>chf(2)-1 ! no good
			returnstatus=0
			message$="Invalid Record Number"
			goto PPLMDone
		Endif
		if action2$="WHSE" ! whse selection of 70			doc=PPLog-PPUWhseDetail.doc
			call W70View()
		Else ! wants normal detail
			call P70View()
		Endif
End Select
PPLMDone: ! done
! status section as end for any action1
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)

Else
!
include "src/callmainerrnet.inc"
End try
End
! -------------------------------------------------------------------------------------
Function chkDateFrmt$(DIn$)
! see if date in is MM/DD/YY or MM/DD/YYYY
! if not make it MM/DD/YYYY
Try
	Dim DOut$[10]
	Dim 1%,Mth,Day
	Dim 3%,Yr
	If DIn$="" or DIn$[1,2]="00" or UCase$(DIn$[1,4])="NONE" or DIn$="0"
	  Let DOut$=UCase$(DIn$)
	  Exit Function DOut$ ! no reformat - send back as is
	Endif
	Mth=DIn$[1,2];Day=Din$[4,5];Yr=DIn$[7]
	if Din$[2,2]="/" or DIn$[2,2]="-" ! 1 digit month
	  Let Mth=DIn$[1,1]
	  If DIn$[4,4]="/" or DIn$[4,4]="-" ! 1 digit day
	     Let Day=DIn$[3,3]
		 Let Yr=DIn$[5]
	  Else
	     Let Day=Din$[3,4] ! try 2 digit
		 Let Yr=DIn$[6]
	  Endif
	Endif
	X$=Mth Using "&&"
	X$[3,4]=Day Using "&&"
	If Yr>1000 ! 4
		X$[5]=Yr Using "&&&&"
	Else ! 2 digit
		If YR<67 let yr=2000+yr Else Let Yr=yr+1900
		X$[5]=Yr Using "####"
	Endif
	Dout$=X$[1,2]+"/"+X$[3,4]+"/"+X$[5]
 else
    include "src/callsuberr.inc"
  end try
end Function DOut$ ! chkDateFrmt$
! 
!--------------------------------------------------------------------
Sub ScanPPLog()
Rem "================ perm tracking file
Try
	Clear List$[]
	tmpcnt=maxcnt
	List$[0]=bsdel$,"PPLDATA",fdel$
	WebStr$="PPLREC",fdel$,"CUSTID",fdel$,"PRODID",fdel$
	webstr$=webstr$,"LOGDATE",fdel$,"LOGTIME",fdel$
	webstr$=webstr$,"UTYPE",fdel$,"ORIGPRC",fdel$,"ORIGGP",fdel$
	webstr$=webstr$,"NEWPRC",fdel$,"NEWGP",fdel$
	List$[1]=webstr$
	row=2
KEY_$ = " ",KEY_$
KEY_$[1,6] = CUST Using "######"
KEY_$[7,18] = PROD$[1,12]
KEY_$[19] = RJDATE Using "&&&&&&"
CUST$ = " ",CUST
If Not(ALLCUST) Let CUST$[1,6] = CUST Using "######"
M = 6
If Not(BAKWARD)
  M = 3
  KEY_$[19] = ""
End If 
LOG_LOOP_STARTUP: Rem initialize for relist
!Print @0,6;'CE';
!For I = 0 To 30 \ R[I] = 0 \ Next I
!L = 6;X2 = -99;LCT = 15
!R = 1;RECCNT = 1
LOG_LOOP: Rem loop thru log file
Search #2,M,1;KEY_$,R2,E
If E Goto L_15880
If Not(ALLCUST) If KEY_$[1,6] <> CUST$[1,6] Goto L_15880
If Not(ALLPROD) If KEY_$[7,18] <> PROD$[1,12] Goto LOG_LOOP
if rjdate<>0 and rjdate<>999999
	x3=key_$[19,24]
	if x3<rjdate goto Log_loop
Endif ! before start
Mat Read #2,R2;PPLOG$
Mat Read #2,R2,60;PERMLOG;
If TYPE If TYPE <> PERMLOG[3] Goto LOG_LOOP
If SEQNUM If SEQNUM <> PERMLOG[21] Goto LOG_LOOP
L_15160: Rem "and we're listing
I$ = " ",I$ \ I$ = PPLOG$[1,12]
Search #5,2,1;I$,R5,E 
If E Goto LOG_LOOP
Call READ_PROD()
L_15310: WebStr$=Str$(R2),fdel$ ! Send web Rec # R[RECCNT] = R2
OGP = 0
NGP = 0
If PERMLOG[4] And PERMLOG[6] = -7 !manual
  OGP = ((PERMLOG[4] - PERMLOG[9]) / PERMLOG[4]) * 100
End If 
If PERMLOG[5] And PERMLOG[24] = -7
  NGP = ((PERMLOG[5] - PERMLOG[13]) / PERMLOG[5]) * 100
End If 
CNVTU[0] = 0;CNVTU[1] = PERMLOG[7];CNVTU[2] = 2
If PERMLOG[6] = -7 !manual
  CNVTA = PERMLOG[4] \ Call Convert() \ PERMLOG[4] = AMOUNT
End If 
If PERMLOG[24] = -7
  CNVTA = PERMLOG[5] \ Call Convert() \ PERMLOG[5] = AMOUNT
End If 
!LBL$ = RECCNT Using "##> "
!Print @0,L;LBL$;
Webstr$=webstr$,Str$(PERMLOG[0]),fdel$
webstr$=webstr$,PPLOG$[1,12],fdel$
X$ = PERMLOG[1] Using "&&&&&&"
Date$=Jdate$(PermLog[1]) ! Call JulianToDate(1,X$,DATE$,E)
Webstr$=webstr$,DATE$,fdel$
X$ = " ",X$
X$ = PERMLOG[2] Using "&&&&&&"
Webstr$=webstr$,X$[1,2],":",X$[3,4],fdel$
webstr$=webstr$,TYPEDSP$[PERMLOG[3] * 6 - 5,PERMLOG[3] * 6],fdel$
tmp$="";tmp1$=""
If PERMLOG[3] < 8 Or PERMLOG[3] = 11 ! not new or deleted
  If PERMLOG[6] = -7 Or PERMLOG[6] = 0 ! manual perm price
    Tmp$=PERMLOG[4] Using PMASK$
  End If 
  If PERMLOG[6] = 10 Or PERMLOG[6] = 14
    Tmp$=PERMLOG[4] Using "####.## %"
  End If 
  If (PERMLOG[6] < 0 And PERMLOG[6] <> -7) Or PERMLOG[6] = 9
    Tmp$=PERMLOG[4] Using "####"
  End If 
  tmp1$=OGP Using "####.##"
End If
webstr$=webstr$,LTrim$(tmp$),fdel$,LTrim$(tmp1$),fdel$
tmp$="";tmp1$=""
If PERMLOG[24] = -7 Or PERMLOG[24] = 0 ! manual perm price
  Tmp$=PERMLOG[5] Using PMASK$
End If 
If PERMLOG[24] = 10 Or PERMLOG[24] = 14
  Tmp$=PERMLOG[5] Using "####.## %"
End If 
If (PERMLOG[24] < 0 And PERMLOG[24] <> -7) Or PERMLOG[24] = 9
  Tmp$=PERMLOG[5] Using "####"
End If 
tmp1$=NGP Using "####.##"
webstr$=webstr$,LTrim$(tmp$),fdel$,LTrim$(tmp1$),fdel$
! also add whether detail avail? (no all detail avail)
L_15700: ! DONE with line
List$[row]=webstr$
row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
If row>5000 ! should be enough!
	returnstatus=0
	message$="Please reduce scope of scan - Maximum reached!"
	goto L_15880
Endif
goto Log_Loop

L_15880: Rem done with list
	list$[row]=esdel$
	call AddToStr(e$,rstr$,List$[]) ! add droplist to string
else
    include "src/callsuberr.inc"
  end try
end Sub ! ScanPPLog
! 
!--------------------------------------------------------------------
Sub SendType()
 Try
	Clear List$[]
	tmpcnt=maxcnt
	List$[0]=bsdel$,"PUTYPE",fdel$
	List$[1]="PLTYPE",fdel$,"DESC",fdel$
	row=2
	tmp$="0",fdel$," 0: ALL UPDATE TYPES",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Rem perm price update type
	tmp$="1",fdel$," 1: (70PP  ) 70 Update to Perm Price",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="2",fdel$," 2: (70PPP ) 70 Update to Pending Perm Price",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="3",fdel$," 3: (O/E   ) Perm Price set in O/E Update in 227",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="4",fdel$," 4: (117PP ) Manual edit to Perm Price done in 117",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="5",fdel$," 5: (117PPP) Manual edit to Pending Perm Price done in 117",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="6",fdel$," 6: (SPP   ) Manual edit to Perm Price from SalesPro",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="7",fdel$," 7: (SPPP  ) Manual edit to Pending Perm Price from SalesPro",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="8",fdel$," 8: (NEW117) New LP record from 117 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="9",fdel$," 9: (NEWO/E) New LP record from 227 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="10",fdel$,"10: (NEWQOT) New LP record from 281 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="11",fdel$,"11: (QOTPP ) Manual edit to Perm Price from 281 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="12",fdel$,"12: (DEL117) Manual delete LP from 117 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="13",fdel$,"13: (DEL284) Manual delete LP from 284 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="14",fdel$,"14: (NEWSP ) New LP record from SalesPro ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="15",fdel$,"15: (DELSP ) Manual delete LP record from SalesPro ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	tmp$="17",fdel$,"17: (119PRG) Purged LP record from 119 ",fdel$
	List$[row]=tmp$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	List$[row]=esdel$
	call AddToStr(e$,rstr$,List$[]) ! add droplist to string
 else
    include "src/callsuberr.inc"
  end try
end Sub ! SendType
! 
!--------------------------------------------------------------------
Sub PPLDetail()
 Try
	Clear List$[]
	tmpcnt=maxcnt
	 Rem SEARCH FOR detail
	!TITLE$ = "Detail"
	! Window Open @2,2; Size 77,21; Using TITLE$
	LOG_REC = LRec ! R[C2]
	If LOG_REC <= 0 Goto PPLDDone
	List$[0]=bsdel$,"LOGDETAIL",fdel$
	webstr$="DATE",fdel$,"TIME",fdel$,"TYPE",fdel$
	webstr$=webstr$,"P70SEQ",fdel$,"REFNUM",fdel$,"ORDNUM",fdel$
	webstr$=webstr$,"CUSTID",fdel$,"CUSTNAME",fdel$
	webstr$=webstr$,"PRODID",fdel$,"PRODDESC1",fdel$
	webstr$=webstr$,"OPPTYPE",FDEL$,"NPPTYPE",fdel$
	webstr$=webstr$,"OPPRICE",fdel$,"NPPRICE",fdel$
	webstr$=webstr$,"OPCOST",fdel$,"NPCOST",fdel$
	Webstr$=webstr$,"OGPPRCT",fdel$,"NGPPRCT",fdel$
	webstr$=webstr$,"OPCSRC",fdel$,"OCONTR",fdel$
	webstr$=webstr$,"OPPPRC",fdel$,"OPPCOST",fdel$,"OEFFDT",fdel$
	Webstr$=Webstr$,"NPCSRC",fdel$,"NCONTR",fdel$
	webstr$=webstr$,"NPPPRC",fdel$,"NPPCOST",fdel$,"NEFFDT",fdel$
	webstr$=webstr$,"PRCUM",fdel$,"PRCFACT",fdel$
	webstr$=webstr$,"CSTUM",fdel$,"CSTFACT",fdel$
	webstr$=webstr$,"CHGBY",fdel$,"REASON",fdel$
	webstr$=webstr$,"INVLU",fdel$,"P70LU",fdel$
	List$[1]=webstr$
	row=2
Mat Read #2,LOG_REC;PPLOG$
Mat Read #2,LOG_REC,60;PERMLOG;
I$ = " ",I$ \ I$ = PERMLOG[0] Using "######"
CUSTNAME$ = " ",CUSTNAME$ \ CUSTNAME$ = "CUSTOMER NOT FOUND"
Search #4,2,1;I$,R4,E
If Not(E) Mat Read #4,R4,30;CUSTNAME$
I$ = " ",I$ \ I$ = PPLOG$[1,12]
Search #5,2,1;I$,R5,E 
If E
  DESC$ = "PRODUCT NOT FOUND"
Else
	Call READ_PROD()
	DESC$ = A1$[9,38]
End If 
OGP = 0
NGP = 0
If PERMLOG[4] And PERMLOG[6] = -7
  OGP = ((PERMLOG[4] - PERMLOG[9]) / PERMLOG[4]) * 100
End If 
If PERMLOG[5] And PERMLOG[24] = -7
  NGP = ((PERMLOG[5] - PERMLOG[13]) / PERMLOG[5]) * 100
End If 
CNVTU[0] = 0;CNVTU[1] = PERMLOG[7];CNVTU[2] = 2
If PERMLOG[6] = -7
  CNVTA = PERMLOG[4] \ Call Convert() \ PERMLOG[4] = AMOUNT
End If 
If PERMLOG[24] = -7
  CNVTA = PERMLOG[5] \ Call Convert() \ PERMLOG[5] = AMOUNT
End If 
CNVTA = PERMLOG[9] \ Call Convert() \ PERMLOG[9] = AMOUNT
CNVTA = PERMLOG[13] \ Call Convert() \ PERMLOG[13] = AMOUNT
CNVTA = PERMLOG[19] \ Call Convert() \ PERMLOG[19] = AMOUNT
CNVTA = PERMLOG[25] \ Call Convert() \ PERMLOG[25] = AMOUNT
CNVTA = PERMLOG[30] \ Call Convert() \ PERMLOG[30] = AMOUNT
CNVTA = PERMLOG[31] \ Call Convert() \ PERMLOG[31] = AMOUNT
X$ = PERMLOG[1] Using "&&&&&&"
Date$=JDate$(PermLog[1]) ! Call JulianToDate(1,X$,DATE$,E)
X$ = " ",X$
X$ = PERMLOG[2] Using "&&&&&&"
Webstr$=DATE$,fdel$,X$[1,2],":",X$[3,4],":",X$[5,6],fdel$
Webstr$=webstr$,TYPEDSP$[PERMLOG[3] * 6 - 5,PERMLOG[3] * 6]
tmp$="MISSING TYPE"
If PERMLOG[3] = 1 tmp$=" Update to Perm Price"
If PERMLOG[3] = 2 tmp$=" Update to Pending Perm Price"
If PERMLOG[3] = 3 tmp$=" Perm Price set in O/E in 227"
If PERMLOG[3] = 4 tmp$=" Edit Perm Price in 117"
If PERMLOG[3] = 5 tmp$=" Edit Pending Perm Price in 117"
If PERMLOG[3] = 6 tmp$=" Edit Perm Price SalesPro"
If PERMLOG[3] = 7 tmp$=" Edit Pend Perm Price SalesPro"
If PERMLOG[3] = 8 tmp$=" New LP record from 117 "
If PERMLOG[3] = 9 tmp$=" New LP record from 227 "
If PERMLOG[3] = 10 tmp$=" New LP record from 281 "
If PERMLOG[3] = 11 tmp$=" Edit to Perm Price in 281 "
If PERMLOG[3] = 12 tmp$=" Delete LP from 117 "
If PERMLOG[3] = 13 tmp$=" Delete LP from 284 "
If PERMLOG[3] = 14 tmp$=" New LP record from SalesPro"
If PERMLOG[3] = 15 tmp$=" Delete LP from SalesPro "
If PERMLOG[3] = 16 tmp$=" Rollback of 70 run "
If PERMLOG[3] = 17 tmp$=" Delete LP from 119 "
webstr$=webstr$,tmp$,fdel$ ! end of type
If PERMLOG[3] = 1 Or PERMLOG[3] = 2 !perm update type
  tmp$=PERMLOG[21] Using "######"
Else
	tmp$=""
End If 
webstr$=webstr$,tmp$,fdel$
tmp$="";tmp1$=""
If PERMLOG[3] = 3 Or PERMLOG[3] = 9
  tmp1$=PERMLOG[23] Using "##########"
  tmp$=PERMLOG[22] Using "######"
End If 
If PERMLOG[3] = 10
  tmp$=PERMLOG[22] Using "######"
End If 
webstr$=webstr$,tmp1$,fdel$,tmp$,fdel$
Webstr$=webstr$,Str$(PERMLOG[0]),fdel$,RTrim$(CUSTNAME$),fdel$
Webstr$=Webstr$,PPLOG$[1,12],fdel$,RTrim$(DESC$),fdel$
! Print @0,6;"Perm Price Type:"
tmp$=""
If PERMLOG[3] < 8 Or PERMLOG[3] = 11 ! if not new or deleted
  X2 = PERMLOG[6] \ Call PPTDESC()
  tmp$=RTrim$(TDESC$)
End If 
webstr$=webstr$,tmp$,fdel$
X2 = PERMLOG[24] \ Call PPTDESC()
tmp$=RTrim$(TDESC$)
webstr$=webstr$,tmp$,fdel$
! Print @0,7;"Perm Price/factor:"
tmp$=""
If PERMLOG[3] < 8 Or PERMLOG[3] = 11 ! if not new or deleted
  If PERMLOG[6] = -7 Or PERMLOG[6] = 0
    tmp$=PERMLOG[4] Using PMASK$
  End If 
  If PERMLOG[6] = 10 Or PERMLOG[6] = 14
    tmp$=PERMLOG[4] Using "####.## %"
  End If 
  If (PERMLOG[6] < 0 And PERMLOG[6] <> -7) Or PERMLOG[6] = 9
    tmp$=PERMLOG[4] Using "######"
  End If 
End If 
webstr$=webstr$,LTrim$(tmp$),fdel$
tmp$=""
If PERMLOG[24] = -7 Or PERMLOG[24] = 0
  TMP$=PERMLOG[5] Using PMASK$
End If 
If PERMLOG[24] = 10 Or PERMLOG[24] = 14
  TMP$=PERMLOG[5] Using "####.## %"
End If 
If (PERMLOG[24] < 0 And PERMLOG[24] <> -7) Or PERMLOG[24] = 9
  TMP$=PERMLOG[5] Using "###### "
End If 
webstr$=webstr$,LTrim$(tmp$),fdel$
! Print @0,8;"Perm Cost:"
tmp$=""
If PERMLOG[3] < 8 Or PERMLOG[3] = 11 ! if not new or deleted
  tmp$=PERMLOG[9] Using PMASK$
End If 
webstr$=webstr$,LTrim$(tmp$),fdel$
tmp$=PERMLOG[13] Using PMASK$
webstr$=webstr$,LTrim$(tmp$),fdel$
! Print @0,9;"GP % :";
tmp$=""
If PERMLOG[3] < 8 Or PERMLOG[3] = 11 ! if not new or deleted
  tmp$=OGP Using "-#####.##"
End If 
webstr$=webstr$,LTrim$(tmp$),fdel$
tmp$=NGP Using "-#####.##"
webstr$=webstr$,LTrim$(tmp$),fdel$
!Print @0,10;"Perm Cost Src:";
!Print @0,11;"Contract #";
!Print @0,12;"Pend Perm Price: ";
!Print @0,13;"Pend Perm Cost: ";
!Print @0,14;"Effective Date:";
If PERMLOG[3] < 8 Or PERMLOG[3] = 11 ! if not new or deleted
  tmp$=Str$(PERMLOG[10])," "
  X2 = PERMLOG[10] \ Call CostDesc()
  tmp$=tmp$,TDESC$
  webstr$=webstr$,tmp$,fdel$
  tmp$=PERMLOG[11] Using "######"
  If PERMLOG[12] = 1 tmp$=tmp$," SP"
  If PERMLOG[12] = 2 tmp$=tmp$," RB"
  webstr$=webstr$,LTrim$(tmp$),fdel$
  tmp$=PERMLOG[19] Using PMASK$
  webstr$=webstr$,LTrim$(tmp$),fdel$
  tmp$=PERMLOG[30] Using PMASK$
  webstr$=webstr$,LTrim$(tmp$),fdel$
  X$ = " ",X$
  DATE$ = " ",DATE$ \ DATE$ = "N/A"
  If PERMLOG[20]>101
    X$ = PERMLOG[20] Using "&&&&&&"
    Date$=PDate$(PermLog[20]) ! Call FormatDate(X$,DATE$,E)
  End If 
  webstr$=webstr$,DATE$,fdel$
Else ! no orig/old
	webstr$=webstr$,fdel$,fdel$,fdel$,fdel$,fdel$ ! 5 flds
End If 
tmp$=Str$(PERMLOG[16])," "
X2 = PERMLOG[16] \ Call CostDesc()
tmp$=tmp$,TDESC$
webstr$=webstr$,tmp$,fdel$
!Print @0,11;"Contract #";
tmp$=Str$(PERMLOG[17])
If PERMLOG[18] = 1 tmp$=tmp$," SP"
If PERMLOG[18] = 2 tmp$=tmp$," RB"
webstr$=webstr$,tmp$,fdel$
tmp$=PERMLOG[25] Using PMASK$
webstr$=webstr$,LTrim$(tmp$),fdel$
tmp$=PERMLOG[31] Using PMASK$
webstr$=webstr$,LTrim$(tmp$),fdel$
X$ = " ",X$
DATE$ = " ",DATE$ \ DATE$ = "N/A"
If PERMLOG[26]>101
  X$ = PERMLOG[26] Using "&&&&&&"
  Date$=PDate$(PermLog[26]) ! Call FormatDate(X$,DATE$,E)
End If 
webstr$=webstr$,DATE$,fdel$
If PERMLOG[7] = -1 Let PUNIT$ = "CWT "
If PERMLOG[7] = -2 Let PUNIT$ = "LOT "
If PERMLOG[7] = -3 Let PUNIT$ = "LB  "
If PERMLOG[7] > 0 Read #7,PERMLOG[7],10;PUNIT$;
If PERMLOG[14] = -1 Let CUNIT$ = "CWT "
If PERMLOG[14] = -2 Let CUNIT$ = "LOT "
If PERMLOG[14] = -3 Let CUNIT$ = "LB  "
If PERMLOG[14] > 0 Read #7,PERMLOG[14],10;CUNIT$;
webstr$=webstr$,PUNIT$,fdel$,Str$(PERMLOG[8]),fdel$
webstr$=webstr$,CUNIT$,fdel$,Str$(PERMLOG[15]),fdel$
SHOUSR = 0;tmp$=""
If PERMLOG[3] = 1 Or PERMLOG[3] = 2 Or PERMLOG[3] = 4 Or PERMLOG[3] = 5 Let SHOUSR = 1
If PERMLOG[3] = 8 Or PERMLOG[3] = 12 Or PERMLOG[3] = 16 Or PERMLOG[3] = 17 Let SHOUSR = 1
If SHOUSR
  NAME$ = " ",NAME$
  If PERMLOG[27] = -1 Let NAME$[21,26] = "SYSTEM"
  If PERMLOG[27] > 0
    Ropen #14,"cntrl/usercntrl"
    Mat Read #14,PERMLOG[27],260;NAME$;
    Close #14
  End If 
  tmp$=" user:  ",NAME$[21,40]
End If 
If PERMLOG[3] = 3 Or PERMLOG[3] = 9
  NAME$ = " ",NAME$
  If PERMLOG[27] > 0 Mat Read #15,PERMLOG[27],0;NAME$[1,10];
  tmp$="Entered by:  ",NAME$[1,10]
End If 
If PERMLOG[3] = 6 Or PERMLOG[3] = 7 Or PERMLOG[3] = 14 Or PERMLOG[3] = 15 !sales pro
  NAME$ = " ",NAME$
  If PERMLOG[27] = 0 Let NAME$[21,27] = "UNKNOWN"
  If PERMLOG[27]
    I$ = " ",I$ \ I$ = PERMLOG[27] Using "### "
    Search #16,2,1;I$,R16,E
    If Not(E)
      Mat Read #16,R16;NAME$;
    End If 
    tmp$="by Salesrep:  ",NAME$[1,20]
  End If 
End If 
webstr$=webstr$,RTrim$(tmp$),fdel$ ! chgd by
tmp$=""
If PERMLOG[3] = 1
  If PERMLOG[28]
    tmp$="No update reason: "
    If PERMLOG[28] = 1 tmp$="No change in cost"
    If PERMLOG[28] = 2 tmp$="No Price change"
    If PERMLOG[28] = 3 tmp$="calc'd price is lower & flag set to don't change"
  End If 
End If
! send flds for if prog70run and invlookup
Webstr$=webstr$,tmp$,fdel$
If PERMLOG[3] = 3 Or PERMLOG[3] = 9 ! has invlookup
	webstr$=webstr$,Str$(PERMLOG[23]),fdel$
Else ! none
	webstr$=webstr$,fdel$
Endif

If PERMLOG[3] = 1 Or PERMLOG[3] = 2
	webstr$=webstr$,Str$(PERMLOG[21]),fdel$
Else ! none
	webstr$=webstr$,fdel$
Endif
	List$[row]=webstr$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	List$[row]=esdel$
	call addtostr(e$,rstr$,List$[])
    PPLDDone: ! finished
 else
    include "src/callsuberr.inc"
  end try
end Sub ! PPLDetail
! 
!--------------------------------------------------------------------
Sub READ_PROD()
Rem get product
Try
Mat Read #5,R5,0;A1$;
Mat Read #5,R5,156;B;
Mat Read #5,R5,512;PFU1;
Mat Read #5,R5,554;PFU2;
Mat Read #5,R5,256;A;
Mat Read #5,R5,894;C4;
Mat Read #5,R5,944;A2$;
Read #5,R5,928;PF_LOAD2;
 else
    include "src/callsuberr.inc"
  end try
end Sub ! READ_PROD
! 
!--------------------------------------------------------------------
Sub Convert()
 ! normally L_20000
 try
	Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
	If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
	If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
	! If CNVTU[2] = 0 Goto L_20050
	If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
	L_20050: !
	L_20120: Rem "====== unibasic 5+ logic
	! Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
	Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
	If CNVTU[2] = 0 Goto L_20160
	If FLAG Let E = FLAG 
	AMOUNT = CNVTA
	L_20160: ! Return 
  else
    include "src/callsuberr.inc"
  end try
end Sub ! Convert
! 
!--------------------------------------------------------------------
Sub PPTDESC()
! perm price type
 Try
	Rem TYPE DESCRIPTION  ! was L_6900
	TDESC$ = " ",TDESC$;TDESC$ = "ERROR"
	If Not(X2) Let TDESC$ = "NONE"
	If X2 <= -8 And X2 >= -17 Let TDESC$ = "MANUAL PRICE BRACKET",((X2 + 7) * -1)
	If X2 = -7 Let TDESC$ = "MANUAL PRICE ENTRY"
	If X2 <= -1 And X2 >= -6 Let TDESC$ = "MANUAL LIST PRICE",(X2 * -1)
	If X2 = 1 Let TDESC$ = "MATRIX PRICE"
	If X2 = 2 Let TDESC$ = "CUSTOMER/PRODUCT CONTRACT"
	If X2 = 3 Let TDESC$ = "SINGLE PRODUCT PROMOTION"
	If X2 = 4 Let TDESC$ = "CUSTOMER/COMMODITY CONTRACT"
	If X2 = 5 Let TDESC$ = "TEN BRACKET PRICE"
	If X2 = 6 Let TDESC$ = "CUSTOMER/ALL PRODUCT CONTRACT"
	If X2 = 7 Let TDESC$ = "COMMODITY PROMOTION"
	If X2 = 8 Let TDESC$ = "ALL PRODUCT PROMOTION"
	If X2 = 9 Let TDESC$ = "QUANTITY BREAK DISCOUNT"
	If X2 = 10 Let TDESC$ = "MANUAL PERCENT DISCOUNT"
	If X2 = 11 Let TDESC$ = "SIZE (U/M) PROMOTION"
	If X2 = 12 Let TDESC$ = "CUSTOMER/SIZE (U/M) CONTRACT"
	If X2 = 13 Let TDESC$ = "FIXED PRICE CONTRACT"
	If X2 = 14 Let TDESC$ = "MANUAL GTM % PRICE"
else
    include "src/callsuberr.inc"
  end try
end Sub ! PPTDESC
! 
!--------------------------------------------------------------------
Sub CostDesc()
 Try
	Rem cost
	If X2 = 0 Let TDESC$ = "N/A "
	If X2 = 1 Let TDESC$ = "BAST COST"
	If X2 = 2 Let TDESC$ = "LOADED COST"
	If X2 = 3 Let TDESC$ = "PO/LAST COST"
	If X2 = 4 Let TDESC$ = "AVERAGE COST"
	If X2 = 5 Let TDESC$ = "2ND LOADED COST/REDI"
	If X2 = 6 Or X2 = 7 Or X2 = 8 Let TDESC$ = "RESERVED"
	If X2 = 9 Let TDESC$ = "REBATE COST"
	If X2 = 10 Let TDESC$ = "REBATE SALESMAN COST"
	If X2 = 11 Let TDESC$ = "SPECIAL SALESMAN COST"
	If X2 = -1 Let TDESC$ = "MANUAL COST ENTRY"
else
    include "src/callsuberr.inc"
  end try
end Sub ! CostDesc
! 
!--------------------------------------------------------------------
Sub P70View()
  Try
  Rem show what was selected when 70 was run
  clear list$[]
  tmpcnt=maxcnt
  Let PermLog[21]=LRec
  If Not(PERMLOG[21]) goto P7VDone
	list$[0]=bsdel$,"P70SEL",fdel$
	webstr$="RDATE",FDEL$,"RTIME",FDEL$
	webstr$=webstr$,"CALCTYPE",fdel$,"LOWERPRC",fdel$
	webstr$=webstr$,"EFFDATE",fdel$,"FUTTYPE",fdel$
	webstr$=webstr$,"UPDTTYPE",fdel$,"FACTOR",fdel$
	webstr$=webstr$,"COSTGRP",fdel$,"SLSCATGY",fdel$
	webstr$=webstr$,"STRCOMMD",FDEL$,"ENDCOMMD",FDEL$
	webstr$=webstr$,"STRPROD",fdel$,"ENDPROD",fdel$
	webstr$=webstr$,"STRVEND",fdel$,"ENDVEND",fdel$
	webstr$=webstr$,"STRSLSM",fdel$,"ENDSLSM",fdel$
	webstr$=webstr$,"STRCUST",fdel$,"ENDCUST",fdel$
	webstr$=webstr$,"WHSE",fdel$,"PRNTCOST",fdel$
	webstr$=webstr$,"W70LU",fdel$
	List$[1]=webstr$
	ROW=2
WKEY$ = PERMLOG[21] Using "######"
Search #3,2,1;WKEY$,R3,E 
If E goto P7VDone 
Mat Read #3,R3;LOG70;
Mat Read #3,R3,126;WHSE70;
Mat Read #3,R3,326;LOG70$
!TITLE$ = PERMLOG[21] Using "70 Selection seq ######"
!Window Open @3,2; Size 75,22; Using TITLE$
!Print 'CS ED';
X$ = LOG70[1] Using "&&&&&&"
Date$=JDate$(Log70[1]) ! Call JulianToDate(1,X$,DATE$,E)
X$ = " ",X$
X$ = LOG70[2] Using "&&&&&&"
webstr$=DATE$,fdel$,X$[1,2],":",X$[3,4],":",X$[5,6],fdel$
!Print @0,2;"CALC TYPE:";
!Print @0,3;"LOWER PRICE:";
!Print @0,5;"TYPE (+ or %):";
!Print @0,6;"FACTOR:";
!Print @0,7;"COST GROUP:";
!Print @0,8;"SALES CATEGORY:";
!Print @35,9;'BR';"STARTING";@55,9;"ENDING";'ER';
!Print @0,10;"COMMODITY CODE : ";
!Print @0,11;"PRODUCT CODE   : ";
!Print @0,12;"VENDOR CODE    :";
!Print @0,13;"SALESMAN NUMBER:";
!Print @0,14;"CUSTOMER NUMBER:";
!Print @0,15;"WAREHOUSE";
!Print @0,16;"Print cost on the report? ";
Webstr$=webstr$,Str$(LOG70[3])," "
If LOG70[3] = 1 Webstr$=webstr$,"BASED ON COST CHANGE"
If LOG70[3] = 2 Webstr$=webstr$,"MANUAL FACTOR"
If LOG70[3] = 3 Webstr$=webstr$,"FUTURE COST CHANGE"
webstr$=webstr$,fdel$ ! end calc type
Webstr$=webstr$,Str$(LOG70[4])," "
If P61$[71,71] = "Y" And LOG70[3] = 1
  Webstr$=webstr$,"BASE ON PERM PRC UPDATE"
Else 
  If LOG70[4] = 1 Webstr$=webstr$,"WILL ALLOW"
  If LOG70[4] = 2 Webstr$=webstr$,"WON'T ALLOW"
  If LOG70[4] = 3 Webstr$=webstr$,"WILL ONLY UPDATE COST"
  If LOG70[4] = 5 Webstr$=webstr$,"UPDATE COST ONLY"
End If 
webstr$=webstr$,fdel$ ! end lower price
If LOG70[3] = 3 ! "future
  X$ = LOG70[16] Using "&&&&&&"
  X$=JDate$(Log70[16]) ! Call JulianToDate(1,X$,X$,E) \ 
  If Log70[16]<=0 Let X$ = "00/00/0000"
  webstr$=webstr$,X$,fdel$
  tmp$=""
  If LOG70[17] = 999999
    tmp$=" Clear Pending "
    If LOG70[18] = 1 tmp$=tmp$,"with that effective date only"
    If LOG70[18] = 0 tmp$=tmp$,"up to that effective date"
  Else 
    If LOG70[18] = 0 tmp$="  Overwrite the existing data for futures"
    If LOG70[18] = 1 tmp$="  Keep as is (skip) for futures"
  End If 
  webstr$=webstr$,tmp$,fdel$
Else 
  webstr$=webstr$,fdel$,fdel$ ! no future
End If 
tmp$=LOG70$[1,1]
If LOG70[3] = 1 tmp$="AUTO"
webstr$=webstr$,tmp$,fdel$ ! update type
If LOG70$[1,1] = "%" tmp$=LOG70[5] Using "---#.###"
If LOG70$[1,1] <> "%" tmp$=LOG70[5] Using PMASK$
webstr$=webstr$,tmp$,fdel$ ! factor
If LOG70$[2,2] = " " webstr$=webstr$,"ALL",fdel$
If LOG70$[2,2] <> " " webstr$=webstr$,LOG70$[2,12],fdel$ ! cost grp
If LOG70[6] webstr$=webstr$,Str$(LOG70[6]),fdel$ ! Print Using "## ";@18,8;;
If Not(LOG70[6]) webstr$=webstr$,"ALL",fdel$ ! prod sls ctgy
webstr$=webstr$,LOG70$[13,16],fdel$,LOG70$[17,20],fdel$ ! commod
webstr$=webstr$,LOG70$[21,32],fdel$,LOG70$[33,44],fdel$ ! prod
webstr$=webstr$,Str$(LOG70[7]),fdel$,Str$(LOG70[8]),fdel$ ! vend
webstr$=webstr$,Str$(LOG70[9]),fdel$,Str$(LOG70[10]),fdel$ ! slsm
webstr$=webstr$,Str$(LOG70[11]),fdel$,Str$(LOG70[12]),fdel$ ! cust
If WHSE70 tmp$=" MW" Else tmp$="ALL"
webstr$=webstr$,tmp$,fdel$ ! whses
If LOG70[13] = 0 tmp$="N"
If LOG70[13] = 1 tmp$="Y"
webstr$=webstr$,tmp$,fdel$ ! Cost print
If WHSE70 ! ALLOW WHSE LOOKUP
	webstr$=webstr$,"Y",fdel$
Else
	webstr$=webstr$,"N",fdel$
Endif
	List$[row]=webstr$
	row=row+1 \ If row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	List$[row]=esdel$
	call addtostr(e$,rstr$,List$[])
	P7VDone: ! finished
else
    include "src/callsuberr.inc"
  end try
end Sub ! P70View
! 
!--------------------------------------------------------------------
Sub W70View()
  Try
  clear list$[]
  tmpcnt=maxcnt
  Let PermLog[21]=LRec
	If Not(PERMLOG[21]) goto W7VDone
	WKEY$ = PERMLOG[21] Using "######"
	Search #3,2,1;WKEY$,R3,E 
	If E goto W7VDone 
	Mat Read #3,R3;LOG70;
	Mat Read #3,R3,126;WHSE70;
	Mat Read #3,R3,326;LOG70$
	List$[0]=bsdel$,"WHSESEL",fdel$
	List$[1]="WHSES",fdel$
  WHSSEL: Rem "warehouse selection
  !Window Open @0,5; Size 79,15; Using "WAREHOUSE UPDATE SELECTION"
WHSSEL_STRT: !Print 'CS';
  For X = 1 To 99
    Webstr$=Str$(X),"="
    ! Print Using "##";@COL + 1,ROW;X;
    X$ = "n " \ If WHSE70[X] Let X$ = "Y "
    Webstr$=webstr$,X$
  Next X
  webstr$=webstr$,fdel$ ! end of field
  list$[2]=webstr$
  List$[3]=esdel$
  call addtostr(e$,rstr$,List$[])
  W7VDone: ! finished
 else
    include "src/callsuberr.inc"
  end try
end Sub ! W70View
! 
!--------------------------------------------------------------------
Sub DoPurge()
! close the readonly files & open as read/write
 Try
	Try close #2 Else Rem
	Try close #3 Else Rem
	Z1$ = "2/permpricelog" + Str$(COID)
	open #2,Z1$
	Z1$ = "2/prog70log" + Str$(COID)
	open #3,Z1$
  Ch_perm_Log=2
  ch_70_log=3
  START_PURGE: Rem
  KEY3$ = " ",KEY3$
  KEY3$ = " "
  !Print @5,10;'CL';"Processing ";
  PERM_PURGE_LOOP: Rem dir 3
  Search #CH_PERM_LOG,3,3;KEY3$,LOG_REC,E 
  if e goto Do_70_log
  !CTR = CTR + 1 \ If Not(Fra(CTR / 100)) Print @20,10;'CL';CTR;
  CJDATE = KEY3$[1,6]
  If CJDATE > PJDATE Goto DO_70_LOG
  R=Log_rec
  Mat Read #CH_PERM_LOG,LOG_REC;PPLOG$
  Mat Read #CH_PERM_LOG,LOG_REC,60;PERMLOG;
  KEY1$ = " ",KEY1$
  KEY1$[1,6] = PERMLOG[0] Using "######"
  KEY1$[7,18] = PPLOG$[1,12]
  KEY1$[19,24] = PERMLOG[1] Using "######"
  KEY1$[25,30] = PERMLOG[2] Using "&&&&&&"
  KEY1$[31] = PERMLOG[21] Using "######"
  Search #CH_PERM_LOG,2,1;KEY1$,LOG_REC,E 
  if not(E)
  Search #CH_PERM_LOG,5,1;KEY1$,LOG_REC,E 
  Endif
  KEY2$ = " ",KEY2$
  KEY2$[1,12] = PPLOG$[1,12]
  KEY2$[13,18] = PERMLOG[0] Using "######"
  KEY2$[19] = KEY1$[19]
  Search #CH_PERM_LOG,2,2;KEY2$,LOG_REC,E 
  if not(e)
  Search #CH_PERM_LOG,5,2;KEY2$,LOG_REC,E 
  Endif
  KEY4$ = " ",KEY4$
  KEY4$ = KEY1$[31,36] + KEY1$[1,30]
  Search #CH_PERM_LOG,2,4;KEY4$,LOG_REC,E 
  if Not(E)
  Search #CH_PERM_LOG,5,4;KEY4$,LOG_REC,E 
  Endif
  Search #CH_PERM_LOG,5,3;KEY3$,LOG_REC,E
  E = 3;R=Log_Rec
  Search #CH_PERM_LOG,1,0;KEY1$,LOG_REC,E
  Goto PERM_PURGE_LOOP

  DO_70_LOG: Rem now time to go through 70 log
  KEY_$ = " ",KEY_$
  KEY_$ = ""
  PURGE_70_LOOP: Rem
  Search #CH_70_LOG,3,1;KEY_$,LOG_REC,E
  If E = 2 Goto GET_OUT
  ! CTR = CTR + 1 \ If Not(Fra(CTR / 100)) Print @20,10;'CL';CTR;
  Mat Read #CH_70_LOG,LOG_REC;LOG70
  If LOG70[1] > PJDATE Goto PURGE_70_LOOP
  Search #CH_70_LOG,5,1;KEY_$,LOG_REC,E 
  E = 3
  Search #CH_70_LOG,1,0;KEY_$,LOG_REC,E
  Goto DO_70_LOG

  Get_Out: ! all done
  message$="Purge Complete" ! for status
 else
    include "src/callsuberr.inc"
  end try
end Sub ! DoPurge
! 
!--------------------------------------------------------------------