! >>> Program 445
!
! description Open Order Report, Input 
!
! loadsave -w -n 100,10 -o prog/dxport/445.dl4 src/445.src
!
! ERP Scheduler Enabled
!
! 1.0 mm/dd/yyyy change??
!
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC 20, 2005  17:20:17
Rem /w2/papermaster/r2005//usr/acct/dgh/work/r2005/mx/mx445.src (univ2) [dgh] {20962}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX445          Open Order Report  (selector)
Rem Author:        Roman  (04/18/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels,ERPCronSuccess
Declare External Function GetUIDSalesrep
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,VerifyDate
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables

try ! main try
!
dim 1%,picklist
dim 2%,N1[13],1%,N2[6],N1$[42],V9[4],J8,TIME$[22],DATE$[8] ! old com line
dim SZONE$[2],EZONE$[2],CNAME$[30],ITEM_LAB$[10],INVAC,INCM,INCALL9! old com line
dim custom_customer$[30],tmp$[500]
!
dim BegProd$[12],EndProd$[12]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim sroute$[12],eroute$[12]
!
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim Z1$[50],F1$[16],F2$[26],A$[26],K$[130],3%
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim KEY27$[2]
Dim 1%,J0,J2,J3,J4,J5,J6,J9[2],X1,X$[40],PRODRANGE,URECFLAG,repSecurity
Dim 2%,X2,DT3[1],D9[5]
Dim 3%,TT,intco
Dim 4%,J1
Dim RETVAL$[256],Z2$[2]
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
If V9[0] = 99 Goto DXSetup
For J = 2 To 29
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;F1$;
  Ropen #J,F1$
L_830: Next J
Data "-1","1792","2432","1808","-1","-1","1840","-1","1872","1888","2128","-1","1824","1136","1168","-1"
Data "1664","-1","-1","-1","-1","-1","688","2768","1728","-1","1856","1152"
TT = Spc(5) \ COID = Int((TT - Int(TT / 16384) * 16384) / 64)
J8 = 0
try V9[4] = chf(0) else j8 = spc(8)
If J8 If J8 <> 49 error j8
V9[4] = 65 \ If J8 Let V9[4] = 18
Mat Read #1,3,0;CNAME$;
Read #1,18,50;ITEM_LAB$;
Read #1,0,100;DATE$;
Mat Read #1,115;D9;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
CUSTOM_CUSTOMER$ = UCase$(trim$(CUSTOM_CUSTOMER$)) 
if custom_customer$ <> "MIDATLANTIC" repSecurity = GetUIDSalesrep(e$)
if repSecurity<0
	e$  = "User ID not on file!"
	error 10000
end if
!
TIME$ = "" \ Call Time(TIME$) \ TIME$ = TIME$[15]
N1$=" ",N1$
!
!!!! dx add xport reporting code
DXSetup:
Dim tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
! Call dxsave(0,"/tmp/445in.txt!")
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"445",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
Ropen #27,"2/zonefle" + Str$(intCO)
!
!!!  dx add xport reporting code
x2 = GetParameter$("begcust") \ N1$[1,6]=X2 using "######" ! beg customer
tmp$ = GetParameter$("endcust") \ X2=tmp$ \ IF RTRIM$(TMP$)="" let N1$[7,12]="999999" else N1$[7,12]=X2 using "######" ! end customer
BegProd$ = GetParameter$("begprod") ! beg product
EndProd$ = GetParameter$("endprod") ! end product
if repSecurity
	tmp$ = str$(repSecurity)
else
	tmp$ = GetParameter$("begslsm")
end if
X2=tmp$ \ N1$[37,39]=X2 using "###" ! beg salesman
if repSecurity
	tmp$ = str$(repSecurity)
else
	tmp$ = GetParameter$("endslsm")
end if
X2=tmp$ \ IF RTRIM$(TMP$)="" let N1$[40,42]="999" else N1$[40,42]=X2 using "###" ! end salesman
tmp$ = GetParameter$("begorderdate") \ IF RTRIM$(TMP$)="" let N1[0]=010170 else N1[0]=tmp$ ! beg order date
tmp$ = GetParameter$("endorderdate") \ IF RTRIM$(TMP$)="" let N1[1]=123159 else N1[1]=tmp$ ! end order date
tmp$ = GetParameter$("begshipdate") \ IF RTRIM$(TMP$)="" let N1[2]=010170 else N1[2]=tmp$ ! beg ship date
tmp$ = GetParameter$("endshipdate") \ IF RTRIM$(TMP$)="" let N1[3]=123159 else N1[3]=tmp$ ! end ship date
N1[4] = GetParameter$("begwhse") ! beg warehouse
tmp$ = GetParameter$("endwhse") \ IF RTRIM$(TMP$)="" let N1[5]=99 else N1[5]=tmp$ ! end warehouse
N1[6] = GetParameter$("begdiv") ! beg divison
tmp$ = GetParameter$("enddiv") \ IF RTRIM$(TMP$)="" let N1[7]=99 else N1[7]=tmp$ ! end divison
N1[8] = GetParameter$("beghold") ! beg hold code
tmp$ = GetParameter$("endhold") \ IF RTRIM$(TMP$)="" let N1[9]=13 else N1[9]=tmp$ ! end hold code
tmp$ = GetParameter$("begordtype") \ IF RTRIM$(TMP$)="" let N1[10]=1 else N1[10]=tmp$ ! beg order type
tmp$ = GetParameter$("endordtype") \ IF RTRIM$(TMP$)="" let N1[11]=38 else N1[11]=tmp$ ! end order type
N1[12] = GetParameter$("begordstat") ! beg order status
tmp$ = GetParameter$("endordstat") \ IF RTRIM$(TMP$)="" let N1[13]=59 else N1[13]=tmp$ ! end order status
SZONE$ = GetParameter$("begzone") ! beg zone
EZONE$ = GetParameter$("endzone") ! end zone
N2[0] = GetParameter$("sortby") ! sort by
sroute$=GetParameter$("sroute") ! routing
let sroute$=ucase$(rtrim$(sroute$))+blank$
eroute$=GetParameter$("eroute") ! routing
if rtrim$(eroute$)="" 
	let eroute$="z",eroute$
else
	let eroute$=ucase$(rtrim$(eroute$))+blank$
endif
if erpCron
	N2[1]=0 ! default summary
	if GetParameter$("rptformat") = "1" let n2[1] = 1
else	
	tmp$ = GetParameter$("rptformat") \ if rtrim$(tmp$)="D" let N2[1]=1 else N2[1]=0 ! detail or summary
end if
tmp$ = GetParameter$("stock") \ if rtrim$(tmp$)="" let N2[2]=3 else N2[2]=tmp$ ! stock  1=stock only 2=non-stock 3=both
tmp$ = GetParameter$("um") \ if rtrim$(tmp$)="" let N2[3]=3 else N2[3]=tmp$ ! u/m  1=stock 2=selling 3=as entered
if erpCron
	n2[5]=0
	if GetParameter$("exclbo") = "Y" let n2[5]=1
else
	tmp$ = GetParameter$("exclbo") \ if rtrim$(tmp$)="" let N2[5]=0 else N2[5]=1 ! exclude orders with b/o's
end if
if erpCron
	n2[4]=0
	if GetParameter$("pagebreak") = "Y" let n2[4]=1
else
	tmp$ = GetParameter$("pagebreak") \ if rtrim$(tmp$)="" let N2[4]=0 else N2[4]=1 ! page break on sort
end if
if erpCron
	INVAC=0
	if GetParameter$("invac") = "Y" let invac=1
else
	tmp$ = GetParameter$("invac") \ if rtrim$(tmp$)="" let INVAC=0 else INVAC=1 ! include order history
end if
if erpCron
	INCM=0
	if GetParameter$("INCM") = "Y" let INCM=1
else
	tmp$ = GetParameter$("incm") \ if rtrim$(tmp$)="" let INCM=0 else INCM=1 ! include credit memos
end if
if erpCron
	INCALL9=0
	if GetParameter$("INCALL9") = "Y" let INCALL9=1
else
	tmp$ = GetParameter$("incall9") \ if rtrim$(tmp$)="" let INCALL9=0 else INCALL9=1 ! include 999999 ship date
end if
tmp$ = GetParameter$("orddollars") \ if rtrim$(tmp$)="" let N2[6]=2 else N2[6]=tmp$ ! order dollars  1=ordered 2=shipped
tmp$ = GetParameter$("picklist")
if rtrim$(tmp$)="" let tmp$="0"
let picklist=tmp$
if picklist<0 or picklist>2 
	let e$="Invalid Picklist Selection"\error 10000
endif
!!!  dx end
!
! customer params
X2= N1$[1,6] ! beg cust
if X2<0 or X2>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
X2=N1$[7,12] ! end cust
if N1$[7,12]<N1$[1,6] or X2>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
! product params
N1$[13,24]=BegProd$,Blank$
if EndProd$="" let N1$[25,36]=EndParam$ else N1$[25,36]=EndProd$,EndParam$
if N1$[25,36]<N1$[13,24] or N1$[25,36]>EndParam$[25,36] let e$="Invalid ending product!" \ error 10000
If N1$[13,24] <> Blank$[13,24]  Let PRODRANGE = 99
If N1$[25,36] <> EndParam$[25,36] Let PRODRANGE = 99
If N1$[13,24] = Blank$[13,24] If N1$[25,36] = EndParam$[25,36] Let PRODRANGE = 0
!
! salesman params
X2=N1$[37,39] ! beg slsmn
if X2<0 or X2>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
X2=N1$[40,42] ! end slsmn
if N1$[40,42]<N1$[37,39] or X2>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
! beg order date
tmp$=N1[0] using "&&&&&&" \ X2=tmp$[5,6],tmp$[1,4] 
START_ODATE=X2 ! yymmdd
gosub L_7820 ! conv to julian
if E let e$="Invalid starting order date!" \ error 10000
N1[0]=X2 ! beg order date, julian
!
! end order date
tmp$=N1[1] using "&&&&&&" \ X2=tmp$[5,6],tmp$[1,4] 
END_ODATE=X2 ! yymmdd
gosub L_7820 ! conv to julian
if E let e$="Invalid ending order date!" \ error 10000
if N1[1]<N1[2] let e$="Invalid ending order date, must be > starting order date!" \ error 10000
N1[1]=X2 ! end order date, julian
!
! beg ship date
tmp$=N1[2] using "&&&&&&" \ X2=tmp$[5,6],tmp$[1,4] 
START_SDATE=X2 ! yymmdd
gosub L_7820 ! conv to julian
if E let e$="Invalid starting ship date!" \ error 10000
N1[2]=X2 ! beg ship date, julian
!
! end ship date
tmp$=N1[3] using "&&&&&&" \ X2=tmp$[5,6],tmp$[1,4] 
END_SDATE=X2 ! yymmdd
gosub L_7820 ! conv to julian
if E let e$="Invalid ending ship date!" \ error 10000
N1[3]=X2 ! end ship date, julian
if N1[3]<N1[2] let e$="Invalid ending ship date, must be > starting ship date!" \ error 10000
!
! warehouse
If N1[4] < 0 Or N1[4] > D9[5] let e$="Invalid beginning warehouse, must be between 0 and ",D9[5]," !" \ error 10000
If N1[5] < N1[4] Or N1[4] > D9[5] let e$="Invalid ending warehouse, must be between starting warehouse and ",D9[5]," !" \ error 10000
!
! division
If N1[6] < 0 Or N1[6] > 99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
If N1[7] < N1[6] Or N1[7] > 99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
!
! hold codes
If N1[8] < 0 Or N1[8] > 13 let e$="Invalid starting hold code, must be between 0 and 13!" \ error 10000
If N1[9] < N1[8] Or N1[9] > 13 let e$="Invalid ending hold code, must be between starting hold code and 13!" \ error 10000
!
! order types
If N1[10] < 1 Or N1[10] > 38 let e$="Invalid starting order type, must be between 1 and 38!" \ error 10000
If N1[11] < N1[10] Or N1[11] > 38 let e$="Invalid ending order type, must be between starting order type and 38!" \ error 10000
!
! order status
If N1[12] < 0 Or N1[10] > 99 let e$="Invalid starting order status, must be between 1 and 59!" \ error 10000
If N1[13] < N1[12] Or N1[13] > 99 let e$="Invalid ending order status, must be between starting order status and 59!" \ error 10000
!
! zone params
SZONE$=SZONE$,Blank$
if EZONE$="" let EZONE$=EndParam$ else EZONE$=EZONE$,EndParam$
if EZONE$<SZONE$ or EZONE$>EndParam$[1,len(EZONE$)] let e$="Invalid ending zone, must be between starting zone and ",EndParam$[1,len(EZONE$)],"!" \ error 10000
! routing parameter
 
if EROUTE$<SROUTE$  let e$="Invalid ending routing, must be greater than or equal to starting routing" \ error 10000
if N2[0]=2 or N2[1] let INVAC=0 ! clear invoice history option
!
! - L_1000: Rem "=================================== get ranges
! - PRODRANGE = 0
! - Call "progdflt","445","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@"
! -   RETVAL$ = " ",RETVAL$
! -   RETVAL$[1,6] = "     0"
! -   RETVAL$[7,12] = "999999"
! -   RETVAL$[13,24] = "            "
! -   RETVAL$[25,36] = "zzzzzzzzzzzz"
! -   RETVAL$[37,39] = "  0"
! -   RETVAL$[40,42] = "999"
! -   RETVAL$[43,48] = "700101"
! -   RETVAL$[49,54] = "591231"
! -   RETVAL$[55,60] = "700101"
! -   RETVAL$[61,66] = "591231"
! -   RETVAL$[67,68] = " 0"
! -   RETVAL$[69,70] = "99"
! -   RETVAL$[71,72] = " 0"
! -   RETVAL$[73,74] = "99"
! -   RETVAL$[75,76] = " 0"
! -   RETVAL$[77,78] = "13"
! -   RETVAL$[79,80] = " 0"
! -   RETVAL$[81,82] = "38"
! -   RETVAL$[83,84] = " 0"
! -   RETVAL$[85,86] = "59"
! -   RETVAL$[99,100] = "1"
! -   RETVAL$[88,88] = "0"
! -   RETVAL$[89,89] = "3"
! -   RETVAL$[90,90] = "3"
! -   RETVAL$[91,91] = "N"
! -   RETVAL$[92,92] = "N"
! -   RETVAL$[93,93] = "N"
! -   RETVAL$[94,94] = "N"
! -   RETVAL$[95,96] = "  "
! -   RETVAL$[97,98] = "zz"
! -   RETVAL$[101,101] = "Y"
! -   RETVAL$[102,102] = "2"
! - End If 
! - Gosub DISP_SCREEN
! - Goto INPUTS
! - INPUTS: Rem
! - Print @0,23;'CE';"Enter #:field to edit R: reselect all  P: print  S: save default or E: exit ";
! - Input Len 16384 + 3;""X$ \ Call String(1,X$)
! - Print @0,23;'CE';
! - If X$ = "P" Goto L_1450
! - If X$ = "E" Let J8 = 0 \ Goto OUTEND
! - If X$ = "R" Goto EDT_ALL
! - If X$ = "" Goto INPUTS
! - If X$ = "S"
! - ASK_SAVE: Print @0,23;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
! -   Input Len 16384 + 1;""Z2$
! -   Call String(1,Z2$)
! -   If Z2$ = "" Print @0,23;'CL'; \ Goto INPUTS
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "progdfltw","445","",77,RETVAL$,URECFLAG
! -   Print @0,23;'CL'
! - End If 
! - X = X$
! - If X < 1 Or X > 21 Goto INPUTS
! - Gosub EDT_FLDS
! - Goto INPUTS
! - EDT_ALL: Rem "want's all
! - For X = 1 To 21
! -   Gosub EDT_FLDS
! - Next X
! - Goto INPUTS
! - EDT_FLDS: Rem "edit them here
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On X Gosub L_1010,L_1040,L_1070,L_1100,L_1130
! - On X - 5 Gosub L_1160,L_1190,L_1220,L_1238,L_1243
! - On X - 10 Gosub EDT_ZONE,L_1248,L_1260,L_1280,L_1300,EXC_BO
! - On X - 16 Gosub SORT_BREAK,INV_HIST,INC_CM,INC_ALL9,ORDDOL
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
! - L_1010: Rem"customer code range
! - J5$ = "Enter the starting customer code maximum 999999"
! - J0$ = "3000062402";J1 = N1$[1,6]
! - Gosub ISINPUT \ N1$[1,6] = J1 Using "######"
! - If J1 < 0 Or J1 > 999999 Goto L_1010
! - L_1010A: J5$ = "Enter the ending customer code maximum 999999"
! - J0$ = "3000063802" \ J1 = N1$[7,12]
! - Gosub ISINPUT \ N1$[7,12] = J1 Using "######"
! - If J1 < 0 Or J1 > 999999 Goto L_1010A
! - If N1$[7,12] < N1$[1,6] Gosub L_1390 \ Goto L_1010
! - RETVAL$[1,6] = N1$[1,6]
! - RETVAL$[7,12] = N1$[7,12]
! - Return 
! - L_1040: Rem"product code range
! - J5$ = "Enter the starting product code maximum zzzzzzzzzzzz"
! - J0$ = "2 00121803" \ J1$ = N1$[13,24]
! - Gosub ISINPUT \ N1$[13,24] = J$
! - J5$ = "Enter the ending product code maximum zzzzzzzzzzzz"
! - J0$ = "2 00123203" \ J1$ = N1$[25,36]
! - Gosub ISINPUT \ N1$[25,36] = J$
! - If N1$[25,36] < N1$[13,24] Gosub L_1390 \ Goto L_1040
! - If N1$[13,24] <> "            " Let PRODRANGE = 99
! - If N1$[25,36] <> "zzzzzzzzzzzz" Let PRODRANGE = 99
! - If N1$[13,24] = "            " If N1$[25,36] = "zzzzzzzzzzzz" Let PRODRANGE = 0
! - RETVAL$[13,24] = N1$[13,24]
! - RETVAL$[25,36] = N1$[25,36]
! - If PRODRANGE
! -   Print @42,14;"D";
! -   Print @56,15;"1";
! -   Print @0,19;'CL';
! -   N2[1] = 1
! -   N2[2] = 1
! -   INVAC = 0
! -   RETVAL$[88,88] = N2[1] Using "#"
! -   RETVAL$[89,89] = N2[2] Using "#"
! -   If INVAC Let RETVAL$[93,93] = "Y" Else Let RETVAL$[93,93] = "N"
! - Else 
! -   Print @42,14;"S";
! -   Print @56,15;"3";
! -   N2[1] = 0
! -   N2[2] = 3
! -   If N2[0] <> 2 If N2[1] <> 1
! -     Print @0,19;"18> Include orders from invoice history? "
! -     Print @49,19;RETVAL$[93,93];
! -     If RETVAL$[93,93] = "Y" Let INVAC = 1 Else Let INVAC = 0
! -   End If 
! -   RETVAL$[88,88] = N2[1] Using "#"
! -   RETVAL$[89,89] = N2[2] Using "#"
! - End If 
! - Return 
! - L_1070: Rem"salesmane range
! - J5$ = "Enter the starting salesman code maximum 999"
! - J0$ = "3000032704" \ J1 = N1$[37,39]
! - Gosub ISINPUT \ N1$[37,39] = J1 Using "###"
! - If J1 < 0 Or J1 > 999 Goto L_1070
! - L_1070A: J5$ = "Enter the ending salesman code maximum 999"
! - J0$ = "3000034104" \ J1 = N1$[40,42]
! - Gosub ISINPUT \ N1$[40,42] = J1 Using "###"
! - If J1 < 0 Or J1 > 999 Goto L_1070A
! - If N1$[40,42] < N1$[37,39] Gosub L_1390 \ Goto L_1070
! - RETVAL$[37,39] = N1$[37,39]
! - RETVAL$[40,42] = N1$[40,42]
! - Return 
! - L_1100: Rem"order dates
! - If START_ODATE = 0 Let START_ODATE = 700101
! - J1 = START_ODATE
! - J5$ = "Please Enter the Starting Date MMDDYY  "
! - J0$ = "5 00082205"
! - Gosub ISINPUT \ X2 = 0
! - If J1 Let X2 = J1 \ Gosub L_7820 \ Goto L_1100
! - START_ODATE = J1;N1[0] = X2
! - ENT_ENDODATE: Rem "Ending
! - J0$ = "5 00083605"
! - J5$ = "Please Enter the Ending date MMDDYY    "
! - If END_ODATE = 0 Let END_ODATE = 591231
! - J1 = END_ODATE
! - Gosub ISINPUT
! - X2 = J1 \ Gosub L_7820 \ Goto ENT_ENDODATE
! - END_ODATE = J1;N1[1] = X2
! - If N1[1] < N1[0] Gosub L_1390 \ Goto L_1100
! - RETVAL$[43,48] = START_ODATE Using "######"
! - RETVAL$[49,54] = END_ODATE Using "######"
! - Return 
! - L_1130: Rem"ship dates
! - If START_SDATE = 0 Let START_SDATE = 700101
! - J1 = Fra(START_SDATE / 10000) * 1000000 + Int(START_SDATE / 10000)
! - J1$ = J1 Using "&&&&&&"
! - J5$ = "Please Enter the Starting Date MMDDYY  "
! - J0$ = "2 00082206"
! - Gosub ISINPUT \ X2 = 0
! - If Len(J$) = 0
! -   J1 = START_SDATE
! - Else 
! -   J1 = J$
! -   J1 = Fra(J1 / 100) * 1000000 + Int(J1 / 100)
! - End If 
! - X2 = J1 \ Gosub L_7700
! - Print @22,6;X$
! - If J1 <> 999999 Let X2 = J1 \ Gosub L_7820 \ Goto L_1130
! - START_SDATE = J1;N1[2] = X2
! - ENT_ENDSDATE: Rem "Ending
! - J0$ = "2 00083606"
! - J5$ = "Please Enter the Ending date MMDDYY    "
! - If END_SDATE = 0 Let END_SDATE = 591231
! - J1 = Fra(END_SDATE / 10000) * 1000000 + Int(END_SDATE / 10000)
! - J1$ = J1 Using "&&&&&&"
! - Gosub ISINPUT
! - If Len(J$) = 0
! -   J1 = END_SDATE
! - Else 
! -   J1 = J$
! -   J1 = Fra(J1 / 100) * 1000000 + Int(J1 / 100)
! - End If 
! - X2 = J1 \ Gosub L_7700
! - Print @36,6;X$
! - If J1 <> 999999 Let X2 = J1 \ Gosub L_7820 \ Goto ENT_ENDSDATE
! - END_SDATE = J1;N1[3] = X2
! - If N1[3] < N1[2] Gosub L_1390 \ Goto L_1130
! - RETVAL$[55,60] = START_SDATE Using "######"
! - RETVAL$[61,66] = END_SDATE Using "######"
! - Return 
! - L_1160: Rem"warehouse range
! - J5$ = "Enter the starting warehouse number maximum 99 "
! - J0$ = "3 00022807" \ J1 = N1[4]
! - Gosub ISINPUT \ N1[4] = J1
! - J5$ = "Enter the ending warehouse number maximum 99 "
! - J0$ = "3 00024207" \ J1 = N1[5]
! - Gosub ISINPUT \ N1[5] = J1
! - If N1[5] < N1[4] Gosub L_1390 \ Goto L_1160
! - RETVAL$[67,68] = N1[4] Using "##"
! - RETVAL$[69,70] = N1[5] Using "##"
! - Return 
! - L_1190: Rem"division range
! - J5$ = "Enter the starting division number maximum 99 "
! - J0$ = "3 00022808" \ J1 = N1[6]
! - Gosub ISINPUT \ N1[6] = J1
! - J5$ = "Enter the ending division number maximum 99 "
! - J0$ = "3 00024208" \ J1 = N1[7]
! - Gosub ISINPUT \ N1[7] = J1
! - If N1[7] < N1[6] Gosub L_1390 \ Goto L_1190
! - RETVAL$[71,72] = N1[6] Using "##"
! - RETVAL$[73,74] = N1[7] Using "##"
! - Return 
! - L_1220: Rem"hold code range
! - J5$ = "Enter the starting hold code maximum 13"
! - J0$ = "3 00022809" \ J1 = N1[8]
! - Gosub ISINPUT \ N1[8] = J1
! - If N1[8] > 13 Gosub L_1395 \ Goto L_1220
! - L_1225: Rem"ending hold code
! - J5$ = "Enter the ending hold code maximum 13 "
! - J0$ = "3 00024209" \ J1 = N1[9]
! - Gosub ISINPUT \ N1[9] = J1
! - If N1[9] > 13 Gosub L_1395 \ Goto L_1225
! - If N1[9] < N1[8] Gosub L_1390 \ Goto L_1220
! - RETVAL$[75,76] = N1[8] Using "##"
! - RETVAL$[77,78] = N1[9] Using "##"
! - Return 
! - L_1238: Rem"order type
! - J5$ = "Enter the starting order type maximum 38 "
! - J0$ = "3 00022810" \ J1 = N1[10]
! - Gosub ISINPUT \ N1[10] = J1
! - If N1[10] > 38 Gosub L_1395 \ Goto L_1238
! - L_1239: Rem"ending order type
! - J5$ = "Enter the ending order type maximum 38 "
! - J0$ = "3 00024210" \ J1 = N1[11]
! - Gosub ISINPUT \ N1[11] = J1
! - If N1[11] > 38 Gosub L_1395 \ Goto L_1239
! - If N1[11] < N1[10] Gosub L_1390 \ Goto L_1238
! - RETVAL$[79,80] = N1[10] Using "##"
! - RETVAL$[81,82] = N1[11] Using "##"
! - Return 
! - L_1243: Rem"order status
! - J5$ = "Enter the starting order status maximum 59 "
! - J0$ = "3 00022811" \ J1 = N1[12]
! - Gosub ISINPUT \ N1[12] = J1
! - If N1[12] > 59 Gosub L_1395 \ Goto L_1243
! - L_1244: Rem"ending order status
! - J5$ = "Enter the ending order status maximum 59 "
! - J0$ = "3 00024211" \ J1 = N1[13]
! - Gosub ISINPUT \ N1[13] = J1
! - If N1[13] > 59 Gosub L_1395 \ Goto L_1244
! - If N1[13] < N1[12] Gosub L_1390 \ Goto L_1243
! - RETVAL$[83,84] = N1[12] Using "##"
! - RETVAL$[85,86] = N1[13] Using "##"
! - Return 
! - EDT_ZONE: Rem"cct165858
! - J0$ = "2 00022812"
! - J1$ = SZONE$
! - J5$ = "Enter the starting zone "
! - Gosub ISINPUT
! - If J$ = "" Or J$[1,2] = "  "
! -   SZONE$ = " ",SZONE$
! -   Goto EDT_ENDZONE
! - End If 
! - KEY27$ = " ",KEY27$
! - KEY27$ = J$
! - Search #27,2,1;KEY27$,REC,E
! - If E
! -   Print @0,23;'CL';"Can't find the zone code" \ Signal 3,20
! -   Print @0,23;'CL';
! -   Goto EDT_ZONE
! - End If 
! - SZONE$ = J$
! - EDT_ENDZONE: Rem
! - J0$ = "2 00024212"
! - J1$ = EZONE$
! - J5$ = "Enter ending zone"
! - Gosub ISINPUT
! - If J$ = "" Or J$[1,2] = "  "
! -   EZONE$ = "zz"
! -   Print @39,12;EZONE$;
! -   Goto END_EDTZONE
! - End If 
! - KEY27$ = " ",KEY27$
! - KEY27$ = J$
! - Search #27,2,1;KEY27$,REC,E
! - If E
! -   Print @0,23;'CL';"Can't find the zone code" \ Signal 3,20
! -   Print @0,23;'CL';
! -   Goto EDT_ENDZONE
! - End If 
! - EZONE$ = J$
! - If SZONE$ > EZONE$
! -   Print @0,23;"INVALID RANGE ! ";'CE';
! -   Signal 3,15
! -   Goto EDT_ZONE
! - End If 
! - END_EDTZONE: Rem
! - RETVAL$[95,96] = SZONE$
! - RETVAL$[97,98] = EZONE$
! - Return 
! - L_1248: Rem"sort by
! - J5$ = "Choose the sort option desired"
! - J0$ = "3 00026012" \ J1 = N2[0]
! - Gosub ISINPUT \ N2[0] = J1
! - If N2[0] < 1 Or N2[0] > 10 Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_1248
! - RETVAL$[99,100] = N2[0] Using "##"
! - If N2[0] = 2
! -   INVAC = 0
! -   Print @0,19;'CL';
! -   RETVAL$[93,93] = "N"
! - Else 
! -   If N2[0] <> 2 If N2[1] <> 1
! -     Print @0,19;"18> Include orders from invoice history? "
! -     Print @49,19;RETVAL$[93,93];
! -     If RETVAL$[93,93] = "Y" Let INVAC = 1 Else Let INVAC = 0
! -   End If 
! - End If 
! - Return 
! - L_1260: Rem"detail or summary
! - If PRODRANGE
! -   N2[1] = 1 \ RETVAL$[88,88] = N2[2] Using "#"
! -   Print @42,14;"D";
! -   Return 
! - End If 
! - J5$ = "Enter  D: full detail or  S: summary "
! - J0$ = "2 00014214"
! - If N2[1] Let J1$ = "D" Else Let J1$ = "S"
! - Gosub ISINPUT
! - If J$ <> "D" And J$ <> "S" Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_1260
! - If J$ = "D" Let N2[1] = 1 Else Let N2[1] = 0
! - RETVAL$[88,88] = N2[1] Using "#"
! - If N2[1]
! -   INVAC = 0
! -   Print @0,19;'CL';
! -   RETVAL$[93,93] = "N"
! - Else 
! -   If N2[0] <> 2 If N2[1] <> 1
! -     Print @0,19;"18> Include orders from invoice history? "
! -     Print @49,19;RETVAL$[93,93];
! -     If RETVAL$[93,93] = "Y" Let INVAC = 1 Else Let INVAC = 0
! -   End If 
! - End If 
! - Return 
! - L_1280: Rem"pick
! - If PRODRANGE
! -   N2[2] = 1 \ RETVAL$[89,89] = N2[2] Using "#"
! -   Print @56,15;"1";
! -   Return 
! - End If 
! - J5$ = "Choose 1, 2 or 3"
! - J0$ = "3 00015615" \ J1 = N2[2]
! - Gosub ISINPUT
! - If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_1280
! - SET_TYPE: Rem
! - N2[2] = J1
! - If N2[2] = 2
! -   Print @58,16;"3" \ N2[3] = 3
! -   RETVAL$[90,90] = N2[3] Using "#"
! - End If 
! - RETVAL$[89,89] = N2[2] Using "#"
! - Return 
! - L_1300: Rem"u/m type
! - If N2[2] = 2
! -   Print @58,16;"3" \ N2[3] = 3
! -   RETVAL$[90,90] = N2[3] Using "#"
! -   Return 
! - End If 
! - J5$ = "Enter the u/m type"
! - J0$ = "3 00015816" \ J1 = N2[3]
! - Gosub ISINPUT
! - L_1310: If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Goto L_1300
! - N2[3] = J1
! - RETVAL$[90,90] = N2[3] Using "#"
! - Return 
! - EXC_BO: Rem"exclude orders where all lines are backordered
! - J5$ = "Enter Y or N "
! - J0$ = "6 00015817"
! - J1 = N2[5]
! - Gosub ISINPUT
! - N2[5] = J1
! - If N2[5] Let RETVAL$[91,91] = "Y" Else Let RETVAL$[91,91] = "N"
! - Return 
! - SORT_BREAK: Rem"new page on sort break
! - J5$ = "Enter Y or N "
! - J0$ = "6 00013518" \ J1 = N2[4]
! - Gosub ISINPUT
! - N2[4] = J1
! - If N2[4] Let RETVAL$[92,92] = "Y" Else Let RETVAL$[92,92] = "N"
! - Return 
! - INV_HIST: Rem"Include orders from invoice history
! - If N2[0] = 2 Let INVAC = 0 \ Return 
! - If N2[1] Let INVAC = 0 \ Return 
! - J5$ = "Enter Y or N "
! - J0$ = "6 00014919" \ J1 = INVAC
! - Gosub ISINPUT
! - INVAC = J1
! - If INVAC Let RETVAL$[93,93] = "Y" Else Let RETVAL$[93,93] = "N"
! - Return 
! - INC_CM: Rem"Include c/m on the report
! - J5$ = "Enter Y or N "
! - J0$ = "6 00014920" \ J1 = INCM
! - Gosub ISINPUT
! - INCM = J1
! - If INCM Let RETVAL$[94,94] = "Y" Else Let RETVAL$[94,94] = "N"
! - Return 
! - INC_ALL9: Rem" cct172918 Include all 9 in ship date
! - J5$ = "Enter Y or N "
! - J0$ = "6 00014921" \ J1 = INCALL9
! - Gosub ISINPUT
! - INCALL9 = J1
! - If INCALL9 Let RETVAL$[101,101] = "Y" Else Let RETVAL$[101,101] = "N"
! - Return 
! - ORDDOL: Rem "for order dollars - use Shipping, Ordered
! - J5$ = "Order $$ on report:  1=Full Ordered  2=Shipping"
! - J0$ = "3000014922";J1 = N2[6]
! - If J1 = 0 Let J1 = 2
! - Gosub ISINPUT
! - If J1 <> 1 And J1 <> 2 Goto ORDDOL
! - N2[6] = J1
! - RETVAL$[102,102] = Str$(N2[6])
! - Return 
! - L_1390: J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! " \ Gosub ISERRMSG \ Return 
! - L_1395: Rem
! - J7$ = "ENTER VALUE MUST BE LESS THAN OR EQUAL TO THE MAXIMUM NUMBER! "
! - Gosub ISERRMSG
! - Return 
!
L_1450: Rem "================== all picked
A$ = Spc(6) \ A$ = A$[2,Len(A$) - 1]
Read #1,88,912;F1$;
L_1540: If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1540
P2 = 0 \ Let F2$ = F1$ To "*" : P2 
If Not(P2) let e$="error with sort file name in control file" \ error 10000
! - Print @0,23;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
F1$[P2] = A$
Call FindF(F1$,H1)
try Close #9 else rem 
If H1 Kill F1$
F2$ = "[1:256] ",F1$
Build #9,F2$
Search #9,0,1;K$,KSIZE,E 
If E Let e$ = "syserrorfile, can't build 445 sortfile!" \error 10000
L1 = 1000 
Search #9,0,0;K$,L1,E
If E Let e$ = "syserrorfile, can't build 445 sortfile!" \error 10000
If N2[0] = 2 let tmp$="445b.dl4" else tmp$="445a.dl4"

if j8=0 and not(erpCron) !if pdf or print, new method, after edits,setouput,dxclose
 Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
 try call dxclose() else rem
end if

chain tmp$
chain write CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,N1,N2,N1$,V9,J8,TIME$,DATE$,CNAME$,ITEM_LAB$,INVAC,INCM,INCALL9,SZONE$,EZONE$,picklist,SROUTE$,EROUTE$
!
! - DISP_SCREEN: Rem "========================================== screen
! - Print 'CS'
! - Print @0,0;"-MX445-";@33,0;"OPEN ORDER REPORT"
! - Print @20,1;'BR';"STARTING";@36,1;"ENDING";'ER';
! - Print @51,1;"12> SORT BY ";@60,2;" 1: CUSTOMER"
! - Print @0,2;" 1> CUSTOMERS";@60,3;" 2: PRODUCT"
! - Print @0,3;" 2> PRODUCTS";@60,4;" 3: SALESPERSON"
! - Print @0,4;" 3> SALESPERSONS";@60,5;" 4: SHIP DATE"
! - Print @0,5;" 4> ORDER DATES";@60,6;" 5: ENTERED BY"
! - Print @0,6;" 5> SHIP DATES";@60,7;" 6: HOLD CODE"
! - Print @0,7;" 6> WAREHOUSES";@60,8;" 7: STATUS"
! - Print @0,8;" 7> DIVISIONS";@60,9;" 8: WAREHOUSE"
! - Print @0,9;" 8> HOLD CODES";@60,10;" 9: DIVISION"
! - Print @0,10;" 9> ORDER TYPE";
! - Print @0,11;"10> ORDER STATUS";@60,11;"10: ZONE"
! - Print @0,12;"11> ZONE"
! - Print @52,12;"CHOOSE:"
! - Print @0,14;"13> Print  D: full detail or  S: summary? "
! - Print @0,15;"14> Pick  1: stock only,  2: non stock only,  3: both"
! - Print @0,16;"15> Show U/M'S in  1: stock,  2: selling,  3: as entered? "
! - Print @0,17;"16> Exclude orders where all lines are backordered? "
! - Print @0,18;"17> New page on sort break? ";
! - Print @0,19;"18> Include orders from invoice history? "
! - Print @0,20;"19> Include credit memos on the report? "
! - Print @0,21;"20> Include the ship date 999999? "
! - Print @0,22;"21> Order Dollars: 1=Ordered 2=Shipped"
! - N1$[1,6] = RETVAL$[1,6]
! - N1$[7,12] = RETVAL$[7,12]
! - Print @24,2;N1$[1,6];@38,2;N1$[7,12];
! - N1$[13,24] = RETVAL$[13,24]
! - N1$[25,36] = RETVAL$[25,36]
! - Print @18,3;N1$[13,24];@32,3;N1$[25,36];
! - N1$[37,39] = RETVAL$[37,39]
! - N1$[40,42] = RETVAL$[40,42]
! - Print @27,4;N1$[37,39];@41,4;N1$[40,42];
! - START_ODATE = RETVAL$[43,48] \ END_ODATE = RETVAL$[49,54]
! - X2 = START_ODATE
! - If X2
! -   Gosub ISDUNPACK
! -   Print @22,5;X$;
! -   X2 = START_ODATE \ Gosub L_7820 \ X = X \ N1[0] = X2
! - End If 
! - X2 = END_ODATE
! - If X2
! -   Gosub ISDUNPACK
! -   Print @36,5;X$;
! -   X2 = END_ODATE \ Gosub L_7820 \ X = X \ N1[1] = X2
! - End If 
! - START_SDATE = RETVAL$[55,60] \ END_SDATE = RETVAL$[61,66]
! - X2 = START_SDATE
! - If X2
! -   If X2 <> 999999
! -     Gosub L_7700
! -     Print @22,6;X$;
! -     X2 = START_SDATE \ Gosub L_7820 \ X = X \ N1[2] = X2
! -   Else 
! -     X$ = "99/99/99"
! -     Print @22,6;X$;
! -     N1[2] = 999999
! -   End If 
! - End If 
! - X2 = END_SDATE
! - If X2
! -   If X2 <> 999999
! -     Gosub L_7700
! -     Print @36,6;X$;
! -     X2 = END_SDATE \ Gosub L_7820 \ X = X \ N1[3] = X2
! -   Else 
! -     X$ = "99/99/99"
! -     Print @36,6;X$;
! -     N1[3] = 999999
! -   End If 
! - End If 
! - N1[4] = RETVAL$[67,68]
! - N1[5] = RETVAL$[69,70]
! - Print Using "##";@28,7;N1[4];@42,7;N1[5];
! - N1[6] = RETVAL$[71,72]
! - N1[7] = RETVAL$[73,74]
! - Print Using "##";@28,8;N1[6];@42,8;N1[7];
! - N1[8] = RETVAL$[75,76]
! - N1[9] = RETVAL$[77,78]
! - Print Using "##";@28,9;N1[8];@42,9;N1[9];
! - N1[10] = RETVAL$[79,80]
! - N1[11] = RETVAL$[81,82]
! - Print Using "##";@28,10;N1[10];@42,10;N1[11];
! - N1[12] = RETVAL$[83,84]
! - N1[13] = RETVAL$[85,86]
! - Print Using "##";@28,11;N1[12];@42,11;N1[13];
! - SZONE$ = RETVAL$[95,96]
! - EZONE$ = RETVAL$[97,98]
! - Print @28,12;SZONE$;@42,12;EZONE$;
! - N2[0] = RETVAL$[99,100]
! - Print Using "##";@60,12;N2[0];
! - If N2[0] = 2
! -   INVAC = 0
! -   Print @0,19;'CL';
! - End If 
! - N2[1] = RETVAL$[88,88]
! - If N2[1] Print @42,14;"D"; Else Print @42,14;"S";
! - If N2[1]
! -   INVAC = 0
! -   Print @0,19;'CL';
! - End If 
! - N2[2] = RETVAL$[89,89]
! - Print Using "#";@56,15;N2[2];
! - N2[3] = RETVAL$[90,90]
! - Print Using "#";@58,16;N2[3];
! - If RETVAL$[91,91] = "Y" Let N2[5] = 1 Else Let N2[5] = 0
! - Print @58,17;RETVAL$[91,91];
! - If RETVAL$[92,92] = "Y" Let N2[4] = 1 Else Let N2[4] = 0
! - Print @35,18;RETVAL$[92,92];
! - If RETVAL$[93,93] = "Y" Let INVAC = 1 Else Let INVAC = 0
! - If N2[0] <> 2 If N2[1] <> 1 Print @49,19;RETVAL$[93,93];
! - If RETVAL$[94,94] = "Y" Let INCM = 1 Else Let INCM = 0
! - Print @49,20;RETVAL$[94,94];
! - If RETVAL$[101,101] = "Y" Let INCALL9 = 1 Else Let INCALL9 = 0
! - Print @49,21;RETVAL$[101,101];
! - N2[6] = RETVAL$[102,102] \ If N2[6] < 1 Or N2[6] > 2 Let N2[6] = 2
! - Print Using "#";@49,22;N2[6];
! - Return 
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
! - L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - If Not(X2) Let X$ = "        "
! - Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ E=0 \ Return ! good 
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
E=1
Return 
!
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
!
!
! - Print 'CS'
! - Chain "MX000C"
! 
Rem {begin rtn.input.s}
! - ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 >= 3 If J0 <= 4
! -   If J0 = 3 Let J2$ = "#",J2$
! -   If J0 = 4 Let J2$ = "-",J2$
! -   J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - End If 
! - J1$[J3 + 1] = ""
! - If J0 < 3 Goto ISENTER
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 <> 6
! -   If J0 = 5
! -     J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! -     J1$ = J9$[4,7],J9$[2,3],"  "
! -   Else 48608
! -     J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! -     If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
! -   End If 
! - End If 
! - ISENTER: Rem
! - If J5 < Msc(34) - 1
! -   Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - End If 
! - Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
! - Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
! - Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) > J3
! -   J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
! - End If 
! - J9$ = J4$
! - If Not(Len(J9$))
! -   If J0$[3,4] = "00"
! -     J9$ = J1$
! -   Else 
! -     J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - End If 
! - For J8 = 1 To Len(J9$)
! -   If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
! -     J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
! -     Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - Next J8
! - On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
! - ISTYPE1: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto ISOUT
! - ISTYPE3: Rem
! - J9 = 0
! - X1 = 0
! - For J8 = 1 To Len(J9$)
! -   If J0 = 4 And Not(X1)
! -     If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
! -       X1 = 1
! -       Goto ISNCONT1
! -     End If 
! -   End If 
! -   If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
! -   If J9$[J8,J8] = " " Goto ISNCONT1
! -   If Len(J0$) > 10
! -     J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
! -   End If 
! -   If J9$[J8,J8] <> "." Goto ISNUMERR1
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
! -   If J9 Goto ISNUMERR1
! -   J9 = 1
! - ISNCONT2: Rem
! -   X1 = 1
! -   If J9 Let J9 = J9 + 1
! - ISNCONT1: Rem
! - Next J8
! - If J0 = 5 Goto ISTYPE5
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
! - ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - ISDECERR: Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
! - If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
! - If J9[1] = 0 Goto ISDTERR
! - On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
! - On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
! - Goto ISDTERR
! - ISMO30: If J9[1] > 30 Goto ISDTERR
! - ISMO31: If J9[1] > 31 Goto ISDTERR
! - Goto ISDTOUT
! - ISMOFEB: If J9[1] > 29 Goto ISDTERR
! - If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
! -   If J9[1] > 28 Goto ISDTERR
! - End If 
! - ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
! - J$ = X$ \ J3 = 8 \ Goto ISOUT
! - ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE6: Call String(1,J9$)
! - If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
! - Gosub ISERRMSG \ Goto ISENTER
! - ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
! - ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - If Not(X2) Let X$ = "        "
! - Return 
! - ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
! - X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
! - X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
! - Return 
! - Rem {end rtn.input.s}
!
else ! main try
	!
	! dx replace entire error routine
	include "src/callmainerrnet.inc"
End Try 
end