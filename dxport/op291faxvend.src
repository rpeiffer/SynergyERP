! --- op291faxvend
! description Quote Management Screen - Fax vendor RFP
!   plain paper form - from mx291 using swap 2, (no open files - pass com's)
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/op291faxvend.dl4 src/op291faxvend.src
!
include "src/copyright.inc"
Rem op291faxvend  v1.00  Quotation Print
Rem Author:        Roman Sawycky  02/22/1992-03/04/1992
Rem Last Update:  zyc 05/15/03 cct167430 add line range
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 10, 2006  11:52:05
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/misc/op291faxvend.src (univ2) [txc] {49365}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! (if h4[1]=999 don't print qty,u/m,ext) H4[1]=Stop #?
External Lib "ubsfunc.dl4"
Declare External Function getuidrec
Declare Intrinsic Sub FindF,FormatDate,InpBuf,String,Time
! Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2],SFAXLINE,EFAXLINE,Intco
Com 2%,S9[9],QOLREC
Com 3%,PFU2[6],CNVTA,A[33],AMOUNT,USERID$[10]
Dim CONTACT$[30],FAXNO$[30],NAME$[30],FROM$[30],TIMER$[12],USERNAME$[20]
Dim FAXPRIORITY$[1],REMARK$[140],PRIORITY$[10],FAX$[40]
Dim RESP$[5],FILENAME$[80],FNAME$[50],MEMODIR$[30],SAVENAME$[80]
Dim COID$[1],C$[16],U5$[30]
Dim KEY_$[30],COVER$[80],WORK$[256]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim CUSTOM_CUSTOMER$[30],List$[100,1000],tmp$[1000],tmp1$[500]
dim action$[30],options$[30],userid$[8],b$[200],action1$[30],msg$[100]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000]
Dim Message$[500],WebStr$[1000],Fld$[1,30],Desc$[16]
If Err 0 Rem
C2 = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
COID$ = Str$(C2)
C$ = "cntrl/CNTRL" + Str$(C2)
Close 
Open #1,C$
If Err 0 Gosub ERR_TRAP
Dim 1%,SW[10],TABS[10],V9[4]
! "print flags (0=by pass, 1=execute)
LET SW[0]=0 ! "cut information
LET SW[1]=0 ! "hazardous information
LET SW[2]=0 ! "msds
LET SW[3]=1 ! "Z lines (2500)
LET SW[4]=1 ! "order message (5300)
LET SW[5]=1 ! "totals (5500)
LET SW[6]=1 ! "print held orders (interactive only)
LET SW[7]=0 ! "perform data integrity checks
LET SW[8]=0 ! "debug mode (pause at each header/line) ("!" set on input)
LET SW[9]=0 ! "stocking unit count/breakdown
LET SW[10]=0 ! "print kit line detail (7500)
TABS[0] = 31
TABS[1] = 10
TABS[2] = 49
V9[3] = 66;V9[4] = 50
Dim 1%,I,F,E,WHSE,H3[1],H4[2],C8,L3[3],UN[2],S2[1],BLINE
Dim 1%,FLAG,P0[1023],EUN[2],USRCREC,QLFAX
Dim 1%,QOLLINE,QLVSEL,HOLD_L3[3]
Dim 2%,D9[20],N[2],R[17],H0[12],H5[16],ROHS3[24],SLSM[9],H6[8],S5,S1[1]
Dim 2%,T1[1],JRNL,TRMS[1],L2[1],L4[3],L6[5],L9[1],B[24],A3[2],X1
Dim 2%,HOLD_L2[1]
Dim 2%,Q0[1],OTC,QLFAXDATE,QLVEND
Dim 3%,Z1,SCOM[4],SMER[4],SCST[4],T2[25],L5[3],L7[12],S3[17],OLM[6]
Dim 3%,S7300,UNF[6],QLCOST
Dim 3%,TOTALAMT,HOLD_S3[17]
Dim PACK$[15],N2$[118],CUSTPO$[20],PRINTMODE$[50],DIR$[75]
Dim F$[16],P9$[50],V$[100],Z$[50],P0$[10],V0$[12],H0$[20],H1$[6],S1$[118]
Dim S2$[20],EB$[10],A1$[142],A2$[30],SFS1$[118],L6$[60],L1$[20],MT$[2]
Dim S3$[33],A$[156],PRODA1$[90],CCD$[14],SUNIT$[4],PUNIT$[4],CUNIT$[4]
Dim M1$[40],HAZ$[160],PMASK$[15],LINE1$[100],LINE2$[100],TERMS$[16],HA1$[50]
Dim K2$[20],K4$[50],K5$[6],K7$[10],K11$[4],K15$[6]
Dim TEMPMARK$[140],A3$[22],LINE_$[150],FILE$[50],COID$[1],C$[16]
Dim U2$[20],CNAME$[30],CADD1$[30],CADD2$[30],CTYSTZIP$[22],A0$[68],SHIPTERMS$[16],DIV2PAY$[116]
Dim 2%,DISP
Dim J$[70],J0$[10],J1$[70],J2$[20],J3$[40],J5$[75],J7$[75],J9$[75],J4$[60]
Dim VENDA5$[60],VENDA1$[264],K21$[20],BLANK$[30],K35$[15],X$[10]
Dim 4%
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
BLANK$ = " ",BLANK$
PLAINTEST = 1
If Err 0 Rem
Close #0
If Err 0 Gosub ERR_TRAP
If PLAINTEST
  DIR$ = "REPORTDIR"
  System 28,DIR$
  FILE$ = DIR$ + "/" + "RFP"
  Call FindF(FILE$,FOUND)
  If FOUND
    Kill FILE$
  End If 
  Build #0, + FILE$
  Print #0;""
  Close #0
  Open #0,FILE$
Else 
End If 
For I = 2 To 21
  Read F \ If F = -1 Goto L_830
  Read #1,88,Abs(F);F$;
  If F > 0 Open #I,F$ Else Ropen #I,F$
L_830: Next I
Data "1280","-1392","-1344","-1808","-1792","-2672","-1424","-1","-2176","-1824","-1","-1","-2656","-720","-1728","-2784","-2768","-1664","-688","-2400"
Open #78,"cntrl/userport","cntrl/usercntrl"
!Read #78,Spc(6),0;USRCREC;
USRCREC=getuidrec(e$,IntCo,Userid$)
If USRCREC <> -1
  Read #79,USRCREC,280;USERNAME$;
Else 
  USERNAME$ = "UBS Admin"
End If 
Close #78,#79
F$ = "6/QVENDLN" + Str$(COID)
Open #35,F$
REMARK$ = "";TIMER$ = "NOW";FROM$ = USERNAME$
FAXPRIORITY$ = "5"
Mat Read #1,19,50;P9$;
Mat Read #1,115,0;D9;
Read #1,2,200;OTC;
Gosub GET_CURRENT_DATE \ Gosub PACK_DATE \ D8 = X2
Mat Read #1,115,40;Q0; \ If Not(Q0[1]) Let Q0[1] = 2
Z$ = "#####";PMASK$ = "#####.",Z$[1,Q0[1]]
V$ = "\15\",V$
STAT[0] = 1;STAT[1] = 2
Mat Read #1,3,0;CNAME$;
Mat Read #1,3,30;CADD1$;
Mat Read #1,3,60;CADD2$;
Mat Read #1,3,90;CTYSTZIP$;
Mat Read #4,QOLREC,0;HOLD_L2;
Mat Read #4,QOLREC,8;HOLD_L3;
Mat Read #4,QOLREC,260;HOLD_S3;
PASS = 0
For STAT[2] = 1 To 4
  K2$[1,2] = STAT[2] Using "##"
  K2$[3,8] = HOLD_L2[1] Using "######"
  Search #2,2,1;K2$,R[2],E
  If E > 1 Gosub ERR_SEARCH
  If Not(E)
    PASS = 1
    ORD_STATUS = STAT[2]
    STAT[2] = 4
  End If 
Next STAT[2]
If PASS
  K35$ = " ",K35$
  K35$[1,6] = HOLD_L2[1] Using "######"
  K35$[7,9] = HOLD_L3[2] Using "###"
QVENDLN_LOOP: Rem
  Search #35,3,1;K35$,R35,E \ If E = 2 Goto END_QVENDLN
  If E Gosub ERR_SEARCH
  X2 = K35$[1,6] \ If X2 <> HOLD_L2[1] Goto END_QVENDLN
  X2 = K35$[7,9] \ If X2 <> HOLD_L3[2] Goto END_QVENDLN
  Read #35,R35,0;QLFAX;
  Read #35,R35,2;QLFAXDATE;
  Read #35,R35,6;QLCOST;
  Read #35,R35,12;QLVEND;
  If QLFAX !qte line fax
    Gosub GET_VEND
    J$ = VENDA5$[31,60] \ Gosub RMILLEGALCHARCVR
    Gosub RMILLEGALCHARPHONE
    FAXNO$ = J$
    Gosub CHK_FAX_NO
    If FAXNO_LEN < 7
      Gosub DISPLAY_COVER_SHEET
    End If 
    Gosub L_2000
    KEY_$ = " ",KEY_$;KEY_$[1,6] = "MIQUOT";KEY_$[7,12] = Str$(H0[7])
    QLFAXDATE = D8
    Write #35,R35,2;QLFAXDATE;
    If Err 0 Rem
    Close #0
    If Err 0 Goto ERR_TRAP
    If PLAINTEST
      Open #0,FILE$
RORDLCONT: Read #0;WORK$
      If WORK$ Goto RORDLCONT
    Else 
    End If 
  End If 
  Goto QVENDLN_LOOP
END_QVENDLN: Rem
End If 
Goto OUTEND
L_2000: Rem "======================================= do print order
TOTALQTY = 0;TOTALAMT = 0
Gosub L_6000
!If SW[8] Print @0,22;'CE';"About to check exception conditions for quote ";N[0]; \ Input ""E
!Print @0,22;'CE';"Faxing...";H0[7];" For Vendor#";QLVEND; \ Signal 3,30
Gosub L_6900
Gosub L_6200
!If SW[8] Print @0,22;'CE';"About to print header for quote";N[0]; \ Input ""E
V9[0] = 0 \ Gosub L_5800
K4$ = " ",K4$;K4$ = H0[7] Using "######"
L_2310: Search #4,3,1;K4$,R[4],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_3000
If K2$[3,8] <> K4$[1,6] Goto L_3000
QOLLINE = K4$[7,9]
If QOLLINE < SFAXLINE Or QOLLINE > EFAXLINE Goto L_2310
Gosub L_6300
!If SW[8] Print @0,22;'CE';"About to print detail line";L3[2];"for quote";N[0]; \ Input ""E
If L3[2] > 900 Goto L_3000
If V9[1] >= V9[4] Gosub L_4000
If Not(L3[0]) ! "stock item
  R[6] = L4[0] \ Gosub L_6400
  Gosub L_10000
  Gosub L_5000
  Gosub L_2800
  If SW[0] If S2[1] Gosub L_5500
  If SW[1] Let R[17] = A3[2] \ Gosub L_7000
  If SW[2] If S3[17] Gosub L_7200
  If SW[9] Gosub L_7300
Else 
  If S2[0] = 3
    If SW[3] Gosub L_5200
  Else 
    Gosub L_30000
    Gosub L_10000
    L1$[1,12] = S3$[1,12]
    PACK$ = " ",PACK$
    Gosub L_5000
    Gosub L_2800
  End If 
End If 
WORK$ = " ",WORK$
WORK$[1,6] = L2[1] Using "######"
WORK$[7,9] = L3[2] Using "###"
WORK$[10,15] = QLVEND Using "######"
WORK$[16] = ""
Search #35,2,1;WORK$,REC_QVEND,E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto L_2310
If E And L3[0] Goto L_2310
If E And Not(L3[0]) !STOCK ITEM
  E = 2;REC_QVEND = 0
  Search #35,1,0;WORK$,REC_QVEND,E \ If E Gosub ERR_SEARCH
  Search #35,4,1;WORK$,REC_QVEND,E \ If E Gosub ERR_SEARCH
  QLFAX = 0;QLFAXDATE = 0;QLCOST = 0;QLVSEL = 0
  Write #35,REC_QVEND,0;QLFAX
  Write #35,REC_QVEND,2;QLFAXDATE
  Write #35,REC_QVEND,6;QLCOST
  Write #35,REC_QVEND,12;QLVEND
  Write #35,REC_QVEND,16;H0[7]
  Write #35,REC_QVEND,20;L3[2]
  Write #35,REC_QVEND,22;QLVSEL
End If 
If Not(E) ! "found - do we fax it?
  Mat Read #35,REC_QVEND,0;QLFAX;
  If Not(QLFAX) Goto L_2310
End If 
QLFAX = 1;QLFAXDATE = D8
Write #35,REC_QVEND,0;QLFAX
Write #35,REC_QVEND,2;QLFAXDATE;
Goto L_2310
L_2800: Rem "======================================= accumulate totals
TOTALQTY = TOTALQTY + L7[2]
If H4[1] <> 999 Let TOTALAMT = TOTALAMT + L5[0]
Return 
L_3000: Rem "======================================= done with line items
If SW[4] Gosub L_5300
If SW[5] Gosub L_5600
Gosub L_8050
L_3050: Return 
L_4000: Rem "======================================= page continuation
V9[2] = 55 \ Gosub L_8000
Print #0; Tab TABS[0];"CONTINUED ON PAGE";V9[0] + 1 \ V9[1] = V9[1] + 1
Gosub L_8050
Gosub L_5800
Return 
L_4200: Rem "======================================= increase status
K2$[1,2] = STAT[1] Using "##"
Search #2,4,1;K2$,R[2],E \ If E Gosub ERR_SEARCH
K2$[1,2] = STAT[0] Using "##"
Search #2,5,1;K2$,R[2],E \ If E Gosub ERR_SEARCH
H0[0] = STAT[1]
Mat Write #2,R[2],0;H0;
Return 
L_5000: Rem "============ print line item (if h4[1]=999 don't print qty,u/m,ext)
Print #0; Using "###"; Tab 0;L3[2];
If H4[1] <> 999
  Print #0; Using "########"; Tab 3;L7[2];
  Print #0; Tab 13;SUNIT$;
End If 
Print #0; Tab 18;L1$[1,12];
Print #0; Tab TABS[0];L6$[1,30];
Print #0; Using "########.##"; Tab 62;OLM[3];
If H4[1] <> 999 Print #0; Using "--------#.##"; Tab 76;L5[0];
Print #0; Using "########";L7[4];L7[3];
Print #0;"" \ V9[1] = V9[1] + 1
If L6$[31,31] <> "" And L6$[31,33] <> "   "
  Print #0; Tab TABS[0];L6$[31,60]
  V9[1] = V9[1] + 1
End If 
Print #0;"" \ V9[1] = V9[1] + 1
Return 
If KL1[5] = -2 Goto L_5115
Print #0; Using "#####.##"; Tab 19;KL3[1];SUNIT$[1,4];
L_5115: Rem PRINT #0;TAB   ;A$[140,151]; ! "print item code? and where
Print #0; Tab 34;A$[9,38];
Print #0;"" \ V9[1] = V9[1] + 1
If A$[63,63] = " " Or A$[63,63] = "" Goto L_5190
If P9$[26,26] <> "Y" Goto L_5190
If V9[1] >= V9[3] Gosub L_4000
Print #0; Tab 34;A$[63,92];
Print #0;"" \ V9[1] = V9[1] + 1
L_5190: Return 
L_5200: Rem "======================================= message line (Z line)
Print #0; Tab TABS[0];L6$[1,30] \ V9[1] = V9[1] + 1
If V9[1] >= V9[4] Gosub L_4000
If L6$[31,31] = "" Or L6$[31,31] = " " Goto L_5225
Print #0; Tab TABS[0];L6$[31,60] \ V9[1] = V9[1] + 1
L_5225: Rem
Print #0;"" \ V9[1] = V9[1] + 1
Return 
L_5300: Rem "======================================= messages
BLINE = 1
K7$ = " ",K7$;K7$ = H0[7] Using "######"
K7$[7,9] = "201";K7$[10,10] = ""
Search #7,2,1;K7$,R[7],E
If Not(E) Goto L_5340
L_5330: Search #7,3,1;K7$,R[7],E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_5380
L_5340: I = K7$[7,9] \ If I > 400 Goto L_5380
If K2$[3,8] <> K7$[1,6] Goto L_5380
Mat Read #7,R[7];M1$;
If V9[1] >= V9[4] Gosub L_4000
If BLINE Print #0;" " \ V9[1] = V9[1] + 1;BLINE = 0
If V9[1] >= V9[4] Gosub L_4000
Print #0; Tab TABS[0];M1$ \ V9[1] = V9[1] + 1
Goto L_5330
L_5380: Return 
L_5500: Rem "======================================== cut information
If V9[1] + 1 >= V9[4] Gosub L_4000
Print #0; Using "CUT ### OUT TO ##########"; Tab TABS[0];S2[1];L7[2] * S2[1]
Print #0; Tab TABS[0];L6$[31,60]
V9[1] = V9[1] + 2
Return 
L_5600: Rem "================== print totals (if h4=999 don't print total)
V9[2] = 55 \ Gosub L_8000
Print #0; Tab 2;"TOTALQTY ";TOTALQTY;
If H4[1] <> 999
  Print #0; Tab 65;"SUBTOTAL";
  Print #0; Using "--------#.##"; Tab 73;TOTALAMT
Else 
  Print #0;""
End If 
V9[1] = V9[1] + 1
Return 
L_5800: Rem "======================================= headings
V9[1] = 1;V9[0] = V9[0] + 1
V9[2] = 1 \ Gosub L_8000
If Len(REMARK$) > 0
  For X = 1 To Len(REMARK$)
    If REMARK$[X,X] >= " " And REMARK$[X,X] <= "z"
      TEMPMARK$ = TEMPMARK$ + REMARK$[X,X]
    End If 
  Next X
  Print #0; Tab 0;TEMPMARK$[1,70]
  Print #0; Tab 0;TEMPMARK$[71,140]
Else 
  Print #0;"" \ Print #0;""
End If 
V9[1] = V9[1] + 2
Print #0; Tab 0;CONTACT$[1,30]; Tab 30;NAME$[1,30]; Tab 60;FROM$[1,30];
Print #0; Tab 90;FAXNO$[1,30]
V9[1] = V9[1] + 1
Print #0; Tab 40;TIMER$[1,12]; Tab 55;FAXPRIORITY$[1];
Print #0; Tab 60;"YES";
Print #0;""
V9[1] = V9[1] + 1
Gosub READWHINFO
LINE1$ = " ",LINE1$
For I = 105 To 92 Step -1 \ If N2$[I,I] > " " Goto CITYSTZIP
Next I
CITYSTZIP: Rem
LINE1$[1,30] = N2$[91,I],", ",N2$[106,107]," ",N2$[108,117]
V9[2] = 5 \ Gosub L_8000
Print #0; Using "######"; Tab 2;"QUOTE # ";H0[7];" INVOICE # ";H0[6]
Z$ = H0[9] Using "&&&&&&" \ Call FormatDate(Z$,Z$,E)
Print #0; Tab 2;"QUOTE DATE ";Z$;
Z$ = H0[8] Using "&&&&&&" \ Call FormatDate(Z$,Z$,E)
Print #0;" INVOICE DATE ";Z$
Z$ = H5[1] Using "&&&&&&" \ Call FormatDate(Z$,Z$,E)
Print #0; Tab 2;"EXPIRATION DATE ";Z$;
Z$ = H0[10] Using "&&&&&&" \ Call FormatDate(Z$,Z$,E)
Print #0;" SHIP DATE ";Z$
V9[1] = V9[1] + 3
V9[2] = 8 \ Gosub L_8000
Mat Read #20,H5[8],80;DIV2PAY$;
Print #0; Using "######"; Tab 2;"VENDOR   CODE ";QLVEND;
Print #0; Using "##"; Tab 60;H5[9]
Print #0; Using "###"; Tab 2;"SALESMAN ";H0[11];SFS1$[1,30]
Print #0; Using "###"; Tab 2;"TAX CODE ";H4;" Page:";V9[0]
Print #0; Tab 2;"Ship Via: ";V0$[1,12];"Division: ";H5[8];
Print #0; Tab 50;FAXNO$[1,30]
Print #0; Tab 2;"Customer Po: ";CUSTPO$[1,20];
Print #0; Tab 84;""
V9[1] = V9[1] + 5
LINE1$ = " ",LINE1$;LINE2$ = " ",LINE2$
LINE1$[1,30] = VENDA1$[61,90];LINE1$[51,80] = S1$[61,90]
For I = 105 To 92 Step -1 \ If VENDA1$[I,I] > " " Goto L_5840
Next I
L_5840: Rem
LINE2$[1,30] = VENDA1$[91,I],", ",VENDA1$[106,107]," ",VENDA1$[108,116]
For I = 105 To 92 Step -1 \ If S1$[I,I] > " " Goto L_5855
Next I
L_5855: Rem
LINE2$[51,80] = S1$[91,I],", ",S1$[106,107]," ",S1$[108,117]
If LINE1$[1,5] <> "     " Goto L_5880
LINE1$[1,50] = LINE2$[1,50];LINE2$[1,50] = " ",LINE2$[1,50]
L_5880: If LINE1$[51,55] <> "     " Goto L_5890
LINE1$[51,100] = LINE2$[51,100];LINE2$[51,100] = " ",LINE2$[51,100]
L_5890: V9[2] = 13 \ Gosub L_8000
Print #0; Using "######"; Tab TABS[1];QLVEND
Print #0; Tab TABS[1];VENDA1$[1,30]; Tab TABS[2];S1$[1,30]
Print #0; Tab TABS[1];VENDA1$[31,60]; Tab TABS[2];S1$[31,60]
Print #0; Tab TABS[1];LINE1$[1,30]; Tab TABS[2];LINE1$[51,80]
V9[1] = V9[1] + 4
If (LINE2$[1,1] <> " " And LINE2$[1,1] <> "") Or (LINE2$[51,51] <> " " And LINE2$[51,51] <> "")
  Print #0; Tab TABS[1];LINE2$[1,30]; Tab TABS[2];LINE2$[51,80];
  Print #0;"" \ V9[1] = V9[1] + 1
End If 
If A3$[7,7] = " " Or A3$[7,7] = "" Goto L_4120
If S1$[1,1] = " " Or S1$[1,1] = "" Goto L_4120
If (A3$[7,7] <> " " And A3$[7,7] <> "") Or (S1$[1,1] <> " " And S1$[1,1] <> "")
  Print #0; Tab TABS[1];A3$[7,21]; Tab TABS[2];S2$[1,15];
  Print #0;"" \ V9[1] = V9[1] + 1
End If 
L_4120: Rem
V9[2] = 20 \ Gosub L_8000
Print #0; Tab TABS[1];"ATTN: ";H0$[1,20];
Print #0; Tab TABS[2];"FOB: ";SHIPTERMS$
Print #0; Tab TABS[1];"FAX: ";A0$[9,28]; Tab TABS[2];"TERMS: ";TERMS$
V9[1] = V9[1] + 2
V9[2] = 22 \ Gosub L_8000
Print #0; Tab 3;"LN#";
If H4[1] <> 999 Print #0; Tab 9;"QTY U/M";
Print #0; Tab 18;"PRODUCT CODE";
Print #0; Tab TABS[0];"DESCRIPTION";
Print #0; Tab 65;"PRICE";
If H4[1] <> 999 Print #0; Tab 77;"EXTENSION" Else Print #0;""
Print #0;"" \ V9[1] = V9[1] + 2
Return 
READWHINFO: Rem========================= READ WHSINFO (do not lock!)
Mat Read #18,H4[2] - 1,4;N2$;
Return 
L_6000: Rem "======================== read order header, ship to, totals
Mat Read #2,R[2],0;H0
Mat Read #2,R[2],52;H3
Mat Read #2,R[2],56;P0$
Mat Read #2,R[2],66;V0$
Mat Read #2,R[2],78;H4
Mat Read #2,R[2],84;H0$
Mat Read #2,R[2],104;H5
Mat Read #2,R[2],172;ROHS3
Mat Read #2,R[2],272;H1$
Mat Read #2,R[2],278;SLSM
Mat Read #2,R[2],318;SCOM
Mat Read #2,R[2],348;SMER
Mat Read #2,R[2],378;SCST
Mat Read #2,R[2],408;H6
Mat Read #2,R[2],446;CUSTPO$
Mat Read #3,H0[2],0;S1
Mat Read #3,H0[2],8;S1$
Mat Read #3,H0[2],126;S2$
Mat Read #3,H0[2],146;S5
Mat Read #14,H0[3],0;T1
Mat Read #14,H0[3],8;T2
Mat Read #14,H0[3],164;JRNL
If Not(SW[7]) Goto L_6140
If H0[7] <> S1[1] Let E = 0 \ Gosub ERR_SEARCH
If H0[7] <> T1[1] Let E = 0 \ Gosub ERR_SEARCH
If H0[7] <> N[0] Let E = 0 \ Gosub ERR_SEARCH
L_6140: Return 
L_6150: Rem "======================== read customer record
K5$ = " ",K5$;K5$ = H0[4] Using "######"
If H0[1] <> H0[4] Let K5$ = H0[1] Using "######"
Search #5,2,1;K5$,R[5],E \ If E Gosub ERR_SEARCH
Mat Read #5,R[5],0;A1$;
Mat Read #5,R[5],348;A2$;
Mat Read #5,R[5],388;A3$;
Mat Read #5,R[5],409;C8;
Mat Read #5,R[5],426;U2$;
If OTC = H0[1] Let A1$[31,137] = S1$[1,107];A1$[1,10] = S1$[108,117]
K15$ = " ",K15$;K15$ = H0[4] Using "######"
Search #15,2,1;K15$,R15,E \ If E > 2 Gosub ERR_SEARCH
If E = 1 Let A0$ = " ",A0$
If Not(E) Mat Read #15,R15,100;A0$;
Return 
GET_VEND: Rem "================== read vendor record
K21$ = " ",K21$;K21$ = QLVEND Using "######"
Search #21,2,1;K21$,R21,E
If Not(E)
  Mat Read #21,R21,0;VENDA1$;
  Mat Read #21,R21,576;VENDA5$;
End If 
Return 
L_6200: Rem "======================== read slsm record
K11$ = " ",K11$;K11$ = H0[11] Using "### "
Search #11,2,1;K11$,R[11],E \ If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;SFS1$;
Return 
L_6300: Rem "======================== read order line record
Mat Read #4,R[4],0;L2;
Mat Read #4,R[4],8;L3;
Mat Read #4,R[4],16;L4;
Mat Read #4,R[4],32;L5;
Mat Read #4,R[4],56;L6;
Mat Read #4,R[4],80;L6$;
Mat Read #4,R[4],140;L1$;
Mat Read #4,R[4],160;L9;
Mat Read #4,R[4],168;L7;
Mat Read #4,R[4],250;UN;
Mat Read #4,R[4],256;S2;
If Not(S2[0]) Let S2[1] = 0
Mat Read #4,R[4],260;S3;
Mat Read #4,R[4],368;MT$;
Mat Read #4,R[4],370;S3$;
Mat Read #4,R[4],404;OLM;
Mat Read #4,R[4],446;EUN;
Mat Read #4,R[4],452;UNF;
If SW[7] If H0[7] <> L2[1] Let E = 0 \ Gosub ERR_SEARCH
Return 
L_6400: Rem "======================== read product record
Mat Read #6,R[6],0;A$;
Mat Read #6,R[6],156;B;
Mat Read #6,R[6],256;A;
Mat Read #6,R[6],512;PFU1;
Mat Read #6,R[6],554;PFU2;
Mat Read #6,R[6],744;PRODA1$;
Mat Read #6,R[6],834;A3;
Mat Read #6,R[6],956;PACK$;
If SW[7] If A$[140,151] <> L1$[1,12] Let E = 0 \ Gosub ERR_SEARCH
Return 
L_6900: Rem "======================== misc data reads
Mat Read #1,26,(H0[12] - 1) * 8;TRMS;
Mat Read #19,H5[0];EB$;
Mat Read #1,107,(H3[1] * 16) - 16;SHIPTERMS$
Z1 = H0[12] * 16 - 16 \ If Z1 < 0 Let Z1 = 0
Mat Read #1,25,Z1;TERMS$
Return 
L_7000: Rem "========================== hazardous product information
If Not(A3[0]) Goto L_7090
If Not(R[17]) Goto L_7090
Mat Read #17,R[17],0;HAZ$;
If V9[1] >= V9[4] Gosub L_4000
Print #0; Tab 10;PRODA1$[71,80];
Print #0; Tab TABS[0];HAZ$[1,40] \ V9[1] = V9[1] + 1
If HAZ$[41,45] = "     " Goto L_7080
If V9[1] >= V9[4] Gosub L_4000
Print #0; Tab TABS[0];HAZ$[41,80] \ V9[1] = V9[1] + 1
If HAZ$[81,85] = "     " Goto L_7080
If V9[1] >= V9[4] Gosub L_4000
Print #0; Tab TABS[0];HAZ$[81,120] \ V9[1] = V9[1] + 1
If HAZ$[121,125] = "     " Goto L_7080
If V9[1] >= V9[4] Gosub L_4000
Print #0; Tab TABS[0];HAZ$[121,160] \ V9[1] = V9[1] + 1
L_7080: If V9[1] >= V9[4] Gosub L_4000
If PRODA1$[41,42] <> "  " Print #0; Tab TABS[0];PRODA1$[41,70] \ V9[1] = V9[1] + 1
L_7090: Return 
L_7200: Rem "=========================== msds sheet info
If V9[1] >= V9[4] Gosub L_4000
Print #0; Tab 10;S3[17]; Tab TABS[0];"MATERIAL SAFETY DATA SHEET FOR ABOVE"
V9[1] = V9[1] + 1
Return 
L_7300: Rem "============================== stocking unit count/breakdown
Z1 = S7300
Print #0; Tab TABS[0];"(";
For I = 1 To 7 \ If PFU1[8] = PFU1[I] Goto L_7335 \ Next I
If PFU1[8] = PFU1[0] Goto L_7360
Print #0;"STOCKING UNIT CONVERSION ERROR!" \ Goto L_7370
L_7335: If Int(Z1 / PFU2[I - 1]) > 0 Gosub L_7385
For I = 7 To 1 Step -1
  If Not(Z1) Goto L_7370
  If PFU2[I - 1] If Int(Z1 / PFU2[I - 1]) > 0 Gosub L_7385
Next I
L_7360: Mat Read #16,PFU1[0],0;CCD$;
If Z1 Print #0;Z1;CCD$[11,14];
L_7370: Print #0;")"
V9[1] = V9[1] + 1
Return 
L_7385: Rem "================== print a break
Mat Read #16,PFU1[I],0;CCD$;
If CCD$[10,10] = "*" Goto L_7410
Print #0;Int(Z1 / PFU2[I - 1]);CCD$[11,14];
Z1 = Z1 - (Int(Z1 / PFU2[I - 1]) * PFU2[I - 1])
L_7410: Return 
L_8000: Rem "============= vertical forms control  ---  move to line set in V9[2]
If V9[1] >= V9[2] Return 
Print #0;V$[V9[1],V9[2] - 1];
V9[1] = V9[2]
Return 
L_8050: Rem "======================= top of forms   ---  V9[3] = form length
Print #0;"\14\";
V9[1] = 1
Return 

L_10000: Rem "================================= base to display conversions
S7300 = L7[2]
For I = 2 To 4
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[I]
  Gosub L_20000
  L7[I] = AMOUNT
Next I
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
OLM[3] = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
Gosub L_20000
L5[1] = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000
L6[1] = AMOUNT
If S2[1] = 0 Or S3[0] = 0 Goto L_10200
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = S3[0]
If S3[8] = -3 If L7[2] Let CNVTA = CNVTA / L7[2]
Gosub L_20000
L_10200: If S2[1] = 0 Or S3[1] = 0 Goto L_10250
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = S3[1]
If S3[11] = -3 If L7[2] Let CNVTA = CNVTA / L7[2]
Gosub L_20000
L5[1] = L5[1] + AMOUNT
L_10250: If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] > 0 Mat Read #16,UN[0],0;CCD$; \ SUNIT$ = CCD$[11,14]
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] > 0 Mat Read #16,UN[1],0;CCD$; \ PUNIT$ = CCD$[11,14]
If UN[2] = -1 Let CUNIT$ = "CWT "
If UN[2] = -2 Let CUNIT$ = "LOT "
If UN[2] > 0 Mat Read #16,UN[2],0;CCD$; \ CUNIT$ = CCD$[11,14]
Return 
F$ = Spc(6) Using "6/SORTWORK&&&&&!"
FILE$ = "[1:1] ",F$
Build #9,FILE$
R[9] = 25 \ Search #9,0,1;F$,R[9],E \ If E Gosub ERR_SEARCH
R[9] = 1 \ Search #9,0,0;F$,R[9],E \ If E Gosub ERR_SEARCH
R[9] = 0 \ Search #9,1,0;F$,R[9],E \ If E Gosub ERR_SEARCH
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set n/s units for conversions
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1];PFU1[13] = UN[0]
PFU1[16] = EUN[0];PFU1[17] = EUN[0];PFU1[18] = UN[0]
PFU1[19] = UN[0]
PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
Mat Read #8,L4[0],120;A3;
Mat Read #8,L4[0],132;HA1$;
PRODA1$ = " ",PRODA1$
PRODA1$[41,90] = HA1$[1,50]
Return 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
E = Chf(CHNL)
If Err 0 Gosub ERR_TRAP
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
GETCHAN: Rem search for open channel (counts down from supplied chnl #
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
RMILLEGALCHARCVR: Rem remove for illegal characters
If Len(J$) = 0 Return 
For I2 = 1 To Len(J$)
  If Asc(J$[I2,I2]) = 162 Or J$[I2,I2] = "`" Let J$[I2,I2] = " "
Next I2
Return 
RMILLEGALCHARPHONE: Rem remove illegal characters in phone number
If Len(J$) = 0 Return 
U5$ = ""
For I2 = 1 To Len(J$)
  If J$[I2,I2] = "(" Let J$[I2,I2] = " "
  If J$[I2,I2] = ")" Let J$[I2,I2] = "-"
  If J$[I2,I2] <> " " Let U5$ = U5$ + J$[I2,I2]
Next I2
J$ = " ",J$ \ J$[1,Len(U5$)] = U5$
Return 
DISPLAY_COVER_SHEET: Rem
Return ! not on erp/dl4
Window Open @5,4; Size 73,20; Using " FAX COVER SHEET INFORMATION "
Print 'BD';" Vend:";'ED';S3[14];
Print Tab (32);'BD';"Quote #";'ED';H0[7];
Print @2,3;'BD';" Name     : ";'ED';VENDA1$[1,30]
Print @2,4;'BD';" Address 1: ";'ED';VENDA1$[31,60]
Print @2,5;'BD';" Address 2: ";'ED';VENDA1$[61,90]
Print @2,6;'BD';" City     : ";'ED CL';
Print @16,6;VENDA1$[91,105];
Print @32,6;'BD';"State: ";'ED';VENDA1$[106,107];
Print @42,6;'BD';"Zip: ";'ED';VENDA1$[108,116];
J$ = VENDA5$[31,60] \ Gosub RMILLEGALCHARCVR \ Gosub RMILLEGALCHARPHONE
FAXNO$ = J$
Call "dialcode",FAXNO$
Print @2,8;'CL BD';"1) Fax number: ";'ED';FAXNO$
If FAXNO$[1,Len(FAXNO$)] = BLANK$[1,Len(FAXNO$)]
  Print @30,8;'RB BB';"<<< No fax number entered ";'EB';
End If 
CONTACT$ = VENDA1$[129,148]
Print @2,9;'CL BD';"2) To        : ";'ED';CONTACT$
Print @2,10;'CL BD';"3) From      : ";'ED';FROM$
Print @2,11;'CL BD';"4) Remarks   ";'ED';
Print @2,14;'CL BD';"5) Time To Send: ";'ED';TIMER$
PRIORITY$ = "PRIORITY"
FAXPRIORITY$ = "5"
Print @2,15;'CL BD';"6) Fax Priority: ";'ED';PRIORITY$;" ";
PROCESS_SELECTION: Rem
Gosub CHK_FAX_NO
Print @0,Msc(34) - 1;"  Enter  #:edit field    C:continue    A:abort   ";'CL';
Input ""U5$
Call String(1,U5$)
U5 = U5$
If Not(U5)
  If U5$ <> "C" And U5$ <> "A" Goto PROCESS_SELECTION
  If U5$ = "C" And FAXNO_LEN < 7 Let U5 = 6 \ Goto PROCESS_SELECTION
Else 
  On U5 Gosub EDT_FAX_NO,EDT_CONTACT,EDT_FROM,EDT_REMARKS,EDT_FAXTIME,EDT_PRIORITY
End If 
If U5$ = "C"
  Window Close 
  Return 
End If 
If U5$ = "A"
  Window Close 
  Goto OUTEND
End If 
If U5 Goto PROCESS_SELECTION
Return 
CHK_FAX_NO: Rem check how many char in fax # field
FAX$ = ""
For I2 = 1 To Len(FAXNO$)
  If FAXNO$[I2,I2] = "(" Let FAXNO$[I2,I2] = " "
  If FAXNO$[I2,I2] = ")" Let FAXNO$[I2,I2] = "-"
  If FAXNO$[I2,I2] <> " " Let FAX$ = FAX$ + FAXNO$[I2,I2]
Next I2
FAXNO$ = " ",FAXNO$ \ FAXNO$[1,Len(FAX$)] = FAX$ \ FAXNO$ = FAXNO$[1,30]
I = 1
LOOP_FAX_NO: Rem
If I < 30
  If FAXNO$[I,I] <> " "
    I = I + 1 \ Goto LOOP_FAX_NO
  End If 
End If 
FAXNO_LEN = I - 1
Return 
EDT_FAX_NO: Rem edit fax number
J0$ = "2 00301708"
J5$ = "Enter the fax number (at least 7 digits) or E to exit"
J1$ = FAXNO$
Print @30,8;'CL';
Gosub ISINPUT
Gosub RMILLEGALCHARCVR \ Gosub RMILLEGALCHARPHONE
FAXNO$ = J$
Return 
EDT_CONTACT: Rem edit contact
J0$ = "2 00301709"
J5$ = "Enter the name of the person receiving the fax"
J1$ = CONTACT$
Gosub ISINPUT
Gosub RMILLEGALCHARCVR
CONTACT$ = J$
Return 
EDT_FROM: Rem edit from
J0$ = "2 00301710"
J5$ = "Enter the name of the person sending the fax"
J1$ = FROM$
Gosub ISINPUT
Gosub RMILLEGALCHARCVR
FROM$ = J$
Return 
EDT_FAXTIME: Rem"edit the time to send the fax
XPOS = 19;YPOS = 14
Call "OP268time",XPOS,YPOS,TIMER$
Return 
EDT_PRIORITY: Rem"edit priority
If FAXPRIORITY$ = "5" Let RESP$ = "P"
If FAXPRIORITY$ = "0" Let RESP$ = "E"
J0$ = "2 00011915"
J5$ = "Enter    E:Express   P:Priority "
J1$ = RESP$
Gosub ISINPUT
If RESP$ <> "E" And RESP$ <> "P" Goto EDT_PRIORITY
If RESP$ = "E" Let PRIORITY$ = "EXPRESS" \ FAXPRIORITY$ = "0"
If RESP$ = "P" Let PRIORITY$ = "PRIORITY" \ FAXPRIORITY$ = "5"
Print @2,15;'CL BD';"6) Fax Priority: ";'ED';PRIORITY$;" ";
Return 
EDT_REMARKS: Rem remarks
REMARK$ = ""
J0$ = "2 00700212"
J5$ = "Enter the remarks up to 140 characters"
J1$ = REMARK$[1,70]
Gosub ISINPUT
Gosub RMILLEGALCHARCVR
REMARK$[1,70] = J$
J0$ = "2 00700213"
J5$ = "Enter the remarks up to 140 characters"
J1$ = REMARK$[71,140]
Gosub ISINPUT
Gosub RMILLEGALCHARCVR
REMARK$[71,140] = J$
Return 
PACK_DATE: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
GET_CURRENT_DATE: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto GCD_7940
Next K1
e$="DATE ERROR - STOP AT get_current_date" \ error 10000
GCD_7940: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
Rem {begin call.input.i}
ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
! Call "Input",J1,J$,J0$,J1$,J4$,J5$
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}
OUTEND: Rem "========================================= exit
Chain ""
END
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM ",MSC$(4)
call programdump("tmp/op291se!","")
ERROR 11000
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet_call.inc"
end
Rem {end rtn.error.s}