! libprodlist.lib
!
! supporting library of product list routines for browser
!
! 1.0 08/08/07
! 1.5 05/07/2008 - revised prodfile struct
!
! loadsave -w -n 100,10 -o prog/dxport/libprodlist.lib src/libprodlist.src
!
include "src/copyright.inc"
!
! sub & functions for list library
!
!  S   AltVendorList      creates product alternate vendor list
!  S   KeyWords           creates product key word or complist
!
include "src/inc/filealtvend.inc" ! alternate vendor
include "src/inc/fileccodes.inc" ! u/m codes
include "src/inc/filea80vm.inc" ! vendor
include "src/inc/fileprod.inc" ! product
include "src/inc/fileprdkeywrd.inc" ! product key word
!
External Lib "libgeneral.lib"
Declare External Sub SubErr,GetDelimiters
!
External Lib "ubsprconv.dl4"
Declare External Function Xunit$
!
External Lib "libprodconv.lib"
Declare External Function ConvProdAmount
!
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,PDate$
Declare External Sub UserCntrl
!
Declare Intrinsic Sub Env,JulianToDate
!
!
!--------------------------------------------------------------------
External Sub AltVendorList(e$,ProdRec,List$[],maxcnt,AVChan,UMChan,VMChan,intCo,Prod. as prod)
  !
  ! Creates an alternate vendor list
  !
  ! e$         : error message
  ! ProdRec    : product rec#
  ! List$[]    : alternate vendor listing
  ! maxcnt     : max # of lines for list$[]
  ! AVChan     : channel, alternate vendor
  ! UMChan     : channel, unit of measure (ccodes)
  ! VMChan     : channel, vendor
  ! intCo		: company #
  ! Prod.      : product record
  !
  try
    !
    dim 1%,tmp1,cnvtu[2]
	dim 2%,tmp2,tmpcnt,Q0[1]
    dim 3%,tmp3,AVRec,UMRec,VMRec,cnvta,amount
    Dim 1%,FndUID,UA5[10],Cost_Lev[3] ! vars for call usercntrl
	Dim UserID$[8],UA2$[50],TUID$[10] ! vars for call usercntrl

    dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim AVKey$[64],UMKey$[64],VMKey$[64]
	dim Mode$[3],AVMode$[3]
	dim Unit$[6],LeadTime$[10],PODate$[10],x$[20]
	Dim QMASK$[20],PMASK$[20],EMASK$[20],DEC$[5]
	dim blank$[200] \ blank$=" ",blank$
    dim M6$[6] \ M6$="######"
	dim M53$[9] \ M53$="#####.###"
    !
    dim AV. as altvend ! alternate vendor
    dim UM. as ccodes ! u/m codes
    dim VM. as a80vm ! vendor
    !
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
	!! get costlev
	Call DXGet("S_USER.ID",tmp$) ! get from system variable
	Let UserID$=UCase$(tmp$) ! make sure it's UPPERCASE as that's what PM uses
	let TUID$=UserID$+"          " ! set up temp var
	If Len(TUID$)>10 Let TUID$[11]="" ! Cut it at max as usercntrl is 10 chars vs 8 for .net
	If TUID$[1,10]<>"          " !  no blank users!
	  Call UserCntrl(TUID$,UA2$,UA5[],FndUID,intCo)
	  If FndUID=0 ! means found it, =1 is not found
	    Cost_Lev[0]=UA5[0];Cost_Lev[1]=UA5[1] ! avg / load
		Cost_Lev[2]=UA5[2];Cost_Lev[3]=UA5[3] ! PO / base
	  Endif ! if not found would be zeroes from dim
	Endif
	CTLC=1 ! needed for conv call
	Let Dec$="#",Dec$;Qmask$="--------#"
	Call DXGet("U_DECIMAL",tmp$)
	Let Q0[1]=tmp$ \ if Q0[1]<=0 Let Q0[1]=2
	Let Q0[0]=2
	If Q0[0] Let Qmask$="--------#.",Dec$[1,Q0[0]]         !qty mask      
	If Q0[1] Let Pmask$="------------.",Dec$[1,Q0[1]]     !price mask        
	Let Emask$="-$$$$$$$$$$$$.##"  !ext. price mask
    !
	! alternate vendor section
	tmpcnt=maxcnt
	clear List$[]
	!
 	List$[0]=bsdel$,"ALTVENDORLIST",fdel$
	!
	WebStr$="ID",fdel$,"Vendor No",fdel$,"Vendor Name",fdel$
	WebStr$=Webstr$,"Last PO Date",fdel$,"Cost",fdel$
	WebStr$=WebStr$,"UM",fdel$,"Lead Time",fdel$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	!
    if ProdRec>0 ! Product record found
	  AVKey$=Prod.ProdCode$
	  AVMode$=">"
	  AVDir=1
	  Do
	    AVRec=filegetaltvend(e$,AVChan,AVMode$,AVDir,AVKey$,AV.)
        if AVRec<0 or AVKey$[1,len(Prod.ProdCode$)]<>Prod.ProdCode$ exit do
		!
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		!
		VMKey$=AV.VendorCode using M6$
		VMRec=filegeta80vm(e$,VMChan,"=",1,VMKey$,VM.)
		if VMRec<0 clear VM. ! vendor not found
		!
		Unit$=Xunit$(Prod.UMCostDefault,UMChan) ! get unit of measure desc
		!
		LeadTime$=AV.AvgLeadTime*30 using "#### Days"
		!
		tmp$=""
		If AV.LastOrderDate>0
			tmp$=PDate$(AV.LastOrderDate)
		Endif
        PODate$=tmp$
		!
		WebStr$=AVKey$,fdel$ ! alt vendor key
        WebStr$=WebStr$,AV.VendorCode using "######",fdel$ ! vendor #
		WebStr$=WebStr$,rtrim$(VM.Name$),fdel$ ! Vendor name
		WebStr$=WebStr$,PODate$,fdel$ ! last po date
		If Cost_Lev[2]>0 ! po cost level
			cnvta=AV.LastUnitPrice;cnvtu[0]=0;cnvtu[1]=Prod.UMCostDefault;cnvtu[2]=2
			Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,PROD.)
			WebStr$=WebStr$,RTrim$(Amount using PMask$),fdel$ ! last unit price
		Else ! no view cost
			WebStr$=WebStr$," ",fdel$ ! send blank for cost
		Endif
		WebStr$=WebStr$,Unit$,fdel$ ! unit of measure
		WebStr$=WebStr$,LeadTime$,fdel$ ! lead time
		!
		List$[row]=WebStr$
		row=row+1
	  loop
	  !
    endif
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! AltVendorList
!
!--------------------------------------------------------------------
External Sub KeyWordsList(e$,Action1$,ProdRec,List$[],maxcnt,ProdChan,KWChan,Prod. as prod)
  !
  ! Creates an list of either key words or complementary items
  !
  ! e$         : error message
  ! Action1$   : type of list (KEYWORDS or COMPLEMENTARY)
  ! ProdRec    : Product record #
  ! List$[]    : alternate vendor listing
  ! maxcnt     : max # of lines for list$[]
  ! KWChan     : channel, key words
  ! Prod.      : product record
  !
  try
    !
	def fns(x)=((x-1)*15)+1 ! beg position of key word field
	def fnf(x)=((x-1)*15)+15 ! end position of key word field
	!
    Def Struct keywords ! PRODUCT KEY WORDS, 30 fields @ 15 characters
      Member KDesc$[450]     : Item 12  ! key word fields, 30 @ 15 chars
	  Member CDesc$[150]     : Item 462 ! complementary fields, 10 @ 15 chars 
	end Def
	!
    dim 1%,tmp1
	dim 2%,tmp2,tmpcnt
    dim 3%,tmp3,ProdRec,KWRec,tmpRec
    !
    dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim KWKey$[64],ProdKey$[64],SearKey$[64]
	dim Mode$[3],tmpsection$[100],tmpheading$[100]
	dim blank$[200] \ blank$=" ",blank$
    !
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
    !
	If Action1$="KEYWORDS"
	  tmpsection$="KEYWORDSLIST"
	  tmpheading$="Key Word",fdel$
	  fieldcnt=30
	else ! complementary items
	  tmpsection$="COMPLEMENTARYLIST"
	  tmpheading$="Compl Item",fdel$,"Compl Desc 1",fdel$,"Compl Desc 2",fdel$
	  fieldcnt=10
    endif
	!
	dim KW. as prdkeywrd ! prod key word
    dim KYW. as keywords ! key word descs or complementary items
    dim Prod. as prod ! product
	dim tmpProd. as prod ! temp product
    !
	! key words section
	tmpcnt=maxcnt
	clear List$[]
	!
 	List$[0]=bsdel$,tmpsection$,fdel$
	!
	WebStr$="ID",fdel$,tmpheading$
    List$[1]=WebStr$
	!
	row=2 ! starting row for data
	!
    if ProdRec>0 ! Product record found
      KWKey$=Prod.ProdCode$
      Mode$="="
      Dir=1 ! by product number
      KWRec=filegetprdkeywrd(e$,KWChan,mode$,Dir,KWKey$,KW.)
      if KWRec>0 ! Product record found
	    read record #KWChan,KWRec;KYW.;
	    !
	    For cnt=1 to fieldcnt
		  if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		  !
		  if Action1$="KEYWORDS"
		    tmp$=rtrim$(KYW.KDesc$[fns(cnt),fnf(cnt)]) ! key word
			if tmp$="" let tmp$=" "
          else ! AS native only writes 12 for each
			if cnt=1 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem1$+BLANK$
			if cnt=2 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem2$+BLANK$
			if cnt=3 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem3$+BLANK$
			if cnt=4 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem4$+BLANK$
			if cnt=5 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem5$+BLANK$
			if cnt=6 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem6$+BLANK$
			if cnt=7 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem7$+BLANK$
			if cnt=8 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem8$+BLANK$
			if cnt=9 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem9$+BLANK$
			if cnt=10 let KYW.CDESC$[fns(cnt),fnf(cnt)]=KW.ComplItem10$+BLANK$
		    tmp$=rtrim$(KYW.CDesc$[fns(cnt),fnf(cnt)]) ! complementary item
			SearKey$=tmp$
			if SearKey$ let tmpRec=filegetprod(e$,ProdChan,"=",1,SearKey$,tmpProd.)
			if tmpRec<0
			  clear tmpProd.
			endif
		  endif
		  if tmp$
		    if Action1$="KEYWORDS" let tmp1$="Keyword ",str$(cnt) else tmp1$=KWKey$
	        WebStr$=tmp1$,fdel$ ! prod key word key
            WebStr$=WebStr$,rtrim$(tmp$),fdel$ ! product key word or complementary item
			!
			if Action1$="COMPLEMENTARY"
			  Webstr$=WebStr$,rtrim$(tmpProd.Desc1$),fdel$ ! compl prod desc #1
			  Webstr$=WebStr$,rtrim$(tmpProd.Desc2$),fdel$ ! compl prod desc #2
			endif
		    !
		    List$[row]=WebStr$
		    row=row+1
          endif
		next cnt
	  endif
	  !
    endif
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! keywordslist
!
!--------------------------------------------------------------------
