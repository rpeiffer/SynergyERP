! >>> Program mx013f
!
! description Dayend- Converts Future Order type 5 to type 1
! loadsave -w -n 100,10 -o prog/dxport/mx013f.dl4 src/mx013f.src
!
! ERPScheduler Enabled
!
! ------------------------------------------------------------------------------
! 03/27/12  vst task13330 - Created source from current program found under 
!							  'r2005/mx0/mx013f'.  Added 'custom_customer$' code
!        
! Custom_customer$ code
! Acme - task#13575/cct224115 - for o/t=5(future), allocate date before actual 
!                allocation date in order(day minus 1).Once order is allocated,
!                to status=2 (as all orders go in at status 2) and set ship date
!                to allocation date plus 1)
! ------------------------------------------------------------------------------
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 27, 2009  14:04:15
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/t.mx013f.src (univ2) [mary] {04476}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time,VerifyDate
!Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
Rem MX013F - FUTURE ORDER CONVERSION TO REGULAR TYPE5 TO TYPE 1
Rem
Rem      04/04/95-cct#75873-(vst) - CHECKS DATE AGAINST SYSTEM DATE (D5)
!If Err 0 Gosub ERR_TRAP
!Chain Read = 
Try
Enter IntCo,rstr$,Message$,eof
Dim 1%,C2[2],C7[4],D,F1,H3[1],H4[2],J0,J2,J3,J4,J5,J6,J8,J9[2],Y
Dim F7,2%,DT3[1],JSDATE,JWDATE,SCRATCH$[80]
Dim 2%,C1[12],D0,D8,D9[20],E,F2,H0[12],H1,H2,H5[16],N0,R[20],S1[1],S9[3]
Dim 2%,S5,T1[1],V1,X,X1,K1[2],K,L,X8,R7,S3[24],D5
DIM 3%,VDATE,PARAM[5]
Dim 3%,J1,R8,T2[25],X2,4%,X3,U5$[50],N1$[50],X1$[10]
Dim A$[45],C1$[117],C2$[25],C5$[20],D$[8],D1$[8],D2$[8],D3$[8],D4$[8]
Dim D6$[24],U9$[50],M1$[30],K7$[50],K6$[50],K5$[50],2%,L1,L0,X7,X6,R6
Dim D9$[10],J$[50],J0$[15],J1$[50],J2$[20],J4$[50],J5$[80],J6$[30],D5$[28]
Dim J7$[40],J9$[50],N$[30],P0$[10],P9$[50],R$[34],R1$[117],S1$[118]
Dim S2$[20],T$[20],V0$[12],X$[20],2%,RR$[200],R2$[200],R3$[10],F1$[16]
Dim custom_customer$[30]
Dim WebStr$[600],e$[500]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Try close #1 Else Rem
let F1$="cntrl/Cntrl"+str$(coid)
Open #1,f1$
Mat Read #1,19,50;P9$;
Read #1,0,112;D8; \ Mat Read #1,115;D9; \ Mat Read #1,3,172;D5;
! ----------------------------------------------
mat read #1,115,60;custom_customer$;
custom_customer$ = rtrim$(custom_customer$)
! ----------------------------------------------
!If Err 0 Rem
For J = 2 To 25
	!if j<>9
		Try Close #J Else Rem
	!endif
Next J
!If Err 0 Gosub ERR_TRAP
X2 = D5 \ Gosub L_7820 \ X2 = 0
If X2 Let JSDATE = X2 Else Gosub L_7650
For J = 2 To 25
  Read J1
  If J1 = -1 Goto L_550
  Read #1,88,Abs(J1);F1$;
  If J1 < 0 Ropen #J,F1$ Else Open #J,F1$
L_550: Next J
!If Err 0 Gosub ERR_ESCAPE
Data "2400","1792","2288","1808","1952","1104","1840","1856","1872","1888"
Data "2128","2112","1824","2176","2528","2320","1680","1376","1744","1632","-1","1920","-688","768"
let statchan=88
Try
	print #statchan;"Processing Future Orders "
else
	rem
end try
L_650: Search #8,3,1;K6$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E<>0
	Try
		print #statchan;"Future Orders Process Completed. "
	else
		rem
	end try
	Goto OUTEND
endif
Mat Read #8,R8,0;H0;
Mat Read #8,R8,104;H5;
If H0[0] > 4
	Try
		print #statchan;"Future Orders Process Completed. "
	else
		rem
	end try
	Goto OUTEND
endif
If H5[7] <> 5 Goto L_650
If Not(H5[10]) Goto L_650
X2 = H5[10] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
!X2 = D5 \ Gosub L_8500
if custom_customer$="ACME"
	LET D$=TIM(8) USING "&&",TIM(9) USING "&&",TIM(10) USING "&&"
	LET X2=D$ \ GOSUB l_7820:\ let x2=0!L_8500: ! "base on system date
	jsdate=x2
	LET VDATE=jsdate+1;STAT=0;WARN=0;PARAM[0]=1;PARAM[1]=1
	CALL "validdate",VDATE,STAT,WARN,PARAM[]                
	if vdate let jsdate=VDATE 
else
	LET X2=D5 \ GOSUB L_8500: ! "base on system date
endif

If JWDATE <= JSDATE Gosub L_3000
Goto L_650
L_3000: Rem "================================== do it
J1 = 1
Call "MX013F3.DL4", IntCo,rstr$,Message$,eof,r8,h5[],j1 
!Swap 1,"MX013F3.dl4"
!Chain Write R8,H5,J1
H5[7] = 1
if custom_customer$="ACME" h0[10]=h5[10]
H5[10] = 0
If P9$[45,45] = "Y" Let H0[0] = 2 Else Let H0[0] = 1
Mat Write #8,R8,0;H0;
Mat Write #8,R8,104;H5;
Search #8,5,1;K6$,R8,E \ If E Gosub ERR_SEARCH
K5$ = K6$
K5$[1,2] = H0[0] Using "##"
Search #8,4,1;K5$,R8,E \ If E Gosub ERR_SEARCH
Call "MX013F2.DL4", IntCo,rstr$,Message$,eof,r8
!Swap 1,"MX013F2.dl4"
!Chain Write R8
K5$ = " ",K5$
K5$[1,2] = 5 Using "##"
K5$[3,8] = H0[7] Using "######"
Search #25,4,1;K5$,R8,E \ If E Gosub ERR_SEARCH
Return 
L_7650: Rem GET JULIAN DATE
SCRATCH$ = "" \ Call Time(SCRATCH$)
SCRATCH$[13] = "" \ Call VerifyDate(SCRATCH$,X$,E) \ If E Gosub ERR_SEARCH
D5 = X$
Call DateToJulian(1,X$,X$,E) \ If E Gosub ERR_SEARCH
X2 = X$[1,5]
JSDATE = X2
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8500: Rem ZONE
Gosub L_7700
L_8520: X9 = 0 \ J9$ = X$[1,2],X$[4,5],X$[7,8]
J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
If J9[2] < 85 Let J9[2] = J9[2] + 100
X = J9[0] + 1 \ X1 = Int(1 / X + .7) \ X2 = J9[2] - X1 \ X3 = X + 12 * X1
X1 = Int(X3 * 30.6001) + Int(X2 * 365.25) + J9[1] \ X3 = X1 - 7 * (Int(X1 / 7))
J9[2] = J9$[5,6]
If X3 > 4 Let D0 = 8 - X3
J9[1] = J9[1] + D0 \ D0 = 0
On J9 Goto L_8630,L_8650,L_8630,L_8620,L_8630,L_8620
On J9 - 6 Goto L_8630,L_8630,L_8620,L_8630,L_8620,L_8630
If J9 > 12 Let J9 = J9 - 12 \ J9[2] = J9[2] + 1 \ X9 = 1 \ Goto L_8680
L_8620: If J9[1] > 30 Let J9[1] = J9[1] - 30 \ J9 = J9 + 1 \ X9 = 1
L_8630: If J9[1] > 31 Let J9[1] = J9[1] - 31 \ J9 = J9 + 1 \ X9 = 1
Goto L_8680
L_8650: If J9[1] > 29 Let J9[1] = J9[1] - 29 \ J9 = J9 + 1 \ X9 = 1
If Not(Fra(J9[2] / 4)) Goto L_8680
If J9[1] > 28 Let J9[1] = J9[1] - 28 \ J9 = J9 + 1 \ X9 = 1
L_8680: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
If X9 Goto L_8520
D5 = X2
X2 = D5 \ Gosub L_7820 \ X2 = 0
If X2 Let JSDATE = X2 Else Gosub L_7650
Return 

 ERR_SEARCH: Rem                                           
 ENUM = E;ELINE = Spc(16);CTERR = 0                        
 If E = 5 Let CTERR = Err(8)                               
 e$ = "RETURN STATUS",(E + (CTERR * .001))                 
 e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4) 
 Try
	print #statchan;e$
else
	rem
end try
 Goto ERR_MSG ! Error 10000                                
 Return ! End                                              
 ERR_MSG: ! send message                                   
 ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)  
 if e=0
	ENUM = E;ELINE = Spc(16);CTERR = spc(8)                       	                              
	e$ = "Error",(E + (CTERR * .001))                 
	e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)
	Try
		print #statchan;e$
	else
		rem
	end try
 endif	
 Let message$=message$+" Dayend Not Completed. "                                         
 !Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)    
! Call AddToStr(e$,rstr$,WebStr$)                           
! Call SetOutPut(e$,rstr$)                                  
 End                         

OUTEND: Rem M
!Chain ""
!End 
Else
include "src/callmainerrnet.inc"
end try
End ! the whole program