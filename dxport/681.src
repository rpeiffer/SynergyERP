! >>> Program 681
!
! description  I/F Inventory Report Summary
!
! loadsave -w -n 100,10 -o prog/dxport/681.dl4 src/681.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 14, 2003  10:18:32
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx681.src (univ2) [jcs] {60399}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem MX681          Inventory Master File Report (summary)
Rem Author:        Dave   (08/10/1987)
Rem                UNIVERSAL BUSINESS SYSTEMS
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,COST_LEV[3],COMM_LEV
Com 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],BASEX,FIELD,2%,C4[10]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim tmp$[1800],tmp1$[1800],tmp2$[1000]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="}",EndParam$
!
Dim 1%,F,X0,LM[1],CSTGRP,2%,X2,V9[4],RCTR
dim 1%,PM5[5,4],3%,PRPARC[3],PF_Load2
Dim 2%,B[24]
Dim 3%,A1[7],PREC[1],Z1[10],J,J1,AMOUNT
Dim J$[40],CNAME$[30],ARDATE$[8],U9$[132],DFLTUM$[24],REFUM$[16],CCD$[14]
Dim K0$[50],K1$[50],K2$[12],K3$[12],K4$[4],K5$[4],K6$[1],K7$[1],KF8$[50]
Dim K8$[15],K9$[15],K10$[1],K11$[1],K12$[1],A$[156],D$[35]
Dim X$[20],TIME$[22],Z1$[25],COMMBRK$[4],CST$[10],P9$[50]
U9$ = "-",U9$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
LET COID=INTCo
For J = 2 To 8
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","1728","2784","1744","1696","2288","2352"
Let J$="2/SPRICEMARK"+Str$(COID)
ROpen #10,j$
Read #1,3;CNAME$;
Mat Read #1,19,50;P9$;
Read #1,0,100;ARDATE$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[4] = Chf(0) 
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[4] = 55 \ If J8 Let V9[4] = 18
CST$ = "AVE/LST/WH"
!dci2
COST_LEV[0] = 1
COST_LEV[1] = 1
COST_LEV[2] = 1
!
If Not(COST_LEV[0]) Let CST$[1,3] = "    "
If Not(COST_LEV[1]) Let CST$[9,10] = "  "
If Not(COST_LEV[2]) Let CST$[5,7] = "   "
L_900: Rem "=================================== get ranges
! - Gosub L_7500
! - L_904: Print @61,5;'CL'; \ Gosub L_7000 \ If Z1$ = "E" Goto OUTEND
! - If Z1$ = "D" Chain "MX681A"
! - If Z1$ = "S" Goto L_912
! - If Z1$ = "L" Chain "MX681B"
! - Goto L_904
!
! dx add xport reporting code
DXSetup:
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"681",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("begprod",K2$) \ K2$=UCase$(K2$),Blank$ ! Starting Product
call dxget("endprod",K3$) \ K3$=UCase$(K3$),EndParam$ ! Ending Product
call dxget("begcomm",K4$) \ K4$=UCase$(K4$),Blank$ ! Starting Commodity
call dxget("endcomm",K5$) \ K5$=UCase$(K5$),EndParam$ ! Ending Commodity
call dxget("begmat",K6$) \ K6$=UCase$(K6$),Blank$ ! Starting Material Code
call dxget("endmat",K7$) \ K7$=UCase$(K7$),EndParam$ ! Ending Material Code
call dxget("begdesc",K8$) \ K8$=K8$,Blank$ ! Starting Description Code
call dxget("enddesc",K9$) \ K9$=K9$,EndParam$ ! Ending Description Code
call dxget("makebuy",K10$) ! Report for  1=make  2=buy  3=both
call dxget("sort",K11$) ! Sort by  1=product  2=commodity  3=material  4=description
call dxget("sortcomm",tmp$) \ if tmp$="" let COMM_DIGIT=4 else COMM_DIGIT=tmp$ ! # of Chars to sort commodity
call dxget("altprod",tmp$) \ if tmp$="" let ALTF=0 else ALTF=1 ! Print all alt prod codes


!  dx end
!
! starting & ending customer
if K3$<K2$ let e$="Invalid ending product, must be >= starting product!" \ error 10000
!
! starting & ending commodity
if K5$<K4$ let e$="Invalid ending commodity, must be >= starting commodity!" \ error 10000
!
! starting & ending material code
if K7$<K6$ let e$="Invalid ending material code, must be >= starting material code!" \ error 10000
!
! starting & ending description code
if K9$<K8$ let e$="Invalid ending description code, must be >= starting description code!" \ error 10000
!
! digits to sort commodity code by
if K11$="2" ! sort by commodity
  if COMM_DIGIT<1 or COMM_DIGIT>4 let e$="Invalid number of digits to sort commodity code by!" \ error 10000
else
  COMM_DIGIT=0
endif

! - L_912: Print @1,5;'CL' \ Gosub L_7520
! - L_914: Print @63,3;'CL'; \ Gosub L_7000 \ K2$ = Z1$ \ If K2$ = "E" Goto OUTEND
! - Print @63,4;'CL'; \ Gosub L_7000 \ K3$ = Z1$ \ If K3$ = "E" Goto OUTEND
! - If K2$ = "" Let K2$ = " "
! - If K3$ = "" Let K3$ = "}}}}}}}}}}}}"
! - If K3$ < K2$ Gosub L_985 \ Goto L_914
! - L_922: Print @63,6;'CL'; \ Gosub L_7000 \ K4$ = Z1$ \ If K4$ = "E" Goto OUTEND
! - Print @63,7;'CL'; \ Gosub L_7000 \ K5$ = Z1$ \ If K5$ = "E" Goto OUTEND
! - If K4$ = "" Let K4$ = " "
! - If K5$ = "" Let K5$ = "}}}}"
! - If K5$ < K4$ Gosub L_985 \ Goto L_922
! - L_930: Print @63,9;'CL'; \ Gosub L_7000 \ K6$ = Z1$ \ If K6$ = "E" Goto OUTEND
! - Print @63,10;'CL'; \ Gosub L_7000 \ K7$ = Z1$ \ If K7$ = "E" Goto OUTEND
! - If K7$ = "" Let K7$ = "}"
! - If K7$ < K6$ Gosub L_985 \ Goto L_930
! - L_938: Print @63,12;'CL'; \ Gosub L_7000 \ K8$ = Z1$ \ If K8$ = "E" Goto OUTEND
! - Print @63,13;'CL'; \ Gosub L_7000 \ K9$ = Z1$ \ If K9$ = "E" Goto OUTEND
! - If K8$ = "" Let K8$ = " "
! - If K9$ = "" Let K9$ = "}}}}}}}}}}}}}}}"
! - If K9$ < K8$ Gosub L_985 \ Goto L_938
! - L_946: Print @18,18;"   "; \ Input @18,18;""K10$
! - If K10$ = "1" Or K10$ = "2" Or K10$ = "3" Goto L_952
! - Goto L_946
! - L_952: Print @49,19;"   "; \ Input @49,19;""K11$
! - If K11$ = "1" Or K11$ = "2" Or K11$ = "3" Or K11$ = "4" Goto L_958
! - Goto L_952
! - L_958: If K11$ <> "2" Goto L_966
! - L_960: Input @10,20;"DIGITS TO SORT COMMODITY CODE BY, <CR> FOR FOUR(4): "Z1$
! - COMM_DIGIT = Z1$ \ If Z1$ = "" Let COMM_DIGIT = 4
! - If COMM_DIGIT < 1 Or COMM_DIGIT > 4 Goto L_960
! - L_966: Rem "all inputs OK
! - L_968: Print @10,21;'CL';"PRINT ALL ALTERNATE ITEM CODES? (Y/N)   ";
! - Input ""Z1$ \ If Z1$ <> "Y" If Z1$ <> "N" Goto L_968
! - ALTF = 0
! - If Z1$ = "Y" Let ALTF = 1
! - Goto L_990
! - L_985: Print @0,22;"ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! ";'RB CE'; \ Signal 3,50 \ Print @0,22;'CL' \ Return 
! - L_990: Print @10,22;'CL'; \ Input "CHOOSE  P: Print,  R: Reselect,  E: Exit "Z1$ \ If Z1$ = "E" Goto OUTEND
! - If Z1$ = "R" Goto L_900
! - If Z1$ <> "P" Goto L_990
! - If K11$ = K12$ Goto L_2000
!
! Sort Section
if J8
  tmp$ = "ITEM CODE" ,fdel$
  tmp$ = tmp$ ,"DESCRIPTION 1" ,fdel$
  tmp$ = tmp$ ,"DESCRIPTION 2" ,fdel$
  tmp$ =tmp$ ,"VENDOR" ,fdel$
  tmp$ = tmp$ ,"VENDOR ITEM NUMBER",fdel$
  tmp$ = tmp$ ,"COMM",fdel$
  tmp$ =tmp$ ,"MTRL" ,fdel$
  tmp$ =tmp$ ,"M/B" ,fdel$
  tmp$ =tmp$ ,"DEFAULT UM STOCK" ,fdel$
  tmp$ =tmp$ ,"DEFAULT UM SELL" ,fdel$
  tmp$ =tmp$ ,"DEFAULT UM PURCH" ,fdel$
  tmp$ =tmp$ ,"DEFAULT UM COST" ,fdel$
  tmp$ =tmp$ ,"DEFAULT UM PRICE" ,fdel$
  tmp$ =tmp$ ,"DEFAULT UM PRDCTN" ,fdel$
  tmp$ =tmp$ ,"REFERENCE UP CHG" ,fdel$
  tmp$ =tmp$ ,"REFERENCE BKN QTY" ,fdel$
  tmp$ =tmp$ ,"REFERENCE PACKING" ,fdel$
  tmp$ =tmp$ ,"REFERENCE SIZE" ,fdel$
  tmp$ =tmp$ ,"CATCH WGT" ,fdel$
  tmp$ =tmp$ ,"COST GROUP" ,fdel$
  tmp$ =tmp$ ,"BREAK" ,fdel$
  tmp$ =tmp$ ,"CAT" ,fdel$
  If COST_LEV[0] let tmp$ =tmp$ ,"COST AVE" ,fdel$
  If COST_LEV[2] let tmp$ =tmp$ ,"COST LST" ,fdel$
  If COST_LEV[1] let tmp$ =tmp$ ,"COST WH" ,fdel$
  tmp$ =tmp$ ,"PRICE 1" ,fdel$
  tmp$ =tmp$ ,"PRICE 2" ,fdel$
  tmp$ =tmp$ ,"PRICE 3" ,fdel$
  tmp$ =tmp$ ,"PRICE 4" ,fdel$
  tmp$ =tmp$ ,"PRICE 5" ,fdel$
  tmp$ =tmp$ ,"PRICE 6" ,fdel$ 
  tmp$ =tmp$ ,"LAST SOLD" ,fdel$
  tmp$ =tmp$ ,"LAST USED" ,fdel$
  if ALTF  let tmp$ =tmp$ ,"ALT ITEMS" ,fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
K12$ = K11$
! - Print @0,22;"Sorting...please wait";'CE'; \ Signal 3,0
K0$ = ""
L_1070: 
Search #9,3,1;K0$,R1,E 
If E Goto L_1500
Search #9,5,1;K0$,R1,E 
If E Let e$ = "syserrorfile 681 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K0$ \ error 10000
Goto L_1070
!
L_1500: Rem "start sort
K0$ = " "
L_1530: 
Search #2,3,1;K0$,R1,E
If E Goto L_2000
Mat Read #2,R1;A$;
K1$ = " ",K1$
If K11$ = "1" Let K1$[1,15] = A$[140,151]
If K11$ = "2" Let K1$[1,15] = A$[152,155]
If K11$ = "3" Let K1$[1,15] = A$[156,156]
If K11$ = "4" Let K1$[1,15] = A$[9,38]
K1$[16] = A$[140,151]
Search #9,4,1;K1$,R1,E
If E 
	if E=1 Goto L_1530
	Let e$ = "syserrorfile 681 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K1$ \ error 10000
endif
Goto L_1530
!
L_2000: Rem "================================= start print
! If Not(J8) If V9[0] Print #0;"\14\"
! - Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
V9[1] = 100 \ V9[0] = 0 \ RCTR = 0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
If K11$ = "1" Let K1$ = K2$
If K11$ = "2" Let K1$ = K4$
If K11$ = "3" Let K1$ = K6$
If K11$ = "4" Let K1$ = K8$
L_2090: 
Search #9,3,1;K1$,R1,E
If E = 2 Goto OUTEND
If K11$ = "1" If Len(K3$) < 12 Let K3$[Len(K3$) + 1] = "    "
If K11$ = "1" If K1$[1,Len(K3$)] > K3$ Goto OUTEND
If K11$ = "2" If K1$[1,Len(K5$)] > K5$ Goto OUTEND
If K11$ = "3" If K1$[1,Len(K7$)] > K7$ Goto OUTEND
If K11$ = "4" If K1$[1,Len(K9$)] > K9$ Goto OUTEnD
Mat Read #2,R1,0;A$;
If K10$ = "3" Goto L_2200
If K10$ = "1" And A$[139,139] <> "M" Goto L_2090
If K10$ = "2" And A$[139,139] <> "B" Goto L_2090
L_2200: Rem "now check all the other pick parameters
If Len(K2$) If A$[140,139 + Len(K2$)] < K2$ Goto L_2090
If A$[140,139 + Len(K3$)] > K3$ Goto L_2090
If A$[152,151 + Len(K4$)] < K4$ Goto L_2090
If A$[152,151 + Len(K5$)] > K5$ Goto L_2090
If A$[156,156] < K6$ Goto L_2090
If A$[156,156] > K7$ Goto L_2090
If A$[9,8 + Len(K8$)] < K8$ Goto L_2090
If A$[9,8 + Len(K9$)] > K9$ Goto L_2090
KF8$ = " ",KF8$;KF8$ = A$[140,151]
Mat Read #2,R1,156;B;
Mat Read #2,R1,256;A;
Mat Read #2,R1,460;A1;
Mat Read #2,R1,512;PFU1;
mat read #2,r1,596;prparc;
Mat Read #2,R1,620;LM; \ PREC[0] = R1
Mat Read #2,R1,554;PFU2;
Mat Read #2,R1,894;C4;
mat read #2,r1,938;pf_load2;
BASEX = C4[4] \ Gosub L_8000
If A$[127,127] <> "Y" Let A$[127,127] = "N"
DFLTUM$ = " ",DFLTUM$ \ REFUM$ = " ",REFUM$
! - if err 0 rem
If PFU1[8] = -1 Let DFLTUM$[1,4] = "CWT" \ Goto L_2375
If PFU1[8] = -3 Let DFLTUM$[1,4] = "LB  " \ Goto L_2375
try Read #3,PFU1[8];CCD$; else rem
DFLTUM$[1,4] = CCD$[11,14]
L_2375: 
If PFU1[9] = -1 Let DFLTUM$[5,8] = "CWT" \ Goto L_2385
If PFU1[9] = -3 Let DFLTUM$[5,8] = "LB  " \ Goto L_2385
try Read #3,PFU1[9];CCD$; else rem
DFLTUM$[5,8] = CCD$[11,14]
L_2385: 
If PFU1[10] = -1 Let DFLTUM$[9,12] = "CWT" \ Goto L_2395
If PFU1[10] = -3 Let DFLTUM$[9,12] = "LB  " \ Goto L_2395
try Read #3,PFU1[10];CCD$; else rem
DFLTUM$[9,12] = CCD$[11,14]
L_2395: 
If PFU1[11] = -1 Let DFLTUM$[13,16] = "CWT" \ Goto L_2405
If PFU1[11] = -3 Let DFLTUM$[13,16] = "LB  " \ Goto L_2405
try Read #3,PFU1[11];CCD$; else rem
DFLTUM$[13,16] = CCD$[11,14]
L_2405: 
If PFU1[12] = -1 Let DFLTUM$[17,20] = "CWT" \ Goto L_2415
If PFU1[12] = -3 Let DFLTUM$[17,20] = "LB  " \ Goto L_2415
try Read #3,PFU1[12];CCD$; else rem
DFLTUM$[17,20] = CCD$[11,14]
L_2415: 
If PFU1[13] = -1 Let DFLTUM$[21,24] = "CWT" \ Goto L_2425
If PFU1[13] = -3 Let DFLTUM$[21,24] = "LB  " \ Goto L_2425
If PFU1[13] try Read #3,PFU1[13];CCD$; else rem
DFLTUM$[21,24] = CCD$[11,14]
L_2425: 
If PFU1[16] = -1 Let REFUM$[1,4] = "CWT" \ Goto L_2435
If PFU1[16] = -3 Let REFUM$[1,4] = "LB  " \ Goto L_2435
If PFU1[16] > 0 try Read #3,PFU1[16];CCD$; else rem
REFUM$[1,4] = CCD$[11,14]
L_2435: 
If PFU1[17] = -1 Let REFUM$[5,8] = "CWT" \ Goto L_2445
If PFU1[17] = -3 Let REFUM$[5,8] = "LB  " \ Goto L_2445
If PFU1[17] > 0 try Read #3,PFU1[17];CCD$; else rem
REFUM$[5,8] = CCD$[11,14]
L_2445: 
If PFU1[18] = -1 Let REFUM$[9,12] = "CWT" \ Goto L_2455
If PFU1[18] = -3 Let REFUM$[9,12] = "LB  " \ Goto L_2455
If PFU1[18] > 0 try Read #3,PFU1[18];CCD$; else rem
REFUM$[9,12] = CCD$[11,14]
L_2455: 
If PFU1[19] = -1 Let REFUM$[13,16] = "CWT" \ Goto L_2460
If PFU1[19] = -3 Let REFUM$[13,16] = "LB  " \ Goto L_2460
If PFU1[19] > 0 try Read #3,PFU1[19];CCD$; else rem
REFUM$[13,16] = CCD$[11,14]
L_2460: 
! - If Err 0 Gosub ERR_ESCAPE
If K11$ = "2"
  If COMMBRK$ <> "" And COMMBRK$[1,COMM_DIGIT] <> A$[152,151 + COMM_DIGIT] Let V9[1] = 100
End If 
If V9[1] > V9[4] Gosub L_5800
Gosub L_3500
Gosub L_5000
If K11$ = "2" Let COMMBRK$ = A$[152,155]
Goto L_2090
!
L_3500: Rem "========================================== convert to display values
Z1[0] = B[21] \ Z1[1] = B[8] \ Z1[2] = B[10] \ Z1[3] = C4[4]
For X0 = 4 To 9 \ Z1[X0] = A[X0 + 16] \ Next X0
For X0 = 0 To 9
  CNVTA = Z1[X0] \ CNVTU[0] = 0
  If X0 < 4 Let CNVTU[1] = PFU1[11] Else Let CNVTU[1] = PFU1[12]
  CNVTU[2] = 2
  Gosub L_20000
  Z1[X0] = AMOUNT
Next X0
B[21] = Z1[0] \ B[8] = Z1[1] \ B[10] = Z1[2] \ C4[4] = Z1[3]
For X0 = 4 To 9 \ A[X0 + 16] = Z1[X0] \ Next X0
Return 
!
L_3800: Rem GET ALL ALT ITEMS
DONE = 0
L_3810: 
Search #8,3,2;KF8$,R8,E 
If E = 2 Let DONE = 9
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
L_4000: Rem "================================ sort break
If Not(J8) Print #0;"\14\";
Return 
!
L_5000: Rem "================================ print item detail line
if J8
  tmp1$ = A$[140,151],fdel$ ! item code
  tmp1$ = tmp1$ ,A$[9,38] ,fdel$ ! description 1
  tmp1$ = tmp1$ ,A$[63,92] ,fdel$ ! description 2
  tmp1$ = tmp1$ ,B[24] Using "######", fdel$ !vendor 
  tmp1$ = tmp1$ ,A$[93,112] ,fdel$ !vendor item number
  tmp1$ = tmp1$ ,A$[152,155] ,fdel$ ! comm
  tmp1$ = tmp1$ ,A$[156,156] ,fdel$ !MTRL
  tmp1$ = tmp1$ ,A$[139,139] ,fdel$ !M/B
  tmp1$ = tmp1$ ,DFLTUM$[1,4],fdel$ !default um stock
  tmp1$ = tmp1$ ,DFLTUM$[5,8] ,fdel$ !default um sell
  tmp1$ = tmp1$ ,DFLTUM$[9,12] ,fdel$ !default um purch
  tmp1$ = tmp1$ ,DFLTUM$[13,16] ,fdel$ !default um cost
  tmp1$ = tmp1$ ,DFLTUM$[17,20],fdel$ !default um price
  tmp1$ = tmp1$ ,DFLTUM$[21,24] ,fdel$ !default um prdctn
  tmp1$ = tmp1$ ,REFUM$[1,4] ,fdel$ !REFERENCE up chg
  tmp1$ = tmp1$ ,REFUM$[5,8] ,fdel$ !REFERENCE bkn qty
  tmp1$ = tmp1$ ,REFUM$[9,12] ,fdel$ !REFERENCE packing
  tmp1$ = tmp1$ ,REFUM$[13,16] ,fdel$ !REFERENCE size
  tmp1$ = tmp1$ ,A$[127,127] ,fdel$ !catch wgt 
  tmp1$ = tmp1$ ,A$[116,126] ,fdel$ ! cost group 
  tmp1$ = tmp1$ ,B[22] Using "####",fdel$ ! break
  tmp1$ = tmp1$ ,B[11] Using "####",fdel$ ! cat 
  If COST_LEV[0] let tmp1$ = tmp1$ ,B[21] Using "#####.##### ", fdel$ !cost ave
  If COST_LEV[2] let tmp1$ = tmp1$ ,B[10] Using "#####.##### ", fdel$ !cost lst
  If COST_LEV[1] let tmp1$ = tmp1$ ,B[8] Using "#####.##### ", fdel$ !cost wh
  tmp1$ = tmp1$ ,A[20] Using "######.#####", fdel$ !price 1
  tmp1$ = tmp1$ ,A[21] Using "######.#####", fdel$ !price 2
  tmp1$ = tmp1$ ,A[22] Using "######.#####", fdel$ !price 3
  tmp1$ = tmp1$ ,A[23] Using "######.#####", fdel$ !price 4
  tmp1$ = tmp1$ ,A[24] Using "######.#####", fdel$ !price 5
  tmp1$ = tmp1$ ,A[25] Using "######.#####", fdel$ !price 6
  X2 = B[12] \ Gosub L_7700
  tmp1$ = tmp1$ ,X$ ,fdel$ !!last sold"
  X2 = B[13] \ Gosub L_7700
  tmp1$ = tmp1$ ,X$ ,fdel$ !!last used"
Else
  Print #0; Tab 1;A$[140,151]; Tab 14;A$[9,38]; Tab 45;A$[39,50];  !item code ,description ,yyy!!!!!
  Print #0; Tab 58;A$[152,155]; Tab 63;"stock"; Tab 70;DFLTUM$[1,4];  !!comm ,stock
  Print #0; Tab 75;"up chg"; Tab 83;REFUM$[1,4];
  Print #0; Tab 88;B[22]; !!break
  If COST_LEV[0] Print #0; Using "#####.##### "; Tab 95;B[21]; !!cost av
  Print #0; Using "######.##### ######.#####"; Tab 107;A[20];A[24] !Price 1 ,5
  Print #0; Tab 14;A$[63,92]; Tab 45;A$[51,62]; Tab 58;A$[156,156]; Tab 63;"sell"; Tab 70;DFLTUM$[5,8]; Tab 75;"bkn qty"; Tab 83;REFUM$[5,8];! description 2 ,xxx ,mtrl ,sel ,bkn qty!!!!dci2
  Print #0; Tab 88;B[11]; ! cat 
  If COST_LEV[2] Print #0; Using "#####.##### "; Tab 95;B[10]; !cost lst
  Print #0; Using "######.##### ######.#####"; Tab 107;A[21];A[25] !Price 2 ,6
  Print #0; Tab 1;A$[93,112]; !vendor item number
End if
if J8
  If ALTF
    tmp2$ = trim$(A$[39,50])
    Gosub L_3800
	If Not(DONE)
	  If tmp2$ Let tmp2$ = tmp2$,", "
	  tmp2$ = tmp2$,"  ",rtrim$(KF8$[13,36]) ! alt items
	End if
  End if
else
  If ALTF Gosub L_3800
  If ALTF If Not(DONE) Print #0; Tab 32;KF8$[13,36]; ! alt items
End if
If not(J8)
  Print #0; Tab 58;A$[139,139]; Tab 63;"purch"; Tab 70;DFLTUM$[9,12]; ! M/B ,purch
  Print #0; Tab 75;"packing"; Tab 83;REFUM$[9,12]; Tab 88;B[24]; !packing ,vendor
  If COST_LEV[1] Print #0; Using "#####.##### "; Tab 95;B[8];  !cost wh
  Print #0; Using "######.#####"; Tab 107;A[22] !price 3
  X2 = B[12] \ Gosub L_7700
  Print #0; Tab 5;"last sold"; Tab 15;X$;
End if
if J8
  If ALTF
    Gosub L_3810
	If Not(DONE) tmp2$ = tmp2$ ,", ",rtrim$(KF8$[13,36])  ! alt items
  End if
else
  If ALTF Gosub L_3810
  If ALTF If Not(DONE) Print #0; Tab 32;KF8$[13,36]; ! alt items
End if
If not(J8)
  Print #0; Tab 63;"cost"; Tab 70;DFLTUM$[13,16]; Tab 75;"size"; Tab 83;REFUM$[13,16];
  Print #0; Using "######.#####"; Tab 107;A[23] !!Price 4
  X2 = B[13] \ Gosub L_7700
  Print #0; Tab 5;"last used"; Tab 15;X$;
End if
If J8
  If ALTF
    Gosub L_3810
    If Not(DONE) tmp2$ = tmp2$ ,", ",rtrim$(KF8$[13,36])  ! alt items
  End if
else
  If ALTF Gosub L_3810
  If ALTF If Not(DONE) Print #0; Tab 32;KF8$[13,36]; ! alt items
end if
If not(j8)
  Print #0; Tab 63;"price"; Tab 70;DFLTUM$[17,20];
  Print #0; Tab 75;"catch wgt ";A$[127,127];
  Print #0; Using "###.##%"; Tab 97;B[17] !commission
  If ALTF Gosub L_3810
  If ALTF If Not(DONE) Print #0; Tab 32;KF8$[13,36]; ! alt items
  Print #0; Tab 63;"prdctn"; Tab 70;DFLTUM$[21,24];
  Print #0; Tab 83;"cost group ";A$[116,126]
End if !!
If Not(ALTF) Goto L_5300
L_5255: 
if J8
  If Not(DONE) If ALTF Gosub L_3810
  If ALTF 
    If Not(DONE) tmp2$ = tmp2$ ,", ",rtrim$(KF8$[13,36]) 
    If Not(DONE) Goto L_5255
  End if
Else
  If Not(DONE) If (V9[1] + 6) > V9[4] Gosub L_5800
  If Not(DONE) If ALTF Gosub L_3810
  If ALTF If Not(DONE) Print #0; Tab 32;KF8$[13,36] \ V9[1] = V9[1] + 1
  If ALTF If Not(DONE) Goto L_5255
End if
L_5300:
if J8
  If ALTF 
    tmp2$ = tmp2$,fdel$
	tmp$ = tmp1$ ,rtrim$(tmp2$) 
  else
    tmp$ = tmp1$
  End if
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  Print #0; Tab 0;U9$
End if
V9[1] = V9[1] + 7
RCTR = RCTR + 1
Return 
!
L_5800: Rem "============================================ headings
! - If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 8
If Not(J8) Print #0;"\12\";
TIME$ = "" \ Call Time(TIME$)
if not(J8)
  Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE:";V9[0]
  Print #0;" - 681 - ";TIME$;
  Print #0; Tab 44;"I N V E N T O R Y   F I L E   L I S T I N G"
  Print #0; Tab 55;"SORTED BY ";
  If K11$ = "1" Print #0;"ITEM CODE"
  If K11$ = "2" Print #0;"COMMODITY CODE"
  If K11$ = "3" Print #0;"MATERIAL CODE"
  If K11$ = "4" Print #0;"DESCRIPTION"
  Print #0;""
  Print #0; Tab 1;"ITEM CODE"; Tab 14;"DESCRIPTION 1 & 2"; Tab 45;"ALT ITEMS";
  Print #0; Tab 58;"COMM"; Tab 64;"DEFAULT";
  Print #0; Tab 76;"REFERENCE"; Tab 88;"BREAK"; Tab 96;"C O S T S";
  Print #0; Tab 114;"P R I C E S"
  Print #0; Tab 1;"VENDOR ITEM #"; Tab 58;"MTRL"; Tab 66;"UM'S"; Tab 79;"UM'S";
  Print #0; Tab 88;"CAT"; Tab 96;CST$[1,10]; Tab 111;"1-4"; Tab 124;"5-6"
  Print #0; Tab 58;"M/B"; Tab 88;"VENDOR"; Tab 96;"COMMISSION"
  Print #0;"  "
End if
If K11$ <> "2" Goto L_5990
Z1$ = A$[152,155]
D$[1,16] = "COMM NOT FOUND"
Search #7,2,1;Z1$,R7,E 
If E Goto L_5940
Read #7,R7,0;D$;
L_5940:
if not(J8)  Print #0; Tab 10;D$[1,16]!!!
if not(j8) Print #0;" "
V9[1] = V9[1] + 2
L_5990: Return 
!
! - L_7000: Rem "=========================================== data input routine
! - Input ""Z1$
! - Return 
! - L_7500: Rem "========================================== screen
! - Print 'CS'
! - Print @0,0;"MX681";@33,0;"INVENTORY REPORT"
! - Print @1,5;"Do you want  D: Detail,  S: Summary or  L: Labels?  E: Exit "
! - Return 
! - L_7520: Print @8,3;"ENTER STARTING ITEM CODE, <CR> FOR FIRST,  E: TO EXIT: "
! - Print @16,4;"ENDING ITEM CODE, <CR> FOR LAST,   E: TO EXIT: "
! - Print @3,6;"ENTER STARTING COMMODITY CODE, <CR> FOR FIRST,  E: TO EXIT: "
! - Print @11,7;"ENDING COMMODITY CODE, <CR> FOR LAST,   E: TO EXIT: "
! - Print @4,9;"ENTER STARTING MATERIAL CODE, <CR> FOR FIRST,  E: TO EXIT: "
! - Print @12,10;"ENDING MATERIAL CODE, <CR> FOR LAST,   E: TO EXIT: "
! - Print @1,12;"ENTER STARTING DESCRIPTION CODE, <CR> FOR FIRST,  E: TO EXIT: "
! - Print @9,13;"ENDING DESCRIPTION CODE, <CR> FOR LAST,   E: TO EXIT: "
! - Print @10,15;"CHOOSE:  1> MAKE ITEM";@40,15;"SORT BY:  1> ITEM CODE"
! - Print @18,16;" 2> BUY ITEM";@49,16;" 2> COMMODITY CODE"
! - Print @18,17;" 3> BOTH";@49,17;" 3> MATERIAL CODE"
! - Print @49,18;" 4> DESCRIPTION"
! - Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem MARK UP CALC
Gosub L_12400
If C4[2] = 1 And C4[3] > 0 Goto L_8030
Goto L_8100
L_8030: ! "calc lp 1-6
Mat read #10,c4[3],18;pm5;
FOR FIELD=1 TO 6
	let basex=c4[4] ! "base cost
	if pm5[field-1,4]=1 Let basex=b[10]
	If pm5[field-1,4]=2 let basex=b[8]
	if pm5[field-1,4]=3 let basex=pf_load2
	if pm5[field-1,4]=4 let basex=b[21]
	if pm5[field-1,4]=5 let basex=prparc[2]
	GOSUB L_19000:
	! X4 RETURNED

	LET A[19+FIELD]=X4
Next FIELD
L_8100: Return 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
! 
! - L_9100: Rem END OF THIS RANGE
! - If RCTR Gosub L_4000
! - print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
! - Goto L_900
! 
L_12400: Rem CALC LOADS FROM LOAD MARKUP
If P9$[32,32] = "Y" And WHSE = 299 ! "so doesn't happen
  If WHLM[0]
    WH = WHSE;LTBL = WHLM[0];CNVTA = 0
    Gosub L_12610 \ W3[17] = CNVTA
  End If 
  If WHLM[1]
    WH = WHSE;LTBL = WHLM[1];CNVTA = 0
    Gosub L_12610 \ W3[14] = CNVTA
  End If 
Else 
  If LM[0]
    WH = 0;LTBL = LM[0];CNVTA = 0
    Gosub L_12610 \ B[8] = CNVTA
  End If 
  If LM[1] !   = -1000 ! ??
    WH = 0;LTBL = LM[1];CNVTA = 0
    Gosub L_12610 \ PF_LOAD2 = CNVTA
  End If 
End If 
Return 
!
L_12610: Rem CALL
OTYPE = 1
Call "MXLOAD5.dl4",OTYPE,WH,LTBL,PREC[],CNVTA,intCO,e$,rstr$
Return 
!
L_19000: Rem MATRIX PRICING, RETURNS X4
Call "MX671BRK5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,C4[],FIELD,BASEX,e$,rstr$
! - If FLAG Let E = FLAG ! - \ Gosub ERR_SEARCH
X4 = CNVTA
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
! - L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG ! - \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
