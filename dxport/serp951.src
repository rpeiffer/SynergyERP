! 1.0 12/02/2009 - initial conversion
!
! loadsave -w -n 100,10 -o prog/dxport/serp951.dl4 src/serp951.src
!
! From the original code:Rem BEDIT Version: 1.9 OBJECT CODE     Created: FEB 25, 2000  11:24:54
Rem /usr/acct/r97/src/mu951.s (univ2) [sms] {34132}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem     MU951  USERPORT FILE MAINTENANCE  V2.0
Rem     *************
Rem     GEORGE DOSCHER  12/85
!
!include copyright, common libs, common intrinsics
include "src/copyright.inc"
Declare External Sub CreateNetStatus
!
!
!
!include structure,filehandler libs & default structure dims
! include "src/inc/file?.inc"

!
! *declare additional dl4 intrinsic subs & functionsDeclare Intrinsic Sub InpBuf,String
Declare Intrinsic Sub InpBuf,String
Option Default Dialect IRIS1
!
! *declare additional external libs & subs & functions
External Lib "ubsfunc.dl4"
!Declare External Function openfile,pdate$,jdate$,Formatdate2$
Declare External Function openfile

dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
try
dim action$[30],action1$[30],action2$[30],options$[30],userid$[8],3%
dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1200] ! .net delimiters
dim tmp$[1000],tmp2$[1000],b$[200]
b$=" ",b$
dim message$[150],webstr$[200]
!
! call dxopen()
!
! call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)

Dim 1%,PD1[9],2%,PD2[19]
Dim 2%,D9[5]
Dim C2$[18],F$[16],PD$[50]
Dim CUST$[30],J$[40],U5$[20],U9$[20],X$[20]
DIM D$[24],PRINTER$[20]
Dim N1$[4],N2$[118],a$[30]

Mat Read #1,115,0;D9;
Open #2,"cntrl/USERPORT"
Open #3,"cntrl/CRTTYPE"
Open #4,"cntrl/PRTDFLT"
Read #1,88,1808;F$[1,16]; \ Open #5,F$
Open #6,"cntrl/CNTRL.LPT"
PD$ = " ",PD$
DIVC = OpenFile(-688, intCo) \ if DIVC<1 Error 42
ch_wh = openfile(-2768, intCO) \ if ch_wh<1 error 42
ch_bk = openfile(-1456, intCO) \ if ch_bk<1 error 42

if action1$ <> "GETLIST"
	call dxget("DefaultID", tmp$) \ tmp$ = rtrim$(tmp$)
	if tmp$ = ""
		e$ = "You must select or enter a valid user default #!"
		error 10000
	end if
	r2 = tmp$
	If R2 <= 0 OR R2 >= Chf(2)
		e$ = "User default # must be between 1 and "+str$(chf(2)-1)+"!"
		error 10000
	end if
	gosub ReadUserport
	gosub ReadPortdefault
end if


!
! main subroutine dispatcher
!
select case action1$
	case "GETLIST"
		gosub BuildDroplist
		! status section
		Message$=""
	case "GETDATA"
		gosub LoadData
		gosub BuildSupportingLists
		! status section
		Message$=""
	case "SUBMITDATA"
		gosub UnloadDataAndSave
		! status section
		Message$="Record updated."
	case "DELETE"
		gosub DeleteData
		! status section
		Message$="Record deleted."
	case else
		e$ = "Unknown action1: "+action1$ \ error 10000
endselect
! message should be set.  if we got here - we've got a good status
ReturnStatus=1
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call addToStr(e$,rstr$,webstr$)
goto OutEnd:


! ***********************************************************************
! Nobody but us subroutines and exit code down here
! ***********************************************************************

!----------------------------------------------------------------------------
! build initial drop list of existing port definitions
!----------------------------------------------------------------------------
BuildDroplist: !
	! add the header information
	tmp$=bsdel$+"DefaultDroplist"+fdel$+rdel$
	tmp$=tmp$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	! record 0 is not editable - so don't display it
	For R2 = 1 To Chf(2) - 1
		Gosub ReadUserport
		If C2$[1,1] > " "
			tmp$=str$(r2)+fdel$+str$(r2)+" - "+c2$+fdel$
			call addToStr(e$, rstr$, tmp$+rdel$)
		end if
	Next R2
	call addToStr(e$, rstr$, esdel$)
Return

!----------------------------------------------------------------------------
! GETDATA request
!----------------------------------------------------------------------------
LoadData: !
	! main table information
	tmp$=bsdel$+"TableData"+fdel$+rdel$
	tmp$=tmp$+"DefaultID"+fdel$+"Description"+fdel$+"OHDetail"+fdel$
	tmp$=tmp$+"EnteredBy"+fdel$+"Division"+fdel$+"Warehouse"+fdel$
	tmp$=tmp$+"CashDrawerPort"+fdel$+"CashDrawerOpen"+fdel$
	tmp$=tmp$+"OFPrinter"+fdel$+"OFHPrinter"+fdel$
	tmp$=tmp$+"INVPrinter"+fdel$
	tmp$=tmp$+"CFPrinter"+fdel$+"CFPPrinter"+fdel$
	tmp$=tmp$+"QFPrinter"+fdel$
	tmp$=tmp$+"BOLPrinter"+fdel$+"SLBLPrinter"+fdel$
	tmp$=tmp$+"MMPrinter"+fdel$+"CashBank"+fdel$+"CCBank"+fdel$
	tmp$=tmp$+"RCPTPrinter"+fdel$+"RFLBLPrinter"+fdel$
	call addToStr(e$,rstr$, tmp$+rdel$)
	! data
	tmp$=str$(r2)+fdel$+c2$+fdel$+str$(PD2[16])+fdel$
	tmp$=tmp$+str$(PD1[0])+fdel$+str$(PD1[1])+fdel$+str$(PD1[2])+fdel$
	tmp$=tmp$+str$(PD1[3])+fdel$+PD$[1,10]+fdel$
	tmp$=tmp$+str$(int(pd2[13]))+fdel$+str$(fra(pd2[13])*100)+fdel$
	tmp$=tmp$+str$(pd1[4])+fdel$
	tmp$=tmp$+str$(int(pd2[14]))+fdel$+str$(fra(pd2[14])*100)+fdel$
	tmp$=tmp$+str$(pd1[5])+fdel$
	tmp$=tmp$+str$(int(pd2[15]))+fdel$+str$(fra(pd2[15])*100)+fdel$
	tmp$=tmp$+str$(pd1[6])+fdel$+str$(pd1[7])+fdel$+str$(pd1[8])+fdel$
	tmp$=tmp$+str$(pd1[9])+fdel$+str$(pd2[17])+fdel$
	call addToStr(e$, rstr$, tmp$+rdel$+esdel$)
	! customer defaults
	tmp$=bsdel$+"CustomerData"+fdel$+rdel$+"ID"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	for i = 0 to 12
		call addToStr(e$, rstr$, str$(PD2[i])+fdel$+rdel$)
	next i
	call addToStr(e$, rstr$, esdel$)
Return

!----------------------------------------------------------------------------
! Build needed supporting droplist(s) for GETDATA
!----------------------------------------------------------------------------
BuildSupportingLists: !
	! division droplist
	tmp$=bsdel$+"DivDroplist"+fdel$+rdel$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	tmp$="0"+fdel$+"-- NONE --"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	for i = 1 to Chf(DIVC) - 1
		mat read #divc,i;d$
		if d$[1,1] > " "
			tmp$=str$(i)+fdel$+str$(i)+" - "+d$+fdel$+rdel$
			call addToStr(e$, rstr$, tmp$)
		end if
	next i
	call addToStr(e$, rstr$, esdel$)
	! printer droplist
	tmp$=bsdel$+"PrinterDroplist"+fdel$+rdel$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	tmp$="0"+fdel$+"-- NONE --"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	for i = 1 to Chf(6) - 1
		Read #6,i,10;PRINTER$;
		tmp$=str$(i)+fdel$+str$(i)+" - "+printer$+fdel$+rdel$
		call addToStr(e$, rstr$, tmp$)
	next i
	call addToStr(e$, rstr$, esdel$)
	! bank droplist
	tmp$=bsdel$+"BankDroplist"+fdel$+rdel$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	tmp$="0"+fdel$+"-- NONE --"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	for i = 1 to chf(ch_bk) - 1
		Read #ch_bk,i;a$;
		if a$ <> "" and a$[1,2] <> "  "
			tmp$=str$(i)+fdel$+str$(i)+" - "+a$+fdel$+rdel$
			call addToStr(e$, rstr$, tmp$)
		end if
	next i
	call addToStr(e$, rstr$, esdel$)
	! warehouse droplist
	tmp$=bsdel$+"WarehouseDroplist"+fdel$+rdel$+"ID"+fdel$+"Desc"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	tmp$="0"+fdel$+"-- NONE --"+fdel$+rdel$
	call addToStr(e$, rstr$, tmp$)
	for i = 1 to D9[5]
		Mat Read #ch_wh,i-1;N1$
		Mat Read #ch_wh,i-1,4;N2$
		If N1$ > "    " ! if there is a WH desginator we have a defined record
			tmp$=str$(i)+fdel$+str$(i)+" - "+rtrim$(n1$)+": "+rtrim$(n2$[1,30])+fdel$+rdel$
			call addToStr(e$, rstr$, tmp$)
		end if
	next i
	call addToStr(e$, rstr$, esdel$)
Return

!----------------------------------------------------------------------------
! SUBMITDATA request
!----------------------------------------------------------------------------
UnloadDataAndSave: !
	call DxGet("Description", tmp$) \ c2$ = tmp$,b$
	call DxGet("OHDetail", tmp$) \ PD2[16] = tmp$
	call DxGet("EnteredBy", tmp$) \ PD1[0] = tmp$
	call DxGet("Division", tmp$) \ PD1[1] = tmp$
	call DxGet("Warehouse", tmp$) \ PD1[2] = tmp$
	call DxGet("CashDrawerPort", tmp$) \ PD1[3] = tmp$
	call DxGet("CashDrawerOpen", tmp$) \ PD$[1,10] = tmp$,b$
	call DxGet("OFPrinter", tmp$) \ PD2[13] = tmp$
	call DxGet("OFHPrinter", tmp$) \ PD2[13] = PD2[13] + (val(tmp$) / 100)
	call DxGet("INVPrinter", tmp$) \ PD1[4] = tmp$
	call DxGet("CFPrinter", tmp$) \ PD2[14] = tmp$
	call DxGet("CFPPrinter", tmp$) \ PD2[14] = PD2[14] + (val(tmp$) / 100)
	call DxGet("QFPrinter", tmp$) \ PD1[5] = tmp$
	call DxGet("BOLPrinter", tmp$) \ PD2[15] = tmp$
	call DxGet("SLBLPrinter", tmp$) \ PD2[15] = PD2[15] + (val(tmp$) / 100)
	call DxGet("MMPrinter", tmp$) \ PD1[6] = tmp$
	call DxGet("CashBank", tmp$) \ PD1[7] = tmp$
	call DxGet("CCBank", tmp$) \ PD1[8] = tmp$
	call DxGet("RCPTPrinter", tmp$) \ PD1[9] = tmp$
	call DxGet("RFLBLPrinter", tmp$) \ PD2[17] = tmp$
	for i = 0 to 12
		call DxGet("Cust"+str$(i+1), tmp$)
		PD2[i] = tmp$
	next i
	gosub WriteUserport
	gosub WritePortdefault
Return

!----------------------------------------------------------------------------
! DELETE request
!----------------------------------------------------------------------------
DeleteData: !
	gosub ClearData
	gosub WriteUserport
	gosub WritePortdefault
Return

ClearData: !
	C2$ = " ",C2$
	PD$[1,10]=" ",PD$[1,10]
	For I = 0 To 9 \ PD1[I] = 0 \ Next I
	For I = 0 To 19 \ PD2[I] = 0 \ Next I
Return

!----------------------------------------------------------------------------
! read and write userport record, R2 set to record
!----------------------------------------------------------------------------
ReadUserport: !
	Read #2,R2,100;C2$;
Return

WriteUserport: !
	Write #2,R2,100;C2$;
Return


!----------------------------------------------------------------------------
! read and write portdefault record, R2 set to record to read
!----------------------------------------------------------------------------
ReadPortdefault: !
	Mat Read #4,R2;PD1
	Mat Read #4,R2,20;PD2
	Mat Read #4,R2,100;PD$
Return

WritePortdefault: !
	Mat Write #4,R2;PD1
	Mat Write #4,R2,20;PD2
	Mat Write #4,R2,100;PD$;
Return

! L_1000: Gosub L_5400 \ Gosub L_5600
! L_1010: J0$ = "1 00 314 2"
! 	J1$ = ""
! 	J5$ = "L:list entries     <CR>:exit"
! 	Gosub L_7000
! 	If J4$ = "" Goto OUTEND
! 	If J4$ = "!" Chain "MU951A"
! 	If J4$ = "CLR" Goto L_8600
! 	If J4$ = "L" Goto L_4500
! 	R2 = J$
! 	L_1100: If R2 And R2 < Chf(2) Goto L_1200
! J7$ = "INVALID PORT NUMBER !" \ Gosub L_7600 \ Goto L_1010
! 
! L_1200: Gosub L_6000
! Gosub L_6200
! L_2010: Gosub L_5000
! L_2020: Print @0,23;"ENTER     #:edit    A:edit all    <CR>:end     DELETE    ";'CL';
! 	Input ""U5$
! 	Print @0,23;'CL';
! 	If U5$ = "E" Goto L_2500
! 	If U5$ = "A" Goto L_6900
! 	If U5$ = "" Goto L_2500
! 	If U5$ = "DELETE" Goto L_8900
! 	If U5$ = "CLEAR" Goto L_8600
! 	W0 = U5$ \ If W0 Gosub L_2200 \ Goto L_2010
! Goto L_2020
! 
! L_2200: Rem EDIT LINE NOS
! 	On W0 Gosub L_3000,L_3040,L_3100,L_3200,L_3300,L_3400,L_3400,L_3400,L_3400,L_3400
! 	On W0 - 10 Gosub L_3400,L_3400,L_3400,L_3400,L_3400,L_3400,L_3400,L_3400,L_3553,L_3570
! 	On W0 - 20 Gosub L_3640,L_3710,L_3780,L_3845,L_3880,L_3915,L_3955,L_3985,L_4000
! Return
! 
! L_2500: Rem LOAD PORT TYPE
! 	Gosub L_6100 \ Gosub L_6300 \ Gosub L_8000
! Goto L_1000
! 
! L_3000: J0$ = "2 001822 4"
! 	J1$ = C2$[1,18]
! 	J5$ = "Enter description for this port"
! 	Gosub L_7000
! 	C2$[1,18] = J$
! 	J5$ = ""
! Return
! 
! L_3040: J0$ = "3000 233 5-"
! 	J1 = PD2[16] \ If Not(J1) Print @32,5;"     ";
! 	J5$ = "Enter Detail wanted in 201 Header, 0=standard, 99=minimum"
! 	Gosub L_7000
! 	If J1 <> 0 And J1 <> 99 Goto L_3040
! 	J5$ = ""
! 	PD2[16] = J1
! Return
! 
! L_3100: J0$ = "30000333 9"
! 	J1 = PD1[0] \ If Not(J1) Print @32,9;"    ";
! 	J5$ = "Enter your given number (1-998) to be used for this port"
! 	Gosub L_7000
! 	If J1 > 998 Goto L_3100
! 	PD1[0] = J1
! 	J5$ = ""
! Return
! 
! L_3200: J0$ = "30000234101"
! 	J1 = PD1[1] \ If Not(J1) Print @32,10;"    ";
! 	L_3220: J5$ = "Enter the default division for this port or ''-'' for help"
! 	Gosub L_7000
! 	If J4$ = "-" Swap 1,"SW121" \ Goto L_3220
! 	PD1[1] = J1
! 	J5$ = ""
! Return
! 
! L_3300: J0$ = "3000023411"
! 	J1 = PD1[2] \ If Not(J1) Print @32,11;"    ";
! 	J5$ = "Enter the default warehouse/branch for this port"
! 	Gosub L_7000
! 	PD1[2] = J1
! 	J5$ = ""
! Return
! 
! L_3400: J0$ = W0 + 6 Using "30000630##" \ If W0 > 15 Let J0$ = W0 - 7 Using "30000673##"
! 	J1 = PD2[W0 - 6]
! 	J5$ = "Enter the cash account to default to for this port"
! 	Gosub L_7000
! 	If Not(J1) Goto L_3540
! 	CUST$ = " ",CUST$
! 	CUST$ = J1 Using "######"
! 	Search #5,2,1;CUST$,R,E \ If E > 1 Gosub ERR_SEARCH
! 	If E Let J7$ = "ERROR -- Invalid Customer!" \ Gosub L_7600 \ Goto L_3400
! 	L_3540: PD2[W0 - 6] = J1
! 	J5$ = ""
! Return
! 
! L_3553: J0$ = "3000036412"
! 	J1 = PD1[3] \ If Not(J1) Print @61,12;"      ";
! 	J5$ = "Enter the port # for the cash drawer, ''0'' for slaved/none"
! 	Gosub L_7000
! 	If J1 > 999 Goto L_3553
! 	PD1[3] = J1;J5$ = ""
! 	J0$ = "2 00106912"
! 	J1$ = PD$[1,10]
! 	J5$ = "Enter the control string required to open the drawer"
! 	Gosub L_7000
! 	PD$[1,10] = J$;J5$ = ""
! Return
! 
! L_3570: J0$ = "3200057413-"
! 	J1 = PD2[13] \ If Not(J1) Print @74,13;"    ";
! 	J5$ = "Enter the Order printer . held Order printer, 0:none  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If Int(J1) > Chf(6) - 1 Or Fra(J1) * 100 > Chf(6) - 1 Goto L_3570
! 	PD2[13] = J1;J5$ = ""
! Return
! 
! L_3640: J0$ = "3000027714-"
! 	J1 = PD1[4] \ If Not(J1) Print @75,14;"    ";
! 	J5$ = "Enter the Invoice forms printer to use, 0:none  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If J1 > Chf(6) - 1 Goto L_3640
! 	PD1[4] = J1;J5$ = ""
! Return
! 
! L_3710: J0$ = "3200057415-"
! 	J1 = PD2[14] \ If Not(J1) Print @75,15;"    ";
! 	J5$ = "Enter the Credit printer . Pickups printer, 0:none  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If Int(J1) > Chf(6) - 1 Or Fra(J1) * 100 > Chf(6) - 1 Goto L_3710
! 	PD2[14] = J1;J5$ = ""
! Return
! 
! L_3780: J0$ = "3000027716-"
! 	J1 = PD1[5] \ If Not(J1) Print @75,16;"    ";
! 	J5$ = "Enter the Quote forms printer to use, 0:none  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If J1 > Chf(6) - 1 Goto L_3780
! 	PD1[5] = J1;J5$ = ""
! Return
! 
! L_3845: J0$ = "3200057417-"
! 	J1 = PD2[15] \ If Not(J1) Print @75,17;"    ";
! 	J5$ = "Enter the bill of lading . ship label printers, ''0'' for none"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If Int(J1) > Chf(6) - 1 Or Fra(J1) * 100 > Chf(6) - 1 Goto L_3845
! 	PD2[15] = J1;J5$ = ""
! Return
! 
! L_3880: J0$ = "3000027718-"
! 	J1 = PD1[6] \ If Not(J1) Print @75,18;"    ";
! 	J5$ = "Enter the Mail Message printer, 0:no hard-copy  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If J1 > Chf(6) - 1 Goto L_3880
! 	PD1[6] = J1;J5$ = ""
! Return
! 
! L_3915: J0$ = "3000027719"
! 	J1 = PD1[7] \ If Not(J1) Print @75,19;"    ";
! 	J5$ = "Enter the Bank # for cash receipts 1 - 99 "
! 	Gosub L_7000
! 	If J1 < 1 Or J1 > 99 Goto L_3915
! 	PD1[7] = J1;J5$ = ""
! Return
! 
! L_3955: J0$ = "3000027720"
! 	J1 = PD1[8] \ If Not(J1) Print @75,20;"    ";
! 	J5$ = "Enter the Bank # cash sale paid by credit card 1 - 99 "
! 	Gosub L_7000
! 	If J1 < 1 Or J1 > 99 Goto L_3955
! 	PD1[8] = J1;J5$ = ""
! Return
! 
! L_3985: J0$ = "3000027721-"
! 	J1 = PD1[9] \ If Not(J1) Print @74,21;"    ";
! 	J5$ = "Enter the Receipt Printer to use, 0:no receipt  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If Int(J1) > Chf(6) - 1 Goto L_3985
! 	PD1[9] = J1;J5$ = ""
! Return
! 
! L_4000: J0$ = "3000027722-"
! 	J1 = PD2[17] \ If Not(J1) Print @75,22;"    ";
! 	J5$ = "Enter the RF LABEL printer, 0:no hard-copy  -:list"
! 	Gosub L_7000 \ If J4$ = "-" Gosub L_4800
! 	If J1 > Chf(6) - 1 Goto L_4000
! 	PD2[17] = J1;J5$ = ""
! Return

! DEAD CODE
! Window Open @33,6; Size 30,10; Using " DETAIL OPTIONS "
! Print @0,0;" 0 = BYPASS ALL"
! Print @0,1;" 1 = STOP AT ORDER TYPE"
! Print @0,6;"99 = STANDARD ENTRY"
! L_4250: Print @0,7;"ENTER CHOICE, <CR>:end  ";'CE';
! Input Len 16386;""J4$
! If J4$ = "" Goto L_4280
! J1 = J4$ \ If J1 < 0 Or J1 > 99 Or Fra(J1) Goto L_4250
! L_4280: Window Close 
! Return 

! L_4500: Rem LIST ENTRIES
! 	Print @0,4;'CE';@79,4;'ER'
! 	Print @0,4;'BD BR'; Tab 78;'ER';@0,4;'BR';
! 	Print @4,4;"PORT  DESCRIPTION";'ED'
! 	Print @79,4;'ER'
! 	L1 = 0 \ For R2 = 0 To Chf(2) - 1
! 		Gosub L_6000 \ If C2$[1,1] <= " " Goto L_4670
! 		L1 = L1 + 1 \ If L1 < 18 Goto L_4640
! 		L_4580: Print @0,23;"-MORE-   <CR>:continue   #:port   R:relist   E:end  ";'CL';
! 		Input ""J4$ \ If J4$ = "E" Goto L_1000
! 		X2 = J4$ \ If X2 Goto L_4730
! 		If J4$ = "R" Goto L_4500
! 		If J4$ <> "" Print 'RB'; \ Goto L_4580
! 		L1 = 1 \ Print @0,5;'CE';
! 		L_4640: Print Using "###"; Tab 4;R2; Tab 10;C2$;
! 		Print
! 	L_4670: Next R2
! 	L_4680: Print @0,23;"- END -   R:relist   #:port   <CR>:end   ";'CL';
! 	Input ""J4$ \ If J4$ = "" Goto L_1000
! 	If J4$ = "R" Goto L_4500
! 	X2 = J4$ \ If X2 Goto L_4730
! 	Print 'RB'; \ Goto L_4680
! 	L_4730: Rem PORT SELECTED
! Gosub L_5400 \ Gosub L_5600 \ R2 = X2 \ Goto L_1100
! 
! L_4800: Rem LIST PRINTERS
! 	Window Open @8,1; Size 46,20; Using " AVAILABLE PRINTERS "
! 	X1 = 0 \ X1[1] = 0
! 	L_4830: X1 = X1 + 1 \ X1[1] = X1[1] + 1
! 	If X1[1] > 16 Or X1 >= Chf(6)
! 		Print @0,18;"ENTER CHOICE,  <CR>:list more, 0:none  ";'CL';
! 		Input Len 16384 + 5;""J4$
! 		J1 = J4$ \ If J1 Or J4$ = "0" Goto L_4930
! 		X1[1] = 1 \ If X1 >= Chf(6) Let X1 = 1
! 		Print 'CS';
! 	End If
! 	Read #6,X1,10;J$[1,20];
! 	Print Using "##. ";X1;J$[1,20]
! 	Goto L_4830
! 	L_4930: Window Close
! Return
! 
! L_5000: Rem
! 	Print Using "###";@14,2;R2;
! 	Print @22,4;C2$[1,18];
! 	Print Using "##";@33,5;PD2[16];
! 	For CT = 0 To 2
! 		Print @30,CT + 9;
! 		If PD1[CT] Print Using "######";PD1[CT]; Else Print "  None";
! 	Next CT
! 	For CT = 0 To 9
! 		Print @30,CT + 12;
! 		If PD2[CT] Print Using "######";PD2[CT]; Else Print "  None";
! 	Next CT
! 	For CT = 10 To 12
! 		Print @73,CT - 1;
! 		If PD2[CT] Print Using "######";PD2[CT]; Else Print "  None";
! 	Next CT
! 	If PD1[3] Print Using "###";@64,12;PD1[3];
! 	Print @69,12;PD$[1,10]
! 	If Not(PD1[3]) If PD$[1,1] <= " " Print @63,12;"None"
! 	If Not(PD1[3]) If PD$[1,1] > " " Print @61,12;"Slaved"
! 	Print @74,13;
! 	If PD2[13] Print Using "##.##";PD2[13]; Else Print " None";
! 	Print @77,14;
! 	If PD1[4] Print Using "##";PD1[4]; Else Print 'ML ML';"None";
! 	Print @74,15;
! 	If PD2[14] Print Using "##.##";PD2[14]; Else Print " None";
! 	Print @77,16;
! 	If PD1[5] Print Using "##";PD1[5]; Else Print 'ML ML';"None";
! 	Print @74,17;
! 	If PD2[15] Print Using "##.##";PD2[15]; Else Print " None";
! 	Print @77,18;
! 	If PD1[6] Print Using "##";PD1[6]; Else Print 'ML ML';"None";
! 	Print @77,19;
! 	If PD1[7] Print Using "##";PD1[7]; Else Print 'ML ML';"None";
! 	Print @77,20;
! 	If PD1[8] Print Using "##";PD1[8]; Else Print 'ML ML';"None";
! 	Print @77,21;
! 	If PD1[9] Print Using "##";PD1[9]; Else Print 'ML ML';"None";
! 	Print @77,22;
! 	If PD2[17] Print Using "##";PD2[17]; Else Print 'ML ML';"None";
! Return
! 
! L_5400: Rem SCREEN PT I
! 	Print 'CS BP';@0,0;"MU951 Port # ";Spc(6);@28,0;"PORT FILE MAINTENANCE";
! 	Print 'ER BR';@2,2;"Edit Port #";'ER';@3,4;"Port Description";
! 	Print @3,5;"Order Header Detail";
! 	Print @1,5;"2.";
! 	Print @1,4;"1.";'EP'
! Signal 3,0 \ Return
! 
! L_5600: Rem SCREEN PT II
! 	Print @26,7;"P O R T   D E F A U L T S";
! 	Print @0,9;'BP';" 3.";@0,10;" 4.";@0,11;" 5.";
! 	Print @0,12;" 6.";@0,13;" 7.";@0,14;" 8.";
! 	Print @0,15;" 9.";@0,16;"10.";@0,17;"11.";
! 	Print @0,18;"12.";@0,19;"13.";@0,20;"14.";
! 	Print @0,21;"15.";@39,9;"16.";@39,10;"17.";
! 	Print @39,11;"18.";@39,12;"19.";@39,13;"20.";@39,14;"21.";@39,15;"22.";
! 	Print @39,16;"23.";@39,17;"24.";@39,18;"25.";@39,19;"26.";@39,20;"27.";
! 	Print @39,21;"28.";
! 	Print @3,9;"Entered-by Number";@3,10;"Division";
! 	Print @3,11;"Warehouse/Branch";@3,12;"Cash Sale Customer No.";
! 	Print @3,13;"Part Pay Cash Customer";@3,14;"Check Sale Customer No.";
! 	Print @3,15;"Part Pay Check Customer";@3,16;"C.O.D. Sale Customer No.";
! 	Print @3,17;"M/C C/C Sale Customer No.";@3,18;"Part Pay M/C Customer";
! 	Print @3,19;"Visa C/C Sale Customer No.";@3,20;"Part Pay Visa Customer";
! 	Print @3,21;"AMEX C/C Sale Customer No.";@42,9;"Part Pay AMEX Customer";
! 	Print @42,10;"Other C/C Sale Customer No.";@42,11;"Part Pay Other Customer No.";
! 	Print @42,12;"Cash Drawer Port #";@42,13;"Order Forms Printer . Held";
! 	Print @42,14;"Invoice Forms Printer";@42,15;"Credit Forms Printer . Pickups";
! 	Print @42,16;"Quote Forms Printer";@42,17;"Bill of Lading . Ship Lbl Ptr";
! 	Print @42,18;"Mail message Printer";
! 	Print @42,19;"Cash Receipts Bank #";@42,20;"Credit Card Bank #";
! 	Print @42,21;"Receipt Printer";
! 	Print @39,22;"29.RF LABEL PRINTER";
! Print 'EP'; \ Return
! 
! L_6000: Rem "==================================== read userport
! 	Read #2,R2,100;C2$;
! Return
! 
! L_6100: Rem WRITE USERPORT
! 	Write #2,R2,100;C2$;
! Return
! 
! L_6200: Rem "========================================= read port default
! 	Mat Read #4,R2;PD1
! 	Mat Read #4,R2,20;PD2
! 	Mat Read #4,R2,100;PD$
! Return
! 
! L_6300: Rem WRITE PRTDFLT
! 	Mat Write #4,R2;PD1
! 	Mat Write #4,R2,20;PD2
! 	Mat Write #4,R2,100;PD$;
! Return
! 
! L_6900: Rem CHOOSE ALL
! 	For W0 = 1 To 27
! 		Gosub L_2200
! 		Gosub L_5000
! 	Next W0
! Goto L_2020
! 
! L_8000: C1 = 0
! 	C2$ = " ",C2$
! 	For CT = 0 To 9 \ PD1[CT] = 0 \ Next CT
! 	For CT = 0 To 19 \ PD2[CT] = 0 \ Next CT
! Return
! 
! L_8600: Rem CLEAR ALL ENTRIES
! 	Print @0,23;"DO YOU WANT TO ERASE ";'BU';"ALL";'EU';" PORT ENTRIES?  (YES/<CR>)";'CL RB';
! 	Input ""J4$ \ If J4$ <> "YES" Goto L_1000
! 	Print @0,23;"PLEASE WAIT . . . ";'CL'; \ Signal 3,0
! 	Gosub L_8000 \ For R2 = 0 To Chf(2) - 1 \ Gosub L_6100 \ Gosub L_6300 \ Next R2
! Goto L_1000
! 
! L_8900: Rem DELETE
! 	Gosub L_8000 \ Gosub L_6100 \ Gosub L_6300
! Goto L_1000

OUTEND: Rem EXIT ROUTINE
call setoutput(e$,rstr$)
Close
else ! main try failure
 include "src/callmainerrnet.inc"
end try
end