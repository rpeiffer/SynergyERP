! >>> Program 634
!
! description  General Ledger Report #2 
!
! loadsave -w -n 100,10 -o prog/dxport/634.dl4 src/634.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 12, 2004  11:14:49
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/ap/gl634.src (univ2) [mary] {45716}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem GL634  G/L REPORT FORMAT 2
!

Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"                      
Declare External Function GetUIDRec,GetUIDInfo$ 
Try 
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim GLT$[80],GLTKEY$[50],4%,GLT0,R[10]
Dim REPTYPE$[1],PERIOD$[4],CP1$[4],CP2$[4],groupid$[1]
dim fye$[4]
dim 1%,archhist
Dim 2%,CPER[1],SUPRZ,C1[2],DETPRNT,SUBT,SUBPER[1]
Dim 3%,REC_SRT,GLAMT,GLACCT$[12],GLSRC$[2],rec_uac
Dim K2$[20],K9$[50],K10$[10]
Dim TMPFNAME$[30],CMD$[50]
Dim V$[12],D1$[26]
Dim S1$[4]
Dim H$[4],3%,P[1]
Dim S$[6],I$[8],Ex$[14],bex$[14]
Dim F4$[16],C$[140],1%,D9,2%,A9,F9$[2]
Dim 4%,N1,N2,N3
Dim 1%,S9[6],glch
Dim 4%,T3[5],B3[5],H3[5],SACCT,EACCT,ACCT,U3[5]
Dim 4%,D3
Dim M$[36]
Dim 3%,F,F$[20],G$[2],B1,F1,acctnum
! for profit center
dim 1%,plen
dim k21$[50],pmask$[8],PCNAME$[30]
Dim 3%,rec_pc,pc[100],tmp99$[2000],work$[2000],tmp98$[50]
Dim 3%
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[9000],tmp1$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[5000],bsdel$[10],esdel$[10],rdel$[10]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[6000]
Dim blockid$[100],msg$[100],groupid$[1]
dim 2%,glt1[4],prgnum,1%,srcprg,srccode$[2]
DIM DESC$[200]
dim 1%,jscode[12],jscode$[12],rcode,rsncode
dim lines$[80]
dim wo$[6],jsprnt$[1]
dim proddesc$[30],vrsrc$[40]
dim 3%,entry,prodcode$[12],comment$[16],1%,reason,whse
dim trans$[12],2%,trandate,vend,4%,rec_gld,gldamt
dim keygld$[50],keychk$[50],fname$[20],vendname$[30]
dim proddesc$[30]
dim 2%,cust,custname$[30],3%,artran,potran
dim 2%,ponum,pocntrl
dim 2%,check,1%,bank
dim 3%
!let jscode$="ACDEPMRSQVWX"
let jscode$= "ACDE MRS    "
for x=0 to 12\jscode[x]=0\next x
let lines$="-",lines$
!Try call dxopen() Else Rem ! needed?
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!Call dxsave(0,"/tmp/md634.txt!")

tRY Close #1 eLSE rEM ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(intco)
ROpen #1,J$
eflag=0
returnstatus=0 ! blockid no errors
pageflag=0
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G$[1,1] = intco Using "#"
g$[2,2]=groupid$

!
!!Print 'CS';"-gl634-"; Tab 20;"GENERAL LEDGER REPORT #2 "
Mat Read #1,51,6;S9;
Mat Read #1,51,94;archhist;
Ex$ = "###,###,###.##"
bex$= "-----------.##"

try      
	J9 = Chf(0)    
	let l9=60
	let j8=0
else
	let browser=99
end try
            
IF NOT(J8) ! to the printer               
	L9 = 60;SRCPRT = 0
ELSE
	L9=99999
Endif
srcprt=0
l8=0

Call DXGet("u_group",groupid$)
G$[1,1] = intco Using "#"
G$[2,2] = groupid$
F4$ = "1/ACF",G$
Call FindF(F4$,A9)
If Not(A9) 
	eflag=eflag+1
	Let message$ = "File ",F4$," not found!" 
	goto outend:
endif
Ropen #5,F4$
!

let eflag=0
let message$=""
if s9<>0!
	call dxget("CLIENT",tmp$) \ S = tmp$ ! Enter Client #
else
	let s=1
endif

call dxget("SPERIOD",tmp$) \ CPER[0] = tmp$ ! Starting Current Accounting Period (MMYY)
call dxget("EPERIOD",tmp$) \ CPER[1] = tmp$ ! Ending Current Accounting Period (MMYY)
call dxget("TYPEREPORT",REPTYPE$) ! D=Detail,  S=Summary,  J=Source Summary, I=Detail With Drill Down 
call dxget("PRTOPTION",tmp$) \ DETPRNT = tmp$ ! 1=Journal Source 2=Posting Date
call dxget("SUBTOTALS",tmp$) \ if rtrim$(tmp$) = "" Let SUBT = 0 else Let SUBT = 1 ! Print Subtotals (Y/N)
call dxget("SACCT",tmp$) \ SACCT = tmp$\ if rtrim$(tmp$)="" let sacct=1 ! Starting Account Number
call dxget("EACCT",tmp$) \ if rtrim$(tmp$) = "" Let EACCT = 99999999 else Let EACCT = tmp$ ! Ending Account Number
call dxget("BALANCE",tmp$) \ if rtrim$(tmp$) = "" Let SUPRZ = 0 else Let SUPRZ = 1 ! Suppress Zero Account Balance Printing (Y/N)

let profcent=0 ! no profit centrer
If s9[3]<>0 
	call dxget("PROFCENT",tmp99$)
	if rtrim$(tmp99$)="" let tmp99$="0"
	let profcent=0
	if tmp99$<>"0"
		F$ = intCO Using "1/GLPCTR#"
		Try
			Ropen #21,F$ !
		Else
			let message$="Profit Center File Does Not Exist "
			let eflag=eflag+1
			goto outend:
		end try
		let plen=s9[5]-s9[4]+1\if plen<0 let plen=1
		if plen>9 let plen=9
		let pmask$[1,plen]="#",pmask$[1,plen]
NextType: ! 
		if len(rtrim$(tmp99$))<31
			let tmp98$=rtrim$(tmp99$)
		else
			let tmp98$=rtrim$(tmp99$[1,30])+",etc."
		endif
		x$=""
		X2 = 0 \ Let work$ = tmp99$ To "," : X2 
		if rtrim$(work$)="" goto exittype:
		If x2<>0 and x2>len(tmp99$) let x2=0
		IF LEN(work$)>0 AND LEN(work$)<7
			let tmp3=work$
			K21$[1,4] = S Using "####";K21$[5,4 + PLEN] = tmp3 Using PMASK$   
			Search #21,2,1;K21$,rec_pc,e                                    
			If e = 1 
				Let e$ = "Profit center "+str$(tmp3)+" not on file!!!" \ error 10000 
			endif
			Mat Read #21,rec_pc,8;PCNAME$;
			let profcent=profcent+1
			let pc[profcent]=tmp3
	    endif  
		if profcent=99 goto exittype:
        If X2<>0 Let tmp99$ = tmp99$[X2 + 1]
		if x2<>0 Goto NextType  
		ExitType: !
		if profcent=1
			let tmp3=pc[1]
			K21$[1,4] = S Using "####";K21$[5,4 + PLEN] = tmp3 Using PMASK$   
			Search #21,2,1;K21$,rec_pc,e                                    
			If e = 1 
				Let e$ = "Profit center "+str$(tmp3)+" not on file!!!" \ error 10000 
			endif
			Mat Read #21,rec_pc,8;PCNAME$;
		endif
	endif                                  
endif
!if Not(S9) Let S = 1
!Gosub L_420
V$ = " ",V$ \ V$[3,6] = S Using "####"
Search #5,2,1;V$,V1,E 
If E<>0
	Let message$ = "Invalid client "+str$(s)+" client not on file!" ! 
	let eflag=eflag+1
	goto outend: 
endif
Mat Read #5,V1,0;C$;
!V$[7,8] = "PG"
!Search #5,2,1;V$,V1,E 
!Mat Read #5,V1,132;C1;
D9 = C$[135,136]
If D9 > 9 Let F9$ = D9 Using "##"
If D9 < 10 Let F9$ = D9 Using "#"
CLIENT = S
S$ = S Using "####"
For I = 1 To 4
  If S$[I,I] = " " Let S$[I,I] = "."
Next I
F4$ = F9$,"/GLM",G$,S$
!Call FindF(F4$,A9)
!If Not(A9) 
!	Let message$ = "G/L Master File ",F4$,"not found"  
!	let eflag=eflag+1
!	goto outend:
!endif
if archhist<>0
	Call dxget("ARCHHIST",tmp$)
	if rtrim$(tmp$)=""
		Call dxget("ARCHYR",tmp$)
		if rtrim$(tmp$)<>""
			let message$ = "Invalid Archive Year Entered" !\ error 10000
			eflag=eflag+1
			goto outend:
		endif
		F4$ = F9$,"/GLM",G$[1,2],S$
		let archhist=0
	else
		Call dxget("ARCHYR",tmp$)
		if rtrim$(tmp$)=""
			let message$ = "Invalid Archive Year Entered" !\ error 10000
			let eflag=eflag+1
			goto outend: 
		endif
		let tmp3=tmp$
		if tmp3<0 or tmp3>99
			let message$ = "Invalid Archive Year Entered"! \ error 10000
			let eflag=eflag+1
			goto outend: 
		endif
		let fye$[1,2]=".."
		let fye$[3,4]=tmp3 using "&&"
		F4$ = F9$,"/GLM",G$[1,2],S$,fye$
	endif
else
	F4$ = F9$,"/GLM",G$[1,2],s$
endif
Call FindF(F4$,A9)
If Not(A9) 
	if archHist<>0
		message$ = "Archived File ",F4$," not found " !\ error 10000
		let eflag=eflag+1
		goto outend: 
	else
		message$ = "File ",F4$," not found "! \ error 10000
		let eflag=eflag+1
		goto outend: 
	endif
ENDIF
!!  Print @0,23;'CL RB';"FILE ";F4$;"NOT FOUND "; \ Signal 3,50 \ Goto OUTEND
!!End If 
Ropen #2,F4$
V$ = " ",V$
Search #2,2,1;V$,V1,E 
if e<>0
	let message$="G/L Master Control Record Not on File "!!\ If E Gosub ERR_SEARCH
	let eflag=eflag+1
	goto outend:
endif
Mat Read #2,V1,70;D3;
H$ = D3 Using "####"
P[0] = H$[1,2]
P[1] = H$[3,4]
D5 = P[1]
If D5 <> 14 If D5 <> 39 Let D5 = 39
Dim 4%,M3[D5],A3[D5]
Mat Read #2,V1,70;A3;
! Mat Read #1,88,128;F$; \ Ropen #10,F$
!
! STARTING PERIOD
comd = 0
CP1$ = CPER[0] Using "&&&&"
PERIOD$ = CP1$[3,4],CP1$[1,2]
B1 = PERIOD$[1,4]
!
Gosub VERIFYPERIOD
!if comd = 2 Let e$ = "Invalid starting period, period not found!" \ error 10000
!if comd = 1 Let e$ = "Invalid starting period!" \ error 10000
if comd = 1
	Let MESSAGe$ = "Invalid starting period, must be between MMYY format!" ! 
	let eflag=eflag+1
	goto outend:
endif 
if comd = 2 
	Let message$ = "Invalid starting period, period not found!" 
	let eflag=eflag+1
	goto outend:
endif
C1[0] = X1
C1[1] = X3
!
CP2$ = CPER[1] Using "&&&&"
PERIOD$ = CP2$[3,4],CP2$[1,2]
F1 = PERIOD$[1,4]
Gosub VERIFYPERIOD 
!if comd = 2 Let e$ = "Invalid ending period, period not found!" \ error 10000
!if comd = 1 Let e$ = "Invalid ending period!" \ error 10000
if comd = 1
	Let message$ = "Invalid ending period, must be in MMYY format!" 
	let eflag=eflag+1
	goto outend:
endif
if comd = 2
	Let message$ = "Invalid ending period, period not found!" 
	let eflag=eflag+1
	goto outend:
endif
C1[2] = X1
!If C1[0] > C1[2] Let e$ = "Invalid ending date, must be >= starting date!" \ error 10000
If C1[0] > C1[2] 
	Let message$ = "Invalid ending period, must be >= than starting period!" 
	let eflag=eflag+1
	goto outend:
endif
!
!If SACCT < 0 or SACCT > 99999999 Let e$ = "Invalid starting account number, must be between 0 and 99999999!" \ error 10000
!If EACCT < SACCT or EACCT > 99999999 Let e$ = "Invalid ending account number, must be between starting account number and 99999999!" \ error 10000
!
! starting & ending account #'s
If SACCT < 0 or SACCT > 99999999 
	Let message$ = "Invalid starting account number, must be between 0 and 99999999!" 
	let eflag=eflag+1
	goto outend:
endif
If EACCT < SACCT or EACCT > 99999999
	Let message$ = "Invalid ending account number, must be between starting account number and 99999999!" 
	let eflag=eflag+1
	goto outend:
endif 
let gldet=0!
if reptype$="I" ! g/l drill down
	IF browser<>0 ! to the browser
		let e$="Drill Down Option Not Available with Browser selection "\Error 10000
	endif
	call dxget("JSCODE",tmp$) \let tmp$=rtrim$(tmp$)!!Journal Source Code or O: all
	let ctr=0
	for x=1 to len(tmp$)
		if tmp$[x,x]="0" ! all
			for x9=0 to 12\let jscode[x9]=1\next x9
			let ctr=99
			goto endsetjscode:
		endif
		if tmp$[x,x]<>","
			for x9=1 to 12
				if tmp$[x,x]=jscode$[x9,x9]
					let jscode[x9]=1
					let ctr=99
				endif
			next x9
		endif
	next x
	endsetjscode: ! end setting the jscode
	if not(ctr)
		let e$="Invalid Journal Source Entered" \ Error 10000
	endif
	let gldet=99 ! flag to include g/l drill down
	let reptype$="D"
endif
If REPTYPE$ <> "D" Let DETPRNT = 2 \ SUBT = 0
!
!
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
 ! 
 ! Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If
!
Goto GETGLT !!add
!

!
GETGLT: Rem verify within same fiscal year and file exists
FYEMO = C$[128,129]
BEGMO = CP1$[1,2] \ BEGFYE = CP1$[3,4]
ENDMO = CP2$[1,2] \ ENDFYE = CP2$[3,4]
If BEGMO > FYEMO Let BEGFYE = BEGFYE + 1 \ If BEGFYE > 99 Let BEGFYE = 0
If ENDMO > FYEMO Let ENDFYE = ENDFYE + 1 \ If ENDFYE > 99 Let ENDFYE = 0
!If BEGFYE <> ENDFYE Let e$ = "Invalid periods, must be in same fiscal year!" \ error 10000
!!  Print @0,23;'CL RB';"ACCOUNTING PERIODS MUST BE IN SAME FISCAL YEAR";
If BEGFYE <> ENDFYE 
	Let  message$ = "Invalid periods, must be in same fiscal year!" 
	let eflag=eflag+1
	goto outend:
endif
FYE = ENDFYE
S1$[1,2] = ".."
S1$[3,4] = FYE Using "&&"
F$ = F9$,"/GLT",G$,S$,S1$
Call FindF(F$,A9)
If Not(A9) 
	Let  message$ = "Invalid transaction file, transaction file for fiscal year ",S1$[3,4]," does not exist!"
	let eflag=eflag+1
	goto outend:
endif!!  Print @0,23;'CL RB';"G/L Transaction File For Fiscal Year ";S1$[3,4];"Does Not Exist ";
ROPEN #3,F$
If FYE = 0
  PERIOD$ = B1 Using "&&&&"
  If PERIOD$[1,2] = "00" Let B1 = B1 + 10000
  PERIOD$ = F1 Using "&&&&"
  If PERIOD$[1,2] = "00" Let F1 = F1 + 10000
End if
If REPTYPE$ = "J" 
	REC_UAC = GetUIDRec(e$,IntCo,Userid$)
	Gosub CREATE_GLSRTMP
endif
L_905: !!If Err 0 Gosub ERR_ESCAPE
STARTPRINT: Rem  start print
let j8=browser
If J8 ! dx xml, setup rstr$
  !<section>
  search rstr$,"<section>",e
  if e<>0
	tmp$=rstr$[1,e-1]
	rstr$=tmp$
  endif
  tmp$ = bsdel$,"634",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 

Call Time(D1$)
V9 = 0;L = 99;PCTR = 0
For I = 0 To 5 \ B3[I] = 0 \ T3[I] = 0 \ H3[I] = 0 \ Next I
!
if j8 
  tmp$=""
  If s9<>0 let tmp$ ="Client",fdel$
  ! tmp$ = tmp$, "CLIENT NAME",fdel$
  tmp$ = tmp$, "Account",fdel$
  tmp$ = tmp$, "Acct Description",fdel$
!-!  tmp$ = tmp$, "ACC DEBIT",fdel$
  If REPTYPE$ = "D"
    tmp$ = tmp$, "Period",fdel$
    tmp$ = tmp$, "JS",fdel$
    tmp$ = tmp$, "Date",fdel$
    tmp$ = tmp$, "Ref#",fdel$
    tmp$ = tmp$, "Batch",fdel$
    tmp$ = tmp$, "Batch Description",fdel$
	tmp$ = tmp$, "Begin Bal",fdel$
    tmp$ = tmp$, "Debit",fdel$
    tmp$ = tmp$, "Credit",fdel$
	tmp$ = tmp$, "End Bal",fdel$
  End If
  If REPTYPE$ = "J"
	tmp$ = tmp$, "Period",fdel$
    tmp$ = tmp$, "JS",fdel$
	tmp$ = tmp$, "Begin Bal",fdel$
    tmp$ = tmp$, "Debit",fdel$
    tmp$ = tmp$, "Credit",fdel$
	tmp$ = tmp$, "End Bal",fdel$
  End If
  If REPTYPE$ = "S"
	tmp$ = tmp$, "Period",fdel$
	tmp$ = tmp$, "Begin Bal",fdel$
    tmp$ = tmp$, "Debit",fdel$
    tmp$ = tmp$, "Credit",fdel$
	tmp$ = tmp$, "End Bal",fdel$
  End If
    call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
!!If Not(SRCPRT)
!!  Print @0,22;'CE';"Printing...Please Wait...";
!!End If 
K2$ = " ",K2$
K2$[2,9] = SACCT Using "########"
Search #2,2,1;K2$,R[2],E 
If Not(E) Goto CHKACCT
SRCHGLM:
Search #2,3,1;K2$,R[2],E 
If E = 2 Goto ENDOFREPORT
CHKACCT: Rem check account range
ACCT = K2$[2,9] \ If Not(ACCT) Goto SRCHGLM
If ACCT > EACCT Goto ENDOFREPORT
Gosub READ_GLM
if j8<>0 and reptype$="D" and m$[13,13]<>"0" goto srchglm: ! detail for only normal posting accounts
if s9[3]<>0 and profcent<>0
  If M$[14,14] = "A" Or M$[14,14] = "L" Or M$[14,14] = "C" goto srchglm:
  tmp3= k2$[S9[4],S9[5]] 
  for ctr=1 to profcent
	If tmp3=pc[CTR] goto foundpc:
  next ctr
  goto srchglm:
endif 
foundpc: ! found the profit center
For I = 0 To 5 \ H3[I] = 0 \ Next I
If REPTYPE$ = "J" And M$[13,13] <> "0" Goto SRCHGLM
If M$[13,13] = "0" ! normal posting account
  If M$[14,14] = "A" Or M$[14,14] = "L" Or M$[14,14] = "C"
    Gosub CALCBEGBS
  End If 
  If M$[14,14] = "I" Or M$[14,14] = "E" Or M$[14,14] = "R" Or M$[14,14] = "O"
    Gosub CALCBEGIS
  End If 
  Gosub CALCCURR
  Gosub GETDETAIL
  For NI = 0 To 5 \ B3[NI] = B3[NI] + H3[NI] \ Next NI
  Goto SRCHGLM
End If 
If M$[13,13] = "1" ! memo account
  If M$[1,1] <> " " ! check for alpha account
    If M$[1,1] = "A" Or M$[1,1] = "L" Or M$[1,1] = "C"
      Gosub CALCBEGBS
      Gosub CALCCURR
      If SUPRZ
        If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHGLM
      End If 
      If H3[1] > 0
        H3[4] = H3[1]
      Else 
        H3[5] = H3[1]
      End If 
      Gosub PRNTPAGEHEAD
      Gosub PRNTACCTHEAD
      Gosub PRNTPAGEHEAD
      Gosub PRNTACCTTOTAL
      Goto SRCHGLM
    End If 
    If M$[1,1] = "I" Or M$[1,1] = "E" Or M$[1,1] = "R" Or M$[1,1] = "O"
      Gosub CALCBEGIS
      Gosub CALCCURR
      If SUPRZ
        If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHGLM
      End If 
      If H3[1] > 0
        H3[4] = H3[1]
      Else 
        H3[5] = H3[1]
      End If 
      Gosub PRNTPAGEHEAD
      Gosub PRNTACCTHEAD
      Gosub PRNTPAGEHEAD
      Gosub PRNTACCTTOTAL
      Goto SRCHGLM
    End If 
  Else 
    Gosub CALCBEGIS
    Gosub CALCCURR
    If SUPRZ
      If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHGLM
    End If 
    If H3[1] > 0
      H3[4] = H3[1]
    Else 
      H3[5] = H3[1]
    End If 
    Gosub PRNTPAGEHEAD
    Gosub PRNTACCTHEAD
    Gosub PRNTPAGEHEAD
    Gosub PRNTACCTTOTAL
    Goto SRCHGLM
  End If 
End If 
If M$[13,13] = "2" Goto SRCHGLM
If M$[13,13] = "3" ! print total account
  For NI = 0 To 5 \ H3[NI] = B3[NI] \ Next NI
  If Not(J8) Print #0;"" \ L = L + 1
  Gosub PRNTPAGEHEAD
  Gosub PRNTACCTHEAD
  Gosub PRNTPAGEHEAD
  Gosub PRNTACCTTOTAL
  Gosub CLEARTOTALS
  Goto SRCHGLM
End If 
If M$[13,13] = "4" ! non-print total account
  Gosub CLEARTOTALS
  Goto SRCHGLM
End If 
If M$[13,13] = "5" ! page break
  L = 99
  Goto SRCHGLM
End If 
Goto SRCHGLM
CLEARTOTALS: Rem....RECORD TYPE 4
For NI = 0 To 5
  T3[NI] = 0;B3[NI] = 0;H3[NI] = 0;U3[NI] = 0
Next NI
Return 
PRNTSUBTOTAL: Rem print account subtotals
If REPTYPE$ <> "D" Return 
If Not(SUBT) Return 
Gosub PRNTPAGEHEAD
!!Print Tab 59;"--------------";
!!Print Tab 78;"--------------";
!!Print Tab 98;"--------------"
Gosub PRNTPAGEHEAD
J$ = SUBPER[0] Using "&&&&"
!
IF not(j8)
  Print #0; Tab 25;"Total For Account Period ";J$[3,4];"/";J$[1,2];
  U3[2] = U3[0] + U3[4] + U3[5]
  Print #0; Using Ex$; Tab 59;U3[4];
  Print #0; Using Ex$; Tab 78;U3[5];"-";
  Print #0; Using Ex$; Tab 98;U3[2];
  If U3[2] < 0 Print #0;"-";
  Print #0;""
end if
!
U3[0] = U3[2]
For NI = 1 To 5 \ U3[NI] = 0 \ Next NI
!!Print Tab 59;"--------------";
!!Print Tab 78;"--------------";
!!Print Tab 98;"--------------"
L = L + 1
SUBDETFLAG = 0
Return 
!
PRNTACCTTOTAL: Rem print account totals
if j8
  if REPTYPE$="S"
	if m$[13,13]="3" return ! not using totals
	tmp1$=""
	if s9<>0 let tmp1$ = trim$(Client using "####"),fdel$! client
	let acctnum=m$[1,12]
	tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
	let desc$=trim$(m$[15,34])
	gosub chkcomma: 
	tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
	if cp1$[1,4]=cp2$[1,4]
		tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4],fdel$
	else
		tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
	endif
	tmp1$ = tmp1$, TRIM$(h3[0] using bex$), fdel$ ! beginning balance
	tmp1$ = tmp1$, TRIM$(h3[4] using bex$), fdel$ ! debit
	tmp1$ = tmp1$, TRIM$(h3[5] using bex$), fdel$ ! credit
	tmp1$ = tmp1$, TRIM$(h3[2] using bex$), fdel$ ! ending balance
    call addtostr(e$,rstr$,tmp1$+rdel$)
  endif
  return
endif
!
PTAB = 46 \ If REPTYPE$ = "J" Let PTAB = 10
If M$[13,13] = "3" 
  Print #0; Tab (PTAB);"**TOT/FWD**";
Else 
  Print #0; Tab (PTAB);"TOT/FWD";
End If 
PTAB = 59 \ If REPTYPE$ = "J" Let PTAB = 29
Print #0; Using Ex$; Tab (PTAB);H3[4];
If M$[13,13] = "3" Print #0;"*";
PTAB = 78 \ If REPTYPE$ = "J" Let PTAB = 47
Print #0; Using Ex$; Tab (PTAB);H3[5];"-";
If M$[13,13] = "3" Print #0;"*";
PTAB = 98 \ If REPTYPE$ = "J" Let PTAB = 64
Print #0; Using Ex$; Tab (PTAB);H3[2];
If H3[2] < 0 Print #0;"-";
If M$[13,13] = "3" Print #0;"*";
Print #0;""
If M$[13,13] = "0"
  If H3[1] <> (H3[4] + H3[5])
    Print #0; Tab 32;"Acct ";M$[1,12];"  **** Out of Balance ****";
    Print #0;"" \ L = L + 1
  End If 
End If 
Print #0;"" \ L = L + 1
Return 
!
PRNTACCTHEAD: Rem print account heading
if j8 
!	let tmp1$=""
 ! if s9<>0 let tmp1$ = C$[3,6],fdel$! ,rtrim$(C$[11,50]),fdel$
 ! If REPTYPE$ = "J"
 !   tmp1$ = tmp1$,M$[2,9],fdel$,rtrim$(M$[15,34]),fdel$
 ! Else 
 !   tmp1$ = tmp1$,rtrim$(M$[1,12]),fdel$,rtrim$(M$[15,34]),fdel$
 ! End If 
!-!  If H3[0] >= 0
!-!		tmp1$ = tmp1$,H3[0] Using Ex$
!-!    If M$[13,13] = "3" tmp1$ = tmp1$,"*",fdel$ else Let tmp1$ = tmp1$,"",fdel$
!-!  Else 
!-! If REPTYPE$ = "J" 
!-!      tmp1$ = tmp1$, H3[0] Using Ex$,"-"
!-! else 
!-!	  tmp1$ = tmp1$, H3[0] Using Ex$,"-"
!-!	End if 
!-!    If M$[13,13] = "3" Let tmp1$ = tmp1$,"*",fdel$ else Let tmp1$ = tmp1$,"",fdel$
!-!  End If  
!-!  if REPTYPE$ = "S" call addtostr(e$,rstr$,tmp1$+rdel$)
  Return 
end if
!
If REPTYPE$ = "J"
  Print #0;M$[2,9];" ";M$[15,34];
Else 
  Print #0;M$[1,12]; Tab 13;M$[15,34];
End If 
If H3[0] >= 0
  PTAB = 59 \ If REPTYPE$ = "J" Let PTAB = 29
  Print #0; Using Ex$; Tab (PTAB);H3[0];
  If M$[13,13] = "3" Print #0;"*";
Else 
  PTAB = 78 \ If REPTYPE$ = "J" Let PTAB = 47
  Print #0; Using Ex$; Tab (PTAB);H3[0];"-";
  If M$[13,13] = "3" Print #0;"*";
End If 
Print #0;""
Return 
!
GETINCOME: Rem NET INCOME/LOSS LINE
N1 = 0;N2 = 0
V$ = "N"
Search #2,2,1;V$,R[2],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Gosub READ_GLM
  Gosub GETYTDINC
  N1 = H3[3]
  H3[3] = 0
End If 
V$ = "NN"
Search #2,2,1;V$,R[2],E !!\ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Gosub READ_GLM
  Gosub GETYTDINC
  N2 = H3[3]
  H3[3] = 0
End If 
N3 = N1 + N2
Return 
!
READ_GLM: Rem read gl master file
Read #2,R[2];M$;
Mat Read #2,R[2],70;M3;
Return 
!
PRNTPAGEHEAD: Rem print page heading
Rem {begin srcdevl/inc/rtn.printmsg.i}
if j8  Let L = 9 \ return
!
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,22;PCTR;" Records Printed";
!!    Print Using "   Page ####";V9[0];
!!  End If 
End If 
Rem {end rtn.printmsg.i}
L = L + 1
If L < L9 Return 
If L9 <> 23 Goto L_5820
If Not(V9) Goto L_5820
if v9>200 and pageflag=0
	Call addtostr(e$,rstr$,esdel$) !end section
	 Message$="Report is still processing.  Check myreports later. "
	 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	 call addToStr(e$,rstr$,webstr$)
	 call setoutput(e$,rstr$)
	let pageflag=99
endif
!!HEADMORE: Rem check for more
!!Print @0,23;'CL';"Press <CR>:continue  E:exit ";
!!Input Len 1;""J1$
!!Call String(1,J1$)
!!If J1$ = "E" Goto OUTEND
!!If J1$ <> "" Goto HEADMORE
!!Print 'CS';
L_5820:
!
If V9 <> 0 If L9 <> 23 Print #0;"\14\";
PTAB = 40 \ If REPTYPE$ = "J" Let PTAB = 20
Print #0;""
Print #0;"-gl634-";
Print #0; Tab (PTAB);"CLIENT: ";C$[3,6];" ";
Print #0;C$[11,50]
If REPTYPE$ <> "J" Print #0;D1$;
Print #0; Tab (PTAB);"GENERAL LEDGER HISTORY REPORT #2";
V9 = V9 + 1
If REPTYPE$ = "J"
  Print #0; Tab 72;
Else 
  Print #0; Tab 110;
End If 
Print #0;"PAGE ";V9
If S9[3]<>0 and profcent<>0
	if profcent=1
		Print #0; Using "########"; Tab (ptab);"CENTER: ";PC[1];" ";PCNAME$[1,30]
	else
		print #0;tab(ptab);"Centers: ";tmp98$
	endif
endif                                                                    
Print #0; Tab (PTAB);"GENERAL LEDGER HISTORY FROM ";
Print #0;CP1$[1,2];"/";CP1$[3,4];
Print #0;" TO ";
Print #0;CP2$[1,2];"/";CP2$[3,4]
Print #0;""
Print #0;"ACCT.#";
Print #0; Tab 13;"DESCRIPTION";
If REPTYPE$ = "J"
  Print #0; Tab 72;"ACCOUNT"
Else 
  Print #0; Tab 105;"ACCOUNT"
End If 
If REPTYPE$ = "D"
  Print #0;"JS";
  Print #0; Tab 6;"DATE";
  Print #0; Tab 14;"REF#";
  Print #0; Tab 20;"BATCH";
  Print #0; Tab 26;"DESCRIPTION";
End If 
If REPTYPE$ <> "J"
  Print #0; Tab 68;"DEBIT";
  Print #0; Tab 86;"CREDIT";
  Print #0; Tab 105;"BALANCE"
Else 
  Print #0; Tab 15;"JS";
  Print #0; Tab 38;"DEBIT";
  Print #0; Tab 54;"CREDIT";
  Print #0; Tab 72;"BALANCE"
End If 
Print #0;""
L = 9
Return 

prntjshead: ! print head for js detail
print #0;tab 3;lines$[3,79]\let l=l+1
gosub prntpagehead:
if jsprnt$="C" or jsprnt$="S" or jsprnt$="E" 
	if jsprnt$="C"	print #0;tab 7;"C/M #";
	if jsprnt$="S"	print #0;tab 7;"INV #";
	if jsprnt$="E"	print #0;tab 7;"Tran#";
	print #0; tab 16;"Date";
	print #0; tab 23;"Cust #";
	print #0; tab 30;"Cust Name";
	print #0; tab 71;"Amount"
endif
if jsprnt$="R"
	print #0; tab 5;"Entry#";
	print #0; tab 16;"Date";
	print #0; tab 23;"Cust #";
	print #0; tab 30;"Cust Name";
	print #0; tab 71;"Amount"
endif
if jsprnt$="D"
	print #0; tab 6;"Check#";
	print #0; tab 14;"Bank#";
	print #0; tab 23;"Date";
	print #0; tab 30;"Vend #";
	print #0; tab 37;"Vend Name";
	print #0; tab 71;"Amount"
endif
if jsprnt$="A"
	print #0; tab 4;"Transaction";
	print #0; tab 23;"Date";
	print #0; tab 30;"Vend #";
	print #0; tab 37;"Vendor Name ";
	print #0; tab 71;"Amount"
endif
if jsprnt$="M"
	print #0; tab 7;"Entry#";
	print #0; tab 16;"Product";
	print #0; tab 30;"Comment";
	print #0; tab 48;"Reas";
	print #0; tab 54;"Wh";
	print #0; tab 71;"Amount"
endif
if jsprnt$="W"                      
	print #0; tab 4;"W.O.#";        
	print #0; tab 11;"Comp Date";   
	print #0; tab 22;"Product";     
	print #0; tab 37;"Description"; 
	print #0; tab 71;"Amount"       
endif                               
return
!!! not currently used for po/gl interface
if jsprnt$="X"
	print #0;tab 5;"Cntrl#";
	print #0;tab 13;"PO/DM#";
	print #0;tab 20;"Product";
	print #0;tab 34;"Prod Description";
	print #0;tab 61;"Wh";
	print #0;tab 71;"Amount"
endif
! not currently used - po/gl variance
if jsprnt$="V"
	print #0;tab 4;"Product";
	print #0; tab 17;"Description";
	print #0; tab 37;"Source";
	print #0; tab 71;"Amount"
endif
! purchase orders and debit memos not currently used
if jsprnt$="P" or jsprnt$="Q"
	print #0; tab 7;
	if jsprnt$="P" print#0;  "PO #"; else print #0;"D/M #";
	print #0; tab 23;"Date";
	print #0; tab 30;"Vend #";
	print #0; tab 37;"Vendor Name ";
	print #0; tab 71;"Amount"
endif
return


!
PRNTJSUM: Rem print journal summary
if j8<>0 ! ending balance
		let tmp1$=""
		if s9<>0 let tmp1$ = trim$(Client using "####"),fdel$! client
		let acctnum=m$[1,12]
		tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
		let desc$=trim$(m$[15,34])
		gosub chkcomma: 
		tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
		if cp1$[1,4]=cp2$[1,4]
			tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4],fdel$
		else
			tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
		endif
		tmp1$=tmp1$,glsrc$[1,2],fdel$
		tmp1$ = tmp1$, ".00", fdel$ ! beginning balance
		if glamt>0
			tmp1$ = tmp1$, TRIM$(glamt using bex$) , fdel$ ! debit
			tmp1$ = tmp1$, ".00", fdel$ ! credit
		else
			tmp1$ = tmp1$, ".00" , fdel$ ! debit
			tmp1$ = tmp1$, TRIM$(glamt using bex$) , fdel$
		endif
		tmp1$ = tmp1$, ".00", fdel$ ! ending balance
		call addtostr(e$,rstr$,tmp1$+rdel$)
  Return
End if
!
Print #0; Tab 15;GLSRC$[1,2];
If GLAMT >= 0
  Print #0; Using Ex$; Tab 29;GLAMT;
Else 
  Print #0; Using Ex$; Tab 47;GLAMT;"-";
End If 
Print #0;""
Return 
!
GETDETAIL: Rem gotrhough detail record for an account
For I = 0 To 5 \ T3[I] = 0 \ U3[I] = 0 \ Next I
U3[0] = H3[0]
SUBPER[0] = 0;SUBDETFLAG = 0
DETFLAG = 0
GLTKEY$ = " ",GLTKEY$;GLTKEY$[1,12] = M$[1,12]
GLTKEY$[13,14] = CP1$[3,4];GLTKEY$[15,16] = CP1$[1,2]
If FYE = 0 And CP1$[3,4] = "99" Let GLTKEY$[13,14] = "  "
if reptype$="D"
	if j8<>0
		tmp1$=""
		if s9<>0 let tmp1$ = trim$(Client using "####"),fdel$! client
		let acctnum=m$[1,12]
		tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
		let desc$=trim$(m$[15,34])
		gosub chkcomma: 
		tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
		!if cp1$[1,4]=cp2$[1,4]
		!	
		!else
		!	tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
		!endif
		tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4],fdel$ ! accounting period
		tmp1$ = tmp1$, "*" ,fdel$ ! js code
		tmp1$ = tmp1$, cp1$[1,2],"/","01/",cp1$[3,4],fdel$ ! date
		tmp1$ = tmp1$, "",fdel$! refnum
		tmp1$ = tmp1$, "" ,fdel$ ! batch num
		tmp1$ = tmp1$, "Beginning Balance",fdel$ ! description
		tmp1$ = tmp1$, TRIM$(h3[0] using bex$), fdel$ ! beginning balance
		tmp1$ = tmp1$, ".00", fdel$ ! debit
		tmp1$ = tmp1$,".00",fdel$! credit
		tmp1$ = tmp1$, ".00", fdel$ ! ending balance
		call addtostr(e$,rstr$,tmp1$+rdel$)
	end if
endif 

! mtg 
SRCHDETAIL: Rem search for detail
Search #3,3,DETPRNT;GLTKEY$,R[3],E
If E = 2 Goto ENDSRCHDETAIL
!!If E Gosub ERR_SEARCH
If GLTKEY$[1,12] <> M$[1,12] Goto ENDSRCHDETAIL
Mat Read #3,R[3],0;GLT$;
Y = GLT$[67,70] \ GLT$[67,70] = Y Using "&&&&"
If FYE = 0 And GLT$[67,68] = "00" Let Y = Y + 10000
If Y < B1 Goto SRCHDETAIL
If Y > F1 Goto ENDSRCHDETAIL
If SUBT <> 0 And REPTYPE$ = "D"
  SUBPER[1] = GLT$[67,70]
  If SUBPER[0]
    If SUBPER[0] <> SUBPER[1]
      Gosub PRNTSUBTOTAL
    End If 
  End If 
  SUBPER[0] = SUBPER[1]
  SUBDETFLAG = 99
End If 
Mat Read #3,R[3],92;GLT0;
mat read #3,r[3],100;glt1;
If REPTYPE$ = "J"
  If Not(GLT0) Goto SRCHDETAIL
  GLACCT$[1,12] = GLT$[3,14]
  GLSRC$[1,2] = GLT$[1,2]
  K9$ = " ",K9$;K9$[1,12] = GLACCT$[1,12]
  K9$[13,14] = GLSRC$[1,2]
  Search #glch,2,1;K9$,REC_SRT,E 
  If E = 1
    GLAMT = 0
    E = 2 \ Search #glch,1,0;K9$,REC_SRT,E 
    Mat Write #glch,REC_SRT,0;GLACCT$;
    Mat Write #glch,REC_SRT,12;GLSRC$;
    Mat Write #glch,REC_SRT,14;GLAMT;
    Search #glch,4,1;K9$,REC_SRT,E 
	If E Let e$ = "syserrorfile 634 sortfile mode (m)=4 keyno (k)=1 r=",REC_SRT," e=",e," keyval (k$)=",K9$ \error 10000
  End If 
  Mat Read #glch,REC_SRT,14;GLAMT
  GLAMT = GLAMT + GLT0
  Mat Write #glch,REC_SRT,14;GLAMT;
  Goto SRCHDETAIL
End If 
If REPTYPE$ = "D"
  If Not(DETFLAG)
    Gosub PRNTPAGEHEAD
    Gosub PRNTACCTHEAD
    DETFLAG = 99
    if Not(J8) Print #0;"" \ L = L + 1
  End If 
  Gosub PRNTPAGEHEAD
  Gosub PRNTDETAIL
End If 
If GLT0 > 0
  H3[4] = H3[4] + GLT0
  U3[4] = U3[4] + GLT0
Else 
  H3[5] = H3[5] + GLT0
  U3[5] = U3[5] + GLT0
End If 
if gldet<>0
	for c9=1 to 12
		if glt$[2,2]=jscode$[c9,c9] goto chk2prnt:
	next c9
	goto endchkprnt:
	chk2prnt: ! check if ok to print
	if not(jscode[c9]) goto endchkprnt:
	let jsprnt$=glt$[2,2]
	on c9 gosub getapdet:,getardet:,getcddet:,getardet:,getpodet:,getmrdet:
    on (c9-6) gosub getcrdet:,getardet:,getpodet:,getvrdet:, getmfgdet:, getxadet:
	endchkprnt: ! end the check print
endif
Goto SRCHDETAIL
ENDSRCHDETAIL: Rem end srchdetail
if reptype$="D"
	if j8<>0
		tmp1$=""
		if s9<>0 let tmp1$ = trim$(client using "####"),fdel$! client
		let acctnum=m$[1,12]
		tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
		!tmp1$ = tmp1$,rtrim$(M$[15,34]),fdel$
		let desc$=trim$(m$[15,34])
		gosub chkcomma: 
		tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
		!if cp1$[1,4]=cp2$[1,4]
		!	
		!else
		!	tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
		!endif
		tmp1$=tmp1$,CP2$[1,2],"/",CP2$[3,4],fdel$ ! accounting period
		tmp1$ = tmp1$, "*" ,fdel$ ! js code
		tmp1$ = tmp1$, "",fdel$ ! cp1$[1,2],"/","01/",cp1$[3,4],fdel$ ! date
		tmp1$ = tmp1$, "",fdel$! refnum
		tmp1$ = tmp1$, "" ,fdel$ ! batch num
		tmp1$ = tmp1$, "Ending Balance",fdel$ ! description
		tmp1$ = tmp1$, ".00", fdel$ ! beginning balance
		tmp1$ = tmp1$, ".00", fdel$ ! debit
		tmp1$ = tmp1$, ".00",fdel$! credit
		tmp1$ = tmp1$, TRIM$(h3[2] using bex$), fdel$ ! ending balance
		call addtostr(e$,rstr$,tmp1$+rdel$)
	end if
endif 
! mtgprn
If REPTYPE$ = "J"
  If SUPRZ
    If H3[0] = 0 And H3[1] = 0 And H3[2] = 0
      K9$ = " ",K9$;K9$[1,12] = M$[1,12]
      Search #glch,3,1;K9$,REC_SRT,E 
      if E = 2 Return 
      If K9$[1,12] <> M$[1,12] Return 
    End If 
  End If 
  Gosub PRNTPAGEHEAD
  Gosub PRNTACCTHEAD
  if j8<>0 ! beginning balance
		if m$[13,13]="3" return ! not using totals
		let tmp1$=""
		if s9<>0 let tmp1$ = trim$(client using "####"),fdel$! client
		let acctnum=m$[1,12]
		tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
		let desc$=trim$(m$[15,34])
		gosub chkcomma: 
		tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
		!tmp1$ = tmp1$,rtrim$(M$[15,34]),fdel$
		if cp1$[1,4]=cp2$[1,4]
			tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4],fdel$
		else
			tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
		endif
		tmp1$=tmp1$,"*",fdel$
		tmp1$ = tmp1$, TRIM$(h3[0] using bex$), fdel$ ! beginning balance
		tmp1$ = tmp1$, ".00", fdel$ ! debit
		tmp1$ = tmp1$, ".00" , fdel$ ! credit
		tmp1$ = tmp1$, ".00" , fdel$ ! ending balance
		call addtostr(e$,rstr$,tmp1$+rdel$)
   endif 
  K9$ = " ",K9$;K9$[1,12] = M$[1,12]
SRCHGLSRT: Rem srchglsrtfile
  Search #glch,3,1;K9$,REC_SRT,E 
  if E = 2 Goto ENDSRCHGLSRT
  If K9$[1,12] <> M$[1,12] Goto SRCHGLSRT
  Mat Read #glch,REC_SRT,0;GLACCT$;
  Mat Read #glch,REC_SRT,12;GLSRC$;
  Mat Read #glch,REC_SRT,14;GLAMT;
  Gosub PRNTPAGEHEAD
  Gosub PRNTJSUM
  If GLAMT > 0
    H3[4] = H3[4] + GLAMT
  Else 
    H3[5] = H3[5] + GLAMT
  End If 
  Goto SRCHGLSRT
ENDSRCHGLSRT: Rem end journal source search
  if j8<>0 ! ending balance
		let tmp1$=""
		if s9<>0 let tmp1$ = trim$(client using "####"),fdel$! client
		let acctnum=m$[1,12]
		tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
		!tmp1$ = tmp1$,rtrim$(M$[15,34]),fdel$
		let desc$=trim$(m$[15,34])
		gosub chkcomma: 
		tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
		if cp1$[1,4]=cp2$[1,4]
			tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4],fdel$
		else
			tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
		endif
		tmp1$=tmp1$,"*",fdel$
		tmp1$ = tmp1$, ".00", fdel$ ! beginning balance
		tmp1$ = tmp1$, ".00", fdel$ ! debit
		tmp1$ = tmp1$, ".00" , fdel$ ! credit
		tmp1$ = tmp1$, TRIM$(h3[2] using bex$) , fdel$ ! ending balance
		call addtostr(e$,rstr$,tmp1$+rdel$)
   else
	Gosub PRNTPAGEHEAD
	Gosub PRNTACCTTOTAL
  endif
  Gosub CLR_GLSRTMP
  Return 
End If 
If REPTYPE$ = "S" Or Not(DETFLAG)
  If SUPRZ = 1
    If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 And H3[3] = 0 And H3[4] = 0 Return 
  End If 
  Gosub PRNTPAGEHEAD
  Gosub PRNTACCTHEAD
End If 
If REPTYPE$ = "D" And DETFLAG <> 0
  If SUBT
    If SUBDETFLAG Gosub PRNTSUBTOTAL
  Else 
    if Not(J8) Print #0;"" \ L = L + 1
  End If 
End If 
Gosub PRNTPAGEHEAD
Gosub PRNTACCTTOTAL
Return 
!
PRNTDETAIL: Rem PRINT DETAIL DATA
if j8<>0
	tmp1$=""
	if s9<>0 let tmp1$ = trim$(client using "####"),fdel$! client
	let acctnum=m$[1,12]
	tmp1$ = tmp1$,trim$(acctnum using "########"),fdel$
	!tmp1$ = tmp1$,rtrim$(M$[15,34]),fdel$
	let desc$=trim$(m$[15,34])
	gosub chkcomma: 
	tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! acct desc
	!if cp1$[1,4]=cp2$[1,4]
	!	tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4],fdel$
	!else
	!	tmp1$=tmp1$,CP1$[1,2],"/",CP1$[3,4]," To ",CP2$[1,2],"/",CP2$[3,4],fdel$
	!endif
	tmp1$ = tmp1$,GLT$[69,70],"/",GLT$[67,68],fdel$ ! period
	tmp1$ = tmp1$, GLT$[2,2],fdel$ ! js code
	tmp1$ = tmp1$, GLT$[61,62],"/",GLT$[63,64],"/",GLT$[65,66],fdel$ ! date
	tmp1$ = tmp1$, trim$(GLT$[15,20]),fdel$! refnum
	tmp1$ = tmp1$, trim$(GLT$[72,74]) ,fdel$ ! batch num
	let desc$=trim$(glt$[21,60])
	gosub chkcomma: 
	tmp1$ = tmp1$,rtrim$(desc$),fdel$ ! entry description
	! tmp1$ = tmp1$, rtrim$(GLT$[21,50]),fdel$ ! description
	tmp1$ = tmp1$, ".00", fdel$ ! beginning balance
	if glt0>=0
		tmp1$ = tmp1$, TRIM$(glt0 using bex$), fdel$ ! debit
		tmp1$=tmp1$,".00",fdel$
	else
		tmp1$=tmp1$,".00",fdel$
		tmp1$ = tmp1$, TRIM$(glt0 using bex$), fdel$ ! credit
	endif
	tmp1$ = tmp1$, ".00", fdel$ ! ending balance
    call addtostr(e$,rstr$,tmp1$+rdel$)
  Return 
end if
!
Print #0;GLT$[2,2];
Print #0; Tab 3;GLT$[61,62];"/";GLT$[63,64];"/";GLT$[65,66];
Print #0; Tab 13;GLT$[15,20];
Print #0; Tab 21;GLT$[72,74];
Print #0; Tab 26;GLT$[21,53];
If GLT0 >= 0
  Print #0; Using Ex$; Tab 59;GLT0;
Else 
  Print #0; Using Ex$; Tab 78;GLT0;"-";
End If 
Print #0;""
If GLT0 >= 0
  T3[1] = T3[1] + GLT0
Else 
  T3[0] = T3[0] + GLT0
End If 
Return 
!
PRNTDETTOTAL: Rem PRINT TOTALS
if j8 return
!
Print #0;""
Print #0; Tab 22;"TOTAL";
If T3[1] + T3[0] <> H3[1] Print #0; Tab 41;"****";
Print #0; Using Ex$; Tab 50;T3[1];" ";T3[0];"-"
Print #0;""
L = L + 2
Return 

getapdet: ! get ap detail - jscode ="A"
if glt$[33,33]="/" return ! already posted in detail
let prgnum=glt1[4] ! prgnum
if not (prgnum)
	if glt$[21,36]="PURCHASE JOURNAL" let prgnum=512
	if glt$[21,37]="RECURRING ENTRIES" let prgnum=519
	if glt$[21,36]="ADJUSTMENTS JRNL" LET prgnum=516
endif
let prntjsflag=0
let fname$="4/GLAPDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchapdet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
if prgnum
	mat read #90,rec_gld,116;srcprg;
	if srcprg<>prgnum goto srchapdet:
endif
mat read #90,rec_gld,82;trans$;
mat read #90,rec_gld,16;trandate;
mat read #90,rec_gld,8;vend;
mat read #90,rec_gld,52;vendname$;
mat read #90,rec_gld,106;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; tab 4;trans$; 
let x2=trandate\gosub isdunpack:
print #0; tab 21;x$[1,8];
print #0; using "######";tab 30; vend;
print #0; tab 37;vendname$[1,27];
print #0; using "---------.##";tab 65;gldamt
goto srchapdet:

getardet: ! get ar detail  jscode ="C", "S", "E"
let prntjsflag=0
let fname$="4/GLARDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchardet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,82;srccode$;
if srccode$[1,2]<>glt$[1,2] goto srchardet:
mat read #90,rec_gld,96;artran;
mat read #90,rec_gld,16;trandate;
mat read #90,rec_gld,8;cust;
mat read #90,rec_gld,52;custname$;
mat read #90,rec_gld,84;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; using "########";tab 5;artran; 
let x2=trandate\gosub isdunpack:
print #0; tab 14;x$[1,8];
print #0; using "######";tab 23; cust;
print #0; tab 30;custname$[1,30];
print #0; using "---------.##";tab 65;gldamt
goto srchardet:

getpodet: ! get po detail jscode="P" or "Q"
let prgnum=glt1[4]
let prntjsflag=0
let fname$="4/GLPODETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchpodet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,92;srcprg;
if prgnum<>0
	 if srcprg<>prgnum goto srchpodet:
else
	if glt$[2,2]="Q"
		if srcprg<>385 goto srchpodet:
	else
		if srcprg=385 goto srchpodet:
	endif
endif
mat read #90,rec_gld,96;potran;
mat read #90,rec_gld,16;trandate;
mat read #90,rec_gld,8;vend;
mat read #90,rec_gld,52;vendname$;
mat read #90,rec_gld,84;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; using "########";tab 5;potran; 
let x2=trandate\gosub isdunpack:
print #0; tab 14;x$[1,8];
print #0; using "######";tab 23; vend;
print #0; tab 30;vendname$[1,30];
print #0; using "---------.##";tab 65;gldamt
goto srchpodet:

getcrdet: ! get cr detail jscode="R"
let prntjsflag=0
let fname$="4/GLCRDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchcrdet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,12;crtran;
mat read #90,rec_gld,16;trandate;
mat read #90,rec_gld,8;cust;
mat read #90,rec_gld,52;custname$;
mat read #90,rec_gld,84;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; using "######";tab 5;crtran; 
let x2=trandate\gosub isdunpack:
print #0; tab 14;x$[1,8];
print #0; using "######";tab 23;cust;
print #0; tab 30;custname$[1,30];
print #0; using "---------.##";tab 65;gldamt
goto srchcrdet:

getcddet: ! get cd detail - jscode "D"
let prntjsflag=0
let fname$="4/GLCDDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchcddet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,12;check;
mat read #90,rec_gld,94;bank;
mat read #90,rec_gld,16;trandate;
mat read #90,rec_gld,8;vend;
mat read #90,rec_gld,52;vendname$;
mat read #90,rec_gld,82;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; using "######";tab 6;check; 
print #0; using "##";tab 16;bank;
let x2=trandate\gosub isdunpack:
print #0; tab 21;x$[1,8];
print #0; using "######";tab 30;vend;
print #0; tab 37;vendname$[1,27];
print #0; using "---------.##";tab 65;gldamt
goto srchcddet:

getmrdet: ! get mr detail - jscode ="M"
let rcode=glt$[44,47]
let prntjsflag=0
let fname$="4/GLMRDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchmrdet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,102;rsncode;
if rcode<>0 and rsncode<>rcode goto srchmrdet:
mat read #90,rec_gld,130;entry;
mat read #90,rec_gld,32;prodcode$;
mat read #90,rec_gld,44;comment$;
mat read #90,rec_gld,102;reason;
mat read #90,rec_gld,104;whse;
mat read #90,rec_gld,160;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; using "########";tab 5;entry; 
print #0; tab 16;prodcode$;
print #0; tab 30;comment$;
print #0; using "####";tab 48;reason;
print #0; using "##";tab 56;whse;
print #0; using "---------.##";tab 65;gldamt
goto srchmrdet:

getvrdet: ! get vr detail - jscode ="V"
let prntjsflag=0
let fname$="4/GLVRDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchvrdet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,82;prodcode$;
mat read #90,rec_gld,52;proddesc$;
mat read #90,rec_gld,114;whse;
mat read #90,rec_gld,120;vrsrc$;
mat read #90,rec_gld,106;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; tab 4;prodcode$; 
print #0; tab 17;proddesc$[1,19];
print #0; tab 37;vrsrc$[1,27];
print #0; using "---------.##";tab 65;gldamt
goto srchvrdet:

getmfgdet: ! get mfg detail - jscode ="W"
let prntjsflag=0
let fname$="4/GLMFGDETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchmfgdet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
mat read #90,rec_gld,96;wo$;
mat read #90,rec_gld,16;trandate;
mat read #90,rec_gld,28;prodcode$;
mat read #90,rec_gld,52;proddesc$;
mat read #90,rec_gld,84;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsFlag=99
endif
gosub prntpagehead: 
print #0; tab 4;wo$; 
let x2=trandate\gosub isdunpack:
print #0; tab 12;x$[1,8];
print #0; tab 22;prodcode$[1,12];
print #0; tab 37;proddesc$[1,27];
print #0; using "---------.##";tab 65;gldamt
goto srchmfgdet:

getxadet: ! get mr detail - jscode ="M"
let prntjsflag=0
let fname$="4/GLXADETL"+str$(GLT1[0])
Call FindF(fname$,a9)
if not (a9) return ! detail file is not avail
tRY
	close #90
else
	! channel not open
end try
ropen #90,fname$
let keygld$=" ",keygld$
let dacper=glt$[67,70]
let keygld$[1,4]=dacper using "&&&&"
let keygld$[5,16]=glt$[3,14]
let keygld$[17,22]=glt1[2] using "######"
let keychk$=" ",keychk$;keychk$[1,22]=keygld$[1,22]
srchxadet: ! 
search #90,3,1;keygld$,rec_gld,e
if e=2
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\l=l+1
	endif
	return
endif
if e gosub err_search:
if keygld$[1,22]<>keychk$[1,22]
	if (prntjsflag)
		print #0;tab 3;lines$[3,79]\let l=l+1
		print #0;""\let l=l+1
	endif
	return
endif
!!!! adjust line here for print
mat read #90,rec_gld,20;ponum;
mat read #90,rec_gld,32;pocntrl;
mat read #90,rec_gld,52;prodcode$;
mat read #90,rec_gld,64;proddesc$;
mat read #90,rec_gld,182;whse;
mat read #90,rec_gld,244;gldamt;
if not (prntjsflag)
	gosub prntjshead:
	let prntjsflag=99
endif
gosub prntpagehead: 
print #0; using "######";tab 5;pocntrl; 
print #0; using "######";tab 13;ponum;
print #0; tab 20;prodcode$;
print #0; tab 34;proddesc$[1,25];
print #0; using "##";tab 61;whse;
print #0; using "---------.##";tab 65;gldamt
goto srchxadet:


!
CALCBEGBS: Rem....A,C,L TYPE ACCOUNTS OPENING BALANCE
For I = 0 To (C1[0] - 1)
  H3[0] = H3[0] + M3[I]
Next I
Return 
!
CALCBEGIS: Rem....E,I,O,R TYPE ACCOUNTS OPENING BALANCE
For I = C1[1] To (C1[0] - 1)
  H3[0] = H3[0] + M3[I]
Next I
Return 
!
CALCCURR: Rem CURRENT CALC
For I = C1[0] To C1[2]
  H3[1] = H3[1] + M3[I]
Next I
H3[2] = H3[0] + H3[1]
Return 
!
GETYTDINC: Rem....YTD  "N"  "NN" TYPE ACCOUNTS
For I = C1[1] To C1[2]
  H3[3] = H3[3] + M3[I]
Next I
Return 

CHKCOMMA: REM check for comma in description and change to 
FOR X=1 TO LEN(DESC$)                                      
  IF DESC$[X,X]="," LET DESC$[X,X]="'"                     
NEXT X                                                     
RETURN                                                     
!
!!GETCURRPERIOD: Rem get current period  #1
!!J0$ = "3000043205"
!!J2$ = "&&&&" \ J1 = CPER[0]
!!J5$ = "Enter Starting Current Accounting Period (MMYY)  0: end"
!!Gosub ISINPUT
!!If J4$ = "0" Goto OUTEND
!!CP1$ = J1 Using "&&&&"
!!PERIOD$ = CP1$[3,4],CP1$[1,2]
!!B1 = PERIOD$[1,4]
!!Gosub VERIFYPERIOD
!!Goto GETCURRPERIOD
!!C1[0] = X1
!!C1[1] = X3
!!CPER[0] = J1
!!Print Using "&&&&";@32,5;CPER[0];
!!CP1$ = CPER[0] Using "&&&&"
!!GETECURRPERIOD: Rem get ending current period
!!If Not(CPER[1]) Let CPER[1] = CPER[0]
!!J0$ = "3000 45105"
!!J2$ = "&&&&" \ J1 = CPER[1]
!!J5$ = "Enter Ending Current Account Period (MMYY)  0:end"
!!Gosub ISINPUT
!!If J4$ = "0" Goto OUTEND
!!CP2$ = J1 Using "&&&&"
!!PERIOD$ = CP2$[3,4],CP2$[1,2]
!!F1 = PERIOD$[1,4]
!!Gosub VERIFYPERIOD
!!Goto GETECURRPERIOD
!!If X3 <> C1[1] ! crossed fiscal year
!!  Print @0,23;'CL RB';"Accounting Periods Must Be in Same Fiscal Year";
!!  Signal 3,20
!!  Goto GETECURRPERIOD
!!End If 
!!CPER[1] = J1
!!C1[2] = X1
!!If C1[0] > C1[2] ! staring period greater than ending period
!!  Print @0,23;'CL RB';"Ending Current Accounting Period Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETCURRPERIOD
!!End If 
!!Print Using "&&&&";@51,5;CPER[1];
!!CP2$ = CPER[1] Using "&&&&"
!!Return 
!!GETREPTYPE: Rem prompt for detail or summary  #2
!!J0$ = "2 00013707"
!!J1$ = REPTYPE$
!!J5$ = "Enter Report Type:  D=Detail,  S=Summary,  J=Source Summary"
!!Gosub ISINPUT
!!If J$ <> "D" And J$ <> "S" And J$ <> "J" Goto GETREPTYPE
!!REPTYPE$ = J$
!!If REPTYPE$ = "D"
!!GETDETPRNTOPT: Rem detail print option
!!  Print @0,8;"   Detail Print Option"; Tab 45;"1=Journal Source 2=Posting Date"
!!  J0$ = "3000013708"
!!  J2$ = "#";J1 = DETPRNT
!!  J5$ = "Enter Detail Print Option: 1=Journal Source Code or 2=Posting Date"
!!  Gosub ISINPUT
!!  If J1 < 1 Or J1 > 2
!!    Print @0,23;'CL';"Invalid Selection!"; \ Signal 3,10 \ Print @0,23;'CL';
!!    Goto GETDETPRNTOPT
!!  End If 
!!  DETPRNT = J1
!!  Gosub GETSUBTOTAL
!!Else 
!!  Print @0,8;'CL';
!!  Print @0,9;'CL';
!!  DETPRNT = 2
!!  SUBT = 0
!!End If 
!!Return 
!!GETSUBTOTAL: Rem prompt to subtotal by accounting period
!!If CP1$[1,4] = CP2$[1,4]
!!  Print @0,9;'CL';
!!  SUBT = 0
!!Else 
!!  Print @0,9;"   Print Subtotals";
!!  J0$ = "6000 13709"
!!  J2$ = "#" \ J1 = SUBT
!!  J5$ = "Do you want to print subtotals by accounting period (Y/N)"
!!  Gosub ISINPUT
!!  SUBT = J1
!!End If 
!!Return 
!!GETACCTNUM: Rem prompt for account number range #3
!!J0$ = "3000082811"
!!J2$ = "########" \ J1 = SACCT
!!J5$ = "Enter Starting Account Number"
!!Gosub ISINPUT
!!SACCT = J1
!!J0$ = "3000 84811"
!!J2$ = "########" \ J1 = EACCT
!!J5$ = "Enter Ending Account Number"
!!Gosub ISINPUT
!!EACCT = J1
!!If SACCT > EACCT
!!  Print @0,23;'CL RB';"Ending Account Number Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETACCTNUM
!!End If 
!!Return 
!!GETSUPPRESS: Rem prompt to suppress zero account balances #4
!!J0$ = "6000 13713"
!!J2$ = "#" \ J1 = SUPRZ
!!J5$ = "Do you want to suppress print of zero account balances (Y/N)"
!!Gosub ISINPUT
!!SUPRZ = J1
!!Return 
!!PRNTSCRN: Rem print screen headings
!!Print @0,4;'CE';
!!Print @0,4;'CE';@29,4;'BR';"STARTING";'ER';@49,4;'BR';"ENDING";'ER';
!!Print @0,5;"1> ACCOUNTING PERIOD (MMYY)";
!!Print @0,7;"2> REPORT TYPE "; Tab 40;"D=Detail, S=Summary, J=Source Summary";
!!Print @0,11;"3> ACCOUNT NUMBER ";
!!Print @0,13;"4> SUPPRESS ZERO ACCT BALANCE";
!!Return 
!!PRNTSCRNDATA: Rem print screen data
!!Print Using "&&&&";@32,5;CPER[0];@51,5;CPER[1];
!!Print @37,7;REPTYPE$;
!!If REPTYPE$ = "D"
!!  Print @0,8;"   Detail Print Option"; Tab 45;"1=Journal Source 2=Posting Date"
!!  Print Using "#";@37,8;DETPRNT;
!!End If 
!!Print Using "########";@28,11;SACCT;@48,11;EACCT;
!!Print @37,13;
!!If SUPRZ Print "Y"; Else Print "N";
!!Return 
!
VERIFYPERIOD: Rem entered account period
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99" Goto PRNTBADDATE
If PERIOD$[1,2] <> PERIOD$[3,4]
  If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12" Goto PRNTBADDATE
End If 
N = Int(D3 / 100)
Q1 = PERIOD$
For X = 1 To D5
  If X <> 13 Or X <> 26 Or X <> 39
    If A3[X] = Q1 Goto PERIODFND
  End If 
Next X
comd = 2
!!Print @0,23;'CL RB';"Accounting Period Not Found "; \ Signal 3,30
!!Print @0,23;'CL';
Return 
!
PERIODFND: X1 = X
If X1 < N + 2 Let X3 = 0
If X1 > N + 1 Let X3 = N + 2
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 3
!!Return 1
return !!add
!
PRNTBADDATE: Rem  print invalid date entered
!!Print @0,23;'CL RB';"Invalid Accounting Period "; \ Signal 3,15
!!Print @0,23;'CL';
comd = 1
Return 
!
Rem {begin call.input.i}
!!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
ENDOFREPORT: Rem end of printing the report
!!If SRCPRT
!!  Print @0,23;'CL';"Press <CR> to end "; \ Input Len 1;""J$
!!End If 
!!Print 'CS';"-gl634-"; Tab 20;"GENERAL LEDGER REPORT #2 "
!!Print Using "####  ";@0,2;'CE';"CLIENT";@10,2;S;C$[11,50];
!!Gosub PRNTSCRN
!!Gosub PRNTSCRNDATA
!!If Err 0 Rem
!!Close #3
!!If Err 0 Gosub ERR_ESCAPE
If REPTYPE$ = "J" Gosub CLS_GLSRTMP
!!Goto SELOPT
GOTO OUTEND!!ADD
!
CREATE_GLSRTMP: Rem create sort file gl tmp for jscode                                    
TMPFNAME$ = "6/glsrtmp";TMPFNAME$[Len(TMPFNAME$) + 1] = rec_uac Using "&&&&&&"
CMD$ = "[1:50] files/",TMPFNAME$,"!"
glch = findchannel()
Build #glch,CMD$
REC_SRT = 20 \ Search #glch,0,1;K9$,REC_SRT,E !!\ If E Gosub ERR_SEARCH
REC_SRT = 1 \ Search #glch,0,0;K9$,REC_SRT,E !!\ If E Gosub ERR_SEARCH
tmp$ = "files/",TMPFNAME$," <666>"                                   
Modify tmp$                                                          
Try                                                                  
  Close #glch                                                 
Else    
  let eflag=eflag+1
  ReturnStatus = 0                                                   
  Message$ = "Error Creating SortFile "                 
  Goto outend                                                
End Try                               
Open #glch,TMPFNAME$
Return 
!
CLR_GLSRTMP: Rem clear glsrtmp
K9$ = " ",K9$
SRCHSRTMP: Search #glch,3,1;K9$,REC_SRT,E
If E = 2 Return 
Search #glch,5,1;K9$,REC_SRT,E 
If E Let e$ = "syserrorfile 634 sortfile mode (m)=5 keyno (k)=1 r=",REC_SRT," e=",e," keyval (k$)=",K9$ \error 10000
E = 3
Search #glch,1,0;K9$,REC_SRT,E 
Goto SRCHSRTMP
!
CLS_GLSRTMP: Rem close & remove file
!If Err 0 Rem
tRY Close #glch eLSE rEM
!!If Err 0 Gosub ERR_ESCAPE
TMPFNAME$ = "6/glsrtmp";TMPFNAME$[Len(TMPFNAME$) + 1] = rec_uac Using "&&&&&&"
Call FindF(TMPFNAME$,A9)
If A9<>0
	let tmp$="files/"+tmpfname$
	Kill TMP$
End If 
Return 
!
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("/tmp/634se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$   
Call Programdump()
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                               
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml ! browser
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If
if not (pageflag)
	if not(j8)
		Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
		let returnstatus=0
		If Eflag>0
			ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
			tmp$=""
		Endif
		if not(eflag)
			returnstatus=0
			if message$="" let message$="Complete "
		endif

		call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
		call AddToStr(e$,rstr$,WebStr$)
		call SetOutPut(e$,rstr$)
	! try Call dxclose() else rem
	endif
endif
ELSE
!
	GOTO ERR_TRAP:
end try
End ! the whole program


ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end

