! >>> Program 316f
!
! description A/R Open Service Charge Summary
!
! loadsave -w -n 100,10 -o prog/dxport/316f.dl4 src/316f.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 19, 2005  09:07:10
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx316f.src (univ2) [txc] {33895}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX316F - OPEN SERVICE CHARGE SUMMARY REPORT
Rem AUTHOR: HANKY   FEB 11, 1988
Rem LAST UPDATE: rek 08/27/1992  frozen a/r file
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,FindF
! - Option Default Dialect IRIS1
Com 2%,AGE[7],S9[3],OPT,CUST[1],DIV[1],W1[1],SVCNUM
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
dim 3%,tmp3
!
Dim 1%,F,X1,A0[10],WHSE,FLAG,2%,D3[1]
Dim 2%,A2[5],X2,D9[5],H0[12],C5,R5,H5[8],E1[12]
Dim 3%,A3[11],J,X3,T9[20],CRDTOT,T2[25],ARREF[1]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],C1$[30],Z1$[50],K5$[25]
Dim J1$[40],J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8],D2$[10]
Dim p9$[50],p61$[256],ext$[5]
F = 0 \ CRDTOT = 0
If Err 0 Let F = Spc(8)
N = Chf(3)
If Err 0 Gosub ERR_TRAP
Mat Read #1,115,0;D9;
Read #1,3;CNAME$;
Read #1,18,30;D2$;
Mat read #1,19,50;p9$;
mat read #1,61,0;p61$;
Mat Read #1,0,100;ARDATE$;
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ SCRPRT = 0
If J8 let J9 = 18 \ SCRPRT = 99
!
! dx add xport reporting code
DXSetup:
Dim tmp$[800],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"316f",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("frozenacct",tmp$) \ S9[0]=tmp$  ! report option  0=current  1=frozen
if p61$[20,20]="Y" ! frozen by month
	call dxget("FRZMNTH",tmp$)
	if RTrim$(tmp$)<>"" let s9[0]=2
	x3=tmp$
	let x$=x3 using "&&&&"
	let ext$="."+x$
Endif
call dxget("frozendate",tmp$) \ S9[1]=tmp$ ! frozen aging date
call dxget("begcust",tmp$) \ CUST[0]=tmp$ ! starting customer #
call dxget("endcust",tmp$) \ if tmp$="" let CUST[1]=999999 else CUST[1]=tmp$ ! ending customer#
call dxget("begwhse",tmp$) \ if tmp$="" let W1[0]=0 else W1[0]=tmp$ ! beg warehouse
call dxget("endwhse",tmp$) \ if tmp$="" let W1[1]=99 else W1[1]=tmp$ ! end warehouse
call dxget("begdiv",tmp$) \ if tmp$="" let DIV[0]=0 else DIV[0]=tmp$ ! beg division
call dxget("enddiv",tmp$) \ if tmp$="" let DIV[1]=99 else DIV[1]=tmp$ ! end division
call dxget("svcnum",tmp$) \ SVCNUM=tmp$ ! service charge number 0=all
!  dx end
!
! frozen report
if S9[0] ! frozen
	if s9[1]<=0 let e$="Frozen Aging date is required" \ error 10000
  tmp$=S9[1] using "&&&&&&" \ S9[1]=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
  ARDATE = S9[1] \ X2 = ARDATE 
  Gosub L_7700 \ ARDATE$ = X$
else
  S9[1]=0 ! current
endif
!
! customer
if CUST[0]<0 or CUST[0]>999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
if CUST[1]<CUST[0] or CUST[1]>999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
! warehouse
if W1[0]<0 or W1[0]>99 let e$="Invalid starting warehouse, must be between 0 and 99!" \ error 10000
if W1[1]<W1[0] or W1[1]>99 let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
! division
if DIV[0]<0 or DIV[0]>99 let e$="Invalid starting division, must be between 0 and 99!" \ error 10000
if DIV[1]<DIV[0] or DIV[1]>99 let e$="Invalid ending division, must be between starting division and 99!" \ error 10000
!
! service charge number
if SVCNUM<0 or SVCNUM>999999 let e$="Invalid service charge number!" \ error 10000
!
if s9[0]=2
	read #1,88,1504;j$;
	j$=RTrim$(J$)+ext$
	call findf(j$,found)
	if not(found)
		e$="Frozen file for "+ext$+" not found" \ error 10000
	Endif
Endif

For I = 3 To 8
  Read L
  If Not(L) Goto L_845
  Read #1,88,L;J$;
  If I = 4 And S9[0] 
    if s9[0]=1 let J$[Len(J$) + 1] = ".FROZ" ! frozen a/r
	if s9[0]=2 let j$=RTrim$(J$)+ext$
  End If 
  Ropen #I,J$
L_845: Next I
Data "1808","1504","1840","1872","720","1824"
J$ = intCO Using "2/ARTERMCODE#" \ Ropen #50,J$
!
If S9[0] ! frozen"
  X2 = S9[1] \ Gosub L_7700
  ARDATE$ = X$
End If 
! 
! - If Not(SCRPRT)
! -   Print @0,22;'CE';"Printing...Please Wait";
! - End If 
! - If Err 0 Gosub ERR_ESCAPE
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
if J8 ! dx xml headings
  !
  tmp$="CUST #",fdel$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"REF DATE",fdel$,"PAID",fdel$
  tmp$=tmp$,"ORIG $",fdel$,"AMT PAID",fdel$,"BAL DUE",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
J1 = 99
K1$ = CUST[0] Using "######" \ K3$ = CUST[1] Using "######"
CUST1 = 0
Search #4,2,1;K1$,R1,E 
If Not(E) Goto L_2010
L_2000: 
Search #4,3,1;K1$,R1,E 
If E Goto L_9100
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_9100
If K1$[17,17] <> "2" Goto L_2000
Mat Read #4,R1,0;A2;
Mat Read #4,R1,24;A3;
Mat Read #4,R1,124;A0;
Mat Read #4,R1,316;ARREF;
If SVCNUM And ARREF[0] <> SVCNUM Goto L_2000
If A0[3] < W1[0] Or A0[3] > W1[1] Goto L_2000
If A0[5] < DIV[0] Or A0[5] > DIV[1] Goto L_2000
X2 = A2[4] \ Gosub L_7770
Gosub L_3000
T9 = A3[1] + A3[2] + A3[3]
T9[1] = A3 - T9
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
If CUST1 <> E1[1] Gosub L_3200
CUST1 = E1[1]
T9[4] = T9[4] + A3
T9[5] = T9[5] + T9
T9[6] = T9[6] + T9[1]
Return 
!
L_3000: Rem GET CUST
J2$ = " ",J2$ \ J2$ = A2[2] Using "######"
Search #3,2,1;J2$,R3,E 
If E =0
  Mat Read #3,R3,30;C1$;
  Mat Read #3,R3,142;E1;
else
  C1$ = "CUSTOMER NOT FOUND!"
endif
Return 
!
L_3200: K5$ = " ",K5$
K5$ = E1[1] Using "######"
L_3220: Search #5,3,2;K5$,R5,E 
If E=0
  C5 = K5$[1,6] \ If C5 <> E1[1] Goto L_3310
  Mat Read #5,R5;H0; \ Mat Read #5,R5,104;H5;
  If Fra(H0[3]) <> 0 Or H0[3] < 0 Or H0[3] > Chf(4) - 1 Goto L_3300
  If DIV If DIV <> H5[8] Goto L_3300
  If H0 >= 9 And H0 <= 11
    Mat Read #6,H0[3],8;T2
    CRDTOT = CRDTOT + T2[0]
  End If 
L_3300: 
  Goto L_3220
endif
L_3310: Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
Print #0; Using "####,###.##"; Tab 74;T9[4];
Print #0; Using "####,###.##"; Tab 93;T9[5];
Print #0; Using "####,###.##"; Tab 112;T9[6];
For X0 = 0 To 20 \ T9[X0] = 0 \ Next X0
If CRDTOT <> 0
  Print #0;"\15\     TOTAL PENDING CREDIT ";
  Print #0; Using "---,---,---.##"; Tab 27;CRDTOT;
End If 
CRDTOT = 0
Return 
!
L_5000: Rem PRINT LINE
if J8
  tmp$=A2[2] using "######",fdel$,rtrim$(C1$[1,30]),fdel$
  X2 = A2[4] \ Gosub L_7770
  tmp$=tmp$,X$[1,8],fdel$
  X2 = A2[1] \ Gosub L_7700
  tmp$=tmp$,X$[1,8],fdel$
  tmp$=tmp$,A3 Using "####,###.##",fdel$
  tmp$=tmp$,T9 Using "####,###.##",fdel$
  tmp$=tmp$,T9[1] Using "####,###.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Rem {begin src/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
Print #0; Using "######"; Tab 8;A2[2];
Print #0; Tab 22;C1$[1,30];
X2 = A2[4] \ Gosub L_7770
Print #0; Tab 55;X$[1,8];
X2 = A2[1] \ Gosub L_7700
Print #0; Tab 65;X$[1,8];
Print #0; Using "####,###.##"; Tab 74;A3;
Print #0; Using "####,###.##"; Tab 93;T9;
Print #0; Using "####,###.##"; Tab 112;T9[1];
Print #0;""
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
If V9 <> 0 And J8 <> 0 goto OUTEND
! - HEADMORE: Rem check for more
! -   Print @0,23;'CL';"Press  <CR>: continue  E: exit ";
! -   Input Len 1;""J1$
! -   Call String(1,J1$)
! -   If J1$ = "E" Goto OUTEND
! -   If J1$ <> "" Goto HEADMORE
! - End If 
If V9 If Not(J8) Print #0;"\14\";
V9 = V9 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\"; Else Print 'CS';
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";V9
Print #0;" -MX316F- ";Msc$(3);
Print #0; Tab 46;"O P E N   S E R V I C E   C H A R G E S"
If S9[0] Print #0; Tab 1;"FROZEN FILE"; Else Print #0; Tab 1;"CURRENT FILE";
Print #0; Tab 46;D2$;": ";
Print #0; Using "##";W1[0];" THRU ";W1[1];
Print #0;"   DIVISION: ";
Print #0; Using "###";DIV[0];" THRU ";DIV[1];
If SVCNUM
  Print #0; Using "########"; Tab 100;"SVC CHG # ";SVCNUM;
End If 
Print #0;""
Print #0;""
Print #0; Tab 8;"CUST #";
Print #0; Tab 22;"CUSTOMER NAME";
Print #0; Tab 55;"REF DATE   PAID";
Print #0; Tab 79;"ORIG $";
Print #0; Tab 96;"AMT PAID";
Print #0; Tab 116;"BAL DUE";
Print #0;" "
Print #0;""
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_7770: Rem DATE JULIAN X2 TO X$
D3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",D3[],X$,FLAG
Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6]
! - Return 
!
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
! - D3[0] = X2;D3[1] = X2;FLAG = 0
! - Call "JULIANUTIL",D3[],X$,FLAG
! - Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000C"
! 
L_9100: Rem END OF THIS RANGE
Gosub L_4000
If Not(J8) Print #0;"\14\"
goto OUTEND
!
! - ENDMORE: Rem end ask to continue
! - Print @0,22;'CL';"End of Report Range.  Press <CR>: continue  E: exit ";
! - Input Len 1;""J1$
! - Call String(1,J1$)
! - If J1$ = "E" Goto OUTEND
! - If J1$ <> "" Goto ENDMORE
! - L_9030: If Not(J8) Print #0;"\14\"
! - For X = 3 To 8 \ Close #X \ Next X
! - Close #50
! - Chain "mx316a"
! 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
