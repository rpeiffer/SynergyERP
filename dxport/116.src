!>>> Program 116
!
! description: ZONE FILE LISTING
!
! loadsave -w -n 100,10 -o prog/dxport/116.dl4 src/116.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"  ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 21, 2001  14:36:33
Rem /usr/acct/r97//usr/acct/jcs/work/devl/mx1/mx116.src (univ2) [jcs] {48902}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX116 - ZONE FILE LISTING
Rem AUTHOR: DEVO   FEB  7, 1989
Rem LAST UPDATE: 09/92 - BETCO SPECS
!
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
If Err 0 Gosub ERR_TRAP
Dim D$[28],T2$[7],Z2$[30],Z3$[12],P61$[256]
Dim 1%,Z0,Z2[4]
Dim 2%,D0,D1,Z1[4]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[2],K3$[2],X$[10],T9$[26]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="}",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 2
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
Mat Read #1,61,0;P61$;
Data "1920"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 62 \ If J8 Let J9 = 21
!
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"116",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("SZONE",K2$) \ K2$ = K2$,Blank$
call dxget("EZONE",K3$) \ K3$ = K3$,EndParam$
!
If K3$ < K2$ Let e$ = "Invalid ending zone, must be >= than starting zone!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!!L_900: Rem GET RANGES
!!Print @0,21;"ENTER STARTING ZONE, <CR> FOR ALL,  E: end : ";'CE';
!!Input ""K2$ \ If K2$ = "E" Goto OUTEND
!!If K2$ = "" Let K3$ = "}}}}}}" \ Goto L_970
!!Print @0,23;"ENTER ENDING   ZONE, <CR> FOR LAST, E: end : ";'CL';
!!Input ""K3$ \ If K3$ = "E" Goto OUTEND
!!If K3$ = "" Let K3$ = "}}}}}}"
!!L_970: If K2$ <= K3$ Goto L_990
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!!L_990: 
!
If J8
  tmp$ = "ZONE",fdel$
  tmp$ = tmp$, "ZONE DESCRIPTION",fdel$
  tmp$ = tmp$, "ZONE DESCRIPTION 2",fdel$
  If P61$[34,34] <> "Y"
    tmp$ = tmp$, "LEAD TIME",fdel$
  End If 
  tmp$ = tmp$, "TRUCK #",fdel$
  If P61$[34,34] <> "Y"
    tmp$ = tmp$, "MO",fdel$
    tmp$ = tmp$, "TU",fdel$
    tmp$ = tmp$, "WE",fdel$
    tmp$ = tmp$, "TH",fdel$
    tmp$ = tmp$, "FR",fdel$
    tmp$ = tmp$, "SA",fdel$
  End If 
  tmp$ = tmp$, "UPS",fdel$
  tmp$ = tmp$, "SHIP VIA",fdel$
  tmp$ = tmp$, "DESCRIPTION 1",fdel$,"DESCRIPTION 2",fdel$,"DESCRIPTION 3",fdel$
  tmp$ = tmp$, "DESCRIPTION 4",fdel$,"DESCRIPTION 5",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)  
End if
!

K1$ = K2$ 
If J2 If Not(J8) Print #0;"\14\";
J1 = 90 \ J2 = 0
!!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #2,3,1;K1$,R1,E
If E Goto L_9100
L_2010: 
If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;D$;
Mat Read #2,R1,28;D0;
Mat Read #2,R1,32;D1;
Mat Read #2,R1,36;T2$;
Mat Read #2,R1,46;Z2$;
Mat Read #2,R1,76;Z3$;
Mat Read #2,R1,88;Z0;
Mat Read #2,R1,90;Z1;
Mat Read #2,R1,110;Z2;
Gosub L_5800
Gosub L_5000
Gosub L_2200
Signal 2,J0,A,B !!\ If J0 <> -1 Gosub L_9615
Goto L_2000
!
L_2200: Rem TOTALS CALC
Return 
!
L_4000: Rem TOTAL PRINT
If J8 Return
!
Gosub L_5800
Print #0;"\15\** END **";
Return 
!
L_5000: Rem PRINT LINE
If J8 
  tmp$ = rtrim$(K1$[1,2]),fdel$
  tmp$ = tmp$, rtrim$(D$[1,28]),fdel$
  tmp$ = tmp$, rtrim$(Z2$[1,30]),fdel$
  If P61$[34,34] <> "Y"
    tmp$ = tmp$, D0 Using "####",fdel$
  End If 
  tmp$ = tmp$, D1 Using "######",fdel$
  If P61$[34,34] <> "Y"
    tmp$ = tmp$, T2$[2,2],fdel$
    tmp$ = tmp$, T2$[3,3],fdel$
    tmp$ = tmp$, T2$[4,4],fdel$
    tmp$ = tmp$, T2$[5,5],fdel$
    tmp$ = tmp$, T2$[6,6],fdel$
    tmp$ = tmp$, T2$[7,7],fdel$
  End If 
  tmp$ = tmp$, Z0 Using "##", fdel$
  tmp$ = tmp$, rtrim$(Z3$[1,12]),fdel$
  !
  !!If Z1[0] Let tmp$ = tmp$, "IF TOTAL WEIGHT:",fdel$
  X1 = 0
  For J = 0 To 4
    If J > 0 
	  If Z1[J] = 0 
	    tmp$ = tmp$,"",fdel$
	    Goto M_5150
	  End if
	End if
    J2$ = " ",J2$ \ If Z2[J] = 0 Let J2$ = "ZONE TRUCK"
    If Z2[J] = 1 Let J2$ = "UPS"
    If Z2[J] = 2 Let J2$ = "SHIP VIA"
    J$ = Z1[J] Using "######" \ J3$ = J$
    For X = 1 To 6
      If J$[X,X] = " " Let J3$ = J$[X + 1]
    Next X
    If Z1[J] 
	  tmp$ = tmp$, "<= ",J3$," USE ",J2$,fdel$
	Else
      If D1 
	    tmp$ = tmp$,"USE ",J2$,fdel$  
	  Else
	    tmp$ = tmp$,"",fdel$
	  End if
	End if
  M_5150: Next J
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
Print #0; Tab 1;K1$[1,2];
Print #0; Tab 5;D$[1,28];
If P61$[34,34] <> "Y"
  Print #0; Using "####"; Tab 43;D0;
End If 
Print #0; Using "######"; Tab 51;D1;
If P61$[34,34] <> "Y"
  Print #0; Tab 60;T2$[2,2];
  Print #0; Tab 67;T2$[3,3];
  Print #0; Tab 74;T2$[4,4];
  Print #0; Tab 81;T2$[5,5];
  Print #0; Tab 88;T2$[6,6];
  Print #0; Tab 95;T2$[7,7];
End If 
Print #0; Using "##"; Tab 110;Z0;
Print #0; Tab 115;Z3$[1,12]
Print #0; Tab 5;Z2$[1,30];
If Z1[0] Print #0;"  IF TOTAL WEIGHT:";
X1 = 0
For J = 0 To 4
  If J > 0 If Z1[J] = 0 Goto L_5150
  J2$ = " ",J2$ \ If Z2[J] = 0 Let J2$ = "ZONE TRUCK"
  If Z2[J] = 1 Let J2$ = "UPS"
  If Z2[J] = 2 Let J2$ = "SHIP VIA"
  J$ = Z1[J] Using "######";J3$ = J$
  For X = 1 To 6
    If J$[X,X] = " " Let J3$ = J$[X + 1]
  Next X 
  If Z1[J] Print #0;"  <=";J3$;" USE ";J2$;".";
  If Z1[J] = 0 If D1 Print #0;" USE ";J2$;".";
  X1 = X1 + 1 \ If J < 4 If Z1[J + 1] = 0 Goto L_5150
  If X1 > 2 Print #0;"" \ J1 = J1 + 1
  If X1 > 2 Print #0; Tab 53; \ X1 = 0
L_5150: 
Next J
Print #0;""
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
If J8 Return
!
J1 = J1 + 3 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 116 - ";T9$;
Print #0; Tab 49;"Z O N E   F I L E   L I S T I N G"
Print #0;"\15\";
Print #0; Tab 0;"ZONE";
Print #0; Tab 5;"DESCRIPTION";
If P61$[34,34] <> "Y"
  Print #0; Tab 38;"LEAD TIME";
End If 
Print #0; Tab 50;"TRUCK #";
If P61$[34,34] <> "Y"
  Print #0; Tab 59;"MO";
  Print #0; Tab 66;"TU";
  Print #0; Tab 73;"WE";
  Print #0; Tab 80;"TH";
  Print #0; Tab 87;"FR";
  Print #0; Tab 94;"SA";
End If 
Print #0; Tab 109;"UPS";
Print #0; Tab 115;"SHIP VIA";
Print #0;" "
Print #0;"\15\";
Return 
!
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
!!If K2$ = "" Goto OUTEND
!!Goto L_900
!!End 
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End