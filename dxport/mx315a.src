! >>> Program mx315a
!
! description Direct A/R Accept - Part 2 - g/l interface
!
! loadsave -w -n 100,10 -o prog/dxport/mx315a.dl4 src/mx315a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 18, 2007  12:16:18
Rem /w2/papermaster/r2005//usr/acct/mary/work/r2005/mx/mx315a.src (univ2) [mary] {55859}
Rem  Copyright (c) 2007 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem


Rem MX315A - G/L INTERFACE  FOR DIRECT ACCTS RECEIVABLE
Rem AUTHOR: MTK   JUNE 1988
Rem LAST UPDATE:
Declare Intrinsic Sub FindF,InpBuf,String
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Try
  Enter eflg,rec_uac,message$,IntCo,rstr$,e$ 
  dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  dim e$[500]!,message$[600]
   
 
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";

!If Err 0 Gosub ERR_TRAP
Dim J$[30],X$[10]
Dim 2%,S1[8],D0,C3[2],F$[20],X9,I2
Dim 2%,C8[1],E9,JRNL
Dim 2%,ACPER[1],BATCH,GRP[1],USR[1],W,L1,PDATE
Dim 1%,PRGNUM,CHGL[3]
Dim 3%,D1[1]
Dim G9$[140]
Dim K2$[30]
Dim 1%,E,S
Dim 1%,L9,B,B3,2%,V2$[30],F2$[30],F3$[30],T9$[64],P8$[6],P9$[64],R9$[64]
Dim G$[2],L9$[2],D$[4],B$[3],C$[4],3%,C2[1],T,2%
Dim 1%,X1,I,L,2%,X2,J8,R[23],CLIENT
Dim D8$[8]
Dim U5$[50]
Dim U5$[50],groupid$[2],msg$[100],glpmsg$[100]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],WebStr$[600],blockid$[100]

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!J8 = Spc(5)
!J$ = Int((J8 - Int(J8 / 16384) * 16384) / 64) Using "CNTRL# "
Try Close  Else Rem
J$ = intco Using "cntrl/CNTRL#"
Open #1,J$
Mat Read #1,19,50;P9$;
If P9$[17,17] <> "Y" Goto OUTEND
Mat Read #1,52,60;P8$;
For I = 2 To 4
  Read L
  If L = -1 Goto L_852
  Read #1,88,L;J$;
  Open #I,J$
L_852: Next I
Data "64 ","48","-1"
Mat Read #1,52,0;S1;
Mat Read #1,0,100;D8$;
If S1[4] <> 2 Goto L_8000 ! not flag for daily interface
G$[1,1] = S1[1] Using "#"
GRP[0] = S1[1]
G$[2,2] = S1[2] Using "#"
USR[0] = S1[2]
!W = Spc(5)
!L1 = Int(W / 16384)
!GRP[1] = Int((W - L1 * 16384) / 64)
!USR[1] = W - (L1 * 16384 + GRP[1] * 64)
Call DXGet("u_group",groupid$)
GRP[1] = intco ! Int((W - L1 * 16384) / 64)
USR[1] = groupid$ ! W - (L1 * 16384 + GRP[1] * 64)
L_1100: Rem SELECT POSTING PERIOD
!Print 'CS';
!Print @11,4;'CL';"**DIRECT A/R ENTRIES TO GENERAL LEDGER INTERFACE **"
Mat Read #1,0,108;D0;
X$ = D0 Using "&&&&&&"
C3[0] = X$[1,4]
ACPER = C3[0]
X$ = C3[0] Using "&&&&"
!Print @10,7;'CL';"POSTING MONTH: ";X$[3,4];"/";X$[1,2];
p8$[6,6]="Y"
If P8$[6,6] = "Y" Let X$ = D8$[1,2],D8$[4,5],D8$[7,8] \ Goto L_1210
L_1190:  ! Print @10,12;'CL';"ENTER POSTING DATE (MMDDYY) ";
Msg$="BAD POSTING DATE" \ gosub err_Search ! prevent endless loop!
!Input ""X$
L_1210: If Len(X$) <> 6 Goto L_1190
C3[1] = X$[1,6]
F$ = X$[5,6],X$[1,2],X$[3,4]
X9 = X$[3,4] \ If X9 < 1 Goto L_1190
If X9 > 31 Goto L_1190
If X$[1,2] = "02" If X9 > 29 Goto L_1190
C3[2] = F$
X9 = F$[1,4]
If C3 = X9 Goto L_1290
!Print @0,23;'CL RB';"POSTING DATE MUST AGREE WITH POSTING MONTH!!";
!Signal 3,30 \ Print @0,23;'CL'; \ Goto L_1190
L_1290: !Print @0,23;'CL';"Enter  A: accept  R: reject ";
If P8$[6,6] = "Y" Let X$ = "A" \ Goto L_1310
X$="A"
goto L_1900 
!Input ""X$
L_1310: If X$ = "R" Goto L_1100
If X$ = "A" Goto L_1900
If X$ <> "E" Goto L_1290
!Print @0,20;'CL RB';"*** WARNING *** NO JOURNAL ENTRIES WILL BE MADE!!";
!Print @0,21;'CL RB';"MAY CAUSE DISCREPANCIES FROM MONTHLY TOTALS AND GENERAL LEDGER";
!Print @0,22;"JOURNAL ENTRIES WILL BE LOST!!!!!";
!L_1370: Print @0,23;'CL';"DO YOU WISH TO POST JOURNAL ENTRIES TO THE GENERAL LEDGER (Y/N) ";
!Input ""X$
!If X$ = "Y" Goto L_1100
!If X$ <> "N" Goto L_1370
!L_1383: Print @0,23;'CL RB';"ARE YOU SURE NO GENERAL LEDGER UPDATE WILL BE PERFORMED? (Y/N) ";
!Input ""X$
!If X$ = "N" Goto L_1100
!If X$ <> "Y" Goto L_1383
!Goto L_8000
L_1900:  ! Print @0,23;'CL';"PROCESSING...PLEASE WAIT...";
PDATE = C3[1]
CLIENT = 0
! Print @0,22;'CL';"PLEASE WAIT....NOW POSTING."; \ Signal 3,0
V2$ = " ",V2$
L_6120: Search #2,3,1;V2$,R[2],E
If E = 2
  Gosub L_6300 \ Goto L_8000
End If 
If E Gosub ERR_Search
Mat Read #2,R[2],0;D1;
Rem IF NOT D1[1] GOTO L_6120: ! post may have links
Mat Read #2,R[2],12;C8;
If CLIENT <> C8[1]
  If CLIENT Gosub L_6300
  Gosub L_6400 \ CLIENT = C8[1]
End If 
R9$ = " ",R9$
R = R + 1
R9$[1,1] = "E"
R9$[3,10] = D1 Using "########"
If C8
  R9$[14,19] = C8 Using "&&&&&&"
Else 
  R9$[14,19] = C3[1] Using "&&&&&&"
End If 
R9$[20,25] = C3[1] Using "&&&&&&"
Rem! if you change the r9$[26,49] variable this must be changed in glpost !!!
R9$[26,40] = "DIRECT A/R ENT "
R9$[41,49] = C8[0] Using "JRN######"
R9$[59,62] = R Using "####"
R9$[63,63] = "0"
T = D1[1]
Write #4,R[4];R9$
Write #4,R[4],1;T;
R[4] = R[4] + 1
If D1[1] > 0 Let C2 = C2 + D1[1]
If D1[1] < 0 Let C2[1] = C2[1] + D1[1]
Goto L_6120
L_6300: Rem RESET BATCH
If Not(C8[1]) Return 
R = R + 1
T9$[59,62] = R Using "####"
T = 0
Write #4,R[4];T9$
Write #4,R[4],1;T;
R[4] = R[4] + 1
P9$ = " ",P9$
C2[1] = Abs(C2[1])
P9$[31,40] = (C2[0] * 100) Using "##########"
P9$[41,50] = (C2[1] * 100) Using "##########"
P9$[51,60] = ((C2[0] - C2[1]) * 100) Using "----------"
P9$[10,20] = "1  PAY    1"
P9$[21,21] = "0"
P9$[25,25] = GRP[1] Using "&"
P9$[26,26] = USR[1] Using "&"
T = 0
Write #4,R[4];P9$;
Write #4,R[4],1;T;
!If Err 0 Rem
Try Close #4 Else Rem 
!If Err 0 Gosub ERR_TRAP
PRGNUM = 315
For Q = 0 To 3 \ CHGL[Q] = 0 \ Next Q
ACPER[1] = 0
!Call "glpost",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE
glpstat=0
Call "glpost.dl4",CLIENT,ACPER[],BATCH,GRP[],USR[],CHGL[],PRGNUM,PDATE,IntCo,rstr$,glpstat,glpmsg$
Return 
L_6400: Rem LOOKUP CLIENT & CREATE BATCH
K2$ = " ",K2$ \ K2$[3,6] = C8[1] Using "####"
Search #3,2,1;K2$,R[3],E \ If E Gosub ERR_SEARCH
Mat Read #3,R[3],0;G9$;
L9 = G9$[135,136]
If L9 < 10 Let L9$ = L9 Using "#" Else Let L9$ = L9 Using "##"
C$ = C8[1] Using "####"
For I = 1 To 4
  If C$[I,I] = " " Let C$[I,I] = "."
Next I
TIEBREAKER = 0
GETNUM: Rem get the batch #
TIEBREAKER = TIEBREAKER + 1
K2$ = " ",K2$ \ K2$[3,6] = C8[1] Using "####" \ K2$[7,8] = "PG"
Search #3,2,1;K2$,R[3],E \ If E Gosub ERR_SEARCH
Mat Read #3,R[3],132;B
B3 = B \ B3 = B3 + 1 \ If B3 > 999 Let B3 = 1
Mat Write #3,R[3],132;B3;
! Print @0,23;'CL';"PROCESSING CLIENT#: ";K2$[3,6];" BATCH#: ";B;
BATCH = B
! Signal 3,10
D$ = C3[0] Using "&&&&"
B$ = B Using "###"
For I = 1 To 3
  If B$[I,I] = " " Let B$[I,I] = "."
Next I
!If Err 0 Rem
Try Close #4 Else Rem
! If Err 0 Gosub ERR_SEARCH
tmp$="files/",L9$,"/G",G$[1,2],C$,D$,B$[1,3]
! F2$ = "<00> ",L9$,"/G",G$[1,2],C$,D$,B$[1,3]
!F3$ = F2$[6]
F2$ = "<00> ",tmp$
F3$ = tmp$
Call FindF(F3$,A9)
If A9 ! already exists
  If TIEBREAKER > 999
    !Print @0,23;'CL';"No Available Batch Numbers to process "; \ Gosub ERR_SEARCH
     Msg$="No Available Batch Numbers to process " \ Gosub ERR_SEARCH
  End If 
  Goto GETNUM
End If 
Build #4,F2$
R[4] = 0 \ T9$ = " ",T9$ \ T = 0
Write #4,R[4];T9$
Write #4,R[4],1;T
Try Close #4 Else Rem
tmp$="chmod go+rw "+F3$
System tmp$
Eopen #4,F3$
R = 0
T9$[1,1] = "*"
T9$[2,5] = C$
T9$[6,9] = C3 Using "&&&&"
T9$[10,12] = B Using "###"
T9$[13,50] = G9$[1,38]
T9$[51,52] = G$[1,2]
T9$[63,63] = "9"
C2[0] = 0 \ C2[1] = 0
CLIENT = C8[1]
Return 
L_8000: Rem CLEAR GLCMTEMP
V2$ = ""
L_8010: Search #2,3,1;V2$,R[2],E
If E = 2 Goto L_8100
If E Gosub ERR_SEARCH
Search #2,5,1;V2$,R[2],E
If E Gosub ERR_SEARCH
E = 3 \ Search #2,1,0;V2$,R[2],E
If E Gosub ERR_SEARCH
Goto L_8010
L_8100: Rem END
!Print @0,23;'CL RB';"----ACCEPTED----";
!Signal 3,20
let MESSAGE$=MESSAGE$+ " Accept Complete "
if glpstat<>0
	let eflg=eflg+1 
	let message$=message$+"Batch Not Updated Because "+glpmsg$
endif
! "ACCEPT COMPLETE - OK"
!Call SetOutput(e$,rstr$,1,tmp$)
!ReturnStatus=0;Message$=tmp$
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!	  call AddToStr(e$,rstr$,WebStr$)
!	  call SetOutPut(e$,rstr$)
Let AOK=1
Goto OUTEND

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/mx324b!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)
End

U5$ = X2 Using "&&&&&&"
X$[1,2] = U5$[3,4]
X$[3,3] = "/"
X$[4,5] = U5$[5,6]
X$[6,6] = "/"
X$[7,8] = U5$[1,2]
Return 
OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
!Stop 
Else
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
