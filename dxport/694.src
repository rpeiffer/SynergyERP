! >>> Program 694
!
! description   P/I Skipped Tag Listing
!
! loadsave -w -n 100,10 -o prog/dxport/694.dl4 src/694.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 11, 2003  10:50:53
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx694.src (univ2) [jcs] {09770}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX694     -  PHYSICAL INVENTORY TAG LISTING
Rem
Rem REV. 1.2 - 02/18/85 -     - REV. 3/85 - MULTI-WHSE
!
Declare Intrinsic Sub FindF,InpBuf,String
!!Option Default Dialect IRIS1
!Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33]
Dim K1$[90],P1$[26],P$[15],CNAME$[30],D$[5],P61$[256],K2_3$[32],K10$[60]
Dim LPP$[26],1%,LPP1[1],3%,LPP3[1],KLPP$[60],HKLPP$[60],LPUM$[4]
Dim 1%,MHLPFLAG,LPFLAG,SLPFLAG,RASL[5],WL1[2]
Dim 3%,P1[2],W3[24],MHLP3[3],OHQTY,P3[4],TOTALPALLETCOUNT,AVQTY
Dim 2%,B[24],D9[5],W9[1]
Dim P2$[28],P9$[50],K2$[25],J$[10],W9$[2],CURDATE$[8],X$[10],A$[156]
Dim K7$[30],CUNIT$[4],WUNIT$[4],KF8$[50],K6$[15],RETVAL$[512]
Dim K3$[40],J3$[40],LOC$[6],LOCB$[6],LOCE$[6],TIER$[3]
Dim 3%,CUNIT,WUNIT,AMOUNT,R[99],LPVAR,PWGT,WHLBS[1],AUNIT
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[2000],tmp1$[800],tmp2$[800],tmp3$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[6]	  \ Blank$=" ",Blank$
dim EndParam$[6] \ EndParam$="z",EndParam$
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Mat Read #1,115;D9;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Read #1,7,61;SLPFLAG;
!
! lET slpflag=0 ! no license plates?
MHLPFLAG = SLPFLAG \ LPFLAG = SLPFLAG
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
If Not(RASL) Let MHLPFLAG = 0 \ LPFLAG = 0 \ SLPFLAG = 0
If P61$[32,32] <> "Y" Let MHLPFLAG = 0 \ LPFLAG = 0 \ SLPFLAG = 0
!
! Call dxsave(0,"tmp/694in.txt!")
!
For I = 2 To 10
  Read X \ If X = -1 Goto L_260
  Read #1,88,Abs(X);K1$[1,16];
  If X <= 0 Ropen #I,K1$ Else Open #I,K1$
L_260: 
Next I
Data "704","-2736","-1792","-1728","-1744","-1","-2352","-1","-2528"
If MHLPFLAG ! "flag is on - look for / open LPPHYS
  K1$ = "3/MHLPPHYS" + Str$(intCO)
  Call FindF(K1$,E)
  If E ! "found it
    Ropen #13,K1$
  Else 
    MHLPFLAG = 0 \ LPFLAG = 0 \ SLPFLAG = 0
  End If 
  If MHLPFLAG ! "also need Lic Plate File
    K1$ = "2/MHLICPLT" + Str$(intCO)
    Call FindF(K1$,E)
    If E
      Ropen #7,K1$
    Else 
      MHLPFLAG = 0 \ SLPFLAG = 0 \ LPFLAG = 0
      Close #13
    End If 
  End If 
End If 
Mat Read #1,3,0;CNAME$;
Mat Read #1,3,164;CURDATE$;
If Err 0 Let F = Spc(8)
F = 0 \ N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 60
If F Let L9 = 20
J8 = F
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"694",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("WHSE",tmp$) \ W9 = tmp$ !!warehouse
call dxget("SKPTAG",tmp$) \ If tmp$ = "" Let SKP = 0 Else Let SKP = 99 !!Print Only Skipped Tags?
call dxget("ALTF",tmp$) \ If tmp$ = "" Let ALTF = 0 else ALTF = 9  !Print all Alternative Item Codes?
call dxget("LPFLAG",tmp$) \ If tmp$ = "" Let LPFLAG = 0 else LPFLAG = 9!!
call dxget("SLOC",LOCB$) \ LOCB$ = LOCB$,Blank$ !!starting Location Range 
call dxget("ELOC",LOCE$) \ LOCE$ = LOCE$,EndParam$ !!Ending  Location Range 
call dxget("LOCSEL",tmp$) \ LOCSEL = tmp$!!drop list  0 1 2
!
!!validations  warehouse
If Not(SLPFLAG) Let LPFLAG = 0
If W9 < 0 or W9 > D9[5] let e$ = "Invalid warehouse, must be between 0 and ",D9[5],"!" \ error 10000
If W9
  If P9$[41,41] = "W" Call "CHKWRASL",W9[0],RASL[]
  If Not(RASL) ! "no rasl - no LicPlate
    MHLPFLAG = 0
  Else ! "recheck for Pallets
    MHLPFLAG = SLPFLAG
    If P61$[32,32] <> "Y" Let MHLPFLAG = 0
  End If 
End If 
If not(MHLPFLAG) let LPFLAG = 0 !
!
!!validations  location
! If Not(RASL) Let LOCB$ = " ",LOCB$ \ LOCE$ = "zzzzzz"
If LOCE$ < LOCB$ let e$ = "Invalid ending location, must be >= than starting location!" \ error 10000
!
If RASL
  WL1[1] = 0
  K3$ = " ",K3$ \ K3$[1,2] = W9 Using "##" \ K3$[5,5] = "@"
  Search #3,2,1;K3$,R3,E 
  If E <> 1 
    Mat Read #3,R3,40;WL1;
  End if
  !!.RASL Bin  OPTION
  If WL1[1] < 2 Or WL1[1] > 3 Let WL1[1] = 2
  If WL1[2] < 2 Or WL1[2] > 3 Or WL1[2] = WL1[1] Let WL1[1] = 2;WL1[2] = 3
Else 
  LOCSEL = 0 
End if
!
If Not(LPFLAG) Let MHLPFLAG = 0
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!

!Call "ProgDflt","694","",77,RETVAL$
!!If RETVAL$[1,5] = "@@@@@" !"nothing saved yet
!!  W9 = 1;SKP = 0;ALTF = 0
!!  LPFLAG = 0;LOCB$ = " ",LOCB$;LOCE$ = "z",LOCE$
!!  LOCSEL = 0
!!  RETVAL$[1,2] = W9 Using "##"
!!  RETVAL$[3,3] = Str$(SKP)
!!  RETVAL$[4,4] = Str$(ALTF)
!!  RETVAL$[5,5] = Str$(LPFLAG)
!!  RETVAL$[6,12] = LOCB$[1,6]
!!  RETVAL$[13,18] = LOCE$[1,6]
!!  RETVAL$[19,19] = Str$(LOCSEL)
!!Else 
!!  W9 = RETVAL$[1,2];SKP = RETVAL$[3,3]
!!  ALTF = RETVAL$[4,4]
!!  LPFLAG = RETVAL$[5,5]
!!  LOCB$ = RETVAL$[6,12];LOCE$ = RETVAL$[13,18]
!!  LOCSEL = RETVAL$[19,19]
!!End If 
!!If Not(SLPFLAG) Let LPFLAG = 0
!DO_SCREEN: Rem "
!Print 'CS';@0,0;"-MX694-";@30,0;"PHYSICAL TAG LISTING"
!Print @0,4;" 1> Warehouse ";
!Print Using "##";@15,4;W9;
!Print @0,6;" 2> Print ONLY Skipped Tags? ";
!J$ = "N" \ If SKP Let J$ = "Y"
!Print @30,6;J$[1,1];
!Print @0,7;" 3> PRINT ALL ALTERNATIVE ITEM CODES? ";
!J$ = "N" \ If ALTF Let J$ = "Y"
!Print @40,7;J$[1,1];
!Gosub CHKWHSE
!!Goto FINALQ
!L_900: Rem ENTER WAREHOUSE
!Print @15,4;
!Input Len 16384 + 2;""D$ \ If D$ = "" Let D$ = Str$(W9)
!W9 = D$ \ If W9 > D9[5] Goto L_900
!If W9 < 0 Goto L_900
!CHKWHSE: Rem "
!If W9
!  If P9$[41,41] = "W" Call "CHKWRASL",W9[0],RASL[]
!  If Not(RASL) ! "no rasl - no LicPlate
!    MHLPFLAG = 0
!  Else ! "recheck for Pallets
!    MHLPFLAG = SLPFLAG
!    If P61$[32,32] <> "Y" Let MHLPFLAG = 0
!  End If 
!End If 
!If MHLPFLAG
!  Print @0,10;'CL';" 4> PRINT PALLET ID & COUNTS?";
!  J$ = "N" \ If LPFLAG Let J$ = "Y"
!  Print @30,10;J$
!Else 
!  Print @0,10;'CL';
!  LPFLAG = 0
!End If 
!If RASL
!  Gosub GET_WHCNTRL
!  Print @0,14;" 5> Location Range";
!  Print @0,16;'CL';" 6> PRINT TAG BINS:    0:ALL  ";
!  If WL1[1] = 2 Print "AAbbbt"; Else Print "AAtbbb";
!  Print " 1:ODDS ONLY  2:EVENS ONLY    ";
!  Print @20,14;LOCB$;@30,14;LOCE$;
!  Print @65,16;LOCSEL
!Else 
!  Print @0,14;'CL';
!  Print @0,16;'CL';
!End If 
!RETVAL$[1,2] = W9 Using "##"
!Print @15,4;RETVAL$[1,2];
!Return 
!EDT_SKPTAG: Rem "
!Print @30,6;
!Input Len 16384 + 1;""D$ \ Call String(1,D$)
!If D$ = "" And Not(SKP) Let D$ = "N"
!If D$ = "" And SKP Let D$ = "Y"
!!If D$ <> "Y" And D$ <> "N" Goto EDT_SKPTAG
!If D$ = "Y" Let SKP = 99 Else Let SKP = 0
!Print @30,6;D$[1,1];
!RETVAL$[3,3] = Str$(SKP)
!Return 
!L_1000: Rem "
!Print @40,7;
!Input Len 16384 + 1;""D$ \ Call String(1,D$)
!If D$ = "" And Not(ALTF) Let D$ = "N"
!If D$ = "" And ALTF Let D$ = "Y"
!If D$ <> "Y" If D$ <> "N" Goto L_1000
!ALTF = 0
!If D$ = "Y" Let ALTF = 9
!Print @40,7;D$[1,1];
!RETVAL$[4,4] = Str$(ALTF)
!Return 
!LICPLT: Rem "
!If MHLPFLAG ! "do they want pallet id/count?
!SHOMHLPPHYS: Rem "
!  Print @30,10;
!  Input Len 16384 + 1;""D$ \ Call String(1,D$)
!  If D$ = "" And LPFLAG Let D$ = "Y"
!  If D$ = "" And Not(LPFLAG) Let D$ = "N"
!  If D$ <> "Y" And D$ <> "N" Goto SHOMHLPPHYS
!  If D$ = "N" Let LPFLAG = 0
!  Print @30,10;D$[1,1];
!Else 
!  LPFLAG = 0
!End If 
!RETVAL$[5,5] = Str$(LPFLAG)
!Return 
!LOCRNG: Rem "location Range
!!If Not(RASL) Let LOCB$ = " ",LOCB$;LOCE$ = "zzzzzz" \ Goto LOCSELDONE
!Print @0,22;'CE';"Enter the Beginning Location";
!Print @20,14;'CL';
!Input Len 16384 + 6;""J$ \ If J$ = "" Let J$ = LOCB$
!LOCB$ = J$ + "      "
!Print @0,22;'CE';"Enter the Ending Location  ";
!Print @30,14;
!Input Len 16384 + 6;""J$ \ If J$ = "" Let J$ = LOCE$
!Print @0,22;'CE';
!!LOCE$ = J$ + "      "
!If LOCE$ < LOCB$ Goto LOCRNG
!Print @20,14;LOCB$;@30,14;LOCE$;
!LOCSELDONE: Rem "
!RETVAL$[6,12] = LOCB$[1,6]
!RETVAL$[13,18] = LOCE$[1,6]
!Return 
!!BINORD: Rem "
!!If Not(RASL) Let LOCSEL = 0 \ Goto BINSELDONE
!!Gosub GET_WHCNTRL
!!Goto L_1650
!!GET_WHCNTRL: Rem GET WHSE CONTROL RECORD
!WL1[1] = 0
!K3$ = " ",K3$;K3$[1,2] = W9 Using "##";K3$[5,5] = "@"
!Search #3,2,1;K3$,R3,E !!\ If E > 1 Gosub ERR_SEARCH
!If E = 1 Goto L_1635
!Mat Read #3,R3,40;WL1;
!L_1635: Rem.  RASL Bin  OPTION
!If WL1[1] < 2 Or WL1[1] > 3 Let WL1[1] = 2
!If WL1[2] < 2 Or WL1[2] > 3 Or WL1[2] = WL1[1] Let WL1[1] = 2;WL1[2] = 3
!!Return 
!!L_1650: Rem "what bins?
!!Print @66,16;
!!Input Len 16384 + 1;""J3$ \ If J3$ = "" Let J3$ = Str$(LOCSEL)
!!LOCSEL = J3$
!!If LOCSEL < 0 Or LOCSEL > 2 Or Fra(LOCSEL) Goto L_1650
!!Print @65,16;LOCSEL;
!!BINSELDONE: Rem "
!!RETVAL$[19,19] = Str$(LOCSEL)
!!Return 
!!FINALQ: Rem "
!!Print @0,22;'CE';"ENTER #: field  P: print  R: reselect all  S: save defaults  E: exit   ";
!!Input Len 16384 + 1;""D$ \ Call String(1,D$)
!!If D$ = "E" Goto outend!!L_9010
!!If D$ = "R" Goto EDT_ALL
!!If D$ = "S"
!!ASK_SAVE: !!Print @0,22;'CL';"Save for  A: all  U: user access only  <CR>: do not save  ";
  !!Input Len 16384 + 1;""J$ \ Call String(1,J$)
  !!If J$ = "" Print @0,22;'CL'; \ Goto FINALQ
  !!If J$ <> "A" And J$ <> "U" Goto ASK_SAVE
  !!If J$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
  !!Call "Progdfltw","694","",77,RETVAL$,URECFLAG
  !!Print @0,22;'CL';
  !!Goto FINALQ
!!End If 
!!If D$ = "P" Goto STRTPRINT
!!FLD = D$
!!Gosub EDT_FLDS
!!Goto FINALQ
!!EDT_ALL: Rem "Edit all
!For FLD = 1 To 6
!  Gosub EDT_FLDS
!Next FLD
!!Goto FINALQ
!EDT_FLDS: Rem "
!On FLD Gosub L_900,EDT_SKPTAG,L_1000,LICPLT,LOCRNG,BINORD
!Return 
!!STRTPRINT: Rem "
!If Not(LPFLAG) Let MHLPFLAG = 0
!If L9 = 60 Print 'CR CL';"PRINTING...PLEASE WAIT"
!If L9 = 20 Print 'CS'
!
if j8 
  tmp$ = "TAG # ",fdel$
  tmp$ = tmp$,"PRD. CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION 1",fdel$
  If P9$[26,26] = "Y" let tmp$ = tmp$, "DESCRIPTION 2",fdel$
  !
  If RASL
    tmp$ = tmp$, "TAG QTY.",fdel$
	tmp$ = tmp$, "PHYS U/M",fdel$
    tmp$ = tmp$, "BIN ON HAND",fdel$
	tmp$ = tmp$, " U/M ",fdel$
	tmp$=tmp$,"BIN AVAIL",fdel$
  Else 
    tmp$ = tmp$, "QUANTITY",fdel$ 
	tmp$ = tmp$, "PHYS U/M",fdel$
    tmp$ = tmp$, "ON HAND",fdel$
	tmp$ = tmp$, "U/M",fdel$
	tmp$=tmp$,"AVAILABLE",fdel$
  End If 
  tmp$ = tmp$, "LOCATION",fdel$
  If P9$[1,1] <> "N" tmp$ = tmp$,"LOT NUMBER",fdel$
  !If P1[0] <> -99 And P1$[7,10] <> "VOID" And A$[127,127] = "Y"
    tmp$ = tmp$, "CATCHWGT COUNT",fdel$ 
	tmp$ = tmp$, "CATCHWGT WHSE",fdel$
  !End if
  If ALTF let tmp$ = tmp$,"ALT ITEMS",fdel$
  If Rasl and MHLPFlag ! P9$[41,41] = "W" 
    tmp$ = tmp$,"PALLET #",fdel$,"COUNT",fdel$,"PLOCATION",fdel$
    tmp$ = tmp$,"PALLET ON HAND",fdel$,"VARIANCE QTY",fdel$ ,"NEW?" ,fdel$
	tmp$ = tmp$,"VARIANCE BETWEEN PALLET COUNT AND TAG COUNT OF",fdel$
  End if
  !XML
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
!
Gosub L_5800
K1$ = W9 Using "##"
Search #2,2,3;K1$,V1,E
If Not(E) Goto L_2020
L_2000: Rem LOOP IT HERE !!
Search #2,3,3;K1$,V1,V2
If V2 Goto OUTEND
L_2020: !
W9[1] = K1$[1,2] 
If W9 If W9[1] <> W9 Goto OUTEND
If W9$ <> K1$[1,2] Gosub L_4000
Mat Read #2,V1,0;P1$;
Mat Read #2,V1,26;P1;
Mat Read #2,V1,44;P2$;
Mat Read #2,V1,72;PWGT;
If P1$[7,10] = "VOID" Goto L_2080
If SKP If P1[0] <> -99 Goto L_2000
LOC$ = P2$[23,28]
If RASL
  If LOC$ < LOCB$ Or LOC$ > LOCE$ Goto L_2000
  If LOCSEL ! "only certain Types
    BIN = 0;TIER$ = ""
    If WL1[1] = 2 Let BIN = LOC$[3,5];TIER$ = LOC$[6,6]
    If WL1[1] = 3 Let TIER$ = LOC$[3,3];BIN = LOC$[4,6]
    If LOCSEL = 1 And Not(Fra(BIN / 2)) Goto L_2000
    If LOCSEL = 2 And Fra(BIN / 2) Goto L_2000
  End If 
else   !! not rasl check range vs tag field
	IF P1$[1,6]<LOCB$ OR P1$[1,6]>LOCE$ GOTO L_2000
End If 
Gosub L_3000 \ Goto L_2080
Gosub L_10000 
Gosub L_11000
L_2080: ! 
Gosub L_5000
If RASL And MHLPFLAG 
	Gosub PRNT_PALLID
Else ! send data!
	
Endif
Goto L_2000
!
L_3000: Rem READ PRODUCT
K2$ = P1$[7,18]
Search #4,2,1;K2$,V3,V4
If V4 Goto L_3070
Mat Read #4,V3,0;A$;
KF8$ = " ",KF8$;KF8$[1,12] = A$[140,151]
Mat Read #4,V3,256;A;
Mat Read #4,V3,512;PFU1;
Mat Read #4,V3,554;PFU2;
Gosub L_3200
Return 1
!
L_3070: Rem NOT FOUND !!
A$[9,38] = "PRODUCT NOT FOUND !!"
K2_3$ = " ",K2_3$ \ K2_3$ = K1$
Search #2,5,3;K2_3$,V1,E 
If E Let e$ = "syserrorfile physinv file mode (m)=5 keyno (k)=3 r=",V1," e=",e," keyval (k$)=",K2_3$ \error 10000
!
P1$[7,18] = "VOID TAG    "
Mat Write #2,V1,0;P1$;!!!!!
K2_3$ = K1$[1,8],P1$[7,18],K1$[21,32]
Search #2,4,3;K2_3$,V1,E !!\ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile physinv file mode (m)=4 keyno (k)=1 r=",V1," e=",e," keyval (k$)=",K2_3$ \error 10000
Return 
!
L_3200: 
K6$ = K2$[1,12],K1$[1,2]
For I = 0 To 24 \ W3[I] = 0 \ Next I
WHLBS[0] = 0
Search #6,2,1;K6$,V6,V7 
If V7 Goto L_3220
Mat Read #6,V6,78;W3;
Mat Read #6,V6,980;WHLBS;
L_3220: Return 
!
L_3800: Rem GET ALL ALT ITEMS
DONE = 0
L_3810: 
Search #8,3,2;KF8$,R8,E
If E = 2 Let DONE = 9
If KF8$[1,12] <> A$[140,151] Let DONE = 9
Return 
!
PRNT_PALLID: Rem "Want's Pallet Id's Printed
If P1$[7,14] = "VOID TAG" Return 
KLPP$ = " ",KLPP$;NUMPRNT = 0;TOTALPALLETCOUNT = 0
KLPP$[1,2] = P1$[25,26]
KLPP$[3] = P2$[23,28]
HKLPP$ = KLPP$
PALLID_LOOP: Rem "
Search #13,3,1;KLPP$,REC_LPPHYS,E 
If E = 2 Goto PALLID_DONE
If KLPP$[1,8] <> HKLPP$[1,8] Goto PALLID_DONE
Mat Read #13,REC_LPPHYS,0;LPP$;
If LPP$[9,20] <> P1$[7,18] Goto PALLID_LOOP
Mat Read #13,REC_LPPHYS,26;LPP1;
Mat Read #13,REC_LPPHYS,30;LPP3;
TOTALPALLETCOUNT = TOTALPALLETCOUNT + LPP3[0]
CNVTU[0] = 0 \ CNVTU[1] = LPP1[1] \ CNVTU[2] = 1
CNVTA = LPP3[0] \ Gosub L_20000
LPP3[1] = AMOUNT
LPUM$ = "    "
If LPP1[1] = -1 Let LPUM$ = "CWT "
If LPP1[1] = -2 Let LPUM$ = "LOT "
If LPP1[1] > 0 Read #5,LPP1[1],10;LPUM$;
R[7] = 0
K7$ = " ",K7$;K7$ = LPP$[1,8]
Search #7,2,1;K7$,R[7],E 
If Not(E)
  Mat Read #7,R[7],88;MHLP3;
Else 
  MHLP3[0] = 0
End If 
CNVTU[0] = 0;CNVTU[1] = LPP1[1];CNVTU[2] = 1
CNVTA = MHLP3[0] \ Gosub L_20000
MHLP3[1] = AMOUNT
LPVAR = LPP3[1] - MHLP3[1]
If NUMPRNT = 0
  If L + 2 > L9 Gosub L_5800
  if not(j8)  Print #0; Tab (10);"PALLET #"; Tab (25);"COUNT"; Tab (40);"LOCATION";
  if not(j8)  Print #0; Tab (66);"PALLET ON HAND"; Tab 110;"VARIANCE QTY"; Tab (128);"NEW?"
  L = L + 1
End If 
if J8 !! xml
  tmp2$ = LPP$[1,8] ,fdel$ !!pallet #
  tmp2$ = tmp2$,LPP3[1] Using "--------#.## ",fdel$ !!count
  tmp2$ = tmp2$, LPUM$," ",LPP$[21,26],fdel$ !!location
  tmp2$ = tmp2$, MHLP3[1] Using "--------#.## " ,LPUM$ ,fdel$ !!palled on hand
  If LPVAR !* print variance only if there is one
    tmp2$ = tmp2$, LPVAR Using "--------#.## ",LPUM$,fdel$ !!vaiance qty
    If Not(R[7]) 
  	  tmp2$ = tmp2$,"Y",fdel$  !!new??
    Else
      tmp2$ = tmp2$,"",fdel$
	End if
  Else
    tmp2$ = tmp2$,"",fdel$
	tmp2$ = tmp2$,"",fdel$
  End If
  tmp$ = tmp1$,tmp2$,tmp3$
  call addtostr(e$,rstr$,tmp$+rdel$)
else 
  Print #0; Tab (10);LPP$[1,8];
  Print #0; Using "--------#.## "; Tab (21);LPP3[1]; 
  Print #0;LPUM$; Tab (40);LPP$[21,26]; 
  Print #0; Using "--------#.## "; Tab 68;MHLP3[1];LPUM$; 
  If LPVAR !* print variance only if there is one
    Print #0; Tab 110;LPVAR;LPUM$; 
    If Not(R[7]) Print #0; Tab (130);"Y";
  End If 
  Print #0;
End if 
NUMPRNT = NUMPRNT + 1
L = L + 1
If L > L9 Gosub L_5800
Goto PALLID_LOOP
!
PALLID_DONE: Rem "done
If NUMPRNT
  If TOTALPALLETCOUNT <> P1[0]
    L = L + 1
    If L > L9 Gosub L_5800
    if not(J8) Print #0; Tab (10);"***** Variance between pallet count and tag count of ";
    If CUNIT$ <> "ERR "
      CNVTU[0] = 0;CNVTU[1] = P1[2];CNVTU[2] = 1;CNVTA = TOTALPALLETCOUNT
      Gosub L_20000
	  if J8
        tmp3$ = Abs(AMOUNT - P1[0]) Using "--------#.## ",CUNIT$, fdel$
	  else
        Print #0;Abs(AMOUNT - P1[0]) Using "--------#.## ";CUNIT$
	  End if
    Else 
	  If J8
        tmp3$ = Abs(TOTALPALLETCOUNT - P1[0]) Using "--------#.## ",fdel$
	  Else
        Print #0;Abs(TOTALPALLETCOUNT - P1[0]) Using "--------#.## "
	  End if
    End If 
  Else
  tmp3$ = "" ,fdel$
  End If 
  if not(j8) Print #0;""
  L = L + 1
  If L > L9 Gosub L_5800
Else
   tmp3$ = "" ,fdel$
End If 
!if J8
!  tmp$ = tmp1$,tmp2$,tmp3$
!  call addtostr(e$,rstr$,tmp$+rdel$)
!End if
NUMPRNT = 0
Return 
!
L_4000: Rem WAREHOUSE BREAK
if not(j8)
  Print #0;"\15\WAREHOUSE: ";K1$[1,2]
  Print #0;" "
End if
W9$ = K1$[1,2];W9[1] = K1$[1,2]
L = L + 3
If P9$[41,41] = "W" Call "CHKWRASL",W9[1],RASL[]!!!!
If Not(RASL) ! "no rasl - no LicPlate
  MHLPFLAG = 0
Else ! "recheck for Pallets
  MHLPFLAG = LPFLAG
  If P61$[32,32] <> "Y" Let MHLPFLAG = 0
End If 
Return 
!
L_5000: Rem PRINT LINE
if j8 !!
  tmp1$ = P1$[1,6],fdel$
  tmp1$ = tmp1$, P1$[7,18], fdel$
  If P1$[7,10] = "VOID" 
    tmp1$ = tmp1$, "",fdel$ 
	If P9$[26,26] = "Y" let tmp1$ = tmp1$, "",fdel$
	tmp1$ = tmp1$, "",fdel$ 
	tmp1$ = tmp1$, "",fdel$
	tmp1$ = tmp1$, "",fdel$
	tmp1$ = tmp1$, "",fdel$
	tmp1$ = tmp1$, "",fdel$
	tmp1$=tmp1$,"",fdel$
	If P9$[1,1] <> "N" let tmp1$ = tmp1$, "",fdel$
    Goto L_5130
  End if
  tmp1$ = tmp1$, A$[9,38],fdel$  !!description 1
  If P9$[26,26] = "Y"
    tmp1$ = tmp1$ ,A$[63,92],fdel$ !!description 2
  End if
  If P1[0] <> -99 tmp1$ = tmp1$, CUNIT Using "--------#.## ",fdel$
  If P1[0] = -99 tmp1$ = tmp1$, "SKIPPED !! ",fdel$
  tmp1$ = tmp1$, CUNIT$,fdel$
  tmp1$ = tmp1$, WUNIT Using "--------#.## ",fdel$
  tmp1$ = tmp1$, WUNIT$,fdel$
  tmp1$ = tmp1$, AUNIT Using "--------#.## ",fdel$
  tmp1$ = tmp1$, P2$[23,28],fdel$  !!location 
  If P9$[1,1] <> "N" 
	if A$[113,113]="Y" let tmp1$ = tmp1$, P2$[1,12],fdel$ !!lost number
	if a$[113,113]<>"Y" let tmp1$=tmp1$,"",fdel$
  Endif
else
  L = L + 1
  If L > L9 Gosub L_5800
  Print #0; Tab 0;P1$[1,6];
  Print #0; Tab 7;P1$[7,18];
  If P1$[7,10] = "VOID" Goto L_5130
  Print #0; Tab 18;A$[9,38];  !!description 1
  If P1[0] <> -99 Print #0; Using "--------#.## "; Tab 50;CUNIT;
  If P1[0] = -99 Print #0; Tab 52;"SKIPPED !! ";
  Print #0;CUNIT$;
  Print #0; Using "--------#.## "; Tab 68;WUNIT;
  Print #0;WUNIT$;
  !Print #0; Tab 90;P2$[23,28];
  !If P9$[1,1] <> "N" Print #0; Tab 102;P2$[1,12];
  PRINT #0; USING "--------#.##"; TAB 85;AUNIT; ! AVAIL
  PRINT #0; TAB 99;P2$[23,28];
  IF P9$[1,1]<>"N" AND A$[113,113]="Y" PRINT #0; TAB 109;P2$[1,12]; ! lot control
End if
L_5130: 
if not(j8) Print #0;" "
LPRNT = 0
if j8 !!
  If P1[0] <> -99 And P1$[7,10] <> "VOID" And A$[127,127] = "Y"
    tmp1$ = tmp1$ ,PWGT  Using "--------#.## ","LB",fdel$
    tmp1$ = tmp1$ ,WHLBS[0] Using "--------#.## ","LB","  (WHSE TOTAL)",fdel$
  Else
	tmp1$=tmp1$,fdel$,fdel$
  End If 
else !!
  If P9$[26,26] = "Y"
    Print #0; Tab 18;A$[63,92];
    LPRNT = 1
  End If 
  If P1[0] <> -99 And P1$[7,10] <> "VOID" And A$[127,127] = "Y"
    Print #0; Using "--------#.## "; Tab 55;PWGT;"LB";
    Print #0; Using "--------#.## "; Tab 73;WHLBS[0];"LB";"  (WHSE TOTAL)";
    LPRNT = 1
  End If 
  If LPRNT Print #0;"" \ L = L + 1
  Print #0;"" \ L = L + 1
End if
!
L_5160: 
If ALTF 
   Gosub L_5500
   if j8 
     tmp1$ = tmp1$ ,fdel$!!
   End if
End if
!
L_5190:
if j8 !XML
  if RASL=0 or MHLPFLAG=0 ! P9$[41,41] <> "W" 
    tmp$ = tmp1$
    call addtostr(e$,rstr$,tmp$+rdel$)
  End if
End if
Return 
!
L_5500: Rem PRINT ALT ITEMS
POS1 = 0
Gosub L_3800
if J8 !!
  If Not(DONE) tmp1$ = tmp1$ , rtrim$(KF8$[13,36])  
else
  If Not(DONE) Print #0; Tab 1;"ALT ITEMS: ";KF8$[13,36]; \ POS1 = 35
End if!!
L_5520: Rem LOOP
if J8 !!
  If Not(DONE)  Gosub L_3810
  If Not(DONE)  tmp1$ = tmp1$ ," ," , rtrim$(KF8$[13,36]) 
  If Not(DONE)  Goto L_5520
  
Else !!
  If Not(DONE) Gosub L_3810
  If Not(DONE) Print #0;", ";KF8$[13,36]; \ POS1 = POS1 + 26
  If Not(DONE) If POS1 > 106 Print #0;"" \ L = L + 1;POS1 = 0
  If Not(DONE) Goto L_5520
  If POS1 Print #0;"" \ L = L + 1
End if !!
Return 
!
L_5800: Rem TOP OF FORM
if j8 return 
!
! - If P = 0 Goto L_5870
! - If L9 <> 20 Goto L_5860
!!Print "\15\PRESS <CR> TO CONTINUE ";
!!Input ""J$
!!Print 'CS';
! - L_5860: 
if P Print #0;"\14\"
! - L_5870: 
P = P + 1
Print #0; Tab 10;CURDATE$; Tab (66 - (Len(CNAME$) / 2));CNAME$; Tab 115;"PAGE ";P
Print #0;" - 694 - ";Msc$(3);
Print #0; Tab 40;"P H Y S I C A L   I N V E N T O R Y   T A G   L I S T I N G"
Print #0;" "
Print #0; Tab 1;"TAG # PRD. CODE"; Tab 18;"DESCRIPTION";
If RASL
  Print #0; Tab 54;"TAG QTY. U/M";
  Print #0; Tab 69;"BIN ON HAND U/M ";
  PRINT #0; TAB 88;"BIN AVAIL";
Else 
  Print #0; Tab 54;"QUANTITY U/M";
  Print #0; Tab 72;" ON HAND U/M ";
  PRINT #0; TAB 88;"AVAILABLE";
End If 
PRINT #0; TAB 99;"LOCATION";
IF P9$[1,1]<>"N" PRINT #0; TAB 109;"LOT NUMBER";
Print #0;"\15\"
L = 6
if p>1 gosub l_4000:
Return 
!
!OUTEND: Rem OUT OF HERE !!
!If L9 = 20 Goto L_9100
!L_9005: Rem
!L_9010: Print 'CS';
!Close 
!Chain "MX000"
!Stop 
!L_9100: Rem FOR SCREEN PRINT ONLY
!Print "\15\PRESS <CR> TO EXIT ";
!Input ""K1$
!Goto L_9005
!Stop 
!
L_10000: Rem CONVERT
If Not(P1[0]) If Not(P1[2]) Let CUNIT = 0;CUNIT$ = " ",CUNIT$ \ Return 
CNVTU[0] = 0;CNVTU[1] = P1[2];CNVTU[2] = 1;CNVTA = P1[0]
Gosub L_20000 \ CUNIT = AMOUNT
CUNIT$ = "ERR "
If P1[2] = -1 Let CUNIT$ = "CWT "
If P1[2] = -2 Let CUNIT$ = "LOT "
If P1[2] > 0 Mat Read #5,P1[2],10;CUNIT$;
Return 
!
L_11000: Rem CONVERT ON HAND QUANTITY
If Not(W3[0]) If Not(P1[2]) Let WUNIT = 0;AUNIT=0;WUNIT$ = " ",WUNIT$ \ Return 
Gosub SETOHQTY
If CUNIT$ <> "ERR "
  CNVTU[0] = 0;CNVTU[1] = P1[2];CNVTU[2] = 1;CNVTA = OHQTY
  Gosub L_20000 \ WUNIT = AMOUNT
  LET CNVTA=AVQTY \ GOSUB L_20000:
	LET AUNIT=AMOUNT ! AVAIL
  WUNIT$ = CUNIT$
Else 
  CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = OHQTY
  Gosub L_20000 \ WUNIT = AMOUNT
  LET CNVTA=AVQTY \ GOSUB L_20000:
	LET AUNIT=AMOUNT ! AVAIL
  Read #5,PFU1[8],10;WUNIT$
End If 
Return 
!
SETOHQTY: Rem
OHQTY = 0;AVQTY=0
IF NOT(RASL) ! 
	OHQty=W3[0];AVQTY=W3[0]-W3[2]
	RETURN
ENDIF
K10$ = K1$[1,2],P2$[23,28],P1$[7,18]
Search #10,3,3;K10$,R[10],E !!\ If E > 2 Gosub ERR_SEARCH
If E Or K10$[1,2] <> K1$[1,2] Or K10$[3,8] <> P2$[23,28] Or K10$[9,20] <> P1$[7,18] Return 
Mat Read #10,R[10],82;P3;
OHQTY = P3[0] - P3[1]
AVQTY=P3[0]-P3[1]-P3[3] ! AVAIL
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: 
! - Goto L_20120!!If Spc(4) > 1280 Goto L_20120
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Goto L_20160
L_20080: 
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto L_20080
! - If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
! - Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
OUTEND: Rem OUT OF HERE 
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
