! >>> Program 354
!
! description  PRODUCT LOCATION REPORT 
!
! loadsave -w -n 100,10 -o prog/dxport/354.dl4 src/354.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 18, 2003  09:48:31
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/mx/mx354.src (univ2) [jcs] {20483}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem **********LOCATION EXCEPTION REPORT**********
Rem ****will show products with no bin location records or no
Rem ****location in record.
! 6/30/05 jliu cct192282 print the demand rate after the on hand field
! 6/30/05 jliu cct192282 add the product range
!
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1
Dim 1%,CH_PROD,CH_PRWH,CH_PRODLOC,CH_CCODES,RASL[5]
Dim 1%,L,P,J,X,W1,J8,MAXLINE,PREV_W1,CH,R9,PL1[1],this_rasl,n1[6]
Dim 3%,PLOC$[18]
Dim 3%,REC_PROD,REC_PRWH,REC_PRODLOC,WHSE,W3[24],QTYONHAND,PARAM2
Dim CNAME$[30],T9$[25],P9$[50],sprod$[20],eprod$[20]
Dim K2$[20],K3$[20],K4$[20],J$[20],R$[5],K9$[20],X$[10]
Dim SCRATCH$[80],W1$[12],PARAM1$[20],UM$[4],EP$[20]
Rem {begin src/inc/dim.convert.i}
Dim 1%,CNVTU[2]
Dim 3%,CNVTA,AMOUNT
Rem {end dim.convert.i}
Rem {begin src/inc/dim.prod.i}
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],custom_customer$[30]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
B$=" ",B$;EP$="z",EP$
Rem 
CH_PROD = 2
CH_PRWH = 3
CH_PRODLOC = 4
CH_CCODES = 5
ch_whinfo = 6
Mat Read #1,19,50;P9$;
Let RASL=0;this_rasl=0
If P9$[41,41]="Y" let rasl=9;this_rasl=9
if P9$[41,41]="W" Let RASL=5 ! this_rasl=on the fly
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
MAXLINE = 55 \ If J8 Let MAXLINE = 20
L = 99;P = 0
Read #1,3;CNAME$
For X = 2 To 6
  Read J \ If J = -1 Goto L_280
  Mat Read #1,88,J;J$;
  Ropen #X,J$
L_280: Next X
Data "1792","1744","208","1728","2768"
!
mat read #1,115,60;custom_Customer$;
custom_customer$=UCASE$(Trim$(custom_customer$))

call dxget("WHSE",tmp$) \ if tmp$="" let WHSE=1 Else let WHSE = tmp$
call dxget("INVENT",tmp$) \ INVENT = tmp$ ! 0=both  1=invt on hand  2=on invt on hand
Call dxget("SPROD",tmp$)
SProd$=UCase$(RTrim$(tmp$))+B$
call dxget("EPROD",tmp$)
EProd$=UCase$(RTrim$(tmp$))+EP$
If SPROD$>EPROD$
	let e$="Invalid Product Range!"
	Error 10000
Endif
!
If WHSE < 1 Or WHSE > 99 Let e$ = "Invalid warehouse, must be between 1 and 99!" \ error 10000
if rasl=5
   mat read #ch_whinfo,whse-1,122;n1;
   let this_rasl=n1[4]
endif
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"354",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!
!!L_300: Print 'CS'; \ Print @30,1;"PRODUCT LOCATION REPORT     "
!!Print @10,5;"ENTER WAREHOUSE NUMBER (1-99) AND PRESS <CR>   ";'CL';
!!Input Len 16384 + 2;""X$ \ If X$ = "" Goto OUTEND Else Let WHSE = X$
!!If WHSE < 1 Or WHSE > 99 Print 'RB' \ Goto L_300
!!INVENTORY_QUEST: Rem
!!Print @10,7;"Products with:"
!!Print @15,8;"1)    inventory on hand in the chosen warehouse"
!!Print @15,9;"2) no inventory on hand in the chosen warehouse"
!!Print @15,10;"B) both  ";
!!Print @15,11;"E) EXIT  (1/2/B/E) <B> ";
!!Input ""SCRATCH$
!!Call String(1,SCRATCH$)
!!If SCRATCH$ = "E" Goto OUTEND
!!If SCRATCH$ = "" Let SCRATCH$ = "B"
!!If SCRATCH$ <> "1" And SCRATCH$ <> "2" And SCRATCH$ <> "B"
!!  Print 'RB';
!!  Goto INVENTORY_QUEST
!!End If 
!!INVENT = SCRATCH$
!!If Err 0 Gosub ERR_ESCAPE
!

If J8   
  tmp$ = "PRODUCT CODE",fdel$, "DESCRIPTION",fdel$, "DESCRIPTION 2",fdel$
  tmp$ = tmp$, "WAREHOUSE",fdel$, "ON HAND",fdel$, "UM",fdel$
  !if custom_customer$="ACME" or custom_customer$="SWP"
	let tmp$=tmp$,"DEMAND",fdel$
  !endif
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
K3$ = "  ",K3$
k3$=Sprod$
MAIN_LOOP: Rem
Search #CH_PRWH,3,1;K3$,REC_PRWH,E 
If E Goto OUTEND
if k3$[1,12]>EProd$ goto OUTEND
Mat Read #CH_PRWH,REC_PRWH,0;W1$
Mat Read #CH_PRWH,REC_PRWH,32;W1
Mat Read #CH_PRWH,REC_PRWH,78;W3
If WHSE <> W1 Goto MAIN_LOOP
If INVENT
  If INVENT = 1 ! only products with inventory
    If W3[0] = 0 Goto MAIN_LOOP
  Else ! only products without inventory
    If W3[0] <> 0 Goto MAIN_LOOP
  End If 
End If 
K2$ = " ",K2$;K2$ = W1$[1,12]
If K2$ <> "            "
  Search #CH_PROD,2,1;K2$,REC_PROD,E
  If E Goto MAIN_LOOP
  Rem {begin src/inc/read.prod.i}
  Mat Read #CH_PROD,REC_PROD,0;A$
  Mat Read #CH_PROD,REC_PROD,156;B
  Mat Read #CH_PROD,REC_PROD,256;A
  Mat Read #CH_PROD,REC_PROD,460;A1
  Mat Read #CH_PROD,REC_PROD,508;A2
  Mat Read #CH_PROD,REC_PROD,512;PFU1
  Mat Read #CH_PROD,REC_PROD,554;PFU2
  Mat Read #CH_PROD,REC_PROD,596;PRPARC
  Mat Read #CH_PROD,REC_PROD,620;LM
  Mat Read #CH_PROD,REC_PROD,624;PR_PO
  Read #CH_PROD,REC_PROD,630;LLC
  Mat Read #CH_PROD,REC_PROD,632;PSN$
  Mat Read #CH_PROD,REC_PROD,652;PSN
  Mat Read #CH_PROD,REC_PROD,660;U2
  Mat Read #CH_PROD,REC_PROD,670;U4
  Read #CH_PROD,REC_PROD,678;U3
  Mat Read #CH_PROD,REC_PROD,684;U3$
  Mat Read #CH_PROD,REC_PROD,744;HZ$
  Mat Read #CH_PROD,REC_PROD,834;A3
  Mat Read #CH_PROD,REC_PROD,846;PFTB
  Read #CH_PROD,REC_PROD,854;UPCT
  Mat Read #CH_PROD,REC_PROD,856;C1$
  Mat Read #CH_PROD,REC_PROD,894;PR_C4
  Read #CH_PROD,REC_PROD,938;PF_LOAD2
  Mat Read #CH_PROD,REC_PROD,944;PR_A2$
  Mat Read #CH_PROD,REC_PROD,974;PFCO
  Mat Read #CH_PROD,REC_PROD,990;PLV
  Mat Read #CH_PROD,REC_PROD,1002;PLC
  Mat Read #CH_PROD,REC_PROD,1018;PFN
  Rem {end read.prod.i}
End If 
K4$ = "  ",K4$
K4$[1,12] = W1$[1,12];K4$[13,14] = W1 Using "##"
NEXT_LOC: Rem
Search #CH_PRODLOC,3,1;K4$,REC_PRODLOC,E 
If Not(E)
  WHSE_TMP = K4$[13,14]
  If K4$[1,12] <> W1$[1,12] Or WHSE_TMP <> W1 Goto END_LOC
  Mat Read #CH_PRODLOC,REC_PRODLOC,18;PL1;
  !If Not(RASL) Goto MAIN_LOOP
  !If RASL If PL1[1] = 1 Goto MAIN_LOOP
  IF Not(this_RASL)  GOTO main_loop:	
  IF this_RASL   IF PL1[1]=1 GOTO main_loop:
  Goto NEXT_LOC
End If 
END_LOC: Rem
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = W3[0]
Gosub CONVERT
QTYONHAND = AMOUNT
cnvtu[0]=0; cnvtu[1]=pfu1[8]; cnvtu[2]=1; cnvta=w3[9]  
	gosub convert                                         
    drate = amount    
PARAM2 = PFU1[8]
Gosub GET_UM
UM$ = PARAM1$
Gosub PRINT_LINE
Goto MAIN_LOOP
!
PRINT_LINE: Rem
If J8
  tmp$ = rtrim$(W1$[1,12]),fdel$,rtrim$(A$[9,38]),fdel$
  tmp$ = tmp$,rtrim$(A$[63,92]),fdel$,W1,fdel$
  tmp$ = tmp$, QTYONHAND Using "---,---,--#.##",fdel$,UM$,fdel$
  !if custom_customer$="ACME" or custom_customer$="SWP"
	let tmp$=tmp$,DRate using "------#.##",fdel$
  !endif
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return
End if
!
If L >= MAXLINE Gosub HEADER
Print #0; Tab 5;W1$[1,12]; Tab 25;A$[9,38]; Tab 60;A$[63,92]; Tab 93;W1;
Print #0; Using "---,---,--#.##"; Tab 98;QTYONHAND;"/";UM$;
!if custom_customer$="ACME" or custom_customer$="SWP"
print #0; USING "------#.##";tab 120;drate
!Else
!print #0;""
!Endif
L = L + 1 \ If L >= MAXLINE Gosub HEADER
Return 
!
HEADER: 
If J8 Return
!
If L < MAXLINE Return 
!!If J8 Print @0,21;"PRESS <CR> TO CONTINUE";'CL';
!!If J8 Input ""R$ \ Print 'CS';
If P Print #0;"\14\" Else Print #0;""
L = 5;P = P + 1
T9$ = "" \ Call Time(T9$)
Print #0; Tab 51;CNAME$; Tab 120;"PAGE  ";P
Print #0; Tab 5;"- 354 -";T9$;
Print #0; Tab 47;"WAREHOUSE LOCATION EXCEPTION REPORT"
If INVENT
  If INVENT = 1
    Print #0; Tab 47;"ITEMS WITH INVENTORY ON HAND";
  Else 
    Print #0; Tab 47;"ITEMS WITH NO INVENTORY ON HAND";
  End If 
End If 
Print #0;""
Print #0; Tab 3;"PRODUCT CODE"; Tab 26;"DESCRIPTION"; Tab 61;"DESCRIPTION 2";
Print #0; Tab 90;"WAREHOUSE"; Tab 102;"ON HAND";
!if custom_customer$="ACME" or custom_customer$="SWP"
	print #0; tab 125;"DEMAND"
!Else
!Print #0;""
!Endif
Print #0;""
Return 
!
GET_UM: Rem pass param2 = unit of measure file record
PARAM1$ = "Err"
PARAM2 = Int(PARAM2)
If PARAM2 > 0 And PARAM2 < Chf(CH_CCODES) - 1
  Mat Read #CH_CCODES,PARAM2,10;PARAM1$;
Else 
  If PARAM2 = 0 Let PARAM1$ = "BASE"
  If PARAM2 = -1 Let PARAM1$ = "CWT "
  If PARAM2 = -2 Let PARAM1$ = "LOT "
  If PARAM2 = -3 Let PARAM1$ = "LB  "
End If 
Return
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: Goto CVTSTARTB !!If Spc(4) > 1280 Goto CVTSTARTB

CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}
OUTEND: Rem "================================ done
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
! try call dxclose() else rem
End 
!
!!Input @0,21;"PRESS <CR> TO EXIT"R$ \ Print 'CS'
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
!!J7$ = "END OF FILE" \ Gosub L_7600
!!Goto L_340
!!End 
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End