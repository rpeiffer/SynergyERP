! >>> Program 444t
!
! description 444t - New Accounts Report
!
! loadsave -w -n 100,10 -o prog/dxport/444t.dl4 src/444t.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.3 OBJECT CODE     Created: OCT 24, 2011  08:53:57
Rem /w2/papermaster/r2005//usr/acct/becky/work/custom/gti/mx444gti.src (univ2) [becky] {53843}
Rem  Copyright (c) 2011 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub JulianToDate
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenFile
!
!!Option Default Dialect IRIS1
Try 
Rem MX444gti - NEW ACCOUNTS REPORT
Rem {begin dim.rtn.input}
Rem --- dims for ISINPUT routine ------- (fixed J7[2])
DIM CN$[10],CustNAME$[31]
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
!If Err 0 Gosub ERR_TRAP
Dim A1$[137],S1$[118],T9$[26],CA1$[142]
Dim 2%,C1[12],SCALE,START_SLSREP,END_SLSREP,ODATE,H0[12]
dim 2%,ssdate,esdate,exdays,jssdate,jesdate,jacdate,jinvdate
dim ssdate$[10],esdate$[10],opendate$[10]
Dim 3%,C4[5],C5[5],OREF[5],T2[25]
Dim D8$[8],DATE$[10],CNAME$[30],ASOFDATE$[10]
Dim 1%,F,X1,2%,X2,3%,J,X3[1],T9[10]
Dim K1$[50],K2$[20],K3$[20],K4$[20],K5$[20],K6$[20],MSGTXT$[75]
Dim 3%
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Dim 3%!
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1500],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim groupid$[1]
!!! check this
Dim b$[200]!
! TOTAL ACCOUNTS
! for credits
Dim 4%,CUSTCREDIT,CUSTTOTCREDIT, CUSTGTOTCREDIT
Dim 4%,CUSTCOSTCR,CUSTTOTCOSTCR, CUSTGTOTCOSTCR
! for invoices
Dim 4%,CUSTSALES, CUSTTOTSALES, CUSTGTOTSALES
Dim 4%,CUSTCOST, CUSTTOTCOST, CUSTGTOTCOST 


!call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)!
t8 = 0
If Err 0 Let t8 = Spc(8)
try
	J9 = Chf(0) 
else
	let t8=99
end try
If Err 0 Gosub ERR_TRAP
J9 = 55 \ If t8 Let J9 = 18
for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
let l9=55
COID=IntCo 
tRY Close #1 eLSE rEM ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=1

L_420: Rem OPEN FILES
X1 = 0 \ X2 = 0
For J = 2 To 6
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;CNAME$;
SCALE = 1
Mat Read #1,0,112;X2;
Gosub L_7700 \ D8$ = X$[1,8]
Data "1808","1824","720","1136","1168"
!let t8=0 ! on printer
let p9=60 ! lines per page
if t8<>0 let p9=20
! defaults
START_SLSREP = 0
END_SLSREP = 999
EDT_ALL_FLG = 1
Call dxget("bslsm",tmp$) \ start_slsrep=tmp$ ! starting salesman
Call dxget("eslsm",tmp$)
if rtrim$(tmp$)=""
	let end_slsrep=999
else
	let end_slsrep=tmp$ ! ending salesman
endif
if start_slsrep>end_slsrep
	let message$=message$+"Ending Sales Rep must be greater than Starting. "
	let eflag=eflag+1
endif

Call dxget("asofdate",tmp$)
if rtrim$(tmp$)="" 
	tmp$="010170"
endif
! need to convert for mmddyy to julian
LET TMP3=TMP$
LET TMP$=TMP3 USING "&&&&&&"
LET TMP1$=TMP$[5,6],TMP$[1,4] ! from mmddyy to yyddmm
let x2=tmp1$
gosub ymd2jul:
start_date=tmp1$! error
start_date=tmp1$
if e<>0
	let eflag=eflag+1
	let message$=message$+" Invalid Date Entered. "
else
	let jsdate=x2
	let start_date=tmp1$
	let x2=tmp1$\gosub L_7700:
	let asofdate$=x$
endif
Call dxget("PAGEBRK",tmp$)
if rtrim$(tmp$)="" 
	let pagebreak=0
else
	let pagebreak=99
endif
! starting sales date
Call dxget("SSDATE",tmp$)
if rtrim$(tmp$)="" 
	tmp$="010170"
endif
! need to convert for mmddyy to julian
LET TMP3=TMP$
LET TMP$=TMP3 USING "&&&&&&"
LET TMP1$=TMP$[5,6],TMP$[1,4] ! from mmddyy to yyddmm
let x2=tmp1$
gosub ymd2jul:
ssdate=tmp1$! error
ssdate=tmp1$
if e<>0
	let eflag=eflag+1
	let message$=message$+" Invalid Starting Sales Date Entered. "
else
	let jssdate=x2
	let ssdate=tmp1$
	let x2=tmp1$\gosub L_7700:
	let ssdate$=x$
endif
Call dxget("ESDATE",tmp$)
if rtrim$(tmp$)="" 
	tmp$="123159"
endif
! need to convert for mmddyy to julian
LET TMP3=TMP$
LET TMP$=TMP3 USING "&&&&&&"
LET TMP1$=TMP$[5,6],TMP$[1,4] ! from mmddyy to yyddmm
let x2=tmp1$
gosub ymd2jul:
esdate=tmp1$! error
esdate=tmp1$
if e<>0
	let eflag=eflag+1
	let message$=message$+" Invalid Ending Sales Date Entered. "
else
	let jesdate=x2
	let esdate=tmp1$
	let x2=tmp1$\gosub L_7700:
	let ESDATE$=x$
endif
If not(eflag)
	if jssdate>jesdate
		let message$=message$+"Ending Sales Date must be greater than Starting. "
		let eflag=eflag+1
	endif
endif
Call dxget("EXDAYS",tmp$)
if rtrim$(tmp$)="" 
	tmp$="0"
endif
LET EXDAYS=TMP$
If t8<>0 ! browser
    !tmp$=esdel$
	!call addtostr(e$,rstr$,tmp$)
	!tmp$ = bsdel$,"444t",fdel$,rdel$
    !Call addtostr(e$,rstr$,tmp$)
	! browser fields
	tmp$="CUST#",fdel$,"CUSTOMER NAME",fdel$,"OPENED DATE",fdel$
	tmp$=tmp$,"SALES",FDEL$,"PROFIT",FDEL$
	tmp$=tmp$,"GP%",fdel$,"CREDITS",fdel$
	tmp$=tmp$,"CR PROFIT",fdel$
	tmp$=tmp$,"NET PROFIT",fdel$
	tmp$=tmp$,"SALESREP",fdel$
	tmp$=tmp$,rdel$
	Call addtostr(e$,rstr$,tmp$)
!Else ! printer
!	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
Endif
if eflag<>0 
	! 
	goto outend: ! errors have occured
endif


!Print 'CS';"NEW ACCOUNTS LIST"
!Print @0,2;" 1> STARTING SALESREP "
!Print @0,3;"    ENDING SALESREP ";
!Print @0,4;" 2> NEW CUSTOMERS AS OF"
!Print @0,5;" 3> PAGE BREAK ON SALESREP "
!INPUTS: Print @0,23;'CE';"Enter #:field to edit  R: reselect  P: print  or  E: exit ";
!If EDT_ALL_FLG Goto EDT_ALL
!Input Len 16384 + 1;""X$ \ Call String(1,X$)
!Print @0,23;'CE';
!If X$ = "P" Goto PROCESS
!If X$ = "E" Let T8 = 0 \ Goto OUTEND
!If X$ = "R" Goto EDT_ALL
!If X$ = "" Goto INPUTS
!X = X$
!If X < 1 Or X > 3 Goto INPUTS
!Gosub EDT_FLDS
!Goto INPUTS
!EDT_ALL: Rem "want's all
!EDT_ALL_FLG = 0
!For X = 1 To 3
!  Gosub EDT_FLDS
!Next X
!Goto INPUTS
!EDT_FLDS: Rem "edit them here
!FLG = 1
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On X Gosub SLSREP_RANGE,DATE_ENT,PAGE_BREAK
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!SLSREP_RANGE: Rem
!J0$ = "3000033502"
!J5$ = "ENTER STARTING SALESREP MAXIMUM 999"
!J1 = START_SLSREP
!Gosub ISINPUT
!START_SLSREP = J1
!J0$ = "3000033503"
!J5$ = "ENTER ENDING SALESREP MAXIMUM 999"
!J1 = END_SLSREP
!Gosub ISINPUT
!END_SLSREP = J1
!If END_SLSREP < START_SLSREP
! Gosub BAD_RANGE
!  Goto SLSREP_RANGE
!End If 
!Return 
!DATE_ENT: Rem
!J0$ = "5 00063504"
!START_DATE = 700101
!J1 = START_DATE
!J5$ = "ENTER THE DATE AS OF WHEN THE CUSTOMER WAS ADDED MMDDYY "
!Gosub ISINPUT \ X2 = 0
!If J1 Let X2 = J1 \ Gosub YMD2JUL \ Goto DATE_ENT
!START_DATE = J1;JSDATE = X2
!ASOFDATE$ = J$
!Return 
!PAGE_BREAK: Rem
!J0$ = "6 00013005"
!J5$ = "ENTER Y or N "
!J1 = 1
!Gosub ISINPUT
!PAGEBREAK = J1
!Return 
PROCESS: !
!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
SLSREPCMP = -1
SLSREP = 0
CUSTCOUNT = 0
J1 = 99
!Gosub L_5800
K2$ = START_SLSREP Using "###"
CUST_LOOP: Search #2,3,5;K2$,R2,E
If E = 2 Goto OUTEND
Mat Read #2,R2;CA1$
K4$ = K2$[4,9]
Search #4,2,1;K4$,R4,E \ If E Goto CUST_LOOP
Read #4,R4,168;ODATE; ! Julian Format
Mat Read #4,R4,436;cn$;
LET CUSTNAME$=CA1$[31,60]
if ucase$(CN$[1,1])="A" let custname$="*"+CA1$[31,59]
if ucase$(CN$[1,1])="S" let custname$="*"+CA1$[31,59]
X$ = ODATE Using "&&&&&&"
DATE$ = " ",DATE$
Call JulianToDate(1,X$,DATE$,E)
If ODATE < JSDATE Goto CUST_LOOP
if exdays>0
	let jacdate=odate+exdays
	if jssdate>(odate+exdays) goto cust_Loop: ! 
	! exclude days from account open is less than starting sales date
endif
SLSREP = K2$[1,3]
If SLSREP > END_SLSREP Goto OUTEND
If SLSREPCMP = -1 Let SLSREPCMP = SLSREP
If SLSREPCMP <> SLSREP
	If CUSTTOTSALES <> 0 Or CUSTTOTCOST <> 0 Or CUSTTOTCREDIT <> 0 OR CUSTTOTCOSTCR<>0
		Gosub L_4500
	endif
  CUSTCOUNT = 0
  CUSTSALES = 0
  CUSTCOST = 0
  CUSTTOTSALES = 0
  CUSTTOTCOST = 0
  CUSTCREDIT = 0
  CUSTTOTCREDIT = 0
  CUSTCOSTCR=0
  CUSTTOTCOSTCR=0
  SLSREPCMP = SLSREP
  If PAGEBREAK
    J1 = 99
  End If 
End If 
CUSTCOUNT = CUSTCOUNT + 1
GCUSTCOUNT = GCUSTCOUNT + 1
K5$ = K4$[1,6]
HIST_LOOP: Search #5,3,2;K5$,R5,E
If E If E <> 2 Gosub ERR_SEARCH
CTR = CTR + 1 !\ If Not(Fra(CTR / 100)) Print @50,21;'CL';CTR;
If K5$[1,6] <> K4$[1,6] Or E = 2
  if custsales<>0 or custcost<>0 or custcredit<>0 or custcostcr<>0
	let totrec=totrec+1
	Gosub L_5000
  endif
  CUSTSALES = 0
  CUSTCOST = 0
  CUSTCREDIT = 0
  CUSTCOSTCR=0
  Goto CUST_LOOP
End If 
Mat Read #5,R5;H0
! starting date
let x2=h0[8] ! invoice date yymmdd
let jinvdate=0
gosub ymd2jul:
let jinvdate=x2 ! 
let jinvdate=x2 
if e<>0 let jinvdate=0
if jinvdate<jssdate goto hist_loop: ! 
if jinvdate>jesdate goto hist_loop:
if exdays>0
	if jinvdate>jacdate goto hist_loop: ! exclude sales greater than ## days of acct open
endif
If odate>0
	if jinvdate<odate goto hist_loop: ! invoice date less than date acct open for re-instate
endif
!
Mat Read #5,R5,512;OREF
Mat Read #6,OREF[5],8;T2
If H0 = 30
  CUSTSALES = CUSTSALES + T2[1]
  CUSTTOTSALES = CUSTTOTSALES + T2[1]
  CUSTGTOTSALES = CUSTGTOTSALES + T2[1]
  CUSTCOST = CUSTCOST + T2[17]
  CUSTTOTCOST = CUSTTOTCOST + T2[17]
  CUSTGTOTCOST = CUSTGTOTCOST + T2[17]
End If 
If H0 = 31
  CUSTCREDIT = CUSTCREDIT + T2[1]
  CUSTTOTCREDIT = CUSTTOTCREDIT + T2[1]
  CUSTGTOTCREDIT = CUSTGTOTCREDIT + T2[1]
  CUSTCOSTCR = CUSTCOSTCR + T2[17]
  CUSTTOTCOSTCR = CUSTTOTCOSTCR + T2[17]
  CUSTGTOTCOSTCR = CUSTGTOTCOSTCR + T2[17]
End If 
Goto HIST_LOOP
L_4000: Rem TOTAL PRINT
IF T8<>0 RETURN
If PAGEBREAK Return 
Gosub L_5800
Print #0;"\15\** GRAND TOTAL **";
Print #0; Using "---------#.##"; Tab 49;CUSTGTOTSALES;
Print #0; Using "-------#.##"; Tab 64;CUSTGTOTSALES - CUSTGTOTCOST;
IF CUSTGTOTSALES<>0
	Print #0; Using "---#.##%"; Tab 76;FNR(((CUSTGTOTSALES - CUSTGTOTCOST) / CUSTGTOTSALES) * 100);
ENDIF
Print #0; Using "-------#.##"; Tab 84;CUSTGTOTCREDIT;
Print #0; Using "-------#.##"; tab 97;(CUSTGTOTCREDIT-CUSTGTOTCOSTCR);
Print #0; Using "-------#.##"; tab 109;((CUSTGTOTSALES - CUSTGTOTCOST)-(CUSTGTOTCREDIT-CUSTGTOTCOSTCR));
Print #0;""
Return 
L_4500: Rem SLSM SUBTTL
totrec=totrec+1
J1 = J1 + 1 \ Gosub L_5800
S1$ = " ",S1$
S1$[1,20] = "SALESREP NOT ON FILE"
K1$ = " ",K1$
K1$ = SLSREPCMP Using "### "
Search #3,2,1;K1$,R3,E \ If E > 2 Gosub ERR_SEARCH
If Not(E)
  Mat Read #3,R3,0;S1$;
End If 
IF T8<>0 RETURN
print #0;""
Print #0;"** SUBTOTAL **    ";S1$[1,20];
T9[6] = 0 \ T9[10] = 0
Print #0; Using "-------#.##"; Tab 51;CUSTTOTSALES;
Print #0; Using "-------#.##"; Tab 64;CUSTTOTSALES - CUSTTOTCOST;
if custtotsales<>0
	Print #0; Using "---#.##%"; Tab 76;FNR(((CUSTTOTSALES - CUSTTOTCOST) / CUSTTOTSALES) * 100);
endif
Print #0; Using "-------#.##"; Tab 84;CUSTTOTCREDIT;
Print #0; Using "-------#.##"; tab 97;(CUSTTOTCREDIT-CUSTTOTCOSTCR);
Print #0; Using "-------#.##"; tab 109;((CUSTTOTSALES - CUSTTOTCOST)-(CUSTTOTCREDIT-CUSTTOTCOSTCR));
Print #0; Using "###"; Tab 124;SLSREPCMP;
Print #0;""
Print #0;""\let j1=j1+1
let newpage=99
Return 
L_5000: Rem PRINT LINE
Gosub L_5800
T9 = 0 \ T9[1] = 0
IF T8<>0 ! BROWSER
	tmp$=""
	tmp$=K4$[1,6],fdel$
	tmp$=tmp$,RTrim$(CUSTNAME$),fdel$
	X$ = ODATE Using "&&&&&&"
	DATE$ = " ",DATE$
	Call JulianToDate(1,X$,DATE$,E)
	IF E<>0 LET DATE$=" ",DATE$
    tmp$=tmp$,rtrim$(date$),fdel$	
	tmp$=tmp$,LTrim$(custsales Using "-------#.##"),fdel$
	tmp$=tmp$,LTrim$((custsales-custcost) using "-------#.##"),fdel$
	if custsales<>0
		tmp$=tmp$,LTrim$((((custsales-custcost)/custsales)*100) using "---#.##"),fdel$
	else
		let tmp$=tmp$,"0.00",fdel$
	endif
	tmp$=tmp$,LTrim$(custcredit using "-------#.##"),fdel$
	Tmp$=tmp$,Ltrim$((CUSTCREDIT-CUSTCOSTCR) Using "-------#.##"),fdel$
	Tmp$=tmp$,Ltrim$(((CUSTSALES - CUSTCOST)-(CUSTCREDIT-CUSTCOSTCR)) Using "-------#.##"),fdel$
	tmp$=tmp$,ltrim$(slsrepcmp using "###"),fdel$
	tmp$=tmp$,rdel$
	call addtostr(e$,rstr$,tmp$)
else
	Print #0; Tab 1;K4$[1,6];
	Print #0; Tab 8;custname$; ! CA1$[31,60];
	X$ = ODATE Using "&&&&&&"
	DATE$ = " ",DATE$
	Call JulianToDate(1,X$,DATE$,E)
	IF E<>0 LET DATE$=" ",DATE$
	Print #0; Tab 40;DATE$;
	Print #0; Using "-------#.##"; Tab 51;CUSTSALES;
	Print #0; Using "-------#.##"; Tab 64;CUSTSALES - CUSTCOST;
	if custsales<>0
		Print #0; Using "---#.##%"; Tab 76;FNR(((CUSTSALES - CUSTCOST) / CUSTSALES) * 100);
	endif
	Print #0; Using "-------#.##"; Tab 84;CUSTCREDIT;
	Print #0; Using "-------#.##"; tab 97;(CUSTCREDIT-CUSTCOSTCR);
	Print #0; Using "-------#.##"; tab 109;((CUSTSALES - CUSTCOST)-(CUSTCREDIT-CUSTCOSTCR));
	If NewPage<>0 Print #0; Using "###"; Tab 124;SLSREPCMP;
	Print #0;""
	let newpage=0
endif
Return 
L_5800: Rem HEADINGS ROUTINE
IF T8<>0 RETURN
J1 = J1 + 1 \ If J1 < P9 Return 
If Not(J2) Goto L_5820
!If J2 If T8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
L_5820: If J2 If Not(T8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(T8) Print #0;"\15\";
Print #0; Using "###"; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 100;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;T9$;
Print #0; Tab 47;"NEW ACCOUNTS ADDED AS OF ";ASOFDATE$
Print #0; tab 30;"For the Sales Period of ";ssdate$;" Thru ";esdate$;
if exdays>0
	print #0;" Excluding Sales ";Str$(exdays);" Days After Account Open Date ";
endif
print #0;""
Print #0;"\15\"
Print #0; Tab 1;"CUST #";
Print #0; Tab 10;"CUSTOMER NAME";
Print #0; Tab 39;"OPENED DATE";
Print #0; Tab 57;"SALES";
Print #0; Tab 69;"PROFIT";
Print #0; Tab 80;"GP %";
Print #0; Tab 88;"CREDITS";
Print #0; tab 99;"CR PROFIT";
Print #0; tab 110;"NET PROFIT";
Print #0; tab 124;"REP";
Print #0;""
Print #0;"\15\";
let newpage=99
Return 

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

L_9100: Rem END OF THIS RANGE
GRANDTOTAL = 1
If CUSTTOTSALES <> 0 Or CUSTTOTCOST <> 0 Or CUSTTOTCREDIT <> 0  
	Gosub L_4500
ENDIF
GRANDTOTAL = 0
Gosub L_4000
!If T8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 10
  T9[K] = 0
Next K
If K2$ = "" Goto OUTEND
!If Not(T8) Print #0;"\14\"
!Goto L_900
goto outend:


YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
let e=0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 

OUTEND: Rem EXIT PROGRAM
If not(t8)
	If CUSTTOTSALES <> 0 Or CUSTTOTCOST <> 0 Or CUSTTOTCREDIT <> 0  
		Gosub L_4500
	ENDIF
	Gosub L_4000
!Chain "MX000C"
!Chain "MX000"
!If j8 ! dx xml
!  Call addtostr(e$,rstr$,esdel$) !end section
!  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
!End If 
	Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
	let returnstatus=0
	If Eflag>0
		ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
		tmp$=""
	Endif
	if not(eflag)
		if not(totrec)
			returnstatus=1
			let message$=message$+"There are no transactions to print"
			message$=message$+"."
		else
			Let message$=message$+" "+str$(totrec)+" Transaction(s) Printed"
		endif
	endif
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
else
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If
!try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program
!
