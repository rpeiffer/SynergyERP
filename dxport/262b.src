! >>> Program 262b
!
! description Back Order Release Register Status
!
! loadsave -w -n 100,10 -o prog/dxport/262b.dl4 src/262b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem MX262B - PRODUCT BACK ORDERS
Rem AUTHOR: DAFFY DAN   MAR 26, 1987
Rem LAST UPDATE:  rjs 11/24/93 add non-stock logic
!               jlp 04/26/97 set b/o in process flag S9, CCT102571
!               vst 04/30/97 cct102690 move 'GOSUB L_5800:' to 5000 rtn
! jliu cct137585 7/5/00  rem out the "COMMISSION NOT CALCULATE" line
! jliu 10/13/03 cct171339 add new prompt - only print released back order
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 26, 2008  14:01:13
Rem /w2/papermaster/r2005//usr/acct/dek/work/r2005/mx2/mx262b.src (univ2) [dek] {60727}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
! ----------------  notes for rev10 upgrade for Jersey Paper --------------------
! 06/29/10 vst cct241965 - used rev9 program and added in custom code for:
!                        - changed "DUE DATE" to "ORDER DATE" and added in 
!                           "PO DUE DATE" column
! ---------------------------------------------------
Rem
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault
Declare External Function OpenFile,PDate$,getuidrec,JDate$
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub FindF,InpBuf,String,Time
! Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],UN[2],PRNTRBO,SSort,IntCo
Com 3%,PFU2[6],CNVTA,A[33],UWORK[10],BASE,FIELD
Com 2%,C4[8],E$[500],Rstr$[1500]
If Err 0 Gosub ERR_TRAP
Dim L1$[60],L2$[20],C1$[30],B0$[12],F1$[20],F2$[40]
Dim 1%,L3[3],H4[2],EUN[2],S9,OLDS9
DIM 1%,POL_L1[5]
DIM 2%,PO_DUEDATE,POL_L2[2],POH_H0[5]
Dim 2%,L2[1],L4[3],L6[5],H0[12],H5[5],SLSM[9],C1[12],SAVECUST
Dim 3%,L5[3],B0[8],B1[8],L7[12],OLM[5],UNF[6],POL_L3[6]
Dim J$[40],J1$[30],J2$[20],J3$[50],J4$[40],J8$[8],U5$[10],unit$[4]
Dim 1%,F,X1[9],UN[2],2%,X2[9],3%,J,X3[9],T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],WORK$[50]
Dim S2$[25],P9$[50],SLSM$[30],3%,msg$[100]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim custom_customer$[30],PO_DUE$[8],POLINE$[20]
B$=" ",B$
!Try 
!call dxopen() ! may not need this! NEEDS FOR DXTEST RUN!!
!Else
	Rem
!End try
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo
Close #1 ! as getsession opens READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!If Err 0 Rem
!For J = 2 To 10
!  Close #J
!Next J
If Err 0 Gosub ERR_TRAP
For J = 2 To 11
  Read J1
  If J1=-1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1888","1840","1808","1792","2576","1824","1728","-1","2432","2416"
! If PRNTRBO Goto OUTEND ! wants release BO's only 
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;J1$;
mat read #1,115,60;custom_customer$;
let custom_customer$=UCASE$(trim$(custom_customer$))
Read #1,20,2;S9;
OLDS9 = S9
If S9 <= 0 Goto L_8900
!If Err 0 Let J8 = Spc(8)
J8 = 0; j2=0
Try Let J9 = Chf(0) Else Let J8=49
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
! If J8 goto OUTEND ! ONLY 1 format per xml file!!! cannot do multiple
J9 = 62 \ If J8 Let J9 = 20
J1=99
STARTHERE: Rem "New Prompt - Salesman Sort
call dxget("RN262",tmp$)
X$="P" \ if tmp$<>"" Let X$="E"
!If X$ = "P" Goto L_1900
If X$ = "E" Goto DONE
Call dxget("SSORT",tmp$)  ! is used only in 262b
SSORT=0 \ if tmp$<>"" Let SSORT=1 ! asked in 262b!
FINALQ: Rem "give em one more chance
S9 = -2
Write #1,20,2;S9;
!If Err 0 Let J8 = Spc(8)
J8 = 0 
Try Let J9 = Chf(0) Else Let J8=49
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
! If J8 goto OUTEND ! ONLY 1 format per xml file!!! cannot do multiple
J9 = 62 \ If J8 Let J9 = 20
J1=99
If J8  ! can allow xml as EACH REPORT SEPARATE
		! <section>
		tmp$ = bsdel$,"262b",fdel$,rdel$
		Call addtostr(e$,rstr$,tmp$)
		tmp$=""
		If SSORT
			tmp$=tmp$,"SLSM",fdel$,"SLSM NAME",fdel$
		Endif
		Tmp$=Tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$,"ORDER",fdel$
		tmp$=tmp$,"LNE",fdel$
		Tmp$=tmp$,"ITEM CODE",fdel$,"DESCRIPTION",fdel$,"DESCRIPTION2",fdel$
		if custom_customer$="JPAPER"
			tmp$=tmp$,"ORD DATE",fdel$,"PO DUEDATE",fdel$
		Else
			tmp$=tmp$,"DUE DATE",fdel$
		Endif
		tmp$=tmp$,"QTY B/O",fdel$
		tmp$=tmp$,"QTY REL.",fdel$,"QTY LEFT",fdel$,"UM",fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
Endif
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
CHAN = 6;DIR = 2
If SSORT = 0 Goto L_1900
CHAN = 9;DIR = 1
! Gosub BLDSORTFLE (OPENED IN BLOCKID)
!Print @0,21;'CE';"SORTING... PLEASE WAIT . . "; \ Signal 3,0
K1$ = " ",K1$
L_1420: Search #9,3,1;K1$,V1,E
If E Goto L_1500
Search #9,5,1;K1$,V1,E
If E Gosub ERR_SEARCH
Goto L_1420
L_1500: Rem SORT (OF)
! Print 'BB';".";'EB';
K1$ = " ",K1$;O1 = -99
SORTBOWORK: Rem "
Search #6,3,2;K1$,R6,E \ If E = 2 Goto L_1900
If E Gosub ERR_SEARCH
Mat Read #6,R6,0;B0$;
Mat Read #6,R6,12;B0;
R1 = B0[3]
Mat Read #2,R1,0;L2;
Mat Read #2,R1,8;L3;
Mat Read #2,R1,16;L4; \ Mat Read #2,R1,168;L7;
Mat Read #2,R1,32;L5;
Mat Read #2,R1,56;L6;
Mat Read #2,R1,80;L1$;
Mat Read #2,R1,404;OLM; \ Mat Read #2,R1,250;UN;
Mat Read #2,R1,446;EUN; \ Mat Read #2,R1,452;UNF;
Mat Read #2,R1,140;L2$;
If L3
  WORK$ = L2$[1,12]
  L2$[2,12] = WORK$[1,11] \ L2$[1,1] = "+"
End If 
Gosub L_2500 \ Goto SORTBOWORK
J3$ = " ",J3$;J3$[1,3] = H0[11] Using "###"
J3$[4] = H0[4] Using "######"
J3$[10] = L2$[1,12] \ J3$[22] = K1$
Search #9,4,1;J3$,R6,E
If E > 1 Gosub ERR_SEARCH
Goto SORTBOWORK
L_1900: Rem PRINT @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ SIGNAL 3,0
O1 = -99;HSLSM = -1
! If J8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
If SSORT Let CHAN = 9;DIR = 1 Else Let CHAN = 6;DIR = 2
L_2000: Search #CHAN,3,DIR;K1$,R6,E
If E Goto L_9100
Mat Read #6,R6,0;B0$;
Mat Read #6,R6,12;B0;
If SSORT ! "check if diff slsm
  If HSLSM = -1 Let HSLSM = K1$[1,3]
  X2 = K1$[1,3] \ If X2 <> HSLSM Let J1 = 90
  HSLSM = K1$[1,3]
  Gosub GETSLSMNAME
End If 
If O1 < 0 Let O1 = B0[2]
If O1 <> B0[2] Gosub L_3100
Mat Read #6,R6,12;B0;
R1 = B0[3]
Mat Read #2,R1,0;L2;
Mat Read #2,R1,8;L3;
Mat Read #2,R1,16;L4; \ Mat Read #2,R1,168;L7;
Mat Read #2,R1,32;L5;
Mat Read #2,R1,56;L6;
Mat Read #2,R1,80;L1$;
Mat Read #2,R1,404;OLM; \ Mat Read #2,R1,250;UN;
Mat Read #2,R1,446;EUN; \ Mat Read #2,R1,452;UNF;
Mat Read #2,R1,140;L2$;
If O1 < 0 Let O1 = B0[2]
If B0[7] <> 2 Let F9 = 99 \ B0[6] = 0 \ B0[8] = 0
If L3
  WORK$ = L2$[1,12]
  L2$[2,12] = WORK$[1,11] \ L2$[1,1] = "+"
End If 
If B0[8] Let F9 = 99
If B0[7] = 2 Let L7[3] = B0[6]
If B0[8] Let L7[3] = B0[8]
C4 = B0[0]
If L3[0] Gosub L_30000
If Not(L3) Mat Read #5,L4,256;A;
If Not(L3) Mat Read #5,L4,512;PFU1; \ Mat Read #5,L4,554;PFU2;
Gosub L_2500 \ Goto L_2000
Gosub L_3000
! If Not(L7[3]) Let L7[3] = L7[4] ! ?? IF NO BO LET BO=SHIPPED?
IF NOT(L7[3]) AND B0[8] LET L7[3]=B0[8] !! SOUNDS BETTER - IF NO BO LET BO=ORIG BO
If Not(L7[3]) and b0[6] let l7[3]=B0[6] !!
If Not(L7[3]) Let L7[3] = L7[4] ! as a final recourse
L5[3] = FNR(OLM[3] * L7[3])
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
CNVTA = L7[3] \ Gosub L_7500
L7[3] = AMOUNT
CNVTA = B0[6] \ Gosub L_7500
B0[6] = AMOUNT
If PFU1[8] > 0 Mat Read #8,PFU1[8],10;UNIT$;
If PFU1[8] = -1 Let UNIT$ = "CWT "
IF PFU1[8] = -3 LET UNIT$ = "LB  "
if custom_customer$="JPAPER"
	if l3[0]=0 if l3[1]=1 gosub get_po_duedate: !  " cct235739-stock & update inv
Else ! std (Jersey paper remmed)
	X2 = H5[1] \ Gosub L_7700
Endif
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem TOTALS CALC
T8[9] = T8[9] + L7[3] \ T9[9] = T9[9] + L7[3]
T8[10] = T8[10] + B0[6] \ T9[10] = T9[10] + B0[6]
Return 
L_2500: Rem GET ORDER HEADER
J2$ = " ",J2$ \ X2 = L2[1]
For J = 1 To 7
  J2$ = J Using "##"
  J2$[3] = X2 Using "######"
  Search #3,2,1;J2$,R3,E
  If Not(E) Goto L_2600
Next J
Return 
L_2600: Rem FOUND ONE
Mat Read #3,R3;H0;
If H0[0] > 7 Return 
Mat Read #3,R3,78;H4;
Mat Read #3,R3,104;H5;
Mat Read #3,R3,278;SLSM;
Return 1
get_po_duedate: !
let found=0;po_duedate=0
let poline$=" ",poline$ 
let poline$[1,6]=l4[0] using "######"  ! "prod rec#
get_next: !
Search #10,3,2;poline$,r8,e
if e>2 gosub err_search:
if e return
let prodrec=poline$[1,6]
if prodrec<>l4[0] goto finish_up:    ! "no polines for this product
mat read #10,r8,0;POL_L1; 
mat read #10,r8,24;POL_L3; 
mat read #11,POL_L3[0],0;POH_H0; 
iF POL_L1[0]=3 GOTO get_next:  ! "line closed
IF POH_H0[0]>=11 IF POH_H0[0]<=14 GOTO get_next:  ! DEBIT MEMO - SKIP
iF POL_L1[0]=14 GOTO get_next:  ! "line closed-DEBIT MEMOS
IF pol_l1[3]=1 goto get_next:  ! "non-stock line (same rec# as inv item)

mat read #10,r8,12;POL_L2;
! " find earliest date
IF found=0      ! " first time thru
	LET PO_DUEDATE=POL_L2[2]
	let found=99
else
	if POL_L2[2]<PO_DUEDATE
	let PO_DUEDATE=POL_L2[2]
	endif
endif
goto get_next: 
finish_up: !
! po_due$ not ref'd
LET PO_DUE$[1,8]=X$[1,8]
return
GETSLSMNAME: Rem "salesman Name
J2$ = " ",J2$;J2$ = HSLSM Using "###"
Search #7,2,1;J2$,R7,E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #7,R7,0;SLSM$;
Else 
  SLSM$ = " ",SLSM$
  SLSM$ = "SALESMAN NOT FOUND!"
End If 
Return 
L_3000: Rem GET CUSTOMER INFO
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #4,2,1;J3$,R4,E
If E Goto L_3070
Mat Read #4,R4,30;C1$;
Mat Read #4,R4,142;C1;
Return 
L_3070: Rem NOT FOUND
C1$ = "** ERROR ** CUSTOMER NOT FOUND"
Return 
L_3100: Rem OTHER ORDER LINES
B0[6] = 0 \ B0[8] = 0
O2 = O1
K2$ = O2 Using "######"
L_3140: Search #2,3,1;K2$,R4,E
If E Goto L_3200
O3 = K2$[1,5]
If O3 <> O2 Goto L_3200
Mat Read #2,R4,8;L3;
Mat Read #2,R4,16;L4; \ Mat Read #2,R1,168;L7;
Mat Read #2,R4,80;L1$;
Mat Read #2,R4,140;L2$;
If L7[3] > 0 Let F9 = 99
Goto L_3300
L_3195: Goto L_3140
L_3200: Rem
SLCOM = 0
For X9 = 5 To 9
  SLCOM = SLCOM + SLSM[X9]
Next X9
If F9 = 0 if not(j8) Print #0; Tab 55;"****** ORDER COMPLETE ***** "
If Not(H0[5]) If H0[0] < 5
End If 
F9 = 0
O1 = B0[2]
If not(J8) 
	Print #0;
	J1 = J1 + 2
	Gosub L_5800
Endif
Return 
L_3300: Rem SRARCH B/O WORK
K3$ = " ",K3$
K3$[1,6] = C4 Using "######"
K3$[7,12] = O2 Using "######"
L_3330: Search #6,3,2;K3$,R7,E
If E Gosub L_5000 \ Goto L_3195
Mat Read #6,R7,12;B1;
If B1[2] = O2 If B1[5] = L3[2] Goto L_3195
If B1[2] = O2 Goto L_3330
B0[6] = 0 \ B0[8] = 0
Gosub L_5000 \ Goto L_3195
If B1[2] <> O2 Let F9 = 99 \ Goto L_3195
Goto L_3330
L_4000: ! not used?
If j8 goto L_4187
Goto L_4187
Print #0;"\15\** TOTALS **";
Print #0; Using "#######.##"; Tab 109;T9[9];
Print #0; Using "#######.##"; Tab 120;T9[10];
L_4187: Rem
Return 
L_4500: ! not used?
If Not(j8)
	Gosub L_5800
	Print #0;"\15\** PRODUCT TOTALS **";
	Print #0; Using "#######.##"; Tab 100;T8[9];
	Print #0; Using "########.##"; Tab 111;T8[10];
	Print #0; Using "########.##"; Tab 122;T8[9] - T8[10];
	Print #0;"\15\"
	J1 = J1 + 2
Endif
T8[9] = 0 \ T8[10] = 0
S2$ = ""
Return 
L_5000: Rem PRINT LINE
If J8 ! xml
	tmp$=""
	If SSORT ! only has slsm data if sort by slsm!
		tmp$=tmp$,Str$(HSLSM),fdel$,Slsm$,fdel$
	Endif
	tmp$=tmp$,H0[4] Using "######",fdel$,C1$[1,25],fdel$
	tmp$=tmp$,H0[7] Using "######",fdel$,L3[2] Using "###",fdel$
	tmp$=tmp$,L2$[1,12],fdel$,L1$[1,30],fdel$,L1$[31,57],fdel$
	if custom_customer$="JPAPER" ! adds order date
		let x2=h0[9] \ gosub L_7700
		tmp$=tmp$,X$[1,10],fdel$ ! its MM/DD/YYYY
		IF l3[0]=1     ! "nonstock
			let x$[1,10]="   N/A  "+b$
		else
			let X2=PO_DUEDATE \ GOSUB L_7700: ! "po due date
		endif ! switch to PO Date
	endif
	tmp$=tmp$,X$[1,10],fdel$,L7[3] Using "#######.##",fdel$
	tmp$=tmp$,B0[6] Using "########.##",fdel$
	tmp$=tmp$,(L7[3] - B0[6]) Using "########.##",fdel$
	tmp$=tmp$,unit$,fdel$
	call addtostr(e$,rstr$,tmp$+rdel$)
Else
	Gosub L_5800
	If SAVECUST = C1[1] Goto L_5015
	Print #0; Using "######"; Tab 1;H0[4];
	Print #0; Tab 8;C1$[1,25];
	L_5015: Print #0; Using "######"; Tab 35;H0[7];
	Print #0; Using "###"; Tab 41;L3[2];
	Print #0; Tab 47;L2$[1,12];
	if custom_customer$="JPAPER"
		PRINT #0; TAB 60;L1$[1,19];  ! "cct235739 - was  L1$[1,30]
		LET X2=H0[9] \ GOSUB l_7700:  ! "order date
		PRINT #0; TAB 80;X$[1,10]; ! mm/dd/yyyy
		IF l3[0]=1     ! "nonstock
			let x$[1,8]="   N/A  "+b$
		else
			let X2=PO_DUEDATE \ GOSUB L_7700: ! "po due date
		endif
		PRINT #0; TAB 91;X$[1,10];  ! "po due date
	Else ! STD
		Print #0; Tab 60;L1$[1,30];
		Print #0; Tab 91;X$[1,10];
	Endif
	Print #0; Using "#######.##"; Tab 100;L7[3];
	Print #0; Using "#######.##"; Tab 111;B0[6];
	Print #0; Using "#######.##"; Tab 120;L7[3] - B0[6];
	Print #0;"" \ J1 = J1 + 1
	If P9$[26,26] <> "Y" Goto L_5770
	If L1$[31,57] = "                           " Goto L_5770
	if custom_customer$="JPAPER"
		PRINT #0; TAB 60;L1$[31,47]
	else
		Print #0; Tab 60;L1$[31,57]
	Endif
	J1 = J1 + 1
	L_5770: ! 
ENDIF
S2$ = C1$[1,25]
SAVECUST = C1[1]
Return 
L_5800: Rem HEADINGS ROUTINE
if J8 Return
J1 = J1 + 1 \ If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 262B - ";T9$;
Print #0; Tab 43;"O R D E R  S T A T U S   B A C K - O R D E R S"
If SSORT
  Print #0; Tab 46;"SLSM: ";HSLSM;
  Print #0; Tab 57;SLSM$
  J1 = J1 + 1
End If 
Print #0;"\15\";
if custom_customer$="JPAPER" PRINT #0; TAB 94;"PO" 
Print #0; Tab 1;"CUST CODE";
Print #0; Tab 14;"CUSTOMER NAME";
Print #0; Tab 35;"ORDER";
Print #0; Tab 41;"LNE";
Print #0; Tab 47;"ITEM CODE";
Print #0; Tab 60;"DESCRIPTION";
if custom_customer$="JPAPER" PRINT #0; TAB 81;"ORD DATE";
Print #0; Tab 91;"DUE DATE";
Print #0; Tab 103;"QTY B/O ";
Print #0; Tab 113;"QTY REL.";
Print #0; Tab 123;"QTY LEFT ";
Print #0;" "
Print #0;"\15\";
Return 
L_7500: Rem UNIT CONVERSION RETURNS AMOUNT
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
Gosub L_20000
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$=PDATE$(X2)
Return
! old convert date
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
BLDSORTFLE: Rem "NOT NEEDED AS SEPARATE PROGRAM & BLOCKID HAS #9 SORTFILE OPEN ALREADY
!If Err 0 Rem
Try Close #9 Else Rem
!If Err 0 Gosub ERR_TRAP
Read #1,88,912;F1$;
If F1$ = "" Let F1$ = "6/SORTWORK*"
L_1020: If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1020
X1 = 0 \ Let F2$ = F1$ To "*" : X1
If Not(X1) Let F1$ = "6/SORTWORK";X1 = 11
!Print @0,21;"PREPARING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 24
F1$[X1] = Str$(Spc(6))
Call FindF(F1$,X2)
If X2 Kill F1$
F2$ = "[1:256] ",F1$
Build #9,F2$
Search #9,0,1;K1$,KSIZE,E \ If E Gosub ERR_SEARCH
X3 = 1000 \ Search #9,0,0;K1$,X3,E \ If E Gosub ERR_SEARCH
! Print @0,21;'CE';
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
L_8900: Rem NO IN PROCESS
If S9 = 0 Message$="BACK ORDERS RELEASE NOT IN PROCESS "
If S9 = -2 Message$="A BACKORDER REGISTER IS BEING PRINTED ELSEWHERE"
If S9 = -1 Message$="BACKORDER ENTRY/EDIT CURRENTLY IN PROGRESS"
If S9 = -3 Message$="BACKORDER ACCEPT CURRENTLY IN PROGRESS"
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)

	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End

L_9100: Rem END OF THIS RANGE
Gosub L_3100
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE  ";'CL'; \ Input ""J$
For K = 0 To 10
  T9[K] = 0
Next K
!If K2$ = "" Goto OUTEND
!Goto OUTEND
!End 
OUTEND: Rem EXIT PROGRAM
If j8 ! dx xml (TO BROWSER )
  
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  !External Lib "libgeneral.lib"
  !Declare External Sub XMLtoExcel
  !Call XMLtoExcel(e$,"262b.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
Else
	tmp1$="OK - Report Complete"
	Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
End If 
!Print 'CS'
!If Err 0 Rem
!Close #0,#2,#3,#4,#5,#6
S9 = 2
Write #1,20,2;S9;
Try Close #0 Else REM
Try call dxclose() Else Rem
End
DONE: Write #1,20,2;OLDS9;
tmp1$="OK - Report Not Run"
Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
try Call dxclose() else rem
END
Rem {begin rtn.error.s}
ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Goto ERR_MAIN
ERR_MAIN: Rem
! If Err 0 Rem
e$ = msg$
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}