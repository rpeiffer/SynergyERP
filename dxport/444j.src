! >>> Program 444j
!
! description Division Sales/Profit Summary by Sales Group
!
! loadsave -w -n 100,10 -o prog/dxport/444j.dl4 src/444j.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: Feb 10, 2009  14:26:49
Rem /w/papermaster/r2005//usr/acct/wmb/work/devl/mx/mx444j.src (univ2) [wmb] {58973}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX444j - PHILLIPS CUSTOM SLSM/VENDOR REPORT
Rem AUTHOR: PHILLIPS CCT 73259   FEB 16, 1995
Rem LAST UPDATE: WMB 230789 - 2/10/09
!
Declare Intrinsic Sub Time
Declare Intrinsic Sub FindF,InpBuf,String,getglobals,env,programdump
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave
Declare Intrinsic function findchannel
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!

com 1%,cost_lev[3]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
dim I$[250],workfile$[50],wk1$[200],wk$[200],sw1$[30]        
    
Dim SL_S1$[30],VNM$[30],PF_A$[156],W1$[32]
dim 3%,divtot[5],grdtot[5],grptot[5],Tot[4],1%,grptmp,divtmp,div[99]
DIM 3%,SLS3[9]
dim 1%,Cost_lev[3]
Dim 1%,H4[2],L3[3],S2[1],PFU1[20],W1[2],OT19Part
Dim 2%,H0[11],L4[3],B[24],W2[9],h6[6]
Dim 3%,R[40],T2[25],TOT[5],L5[3],S3[17],A[33],A1[7],PFU2[6]
Dim 3%,W3[24],TOTAL[999,4],OREF[5],4%,D3[1]
Dim 1%,J8,J9,V9,E,YR,YEAR_,MTH,MONTH_,WHSE,PSLSMN,PART,MONTHTEST
Dim 2%,VENDOR,SLSM,BSLSM,BVEND,J0,H5[16]
Dim 2%,ARDATE,1%,ARMONTH,ARYEAR
Dim 3%,PRCT,R9,PCTR,4%,J1
Dim J$[75],J1$[75],J2$[20],J3$[40],J4$[75],J5$[75],J8$[8],J0$[16]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],P9$[50],P60$[50],keywork$[50]
Dim K4$[40],K5$[40],K7$[40],K8$[30]
Dim COMPANYNAME$[30]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[300],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
Dim tmp2$[50]
dIM 3%,SW1[3],SW2[4],TOTGL,SWS1$[30]
dim 3%,r[50]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FND(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) * .1)
Def FNI(X) = Sgn(X) * (Int(Abs(X) * 1 + .5) / 1)
DEF FNC(H)=FNR(H-(H*D3[0]))
For J = 2 To 10
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1136","1168","1184","2400","1792","1744","1824","-1","-1"
let j$= "4/SORDFLEHHKEY"+str$(intco)
open #10,j$
I$ = " ",I$
let workfile$="6/WORK444J";workfile$[Len(workfile$) + 1] = Spc(6) Using "&&&&"
I$ = "[1:256] ",workfile$,"!"
Build #30,I$
R[30] = 13
Search #30,0,1;I$,R[30],E \ If E Gosub ERR_SEARCH
R[30] = 1 \ Search #30,0,0;I$,R[30],E \ If E Gosub ERR_SEARCH
Try Close #30 Else REm
open #30,workfile$
!  1 SALES GROUP           T        SW1[0]          6     0
!  2 DIVISION              T        SW1[1]          6     6
!  3 SALES REP             T        SW1[2]          6    12
!  4 SPARE                 T        SW1[3]          6    18
!  5 Sls Rep Name          C        SW1$[1,30]     30    24
!  6 Whse OT Sales         T        SW2[0]          6    54
!  7 Whse OT Cost          T        SW2[1]          6    60
!  8 Dir OT Sales          T        SW2[2]          6    66
!  9 Dir OT Cost           T        SW2[3]          6    72
! 10 SPARE                 T        SW2[4]          6    78
                                                        
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,0,108;ARDATE;
Mat Read #1,0,120;ARMONTH;
ARYEAR = Int(ARDATE / 10000)
Read #1,3;COMPANYNAME$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 \ If J8 Let J9 = 20;SCRPRT = 99
!!!! dx add xport reporting code

!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"444j",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("ACPER",tmp$)
If rtrim$(tmp$)=""
	let e$="Invalid accounting entered, must enter month and year (MMYY)!" \ error 10000
endif
let month_=tmp$[1,2]
If MONTH_ < 1 Or MONTH_ > 12 Or Fra(MONTH_) let e$="Invalid month entered, must be between 1 and 12!" \ error 10000
let year_=tmp$[3,4]
if YEAR_<0 or YEAR_>99 let e$="Invalid year entered, must be the last two digits of the year (YY)!" \ error 10000
let acper=rtrim$(tmp$)! mmyy
let tmp1$=tmp$[3,4],tmp$[1,2]
let acper=tmp1$

!
Call dxget("COSTTYPE",tmp$) 
let costtype=rtrim$(tmp$)
if costtype<1 or costtype>2
	let e$="Invalid Costing Method Entered" \ error 10000
endif
if costtype=1 ! load cost
	if cost_lev[1]=0
		let e$="Load Cost Not Available "\error 10000
	endif
endif
if costtype=2 ! gl cost
	If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
		let tmp3=0
	else
		let e$="G/L Costing Method Not Available "\error 10000
	endif
endif

for ctr=0 to 99\let div[ctr]=0\next ctr
Call dxget("DIV",tmp$) \ tmp$ = RTrim$(tmp$) !Division
If rtrim$(tmp$)="" or rtrim$(tmp$)="0"
	for ctr=0 to 99\let div[ctr]=99\next ctr
	goto endsetdiv
endif 

NextDiv: ! 
x=-999
X2 = 0 \ Let X$ = tmp$ To "," : X2
X1 = X$ \ If X1 < 1 Or X1 > 99 Let X = 0 \ Goto ExitDiv
div[X1] = 99
if X2 let tmp$ = tmp$[X2+1] \ goto NextDiv
ExitDiv:
if X=0 let e$ = "Division!" \ error 10000


endsetdiv: ! 
Call dxget("SLSGRP",tmp$) \ tmp$ = RTrim$(tmp$) !Slsm Sales Group
If rtrim$(tmp$)="" let slsgrp=0 else let slsgrp=tmp$
if slsgrp<0 or slsgrp>999
	let e$="Invalid Sales Group Entered "\error 10000
endif

Call dxget("INCCHRG",tmp$) 
let incchrg=0
If rtrim$(tmp$)="Y" let incchrg=99
J1 = 90 \ V9 = 0
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 


!
! *** Sort Section
START_SORT: 
! - Print @0,22;" Sorting, Please wait...  ";'CE' \ Signal 3,0
J4$ = " ",J4$;K1$ = " ",K1$
L_1120: Search #30,3,1;J4$,R9,E
If E = 2 Goto L_1200
Search #30,5,1;J4$,R9,E
If E Let e$ = "syserrorfile 444j sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1120
!
L_1200: Rem THRU HEADER
LET K1$=" ",K1$
LET K1$[1,2]="20"
LET K1$[3,6]=ACPER USING "&&&&"
L_1210: ! start the search
Search #10,3,1;K1$,R[2],E
If E Goto L_1800
IF K1$[1,2]<>"20" GOTO L_1800
let tmp3=k1$[3,6]
if tmp3<>acper goto L_1800:
Gosub L_6000
If h5[8]>0 and h5[8]<100
	if div[h5[8]]=0 goto L_1210:
else
	goto L_1210:
endif
if h0[11]<0 or h0[11]>999
	goto L_1210: ! invalid sales person
endif
! check the sales person /sales group
K8$ = " ",K8$;K8$[1,3]= H0[11] Using "###"
Search #8,2,1;K8$,R[8],E
If E<>0
	if slsgrp<>0 goto L_1210:
	let sl_s1$=" ",sl_s1$
	let sl_s1$[1,11]="Not On File"
	let sls3[9]=0
else
	Mat Read #8,R[8],0;SL_S1$;
	MAT READ #8,R[8],862;SLS3;
	If slsgrp>0 
		if sls3[9]<>slsgrp goto L_1210:
	endif
endif
if t2[1]<>0 goto addkey:
if costtype=1 and t2[17]<>0 goto addkey:
if costtype=2 and totgl<>0 goto addkey:
if incchrg<>0
	if tot[1]<>0 or tot[2]<>0 goto addkey:
	If p9$[35,35] = "Y" and (T2[5] + h6[6])<>0 goto addkey:    ! freight                                                                   
	If p9$[36,36] = "Y" and T2[3]<>0 goto addkey:  ! discount      	     
	If p9$[38,38] = "Y" and T2[6]<>0 goto addkey:    
endif
goto L_1210: 
	
addkey: ! 
keywork$=" ",keywork$
let keywork$[1,4]=sls3[9] using "####" ! sales group
let keywork$[5,8]=h5[8] using "####" ! divison
let keywork$[9,12]=h0[11] using "####" ! salesperson
search #30,2,1;keywork$,r[30],e
if e>1 gosub err_search:
if e=1
	let sw1[0]=sls3[9]
	let sw1[1]=h5[8]
	let sw1[2]=h0[11]
	let sw1[3]=0
	let sw1$=sl_s1$
	for tmp3=0 to 4\let sw2[tmp3]=0\next tmp3
	let e=2\search #30,1,0;keywork$,r[30],e \ if e<>0 gosub err_search:
	mat write #30,r[30],0;sw1;
	mat write #30,r[30],24;sw1$;
	mat write #30,r[30],54;sw2;
	search #30,4,1;keywork$,r[30],e\if e<>0 gosub err_search:
endif
mat read #30,r[30],0;sw1;
mat read #30,r[30],24;sw1$;
mat read #30,r[30],54;sw2;
if h0=31
	for qtr=0 to 20 \let t2[qtr]=t2[qtr]*-1 \ next qtr
	let h6[6]=h6[6]*-1
	let tot[1]=tot[1]*-1
	let tot[2]=tot[2]*-1
	let totgl=totgl*-1
endif

	
if h5[7]<>2 ! warehouse order and other order type (not directs)
	let sw2[0]=sw2[0]+T2[1] ! MERCHANDISE SUBTOTAL
	if incchrg<>0
		If p9$[35,35] = "Y" Let sw2[0]=sw2[0] + T2[5] + h6[6]    ! freight                                                                   
		If p9$[36,36] = "Y" Let sw2[0]=sw2[0] - T2[3]   ! discount      	     
		If p9$[38,38] = "Y" Let sw2[0] = sw2[0] + T2[6]         
		let sw2[0]=sw2[0]+ TOT[1] ! misc charges
	endif
	If costtype=1
		let sw2[1]=sw2[1]+t2[17]

	else
		LET SW2[1]=SW2[1]+TOTGL
	endif
	if incchrg<>0
		If p9$[37,37] = "Y" Let sw2[1] = sw2[1] + T2[20] 
		sw2[1]=sw2[1]+tot[2]  ! misc cost
	endif
else ! for directs
	let sw2[2]=sw2[2]+T2[1] ! MERCHANDISE SUBTOTAL
	if incchrg<>0
		If p9$[35,35] = "Y" Let sw2[2]=sw2[2] + T2[5] + h6[6]     ! freight                                                                   
		If p9$[36,36] = "Y" Let sw2[2]=sw2[2] - T2[3]   ! discount      	     
		If p9$[38,38] = "Y" Let sw2[2] = sw2[2] + T2[6]         
		let sw2[2]=sw2[2]+ TOT[1] ! misc charges
	endif
	if costtype=1
		let sw2[3]=sw2[3]+t2[17]
	else
		LET SW2[3]=SW2[3]+TOTGL
	endif
	if incchrg<>0
		If p9$[37,37] = "Y" Let sw2[3] = sw2[3] + T2[20] 
		sw2[3]=sw2[3]+tot[2]  ! misc cost
	endif
endif
MAT WRITE #30,R[30],54;SW2;
Goto L_1210
!
! *** Process Section
L_1800: Rem PRE
!
! *** Process Section
if j8 ! dx xml headings
  tmp$="Sales Group",fdel$,"Division",fdel$
  tmp$=tmp$+"Sales Rep",fdel$,"Sales Rep Name",fdel$
  tmp$=tmp$,"Total Sales"
  if incchrg<>0
	let tmp$=tmp$," w/Charges"
  endif
  let tmp$=tmp$,fdel$
  if costtype=1
	Let tmp$=tmp$,"Total Load Profit",fdel$
  else
	let tmp$=tmp$,"Total GL Profit",fdel$
  endif
  tmp$=tmp$,"Total Percent",fdel$
  tmp$=tmp$,"Whse/Other Sales",fdel$,"Whse/Other Profit",fdel$,"Whse/Other Percent",fdel$
  tmp$=tmp$,"Direct Sales",fdel$,"Direct Profit",fdel$,"Direct Percent",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
let keywork$=" ",keywork$
let grptmp=-999;divtmp=-999

L_2000: Search #30,3,1;Keywork$,R[30],E
If E Goto L_9100
let tmp3=keywork$[1,4] ! grp
if grptmp<>tmp3
	if grptmp<>-999
		gosub prnt_divtot:
		gosub prnt_grptot:
	endif
	let grptmp=keywork$[1,4]
	let divtmp=keywork$[5,8]
endif
let tmp3=keywork$[5,8] ! division
if tmp3<>divtmp
	if divtmp<>-999
		gosub prnt_divtot:
	endif
	let divtmp=keywork$[5,8]
endif
mat read #30,r[30],0;sw1;
mat read #30,r[30],24;sw1$;
mat read #30,r[30],54;sw2;
if not(j8)
	Gosub L_5800 ! header
endif
Gosub L_5000 ! line item
Gosub L_2200 ! total
Goto L_2000

!
L_2200: Rem TOTALS CALC
FOR CTR=0 TO 3
	LET DIVTOT[CTR]=DIVTOT[CTR]+SW2[CTR]
	LET GRPTOT[CTR]=GRPTOT[CTR]+SW2[CTR]
	LET GRDTOT[CTR]=GRDTOT[CTR]+SW2[CTR]
NEXT CTR

Return 
!
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
gosub L_5800:
let grptmp=-999
Print #0;">>>> Grand Totals <<<<<";
print #0; using "-----------.##";tab 28;grdtot[0]+grdtot[2]; ! total sales
print #0; using "---------.##";tab 43;(grdtot[0]-grdtot[1])+(grdtot[2]-grdtot[3]); ! total profit
let tmp3=0
if (grdtot[0]+grdtot[2])<>0
		let tmp3=fnr((((grdtot[0]-grdtot[1])+(grdtot[2]-grdtot[3]))/(grdtot[0]+grdtot[2]))*100)
endif
if tmp3<-9999.99 let tmp3=-9999.99
if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 56;tmp3; ! total
print #0; using "---------.##";tab 66;grdtot[0]; ! warehouse sales & other
print #0; using "-------.##";tab 79;(grdtot[0]-grdtot[1]); ! warehouse profit
let tmp3=0
	if grdtot[0]<>0
		let tmp3=fnr(((grdtot[0]-grdtot[1])/grdtot[0])*100)
	endif
if tmp3<-9999.99 let tmp3=-9999.99
if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 90;tmp3;
print #0; using "---------.##";tab 99;grdtot[2]; ! other
print #0; using "-------.##";tab 112;(grdtot[2]-grdtot[3]); ! other profit
let tmp3=0
if grdtot[2]<>0
		let tmp3=fnr(((grdtot[2]-grdtot[3])/grdtot[2])*100)
	endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 124;tmp3
print #0;"" ! j1=j1+1
for ctr=0 to 3\let grdtot[ctr]=0\next ctr
Return 
!
prnt_grptot: Rem group SUB TOTAL
if J8 return ! dx xml
let j1=j1+1

gosub L_5800:
Print #0;using "###";">>Sales Group ";grptmp;" Total: ";
print #0; using "-----------.##";tab 28;grptot[0]+grptot[2]; ! total sales
print #0; using "---------.##";tab 43;(grptot[0]-grptot[1])+(grptot[2]-grptot[3]); ! total profit
let tmp3=0
if (grptot[0]+grptot[2])<>0
		let tmp3=fnr((((grptot[0]-grptot[1])+(grptot[2]-grptot[3]))/(grptot[0]+grptot[2]))*100)
endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 56;tmp3; ! total
print #0; using "---------.##";tab 66;grptot[0]; ! warehouse sales & other
print #0; using "-------.##";tab 79;(grptot[0]-grptot[1]); ! warehouse profit
let tmp3=0
	if grptot[0]<>0
		let tmp3=fnr(((grptot[0]-grptot[1])/grptot[0])*100)
	endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "----.##";tab 90;tmp3;
print #0; using "---------.##";tab 99;grptot[2]; ! other
print #0; using "-------.##";tab 112;(grptot[2]-grptot[3]); ! other profit
let tmp3=0
if grptot[2]<>0
		let tmp3=fnr(((grptot[2]-grptot[3])/grptot[2])*100)
	endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 124;tmp3
print #0; tab 29;"=============";
print #0; tab 43;"============";
print #0; tab 56;"========";
print #0; tab 66;"============";
print #0; tab 79;"==========";
print #0; tab 90;"========";
print #0; tab 99;"============";
print #0; tab 112; "==========";
print #0; tab 124; "========"
print #0;"" ! j1=j1+1
for ctr=0 to 3\let grptot[ctr]=0\next ctr
let j1=99 ! page break
Return 

prnt_divtot: Rem Division Total L
if J8 return ! dx xml
let j1=j1+1
print #0; tab 29;"-------------";
print #0; tab 43;"------------";
print #0; tab 56;"--------";
print #0; tab 66;"------------";
print #0; tab 79;"----------";
print #0; tab 90;"--------";
print #0; tab 99;"------------";
print #0; tab 112; "----------";
print #0; tab 124; "--------"
gosub L_5800:
Print #0;">>>> Total For Division ";divtmp;
print #0; using "----------.##";tab 29;divtot[0]+divtot[2]; ! total sales
print #0; using "---------.##";tab 43;(divtot[0]-divtot[1])+(divtot[2]-divtot[3]); ! total profit
let tmp3=0
if (divtot[0]+divtot[2])<>0
		let tmp3=fnr((((divtot[0]-divtot[1])+(divtot[2]-divtot[3]))/(divtot[0]+divtot[2]))*100)
endif
if tmp3<-9999.99 let tmp3=-9999.99
if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 56;tmp3; ! total
print #0; using "---------.##";tab 66;divtot[0]; ! warehouse sales & other
print #0; using "-------.##";tab 79;(divtot[0]-divtot[1]); ! warehouse profit
let tmp3=0
	if divtot[0]<>0
		let tmp3=fnr(((divtot[0]-divtot[1])/divtot[0])*100)
	endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 90;tmp3;
print #0; using "---------.##";tab 99;divtot[2]; ! other
print #0; using "-------.##";tab 112;(divtot[2]-divtot[3]); ! other profit
let tmp3=0
if divtot[2]<>0
		let tmp3=fnr(((divtot[2]-divtot[3])/divtot[2])*100)
	endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 124;tmp3
print #0; tab 29;"-------------";
print #0; tab 43;"------------";
print #0; tab 56;"--------";
print #0; tab 66;"------------";
print #0; tab 79;"----------";
print #0; tab 90;"--------";
print #0; tab 99;"------------";
print #0; tab 112; "----------";
print #0; tab 124; "--------"
print #0;"" \ j1=j1+2
for ctr=0 to 3\let divtot[ctr]=0\next ctr
Return 
!
L_5000: Rem PRINT LINE - FOR VENDOR TOTALS BSLSM=0 SO PULLS GRAND TOTALS
!
if J8 ! dx mxl
	tmp$=sw1[0] using "###",fdel$ !"Sales Group
	tmp$=tmp$,sw1[1] using "###",fdel$ ! "Division
	tmp$=tmp$,sw1[2] using "###",fdel$ !"Sales Rep
	tmp$=tmp$,rtrim$(sw1$),fdel$ ! Sales Rep Name
	!!!! need totals
	tmp$=tmp$,(sw2[0]+sw2[2]) using "----------.##",fdel$ ! total sales
	tmp$=tmp$,((sw2[0]-sw2[1])+(sw2[2]-sw2[3])) using "---------.##",fdel$ ! total profit
	let tmp3=0
	if (sw2[0]+sw2[2])<>0
		let tmp3=fnr((((sw2[0]-sw2[1])+(sw2[2]-sw2[3]))/(sw2[0]+sw2[2]))*100)
	endif
	if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
	let tmp$=tmp$,tmp3 using "-----.##",fdel$! "Total Percent
	!! whse
	tmp$=tmp$,sw2[0] using "----------.##",fdel$ !"Whse Sales"
	tmp$=tmp$,(sw2[0]-sw2[1]) using "----------.##",fdel$ !"Whse Profit"
	let tmp3=0
	if sw2[0]<>0
		let tmp3=fnr(((sw2[0]-sw2[1])/sw2[0])*100)
	endif
	if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
	let tmp$=tmp$,tmp3 using "-----.##",fdel$! "Whse Percent
	! directs
	tmp$=tmp$,sw2[2] using "----------.##",fdel$ !Direct Sales
	let tmp$=tmp$,(sw2[2]-sw2[3]) using "----------.##",fdel$! "Direct Profit"
	let tmp3=0
	if sw2[2]<>0
		let tmp3=fnr(((sw2[2]-sw2[3])/sw2[2])*100)
	endif
	if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
	let tmp$=tmp$,tmp3 using "-----.##",fdel$! "Direct Percent"

	call addtostr(e$,rstr$,tmp$+rdel$)
	goto PrintDetailExit
endif  
!
print #0; using "###";sw1[2]; ! saleperson
print #0; tab 4;sw1$[1,24]; ! name
print #0; using "----------.##";tab 29;sw2[0]+sw2[2]; ! total sales
print #0; using "---------.##";tab 43;(sw2[0]-sw2[1])+(sw2[2]-sw2[3]); ! total profit
let tmp3=0
if (sw2[0]+sw2[2])<>0
	let tmp3=fnr((((sw2[0]-sw2[1])+(sw2[2]-sw2[3]))/(sw2[0]+sw2[2]))*100)
endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 56;tmp3; ! total
print #0; using "---------.##";tab 66;sw2[0]; ! warehouse sales & other
print #0; using "-------.##";tab 79;(sw2[0]-sw2[1]); ! warehouse profit
let tmp3=0
if sw2[0]<>0
	let tmp3=fnr(((sw2[0]-sw2[1])/sw2[0])*100)
endif
if tmp3<-9999.99 let tmp3=-9999.99
	if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 90;tmp3;
print #0; using "---------.##";tab 99;sw2[2]; ! other
print #0; using "-------.##";tab 112;(sw2[2]-sw2[3]); ! other profit
let tmp3=0
if sw2[2]<>0
	let tmp3=fnr(((sw2[2]-sw2[3])/sw2[2])*100)
endif
if tmp3<-9999.99 let tmp3=-9999.99
if tmp3>9999.99 let tmp3=9999.99
print #0; using "-----.##";tab 124;tmp3
print #0;"" \ j1=j1+1

PrintDetailExit:

Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If V9 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9 If Not(J8) Print #0;"\14\";
V9 = V9 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab 54;COMPANYNAME$; Tab 120;"PAGE";V9
Print #0;"444j- ";T9$;
Print #0; Tab 42;"Sales Group/Division Sales/Profit Summary by Sales Person";
iF COSTTYPE=1 
	print #0;" Loaded Cost "
else
	print #0;" G/L Cost "
endif
Print #0;"\15\";
Print #0; Using "&&"; Tab 5;"Accounting Period of : ";MONTH_;"/";YEAR_;
print #0; Using "###" ;tab 58;"Sales Group ";grptmp;
if incchrg<>0
	print #0; tab 110;"Inc Addl Charges ";
endif
print #0;""
Print #0;tab 29;"**************TOTAL***************";
print #0;tab 66;"---------WH/Other Orders--------";
print #0;tab 100;"----------Direct Orders---------"
print #0; "Sales Rep"; 
print #0; tab 34;"Sales $$";
print #0; tab 46;"Profit $$";
print #0; tab 63;"%";
print #0; tab 69;"Sales $$";
print #0; tab 80;"Profit $$";
print #0; tab 97;"%";
print #0; tab 103;"Sales $$";
print #0; tab 113;"Profit $$";
print #0; tab 131;"%"
print #0; tab 29;"-------------";
print #0; tab 43;"------------";
print #0; tab 56;"--------";
print #0; tab 66;"------------";
print #0; tab 79;"----------";
print #0; tab 90;"--------";
print #0; tab 99;"------------";
print #0; tab 112; "----------";
print #0; tab 124; "--------"
print #0;""
Return 
!
L_6000: Rem READ HEADER
Mat Read #2,R[2],0;H0;
Mat Read #2,R[2],78;H4;
MAT  READ #2,R[2],104;H5;
Mat read #2,r[2],408;h6;
MAT READ #2,R[2],498;TOTGL;
mat  read #2,R[2],508;OT19Part;
Mat Read #2,R[2],512;OREF;
R[3] = OREF[5]
Mat Read #3,R[3],8;T2;
mat read #3,r[3],328;tot;
 
Return 
!

!

L_6500: Rem SALESMAN NAME
K8$ = " ",K8$;K8$ = H0[11] Using "###"
Search #8,2,1;K8$,R[8],E
If E = 1 Goto L_6560
Mat Read #8,R[8],0;SL_S1$;
Return 
L_6560: Rem NO GOOD
SL_S1$ = " ",SL_S1$
SL_S1$ = "SLSM NOT FOUND!"
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
Try Close #30 else Rem
if rtrim$(workfile$)<>""
	try
		kill workfile$
	else
		rem
	end try
endif
!
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
L_9100: Rem END
Gosub prnt_divtot
gosub prnt_grptot
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO EXIT ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
Goto OUTEND
! - Goto L_900
!
! - L_9905: Print @0,Msc(34);'CL RB';"RECORD LOCKED ERROR. Enter  R: retry,  E: exit  ";
! - Input ""X$ \ Print @0,Msc(34);'CL';
! - If X$ = "R" Return -1
! - If X$ <> "E" Goto L_9905
! - Goto OUTEND
! - End 
!
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump()                        
Call addtostr(e$,rstr$,esdel$) !end section 
Goto ERR_Trap ! Error 10000                                 
Return ! End

        
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
