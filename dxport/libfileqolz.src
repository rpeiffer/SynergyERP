! libfileqolz.lib  ! original program  -libfileqol.lib
! need to make custom since nonstock items do not update dir 2 in file
! loadsave -w -n 100,10 -o prog/dxport/libfileqolz.lib src/libfileqolz.src
!
! supporting library of file maintenance routines for browser
!
! 1.0 generated by dfcreatestruct on 03/20/08 new
!
include "src/copyright.inc"
!
! file maintenance sub routines for qol File  - qol replaced with qolz
!
!  function  filegetqolz
!  function  fileupdateqolz
!  function  filedroplistqolz
!
Declare Intrinsic Sub Env
Declare Intrinsic Function crc32
!
include "src/inc/fileqolz.inc"
!
! ----------------------------------------
external function filegetqolz(e$,chan,mode$,keyno,keyval$,qolz. as qol,...)
!
! get a qolz record
!
! pass e$ to return error msg if any
! pass chan channel # of file
! pass mode$ =,>,>=,<,<=,next,prev
! pass keyno for key number to search on
! pass keyval$ populated with key to search for
! pass structure to return record in
! optionals
!     pass lockflag<>0 to lock record
!     pass timeout period
!     pass CrcValue for crc value to be calculated and returned
!
! returns record # and record structure if found
! returns a negative number on an error, e$=routine error, -123=record locked
!
Try
!
  Try Enter lockflag,... Else Let lockflag = 0
  Try Enter timeout,... else let timeout = 100000
  Try Enter CrcValue else let CrcValue=-1
  !
  dim hold$[80],errmsg$[200],3%
  !
  if mode$="=" or mode$=">=" or mode$="<=" let mode=2
  if mode$=">" or lcase$(mode$)="next" let mode=3
  if mode$="<" or lcase$(mode$)="prev" let mode=6
  !
  hold$ = keyval$
  search #chan,mode,keyno;keyval$,r1,e2
  if mode$="="
    if len(keyval$)<len(hold$) let e2=1
    if e2=0 if keyval$[1,len(hold$)] <> hold$ let e2 = 1
  endif
  if e2 if mode=2 if mode$<>"="
    if mode$=">=" let mode=3 else let mode=6
    search #chan,mode,keyno;keyval$,r1,e2
  end if
  if e2 = 0
    if lockflag=0 read record #chan,r1,0,timeout;qolz.; else read record #chan,r1,0,timeout;qolz.
    CrcValue=crc32(hex$(qolz.))
  else
    r1 = e2 * -1 ! <0 error
    e$ = "msgqolzNOF"
  end if
else
  if spc(8) = 123 exit function -123 ! record locked
  dim msc4$[100] \ msc4$=msc$(4)
  if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
  select case spc(8)
    case 10000
      ! this is default "message" error
      ! e$ should be set with message to display
    case 11000
      ! search error
      call env(2,"PROGNAME",msc4$)
      call programdump()
      call searcherr(e$, e, Spc(10), e$)
    case else
      e$="filegetqolz mode=",mode," keyno=",keyno," r1=",r1," e2=",e2," keyval$=",keyval$
      if spc(8) <> 0 if spc(8) < 10000
        call env(2,"PROGNAME",msc4$)
        call programdump()
        call suberr(e$,Spc(8),Spc(10),Msc$(2))
      end if
  end select
  error 10000
end try
end function r1 ! filegetqolz
!
! ----------------------------------------
external function fileupdateqolz(e$,chan,mode$,rcdno,qolz. as qol,...)
!
! adds, changes or deletes a qolz record
!
! pass e$     : to return error msg if any
  ! pass chan   : channel # of file
  ! pass mode$  : a = add, c = change, d = delete
  ! pass rcdno  : on change or delete,
  !      if -4 is passed routine will get record (index 1 can't change on change)
  ! pass record : structure
  ! optionally pass lockflag to keep record locked
  ! optionally pass timeout period
  ! returns 0 or negative # if error, -9=already on file, -123=record locked
  ! returns rcdno added on add
  !
  ! search used in update call
  !
  Declare sub DoSearch,AddKeys,DeleteKeys,ChangeKeys
  !
Try
  !
  Try Enter lockflag,... Else Let lockflag = 0
  Try enter timeout else let timeout = 100000
  !
  dim K$[64],K1$[64],K2$[64],K3$[64],K4$[64],K5$[64]
  dim K6$[64],K7$[64],K8$[64],K9$[64]
  dim Dir1$[300],Dir2$[300],Dir3$[300],Dir4$[300],Dir5$[300]
  dim Dir6$[300],Dir7$[300],Dir8$[300],Dir9$[300]
  dim OldDir1$[300],OldDir2$[300],OldDir3$[300],OldDir4$[300],OldDir5$[300]
  dim OldDir6$[300],OldDir7$[300],OldDir8$[300],OldDir9$[300]
  dim errmsg$[200],Lmode$[1]
  dim Blank$[100] \ Blank$=" ",Blank$
  !
  Lmode$ = lcase$(mode$[1,1]) ! convert mode to lower case,just in case
  qolz.Blankforkey$=bLANK$ ! just in case
  !
  if Lmode$ = "a" ! add: set defaults, check not on file, get free record
    k$=qolz.OrdNum using "######",qolz.LineNum using "###",qolz.Blankforkey$[1, 1 ]
    IF qolz.LineNum=0 and RTrim$(qolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
		k$=qolz.OrdNum using "######","   ",qolz.RepairLine$
	endif
	call dosearch(k$,2,1,1) ! search mode=2 dir=1 errflag
    if e = 0 ! record already on file, can't add error
      e$ = "msgqolzOnFile" ! set to already on file msg # in dxmsg.txt file
      exit function -9 ! -9 indicates already on file!
    end if
    !
    e=2
    call dosearch("",1,0) ! get record #
    !
    if lockflag=0 write record #chan,r,0,timeout;qolz.; Else write record #chan,r,0,timeout;qolz.
    !
    call AddKeys(1, 2 ) ! add keys, all directories
	!
    e=r !return record # added
  endif
  !
  if lmode$ = "c" or lmode$ = "d" ! change or delete, verify record
    dim oldqolz. as qol
    if rcdno = -4 ! need to get the record first
      r=rcdno \ oldr=rcdno ! if record # is used in the key
      k$=qolz.OrdNum using "######",qolz.LineNum using "###",qolz.Blankforkey$[1, 1 ]
      IF qolz.LineNum=0 and RTrim$(qolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
		k$=qolz.OrdNum using "######","   ",qolz.RepairLine$
	  endif
	  call dosearch(k$,2,1,1) ! mode 2, dir 1, errflag 1 never trap as hard error
      if e
        ! Customer not on file!
        e$="msgqolzNOF" ! set to not on file msg # in dxmsg.txt file
        exit function e * -1
      end if
    else
      r = rcdno \ oldr=rcdno
    end if
	if lmode$="d" let lockflag=0 ! no lock on delete!
    if lockflag=0 read record #chan,r,0,timeout;oldqolz.; Else read record #chan,r,0,timeout;oldqolz.
	oldqolz.Blankforkey$=Blank$ ! just in case
  endif
  !
  if Lmode$ = "d" ! deletes keys and record #
    !
    read record #chan,r,0,timeout;qolz.;
    call DeleteKeys(1, 2 ) ! delete keys, all directories
    !
    e=3
   call dosearch("",1,0) ! releases record #
  endif
  !
  if Lmode$ = "c" ! change record and keys
    !
    if lockflag=0 write record #chan,r,0,timeout;qolz.; else write record #chan,r,0,timeout;qolz.
    !
    call ChangeKeys() ! deletes old keys & add new keys
  endif
  !
else
  if spc(8) = 123 exit function -123 ! record locked
  dim msc4$[100] \ msc4$=msc$(4)
  if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
  select case spc(8)
    case 10000
      ! this is default "message" error
      ! e$ should be set with message to display
    case 11000
      ! search error
      call env(2,"PROGNAME",msc4$)
      call programdump()
      call searcherr(e$, e, Spc(10))
    case else
      if spc(8) < 10000
        call env(2,"PROGNAME",msc4$)
        call programdump()
        call suberr(e$,Spc(8),Spc(10),Msc$(2))
      end if
  end select
  error 10000
End Try
!
!----------------------------------------
sub dosearch(k$,m,k,...)
  !
  !pass k$=keyvalue, m=mode, k=keyno, optionally errflag <>0 return e, don't err
  !
  try enter errflag else let errflag=0
  search #chan,m,k;k$,r,e
  if e if errflag=0 let e$="syserrorfile fileupdateqolz mode (m)=",m," keyno (k)=",k," r=",r," e=",e," keyval (k$)=",k$
  if e if errflag=0 error 11000 !hard error
end sub ! dosearch
!
!----------------------------------------
sub AddKeys(BegDir,EndDir)
  !
  ! BegDir = Beginning Directory
  ! EndDir = Ending Directory
  !
  try
    Dim CurKey$[64],3%,CurRec
    !
    For CurDir=BegDir to EndDir
      CurKey$=""
      if CurDir=1 
		let CurKey$=qolz.OrdNum using "######",qolz.LineNum using "###",qolz.Blankforkey$[1, 1 ]
		IF qolz.LineNum=0 and RTrim$(qolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
			CurKey$=qolz.OrdNum using "######","   ",qolz.RepairLine$
		endif
		call DoSearch(CurKey$,4,CurDir) ! add key to directory
      else
		if CurDir=2 and qolz.nstkitem=0 ! dir 2 and not a nonstock item
			let CurKey$=qolz.PDRecNum using "######",qolz.OrdNum using "######",qolz.LineNum using "###",qolz.Blankforkey$[1, 1 ]
      		IF qolz.LineNum=0 and RTrim$(qolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
				CurKey$=qolz.PDRecNum using "######",qolz.OrdNum using "######","   ",qolz.RepairLine$
			endif
			call DoSearch(CurKey$,4,CurDir) ! add key to directory
		endif
	endif
    next CurDir
else
  dim msc4$[100] \ msc4$=msc$(4)
  if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
  select case spc(8)
    case 10000
      ! this is default "message" error
      ! e$ should be set with message to display
    case 11000
      ! search error
      call env(2,"PROGNAME",msc4$)
      call programdump()
      call searcherr(e$, e, Spc(10))
    case else
      if spc(8) < 10000
        call env(2,"PROGNAME",msc4$)
        call programdump()
        call suberr(e$,Spc(8),Spc(10),Msc$(2))
      end if
  end select
  error 10000
End Try
End Sub ! AddKeys
!
!----------------------------------------
sub DeleteKeys(BegDir,EndDir)
  !
  ! BegDir = Beginning Directory
  ! EndDir = Ending Directory
  !
  Try
    Dim CurKey$[64],3%,CurRec
    !
    For CurDir=EndDir to BegDir Step -1
      CurKey$=""
      if CurDir=1
		let CurKey$=oldqolz.OrdNum using "######",oldqolz.LineNum using "###",oldqolz.Blankforkey$[1, 1 ]
		IF oldqolz.LineNum=0 and RTrim$(oldqolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
			k$=oldqolz.OrdNum using "######","   ",oldqolz.RepairLine$
		endif
		call DoSearch(CurKey$,5,CurDir) ! add key to directory
	else
		if CurDir=2 and oldqolz.nstkitem=0 ! directory 2 and not a non-stock
			let CurKey$=oldqolz.PDRecNum using "######",oldqolz.OrdNum using "######",oldqolz.LineNum using "###",oldqolz.Blankforkey$[1, 1 ]
			IF oldqolz.LineNum=0 and RTrim$(oldqolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
				CurKey$=oldqolz.PDRecNum using "######",oldqolz.OrdNum using "######","   ",oldqolz.RepairLine$
			endif
			call DoSearch(CurKey$,5,CurDir) ! add key to directory
		endif
	endif
    next CurDir
else
  dim msc4$[100] \ msc4$=msc$(4)
  if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
  select case spc(8)
    case 10000
      ! this is default "message" error
      ! e$ should be set with message to display
    case 11000
      ! search error
      call env(2,"PROGNAME",msc4$)
      call programdump()
      call searcherr(e$, e, Spc(10))
    case else
      if spc(8) < 10000
        call env(2,"PROGNAME",msc4$)
        call programdump()
        call suberr(e$,Spc(8),Spc(10),Msc$(2))
      end if
  end select
  error 10000
End Try
End Sub ! DeleteKeys
!
!----------------------------------------
sub ChangeKeys()
  !
  try
    Dim CurKey$[64],OldKey$[64]
    !
    ! Directory #2
    OldKey$=oldqolz.PDRecNum using "######",oldqolz.OrdNum using "######",oldqolz.LineNum using "###",oldqolz.Blankforkey$[1, 1 ]
    IF oldqolz.LineNum=0 and RTrim$(oldqolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
		OldKey$=oldqolz.PDRecNum using "######",oldqolz.OrdNum using "######","   ",oldqolz.RepairLine$
	endif
	CurKey$=qolz.PDRecNum using "######",qolz.OrdNum using "######",qolz.LineNum using "###",qolz.Blankforkey$[1, 1 ]
    IF qolz.LineNum=0 and RTrim$(qolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
		CurKey$=qolz.PDRecNum using "######",qolz.OrdNum using "######","   ",qolz.RepairLine$
	endif
	if CurKey$<>OldKey$
		if oldqolz.nstkitem=0 ! non a non-stock item
			 call DoSearch(OldKey$,5,2)
		endif
		if qolz.nstkitem=0 ! non a non-stock item
			call DoSearch(Curkey$,4,2)
		endif
    endif
    !
    ! Directory #1
    OldKey$=oldqolz.OrdNum using "######",oldqolz.LineNum using "###",oldqolz.Blankforkey$[1, 1 ]
    IF oldqolz.LineNum=0 and RTrim$(oldqolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
		OldKey$=oldqolz.OrdNum using "######","   ",oldqolz.RepairLine$
	endif
	CurKey$=qolz.OrdNum using "######",qolz.LineNum using "###",qolz.Blankforkey$[1, 1 ]
    IF qolz.LineNum=0 and RTrim$(qolz.RepairLine$)<>"" ! no line on 21/22 A B C lines
		CurKey$=qolz.OrdNum using "######","   ",qolz.RepairLine$
	endif
	if CurKey$<>OldKey$
      call DoSearch(OldKey$,5,1)
      call DoSearch(Curkey$,4,1)
    endif
    !
else
  dim msc4$[100] \ msc4$=msc$(4)
  if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
  select case spc(8)
    case 10000
      ! this is default "message" error
      ! e$ should be set with message to display
    case 11000
      ! search error
      call env(2,"PROGNAME",msc4$)
      call programdump()
      call searcherr(e$, e, Spc(10))
    case else
      if spc(8) < 10000
        call env(2,"PROGNAME",msc4$)
        call programdump()
        call suberr(e$,Spc(8),Spc(10),Msc$(2))
      end if
  end select
  error 10000
End Try
End Sub  ! ChangeKeys
!
End Function e ! updateqolz
!
! ----------------------------------------
external sub filedroplistqolz(e$,list$[],maxcnt,Chan,...)
  !
  ! creates a drop list
  !
  ! e$          : to return error msg if any
  ! List$[]     : the record created from the field array
  ! maxcnt      : maxmium # of lines for list array
  ! Chan        : the channel # of the file
  !
  ! Optional parameters
  ! Field$[]    : the fields being created in the drop down list
  !               in the order of being displayed
  ! Section$    : .net, the section to be created and sent to web
  ! KeyNo       : the directory # to search
  ! KeyVal$     : beginning key / compare to
  !
  Try
    !
    Try enter Section$,... else dim Section$[30]
    Try enter Field$[],... else dim Field$[1,30]
    Try enter KeyNo,... else let KeyNo=1
    Try enter KeyVal$ else Dim KeyVal$[64]
    !
    option string redim is legal
    !
    dim tmpfield$[50],tmpline$[500]
    dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20]
    dim SearKey$[64],Mode$[5]
    dim 2%,row
    dim 2%,tmpcnt
    !
    dim qolz. as qol
    !
    call env(1,"BSDEL",bsdel$)
    call env(1,"ESDEL",esdel$)
    call env(1,"RDEL",rdel$)
    call env(1,"FDEL",fdel$)
    !
    if Section$="" let Section$="droplistqolz"
    tmpcnt=maxcnt
    !
    ! beginning section
    List$[0]=bsdel$,Section$,fdel$ ! beginning section
    !
    ! heading section for .net
    cnt=0
    if field$=""
      tmpline$="ID",fdel$,"OrdNum",fdel$,"LineNum",fdel$,"ProdCode",fdel$
      !
      Field$[0]="OrdNum"
      Field$[1]="LineNum"
      Field$[2]="ProdCode$"
    else
      tmpline$="ID",fdel$
      while Field$[cnt]
        tmpline$=tmpline$,trim$(Field$[cnt]),fdel$ ! field name
        cnt=cnt+1
      wend
    endif
    List$[1]=tmpline$
    !
    ! create data section
    row=2
      SearKey$=KeyVal$
      Mode$=">"
      do
        RecNo=FileGetqolz(e$,Chan,Mode$,KeyNo,SearKey$,qolz.)
        if RecNo<0 exit do
        if KeyVal$ if SearKey$[1,len(KeyVal$)]<>KeyVal$ exit do
        !
        if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
        !
        tmpline$=""
        for fcnt=0 to ubound(Field$[],1)
          tmpfield$=""
          if Field$[fcnt]="OrdNum" let tmpfield$=str$(qolz.OrdNum)
          if Field$[fcnt]="LineNum" let tmpfield$=str$(qolz.LineNum)
          if Field$[fcnt]="ProdCode$" let tmpfield$=qolz.ProdCode$," "
          !
		   tmpfield$=RTrim$(tmpfield$) ! no spaces for next check
          if tmpfield$ let tmpline$=tmpline$,rtrim$(tmpfield$),fdel$
        next fcnt
        !
        if tmpline$
          List$[row]=SearKey$,fdel$,tmpline$
          row=row+1
        endif
        !
	   loop
    !
    if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
    List$[row]=esdel$ ! end of section delimiter
    !
else
  dim msc4$[100] \ msc4$=msc$(4)
  if Pos(msc4$, = "/",-1) let msc4$=msc4$[pos(msc4$,="/",-1)+1]
  select case spc(8)
    case 10000
      ! this is default "message" error
      ! e$ should be set with message to display
    case 11000
      ! search error
      call env(2,"PROGNAME",msc4$)
      call programdump()
      call searcherr(e$, e, Spc(10),e$)
    case else
      e$="filedroplistqolz mode=",mode," keyno=",keyno," error=",recno," keyval$=",keyval$
      if spc(8) = 123 let e$=" record locked"
      if spc(8)<10000 if spc(8)<>123
        call env(2,"PROGNAME",msc4$)
        call programdump()
        call suberr(e$,Spc(8),Spc(10),Msc$(2))
      end if
  end select
  error 10000
end try
end sub ! filedroplistqolz
!
! ----------------------------------------
