
! >>> Program 441f
!
! description Bill-to Customer Rank - Current Month
!
! loadsave -w -n 100,10 -o prog/dxport/441f.dl4 src/441f.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 26, 2005  15:43:19
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx441f.src (univ2) [txc] {21489}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX441F - BILLTO RANK REPORT - DECLINING ORDER
Rem AUTHOR: DAVE  OCT  6, 1986
Rem LAST UPDATE: roman 06/12/1991.  verify variables / cleanup
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim A1$[137],T9$[26],B1$[6]
Dim 1%,F,X1[1],C0[1],RANK
Dim 2%,C1[12],X2,R2,R3
Dim 3%,S1[12,2],J,X3[1],T7,T8,T9,Z
Dim J$[40],CNAME$[30],J2$[40],J3$[40],J4$[50],ARDATE$[8]
Dim K1$[50],K2$[20],K3$[20],K4$[20],X$[10]
For J = 2 To 3
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1808","2064"
Read #1,3;CNAME$;
Mat Read #1,0,100;ARDATE$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
!!!! dx add xport reporting code
dim tmp$[300]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"441f",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!!!! dx add xport reporting code
call dxget("k2",K2$) ! starting customer
call dxget("k3",K3$) ! ending customer
call dxget("x1",tmp$) \ X1=tmp$ ! 1 = this year, 2=last year
call dxget("units",tmp$) \ X1[1]=tmp$ ! 1=units, 2=dollars 
call dxget("p1",tmp$) \ if tmp$="" let P1=100 else P1=tmp$ ! top percentile to print
call dxget("sort",tmp$) \ if tmp$="" let F=2 else F=9  ! sort by customer category
call dxget("j2",J2$) ! beg category
call dxget("j3",J3$) ! end category
!!!! dx end
!
X2 = K2$ \ K2$ = X2 Using "######"
If X2 < 0 Or X2 > 999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
!
If K3$ = "" Let K3$ = "999999"
X2 = K3$ \ K3$ = X2 Using "######"
If K3$<K2$ Or X2 > 999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
if P1<1 or P1>100 let e$="Invalid top percentage, must be between 1 and 100!" \ error 10000
!
X2 = J2$ 
If X2 < 0 Or X2 > 999 let e$="Invalid starting category, must be between 0 and 999!" \ error 10000
J2$ = X2 Using "###"
!
If J3$ = "" Let J3$ = "999"
X2 = J3$ \ J3$ = X2 Using "###"
If J3$ < J2$ Or X2 > 999 let e$="Invalid ending category , must be between starting category and 999!" \ error 10000
!
C0[0] = J2$ \ C0[1] = J3$ ! for verifying
if F=2 let C0[0] = 0 \ C0[1] = 999
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

! - L_900: Rem "================================== get picks
! - Print 'CS'
! - Print @0,0;"MX441F"
! - Print @30,0;"BILLTO RANK REPORT (declining order)"
! - L_910: Print @0,15;"ENTER STARTING BILLTO, <CR> FOR FIRST,    E: TO EXIT  ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - X2 = K2$ \ If X2 > 999999 Print @0,15;"OUT OF RANGE!";'CE'; \ Signal 3,15 \ Goto L_910
! - K2$ = X2 Using "######"
! - L_940: Print @6,16;"ENDING BILLTO,   <CR> FOR LAST,     E: TO EXIT  ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "999999"
! - X2 = K3$
! - If X2 > 999999
! -   Print @0,15;"OUT OF RANGE !";'CE';
! -   Signal 3,15
! -   Print @0,15;"ENTER STARTING BILLTO, <CR> FOR FIRST,    E: TO EXIT  ";K2$;
! -   Goto L_940
! - End If 
! - K3$ = X2 Using "######"
! - If K2$ <= K3$ Goto L_990
! - Print @0,15;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: K1$ = K2$ \ J1 = 70 \ J2 = 0 \ T7 = 0
! - L_1000: Print @0,17;'CE';"SELECTIONS:  1: THIS YEAR,  2: LAST YEAR ";
! - Input ""J$
! - X1 = J$ \ If X1 < 1 Or X1 > 2 Goto L_1000
! - L_1040: Print @0,18;'CE';"SELECT:  1: UNITS,  2: DOLLARS ";
! - Input ""J$
! - X1[1] = J$ \ If X1[1] < 1 Or X1[1] > 2 Goto L_1040
! - L_1070: Print @0,19;'CE';"ENTER THE TOP % TO PRINT, <CR> FOR ALL ";
! - Input ""J$
! - If J$ = "" Let J$ = "100"
! - P1 = J$ \ If P1 < 1 Or P1 > 100 Goto L_1070
! - L_1105: Print @0,20;'CL';"SORT BY CUSTOMER CATEGORY? (Y/N) ";
! - Input ""J2$ \ If J2$ = "Y" Goto L_1200
! - If J2$ <> "N" Goto L_1105
! - F = 2 \ C0 = 0 \ C0[1] = 999
! - Goto L_1320
! - L_1200: Rem CTGY
! - Print @0,21;'CE';"ENTER STARTING CATEGORY, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
! - X2 = J2$ \ If X2 < 0 Or X2 > 999 Goto L_1200
! - J2$ = X2 Using "###"
! - L_1240: Print @6,22;'CE';"ENDING  CATEGORY,  <CR> FOR LAST,    E: TO EXIT ";
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
! - If J3$ = "" Let J3$ = "999"
! - X2 = J3$ \ If X2 < 0 Or X2 > 999 Goto L_1240
! - J3$ = X2 Using "###"
! - If J2$ <= J3$ Goto L_1305
! - Print @0,21;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
! - Signal 3,30 \ Goto L_1200
! - L_1305: C0 = J2$ \ C0[1] = J3$
! - F = 9
!
L_1320: 
! *** Sort Section
J3$ = " ",J3$ \ K1$ = " ",K1$
! - Print @0,23;'CE';"Clearing sort file..."; \ Signal 3,0
J4$ = " ",J4$
L_1415: Search #9,3,1;J4$,V1,E
If E = 2 Goto L_1500
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 441f sortfile mode (m)=5 keyno (k)=1 r=",v1," e=",e," keyval (k$)=",j4$ \error 10000
Goto L_1415
L_1500: Rem "=========== sort loop 1, weed out un-wanted data
BILLTOOR = 1
! - Print @0,23;'CE';"Sorting...please wait"; \ Signal 3,0
L_1520: 
Search #2,3,1;K1$,R1,E
If E = 2 ! eof
  If BILLTOOR Goto L_1900 Else Goto L_1700
End If 
Mat Read #2,R1,142;C1;
Z = K2$ \ If C1[4] < Z Goto L_1520
Z = K3$ \ If C1[4] > Z Goto L_1520
Gosub L_6700
If C1[9] < C0[0] Goto L_1520
If C1[9] > C0[1] Goto L_1520
BILLTOOR = 0
J4$ = " ",J4$ \ If F = 9 Let J4$ = C1[9] Using "###"
J4$[4,15] = "}}}}}}}}}.}}"
J4$[16,21] = K4$[1,6]
J4$[22,27] = K1$[1,6]
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 441f sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1520
!
L_1700: Rem "=========== sort loop 2, calculate and sort by rank
K1$ = " ",K1$;X3[0] = 0;X3[1] = 0;J4$ = ""
L_1710: Search #9,3,1;K1$,R2,E 
If E Gosub L_1795 \ Goto L_1900
If J4$ = "" Let J4$ = K1$;R3 = R2
If K1$[1,21] <> J4$[1,21] Gosub L_1795
Mat Read #2,R2,142;C1;
If X1 = 1 Mat Read #3,R2,4;S1;
If X1 = 2 Mat Read #3,R2,238;S1;
If X1[1] = 1 Let X3[0] = S1[0,0]
If X1[1] = 2 Let X3[0] = S1[0,1]
If Not(X3[0]) Goto L_1710
T7 = T7 + Abs(X3[0]) \ X3[1] = X3[1] + X3
Goto L_1710
L_1795: J4$[4,15] = (99999999.99 - X3[1]) Using "#########.##"
J4$[22,27] = "      "
B1$ = J4$[16,21]
If B1$ = ""
  Goto L_1810 
Else
  Search #2,2,1;B1$,R3,E 
  If E Let e$ = "syserrorfile 441f sortfile mode (m)=2 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",B1$ \error 10000
endif
Search #9,4,1;J4$,R3,E 
If E Let e$ = "syserrorfile 441f sortfile mode (m)=4 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",J4$ \error 10000
J4$ = K1$;R3 = R2
X3[1] = 0
L_1810: Return 
!
! *** Process
L_1900: Rem "=====
! - Print @0,23;"Printing...please wait";'CE'; \ Signal 3,0
!
if j8 ! dx xml headings
 if F=9 ! sort by category
   tmp$="CATEGORY",fdel$,"RANK",fdel$
 else 
   tmp$="RANK",fdel$
 endif
 tmp$=tmp$,"CUST #",fdel$,"CUSTOMER NAME",fdel$
 tmp$=tmp$,"SALES",fdel$
 !
 call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
J2$ = " ",J2$
If X1 = 1 Let J2$ = "THIS YEAR "
If X1 = 2 Let J2$ = "LAST YEAR "
J2$ = J2$,"SALES - "
If X1[1] = 1 Let J2$ = J2$,"UNITS"
If X1[1] = 2 Let J2$ = J2$,"DOLLARS"
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = "" \ K4$ = " ",K4$ \ RANK = 0
L_2000: 
Search #9,3,1;K1$,R1,E 
If E Goto L_9100
If K1$[4,4] = "}" Goto L_2000
If K4$[1,3] <> K1$[1,3] Gosub L_4500
K4$ = K1$
Mat Read #2,R1,0;A1$;
Mat Read #2,R1,142;C1;
X3[0] = K1$[4,15]
If X3[0] Let X3[0] = (99999999.99 - X3)
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9 = T9 + X3 \ T8 = T8 + X3
If P1 <> 100 If T9 >= (T7 * (P1 / 100)) Let K1$ = "}}}}"
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;" "
Print #0;"** TOTALS **";
Print #0; Using "----,---,---,--#.##"; Tab 50;T9
Return 
!
L_4500: Rem "================================= category break
if J8 return ! dx xml
!
If K4$[1,3] = "   " Goto L_4560
Gosub L_5800
Print #0;" "
Print #0;"** ";K4$[1,3];" TOTALS **";
Print #0; Using "----,---,---,--#.##"; Tab 50;T8
Print #0;" "
J1 = J1 + 3
L_4560: T8 = 0 \ RANK = 0
Return 
!
L_5000: Rem "================================= print line
RANK = RANK + 1 
!
if J8 ! dx xml
  if F=9 ! category
    tmp$=K1$[1,3],fdel$,RANK using "#####",fdel$
  else
    tmp$=RANK using "#####",fdel$
  endif
  tmp$=tmp$,C1[1] Using "######",fdel$
  tmp$=tmp$,rtrim$(A1$[31,60]),fdel$
  tmp$=tmp$,X3 Using "----,---,---,--#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Print #0; Using "#####";RANK;
Print #0; Using "######"; Tab 7;C1[1];
Print #0; Tab 15;A1$[31,60];
Print #0; Using "----,---,---,--#.##"; Tab 50;X3
J1 = J1 + 1
Return 
!
L_5800: Rem "================================ headings
if J8 return ! dx xml
!
If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 441F - ";T9$;
Print #0; Tab 50;" BILL TO SALES RANKING REPORT"
Print #0; Tab 5;"TOP";P1;"% OF SALES";
Print #0; Tab 51;J2$
Print #0;" "
Print #0;" RANK";
Print #0; Tab 7;"CUST #";
Print #0; Tab 15;"CUSTOMER NAME";
Print #0; Tab 54;"SALES  "
Print #0;" "
Return 
!
L_6700: Rem "============================= bill to record #
K4$ = " ",K4$ \ K4$ = C1[4] Using "######"
Search #2,2,1;K4$,R2,E
If E = 1 Goto OUTEND2
Mat Read #2,R2,142;C1;
Return 
!
OUTEND2: Rem BILL-TO CUSTOMER NUMBER NOT FOUND- GIVE MESSAGE
e$ = "AN INVALID CUSTOMER BILL-TO NUMBER HAS BEEN FOUND IN" 
e$=e$,"CUSTOMER NUMBER: ",C1[1],"."
error 10000
!
! - Print @0,15;'CE';
! - Print @0,15;'CL';"AN INVALID CUSTOMER BILL-TO NUMBER HAS BEEN FOUND IN"
! - Print @0,16;'CL';"CUSTOMER NUMBER: ";C1[1];".  "
! - Print @0,17;'CL';"PLEASE CORRECT THE PROBLEM IN PROGRAM 101 & THEN RE-RUN"
! - Print @0,18;'CL';"THIS PROGRAM."
! - Print @0,19;'CL';
! - Print @0,20;"PRESS <CR> TO EXIT ";'CL';
! - Input ""J$
!
OUTEND: Rem EXIT PROGRAM
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
end
!
! - Close #2,#3
! - Chain "MX441"
! - Chain "MX000"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
Goto OUTEND
!
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
!
