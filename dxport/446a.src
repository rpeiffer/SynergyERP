! >>> Program 446a
!
! description Open Backorder Report, Print by Customer or Salesman
!
! loadsave -w -n 100,10 -o prog/dxport/446a.dl4 src/446a.src
!
! 1.0 mm/dd/yyyy change??
!
! ERP Scheduler enabled
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 25, 2004  11:00:51
Rem /w/papermaster/r2002//usr/acct/txc/work/r2002/mx/mx446a.src (univ2) [txc] {38492}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX446A          BACK ORDER REPORT
Rem Author:        B.Swet (04/91)
Rem                UNIVERSAL BUSINESS SYSTEMS
! ----------   notes for upgrade to xrev9 for Morrisette Paper  -----------------
! vst 07/13/05 cct192588 - used prog from rev8(r2002) because there was no 
!                          source code on rev9(r2005) for mx446a & added in
!                          custom code for:
! 04/30/99  ac cct121930 - add option to show transfer qtys.
!                          custom routine:  L_31000:, also custom headings & 
!                                    tabs in line detail
! ----------------------------------------------------------------------------
!
Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,Logic,String,VerifyDate
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
Declare External Sub CreateNetStatus
Declare External Sub ERPCronSuccess

! - Option Default Dialect IRIS1
!
chain read CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,N1,N2,N1$,V9,J8,TIME$,DATE$,CNAME$,ITEM_LAB$,POFLG,STOCKFLG,transflg
!
try

dim 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],2%,C4[8] ! old com line
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim WebStr$[600]
Dim tmp$[5000],tmp1$[5000],tmp2$[100]
dim Stat$[20],hdr$[130]
!
Dim A$[142],A3$[10],ST$[99,5],C$[7]
Dim 2%,B[24],R[27],HA3[2],DT3[1],JWDATE,LL2[1],LL4[3]
DIM 2%,SVEND,EVEND,VENDOR
Dim 3%,OLM[5],A1[7],Z1[9],W3[24],W$[60],P9$[50],BEGINBUY,ENDBUY
Dim J$[40],P0$[20],CCD$[14],D$[30],K12$[10]
Dim 1%,CH,DR,EUN[2],H3[1],H4[2],X1,FG,FG1,FG2,L3[3],UN[2],S2[1],W1[2]
Dim 1%,BUYER,TOTPAGE,POL1[5],POMISC[2],CTWT,poerrflag,LL3[3],LS2[1],poh4[3]
DIM 1%,TR1[13],TRL1[10]
Dim 2%,H0[12],H5[16],X2,C1[3],S1,L2[1],L4[3],L6[5],B1,E1,POL2[2],POH0[5],flags[11]
DIM 2%,oldh0[12],oldh5[16],W2[9]
Dim 3%,CVT,J,J1,ORDTOT,GT,T1,L5[3],L7[11],HLDCD,QTY,QAVAIL,M1[17],S3[17],UNF[6]
Dim 3%,BT,PL4[23],POL3[6],TMPONPO,TMPAVAIL,DIRW3[2],R6,R7,R11,TMPBO,LL7[12]
DIM 3%,TRANSIN_QTY,TRL3[21],rec_rol,v3,v5
Dim K0$[50],K1$[50],K2$[12],K3$[12],K4$[50],KTR$[50],K16$[60],CUSTOM_CUSTOMER$[30]
Dim MK$[6],SB$[20],SPACE$[20],K27$[50],Z$[50],PL1$[120]
Dim X$[20],Z1$[25],L6$[60],L1$[16],S3$[20],KY$[16],HOLDKY$[6],ORGL1$[16]
Dim KPOH$[30],KPOL$[30],P60$[50],W1$[32],K11$[50]
DIM MESSAGE$[800]
If N2[0] = 1 Let SB$ = "CUSTOMER"
If N2[0] = 3 Let SB$ = "SALES PERSON"
ST$[0] = "OR EN" \ st$[1]="OR PT" \ st$[3]="OR RG" \ st$[4]="OR AC" \ st$[5]="IN EN"
st$[6] = "IN PT" \ ST$[7]="IN RG" \ ST$[8]="IN AC"
ST$[58]="PICK " \ st$[59]="HOLD "
SPACE$ = " ",SPACE$
MK$ = "######"
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
If N2 = 1 Let DR = 2
If N2 = 3 Let DR = 3
C1 = N1$[1,6] \ C1[1] = N1$[7,12]
C1[2] = N1$[37,39] \ C1[3] = N1$[40,42]
  LET SVEND = N1$[43,48]
  LET EVEND = N1$[49,54]
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(Trim$(custom_customer$))
! 
! *** Process Section
!
if J8 ! dx xml headings
  !
  if N2[0]=3 let tmp1$="SALES PERSON",fdel$ else tmp1$=""
  tmp$=tmp1$,"CUST # ",fdel$,"NAME ",fdel$,"CITY",fdel$
  tmp$=tmp$,"ORD #",fdel$,"ORD DATE",fdel$
  tmp$=tmp$,"CUST PO",fdel$,"SHIP DATE",fdel$
  tmp$=tmp$,"ENTERED BY",fdel$,"TYP",fdel$
  tmp$=tmp$,"SP",fdel$,"STAT",fdel$
  IF TRANSFLG LET TMP$=TMP$,"QTY TRANS",fdel$
  if N2[6]=1 let Z$="ORDERED" else Z$="SHIPPED"
  tmp$=tmp$,Z$," ORDER TOTAL",fdel$
  if N2[1] ! detail format
    tmp$=tmp$,"LINE",fdel$,"ITEM CODE",fdel$,"DESCRIPTION 1",fdel$
	tmp$=tmp$,"DESCRIPTION 2",fdel$,"PO",fdel$
	tmp$=tmp$,"QTY BACKORD",fdel$,"UM",fdel$
	tmp$=tmp$,"QTY AVAIL",fdel$,"EXTENSION",fdel$
    If POFLG or STOCKFLG let tmp$=tmp$,"PO INFORMATION",fdel$
  endif
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
If Not(J8) If V9[0] Print #0;"\14\"
! - Print @0,22;"PRINTING...please wait";'CE'; \ Signal 3,0
V9[1] = 100 \ V9[0] = 0 \ RCTR = 0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$
If N2 = 1 Let K1$ = N1$[1,6]
If N2 = 3 Let K1$ = N1$[37,39]
L_2090: Search #8,3,DR;K1$,R1,E
If E = 2 Goto L_9100
If N2 = 1 If K1$[1,6] > N1$[7,12] Goto L_9100
If N2 = 3 If K1$[1,3] > N1$[40,42] Goto L_9100
Mat Read #8,R1;H0;
If H0 > N2[10] Goto L_2090
If H0 < N2[9] Goto L_2090
if h0[0] >=20 and h0[0]<=29 goto l_2090     ! skip deleted
if h0[0]>=9 and h0[0]<=19 goto l_2090		! skip credits
If H0[4] >= C1[0] If H0[4] <= C1[1] Goto L_2180
Goto L_2090
L_2180: If H0[11] >= C1[2] If H0[11] <= C1[3] Goto L_2200
Goto L_2090
L_2200: X2 = H0[9] \ Gosub L_7820 \ X2 = 0
JWDATE = X2
If JWDATE >= N1[0] If JWDATE <= N1[1] Goto L_2220
Goto L_2090
L_2220: Mat Read #8,R1,446;P0$;
Mat Read #8,R1,78;H4;
Mat Read #8,R1,104;H5;
try Mat Read #28,H5;A3$; else A3$="UNASSIGNED"
If H4[2] <> N2[4] Goto L_2090
If H5[7] > N2[8] Goto L_2090
If H5[7] < N2[7] Goto L_2090
K0$ = H0[7] Using MK$[1]
L_2270: SEARCH #11,3,1;K0$,rec_rol,V4 
IF  V4
	IF FG2 gosub L_2540
	GOTO L_2090
endif
IF N2=1 IF K0$[1,6]=K1$[7,12] GOTO L_2330
IF N2=3 IF K0$[1,5]=K1$[4,8] GOTO L_2330
IF FG2 gosub L_2540
goto l_2090
L_2330: v3=rec_rol
MAT  READ #11,V3;L2;
Mat Read #11,V3,8;L3;
Mat Read #11,V3,140;L1$;
Mat Read #11,V3,168;L7;
Mat Read #11,V3,256;S2;
If (H5[7] = 21 Or H5[7] = 22) And K0$[7,9] = "   " Let S2[0] = 3
If S2[0] = 3 Goto L_2270
Mat Read #11,V3,260;S3;
Mat Read #11,V3,32;L5;
Mat Read #11,V3,56;L6;
Mat Read #11,V3,16;L4;
Mat Read #11,V3,404;OLM;
ORGL1$[1,12] = L1$[1,12]
LET PROD_REC=L4[0]
If L3[0] Gosub L_6600 \ Goto L_2403
Mat Read #3,L4[0],156;B;
LET VENDOR = B[24]
L_2403: ! verify
!If Not(POFLG) ! INCLUDE NONSTOCK ON PO
POERRFLAG=0
	If L3[0]<>0
		If L4[2]<>0
! H T Berry task 64584 do not vaildate the PO if a NONstock has a PO # on it assume its on PO
           if custom_customer$="HTBERRY" 
		   IF NOT(POFLG) Goto L_2270
		   ENDIF
			GOSUB VERIFYPO:
			IF NOT(POFLG) AND POERRFLAG=0 Goto L_2270
		ENDIF
	ENDIF
! ENDIF


If Not(L3[0]) Mat Read #3,L4[0],256;A;
If Not(L2[1]) Let e$="order # is zero in order line file for order # ",K4$,"!" \ error 10000
IF L2[1]<>H0[7] 
	IF FG2 GOsub L_2540: 
	GOTO L_2090:
endif
GOSUB L_6500:
If Not(L7[3]) Goto L_2270 !!"bo qty=0
If Not(STOCKFLG) !"cct156922 exclude the items that qonpo+oqvail>=qbord
  TMPAVAIL = W3[0] - W3[2]
  If Not(N2[4]) Let TMPAVAIL = A[0] - A[3]
  TMPONPO = W3[1]
  If Not(N2[4]) Let TMPONPO = A[2]
  !If (TMPONPO + TMPAVAIL) >= L7[3] Goto L_2270
  LET TMPBO=L7[3]
  !If H5[7] = 2 Or (H5[7] = 3 And P60$[22,22] <> "Y") And L3[0] = 0
  !  Gosub L_3000
  !  If DIRW3[1] >= L7[3] Goto L_2270
  !End If 

  IF H5[7]=2 OR (H5[7]=3 AND P60$[22,22]<>"Y") AND L3[0]=0
		if L4[2]
	  		GOSUB L_3000:                                        
	  		IF DIRW3[1]>=L7[3] GOTO L_2270:                      
		else 
			gosub check_polines:
			IF DIRW3[1]>=L7[3] GOTO L_2270:
		endif
	else
	!! CK IF IT WOULD FAIL ANYWAY. IF NOT, ACCUM B/O QTY FOR ALL LINES IN PROD
		IF TMPBO<=(TMPONPO+TMPAVAIL) LET TMPBO=0 \ GOSUB L_3300:
		IF (TMPONPO+TMPAVAIL)>=TMPBO GOTO L_2270:               
   ENDIF              
End If 
If N2[5] = 1
  If Not(L3[0]) If (W3[0] - W3[2]) <= 0 Goto L_2270
End If 
If BUYER < N1[2] Or BUYER > N1[3] Goto L_2270
IF VENDOR<SVEND OR VENDOR>EVEND GOTO L_2270 !CK VENDOR RANGE
If N2[2] = 3 Goto L_2480
If N2[2] = 2 If L3[0] Goto L_2510
If N2[2] = 1 If Not(L3[0]) Goto L_2490
Goto L_2270
L_2480: Rem IF L3 GOTO L_2510: !non stock skip
L_2490: If L1$[1,12] >= N1$[13,24] If L1$[1,12] <= N1$[25,36] Goto L_2510
Goto L_2270
L_2510: Gosub L_6500
LET TRANSIN_QTY=0							  !"cct121930 - custom morris
IF TRANSFLG GOSUB L_31000: !"get transfer qty !"cct121930 
ORDTOT = ORDTOT + FNR(OLM[3] * L7[3])
FG2 = 1
Goto L_2270
L_2540: FG2 = 0
K2$ = H0[4] Using MK$
Search #5,2,1;K2$,V5,V4
If V4 let A$ = "* * CUSTOMER NOT FOUND * *"
if V4=0 Mat Read #5,V5;A$;
! "cct121930 - the next 3 lines are custom for morrisette
if transflg
LET CNVTA=TRANSIN_QTY \ LET CNVTU[0]=0;CNVTU[1]=UN[0];CNVTU[2]=1
GOSUB L_20000:
LET TRANSIN_QTY=AMOUNT
Endif
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5887
Gosub L_4000
Gosub L_5000
If N2[1] Gosub L_6000
return



!
L_3000: Rem GET ON PO
mat dirw3=zer \ let dirw3[0]=0
Mat POH0 = Zer \ POH0[0] = 0
If Not(L4[2]) Return 
KPOH$ = " ",KPOH$;KPOH$[3] = L4[2] Using "######"
For X = 1 To 7
  KPOH$[1,2] = X Using "##"
  Search #6,2,1;KPOH$,R6,E 
  If E = 0 Goto L_3050
Next X
Return 
!
L_3050: Rem GOT HEADER - GO FOR LINE
Mat Read #6,R6,0;POH0;
KPOL$ = " ",KPOL$;KPOL$[1,6] = L4[2] Using "######"
L_3060: Search #7,3,1;KPOL$,R7,E 
If E = 2 Return 
X2 = KPOL$[1,6] \ If X2 <> L4[2] Return 
Mat Read #7,R7,0;POL1;
Call Logic(1,2 ^ 0,POL1[3],NONSTK)       
IF NONSTK<>L3[0] GOTO L_3060:   ! record numbers match but stock type needs to also 
Mat Read #7,R7,24;POL3;
Mat Read #7,R7,232;PL4;
Mat Read #7,R7,376;POMISC;
If PL4[10] = H0[7] And PL4[11] = L3[2] Gosub L_3100
Goto L_3060
L_3100: Rem GOT A LINE (ONLY 1?)
If POL1[0] > 2 Return 
If POMISC[0] And Not(N2[7]) Goto L_3190
DIRW3[1] = DIRW3[1] + POL3[2] - POL3[3]
If (POL3[2] - POL3[3]) < 0 Let DIRW3[1] = DIRW3[1] + Abs(POL3[2] - POL3[3])
L_3190: Return 
L_3300: !! ADD ALL THE B/O QTY'S ON ALL THE ORDER LINES TO SEE IF TOT > AVAL+PO
LET K11$=" ",K11$
LET TMPBO=0 !  ACCUMULATE TOTAL B/O AMT FOR A PRODUCT
K11$[1,6]=L4[0] USING "######"
L_3310: SEARCH #11,3,2;K11$,R11,E
IF E=2 RETURN 
IF E return !  GOSUB Err_Search:
LET X2=K11$[1,6] \ IF X2<>L4[0] RETURN 
MAT  READ #11,R11,0;LL2;
MAT  READ #11,R11,8;LL3;
MAT  READ #11,R11,16;LL4;
MAT  READ #11,R11,168;LL7;
MAT  READ #11,R11,256;LS2;
IF LL7[3]=0 GOTO L_3310:
!! EXCLUDE MESSAGE LINES, DIFF WARE, ETC
IF LS2[0]=3 GOTO L_3310: ! "message line
IF N2[4] IF N2[4]<>LL4[3] GOTO L_3310: ! DIFF WARE
!! EXCLUDE NON-STOCKS(PROB NOT THERE) & C/M
IF LL3[0]=1 GOTO L_3310: !NON-STOCKS
IF LL2[0]=12 GOTO L_3310: !C/M

TMPBO=TMPBO + LL7[3]
GOTO L_3310:

check_polines: ! "    check po lines for direct qty
mat dirw3=zer \ let dirw3[0]=0
LET KPOL$=" ",KPOL$;KPOL$[1,6]=L4[0] USING "######"
ckpo1: SEARCH #7,3,2;KPOL$,R7,E \ IF E=2 RETURN                  
IF E return! GOSUB ERR_SEARCH:                                            
LET X2=KPOL$[1,6] \ IF X2<>L4[0] RETURN                           
MAT  READ #7,R7,0;POL1;  
Call Logic(1,2 ^ 0,POL1[3],NONSTK)       
IF NONSTK<>L3[0] GOTO  ckpo1:   ! record numbers match but stock type needs to also      
MAT  READ #7,R7,24;POL3;                                          
MAT  READ #7,R7,232;PL4;                                          
MAT  READ #7,R7,376;POMISC;                                       
mat read #6,pol3[0],242;poh4;
IF poh4[0]<>1 and poh4[0]<>5 goto ckpo1:
IF not (PL4[10]=H0[7] AND PL4[11]=L3[2]) GOSUB L_3100:                  
GOTO ckpo1:                                                      
return

!
L_3500: Rem "========================================== convert figures
If L3[0] Let QTY = CVT \ Goto L_3660
CNVTA = CVT \ CNVTU[0] = 0
If N2[3] = 1 Let CNVTU[1] = PFU1[8]
If N2[3] = 2 Let CNVTU[1] = PFU1[9]
If N2[3] = 3 Let CNVTU[1] = UN[0]
CNVTU[2] = 1
Gosub L_20000
QTY = AMOUNT
CCD$[11,14] = "CWT"
If N2[3] = 1 If PFU1[8] > 0 Mat Read #26,PFU1[8],0;CCD$;
If N2[3] = 2 If PFU1[9] > 0 Mat Read #26,PFU1[9],0;CCD$;
L_3660: If N2[3] = 3 If UN[0] > 0 Mat Read #26,UN[0],0;CCD$;
If N2[3] = 3
  If L3[0] And (UN[0] <> EUN[0])
    CNVTA = CVT;CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1
    Gosub L_20000 \ QTY = AMOUNT
  End If 
End If 
If N2[3] = 3 If UN[0] = -2 Let CCD$[11,14] = "LOT "
If N2[3] = 3 And UN[0] = -3 Let CCD$[11,14] = "LB  "
Return 
!
L_4000: Rem "================================ sort break
If Not(FG) Let C$[1,6] = K1$[1,6] \ FG = 1 \ Goto L_4900
On N2 Goto L_4020,L_4900,L_4070
Goto L_4800
L_4020: If K1$[1,6] = C$[1,6] if J8=0 Goto L_4900
T1 = C$[1,6]
K2$ = T1 Using MK$
D$ = "CUSTOMER NOT FOUND "
Search #5,2,1;K2$,V2,V5
If V5 Goto L_4030
Mat Read #5,V2,30;D$;
L_4030: Goto L_4800
L_4070: If K1$[1,3] = C$[1,3] if J8=0 Goto L_4900
K3$ = C$[1,3]," "
D$ = "SALES PERSON NOT FOUND"
Search #14,2,1;K3$,V2,V5
If V5 Goto L_4800
Mat Read #14,V2;D$;
!
L_4800: Rem =================================================== print total
If N2 = 1 Let C$[1,6] = K1$[1,6]
If N2 = 3 Let C$[1,3] = K1$[1,3]
!
if J8 return ! dx xml
if hdr_printed
	Print #0;""
	Print #0; Using "------,--#.##"; Tab 60;"TOTAL FOR ";SB$;": ";D$; Tab 118;BT
	Print #0;""
	V9[1] = V9[1] + 3
endif
hdr_printed=0
GT = GT + BT
BT = 0
D$ = " ",D$
If N2[6] If Not(TOTPAGE) Gosub L_5800 \ Gosub L_5887
L_4900: Return 
!
L_5000: Rem "================================ print item detail line
!
hdr$=" ",hdr$
if J8 ! dx xml
  gosub L_4000 ! get name
  if N2[0]=3 let tmp1$=rtrim$(D$),fdel$ else tmp1$=""
  !
  tmp1$=tmp1$,H0[4] using MK$,fdel$,rtrim$(A$[31,60]),fdel$
  tmp1$=tmp1$,rtrim$(A$[121,132]),fdel$
  let tmp1$=tmp1$,H0[7] using MK$,fdel$
  X2=H0[9] \ gosub L_7700 ! mask order date (x$)
  tmp1$=tmp1$,X$,fdel$,rtrim$(P0$[1,15]),fdel$
  X2=H0[10] \ gosub L_7700 ! mask ship date (x$)
  tmp1$=tmp1$,X$,fdel$
  tmp1$=tmp1$,rtrim$(A3$[1,10]),fdel$
  tmp1$=tmp1$,H5[7] Using "##",fdel$
  tmp1$=tmp1$,H0[11] Using "###",fdel$
  tmp1$=tmp1$,ST$[H0[0]],fdel$
  if transflg
	tmp1$=tmp1$,LTrim$(Transin_qty Using "-----,--#.##"),fdel$
  endif
  tmp1$=tmp1$,ORDTOT Using "-----,--#.##",fdel$

  !
  If N2[1] ! detail
	! gosub L_6000 ! order lines
    !
    !call addtostr(e$,rstr$,tmp$+rdel$)
  else ! summary
    !
	tmp$=tmp1$
	hdr$=tmp$+rdel$
    !call addtostr(e$,rstr$,tmp$+rdel$)
  endif
  !
  goto DetailPrintExit
endif
!
If N2[1] Goto L_5005
If S1 = H0[4] Goto L_5040
L_5005: !Print #0;"" \ V9[1] = V9[1] + 1
hdr$=" ",hdr$
if not(transflg)
	hdr$[1,len(mk$)]=h0[4] Using MK$
	hdr$[9,39]=A$[31,60]
	hdr$[40,51]=A$[121,132]
else ! needs shortening to fit
	hdr$[1,len(mk$)]=h0[4] Using MK$  ! cust code
	hdr$[7,31]=A$[31,55] !cust name
	hdr$[33,44]=A$[121,132] !cust city
endif
L_5040: ! no cust print
If not(transflg)
	hdr$[54,53+len(mk$)]=h0[7] USING MK$ !order #
Else
	hdr$[47,46+len(mk$)]=h0[7] USING MK$ !order #
endif
X2 = H0[9]
Gosub L_7700
if not(transflg)
	hdr$[61,60+len(x$)]=X$
	hdr$[71,85]=P0$[1,15]
else
	hdr$[54,53+len(x$)]=X$ !order date
	hdr$[64,78]=P0$[1,15] !cust po  (too short)
endif
X2 = H0[10]
Gosub L_7700
if not(transflg)
	hdr$[86,85+len(x$)]=X$
	hdr$[95,104]=A3$[1,10]
	hdr$[106,107]=h5[7] using "##"
	hdr$[109,111]=h0[11] Using "###"
	hdr$[114,119]=ST$[H0[0]]+"     "
else ! squeeze it
	hdr$[79,78+len(x$)]=X$ !due date
	hdr$[88,96]=A3$[1,9] !ent by
	hdr$[99,100]=h5[7] using "##" !ord type
	hdr$[102,104]=h0[11] USING "###" !salesrep
	hdr$[106,110]=ST$[H0[0]]+"     " !ord stat
	hdr$[112,118]=transin_qty USING "#######"
endif
hdr$[119,130]=ordtot Using "-----,--#.##"
hdr$[131]=""
!
DetailPrintExit:
!V9[1] = V9[1] + 2 \ If Not(N2[1]) Let RCTR = RCTR + 1
BT = BT + ORDTOT \ ORDTOT = 0
S1 = H0[4]
Return 
!
L_5300: Rem ================================================== PROD LINE
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5887
if len(hdr$)
	if J8 ! dx xml
		! browser
		call addtostr(e$,rstr$,hdr$)
	else
		!printing
		Print #0;"" \ V9[1] = V9[1] + 1
		print #0;hdr$ \ V9[1] = V9[1] + 1
	endif
	hdr_printed=1
endif
hdr$=""
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5887
If L3[0] Let QAVAIL = 0 else QAVAIL = W3[0] - W3[2]
!
if J8 ! dx xml
  tmp$=tmp1$,L3[2] Using MK$,fdel$
  tmp$=tmp$,rtrim$(L1$[1,16]),fdel$
  tmp$=tmp$,rtrim$(L6$[1,30]),fdel$,rtrim$(L6$[31,60]),fdel$
  if L4[2]<>0
	let tmp$=tmp$,L4[2] Using "######" 
	if poerrflag<>0
		let tmp$=tmp$,"*E"
	endif
	let tmp$=tmp$,fdel$
  else
	  tmp$=tmp$,"",fdel$
  endif
  tmp$=tmp$,QTY Using "-------#.##",fdel$
  tmp$=tmp$,CCD$[11,14],fdel$
  CVT = QAVAIL \ Gosub L_3500
  tmp$=tmp$,QTY Using "-------#.##",fdel$
  X3[2] = L5[3] \ If N2[6] = 1 Let X3[2] = L5[0]
  tmp$=tmp$,FNR(OLM[3] * L7[3]) Using "-----,--#.##",fdel$
  if poflg<>0  or stockflg<>0 
	If L4[2]<>0
		Gosub L_5500
	Else 
		Gosub L_5400
	End If 
	let tmp$=tmp$,fdel$
  end if
  call addtostr(e$,rstr$,tmp$+rdel$)!
  goto EndLinePrint
endif
!
Print #0; Using MK$; Tab 1;L3[2];
Print #0; Tab 10;L1$[1,16];
Print #0; Tab 27;L6$[1,30];
If L4[2]
  Print #0; Tab 59;L6$[31,51];
  Print #0; Using " PO ######"; Tab 79;L4[2];
Else 
  Print #0; Tab 59;L6$[31,60];
End If 
Print #0; Using "-------#.##"; Tab 90;QTY;
Print #0; Tab 102;CCD$[11,14];
CVT = QAVAIL
Gosub L_3500
Print #0; Using "-------#.##"; Tab 107;QTY;
Print #0; Using "-----,--#.##"; Tab 119;FNR(OLM[3] * L7[3])
if l4[2]<>0 and poerrflag<>0
	let v9[1]=v9[1]+1
	print #0;"****** PO Error ";
	if poerrflag=99 Print#0;"- Purchase Order Line Not On File ";
	if poerrflag=98 Print#0;"- Purchase Order Closed "; 
	if poerrflag=97 Print#0;"- Purchase Order Line Closed ";
	print #0;"******"
endif
OrderLinePrintCont:
CCD$ = " ",CCD$
V9[1] = V9[1] + 1 \ If N2[1] Let RCTR = RCTR + 1
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5887
if poflg or stockflg
	If L4[2]
	Gosub L_5500
Else 
  Gosub L_5400
End If 
 if j8 let tmp$=tmp$,fdel$
end if
EndLinePrint: ! 
Return 
!
L_5400: Rem HEADINGS FOR LINE 2 OF PRODUCT LINE
X = 0;FINDPO = 0;KY$ = " ",KY$
If L3[0] Goto L_5495
If Not(L7[3]) Goto L_5495
Holdky$=" ",holdky$
KY$ = " ",KY$ \ KY$[1,6]= L4[0] Using MK$ \ HOLDKY$ = KY$[1,6]
L_5424: Search #7,3,2;KY$,R1,E 
If HOLDKY$ <> KY$[1,6] Goto L_5470
If E > 0 Goto L_5470
Mat Read #7,R1,12;POL2;
Mat Read #7,R1;POL1;
Call Logic(1,2 ^ 0,POL1[3],NONSTK)       
IF nonstk<>L3[0] GOTO l_5424:
Mat Read #7,R1,24;POL3;
Mat Read #7,R1,232;PL4;
Mat Read #6,POL3[0];POH0;
If POH0[0] >= 11 And POH0[0] <= 14 Goto L_5424
If N2[4] And POL1[1] <> N2[4] Goto L_5424
If POL1[0] = 3 Goto L_5460
Call Logic(1,2 ^ 0,POL1[3],NONSTK) \ If NONSTK Goto L_5460
X = X + 30
If J8=0 if X = 120 Print #0;"" \ V9[1] = V9[1] + 1;X = 30
if POL2[2]
  FINDPO = 1
  Z$ = POL2[2] Using "&&&&&&"
  Call FormatDate(Z$,Z$,E)
  if J8 ! dx xml
    tmp$=tmp$,"PO:",KY$[7,12]," DUE:",Z$,"  "
    IF PL4[10]<>0 LET tmp$=tmp$," FOR ORDER #:",PL4[10] 
  else
    Print #0; Tab X;"PO:";KY$[7,12];
    !If poerrflag<>0
	!	let z$="PO ERROR"
    !endif
    Print #0;" DUE:";Z$;
    IF PL4[10]<>0 PRINT #0;" FOR ORDER #:";PL4[10];
  endif
End If 
L_5460: Goto L_5424
L_5470: 
If FINDPO if J8=0 Print #0;"" \ V9[1] = V9[1] + 1
L_5495: Return 
!
L_5500: Rem " ================check for open po's
KY$ = " ",KY$;KY$[1,6] = L4[2] Using "######"
L_5510: Search #7,3,1;KY$,RKY,E 
If E = 2 Return 
PO_NUMBER = KY$[1,6]
If PO_NUMBER <> L4[2]
  if J8 let tmp$=tmp$,"PO DUE DATE: N/A "
  if J8=0 Print #0; Tab 71;"PO DUE DATE: N/A"
  V9[1] = V9[1] + 1
  Return 
endif
Mat Read #7,RKY,66;PL1$;
If (PL1$[81,92] <> L1$[1,12]) And (PL1$[81,92] <> ORGL1$[1,12]) Goto L_5510
Mat Read #7,RKY;POL1;
If POL1[0] = 3
  if J8 let tmp$=tmp$,"PO DUE DATE: N/A "
  if J8=0 Print #0; Tab 71;"PO DUE DATE: N/A"
  V9[1] = V9[1] + 1
  Return 
endif
Mat Read #7,RKY,12;POL2;
Mat Read #7,RKY,232;PL4;
If PL4[10] <> L2[1] Goto L_5510
Z$ = POL2[2] Using "&&&&&&" \ Call FormatDate(Z$,Z$,E)
if J8 let tmp$=tmp$,"PO DUE DATE: ",Z$
IF J8 IF PL4[10]<>0 LET tmp$=tmp$," FOR ORDER #:",PL4[10] 
if J8=0 Print #0; Tab 71;"PO DUE DATE: ";Z$;
IF J8=0 IF PL4[10]<>0 PRINT #0;" FOR ORDER #:";PL4[10] 
IF J8=0 IF PL4[10]=0 PRINT #0;" "  
V9[1] = V9[1] + 1
Return 
!
L_5800: Rem "============================================ headings
if J8 return ! dx xml
!
! - If V9[0] If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(J8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 9
If Not(J8) Print #0;"\12\";
Print #0; Tab 10;DATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE:";V9[0]
Print #0;" -446A - ";TIME$;
Print #0; Tab 48;"B A C K O R D E R   R E P O R T"
Print #0; Tab 55;"SORTED BY ";SB$
Print #0; Using "WAREHOUSE ##/"; Tab 51;N2[4];
If Not(N2[7]) Print #0;"ALL ORDER TYPES" Else Print #0; Using "ORDER TYPE ##";N2[7]
Print #0;""
if not(transflg)
Print #0; Tab 1;"CUST # "; Tab 15;"NAME "; Tab 40;"CITY";
Print #0; Tab 54;"ORD #  ORD DATE"; Tab 74;"CUST PO"; Tab 85;"SHIP DATE";
Print #0; Tab 95;"ENTRD BY"; Tab 106;"TYP  SP STAT";
Else
PRINT #0; TAB 0;"CUST # "; TAB 13;"NAME "; TAB 33;"CITY";
PRINT #0; TAB 47;"ORD #  ORD DATE"; TAB 67;"CUST PO"; TAB 79;"SHP DATE";
PRINT #0; TAB 88;"ENTRD BY"; TAB 99;"TYP  SP STAT";
PRINT #0; TAB 112;"TRANS QTY";
endif
Print #0; Tab 122;"ORD TOTAL"
Print #0;""
S1 = 0
Return 
!
L_5887: Rem =============================================== header for products
if J8 return ! dx xml
!
If Not(N2[1]) Goto L_5920
Print #0;""
Print #0; Tab 2;"LINE"; Tab 10;ITEM_LAB$; Tab 33;"DESCRIPTION 1";
Print #0; Tab 66;"DESCRIPTION 2"; Tab 91;"QTY B/ORD"; Tab 102;"U/M";
Print #0; Tab 108;"QTY AVAIL"; Tab 122;"EXTENSION"
V9[1] = V9[1] + 2
L_5920: Return 
!
L_6000: Rem PROD PRINT
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5887
K4$ = ""
K4$ = H0[7] Using MK$[1]
L_6020: Search #11,3,1;K4$,V3,V4
If V4 Goto L_6350
Mat Read #11,V3;L2;
If Not(L2[1]) Let e$="order # is zero in order line file for order # ",K4$,"!" \ error 10000
If L2[1] <> H0[7] Goto L_6350
Mat Read #11,V3,256;S2;
If (H5[7] = 21 Or H5[7] = 22) And K4$[7,9] = "   " Let S2[0] = 3
If S2[0] = 3 Goto L_6020
Mat Read #11,V3,168;L7;
If Not(L7[3]) Goto L_6020
Mat Read #11,V3,8;L3;
Mat Read #11,V3,140;L1$;
ORGL1$[1,12] = L1$[1,12]
! If L3[2] > 900 Goto L_6020
If N2[2] = 3 Goto L_6072
If N2[2] = 2 If L3[0] Goto L_6077
If N2[2] = 1 If Not(L3[0]) Goto L_6072
Goto L_6020
L_6072: Rem MAT  READ #11,V3,140;L1$;
If Not(L3[0]) If L1$[1,12] >= N1$[13,24] If L1$[1,12] <= N1$[25,36] Goto L_6077
If L3[0] Goto L_6077
Goto L_6020
L_6077: Rem
Mat Read #11,V3,16;L4;
Mat Read #11,V3,32;L5;
Mat Read #11,V3,56;L6;
Mat Read #11,V3,80;L6$;
Mat Read #11,V3,260;S3;
Mat Read #11,V3,370;S3$;
Mat Read #11,V3,250;UN;
Mat Read #11,V3,404;OLM;
Mat Read #11,V3,446;EUN;
Mat Read #11,V3,452;UNF;
Read #11,V3,514;CTWT;
LET PROD_REC=L4[0]				! "cct121930
If L3[0] Gosub L_30000
If L3[0] Gosub L_6600 \ Goto L_6190
Mat Read #3,L4[0],156;B;
Mat Read #3,L4[0],256;A;
Mat Read #3,L4[0],460;A1;
Mat Read #3,L4[0],512;PFU1;
Mat Read #3,L4[0],554;PFU2;
Mat Read #3,L4[0],894;C4;
LET VENDOR = B[24]
L_6190: Rem  MAT  READ #3,L4[0],894;C4;
If L3[0] If S3$ <> SPACE$ Let ORGL1$[1,16] = L1$[1,16];L1$[1,16] = S3$[1,16]
CVT = L7[3] \ Gosub L_6500
IF VENDOR<SVEND OR VENDOR>EVEND GOTO L_6020 !CK VENDOR RANGE
If N2[5] = 1
  If Not(L3[0]) If (W3[0] - W3[2]) <= 0 Goto doneline
End If 
!If Not(POFLG)
	If L3[0]<>0
		If L4[2]<>0
			GOSUB VERIFYPO:
			IF NOT (POFLG) AND POERRFLAG=0 Goto doneline
		ENDIF
	ENDIF
!ENDIF
If Not(STOCKFLG) !"cct156922 exclude the items that qonpo+oqvail>=qbord
  TMPAVAIL = W3[0] - W3[2]
  If Not(N2[4]) Let TMPAVAIL = A[0] - A[3]
  TMPONPO = W3[1]
  If Not(N2[4]) Let TMPONPO = A[2]
  !If (TMPONPO + TMPAVAIL) >= L7[3] Goto doneline
  !If H5[7] = 2 Or (H5[7] = 3 And P60$[22,22] <> "Y") And L3[0] = 0
  !  Gosub L_3000
  !  If DIRW3[1] >= L7[3] Goto doneline
  !End If 
  LET TMPBO=L7[3]
   IF H5[7]=2 OR (H5[7]=3 AND P60$[22,22]<>"Y") AND L3[0]=0
		if L4[2]
			GOSUB L_3000:                                        
			IF DIRW3[1]>=L7[3] GOTO L_6020:                      
		else 
			gosub check_polines:
			IF DIRW3[1]>=L7[3] GOTO L_6020:
		endif
	else
	!! CK IF IT WOULD FAIL ANYWAY. IF NOT, ACCUM B/O QTY FOR ALL LINES IN PROD
		IF TMPBO<=(TMPONPO+TMPAVAIL) LET TMPBO=0 \ GOSUB L_3300:
		IF (TMPONPO+TMPAVAIL)>=TMPBO GOTO L_6020:               
   ENDIF          
End If 
If BUYER < N1[2] Or BUYER > N1[3] Goto doneline
FG1 = 1
Gosub L_3500
If V9[1] > V9[4] Gosub L_5800 \ Gosub L_5887
Gosub L_5300
doneline:Goto L_6020
!
L_6350: 
!If Not(FG1)
!  if J8=0 
!    Print #0; Tab 20;"NO LINE ITEMS FOR THIS ORDER"
!  else ! dx m
!    tmp$=tmp$,"",fdel$,"",fdel$,"NO LINE ITEMS FOR THIS ORDER",fdel$
!    tmp$=tmp$,"",fdel$,"",fdel$,"",fdel$,"",fdel$
!    tmp$=tmp$,"",fdel$,"",fdel$
!    if POFLG or STOCKFLG let tmp$=tmp$,"",fdel$   
!  endif
!  V9[1] = V9[1] + 1
!endif
FG1 = 0
Return 
!
L_6500: Rem "get whse rec for product
For W = 0 To 24 \ W3[W] = 0 \ Next W
For W = 0 To 2 \ W1[W] = 0 \ Next W
If P9$[33,33] = "N" Return 
If L3[0] Return 
BUYER = 0
W$ = " ",W$
W$[1,12] = L1$[1,12]
W$[13,14] = H4[2] Using "##"
Search #20,2,1;W$,W9,E 
If E Goto L_6590
MAT  READ #20,W9,0;W1$		! " cct121930
Mat Read #20,W9,38;W2
Mat Read #20,W9,78;W3
Mat Read #20,W9,32;W1;
BUYER = W1[2]
IF W2[3] LET VENDOR = W2[3] !PRODWHSE VENDOR # OVERRIDES PRIM VEND
L_6590: Return 
!
L_6600: Rem ===================== get buyer code for non-stocks
A[0] = 0;A[1] = 0;A[3] = 0;B[24] = S3[14];HA3[1] = 0;BUYER = 0
LET VENDOR = S3[14]
K12$ = " ",K12$;K12$[1,6] = L2[1] Using "######";K12$[7,9] = L3[2] Using "###"
Search #12,2,1;K12$,R[12],E 
If Not(E)
  Mat Read #12,R[12],120;HA3;
End If 
BUYER = HA3[1]
Return 

VerifyPO: ! 
! poerrflag=0 : no error
! poerrflag=99 : po line not found
! poerrflag=98 : po closed
! poerrflag=97 : po line closed
POERRFLAG=0
! if poflg<>0 return 
if l3[0]=0 return ! stock flag
if l4[2]=0 return ! no po
KPOH$ = " ",KPOH$
KPOH$[1,2]=" 7"
KPOH$[3] = L4[2] Using "######"
SEARCH #6,2,1;KPOH$,R6,E
IF NOT(E)
	LET POERRFLAG=98 ! PO CLOSED
ELSE	
	KPOL$ = " ",KPOL$;KPOL$[1,6] = L4[2] Using "######"
	DO
		Search #7,3,1;KPOL$,R7,E 
		If E<>0
			POERRFLAG=99 ! PO LINE NOT FOUND FOR SO#
			EXIT do
		ENDIF
		X2 = KPOL$[1,6]
		If X2 <> L4[2]
			POERRFLAG=99 ! PO LINE NOT FOUND FOR SO#
			EXIT DO
		ENDIF
		Mat Read #7,r7,232;pl4;
		If PL4[10] = H0[7] And PL4[11] = L3[2]
			Mat Read #7,R7,0;POL1;
			if pol1[0]=3
				let poerrflag=97 ! line closed
				exit DO
			endif
			! unpack flag          
			LET X2=L1[3] 
			FOR K=0 TO 11  
				LET FLAGS[K]=SGN(FRA(X2/2)) \ LET X2=INT(X2/2)
			NEXT K 
			if flags[2]<>0
				let poerrflag=97 ! line closed
				exit do
			endif
			! LINE FOUND AND IT OK
			LET POERRFLAG=0
			exit do
		ENDIF
	LOOP
endif
return
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
! try Call dxclose() else rem
call ERPCronSuccess()
End 
!
! - V9[0] = 99
! - Chain "MX446"
!
L_9100: K1$ = "" \ TOTPAGE = 99 \ Gosub L_4000
if J8=0 Print #0; Using "------,--#.##"; Tab 60;"TOTAL OPEN BACKORDER EXTENSION"; Tab 118;GT
! - Print @0,22;RCTR;" ITEM(S) PRINTED. PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ rem ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - if FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[15] = CTWT
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return
! ------cct121930 - the following routine is custom for Morrisette
L_31000: !ADD UP TRANSFER QTY 
FOR X=0 TO 12                           
	LET OLDH0[X]=0;OLDH5[X]=0
NEXT X
FOR X=0 TO 12
	LET oldH0[X]=h0[x];oldH5[X]=h5[x]   
NEXT X                                  
! LET TRANSIN_QTY=0
LET KTR$=" ",KTR$;KTR$[1,6]=PROD_REC USING "######"
L_31030: SEARCH #11,3,2;KTR$,LINE_REC,E
IF E GOTO L_31360:
LET X2=KTR$[1,6]
IF PROD_REC<>X2 GOTO L_31360:    
if prod_rec<>l4[0] goto L_31360:  
MAT  READ #11,LINE_REC;L2;        
MAT  READ #11,LINE_REC,168;L7;
FOR X=0 TO 12
	LET H0[X]=0;H5[X]=0
NEXT X
FOR ST=1 TO 7
	LET K12$[1,2]=ST USING "##"
	LET K12$[3,8]=L2[1] USING "######"
	SEARCH #8,2,1;K12$,R12,E ! \ IF E>1 GOSUB ERR_SEARCH:
	IF E GOTO L_31310:
	MAT  READ #8,R12,0;H0;
	MAT  READ #8,R12,104;H5;
	GOTO L_31320:
L_31310: NEXT ST
GOTO L_31030:
L_31320: IF H5[7]<>16 GOTO L_31030:
IF H5[11]<>N2[4] GOTO L_31030: !"old-WHSE cct123454
LET TRANSIN_QTY=TRANSIN_QTY+(L7[2]-L7[0])
GOTO L_31030:
L_31360: REM GET MORE TRANSFER INFO
LET COMP=IntCo ! INT((SPC 5-INT(SPC 5/16384)*16384)/64)
LET K16$=" ",K16$ \ LET K16$[1,12]=W1$[1,12]
L_31380: SEARCH #16,3,2;K16$,R[16],E \ IF E GOTO L_31510:
! IF E GOSUB ERR_SEARCH:
IF K16$[1,12]<>W1$[1,12] GOTO L_31510:
MAT  READ #16,R[16],0;TRL1;
IF TRL1[0]=2 GOTO L_31380:
IF TRL1[7]<>0 GOTO L_31380:
MAT  READ #16,R[16],22;TRL3;
MAT  READ #15,TRL3[1],0;TR1;
IF COMP<>TR1[4] GOTO L_31380:
IF W1<>TR1[5] GOTO L_31380:
IF TR1[1]<>2 GOTO L_31380:
LET TRANSIN_QTY=TRANSIN_QTY+(TRL3[3])
GOTO L_31380:
L_31510: REM 
FOR X=0 TO 12                                   
	LET H0[X]=0;H5[X]=0                           
NEXT X                                          
for X=0 TO 12                                   
	LET H0[X]=oldh0[x];H5[X]=oldh5[x]           
NEXT X  
Return
!
else ! main try
	include "src/callmainerrnet.inc"
End try
end

