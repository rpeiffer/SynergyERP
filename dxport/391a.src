! >>> Program 391a
!
! description Purchasing P.O. Status Report by Product
!
! loadsave -w -n 100,10 -o prog/dxport/391a.dl4 src/391a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 25, 2003  12:57:44
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/po/po391a.src (univ2) [jcs] {48329}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem PO391A  OPEN P.O.'S BY PRODUCT
Rem  AUTHOR: G.DOSCHER   3/30/81
Rem  LAST UPDATE:  G.DOSCHER  10/04/88
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
Com 2%,CODATE
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim 1%,F,L1[5],H4[3],WHSE,2%,D9[5]
Dim 2%,H0[5],L2[2],BV,EV,V2,X2,H3[4],DT3[1],JDATE[5]
Dim 3%,L3[6],M[14],O1,S[14],AMOUNT
Dim A$[50],A1$[50],A2$[50],A6$[36],D$[8],F$[20],F1$[30],H$[82],H1$[116]
Dim P$[80],R1$[20],R2$[20],R3$[20],R4$[20],S2$[100],U5$[132],ANS$[2],S$[20]
Dim L1$[92],P9$[50],U6$[62],U9$[132],X$[20],2%,PUNIT$[4],SUNIT$[4],V1$[6]
Dim V2$[6],VEND$[6]
A1$ = " ",A1$;VEND$ = " ",VEND$
!
For K1 = 2 To 12 \ Read J \ If J = -1 Goto L_820
  Read #1,88,J;F$; \ Ropen #K1,F$
L_820: Next K1
Data "-1","1792","-1","2400","1808","-1","2416","-1","2432","2464","1728"
!
Mat Read #1,0,100;D$;
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
L0 = 99 \ P1 = 0 \ K = 0 \ M[0] = 0 \ O1 = 0
If Err 0 Let J8 = Spc(8)
PL2 = Chf(0)
if Err 0 gosub ERR_TRAP
PL2 = 60 \ If J8 Let PL2 = 21
!
! dx add xport reporting code
DXSetup:
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"391a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("sortby",tmp$) \ if tmp$="" let VFLG=0 else VFLG=1 ! sort by vendor
call dxget("begvendor",tmp$) \ BV=tmp$ ! starting vendor
call dxget("endvendor",tmp$) \ if tmp$="" let EV=999999 else EV=tmp$ ! ending vendor
call dxget("begprod",R1$) ! starting product
R1$=UCase$(RTrim$(R1$))
call dxget("endprod",R2$) ! ending product
R2$=UCase$(RTrim$(R2$))
call dxget("duedate",S$) ! due date cutoff
call dxget("whse",tmp$) \ if RTrim$(tmp$)="" let tmp$="1"
whse=tmp$[1,2] ! warehouse
!let whse=whse+1
if whse<1 or whse>99 let e$="Invalid Warehouse!" \ error 10000
!  dx end
!
! sort by vendor
if VFLG=0 let BV=0 \ EV=999999 ! params for no on sort
!
! vendor section
If BV<0 Or BV>999999 let e$="Invalid starting vendor, must be between 0 and 999999!" \ error 10000
if EV<BV or EV>999999 let e$="Invalid ending vendor, must be between starting vendor and 999999!" \ error 10000
!
! product section
R1$=R1$,Blank$
R2$=R2$,EndParam$
if R2$<R1$ let e$="Invalid ending product, must be > the starting product!" \ error 10000
!
! due date cutoff
X2 = S$ \ S$ = X2 Using "&#####" 
CODATE = S$[5,6],S$[1,4]
errflag=0
X2 = CODATE \ Gosub L_7820 \ if CODATE let errflag=1
If errflag let e$="Invalid due date cutoff!" \ error 10000
JDATE[5] = X2
!
! warehouse
If WHSE<1 Or WHSE>D9[5] let e$="Invalid warehouse, must be between 1 and ",D9[5],"!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  
End If 
!
! - L_1000: Rem GET RANGE
! - Print 'CS CR';@0,0;"PO391A"; Tab 20;"PRODUCT OPEN PURCHASE ORDER REPORT"
! - Gosub L_1300 \ Gosub L_1400
! - L_1040: Print @0,10;"ENTER STARTING PRODUCT CODE, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""R1$ \ If R1$ = "E" Goto OUTEND
! - Print @6,12;;"ENDING   PRODUCT CODE, <CR> FOR LAST,    E: TO EXIT ";
! - Input ""R2$ \ If R2$ = "E" Goto OUTEND
! - If R2$ = "" Let R2$ = "z",R2$
! - L_1115: If Len(R2$) < 20 Let R2$ = R2$," " \ Goto L_1115
! - If R1$ <= R2$ Goto L_1200
! - Print @0,22;;"STARTING CODE MUST BE LESS THAN ENDING CODE!";
! - Signal 3,15 \ Print @0,22;'CE';
! - Goto L_1040
! - R1$ = " ",R1$
! - R2$ = "Z",R2$
! - L_1200: Gosub L_8300
! - L_1221: Print @0,23;" P: Print  R: Reselect  or  E: Exit ";'CE';
! - Input ""ANS$
! - If ANS$ = "E" Goto OUTEND
! - If ANS$ = "R" Goto L_1000
! - If ANS$ = "P" Gosub L_1500 \ Goto L_1900
! - Goto L_1221
! - L_1300: Rem    DISPLAY PROMPT TEMPLATE
! - Print @0,4;"SORT BY VENDOR (Y/N/E)? ";
! - Print @0,6;"ENTER STARTING VENDOR, <CR> FOR FIRST,   E: TO EXIT ";
! - Print @0,8;"ENTER ENDING   VENDOR, <CR> FOR FIRST,   E: TO EXIT ";
! - Print @0,10;"ENTER STARTING PRODUCT CODE, <CR> FOR FIRST,   E: TO EXIT ";
! - Print @0,12;"ENTER ENDING   PRODUCT CODE, <CR> FOR LAST,    E: TO EXIT ";
! - Print @0,14;"ENTER WAREHOUSE TO USE (1-";
! - Print Using "##";D9[5];") OR   E: TO EXIT ";'CE';
! - Return 
! - L_1400: Rem   GET VENDOR INFO
! - Input @0,4;"SORT BY VENDOR (Y/N/E)? ";ANS$
! - If ANS$ = "E" Goto OUTEND
! - If ANS$ = "Y" Let VFLG = 1 \ Goto L_1430
! - If ANS$ = "N" Let VFLG = 0 \ Return 
! - Goto L_1400
! - L_1430: Input @0,6;"ENTER STARTING VENDOR, <CR> FOR FIRST,   E: TO EXIT ";V1$
! - If V1$ = "E" Goto OUTEND
! - If V1$ = "" Let BV = 0 \ Goto L_1450
! - If V1$[1,1] < "0" Or V1$[1,1] > "9" Goto L_1430
! - BV = V1$
! - L_1450: Input @0,8;"ENTER ENDING   VENDOR, <CR> FOR FIRST,   E: TO EXIT ";V2$
! - If V2$ = "E" Goto OUTEND
! - If V2$ = "" Let EV = 999999 \ Goto L_1499
! - If V2$[1,1] < "0" Or V2$[1,1] > "9" Goto L_1430
! - EV = V2$
! - If BV > EV Goto L_1430
! - L_1499: Return 
!
L_1500: Rem SORT BY PRODUCT CODE
! - Print @0,21;'CL';"SORTING,  PLEASE WAIT . . . "; \ Signal 3,0
A$ = " "
L_1540: Search #9,3,1;A$,R0,E 
If E Goto L_1580
Search #9,5,1;A$,R0,E
If E Let e$ = "syserrorfile 391a sortfile mode (m)=5 keyno (k)=1 r=",R0," e=",e," keyval (k$)=",A$ \ error 10000
Goto L_1540
!
L_1580: 
! - Print ". "; \ Signal 3,0
A$ = " "
L_1600: Search #10,3,1;A$,R0,E 
If E goto L_1900
R1 = R0
Mat Read #10,R0,0;L1;
Mat Read #10,R0,12;L2
Mat Read #10,R0,24;L3;
Mat Read #10,R0,66;L1$;
If Not(L3[1]) Goto L_1600
If L1[3] Goto L_1600
If (L3[3] + L3[4]) >= L3[2] Goto L_1600
If WHSE If WHSE <> L1[1] Goto L_1600
If VFLG
  Mat Read #8,L3[0];H0;
  Read #5,H0[1],268;V2;
  If V2 < BV Or V2 > EV Goto L_1600
End If 
If L1$[81,92] >= R1$ If L1$[81,92] <= R2$ Goto L_1695
Goto L_1600
L_1695: T1 = 1
L_1700: 
A1$ = " ",A1$
if VFLG
  A1$[1,6] = V2 Using "######" \ A1$[7,18] = L1$[81,92]
  A1$[19] = T1 Using "####"
else
  A1$[1,12] = L1$[81,92]
  A1$[13] = T1 Using "####"
endif
Search #9,4,1;A1$,R0,E
if E=0 Goto L_1600
!
! match, add to counter and try again
T1 = T1 + 1
if T1>9999 Let e$ = "syserrorfile 391a sortfile mode (m)=4 keyno (k)=1 r=",R0," e=",e," keyval (k$)=",A1$ \ error 10000
R0 = R1
Goto L_1700
!
L_1900: Rem SORT COMPLETE
!
if J8 ! dx xml headings
  !
  if VFLG=1 let tmp$="VENDOR",fdel$,"NAME",fdel$ else tmp$=""
  tmp$=tmp$,"PRODUCT",fdel$,"DESCRIPTION",fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"P.O. #",fdel$,"TYPE",fdel$,"ORDERED",fdel$
  tmp$=tmp$,"DUE",fdel$,"QTY ORDERED",fdel$
  tmp$=tmp$,"QTY RECEIVED",fdel$,"U/M",fdel$
  tmp$=tmp$,"WH",fdel$,"UNIT PRICE",fdel$
  tmp$=tmp$,"PRICE U/M",fdel$
  tmp$=tmp$,"QTY OPEN",fdel$,"OPEN U/M",fdel$
  if VFLG=0 let tmp$=tmp$,"VENDOR",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
A$ = " ",A$
! - Print @0,21;'CL';"PRINTING,  PLEASE WAIT . . . "; \ Signal 3,0
L_2000: 
Search #9,3,1;A$,R9,E 
If E Goto OUTEND
Mat Read #10,R9;L1
Mat Read #10,R9,12;L2
Mat Read #10,R9,24;L3;
Mat Read #10,R9,66;L1$;
Mat Read #8,L3[0];H0;
Mat Read #8,L3[0],222;H3;
Mat Read #8,L3[0],242;H4;
Mat Read #3,L3[1],256;A;
Mat Read #3,L3[1],512;PFU1;
Mat Read #3,L3[1],554;PFU2;
If L1[0] = 3 Goto L_2000
Read #5,H0[1],268;V2;
Read #5,H0[1],0;A6$;
X2 = L2[2] \ Gosub L_7820 \ X2 = 0
JDATE[0] = X2
If VFLG If P1 If VEND$ <> A$[1,6] Let L0 = 99
Gosub L_5800
Gosub L_10000
Gosub L_5000
Goto L_2000
!
L_5000: Rem PRINT DETAIL
If CODATE And JDATE[0] >= JDATE[5] Return 
If (L3[3] + L3[4]) >= L3[2] Return 
If L1[0] = 4 Return 
!
if J8
  If VFLG let tmp$=V2 using "######",fdel$,rtrim$(A6$[1,30]),fdel$ else tmp$="" ! vendor
  tmp$=tmp$,rtrim$(L1$[81,92]),fdel$,rtrim$(L1$[1,30]),fdel$ 
  If P9$[26,26]="Y" let tmp$=tmp$,rtrim$(L1$[31,60]),fdel$
  tmp$=tmp$,H0[2] Using "######",fdel$
  tmp1$="" \ If H3[2] let tmp1$=tmp1$,"-",Str$(H3[2])
  If H4[2] let tmp1$=tmp1$,"F"
  tmp$=tmp$,tmp1$,fdel$
  X2 = H0[3] \ Gosub L_7700 
  tmp$=tmp$,X$,fdel$
  X2 = L2[2] \ Gosub L_7700 \ P$ = X$
  K = P$[1,2] \ K1 = D$[1,2] \ K2 = P$[7,8] \ K3 = D$[7,8]
  K = K - K1 + 1 + (K2 - K3) * 12
  If K <= 0 Let K = 1
  If K > 14 Let K = 14
  tmp$=tmp$,P$,fdel$
  M[0] = (L3[2] - L3[3] - L3[4]) * L2[0]
  S[0] = (L3[2] - L3[3] - L3[4])
  tmp$=tmp$,L3[2] Using "#######",fdel$
  tmp$=tmp$,L3[3] + L3[4] using "#######",fdel$,SUNIT$,fdel$
  tmp$=tmp$,H4[1] Using "##",fdel$
  tmp$=tmp$,L2[0] Using "##,###,###.##",fdel$,PUNIT$,fdel$
  tmp$=tmp$,L3[2] - (L3[3] + L3[4]) Using "-----##",fdel$,SUNIT$,fdel$
  if VFLG=0 let tmp$=tmp$,V2 using "######",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
If S2$ = L1$[81,92] Goto L_5040
If F9 = 1 Print #0;"" \ L0 = L0 + 1
S2$ = L1$[81,92] \ F9 = 0
L_5040: F9 = F9 + 1
If F9 = 1 Print #0;L1$[81,92]; Tab 14;L1$[1,30];
Print #0; Using "######"; Tab 44;H0[2];
If H3[2] Print #0;"-";Str$(H3[2]);
If H4[2] Print #0; Tab 53;"F";
Print #0; Tab 55;
X2 = H0[3] \ Gosub L_7700 \ Print #0;X$;" ";
X2 = L2[2] \ Gosub L_7700 \ P$ = X$
K = P$[1,2] \ K1 = D$[1,2] \ K2 = P$[7,8] \ K3 = D$[7,8]
K = K - K1 + 1 + (K2 - K3) * 12
If K <= 0 Let K = 1
If K > 14 Let K = 14
Print #0;P$; Tab 71;
M[0] = (L3[2] - L3[3] - L3[4]) * L2[0]
S[0] = (L3[2] - L3[3] - L3[4])
Print #0; Using " ####### #######  ";L3[2];L3[3] + L3[4];SUNIT$;
Print #0; Using "##"; Tab 94;H4[1];
Print #0; Using "##,###,###.## /  ";L2[0];PUNIT$;
Print #0; Using "######";V2;
Print #0;"\15\"; \ L0 = L0 + 2
If F9 = 1 Print #0; Tab 14;L1$[31,60];
Print #0; Using "-----##  "; Tab 67;" QTY OPEN ";L3[2] - (L3[3] + L3[4]);SUNIT$
O1 = O1 + (L3[2] - L3[3] - L3[4]) * L2[0]
O2 = O2 + S[0]
M[K] = M[K] + M[0]
S[K] = S[K] + S[0]
Return 
!
L_5800: Rem HEADINGS
if J8 return ! dx xml
If L0 < PL2 - 7 Return 
! - If P1 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "X$
! - If J8 Print 'CS';
If P1 if J8=0 Print #0;"\14\";
P1 = P1 + 1
L0 = 0
Print #0; Tab (10);D$; Tab 42;"PRODUCT OPEN PURCHASE ORDER REPORT - ";
Print #0;WHSE Using "WAREHOUSE  ##"; Tab (100);P1 Using "PAGE ####"
If CODATE
Then 
  X2 = CODATE \ Gosub L_7700 \ P$ = X$
Else 
  P$ = "N/A"
End If 
Print #0; Tab (55);"CUTOFF DATE: ";P$
If F Goto L_5910
Print #0;"PRODUCT"; Tab 14;"DESCRIPTION"; Tab 46;"P.O.#    ORDERED";
Print #0; Tab 68;"DUE    ORD.--QTY--REC.  WH";
Print #0; Tab 100;" UNIT PR.         VENDOR\15\"
L_5910: If VFLG Print #0;"VENDOR = ";V2 Using "###### ";A6$[1,30] \ L0 = L0 + 1
If VFLG Let VEND$ = A$[1,6]
Return 
!
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6] \ Return 
!
! - L_8300: Rem CHECK WAREHOUSE
! - L_8310: WHSE = 1 \ If D9[5] = 1 Goto L_8390
! - Print @0,14;"ENTER WAREHOUSE TO USE (1-";
! - Print Using "##";D9[5];") OR ''E'' TO EXIT ";'CE';
! - Input Len 16386;""X$ \ If X$ = "E" Goto L_9010
! - WHSE = X$
! - If WHSE <= 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_8310
! - L_8390: Return 
!
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!
! - If J8 Input @0,23;"PRESS <CR> TO EXIT "X$
! - L_9010: Chain "MX000C"
!
L_10000: Rem
For X = 2 To 4
  CNVTU[0] = 0
  CNVTU[1] = L1[4]
  CNVTU[2] = 1
  CNVTA = L3[X] \ Gosub L_20000
  L3[X] = AMOUNT
Next X
CNVTU[0] = 0 \ CNVTU[1] = L1[5]
CNVTU[2] = 2 \ CNVTA = L2[0]
Gosub L_20000 \ L2[0] = AMOUNT
If L1[4] = -1 Let SUNIT$ = "CWT " \ Goto L_10180
If L1[4] = -3 Let SUNIT$ = "LB  " \ Goto L_10180
If L1[4] > 0 Mat Read #12,L1[4],10;SUNIT$;
L_10180: If L1[5] = -1 Let PUNIT$ = "CWT " \ Goto L_10190
If L1[5] = -3 Let PUNIT$ = "LB  " \ Goto L_10190
If L1[5] > 0 Mat Read #12,L1[5],10;PUNIT$;
L_10190: Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - was If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ rem ! - Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
