! >>> Program 202f.wrp
!
! description PICKLIST/TRUCKLOAD - CUSTOM WHITE RIVER
!
! loadsave -w -n 100,10 -o prog/dxport/202f.wrp.dl4 src/202f.wrp.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
!
Rem MX202F   - TRUCK LOADING REPORT (USED FROM MX202)
Rem AUTHOR: TTT   FEB 20, 1989
Rem LAST UPDATE:  5/92 - ADD OPTION OF PRINTED ORDERS
Rem BEDIT Version: 2.3 OBJECT CODE     Created: JUL 10, 2013  04:50:47
Rem /x/univ2w2/papermaster/r2005//x/usracct/jcs/work/custom/white.r10/mx202f.src (synergyux.synergy.n) [jcs] {01120}
Rem  Copyright (c) 2013 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String
! Option Default Dialect IRIS1
Com 1%,CTLC,IntCo,2%,J8,IntSls
Com 1%,PFU1[20],CNVTU[2],UN[2],EUN[2],S2[1],SW[20]
Com 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],J8,J9[2],L3[3],S9[1],Y
Com 2%,B[24],D8,H0[12],H5[16],L4[3],L6[5],L9[1],S5,S8[1],X,X1,WH,L2[1]
Com 3%,J,J1,T9[20],X2,X3,X4,S7[9],L7[9],T2[25],A1[7],SUNIT
Com 3%,S3[5],OLM[6],UNF[6],PFU2[6],CNVTA,A[41],F9[1],PALSIZE,LOC$[6]
Com 3%,R9[3],U1[6,2],DESC$[10],P9$[50],W2$[32],K13$[60],M8$[50]
Com A1$[156],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],J6$[30]
Com J7$[40],J8$[8],J9$[50],K1$[50],K2$[20],K3$[60],L1$[60],L2$[20]
Com S1$[118],S2$[20],X$[20],K7$[50],OL2$[16],S2$[20],TMPK3$[50]
Com V0$[10],L7$[6],U1$[21],SUNIT$[4],UNIT$[4],ZONE$[2],S0$[36]
Com PORT_$[26],FILE1$[16],FILE2$[26],KEY_$[130]
if err 0 gosub err_trap
Dim 1%,TRUCK$[50],N9[11]
Dim 2%,DT3[1],JDATE,JWDATE,ORDER,ORDERNUM,E1
Dim LOC1$[6],P0$[20],K5$[50],DELV_DATE$[20],WEEKDAY_$[10]
Dim U5$[50],K15$[32],1%,C7[4],3%
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800] ! ,Rstr$[500]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="Z",EndParam$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!Read K0
!Read #1,88,K0;U5$;
!Ropen #15,U5$
!Data "1808"
call dxsave(0,"tmp/202f.txt!")
DELV_DATE$ = X$
Gosub L_6900 ! day
WEEKDAY_$ = X$[9]
J7 = 65 \ If J7[1] Let J7 = 23
PALSIZE = 9.999999999999999E+21 !(CUSTOMER SPECIFIC SIZE) 070695
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For X = 0 To 1 \ L9[X] = 0 \ Next X
L2[0] = 0 \ L2[1] = 0
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"202f",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
J2 = 0
J1 = 99
K1$ = " ",K1$
L_1110: Search #9,3,1;K1$,V1,E \ If E > 2 ERROR 11000
If E Goto L_1600
If K1$[1,1] >= "{" Goto L_1600 !"ran into truck/zone keys
Search #9,5,1;K1$,V1,E \ If E ERROR 11000
Goto L_1110
L_1600: Rem "===========================
X2 = D8 \ Gosub L_7840 \ X2 = 0
JDATE = X2
K1$ = " ",K1$;K1$[1,2] = S8 Using "##" ! "status
L_1610: Search #3,3,1;K1$,V1,E \ If E > 2 ERROR 11000
If E Goto L_1900
X2 = K1$[1,2] \ If S8 If X2 <> S8 Goto L_1900 ! "next status
Mat Read #3,V1,104;H5;
If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1610 ! "reject
Mat Read #3,V1;H0;
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7840 \ X2 = 0
JWDATE = X2
Mat Read #8,H0[3],8;T2;
Mat Read #3,V1,66;V0$; \ Mat Read #3,V1,446;P0$;
If JWDATE > JDATE Goto L_1610 ! "date too high
Gosub L_5310 ! "unpack T2[21]
If Not(SW[6]) If N9[0] Goto L_1610
Mat Read #4,H0[2],8;S1$; \ Mat Read #4,H0[2],126;S2$;
If S9[0] = 1 ! "not a reprint
  If S8[1] = 2 If S1$[118,118] <> "2" Let S1$[118,118] = "1"
  If S8[1] = 3 If S1$[118,118] = "3" Let S1$[118,118] = "1"
End If 
S9[1] = S1$[118,118] \ If S9[1] <> S9 Goto L_1610 ! "wrong status
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
K3$ = " ",K3$ \ K3$ = "}",S2$[19,20] ! "zone
Search #9,2,1;K3$,V2,E \ If E > 1 ERROR 11000
If E Goto L_1610 ! "zone not to be printed
TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
Search #9,2,1;TRUCK$,V2,E \ If E > 1 ERROR 11000
If E Goto L_1610 !"truck not found; don't print it
Mat Read #3,V1,78;H4;
Mat Read #4,H0[2],8;S1$ \ S1$[118,118] = "2" \ Mat Write #4,H0[2],8;S1$;
If WH <> H4[2] Goto L_1610 ! "whse check
J$ = " ",J$ \ J$ = H0[7] Using "######"
L_1670: Search #5,3,1;J$,R5,E \ If E > 2 ERROR 11000 ! "loop thru lines
If E Goto L_1610 ! "eof, no lines for this order
If J$[1,6] <> K1$[3,8] Goto L_1610 ! "hit next order
If (H5[7] = 21 Or H5[7] = 22) And J$[7,9] = "   " Goto L_1670 ! "repair info
Mat Read #5,R5,140;L2$;
Mat Read #5,R5,80;L1$;
Mat Read #5,R5,8;L3;
Mat Read #5,R5,256;S2; \ Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
If S2[0] = 3 Goto L_1670
Mat Read #5,R5,16;L4; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;L7$;
L7[2] = L7[2] - L7[3]
If L3[0] Let LOC$ = "NONSTK" \ Gosub L_30000 \ Goto L_1718
Mat Read #6,L4,0;A1$;
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A; \ Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
If A1$[140,151] <> L2$[1,12] Let LOC$ = "NONSTK" \ Goto L_1730
LOC$ = "STOCK "
Gosub L_3000
L_1718: CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[4] \ Gosub L_20000
L7[4] = AMOUNT
L_1730: T9 = 0 \ T9 = 9000 - H4[1]
If Not(L7[4]) Goto L_1670 ! "nothing to ship
J4$ = " ",J4$ \ J4$[1,6] = S5 Using "######" \ J4$[7,8] = K3$[2,3]
J4$[9,12] = T9 Using "####" \ J4$[13,18] = H0[7] Using "######"
J4$[19,24] = LOC$[1,6] \ J4$[25,29] = R5 Using "#####"
Search #9,4,1;J4$,V1,E \ If E ERROR 11000
Goto L_1670
L_1900: ! Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
CUST = -99
! If J7[1] Print 'CS';
If Err 0 Gosub ERR_TRAP
K1$ = " ",K1$ \ K3$ = " ",K3$
J4$ = " ",J4$
L_2000: Search #9,3,1;K1$,R1,E \ If E > 2 ERROR 11000
ORDERNUM = K1$[13,18]
If L2[1] If ORDERNUM <> L2[1] Gosub L_12000
If E Gosub L_12000 \ Goto L_9100
If K1$[1,1] >= "{" Gosub L_12000 \ Goto L_9100 !"ran into zone/truck keys; exit
If J4$[1,6] = "      " Let J4$ = K1$ ! "sort break indicator
If K1$[1,6] <> J4$[1,6] Gosub L_4000 ! "truck break
If K1$[9,12] <> J4$[9,12] Gosub L_4200 !" stop break
If K1$[13,17] <> J4$[13,17] Gosub L_5500 ! "order break
J4$ = K1$ ! "sort break indicator
L_2040: Mat Read #3,R1,0;H0;
Mat Read #3,R1,78;H4;
Mat Read #3,R1,104;H5; \ Mat Read #3,R1,446;P0$;
If H5[7] = 2 Or H5[7] = 5 Or H5[7] = 7 Goto L_2000 ! "direct, future, inv ctrl
If H5[7] = 21 Or H5[7] = 22 Goto L_2000 ! "repair order
R4 = K1$[25,29]
Mat Read #4,H0[2],8;S1$; \ Mat Read #4,H0[2],126;S2$;
Mat Read #4,H0[2],146;S5;
Mat Read #5,R4,0;L2;
Mat Read #5,R4,8;L3;
Mat Read #5,R4,256;S2; \ Mat Read #5,R4,404;OLM;
Mat Read #5,R4,446;EUN; \ Mat Read #5,R4,452;UNF;
Mat Read #5,R4,16;L4;
If L7[3] If L7[4] = L7[2] Let L7[4] = L7[4] - L7[3]
L7[2] = L7[2] - L7[3]
Mat Read #5,R4,56;L6;
Mat Read #5,R4,80;L1$;
Mat Read #5,R4,250;UN;
Mat Read #5,R4,140;L2$; \ Mat Read #5,R4,168;L7;
L7[2] = L7[4] !FORCE QTY ORDER = QTY SHIP
If F9 If L9[1] Let L7[2] = L9[1] Else Let F9 = 0
If Not(L7[2]) Goto L_2000 ! "no qty ordered
X2 = L7[4]
If L3[0] Let B[16] = 1 \ Gosub L_30000 \ Goto L_2103 ! "non stock
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A; \ Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
L_2103: CNVTU[0] = PFU1[8];CNVTU[1] = 0;CNVTU[2] = 1;CNVTA = 1 \ Gosub L_20000 \ UNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[2] \ Gosub L_20000 \ L7[4] = AMOUNT
Gosub L_8100 ! "pallet total check
Mat Read #10,PFU1[8],10;SUNIT$;
Gosub L_5800
If CUST <> H0[4] Gosub L_5100 ! "customer break
Gosub L_5000 ! "print line
Gosub L_2200
If Not(L9[1]) Let F9 = 0
If Not(F9) Goto L_2000
L7[2] = L9[1]
If Not(L7[2]) Goto L_2000
If F9 Gosub L_4400 ! "pallet totals
Goto L_2040
Gosub L_5800
Gosub L_5500 ! "order totals
Goto L_2000
L_2200: Rem TOTALS CALC
If Not(A[37]) Let A[37] = 1 ! "cubic ft factor
For X = 1 To 10 Step 2 ! "1, 3, 5, 7, 9
  T9[X] = T9[X] + L7[4] ! "qty shipped (1, 3, 5, 7, 9)
  T9[X + 1] = T9[X + 1] + ((L6[2] * L7[2]) / A[37]) ! "tot cub ft
Next X
Return 
L_3000: Rem PROD LOC FOR NON RASL
If L3[0] Let LOC$ = "NONSTK"
If P9$[41,41] = "Y" Or L3[0] > 0 Return 
LOC$ = " ",LOC$;LOC1$ = " ",LOC1$;SLUT = 0
K13$ = " ",K13$;K13$[1,12] = L2$[1,12];K13$[13,14] = WH Using "##"
L_3030: Search #14,3,1;K13$,R13,E
If Not(E) And K13$[1,12] = L2$[1,12]
  X2 = K13$[13,14]
  If X2 <> WH Return 
  If Not(SLUT) Let LOC$ = K13$[15,20]
  If SLUT Let LOC1$ = K13$[15,20]
  SLUT = 1
  Goto L_3030
End If 
Return 
L_4000: Rem "========================================= truck totals
Gosub L_4400 ! " pallet total
Gosub L_4300 ! " zone total
If (J1 + 5) > J7 Let J1 = 90
Gosub L_5800 ! "heading
Print #0;" "
Print #0; Using "--------.##"; Tab 15;T9[1]; ! "qty shipped
Print #0; Using "#####.###"; Tab 27;T9[2]; ! "cub feet
Print #0; Tab 38;"** TRUCK # ";J4$[1,6];" TOTALS **"
T9[1] = 0 \ T9[2] = 0 ! "clear truck totals
Print #0;""
Print #0;"PICKER __________________";
Print #0; Using "#######"; Tab 50;"PALLETS: ";T9[11] ! "total pallets
Print #0;"" \ Print #0;"LOADER __________________"
T9[11] = 0 \ J4$ = K1$
J1 = 90
F9 = 0
L9[0] = 0 \ L9[1] = 0
Return 
L_4200: Rem "========================================= stop totals
Gosub L_5500 ! "order totals
X4 = J4$[9,12] \ X4 = 9000 - X4
Goto L_4225 ! "don't print these totals
Gosub L_5800 ! "headings
Print #0; Using "--------.##"; Tab 16;T9[3]; ! "qty shipped
Print #0; Using "#####.###"; Tab 25;T9[4]; ! "cub feet
Print #0; Using "####"; Tab 38;"STOP TOTAL ";X4
L_4225: Print #0;" " \ J1 = J1 + 1
J4$[9,12] = K1$[9,12]
T9[3] = 0 \ T9[4] = 0 ! "clear stop totals
CUST = -99
Return 
L_4300: Rem "========================================= zone totals
Gosub L_4200 ! "stop totals
Goto L_4325 ! "don't print zone totals
Print #0;" " \ J1 = J1 + 1
Gosub L_5800 ! "headings
Print #0; Using "--------.##"; Tab 8;T9[7]; ! "qty shipped
Print #0; Using "#####.###"; Tab 19;T9[8]; ! "cub feet
Print #0; Tab 30;"** ZONE: ";J4$[7,8];" TOTALS **"
L_4325: Print #0;" " \ J1 = J1 + 1
J4$[7,8] = K1$[7,8]
F9[1] = 99;T9[7] = 0;T9[8] = 0 ! "clear zone totals
Return 
L_4400: Rem "========================================= pallet totals
If Not(T9[9] + T9[10]) Return ! "no totals here
Gosub L_5800 ! "headings
K7$ = " ",K7$
Gosub L_6100 ! "print lines
Print #0;" " \ J1 = J1 + 1
Gosub L_5800 ! "headings
Print #0; Using "--------.##"; Tab 15;T9[9]; ! "qty shipped
Print #0; Using "#####.###"; Tab 27;T9[10]; ! "cub feet
Print #0; Tab 38;"*** PALLET TOTAL *** "
Print #0;" " \ J1 = J1 + 1
T9[11] = T9[11] + 1 ! "total # of pallets
T9[9] = 0 \ T9[10] = 0 ! "clear pallet totals
Gosub L_8500 ! "clear sortloc
Return 
L_5000: Rem PRINT LINE
Gosub L_3000
Print #0; Using "######"; Tab 14;H0[7]; ! "order #
Print #0; Using "###"; Tab 21;L3[2]; ! tab  26;K7$[1,6];
If P0$[1,6] <> "VERBAL" Print #0; Tab 25;P0$[1,6];
Print #0; Tab 40;L2$[1,12];
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[2] \ Gosub L_20000 \ L7[4] = AMOUNT
If Int(L7[4]) Print #0; Using "-------# "; Tab 56;L7[4]; Tab 65;SUNIT$; ! "qty shipped
X2 = L7[2]
If Fra(L7[4]) Gosub L_6400
Print #0; Tab 74;LOC$;" ";LOC1$;
Print #0; Tab 90;L1$[31,60]; !!WAS 96;L1$[1,20]
If Not(A[37]) Let A[37] = 1 ! "cubic ft factor
Print #0; Using "#####.###"; Tab 120;((L6[2] * L7[2]) / A[37]);
Print #0;" "
Print #0;" " \ J1 = J1 + 1
Return 
L_5100: Rem "========================================= customer break
If F9[1] Print #0;S2$[19,20];
If F9 Print #0; Using "######"; Tab 4;S5;
K15$ = H0[4] Using "######"
Search #15,2,1;K15$,R15,E15
C7[3] = 0
If Not(E15) Mat Read #15,R15,378;C7;
Print #0; Using "##"; Tab 11;C7[3];
Print #0; Using "####"; Tab 14;H4[1];
Print #0; Using "######"; Tab 20;H0[4];
Print #0; Tab 30;S1$[1,30];
Print #0; Tab 68;S1$[31,60];
Print #0;" "
If S1$[61,66] = "      " Goto L_5245
Print #0; Tab 68;S1$[61,90]
L_5245: Print #0;"\15\";
J1 = J1 + 2
CUST = H0[4]
Return 
L_5310: Rem UNPACK T2[21] TO N9[X]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_5500: Rem "========================================= order totals
Goto L_5540 !NOT TOTAL PRINT
Print #0; Using "####"; Tab 3;H4[1];
Print #0; Using "######.##"; Tab 10;T9[5]; ! "qty shipped
Print #0; Using "#####.###"; Tab 19;T9[6]; ! "cub feet
Print #0; Using "######"; Tab 30;H0[7];
Print #0; Using "######"; Tab 39;H0[4];
Print #0;" "
L_5540: If Not(T9[5] + T9[6]) Goto L_5560 ! "no totals here
J4$[13,17] = K1$[13,17]
Mat Read #4,H0[2],8;S1$ \ S1$[118,118] = "2"
Mat Write #4,H0[2],8;S1$;
L_5560: T9[5] = 0 \ T9[6] = 0 ! "clear order totals
If T9[10] >= PALSIZE Gosub L_4400 ! "pallet totals
Return 
L_5800: Rem "========================================= headings
J1 = J1 + 2 \ If J1 < J7 Return 
! If J2 If J7[1] Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If Not(J7[1]) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(J7[1]) Print #0;"\15\";
Print #0; "WRP"; Tab 10;J8$; Tab (64 - Len(J6$) / 2);J6$; Tab 120;"PAGE";J2
Print #0;" - 202F - ";Msc$(3);
Print #0; Tab 49;"TRUCK LOADING  FOR ";DELV_DATE$;WEEKDAY_$
Print #0; Using "FOR WAREHOUSE ## "; Tab 56;WH
Print #0;" "
Print #0;"ZONE"; Tab 5;"TRUCK PR"; Tab 14;"STOP";
Print #0; Tab 20;"PIECES";
Print #0; Tab 30;"CUBE"
Print #0; Tab 14;"ORDER #";
Print #0; Tab 27;" PO #";
Print #0; Tab 40;"ITEM CODE";
Print #0; Tab 62;"QTY  U/M";
Print #0; Tab 74;"LOCATION";
Print #0; Tab 90;"DESCRIPTION #2 ONLY"; !!96;
Print #0; Tab 124;"CUBE"; !!120;
Print #0;" "
Print #0;"\15\";
CUST = -99 \ F9 = 99 \ F9[1] = 99
Return 
K7$ = " ",K7$
K7$[1,6] = K1$[19,24]
K7$[7,11] = R4 Using "#####"
K7$[12,19] = L7[2] Using "########"
Search #7,4,1;K7$,R1,E
If E = 1 Return 
If E ERROR 11000
Return 
L_6100: Rem "========================================= print lines
Search #7,3,1;K7$,R7,E \ If E > 2 ERROR 11000
If E Return 
Mat Read #3,R7,0;H0;
Mat Read #3,R7,78;H4;
R4 = K7$[7,11]
Mat Read #5,R4,8;L3;
If L3[2] > 990 Goto L_6100 ! "deposit line
Mat Read #5,R4,16;L4;
L7[2] = L7[4]
Mat Read #5,R4,56;L6;
Mat Read #5,R4,80;L1$;
Mat Read #5,R4,140;L2$; \ Mat Read #5,R4,168;L7;
Mat Read #5,R4,250;L7$; \ Mat Read #5,R4,250;UN;
Mat Read #5,R4,256;S2; \ Mat Read #5,R4,404;OLM;
Mat Read #5,R4,446;EUN; \ Mat Read #5,R4,452;UNF;
If S2[0] = 3 Goto L_6100
If L3[0] Gosub L_30000 \ Goto L_6283
Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A; \ Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
L_6283: CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[4] \ Gosub L_20000
X2 = L7[2]
L7[2] = AMOUNT
L7[2] = K7$[12,19]
Mat Read #10,PFU1[8],10;SUNIT$;
Gosub L_5000 ! "print line
Goto L_6100 ! "next line
L_6400: Rem UNIT BREAK DOWN
If L3[0] Gosub L_30000 \ Goto L_6430
Mat Read #6,L4,512;PFU1;
Mat Read #6,L4,554;PFU2;
L_6430: Rem RETURN
Print #0; Tab 46;"(";
For X = 0 To 7 \ If PFU1[8] = PFU1[X] Goto L_6449
Next X
L_6449: If X If X <> 8 If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
For X = 7 To 0 Step -1
  If Not(X2) Goto L_6480
  If X If PFU2[X - 1] If Int(X2 / PFU2[X - 1]) > 0 Gosub L_6490
Next X
Mat Read #10,PFU1[0],10;UNIT$;
If X2 Print #0;X2;UNIT$;
L_6480: Print #0;" )";
Return 
L_6490: Rem
Mat Read #10,PFU1[X],10;UNIT$;
Mat Read #10,PFU1[X],0;DESC$;
If DESC$[10,10] = "*" Goto L_6540
If Int(X2 / PFU2[X - 1]) Print #0;Int(X2 / PFU2[X - 1]);UNIT$;
X2 = X2 - (Int(X2 / PFU2[X - 1]) * PFU2[X - 1])
L_6540: Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
J0 = J0$[1,1] ! TYPE
J6 = J0$[2,2] ! DECIMAL PLACES
J2 = J0$[3,4] ! MIN LENGTH
J3 = J0$[5,6] ! MAX LENGTH
J4 = J0$[7,8] ! X-POS
J5 = J0$[9,10] ! Y-POS
If J0 < 3 Let J2$ = " ",J2$
If J1$ = "" Let J1$[1,J3] = " ",J1$
If J0 <> 3 If J0 <> 4 Goto L_7070
If J0 = 3 Let J2$ = "#",J2$
If J0 = 4 Let J2$ = "-",J2$
J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
L_7070: J1$[J3 + 1] = ""
If J0 < 3 Goto L_7105
If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
If J0 = 6 Goto L_7105
If J0 <> 5 Goto L_7100
J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6
J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
If Len(J4$) <= J3 Goto L_7130
J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
L_7145: For J8 = 1 To Len(J9$)
  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7265,L_7330 \ Stop 
L_7165: J$ = J0$[2,2],J$
If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
If J0 = 2 Let J$[1,Len(J9$)] = J9$
Goto L_7345
L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
  If J9$[J8,J8] = " " Goto L_7235
  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
L_7210: If J9$[J8,J8] <> "." Goto L_7250
  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
  If J9 Goto L_7250
  J9 = 1
L_7230: If J9 Let J9 = J9 + 1
  If Not(J9) Let J9[1] = J9[1] + 1
L_7235: Next J8
If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
L_7260: Gosub L_7600 \ Goto L_7105
L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
If J9[1] < 1 Goto L_7325
On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
Goto L_7325
L_7285: If J9[1] > 30 Goto L_7325
L_7290: If J9[1] > 31 Goto L_7325
Goto L_7315
L_7300: If J9[1] > 29 Goto L_7325
If Not(Fra(J9[2] / 4)) If Fra(J9[2] / 100) Goto L_7315
If J9[1] > 28 Goto L_7325
L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
J$ = X$ \ J3 = 8 \ Goto L_7345
L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
Print @0,Msc(34) - 1;'CL'; \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
L_8100: Rem "========================================= pallet total check
F9 = 0
If Not(A[37]) Let A[37] = 1 ! "cubic ft factor
If L7[2] * (L6[2] / A[37]) > PALSIZE Goto L_8200
If T9[10] + ((L7[2] * L6[2]) / A[37]) < PALSIZE Return 
If Not(T9[10]) If L7[2] = UNIT Return 
If T9[10] Goto L_8150 Else Return 
If T9[10] >= 60 Goto L_8150 ! WAS 30
L9 = Int((75 - T9[10]) / L6[2])
If Not(L9) Goto L_8150
F9 = 99
L9[1] = L7[2] - L9 \ L7[2] = L9
Return 
L_8150: R9 = R1;R9[1] = R4;M8$ = K1$;R9[2] = L7[2];R9[3] = S3[3]
R9[3] = L6[2]
Gosub L_4400 ! "pallet totals
K1$ = M8$;R1 = R9;R4 = R9[1];L7[2] = R9[2];L6[2] = R9[3]
R5 = R4;V1 = R1
Mat Read #5,R4,16;L4; !\ MAT  READ #11,R11,60;S3;
If Not(L3[0]) Mat Read #6,L4,156;B; \ Mat Read #6,L4,0;A1$; \ Mat Read #6,L4,256;A; \ Mat Read #6,L4,512;PFU1; \ Mat Read #6,L4,554;PFU2;
Goto L_8100 ! "pallet total check
L_8200: F9 = 0
CBFT = UNIT * Int((75 - T9[10]) / ((UNIT * L6[2]) / A[37]))
If Not(CBFT) Let CBFT = UNIT
If CBFT > L7[2] Let CBFT = L7[2]
If Not(L7[2]) Return 
L9[1] = L7[2] - CBFT \ L7[2] = CBFT
F9 = 99
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1;CNVTA = L7[2]
Gosub L_20000 \ L7[4] = AMOUNT
Return 
L_8500: Rem "========================================= clear 6/sortloc
K7$ = " ",K7$
L_8520: Search #7,3,1;K7$,R7,E \ If E > 2 ERROR 11000
If E Return 
Search #7,5,1;K7$,R7,E \ If E ERROR 11000
Goto L_8520
OUTEND: Rem END
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  ! External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"202f.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End 
L_9100: Rem END OF THIS RANGE
Gosub L_4000
! If J7[1] Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
Stop 
L_12000: Rem print messages
K5$ = " ",K5$
K5$ = L2[1] Using "######"
L_12030: Search #5,3,1;K5$,R5,E1 \ If E1 Return 
ORDER = K5$[1,6]
If ORDER <> L2[1] Return 
Mat Read #5,R5,80;L1$;
Mat Read #5,R5,256;S2;
If S2[0] = 3
  Print #0; Tab 31;L1$[1,30];" ";L1$[31,60]
  J1 = J1 + 1
  Print #0;" " \ J1 = J1 + 1
  Gosub L_5800
End If 
Goto L_12030
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050 ! "um window
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160 ! "going to same units
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160 ! "lot
If CNVTU[2] = 0 Goto L_20050 !!THIS TESTS IF VALID CONVERSION
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160 ! "none there
L_20050: ! If Spc(4) > 1280 Goto L_20120 ! "unibasic 5+

L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160 !!TEST IF VALID CONVERSION
If FLAG Let E = FLAG \ ERROR 11000
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If S2[0] = 3 Goto L_30099 ! "message line (ZLINE)
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A[37] = UNF[4] \ If Not(A[37]) Let A[37] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0] ! "base and selling units
PFU1[2] = UN[1];PFU1[3] = UN[2] ! "pricing and costing
PFU1[4] = EUN[1] ! "purchasing
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1] ! "stock,sell,purch dflt
PFU1[11] = UN[2];PFU1[12] = UN[1] ! "cost,price dflt
If Not(L3[0]) Goto L_30060 ! "leave as is (NONSTOCK)
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0] ! "prod,up,bkn dflt
PFU1[18] = UN[0];PFU1[19] = UN[0] ! "pack,size dflt
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1] ! "selling and pricing factor
PFU2[2] = UNF[2];PFU2[3] = UNF[3] ! "costing and purchasing
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End