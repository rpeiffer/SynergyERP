! --- rfpickctl
!
! From whmenu->ACTION$=RFPICKCTL
!
! loadsave -w -n 100,10 -o prog/dxport/rfpickctl.dl4 src/rfpickctl.src
!
!include copyright, common libs, common intrinsics
Include "src/copyright.inc"
!
!
! *declare additional dl4 intrinsic subs & functions
!
! *declare additional external libs & subs & functions
External Lib "libgeneral.lib"
Declare External Sub getsession,AddToStr,SetOutPut,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function openfile

! Internal Subroutines / Functions
Declare sub OpenFilesReadControl,GetControlInfo,SubmitControlInfo
Declare sub ReadControlFields,WriteControlFields,InitControlRecord

!*********************
!* M A I N   L O G I C
!*********************
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
!
Try 

! ERP stuff
Dim action$[30],options$[30],userid$[8],b$[200]
Dim action1$[30],action2$[30],action3$[30] ! actions for programs
Dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[1000] ! .net delimiters
Dim WebStr$[1000],Message$[200],tmp$[100]
b$ = " ",b$

! Local variables

Dim List$[1000,200],P61$[256]

!rf pick control vars
Dim 1%,sortType,reverseStop,exactShip,skipOnHold,scanBin,shortPick
Dim 2%,cubesPerPallet,poundsPerPallet


Dim 3%

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)

call OpenFilesReadControl()

!* Main function dispatcher
ReturnStatus = 1
Message$ = "OK"
select case action1$
	case "GETCONTROLINFO"
		call GetControlInfo()
	case "SUBMITCONTROLINFO"
		call SubmitControlInfo()
	case else
		ReturnStatus = 0
		Message$ = "ACTION1 NOT FOUND: "+action1$
end select

Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
Call AddToStr(e$,rstr$,WebStr$)
Call SetOutPut(e$,rstr$)

Else ! MAIN TRY 
	Include "src/callmainerrnet.inc"
End Try 
End 

!*******************************************************************
! INTERNAL SUBROUTINES / FUNCTIONS
!*******************************************************************

sub OpenFilesReadControl()
try
	Mat Read #1,61,0;P61$;
	if p61$[135,135] <> "Y"
		e$ = "RF Picking is not enabled on this system."
		error 10000
	end if
	ch_rfpctl = openfile(9602) \ if ch_rfpctl<0 error 42 ! RF PICK CONTROL FILE
Else ! main sub/func try
	Include "src/callsuberr.inc"
End Try 
end sub

sub GetControlInfo()
try
	if (chf(ch_rfpctl))<2
		call InitControlRecord()
	end if
	call ReadControlFields()
	clear list$[]
	list$[0] = bsdel$,"SortTypeDropList",fdel$
	list$[1] = "SortType"+fdel$+"Description"+fdel$
	list$[2] = "1"+fdel$+"Truck/Zone/Stop/Order/Bin Sort"+fdel$
	list$[3] = "2"+fdel$+"Truck/Stop/Order/Bin Sort"+fdel$
	list$[4] = esdel$
	Call AddToStr(e$,rstr$,list$[])
	clear list$[]
	list$[0] = bsdel$,"ShortPickDropList",fdel$
	list$[1] = "ShortPick"+fdel$+"Description"+fdel$
	list$[2] = "0"+fdel$+"No Special Action Taken"+fdel$
	list$[3] = "1"+fdel$+"Put Order On Hold"+fdel$
	list$[4] = "2"+fdel$+"Backorder Short Amount"+fdel$
	list$[5] = esdel$
	Call AddToStr(e$,rstr$,list$[])
	clear list$[]
	list$[0] = bsdel$,"Data",fdel$
	list$[1] = "SortType"+fdel$+"ReverseStop"+fdel$+"ExactShip"+fdel$
	list$[1] = list$[1]+"SkipOnHold"+fdel$
	list$[1] = list$[1]+"CubesPerPallet"+fdel$+"PoundsPerPallet"+fdel$
	list$[1] = list$[1]+"ScanBin"+fdel$+"ShortPick"+fdel$
	list$[2] = str$(sortType)+fdel$+str$(reverseStop)+fdel$
	list$[2] = list$[2]+str$(exactShip)+fdel$+str$(skipOnHold)+fdel$
	list$[2] = list$[2]+str$(cubesPerPallet)+fdel$+str$(poundsPerPallet)+fdel$
	list$[2] = list$[2]+str$(scanBin)+fdel$+str$(shortPick)+fdel$
	list$[3] = esdel$
	Call AddToStr(e$,rstr$,list$[])
Else ! main sub/func try
	Include "src/callsuberr.inc"
End Try 
end sub

sub InitControlRecord()
try
	! control record not yet established
	sortType = 1
	reverseStop = 1
	exactShip = 1
	skipOnHold = 0
	cubesPerPallet = 0
	poundsPerPallet = 0
	scanBin = 0
	shortPick = 0
	call WriteControlFields()
Else ! main sub/func try
	Include "src/callsuberr.inc"
End Try 
end sub


sub SubmitControlInfo()
try
	sortType = GetParameter$("SortType")
	if sortType<1 or sortType>2
		Message$ = "Invalid sort type!"
		ReturnStatus = 0
		exit sub
	end if
	reverseStop = GetParameter$("ReverseStop")
	exactShip = GetParameter$("ExactShip")
	skipOnHold = GetParameter$("SkipOnHold")
	cubesPerPallet = GetParameter$("CubesPerPallet")
	poundsPerPallet = GetParameter$("PoundsPerPallet")
	scanBin = GetParameter$("ScanBin")
	shortPick = GetParameter$("ShortPick")
	call WriteControlFields()
	Message$ = "Record updated"
Else ! main sub/func try
	Include "src/callsuberr.inc"
End Try 
end sub


sub ReadControlFields()
try
	mat read #ch_rfpctl,1,0;sortType;
	mat read #ch_rfpctl,1,2;reverseStop;
	mat read #ch_rfpctl,1,4;exactShip;
	mat read #ch_rfpctl,1,6;skipOnHold;
	mat read #ch_rfpctl,1,8;cubesPerPallet;
	mat read #ch_rfpctl,1,12;poundsPerPallet;
	mat read #ch_rfpctl,1,16;scanBin;
	mat read #ch_rfpctl,1,18;shortPick;
Else ! main sub/func try
	Include "src/callsuberr.inc"
End Try 
end sub

sub WriteControlFields()
try
	mat write #ch_rfpctl,1,0;sortType;
	mat write #ch_rfpctl,1,2;reverseStop;
	mat write #ch_rfpctl,1,4;exactShip;
	mat write #ch_rfpctl,1,6;skipOnHold;
	mat write #ch_rfpctl,1,8;cubesPerPallet;
	mat write #ch_rfpctl,1,12;poundsPerPallet;
	mat write #ch_rfpctl,1,16;scanBin;
	mat write #ch_rfpctl,1,18;shortPick;
Else ! main sub/func try
	Include "src/callsuberr.inc"
End Try 
end sub
