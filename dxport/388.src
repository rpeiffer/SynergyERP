! >>> Program 388  was pups on papermaster
!
! description Purchasing Order to Sales Order Cost
!
! loadsave -w -n 100,10 -o prog/dxport/388.dl4 src/388.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 17, 2003  14:42:40
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/misc/pups.src (univ2) [jcs] {00809}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem pups.s Inquiry/purge for purchase order to sales order update log file
Rem rev:   05/06/96 -kmm- created.
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,JulianToDate,String
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2]
Com 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim 1%,CH_PUPS,CH_CNTRL,CH_CCODES,CH_PROD
Dim 1%,TOSCREEN,CHNL,CHNLFREE,PURGE,MAXLN,WANNAQUIT,OPT
Dim 1%,TARGETLINE,PAGE
Dim 2%,JSDATE,JEDATE,JPDATE,DT3[1]
Dim 2%,SDATE,EDATE,STIME,ETIME,ORDER,PO
Dim 3%,SCR,REC_PUPS,REC_PROD,PUPSOCST1[1],PUPSNCST1[1],R90
Dim MASK$[10],CMD$[50],PURGFILE$[16],KEY90$[50]
Dim SCRATCH$[80],PUPS$[50],SORT$[1],UM$[4],Y$[80],PTRNM$[50]
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Rem {begin src/inc/dim.pups.i}
Dim 1%,PUPSTRAN,PUPSUNIT,PUPSNONSTOCK,PUPSLMTBL
Dim 2%,PUPSPO,PUPSPOL,PUPSORD,PUPSORDL,PUPSOTYP,PUPSDATE,PUPSTIME
Dim 2%,PUPSPORT
Dim 3%,PUPSOCST[1],PUPSNCST[1]
Dim PUPSPROD$[12],PUPSUSER$[10]
Rem {end dim.pups.i}
Rem {begin src/inc/dim.prod.i}
Dim A$[156],HZ$[90],PR_A2$[30],C1$[32],PSN$[20],U3$[60]
Dim 1%,LLC,PFTB[3],PFU1[20],LM[1],UPCT,PR_PO[1]
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1]
Dim 3%,A1[7],A[33],PF_LOAD2,PFU2[6],PLV[1],PRPARC[3],U3,PFN[1]
Rem {end dim.prod.i}
! - Window On 
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ PGLEN = Chf(0) 
If J8 If J8 <> 49 Goto ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 let MAXLN = 21 else MAXLN = 60
!
CH_RPT = 0
CH_CNTRL = 1
CH_PUPS = 2
CH_PROD = 3
CH_CCODES = 4
OPEN_FILES: Rem
! - SCRATCH$ = Str$(Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
CHNL = CH_CNTRL
! - Gosub CHNLFREE
! - If CHNLFREE Open #CH_CNTRL,"cntrl" + SCRATCH$
CHNL = CH_RPT
! - PTRNM$ = ""
! - Gosub CHNLFREE
! - If CHNLFREE
! -   J8 = 1
! - Else 
! -   J8 = 0
! -   If Err 0 Rem
! -   PTRNM$ = Chf$(800)
! -   If Err 0 Gosub ERR_ESCAPE
! -   If PTRNM$[1,1] <> "" And PTRNM$[1,1] <> " "
! -     J$ = " ",J$
! -     J$ = PTRNM$;POS_ = 1;POS1 = 0
! - NXTSLH: Search J$[POS_],"/",POS1
! -     If POS1 Let POS_ = (POS_ + POS1) \ Goto NXTSLH
! -     If J$[POS_,POS_] <> "$"
! -       PTRNM$[1,1] = "$";PTRNM$[2] = J$[POS_]
! -     Else 
! -       PTRNM$ = J$[POS_]
! -     End If 
! -   End If 
! - End If 
!
! dx add xport reporting code
DXSetup:
Dim tmp$[600],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
ROpen #CH_PUPS,"2/pups" + str$(intCO)
Ropen #CH_PROD,"2/sprod" + str$(intCO)
Ropen #CH_CCODES,"2/ccodes"
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"388",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("po",tmp$) \ PO=tmp$ ! po#  0=all
call dxget("order",tmp$) \ ORDER=tmp$ ! order #  0=all
call dxget("sortby",Sort$)  ! sort by (list)
call dxget("begdate",tmp$) \ if tmp$="" let SDATE=010170 else SDATE=tmp$ ! starting date
call dxget("enddate",tmp$) \ if tmp$="" let EDATE=123159 else EDATE=tmp$ ! ending date
!  dx end
!
! p.o.
if PO<0 or PO>999999 let e$="Invalid ending p.o., must be between 0 and 999999!" \ error 10000
!
! order
if ORDER<0 or ORDER>999999 let e$="Invalid ending order, must be between 0 and 999999!" \ error 10000
!
! beg date
tmp$=SDATE using "&&&&&&" \ SDATE=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
X2 = SDATE \ Gosub YMD2JUL 
if E let e$="Invalid starting date!" \ error 10000
JSDATE = X2
!
tmp$=EDATE using "&&&&&&" \ EDATE=tmp$[5,6],tmp$[1,4] ! mmddyy to yymmdd
X2 = EDATE \ Gosub YMD2JUL 
if E let e$="Invalid ending date!" \ error 10000
JEDATE = X2
if JEDATE<JSDATE let e$="Invalid ending date, must be >= to starting date!" \ error 10000 
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
!
MASK$ = "#",MASK$
SCR = Len(MASK$) - 2
MASK$[SCR,SCR] = "."
! - SDATE = 700101;EDATE = 591231
! - JSDATE = 732;JEDATE = 33603
PURGE = 0
! - SORT$ = "O"
! - If Err 0 Gosub ERR_ESCAPE
MAIN: Rem
! - Gosub DISP_BACKGROUND
! - Gosub ASK_QUEST
! - OPT_QUEST: Rem
! - Print @0,23;'CL';"#:field to edit   R: reselect  P:  print  E: exit ";
! - Input Len (16384 + 1);""SCRATCH$
! - Call String(1,SCRATCH$)
! - If SCRATCH$ = "E" Goto OUTEND
! - If SCRATCH$ = "R"
! -   Gosub ASK_QUEST
! -  Goto OPT_QUEST
! - End If 
! - If SCRATCH$ <> "P"
! -   OPT = SCRATCH$
! -   If Not(OPT) And SCRATCH$ <> "" Print 'RB'; \ Goto OPT_QUEST
! -   On OPT Gosub PO_QUEST,ORDER_QUEST,SORT_QUEST,DATE_QUEST
! -   On OPT - 4 Gosub PURGE_QUEST
! -   Goto OPT_QUEST
! - End If 
!
! - Gosub SETUP4MAINLOOP
!
PUPS$ = " ",PUPS$
if J8=0 Gosub HEADER
If SORT$ = "O"
  DIR = 2
  PUPS$ = ORDER Using "######"
End If 
If SORT$ = "P"
  DIR = 1
  PUPS$ = PO Using "######"
End If 
If SORT$ = "D"
  DIR = 3
  PUPS$ = JSDATE Using "########"
  PUPS$[9] = STIME Using "######"
End If 
!
if J8 ! dx xml headings
  !
  tmp$="PO #",fdel$,"PO LINE",fdel$
  tmp$=tmp$,"ORDER #",fdel$,"ORDER LINE",fdel$
  tmp$=tmp$,"TYPE",fdel$,"PRODUCT",fdel$
  tmp$=tmp$,"ORIG GL COST",fdel$,"NEW GL COST",fdel$
  tmp$=tmp$,"ORIG LOAD",fdel$,"UNIT",fdel$,"NEW LOAD",fdel$
  tmp$=tmp$,"DATE",fdel$,"TIME",fdel$,"LM",fdel$
  tmp$=tmp$,"ACCESS",fdel$,"NOTE",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
MAIN_LOOP: Rem
Search #CH_PUPS,3,DIR;PUPS$,REC_PUPS,E 
If E = 2 Goto OUTEND ! - was END_MAIN_LOOP
Gosub READPUPS
! - Unlock #CH_PUPS
If ORDER
  If PUPSORD < ORDER Goto MAIN_LOOP
  If PUPSORD > ORDER
    If SORT$ = "O" Goto OUTEND ! - was END_MAIN_LOOP
    If SORT$ = "P"
      PUPS$[11,16] = "999999"
      Goto MAIN_LOOP
    End If 
    If SORT$ = "D"
      PUPS$[15,21] = "999999"
      Goto MAIN_LOOP
    End If 
  End If 
End If 
If PO
  If PUPSPO < PO Goto MAIN_LOOP
  If PUPSPO > PO Goto OUTEND ! - was END_MAIN_LOOP
End If 
If PUPSDATE < JSDATE Goto MAIN_LOOP
If PUPSDATE > JEDATE
  If SORT$ = "O" Or SORT$ = "P"
    PUPS$[13,18] = "999999"
    Goto MAIN_LOOP
  End If 
  If SORT$ = "D" Goto OUTEND ! - was END_MAIN_LOOP
End If 
Gosub GET_PROD
Gosub GET_UM
Gosub DO_CONVERSIONS
Gosub PRINT_LINE
! - If PURGE ! add key to temp purge file
! -   X$ = " ",X$
! -   X$ = PUPSPO Using "######"
! -   X$[7] = PUPSPOL Using "######"
! -   X$[13] = PUPSDATE Using "######"
! -   X$[19] = PUPSTIME Using "######"
! -   Search #90,4,1;X$,REC_PUPS,E \ If E Gosub ERR_SEARCH
! - End If 
Goto MAIN_LOOP
!
! - END_MAIN_LOOP: Rem
! - If PURGE Gosub DO_PURGE
! - If J8
! - CHKPROMPT: Print @0,23;'CL RB';"-END- Press <CR>: continue   E: exit ";
! -   Input Len (16384 + 1);""J$
! -   Call String(1,J$)
! -   If J$ = "E" Goto OUTEND
! -   If J$ <> "" Goto CHKPROMPT
! - End If 
! - Gosub DISP_BACKGROUND
! - Goto OPT_QUEST
!
! - SETUP4MAINLOOP: Rem
! - If PURGE
! -   If Err 0 Rem
! -   Close #90
! -   If Err 0 Gosub ERR_ESCAPE
! -   PURGFILE$ = Spc(6) Using "6/PURG&&&&"
! -   CMD$ = "[1:10] " + PURGFILE$ + "!"
! -   Build #90,CMD$
! -   R90 = 12 \ Search #90,0,1;KEY90$,R90,E \ If E Gosub ERR_SEARCH
! -   R90 = 1 \ Search #90,0,0;KEY90$,R90,E \ If E Gosub ERR_SEARCH
! -   Close #90
! -   Open #90,PURGFILE$
! - End If 
! - If J8
! -   Print 'ER';
! -   LN = 7
! -   Print @0,LN;'CE';
! - Else 
! -   Gosub HEADER
! -   Print @0,23;'CL';"Printing...";
! - End If 
!
! - DO_PURGE: Rem
! - If PTRNM$[1,1] = "" Or PTRNM$[1,1] = " " Goto PROMPTPURGE
! - If PTRNM$[2,4] = "spt" ! spooled printer need to close so will have report
! -   Close #0
! -   Open #0,PTRNM$
! - End If 
! - PROMPTPURGE: Rem prompt for purge question
! - Print @0,23;'CL RB';"Do you wish to purge (YES/N  E: exit)? ";
! - Input Len (16384 + 3);""J$
! - Call String(1,J$)
! - If J$ = "N" Or J$ = "E"
! -   Print @0,23;'CL';"NO PURGE PERFORMED! - !";
! -   Signal 3,20
! -   If J$ = "E" Goto OUTEND
! -   Goto ENDPURGE
! - End If 
! - If J$ <> "YES" Goto PROMPTPURGE
! - Print @0,23;'CL';"Purging....Please Wait...";
! - If Err 0 Gosub ERR_TRAP
! - KEY90$ = " ",KEY90$
! - SRCHPURGFILE: Rem search through purge file
! - Search #90,3,1;KEY90$,R90,E \ If E = 2 Goto ENDPURGE
! - If E Gosub ERR_SEARCH
! - REC_PUPS = R90
! - Gosub READPUPS
! - Search #CH_PUPS,5,1;KEY90$,REC_PUPS,E \ If E Gosub ERR_SEARCH
! - SCRATCH$ = " ",SCRATCH$;SCRATCH$ = KEY90$
! - SCRATCH$[1,6] = PUPSORD Using "######"
! - SCRATCH$[7,12] = PUPSORDL Using "######"
! - Search #CH_PUPS,5,2;SCRATCH$,REC_PUPS,E \ If E Gosub ERR_SEARCH
! - SCRATCH$ = " ",SCRATCH$
! - SCRATCH$ = PUPSDATE Using "######"
! - SCRATCH$[7] = PUPSTIME Using "######"
! - SCRATCH$[13] = PUPSPO Using "######"
! - SCRATCH$[19] = PUPSPOL Using "######"
! - Search #CH_PUPS,5,3;SCRATCH$,REC_PUPS,E \ If E Gosub ERR_SEARCH
! - E = 3
! - Search #CH_PUPS,1,0;SCRATCH$,REC_PUPS,E \ If E Gosub ERR_SEARCH
! - Search #90,5,1;KEY90$,REC_PUPS,E \ If E Gosub ERR_SEARCH
! - Goto SRCHPURGFILE
! - ENDPURGE: Rem end of purge
! - If Err 0 Rem
! - Close #90
! - If Err 0 Gosub ERR_ESCAPE
! - Call FindF(PURGFILE$,A9)
! - If A9
! -   Kill PURGFILE$
! - End If 
! - Return 
!
! - DISP_BACKGROUND: Rem
! - Print 'CS';
! - Print @0,0;"-pups-";
! - Print @15,0;"Purchase Order To Sales Order Cost Update Log"
! - Print @0,2;'BD';" 1> PO #: ";
! - Print @0,3;" 2> ORDER #:";
! - Print @0,4;" 3> Sort Order:";
! - Print @40,2;" 4> DATE:";@60,2;"TO:";
! - If PO
! -   Print Using "######";@16,2;PO;
! - Else 
! -   Print @16,2;"ALL   ";
! - End If 
! - If ORDER
! -   Print Using "######";@16,3;ORDER;
! - Else 
! -   Print @16,3;"ALL   ";
! - End If 
! - Print @16,4;SORT$[1,1];
! - X2 = SDATE \ Gosub NUM2DATE
! - Print @50,2;X$;
! - X2 = EDATE \ Gosub NUM2DATE
! - Print @64,2;X$;
! - If J8
! -   Print @0,5;'BR';
! -   Gosub FLD_HEADER
! -   Print 'ER ED';
! - Else 
! -   Print @40,4;'BD';"5> PURGE:";'ED';
! -   If PURGE Print @50,4;"Y"; Else Print @50,4;"N";
! - End If 
! - Return 
!
PRINT_LINE: Rem
if J8 ! dx xml
  tmp$=PUPSPO Using "######",fdel$,PUPSPOL using "####",fdel$
  tmp$=tmp$,PUPSORD Using "######",fdel$,PUPSORDL using "####",fdel$
  tmp$=tmp$,PUPSOTYP using "##",fdel$,rtrim$(PUPSPROD$),fdel$
  tmp$=tmp$,PUPSOCST1[0] Using MASK$,fdel$
  tmp$=tmp$,PUPSNCST1[0] Using MASK$,fdel$
  tmp$=tmp$,PUPSOCST1[1] Using MASK$,fdel$,UM$,fdel$
  tmp$=tmp$,PUPSNCST1[1] Using MASK$,fdel$
  X$ = PUPSDATE Using "########"
  Call JulianToDate(1,X$,SCRATCH$,E)
  tmp$=tmp$,SCRATCH$,fdel$
  HH = Int(PUPSTIME / 10000) \tmp1$=HH using "&&:"
  MM = Int(PUPSTIME / 100) - HH * 100 \ tmp1$=tmp1$,MM using "&&:"
  SS = PUPSTIME - (HH * 10000) - MM * 100 \ tmp1$=tmp1$,SS using "&&"
  tmp$=tmp$,tmp1$,fdel$
  tmp$=tmp$,PUPSLMTBL Using "###",fdel$
  SCRATCH$ = ""
  If PUPSTRAN = 1 Let SCRATCH$ = "NO LOAD TABLE"
  If PUPSTRAN = 2 Let SCRATCH$ = "INVALID ORDER TYPE"
  If PUPSTRAN = 3 Let SCRATCH$ = "LOAD WAS MANUAL"
  tmp$=tmp$,rtrim$(PUPSUSER$),fdel$,SCRATCH$,fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
If LN + 2 > MAXLN Gosub PAGEBREAK
Print #0; Using "###### #### ";PUPSPO;PUPSPOL;
Print #0; Using "###### #### ## ";PUPSORD;PUPSORDL;PUPSOTYP;
Print #0;PUPSPROD$;
Print #0; Using MASK$ + " "; Tab (39);PUPSOCST1[0];PUPSOCST1[1];
Print #0;UM$;" ";PUPSUSER$
! - If J8 Print 'BD';
X$ = PUPSDATE Using "########"
Call JulianToDate(1,X$,SCRATCH$,E)
Print #0;SCRATCH$;
HH = Int(PUPSTIME / 10000)
MM = Int(PUPSTIME / 100) - HH * 100
SS = PUPSTIME - (HH * 10000) - MM * 100
Print #0; Using "&&:&&:&&"; Tab (9);HH;MM;SS;
Print #0; Using "###"; Tab (24);PUPSLMTBL;
Print #0; Using MASK$; Tab (39);PUPSNCST1[0];
Print #0; Using MASK$; Tab (50);PUPSNCST1[1];
SCRATCH$ = ""
If PUPSTRAN = 1 Let SCRATCH$ = "NO LOAD TABLE"
If PUPSTRAN = 2 Let SCRATCH$ = "INVALID ORDER TYPE"
If PUPSTRAN = 3 Let SCRATCH$ = "LOAD WAS MANUAL"
Print #0; Tab (61);SCRATCH$
! - If J8 Print 'ED';
Print #0;""
LN = LN + 3
Return 
!
PAGEBREAK: Rem
! - If J8
! -   Print @0,23;" <CR>:  Continue,  E: Exit ";
! -   Input Len (16384 + 1);""SCRATCH$
! -   Call String(1,SCRATCH$)
! -   If SCRATCH$ = "E" Goto OUTEND
! -   If SCRATCH$ <> "" Print 'RB'; \ Goto PAGEBREAK
! -   LN = 7
! -   Print @0,LN;'CE';
! - Else 
! -   Gosub HEADER
! - End If 
if J8=0 gosub HEADER
Return 
!
HEADER: Rem for report
if J8 return ! dx xml
!
If PAGE
  Print #0;"\14\";
End If 
LN = 1
PAGE = PAGE + 1
Print #0;"388";
Print #0; Tab (15);"Purchase Order to Sales Order Cost Update Report";
Print #0; Using "Page: #####"; Tab (68);PAGE
If SORT$ = "O"
  X$ = "ORDER"
Else 
  If SORT$ = "P"
    X$ = "PO"
  Else 
    X$ = "DATE"
  End If 
End If 
Print #0; Tab (5);"IN ";X$;" Sequence";
If PO Print #0;", PO# : ";Str$(PO);
If ORDER Print #0;", ORDER#: ";Str$(ORDER);
If JSDATE Or JEDATE
  If JSDATE
    X$ = JSDATE Using "########"
    Call JulianToDate(1,X$,SCRATCH$,E)
  Else 
    SCRATCH$ = "First"
  End If 
  If JEDATE
    X$ = JEDATE Using "########"
    Call JulianToDate(1,X$,Y$,E)
  Else 
    Y$ = "Last"
  End If 
  Print #0;", Date: ";SCRATCH$;" to ";Y$;
End If 
If PURGE Print #0;" ***WITH PURGE***";
Print #0;"\15\"
Gosub FLD_HEADER
SCRATCH$ = "-",SCRATCH$
Print #0;SCRATCH$
LN = 8
Return 
!
FLD_HEADER: Rem
if J8 return ! dx xml
!
Print #0;"PO#    LINE ORDER# LINE TYP PRODUCT  ORIG GL COST";
Print #0;"       LOAD UNIT ACCESS       "
Print #0;"DATE       TIME          LM           NEW GL COST";
Print #0;"       LOAD    NOTE           "
Return 
!
GET_PROD: Rem
SCRATCH$ = " ",SCRATCH$
SCRATCH$ = PUPSPROD$
Search #CH_PROD,2,1;SCRATCH$,REC_PROD,E
If Not(E)
  Rem {begin src/inc/read.prod.i}
  Mat Read #CH_PROD,REC_PROD,0;A$
  Mat Read #CH_PROD,REC_PROD,156;B
  Mat Read #CH_PROD,REC_PROD,256;A
  Mat Read #CH_PROD,REC_PROD,460;A1
  Mat Read #CH_PROD,REC_PROD,508;A2
  Mat Read #CH_PROD,REC_PROD,512;PFU1
  Mat Read #CH_PROD,REC_PROD,554;PFU2
  Mat Read #CH_PROD,REC_PROD,596;PRPARC
  Mat Read #CH_PROD,REC_PROD,620;LM
  Mat Read #CH_PROD,REC_PROD,624;PR_PO
  Read #CH_PROD,REC_PROD,630;LLC
  Mat Read #CH_PROD,REC_PROD,632;PSN$
  Mat Read #CH_PROD,REC_PROD,652;PSN
  Mat Read #CH_PROD,REC_PROD,660;U2
  Mat Read #CH_PROD,REC_PROD,670;U4
  Read #CH_PROD,REC_PROD,678;U3
  Mat Read #CH_PROD,REC_PROD,684;U3$
  Mat Read #CH_PROD,REC_PROD,744;HZ$
  Mat Read #CH_PROD,REC_PROD,834;A3
  Mat Read #CH_PROD,REC_PROD,846;PFTB
  Read #CH_PROD,REC_PROD,854;UPCT
  Mat Read #CH_PROD,REC_PROD,856;C1$
  Mat Read #CH_PROD,REC_PROD,894;PR_C4
  Read #CH_PROD,REC_PROD,938;PF_LOAD2
  Mat Read #CH_PROD,REC_PROD,944;PR_A2$
  Mat Read #CH_PROD,REC_PROD,974;PFCO
  Mat Read #CH_PROD,REC_PROD,990;PLV
  Mat Read #CH_PROD,REC_PROD,1002;PLC
  Mat Read #CH_PROD,REC_PROD,1018;PFN
  Rem {end read.prod.i}
End If 
Return 
!
GET_UM: Rem
If PUPSUNIT > 0
  Mat Read #CH_CCODES,PUPSUNIT,10;UM$;
Else 
  If PUPSUNIT = 0 Let UM$ = "Base"
  If PUPSUNIT = -1 Let UM$ = "CWT "
  If PUPSUNIT = -2 Let UM$ = "LOT "
  If PUPSUNIT = -3 Let UM$ = "LB  "
End If 
Return 
!
READPUPS: Rem read pups file
Rem {begin src/inc/read.pups.i}
Mat Read #CH_PUPS,REC_PUPS,0;PUPSPO
Mat Read #CH_PUPS,REC_PUPS,4;PUPSPOL
Mat Read #CH_PUPS,REC_PUPS,8;PUPSORD
Mat Read #CH_PUPS,REC_PUPS,12;PUPSORDL
Mat Read #CH_PUPS,REC_PUPS,16;PUPSOTYP
Mat Read #CH_PUPS,REC_PUPS,20;PUPSPROD$
Mat Read #CH_PUPS,REC_PUPS,32;PUPSOCST
Mat Read #CH_PUPS,REC_PUPS,44;PUPSNCST
Mat Read #CH_PUPS,REC_PUPS,56;PUPSTRAN
Mat Read #CH_PUPS,REC_PUPS,58;PUPSDATE
Mat Read #CH_PUPS,REC_PUPS,62;PUPSTIME
Mat Read #CH_PUPS,REC_PUPS,66;PUPSPORT
Mat Read #CH_PUPS,REC_PUPS,70;PUPSUSER$
Mat Read #CH_PUPS,REC_PUPS,80;PUPSUNIT
Mat Read #CH_PUPS,REC_PUPS,82;PUPSNONSTOCK
Mat Read #CH_PUPS,REC_PUPS,84;PUPSLMTBL
Rem {end read.pups.i}
Return 
!
DO_CONVERSIONS: Rem
If PUPSNONSTOCK
  For SCR = 0 To 1
    PUPSOCST1[SCR] = PUPSOCST[SCR]
    PUPSNCST1[SCR] = PUPSNCST[SCR]
  Next SCR
Else 
  CNVTU[0] = 0
  CNVTU[1] = PUPSUNIT
  CNVTU[2] = 2
  For SCR = 0 To 1
    CNVTA = PUPSOCST[SCR]
    Gosub CONVERT
    PUPSOCST1[SCR] = AMOUNT
    CNVTA = PUPSNCST[SCR]
    Gosub CONVERT
    PUPSNCST1[SCR] = AMOUNT
  Next SCR
End If 
Return 
!
! - ASK_QUEST: Rem
! - Gosub PO_QUEST
! - Gosub ORDER_QUEST
! - Gosub SORT_QUEST
! - Gosub DATE_QUEST
! - Gosub PURGE_QUEST
! - Return 
!
! - PO_QUEST: Rem
! - J5$ = "Enter Purchase order #, or <CR> for ALL."
! - J0$ = "3 00061602"
! - J1 = 0
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Gosub ISINPUT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - PO = J1
! - If PO = 0 Print @19,2;"ALL       ";
! - Return 
! - ORDER_QUEST: Rem
! - J5$ = "Enter order # or <CR> for ALL."
! - J0$ = "3 00061603"
! - J1 = 0
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Gosub ISINPUT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - ORDER = J1
! - If ORDER = 0 Print @19,3;"ALL     ";
! - Return 
! - SORT_QUEST: Rem
! - J5$ = "Enter  O: order#,  P: PO#, or  D: date sequence"
! - J0$ = "2 00011604"
! - If SORT$ <> ""
! -   J1$ = SORT$
! - Else 
! -   J1$ = "O"
! - End If 
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Gosub ISINPUT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - If J$ <> "P" And J$ <> "O" And J$ <> "D" Print 'RB'; \ Goto SORT_QUEST
! - SORT$ = J$
! - Return 
! - DATE_QUEST: Rem
! - SDATE_QUEST: Rem
! - J5$ = "Enter starting date"
! - J0$ = "5000 65002"
! - J1 = SDATE
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Gosub ISINPUT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - X2 = J1 \ Gosub YMD2JUL \ Goto SDATE_QUEST
! - JSDATE = X2
! - SDATE = J1
! - EDATE_QUEST: Rem
! - J5$ = "Enter ending date"
! - J0$ = "5000 66402"
! - J1 = EDATE
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Gosub ISINPUT
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - X2 = J1 \ Gosub YMD2JUL \ Goto EDATE_QUEST
! - JEDATE = X2
! - EDATE = J1
! - If JEDATE < JSDATE
! -   Print @0,23;'CL RB';"Ending Date Must Be Greater Than Starting Date";
! -   Signal 3,20 \ Print @0,23;'CL';
! -   Goto DATE_QUEST
! - End If 
! - Return 
! - TIME_QUEST: Rem
! - Return 
! - PURGE_QUEST: Rem
! - If J8
! -   PURGE = 0
! - Else 
! -   J5$ = "Purge entries after print?"
! -   J0$ = "6 00015004"
! -   J1 = 0
! -   If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! -   Gosub ISINPUT
! -   If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! -   PURGE = J1
! - End If 
! - Return 
!
! - CHNLFREE: Rem check to see if a channel is being used
! - If Err 0 Let CHNLFREE = Spc(8)
! - CHNLFREE = 0
! - E = Chf(CHNL)
! - If Err 0 Gosub ERR_ESCAPE
! - If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
! - END_CHNLFREE: Rem
! - Return 
!
Rem {begin src/inc/rtn.date.i}
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 
!
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
!
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
!
! - Rem {end rtn.error.s}
! - Rem {begin rtn.input.s}
! - ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 >= 3 If J0 <= 4
! -   If J0 = 3 Let J2$ = "#",J2$
! -   If J0 = 4 Let J2$ = "-",J2$
! -   J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - End If 
! - J1$[J3 + 1] = ""
! - If J0 < 3 Goto ISENTER
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 <> 6
! -   If J0 = 5
! -     J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! -     J1$ = J9$[4,7],J9$[2,3],"  "
! -   Else 
! -     J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! -     If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
! -   End If 
! - End If 
! - ISENTER: Rem
! - If J5 < Msc(34) - 1
! -   Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - End If 
! - Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
! - Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
! - Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) > J3
! -   J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
! - End If 
! - J9$ = J4$
! - If Not(Len(J9$))
! -   If J0$[3,4] = "00"
! -     J9$ = J1$
! -   Else 
! -     J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - End If 
! - For cnt = 1 To Len(J9$)
! -   If J9$[cnt,cnt] < " " Or J9$[cnt,cnt] > "~"
! -     J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
! -     Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - Next cnt
! - On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
! - ISTYPE1: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto ISOUT
! - ISTYPE3: Rem
! - J9 = 0
! - X1 = 0
! - For cnt = 1 To Len(J9$)
! -   If J0 = 4 And Not(X1)
! -     If J9$[cnt,cnt] = "-" Or J9$[cnt,cnt] = "+"
! -       X1 = 1
! -       Goto ISNCONT1
! -     End If 
! -   End If 
! -   If J9$[cnt,cnt] > "/" If J9$[cnt,cnt] < ":" Goto ISNCONT2
! -   If J9$[cnt,cnt] = " " Goto ISNCONT1
! -   If Len(J0$) > 10
! -     J7$ = "" \ Let J7$ = J0$[10] To J9$[cnt,cnt] : J7 \ If J7 Goto ISNCONT1
! -   End If 
! -   If J9$[cnt,cnt] <> "." Goto ISNUMERR1
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
! -   If J9 Goto ISNUMERR1
! -   J9 = 1
! - ISNCONT2: Rem
! -   X1 = 1
! -   If J9 Let J9 = J9 + 1
! - ISNCONT1: Rem
! - Next cnt
! - If J0 = 5 Goto ISTYPE5
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
! - ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - ISDECERR: Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
! - If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
! - If J9[1] = 0 Goto ISDTERR
! - On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
! - On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
! - Goto ISDTERR
! - ISMO30: If J9[1] > 30 Goto ISDTERR
! - ISMO31: If J9[1] > 31 Goto ISDTERR
! - Goto ISDTOUT
! - ISMOFEB: If J9[1] > 29 Goto ISDTERR
! - If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
! -   If J9[1] > 28 Goto ISDTERR
! - End If 
! - ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
! - J$ = X$ \ J3 = 8 \ Goto ISOUT
! - ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE6: Call String(1,J9$)
! - If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
! - Gosub ISERRMSG \ Goto ISENTER
! - ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: goto CVTSTARTB ! - If Spc(4) > 1280 Goto CVTSTARTB
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
CVTTRY: Rem "this is a remark
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto CVTTRY
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}
OUTEND: Rem
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!
! - If Err 0 Rem
! - Close #90
! - If Err 0 Gosub ERR_TRAP
! - Call FindF(PURGFILE$,A9)
! - If A9
! -   Kill PURGFILE$
! - End If 
! - Close 
! - Chain "mx000"
!
Rem {end rtn.date.i}
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
