! cslkeywrd.dl4
!
! Keywords for Customer & Shiplist call
!
! 1.0 03/02/2009
!
! loadsave -w -n 100,10 -o prog/dxport/cslkeywrd.dl4 src/cslkeywrd.src
!
!
include "src/copyright.inc"
Rem CSLKEYWRD - Cust&SL Key Words
Rem cct 190772  Jun 6, 2005
Rem accessed through a '(single quote) search option
! modes: 1=edit mode, 2=inquiry mode, 0=KeyWord Search ! NOT ON WEB
!        3=SL Edit, 4=SL Inquiry ! NOT ON WEB!
!        5=Cust Delete, 6=SL DELETE
!        7=Cust AutoUpdate, 8=SHP AutoUpdate
!		 9=keyword add, 10=keyword delete
! NOTE: ! can only do delete & autoupdate on the web version (modes 5-8)
! Passed to it: J4$, rec #, SLRec, mode
! Passed back to callee: (If Searching, the code)
! SLR IS JUST A FLAG TO SAY IF IT's a SHIPLIST Selected in List
!  KEYWORDS ARE A 2 File System
!    1=File holding keywords per customer/shiplist
!    2=Index of those keywords with the index record being the cust/ship rec#
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 14, 2005  13:25:38
Rem /w2/papermaster/r2005//usr/acct/jcs/work/r10devl/misc/cslkeywrd.src (univ2) [jcs] {58618}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Enter J4$,K1,SLR,MODE,e$,Intco
Rem {begin srcdevl/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim buttonlist$[5,50],nextlist$[5,100],Msg$[100] !error handling variables
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim K1$[50],K2$[50],C1$[142],KEY_$[14],CMD$[256],HJ4$[60],W2$[15]
Dim PKYW$[450],ANS$[20],FLE$[20],SPACES$[450],K3$[50],K4$[50]
Dim P9$[50],P60$[50],P61$[256],CUST$[14],A2$[30],A0$[68]
Dim K16$[50],S1$[142],ZIPCD$[10],SLPHN$[30],PHN$[30]
Dim 1%,FLD,COID,PD1[2],SLINDC
Dim 1%,PMODE,CH_KEYW,FOUND,CH_CUST,CH_SHIP,CH_IKEYW,CH_CNOTE
Dim 2%,C1[12],CUST,DSP,DUPE,X
Dim 4%,SL1,KS[20]
Dim 3%,R[99],KR[20]
COID = IntCO ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
SPACES$ = " ",SPACES$;PMODE = MODE
! CALL DXSAVE(0,"tmp/kwsv.txt!")
W2$ = ""
If PMODE > 10 Let PMODE = 0
If PMODE > 0 And K1 = 0 Goto OUTEXIT
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
STARTHERE: Rem "and we're off
CHNL = 97 \ Gosub GETCHAN
CH_KEYW = CHNL
FLE$ = "3/CSLKEYWRD" + Str$(COID)
Call FindF(FLE$,FOUND)
If Not(FOUND) ! "first time use?
  CMD$ = " [1:256] " + FLE$
  Build #CH_KEYW,CMD$
  X2 = 7
  Search #CH_KEYW,0,1;K1$,X2,E \ If E Gosub ERR_SEARCH
  E = 0
  Search #CH_KEYW,0,0;K1$,R[CH_KEYW],E \ If E Gosub ERR_SEARCH
  Close #CH_KEYW
End If 
If PMODE = 0 Or PMODE = 2 Or PMODE = 4 ! "inquiry only modes
  Ropen #CH_KEYW,FLE$
Else 
  Open #CH_KEYW,FLE$
End If 
CHNL = 96 \ Gosub GETCHAN
CH_CUST = CHNL
Read #1,88,1808;FLE$[1,16];
Ropen #CH_CUST,FLE$
CHNL = 95 \ Gosub GETCHAN
CH_SHIP = CHNL
Read #1,88,2112;FLE$[1,16];
Ropen #CH_SHIP,FLE$
CHNL = 94 \ Gosub GETCHAN
CH_IKEYW = CHNL
FLE$ = "3/CKEYWIDX" + Str$(COID)
Call FindF(FLE$,FOUND)
If Not(FOUND) ! "first time use? - Build Index File
  CMD$ = " [1:256] " + FLE$
  Build #CH_IKEYW,CMD$
  X2 = 15
  Search #CH_IKEYW,0,1;K1$,X2,E \ If E Gosub ERR_SEARCH
  E = 0;X2 = 0
  Search #CH_IKEYW,0,0;K1$,X2,E \ If E Gosub ERR_SEARCH
  Close #CH_IKEYW
End If 
Open #CH_IKEYW,FLE$
If MODE <= 1 Or MODE = 7 ! "customer notes needed
  CHNL = 93 \ Gosub GETCHAN
  CH_CNOTE = CHNL
  Read #1,88,720;FLE$[1,16];
  Ropen #CH_CNOTE,FLE$
Else ! "not needed/wanted
  CH_CNOTE = 0
End If 
!If PMODE = 0 Goto SEARCHIT
!If PMODE = 3 Or PMODE = 4 Goto SHO_SHIPL
! can only do delete & autoupdate on the web version
If PMODE = 5 Or PMODE = 6 Goto DELREQ
If PMODE = 7 Or PMODE = 8 Goto KWAUTOUPDT
if pmode=9 or pmode=10 goto KWONLYUPDT
If PMODE <> 1 And PMODE <> 2 Goto OUTEXIT
START_EDTINQ: Rem "edit or inquiry mode
Goto OutExit ! cannot do on web

KWONLYUPDT: ! update Customer keywords only (no cust name,etc)
k1$=J4$ ! key is passed!
cust$=k1$ ! is used
if not(slr)
R[CH_CUST] = K1 \ Gosub READ_CUST
Else
R[CH_SHIP] = K1 \ Gosub READ_SHIP
Endif
CUST = C1[1];SLINDC = 0
Search #CH_KEYW,2,1;K1$,R[CH_KEYW],E \ If E > 1 Gosub ERR_SEARCH
If E Goto OutExit ! no rec - no update/add (written first in custm!)
Gosub READ_KEYW
if pmode=9 goto dkodone ! is add - no old delete
For X9 = 1 To 17 ! 30  18-30 are name
  X = (X9 - 1) * 15 + 1
  J1$ = PKYW$[X,X + 14]
  Gosub DELAKEY
Next X9
! deleted old - add new
DKODONE: ! finished delete
if pmode=10 goto outexit ! is delete old only
For X9 = 1 To 17 ! 30  18-30 are name
  X = (X9 - 1) * 15 + 1
  J0$ = PKYW$[X,X + 14]
  Fld=x9;J$ = J0$ \ Gosub AUTKWINDX ! add/check
Next X9
Gosub WRITE_KEYW
goto outexit
DELREQ: Rem "we're deleting ALL for Passed Cust/Shiplist
If PMODE = 5 ! "customer deletion
  R[CH_CUST] = K1 \ Gosub READ_CUST
  CUST = C1[1];SLINDC = 0
  K1$ = C1[1] Using "######"
  K1$[7] = " "
Else ! "shiplist
  R[CH_SHIP] = K1 \ Gosub READ_SHIP
  CUST$ = SL1 Using "######.######"
  CUST = CUST$[1,6]
  SLINDC = 1
  K1$ = CUST$
End If ! "now see if there and DELETE it
Search #CH_KEYW,2,1;K1$,R[CH_KEYW],E \ If E > 1 Gosub ERR_SEARCH
If E Goto DELDONE
Gosub READ_KEYW
For x9 = 1 To 30
  X = (X9 - 1) * 15 + 1
  J1$ = PKYW$[X,X + 14]
  Gosub DELAKEY
Next X9
R = R[CH_KEYW]
Search #CH_KEYW,5,1;K1$,R,E \ If E Gosub ERR_SEARCH
E = 3;R = R[CH_KEYW]
Search #CH_KEYW,1,0;K1$,R,E \ If E Gosub ERR_SEARCH
DELDONE: Rem "
Goto OUTEXIT
DELAKEY: Rem "delete current key word
K2$ = UCase$(J1$[1,15]) + CUST$ ! KEY=UPPERCASE, FILE=AS IS
R[CH_IKEYW] = R[CH_CUST]
If PMODE = 3 Or PMODE = 8 Let R[CH_IKEYW] = R[CH_SHIP]
Search #CH_IKEYW,5,1;K2$,R[CH_IKEYW],E \ If E > 1 Gosub ERR_SEARCH
Return 
ADDAKEY: Rem "add current key word (except spaces
If K2$[1,1] = "" Or K2$[1,15] = "               " Return 
K2$[16] = CUST$
R[CH_IKEYW] = R[CH_CUST]
If PMODE = 3 Or PMODE = 8 OR SLINDC Let R[CH_IKEYW] = R[CH_SHIP]
Search #CH_IKEYW,4,1;K2$,R[CH_IKEYW],E \ If E > 1 Gosub ERR_SEARCH
Return 
DELKEYWRDS: Rem "delete every keyword
For X9 = 1 To 30
  X = (X9 - 1) * 15 + 1
  J1$ = PKYW$[X,X + 14]
  Gosub DELAKEY
Next X9
PKYW$ = " ",PKYW$
Gosub WRITE_KEYW
Goto OutExit ! Goto SHO_KEYWORDS
SHO_SHIPL: Rem "Edit/inquire ShipList Detail
Goto OutExit ! not on web!

SEARCHIT: Rem "Doing a search
Goto OutExit ! not on web

KWAUTOUPDT: Rem "an update automatically
! Print @0,23;'CL';"   UPDATING KEYWORDS  "; \ Signal 3,0
If PMODE = 3 Or PMODE = 8 Goto SLAUTO
R[CH_CUST] = K1 \ Gosub READ_CUST
CUST = C1[1];SLINDC = 0
K1$ = C1[1] Using "######"
K1$[7] = " "
Gosub GET_KEYWAUTO
FLD = 18;J$ = C1$[31,45] \ Gosub AUTKWINDX
J0$ = C1$[46,60]
If C1$[45,45] <> " " ! "doesn't end on a space
  Gosub GETFRSTSPC
End If 
FLD = 19;J$ = J0$ \ Gosub AUTKWINDX
J9$ = C1$[61,90] \ Gosub DOADDRESS
FLD = 20;J$ = J1$ \ Gosub AUTKWINDX
FLD = 21;J$ = J2$ \ Gosub AUTKWINDX
J9$ = C1$[91,120] \ Gosub DOADDRESS
FLD = 22;J$ = J1$ \ Gosub AUTKWINDX
FLD = 23;J$ = J2$ \ Gosub AUTKWINDX
FLD = 24;J$ = C1$[121,135] \ Gosub AUTKWINDX
FLD = 25;J$ = C1$[136,137] \ Gosub AUTKWINDX
FLD = 26;J$ = ZIPCD$ \ Gosub AUTKWINDX
PHN$ = C1$[21,30] \ Gosub PHONFIX
FLD = 27 \ Gosub AUTKWINDX
FLD = 28;J$ = C1$[1,15] \ Gosub AUTKWINDX
PHN$ = A0$[49,68] \ Gosub PHONFIX
FLD = 29 \ Gosub AUTKWINDX
FLD = 30;J$ = A0$[29,48] \ Gosub AUTKWINDX
Gosub WRITE_KEYW
! Print @0,23;'CL';
If PMODE = 7 Goto OUTEXIT
Return 
GETFRSTSPC: Rem "find first space in field and cut off there
POS_ = 1;POS1 = 0
Search J0$[POS_]," ",POS1
If POS1 ! found a space?
  J$ = " ",J$;J$ = J0$[POS1 + 1]
  J0$ = J$[1,15]
End If 
Return 
DOADDRESS: Rem "do it here: in J9$ - out j1$(fld 1) & J2$(fld2)
J1$ = " ",J1$;J2$ = " ",J2$
If J9$[15,15] = " " Or J9$[16,16] = " " ! "Ends fld 1 on space - use ALL of fld 1
  J1$ = J9$[1,15]
  J2$ = J9$[16,30]
  If J2$ = SPACES$[1,15] Return 
  J7$ = J2$[1,15];J2$ = " ",J2$
  For X = 1 To 15
    If J7$[X,X] <> " " Let J2$ = J7$[X];X = 20
  Next X
  If X < 20 Let J2$ = J9$[16,30]
  Return 
End If ! "of ends part 1 on space
GETADDRPT1: Rem "first part of address
J7$ = " ",J7$
J7$ = J9$[1,15]
For X = 15 To 2 Step -1
  If J7$[X,X] = " " Let J1$ = J7$[1,X] + SPACES$;X = 0
Next X
If X > 0 Let J1$ = J9$[1,15]
GETADDRPT2: Rem "2nd part of address
J7$ = " ",J7$
If J9$[16,30] = SPACES$[1,15] Let J2$ = J9$[16,30] \ Return 
If J9$[16,16] = " " ! "16 has space - just find 1st non-space and return
  J7$ = J9$[16,30]
  For X = 1 To 15
    If J7$[X,X] <> " " Let J2$ = J7$[X];X = 20
  Next X
  If X < 20 Let J2$ = J9$[16,30]
  Return 
End If ! "of starts part 2 on space
X1 = 0
For X = 30 To 16 Step -1
  If J9$[X,X] = " " Let X1 = X1 + 1
  If J9$[X,X] <> " " Let X = 1
Next X
If X1 = 0 ! "NO SPACES - USE IT ALL!
  J0$ = J9$[16,30] \ Gosub GETFRSTSPC
  J2$ = J0$ \ Return 
End If 
J2 = 0
For X = 15 To 5 Step -1
  If J9$[X,X] = " " Let J2 = X;X = 1
Next X
If Not(J2) ! "no space - just do normal
  J0$ = J9$[16,30] \ Gosub GETFRSTSPC
  J2$ = J0$ \ Return 
End If 
If (15 - J2) > X1 ! "too far in - lose end detail
  J0$ = J9$[16,30] \ Gosub GETFRSTSPC
  J2$ = J0$
Else ! "can accomodate with losing spaces at end
  J2$ = J9$[J2 + 1,30]
  J2$[16] = ""
End If 
Return 
SLAUTO: Rem "shiplist auto update
R[CH_SHIP] = K1 \ Gosub READ_SHIP
CUST$ = SL1 Using "######.######"
CUST = CUST$[1,6]
SLINDC = 1
K1$ = CUST$
Gosub GET_KEYWAUTO
FLD = 18;J$ = S1$[1,15] \ Gosub AUTKWINDX
J0$ = S1$[16,30]
If S1$[15,15] <> " " ! "doesn't end on a space
  Gosub GETFRSTSPC
End If 
FLD = 19;J$ = J0$ \ Gosub AUTKWINDX
J9$ = S1$[31,60] \ Gosub DOADDRESS
FLD = 20;J$ = J1$ \ Gosub AUTKWINDX
FLD = 21;J$ = J2$ \ Gosub AUTKWINDX
J9$ = S1$[61,90] \ Gosub DOADDRESS
FLD = 22;J$ = J1$ \ Gosub AUTKWINDX
FLD = 23;J$ = J2$ \ Gosub AUTKWINDX
FLD = 24;J$ = S1$[91,105] \ Gosub AUTKWINDX
FLD = 25;J$ = S1$[106,107] \ Gosub AUTKWINDX
FLD = 26;J$ = S1$[108,117] \ Gosub AUTKWINDX
PHN$ = SLPHN$ \ Gosub PHONFIX
FLD = 27 \ Gosub AUTKWINDX
FLD = 28;J$ = S1$[118,142] \ Gosub AUTKWINDX
FLD = 29;J$ = "" \ Gosub AUTKWINDX
FLD = 30;J$ = "" \ Gosub AUTKWINDX
Gosub WRITE_KEYW
! Print @0,23;'CL';
If PMODE = 8 Goto OUTEXIT
Return 
AUTKWINDX: Rem "auto change
DSP = (FLD - 1) * 15 + 1
J1$ = PKYW$[DSP,DSP + 14]
Gosub DELAKEY
Gosub CHKODUPES
K2$[1,15] = UCase$(J$) + SPACES$[1,15] ! KEY=UPPERCASE, FILE=AS IS
Gosub ADDAKEY
PKYW$[DSP,DSP + 14] = J$ + SPACES$[1,15]
Return 
CHKODUPES: Rem "prevent duplicates! - if reserved is already not - clear it
If J$[1,15] = SPACES$[1,15] Return 
J$ = J$ + SPACES$
For X = 1 To 20
  if x<>fld ! do not check same field
	X5 = (X - 1) * 15 + 1
	If J$[1,15] = PKYW$[X5,X5 + 14] Let PKYW$[X5,X5 + 14] = SPACES$[1,15]
  Endif
Next X
Return 
GET_KEYWAUTO: Rem "same for both
Search #CH_KEYW,2,1;K1$,R[CH_KEYW],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Gosub READ_KEYW
Else 
  PKYW$ = " ",PKYW$
End If 
If E = 1 ! "create it!!
  E = 2;R[CH_KEYW] = 0
  Search #CH_KEYW,1,0;K1$,R[CH_KEYW],E \ If E Gosub ERR_SEARCH
  Search #CH_KEYW,4,1;K1$,R[CH_KEYW],E \ If E Gosub ERR_SEARCH
  CUST$ = " ",CUST$
  CUST$ = K1$
  Gosub WRITE_KEYW
End If 
Return 
READ_CUST: Rem "Customer file description
Mat Read #CH_CUST,R[CH_CUST],0;C1$;
Mat Read #CH_CUST,R[CH_CUST],142;C1;
Mat Read #CH_CUST,R[CH_CUST],348;ZIPCD$;
If CH_CNOTE Gosub GET_CNOTES
Return 
GET_CNOTES: Rem "notes file too
K3$ = C1[1] Using "######"
Search #CH_CNOTE,2,1;K3$,R[CH_CNOTE],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_CNOTE,R[CH_CNOTE],100;A0$;
Else 
  A0$ = " ",A0$
End If 
Return 
READ_SHIP: Rem "Shiplist file
Mat Read #CH_SHIP,R[CH_SHIP],0;S1$;
Mat Read #CH_SHIP,R[CH_SHIP],142;SL1;
Mat Read #CH_SHIP,R[CH_SHIP],396;SLPHN$;
Return 
GET_CUST: Rem "get customer for shiplist record
Gosub READ_SHIP
CUST$ = SL1 Using "######.######"
CUST$[7] = ""
Search #CH_CUST,2,1;CUST$,R[CH_CUST],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Gosub READ_CUST
Else 
  R[CH_CUST] = 0;SL1 = 0
  C1$ = " ",C1$;C1$[31] = S1$
End If 
Return 
READ_KEYW: Rem "key word
Mat Read #CH_KEYW,R[CH_KEYW],0;CUST;
Mat Read #CH_KEYW,R[CH_KEYW],4;SLINDC
Mat Read #CH_KEYW,R[CH_KEYW],6;PKYW$;
Mat Read #CH_KEYW,R[CH_KEYW],456;CUST$;
Return 
WRITE_KEYW: Rem "key word file
Mat Write #CH_KEYW,R[CH_KEYW],0;CUST;
Mat Write #CH_KEYW,R[CH_KEYW],4;SLINDC;
Mat Write #CH_KEYW,R[CH_KEYW],6;PKYW$;
Mat Write #CH_KEYW,R[CH_KEYW],456;CUST$;
Return 
PHONFIX: Rem "only send digits - no dashs, etc
J$ = " ",J$;J$ = ""
For X = 1 To Len(PHN$)
  If PHN$[X,X] >= "0" And PHN$[X,X] <= "9" Let J$ = J$ + PHN$[X,X]
Next X
Return 
OUTEND: Rem "Done
!If Err 0 Rem
!Window Close 
If Err 0 Gosub ERR_TRAP
OUTEXIT: Rem "really outta here
If CH_CUST Close #CH_CUST
If CH_SHIP Close #CH_SHIP
If CH_KEYW Close #CH_KEYW
If CH_IKEYW Close #CH_IKEYW
If CH_CNOTE Close #CH_CNOTE
End 
Rem {begin call.input.i}
ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!Call "Input",J1,J$,J0$,J1$,J4$,J5$
Return 
ISERRMSG: ! X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
Return ! Print 'K1'; \ Window Close \ Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}
Rem {begin srcdevl/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
CHNLSCR = Chf(CHNL)
If Err 0 Gosub ERR_Trap
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
Rem {end rtn.getchan.i}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
E$=msg$
Call programdump("tmp/cslkeywrdse!","")
goto err_main
ERR_MAIN: Rem
e$ = msg$
Err_trap: ! 
! If Err 0 Rem

include "src/callsuberr.inc"
End
Rem {end rtn.error.s}