! >>> Program 853
!
! description   Production Shortage Forecast
!
! loadsave -w -n 100,10 -o prog/dxport/853.dl4 src/853.src
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 21, 2000  10:12:13
Rem /usr/acct/r97//usr/acct/jcs/work/devl/mfg/mx853.src (univ2) [jcs] {60008}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
Option Default Dialect IRIS1
Rem MX853 - SINGLE/MULTI LEVEL EXPLODED BOM
Rem jliu 01/27/00 cct131991 initialize the line type before continue the
Rem               next make item

! local subs

Declare Sub GetParameters,ReadProduct,DoConvert


try ! main try
Dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],J4$[50]
Dim 3%,P3,A1[6],A2,A3,A4,Q
Dim G$[20],K5$[45],1%,S2[3],N2$[26]
Dim L$[5],P9$[50],U5$[10],N1$[36]
Dim 2%,B0[24],C4[8],3%,BMAMT,COST,AMNT,WGHT
Dim 3%,R4[100],S3,2%,S4
Dim 2%,P0[2],1%,D0[100]
Dim 2%,C2,Y,B[101],B1
Dim 2%,R5,R2,C,R[40],R1,E2,1%,I
Dim 1%,E1,X,F,P9,S9,P[1],L9,T,F9,Z1,2%
Dim F$[20],P$[156],U$[9],N$[12],H$[156]
Dim A$[20],J$[20],C$[800],J0$[5],J1$[5],X$[10]
Dim I$[30],B$[30],K$[12],K1$[30],P1$[10]

! DX stuff
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[200]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]

dim 3%

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

B$ = " ",B$
C$ = " ",C$
For E1 = 2 To 6
	Read X
	If X = 0 Goto L_855
	Read #1,88,X;F$[1,16];
	Open #E1,F$
L_855: Next E1
Data "0","1792","1728","1104","656"
Read #1,19,50;P9$;
X1 = 1 \ If P9$[6,6] = "P" Let X1 = .01
R1 = 0 \ U$ = "---,###"
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNT(X) = Sgn(X) * (Int(Abs(X) * 10000 + .5) * .0001)
Def FNP(X) = FNT(X * X1)


j8 = 0
try
	J9 = Chf(0) 
else
	J8 = Spc(8)
end try
If J8 If J8 <> 49 error j8
P9 = 1 \ If J8 Let P9 = 0
P9 = 1
if j8
	e$ = "Browser output not supported for this report."
	error 10000
end if
! hold off setting output (which closes dynamicx)
! until after all parameters validated in case of error


L_910: Window On 
	Call GetParameters()
	gosub L_2000
	Gosub L_1220

	E2 = C2 \ call ReadProduct()
	B1 = PFU1[8]
	B[0] = B1
	R2 = C2
	S8 = 0
	Gosub L_3000
goto OUTEND:

L_1180: If P9 = 0 If L9 > 21 Gosub L_1220
	If P9 = 1 If L9 > 55 Gosub L_5800
	L9 = L9 + 1
Return 

L_1220: Rem
	I$ = "Y"
	Z9 = 0
	If I$ <> "Y" Goto L_1220
	Gosub L_5800
Return 

L_2000: Rem GET WEIGHT
	CNVTA = Q;CNVTU[0] = B1;CNVTU[1] = 0;CNVTU[2] = 1
	call DoConvert()
	If A[5] = 0 Let A[5] = 1
	WGHT = FNT(A[6] * AMNT / A[5])
Return 

L_3000: Rem EXPLOSION
	D0 = 1
	A$ = R2 Using "#####   0    0"
	F$ = A$
	Search #6,3,D0;F$,S4,R1
	If R1 = 0 Goto L_3150 ! exact match
	L_3060: Search #6,3,D0;F$,R,R1
		If R1 <> 0 Return 
		If A$[1,5] <> F$[1,5] Return 
		R3 = F$[1,5]
		Read #3,R3,0;P1$;
	If F$[15,16] <> P1$[6,7] Goto L_3060
	I = 0
	Gosub L_1180
	Print #0;""
	F$ = A$
	L_3140: Search #6,3,D0;F$,S4,R1
		If R1 <> 0 Goto L_3530
		L_3150: If A$[1,5] <> F$[1,5] Return 
		R3 = F$[1,5]
		Read #3,R3,0;P1$;
		If F$[15,16] <> P1$[6,7] Goto L_3140
		Read #6,S4;S3;
		Mat Read #6,S4,6;N1$;
		Mat Read #6,S4,48;S2;
		Mat Read #6,S4,56;N2$;
		R4[I] = S3
		Gosub L_1180
		H = 999
		J$[1,14] = F$[1,14]
		S = J$[6,9]
		J0$ = "Y";J1$ = "Y"
		Gosub L_5000
		If J0$ = "N" Goto L_3500
		If L$ = "S" Goto L_3500
		H = 0
		I = 1
		L_3280: C$[I * 15 + 1,I * 15 + 14] = E2 Using "#####   0    0"
		Read #3,R3,0;P1$;
		G$ = C$[I * 15 + 1,I * 15 + 14]
		G$[15,16] = P1$[6,7]
		D0[I] = 1
		L_3310: Search #6,3,D0[I];G$,R,R1
		If R1 <> 0 Goto L_3470
		If G$[1,5] <> C$[I * 15 + 1,I * 15 + 5] Goto L_3470
		R3 = G$[1,5]
		Read #3,R3,0;P1$;
		If G$[15,16] <> P1$[6,7] Goto L_3310
		L_3340: G$ = C$[I * 15 + 1,I * 15 + 14]
		R3 = G$[1,5] \ Read #3,R3,0;P1$;
		G$[15,16] = P1$[6,7]
		L_3350: Search #6,3,D0[I];G$,S4,R1
		If R1 <> 0 Goto L_3470
		If G$[1,5] <> C$[I * 15 + 1,I * 15 + 5] Goto L_3470
		R3 = G$[1,5]
		Read #3,R3,0;P1$;
		If G$[15,16] <> P1$[6,7] Goto L_3350
		Read #6,S4;S3;
		Mat Read #6,S4,6;N1$;
		Mat Read #6,S4,48;S2;
		Mat Read #6,S4,56;N2$;
		R4[I] = S3
		Gosub L_1180
		J$ = G$;J0$ = "Y";J1$ = "Y"
		Gosub L_5000
		C$[I * 15 + 1,I * 15 + 14] = G$
		If J0$ = "N" Goto L_3340
		I = I + 1
		Goto L_3280
		L_3470: I = I - 1
		If I = 0 Goto L_3500
		Goto L_3340
		L_3500: C$ = " ",C$
		I = 0
	Goto L_3140
L_3530: Return 


L_5000: Rem
	E2 = J$[10,14]
	If S2[3] = 1 Goto L_5080
	call ReadProduct()
	If S2[2] = 1 Gosub L_6550
	If S2[2] = 1 If P$[139,139] = "M" If J1$ = "Y" Gosub L_6500
	If J1$ = "N" Return 
	If S2[2] = 2 Let J0$ = "N"
	Mat Read #3,E2,256;A1;
	Gosub L_6700
	S3 = R4[I] \ Gosub L_6800
	R4[I] = BMAMT
	B[I + 1] = B1
	L_5080: Rem..A1=A1-A1(1)
	If I = 0 Goto L_5130
	For X = 1 To I
		Print #0;"-";
	Next X
	L_5130: If S2[3] = 1 Let P$ = " ",P$;P$[140,141] = "Z ";P$[9,34] = N2$[1,26]
	Print #0; Tab I;P$[140,151];
	If S2[2] = 2 Print #0;"@  ";
	If S2[2] <> 2 Print #0;"   ";
	Print #0;P$[9,25];
	If S2[3] = 1 Print #0;P$[26,34] \ Goto L_5580
	R5 = 1
	X9 = 0 \ If I > 0 Let X9 = I - 1
	For X = X9 To I
		R5 = R5 * R4[X]
	Next X
	If I > 0 If (S2[1] = 0 Or S2[1] = 2) Let X1 = .01 \ R5 = FNP(R5)
	If S2[1] = -1 Let R5 = R4[I]
	Print #0; Using "#####.####"; Tab (33 + I);R5;
	Read #4,S2[0],10;K5$[1,4];
	If S2[1] = -1 Print #0;"F"; \ X1 = 1
	If S2[1] = 0 Print #0;"%"; \ X1 = .01
	If S2[1] = 1 Print #0;" "; \ X1 = 1
	If S2[1] = 2 Print #0;"#"; \ X1 = .01
	R5 = 1
	X9 = 0 \ If I > 0 Let X9 = I - 1
	For X = X9 To I
	If X = I If X1 = .01 Let R5 = FNP(R5 * R4[X]) \ Goto L_5280
	R5 = R5 * R4[X]
	L_5280: Next X
	If H = 0 Goto L_5630
	If S2[1] <> -1 Goto L_5340
	A4 = R5
	Gosub L_5590
	Goto L_5430
	L_5340: Rem
	A4 = R5 * Q
	If S2[1] = 2 Let A4 = (R5 * WGHT)
	Gosub L_5590
	A4 = A1 - A1[1] - A1[3]
	If P9$[28,28] = "Y" Let A4 = A4 + A1[2]
	Gosub L_5590
	A4 = (A1 - A1[1] - A1[3]) - (R5 * Q)
	If S2[1] = 2 Let A4 = (A1 - A1[1] - A1[3]) - (R5 * WGHT)
	If P9$[28,28] = "Y" Let A4 = A4 + A1[2]
	If K5$[1,2] = "HR" Goto L_5430
	If A4 > 0 Goto L_5430
	Gosub L_5590
	L_5430: P$[120,122] = K5$[1,3]
	Print #0; Tab 85;P$[120,122];
	If P9 = 1 Goto L_5470
	L_5470: Print #0; Tab 89;
	A4 = A1[0]
	Gosub L_5590
	Print #0; Tab 99;
	A4 = A1[1]
	Gosub L_5590
	Print #0; Tab 109;
	A4 = A1[2]
	Gosub L_5590
	Print #0;""
	If P9$[26,26] = "Y" Print #0; Tab (I + 15);P$[63,92]

L_5575: If S2[2] <> 2 If P$[139,139] = "M" Gosub L_5660
L_5580: Return 

L_5590: A2 = A4
	Print #0; Using "-------#.##  ";A2;
Return 

L_5630: Print #0; Tab 57;"--"
	Goto L_5575

L_5660: Rem PRDTN+>STK
	Q1 = Q \ If I > 0 Let Q1 = 1
	BMAMT = R5 * Q1 \ Gosub L_6850
	R4[I] = S3
Return 

L_5800: Rem HEADINGS
	Print #0;"\14\\10\\15\";
	Print #0;N$;" ";H$[9,38];" EXPLOSION FOR";
	A4 = Q
	Gosub L_5590
	Read #4,B1,10;H$[123,125];
	Print #0;" ";H$[123,125]
	If P9$[26,26] = "Y" Print #0; Tab 13;H$[63,92]
	Print #0;"\15\MATERIAL       DESCRIPTION";
	Print #0; Tab 34;"QTY / UNIT       REQ.QTY      AVAIL     SHORTAGE   U/M";
	If P9 = 1 Goto L_5920
	L_5920: Print #0; Tab 94;"STOCK"; Tab 107;"ALLOC"; Tab 117;"ON PO/WIP";
	Print #0;""
	L9 = 3
Return 

L_6000: Rem ERROR ROUTINE
	Print "  INVALID ";
	Signal 3,10
	Print 'MU'
	Print B$;B$;B$[1,10];
	Print 'MU';
Return 

L_6500: Rem OPTIONAL PATH -> TAKE IT?
	j0$ = "N"
	If L$ = "S" Return 
! 	Print @0,20;'CE';N1$[13,24];" IS OPTIONAL MAKE ITEM.  EXPLODE IT? (Y/N)  ";
! 	Input ""J0$ \ Print @0,20;'CL'
! 	If J0$ <> "Y" If J0$ <> "N" Goto L_6500
! 	If J0$ = "Y" Return 
! 	If J0$ = "N" Return 
	if explodeOpt J0$ = "Y"
Return

L_6550: Rem OPT - RM
! 	J0$ = "N"
! 	Print @0,21;'CE';N1$[13,24];" IS OPTIONAL ITEM.  USE IT? (Y/N)  ";
! 	Input ""J1$ \ Print @0,21;'CL'
! 	If J1$ <> "Y" If J1$ <> "N" Goto L_6550
! 	If J1$ = "Y" Return 
! 	If J1$ = "N" Return 
	j1$ = "N"
	if useOpt J1$ = "Y"
Return

L_6700: Rem CONVERT
	For S9 = 0 To 3
		COST = A1[S9] \ Gosub L_6870
		A1[S9] = COST
	Next S9
Return 

L_6800: Rem BASE(S3) -> PRDTN
	CNVTA = S3;CNVTU[0] = 0;CNVTU[1] = S2[0];CNVTU[2] = 5
	If (S2[1] = 0 Or S2[1] = 2) Let AMNT = S3 \ Goto L_6810
	call DoConvert()
	L_6810: If AMNT <= 0 Let AMNT = S3
	BMAMT = AMNT
	CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 2
	call DoConvert()
	If AMNT <= 0 Let AMNT = A2
	COST = FNT(AMNT)
Return 

L_6850: Rem PRDTN -> BASE UNITS
	CNVTA = BMAMT;CNVTU[0] = S2[0];CNVTU[1] = PFU1[8];CNVTU[2] = 5
	If (S2[1] = 0 Or S2[1] = 2) Let AMNT = BMAMT \ Goto L_6860
	call DoConvert()
	L_6860: If AMNT <= 0 Let AMNT = BMAMT
	S3 = AMNT \ Return 
	L_6870: Rem BASE  -> PRDTN UNITS
	CNVTA = COST;CNVTU[0] = 0;CNVTU[1] = S2[0];CNVTU[2] = 5
	call DoConvert() \ If AMNT <= 0 Let AMNT = COST
	COST = AMNT
Return 

OUTEND: Rem EXIT
Close 
Stop 

else ! main try
	include "src/callmainerrnet.inc"
end try


sub GetParameters()
try
	i$ = GetParameter$("PRODUCT")
	A$ = " ",A$
	A$ = A$[1,12]
	I$ = I$[1,12]
	A$[1,Len(I$)] = I$
	Search #3,2,1;A$,R,R1
	IF R1 or I$ = ""
		e$ = "Invalid product code!"
		error 1000
	end if
	Mat Read #3,R,0;H$;
	N$ = A$
	X1 = 1
	E2 = R \ call ReadProduct()
	B1 = PFU1[8]
	Read #4,PFU1[8],10;K5$[1,4];
	C2 = R
	i$ = GetParameter$("PRODUCTIONQTY")
	Q = I$
	If I$ = "" or Q = 0
		e$ = "Valid production quantity must be entered!"
		error 10000
	end if
	
	Let L$ = "S"
	If P9$[16,16] <> "S"
		i$ = GetParameter$("EXPLOSION")
		if i$ = "Y" l$ = "M"
	end if
	i$ = GetParameter$("USEOPTIONAL")
	useOpt = 0 
	if i$ = "Y" useOpt = 1
	i$ = GetParameter$("EXPLODEOPT")
	explodeOpt = 0
	if i$ = "Y" explodeOpt = "1"
else
	include "src/callsuberr.inc"
end try
end sub

sub ReadProduct()
try
	If S2[3] = 1 exit sub
	Mat Read #3,E2;P$;
	Mat Read #3,E2,156;B0;
	Mat Read #3,E2,256;A;
	Mat Read #3,E2,512;PFU1;
	Mat Read #3,E2,554;PFU2;
	If Not(B[8]) Let B[8] = B[21]
	If Not(B[8]) Let B[8] = B[10]
	A2 = B[8]
else
	include "src/callsuberr.inc"
end try
end sub

sub DoConvert()
try
	If S2[3] = 1 Let AMNT = CNVTA \ return
	Call "MXPRCONV5.DL4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
	If FLAG Let E = FLAG \ error 11000
	AMNT = CNVTA
else
	include "src/callsuberr.inc"
end try
end sub
