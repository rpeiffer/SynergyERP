! >>> Program po381lc
!
! description Copy Purchase Order Line into a Debit Memo
! loadsave -w -n 100,10 -o prog/dxport/po381lc.dl4 src/po381lc.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY  5, 2008  11:32:14
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/po381lc.src (univ2) [mary] {13791}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,Logic,String,Time,VerifyDate
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$,openfile,OpenMySQLMirror
include "src/inc/sql_prod.inc"
!Option Default Dialect IRIS1
Rem PO381LC  DEBIT MEMOS PURCHASE  ORDER COPY
Rem  AUTHOR: G.DOSCHER   2/05/81
Rem  LAST UPDATE: G.DOSCHER  2/06/91
Try
!parm[0]=purchase order # to copy debit memo into 
!parm[1]=debit memo header rec#
!parm[2]=vendid
!parm[8]=poid ! debit memo id
!parm[9]=intco ! control #
	
Enter Chan[],parm[],rstr$,message$,eflg
dim 1%,cnvcu[10],3%,cnvca[10],keycurr$[10],3%,rec_curr,currfact
Dim 3%,vend,credno,order,r8,intco
let order=parm[0] ! purchase order # 
let r8=parm[1] ! debit memo header record #
let vend=parm[2] ! vendor # 
let intco=parm[9]
Dim 1%,L1[5],NSD1[7],PFU1[20],CNVTU[9],SC,SR,Z9[9],SOURCE,COST_LEV[3]
Dim 2%,L2[2],L9,NSD2[4],S9[9],ORDER,Sline,ELINE
Dim 3%,L3[6],NSD3[9],PFU2[6],CNVTA[4],A[33],tmp3
Dim J4$[50],L1$[120],NSD$[96]
DIM 1%,plcurrid,phcurrid,3%,plcurrfact,phcurrfact
! If Err 0 Gosub ERR_TRAP
Dim 1%,E,W1[2],X1[9],H4[3]
Dim 1%,WH0[3],WH8[47],FLAGS[11],POMISC[2],DM_POMISC[2]
Dim 2%,B[24],B1,B2,H0[5],H3[4],W2[9],X2[9],WHBLD[2]
Dim 2%,WH7[3],W7[1],OLL4[3],SOPO,OH5[16]
Dim 3%,H8[9],R8,R9,W3[24],X3[9],PL[5],PO_PL4[19],PL4[23]
Dim 3%,W5[25],WH9[23],TO_[3],A1[7],OLL7[12],PL5[9],PL6[10],AMOUNT
Dim 3%,POLNUM
Dim A$[156],U5$[50],W1$[32],X$[22]
Dim W2$[36],P60$[50],WHPROD$[12],p61$[256]
Dim 3%,PL[5],1%,PL0[4],PO_PL0[4],3%,R10
Dim 3%,DISP_COST,DISP_QTY,DISP_EXT,R[10]
Dim K9$[50],K80$[50],K90$[50],K23$[50],P9$[50]
Dim 1%,POL1[5],2%,POL2[2],3%,POL3[6],POL1$[120]
Dim K14$[50],K13$[50],K27$[50]
Dim 2%,P0[5],P$[82],P1$[116],2%,P3[4],1%,P4[3],P8[4]
Dim PSD$[96],1%,PSD1[7],2%,PSD2[4],3%,PSD3[9]
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[50] ! error handling variables
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Def FNU(H) = Int(Abs(H)) + Sgn(Fra(Abs(H))) * Sgn(H)
Z9[1] = 3 \ Z9[2] = 7
! CHAN[0]=CTLC
! CHAN[1]=CH_POH
! CHAN[2]=CH_POL
! CHAN[3]=CH_VEND
! CHAN[4]=CH_PROD
! CHAN[5]=CH_PRWH
! CHAN[6]=CH_NSTK
! CHAN[7]=CH_CCODE
! CHAN[8]=CH_WH

if not (chan[0]) ! cntrl file
	ctlc = OpenFile(9999,intCo) \ If ctlc = -1 Error 42 !control 
else
	let ctlc=chan[0]
endif
if not (chan[1]) ! purchase order header  #8
	 Ch_Poh = openfile(2416,intCo) \ If Ch_Poh = -1 Error 42     !"po header file
else
	ch_poh=chan[1]
endif
if not (chan[2]) ! po lines #9
	Ch_PoL = openfile(2432,intCo) \ If Ch_Pol = -1 Error 42     !"po lines file
else
	let ch_pol=chan[2]
endif
if not (chan[3]) ! vend
	Ch_Vend = openfile(2400,intCo) \ If Ch_Vend = -1 Error 42     !Vendor FIle
else
	let ch_vend=chan[3]
endif
if not (chan[4]) ! product file #3
	 Ch_Prod = OpenFile(1792,intCo) \ If Ch_Prod = -1 Error 42  !product file 
else
	let ch_prod=chan[4]
endif
if not (chan[5]) ! product warehouse #10
	Ch_PrWh = OpenFile(1744,intCo) \ If Ch_PrWh = -1 Error 42  !"product warehouse file
else
	let ch_prwh=chan[5]
endif
if not (chan[6]) !  nonstock #14
	ch_nstk=OpenFile(2448,intCo) \ If Ch_nstk = -1 Error 42 ! nonstock product
else
	let ch_nstk=chan[6]
endif
If not (chan[7]) ! 
	Ch_Ccode = OpenFile(-1728,intCo) \ If Ch_Ccode = -1 Error 42  !u/m codes file
else
	let ch_Ccode=chan[6]
endif
If not (chan[8]) ! warehouse file #12 
	Ch_Wh = OpenFile(2768,intCo) \ If Ch_Wh = -1 Error 42  !" warehouse file
else
	let ch_wh=chan[8]
endif
! open files here
sqlChan = OpenMySQLMirror(e$)
Mat Read #ctlc,19,50;P9$;
Mat Read #ctlc,60,50;P60$;
mat read #ctlc,61,0;p61$;
B1 = 1 \ B2 = 6 !  \ R8 = S9[0]
Mat Read #ch_poh,R8;H0;
Mat Read #ch_poh,R8,222;H3;
Mat Read #ch_poh,R8,242;H4;
Mat Read #ch_poh,R8,250;H8;
mat read #ch_poh,r8,612;PhCURRID;
mat read #ch_poh,r8,614;phcurrfact;
H8[0] = 0 \ H8[1] = 0
Gosub L_6500
B1 = MAXLINE + 1
K80$ = " ",K80$
K80$[1,6] = H3[3] Using "######"
K80$[7,12] = ORDER Using "######"
Search #ch_poh,2,2;K80$,R[8],E \ If E > 1 Gosub ERR_SEARCH
If E>0
	let eflg=eflg+1
	let message$=message$+"Purchase Order "+str$(Order)+" is Not On File"
	goto outend:
	!Print Using "  PURCHASE ORDER ###### NOT FOUND ";@0,22;'RB';ORDER;
endif
L_2080: Mat Read #ch_poh,R[8],0;P0; 
If P0 <=3
	let eflg=eflg+1
	let message$=message$+"Purchase Order "+str$(Order)+" Has Not Been Received" 
	!Print Using "   PURCHASE ORDER ###### HAS NOT BEEN RECEIVED ";@0,22;'RB';ORDER;
	Goto OUTEND
endif
L_2100: Rem READ LINES
SOPO = H0[2]
Write #ch_poh,R[8],314;SOPO;
Call dxget("TTLORDLINE",tmp$) !              
totordline = tmp$                            
If (totordline) > 0                          
  For ctr = 1 To totordline                  
    Call dxget("OrdLineNum" + Str$(ctr),tmp$)
    linenum = tmp$                           
    If linenum > 0 Gosub getpoline          
  Next ctr                                   
End If 
goto outend:

getpoline: ! get the poline #
K90$ = " ",K90$
K90$[1,6] = ORDER Using "######"
K90$[7] = linenum Using "###" 
L_2130: Search #CH_POL,2,1;K90$,R[9],E 
If E return
Mat Read #CH_POL,R[9],24;POL3;
!\ If Not(POL3[3]) return
Mat Read #CH_POL,R[9],0;POL1;
Call Logic(1,2 ^ 0,POL1[3],NONSTOCK)
Mat Read #CH_POL,R[9],12;POL2;
Mat Read #CH_POL,R[9],66;POL1$;
Mat Read #CH_POL,R[9],222;PO_PL0;
Mat Read #CH_POL,R[9],232;PO_PL4;
Mat Read #CH_POL,R[9],376;POMISC;
Mat Read #CH_POL,R[9],382;PL5;
Mat Read #CH_POL,R[9],442;PL6;
Mat Read #CH_POL,R[9],542;POLNUM;
Mat read #ch_pol,r[9],548;PlCURRID;
MAT READ #CH_POL,R[9],550;PlCURRFACT;
let tmp3=pol3[3]+po_pl4[16]
if not(tmp3) return
Gosub L_5800
If FLAGS[2] return ! Goto L_2310
!If Sline If Sline > POL1[2] Goto L_2130
!If ELINE If ELINE < POL1[2] Goto OUTEND
!If NONSTOCK Gosub L_5000 \ Goto L_2130
Gosub L_3500
L_2310: L1[1] = H4[1]
L1[0] = 11
L1[2] = B1
L1[3] = POL1[3]
L2[2] = H0[4]
PL4[10] = ORDER;PL4[11] = POL1[2]
PL4[0] = POL2[0] - (POL2[0] * (PO_PL4[2] / 100)) - PO_PL4[3]
If PL4[0] < 0 Let PL4[0] = 0
PL4[2] = PO_PL4[2];PL4[3] = PO_PL4[3]
PL4[16] = PO_PL4[17]
DM_POMISC[0] = POMISC[0]
IF H4[0]=1 OR H4[0]=5 ! DIRECT
	LET DM_POMISC[0]=0 ! STOCK UPDATE NO
	LET POMISC[0]=0
ENDIF
PL0[2] = PO_PL0[2] \ PL0[3] = PO_PL0[3]
If Not(NONSTOCK)
  Mat Read #ch_prod,POL3[1];A$
  Mat Read #ch_prod,POL3[1],156;B
  Mat Read #ch_prod,POL3[1],256;A
  Mat Read #ch_prod,POL3[1],460;A1
  Mat Read #ch_prod,POL3[1],512;PFU1
  Mat Read #ch_prod,POL3[1],554;PFU2
  If POMISC[0] Let A[3] = A[3] + POL3[3] +po_pl4[16]
  Mat Write #ch_prod,POL3[1],256;A;
if sqlChan >= 0 ! MySQL enabled and channel opened
	e = prod_UpdateSQLFromDL4(e$, intCo, A$[140,151], sqlChan, ch_prod)
	if e <> 1 ! returns the number of records add/updated/deleted
		gosub ERR_SEARCH
	end if
end if
  If P9$[33,33] = "Y" Gosub L_4000
  L2[0] = POL2[0]
  L3[1] = POL3[1]
  L1[4] = POL1[4]
  L1[5] = POL1[5]
  L3[2] = POL3[3] - PO_PL4[17]	+po_pl4[16]
  PL4[5] = POL3[3] - PO_PL4[17]	 +po_pl4[16]
  PL4[12] = PO_PL4[12];PL4[13] = PO_PL4[13];PL4[14] = PO_PL4[14];PL4[15] = PO_PL4[15]
  If PL4[13] Let L3[5] = (POL3[3]+po_pl4[16]) * PL4[12] / PL4[13]
  PL4[1] = PO_PL4[17]
  If PL4[15] Let L3[6] = (POL3[3]+po_pl4[16]) * PL4[14] / PL4[15]
  L3[4] = POL3[3]+po_pl4[16]
  L1$[1,120] = POL1$[1,120]
End If 
If NONSTOCK
  L2[0] = POL2[0]
  Mat Read #ch_nstk,POL3[1];PSD$;
  Mat Read #ch_nstk,POL3[1],96;PSD1;
  Mat Read #ch_nstk,POL3[1],112;PSD2;
  Mat Read #ch_nstk,POL3[1],132;PSD3;
  L1[4] = POL1[4]
  L1[5] = POL1[5]
  PL4[12] = PO_PL4[12];PL4[13] = PO_PL4[13];PL4[14] = PO_PL4[14];PL4[15] = PO_PL4[15]
  L3[2] = POL3[3] - PO_PL4[17]+po_pl4[16] \ L3[4] = POL3[3]+po_pl4[16]
  PL4[5] = POL3[3] - PO_PL4[17]+po_pl4[16];PL4[1] = PO_PL4[17]
  If PL4[13] Let L3[5] = (POL3[3]+po_pl4[16]) * PL4[12] / PL4[13]
  If PL4[15] Let L3[6] = (POL3[3]+po_pl4[16]) * PL4[14] / PL4[15]
  L1$[1,120] = POL1$[1,120]
  NSD$[1,96] = PSD$[1,96]
  NSD3[6] = PSD3[6] \ NSD3[7] = PSD3[7] \ NSD3[8] = PSD3[8]
  NSD2[0] = PSD2[0] \ NSD2[1] = PSD2[1] \ NSD2[3] = PSD2[3]
  NSD3[2] = PSD3[2]
  NSD3[7] = PSD3[7] \ NSD3[8] = PSD3[8]
  NSD3[6] = PSD3[6] \ NSD3[2] = PSD3[2]
  For X = 0 To 5
    If X <> 2 Let NSD3[X] = PSD3[X]
  Next X
  For X = 0 To 7
    NSD1[X] = PSD1[X]
  Next X
  NSD1[0] = B1
L_2790: K14$ = NSD$[1,12] \ K14$[13] = X1 Using "##"
  Search #ch_nstk,2,1;K14$,L3[1],E \ If E > 1 Gosub ERR_SEARCH
  If Not(E)
    X1 = X1 + 1 \ If X1 > 99 Gosub ERR_SEARCH
    Goto L_2790
  End If 
  nsd1[6] = x1 ! save tie breaker
  E = 2 \ Search #ch_nstk,1,0;K14$,L3[1],E \ If E Gosub ERR_SEARCH
  Search #ch_nstk,4,1;K14$,L3[1],E \ If E Gosub ERR_SEARCH
  Mat Write #ch_nstk,L3[1];NSD$
  Mat Write #ch_nstk,L3[1],96;NSD1
  Mat Write #ch_nstk,L3[1],112;NSD2
  Mat Write #ch_nstk,L3[1],132;NSD3
  A[5] = NSD3[7];A[6] = NSD3[6]
  For X = 0 To 20
    PFU1[X] = 0
    If X < 7 Let PFU2[X] = 0
    If X < 4 Let PFU1[X] = NSD1[X + 2]
    If X < 3 Let PFU2[X] = NSD3[X + 3]
  Next X
  PFU1[8] = NSD1[5];PFU1[10] = NSD1[4];PFU1[11] = NSD1[3]
  PFU1[15] = NSD1[7]
End If 
CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2;CNVTA = PL4[0]
Gosub L_20000
PL4[0] = AMOUNT
CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2;CNVTA = PL4[0]
Gosub L_20000
PL4[0] = AMOUNT
DISP_QTY = PL4[5];DISP_COST = L2[0] \ Gosub CALC_DISP_EXT
PL4[6] = DISP_EXT
DISP_QTY = PL4[5];DISP_COST = PL4[0] \ Gosub CALC_DISP_EXT
PL4[7] = DISP_EXT
If L1[5] = -2 ! " if LOT
  PL4[6] = PL4[0]
  PL4[7] = PL4[0]
End If
if p61$[136,136]="Y" and phcurrfact<>plcurrfact
	if not(phcurrid)
		let plcurrfact=0
		let plcurrid=0
	else
		let lineunitamt=l2[0]
		let linenetamt=pl4[0]
		if plcurrfact<>0 and phcurrfact<>0
			let cnvcu[0]=1
			let cnvca[0]=l2[0]
			let cnvca[1]=plcurrfact
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
			let amount=cnvca[0]
			let cnvcu[0]=2
			let cnvca[0]=amount
			let cnvca[1]=phcurrfact
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
			let lineunitamt=cnvca[0]
			let cnvcu[0]=1
			let cnvca[0]=pl4[0]
			let cnvca[1]=plcurrfact
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
			let amount=cnvca[0]
			let cnvcu[0]=2
			let cnvca[0]=amount
			let cnvca[1]=phcurrfact
			call "mxcurrconv.dl4",cnvcu[],cnvca[],e$,rstr$
			let linenetamt=cnvca[0]
		endif
		let l2[0]=lineunitamt
		let pl4[0]=linenetamt
		let plcurrfact=phcurrfact
		let plcurrid=phcurrfact
	endif
endif				
Gosub L_6100
DISP_QTY = L3[2];DISP_COST = PL4[0] \ Gosub CALC_DISP_EXT
H8[0] = H8[0] + DISP_EXT
H8[1] = H8[1] + L3[5]
Mat Write #ch_poh,R8,250;H8;
B1 = B1 + 1
Return ! Goto L_2130
L_3500: Rem CLEAR LINE VARS
For X = 0 To 10
  If X < 6 Let L1[X] = 0
  If X < 3 Let L2[X] = 0
  If X > 0 If X < 3 Let POMISC[X] = 0
  If X < 7 Let L3[X] = 0
  If X < 5 Let NSD2[X] = 0
  If X < 8 Let NSD1[X] = 0
  If X < 6 Let PL[X] = 0
  If X < 4 Let PL0[X] = 0
  If X < 10 Let NSD3[X] = 0
  PL6[X] = 0
  Mat PL4 = Zer
Next X
POLNUM = H0[2]
L1$ = " ",L1$
NSD$ = " ",NSD$
E = 2
Search #CH_POL,1,0;K9$,R9,E
If E Gosub ERR_SEARCH
L3[0] = R8
L1[0] = 10
Return 
L_4000: Rem UPDATE WAREHOUSE FILE
U5$ = POL1$[81,92] \ U5$[13] = H4[1] Using "##"
Search #ch_prwh,2,1;U5$,R10,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_4230
If X1 < 0 Gosub ERR_SEARCH
WHPROD$[1,12] = POL1$[81,92];WHBLD[0] = 10;WHBLD[1] = H4[1];WHBLD[2] = B[24]
Call "MXWHCREATE",WHPROD$,WHBLD[]
R10 = WHBLD[2];E = 0;WHBLD[2] = 0 \ Goto L_4230
W1$ = " ",W1$ \ W1$[1,12] = POL1$[81,92] \ W1$[13,32] = A$[93,112]
For X1[1] = 0 To 47
  If X1[1] < 3 Let W1[X1[1]] = 0
  If X1[1] < 10 Let W2[X1[1]] = 0
  If X1[1] < 25 Let W3[X1[1]] = 0
  If X1[1] < 26 Let W5[X1[1]] = 0
  If X1[1] < 4 Let WH0[X1[1]] = 0
  If X1[1] < 4 Let WH7[X1[1]] = 0
  If X1[1] < 47 Let WH8[X1[1]] = 0
  If X1[1] < 24 Let WH9[X1[1]] = 0
  If X1[1] < 2 Let W7[X1[1]] = 0
Next X1[1]
W2$ = " ",W2$
W1[0] = H4[1]
E = 2 \ Search #ch_prwh,1,0;U5$,R10,E \ If E Gosub ERR_SEARCH
Gosub L_4400
Search #ch_prwh,4,1;U5$,R10,E \ If E Gosub ERR_SEARCH
L_4230: Gosub L_4270
If POMISC[0] Let W3[2] = W3[2] + POL3[3] +po_pl4[16]
Gosub L_4400
Return 
L_4270: Rem READ WHPR FILE
Mat Read #ch_prwh,R10,0;W1$
Mat Read #ch_prwh,R10,32;W1
Mat Read #ch_prwh,R10,38;W2
Mat Read #ch_prwh,R10,78;W3
Mat Read #ch_prwh,R10,228;W5
Mat Read #ch_prwh,R10,384;W2$
Mat Read #ch_prwh,R10,420;WH0
Mat Read #ch_prwh,R10,428;WH7
Mat Read #ch_prwh,R10,444;WH8
Mat Read #ch_prwh,R10,540;WH9
Mat Read #ch_prwh,R10,696;W7
Return 
L_4400: Rem WRITE WHPR FILE
Mat Write #ch_prwh,R10,0;W1$
Mat Write #ch_prwh,R10,32;W1
Mat Write #ch_prwh,R10,38;W2
Mat Write #ch_prwh,R10,78;W3
Mat Write #ch_prwh,R10,228;W5
Mat Write #ch_prwh,R10,384;W2$
Mat Write #ch_prwh,R10,420;WH0
Mat Write #ch_prwh,R10,428;WH7
Mat Write #ch_prwh,R10,444;WH8
Mat Write #ch_prwh,R10,540;WH9
Mat Write #ch_prwh,R10,696;W7;
Return 
! L_5000: Rem NON STOCK ON PO
!Return 1
!Print @0,20;'CE';@2,20;'RB';"NONSTOCK ITEM ON LINE # ";POL1[2];"ALREADY ON  ON PO ";OLL4[2];" FOR THIS SALES ORDER"
!Input ""U5$
!If U5$ = "C" Return 1
!If U5$ = "S" Return 
!Goto L_5020
L_5800: Rem UNPACK L1[3] TO FLAGS[x]
X2 = POL1[3] \ For K = 0 To 11
  FLAGS[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
X2 = 0 \ For K = 0 To 11
  If FLAGS[K] Let X2 = X2 + 2 ^ K
Next K \ L1[3] = X2 \ Return 
!!!
L_6100: Rem WRITE LINE REC
Mat Write #CH_POL,R9;L1
Mat Write #CH_POL,R9,12;L2
Mat Write #CH_POL,R9,24;L3;
Mat Write #CH_POL,R9,66;L1$;
Mat Write #CH_POL,R9,186;PL;
Mat Write #CH_POL,R9,222;PL0;
Mat Write #CH_POL,R9,232;PL4;
Mat Write #CH_POL,R9,376;POMISC;
Mat Write #CH_POL,R9,382;PL5;
Mat Write #CH_POL,R9,442;PL6;
Mat Write #CH_POL,R9,542;POLNUM;
mat write #ch_pol,r9,548;plcurrid;
mat write #ch_pol,r9,550;plcurrfact;
K9$ = H0[2] Using "######"
K9$[7] = L1[2] Using "###"
Search #CH_POL,4,1;K9$,R9,E \ If E Gosub ERR_SEARCH
K9$ = L3[1] Using "######"
K9$[7] = H0[2] Using "######"
K9$[13] = L1[2] Using "###"
Search #CH_POL,4,2;K9$,R9,E \ If E Gosub ERR_SEARCH
Return 

L_6500: Rem FIND LAST LINE ON THE Debit Memo
K9$ = " ",K9$
K9$[1,6] = H0[2] Using "######"
L_6530: Search #CH_POL,3,1;K9$,R9,E
If E > 2 Gosub ERR_SEARCH
If E Return 
X2 = K9$[1,6]
If X2 <> H0[2] Return 
MAXLINE = K9$[7,9]
Goto L_6530

CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
CNVTA[0] = DISP_QTY;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 5 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA[0] = DISP_COST;CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 RE
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT
! S9[2] = 2
! Chain "PO361B"
!End 
if not (chan[0]) ! cntrl file
	Try Close #ctlc  Else Rem
endif
if not (chan[1]) ! purchase order header  #8
	 Try Close #Ch_Poh Else Rem
endif
if not (chan[2]) ! po lines #9
	Try CLose #Ch_PoL Else Rem
endif
if not (chan[3]) ! vend
	Try Close #Ch_Vend Else Rem
endif
if not (chan[4]) ! product file #3
	 Try Close #Ch_Prod Else Rem
endif
if not (chan[5]) ! product warehouse #10
	Try Close #Ch_PrWh Else Rem
endif
if not (chan[6]) !  nonstock #14
	Try CLose #ch_nstk Else Rem 
endif
If not (chan[7]) ! 
	Try Close #Ch_Ccode Else Rem
endif
If not (chan[8]) ! warehouse file #12 
	Try Close #Ch_Wh Else Rem
endif
if sqlChan >= 0 try close #sqlChan else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
end
