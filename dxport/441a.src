! >>> Program 441a
!
! description Customer Sales MTD/YTD Summary
!
! loadsave -w -n 100,10 -o prog/dxport/441a.dl4 src/441a.src
!
! 1.0 mm/dd/yyyy change??
!
!Include src/copyright.inc
include "src/copyright.inc"
!release 9.0
!
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
!
! *declare common dl4 intrinsic subs & functions
Declare Intrinsic Function trim$,dateusing$,fmtof
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump
!
! *declare common external libs & subs & functions
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
Declare External Function getmsg$,expandarray
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  16:45:53
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx441a.src (univ2) [txc] {59182}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX441A - CUSTOMER SALES  MTD/YTD SUMMARY
Rem AUTHOR: DAVE  OCT 13, 1986
Rem LAST UPDATE: roman 05/27/91  verify variables / clean up
!
Declare Intrinsic Sub InpBuf,String,Time
!
! - Option Default Dialect IRIS1
!
If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FNS(X) = Sgn(X) * (Int(Abs(X) + .5))
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim J$[40],CNAME$[30],J2$[20],J3$[40],j4$[40],ARDATE$[8]
Dim 1%,F,X1,C0[1],2%,X2,3%,J,X3,T9[20],T8[20],ACTIVE
Dim K1$[50],K2$[20],K3$[20],K4$[30],X$[10],T9$[26]
Dim C1$[142]
Dim 2%,C1[12],C3[1],SCALE
Dim 3%,C5[5],C6[9],C10[5]
!
!!!! dx add xport reporting code
Dim tmp$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
For J = 2 To 2
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1808"
Read #1,3;CNAME$;
SCALE = 1
Mat Read #1,0,100;ARDATE$;
If Err 0 Let j8 = Spc(8)
j8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If j8 If j8 <> 49 Goto ERR_TRAP
J9 = 55 \ If j8 Let J9 = 20
!

Call dxget("k2",K2$) !starting code
Call dxget("k3",K3$) !ending code
Call dxget("x1",tmp$) \ X1 = tmp$ ! active, inactive or all (1,2,3)
Call dxget("sort",tmp$) \ If tmp$ = "" Let C = 2 Else Let C = 9 ! sort by category
Call dxget("j2",J2$) ! beg category
Call dxget("j3",J3$) ! end category
Call dxget("j",J$) ! scaling factor
!!!! dx end
!
L_900: Rem GET RANGES
! - Print 'CS'
! - Print @0,0;"MX441A"
! - Print @30,0;"CUSTOMER SALES MTD/YTD SUMMARY"
! - Print @0,14;"ENTER STARTING CUST, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
X2 = K2$ \ K2$ = X2 Using "######"
! - Print @0,15;"ENTER ENDING   CUST, <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
If K3$ = "" Let K3$ = "}}}}}}"
If K3$[1,1] <> "}" Let X2 = K3$ \ K3$ = X2 Using "######"
If K2$ > K3$ Let e$ = "Invalid starting and ending code range!" \ Error 10000
! - If K2$ <= K3$ Goto L_990
! - Print @0,14;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
L_990: K1$ = K2$
J1 = 90 \ J2 = 0
! - L_1000: Print @0,16;'CE';"SELECTIONS:  1: ACTIVE,  2: INACTIVE,  3: ALL ";
! - Input ""J$
! - X1 = J$
! - If X1 < 1 Or X1 > 3 Goto L_1000
! - L_1100: Rem
! - Print @0,17;'CL';"SORT BY CUSTOMER CATEGORY? (Y/N) ";
! - Input ""J2$ \ If J2$ = "Y" Goto L_1200
! - If J2$ <> "N" Goto L_1100
! - C = 2
! - Goto L_1900
! - L_1200: Rem "=========== category prompts
! - Print @0,18;'CE';"ENTER STARTING CATEGORY, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
X2 = J2$ \ Rem ! - If X2 < 0 Goto L_1200
If X2 < 0 Or X2 > 999 Let e$ = "Invalid starting category, must be between 0 and 999!" \ Error 10000
J2$ = X2 Using "###"
! - L_1240: Print @0,19;'CE';"ENTER ENDING CATEGORY,   <CR> FOR LAST,    E: TO EXIT ";
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
If J3$ = "" Let J3$ = "999"
X2 = J3$ \ Rem ! - If X2 <= 0 Goto L_1240
If X2 < 0 Or X2 > 999 Let e$ = "Invalid ending category, must be between 0 and 999!" \ Error 10000
J3$ = X2 Using "###"
If J2$ >= J3$ Let e$ = "Ending category must be > starting category (0-999)!" \ Error 10000
! - Print @0,18;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
! - Signal 3,30 \ Goto L_1200
! - L_1300: Rem
C0 = J2$ \ C0[1] = J3$
! - C = 9
! - Print @0,20;'CE';"ENTER SCALING FACTOR FOR QUANTITIES OR <CR> FOR DEFAULT OF 1:";
! - Input ""J$
!
!
!
SCALE = J$ \ SCALE = Int(SCALE)
If SCALE < 1 Let SCALE = 1
If SCALE > 10000 Let SCALE = 10000
!
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"441a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
If C = 2 Goto L_1900 ! bypass sort - not by catgy
!!!! dx add xport reporting code
! >>> sort routine <<<
j4$ = " ",j4$
! - Print @0,23;'CE';"CLEARING SORT FILE. . . ." \ Signal 3,0
L_1415: Search #9,3,1;j4$,v1,E \ Rem ! - If E > 2 Gosub ERR_SEARCH
If E Goto L_1500
Search #9,5,1;j4$,v1,E
If E Let e$ = "syserrorfile 441a sortfile mode (m)=5 keyno (k)=1 r=",v1," e=",E," keyval (k$)=",j4$ \ Error 10000
Goto L_1415
!
L_1500: Rem SORT IT
! - Print @0,23;'CE';"SORTING, PLEASE WAIT. . ." \ Signal 3,0
Search #2,2,1;K1$,R1,E \ Rem ! - If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E \ Rem ! - If E > 2 Gosub ERR_SEARCH
If E Goto L_1800
L_1530: If K1$[1,Len(K3$)] > K3$ Goto L_1800
Mat Read #2,R1,142;C1;
If C1[9] < C0[0] Goto L_1520
If C1[9] > C0[1] Goto L_1520
j4$ = " ",j4$ \ j4$ = C1[9] Using "###"
j4$[4] = K1$
Search #9,4,1;j4$,R1,E \ Rem ! - If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 441a sortfile mode (m)=5 keyno (k)=1 r=",v1," e=",E," keyval (k$)=",j4$ \ Error 10000
Goto L_1520
L_1800: Rem
K1$ = " ",K1$ \ K3$ = "}",K3$
! end of sort
!
! >>> process section <<<
L_1900: !
! - Print @0,23;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
!
If j8 ! dx xml headings
  tmp$ = "CUST #",fdel$,"CUSTOMER NAME",fdel$,"SP",fdel$
  tmp$ = tmp$,"MTD UNIT SALES",fdel$,"MTD DOLLAR SALES",fdel$
  tmp$ = tmp$,"MTD GROSS PROFIT",fdel$,"MTD G/P %",fdel$
  tmp$ = tmp$,"YTD UNIT SALES",fdel$,"YTD DOLLAR SALES",fdel$
  tmp$ = tmp$,"YTD GROSS PROFIT",fdel$,"YTD G/P %",fdel$
  Call addtostr(e$,rstr$,tmp$ + rdel$)
End If 
!
K4$ = " ",K4$
Search #C,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #C,3,1;K1$,R1,E
If E Goto OUTEND
L_2010: If C = 2 If K1$[1,Len(K3$)] > K3$ Goto OUTEND
If C = 9 If K1$[4,Len(K3$)] > K3$ Goto OUTEND
Mat Read #2,R1,0;C1$;
Mat Read #2,R1,142;C1;
Mat Read #2,R1,200;C3;
Mat Read #2,R1,252;C5;
Mat Read #2,R1,288;C6;
Mat Read #2,R1,624;C10;
!
If C1[9] < C0 Goto L_2000 ! beg category
If C1[9] > C0[1] Goto L_2000 ! end category
!
For I = 0 To 1 \ C5[I] = Int(FNS(C5[I] / SCALE)) \ Next I
If X1 = 3 Goto L_2100
ACTIVE = 0 \ If (C5[0] Or C5[1] Or C5[2] Or C5[3] Or C5[4] Or C5[5]) Let ACTIVE = 99
If X1 = 2 And Not(ACTIVE) Goto L_2100
If X1 = 1 And ACTIVE Goto L_2100
Goto L_2000
L_2100: Rem "ok
If C <> 9 Goto L_2155
If K4$[1,3] <> K1$[1,3] Gosub L_4500
K4$ = K1$
L_2155: X2 = C3[0] \ Gosub L_7700
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem "====================== totals
T9[3] = T9[3] + C5[0] \ T8[3] = T8[3] + C5[0]
T9[4] = T9[4] + C5[2] \ T8[4] = T8[4] + C5[2]
T9[5] = T9[5] + C5[4] \ T8[5] = T8[5] + C5[4]
T9[7] = T9[7] + C5[1] \ T8[7] = T8[7] + C5[1]
T9[8] = T9[8] + C5[3] \ T8[8] = T8[8] + C5[3]
T9[9] = T9[9] + C5[5] \ T8[9] = T8[9] + C5[5]
Return 
L_4000: Rem "============================== grand totals
If j8 Return ! dx xml
!
Gosub L_5800
Print #0;" "
Print #0;"** TOTALS **";
Print #0; Using "----------#.##"; Tab 26;T9[3];
Print #0; Using "----------#.##"; Tab 40;T9[4];
Print #0; Using "----------#.##"; Tab 55;T9[5];
T9[6] = 0 \ If T9[4] Let T9[6] = FNR(T9[5] / T9[4] * 100)
Print #0; Using "---#.##"; Tab 70;T9[6];
Print #0; Using "---------#.##"; Tab 77;T9[7];
Print #0; Using "---------#.##"; Tab 91;T9[8];
Print #0; Using "---------#.##"; Tab 104;T9[9];
T9[10] = 0 \ If T9[8] Let T9[10] = FNR(T9[9] / T9[8] * 100)
Print #0; Using "---#.##"; Tab 117;T9[10]
Return 
L_4500: Rem "================================ category break
If j8 Return ! dx xml
! 
If K4$[1,3] = "   " Goto L_4700
Gosub L_5800
Print #0;" "
Print #0;"** ";K4$[1,3];" TOTALS **";
Print #0; Using "----------#.##"; Tab 26;T8[3];
Print #0; Using "----------#.##"; Tab 40;T8[4];
Print #0; Using "----------#.##"; Tab 55;T8[5];
T8[6] = 0 \ If T8[4] Let T8[6] = FNR(T8[5] / T8[4] * 100)
Print #0; Using "---#.##"; Tab 70;T8[6];
Print #0; Using "---------#.##"; Tab 77;T8[7];
Print #0; Using "---------#.##"; Tab 91;T8[8];
Print #0; Using "---------#.##"; Tab 104;T8[9];
T8[10] = 0 \ If T8[8] Let T8[10] = FNR(T8[9] / T8[8] * 100)
Print #0; Using "---#.##"; Tab 117;T8[10]
Print #0;" "
J1 = J1 + 2
L_4700: Rem END
For I = 0 To 20 \ T8[I] = 0 \ Next I
Return 
L_5000: Rem "================================ print line
!
If j8 ! dx xml
  tmp$ = C1[1] Using "######",fdel$
  tmp$ = tmp$,rtrim$(C1$[31,46]),fdel$
  tmp$ = tmp$,Str$(C1[2]),fdel$
  tmp$ = tmp$,C5[0] Using "----------#.##",fdel$
  tmp$ = tmp$,C5[2] Using "----------#.##",fdel$
  tmp$ = tmp$,C5[4] Using "----------#.##",fdel$
  T9 = 0 \ If C5[2] Let T9 = FNR(C5[4] / C5[2] * 100)
  tmp$ = tmp$,T9 Using "---#.##",fdel$
  tmp$ = tmp$,C5[1] Using "---------#.## ",fdel$
  tmp$ = tmp$,C5[3] Using "---------#.##",fdel$
  tmp$ = tmp$,C5[5] Using "---------#.##",fdel$
  T9[1] = 0 \ If C5[3] Let T9[1] = FNR(C5[5] / C5[3] * 100)
  tmp$ = tmp$,T9[1] Using "---#.##",fdel$
  !  
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  Return 
End If 
!
Print #0; Using "######"; Tab 1;C1[1];
Print #0; Tab 8;C1$[31,46];
Print #0; Using "----------#.##"; Tab 26;C5[0];
Print #0; Using "----------#.##"; Tab 40;C5[2];
Print #0; Using "----------#.##"; Tab 55;C5[4];
T9 = 0 \ If C5[2] Let T9 = FNR(C5[4] / C5[2] * 100)
Print #0; Using "---#.##"; Tab 70;T9;
Print #0; Using "---------#.## "; Tab 77;C5[1];
Print #0; Using "---------#.##"; Tab 91;C5[3];
Print #0; Using "---------#.##"; Tab 104;C5[5];
T9[1] = 0 \ If C5[3] Let T9[1] = FNR(C5[5] / C5[3] * 100)
Print #0; Using "---#.##"; Tab 117;T9[1];
Print #0; Using "###"; Tab 126;C1[2]
J1 = J1 + 1
Return 
L_5800: Rem "================================ headings
If j8 Return ! dx xml
If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(j8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 6
If Not(j8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
T9$ = "" \ Call Time(T9$)
Print #0;" - 441A - ";T9$;
Print #0; Tab 45;"C U S T O M E R   S A L E S   R E P O R T";
If SCALE > 1 Print #0;" ( scaling factor of";SCALE;")" Else Print #0;" "
Print #0;" "
Print #0; Tab 28;"----------------------MTD----------------------";
Print #0; Tab 78;"----------------------YTD----------------------"
Print #0; Tab 1;"CUST #";
Print #0; Tab 8;"CUSTOMER NAME";
Print #0; Tab 29;"UNIT SALES";
Print #0; Tab 42;"DOLLAR SALES";
Print #0; Tab 57;"GROSS PROFIT";
Print #0; Tab 72;"G/P %";
Print #0; Tab 78;"UNIT SALES";
Print #0; Tab 90;"DOLLAR SALES";
Print #0; Tab 104;"GROSS PROFIT";
Print #0; Tab 119;"G/P %"; Tab 126;"SP"
Print #0;" "
Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
OUTEND: Rem EXIT PROGRAM
If C = 9 gosub L_4500 ! category sub-totals
Gosub L_4000 ! report totals
! dx close
If j8 !dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
! - Close #2
! - Chain "MX441"
! - Stop 
!
! - L_9100: Rem END OF THIS RANGE
! - If C = 9 Gosub L_4500
! - Gosub L_4000
! - ! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
! - If Not(J8) Print #0;"\14\"
! - Goto OUTEND
! - End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
!Include src/callmainerrnet.inc
include "src/callmainerrnet.inc"
! main error routine
!If Spc(8) <> 10000
!  Call programdump()
!  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
!End If 
!Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[],rstr$)
End 
