! lstprtax
! converted 
!
! loadsave -w -n 100,10 -o prog/dxport/lstprtax src/lstprtax.src
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 20, 2008  16:05:12
Rem /w2/papermaster/r2005//usr/acct/dave/work/r2005/misc/lstprtax.src (univ2) [dave] {10809}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
include "src/copyright.inc"
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
Declare External Function chkDteFrmt$
Declare Intrinsic Sub FindF,InpBuf,String,programdump
!Option Default Dialect IRIS1
Rem lstprtax:  for tax by line get the last price tax code
Enter CUSTCODE,SRN[],LDEPT,PRODUCT$,TAXCODE,intco
If Err 0 Gosub ERR_TRAP
Rem dim last price file
Dim LP$[12],LP2$[84],LPMT$[2]
Dim 1%,LPC3[4],AI,LPEUN[2],LPWH,LPCPT,PPPUSERID
Dim 2%,LPDF,LPC1[2],LPR1[3],LPC5[3],LPPCDATE,LPCSDT,LPDEPT,PPPCID[1]
Dim 3%,LPC2[2],LPC4[3],LPR[4],LPUNF[6],PERM[1],LPLPERM,LPCURR[1]
Dim 3%,LPFPERM[1],LPUNIT[1]
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim 1%,CH_LASTPR
Dim 1%,CHAN
Dim 1%,CTAXCODE,2%,CTAXTYPE,KEYCUST$[30],3%,REC_CUST
Dim 2%,COID,SHIPLIST
Dim 3%,REC_LASTPR
Dim FILENAME$[16],KEYLASTPR$[50],P60$[50],P61$[256],P9$[50]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[600],msg$[100],rstr$[2000],webstr$[2000]

CH_LASTPR = 0
SHIPLIST = SRN[1]
DEPT = LDEPT
Mat Read #1,60,50;P60$;
If P60$[42,42] <> "Y" And P60$[42,42] <> "T" ! tax by line not on --how did it get here then
  TAXCODE = -1
End If 
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Mat Read #1,61,0;P61$;
Mat Read #1,19,50;P9$;
Rem read customer file
CHNL = 99
Gosub GETCHAN
CH_CUST = CHNL
Read #1,88,1808;FILENAME$;
Ropen #CH_CUST,FILENAME$
CTAXTYPE = 0
CTAXCODE = 0
KEYCUST$ = " ",KEYCUST$;KEYCUST$[1,6] = CUSTCODE Using "######"
Search #CH_CUST,2,1;KEYCUST$,REC_CUST,E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Rem read customer tax code
  Read #CH_CUST,REC_CUST,196;CTAXCODE;
  Rem read customer tax type
  Read #CH_CUST,REC_CUST,498;CTAXTYPE;
End If 
Close #CH_CUST
If P9$[44,44] <> "Y" Let DEPT = 0
Rem ship to last price
If P61$[64,64] = "Y" ! last price ship to search
  Rem if file exist
  FILENAME$ = "3/SLLSTPRC" + Str$(COID)
  Call FindF(FILENAME$,E)
  If Not(E) ! file does not exist
    Goto GETLASTPRICE
  End If 
  CHNL = 99
  Gosub GETCHAN
  CH_LASTPR = CHNL
  Ropen #CH_LASTPR,FILENAME$
  KEYLASTPR$ = " ",KEYLASTPR$
  KEYLASTPR$[1,6] = CUSTCODE Using "######"
  KEYLASTPR$[7,12] = SHIPLIST Using "&&&&&&"
  KEYLASTPR$[13,16] = DEPT Using "####"
  KEYLASTPR$[17] = PRODUCT$
  Search #CH_LASTPR,2,1;KEYLASTPR$,REC_LASTPR,E
  If E > 1 Gosub ERR_SEARCH
  If E = 1
    If SHIPLIST ! has a ship list code
      If SRN[4] <> CTAXTYPE ! tax type are different
        TAXCODE = -1
        Goto OUTEND
      End If 
      If P60$[42,42] = "Y"
        If TAXCODE <> CTAXCODE ! tax codes are different
          TAXCODE = -1
          Goto OUTEND
        End If 
      End If 
    End If 
    Goto GETLASTPRICE
  End If 
  Gosub READLASTPR
  TAXCODE = LPC5[3]
  Goto OUTEND
End If 
GETLASTPRICE: Rem look in last price record
If CH_LASTPR
  If Err 0 Rem
  Close #CH_LASTPR
  If Err 0 Gosub ERR_TRAP
End If 
CHNL = 99
Gosub GETCHAN
CH_LASTPR = CHNL
Read #1,88,1376;FILENAME$; \ Ropen #CH_LASTPR,FILENAME$
KEYLASTPR$ = " ",KEYLASTPR$
KEYLASTPR$[1,6] = CUSTCODE Using "######"
KEYLASTPR$[7,10] = DEPT Using "####"
KEYLASTPR$[11] = PRODUCT$
Search #CH_LASTPR,2,1;KEYLASTPR$,REC_LASTPR,E
If E > 1 Gosub ERR_SEARCH
If E = 1 Goto OUTEND
Gosub READLASTPR
If SHIPLIST
  If SRN[4] <> CTAXTYPE
    TAXCODE = -1
    Goto OUTEND
  End If 
  If P60$[42,42] = "Y"
    If TAXCODE <> CTAXCODE
      TAXCODE = -1
      Goto OUTEND
    End If 
  End If 
End If 
TAXCODE = LPC5[3]
Goto OUTEND
READLASTPR: Rem Read last price file
Mat Read #CH_LASTPR,REC_LASTPR,0;LP$;
Read #CH_LASTPR,REC_LASTPR,12;LPDF;
Mat Read #CH_LASTPR,REC_LASTPR,16;LPC1;
Mat Read #CH_LASTPR,REC_LASTPR,28;LPC2;
Mat Read #CH_LASTPR,REC_LASTPR,46;LPC3;
Mat Read #CH_LASTPR,REC_LASTPR,56;LP2$;
Mat Read #CH_LASTPR,REC_LASTPR,140;LPC4;
Mat Read #CH_LASTPR,REC_LASTPR,164;LPMT$;
Read #CH_LASTPR,REC_LASTPR,166;AI;
Mat Read #CH_LASTPR,REC_LASTPR,168;LPR;
Mat Read #CH_LASTPR,REC_LASTPR,198;LPR1;
Mat Read #CH_LASTPR,REC_LASTPR,214;LPEUN;
Mat Read #CH_LASTPR,REC_LASTPR,220;LPUNF;
Mat Read #CH_LASTPR,REC_LASTPR,262;PERM;
Read #CH_LASTPR,REC_LASTPR,274;LPWH;
Mat Read #CH_LASTPR,REC_LASTPR,276;LPC5;
Read #CH_LASTPR,REC_LASTPR,292;LPPCDATE;
Read #CH_LASTPR,REC_LASTPR,296;LPLPERM;
Mat Read #CH_LASTPR,REC_LASTPR,302;LPCURR;
Read #CH_LASTPR,REC_LASTPR,314;LPCPT;
Read #CH_LASTPR,REC_LASTPR,316;LPCSDT;
Read #CH_LASTPR,REC_LASTPR,320;LPDEPT;
Mat Read #CH_LASTPR,REC_LASTPR,324;LPFPERM;
Mat Read #CH_LASTPR,REC_LASTPR,336;PPPUSERID;
Mat Read #CH_LASTPR,REC_LASTPR,340;LPUNIT;
Mat Read #CH_LASTPR,REC_LASTPR,352;PPPCID;
Return 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
CHNLSCR = Chf(CHNL)
If Err 0 Gosub ERR_TRAP
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
Rem {end rtn.getchan.i}

OUTEND: Rem all done
! If Err 0 Rem
If CH_LASTPR Try Close #CH_LASTPR Else Rem
End 
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/lstprtaxse!","") 
End
!Goto ERR_MSG ! Error 10000                                 
!Return ! End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End