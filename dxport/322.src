! >>> Program 322
!
! description Miscellaneous Receipts To Stock Journal and Accept - Part 1 
! loadsave -w -n 100,10 -o prog/dxport/322.dl4 src/322.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  1, 2006  11:23:00
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx322.src (univ2) [txc] {47456}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem MX322   R-T-S VERIFICATION
Rem AUTHOR: BOBBY FISCHER   MAY 18, 1987
Rem LAST UPDATE: 5/92 - ADD SERIAL NUMBER PRINT
Try
Com 1%,SC,SR,Z9[9],PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10],J4$[50]
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim 1%,MRTS2[3]
Dim 2%,MRTS3[3]
Dim 3%,MRTS0[5],MRTS4[1]
Dim 3%,DISP_EXT,DISP_QTY,DISP_COST,DISP_QTY1
Dim MRTS0$[34],MRTS1$[22],KEYMRTS1$[30],MRTS2$[18],MRTS3$[12]
Dim RCDESC$[17],PRODKEY$[30]
Dim P1$[156],L1$[34]
Dim 1%,S,ACCEPTED,URECFLAG,COSTTYPE
Dim 2%,Q[5],Q0[1],Q3,Q5,B[24],PWHREC,D9[5],WHSE,COID
Dim 2%,L,V7,V8,V9
Dim 3%,W3[24],AVGCOST,R[30]
Dim 3%,TOTCOST,TOTCOST1
Dim J8$[8],U1$[21],C1$[30],D8$[8]
Dim 1%,F,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],T9$[26]
Dim SNK$[50],SN1$[54],PMASK$[12]
Dim P8$[7],P9$[50],3%,SUNIT,CUNIT,SUNIT$[4],CUNIT$[4],3%
Dim PRODWHSE$[15],SCRATCH$[50],RETVAL$[512],POPT$[1],Z2$[2]
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim P61$[256]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo 
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflg=0
returnstatus=1
abortjournal=0
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 8
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1","-1792","-1728","-1","-1","-2976","-1744"
! Ropen #79,"cntrl/USERCNTRL"
!X2 = Spc(5)
!COID = Int((X2 - Int(X2 / 16384) * 16384) / 64)
J$ = "2/RSNRTS" + Str$(COID) \ Ropen #10,J$
J$ = "6/MISCRTS" + Str$(COID) \ Ropen #2,J$
Mat Read #1,0,100;D8$;
Mat Read #1,61,0;P61$;
Mat Read #1,19,50;P9$;
Mat Read #1,52,60;P8$;
Mat Read #1,115,0;D9;
Read #1,3;C1$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "###########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
!If Err 0 Let V8 = Spc(8)
!V8 = 0 \ V7 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If V8 If V8 <> 49 Goto ERR_TRAP
V8=0
V7 = 62
!If V8
!  V7 = 23 \ SCRPRT = 99
!End If 
L_900: Rem TEST & GET NUMBERS
Read #1,20;S;
If S <> 2
	If S > 2
		let eflg=eflg+1
		message$=message$+" Accept Must Be Run "
	endif
	If S = 1
		e=3 ! check if flag set
		call "proglock.dl4","321",e,message$
		if not(e)  !! did not find entry
			Read #1,20;S
			s=2
			write #1,20;S;
		else
			! found a 321 entry
			let eflg=eflg+1
			Message$=message$+" Entry is in process elsewhere "
		endif
	ENDIF
	If S = 0 
		let eflg=eflg+1
		message$=message$+"NO ENTRIES TO ACCEPT  "
	endif
  !If S > 2 Print @0,23;'CL RB';"** ACCEPT MUST BE RUN **";
  !If S = 1 Print @0,23;'CL RB';"** ENTRIES IN PROGRESS IN PROGRAM 321**";
  !If S = 0 Print @0,23;'CL RB';"** NO ENTRIES IN FILE**";
  !Signal 3,20
  if s<>2 Goto L_9100    !need to check again, may be reset above
End If 
L = 90 \ V9 = 0
!Gosub PRINT_SCREEN
!Goto INPUTS
Call dxget("WHSE",J$) ! whse                          
let whse=rtrim$(j$)
if rtrim$(j$)<>""
	if whse<0 or whse>99
		let eflg=eflg+1
		Message$ = Message$+ " Invalid Warehouse Number Entered"
	endif
else
	let eflg=eflg+1
	Message$ = Message$+ " No Warehouse Number Entered"
endif
Call dxget("POPT",J$) ! whse                          
let POPT$=ucase$(j$)
if popt$="A" goto startprint:
if popt$="O" goto startprint:
if popt$="D" goto startprint:
if popt$="B" goto startprint:
let eflg=eflg+1
Message$ = Message$+ " Invalid Print Option Selected"

STARTPRINT: Rem startprint here
if eflg goto outend: 
!If Not(SCRPRT)
  !Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!End If 
TOTCOST = 0
!If V8 Print 'CS';
!If Err 0 Gosub ERR_ESCAPE
KEYMRTS1$ = " ",KEYMRTS1$
SRCHMRTS: Rem start search of misc receipts file
Search #2,3,1;KEYMRTS1$,REC_MRTS,E \ If E = 2 Goto L_9100
If E Gosub ERR_SEARCH
Mat Read #2,REC_MRTS,0;MRTS0;
Mat Read #2,REC_MRTS,36;MRTS0$;
Mat Read #2,REC_MRTS,70;MRTS1$;
Mat Read #2,REC_MRTS,104;MRTS2;
Mat Read #2,REC_MRTS,112;MRTS3;
Mat Read #2,REC_MRTS,132;MRTS2$;
Mat Read #2,REC_MRTS,150;MRTS3$;
Mat Read #2,REC_MRTS,174;MRTS4;
If WHSE<>0
  If WHSE <> MRTS2[2] Goto SRCHMRTS
End If 
If MRTS2[3] Goto SRCHMRTS
If POPT$[1,1] = "O" ! no deletes or accepts
  If MRTS0[0] = 0 Or MRTS2[1] <> 0 Goto SRCHMRTS
End If 
If POPT$[1,1] = "A" ! include accepts
  If MRTS0[0] = 0 Goto SRCHMRTS
End If 
If POPT$[1,1] = "D"
  If MRTS2[1] <> 0 Goto SRCHMRTS
End If 
R[10] = MRTS2[0]
If Not(R[10]) Or R[10] > (Chf(10) - 1)
  RCDESC$ = "Invalid Reason Code"
Else 
  Mat Read #10,R[10],0;RCDESC$;
  If Len(RCDESC$) = 0 Or RCDESC$[1,3] = "   "
    RCDESC$ = "Invalid Reason Code"
  End If 
End If 
Mat Read #3,MRTS0[1];P1$;
Mat Read #3,MRTS0[1],512;PFU1;
Mat Read #3,MRTS0[1],554;PFU2;
Mat Read #3,MRTS0[1],256;A;
Mat Read #3,MRTS0[1],156;B;
LBSFACTOR = A[5]
LBSUNIT = A[6]
If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
  LBSUNIT = Abs((MRTS4[1] / MRTS0[0]) * LBSFACTOR)
End If 
SCRATCH$ = MRTS2[2] Using "##"
PRODWHSE$ = P1$[140,151] + SCRATCH$
For X2 = 14 To 24 \ W3[X2] = 0 \ Next X2
Search #8,2,1;PRODWHSE$,PWHREC,E
If Not(E) Mat Read #8,PWHREC,78;W3;
COSTTYPE = 0
If MRTS0[3] = 0 ! cost absent (no change)
  If P9$[32,32] = "Y" And Not(E) And W3[15] ! warehouse pricing
    Q3 = W3[15];COSTTYPE = 1
  Else 
    Q3 = B[21];COSTTYPE = 1
  End If 
  Q5 = MRTS3[0]
Else 
  Q3 = MRTS0[3]
  Q5 = MRTS3[1]
End If 
If P9$[17,17] = "Y" And MRTS2[1] <> 0
  Q3 = Abs(MRTS0[4] / MRTS0[0]);COSTTYPE = 2
  If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
    Q3 = Abs(Q3 * (A[6] / LBSUNIT))
  End If 
End If 
If P9$[32,32] = "Y" And Not(E) And W3[15]
  AVGCOST = W3[15]
Else 
  AVGCOST = B[21]
End If 
DISP_EXT = FNR(MRTS0[0] * Q3)
If Q3
  If PFU1[11] > 0 And PFU1[11] <> PFU1[0] !
    DISP_QTY = MRTS0[0];DISP_COST = Q3
    Gosub CALC_DISP_EXT
  End If 
  If MRTS3[1] = -3 And MRTS0[0] > 0 And MRTS0[3] > 0 And MRTS4[1] > 0
    DISP_QTY = MRTS0[0];DISP_COST = Q3
    Gosub CALC_DISP_EXT
    Rem let cnvtu[0]=0;cnvtu[1]=mrts3[1];cnvtu[2]=2;cnvta=q3
    Rem gosub l_20000:
    Rem! cost in lbs and qty rec>0 and cost>0 and weight>0
    Rem let disp_ext=fnr(amount*mrts4[1]) ! lb cost * ext weight
  End If 
End If 
If MRTS3[0] = -3 Let DISP_EXT = 0;Q3 = 0;COSTTYPE = 0
TOTCOST = TOTCOST + DISP_EXT
If MRTS2[0] = 99
  TOTCOST1 = - DISP_EXT
  TOTCOST = TOTCOST + TOTCOST1
End If 
Gosub L_5800
Gosub L_5000
If MRTS0[0] = 0
  Print #0;" " \ L = L + 1
  Goto SRCHMRTS
End If 
Gosub L_4400
Print #0;"" \ L = L + 1
If MRTS2[0] = 99 ! reason code 99 broken/cases
  PRODKEY$ = " ",PRODKEY$
  PRODKEY$[1,12] = MRTS3$[1,12]
  Search #3,2,1;PRODKEY$,R[3],E \ If E > 1 Goto ERR_SEARCH
  If Not(E)
    Mat Read #3,R[3];P1$;
    Mat Read #3,R[3],512;PFU1;
    Mat Read #3,R[3],554;PFU2;
    Mat Read #3,R[3],256;A;
    Mat Read #3,R[3],156;B;
    SCRATCH$ = MRTS2[2] Using "##"
    PRODWHSE$ = P1$[140,151] + SCRATCH$
    For X2 = 14 To 24 \ W3[X2] = 0 \ Next X2
    Search #8,2,1;PRODWHSE$,PWHREC,E
    If Not(E) Mat Read #8,PWHREC,78;W3;
    Q3 = (Abs(TOTCOST1) / MRTS4)
    Q5 = MRTS3[3]
    Gosub L_5800
    Gosub PRNT2LINE
    Print #0;"" \ L = L + 1
  End If 
End If 
L_2290: Goto SRCHMRTS
L_4400: Rem PRINT SERIAL NO'S
If MRTS0[0] = 0 Return 
SNO = 0 \ If P1$[8,8] <> "Y" Return 
SNK$ = " ",SNK$;SNK$[1,9] = MRTS0[5] Using "R########"
L_4420: Search #7,3,1;SNK$,R7,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[2,9]
If X2 <> MRTS0[5] Goto L_4480
Mat Read #7,R7,0;SN1$;
If Not(SNO) Print #0;"  SERIAL NUMBERS ENTERED" \ Gosub L_5800
SNO = SNO + 1
Print #0;SN1$[25,54];
Print #0;"  ";
If Not(Fra(SNO / 4)) Print #0;"" \ Gosub L_5800
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ L = L + 2
Return 
L_5000: Rem PRINT LINE
let totmrts=totmrts+1
Gosub L_6000
Print #0; Using "########";MRTS0[5];
Print #0; Tab 10;P1$[140,151];
Print #0; Tab 23;P1$[9,38];
Print #0; Using "##"; Tab 54;MRTS2[2];
If MRTS0[0] = 0
  Print #0; Tab 57;"DELETED"; \ Goto L_5780
End If 
If MRTS2[1]
  Print #0; Tab 57;"ACCEPT";
Else 
  Print #0; Tab 57;"Open";
End If 
If MRTS0[0] ! quantity
  If MRTS3[0] = -3
    SUNIT = MRTS4[1]
    SUNIT$ = "LB   "
    If MRTS0[3] <> 0
      Q3 = CUNIT
    End If 
  End If 
  Print #0; Using "-------#.##"; Tab 64;SUNIT;SUNIT$;
End If 
If MRTS0[3] = 0 !"cost absent - not change
  Print #0; Tab 79;"  NO CHANGE";
Else 
  If Q3 Or (P9$[17,17] = "Y" And MRTS2[1] <> 0) Print #0; Using PMASK$; Tab 79;CUNIT;CUNIT$;
End If 
If MRTS3[0] = -3
  If P61$[73,73] <> "Y" Goto BYPSSLNE
  If MRTS2[1] <> 0 And P9$[17,17] = "Y"
    COSTTYPE = 99
    DISP_EXT = MRTS0[4]
    Print #0; Using "-------#.##"; Tab 95;DISP_EXT;
    TOTCOST = TOTCOST + DISP_EXT
  Else 
    If CUNIT <> 0 And MRTS4[1] <> 0
      DISP_EXT = FNR(CUNIT * MRTS4[1])
      Print #0; Using "-------#.##"; Tab 95;DISP_EXT;
      TOTCOST = TOTCOST + DISP_EXT
    Else 
      Print #0; Tab 95;"NO CHANGE";
    End If 
  End If 
Else 
  If Q3 Or (P9$[17,17] = "Y" And MRTS2[1] <> 0)
    Print #0; Using "-------#.##"; Tab 95;DISP_EXT;
  Else 
    Print #0; Tab 95;"NO CHANGE";
  End If 
End If 
If COSTTYPE
  If COSTTYPE = 1
    Print #0;" AVG";
  Else 
    Print #0;" G/L";
  End If 
End If 
If P9$[1,1] <> "N"
  Print #0; Tab 111;MRTS0$[1,12];
End If 
Print #0; Tab 125;MRTS0$[13,18];
BYPSSLNE: Rem "no cost/lot/loc
Print #0;"" \ L = L + 1
Print #0; Tab 5;MRTS0$[19,34];
If P9$[26,26] = "Y" Print #0; Tab 30;P1$[63,92];
If P1$[127,127] = "Y" And MRTS3[0] <> -3 ! "lbs on line 2
  Print #0; Using "-------#.##"; Tab 64;MRTS4[1];" LB";
End If 
Print #0; Using "## "; Tab 111;MRTS2[0];RCDESC$[1,17];
L_5780: Print #0;"" \ L = L + 1
If MRTS3[0] = -3 Return 
If MRTS2[1] = 0 And MRTS0[0] <> 0 ! not accepted & not deleted
  L = L + 1
  Gosub PRINT_CURRENT
End If 
Return 
PRNT2LINE: Rem PRINT LINE
Print #0; Tab 10;P1$[140,151];
Print #0; Tab 23;P1$[9,38];
If MRTS4 ! quantity convert to
  CNVTU[0] = 0;CNVTU[1] = MRTS3[3];CNVTU[2] = 1;CNVTA = MRTS4
  Gosub L_20000
  SUNIT = AMOUNT
  If MRTS3[3] > 0
    Read #4,MRTS3[3],10;SUNIT$;
  Else 
    SUNIT$ = " ",SUNIT$
    If MRTS3[3] = -1 Let SUNIT$ = "CWT "
    If MRTS3[3] = -2 Let SUNIT$ = "LOT "
    If MRTS3[3] = -3 Let SUNIT$ = "LB  "
  End If 
  Print #0; Using "-------#.##"; Tab 64;SUNIT;SUNIT$;
End If 
If Q3
  CNVTU[0] = 0;CNVTU[1] = Q5;CNVTU[2] = 2;CNVTA = Q3
  Gosub L_20000
  CUNIT = AMOUNT
  If Q5 > 0
    Read #4,Q5,10;CUNIT$;
  Else 
    CUNIT$ = " ",CUNIT$
    If Q5 = -1 Let CUNIT$ = "CWT "
    If Q5 = -2 Let CUNIT$ = "LOT "
    If Q5 = -3 Let CUNIT$ = "LB  "
  End If 
  Print #0; Using PMASK$; Tab 79;CUNIT;CUNIT$;
End If 
Print #0; Using "-------#.##"; Tab 95;TOTCOST1;
If P9$[1,1] <> "N"
  Print #0; Tab 111;MRTS2$[1,12];
End If 
Print #0; Tab 125;MRTS2$[13,18];
Print #0;"" \ L = L + 1
If P9$[26,26] = "Y"
  Print #0; Tab 30;P1$[63,92];
  Print #0;"" \ L = L + 1
End If 
Return 
L_5800: Rem HEADINGS ROUTINE
If L + 2 < V7 Return 
!If V9 If V8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9 If Not(V8) Print #0;"\14\";
V9 = V9 + 1 \ L = 7
If Not(V8) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;D8$; Tab (64 - Len(C1$) / 2);C1$; Tab 120;"PAGE";V9
Print #0;"-MX322-";
If P9$[17,17] = "Y"
  Print #0;"(";P8$[5,5];") ";
End If 
Print #0;T9$;
Print #0; Tab 51;"RECEIPTS TO STOCK VERIFICATION LIST"
Print #0;""
Print #0; Tab 3;"ENTRY";
Print #0; Tab 10;"ITEM CODE";
Print #0; Tab 23;"ITEM DESCRIPTION";
Print #0; Tab 54;"WH";
Print #0; Tab 57;"STATUS";
Print #0; Tab 67;"QUANTITY";
Print #0; Tab 81;"UNIT COST"; Tab 98;"EXT COST";
If P9$[1,1] <> "N"
  Print #0; Tab 111;"LOT NUMBER";
End If 
Print #0; Tab 125;"LOCAT";
Print #0;""
Print #0; Tab 5;"COMMENT";
Print #0; Tab 111;"REASON "
Print #0;""
Return 
L_6000: Rem
If MRTS3[0] = -3 And P61$[73,73] = "Y"
  If MRTS4[1] <> 0
    If MRTS0[4]
      CUNIT = Abs(MRTS0[4] / MRTS4[1])
      CUNIT$ = "LB  "
      Return 
    Else 
      If MRTS0[3]
        CNVTA = MRTS0[3]
        CNVTU[0] = 0;CNVTU[1] = -3;CNVTU[2] = 2
        Gosub L_20000
        CUNIT = AMOUNT
        CUNIT$ = "LB  "
        Return 
      End If 
    End If 
  End If 
End If 
CNVTU[0] = 0
CNVTU[1] = MRTS3[0]
CNVTU[2] = 1
CNVTA = MRTS0[0]
Gosub L_20000
SUNIT = AMOUNT
CNVTU[0] = 0
CNVTU[1] = Q5
CNVTU[2] = 2
CNVTA = Q3
Gosub L_20000
CUNIT = AMOUNT
If MRTS3[0] > 0 Mat Read #4,MRTS3[0],10;SUNIT$;
If MRTS3[0] = -1 Let SUNIT$ = "CWT "
If MRTS3[0] = -3 Let SUNIT$ = "LB  "
If Q5 > 0 Mat Read #4,Q5,10;CUNIT$;
If Q5 = -1 Let CUNIT$ = "CWT "
If Q5 = -3 Let CUNIT$ = "LB  "
Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
PRINT_SCREEN: Rem
!Call "progdflt","322","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$ = " ",RETVAL$
!  RETVAL$[1,2] = " 0"
!  RETVAL$[3,3] = "B"
!  Call "progdfltw","322","",77,RETVAL$,URECFLAG
!End If 
!Print 'CS'
!Print @20,0;"Misc Receipts To Stock Verification";@0,0;"-mx322-";
!Print @2,4;"1> Warehouse    :";
!Print @2,6;"2> Print Include: ";@25,6;"A: accepted  D: deleted  B: both  O: open only ";
!WHSE = RETVAL$[1,2]
!POPT$[1,1] = RETVAL$[3,3]
!Print Using "##";@20,4;WHSE;
!Print @20,6;POPT$[1,1];
Return 
INPUTS: Rem
!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save default  E: exit ";
!Input Len 16384 + 3;""X$ \ Call String(1,X$)
!Print @0,23;'CE';
!If X$ = "P" Goto STARTPRINT
!If X$ = "E" Goto OUTEND
!If X$ = "R" Goto EDT_ALL
!If X$ = "" Goto INPUTS
!If X$ = "S"
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all   U: user access only  <CR>: do not save ";
 ! Input Len 16384 + 1;""Z2$
!  Call String(1,Z2$)
!  If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
 ! If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
 ! Call "progdfltw","322","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL'
!End If 
!X = X$
!If X < 1 Or X > 2 Goto INPUTS
!Gosub EDT_FLDS
!Goto INPUTS
!EDT_ALL: Rem "want's all
!For X = 1 To 2
!  Gosub EDT_FLDS
!Next X
!Goto INPUTS
!EDT_FLDS: Rem "edit them here
!FLG = 1
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On X Gosub L_8000,ASK_POPT
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!L_8000: Rem CHECK WAREHOUSE
!L_8010: Rem LET WHSE=0 \ IF D9[5]=1 GOTO L_8090: ! "only 1 whse, don't ask
!J0$ = "3000022004"
!J1 = WHSE
!J5$ = "Enter Warehouse or  0: for all"
!Gosub ISINPUT
!WHSE = J1
!If WHSE < 0 Or WHSE > D9[5] Goto L_8010
!RETVAL$[1,2] = WHSE Using "##"
!Return 
!ASK_POPT: Rem"
!J0$ = "2000 120 6"
!J5$ = "Print include  A: accepted  D: deleted  B: both  O: open only "
!J1$ = POPT$
!Gosub ISINPUT
!Call String(1,J$)
!If J$ <> "A" If J$ <> "D" If J$ <> "B" If J$ <> "O" Goto ASK_POPT
!POPT$ = J$
!RETVAL$[3,3] = POPT$
!Return 

PRINT_CURRENT: Rem----------------------------------------
CNVTU[0] = 0;CNVTU[1] = MRTS3[0];CNVTU[2] = 1;CNVTA = A[0]
Gosub L_20000
Print #0; Using "PRIOR ON HAND:------#.##"; Tab (23);AMOUNT;SUNIT$;
CNVTU[1] = Q5;CNVTU[2] = 2;CNVTA = AVGCOST
Gosub L_20000
Print #0; Using "  AVG COST:------#.##";AMOUNT;CUNIT$;""
L = L + 1
Return 

L_9100: Rem END OF THIS RANGE
If TOTCOST
  Gosub L_5800
  Print #0;""
  Print #0; Using "TOTAL COST  ----,---,---,--#.## "; Tab 84;TOTCOST
End If 
!If V8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
If K2$ = "" Goto OUTEND
!Goto L_900
goto outend
End 
CALC_DISP_EXT: Rem convert qty and cost to cost um, then calc ext cost
COSTUM = PFU1[11]
If MRTS0[3] > 0 Let COSTUM = MRTS3[1]
If Not(COSTUM) Let COSTUM = PFU1[11]
DISP_QTY1 = DISP_QTY
!! CNVTA= DISP_QTY;CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 1 \ Gosub L_20000
CNVTA= DISP_QTY;CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 5 \ Gosub L_20000
DISP_QTY = AMOUNT
CNVTA = DISP_COST;CNVTU[0] = 0;CNVTU[1] = COSTUM;CNVTU[2] = 2 \ Gosub L_20000
DISP_COST = AMOUNT
DISP_EXT = FNR(DISP_QTY * DISP_COST)
If MRTS3[1] = -1 Let DISP_EXT = FNR(DISP_COST * (LBSUNIT * DISP_QTY1) / LBSFACTOR / 100)
If MRTS3[1] = -3 Let DISP_EXT = FNR(DISP_COST * (LBSUNIT * DISP_QTY1) / LBSFACTOR)
Return 

L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120: !  If Spc(4) > 1280 Goto L_20120
!!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
Rem {end rtn.input.s}

Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT PROGRAM
!Print 'CS' \ Close 
!Chain "MX000"
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflg)
	if not(totmrts)
		returnstatus=1
		let message$=message$+"There are no miscellaneous receipts available to list"
		if whse<>0
			let message$=message$+" for warehouse "+str$(whse)
		endif
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totmrts)+" Miscellaneous Receipts To Stock Listed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
