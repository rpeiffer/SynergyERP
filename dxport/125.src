! >>> Program 125
!
! description Bracket Markup Table List
!
! loadsave -w -n 100,10 -o prog/dxport/125.dl4 src/125.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Declare Intrinsic Sub CheckDigits,InpBuf,String,Time
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 10, 2001  17:31:45
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx1/mx125.src (univ2) [kag] {51816}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
! - Option Default Dialect IRIS1
Rem MX125  PRODUCT 10 BRACKET MARKUP PRINT
Rem AUTHOR: MTK   JUL 26, 1984
Rem  LAST UPDATE:  G.DOSCHER  2/26/85
If Err 0 Gosub ERR_TRAP

Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim 1%,F,X1,2%,X2,3%,J,X3
Dim U9$[30],X$[10],D$[16]
Dim U5$[50],D8$[8],K1$[50],K2$[20],K3$[20]
Dim M5$[2]
Dim 1%,M5[3]
Dim 2%,M6[3]
Dim 3%,M7
Dim 3%,M8,M9[1]
Dim 2%,B3,B4
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
For I = 2 To 2
  Read L
  If Not(L) Goto L_825
  Read #1,88,L;J$;
  Open #I,J$
L_825: Next I
Read #1,3;U9$;
Data "1712"
Mat Read #1,0,100;D8$;
L_845: L = 60
P = 0
M5$ = "%$"

If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0

! -  dx add xport reporting code
dim tmp$[400],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
!!!!!!!!!!!!!!!!!!!!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"125",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("K2",tmp$)	\ M9[0]=tmp$ \ if M9[0]=0 let M9[0]=1
call dxget("K3",tmp$)	\ M9[1]=tmp$ \ if M9[1]=0 let M9[1]=999

if M9[0] < 0 or M9[0] > 999 let e$="Invalid starting table, must be between 0 and 999!" \ error 10000
if M9[1] < M9[0] or M9[1] > 999 Let e$ = "Invalid ending table, must be between starting table and 999!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!L_1000: Rem ENTER RANGE
!L_1010: 
!Print @0,20;"ENTER STARTING TABLE,  <CR>: ALL   E: end ";'CE';
!Input ""K2$
!If K2$ = "" Goto L_1140
!If K2$ = "E" Goto OUTEND
!M9 = K2$
!If M9 < 1 Goto L_1010
!If M9 >= 999 Goto L_1010
!L_1070: Print 'CR';"ENTER ENDING TABLE,  <CR>: LAST : ";'CL';
!Input ""K3$
!If K3$ = "" Let K3$ = "999"
!M9[1] = K3$
!If M9[1] < 1 Goto L_1070
!If M9[1] > 999 Goto L_1070
!Goto L_1170
!L_1140: Print 
!M9[0] = 1
!M9[1] = 999
!L_1170: If M9 <= M9[1] Goto L_1210
!Print 'CR MU CL MU CL RB';" INVALID RANGE ";
!Signal 3,20
!Goto L_1000
!L_1210: Print @0,21;"PRINTING, PLEASE WAIT . . . ";'CE';
!!Signal 3,0
!!If Err 0 Gosub ERR_ESCAPE
if j8
	tmp$ = "TABLE_NUMBER",fdel$
	tmp$ = tmp$,"TABLE_NAME",fdel$
	tmp$ = tmp$,"LEVEL",fdel$
	tmp$ = tmp$,"MARKUP1",fdel$
	tmp$ = tmp$,"MARKUP2",fdel$
	tmp$ = tmp$,"MARKUP3",fdel$
	tmp$ = tmp$,"MARKUP4",fdel$
	Call addtostr(e$,rstr$,tmp$+rdel$)
end if

For B3 = M9[0] To M9[1]
  M8 = 0
  For B4 = 1 To 10
    R1 = (B4 * 1000) - 1000 + B3
    Mat Read #2,R1,10;M6;
    For X = 0 To 3
      M8 = M8 + Abs(M6[X])
    Next X \ Next B4
  If Not(M8) Goto L_2250
  Read #2,10000 + B3,0;D$;
  Gosub L_5800
   L = L + 1
  if not(j8 )
	  Print #0;""
	  Print #0; Using "###"; Tab 8;"TABLE ";B3;" - ";D$;"\15\"
	  Print #0; Tab 7;"LVL"; Tab 22;"MARKUP1"; Tab 42;"MARKUP2";
	  Print #0; Tab 62;"MARKUP3"; Tab 82;"MARKUP4" \ L = L + 3
  endif
  For B4 = 1 To 10
    R1 = (B4 * 1000) - 1000 + B3
    Mat Read #2,R1,0;M5;
    Mat Read #2,R1,10;M6;
    For B5 = 3 To 0 Step -1
      If M6[B5] Goto L_2220
    Next B5
L_2220: Rem.
    Gosub L_5000
  Next B4
L_2250: Next B3
Goto L_9100

L_5000: Rem PRINT LINE
If B5 = -1 Let B5 = 0
if j8
	tmp$ = B3 Using "###",fdel$
	tmp$ = tmp$,rtrim$(D$),fdel$
	tmp$ = tmp$,B4 Using "##",fdel$
	For X = 0 To B5
		tmp$ = tmp$,M6[X] Using "----#.##",M5$[M5[X] + 1,M5[X] + 1],fdel$
	Next X
	For X = 0 To (2-B5)
		tmp$ = tmp$,"",fdel$
	Next X 

	Call addtostr(e$,rstr$,tmp$+rdel$)
	return
end if
Print #0; Using "##"; Tab 8;B4;
For X = 0 To 3 \ M5[X] = Sgn(M5[X]) \ Next X
For X = 0 To B5
  Print #0; Using "----#.##"; Tab 21 + X * 20;M6[X];
  Print #0; Tab 32 + X * 20;M5$[M5[X] + 1,M5[X] + 1];
Next X
Print #0;"" \ L = L + 1
Return 
!
L_5800: Rem HEADINGS
if j8 return
If L < 45 Return 
If P Print #0;"\14\";
Print #0;"\15\"; Tab (Int(66 - Len(U9$) / 2));U9$
P = P + 1
Print #0; Tab 10;"DATE: ";D8$;
Print #0; Tab 49;"PRODUCT 10 BRACKET MARKUP TABLE LIST"; Tab 110;"PAGE";P
Print #0;" "
L = 1
Return 
!
OUTEND: Rem EXIT PROGRAM
!Close \ Chain "MX000"
L_9100: Rem END OF THIS RANGE
!Print 'CS'
!If K2$ = "" Goto OUTEND
!Goto L_845
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
try call dxclose() else rem
End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
