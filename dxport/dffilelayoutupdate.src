! -- dffilelayoutconvert.dl4
!
Print 'CS';"This program should not be run, will destroy dynamic xport file structure"
Stop 
!
! Program to convert file layouts from existing system to new DL4 layout records
!
! 1.0 03/15/2007  new 
!
!all rights reserved. (c)copyright 2005 by: dynamicconcepts 
!
! loadsave -w -n 10,10 -o prog/dxport/dffilelayoutupdate.dl4 src/dffilelayoutupdate.src
!
Declare Intrinsic Function FindChannel,crc32,callstat$,encfnm$,DateUsing$,trim$,Replace$
Declare Intrinsic Sub dxget,dxset,dxclose,dxsave,bytecopy,StringSearch
!
External Lib "dfgeneral.lib"
Declare External Sub dfsuberr,ReadSystemFile,openfiles
Declare External Function GetProgramPath$
!
Declare Sub OpenRoutine,ProcessRoutine,CloseRoutine,MaskVarible,CheckDupName
!  
!Include dffiles.bsh
!"dffiles.bsh" === Demo File Definitions Subsystem Database include file
!
!    "dffiles.bsh" 1.0 8/25/2006
!
!    All rights reserved.    (C) Copyright 2006 by:
!    Dynamic Concepts, Inc.   Aliso Viejo, California USA
!
!    "@(#) dffiles.bsh 1.0@(#)"
!
!
!This source code is free to use and duplicate with purchase of dynamicXport
!license
!
!
!DynamicXport Demo File Definitions Administration Application
!
!Data Base File Definitions
!
Def Struct config !dfsystem.txt parameters
  Member filetype$[2]
  Member drvr$[60]
  Member filedir$[80]
  Member filehdr$[60]
  Member filefields$[60]
  Member Filekey$[60]
  Member odbcdir$[80]
  Member codedir$[80]
  Member srcdir$[80]
  Member structdir$[80]
End Def 
!
Def Struct key1 : Key "ID" + Unique
  Member FileName$[20] : Key "filename"
  Member Active$[1] : Key "active"
  Member Version$[10] : Key "version"
End Def 
!
Def Struct key2 : Key "group" + Unique
  Member GroupName$[20] : Key "groupname"
  Member FileName$[20] : Key "filename"
  Member Active$[1] : Key "active"
  Member Version$[10] : Key "version"
End Def 
!
Def Struct key1seq : Key "ID" + Unique
  Member FileName$[20] : Key "filename"
  Member Version$[10] : Key "version"
  Member 1%,Seq : Key "seq"
End Def 
!
Def Struct key1seq2 : Key "ID" + Unique
  Member FileName$[20] : Key "filename"
  Member Version$[10] : Key "version"
  Member 1%,Seq : Key "seq"
  Member 1%,keypart : Key "keypart"
End Def 
!
Def Struct FileDefHdr
  Member FileName$[20] : Item "filename"
  Member GroupName$[20] : Item "groupname"
  Member Active$[1] : Item "active" !a=active,f=future,o=obsolete
  Member Version$[10] : Item "version"
  Member Desc$[60] : Item "desc"
  Member AddedDate$[16] : Item "addeddate"
  Member addedby$[8] : Item "addedby"
  Member updateddate$[16] : Item "updateddate"
  Member updatedby$[8] : Item "updatedby"
  Member server$[20] : Item "server" !reserved
  Member db$[20] : Item "db" !reserved
  Member tablename$[20] : Item "tablename" !reserved
  Member sqloptions$[60] : Item "sqloptions" !reserved
  Member openas$[60] : Item "openas" !reserved
  Member bridge$[240] : Item "bridge" !reserved
  Member userdef1$[60] : Item "Userdef1"
  Member userdef2$[60] : Item "Userdef2"
  Member userdef3$[60] : Item "Userdef3"
  Member userdef4$[60] : Item "Userdef4"
  Member userdef5$[60] : Item "Userdef5"
End Def 
!
Def Struct FileDefFields
  Member FileName$[20] : Item "filename"
  Member Version$[10] : Item "version"
  Member 1%,Seq : Item "seq"
  Member VarName$[20] : Item "varname"
  Member ShortDesc$[60] : Item "shortdesc"
  Member LongDesc$[360] : Item "longdesc"
  Member 2%,Position : Item "position"
  Member 2%,Precision : Item "precision"
  Member droplist$[1] : Item "droplist" !y=yes  (indicates can appear in drop lists, used to gencode in file*.lib)
  Member fieldlabel$[40] : Item "fieldlabel" !reserved
  Member Active$[1] : Item "active" !reserved (used to genodbc n=don't include)
  Member required$[1] : Item "required" !reserved y=yes (used to gencode in file*.lib, if field<>"" it is active record in non-indexed file)
  Member default$[120] : Item "default" !reserved
  Member dbfieldname$[30] : Item "dbfieldname" !reserved
  Member align$[1] : Item "align" !reserved (used to genodbc profile)
  Member fillchar$[1] : Item "fillchar" !reserved (used to genodbc profile)
  Member opts$[240] : Item "opts" !reserved (used to genodbc profile)
  Member userdef1$[60] : Item "Userdef1"
  Member userdef2$[60] : Item "Userdef2"
  Member userdef3$[60] : Item "Userdef3"
  Member userdef4$[60] : Item "Userdef4"
  Member userdef5$[60] : Item "Userdef5"
End Def 
!
Def Struct filedefkey
  Member FileName$[20] : Item "filename"
  Member Version$[10] : Item "version"
  Member 1%,Seq : Item "seq"
  Member 1%,keypart : Item "keypart"
  Member Desc$[120] : Item "desc"
  Member 2%,rcdposition : Item "rcdposition"
  Member 2%,Precision : Item "precision"
  Member dbkeyname$[20] : Item "dbkeyname" !reserved
  Member dbkeypart$[20] : Item "dbkeypart" !reserved
  Member 2%,keypos : Item "keypos" !reserved
  Member prefix$[10] : Item "prefix" !reserved (used to genodbc profile)
  Member charset$[10] : Item "charset" !reserved (used to genodbc profile)
  Member opts$[240] : Item "opts" !reserved (used to genodbc profile and file*.lib)
  Member externalk$[60] : Item "externalk" !reserved for genodbc external file key definition FILE=filepath (not active yet)
  Member userdef1$[60] : Item "Userdef1"
  Member userdef2$[60] : Item "Userdef2"
  Member userdef3$[60] : Item "Userdef3"
  Member userdef4$[60] : Item "Userdef4"
  Member userdef5$[60] : Item "Userdef5"
End Def 
!
!
!
!
! **main procedure
!
!
Dim FileDefHdr. As FileDefHdr
Dim FileDefFields. As FileDefFields
Dim FileDefFieldsTmp. As FileDefFields
!
Dim Path$[100],FileName$[50]
Dim BegKey$[48],EndKey$[48],Filekey$[48],FieldKey$[48]
Dim FileRec$[36],FieldRec$[50]
Dim e$[200]
Dim tmp$[100],tmp1$[100],tmp2$[100],tmp3$[100]
Dim 1%,c[20],FileMat[3],FieldMat[2],tmpcnt,errflag
Dim 2%
Dim 3%,idx
Dim 4%
!
!
Try 
  Call OpenRoutine() ! open files
  Call ProcessRoutine() ! process section
  Call CloseRoutine() ! close files
Else 
  Print "error";Spc(8);" at line ";Spc(10)
  Stop 
End Try 
Chain ""
!
! ------------------------------------------------
Sub OpenRoutine()
  !
  Try 
    Dim config. As config
    ! need to get filenames from dxsystem.txt
    !
    !read system file parameters
    Call ReadSystemFile(e$,config.)
    !
    ! open files
    !
    Call openfiles(e$,config.,c[]) ! dxport files
    ! 
    !Path$ = "/x1/xrev9/syspgms/1/" ! old path
    !Path$ = "/x/htb/rst/syspgms/1/"
	Path$ = "/x1/xslspro/files/"
    c[11] = FindChannel()
    ! Ropen #c[11],Path$ + "ssuf02m" ! Ubs file layout, file names
	Ropen #c[11],"files/filedefhdr.dbf" ! Ubs file layout, file names
    !
    c[12] = FindChannel()
    ! Ropen #c[12],Path$ + "ssuf02i" ! UBS file layout, keys
	!Ropen #c[12],Path$ + "ssuf02i" ! UBS file layout, keys
    !
    c[13] = FindChannel() ! chan for field layout file
    !
  Else 
    Print "error";Spc(8);" at line ";Spc(10)
    Stop 
  End Try 
  !
End Sub ! openroutine
!
! ------------------------------------------------
Sub ProcessRoutine()
  !
  Try 
    !
    Stop ! next line setup file name
    ! BegKey$ = "WHINFO" \ EndKey$ = "WHINFO "
    Filekey$ = BegKey$
	Sear_FileName: !
    ! Search #c[11],3,1;Filekey$,v1,v2
	Do
	FileRec=-2 
    search >= #c[11],1;FileKey$
      !
      ! Add file definition header record
      Read Record #c[11], FileRec ;FileDefHdr.
	  print filedefhdr.filename$
      !

	  !stop \ x=x
	  !filerec=-1 ! next rec
	Loop until x=99
        !
      !
      ! Get next UBS file name
  Else 
    Print "error";Spc(8);" at line ";Spc(10)
    Stop 
  End Try 
  !
End Sub ! processroutine
!
! ------------------------------------------------
Sub MaskVarible()
  Try 
    !
    tmp1$ = "+/#~.,<>;:()?%$!&*^@-='''"
    For tmp = 1 To Len(tmp1$)
      tmp$ = Replace$(tmp$,tmp1$[tmp,tmp]," ")
    Next tmp
    !
    ! remove spaces & make 1st char capital
    tmp = 1 \ tmp1$ = ""
    Do 
      Call StringSearch(tmp$,tmp," ",tmp1)
      If tmp1 = -1 Exit Do 
      If tmp1 > tmp
        tmp$[tmp,tmp] = UCase$(tmp$[tmp,tmp])
        tmp1$ = tmp1$,tmp$[tmp,tmp1 - 1]
      End If 
      tmp = tmp1 + 1
    Loop 
    tmp$[tmp,tmp] = UCase$(tmp$[tmp,tmp])
    tmp1$ = tmp1$,tmp$[tmp]
    tmp1$ = trim$(tmp1$)
    If tmp1$ = "" Let tmp1$ = "Unknown"
    !
    ! Check for reserved words & 1st character being numeric
    tmp3$ = tmp1$
    errflag = 0 ! error flag init
    If tmp1$[1,1] >= "0" If tmp1$[1,1] <= "9" Let errflag = 1 ! add char, 1st char - numeric
    If UCase$(tmp1$[1,4]) = "OPEN" If Len(tmp1$) = 4 Let errflag = 1
    If UCase$(tmp1$[1,4]) = "LINE" If Len(tmp1$) = 4 Let errflag = 1
    If UCase$(tmp1$[1,4]) = "STOP" If Len(tmp1$) = 4 Let errflag = 1
    If UCase$(tmp1$[1,6]) = "RECORD" If Len(tmp1$) = 6 Let errflag = 1
    !
    If errflag Let tmp1$ = "s",tmp3$ ! add char, 1st char numeric or word is reserved
    !
    If FieldMat[0] = 0 Let tmp1$ = tmp1$,"$"
    !
  Else 
    Print "error";Spc(8);"at line ";Spc(10)
    Stop 
  End Try 
End Sub ! MaskVarible
!
! ------------------------------------------------
Sub CheckDupName()
  Try 
    !
    Dim subkey$[48],subdef$[100],subtmp$[100],subfield$[50]
    Dim 1%,subcnt,subflag
    Dim 3%,subrec
    !
    subcnt = 0 ! counter
    subfield$ = tmp1$ ! field name
    !
SearDXFieldDefs: !
    subkey$ = Filekey$ ! UBS file def file
    subflag = 0 ! no dup found
    subrec = -2
    Try Search >= #c[1],1;subkey$ Else Exit Sub 
    Do 
      Try Read Record #c[1],subrec;FileDefFieldsTmp. Else Exit Do 
      subtmp$ = RTrim$(Filekey$)
      If FileDefFieldsTmp.FileName$ <> subtmp$ Exit Do ! file name
      If FileDefFieldsTmp.VarName$ = tmp1$ ! original field name
        If subfield$[Len(tmp1$)] = "$" Let subfield$ = subfield$[1,Len(tmp1$) - 1]
        subcnt = subcnt + 1 \ subtmp$ = subcnt Using "####"
        tmp1$ = subfield$,LTrim$(subtmp$)
        If FieldMat[0] = 0 Let tmp1$ = tmp1$,"$"
        subflag = 1
        Exit Do 
      End If 
      subrec = -1
    Loop 
    If subflag = 1 Goto SearDXFieldDefs ! search for new field name for duplicate
  Else 
    Print "error";Spc(8);"at line ";Spc(10)
    Stop 
  End Try 
End Sub ! CheckDupName
!
! ------------------------------------------------
Sub CloseRoutine()
  Try 
    Close 
  Else 
    Print "error";Spc(8);" at line ";Spc(10)
    Stop 
  End Try 
End Sub ! closeroutine
!
! ------------------------------------------------
