! >>> Program mhlpphysud.
!
! description Update of License Plate file from Physical
!
! loadsave -w -n 100,10 -o prog/dxport/mhlpphysud.dl4 src/mhlpphysud.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 12, 2002  13:07:52
Rem /w/papermaster/r2002//usr/acct/rgp/work/r2002/misc/mhlpphysud.src (univ2) [rgp] {45844}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String

!Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Try
Rem MHLPPHYSUD - Update of License Plate file from Physical
Rem Author: jcs cct 142450  01/25/2001
Rem Last Update:
Enter WHSE,CH_TAG,CH_SPROD,CH_LPPHYS,CH_LPLT,e$,IntCo,rstr$,REC_UAC
!If Err 0 Gosub ERR_TRAP
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim K1$[60],K2$[60],X$[20],LPP$[26],MHLP$[32],K3$[60]
Dim P1$[26],P2$[28],FLE$[20],P9$[50],P61$[256]
Dim DEL_KEY$[80],NEWLOC$[6],CURRDATE$[15]
Dim 1%,LPP1[1],MHLP1[3],COID,LPFLAG,NEWWH,USERID
Dim 2%,MHLP2[11],SYS_DATE
Dim 3%,LPP3[1],P1[2],MHLP3[3]
Dim 3%,REC[20],MHLP_REC
Mat Read #1,19,50;P9$;
RASL = 0 \ If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
If Not(RASL) Goto OUTEND
Mat Read #1,61,0;P61$;
If P61$[32,32] <> "Y" Goto OUTEND
Read #1,7,61;LPFLAG;
If Not(LPFLAG) Goto OUTEND
If CH_LPPHYS <= 0 Let CH_LPPHYS = 10
If CH_LPLT <= 0 Or CH_LPLT = CH_LPPHYS Let CH_LPLT = 11
!COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
COID=INTCO
!If Err 0 Rem
Try Close #CH_LPPHYS Else Rem 
Try Close #CH_LPLT Else Rem
try Close #0 Else Rem
! If Err 0 Gosub ERR_TRAP
! user id --- rec_uac
!Open #0,"cntrl/USERPORT"
!Read #0,Spc(6),0;USERID;
!Close #0
USERID=REC_UAC
FLE$ = "3/MHLPPHYS" + Str$(COID)
Call FindF(FLE$,H)
If Not(H) Goto OUTEND
Open #CH_LPPHYS,FLE$
FLE$ = "2/MHLICPLT" + Str$(COID)
Open #CH_LPLT,FLE$
CH_LPPH = CH_LPPHYS;CH_PHYS = CH_TAG;CH_PROD = CH_SPROD
STARTHERE: Rem "we're off - check LPPHYS to PHYSINV
!Print @0,22;'CE';"CHECKING PALLET PHYSICAL, PLEASE WAIT. ."
! Signal 3,1
K1$ = " ",K1$;NOREC = 0
K1$[1,2] = WHSE Using "##"
CLPPHYS_LOOP: Rem "checking
Search #CH_LPPH,3,1;K1$,REC[1],E \ If E = 2 Goto STARTUPDATE
If E Gosub ERR_SEARCH
X1 = K1$[1,2] \ If X1 <> WHSE Goto STARTUPDATE
NOREC = NOREC + 1
!If Not(Fra(NOREC / 150)) Print @45,22;'CL';"WORKING";NOREC
K2$ = " ",K2$
K2$ = K1$[1,8]
K3$ = K2$
Search #CH_PHYS,2,1;K2$,REC[2],E \ If E > 1 Gosub ERR_SEARCH
If E ! "not found - I guess no good
  Gosub DELLPPHYS \ Goto CHEKDONE
Else ! "found it do products match?
  Gosub READ_LPPHYS
PHYSENT_LOOP: Rem "could be different Tag
  Mat Read #CH_PHYS,REC[2],0;P1$;
  If P1$[7,18] <> LPP$[9,20] ! "prods differ - different tag perhaps?
    Search #CH_PHYS,3,1;K2$,REC[2],E \ If E = 2 Goto CANTFINDPHYS
    If E Gosub ERR_SEARCH
    If K2$[1,8] <> K3$[1,8] Goto CANTFINDPHYS
    Goto PHYSENT_LOOP
CANTFINDPHYS: Rem "can't find Physical Entry - Delete the LPP
    Gosub DELLPPHYS \ Goto CHEKDONE
  End If 
End If 
K2$ = " ",K2$;K2$ = LPP$[1,8]
Search #CH_LPLT,2,1;K2$,REC[3],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto CHEKLPDONE
Mat Read #CH_LPLT,REC[3],88;MHLP3
If MHLP3[0] Let MHLP3[1] = MHLP3[0];MHLP3[0] = 0
Mat Write #CH_LPLT,REC[3],88;MHLP3;
CHEKLPDONE: Rem "Done - record record
Write #CH_LPPH,REC[1],42;REC[2];
CHEKDONE: Rem "done - next
Goto CLPPHYS_LOOP
STARTUPDATE: Rem "update the License Plate File
!Print @0,22;'CE';"UPDATING PALLET ID FILE, PLEASE WAIT. ."
K1$ = " ",K1$;NOREC = 0
K1$[1,2] = WHSE Using "##"
ULPPHYS_LOOP: Rem "the update Loop
Search #CH_LPPH,3,1;K1$,REC[1],E \ If E = 2 Goto UPDATEDONE
If E Gosub ERR_SEARCH
X1 = K1$[1,2] \ If X1 <> WHSE Goto UPDATEDONE
NOREC = NOREC + 1
! If Not(Fra(NOREC / 150)) Print @45,22;'CL';"WORKING";NOREC
Read #CH_LPPH,REC[1],42;REC[2];
If REC[2] > 0 And REC[2] < Chf(CH_PHYS)
  Mat Read #CH_PHYS,REC[2],26;P1;
  If P1[2] <> -99 Goto ULPPHYS_LOOP
End If 
Gosub READ_LPPHYS
K2$ = " ",K2$
K2$ = LPP$[1,8]
Search #CH_LPLT,2,1;K2$,REC[3],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Gosub ADDNEWLP
Gosub READ_LPFLE
NEWWH = WHSE \ If NEWWH <= 0 Let NEWWH = LPP1[1]
If NEWWH <= 0 Let NEWWH = MHLP1[1]
NEWLOC$ = LPP$[21,26] + "      "
If NEWLOC$ = "" Or NEWLOC$[1,6] = "      " Let NEWLOC$ = MHLP$[21,26]
If NEWLOC$ = "" Or NEWLOC$[1,6] = "      " Let NEWLOC$ = "STOCK "
CHANGEMADE = 0
If NEWWH <> MHLP1[1] Let CHANGEMADE = 9
If NEWLOC$[1,6] <> MHLP$[21,26] Let CHANGEMADE = 9
If CHANGEMADE Gosub DELLPKEYS
MHLP3[0] = MHLP3[0] + LPP3[0]
Gosub MAKECHANGE
Gosub WRITE_LPFLE
UPDDONE: Rem "done - delete it
Gosub DELLPPHYS
Goto ULPPHYS_LOOP
MAKECHANGE: Rem "maneuver the fields
If NEWWH <> MHLP1[1] ! "only if different
  MHLP1[2] = MHLP1[1]
  MHLP1[1] = NEWWH
End If 
CURRDATE$ = Tim(14) Using "&&&&&&&&"
X$ = CURRDATE$[5,8] + CURRDATE$[1,2] + CURRDATE$[3,4]
Call DateToJulian(5,X$,X$,E) \ If E Gosub ERR_SEARCH
MHLP2[3] = MHLP2[1]
MHLP2[1] = X$[1,5]
MHLP2[4] = MHLP2[2]
MHLP2[2] = (Tim(11) * 100) + Tim(12)
If MHLP2[7] <> USERID ! "only if different
  MHLP2[8] = MHLP2[7]
  MHLP2[7] = USERID
End If 
If NEWLOC$ <> MHLP$[21,26] ! "only if changed
  MHLP$[27,32] = MHLP$[21,26]
  MHLP$[21,26] = NEWLOC$[1,6]
End If 
Return 
READ_LPPHYS: Rem "Read the Physical Record
Mat Read #CH_LPPH,REC[1],0;LPP$;
Mat Read #CH_LPPH,REC[1],26;LPP1;
Mat Read #CH_LPPH,REC[1],30;LPP3;
Return 
READ_LPFLE: Rem "read the License Plate File
Mat Read #CH_LPLT,REC[3],0;MHLP$
Mat Read #CH_LPLT,REC[3],32;MHLP1
Mat Read #CH_LPLT,REC[3],40;MHLP2
Mat Read #CH_LPLT,REC[3],88;MHLP3
Return 
WRITE_LPFLE: Rem "write the License Plate File
Mat Write #CH_LPLT,REC[3],0;MHLP$
Mat Write #CH_LPLT,REC[3],32;MHLP1
Mat Write #CH_LPLT,REC[3],40;MHLP2
Mat Write #CH_LPLT,REC[3],88;MHLP3;
Return 
ADDNEWLP: Rem "Add a new License Plate
CURRDATE$ = Tim(14) Using "&&&&&&&&"
X$ = CURRDATE$[5,8] + CURRDATE$[1,2] + CURRDATE$[3,4]
Call DateToJulian(5,X$,X$,E) \ If E Gosub ERR_SEARCH
SYS_DATE = X$[1,5]
MHLP$ = " ",MHLP$
For I = 0 To 11
  If I < 4 Let MHLP1[I] = 0
  MHLP2[I] = 0
  If I < 4 Let MHLP3[I] = 0
Next I
MHLP2[5] = SYS_DATE
MHLP2[1] = MHLP2[5]
MHLP2[10] = MHLP2[5]
MHLP2[6] = (Tim(11) * 100) + Tim(12)
MHLP2[2] = MHLP2[6]
MHLP2[11] = MHLP2[6]
MHLP2[7] = USERID
MHLP2[9] = USERID
MHLP$[1,8] = LPP$[1,8]
MHLP$[9,20] = LPP$[9,20]
MHLP$[21,26] = LPP$[21,26]
MHLP1[0] = 2
MHLP1[1] = LPP1[0]
K3$ = " ",K3$;K3$ = MHLP$[1,8]
Search #CH_LPLT,2,1;K3$,REC[0],E \ If Not(E) Return 
If E > 1 Gosub ERR_SEARCH
E = 2;REC[0] = 0
Search #CH_LPLT,1,0;K3$,REC[0],E \ If E Gosub ERR_SEARCH
REC[3] = REC[0]
Search #CH_LPLT,4,1;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$
K3$ = MHLP$[9,20],MHLP1[1] Using "##",MHLP$[21,26],MHLP$[1,8]
REC[0] = REC[3]
Search #CH_LPLT,4,2;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$
K3$ = MHLP1[1] Using "##",MHLP$[21,26],MHLP$[9,20],MHLP$[1,8]
REC[0] = REC[3]
Search #CH_LPLT,4,3;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$
K3$ = MHLP1[0] Using "#",MHLP2[0] Using "######",MHLP$[9,20],MHLP1[1] Using "##",MHLP$[21,26],MHLP$[1,8]
REC[0] = REC[3]
Search #CH_LPLT,4,4;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$
K3$ = MHLP2[5] Using "&&&&&",MHLP$[1,8]
REC[0] = REC[3]
Search #CH_LPLT,4,5;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$
K3$ = MHLP1[1] Using "##",MHLP$[9,20],MHLP2[5] Using "&&&&&",MHLP$[1,8]
REC[0] = REC[3]
Search #CH_LPLT,4,6;K3$,REC[0],E \ If E Gosub ERR_SEARCH
Gosub WRITE_LPFLE
Return 
DELLPKEYS: Rem "delete old/insert new - if warehouse/location changed
K3$ = " ",K3$;DEL_KEY$ = " ",DEL_KEY$
DEL_KEY$ = MHLP$[9,20],MHLP1[1] Using "##",MHLP$[21,26],MHLP$[1,8]
Search #CH_LPLT,5,2;DEL_KEY$,MHLP_REC,E \ If E Gosub ERR_SEARCH
K3$ = DEL_KEY$;REC[0] = REC[3]
K3$[13,14] = NEWWH Using "##";K3$[15,20] = NEWLOC$[1,6]
Search #CH_LPLT,4,2;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;DEL_KEY$ = " ",DEL_KEY$
DEL_KEY$ = MHLP1[1] Using "##",MHLP$[21,26],MHLP$[9,20],MHLP$[1,8]
Search #CH_LPLT,5,3;DEL_KEY$,MHLP_REC,E \ If E Gosub ERR_SEARCH
K3$ = DEL_KEY$;REC[0] = REC[3]
K3$[1,2] = NEWWH Using "##";K3$[3,8] = NEWLOC$[1,6]
Search #CH_LPLT,4,3;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;DEL_KEY$ = " ",DEL_KEY$
DEL_KEY$ = MHLP1[0] Using "#",MHLP2[0] Using "######",MHLP$[9,20],MHLP1[1] Using "##",MHLP$[21,26],MHLP$[1,8]
Search #CH_LPLT,5,4;DEL_KEY$,MHLP_REC,E \ If E Gosub ERR_SEARCH
K3$ = DEL_KEY$;REC[0] = REC[3]
K3$[20,21] = NEWWH Using "##";K3$[22,27] = NEWLOC$[1,6]
Search #CH_LPLT,4,4;K3$,REC[0],E \ If E Gosub ERR_SEARCH
K3$ = " ",K3$;DEL_KEY$ = " ",DEL_KEY$
If NEWWH <> MHLP1[1] ! "only on Warehouse Change
  DEL_KEY$ = MHLP1[1] Using "##",MHLP$[9,20],MHLP2[5] Using "&&&&&",MHLP$[1,8]
  Search #CH_LPLT,5,6;DEL_KEY$,MHLP_REC,E \ If E Gosub ERR_SEARCH
  K3$ = DEL_KEY$;REC[0] = REC[3]
  K3$[1,2] = NEWWH Using "##"
  Search #CH_LPLT,4,6;K3$,REC[0],E \ If E Gosub ERR_SEARCH
End If 
Return 
DELLPPHYS: Rem "Delete the LicPlate Physical Record
Search #CH_LPPH,5,1;K1$,R,E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  E = 3;REC[0] = REC[1]
  Search #CH_LPPH,1,0;K1$,REC[0],E \ If E Gosub ERR_SEARCH
End If 
Return 




ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/mhlpphysud.se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$                                              
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                                               


UPDATEDONE: Rem "done - close MH files & exit
Try Close #10 Else Rem
Try Close #11 Else Rem
Goto OUTEND: ! Rem "Done - Outta Here
OUTEND: Rem "===================================== done
!End 
!

Else
!
include "src/callmainerrnet.inc"
end try
End ! the whole program

