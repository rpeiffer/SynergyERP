! >>> Program 446
!
! description Open Backorder Report, Input 
!
! loadsave -w -n 100,10 -o prog/dxport/446.dl4 src/446.src
!
! 1.0 mm/dd/yyyy change??
!
! ERP Scheduler Enabled
!
include "src/copyright.inc"
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 22, 2003  10:10:31
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx446.src (univ2) [jcs] {12794}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX446          Open Backorder Report  (selector)
Rem Author:        Roman  (04/19/1991)
Rem                UNIVERSAL BUSINESS SYSTEMS
!jliu 04/27/01 cct#146141- add vendor sort
! -----------------------------------------------------------------------------
! -----------   notes for upgrade to xrev9 for Morrisette Paper -----------------
! 07/13/05 vst cct192588 - used rev9 prog & added in custom code for:
! 04/30/99  ac cct121930 - add prompt "DO YOU WANT TO SEE TRANSFER QUANTITIES?"
!                          added "TRANFLG" variable  = RETVAL$[89,89] was [77,77]
!                           custom rtn:  L_1425:, also files open on #15 & #16
! ------------------------------------------------------------------------------
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals

Declare External Function GetParameter$

! - Option Default Dialect IRIS1
try ! main try
!
Dim 2%,N1[3],svend,evend,1%,N2[10],V9[4],j8,POFLG,STOCKFLG,Transflg ! old com line
Dim N1$[54],DATE$[8],CNAME$[30],ITEM_LAB$[10],TIME$[22] ! old com line
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim BegProd$[12],EndProd$[12]
Dim Blank$[50] \ Blank$ = " ",Blank$
Dim EndParam$[50] \ EndParam$ = "z",EndParam$
!
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim Z1$[50],F1$[16],F2$[26],A$[26],K$[130],3%
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J9$[75]
Dim RETVAL$[256],Z2$[2],TIME$[22],custom_customer$[30]
Dim 1%,J0,J2,J3,J4,J5,J6,j8,J9[2],X1,X$[40],URECFLAG
Dim 2%,X2,DT3[1],D9[5]
Dim 4%,J1
!
! - If V9[0] = 99 Goto L_1000
!
! - WHTRPT: Rem "first time in - which report?
! - Print 'CS'
! - Print @0,0;"-MX446-";@31,0;"BACKORDER & SUBS REPORT"
! - Print @0,3;"SELECT  1: BACKORDER  2: OUTS & SUBS  E: exit"
! - Print @0,2;"ENTER REPORT TO PRINT  1";'ML';
! - Input Len 16384 + 1;""Z2$ \ Call String(1,Z2$)
! - If Z2$ = "" Let Z2$ = "1"
! - If Z2$ = "E" Goto OUTEND
! - If Z2$ <> "1" And Z2$ <> "2" Goto WHTRPT
! - If Z2$ = "2" ! "subs & OUTS
! -   Gosub L_1450
! -   Chain "SUBOUT"
! - End If 
!
For J = 2 To 28
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;F1$;
  Ropen #J,F1$
L_830: Next J
Data "-1","1792","-1","1808","2416","2432","1840","-1","1872","1888","2128","-1","1824","848","1360","-1"
Data "-1","-1","1744","-1","-1","-1","688","-1","1728","1120","1664"
! 3=SPROD, 5=CUSTOMER, 8=HEADER, 10=TOTALS, 11=LINES, 12=NON-STOCKS
! 14=SALESREPS, 15=TRANSFH, 16=TRANFL, 24=DIVISIONS, 26=CCODES
j8 = 0
try
	V9[4] = Chf(0)
else
	Let j8 = Spc(8)
end try
If j8 If j8 <> 49 error j8
V9[4] = 55 \ If j8 Let V9[4] = 18
Read #1,3;CNAME$;
Read #1,18,50;ITEM_LAB$
Read #1,0,100;DATE$;
Mat Read #1,115;D9;
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(RTrim$(custom_customer$))
!
TIME$ = "" \ Call Time(TIME$) \ TIME$ = TIME$[15]
N1$ = " ",N1$
!
!!! dx add xport reporting code
DXSetup: !
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[5000],bsdel$[10],esdel$[10],rdel$[10]
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
! call dxsave(0,"tmp/446in.txt!")
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"446",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
x2 = GetParameter$("begcust") \ N1$[1,6] = X2 Using "######" ! beg customer
tmp$ = GetParameter$("endcust") \ x2 = tmp$ \ If tmp$ = "" Let N1$[7,12] = "999999" Else Let N1$[7,12] = X2 Using "######" ! end customer
BegProd$ = GetParameter$("begprod") ! beg product
EndProd$ = GetParameter$("endprod") ! end product
x2 = GetParameter$("begslsm") \ N1$[37,39] = X2 Using "###" ! beg salesman
tmp$ = GetParameter$("endslsm") \ x2 = tmp$ \ If tmp$ = "" Let N1$[40,42] = "999" Else Let N1$[40,42] = X2 Using "###" ! end salesman
tmp$ = GetParameter$("begorderdate") \ If tmp$ = "" Let N1[0] = 10170 Else Let N1[0] = tmp$ ! beg order date
tmp$ = GetParameter$("endorderdate") \ If tmp$ = "" Let N1[1] = 123159 Else Let N1[1] = tmp$ ! end order date
n1[2] = GetParameter$("begbuyer") ! beg buyer
tmp$ = GetParameter$("endbuyer") \ If tmp$ = "" Let N1[3] = 999 Else Let N1[3] = tmp$ ! end buyer
tmp$ = GetParameter$("begordtype") \ If tmp$ = "" Let N2[7] = 1 Else Let N2[7] = tmp$ ! beg order type
tmp$ = GetParameter$("endordtype") \ If tmp$ = "" Let N2[8] = 38 Else Let N2[8] = tmp$ ! end order type
n2[9] = GetParameter$("begordstat") ! beg order status
tmp$ = GetParameter$("endordstat") \ If tmp$ = "" Let N2[10] = 59 Else Let N2[10] = tmp$ ! end order status
N2[0] = GetParameter$("sortby") ! sort by
if n2[0]<1 or n2[0]>5 let n2[0]=1
svend = GetParameter$("SVEND")
tmp$ = GetParameter$("EVEND") \ if tmp$="" let evend=999999 else let evend=tmp$
!
tmp$ = GetParameter$("whse") \ If tmp$ = "" Let N2[4] = 1 Else Let N2[4] = tmp$ ! warehouse
tmp$ = ucase$(GetParameter$("stkavail")) \ let n2[5]=0 ! only bo with stock availiable
if erpCron
	if tmp$="Y" let n2[5]=1
else
	If tmp$ <> "" Let N2[5] = 1
end if
tmp$ = ucase$(GetParameter$("dt")) \ If tmp$ = "D" Let N2[1] = 1 Else Let N2[1] = 0 ! detail or summary
tmp$ = GetParameter$("stock") \ If tmp$ = "" Let N2[2] = 3 Else Let N2[2] = tmp$ ! stock  1=stock only 2=non-stock 3=both
tmp$ = GetParameter$("um") \ If tmp$ = "" Let N2[3] = 3 Else Let N2[3] = tmp$ ! u/m  1=stock 2=selling 3=as entered
tmp$ = ucase$(GetParameter$("pagebreak")) \ let n2[6]=0 ! page break on sort
if erpCron
	if tmp$="Y" let n2[6]=1
else
	If tmp$ <> "" Let N2[6] = 1
end if
tmp$ = ucase$(GetParameter$("poflg")) \ let POFLG = 0 ! include non-stock on po's
if erpCron
	if tmp$="Y" let POFLG=1
else
	If tmp$ <> "" Let POFLG = 1
end if
tmp$ = ucase$(GetParameter$("stockflg")) \ let STOCKFLG = 0 ! include stock items on po
if erpCron
	if tmp$="Y" let STOCKFLG=1
else
	If tmp$ <> "" Let STOCKFLG = 1
end if
tmp$ = ucase$(GetParameter$("transflg")) \ let transflg = 0 ! cct 121930
if erpCron
	if tmp$="Y" let transflg=1
else
	If tmp$ <> "" Let transflg = 1
end if
!!!  dx end
!
! customer params
X2 = N1$[1,6] ! beg cust
If X2 < 0 Or X2 > 999999 Let e$ = "Invalid starting customer, must be between 0 and 999999!" \ Error 10000
X2 = N1$[7,12] ! end cust
If N1$[7,12] < N1$[1,6] Or X2 > 999999 Let e$ = "Invalid ending customer, must be between starting customer and 999999!" \ Error 10000
!
! product params
N1$[13,24] = UCase$(BegProd$),Blank$
If EndProd$ = "" Let N1$[25,36] = EndParam$ Else Let N1$[25,36] = UCase$(EndProd$),EndParam$
If N1$[25,36] < N1$[13,24] Or N1$[25,36] > EndParam$[25,36] Let e$ = "Invalid ending product!" \ Error 10000
If N1$[13,24] <> Blank$[13,24] Let PRODRANGE = 99
If N1$[25,36] <> EndParam$[25,36] Let PRODRANGE = 99
If N1$[13,24] = Blank$[13,24] If N1$[25,36] = EndParam$[25,36] Let PRODRANGE = 0
!
! salesman params
X2 = N1$[37,39] ! beg slsmn
If X2 < 0 Or X2 > 999 Let e$ = "Invalid starting salesman, must be between 0 and 999!" \ Error 10000
X2 = N1$[40,42] ! end slsmn
If N1$[40,42] < N1$[37,39] Or X2 > 999 Let e$ = "Invalid ending salesman, must be between starting salesman and 999!" \ Error 10000
!
! beg order date
tmp$ = N1[0] Using "&&&&&&" \ X2 = tmp$[5,6],tmp$[1,4]
START_ODATE = X2 ! yymmdd
Gosub L_7820 ! conv to julian
If E Let e$ = "Invalid starting order date!" \ Error 10000
N1[0] = X2 ! beg order date, julian
!
! end order date
tmp$ = N1[1] Using "&&&&&&" \ X2 = tmp$[5,6],tmp$[1,4]
END_ODATE = X2 ! yymmdd
Gosub L_7820 ! conv to julian
If E Let e$ = "Invalid ending order date!" \ Error 10000
If N1[1] < N1[2] Let e$ = "Invalid ending order date, must be > starting order date!" \ Error 10000
N1[1] = X2 ! end order date, julian
!
! buyer params
if N1[2] > 999 let N1[2]=999
if N1[3] > 999 let N1[3]=999
If N1[2] < 0 Or N1[2] > 999 Let e$ = "Invalid beginning buyer, must be between 0 and 999!" \ Error 10000
If N1[3] < N1[2] Or N1[3] > 999 Let e$ = "Invalid ending buyer, must be between starting buyer and 999!" \ Error 10000
!
! order types
If N2[7] > 38 let N2[7]=38
If N2[8] > 38 let N2[8]=38
If N2[7] < 1 Or N2[7] > 38 Let e$ = "Invalid starting order type, must be between 1 and 38!" \ Error 10000
If N2[8] < N2[7] Or N2[8] > 38 Let e$ = "Invalid ending order type, must be between starting order type and 38!" \ Error 10000
!
! order status
if n2[9] > 59 let n2[9] = 59
if n2[10] > 59 let n2[10] = 59
If N2[9] < 0 Or N2[9] > 59 Let e$ = "Invalid starting order status, must be between 1 and 7!" \ Error 10000
If N2[10] < N2[9] Or N2[10] > 59 Let e$ = "Invalid ending order status, must be between starting order status and 7!" \ Error 10000
!
! warehouse
If N2[0] = 2 Let X2 = 0 Else Let X2 = 1 ! product sort
if not(n2[0] = 2 and n2[4] = 0) ! 0 for all warehouses valid for product sort only 
	If N2[4] < X2 Or N2[4] > D9[5] Let e$ = "Invalid  warehouse, must be between ",X2," and ",D9[5]," !" \ Error 10000
end if
!
! vendor
if evend<svend let e$="Invalid vendor range, please re-enter" \ error 10000
N1$[43,48]=svend using "######"
N1$[49,54]=evend using "######"
! - L_1000: Rem "=================================== get ranges
! - Call "progdflt","446","",77,RETVAL$
! - If RETVAL$[1,5] = "@@@@@"
! -   RETVAL$ = " ",RETVAL$
! -   RETVAL$[1,6] = "     0"
! -   RETVAL$[7,12] = "999999"
! -   RETVAL$[13,24] = "            "
! -   RETVAL$[25,36] = "zzzzzzzzzzzz"
! -   RETVAL$[37,39] = "  0"
! -   RETVAL$[40,42] = "999"
! -   RETVAL$[43,48] = "700101"
! -   RETVAL$[49,54] = "591231"
! -   RETVAL$[55,57] = "  0"
! -   RETVAL$[58,60] = "999"
! -   RETVAL$[61,62] = " 0"
! -   RETVAL$[63,64] = "38"
! -   RETVAL$[65,65] = "0"
! -   RETVAL$[66,66] = "7"
! -   RETVAL$[67,67] = "1"
! -   RETVAL$[68,69] = " 1"
! -   RETVAL$[70,70] = "Y"
! -   RETVAL$[71,71] = "S"
! -   RETVAL$[72,72] = "3"
! -   RETVAL$[73,73] = "3"
! -   RETVAL$[74,74] = "N"
! -   RETVAL$[75,75] = "N"
! -   RETVAL$[76,76] = "N"
! -   Call "progdfltw","446","",77,RETVAL$,URECFLAG
! - End If 
! - Gosub DISP_SCREEN
! - Goto INPUTS
! - INPUTS: Rem
! - Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save default, E: exit ";
! - Input Len 16384 + 3;""X$ \ Call String(1,X$)
! - Print @0,23;'CE';
! - If X$ = "P" Goto L_1450
! - If X$ = "E" Let J8 = 0 \ Goto OUTEND
! - If X$ = "R" Goto EDT_ALL
! - If X$ = "" Goto INPUTS
! - If X$ = "S"
! - ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only, <CR>: do not save ";
! -   Input Len 16384 + 1;""Z2$
! -   Call String(1,Z2$)
! -   If Z2$ = "" Print @0,22;'CL'; \ Goto INPUTS
! -   If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
! -   If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
! -   Call "progdfltw","446","",77,RETVAL$,URECFLAG
! -   Print @0,22;'CL'
! - End If 
! - X = X$
! - If X < 1 Or X > 18 Goto INPUTS
! - Gosub EDT_FLDS
! - Goto INPUTS
! - EDT_ALL: Rem "want's all
! - For X = 1 To 16
! -   Gosub EDT_FLDS
! - Next X
! - Goto INPUTS
! - EDT_FLDS: Rem "edit them here
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - On X Gosub L_1010,L_1040,L_1070,L_1100,L_1160
! - On X - 5 Gosub L_8000,L_8500,L_1170,L_1180,L_1190
! - On X - 10 Gosub L_1220,L_1270,L_1320,L_1330,L_1400,L_1420
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Return 
! - L_1010: Rem"customer code range
! - J5$ = "Enter the starting customer code maximum 999999"
! - J0$ = "1 00062403";J1$ = N1$[1,6]
! - Gosub L_7000 \ N1$[1,6] = J$
! - J5$ = "Enter the ending customer code maximum 999999"
! - J0$ = "1 00063803" \ J1$ = N1$[7,12]
! - Gosub L_7000 \ N1$[7,12] = J$
! - If N1$[7,12] < N1$[1,6] Gosub L_1395 \ Goto L_1010
! - RETVAL$[1,6] = N1$[1,6]
! - RETVAL$[7,12] = N1$[7,12]
! - Return 
! - L_1040: Rem"product code range
! - J5$ = "Enter the starting product code maximum zzzzzzzzzzzz"
! - J0$ = "2 00121804" \ J1$ = N1$[13,24]
! - Gosub L_7000 \ N1$[13,24] = J$
! - J5$ = "Enter the ending product code maximum zzzzzzzzzzzz"
! - J0$ = "2 00123204" \ J1$ = N1$[25,36]
! - Gosub L_7000 \ N1$[25,36] = J$
! - If N1$[25,36] < N1$[13,24] Gosub L_1395 \ Goto L_1040
! - RETVAL$[13,24] = N1$[13,24]
! - RETVAL$[25,36] = N1$[25,36]
! - Return 
! - L_1070: Rem"salesmane range
! - J5$ = "Enter the starting salesman code maximum 999"
! - J0$ = "1 00032705" \ J1$ = N1$[37,39]
! - Gosub L_7000 \ N1$[37,39] = J$
! - J5$ = "Enter the ending salesman code maximum 999"
! - J0$ = "1 00034105" \ J1$ = N1$[40,42]
! - Gosub L_7000 \ N1$[40,42] = J$
! - If N1$[40,42] < N1$[37,39] Gosub L_1395 \ Goto L_1070
! - RETVAL$[37,39] = N1$[37,39]
! - RETVAL$[40,42] = N1$[40,42]
! - Return 
! - L_1100: Rem"order dates
! - If START_ODATE = 0 Let START_ODATE = 700101
! - J1 = START_ODATE
! - J5$ = "Please Enter the Starting Date MMDDYY  "
! - J0$ = "5 00082206"
! - Gosub L_7000 \ X2 = 0
! - If J1 Let X2 = J1 \ Gosub L_7820 \ Goto L_1100
! - START_ODATE = J1;N1[0] = X2
! - ENT_ENDODATE: Rem "Ending
! - J0$ = "5 00083606"
! - J5$ = "Please Enter the Ending date MMDDYY    "
! - If END_ODATE = 0 Let END_ODATE = 591231
! - J1 = END_ODATE
! - Gosub L_7000
! - X2 = J1 \ Gosub L_7820 \ Goto ENT_ENDODATE
! - END_ODATE = J1;N1[1] = X2
! - If N1[1] < N1[0] Gosub L_1395 \ Goto L_1100
! - RETVAL$[43,48] = START_ODATE Using "######"
! - RETVAL$[49,54] = END_ODATE Using "######"
! - Return 
! - L_1160: Rem"buyer range
! - J5$ = "Enter the starting buyer code maximum 999"
! - J0$ = "3 00032707";J1 = N1[2]
! - Gosub L_7000 \ N1[2] = J1
! - J5$ = "Enter the ending buyer code maximum 999"
! - J0$ = "3 00034107" \ J1 = N1[3]
! - Gosub L_7000 \ N1[3] = J1
! - If N1[3] < N1[2] Gosub L_1395 \ Goto L_1160
! - RETVAL$[55,57] = N1[2] Using "###"
! - RETVAL$[58,60] = N1[3] Using "###"
! - Return 
! - L_8000: Rem ORDER TYPE
! - J5$ = "Enter the starting order type maximum 38 "
! - J0$ = "3 00022808" \ J1 = N2[7]
! - Gosub L_7000 \ N2[7] = J1
! - If N2[7] > 38 Gosub L_1390 \ Goto L_8000
! - L_8050: Rem"ending order type
! - J5$ = "Enter the ending order type maximum 38 "
! - J0$ = "3 00024208" \ J1 = N2[8]
! - Gosub L_7000 \ N2[8] = J1
! - If N2[8] > 38 Gosub L_1390 \ Goto L_8050
! - If N2[8] < N2[7] Gosub L_1395 \ Goto L_8000
! - RETVAL$[61,62] = N2[7] Using "##"
! - RETVAL$[63,64] = N2[8] Using "##"
! - Return 
! - L_8500: Rem "ORDER status
! - J5$ = "Enter the starting order status maximum 7 "
! - J0$ = "3 00012909" \ J1 = N2[9]
! - Gosub L_7000 \ N2[9] = J1
! - If N2[9] > 7 Gosub L_1390 \ Goto L_8500
! - L_8550: Rem"ending order status
! - J5$ = "Enter the ending order status maximum 7 "
! - J0$ = "3 00014309" \ J1 = N2[10]
! - Gosub L_7000 \ N2[10] = J1
! - If N2[10] > 7 Gosub L_1390 \ Goto L_8550
! - If N2[10] < N2[9] Gosub L_1392 \ Goto L_8500
! - RETVAL$[65,65] = N2[9] Using "#"
! - RETVAL$[66,66] = N2[10] Using "#"
! - Return 
! - L_1170: Rem sort by
! - J5$ = "Choose the sort option desired"
! - J0$ = "3 00016008" \ J1 = N2[0]
! - Gosub L_7000 \ N2[0] = J1
! - If N2[0] < 1 Or N2[0] > 4 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1170
! - RETVAL$[67,67] = N2[0] Using "#"
! - If N2[0] <> 2 And N2[4] = 0 Gosub L_1180
! - Return 
! - L_1180: Rem"whse
! - If N2[0] = 2
! -   Print @57,11;"(  0: for All) "
! -   J5$ = "Choose the desired warehouse (  0: for all warehouse) "
! -   J0$ = "3 00027211" \ J1 = N2[4]
! - Else 
! -   Print @57,11;'CL';
! -   J5$ = "Choose the desired warehouse" \ J0$ = "3 00025711"
! -   J1 = N2[4]
! - End If 
! - Gosub L_7000
! - If N2[0] = 2
! -   If J1 < 0 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1180
! - Else 
! -   If J1 <= 0 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1180
! - End If 
! - N2[4] = J1
! - RETVAL$[68,69] = N2[4] Using "##"
! - Return 
! - L_1190: Rem "only print backorder when stock available
! - J5$ = "Enter Y or N "
! - J0$ = "6 00015713" \ J1 = N2[5]
! - Gosub L_7000 \ N2[5] = J1
! - If N2[5] Let RETVAL$[70,70] = "Y" Else Let RETVAL$[70,70] = "N"
! - Return 
! - L_1220: Rem summary or detail
! - J5$ = "Enter  D: full detail or  S: summary "
! - J0$ = "2 00014515"
! - If N2[1] Let J1$ = "D" Else Let J1$ = "S"
! - Gosub L_7000
! - If J$ <> "D" And J$ <> "S" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1220
! - If J$ = "D" Let N2[1] = 1 Else Let N2[1] = 0
! - RETVAL$[71,71] = N2[1] Using "#"
! - Return 
! - L_1270: Rem pick
! - J5$ = "Choose 1, 2 or 3"
! - J0$ = "3 00015716" \ J1 = N2[2]
! - Gosub L_7000
! - If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1270
! - SET_TYPE: Rem
! - N2[2] = J1
! - If N2[2] = 2
! -   Print @62,17;"3" \ N2[3] = 3
! -   RETVAL$[73,73] = N2[3] Using "#"
! - End If 
! - RETVAL$[72,72] = N2[2] Using "#"
! - Return 
! - L_1320: Rem"u/m
! - If N2[2] = 2
! -   Print @62,17;"3" \ N2[3] = 3
! -   RETVAL$[73,73] = N2[3] Using "#"
! -   Return 
! - End If 
! - J5$ = "Enter the u/m type"
! - J0$ = "3 00016217" \ J1 = N2[3]
! - Gosub L_7000
! - L_1340: If J1 < 1 Or J1 > 3 Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_1320
! - N2[3] = J1
! - RETVAL$[73,73] = N2[3] Using "#"
! - Return 
! - L_1330: Rem page break
! - J5$ = "Enter Y or N "
! - J0$ = "6 00013218" \ J1 = N2[6]
! - Gosub L_7000
! - N2[6] = J1
! - If N2[6] Let RETVAL$[74,74] = "Y" Else Let RETVAL$[74,74] = "N"
! - Return 
! - L_1390: Rem
! - J7$ = "ENTER VALUE MUST BE LESS THAN OR EQUAL TO THE MAXIMUM NUMBER! "
! - Gosub L_7600
! - L_1395: Rem
! - J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE! "
! - Gosub L_7600
! - Return 
! - L_1400: Rem print non-stocks with po#'s
! - J5$ = "Enter Y or N"
! - J0$ = "6 00013619";J1 = POFLG
! - Gosub L_7000
! - POFLG = J1
! - If POFLG Let RETVAL$[75,75] = "Y" Else Let RETVAL$[75,75] = "N"
! - Return 
! - L_1420: Rem nclude stock items when qty on po + qty on avail is => to qty onbo
! - J5$ = "INCLUDE STOCK ITEMS WHEN QTY ON PO+QTY ON AVAIL IS >= QTY ON BO?"
! - J0$ = "6 00013620";J1 = STOCKFLG
! - Gosub L_7000
! - STOCKFLG = J1
! - If STOCKFLG Let RETVAL$[76,76] = "Y" Else Let RETVAL$[76,76] = "N"
! - Return 
!
L_1450: Rem "======================= create sort file
A$ = Spc(6) \ A$ = A$[2,Len(A$) - 1]
Read #1,88,912;F1$;
L_1540: If F1$[Len(F1$)] = " " Let F1$ = F1$[1,Len(F1$) - 1] \ Goto L_1540
P2 = 0 \ Let F2$ = F1$ To "*" : P2
If Not(P2) Let e$ = "error with sort file name in control file" \ Error 10000
! - Print @0,22;"OPENING SORT FILE, PLEASE WAIT . . . ";'CE';
KSIZE = 20
F1$[P2] = A$
Call FindF(F1$,H1)
Try Close #9 Else Rem
If H1 Kill F1$
F2$ = "[1:256] ",F1$
Build #9,F2$
Search #9,0,1;K$,KSIZE,E
If E Let e$ = "syserrorfile, can't build 446 sortfile!" \ Error 10000
L1 = 1000
Search #9,0,0;K$,L1,E
If E Let e$ = "syserrorfile, can't build 446 sortfile!" \ Error 10000

! chain based on sort
tmp$ = "446a.dl4"
If N2[0] = 2 Or N2[0] = 4 or N2[0]=5 Let tmp$ = "446b.dl4"
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  !try call dxclose() else rem
End If 
!
Chain tmp$
Chain Write CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,N1,N2,N1$,V9,j8,TIME$,DATE$,CNAME$,ITEM_LAB$,POFLG,STOCKFLG,Transflg
!
! - DISP_SCREEN: Rem================================= screen
! - Print 'CS'
! - Print @0,0;"-MX446-";@31,0;"OPEN BACKORDER REPORT"
! - Print @20,2;'BR';"STARTING";@36,2;"ENDING";'ER';
! - Print @51,2;"8> SORT BY ";@60,3;" 1: CUSTOMER"
! - Print @0,3;"  1> CUSTOMERS";@60,4;" 2: PRODUCT"
! - Print @0,4;"  2> PRODUCTS";@60,5;" 3: SALESPERSON"
! - Print @0,5;"  3> SALESPERSONS";@60,6;" 4: BUYERS"
! - Print @0,6;"  4> ORDER DATES";
! - Print @0,7;"  5> BUYERS";
! - Print @0,8;"  6> ORDER TYPE";
! - Print @0,9;"  7> ORDER STATUS";
! - Print @52,8;"CHOOSE:";
! - Print @1,11;" 9> Enter warehouse number to print backorders for "
! - Print @1,13;"10> Print only backorders where stock is available? "
! - Print @1,15;"11> Print  D: full detail or  S: summary? "
! - Print @1,16;"12> Pick  1: stock only,  2: non stock only,  3: both"
! - Print @1,17;"13> Show U/M'S in  1: stock,  2: selling,  3: as entered? "
! - Print @1,18;"14> New page on sort break? ";
! - Print @1,19;"15> Include non-stocks on PO's? ";
! - Print @1,20;"16> Include stock items on PO? ";
! - N1$[1,6] = RETVAL$[1,6]
! - N1$[7,12] = RETVAL$[7,12]
! - Print @24,3;N1$[1,6];@38,3;N1$[7,12];
! - N1$[13,24] = RETVAL$[13,24]
! - N1$[25,36] = RETVAL$[25,36]
! - Print @18,4;N1$[13,24];@32,4;N1$[25,36];
! - N1$[37,39] = RETVAL$[37,39]
! - N1$[40,42] = RETVAL$[40,42]
! - Print @27,5;N1$[37,39];@41,5;N1$[40,42];
! - START_ODATE = RETVAL$[43,48] \ END_ODATE = RETVAL$[49,54]
! - X2 = START_ODATE
! - If X2
! -   Gosub L_7700
! -   Print @22,6;X$;
! -   X2 = START_ODATE \ Gosub L_7820 \ X = X \ N1[0] = X2
! - End If 
! - X2 = END_ODATE
! - If X2
! -   Gosub L_7700
! -   Print @36,6;X$;
! -   X2 = END_ODATE \ Gosub L_7820 \ X = X \ N1[1] = X2
! - End If 
! - N1[2] = RETVAL$[55,57]
! - N1[3] = RETVAL$[58,60]
! - Print Using "###";@27,7;N1[2];@41,7;N1[3];
! - N2[7] = RETVAL$[61,62]
! - N2[8] = RETVAL$[63,64]
! - Print Using "##";@28,8;N2[7];@42,8;N2[8];
! - N2[9] = RETVAL$[65,65]
! - N2[10] = RETVAL$[66,66]
! - Print Using "#";@29,9;N2[9];@43,9;N2[10]
! - N2[0] = RETVAL$[67,67]
! - If N2[0] < 1 Or N2[0] > 4 Let N2[0] = 1
! - Print Using "#";@60,8;N2[0];
! - If N2[0] = 2
! -   Print @57,11;"(  0: for All) ";
! -   N2[4] = RETVAL$[68,69]
! -   Print Using "##";@72,11;N2[4];
! - Else 
! -   N2[4] = RETVAL$[68,69]
! -   Print Using "##";@57,11;N2[4];
! - End If 
! - If RETVAL$[70,70] = "Y" Let N2[5] = 1 Else Let N2[5] = 0
! - Print @57,13;RETVAL$[70,70];
! - N2[1] = RETVAL$[71,71]
! - If N2[1] Print @45,15;"D"; Else Print @45,15;"S";
! - N2[2] = RETVAL$[72,72]
! - Print Using "#";@57,16;N2[2];
! - N2[3] = RETVAL$[73,73]
! - Print Using "#";@62,17;N2[2];
! - If RETVAL$[74,74] = "Y" Let N2[6] = 1 Else Let N2[6] = 0
! - Print @32,18;RETVAL$[74,74];
! - If RETVAL$[75,75] = "Y" Let POFLG = 1 Else Let POFLG = 0
! - Print @36,19;RETVAL$[75,75];
! - If RETVAL$[76,76] = "Y" Let STOCKFLG = 1 Else Let STOCKFLG = 0
! - Print @36,20;RETVAL$[76,76];
! - Return 
! - L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 <> 3 If J0 <> 4 Goto L_7070
! - If J0 = 3 Let J2$ = "#",J2$
! - If J0 = 4 Let J2$ = "-",J2$
! - J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - L_7070: J1$[J3 + 1] = ""
! - If J0 < 3 Goto L_7105
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 = 6 Goto L_7105
! - If J0 <> 5 Goto L_7100
! - J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! - J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
! - L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! - If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
! - L_7105: Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
! - Print @J4,J5;'BU'; \ Input Len J3 + 1;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) <= J3 Goto L_7130
! - J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
! - L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
! - If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
! - J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
! - L_7145: For J8 = 1 To Len(J9$)
! -   If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
! - J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
! - L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
! - L_7165: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto L_7345
! - L_7185: J9 = 0 \ For J8 = 1 To Len(J9$)
! -   If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
! -   If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
! -   If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
! -   If J9$[J8,J8] = " " Goto L_7235
! -   If Len(J0$) < 11 Goto L_7210
! -   J7$ = "" \ J7$ = J0$[10] To J9$[J8,J8] \ If J7$ <> "" Goto L_7235
! - L_7210: If J9$[J8,J8] <> "." Goto L_7250
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
! -   If J9 Goto L_7250
! -   J9 = 1
! - L_7230: If J9 Let J9 = J9 + 1
! - L_7235: Next J8
! - If J0 = 5 Goto L_7265
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
! - L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - L_7260: Gosub L_7600 \ Goto L_7105
! - L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9[1] = 0 If J9 <> 0 Goto L_7325
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
! - On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
! - On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
! - Goto L_7325
! - L_7285: If J9[1] > 30 Goto L_7325
! - L_7290: If J9[1] > 31 Goto L_7325
! - Goto L_7315
! - L_7300: If J9[1] > 29 Goto L_7325
! - If Not(Fra(J9[2] / 4)) Goto L_7315
! - If J9[1] > 28 Goto L_7325
! - L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
! - J$ = X$ \ J3 = 8 \ Goto L_7345
! - L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
! - L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
! - L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
! - L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
! - Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
! - Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
! - Print @0,Msc(34) - 1;'CL'; \ Return 
! - !
! - L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - If Not(X2) Let X$ = "        "
! - Return 
! - DT3[0] = X2;FLAG = 1;X$ = " "
! - Call "JULIANUTIL",DT3[],X$,FLAG
! - Return 
! - Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
! - X2 = X$[1,6] \ Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
If X2 <= 0 Return 
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ E = 0 \ Return ! good 
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
E = 1
Return 
! - X$ = X2 Using "&&&&"
! - DT3[0] = X$[1,2];DT3[1] = X$[3,4]
! - If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
! - If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
! - X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
! - X2 = X$[1,6]
! - Return 
!
!-!OUTEND: Rem EXIT PROGRAM
!-!! dx close
!-!If j8 ! dx xml
!-!  Call addtostr(e$,rstr$,esdel$) !end section
!-!  !!!!!!print rstr$
!-!  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
!-!End If 
!-!!
!-!Call dxclose()
!-!End 
!
! - Print 'CS'
! - Chain "MX000C"
!
else ! main try
	include "src/callmainerrnet.inc"
End try
end
