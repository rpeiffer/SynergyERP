! >>> Program 440a
!
! description Product Monthly
!
! loadsave -w -n 100,10 -o prog/dxport/440a.dl4 src/440a.src
!
! 1.0 mm/dd/yyyy change??
!
!Include src/copyright.inc
!include "src/copyright.inc"
!release 9.0
!
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
!
! *declare common dl4 intrinsic subs & functions
Declare Intrinsic Function trim$,dateusing$,fmtof
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump
!
! *declare common external libs & subs & functions
External Lib "libgeneral.lib" !general routines
Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
Declare External Function getmsg$,expandarray
!
External Lib "libprod.lib"
Declare External Sub ProdGroup
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 18, 2003  10:22:23
Rem /w/papermaster/r2002//usr/acct/jcs/work/r2002/mx/mx440a.src (univ2) [jcs] {10403}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX440A - MONTHLY REPORT PRODUCT  (12 MONTH VERSION)
Rem AUTHOR: DAVE
Rem LAST UPDATE:
! -------------NOTES FOR UPGRADE TO REV10 FOR PAPER & CHEMICAL -----------------
! vst 01/15/04 cct186206 - used current custom version(custom because of 
!                           cct#165195-> see above notes) 
! cct165195 if the product's commodity code is "TIME", don't   
!    print the product info 
! ------------------------------------------------------------------------------
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim BegDate$[6],EndDate$[6]
Dim P$[12],A$[156],P9$[50]
Dim SUNIT$[4]
Dim 2%,DT3[1],ARDT,TABS[1]
Dim 3%,S1[12,2],S2[12,2],AMOUNT,PCTR
Dim CNAME$[30],J3$[40],ARDATE$[8]
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J7$[75],J9$[75]
Dim 1%,F,X1,BOYMONTH,ch_pw,2%,X2,3%,J,X3,T9[12,2],T8[12,2],SCRPRT
Dim K1$[50],K2$[12],K3$[12],X$[10],T9$[26],Z1$[10]
Dim M1$[12],M2$[12],M3$[11],M4$[12],M5$[12],MONTH_$[50]
Dim 3%,SMONTH,SYEAR,SDATE,EMONTH,EYEAR,EDATE,ARDATE,ARYEAR,ARMONTH
dim 3%,parm[10],whmisc2[7],kpw$[50],custom_customer$[30]
Dim SDATE$[10],EDATE$[10],BOYDATE$[10],CURDATE$[10],LONGYEAR$[10],SHORTYEAR$[10]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
M1$ = "-------# "
M2$ = "-------# "
M3$ = "----#.##%"
For J = 2 To 5
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,Abs(J1);J$;
  If J1 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1792","-2080","-1728","1744"
MONTH_$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
ch_pw=5
Mat Read #1,0,100;CURDATE$;
Mat Read #1,0,108;ARDT;
Mat Read #1,19,50;P9$;
Mat Read #1,51,74;BOYMONTH;
Read #1,3;CNAME$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
If Err 0 Let j8 = Spc(8)
j8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If j8 If j8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If j8 Let J9 = 18 \ SCRPRT = 1
J1 = 90
J2 = 0
if j8 then m1$="----------# "
LONGYEAR$[1,6] = ARDT Using "&&&&&&"
ARMONTH = LONGYEAR$[3,4]
SHORTYEAR$[1,2] = LONGYEAR$[1,2]
SHORTYEAR$[3,4] = LONGYEAR$[3,4]
X2 = SHORTYEAR$[1,4] \ Gosub CONVERT_YEAR
LONGYEAR$[1,6] = X2 Using "&&&&&&"
ARYEAR = LONGYEAR$[1,4]
ARDATE = X2
If ARMONTH = 1
  BOYYEAR = ARYEAR - 1
  BOYMONTH = ARMONTH + 1
End If 
If ARMONTH = 12
  BOYYEAR = ARYEAR
  BOYMONTH = 1
End If 
If ARMONTH <> 12 And ARMONTH <> 1
  BOYMONTH = ARMONTH + 1
  BOYYEAR = ARYEAR - 1
End If 
BOYDATE$[1,4] = BOYYEAR Using "&&&&"
BOYDATE$[5,6] = BOYMONTH Using "&&"
BOYDATE = BOYDATE$[1,6]
!
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[200]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If j8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"440a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!! dx add xport reporting code
Call dxget("begdate",BegDate$) ! starting date (mmyy)
Call dxget("enddate",EndDate$) ! ending date (mmyy)
Call dxget("k2",K2$) ! starting product
Call dxget("k3",K3$) ! endng product
!!!! dx end
!
If BegDate$ = "" Let BegDate$ = BOYDATE$[5,6],BOYDATE$[3,4] ! starting date
K1$ = BegDate$[3,4],BegDate$[1,2] ! yymm
X2 = K1$ \ Gosub CONVERT_YEAR
K1$[1,6] = X2 Using "&&&&&&"
SMONTH = K1$[5,6] \ SYEAR = K1$[1,4] \ SDATE = K1$[1,6]
errflag = 0
If SMONTH < 1 Or SMONTH > 12 Let errflag = 1
If SYEAR > ARYEAR Or SYEAR < (ARYEAR - 1) Let errflag = 1
If SDATE < BOYDATE Or SDATE > ARDATE Let errflag = 1
If errflag                                                            
        e$="Starting date must be in the range "                      
        e$=e$+(fra(boydate/100)*100 using "&&")                       
        e$=e$+(fra(int(boydate/100)/100)*100 using "&&")+" through "  
        e$=e$+(fra(ardate/100)*100 using "&&")                        
        e$=e$+(fra(int(ardate/100)/100)*100 using "&&")               
        Error 10000                                                   
endif           
!
If EndDate$ = ""
  K1$ = ARDATE Using "&&&&&&"
  EndDate$ = K1$[5,6],K1$[3,4] ! end date
End If 
K1$ = EndDate$[3,4],EndDate$[1,2] ! yymm
X2 = K1$ \ Gosub CONVERT_YEAR
K1$[1,6] = X2 Using "&&&&&&"
EMONTH = K1$[5,6] \ EYEAR = K1$[1,4] \ EDATE = K1$[1,6]
errflag = 0
If EMONTH <= 0 Or EMONTH > 12 Let errflag = 1
If EYEAR > ARYEAR Or EYEAR < (ARYEAR - 1) Let errflag = 1
If EDATE < SDATE Or EDATE > ARDATE Let errflag = 1
If errflag                                                         
        e$="Ending date must be in the range "                     
        e$=e$+(fra(sdate/100)*100 using "&&")                      
        e$=e$+(fra(int(sdate/100)/100)*100 using "&&")+" through " 
        e$=e$+(fra(ardate/100)*100 using "&&")                     
        e$=e$+(fra(int(ardate/100)/100)*100 using "&&")            
        Error 10000                                                
endif                                                              
!
If K2$ = "" Let K2$ = " ",K2$ ! starting product
K1$ = K2$
!
If K3$ = "" Let K3$ = "z",K3$ ! ending product
If K3$ < K2$ Let e$ = "Invalid ending product, must be > starting product!" \ Error 10000
!
If j8 = 0 !if pdf or print, new method, after edits,setouput,dxclose      
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in                                                     
	!Try Call dxclose() Else Rem                                             
End If                                                                    
!
! - STRTHERE: Rem "================================= get ranges
! - Gosub PRNTSCRN
! - Gosub PRINT_DEFAULT
! - STDFINALQ: Rem "Standard Final Question
! - Print @10,23;'CL';"ENTER #:field to edit   R: reselect all   P: print   E: exit ";
! - Input ""Z1$
! - Call String(1,Z1$)
! - If Z1$ = "R" Goto RESELECT
! - If Z1$ = "P" Goto STRTPRNT
! - If Z1$ = "E" Goto OUTEND
! - Y = Z1$
! - If Y >= 1 And Y <= 2
! -   If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! -   On Y Gosub L_900,L_1200
! -   If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - End If 
! - Goto STDFINALQ
! - RESELECT: Rem
! - Gosub PRNTSCRN
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - For Y = 1 To 2
! -   On Y Gosub L_900,L_1200
! - Next Y
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - Goto STDFINALQ
! - PRNTSCRN: Rem ================================================ screen
! - Print 'CS'
! - Print @0,0;"-mx440a-";@26,0;"MONTHLY PRODUCT REPORT"
! - Print @5,5;"1>  STARTING DATE: ";
! - Print @5,6;"    ENDING   DATE: ";
! - Print @5,8;"2>  STARTING PRODUCT: ";
! - Print @5,9;"    ENDING   PRODUCT: ";
! - Return 
! - PRINT_DEFAULT: Rem
! - K2$ = " ",K2$
! - K3$ = "zzzzzzzzzzzz"
! - SMONTH = BOYDATE$[5,6]
! - SYEAR = BOYDATE$[3,4]
! - SDATE = BOYDATE
! - EMONTH = LONGYEAR$[5,6]
! - EYEAR = LONGYEAR$[3,4]
! - EDATE = ARDATE
! - Print @25,5;'BU';BOYDATE$[5,6];BOYDATE$[3,4];'EU'
! - Print @25,6;'BU';LONGYEAR$[5,6];LONGYEAR$[3,4];'EU'
! - Print @28,9;'BU';K3$;'EU'
! - Return 
! - L_900: Rem GET RANGES
! - J0$ = "2 00042505"
! - J1$[1,2] = BOYDATE$[5,6];J1$[3] = BOYDATE$[3,4]
! - J5$ = "ENTER STARTING (MMYY), <CR> FOR FIRST"
! - Gosub ISINPUT
! - If J4$ <> "" If Len(J4$) < 4
! -   J7$ = "LENGTH SHOULD BE 4 DIGITS"
! -   Gosub ISERRMSG \ Gosub CLEAR_LINES \ Goto L_900
! - End If 
! - K1$ = J$
! - If J$ = "" Let K1$ = BOYDATE Using "&&&&&&"
! - K1$[1,2] = J$[3,4]
! - K1$[3,4] = J$[1,2]
! - X2 = K1$[1,4] \ Gosub CONVERT_YEAR
! - K1$[1,6] = X2 Using "&&&&&&"
! - SMONTH = K1$[5,6]
! - SYEAR = K1$[1,4]
! - SDATE = K1$[1,6]
! - If SMONTH < 1 Or SMONTH > 12 Goto NOTVALID
! - If SYEAR > ARYEAR Or SYEAR < (ARYEAR - 1) Goto NOTVALID
! - If SDATE < BOYDATE Or SDATE > ARDATE Goto NOTVALID
! - L_940: Rem ending date
! - J0$ = "2 00042506" \ J1$ = LONGYEAR$[5,6] \ J1$[3] = LONGYEAR$[3,4]
! - J5$ = "ENDING  (MMYY), <CR> FOR LAST"
! - Gosub ISINPUT
! - If J4$ <> "" If Len(J4$) < 4
! -   J7$ = "LENGTH SHOULD BE 4 DIGITS"
! -   Gosub ISERRMSG \ Gosub CLEAR_LINES \ Goto L_940
! - End If 
! - K1$ = J$
! - If J$ = "" Let K1$ = ARDATE Using "&&&&&&"
! - K1$[1,2] = J$[3,4]
! - K1$[3,4] = J$[1,2]
! - X2 = K1$[1,4] \ Gosub CONVERT_YEAR
! - K1$[1,6] = X2 Using "&&&&&&"
! - EMONTH = K1$[5,6]
! - EYEAR = K1$[1,4]
! - EDATE = K1$[1,6]
! - If EMONTH <= 0 Or EMONTH > 12 Goto NOTVALID
! - If EYEAR > ARYEAR Or EYEAR < (ARYEAR - 1) Goto NOTVALID
! - If EDATE < SDATE Or EDATE > ARDATE Goto NOTVALID
! - K1$ = " ",K1$ \ If J2 If Not(J8) Print #0;"\14\";
! - Return 
! - CLEAR_LINES: Rem after the error msg window displays it leaves behind garbage
! - Print @0,10;'CL';
! - Print @0,11;'CL';
! - Print @0,12;'CL';
! - Return 
! - NOTVALID: J7$ = "INVALID ENTRY" \ Gosub ISERRMSG \ Gosub CLEAR_LINES \ Goto L_900
! - L_1200: Rem "Product Range
! - J5$ = "ENTER STARTING PRODUCT CODE, <CR> FOR FIRST"
! - J0$ = "2 00122808" \ J1$ = "            "
! - Gosub ISINPUT \ K2$ = J$
! - L_1300: J5$ = "ENDING   PRODUCT CODE, <CR> FOR LAST"
! - J0$ = "2 00122809" \ J1$ = "zzzzzzzzzzzz"
! - Gosub ISINPUT \ K3$ = J$
! - If K2$ <= K3$
! -   K1$ = K2$
! -   Goto L_1350
! - End If 
! - J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!"
! - Gosub ISERRMSG \ Gosub CLEAR_LINES \ Goto L_1300
! - L_1350: Return 
!
! *** Process Section
STRTPRNT: Rem
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
!
If j8 ! dx xml headings
  tmp$ = "ITEM CODE",fdel$,"DESCRIPTION",fdel$
  If P9$[26,26] = "Y" Let tmp$ = tmp$,"DESCRIPTION #2",fdel$
  tmp$ = tmp$,"SELL U/M",fdel$
  If P9$[40,40] = "Y" Let tmp$ = tmp$,"VENDOR ITEM #",fdel$
  tmp$ = tmp$,"TYPE",fdel$
  X2 = SMONTH ! start month
  For cnt = 0 To 11
    If cnt + X2 > 12 Let X2 = X2 - 12
    tmp$ = tmp$,MONTH_$[(cnt + X2) * 3 - 2,(cnt + X2) * 3],fdel$
  Next cnt
  tmp$ = tmp$,"TOTAL",fdel$
  !
  Call addtostr(e$,rstr$,tmp$ + rdel$)
End If 
!
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #2,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;A$;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2;
gosub get_prodwhse: !                      
if parm[2]=0 goto l_2000: ! discontinued   
Mat S1 = Zer
IF custom_customer$="PCS" and A$[152,155]="TIME" GOTO L_2000:
Mat Read #3,R1,16;S1;
Mat Read #3,R1,0;P$;
If P$[1,12] <> A$[140,151] Let e$ = "PROD IN SPRODSLS='",P$,"'. PROD IN SPROD='",A$[140,151],"'. REC'S CROSSED. " \ Error 10000
S1[0,0] = 0 \ S1[0,1] = 0 \ S1[0,2] = 0
If SMONTH > EMONTH
  For J = 0 To 2 \ For K = SMONTH To 12
      S1[0,J] = S1[0,J] + S1[K,J]
    Next K \ Next J
  For J = 0 To 2 \ For K = 1 To EMONTH
      S1[0,J] = S1[0,J] + S1[K,J]
    Next K \ Next J
Else 
  For J = 0 To 2 \ For K = SMONTH To EMONTH
      S1[0,J] = S1[0,J] + S1[K,J]
    Next K \ Next J
End If 
If SMONTH > EMONTH
  For J = SMONTH To 12 \ S2[J,1] = 0 \ S2[J,2] = 0
    S2[J,1] = FNR(S1[J,1] - S1[J,2])
    If S1[J,1] Let S2[J,2] = FNR((S2[J,1] * 100) / S1[J,1])
  Next J
  For J = 0 To SMONTH - 1 \ S2[J,1] = 0 \ S2[J,2] = 0
    S2[J,1] = FNR(S1[J,1] - S1[J,2])
    If S1[J,1] Let S2[J,2] = FNR((S2[J,1] * 100) / S1[J,1])
  Next J
Else 
  For J = 0 To 12 \ S2[J,1] = 0 \ S2[J,2] = 0
    S2[J,1] = FNR(S1[J,1] - S1[J,2])
    If S1[J,1] Let S2[J,2] = FNR((S2[J,1] * 100) / S1[J,1])
  Next J
End If 
! - Gosub PRINTMESSAGE
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
If SMONTH > EMONTH
  For J = 0 To 2 \ For K = SMONTH To 12
      T9[K,J] = T9[K,J] + S1[K,J]
      T8[K,J] = T8[K,J] + S2[K,J]
    Next K \ Next J
  For J = 0 To 2 \ For K = 0 To EMONTH
      T9[K,J] = T9[K,J] + S1[K,J]
      T8[K,J] = T8[K,J] + S2[K,J]
    Next K \ Next J
Else 
  For J = 0 To 2 \ For K = 0 To 12
      T9[K,J] = T9[K,J] + S1[K,J]
      T8[K,J] = T8[K,J] + S2[K,J]
    Next K \ Next J
End If 
Return 
!
L_4000: Rem TOTAL PRINT
If j8 Return ! dx xml
!
Gosub L_5800
Print #0;"\15\TOTALS\15\"; Tab 5;"UN";
M4$ = M1$ \ M5$ = M2$ \ F = 0 \ Gosub L_4200
Print #0; Tab 5;"$";
F = 1 \ Gosub L_4200
If SMONTH > EMONTH
  For J = SMONTH To 12 \ T8[J,2] = 0
    If T9[J,1] Let T8[J,2] = FNR((T8[J,1] * 100) / T9[J,1])
  Next J
  For J = 1 To EMONTH \ T8[J,2] = 0
    If T9[J,1] Let T8[J,2] = FNR((T8[J,1] * 100) / T9[J,1])
  Next J
Else 
  For J = 0 To 12 \ T8[J,2] = 0
    If T9[J,1] Let T8[J,2] = FNR((T8[J,1] * 100) / T9[J,1])
  Next J
End If 
Print #0; Tab 5;"G/P";
F = 1 \ Gosub L_4300
Print #0; Tab 5;"G/P %";
M4$ = M3$ \ M5$ = M3$ \ F = 2 \ Gosub L_4300
Return 
!
L_4200: Rem STD PRNT
TABS[0] = 10
If SMONTH > EMONTH
  For K1 = SMONTH To 12
    Gosub L_4230
    TABS[0] = TABS[0] + 9
  Next K1
  For K1 = 1 To EMONTH
    Gosub L_4230
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_4290
Else 
  For K1 = SMONTH To EMONTH
    Gosub L_4230
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_4290
End If 
L_4230: Print #0; Using M4$; Tab TABS[0];T9[K1,F]; \ Return 
L_4290: Print #0; Using M5$; Tab TABS[0];T9[0,F]
Return 
!
L_4300: Rem STD PRNT
TABS[0] = 10
If SMONTH > EMONTH
  For K1 = SMONTH To 12
    Gosub L_4325
    TABS[0] = TABS[0] + 9
  Next K1
  For K1 = 1 To EMONTH
    Gosub L_4325
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_4385
Else 
  For K1 = SMONTH To EMONTH
    Gosub L_4325
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_4385
End If 
L_4325: Print #0; Using M4$; Tab TABS[0];T8[K1,F]; \ Return 
L_4385: Print #0; Using M5$; Tab TABS[0];T8[0,F]
Return 
!
L_5000: Rem PRINT LINE
Gosub L_10000 ! convert unit
!
If j8
  tmp1$ = A$[140,151],fdel$,RTrim$(A$[9,38]),fdel$
  If P9$[26,26] = "Y" Let tmp1$ = tmp1$,RTrim$(A$[63,92]),fdel$
  tmp1$ = tmp1$,SUNIT$,fdel$
  If P9$[40,40] = "Y" Let tmp1$ = tmp1$,A$[93,112],fdel$
  !
  tmp$ = tmp1$,"UN",fdel$
  X2 = SMONTH \ F = 0
  For cnt = 0 To 11
    If cnt + X2 > 12 Let X2 = X2 - 12
    tmp$ = tmp$,S1[cnt + X2,F] Using M1$,fdel$
  Next cnt
  tmp$ = tmp$,S1[0,F] Using M2$,fdel$
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  !
  tmp$ = tmp1$," $",fdel$
  X2 = SMONTH \ F = 1
  For cnt = 0 To 11
    If cnt + X2 > 12 Let X2 = X2 - 12
    tmp$ = tmp$,S1[cnt + X2,F] Using M1$,fdel$
  Next cnt
  tmp$ = tmp$,S1[0,F] Using M2$,fdel$
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  !
  tmp$ = tmp1$,"G/P",fdel$
  X2 = SMONTH \ F = 1
  For cnt = 0 To 11
    If cnt + X2 > 12 Let X2 = X2 - 12
    tmp$ = tmp$,S2[cnt + X2,F] Using M1$,fdel$
  Next cnt
  tmp$ = tmp$,S2[0,F] Using M2$,fdel$
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  !
  tmp$ = tmp1$,"G/P %",fdel$
  X2 = SMONTH \ F = 2
  For cnt = 0 To 11
    If cnt + X2 > 12 Let X2 = X2 - 12
    tmp$ = tmp$,S2[cnt + X2,F] Using M3$,fdel$
  Next cnt
  tmp$ = tmp$,S2[0,F] Using M3$,fdel$
  Call addtostr(e$,rstr$,tmp$ + rdel$)
  !
  Return 
End If 
!
Print #0; Tab 1;A$[140,151]; Tab 15;A$[9,38];
If P9$[26,26] = "Y" Print #0; Tab 46;A$[63,92];
Print #0; Tab 78;SUNIT$;
If P9$[40,40] = "Y" Print #0; Tab 90;A$[93,112] Else Print #0;""
Print #0; Tab 5;"UN";
M4$ = M1$ \ M5$ = M2$ \ F = 0 \ Gosub L_5200
Print #0; Tab 5;" $";
F = 1 \ Gosub L_5200
Print #0; Tab 5;"G/P";
F = 1 \ Gosub L_5300
Print #0; Tab 5;"G/P %";
M4$ = M3$ \ M5$ = M3$ \ F = 2 \ Gosub L_5300
Print #0;"\15\";
Return 
!
L_5200: Rem STD PRNT
TABS[0] = 10
If SMONTH > EMONTH
  For K1 = SMONTH To 12
    Gosub L_5230
    TABS[0] = TABS[0] + 9
  Next K1
  For K1 = 1 To EMONTH
    Gosub L_5230
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_5290
Else 
  For K1 = SMONTH To EMONTH
    Gosub L_5230
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_5290
End If 
L_5230: Print #0; Using M4$; Tab TABS[0];S1[K1,F]; \ Return 
L_5290: Print #0; Using M5$; Tab TABS[0];S1[0,F]
Return 
!
L_5300: Rem STD PRNT
TABS[0] = 10
If SMONTH > EMONTH
  For K1 = SMONTH To 12
    Gosub L_5325
    TABS[0] = TABS[0] + 9
  Next K1
  For K1 = 1 To EMONTH
    Gosub L_5325
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_5385
Else 
  For K1 = SMONTH To EMONTH
    Gosub L_5325
    TABS[0] = TABS[0] + 9
  Next K1 \ Goto L_5385
End If 
L_5325: Print #0; Using M4$; Tab TABS[0];S2[K1,F]; \ Return 
L_5385: Print #0; Using M5$; Tab TABS[0];S2[0,F]
Return 
!
L_5800: Rem HEADINGS ROUTINE
If j8 Return ! dx xml
!
J1 = J1 + 6 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(j8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(j8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;CURDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 440A - ";T9$;
Print #0; Tab 44;"P R O D U C T   M O N T H L Y   S A L E S"
Print #0;"\15\";
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 16;"DESCRIPTION"; Tab 75;"SELL U/M";
If P9$[40,40] = "Y" Print #0; Tab 90;"VEND ITEM #" Else Print #0;""
TABS[1] = 16
If SMONTH > EMONTH
  For X9 = SMONTH To 12
    Gosub PRINT_DETAIL
    TABS[1] = TABS[1] + 9
  Next X9
  For X9 = 1 To EMONTH
    Gosub PRINT_DETAIL
    TABS[1] = TABS[1] + 9
  Next X9 \ Goto PRINT_TOT
Else 
  For X9 = SMONTH To EMONTH
    Gosub PRINT_DETAIL
    TABS[1] = TABS[1] + 9
  Next X9 \ Goto PRINT_TOT
End If 
PRINT_DETAIL: Print #0; Tab TABS[1];MONTH_$[X9 * 3 - 2,X9 * 3]; \ Return 
PRINT_TOT: Print #0; Tab TABS[1];"TOTAL";
Print #0;" "
Print #0;"\15\";
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
GET_PRODWHSE: REM LOOK UP PROD GROUP    
LET Kpw$=" ",Kpw$                         
LET WHSE=1                              
LET PARM[2]=1                           
CHK_WHSE: REM                           
IF WHSE>99 RETURN                       
LET Kpw$[1,12]=A$[140,151]               
LET Kpw$[13,14]=WHSE USING "##"          
SEARCH #ch_pw,2,1;Kpw$,Rec_pw,E                  
IF E                                    
  LET WHSE=WHSE+1                       
  GOTO CHK_WHSE:                        
ENDIF                                   
MAT  READ #ch_pw,Rec_pw,846;WHMISC2;            
CHK_PRODGRP: REM                        
LET PARM[0]=0                           
LET PARM[1]=WHMISC2[0]                  
Call ProdGroup(e$,intco,Parm[])
RETURN                         
!
OUTEND: Rem EXIT ROUTINE
! dx close
If j8 !dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
!Call dxclose()
End 
!
! - Print 'CS'
! - Close 
! - Chain "MX000"
!
L_9100: Rem END OF THIS RANGE
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
!
L_10000: Rem CONVERT
CNVTU[0] = 0
CNVTU[1] = PFU1[9]
CNVTU[2] = 1
For X = 0 To 12
  CNVTA = S1[X,0] \ If Not(CNVTA) Let AMOUNT = 0 \ Goto L_10070
  Gosub L_20000
L_10070: S1[X,0] = AMOUNT
Next X
SUNIT$ = "ERR." \ If PFU1[9] = -1 Let SUNIT$ = "CWT "
If PFU1[9] = -2 Let SUNIT$ = "LOT "
If PFU1[9] = -3 Let SUNIT$ = "LB  "
If PFU1[9] > 0 Mat Read #4,PFU1[9],10;SUNIT$;
Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 ! dx change  If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG ! - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
CONVERT_YEAR: Rem
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
!
PRINTMESSAGE: Rem
If Not(SCRPRT)
  ! - Print @0,22;"Printing, Please Wait...";
  PCTR = PCTR + 1
  If Not(Fra(PCTR / 50))
    ! - Print Using "#######";@25,22;PCTR;" Records Printed";
    ! - Print Using "   Page ####";J2;
  End If 
End If 
Return 
!
! - Rem {begin rtn.input.s}
! - ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 >= 3 If J0 <= 4
! -   If J0 = 3 Let J2$ = "#",J2$
! -   If J0 = 4 Let J2$ = "-",J2$
! -   J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - End If 
! - J1$[J3 + 1] = ""
! - If J0 < 3 Goto ISENTER
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 <> 6
! -   If J0 = 5
! -     J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! -     J1$ = J9$[4,7],J9$[2,3],"  "
! -   Else 
! -     J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! -     If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
! -   End If 
! - End If 
! - ISENTER: Rem
! - If J5 < Msc(34) - 1
! -   Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - End If 
! - Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
! - Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
! - Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) > J3
! -   J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
! - End If 
! - J9$ = J4$
! - If Not(Len(J9$))
! -   If J0$[3,4] = "00"
! -     J9$ = J1$
! -   Else 
! -     J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - End If 
! - For J8 = 1 To Len(J9$)
! -   If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
! -     J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
! -     Gosub ISERRMSG \ Goto ISENTER
! -   End If 
! - Next J8
! - On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
! - ISTYPE1: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto ISOUT
! - ISTYPE3: Rem
! - J9 = 0
! - X1 = 0
! - For J8 = 1 To Len(J9$)
! -   If J0 = 4 And Not(X1)
! -     If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
! -       X1 = 1
! -       Goto ISNCONT1
! -     End If 
! -   End If 
! -   If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
! -   If J9$[J8,J8] = " " Goto ISNCONT1
! -   If Len(J0$) > 10
! -     J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
! -   End If 
! -   If J9$[J8,J8] <> "." Goto ISNUMERR1
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
! -   If J9 Goto ISNUMERR1
! -   J9 = 1
! - ISNCONT2: Rem
! -   X1 = 1
! -   If J9 Let J9 = J9 + 1
! - ISNCONT1: Rem
! - Next J8
! - If J0 = 5 Goto ISTYPE5
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
! - ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - ISDECERR: Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
! - If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
! - If J9[1] = 0 Goto ISDTERR
! - On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
! - On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
! - Goto ISDTERR
! - ISMO30: If J9[1] > 30 Goto ISDTERR
! - ISMO31: If J9[1] > 31 Goto ISDTERR
! - Goto ISDTOUT
! - ISMOFEB: If J9[1] > 29 Goto ISDTERR
! - If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
! -   If J9[1] > 28 Goto ISDTERR
! - End If 
! - ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
! - J$ = X$ \ J3 = 8 \ Goto ISOUT
! - ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
! - ISTYPE6: Call String(1,J9$)
! - If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
! - Gosub ISERRMSG \ Goto ISENTER
! - ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
! - ISERRMSG: X1 = Len(J7$)
! - Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - Print 'K1'; \ Window Close \ Return 
! - 
! - !
! - ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - If Not(X2) Let X$ = "        "
! - Return 
! - !
! - ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
! - X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
! - X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
! - Return 
! - Rem {end rtn.input.s}
! - Rem {begin rtn.error.s}
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
!Include src/callmainerrnet.inc
!include "src/callmainerrnet.inc"
! main error routine
If Spc(8) <> 10000
  Call programdump()
  Call suberr(e$,Spc(8),Spc(10),Msc$(2))
End If 
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[],rstr$)
End 
