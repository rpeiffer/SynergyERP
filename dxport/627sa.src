! >>> Program 627sa
!
! description  spread sheet INCOME STATEMENT spread sheet format
!
! loadsave -w -n 100,10 -o prog/dxport/627sa.dl4 src/627sa.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 14, 2006  15:08:05
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/ap/gl627sa.src (univ2) [txc] {52462}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String
!!Option Default Dialect IRIS1
Rem GL627SA - INCOME STATEMENT SPREAD SHEET (SPREAD SHEET FORMAT)
If Err 0 Gosub ERR_TRAP
Dim A$[60],A1$[36],B$[139],B1$[4],B2$[4],C1$[10],ACPER$[5],DESC$[50]
Dim D$[30],F$[16],F9$[2],J$[20],M$[15],N$[4],P$[30],MASK$[8],M1$[15],PMASK$[15]
Dim K$[50],K2$[20],K3$[20],K4$[20],K5$[20],K6$[20],K7$[29],K9$[50]
Dim T$[10],T1$[10],T2$[10],T9$[10],X$[5],2%
Dim 1%,D5,E,F9[1],I,I9,L,L9,P,S1[1],S9[5],X9,PRTACCT
Dim 2%,B1,C1[1],C9,D6[1],G8[3],J2,J8,J9,N,P1[1],R[9],T[10],W,X,X1,X2,X3
Dim 2%,PLEN,P6[1]
Dim 4%,D3
Dim 4%,T0[14],T9[10,14],T8
Dim REPTYPE$[1],PERIOD$[4]
dim groupid$[1]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[100]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]

dim custom_customer$[30]

!
Def FNW(H) = Sgn(H) * (Int(Abs(H) + .5))
!M$ = "############"
!M1$ = "-----------#"
M$ = "############" !.##"
M1$ = "-----------#"!.##"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 \ If J8 Let J9 = 24
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Mat Read #ctlc,115,60;custom_customer$;           
custom_customer$ = UCase$(Trim$(custom_customer$))
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"627a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
Mat Read #1,51,6;S9;
If s9<>0
	call dxget("CLIENT",tmp$) \ W = tmp$ !!CLIENT
else
	let w=1
endif
let d6=0 ! no dept #
if s9[2]<>0
	call dxget("PRINTDEPT",tmp1$) !!PRINT BY DEPARTMENT
	if rtrim$(tmp1$)<>""
		call dxget("DEPT",tmp$) \ D6 = tmp$ !!PRINT BY DEPARTMENT
		if d6<=0 or d6>99
			Let e$ = "Invalid Department "+str$(d6)+" Submitted! " \ error 10000
		endif
	endif
endif
call dxget("PROFTIBYCENTER",tmp2$) \ if tmp2$ = "" let tmp2$ = "N"
call dxget("PROFITCENTER",tmp$) \ P6 = tmp$
call dxget("CURRPERIOD",tmp$) \ CPER[0] = tmp$ !!Starting Current Accounting Period (MMYY)
call dxget("BALANCES",tmp$) \C9=tmp$ !1 monthly, 2 yearly
call dxget("PRTOPTION",REPTYPE$) \C1$[2,2]=rtrim$(ucase$(REPTYPE$)) !!Report Type:  D=Detail,  S=Summary
prtacct=0
if c1$[2,2]="D"
	call dxget("PRTACCT",tmp$) \ if rtrim$(tmp$) = "" Let PRTACCT = 0 else Let PRTACCT = 99 !!print general ledger account numbers (Y/N)
Else
	let prtacct=0
endif
!!call dxget("PRTACCT",tmp$) \ if tmp$ = "" Let PRTACCT = 0 else Let PRTACCT = 99 !!print general ledger account numbers (Y/N)
call dxget("SUPRZ",tmp$) !\ if tmp$ = "" Let SUPRZ = 0 else Let SUPRZ = 99 !!suppress print of zero account balances (Y/N)
if rtrim$(tmp$)="" let s1[1]=0 else let s1[1]=99
!
Mat Read #1,51,6;S9;
!G8[0] = Spc(5) \ G8[1] = Int(G8[0] / 16384)
!G8[2] = Int((G8[0] - G8[1] * 16384) / 64) \ G8[3] = G8[0] - (G8[1] * 16384 + G8[2] * 64)
!C1$[1,1] = G8[2] Using "#" \ C1$[2,2] = G8[3] Using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
C1$[1,1] = intco Using "#"
C1$[2,2]=groupid$
F$ = "1/ACF",C1$[1,2] \ Call FindF(F$,B1) 
If Not(B1) Let e$ = "File ",F$," not found!" \ error 10000
Open #2,F$
!!L_465: Print 'CS'; Tab 23;"INCOME STATEMENT";
!!If Not(S9) Let W = 1 \ Goto L_495
!!L_475: Print @0,1;'CL';"CLIENT # ";
!!Input Len (16384 + 4);""J$
!!Call String(1,J$)
!!If J$ = "" Goto OUTEND
!!If J$ = "E" Goto OUTEND
If Not(S9) Let W = 1 
!!W = J$
K2$ = " ",K2$ \ K2$ = W Using "######"
Search #2,2,1;K2$,R[2],E 
If E Let e$ = "Client not on file!" \ error 10000
Mat Read #2,R[2],0;B$;
!!Print Using "####  ";@0,1;'CL';"CLIENT #";@10,1;W;B$[11,50];
!!If Not(S9) Goto L_560
!!L_535: Print @0,23;'CL';"IS THIS THE CORRECT CLIENT (Y/N) ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "Y" Goto L_560
!!If J$ = "N" Goto L_465
!!Goto L_535
!!L_560: Print @0,23;'CL';
L9 = B$[135,136]
If L9 > 9 Let F9$ = L9 Using "##"
If L9 < 10 Let F9$ = L9 Using "#"
N$ = W Using "####"
For I = 1 To 4
  If N$[I,I] = " " Let N$[I,I] = "."
Next I
F$ = F9$,"/GLM",C1$[1,2],N$
Call FindF(F$,B1) 
If Not(B1) Let e$ = "File ",F$," not found!" \ error 10000
Open #3,F$
If S9[1]
  F$ = F9$,"/GLB",C1$[1,2],N$
  Call FindF(F$,B1)
  If Not(B1)
    S9[1] = 0
  Else 
    Ropen #4,F$
  End If 
End If
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E !!If E Gosub ERR_SEARCH
Mat Read #3,R[3],70;D3;
D5 = (Fra(D3 / 100)) * 100
If D5 <> 14 If D5 <> 39 Let D5 = 39
Dim 4%,A3[D5],A4[D5],B3[D5],2%
Mat Read #3,R[3],70;A3;
Mat Read #3,R[3],70;B3;
Rem OPEN DATA FILE
!J2 = Spc(5)
!COMP = Int((J2 - Int(J2 / 16384) * 16384) / 64)
!J$ = Int((J2 - Int(J2 / 16384) * 16384) / 64) Using "CNTRL#"
let comp=intco
For J2 = 5 To 6
  Read R
  If Not(R) Goto L_890
  Read #1,88,R;J$;
  Open #J2,J$
L_890: Next J2
Data " 192"," 128"
If Not(S9[3]) Goto L_1000
J$ = COMP Using "1/GLPCTR#" \ Open #7,J$
PLEN = S9[5] - S9[4] + 1 \ If PLEN < 1 Let PLEN = 1
MASK$[1,PLEN] = "#",MASK$[1,PLEN]
L_1000: Rem PRINT SELECTION OPTIONS
L = 99 \ S1 = 1 \ A$ = " ",A$ !\ D6 = 0
!!Print 'CS'; Tab 23;"INCOME STATEMENT - SPREAD SHEET";
!!Print Using "####  ";'CL';@0,1;"CLIENT #";@10,1;W;B$[11,50];
!!L_1040: Print @0,3;'CL';"CURRENT PERIOD(YYMM) OR  E: TO END "; \ Input Len (16384 + 4);""B1$
!!Call String(1,B1$)
!!If B1$ = "E" Goto OUTEND
!!Gosub L_6805
!!Goto L_1040
errflag = 0
tmp1$ = CPER[0] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ B1$ = PERIOD$
Gosub VERIFYPERIOD
If errflag
  e$ = "Invalid ending accounting period"
  if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
  error 10000
End if
B2$ = B1$
!!Gosub L_6500
!1Goto L_1040
C1[1] = X3 + 1
C1[0] = X1
!!L_1200: Print @0,4;'CL';"Select Balances to print  1: Monthly,  2: Yearly,  E: End ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$[1,1] = "E" Goto OUTEND
!!C9 = J$
!!If C9 < 1 Goto L_1200
!!If C9 > 2 Goto L_1200
!!L_1251: Print @0,6;'CL';"Report Print Option:  S: Summary,  D: Detail,  E: End ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$[1,1] = "E" Goto OUTEND
!!If J$[1,1] = "D" Let C1$[2,2] = "D" \ Goto L_1260
!!If J$[1,1] = "S" Let C1$[2,2] = "S" \ Goto L_1260
!!Goto L_1251
!!L_1260: Rem
!!If C1$[2,2] = "D"
!!  Print @0,8;'CL';"Print G/L Account Numbers (Y/N)  E: End ";
!!  Input Len (16384 + 1);""J$
!!  Call String(1,J$)
!!  If J$[1,1] = "E" Goto OUTEND
!!  If J$[1,1] <> "Y" And J$[1,1] <> "N" Goto L_1260
!!  PRTACCT = 0 \ If J$[1,1] = "Y" Let PRTACCT = 99
!!Else 
!!  PRTACCT = 0
!!End If 
!!D6 = 0
!!If Not(S9[2]) Goto L_1400
!!L_1310: Print @0,23;'CL';"PRINT FOR A DEPARTMENT (Y/N) OR  E: ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "N" Goto L_1400
!!If J$ <> "Y" Goto L_1310
!!L_1335: Print @0,23;'CL';@0,10;"DEPARTMENT    "; \ Input Len (16384 + 2);""J$
!!If Len(J$) > 2 Goto L_1335
!!D6 = J$
!!If Not(D6) Goto L_1310
IF S9[2]<>0 and D6<>0 !  If tmp1$<>""
 K6$ = " ",K6$ \ K6$[1,4] = W Using "####" \ K6$[5,6] = D6 Using "##"
 Search #6,2,1;K6$,R[6],E 
 If E Let e$ = "Department not found!" \ error 10000
 Mat Read #6,R[6],8;D$;
end if
!!L_1400: P6 = 0 \ If Not(S9[3]) Goto L_1500
!!L_1405: P6 = 0 \ Print @0,23;'CL';"PRINT FOR A PROFIT CENTER (Y/N) OR  E: ";
!!L_1410: Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "N" Goto L_1500
!!If J$ <> "Y" Goto L_1405
!!L_1425: P6 = 0 \ Print @0,23;'CL';@0,12;"PROFIT CENTER "; \ Input Len (16384 + 1);""J$
!!P6 = J$ \ If Not(P6) Goto L_1410
!!K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
!!Search #7,2,1;K7$,R[7],E \ If Not(E) Goto L_1460
!!If E > 1 Gosub ERR_SEARCH
!!Print @0,23;'CL RB';"PROFIT CENTER NOT FOUND"; \ Signal 3,20 \ Print @0,23;'CL';
!!Goto L_1425
!!L_1460: Mat Read #7,R[7],8;P$;
!!Print @30,12;P$[1,30];
  If tmp2$ = "Y" 
    If P6 
      K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
      Search #7,2,1;K7$,R[7],E \ If E let e$ = "Profit center not found" \ error 10000
      Mat Read #7,R[7],8;P$;
    End if
  Else
    P6 = 0
  End if
!!L_1500: Rem
!!L_1660: Print @0,19;'CL';"Suppress Zero Account Balance Printing (Y/N) or  E: to end ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!S1[1] = 1 \ If J$ = "Y" Goto L_1700
!!S1[1] = 0 \ If J$ = "N" Goto L_1700
!!Goto L_1660
!!L_1700: Print @0,23;'CL';"Enter  S: to restart,  E: to end, or <CR> to print ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "" Goto L_1800
!!If J$ = "E" Goto OUTEND
!!If J$ = "S" Goto L_1000
!!Goto L_1700
!!L_1800: Print 'CS CR';"NOW CLEARING SORT FILE........PLEASE WAIT." \ Signal 3,0
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
K9$ = ""
L_1815: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_1845
!!If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R[9],E !!If E Gosub ERR_SEARCH
Goto L_1815
L_1845: !!Print 'CR';"NOW SORTING.......PLEASE WAIT." \ Signal 3,0
For X = 0 To 10
  T[X] = 0
Next X
K3$ = " ",K3$
L_1865: Search #3,3,1;K3$,R[3],E \ If E = 2 Goto L_1950
!!If E Gosub ERR_SEARCH
Gosub L_8000
If A1$[13,13] <> "0" Goto L_1865
If A1$[14,14] = "I" Goto L_1915
If A1$[14,14] = "E" Goto L_1915
If A1$[14,14] = "R" Goto L_1915
If A1$[14,14] = "O" Goto L_1915
Goto L_1865
L_1915: If Not(D6) Goto L_1921
D6[1] = A1$[8,9] \ If D6[1] <> D6 Goto L_1865
L_1921: If Not(P6) Goto L_1925
P6[1] = A1$[S9[4],S9[5]] \ If P6[1] <> P6 Goto L_1865
L_1925: K9$ = " ",K9$ \ K9$[1,10] = T1$[1,10]
K9$[11,19] = A1$[1,9] \ K9$[20,20] = "3"
R[9] = R[3]
Search #9,4,1;K9$,R[9],E !!If E Gosub ERR_SEARCH
Goto L_1865
L_1950: Rem SORT PLANDIN FILE
K5$ = ""
L_1960: Search #5,3,1;K5$,R[5],E \ If E = 2 Goto L_1995
!!If E Gosub ERR_SEARCH
Mat Read #5,R[5],70;T$;
Mat Read #5,R[5],60;T2$; \ If T2$[7,7] <> "I" Goto L_1960
F9[1] = 0 \ If C1$[2,2] <> "S" Goto L_1980
If T$[3,3] = " " Goto L_1980
K$ = " ",K$ \ K$[1,10] = K5$[1,10]
Search #9,3,1;K$,R[9],E \ If E = 2 Goto L_1980
!!If E Gosub ERR_SEARCH
If K$[1,10] = K5$[1,10] Let F9[1] = 1
L_1980: K9$ = " ",K9$ \ K9$[1,10] = T$[1,10] \ K9$[20,20] = "5"
K9$[19,19] = F9[1] Using "#"
Search #9,4,1;K9$,R[5],E !!If E Gosub ERR_SEARCH
Goto L_1960
L_1995: Gosub L_6200
!!Print 'CR';"NOW PRINTING....PLEASE WAIT." \ Signal 3,0
K9$ = "";P = 0
if j8  !!!head XML
  tmp$ = "CLIENT NUMBER ",fdel$
  tmp$ = tmp$, "CLIENT NAME",fdel$
  If D6 let tmp$ = tmp$, "DEPARTMENT",fdel$
  if p6 let tmp$ = tmp$, "PROFIT CENTER",fdel$
  tmp$ = tmp$, "FOR PERIOD",fdel$
  If PRTACCT let tmp$ = tmp$, "ACCT#",fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$
  for x = c1[1] to c1[0]
   x$=b3[x] using "&&&&"
   tmp$=tmp$,x$[3,4],"/",x$[1,2],fdel$
  next x
  if c9=1 let tmp$=tmp$,"END BAL",fdel$
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if
!!!
L_2050: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
If T9$ <> "" If T9$[1,10] <> K9$[1,10] Gosub L_4000
T9$[1,10] = K9$[1,10]
T = K9$[20,20]
If T = 3 Goto L_2200
R[5] = R[9]
F9 = 99
F9[1] = K9$[19,19]
If F9[1] Goto L_2140
Gosub L_8300
Gosub L_5500
F9 = 0
L_2140: For V9 = 2 To 10
  If K9$[V9,V9] = " " Let T[V9 - 1] = R[5] \ Goto L_2190
Next V9
T[10] = R[5]
L_2190: Goto L_2050
L_2200: Rem READ G/L MASTER FILE
R[3] = R[9]
Gosub L_8000
For X = 0 To 14
  T0[X] = 0
Next X
If C9 <> 1 Goto L_2400
I = 1
For X = C1[1] To C1[0]
  T0[I] = A3[X]
  I = I + 1
Next X
T0[14] = T0[0]
For X = 1 To 13
  T0[14] = T0[14] + T0[X]
Next X
Goto L_2450
L_2400: Rem YEAR TO DATE BALANCES
I = 1
For X = C1[1] To C1[0]
  T0[I] = T0[I - 1] + A3[X]
  I = I + 1
Next X
L_2450: If Not(S1[1]) Goto L_2500
For X = 0 To 14
  If T0[X] Goto L_2500
Next X
Goto L_2050
L_2500: Rem PRINT BALANCES
If F9[1] Goto L_2520
Gosub L_5800
Gosub L_5000
L_2520: For I9 = 1 To 10
  For X = 0 To 14
    If T[I9] Let T9[I9,X] = T9[I9,X] + T0[X]
  Next X
Next I9
Goto L_2050
L_4000: Rem PRINT TOTAL SECTION FOR LEVELS
For I9 = 10 To 1 Step -1
  If Not(T[I9]) Goto L_4065
  If K9$[1,I9] = T9$[1,I9] Goto L_4070
  R[5] = T[I9] \ Gosub L_8300
  For X = 0 To 14
    T0[X] = T9[I9,X]
  Next X
  Gosub L_4500
  For X = 0 To 14
    T9[I9,X] = 0
  Next X
  T[I9] = 0
L_4065: Next I9
If K9$[1,1] <> T9$[1,1] Let L = 99
L_4070: Return 
L_4500: Rem PRINT TOTALS HERE
If Not(F9[1]) Goto L_4515
If Not(S1[1]) Goto L_4525
For X9 = 1 To 6
  If T0[X9] Goto L_4525
Next X9
Goto L_4592
L_4515: Gosub L_5800
if not(j8) Print #0;" "
L_4525: Gosub L_5800
If F9[1] Let A$[31,60] = A$[1,30]
if not(j8)
If PRTACCT Print #0;",";
DESC$ = A$[31,58] \ Gosub CHKCOMMA
Print #0;DESC$;",";
I = 1
For X = C1[1] To C1[0]
  PMASK$ = M$ \ If (T0[I] * S1) < 0 Let PMASK$ = M1$
  Print #0; Using PMASK$; Tab (20 + (I * 12));FNW(T0[I] * S1 * I8);",";
  I = I + 1
Next X
PMASK$ = M$ \ If (T0[14] * S1) < 0 Let PMASK$ = M1$
If C9 = 1 Print #0; Using PMASK$; Tab (20 + (I * 12));FNW(T0[14] * S1 * I8);",";
Print #0;""
If F9[1]=0 Print #0;"" \ L = L + 1
end if !not j8
L_4592: F9[1] = 0
Return 
L_5000: Rem PRINT LINES
if j8
 let tmp$=B$[3,8],fdel$,B$[11,50],fdel$ !!client  # , name
 if d6 let tmp$=tmp$,d$[1,30],fdel$ !dept
 if p6 let tmp$=tmp$,p$[1,30],fdel$ !profit center
 tmp$=tmp$,b2$[3,4],"/",b2$[1,2],fdel$ !period
 If PRTACCT let tmp$=tmp$,A1$[2,9],fdel$ !acct
 tmp$=tmp$,a1$[15,36],fdel$ !desc
 !m$ = "--------#"
 m$ = "------------"!.##"
 I = 1
 for x = c1[1] to c1[0]
  tmp$=tmp$,FNW(T0[I] * S1 * I8) using m$,fdel$
  I = I +1
 next x
 If C9 = 1 tmp$=tmp$,FNW(T0[14] * S1 * I8) using m$,fdel$
 Call addtostr(e$,rstr$,tmp$+rdel$)
end if
if not(j8)
If PRTACCT Print #0;A1$[2,9];",";
DESC$ = A1$[15,36] \ Gosub CHKCOMMA
Print #0;DESC$;",";
I = 1
For X = C1[1] To C1[0]
  PMASK$ = M$ \ If (T0[I] * S1) < 0 Let PMASK$ = M1$
  Print #0; Using PMASK$; Tab (20 + (I * 12));FNW(T0[I] * S1 * I8);",";
  I = I + 1
Next X
PMASK$ = M$ \ If (T0[14] * S1) < 0 Let PMASK$ = M1$
If C9 = 1 Print #0; Using PMASK$; Tab (20 + (I * 12));FNW(T0[14] * S1 * I8);",";
Print #0;""
end if !not j8
Return 
L_5500: Rem PRINT HEADINGS
If A$[1,5] = "     " Return 
Gosub L_5800
if not(j8)
If PRTACCT Print #0;",";
DESC$ = A$[1,30] \ Gosub CHKCOMMA
Print #0; Tab 2;DESC$;",";
Print #0;" " \ L = L + 1
end if !not j8
Return 
L_5800: if j8 return
L = L + 1
If L < J9 Return 
If P Return 
P = P + 1
If P > 1 Print #0;"\14\";
!!If J8 If P > 1 Input "PRESS <CR> TO CONTINUE: "J$ \ Print 'CS';
Print #0;"\15\";
Print #0; Tab 40;"CLIENT: ";",";B$[3,8];",";B$[11,50]
If D6 Print #0; Tab 2;D$[1,30];",";
If C9 <> 1 Print #0; Tab 35;"Y E A R L Y  ";",";
If C9 = 1 Print #0; Tab 35;"M O N T H L Y  ";",";
Print #0;"C O M P A R A T I V E  I N C O M E  S T A T E M E N T";",";
Print #0; Using "PAGE ###"; Tab 115;P
If P6 Print #0; Tab 2;P$[1,30];",";
Print #0; Tab 50;"FOR THE PERIOD OF ";B2$[3,4];"/";B2$[1,2];",";
If I8 <> 1 Print #0; Tab 100;"000's omitted";",";
Print #0;""
Print #0;" "
If PRTACCT Print #0;",";
Print #0;",";
I = 1
For X = C1[1] To C1[0]
  X$ = B3[X] Using "&&&&"
  ACPER$ = X$[3,4],"/",X$[1,2]
  Print #0; Tab (20 + (I * 12));"   ";ACPER$;",";
  I = I + 1
Next X
If C9 = 1 Print #0; Tab (20 + (I * 12));" END BAL";",";
Print #0;""
Print #0;" "
L = 9
If P <= 1 Goto L_5995
If F9 = 99 Goto L_5995
If A$[1,5] = "     " Goto L_5995
If PRTACCT Print #0;",";
DESC$ = A$[1,30] \ Gosub CHKCOMMA
Print #0; Tab 2;DESC$;",";
If P > 1 Print #0;" (CONT.)"
Print #0;" "
L = L + 2
L_5995: Return 
L_6200: Rem CALCULATE HIGHEST $ BASED UPON TOTAL ASSETS
I8 = 1
Return 
K3$ = " ",K3$ \ K3$[1,1] = "I"
Search #3,2,1;K3$,R[3],E \ If E Return 
Mat Read #3,R[3],70;A3;
T8 = 0
For X = 0 To C1[1] - 1
  T8 = T8 + A3[X]
Next X
T8 = 0
If Abs(Int(T8)) > 9999999 Let I8 = .001 \ Return 
For X = C1[1] To C1[0]
  T8 = T8 + A3[X]
  If C9 <> 1 If Abs(Int(T8)) > 9999999 Let I8 = .001 \ Return 
Next X
If Abs(Int(T8)) > 9999999 Let I8 = .001
Return 
VERIFYPERIOD: Rem entered account period
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99" Goto PRNTBADDATE
If PERIOD$[1,2] <> PERIOD$[3,4]
  If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12" Goto PRNTBADDATE
End If 
N = Int(D3 / 100)
B1 = PERIOD$
For X = 1 To D5
  If X <> 13 and X <> 26 and X <> 39
    If A3[X] = B1 Goto PERIODFND
  End If 
Next X
errflag = 1
!!Print @0,23;'CL RB';"Accounting Period Not Found "; \ Signal 3,30
!!Print @0,23;'CL';
Return 
PERIODFND: X1 = X
If X1 < N + 2 Let X3 = 0
If X1 > N + 1 Let X3 = N + 1
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 2
Return 
!!Return 1
PRNTBADDATE: Rem  print invalid date entered
errflag = 2
!!Print @0,23;'CL RB';"Invalid Accounting Period "; \ Signal 3,15
!!Print @0,23;'CL';
Return
L_6900: Rem GET ACCT PERIODS
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E !!If E Gosub ERR_SEARCH
Mat Read #3,R[3],70;D3;
Mat Read #3,R[3],70;A3;
Return 
L_8000: Rem READ GLM
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],48;T1$;
Mat Read #3,R[3],70;A3;
Return 
Mat Read #4,R[4],70;A4;
Return 
L_8300: Rem READ PLANDIN
Mat Read #5,R[5];A$;
Mat Read #5,R[5],70;T$; \ Mat Read #5,R[5],60;T2$;
S1 = 1 \ If T2$[8,8] = "Y" Let S1 = -1
Return 
CHKCOMMA: Rem check for comma in description and change to '
For CTR = 1 To Len(DESC$)
  If DESC$[CTR,CTR] = "," Let DESC$[CTR,CTR] = "'"
Next CTR
Return 
OUTEND: !!If J8 Print @0,23;'CL';
!!If J8 Input "PRESS <CR> TO CONTINUE: "J$
!!Chain "MX000C"
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"627sa.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
Try Call dxclose() Else Rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
L_9100: K9$ = " ",K9$
Gosub L_4000
Gosub L_6900
!!If J8 Print @0,23;'CL';"PRESS <CR> TO CONTINUE: "; \ Input ""J$
Goto OUTEND

