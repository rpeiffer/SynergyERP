! libcachelist.lib
!
! supporting library of file sends list routines for browser
!
! loadsave -w -n 100,10 -o prog/dxport/libcachelist.lib src/libcachelist.src
!
! 1.0 04/29/2011 - sends full list to web so they can cache it
!  CALLED FROM "FMMENU" as a program
!  Notes: each action1 will open it's own files
!  added 08/2011 - maxcnt is max sent at a time + add starting code
!                  so that blocks can be sent instead of all on file
!					dim rstr$ at max now (70 chars/rec * maxrec) + headers
include "src/copyright.inc"
!
! ACTION1's for list library
!  S	CCUSTLIST - customer file send
!  S	CPRODLIST - product file send - not programmed (prodgrp handling?) need ordtype!
!  S	CVENDLIST - Vendor file send
!
External Lib "libgeneral.lib"
Declare External Sub SubErr,GetDelimiters,CreateNetStatus

External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Declare External Function GetUIDRec,clrtxtc$
Declare External Sub GetPortDefault

Declare Intrinsic Sub Env,FormatDate,programdump,Stringsearch

Declare Sub SndCusts,SndProds,SndVends
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
OPTION GOSUB NESTING 12  ! Default is 8
try
 Option String Redim is legal ! in case subs dim/use same names
	dim action$[30],options$[30],userid$[10],b$[200],Action1$[30],Action2$[30],3%
	dim Message$[200],WebStr$[600],P9$[50],P60$[50],p61$[256]
	Dim 1%,maxcnt \ maxcnt=7000  ! 200 test
	! dim List$[maxcnt+5,100] ! for .net (NOT USED HERE)
	Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[500000],tmp$[1200]
	dim tmp2$[100],tmp3$[100],BCode$[20]
	Dim 3%,R[99],tmpcnt,row

	b$=" ",b$
 !
 ! call dxopen() ! here for standalone
 !
 ! call dxsave(0,"tmp/lcachein.txt!")
 !
 Call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
 action$=UCase$(action$)
 action$=RTrim$(Action$) ! "trim spaces from end
 action1$=UCase$(action1$)
 action1$=RTrim$(Action1$) ! "trim spaces from end
 action2$=UCase$(action2$)
 action2$=RTrim$(Action2$) ! "trim spaces from end
 Mat read #CTLC,19,50;P9$;
 Mat read #CTLC,60,50;P60$;
 Mat read #CTLC,61,0;P61$;
 returnstatus=0
 message$="Action 1 not found"
 maxrec=maxcnt ! max recs per chunk
 call dxget("BEGCODE",BCode$) ! for chunking it - where left off to start next chunk
 Select case action1$
	case "CCUSTLIST" ! customer #,name,slsm,div,slsgrp		doc=UserCntrl-GetCustList.doc
	! let's use subroutines
		returnstatus=1
		Message$="OK"
		call Sndcusts()
		! end of custlist
	Case "CPRODLIST" ! product								doc=UserCntrl-GetProdList.doc
		! sub
		returnstatus=1
		message$="OK"
		call sndprods()
		! end of prodlist
	Case "CVENDLIST" ! Vendors								doc=UserCntrl-GetVendList.doc
		returnstatus=1
		message$="OK"
		call sndvends()
		! end of cvendlist
 End select
 CLSDone: ! finished
	! status section
	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
!
	Call SetOutput(e$,rstr$)
! end of main
else
 include "src/callmainerrnet.inc"
end try
! ---------------------------------------------------------------------
sub sndcusts()
! send every customer - web will filter
! seems to be quicker without the LIST$[] handling
  Try
	CRC=openfile(-1808,Intco) \ if crc=-1 error 42
	SMC=openfile(-1824,Intco) \ if smc=-1 error 42
	CNC=Openfile(-720,intCo) \ If CNC = -1 Error 42 !custnotes
	! dim what we need!
	dim k1$[60],k2$[50],CName$[30],CN$[10]
	Dim k3$[60],x$[10]
	Dim 2%,SCust,C1[12],3%,SGRP,CFIN[8],R[99]
	! clear List$[]
	tmpcnt=maxcnt
	SCust=bcode$
	Webstr$=BSDEL$,"CUSTOMERS",fdel$,rdel$
	call addtostr(e$,rstr$,webstr$)
	webstr$="CUSTID",fdel$,"CUSTNAME",fdel$,"DIV",fdel$
	Webstr$=Webstr$,"SLSPID",fdel$,"SLSGRP",fdel$,"PREMIERCUST",fdel$
	WebStr$=WebStr$,rdel$
	call addtostr(e$,rstr$,webstr$)
	row=2;srow=0
	k1$=" ",k1$ ! we'll use quicker pm way
	if SCust>0 let k1$=SCust using "######"
	CCLLoop: ! loop thru EVERY CUSTOMER
	Search #crc,3,1;k1$,R[2],E \ if e=2 goto SCLDone
	if e
		returnstatus=0
		message$="Search Error "+Str$(E)+" line "+Str$(SPC(10))+" key "+K1$+" program "+MSC$(4)
		goto SCLDone
	Endif
	try ! incase rec not written
		Mat read #crc,r[2],30;CName$;
	else
		goto CCLLoop
	End try
	Mat Read #crc,r[2],142;c1;
	mat read #crc,r[2],544;cfin;
	k2$=" ",k2$
	k2$=C1[2] using "###"
	Search #smc,2,1;k2$,R[3],E
	if not(e)
	  try
		mat read #smc,r[3],916;sgrp;
	  else
		let sgrp=0
	  end try
	Else
		sgrp=0
	Endif
	! add 08/2017 - 62459 premier customer indicator
	k3$=" ",k3$;K3$=K1$ ! custnotes same key as customer
	Search #cnc,2,1;k3$,R[4],E
	if Not(e) ! found it - try to read (avoid rec not written!)
		try
			mat read #cnc,r[4],436;cn$;
		else
			cn$=" ",cn$
		end try
	Else ! not found
		cn$=" ",cn$
	Endif
	clear x$
	x$="N" \ if cn$[1,1]="A" or cn$[1,1]="S" let x$="Y"
	Webstr$=" ",webstr$
	tmp$=clrtxtc$(e$,CName$)
	Webstr$=K1$+fdel$+RTrim$(tmp$)+fdel$
	webstr$=webstr$+Str$(CFIN[4])+fdel$+Str$(c1[2])+fdel$ ! div,slsm
	webstr$=webstr$+Str$(SGRP)+fdel$
	webstr$=webstr$+X$+fdel$ ! 62459 add premier customer Y or N
	webstr$=webstr$+rdel$
	call addtostr(e$,rstr$,webstr$)
	srow=srow+1 
	if srow>=maxrec ! reached the limit allowed
		returnstatus=5 ! to be continued
		message$="BEGCODE="+Trim$(k1$) ! so next mode 3 gets next key
		goto SCLDone
	Endif
	goto CCLLoop
	SCLDone: ! finito
	webstr$=" ",webstr$
	webstr$=esdel$
	call addtostr(e$,rstr$,webstr$)
	try Close #CRC Else rem
	try Close #SMC Else rem
  else
 include "src/callsuberr.inc"
end try
end sub ! sndcusts
!----------------------------------------------------------------------------
Sub SndProds()
! send every single product
 Try
	Dim K1$[50],A$[156],SProd$[12]
	Dim 3%,PRR
	PRC=Openfile(-1792,Intco) \ if prc=-1 Error 42
	! per group - just code & desc 1 is sent
	! Clear List$[] ! runs quicker without List$
	Sprod$=RTrim$(BCode$)
	Webstr$=bsdel$,"PRODUCTS",fdel$,rdel$
	call addtostr(e$,rstr$,webstr$)
	webstr$="PRODID",fdel$,"DESCRIPTION1",fdel$,rdel$ ! that's all folks!
	call addtostr(e$,rstr$,webstr$)
	k1$=" ",k1$
	if sprod$<>"" let k1$[1,12]=sprod$+B$
	srow=0
	PFLoop: ! thru every one (except z z)
	search #prc,3,1;k1$,prr,E
	if e=2 goto SPLDone
	if e
		returnstatus=0
		message$="Search Error "+Str$(E)+" line "+Str$(SPC(10))+" key "+K1$+" program "+MSC$(4)
		goto SPLDone
	Endif
	if k1$[1,4]="Z ZZ" goto PFLoop ! nonstk default - no send
	! I'm betting other exceptions will be added! (Discontinued?)
	try ! prevent "rec not written!"
		Mat Read #prc,prr,0;A$;
	else
		goto PFLoop ! bypass - don't error
	end try
	webstr$=" ",webstr$
	tmp$=clrtxtc$(e$,a$[9,38])
	webstr$=RTrim$(k1$)+fdel$+RTrim$(tmp$)+fdel$
	webstr$=webstr$+rdel$
	call addtostr(e$,rstr$,webstr$)
	srow=srow+1
	if srow>=maxrec ! past the limit
		returnstatus=5 ! 
		message$="BEGCODE="+k1$
		goto spldone
	Endif
	goto PFLoop:
	SPLDone: ! finito
	webstr$=" ",webstr$
	webstr$=esdel$
	call addtostr(e$,rstr$,webstr$)
	try Close #PRC Else rem
 else
 include "src/callsuberr.inc"
end try
end sub ! SndProds
!----------------------------------------------------------------------------
Sub SndVends()
! send every single Vendor
 Try
	Dim K1$[50],A$[264]
	Dim 2%,SVend,3%,VNR
	VNC=Openfile(-2400,Intco) \ if vnc=-1 Error 42
	! per group - just code & name is sent
	! Clear List$[] ! runs quicker without List$
	SVend=BCode$ ! start of chunk
	srow=0
	Webstr$=bsdel$,"VENDORS",fdel$,rdel$
	call addtostr(e$,rstr$,webstr$)
	webstr$="VENDID",fdel$,"VENDORNAME",fdel$,rdel$ ! that's all folks!
	call addtostr(e$,rstr$,webstr$)
	k1$=" ",k1$
	if svend let k1$=svend using "######"
	VFLoop: ! thru every one 
	search #vnc,3,1;k1$,vnr,E
	if e=2 goto SVLDone
	if e
		returnstatus=0
		message$="Search Error "+Str$(E)+" line "+Str$(SPC(10))+" key "+K1$+" program "+MSC$(4)
		goto SVLDone
	Endif
	
	! I'm betting other exceptions will be added!
	try ! vendor has issues with "rec not written?"
		Mat Read #vnc,vnr,0;A$;
	else
		goto VFLoop ! bypass - don't error
	End try
	webstr$=" ",webstr$
	tmp$=clrtxtc$(e$,a$[1,30])
	webstr$=(k1$)+fdel$+RTrim$(tmp$)+fdel$
	webstr$=webstr$+rdel$
	call addtostr(e$,rstr$,webstr$)
	srow=srow+1
	if srow>=maxrec ! reached the limit allowed
		returnstatus=5 ! to be continued
		message$="BEGCODE="+Trim$(k1$) ! so next mode 3 gets next key
		goto SVLDone
	Endif
	goto VFLoop:
	SVLDone: ! finito
	webstr$=" ",webstr$
	webstr$=esdel$
	call addtostr(e$,rstr$,webstr$)
	try Close #VNC Else rem
 else
 include "src/callsuberr.inc"
end try
end sub ! SndVends
!----------------------------------------------------------------------------