! >>> Program 395
!
! description Purchasing Price Variance
!
! loadsave -w -n 100,10 -o prog/dxport/395.dl4 src/395.src
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
!
External Lib "ubsfunc.dl4"
Declare External Sub UTMonths
!
Declare Intrinsic Sub DateToJulian, InpBuf,String,Time,VerifyDate
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim 3%,J,X1,D1[1],UNIT$[10],UNITx$[10]
Dim 2%,B[24],Q0[1]
Dim 2%,X2,1%,F
Dim A$[156],X$[10]
Dim 3%,Q1,Q2,Q3,A9,C9,AMOUNT
Dim U9$[131],U3$[80],W$[60],Y7$[1],Y8$[1],Y$[80]
Dim U5$[50],K1$[50],D8$[12],F$[16],UnitType
Dim W9$[9],T9$[26],T8$[30],SUNIT$[4]
Dim S1$[12],S2$[12],PMASK$[12]
Dim 2%,Q4,1%,a1
Dim 3%,Z,Z1,Z2,Z3,Z4,Z5,Z6,Z7,Z8,Z9
Dim Z$[6]
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
! -  dx add xport reporting code
dim tmp$[400],tmp1$[100]
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="~",EndParam$
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
D = 2
Read #1,3;T8$;
U5$ = ""
Call Time(U5$)
D8$ = U5$[1,12]
L = 99
P = 0
If Err 0 Let P = Spc(8)
N = Chf(0)
L9 = 60
If P Let L9 = 22
If Err 0 Gosub ERR_TRAP
S1$ = " ",S1$
S2$ = "~",S2$
a1 = 1
!
J8 = 0
If Err 0 Let J8 = Spc(8)
J9 = Chf(0) 
If J8 If J8 <> 49 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP

J9 = 55 ! \ If J8 Let J9 = 18
K1$ = " "
J1 = 90 \ J2 = 0
!


Call dxget("U5",S1$)	 
Call dxget("U5b",S2$)		
Call dxget("UNIT1",tmp$) \ UnitType = tmp$ ! beg order
!
S1$ = UCase$(S1$),Blank$
S2$ = UCase$(S2$),EndParam$
!
if S2$<S1$ let e$="Invalid ending code, must be greater than starting code!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$ = bsdel$,"395",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!
!!L = 65
!!P = 0
!!Print 'CS'
!!Print 'CR CR';"ENTER STARTING CODE,  <CR> FOR ALL, OR   E: TO EXIT ";
!!Input ""U5$
!!If U5$ = "E" Goto OUTEND
!!If U5$ = "" Goto L_750
!!S1$ = U5$
!!Print 'CR';"ENTER ENDING CODE, or <CR> FOR LAST ";
!!Input ""U5$
!!If U5$ = "" Goto L_750
!!S2$ = U5$
L_750: Rem OPEN FILES HERE
For K1 = 2 To 23 
  Read J \ If J = -1 Goto L_785
  Read #1,88,J;F$;
  Ropen #K1,F$
L_785: Next K1
!
if j8 ! dx xml headings
  tmp$="STOCK #",fdel$,"DESCRIPTION",fdel$
  tmp$=tmp$,"UM",fdel$,"MB",fdel$,"QTY RECD",fdel$
  tmp$=tmp$,"AVG COST",fdel$,"PO COST",fdel$,"$ VAR",fdel$
  tmp$=tmp$,"% VAR",fdel$,"TOTAL VAR $",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!        
Data "-1","1792","-1","2400","1808","-1","2416","-1","2448","2464"
Data "2432","-1","2480","2512","2336","2528","-1","1728","-1","-1","-1","-1"
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
! - Gosub L_10500  ! this is the code to the third input.
!!Print 'CS';"Printing...please wait"
!!If Err 0 Gosub ERR_ESCAPE
!!If L9 = 22 Print 'CS'
! - Signal 3,0
K1$ = S1$
Search #3,2,1;K1$,R1,E 
If Not(E) Goto L_2010
L_2000: 
Search #3,3,1;K1$,R1,e
If E Goto L_9100
L_2010:
If K1$[1,Len(S2$)] > S2$ Goto L_9100
Mat Read #3,R1,156;B;
If Not(B[10]) Goto L_2000
Read #3,R1,280;C9;
Mat Read #3,R1,256;A;
Mat Read #3,R1,262;Q1;
Mat Read #3,R1,268;Q2;
Mat Read #3,R1,192;Q4;
Mat Read #3,R1,512;PFU1;
Mat Read #3,R1,554;PFU2;
Read #3,R1,358;A9;
Mat Read #3,R1;A$;
If A$[139,139] <> "B" Goto L_2000
Z$ = Z
If C9 <= 0 Let C9 = 1
If B[20] <= 0 Let B[20] = 1
X1 = B[10]
If Not(A9) Let X1 = 0
D1[1] = X1
D1[0] = A[0]
Q3 = D1[1] - Q1 + Q2
Gosub L_2200
Gosub L_5800
Gosub L_5000
Goto L_2000
!
L_2200: Rem VARIANCE CALC
Z1 = A9
Z2 = A9 * B[21]
Z3 = D1[1] \ If Z1 Let Z3 = D1[1] - (Z2 / Z1)
Z5 = 0 \ If D1[1] Let Z5 = Z3 / D1[1] * 100
Z6 = D1[1] * Z1
Gosub L_10000
Z7 = Z7 + Z6
Z8 = Z8 + Z2
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return
U9$[63,75] = Z8 Using "##########.##"
U9$[76,87] = Z7 Using "#########.##"
z9=0
If z7 let Z9 = ((Z7 - Z8) / Z7) * 100
Z8 = Z7 - Z8
U9$[106,111] = Z9 Using "---#.#"
U9$[115,126] = Z8 Using "-,---,--#.##"
For I = 1 To Len(U9$) - 12
  If U9$[I,I + 11] = U3$[1,12] Goto L_4100
Next I
L_4100: U9$[3,14] = "** TOTALS **"
Gosub L_5800
Print #0;" "
Print #0;U9$
U9$ = " ",U9$
Return 
!
L_5000: Rem PRINT LINE
if J8 ! dx xml
  tmp$ = A$[140,151],fdel$
  tmp$ = tmp$,rtrim$(A$[9,38]),fdel$
  tmp$ = tmp$,SUNIT$[1,4],fdel$
  tmp$ = tmp$,A$[139,139],fdel$
  tmp$ = tmp$,Z1 Using "#######",fdel$
  Z9 = 0 \ If Z1 Let Z9 = Z2 / Z1	 
  tmp$ = tmp$,Z9 Using PMASK$,fdel$	 
  tmp$ = tmp$,D1[1] Using PMASK$,fdel$	 
  tmp$ = tmp$,Z3 Using "----#.####"	,fdel$
  tmp$ = tmp$,Z5 Using "---#.#"	,fdel$
  Z = Z6 - Z2
  tmp$ = tmp$,Z Using "-----,--#.##",fdel$	
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
U9$[1,12] = A$[140,151]
U9$[12,41] = A$[9,38]
U9$[48,52] = SUNIT$[1,4]
U9$[54,54] = A$[139,139]
U9$[57,63] = Z1 Using "#######"
Z9 = 0 \ If Z1 Let Z9 = Z2 / Z1
U9$[66,75] = Z9 Using PMASK$
U9$[78,87] = D1[1] Using PMASK$
U9$[92,101] = Z3 Using "----#.####"
U9$[106,111] = Z5 Using "---#.#"
Z = Z6 - Z2
U9$[115,126] = Z Using "-----,--#.##"
Print #0;U9$
U9$ = " ",U9$
Return 
!
L_5800: Rem HEADING ROUTINE
if j8 return 
!
L = L + 1
If L < L9 Return 
U9$ = " ",U9$
If P = 0 Goto L_5845
If L9 <> 22 Goto L_5840
!!Input "\15\PRESS <CR> TO CONTINUE "J$
!!Print 'CS'
L_5840: Print #0;"\14\";
L_5845: P = P + 1
T9$ = "" \ Call Time(T9$)
Print #0;" - 395 - ";T9$; Tab 52;T8$
U9$[2,18] = "DATE ",D8$
U9$[120,128] = P Using "PAGE ###"
U9$[48,95] = "P U R C H A S E   P R I C E   V A R I A N C E   "
Print #0;U9$
Print #0; Tab 58;U5$
Print #0;" "
U9$ = " ",U9$
U9$[2,8] = "STOCK #"
U9$[21,31] = "DESCRIPTION"
U9$[48,49] = "UM"
U9$[53,54] = "MB"
U9$[56,63] = "QTY RECD"
U9$[66,75] = " AVG COST "
U9$[78,87] = "  PO COST "
U9$[92,100] = "  $ VAR  "
U9$[106,111] = "% VAR "
U9$[116,128] = "TOTAL VAR $ "
Print #0;U9$
L = 8
U9$ = " ",U9$
Print #0;U9$
Return 
!
L_9100: Rem OUT
Gosub L_4000
If L9 <> 22 Goto L_9140
!!Input "\15\PRESS <CR> TO EXIT "J$
L_9140: Goto OUTEND
!
L_10000: Rem
CNVTU[0] = 0
CNVTU[1] = PFU1[UnitType]
CNVTU[2] = 1
CNVTA = Z1 \ Gosub L_20000
Z1 = AMOUNT
CNVTA = Z3 \ CNVTU[2] = 2 \ Gosub L_20000
Z3 = AMOUNT
CNVTA = D1[1] \ CNVTU[2] = 2 \ Gosub L_20000
D1[1] = AMOUNT
If PFU1[UnitType] = -1 Let SUNIT$ = "CWT " \ Goto L_10180
If PFU1[UnitType] = -3 Let SUNIT$ = "LB  " \ Goto L_10180
Mat Read #19,PFU1[UnitType],10;SUNIT$;
L_10180: Return 
!
L_10500: Rem SELECT UNIT
!!Window Open @5,5; Size 70,12; Using " SELECT DEFAULT UNIT "
L_10520:!! Print 'CS'
!!Print 
!!Print Tab 5;" 1: STOCKING  "; Tab 45;" 4: COSTING"
!!Print Tab 5;" 2: SELLING  "; Tab 45;" 5: PRICING"
!!Print Tab 5;" 3: PURCHASING "
!!Print 
!!Print Tab 10;"Enter unit to show on report ";
!!Input ""UNIT$
!!UNIT = UNITx$
!!If UNIT < 1 Goto L_10520
!!If UNIT > 5 Goto L_10520
!!U5$ = " ",U5$
!!If UNIT = 1 Let U5$ = "IN STOCKING UNITS "
!!If UNIT = 2 Let U5$ = "IN SELLING UNITS "
!!If UNIT = 3 Let U5$ = "IN PURCHASING UNITS "
!!If UNIT = 4 Let U5$ = "IN COSTING UNITS "
!!If UNIT = 5 Let U5$ = "IN PRICING UNITS "
!!If UNIT = 6 Let U5$ = "IN PRODUCTION UNITS "
!!UNIT = UNIT + 7
!!!!Window Close 
!!Return 
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
Rem {begin rtn.error.s}
OUTEND: Rem EXIT
! - Print 'CS'
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!

End 
!Close 
!Chain "MX000"
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 