! >>> Program 447
!
! description Customer Sales MTD/YTD Summary
!
! loadsave -w -n 100,10 -o prog/dxport/447.dl4 src/447.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  16:45:53
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx441a.src (univ2) [txc] {59182}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! - ! ****
Rem
Rem MX441A - CUSTOMER SALES  MTD/YTD SUMMARY
Rem AUTHOR: DAVE  OCT 13, 1986
Rem LAST UPDATE: roman 05/27/91  verify variables / clean up

Declare Intrinsic Sub DateToJulian,FormatDate,InpBuf,String
External Lib "ubsfunc.dl4"

! - Option Default Dialect IRIS1
Rem MX447          ORDER STATUS
Rem Author:        ???   ??/??/????
Rem                UNIVERSAL BUSINESS SYSTEMS
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
If Err 0 Gosub ERR_TRAP
Dim R$[32],V1$[30],pru1$[20]
Dim 1%,F,3%,T2[5],SORTBYSHIP
Dim U9$[131],StatDesc$[30]
Dim U5$[50],DATE$[8],K1$[50],CNAME$[30]
Dim P0$[10],D1$[8],D2$[8],C$[30],X$[10],Z$[20]
Dim J$[75],J0$[10],J1$[75],J2$[40],J4$[75],J5$[75],J7$[75],J9$[75]
Dim 1%,H4[2],3%,PCTR,4%,X3
Dim 2%,H0[12],H5[16],X2,DT3[1],JSHIPDATE
!
! -  dx add xport reporting code
Dim tmp$[500],tmp1$[300],pru$[20]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
For I = 2 To 8
  Read L
  Read #1,88,L;J$;
  Ropen #I,J$
Next I
Data "1840","1808","1888","2128","1792","1872","2112"
Mat Read #1,0,100;DATE$;
Mat Read #1,3;CNAME$;
L = 70
D = 1
F = 0
If Err 0 Let F = Spc(8)
N = Chf(0)
If Err 0 Gosub ERR_TRAP
L9 = 55
If F
  L9 = 20 \ J8=F
  SCRPRT = 1
Else 
  SCRPRT = 0
End If 
!
K1$ = " "
J1 = 90 \ J2 = 0
!
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"447",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
! - Call dxget("Z",Z$)
Call dxget("J",J$)
!
if J$="" let SORTBYSHIP=0 else SORTBYSHIP=1 ! this is the standard for y/n question, yes=1
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If
!
!
! - STARTHERE: Rem =========================================== get ranges
! - Gosub PRNTSCRN
! - For Y = 1 To 1
! -   On Y Gosub WHATSORT
! - Next Y
! -STDFINALQ: Rem "Standard Final Question"
! - Print @10,23;'CL';"ENTER #:field to edit,  P: print or  E: exit ";

! - Input ""Z$
! - Call String(1,Z$)
! - If Z$ = "P" Goto STRTSORT
! - If Z$ = "E" Goto OUTEND
! - Y = Z$
! - If Y = 1 goto STARTHERE
! -  On Y Goto STARTHERE
! - End If 
! - Goto STDFINALQ
! - 	PRNTSCRN: Rem
! - 	Print 'CS'
! - 	Print @26,4;"ORDER STATUS PRINT"
! - 	Print @28,6;"1> SORT BY SHIPDATE? (Y/N): ";
! - 	Return 
! - WHATSORT: Rem
	! - J5$ = "SORT BY SHIPDATE (Y/N) : "
	! - J0$ = "6000 159 6";J5$ = "SORT BY SHIP DATE (Y/N)"
	! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! -	Gosub ISINPUT \ J1 = 0
	!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! -	If J$ = "Y" Let SORTBYSHIP = 1 Else Let SORTBYSHIP = 0
! - Return 
!
STRTSORT: Rem=========================================start sorting
! - If L9 < 30 Print 'CS'
! - Signal 3,0
! - If Err 0 Gosub ERR_ESCAPE
!
if j8 ! dx xml headings
  tmp$="STATUS",fdel$,"ORDER NUM",fdel$,"ORDER DATE",fdel$
  tmp$=tmp$,"SHIP DATE",fdel$,"CUST NUM",fdel$,"CUST NAM",fdel$
  tmp$=tmp$,"WH",fdel$,"TYPE",fdel$
  tmp$=tmp$,"P.O. NUMBER",fdel$,"# LINES",fdel$
  tmp$=tmp$,"ORDER TOTAL",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
L_2000: Search #2,3,D;K1$,R1,E
If E And Not(SORTBYSHIP) Goto L_9100
If E And SORTBYSHIP Goto STARTPRINT
! - If Not(SORTBYSHIP) Gosub PRINTMESSAGE
Gosub READHEADER
R$ = " ",R$
V1$ = " ",V1$
If Not(SORTBYSHIP) If H0 > 7 Goto L_9100
If SORTBYSHIP If H0 > 7 Goto STARTPRINT
If SORTBYSHIP
  Z$ = " ",Z$
  X2 = H0[10] \ Gosub L_7820 \ X2 = 0
  If X2 Let JSHIPDATE = X2 Else Let JSHIPDATE = 0
  XY = 100 - H0
  Z$[1,2] = XY Using "##"
  Z$[3,8] = JSHIPDATE Using "######"
  Z$[9,14] = H0[7] Using "######"
  Search #9,4,1;Z$,R1,E 
  If E Let e$ = "syserrorfile 447 sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",Z$ \error 10000
  ! - Gosub SORTMESSAGE
  Goto L_2000 ! get next order 
End If 

Gosub L_5800
Gosub L_5000
Gosub L_2220
Goto L_2000
!
STARTPRINT: Rem if sorted by shipdate


PCTR = 0
! - If Err 0 Gosub ERR_ESCAPE
Z$ = "`",Z$
SORTSEARCH: 
Search #9,6,1;Z$,R1,E \ rem ! - If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
! - Gosub PRINTMESSAGE
Gosub READHEADER
Gosub L_5800
Gosub L_5000
Gosub L_2220
Goto SORTSEARCH

L_2220: Rem TOTALS CALC
T9[0] = T9[0] + T2[1]
Return 
!
L_2500: Rem GET CUSTOMER NAME
U5$ = H0[4] Using "######"
Search #3,2,1;U5$,V3,V4
If Not(V4) Read #3,V3,30;C$;
If V4 Let C$ = "NOT FOUND ! - ! "
Return 
!
L_3000: Rem CHANGE OF STATUS
If Not(T9[0]) Goto L_3040
if J8=0 Print #0; Using "###,###,###.##"; Tab 88;"TOTAL FOR THIS STATUS ";T9[0]
T9[1] = T9[1] + T9[0]
L_3040: T9[0] = 0
If H0 = 99 Return 
L_3060: L = L + 5
U9$ = "-",U9$
if J8=0 Print #0;U9$[1,131]
On H0 Gosub L_3150,L_3170,L_3190,L_3210,L_3230,L_3250,L_3270
U9$ = "**",U5$,"**"
StatDesc$=U5$
if J8=0 Print #0;"\15\"; Tab Int(66 - Len(U9$) / 2);U9$;"\15\"
S2 = H0
U9$ = " ",U9$
Return 
L_3150: U5$ = "ENTERED"
Return 
L_3170: U5$ = "PRINTED"
Return 
L_3190: U5$ = "REGISTERED"
Return 
L_3210: U5$ = "READY TO INVOICE"
Return 
L_3230: U5$ = "INVOICED"
Return 
L_3250: U5$ = "INVOICE PRINTED" 
Return 
L_3270: U5$ = "INVOICE REGISTERED"
Return 
!
L_3500: Rem PRINT ORDER LINE
U5$ = H0[7] Using "######"
U9$ = U5$
N2 = 0
L_3540: Search #4,3,1;U5$,V1,V2
If V2 = 2 Return 
!If V2 Stop 
If U5$[1,6] <> U9$ Return 
N2 = N2 + 1
Goto L_3540
!
L_4000: Rem TOTALS
H0 = 99
Gosub L_3000
if j8 return
U9$ = "-",U9$
Print #0;U9$
Print #0; Using "###,###,###.##"; Tab 98;"GRAND TOTAL ";T9[1]
Print #0;U9$;"\15\-- END --"
Return 
!
L_5000: Rem PRINT LINE
If H0 <> S2   Gosub L_3000 
Gosub L_3500
Gosub L_2500
if J8 ! dx xml
  D1$ = H0[9] Using "&&&&&&" \ Call FormatDate(D1$,D1$,E)
  D2$ = H0[10] Using "&&&&&&" \ Call FormatDate(D2$,D2$,E)
  tmp$ = StatDesc$,fdel$,H0[7] using "######" ,fdel$
  tmp$ = tmp$,D1$ ,fdel$
  tmp$ = tmp$,D2$ ,fdel$
  tmp$ = tmp$,H0[4] Using "######",fdel$
  tmp$ = tmp$,rtrim$(C$[1,30]) ,fdel$	  
  tmp$ = tmp$,H4[2] Using "##",fdel$
  tmp$ = tmp$,H5[7] Using "##",fdel$
  tmp$ = tmp$,P0$ ,fdel$
  tmp$ = tmp$,N2 using "###" ,fdel$
  tmp$ = tmp$,T2[1] Using "#,###,###.##" ,fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
D1$ = H0[9] Using "&&&&&&"  \ Call FormatDate(D1$,D1$,E)
D2$ = H0[10] Using "&&&&&&" \ Call FormatDate(D2$,D2$,E)
Print #0; Using "######";H0[7];"  ";D1$;"  ";D2$;
Print #0; Using "######"; Tab 28;H0[4]; Tab 38;C$;
Print #0; Using "##"; Tab 76;H4[2]; Tab 80;H5[7];
Print #0; Using "###"; Tab 85;P0$; Tab 105;N2;
Print #0; Using "#,###,###.##"; Tab 112;T2[1];
Print #0;" "
Return 
!
L_5800: Rem HEADING ROUTINE
IF J8 RETURN
L = L + 1
If L < L9 Return 
U9$ = " ",U9$
If S2 <> 0 If S2 <> H0 Gosub L_3000
If P = 0 Goto L_5840
If L9 > 30 Goto L_5840
! - 	Input "\15\PRESS <CR> TO CONTINUE "J$
! - 	Print 'CS'
L_5840: 
If P Print #0;"\14\";
Print #0;" - 447 - ";Msc$(3); Tab (Int(66 - (Len(CNAME$) / 2)));CNAME$
P = P + 1
U9$[2,14] = "DATE ",DATE$
U9$[120,128] = P Using "PAGE ###"
U9$[61,78] = "ORDER STATUS"
Print #0;U9$
Print #0;"\15\";"ORDER   ORDER     SHIP      CUSTOMER  CUSTOMER"
Print #0;"NUMBER  DATE      DATE      NUMBER    NAME";
Print #0; Tab 76;"WH"; Tab 79;"TYPE"; Tab 85;"P.O. NUMBER";
Print #0; Tab 103;"# LINES"; Tab 118;"ORDER TOTAL"
L = 4
U9$ = " ",U9$
If S2 Gosub L_3060
Return 
!
READHEADER: Rem
Mat Read #2,R1,0;H0;
Mat Read #7,H0[3],8;T2;
Mat Read #2,R1,446;P0$;
Mat Read #2,R1,78;H4;
Mat Read #2,R1,104;H5;
Return 
!
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
U5$ = H0[9]
D1$[1,2] = U5$[4,5]
D1$[3,3] = "/"
D1$[4,5] = U5$[6,7]
D1$[6,6] = "/"
D1$[7,8] = U5$[2,3]
Return 
!
! - PRINTMESSAGE: Rem
! - 	If Not(SCRPRT)
! - 	  Print @0,22;"Printing, Please Wait...";
! - 	  PCTR = PCTR + 1
! - 	  If Not(Fra(PCTR / 50))
! - 		Print Using "#######";@25,22;PCTR;" Records Printed";
! - 		Print Using "   Page ####";P;
! - 	  End If 
	
! - 	End If 
! -	Return 
!
Rem {begin rtn.input.s}
! - ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - 	J0 = J0$[1,1]
! - 	J6 = J0$[2,2]
! - 	J2 = J0$[3,4]
! - 	J3 = J0$[5,6]
! - 	J4 = J0$[7,8]
! - 	J5 = J0$[9,10]
! - 	If J0 < 3 Let J2$ = " ",J2$
! - 	If J1$ = "" Let J1$[1,J3] = " ",J1$
! - 	If J0 >= 3 If J0 <= 4
! - 	  If J0 = 3 Let J2$ = "#",J2$
! - 	  If J0 = 4 Let J2$ = "-",J2$
! - 	  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - 	End If 
! - 	J1$[J3 + 1] = ""
! - 	If J0 < 3 Goto ISENTER
! - 	If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - 	If J0 <> 6
! - 	  If J0 = 5
! - 		J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
! - 		J1$ = J9$[4,7],J9$[2,3],"  "
! - 	  Else 
! - 		J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! - 		If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
! - 	  End If 
! - 	End If 
! - 	ISENTER: Rem
! - 	If J5 < Msc(34) - 1
! - 	  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - 	End If 
! - 	Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
! - 	Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
! - 	Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
! - 	Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - 	If Len(J4$) > J3
! - 	  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
! - 	End If 
! - 	J9$ = J4$
! - 	If Not(Len(J9$))
! - 	  If J0$[3,4] = "00"
! - 		J9$ = J1$
! - 	  Else 
! - 		J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
! - 	  End If 
! - 	End If 
! - 	For J8 = 1 To Len(J9$)
! - 	  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
! - 		J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
! - 		Gosub ISERRMSG \ Goto ISENTER
! - 	  End If 
! - 	Next J8
! - 	On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
! - 	ISTYPE1: J$ = J0$[2,2],J$
! - 	If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - 	If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - 	Goto ISOUT
! - 	ISTYPE3: Rem
! - 	J9 = 0
! - 	X1 = 0
! - 	For J8 = 1 To Len(J9$)
! - 	  If J0 = 4 And Not(X1)
! - 		If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
! - 		  X1 = 1
! - 		  Goto ISNCONT1
! - 		End If 
! - 	  End If 
! - 	  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
! - 	  If J9$[J8,J8] = " " Goto ISNCONT1
! - 	  If Len(J0$) > 10
! - 		J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
! - 	  End If 
! - 	  If J9$[J8,J8] <> "." Goto ISNUMERR1
! - 	  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
! - 	  If J9 Goto ISNUMERR1
! - 	  J9 = 1
! - 	ISNCONT2: Rem
! - 	  X1 = 1
! - 	  If J9 Let J9 = J9 + 1
! - 	ISNCONT1: Rem
! - 	Next J8
! - 	If J0 = 5 Goto ISTYPE5
! - 	If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
! - 	J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
! - 	ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - 	If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - 	ISDECERR: Gosub ISERRMSG \ Goto ISENTER
! - 	ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
! - 	If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
! - 	J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - 	If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
! - 	If J9[1] = 0 Goto ISDTERR
! - 	On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
! - 	On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
! - 	Goto ISDTERR
! - 	ISMO30: If J9[1] > 30 Goto ISDTERR
! - 	ISMO31: If J9[1] > 31 Goto ISDTERR
! - 	Goto ISDTOUT
! - 	ISMOFEB: If J9[1] > 29 Goto ISDTERR
! - 	If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
! - 	  If J9[1] > 28 Goto ISDTERR
! - 	End If 
! - 	ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
! - 	J$ = X$ \ J3 = 8 \ Goto ISOUT
! - 	ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
! - 	ISTYPE6: Call String(1,J9$)
! - 	If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
! - 	If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
! - 	J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
! - 	Gosub ISERRMSG \ Goto ISENTER
! - 	ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
! - 	ISERRMSG: X1 = Len(J7$)
! - 	Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
! - 	Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
! - 	Print 'K1'; \ Window Close \ Return 
! - 	ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
! - 	X$ = " ",X$ \ X$[10] = ""
! - 	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - 	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - 	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - 	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - 	If Not(X2) Let X$ = "        "
! -   Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
OUTEND: Rem EXIT ROUTINE

If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  ! - ! - ! - print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
try call dxclose() else rem
End 
! - 	Print 'CS'
! - 	Chain "MX000C"
! - 	Stop 
L_9100: Rem DONE
! - Gosub L_4000
! - If L9 > 30 Goto OUTEND
! - 	Input "\15\PRESS <CR> TO EXIT "J$
Goto OUTEND
! - 	Stop 
!
! - SORTMESSAGE: Rem
! - 		Print @0,22;"Sorting, Please Wait...";
! - 		PCTR = PCTR + 1
! - 		If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed"
! - Return 
!
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! - print spc(8)
include "src/callmainerrnet.inc"
end 
! - 		If Spc(8) = 99 ! "escape hit/return back
! - 		  Print 'RB ML';" ";'ML';
! - 		  Return -1
! - 		End If 
! - 		If Spc(8) = 123 ! "record lock
! - 		  Escdis 
! - 		  Window Open @0,0; Size 30,3; Using ""
! - 		  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
! - 		  Signal 3,50
! - 		  Window Close 
! - 		  Escclr 
! - 		  Return -1
! - 		End If 
! - 		Dim 2%
! - 		Window Off 
! - 		Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
! - 		ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
! - 		If ENUM = 157 Let CTERR = Err(8)
! - 		Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
! - 		Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
! - 		Goto ERR_MAIN
! - 		ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
! - 			Dim 2%
! - 			Window Off 
! - 			Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
! - 			ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
! - 			If E = 5 Let CTERR = Err(8)
! - 			Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
! - 			Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
! - 			Goto ERR_MAIN
! - 		ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
! - 			If Spc(8) <> 99 Goto ERR_TRAP
! - 			If Err 0 Rem
! -		CNTRLB_ERR_ESCAPE:
! - 			Dim ABREQ$[10]
! - 			If Err 0 Gosub ERR_TRAP
! - 			Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
! - 			Input Len 16385;""ABREQ$
! - 			Call String(1,ABREQ$)
! - 			Print @0,Msc(34) - 1;'CL';
! - 			If Err 0 Gosub ERR_ESCAPE
! - 			If ABREQ$ <> "Y"
! - 			  Print 'ML';" ";'ML';
! - 			  Return -1
! - 			End If 
! - 			Goto OUTEND
! -		ERR_MAIN: Rem "main error handling logic
! - 			If Err 0 Rem
! - 			Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
! - 			PNAME$ = Msc$(4)
! - 			Call String(1,PNAME$)
! - 			POS_ = 1;POS1 = 0
! - 		NAMEPARSE: Rem "get program name from path
! - 			Search PNAME$[POS_],"/",POS1
! - 			If POS1
! - 			  POS_ = (POS_ + POS1)
! - 			  Goto NAMEPARSE
! - 			End If 
! - 			Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
! - 			Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
! - 			Print "TRACE: ";'CL';
! -		STACKLOOP: Rem "print nesting information
! - 			Print Using "<#####> ";Spc(16);
! - 			If Spc(14) Goto STACKLOOP
! - 			Print 'CR';"************************************"
! - 			Close #0
! - 			Open #0,"errorlog"
! - 			Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
! - 			Close #0
! - 			Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
! - 			PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
! - 			Call String(2,PNAME$)
! - 			System 28,PNAME1$
! - 			Call String(5,PNAME2$)
! - 			PNAME2$ = " ",PNAME2$
! - 			PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
! - 			Call InpBuf(PNAME2$)
! - 			Stop 
! -return
Rem {end rtn.error.s}
