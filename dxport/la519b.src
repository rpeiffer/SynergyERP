! >>> Program LA519b
!
! description Accounts Payable Recurring Entries - Update Monthly Files
!
! loadsave -w -n 100,10 -o prog/dxport/la519b.dl4 src/la519b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 12, 2009  14:21:24
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/la519b.src (univ2) [bill] {39917}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Try
  Enter spec[],message$,IntCo,rstr$,e$ 
  dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  dim e$[500]!,message$[600]
	dIM GROUPID$[1]
	Dim 2%,C4[4],3%,Q[2],T2[3],2%,B4[1]
	Dim 1%,PRGNUM,EFLAG,RETURNSTATUS
	DIM 3%,REC_UAC
	
Comp = spec[0] ! company #                     
intCo = spec[0]                                
C4[0] = spec[1] ! CURRENT/NEXT MONTH
C4[1]= spec[2] ! POSTING PERIOD                              
C4[2] = spec[3]  ! POSTING date (mmddyy)                            
C4[3] = spec[4] !  LOGICAL UNIT NUMBER FOR A10IN
C4[4] = SPEC[5] ! POSTING DATE YYMMDD
B4[1] = SPEC[6] !BATCH NUMBER /JRNL # IF NOT IN BATCH MODE
B4[0] = SPEC[2] ! POSTING PERIOD
PRGNUM=SPEC[7] ! PROGRAM NUMBER
rec_uac = spec[8]                              
returnstatus = spec[9] 
eflag=spec[10]
t2[0]=spec[11]
t2[1]=spec[12]
t2[2]=spec[13]
t2[3]=spec[14]
Rem LA519B - RECURRING ENTRIES JOURNAL PT#2 MONTHLY PURCHASE JOURNAL
Rem LAST UPDATE: MTG 5/91 FOR MULTIPLE USERS
Rem              04/28/1997 - M1[1](DTH1[1]) IS JULIAN

!If Err 0 Gosub ERR_TRAP
Dim 1%,C,C0[6],D2[2],E,E8,I,M[2],M5,M6[2],O1[2],O4[1],X1
Dim 1%,DTA3[1],DTH[1],RP2[6],RED3[2],RET1[2],BLANKOUT_RESTOF_RECORD
Dim 2%,A5,G9[3],M1[7],M3[2],O2[6],O5,X2,VT0[1],portnum
Dim 2%,DTA1[2],DTH1[8],RP1[5],RED1[1],RET2[5],DT3[1]
Dim 3%,A2[11],D1[1],M2[5],M4,O3[11],T[3],VT1[14],DIVTOT[3]
Dim 3%,DTA2[1],DTH2[4],RP3[3],RED2[1],RET3[2]
Dim 3%,R[50],RECA,RECB,LETTER$[1]
Dim K1$[30],K2$[30],K18$[30],K9$[30],M3$[12],O$[6],O1$[12],R$[63],X$[10],2%
Dim F$[16],G8$[2],K5$[30],K7$[30],K8$[30],K10$[30],K12$[30],K18$[30],K21$[30]
Dim DTA$[12],DTH$[12],RP1$[8],RP2$[30],RED1$[8],RET1$[12]
Dim K50$[10],DV1$[12],DV2$[12]
Dim P9$[50]
Dim Q$[9],2%
Dim 2%
Dim DEV$[20],HM$[30],nextblockid$[8],WebStr$[600]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
RESTART = 0 \ PORTNUM = rec_uac
!G9[0] = Spc(5) \ G9[1] = Int(G9[0] / 16384) \ G9[2] = Int((G9[0] - G9[1] * 16384) / 64)
!G9[3] = G9[0] - (G9[1] * 16384 + G9[2] * 64) \ G8$[1,1] = G9[2] Using "#"
!G8$[2,2] = G9[3] Using "#"
G8$[1,1]=intco using "#"
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
g8$[2,2]=groupid$

!Mat Read #1,19,50;P9$;
Goto L_900
!X2 = Spc(5)
!F$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
F$ = COMP Using "cntrl/CNTRL#"
Open #1,F$
Mat Read #1,51,18;C0;
Mat Read #1,88,16;F$; \ Open #15,F$
Mat Read #1,88,48;F$; \ Open #16,F$
K2$ = " 0" \ Search #15,2,1;K2$,R[15],E
if e<>0
	eflag=eflag+1
	Message$="RECORD '0' NOT FOUND IN A00AP" \ Gosub ERR_SEARCH
endif
Mat Read #15,R[15],2;R$;
F$ = R$[31,31],"/A80VM",G8$[1,2] \ Open #2,F$
F$ = R$[53,53],"/A20OI",G8$[1,2] \ Open #3,F$
F$ = R$[8,8],"/APREC",G8$[1,2] \ Open #17,F$
F$ = R$[9,9],"/APRED",G8$[1,2] \ Open #18,F$
F$ = R$[8,8],"/APREA",G8$[1,2] \ Open #20,F$
F$ = R$[8,8],"/APRET",G8$[1,2] \ Open #21,F$
F$ = R$[58,58],"/A10VL",G8$[1,2] \ Open #6,F$
R$[60,60] = C4[3] Using "#"
Mat Read #1,88,432;F$; \ Open #10,F$
If C0[2] Mat Read #1,88,144;F$; \ Open #12,F$
X$ = C4[1] Using "&&&&"
F$ = R$[33,33],"/AM0DO",G8$[1,2],X$[1,4] \ Open #7,F$
F$ = R$[34,34],"/AM0DD",G8$[1,2],X$[1,4]
Open #8,F$
Mat Read #1,19,50;P9$;
If P9$[17,17] <> "Y"
  F$ = R$[60,60],"/A10IN",G8$[1,2],X$[1,4]
  Open #11,F$
End If 


RESTART = 99
If (C0[6]) <>0
	F$ = R$[1,1],"/APDIV",G8$[1,2] \ Open #17,F$
	F$ = R$[2,2],"/APVDV",G8$[1,2] \ Open #18,F$
	If Not(PORTNUM) Let PORTNUM = rec_uac
	F$ = PORTNUM Using "2/APPJTEMP&&&&"
	Call FindF(F$,A9) 
	if not (a9)
		eflag=eflag+1
		message$=message$+"DIVISION TEMP FILE NOT FOUND FOR PORT "+str$(PORTNUM)
		goto err_search:
		!Print @0,23;'CL';"DIVISION TEMP FILE NOT FOUND FOR PORT ";PORTNUM; \ Gosub ERR_TRAP
	endif
	Open #50,F$
endif
L_900: !Print @0,23;'CL';"Recurring Entries...Phase 2 UPDATING A/P MONTHLY FILES --- PLEASE WAIT!!!"
K2$ = "10" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Read #15,R[15],6;Q$;
Q[0] = Q$
Read #15,R[15],24;Q$;
Q[1] = Q$
Read #15,R[15],150;Q$;
Q[2] = Q$
Mat Read #1,19,50;P9$;
Mat Read #1,51,18;C0;
For I = 0 To 3
  T[I] = 0
Next I
K1$ = " ",K1$
R = 0
E = 0
K21$ = " ",K21$
L_1020: Search #21,3,1;K21$,R[21],E \ If E = 2 Goto L_1900
If E = 2 Goto L_1900
Mat Read #21,R[21],0;RET1;
Mat Read #21,R[21],6;RET2;
Mat Read #21,R[21],30;RET3;
Mat Read #21,R[21],54;RET1$
R[17] = RET2[4]
Mat Read #17,R[17],0;RP1;
Mat Read #17,R[17],24;RP2;
Mat Read #17,R[17],58;RP1$;
Mat Read #17,R[17],66;RP2$;
Mat Read #17,R[17],96;RP3
K2$ = " ",K2$;K2$[1,6] = RET2[0] Using "######"
Search #2,2,1;K2$,R[2],E \ If E Gosub ERR_SEARCH
Mat Read #2,R[2],550;A5; \ If Not(A5) Let A5 = RET2[0]
Gosub L_5000
Gosub L_5200
Gosub L_5400
Gosub L_5600
If C0[6] Gosub L_6400
Gosub L_5700
Gosub L_5800
Gosub L_6100
Goto L_1020
L_1900: Rem POST TOTALS
If RESTART Let T[1] = T2[0] + T2[1];T[0] = T2[2] - (T2[0] + T2[1])
R[7] = 0 \ M1 = 999999 \ M1[1] = C4[4] \ RET1$ = " ",RET1$
If C0[6] Goto L_1930
If Not(T[1]) Goto L_1930
RED2[0] = Q[0] \ RED2[1] = T[1]
Gosub L_6000
L_1930: If Not(T[0] + T[1]) Goto L_1960
RED2[0] = Q[2] \ RED2[1] = - (T[0] + T[1])
Gosub L_6000
let eflag=eflag+1
let message$=message$+"Suspense Posting Made in Mo. Purchase Journal"
!Print @0,21;'CL RB';"SUSPENSE POSTING HAS BEEN MADE IN MO. PURCHASE JOURNAL"
!Print @0,23;'CL RB';"PRESS <CR> TO CONTINUE: ";
!Input ""F$
L_1960: If Not(C0[6]) Goto L_8000
K50$ = " ",K50$
Search #50,3,1;K50$,R[50],E \ If E = 2 Goto L_2095
If E Gosub ERR_SEARCH
Mat Read #50,R[50],0;DIVTOT;
Search #13,2,1;K50$,R[13],E \ If Not(E) Goto L_2035
If E > 1 Gosub ERR_SEARCH
DV1$[1,12] = Q[0] Using "#########   " \ DV2$[1,12] = Q[1] Using "#########   "
Goto L_2040
L_2035: Mat Read #13,R[13],42;DV1$; \ Mat Read #13,R[13],54;DV2$;
L_2040: If Not(DIVTOT[0]) Goto L_2055
RED2[0] = DV1$[2,9] \ RED2[1] = DIVTOT[0] \ RP1[5] = K50$[1,2]
Gosub L_6000
L_2055: If Not(DIVTOT[1]) Goto L_2095
RED2[0] = DV2$[2,9] \ RED2[1] = DIVTOT[1] \ RP1[5] = K50$[1,2]
Gosub L_6000
L_2095: Goto L_8000
L_5000: Rem UPDATE APDETH FILE
If RP2[5] <> 2 Return 
DTH$ = " ",DTH$
For K = 0 To 8
  If K < 2 Let DTH[K] = 0
  DTH1[K] = 0
  If K < 5 Let DTH2[K] = 0
Next K
BLANKOUT_RESTOF_RECORD = 0
DTH$[1,12] = RET1$[1,12]
DTH[0] = RET1[0]
DTH1[0] = RET2[0]
DTH1[1] = RET2[1]
X2 = RET2[1] \ Gosub L_7820 \ X2 = 0
If X2 Let DTH1[1] = X2 Else Let DTH1[1] = Tim(6)
DTH1[2] = C4[4]
DTH1[3] = RET2[2]
DTH1[4] = RET2[3] \ If Not(RET2[3]) Let DTH1[4] = RET2[3]
DTH2[0] = RET3[0]
DTH2[1] = RET3[2]
DTH2[4] = A5
DTH1[8] = RP1[5]
K10$ = K21$
Search #10,2,1;K10$,R[10],E 
if not(e)
	message$=message$+"Transaction "+rtrim$(k21$[7,18])+" For Vendor "+ltrim$(k21$[1,6])+" Already in History File. "
	!Print 'CR RB';"**** ERROR: VENDOR ";K21$[1,6];" TRANSACTION ";K21$[7,18];" ALREADY IN A/P HISTORY"
	Gosub ERR_SEARCH
endif
E = 2 \ Search #10,1,0;K10$,R[10],E \ If E Gosub ERR_SEARCH
Mat Write #10,R[10],0;DTH;
Mat Write #10,R[10],4;DTH$;
Mat Write #10,R[10],82;BLANKOUT_RESTOF_RECORD;
Mat Write #10,R[10],16;DTH1;
Mat Write #10,R[10],52;DTH2;
Search #10,4,1;K10$,R[10],E \ If E Gosub ERR_SEARCH
K10$ = " ",K10$ \ K10$[1,6] = DTH1[0] Using "######"
K10$[7,12] = DTH1[1] Using "######" \ K10$[13,18] = R[10] Using "######"
Search #10,4,2;K10$,R[10],E \ If E Gosub ERR_SEARCH
K5$ = " ",K5$;K5$[1,6] = DTH2[4] Using "######";K5$[7,24] = K10$[1,18]
Search #10,4,3;K5$,R[10],E \ If E Gosub ERR_SEARCH
RP2[5] = 3 \ Write #17,R[17],34;RP2[5]
Return 
L_5200: Rem UPDATE APDETA FILE
If RP2[5] <> 3 Return 
If Not(C0[2]) Goto L_5390
Search #10,2,1;K21$,R[10],E 
if e<>0
	message$=message$+"Transaction "+rtrim$(k21$[7,18])+" For Vendor "+ltrim$(k21$[1,6])+" Not in History File. "
	!Print 'CR RB';"VENDOR ";K21$[1,6];" INVOICE ";K21$[7,18];" NOT IN ACCOUNTS PAYABLE HISTORY " 
	Gosub ERR_SEARCH
endif
K18$ = " ",K18$ \ K18$[1,5] = R[17] Using "#####"
L_5230: Search #18,3,1;K18$,R[18],E \ If E = 2 Goto L_5390
If E Gosub ERR_SEARCH
X = K18$[1,5] \ If X <> R[17] Goto L_5390
Mat Read #18,R[18],0;RED1;
Mat Read #18,R[18],8;RED1$;
Mat Read #18,R[18],16;RED2;
Mat Read #18,R[18],28;RED3;
If RED3[2] > 3 Goto L_5230
For K = 0 To 2
  DTA1[K] = 0
  If K < 2 Let DTA2[K] = 0
  If K < 2 Let DTA3[K] = 0
Next K
DTA$ = " ",DTA$
DTA1[0] = R[10]
DTA1[1] = RED1[1]
DTA$[1,12] = RET1$[1,12]
DTA2[0] = RED2[0]
DTA2[1] = RED2[1]
DTA3[0] = RED3[1]
K12$ = " ",K12$
E = 2 \ Search #12,1,0;K12$,R[12],E \ If E Gosub ERR_SEARCH
If R[12] <= 999999 Let DTA1[2] = R[12]
Mat Write #12,R[12],0;DTA1;
Mat Write #12,R[12],12;DTA$;
Mat Write #12,R[12],24;DTA2;
Mat Write #12,R[12],36;DTA3;
K12$ = " ",K12$ \ K12$[1,6] = R[10] Using "######"
K12$[7,12] = RED1[1] Using "######"
If R[12] > 999999
  RECA = Int((R[12] - 1000000) / 100000)
  RECB = Fra(R[12] / 100000) * 100000
  Call String(4,RECA + 193,LETTER$)
  K12$[13,13] = LETTER$[1,1]
  K12$[14,18] = RECB Using "&&&&&"
Else 
  K12$[13,18] = R[12] Using "######"
End If 
Search #12,4,1;K12$,R[12],E \ If E Gosub ERR_SEARCH
RED3[2] = 4 \ Write #18,R[18],32;RED3[2];
Goto L_5230
L_5390: RP2[5] = 4 \ Write #17,R[17],34;RP2[5]
Return 
L_5400: Rem UPDATE A20OI OPEN ITEMS FILE
If RP2[5] <> 4 Return 
For K = 0 To 9
  If K < 3 Let O1[K] = 0
  If K < 7 Let O2[K] = 0
  O3[K] = 0
Next K
O4 = 0;O$ = " ",O$;O1$ = " ",O1$
O$[1,1] = "1" \ O$[3,3] = RET1[0] Using "#" \ O$[5,5] = C4[0] Using "#"
O1[0] = RET1[0] \ O1[2] = RET1[1]
O2[0] = RET2[0] \ O2[2] = RET2[1] \ O2[3] = RET2[2]
O2[4] = RET2[3] \ If Not(O2[4]) Let O2[4] = RET2[2]
O3[0] = RET3[0] \ O3[1] = RET3[1] \ O3[2] = RET3[2]
O3[3] = O3[0] - O3[2]
O3[9] = C4[1]
O1$[1,12] = RET1$[1,12]
O4[1] = RP1[5]
O5 = A5
Search #3,2,1;K21$,R[3],E
If not(e) ! \ If E = 1 Goto L_5500
	message$=message$+"Transaction "+rtrim$(k21$[7,18])+" For Vendor "+ltrim$(k21$[1,6])+" Already in Open Item File. "
	!Print 'CR RB';"Vendor ";K21$[1,6];" Transaction ";K21$[7,18];" already in A/P open item file "
	Gosub ERR_SEARCH
endif
L_5500: ! Create Open Item Record
E = 2 \ Search #3,1,0;K21$,R[3],E \ If E Gosub Err_search:
Mat Write #3,R[3],0;O$;
Mat Write #3,R[3],6;O1;
Mat Write #3,R[3],12;O2;
Mat Write #3,R[3],40;O3;
Mat Write #3,R[3],100;O1$;
Mat Write #3,R[3],112;O4; \ Mat Write #3,R[3],118;O5;
Search #3,4,1;K21$,R[3],E \ If E Gosub ERR_SEARCH
RP2[5] = 5 \ Write #17,R[17],34;RP2[5]
Return 
L_5600: Rem UPDATE VENDOR FILE
If RP2[5] <> 5 Return 
K2$ = " ",K2$ \ K2$ = RET2[0] Using "######"
Search #2,2,1;K2$,R[2],E \ If E Gosub ERR_SEARCH
Mat Read #2,R[2],292;A2
A2[2] = A2[2] + RET3[0]
If C4 Goto L_5640
A2[3] = A2[3] + RET3[0] \ A2[5] = A2[5] + RET3[0] \ Goto L_5645
L_5640: A2[7] = A2[7] + RET3[0] \ Goto L_5645
L_5645: Mat Write #2,R[2],292;A2;
RP2[5] = 6 \ Write #17,R[17],34;RP2[5]
Return 
L_5700: Rem CALCULATE TOTALS
T[1] = T[1] - RET3[0]
Return 
L_5800: Rem UPDATE MONTHLY P/J
If RP2[5] <> 6 Return 
For I = 0 To 7
  If I < 3 Let M[I] = 0
  M1[I] = 0
  If I < 6 Let M2[I] = 0
Next I
M[0] = RET1[0];M[1] = RET1[1]
M1[0] = RET2[0];M1[1] = C4[4];M1[2] = RET2[1];M1[3] = RET2[2];M1[4] = RET2[3]
If Not(M1[4]) Let M1[4] = RET2[2]
M2[0] = RET3[0];M2[1] = RET3[1];M2[2] = RET3[2]
M2[3] = RET3[0] - RET3[2]
M6[0] = O4[0] \ M6[1] = O4[1]
E = 2 \ Search #7,1,0;K7$,R[7],E \ If E Gosub ERR_SEARCH
Mat Write #7,R[7];M;
Mat Write #7,R[7],6;M1;
Mat Write #7,R[7],38;M2;
Mat Write #7,R[7],74;M6;
Mat Write #7,R[7],80;RET1$;
K7$ = " ",K7$
K7$[1,6] = M1 Using "######"
K7$[7,18] = RET1$[1,12]
K7$[19,20] = M[0] Using "##"
K7$[21,24] = R[7] Using "####"
Search #7,4,1;K7$,R[7],E \ If E Gosub ERR_SEARCH
K18$ = " ",K18$ \ K18$[1,5] = R[17] Using "#####"
L_5925: Search #18,3,1;K18$,R[18],E \ If E = 2 Goto L_1020
If E Gosub ERR_SEARCH
Mat Read #18,R[18],0;RED1; \ If RED1[0] <> R[17] Goto L_5970
Mat Read #18,R[18],28;RED3; \ If RED3[2] > 4 Goto L_5925
Mat Read #18,R[18],16;RED2 \ If Not(RED2[1]) Goto L_5960
T[0] = T[0] + RED2[1]
Gosub L_6000
L_5960: RED3[2] = 5 \ Mat Write #18,R[18],28;RED3;
Goto L_5925
L_5970: RP2[5] = 7 \ Write #17,R[17],34;RP2[5]
Return 
L_6000: Rem UPDATE AM0DD FILE
K8$ = " ",K8$
E = 2 \ Search #8,1,0;K8$,R[8],E \ If E Gosub ERR_SEARCH
M3 = R[7] \ M3[1] = M1 \ M3[2] = M1[1]
M3$ = RED2[0] Using "########"
M4 = RED2[1] \ M5 = RP1[5]
Mat Write #8,R[8];M3;
Mat Write #8,R[8],12;M3$;
Mat Write #8,R[8],20;M4;
Mat Write #8,R[8],38;RET1$;
Mat Write #8,R[8],50;M5;
K8$ = " ",K8$
K8$[1,6] = M3 Using "######"
K8$[7,14] = RED2[0] Using "########"
K8$[15,20] = R[8] Using "######"
Search #8,4,1;K8$,R[8],E \ If E Gosub ERR_SEARCH
K8$[1,8] = RED2[0] Using "########"
K8$[9,14] = M3[1] Using "######"
K8$[15,20] = R[8] Using "######"
Search #8,4,2;K8$,R[8],E \ If E Gosub ERR_SEARCH
Return 
L_6100: Rem update recurring entries
If RP2[5] <> 7 Return 
If Not(RP1[1]) Let RP1[1] = C4[1]
RP1[4] = C4[1]
If RP1[2] = C4[1] Let RP1[3] = 0 \ Goto L_6150
X$ = C4[1] Using "&&&&" \ YEAR_ = X$[1,2] \ MONTH_ = X$[3,4]
MONTH_ = MONTH_ + 1 \ If MONTH_ > 12 Let MONTH_ = 1 \ YEAR_ = YEAR_ + 1
If YEAR_ > 99 Let YEAR_ = YEAR_ - 100
X$[1,2] = YEAR_ Using "&&" \ X$[3,4] = MONTH_ Using "&&"
RP1[3] = X$[1,4]
L_6150: RP2[5] = 0
K18$ = " ",K18$ \ K18$[1,5] = R[17] Using "#####"
L_6165: Search #18,3,1;K18$,R[18],E \ If E = 2 Goto L_6200
If E Gosub ERR_SEARCH
X = K18$[1,5] \ If X <> R[17] Goto L_6200
RED3[2] = 0 \ Write #18,R[18],32;RED3[2];
Goto L_6165
L_6200: Mat Write #17,R[17],0;RP1
Mat Write #17,R[17],24;RP2;
Search #21,5,1;K21$,R[21],E \ If E Gosub ERR_SEARCH
Return 
L_6400: Rem VENDOR DIVISION TOTALS
If Not(C0[6]) Goto L_6495
If RP2[5] <> 6 Return 
K9$ = " ",K9$ \ K9$[1,6] = RET2[0] Using "######"
K9$[7,8] = RP1[5] Using "##"
Search #14,2,1;K9$,R[14],E \ If Not(E) Goto L_6445
If E > 1 Gosub ERR_SEARCH
E = 2 \ Search #14,1,0;K9$,R[14],E \ If E Gosub ERR_SEARCH
VT0[0] = RET2[0] \ VT0[1] = RP1[5] \ Mat Write #14,R[14],0;VT0
For I = 0 To 14 \ VT1[I] = 0 \ Next I
Search #14,4,1;K9$,R[14],E \ If E Gosub ERR_SEARCH
Goto L_6450
L_6445: Mat Read #14,R[14],8;VT1
L_6450: VT1[14] = VT1[14] + RET3[0]
If C4 Goto L_6480
VT1[0] = VT1[0] + RET3[0] \ VT1[2] = VT1[2] + RET3[0] \ Goto L_6490
L_6480: VT1[1] = VT1[1] + RET3[0]
L_6490: Mat Write #14,R[14],8;VT1;
L_6495: Return 
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem END OF UPDATE - REMOVE TEMP FILES
K2$ = " 0" \ Search #15,2,1;K2$,R[15],E \ If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
!If Err 0 Rem
Try Close #20 Else Rem
Try Close #21 Else Rem
!If Err 0 Gosub ERR_TRAP
F$ = R$[8,8],"/APREA",G8$[1,2] 
Call FindF(F$,X2)
if x2<>0
	 Kill F$
endif
F$ = R$[8,8],"/APRET",G8$[1,2] 
Call FindF(F$,X2)
if x2<>0
	 Kill F$
endif
K18$ = "0"
L_8120: Search #18,3,1;K18$,R[18],E \ If E = 2 Goto L_8180
If E Gosub ERR_SEARCH
If K18$[1,1] <> "0" Goto L_8180
Search #18,5,1;K18$,R[18],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #18,1,0;K18$,R[18],E \ If E Gosub ERR_SEARCH
Goto L_8120
L_8180: Rem
K2$ = " 0" \ Search #15,2,1;K2$,R[15],E
If E Gosub ERR_SEARCH
Mat Read #15,R[15],2;R$;
R$[61,61] = "1"
If P9$[17,17] <> "Y"
  R$[60,60] = C4[3] Using "#"
End If 
Mat Write #15,R[15],2;R$;
Goto OUTEND

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/la519b!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)

OUTEND: Rem END
!Print @0,23;'CL RB';"COMPLETED!!!!"
!Signal 3,10
Try Close Else Rem
F$ = PORTNUM Using "2/APRETEMP&&&&"
Call FindF(F$,X2) 
IF X2<>0 
	Kill F$
Endif
PRGNUM = 519
SPEC[7]=prgnum! PROGRAM NUMBER
if eflag
	let returnstatus=0
	let spec[9]=returnstatus
endif
Call "GLAPPOST.dl4",spec[],message$,IntCo,rstr$,e$
 
Else
	ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program

