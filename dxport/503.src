!!>>> Program 503
!
! description vendor label print 
!
! loadsave -w -n 100,10 -o prog/dxport/503.dl4 src/503.src
!
! 1.0 mm/dd/yyyy change??
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 19, 2001  08:39:02
Rem /usr/acct/r97//usr/acct/kag/work/r97/ap/la503.src (univ2) [kag] {21796}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/copyright.inc" ! dx
Declare Intrinsic Sub InpBuf,String
!!Option Default Dialect IRIS1
Rem LA503 ... VENDOR MAILING LABELS
Rem FROM MX104.. CUSTOMER LABEL PRINT
Rem MODIFIED MTK
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim 1%,V1[1],E,C2[2],XX
Dim 2%,YY,SVEND,EVEND,R2,V2[1],C3,J,L9,X4
Dim A$[30],A1$[116],A2$[30],A4$[30],A0$[30]
Dim B1$[142],B2$[142],B3$[142],B4$[142]
Dim F$[35],K$[25],U5$[10],CUSTOM_CUSTOMER$[30]
Dim 2% 
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
! -  dx add xport reporting code
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!!dim Blank$[12]	  \ Blank$=" ",Blank$
!!dim EndParam$[12] \ EndParam$="Z",EndParam$
!
!!If Err 0 Gosub ERR_ESCAPE

If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!!K1$ = " "
J1 = 90 \ J2 = 0

!YY = Spc(5)
!F$ = Int((YY - Int(YY / 16384) * 16384) / 64) Using "CNTRL#"
!For J = 3 To 3
!  Read J1
!  Read #1,88,J1;F$;
!  Ropen #J,F$
!Next J
Data "2400"

call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"503",fdel$ ,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("L9",tmp$) \ L9 =tmp$  !!!droplist
call dxget("SVEND",tmp$) \ SVEND=tmp$  
call dxget("EVEND",tmp$) \IF tmp$="" LET EVEND=999999 ELSE  EVEND=tmp$
Mat Read #1,115,60;custom_customer$;  
custom_customer$ = UCase$(trim$(custom_customer$))    

If SVEND < 0 or SVEND > 999999 let e$="Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
If EVEND < SVEND or EVEND > 999999 let e$="Invalid ending vendor code, must be between starting vendor code  and 999999!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
A$ = SVEND Using "######"
A2$ = EVEND Using "######"
!
YY = intCo
F$ = Int((YY - Int(YY / 16384) * 16384) / 64) Using "CNTRL#"
For J = 3 To 3
  Read J1
  Read #1,88,J1;F$;
  Ropen #J,F$
Next J

!!MAIN: Rem ================================================
!!Gosub PRINTSCREEN
!!L_1010: Rem number of labels
!!J0$ = "3000 143 5";J5$ = "Enter number of labels across (1-3) "
!!J1 = 2 \ Gosub ISINPUT \ L9 = J1
!!If L9 < 1 Or L9 > 3 Goto L_1010
!!L_1110: Rem starting vendor
!!J0$ = "3000 643 7";J5$ = "Enter starting vendor code"
!!J1 = 0 \ Gosub ISINPUT \ SVEND = J1
!!A$ = SVEND Using "######"
!!L_1180: Rem ending vendor
!!J0$ = "3000 643 8";J5$ = "Enter ending vendor code"
!!J1 = 999999 \ Gosub ISINPUT \ EVEND = J1
!!A2$ = EVEND Using "######"
!!If A2$ < A$
!!  J7$ = "ENDING VENDOR CODE MUST BE GREATER THAN STARTING VENDOR CODE"
!!  Gosub ISERRMSG
!!  Goto L_1180
!!End If 
!!ASK_INPUT: Rem
!!Print @10,23;"Enter   A: alignment aid   P: print   R: reselect   E: exit ";
!!Input Len 16384 + 1;""U5$
!!Call String(1,U5$)
!!If U5$ <> "A" And U5$ <> "P" And U5$ <> "R" And U5$ <> "E" Goto ASK_INPUT
!!If U5$ = "E" Goto OUTEND
!!If U5$ = "P" Goto PRINT_LOOP
!!If U5$ = "R" Goto MAIN
!!If U5$ = "A" Gosub L_8500
!!Goto ASK_INPUT
!!PRINT_LOOP: Rem PRINT LOOP
!!Print @10,23;"PRINTING MAILING LABELS . . .  PLEASE WAIT . . .";'CL';

IF J8  !!!!
  tmp$="VENDOR NAME ",fdel$  
  tmp$=tmp$,"ADDRESS_1",fdel$  
  tmp$=tmp$,"ADDRESS_2",fdel$  
  tmp$=tmp$,"CITY",fdel$  
  call addtostr(e$,rstr$,tmp$+rdel$)
  L9=1
END IF 

Gosub L_8600
!!If Err 0 Gosub ERR_ESCAPE
!!Signal 3,0
C2 = 0
K$ = " ",K$
K$[6 + 1 - Len(A$),6] = A$
Search #3,2,1;K$,V1,V2
If Not(V2) Goto L_2090
L_2060: Search #3,3,1;K$,V1,V2
If V2 Goto L_9100
If A2$ = K$[1,Len(A2$)] Goto L_2100
L_2090: If K$ > A2$ Goto L_9100
L_2100: R2 = V1
A0$ = K$
Gosub L_8400
If C2 > L9 - 1 Gosub L_5000
C2 = C2 + 1
C3 = (C2 - 1) * 36 + 2
IF CUSTOM_CUSTOMER$="MORRISETTE"
    C3 = ((C2 - 1) * 41) + 7
END IF
Gosub L_2200
K$ = A0$
Goto L_2060
L_2200: Rem LOAD BUFFER
For X4 = 105 To 91 Step -1
  If A1$[X4,X4] <> " " Goto L_2250
Next X4
L_2250: B1$[C3,C3 + Len(A1$[1,30])] = A1$[1,30]
B2$[C3,C3 + Len(A1$[31,60])] = A1$[31,60]
If X4 = 90 Let A4$ = A1$[108,116]
If X4 = 90 Goto L_2300
A4$ = A1$[91,X4],"  ",A1$[106,107],"  ",A1$[108,116]
L_2300: B3$[C3,C3 + Len(A1$[61,90])] = A1$[61,90]
B4$[C3,C3 + Len(A4$)] = A4$
Return 
L_5000: Rem DUMP BUFFER
If C2
 C3 = ((C2 - 1) * 36 + 2) + 32
 IF NOT(J8)
 IF CUSTOM_CUSTOMER$="MORRISETTE"
  C3 = ((C2 - 1) * 41 + 4) + 36
  Print #0;B1$[1,C3] !!line 1
  Print #0;B2$[1,C3]  !!line 2
  Print #0;B3$[1,C3]   !! line 3
  Print #0;B4$[1,C3]  !!line 4
 ELSE 
  Print #0;""
  Print #0;B1$[1,C3] !!line 1
  Print #0;B2$[1,C3]  !!line 2
  Print #0;B3$[1,C3]   !! line 3
  Print #0;B4$[1,C3]  !!line 4
  Print #0;""
 END IF
 
ELSE  !!XML

  tmp$=rtrim$(B1$[1,C3]),fdel$  
  tmp$=tmp$,rtrim$(B2$[1,C3]),fdel$  
  tmp$=tmp$,rtrim$(B3$[1,C3]),fdel$  
  tmp$=tmp$,rtrim$(B4$[1,C3]),fdel$  
  call addtostr(e$,rstr$,tmp$+rdel$)

 END IF
 !
 C2 = 0
 Gosub L_8600
End If 
Return 
!!PRINTSCREEN: Rem print fields
!!Print 'CS';@0,0;"- LA503 - ";@27,0;"VENDOR LABEL PRINT"
!!Print @5,5;"ENTER NUMBER OF LABELS ACROSS (1-3): "
!!Print @5,7;"         ENTER STARTING VENDOR CODE: ";
!!Print @5,8;"           ENTER ENDING VENDOR CODE: ";
!!Return 
L_8400: Rem READ VENDOR RECORD
Mat Read #3,R2,0;A1$;
Return 
!!L_8500: Rem ALIGNMENT AID
!!!!Print @10,23;"Printing alignment aid, please wait . . . ";'CL';
!!Print #0;" "
!!For XX = 1 To 4
!!  For YY = 0 To L9 - 1
!!    Print #0; Tab YY * 36 + 1;"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
!!  Next YY
!!  Print #0;" "
!!Next XX
!!Print #0;" "
!!Return 
L_8600: Rem CLEAR BUFFER
B1$ = " ",B1$
B2$ = " ",B2$
B3$ = " ",B3$
B4$ = " ",B4$
Return 
!!!!outend
L_9100: Rem NO MORE
Gosub L_5000
Goto OUTEND
!Stop
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
Rem {end rtn.input.s}
Rem {begin rtn.error.s}
!
OUTEND: Rem OUT
!!Print 'CS'; \ Close 
!!Chain "MX000"
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
try call dxclose() else rem
End 


!
 
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
