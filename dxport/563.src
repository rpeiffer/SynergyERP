! >>> Program 563
!
! description Accounts Payable Check Reconciliation Accept
! loadsave -w -n 100,10 -o prog/dxport/563.dl4 src/563.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 17, 2004  18:54:04
Rem /w/papermaster/r2002//usr/acct/bill/work/devl/ap/la563.src (univ2) [bill] {63010}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem LA563 - CHECK RECONCILIATION ACCEPT
Rem UNIVERSAL BUSINESS SYSTEMS
Rem MAY 1986 -MTK
Try ! If Err 0 Gosub ERR_TRAP
Dim 2%,R2,A9,B9,C[2],C9,W9,V1,D8,C3[1],X2,M9,Y9,C1[2],M1[7]
Dim 1%,Z6,X,D0,E,C2[1],C0[3],C4,M[1]
Dim 1%,S[1],S6,S7
Dim 2%,S1[8],S5[1],A8
Dim 3%,R[23]
Dim 3%,S2[4],S8[2]
Dim K2$[30],K3$[30],K4$[30],K6$[30],S$[12],S5$[12],S6$[12]
Dim K$[21]
Dim K1$[20],F$[16],G8$[2],G9$[40],R$[63],R2$[4],V$[20],X$[10]
Dim K18$[10],K49$[10],K50$[10],DV1$[12],DV2$[12],DV3$[12],J$[50]
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim 3%,totrec,acper$[4]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Mat Read #1,88,16;F$; \ Open #15,F$ ! a00ap
Mat Read #1,88,48;F$; \ Open #16,F$ ! acf
Call dxget("RN563",tmp$) \ tmp$ = UCase$(Trim$(tmp$))
If tmp$ = "" Let tmp$ = "N" ! unchecked it?          
If tmp$ = "N" ! DO NOT WANT TO RUN!  
	eflag=eflag+1
	message$="User Selected No Update to be performed "
	goto L_9020:
endif                         
Rem Check Reconciliation Flag 
Read #1,51,4;Z6;
If Z6 <> 1 
	let eflag=eflag+1
	if not(z6)
		Let message$="VERIFICATION MUST BE RUN. "
	else
		let message$= "CHECK RECONCILIATION IN PROGESS. "
	endif
	let message$=message$+" No Update Performed. "
	Goto L_9020
endif
Z6 = 4
Write #1,51,4;Z6;
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G8$[1,1] = intco Using "#"
g8$[2,2]=groupid$
Mat Read #1,51,18;C0;

If C0[2]<>0 
	Read #1,88,432;F$; \ rOpen #3,F$ !  ! not written too
	Read #1,88,448;F$; \ Open #4,F$
endif
let f$="2/APDETT"+STR$(INTCO)
OPEN #5,F$
V$ = " ",V$
V$ = "20"
Search #15,2,1;V$,R[15],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '20' Not On File. "
	let z6=1\Write #1,51,4;Z6;
	goto L_9020:
endif
Read #15,R[15],10;R$[1,4];
If R$[3,3]<> "0" 
	eflag=eflag+1
	message$="Check Register Must Be Accepted "
	let z6=1\Write #1,51,4;Z6;
	goto L_9020:
endif
V$ = " ",V$
V$ = " 0"
Search #15,2,1;V$,R[15],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '20' Not On File. "
	let z6=1\Write #1,51,4;Z6;
	goto L_9020:
endif
Mat Read #15,R[15],2;R$;
F$ = R$[43,43],"/","A50CR",G8$[1,2]
Open #2,F$
If C0[2]<>0  !
	Mat Read #1,0,134;D8; \ X$ = D8 Using "######"
	C3[0] = X$[1,4] \ Y9 = X$[1,2] \ M9 = X$[3,4]
	M9 = M9 + 1 \ If M9 <= 12 Goto L_1025
	M9 = 1 \ Y9 = Y9 + 1
	If Y9 > 99 Let Y9 = Y9 - 100
	L_1025: X$[1,2] = Y9 Using "&&" \ X$[3,4] = M9 Using "&&"
	C3[1] = X$[1,4]
	X$ = C3[0] Using "&&&&" \ F$ = R$[41,41],"/AM0CR",G8$[1,2],X$[1,4]
	let acper$=x$[1,4]
	Call FindF(F$,A8)
	If A8 = 0 
		Call "labldfle.DL4",ACPER$,e$,IntCo,rstr$
	End If 
	rOpen #6,F$
	X$ = C3[1] Using "&&&&" \ F$ = R$[41,41],"/AM0CR",G8$[1,2],X$[1,4]
	let acper$=x$[1,4]
	Call FindF(F$,A8)
	If A8 = 0
		Call "labldfle.DL4",ACPER$,e$,IntCo,rstr$
	End If 
	rOpen #7,F$
endif
V$ = "10"
Search #15,2,1;V$,R[15],E 
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Record '10' Not On File. "
	let z6=1\Write #1,51,4;Z6;
	goto L_9020:
endif
Mat Read #15,R[15],2;R2$;
V$ = " ",V$ \ V$[3,6] = R2$[1,4]
Search #16,2,1;V$,R[16],E
If E <>0 
	eflag=eflag+1
	message$="Error In A/P Control File. Client "+rtrim$(r2$[1,4])+" Not on File "
	let z6=1\Write #1,51,4;Z6;
	goto L_9020:
endif
Mat Read #16,R[16],10;G9$;
if eflag<>0
	let z6=1\Write #1,51,4;Z6;
	goto L_9020:
endif

K$ = " ",K$
L_2020: Search #2,3,2;K$,R[2],E \ If E = 2 Goto OUTEND
If E Gosub ERR_SEARCH
Mat Read #2,R[2],18;C2;
If Not(C2[1]) Goto L_2020
Mat Read #2,R[2],0;C1;
Read #2,R[2],52;C4
If C0[2] Gosub L_5000
Search #2,5,2;K$,R[2],E \ If E Gosub ERR_SEARCH
K1$ = " ",K1$ \ K1$[1,2] = K$[1,2] \ K1$[3] = K$[9]
Search #2,5,1;K1$,R[2],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #2,1,0;K$,R[2],E \ If E Gosub ERR_SEARCH
let totrec=totrec+1
Goto L_2020
L_5000: Rem DELETE APDETL ON CLEARED CHECKS
If Not(C0[2]) Return 
If Not(C1) Return 
K6$ = " ",K6$ \ K6$[1,2] = C4 Using "##" \ K6$[3,8] = C1[1] Using "######"
K6$[9,14] = C1[0] Using "######" \ K2$ = K6$[1,14]
Search #6,3,1;K2$,R[6],E \ If E = 2 Goto L_5050
If E Gosub ERR_SEARCH
If K2$[1,14] = K6$[1,14] Return 
L_5050: K2$ = K6$[1,14]
Search #7,3,1;K2$,R[6],E \ If E = 2 Goto L_5100
If E Gosub ERR_SEARCH
If K2$[1,14] = K6$[1,14] Return 
Goto L_5100
L_5100: Rem GET APDETH FILE FOR DISBURSEMENTS
K2$ = " ",K2$ \ K2$[1,6] = C1 Using "######"
K2$[7,12] = C1[1] Using "######" \ K2$[20,20] = "9"
! delete the apdett
!Search #5,2,1;k2$,r[5],e
!if not(e)
!	search #5,5,1;k2$,r[5],e\if e<>0 gosub err_search: 
!	let e=3\search #5,1,0;k2$,r[5],e\if e<>0 gosub err_search: 
!endif
Search #3,2,1;K2$,R[3],E \ If E = 1 Return 
If E Gosub ERR_SEARCH
Mat Read #3,R[3],0;S; \ Mat Read #3,R[3],4;S$;
Mat Read #3,R[3],16;S1;
Mat Read #3,R[3],52;S2;
K3$ = " ",K3$ \ K3$[1,6] = R[3] Using "######"
L_5200: Search #4,3,1;K3$,R[4],E \ If E = 2 Return 
If E Gosub ERR_SEARCH
X2 = K3$[1,6]
If X2 <> R[3] Return 
Mat Read #4,R[4],0;S5; \ Mat Read #4,R[4],8;S6;
Mat Read #4,R[4],12;S5$; \ Mat Read #4,R[4],22;S7;
Mat Read #4,R[4],24;S6$; \ Mat Read #4,R[4],36;S8;
K4$ = " ",K4$ \ K4$[1,6] = S1[0] Using "######"
K4$[7,18] = S6$[1,12] \ K4$[19,20] = S7 Using "##"
Search #3,2,1;K4$,R,E \ If E = 1 Goto L_5310
If E Gosub ERR_SEARCH
Mat Read #3,R,0;M; \ If Not(M[1]) Goto L_5310
Mat Read #3,R,16;M1; \ If M1[5] <> C1[1] Goto L_5310
K6$ = " ",K6$ \ K6$[1,6] = R[0] Using "######" \ K6$[7,12] = C1[0] Using "######"
L_5310: Rem DELETE PAYMENT LINE LINKS FROM APDETL FILE
Search #4,5,1;K3$,R[4],E \ If E Gosub ERR_SEARCH
E = 3 \ Search #4,1,0;K3$,R[4],E \ If E Gosub ERR_SEARCH
Goto L_5200
Return 





ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End


OUTEND: Rem END OF PROGRAM
Z6 = 0
Write #1,51,4;Z6;

L_9020: !If Err 0 Rem
For X = 0 To 10
  Try Close #X Else Rem
Next X
!Chain "MX000"
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no reconciled checks available to accept"
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totrec)+" Reconciled Check(s) Accepted"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
!
include "src/callmainerrnet.inc"
end try
End ! the whole program