! >>> Program 202c
!
! description HAZARDOUS MATERIAL TRUCK ROUTING LIST
!
! loadsave -w -n 100,10 -o prog/dxport/202c.dl4 src/202c.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
!
!all rights reserved. (c)copyright 2007 by: Universal Business Systems
  !
  ! *declare common dl4 intrinsic subs & functions
  Declare Intrinsic Function trim$,dateusing$,fmtof
  Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
  !
  ! *declare common external libs & subs & functions
  External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr
  Declare External Function getmsg$,expandarray
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 25, 2005  12:00:01
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx2/mx202c.src (univ2) [txc] {03281}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String,VerifyDate,getglobals
!Option Default Dialect IRIS1
Rem MX202C - HAZ MAT LIST SORT - PRINT IS IN MX202D
Rem AUTHOR: TTT   FEB 20, 1989
Rem LAST UPDATE:  5/92 - ADD ORDER PRINTED SELECTION
! --------------------------------------------------------------------------
! custom changes xrev9 for White River Paper
! txc: cct 158145 zone detail per day for each customer / shiplist entry
! -----------------------------------------------------------------
Com 1%,SORT,SW[20],2%,D8
If Err 0 Gosub ERR_TRAP

Dim 1%,F,H4[2],J0,J2,J3,J4,J5,J6,J7[1],J8,J9[2],L3[3],Y,S2[1],PD1[9],N9[11]
Dim 2%,B[24],H0[12],H5[16],L4[3],L6[5],L9[1],S5,S8,X,X1,CURDATE,HA3[2]
Dim 2%,TRUCK,PT,DT3[1],JDATE,JWDATE
Dim 3%,A[6],J,J1,T9[20],X2,X3,X4,S0[1],T2[25],L7[12]
Dim HAZ$[40],TRUCK$[50]
Dim A1$[156],J$[50],J0$[15],J1$[50],J2$[20],J4$[75],J5$[70],K5$[50]
Dim J7$[40],J9$[50],K1$[55],K2$[60],K3$[55],L1$[60],L2$[20],ZONE$[2]
Dim S1$[118],S2$[20],T2$[8],T9$[26],X$[20],2%,A3[2],ORD
Dim V0$[10],P9$[50],HA1$[50],WEEKDAY_$[10],P61$[256],begTruck,endTruck
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],custom_customer$[30]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
  ! Dim U_TRUCK$[1000][10]
  Dim U_ZONE$[1000][10]
  Dim blockid$[100]
!!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If Err 0 Gosub ERR_TRAP
For J = 2 To 14
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1920","1840","1856","1888","1792"
Data "1872","720","-1 ","1728","2784","2128","-1","688"
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Mat Read #1,3,172;CURDATE;
Mat read #1,115,60;custom_customer$;
custom_customer$=UCASE$(TRIM$(custom_customer$))
If Err 0 Let J7[1] = Spc(8)
J7[1] = 0 \ J7 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J7[1] If J7[1] <> 49 Gosub ERR_TRAP
J7 = 55 \ If J7[1] Let J7 = 23
!
!

!call dxget("u_custom_customer", custom_customer$)
call dxget("U_JDATE",tmp1$) 
call dxget("U_WH",tmp$) \ WH = tmp$ 
! call dxget("U_S8",tmp$) \ if tmp$ = "3" let S8 = 0 else S8 = tmp$ !!drop list 1 2 3 have the orders been printed
call dxget("U_S8",tmp$) \ S8 = tmp$ !!drop list 1 2 3 4 have the orders been printed
if s8 = 4 let s8 = 6 ! invoice printed only
call dxget("U_Sort",tmp$) \ if tmp$ <> "" let SORT = 0 else  SORT = 1 !sort by haz class



!validations delivery date
tmp$ = tmp1$[5,6],tmp1$[1,2],tmp1$[3,4]
J1 = tmp$
X2 = J1 \ Gosub L_7700 !!!!UNPACK DATE  X2 TO X$
Gosub L_6900 !!! day
WEEKDAY_$ = X$[9]
D8 = J1
X2 = D8 \ Gosub L_7820  \ if errFlag = 1 let e$ = "Invalid date!" \ error 10000  !!!CONVERT YYMMDD TO JULIAN
JDATE = X2
X2 = D8 \ Gosub L_7700  !!!UNPACK DATE  X2 TO X$
F = Z9 + 1 \ If F < 1 or F > 7 let e$ = "Invalid date!!" \ error 10000
!
K1$ = K2$
J1 = 90 \ J2 = 0
!validations Warehouse
If WH < 1 Or WH > 99 let e$ = "Invalid warehouse, must be between 0 and 99!" \ error 10000
!!clearing sort file...
K1$ = " ",K1$
Search #9,3,1;K1$,V1,E
while not(E)
  Search #9,5,1;K1$,V1,E
  Search #9,3,1;K1$,V1,E
wend
!
!zone
K1$ = " ",K1$
ZONE:
If P61$[34,34] <> "Y"
  Search #2,3,1;K1$,V1,E 
  If E Goto exitSortZone
  Mat Read #2,V1,36;T2$;
  If T2$[F,F] <> "Y" Goto ZONE
  ZONE$ = K1$
Else 
  Search #3,3,1;K1$,V1,E \ If E = 2 Goto exitSortZone
  X2 = K1$[1,2] \ If X2 > 10 Goto exitSortZone
  Mat Read #3,V1,0;H0;
  Mat Read #3,V1,78;H4;
  Mat Read #3,V1,104;H5;
  If H4[2] <> WH Goto ZONE
  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto ZONE
  X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 999999
  if custom_customer$="MORRISETTE"
  	if x2 <> JDATE goto zone ! exact match on date
  else
	If x2 > JDATE Goto zone
  end if
  V1 = H0[2]
  Mat Read #4,V1,126;S2$;
  ZONE$ = S2$[19,20]
End If 
J4$ = " ",J4$ \ J4$ = "}",ZONE$
Search #9,4,1;J4$,V1,E 
Goto ZONE
exitSortZone:
K1$ = "}"
ZONECNT = 0
For I = 6 To 20
  Search #9,3,1;K1$,V1,E 
  If E Goto exitZone
  If K1$[1,1] <> "}" Goto exitZone
  U_ZONE$[ZONECNT] = trim$(K1$[2])
  ZONECNT = ZONECNT + 1
  If I = 20 Let I = 5
Next I
exitZone:
 Call getglobals("blockx",0,blockid$)
 If blockid$ = "202c"

	Call env(2,"NEXTBLOCK","202c2")
	! Call dxset("U_TRUCKS",U_TRUCK$[])
	Call dxset("U_ZONES",U_ZONE$[])
	! Call dxset("U_TRUCKCNT",str$(TRUCKCNT))
	Call dxset("U_ZONECNT",str$(ZONECNT))
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section, puts </page> in
	End 
		
 End If

! must be 202c2
call dxget("BEG_TRUCK",tmp$) \ begTruck = tmp$
call dxget("END_TRUCK",tmp$) \ endTruck = tmp$
if tmp$ = "" endTruck = 999999
call dxget("ALLZONES", tmp$) \ allZones = tmp$

if not(allZones) ! if all zones, leave all zones in sort file
	!clearing sort file...
	K1$ = " ",K1$
	Search #9,3,1;K1$,V1,E
	While Not(E)
		Search #9,5,1;K1$,V1,E
		Search #9,3,1;K1$,V1,E
	Wend
	!
	! TRUCK now handled as a range
	!
	! call dxget("U_TRUCKCNT",tmp$)
	!
	! TRUCKCNT = tmp$
	! for i = 0 to TRUCKCNT -1
	! 	call dxget("TRUCKS" + str$(i),tmp$)
	! 	tmp$ = "on"!!!dci2
	! 	if tmp$ <> ""  !!on
	! 		TRUCK = U_TRUCK$[i]
	! 		J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
	!         Search #9,4,1;J4$,V1,E
	! 	end if
	! Next i
	call dxget("U_ZONECNT",tmp$)
	ZONECNT = tmp$
	for i = 0 to ZONECNT -1
		call dxget("ZONES" + str$(i),tmp$)
		! tmp$ = "on"!!!dci2
		if tmp$ <> ""
			J4$ = " ",J4$ \ J4$ = "}",tmp$
			Search #9,4,1;J4$,V1,E
		end if
	Next i
end if ! if not(allZones)


L_1210: Rem ============== SELECT TRUCK(S)
!L_1220: Print @0,4;'CE';"ENTER FIRST TRUCK TO PRINT, <CR>:ALL TRUCKS THAT SHIP THIS DATE ";
!Input ""TRUCK$
!If TRUCK$ = "" Goto L_1270
!TRUCK = TRUCK$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1220
!Gosub L_1330 \ Goto L_2800
L_1270: Rem ================ SORT THE TRUCKS THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1290: Rem "thru file
!If P61$[34,34] <> "Y" ! "not multizone
!  Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1360
!  Mat Read #2,V1,36;T2$; \ Mat Read #2,V1,32;TRUCK;
!  If T2$[F,F] <> "Y" Goto L_1290
!Else 
!  Search #3,3,1;K1$,V1,E \ If E = 2 Goto L_1360
!  !If E Gosub ERR_SEARCH
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1360
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WH Goto L_1290
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1290
!  X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ if errFlag = 1 let  X2 = 999999
!  If X2 > JDATE Goto L_1290
!  V1 = H0[2]
!  Read #4,V1,146;S5;
!  TRUCK = S5
!End If 
!Gosub L_1330 \ Goto L_1290
L_1330: Rem INSERT SELECTED TRUCK INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "{",TRUCK Using "######"
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 
!L_1360: Rem ============ DISPLAY THE TRUCKS THAT SHIP
!Print @0,4;'CE';"THE FOLLOWING TRUCKS SHIP ON";WEEKDAY_$
!K1$ = "{" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1480
!  If K1$[1,1] <> "{" Goto L_1480
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1480
!  If I = 20 Let I = 5
!Next I
L_1480: Rem ============= EDIT TRUCKS
!Print @0,22;'CE';"ARE THESE TRUCKS OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_1600
!If J$ <> "N" Goto L_1480
!Print @0,22;'CE';"ENTER TRUCK TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1360
!TRUCK = J$ \ If TRUCK < 0 Or TRUCK > 999999 Goto L_1480
!K3$ = " ",K3$;K3$ = "{",TRUCK Using "######"
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1360
L_1600: Rem ============= SELECT ZONE(S)
!Print @0,4;'CE';"ENTER FIRST ZONE TO PRINT, <CR>:ALL ZONES THAT SHIP THIS DATE ";
!Input Len 16384 + 2;""ZONE$
!If ZONE$[1,2] = "  " Or ZONE$ = "" Goto L_1660
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Search #2,2,1;K1$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!If E
!  Print @0,5;'CE RB';"ZONE NOT ON FILE!"
!  Signal 3,20
!  Print @0,5;'CL';
!  Goto L_1600
!End If 
!ZONE$ = K1$
!Gosub L_1720 \ Goto L_2850
L_1660: Rem =============== SORT THE ZONES THAT SHIP FOR THIS DATE
!K1$ = " ",K1$
!L_1680: Rem "thru file
!If P61$[34,34] <> "Y"
!  Search #2,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1820
!  Mat Read #2,V1,36;T2$;
!  If T2$[F,F] <> "Y" Goto L_1680
!  ZONE$ = K1$
!Else 
!  Search #3,3,1;K1$,V1,E \ If E = 2 Goto L_1820
!  !If E Gosub ERR_SEARCH
!  X2 = K1$[1,2] \ If X2 > 10 Goto L_1820
!  Mat Read #3,V1,0;H0;
!  Mat Read #3,V1,78;H4;
!  Mat Read #3,V1,104;H5;
!  If H4[2] <> WH Goto L_1680
!  If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Or H5[7] = 2 Goto L_1680
!  X2 = H0[10] \ If X2 <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 999999
!  If X2 > JDATE Goto L_1680
!  V1 = H0[2]
!  Mat Read #4,V1,126;S2$;
!  ZONE$ = S2$[19,20]
!End If 
!Gosub L_1720 \ Goto L_1680
!L_1720: Rem INSERT SELECTED ZONE INTO SORTFILE
!J4$ = " ",J4$ \ J4$ = "}",ZONE$
!Search #9,4,1;J4$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!Return 

!L_1750: Rem =============== HAVE THE ORDERS BEEN PRINTED?
!S8 = 0 \ If P9$[45,45] = "Y" Goto L_1798
!L_1758: Print @0,22;'CE';"HAVE THE ORDERS BEEN PRINTED? (Y/N)  ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1758
!S8 = 1 \ If J$ = "Y" Let S8 = 2
!If S8 = 1 Goto L_1798
!L_1778: Rem =============== INCLUDE INVOICES?
!Print @0,22;'CE';"INCLUDE INVOICES IN SORT? (Y/N)   ";
!Input ""J$ \ If J$ = "E" Goto OUTEND
!If J$ <> "Y" If J$ <> "N" Goto L_1778
!If J$ = "Y" Let S8 = 0
!L_1798: Rem =============== SORT BY HAZ CLASS OR STOP
!L_1802: Print @0,22;'CL';"SORT BY HAZ CLASS OR STOP (H/S) ";
!SORT = 0
!Input ""J$ \ If J$ <> "H" If J$ <> "S" Goto L_1802
!If J$ = "H" Let SORT = 0
!If J$ = "S" Let SORT = 1
!Return 


L_1820: Rem ============ DISPLAY THE ZONES THAT SHIP
!Print @0,4;'CE';"THE FOLLOWING ZONES SHIP ON";WEEKDAY_$
!K1$ = "}" \ X = 5
!For I = 6 To 20
!  Search #9,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
!  If E Goto L_1930
!  If K1$[1,1] <> "}" Goto L_1930
!  Print @X,I;K1$[2];
!  If I = 20 Let X = X + 10
!  If X > 75 Goto L_1930
!  If I = 20 Let I = 5
!Next I
L_1930: Rem ============= EDIT ZONES
!Print @0,22;'CE';"ARE THESE ZONES OKAY TO SHIP? (Y/N/E) ";
!Input ""J$ \ If J$ = "E" Goto L_900
!If J$ = "Y" Goto L_2050
!If J$ <> "N" Goto L_1930
!Print @0,22;'CE';"ENTER ZONE TO DELETE ";
!Input ""J$ \ If J$ = "" Goto L_1820
!K3$ = "}  " \ K3$[2,Len(J$) + 1] = J$[1,Len(J$)]
!Search #9,5,1;K3$,V1,E
!!If E > 1 Gosub ERR_SEARCH
!Goto L_1820
!!!!!!!!!!!!
L_2050: Rem ============ FINISHED SELECTIONS
!Gosub L_1750
!Print @0,22;'CL';"SORTING....PLEASE WAIT...";
K1$ = " ",K1$
if s8 <> 3 ! not "order printed and invoice printed"
	K1$[1,2] = S8 Using "##"
else
	K1$[1,2] = 2 Using "##" ! start with printed
end if
L_2100: Search #3,3,1;K1$,V1,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
X2 = K1$[1,2]
IF s8 <> 3 ! not "order printed and invoice printed"
	If X2 <> S8 Goto L_9100
else
	if x2 > 6 Goto L_9100
end if
Mat Read #3,V1,66;V0$;
Mat Read #3,V1,0;H0;
if s8 <> 3
	If S8 <> H0 Goto L_9100
else
	if H0 > 6 Goto L_9100
end if
Mat Read #7,H0[3],8;T2;
Gosub L_5110
If Not(SW[6]) If N9[0] Goto L_2100
Mat Read #3,V1,104;H5;
If H5[7] = 21 Or H5[7] = 22 Or H5[7] = 5 Or H5[7] = 12 Goto L_2100
X2 = H0[10] \ If H0[10] <> 999999 Gosub L_7820 \ if errFlag = 1 let X2 = 0
JWDATE = X2
if custom_customer$="MORRISETTE"
	if x2 <> JDATE goto L_2100 ! exact match on date
else
	If x2 > JDATE Goto L_2100
end if
Mat Read #4,H0[2],8;S1$;
Mat Read #4,H0[2],126;S2$; \ Mat Read #4,H0[2],146;S5;
K3$ = " ",K3$ \ K3$ = "}",S2$[19,20]
Search #9,2,1;K3$,V2,E
If E Goto L_2100
! TRUCK$ = " ",TRUCK$;TRUCK$ = "{",S5 Using "######"
! Search #9,2,1;TRUCK$,V2,E !\ If E > 2 Gosub ERR_SEARCH
! If E Goto L_2100
if s5 < begTruck OR s5 > endTruck goto L_2100
Mat Read #3,V1,78;H4;
J$ = " ",J$ \ J$ = H0[7] Using "######"
If WH <> H4[2] Goto L_2100
K5$ = " ",K5$
K5$[1,6] = H0[7] Using "######"
L_2350: Search #5,3,1;K5$,R5,E !\ If E > 2 Gosub ERR_SEARCH
If E Goto L_2100
ORD = K5$[1,6]
If ORD <> H0[7] Goto L_2100
If (H5[7] = 21 Or H5[7] = 22) And K5$[7,9] = "   " Goto L_2350
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
mat read #5,r5,168;l7;
Mat Read #5,R5,256;S2;
if custom_customer$="WHITERIVER"
	IF L3[0] AND S2[0]=3 GOTO sorthere:  !  L_2350: ! "message line
	IF L7[4]<1 GOTO L_2350:
Else
	If L3[0] And S2[0] = 3 Goto L_2350
	If not(l7[4]) goto L_2350          !"task#21372
Endif
If L3[0] Gosub L_8000 \ Goto L_2470
Mat Read #6,L4,834;A3;
Mat Read #6,L4,744;HAZ$;
L_2470: If A3[0] <> 1 Goto L_2350
if not(a3[2]) goto L_2350 
SortHere: ! bypass check - message line
J4$ = " ",J4$ \ J4$[1,6] = S5 Using "######"
If SORT = 1 Let J4$[7,12] = H4[1] Using "######"
If SORT = 0 Let J4$[7,12] = A3[2] Using "######"
If SORT = 1 Let J4$[13,18] = A3[2] Using "######"
If SORT = 0 Let J4$[13,18] = 9000 - H4[1] Using "######"
if custom_customer$="WHITERIVER"
	LET J4$[19,24]=H0[7] USING "######"
	LET J4$[25,27]=L3[2] USING "###"
	LET J4$[28,33]=R5 USING "######"
Else
	J4$[19,24] = R5 Using "######"
Endif
Search #9,4,1;J4$,R5,E !\ If E Gosub ERR_SEARCH
Goto L_2350
!L_2800: Rem CONTINUE ENTERING TRUCKS
!!Print @0,22;'CE';"   ENTER NEXT TRUCK TO PRINT, WHEN DONE ENTER ''E''";
!Print @0,5;TRUCK; \ TRUCK$ = TRUCK \ X1 = X1 + Len(TRUCK$);X2 = 5
!L_2812: If X1 > 80 Let X2 = X2 + 1;X1 = 0
!L_2814: Print @X1,X2;
!Input Len 16390;""TRUCK$ \ If TRUCK$ = "E" Goto L_1600
!If TRUCK$ = "" Or TRUCK$[1,2] = "  " Goto L_2814
!TRUCK = TRUCK$
!If TRUCK < 0 Or TRUCK > 999999 Or Fra(TRUCK) Goto L_2814
!Gosub L_1330
!X1 = X1 + Len(TRUCK$) + 1 \ If X1 > 75 Let X2 = X2 + 1;X1 = 0
!Goto L_2812
L_2850: Rem KEEP ENTERING ZONES
!Print @0,22;'CE';"  ENTER ADDITIONAL ZONE TO PRINT, WHEN DONE ENTER ''/''"
!Print @0,5;ZONE$; \ X1 = Len(ZONE$) + 1;X2 = 5
!L_2865: If X1 > 76 Let X2 = X2 + 1;X1 = 0
!L_2870: Print @X1,X2; \ Input Len 16386;""ZONE$
!If ZONE$ = "/" Goto L_2050
!If ZONE$ = "" Or ZONE$ = "  " Goto L_2870
!If Len(ZONE$) = 1 Let ZONE$[2,2] = " "
!K1$ = ZONE$
!Search #2,2,1;K1$,V1,E !\ If E > 1 Gosub ERR_SEARCH
!If E
!  Print @0,6;'RB CE';"ZONE NOT ON FILE!"
!  Signal 3,20
!  Print @0,6;'CL';
!  Goto L_2870
!End If 
!ZONE$ = K1$ \ Gosub L_1720 \ Print @X1,X2;ZONE$
!X1 = X1 + Len(ZONE$) + 1
!If X1 > 77 Let X2 = X2 + 1;X1 = 0
!Goto L_2865
L_5110: Rem UNPACK T2[21] TO N9[x]
X2 = T2[21] \ For K = 0 To 11
  N9[K] = Sgn(Fra(X2 / 2)) \ X2 = Int(X2 / 2)
Next K \ Return 
L_6900: Rem DAY
Z1 = X$[7,8] \ Z2 = X$[1,2] \ Z3 = X$[4,5]
If Z1 < 85 Let Z1 = Z1 + 100
Z4 = Z2 + 1 \ Z5 = Int(1 / Z4 + .7) \ Z6 = Z1 - Z5 \ Z7 = Z4 + 12 * Z5
Z8 = Int(Z7 * 30.6001) + Int(Z6 * 365.25) + Z3 \ Z9 = Z8 - 7 * (Int(Z8 / 7))
J4$ = "SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   SATURDAY "
X$[9] = " ",J4$[Z9 * 9 + 1,Z9 * 9 + 9],"" \ Return 
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!J0 = J0$[1,1]
!J6 = J0$[2,2]
!J2 = J0$[3,4]
!J3 = J0$[5,6]
!J4 = J0$[7,8]
!J5 = J0$[9,10]
!If J0 < 3 Let J2$ = " ",J2$
!If J1$ = "" Let J1$[1,J3] = " ",J1$
!If J0 <> 3 If J0 <> 4 Goto L_7070
!If J0 = 3 Let J2$ = "#",J2$
!If J0 = 4 Let J2$ = "-",J2$
!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!L_7070: J1$[J3 + 1] = ""
!If J0 < 3 Goto L_7105
!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!If J0 = 6 Goto L_7105
!If J0 <> 5 Goto L_7100
!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!If Len(J4$) <= J3 Goto L_7130
!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!L_7145: For J8 = 1 To Len(J9$)
!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7185,L_7330 \ Stop 
!L_7165: J$ = J0$[2,2],J$
!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!Goto L_7345
!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!  If J9$[J8,J8] = " " Goto L_7235
!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!  If J9 Goto L_7250
!  J9 = 1
!L_7230: If J9 Let J9 = J9 + 1
!  If Not(J9) Let J9[1] = J9[1] + 1
!L_7235: Next J8
!If J0 = 5 Goto L_7265
!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!L_7260: Gosub L_7600 \ Goto L_7105
!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!If J9[1] < 1 Goto L_7325
!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!Goto L_7325
!L_7285: If J9[1] > 30 Goto L_7325
!L_7290: If J9[1] > 31 Goto L_7325
!Goto L_7315
!L_7300: If J9[1] > 29 Goto L_7325
!If Not(Fra(J9[2] / 4)) Goto L_7315
!If J9[1] > 28 Goto L_7325
!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!J$ = X$ \ J3 = 8 \ Goto L_7345
!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL'; \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
errFlag = 0
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E let errFlag = 1 !!Return 
X2 = X$[1,5] \ Return !!1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem GET N/S HAZ INFO
A3[0] = 0;HAZ$ = " ",HAZ$
Mat Read #12,L4[0],120;HA3;
Mat Read #12,L4[0],132;HA1$;
A3[0] = HA3[0];A3[1] = 0;A3[2] = HA3[2]
Return 
OUTEND: Rem END
End
!Print 'CS'
!Chain "MX000C"
L_9100: Rem NOW CHAIN TO PRINT PROGRAM
tmp$ = "202d.dl4"
if custom_customer$="WHITERIVER" let tmp$="202d.wrp.dl4"
Chain tmp$
chain write CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,J8
!Chain "MX202D"
Stop 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
!If Spc(8) = 99 ! "escape hit/return back
!  Print 'RB ML';" ";'ML';
!  Return -1
!End If 
!If Spc(8) = 123 ! "record lock
!  Escdis 
!  Window Open @0,0; Size 30,3; Using ""
!  Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
!  Signal 3,50
!  Window Close 
!  Escclr 
!  Return -1
!End If 
!Dim 2%
!Window Off 
!Print @0,Msc(34) - 1;'CR RB';"*********** BASIC ERROR ************";'CE RB'
!ENUM = Spc(8);ELINE = Spc(10);CTERR = 0
!If ENUM = 157 Let CTERR = Err(8)
!Print 'UK RB';"ERROR ";(ENUM + (CTERR * .001));"HAS OCCURRED ";
!Print "AT LINE";ELINE;'CL CR';"IN PROGRAM ";
!Goto ERR_MAIN
!ERR_SEARCH: Rem *Error routine (search error)   V3.1 8/94 G.DOSCHER/REK
!Dim 2%
!Window Off 
!Print @0,Msc(34) - 1;'CR RB';"*********** SEARCH  ERROR **********";'CE RB'
!ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
!If E = 5 Let CTERR = Err(8)
!Print 'RB';"RETURN STATUS";(E + (CTERR * .001));
!Print "/ STATEMENT";ELINE;'CL CR';"IN PROGRAM ";
!Goto ERR_MAIN
!ERR_ESCAPE: Rem *Error routine (escape abort)   V3.1 8/94 G.DOSCHER/REK
!If Spc(8) <> 99 Goto ERR_TRAP
!If Err 0 Rem
!CNTRLB_ERR_ESCAPE: Dim ABREQ$[10]
!If Err 0 Gosub ERR_TRAP
!Print @0,Msc(34) - 1;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  ";'RB CL';
!Input Len 16385;""ABREQ$
!Call String(1,ABREQ$)
!Print @0,Msc(34) - 1;'CL';
!If Err 0 Gosub ERR_ESCAPE
!If ABREQ$ <> "Y"
!  Print 'ML';" ";'ML';
!  Return -1
!End If 
!Goto OUTEND
!ERR_MAIN: Rem "main error handling logic
!If Err 0 Rem
!Dim PNAME$[50],PNAME1$[50],PNAME2$[80]
!PNAME$ = Msc$(4)
!Call String(1,PNAME$)
!POS_ = 1;POS1 = 0
!NAMEPARSE: Rem "get program name from path
!Search PNAME$[POS_],"/",POS1
!If POS1
!  POS_ = (POS_ + POS1)
!  Goto NAMEPARSE
!End If 
!Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
!Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL'
!Print "TRACE: ";'CL';
!STACKLOOP: Rem "print nesting information
!Print Using "<#####> ";Spc(16);
!If Spc(14) Goto STACKLOOP
!Print 'CR';"************************************"
!Close #0
!Open #0,"errorlog"
!Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR;
!Close #0
!Input Tim 6000;'CR';"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
!PNAME1$ = " ",PNAME1$;PNAME1$ = "HOME"
!Call String(2,PNAME$)
!System 28,PNAME1$
!Call String(5,PNAME2$)
!PNAME2$ = " ",PNAME2$
!PNAME2$ = "CHAIN ''SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!''\15\"
!Call InpBuf(PNAME2$)
!Stop 
Rem {end rtn.error.s}
