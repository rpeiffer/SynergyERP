! libcustdisplay.lib
!
! supporting library of ShipList routines for browser
!
! 1.0 10/22/07
!
! loadsave -w -n 100,10 -o prog/dxport/libshipldisplay.lib src/libshipldisplay.src
!
include "src/copyright.inc"
!
! sub & functions for list library
!
!	S	GetCustShipL	get Shiplist Data for a Customer
!	S   CSLList			shiplist list search (keywords have custs too)
!   S   CSLSales		customer/shiplist TY/LY Sales

include "src/inc/filecust.inc" ! customer file
include "src/inc/fileshiplist.inc" ! Shiplist file
include "src/inc/filecslkeywrd.inc" ! "cust/shiplist keywords
include "src/inc/filecslsales.inc" ! "cust/shiplist sales
include "src/inc/fileprod.inc" ! product file

External Lib "ubsfunc.dl4"
Declare External Function OpenFile,JDate$,PDate$,buildsort
Declare External Sub UserCntrl

Declare Intrinsic Sub Env,FormatDate,JuliantoDate,DatetoJulian
Declare Intrinsic Sub programdump,Stringsearch
Declare Intrinsic Function findchannel

External Lib "libgeneral.lib"
Declare External Sub SubErr,GetDelimiters

External Lib "libprodconv.lib"
Declare External Function ConvProdAmount

External Lib "ubsprconv.dl4"
Declare External Function XUnit$

Declare Sub updatelog
Declare function DoStrgSrch

! --------------------------------------------------------------------------------------
External Sub GetCustShipl(e$,List$[],SList$[],maxcnt,intCo,ReturnStatus,Message$)
  ! Creates a list of the customer's ShipList Detail (L Option - mx102)
  !
  ! e$         : error message
  ! List$[]    : Customer data list
  ! SList$[]	: ShipList selector list
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! ReturnStatus	: used for status
  ! Message$	: used for Status
  try
  !
	dim 1%,row,srow,tmp1,dir,CustChan,CTLChan,ShpLChan
	dim 2%,tmp2,tmpcnt,custid,stmpcnt,shipcustid
	dim 3%,tmp3,CustRec,SLRec
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[700],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],Cust$[64],shipcust$[64]
	dim X$[20],P9$[50],P60$[50],P61$[256],SLKey$[64]
	dim keysls$[30],slsname$[30],3%,rec_sls

	dim Cust. as cust
	dim Shpl. as shiplist

	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
	Call DXGet("custid",cust$) \ custid=cust$
	cust$=custid using "######"
	cust$ = cust$+"            "
	cust$[7]="" ! "cut after 6 chars
	let shipcust$=" ",shipcust$
	let shipcustid=0
	Try
		Call DXGet("shipcustid",shipcust$)
		shipcustid=shipcust$
		let shipcust$=shipcustid using "######"
		let shipcust$=shipcust$+"          "
		let shipcust$[7]="" ! cut after 6 chars
		
	else
		let shipcustid=custid
		let shipcust$=cust$
	end try
	if shipcustid>0
		let custid=shipcustid
		let cust$=shipcust$
	else
		let shipcustid=custid
		let shipcust$=cust$
	 endif
	 ! Open any files for this program
    CTLChan=OpenFile(-9999,intCo) \ If CTLChan = -1 Error 42
	mat read #CTLChan,19,50;P9$;
	mat read #CTLChan,60,50;P60$;
	mat read #CTLChan,61,0;P61$;

	CustChan=OpenFile(-1808,intCo) \ If CustChan = -1 Error 42
	ShpLChan=OpenFile(-2112,intCo) \ if ShpLChan = -1 Error 42
	SlsChan=OpenFile(-1824,intCo) \ if SlsChan = -1 Error 42

	ReturnStatus = 1
	Message$="OK"
    mode$="="
	dir=1
    CustRec = filegetcust(e$,CustChan,mode$,dir,cust$,cust.)
	if CustRec<=0
	  Clear cust.
	  ReturnStatus = 0
	  Message$="Customer Not Found"
	endif
!
	tmpcnt=maxcnt;stmpcnt=maxcnt
	clear List$[]
	clear SList$[]
	CustKey$=Cust$

	SList$[0]=bsdel$,"SHIPLIST",fdel$
	WebStr$="ID",fdel$,"Name",fdel$
	WebStr$=WebStr$,"City",fdel$,"State",fdel$
	SList$[1]=WebStr$
	List$[0]=bsdel$,"SHPLST DATA",fdel$
	WebStr$="ID",fdel$,"Name",fdel$
	WebStr$=WebStr$,"Addr1",fdel$,"Addr2",fdel$
	WebStr$=WebStr$,"City",fdel$,"State",fdel$,"ZipCode",fdel$
	WebStr$=WebStr$,"Country",fdel$,"Default",fdel$
	webstr$=webstr$,"SlsId",fdel$,"SlsName",fdel$
        
	List$[1]=WebStr$

	row=2
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	srow=2
	if srow>stmpcnt let stmpcnt=expandarray(e$,SList$[])
    If CustRec>0
		SLKey$=" ",SLKey$
		SLKey$=CustKey$+"   " ! so starts at Customer #
		mode$=">"
		dir=1
		Do
			SLRec=filegetshiplist(e$,ShpLChan,mode$,dir,SLkey$,Shpl.)
			If SLRec<0 or SLKey$[1,6]<>CustKey$[1,6] Exit Do
			WebStr$=SLKey$,fdel$ ! ID (cccccc.ssssss)
			WebStr$=WebStr$,RTrim$(Shpl.Name$),fdel$ ! name
			WebStr$=WebStr$,RTrim$(Shpl.City$),fdel$ ! city
			WebStr$=WebStr$,RTrim$(Shpl.State$),fdel$ ! state
			SList$[srow]=WebStr$
			srow=srow+1
			if srow>stmpcnt let stmpcnt=expandarray(e$,SList$[])
			WebStr$=SLKey$,fdel$ ! ID (cccccc.ssssss)
			WebStr$=WebStr$,RTrim$(Shpl.Name$),fdel$ ! name
			WebStr$=WebStr$,RTrim$(Shpl.Address$),fdel$ ! address 1
			WebStr$=WebStr$,RTrim$(Shpl.OptAddress$),fdel$ ! address 2
			WebStr$=WebStr$,RTrim$(Shpl.City$),fdel$ ! city
			WebStr$=WebStr$,RTrim$(Shpl.State$),fdel$ ! state
			WebStr$=WebStr$,RTrim$(Shpl.ZipCode$),fdel$ ! zip code
			WebStr$=WebStr$,RTrim$(Shpl.Country$),fdel$ ! country
			let tmp$="0"
			if ShpL.Shiplistnumber=custid let tmp$="1"
			let webstr$=webstr$,tmp$,fdel$ ! default
			if shpl.Slsm<>0
				let keysls$=shpl.Slsm using "###"
			else
				let keysls$=cust.SalesmanCode using "###"
			endif
			let slsname$="Not on file"
			search #slschan,2,1;keysls$,rec_sls,e
			if not(e)
				read #slschan,rec_sls,0;slsname$;
			endif
			let webstr$=webstr$,trim$(keysls$),fdel$
			let webstr$=webstr$,rtrim$(slsname$),fdel$

			List$[row]=WebStr$
			row=row+1
			if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	    Loop ! of shiplists for customer
	endif ! valid cust rec
	Close #CustChan
	Close #CTLChan
	Close #ShpLChan
	Close #SlsChan
	!
	SList$[srow]=esdel$ ! end of section
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! GetCustShipl
! --------------------------------------------------------------------------------------
External Sub CSLList(e$,IntCo,List$[],maxcnt,ctlc,cuc,slc,debugdetail,dblog$,Userid$)
! intco = company #     doc=CustShipScanList.doc
! List$[] = return data
! maxcnt = max # lines
! ctlc = cntrl file chan
! cuc = Custfile channel
! debugdetail = 0-NO, 1=YES  to show debug details
! dblog$ = file for storing debug info
! UserId$ = Userid of person running

Declare sub updatelog
Declare function DoStrgSrch
  Try
	dim K$[60],P9$[50],P60$[50],P61$[256],Stxt$[60]
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	Dim k1$[60],k2$[60],k3$[60],Prod$[12],Mfld$[30],mode$[5]
	Dim LPCol1$[30],LPCol2$[40],LPCol3$[40],LPCol4$[40]
	Dim Spaces$[200],SUM$[4],Unit$[4],SKey$[60],PMask$[20]
	Dim X$[20],QMask$[20],Cust$[60],SHKey$[64],dmsg$[200]
	
	Dim 1%,SType,LPSrch,OType,Whse,Pram[5],AVUM
	Dim 1%,Cnvtu[2],Flag,X1[9],X[9],PSD[2]
	Dim 2%,row,tmpcnt,Custnum,Dept,Shpl,X2[9],Cust,Q0[1]
	Dim 2%,JDate[5],Frq[2]
	Dim 3%,Rec[99],QtyAvl,Amount,CNVTA,X3[9]
	If debugdetail let debug=1 Else let debug=0

	Dim Cust. as cust
	dim CKW. as cslkeywrd
	Dim Sl. as shiplist
	
	Spaces$=" ",Spaces$
	Try
	  Mat read #ctlc,19,50;p9$;
	else
	  CTlc=OpenFile(-9999,Intco) \ if ctlc=-1 Error 42
	End try
	
	Mat Read #ctlc,19,50;p9$;
	Mat Read #ctlc,60,50;P60$;
	Mat Read #ctlc,61,0;P61$;

	If Cuc<=0
		CUC=OpenFile(-1808,IntCo) \ if CUC=-1 Error 42
	Endif
	if slc<=0
		SLC=OpenFile(-2112,IntCo) \ if slc=-1 Error 42
	Endif
	! get search parameters to find other files
	Call DXGet("STEXT",tmp$) ! search text
	Let Stxt$=tmp$ ! RTrim$(tmp$) ! rtrim removes characters?
	Call DXGet("STYPE",tmp$) ! search based on
	tmp$=RTrim$(tmp$) \ tmp$=UCase$(tmp$)
	SType=-1 ! no type yet
	If tmp$="NAME" Let SType=0 ! Name type 
	If tmp$="CODE" Let SType=1 ! 
	If tmp$="ADDRESS" Let SType=2 !
	If tmp$="CITY" Let SType=3 ! 
	If tmp$="STATE" let SType=4 !
	If tmp$="ZIPCODE" Let SType=5 !
	If tmp$="UDA2" let SType=6 ! UDA
	If tmp$[1,4]="KEYW" Let SType=7 ! keyword
	If tmp$="PHONE" Let Stype=8 ! Phone
	If tmp$="CONTACT" let SType=9
	If tmp$="ALL" let SType=10 ! scan all
	Call DXGet("BCDATA",tmp$) ! begins with/contains
	DType=0 ! begins with
	tmp$=UCase$(tmp$)
	If tmp$[1,1]="C" let DType=1 ! contains
	! got passed data - continue
	If SType=7 ! need keyword index
		KWC=OpenFile(-9971,IntCo) \ if KWC=-1 Error 42 ! cust keyword index file
		SFC=buildsort(e$,30,0) ! index file
	Endif
	If SType=10 ! need keyword file
		CKC=OpenFile(-9972,IntCo) \ if CKC=-1 Error 42 ! cust keyword file
	Endif
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
	if debugdetail
		tmp$="BEGIN" \ if dtype=1 let tmp$="CONTAIN"
		dmsg$="Scan  T="+Str$(SType)
		dmsg$=dmsg$+" "+tmp$+" "+Stxt$
		Call updatelog(debug,dblog$,dmsg$,Userid$)
	Endif
	Clear List$[]
	Let tmpcnt=maxcnt;row=0
	! LIST HEADER
	List$[0]=bsdel$,"CUSTSHIPSEARCH",fdel$
	WebStr$="CUSTID",fdel$,"SHIPID",fdel$,"NAME",fdel$
	WebStr$=WebStr$,"ADDR1",fdel$,"ADDR2",fdel$
	WebStr$=WebStr$,"CITY",fdel$,"ST",fdel$
	WebStr$=WebStr$,"ZIP",fdel$,"PHONE",fdel$
	WebStr$=WebStr$,"CONTACT",fdel$,"KEYWORD",fdel$
	List$[1]=WebStr$
	row=2
	Let SKey$=Spaces$;NumSrch=0;mode$=">"
	if stype=1 ! code
		dpos=0;spos=1
		search Stxt$[spos],".",dpos
		x3=Stxt$;X3[1]=STxt$[dpos+1]
		SKey$=X3 Using "######"
		if dpos>1
			Skey$[7]="."
			SKey$[8]=X3[1] Using "&&&&&&"
		Endif
		mode$=">="
		If X3 let k2$=SKey$ Else Let k2$=""
	Endif
	Shipto=9
	! now the scans - do if / endif and a loop
	NxtKey: ! start here
	If SType<>7 ! all rest use custfile
		SLR=filegetshiplist(e$,SLC,mode$,1,SKey$,sl.)
		NumSrch=NumSrch+1
		mode$=">" ! always
		If Slr<=0 let E$="" \ goto csdone
		tmp$=UCase$(STxt$) ! matrh string (always compare same CASE)
		If Len(tmp$)=0 goto AllMtch ! no search data? ALL MATCH?
		If stype=0 let tmp1$=UCase$(sl.Name$)! name
		if stype=1  ! code
			let tmp1$=Spaces$
			If K2$<>"" if Skey$<>K2$ goto csdone
		Endif
		if stype=2 let tmp1$=UCase$(sl.Address$)+UCase$(sl.OptAddress$) ! address
		If stype=3 let tmp1$=UCase$(sl.City$) ! city
		if stype=4 let tmp1$=UCase$(sl.State$) ! state
		if stype=5 let tmp1$=sl.ZipCode$ ! zip
		if stype=6 let tmp1$=UCase$(sl.UdaAlpha1$) ! uda1
		if stype=8 let tmp1$=sl.PhoneNumber$ ! phone
		if stype=9 let tmp1$=UCase$(sl.Contact$) ! contact
		If Stype=10 ! load/check all
			X1=0
			For x=1 to 8 ! load/check 8 fields
				If X=1 let tmp1$=UCase$(sl.Name$)! name
				if X=2 let tmp1$=UCase$(sl.Address$)+UCase$(sl.OptAddress$) ! address
				If X=3 let tmp1$=UCase$(sl.City$) ! city
				if X=4 let tmp1$=UCase$(sl.State$) ! state
				if X=5 let tmp1$=sl.ZipCode$ ! zip
				if X=6 let tmp1$=UCase$(sl.UdaAlpha1$) ! uda1
				if X=7 let tmp1$=sl.PhoneNumber$ ! phone
				if X=8 let tmp1$=UCase$(sl.Contact$) ! contact
				! do check
				X1=DoStrgSrch(dtype,tmp$,tmp1$)
				If X1=1 Let X=99 ! search til found only
			Next X
		Else ! single search
		! search string
		  X1=DoStrgSrch(dtype,tmp$,tmp1$)
		Endif
		if stype=1 let x1=1 ! all codes match
		if SType<>10 and x1<>1 goto Nxtkey ! no match
		If Stype=10 and x1<>1 ! no match yet - check keyword file
			Cust$=" ",Cust$;X1=0
			Cust$[1,13]=sl.ShiplistNumber Using "######.&&&&&&"
			Cust$[14]="" ! leave 7 blank
			CKR=filegetcslkeywrd(e$,CKC,"=",1,Cust$,CKW.)
			If CKR<=0 goto NxtKey ! not found anywhere
			tmp1$=UCASE$(CKW.Keyword1$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword2$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword3$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword4$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword5$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword6$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword7$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword8$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword9$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword10$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword11$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword12$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword13$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword14$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword15$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword16$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword17$) ! Note
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword18$) ! Name 1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword19$) ! Name 2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword20$) ! Addr1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword21$) ! Addr1
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword22$) ! Addr2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword23$) ! Addr2
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword24$) ! City
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword25$) ! State
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword26$) ! Zip
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword27$) ! Phone
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword28$) ! Contact
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword29$) ! AP Phone
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			tmp1$=UCASE$(CKW.Keyword30$) ! AP Contact
			X1=DoStrgSrch(dtype,tmp$,tmp1$)
			If X1=1 goto GotKWMtch	
			Goto NxtKey ! no match
		GotKWMtch: ! found one - continue
		Endif ! of also check keywords on all
	Endif ! of type<>7
	If Stype=7  ! do keywords ONLY
		If NumSrch=0 let K$=" ",K$
		iF dtype=0 ! begins with
			If NumSrch=0 let K$=UCase$(STXT$)
			Search #KWC,3,1;K$,R,E
			NumSrch=NumSrch+1
			If E=2 goto csdone
			let tmp$=UCase$(STXT$)
			let tmp1$=UCase$(K$[1,15])
			If Len(tmp$)>0 
				If tmp$<>tmp1$[1,len(tmp$)] goto csdone ! no match
			Endif ! no search = ALL MATCH
		Else ! contains (search ALL KeyWords)
			Search #KWC,3,1;K$,R,E
			NumSrch=NumSrch+1
			If E=2 goto csdone
			let tmp$=UCase$(STXT$)
			let tmp1$=UCase$(K$[1,15])
			If Len(Tmp$)>0 
				Call StringSearch(tmp1$,tmp$,X1) ! x1=1 for found
				if x1<>1 goto nxtkey ! not found
			Endif ! all match
		Endif
		! so matches - get customer
		Cust$=K$[16,21];shkey$=k$[16]
		Cust$[7]="" ! cut to length
		cur=filegetcust(e$,CUC,"=",1,Cust$,cust.)
		If CUR<0 goto NxtKey ! not found
		if len(shkey$)>8 ! it's a shiplist
			SLR=filegetshiplist(E$,SLC,"=",1,Shkey$,sl.)
			If SLR<0 goto nxtkey ! not found
			Shipto=9
		Else 
			Shipto=0
		Endif
		k1$=K$[16] ! key as found
		Search #SFC,4,1;k1$,CUR,E
		If E=1 Goto NxtKey ! already sent once!
	Endif
	AllMtch: ! did not enter search text - ALL MATCH
	! made thru - load string
	if shipto=0 ! cust keyword
		WebStr$=Str$(cust.CustomerCode),fdel$ ! cust #
		webstr$=Webstr$,"",fdel$ ! NO SHIPTO
		WebStr$=WebStr$,RTrim$(cust.Name$),fdel$ ! name
		WebStr$=WebStr$,RTrim$(cust.Addr1$),fdel$ ! addr 1
		WebStr$=WebStr$,RTrim$(cust.Addr2$),fdel$ ! addr 2
		WebStr$=WebStr$,RTrim$(cust.City$),fdel$ ! city
		WebStr$=WebStr$,RTrim$(cust.State$),fdel$ ! state
		WebStr$=WebStr$,RTrim$(cust.Zip4$),fdel$ ! zip
		WebStr$=WebStr$,RTrim$(cust.Phone$),fdel$ ! phone
		WebStr$=WebStr$,RTrim$(cust.Contact$),fdel$ ! contact
		If Stype<>7 and SType<>10
			WebStr$=WebStr$,RTrim$(cust.UserDefined1$),fdel$ ! uda (if not keyword)
		Else ! is keyword
			WebStr$=WebStr$,RTrim$(tmp1$),fdel$ ! keyword match
		Endif
	Else ! it's shipto
		WebStr$=Str$(Int(sl.ShiplistNumber)),fdel$ ! cust #
		x3=fra(sl.ShiplistNumber)*1000000
		webstr$=Webstr$,Str$(X3),fdel$ !  SHIPTO
		WebStr$=WebStr$,RTrim$(sl.Name$),fdel$ ! name
		WebStr$=WebStr$,RTrim$(sl.Address$),fdel$ ! addr 1
		WebStr$=WebStr$,RTrim$(sl.OptAddress$),fdel$ ! addr 2
		WebStr$=WebStr$,RTrim$(sl.City$),fdel$ ! city
		WebStr$=WebStr$,RTrim$(sl.State$),fdel$ ! state
		WebStr$=WebStr$,RTrim$(sl.ZipCode$),fdel$ ! zip
		WebStr$=WebStr$,RTrim$(sl.PhoneNumber$),fdel$ ! phone
		WebStr$=WebStr$,RTrim$(sl.Contact$),fdel$ ! contact
		If Stype<>7 and SType<>10
			WebStr$=WebStr$,RTrim$(sl.UdaAlpha1$),fdel$ ! uda (if not keyword)
		Else ! is keyword
			WebStr$=WebStr$,RTrim$(tmp1$),fdel$ ! keyword match
		Endif
	Endif ! cust or shipto
	List$[row]=WebStr$
	Let row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	Goto NxtKey

	CSDone: ! finished
	if debugdetail
		dmsg$="Scan complete NUM="+Str$(row-2)+" "+e$ \ Call updatelog(debug,dblog$,dmsg$,Userid$)
	Endif
	! done
    List$[row]=esdel$ \ row=row+1 ! end of section
	!
	Let E$=""
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! CSLList
! -------------------------------------------------------------------------------------
Sub updatelog(debug,dblog$,dmsg$,Userid$)                                        
    If not(debug) Exit Sub                                    
	System "echo ''" + msc$(0) + " UID "+Userid$+" " + dmsg$ + "'' >> " + dblog$
End Sub 
! 
!--------------------------------------------------------------------
Function DoStrgSrch(dtype,tmp$,tmp1$)
! string search function
! returns x1
X1=0 ! no match
if dtype=0 ! begins with
	If tmp$=tmp1$[1,Len(tmp$)] let x1=1
Else ! contains
	Call StringSearch(tmp1$,tmp$,X1) ! x1=1 for found
Endif
End Function x1
! 
!--------------------------------------------------------------------
External Sub CSLSales(e$,List$[],maxcnt,intCo,ReturnStatus,Message$)
  ! Creates a list of the customer/Shiplist's Monthly Sales 
  !
  ! e$         : error message
  ! List$[]    : Customer misc list
  ! maxcnt     : max # of lines for list$[]
  ! intCo      : company id #
  ! ReturnStatus	: used for status
  ! Message$	: used for Status
try
!
   dim 1%,tmp1,Dir,CustChan,CTLChan,CSLSChan
    dim 1%,BOYMonth,EOYMonth,ARMonth,x1[9],I,x6,x7,x8
	Dim 1%,Cnvtu[2]
	dim 2%,tmp2,tmpcnt,custid
    dim 3%,tmp3,CustRec,T9[2]
	dim 3%,S1[12,2],S2[12,2],Z1[12,2],Z2[12,2],Amount,X3,CNVTA
	Dim 3%,T1[12,2],T2[12,2]
	Dim 1%,FndUID,UA5[10],Cost_Lev[3] ! vars for call usercntrl
	Dim UserID$[8],UA2$[50],TUID$[10] ! vars for call usercntrl
	dim bsdel$[20],esdel$[20],rdel$[20],fdel$[20],rstr$[500]
    dim tmp$[200],tmp1$[200],WebStr$[400],Message$[200]
	dim CustKey$[64],Mode$[2],blank$[100],P61$[256],Cust$[64]
	Dim Prod$[12],ShpKey$[14],CSLKey$[64],FMth$[12,10]
	dim X$[20],Mth$[120],Mask$[15],3%,CSLR
	Blank$=" ",Blank$
!
	dim Cust. as cust
	dim CSLS. as cslsales
	dim pr. as prod
	dim sl. as shiplist

!
	!! get costlev
	Call DXGet("S_USER.ID",tmp$) ! get from system variable
	Let UserID$=UCase$(tmp$) ! make sure it's UPPERCASE as that's what PM uses
	let TUID$=UserID$+"          " ! set up temp var
	If Len(TUID$)>10 Let TUID$[11]="" ! Cut it at max as usercntrl is 10 chars vs 8 for .net
	If TUID$[1,10]<>"          " !  no blank users!
	  Call UserCntrl(TUID$,UA2$,UA5[],FndUID,intCo)
	  If FndUID=0 ! means found it, =1 is not found
	    Cost_Lev[0]=UA5[0];Cost_Lev[1]=UA5[1] ! avg / load
		Cost_Lev[2]=UA5[2];Cost_Lev[3]=UA5[3] ! PO / base
	  Endif ! if not found would be zeroes from dim
	Endif
	call GetDelimiters(e$,bsdel$,esdel$,rdel$,fdel$)
	Call DXGet("custid",cust$) \ custid=cust$
	cust$=custid using "######"
	cust$ = cust$+"            "
	cust$[7]="" ! "cut after 6 chars
	Call DXGet("SHIPID",tmp$)
	ShipNo=tmp$
  ! Open any files for this program
    CTLChan=OpenFile(-9999,intCo) \ If CTLChan = -1 Error 42
	CustChan=OpenFile(-1808,intCo) \ If CustChan = -1 Error 42
	SLC=OpenFile(-2112,IntCo) \ if SLC=-1 Error 42
	CCC=OpenFile(-1728,IntCo) \ if CCC=-1 Error 42
	PRC=OpenFile(-1792,IntCo) \ if PRC=-1 Error 42
	CSLSChan=findchannel()
	tmp$="4/CSLSALES"+Str$(IntCo)
	ROpen #CSLSChan,tmp$

	FMth$[1]="January"
	FMth$[2]="February"
	FMth$[3]="March"
	FMth$[4]="April"
	FMth$[5]="May"
	FMth$[6]="June"
	FMth$[7]="July"
	FMth$[8]="August"
	FMth$[9]="September"
	FMth$[10]="October"
	FMth$[11]="November"
	FMth$[12]="December"
	Mask$="---------.##" ! can do up to 99,999,999.99
	ReturnStatus = 1
	Message$="OK"
    mode$="="
	dir=1
    CustRec = filegetcust(e$,CustChan,mode$,dir,cust$,cust.)
	if CustRec<=0
	  Clear cust.
	  ReturnStatus = 0
	  Message$="Customer Not Found"
	endif
	ShpKey$=" ",ShpKey$
	ShpKey$=Cust$+"."
	ShpKey$[8]=ShipNo Using "&&&&&&"
	SLR=filegetshiplist(e$,SLC,"=",1,ShpKey$,sl.)
	If SLR<0
		Clear Sl.
		ReturnStatus=0
		Message$="ShipList not found"
	Endif
!
	Clear T1[]
	Clear T2[]
	mat read #CTLChan,61,0;P61$; ! system flags
	Mat READ #CTLChan,51,74;BOYMONTH;
	Mat READ #CTLChan,0,120;ARMONTH; 

	tmpcnt=maxcnt
	clear List$[]
	! set up month names
	X1=BOYMonth
	for x=1 to 12
		let x1[1]=((x-1)*10)+1 ! start of string
		let mth$[x1[1]]=fmth$[x1]
		x1=x1+1 \ if x1>12 let x1=1
	Next x
	!
	! three sections - 1=header & cust info, 2=TY, 3=LY
 	List$[0]=bsdel$,"CUSTSHIPSALES",fdel$
	WebStr$="ID",fdel$,"Name",fdel$
	List$[1]=WebStr$
	WebStr$=ShpKey$,fdel$,RTrim$(sl.Name$),fdel$
	List$[2]=WebStr$
	List$[3]=esdel$
	WebStr$=bsdel$,"CURRENT YEAR SALES",fdel$
	List$[4]=WebStr$
	WebStr$="MONTH",fdel$,"UNIT SALES",fdel$
	WebStr$=WebStr$,"NET SALES",fdel$,"COST OF SALES",fdel$,"GP %",fdel$
	List$[5]=WebStr$
	row=6 ! start of data
	if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
	If SLR>0 
		CSLKey$=" ",CSLKey$
		CSLKey$=Cust$
		CSLKey$[7]=ShipNo Using "######"
	  Do
		CSLR=filegetcslsales(e$,CSLSChan,">",1,cslkey$,csls.)
		If CSLR<0 Exit do
		X2=cslkey$[1,6] \ if x2<>custid Exit do
		x2=cslkey$[7,12] \ if x2<>shipno exit do
		
		! move names into z1[],z2[] so we can use variables instead of Names
		
		Let z1[0,0]=CSLS.YTDUnits \ let z1[0,1]=CSLS.YTDDol \ let z1[0,2]=CSLS.YTDCost
		Let Z1[1,0]=CSLS.JanUnits \ let z1[1,1]=CSLS.JanDol \ let z1[1,2]=CSLS.JanCost
		let z1[2,0]=CSLS.FebUnits \ let z1[2,1]=CSLS.FebDol \ let z1[2,2]=CSLS.FebCost
		let z1[3,0]=CSLS.MarUnits \ let z1[3,1]=CSLS.MarDol \ let z1[3,2]=CSLS.MarCost
		let z1[4,0]=CSLS.AprUnits \ let z1[4,1]=CSLS.AprDol \ let z1[4,2]=CSLS.AprCost
		let z1[5,0]=CSLS.MayUnits \ let z1[5,1]=CSLS.MayDol \ let z1[5,2]=CSLS.MayCost
		let z1[6,0]=CSLS.JunUnits \ let z1[6,1]=CSLS.JunDol \ let z1[6,2]=CSLS.JunCost
		let z1[7,0]=CSLS.JulUnits \ let z1[7,1]=CSLS.JulDol \ let z1[7,2]=CSLS.JulCost
		let z1[8,0]=CSLS.AugUnits \ let z1[8,1]=CSLS.AugDol \ let z1[8,2]=CSLS.AugCost
		let z1[9,0]=CSLS.SepUnits \ let z1[9,1]=CSLS.SepDol \ let z1[9,2]=CSLS.SepCost
		let z1[10,0]=CSLS.OctUnits \ let z1[10,1]=CSLS.OctDol \ let z1[10,2]=CSLS.OctCost
		let z1[11,0]=CSLS.NovUnits \ let z1[11,1]=CSLS.NovDol \ let z1[11,2]=CSLS.NovCost
		let z1[12,0]=CSLS.DecUnits \ let z1[12,1]=CSLS.DecDol \ let z1[12,2]=CSLS.DecCost
		Let z2[0,0]=CSLS.LyrYtdUnits \ let z2[0,1]=CSLS.LyrYtdDol \ let z2[0,2]=CSLS.LyrYtdCost
		Let z2[1,0]=CSLS.LYJanUnits \ let z2[1,1]=CSLS.LYJanSDols \ let z2[1,2]=CSLS.LYJanCost
		let z2[2,0]=CSLS.LYFebUnits \ let z2[2,1]=CSLS.LYFebSDols \ let z2[2,2]=CSLS.LYFebCost
		let z2[3,0]=CSLS.LYMarUnits \ let z2[3,1]=CSLS.LYMarSDols \ let z2[3,2]=CSLS.LYMarCost
		let z2[4,0]=CSLS.LYAprUnits \ let z2[4,1]=CSLS.LYAprSDols \ let z2[4,2]=CSLS.LYAprCost
		let z2[5,0]=CSLS.LYMayUnits \ let z2[5,1]=CSLS.LYMaySDols \ let z2[5,2]=CSLS.LYMayCost
		let z2[6,0]=CSLS.LYJunUnits \ let z2[6,1]=CSLS.LYJunSDols \ let z2[6,2]=CSLS.LYJunCost
		let z2[7,0]=CSLS.LYJulUnits \ let z2[7,1]=CSLS.LYJulSDols \ let z2[7,2]=CSLS.LYJulCost
		let z2[8,0]=CSLS.LYAugUnits \ let z2[8,1]=CSLS.LYAugSDols \ let z2[8,2]=CSLS.LYAugCost
		let z2[9,0]=CSLS.LYSepUnits \ let z2[9,1]=CSLS.LYSepSDols \ let z2[9,2]=CSLS.LYSepCost
		let z2[10,0]=CSLS.LYOctUnits \ let z2[10,1]=CSLS.LYOctSDols \ let z2[10,2]=CSLS.LYOctCost
		let z2[11,0]=CSLS.LYNovUnits \ let z2[11,1]=CSLS.LYNovSDols \ let z2[11,2]=CSLS.LYNovCost
		let z2[12,0]=CSLS.LYDecUnits \ let z2[12,1]=CSLS.LYDecSDols \ let z2[12,2]=CSLS.LYDecCost
		
		! Now adjust for fiscal years INTO S1[] & S2[] (taken from 102m program)
		LET X7=BOYMONTH
		FOR I=0 TO 12
		  FOR X6=0 TO 2
		   IF I LET S1[I,X6]=Z1[X7,X6] ELSE  LET S1[0,X6]=Z1[0,X6]
		  NEXT X6
		  IF I IF X7=ARMONTH LET I=13
		  IF I LET X7=X7+1 \ IF X7=13 LET X7=1
		NEXT I
		LET X7=BOYMONTH;X8=0
		FOR I=0 TO 12
		  FOR X6=0 TO 2
		    IF NOT(I)
			  LET S2[0,X6]=Z2[0,X6]
		    Else
			  IF NOT(X8) LET S2[I,X6]=Z2[X7,X6] ELSE  LET S2[I,X6]=Z1[X7,X6]
			endif
		  NEXT X6
		  IF I IF X7=ARMONTH LET X8=1
		  IF I LET X7=X7+1 \ IF X7=13 LET X7=1
		NEXT I
		! option 1 - TOTAL ALL SHIPLIST/PRODUCTS INTO 1 TOTAL
		For X=0 to 12
			for y=0 to 2
				let t1[x,y]=t1[x,y]+S1[x,y] ! this year
				let t2[x,y]=t2[x,y]+S2[x,y] ! last year
			Next y
		Next X
	Loop
	! move t1 & t2 back into S1 & S2
	For X=0 to 12
		For Y=0 to 2
			Let S1[x,y]=T1[x,y]
			Let S2[x,y]=T2[x,y]
		Next Y
	Next X
		! okay now load strings
		T9[0]=0;T9[1]=0;T9[2]=0
		For X1=1 to 12
			WebStr$=RTrim$(Mth$[(x1-1)*10+1,X1*10]),fdel$
			! WebStr$=WebStr$,RTrim$(Prod$),fdel$,RTrim$(pr.Desc1$),fdel$
			!cnvtu[0]=0;cnvtu[1]=pr.UMSellDefault;cnvtu[2]=1
			!CNVTA=S1[x1,0]
			X3=S1[x1,0] ! ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,PR.)
			WebStr$=WebStr$,X3 Using Mask$,fdel$ ! "qty
			! tmp$=XUnit$(pr.UMSellDefault,ccc) ! u/m
			! WebStr$=WebStr$,tmp$,fdel$ ! sell UM
			WebStr$=WebStr$,S1[x1,1] Using Mask$,fdel$ ! dollars
			If Cost_Lev[1]>0 ! load cost level
			  WebStr$=WebStr$,S1[x1,2] Using Mask$,fdel$ ! cost
			  tmp3=0
			  If s1[x1,1]<>0 let tmp3=(((S1[x1,1]-S1[x1,2])/S1[x1,1])*100)
			  WebStr$=WebStr$,tmp3 Using "----#.##","%",fdel$
			Else ! no cost level
			  WebStr$=WebStr$," ",fdel$ ! send blank for cost
			  WebStr$=WebStr$," ",fdel$ ! send blank for gp %
			Endif
			List$[row]=WebStr$
			row=row+1
			if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
			LET T9=T9+S1[X1,0];T9[1]=T9[1]+S1[X1,1];T9[2]=T9[2]+S1[X1,2]
		Next X1
		X1=0;S1[0,0]=T9;S1[0,1]=T9[1];S1[0,2]=T9[2]
		WebStr$="YTD Total",fdel$ ! ,"",fdel$,"",fdel$ ! month,prod,desc
		WebStr$=WebStr$,S1[x1,0] Using Mask$,fdel$ ! ,"",fdel$ ! "qty,um
		WebStr$=WebStr$,S1[x1,1] Using Mask$,fdel$ ! dollars
		If Cost_Lev[1]>0 ! load cost level
		  WebStr$=WebStr$,S1[x1,2] Using Mask$,fdel$ ! cost
		  tmp3=0
		  If s1[x1,1]<>0 let tmp3=(((S1[x1,1]-S1[x1,2])/S1[x1,1])*100)
		  WebStr$=WebStr$,tmp3 Using "----#.##","%",fdel$
		Else ! no cost level
			  WebStr$=WebStr$," ",fdel$ ! send blank for cost
			  WebStr$=WebStr$," ",fdel$ ! send blank for gp %
		Endif
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		List$[row]=esdel$ ! end of section
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		! Headings for Last Year Section
		WebStr$=bsdel$,"LAST YEAR SALES",fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		WebStr$="MONTH",fdel$,"UNIT SALES",fdel$
		WebStr$=WebStr$,"NET SALES",fdel$,"COST OF SALES",fdel$,"GP %",fdel$
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		! okay now load strings for LAST YEAR
		T9[0]=0;T9[1]=0;T9[2]=0
		For X1=1 to 12
			WebStr$=RTrim$(Mth$[(x1-1)*10+1,X1*10]),fdel$
			!WebStr$=WebStr$,RTrim$(Prod$),fdel$,RTrim$(pr.Desc1$),fdel$
			!cnvtu[0]=0;cnvtu[1]=pr.UMSellDefault;cnvtu[2]=1
			!CNVTA=S2[x1,0]
			X3=S2[x1,0] ! ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,PR.)
			WebStr$=WebStr$,X3 Using Mask$,fdel$ ! "qty
			!tmp$=XUnit$(pr.UMSellDefault,ccc) ! u/m
			!WebStr$=WebStr$,tmp$,fdel$ ! sell UM
			WebStr$=WebStr$,S2[x1,1] Using Mask$,fdel$ ! dollars
			If Cost_Lev[1]>0 ! load cost level
			  WebStr$=WebStr$,S2[x1,2] Using Mask$,fdel$ ! cost
			  tmp3=0
			  If s2[x1,1]<>0 let tmp3=(((s2[x1,1]-s2[x1,2])/s2[x1,1])*100)
			  WebStr$=WebStr$,tmp3 Using "----#.##","%",fdel$
			Else ! no cost level
			  WebStr$=WebStr$," ",fdel$ ! send blank for cost
			  WebStr$=WebStr$," ",fdel$ ! send blank for gp %
			Endif
			List$[row]=WebStr$
			row=row+1
			if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
			LET T9=T9+s2[X1,0];T9[1]=T9[1]+s2[X1,1];T9[2]=T9[2]+s2[X1,2]
		Next X1
		X1=0;s2[0,0]=T9;s2[0,1]=T9[1];s2[0,2]=T9[2]
		WebStr$="YTD Total",fdel$ ! ,"",fdel$,"",fdel$ ! month,prod,desc
		WebStr$=WebStr$,s2[x1,0] Using Mask$,fdel$ ! ,"",fdel$ ! "qty,um
		WebStr$=WebStr$,s2[x1,1] Using Mask$,fdel$ ! dollars
		If Cost_Lev[1]>0 ! load cost level
			WebStr$=WebStr$,s2[x1,2] Using Mask$,fdel$ ! cost
			tmp3=0
			If s2[x1,1]<>0 let tmp3=(((s2[x1,1]-s2[x1,2])/s2[x1,1])*100)
			WebStr$=WebStr$,tmp3 Using "----#.##","%",fdel$
		Else ! no cost level
			  WebStr$=WebStr$," ",fdel$ ! send blank for cost
			  WebStr$=WebStr$," ",fdel$ ! send blank for gp %
		Endif
		List$[row]=WebStr$
		row=row+1
		if row>tmpcnt let tmpcnt=expandarray(e$,List$[])
		CSLDone: ! finished
	  
		! all done

		Close #CustChan
		Close #CSLSChan
		Close #CTLChan
		Close #PRC
		Close #CCC
		Close #SLC

	endif ! valid cust rec
	!
	List$[row]=esdel$ ! end of section
  else
    include "src/callsuberr.inc"
  end try
  !
end sub ! CSLSales
! --------------------------------------------------------------------------------------