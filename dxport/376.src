! >>> Program 376
!
! description Purchasing Item Deals File
!
! loadsave -w -n 100,10 -o prog/dxport/376.dl4 src/376.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem PO376 DEALS REPORT
Rem AUTHOR: UBS   OCTOBER 31, 1994
Rem 01/27/97 vst cct99279 cost $amt displays in costing u/m(line#10110)
!
Declare Intrinsic Sub DateToJulian,InpBuf,String,Time
!
! - Option Default Dialect IRIS1
Com 1%,SC,SR,PFU1[20],CNVTU[2]
Com 3%,PFU2[6],CNVTA,A[33]
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim 1%,J9[2],J0,J2,J3,J4,J5,J6,J8,X1,DL1[6],PFU1[20],R4
Dim 2%,V1,V2,X2,DL2[4],B[24],CUR_DATE,AR_DATE,VHOLD
Dim 3%,J,J1,DL3[3]
Dim J$[50],J3$[12],ARDATE$[8],CNAME$[50]
Dim DL$[22],A$[156],P9$[50],UNIT$[4],PHOLD$[12],PROD$[12],VNAME$[30]
Dim V1$[6],V2$[6],P1$[12],P2$[12],X$[12]
Dim K2$[50],K3$[50],K4$[50],K5$[50],K6$[50]
Dim MASK1$[10],MASK2$[10],MASK3$[7],SDATE$[8],EDATE$[8],DATE$[6],UL$[50]
For J = 2 To 6
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "864","1792","1728","2288","2400"
Mat Read #1,0,100;ARDATE$;
Read #1,0,120;AR_MONTH;
Read #1,3,0;CNAME$;
Mat Read #1,19,50;P9$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
VHOLD = 0;PHOLD$ = " ",PHOLD$
!
! -  dx add xport reporting code
dim tmp$[400],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$ = bsdel$,"376",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
call dxget("V1",tmp$) \ if tmp$ = "" let V1 = 0 else let V1 = tmp$ ! ENTER STARTING VENDOR CODE, <CR> FOR FIRST
call dxget("V2",tmp$) \ if tmp$ = "" let V2 = 999999 else let V2 = tmp$  ! ENTER ENDING VENDOR CODE,   <CR> FOR LAST
call dxget("P1",P1$)
Call dxget("P2",P2$)
!
IF V1 < 0 OR V1 > 999999 let e$="Invalid starting vendor code, must be between 0 and 999999!" \ error 10000
IF V2 < V1 OR V2 > 999999 let e$="Invalid ending vendor code, must be between starting vendor and 999999!" \ error 10000
K2$[1,6] = V1 Using "######" \ V2$ = V2 Using "######"
!
P1$=P1$,Blank$
P2$=P2$,EndParam$
if P2$<P1$ let e$="Invalid ending product code, must be greater than starting product code!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 
!
!L_900: Rem GET RANGES
! - Print @0,0;'CS';
! - Print @0,5;"ENTER STARTING VENDOR CODE, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""V1$ \ If V1$ = "E" Goto OUTEND
!!Print @0,6;"ENTER ENDING VENDOR CODE,   <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""V2$ \ If V2$ = "E" Goto OUTEND
! - If V2$ = "" Let V2$ = "999999"
!!V1 = V1$ \ V2 = V2$
!!If V1 <= V2 Goto L_990
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!L_990: K2$[1,6] = V1 Using "######" \ V2$ = V2 Using "######"
!L_1010: !!Print @0,8;"ENTER STARTING PRODUCT CODE, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""P1$ \ If P1$ = "E" Goto OUTEND
!!Print @0,9;"ENTER ENDING PRODUCT CODE,   <CR> FOR LAST,     E: TO EXIT :";'CE';
! - Input ""P2$ \ If P2$ = "E" Goto OUTEND
!!If P2$ = "" Let P2$ = "}}}}}}}}}}}}"
!!If Len(P2$) < 12 Let P2$ = P2$ + BLANK$[1,12 - Len(P2$)]
!!If P1$ <= P2$ Goto L_1080
!!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_1010
!!L_1080: Print @0,21;"CHOOSE  P: PRINT   R: RESELECT   E: EXIT  ";'CE';
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
!!If J3$ = "R" Goto L_900
!!If J3$ <> "P" Signal 3,15 \ Goto L_1080
!
J1 = 90 \ J2 = 0
MASK1$ = "######.##"
MASK2$ = "#######"
MASK3$ = "###.##"
UL$ = "-",UL$
!
if j8 ! dx xml headings
  tmp$="VENDOR",fdel$,"NAME VENDOR",fdel$
  tmp$=tmp$,"ITEM NUMBER",fdel$,"ITEM DESCRIPTION",fdel$,"LAST PO COST",fdel$
  tmp$=tmp$,"U/M",fdel$,"START DATE",fdel$
  tmp$=tmp$,"END DATE ",fdel$,"FREE",fdel$,"FREE U/M",fdel$,"WITH",fdel$,"WITH U/M",fdel$
  tmp$=tmp$,"MIN QTY",fdel$,"MIN QTY U/M",fdel$,"PERCENT OFF",fdel$
  tmp$=tmp$,"DOLLAR OFF",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
!!Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
!!If J8 !!Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
K2$[7,18] = P1$[1,12]
L_2000: Search #2,3,1;K2$,R2,E 
If E Goto L_9100
If K2$[1,6] > V2$ Goto L_9100
K6$ = K2$[1,6]
Search #6,2,1;K6$,R6,E \ If E Goto L_2000
Read #6,R6,0;VNAME$;
K3$[1,12] = K2$[7,18]
Search #3,2,1;K3$,R3,E
if E let e$="PRODUCT CODE ",K3$," IS NOT ON FILE!" \ error 10000
!! If E Print "PRODUCT CODE ";K3$;" IS NOT ON FILE!" \ Goto L_2000
If K3$ < P1$ Or K3$ > P2$ Goto L_2000
Gosub L_6000
Gosub L_6100
Gosub L_10000
Gosub L_5800
Gosub L_5000
Goto L_2000
!
L_5000: Rem "======================================= print line
IF J8 
!!  If J1 <> 6 Print #0;"" \ J1 = J1 + 1
!!  J1 = J1 + 2
  tmp$ = DL2 Using "######",fdel$
  tmp$ = tmp$,VNAME$,fdel$
  tmp$ = tmp$, A$[140,151],fdel$
  tmp$ = tmp$, A$[9,28],fdel$
  R4 = PFU1[11] \ Gosub L_6200
  tmp$ = tmp$,B[10] Using MASK1$,fdel$
  tmp$ = tmp$, UNIT$,fdel$
  Gosub L_6500
  tmp$ = tmp$,SDATE$,fdel$  
  tmp$ = tmp$,EDATE$,fdel$  
  If DL1[1] = 3
    tmp$ = tmp$,DL3[0] Using MASK2$,fdel$ 
    R4 = DL1[4] \ Gosub L_6200
    tmp$ = tmp$,UNIT$ ,fdel$  
    tmp$ = tmp$,DL3[2] Using MASK2$,fdel$ 
    tmp$ = tmp$,UNIT$ ,fdel$    
  else
    tmp$ = tmp$,"",fdel$
    tmp$ = tmp$,"",fdel$
    tmp$ = tmp$,"",fdel$
	tmp$ = tmp$,"",fdel$
  End If 
  If DL1[1] <> 3
    tmp$ = tmp$,DL3[1] Using MASK2$,fdel$
	R4 = DL1[2] \ Gosub L_6200
	tmp$ = tmp$,UNIT$ ,fdel$    
  ELSE
    tmp$ = tmp$,"",fdel$	
  	tmp$ = tmp$,"",fdel$	
  end if
  If DL1[1] = 1
	tmp$ = tmp$,DL3[0] Using MASK3$,fdel$
  Else 
    tmp$=tmp$,"",fdel$	
  END IF
  If DL1[1] = 2
    tmp$ = tmp$,DL3[0] Using MASK1$
    R4 = DL1[3] \ Gosub L_6200
    tmp$ = tmp$,"/",UNIT$,fdel$
  else 
    tmp$ = tmp$,"",fdel$
  End If  
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  RETURN
END IF 
!!
If DL2 <> VHOLD
  Gosub L_5500
  VHOLD = DL2
End If 
If A$[140,151] <> PHOLD$
  Print #0; Tab 1;A$[140,151];
  Print #0; Tab 15;A$[9,28];
  PHOLD$ = A$[140,151]
End If 
Print #0; Using MASK1$; Tab 36;B[10];
R4 = PFU1[11] \ Gosub L_6200
Print #0; Tab 45;"/";UNIT$;
Gosub L_6500
Print #0; Tab 52;SDATE$;
Print #0; Tab 62;EDATE$;
If DL1[1] = 3
  Print #0; Using MASK2$; Tab 71;DL3[0];
  R4 = DL1[4] \ Gosub L_6200
  Print #0; Tab 79;UNIT$;
  Print #0; Using MASK2$; Tab 84;DL3[2];
  Print #0; Tab 92;UNIT$;
End If 
If DL1[1] <> 3
  Print #0; Using MASK2$; Tab 97;DL3[1];
  R4 = DL1[2] \ Gosub L_6200
  Print #0; Tab 105;UNIT$;
End If 
If DL1[1] = 1
  Print #0; Using MASK3$; Tab 111;DL3[0];
Else 
  If DL1[1] = 2
    Print #0; Using MASK1$; Tab 118;DL3[0];
    R4 = DL1[3] \ Gosub L_6200
    Print #0; Tab 127;"/";UNIT$;
  End If 
End If 
Print #0;""
J1 = J1 + 1
Return 
!
L_5500: Rem PRINT VENDOR LINE
if j8 RETURN ! dx xml
!!If J1 <> 6 Print #0;"" \ J1 = J1 + 1
!!J1 = J1 + 2
!! if j8 RETURN
Print #0; Tab 1;"VENDOR";
Print #0; Using "######"; Tab 8;DL2;
Print #0; Tab 19;VNAME$
Print #0; Tab 1;UL$
J1 = J1 + 2
Return 
!
L_5800: Rem "================================== headings'
IF J8 RETURN
If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1
J1 = 6
!!IF J8 RETURN
If Not(J8) Print #0;"\15\";
Print #0;" - 376 - ";Msc$(3);
Print #0; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0; Tab 58;"ITEM DEALS FILE"
Print #0;"\15\";
Print #0; Tab 1;"ITEM NUMBER";
Print #0; Tab 15;"ITEM DESCRIPTION"; Tab 39;"LAST PO";
Print #0; Tab 53;"START"; Tab 65;"END"; Tab 75;"FREE";
Print #0; Tab 88;"WITH"; Tab 100;"MIN QTY"; Tab 110;"PERCENT";
Print #0; Tab 122;"DOLLAR"
Print #0; Tab 41;"COST"; Tab 54;"DATE"; Tab 64;"DATE";
Print #0; Tab 112;"OFF"; Tab 123;"OFF"
Print #0;" "
J1 = 6
Return 
!
L_6000: Rem READ DEALS FILE
Mat Read #2,R2,0;DL2;
Mat Read #2,R2,20;DL1;
Mat Read #2,R2,34;DL3;
Mat Read #2,R2,58;DL$;
Return 
!
L_6100: Rem READ PRODUCT FILE
Mat Read #3,R3,0;A$;
Mat Read #3,R3,156;B;
Mat Read #3,R3,512;PFU1;
Mat Read #3,R3,554;PFU2;
Return 
!
L_6200: Rem READ CCODES FILE
If R4 <= 0 Let UNIT$ = "ERR"
If R4 = -1 Let UNIT$ = "CWT "
If R4 = -3 Let UNIT$ = "LB  "
If R4 > 0 Read #4,R4,10;UNIT$;
Return 
!
L_6500: Rem FORMAT START AND END DATE
If DL2[1] = 0
  SDATE$ = "  NONE  "
Else 
  DATE$ = DL2[1] Using "&&&&&&"
  SDATE$[1,2] = DATE$[3,4]
  SDATE$[3] = "/"
  SDATE$[4,5] = DATE$[5,6]
  SDATE$[6] = "/"
  SDATE$[7,8] = DATE$[1,2]
End If 
If DL2[4] = 591231
  EDATE$ = "  NONE  "
Else 
  DATE$ = DL2[4] Using "&&&&&&"
  EDATE$[1,2] = DATE$[3,4]
  EDATE$[3] = "/"
  EDATE$[4,5] = DATE$[5,6]
  EDATE$[6] = "/"
  EDATE$[7,8] = DATE$[1,2]
End If 
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_9100: Rem END OF THIS RANGE
!!If J8!! Print @0,23;"PRESS <CR> TO EXIT ";'CL'; \ * ""J$
Goto OUTEND
!
L_10000: Rem "======================================= converts
CNVTA = DL3[0]
If DL1[1] = 1 Let AMOUNT = DL3[0] \ Goto L_10050
If DL1[1] = 2 Let CNVTU[0] = 0;CNVTU[1] = DL1[3];CNVTU[2] = 2
If DL1[1] = 3 Let CNVTU[0] = 0;CNVTU[1] = DL1[4];CNVTU[2] = 1
Gosub L_20000
L_10050: DL3[0] = AMOUNT
CNVTA = DL3[1];CNVTU[0] = 0;CNVTU[1] = DL1[2];CNVTU[2] = 1
Gosub L_20000
DL3[1] = AMOUNT
CNVTA = DL3[2];CNVTU[0] = 0;CNVTU[1] = DL1[4];CNVTU[2] = 1
Gosub L_20000
DL3[2] = AMOUNT
CNVTA = B[10]
CNVTU[0] = 0;CNVTU[1] = PFU1[11];CNVTU[2] = 2
Gosub L_20000
B[10] = AMOUNT
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: Goto L_20120 !!If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 !!\ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG !!\ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
OUTEND: Rem EXIT ROUTINE
if j8 !dx xml
  call addtostr(e$,rstr$,esdel$) !end section
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
try call dxclose() else rem
End 
!!Print 'CS'
!!Chain "MX000C"
!!Close 
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
End 