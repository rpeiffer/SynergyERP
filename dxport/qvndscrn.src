! --- qvndscrn
! description Quote Management Screen
!
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/qvndscrn.dl4 src/qvndscrn.src
!
include "src/copyright.inc"
Rem QVendScrn - Select Vendors for Quote Cost
Rem cct 159835 - Bosworth
Rem Part of the "Quote Management System"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 13, 2006  16:07:23
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/misc/qvendscrn.src (univ2) [txc] {52829}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! is called from 287, mx281e to delete all recs for quote line
! and from 291 (originally mxline) to edit quotes on line
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String
Declare Intrinsic Function findchannel
! Option Default Dialect IRIS1

Enter REC[],H0[],L3[],L4[],Intco,chan[],List$[]
If Err 0 Gosub ERR_TRAP
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim ANS$[20],K1$[60],K2$[50],K3$[50],F$[16]
Dim L1$[20],L6$[60],VENDA$[30],QUM$[4]
Dim 1%,QLFAX,CNVTU[2],PFU1[20],UN[2],EUN[2],H4[2]
Dim 1%,ZLINE,ALTVEND,DLINE,FLAG,QLVSEL
Dim 2%,QLFAXDATE,L6[5],B[24],W2[9],QLVEND,DT3[1]
Dim 3%,QLCOST,S3[17],UNF[6],PFU2[6],A[33],A1[7]
Dim 3%,L7[12],R[99],CNVTA,AMOUNT,DCOST
COID = IntCo ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
If REC[0] = -199 Goto STARTHERE
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim CUSTOM_CUSTOMER$[30],tmp$[1000],tmp1$[500] ! ,List$[100,1000]
dim action$[30],options$[30],userid$[8],b$[200],action1$[30],msg$[100]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],ACTION2$[30]
Dim Message$[500],WebStr$[1000],Fld$[1,30],Rstr$[5000]
maxcnt=100
tmpcnt=maxcnt
! opened in the oemenu
! call dxopen()
!
call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$,action2$)
!
! CALL dxsave(0,"tmp/qmscrn.txt!") 
ALTVEND = findchannel() ! 36
Try Close #ALTVEND Else Rem
If Err 0 Gosub ERR_TRAP
Read #1,88,1568;F$;
Ropen #ALTVEND,F$
CH_QOH=chan[1]
if ch_qoh=0
	ch_qoh=findchannel()
	Read #1,88,1280;f$;
	Open #CH_QOH,f$
Endif
ch_qol=chan[2]
if ch_qol=0
	ch_qol=findchannel()
	read #1,88,1344;f$;
	Open #ch_qol,f$
Endif
ch_vnd=chan[3]
if ch_vnd=0
	ch_vnd=findchannel()
	read #1,88,2400;f$;
	open #ch_vnd,f$
Endif
ch_prod=chan[4]
if ch_prod=0
	ch_prod=findchannel()
	read #1,88,1792;f$;
	Open #ch_prod,f$
Endif
ch_prwh=chan[5]
if ch_prwh=0
	ch_prwh=findchannel()
	read #1,88,1744;f$;
	Open #ch_prwh,f$
endif
ch_ccode=chan[6]
if ch_ccode=0
	ch_ccode=findchannel()
	read #1,88,1760;f$;
	open #ch_ccode,f$
endif
ch_qvn=chan[7]
STARTHERE: Rem "
If REC[0] = -199 ! "qlv file may not be open
  F$ = "6/QVENDLN" + Str$(COID)
  Call FindF(F$,FOUND)
  If Not(FOUND) Goto OUTEXIT
  CH_QVN=findchannel()
  If Err 0 Rem
  Close #ch_qvn
  If Err 0 Gosub ERR_TRAP
  Open #ch_qvn,F$
  DELQLVONLY = 1
Else 
  DELQLVONLY = 0
End If 
NONSTOCK = 0;ZLINE = 0
If L3[0] = 1 Let NONSTOCK = 1
K1$ = " ",K1$;QLV = 0;QLCENT = 0;QLVCLSD = 0
K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
QLVDLOOP: Rem "
Search #ch_qvn,3,1;K1$,R[35],E \ If E = 2 Goto CHEKQVLDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> H0[7] Goto CHEKQVLDONE
X2 = K1$[7,9] \ If X2 <> L3[2] Goto CHEKQVLDONE
If Not(DELQLVONLY)
  QLV = 1
  Gosub READ_QLV
  If QLCOST Let QLCENT = 1
  If QLVSEL Let QLVCLSD = 1
Else ! DELETE ONLY
  Search #ch_qvn,5,1;K1$,R[35],E \ If E Gosub ERR_SEARCH
  E = 3
  Search #ch_qvn,1,0;K1$,R[35],E \ If E Gosub ERR_SEARCH
End If 
Goto QLVDLOOP
CHEKQVLDONE: Rem "done
If DELQLVONLY ! "whe're deleting (in mxline/mx287/mx281e)
  Close #ch_qvn
  Goto OUTEXIT
End If 
! IF NOT DELETE ONLY - CONTINUE ON
R[8] = REC[8];R[11] = REC[11]
Mat Read #ch_QOH,R[8],78;H4;
WHSE = H4[2]
Gosub READ_ROL
If L4[3] And L4[3] > 0 And L4[3] < 99 And Not(Fra(L4[3])) Let WHSE = L4[3]
QUM$ = " ",QUM$
If UN[2] = -1 Let QUM$ = "CWT "
If UN[2] = -2 Let QUM$ = "LOT "
If UN[2] > 0 Read #ch_ccode,UN[2],10;QUM$;
! Window Open @2,2; Size 73,20; Using "VENDORS FOR RFP"
Clear List$[]
List$[0]=bsdel$,"QUOTEVEND",fdel$
tmp$="QUOTE",fdel$,"LINE",fdel$
tmp$=tmp$,"PRODID",fdel$,"DESC",fdel$,"COSTUOM",fdel$
List$[1]=tmp$
tmp$=Str$(H0[7]),fdel$,Str$(L3[2]),fdel$
tmp$=tmp$,L1$[1,12],fdel$,RTrim$(L6$[1,30]),fdel$,QUM$,fdel$
list$[2]=tmp$
list$[3]=esdel$
row=4;tmpcnt=maxcnt
If QLV Gosub SHO_LINES
If Not(QLV) Goto ADDQLV
QLVWHATNOW: Rem " return point from addqlv
!call AddToStr(e$,rstr$,List$[])
goto outend ! rest is edit done on web
!Print @0,Msc(34) - 2;'CE';"SELECT  #: vendor  A: add vendor  R: redisplay  E: exit  ";
!Input Len 16384 + 6;""ANS$ \ Call String(1,ANS$)
If ANS$ = "E" Goto OUTEND
If ANS$ = "R" Gosub SHO_LINES \ Goto QLVWHATNOW
If ANS$ = "A" Goto ADDVEND
X2 = ANS$ \ If X2 Gosub EDTVEND
Goto QLVWHATNOW
EDTVEND: Rem "see if vendor there
K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
K1$[10] = X2 Using "######"
Search #ch_qvn,2,1;K1$,R[35],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
QADDVEND: Rem "
  !Print @0,Msc(34) - 2;'RB CE';"RECORD NOT FOUND! ADD VENDOR? (Y/N)  ";
  !Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
  If ANS$ <> "Y" And ANS$ <> "N" Goto QADDVEND
  If ANS$ = "N" Return 
  VEND = X2 \ Gosub CHECKVEND \ Goto BADVEND
  Goto STARTVADD
Else 
  Gosub READ_QLV
  !Print @0,6;'CE';
  DLINE = 6
  X2 = QLFAXDATE \ Gosub NUM2DATE
  VEND = QLVEND
  Gosub CHECKVEND \ VENDA$ = "VENDOR NOT FOUND!"
  Gosub SHODETAIL
End If 
QLLEDIT: Rem "
goto outend ! no edit on backend
If Not(QLCOST)
  !Print @0,Msc(34) - 2;'CE';"SELECT:  1: flag to fax  2: enter Cost  D: delete  E: end  ";
Else 
  !Print @0,Msc(34) - 2;'CE';"SELECT:  S: select as Vendor for Quote  D: delete  E: end  ";
End If 
! Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
If ANS$ = "E" Goto QLEDTDONE
If ANS$ = "S" And QLCOST Goto VEND2LINE
If ANS$ = "D" Goto DELVEND
FLD = ANS$
If FLD <> 1 And FLD <> 2 Goto QLLEDIT
On FLD Gosub EDT_FXFLAG,EDT_QLCOST
Goto QLLEDIT
QLEDTDONE: Rem "
Gosub WRITE_QLV
Goto QLVWHATNOW
EDT_FXFLAG: Rem "
If QLFAX = 1 And QLFAXDATE <> 0
  J7$ = "Vendor has had fax sent already!"
  Gosub ISERRMSG
  Return 
End If 
J5$ = "Enter Y to have faxing send this vendor a RFP"
J0$ = "6000 142 6";J1 = QLFAX
Gosub ISINPUT
QLFAX = J1
Return 
EDT_QLCOST: Rem "cost from vendor
J5$ = "Enter the Cost the Vendor has supplied in " + QUM$
J0$ = "34001155 6";J1 = DCOST
Gosub ISINPUT
DCOST = J1
CNVTU[0] = UN[2];CNVTU[1] = 0;CNVTU[2] = 2
CNVTA = J1 \ Gosub CONVERT
QLCOST = AMOUNT
Return 
DELVEND: Rem "delete this line
K3$ = " ",K3$;K3$ = H0[7] Using "######"
K3$[7] = L3[2] Using "###"
K3$[10] = QLVEND Using "######"
Search #ch_qvn,2,1;K3$,R[35],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Goto QLVWHATNOW
Search #ch_qvn,5,1;K3$,R[35],E \ If E Gosub ERR_SEARCH
E = 3
Search #ch_qvn,1,0;K3$,R[35],E \ If E Gosub ERR_SEARCH
!Print @0,Msc(34) - 2;'CE';"VENDOR DELETED!";
!Signal 3,20
!Print @0,6;'CE';
Goto QLVWHATNOW
VEND2LINE: Rem "selected as the vendor for the line
goto outend
If QLVCLSD And Not(QLVSEL) ! "already selected a vendor
  !Print @0,Msc(34) - 2;'CE';"A VENDOR WAS SELECTED FOR THIS QUOTE!";
  !Print @0,Msc(34) - 2;"REPLACE WITH THIS VENDOR/COST? (Y/N)  ";
  !Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
  If ANS$ <> "Y" And ANS$ <> "N" Goto VEND2LINE
  If ANS$ = "N" Goto VND2LINEDONE
  K3$ = " ",K3$;K3$ = H0[7] Using "######"
  K3$[7] = L3[2] Using "###"
FQLVS: Rem "
  Search #ch_qvn,3,1;K3$,R[98],E \ If E = 2 Goto FQLVSDONE
  If E Gosub ERR_SEARCH
  X2 = K3$[1,6] \ If X2 <> H0[7] Goto FQLVSDONE
  X2 = K3$[7,9] \ If X2 <> L3[2] Goto FQLVSDONE
  Read #ch_qvn,R[98],22;X1;
  If X1 Let X1 = 0
  Write #ch_qvn,R[98],22;X1;
  Goto FQLVS
FQLVSDONE: Rem "
End If 
S3[14] = QLVEND
L7[7] = QLCOST
Mat Write #ch_QOL,R[11],168;L7;
Mat Write #ch_QOL,R[11],260;S3;
QLVSEL = 1
VND2LINEDONE: Rem "
!Print @0,Msc(34) - 2;'CE';"VENDOR AND COST ADDED TO LINE";
!Signal 3,15
!Print @0,Msc(34) - 2;'CE';
Goto QLEDTDONE
SHO_LINES: Rem "display lines
list$[row]=bsdel$,"VQLINE",fdel$
row=row+1
tmp$="VENDOR",fdel$,"NAME",fdel$,"MAINVEND",fdel$,"RFP",fdel$
tmp$=tmp$,"DATE",fdel$,"COST",fdel$
list$[row]=tmp$
row=row+1
DLINE = 5
K1$ = " ",K1$;K1$ = H0[7] Using "######"
K1$[7] = L3[2] Using "###"
QLVLOOP: Rem "
Search #ch_qvn,3,1;K1$,R[35],E \ If E = 2 Goto SHOQLVDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> H0[7] Goto SHOQLVDONE
X2 = K1$[7,9] \ If X2 <> L3[2] Goto SHOQLVDONE
Gosub READ_QLV
X2 = QLFAXDATE \ Gosub NUM2DATE
VEND = QLVEND
Gosub CHECKVEND \ Goto QLVLOOP
!DLINE = DLINE + 1
!If DLINE > Msc(34) - 4
!QLVMORE: Rem "
!  Print @0,Msc(34) - 1;'CL';"-MORE- Select  <CR>: continue  E: end   ";
!  Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
!  If ANS$ = "E" Goto SHOQLVDONE
!  If ANS$ <> "" Goto QLVMORE
!  Print @0,6;'CE';
!  DLINE = 6
!End If 
Gosub SHODETAIL
list$[row]=tmp$
row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(E$,List$[])
Goto QLVLOOP
SHODETAIL: Rem "line detail
tmp$=Str$(VEND),fdel$,RTrim$(VENDA$[1,30]),fdel$
If QLVSEL tmp$=tmp$,"S",fdel$ Else tmp$=tmp$," ",fdel$
If QLFAX tmp$=tmp$,"Y",fdel$ Else tmp$=tmp$,"N",fdel$
If QLFAXDATE tmp$=tmp$,X$[1,8],fdel$ Else tmp$=tmp$," ",fdel$
If QLCOST
  CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2
  CNVTA = QLCOST \ Gosub CONVERT
  DCOST = AMOUNT
  tmp$=tmp$,LTrim$(DCOST Using "######.####"),fdel$
Else 
  DCOST = 0
  tmp$=tmp$," ",fdel$
End If 
Return 
SHOQLVDONE: Rem "done
list$[row]=esdel$
!call AddToStr(e$,rstr$,List$[])
Return 
ADDQLV: Rem "add lines for all poss vends
If NONSTOCK ! "only one option - the vendor on line
  If S3[14] <> 0 ! "only if one loaded
    VEND = S3[14] \ Gosub ADDQLVLINE
  End If 
Else ! "stock items
  VEND = S3[14] \ Gosub ADDQLVLINE
  R[3] = L4[0]
  Mat Read #ch_prod,R[3],156;B;
  VEND = B[24] \ Gosub ADDQLVLINE
  K2$ = L1$[1,12];K2$[13] = WHSE Using "##"
  Search #ch_prwh,2,1;K2$,R[30],E \ If E > 1 Gosub ERR_SEARCH
  If E = 0
    Mat Read #ch_prwh,R[30],38;W2;
    VEND = W2[3] \ Gosub ADDQLVLINE
  End If 
  K2$ = " ",K2$;K2$[1,12] = L1$[1,12]
ALTVLOOP: Rem "thru all alts for product
  Search #ALTVEND,3,1;K2$,R[36],E \ If E = 2 Goto ALTVDONE
  If E Gosub ERR_SEARCH
  If K2$[1,12] <> L1$[1,12] Goto ALTVDONE
  VEND = K2$[13,18] \ Gosub ADDQLVLINE
  Goto ALTVLOOP
ALTVDONE: Rem "
End If 
Gosub SHO_LINES
Goto QLVWHATNOW
READ_ROL: Rem "get other Line Info
Mat Read #ch_QOL,R[11],56;L6;
Mat Read #ch_QOL,R[11],80;L6$;
Mat Read #ch_QOL,R[11],140;L1$;
Mat Read #ch_QOL,R[11],168;L7;
Mat Read #ch_QOL,R[11],250;UN;
Mat Read #ch_QOL,R[11],260;S3;
Mat Read #ch_QOL,R[11],446;EUN;
Mat Read #ch_QOL,R[11],452;UNF;
Gosub L_30000
Return 
READ_QLV: Rem " (don't bother reading quote/line #)
Read #ch_qvn,R[35],0;QLFAX;
Read #ch_qvn,R[35],2;QLFAXDATE;
Read #ch_qvn,R[35],6;QLCOST;
Read #ch_qvn,R[35],12;QLVEND;
Read #ch_qvn,R[35],22;QLVSEL;
Return 
WRITE_QLV: Rem "
Write #ch_qvn,R[35],0;QLFAX;
Write #ch_qvn,R[35],2;QLFAXDATE;
Write #ch_qvn,R[35],6;QLCOST;
Write #ch_qvn,R[35],12;QLVEND;
Write #ch_qvn,R[35],16;H0[7];
Write #ch_qvn,R[35],20;L3[2];
Write #ch_qvn,R[35],22;QLVSEL;
Return 
ADDVEND: Rem "add a different Vendor
!Print @0,6;'CE';
J5$ = "Enter Vendor #  Name  List Option or <CR>: end"
J0$ = "2 00 800 6";J1 = 0
Gosub ISINPUT
If J4$ = "" Goto QLVWHATNOW
Gosub VENDWIND
If J4$ = "" Goto ADDVEND
VEND = J$
STARTVADD: Rem "got vendor - add it
Gosub CHECKVEND \ Goto ADDVEND
!Print @0,6;'CE';
Gosub ADDQLVLINE
DLINE = 6 \ Gosub SHODETAIL
Goto QLLEDIT
VENDWIND: Rem "call to Mxvend5
If J4$[1,1] >= "0" And J4$[1,1] <= "9" Return 
!Call "MXVEND5",J4$
Return 
CHECKVEND: Rem "check if valid Vendor
K3$ = " ",K3$;K3$ = VEND Using "######"
Search #ch_vnd,2,1;K3$,R[2],E \ If E > 1 Gosub ERR_SEARCH
If E = 1 Return 
Mat Read #ch_vnd,R[2],0;VENDA$;
Return 1
BADVEND: Rem "no such vendor
J7$ = "VENDOR NOT ON FILE!"
Gosub ISERRMSG
Goto QLVWHATNOW
ADDQLVLINE: Rem "
If Not(VEND) Return 
Gosub CHECKVEND \ Return 
K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
K1$[10] = VEND Using "######"
Search #ch_qvn,2,1;K1$,R[35],E \ If E > 1 Gosub ERR_SEARCH
If E = 0 Return 
E = 2;R[35] = 0
Search #ch_qvn,1,0;K1$,R[35],E \ If E Gosub ERR_SEARCH
Search #ch_qvn,4,1;K1$,R[35],E \ If E Gosub ERR_SEARCH
QLFAX = 0;QLFAXDATE = 0;QLCOST = 0;QLVEND = VEND;QLVSEL = 0
Gosub WRITE_QLV
Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If ZLINE Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(NONSTOCK) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 

Rem {begin rtn.input.s}
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {end rtn.convert.s}
OUTEND: Rem "done
try Close #ALTVEND else rem
if REC[0] <> -199 ! close any opened
	if chan[1]=0 try close #ch_qoh else rem
	if chan[2]=0 try close #ch_qol else rem
	if chan[3]=0 try close #ch_vnd else rem
	if chan[4]=0 try close #ch_prod else rem
	if chan[5]=0 try close #ch_prwh else rem
	if chan[6]=0 try close #ch_ccode else rem
endif
! Window Close 
OUTEXIT: Rem "exit without window
End 
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM ",MSC$(4)
e$=Msg$
! call programdump("tmp/mx291se!","")
ERROR 11000
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet_call.inc"
end
Rem {end rtn.error.s}