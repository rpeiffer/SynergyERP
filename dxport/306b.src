! >>> Program 306b
!
! description CASH RECEIPTS MONTHLY JOURNAL  part 3
!
! loadsave -w -n 100,10 -o prog/dxport/306b.dl4 src/306b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"

Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 31, 2008  13:22:18
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx306b.src (univ2) [jcs] {53668}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem

Rem MX306B C/R MONTHLY JOURNAL- SUMMARY BY DAILY TOTALS
Rem AUTHOR: COPY FROM MX306A - MODIFIED BY MTG 2/93
Rem LAST UPDATE: MTG 2/93
!If Err 0 Gosub ERR_TRAP
try
dim 3%,currvar,currfact,currvartot,1%,currid,currpass,bcurrid
Dim 1%,cnvcu[10],3%,cnvca[10],V6[6]
dim keycurr$[20],currdesc$[30]
Dim A$[48],C$[30],C1$[24],C3$[30],D$[8],M$[12],P$[127],C2$[10]
Dim F$[16],J$[10],X$[10],P9$[50],P60$[50],USR$[40],p61$[256]
Dim Z$[30],B$[30],T9$[26],K6$[30]
Dim 1%,A[2],F,L,L1,P,P1[2],S[2],V,V1,X,X2,U2
Dim 1%,A8,A9,E,L9,Y,Z7[63],P0[1023]
Dim 3%,B[17],G2,T4[6],M1[9],T9[5]
Dim 3%,D9,T,T1
Dim 3%,S1[10],S6[5],S7,S8[10],S9[10],C10[5]
Dim 2%,D[8],J,B6,N,D4,R[23],G1[8]
Dim 2%,X1,X3,I2,I3,3%,R[6]
Dim 2%,X1,X3,I2,I3,3%,R[6]
Dim H$[50],DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo ! E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Close #1 ! getsession open cntrl# as READONLY
F$="cntrl/cntrl"+Str$(COID)
Open #1,f$
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
mat read #1,61,0;p61$;
eflg=0
If P9$[49,49] = "Y"  ! ELECTRONIC LOCKBOX
	Read #1,20,20;P0;
	If (P0) 
		Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Electronic Cash Receipts In Process. Try Accept Later."
		! Print @0,21;'CL RB';"LOCKBOX INFORMATION IS IN PROCESS....";
		! Signal 3,30 \ Goto L_9010
	ENDIF
ENDIF
For X = 2 To 6
  Read J
  If J = -1 Goto L_250
  Mat Read #1,88,J;A$;
  Open #X,A$
L_250: Next X
Data "1536","1456","1440","1488","1808"
Mat Read #1,0,120;U2; \ Mat Read #1,52,0;G1;

R9 = Chf(4) \ Dim 3%,M9[R9]
R9 = Chf(5) \ Dim 3%,O9[R9]
If P9$[17,17] <>"Y" and u2=G1[8]
	Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Cash Receipts Has ALready Been Accepted for the Month. "
ENDIF 
If P60$[6,6] = "Y" ! processed by bank
  Gosub L_8300
  !  if eflg goto L_9010: ! ! Goto L_9010
Else 
  Gosub L_8000
  ! if eflg Goto L_9010
End If 

if eflg goto L_9010:

Gosub L_7000
M$[1,11] = "----,--#.##"

For Y = 1 To Chf(3) - 1
  Mat Read #3,Y;C1$;
  T = 0
  T1 = 0
  Mat Read #3,Y,48;B;
  For X = 0 To 11
  if x<>10
    T = T + B[X]
  endif
  Next X
  X2 = 0
  T = T + ( - B[13])
  T = T + B[14] + B[15] + B[16]
  T1=T1+B[10] ! DEPOSITS
  T1 = T1 + B[17]
  T1 = T1 + B[12]
  let currvartot=0
  Gosub L_1900
Next Y
If L9 = 22 Let L1 = 99 \ Gosub L_5800
Goto OUTEND
L_1900: Rem      PRINT HEADING.
A9 = 0 \ X2 = 0 \ X3 = 0 \ L1 = 99
D4 = 0
B$ = " ",B$
B$ = Y Using "##"
L_2000: Search #2,3,1;B$,R[2],E
If E Goto L_2710
A8 = B$[1,2]
If A8 <> Y Goto L_2710
If A8 <> A9 If A9 Goto L_2710
If A8 <> A9 Gosub L_3200
A9 = B$[1,2] \ X2 = 1
Mat Read #2,R[2];S; \ If Not(S) Goto L_2000
Read #2,R[2],22;D[4];
If D4 If D4 <> D[4] Gosub L_5000
D4 = D[4]
Mat Read #2,R[2];S
Read #2,R[2],38;D[8];
If Not(F) Read #2,R[2],86;C$[1,30];
If Not(F) Mat Read #2,R[2],126;C3$;
Mat Read #2,R[2],172;currid;
Mat Read #2,R[2],174;currfact;
Mat Read #2,R[2],180;CURRVAR;
IF B$[1,2]="17" AND CURRVAR<>0
	LET MTG=MTG
ENDIF
If X3 = D[8] Goto L_2130
Gosub L_2800
L_2130: Mat Read #2,R[2],6;D;
Mat Read #2,R[2],44;T4;
If Not(F) Read #2,R[2],86;C$[1,30],C2$[1,10];
If Not(F) Mat Read #2,R[2],126;C3$;
Mat Read #2,R[2],172;currid;
Mat Read #2,R[2],174;currfact;
Mat Read #2,R[2],180;CURRVAR;
IF B$[1,2]="17" AND CURRVAR<>0
	LET MTG=MTG
ENDIF
If X3 = D[8] Goto L_2210
X3 = D[8]
B6 = 0
B6 = D[6]
F = 0
L_2210: If F > 0 Goto L_2250
If S = 0 Let C$ = "DELETED"
Gosub L_3000
L_2250: If C2$ <> "" Goto L_2280
If T4 = 0 Goto L_2280
C2$ = T4
L_2280: On S Goto L_2300,L_2400,L_2440,L_2470,L_2510,L_2550,pay_dep,app_dep,del_dep
Goto L_2650
L_2300: Rem      TYPE 1 APPLIED.
Gosub L_3050
If Not(T4[3]) If Not(T4[2]) Goto L_2640
On S[2] Goto L_2360,L_2360,L_2360,L_2370,L_2370,L_2360,L_2360,L_2350,L_2360
Goto L_2370
L_2350: Rem
L_2360: If S[2] > 5 Goto L_2480
L_2370: Rem  DO NOT REMOVE
S1[3] = S1[3] + T4[3]
Goto L_2640
L_2400: Rem      TYPE 2 UNAPPLIED.
Gosub L_3050
S1[3] = S1[3] + T4[3]
Goto L_2640
L_2440: Rem      TYPE 3 JOURNAL ENTRY CR.
S1[3] = S1[3] + T4[3]
Goto L_2640
L_2470: Rem      TYPE 4 JOURNAL ENTRY DR.
L_2480: T4[3] = T4[2]
S1[3] = S1[3] - T4[2]
Goto L_2640
L_2510: Rem      TYPE 5 NF.
T4[3] = T4[2]
S1[3] = S1[3] - T4[2]
Goto L_2640
L_2550: Rem      TYPE 6 G/L.
If Not(F) Let S7 = S7 - T4[2] + T4[3]
If Not(F) Let M9[D[5]] = M9[D[5]] - T4[2] + T4[3]
If Not(F) Goto L_2640
S1[4] = S1[4] + T4[2]
S1[5] = S1[5] + T4[3]
If Not(B6) Let S8[0] = S8[0] + T4[2]
If B6 = 1 Let S8[1] = S8[1] + T4[2]
If B6 = 2 Let S8[2] = S8[2] + T4[2]
GOTO L_2640:

Pay_dep: Rem Type 7 - sales order deposit
if not(f)
	let deptot=deptot-t4[2]+t4[3]
	let s7=s7-t4[2]+t4[3]
	goto L_2640:
endif
If Not(B6) Let S8[0] = S8[0] + T4[2]
If B6 = 1 Let S8[1] = S8[1] + T4[2]
If B6 = 2 Let S8[2] = S8[2] + T4[2]
goto L_2640


app_dep: ! deposit applied - type 8
if not(f)
	let deptot=deptot-t4[2]+t4[3]
	let s7=s7-t4[2]+t4[3]
	V6[5]=V6[5]-(T4[3]-T4[2])
	goto L_2640:
endif
If Not(B6) Let S8[0] = S8[0] + T4[2]
If B6 = 1 Let S8[1] = S8[1] + T4[2]
If B6 = 2 Let S8[2] = S8[2] + T4[2]
goto L_2640

del_dep: ! deposit deleted - type 9
if not(f)
	let deptot=deptot-t4[2]+t4[3]
	let s7=s7-t4[2]+t4[3]
	V6[5]=V6[5]-(T4[3]-T4[2])
	goto L_2640:
endif
If Not(B6) Let S8[0] = S8[0] + T4[2]
If B6 = 1 Let S8[1] = S8[1] + T4[2]
If B6 = 2 Let S8[2] = S8[2] + T4[2]
goto L_2640




L_2640: Rem
L_2650: F = 1
Goto L_2000
Return 
L_2710: If D4 Gosub L_5000
D4 = 0
Gosub L_4500
If Not(X2) Goto L_2760
Print #0;"\15\\15\"
L1 = L1 + 3
L_2760: Goto L_4000
L_2800: Rem CALCULATE TOTALS
If Not(X3) Return 
If X2 = 0 Goto L_2870
T9[0] = T9[0] + S1[3]
S9[10] = S9[10] + S1[2]
T9[1] = T9[1] + S9[10]
T9[2] = T9[2] + S7
T9[3] = T9[3] + S8[1] + S8[2]
T9[4] = T9[4] + S9 - S1[5]
T9[5] = T9[5] + S1
L_2870: S7 = 0
For X = 0 To 10
  S9[X] = 0
  S8[X] = 0
  S1[X] = 0
Next X
F = 0
Return 
L_3000: Rem      PRINT DESCRIPTION.
If Not(S) Return 
S1 = S1 + T4[1]
Return 
L_3050: Rem      PRINT DISCOUNT.
S1[1] = S1[1] + T4[4]
If D[7] < 0 Let D[7] = 0
If D[7] > (Chf(5) - 1) Let D[7] = 0
O9[D[7]] = O9[D[7]] + T4[4]
S9[10] = S9[10] + T4[4]
S1[2] = S1[2] + T4[6]
if p61$[136,136]="Y" and currvar<>0
	Let S7 = S7 -CURRVAR
	LET CURRVARTOT=CURRVARTOT-CURRVAR
	LET T9[2]=T9[2]+S7
	LET S7=0
endif
Return 
L_3200: Rem PRINT BANK NAME
Gosub L_5800
Mat Read #3,A8;Z$;
Print #0;"************* ";A8;" ";Z$;" **************"
Return 
L_4000: Rem PRINT MTD TOTALS FROM FILE
If Not(X2) Return 
Gosub L_5800
Print #0;"\15\\15\\15\********** TOTALS: ************   ";A9;" ";C1$
Print #0;"NET CASH................";
Print #0; Using "##,###,###.##"; Tab 45;B[0];
If B <> Abs(B) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"CASH DISCOUNT...........";
Print #0; Using "##,###,###.##"; Tab 45;O9[0];
If O9[0] <> Abs(O9[0]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
For X = 1 To (Chf(5) - 1)
  If Not(O9[X]) Goto L_4095
  If L1 > L9 Gosub L_5800
  Mat Read #5,X;C1$;
  Print #0;C1$[1,21];
  Print #0; Using "##,###,###.##"; Tab 45;O9[X];
  If O9[X] <> Abs(O9[X]) Print #0;"CR";
  Print #0;""
  L1 = L1 + 1
L_4095: Next X
Print #0;"FREIGHT ALLOWANCES......";
Print #0; Using "##,###,###.##"; Tab 45;B[11];
If B[11] <> Abs(B[11]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
If L1 > L9 Gosub L_5800
Print #0;"GROSS A/R CREDIT........";
Print #0; Using "##,###,###.##"; Tab 60;B[12];
If B[12] <> Abs(B[12]) Print #0;"DR";
Print #0;"" \ L1 = L1 + 1
if deptot<>0 or p61$[94,94]="Y"
	L1 = L1 + 1
	If L1 > L9 Gosub L_5800
	Print #0;"DEPOSITS................";
	Print #0; Using "##,###,###.##"; Tab 60;Deptot;
	If Deptot <> Abs(Deptot) Print #0;"DR";
	Print #0;""
endif
IF currvartot<>0 and p61$[136,136]="Y" !   and not(currpass)
	L1 = L1 + 1
	If L1 > L9 Gosub L_5800
	Print #0;"CURRENCY VARIANCE......";
	Print #0; Using "##,###,###.##"; Tab 60;CURRVARTOT;
	If currvartot <> Abs(currvartot) Print #0;"DR";
	LET T1=T1+CURRVARTOT
	Print #0;""
endif
Print #0;"OTHER REC. CREDIT......."
For X = 0 To (Chf(4) - 1)
  If Not(M9[X]) Goto L_4185
  Mat Read #4,X;C1$;
  If L1 > L9 Gosub L_5800
  Print #0;C1$[1,21];
  Print #0; Using "##,###,###.##"; Tab 60;M9[X];
  If M9[X] <> Abs(M9[X]) Print #0;"DR";
  Print #0;""
  L1 = L1 + 1
L_4185: Next X
Print #0;"........................" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"TOTAL DEBIT ADJUSTMENTS.";
Print #0; Using "##,###,###.##"; Tab 45;B[13];
If B[13] <> Abs(B[13]) Print #0;"DR";
If B[13] = Abs(B[13]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"CREDIT ADJUSTMENTS.....";
Print #0; Using "##,###,###.##"; Tab 45;B[14];
If B[14] <> Abs(B[14]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"WRITE OFFS (CR.ADJ)....";
Print #0; Using "##,###,###.##"; Tab 45;B[15];
If B[15] <> Abs(B[15]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"BAD DEBTS (CR.ADJ).....";
Print #0; Using "##,###,###.##"; Tab 45;B[16];
If B[16] <> Abs(B[16]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0; Tab 45;"-------------"; Tab 60;"-------------"
Print #0; Using "---,---,---.##"; Tab 44;T; Tab 59;T1
Print #0; Tab 45;"--------------"; Tab 60;"-------------"
Print #0; Using "---,---,---.##"; Tab 44;T - T1
For X = 0 To (Chf(4) - 1) \ M9[X] = 0 \ Next X
For X = 0 To (Chf(5) - 1) \ O9[X] = 0 \ Next X
deptot=0;CURRVARTOT=0
Return 
L_4500: Rem PRINT TOTALS
If Not(X2) Goto L_4880
Print #0;"\15\\15\BANK TOTALS";
Print #0; Using "###,###,###.##"; Tab 19;S6[0];
If S6[0] <> Abs(S6[0]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 36;S6[1];
If S6[1] <> Abs(S6[1]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 53;S6[2];
If S6[2] <> Abs(S6[2]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 70;S6[3];
If S6[3] <> Abs(S6[3]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 87;S6[4];
If S6[4] <> Abs(S6[4]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 104;S6[5];
If S6[5] <> Abs(S6[5]) Print #0;"CR";
Print #0;"\15\\15\MTD REPORT TOTALS";
Mat Read #1,110,6;M1;
Print #0; Using "###,###,###.##"; Tab 19;M1[0];
If M1[0] <> Abs(M1[0]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 36;M1[1];
If M1[1] <> Abs(M1[1]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 53;M1[2];
If M1[2] <> Abs(M1[2]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 70;M1[8];
If M1[8] <> Abs(M1[8]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 104;M1[3];
If M1[3] <> Abs(M1[3]) Print #0;"CR";
Print #0;"\15\\15\YTD REPORT TOTALS";
Print #0; Using "###,###,###.##"; Tab 19;M1[4];
If M1[4] <> Abs(M1[4]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 36;M1[5];
If M1[5] <> Abs(M1[5]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 53;M1[6];
If M1[6] <> Abs(M1[6]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 70;M1[9];
If M1[9] <> Abs(M1[9]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 104;M1[7];
If M1[7] <> Abs(M1[7]) Print #0;"CR";
L_4880: For X = 0 To 5
  S6[X] = 0
Next X
Return 
L_5000: Rem PRINT DAILY TOTALS
Gosub L_2800
Gosub L_5800
X$ = D4 Using "&&&&&&"
Print #0; Tab 9;X$[3,4];"/";X$[5,6];"/";X$[1,2];
Print #0; Using "###,###,###.##"; Tab 19;T9[0];
If T9[0] <> Abs(T9[0]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 36;T9[1];
If T9[1] <> Abs(T9[1]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 53;T9[2];
If T9[2] If T9[2] <> Abs(T9[2]) Print #0;"DR";
Print #0; Using "###,###,###.##"; Tab 70;T9[3];
If T9[3] <> Abs(T9[3]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 87;T9[4];
If T9[4] <> Abs(T9[4]) Print #0;"CR";
Print #0; Using "###,###,###.##"; Tab 104;T9[5];
If T9[5] <> Abs(T9[5]) Print #0;"CR";
For X = 0 To 5
  S6[X] = S6[X] + T9[X]
  T9[X] = 0
Next X
Print #0;""
F = 0
Return 

L_5800: Rem      PRINT HEADING.
L1 = L1 + 1
If L1 < L9 Return 
If V = 0 Goto L_5850
If L9 <> 22 Goto L_5850
!Input "\15\PRESS <CR> TO CONTINUE "A$
! Print 'CS'
L_5850: If V Print #0;"\14\";
Print #0;"\15\\15\"
V = V + 1
Print #0;"-306B-";
If P9$[17,17] <> "Y" If G1[8] = U2 Print #0;" R ";
Print #0; Tab 8;"DATE: ";D$;
Print #0; Tab 51;P$; Tab 115;"  PAGE ";V;
Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0;"  ";T9$;
Print #0; Tab 42;"C A S H  R E C E I P T S  M O N T H L Y  J O U R N A L";
Print #0;"   - TOTALS BY DAILY DEPOSITS"
Print #0;"\15\";
Print #0; Tab 9;"DEPOSIT";
Print #0; Tab 25;"ACCOUNTS";
Print #0; Tab 62;"OTHER"; Tab 76;"WRITE OFF";
Print #0; Tab 95;"SUNDRY"
Print #0; Tab 11;"DATE"; Tab 23;"RECEIVABLE"; Tab 41;"DISCOUNTS";
Print #0; Tab 64;"A/R"; Tab 77;"BAD DEBT";
Print #0; Tab 97;"CASH"; Tab 110;"NET CASH"
Print #0;"\15\";
L1 = 8
Return 

L_7000: Rem CHECK PRINTER TYPE
F = 0
!If Err 0 Let F = Spc(8)
!N = Chf(0)
!If Err 0 Gosub ERR_ESCAPE
L9 = 55
!If F Let L9 = 22
!F = 0
!Print 'CR MU';"PRINTING, PLEASE WAIT . . . ";'CL'
!If L9 = 22 Print 'CS'
!Signal 3,0
Return 

L_8000: Rem TEST PROCESS STATUS
Mat Read #1,120;P0;
If P0[301] Let S0 = 1 \ Goto L_8560
If P0[302] Let S0 = 2 \ Goto L_8560
If P0[303] Let S0 = 1 \ Goto L_8560
If P0[304] Let S0 = 3 \ Goto L_8560
If P0[305] Let S0 = 5 \ Goto L_8560
If P0[306] Let S0 = 3 \ Goto L_8560
If P0[311] Let S0 = 5 \ Goto L_8560
If P0[320] Let S0 = 5 \ Goto L_8560
If P0[227] Let S0 = 5 \ Goto L_8560
Read #1,20,34;I2;
Read #1,20,38;I3;
Read #1,20,8;P0[0];
If Not(P0[0]) If I2 <> I3 Goto L_8700
If P0[0] Let S0 = P0 \ Goto L_8560
L_8090: S0 = P0[0] \ If S0 > 5999 Goto L_8200
L_8200: I = 306 \ P0[0] = 0
!Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
P0[306] = UIDREC[1]
Mat Write #1,120;P0;
P0[0] = 2 \ Write #1,20,8;P0[0];
Return 
L_8300: Read #1,20,8;S0;
If S0 Goto L_8610
SOME = 0
Mat Read #1,120;P0;
If P0[301] Let S0 = 1 \ Gosub L_8560
If P0[302] Let S0 = 2 \ Gosub L_8560
If P0[303] Let S0 = 1 \ Gosub L_8560
If P0[304] Let S0 = 3 \ Gosub L_8560
If P0[305] Let S0 = 5 \ Gosub L_8560
If P0[306] Let S0 = 3 \ Gosub L_8560
If P0[311] Let S0 = 5 \ Gosub L_8560
If P0[320] Let S0 = 5 \ Gosub L_8560
If P0[227] Let S0 = 5 \ Gosub L_8560
For BANK = 1 To Chf(3) - 1
  Mat Read #3,BANK,0;C$
  If Len(C$) = 0 Goto L_8510
  If C$[1,3] = "   " Goto L_8510
  Read #3,BANK,40;I2;
  Read #3,BANK,44;I3;
  Read #3,BANK,36;P0[0];
  If Not(P0[0]) If I2 <> I3
    SOME = 1
    Gosub L_8700
  End If 
  If P0[0] Goto L_8500
  Goto L_8510
L_8500: S0 = P0[I]
  Gosub L_8560
L_8510: Next BANK
If SOME  RETURN ! Input @0,23;'CL';"PRESS <CR> TO CONTINUE ";""F$ \ Return 
S0 = 3
Write #1,20,8;S0;
Return 
L_8560: Rem PROBLEM
SOME = 1
S0 = Int(S0)
L_8610: ! Print 'CR RB';" ";
On S0 Goto L_8640,L_8650,L_8660,L_8670,L_8680
L_8620: ! error message
eflg=eflg+1 
Message$=Message$+STR$(EFLG)
If BANK <> 0 
	Message$=Message$+" FOR BANK "+str$(BANK)
endif
Message$=Message$+" CANNOT RUN MONTHLY JOURNAL." 
!\ Signal 3,20 \ 
Goto L_8690
L_8640: ! in use by
eflg=eflg+1
Message$=Message$+Str$(eflg)+"-ENTRY RUNNING(301 OR 303)  "

If P0[301] Or P0[303]
  UIDREC = P0[301] \ If Not(UIDREC) Let UIDREC = P0[303]
  !Call "getuidinfo",UIDREC,USR$
   USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  Message$=Message$+" BY USER "+USR$[21]
End If 
Goto L_8620
L_8650: ! vefication
eflg=eflg+1
	message$=message$ + "VERF.LIST(302)"
	If P60$[6,6] <> "Y" message$=message$+ " OR 306"
	message$=message$ + " IN PROGRESS"
If P0[302] Or P0[306]
  UIDREC = P0[302] \ If Not(UIDREC) Let UIDREC = P0[306]
  !Call "getuidinfo",UIDREC,USR$
   USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  message$=message$+" BY USER "+USR$[21]
End If 
Goto L_8620
L_8660: ! journal in process
eflg=eflg+1 
message$=message$ +"JOURNAL(304"
If P60$[6,6] = "Y" message$=message$+ " OR 306"
message$=message$ + ") IN PROGRESS"
If P0[304] Or P0[306]
  UIDREC = P0[304] \ If Not(UIDREC) Let UIDREC = P0[306]
  !Call "getuidinfo",UIDREC,USR$
  USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  message$=message$+" BY USER "+USR$[21]
End If 
Goto L_8620
L_8670:  !
eflg=eflg+1
message$=message$+"JOURNAL(304) HAS BEEN RUN BUT NOT ACCEPTED"
message$=message$+ "THE JOURNAL AND ACCEPT(304 & 305) MUST BE RUN "
message$=message$+ "BEFORE THIS REPORT CAN BE RUN"
!Signal 3,30
Goto L_8620
L_8680: !
eflg=eflg+1
message$=message$+"ACCEPT(305, 311, 320 OR 227) IN PROGRESS"
If P0[305] Or P0[311] Or P0[320] Or P0[227]
  UIDREC = P0[305] \ If Not(UIDREC) Let UIDREC = P0[311]
  If Not(UIDREC) Let UIDREC = P0[320]
  If Not(UIDREC) Let UIDREC = P0[227]
  !Call "getuidinfo",UIDREC,USR$
  USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  message$=message$+ " BY USER "+USR$[21]
End If 
Goto L_8620
L_8690: Return 
L_8700: Rem ADDITIONAL ERROR MESSAGE
!Print 'RB'
eflg=eflg+1
message$=message$+str$(i3-i2)+"ENTRIES REMAIN IN CASH RECEIPTS..."
If BANK message$=message$+"FOR BANK "+str$(BANK)
message$=message$+"PLEASE RUN JOURNAL AND ACCEPT (304 & 305)."
!Signal 3,40
Return 

L_8800: Rem accept file
return
If G1[8] = U2 Return 
!Print @0,23;'CL';@5,23;"DO YOU WANT TO ACCEPT MONTHLY TOTALS? (YES/N) ";
!Input ""J$
If J$ = "N" Return 
If J$ <> "YES" Goto L_8800
!If Err 0 Gosub ERR_TRAP
Read #1,52,32;G1[8] \ G1[8] = U2 \ Write #1,52,32;G1[8];
Return 
!If Err 0 Gosub ERR_TRAP
B6 = 0 \ G2 = 0
For Y = 1 To Chf(3) - 1
  For X = 0 To 17
    B[X] = 0
  Next X
  Write #3,Y,40;B6;
  Write #3,Y,44;B6;
  Mat Write #3,Y,48;B;
Next Y
For Y = 1 To Chf(4) - 1
  Mat Write #4,Y,30;G2;
Next Y
For Y = 0 To (Chf(5) - 1) \ Mat Write #5,Y,30;G2; \ Next Y
B$ = " ",B$
L_8915: Search #2,3,1;B$,V1,E
If E = 2 Goto L_8955
If E Gosub ERR_SEARCH
Mat Write #2,V1;Z7;
Search #2,5,1;B$,V1,E
If E Gosub ERR_SEARCH
E = 3
Search #2,1,0;B$,V1,E
If E Gosub ERR_SEARCH
Goto L_8915
L_8955: K6$ = " ",K6$
L_8956: Search #6,3,1;K6$,R[6],E \ If E = 2 Goto L_8960
If E Gosub ERR_SEARCH
Mat Read #6,R[6],624;C10 \ C10[2] = 0 \ Mat Write #6,R[6],624;C10;
Goto L_8956
L_8960: B6 = 0
Write #1,20,34;B6;
Write #1,20,38;B6;
L_8975: S = 0
Write #1,20,8;S;
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
If P9$[17,17] <> "Y" Gosub L_8800
Mat Read #1,120;P0
P0[306] = 0
Mat Write #1,120;P0;
Gosub L_8975
L_9010: ! end it all ! ! Print 'CS'
!Close 
!Chain "MX000"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section 
returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if message$="" let message$="Report Complete"
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem

Else
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
Rem {end rtn.error.s}
