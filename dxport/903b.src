! >>> Program 903b
!
! description CREATE USER DEFINED WORK FILE 
! loadsave -w -n 100,10 -o prog/dxport/903b.dl4 src/903b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"


Rem BEDIT Version: 2.5 OBJECT CODE     Created: MAY  4, 2016  10:33:07
Rem /x/w2/pm/r2005//x/usracct/mary/work/custom/xrev9/ut903b.src (synergyux.synergy.n) [mgd] {32208}
Rem  Copyright (c) 2016 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!Declare Intrinsic Sub FindF,InpBuf,String
!Option Default Dialect IRIS1
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian,StringSearch
Declare Intrinsic Sub Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Declare External Function GetUIDRec,GetUIDInfo$
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Rem UT903b - generate user defined work file
Rem rjs 06/18/10
!If Err 0 Goto ERR_TRAP
Try
Dim X$[1000],WK$[1000],WK1$[1000],DESC$[30],Z1$[50],PROD$[12],K$[12],PATH$[50]
Dim UCAT$[100],FILENAME$[50],J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80]
Dim D$[36],F$[50],G$[30],SPACE$[50],SCRATCH$[30],KEY_$[50],KEY1$[50]
Dim WORK$[3000],WORK1$[3000],J4$[70],J9$[70],I$[50],J7$[70],TB$[10]
Dim A$[156],2%,B[24],FNAME$[100],USRFILE$[100],PRGC$[10],U3$[60]
Dim P9$[50],PRGC$[10],PUDA$[650]
Dim CUSTOM_CUSTOMER$[30]
Dim 1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,B[24]
Dim 3%,RECD,RECE,RECF,RECG,USRDEFCAT,UCAT[10]
dim BLANK$[50]
Dim groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr,S9[1]
DIM SOURCEDIRNAME$[50],TEXTDIRNAME$[50],tmpfile$[80],txtfile$[80]
Dim 3%!
dim custom_customer$[30]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1500],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim eparam$[50],blank$[50]
Dim 3%,uarec
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
uarec= GetUIDRec(e$,IntCo,Userid$)
COID=intCO
COMP=intCO
for ctr=0 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
TB$ = " ",TB$ \ TB$ = "\11\"
SPACE$ = " ",SPACE$
!E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
!F$ = COID Using "CNTRL#"
!PATH$ = "REPORTDIR"
!System 28,PATH$
!If PATH$ = "REPORTDIR" Let PATH$ = "/tmp"
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
custom_customer$ = UCase$(Trim$(custom_customer$))
Mat Read #1,88,1792;Z1$; \ Ropen #5,Z1$ ! product file
Mat Read #1,88,1984;Z1$; \ Ropen #6,Z1$ ! category
Mat Read #1,88,2288;Z1$; \ Ropen #7,Z1$ ! commhead
Mat Read #1,19,50;P9$;
If CUSTOM_CUSTOMER$ = "CSS" Or CUSTOM_CUSTOMER$ = "RANCHO"
  Z1$ = COID Using "2/sproduda#"
  Ropen #19,Z1$
End If 
If P9$[20,20] = "F"
	Let FINEPAPER = 1
	Z1$ = COID Using "2/SYNGPRBK#"
	Ropen #17,Z1$
	Z1$ = COID Using "2/gbkgclass#"
	Ropen #18,Z1$
Else 
	Let FINEPAPER = 0
endif

!PROMPT_FOR_FILE: Rem
!Print 'CS';"ut903b   Create work file ifor User Defined Category Update Utility "
!Print @5,2;"This program will create a TAB delimited work file."
!Print @5,4;"The first line is will have a heading"
!Print @5,5;"The detail lines contain:"
!If FINEPAPER = 1
!!  Print @5,6;"Product Code, Sales Category Description, Commodity Description,"
!  Print @5,7;"Grade Class Description"
!Else 
!  If CUSTOM_CUSTOMER$ = "CSS" Or CUSTOM_CUSTOMER$ = "RANCHO"
!    Print @5,6;"Product Code, Sales Category Description, Commodity Description,Product UA7"
! Else 
!    Print @5,6;"Product Code, Sales Category Description, Commodity Description."
!  End If 
!  Print @5,7;""
!End If 
!Print @5,9;"The file will be in ";PATH$
!Print @5,11;"1> File Name: ";
!GET_FILENAME: Rem let's get the file name
!J0$ = "2 00252011"
!FILENAME$ = "",FILENAME$
!J5$ = "Enter the file name max 25 characters <CR> to exit"
!Gosub ISINPUT
!If J4$ = "" Goto OUTEND
!FILENAME$ = J$[1,25]
!Call String(2,FILENAME$)
!Z1$ = PATH$ + "/" + FILENAME$
!Call FindF(Z1$,FOUND)
!If FOUND
  !Input @5,16;'CL';"File found overwrite (Y/N) ";""I$
  !Call String(1,I$)
  !If I$ = "Y" Kill Z1$ !  let z1$=z1$+"!"
  !If I$ <> "Y" Goto GET_FILENAME
!End If 
!WHAT_TO_DO: Rem whatcha want to do
!Print @0,23;'CL';"Enter #: Field to edit, C: start create, E: exit ";
!Input Len 16384 + 1;""I$ \ Call String(1,I$)
!If I$ = "E" Goto OUTEND
!If I$ = "C" Goto GET_READY
!J = I$
!If J = 1 Goto GET_FILENAME
!Goto WHAT_TO_DO
FILENAME$ = "cntrl/ut903.ini"
Call FindF(FILENAME$,A9)
if not(a9)
	let path$="files/reports/"
else
	Open #90,FILENAME$
	Read #90;path$
	X = Len(path$)
	If x>0
		if path$[x,x]="\15\" let path$[x,x]=""
	endif
	path$ = Trim$(path$)
	If path$ = "" Or path$ = "!"
		eflag=eflag+1
		returnstatus=1
		message$=path$+" source directory not set up properly. "
		Goto OUTEND
	End If 
	X = Len(path$)
	If path$[X,X] <> "/" Let path$[X,X] = ""
	Call FindF(path$,A9)
	If Not(A9)
		eflag=eflag+1
		returnstatus=1	
		message$=path$+" - Source Directory Does not exist. "
		Goto OUTEND
	End If 
endif
Call dxget("OWRITE",tmp$)
OWRITE=0
IF UCASE$(RTRIM$(TMP$))="Y" let owrite=99
Call dxget("FNAME",tmp$)
let filename$=lcase$(rtrim$(tmp$))
If FileNAME$ = "" 
	let eflag=eflag+1
	returnstatus=1
	let message$="Invalid File Name Entered "
	Goto OUTEND
endif
For X = 1 To Len(FileNAME$)
  If FileNAME$[X,X] = " " Let FileNAME$[X,X] = "_"
Next X
Z1$ = PATH$ + FILENAME$
Call FindF(Z1$,FOUND)
let tmp$=z1$
if found<>0 
	if not(owrite)
		let eflag=eflag+1
		let returnstatus=1
		let message$="File "+filename$+" Already Exists "
		goto outend:
	else
		let tmp$=tmp$+"!" 
	endif
endif

GET_READY: Rem let's start this
Build #12, + tmp$
close #12
Open #12,z1$

If FINEPAPER = 1
	WK$ = "Product\11\Sales Category Description\11\Commodity Description\11\Grade Class Description"
Else 
	If CUSTOM_CUSTOMER$ = "CSS" Or CUSTOM_CUSTOMER$ = "RANCHO"
		WK$ = "Product\11\Sales Category Description\11\Commodity Description\11\Product uda7"
	Else 
		WK$ = "Product\11\Sales Category Description\11\Commodity Description"
	End If 
End If 
Print #12;WK$
K$ = ""
L_110: Search #5,3,1;K$,R5,E
If E Goto OUTEND
CTR = CTR + 1 ! \ If Not(Fra(CTR / 100))!Print @20,16;'CL';CTR;
Mat Read #5,R5;A$
Mat Read #5,R5,156;B
Mat Read #6,B[11];DESC$
WK$ = " ",WK$
WK$ = K$ + TB$ + DESC$[1,24] + TB$
DESC$ = " ",DESC$
KEY_$ = A$[152,155]
Search #7,2,1;KEY_$,R7,E
If Not(E)
  Mat Read #7,R7,0;D$;
End If 
WK$ = WK$ + D$[1,16]
If DOREMARKS Let WK$ = WK$ + " " + D$[17,31]
If FINEPAPER = 1
  DESC$ = " ",DESC$
  KEY_$ = " ",KEY_$ \ KEY_$ = K$[1,12]
  Search #17,2,1;KEY_$,R17,E
  If Not(E)
    Mat Read #17,R17,454;PRGC$
    KEY_$ = " ",KEY_$
    KEY_$ = PRGC$[1,10]
    If KEY_$ <> "" If KEY_$[1,10] <> SPACE$[1,10]
      Search #18,2,1;KEY_$,R18,E
      If Not(E)
        Mat Read #18,R18,10;DESC$
      End If 
    End If 
  End If 
  WK$ = WK$ + TB$ + DESC$[1,30]
End If 
If CUSTOM_CUSTOMER$ = "CSS" Or CUSTOM_CUSTOMER$ = "RANCHO"
  KEY_$ = " ",KEY_$ \ KEY_$ = K$[1,12]
  Search #19,2,1;KEY_$,R19,E
  If Not(E)
    Mat Read #19,R19,12;PUDA$
    If PUDA$[301,350] <> SPACE$[1,50]
      WK$ = WK$ + TB$ + PUDA$[301,350]
    End If 
  End If 
End If 
Print #12;WK$
Goto L_110

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump()
e$ = msg$ \ Error 10000                      
Return ! End  
                             
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
eflag=1
Message$=E$
call programdump()


OUTEND: Rem END
if eflag<>0 let returnstatus=1 ! error

Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	let message$="Update Complete"
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)

Else
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program
