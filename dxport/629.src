! >>> Program 629
!
! description General Ledger Interface to IQ
!  loadsave -w -n 100,10 -o prog/dxport/629.dl4 src/629.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  2, 2002  11:51:25
Rem /usr/acct/r97//usr/acct/mary/work/devl/ap/gl629.src (univ2) [mary] {59477}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,OpenMySQLChan
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
! file libs
include "src/inc/fileglmaster.inc"
include "src/inc/sql_glmaster.inc"


!
! local subs / functions
Declare Sub UpdateMySQLData

Rem gl629 - general ledger interface to iq for multi-comp, multi-client
Rem LAST UPDATE: MTG 9/93
Rem
Try
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[800],rstr$[2000] ! error 
dim 1%,J4$[50],additionalDB,intOpt,chan[99]
Dim 1%,C0[9],E,L9,EOP[39]
Dim 2%,B1,D9,X,X1,GROUP,CLIENT,CL,G1[1],3%,R[30]
Dim 4%,X2,G2[39],G3[38],G4[39],G5[38]
Dim 4%,TOT2[39],TOT3[38],TOT4[39],TOT5[38]
Dim 4%,A3[39],B3[39],P3[39]
Dim A$[36],A2$[10],C$[140],F$[16],J$[50],GU$[2],X$[10],P9$[50],F9$[2],C9$[4]
Dim R$[152],p61$[256]
Dim R2$[60],R1$[60],F1$[16],F2$[16],F3$[16],K5$[20],K6$[50],I$[50]
Dim G$[38],K3$[50],K4$[50],G1$[10]
dim work$[50],sfile$[50]
dIM GROUPID$[1],keyIsam$[100]
Dim fname$[50],groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]

dim glmaster. as glmaster
dim sql_glmaster. as sql_glmaster

dim 4%

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$


COID=intCO
COMP=intCO
REC_UAC = GetUIDRec(e$,IntCo,Userid$) 
!call dxopen() ! needed?
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

for ctr=1 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
message$=""
GROUP = intco
gu$[1,1]=intco using "#"
groupid$ = GetParameter$("u_group")
if rtrim$(groupid$)="" let groupid$="0"
let gu$[2,2]=groupid$[1,1]
!Print 'CS'; Tab 20;"GENERAL LEDGER INTERFACE TO IQ"
Mat Read #1,19,50;P9$;
mat read #1,61,0;p61$;

If P9$[23,23] = "Y" Or P9$[23,23] = "L" Or P9$[23,23] = "O" Goto L_900
let eflag=eflag+1
let message$="General Ledger is not available for this company"
goto outend:
L_900: Rem GET ACF FILE
Mat Read #1,88,48;F2$;
Call FindF(F2$,A9) \ If A9 Goto L_920
let eflag=eflag+1
let message$="G/L Control File is not available for this company"
goto outend:
! Goto L_870
L_920: !
chan[5] = FindChannel()
Open #chan[5],F2$
For X = 1 To 16
  If F2$[X,X] = "F" Goto L_945
Next X
let eflag=eflag+1
let message$="General Ledger is not available for this company"
goto outend:
!Goto L_870
L_945: !  GU$ = F2$[X + 1,X + 2]
additionalDB = GetParameter$("ADDITIONALDB")
if additionalDB<0 or additionalDB>3
	let eflag=eflag+1
	let message$="Invalid Additonal DB Option Selected"
	goto outend:
end if
if additionalDB = 2 or additionalDB = 3
	let eflag=eflag+1
	let message$="Phocus Option Not Yet Available"
	goto outend:
end if
if (additionalDB = 1 or additionalDB = 3)
	if P61$[107,107] <> "Y"
		let eflag=eflag+1
		let message$="MySQL Option Not Enabled"
		goto outend:
	end if
	chan[2] = OpenMySQLChan(e$)
end if	

intOpt = GetParameter$("INTOPT")
if intOpt<1 or intOpt>2
	let eflag=eflag+1
	let message$="Invalid Interface Option Selected"
	goto outend:
endif
if intOpt=2 goto L_8500! delete the inteface batch
!L_960: Print @0,5;'CL';"Enter Interface Option  1: Create,  2: Delete, <CR> to end ";
!Input Len (16384 + 1);""J$
!If J$ = "" Goto OUTEND
!If J$ = "1" Goto L_1000
!If J$ = "2" Goto L_8500
!Goto L_960
L_1000: Rem CHECK IF MULTI-CLIENT
Mat Read #1,51,0;C0;
CLIENT = 0
L_1015: !
if c0[3]<>0
	client = GetParameter$("CLIENTID")
	if client<0 or client>9999
		let eflag=eflag+1
		let message$="Invalid Client Id Submitted"
		goto outend:
	endif
endif
!If Not(C0[3]) Goto L_1100
!Print @0,10;"ENTER CLIENT NUMBER TO PROCESS, <CR> FOR ALL,  E: TO END ";
!Input Len (16384 + 4);""J$
!Call String(1,J$)
!If J$ = "E" Goto OUTEND
!f J$ = "" Let CLIENT = 0 \ Goto L_1100
!CLIENT = J$ \ If Not(CLIENT) Goto L_1055
if client<>0
	K5$ = " ",K5$ \ K5$[1,6] = CLIENT Using "######"
	Search #chan[5],2,1;K5$,R[5],E 
	if  e<>0
		let eflag=eflag+1
		let message$="Client Id  "+str$(client)+" Not on File"
		goto outend:
	endif  ! \ If Not(E) Goto L_1100
!L_1055: Print @0,23;'CL';"CLIENT NOT ON FILE "; \ Signal 3,30 \ Print @0,23;'CL';
!Goto L_1015
endif
!L_1100: Print @0,23;'CL';"Ready to begin update (Y/N) ";
!Input Len (16384 + 1);""J$
!Call String(1,J$)
!If J$ = "N" Goto OUTEND
!If J$ <> "Y" Goto L_1100
!Print @0,23;'CL';@0,22;"Processing...Please wait...";
F1$ = "1/GLMASTER",GU$[1,1]
Call FindF(F1$,A9) \ If Not(A9) Goto L_1300
chan[6] = FindChannel()
Open #chan[6],F1$
If CLIENT Goto L_1200
!If Err 0 Rem
Try Close #chan[6] Else Rem 
!If Err 0 Gosub ERR_TRAP
Try Kill F1$ Else Rem
Goto L_1300
L_1200: Rem UPDATING 1 CLIENT ONLY
K6$ = " ",K6$
L_1210: Search #chan[6],3,1;K6$,R[6],E \ If E = 2 Goto L_1400
If E error 11000
Mat Read #chan[6],R[6],38;G1;
If G1[0] <> CLIENT Goto L_1210
Search #chan[6],5,1;K6$,R[6],E \ If E error 11000
E = 3 \ Search #chan[6],1,0;K6$,R[6],E \ If E error 11000
Goto L_1210
!!!!! ------
L_1300: Rem BUILD GLMASTER FILE
!let tmp$="<666> files/",filename$
I$ = "[1:668] files/",F1$,"!"
chan[6] = FindChannel()
Build #chan[6],I$
R = 6 \ Search #chan[6],0,1;K6$,R,E \ If E error 11000
R = 1 \ Search #chan[6],0,0;K6$,R,E \ If E error 11000
let i$="files/",f1$," <666>"
Modify i$
try close #chan[6] else rem
open  #chan[6],f1$
!! need modify 
!!

L_1400: Rem START HERE
K5$ = " ",K5$ \ If Not(CLIENT) Goto L_2000
K5$[1,6] = CLIENT Using "######"
Search #chan[5],2,1;K5$,R[5],E \ If E error 11000
Goto L_2050
L_2000: Search #chan[5],3,1;K5$,R[5],E \ If E = 2 Goto OUTEND
If E error 11000
If K5$[7,8] <> "  " Goto L_2000
L_2050: Mat Read #chan[5],R[5],0;C$;
!Print @0,23;'CL';"Processing Client #";K5$;
CL = K5$[1,6]
L9 = C$[135,136]
If L9 < 10 Let F9$ = L9 Using "#" Else Let F9$ = L9 Using "##"
C9$ = CL Using "####"
For X = 1 To 4
  If C9$[X,X] = " " Let C9$[X,X] = "."
Next X
F3$ = F9$,"/GLM",GU$,C9$
Call FindF(F3$,A9) \ If Not(A9) Gosub L_3000
chan[3] = FindChannel()
Open #chan[3],F3$
K3$ = " ",K3$
Search #chan[3],2,1;K3$,R[3],E
Mat Read #chan[3],R[3],70;P3;
For X = 0 To 39
  EOP[X] = 0
  If Int(P3[X] / 100) = (Fra(P3[X] / 100) * 100) Let EOP[X] = 99
  If X <> 13 If X <> 26 If X <> 39 Let EOP[X] = 0
Next X
K3$ = " ",K3$
L_2160: Search #chan[3],3,1;K3$,R[3],E \ If E = 2 Goto L_2500
If E error 11000
Mat Read #chan[3],R[3],0;A$;
Mat Read #chan[3],R[3],48;A2$;
Mat Read #chan[3],R[3],70;A3;
Gosub L_8000
If A$[13,13] <> "3" And A$[13,13] <> "4" Goto L_2210
For X = 0 To 39 \ G2[X] = TOT2[X] \ TOT2[X] = 0 \ Next X
For X = 0 To 38 \ G3[X] = TOT3[X] \ TOT3[X] = 0 \ Next X
Goto L_2295
L_2210: YTDBAL = 0
YTDBAL = A3[0] \ G2[0] = A3[0]
TOT2[0] = TOT2[0] + G2[0]
For X = 1 To 39
  G2[X] = A3[X]
  TOT2[X] = TOT2[X] + G2[X]
  G3[X - 1] = YTDBAL + A3[X]
  TOT3[X - 1] = TOT3[X - 1] + G3[X - 1]
  YTDBAL = YTDBAL + A3[X]
  If Not(EOP[X]) Goto L_2290
  If A$[1,1] = " " Goto L_2275
  If A$[1,1] = "A" Or A$[1,1] = "L" Or A$[1,1] = "C" Goto L_2290
  If A$[1,2] = "NN" Goto L_2290
L_2275: If A$[13,13] = "1" Or A$[13,13] = "2" Goto L_2285
  If A$[14,14] = "A" Or A$[14,14] = "L" Or A$[14,14] = "C" Goto L_2290
L_2285: YTDBAL = 0
L_2290: Next X
L_2295: G1[0] = CL
If C0[5] Let G1[1] = A$[8,9]
G$[1,8] = A$[2,9] \ If A$[1,1] <> " " Let G$[1,8] = A$[1,8]
G$[9,9] = A$[13,13]
G$[10,10] = A$[14,14]
G1$[1,10] = A2$[1,10]
G$[17,38] = A$[15,36]
K6$ = " ",K6$ \ K6$[1,8] = G$[1,8]
K6$[9,12] = CL Using "####"
Search #chan[6],2,1;K6$,R[6],E \ If Not(E) Goto L_2360
If E > 1 error 11000
E = 2 \ Search #chan[6],1,0;K6$,R[6],E \ If E error 11000
Search #chan[6],4,1;K6$,R[6],E \ If E error 11000
L_2360: Mat Write #chan[6],R[6],0;G$
Mat Write #chan[6],R[6],38;G1
Mat Write #chan[6],R[6],46;G2
Mat Write #chan[6],R[6],366;G3
Mat Write #chan[6],R[6],678;G4
Mat Write #chan[6],R[6],998;G5;
Mat Write #chan[6],R[6],1322;G1$;
Goto L_2160

L_2500: Rem BUDGETS
If Not(C0[4]) Goto L_3000
F3$ = F9$,"/GLB",GU$,C9$
Call FindF(F3$,A9) \ If Not(A9) Goto L_3000
chan[4] = FindChannel()
Open #chan[4],F3$
For X = 0 To 39 \ TOT2[X] = 0 \ TOT4[X] = 0 \ Next X
For X = 0 To 38 \ TOT3[X] = 0 \ TOT5[X] = 0 \ Next X
K4$ = " ",K4$
Search #chan[4],2,1;K4$,R[4],E \ If E error 11000
Mat Read #chan[4],R[4],70;B3;
For X = 0 To 39
  If B3[X] <> P3[X] Goto L_3000
Next X
L_2600: Search #chan[4],3,1;K4$,R[4],E \ If E = 2 Goto L_3000
If E error 11000
Mat Read #chan[4],R[4],0;A$;
Mat Read #chan[4],R[4],48;A2$;
Mat Read #chan[4],R[4],70;A3;
Gosub L_8000
If A$[13,13] <> "3" And A$[13,13] <> "14" Goto L_2650
For X = 0 To 39 \ G4[X] = TOT4[X] \ TOT4[X] = 0 \ Next X
For X = 0 To 38 \ G5[X] = TOT5[X] \ TOT5[X] = 0 \ Next X
Goto L_2725
L_2650: YTDBAL = 0
YTDBAL = A3[0] \ G4[0] = A3[0]
For X = 1 To 39
  G4[X] = A3[X]
  TOT4[X] = TOT4[X] + G4[X]
  G5[X - 1] = YTDBAL + A3[X]
  TOT5[X - 1] = TOT5[X - 1] + G5[X - 1]
  If Not(EOP[X]) Goto L_2720
  If A$[1,1] = " " Goto L_2705
  If A$[1,1] = "A" Or A$[1,1] = "L" Or A$[1,1] = "C" Goto L_2720
  If A$[1,2] = "NN" Goto L_2720
L_2705: If A$[13,13] = "1" Or A$[13,13] = "2" Goto L_2715
  If A$[14,14] = "A" Or A$[14,14] = "L" Or A$[14,14] = "C" Goto L_2720
L_2715: YTDBAL = 0
L_2720: Next X
L_2725: G1[0] = CL
If C0[5] Let G1[1] = A$[8,9]
G$[1,8] = A$[2,9] \ If A$[1,1] <> " " Let G$[1,8] = A$[1,8]
G$[9,9] = A$[13,13]
G$[10,10] = A$[14,14]
G1$[1,10] = A2$[1,10]
G$[17,38] = A$[15,36]
K6$ = " ",K6$ \ K6$[1,8] = G$[1,8]
K6$[9,12] = CL Using "####"
Search #chan[6],2,1;K6$,R[6],E \ If Not(E) Goto L_2810
If E > 1 error 11000
E = 2 \ Search #chan[6],1,0;K6$,R[6],E \ If E error 11000
Search #chan[6],4,1;K6$,R[6],E \ If E error 11000
Mat Write #chan[6],R[6],0;G$
Mat Write #chan[6],R[6],38;G1
Mat Write #chan[6],R[6],46;G2
Mat Write #chan[6],R[6],366;G3
L_2810: Mat Write #chan[6],R[6],678;G4
Mat Write #chan[6],R[6],998;G5;
Mat Write #chan[6],R[6],1322;G1$;
Goto L_2600
L_3000: Rem END OF GL & BUDGET
If CLIENT Goto OUTEND
!If Err 0 Rem
Try Close #chan[3] Else Rem 
Try Close #chan[4] Else Rem
! If Err 0 Gosub ERR_TRAP
Goto L_2000
L_8000: Rem CLEAR VARIABLES FOR NEW ACCOUNT
G$ = " ",G$ \ G1$ = " ",G1$
G1[0] = 0 \ G1[1] = 0
For X = 0 To 39 \ G2[X] = 0 \ G4[X] = 0 \ Next X
For X = 0 To 38 \ G3[X] = 0 \ G5[X] = 0 \ Next X
Return 
L_8500: Rem delete
!Print @0,23;'CL';@0,22;"Deleting Work File...Please Wait...";
!Signal 3,30
F1$ = "1/GLMASTER",GU$[1,1]
Call FindF(F1$,A9) \ If Not(A9) Goto OUTEND
chan[6] = FindChannel()
Open #chan[6],F1$
!If Err 0 Rem
Try Close #chan[6] Else Rem
!If Err 0 Gosub ERR_TRAP
Try Kill F1$ Else Rem 

OUTEND: Rem EXIT PROGRAM
if additionalDB=1 or additionalDB=3
	call UpdateMySQLData()
end if
Try Close Else Rem
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	let message$="Complete"
	!if not(totrec)
	!	returnstatus=1
	!	let message$=message$+"There are no g/l batches available to print"
	!	message$=message$+"."
	!else
	!	Let message$=message$+" "+str$(totrec)+" G/L Batches Printed "
	!	
	!endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
! try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
	end try
End ! the whole program

sub UpdateMySQLData()
try
	! start of by deleting everyting
	search #chan[2];"DELETE FROM glmaster"
	if intOpt=2 exit sub ! only here to delete
	keyIsam$ = " ",keyIsam$
	do
		e = filegetglmaster(e$,chan[6],">",1,keyIsam$,glmaster.)
		if e<0 exit do
		call glmaster_DL4SQLConvert(e$,"FROMDL4",glmaster.,sql_glmaster.)
		e = glmaster_SQLInsert(e$,chan[2],sql_glmaster.)
		if e = 0
			let eflag=eflag+1
			let message$="Error inserting MySQL row: "+keyIsam$
			exit do
		end if
	loop
else
	include "src/callsuberr.inc"
end try
end sub