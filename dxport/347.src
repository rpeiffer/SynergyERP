! >>> Program 347
!
! description  WHSE RASL Replenishment Capacity
!
! loadsave -w -n 100,10 -o prog/dxport/347.dl4 src/347.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAY 24, 2005  11:16:04
Rem /w2/papermaster/r2005/
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem *- MX347 - Product replenishment Report
Rem *- RGP - 03/12/01 - create program
Rem *- Originally mx095c (part of material handling)
!
Declare Intrinsic Sub InpBuf,String,Time
!
! - Option Default Dialect IRIS1
Com 1%,J4$[75]
If Err 0 Gosub ERR_TRAP
!!Window On 
Dim TITLE$[60],COMP$[30],SPROD$[12],EPROD$[12],PLOC$[6],RETVAL$[512]
Dim K1$[40],X$[10],DATE$[8],TME$[26],K4$[60],CLOC$[6],K9$[60]
Dim SYSDATE$[22],DUMMY$[5],PROD_DESC$[30],STOCKING_UM$[4],PROD_KEY$[12]
Dim SLOC$[6],ELOC$[6],K6$[50],custom_customer$[30]
Dim 1%,PFU1[20],JQ_FLAG,PD1[9],RASL[5],MHFLAG,CNVTU[2],PLDTL,LOCRNG
Dim 1%,MAXLN,CRLN,CPAG,FLD,SCRN,C2,LOCSORT,CHAN
Dim 2%,I,B[24],X,X1,X2,FLAG
Dim 3%,A4,PFU2[6],A[33],A1[7],R[99],P3[4],CNVTA,AMOUNT
Dim 3%,AVAIL,BAVAIL,NUMRECS,J8
Dim PCODE$[12],LOC$[6],1%,WH,2%,FCHAN[6],3%,REP_[14]
Dim ERR_MSG$[19],P9$[50],P60$[50],P61$[256]
Dim 4%,J1
Dim J$[75],J0$[12],J1$[75],J5$[75]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],tmp3$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim BegParam$[50] \ BegParam$=" ",BegParam$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J1 = Chf(0)
If Err 0 Gosub ERR_TRAP
MAXLN = 62;SCRN = 0
If J8 Let MAXLN = 21;SCRN = 1
!SLOC$ = " ",SLOC$;SPROD$ = " ",SPROD$
!ELOC$ = "z",ELOC$;EPROD$ = "z",EPROD$
!PLDTL = 0;LOCSORT = 1;ZERXCL = 1
Mat Read #1,0,100;DATE$;
Read #1,7,63;JQ_FLAG;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))
! custom_customer$="ADMIRAL" ! test
! - If P9$[41,41] = "N" Goto NOSRASL
MHFLAG = 0
If P61$[32,32] = "Y" Let MHFLAG = 1
If Not(MHFLAG) Let JQ_FLAG = 0
Read #1,3,0;COMP$;
COMP$=rtrim$(COMP$)
! - TCOMP: 
! - If COMP$[Len(COMP$)] = " " Let COMP$ = COMP$[1,Len(COMP$) - 1] \ Goto TCOMP
! - Gosub OPEN_FILES
! - Mat Read #11,Spc(6),10;A4; \ If Not(A4) Let A4 = Spc(6)
! - Mat Read #12,A4,0;PD1;
!WH = PD1[2]
!RETVAL$ = " ",RETVAL$
!Call "PROGDFLT","347","",77,RETVAL$
!If RETVAL$[1,5] = "@@@@@"
!  RETVAL$[1,2] = WH Using "##"
!  RETVAL$[3,14] = SPROD$[1,12];RETVAL$[15,26] = EPROD$[1,12]
!  RETVAL$[27,32] = SLOC$[1,6];RETVAL$[33,38] = ELOC$[1,6]
!  RETVAL$[39,39] = Str$(PLDTL)
!  RETVAL$[40,40] = Str$(LOCSORT)
!  RETVAL$[41,41] = Str$(ZERXCL)
!End If 
!WH = RETVAL$[1,2]
!SPROD$ = RETVAL$[3,14];EPROD$ = RETVAL$[15,26]
!SLOC$ = RETVAL$[27,32];ELOC$ = RETVAL$[33,38]
!PLDTL = RETVAL$[39,39];LOCSORT = RETVAL$[40,40]
!ZERXCL = RETVAL$[41,41]
!Gosub DISPLAY_SCREEN_PROMPTS
!Goto WHATNOW
!
!EDT_ALL: Rem "
!For FLD = 1 To 6
!  Gosub EDT_FLDS
!Next FLD
!

If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"347",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
If P9$[41,41] = "N" Goto NOSRASL
Gosub OPEN_FILES
!
call dxget("WHSE",tmp$) \ WH = tmp$  !warehouse
call dxget("SPROD",tmp$) \ SPROD$ = UCase$(tmp$),BegParam$ !starting product code
call dxget("EPROD",tmp$) \ EPROD$ = UCase$(tmp$),EndParam$ !ending product code
call dxget("SLOC",tmp$) \ SLOC$ = UCase$(tmp$),BegParam$ !starting location range
call dxget("ELOC",tmp$) \ ELOC$ = UCase$(tmp$),EndParam$  !ending location range
call dxget("PDETAIL",tmp$) \ if tmp$="" let PLDTL=0 else PLDTL = 1  !print detail?
call dxget("SORTBYL",tmp$) \ if tmp$="" let LOCSORT=0 else LOCSORT = 1 !sort by location?
call dxget("EZEROS",tmp$) \ if tmp$="" let ZERXCL=0 else ZERXCL = 1 !exclude zeros?
!
!warehouse
If WH < 0 Or WH > 99 let e$="Invalid warehouse, must be between 0 and 99!" \ error 10000
!
!product code
If EPROD$ < SPROD$ let e$="Invalid ending product code, must be >= than starting product code!" \ error 10000
!
!location range
If ELOC$ < SLOC$ let e$ = "Invalid ending location, must be >= than starting location!" \ error 10000
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!
!WHATNOW: Rem "
!Print @0,22;'CE';"ENTER  #: field  R: reselect  P: print  S: save defaults  E: exit   ";
!Input Len 16384 + 2;""X$ \ Call String(1,X$)
!Print @0,22;'CE';
!If X$ = "E" Goto OUTEND
!If X$ = "P" Goto STRTPRNT
!If X$ = "R" Goto EDT_ALL
!If X$ = "S" ! "defaults save
!ASK_SAVE: Print @0,22;'CL';"Save for  A: all   U: user access only  <CR>: do not save  ";
!  Input Len 16384 + 1;""X$ \ Call String(1,X$)
!  If X$ = "" Print @0,22;'CL'; \ Goto WHATNOW
!  If X$ <> "A" And X$ <> "U" Goto ASK_SAVE
!  If X$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!  Call "Progdfltw","347","",77,RETVAL$,URECFLAG
!  Print @0,22;'CL';
!  Goto WHATNOW
!End If 
!FLD = X$ \ If FLD < 1 Or FLD > 6 Goto WHATNOW
!Gosub EDT_FLDS
!Goto WHATNOW
!EDT_FLDS: Rem "
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!On FLD Gosub GET_WAREHOUSE,GET_PRODUCT,GET_LOCS,GET_DETAIL,LOC_SORT
!On FLD - 5 Gosub EXCL_ZERO
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!Return 
!
STRTPRNT: Rem "start of print loop
If J8
  tmp$ = "ITEM CODE",fdel$
  tmp$ = tmp$,"DESCRIPTION 1",fdel$
  tmp$ = tmp$,"PRIM LOCTN",fdel$
  tmp$ = tmp$,"STKG U/M",fdel$
  tmp$ = tmp$,"STOCKING UNITS AVAIL",fdel$
  tmp$ = tmp$,"STOCKING UNITS CAPACITY",fdel$
  tmp$ = tmp$,"STOCKING UNITS OVERFLOW",fdel$
  tmp$ = tmp$,"STOCKING UNITS NEEDED",fdel$
  tmp$ = tmp$,"PALL SIZE",fdel$
  tmp$ = tmp$,"PALLETS CAPTY",fdel$
  tmp$ = tmp$,"PALLETS NEED",fdel$
  tmp$ = tmp$,"UNITS",fdel$
  tmp$ = tmp$,"PALLETS",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!If Err 0 Gosub ERR_ESCAPE
If LOCSORT Gosub SORTBYLOC
!Print @0,22;'CE';"PRINTING, PLEASE WAIT . . ."
!If SCRN Print 'CS';
CRLN = 90;CPAG = 0
NUMRECS = 0;CHAN = 5
If LOCSORT Let CHAN = 9
!
K1$ = " ",K1$
If CHAN = 5 Let K1$ = SPROD$ + "            "
Search #CHAN,2,1;K1$,R[5],E 
If Not(E) Goto GOT1PROD
!
PROD_LOOP: Rem "thru for next
Search #CHAN,3,1;K1$,R[5],E 
If E = 2 Goto OUTEND
GOT1PROD: Rem "
If CHAN = 5 And K1$[1,12] > EPROD$ Goto OUTEND
NUMRECS = NUMRECS + 1
!If Not(Fra(NUMRECS / 250)) And (Not(SCRN) Or (SCRN And CPAG = 0))
!  Print @40,22;'CL';NUMRECS;K1$
!End If
Gosub GET_PROD_INFO
For X = 0 To 14 \ REP_[X] = 0 \ Next X
If CHAN = 5 ! "sorted was checked already!
  Gosub CHK_LOCRANGE
  If Not(LOCRNG) Goto PROD_LOOP
End If
!
Call "mxreplen.dl4",PCODE$,WH,0,FCHAN[],LOC$,REP_[],ERR_MSG$,e$,rstr$
!
If REP_[0] <= 0 Or REP_[9] <= 0 ! " No Calc Possible or no replen/no 'overflow'
  If Not(ZERXCL) ! "include zero items
    Gosub PRINT_HEADER
    Gosub PRNT_NOCALC
    If PLDTL Gosub PRINT_RLOCTNS
  End If 
Else ! "okay
  Gosub PRINT_HEADER
  Gosub PRINT_RESULTS
  If PLDTL Gosub PRINT_RLOCTNS
End If
Goto PROD_LOOP
!
NOSRASL: Rem "need rasl to run this
e$="YOU ARE NOT RUNNING RASL!" \ error 10000
Goto OUTEND
!
! - RPTDONE: Rem "done with this range
!If SCRN ! "pause that refreshes
!  Print @0,23;'CL';"PRESS <CR> TO EXIT  ";
!  Input Len 16384 + 1;""X$
!End If 
! - Goto OUTEND
!
!OUTEND: Rem
!Gosub CLOSE_FILES
!Chain "MX000C"
!Chain "MX000"
!End 
!
OPEN_FILES: Rem
! - Ropen #11,"CNTRL/USERPORT"
! - Ropen #12,"CNTRL/PRTDFLT"
For I = 2 To 12
  Read J1
  If J1 <> -1
    Read #1,88,Abs(J1);J4$;
    If J1 > 0 Open #I,J4$
    If J1 < 0 Ropen #I,J4$
    If I < 7 Let FCHAN[I - 2] = I
  End If 
Next I
Data "-1744","-2736","-2528","-1792","-208","-1728","-1","-1","-1","-1","-1"
!C2 = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
C2 = intCO
If MHFLAG ! "using Material Handling
  J4$ = "2/MHRTYPE" + Str$(C2)
  Ropen #8,J4$
  FCHAN[5] = 8
  If JQ_FLAG
    J4$ = "2/MHJOBQ" + Str$(C2)
    Ropen #10,J4$
    FCHAN[6] = 10
  Else 
    FCHAN[6] = -1
  End If 
Else 
  FCHAN[5] = -1;FCHAN[6] = -1
End If 
Return 
!
! - CLOSE_FILES: Rem
! - If Err 0 Rem
! - For I = 2 To 12
! -   Try close #I else rem
! - Next I
! - If Err 0 Gosub ERR_TRAP
! - Return 
!
!DISPLAY_SCREEN_PROMPTS: Rem
!Call Time(SYSDATE$)
!TITLE$ = "CAPACITY REPLENISHMENT REQUIREMENTS"
!Print 'CS';@0,0;"-MX347-"
!Print @40 - (Len(COMP$) / 2),0;'BR';COMP$;'ER';
!Print @58,0;SYSDATE$
!Print @0,1;"----------------------------------------";
!Print "----------------------------------------";
!Print @0,3;"----------------------------------------";
!Print "----------------------------------------";
!Print @40 - (Len(TITLE$) / 2),2;TITLE$;
!Print @3,5;"1> WAREHOUSE...."
!Print @3,6;"2> PRODUCT......"
!Print @3,7;"3> LOCATIONS...."
!Print @3,9;"4> DETAIL PRINT "
!Print @3,10;"5> SORT BY LOCTN"
!Print @3,11;"6> Exclude Zeros"
!Print 'ED';
!Print Using "##";@20,5;WH;
!Print @20,6;SPROD$;@35,6;EPROD$;
!Print @20,7;SLOC$;@35,7;ELOC$;
!X$ = "N" \ If PLDTL Let X$ = "Y"
!Print @20,9;X$[1,1];
!X$ = "N" \ If LOCSORT Let X$ = "Y"
!Print @20,10;X$[1,1];
!X$ = "N" \ If ZERXCL Let X$ = "Y"
!Print @20,11;X$[1,1];
!Return 
!
PRINT_RESULTS: Rem
If J8
  tmp1$ = trim$(PCODE$),fdel$
  tmp1$ = tmp1$,trim$(PROD_DESC$),fdel$
  tmp$ = tmp1$
  tmp2$ = trim$(LOC$),fdel$
  tmp2$ = tmp2$,trim$(STOCKING_UM$),fdel$
  if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
	tmp2$ = tmp2$,LTrim$(REP_[14] Using "-------#.##"),fdel$
  Else
	tmp2$ = tmp2$,REP_[14] Using "-------#",fdel$
  Endif
  tmp$ = tmp$,tmp2$
  If Not(REP_[10])
    tmp3$ = REP_[11] Using "########",fdel$
  Else
    tmp3$ = "",fdel$
  End If
  if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
	tmp3$ = tmp3$,LTrim$(REP_[9] Using "-------#.##"),fdel$
	tmp3$ = tmp3$,LTrim$(REP_[8] Using "-------#.##"),fdel$
  Else
	tmp3$ = tmp3$,REP_[9] Using "-------#",fdel$
	tmp3$ = tmp3$,REP_[8] Using "-------#",fdel$
  Endif
  
  tmp3$ = tmp3$,REP_[3] Using "#####",fdel$
  If REP_[10]
    tmp3$ = tmp3$,REP_[11] Using "#####",fdel$
  Else
    tmp3$ = tmp3$,"",fdel$
  End If
  tmp3$ = tmp3$,REP_[7] Using "----#",fdel$
  tmp3$ = tmp3$,"",fdel$
  tmp3$ = tmp3$,"",fdel$
  tmp$ = tmp$,tmp3$
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  Print #0; Tab 1;PCODE$; Tab 14;PROD_DESC$;
  Print #0; Tab 45;LOC$; Tab 52;STOCKING_UM$;
  If custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
	Print #0; Using "----#.##"; Tab 57;REP_[14]; ! limit = 8 chars!
  Else
	Print #0; Using "-------#"; Tab 57;REP_[14];
  Endif
  If Not(REP_[10]) ! "capacity (in stking units)
    Print #0; Using "########"; Tab 66;REP_[11];
  End If 
  if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
	Print #0; Using "----#.##"; Tab 75;REP_[9]; ! limit = 8 chars!
	Print #0; Using "----#.##"; Tab 84;REP_[8]; ! limit = 8 chars!
  Else
	Print #0; Using "-------#"; Tab 75;REP_[9];
	Print #0; Using "-------#"; Tab 84;REP_[8];
  Endif
  
  Print #0; Using "#####"; Tab 93;REP_[3];
  If REP_[10] ! "capacity in pallets
    Print #0; Using "#####"; Tab 99;REP_[11];
  End If 
  Print #0; Using "----#"; Tab 105;REP_[7];
  Print #0; Tab 112;"__________";
  Print #0; Tab 124;"_______"
End If
CRLN = CRLN + 1
Return
!
PRINT_RLOCTNS: Rem "print all other locations
K4$ = " ",K4$;K4$[1,12] = PCODE$
K4$[13,14] = WH Using "##"
PLOT_LOOP: Rem "
Search #4,3,2;K4$,R[4],E
If E = 2 Goto PLOT_DONE
If K4$[1,12] <> PCODE$ Goto PLOT_DONE
X2 = K4$[13,14] \ If X2 <> WH Goto PLOT_DONE
CLOC$ = K4$[15,20]
If CLOC$ = LOC$ Goto PLOT_LOOP
If CLOC$[1,4] = "NONE" Goto PLOT_LOOP
Mat Read #4,R[4],82;P3;
AVAIL = P3[0] - P3[1] - P3[3]
If AVAIL = 0 Goto PLOT_LOOP
CNVTU[0] = 0;CNVTU[1] = PFU1[8];CNVTU[2] = 1
CNVTA = AVAIL \ Gosub CONVERT
BAVAIL = AMOUNT
Gosub PRINT_HEADER
Gosub PRNT_BINHOLD
Goto PLOT_LOOP
!
PLOT_DONE: Rem "
If J8 Return
Print #0;""
CRLN = CRLN + 1
Return
!
PRNT_BINHOLD: Rem "
If J8
  tmp$ = tmp1$
  tmp2$ = trim$(CLOC$),fdel$
  tmp2$ = tmp2$,trim$(STOCKING_UM$),fdel$
  if custom_customer$="ADMIRAL" if CLOC$[1,6]="STORE "
	tmp2$ = tmp2$,LTrim$(BAVAIL Using "-------#.##"),fdel$
  Else
	tmp2$ = tmp2$,BAVAIL Using "-------#",fdel$
  Endif
  tmp$ = tmp$,tmp2$
  tmp$ = tmp$,tmp3$
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  Print #0; Tab 34;"LOCATION: ";
  Print #0; Tab 45;CLOC$; Tab 52;STOCKING_UM$;
  if custom_customer$="ADMIRAL" if CLOC$[1,6]="STORE "
	Print #0; Using "----#.##"; Tab 57;BAVAIL; ! limit = 8 chars!
  Else
	Print #0; Using "-------#"; Tab 57;BAVAIL;
  Endif
  Print #0;""
  CRLN = CRLN + 1
End If
Return
!
PRNT_NOCALC: Rem "no calc
Gosub GET_PRIMSTK
If J8
  tmp1$ = trim$(PCODE$),fdel$
  tmp1$ = tmp1$,trim$(PROD_DESC$),fdel$
  tmp$ = tmp1$
  tmp2$ = trim$(LOC$),fdel$
  tmp2$ = tmp2$,trim$(STOCKING_UM$),fdel$
  if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
	tmp2$ = tmp2$,LTrim$(REP_[14] Using "-------#.##"),fdel$
  Else
	tmp2$ = tmp2$,REP_[14] Using "-------#",fdel$
  Endif
  tmp$ = tmp$,tmp2$
  If REP_[0] = 0
    If Not(REP_[10])	  
      tmp3$ = REP_[11] Using "########",fdel$
	Else
	  tmp3$ = "",fdel$
	End If
	if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
		tmp3$ = tmp3$,LTrim$(REP_[9] Using "-------#.##"),fdel$
	Else
		tmp3$ = tmp3$,REP_[9] Using "-------#",fdel$
	Endif
	tmp3$ = tmp3$,"",fdel$
    tmp3$ = tmp3$,REP_[3] Using "#####",fdel$
	If REP_[10]
      tmp3$ = tmp3$,REP_[11] Using "#####",fdel$
	Else
	  tmp3$ = tmp3$,"",fdel$
	End If
  Else
    tmp3$ = trim$(ERR_MSG$),fdel$
    tmp3$ = tmp3$,trim$(ERR_MSG$),fdel$
    tmp3$ = tmp3$,trim$(ERR_MSG$),fdel$
	tmp3$ = tmp3$,"",fdel$
	tmp3$ = tmp3$,"",fdel$
  End If
  tmp3$ = tmp3$,"",fdel$
  tmp3$ = tmp3$,"",fdel$
  tmp3$ = tmp3$,"",fdel$
  tmp$ = tmp$,tmp3$
  call addtostr(e$,rstr$,tmp$+rdel$)
Else
  Print #0; Tab 1;PCODE$; Tab 14;PROD_DESC$;
  Print #0; Tab 45;LOC$; Tab 52;STOCKING_UM$;
  if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
	Print #0; Using "----#.##"; Tab 57;REP_[14]; ! limit= 8 chars
  Else
	Print #0; Using "-------#"; Tab 57;REP_[14];
  Endif
  If REP_[0] = 0 ! "no replen needed
    If Not(REP_[10]) ! "capacity (in stking units)
      Print #0; Using "########"; Tab 66;REP_[11];
    End If 
	if custom_customer$="ADMIRAL" if Loc$[1,6]="STORE "
		Print #0; Using "----#.##"; Tab 75;REP_[9];
	Else
		Print #0; Using "-------#"; Tab 75;REP_[9];
	Endif
    Print #0; Using "#####"; Tab 93;REP_[3];
    If REP_[10] ! "capacity in pallets
      Print #0; Using "#####"; Tab 99;REP_[11];
    End If 
    Print #0;""
  Else 
    Print #0; Tab 66;ERR_MSG$
  End If
End If
CRLN = CRLN + 1
Return
!
PRINT_HEADER: Rem "header of this report
If J8 Return
!
If CRLN < MAXLN Return 
If CPAG ! "not page 0
  If SCRN ! "print to screen
    !Print @0,23;'CL';"PRESS <CR> TO CONTINUE  ";
    !Input Len 16384 + 1;""X$
    !Print 'CS';
  Else ! "print to file/printer
    Print #0;"\14\";
  End If 
End If 
CPAG = CPAG + 1
Print #0;""
Print #0; Tab 1;"DATE:"; Tab 10;DATE$; Tab (Int(64 - (Len(COMP$) / 2)));COMP$;
Print #0; Tab 120;"PAGE";CPAG
TME$ = "" \ Call Time(TME$)
Print #0;"- 347 -";TME$;
Print #0; Tab 48;"PRIMARY LOCATION REPLENISHMENT LIST ";
Print #0;"- WH";WH
Print #0;""
Print #0; Tab 45;"PRIM"; Tab 52;"STKG";
Print #0; Tab 57;"--------- STOCKING UNITS ---------";
Print #0; Tab 94;"PALL";
Print #0; Tab 99;"- PALLETS -"
Print #0;"ITEM CODE"; Tab 14;"DESCRIPTION 1";
Print #0; Tab 45;"LOCTN"; Tab 52;"U/M"; Tab 60;"AVAIL";
Print #0; Tab 66;"CAPACITY"; Tab 75;"OVERFLOW";
Print #0; Tab 86;"NEEDED"; Tab 94;"SIZE";
Print #0; Tab 99;"CAPTY"; Tab 106;"NEED";
Print #0; Tab 114;"UNITS"; Tab 124;"PALLETS"
Print #0;""
CRLN = 7
Return 
!
! - GET_WAREHOUSE: Rem
!J0$ = "3 02022005"
!J1 = WH
!J5$ = "Enter warehouse number "
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!If Not(J1) Goto GET_WAREHOUSE
!WH = J1
! - Call "CHKWRASL",WH,RASL[]
!WHCh=3 ! chan # for warehouse
!Ctlc=1 ! chan # for control file
!call ChkWhRasl(e$,intco,Ctlc,WHCh,WH,RASL[])
!If Not(RASL) ! "no rasl - this whse
!  e$="WAREHOUSE DOES NOT USE RASL!"
!  Goto GET_WAREHOUSE
!End If 
!RETVAL$[1,2] = WH Using "##"
!Return 
!
! - GET_PRODUCT: Rem
!J0$ = "2 00122006"
!J5$ = "Enter the starting product code, <CR>: first"
!J1$ = SPROD$
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!SPROD$ = J$[1,12]
!
! - GET_EPROD: Rem "ending product code
!J0$ = "2 00123506"
!J1$ = EPROD$
!J5$ = "Enter the ending product code, <CR>: last"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!If J$[1,12] < SPROD$
!  Call "errmsg","INVALID RANGE! PLEASE RE-ENTER"
!  Goto GET_EPROD
!End If 
!EPROD$ = J$[1,12]
!RETVAL$[3,14] = SPROD$[1,12];RETVAL$[15,26] = EPROD$[1,12]
!Return 
!
! - GET_LOCS: Rem "location range
!J0$ = "2 00 62007";J5$ = "Enter the starting Primary Location"
!J1$ = SLOC$
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!SLOC$ = J$[1,6]
!
! - ENT_ELOC: Rem "ending
!J0$ = "2 00 63507";J5$ = "Enter the ending Primary Location"
!J1$ = ELOC$ \ If J1$ = "" Or J1$[1,4] = "    " Let J1$ = "zzzzzz"
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!If J$[1,6] < SLOC$
!  Call "errmsg","INVALID RANGE! PLEASE RE-ENTER"
!  Goto ENT_ELOC
!End If 
!ELOC$ = J$[1,6]
!RETVAL$[27,32] = SLOC$[1,6];RETVAL$[33,38] = ELOC$[1,6]
!Return 
!
! - GET_DETAIL: Rem "print overflow detail
!J0$ = "6000012009";J5$ = "Print the Overflow Detail? Y/N"
!J1 = PLDTL
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!PLDTL = J1
!RETVAL$[39,39] = Str$(PLDTL)
!Return 
!
! - LOC_SORT: Rem "
!J0$ = "6000012010";J5$ = "Sort by Primary Location? Y/N"
!J1 = LOCSORT
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!LOCSORT = J1
!RETVAL$[40,40] = Str$(LOCSORT)
!Return 
!
! - EXCL_ZERO: Rem "print no replen needed/no calcs
!J0$ = "6000012011";J5$ = "Exclude No Replenishment needed & No Calculation Items?"
!J1 = ZERXCL
!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
!ZERXCL = J1
!RETVAL$[41,41] = Str$(ZERXCL)
!Return 
!
SORTBYLOC: Rem "
!!-!Print @0,22;'CE';"SORTING, PLEASE WAIT..."
NUMRECS = 0
K1$ = " ",K1$
K1$ = SPROD$ + "            "
Search #5,2,1;K1$,R[5],E 
If Not(E) Goto GOTAPROD
SPROD_LOOP: Rem "thru for next
Search #5,3,1;K1$,R[5],E 
If E = 2 Goto SORTDONE
GOTAPROD: Rem "
If K1$[1,12] > EPROD$ Goto SORTDONE
NUMRECS = NUMRECS + 1
!If Not(Fra(NUMRECS / 250)) Print @40,22;'CL';NUMRECS;K1$
PCODE$ = K1$[1,12]
Gosub CHK_LOCRANGE
If Not(LOCRNG) Goto SPROD_LOOP
K9$ = " ",K9$
K9$[1,6] = PLOC$
K9$[7] = PCODE$
Search #9,4,1;K9$,R[5],E 
If E Let e$ = "syserrorfile 347 sortfile mode (m)=4 keyno (k)=1 r=",R[5]," e=",e," keyval (k$)=",K9$ \error 10000
Goto SPROD_LOOP
SORTDONE: Rem "done
NUMRECS = 0
Return
!
GET_PROD_INFO: Rem
PCODE$ = K1$
If LOCSORT Let PCODE$ = K1$[7]
PROD_KEY$ = PCODE$
Read #5,R[5],8;PROD_DESC$;
Mat Read #5,R[5],156;B;
Mat Read #5,R[5],256;A;
Mat Read #5,R[5],460;A1;
Mat Read #5,R[5],512;PFU1;
Mat Read #5,R[5],554;PFU2;
STOCKING_UM$ = "ERR "
If PFU1[8] = -1 Let STOCKING_UM$ = "CWT "
If PFU1[8] = -2 Let STOCKING_UM$ = "LOT "
If PFU1[8] = -3 Let STOCKING_UM$ = "LB  "
If PFU1[8] > 0 Read #7,PFU1[8],10;STOCKING_UM$;
Return 
!
CHK_LOCRANGE: Rem "see if primary in range
K6$ = " ",K6$;K6$[1,12] = PCODE$
K6$[13,14] = WH Using "##"
PLOC$ = " ",PLOC$;LOCRNG = 0
PLOC_LOOP: Rem "loop it
Search #6,3,1;K6$,R[6],E \ If E = 2 Goto PLOC_DONE
!If E Gosub ERR_SEARCH
If K6$[1,12] <> PCODE$ Goto PLOC_DONE
X2 = K6$[13,14] \ If X2 <> WH Goto PLOC_DONE
PLOC$ = K6$[15,20]
If PLOC$ < SLOC$ Or PLOC$ > ELOC$ Goto PLOC_DONE
LOCRNG = 1
PLOC_DONE: Rem "done
Return
!
GET_PRIMSTK: Rem "available in Primary - not calc'd
K4$ = " ",K4$;K4$[1,12] = PCODE$
K4$[13,14] = WH Using "##"
AVAIL = 0
PLPLOT_LOOP: Rem "
Search #4,3,2;K4$,R[4],E 
If E = 2 Goto PLPLOT_DONE
If K4$[1,12] <> PCODE$ Goto PLPLOT_DONE
X2 = K4$[13,14] \ If X2 <> WH Goto PLPLOT_DONE
CLOC$ = K4$[15,20]
If CLOC$ <> LOC$ Goto PLPLOT_LOOP
Mat Read #4,R[4],82;P3;
AVAIL = AVAIL + P3[0] - P3[1] - P3[3]
Goto PLPLOT_LOOP
!
PLPLOT_DONE: Rem "done convert to stocking
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
CNVTA = AVAIL \ Gosub CONVERT
REP_[14] = AMOUNT
Return 
!
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA:
! - If Spc(4) > 1280 Goto CVTSTARTB
! - Swap 1,"MXPRCONV"
! - If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTDONE
! - 0CVTTRY: Rem "this is a remark
! - Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
! - If X1 <> Spc(6) Goto CVTTRY
! - If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
! - Goto CVTDONE
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
!
Rem {end rtn.convert.s}
!Rem {begin rtn.error.s}
!
OUTEND: Rem
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!
!Gosub CLOSE_FILES
!Chain "MX000C"
!Chain "MX000"
!End 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}
