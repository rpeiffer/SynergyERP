! >>> Program 306
!
! description CASH RECEIPTS MONTHLY JOURNAL  part 1 
!
! loadsave -w -n 100,10 -o prog/dxport/306.dl4 src/306.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 31, 2008  13:16:06
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/xrev9/mx306.src (univ2) [jcs] {56884}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem *     MX306 C/R MONTHLY JOURNAL      *  (FULL DETAIL)
Rem **************************************
Rem *   UNIVERSAL BUSINESS SYSTEM        *

! If Err 0 Gosub ERR_TRAP
! If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
try
dim 3%,currvar,currfact,currvartot,1%,currid,currpass,bcurrid
Dim 1%,cnvcu[10],3%,cnvca[10]
dim keycurr$[20],currdesc$[30]
Dim A$[48],C$[30],C1$[24],C3$[30],D$[8],G$[30],M$[12],P$[40],Q$[30]
Dim F$[16],J$[20],C2$[30],D1$[8],P9$[50],P60$[50],P61$[256]
Dim Z$[30],B$[50],J4$[50],T9$[26],X$[10],K6$[30],USR$[40]
Dim 1%,A[2],F,L1,P,P0[1023],S0,S[2],V,V1,X,SOME,U2
Dim 1%,A8,A9,E,L9,Y,Z7[63],BANK,TOTALFLAG,TOTALSDONE
Dim 3%,B[17],T4[6],T2[5],T3[1],T6[1],T8[9],T9[9]
Dim 3%,D9,T,T1,G2,C10[5],UIDREC[1]
Dim 2%,D[8],J,B6,N,X2[1],L,R[6]
Dim 2%,X1,I2,I3,CUST[1],S1[8]
Dim 3%,V6[6]
Dim H$[50],DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo ! E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Close #1 ! getsession open cntrl# as READONLY
F$="cntrl/cntrl"+Str$(COID)
Open #1,f$
Mat Read #1,19,50;P9$;
eflg=0
If P9$[49,49] = "Y"  ! ELECTRONIC LOCKBOX
	Read #1,20,20;P0;
	If (P0) 
		Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Electronic Cash Receipts In Process. Try Accept Later."
		! Print @0,21;'CL RB';"LOCKBOX INFORMATION IS IN PROCESS....";
		! Signal 3,30 \ Goto L_9010
	ENDIF
ENDIF
For X = 2 To 6
  Read J
  If J = -1 Goto L_250
  Mat Read #1,88,J;A$;
  Open #X,A$
L_250: Next X
Data "1536","1456","1440","1488","1808"
! Print 'CS'; Tab 0;"-MX306-"; Tab 25;"C/R MONTHLY JOURNAL"
R9 = Chf(4) \ Dim 3%,M9[R9]
R9 = Chf(5) \ Dim 3%,O9[R9]
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
If P60$[6,6] = "Y" ! processed by bank
  Gosub L_8300
  !  if eflg goto L_9010: ! ! Goto L_9010
Else 
  Gosub L_8000
  ! if eflg Goto L_9010
End If 
! L_380: If Err 0 Gosub ERR_ESCAPE

Mat Read #1,0,120;U2; \ Mat Read #1,52,0;S1; \ If S1[8] <> U2 Goto L_390
If P9$[17,17] = "Y" Goto L_390
Eflg=eflg+1;Message$=Message$+STR$(EFLG)+"- Cash Receipts Has ALready Been Accepted for the Month. "

!Print 'CS'; Tab 0;"-MX306-"; Tab 25;"CASH RECEIPTS MONTHLY JOURNAL";
!Print @0,22;'CL RB';"CASH RECEIPTS HAS ALREADY BEEN ACCEPTED FOR THE MONTH!!"
!L_385: Print @0,23;'CL';"Do you wish to re-open for entries (YES/N  E: end) "; \ Input ""J$
!If J$ = "E" Goto OUTEND
!If J$ = "N" Goto L_390
!If J$ = "YES" Read #1,52,32;S1[8] \ S1[8] = 0 \ Write #1,52,32;S1[8]; \ Goto L_390
!Goto L_385
!L_390: Print 'CS CR';"ENTER REPORT OPTION  D: FOR DETAIL,  S: FOR SUMMARY, OR  T: FOR DAILY TOTALS ";
!Input ""F$
!If F$ = "E" Goto OUTEND
!If F$ = "S" Chain "MX306A"
!If F$ = "T" Chain "MX306B"
!If F$ <> "D" Goto L_390
!L_430: Print @0,6;'CE';"PRINT IN BANK / CUSTOMER NUMBER ORDER? (Y/N)  ";
!Input ""F$ \ If F$ = "E" Goto L_9008
!SORT = 0 \ If F$ = "Y" Let SORT = 9 \ Goto L_470
!If F$ <> "N" Goto L_430
! 
L_390: ! start the process here
if eflg goto L_9010: !
LET F$="N" 
Call DXGet("M_CUSTORD",tmp$) ! bank - customer order 
if tmp$<>"" let f$="Y"
!LET F$="N"
!If UCase$(Trim$(tmp$))="1" let f$="Y"
SORT = 0 \ If F$ = "Y" Let SORT = 9 
!If F$ <> "N" Goto L_430
L_470: Rem.
Read #1,0,100;D$;
Read #1,3;P$[1,30];
If SORT Gosub L_6000
Gosub L_7000
M$[1,12] = "-----,--#.##"
For Y = 1 To Chf(3) - 1
  Mat Read #3,Y;C$;
  T = 0
  T1 = 0
  Mat Read #3,Y,48;B;
  For X = 0 To 11
  IF X<>10
	T = T + B[X]
  ENDIF
  Next X
  X2[1] = 0
  T = T + ( - B[13])
  T = T + B[14] + B[15] + B[16]
  T1=T1+B[10] ! ADD THE DEPOSIT TO CREDIT
  T1 = T1 + B[17]
  T1 = T1 + B[12]
  Gosub L_1900
Next Y
TOTALSDONE = 1
! If L9 = 22 Gosub L_5800
Goto OUTEND
L_1900: Rem      PRINT HEADING.
For X = 0 To 6 \ V6[X] = 0 \ Next X
A9 = 0 \ X2[1] = 0
TOTALSDONE = 0
B$ = " ",B$;CUST[0] = 0;CUST[1] = 0
B$ = Y Using "##"
CHAN = 2 \ If SORT Let CHAN = 9
L_2000: Search #CHAN,3,1;B$,L,E
If E Goto L_4500
A8 = B$[1,2]
If A8 <> Y Goto L_4500
If Not(A9) Gosub L_5800
If A8 <> A9 If A9 Goto L_4500
If A8 <> A9 If L1 = 8 Gosub L_3500
A9 = B$[1,2] \ X2[1] = 1
Mat Read #2,L;S
Mat Read #2,L,6;D;
X2 = D[4] \ Gosub L_7700
Mat Read #2,L,44;T4;
Read #2,L,86;C2$[1,30],C1$[1,10];
Mat Read #2,L,126;C3$;
Mat Read #2,L,172;currid;
Mat Read #2,L,174;currfact;
Mat Read #2,L,180;CURRVAR;
If X1 = D[8] Goto L_2200
If (V6[0] + V6[1] + V6[2] + V6[3] + V6[4] + V6[5]+V6[6])
  Print #0;"******* ENTRY OUT OF BALANCE *******"
  L1 = L1 + 1
End If 
For X = 0 To 6 \ V6[X] = 0 \ Next X
X1 = D[8]
If CUST[0] = 0 If CUST[1] = 0 Let CUST[0] = D[0]
If SORT If CUST <> D[0] Gosub L_4000
CUST = D[0];CUST[1] = CUST[1] + 1
B6 = 0;B6 = D[6]
Gosub L_5390
Print #0; Using "#####";D[8];
F = 0
L_2200: If P61$[41,41] <> "Y" And F > 0 Goto L_2260
If D[4] Print #0; Tab 6;X$[1,8];
If S = 0 Let C2$ = "DELETED"
Gosub L_5010
If S <> 6 Goto L_2240
Mat Read #4,D[5];G$[1,24]; \ C2$ = G$ \ Goto L_2250
L_2240: If Not(D) Let C2$ = "J/E FOR OTHER A/R"
L_2250: Gosub L_5040
L_2260: If C1$ <> "" Goto L_2290
If T4 = 0 Goto L_2290
C1$ = T4
L_2290: On S Goto L_2320,L_2590,L_2680,L_2760,L_2820,L_2900,pay_dep,app_dep,del_dep
If Not(F) Gosub L_5360
Goto L_3060
L_2320: Rem      TYPE 1 APPLIED.
V6[0] = V6[0] - (T4[3] - T4[2]);V6[1] = V6[1] + T4[1]
V6[2] = V6[2] + T4[4];V6[3] = V6[3] + T4[6]
if p61$[136,136]="Y" and currvar<>0 
	let v6[6]=v6[6]+currvar
endif
Gosub L_5140
If Not(T4[3]) If Not(T4[2]) Goto L_3050
Print #0; Tab 75;
On S[2] Goto L_2380,L_2500,L_2400,L_2420,L_2500,L_2440,L_2470,L_2540
Goto L_2560
L_2380: Print #0;"INVOICE";
Goto L_2450
L_2400: Print #0;"RET CHK";
Goto L_2450
L_2420: Print #0; Using "########"; Tab 75;"DR ADJ"; Tab 86;T4;
Goto L_2560
L_2440: Print #0; Tab 75;"CR MEMO";
L_2450: If T4 Print #0; Using "########"; Tab 86;T4;
Goto L_2550
L_2470: Print #0; Tab 75;"UN.CR/OTH";
If T4 Print #0; Using "########"; Tab 86;T4;
Goto L_2550
L_2500: Print #0;"LATE/SVC CHG";
If T4 Print #0; Using "########"; Tab 86;T4;
Goto L_2550
L_2540: Print #0; Using "########"; Tab 75;"CR ADJ "; Tab 86;T4;
L_2550: If S[2] > 5 Goto L_2770
L_2560: If T4[1] Goto L_2570
If S[2] <> 9 Goto L_2570
Print #0; Using "########"; Tab 75;"PAYMENT"; Tab 86;T4;
Goto L_2770
L_2570: T2[3] = T2[3] + T4[3]
Goto L_2650
L_2590: Rem      TYPE 2 UNAPPLIED.
V6[0] = V6[0] - (T4[3] - T4[2])
Gosub L_5140
If S[2] = 7 Print #0; Tab 75;"UN.CR/OTH";
If S[2] = 4 Print #0; Tab 75;"DR ADJ";
If S[2] = 8 Print #0; Tab 75;"CR ADJ";
If S[2] = 9 Print #0; Tab 75;"PAYMENT";
If T4 Print #0; Using "########"; Tab 86;T4;
T2[3] = T2[3] + T4[3]
L_2650: Gosub L_5240
Goto L_3050
L_2680: Print #0; Tab 75;"CR ADJ: ";
If Not(D[6]) Let V6[0] = V6[0] - (T4[3] - T4[2])
If D[6] = 1 Print #0; Tab 75;"WR.OFF";
If D[6] = 2 Print #0; Tab 75;"BAD DB";
Print #0; Using "########"; Tab 86;T4;
Gosub L_5240
T2[3] = T2[3] + T4[3]
Goto L_3050
L_2760: Print #0; Using "########"; Tab 75;"DR. ADJ: "; Tab 86;T4;
V6[0] = V6[0] - (T4[3] - T4[2])
L_2770: T4[3] = T4[2]
Gosub L_5240
T2[3] = T2[3] - T4[2]
If T4[3] <> 0 Print #0;"DR";
Goto L_3050
L_2820: Rem      TYPE 5 NF.
V6[0] = V6[0] - (T4[3] - T4[2]) \ V6[1] = V6[1] + T4[1]
T4[3] = T4[2]
Print #0; Tab 75;"RET CHK";
If T4 Print #0; Using "########"; Tab 86;T4;
Gosub L_5240
T2[3] = T2[3] - T4[2]
Print #0;"DR";
Goto L_3050
L_2900: Rem      TYPE 6 G/L.
V6[1] = V6[1] + T4[1]
If D[6] Let V6[4] = V6[4] + T4[2] Else Let V6[4] = V6[4] + T4[2] - T4[3]
G$ = " ",G$
If Not(D[5]) Goto L_2940
Mat Read #4,D[5];G$[1,24];
L_2940: Print #0; Tab 56;C3$[1,30];
If T4 Print #0; Using "########"; Tab 86;T4;
G$ = " ",G$
Gosub L_5270
If Not(F) Let M9[D[5]] = M9[D[5]] - T4[2] + T4[3]
If Not(F) Goto L_3050
T2[4] = T2[4] + T4[2]
T2[5] = T2[5] + T4[3]
If Not(B6) Let T8[0] = T8[0] + T4[2]
If B6 = 1 Let T8[1] = T8[1] + T4[2]
If B6 = 2 Let T8[2] = T8[2] + T4[2]
goto L_3050:

pay_dep: ! deposit created - type 7
! Mat Read #4,D[5];G$[1,24];
Print #0; Tab 56;C3$[1,30];
If T4 Print #0; Using "########"; Tab 86;T4;
G$ = " ",G$
Gosub L_5270
deptot=deptot - T4[2] + T4[3]
Goto L_3050:

app_dep: ! deposit applied - type 8
Print #0; Tab 56;C3$[1,30];
If T4 Print #0; Using "########"; Tab 86;T4;
G$ = " ",G$
Gosub L_5270
deptot=deptot - T4[2] + T4[3]
V6[5] = V6[5] - (T4[3] - T4[2])
Goto L_3050

del_dep: ! deposit deleted - type 9
Print #0; Tab 56;C3$[1,30];
If T4 Print #0; Using "########"; Tab 86;T4;
G$ = " ",G$
Gosub L_5270
deptot=deptot - T4[2] + T4[3]
V6[5] = V6[5] - (T4[3] - T4[2])
Goto L_3050



L_3050: Gosub L_5360
L_3060: F = 1
If L1 < L9 Goto L_3110
Gosub L_5800
L_3110: Goto L_2000
L_3500: Mat Read #3,A8;Z$;
Print #0;"************* ";A8;" ";Z$;" **************"
L1 = L1 + 1
Return 
L_4000: Rem CUST SORT SUBTTL
If Not(SORT) Goto L_4070
If CUST[1] <= 1 Goto L_4070
Gosub L_5390 \ If L1 > L9 Gosub L_5800
Print #0;"** SUBTOTAL **";
If CUST Print #0; Using "######"; Tab 15;CUST;
If Not(CUST) Print #0; Tab 15;"JOURNAL ENTRIES";
If T2[0] Print #0; Using "#####,###.##"; Tab 40;T2[0];
If T2[0] < 0 Print #0;"CR";
Gosub L_5390
Print #0;"" \ L1 = L1 + 1
L_4070: For I = 0 To 5
  T2[I] = 0
Next I
CUST[1] = 0;CUST = 0
Return 
L_4500: Rem PRINT MTD TOTALS FROM FILE
If Not(X2[1]) Return 
If SORT Gosub L_4000
TOTALFLAG = 1
Gosub L_5800
Print #0;"BANK DEBIT..............";
Print #0; Using "##,###,###.##"; Tab 45;B[0];
If B <> Abs(B) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"CASH DISCOUNT...........";
Print #0; Using "##,###,###.##"; Tab 45;B[1];
If B[1] <> Abs(B[1]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
For X = 1 To (Chf(5) - 1)
  If Not(O9[X]) Goto L_4595
  If L1 > L9 Gosub L_5800
  Mat Read #5,X;C1$;
  Print #0;C1$[1,21];
  Print #0; Using "##,###,###.##"; Tab 45;O9[X];
  If O9[X] <> Abs(O9[X]) Print #0;"CR";
  Print #0;"" \ L1 = L1 + 1
L_4595: Next X
If L1 > L9 Gosub L_5800
Print #0;"FREIGHT ALLOWANCES......";
Print #0; Using "##,###,###.##"; Tab 45;B[11];
If B[11] <> Abs(B[11]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1
If L1 > L9 Gosub L_5800
Print #0;"A/R CREDIT..............";
Print #0; Using "##,###,###.##"; Tab 60;B[12];
If B[12] <> Abs(B[12]) Print #0;"DR";
Print #0;"" \ L1 = L1 + 1
if deptot<>0 or p61$[94,94]="Y"
	L1 = L1 + 1
	If L1 > L9 Gosub L_5800
	Print #0;"DEPOSITS................";
	Print #0; Using "##,###,###.##"; Tab 60;Deptot;
	If Deptot <> Abs(Deptot) Print #0;"DR";
	Print #0;""
endif
IF currvartot<>0 and p61$[136,136]="Y" and currpass=0
	L1 = L1 + 1
	If L1 > L9 Gosub L_5800
	Print #0;"CURRENCY VARIANCE......";
	Print #0; Using "##,###,###.##"; Tab 60;CURRVARTOT;
	If currvartot <> Abs(currvartot) Print #0;"DR"
	T1=T1+CURRVARTOT
	Print #0;""
endif
Print #0;"OTHER REC. CREDIT......." \ L1 = L1 + 1
For X = 1 To (Chf(4) - 1)
  If Not(M9[X]) Goto L_4672
  If L1 > L9 Gosub L_5800
  Mat Read #4,X;C1$;
  Print #0;C1$[1,21];
  Print #0; Using "##,###,###.##"; Tab 60;M9[X];
  If M9[X] <> Abs(M9[X]) Print #0;"DR";
  Print #0;"" \ L1 = L1 + 1
L_4672: Next X
Print #0;"........................" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"TOTAL DEBIT ADJUSTMENTS.";
Print #0; Using "##,###,###.##"; Tab 45;B[13];
If B[13] <> Abs(B[13]) Print #0;"DR";
If B[13] If B[13] = Abs(B[13]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"CREDIT ADJUSTMENTS.....";
Print #0; Using "##,###,###.##"; Tab 45;B[14];
If B[14] <> Abs(B[14]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"WRITE OFFS (CR.ADJ)....";
Print #0; Using "##,###,###.##"; Tab 45;B[15];
If B[15] <> Abs(B[15]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 1 \ If L1 > L9 Gosub L_5800
Print #0;"BAD DEBTS (CR.ADJ).....";
Print #0; Using "##,###,###.##"; Tab 45;B[16];
If B[16] <> Abs(B[16]) Print #0;"CR";
Print #0;"" \ L1 = L1 + 4 \ If L1 > L9 Gosub L_5800
Print #0; Tab 45;"-------------"; Tab 60;"-------------"
Print #0; Using "---,---,---.##"; Tab 44;T; Tab 59;T1
Print #0; Tab 45;"--------------"; Tab 60;"-------------"
Print #0; Using "---,---,---.##"; Tab 44;T - T1
For X = 0 To (Chf(5) - 1) \ O9[X] = 0 \ Next X
For X = 0 To (Chf(4) - 1) \ M9[X] = 0 \ Next X
LET DEPTOT=0;CURRVARTOT=0
TOTALFLAG = 0 \ TOTALSDONE = 1 \ Print #0;"\15\ - END - ";
Return 
L_5010: If D Print #0; Using "######"; Tab 15;D;
If Not(D) Print #0; Using "JE ###"; Tab 15;D[5];
Return 
L_5040: Print #0; Tab 22;C2$[1,18];
If Not(S) Return 
If P61$[41,41] = "Y" And F > 0 Return 
If T4[1] Print #0; Using "#####,###.##"; Tab 40;T4[1];
If T4[1] < 0 Print #0;"CR";
T2 = T2 + T4[1]
If S = 6 Return 
if s>5 and s<10 return
If T4[1] If S <> 5 Print #0; Tab 75;"PAYMENT";
If T4 If T4[1] If S <> 5 Print #0; Using "########"; Tab 86;T4;
Return 
L_5140: If T4[4]
  If T4[4] > 999999
    Print #0; Using "#####,###.##"; Tab 47;T4[4];
  Else 
    Print #0; Using M$[2]; Tab 48;T4[4];
  End If 
End If 
If T4[4] Print #0;"(";D[7];")";
If T4[6] Print #0; Using M$[2]; Tab 64;T4[6];
IF p61$[136,136]="Y" and currvar<>0 and currpass=0 
	PRINT #0; tab 105;"(CURRVAR)";
	PRINT #0; USING "-----,---.##";TAB 117;CURRVAR;
	LET CURRVARTOT=CURRVARTOT-CURRVAR
	if t4[2]<>0 or t4[3]<>0 
		print #0;""
		let l1=l1+1
	endif
ENDIF
T2[1] = T2[1] + T4[4]
If D[7] < 0 Let D[7] = 0
If D[7] > (Chf(5) - 1) Let D[7] = 0
O9[D[7]] = O9[D[7]] + T4[4]
T2[2] = T2[2] + T4[6]
Return 
L_5240: If T4[3] Print #0; Using M$; Tab 95;T4[3];
Return 
L_5270: Rem
If Not(F) Print #0; Tab 105;
If F Print #0; Tab 117;
If F If T4[3] Print #0;"   ";
If T4[2] Print #0; Using M$[2];T4[2];
If T4[3] Print #0; Using M$[2];T4[3];
If Not(F) If T4[2] Print #0;"DR";
Return 
L_5360: Print #0;" "
L1 = L1 + 1
Goto L_5405
L_5390: Print #0;"\15\";
L1 = L1 + 1
L_5405: If L1 > L9 Gosub L_5800
Return 
L_5800: Rem      PRINT HEADING.
If V = 0 Goto L_5830
!If L9 <> 22 Goto L_5825
!If TOTALSDONE Input "\15\PRESS <CR> TO EXIT "A$ \ Return 
!Input "\15\PRESS <CR> TO CONTINUE "A$
!Print 'CS'
If TOTALSDONE Return 
L_5825: If V Print #0;"\14\";
L_5830: Print #0;"\15\\15\"
V = V + 1
Print #0;"-306-";
If P9$[17,17] <> "Y" Print #0;" R ";
Print #0; Tab 8;"DATE: ";D$;
Print #0; Tab 51;P$; Tab 115;"  PAGE ";V;
Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 5;T9$;
If TOTALFLAG Gosub PRINT_TOTALS \ Goto L_5850
Print #0; Tab 42;"C A S H  R E C E I P T S  M O N T H L Y  J O U R N A L"
Print #0;"\15\";
Print #0; Tab 6;"DEPOSIT"; Tab 57;"CASH     FREIGHT";
Print #0; Tab 108;"    OTHER";
Print #0; Tab 119;"---ADJ---"
Print #0;"ENTRY"; Tab 8;"DATE"; Tab 15;"CUST # NAME";
Print #0; Tab 42;"BANK DEBIT   DISC&OTH  ALLOWANCE";
Print #0; Tab 78;"REFERENCE";
Print #0; Tab 97;"A/R CREDIT  REC. CREDIT  DR  CR"
Print #0;"\15\";
L_5850: L1 = 8
Return 
PRINT_TOTALS: Rem Totals headings
Print #0; Tab 42;"C A S H  R E C E I P T S  T O T A L S"
Print #0;"\15\";
Print #0;"\15\********** TOTALS: ************   ";A9;" ";C$
Print #0;
Return 
L_6000: Rem SORT IN BANK/CUSTOMER/DETAIL ORDER
J4$ = " ",J4$
! \ Print @0,23;'CL';"SORTING, PLEASE WAIT. . ."; !\ Signal 3,0
L_6010: Search #9,3,1;J4$,R1,E
If E Goto L_6050
Search #9,5,1;J4$,R1,E \ If E Gosub ERR_SEARCH
Goto L_6010
L_6050: Rem
B$ = " ",B$
L_6060: Search #2,3,1;B$,R1,E \ If E = 2 Goto L_6100
If E Gosub ERR_SEARCH
DTLNO = B$[8,10]
If P61$[41,41] <> "Y" Or DTLNO <= 1 ! "posting in 1st trans only
  Mat Read #2,R1,6;D;
End If 
J4$ = " ",J4$ \ J4$[1,2] = B$[1,2]
J4$[3] = D[0] Using "######"
J4$[9] = B$[3]
Search #9,4,1;J4$,R1,E \ If E Gosub ERR_SEARCH
Goto L_6060
L_6100: Rem DONE
! Print @0,23;'CL';
Return 
L_7000: Rem CHECK PRINTER TYPE
F = 0
L9 = 55
!If Err 0 Let F = Spc(8)
!N = Chf(0)
!If Err 0 Gosub ERR_ESCAPE
!L9 = 55
!If F Let L9 = 22
! F = 0
!Print @0,21;'CE';"PRINTING, PLEASE WAIT . . . " \ Signal 3,0
!If L9 = 22 Print 'CS'
!Signal 3,0
Return 

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8000: Rem TEST PROCESS STATUS
Mat Read #1,120;P0;
If P0[301] Let S0 = 1 \ Goto L_8560
If P0[302] Let S0 = 2 \ Goto L_8560
If P0[303] Let S0 = 1 \ Goto L_8560
If P0[304] Let S0 = 3 \ Goto L_8560
If P0[305] Let S0 = 5 \ Goto L_8560
If P0[306] Let S0 = 3 \ Goto L_8560
If P0[311] Let S0 = 5 \ Goto L_8560
If P0[320] Let S0 = 5 \ Goto L_8560
If P0[227] Let S0 = 5 \ Goto L_8560
Read #1,20,34;I2;
Read #1,20,38;I3;
Read #1,20,8;P0[0];
If Not(P0[0]) If I2 <> I3 Goto L_8700
If P0[0] Let S0 = P0 \ Goto L_8560
L_8090: S0 = P0[0] \ If S0 > 5999 Goto L_8200
L_8200: I = 306 \ P0[0] = 0
! Call "getuidrec",UIDREC[1]
UIDRec[1] = GetUIDRec(e$,IntCo,Userid$)
P0[306] = UIDREC[1]
Mat Write #1,120;P0;
P0[0] = 2 \ Write #1,20,8;P0[0];
Return 
L_8300: Read #1,20,8;S0;
If S0 Goto L_8610
SOME = 0
Mat Read #1,120;P0;
If P0[301] Let S0 = 1 \ Gosub L_8560
If P0[302] Let S0 = 2 \ Gosub L_8560
If P0[303] Let S0 = 1 \ Gosub L_8560
If P0[304] Let S0 = 3 \ Gosub L_8560
If P0[305] Let S0 = 5 \ Gosub L_8560
If P0[306] Let S0 = 3 \ Gosub L_8560
If P0[311] Let S0 = 5 \ Gosub L_8560
If P0[320] Let S0 = 5 \ Gosub L_8560
If P0[227] Let S0 = 5 \ Gosub L_8560
For BANK = 1 To Chf(3) - 1
  Mat Read #3,BANK,0;C$
  If Len(C$) = 0 Goto L_8510
  If C$[1,3] = "   " Goto L_8510
  Read #3,BANK,40;I2;
  Read #3,BANK,44;I3;
  Read #3,BANK,36;P0[0];
  If Not(P0[0]) If I2 <> I3
    SOME = 1
    Gosub L_8700
  End If 
  If P0[0] Goto L_8500
  Goto L_8510
L_8500: S0 = P0[I]
  Gosub L_8560
L_8510: Next BANK
If SOME  RETURN ! Input @0,23;'CL';"PRESS <CR> TO CONTINUE ";""F$ \ Return 
S0 = 3
Write #1,20,8;S0;
Return 
L_8560: Rem PROBLEM
SOME = 1
S0 = Int(S0)
L_8610: ! Print 'CR RB';" ";
On S0 Goto L_8640,L_8650,L_8660,L_8670,L_8680
L_8620: ! error message
eflg=eflg+1 
Message$=Message$+STR$(EFLG)
If BANK <> 0 
	Message$=Message$+" FOR BANK "+str$(BANK)
endif
Message$=Message$+" CANNOT RUN MONTHLY JOURNAL." 
!\ Signal 3,20 \ 
Goto L_8690
L_8640: ! in use by
eflg=eflg+1
Message$=Message$+Str$(eflg)+"-ENTRY RUNNING(301 OR 303)  "

If P0[301] Or P0[303]
  UIDREC = P0[301] \ If Not(UIDREC) Let UIDREC = P0[303]
  !Call "getuidinfo",UIDREC,USR$
  USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  Message$=Message$+" BY USER "+USR$[21]
End If 
Goto L_8620
L_8650: ! vefication
eflg=eflg+1
	message$=message$ + "VERF.LIST(302)"
	If P60$[6,6] <> "Y" message$=message$+ " OR 306"
	message$=message$ + " IN PROGRESS"
If P0[302] Or P0[306]
  UIDREC = P0[302] \ If Not(UIDREC) Let UIDREC = P0[306]
  !Call "getuidinfo",UIDREC,USR$
  USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  message$=message$+" BY USER "+USR$[21]
End If 
Goto L_8620
L_8660: ! journal in process
eflg=eflg+1 
message$=message$ +"JOURNAL(304"
If P60$[6,6] = "Y" message$=message$+ " OR 306"
message$=message$ + ") IN PROGRESS"
If P0[304] Or P0[306]
  UIDREC = P0[304] \ If Not(UIDREC) Let UIDREC = P0[306]
  !Call "getuidinfo",UIDREC,USR$
  USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  message$=message$+" BY USER "+USR$[21]
End If 
Goto L_8620
L_8670:  !
eflg=eflg+1
message$=message$+"JOURNAL(304) HAS BEEN RUN BUT NOT ACCEPTED"
message$=message$+ "THE JOURNAL AND ACCEPT(304 & 305) MUST BE RUN "
message$=message$+ "BEFORE THIS REPORT CAN BE RUN"
!Signal 3,30
Goto L_8620
L_8680: !
eflg=eflg+1
message$=message$+"ACCEPT(305, 311, 320 OR 227) IN PROGRESS"
If P0[305] Or P0[311] Or P0[320] Or P0[227]
  UIDREC = P0[305] \ If Not(UIDREC) Let UIDREC = P0[311]
  If Not(UIDREC) Let UIDREC = P0[320]
  If Not(UIDREC) Let UIDREC = P0[227]
  !Call "getuidinfo",UIDREC,USR$
  USR$ = GetUIDInfo$(e$,IntCo,UIDRec)
  message$=message$+ " BY USER "+USR$[21]
End If 
Goto L_8620
L_8690: Return 
L_8700: Rem ADDITIONAL ERROR MESSAGE
!Print 'RB'
eflg=eflg+1
message$=message$+str$(i3-i2)+"ENTRIES REMAIN IN CASH RECEIPTS..."
If BANK message$=message$+"FOR BANK "+str$(BANK)
message$=message$+"PLEASE RUN JOURNAL AND ACCEPT (304 & 305)."
!Signal 3,40
Return 
L_8800: Rem ACCEPT MONTHLY TRANSACTIONS
return! should be using gl
If S1[8] = U2 Return 
!Print @0,23;'CL';@5,23;"DO YOU WANT TO ACCEPT MONTHLY TOTALS? (YES/N) ";
!Input ""J$
!If J$ = "N" Return 
!If J$ <> "YES" Goto L_8800
!Read #1,52,32;S1[8] \ S1[8] = U2 \ Write #1,52,32;S1[8];
Return 
If Err 0 Gosub ERR_TRAP
B6 = 0 \ G2 = 0
For X = 0 To 17
  B[X] = 0
Next X
For Y = 1 To Chf(3) - 1
  Write #3,Y,40;B6;
  Write #3,Y,44;B6;
  Mat Write #3,Y,48;B;
Next Y
For Y = 1 To Chf(4) - 1
  Mat Write #4,Y,30;G2;
Next Y
For Y = 0 To (Chf(5) - 1) \ Mat Write #5,Y,30;G2; \ Next Y
B$ = " ",B$
L_8915: Search #2,3,1;B$,V1,E
If E = 2 Goto L_8955
If E Gosub ERR_SEARCH
Mat Write #2,V1;Z7;
Search #2,5,1;B$,V1,E
If E Gosub ERR_SEARCH
E = 3
Search #2,1,0;B$,V1,E
If E Gosub ERR_SEARCH
Goto L_8915
L_8955: K6$ = " ",K6$
L_8956: Search #6,3,1;K6$,R[6],E \ If E = 2 Goto L_8960
If E Gosub ERR_SEARCH
Mat Read #6,R[6],624;C10 \ C10[2] = 0 \ Mat Write #6,R[6],624;C10;
Goto L_8956
L_8960: B6 = 0
Write #1,20,34;B6;
Write #1,20,38;B6;
L_8975: S0 = 0
Write #1,20,8;S0;
Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem EXIT ROUTINE
If P9$[17,17] <> "Y" Gosub L_8800
Mat Read #1,120;P0;
P0[306] = 0
Mat Write #1,120;P0;
read #1,20,8;s0
if s0 let s0=0
Write #1,20,8;s0;
L_9008: Gosub L_8975

L_9010: ! end it all ! ! Print 'CS'
!Close 
!Chain "MX000"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section 
returnstatus=0
if message$="" let message$="Report Complete"
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
	
	!If Eflg>0 let tmp$="THERE ARE "+Str$(EFLG)+" ISSUES "
	!tmp$=tmp$+Message$
	!Message$=tmp$

Endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem

Else
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
Rem {end rtn.error.s}
