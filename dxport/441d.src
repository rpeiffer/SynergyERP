! >>> Program 441d
!
! description Customer Sales Seven Year History
!
! loadsave -w -n 100,10 -o prog/dxport/441d.dl4 src/441d.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL  8, 2005  11:47:07
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx/mx441d.src (univ2) [txc] {16146}
Rem  Copyright (c) 2005 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX441D - 7 YEAR HISTORY
Rem AUTHOR: MR. DAVE   SEP 26, 1988
Rem LAST UPDATE: jlp 08/26/97 cct106026 start ctgy up to 99
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim C1$[142]
Dim 2%,C1[12]
Dim 3%,C5[5],S3[5]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[40],ARDATE$[8]
Dim 1%,F,X1,C0[1],2%,X2,3%,J,X3,T8[20],T9[20]
Dim K1$[50],K2$[20],K3$[20],K4$[20],X$[10],T9$[26]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 3
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;CNAME$;
Mat Read #1,0,100;ARDATE$;
Data "1808","2064"
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
!!!! dx add xport reporting code
dim tmp$[300]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
if j8 ! dx xml, setup rstr$
 !<section>
 tmp$=bsdel$,"441d",fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
End if
!
!
!!!! dx add xport reporting code
call dxget("k2",k2$) !starting customer
call dxget("k3",k3$) !ending customer
call dxget("sortby",tmp$) \ if tmp$="" let c=2 else let c=9 ! sort by category
call dxget("j2",j2$) ! beg category
call dxget("j3",j3$) ! end category
!!!! dx end
!
X2 = K2$ \ K2$ = X2 Using "######"
If X2 < 0 Or X2 > 999999 let e$="Invalid starting customer, must be between 0 and 999999!" \ error 10000
!
If K3$ = "" Let K3$ = "999999"
X2 = K3$ \ K3$ = X2 Using "######"
If K3$<K2$ Or X2 > 999999 let e$="Invalid ending customer, must be between starting customer and 999999!" \ error 10000
!
X2 = J2$ 
If X2 < 0 Or X2 > 999 let e$="Invalid starting category, must be between 0 and 999!" \ error 10000
J2$ = X2 Using "###"
!
If J3$ = "" Let J3$ = "999"
X2 = J3$ \ J3$ = X2 Using "###"
If J3$ < J2$ Or X2 > 999 let e$="Invalid ending category , must be between starting category and 999!" \ error 10000
!
C0 = J2$ \ C0[1] = J3$ ! for verifying
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  
End If 

if C=2 let K1$=K2$ \ goto L_1900 ! don't sort
!
! - L_900: Rem GET RANGES
! - Print 'CS'
! - Print @0,0;"MX441D"
! - Print @30,0;"SEVEN YEAR HISTORY"
! - Print @0,15;"ENTER STARTING CUST, <CR> FOR FIRST,    E: TO EXIT : ";'CE';
! - Input ""K2$ \ If K2$ = "E" Goto OUTEND
! - X2 = K2$ \ K2$ = X2 Using "######"
! - Print @6,16;"ENDING   CUST, <CR> FOR LAST,     E: TO EXIT : ";'CL';
! - Input ""K3$ \ If K3$ = "E" Goto OUTEND
! - If K3$ = "" Let K3$ = "999999"
! - X2 = K3$ \ K3$ = X2 Using "######"
! - If K2$ <= K3$ Goto L_990
! - Print @0,15;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
! - L_990: K1$ = K2$ \ If J2 If Not(J8) Print #0;"\14\";
! - J1 = 90 \ J2 = 0
! - L_1100: Rem
! - Print @0,17;'CL';"SORT BY CUSTOMER CATEGORY? (Y/N) ";
! - Input ""J2$ \ If J2$ = "Y" Goto L_1200
! - If J2$ <> "N" Goto L_1100
! - C = 2
! - Goto L_1900
! - L_1200: Rem CTGY
! - Print @0,18;'CE';"ENTER STARTING CATEGORY, <CR> FOR FIRST,   E: TO EXIT ";
! - Input ""J2$ \ If J2$ = "E" Goto OUTEND
! - X2 = J2$ \ If X2 < 0 Goto L_1200
! - If X2 > 999 Goto L_1200
! - J2$ = X2 Using "###"
! - L_1240: Print @0,19;'CE';"ENTER ENDING CATEGORY,   <CR> FOR LAST,    E: TO EXIT ";
! - Input ""J3$ \ If J3$ = "E" Goto OUTEND
! - If J3$ = "" Let J3$ = "999"
! - X2 = J3$ \ If X2 < 0 Goto L_1240
! - If X2 > 999 Goto L_1240
! - J3$ = X2 Using "###"
! - If J2$ <= J3$ Goto L_1300
! - Print @0,18;'CE RB';"ENDING MUST BE GREATER THAN STARTING!"
! - Signal 3,30 \ Goto L_1200
L_1300: Rem
! - C = 9
J4$ = " ",J4$
! - Print @0,22;'CE';"CLEARING SORT FILE. . . ." \ Signal 3,0
L_1415: 
Search #9,3,1;J4$,V1,E
If E Goto L_1500
Search #9,5,1;J4$,V1,E
If E Let e$ = "syserrorfile 441d sortfile mode (m)=5 keyno (k)=1 r=",v1," e=",e," keyval (k$)=",j4$ \error 10000
Goto L_1415
L_1500: Rem SORT IT
! - Print @0,22;'CE';"SORTING, PLEASE WAIT. . ." \ Signal 3,0
K1$=K2$
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_1530
L_1520: Search #2,3,1;K1$,R1,E
If E Goto L_1800
L_1530: 
If K1$[1,Len(K3$)] > K3$ Goto L_1800
Mat Read #2,R1,142;C1;
If C1[9] < C0[0] Goto L_1520
If C1[9] > C0[1] Goto L_1520
J4$ = " ",J4$ \ J4$ = C1[9] Using "###"
J4$[4] = K1$
Search #9,4,1;J4$,R1,E
If E Let e$ = "syserrorfile 441d sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",j4$ \error 10000
Goto L_1520
L_1800: Rem
K1$ = " ",K1$ \ K3$ = "}",K3$
! end of sort
!
! *** process
L_1900: 
! - Print @0,22;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
!
if j8 ! dx xml headings
  if C=9
    tmp$="CATEGORY",fdel$,"CUST #",fdel$
  else
    tmp$="CUST #",fdel$
  endif
  tmp$=tmp$,"NAME",fdel$,"ST",fdel$
  tmp$=tmp$,"THIS MONTH",fdel$,"THIS YEAR",fdel$
  tmp$=tmp$,"LAST YEAR",fdel$,"2ND YR PREVIOUS",fdel$
  tmp$=tmp$,"3RD YR PREVIOUS",fdel$,"4TH YR PREVIOUS",fdel$
  tmp$=tmp$,"5TH YR PREVIOUS",fdel$,"6TH YR PREVIOUS",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K4$ = " ",K4$
! - If Err 0 Gosub ERR_ESCAPE
Search #C,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: 
Search #C,3,1;K1$,R1,E
If E Goto L_9100
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;C1$;
Mat Read #2,R1,142;C1;
Mat Read #2,R1,252;C5;
Mat Read #3,R1,472;S3;
!
If C1[9] < C0[0] or C1[9] > C0[1] Goto L_2000 ! beg / end category
!
If C = 9 
  If K4$[1,3] <> K1$[1,3] Gosub L_4500
  K4$ = K1$
endif
!
L_2150: Rem.
Gosub L_5800
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[4] = T9[4] + C5[2] \ T8[4] = T8[4] + C5[2]
T9[5] = T9[5] + C5[3] \ T8[5] = T8[5] + C5[3]
T9[6] = T9[6] + S3[0] \ T8[6] = T8[6] + S3[0]
T9[7] = T9[7] + S3[1] \ T8[7] = T8[7] + S3[1]
T9[8] = T9[8] + S3[2] \ T8[8] = T8[8] + S3[2]
T9[9] = T9[9] + S3[3] \ T8[9] = T8[9] + S3[3]
T9[10] = T9[10] + S3[4] \ T8[10] = T8[10] + S3[4]
T9[11] = T9[11] + S3[5] \ T8[11] = T8[11] + S3[5]
Return 
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
Print #0; Using "----,---,--#"; Tab 35;T9[4];
Print #0; Using "----,---,--#";T9[5];
Print #0; Using "----,---,--#";T9[6];
Print #0; Using "----,---,--#";T9[7];
Print #0; Using "----,---,--#";T9[8];
Print #0; Using "----,---,--#";T9[9];
Print #0; Using "----,---,--#";T9[10];
Print #0; Using "----,---,--#";T9[11];
Return 
!
L_4500: Rem TOTAL PRINT
if J8 return ! dx xml
!
If K4$[1,3] = "   " Goto L_4650
Gosub L_5800
Print #0;"\15\** ";K4$[1,3];" TOTALS **";
Print #0; Using "----,---,--#"; Tab 35;T8[4];
Print #0; Using "----,---,--#";T8[5];
Print #0; Using "----,---,--#";T8[6];
Print #0; Using "----,---,--#";T8[7];
Print #0; Using "----,---,--#";T8[8];
Print #0; Using "----,---,--#";T8[9];
Print #0; Using "----,---,--#";T8[10];
Print #0; Using "----,---,--#";T8[11];
Print #0;"\15\"
J1 = J1 + 2
L_4650: For I = 0 To 20
  T8[I] = 0
Next I
Return 
!
L_5000: Rem PRINT LINE
if J8
  if C=9
    tmp$=K4$[1,3],fdel$,C1[1] using "######",fdel$
  else
    tmp$=C1[1] Using "######",fdel$
  endif
  tmp$=tmp$,C1$[31,53],fdel$
  tmp$=tmp$,C1$[136,137],fdel$
  tmp$=tmp$,C5[2] Using "----,---,--#",fdel$
  tmp$=tmp$,C5[3] Using "----,---,--#",fdel$
  tmp$=tmp$,S3[0] Using "----,---,--#",fdel$
  tmp$=tmp$,S3[1] Using "----,---,--#",fdel$
  tmp$=tmp$,S3[2] Using "----,---,--#",fdel$
  tmp$=tmp$,S3[3] Using "----,---,--#",fdel$
  tmp$=tmp$,S3[4] Using "----,---,--#",fdel$
  tmp$=tmp$,S3[5] Using "----,---,--#",fdel$  
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
Print #0; Using "######"; Tab 2;C1[1];
Print #0; Tab 9;C1$[31,53];
Print #0; Tab 33;C1$[136,137];
Print #0; Using "----,---,--#"; Tab 35;C5[2];
Print #0; Using "----,---,--#";C5[3];
Print #0; Using "----,---,--#";S3[0];
Print #0; Using "----,---,--#";S3[1];
Print #0; Using "----,---,--#";S3[2];
Print #0; Using "----,---,--#";S3[3];
Print #0; Using "----,---,--#";S3[4];
Print #0; Using "----,---,--#";S3[5];
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 441D - ";T9$;
Print #0; Tab 54;"CUSTOMER HISTORY REPORT"
Print #0;"\15\"
Print #0; Tab 2;"CUST #";
Print #0; Tab 10;"NAME";
Print #0; Tab 36;"ST";
Print #0; Tab 42;"THIS";
Print #0; Tab 56;"THIS";
Print #0; Tab 67;"LAST";
Print #0; Tab 76;"2ND YR";
Print #0; Tab 87;"3RD YR";
Print #0; Tab 98;"4TH YR";
Print #0; Tab 109;"5TH YR";
Print #0; Tab 120;"6TH YR";
Print #0;" "
Print #0; Tab 41;"MONTH";
Print #0; Tab 56;"YEAR";
Print #0; Tab 67;"YEAR";
Print #0; Tab 75;"PREVIOUS";
Print #0; Tab 86;"PREVIOUS";
Print #0; Tab 97;"PREVIOUS";
Print #0; Tab 108;"PREVIOUS";
Print #0; Tab 119;"PREVIOUS"
Print #0;"\15\";
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT ROUTINE
! dx close
if j8 !dx xml
 call addtostr(e$,rstr$,esdel$) !end section
 !!!!!!print rstr$
  call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
!
end

! - Close #2,#3
! - Chain "MX441"
! - Stop 
!
L_9100: Rem END OF THIS RANGE
If C = 9 Gosub L_4500
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
If Not(J8) Print #0;"\14\"
Goto OUTEND
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
end
