! >>> Program 626b
!
! description G/L, Detail Income Statement with depts
!
! loadsave -w -n 100,10 -o prog/dxport/626b.dl4 src/626b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR  9, 2003  15:43:28
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/ap/gl626b.src (univ2) [mary] {09342}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String ! ,getglobals

Declare Intrinsic Sub dxopen,DXGet,dxset,dxclose,dxsave,programdump,env

! *declare common external libs & subs & functions                
External Lib "libgeneral.lib" !general routines                   
Declare External Sub suberr,mainerr,GetSession,SetOutPut,AddToStr 
Declare External Function getmsg$,expandarray 

Rem GL626B - INCOME STATEMENT WITH FINANCIAL CONTROLS-DEPARTMENTAL
Rem   UNIVERSAL BUSINESS SYSTEMS, INC.
Rem   LAST UPDATE: 06/92 MTG

If Err 0 Gosub ERR_TRAP

Dim 2%,CLIENT,1%,SSF
dim blockid$[8]
Dim A$[60],A1$[36],BC$[139],B6$[168],B7$[168],C1$[10]
Dim REPTYPE$[1],PERIOD$[4],CP1$[4],CP2$[4],PP1$[4],PP2$[4]
Dim KEYDEPT$[30]
Dim D$[30],F$[16],F9$[2]
Dim K2$[10],K3$[20],K4$[20],K5$[10],K6$[10],K7$[30],K9$[50],M$[15],N$[4],ACCT1$[7],ACCT2$[7],PTRNM$[50]
Dim MASK1$[15],PLEN1,WORK$[12]
Dim SUSP$[12],T$[10],T1$[10],T2$[10],T9$[10],V$[12],2%
Dim P$[30],MASK$[8],PTRNM$[50]
dim fye$[4]
dim 1%,archhist
Dim 1%,C0[1],D5,E,F9[1],I,I9,L,L1,P,S1[1],S9[5],X9,P9,COL[10],DEPT[10],POS_[10]
Dim 1%,COLNUM,AMTTYPE,COLCHK[1],FIRSTPR,Y,Z8
Dim 2%,B1,C1[2],C9[10],D6[1],G8[3]
Dim 2%,N,P1[2],R[9],T[10],W,X,X3,PLEN,P6[1],COMP,V1
Dim 4%,D3,N8[99,39],N9[99,39]
Dim 4%,T8[2],T0[9],T9[10,9],T4,CONSAMT
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],tmp2$[100],tmp3$[100],tmp4$[100],tmp5$[100],tmp6$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
!
dim custom_customer$[30]


 !If Err 0 Let J8 = Spc(8)
!J8 = 0 \ L9[1] = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
!L9[1] = 60 \ If J8 Let L9[1] = 24        
!L9[0] = J8
J9 = 60 \ If J8 Let J9 = 24
LET J8=0
L9[0]=99;L9[1]=60

 For ctr=1 to 99
	If ctr<>9 !  don't close sort
		Try Close #ctr Else Rem
	endif
next ctr
!Try call dxopen() Else Rem ! needed?  !call dxopen()
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Mat Read #ctlc,115,60;custom_customer$;           
custom_customer$ = UCase$(Trim$(custom_customer$))
Mat Read #CTLC,51,94;archhist;

Call dxsave(0,"/tmp/md626b.txt!")
!Open #9,"6/sortwork000061"!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"626b",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 

!If Err 0 Let L9[0] = Spc(8)
!L9[0] = 0 \ L9[1] = Chf(0)

Mat Read #1,51,18;C0; \ Z8 = C0[1]
!

!
L = 99 \ S1 = 1 \ A$ = " ",A$ \ D6 = 0 \ P6 = 0 \ OCMPAR = CMPAR
SELALL = 99
!
call dxget("U_SSF",tmp$) \ if rtrim$(tmp$) = "" Let SSF = 0 else Let SSF = 99 !!Report in spreadsheet format (Y/N)
call dxget("U_CLIENT",tmp$) \ W = tmp$
call dxget("U_PRINTDEPT",tmp6$) \ if rtrim$(tmp6$) = ""  let tmp6$ = "N"
call dxget("U_DEPT",tmp$) \ D6 = tmp$
call dxget("U_PROFITBYCENTER",tmp2$) \ if rtrim$(tmp2$) = "" let tmp2$ = "N"
call dxget("U_PROFITCENTER",tmp$) \ P6 = tmp$
call dxget("U_SCPER",tmp$) \ CPER[0] = tmp$ !!Starting Current Accounting Period (MMYY)
call dxget("U_ECPER",tmp$) \ CPER[1] = tmp$ !!Ending Current Account Period (MMYY)
call dxget("U_CMPAR",tmp$) \ if tmp$ = "" Let CMPAR = 0 else Let CMPAR = 99 !!Do you want to print comparative acct period data 
call dxget("U_SPERIOD",tmp$) \ PPER[0] = tmp$ !!Starting Prior Accounting Period (MMYY)
call dxget("U_EPERIOD",tmp$) \ PPER[1] = tmp$ !!Ending Prior Accounting Period (MMYY)
call dxget("U_REPTYPE",REPTYPE$) 
call dxget("U_PRTACCT",tmp$) \ if rtrim$(tmp$) <>"" let PRTACCT = 1 else  PRTACCT = 0
call dxget("U_SUPRZ",tmp$) \ if rtrim$(tmp$) <>"" let SUPRZ = 1 else  SUPRZ = 0
!
call dxget("DEPT1",tmp$) \ DEPT[1] = tmp$ !A=all , C=totals -1 all department, -2 totals select department
if rtrim$(tmp$)="A" let DEPT[1]=-1
if rtrim$(tmp$)="C" let DEPT[1]=-2
call dxget("DEPT2",tmp$) \ DEPT[2] = tmp$
if rtrim$(tmp$)="A" let DEPT[2]=-1
if rtrim$(tmp$)="C" let DEPT[2]=-2
call dxget("DEPT3",tmp$) \ DEPT[3] = tmp$
if rtrim$(tmp$)="A" let DEPT[3]=-1
if rtrim$(tmp$)="C" let DEPT[3]=-2
call dxget("DEPT4",tmp$) \ DEPT[4] = tmp$
if rtrim$(tmp$)="A" let DEPT[4]=-1
if rtrim$(tmp$)="C" let DEPT[4]=-2
call dxget("DEPT5",tmp$) \ DEPT[5] = tmp$
if rtrim$(tmp$)="A" let DEPT[5]=-1
if rtrim$(tmp$)="C" let DEPT[5]=-2
call dxget("DEPT6",tmp$) \ DEPT[6] = tmp$
if rtrim$(tmp$)="A" let DEPT[6]=-1
if rtrim$(tmp$)="C" let DEPT[6]=-2
call dxget("DEPT7",tmp$) \ DEPT[7] = tmp$
if rtrim$(tmp$)="A" let DEPT[7]=-1
if rtrim$(tmp$)="C" let DEPT[7]=-2
call dxget("DEPT8",tmp$) \ DEPT[8] = tmp$
if rtrim$(tmp$)="A" let DEPT[8]=-1
if rtrim$(tmp$)="C" let DEPT[8]=-2
call dxget("DEPT9",tmp$) \ DEPT[9] = tmp$
if rtrim$(tmp$)="A" let DEPT[9]=-1
if rtrim$(tmp$)="C" let DEPT[9]=-2!
!!columns
call dxget("COL1",tmp$) \ C9[1] = tmp$ \COL[1]=tmp$ !!col 1
call dxget("COL2",tmp$) \ C9[2] = tmp$ \Col[2]=tmp$  !!col 2
call dxget("COL3",tmp$) \ C9[3] = tmp$ \col[3]=tmp$ !!col 3
call dxget("COL4",tmp$) \ C9[4] = tmp$ \col[4]=tmp$ !!col 4
call dxget("COL5",tmp$) \ C9[5] = tmp$  \col[5]=tmp$!!col 5
call dxget("COL6",tmp$) \ C9[6] = tmp$ \col[6]=tmp$ !!col 6
call dxget("COL7",tmp$) \ C9[7] = tmp$\col[7]=tmp$
call dxget("COL8",tmp$) \ C9[8] = tmp$\COL[8] = tmp$
call dxget("COL9",tmp$) \ c9[9] = tmp$\COL[9] = tmp$!
!validations client
!If Not(J8)
!  PTRNM$ = Chf$(800)
 ! Search PTRNM$,"ub/sys",E !!Report in spreadsheet format
!  If E SSF = 0 
!End If 

If SSF Let M$ = "-----------#.##"
Mat Read #1,51,6;S9;
!!G8[0] = Spc(5) \ G8[1] = Int(G8[0] / 16384)
!!G8[2] = Int((G8[0] - G8[1] * 16384) / 64) \ G8[3] = G8[0] - (G8[1] * 16384 + G8[2] * 64)
!!C1$[1,1] = G8[2] Using "#" \ C1$[2,2] = G8[3] Using "#"
G8[0] = intCO
!\ G8[1] = Int(G8[0] / 16384)
!G8[2] = Int((G8[0] - G8[1] * 16384) / 64) \ G8[3] = G8[0] - (G8[1] * 16384 + G8[2] * 64)
Call dxget("u_group",tmp$)             
If RTrim$(tmp$) = "" Let tmp$ = "0"
let g8[3]=tmp$

C1$[1,1] = G8[0] Using "#" \ C1$[2,2] = G8[3] Using "#"

F$ = "1/ACF",C1$[1,2]
Call FindF(F$,B1) \ If Not(B1) let e$="File ",F$," not found!!!" \ error 10000
Ropen #2,F$
!validations client
If Not(S9) Let W = 1 
K2$ = " ",K2$ \ K2$[1,6] = W Using "######"
Search #2,2,1;K2$,R[2],E  \ If E let e$ = "Client not on file!!!" \ error 10000
Mat Read #2,R[2],0;BC$;
CLIENT = W
L9 = BC$[135,136]
If L9 > 9 Let F9$ = L9 Using "##"
If L9 < 10 Let F9$ = L9 Using "#"
N$ = W Using "####"
For I = 1 To 4
  If N$[I,I] = " " Let N$[I,I] = "."
Next I
F$ = F9$,"/GLM",C1$[1,2],N$
if archhist<>0
	Call dxget("U_ARCHHIST",tmp$)
	if rtrim$(tmp$)=""
		Call dxget("U_ARCHYR",tmp$)
		if rtrim$(tmp$)<>""
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		F$ = F9$,"/GLM",C1$[1,2],N$
		let archhist=0
	else
		Call dxget("U_ARCHYR",tmp$)
		if rtrim$(tmp$)=""
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		let tmp3=tmp$
		if tmp3<0 or tmp3>99
			let e$ = "Invalid Archive Year Entered" \ error 10000
		endif
		let fye$[1,2]=".."
		let fye$[3,4]=tmp3 using "&&"
		F$ = F9$,"/GLM",C1$[1,2],N$,fye$
	endif
else
	F$ = F9$,"/GLM",C1$[1,2],N$
endif
Call FindF(F$,B1)
If Not(B1) 
	if archHist<>0
		e$ = "Archived File ",F$," not found " \ error 10000
	else
		e$ = "File ",F$," not found " \ error 10000
	endif
ENDIF
!Call FindF(F$,B1) \ If Not(B1) e$ = "File ",F$," not found " \ error 10000
Ropen #3,F$
If S9[1] ! BUDGET INFORMATION
  F$ = F9$,"/GLB",C1$[1,2],N$
  if archhist<>0
		F$ = F9$,"/GLB",C1$[1,2],N$,fye$
  endif
  Call FindF(F$,B1)
  If Not(B1)
    S9[1] = 0
  Else 
    Ropen #4,F$
  End If 
End If 
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E 
Mat Read #3,R[3],70;D3;
D5 = (Fra(D3 / 100)) * 100
If D5 <> 14 If D5 <> 39 Let D5 = 39
Dim 4%,A3[D5],A4[D5],2%
Mat Read #3,R[3],70;A3;
If S9[1] 
  K4$ = " ",K4$
  Search #4,2,1;K4$,R[4],E 
  Mat Read #4,R[4],70;A4;
  For X = 1 To D5
    If A3[X] <> A4[X] ! goto OPENFILES
		for ctr=1 to 9! CHECK IF ANY COLUMNS goto OPENFILES
			if COL[ctr]>6 and COL[ctr]<15
				let e$="GL MASTER DATES DO NOT AGREE WITH GL BUDGET" \ error 10000
			endif
		next ctr
	endif
  Next X
End If 
!!!
OPENFILES: Rem open data files
!!X2 = Spc(5)
X2 = intCO
!COMP = Int((X2 - Int(X2 / 16384) * 16384) / 64)
!J$ = Int((X2 - Int(X2 / 16384) * 16384) / 64) Using "CNTRL#"
For X2 = 5 To 6
  Read R
  If Not(R) Goto L_890
  Read #1,88,R;J$;
  Ropen #X2,J$
L_890: Next X2
Data " 192"," 128"
If S9[3] ! profit centers
  J$ = intco Using "1/GLPCTR#" \ Ropen #7,J$
  PLEN = S9[5] - S9[4] + 1 \ If PLEN < 1 Let PLEN = 1
  MASK$[1,PLEN] = "#",MASK$[1,PLEN]
End If
!!!
If Err 0 Gosub ERR_TRAP
If S9[2] ! departments
  KEYDEPT$ = CLIENT Using "####" \ Search #6,3,1;KEYDEPT$,R[6],E
  If E = 2 Goto GETPROFCENTER
  X = KEYDEPT$[1,4]
  If X = CLIENT
    If tmp6$ = "N" let D6 = 0 \ Goto GETPROFCENTER!!
    If CLIENT = 99 And ( tmp6$ = "Y") Gosub GETDEPTGL!!!
    If D6
      K6$ = " ",K6$ \ K6$[1,4] = W Using "####" \ K6$[5,6] = D6 Using "##"
      Search #6,2,1;K6$,R[6],E \ If E let e$ = "Department not found" \ error 10000
      Mat Read #6,R[6],8;D$; 
    End if
  End If 
Else 
  D6 = 0
End If 
GETPROFCENTER:
If S9[3] ! profit centers
  If tmp2$ = "Y" 
    If P6 
      K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
      Search #7,2,1;K7$,R[7],E \ If E let e$ = "Profit center not found" \ error 10000
      Mat Read #7,R[7],8;P$;
    End if
  Else
    P6 = 0
  End if
Else 
  P6 = 0
End If 
!!!validations starting accounts period
tmp1$ = CPER[0] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ CPER[0] = PERIOD$
Gosub VERIFYPERIOD 
If errflag
  e$ = "Invalid starting accounting period"
  if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
  error 10000
End if 
C1[0] = X1 \ C1[1] = X3 \ CP1$ = CPER[0] Using "&&&&"
!!
!!!validations ending accounts period
tmp1$ = CPER[1] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ CPER[1] = PERIOD$
Gosub VERIFYPERIOD
If errflag
  e$ = "Invalid ending accounting period"
  if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
  error 10000
End if
If X3 <> C1[1]  let e$ = "Accounting Periods Must Be in Same Fiscal Year" \ error 10000
C1[2] = X1
If CPER[0] > CPER[1]let e$ = "Ending Current Accounting Period Must Be Greater Than Starting" \ error 10000
CP2$ = CPER[1] Using "&&&&"
!
if CMPAR 
  !!!!!!validations starting prior period
  tmp1$ = PPER[0] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ PPER[0] = PERIOD$
  Gosub VERIFYPERIOD
  If errflag
    e$ = "Invalid starting prior accounting period"
    if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
    error 10000
  End if
  P1[0] = X1 \ P1[1] = X3 \ PP1$ = PPER[0] Using "&&&&"
  !!!Ending Prior Account Period (YYMM)
  tmp1$ = PPER[1] Using "&&&&" \ PERIOD$ = tmp1$[3,4],tmp1$[1,2] \ PPER[1] = PERIOD$
  Gosub VERIFYPERIOD
  If errflag
    e$ = "Invalid ending prior accounting period"
    if errflag = 1 Let e$ = e$,", accounting period not found!" else Let e$ = e$,"!"
    error 10000
  End if    
  !validations starting & ending prior accounting period
  If X3 <> P1[1] Let e$ = "Accounting periods must be in same fiscal year!" \ error 10000
  P1[2] = X1 \ If PPER[0] > PPER[1] Let e$ = "Invalid ending prior accounting period!" \ error 10000
  PP2$ = PPER[1] Using "&&&&"
End if
!!!report type 
If REPTYPE$ = "S" let PRTACCT = 0
!
C9 = 0
For X = 1 To 9
  If col[X] let C9 = C9 + 1 else exit for !C9 last column
Next X
!
L = 99 \ S1 = 1 \ A$ = " ",A$ \ D6 = 0
!
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!  try call dxclose() else rem
!End If 
 If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  ! Call env(2,"NEXTBLOCK","625") !special go back to 625 page
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!
!

!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
! End If
!!Print 'CS';"-gl626b-"; Tab 23;"INCOME STATMENTS BY DEPARTMENTS";
!1W = CLIENT
!!K2$ = " ",K2$ \ K2$ = W Using "######"
!!Search #2,2,1;K2$,R[2],E
!!If E
!!  Print @0,23;'CL RB';"CLIENT NOT ON FILE!!!"; \ Signal 3,30
!!  Gosub ERR_SEARCH
!!End If 
!!Mat Read #2,R[2],0;B$;
!!Print Using "####  ";@0,1;'CL';"CLIENT #";@10,1;W;B$[11,50];
!!L1 = B$[135,136]
!!If L1 > 9 Let F9$ = L1 Using "##"
!!If L1 < 10 Let F9$ = L1 Using "#"
!!N$ = W Using "####"
!!For I = 1 To 4
!!  If N$[I,I] = " " Let N$[I,I] = "."
!!Next I
!!K3$ = " ",K3$
!!Search #3,2,1;K3$,R[3],E !!If E Gosub ERR_SEARCH
!!Mat Read #3,R[3],70;D3;
!!D5 = (Fra(D3 / 100)) * 100
!!If D5 <> 14 If D5 <> 39 Let D5 = 39
!!Dim 4%,A3[D5],A4[D5],2%
!!Mat Read #3,R[3],70;A3;
!!If S9[1] !NO BUDGET
!!  K4$ = " ",K4$
!!Search #4,2,1;K4$,R[4],E !!If E Gosub ERR_SEARCH
!!  Mat Read #4,R[4],70;A4;
!!  For X = 1 To D5
!!    If A3[X] <> A4[X]
!!      Print @0,23;'CL RB';"G/L MASTER DATES DO NOT AGREE WITH G/L BUDGET";
!!      Signal 3,40 \ Goto GETPROFCENTER
!!    End If 
!!  Next X
!!End If 
!!GETPROFCENTER: Rem get profit center
!!PLEN = S9[5] - S9[4] + 1 \ If PLEN < 1 Let PLEN = 1
!!MASK$[1,PLEN] = "#",MASK$[1,PLEN]
!!L_1000: Rem PRINT SELECTION OPTIONS
!!L = 99 \ S1 = 1 \ A$ = " ",A$ \ D6 = 0
!!Print 'CS';"-gl626b-"; Tab 23;"INCOME STATEMENTS BY DEPARTMENTS";
!!Print Using "####  ";'CL';@0,1;"CLIENT #";@10,1;W;B$[11,50];
!1P6 = 0
!!If S9[3]
!!L_1015: P6 = 0 \ Print @0,23;'CL';"PRINT BY PROFIT CENTER (Y/N) OR  E: TO END ";
!!  Input Len (16384 + 1);""J$
!!  Call String(1,J$)
!!  If J$ = "E" Goto OUTEND
!!  If J$ = "N" Goto STARTHERE
!!  If J$ <> "Y" Goto L_1015
!!L_1027: P6 = 0 \ Print @0,23;'CL';@0,2;'CL';"PROFIT CENTER "; \ Input Len (16384 + 8);""J$
!!  P6 = J$ \ If Not(P6) Goto L_1015
!!  K7$ = " ",K7$ \ K7$[1,4] = W Using "####" \ K7$[5,4 + PLEN] = P6 Using MASK$
!!  Search #7,2,1;K7$,R[7],E !!If E > 1 Gosub ERR_SEARCH
!!  If E
!!    Print @0,23;'CL RB';"PROFIT CENTER NOT FOUND"; \ Signal 3,20 \ Print @0,23;'CL';
!!    Goto L_1027
!!  Else 
!!    Mat Read #7,R[7],8;P$; \ Print @24,2;'CL';P$[1,30];
!!  End If 
!!End If 
!!STARTHERE: Rem start screen here
!!Gosub PRNTSCRN
!!SELECTALL: Rem to re-select all items
!!SELALL = 99
!!For OPT = 1 To 5
!!  On OPT Gosub GETCURRPERIOD,GETCOMPARE,GETREPTYPE,GETSUPPRESS,GETRPTCOL
!!Next OPT
!!SELALL = 0
!!SELOPT: Rem selection options
!!Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P:  print  E: end ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "P" Goto L_1425
!!If J$ = "R" Goto SELECTALL
!!OPT = J$
!!On OPT Gosub GETCURRPERIOD,GETCOMPARE,GETREPTYPE,GETSUPPRESS,GETRPTCOL
!!Goto SELOPT
L_1425: Rem GET MASK & TAB POSITIONS
B6$ = " ",B6$;B7$ = " ",B7$
B6$[1,12] = "     CURRENT"
If CPER[0] = CPER[1]
  B7$[1,12] = "       MONTH"
Else 
  B7$[1,12] = "      PERIOD"
End If 
B6$[13,24] = "     CURRENT" \ B7$[13,24] = "        YEAR"
B6$[25,36] = "       PRIOR"
If PPER[0] = PPER[1]
  B7$[25,36] = "       MONTH"
Else 
  B7$[25,26] = "      PERIOD"
End If 
B6$[37,48] = "       PRIOR" \ B7$[37,48] = "        YEAR"
If PPER[0] = PPER[1] And CPER[0] = CPER[1]
  B6$[49,60] = "MTD VARIANCE"
Else 
  B6$[49,60] = "PER VARIANCE"
End If 
B7$[49,60] = "CUR TO PRIOR"
B6$[61,72] = "YTD VARIANCE" \ B7$[61,72] = "CUR TO PRIOR"
B6$[73,84] = "      BUDGET"
If CPER[0] = CPER[1]
  B7$[73,84] = " CURRENT MTD"
Else 
  B7$[73,84] = " CURRENT PER"
End If 
B6$[85,96] = "      BUDGET" \ B7$[85,96] = " CURRENT YTD"
If CPER[0] = CPER[1]
  B6$[97,108] = "  MTD BUDGET"
Else 
  B6$[97,108] = "  PER BUDGET"
End If 
B7$[97,108] = "    VARIANCE"
B6$[109,120] = "  YTD BUDGET" \ B7$[109,120] = "    VARIANCE"
B6$[121,132] = "      BUDGET"
If PPER[0] = PPER[1]
  B7$[121,132] = "   PRIOR MTD"
Else 
  B7$[121,132] = "   PRIOR PER"
End If 
B6$[133,144] = "      BUDGET" \ B7$[133,144] = "   PRIOR YTD"
If PPER[0] = PPER[1]
  B6$[145,156] = "   PRIOR MTD"
Else 
  B6$[145,156] = "   PRIOR PER"
End If 
B7$[145,156] = "  BUDGET VAR"
B6$[157,168] = "   PRIOR YTD" \ B7$[157,168] = "  BUDGET VAR"
For X = 0 To 9 \ POS_[X] = 0 \ Next X
POS_[1] = 30 \ PLEN1 = 12
For X = 2 To 9
  If C9 <= 6 
	If X <= 6 Let POS_[X] = POS_[X - 1] + 16
  endif
  If C9 = 7
	If X <= 7 Let POS_[X] = POS_[X - 1] + 13
  endif
  If C9 > 7 Let POS_[X] = POS_[X] + 11 \ PLEN1 = 10
Next X
If Not(SSF)
  If C9 <= 6 Let M$ = "####,###,###.##"
  If C9 = 7 Let M$ = "####,###,###"
Else 
  If C9 <= 6 Let M$ = "############.##"
  If C9 = 7 Let M$ = "############"
End If 
If C9 > 7
  M$ = "##########"
  For X = 1 To 12
    If B6$[(X * 12) - 11,(X * 12) - 10] = "  "
      WORK$ = B6$[(X * 12) - 9,(X * 12)]
      WORK$[11,12] = "  "
      B6$[(X * 12) - 11,(X * 12)] = WORK$[1,12]
    End If 
    If B7$[(X * 12) - 11,(X * 12) - 10] = "  "
      WORK$ = B7$[(X * 12) - 9,(X * 12)]
      WORK$[11,12] = "   "
      B7$[(X * 12) - 11,(X * 12)] = WORK$[1,12]
    End If 
  Next X
End If 
!!Print 'CS CR';"NOW CLEARING SORT FILE........PLEASE WAIT." \ Signal 3,0
For I = 0 To 99
  For X = 0 To 39
    N9[I,X] = 0 \ N8[I,X] = 0
  Next X
Next I
K9$ = ""
if j8  !!!head XML
  tmp$ = "CLIENT NUMBER ",fdel$
  tmp$ = tmp$, "CLIENT NAME",fdel$
  If REPTYPE$ = "D"
    If PRTACCT let tmp$ = tmp$, "CODE ",fdel$
  end if
  tmp$ = tmp$, "DESCRIPTION",fdel$
   
  If C9[1]
    tmp$ = tmp$,rtrim$(B6$[((C9[1] * 12) - 11),(C9[1] * 12)])," ", rtrim$(B7$[((C9[1] * 12) - 11),(C9[1] * 12)]),fdel$
  End If
  If C9[2]
    tmp$ = tmp$,rtrim$(B6$[((C9[2] * 12) - 11),(C9[2] * 12)])," ",rtrim$(B7$[((C9[2] * 12) - 11),(C9[2] * 12)]) ,fdel$
  End If
  If C9[3]
    tmp$ = tmp$, rtrim$(B6$[((C9[3] * 12) - 11),(C9[3] * 12)])," ", rtrim$(B7$[((C9[3] * 12) - 11),(C9[3] * 12)]),fdel$
  End If
  If C9[4]
    tmp$ = tmp$, rtrim$(B6$[((C9[4] * 12) - 11),(C9[4] * 12)])," ", rtrim$(B7$[((C9[4] * 12) - 11),(C9[4] * 12)]),fdel$
  End If
  If C9[5]
    tmp$ = tmp$,rtrim$(B6$[((C9[5] * 12) - 11),(C9[5] * 12)])," ", rtrim$(B7$[((C9[5] * 12) - 11),(C9[5] * 12)]) ,fdel$
  End If
  If C9[6]
    tmp$ = tmp$,rtrim$(B6$[((C9[6] * 12) - 11),(C9[6] * 12)])," ",rtrim$(B7$[((C9[6] * 12) - 11),(C9[6] * 12)]) ,fdel$
  End If
  Call addtostr(e$,rstr$,tmp$+rdel$)
end if!!!
L_1635: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_1655
!!If E Gosub ERR_SEARCH
Search #9,5,1;K9$,R[9],E !!If E Gosub ERR_SEARCH
Goto L_1635
L_1655: !!Print 'CR';"NOW SORTING.......PLEASE WAIT." \ Signal 3,0
For X = 0 To 10 \ T[X] = 0 \ Next X
K3$ = " ",K3$
L_1675: Search #3,3,1;K3$,R[3],E \ If E = 2 Goto L_1900
!!If E Gosub ERR_SEARCH
If Not(P6) Goto L_1695
P6[1] = K3$[S9[4],S9[5]] \ If P6 <> P6[1] Goto L_1675
L_1695: Gosub L_8000
If A1$[13,13] <> "0" Goto L_1675
If A1$[14,14] = "E" Goto L_1765
If A1$[14,14] = "I" Goto L_1765
If A1$[14,14] = "O" Goto L_1765
If A1$[14,14] = "R" Goto L_1765
Goto L_1675
L_1765: D6 = A1$[8,9]
For X = 1 To C9
  If Not(COL[X]) Goto L_1815
  If DEPT[X] < 0 Goto L_1815
  If DEPT[X] <> D6 Goto L_1815
  K9$ = " ",K9$ \ K9$[1,10] = T1$[1,10] \ K9$[18,19] = X Using "##"
  K9$[11,17] = A1$[1,7] \ K9$[20,21] = A1$[8,9] \ K9$[22,22] = "3"
  R[9] = R[3]
  Search #9,4,1;K9$,R[9],E !!If E Gosub ERR_SEARCH
L_1815: Next X
For X = 1 To C9
  If DEPT[X] > -1 Goto L_1890
  If DEPT[X] = -1 Goto L_1865
  K9$ = " ",K9$ \ K9$[1,10] = T1$[1,10]
  K9$[11,17] = A1$[1,7]
  Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_1890
  !!If E Gosub ERR_SEARCH
  If K9$[11,17] <> A1$[1,7] Goto L_1890
  If K9$[1,10] <> T1$[1,10] Goto L_1890
L_1865: K9$ = " ",K9$ \ K9$[1,10] = T1$[1,10] \ K9$[18,19] = X Using "##"
  K9$[11,17] = A1$[1,7] \ K9$[20,21] = "zz" \ K9$[22,22] = "0"
  Search #9,2,1;K9$,R[9],E \ If Not(E) Goto L_1890
  !!If E > 1 Gosub ERR_SEARCH
  R[9] = 0 \ Search #9,4,1;K9$,R[9],E !!If E Gosub ERR_SEARCH
L_1890: Next X
Goto L_1675
L_1900: K5$ = ""
L_1905: Search #5,3,1;K5$,R[5],E \ If E = 2 Goto L_2000
!!If E Gosub ERR_SEARCH
Mat Read #5,R[5],60;T2$; \ If T2$[7,7] <> "I" Goto L_1905
Mat Read #5,R[5],70;T$;
F9[1] = 0 \ If REPTYPE$ <> "S" Goto L_1970
If T$[3,3] = " " Goto L_1970
K9$ = " ",K9$ \ K9$[1,10] = T$[1,10]
Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_1970
!!If E Gosub ERR_SEARCH
For X = 10 To 2 Step -1
  If K9$[1,X] = T$[1,X] Let F9[1] = 1 \ Goto L_1970
Next X
L_1970: K9$ = " ",K9$ \ K9$[1,10] = T$[1,10] \ K9$[22,22] = "5"
K9$[19,19] = F9[1] Using "#"
Search #9,4,1;K9$,R[5],E !!If E Gosub ERR_SEARCH
Goto L_1905
L_2000: !!Print 'CR';"NOW PRINTING....PLEASE WAIT." \ Signal 3,0
ACCT1$ = "" \ ACCT2$ = "" \ K9$ = ""
L_2010: Search #9,3,1;K9$,R[9],E \ If E = 2 Goto L_9100
!!If E Gosub ERR_SEARCH
COLCHK[1] = K9$[18,19] \ If COLCHK[0] If COLCHK[0] >= COLCHK[1] Gosub L_2540
ACCT2$ = K9$[11,17] \ If ACCT1$ <> "" AND ACCT1$ <> ACCT2$ Gosub L_2540
If T9$ <> "" AND T9$[1,10] <> K9$[1,10] Gosub L_4000
T = K9$[22,22] \ T9$[1,10] = K9$[1,10] \ If T = 5 Goto L_2055
ACCT1$ = ACCT2$ \ COLCHK[0] = COLCHK[1]
If T = 3 Goto L_2100
If T = 0 Goto L_8500
L_2055: R[5] = R[9] \ F9 = 99 \ F9[1] = K9$[19,19]
If Not(F9[1]) !SUMMARY PRINT
  Gosub L_8300
  Gosub L_5500
  F9 = 0
End If 
For X1 = 2 To 10
  If K9$[X1,X1] = " " Let T[X1 - 1] = R[5] \ Goto L_2099
Next X1
T[10] = R[5]
L_2099: Goto L_2010
L_2100: Rem READ G/L MASTER FILE
R[3] = R[9] \ Gosub L_8000
T8 = 0 \ COLNUM = K9$[18,19]
AMTTYPE = COL[COLNUM]
If AMTTYPE >= 7 Gosub L_8100
On AMTTYPE Gosub L_2200,L_2215,L_2245,L_2265,L_2300,L_2320,L_2350,L_2365,L_2450,L_2465
On (AMTTYPE - 10) Gosub L_2395,L_2415,L_2490,L_2510
T0[COLNUM] = T0[COLNUM] + T8
Goto L_2010
L_2200: Rem CURRENT PERIOD
T8 = 0
For X = C1[0] To C1[2]
  T8 = T8 + A3[X]
Next X
Return 
L_2215: Rem CURRENT PERIOD YTD
T8 = 0
For X = C1[1] To C1[2]
  T8 = T8 + A3[X]
Next X
Return 
L_2245: Rem PRIOR PERIOD MTD
T8 = 0
If CMPAR
  For X = P1[0] To P1[2]
    T8 = T8 + A3[X]
  Next X
End If 
Return 
L_2265: Rem PRIOR PERIOD YTD
T8 = 0
If CMPAR
  For X = P1[1] To P1[2]
    T8 = T8 + A3[X]
  Next X
End If 
Return 
L_2300: Rem VARIANCE PRIOR PERIOD TO CURRENT PERIOD
T8 = 0
If CMPAR
  For X = C1[0] To C1[2]
    T8 = T8 + A3[X]
  Next X
  For X = P1[0] To P1[2]
    T8 = T8 - A3[X]
  Next X
End If 
Return 
L_2320: Rem VARIANCE PRIOR PERIOR YTD TO CURRENT PERIOD YTD
T8 = 0
If CMPAR
  Gosub L_2215 \ T8[1] = T8
  Gosub L_2265 \ T8[2] = T8
  T8 = T8[1] - T8[2]
End If 
Return 
L_2350: Rem CURRENT PERIOD BUDGET
T8 = 0
For X = C1[0] To C1[2]
  T8 = T8 + A4[X]
Next X
Return 
L_2365: Rem CURRENT YTD BUDGET
T8 = 0
For X = C1[1] To C1[2]
  T8 = T8 + A4[X]
Next X
Return 
L_2395: Rem PRIOR PERIOD BUDGET
T8 = 0
If CMPAR
  For X = P1[0] To P1[2]
    T8 = T8 + A4[X]
  Next X
End If 
Return 
L_2415: Rem PRIOR period BUDGET YTD
T8 = 0
If CMPAR
  For X = P1[1] To P1[2]
    T8 = T8 + A4[X]
  Next X
End If 
Return 
L_2450: Rem VARIANCE BUDGET TO ACTUAL CURRENT period
T8 = 0
For X = C1[0] To C1[2]
  T8 = T8 + A4[X] - A3[X]
Next X
Return 
L_2465: Rem VARIANCE BUDGET to ACTUAL CURRENT YTD
Gosub L_2365 \ T8[1] = T8
Gosub L_2215 \ T8[2] = T8
T8 = T8[1] - T8[2]
Return 
L_2490: Rem VARIANCE BUDGET to ACTUAL PRIOR MTD
T8 = 0
If CMPAR
  For X = P1[0] To P1[2]
    T8 = T8 + A4[X] - A3[X]
  Next X
End If 
Return 
L_2510: Rem VARIANCE BUDGET to ACTUAL PRIOR YTD
If CMPAR
  Gosub L_2415 \ T8[1] = T8
  Gosub L_2265 \ T8[2] = T8
  T8 = T8[1] - T8[2]
End If 
Return 
L_2540: If Not(SUPRZ) Goto L_2600
For X = 1 To C9
  If T0[X] Goto L_2600
Next X
Return 
L_2600: Rem PRINT BALANCES
If F9[1] Goto L_2620
Gosub L_5800
Gosub L_5000
L_2620: For I9 = 1 To 10
  For X = 1 To C9
    If T[I9] Let T9[I9,X] = T9[I9,X] + T0[X]
  Next X
Next I9
ACCT1$ = "" \ COLCHK[0] = 0
For X = 1 To C9 \ T0[X] = 0 \ Next X
Return 

L_4000: Rem PRINT TOTAL SECTION FOR LEVELS
For I9 = 1 To 10
  For X = 1 To C9
    T9[I9,X] = T9[I9,X] + T0[X]
  Next X
Next I9
For I9 = 10 To 1 Step -1
  If Not(T[I9]) Goto L_4095
  If K9$[1,I9] = T9$[1,I9] Goto L_4105
  R[5] = T[I9] \ Gosub L_8300
  For X = 1 To C9
    T0[X] = T9[I9,X]
  Next X
  Gosub L_4500
  For X = 1 To C9
    T9[I9,X] = 0
    T0[X] = 0
  Next X
  T[I9] = 0
L_4095: Next I9
L_4105: COLCHK = 0 \ ACCT1$ = ""
Return 
L_4500: Rem PRINT TOTALS HERE
If Not(F9[1]) Goto L_4540
If Not(SUPRZ) Goto L_4550
For X9 = 1 To C9
  If T0[X9] Goto L_4550
Next X9
Goto L_4600
L_4540: Gosub L_5800
if not(j8)Print #0;" "
L_4550: Gosub L_5800
If F9[1] Let A$[31,60] = A$[1,30]
if not(j8)
Print #0;A$[31,60]; \ If SSF Print #0;",";
For I = 1 To C9
  MASK1$ = M$
  If (T0[I] * S1) < 0
    For V = 1 To Len(MASK1$)
      If MASK1$[V,V] = "#" Let MASK1$[V,V] = "-"
    Next V
  End If 
  Print #0; Using MASK1$; Tab (POS_[I]);(T0[I] * S1);
  If SSF Print #0;",";
Next I
Print #0;""
end if !j8
If F9[1] Goto L_4600
if not(j8) Print #0;"" 
L = L + 1
L_4600: F9[1] = 0
Return 
L_5000: Rem PRINT DETAIL LINE
if j8 let tmp$=BC$[3,8],fdel$,BC$[11,50],fdel$!!client  # , name
If REPTYPE$ <> "S" Print #0; Tab 5;
  if j8!!!
    tmp$=tmp$,A1$[15,36],fdel$
  else
   Print #0;A1$[15,36];
   If SSF Print #0;",";
  end if
For I = 1 To C9
  MASK1$ = M$
  If (T0[I] * S1) < 0
    For V = 1 To Len(MASK1$)
      If MASK1$[V,V] = "#" Let MASK1$[V,V] = "-"
    Next V
  End If
  if j8!!xml
      tmp$=tmp$,(T0[I] * S1) using mask1$,fdel$
  else 
   Print #0; Using MASK1$; Tab (POS_[I]);(T0[I] * S1);
   If SSF Print #0;",";
  end if
Next I
if j8
  Call addtostr(e$,rstr$,tmp$+rdel$)
else
 Print #0;""
end if
Return 
L_5500: Rem PRINT HEADINGS
If A$[1,5] = "     " Return 
Gosub L_5800
if not(j8) Print #0; Tab 2;A$[1,30]
if not(j8) Print #0;" " 
L = L + 1
Return 
L_5800: Rem *** HEADING ***
if j8 return
L = L + 1 \ If L < L9[1] Return 
P = P + 1 \ If P > 1 Print #0;"\14\";
If L9[0] and P > 1
	! Input "PRESS <CR> TO CONTINUE: "J$ \ Print 'CS';
endif
Print #0;"\15\";
Print #0; Tab 40;"CLIENT: ";BC$[3,8];BC$[11,50]
Print #0; Tab 50;"I N C O M E   S T A T E M E N T"; \ If SSF Print #0;",";
Print #0; Using "PAGE ###"; Tab 115;P
If P6 Print #0; Tab 2;P$[1,30]; \ If SSF Print #0;",";
If CPER[0] = CPER[1]
  Print #0; Tab 50;"FOR THE CURRENT PERIOD OF ";CP1$[3,4];"/";CP1$[1,2]
Else 
  Print #0; Tab 40;"FOR THE CURRENT PERIOD OF ";CP1$[3,4];"/";CP1$[1,2];
  Print #0;" THRU ";CP2$[3,4];"/";CP2$[1,2]
End If 
If CMPAR
  If PPER[0] = PPER[1]
    Print #0; Tab 50;"FOR THE PRIOR PERIOD OF ";PP1$[3,4];"/";PP1$[1,2]
  Else 
    Print #0; Tab 40;"FOR THE PRIOR PERIOD OF ";PP1$[3,4];"/";PP1$[1,2];
    Print #0;" THRU ";PP2$[3,4];"/";PP2$[1,2]
  End If 
End If 
Print #0;" "
If SSF Print #0;",";
For X = 1 To C9
  D$ = "  INVALID  "
  If DEPT[X] = -1 Let D$ = "  COMBINED  " \ Goto L_5890
  If DEPT[X] = -2 Let D$ = "     TOTAL  " \ Goto L_5890
  K6$ = " ",K6$ \ K6$[1,4] = W Using "####" \ K6$[5,6] = DEPT[X] Using "##"
  Search #6,2,1;K6$,R[6],E !!If E > 1 Gosub ERR_SEARCH
  If Not(E) Mat Read #6,R[6],8;D$;
L_5890: Print #0; Tab (POS_[X]);D$[1,PLEN1];
  If SSF Print #0;",";
Next X
Print #0;""
Print #0;""
If SSF Print #0;",";
For X = 1 To C9
  Print #0; Tab (POS_[X]);B6$[((COL[X] * 12) - 11),((COL[X] * 12) - (12 - PLEN1))];
  If SSF Print #0;",";
Next X
Print #0;""
If SSF Print #0;",";
For X = 1 To C9
  Print #0; Tab (POS_[X]);B7$[((COL[X] * 12) - 11),((COL[X] * 12) - (12 - PLEN1))];
  If SSF Print #0;",";
Next X
Print #0;""
Print #0;" "
L = 10
If P <= 1 Goto L_5999
If F9 = 99 Goto L_5999
If A$[1,5] = "     " Goto L_5999
Print #0; Tab 2;A$[1,30];
If P > 1 Print #0;" (CONT.)"
Print #0;" "
L = L + 2
L_5999: Return 


VERIFYPERIOD: Rem entered account period
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99" Goto PRNTBADDATE
If PERIOD$[1,2] <> PERIOD$[3,4]
  If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12" Goto PRNTBADDATE
End If 
N = Int(D3 / 100)
B1 = PERIOD$
For X = 1 To D5
  If X <> 13 and X <> 26 and X <> 39
    If A3[X] = B1 Goto PERIODFND
  End If 
Next X
errflag = 1
!!Print @0,23;'CL RB';"Accounting Period Not Found "; \ Signal 3,30
!!Print @0,23;'CL';
Return 
PERIODFND: X1 = X
If X1 < N + 2 Let X3 = 0
If X1 > N + 1 Let X3 = N + 2
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 3
Return 
!!Return 1
PRNTBADDATE: Rem  print invalid date entered
errflag = 2
!!Print @0,23;'CL RB';"Invalid Accounting Period "; \ Signal 3,15
!!Print @0,23;'CL';
Return
L_6900: Rem GET ACCT PERIODS
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E !!If E Gosub ERR_SEARCH
Mat Read #3,R[3],70;D3;
Mat Read #3,R[3],70;A3;
Return 
L_8000: Rem READ GLM
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],48;T1$;
Mat Read #3,R[3],70;A3;
Return 
L_8100: Rem READ GLB
For X = 0 To 39 \ A4[X] = 0 \ Next X
If S9[1]
  K4$ = " ",K4$ \ K4$[1,12] = A1$[1,12]
  Search #4,2,1;K4$,R[4],E !!If E > 1 Gosub ERR_SEARCH
  If Not(E)
    Mat Read #4,R[4],70;A4;
  End If 
End If 
Return 
L_8300: Rem READ PLANDIN
Mat Read #5,R[5];A$;
Mat Read #5,R[5],70;T$; \ Mat Read #5,R[5],60;T2$;
S1 = 1 \ If T2$[8,8] = "Y" Let S1 = -1
Return 
L_8500: Rem consolidate account
CONSAMT = 0
COLNUM = K9$[18,19] \ AMTTYPE = COL[COLNUM]
K3$ = " ",K3$ \ K3$[1,7] = K9$[11,17]
L_8525: Search #3,3,1;K3$,R[3],E \ If E = 2 Goto L_8600
!!If E Gosub ERR_SEARCH
If K3$[1,7] <> K9$[11,17] Goto L_8600
D6 = K3$[8,9] \ If Not(D6) Goto L_8525
If DEPT[COLNUM] = -1 Goto L_8565
For X = 1 To C9
  If DEPT[X] = D6 Goto L_8565
Next X
Goto L_8525
L_8565: Gosub L_8000
If T1$[1,10] <> K9$[1,10] Goto L_8525
If AMTTYPE >= 7 Gosub L_8100
T8 = 0
On AMTTYPE Gosub L_2200,L_2215,L_2245,L_2265,L_2300,L_2320,L_2350,L_2365,L_2395,L_2415
On (AMTTYPE - 10) Gosub L_2450,L_2465,L_2490,L_2510
CONSAMT = CONSAMT + T8
Goto L_8525
L_8600: T8 = CONSAMT
T0[COLNUM] = CONSAMT
Goto L_2010
PROBLEMCHECK: Rem CHECK FOR G/L # WITH PROBLEMS(STATS/ DIV #)
Read #1,88,16;F$;
SUSP$ = " ",SUSP$
Call FindF(F$,B1)
If B1 = 0 Goto CHECK2
Ropen #15,F$
V$ = "10"
Search #15,2,1;V$,V1,E
If E = 1 Goto CHECK2
!!If E Gosub ERR_SEARCH
Read #15,V1,150;SUSP$;
Close #15
CHECK2: FIRSTPR = 0
K3$ = " ",K3$
CHECK3: Search #3,3,1;K3$,R[3],E
If E = 2 Return 
!!If E Gosub ERR_SEARCH
Mat Read #3,R[3],0;A1$;
Mat Read #3,R[3],48;T1$;
Mat Read #3,R[3],70;A3;
If A1$[13,13] <> "0" Goto CHECK3
K5$ = " ",K5$
K5$ = T1$
If Len(K5$) < 10 Let K5$[Len(K5$) + 1,10] = "          "
K6$ = " ",K6$
K6$[1,4] = CLIENT Using "####"
J2 = K3$[8,9]
K6$[5,6] = J2 Using "##"
Search #5,2,1;K5$,R[5],E
If E = 0 Goto CHECK5
!!If E > 1 Gosub ERR_SEARCH
If SUSP$[1,9] = K3$[1,9]
  E = 0
  For J2 = 0 To 39
    If A3[J2] <> 0 Let E = E + 1
  Next J2
  If E = 0 Goto CHECK5
End If 
If FIRSTPR = 0
  if not(j8) Print #0; Tab 5;"G/L NUMBERS WITH SETUP PROBLEMS(MAY AFFECT TOTALS):"
  if not(j8) Print #0;" "
  FIRSTPR = 1
End If 
if not(j8) Print #0; Tab 5;"G/L # ";K3$[1,9];" INVALID OR MISSING STAT TYPE"
CHECK5: Search #6,2,1;K6$,R[6],E
If E = 0 Goto CHECK3
!!If E > 1 Gosub ERR_SEARCH
Rem IF D6=0 GOTO CHECK3: !NO DEPARTMENTS SELECTED- DON'T CARE
If SUSP$[1,9] = K3$[1,9]
  E = 0
  For J2 = 0 To 39
    If A3[J2] <> 0 Let E = E + 1
  Next J2
  If E = 0 Goto CHECK3
End If 
If FIRSTPR = 0
  if not(j8) Print #0; Tab 5;"G/L NUMBERS WITH SETUP PROBLEMS(MAY AFFECT TOTALS):"
  if not(j8) Print #0;" "
  FIRSTPR = 1
End If 
if not(j8) Print #0; Tab 5;"G/L # ";K3$[1,9];" DEPARTMENT NOT FOUND"
Goto CHECK3
Return 
OUTEND: Rem END
!If L9[0] Print @0,23;'CL';
!If L9[0] Input "PRESS <CR> TO CONTINUE: "J$
!Chain "MX000C"
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"625a.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
 try Call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
L_9100: Rem END OF RANGE
K9$ = " ",K9$
Gosub L_2540
Gosub L_4000
Rem GOSUB PROBLEMCHECK:
Gosub L_6900
!!If L9[0] Print @0,23;'CL';"PRESS <CR> TO CONTINUE: "; \ Input ""J$
!!Print 'CS';
!!Gosub PRNTSCRN
!!Gosub DSPSCRN
!!SELALL = 0;L9[0] = 0
!!Goto SELOPT
goto outend 
!
GETDEPTGL: Rem get g/l department file
F$ = F9$,"/GLM",C1$[1,2],N$,"D"
Call FindF(F$,B1)
If B1
  If Err 0 Rem
  Close #3
  !!If Err 0 Gosub ERR_ESCAPE
  Ropen #3,F$
End If 
If S9[1]
  F$ = F9$,"/GLB",C1$[1,2],N$,"D"
  Call FindF(F$,B1)
  If B1
    If Err 0 Rem
    Close #4
    !!If Err 0 Gosub ERR_ESCAPE
    Ropen #4,F$
  Else 
    S9[1] = 0
  End If 
End If 
Return
