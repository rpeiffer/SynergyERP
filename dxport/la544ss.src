!>>> Program 544ss
!
! description  PO Control Report
!
! loadsave -w -n 100,10 -o prog/dxport/la544ss.dl4 src/la544ss.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  15:39:48
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/la544ss.src (univ2) [mary] {56965}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian,logic
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Rem la544 PURCHASE ORDER CONTROL REPORT
Rem *   UNIVERSAL BUSINESS SYSTEM        *
Rem Last Update: MTG 4/96
Try
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[100],TMP$[1000],rstr$[2000] ! error 
dim xdate$[50]
Dim 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
Dim 1%,SPO,PCT3[2],L1[5],PL0[4],POMISC[2],NSD1[7],CHARGE,INCCHARGE,APCLOSE
Dim 1%,F,L,J0,J2,J3,J4,J5,J6,J7,J8,J9[2],H4,IMPORTFLAG,DEBITMEMOFLAG,POCTDIR
Dim 1%,CNTRLCLOSE
Dim 2%,CAT[1]
Dim 4%,J1,T9[2],VENDTOT[2],CATTOT[2]
Dim 2%,E,X2,PCT1[5],L2[2],POCNTRL,Q0[1],B[24],NSD2[4],POSTDATE,POSTDATE1
Dim 2%,J,D1,COMP,SDATE,EDATE,ARDATE,DT3[1],JDATE[5],JARDATE,APDATE
Dim J$[60],J0$[20],J1$[60],J2$[60],J4$[50],J5$[80],J7$[60],J9$[50]
Dim D2$[10],K5$[25],PCT$[12],L1$[120],PMASK$[12],M1$[4],A1$[156],NSD$[96]
Dim PMASK1$[12]
Dim K2$[50],K4$[25],X$[10],WHNAME$[30],P9$[50],A$[30],ACPER$[4],P60$[50]
Dim KEYSORT$[50],CATNAME$[24]
Dim O$[16],SORTOPT$[1],DESC$[80]
Dim 2%,WH,CUST[1],D9[5],3%,R[10]
Dim 1%,PCT7[2],PCT0
Dim 3%,PCT2[5],L3[6],PL[5],QTY,NSD3[9],A3[7],POQTY,APQTY
Dim 3%,PL4[23],PL5[9],PL6[9],T8[6,2],PCT4[1],PCT5[11],POCOST,APCOST
Dim 3%,PCT6[1],LBSUNIT,LBSFACTOR,CWT_WT_ADJ,TOTACC
Dim 3%,PCT9[4],PCT8[2]
Dim 1%,POTYPE,POGLFLAG
Dim F$[30],ARDATE$[8],EXTPOCOST
Dim CNAME$[30],3%
Dim 2%,PONUM[1],VEND[1]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
O$ = "W D I M IWIDII  "
Rem open #1,"cntrl1"
Rem build #0,+"/tmp/544ss.csv"
F = 0
L9 = 60
dIM GROUPID$[1]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[2000],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=intCO
COMP=intCO
REC_UAC = GetUIDRec(e$,IntCo,Userid$) 

for ctr=1 to 20 ! not all 99!
  if ctr<>9
	Try Close #ctr Else Rem
  Endif
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
Dim 3%
Mat Read #1,0,134;APDATE;
X$ = APDATE Using "&&&&&&";APPER = X$[1,4]
ACPER = X$[1,4]
Read #1,0,100;ARDATE$; \ Read #1,0,108;ARDATE;
Read #1,3;CNAME$;
X2 = ARDATE \ Gosub L_7820 \ X2 = 0
If X2 Let JARDATE = X2 Else Let JARDATE = Tim(6)
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,51,88;POGLFLAG;
CHARGE = 0
If P60$[19,19] = "Y" And P9$[48,48] <> "N" Let CHARGE = 99
If P60$[49,49] = "B" Or P60$[49,49] = "M" Or P60$[49,49] = "F" Let CHARGE = 99
INCCHARGE = 0 \ If CHARGE Let INCCHARGE = 1
PMASK$ = "##########"
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
PMASK1$ = PMASK$
If X
  For Y = 1 To (X - 1)
    PMASK1$[Y,Y] = "-"
  Next Y
End If 
Mat Read #1,115,0;D9;
Mat Read #1,51,76;SPO;
If Not(SPO)
	Let eflag=eflag+1
	let message$="Report Not Available"
	goto outend:
endif
  
COMP = Intco
F$ = COMP Using "2/POCTFLE#" \ Open #2,F$
For I = 3 To 10
  Read L
  If L = -1 Goto L_845
  Read #1,88,L;J$;
  Ropen #I,J$
L_845: Next I
Data "2416","2432","2400","1792","1728","2768","-1","2448"
Mat Read #1,88,1984;J$; \ Ropen #20,J$
WH = 0;D1 = 2;SDATE = 700101;EDATE = 591231
X2 = SDATE \ Gosub L_7820 \ X2 = 0
JDATE[0] = X2
X2 = EDATE \ Gosub L_7820 \ X2 = 0
JDATE[1] = X2
POTYPE = 4
DEBITMEMOFLAG = 0;IMPORTFLAG = 0
POCTDIR = 1;SORTOPT$ = "P"
VEND[0] = 0;VEND[1] = 999999
CAT[0] = 0;CAT[1] = 99
PONUM[0] = 0;PONUM[1] = 999999
L = 99
eflag=0
message$=""
L_1000: Rem SELECT RANGES
call dxget("WAREHOUSE",tmp$) \ WH = rtrim$(tmp$)
if wh<0 or wh>99
	let eflag=eflag+1
	let message$="Invalid Warehouse Entered"
endif
if wh>0 and wh<100
  R[8] = WH - 1
  Read #8,R[8],4;WHNAME$;
  if rtrim$(whname$)=""
	let eflag=eflag+1
	let message$=message$+"Warehouse "+str$(wh)+" Not on File. "
  end if
endif
if not(wh) let whname$="All Warehouses"	
call dxget("POPTION",tmp$) \ D1 = rtrim$(tmp$) !!Print Option 1=All, 2=Open Only, or 3=Closed Only
if d1<1 or d1>3
	let eflag=eflag+1
	let message$=message$+"Invalid Print Option Selected. "
endif
call dxget("SDATE",tmp$) \ SDATE = rtrim$(tmp$)
comd = 0
X$ = SDATE Using "&&&&&&"
SDATE = X$[5,6],X$[1,2],X$[3,4] \ X2 = SDATE \ If X2 <> 0 Gosub L_7820 \ comd = 1 
if comd<>0 
	Let MESSAGe$ = MESSAGE$+"Invalid starting date! "
	LET EFLAG=EFLAG+1
	X2=0
endif
JDATE[0] = X2
!
call dxget("EDATE",tmp$) \ EDATE = rtrim$(tmp$)
X$ = EDATE Using "&&&&&&"
EDATE = X$[5,6],X$[1,2],X$[3,4] \ X2 = EDATE \ If X2 <> 0 Gosub L_7820 \ comd = 1
if comd<>0
	Let MESSAGe$ = MESSAGE$+"Invalid ending date! "
	LET EFLAG=EFLAG+1
	X2=999999
endif
JDATE[1] = X2
!
If JDATE[1] < JDATE[0]
	let eflag=eflag+1
	let message$=message$+"Ending Date Must be Greater Than Starting Date. "
endif

call dxget("POTYPE",tmp$) \ POTYPE = rtrim$(tmp$) !!1:Warehouse 2:Direct 3:Indirect 4:Whse&Indir
if potype<0 or potype>4
	Let MESSAGe$ = MESSAGE$+"Invalid Purchase Order Type "
	LET EFLAG=EFLAG+1
endif	
call dxget("ACCPERIOD",tmp$) \ ACPER = rtrim$(tmp$) !!Accounting Period (MMYY)
If ACPER <> 9999
	X$ = ACPER Using "&&&&" \ X = X$[1,2]
	If X < 1 Or X > 12 
		let eflag=eflag+1
		Let message$=message$+"Invalid Accounting Period Entered"
	else
		J2$ = X$[3,4],X$[1,2]
		ACPER = J2$
		If ACPER < APPER 
			let eflag=eflag+1
			Let message$=message$+"Invalid Accounting Period Cannot be < "+str$(apper)+"."
		endif
	endif
endif
call dxget("DEBITMEMO",tmp$) \ DEBITMEMOFLAG = rtrim$(tmp$) !!Debit Memo Option 0=All 1=Debits Only 2=Exclude Debits
if debitmemoflag<0 or debitmemoflag>2
	Let MESSAGe$ = MESSAGE$+"Invalid Debit Memo Option. "
	LET EFLAG=EFLAG+1
endif	
call dxget("SORTOPTION",tmp$) \ SORTOPT$ = rtrim$(tmp$) !!Sort Option Sequence  C:control#  P:po/dm#  V:vendor po# S:cat
if sortopt$<>"C" and Sortopt$<>"P" and SortOpt$<>"V" and SortOpt$<>"S"
	let message$=message$+"Invalid Sort Option. "
	let eflag=eflag+1
endif
call dxget("SPODM",tmp$) \ PONUM[0] = rtrim$(tmp$)!!Starting PO/DM number
if ponum[0]<0 or ponum[0]>999999
	let message$=message$+"Invalid Starting PO/DM Number. "
	let eflag=eflag+1
endif
call dxget("EPODM",tmp$) \ if rtrim$(tmp$) = "" Let PONUM[1] = 999999 else Let PONUM[1] = tmp$ !!Ending PO/DM number
if ponum[1]<0 or ponum[1]>999999
	let message$=message$+"Invalid Ending PO/DM Number. "
	let eflag=eflag+1
endif
if ponum[0]>ponum[1]
	let message$=message$+"Ending PO/DM Number Must Be Greater Starting Vendor. "
	let eflag=eflag+1
endif
call dxget("SVEND",tmp$) \ VEND[0] = rtrim$(tmp$)  !!Starting Vendor number
if vend[0]<0 or vend[0]>999999
	let message$=message$+"Invalid Starting Vendor Number. "
	let eflag=eflag+1
endif
call dxget("EVEND",tmp$) \ if rtrim$(tmp$) ="" Let VEND[1] = 999999 else Let VEND[1] = tmp$  !!Ending Vendor number
if vend[1]<0 or vend[1]>999999
	let message$=message$+"Invalid Ending Vendor Number. "
	let eflag=eflag+1
endif
if vend[0]>vend[1]
	let message$=message$+"Ending Vendor Must Be Greater Starting Vendor. "
	let eflag=eflag+1
endif
call dxget("SCAT",tmp$) \ CAT[0] = rtrim$(tmp$)  !!Starting Catergory number
if CAT[0]<0 or CAT[0]>99
	let message$=message$+"Invalid Starting Category Number. "
	let eflag=eflag+1
endif
call dxget("ECAT",tmp$) \ if rtrim$(tmp$) ="" Let CAT[1] = 99 else Let CAT[1] = tmp$  !!Ending Vendor number
if CAT[1]<0 or Cat[1]>99
	let message$=message$+"Invalid Ending Category Number. "
	let eflag=eflag+1
endif
if cat[0]>cat[1]
	let message$=message$+"Ending Category Must Be Greater Starting Category. "
	let eflag=eflag+1
endif
if P60$[46,46] <> "Y"
	Let IMPORTFLAG = 0
else
	call dxget("IMPORTFLAG",tmp$) \ IMPORTFLAG = rtrim$(tmp$)  !!Import Option  0=All   1=Imports Only   2=Exclude Imports
	IF importflag<0 OR importflag>2
		Let MESSAGe$ = MESSAGE$+"Invalid Import Option "
		LET EFLAG=EFLAG+1
	endif
endif

call dxget("INCCHARGE",tmp$) \ if rtrim$(tmp$) = "" Let INCCHARGE = 0 else Let INCCHARGE = 1 !!Include Freight/Misc Charges (Y/N)
! need category check
call dxget("SUPRVAR",tmp$) \ if rtrim$(tmp$) = "" Let SUPRVAR = 0 else Let SUPRVAR=1 ! Suppress Zero Variance

if eflag<>0 goto outend:
If SORTOPT$ <> "C" 
  POCTDIR = 1 
ELSE 
  !PONUM[1] = 999999 
  !PONUM[0] = 0
  POCTDIR = 2 
END IF
!
!if SORTOPT$ <> "V" Let VEND[0] = 0 \ VEND[1] = 999999
!
!
! dxgets here
L_1900: Rem start here
If SORTOPT$ = "V" Or SORTOPT$ = "S"
  !Print @0,23;'CL';"Sorting....Please Wait.....";
  Gosub CLRSORT
  K2$ = " ",K2$
  If PONUM[0]
    K2$[1,6] = PONUM[0] Using "######"
  End If 
SRCHPOCT: Rem srchpoctfile
  Search #2,3,1;K2$,R[2],E \ If E = 2 Goto ENDSORT
  If E Gosub ERR_SEARCH
  Mat Read #2,R[2],0;PCT1;
  Mat Read #2,R[2],174;PCT7;
  !If SORTOPT$ = "V"
    If PCT1[2] < VEND[0] Goto SRCHPOCT
    If PCT1[2] > VEND[1] Goto SRCHPOCT
  !End If 
  !If SORTOPT$ = "S"
    If PCT7[2] < CAT[0] Goto SRCHPOCT
    If PCT7[2] > CAT[1] Goto SRCHPOCT
  !End If 
  If PONUM[1]
    X2 = K2$[1,6] \ If X2 > PONUM[1] Goto ENDSORT
  End If 
  KEYSORT$ = " ",KEYSORT$
  If SORTOPT$ = "V"
    KEYSORT$[1,6] = PCT1[2] Using "######"
  End If 
  If SORTOPT$ = "S"
    KEYSORT$[1,6] = PCT7[2] Using "######"
  End If 
  KEYSORT$[7] = K2$
  Search #9,4,1;KEYSORT$,R[2],E \ If E Gosub ERR_SEARCH
  Goto SRCHPOCT
ENDSORT: Rem end sort file here
  POCTDIR = 1;CH_POCT = 9
Else 
  CH_POCT = 2
  If SORTOPT$ = "C" Let POCTDIR = 2 Else Let POCTDIR = 1
End If 
! Print @0,23;'CL';" PRINTING . . . PLEASE WAIT . . .";
X$ = ACPER Using "&&&&";ACPER$ = X$[3,4],X$[1,2]
X$ = ACPER Using "&&&&";X$[5,6] = "01";POSTDATE = X$[1,6]
X$[5,6] = "31" \ POSTDATE1 = X$[1,6]
If ACPER = 9999 Let POSTDATE = 0
!If Err 0 Gosub ERR_ESCAPE
!If L9 = 22 Print 'CS'
!Signal 3,0
L = 70 \ P = 0 \ CHKVEND = 0 \ CHKCAT = 0
T9[0] = 0;T9[1] = 0;T9[2] = 0
For I = 0 To 2
  VENDTOT[I] = 0
  CATTOT[I] = 0
  For X = 0 To 6
    T8[X,I] = 0
  Next X
Next I
K2$ = " ",K2$
L_2000: Search #CH_POCT,3,POCTDIR;K2$,R[2],E \ If E = 2 Goto L_4000
If E Gosub ERR_SEARCH
Mat Read #2,R[2],0;PCT1;
Mat Read #2,R[2],174;PCT7;
!If SORTOPT$ = "V" Or SORTOPT$ = "P" Or SORTOPT$ = "S"
  If PCT1[0] < PONUM[0] Goto L_2000
  If PCT1[0] > PONUM[1] Goto L_2000
!End If 
!If SORTOPT$ = "V"
  If PCT1[2] < VEND[0] Goto L_2000
  If PCT1[2] > VEND[1] Goto L_2000
!End If 
!If SORTOPT$ = "S"
  If PCT7[2] < CAT[0] Goto L_2000
  If PCT7[2] > CAT[1] Goto L_2000
!End If 
Mat Read #2,R[2],24;PCT2;
Mat Read #2,R[2],60;PCT3;
Mat Read #2,R[2],66;PCT$;
Mat Read #2,R[2],78;PCT4;
Mat Read #2,R[2],90;PCT5;
Mat Read #2,R[2],162;PCT6;
Mat Read #2,R[2],180;PCT9;
Mat Read #2,R[2],210;PCT8;
Mat Read #2,R[2],288;PCT0;
CNTRLCLOSE = 0
If PCT3[0]
  If PCT3[0] = 97 Or PCT3[0] = 98
    CNTRLCLOSE = 0
  Else 
    CNTRLCLOSE = 99
  End If 
End If 
If PCT3[0] = 87 Or PCT3[0] = 88 Let CNTRLCLOSE = 0
If D1 = 3 If Not(PCT1[5]) Goto L_2000
If WH If WH <> PCT3[1] Goto L_2000
If D1 = 3 ! closed only
  If PCT3[0] = 0 Goto L_2000
  If PCT3[0] = 97 Or PCT3[0] = 98 Goto L_2000
  If PCT3[0] = 87 Or PCT3[0] = 88 Goto L_2000
End If 
If DEBITMEMOFLAG = 1 And PCT3[2] = 0 Goto L_2000
If DEBITMEMOFLAG = 2 And PCT3[2] <> 0 Goto L_2000
X2 = PCT1[4] \ Gosub L_7820 \ X2 = 0
JDATE[2] = X2
If JDATE[2] < JDATE[0] Goto L_2000
If JDATE[2] > JDATE[1] Goto L_2000
K4$ = " ",K4$;K4$[1,6] = PCT1[0] Using "######";K4$[7] = PCT1[1] Using "###"
Search #4,2,1;K4$,R[4],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  Goto L_2000
End If 
Gosub L_8000
Mat Read #3,L3,242;H4;
Mat Read #3,L3,248;APCLOSE;
If IMPORTFLAG
  If IMPORTFLAG = 1 If H4 < 4 Goto L_2000
  If IMPORTFLAG = 2 If H4 > 3 Goto L_2000
End If 
If POTYPE
  If POTYPE = 1 ! warehouse only
    If P60$[46,46] = "Y" If H4 = 4 Goto OKTOPRINT
    If H4 = 0 Goto OKTOPRINT
    Goto L_2000
  End If 
  If POTYPE = 2 ! directs only
    If P60$[46,46] = "Y" If H4 = 5 Goto OKTOPRINT
    If H4 = 1 Goto OKTOPRINT
    Goto L_2000
  End If 
  If POTYPE = 3 ! indirect only
    If P60$[46,46] = "Y" If H4 = 6 Goto OKTOPRINT
    If H4 = 2 Goto OKTOPRINT
    Goto L_2000
  End If 
  If POTYPE = 4 ! warehouse & directs only
    If P60$[46,46] = "Y" And (H4 = 4 Or H4 = 6) Goto OKTOPRINT
    If H4 = 0 Or H4 = 2 Goto OKTOPRINT
    Goto L_2000
  End If 
End If 
OKTOPRINT: Rem ok to print these types
If Not(APCLOSE) And INCCHARGE <> 0 And CNTRLCLOSE <> 0 ! pct3[0]<>0
  If PCT5[0] <> 0 Or PCT5[1] <> 0 Or PCT5[4] <> 0 Or PCT5[5] <> 0 Or PCT5[6] <> 0 Or PCT[7] <> 0
    PCT3[0] = 0
    CNTRLCLOSE = 0
  End If 
End If 
If INCCHARGE <> 0 And APCLOSE <> 0 And CNTRLCLOSE <> 0 And ACPER <= APPER
  If PCT5[5] <> 0 Or PCT5[6] <> 0
    PCT3[0] = 0
    CNTRLCLOSE = 0
  End If 
End If 
If CNTRLCLOSE If ACPER <= APPER
  If PCT4[0] <> 0 And PCT4[1] <> 0
    PCT3[0] = 0
    CNTRLCLOSE = 0
  End If 
End If 
If D1 = 2 And CNTRLCLOSE <> 0 Goto L_2000
If D1 = 3 And CNTRLCLOSE = 0 Goto L_2000
Gosub GETWTADJ
If L1[5] <> -2
  POCOST = (PCT2[0] * PCT2[1] * CWT_WT_ADJ)
  If INCCHARGE
    POCOST = POCOST + ((PCT2[0] + PCT5[3]) * (PCT5[0] * PO_WT_BASE))
    POCOST = POCOST + ((PCT2[0] + PCT5[3]) * (PCT5[1] * PO_WT_BASE))
  End If 
Else 
  POCOST = PCT2[1]
  If INCCHARGE
    POCOST = POCOST + PCT5[0] + PCT5[1]
  End If 
End If 
POCOST = FNR(POCOST)
If PCT9[3] And INCCHARGE = 0 Let POCOST = PCT9[3]
If PCT9[4] And INCCHARGE <> 0 Let POCOST = PCT9[4]
APCOST = PCT2[4]
If INCCHARGE
  If L1[5] <> -2
    If Not(PCT0)
      APCOST = APCOST + ((PCT2[0] + PCT5[3]) * (PCT5[4]) * PO_WT_BASE) + ((PCT2[0] + PCT5[3]) * (PCT5[5] * PO_WT_BASE))
    Else 
      APCOST = APCOST + ((PCT2[0] + PCT5[3]) * (PCT5[4])) + ((PCT2[0] + PCT5[3]) * (PCT5[5]))
    End If 
  Else 
    APCOST = APCOST + PCT5[4] + PCT5[5]
  End If 
  If PCT0 <> 0 ! catchweight item
  End If 
End If 
If ACPER <= APPER
  APCOST = APCOST - PCT4[1]
Else 
  If INCCHARGE
    If L1[5] <> -2
      If Not(PCT0)
        APCOST = APCOST + FNR(((PCT2[0] + PCT5[3]) * (PCT5[6]) * PO_WT_BASE) + ((PCT2[0] + PCT5[3]) * (PCT5[7] * PO_WT_BASE)))
      Else 
        APCOST = APCOST + ((PCT2[0] + PCT5[3]) * (PCT5[6])) + ((PCT2[0] + PCT5[3]) * (PCT5[7]))
      End If 
      APCOST = APCOST + PCT5[6] + PCT5[7]
    End If 
  End If 
End If 
If PCT2[3] = 0 And PCT2[0] = 0 And APCOST = 0 And POCOST = 0 Goto L_2000
Gosub L_6100
K5$ = " ",K5$;K5$[1,6] = PCT1[2] Using "######"
A$ = "VENDOR NOT ON FILE!!!"
Search #5,2,1;K5$,R[5],E
If Not(E)
  Mat Read #5,R[5],0;A$;
End If 
If PCT3[2]
  POCOST = - POCOST
  APCOST = - APCOST
End If 
If SORTOPT$ = "V"
  If CHKVEND
    If CHKVEND <> PCT1[2] Gosub L_4100
  End If 
  CHKVEND = PCT1[2]
End If 
If SORTOPT$ = "S"
  If CHKCAT
    If PCT7[2]
      If CHKCAT <> PCT7[2] Gosub L_4200
    Else 
      If CHKCAT <> -100 Gosub L_4200
    End If 
  End If 
  If Not(CHKCAT) Gosub PRNTCATNAME
  CHKCAT = PCT7[2]
  If Not(PCT7[2]) Let CHKCAT = -100
End If 
APCOST = FNR(APCOST)
if suprvar<>0
	if (pocost-apcost)=0 goto L_2000:
endif
Gosub L_5800
TOTACC = (PCT9[4] - PCT8[2])
If PCT3[2] Let TOTACC = - TOTACC
If PCT3[0] = 89 Let TOTACC = 0
Gosub L_5000
Gosub L_2200
Goto L_2000
L_2200: Rem calc totals
T9[0] = T9[0] + POCOST
T9[1] = T9[1] + APCOST
T9[2] = T9[2] + TOTACC
T8[H4,0] = T8[H4,0] + POCOST
T8[H4,1] = T8[H4,1] + APCOST
T8[H4,2] = T8[H4,2] + (TOTACC)
VENDTOT[0] = VENDTOT[0] + POCOST
VENDTOT[1] = VENDTOT[1] + APCOST
VENDTOT[2] = VENDTOT[2] + (TOTACC)
CATTOT[0] = CATTOT[0] + POCOST
CATTOT[1] = CATTOT[1] + APCOST
CATTOT[2] = CATTOT[2] + (TOTACC)
Return 

 
L_4000: Rem TOTALS
If SORTOPT$ = "V"
  Gosub L_4100
End If 
If SORTOPT$ = "S"
  Gosub L_4200
End If 
Print #0;""
Print #0;",,,,";"*** TOTALS ***";",";
Print #0;",,,,,,,,,,,";
If Not(WH) Print #0;",";
Rem if d1=1 print #0;",";
Print #0;",";
Print #0; Using "----------.##";T9[0];",";
Print #0; Using "----------.##";T9[1];",";
Print #0; Using "----------.##";(T9[1] - T9[0]);",";
If POGLFLAG<>0
  Print #0; Using "----------.##";(T9[2]);",";
End If 
Print #0;""
Print #0;""
For X = 0 To 6
  If T8[X,0] <> 0 Or T8[X,1] <> 0 Or T8[X,2] <> 0
    Print #0;",,,,";
    If X = 0 Print #0;"*WAREHOUSE TOTALS*";
    If X = 1 Print #0;"*DIRECT TOTALS*";
    If X = 2 Print #0;"*INDIRECT TOTALS*";
    If X = 4 Print #0;"*IMPORT WAREHOUSE TOTALS*";
    If X = 5 Print #0;"*IMPORT DIRECT TOTALS*";
    If X = 6 Print #0;"*IMPORT INDIRECT TOTALS*";
    Print #0;",";
    Print #0;",,,,,,,,,,,";
    If Not(WH) Print #0;",";
    Rem if d1=1 print #0;",";
    Print #0;",";
    Print #0; Using "---------.##";T8[X,0];",";
    Print #0; Using "---------.##";T8[X,1];",";
    Print #0; Using "---------.##";(T8[X,1] - T8[X,0]);",";
    If POGLFLAG<>0
      Print #0; Using "---------.##";T8[X,2];",";
    End If 
    Print #0;""
    Print #0;""
  End If 
Next X
Goto OUTEND
L_4100: Rem Vendor Totals
If SORTOPT$ <> "V" Return 
If CHKVEND
  Print #0;""
  Print #0;",,,,";"*VENDOR TOTALS*";",";
  Print #0;",,,,,,,,,,,";
  If Not(WH) Print #0;",";
  Rem if d1=1 print #0;",";
  Print #0;",";
  Print #0; Using "----------.##";VENDTOT[0];",";
  Print #0; Using "----------.##";VENDTOT[1];",";
  Print #0; Using "----------.##";(VENDTOT[1] - VENDTOT[0]);",";
  If POGLFLAG<>0
    Print #0; Using "----------.##";VENDTOT[2];",";
  End If 
  Print #0;""
  Print #0;""
End If 
For X = 0 To 2
  VENDTOT[X] = 0
Next X
Return 
L_4200: Rem Category  Totals
If SORTOPT$ <> "S" Return 
If CHKCAT
  Print #0;""
  Print #0;",,,,";"*CATEGORY TOTALS*";",";
  Print #0;",,,,,,,,,,,";
  If Not(WH) Print #0;",";
  Rem if d1=1 print #0;",";
  Print #0;",";
  Print #0; Using "----------.##";CATTOT[0];",";
  Print #0; Using "----------.##";CATTOT[1];",";
  Print #0; Using "----------.##";(CATTOT[1] - CATTOT[0]);",";
  If POGLFLAG<>0
    Print #0; Using "----------.##";CATTOT[2];",";
  End If 
  Print #0;""
  Print #0;""
End If 
For X = 0 To 2
  CATTOT[X] = 0
Next X
CATCHK = 0
Return 
Rem!! print category totals ---- stop here
PRNTCATNAME: Rem print category name
Gosub L_5800
CATNAME$ = "Invalid Category"
If PCT7[2] > 0 And PCT7[2] <= (Chf(20) - 1)
  Read #20,PCT7[2],0;CATNAME$;
End If 
Print #0;""
Print #0;",,,,";
DESC$ = CATNAME$
Gosub CHKCOMMA
Print #0; Using "##";"Category: ";PCT7[2];" ";DESC$;",";
Print #0;",,,,,,,,,,,";
If Not(WH) Print #0;",";
Rem if d1=1 print #0;",";
Print #0;",";
Print #0;",,,";
If POGLFLAG Print #0;",";
Print #0;""
Return 
L_5000: Rem print detail line info
let totrec=totrec+1
Print #0; Using "######";PCT1[3];
Print #0;",";
Print #0; Using "######";PCT1[0];
Print #0;",";
X2 = PCT1[4] \ Gosub L_7700
Print #0;X$[1,8];
Print #0;",";
DESC$ = L1$[81,92]
Gosub CHKCOMMA
Print #0;DESC$;
Print #0;",";
DESC$ = L1$[1,30]
Gosub CHKCOMMA
Print #0;DESC$;
Print #0;",";
Print #0; Using "######"; Tab 73;PCT1[2];
Print #0;",";
DESC$ = A$[1,30]
Gosub CHKCOMMA
Print #0;DESC$;
Print #0;",";
If Not(WH)
  Print #0; Using "##";PCT3[1];
  Print #0;",";
End If 
If Not(POGLFLAG) ! based upon inventory
  If POMISC[0]
    Print #0;"Y";
    Print #0;",";
  Else 
    Print #0;"N";
    Print #0;",";
  End If 
Else 
  If Not(NONSTOCK)
    Print #0;"Y";",";
  Else 
    Print #0;"N";",";
  End If 
End If 
!If Not(NONSTOCK)
!  Print #0; Using "##";B[11];
!Else 
!  Print #0; Using "##";NSD1[1];
!End If 
print #0;using "###";pct7[2];  ! category from poctfle
Print #0;",";
If Not(PCT3[0])
  Print #0;"NO";
Else 
  If PCT3[0] = 99
    Print #0;"MC";
  Else 
    If PCT3[0] = 97 Or PCT3[0] = 98
      Print #0;"IP";
    Else 
      If PCT3[0] = 87 Or PCT3[0] = 88
        Print #0;"UP";
      Else 
        If PCT3[0] = 89
          Print #0;"UR";
        Else 
          Print #0;"YES";
        End If 
      End If 
    End If 
  End If 
End If 
Print #0;",";
Print #0;O$[H4 * 2 + 1,H4 * 2 + 2];
Print #0;",";
If L1[4] = -1 Let M1$ = "CWT"
If L1[4] = -3 Let M1$ = "LB  "
If L1[4] > 0 Mat Read #7,L1[4],10;M1$;
If Not(PCT0)
  CNVTA = PCT2[0];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
  Gosub L_20000 \ POQTY = AMOUNT
Else 
  POQTY = PCT2[0];M1$ = "LB  "
End If 
Print #0; Using PMASK$;POQTY;
Print #0;",";
Print #0;M1$;
Print #0;",";
If Not(PCT0)
  CNVTA = PCT2[3];CNVTU[0] = 0;CNVTU[1] = L1[4];CNVTU[2] = 1
  Gosub L_20000 \ APQTY = AMOUNT
Else 
  APQTY = PCT2[3];M1$ = "LB "
End If 
Print #0; Using PMASK$;APQTY;
Print #0;",";
Print #0;M1$;
Print #0;",";
Print #0; Using PMASK1$;(POQTY - APQTY);
Print #0;",";
Print #0;M1$;
Print #0;",";
Print #0; Using "---------.##";POCOST;
Print #0;",";
Print #0; Using "---------.##";APCOST;
Print #0;",";
Print #0; Using "---------.##";(APCOST - POCOST);
Print #0;",";
If POGLFLAG<>0
  Print #0; Using "---------.##";(TOTACC);
  Print #0;",";
End If 
Print #0;""
Return 


L_5800: Rem HEADING ROUTINE
L = L + 2
If L < L9 Return 
If P = 0 Goto L_5836
If P Let L = 0 \ Return 
!If L9 <> 22 Goto L_5832
!Input Len 1;"\15\PRESS <CR> TO CONTINUE OR E: END "J1$
!Call String(1,J1$)
!If J1$ = "E" Gosub L_9040
!Print 'CS'
L_5832: Print #0;"\14\"
L_5836: P = P + 1
Print #0;"-la544-";
Print #0; Tab 10;ARDATE$; Tab (66 - Int(Len(CNAME$) / 2));CNAME$; Tab 100;"PAGE";P
Print #0; Tab 2;Msc$(3);
Print #0; Tab 53;"PURCHASE ORDER CONTROL REPORT";
If ACPER <> 9999 Print #0; Tab 90;"PERIOD: ";ACPER$[1,2];"/";ACPER$[3,4];
Print #0;""
If WH
  R[8] = WH - 1 \ Read #8,R[8],4;WHNAME$;
  Print #0; Using "## "; Tab 2;"WAREHOUSE: ";WH;WHNAME$;
Else 
  Print #0; Tab 2;"ALL WAREHOUSES";
End If 
X2 = SDATE \ Gosub L_7700
Print #0; Tab 56;X$;" THRU ";
X2 = EDATE \ Gosub L_7700
Print #0;X$;
If INCCHARGE
  Print #0; Tab 82;"INC CHARGES";
End If 
If D1 = 1 Print #0; Tab 98;"ALL TRANSACTIONS";
If D1 = 2 Print #0; Tab 98;"OPEN TRANSACTIONS";
If D1 = 3 Print #0; Tab 98;"CLOSED TRANSACTIONS";
Print #0;""
Print #0;""
L = 7
Print #0;"CNTRL#";
Print #0;",";
Print #0;"PO/DM#";
Print #0;",";
Print #0;"DATE";
Print #0;",";
Print #0;"PRODUCT";
Print #0;",";
Print #0;"DESCRIPTION";
Print #0;",";
Print #0;"VENDOR";
Print #0;",";
Print #0;"NAME";
Print #0;",";
If Not(WH)
  Print #0;"WH";
  Print #0;",";
End If 
Print #0;"STK";
Print #0;",";
Print #0;"CAT";
Print #0;",";
Rem IF D1=1 PRINT #0; "CLOSED";",";
Print #0;"CLOSED";",";
Print #0;"TYPE";
Print #0;",";
Print #0;"RCVD QTY";
Print #0;",";
Print #0;"UM";
Print #0;",";
Print #0;"A/P QTY";
Print #0;",";
Print #0;"UM";
Print #0;",";
Print #0;"QTY VAR";
Print #0;",";
Print #0;"UM";
Print #0;",";
Print #0;"RCVD COST";
Print #0;",";
Print #0;"A/P COST";
Print #0;",";
Print #0;"VARIANCE";
if poglflag<>0
	Print #0;",";
	Print #0;"OPEN ACCRUAL";
endif
Print #0;""
Return 
L_6100: Rem "================================ get product
Call Logic(1,2 ^ 0,L1[3],X0)
NONSTOCK = X0
If Not(X0)
  Gosub L_6200
Else 
  Gosub L_6250
  For X0 = 0 To 20
    If X0 < 21 Let PFU1[X0] = 0
    If X0 < 4 Let PFU1[X0] = NSD1[X0 + 2]
    If X0 < 7 Let PFU2[X0] = 0
    If X0 < 3 Let PFU2[X0] = NSD3[X0 + 3]
  Next X0
  A[5] = NSD3[7] \ A[6] = NSD3[6] \ B[23] = NSD3[2] \ A3[3] = NSD3[8]
  PFU1[8] = NSD1[5];PFU1[10] = NSD1[4];PFU1[11] = NSD1[3];PFU1[15] = NSD1[7]
  A1$[9,38] = NSD$[13,42] \ A1$[63,92] = NSD$[43,72]
  A1$[140,151] = NSD$[1,12]
  If PFU1[15] = -3 Let A1$[127,127] = "Y"
End If 
Return 
L_6200: Rem READ PRODUCT FILE
Mat Read #6,L3[1];A1$;
Mat Read #6,L3[1],156;B;
Mat Read #6,L3[1],256;A; \ Mat Read #6,L3[1],460;A3;
Mat Read #6,L3[1],512;PFU1;
Mat Read #6,L3[1],554;PFU2;
Return 
L_6250: Rem READ NSTKDESC
Mat Read #10,L3[1];NSD$;
Mat Read #10,L3[1],96;NSD1;
Mat Read #10,L3[1],112;NSD2;
Mat Read #10,L3[1],132;NSD3;
Return 
L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER

L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "00/00/00"
Return 
DT3[0] = X2;FLAG = 1;X$ = " "
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
Call VerifyDate(X$,X$,E) \ If E Let X$ = "    "
X2 = X$[1,6] \ Return 
L_7820: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5] \ Return 1
DT3[0] = X2;DT3[1] = X2;FLAG = 0
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&";X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6] \ Return 
L_8000: Rem READ POLINE
Mat Read #4,R[4],0;L1;
Mat Read #4,R[4],12;L2;
Mat Read #4,R[4],24;L3;
Mat Read #4,R[4],66;L1$;
Mat Read #4,R[4],186;PL;
Mat Read #4,R[4],222;PL0;
Mat Read #4,R[4],232;PL4;
Mat Read #4,R[4],376;POMISC;
Mat Read #4,R[4],382;PL5;
Mat Read #4,R[4],442;PL6;
Mat Read #4,R[4],508;POCNTRL;
Return 
GETWTADJ: Rem get weight factor between product and po line
CWT_WT_ADJ = 1
PO_WT_BASE = 1
If Not(L3[1]) Return 
If L1[5] <> -1 And L1[5] <> -3 Return 
Call Logic(1,2 ^ 0,L1[3],X0)
NONSTOCK = X0
If Not(X0)
  Gosub L_6200
  If (L1[5] = -1 Or L1[5] = -3)
    If PCT6[0] <> 0 And PCT6[1] <> 0
      If (A[6] <> PCT6[0] Or A[5] <> PCT6[1]) ! do in diff units or unit/amts
        PROD_WT_BASE = A[6] / A[5]
        PO_WT_BASE = PCT6[0] / PCT6[1]
        If PROD_WT_BASE Let CWT_WT_ADJ = PO_WT_BASE / PROD_WT_BASE
      End If 
    Else 
      If (A[6] <> PL4[12] Or A[5] <> PL4[13]) ! do in diff units or unit/amts
        PROD_WT_BASE = A[6] / A[5]
        PO_WT_BASE = PL4[12] / PL4[13]
        If PROD_WT_BASE Let CWT_WT_ADJ = PO_WT_BASE / PROD_WT_BASE
      End If 
    End If 
  End If 
End If 
Return 
CHKCOMMA: Rem check for comma in description and change to '
For X = 1 To Len(DESC$)
  If DESC$[X,X] = "," Let DESC$[X,X] = "'"
Next X
Return 

CLRSORT: Rem clear sort work file
KEYSORT$ = " ",KEYSORT$
SRCHCLR: Search #9,3,1;KEYSORT$,R[9],E \ If E = 2 Goto ENDCLRSORT
If E Gosub ERR_SEARCH
Search #9,5,1;KEYSORT$,R[9],E \ If E Gosub ERR_SEARCH
Goto SRCHCLR
ENDCLRSORT: Rem end of sort
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 

ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End

OUTEND: Rem OUT
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
	if not(totrec)
		returnstatus=1
		let message$=message$+"There are no transactins to print"
		message$=message$+"."
	else
		Let message$=message$+" "+str$(totrec)+" Transaction(s) Printed"
	endif
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program