! --- dxblockx.dl4
! General Program to respond to .net block requests and access Page Block Routines in dxblockcalls.lib 
!
! loadsave -w -n 100,10 -o prog/dxport/dxblockx.dl4 src/dxblockx.src
!
! 1.0 1/4/2008 new 
! if blockid has a filename associated with it, chains to block'filename'.dl4 generated code to process
! else if action=print cains to 'blockid'.dl4 print program
! else show input prompts for report (type=prompt)
!
!include copyright, common libs, common intrinsics
! *declare common dl4 intrinsic subs & functions
declare intrinsic function trim$,dateusing$,fmtof
declare intrinsic sub dxopen,dxget,dxset,dxclose,dxsave,programdump,env
!
! *declare common external libs & subs & functions
external lib "libgeneral.lib" !general routines
declare external sub suberr,mainerr,getsession,setoutput,addtostr
declare external function getmsg$,expandarray
!
!
!
! *declare dl4 intrinsic subs & functions
declare intrinsic function findchannel,trim$,dateusing
declare intrinsic sub programdump,dxopen,dxget,dxset,dxclose,dxsave,env,getglobals,setglobals 
!
!
external lib "dxblockgeneral.lib"
declare external function blockbuildsort
!
external lib "libgeneral.lib"
declare external sub getsession,setoutput,addtostr,checkforpdf
declare external function expandarray,openprinter
!
!
external lib "dxblockcallsx.lib" !page block routines
declare external sub setblock,setcols,setvalues,getvalues

external lib "ubsfunc.dl4"
declare external sub LogAccess
!
!
!
! **main procedure
!
!
! dim variables used by program
!
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
try
 !
 dim blockid$[8],tmp$[100],filename$[20],action1$[30]
 dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
 dim programname$[50],link$[22]
 b$=" ",b$
 !
 call dxopen()
 ! call dxsave(0,"/x1/xslspro/dx.in!")
 !
 call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 !.net patch
 call dxget("action1",action1$)
 if action1$<>"" let action$=ucase$(action1$)
 if action$="START" !go to jscript page to display prompts
  call dxget("blockid",blockid$)
  call dxset("blockid",blockid$)
  !call dxget("s_view.mergedir",mergedir$)
  call dxset("output","block/dxblock.html")
  call dxclose()
  end
 end if
 !
 if action$="CHECKFORPDF"
  call checkforpdf(e$)
  call dxclose()
  end
 end if
 !note,getsession puts the <page> info in rstr$
 !
 !<section>
 tmp$=bsdel$,options$,fdel$,rdel$
 call addtostr(e$,rstr$,tmp$)
 !
 !
 !
 call dxget("blockid",blockid$)
 !
 if action$="VERIFY" 
  !verify value is on key 1 of data file, return reformatted value or error
  call dxget("link",link$)
  if len(link$)>2 if link$[1,2]="al" let link$=link$[3] !strip the al (auto-link tag) from front if there
  !need to convert link tag from block id to filecode to chain to correct program name (below setblock will set filename to libfilename.lib)
  blockid$=link$
 end if
 !
 !setblock will get blockid definition, load rstr with block section, 
 !if printprompts type will load rstr with all control properties as well, else it will return program to chain to
 !for printing, or for table or edit types
 call setglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
 call setblock(e$,blockid$,action$,programname$,rstr$) !
 !
 !
 if action$="TABLE" or action$="EDIT" or action$="SAVE" or action$="DELETE" or action$="VERIFY"
 !
  call setglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
  call LogAccess(e$,"Program: "+programname$)	
  chain programname$ !block'defstruct filename'.dl4 (set in setblock/hdrlist)  or libfile'defstruct filename'.lib if VERIFY
 end if
 !
 if programname$<>"" !action=print, chain to print program
  !note:getsession always opens control file on #1
  call dxget("printer",tmp$)  !if a nextblock chain, might not have a printer prompt, if not skip openprinter
  if tmp$<>""
   !open printer on # defined in dfsystem.txt
   call getglobals("dfsystem",1,tmp$)
   tmp=tmp$
   printchan=openprinter(e$,tmp,1) !also redirects to check for pdf if pdf
  end if
   !
   !build sort file and open on # defined in dfsystem.txt (if null,don't build), always 25wd key (as was mx0/mx000 program)
   call getglobals("dfsystem",2,tmp$)
   if tmp$<>""
    tmp=tmp$
    sortchan=blockbuildsort(e$,25,0,tmp)
   end if
  !
	! write to myreports index if disk file

  !
  call LogAccess(e$,"Program: "+programname$)	
  chain programname$  !print program, or code generated file maintenance program
 end if
 !
 call addtostr(e$,rstr$,esdel$) !end section
 !
 !
 !!!!!!print rstr$
 call setoutput(e$,rstr$) !puts </page> in
else
 ! error routine
  if spc(8)<>10000
   call suberr(e$,spc(8),spc(10),msc$(2))
   !call programdump("")
  end if
  call mainerr(e$,spc(8),buttonlist$[],nextlist$[])
end try
end
