! >>> Program mx405a
!
! description Monthly Acct Receivable-sales / General Ledger Report 
! loadsave -w -n 100,10 -o prog/dxport/mx405a.dl4 src/mx405a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT  8, 2004  13:57:20
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx405a.src (univ2) [jcs] {60736}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String
! Option Default Dialect IRIS1
Declare Intrinsic Sub getglobals
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
Rem MX405A - G/L MONTHLY INTERFACE FOR ACCOUNTS RECEIVABLE
Rem AUTHOR: MTK   JUNE 1988
Rem LAST UPDATE:
!If Err 0 Gosub ERR_TRAP
Try
  Enter eflg,rec_uac,message$,IntCo,rstr$,e$ 
  dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
  dim e$[500]!,message$[600]
Dim 1%,B,B3,E,I,L,L9,U2,X1
Dim 2%,A,C3[2],D0,J8,K1,P,R,R1,S1[8],V1,X2,X9,M0,CLIENT
Dim 3%,C2[1],D1[1],M5[3],T
Dim B$[3],C$[4],D$[4],F$[20],F2$[30],F3$[30],G$[2],G9$[140],J$[30]
Dim K1$[50],K2$[30],L9$[2],P9$[64],R9$[64],T9$[64],U5$[50],V2$[20]
Dim X$[10],d8$[10],3%
Dim U5$[50],groupid$[2],msg$[100],glpmsg$[100]
Dim buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],WebStr$[600],blockid$[100]

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!If Err 0 Rem
!Close
!If Err 0 Gosub ERR_TRAP
!J8 = Spc(5)
COMP = Intco ! Int((J8 - Int(J8 / 16384) * 16384) / 64)
J$ = COMP Using "cntrl/CNTRL#"
Goto L_890
!J8 = Spc(5)
!J$ = Int((J8 - Int(J8 / 16384) * 16384) / 64) Using "CNTRL# "
For X=1 to 89
	Try Close #x Else Rem
Next X
J$ = COMP Using "cntrl/CNTRL# "
open #1,j$
For I = 2 To 12
  Read L
  If L = -1 Goto L_852
  Read #1,88,L;J$;
  Open #I,J$
L_852: Next I
Data "240","256","176","48","-1","272","1808","464","-1","-1","-1"
L_890: Mat Read #1,52,0;S1;
If S1[4] <> 1 Goto L_7100
Read #1,0,120;U2; \ If S1[5] = U2 Goto L_7100
G$[1,1] = S1[1] Using "#"
G$[2,2] = S1[2] Using "#"
L_1100: Rem SELECT POSTING PERIOD
!Print 'CS';
!Print @11,4;'CL';"*** ACCOUNT RECEIVABLE TO GENERAL LEDGER INTERFACE ***"
Mat Read #1,0,108;D0;
X$ = D0 Using "&&&&&&"
C3[0] = X$[1,4]
X$ = C3[0] Using "&&&&"
LET D8$=D0 using "&&&&&&" ! yymmdd
Let X$ = D8$[3,6],D8$[1,2] \ Goto L_1205 ! mmddyy
!Print @10,7;'CL';"POSTING MONTH: ";X$[3,4];"/";X$[1,2];
!L_1190: Print @10,12;'CL';"ENTER POSTING DATE (MMDDYY) ";
!Input ""X$
L_1190: ! Print @10,12;'CL';"ENTER POSTING DATE (MMDDYY) ";
Msg$="BAD POSTING DATE" \ gosub err_Search ! prevent endless loop!
!Input ""X$
l_1205: ! have a date 
If Len(X$) <> 6 Goto L_1190
C3[1] = X$[1,6]
F$ = X$[5,6],X$[1,2],X$[3,4]
X9 = X$[3,4] \ If X9 < 1 Goto L_1190
If X9 > 31 Goto L_1190
If X$[1,2] = "02" If X9 > 29 Goto L_1190
C3[2] = F$
X9 = F$[1,4]
If C3 = X9 Goto l_1900: !  L_1290
goto L_1190: !  bad date then
!Print @0,23;'CL RB';"POSTING DATE MUST AGREE WITH POSTING MONTH!!";
!Signal 3,30 \ Print @0,23;'CL'; \ Goto L_1190
!L_1290: Print @0,23;'CL';"Enter  A:accept  R:reject ";
!Input ""X$
!If X$ = "R" Goto L_1100
!If X$ = "A" Goto L_1900
!If X$ <> "E" Goto L_1290
!Print @0,20;'CL RB';"*** WARNING *** NO JOURNAL ENTRIES WILL BE MADE!!";
!Print @0,21;'CL RB';"MAY CAUSE DISCREPANCIES FROM MONTHLY TOTALS AND GENERAL LEDGER";
!Print @0,22;"JOURNAL ENTRIES WILL BE LOST!!!!!";
!L_1370: Print @0,23;'CL';"DO YOU WISH TO POST JOURNAL ENTRIES TO THE GENERAL LEDGER (Y/N) ";
!Input ""X$
!If X$ = "Y" Goto L_1100
!If X$ <> "N" Goto L_1370
!L_1383: Print @0,23;'CL RB';"ARE YOU SURE NO GENERAL LEDGER UPDATE WILL BE PERFORMED? (Y/N) ";
!Input ""X$
!If X$ = "N" Goto L_1100
!If X$ <> "Y" Goto L_1383
!Goto L_7100
L_1900: !Print @0,23;'CL';"PROCESSING...PLEASE WAIT...";
Print #0;"POSTING PERIOD: ";F$[1,4];"   ";
Print #0;"POSTING DATE: ";F$[3,4];"/";F$[5,6];"/";F$[1,2]
Goto L_6100
L_6100: Rem *** MAIN LOGIC BEGINS HERE ***
CLIENT = 0
!Print @0,22;'CL';"PLEASE WAIT....NOW POSTING."; \ Signal 3,0
V2$ = " ",V2$
L_6120: Search #7,3,1;V2$,V1,E
If E = 2
  If CLIENT Gosub L_6300
  Goto L_7100
End If 
If E Gosub ERR_search !If E Gosub ERR_TRAP
Mat Read #7,V1,0;D1;
If Not(D1[1]) Goto L_6120
Mat Read #7,V1,24;M0;
If CLIENT <> M0
  If CLIENT Gosub L_6300
  Gosub L_6400
End If 
R9$ = " ",R9$
R = R + 1
R9$[1,1] = S1[3] Using "#"
R9$[3,10] = D1 Using "########"
R9$[14,19] = C3[1] Using "######"
R9$[20,25] = C3[1] Using "######"
R9$[26,50] = "ACCOUNT RECEIVABLE UPDATE"
R9$[59,62] = R Using "####"
R9$[63,63] = "0"
T = D1[1]
Write #12,R1;R9$
Write #12,R1,1;T;
R1 = R1 + 1
If D1[1] > 0 Let C2 = C2 + D1[1]
If D1[1] < 0 Let C2[1] = C2[1] + D1[1]
Goto L_6120
L_6300: Rem RESET BATCH
R = R + 1
T9$[59,62] = R Using "####"
T = 0
Write #12,R1;T9$
Write #12,R1,1;T;
R1 = R1 + 1
P9$ = " ",P9$
C2[1] = Abs(C2[1])
P9$[31,40] = (C2[0] * 100) Using "##########"
P9$[41,50] = (C2[1] * 100) Using "##########"
P9$[51,60] = ((C2[0] - C2[1]) * 100) Using "----------"
P9$[10,20] = "1  PAY    1"
P9$[21,21] = "0"
T = 0
Write #12,R1;P9$;
Write #12,R1,1;T;
Return 
L_6400: Rem LOOKUP CLIENT & CREATE BATCH
K2$ = " ",K2$ \ K2$[3,6] = M0 Using "####"
Search #5,2,1;K2$,K1,E \ If E Gosub ERR_SEARCH
Mat Read #5,K1,0;G9$;
L9 = G9$[135,136]
If L9 < 10 Let L9$ = L9 Using "#" Else Let L9$ = L9 Using "##"
C$ = M0 Using "####"
For I = 1 To 4
  If C$[I,I] = " " Let C$[I,I] = "."
Next I
TIEBREAKER = 0
GETNUM: Rem get the batch #
TIEBREAKER = TIEBREAKER + 1
K2$ = " ",K2$ \ K2$[3,6] = M0 Using "####" \ K2$[7,8] = "PG"
Search #5,2,1;K2$,K1,E \ If E Gosub ERR_SEARCH
Mat Read #5,K1,132;B
B3 = B \ B3 = B3 + 1 \ If B3 > 999 Let B3 = 1
Mat Write #5,K1,132;B3;
!Print @0,23;'CL';"PROCESSING CLIENT#: ";K2$[3,6];" BATCH #: ";B;
!Signal 3,10
D$ = C3[0] Using "&&&&"
B$ = B Using "###"
For I = 1 To 3
  If B$[I,I] = " " Let B$[I,I] = "."
Next I
!If Err 0 Rem
Try Close #12 Else Rem
!if Err 0 Gosub ERR_TRAP
tmp$="files/",L9$,"/G",G$[1,2],C$,D$,B$[1,3]
! F2$ = "<00> ",L9$,"/G",G$[1,2],C$,D$,B$[1,3]
!F3$ = F2$[6]
F2$ = "<00> ",tmp$
F3$ = tmp$
Call FindF(F3$,A9)
If A9 ! already exists
  If TIEBREAKER > 999
       Msg$="No Available Batch Numbers to process " \ Gosub ERR_SEARCH
  End If 
  Goto GETNUM
End If 
Build #12,F2$
R1 = 0 \ T9$ = " ",T9$ \ T = 0
Write #12,R1;T9$
Write #12,R1,1;T
Try Close #12 Else Rem
tmp$="chmod go+rw "+F3$
System tmp$
Open #12,F3$
R = 0
T9$[1,1] = "*"
T9$[2,5] = C$
T9$[6,9] = C3 Using "&&&&"
T9$[10,12] = B Using "###"
T9$[13,50] = G9$[1,38]
T9$[51,52] = G$[1,2]
T9$[63,63] = "9"
C2[0] = 0 \ C2[1] = 0
CLIENT = M0
Return 
L_7100: Rem CLEAR MONTHLY FILES
Goto L_7600
K1$ = " ",K1$
L_7120: E = 0
Search #2,3,1;K1$,V1,E
If E = 2 Goto L_7220
If E Gosub ERR_SEARCH
E = 3
Search #2,1,0;K1$,V1,E
If E Gosub ERR_SEARCH
Search #2,5,1;K1$,V1,E
If E Gosub ERR_SEARCH
Goto L_7120
L_7220: K1$ = " ",K1$
L_7230: E = 0
Search #3,3,1;K1$,V1,E
If E = 2 Goto L_7500
If E Gosub ERR_SEARCH
E = 3
Search #3,1,0;K1$,V1,E
If E Gosub ERR_SEARCH
Search #3,5,1;K1$,V1,E
If E Gosub ERR_SEARCH
Goto L_7230
L_7500: K1$ = " ",K1$
L_7501: E = 0 \ Search #7,3,1;K1$,V1,E
If E = 2 Goto L_7600
If E Gosub ERR_SEARCH
Mat Read #7,V1,0;M5;
If Not(M5[2] + M5[3]) Goto L_7540
M5[1] = 0
Mat Write #7,V1,0;M5;
Goto L_7501
L_7540: E = 0 \ Search #7,5,1;K1$,V1,E
If E Gosub ERR_SEARCH
E = 3 \ Search #7,1,0;K1$,V1,E
If E Gosub ERR_SEARCH
Goto L_7501
L_7600: Rem RESET UPDATE MONTH
Read #1,0,120;U2;
S1[5] = U2
!Print @0,23;'CL RB';"UPDATE COMPLETE";
Write #1,52,20;S1[5];
!Print 'CR RB';"----ACCEPTED----"
Let AOK=1
let MESSAGE$=MESSAGE$+ " Accept Complete "
Goto OUTEND
U5$ = X2 Using "&&&&&&"
X$[1,2] = U5$[3,4]
X$[3,3] = "/"
X$[4,5] = U5$[5,6]
X$[6,6] = "/"
X$[7,8] = U5$[1,2]
Return 

ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$ \ Error 10000                      
Return ! End                                 
If Msg$<>"" let e$=msg$ !  Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump("tmp/mx320a!","")
! goto err_msg ! Error 10000
Error 10000
Return ! End

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)
End

OUTEND: Rem EXIT ROUTINE
!Print 'CS'
!Close 
!Chain "MX000"
!Stop 
!Stop 
Else

!
include "src/callmainerrnet.inc"
end try
End ! the whole program
