!!>>> Program 635
!
! description  General Ledger Report #1 by Departments
!
! loadsave -w -n 100,10 -o prog/dxport/635.dl4 src/635.src
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 11, 2004  11:51:02
Rem /w/papermaster/r2002//usr/acct/mary/work/devl/ap/gl635.src (univ2) [mary] {06090}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem GL635  G/L REPORT FORMAT 1 - by departments
!
!!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Try 
! If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print	 @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim GLT$[80],GLTKEY$[50],4%,GLT0,R[10]
Dim REPTYPE$[1],PERIOD$[4],CP1$[4],CP2$[4]
dim fye$[4]
dim 1%,archhist
Dim 2%,CPER[1],SUPRZ,DETPRNT,DEPT[1],DEP[1],C1[2]
Dim K2$[20],K9$[50],K10$[10],DEPTNAME$[30]
Dim V$[12],D1$[26]
Dim S1$[4]
Dim H$[4],3%,P[1]
Dim S$[6],I$[8],E1$[14]
Dim F4$[16],C$[140],1%,D9,2%,A9,F9$[2]
Dim 4%,N1,N2,N3
Dim 1%,S9[1],DEPTFLAG
Dim 4%,T3[3],B3[2],H3[3],SACCT,EACCT,ACCT
Dim 4%,D3
Dim M$[36]
Dim 3%,F,F$[20],G$[2],B1,F1
Dim 1%,comd
dim 3%,v1
!
!!dx add xport reporting code
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim blockid$[100],msg$[100],groupid$[1]

!Try call dxopen() Else Rem ! needed?
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!Open #9,"6/tmpsort"
COID=intCO
COMP=INTCo
!Try
!	Call dxsave(0,"/tmp/md635.txt!")
!else
!	rem
!end try


tRY Close #1 eLSE rEM ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
pageflag=0
Call DXGet("u_group",groupid$)
if rtrim$(groupid$)="" let groupid$="0"
G$[1,1] = intco Using "#"
g$[2,2]=groupid$

!
!!Print 'CS';"-gl635-"; Tab 20;"GENERAL LEDGER REPORT #1 BY DEPARTMENTS"
!
!!Read #1,51,10;DEPTFLAG;
!!If Not(DEPTFLAG) Let e$ = "Departments are not activated!" \ error 10000
!!  Print @0,22;'CE';"Departments Are Not Activated";
!!  Print @0,23;'CL';"Press <CR> to Return to Menu";
!!  Input Len 1;""I$
!!  Goto OUTEND
!!End If 
!-!Mat Read #1,51,6;S9;
!-!E1$ = "###,###,###.##"
!-!If Err 0 Let L8 = Spc(8)
!-!L8 = 0 \ L9 = Chf(0)
!-!If Err 0 Gosub ERR_TRAP
!-!If L8 <> 0 If L8 <> 49 Gosub ERR_TRAP
!-!J8 = L8 \ J9 = L9
!-!!!If Err 0 Gosub ERR_ESCAPE
!-!L9 = 60;SRCPRT = 0
!-!If L8
!-!  L9 = 23;SRCPRT = 99
!-!End If 
!!P8 = Spc(5)
!!F8 = Int(P8 / 16384)
!!G8 = Int((P8 - F8 * 16384) / 64)
!!U8 = P8 - (F8 * 16384 + G8 * 64)
!!G$[1,1] = G8 Using "#"
!!G$[2,2] = H8 Using "#"
!!F4$ = "1/ACF",G$
!!Call FindF(F4$,A9)
!!If Not(A9) Let e$ = "File ",F4$," not found!" \ error 10000
  !!Print @0,23;'CL RB';"FILE ";F4$;" NOT FOUND!!"; \ Signal 3,50 \ Goto OUTEND
  !!End If 
!!Ropen #5,F4$
!!If Err 0 Gosub ERR_ESCAPE
!
let eflag=0
message$=""
!
Read #1,51,10;DEPTFLAG;
!-!DEPTFLAG=0
If Not(DEPTFLAG) 
	eflag=eflag+1
	message$ = "Departments are not activated!" 
	goto outend
endif
!
Mat Read #1,51,6;S9;
Mat Read #1,51,94;archhist;
E1$ = "###,###,###.##"
!If Err 0 Let L8 = Spc(8)
!L8 = 0 \ L9 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If L8 <> 0 If L8 <> 49 Gosub ERR_TRAP
!J8 = L8 \ J9 = L9
!!If Err 0 Gosub ERR_ESCAPE
let l8=0
L9 = 60;SRCPRT = 0
!If L8
!  L9 = 23;SRCPRT = 99
!End If 
!

F4$ = "1/ACF",G$
Call FindF(F4$,A9)
If Not(A9) 
	eflag=eflag+1
	Let message$ = "File ",F4$," not found!" 
	goto outend:
endif
Ropen #5,F4$
!
if J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"635",fdel$,rdel$
  call addtostr(e$,rstr$,tmp$)
End if
if s9<>0 !
	call dxget("CLIENT",tmp$) \  S = tmp$		!!Enter Client #
else
	let s=1
endif
call dxget("SPERIOD",tmp$) \ CPER[0] = tmp$ !!Starting Current Accounting Period (MMYY)
call dxget("EPERIOD",tmp$) \ CPER[1] = tmp$ !!Ending Current Accounting Period (MMYY)
call dxget("TYPEREPORT",REPTYPE$)			!!D=Detail,  S=Summary!
call dxget("PRTOPTION",tmp$) \ DETPRNT = tmp$ !!1=Journal Source 2=Posting Date
call dxget("SACCT",tmp$) \ SACCT = tmp$  !!Starting Account Number
call dxget("EACCT",tmp$) \ if tmp$ = "" Let EACCT = 99999999 else Let EACCT = tmp$  !!Ending Account Number
call dxget("BALANCE",tmp$) \ if tmp$ = "" Let SUPRZ = 0 else Let SUPRZ = 1 !!Suppress Zero Account Balance Printing (Y/N)
call dxget("SDEPART",tmp$) \ DEPT[0] = tmp$ !! Starting Department Number
call dxget("EDEPART",tmp$) \ if tmp$ = "" Let DEPT[1] = 99 else Let DEPT[1] = tmp$ !!Ending Department Number
!
!If Not(S9) Let S = 1
!
!Gosub L_400 ! open files
V$ = " ",V$ \ V$[3,6] = S Using "####"
Search #5,2,1;V$,V1,E 
If E<>0
	Let message$ = "Invalid client "+str$(s)+" client not on file!" ! 
	let eflag=eflag+1
	goto outend: 
endif
Mat Read #5,V1,0;C$;
!V$[7,8] = "PG"
!Search #5,2,1;V$,V1,E 
!Mat Read #5,V1,132;C1;
D9 = C$[135,136]
If D9 > 9 Let F9$ = D9 Using "##"
If D9 < 10 Let F9$ = D9 Using "#"
CLIENT = S
S$ = S Using "####"
For I = 1 To 4
  If S$[I,I] = " " Let S$[I,I] = "."
Next I
F4$ = F9$,"/GLM",G$,S$
!Call FindF(F4$,A9)
!If Not(A9) 
!	Let message$ = "G/L Master File ",F4$,"not found"  
!	let eflag=eflag+1
!	goto outend:
!endif
!!  Print @0,23;'CL RB';"FILE ";F4$;"NOT FOUND "; \ Signal 3,50 \ Goto OUTEND
!!End If 
if archhist<>0
	Call dxget("ARCHHIST",tmp$)
	if rtrim$(tmp$)=""
		Call dxget("ARCHYR",tmp$)
		if rtrim$(tmp$)<>""
			let message$ = "Invalid Archive Year Entered" !\ error 10000
			eflag=eflag+1
			goto outend:
		endif
		F4$ = F9$,"/GLM",G$[1,2],S$
		let archhist=0
	else
		Call dxget("ARCHYR",tmp$)
		if rtrim$(tmp$)=""
			let message$ = "Invalid Archive Year Entered" !\ error 10000
			let eflag=eflag+1
			goto outend: 
		endif
		let tmp3=tmp$
		if tmp3<0 or tmp3>99
			let message$ = "Invalid Archive Year Entered"! \ error 10000
			let eflag=eflag+1
			goto outend: 
		endif
		let fye$[1,2]=".."
		let fye$[3,4]=tmp3 using "&&"
		F4$ = F9$,"/GLM",G$[1,2],S$,fye$
	endif
else
	F4$ = F9$,"/GLM",G$[1,2],s$
endif
Call FindF(F4$,A9)
If Not(A9) 
	if archHist<>0
		message$ = "Archived File ",F4$," not found " !\ error 10000
		let eflag=eflag+1
		goto outend: 
	else
		message$ = "File ",F4$," not found "! \ error 10000
		let eflag=eflag+1
		goto outend: 
	endif
ENDIF
!!  Print @0,23;'CL RB';"FILE ";F4$;"NOT FOUND "; \ Signal 3,50 \ Goto OUTEND
!!End If 
Ropen #2,F4$
V$ = " ",V$
Search #2,2,1;V$,V1,E 
if e<>0
	let message$="G/L Master Control Record Not on File "!!\ If E Gosub ERR_SEARCH
	let eflag=eflag+1
	goto outend:
endif
Mat Read #2,V1,70;D3;
H$ = D3 Using "####"
P[0] = H$[1,2]
P[1] = H$[3,4]
D5 = P[1]
If D5 <> 14 If D5 <> 39 Let D5 = 39
Dim 4%,M3[D5],A3[D5]
Mat Read #2,V1,70;A3;
Mat Read #1,88,128;F$; \ Ropen #10,F$

! starting period
comd = 0
CP1$ = CPER[0] Using "&&&&"
PERIOD$ = CP1$[3,4],CP1$[1,2]
B1 = PERIOD$[1,4]
Gosub VERIFYPERIOD
if comd = 2
	Let MESSAGe$ = "Invalid starting period, must be between 0 and 1299!" ! 
	let eflag=eflag+1
	goto outend:
endif 
if comd = 1 
	Let message$ = "Invalid starting period, period not found!" 
	let eflag=eflag+1
	goto outend:
endif
C1[0] = X1
C1[1] = X3
!
! ending period
CP2$ = CPER[1] Using "&&&&"
PERIOD$ = CP2$[3,4],CP2$[1,2]
F1 = PERIOD$[1,4]
Gosub VERIFYPERIOD 
if comd = 2
	Let message$ = "Invalid ending period, must be between 0 and 1299!" 
	let eflag=eflag+1
	goto outend:
endif
if comd = 1 
	Let message$ = "Invalid ending period, period not found!" 
	let eflag=eflag+1
	goto outend:
endif
C1[2] = X1
!
If C1[0] > C1[2] 
	Let message$ = "Invalid ending period, must be >= than starting period!" 
	let eflag=eflag+1
	goto outend:
endif
!
! starting & ending account #'s
If SACCT < 0 or SACCT > 99999999 
	Let message$ = "Invalid starting account number, must be between 0 and 99999999!" 
	let eflag=eflag+1
	goto outend:
endif
If EACCT < SACCT or EACCT > 99999999
	Let message$ = "Invalid ending account number, must be between starting account number and 99999999!" 
	let eflag=eflag+1
	goto outend:
endif 
!
! starting & ending department #'s
If DEPT[0] < 0 or DEPT[0] > 99 
	Let message$ = "Invalid starting department number, must be between 0 and 99!"
	let eflag=eflag+1 
endif
If DEPT[1] < DEPT[0] or DEPT[1] > 99999999
	Let message$ = "Invalid ending department number, must be between ending department number and 99!" 
		let eflag=eflag+1
	goto outend:
endif!
If REPTYPE$ <> "D" Let DETPRNT = 2
!
!
!If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
!  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
!End If
!
Goto GETGLT
!

!
!!SETDEFAULT: Rem
!!REPTYPE$ = "D";SUPRZ = 1;SACCT = 0;EACCT = 99999999
!DEPT[0] = 0;DEPT[1] = 99
!DETPRNT = 2
!!STARTHERE: Rem start screen here
!!Gosub PRNTSCRN
!!SELECTALL: Rem to re-select all items
!!For OPT = 1 To 5
!!  On OPT Gosub GETCURRPERIOD,GETREPTYPE,GETACCTNUM,GETSUPPRESS,GETDEPT
!!Next OPT
!!SELOPT: Rem selection options
!!Print @0,23;'CL';"Enter #:field to edit  R: reselect all  P:  print  E: end ";
!!Input Len (16384 + 1);""J$
!!Call String(1,J$)
!!If J$ = "E" Goto OUTEND
!!If J$ = "P" Goto GETGLT
!!If J$ = "R" Goto SELECTALL
!!OPT = J$
!!On OPT Gosub GETCURRPERIOD,GETREPTYPE,GETACCTNUM,GETSUPPRESS,GETDEPT
!!Goto SELOPT
!
GETGLT: Rem verify within same fiscal year and file exists
FYEMO = C$[128,129]
BEGMO = CP1$[1,2] \ BEGFYE = CP1$[3,4]
ENDMO = CP2$[1,2] \ ENDFYE = CP2$[3,4]
If BEGMO > FYEMO Let BEGFYE = BEGFYE + 1 \ If BEGFYE > 99 Let BEGFYE = 0
If ENDMO > FYEMO Let ENDFYE = ENDFYE + 1 \ If ENDFYE > 99 Let ENDFYE = 0
If BEGFYE <> ENDFYE 
	Let  message$ = "Invalid periods, must be in same fiscal year!" 
	let eflag=eflag+1
	goto outend:
endif
!!  Print @0,23;'CL RB';"ACCOUNTING PERIODS MUST BE IN SAME FISCAL YEAR";
!!  Signal 3,30
!!  Goto SELOPT
!!End If 
FYE = ENDFYE
S1$[1,2] = ".."
S1$[3,4] = FYE Using "&&"
F$ = F9$,"/GLT",G$,S$,S1$
Call FindF(F$,A9)
If Not(A9) 
	Let  message$ = "Invalid transaction file, transaction file for fiscal year ",S1$[3,4]," does not exist!"
	let eflag=eflag+1
	goto outend:
endif!!  Print @0,23;'CL RB';"G/L Transaction File For Fiscal Year ";S1$[3,4];"Does Not Exist ";
Ropen #3,F$
If FYE = 0
  PERIOD$ = B1 Using "&&&&"
  If PERIOD$[1,2] = "00" Let B1 = B1 + 10000
  PERIOD$ = F1 Using "&&&&"
  If PERIOD$[1,2] = "00" Let F1 = F1 + 10000
End If 
L_905: !!If Err 0 Gosub ERR_ESCAPE
PCTR = 0
!!Print @0,22;'CE';"Sorting, Please Wait...";
K9$ = " ",K9$
CLEARSORT: Rem clear sort file
Search #9,3,1;K9$,R[9],E
If E = 2 Goto STARTSORT
Search #9,5,1;K9$,R[9],E 
If E<>0
	Let message$ = "syserrorfile 635 sortfile mode (m)=5 keyno (k)=1 r=",R[9]," e=",e," keyval (k$)=",K9$ 
	let eflag=eflag+1
	goto outend:
endif
Goto CLEARSORT
!
STARTSORT: Rem start sorting g/l history file
K2$ = " ",K2$;K2$[2,9] = SACCT Using "########"
Search #2,2,1;K2$,R[2],E 
If Not(E) Goto STARTSORTCHK
SRCHGLM: Rem search gl master file
Search #2,3,1;K2$,R[2],E 
If E = 2 Goto STARTPRINT
if e goto startprint
STARTSORTCHK: Rem check   accts
Rem {begin srcdevl/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
!!If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
If K2$[8,9] = "  " Goto SRCHGLM
LET ACCT = K2$[2,9]
If Not(ACCT) Goto SRCHGLM
If ACCT > EACCT Goto STARTPRINT
LET DEP = K2$[8,9] 
If DEP < DEPT[0] Goto SRCHGLM
If DEP > DEPT[1] Goto SRCHGLM
K9$[1,2] = DEP Using "##";K9$[3] = K2$
Search #9,4,1;K9$,R[2],E !!\ If E Gosub ERR_SEARCH
If E<>0
	Let message$ = "syserrorfile 635 sortfile mode (m)=4 keyno (k)=1 r=",R[2]," e=",e," keyval (k$)=",K9$
	let eflag=eflag+1
	goto outend:
endif ! 
Goto SRCHGLM
!
STARTPRINT: Rem  start print
Call Time(D1$)
V9 = 0;L = 99;PCTR = 0;DEP = 999;DEP[1] = 0
For I = 0 To 2 \ B3[I] = 0 \ T3[I] = 0 \ H3[I] = 0 \ Next I
!
if j8 
  tmp$ = "CLIENT CODE",fdel$
  tmp$ = tmp$,"CLIENT NAME",fdel$
  tmp$ = tmp$, "DEPT NUMBER",fdel$
  tmp$ = tmp$, "DEPT",fdel$
  tmp$ = tmp$,"ACCOUNT #",fdel$,"DESCRIPTION",fdel$,"BEGINNING BALANCE",fdel$
  tmp$ = tmp$,"CURRENT",fdel$,"ENDING BALANCE",fdel$
  If REPTYPE$ = "D"
    tmp$ = tmp$,"JS",fdel$,"REF #",fdel$,"DATE",fdel$,"BATCH",fdel$,"DESCRIPTION 1",fdel$
    tmp$ = tmp$, "DEBIT",fdel$,"CREDIT",fdel$
  End If 
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
!!If Not(SRCPRT)
!!  Print @0,22;'CE';"Printing...Please Wait...";
!!End If 
K9$ = " ",K9$
SRCHSORT: 
Search #9,3,1;K9$,R[2],E 
If E = 2 Goto ENDOFREPORT
DEP[1] = K9$[1,2]
If DEP <> DEP[1]
  L = 99
  K10$[1,4] = CLIENT Using "####"
  K10$[5,6] = DEP[1] Using "##"
  Search #10,2,1;K10$,R[10],E 
  If Not(E)
    Mat Read #10,R[10],8;DEPTNAME$;
  Else 
    DEPTNAME$ = "Department Not On File"
  End If 
  DEP = DEP[1]
End If 
Gosub READ_GLM
For I = 0 To 3 \ H3[I] = 0 \ Next I
If M$[13,13] = "0" ! normal posting account
  If M$[14,14] = "A" Or M$[14,14] = "L" Or M$[14,14] = "C"
    Gosub CALCBEGBS
  End If 
  If M$[14,14] = "I" Or M$[14,14] = "E" Or M$[14,14] = "R" Or M$[14,14] = "O"
    Gosub CALCBEGIS
  End If 
  Gosub CALCCURR
  B3[0] = B3[0] + H3[1];B3[1] = B3[1] + H3[2];B3[2] = B3[2] + H3[0]
  If REPTYPE$ = "D"
    Gosub GETDETAIL
  Else 
    If SUPRZ
      If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHSORT
    End If 
    Gosub PRNTPAGEHEAD
    Gosub PRNTACCTTOTAL
    Goto SRCHSORT
    Rem check if supress zero
  End If 
End If 
If M$[13,13] = "1" ! memo account
  If M$[1,1] <> " " ! check for alpha account
    If M$[1,1] = "A" Or M$[1,1] = "L" Or M$[1,1] = "C"
      Gosub CALCBEGBS
      Gosub CALCCURR
      If SUPRZ
        If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHSORT
      End If 
      Gosub PRNTPAGEHEAD
      Gosub PRNTACCTTOTAL
      Goto SRCHSORT
    End If 
    If M$[1,1] = "I" Or M$[1,1] = "E" Or M$[1,1] = "R" Or M$[1,1] = "O"
      Gosub CALCBEGIS
      Gosub CALCCURR
      If SUPRZ
        If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHSORT
      End If 
      Gosub PRNTPAGEHEAD
      Gosub PRNTACCTTOTAL
      Goto SRCHSORT
    End If 
  Else 
    Gosub CALCBEGIS
    Gosub CALCCURR
    If SUPRZ
      If H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Goto SRCHSORT
    End If 
    Gosub PRNTPAGEHEAD
    Gosub PRNTACCTTOTAL
    Goto SRCHSORT
  End If 
End If 
If M$[13,13] = "2" Goto SRCHSORT
If M$[13,13] = "3" ! print total account
  Gosub PRNTPAGEHEAD
  Gosub PRINTTOTALS
  Gosub CLEARTOTALS
  Goto SRCHSORT
End If 
If M$[13,13] = "4" ! non-print total account
  Gosub CLEARTOTALS
  Goto SRCHSORT
End If 
If M$[13,13] = "5" ! page break
  L = 99
  Goto SRCHSORT
End If 
Goto SRCHSORT
!
CLEARTOTALS: Rem....RECORD TYPE 4
T3[0] = 0;T3[1] = 0;B3[0] = 0;B3[1] = 0;B3[2] = 0
Return 
!
PRINTTOTALS: Rem....RECORD TYPE 3
if j8 
  If REPTYPE$ = "D"
    if comd = 2
      tmp$ = tmp1$,"",fdel$,"",fdel$,"",fdel$
      tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
      tmp$ = tmp$,"",fdel$      
	  call addtostr(e$,rstr$,tmp$+rdel$)
    end if
  end if
  tmp1$ = C$[3,6],fdel$
  tmp1$ = tmp1$,rtrim$(C$[11,50]),fdel$
  tmp1$ = tmp1$,DEP,fdel$,rtrim$(DEPTNAME$[1,30]),fdel$
  tmp1$ = tmp1$,rtrim$(M$[1,12]),fdel$,rtrim$(M$[15,33]),fdel$
  tmp1$ = tmp1$, B3[2] Using E1$
  If B3[2] < 0 Let tmp1$ = tmp1$,"-"
  tmp1$ = tmp1$,"*",fdel$
  tmp1$ = tmp1$, B3[0] Using E1$
  If B3[0] < 0 Let tmp1$ = tmp1$,"-"
  tmp1$ = tmp1$,"*",fdel$
  tmp1$ = tmp1$, B3[1] Using E1$
  If B3[1] < 0 tmp1$ = tmp1$,"-"
  tmp1$ = tmp1$,"*",fdel$
  if REPTYPE$ = "S"  call addtostr(e$,rstr$,tmp$+rdel$)
  comd = 2
  return
end if 
Print #0;M$[1,12];" ";M$[15,33];
Print #0; Using E1$;" ";B3[2];
If B3[2] < 0 Print #0;"-";
Print #0;"*";
Print #0; Using E1$; Tab 49;B3[0];
If B3[0] < 0 Print #0;"-";
Print #0;"*";
Print #0; Using E1$; Tab 65;B3[1];
If B3[1] < 0 Print #0;"-";
Print #0;"*";
Print #0;""
Print #0;""
L = L + 1
Return 
!
PRNTACCTTOTAL: Rem print account totals
if j8 
  If REPTYPE$ = "D"
    if comd = 2
      tmp$ = tmp1$,"",fdel$,"",fdel$,"",fdel$
      tmp$ = tmp$,"",fdel$,"",fdel$,"",fdel$
      tmp$ = tmp$,"",fdel$      
	  call addtostr(e$,rstr$,tmp$+rdel$)
    end if
  end if
  tmp1$ = C$[3,6],fdel$
  tmp1$ = tmp1$,rtrim$(C$[11,50]),fdel$
  tmp1$ = tmp1$,DEP,fdel$,rtrim$(DEPTNAME$[1,30]),fdel$
  tmp1$ = tmp1$,rtrim$(M$[1,12]),fdel$,rtrim$(M$[15,34]),fdel$
  tmp1$ = tmp1$, H3[0] Using E1$
  If H3[0] < 0 Let tmp1$ = tmp1$,"-",fdel$ else Let tmp1$ = tmp1$,"",fdel$
  tmp1$ = tmp1$, H3[1] Using E1$
  If H3[1] < 0 Let tmp1$ = tmp1$,"-",fdel$ else Let tmp1$ = tmp1$,"",fdel$
  tmp1$ = tmp1$, H3[2] Using E1$
  If H3[2] < 0 Let tmp1$ = tmp1$,"-",fdel$ else Let tmp1$ = tmp1$,"",fdel$
  If REPTYPE$ = "S" call addtostr(e$,rstr$,tmp1$+rdel$)
  comd = 2
  return
end if
Print #0;M$[1,12];" ";M$[15,34];
Print #0; Using E1$;H3[0];
If H3[0] < 0 Print #0;"-";
Print #0; Using E1$; Tab 49;H3[1];
If H3[1] < 0 Print #0;"-";
Print #0; Using E1$; Tab 65;H3[2];
If H3[2] < 0 Print #0;"-";
Print #0;""
If REPTYPE$ = "D"
  Print #0;"" \ L = L + 1
End If 
Return 
!
GETINCOME: Rem NET INCOME/LOSS LINE
N1 = 0;N2 = 0
V$ = "N"
Search #2,2,1;V$,R[2],E 
If Not(E)
  Gosub READ_GLM
  Gosub GETYTDINC
  N1 = H3[3]
  H3[3] = 0
End If 
V$ = "NN"
Search #2,2,1;V$,R[2],E 
If Not(E)
  Gosub READ_GLM
  Gosub GETYTDINC
  N2 = H3[3]
  H3[3] = 0
End If 
N3 = N1 + N2
Return 
!
READ_GLM: Rem read gl master file
Read #2,R[2];M$;
Mat Read #2,R[2],70;M3;
Return 
!
PRNTPAGEHEAD: Rem print page heading
Rem {begin srcdevl/inc/rtn.printmsg.i}
IF J8 return
!
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,22;PCTR;" Records Printed";
!!    Print Using "   Page ####";V9[0];
!!  End If 
End If 
Rem {end rtn.printmsg.i}
L = L + 1
If L < L9 Return
!
If L9 <> 23 Goto L_5820
If Not(V9) Goto L_5820
!!HEADMORE: Rem check for more
!!Print @0,23;'CL';"Press <CR>:continue  E:exit ";
!!Input Len 1;""J1$
!!Call String(1,J1$)
!!If J1$ = "E" Goto OUTEND
!!If J1$ <> "" Goto HEADMORE
!!Print 'CS';
L_5820: 
If V9 <> 0 If L9 <> 23 Print #0;"\14\";
if v9>200 and pageflag=0
	Call addtostr(e$,rstr$,esdel$) !end section
	 Message$="Report is still processing.  Check myreports later. "
	 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	 call addToStr(e$,rstr$,webstr$)
	 call setoutput(e$,rstr$)
  ! Call setoutput(e$,rstr$,2) !2 fl
	let pageflag=99
endif
Print #0;""
Print #0;"RUN AS OF  ";D1$
Print #0;"-gl635-";
Print #0; Tab 15;"CLIENT: ";C$[3,6];" ";
Print #0;C$[11,50]
Print #0; Using "#### "; Tab 15;"DEPT:   ";DEP;DEPTNAME$[1,30];
Print #0; Tab 15;"GENERAL LEDGER AS OF:  ";
Print #0;CP1$[1,2];"/";CP1$[3,4];
If CP1$[1,4] <> CP2$[1,4]
  Print #0;" THRU ";
  Print #0;CP2$[1,2];"/";CP2$[3,4];
End If 
V9 = V9 + 1
Print #0; Tab 67;"PAGE ";V9
Print #0;""
Print #0;"ACCOUNT #    DESCRIPTION       BEGINNING BALANCE";
Print #0;"        CURRENT  ENDING BALANCE"
If REPTYPE$ = "D"
  Print #0;"     JS REF #  DATE  BATCH DESCRIPTION";
  Print #0; Tab 57;"DEBIT           CREDIT"
End If 
Print #0;""
L = 10
If REPTYPE$ = "D" Let L = L + 1
Return 
!
GETDETAIL: Rem gotrhough detail record for an account
For I = 0 To 3 \ T3[I] = 0 \ Next I
DETFLAG = 0
GLTKEY$ = " ",GLTKEY$;GLTKEY$[1,12] = M$[1,12]
GLTKEY$[13,14] = CP1$[3,4];GLTKEY$[15,16] = CP1$[1,2]
If FYE = 0 And CP1$[3,4] = "99" Let GLTKEY$[13,14] = "  "
SRCHDETAIL: Rem search for detail
Search #3,3,DETPRNT;GLTKEY$,R[3],E \ If E = 2 Goto ENDSRCHDETAIL
!!If E Gosub ERR_SEARCH
If GLTKEY$[1,12] <> M$[1,12] Goto ENDSRCHDETAIL
Mat Read #3,R[3],0;GLT$;
Y = GLT$[67,70] \ GLT$[67,70] = Y Using "&&&&"
If FYE = 0 And GLT$[67,68] = "00" Let Y = Y + 10000
If Y < B1 Goto SRCHDETAIL
If Y > F1 Goto ENDSRCHDETAIL
Mat Read #3,R[3],92;GLT0;
If Not(DETFLAG)
  Gosub PRNTPAGEHEAD
  Gosub PRNTACCTTOTAL
  DETFLAG = 99
End If 
Gosub PRNTPAGEHEAD
Gosub PRNTDETAIL
Goto SRCHDETAIL
ENDSRCHDETAIL: Rem end srchdetail
If Not(DETFLAG)
  If SUPRZ = 1 And H3[0] = 0 And H3[1] = 0 And H3[2] = 0 Return 
  Gosub PRNTPAGEHEAD
  Gosub PRNTACCTTOTAL
  Return 
End If 
Gosub PRNTPAGEHEAD
Gosub PRNTDETTOTAL
Return 
!
PRNTDETAIL: Rem PRINT DETAIL DATA
if j8
  tmp$ = tmp1$,GLT$[2,2],fdel$,GLT$[15,20],fdel$,GLT$[61,66],fdel$
  tmp$ = tmp$,GLT$[72,74],fdel$,rtrim$(GLT$[21,41]),fdel$
  If GLT0 < 0    
    tmp$ = tmp$,"",fdel$
    tmp$ = tmp$,GLT0 Using E1$,"-",fdel$
  Else 
    tmp$ = tmp$, GLT0 Using E1$,fdel$
	tmp$ = tmp$,"",fdel$
  End If 
  If GLT0 >= 0
    T3[1] = T3[1] + GLT0
  Else 
    T3[0] = T3[0] + GLT0
  End If 
  comd = 1
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
Print #0;"     ";GLT$[2,2];" ";GLT$[15,20];" ";GLT$[61,66];
Print #0;"  ";GLT$[72,74];"  ";GLT$[21,41];
If GLT0 < 0
  Print #0; Using E1$; Tab 65;GLT0;"-";
Else 
  Print #0; Using E1$;"  ";GLT0;
End If 
Print #0;""
If GLT0 >= 0
  T3[1] = T3[1] + GLT0
Else 
  T3[0] = T3[0] + GLT0
End If 
Return 
!
PRNTDETTOTAL: Rem PRINT TOTALS
if j8 return
!
Print #0;""
Print #0; Tab 22;"TOTAL";
If T3[1] + T3[0] <> H3[1] Print #0; Tab 41;"****";
Print #0; Using E1$; Tab 50;T3[1];" ";T3[0];"-"
Print #0;""
L = L + 2
Return 
!
CALCBEGBS: Rem....A,C,L TYPE ACCOUNTS OPENING BALANCE
For I = 0 To (C1[0] - 1)
  H3[0] = H3[0] + M3[I]
Next I
Return 
!
CALCBEGIS: Rem....E,I,O,R TYPE ACCOUNTS OPENING BALANCE
For I = C1[1] To (C1[0] - 1)
  H3[0] = H3[0] + M3[I]
Next I
Return 
!
CALCCURR: Rem CURRENT CALC
For I = C1[0] To C1[2]
  H3[1] = H3[1] + M3[I]
Next I
H3[2] = H3[0] + H3[1]
Return 
!
GETYTDINC: Rem....YTD  "N"  "NN" TYPE ACCOUNTS
For I = C1[1] To C1[2]
  H3[3] = H3[3] + M3[I]
Next I
Return 
!
!!GETCURRPERIOD: Rem get current period  #1
!!J0$ = "3000043205"
!!J2$ = "&&&&" \ J1 = CPER[0]
!!J5$ = "Enter Starting Current Accounting Period (MMYY)  0: end"
!!Gosub ISINPUT
!!If J4$ = "0" Goto OUTEND
!!CP1$ = J1 Using "&&&&"
!!PERIOD$ = CP1$[3,4],CP1$[1,2]
!!B1 = PERIOD$[1,4]
!!Gosub VERIFYPERIOD
!!Goto GETCURRPERIOD
!!C1[0] = X1
!!C1[1] = X3
!!CPER[0] = J1
!!Print Using "&&&&";@32,5;CPER[0];
!!CP1$ = CPER[0] Using "&&&&"
!!GETECURRPERIOD: Rem get ending current period
!!If Not(CPER[1]) Let CPER[1] = CPER[0]
!!J0$ = "3000 45105"
!!J2$ = "&&&&" \ J1 = CPER[1]
!!J5$ = "Enter Ending Current Account Period (MMYY)  0:end"
!!Gosub ISINPUT
!!If J4$ = "0" Goto OUTEND
!!CP2$ = J1 Using "&&&&"
!!PERIOD$ = CP2$[3,4],CP2$[1,2]
!!F1 = PERIOD$[1,4]
!!Gosub VERIFYPERIOD
!!Goto GETECURRPERIOD
!!If X3 <> C1[1] ! crossed fiscal year
!!  Print @0,23;'CL RB';"Accounting Periods Must Be in Same Fiscal Year";
!!  Signal 3,20
!!  Goto GETECURRPERIOD
!!End If 
!!CPER[1] = J1
!!C1[2] = X1
!!If C1[0] > C1[2] ! staring period greater than ending period
!!  Print @0,23;'CL RB';"Ending Current Accounting Period Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETCURRPERIOD
!!End If 
!!Print Using "&&&&";@51,5;CPER[1];
!!CP2$ = CPER[1] Using "&&&&"
!!Return 
!!GETREPTYPE: Rem prompt for detail or summary  #2
!!J0$ = "2 00013707"
!!J1$ = REPTYPE$
!!J5$ = "Enter Report Type:  D=Detail,  S=Summary"
!!Gosub ISINPUT
!!If J$ <> "D" And J$ <> "S" Goto GETREPTYPE
!!REPTYPE$ = J$
!!If REPTYPE$ = "D"
!!GETDETPRNTOPT: Rem detail print option
!!  Print @0,8;"   Detail Print Option"; Tab 45;"1=Journal Source 2=Posting Date"
!!  J0$ = "3000013708"
!!  J2$ = "#";J1 = DETPRNT
!!  J5$ = "Enter Detail Print Option: 1=Journal Source Code or 2=Posting Date"
!!  Gosub ISINPUT
!!  If J1 < 1 Or J1 > 2
!!    Print @0,23;'CL';"Invalid Selection!"; \ Signal 3,10 \ Print @0,23;'CL';
!!    Goto GETDETPRNTOPT
!!  End If 
!!  DETPRNT = J1
!!Else 
!!  Print @0,8;'CL';
!!  If Not(DETPRNT) Let DETPRNT = 2
!!End If 
!!Return 
!!GETACCTNUM: Rem prompt for account number range #3
!!J0$ = "3000082810"
!!J2$ = "########" \ J1 = SACCT
!!J5$ = "Enter Starting Account Number"
!!Gosub ISINPUT
!!SACCT = J1
!!J0$ = "3000 84810"
!!J2$ = "########" \ J1 = EACCT
!!J5$ = "Enter Ending Account Number"
!!Gosub ISINPUT
!!EACCT = J1
!!If SACCT > EACCT
!!  Print @0,23;'CL RB';"Ending Account Number Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETACCTNUM
!!End If 
!!Return 
!!GETSUPPRESS: Rem prompt to suppress zero account balances #4
!!J0$ = "6000 13712"
!!J2$ = "#" \ J1 = SUPRZ
!!J5$ = "Do you want to suppress print of zero account balances (Y/N)"
!!Gosub ISINPUT
!!SUPRZ = J1
!!Return 
!!GETDEPT: Rem prompt for dept range #5
!!J0$ = "3000022814"
!!J2$ = "##" \ J1 = DEPT[0]
!!J5$ = "Enter Starting Department Number"
!!Gosub ISINPUT
!!DEPT[0] = J1
!!J0$ = "3000 24814"
!!J2$ = "##" \ J1 = DEPT[1]
!!J5$ = "Enter Ending Department Number"
!!Gosub ISINPUT
!!DEPT[1] = J1
!!If DEPT[0] > DEPT[1]
!!  Print @0,23;'CL RB';"Ending Department Must Be Greater Than Starting";
!!  Signal 3,20 \ Goto GETDEPT
!!End If 
!!Return 
!!PRNTSCRN: Rem print screen headings
!!Print @0,4;'CE';
!!Print @0,4;'CE';@29,4;'BR';"STARTING";'ER';@49,4;'BR';"ENDING";'ER';
!!Print @0,5;"1> ACCOUNTING PERIOD (MMYY)";
!!Print @0,7;"2> REPORT TYPE "; Tab 45;"D=detail S=Summary";
!!Print @0,10;"3> ACCOUNT NUMBER ";
!!Print @0,12;"4> SUPPRESS ZERO ACCT BALANCE";
!!Print @0,14;"5> DEPARTMENT";
!!Return 
!!PRNTSCRNDATA: Rem print screen data
!!Print Using "&&&&";@32,5;CPER[0];@51,5;CPER[1];
!!Print @37,7;REPTYPE$;
!!If REPTYPE$ = "D"
!!  Print @0,8;"   Detail Print Option"; Tab 45;"1=Journal Source 2=Posting Date"
!!  Print Using "#";@37,8;DETPRNT;
!!End If 
!!Print Using "########";@28,10;SACCT;@48,10;EACCT;
!!Print @37,12;
!!If SUPRZ Print "Y"; Else Print "N";
!!Print Using "##";@28,14;DEPT[0];@48,14;DEPT[1];
!!Return 
!
VERIFYPERIOD: Rem entered account period
If PERIOD$[1,2] < "00" Or PERIOD$[1,2] > "99" Goto PRNTBADDATE
If PERIOD$[3,4] < "00" Or PERIOD$[3,4] > "12" Goto PRNTBADDATE
N = Int(D3 / 100)
Q1 = PERIOD$
For X = 1 To D5
  If X <> 13 Or X <> 26 Or X <> 39
    If A3[X] = Q1 Goto PERIODFND
  End If 
Next X
comd = 1
!!Print @0,23;'CL RB';"Accounting Period Not Found "; \ Signal 3,30
!!Print @0,23;'CL';
Return 
!
PERIODFND: X1 = X
If X1 < N + 2 Let X3 = 0
If X1 > N + 1 Let X3 = N + 2
If X1 > (N * 2) + 2 Let X3 = (N * 2) + 3
Return
!
PRNTBADDATE: Rem  print invalid date entered
comd = 2
!!Print @0,23;'CL RB';"Invalid Accounting Period "; \ Signal 3,15
!!Print @0,23;'CL';
Return 
!
Rem {begin call.input.i}
!!ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!!Call "Input",J1,J$,J0$,J1$,J4$,J5$
!!Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
!
Rem {end call.input.i}
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Call programdump("tmp/la550se!","")                        
Goto ERR_MSG ! Error 10000                                 
Return ! End

ERR_MSG: ! send message                                    
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = e$   
Call Programdump()
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)                            
Call SetOutPut(e$,rstr$)                                   
End                               


ENDOFREPORT: Rem end of printing the report
!!If SRCPRT
!!  Print @0,23;'CL';"Press <CR> to end "; \ Input Len 1;""J$
!!End If 
!!Print 'CS';"-gl635-"; Tab 20;"GENERAL LEDGER REPORT #1 BY DEPARTMENTS"
!!Print Using "####  ";@0,2;'CE';"CLIENT";@10,2;S;C$[11,50];
!!Gosub PRNTSCRN
!!Gosub PRNTSCRNDATA
!!If Err 0 Rem
!!Close #3
!!If Err 0 Gosub ERR_ESCAPE
!!Goto SELOPT
!!Stop 

OUTEND: Rem EXIT PROGRAM
! dx close
if not (pageflag)
If j8 ! dx xml ! browser
	Call addtostr(e$,rstr$,esdel$) !end section
	Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If
if not(j8)
	Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
	let returnstatus=0
	If Eflag>0
		ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
		tmp$=""
	Endif
	if not(eflag)
		returnstatus=0
		if message$="" let message$="Complete "
	endif

	call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	call AddToStr(e$,rstr$,WebStr$)
	call SetOutPut(e$,rstr$)
	try Call dxclose() else rem
endif
endif
ELSE
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program


