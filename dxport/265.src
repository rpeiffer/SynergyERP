! >>> Program 265
!
! description Back Order Order Conversion
!
! loadsave -w -n 100,10 -o prog/dxport/265.dl4 src/265.src
!
! 1.0 mm/dd/yyyy change??
!
! ERP Assistant Enabled
!
include "src/copyright.inc" ! dx
Rem MX265 - PRODUCT BACK ORDER NUMBER CONVERSION REPORT
Rem AUTHOR: DAVE DEVITO  MAY  1990
Rem LAST UPDATE: jlp 4/28/97 typo on line 857, cct102611
!              zyc 07/05/00 cct137591 add prompt to exit
Rem BEDIT Version: 2.2 OBJECT CODE     Created: APR 27, 2001  15:00:40
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx2/mx265.src (univ2) [kag] {48529}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault
Declare External Function OpenFile,PDate$,getuidrec,JDate$
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub InpBuf,String,Time,programdump
Declare External Sub ERPCronSuccess
Declare External Function GetParameter$
! Option Default Dialect IRIS1

Com 1%,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],BASE,FIELD,2%,C4[8]
If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Dim L1$[60],L2$[20],C1$[30],B0$[12],A$[156],K5$[50],Q$[50]
Dim 1%,L3[3],H4[2],J9[2],H3[1],S8,S9,A1[3],2%,A2[3],M1,B2[5]
Dim 2%,L2[1],L4[3],L6[5],H0[12],H5[5],D8,D1,T8,N1,O9[12],S1[1],T1[1]
Dim 3%,L5[3],B0[10],T2[7],T3[19],C8,L7[9],L7$[6],M1$[40],B3[3],B2$[12]
Dim J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8],U5$[10],P9$[50]
Dim UNIT$[4]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20],K3$[50],K4$[50]
Dim K1$[50],K2$[20],X$[10],T9$[26],S1$[118],J9$[50],S2$[20],S3$[25]
Dim 2%,B[24],S0$[36]
Dim msg$[100],htmp$[800]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
!Try 
!call dxopen() ! may not need this! NEEDS FOR DXTEST RUN!!
!Else
	Rem
!End try
call env(1,"ERP_FROM_CRON",tmp$) \ erpCron = tmp$
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
COID=IntCo 
Close #1 ! as getsession opens READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Try Close #9  Else Rem ! dxblock ALWAYS has #9 open as sortfile
For J = 2 To 15
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,Abs(J1);J$;
  If J <= 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Read #1,3;J1$;
Mat Read #1,0,100;J8$;
Read #1,0,112;D8;
Data "-1888","-1840","-1808","-1792","-1728","-1856","-1872","-1968","-1920","-2176","-1824","-2320","-2128","2592"
Mat Read #1,19,50;P9$;
Read #1,20,2;S9;
If S9 <> 0 Goto L_8900
tmp$ = GetParameter$("RN265")
if erpCron tmp$ = "" ! running from cron - of course we want to do it!
X$="P" \ if tmp$<>"" Let X$="E"
u5$=X$
If U5$ = "E" Goto THEEND
L_900: S2 = 1
!Print 'CS'
!Print @0,0;"- MX265 -";@25,0;"BACK ORDER # CONVERSION RPT"
!L_910: Print @3,5;"Print  S: summary,  D: detail or  E: exit  ";
!Input ""U5$
u5$=UCase$(RTrim$(GetParameter$("RPTTYP")))
F8 = 99
If U5$ = "S" Let F8 = 0 
tmp$ = GetParameter$("CLRFLE")
clrfle=0 \ if tmp$<>"" Let ClrFle=1
!If Err 0 Let J8 = Spc(8)
J8 = 0 ; j2=0 
Try J9 = Chf(0) Else Let J8=49
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 62 \ If J8 Let J9 = 14
If J8 ! xml to browser
	! <section>
		tmp$ = bsdel$,"265",fdel$,rdel$
		Call addtostr(e$,rstr$,tmp$)
		Tmp$="CUST #",fdel$,"CUSTOMER NAME",fdel$,"ORIG ORDER",fdel$
		tmp$=tmp$,"NEW ORDER",fdel$,"ORD DATE",fdel$,"REL DATE",fdel$
		tmp$=tmp$,"MESSAGE",fdel$
		If F8 ! detail
			tmp$=tmp$,"LNE",fdel$
			Tmp$=tmp$,"ITEM CODE",fdel$,"DESCRIPTION",fdel$,"DESCRIPTION2",fdel$
		
			tmp$=tmp$,"QTY ORD",fdel$,"QTY BO",fdel$
			tmp$=tmp$,"QTY REL",fdel$,"UM",fdel$
		Endif
		call addtostr(e$,rstr$,tmp$+rdel$)
Endif
J1 = 99
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 
L_960: Rem
! Print 'CS'
K4$ = " ",K4$
L_1010: Search #15,3,1;K4$,R1,E
If E Goto OUTEND
Mat Read #15,R1,0;B2;
Mat Read #15,R1,24;B3;
Mat Read #15,R1,48;B2$;
If Not(F8) If K4$[13,13] = "L" Goto L_1010
Gosub L_5800 ! header
Gosub L_6000 ! cust
Gosub L_6100 ! prod
If K4$[13,13] = "H" Gosub L_5000 ! order head
If K4$[13,13] = "L" Gosub L_5200 ! line 
Goto L_1010
L_2000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_2060
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_2180
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_2180
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_2180
L_2060: !
L_2140: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,Rstr$
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_2180: Return 
L_5000: Rem PRINT HEADING INFO ONLY
If J8 ! xml
	tmp$=LTrim$(B2[2] Using "######"),fdel$,RTrim$(C1$),fdel$
	tmp$=tmp$,LTrim$(B2[0] Using "######"),fdel$
	tmp$=tmp$,LTrim$(B2[1] Using "######"),fdel$
	X2 = B2[3] \ Gosub L_7700
	tmp$=tmp$,x$,fdel$
	X2 = B2[4] \ Gosub L_7700
	tmp$=tmp$,x$,fdel$
	tmp1$=" "
	If B3[3] > 0 let tmp1$="ORDER ",B2[0] Using "######"," HAS BEEN DELETED ***"
	tmp$=tmp$,tmp1$,fdel$
	let htmp$=tmp$;hord=b2[0]
	if not(f8) call addtostr(e$,rstr$,tmp$+rdel$) ! as no line detail
Else
	If F8 If J1 > 7 Print #0; \ J1 = J1 + 1
	Print #0; Using "######"; Tab 2;B2[2];
	Print #0; Tab 15;C1$;
	Print #0; Using "######"; Tab 51;B2[0];
	Print #0; Using "######"; Tab 60;B2[1];
	X2 = B2[3] \ Gosub L_7700
	Print #0; Tab 71;X$;
	X2 = B2[4] \ Gosub L_7700
	Print #0; Tab 86;X$;
	If B3[3] > 0 Print #0; Using "ORDER ###### HAS BEEN DELETED "; Tab 98;B2[0];"***";
	Print #0;" "
Endif
Return 
L_5200: Rem DET LINE PRINT
CNVTU[0] = 0 \ CNVTU[1] = PFU1[8] \ CNVTU[2] = 1
For X = 0 To 2
  CNVTA = B3[X]
  Gosub L_2000
  B3[X] = AMOUNT
Next X
If PFU1[8] > 0 Mat Read #6,PFU1[8],10;UNIT$;
If PFU1[8] = -1 Let UNIT$ = "CWT "
IF PFU1[8] = -3 LET UNIT$ = "LB  "
If J8 ! xml ! add to header data string
	if hord=b2[0] let tmp$=htmp$ ! can repeat lines!!
	tmp$=tmp$,LTrim$(B2[5] Using "###"),fdel$
	tmp$=tmp$,RTrim$(B2$),fdel$,RTrim$(A$[9,38]),fdel$,RTrim$(A$[63,92]),fdel$
	tmp$=tmp$,LTrim$(B3[0] using "######.##"),fdel$
	tmp$=tmp$,LTrim$(B3[1] using "######.##"),fdel$
	tmp$=tmp$,LTrim$(B3[2] using "######.##"),fdel$
	tmp$=tmp$,RTrim$(Unit$),fdel$
	call addtostr(e$,rstr$,tmp$+rdel$) ! as end of detail
	!Try call programdump("/tmp/265d","") Else Rem
Else
	Print #0; Using "LINE ### "; Tab 7;B2[5];
	Print #0; Tab 17;"PRODUCT ";B2$;
	Print #0; Tab 32;A$[9,38];

	Print #0; Using "QTY ORD ######.##"; Tab 65;B3[0];
	Print #0; Using "QTY B/O ######.##"; Tab 89;B3[1];
	Print #0; Using "QTY REL  ######.##  "; Tab 108;B3[2];UNIT$;
	If P9$[26,26] <> "Y" Goto L_5380
	Print #0;"" \ J1 = J1 + 1
	Print #0; Tab 32;A$[63,92];
	L_5380: Print #0;" "
Endif
Return 
L_5800: Rem HEADINGS ROUTINE
If J8 Return ! not for xml
J1 = J1 + 1 \ If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 265 - ";T9$;
Print #0; Tab 47;"ORDER NUMBER CONVERSION  REPORT"
If F8 Print #0; Tab 55;"DETAIL  "
If Not(F8) Print #0; Tab 55;"SUMMARY "
Print #0;"\15\";
Print #0; Tab 52;"OLD"; Tab 61;"NEW"
Print #0; Tab 1;"CUSTOMER ";
Print #0; Tab 14;"NAME       ";
Print #0; Tab 51;"ORDER #";
Print #0; Tab 60;"ORDER #";
Print #0; Tab 70;"ORDER DATE ";
Print #0; Tab 85;"REL. DATE";
Print #0;" "
Print #0;"\15\";
Return 
L_6000: Rem READ CUSTOMER
K5$ = " ",K5$
K5$ = B2[2] Using "######"
Search #4,2,1;K5$,R4,E
If E Let C1$ = "*** NOT  ON FILE *** " \ Goto L_6060
Mat Read #4,R4,30;C1$;
L_6060: Return 
L_6100: Rem READ PRODUCT
K5$ = " ",K5$ \ A$ = " ",A$
K5$[1,12] = B2$[1,12]
Search #5,2,1;K5$,R4,E
If E Let A$[9,38] = " **** NOT ON FILE **** " \ Goto L_6160
Mat Read #5,R4,0;A$;
Mat Read #5,R4,256;A;
Mat Read #5,R4,512;PFU1;
Mat Read #5,R4,554;PFU2;
L_6160: Return 
L_7700: Rem *DATE  X2 TO X$ V1.0
X$ = " ",X$ \ X$[10] = ""
X$=PDATE$(X2)
Return
! old convert date
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8000: Rem CLEAR ! MUST BE SENT IN THE BEGINNING - NO AFTER THE FACT POSSIBLE
!L_8010: Print @5,20;'CE BR';"CLEAR";'ER';" OUT ORDER NUMBER CONVERSION FILE (YES/N) ";
!Input ""U5$
!If U5$ = "!" Goto L_8065
!If U5$ = "YES" Goto L_8050
!If U5$ <> "N" Goto L_8010
!Return 
L_8050: Rem "===
!If J8 Print @0,22;"CANNOT CLEAR IF SCREEN OUTPUT"; \ Signal 3,20 \ Return 
L_8065: K4$ = " ",K4$
L_8070: Search #15,3,1;K4$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
Search #15,5,1;K4$,R1,E \ If E Gosub ERR_SEARCH
E = 3 \ Search #15,1,0;K4$,R1,E \ If E Gosub ERR_SEARCH
Goto L_8070
L_8900: Rem IN PROGRESS
Message$="BACK ORDERS RELEASE IN PROGRESS"
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)

	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
OUTEND: Rem EXIT PROGRAM
Try Close #0 Else REM
If ClrFle Gosub L_8000
! call programdump("/tmp/265b","")
If j8 ! dx xml (TO BROWSER )
  
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  !External Lib "libgeneral.lib"
  !Declare External Sub XMLtoExcel
  !Call XMLtoExcel(e$,"265.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
Else
	tmp1$="OK - Report Complete"
	Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
End If 
call ERPCronSuccess()
try Call dxclose() else rem
End
THEEND: tmp1$="OK - Report Not Run"
Call setoutput(e$,rstr$,1,tmp1$) !1 flag puts 0 status section, puts </page> in
try Call dxclose() else rem
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
Goto ERR_MAIN
ERR_MAIN: Rem
! If Err 0 Rem
e$ = msg$
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}