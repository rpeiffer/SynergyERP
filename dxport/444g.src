! >>> Program 444g
!
! description Salesman Ranking
!
! loadsave -w -n 100,10 -o prog/dxport/444g.dl4 src/444g.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 31, 2001  16:40:14
Rem /usr/acct/r97//usr/acct/kag/work/r97/mx/mx444g.src (univ2) [kag] {63099}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX444G - SALESMAN RANKING REPORT  (for Morriestte)
Rem AUTHOR: SUH       JAN 5, 1996
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
Com 1%,MONTH_[4],MTH$[108]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim C1$[118]
Dim 1%,PGP,J0,J2,J3,J4,J5,J6,J8,J9[1],X1,TYFLAG,RANK
Dim 2%,C1[12],SCALE
Dim 3%,S1[12,2],S2[12,2],Z1[12,2],Z2[12,2],GP1[12],GP2[12],LP[12]
Dim 3%,TY[12,1],LY[12,1],GPPCT,SALES,GPD,GPP,TOTS,TOTGP
Dim J0$[10],J$[75],J1$[75],J2$[40],J4$[75],J5$[75],J6$[40],J7$[75],J8$[8],J9$[75]
Dim 1%,I,F,C0[1],TABS[12],ARMONTH,BOYMONTH,2%,X2,3%,J,X3,T8[12],T9[12,4]
Dim 4%,J1,WK,TOTGPP
Dim K1$[50],K2$[4],K3$[20],X$[10],T9$[26],U5$[117],Z1$[1],PJ8$[8],PJ1$[40]
Dim GPP$[12],K9$[50],SK9$[50],WK$[50],SORTK9$[50],WORKK9$[50]
Def FNR(X) = Sgn(X) * (Int(Abs(X) + .5))
For J = 2 To 3
  Read J1
  If Not(J1) Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Read #1,3;PJ1$;
SCALE = 1;U5$ = "-",U5$
Mat Read #1,0,120;ARMONTH; \ Mat Read #1,51,74;BOYMONTH;
Mat Read #1,0,100;PJ8$;
Data "1824","2048"
If Err 0 Let PJ8 = Spc(8)
PJ8 = 0 \ PJ9 = Chf(0) 
If Err 0 Gosub ERR_TRAP
If PJ8 If PJ8 <> 49 Goto ERR_TRAP
PJ9 = 58 \ If PJ8 Let PJ9 = 21
PJ1 = 70
!
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If PJ8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"444g",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("s1",tmp$) \ S1=tmp$ ! starting salesman
Call dxget("s2",tmp$) \ if tmp$="" let S2=999 else S2=tmp$ ! ending salesman
Call dxget("armth",tmp$) \ if tmp$="" let ARMTH=ARMONTH else ARMTH=tmp$ ! report month
Call dxget("tyflag",tmp$) \ TYFLAG=tmp$ ! year, 1=this, 2=last
Call dxget("rankonly",tmp$) \ RANKONLY=tmp$ ! rank, 1=dollars & rank, 2=rank only
Call dxget("zerosup",tmp$) \ if tmp$="" let ZEROSUP=0 else ZEROSUP=1 ! suppress profit
!!!  dx end
!
if S1<0 or S1>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
!
if S2<S1 or S2>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
!
If ARMTH < 1 Or ARMTH > 12 let e$="Invalid month, must be between 1 and 12!" \ error 10000
!
if TYFLAG=2 let TYFLAG=0 ! last year
!
RANKONLY=RANKONLY-1 ! 0= dollars & rank, 1=rank only
!
If PJ8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

! - Gosub L_15000 ! screen layout
! - For Y = 1 To 5 ! input 
! -   On Y Gosub L_16000,L_16100,L_16200,L_16300,L_16400
! - Next Y
! - L_1300: Print @10,23;'CL';"ENTER #:field to edit,  P: print, or  E: end ";
! - Input ""Z1$
! - If Z1$ = "P" Goto L_1900
! - If Z1$ = "E" Goto OUTEND
! - Y = Z1$
! - If Y >= 1 And Y <= 5
! -   If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! -   On Y Gosub L_16000,L_16100,L_16200,L_16300,L_16400
! -   If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - End If 
! - Goto L_1300
!
! *** Sort Section
L_1900: 
! - Print @0,23;"SORTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = " ",K1$ \ K1$ = S1 Using "###" \ K3$ = S2 Using "###"
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #2,3,1;K1$,R1,E
If E Goto L_3000
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_3000
Mat S1 = Zer \ Mat S2 = Zer \ SALES = 0;GPD = 0
Mat Read #3,R1,4;S1;
Mat Read #3,R1,238;S2;
If TYFLAG
  SALES = S1[ARMTH,1]
  GPD = S1[ARMTH,1] - S1[ARMTH,2]
Else 
  SALES = S2[ARMTH,1]
  GPD = S2[ARMTH,1] - S2[ARMTH,2]
End If 
If ZEROSUP If (SALES = 0) And (GPD = 0) Goto L_2000
GPP = 0
If SALES Let GPP = GPD / SALES * 100
If SALES < 0 And GPD < 0 Let GPP = GPP * (-1)
GPP$[1,12] = GPP Using "-----#.#####"
GPP = GPP$[1,12]
K9$ = " ",K9$
K9$[1,3] = "D  "
K9$[4,15] = (99999999.99 - SALES) Using "#########.##"
K9$[16,18] = K1$[1,3]
Search #9,4,1;K9$,R1,E
If E Let e$ = "syserrorfile 444g sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
K9$ = " ",K9$
K9$[1,3] = "GPD"
K9$[4,15] = (99999999.99 - GPD) Using "#########.##"
K9$[16,18] = K1$[1,3]
Search #9,4,1;K9$,R1,E
If E Let e$ = "syserrorfile 444g sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
K9$ = " ",K9$
K9$[1,3] = "GPP"
K9$[4,15] = (99999.99999 - GPP) Using "######.#####"
K9$[16,18] = K1$[1,3]
Search #9,4,1;K9$,R1,E
If E Let e$ = "syserrorfile 444g sortfile mode (m)=4 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",K9$ \error 10000
Goto L_2000
!
! *** Process Section
L_3000: Rem =======================
!
! *** Process Section
if PJ8 ! dx xml headings
  tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$
  tmp$=tmp$,"MONTH",fdel$
  if RANKONLY 
    tmp$=tmp$,"SALES RANK",fdel$,"GP PR RANK",fdel$
    tmp$=tmp$,"GP PR % RANK",fdel$
  else
    tmp$=tmp$,"TOTAL SALES",fdel$,"SALES RANK",fdel$
    tmp$=tmp$,"GP PR $",fdel$,"GP PR $ RANK",fdel$
    tmp$=tmp$,"GP PR %",fdel$,"GP PR % RANK",fdel$
  endif
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K9$ = " ",K9$
K9$[1,3] = "D  " \ RANK = 0
L_3020: Search #9,3,1;K9$,R9,E
If E Goto L_4000
If K9$[1,3] <> SK9$[1,3] Let RANK = 0
SALES = 0;GPD = 0;GPP = 0
RANK = RANK + 1
WK = K9$[4,15]
WK$ = " ",WK$
If K9$[1,3] = "GPP"
  WK$[1,12] = 99999.99999 - WK Using "-----#.#####"
Else 
  WK$[1,12] = 99999999.99 - WK Using "--------#.##"
End If 
WK$[13,15] = RANK Using "###"
SORTK9$[1,3] = K9$[16,18]
SORTK9$[4,6] = K9$[1,3]
SORTK9$[7] = WK$
Search #9,4,1;SORTK9$,R9,E
SK9$[1,3] = K9$[1,3]
Goto L_3020
!
L_4000: Rem =================== print detail line
Gosub L_5800
K9$ = " ",K9$
L_4030: For X = 0 To 5 \ P[X] = 0 \ Next X
For X = 1 To 3
  Search #9,3,1;K9$,R1,E
  If E Or K9$[1,3] = "D  " Goto L_9100
  If K9$[4,6] = "D  "
    P[0] = K9$[7,18];P[1] = K9$[19,21]
  End If 
  If K9$[4,6] = "GPD"
    P[2] = K9$[7,18];P[3] = K9$[19,21]
  End If 
  If K9$[4,6] = "GPP"
    P[4] = K9$[7,18];P[5] = K9$[19,21]
  End If 
Next X
K2$ = " ",K2$ \ C1$ = " ",C1$
K2$[1,3] = K9$[1,3]
Search #2,2,1;K2$,R2,E
If E
  C1$[1,10] = "NOT FOUND "
  Goto L_4240
End If 
Mat Read #2,R1,0;C1$;
L_4240: Gosub L_5000
Goto L_4030
!
L_5000: Rem PRINT LINE
if PJ8 ! dx xml
  tmp$=K9$[1,3],fdel$,rtrim$(C1$[1,30]),fdel$
  tmp$=tmp$,ARMTH using "##",fdel$
  if RANKONLY
    tmp$=tmp$,P[1] Using "###",fdel$
    tmp$=tmp$,P[3] Using "###",fdel$
    tmp$=tmp$,P[5] Using "###",fdel$
  else ! dollars & rank
    tmp$=tmp$,P[0] Using "----,---,--#.##",fdel$
    tmp$=tmp$,P[1] Using "###",fdel$
    tmp$=tmp$,P[2] Using "----,---,--#.##",fdel$
    tmp$=tmp$,P[3] Using "###",fdel$
    tmp$=tmp$,P[4] Using "---#.#####",fdel$
    tmp$=tmp$,P[5] Using "###",fdel$
  endif
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  goto PrintDetailExit
endif
!
Print #0;K9$[1,3];
Print #0; Tab 5;C1$[1,30];
If Not(RANKONLY) Print #0; Using "----,---,--#.##"; Tab 36;P[0];
Print #0; Using "###"; Tab 54;P[1];
If Not(RANKONLY) Print #0; Using "----,---,--#.##"; Tab 59;P[2];
Print #0; Using "###"; Tab 77;P[3];
If Not(RANKONLY) Print #0; Using "---#.#####"; Tab 82;P[4];
Print #0; Using "###"; Tab 95;P[5]
!
PrintDetailExit:
PJ1 = PJ1 + 1
TOTS = TOTS + P[0];TOTGP = TOTGP + P[2]
!
L_5800: Rem HEADINGS ROUTINE
if PJ8 return ! dx xml
!
If PJ1 + 1 < PJ9 Return 
! - If PJ2 If PJ8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If PJ2 If Not(PJ8) Print #0;"\14\";
PJ2 = PJ2 + 1 \ PJ1 = 8
If Not(PJ8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;PJ8$; Tab (64 - Len(PJ1$) / 2);PJ1$; Tab 120;"PAGE";PJ2
Print #0;" "
Print #0;" - 444G - ";T9$;
If RANKONLY Goto L_6000
Print #0; Tab 50;"S A L E S   S U M M A R Y"
Print #0;" "
Print #0; Using "FOR  MONTH  ##"; Tab 55;ARMTH
Print #0;" "
Print #0;"SALESMAN  NAME";
Print #0; Tab 39;"TOTAL SALES   RANK";
Print #0; Tab 66;"GP PR $   RANK";
Print #0; Tab 85;"GP PR %  RANK"
Print #0;" "
Return 
!
L_6000: Print #0; Tab 50;"SALESMAN  RANKING  REPORT"
Print #0;" "
Print #0; Using "FOR  MONTH  ##"; Tab 55;ARMTH
Print #0;" "
Print #0;"SALESMAN  NAME";
Print #0; Tab 50;"SALES RANK";
Print #0; Tab 73;"GP PR RANK";
Print #0; Tab 91;"GP PR % RANK"
Print #0;" "
Return 
!
! - L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
! - J0 = J0$[1,1]
! - J6 = J0$[2,2]
! - J2 = J0$[3,4]
! - J3 = J0$[5,6]
! - J4 = J0$[7,8]
! - J5 = J0$[9,10]
! - If J0 < 3 Let J2$ = " ",J2$
! - If J1$ = "" Let J1$[1,J3] = " ",J1$
! - If J0 <> 3 If J0 <> 4 Goto L_7070
! - If J0 = 3 Let J2$ = "#",J2$
! - If J0 = 4 Let J2$ = "-",J2$
! - J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
! - L_7070: J1$[J3 + 1] = ""
! - If J0 < 3 Goto L_7105
! - If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
! - If J0 = 6 Goto L_7105
! - If J0 <> 5 Goto L_7100
! - J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6
! - J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
! - L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
! - If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
! - L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
! - Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
! - Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
! - Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
! - If Len(J4$) <= J3 Goto L_7130
! - J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
! - L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
! - If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
! - J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
! - L_7145: For J8 = 1 To Len(J9$)
! -   If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
! - J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
! - L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7265,L_7330 \ Stop 
! - L_7165: J$ = J0$[2,2],J$
! - If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
! - If J0 = 2 Let J$[1,Len(J9$)] = J9$
! - Goto L_7345
! - L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
! -   If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
! -   If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
! -   If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
! -   If J9$[J8,J8] = " " Goto L_7235
! -   If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
! -   J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
! - L_7210: If J9$[J8,J8] <> "." Goto L_7250
! -   If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
! -   If J9 Goto L_7250
! -   J9 = 1
! - L_7230: If J9 Let J9 = J9 + 1
! -   If Not(J9) Let J9[1] = J9[1] + 1
! - L_7235: Next J8
! - If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
! - L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
! - If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
! - J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
! - L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
! - If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
! - L_7260: Gosub L_7600 \ Goto L_7105
! - L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
! - J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
! - If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
! - If J9[1] < 1 Goto L_7325
! - On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
! - On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
! - Goto L_7325
! - L_7285: If J9[1] > 30 Goto L_7325
! - L_7290: If J9[1] > 31 Goto L_7325
! - Goto L_7315
! - L_7300: If J9[1] > 29 Goto L_7325
! - If Not(Fra(J9[2] / 4)) Goto L_7315
! - If J9[1] > 28 Goto L_7325
! - L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
! - J$ = X$ \ J3 = 8 \ Goto L_7345
! - L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
! - L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
! - If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
! - J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
! - L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
! - L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
! - Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
! - Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
! - Print @0,Msc(34) - 1;'CL'; \ Return 
! - L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - Return 
! - X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
! - X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
! - Return 
OUTEND: Rem EXIT ROUTINE
! dx close
If PJ8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
L_9100: Rem END OF THIS RANGE
If RANKONLY
  ! - If PPJ8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
  Goto OUTEND
End If 
if PJ8=0
  Print #0;" "
  Print #0; Tab 10;"TOTAL";
  Print #0; Using "----,---,--#.##"; Tab 36;TOTS;
  Print #0; Using "----,---,--#.##"; Tab 59;TOTGP;
  TOTGPP = TOTGP / TOTS * 100
  Print #0; Using "---#.#####"; Tab 82;TOTGPP
  ! - If PJ8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
endif
Goto OUTEND
!
! - L_15000: Rem ================================================ screen
! - Print 'CS'
! - Print @0,0;"MX444G";@26,0;"SALESMAN RANKING REPORT"
! - Print @18,5;"-STARTING-";@33,5;"-ENDING-"
! - Print @1,7;"1> SALESPERSONS"
! - Print @1,11;"2> ENTER MONTH FOR REPORT:  "
! - Print @1,13;"3> SELECTIONS:  1: THIS YEAR,  2: LAST YEAR  "
! - Print @1,15;"4> PRINT   1: Dollars & Rank, or  2: Rank Only  "
! - Print @1,17;"5> DO YOU WANT ZERO SALES/GROSS PROFIT  SUPRESS ? (Y/N) "
! - Return 
! - L_16000: Rem =============================================== get range
! - L_16020: J5$ = "<CR> FOR FIRST" \ J0$ = "1 00032407" \ J1$ = "   "
! - Gosub L_7000 \ S1 = J$
! - J5$ = "<CR> FOR LAST ";J0$ = "1 00033607" \ J1$ = "999"
! - Gosub L_7000 \ S2 = J$
! - If S1 > S2 Let J7$ = "ENDING VALUE MUST BE GREATER THAN OR EQUAL TO STARTING VALUE!  " \ Gosub L_7600 \ Goto L_16020
! - Return 
! - L_16100: J5$ = "<CR> FOR DEFAULT A/R MONTH" \ J0$ = "3 00022811" \ J1 = ARMONTH
! - Gosub L_7000 \ ARMTH = J1
! - If ARMTH < 1 Or ARMTH > 12 Let J7$ = "INVALID A/R MONTH ENTRY ! " \ Gosub L_7600 \ Goto L_16100
! - Return 
! - L_16200: J5$ = " ",J5$
! - J0$ = "2 00014613" \ J1$ = "1"
! - Gosub L_7000
! - If J$ <> "1" And J$ <> "2" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_16200
! - TYFLAG = 0
! - If J$ = "1" Let TYFLAG = 1
! - Return 
! - L_16300: J5$ = " ",J5$
! - J0$ = "2 00014815" \ J1$ = "1"
! - Gosub L_7000
! - If J$ <> "1" And J$ <> "2" Let J7$ = "INVALID ENTRY" \ Gosub L_7600 \ Goto L_16300
! - RANKONLY = 0
! - If J$ = "2" Let RANKONLY = 1
! - Return 
! - L_16400: J5$ = " ",J5$
! - J0$ = "6 00015817" \ J1 = 0
! - Gosub L_7000
! - ZEROSUP = 0 \ If J1 = 1 Let ZEROSUP = 1
! - Return 
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
