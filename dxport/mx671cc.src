! mx671cc.dl4
!
! supporting library of product cost change for lb based costs/prices
!
! 1.0
!
! loadsave -w -n 100,10 -o prog/dxport/mx671cc.dl4 src/mx671cc.src
!
include "src/copyright.inc"
Rem MX671CC - CWT COST CHANGE - SPROD Version
Rem cct 163898 - Central Lewmar
Rem Retain previous Display cost - Main Prod file
! When it returns to mx671e - will have the recalc'd cost
! for writing back to SPROD File
! "RECALC IN CERTAIN FILES: Special/Contract Price, Rebates, AltVend
! "add 02/06 - POLINES
! "there are more - but for now just those 3
Rem BEDIT Version: 2.2 OBJECT CODE     Created: DEC  3, 2008  16:05:14
Rem /w2/papermaster/r2005//usr/acct/mary/work/custom/xrev9/mx671cc.src (univ2) [mary] {30932}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
include "src/inc/fileprod.inc" ! product

External Lib "libprodconv.lib"
Declare External Function ConvProdAmount
!
External Lib "libgeneral.lib"
Declare External Sub SubErr,CreateNetStatus
!
External Lib "ubsfunc.dl4"
Declare External Function OpenFile,chkaltitem$,FormatDate$
Declare External Sub UserCntrl

External Lib "mx671ccw.dl4"
Declare external sub Whsecchg

Declare Intrinsic Function FindChannel
Declare Intrinsic Sub InpBuf,Logic,String,programdump

External Sub Prodcchg(e$,IntCo,ctlc,prod$,ProdRec,oldpr. as prod, newpr.as prod)

Try 

!Enter A$,PFU1[],A[],PFU2[],OLDA[],B[],C4[],PF_LOAD2,PRPARC[],PFCO[],PLC[],PFN[],PRREDI[]
Dim K1$[40],P9$[50],FLE$[20],msg$[100]
Dim 1%,C0[13],SPO,PFU1[20]
Dim 1%,CNVTU[2],FLAG,CH_FILE,COID
Dim 2%,X2[9]
Dim 3%,CNVTA,AMOUNT,R[99]
Dim 3%,HLDCOST[20],HLDA[6],HLDPRC[10]
Dim 1%,SPCUM[1],C3[2],3%,SPC5[4]
Dim 1%,RBUM[1],RB[2],RBL1[1],3%,RB5[1]
Dim 2%,AV2[6],3%,AV3[3]
Dim 3%,PCT2[5],KEYPOC$[50]
Dim 1%,L1[5],2%,L2[2],3%,PL[5],PL4[23],PL5[9],PL6[9],L3[5]
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
Mat Read #ctlc,19,50;P9$;
pfu1[11]=newpr.UMCostDefault;pfu1[12]=newpr.UMPriceDefault
If PFU1[11] = -1 Or PFU1[11] = -3 Goto STARTCHG
If PFU1[12] = -1 Or PFU1[12] = -3 Goto STARTCHG
Goto OUTEND
STARTCHG: Rem "
! PROD$ = A$[140,151]
If PFU1[11] <> -1 And PFU1[11] <> -3 Goto STARTPRC
!Print @0,23;'CL';"CONVERTING PRODUCT FILE COSTS"; \ Signal 3,0
! Costs are done in sprodm!

STARTPRC: Rem "Price Change - Other files?
If PFU1[12] <> -1 And PFU1[12] <> -3 Goto OUTDONE
!Print @0,23;'CL';"CONVERTING PRODUCT FILE PRICES"; \ Signal 3,0
! prices are submitted in prodm.dl4

OUTDONE: Rem " See if whse needs changing
If P9$[32,32] = "Y" ! " whse pricing!!
  !Call "MX671CCW",A$,PFU1[],A[],PFU2[],OLDA[]
  call whsecchg(e$,IntCo,ctlc,prod$,ProdRec,oldpr.,newpr.)
End If 
! Print @0,23;'CL';"CONVERTING SPECIAL/CONTRACT FILE "; \ Signal 3,0
CH_FILE = findchannel() ! 89

Read #ctlc,88,1936;FLE$[1,16];
Open #CH_FILE,FLE$
K1$ = " ",K1$
SPCF_LOOP: Rem "thru all on dir 1 - cust(contr)/product
Search #CH_FILE,3,1;K1$,R[0],E \ If E = 2 Goto SPCF_DONE
If E Gosub ERR_SEARCH
If K1$[7,18] <> PROD$[1,12] Goto SPCF_LOOP
Mat Read #CH_FILE,R[0],36;SPCUM;
Mat Read #CH_FILE,R[0],40;C3;
Mat Read #CH_FILE,R[0],138;SPC5;
If (SPCUM[1] = -1 Or SPCUM[1] = -3) And SPC5[3] = 3 ! "cost needs update? ONLY FIXED
  !HLDA[5] = A[5];HLDA[6] = A[6]
  !A[5] = OLDA[5];A[6] = OLDA[6]
  CNVTU[0] = 0;CNVTU[1] = SPCUM[1];CNVTU[2] = 2
  CNVTA = SPC5[1]
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
  HLDCOST = AMOUNT
  !A[5] = HLDA[5];A[6] = HLDA[6]
  CNVTU[0] = SPCUM[1];CNVTU[1] = 0;CNVTU[2] = 2
  CNVTA = HLDCOST
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
  SPC5[1] = AMOUNT
End If 
If (SPCUM[0] = -1 Or SPCUM[0] = -3) And C3[0] = 3 ! "FLAT PRICE ONLY
  !HLDA[5] = A[5];HLDA[6] = A[6]
  !A[5] = OLDA[5];A[6] = OLDA[6]
  CNVTU[0] = 0;CNVTU[1] = SPCUM[0];CNVTU[2] = 2
  CNVTA = SPC5[0]
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
  HLDPRC = AMOUNT
  !A[5] = HLDA[5];A[6] = HLDA[6]
  CNVTU[0] = SPCUM[0];CNVTU[1] = 0;CNVTU[2] = 2
  CNVTA = HLDPRC
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
  SPC5[0] = AMOUNT
End If 
Mat Write #CH_FILE,R[0],138;SPC5;
Goto SPCF_LOOP
SPCF_DONE: Rem "
Close #CH_FILE
! Print @0,23;'CL';"CONVERTING REBATE FILE "; \ Signal 3,0
Read #ctlc,88,320;FLE$[1,16];
Open #CH_FILE,FLE$
K1$ = " ",K1$;K1$[1,12] = PROD$
RBFL_LOOP: Rem "thru all on dir 2 (prod/contr)
Search #CH_FILE,3,2;K1$,R[0],E \ If E = 2 Goto RBFL_DONE
If E Gosub ERR_SEARCH
If K1$[1,12] <> PROD$[1,12] Goto RBFL_DONE
Mat Read #CH_FILE,R[0],36;RBUM;
Mat Read #CH_FILE,R[0],40;RB;
Mat Read #CH_FILE,R[0],126;RBL1;
Mat Read #CH_FILE,R[0],138;RB5;
If (RBUM[1] = -1 Or RBUM[1] = -3) And RBL1[0] = 3 ! "cost needs update? ONLY FIXED
  !HLDA[5] = A[5];HLDA[6] = A[6]
  !A[5] = OLDA[5];A[6] = OLDA[6]
  CNVTU[0] = 0;CNVTU[1] = RBUM[1];CNVTU[2] = 2
  CNVTA = RB5[1]
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
  HLDCOST = AMOUNT
  !A[5] = HLDA[5];A[6] = HLDA[6]
  CNVTU[0] = RBUM[1];CNVTU[1] = 0;CNVTU[2] = 2
  CNVTA = HLDCOST
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
  RB5[1] = AMOUNT
End If 
If (RBUM[0] = -1 Or RBUM[0] = -3) And RB[0] = 3 ! "FLAT PRICE ONLY
  !HLDA[5] = A[5];HLDA[6] = A[6]
  !A[5] = OLDA[5];A[6] = OLDA[6]
  CNVTU[0] = 0;CNVTU[1] = RBUM[0];CNVTU[2] = 2
  CNVTA = RB5[0]
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
  HLDPRC = AMOUNT
  !A[5] = HLDA[5];A[6] = HLDA[6]
  CNVTU[0] = RBUM[0];CNVTU[1] = 0;CNVTU[2] = 2
  CNVTA = HLDPRC
  Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
  RB5[0] = AMOUNT
End If 
Mat Write #CH_FILE,R[0],138;RB5;
Goto RBFL_LOOP
RBFL_DONE: Rem "done
!Search #2,2,1;PROD$,R[2],E \ If E Goto POL_DONE
Rem "we need the product record number!
R[2]=ProdRec ! it's sent!!
Close #CH_FILE
! Print @0,23;'CL';"CONVERTING PO LINES FILE"; \ Signal 3,0
Read #ctlc,88,2432;FLE$[1,16];
Open #CH_FILE,FLE$
Mat Read #ctlc,51,76;SPO;
If SPO
  FLE$ = "2/POCTFLE" + Str$(COID)
  ch_file1=findchannel()
  Open #CH_FILE1,FLE$
End If 
K1$ = " ",K1$
K1$[1,6] = R[2] Using "######"
POL_LOOP: Rem "DIRECTORY 2 = product rec in [1,6]
Search #CH_FILE,3,2;K1$,R[0],E \ If E = 2 Goto POL_DONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> R[2] Goto POL_DONE
Mat Read #CH_FILE,R[0],0;L1;
Mat Read #CH_FILE,R[0],12;L2;
Mat Read #CH_FILE,R[0],24;L3;
Mat Read #CH_FILE,R[0],186;PL;
Mat Read #CH_FILE,R[0],232;PL4;
Mat Read #CH_FILE,R[0],382;PL5;
Mat Read #CH_FILE,R[0],442;PL6;
Call Logic(1,2 ^ 0,L1[3],X2) \ If X2 Goto POL_LOOP
Call Logic(1,2 ^ 2,L1[3],X2) \ If X2 Goto POL_LOOP
If L1[5] <> -3 And L1[5] <> -1 Goto POL_LOOP
!HLDA[5] = A[5];HLDA[6] = A[6]
!A[5] = OLDA[5];A[6] = OLDA[6]
CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
CNVTA = L2[0]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
HLDCOST[1] = AMOUNT
Rem Let CNVTA=L2[1] \ gosub convert:
Rem Let HldCost[2]=Amount ! "Frgt unit cost
Rem Let CNVTA=PL[1] \ gosub convert:
Rem Let HldCost[3]=Amount ! "Pending AP COST
CNVTA = PL4[0]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
HLDCOST[4] = AMOUNT
CNVTA = PL4[3]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
HLDCOST[5] = AMOUNT
Rem Let CNVTA=PL4[8] \ gosub convert:
Rem Let HldCost[6]=AMount ! "Misc charge per unit
!A[5] = HLDA[5];A[6] = HLDA[6]
CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
CNVTA = HLDCOST[1]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
L2[0] = AMOUNT
Rem Let CNVTA=HldCost[2] \ gosub convert:
Rem Let L2[1]=Amount ! "Freight Unit cost
Rem Let CNVTA=HldCost[3] \ gosub convert:
Rem Let PL[1]=Amount ! "Pending AP Cost
CNVTA = HLDCOST[4]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
PL4[0] = AMOUNT
CNVTA = HLDCOST[5] 
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
PL4[3] = AMOUNT
Rem Let CNVTA=HldCost[6] \ gosub convert:
Rem Let PL4[8]=Amount ! "Misc Chg per unit
Mat Write #CH_FILE,R[0],12;L2;
Mat Write #CH_FILE,R[0],186;PL;
Mat Write #CH_FILE,R[0],232;PL4;
Mat Write #CH_FILE,R[0],382;PL5;
Mat Write #CH_FILE,R[0],442;PL6;
If Not(SPO) Goto POL_LOOP
If Not(L3[3]) Goto POL_LOOP
PONUM = K1$[7,12]
KEYPOC$ = " ",KEYPOC$
KEYPOC$[1,6] = PONUM Using "######"
SRCHPOC: Rem search po control file
Search #CH_FILE1,3,1;KEYPOC$,R[1],E \ If E = 2 Goto POL_LOOP
If E Gosub ERR_SEARCH
X2 = KEYPOC$[1,6] \ If X2 <> PONUM Goto POL_LOOP
X2 = KEYPOC$[13,16] \ If X2 <> L1[2] Goto SRCHPOC
Mat Read #CH_FILE1,R[1],24;PCT2;
!A[5] = OLDA[5];A[6] = OLDA[6]
CNVTA = PCT2[1];CNVTU[0] = 0;CNVTU[1] = L1[5];CNVTU[2] = 2
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
CNVTA = AMOUNT
!A[5] = HLDA[5];A[6] = HLDA[6]
CNVTU[0] = L1[5];CNVTU[1] = 0;CNVTU[2] = 2
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
PCT2[1] = AMOUNT
Mat Write #CH_FILE1,R[1],24;PCT2;
Goto SRCHPOC
Goto POL_LOOP
POL_DONE: Rem "P.O. price done
Close #CH_FILE
If Ch_file1 Close #ch_file1
! Print @0,23;'CL';"CONVERTING ALTERNATE VENDOR FILE "; \ Signal 3,0
Read #ctlc,88,1568;FLE$[1,16];
Open #CH_FILE,FLE$
K1$ = " ",K1$;K1$[1,12] = PROD$
ALTV_LOOP: Rem "dir 1
Search #CH_FILE,3,1;K1$,R,E \ If E = 2 Goto ALTV_DONE
If E Gosub ERR_SEARCH
If K1$[1,12] <> PROD$[1,12] Goto ALTV_DONE
Mat Read #CH_FILE,R[0],32;AV2;
Mat Read #CH_FILE,R[0],60;AV3;
If AV2[6] = 0 Let AV2[6] = PFU1[11]
If AV2[6] <> -1 And AV2[6] <> -3 Goto ALTV_LOOP
!HLDA[5] = A[5];HLDA[6] = A[6]
!A[5] = OLDA[5];A[6] = OLDA[6]
CNVTU[0] = 0;CNVTU[1] = AV2[6];CNVTU[2] = 2
CNVTA = AV2[2]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
HLDCOST[1] = AMOUNT
CNVTA = AV3[0]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
HLDCOST[2] = AMOUNT
CNVTA = AV3[2]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,oldPR.)
HLDCOST[3] = AMOUNT
!A[5] = HLDA[5];A[6] = HLDA[6]
CNVTU[0] = AV2[6];CNVTU[1] = 0;CNVTU[2] = 2
CNVTA = HLDCOST[1]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
AV2[2] = AMOUNT
CNVTA = HLDCOST[2]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
AV3[0] = AMOUNT
CNVTA = HLDCOST[3]
Amount=ConvProdAmount(e$,CNVTU[],CNVTA,ctlc,FLAG,newPR.)
AV3[2] = AMOUNT
Mat Write #CH_FILE,R[0],32;AV2;
Mat Write #CH_FILE,R[0],60;AV3;
Goto ALTV_LOOP
ALTV_DONE: Rem "finshed
Close #CH_FILE
Rem "any additional add here?
Goto OutEnd
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
e$=msg$
Rem! need to update po control file
OUTEND: Rem "outta here

else
    include "src/callsuberr.inc"
  end try
  !
end sub ! Prodcchg