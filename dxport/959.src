!
! loadsave -w -n 100,10 -o prog/dxport/959.dl4 src/959.src
!
Declare Intrinsic Sub FindF,Logic,String
Option Default Dialect IRIS1
Rem MU959   USER ACCESS PRINTOUT   V2.0
Rem  GEORGE DOSCHER  7/30/85
Rem "Last Update:  roman  01/11/1994   add access code to printout
Rem
If Err 0 Gosub L9600
Dim U$[79],U1$[76],U2$[5],U3$[100],I$[20],A1$[40],I1$[30]
Dim 1%,A1[9,9],A9[999],T1,2%,A2[2],3%,A3[31]
Dim J$[75],J0$[10],J2$[40],J8$[8],J5$[75],J6$[40],J7$[75],J9$[75]
Dim 1%,J0,J2,J3,J4,J5,J6,J8,J9,X1[10],X$[40],2%,X2[10],4%,J1
Dim K1$[30],K2$[30],K3$[30],J1$[30]
C2 = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
I$ = Spc(11) Using "##/" \ I$[Len(I$) + 1] = C2 Using "CNTRL#.PROG"
Call FindF(I$,S3)
If S3 Goto L795
I$ = "CNTRL.PROG"
L795: Rem
Ropen #2,"USERCNTRL",I$
If Err 0 Let J7 = Spc(8)
J7 = 0 \ J9 = Chf(0)
If Err 0 Gosub L9600
If J7 If J7 <> 49 Goto L9500
J9 = 54 \ If J7 Let J9 = 18
U$ = "-----+",U$ \ U1$ = " ",U1$
Read #1,0,100;J8$;
Read #1,3,0;J1$[1,30];
L1000: Rem GET RANGES
Print @0,21;"ENTER STARTING CODE, <CR> FOR FIRST,  ''E'' TO EXIT : ";'CE';
Input ""K2$ \ If K2$ = "E" Goto L9000
Print @6,22;"ENDING   CODE, <CR> FOR LAST,   ''E'' TO EXIT : ";'CL';
Input ""K3$ \ If K3$ = "E" Goto L9000
If K3$ = "" Let K3$ = "}}}}}}"
If K2$ <= K3$ Goto L1090
Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L1000
L1090: K1$ = K2$ \ J1 = 99 \ Gosub L7000
Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
Search #2,2,1;K1$,R2,E \ If Not(E) Goto L2030
If E > 1 Gosub L9580
L2000: Search #2,3,1;K1$,R2,E \ If E > 2 Gosub L9580
If E Goto L1000
If K1$ > K3$ Goto L1000
L2030: Mat Read #2,R2;A1
Mat Read #2,R2,200;A2
Mat Read #2,R2,408;A3
Mat Read #2,R2,260;A1$;
Gosub L5800
Gosub L5000
Goto L2000
L5000: Rem PRINT ENTRY
Print #0;"\15\User name: ";A1$[21,40];
Print #0;"Access Code: ";A1$[1,10];"\15\\15\"; Tab 10;
For K1 = 0 To 9 \ For K2 = 0 To 9 \ Print #0; Using "#";K1; \ Next K2 \ Next K1
U3$ = "0123456789",U3$ \ Print #0;"\15\"; Tab 10;U3$
For K1 = 0 To 9 \ Print #0; Using "##__  "; Tab 4;K1;
  For K2 = 0 To 9 \ For K3 = 0 To 9
      If Not(A9[K1 * 100 + K2 * 10 + K3]) Print #0;" "; \ Goto L5080
      L1 = A1[K1,K2] \ L2 = 2 ^ K3 \ L3 = 1 \ Call Logic(L3,L1,L2,L4)
      If L4 Print #0;"Y";
      If Not(L4) Print #0;"N";
L5080: Next K3 \ Next K2 \ Print #0;"" \ Next K1
L5800: Rem HEADINGS ROUTINE
If J1 < J9 Return 
If J2 If J7 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J7) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J7) Print #0;"\15\";
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2;"\15\"
Print #0; Tab 50;"USER ACCESS CONTROL LISTING"
Print #0;"\15\";
Return 
L7000: Rem GET VALID SELECTION NUMBERS
If A9[0] Return 
Print @0,21;"INITALIZING FILE, PLEASE WAIT . . . ";'CE'; \ Signal 3,0
For X1 = 10 To 999
  Read #3,X1,30;T1;
  M1 = 1 \ Call Logic(M1,M1,T1,M1)
  A9[X1] = Sgn(M1) \ Next X1
A9[0] = 9 \ Return 
L9000: Rem EXIT
Close \ Print 'CS';
Chain "MX000"
L9500: Rem  *ERROR ROUTINE  (ESCAPE TRAP)    V3.0  9/91 G.DOSCHER/REK
If Spc(8) <> 99 And Spc(8) <> 123 Goto L9512
If Spc(8) = 123 Goto L9660
Print 'RB ML';" ";'ML'; \ Return -1 !!!RETURN IF ESCAPE HIT
L9512: Dim 2%
Window Open @36,16; Size 44,8; Using "*BASIC ERROR*" \ Print 'RB';
ENUM = Spc(8) \ ELINE = Spc(10)
CTERR = 0 \ If ENUM = 157 Let CTERR = Err(8)
Print "ERROR ";(Spc(8) + (CTERR * .001));"HAS OCCURRED ";
Print "AT LINE";Spc(10);'CL CR';"IN PROGRAM ";
L9527: If Err 0 Rem
Dim PNAME$[50],PNAME1$[50],PNAME2$[50]
PNAME$ = Msc$(4) \ Call String(1,PNAME$)
POS_ = 1 \ POS1 = 0
L9539: Search PNAME$[POS_],"/",POS1
If POS1 Let POS_ = (POS_ + POS1) \ Goto L9539
Print "NAME: ''";PNAME$[POS_];"''";'CL CR';
Print "PLEASE CALL UNIVERSAL FOR ASSISTANCE!";'CL K1'
Print "TRACE: ";'CL';
L9554: Print Using "<#####> ";Spc(16); \ If Spc(14) Goto L9554
Close #0
Open #0,"ERRORLOG"
Write #0,Chf(0);PNAME$[POS_],ENUM,ELINE,Spc(5),Spc(6),Spc(2),Spc(3),CTERR
Close #0
Input Tim 6000;'CR'"PLEASE HIT <CR> TO CONTINUE: ";PNAME1$
Window Close \ Print @0,23;'CE';
Goto L9950
L9580: Rem  *ERROR ROUTINE  (SEARCH ERROR)   V3.0  9/91 G.DOSCHER/REK
Dim 2%
Window Open @36,17; Size 44,7; Using "*SEARCH ERROR*"
ENUM = E + 1000 \ ELINE = Spc(16)
CTERR = 0 \ If E = 5 Let CTERR = Err(8)
Print "RETURN STATUS";(E + (CTERR * .001));
Print "/ STATEMENT";Spc(16);'CL CR';"IN PROGRAM ";
Goto L9527
L9600: Rem  *ERROR ROUTINE  (ESCAPE ABORT)   V3.0  9/91 G.DOSCHER/REK
If Spc(8) <> 99 And Spc(8) <> 123 Goto L9512
If Spc(8) = 123 Goto L9660
If Err 0 Rem
Dim ABREQ$[10]
If Err 0 Gosub L9500
Window Open @0,0; Size 46,3; Using "ABORT REQUESTED"
L9621: Print @0,0;"DO YOU WISH TO ABORT THIS PROGRAM (Y/N)?  _";'RB ML';
Input Len 16385;""ABREQ$ \ Print @0,0;'CL'; \ Signal 3,0
If Err 0 Gosub L9600
If ABREQ$ = "N" Window Close \ Print 'ML';" ";'ML'; \ Return -1
If ABREQ$ <> "Y" Goto L9621
Window Close 
Goto L9000
L9660: Rem RECORD LOCK V1.0 9/91 REK (PART OF STANDARD ERROR ROUTINE)
Escdis 
Window Open @0,0; Size 29,3; Using ""
Print @0,0;'RB BR';"RECORD LOCKED - PLEASE WAIT";'ER';
Signal 3,50
Window Close 
Escclr 
Return -1
L9950: Rem *ERROR ROUTINE SAVE PROGRAM WITH VARIABLES FOR BASIC OR SEARCH ERROR
PNAME1$ = " ",PNAME1$;PNAME2$ = " ",PNAME2$;PNAME1$ = "HOME"
Call String(2,PNAME$)
System 28,PNAME1$
PNAME2$ = "SAVE <00>",PNAME1$,"/",PNAME$[POS_],".save!"
Chain PNAME2$
Stop 
