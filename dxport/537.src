! >>> Program 537
!
! description Accounts payable aged open invoice report by invoice date
!
! loadsave -w -n 100,10 -o prog/dxport/537.dl4 src/537.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 20, 2006  14:37:20
Rem /w2/papermaster/r2005//usr/acct/bill/work/r2005/ap/la537.src (univ2) [bill] {41133}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem LA537 A/P AGED OPEN INVOICE DATE
Rem MARY K.
Rem MODIFIED FOR 12 CHAR INV CODE - 3/85 - PCCC - MTK
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1

Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel

! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray

External Lib "ubsfunc.dl4"
Declare External Function OpenFile
!
External Lib "libgeneral.lib"                                     
Declare External Sub GetSession,AddToStr,SetOutPut,CreateNetStatus
!
!!Option Default Dialect IRIS1
!If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
Dim groupid$[1]
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
dim 3%,totrec,tmp
Dim A$[30],B1$[8],D$[8],D1$[8],A1$[10],G$[2],F$[16],F1$[16],R2$[4]
Dim 1%,F1[1],X[12],O4[1],C0[6]
Dim V$[10],R$[60],P3$[5],G9$[40],D4$[6],K10$[20],DIV$[30]
Dim I$[6],I3$[12],X$[10],VEND$[6]
Dim 2%,JAPDATE,JAGDATE
Dim 2%,A,B,G7,G8,I1[3],L8,R[20],DIV[2],DIVFLAG,J81
Dim 1%,S9,2%,B9,K4$[14],K5$[14],K6$[30],V1$[10]
Dim 3%,C[9],A3[5],T9[10],X3
!If Err 0 Gosub ERR_TRAP
Dim tmp$[1500],tmp1$[200],TMP3$[100],blockid$[100],msg$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[2000],bsdel$[10],esdel$[10],rdel$[10]

Dim J$[40]
Dim 1%,X1,2%,X2
Dim U3$[80],P$[8]
Dim U5$[50],D8$[8],K1$[50],K2$[20],K3$[20],i
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[14]	  \ Blank$=" ",Blank$
dim EndParam$[14] \ EndParam$="Z",EndParam$
!
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
!call dxopen() ! needed?                                                  
                                                          
                                        !
!Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intco,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
!!J8 = Spc(5)
!!J$ = Int((J8 - Int(J8 / 16384) * 16384) / 64) Using "CNTRL# "
!!!!
If Err 0 Let J8 = Spc(8)
J8 = 0
L8 = Chf(0)
If J8 <> 0 If J8 <> 49 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
L8 = 55
If J8 <> 0 Let L8 = 22
let j8=0 ! no browser




J81 = intCO
J$ = Int((J81 - Int(J81 / 16384) * 16384) / 64) Using "CNTRL# "
Call dxget("u_group",groupid$)              
If RTrim$(groupid$) = "" Let groupid$ = "0" 
G$[1,1] = intco Using "#"                   
G$[2,2] = groupid$                          

message$="" !!

!
C15 = OpenFile("AP.A00AP10",-intCo,1) \ If C15 = -1 Error 42  ! a00ap10
C16 = OpenFile("GL.ACF",-intCo,1) \ If C16 = -1 Error 42  ! acf10
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"537",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 

V$ = " 0"
Search #c15,2,1;V$,R[15],E
If E = 1                                                          
  eflag = eflag + 1                                               
  Message$ = "Error In A/P Control File. Record '0' Not On File. "
  Goto OUTEND                                                     
End If
if e gosub err_search:
Mat Read #c15,R[15],2;R$;


! get client name
V1$ = "10"
Search #c15,2,1;V1$,R[15],E
If E = 1                                                            
   eflag = eflag + 1                                                 
   Message$ = "Error In A/P Control File. Record '10' Not On File. "  
   Goto OUTEND                                                       
 End If                                                              
 If E Gosub ERR_SEARCH                                               

Mat Read #c15,R[15],2;R2$;
V1$ = " ",V1$
V1$[3,6] = R2$
Search #c16,2,1;V1$,R[16],E
If E = 1                                                            
   eflag = eflag + 1                                                 
   Message$ = "Error Client Number "+r2$=" Not on File. "  
   Goto OUTEND                                                       
 End If                                                              
 If E Gosub ERR_SEARCH 

Mat Read #c16,R[16],10;G9$;
F$ = R$[53,53],"/A20OI",G$[1,2]
F1$ = R$[31,31],"/A80VM",G$[1,2]
Ropen #2,F$
ROpen #3,F1$
Mat Read #1,0,100;D8$;
Mat Read #1,51,18;C0;
P = 0
if C0[6]
	F$ = R$[1,1],"/APDIV",G$[1,2] \ Ropen #10,F$
end if
J8=0! NO XML WORKING!
! get date
call dxget("DATE",D$)
If Len(D$) <> 6
	let eflag=eflag+1
	LET message$=message$+" Invalid Date Entered "
	goto getnxtmthopt:
endif
D1$ = D$[1,2],"/",D$[3,4],"/",D$[5,6]
Call VerifyDate(D1$,D$,E)
if e<>0
	let eflag=eflag+1
	LET message$=message$+" Invalid Date Entered "
	goto getnxtmthopt:
endif
D$ = D1$[7,8],D1$[1,2],D1$[4,5]
X2 = D$[1,6] \ Gosub L_7840 \ X2 = 0
JAGDATE = X2
getnxtmthopt: ! get next month options
call dxget("I1",tmp$) \ if tmp$="" let  F1 = 0 else  F1 = 1 ! include nxt month invoices
call dxget("I2",tmp$) \ if tmp$="" let F1[1] = 0 else  F1[1] = 1 ! include nxt month payments
!!!
call dxget("I3",tmp$) \  S9=tmp$ ! vendor code or vendor name
if s9=1 ! vendor code
	call dxget("begvendor",K2$)
	if k2$="" let k2$="0"
	let tmp=k2$
	if tmp<0 or tmp>999999
		let eflag=eflag+1
		let message$=message$+" Invalid Starting Vendor. "
		goto getendvendcode:
	endif
	let k2$=tmp using "######"

	getendvendcode: !
	call dxget("endvendor",K3$) 
	IF K3$="" Let K3$ = "999999" 
	let tmp=k3$
	if tmp<0 or tmp>999999
		let eflag=eflag+1
		let message$=message$+" Invalid Ending Vendor. "
		goto getdiv:
	endif
	let k3$=tmp using "######"
else
	call dxget("begvendor",K2$)
	let k4$=k2$,blank$
	let k2$=k4$
	call dxget("endvendor",K3$) 
	let K5$=k3$,endparam$
	let k3$=k5$
endif
if not (eflag)
	if k2$>k3$
		let eflag=eflag+1
		let message$=message$+" Starting Vendor Must Be Greater Than Ending Vendor. "
	endif
endif

getdiv: !
if not(c0[6])
	let divflag=0;div[1]=0;div[2]=0;totflag=0
else

	call dxget("RDIVISIONS",tmp$) \ IF tmp$="" LET DIVFLAG = 0 else LET DIVFLAG = 99
	if divflag<>0
		call dxget("SDIVISION",tmp$)
		if tmp$="" let tmp$="0"
		let div[1]=tmp$
		if div[1]<0 or div[1]>99
			let eflag=eflag+1
			let message$=message$+" Invalid Starting Division. "
			goto getenddiv:
		endif
		getenddiv: ! get ending division
		call dxget("EDIVISION",tmp$) 
		if tmp$="" let tmp$="99"
		let div[2]=tmp$
		if div[2]<0 or div[2]>99
			let eflag=eflag+1
			let message$=message$+" Invalid Ending Division. "
			goto getconsdiv:
		endif
		if not(eflag)
			if div[1]>div[2]
				let eflag=eflag+1
				let message$=" Starting Division Must Be Greater Than Ending Division"
			endif
		endif
		
		getconsdiv:
		call dxget("CDIVISION",tmp$) \ if tmp$="" let TOTFLAG=0 else TOTFLAG=99
	endif
endif
IF EFLAG<>0 GOTO OUTEND: !!


 
L = 60
D = 1
P = 0

!!!
K1$ = K2$
if j8
  tmp$="CLIENT NAME",fdel$
  tmp$=tmp$,"VENDOR #",fdel$
  tmp$=tmp$,"VENDOR NAME",fdel$
  tmp$=tmp$,"INV. CODE",fdel$
  tmp$=tmp$,"INV DATE",fdel$
  tmp$=tmp$,"DUE DATE",fdel$
  tmp$=tmp$,"CURRENT",fdel$
  tmp$=tmp$,"OVER 30",fdel$
  tmp$=tmp$,"OVER 60",fdel$
  tmp$=tmp$,"OVER 90",fdel$
  tmp$=tmp$,"TOTAL",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
if DIVFLAG=0 goto L_1900
!

L_1400: ! division search
K10$ = " ",K10$ \ K10$[1,2] = DIV[1] Using "##"
Search #10,2,1;K10$,R[10],E \ If Not(E) Goto L_1440
!!If E > 1 Gosub ERR_SEARCH
L_1415: 
Search #10,3,1;K10$,R[10],E
if e=2
	let divflag=0
	goto outend:
endif ! \ If E = 2 Goto L_1500
!!If E Gosub ERR_SEARCH
L_1440: DIV[0] = K10$
If DIV[0] > DIV[2]
	let divflag=0
	Goto outend:
endif
Mat Read #10,R[10],12;DIV$;
Goto L_1900
!
L_1500: Rem END OF DIVISION RANGE
DIVFLAG = 0
If DIV[1] = 0 And DIV[2] = 99 Goto L_1900
!!Goto L_895
!
L_1900: L = 99
VEND$ = ""
K1$ = K2$ \ If S9 = 1 Goto L_2000
K6$ = K4$
L_1910: Search #3,3,2;K6$,R[3],E
If E Goto L_9100
If K6$[1,Len(K5$)] > K5$ Let E = 2 \ Goto L_9100
Read #3,R[3],268;B9;
K1$ = B9 Using "######" \ K3$ = K1$
E = 0
L_2000: 
Search #2,3,1;K1$,R[2],E
If S9 = 1 If E = 2 Goto L_9100
If S9 = 2 If E = 2 Goto L_1910
!!If E Gosub ERR_SEARCH
If S9 = 1 If K1$[1,6] > K3$[1,6]
  If VEND$ = "" Let K1$ = K3$
  E = 2
  Goto L_9100
End If 
If S9 = 2 If K1$[1,6] <> K3$[1,6] Goto L_1910
Mat Read #2,R[2],112;O4;
If DIVFLAG If DIV[0] <> O4[1] Goto L_2000
Mat Read #2,R[2],0;I$;
If I$[1,1] = "0" Goto L_2000
If I$[1,1] = "9" Goto L_2000
Rem IF I$[3,3]="3" GOTO L_2000: !disable bypass cct # 201144-wmb 2/2006
If K1$[1,6] > K3$[1,6] Goto L_9100
Mat Read #2,R[2],12;I1;
Mat Read #2,R[2],40;C;
Mat Read #2,R[2],100;I3$;
If Not(C - C[5]) If I$[5,5] <> "1" Goto L_2000
If F1 = 0 Let C[7] = 0
If F1[1] = 0 If I$[5,5] = "1" If C[5] <> 0 Let C[0] = 0 \ Goto L_2128
If F1[1] = 0 If I$[5,5] = "1" Goto L_2000
L_2128: X2 = I1[2] \ Gosub L_7840 \ X2 = 0
JAPDATE = X2;A = JAGDATE - JAPDATE
If A Let A = Int(A / 30) + 1
If A <= 0 Let A = 1
If A > 4 Let A = 4
If VEND$[1,6] <> K1$[1,6] Gosub L_4200
VEND$[1,6] = K1$[1,6]
Gosub L_5800
Gosub L_5000
let totrec=totrec+1
Gosub L_2200
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[4] = T9[4] + C - C[5] - C[7]
T9[A - 1] = T9[A - 1] + C - C[5] - C[7]
A3[4] = A3[4] + C - C[5] - C[7]
A3[A - 1] = A3[A - 1] + C - C[5] - C[7]
Return 
!
L_4000: Rem TOTAL PRINT
Gosub L_5800
if j8 return  
Print #0;"\15\** TOTALS **";
For I9 = 0 To 3
  Print #0; Using "---,---,---.##"; Tab ((I9 * 14) + 60);T9[I9];
Next I9
Print #0; Using "---,---,---.##"; Tab 117;T9[4];
Print #0;""
Return 
!
L_4200: Rem NEW VENDOR
If VEND$ = "" Goto L_4300
Gosub L_5800
IF NOT(J8) Print #0;"* * * VENDOR TOTALS * * *";
IF NOT(J8)
  For I9 = 0 To 3
    Print #0; Using "---,---,---.##"; Tab ((I9 * 14) + 60);A3[I9];
  Next I9

  Print #0; Using "---,---,---.##"; Tab 117;A3[4];
  Print #0;""
END IF
For I9 = 0 To 4
  A3[I9] = 0
Next I9
IF NOT(J8) Print #0;" " 
L = L + 1
If E Return 
!
L_4300: Rem SEARCH VENDOR FILE
If VEND$ = "" Gosub L_5800
A1$[1,6] = K1$[1,6]
A$ = " ",A$
A$ = "NOT ON FILE!!!"
E = 0
Search #3,2,1;A1$,R[3],E
If E Goto L_4390
Mat Read #3,R[3],0;A$;
L_4390: if not(j8) Print #0;A1$[1,6]; Tab 7;A$[1,20];
Return 
!
L_5000: Rem PRINT LINE
if j8 !!!xml
  tmp$=rtrim$(G9$),fdel$!!client
  tmp$=tmp$,A1$[1,6],fdel$ !!!vendor #
  tmp$=tmp$,rtrim$(A$[1,20]),fdel$  !!vendor name
  tmp$=tmp$,I3$[1,12],fdel$!!!INV. CODE
  X2 = I1[2]
  Gosub L_8900
  tmp$=tmp$,P$[1,8],fdel$!!!INV DATE
  X2 = I1[3]
  Gosub L_8900
  tmp$=tmp$,P$[1,8],fdel$ !!!DUE DATE
  !
  if ((A - 1) * 14 + 60) > 55 and ((A - 1) * 14 + 60) < 68 
    tmp$=tmp$,C - C[5] - C[7] Using "---,---,---.##",fdel$ !!!CURRENT
    tmp$=tmp$,"",fdel$
	tmp$=tmp$,"",fdel$
	tmp$=tmp$,"",fdel$
  else 
	if ((A - 1) * 14 + 60) > 68 and ((A - 1) * 14 + 60) < 80 
	  tmp$=tmp$,"",fdel$
      tmp$=tmp$,C - C[5] - C[7] Using "---,---,---.##",fdel$  !!over 30
	  tmp$=tmp$,"",fdel$
	  tmp$=tmp$,"",fdel$
	else 
      if ((A - 1) * 14 + 60) > 80 and  ((A - 1) * 14 + 60) < 95 
         tmp$=tmp$,"",fdel$
		 tmp$=tmp$,"",fdel$
		 tmp$=tmp$,C - C[5] - C[7] Using "---,---,---.##",fdel$ !!over 60
		 tmp$=tmp$,"",fdel$
	  else 
	     tmp$=tmp$,"",fdel$
		 tmp$=tmp$,"",fdel$
		 tmp$=tmp$,"",fdel$
		 tmp$=tmp$,C - C[5] - C[7] Using "---,---,---.##" ,fdel$!! over 90
      end if
    end if 
  end if 
  tmp$=tmp$,C - C[5] - C[7] Using "---,---,---.##",fdel$ !!TOTAL
  call addtostr(e$,rstr$,tmp$+rdel$)
else  !!!
  Print #0; Tab 28;I3$[1,12];!!!INV. CODE
  X2 = I1[2]
  Gosub L_8900
  Print #0; Tab 43;P$[1,8];!!!INV DATE
  X2 = I1[3]
  Gosub L_8900
  Print #0; Tab 52;P$[1,8]; !!!DUE DATE
  Print #0; Using "---,---,---.##"; Tab ((A - 1) * 14 + 60);C - C[5] - C[7];!!!CURRENT
  Print #0; Using "---,---,---.##"; Tab 117;C - C[5] - C[7]; !!TOTAL
  Print #0;" "
end if!!!
Return 
!
L_5800: 
if J8 return ! dx xml
!
L = L + 1
If L < L8 Return 
If L8 <> 22 Goto L_5820
!!If P <> 0 Input "\15\PRESS <CR> TO CONTINUE "J$
L_5820: 
If P Print #0;"\14\";
Print #0;"\15\"; Tab (Int(66 - Len(G9$) / 2));G9$
P = P + 1
Print #0; Tab 36;"ACCOUNTS PAYABLE AGED OPEN INVOICE REPORT BY INVOICE DATE"
Print #0; Tab 10;"DATE: ";D8$;
If F1 = 1 Print #0; Tab 35;"NEXT MONTH PAYMENTS INCLUDED";
If F1[1] = 1 Print #0; Tab 70;"NEXT MONTH INVOICES INCLUDED";
Print #0; Tab 110;"PAGE";P
If DIVFLAG Print #0; Tab 5;DIV$[1,30];
Print #0; Tab 45;"AGING DATE AS OF ";D1$
Print #0;" "
Print #0; Tab 9;"VENDOR NAME ";
Print #0; Tab 28;"INV. CODE";
Print #0; Tab 43;"INV DATE";
Print #0; Tab 52;"DUE DATE";
Print #0; Tab 67;"CURRENT";
Print #0; Tab 81;"OVER 30";
Print #0; Tab 95;"OVER 60";
Print #0; Tab 109;"OVER 90";
Print #0; Tab 125;"TOTAL";
Print #0;""
L = 7
Return 
!
L_6000: Rem CONVERT DATE TO YYMMDD
D$ = G7 Using "&&&&&&"
D4$ = D$[5,6],D$[1,2],D$[3,4]
For X1 = 1 To 6
  If D4$[X1,X1] = " " Let D4$[X1,X1] = "0"
Next X1
G8 = D4$
Return 
!
L_7840: Rem  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
!


!
L_8900: Rem DATE
U5$ = X2 Using "&&&&&&"
P$[1,2] = U5$[3,4]
P$[3,3] = "/"
P$[4,5] = U5$[5,6]
P$[6,6] = "/"
P$[7,8] = U5$[1,2]
If P$[1,1] = "0" Let P$[1,1] = " "
Return 
!

!
L_9100: Rem END OF THIS RANGE
Gosub L_4200
Gosub L_4000
For K = 0 To 10
  T9[K] = 0
Next K
If DIVFLAG Goto L_1415
!!If L8 = 22 Input "\15\PRESS <CR> TO CONTINUE "J$
!!Goto L_895
goto outend
Stop 

ERR_SEARCH: Rem                               
ENUM = E;ELINE = Spc(16);CTERR = 0            
If E = 5 Let CTERR = Err(8)                   
msg$ = "RETURN STATUS",(E + (CTERR * .001))   
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
e$ = msg$                                     
Call programdump("/tmp/537.se!","")        
Call programdump()                            
! goto err_msg ! Error 10000                  
e$ = msg$ \ Error 10000                       
Return ! End 

ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End                 

OUTEND: Rem EXIT PROGRAM
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If
Call AddToStr(e$,rstr$,esdel$) !end section -- DXBLOCK                  
ReturnStatus = 0                                                        
If eflag > 0                                                            
  ReturnStatus = 1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues             
  tmp$ = ""                                                             
End If                                                                  
If Not(eflag)                                                           
  If Not(totrec)                                                        
    ReturnStatus = 1                                                    
    Message$ = Message$ + "There are no transactions to print"          
    Message$ = Message$ + "."                                           
  Else                                                                  
    Message$ = Message$ + " " + Str$(totrec) + " Transaction(s) Printed"
  End If                                                                
End If                                                                  
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)                  
Call AddToStr(e$,rstr$,WebStr$)                                         
Call SetOutPut(e$,rstr$)                                                
Try Call dxclose() Else Rem                                             !
try Call dxclose() else rem
Else
!
	include "src/callmainerrnet.inc"
end try
End ! the whole program



!
