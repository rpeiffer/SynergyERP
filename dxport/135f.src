! >>> Program 135f
!
! description Change vendor
! loadsave -w -n 100,10 -o prog/dxport/135f.dl4 src/135f.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem   MX135f   - GLOBAL CHANGE VENDOR CODE
Rem   author:    jliu 8/14/00
Rem
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  4, 2002  11:16:42
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx1/mx135f.src (univ2) [kag] {35211}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub CheckDigits,InpBuf,String,programdump
!Option Default Dialect IRIS1
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$
Declare External Function OpenMySQLMirror
include "src/inc/sql_prod.inc" ! SQL defintions

If Err 0 Gosub ERR_TRAP
dim 1%,SC,SR,CNVTU[2],SRC,COST_LEV[3],COST_SEC,Z9[9],UN[2]
dim 2%,E1
dim 3%,UNIT,CNVTA
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],Msg$[500],rstr$[2000] ! dx error handling variables
Dim tmp$[800],tmp1$[200],nextblockid$[8],Message$[600],WebStr$[600],blockid$[100]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
B$=" ",B$
Dim A$[156],A2$[30],C1$[32],PSN$[20],U3$[60],HZ$[30]
Dim 1%,LLC,PFU1[20],WH,URECFLAG
Dim 2%,A2,A3[2],B[24],PR_C4[10],PFCO[3],PLC[3],PSN[1],U2,U4[1],CUST
Dim 3%,A1[7],A[33],PFU2[6],PLV[1],U3
Dim W1$[32],W2$[16],WH3$[24]
Dim 2%,W2[9],W7[14],WH7[3]
Dim 1%,W0[3],W1[2],WH8[47]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2]
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7,J8,X1
Dim 2%,J9[9],X2,4%,J1
DIM_VARS: Rem
Dim 1%,BWH,EWH,BICLASS,EICLASS
Dim 1%,BUYER
Dim 2%,VENDOR
Dim VENKEY$[6],BUYKEY$[18],BUYDESC$[30],VENDESC$[30],VENDOR$[20]
Dim RETVAL$[512],UPDATEFLG$[1],Z2$[2]
Dim 3%,R3,R5
Dim 3%,R[99]
Dim K2$[16],K3$[14],P9$[50],P60$[50],P61$[256],BCOMM$[4],ECOMM$[4]
Dim BPROD$[12],EPROD$[12],V1$[10],W9$[4]
Def FNR(H) = Int(Abs(H) * 100 + .5) * .01 * Sgn(H)
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

OPEN_FILES: Rem          opens files here
For J = 2 To 6
  Read J1
  If J1 = -1 Goto NEXT_
  Read #1,88,Abs(J1);J$;
  If J1 > 0 Open #J,J$ Else Ropen #J,J$
NEXT_: Rem
Next J
Data "1792","1744","-2288","2400","-1"
J$ = "2/BUYERS"
Open #6,J$
sqlChan = OpenMySQLMirror(e$)
Mat Read #1,60,50;P60$;
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
INIT_VARS: Rem sort flags
CH_PRWH = 3;CH_PROD = 2;BWH = 0;EWH = 99;MAVE = 6;BICLASS = 0;EICLASS = 99
returnstatus=0
Message$=""
MAIN: Rem
!Gosub PRINT_SCREEN
!Goto INPUTS
PRINT_SCREEN: Rem
!Print 'CS'
!Print @2,0;"-MX135F-";@20,0;"GLOBAL CHANGE VENDOR CODE"
!Print @2,2;"1> Update"; Tab 15;"M: Main Product file,  W: Whse Level,  B: Both";
!Print @35,4;'BR';"STARTING";@55,4;"ENDING";'ER';
!If UPDATEFLG$ = "W" Or UPDATEFLG$ = "B"
!  Print @2,6;"   WAREHOUSE       :";
!End If 
!Print @2,8;"2> COMMODITY CODE  :";
!Print @2,10;"3> PRODUCT CODE    :";
!Print @2,12;"4> Enter Old Vendor Code       :";
!Print @2,14;"5> Enter New Vendor Code       :";

INPUTS: Rem

FLD1: Rem
!J5$ = "Enter starting commodity code maximum zzzz or  -: list"

call dxget("BCOMM",J$)
BCOMM$ = J$+B$
!Print @35,8;BCOMM$;'CL';
J5$ = " ",J5$
FLD2: Rem
!J5$ = "Enter ending commodity code maximum  or  -: list"

call dxget("ECOMM",J$)
ECOMM$ = J$+B$

If BCOMM$ > ECOMM$
  Message$ = Message$+"Invalid commodity code range  "
  Returnstatus=1
End If 
!RETVAL$[1,4] = BCOMM$ \ RETVAL$[5,8] = ECOMM$
!Return 
FLD3: Rem
!J5$ = "Enter starting product code maximum zzzzzzzzzzzz or  -: list"

call dxget("BPROD",J$)
BPROD$ = UCase$(J$)+B$
J5$ = " ",J5$
FLD4: Rem
!J5$ = "Enter ending product code maximum or  -: list"

call dxget("EPROD",J$)
EPROD$ = UCase$(J$)+B$
!Print @55,10;EPROD$;'CL';
If BPROD$ > EPROD$
  Message$ = Message$+"Invalid product code range  "
  Returnstatus=1
End If 
!RETVAL$[9,20] = BPROD$ \ RETVAL$[21,32] = EPROD$
!J5$ = " ",J5$
!Return 
FLD5: Rem
!J5$ = "Enter the Old Vendor Code for Products to be changed to the New Vendor Code"
!J1 = VENDOR;J0$ = "3000064012"
!Gosub ISINPUT
!Print @40,12;J1 Using "######";'CL';
Call dxget("OVEND",tmp$)
J1=tmp$
If J1
  VENKEY$ = " ",VENKEY$
  VENKEY$[1,6] = J1 Using "######"
  Search #5,2,1;VENKEY$,R5,E \ If E > 1 Gosub ERR_SEARCH
  If E
    Message$ = Message$+ "OLD VENDOR NOT ON FILE  "
    Returnstatus=1
  Else 
    Mat Read #5,R5;VENDESC$
    !Print @49,12;VENDESC$[1,30]
  End If 
End If 
VENDOR = J1
!RETVAL$[33,38] = VENDOR
!J5$ = " ",J5$
!Return 
FLD6: Rem
!J5$ = "Enter the New Vendor Code"
!J1 = NEWVENDOR;J0$ = "3000064014"
!Gosub ISINPUT
!Print @40,14;J1 Using "######";'CL';
Call dxget("NVEND",tmp$)
J1=tmp$
If Not(J1)
  Message$=Message$+"NEW VENDOR IS REQUIRED!  "
  Returnstatus=1
Else 
  VENKEY$ = " ",VENKEY$
  VENKEY$[1,6] = J1 Using "######"
  Search #5,2,1;VENKEY$,R5,E \ If E > 1 Gosub ERR_SEARCH
  If E
    message$ = message$+"New Vendor code is not on file  "
    Returnstatus=1
  Else 
    Mat Read #5,R5;VENDESC$
    !Print @49,14;VENDESC$[1,30]
  End If 
End If 
NEWVENDOR = J1
If VENDOR = NEWVENDOR
  Message$ = Message$+ "The old vendor is the same as the new vendor  "
  Returnstatus=1
End If 
!RETVAL$[39,44] = NEWVENDOR
!J5$ = " ",J5$
!Return 
FLD7: Rem
!J5$ = "Enter  M: Main Product file,  W: Whse Level,  B: Both"
UPDATEPROD = 0 \ UPDATEPRODWHSE = 0
!J1$ = UPDATEFLG$;J0$ = "1000011202"
!Gosub ISINPUT
!Call String(1,J4$)
!Print @12,2;J4$;
call dxget("FLUP",j$)
J4$=UCase$(RTrim$(J$))
! If J4$ = "" Or J4$ = " " Let J4$ = UPDATEFLG$
If J4$ = "W" Let UPDATEPRODWHSE = 1 ! \ RETVAL$[45,45] = "W"
If J4$ = "M" Let UPDATEPROD = 1 ! \ RETVAL$[45,45] = "M"
If J4$ = "B" Let UPDATEPRODWHSE = 1 \ UPDATEPROD = 1 ! \ RETVAL$[45,45] = "B"
If J4$ = "W" Or J4$ = "B" Goto FLD8
If J4$ <> "M" And J4$ <> "W" And J4$ <> "B" ! Goto FLD7
	message$=message$+"Invalid selection. WMB ONLY  "
	returnstatus=1
Endif
If J4$ = "M"
  BWH=0;EWH=0
  Goto Check_Inputs
End If 
FLD8: Rem
!Print @2,6;"   WAREHOUSE       :";
!J5$ = "Enter starting warehouse maximum 99"

call dxget("BWH",tmp$)
J1=tmp$
BWH = J1
!Print @35,6;BWH;'CL';
If BWH Let WFLG = 1
!J5$ = " ",J5$
FLD9: Rem
!J5$ = "Enter ending warehouse maximum 99"
!J1 = EWH;J0$ = "3000025506"
!Gosub ISINPUT
call dxget("EWH",tmp$)
j1=tmp$
EWH = J1
! Print @55,6;EWH;'CL';
If BWH > EWH
  Message$ = message$+ "Invalid warehouse range  "
  Returnstatus=1
End If 
!RETVAL$[46,47] = BWH \ RETVAL$[48,49] = EWH
!Return 
Check_INPUTS: ! see if ok
If ReturnStatus<>0 ! not okay
	e$=message$ ! it uses e$
	Goto Err_Msg
Endif
UPDATE: Rem
! Print @0,23;"Records updated...";'CL';
K2$ = " ",K2$;K3$ = " ",K3$
K2$ = BPROD$[1,12]
Search #2,2,1;K2$,REC_PROD,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto GOT_FIRSTP
SEARCHP: Rem
Search #2,3,1;K2$,REC_PROD,E \ If E > 2 Gosub ERR_SEARCH
If E Goto NEXTSTEP
GOT_FIRSTP: Rem "matched mode 2 first prod
If K2$[1,12] > EPROD$ Goto NEXTSTEP
Gosub READ_PROD
K3$ = " ",K3$;K3$[1,12] = K2$[1,12]
If A$[152,155] < BCOMM$ Goto SEARCHP
If A$[152,155] > ECOMM$ Goto SEARCHP
If UPDATEPROD
  If Not(VENDOR) Or (VENDOR And B[24] = VENDOR)
    B[24] = NEWVENDOR
    K = K + 1
    ! Print @18,23;K Using "######";
    Mat Write #CH_PROD,REC_PROD,156;B;
	if sqlChan >= 0 ! MySQL enabled and channel opened
		e = prod_UpdateSQLFromDL4(e$, intCo, K2$, sqlChan, CH_PROD)
		if e <> 1 ! returns the number of records add/updated/deleted
			error 11000 ! search error
		end if
	end if
  End If 
End If 
If UPDATEPRODWHSE
SEARCHW: Rem
  Search #3,3,1;K3$,REC_PRWH,E \ If E > 2 Gosub ERR_SEARCH
  If E Goto SEARCHP
  If K3$[1,12] <> A$[140,151] Goto SEARCHP
  Gosub READ_PRWH
  If W1[0] < BWH Goto SEARCHW
  If W1[0] > EWH Goto SEARCHP
  If VENDOR If VENDOR <> W2[3] Goto SEARCHW
  VENDOR$ = " ",VENDOR$ \ VENDOR$[1,2] = K3$[13,14]
  VENDOR$[3,8] = W2[3] Using "######"
  VENDOR$[9,20] = K3$[1,12]
  Search #3,5,3;VENDOR$,R3,E \ If E > 1 Gosub ERR_SEARCH
  W2[3] = NEWVENDOR;VENDOR$[3,8] = W2[3] Using "######"
WRITEW: Rem
  K = K + 1
  ! Print @18,23;K Using "######";
  Mat Write #3,REC_PRWH,38;W2;
  Search #3,4,3;VENDOR$,REC_PRWH,E \ If E Gosub ERR_SEARCH
  Goto SEARCHW
End If !"if updateprodwhse
Goto SEARCHP
READ_PRWH: Rem
Mat Read #CH_PRWH,REC_PRWH,0;W1$
Mat Read #CH_PRWH,REC_PRWH,32;W1
Mat Read #CH_PRWH,REC_PRWH,38;W2
Mat Read #CH_PRWH,REC_PRWH,78;W3
Mat Read #CH_PRWH,REC_PRWH,228;W5
Mat Read #CH_PRWH,REC_PRWH,404;W2$
Mat Read #CH_PRWH,REC_PRWH,420;W0
Mat Read #CH_PRWH,REC_PRWH,428;WH7
Mat Read #CH_PRWH,REC_PRWH,444;WH8
Mat Read #CH_PRWH,REC_PRWH,540;WH9
Mat Read #CH_PRWH,REC_PRWH,696;W7
Mat Read #CH_PRWH,REC_PRWH,756;WH3$
Mat Read #CH_PRWH,REC_PRWH,780;WHLV
Return 
READ_PROD: Rem
Mat Read #CH_PROD,REC_PROD,0;A$
Mat Read #CH_PROD,REC_PROD,156;B
Mat Read #CH_PROD,REC_PROD,256;A
Mat Read #CH_PROD,REC_PROD,460;A1
Mat Read #CH_PROD,REC_PROD,508;A2
Mat Read #CH_PROD,REC_PROD,512;PFU1
Mat Read #CH_PROD,REC_PROD,554;PFU2
Mat Read #CH_PROD,REC_PROD,630;LLC
Mat Read #CH_PROD,REC_PROD,632;PSN$
Mat Read #CH_PROD,REC_PROD,652;PSN
Mat Read #CH_PROD,REC_PROD,660;U2
Mat Read #CH_PROD,REC_PROD,670;U4
Mat Read #CH_PROD,REC_PROD,678;U3
Mat Read #CH_PROD,REC_PROD,684;U3$
Mat Read #CH_PROD,REC_PROD,744;HZ$
Mat Read #CH_PROD,REC_PROD,834;A3
Mat Read #CH_PROD,REC_PROD,856;C1$
Mat Read #CH_PROD,REC_PROD,894;PR_C4
Mat Read #CH_PROD,REC_PROD,944;HZ$
Mat Read #CH_PROD,REC_PROD,974;PFCO
Mat Read #CH_PROD,REC_PROD,990;PLV
Mat Read #CH_PROD,REC_PROD,1002;PLC
Return 
NEXTSTEP: Rem
! Input "       Press <CR> to Exit"X$
OUTEND: Rem
ReturnStatus=0 ! 0= ok in blockid, is =1 elsewhere
Message$="Complete - "+Str$(K)+" Product and/or Warehouse Records Updated"
 call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
 call AddToStr(e$,rstr$,WebStr$)
 call SetOutPut(e$,rstr$)
 try Call dxclose() else rem
End 
 
ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
Return 
ISERRMSG: Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
If Msg$<>"" let e$=msg$ \ goto err_msg ! Error 10000 ! sent reason
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
e$ = "RETURN STATUS",(E + (CTERR * .001))
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
call programdump("tmp/135fse!","")
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
  call SetOutPut(e$,rstr$)
  
End
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
Rem {end rtn.error.s}