! >>> Program 226a
!
! description INVOICE JOURNAL - Part 2
!
! loadsave -w -n 100,10 -o prog/dxport/226a.dl4 src/226a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
Rem "MX226A   -- Invoice Journal
Rem "Author   -- Roman Sawycky
Rem "Date     -- 01/02/1990
!  roman 07/10/1991 add H5[13] and H5[14]
!  roman 01/24/1992 combine 2 sorts into 1
!  B.SWET 3/10/92 PRINT OUT DELETED INVOICES
!  5/92 - ADD SERIAL NUMBER PRINT
!  6/92 REK - CASH DRAWER INFO TO TEMPORARY FILE
!  11/05/1992 roman. multi-slsm jrnl totals fixed
!  02/10/1993 jim. add entered by totals
!  03/10/1993 rek. freight add-on logic 
!  07/08/1993 - add commission by line info 
!  12/13/1993 - print cost & g/p y/n on slsrep version 
!  12/28/1993 - roman credit card types
!  09/12/1994 - MORE journal totals (wh/div/type) 
!  05/10/95 -
!  05/21/97 cct100540 typo in lines 4961&4962 was"SLSMDGP"
!  08/26/97 cct106170 fix message line print
!  cct108935 tc fix error if salesman not exist
!  Converted to Bedit: 22 DEC 1997   09:31:38  mkbedit 1.2a
!  04/07/98 cct111928 tc increase amt mask to -------#.##
!  6/12/98  cct113674 ac print disc tot at "JOURNAL TOTALS" line
!  11/19/98 cct115366 sms add an option to enter shipdate 
!      remove shipdate option, not supposed to be here -jlp
!  04/16/99 cct121995 slsm journal sp # print if no cash sales
!  10/02/00 cct140338 zyc b/e15@1400
!  10/18/00 cct140479 GED Indicate which invoices were FAXed, w/ counter
!  03/26/01 cct145498 zyc mask problem
!  07/29/02 cct158942 add the prompt for invoice date
!  2/13/03 cct164337 jliu if an item is being purchase by a customer for the  
!   		first time, place an "+" next to the product code.                 
!5/13/03 cct167175 jliu print the salesman num and name at the top of each page
!5/14/03 cct167170 print the entered by name after entered by num
!3/22/04 cct177052 zyc  alignment
!07/02/04 cct180099 dgh Change gp% calculation to match mx207b1 (check for LOT)
!08/20/04 cct181646 add the range of whse and range of division
! -------- notes for rev9 upgrade for Action Unlimited Resources ---------------
! 04/23/09 vst cct233163 - used rev9 program & added in custom code for:
! 06/15/04  dd           - block invoices on hold from registering
! 10/24/06 txc cct207668 - print cash customer by entered by to their liking
! ------------------------------------------------------------------------------
! ---------   notes for rev9 upgrade for Athens Janitor Supply Company  -------
! 02/19/2013 - order type 36 & 37 are STANDARD
! 11/08/01 jcs cct151792 - do not show commission on EVAP (OT 36 & 37)
! -----------------------------------------------------------------------------
! ------------  notes for 'erp'  upgrade for Athens Janitor Supply -------------
! 97/28/10 vst cct242703 - copied custom source & added code for:
! 03/19/12 jcs task12137 - print net cost
! ------------------------------------------------------------------------------

Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub FindF,InpBuf,String,getglobals,env,programdump
 Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,DatetoJulian
Declare Intrinsic function findchannel
External Lib "libgeneral.lib" !general routines
  Declare External Sub suberr,mainerr,getsession,setoutput,addtostr,CreateNetStatus
  Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Sub GetCostLevels
Declare External function buildsort,getuidrec,openfile
External Lib "amalgamate.dl4"
Declare External Sub amalgamate

!Option Default Dialect IRIS1
Try
Com 1%,PFU1[20],CNVTU[2],UN[2],COST_LEV[3],IntCo,AudOnly
Com 2%,S9[9],PASSR[9]
Com 3%,PFU2[6],CNVTA,A[33],rstr$[2000]
!If Err 0 Gosub ERR_TRAP
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FND(X) = FNR(X - (X * D3[0]))
Dim 1%,E,F,F9,H4[2],I,J2,J8,J9,L3[3],TYPE[2],P1,S1,S2,S7,W0,X,X1,sw[20]
Dim 1%,BWH[99],BDV[99],BTYP[40],EMAILREP,UCREC,CHAN,EMCH,NEEDOPENEMCH,PRTCH
Dim 1%,SORT,PASS,OLS2[1],POS_,DETAIL,REC,GLDET,COSTCHG,EUN[2],P0[1023]
Dim 1%,LOCKPORT,DL1,SCRPRT,DDCOUNT[9],ARMONTH,CPSAME,SMDTL[1],OT19Part
Dim 2%,D9[5],H0[12],H5[16],L4[3],L6[5],R1,R5,R6,W1,X2,N1,CSH0[4],SP,LTAX2
Dim 2%,SLSM[9],JRNL,I_CTR,Q0[1],DIV,DL[12],H6[8],PRODB[24],ORDT,SJ1
Dim 2%,SDIV,EDIV,SWH,EWH
Dim 3%,J,L5[3],T2[25],T4[4],T5[4],T6[4],T7[13],T9[20],T16[8],OLM[6],SJ2[8]
Dim 3%,SUNIT[3],PUNIT,SUNIT$[4],PUNIT$[4],UNIT,UNIT$[4],CUNIT,CUNIT$[4]
Dim 3%,T10[8],T11[2],TOTCOM,LTAX1,OREF[5],DL3,Rol0
Dim 3%,X3[9],L7[12],L7$[6],S3[17],CSH1[2],SLSMS1[3],SCOM[4],SMER[4],SCST[4]
Dim 3%,TT2[25],AMOUNT,EX[18],TTOT[14],CFIN[8],W3[24],LDCOST,GT[10],UNF[6]
Dim 3%,TOTMERCHCOST,PCTR,SLS1[12,2],ST0[10],ST1[10],R[99],CHBASE,NETCOST[2]
Dim 4%,J1,INVDATE,D3[1]
Dim J0$[15],J1$[50],J4$[75],J5$[70],CSH0$[156],D$[20],INVDATE$[6],SFLE$[40]
Dim SLKEY$[10],SLSNAME$[30],P61$[256],EMAILFROM$[48],SLSEMAIL$[50],SYS$[560]
Dim C1$[30],C2$[30],S1$[118],D1$[8],D9$[10],F1$[16],J$[50],CNAME$[30]
Dim J2$[20],J3$[40],ARDATE$[8],K1$[50],K2$[40],K3$[20],L6$[60],DT$[50]
Dim S$[25],K11$[40],S2$[30],K6$[50],PMASK$[15],SNK$[50],SN1$[54],TFLE$[30]
Dim N1$[25],CCTYPE$[100],K35$[20],A$[80],DL$[20],DL1$[20],EB$[10]
Dim L1$[20],P0$[20],P1$[156],P9$[50],P60$[50],X$[14],X1$[14],Z1$[50],3%,TPS
Dim K17$[30],RETVAL$[512],Z2$[10],K36$[40],J7$[75],IRIP$[40],j9$[50]
Dim 1%,JTL[2],JTL2,3%,JTL1[14],JTTL[13],INVNET,TOTNET,TOTFCST,V9,COID,TT
Dim COMMENT1$[50],COMMENT2$[50],COMMENT3$[50]
dim cc_tt$[4]
Dim nextblockid$[8],Message$[400],WebStr$[600],msg$[100]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],custom_customer$[30]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim blockid$[100],f$[16],stars$[128]
! call dxopen() ! needed?
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!call dxget("u_custom_customer", custom_customer$)
mat read #1,115,60;custom_customer$; ! ALT
custom_customer$=RTrim$(UCase$(custom_customer$))
sw[0] = 0 ! use dcs pdf attachment for email?
if custom_customer$ = "JPAPER" sw[0] = 1
if custom_customer$ = "AFP" call amalgamate(intCo) ! commission amalgamation
!call programdump("tmp/ij226ast!","")
COID=IntCo ! TT = Spc(5) \ COID = Int((TT - Int(TT / 16384) * 16384) / 64)
for ctr=2 to 89
	if ctr<>9
		try
			close#ctr
		else
			rem
		end try
	endif
next ctr
For J = 2 To 18
  Read J0 \ If J0 = -1 Goto L_830
  J2 = Abs(Fra(J0) * 1000) \ If J2 <= 88 Or J2 > Chf(1) - 1 Let J2 = 88
  J1 = Int(Abs(J0))
  Read #1,J2,J1;J$;
  If J0 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "1840","1856","1872","1888","1808","1792","2256","-1","2224","1824","1728","1248","2944","1760"
Data "-1","1744"," 2048"
Try
	v9=CHF(9) ! is there a sortfile?
Else
	X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w
	! if x2<0 Error 10000 ! problem with build
End try
Open #36,"2/lastprice" + Str$(COID)
Gosub L_6800 ! build temp workfile
SFLE$ = " ",SFLE$
SFLE$ = "[1:32] 6/SLSMTMP"
SFLE$ = SFLE$,Spc(6) Using "&&&&"
SFLE$ = SFLE$,"!"
Build #30,SFLE$
R = 2 \ Search #30,0,1;SLKEY$,R,E \ If E Gosub ERR_SEARCH
R = 1 \ Search #30,0,0;SLKEY$,R,E \ If E Gosub ERR_SEARCH
Close #30
SFLE$ = Spc(6) Using "6/SLSMTMP&&&&"
tmp$="chmod go+rw files/"+LCase$(SFle$)+"*"
System tmp$
Open #30,SFLE$
IRIP$ ="cntrl/irip"+Str$(COID)
! NOTE: only 1 screen and starts at 226 always
Read #1,20,42;N1;
JRNL = N1
call GetCostLevels(e$,Cost_Lev[],IntCO,UserID$)
Close #1 ! getsessions opens it as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,j$
Mat Read #1,0,100;ARDATE$;
Mat Read #1,0,120;ARMONTH;
Mat Read #1,115,0;D9;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
Read #1,3;CNAME$;
Mat Read #1,49,0;CCTYPE$;
Read #1,18,30;D9$;
Read #1,150,0;J$;
Open #35,J$
Read #1,88,1664;J$;
Open #37,J$
Read #1,88,800;F1$;
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
W0 = D9[5]
Dim 3%,T8[W0,7],COMM[W0,2],3%
!call dxsave(0,"tmp/226in.txt!")
!If Err 0 Let J8 = Spc(8)
J8 = 0;SCRPRT=0 !\ J9 = Chf(0)
!If Err 0 Gosub ERR_TRAP
!If J8 If J8 <> 49 Gosub ERR_TRAP
! move printer check to where print starts!
S1 = 6;S2 = 7
MULTIS = 0 \ If P9$[21,21] = "Y" Let MULTIS = 1
JTL2 = 0
stars$="*",stars$
!If PASSR[1] = 752
!  Call "Progdflt","752","",77,RETVAL$
!Else 
!  Call "Progdflt","226","",77,RETVAL$
!End If 
!Gosub DISP_SCRN
Try
Call getglobals("blockx",0,blockid$)
Else
	blockid$=""
End try
	 If blockid$ = "752" or blockid$="752a" ! how we know it's a 752?
		Let passr[1]=752;passr[2]=16
	Endif

  If PASSR[1] = 752
    If PASSR[3]
      SWH = PASSR[3];EWH = PASSR[3]
    Else 
      SWH = 1;EWH = D9[5]
    End If 
    ORDT = PASSR[2]
  End If 
Message$="";EFLG=0 ! error messages & flg
!call programdump("/tmp/irlog0!","")
!Call DXGet("IJABRT",tmp$) ! done on the first screen
!tmp$=UCase$(Trim$(tmp$))
! TMP$="Y" ! =======================================  temporary until fixed!!! ====
!If tmp$ <> "" ! 
!	Let Message$="OK - NO JOURNAL"
!	ReturnStatus=0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
!	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!	  call AddToStr(e$,rstr$,WebStr$)
!	  call SetOutPut(e$,rstr$)
!	  Goto OutEnd ! clear all
! Endif
DISP_SCRN: Rem
!Print 'CS';
!If PASSR[1] = 752
!  Print @0,0;"-MX752-";@17,0;"WAREHOUSE TRANSFER ";
!Else 
! Print @0,0;"-MX226A-";@25,0;
!End If 
!Print "INVOICE JOURNAL"
!Print @0,2;" 1. Is this a reprint? ";'CE';
!If S7 = 7 Print @4,3;'CE';"Reprint Which Journal ? ";
!Print @0,5;" 2. TYPE:         1:Cash  2:Orders  3:Both ";
!Print @24,6;'BR';"STARTING";@40,6;"ENDING";'ER';
!Print @0,7;'CE';" 3. ";D9$;":"
!Print @0,9;'CE';" 4. DIVISION: ";
!Print @0,11;'CE';" 5. ORDER TYPE: ";
!Print @0,12;'CE';" 6. INVOICE DATE: ";
!Print @0,13;'CE';" 7. Print  1:Invoice Journal  2:Salesperson Journal  3:Both ?";
!Print @0,15;'CE';" 8. Print Journal in D:detail or S:summary ? ";@55,15;"SPJ";
!Print @0,16;'CE';" 9. Print Invoice Lines in D:detail or S:summary ? ";@55,16;"SPJ";
!Print @0,17;'CE';"10. Print Cost in same U/M as Price U/M ? ";
!Print @0,18;'CE';"11. Print General Ledger Section in D:detail or S:summary ? ";
!Print @0,19;'CE';"12. Include Entered by Invoice Totals Page ? ";
!Print @0,20;'CE';"13. Print Whse/Div/Order type Summary Totals Page ? ";
!Return 
! ****** ACTUAL START OF GETTING PROMPT ANSWERED *************************
! FLAG -- IP PROCESS NOT SET UNTIL SUCCESSFUL PROMPT ENTRY
ASK_REPRINT: Rem  Is this a reprint?

Call DXGet("RPRTJ",J$) ! reprint of jrnl (Y/N)
K2$ = UCASE$(Trim$(J$)) \ if k2$="" let K2$="N"
if k2$<>"N" Let K2$="Y"
!If K2$ = "E" Goto OUTEND
If K2$ = "Y" Let S7 = S2
If K2$ = "N" Let S7 = S1
If Not(S7) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Reprint is Y or N! " ! Goto ASK_REPRINT
RETVAL$[1,1] = K2$[1,1] ! we'll retain this?
If S7 = S1 Goto L_1060
L_1040: !Print @5,3;'CL';"Reprint Which Journal? ";

Call DXGet("JRPRT",tmp$) ! journal to reprint
Let J1=tmp$
F8 = J1
L_1060: N1$ = " ",N1$
If S7 = 7 If Not(F8) Let N1$ = "ALL UNACCEPTED JOURNALS"
If S7 = 7 If F8 Let N1$ = F8 Using "REPRINT OF JOURNAL ######"
If S7 = 6 Let N1$ = N1 Using "JOURNAL ######"
!If S7 = 6 Print @5,3;'CL';
RETVAL$[16,21] = F8 Using "######"
! Return 
ASK_TYPE: Rem  1=cash, 2=orders, 3=both

Call DXGet("JTYPE",tmp$) ! 
Let J1=tmp$
P1 = J1
If P1 < 1 Or P1 > 3 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Type Selection not found " !Let P1=3 ! Goto ASK_TYPE
If P1 = 3 Let P1 = 0
TYPE = P1;TYPE[1] = P1;TYPE[2] = P1
RETVAL$[2,2] = P1 Using "#"
! Return 
ASK_WHSE: Rem "====== which warehouse(s) to print
START_WHSE: Rem

Call DXGet("SWHS",tmp$) \ j1=tmp$
SWH = J1
If SWH < 1 Or SWH > D9[5] let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse is 1 to 99! "!let swh=1 ! Goto START_WHSE
if passr[1]=752 let passr[3]=swh ! one and only
END_WHSE: Rem

Call DXGet("EWHS",tmp$) \ let j1=tmp$
EWH = J1
If Passr[1]=752 and EWH=0 let EWH=SWH
If EWH < 1 Or EWH > D9[5] let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse is 1 to 99! " !let EWH=D9[5] ! Goto END_WHSE
If EWH < SWH let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Whse Range Invalid! " !let EWH=SWH ! Gosub ERR_MSG \ Goto ASK_WHSE
RETVAL$[3,4] = SWH Using "##"
RETVAL$[33,34] = EWH Using "##"
! Return 
ASK_DIV: Rem "========= which division(s) to print
START_DIV: Rem
!J0$ = "3    228 9" \ J1 = SDIV
!J5$ = "Enter the starting division number maximum 99 "

Call DXGet("SDIV",tmp$) \ let j1=tmp$
SDIV = J1
If SDIV < 1 Or SDIV > 99 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division is 1 to 99! "!let SDiv=1 ! Goto START_DIV
END_DIV: Rem
!J0$ = "3    242 9" \ J1 = EDIV
!J5$ = "Enter the ending division number maximum 99 "

Call DXGet("EDIV",tmp$) \ let j1=tmp$
EDIV = J1
If EDIV < 1 Or EDIV > 99 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division is 1 to 99! "!let EDIV=99 ! Goto END_DIV
If EDIV < SDIV let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Division Range Invalid! "!let EDIV=SDIV ! Gosub ERR_MSG \ Goto ASK_DIV
RETVAL$[5,6] = SDIV Using "##"
RETVAL$[35,36] = EDIV Using "##"
! Return 
! ==== NEW FOR THE WEB - SALESPERSON RANGE  ================================
Call DXGet("SSLSP",tmp$) \ j1=TRIM$(tmp$)
if j1<1 or j1>999 or fra(j1) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Salesperson is 1 to 999! "!let j1=1
SSLSM=j1
Call DXGet("ESLSP",tmp$) \ j1=Trim$(tmp$)
If j1<1 or j1>999 or fra(j1) let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Salesperson is 1 to 999! "!let j1=999
If J1<SSLSM let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Salesperson Range Invalid! "!
ESLSM=J1
ASK_ORDTYPE: Rem PRINT BY ORD TYPE
!If PASSR[1] = 752 Print @15,11;"16"; \ Return 
!J0$ = "3    21511" \ J1 = ORDT
!J5$ = "Enter Order Type or 0 for all (Excluding OT 16)"
Call DXGet("OTYPE",tmp$) \ let j1=tmp$
If PASSR[1]=752 let j1=16 ! force the issue
ORDT = J1
If Fra(ORDT) Or ORDT < 0 Or ORDT > 40 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Types are 0 to 38! "!Let ORDT=0 ! 
If Passr[1]<>752 and ORDT = 16 let ordt=0 ! Goto ASK_ORDTYPE
RETVAL$[7,8] = ORDT Using "##"
!If ORDT = 0 And PASSR[1] <> 752 Print @20,11;"Excludes Type 16";
! Return 
ASK_INV_DATE: Rem"invoice date
!J5$ = "Enter the invoice date (MMDDYY) or ''0'' for all"
Call DXGET("IDATE",tmp$)  ! comes in as MMDDYY!
j1=tmp$;j4$=Trim$(tmp$)
If J4$ = "0" Let INVDATE = 0 \ J1 = 0
If J1 ! check if valid date
	x$=J1 using "&&&&&&"
	tmp$=x$[5,6]+X$[1,4] ! now YYMMDD
	j1=tmp$
	  tmp$=j1 Using "&&&&&&"
		Call DateToJulian(1,tmp$,tmp1$,F)
		If F let EFlg=EFlg+1;Message$=Message$+Str$(EFLG)+" INVALID INVOICE DATE!"! ;E$=Message$ \ goto L_9010
Endif
If J1 If J1 > 0 Let INVDATE = J1
If INVDATE Let X2 = INVDATE \ Gosub ISDUNPACK
!If INVDATE Print @25,12;'CL';X$ Else Print @25,12;'CL';"0"
RETVAL$[22,27] = INVDATE Using "&&&&&&"
! Return 
ASK_WHICH_JRNL: Rem  1=invoice journal, 2=salesperson journal, 3=both
Call DXGET("JRTYPE",tmp$) \ j1=tmp$
SORT = J1
If SORT < 1 Or SORT > 3 let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let sort=3 ! Goto ASK_WHICH_JRNL
RETVAL$[9,9] = SORT Using "#"
If SORT < 3 Let PASS = 0 \ Goto L_1240
SORT = 1 \ PASS = 1
L_1240: !If PASS = 0 And SORT = 1 Print @5,14;'CL'; \ Goto L_1245
!Print @5,14;'CL';"Print Cost & G/P on Salesperson Journal ?  ";
Call DXGet("PCGPSJ",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
If pass=0 and sort=1 let j1=0
PRTSCOST = J1
RETVAL$[10,10] = PRTSCOST Using "#"
if prtscost<>0
	IF COST_LEV[1]=0 let prtscost=0 ! not cost security on load cost
endif
L_1245: Rem "continue
If SORT = 1 And Not(PASS) ! "invoice only
  !Print @60,15;"N/A";@60,16;"N/A"
Else ! "includes salesperson or Both
  J$ = "S" \ If SMDTL[0] Let J$ = "D"
  !Print @60,15;'CL';J$;
  If Not(SMDTL[0]) Let SMDTL[1] = 0
  J$ = "S" \ If SMDTL[1] Let J$ = "D"
  !Print @60,16;'CL';J$;
End If 
! Return 
ASK_DET_SUM: Rem print journal in detail or summary?
Call DXGet("JDTSUM",tmp$) \ J$=Trim$(tmp$)
DT$ = J$
If DT$ = "S" Let DETAIL = 0
If DT$ = "D" Let DETAIL = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let detail=0 ! Goto ASK_DET_SUM
RETVAL$[11,11] = DT$[1,1]
If Not(DETAIL)
  LNDETL = 0 \ RETVAL$[12,12] = "S"
  !Print @51,16;RETVAL$[12,12]
End If 
If SORT = 1 And PASS = 0 ! "Invoice Journal Only
  !Print @60,15;"N/A";
  ! Return 
End If 
SLSPDTL: Rem "ask about salesperson detail
Call DXGet("SDTSUM",tmp$) \ j$=Trim$(tmp$)
If J$ <> "D" And J$ <> "S" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let J$="S" ! Goto SLSPDTL
If Sort=1 and pass=0 let J$="S"
SMDTL[0] = 0 \ If J$ = "D" Let SMDTL[0] = 1
RETVAL$[29,29] = J$
!If Not(SMDTL[0]) Print @60,16;"S"; \ SMDTL[1] = 0
!Return 
ASK_LINES: Rem print invoice lines in detail or summary?
!If Not(DETAIL) Print @51,16;"S" \ Goto STRTSPLNDTL
call dxget("LDTSUM",tmp$) \ j$=Trim$(tmp$)
If Detail=0 let j$="S"
DT$ = J$
If DT$ = "S" Let LNDETL = 0
If DT$ = "D" Let LNDETL = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let lndetl=0 ! Goto ASK_LINES
RETVAL$[12,12] = DT$
If Not(LNDETL) ! "this depends on Line Detail
  !Print @51,17;'CL';"N/A"
  CPSAME = 0
Else 
  DT$ = "N"
  If CPSAME Let DT$ = "Y"
  !Print @51,17;'CL';DT$;
End If 
STRTSPLNDTL: Rem "
If SORT = 1 And PASS = 0 ! "Invoice Journal Only
  !Print @60,16;"N/A";
  !Return 
End If 
If SMDTL[0] = 0 ! "want Journal in summary so no choice
  !Print @60,16;"S";
  SMDTL[1] = 0 !\ Return 
End If 
SLSPLNDTL: Rem "ask about salesperson Line detail
Call DXGet("SLDTSUM",tmp$) \ j$=Trim$(tmp$)
If Sort=1 and pass=0 let j$="S"
If SMDTL[0]=0 let j$="S"
If J$ <> "D" And J$ <> "S" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let J$="S" ! Goto SLSPLNDTL
SMDTL[1] = 0 \ If J$ = "D" Let SMDTL[1] = 1
RETVAL$[30,30] = J$
!Return 
ASK_CPSAME: Rem "cost u/m same as price u/m
If Not(LNDETL)
  !Print @51,17;"N/A"
  CPSAME = 0
  ! Return 
End If 
Call dxget("CPUM",tmp$) \ j$=Trim$(tmp$) \ if J$<>"" Let j$="Y"
If not(lndetl) or j$="" let j$="N"
DT$ = J$
RETVAL$[28,28] = DT$
CPSAME = 0
If DT$ = "Y" Let CPSAME = 1
! Return 
ASK_GL: Rem print g/l in detail or summary?
! If P9$[17,17] <> "Y" Return 

Call DXGet("GLDTSUM",tmp$) \ let J$=trim$(tmp$)
DT$ = J$
If P9$[17,17] <> "Y" LET DT$="S"
If DT$ = "S" Let GLDET = 0
If DT$ = "D" Let GLDET = 99
If DT$ <> "S" And DT$ <> "D" let eflg=eflg+1;Message$=Message$+Str$(EFLG)+" Selection not listed! "!let gldet=0 ! Goto ASK_GL
RETVAL$[13,13] = DT$
!Return 
ASK_ENTDBY: Rem ENTERED BY?

Call DXGet("EBTTL",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
ENTD = J1
If J1 Let RETVAL$[14,14] = "Y" Else Let RETVAL$[14,14] = "N"
!Return 
ASK_TOTALS: Rem "== one more question
Call DXGet("JSTTL",tmp$) \ j1=0 \ if tmp$<>"" let j1=1
JSDETL = J1
If J1 Let RETVAL$[15,15] = "Y" Else Let RETVAL$[15,15] = "N"
!Return 
! NEW - PROMPT FOR PREVIEW OR FINAL
Call DXGET("PRPRT",tmp$) ! (NOT ADDED?)
Let AudOnly=0 \ if tmp$<>"" Let AUDONLY=1
!call programdump("/tmp/irlog1!","")
If Eflg>0 ! found an issue
	let tmp$="THERE ARE "+Str$(eflg)+" ISSUES THAT NEED FIXING.. "+Message$
	ReturnStatus=1 ! 0 ! 1=no good (ONLY DISPLAYS IF =1 ??)
	call CreateNetStatus(e$,ReturnStatus,tmp$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
	  Goto L_9010 ! OutEnd - no glartemp clear!!
Endif
! GOTO OUTEND ! ====================== temp to prevent running!!! ===================
START_PRINT: Rem here we go...
TMP$="doing a lock"
call "proglock.dl4","226",1,TMP$
! DUE TO WEB - WE NEED TO CHANGE CREATING IRIP UNTIL ACTUAL RUN!!
	Chan=Findchannel()
	R=GetUIDRec(e$,IntCo,Userid$)
  !tmp$="<666> "+IRip$+"!"
   tmp$=IRip$+"!"
  Build #CHan,+tmp$
  Print #Chan;"invoice journal started ";Msc$(3)
  Print #Chan;"user ";R;" SPC 5= ";Spc(5)
  Close #Chan
  tmp$="chmod go+rw files/"+LCASE$(IRIP$)
  System tmp$
! moved from starting
R=getuidrec(e$,IntCo,userid$)
Mat read #1,120;p0;
let p0[226]=R
Mat write #1,120;p0; ! incase cleared (entry problem, etc)
gosub setglartemp ! set glar!
J8=0
Try
	J9=CHF(0)
Else
	Let J8=49
End try
J9 = 55 \ If J8 Let J9 = 20;SCRPRT = 99
If SCRPRT ! dx xml, setup rstr$ (PRINT TO BROWSER)
  ! <section>
  tmp$ = bsdel$,"226a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
! End If 
! if SCRPRT ! set up xml headings?
  tmp$ = "MESSAGE" ! PER ALL - NO XCEL OPTION! (MULTI LINE & MULTI SECTION!!)
  call addtostr(e$,rstr$,tmp$+rdel$)
  AUDONLY=1 ! change to AUDIT/Preview ONLY
  Goto OutEnd ! don't even process!!
Endif
!	Call SetOutput(e$,rstr$,2) ! send an "in process" message ! CANNOT DO AT THIS TIME
Gosub EMAILSALESCOPY
Gosub L_8700 ! Hist bits?
Gosub ALLJRNL_UNLOCK
L_1500: ! Print @0,22;'CL';"Clearing Totals..."; \ Signal 3,0
For J = 0 To 25
  T2[J] = 0
  If J < 14 Let T7[J] = 0
  If J < 21 Let T9[J] = 0
  If J < 9 Let T10[J] = 0
  If J < 3 Let T11[J] = 0
  If J < 15 Let TTOT[J] = 0
  If J < 9 Let T16[J] = 0
  If J < 5 Let T4[J] = 0;T5[J] = 0;T6[J] = 0
Next J
For J = 0 To D9[5]
  For J1 = 0 To 7
    If J1 < 8 Let T8[J,J1] = 0
    If J1 < 3 Let COMM[J,J1] = 0
  Next J1
Next J
For J = 0 To 999 ! \ If Not(Fra(J / 50)) Print ".";
  REC = J \ Gosub L_6750 ! write temp
Next J
SLSMTDGP = 0;SLSYTDGP = 0;SLSMTDSL = 0;SLSYTDSL = 0
TOTNET = 0;TOTFCST = 0
Gosub L_8800 ! clr summ totals
! Print @0,22;'CE';"Sorting, please wait..."; \ Signal 3,0
K1$ = " ",K1$
Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1625
Goto L_1900
L_1625: Rem "=========================================== sort invoices
K1$ = " ",K1$;K1$ = S7 Using "##     "
K3$ = K1$
L_1640: Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1800
If K1$[1,2] <> K3$[1,2] Goto L_1800
Rem {begin src/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
! If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
Mat Read #2,R1;H0; \ Mat Read #4,H0[3],8;T2;
Mat Read #2,R1,78;H4; \ Mat Read #2,R1,104;H5; \ Mat Read #2,R1,278;SLSM;
mat  read #2,r1,508;OT19Part;
Mat Read #2,R1,512;OREF;
Mat Read #15,H5[7],0;EX;
IF T2[21] GOTO L_1640:  !"cct195414 don't journal if order is on hold
If H5[7] = 12 Goto L_1640
! if (H5[7]=36 or H5[7]=37) goto L_1640 ! EVAP NOT READY
If PASSR[1] = 752 ! "strictly Whse Xfers and from whse
  If ORDT And H5[7] <> ORDT Goto L_1640
  If H5[11] < SWH Goto L_1640
  If H5[11] > EWH Goto L_1640
Else 
  If H4[2] < SWH Goto L_1640
  If H4[2] > EWH Goto L_1640
End If 
If Not(Multis) ! not 
	If H0[11]<SSLSM goto L_1640
	If H0[11]>ESLSM goto L_1640
Else ! got to check if any in range
	FSlsm=0
	For X=0 to 4
		If SLSM[X] 
			If SLSM[X]<SSLSM goto BPSLSM
			If SLSM[x]>ESLSM goto BPSLSM
			FSlsm=9
		Endif
	BPSLSM: ! bypass this guy
	Next X
	If FSlsm=0 ! none - check main
		If H0[11]<SSLSM goto L_1640 
		If H0[11]>ESLSM goto L_1640
	Endif ! if falls thru - main slsm made it
Endif ! if multis its also in sorting routine

If TYPE = 0 Goto L_1695
If P1 = 1 If T2[10] = 0 Goto L_1640
If P1 = 2 If T2[10] <> 0 Goto L_1640
L_1695: Rem IF DIV IF DIV<>H5[8] GOTO L_1640: ! "division doesn't match
If H5[8] < SDIV Goto L_1640
If H5[8] > EDIV Goto L_1640
If ORDT If ORDT <> H5[7] Goto L_1640
If PASSR[1] = 0 And ORDT = 0 And H5[7] = 16 Goto L_1640
If INVDATE If INVDATE <> H0[8] Goto L_1640
! check if cash sales and credit card transaction has not been pre-authorized
gosub L_6600: ! read cash file
if p61$[127,127]="Y" ! credit card using post -auth
	if cc_tt$[1,1]="A" goto L_1640: ! transaction has not gone thru post auth/mark for settlement
endif
K2$ = " ",K2$
K2$ = OREF[1] Using "&&&&&&&&&&";K2$[11] = H0[7] Using "######"
K2$[17,17] = "A"
Gosub SET_JRNL_STATUS
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$ \ TSRT = 0 \ K2$[1,1] = "#";K2$[2,4] = H0[11] Using "###"
If MULTIS
  For X = 0 To 4 \ If SLSM[X] = 0 Goto L_1745
	X2=SLSM[X]
    If X2>SSLSM AND X2<ESLSM ! in range
		TSRT = 1
		let K2$[2,4] = X2 Using "###" \ Gosub L_1760
	Endif
L_1745: Next X \ If TSRT = 0 Goto L_1760
  TSRT = 0 \ Goto L_1780
End If 
L_1760: K2$[5] = OREF[1] Using "##########";K2$[15] = H0[7] Using "######"
K2$[21,21] = "A"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
If TSRT = 1 If MULTIS Return 
L_1780: Goto L_1640
L_1800: Rem "================================ include deleted inv's now
! call programdump("/tmp/irlog2!","")
K1$ = " ",K1$;K1$ = S7 Using "##     "
K3$ = K1$
L_1815: Search #13,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_1900
If K1$[1,2] <> K3$[1,2] Goto L_1900
Mat Read #13,R1;DL;
Mat Read #13,R1,100;DL3;
If DL[8] < SWH Goto L_1815
If DL[8] > EWH Goto L_1815
If DL[6]<SSLSM GOTO L_1815
If DL[6]>ESLSM goto L_1815
If TYPE = 0 Goto L_1855
If P1 = 1 If DL[10] > 1 Goto L_1815
If P1 = 2 If DL[10] = 1 Goto L_1815
L_1855: Rem IF DIV IF DIV<>DL[9] GOTO L_1815: ! "division doesn't match
If DL[9] < SDIV Goto L_1815
If DL[9] > EDIV Goto L_1815
K2$ = " ",K2$
K2$ = DL3 Using "&&&&&&&&&&";K2$[11] = DL[3] Using "######"
K2$[17,17] = "D"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$ \ K2$[1,1] = "#";K2$[2,4] = DL[6] Using "###"
K2$[5] = DL3 Using "##########";K2$[15] = DL[3] Using "######"
K2$[21,21] = "D"
Search #9,4,1;K2$,R1,E \ If E Gosub ERR_SEARCH
Goto L_1815
L_1900: Rem "========================================= start print
PCTR = 0
!Print @0,22;'CE';"Printing, please wait..."; \ Signal 3,0
!If J8 Print 'CS';
J2 = 0;J1 = 90
P1 = TYPE \ If P1 <= 0 Let P1 = 1
If PASS = 0 Let TYPE = 9
L_1940: ! If Err 0 Gosub ERR_ESCAPE
If SORT = 1 Let POS_ = 17
If SORT = 2 Let POS_ = 21
K1$ = "# " \ SP = 9999
If SORT = 1 Let K1$[1,2] = "#}"
I_CTR = 0
! call programdump("/tmp/irlog3!","")
L_2000: Rem "===================================== main invoice loop here!
L_2005: Search #9,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Goto L_9100
Rem {begin src/inc/#rtn.printmsg.i}
If Not(SCRPRT)
  PCTR = PCTR + 1
  !If Not(Fra(PCTR / 500))
    !Print Using "#######";@25,22;PCTR;" Records Printed";
    !Print Using "   Page ####";V9[0];
  !End If 
End If 
Rem {end #rtn.printmsg.i}
If SORT = 2 If K1$[1,1] <> "#" Goto L_9100
If K1$[1,1] = "''" Goto L_2005
If K1$[POS_,POS_] = "D" Goto L_5400
Mat Read #2,R1,0;H0; \ Mat Read #4,H0[3],8;T2;
If P1 = 1 If T2[10] = 0 Goto L_2000
If P1 = 2 If T2[10] <> 0 Goto L_2000
If SORT = 2 If MULTIS Gosub L_3500
If SP <> H0[11] And SP <> 9999 Gosub L_4800
If SP <> H0[11] And SORT = 2 And EMAILREP
  NEEDOPENEMCH = 1
Else 
  NEEDOPENEMCH = 0
End If 
SP = H0[11] \ Gosub L_10000
Mat Read #2,R1,446;P0$
Mat Read #2,R1,78;H4
Mat Read #2,R1,104;H5
Mat Read #2,R1,278;SLSM
Mat Read #2,R1,318;SCOM
Mat Read #2,R1,348;SMER
Mat Read #2,R1,378;SCST
Mat Read #2,R1,408;H6
mat  read #2,r1,508;OT19Part
Mat Read #2,R1,512;OREF;
W0 = H4[2]
Mat Read #3,H0[2],8;S1$;
Read #4,H0[3],164;JRNL;
If S7 = 7 If F8 If JRNL <> F8 Goto L_2000
Mat Read #4,H0[3],8;T2;
T2[1] = T2[1] - H6[6];T2[5] = T2[5] + H6[6]
D3[0] = 0;D3[1] = 0
If T2[1] Let D3[1] = T2[3] / T2[1]
If D3[1] < -1 Or D3[1] > 1 Let D3[1] = 0
D3[0] = D3[1]
Gosub L_6600
If S7 = 6 Let JRNL = N1 \ If Not(AudOnly) Write #4,H0[3],164;JRNL;
T2[4] = T2[4] + T2[6]
X2 = H0[8] \ Gosub L_7700 \ D1$ = X$
TOTCOM = 0
If H5[7]<>36 And H5[7]<>37 ! No commiss for these
	For X = 0 To 4 \ TOTCOM = TOTCOM + SCOM[X] \ Next X
endif
Gosub L_3000 \ Gosub L_3200
Gosub L_5800
If SORT <> 2 ! "invoice
  If DETAIL
    Gosub L_5000
  Else 
    Gosub L_5700
  End If 
Else ! "salesrep
  If SMDTL[0] ! "want detail
    Gosub L_5000
  Else 
    Gosub L_5700
  End If 
End If 
Gosub L_2200
If SORT <> 2 ! "invoice j
  If DETAIL
    Gosub L_4500
    Gosub L_5200
  End If 
Else ! "salesrep
  If SMDTL[0]
    Gosub L_4500
    Gosub L_5200
  End If 
End If 
Gosub L_2500
Goto L_2000
L_2200: Rem "=========================== journal totals calc
If H5[7]=19 And OT19Part Return ! "no total on these!
TOT = 0 \ If SORT = 2 If MULTIS Gosub L_2400
For J = 0 To 5
  If TOT = 1 Goto L_2220
  If J = 1 Let T11[J] = T11[J] + (H5[13] - H5[14])
  If J = 2 Let T11[J] = T11[J] + TOTCOM
L_2220: If J = 2 Goto L_2240
  T9[J] = T9[J] + T2[J]
  If TOT = 0 Let T10[J] = T10[J] + T2[J]
L_2240: Next J
T9[2] = T9[2] + T2[7]
If TOT = 0
  TOTCOST = TOTCOST + H5[14]
  T10[8] = T10[8] + H5[13]
  T10[2] = T10[2] + T2[7]
  T10[6] = T10[6] + (H5[13] - H5[14])
  T10[7] = T10[7] + TOTCOM
  TOTMERCHCOST = TOTMERCHCOST + T2[17]
End If 
If T2[10] <= 0 Goto L_2310
If CSH0[2] = 0 Goto L_2310
If T2[10] > 3 Goto L_2310
REC = H5[0] \ Gosub L_6700
If CSH0[2] Let T6[CSH0[2] - 1] = T6[CSH0[2] - 1] + CSH1[0]
If CSH0[3] Let T6[CSH0[3] - 1] = T6[CSH0[3] - 1] + CSH1[1]
T6[4] = T6[4] + T2[0]
T5[CSH0[2] - 1] = T5[CSH0[2] - 1] + T2[0]
If T2[12] >= T2[0] Goto L_2300
T4[CSH0[2] - 1] = T4[CSH0[2] - 1] + (T2[0] - (CSH1[0] + CSH1[1]))
L_2300: REC = H5[0] \ Gosub L_6750
L_2310: Rem
INVNET = FNR((H5[13] - H5[14]) - (H5[13] * CFIN[8] / 100))
If TOT = 0 Let TOTNET = TOTNET + INVNET
If TOT = 0 Let TOTFCST = TOTFCST + T2[20]
Return 
L_2360: Rem ENT'D BY TOTALS
If H5[7]=19 And OT19Part Return ! "no total on these!
REC = H5[0] \ Gosub L_6700
For J = 0 To 5
  If J = 2 Let T16[J] = T16[J] + T2[7] \ Goto L_2380
  T16[J] = T16[J] + T2[J]
L_2380: Next J
T16[6] = T16[6] + H5[13]
T16[8] = T16[8] + (H5[13] - H5[14])
T16[7] = T16[7] + 1
REC = H5[0] \ Gosub L_6750
Return 
L_2400: Rem MULTI-REP TOTALS
If H5[7]=19 And OT19Part Return ! "no total on these!
If H5[7]=36 Or H5[7]=37 Return ! "no comm for these
TOT = 0 \ If SLMN = -1 Return 
T10[0] = T10[0] + SMER[SLMN];T10[1] = T10[1] + SMER[SLMN]
T11[1] = T11[1] + (SMER[SLMN] - SCST[SLMN])
T11[2] = T11[2] + SCOM[SLMN]
T10[6] = T10[6] + (SMER[SLMN] - SCST[SLMN]);T10[7] = T10[7] + SCOM[SLMN]
TOTMERCHCOST = TOTMERCHCOST + SCST[SLMN]
TOTCOST = TOTCOST + SCST[SLMN]
TOT = 1
Return 
L_2500: Rem "=========================================== add to wh totals
If H5[7]=19 And OT19Part Return ! "no total on these!
If SORT <> 2 Or Not(MULTIS) Goto L_2530
Z1$ = " ",Z1$;Z1$ = "''",K1$[5,16]
Search #9,2,1;Z1$,J,E \ If E > 1 Gosub ERR_SEARCH
If Not(E) Goto L_2590
Search #9,4,1;Z1$,J,E \ If E Gosub ERR_SEARCH
L_2530: For J = 0 To 5
  If J = 1 Let COMM[0,J] = COMM[0,J] + (H5[13] - H5[14])
  If J = 1 Let COMM[W0,J] = COMM[W0,J] + (H5[13] - H5[14])
  If J = 2 Let COMM[0,J] = COMM[0,J] + TOTCOM
  If J = 2 Let COMM[W0,J] = COMM[W0,J] + TOTCOM
  If J = 2 Let T8[0,J] = T8[0,J] + T2[7]
  If J = 2 Let T8[W0,J] = T8[W0,J] + T2[7] \ Goto L_2570
  T8[0,J] = T8[0,J] + T2[J] \ T8[W0,J] = T8[W0,J] + T2[J]
L_2570: Next J
T8[0,6] = T8[0,6] + (H5[13] - H5[14]) \ T8[W0,6] = T8[W0,6] + (H5[13] - H5[14])
T8[0,7] = T8[0,7] + H5[13] \ T8[W0,7] = T8[W0,7] + H5[13]
Gosub L_2360
Gosub L_2600
L_2590: Return 
L_2600: Rem WH/DIV/TYPE TOTALS
If H5[7]=19 And OT19Part Return ! "no total on these!
K35$ = " ",K35$;K35$[1,2] = JTL2 Using "##"
K35$[3,4] = W0 Using "##";K35$[5,6] = H5[8] Using "##";K35$[7,8] = H5[7] Using "##"
Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
If E = 0 Goto L_2700
E = 2;R35 = 0
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Search #35,4,1;K35$,R35,E \ If E Gosub ERR_SEARCH
For LUP = 0 To 13
  JTL1[LUP] = 0 \ If LUP <= 2 Let JTL[LUP] = 0
Next LUP
JTL[0] = W0;JTL[1] = H5[8];JTL[2] = H5[7]
Mat Write #35,R35,0;JTL
Mat Write #35,R35,6;JTL1
Mat Write #35,R35,126;JTL2
L_2700: Rem TOTAL ROUTINE
NUMLINES = 0;TPS = 0
J2$ = " ",J2$;J2$[1,6] = H0[7] Using "######"
L_2715: Search #5,3,1;J2$,R5,E \ If E = 2 Goto L_2740
If E Gosub ERR_SEARCH
X3 = J2$[1,6] \ If X3 <> H0[7] Goto L_2740
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,8;L3; \ Mat Read #5,R5,16;L4; 
Mat Read #5,R5,256;OLS2; 
If OLS2[0]=3 Let AMOUNT = 0 \ Goto L_2728 !MESSAGE LINE - ZERO AMOUNT
If L3 Let AMOUNT = L7[4] \ Goto L_2728

If Not(L3) Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2;
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[4] \ Gosub L_20000
L_2728: TPS = TPS + AMOUNT
NUMLINES = NUMLINES + 1
Goto L_2715
L_2740: Mat Read #35,R35,6;JTL1
For J = 0 To 5
  If J = 2 Let JTL1[J] = JTL1[J] + T2[7] \ Goto L_2760
  JTL1[J] = JTL1[J] + T2[J]
L_2760: Next J
JTL1[6] = JTL1[6] + T2[17];JTL1[7] = JTL1[7] + T2[15]
JTL1[8] = JTL1[8] + T2[16];JTL1[9] = JTL1[9] + (H5[13] - H5[14])
JTL1[10] = JTL1[10] + 1;JTL1[11] = JTL1[11] + NUMLINES
JTL1[12] = JTL1[12] + TPS
Mat Write #35,R35,6;JTL1;
BWH[W0] = 1;BDV[H5[8]] = 1;BTYP[H5[7]] = 1
If W0 > HWH Let HWH = W0
If H5[8] > HDV Let HDV = H5[8]
If H5[7] > HOTP Let HOTP = H5[7]
Return 
L_3000: Rem "======================================== read customer name
J3$ = " ",J3$ \ J3$ = H0[4] Using "######"
Search #6,2,1;J3$,R6,E
If K1$[POS_,POS_] = "D" If E Let C1$ = "CUSTOMER NOT ON FILE !!!! " \ Return 
If E Gosub ERR_SEARCH
Mat Read #6,R6,30;C1$;
Mat Read #6,R6,544;CFIN;
Return 
L_3200: Rem "======================================== read bill to
J3$ = " ",J3$ \ J3$ = H0[1] Using "######"
Search #6,2,1;J3$,R6,E \ If E > 1 Gosub ERR_SEARCH
If E If H0[1] = H0[4] Gosub ERR_SEARCH
If E If H0[1] <> H0[4] Let H0[1] = H0[4] \ Write #2,R1,4;H0[1] \ Goto L_3200
Mat Read #6,R6,30;C2$;
Return 
L_3500: Rem MULTI SLSM RTN
If SORT <> 2 If Not(MULTIS) Return 
SLMN = -1;X2 = K1$[2,4]
Mat Read #2,R1,278;SLSM;
For X = 0 To 4 \ If SLSM[X] = 0 Goto L_3540
  If X2 = SLSM[X] Let SLMN = X
L_3540: Next X
If SLMN = -1 Return 
If SLSM[SLMN] <> 0 Let H0[11] = SLSM[SLMN]
Return 
L_3600: Rem PRINT SLSM SUMMARY
If H5[7]=19 And OT19Part Return 1 ! "not on ot19 partials
If H5[7]=36 Or H5[7]=37 Return 1 ! "no commiss on these
If SLMN = -1 Return 1
PRTCH = 0
SLSSUMLOOP_1: Rem* do it twice if we are also emailing report
Print #prtCH; Using "-------#.##"; Tab 45;SMER[SLMN];
Print #prtCH; Using "------#.## "; Tab 83;SMER[SLMN];
If SORT = 2 If PRTSCOST Print #prtCH; Using "------#.## ";SCST[SLMN];SMER[SLMN] - SCST[SLMN];
If SORT = 2 If Not(PRTSCOST) Goto L_3650
if cost_lev[1]<>0
	If SMER[SLMN] Print #prtCH; Using " ---.-"; Tab 115;FNR(((SMER[SLMN] - SCST[SLMN]) / SMER[SLMN]) * 100);
endif
L_3650: Print #prtCH; Using "-----#.##"; Tab 122;SCOM[SLMN];
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSSUMLOOP_1
Return 
L_3700: Rem MULTI-REP INV TOTALS
If H5[7]=19 And OT19Part Return 1 ! "no total on these!
If H5[7]=36 Or H5[7]=37 Return 1 ! "no commiss on these
If SLMN = -1 Return 1
If SORT <> 2 Return 1
Print #0; Using "INVOICE ######## TOTALS: "; Tab 10;OREF[1];
If EMCH <> -1 Print #EMCH; Using "INVOICE ######## TOTALS: "; Tab 10;OREF[1];
X$ = "-----#.##";X1$ = "------#.##" \ If J1 + 6 >= J9 Let J1 = 99 \ Gosub L_5800
PRTCH = 0
INVMULTIREPLOOP_1: Rem* do it twice if we are also emailing report
If SMER[SLMN] If EX[15] If FNR((SMER[SLMN] - SCST[SLMN]) / SMER[SLMN] * 100) < EX[15] Print #prtCH;" *** LOW GP ***"; \ Goto L_3735
If EX[1] If FNR(SMER[SLMN] - SCST[SLMN]) < EX[1] Print #prtCH;" *** LOW GP ***";
L_3735: If SMER[SLMN] Print #prtCH; Using X$; Tab 105;"SUBTOTAL"; Tab 122;FNR(SMER[SLMN]) \ If PRTCH = 0 Let J1 = J1 + 1
Print #prtCH; Using X$; Tab 105;"INV TOTAL"; Tab 122;SMER[SLMN] \ If PRTCH = 0 Let J1 = J1 + 1
If SORT = 2 If Not(PRTSCOST) Goto L_3790
if cost_lev[1]<>0
	Print #prtCH; Using X$; Tab 105;"GROSS PROFIT"; Tab 122;SMER[SLMN] - SCST[SLMN] \ If PRTCH = 0 Let J1 = J1 + 1
	If SMER[SLMN] Print #0; Using X$; Tab 105;"GROSS PROFIT %"; Tab 122;(SMER[SLMN] - SCST[SLMN]) / SMER[SLMN] * 100 \ If PRTCH = 0 Let J1 = J1 + 1
	If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVMULTIREPLOOP_1
endif
L_3790: Gosub L_5800
PRTCH = 0
INVMULTIREPLOOP_2: Rem* do it twice if we are also emailing report
Print #prtCH; Using "COMMISSION RATE: ###.##% "; Tab 86;SLSM[SLMN + 5];
Print #prtCH; Using "AMOUNT: -----#.##"; Tab 114;SCOM[SLMN];
Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVMULTIREPLOOP_2
J1 = J1 + 1 \ Gosub L_5800
Return 
L_4000: Rem "=========================================== journal totals
If SORT = 2 Goto L_4085
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 10;"JOURNAL TOTALS";
If Not(DETAIL) Goto L_4037
Print #0; Tab 45;"INV COUNT"; Tab 56;"MDSE AMT"; Tab 69;"DISC";
Print #0; Tab 75;"MISC/HAND"; Tab 86;"TAX AMT"; Tab 95;"FREIGHT";
if cost_lev[1]<>0
	Print #0; Tab 107;"GP"; 
endif
Print #0; Tab 122;"INV TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
L_4037: If DETAIL
  Print #0; Using "#####"; Tab 47;I_CTR;
  Print #0; Using "----###.##"; Tab 52;T9[1];   
  Print #0; Using "-----#.##"; Tab 58;T9[3];	
  Print #0; Using "-----#.##"; Tab 70;T9[4];	
  Print #0; Using "-----#.##"; Tab 84;T9[2];	
  Print #0; Using "-----#.##"; Tab 93;T9[5];	
  if cost_lev[1]<>0
	Print #0; Using "------#.##"; Tab 102;T11[1];	
  endif
  Print #0; Using "-----###.##"; Tab 120;T9[0];	
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Else 
  Print #0; Using "#####"; Tab 40;I_CTR;
  Print #0; Using "-------#.##"; Tab 45;T9[1];	
  Print #0; Using "-----#.##"; Tab 55;T9[2];	
  Print #0; Using "-----#.##"; Tab 64;T9[5];	
  Print #0; Using "----##.##"; Tab 73;T9[4];	
  Print #0; Using "-----###.##"; Tab 82;T9[0];
  if cost_lev[1]<>0
	Print #0; Using "-----###.##"; Tab 93;TOTCOST;
	if abs(t11[1])<=99999.99 Print #0; Using "-----#.##"; Tab 106;T11[1];    ! goes from 106 to 114
	If T11[1] + TOTCOST 
		if FNR(100 * T11[1] / (T11[1] + TOTCOST))<999.9
			Print #0; Using "----.-"; Tab 115;FNR(100 * T11[1] / (T11[1] + TOTCOST));
		else
			Print #0; Using "------"; Tab 115;FNR(100 * T11[1] / (T11[1] + TOTCOST));
		endif
	endif
  endif
  Print #0; Using "-----#.##"; Tab 122;T10[7];
  Print #0;"" \ J1 = J1 + 1 
  if cost_lev[1]<>0 and abs(t11[1])>99999.99 Print #0; Using "-------#.##"; Tab 104;T11[1] \ j1=j1+1
  Gosub L_5800
End If 
X3 = 0
For X1 = 1 To 9
  X3 = X3 + DDCOUNT[X1]
Next X1
If X3
  Print #0; Tab (45);"DOC. DELIVERY COUNTS: ";
  If DDCOUNT[0] Print #0;"   PRINTED:";DDCOUNT[0];
  If DDCOUNT[1] Print #0;"   FAXED:";DDCOUNT[1];
  If DDCOUNT[2] Print #0;"   EMAIL:";DDCOUNT[2];
  If DDCOUNT[9] Print #0;"   NOT PRINT:";DDCOUNT[9];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
End If 
L_4085: If PASS = 0 Gosub L_6200
If P1 = 1 Gosub L_7000 \ F9 = 0 \ J1 = 90
If Not(TYPE[1]) Return 
If SORT = 2 Gosub SLSTMP
J1 = 75;HDG = 9 \ Gosub L_5800
For J = 0 To 20 \ T9[J] = 0 \ Next J
TOTCOST = 0;TOTMERCHCOST = 0
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If SORT = 2 If Not(PRTSCOST) Goto L_4115
if cost_lev[1]<>0
	Print #0; Tab 28;"GROSS PROFIT"; Tab 42;"GP %";
endif
L_4115: If SORT = 2 Print #0; Tab 48;"COMMISSION";
Print #0; Tab 62;"MDSE AMT"; Tab 77;"DISC"; Tab 84;"MISC/HAND";
Print #0; Tab 96;"TAX AMT"; Tab 109;"FREIGHT"; Tab 122;"INV TOTAL";
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
For W0 = 1 To D9[5]
  For J = 0 To 7
    If T8[W0,J] Gosub L_4165
  Next J
Next W0
W0 = 0
L_4165: Rem "==================================== grand tot's  (mtd & ytd)
Print #0;" " \ J1 = J1 + 1 \ Gosub L_5800
If W0 Print #0;D9$;":";W0;
If Not(W0) Print #0;" ALL ";D9$;"S:";
Print #0; Tab 15;"JOURNAL TOTALS";
If SORT = 2 If Not(PRTSCOST) Goto L_4191
IF COST_LEV[1]<>0
	Print #0; Using "-----###.##"; Tab 29;COMM[W0,1];
endif
L_4191: Rem LET X3=T8[W0,1] ! "mdse amt
If SORT = 2 If Not(PRTSCOST) Goto L_4200
If COST_LEV[1]<>0
	If T8[W0,7] Print #0; Using "---#.##"; Tab 40;FNR(COMM[W0,1] / T8[W0,7] * 100);
endif
L_4200: If SORT = 2 Print #0; Using "-----###.##"; Tab 47;COMM[W0,2];
Print #0; Using "--------#.##"; Tab 59;T8[W0,1];
Print #0; Using "------#.##"; Tab 72;T8[W0,3];
Print #0; Using "------#.##"; Tab 83;T8[W0,4];
Print #0; Using "------#.##"; Tab 95;T8[W0,2];
Print #0; Using "-------#.##"; Tab 106;T8[W0,5];
Print #0; Using "-------#.##"; Tab 120;T8[W0,0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Mat Read #8,W0,42;T7;
If S7 = S2 Goto L_4270
For X1 = 0 To 6
  T7[X1] = T7[X1] + T8[W0,X1]
  T7[X1 + 7] = T7[X1 + 7] + T8[W0,X1]
Next X1
L_4270: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 15;"MTD TOTALS";
If SORT = 2 If Not(PRTSCOST) Goto L_4281
If COST_LEV[1]<>0
	Print #0; Using "--------###.##"; Tab 26;T7[6];
endif
L_4281: X3 = T7[1]
If P9$[35,35] = "Y" Let X3 = X3 + T7[5]
If P9$[38,38] = "Y" Let X3 = X3 + T7[4]
If SORT = 2 If Not(PRTSCOST) Goto L_4290
If COST_LEV[1]<>0
	If X3 Print #0; Using "---#.##"; Tab 40;FNR(T7[6] / X3 * 100);
endif
L_4290: Print #0; Using "----------#.##"; Tab 57;T7[1];
Print #0; Using "-------#.##"; Tab 71;T7[3];
Print #0; Using "------#.##"; Tab 83;T7[4];
Print #0; Using "-------#.##"; Tab 94;T7[2];
Print #0; Using "-------#.##"; Tab 106;T7[5];
Print #0; Using "----------#.##"; Tab 117;T7[0];
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Print #0; Tab 15;"YTD TOTALS";
If SORT = 2 If Not(PRTSCOST) Goto L_4331
If COST_LEV[1]<>0
	Print #0; Using "--------###.##"; Tab 26;T7[13];
endif
L_4331: X3 = T7[8]
If P9$[35,35] = "Y" Let X3 = X3 + T7[12]
If P9$[38,38] = "Y" Let X3 = X3 + T7[11]
If SORT = 2 If Not(PRTSCOST) Goto L_4340
If COST_LEV[1]<>0
	If X3 Print #0; Using "---#.##"; Tab 40;T7[13] / X3 * 100;
endif
L_4340: Print #0; Using "----------#.##"; Tab 57;T7[8];
Print #0; Using "-------#.##"; Tab 71;T7[10];
Print #0; Using "-------#.##"; Tab 82;T7[11];
Print #0; Using "-------#.##"; Tab 94;T7[9];
Print #0; Using "-------#.##"; Tab 106;T7[12];
Print #0; Using "----------#.##"; Tab 117;T7[7];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
J = 7 \ If W0 Return 
HDG = 0
If JSDETL Gosub L_11000
!If Err 0 Gosub ERR_TRAP
Return 
L_4400: Rem PRINT SERIAL NO'S
If L3 <> 0 Or L7[4] = 0 Return 
SNO = 0 \ If P1$[8,8] <> "Y" Return 
SNK$ = " ",SNK$;SNK$[1,6] = H0[7] Using "######";SNK$[7,9] = L3[2] Using "###"
L_4420: Search #14,3,1;SNK$,R14,E \ If Not(SNO) If E Return 
If E Goto L_4480
X2 = SNK$[1,6];LN = SNK$[7,9]
If X2 <> H0[7] Or LN <> L3[2] Goto L_4480
Mat Read #14,R14,0;SN1$;
If Not(SNO)
  Print #0;"  SERIAL NUMBERS ENTERED"
  If EMCH <> -1 Print #EMCH;"  SERIAL NUMBERS ENTERED"
  J1 = J1 + 1 \ Gosub L_5800
End If 
SNO = SNO + 1
Print #0;SN1$[25,54];"  ";
If EMCH <> -1 Print #EMCH;SN1$[25,54];"  ";
If Not(Fra(SNO / 4))
  Print #0;""
  If EMCH <> -1 Print #EMCH;""
  J1 = J1 + 1 \ Gosub L_5800
End If 
Goto L_4420
L_4480: If Not(SNO) Print #0;" *** NO SERIAL NUMBERS ENTERED ***";
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
Return 
L_4500: Rem "=========================================== detail line loop
T9[6] = 0
J2$ = " ",J2$ \ J2$ = H0[7] Using "######   "
L_4515: Search #5,3,1;J2$,R5,E \ If E > 2 Gosub ERR_SEARCH
If E Return 
X3 = J2$[1,6] \ If X3 <> H0[7] Return 
Mat Read #5,R5,8;L3;
Mat Read #5,R5,16;L4;
If SORT = 2 If MULTIS If L4[1] <> SP Goto L_4515
Mat Read #5,R5,32;L5; \ Mat Read #5,R5,56;L6;
Mat Read #5,R5,80;L6$; \ Mat Read #5,R5,140;L1$;
Mat Read #5,R5,168;L7; \ Mat Read #5,R5,250;UN;
Mat Read #5,R5,260;S3;
Mat Read #5,R5,256;OLS2; \ Mat Read #5,R5,404;OLM;
Mat Read #5,R5,446;EUN; \ Mat Read #5,R5,452;UNF;
Mat Read #5,R5,508;LTAX1; \ Mat Read #5,R5,538;LTAX2;
READ #5,R5,564;ROL0;
PUNIT$ = "   ";CUNIT$ = "    ";SUNIT$ = "    ";P1$ = " ",P1$
L5[2] = L5[2] - S3[15];L5[3] = L5[3] - OLM[1]
OLM[3] = OLM[3] - S3[15]
If Not(L3)
  Mat Read #7,L4,512;PFU1; \ Mat Read #7,L4,554;PFU2;
  Mat Read #7,L4,0;P1$; \ Mat Read #7,L4,256;A;
  Mat Read #7,L4,156;PRODB;
End If 
Gosub L_30000
COSTCHG = 0 \ If Not(L3) Gosub L_10500
For X = 0 To 3 \ SUNIT[X] = 0 \ Next X \ CUNIT = 0;PUNIT = 0
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Let OLS2[0] = 3
If OLS2[0] = 3 Goto L_4700 ! Or L3[2] >= 900 Goto L_4700
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Goto L_4700
For X = 1 To 3
  CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1;CNVTA = L7[X + 1]
  Gosub L_20000
  SUNIT[X] = AMOUNT
Next X
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = OLM[3]
Gosub L_20000
PUNIT = AMOUNT
! 12137 - show net cost - not unit cost
IF S3[11]=-3 AND L7[2] LET CHBASE=(S3[1]/L7[2]) ELSE  LET CHBASE=S3[1]
LET NETCOST[0]=L5[1]+CHBASE
IF ROL0
  IF ROL0<0
    LET NETCOST[0]=NETCOST[0]+ABS(ROL0)
  ELSE
    LET NETCOST[0]=NETCOST[0]+(NETCOST[0]*(ROL0/100))
  ENDIF
ENDIF
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = NetCost[0] ! L5[1]
If CPSAME Let CNVTU[1] = UN[1]
Gosub L_20000
CUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[1];CNVTU[2] = 2;CNVTA = L6[1]
Gosub L_20000 \ L6[1] = AMOUNT
If UN[0] > 0 Mat Read #12,UN[0],10;SUNIT$;
If UN[0] = -1 Let SUNIT$ = "CWT "
If UN[0] = -2 Let SUNIT$ = "LOT "
If UN[0] = -3 Let SUNIT$ = "LB  "
If UN[1] > 0 Mat Read #12,UN[1],10;PUNIT$;
If UN[1] = -1 Let PUNIT$ = "CWT "
If UN[1] = -2 Let PUNIT$ = "LOT "
If UN[1] = -3 Let PUNIT$ = "LB  "
If UN[2] > 0 Mat Read #12,UN[2],10;CUNIT$;
If UN[2] = -1 Let CUNIT$ = "CWT "
If UN[2] = -2 Let CUNIT$ = "LOT "
If UN[2] = -3 Let CUNIT$ = "LB  "
If CPSAME Let CUNIT$ = PUNIT$
L_4700: Gosub L_5800
!  If L3[2] >= 900 Let L5[3] = 0 - L5[3]
Gosub CHK_LPFILE
If SORT <> 2 ! "inv jrnl
  If LNDETL
    Gosub L_5500
  Else 
    Gosub L_6400
  End If 
Else ! "salesrep
  If SMDTL[1] ! "want detail
    Gosub L_5500
  Else 
    Gosub L_6400
  End If 
End If 
If H5[7]=19 And OT19Part Goto NoiNTtls
T9[9] = FNR(L5[3] - S3[12])
T9[6] = T9[6] + T9[9]
T9[10] = T9[10] + T9[9]
NoiNTtls: ! bypass
Gosub L_4400
Goto L_4515
L_4800: Rem "======================================= salesrep sub-totals
If SORT <> 2 Return 
If EMCH <> -1 Print #EMCH;""
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
If SP <> 9999 And SMDTL[0]
  Print #0; Using "SALESPERSON ### "; Tab 10;SP;S2$[1,30];" TOTALS: ";
  If EMCH <> -1 Print #EMCH; Using "SALESPERSON ### "; Tab 10;SP;S2$[1,30];" TOTALS: ";
End If 
If SP <> 9999 And Not(SMDTL[0])
  Print #0; Using "SALESPERSON ### "; Tab 10;SP;S2$[1,30] \ J1 = J1 + 1
  Print #0; Tab 10;"TOTALS: ";
  If EMCH <> -1
	  Print #0; Using "SALESPERSON ### "; Tab 10;SP;S2$[1,30]
	  Print #0; Tab 10;"TOTALS: ";
  end if
End If 
If Not(SMDTL[0]) Goto L_4857
If EMCH <> -1 Print #EMCH;""
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
PRTCH = 0
SLSREPLOOP_1: Rem* do it twice if we are also emailing report
If SORT = 2 If Not(PRTSCOST) Goto L_4842
Print #prtCH; Tab 25;"GP"; Tab 32;"PCT"; Tab 43;"CP";
L_4842: Print #prtCH; Tab 55;"COMMISSION";
Print #prtCH; Tab 68;"MDSE AMT"; Tab 81;"DISC"; Tab 87;"MISC/HAND";
Print #prtCH; Tab 98;"TAX AMT"; Tab 109;"FREIGHT";
Print #prtCH; Tab 122;"INV TOTAL"
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_1
J1 = J1 + 1 \ Gosub L_5800
L_4857: If SMDTL[0] ! "was DETAIL
  PRTCH = 0
SLSREPLOOP_2: Rem* do it twice if we are also emailing report
  If SORT = 2 If Not(PRTSCOST) Goto L_4862
  Print #prtCH; Using "-----###.##"; Tab 17;T10[6];
  If T10[1] Print #prtCH; Using "---#.##"; Tab 28;FNR((T10[6] / T10[1]) * 100);
  Print #prtCH; Using "-----###.##"; Tab 35;TOTNET;
L_4862: Print #prtCH; Using "-----###.##"; Tab 54;T10[7];
  Print #prtCH; Using "-----###.##"; Tab 65;T10[1];
  Print #prtCH; Using "-----#.##"; Tab 76;T10[3];
  Print #prtCH; Using "-----#.##"; Tab 87;T10[4];
  Print #prtCH; Using "-----#.##"; Tab 95;T10[2];
  Print #prtCH; Using "----#.##"; Tab 108;T10[5];
  Print #prtCH; Using "-----###.##"; Tab 120;T10[0];
  Print #prtCH;""
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_2
  J1 = J1 + 1 \ Gosub L_5800
End If 
If Not(SMDTL[0]) ! "was  DETAIL
  PRTCH = 0
SLSREPLOOP_3: Rem* do it twice if we are also emailing report
  Print #prtCH; Using "------###.##"; Tab 44;T10[1];
  Print #prtCH; Using "-----#.##"; Tab 55;T10[2];
  Print #prtCH; Using "-----#.##"; Tab 64;T10[5];
  Print #prtCH; Using "----##.##"; Tab 73;T10[4];
  Print #prtCH; Using "----###.##"; Tab 83;T10[0];
  If SORT = 2 If Not(PRTSCOST) Goto L_4894
  Print #prtCH; Using "-----###.##"; Tab 93;(TOTCOST);
  Print #prtCH; Using "-----#.##"; Tab 106;T11[1];
  If T11[1] + TOTCOST Print #prtCH; Using "----.-"; Tab 115;FNR(100 * T11[1] / (T11[1] + TOTCOST));
L_4894: Print #prtCH; Using "-----#.##"; Tab 122;T10[7];
  Print #prtCH;""
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_3
  J1 = J1 + 1 \ Gosub L_5800
  PRTCH = 0
SLSREPLOOP_4: Rem* do it twice if we are also emailing report
  Print #prtCH; Tab 30;"DISCOUNT";
  Print #prtCH; Using "------###.##"; Tab 44;T10[3];
  If SORT = 2 If PRTSCOST <> 0
    Print #prtCH; Tab 94;"==========";
  End If 
  Print #prtCH;" "
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_4
  J1 = J1 + 1 \ Gosub L_5800
  PRTCH = 0
SLSREPLOOP_5: Rem* do it twice if we are also emailing report
  Print #prtCH; Tab 45;"-----------";
  If SORT = 2 If PRTSCOST <> 0
    Print #prtCH; Tab 80;"Other Cost";
    Print #prtCH; Using "-----###.##"; Tab 93;(TOTCOST - TOTMERCHCOST);
  End If 
  Print #prtCH;""
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_5
  J1 = J1 + 1 \ Gosub L_5800
  PRTCH = 0
SLSREPLOOP_6: Rem* do it twice if we are also emailing report
  Print #prtCH; Tab 30;"NET SALE";
  Print #prtCH; Using "------###.##"; Tab 44;(T10[1] - T10[3]);
  If SORT = 2 If PRTSCOST <> 0
    Print #prtCH; Tab 80;"Merch Cost";
    Print #prtCH; Using "-----###.##"; Tab 93;TOTMERCHCOST;
    Print #prtCH; Using "-----#.##"; Tab 106;(T10[1] - T10[3] - TOTMERCHCOST);
    If (T10[1] - T10[3]) Print #prtCH; Using "----.-"; Tab 115;(100 * ((T10[1] - T10[3] - TOTMERCHCOST) / (T10[1] - T10[3])));
  End If 
  Print #prtCH;""
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_6
  J1 = J1 + 1 \ Gosub L_5800
End If 
If SP = 9999 Goto L_4965
Gosub UPDSLSTMP
Print #0; Tab 1;"MTD TOTALS ";
If EMCH <> -1 Print #EMCH; Tab 1;"MTD TOTALS ";
SLSMTDGP = SLSMTDGP + ((T10[1] - T10[3]) - TOTMERCHCOST)
SLSMTDSL = SLSMTDSL + (T10[1] - T10[3])
SLSYTDGP = SLSYTDGP + ((T10[1] - T10[3]) - TOTMERCHCOST)
SLSYTDSL = SLSYTDSL + (T10[1] - T10[3])
PRTCH = 0
SLSREPLOOP_7: Rem* do it twice if we are also emailing report
If SMDTL[0] ! "was DETAIL
  If SORT = 2 If PRTSCOST <> 0
    Print #prtCH; Using "-----###.##"; Tab 17;SLSMTDGP;
  End If 
  Print #prtCH; Using "-----###.##"; Tab 54;SLSMS1[2] + T10[7]; Tab 65;SLSMTDSL;
End If 
If Not(SMDTL[0]) ! "was  DETAIL
  Print #prtCH; Using "-----###.##"; Tab 45;SLSMTDSL;
  If SORT = 2 If PRTSCOST <> 0
    Print #prtCH; Using "-----###.##"; Tab 93;(SLSMTDSL - SLSMTDGP);
    Print #prtCH; Using "----###.##"; Tab 105;SLSMTDGP;
    If SLSMTDSL
      Print #prtCH; Using "----.-"; Tab 115;100 * (SLSMTDGP / SLSMTDSL);
    End If 
  End If 
  Print #prtCH; Using "----###.##"; Tab 121;SLSMS1[2] + T10[7];
End If 
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSREPLOOP_7
L_4965: For J = 0 To 8 \ T10[J] = 0 \ Next J
TOTCOST = 0;T11[1] = 0;TOTNET = 0;TOTFCST = 0;TOTMERCHCOST = 0
Print #0;" "
J1 = 100
If EMCH <> -1 Print #EMCH;" "
If SORT = 2 And EMAILREP And EMCH <> -1
  Close #EMCH
  EMCH = -1
End If 
Return 
L_5000: Rem "======================================= invoice header line
I_CTR = I_CTR + 1
PRTCH = 0
INVHDRLINELOOP_1: Rem* do it twice if we are also emailing report
Print #prtCH; Using "########"; Tab 1;OREF[1];
Print #prtCH; Using "######"; Tab 10;H0[7];
Print #prtCH; Using "##"; Tab 17;H5[7];
If H5[7]=19  ! "bill completes
  If Ot19Part Print #prtCH;Tab 19;"P"; Else Print #0;Tab 19;"M";
Endif
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVHDRLINELOOP_1
Call "DocDeliv.dl4","CS",H0[1],"INV ",X1,J$,J$,COMMENT1$,COMMENT2$,COMMENT3$,28,29,E$,IntCo,rstr$
If X1 = 1
  Print #0; Tab (18);"F";
  If EMCH <> -1 Print #EMCH; Tab (18);"F";
End If 
If X1 = 2
  Print #0; Tab (18);"E";
  If EMCH <> -1 Print #EMCH; Tab (18);"E";
End If 
If X1 = 9
  Print #0; Tab (18);"NP";
  If EMCH <> -1 Print #EMCH; Tab (18);"NP";
End If 
DDCOUNT[X1] = DDCOUNT[X1] + 1
PRTCH = 0
INVHDRLINELOOP_2: Rem* do it twice if we are also emailing report
Print #prtCH; Tab 21;D1$;
Print #prtCH; Using "######"; Tab 30;H0[4];
Print #prtCH; Tab 37;C1$[1,20]; Tab 58;P0$;
Print #prtCH; Tab 78;S1$[1,20];
Print #prtCH; Using "###"; Tab 99;H5[0];
Print #prtCH; Using "### "; Tab 103;H0[11];S2$[1,12];
Print #prtCH; Using "###.##%"; Tab 123;CFIN[8];
Print #prtCH;""
Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVHDRLINELOOP_2
J1 = J1 + 2 \ Gosub L_5800
If SORT <> 2 ! "Invoice Journal
  If Not(LNDETL) Goto L_5140
Else ! "salesrep Journal
  If Not(SMDTL[1]) Goto L_5140
End If 
PRTCH = 0
INVHDRLINELOOP_3: Rem* do it twice if we are also emailing report
Print #prtCH; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 18;"DESCRIPTION";
Print #prtCH; Tab 39;"ORDERED"; Tab 52;"B'ORD"; Tab 61;"SHIPPED";
Print #prtCH; Tab 69;"U/M"; Tab 78;"PRICE";
If SORT = 2 If Not(PRTSCOST) Goto L_5125
IF COST_LEV[1]<>0
	Print #prtCH; Tab 95;"COST"; Tab 106;"C"; Tab 111;"EXT COST";
ENDIF
L_5125: Print #prtCH; Tab 122;"EXT PRICE"
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVHDRLINELOOP_3
J1 = J1 + 1 \ Gosub L_5800
Goto L_5190
L_5140: Rem 1 LINE SUMMARY
PRTCH = 0
INVHDRLINELOOP_4: Rem* do it twice if we are also emailing report
Print #prtCH; Tab 1;"LIN"; Tab 5;"ITEM CODE"; Tab 18;"DESCRIPTION";
Print #prtCH; Tab 51;"SHIPPED";
Print #prtCH; Tab 62;"EXT PRICE";
If SORT = 2 If Not(PRTSCOST) Goto L_5175
IF COST_LEV[1]<>0
	Print #prtCH; Tab 74;"EXT COST"; Tab 86;"G PROFIT";
	Print #prtCH; Tab 97;"PCT"; Tab 104;"C PROFIT";
ENDIF
L_5175: Print #prtCH; Tab 115;"COM%"; Tab 124;"COMM $"
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVHDRLINELOOP_4
J1 = J1 + 1 \ Gosub L_5800
L_5190: Return 
L_5200: Rem "=========================================== invoice totals
Print #0;""
If EMCH <> -1 Print #EMCH;""
J1 = J1 + 1 \ Gosub L_5800
If SORT = 2 If MULTIS Gosub L_3700 \ Goto L_5290
If J1 + 3 >= J9 Let J1 = 99 \ Gosub L_5800
Print #0; Using "INVOICE ######## TOTALS: "; Tab 3;"*** ";OREF[1];
If EMCH <> -1 Print #EMCH; Using "INVOICE ######## TOTALS: "; Tab 3;"*** ";OREF[1];
If H5[7]=19 And OT19Part ! "
	Print #0; TAB 25;" * * P A R T I A L  S H I P  O F  OT 19 * *";
	IF EMCH <> -1 Print #emch; TAB 25;" * * P A R T I A L  S H I P  O F  OT 19 * *";
	Goto NoInvTtls:
Endif
X$ = "-----#.##";X1$ = "------#.##"
If P1 = 1 If T2[10] Gosub L_5300
PRTCH = 0
INVTOTLOOP_1: Rem* do it twice if we are also emailing report
If H5[13] If EX[15] If FNR((H5[13] - H5[14]) / H5[13] * 100) < EX[15] Print #prtCH;" *** LOW GP ***"; \ Goto LBL
If EX[1] If FNR(H5[13] - H5[14]) < EX[1] Print #prtCH;" *** LOW GP ***";
LBL: Print #0;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVTOTLOOP_1
J1 = J1 + 1 \ Gosub L_5800
If MULTIS Gosub L_6000
PRTCH = 0
INVTOTLOOP_2: Rem* do it twice if we are also emailing report
If SORT = 2 If Not(PRTSCOST) Goto L_5214
IF COST_LEV[1]<>0
	Print #prtCH; Tab 25;"GP"; Tab 32;"PCT"; Tab 43;"CP";
ENDIF
L_5214: If Not(MULTIS) Print #prtCH; Tab 49;"RATE"; Tab 55;"COMMISSION";
Print #prtCH; Tab 68;"MDSE AMT"; Tab 81;"DISC"; Tab 87;"MISC/HAND";
Print #prtCH; Tab 97;"TAX AMT"; Tab 105;"FREIGHT"; Tab 113;"FRT COST";
Print #prtCH; Tab 122;"INV TOTAL"
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVTOTLOOP_2
J1 = J1 + 1 \ Gosub L_5800
PRTCH = 0
INVTOTLOOP_3: Rem* do it twice if we are also emailing report
If SORT = 2 If Not(PRTSCOST) Goto L_5245
IF COST_LEV[1]<>0
	Print #prtCH; Using X$; Tab 17;(H5[13] - H5[14]);
	T0 = 0 \ If H5[13] Let T0 = FNR((H5[13] - H5[14]) / H5[13] * 100)
	Print #prtCH; Using "---#.##"; Tab 28;T0;
	Print #prtCH; Using X$; Tab 37;INVNET;
ENDIF
L_5245: If MULTIS Goto L_5260
If H5[7]<>36 And H5[7]<>37  ! "these have no commiss
	Print #prtCH; Using "###.##"; Tab 47;SLSM[5];
	Print #prtCH; Using X$; Tab 54;SCOM[0];
Endif
L_5260: Print #prtCH; Using X1$; Tab 64;T2[1];
Print #prtCH; Using X$; Tab 74;T2[3];
Print #prtCH; Using X$; Tab 84;T2[4];
Print #prtCH; Using X$[2]; Tab 94;T2[7];
Print #prtCH; Using X$[2]; Tab 103;T2[5];
Print #prtCH; Using X$[2]; Tab 112;T2[20];
Print #prtCH; Using X1$; Tab 120;T2[0]
NOINVTTLS: ! bypass it
Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVTOTLOOP_3
if custom_customer$="MORRISETTE" PRINT #PRTCH;STARS$[1,128] \ LET J1=J1+1  ! "cct161466-custom for morrisette
J1 = J1 + 2 \ Gosub L_5800
L_5290: Return 
L_5300: Rem "================================================= cash
PRTCH = 0
CASHLOOP_1: Rem* do it twice if we are also emailing report
Print #prtCH; Using "PAID:-------#.##";T2[12]; Tab 53;
If CSH0[2] = 0 Print #prtCH;"     PAID BY: NO PAY";
If CSH0[2] = 1 Print #prtCH;"     PAID BY: CASH";
If CSH0[2] = 2 Print #prtCH;"     PAID BY: CHECK #";CSH0$[37,56];
If CSH0[2] = 3 ! credcard
	Let Z1 = CCTYP1;D$="CREDIT CARD"
	If Z1>=1 and Z1<11 let D$ = CCTYPE$[Z1 * 10 - 9,Z1 * 10]
Endif
If CSH0[2] = 3 Print #prtCH;"     PAID BY: ";D$;
If CSH0[2] = 4 Print #prtCH;"     PAID BY: ";CSH0$[1,18];
Print #prtCH; Using "-------#.##"; Tab 88;CSH1[0]
If CSH0[3] Print #prtCH;""; Tab 53;
If CSH0[3] = 1 Print #prtCH;"     PAID BY: CASH";
If CSH0[3] = 2 Print #prtCH;"     PAID BY: CHECK #";CSH0$[57,76];
If CSH0[3] = 3 ! Credcard
	Let Z1 = CCTYP2;D$="CREDIT CARD"
	If Z1>=1 And Z1<11 let D$ = CCTYPE$[Z1 * 10 - 9,Z1 * 10]
Endif
If CSH0[3] = 3 Print #prtCH;"     PAID BY: ";D$;
If CSH0[3] = 4 Print #prtCH;"     PAID BY: ";CSH0$[19,39];
If CSH0[3] Print #prtCH; Using "-------#.##"; Tab 88;CSH1[1]
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto CASHLOOP_1
Return 
L_5400: Rem ===================================== print deleted items
Mat Read #13,R1;DL
Read #13,R1,58;DL1
Mat Read #13,R1,60;DL$
Mat Read #13,R1,80;DL1$
Mat Read #13,R1,100;DL3;
If P1 = 1 If DL[10] > 1 Goto L_5490
If P1 = 2 If DL[10] = 1 Goto L_5490
H0[11] = DL[6]
H0[4] = DL[1]
Gosub L_3000
If SP <> H0[11] If SP <> 9999 Gosub L_4800
If SP <> H0[11] And SORT = 2 And EMAILREP
  NEEDOPENEMCH = 1
Else 
  NEEDOPENEMCH = 0
End If 
SP = H0[11] \ Gosub L_10000
If S7 = 7 If F8 If DL[12] <> F8 Goto L_5495
If S7 = 6 Let DL[12] = N1 \ If Not(AudOnly) Write #13,R1,48;DL[12];
X2 = DL[4] \ Gosub L_7700 \ D1$ = X$
Gosub L_5800
If SORT <> 2 ! "invoice
  If DETAIL
    Gosub L_5450
  Else 
    Gosub L_5460
  End If 
Else 
  If SMDTL[0]
    Gosub L_5450
  Else 
    Gosub L_5460
  End If 
End If 
Goto L_5490
L_5450: Rem "Detail
PRTCH = 0
INVDELLINELOOP_1: Rem* do it twice if we are also emailing report
Print #prtCH; Using "########"; Tab 1;DL3;
Print #prtCH; Using "######"; Tab 10;DL[3];
Print #prtCH; Tab 17;D1$;
Print #prtCH; Using "######"; Tab 30;DL[1];
Print #prtCH; Tab 37;C1$[1,20];
Print #prtCH; Tab 60;"* * D E L E T E D * * ";
Print #prtCH; Using "###"; Tab 90;DL[11];
Print #prtCH; Using "### "; Tab 94;DL[6];S2$[1,30]
Print #prtCH; Using "####"; Tab 20;"DELETED BY: PORT ";DL1;
Print #prtCH; Tab 45;"USER: ";DL$; Tab 75;"REASON: ";DL1$;
Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVDELLINELOOP_1
J1 = J1 + 2 \ Gosub L_5800
Return 
L_5460: Rem "Summary
PRTCH = 0
INVDELLINELOOP_2: Rem* do it twice if we are also emailing report
Print #prtCH; Using "########"; Tab 1;DL3;
Print #prtCH; Using "######"; Tab 10;DL[1]; Tab 17;C1$[1,20]; Tab 39;DL[3];
Print #prtCH; Tab 50;"* * D E L E T E D * * "; Tab 80;" WHY: ";DL1$
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVDELLINELOOP_2
J1 = J1 + 1 \ Gosub L_5800
Return 
L_5490: Rem "done
L_5495: Goto L_2000
L_5500: Rem "============================================= invoice detail line
PRTCH = 0
INVDETLINELOOP_1: Rem* do it twice if we are also emailing report
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #prtCH; Tab 2;J2$[10,10]; \ Goto L_5520
Print #prtCH; Using "###"; Tab 1;L3[2];
L_5520: Rem
If Not(LPFLAG) Print #0; Tab 4;"+";
Print #prtCH; Tab 5;L1$[1,12];
Print #prtCH; Tab 18;L6$[1,16];
If OLS2[0] = 3 Print #prtCH;L6$[17,30];
If OLS2[0] = 3 Goto L_5600
Print #prtCH; Using "--------.##"; Tab 35;SUNIT[1];SUNIT[2];SUNIT[3];
Print #prtCH; Tab 69;SUNIT$;
Print #prtCH; Using PMASK$; Tab 74;PUNIT;"/";PUNIT$;
If SORT = 2 If Not(PRTSCOST) Goto L_5590
IF COST_LEV[1]<>0
	Print #prtCH; Using PMASK$; Tab 91;CUNIT;"/";CUNIT$;
	If COSTCHG Print #prtCH; Tab 106;"*";
	Print #prtCH; Using "-------#.##"; Tab 108;S3[12];
ENDIF
L_5590: Print #prtCH; Using "-------#.##"; Tab 120;L5[3];
L_5600: Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVDETLINELOOP_1
J1 = J1 + 1 \ Gosub L_5800
PRTCH = 0
INVDETLINELOOP_2: Rem* do it twice if we are also emailing report
Print #prtCH; Tab 5;L1$[14,16]; Tab 18;L6$[31,50];
If OLS2[0] = 3 Print #prtCH;L6$[51,60]; \ Goto L_5680
If P60$[42,42] = "Y"
  Print #prtCH;"" \ If PRTCH = 0 Let J1 = J1 + 1
  Print #prtCH; Using "TAX CODE:###";L6[5]; \ Print #prtCH; Using "------.##";" TAX AMT: ";LTAX1;
  Print #prtCH; Using " (###.##%)";LTAX2;
End If 
If SORT = 2 If Not(PRTSCOST) Goto L_5652
IF COST_LEV[1]<>0
	Print #prtCH; Using "G PROFIT -----#.##  "; Tab 50;L5[3] - S3[12];
ENDIF
T0 = 0
If L5[3]
  If PUNIT$[1,3] = "LOT" Or CUNIT$[1,3] = "LOT" !check for LOT
    T0 = FNR(((L5[3] - S3[12]) / L5[3]) * 100)
  Else 
    CHBASE = S3[1]
    If S3[11] = -3 And L7[2] Let CHBASE = (S3[1] / L7[2])
    NETCOST[0] = L5[1] + CHBASE
	IF ROL0
	  IF ROL0<0
		LET NETCOST[0]=NETCOST[0]+ABS(ROL0)
	  ELSE
		LET NETCOST[0]=NETCOST[0]+(NETCOST[0]*(ROL0/100))
	  ENDIF
	ENDIF
    T0 = FNR(((OLM[3] - NETCOST[0]) / OLM[3]) * 100)
  End If 
End If 
Print #prtCH; Using "(---#.##%)";T0;
LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
Print #prtCH; Using "C PROFIT -----#.##"; Tab 81;LDCOST;
L_5652: Print #prtCH; Using "###.##"; Tab 100;"COM% ";OLM[5];
Print #prtCH; Using "-------#.##"; Tab 112;"COMM$ ";OLM[6];
L_5680: Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVDETLINELOOP_2
J1 = J1 + 1 \ Gosub L_5800
If OLS2[0] = 3 Return 
PRTCH = 0
INVDETLINELOOP_3: Rem* do it twice if we are also emailing report
If S3[0] Print #prtCH; Using "CUTTING CHARGE ####.#####"; Tab 50;S3[0];
If SORT = 2 If Not(PRTSCOST) Goto L_5690
IF COST_LEV[1]<>0
	If S3[1] Print #prtCH; Using "CUTTING COST ####.#####"; Tab 80;S3[1];
ENDIF
L_5690: Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVDETLINELOOP_3
J1 = J1 + 1 \ Gosub L_5800
Return 
L_5700: Rem PRINT SUMMARY LINE
I_CTR = I_CTR + 1
Print #0; Using "########"; Tab 1;OREF[1];
Print #0; Using "######"; Tab 10;H0[4]; Tab 17;C1$[1,20]; Tab 39;H0[7];
If EMCH <> -1
  Print #EMCH; Using "########"; Tab 1;OREF[1];
  Print #EMCH; Using "######"; Tab 10;H0[4]; Tab 17;C1$[1,20]; Tab 39;H0[7];
End If 
If H5[7]=19 And OT19Part ! "part ship - no totals
	Print #0; TAB 50;" * * P A R T I A L  S H I P  O F  OT 19 * *";
	if emch <> -1 Print #EMCH; TAB 50;" * * P A R T I A L  S H I P  O F  OT 19 * *";
	Goto L_5765:
Endif
If SORT = 2 If MULTIS Gosub L_3600 \ Goto L_5765
PRTCH = 0
INVSUMLOOP_1: Rem* do it twice if we are also emailing report
Print #prtCH; Using "-------#.##"; Tab 45;T2[1];
Print #prtCH; Using "-----#.##"; Tab 56;T2[7];T2[5];T2[4];
Print #prtCH; Using "------#.## "; Tab 83;T2[0];
If SORT = 2 If Not(PRTSCOST) Goto L_5760
IF COST_LEV[1]<>0
	Print #prtCH; Using "------#.##"; Tab 93;H5[14];
	Print #prtCH; Using "----###.##"; Tab 105;H5[13] - H5[14];
	If H5[13] Print #prtCH; Using "----.-"; Tab 115;FNR((H5[13] - H5[14]) / H5[13] * 100);
ENDIF
L_5760: ! 
If H5[7]<>36 And H5[7]<>37
  IF MULTIS OR TOTCOM<>SCOM[0] !MULT SALESMAN
   !! Print #prtCH; Using "-----#.##"; Tab 122;SCOM[0];
   PRINT #PRTCH; USING "------#.##"; TAB 121;TOTCOM; ! "commission
   IF TOTCOM<>SCOM[0] PRINT #PRTCH;"*"; !TO NOTE THE TOTAL IS MORE THAN 1 ITEM
 ELSE 
   Print #prtCH; Using "-----#.##"; Tab 122;SCOM[0];
 ENDIF 
Endif
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVSUMLOOP_1
L_5765: Print #0;"" \ If EMCH <> -1 Print #EMCH;""
J1 = J1 + 1
Return 
L_5800: Rem "=========================================== headings
If J1 < J9 Return 
!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 And EMCH <> -1 Print #EMCH;"\14\";
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If F9 = 9 Let J1 = 7
If F9 = 99 Let J1 = 5
If F9 = 0 If DETAIL = 0 Let J1 = 6
If EMCH <> -1 Print #EMCH;"\15\";
If Not(J8) Print #0;"\15\";
PRTCH = 0
HEADINGLOOP_1: Rem* do it twice if we are also emailing report
Print #prtCH; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
If PASSR[1] = 752
  Print #prtCH;" - 752 - ";
Else 
  Print #prtCH;" - 226A - ";
End If 
Print #prtCH;Msc$(3); Tab 45;"D A I L Y   I N V O I C E   J O U R N A L";
If AUDONLY Print #0;" - PREVIEW";
Print #prtCH; Tab 100;D9$;" FROM ";SWH;"TO ";EWH
N1$ = " ",N1$
If S7 = 7 If Not(F8) Let N1$ = "ALL UNACCEPTED JOURNALS"
If S7 = 7 If F8 Let N1$ = F8 Using "REPRINT OF JOURNAL ######"
If S7 = 6 Let N1$ = N1 Using "JOURNAL ######"
Print #prtCH; Tab 5;N1$;
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto HEADINGLOOP_1
If SLSFLAG
  PRTCH = 0
HEADINGLOOP_2: Rem* do it twice if we are also emailing report
  Print #prtCH; Tab 52;"S A L E S P E R S O N   S U M M A R Y "
  Print #prtCH;""
  Print #prtCH;"SALESPERSON"; Tab 30;"JOURNAL"; Tab 65;"M-T-D";
  Print #prtCH; Tab 105;"Y-T-D"
  Print #prtCH; Tab 18;"SALES $";
  If PRTSCOST
	IF COST_LEV[1]<>0
		Print #prtCH; Tab 29;"COST $"; Tab 40;"G/P $"; Tab 46;"GP %";
	ENDIF
  End If 
  Print #prtCH; Tab 55;"SALES $";
  If PRTSCOST
	IF COST_LEV[1]<>0
		Print #prtCH; Tab 68;"COST $"; Tab 80;"G/P $"; Tab 86;"GP %";
	ENDIF
  End If 
  Print #prtCH; Tab 95;"SALES $";
  If PRTSCOST
	IF COST_LEV[1]<>0
		Print #prtCH; Tab 108;"COST $"; Tab 120;"G/P $"; Tab 126;"GP %";
	ENDIF
  End If 
  Print #prtCH;"\15\"
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto HEADINGLOOP_2
  J1 = 9
  Return 
End If 
PRTCH = 0
HEADINGLOOP_3: Rem* do it twice if we are also emailing report
If ENTEREDBY Goto L_5857
If P1 = 1 Print #prtCH; Tab 52;"C A S H   C U S T O M E R S";
If P1 = 2 Print #prtCH; Tab 50;"C R E D I T   C U S T O M E R S";
L_5857: If ORDT Print #0; Tab 85;"ORD TYPE:";ORDT; Else Print #prtCH; Tab 85;"ALL ORDER TYPES";
Print #prtCH; Tab 105;"DIVISION FROM ";SDIV;"TO ";EDIV
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto HEADINGLOOP_3
If HDG Goto L_5885
If SORT <> 2
  If DETAIL If Not(F9) Goto L_5900
  If Not(DETAIL) If Not(F9) Goto L_5950
Else 
  If SMDTL[0] If Not(F9) Goto L_5900
  If Not(SMDTL[0]) If Not(F9) Goto L_5950
End If 
If F9 = 99 Goto L_6250
PRTCH = 0
HEADINGLOOP_4: Rem* do it twice if we are also emailing report
Print #prtCH;""
iF Custom_customer$="ACTION" ! custom cash
	PRINT #prtCh; TAB 1;"ENTD BY"; TAB 19;"CASH TND/CHNG"; 
	PRINT #prtCh; TAB 41;"CHKS TND";   
	PRINT #prtCh; TAB 74;"CRED CARD"; TAB 114;"DRAWER TOTAL"
Else
Print #prtCH; Tab 1;"ENTD BY"; Tab 11;"CASH TND/CHNG"; Tab 26;"INV$/SHORT";
Print #prtCH; Tab 41;"CHKS TND/CHNG"; Tab 56;"INV$/SHORT";
Print #prtCH; Tab 74;"CRED CARD"; Tab 85;"INV$/SHORT"; Tab 114;"DRAWER TOTAL"
Endif
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto HEADINGLOOP_4
L_5885: Print #0;""
If EMCH <> -1 Print #EMCH;""
Return 
L_5900: Rem "master heading
PRTCH = 0
HEADINGLOOP_5: Rem* do it twice if we are also emailing report
Print #prtCH;""
Print #prtCH; Tab 1;"INV #"; Tab 8;"ORD #"; Tab 14;"ORD"; Tab 18;"DD";
Print #prtCH; Tab 23;"DATE"; Tab 30;"CUST CODE / NAME";
Print #prtCH; Tab 58;"PO NUMBER"; Tab 78;"SHIPPED TO"; Tab 99;"TKN";
Print #prtCH; Tab 104;"SLSM CODE / NAME"; Tab 125;"COMMN"
Print #prtCH; Tab 13;"TYPE"; Tab 99;"BY"; Tab 126;"S/C"
Print #prtCH;""
If SORT = 2 If SP < 999
  Print #prtCH; Using "SALESMAN ### "; Tab 5;SP;S2$[1,30]
  Print #prtCH;""
  J1 = J1 + 2
End If 
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto HEADINGLOOP_5
Return 
L_5950: Rem SUMMARY HEADING
PRTCH = 0
HEADINGLOOP_6: Rem* do it twice if we are also emailing report
Print #prtCH;""
Print #prtCH; Tab 4;"INV"; Tab 12;"C U S T O M E R"; Tab 40;"  ORD"; Tab 50;"AMOUNT";
Print #prtCH; Tab 62;"TAX"; Tab 67;"FREIGHT"; Tab 78;"MISC"; Tab 87;" TOTAL";
If SORT = 2 If Not(PRTSCOST) Goto L_5967
IF COST_LEV[1]<>0
	Print #prtCH; Tab 99;"TOTAL"; Tab 108;"GROSS"; Tab 116;"PROFIT";
ENDIF
L_5967: Print #prtCH; Tab 127;"COMM"
Print #prtCH; Tab 5;"#"; Tab 12;"CODE"; Tab 20;"NAME"; Tab 43;"#"; Tab 87;"AMOUNT";
If SORT = 2 If Not(PRTSCOST) Goto L_5980
IF COST_LEV[1]<>0
	Print #prtCH; Tab 100;"COST"; Tab 108;"PROFIT"; Tab 119;"%";
ENDIF
L_5980: Print #prtCH; Tab 128;"AMT"
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto HEADINGLOOP_6
Return 
L_6000: Rem "============================== salesman commissions
If Not(SLSM[0] + SLSM[1] + SLSM[2] + SLSM[3] + SLSM[4]) Goto L_6110
If H5[7]=36 Or H5[7]=37 Goto L_6110: ! "Bypass
If H5[7]=19 And OT19Part Goto L_6110: ! "no commission
If EMCH <> -1 Print #EMCH; Tab 64;" MERCH $    COST $"
Print #0; Tab 64;" MERCH $    COST $" \ J1 = J1 + 1
For X5 = 0 To 4
  If Not(SLSM[X5]) Goto L_6100
  K11$ = " ",K11$ \ K11$ = SLSM[X5] Using "###"
  Search #11,2,1;K11$,V1,E \ If E Gosub ERR_SEARCH
  Mat Read #11,V1,0;S$;
  PRTCH = 0
SLSCOMLOOP_1: Rem* do it twice if we are also emailing report
  Print #prtCH; Using "SLSM ### "; Tab 30;SLSM[X5];S$[1,25];
  Print #prtCH; Using "-----#.## "; Tab 64;SMER[X5];
  If SORT = 2 If Not(PRTSCOST) Goto L_6080
  IF COST_LEV[1]<>0
	Print #prtCH; Using "-----#.## "; Tab 74;SCST[X5];
  ENDIF
L_6080: Print #prtCH; Using " COMMIS  ###.##%"; Tab 84;SLSM[X5 + 5];
  Print #prtCH; Using " COMMIS -----#.##";SCOM[X5]
  If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto SLSCOMLOOP_1
  J1 = J1 + 1 \ Gosub L_5800
L_6100: Next X5
L_6110: Return 
L_6200: Rem ENT'D BY TOTALS
If Not(ENTD) Return 
If Not(TYPE[1]) Return 
J1 = 90 \ F9 = 99;ENTEREDBY = 1 \ Gosub L_5800
Mat GT = Zer
For J = 0 To 999
  REC = J \ Gosub L_6700
  If Not(T16[7]) Goto L_6235
  Gosub L_6500
  Gosub L_6300
L_6235: Next J
Gosub L_6520
F9 = 0
Return 
L_6250: Rem HEADING
Print #0;""
Print #0; Tab 5;"ENTERED BY TOTALS";
Print #0; Tab 24;"INV COUNT"; Tab 39;"MDSE AMT"; Tab 53;"DISC";
Print #0; Tab 59;"MISC/HAND"; Tab 74;"TAX AMT"; Tab 87;"FREIGHT";
Print #0; Tab 99;"INV TOTAL";
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
  Print #0; Tab 115;"GP"; Tab 122;"GP %";
End If 
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_6300: Rem PRINT LINE
Mat Read #37,J,0;EB$;
Print #0; Using "###"; Tab 5;J;
Print #0; Tab 9;EB$;
Print #0; Using "#########"; Tab 24;T16[7];
Print #0; Using "--------#.##"; Tab 35;T16[1];
Print #0; Using "-----#.##"; Tab 48;T16[3];
Print #0; Using "-----#.##"; Tab 59;T16[4];
Print #0; Using "-------#.##"; Tab 70;T16[2];
Print #0; Using "-------#.##"; Tab 83;T16[5];
Print #0; Using "--------#.##"; Tab 96;T16[0];
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
  Print #0; Using "-----#.##"; Tab 110;T16[8];
  If T16[6] Print #0; Using "---#.##"; Tab 120;FNR(T16[8] / T16[6] * 100);
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6400: Rem ORDER LINE SUMMARY (1 LINER)
PRTCH = 0
INVSUMLINELOOP_1: Rem* do it twice if we are also emailing report
If (H5[7] = 21 Or H5[7] = 22) And J2$[7,9] = "   " Print #prtCH; Tab 2;J2$[10,10]; \ Goto L_6420
Print #prtCH; Using "###"; Tab 1;L3[2];
L_6420: Print #prtCH; Tab 5;L1$[1,12]; Tab 18;L6$[1,25];
If OLS2[0] = 3 Goto L_6485
Print #prtCH; Using "--------.##"; Tab 47;SUNIT[3];
Print #prtCH; Using "-------#.##"; Tab 60;L5[3];
If SORT = 2 If Not(PRTSCOST) Goto L_6475
IF COST_LEV[1]<>0
	Print #prtCH; Using "-------#.##"; Tab 71;S3[12];
	If COSTCHG Print #prtCH; Tab 82;"*";
	Print #prtCH; Using "-------#.##"; Tab 83;FNR(L5[3] - S3[12]);
	T0 = 0 \ If L5[3] Let T0 = FNR((L5[3] - S3[12]) / L5[3] * 100)
	Print #prtCH; Using "---#.##"; Tab 94;T0;
	LDCOST = L5[3] - S3[12] \ LDCOST = FNR(LDCOST - (L5[3] * CFIN[8] / 100))
	Print #prtCH; Using "-------#.##"; Tab 101;LDCOST;
ENDIF
L_6475: If OLM[5] Print #prtCH; Using "###.##"; Tab 113;OLM[5];
If OLM[6] Print #prtCH; Using "-------#.##"; Tab 119;OLM[6];
L_6485: Print #prtCH;""
If PRTCH = 0 And EMCH <> -1 Let PRTCH = EMCH \ Goto INVSUMLINELOOP_1
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6500: Rem calc grand totals
GT[1] = GT[1] + T16[7];GT[2] = GT[2] + T16[1];GT[3] = GT[3] + T16[3]
GT[4] = GT[4] + T16[4];GT[5] = GT[5] + T16[2];GT[6] = GT[6] + T16[5]
GT[7] = GT[7] + T16[0];GT[8] = GT[8] + T16[6];GT[9] = GT[9] + T16[8]
Return 
L_6520: Rem print grand totals
Print #0; Tab 24;"---------"; Tab 35;"------------"; Tab 49;"--------";
Print #0; Tab 59;"---------"; Tab 70;"-----------"; Tab 83;"-----------";
Print #0; Tab 96;"------------";
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
  Print #0; Tab 110;"---------"; Tab 120;"-------";
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Print #0; Using "#########"; Tab 24;GT[1];
Print #0; Using "---------#.##"; Tab 34;GT[2];
Print #0; Using "------#.##"; Tab 47;GT[3]; Tab 58;GT[4];
Print #0; Using "--------#.##"; Tab 69;GT[5]; Tab 82;GT[6];
Print #0; Using "---------#.##"; Tab 95;GT[7];
If COST_LEV[0]<>0 And COST_LEV[1]<>0 And COST_LEV[2]<>0 And COST_LEV[3]<>0
  Print #0; Using "------#.##"; Tab 109;GT[9];
  If GT[8] Print #0; Using "---#.##"; Tab 120;FNR(GT[9] / GT[8] * 100);
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
L_6600: Rem "================================================ cash sale logic
For X2 = 0 To 4 \ CSH0[X2] = 0 \ Next X2
For X2 = 0 To 2 \ CSH1[X2] = 0 \ Next X2
let cc_tt$=" ",cc_tt$
K6$ = " ",K6$
K6$ = H0[7] Using "######"
Search #10,2,1;K6$,R6,E
If E Return 
Mat Read #10,R6,0;CSH0;
Mat Read #10,R6,20;CSH1;
Mat Read #10,R6,38;CSH0$;
Mat Read #10,r6,364;cc_tt$;
CCTYP1 = Fra(CSH0[2]) * 10 !Using "#"
CSH0[2] = Int(CSH0[2])
CCTYP2 = Fra(CSH0[3]) * 10 !Using "#"
CSH0[3] = Int(CSH0[3])
Return 
L_6700: Rem READ TEMP
Mat Read #16,REC,0;T4;
Mat Read #16,REC,30;T5;
Mat Read #16,REC,60;T6;
Mat Read #16,REC,90;T16;
Return 
L_6750: Rem WRITE TEMP
Mat Write #16,REC,0;T4;
Mat Write #16,REC,30;T5;
Mat Write #16,REC,60;T6;
Mat Write #16,REC,90;T16;
Return 
L_6800: Rem BUILD TEMPORARY WORKFILE
TFLE$ = " ",TFLE$
TFLE$ = "[1000:72]6/REGTEMP"
TFLE$ = TFLE$,Spc(6) Using "&&&&" ! 4 digit MINIMUM!!
TFLE$ = TFLE$,"!"
Build #16,TFLE$
Close #16
TFLE$ = TFLE$[10]
tmp$="chmod go+rw files/"+LCase$(TFLE$[1,13])+"*"
System tmp$
Open #16,TFLE$
Return 
L_7000: Rem "================================================= cash totals
F9 = 9 \ J1 = 90
Rem GOSUB L_5800:
For I = 1 To 999
  REC = I \ Gosub L_6700
  If T6[4] Gosub L_7030
Next I
Goto L_7200
L_7030: Rem PRINT IT
Gosub L_5800
If custom_customer$="ACTION" ! custom cash
	LET T6[3]=FNR(T6[0]+T6[1]+T6[2]) \ LET T5[3]=FNR(T5[0]+T5[1]+T5[2])
	t4[3]=fnr(t4[0]+t4[1]+t4[2])                                       
	PRINT #0; USING "###"; TAB 1;I;
	PRINT #0; USING "-----,--#.## /"; TAB 11;T6[0];
	print #0; using "-----,--#.##";FNR(T6[3]-(T5[3]-T4[3]));
	PRINT #0; USING "-----,--#.##"; TAB 41;T6[1];
	PRINT #0; USING "-----,--#.##"; TAB 71;T6[2];
	print #0; using "---,---,--#.## /";tab 101;t6[3];
	PRINT #0; USING "---,---,--#.##";FNR(T6[3]-(T5[3]-T4[3]))
	!  GOSUB L_7300:
	PRINT #0; USING "-----,--#.##"; TAB 11;T6[0]-FNR(T6[3]-(T5[3]-T4[3]));

	LET T4[3]=FNR(T4[0]+T4[1]+T4[2]) \ GOSUB L_7300:
	rem PRINT #0; USING "---,---,--#.##"; TAB 101;T9[14];T4[3];
	PRINT #0; USING "-----,---,--#.##"; TAB 99;FNR(T5[3]-T4[3]); 
Else ! everyone else
	Print #0; Using "###"; Tab 1;I;
	Print #0; Using "-----,--#.##"; Tab 11;T6[0];T5[0]; Tab 41;T6[1];
	Print #0; Using "-----,--#.##";T5[1]; Tab 71;T6[2];T5[2];
	T6[3] = FNR(T6[0] + T6[1] + T6[2]) \ T5[3] = FNR(T5[0] + T5[1] + T5[2])
	Print #0; Using "---,---,--#.##"; Tab 101;T6[3];T6[4]
	Gosub L_7300
	Print #0; Using "-----,--#.##"; Tab 11;T9[11];T4[0]; Tab 41;T9[12];
	Print #0; Using "-----,--#.##";T4[1]; Tab 71;T9[13];T4[2];
	T4[3] = FNR(T4[0] + T4[1] + T4[2]) \ Gosub L_7300
	Print #0; Using "---,---,--#.##"; Tab 101;T9[14];T4[3];
Endif
Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
For X = 0 To 4 \ TTOT[X + 10] = TTOT[X + 10] + T6[X]
  TTOT[X + 5] = TTOT[X + 5] + T5[X] \ TTOT[X] = TTOT[X] + T4[X]
  T6[X] = 0
Next X
REC = I \ Gosub L_6750
Return 
L_7200: Rem TOTALS
If Not(TTOT[8]) Goto L_7280
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0; Tab 1;"TOTAL";
If custom_customer$="ACTION" ! custom cash
	PRINT #0; USING "-----,--#.## /"; TAB 11;ttot[10];    ! T6[0];          
	print #0; using "-----,--#.##";FNR(Ttot[13]-(Ttot[8]-Ttot[3])); 
	PRINT #0; USING "-----,--#.##"; TAB 41;Ttot[11];
	PRINT #0; USING "-----,--#.##"; TAB 71;TTOT[12];
	print #0; using "---,---,--#.## /";tab 101;ttot[13];        
	PRINT #0; USING "---,---,--#.##";FNR(Ttot[13]-(Ttot[8]-Ttot[3]));
	PRINT #0;"" \ LET J1=J1+1 \ GOSUB L_5800:
	GOSUB L_7340:
	PRINT #0; USING "-----,--#.##"; TAB 11;Ttot[10]-FNR(Ttot[13]-(Ttot[8]-Ttot[3]));
	PRINT #0; USING "---,---,--#.##"; TAB 99;fnr(TTOT[8]-TTOT[3]); 

	PRINT #0;"\215\" \ LET J1=J1+2 \ GOSUB L_5800:
	PRINT #0;"PROOF TOTAL";
	!PRINT #0; USING "-----,--#.##"; TAB 11;(TTOT[10]-T9[11]); TAB 41;(TTOT[11]-T9[12]);
	!PRINT #0; USING "-----,--#.##"; TAB 71;(TTOT[12]-T9[13]);
	PRINT #0; USING "---,---,--#.##"; TAB 101;(TTOT[13]-T9[14]);TTOT[3];
Else ! everyone else
	Print #0; Using "-----,--#.##"; Tab 11;TTOT[10];TTOT[5]; Tab 41;TTOT[11];
	Print #0; Using "-----,--#.##";TTOT[6]; Tab 71;TTOT[12];TTOT[7];
	Print #0; Using "---,---,--#.##"; Tab 101;TTOT[13];TTOT[14];
	Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
	Gosub L_7340
	Print #0; Using "-----,--#.##"; Tab 11;T9[11];TTOT[0]; Tab 41;T9[12];
	Print #0; Using "-----,--#.##";TTOT[1]; Tab 71;T9[13];TTOT[2];
	Print #0; Using "---,---,--#.##"; Tab 101;T9[14];TTOT[3];
	Print #0;"\15\" \ J1 = J1 + 2 \ Gosub L_5800
	Print #0;"PROOF TOTAL";
	Print #0; Using "-----,--#.##"; Tab 11;(TTOT[10] - T9[11]); Tab 41;(TTOT[11] - T9[12]);
	Print #0; Using "-----,--#.##"; Tab 71;(TTOT[12] - T9[13]);
	Print #0; Using "---,---,--#.##"; Tab 101;(TTOT[13] - T9[14]);TTOT[3];
Endif
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
L_7280: Gosub L_7400
Return 
L_7300: Rem CHG PAID
T9[11] = FNR(T6[0] - (T5[0] - T4[0]))
T9[12] = FNR(T6[1] - (T5[1] - T4[1]))
T9[13] = FNR(T6[2] - (T5[2] - T4[2]))
T9[14] = FNR(T6[3] - (T5[3] - T4[3]))
Return 
L_7340: Rem TOT CHG PAID
T9[11] = FNR(TTOT[10] - (TTOT[5] - TTOT[0]))
T9[12] = FNR(TTOT[11] - (TTOT[6] - TTOT[1]))
T9[13] = FNR(TTOT[12] - (TTOT[7] - TTOT[2]))
T9[14] = FNR(TTOT[13] - (TTOT[8] - TTOT[3]))
Return 
L_7400: Rem DRAW AUD
For X = Len(F1$) To 1 Step -1
  If F1$[X,X] = "" Goto L_7420
  If F1$[X,X] <> " " Goto L_7430
L_7420: Next X
If X <= 1 Goto L_7480
L_7430: T9[1] = (TTOT[10] - T9[11]) \ T9[2] = (TTOT[11] - T9[12])
T9[3] = (TTOT[12] - T9[13]) \ T9[4] = (TTOT[13] - T9[14])
T9[0] = TTOT[3]
For X1 = 1 To D9[5]
  If X1 >= SWH And X1 <= EWH
    J2$ = (100 + X1) Using "###"
    Gosub L_7500
  End If 
Next X1
If F Goto L_7655
L_7480: !If Err 0 Gosub ERR_ESCAPE
Return 
L_7500: Rem TRY FILE
F1$[X + 1] = J2$[2]
Try Close #21  Else	Rem

Try ! If Err 0 Goto L_7480
	Open #21,F1$
Else
	Goto L_7480
End try
!If Err 0 Gosub ERR_ESCAPE
Gosub L_5800
Print #0;"  WHSE: ";J2$[2];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Gosub L_5800
For F = 1 To Chf(21) - 1
  Read #21,F;H4[0],H4[1],H4[2],X2,TT2[11],T2[12],J2$;
  Gosub L_7700
  Print #0; Using "### "; Tab 1;H4[1];
  If H4[2] > 1 If H4[2] < 4 Goto L_7580
  Print #0; Using "-----,--#.##"; Tab 11;T2[12];
L_7580: Print #0; Tab 28;X$;
  If H4[2] = 2 Print #0; Using "-----,--#.##"; Tab 41;T2[12];
  J3$ = " ",J3$ \ J3$ = "OTHER TYPE" \ If H4[2] = 1 Let J3$ = "CASH"
  If H4[2] = 2 Let J3$ = TT2[11] Using "CHECK #########"
  If H4[2] <> 3 Goto L_7602
  J3$ = "CREDIT CARD"
  If TT2[11] 
    If tt2[11]>0 and tt2[11]<11 Let J3$ = CCTYPE$[TT2[11] * 10 - 9,TT2[11] * 10]
  Endif
L_7602: Print #0; Tab 56;J3$;
  If H4[2] = 3 Print #0; Using "-----,--#.##"; Tab 71;T2[12];
  Print #0; Using "---,---,--#.##"; Tab 101;T2[12]; Tab 117;J2$[1,15];
  Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
  Gosub L_5800
  If H4[2] = 1 Let T9[1] = T9[1] + T2[12]
  If H4[2] = 2 Let T9[2] = T9[2] + T2[12]
  If H4[2] = 3 Let T9[3] = T9[3] + T2[12]
  If H4[2] = 4 Let T9[0] = T9[0] + T2[12]
  T9[4] = T9[4] + T2[12]
Next F
Return 
L_7655: Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Print #0;"FINAL PROOF";
Print #0; Using "-----,--#.##"; Tab 11;T9[1]; Tab 41;T9[2];
Print #0; Using "-----,--#.##"; Tab 71;T9[3];
Print #0; Using "---,---,--#.##"; Tab 101;T9[4];T9[0];
Print #0;"" \ J1 = J1 + 1 \ Gosub L_5800
Return 
L_7700: Rem "============================================= convert date
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
L_8700: Rem "========= SET history bits
K35$ = " ",K35$;K35$[1,2] = " 2"
L_8720: Search #35,3,1;K35$,R35,E \ If E Goto L_8790
X2 = K35$[3,4];BWH[X2] = 1
If X2 > HWH Let HWH = X2
X2 = K35$[5,6];BDV[X2] = 1
If X2 > HDV Let HDV = X2
X2 = K35$[7,8];BTYP[X2] = 1
If X2 > HOTP Let HOTP = X2
Goto L_8720
L_8790: Return 
L_8800: Rem "================================================== clear jsdetl
K35$ = " ",K35$
L_8810: Search #35,3,1;K35$,R35,E \ If E If E <> 2 Gosub ERR_SEARCH
If E = 2 Goto L_8890
X3 = K35$[1,2] \ If X3 <> 0 Goto L_8890
Search #35,5,1;K35$,R35,E \ If E Gosub ERR_SEARCH
E = 3
Search #35,1,0;K35$,R35,E \ If E Gosub ERR_SEARCH
Goto L_8810
L_8890: Return 
L_8900: Rem "================================================= clear glartemp
If P9$[17,17] <> "Y" Return
Try close #23 Else Rem
Read #1,88,64;J$[1,17];
Open #23,J$
J$ = " ",J$
Search #23,5,1;J$,R1,E
If E Goto L_8980
E = 3 \ Search #23,1,0;J$,R1,E
If E Gosub ERR_SEARCH
L_8980: Return 
SetGlartemp: ! set it
If P9$[17,17] <> "Y" Return
Try close #23 Else rem
Read #1,88,64;F$;
Open #23,F$
F$ = " ",F$
E = 2 \ Search #23,1,0;F$,V1,E
If E  Gosub ERR_SEARCH
Search #23,4,1;F$,V1,E
If E Gosub ERR_SEARCH
! EFlg[1]=1 ! set the glarcntrl
Close #23
Return
L_9100: Rem END
! call programdump("/tmp/irlog4!","")
Gosub L_4800
If P1 >= 2 And TYPE <> 0 Let TYPE = 9;TYPE[1] = 9
Gosub L_4000
! If TYPE[1] And J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input Len 16384 + 1;""J$
For J = 0 To 20 \ T9[J] = 0 \ Next J
TOTCOST = 0;T11[1] = 0;T10[7] = 0;T10[8] = 0;TOTMERCHCOST = 0
If TYPE[1] Goto L_9200
P1 = P1 + 1 \ If P1 > 2 Goto L_9200
Goto L_1940
L_9200: Rem GL FOR UD
If Not(PASS) Goto L_9250
TYPE = TYPE[1]
PASS = 0;SORT = 2
Print #0;"\14\";
Goto L_1500
L_9250: Rem  WRITE #1,38,SPC 6*16;S7,P1,W1;   !PASS AS COM
If S7 = 7 Let JRNL = F8
S9[0] = S7;S9[1] = TYPE[2];S9[2] = SWH;S9[3] = JRNL;S9[4] = GLDET;S9[5] = EWH
TFLE$[Len(TFLE$)] = "" \ Close #16 \ Kill TFLE$
Try Close #30  Else	Rem

!If Err 0 Gosub ERR_TRAP
Call FindF(SFLE$,E)
If E
  Kill SFLE$
End If 
! call programdump("/tmp/irlog5!","")
Chain "226AGL.DL4"
Chain Write T8,S9,PASSR,intco,rstr$,audonly
Goto OUTEND
End 
L_10000: Rem SLSM
K11$ = " ",K11$
K11$ = H0[11] Using "###"
Search #11,2,1;K11$,R11,E \ If E > 1 Gosub ERR_SEARCH
If E
  S2$ = " ",S2$
  S2$[1,30] = "***** SALESMAN NOT FOUND *****"
  For X = 0 To 3 \ SLSMS1[X] = 0 \ Next X
  For X = 0 To 12
    For J = 0 To 2
      SLS1[X,J] = 0
    Next J
  Next X
  SLSEMAIL$ = ""
Else 
  Mat Read #11,R11,0;S2$;
  Mat Read #11,R11,118;SLSMS1;
  Try
	Mat Read #18,R11,4;SLS1;
  Else
	Clear SLS1[]
  End try
  Mat Read #11,R11,922;SLSEMAIL$;
End If 
If NEEDOPENEMCH Gosub OPENEMAILCHAN
If SORT <> 2 Goto L_10190
SLSMTDGP = 0;SLSYTDGP = 0
SLSMTDSL = 0;SLSYTDSL = 0
SLSMTDSL = SLS1[ARMONTH,1]
SLSMTDGP = SLS1[ARMONTH,1] - SLS1[ARMONTH,2]
SLSYTDSL = SLS1[0,1]
SLSYTDGP = SLS1[0,1] - SLS1[0,2]
L_10190: Return 
L_10500: Rem CHECK FOR COST VS LOAD/WHSE COST CHANGE
LDCOST = PRODB[8]
If P9$[32,32] <> "Y" Goto L_10600
K17$ = " ",K17$;K17$[1,12] = L1$[1,12];K17$[13,14] = W0 Using "##"
Search #17,2,1;K17$,R17,E \ If E Goto L_10600
Mat Read #17,R17,78;W3;
If W3[17] Let LDCOST = W3[17]
Goto L_10600
L_10600: Rem CHECK IF DIFF
COSTCHG = 0
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = L5[1]
If CPSAME Let CNVTU[1] = UN[1]
Gosub L_20000 \ CUNIT = AMOUNT
CNVTU[0] = 0;CNVTU[1] = UN[2];CNVTU[2] = 2;CNVTA = LDCOST
If CPSAME Let CNVTU[1] = UN[1]
Gosub L_20000 \ LDCOST = AMOUNT
If LDCOST <> CUNIT Let COSTCHG = 1
Return 
L_11000: Rem WHSE/DIV/TYPE TOTALS
For J = 0 To 13 \ JTTL[J] = 0 \ Next J
J1 = 90
SWLP = SWH;EWLP = EWH
For WH = SWLP To EWLP
  If BWH[WH] = 0 Goto L_11290
  SDLP = SDIV;EDLP = EDIV
  For DV = SDLP To EDLP
    If BDV[DV] = 0 Goto L_11260
    For OTYP = 1 To 40
      If BTYP[OTYP] = 0 Goto L_11230
      K35$ = " ",K35$;K35$[1,2] = 0 Using "##"
      K35$[3,4] = WH Using "##";K35$[5,6] = DV Using "##"
      K35$[7,8] = OTYP Using "##"
      Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
      If E = 1 Goto L_11100
      Mat Read #35,R35,6;JTL1;
      If S7 = S2 Goto L_11080
      For J = 0 To 13 \ JTTL[J] = JTL1[J] \ Next J
L_11080: Gosub L_11300
      PRNT = 9
L_11100: Rem MTD
      K35$[1,2] = 2 Using "##"
      Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
      If E = 1 If PRNT Goto L_11130
      If E = 1 Goto L_11150
      Mat Read #35,R35,6;JTL1;
      For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
L_11130: Gosub L_11300
      PRNT = 9
L_11150: Rem YEAR TO DATE
      K35$[1,2] = 3 Using "##"
      Search #35,2,1;K35$,R35,E \ If E > 1 Gosub ERR_SEARCH
      If E = 1 If PRNT Goto L_11180
      If E = 1 Goto L_11200
      Mat Read #35,R35,6;JTL1;
      For J = 0 To 13 \ JTL1[J] = JTL1[J] + JTTL[J] \ Next J
L_11180: Gosub L_11300
      Print #0;"" \ J1 = J1 + 1
L_11200: Rem DONE WITH TYPE
      PRNT = 0
      For J = 0 To 13 \ JTTL[J] = 0 \ Next J
L_11230: Next OTYP
L_11260: Next DV
L_11290: Next WH
Return 
L_11300: Rem PRINT INFO
J1 = J1 + 1
Gosub L_11500
X2 = K35$[1,2]
If X2 = 0 Print #0; Tab 1;"JOURNAL";
If X2 = 2 Print #0; Tab 1;"M-T-D";
If X2 = 3 Print #0; Tab 1;"Y-T-D";
Print #0; Using "##"; Tab 10;WH; Tab 15;DV; Tab 20;OTYP;
Print #0; Using "------,--#.##"; Tab 47;JTL1[1];
If SORT = 2 If Not(PRTSCOST) Goto L_11345
IF COST_LEV[1]<>0
	Print #0; Using "------,--#.##"; Tab 61;JTL1[1] - JTL1[9]; Tab 75;JTL1[9];
	X3=0 \ if jtl1[1] let x3=fnr(JTL1[9]*100/jtl1[1]) ! jtl1[9]=GP$
	print #0; using "----#.##%";tab 89;x3;
ENDIF
L_11345: Print #0; Using "#######"; Tab 99;JTL1[10];
Print #0; Using "#########"; Tab 107;JTL1[11];
Print #0; Using "-------,--#.##"; Tab 117;JTL1[8];
Print #0;""
Return 
L_11500: Rem heading
If J1 < J9 Return 
! If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 8
If Not(J8) Print #0;"\15\";
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
If PASSR[1] = 752
  Print #0;" - 752 - ";
Else 
  Print #0;" - 226A - ";
End If 
Print #0;Msc$(3); Tab 45;"D A I L Y   I N V O I C E   J O U R N A L";
Print #0; Tab 100;D9$;" FROM ";SWH;"TO ";EWH
N1$ = " ",N1$
If S7 = 7 If Not(F8) Let N1$ = "ALL UNACCEPTED JOURNALS"
If S7 = 7 If F8 Let N1$ = F8 Using "REPRINT OF JOURNAL ######"
If S7 = 6 Let N1$ = N1 Using "JOURNAL ######"
Print #0; Tab 5;N1$;
Print #0; Tab 100;"DIVISION FROM ";SDIV;"TO ";EDIV
Print #0;""
Print #0; Tab 18;"ORDER"
Print #0; Tab 9;"WHSE"; Tab 14;"DIV."; Tab 19;"TYPE";
Print #0; Tab 55;"MERCH";
If SORT = 2 If Not(PRTSCOST) Goto L_11585
IF COST_LEV[1]<>0
	Print #0; Tab 70;"COST"; Tab 85;"G/P"; Tab 91;"MARGIN";
ENDIF
L_11585: Print #0; Tab 100;"# INVS"; Tab 109;"# LINES"; Tab 125;"POUNDS"
Print #0;"" \ Return 
ALLJRNL_UNLOCK: Rem ------------------------------SET ORDER STATUS BACK
! Print @0,22;'CL';" Searching for orders locked in journal status...";
K1$ = " ",K1$ \ K1$ = "92"
RELEASE_NEXT_LOCK: Rem
Search #2,3,1;K1$,R1,E \ If E > 2 Gosub ERR_SEARCH
If E Or K1$[1,2] <> "92" Return 
Mat Read #2,R1;H0;
Read #2,R1,64;LOCKPORT;
If H0 = 92
  ! Print @0,22;'CL';" UNLOCKING ORDER #";H0[7];" FROM PORT ";LOCKPORT;
  Gosub CLEAR_JRNL_STATUS
End If 
Goto RELEASE_NEXT_LOCK
END_ALLJRNL_UNLOCK: Rem ----------------------------------
SET_JRNL_STATUS: Rem "=================================== 92 = JOURNAL
If H0 >= 90 Return 
Read #2,R1,416;H6[2]
Read #2,R1,64;LOCKPORT
H6[2] = H0
LOCKPORT = Spc(6)
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #2,2,1;A$,R1,E \ If E = 1 Goto L_17110
If E Gosub ERR_SEARCH
Search #2,5,1;A$,R1,E
If E Gosub ERR_SEARCH
H0 = 92
L_17110: A$[1,2] = H0 Using "##"
E = 0
Search #2,4,1;A$,R1,E
If E > 1 Gosub ERR_SEARCH
Write #2,R1,0;H0
Write #2,R1,416;H6[2]
Write #2,R1,64;LOCKPORT;
Return 
CLEAR_JRNL_STATUS: Rem "=================================== RESET STATUS
If H0 < 90 Return 
Read #2,R1,416;H6[2]
Read #2,R1,64;LOCKPORT
If H6[2] <= 1 If P9$[45,45] = "Y" Let H6[2] = 2
If H6[2] <= 0 Let H6[2] = 6
If H6[2] > 11 Or Fra(H6[2]) Let H6[2] = 6
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #2,2,1;A$,R1,E \ If E = 1 Goto L_17420
If E Gosub ERR_SEARCH
Search #2,5,1;A$,R1,E
If E Gosub ERR_SEARCH
L_17420: A$[1,2] = H6[2] Using "##"
E = 0
Search #2,4,1;A$,R1,E
If E > 1 Gosub ERR_SEARCH
H0 = H6[2];H6[2] = 0
LOCKPORT = 0
Write #2,R1,0;H0
Write #2,R1,416;H6[2]
Write #2,R1,64;LOCKPORT;
Return 
UPDSLSTMP: Rem update salesperson temp file (from subtotal routine)
SLKEY$ = " ",SLKEY$
SLKEY$[1,3] = SP Using "###"
Search #30,2,1;SLKEY$,R[30],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  SJ1 = SP
  For X = 0 To 8 \ SJ2[X] = 0 \ Next X
  SJ2[2] = SLSMTDGP
  SJ2[3] = SLSMTDSL
  SJ2[4] = SLSYTDGP
  SJ2[5] = SLSYTDSL
  E = 2 \ Search #30,1,0;SLKEY$,R[30],E \ If E Gosub ERR_SEARCH
  Mat Write #30,R[30],0;SJ1;
  Mat Write #30,R[30],4;SJ2;
  Search #30,4,1;SLKEY$,R[30],E \ If E Gosub ERR_SEARCH
End If 
Mat Read #30,R[30],4;SJ2
SJ2[0] = SJ2[0] + ((T10[1] - T10[3]) - TOTMERCHCOST)
SJ2[1] = SJ2[1] + (T10[1] - T10[3])
SJ2[2] = SJ2[2] + ((T10[1] - T10[3]) - TOTMERCHCOST)
SJ2[3] = SJ2[3] + (T10[1] - T10[3])
SJ2[4] = SJ2[4] + ((T10[1] - T10[3]) - TOTMERCHCOST)
SJ2[5] = SJ2[5] + (T10[1] - T10[3])
Mat Write #30,R[30],4;SJ2;
Return 
SLSTMP: Rem get salesman re-cap info
SLSFLAG = 99;J1 = 99
Gosub L_5800
SLKEY$ = " ",SLKEY$
SLSMRLOOP: Rem "through all slsm for recap
For X = 0 To 10 \ ST0[X] = 0 \ Next X
Search #11,3,1;SLKEY$,R[11],E \ If E = 2 Goto ENDSRCHSTMP
If E Gosub ERR_SEARCH
Mat Read #11,R[11],0;SLSNAME$;
Try
	Mat Read #18,R[11],4;SLS1;
Else
	Clear SLS1[]
End try
Search #30,2,1;SLKEY$,R[30],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #30,R[30],4;SJ2;
Else 
  For X = 0 To 6 \ SJ2[X] = 0 \ Next X
  SJ2[0] = 0
  SJ2[1] = 0
  SJ2[2] = SLS1[ARMONTH,1] - SLS1[ARMONTH,2]
  SJ2[3] = SLS1[ARMONTH,1]
  SJ2[4] = SLS1[0,1] - SLS1[0,2]
  SJ2[5] = SLS1[0,1]
  If Not(SJ2[2]) And Not(SJ2[3]) And Not(SJ2[4]) And Not(SJ2[5]) Goto SLSMRLOOP
End If 
For X = 0 To 6 \ ST0[X] = SJ2[X] \ Next X
Gosub L_5800
Gosub PRNTSLSTMP
For X = 0 To 5 \ ST1[X] = ST1[X] + ST0[X] \ Next X
Goto SLSMRLOOP
ENDSRCHSTMP: Rem "Print Grand totals?
For X = 0 To 6 \ ST0[X] = ST1[X] \ Next X
SLKEY$ = " ",SLKEY$;SLSNAME$ = " ",SLSNAME$
SLSNAME$ = "GRAND TOTALS"
Print #0;"" \ J1 = J1 + 1
Gosub PRNTSLSTMP
Print #0;""
Print #0; Tab 20;"NOTE: THE MTD & YTD AMOUNTS ABOVE ";
Print #0;"INCLUDE THIS JOURNAL, WHICH IS NOT YET ACCEPTED."
J1 = 90;SLSFLAG = 0
Return 
PRNTSLSTMP: Rem print slsman tmp
Print #0;SLKEY$[1,3];" ";SLSNAME$[1,11];
Print #0; Using "-------.##"; Tab 15;ST0[1];
If PRTSCOST
 IF COST_LEV[1]<>0
	Print #0; Using "-------.##"; Tab 25;(ST0[1] - ST0[0]);
	Print #0; Using "-------.##"; Tab 35;ST0[0];
	If ST0[1]
		Print #0; Using "---.#"; Tab 45;FNR((ST0[0] / ST0[1]) * 100);
	End If 
 Endif
End If 
Print #0; Using "---------.##"; Tab 50;ST0[3];
If PRTSCOST
  if cost_lev[1]<>0
	Print #0; Using "---------.##"; Tab 62;(ST0[3] - ST0[2]);
	Print #0; Using "--------.##"; Tab 74;ST0[2];
	If ST0[3]
		Print #0; Using "---.#"; Tab 85;FNR((ST0[2] / ST0[3]) * 100);
	End If 
  Endif
End If 
Print #0; Using "---------.##"; Tab 90;ST0[5];
If PRTSCOST
	if cost_lev[1]<>0
		Print #0; Using "---------.##"; Tab 102;(ST0[5] - ST0[4]);
		if abs(st0[4])<9999999.99
			Print #0; Using "--------.##"; Tab 114;ST0[4];
		else 
			print #0; using "-----------"; tab 114;st0[4]; ! "ytd GP 
		endif
		If ST0[5]
			Print #0; Using "---.#"; Tab 125;FNR((ST0[4] / ST0[5]) * 100);
		End If 
	Endif
End If 
Print #0;""
J1 = J1 + 1 \ Gosub L_5800
Return 
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: !If Spc(4) > 1280 Goto L_20120
!Swap 1,"MXPRCONV"
!If CNVTU[2] = 3 Goto L_20160
!L_20080: Signal 2,X1,AMOUNT,FLAG \ If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
!If X1 <> Spc(6) Goto L_20080
!If CNVTU[2] = 0 Goto L_20160
!If FLAG Let E = FLAG \ Gosub ERR_SEARCH
!Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5.dl4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
If CNVTU[2] = 0 Goto L_20160
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If OLS2[0] = 3 Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(L3[0]) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
CHK_LPFILE: Rem cct164337
LPFLAG = 0
If L3[0]
  LPFLAG = 1
  Return 
End If 
K36$ = " ",K36$
K36$[1,6] = H0[4] Using "######"
K36$[7,9] = H3[0] Using "###"
K36$[10] = L1$[1,12]
Search #36,3,1;K36$,R19,E
If E > 2 Gosub ERR_SEARCH
If Not(E) And K36$[10,21] = L1$[1,12]
  CUSTNUM = K36$[1,6]
  If CUSTNUM = H0[4] Let LPFLAG = 1
End If 
Return 

EMAILSALESCOPY: Rem*
	EMAILREP = 0
	EMCH = -1
	call DxGet("E_SREP", tmp$) \ i = tmp$
	if not(i) return ! not emailing report
	If P61$[30,30] <> "Y" Return 
	If PASS = 0 And SORT <> 2 Return 
	If J8 Return 
	!Window Open @2,14; Size 75,8; Using "EMAIL SALES REP COPY"
	!Print @1,1;"1. EMAIL SALES COPY?"
	J0$ = "6 01012201" \ J1 = 0
	J5$ = "Email each sales rep their portion of sales rep journal?"
	!Call "INPUT",J1,J$,J0$,J1$,J4$,J5$
	!If Not(J1) Window Close \ Return 
	CHAN = Findchannel() ! 99 \ Call "utchan5",CHAN
	!Signal 2,X1,CHAN,E \ If E Gosub ERR_SEARCH
	!Ropen #CHAN,"cntrl/USERPORT" \ Read #CHAN,Spc(6),0;UCREC; \ Close #CHAN
	URec=GetUIDRec(e$,IntCo,Userid$)
	uc_ch = openfile(-9988, intCo) \ if uc_ch = -1 error 42
	Read #uc_ch,uRec,212;EMAILFROM$;
	Close #uc_ch
	Call "mxvaleaddr.dl4",EMAILFROM$,X1,e$
	If Not(X1) Or EMAILFROM$ = ""
		! Already validated in 226, but just in case
		emailrep = 0
		emch = -1
		return
	End If 
	EMAILREP = 1
	! Window Close 
Return 

OPENEMAILCHAN: Rem
	If EMCH <> -1
		Close #EMCH
		EMCH = -1
	End If 
	If SORT <> 2 Or Not(EMAILREP) Return 
	Call "mxvaleaddr.dl4",SLSEMAIL$,X1,e$
	If Not(X1) Or SLSEMAIL$ = "" Return 
	if sw[0] ! use dcs pdf version
		sys$="$email.report.pdf -f ''",emailFrom$,"''"," -t ''",slsEmail$,"''"," -s ''","Invoice Journal (226)","''"
	else
		SYS$ = "$/usr/ub/sys/email.report -f ''",EMAILFROM$,"''"," -t ''",SLSEMAIL$,"''"," -s ''","Invoice Journal (226)","''"
	end if
	SYS$ = SYS$," -c ''","Attached is your invoice journal (226).","''"
	CHAN = Findchannel() ! 99 \ Call "utchan5",CHAN
	!Signal 2,X1,CHAN,E \ If E Gosub ERR_SEARCH
	EMCH = CHAN
	Open #EMCH,SYS$
Return 

L_7600: Rem
If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!Print @0,Msc(34) - 1;'CL';
Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end rtn.input.s}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
E$=msg$
Call programdump("tmp/ij226ase!","")
!call programdump()
goto err_msg ! Error 10000
Return ! End
ERR_MSG: ! send message - leave ip/prog flag if set
ReturnStatus=1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)
Message$=E$
	  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
	  call AddToStr(e$,rstr$,WebStr$)
	  call SetOutPut(e$,rstr$)
End
OUTEND: Rem EXIT
Gosub L_8800 ! clr jstdtl
Gosub L_8900 ! clr glartemp
Gosub ALLJRNL_UNLOCK ! reset from status 92
TFLE$[Len(TFLE$)] = "" \ Close #16 \ Kill TFLE$
! If Err 0 Rem
Try	Kill IRIP$ Else Rem
Try	Close #30 Else Rem
!If Err 0 Gosub ERR_TRAP
Call FindF(SFLE$,E)
If E
  Kill SFLE$
End If 

Mat Read #1,120;P0;
P0[226] = 0
Mat Write #1,120;P0;
L_9010: ! bypass - as no flag/ip set
If SCRPRT ! dx xml (TO BROWSER NOT POSSIBLE - LET IT GET ERROR?)
	tmp$="CANNOT RUN TO BROWSER - NO UPDATE PERFORMED!!!!!!"
	call addtostr(e$,rstr$,tmp$+rdel$)
  Call addtostr(e$,rstr$,esdel$) !end section
   !
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"226a.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
! no other output processing to be done - either errors or to browser sent here!
! call programdump("/tmp/irlog6!","")
!Print 'CS'
!Chain "MX000C"
Try Call dxclose() Else Rem
!Stop 
Rem {begin rtn.error.s}
Else
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
Rem {end rtn.error.s}
