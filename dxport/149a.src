! >>> Program 149a
!
! description Alternate Items not Assigned List
!
! loadsave -w -n 100,10 -o prog/dxport/149a.dl4 src/149a.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP  4, 2002  17:04:46
Rem /w/papermaster/r2002//usr/acct/kag/work/r2002/mx1/mx149a.src (univ2) [kag] {34515}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX149A - ITEMS NOT IN STAGITEM
Rem AUTHOR: FOR PHOENIX   JAN  4, 1994
Rem LAST UPDATE:
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Rem {begin dim.rtn.input}
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J4$[60],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Rem {end dim.rtn.input}
Dim A$[156],VN$[30],STAGK$[50]
Dim 2%,B[24]
Dim J8$[8]
Dim 1%,F,X1,V9[4]
Dim 2%,X2
Dim 3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],T9$[26],P9$[50]
Dim RETVAL$[512],Z1$[50],Z2$[50],MSGTXT$[75],HJ1$[30]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="z",EndParam$
!
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
For J = 2 To 4
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","2352","2400"
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;HJ1$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
V9[3] = 60 \ If J8 Let V9[3] = 20;SCRPRT = 99
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"149a",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("SPRODUC",K2$) \ K2$ = K2$,Blank$
call dxget("EPRODUC",K3$) \ K3$ = K3$,EndParam$
!
If K2$ > K3$ Let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!!L_900: Rem GET RANGES
!!Call "Progdflt","149a","",77,RETVAL$
!!Gosub DISPLAY_SCREEN
!!WHAT_TO_DO: Rem well what!
!!Print @0,23;'CE';"Enter #:field to edit  R: reselect all  P: print  S: save defaults  E: exit  ";
!!Input ""Z1$ \ Call String(1,Z1$)
!!If Z1$ = "S"
!!ASK_SAVE: Print @0,22;'CL';"Save for  A: all or  U: user access only  <CR>: do not save ";
!!  Input ""Z2$ \ Call String(1,Z2$)
!!  If Z2$ = "" Print @0,22;'CL'; \ Goto WHAT_TO_DO
!!  If Z2$ <> "A" And Z2$ <> "U" Goto ASK_SAVE
!!  If Z2$ = "A" Let URECFLAG = 0 Else Let URECFLAG = 1
!!  Call "Progdfltw","149a","",77,RETVAL$,URECFLAG
!!  Print @0,22;'CL';
!!End If 
!!If Z1$ = "R"
!!  For LOOP_ = 1 To 1
!!    CHOICE = LOOP_
!!    Gosub MAKE_CHOICE
!!  Next LOOP_
!!  Goto WHAT_TO_DO
!!End If 
!!If Z1$ = "P" Goto L_990
!!If Z1$ = "E" Goto OUTEND
!!CHOICE = Z1$
!!Gosub MAKE_CHOICE
!!Goto WHAT_TO_DO
!!MAKE_CHOICE: Rem what field do we want?
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
!!On CHOICE Gosub SEL_PROD
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!!Return 
!!SEL_PROD: Rem get the prods
!!PROD_LOOP: Rem
!!J5$ = "Please Enter the Starting Product Code  maximum zzzzzzzzzzzz"
!!J0$ = "2 00122504" \ J1$ = K2$
!!Gosub ISINPUT
!!K2$ = J$
!!J0$ = "2 00124504" \ J1$ = K3$
!!J5$ = "Please Enter the Ending Product Code maximum zzzzzzzzzzzz"
!!Gosub ISINPUT
!!K3$ = J$
!!If K2$ > K3$
!!  Gosub BAD_RANGE
!!  Goto PROD_LOOP
!!End If 
!!RETVAL$[1,12] = K2$[1,12]
!!RETVAL$[13,24] = K3$[1,12]
!!Return 
!!DISPLAY_SCREEN: Rem "========================================== screen
!!Print 'CS'
!!Print @0,0;"-MX149A-";@33,0;"ITEMS NOT ASSIGNED LIST  ";
!!Print @30,2;'BR';"STARTING";'ER';@50,2;'BR';"ENDING";'ER';
!!Print @0,4;" 1> PRODUCT CODE : "
!!If RETVAL$[1,5] = "@@@@@"
!!  RETVAL$ = " ",RETVAL$
!!  RETVAL$[1,12] = "            "
!!  RETVAL$[13,24] = "zzzzzzzzzzzz"
!!  Call "Progdfltw","149a","",77,RETVAL$,0
!!End If 
!!K2$ = RETVAL$[1,12]
!!K3$ = RETVAL$[13,24]
!!Print @25,4;'CL';K2$;@45,4;K3$
!!Return 
!!BAD_RANGE: Rem
!!MSGTXT$ = "Ending value must be Greater than or Equal to starting value"
!!Call "errmsg",MSGTXT$
!!Return
!
L_990: K1$ = K2$ \ If not(J8) If V9[0] If Not(SCRPRT) Print #0;"\14\";
V9[1] = 90 \ V9[0] = 0
!
If J8 
  tmp$ = "ITEM CODE",fdel$
  tmp$ = tmp$, "DESCRIPTION",fdel$
  tmp$ = tmp$, "DESCRIPTION 2",fdel$
  tmp$ = tmp$, "VENDOR ITEM",fdel$
  tmp$ = tmp$, "VENDOR",fdel$
  tmp$ = tmp$, "VENDOR NAME",fdel$
  tmp$ = tmp$, "UPC",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
!!Print @0,21;"Printing,please wait... ";'CE'; \ Signal 3,0
!!If SCRPRT Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
Search #2,2,1;K1$,R1,E
If Not(E) Goto L_2010
L_2000:
Search #2,3,1;K1$,R1,E
If E Goto L_9100
L_2010: 
If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;A$;
Mat Read #2,R1,156;B;
STAGK$ = " ",STAGK$
STAGK$ = K1$[1,12]
Search #3,2,2;STAGK$,R3,E 
If E = 0 Goto L_2000
VN$ = "VENDOR NOT ON FILE"
If B[24] > 0 Gosub L_3000
If Not(SCRPRT)
  PCTR = PCTR + 1
!!  If Not(Fra(PCTR / 500))
!!    Print Using "#######";@25,21;PCTR;" Records Printed";
!!    Print Using "   Page ####";V9;
!!  End If 
End If 
Gosub L_5800
Gosub L_5000
! - Gosub L_2200 
!!Signal 2,J0,A,B !!\ If J0 <> -1 Gosub L_9615
Goto L_2000
!
! - L_2200: Rem TOTALS CALC
! - Return 
!
L_3000: Rem VENDOR NAME
J2$ = " ",J2$;J2$ = B[24] Using "######"
Search #4,2,1;J2$,R4,E 
If E Return 
Mat Read #4,R4,0;VN$;
Return 
!
L_4000: Rem TOTAL PRINT
If J8 Return
!
Gosub L_5800
Print #0;"\15\** END **";
Return 
!
L_5000:!Rem PRINT LINE
If J8
  tmp$ = rtrim$(A$[140,151]),fdel$
  tmp$ = tmp$, rtrim$(A$[9,38]),fdel$
  tmp$ = tmp$, rtrim$(A$[63,92]),fdel$
  tmp$ = tmp$, rtrim$(A$[93,112]),fdel$
  tmp$ = tmp$, B[24] Using "######",fdel$
  tmp$ = tmp$, rtrim$(VN$[1,25]),fdel$
  tmp$ = tmp$, "N",fdel$
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return 
End if
Print #0; Tab 1;A$[140,151];
Print #0; Tab 14;A$[9,38];
Print #0; Tab 45;A$[63,92];
Print #0; Tab 76;A$[93,112];
Print #0; Using "######"; Tab 97;B[24];
Print #0; Tab 104;VN$[1,25];
Print #0; Tab 130;"N";
Print #0;"\15\";
Return 
!
L_5800: Rem HEADINGS ROUTINE
If J8 Return
!
V9[1] = V9[1] + 1 \ If V9[1] < V9[3] Return 
!!If V9[0] If SCRPRT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(SCRPRT) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
If Not(SCRPRT) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(HJ1$) / 2);HJ1$; Tab 120;"PAGE";V9[0]
Print #0;" - mx149a - ";T9$;
Print #0; Tab 49;"ITEMS WITH NO ALTERNATE ITEM CODE"
Print #0;"\15\";
Print #0; Tab 1;"ITEM CODE";
Print #0; Tab 14;"DESCRIPTION";
Print #0; Tab 45;"DESCRIPTION 2";
Print #0; Tab 76;"VENDOR ITEM";
Print #0; Tab 97;"VENDOR";
Print #0; Tab 105;"VENDOR NAME";
Print #0; Tab 128;"UPC";
Print #0;" "
Print #0;"\15\";
V9[1] = V9[1] + 2
Return 
!
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!Return 
!
L_9100: Rem END
Gosub L_4000
!!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
Goto OUTEND
!
!!If J$ = "" Goto OUTEND
!!Goto L_900
!!L_9905: Print @0,Msc(34);'CL RB';"RECORD LOCKED ERROR. Enter  R: retry,  E: exit  ";
!!Input ""X$ \ Print @0,Msc(34);'CL';
!!If X$ = "R" Return -1
!!If X$ <> "E" Goto L_9905
!!Goto OUTEND
!!End 
Rem {begin rtn.input.s}
!!ISINPUT: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 >= 3 If J0 <= 4
!!  If J0 = 3 Let J2$ = "#",J2$
!!  If J0 = 4 Let J2$ = "-",J2$
!!  J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!End If 
!!J1$[J3 + 1] = ""
!!If J0 < 3 Goto ISENTER
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 <> 6
!!  If J0 = 5
!!    J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6 \ J6 = 0
!!    J1$ = J9$[4,7],J9$[2,3],"  "
!!  Else 
!!    J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!    If Len(J5$) > Msc(33) - 3 Let J5$[Msc(33) - 3] = ""
!!  End If 
!!End If 
!!ISENTER: Rem
!!If J5 < Msc(34) - 1
!!  Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!End If 
!!Print @J4 + J3,J5;'EU';@J4 - 1,J5;'BU';
!!Print @J4,J5;J1$[1,J3]; Tab (J4 + J3);'EU'; \ If J0 = 5 Print "  ";
!!Print @J4 - 1,J5;'BU';@J4,J5; \ Input Len J3 + 16384;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) > J3
!!  J7$ = "TOO LONG !" \ Gosub ISERRMSG \ Goto ISENTER
!!End If 
!!J9$ = J4$
!!If Not(Len(J9$))
!!  If J0$[3,4] = "00"
!!    J9$ = J1$
!!  Else 
!!    J7$ = "FIELD MUST BE ENTERED !" \ Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!End If 
!!For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] < " " Or J9$[J8,J8] > "~"
!!    J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!"
!!    Gosub ISERRMSG \ Goto ISENTER
!!  End If 
!!Next J8
!!On J0 Goto ISTYPE1,ISTYPE1,ISTYPE3,ISTYPE3,ISTYPE3,ISTYPE6 \ Stop 
!!ISTYPE1: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto ISOUT
!!ISTYPE3: Rem
!!J9 = 0
!!X1 = 0
!!For J8 = 1 To Len(J9$)
!!  If J0 = 4 And Not(X1)
!!    If J9$[J8,J8] = "-" Or J9$[J8,J8] = "+"
!!      X1 = 1
!!      Goto ISNCONT1
!!    End If 
!!  End If 
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto ISNCONT2
!!  If J9$[J8,J8] = " " Goto ISNCONT1
!!  If Len(J0$) > 10
!!    J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto ISNCONT1
!!  End If 
!!  If J9$[J8,J8] <> "." Goto ISNUMERR1
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto ISDECERR
!!  If J9 Goto ISNUMERR1
!!  J9 = 1
!!ISNCONT2: Rem
!!  X1 = 1
!!  If J9 Let J9 = J9 + 1
!!ISNCONT1: Rem
!!Next J8
!!If J0 = 5 Goto ISTYPE5
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto ISDECERR
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto ISOUT
!!ISNUMERR1: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!ISDECERR: Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE5: If Len(J0$) > 10 If J9$ = J0$[11,11] Goto ISOUT
!!If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto ISDTERR
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto ISDTOUT
!!If J9[1] = 0 Goto ISDTERR
!!On J9 Goto ISMO31,ISMOFEB,ISMO31,ISMO30,ISMO31,ISMO30
!!On J9 - 6 Goto ISMO31,ISMO31,ISMO30,ISMO31,ISMO30,ISMO31
!!Goto ISDTERR
!!ISMO30: If J9[1] > 30 Goto ISDTERR
!!ISMO31: If J9[1] > 31 Goto ISDTERR
!!Goto ISDTOUT
!!ISMOFEB: If J9[1] > 29 Goto ISDTERR
!!If Fra(J9[2] / 4) ! *** 2000 is leap year! OR NOT FRA(J9[2]/100)
!!  If J9[1] > 28 Goto ISDTERR
!!End If 
!!ISDTOUT: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub ISDUNPACK
!!J$ = X$ \ J3 = 8 \ Goto ISOUT
!!ISDTERR: J7$ = "INVALID DATE !" \ Gosub ISERRMSG \ Goto ISENTER
!!ISTYPE6: Call String(1,J9$)
!!If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto ISOUT
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto ISOUT
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !"
!!Gosub ISERRMSG \ Goto ISENTER
!!ISOUT: J$[J3 + 1] = "" \ Print @J4,J5;J$; \ Return 
!!ISERRMSG: X1 = Len(J7$)
!!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!!Print 'K1'; \ Window Close \ Return 
!!ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
!!X$ = " ",X$ \ X$[10] = ""
!!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
!!If Not(X2) Let X$ = "        "
!!Return 
!!ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
!
Rem {end rtn.input.s}
OUTEND: Rem EXIT
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
End 
!
!!Print 'CS'
!!Close 
!!Chain "MX000"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End