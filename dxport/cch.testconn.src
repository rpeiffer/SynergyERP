! >>> Program cch.testconn
!
! description  test internet connection to cch
!
! loadsave -w -n 100,10 -o prog/dxport/cch.testconn.dl4 src/cch.testconn.src
!
! 1.0 mm/dd/yyyy change?
!
include "src/copyright.inc" ! dx
!
Rem CCH.TESTCONN.src - Test to see if connection can be made
Rem 220549 / 221505
Rem file name is ALWAYS txt/cch.testconn.pl out and /tmp/testconnin.txt
Rem file cch.testconn.pl MUST BE EXECUTABLE PERL SCRIPT!!!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: JAN 22, 2010  18:05:37
Rem /w2/papermaster/r2005//usr/acct/valerie/work/custom/htberry.r10/cch.testconn.src (univ2) [valerie] {56279}
Rem  Copyright (c) 2010 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub FindF,InpBuf,String,programdump
declare intrinsic function FindChannel
! Option Default Dialect IRIS1
Rem CCH.TESTCONN.src - Test to see if connection can be made
Rem 220549 / 221505
Rem file name is ALWAYS txt/cch.testconn.pl out and /tmp/testconnin.txt
Rem file cch.testconn.pl MUST BE EXECUTABLE PERL SCRIPT!!!
If Err 0 Gosub ERR_TRAP
Enter CONNSTAT
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim WRKLINE$[1000],TMPLINE$[1000],VAR$[10],WORK$[1000],TEMP$[1000]
Dim FLE$[30],RETVAL$[512],CCHSERNO$[20],CCHDPC$[10],DIRTO$[64]
Dim CCHOID$[20],S1$[118],S2$[20],A1$[142],A2$[30],A3$[22],L1$[20]
Dim S3$[33],K1$[64],K2$[64],K3$[64],K4$[64],XMLFLE$[80],TMPFLE$[30]
Dim X$[20],VARNM$[60],CCHPC$[10],LOGFNM$[40],SPACES$[200],TEXNO$[20]
Dim FAULTSTRING$[256],INXMLFLE$[128]
Dim 1%,X,X1[9],COID,CH_CNTRL,CH_CUST,CH_ROL,CH_ROS,CH_ROT,CH_ROL,CH_INFLE
Dim 1%,L3[3],S2[1],H4[2],TCB,CH_ROH,CH_TAX,POS0,POS1,POS2,POS3,CH_DTL
Dim 1%,CH_CCHTRNS,TTLLNS,LDLN,LNNO,SCR,CREDIT,RTAX,FLEFND,CCHAN[10]
Dim 1%,FOUND,BADDATA,RCOMMIT,RCANCEL,RESPFAULT,BADORD,RLINE
Dim 2%,X2[9],H0[12],MCODE[9],L4[3],H6[8],H5[16]
Dim 3%,X3[9],SRN[5],T2[25],MCHARGE[9,1],L5[3],L7[12]
Dim 3%,ORDREC,R[99],TAXAMT,E,H
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim WebStr$[256],msg$[100],message$[300],RSTR$[500]
SPACES$ = " ",SPACES$
CONNSTAT = 0
returnstatus=1;message$="OK"
! Print @0,22;'CE';"TESTING CONNECTION TO CCH, PLEASE WAIT";
RESTARTHERE: Rem retry receiving (if needed)
INXMLFLE$ = "/tmp/testconnin.txt"
WORK$ = "txt/cch.testconn.pl " + INXMLFLE$
System WORK$
XMLFLE$ = INXMLFLE$
CHNL = 97 \ Gosub GETCHAN
CH_INFLE = CHNL
WORK$ = XMLFLE$
FLEFND = 0
CHK4FLE: Rem "wait and try again loop
Call FindF(WORK$,FOUND)
If FOUND ! it's there - open it
  Open #CH_INFLE,WORK$
Else 
  If FLEFND <= 4 ! not there yet? try 4 times(0,1,2,3)(=12 seconds), then give up
    FLEFND = FLEFND + 1
    ! Print @40,22;'CL';"NO FILE YET..";Str$(FLEFND);
    Signal 3,30
    Goto CHK4FLE
  End If 
  Message$="RESPONSE FILE MISSING!"
  Returnstatus=0
  Goto OUTDONE
End If 
BADDATA = 1;RESPFAULT = 0
INFLE_LOOP: Rem until done or EOF
WRKLINE$ = ""
Gosub READ_TEMPLATE
If WRKLINE$ = "" Goto FLEDONE
Rem the only way I see it is do hardcode literal search
VARNM$ = "FAULT"
Gosub CHK_LINE
If POS1 ! CCH found a problem
  RESPFAULT = 1
End If 
VARNM$ = "<FAULTSTRING"
Gosub CHK_LINE
If POS1 ! see if we can grab why it's a 'fault'
  Gosub PARS_DATA
  FAULTSTRING$ = TEMP$
  WORK$ = TEMP$
  POS0 = 1;POS2 = 0
  Search WORK$[POS0],";",POS2
  If POS2 ! okay all after semicolon is what we want
    POS1 = POS2 + 1
GETALLSC: Rem until no more found
    POS0 = POS1
    Search WORK$[POS0],";",POS2
    If POS2 ! found another - see if another
      POS1 = POS0 + POS2
      Goto GETALLSC
    End If 
    FAULTSTRING$ = " ",FAULTSTRING$
    FAULTSTRING$ = WORK$[POS1 + 1]
    Gosub STRPCHARS
  End If 
End If 
Goto INFLE_LOOP
READ_TEMPLATE: Rem read (needs any processing?)
Read #CH_INFLE;WRKLINE$;
STRPCCHAR: Rem "remove cr/lf etc
If Len(WRKLINE$) > 1 IF WRKLINE$[Len(WRKLINE$)] < " "
  WRKLINE$[Len(WRKLINE$)] = ""
  Goto STRPCCHAR
End If 
Return 
CHK_LINE: Rem See if line holds what we're looking for
WORK$ = WRKLINE$
Call String(1,WORK$)
POS0 = 1;POS1 = 0;POS2 = 0
Search WORK$[POS0],VARNM$,POS1
Return 
PARS_DATA: Rem get the data from the line
WORK$ = "";TEMP$ = ""
Search WRKLINE$[POS0 + POS1],">",POS2
If POS2 ! got it
  WORK$ = "";TEMP$ = ""
  X = POS2 + POS0 + POS1
  Let WORK$ = WRKLINE$[X] To "<" : POS2
  For X1 = 1 To Len(WORK$)
    If WORK$[X1,X1] <> ">" And WORK$[X1,X1] <> "<" And WORK$[X1,X1] <> ""
      TEMP$ = TEMP$ + WORK$[X1,X1]
    End If 
  Next X1
End If 
Return 
STRPCHARS: Rem as we use cat - we need to strip 'invalid' chars
WORK$ = FAULTSTRING$
If Len(WORK$) = 0 Return 
For X = 1 To Len(WORK$)
  If WORK$[X,X] = ")" Let WORK$[X,X] = " "
  If WORK$[X,X] = "(" Let WORK$[X,X] = " "
Next X
FAULTSTRING$ = " ",FAULTSTRING$
FAULTSTRING$ = WORK$
Return 
FLEDONE: Rem file reading is done - write order files
If RESPFAULT Let BADDATA = 0
Close #CH_INFLE
If BADDATA Let CONNSTAT = 0
POS0 = 1;POS1 = 0
If Len(FAULTSTRING$) > 1
  Search FAULTSTRING$[POS0],"try again later",POS1
  If POS1 Let CONNSTAT = 1
End If 
If RESPFAULT Let CONNSTAT = 1
OUTDONE: Rem finished
!Print @0,22;'CE';@0,23;"CONNECTION IS ";
If CONNSTAT = 0 
	Message$="CONNECTION IS NOT OPERABLE"
	returnstatus=0
Endif
!If CONNSTAT = 1 Print "WORKING OKAY";
OUTEND: Rem outta here
if returnstatus=0 goto Outerr
End 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
CHNL=FindChannel() ! (chnl)
Return 
OutErr: ! something amiss
CONNSTAT=0 ! NO GOOD
End ! let caller handle it
if returnstatus=0 let returnstatus=1 ! as it's blockid?
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End
Rem {end rtn.getchan.i}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+MSC$(4)
Call programdump("tmp/cch.testconnse!","")
returnstatus=0
message$=msg$
goto OutErr ! alt - send user info
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End 
Rem {end rtn.error.s}