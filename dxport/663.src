! >>> Program 663
!
! description Create G/L Budget from Comma delimited (.csv) file
! loadsave -w -n 100,10 -o prog/dxport/663.dl4 src/663.src
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.5 OBJECT CODE     Created: JUN  8, 2015  16:34:47
Rem /x/w2/pm/r2005//x/usracct/mary/work/custom/xrev9/gl663.src (synergyux.synergy.n) [mgd] {53327}
Rem  Copyright (c) 2015 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!Declare Intrinsic Sub Date,FindF,InpBuf,String,StringSearch
!Option Default Dialect IRIS1
Declare Intrinsic Sub Date,FileInfo,FindF,InpBuf,String,Time,VerifyDate,DateToJulian,StringSearch
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr,GetSession,AddToStr,SetOutput,CreateNetStatus
External Lib "ubsfunc.dl4"
Declare External Function OpenFile
External Lib "dxblockgeneral.lib"
Declare External Function blockbuildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,Time,Logic
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"                    
Declare External Function GetUIDRec,GetUIDInfo$
Try
Rem gl663 load g/l budget from spreadsheet format
Rem bedit -c gl663.src
Rem???:06/12/01:Converted to Bedit   (mkbedit 1.2b)
If Err 0 Gosub ERR_TRAP
Dim SOURCEDIRNAME$[50],TEXTDIRNAME$[50],R12$[50]
Dim SOURCEFILE$[50],TEXTFILE$[70],TMPFILE$[80],FNAME$[50],FILENAME$[50]
Dim CUSTOM_CUSTOMER$[30]
Dim PLAT$[5],PLAT1$[20]
Dim F$[16],F2$[20],F9$[2],G$[2],J$[40],K1$[25]
Dim 3%,GLACCT
Dim 2%,CURRDATE
Dim DATE$[6],DATE1$[6],GLDESC$[80],CURRDATE$[6],K2$[30],B$[139],BUDNAME$[16]
Dim 1%,MONTH_,YEAR_,S9[5]
Dim R11$[20],N$[10],K3$[30],K5$[30],R5$[200],GLACCT$[12]
Dim WK$[500],WK1$[500],CMD$[80],A$[36],A2$[10]
Dim DEPTNAME$[30]
Dim YEAR_$[4],K6$[30]
Dim 1%,E,B,L9
Dim 4%,R[23],D3,A3[39],A4[39]
Dim 4%,GLAMT
Dim 2%,G,G1,G2,G3,X
dim BLANK$[50]
Dim fname$[50],groupid$[1],2%,apdate
Dim 1%,tmpmth,tmpyr
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim tmp1$[200],blockid$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
DIM txtfile$[80]
Dim 3%!
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[1500],tmp1$[200],blockid$[100],msg$[100],rstr$[2000]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
dim eparam$[50],blank$[50]
Dim 3%,uarec
! call dxopen() ! needed?
! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
uarec= GetUIDRec(e$,IntCo,Userid$)
COID=intCO
COMP=intCO
for ctr=0 to 99
	Try Close #ctr Else Rem
next ctr
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
eflag=0
returnstatus=0 ! blockid no errors
!HECKPLAT: Rem "check platform (SCO, DG or AIX, LINUX)
!PLAT1$ = "PLATFORM"
!System 28,PLAT1$
PLAT$ = PLAT1$,"     "
Mat Read #1,51,6;S9;
Mat Read #1,115,60;CUSTOM_CUSTOMER$;
Let custom_customer$=rtrim$(custom_customer$)
FILENAME$ = "cntrl/gl663.ini"
Call FindF(FILENAME$,A9)
If Not(A9)
  eflag=eflag+1
	returnstatus=1
	message$=FILENAME$+" does not exist. "
  Goto OUTEND
End If 
Open #90,FILENAME$
Read #90;SOURCEDIRNAME$
X = Len(SOURCEDIRNAME$)
If x>0
	if sourcedirname$[x,x]="\15\" let sourcedirname$[x,x]=""
endif
sourcedirname$ = Trim$(sourcedirname$)
If SOURCEDIRNAME$ = "" Or SOURCEDIRNAME$ = "!"
	eflag=eflag+1
	returnstatus=1
	message$=SOURCEDIRNAME$+" source directory not set up properly. "
	Goto OUTEND
End If 
X = Len(SOURCEDIRNAME$)
If SOURCEDIRNAME$[X,X] <> "/" Let SOURCEDIRNAME$[X,X] = ""
Call FindF(SOURCEDIRNAME$,A9)
If Not(A9)
	eflag=eflag+1
	returnstatus=1	
	message$=SOURCEDIRNAME$+" - Source Directory Does not exist. "
	Goto OUTEND
End If 
Read #90;TEXTDIRNAME$
textdirname$ = Trim$(textdirname$)
let x=len(textdirname$)
If x>0
	if textdirname$[x,x]="\15\" let textdirname$[x,x]=""
endif
If TEXTDIRNAME$ = "" Or TEXTDIRNAME$ = "!"
	eflag=eflag+1
	returnstatus=1	
	message$=TEXTDIRNAME$+" text directory not set up properly. "
	Goto OUTEND
End If 
X = Len(TEXTDIRNAME$)
If TEXTDIRNAME$[X,X] <> "/" Let TEXTDIRNAME$[X,X] = ""
Call FindF(TEXTDIRNAME$,A9)
If Not(A9)
  eflag=eflag+1
	returnstatus=1
	let message$=TEXTDIRNAME$+" - Text Directory Does not exist. "
    Goto OUTEND
End If 

Mat Read #1,3,172;CURRDATE;
CURRDATE$ = CURRDATE Using "&&&&&&"
STARTHERE: Rem start input prompts
Mat Read #1,51,6;S9;
If Not(S9[1])
eflag=eflag+1
	returnstatus=1
    message$="Budget Information is not available"
    Goto OUTEND
End If 
Call dxget("u_group",groupid$)             
If RTrim$(groupid$) = "" Let groupid$ = "0"
G$[1,1] = COID Using "#"
G$[2,2] = GROUPID$ 

F$ = "1/ACF",G$[1,2]
Call FindF(F$,A9)
If Not(A9)
	eflag=eflag+1
	message$="ACF file missing for this company"
  Goto OUTEND
End If 
Open #2,F$ ! acf file
If S9[2]
  Read #1,88,128;F$;
  Open #6,F$
End If 
! need to get client #
IF S9>0
	Call dxget("CLIENTID",tmp$) \ W = tmp$ !!Enter Client #                     
	If W <= 0 Or W > 9999 
		let eflag=eflag+1
		LET Returnstatus=1
		Let message$ = "Invalid client number!"
		goto outend:
	endif
	let n$=W using "####"
	for x=1 to 3
		if n$[x,x]=" " let n$[x,x]="."
	next x
else                                                   
	w = 1 ! cleint # 1
	n$ = "...1"
endif
If Not(S9) Let W = 1 
CLIENTFIND: Rem find client number
K2$ = " ",K2$ \ K2$ = W Using "######"
Search #2,2,1;K2$,R[2],E
If E > 1 Gosub ERR_SEARCH
If E = 1
  let eflag=eflag+1
  let returnstatus=1
  message$="CLIENT NOT ON FILE!!!"
  goto outend:
End If 
Mat Read #2,R[2],0;B$;
L9 = B$[135,136]
If L9 > 9 Let F9$ = L9 Using "##"
If L9 < 10 Let F9$ = L9 Using "#"
N$ = W Using "####"
CLIENT = W
For I = 1 To 4
  If N$[I,I] = " " Let N$[I,I] = "."
Next I
F$ = F9$,"/GLB",G$[1,2],N$
BUDNAME$ = F$
Call FindF(F$,A9)
If Not(A9)
	let eflag=eflag+1
	let returnstatus=1
	message$="Budget File Does Not Exist for this Client"
	goto outend:
End If 
Open #3,F$
F$ = F9$,"/GLM",G$[1,2],N$
Call FindF(F$,A9)
If Not(A9)
	let eflag=eflag+1
	let returnstatus=1
	message$="General Ledger Master File Does Not Exist for this Client"
	goto outend:
End If 
ROpen #4,F$
K3$ = " ",K3$
Search #3,2,1;K3$,R[3],E \ If E Gosub ERR_SEARCH
Mat Read #3,R[3],70;D3;
D5 = (Fra(D3 / 100)) * 100
If D5 <> 14 If D5 <> 39 Let D5 = 39
Dim 4%,A3[D5]
Mat Read #3,R[3],70;A3;
ENTERFILE: Rem enter file name to update budget with
GETFNAME: Rem
Call dxget("FNAME",tmp$)
let fname$=rtrim$(tmp$)
If FNAME$ = "" 
	let eflag=eflag+1
	returnstatus=1
	let message$="Invalid File Name Entered "
	Goto OUTEND
endif
SOURCEFILE$ = SOURCEDIRNAME$ + FNAME$ + ".csv"
TEXTFILE$ = TEXTDIRNAME$ + "gl663" + Str$(uarec) + ".txt"
Call String(2,TEXTFILE$) ! make all lower case
TMPFILE$ = "tmp/glex663" + str$(uarec)
CMD$ = "(ls ",SOURCEFILE$," > ",TMPFILE$,") 2>/dev/null"
System CMD$
Call FindF(TMPFILE$,A9)
If Not(A9)
  let eflag=eflag+1
	let returnstatus=1
	let message$="File "+rtrim$(fname$)+" Not Found "
	goto outend:
Else 
  R12$ = ""
  Open #99,TMPFILE$
  Read #99;R12$
  Close #99
  CMD$ = "rm " + TMPFILE$
  System CMD$
  let x=len(r12$)
  if x>0
	if r12$[x,x]="\15\" let r12$[x,x]=""
  endif
  If R12$ = ""
	let eflag=eflag+1
	let returnstatus=1
	let message$="File "+rtrim$(fname$)+" Not Found "
	goto outend:
  End If 
End If 
CMD$ = "cp " + SOURCEFILE$ + " " + TEXTFILE$
System CMD$
Call FindF(TEXTFILE$,A9)
If Not(A9)
	let eflag=eflag+1
	let returnstatus=1
	let message$="File "+rtrim$(fname$)+" Not Available "
	goto outend:
End If 
Open #5,SOURCEFILE$
GETFISCALYEAR: Rem enter fiscal year end
Call dxget("FYE",tmp$) ! YY forma
FYE = TMP$
YEAR_$[1,2] = FYE Using "&&";YEAR_$[3,4] = FYE Using "&&"
YEAR_ = YEAR_$
If A3[13] = YEAR_
  STARTPER = 1;ENDPER = 12
  Goto GETDEPT
End If 
If A3[26] = YEAR_
  STARTPER = 14;ENDPER = 25
  Goto GETDEPT
End If 
If A3[39] = YEAR_
  STARTPER = 27;ENDPER = 38
  Goto GETDEPT
End If 
	LET EFLAG=EFLAG+1
	LET RETURNSTATUS=1
	MESSAGE$="Print Fiscal Year Is Not Available for Updates"
	GOTO OUTEND:
GETDEPT: ! 
CMD$ = "databak"
Call FindF(CMD$,A9)
If Not(A9)
  CMD$ = "mkdir databak"
  System CMD$
End If 
J$ = "databak/" + BUDNAME$[3] + "." + CURRDATE$
Call FindF(J$,A9)
If Not(A9)
  CMD$ = BUDNAME$ + " " + J$
  Duplicate CMD$
End If 
PASS = 0
L_1100: Rem READ GL TEXT FILE
Read #5;R5$
If R5$ = ""
  If PASS = 0
   LET EFLAG=EFLAG+1
   RETURNSTATUS=1
   message$="Incorrect Data File To Update Budget File"
  Else 
    message$="Budget File Update Completed"
  End If 
  Goto OUTEND
End If 
PASS = 1
CT = 0;POS_ = 1
Gosub L_8000
GLACCT = WK$
If DEPT
  GLACCT$ =" ",GLACCT$
  GLACCT$[1,7] = GLACCT Using "#######"
  GLACCT$[8,9] = DEPT Using "&&"
Else 
  GLACCT$ = " ",GLACCT$
  GLACCT$[1,9] = GLACCT Using "#########"
End If 
Search #3,2,1;GLACCT$,R[3],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  Search #4,2,1;GLACCT$,R[4],E \ If E > 1 Gosub ERR_SEARCH
  If E = 1
BADACCTWARN: Rem warn to bypass bad acct number
    !Print @0,15;'CE';"Account Number ";GLACCT$;" Not Found in G/L ";
    !Print @0,16;"*** Update has been bypassed ****";
    !Print @0,17;'CL RB';"Press <CR>:  to continue update or E:  end ";
    !Input Len (16384 + 1);""J$
    !Call String(1,J$)
    !If J$ = "E" Goto OUTEND
    !If J$ = "" Goto L_1100
    !Goto BADACCTWARN
	GOTO L_1100
  Else 
    Mat Read #4,R[4],0;A$;
    Mat Read #4,R[4],48;A2$;
    Mat Read #4,R[4],70;A4;
    For X = 0 To 39 \ A4[X] = 0 \ Next X
    E = 2 \ Search #3,1,0;GLACCT$,R[3],E \ If E Gosub ERR_SEARCH
    Mat Write #3,R[3],0;A$;
    Mat Write #3,R[3],48;A2$;
    Mat Write #3,R[3],70;A4;
    Mat Write #3,R[3],390;A4;
    Search #3,4,1;GLACCT$,R[3],E \ If E Gosub ERR_SEARCH
  End If 
End If 
Mat Read #3,R[3],0;A$;
Mat Read #3,R[3],70;A4;
TYPE = 1 \ If A$[14,14] = "I" Let TYPE = -1
For X = STARTPER To ENDPER
  Gosub L_8000
  GLAMT = WK$;GLAMT = GLAMT * TYPE
  A4[X] = GLAMT
Next X
Mat Write #3,R[3],70;A4;
Goto L_1100
L_8000: Rem find string
WK1$ = " ",WK1$ \ WK1$ = R5$[POS_]
Search WK1$,",",CT
IF NOT(CT)
	LET WK$=""
	IF RTRIM$(R5$[POS_])<>"" LET WK$=R5$[POS_]
	RETURN
ENDIF
WK$ = " ",WK$
WK$[1,CT] = WK1$[1,CT]
If WK$[CT,CT] = "," Let WK$[CT,CT] = ""
If POS_ = 1 If WK$[1,1] = "," Let WK$[1,1] = " "
POS_ = POS_ + CT
L_8035: Search WK$,",",CT
If CT
  WK$[CT] = ""
  Goto L_8035
End If 
Return 


ERR_SEARCH: Rem                         
ENUM = E;ELINE = Spc(16);CTERR = 0           
If E = 5 Let CTERR = Err(8)                  
msg$ = "RETURN STATUS",(E + (CTERR * .001))  
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
call programdump()
e$ = msg$ \ Error 10000                      
Return ! End  
                             
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 

ERR_MSG: ! send message
ReturnStatus=0! need report to print still
Message$=E$
call programdump()
!Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
!call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
!call AddToStr(e$,rstr$,WebStr$)
!call SetOutPut(e$,rstr$)

L_8900: Rem END
oUTEND: Rem END
Close 
Call FindF(TEXTFILE$,A9)
If A9
  Kill TEXTFILE$
End If 
!Chain "mx000"
!Stop 
if eflag<>0 let returnstatus=1 ! error
!
!Chain "MX000"
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
let returnstatus=0
If Eflag>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(eflag)
		let message$=message$+" Budget Updated"	
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
! try Call dxclose() else rem
Else
	include "src/callmainerrnet.inc"
end try
End ! the whole program