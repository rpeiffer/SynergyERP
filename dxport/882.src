! >>> Program 882
!
! description   BOM Checker Listing / LLC Update
!
! loadsave -w -n 100,10 -o prog/dxport/882.dl4 src/882.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem MX882 - BOM CHECKER / LOW LEVEL CODE UPDATE
Rem         ************
Rem
Rem BEDIT Version: 2.1 OBJECT CODE     Created: JUL 19, 2000  15:49:09
Rem /usr/acct/r97//usr/acct/ldm/work/r97/mfg/mx882.src (univ2) [ldm] {19046}
Rem  Copyright (c) 2000 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function AddToMYReports
!
Declare Intrinsic Sub InpBuf,MiscStr,String,Time,FindF
!Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP

Dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33]
Dim 3%,A2
Dim P9$[50],X$[10],WRKFLE$[50]
Dim G$[20],N1$[36],WRK$[200]
Dim L$[5],P1$[156],T9$[26]
Dim 3%,R4[100],R5,S3,2%,S4
Dim 2%,P0[2],1%,D0[100],LLC
Dim 2%,C2,B[24],B1,3%,RCNT,RCLR
Dim 2%,R2,C,R,R1,E2,1%,I,S2[3]
Dim 1%,E1,X
Dim F$[20],P$[156],N$[12],H$[156],A1$[31]
Dim A$[20],J$[20],C$[800],B1$[12],E1$[12],N2$[26]
Dim B$[30]
Dim J0$[5],J1$[5]
Dim 2%,I2
Dim Y$[12]
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[200]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[20]	  \ Blank$=" ",Blank$
dim EndParam$[20] \ EndParam$="}",EndParam$
Dim 3% ! default for un-dimmed numbers
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 10000 + .5) * .0001)
Def FNP(X) = FNR(X * X1)
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!call dxsave(0,"tmp/882in.txt!")
B$ = "CNTRL"+Str$(IntCO)
For E1 = 2 To 6
  Read X
  If Not(X) Goto L_830
  Read #1,88,X;F$[1,16];
  Open #E1,F$
L_830: Next E1
Data "0","1792","1728","0","656"
Mat Read #1,19,50;P9$;
!WRKFLE$ = "/tmp/882wrk" + Str$(Spc(6))
!C$ = WRKFLE$ + "!"
!Build #9, + C$
C$ = " ",C$
!Print 'CS MH CR'; Tab 18;"BILL OF MATERIAL CHECK/LEVEL CODE UPDATE"
!Print Tab 8;" This Program should be run periodically to keep Production"
!Print Tab 18;"   running accurately"
!Print 'MD';
!Goto L_1500

L_1500: Rem *** SELECT PARTS ***
!Print @0,19;'CE';"Advisory if ''M''ake item and no B.O.M.? (Y/N)   ";
!Input ""F$ \ If F$ = "E" Goto OUTEND
Call dxget("ADVISORY",tmp$) \ let F$=UCase$(RTrim$(tmp$))
if f$="" let f$="N"
! hidden option YC = Change to Buy in Product File
If F$ = "YC" Let ADVIS = 99 \ Goto L_1508
If F$ <> "Y" If F$ <> "N" Goto L_1500
ADVIS = 0 \ If F$ = "Y" Let ADVIS = 9
L_1508: !Print @0,20;'CE';"PRESS <RETURN> to start, or  E:exit  ";
!Input ""F$ \ If F$ = "E" Goto OUTEND
If F$ = "" Let B1$ = ""
!If F$ <> "" Goto L_1500
If Err 0 Gosub ERR_TRAP
!! set up file for report 
ReportDir$ = "REPORTDIR" \ System 28,ReportDir$
	BaseName1$ = "bom_checker_882_"+dateusing$(Tim#(0),"YYMMDDHHNNSS")
	StatusFile$ = ReportDir$ + "/"+BaseName1$
	Call FindF(StatusFile$,tmp)
	If tmp Kill StatusFile$
	StatChan = 88 ! FindChannel() ! channel to build text file need fixed channel
	Try Close #88 Else Rem
	Try
		Build #StatChan,StatusFile$ As "TEXT"
	Else
		returnstatus=1
		let e$="Error in Building Status File "
		goto OutErr
	end TRY
	Try Close #StatChan Else Rem
	Try
		Open #StatChan,StatusFile$
	else
		returnstatus=1
		let e$="Error in Opening Status File "
		goto OutErr
	end TRY
	Print #StatChan;"882 - Process Started..."
	! PAUSE 20
	e = AddToMYReports(BaseName1$) 
	if e<0
		e$="Error adding to my reports!" 
		returnstatus=1
		goto OutErr
	endif
	returnstatus=0 ! or is it 1?
	message$="Please check under My Reports "+basename1$+" for status and completion"
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
	Call AddToStr(e$,rstr$,WebStr$)                            
	Call SetOutPut(e$,rstr$)
NumRec=0
F$ = ""
If F$ = "" Let E1$ = "}}}}}}}}}}}}}"
If F$ <> "" Let E1$ = F$
L$ = "M" \ If P9$[16,16] = "S" Let L$ = "S"
If L$ = "" Let L$ = "M"
If L$ = "S" Goto L_1575
If L$ = "M" Goto L_1575
Goto L_1500
L_1000: Rem
S2[3] = 0
E2 = C2 \ Gosub L_3800 ! Read product
B1 = PFU1[8]
numrec=numrec+1
if not(Fra(Numrec/100)) ! status update
	print #StatChan;Str$(NumRec);" ";P$[140,151]
endif
! Print @45,16;P$[140,151] \ Signal 3,0
R2 = C2
S8 = 0
Gosub L_3000 ! explode it
Goto L_1610
L_1575: Gosub L_2000 ! clear LLC
Print #StatChan;"Updating BOM Level Code "
!Print @28,18;'CE';"Records Checked"
A1$ = " ",A1$;A1$ = B1$
Search #3,2,1;A1$,R,E
If E > 1 Gosub ERR_SEARCH
If Not(E) Let Y$ = A1$
If Not(E) Goto L_1635
L_1610: Search #3,3,1;A1$,R,E
If E = 2 Goto L_8000
If A1$ > E1$ Goto L_8000
If E Gosub ERR_SEARCH
Y$ = A1$
L_1635: C2 = R
Mat Read #3,C2,0;P1$;
A$ = R Using "#####"
Search #6,2,1;A$,I2,E
RCNT = RCNT + 1
! Print @45,18;RCNT
If E = 1 If P1$[139,139] = "M" Gosub L_5550
If Not(E) Goto L_1700
L_1665: Search #6,3,1;A$,I2,E
If E Goto L_1610
I2 = A$[1,5]
If I2 <> C2 Goto L_1610
If A$[15,16] <> P1$[6,7] Goto L_1665
I2 = 0
A$ = ""
L_1700: Rem
B$ = " ",B$
C$ = " ",C$
Mat Read #3,R,0;H$;
A$ = A1$
X1 = 1
Goto L_1000
L_2000: Rem CLEAR LLC FIRST
Print #StatChan;"Clearing Work Area"
!Print @38,22;'CE';"Records Cleared"
A1$ = " ",A1$
L_2020: Search #3,3,1;A1$,R3,E \ If E = 2 Goto L_2090
RCLR = RCLR + 1
if not(Fra(RCLR/100))
  Print #StatChan;"Cleared ";Str$(RCLR);" ";a1$
endif
If E > 1 Gosub ERR_SEARCH
LLC = 0
Write #3,R3,630;LLC;
Goto L_2020
L_2090: Return 
L_3000: Rem EXPLOSION
D0 = 1
A$ = R2 Using "#####   0    0"
Search #6,2,1;A$,R,R1
F$ = A$
If R1 = 0 Goto L_3065
L_3060: Search #6,3,1;F$,R,R1
L_3065: If R1 <> 0 Return 
If A$[1,5] <> F$[1,5] Return 
R3 = F$[1,5] \ If R3 <= 0 Goto L_3060
Read #3,R3,0;P1$;
If F$[15,16] <> P1$[6,7] Goto L_3060
I = 0
F$ = A$
L_3130: Search #6,3,1;F$,S4,R1
If R1 <> 0 Goto L_3540
If A$[1,5] <> F$[1,5] Return 
R3 = F$[1,5] \ If R3 <= 0 Goto L_3130
Read #3,R3,0;P1$;
If F$[15,16] <> P1$[6,7] Goto L_3130
Read #6,S4;S3;
Mat Read #6,S4,6;N1$;
Mat Read #6,S4,48;S2;
Mat Read #6,S4,56;N2$;
R4[I] = S3
H = 999
J$[1,14] = F$[1,14]
S = J$[6,9]
J0$ = "Y";J1$ = "Y"
Gosub L_5000
If J0$ = "N" Goto L_3510
If L$ = "S" Goto L_3510
H = 0
I = 1
L_3270: C$[I * 15 + 1,I * 15 + 14] = E2 Using "#####   0    0"
G$ = C$[I * 15 + 1,I * 15 + 14]
R3 = G$[1,5] \ If R3 <= 0 Goto L_3480
Read #3,R3,0;P1$;
G$[15,16] = P1$[6,7]
Search #6,2,1;G$,R,R1
D0[1] = 1
If R1 = 0 Goto L_3325
L_3320: Search #6,3,1;G$,R,R1
L_3325: If R1 <> 0 Goto L_3480
If G$[1,5] <> C$[I * 15 + 1,I * 15 + 5] Goto L_3480
R3 = G$[1,5] \ If R3 <= 0 Goto L_3320
Read #3,R3,0;P1$;
If G$[15,16] <> P1$[6,7] Goto L_3320
L_3350: G$ = C$[I * 15 + 1,I * 15 + 14]
R3 = G$[1,5] \ Read #3,R3,0;P1$;
G$[15,16] = P1$[6,7]
L_3360: Search #6,3,1;G$,S4,R1
If R1 <> 0 Goto L_3480
If G$[1,5] <> C$[I * 15 + 1,I * 15 + 5] Goto L_3480
R3 = G$[1,5] \ If R3 <= 0 Goto L_3360
Read #3,R3,0;P1$;
If G$[15,16] <> P1$[6,7] Goto L_3360
Read #6,S4;S3;
Mat Read #6,S4,6;N1$;
Mat Read #6,S4,48;S2;
Mat Read #6,S4,56;N2$;
R4[I] = S3
J$ = G$;J0$ = "Y";J1$ = "Y"
Gosub L_5000
C$[I * 15 + 1,I * 15 + 14] = G$
If J0$ = "N" Goto L_3320
I = I + 1
Goto L_3270
L_3480: I = I - 1
If I = 0 Goto L_3510
Goto L_3350
L_3510: C$ = " ",C$
I = 0
Goto L_3130
L_3540: Return 
L_3800: Rem READ PROD
If S2[3] = 1 Return 
Mat Read #3,E2;P$;
Mat Read #3,E2,156;B;
Mat Read #3,E2,256;A;
Mat Read #3,E2,512;PFU1;
Mat Read #3,E2,554;PFU2;
If Not(B[8]) Let B[8] = B[21]
If Not(B[8]) Let B[8] = B[10]
A2 = B[8]
If PFU1[8] <= 0 Let PFU1[8] = PFU1[0]
If PFU1[13] <= 0 Let PFU1[13] = PFU1[0]
Return 
L_5000: Rem
E2 = J$[10,14]
If E2 <= 0 Goto L_5090
If S2[3] = 1 Or S2[1] = -2 Goto L_5090
Gosub L_3800
If S2[2] = 2 Let J0$ = "N"
Gosub L_5200
Read #3,E2,630;LLC;
If LLC > I + 1 Goto L_5090
LLC = I + 1
If LLC > 50 Goto L_5100
Write #3,E2,630;LLC;
L_5090: Return 
L_5100: Rem TROUBLE!
I = I - 1;J$ = C$[I * 15 + 1,I * 15 + 14]
E2 = J$[1,5];S2[3] = 0 \ Gosub L_3800 \ H$[1,12] = P$[140,151]
E2 = J$[10,14] \ Gosub L_3800
WRK$ = "THERE MAY BE A LOOP WITH " + H$[1,12] + " & " + P$[140,151] + " INVOLVED."
!Print #StatChan;WRK$
Wrk$=Wrk$+" THE LEVEL IS >50. PLEASE CHECK/FIX IT, AND RERUN THIS PROGRAM"
Gosub L_6000
L_5160: ! Print "PRESS <RETURN> TO EXIT   ";
goto OutEnd
! Input ""A1$ \ Goto L_8000
L_5200: Rem CHECK FOR SOME KIND OF PRODUCT ERROR
If S2[3] = 1 Or S2[1] = -2 Return 
M9 = J$[1,5] \ If M9 <= 0 Let H$ = " ",H$ \ Goto L_5225
Mat Read #3,M9,0;H$;
If P$[140,145] = "     " Or N1$[13,17] = "     " Goto L_5300
L_5225: If N1$[13,24] <> P$[140,151] Goto L_5300
If H$[140,145] = "     " Or N1$[1,5] = "     " Goto L_5350
If N1$[1,12] <> H$[140,151] Goto L_5350
If H$[139,139] <> "M" Goto L_5400
L_5240: For X1 = 0 To 7
  If PFU1[X1] = 0 Goto L_5260
  If S2[0] = PFU1[X1] Goto L_5280
L_5260: Next X1
Goto L_5450
L_5280: Return 
L_5300: Rem
WRK$ = "IN BOM FOR " + H$[140,151] + " SHOWS USING " + N1$[13,24]
WRK$ = WRK$ + " ON LINE " + J$[7,9] + " WHICH DISAGREES "
! Print #StatChan;WRK$
!WRK$ = WRK$ + "WITH THE INVENTORY FILE."
Wrk$=Wrk$+" WITH THE INVENTORY FILE. PLEASE CHECK/FIX THE PROBLEM AND RERUN THIS PROGRAM"
Gosub L_6000
Goto L_5160
L_5350: Rem
WRK$ = "THERE IS A BOM FOR " + N1$[1,12] + " THAT HAS NO PRODUCT CODE ON FILE."
!Print @0,20;'CE RB';WRK$
Wrk$=Wrk$+" PLEASE CHECK/FIX THE PROBLEM AND RERUN THIS PROGRAM"
Gosub L_6000
Goto L_5160
L_5400: Rem
WRK$ = "THERE IS A BOM FOR " + N1$[1,12] + ". THIS IS A BUY ITEM"
!Print @0,20;'CE RB';WRK$
!Print ""
Wrk$=Wrk$+" PLEASE FIX THIS PROBLEM AND RERUN THIS PROGRAM"
Gosub L_6000
Goto L_5160
L_5450: Rem BAD U/M
WRK$ = " THE UNIT OF MEASURE ON BOM FOR " + N1$[13,24] + " IS INVALID"
!Print @0,20;'CE RB';WRK$
WRK$ = WRK$ + " SWITCHING U/M TO PRODUCTION U/M ON FILE"
!Print " SWITCHING U/M TO PRODUCTION U/M ON FILE"
Gosub L_6000
If S2[0] = PFU1[0] Goto L_5500
If S2[0] = PFU1[13] Let S2[0] = PFU1[0]
If S2[0] <> PFU1[13] And S2[0] <> PFU1[0] Let S2[0] = PFU1[13]
Write #6,S4,48;S2;
Goto L_5240
L_5500: Rem
WRK$ = " BASE U/M IS BAD. PLEASE CHECK/FIX AND RERUN THIS PROGRAM"
! Print WRK$
Gosub L_6000
Goto L_5160
L_5550: Rem CODED MAKE / NO BOM
If Not(ADVIS) Return 
WRK$ = "PRODUCT " + P1$[140,151] + " IS CODED ''MAKE'' AND THERE IS NO BOM"
! Print @0,20;'CE';WRK$
If ADVIS = 99 Let WRK$ = WRK$ + " CHANGED TO BUY"
Wrk$=Wrk$+" ADVISORY ONLY "
Gosub L_6000
If ADVIS = 99 Gosub L_5600
Return 
L_5600: Rem CLEAR MAKE
B$ = " ",B$;B$[2,2] = P1$[139,139];B$[3] = P1$[140,151]
Search #3,5,2;B$,R9,E \ If E > 1 Gosub ERR_SEARCH
P1$[139,139] = "B"
B$[2,2] = P1$[139,139]
Search #3,4,2;B$,C2,E \ If E > 1 Gosub ERR_SEARCH
Mat Write #3,C2,0;P1$;
Return 
L_6000: Rem WRITE TO WORKFILE
!If WRK$[Len(WRK$)] >= " " Let WRK$[Len(WRK$) + 1] = "\15\"
!If WRK$[Len(WRK$)] = "" Let WRK$[Len(WRK$)] = "\15\"
Print #Statchan;WRK$
Clear Wrk$
Return 
L_8000: Rem NEW PRINT ALSO
goto L_8800 ! already printed to a file!

L_8800: Rem IN CASE SCREEN RUN
!If STATUS = 2 Input @0,23;"\15\PRESS <CR> TO EXIT "J$
L_8900: Rem CLEAN UP
If Err 0 Rem
Close #0
Close #Statchan
If Err 0 Gosub ERR_TRAP
!Kill WRKFLE$
goto OutEnd
OutErr: ! something entered wrong
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
End 
OUTEND: Rem EXIT
End
!Print 'CS'
Close 
!Chain "MX000"
End 
ERR_SEARCH: Rem                                            
ENUM = E;ELINE = Spc(16);CTERR = 0                         
If E = 5 Let CTERR = Err(8)                                
e$ = "RETURN STATUS",(E + (CTERR * .001))                  
e$ = e$,"/ STATEMENT",ELINE," IN PROGRAM " + Msc$(4)       
Error 11000
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End