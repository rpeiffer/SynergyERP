! >>> Program 428
!
! description Salesman Vendor
!
! loadsave -w -n 100,10 -o prog/dxport/428.dl4 src/428.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: Feb 10, 2009  14:26:49
Rem /w/papermaster/r2005//usr/acct/wmb/work/devl/mx/mx428.src (univ2) [wmb] {58973}
Rem  Copyright (c) 2009 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX428 - PHILLIPS CUSTOM SLSM/VENDOR REPORT
Rem AUTHOR: PHILLIPS CCT 73259   FEB 16, 1995
Rem LAST UPDATE: WMB 230789 - 2/10/09
!
Declare Intrinsic Sub InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
!
Dim SL_S1$[30],VNM$[30],PF_A$[156],W1$[32]
Dim 1%,H4[2],L3[3],S2[1],PFU1[20],W1[2],OT19Part
Dim 2%,H0[11],L4[3],B[24],W2[9]
Dim 3%,R[40],T2[25],TOT[5],L5[3],S3[17],A[33],A1[7],PFU2[6]
Dim 3%,W3[24],TOTAL[999,4],OREF[5],4%,D3[1]
Dim 1%,J8,J9,V9,E,YR,YEAR_,MTH,MONTH_,WHSE,PSLSMN,PART,MONTHTEST
Dim 2%,VENDOR,SLSM,BSLSM,BVEND,J0,H5[16]
Dim 2%,ARDATE,1%,ARMONTH,ARYEAR
Dim 3%,PRCT,R9,PCTR,4%,J1
Dim J$[75],J1$[75],J2$[20],J3$[40],J4$[75],J5$[75],J8$[8],J0$[16]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
Dim K1$[50],K2$[20],K3$[20],X$[10],T9$[26],P9$[50],P60$[50]
Dim K4$[40],K5$[40],K7$[40],K8$[30]
Dim COMPANYNAME$[30]
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
Def FND(X) = Sgn(X) * (Int(Abs(X) * 10 + .5) * .1)
Def FNI(X) = Sgn(X) * (Int(Abs(X) * 1 + .5) / 1)
DEF FNC(H)=FNR(H-(H*D3[0]))
For J = 2 To 9
  Read J1
  If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1136","1168","1184","2400","1792","1744","1824","-1"
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,0,108;ARDATE;
Mat Read #1,0,120;ARMONTH;
ARYEAR = Int(ARDATE / 10000)
Read #1,3;COMPANYNAME$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 60 \ If J8 Let J9 = 20;SCRPRT = 99
!!!! dx add xport reporting code
Dim tmp$[500],tmp1$[300],tmp2$[50]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"428",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!!!  dx add xport reporting code
Call dxget("year_",tmp$) \ if tmp$="" let YEAR_=ARYEAR else YEAR_=tmp$ ! calendar year
Call dxget("month_",tmp$) \ if tmp$="" let MONTH_=ARMONTH else MONTH_=tmp$ ! calendar month
!!!  dx end
!
if YEAR_<0 or YEAR_>99 let e$="Invalid year entered, must be the last two digits of the year (YY)!" \ error 10000
!
If MONTH_ < 1 Or MONTH_ > 12 Or Fra(MONTH_) let e$="Invalid month entered, must be between 1 and 12!" \ error 10000
!
J1 = 90 \ V9 = 0
!
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 

! - L_900: Rem GET RANGES
! - Print @0,0;'CS';"-mx428-";@30,0;"SALESMAN VENDOR REPORT";
! - Print @0,5;" 1> CALENDAR YEAR  (YY): ";
! - YEAR_ = ARYEAR
! - MONTH_ = ARMONTH
! - Print @25,5;YEAR_;
! - Print @0,7;" 2> CALENDAR MONTH (MM): ";
! - Print @25,7;MONTH_;
! - Goto STD_FINALQ
! - GET_YEAR: Rem   ENTER CALENDAR YEAR, (YY): ";'CE';
! - J0$ = "3000 226 5E" \ J1 = ARYEAR
! - If K1$ = "R" Or FLD = 1 Let J5$ = "Enter the last two digits of the year (YY)"
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Call "Input",J1,J$,J0$,J1$,J4$,J5$
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - If J4$ = "E" Goto OUTEND
! - YEAR_ = J1
! - Return 
! - GET_MONTH: Rem  ENTER MONTH TO RUN FOR, (MM): ";'CE';
! - Print @0,21;'CL';
! - J0$ = "3000 226 7E" \ J1 = ARMONTH
! - If K1$ = "R" Or FLD = 2 Let J5$ = "Enter the month (1-12) (MM)"
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTDIS.hsf\177\";
! - Call "Input",J1,J$,J0$,J1$,J4$,J5$
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
! - MONTH_ = J1
! - If MONTH_ < 1 Or MONTH_ > 12 Or Fra(MONTH_) Goto L_980
! - Goto L_990
! - L_980: Print @0,21;"INVALID MONTH ! ";'CE'; \ Signal 3,15 \ Goto GET_MONTH
! - L_990: If V9 If Not(J8) Print #0;"\14\";
! - Return 
! - STD_FINALQ: Rem
! - J1 = 90 \ V9 = 0
! - Print @10,23;"Enter #:field to edit  R: reselect all  P: print  E: exit  ";
! - Input "";K1$
! - Call String(1,K1$)
! - If K1$ = "E" Goto OUTEND
! - If K1$ = "R"
! -   Gosub GET_YEAR
! -   Gosub GET_MONTH
! -   Goto STD_FINALQ
! - End If 
! - If K1$ = "P" Goto START_SORT
! - FLD = K1$
! - If FLD = 1 Gosub GET_YEAR \ Goto STD_FINALQ
! - If FLD = 2 Gosub GET_MONTH \ Goto STD_FINALQ
! - Goto STD_FINALQ
!
! *** Sort Section
START_SORT: 
! - Print @0,22;" Sorting, Please wait...  ";'CE' \ Signal 3,0
J4$ = " ",J4$;K1$ = " ",K1$
L_1120: Search #9,3,1;J4$,R9,E
If E = 2 Goto L_1200
Search #9,5,1;J4$,R9,E
If E Let e$ = "syserrorfile 428 sortfile mode (m)=5 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1120
!
L_1200: Rem THRU HEADER
Search #2,3,1;K1$,R[2],E
If E Goto L_1800
Gosub L_6000
Rem {begin srcdevl/inc/rtn.sortmsg.i}
PCTR = PCTR + 1
! - If Not(Fra(PCTR / 500)) Print Using "#######";@25,22;PCTR;" Records Processed";
Rem {end rtn.sortmsg.i}
X$ = T2[25] Using "&&&&&&&&"
YR = X$[1,2];MTH = X$[7,8];SLSM = 0;VENDOR = 0
LET MONTHTEST=X$[3,4]
!! TEST IF WE HAVE A YEAR SPANNING PROBLEM
IF MTH=12 AND MONTHTEST<>MTH
  IF MTH=12 AND MONTHTEST=1
    LET YR=YR-1
    IF YR<0 LET YR=99
  ENDIF 
ENDIF
If YR <> YEAR_ Goto L_1200
If MTH > MONTH_ Goto L_1200

If H5[7]=19 And OT19Part Goto L_1200: ! "DO NOT INCLUDE PARTIALS OF OT19
K4$ = " ",K4$;K4$[1,10] = K1$[3,12]
L_1250: Search #4,3,1;K4$,R[4],E 
If E = 2 Goto L_1200
If K4$[1,10] <> K1$[3,12] Goto L_1200
Gosub L_6100
If P9$[21,21] = "Y" Let SLSM = L4[1] Else Let SLSM = H0[11]
If SLSM = 0 Let SLSM = H0[11]
If S2[0] = 3 Goto L_1250
If K4$[11,13] = "   " Goto L_1250
If L3[0] = 1 Let VENDOR = S3[14] \ Goto L_1320
If L4[0] Let R[6] = L4[0] \ Gosub L_6200
WHSE = 1
Gosub L_6300
VENDOR = W2[3] \ If Not(VENDOR) Let VENDOR = B[24]
L_1320: If VENDOR = 0 Let VENDOR = 999999
If SLSM = 0 Let SLSM = 999
J4$ = " ",J4$;J4$[1,1] = " ";J4$[2,4] = SLSM Using "###"
J4$[5,10] = VENDOR Using "######"
J4$[11] = R[2] Using "#######";J4$[18] = K4$
Search #9,4,1;J4$,R[4],E
If E Let e$ = "syserrorfile 428 sortfile mode (m)=4 keyno (k)=1 r=",R[4]," e=",e," keyval (k$)=",J4$ \error 10000
J4$ = " ",J4$;J4$[1,1] = "V";J4$[2,7] = VENDOR Using "######"
J4$[11] = R[2] Using "#######";J4$[18] = K4$
Search #9,4,1;J4$,R[4],E 
If E Let e$ = "syserrorfile 428 sortfile mode (m)=4 keyno (k)=1 r=",R[4]," e=",e," keyval (k$)=",J4$ \error 10000
LET D3[0]=0 \ LET D3[1]=0
IF T2[1] LET D3[1]=T2[3]/T2[1]
IF D3[1]<-1 OR D3[1]>1 LET D3[1]=0
LET D3[0]=D3[1]
! ADD FOR GRAND TOTALS / SLSM TOTALS
If H0[0] = 31 Let L5[3] = 0 - L5[3];S3[12] = 0 - S3[12]
TOTAL[0,1] = TOTAL[0,1] + fnc(L5[3])
TOTAL[0,2] = TOTAL[0,2] + S3[12]
TOTAL[SLSM,1] = TOTAL[SLSM,1] + FNC(L5[3])
TOTAL[SLSM,2] = TOTAL[SLSM,2] + S3[12]
If MTH <> MONTH_ Goto L_1480
TOTAL[0,3] = TOTAL[0,3] + FNC(L5[3])
TOTAL[0,4] = TOTAL[0,4] + S3[12]
TOTAL[SLSM,3] = TOTAL[SLSM,3] + FNC(L5[3])
TOTAL[SLSM,4] = TOTAL[SLSM,4] + S3[12]
L_1480: Rem.
Goto L_1250
!
! *** Process Section
L_1800: Rem PRE
!
! *** Process Section
if j8 ! dx xml headings
  tmp$="SALESMAN",fdel$,"SALESMAN NAME",fdel$
  tmp$=tmp$,"VENDOR",fdel$,"VENDOR NAME",fdel$
  tmp$=tmp$,"YTD SALES",fdel$,"YTD %SLS",fdel$
  tmp$=tmp$,"YTD COST",fdel$,"YTD GR PFT",fdel$
  tmp$=tmp$,"YTD %PFT",fdel$,"CURR SALES",fdel$
  tmp$=tmp$,"CURR %SLS",fdel$,"CURR COST",fdel$
  tmp$=tmp$,"CURR GR PFT",fdel$,"CURR %PFT",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
K1$ = " ",K1$;K3$ = ""
BSLSM = 0;BVEND = 0;PCTR = 0
! - Print @0,22;"Printing, Please wait...  ";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
PART = 1;PSLSMN = 9
L_2000: Search #9,3,1;K1$,R[4],E
If E Goto L_9100
Rem {begin srcdevl/inc/rtn.printmsg.i}
! - If Not(SCRPRT)
! -   PCTR = PCTR + 1
! -   If Not(Fra(PCTR / 500))
! -     Print Using "#######";@25,22;PCTR;" Records Printed";
! -     Print Using "   Page ####";V9[0];
! -   End If 
! - End If 
Rem {end rtn.printmsg.i}
If PART = 1 If K1$[1,1] <> " " Goto L_2500
If PART = 2 If K1$[1,1] <> "V" Goto L_2000
If PART = 1
  If BSLSM = 0 Let BSLSM = K1$[2,4]
  If BVEND = 0 Let BVEND = K1$[5,10]
  X2 = K1$[5,10] \ If X2 <> BVEND Gosub L_2150
  X2 = K1$[2,4] \ If X2 <> BSLSM Gosub L_4500
  BSLSM = K1$[2,4];BVEND = K1$[5,10]
End If 
If PART = 2
  If BVEND = 0 Let BVEND = K1$[2,7]
  X2 = K1$[2,7] \ If X2 <> BVEND Gosub L_2150
  BVEND = K1$[2,7]
End If 
Gosub L_6100
R[2] = K1$[11,17] \ Gosub L_6000
X$ = T2[25] Using "&&&&&&&&"
YR = X$[1,2];MTH = X$[7,8]
!If H0[0] = 31 Let L5[3] = 0 - L5[3];S3[12] = 0 - S3[12]
!TOT[1] = TOT[1] + L5[3];TOT[2] = TOT[2] + S3[12]
!If MTH = MONTH_ Let TOT[3] = TOT[3] + L5[3];TOT[4] = TOT[4] + S3[12]
LET MONTHTEST=X$[3,4]
!! TEST IF WE HAVE A YEAR SPANNING PROBLEM
IF MTH=12 AND MONTHTEST<>MTH
  IF MTH=12 AND MONTHTEST=1
    LET YR=YR-1
    IF YR<0 LET YR=99
  ENDIF 
ENDIF 
LET D3[0]=0 \ LET D3[1]=0
IF T2[1] LET D3[1]=T2[3]/T2[1]
IF D3[1]<-1 OR D3[1]>1 LET D3[1]=0
LET D3[0]=D3[1]
IF H0[0]=31 LET L5[3]=0-L5[3];S3[12]=0-S3[12]
LET TOT[1]=TOT[1]+FNC(L5[3]);TOT[2]=TOT[2]+S3[12] ! "ytd $ & cost 
IF MTH=MONTH_ LET TOT[3]=TOT[3]+FNC(L5[3]);TOT[4]=TOT[4]+S3[12]
Goto L_2000
!
L_2150: Rem PRINT DETAIL LINE
Gosub L_5800
Gosub L_5000
Gosub L_2200
! - Signal 2,J0,A,B \ If J0 <> -1 Gosub L_9615
Return 
!
L_2200: Rem TOTALS CALC
Return 
T9[3] = T9[3] + TOT[1]
T9[5] = T9[5] + TOT[2]
T9[6] = T9[6] + TOT
T9[7] = T9[7] + PRCT
T9[8] = T9[8] + TOT[3]
T9[10] = T9[10] + TOT[4]
T9[11] = T9[11] + TOT
T9[12] = T9[12] + PRCT
Return 
!
L_2500: Rem DONE
Gosub L_5000
Gosub L_4500
J1 = 90
K1$ = " ",K1$
BVEND = 0;BSLSM = 0;PSLSMN = 0
K1$[1,1] = "V"
PART = 2
Goto L_2000
!
L_4000: Rem TOTAL PRINT
if J8 return ! dx xml
!
Gosub L_5800
Print #0;"\15\** TOTALS **";
Print #0; Using "--------#"; Tab 47;FNI(TOTAL[0,1]);
Print #0; Using "--------#"; Tab 64;FNI(TOTAL[0,2]);
TOT = TOTAL[0,1] - TOTAL[0,2]
Print #0; Using "--------#"; Tab 74;FNI(TOT);
PRCT = 0 \ If TOTAL[0,1] Let PRCT = FND(TOT * 100 / TOTAL[0,1])
Print #0; Using "---#.#"; Tab 84;PRCT;
Print #0; Using "-------#"; Tab 91;FNI(TOTAL[0,3]);
Print #0; Using "-------#"; Tab 107;FNI(TOTAL[0,4]);
TOT = TOTAL[0,3] - TOTAL[0,4]
Print #0; Using "-------#"; Tab 116;FNI(TOT);
PRCT = 0 \ If TOTAL[0,3] Let PRCT = FND(TOT * 100 / TOTAL[0,3])
Print #0; Using "---#.#"; Tab 125;PRCT;
Return 
!
L_4500: Rem SLSM SUB TOTAL
if J8 return ! dx xml
!
Print #0; Using "###"; Tab 1;BSLSM;" TOTALS";
Print #0; Using "--------#"; Tab 47;FNI(TOTAL[BSLSM,1]);
PRCT = 0 \ If TOTAL[0,1] Let PRCT = FND(TOTAL[BSLSM,1] * 100 / TOTAL[0,1])
Print #0; Using "---#.#"; Tab 57;PRCT;
Print #0; Using "--------#"; Tab 64;FNI(TOTAL[BSLSM,2]);
TOT = TOTAL[BSLSM,1] - TOTAL[BSLSM,2]
Print #0; Using "--------#"; Tab 74;FNI(TOT);
PRCT = 0 \ If TOTAL[BSLSM,1] Let PRCT = FND(TOT * 100 / TOTAL[BSLSM,1])
Print #0; Using "---#.#"; Tab 84;PRCT;
Print #0; Using "-------#"; Tab 91;FNI(TOTAL[BSLSM,3]);
PRCT = 0 \ If TOTAL[0,3] Let PRCT = FND(TOTAL[BSLSM,3] * 100 / TOTAL[0,3])
Print #0; Using "---#.#"; Tab 100;PRCT;
Print #0; Using "-------#"; Tab 107;FNI(TOTAL[BSLSM,4]);
TOT = TOTAL[BSLSM,3] - TOTAL[BSLSM,4]
Print #0; Using "-------#"; Tab 116;FNI(TOT);
PRCT = 0 \ If TOTAL[BSLSM,3] Let PRCT = FND(TOT * 100 / TOTAL[BSLSM,3])
Print #0; Using "---#.#"; Tab 125;PRCT;
J1 = 90
PSLSMN = 9
Return 
!
L_5000: Rem PRINT LINE - FOR VENDOR TOTALS BSLSM=0 SO PULLS GRAND TOTALS
!
if J8 ! dx mxl
  X2 = BSLSM \ Gosub L_6500 ! get salesman
  VENDOR = BVEND \ Gosub L_6400 ! get vendor
  !
  tmp$=BSLSM Using "###",fdel$,rtrim$(SL_S1$[1,30]),fdel$
  tmp$=tmp$,VENDOR Using "######",fdel$,rtrim$(VNM$[1,30]),fdel$
  tmp$=tmp$,FNI(TOT[1]) Using "--------#",fdel$
  If TOTAL[BSLSM,1] Let PRCT = FND(TOT[1] * 100 / TOTAL[BSLSM,1]) else PRCT = 0
  tmp$=tmp$,PRCT Using "---#.#",fdel$
  tmp$=tmp$,FNI(TOT[2]) Using "--------",fdel$
  TOT = TOT[1] - TOT[2]
  tmp$=tmp$,FNI(TOT) Using "--------#",fdel$
  If TOT[1] Let PRCT = FND(TOT * 100 / TOT[1]) else PRCT = 0 
  tmp$=tmp$,PRCT Using "---#.#",fdel$
  If TOT[3] = 0 And TOT[4] = 0 ! no current activity
    tmp$=tmp$,"",fdel$,"",fdel$,"",fdel$,"",fdel$,"",fdel$
  else
    tmp$=tmp$,FNI(TOT[3]) Using "-------#",fdel$
    If TOTAL[BSLSM,3] Let PRCT = FND(TOT[3] * 100 / TOTAL[BSLSM,3]) else PRCT = 0
    tmp$=tmp$,PRCT Using "---#.#",fdel$
    tmp$=tmp$,FNI(TOT[4]) Using "-------#",fdel$
    TOT = TOT[3] - TOT[4]
    tmp$=tmp$,FNI(TOT) Using "-------#",fdel$
    If TOT[3] Let PRCT = FND(TOT * 100 / TOT[3]) else PRCT = 0
    tmp$=tmp$,PRCT Using "---#.#",fdel$
  endif
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  goto PrintDetailExit
endif  
!
If Not(PSLSMN) Goto L_5040
X2 = BSLSM \ Gosub L_6500
Print #0; Using "###"; Tab 1;BSLSM;" ";SL_S1$[1,14];
L_5040: VENDOR = BVEND \ Gosub L_6400
Print #0; Using "######"; Tab 19;VENDOR;" ";VNM$[1,21];
Print #0; Using "--------#"; Tab 47;FNI(TOT[1]);
PRCT = 0 \ If TOTAL[BSLSM,1] Let PRCT = FND(TOT[1] * 100 / TOTAL[BSLSM,1])
Print #0; Using "---#.#"; Tab 57;PRCT;
Print #0; Using "--------#"; Tab 64;FNI(TOT[2]);
TOT = TOT[1] - TOT[2]
Print #0; Using "--------#"; Tab 74;FNI(TOT);
PRCT = 0 \ If TOT[1] Let PRCT = FND(TOT * 100 / TOT[1])
Print #0; Using "---#.#"; Tab 84;PRCT;
If TOT[3] = 0 And TOT[4] = 0 Goto L_5230
Print #0; Using "-------#"; Tab 91;FNI(TOT[3]);
PRCT = 0 \ If TOTAL[BSLSM,3] Let PRCT = FND(TOT[3] * 100 / TOTAL[BSLSM,3])
Print #0; Using "---#.#"; Tab 100;PRCT;
Print #0; Using "-------#"; Tab 107;FNI(TOT[4]);
TOT = TOT[3] - TOT[4]
Print #0; Using "-------#"; Tab 116;FNI(TOT);
PRCT = 0 \ If TOT[3] Let PRCT = FND(TOT * 100 / TOT[3])
Print #0; Using "---#.#"; Tab 125;PRCT;
!Print #0;"\15\";
L_5230: Rem.
Print #0;""
!
PrintDetailExit:
For I = 0 To 5
  TOT[I] = 0
Next I
PSLSMN = 0
Return 
!
L_5800: Rem HEADINGS ROUTINE
if J8 return ! dx xml
!
J1 = J1 + 1 \ If J1 < J9 Return 
! - If V9 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9 If Not(J8) Print #0;"\14\";
V9 = V9 + 1 \ J1 = 7
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab 54;COMPANYNAME$; Tab 120;"PAGE";V9
Print #0;" -mx428- ";T9$;
Print #0; Tab 58;"SALESMAN VENDOR REPORT"
Print #0;"\15\";
Print #0; Using "&&"; Tab 5;"RUN FOR: ";MONTH_;"/";YEAR_;
Print #0; Tab 49;"-------- Y E A R   T O   D A T E --------";
Print #0; Tab 94;"----------- C U R R E N T -----------"
Print #0; Tab 1;"SALESMAN";
Print #0; Tab 19;"VENDOR";
Print #0; Tab 51;"SALES";
Print #0; Tab 59;"%SLS";
Print #0; Tab 69;"COST";
Print #0; Tab 77;"GR PFT";
Print #0; Tab 86;"%PFT";
Print #0; Tab 94;"SALES";
Print #0; Tab 102;"%SLS";
Print #0; Tab 111;"COST";
Print #0; Tab 118;"GR PFT";
Print #0; Tab 127;"%PFT";
Print #0;" "
If PART = 1 Let PSLSMN = 9
Print #0;"\15\";
If PART = 2 Print #0; Tab 1;"COMPANY TOTALS";
If V9 = 1 If Not(J8) Let J1 = J1 + 2
Return 
!
L_6000: Rem READ HEADER
Mat Read #2,R[2],0;H0;
Mat Read #2,R[2],78;H4;
MAT  READ #2,R[2],104;H5;
mat  read #2,R[2],508;OT19Part;
Mat Read #2,R[2],512;OREF;
R[3] = OREF[5]
Mat Read #3,R[3],8;T2;
Return 
!
L_6100: Rem READ LINE
Mat Read #4,R[4],8;L3;
Mat Read #4,R[4],16;L4;
Mat Read #4,R[4],32;L5;
Mat Read #4,R[4],256;S2;
Mat Read #4,R[4],260;S3;
Return 
!
L_6200: Rem READ PROD FILE
Mat Read #6,R[6],0;PF_A$;
Mat Read #6,R[6],156;B;
Mat Read #6,R[6],256;A;
Mat Read #6,R[6],460;A1;
Mat Read #6,R[6],512;PFU1;
Mat Read #6,R[6],554;PFU2;
Return 
!
L_6300: Rem READ PRODWHSE
K7$ = " ",K7$;K7$ = PF_A$[140,151];K7$[13] = WHSE Using "##"
Search #7,2,1;K7$,R[7],E 
If E = 1 Goto L_6380
Mat Read #7,R[7],0;W1$;
Mat Read #7,R[7],32;W1;
Mat Read #7,R[7],38;W2;
Mat Read #7,R[7],78;W3;
Goto L_6390
L_6380: W2[3] = 0
L_6390: Return 
!
L_6400: Rem GET VENDOR NAME
K5$ = " ",K5$;K5$ = VENDOR Using "######"
Search #5,2,1;K5$,R[5],E 
If E = 1 Goto L_6470
Mat Read #5,R[5],0;VNM$;
Return 
L_6470: Rem NG
VNM$ = " ",VNM$
VNM$ = "VENDOR NOT ON FILE"
Return 
!
L_6500: Rem SALESMAN NAME
K8$ = " ",K8$;K8$ = X2 Using "###"
Search #8,2,1;K8$,R[8],E
If E = 1 Goto L_6560
Mat Read #8,R[8],0;SL_S1$;
Return 
L_6560: Rem NO GOOD
SL_S1$ = " ",SL_S1$
SL_S1$ = "SLSM NOT FOUND!"
Return 
!
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
OUTEND: Rem EXIT
! dx close
If J8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !!!!!!print rstr$
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!
! - Print 'CS'
! - Chain "MX000C"
! - Close 
! - Chain "MX000"
!
L_9100: Rem END
Gosub L_5000
Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO EXIT ";'CL'; \ Input ""J$
For K = 0 To 20
  T9[K] = 0
Next K
Goto OUTEND
! - Goto L_900
!
! - L_9905: Print @0,Msc(34);'CL RB';"RECORD LOCKED ERROR. Enter  R: retry,  E: exit  ";
! - Input ""X$ \ Print @0,Msc(34);'CL';
! - If X$ = "R" Return -1
! - If X$ <> "E" Goto L_9905
! - Goto OUTEND
! - End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
