! >>> Program 103c
!
! description Customer Call List
!
! loadsave -w -n 100,10 -o prog/dxport/103c.dl4 src/103c.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: SEP 16, 2003  16:04:15
Rem /w/papermaster/r2002//usr/acct/zyc/work/devl/mx1/mx103c.src (univ2) [zyc] {63830}
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE! ****
Rem
Rem **********************************************************
Rem *-
Rem *- Universal Business Systems
!
External Lib "libinputs.lib"
Declare External Sub SelectSalesReps,SelectZones
!
Declare Intrinsic Sub InpBuf,JulianToDate,MiscStr,String,Time,DateToJulian
!
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!
Dim tmp$[1500],tmp1$[500],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim SelSalesmen$[600],SelZones$[200],BegZone$[2],EndZone$[2]
dim Blank$[50] \ Blank$=" ",Blank$
dim 3%,tmp3
!
Dim TITLE$[60],SYSDATE$[22],COMP$[30],SORT$[1],KEY_$[50],SORTKEY$[50]
Dim P61$[256],DISPDATE$[8],ZONES$[50],CHECKZONE$[2],CUSTKEY$[6],A2$[30]
Dim R$[33],T2$[7],CSZ$[14],SHIPLISTKEY$[14],A1$[142],A$[142],CURRZONE$[2]
Dim PRTLINE$[132],PHONESTR$[14],p9$[50]
Dim 1%,RETVAL,SALESREPTYPE,SALESREPS[19],CHECKREP,ZONETYPE,ZONEBREAK
Dim 1%,RANGEIDX,SCRNPRT,MAXLINE,DAYOFWEEK,CURRSALESREP
Dim 1%,CH_CUST,CH_SLSMN,CH_ZONE,CH_CSZONE,CH_SHIPLIST
Dim 2%,PAGENO,LINENO,SHIPDATE,R[99],COID,SUBROUTINE
Dim 2%,C1[12],CUSTSEC[1]
Dim 4%,SHIPLISTNO
Dim 4%,J1
Dim J$[75],J0$[12],J1$[75],J4$[75],J5$[75]
! - Window On 
Mat Read #1,19,50;P9$;
Mat Read #1,61,0;P61$;
Read #1,3,0;COMP$; \ COMP$=rtrim$(COMP$)
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
If Err 0 Gosub ERR_TRAP
SCRNPRT=J8
!
SHIPDATE = Tim(6) + 1
If SHIPDATE Mod 7 = 6 Let SHIPDATE = SHIPDATE + 2
If SHIPDATE Mod 7 = 0 Let SHIPDATE = SHIPDATE + 1
Mat SALESREPS = Zer \ SALESREPS[0] = 0 
MaxReps=19 ! max # of sales reps selected
MaxZones=25 ! max # of zones selected
!
!
! - Gosub OPENFILES
! - Gosub DISPLAYPROMPTS
! - Gosub GETPARAMETERS \ If Not(RETVAL) Goto OUTEND
!
! dx add xport reporting code
DXSetup:
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
Gosub OPENFILES
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"103c",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("shipdate",tmp1$) ! ship date
call dxget("begslsm",tmp$) \ SalesReps[0]=tmp$ ! starting salesman
call dxget("endslsm",tmp$) \ if tmp$="" let Salesreps[1]=999 else Salesreps[1]=tmp$ ! ending salesman
call dxget("selslsm",SelSalesmen$) ! select individual salesmen
call dxget("begzone",tmp$) \ BegZone$=tmp$ ! starting zone
call dxget("endzone",tmp$) \ if tmp$="" let EndZone$="~~" else EndZone$=tmp$ ! ending zone
call dxget("selzones",SelZones$) ! select individual zones
call dxget("sort",tmp$) \ SORT$=tmp$ ! sort by  S=salesman  Z=zone
call dxget("pagebreak",tmp$) \ if tmp$="" let ZONEBREAK=0 else ZONEBREAK=1
!  dx end
!
! ship date
if tmp1$ ! date entered
  J$=tmp1$[5,6],tmp1$[1,4] ! mmddyy to yymmdd
  call DateToJulian(1,J$)
  SHIPDATE=J$ ! julian (ddddd)
  if SHIPDATE=0 let e$="Invalid ship date entered!" \ error 10000
else
  SHIPDATE = Tim(6) + 1
  If SHIPDATE Mod 7 = 6 Let SHIPDATE = SHIPDATE + 2
  If SHIPDATE Mod 7 = 0 Let SHIPDATE = SHIPDATE + 1
endif
DAYOFWEEK = SHIPDATE Mod 7
DISPDATE$ = SHIPDATE Using "&&&&&"
Call JulianToDate(1,DISPDATE$)
!
! starting, ending or individual salesman
if SelSalesmen$ ! individual salesman selected
  call SelectSalesReps(e$,CH_SLSMN,SelSalesmen$,SalesReps[],MaxReps)
  if e$ error 10000 ! invalid saleman
  SalesRepType=2 ! list
else ! starting & ending salesman
  SalesRepType=1
  if SalesReps[0]=0 if SalesReps[1]=999 let SalesRepType=0
  if SalesReps[0]<0 or SalesReps>999 let e$="Invalid starting salesman, must be between 0 and 999!" \ error 10000
  if SalesReps[1]<SalesReps[0] or SalesReps[1]>999 let e$="Invalid ending salesman, must be between starting salesman and 999!" \ error 10000
endif
!
! starting, ending or individual zones
if SelZones$ ! individual zones selected
  call SelectZones(e$,CH_ZONE,SelZones$,Zones$,MaxZones)
  if e$ error 10000 ! invalid zone
  ZoneType=2 ! list
else ! starting & ending zone
  ZoneType=1
  if BegZone$="" if EndZone$="~~" let ZoneType=0 
  BegZone$=BegZone$,Blank$ 
  EndZone$=EndZone$,Blank$
  if EndZone$<BegZone$ let e$="Invalid ending zone, must be > starting zone!" \ error 10000
  Zones$=BegZone$,EndZone$
endif
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If 


!
Gosub SORTDATA
Gosub PRINTREPORT
!
OUTEND: Rem
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
! - Escclr 
! - Gosub CLOSEFILES
! - Chain "mx000c"
! - End 
!
OPENFILES: Rem
! - COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For I = 2 To 6
  Read J1
  If J1 And J1 <> -1
    Read #1,88,Abs(J1);J4$[1,16];
    If J1 > 0 Open #I,J4$
    If J1 < 0 Ropen #I,J4$
  End If 
Next I
Data "-1808","-1824","-1920","-1","-2112"
If P61$[34,34] = "Y" !* customer zone flag
  J4$ = "3/CSZONE" + Str$(intCO)
  Ropen #5,J4$
End If 
CH_CUST = 2
CH_SLSMN = 3
CH_ZONE = 4
CH_CSZONE = 5
CH_SHIPLIST = 6
CH_SORT = 9
Return 
!
! - CLOSEFILES: Rem
! - If Err 0 Rem
! - For I = 2 To 6
! -   If I <> 9 Close #I
! - Next I
! - If Err 0 Gosub ERR_ESCAPE
! - Return 
!
! - DISPLAYPROMPTS: Rem
! - Call Time(SYSDATE$)
! - Print 'CS';@0,0;"-MX103C-"
! - Print @40 - (Len(COMP$) / 2),0;'BR';COMP$;'ER';
! - Print @58,0;SYSDATE$
! - Print @0,1;"----------------------------------------";
! - Print "----------------------------------------";
! - TITLE$ = "CUSTOMER CALL LIST BASED ON SHIP DATE"
! - Print @40 - (Len(TITLE$) / 2),2;TITLE$;
! - Print @0,3;"----------------------------------------";
! - Print "----------------------------------------";
! - Print @0,5;"1> SHIP DATE TO PRINT FOR.....:";
! - Print @0,6;"2> SALES REP..................:";
! - Print @0,8;"3> ZONE.......................:";
! - Print @0,10;"4> SORT BY SALES REP OR ZONE..:";
! - Print @0,11;"5> PAGE BREAKS AT ZONE........:";
! - Return 
!
! - GETPARAMETERS: Rem
! - SHIPDATE = Tim(6) + 1
! - If SHIPDATE Mod 7 = 6 Let SHIPDATE = SHIPDATE + 2
! - If SHIPDATE Mod 7 = 0 Let SHIPDATE = SHIPDATE + 1
! - DISPDATE$ = SHIPDATE Using "&&&&&"
! - Call JulianToDate(1,DISPDATE$)
! - For SUBROUTINE = 1 To 5
! -   On SUBROUTINE Gosub GETSHIPDATE,GETSALESREP,GETZONE,GETSORT,GETZONEBREAK
! - Next SUBROUTINE
! - PARAMLOOP: Rem
! - Print @0,23;'CL';"ENTER #: EDIT FIELD, P: PRINT, E: EXIT  ";
! - Input ""J$
! - Call String(1,J$)
! - If J$ = "E" Let RETVAL = 0 \ Goto ENDPARAMLOOP
! - If J$ = "P" Let RETVAL = 1 \ Goto ENDPARAMLOOP
! - SUBROUTINE = J$
! - On SUBROUTINE Gosub GETSHIPDATE,GETSALESREP,GETZONE,GETSORT,GETZONEBREAK
! - If SUBROUTINE < 0 Or SUBROUTINE > 5 Print 'RB';
! - Goto PARAMLOOP
! - ENDPARAMLOOP: Rem
! - Return 
! - GETSHIPDATE: Rem
! - J0$ = "7000063205"
! - J1 = SHIPDATE
! - J5$ = "Enter ship date to print call list for."
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - SHIPDATE = J1
! - DAYOFWEEK = SHIPDATE Mod 7
! - DISPDATE$ = SHIPDATE Using "&&&&&"
! - Call JulianToDate(1,DISPDATE$)
! - Return 
! - GETSALESREP: Rem
! - J0$ = "3000033206-"
! - Mat SALESREPS = Zer \ SALESREPS[0] = 0
! - RANGEIDX = 0
! - Print @32,6;'CL';@0,7;'CL';
! - J1 = 0
! - J5$ = "Enter sales rep to print, '-' for range, <CR> for all."
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - If J4$ = ""
! -   Print @32,6;'CL';"** ALL **";
! -   SALESREPTYPE = 0
! -   Return 
! - End If 
! - If J4$ = "-"
! -   SALESREPTYPE = 1
! -   Print @0,7;"Beginning Sales Rep: ";
! -   Print @40,7;"Ending Sales Rep: ";
! -   J0$ = "3000033206"
! -   J5$ = "Enter beginning sales rep to print."
! -   J1 = 0
! -   Call "input",J1,J$,J0$,J1$,J4$,J5$
! -   If J4$ = "" Goto GETSALESREP
! -   SALESREPS[0] = J1
! -   Print @21,7;J1 Using "###";
! -   J5$ = "Enter ending sales rep to print."
! - ENTERENDINGSALESREP: Rem
! -   J1 = 0
! -   Call "input",J1,J$,J0$,J1$,J4$,J5$
! -   If J1 < SALESREPS[0]
! -     Call "errmsg","Ending sales rep. can't be less then beginning!"
! -     Goto ENTERENDINGSALESREP
! -   End If 
! -   SALESREPS[1] = J1
! -   Print @58,7;J1 Using "###";
! -   Print @32,6;'CL';"** SEE RANGE BELOW **";
! -   Return 
! - End If 
! - SALESREPTYPE = 2
! - J0$ = "3000033206/"
! - J5$ = "Enter next sales rep to print.  Enter '/' to end entry."
! - SALESREPENTRY: Rem* keep going until end is signified...
! - CHECKREP = J1 \ Gosub VERIFYSALESREP
! - If Not(RETVAL)
! -   If Not(RANGEIDX) Goto GETSALESREP
! - Else 
! -   SALESREPS[RANGEIDX] = CHECKREP
! -   Print @(RANGEIDX * 4),7;CHECKREP Using "###";
! -   RANGEIDX = RANGEIDX + 1
! - End If 
! - GETMOREREPS: Rem
! - J1 = 0
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - If J4$ = ""
! -   Call "errmsg","Enter '/' to end list."
! -   Goto GETMOREREPS
! - End If 
! - If J4$ = "/"
! -   Print @32,6;'CL';"** SEE LIST BELOW **";
! -   Goto ENDSALESREPENTRY
! - End If 
! - Goto SALESREPENTRY
! - ENDSALESREPENTRY: Rem* keep going until end is signified...
! - Return 
! - GETZONE: Rem
! - J0$ = "2000023208"
! - Call MiscStr(1,ZONES$)
! - RANGEIDX = 0
! - Print @32,8;'CL';@0,9;'CL';
! - J1$ = ""
! - J5$ = "Enter zone to print, '-' for range, <CR> for all."
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - If J4$ = ""
! -   Print @32,8;'CL';"** ALL **";
! -   ZONETYPE = 0
! -   Return 
! - End If 
! - If J4$ = "-"
! -   ZONETYPE = 1
! -   Print @0,9;"Beginning zone: ";
! -   Print @40,9;"Ending zone: ";
! -   J0$ = "2000023208"
! -   J5$ = "Enter beginning zone to print."
! -   J1$ = ""
! -   Call "input",J1,J$,J0$,J1$,J4$,J5$
! -   If J4$ = "" Goto GETZONE
! -   ZONES$[1] = J$
! -   Print @16,9;J$;
! -   J5$ = "Enter ending zone to print."
! - ENTERENDINGZONE: Rem
! -   J1$ = ""
! -   Call "input",J1,J$,J0$,J1$,J4$,J5$
! -   If J$ < ZONES$[1]
! -     Call "errmsg","Ending zone can't be less then beginning!"
! -     Goto ENTERENDINGZONE
! -   End If 
! -   ZONES$[3] = J$
! -   Print @53,9;J$;
! -   Print @32,8;'CL';"** SEE RANGE BELOW **";
! -   Return 
! - End If 
! - ZONETYPE = 2
! - J0$ = "2000023208"
! - J5$ = "Enter next zone to print.  Enter '/' to end entry."
! - ZONEENTRY: Rem* keep going until end is signified...
! - CHECKZONE$ = J$[1,2] \ Gosub VERIFYZONE
! - If Not(RETVAL)
! -   If Not(RANGEIDX) Goto GETZONE
! - Else 
! -   ZONES$[(RANGEIDX * 2) + 1] = J$[1,2]
! -   Print @(RANGEIDX * 3),9;CHECKZONE$
! -   RANGEIDX = RANGEIDX + 1
! - End If 
! - GETMOREZONES: Rem
! - J1$ = ""
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - If J4$ = ""
! -   Call "errmsg","Enter '/' to end list."
! -   Goto GETMOREZONES
! - End If 
! - If J4$ = "/"
! -   Print @32,8;'CL';"** SEE LIST BELOW **";
! -   Goto ENDZONEENTRY
! - End If 
! - Goto ZONEENTRY
! - ENDZONEENTRY: Rem* keep going until end is signified...
! - Return 
! - GETSORT: Rem
! - J0$ = "2002013210"
! - J1$ = SORT$
! - J5$ = "Enter 'S' to sort on sales rep., or 'Z' to sort on zone."
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - If J$ <> "S" And J$ <> "Z"
! -   Call "errmsg","You must enter an 'S' or 'Z'."
! -   Goto GETSORT
! - End If 
! - SORT$ = J$
! - Return 
! - GETZONEBREAK: Rem
! - J0$ = "6000013211"
! - J1 = ZONEBREAK
! - J5$ = "Should page breaks happen for each new zone (Y/N)?"
! - Call "input",J1,J$,J0$,J1$,J4$,J5$
! - ZONEBREAK = J1
! - Return 
!
! - VERIFYSALESREP: Rem
! - RETVAL = 0
! - If (SALESREPS[19])
! -   Call "errmsg","Max # reps. entered. Can't enter another!"
! -   Return 
! - End If 
! - For I = 0 To 19
! -   If Not(SALESREPS[I])
! -     I = 19
! -     If SALESREPS[I] = CHECKREP
! -       Call "errmsg","Sales rep. already entered!"
! -       Return 
! -     End If 
! -   End If 
! - Next I
! - KEY_$ = CHECKREP Using "###"
! - Search #CH_SLSMN,2,1;KEY_$,R[CH_SLSMN],E \ If E > 1 Gosub ERR_SEARCH
! - If Not(E) Let RETVAL = 1 \ Return 
! - Call "errmsg","Sales rep. not on file!"
! - Return 
!
! - VERIFYZONE: Rem
! - RETVAL = 0
! - If (ZONES$[49] <> "")
! -   Call "errmsg","Max # zones entered. Can't enter another!"
! -   Return 
! - End If 
! - For I = 0 To 24
! -   If ZONES$[(I * 2) + 1] = ""
! -     I = 24
! -     If ZONES$[(I * 2) + 1,(I * 2) + 2] = CHECKZONE$
! -       Call "errmsg","Zone already entered!"
! -       Return 
! -     End If 
! -   End If 
! - Next I
! - KEY_$ = CHECKZONE$
! - Search #CH_ZONE,2,1;KEY_$,R[CH_ZONE],E \ If E > 1 Gosub ERR_SEARCH
! - If Not(E) Let RETVAL = 1 \ Return 
! - Call "errmsg","Zone not on file!"
! - Return 
!
SORTDATA: Rem
! - Print @0,23;'CL';"Clearing sort file...";
KEY_$ = " ",KEY_$
CLEARSORTLOOP: Rem
Search #CH_SORT,3,1;KEY_$,R[CH_SORT],E 
If E Goto ENDCLEARSORTLOOP
Search #CH_SORT,5,1;KEY_$,R[CH_SORT],E 
If E Let e$ = "syserrorfile 103c sortfile mode (m)=5 keyno (k)=1 r=",R[CH_SORT]," e=",e," keyval (k$)=",KEY_$ \ error 10000
Goto CLEARSORTLOOP
ENDCLEARSORTLOOP: Rem
! - Print @0,23;'CL';"Sorting...";
CUSTKEY$ = " ",CUSTKEY$
SORTLOOP: Rem
Search #CH_CUST,3,1;CUSTKEY$,R[CH_CUST],E
If E Goto ENDSORTLOOP
Gosub READCUSTOMER
R[CH_SHIPLIST] = 0
CUSTSEC[0] = C1[1];CUSTSEC[1] = 1
if p9$[21,21]="N"
	         call "custsec.dl4",Custsec[],ctlc,userid$,e$,rstr$
		 ELSE
			 custsec[0]=0
endif
! - Call "custsec",CUSTSEC[]
If CUSTSEC[0] = -1 Goto SORTLOOP
Gosub ISVALIDSALESREP \ If Not(RETVAL) Goto SORTLOOP
SHIPLISTNO = 0 \ Gosub DOESZONESHIP
If RETVAL
  Gosub ISVALIDZONE
  If RETVAL Gosub ADDSORTKEY
End If 
SHIPLISTKEY$ = CUSTKEY$
SHIPLISTLOOP: Rem
Search #CH_SHIPLIST,3,1;SHIPLISTKEY$,R[CH_SHIPLIST],E
If E Or SHIPLISTKEY$[1,6] <> CUSTKEY$[1,6] Goto ENDSHIPLISTLOOP
Gosub READSHIPLIST
If SHIPLISTNO = 0 Goto SHIPLISTLOOP
Gosub DOESZONESHIP
If RETVAL
  Gosub ISVALIDZONE
  If RETVAL Gosub ADDSORTKEY
End If 
Goto SHIPLISTLOOP
ENDSHIPLISTLOOP: Rem
Goto SORTLOOP
ENDSORTLOOP: Rem
! - Print @0,23;'CL';
Return 
!
ISVALIDSALESREP: Rem
RETVAL = 0
If SALESREPTYPE = 0 Let RETVAL = 1
If SALESREPTYPE = 1 And C1[2] >= SALESREPS[0] And C1[2] <= SALESREPS[1] Let RETVAL = 1
If SALESREPTYPE = 2
  For I = 0 To 19
    If Not(SALESREPS[I])
      I = 19
    Else 
      If C1[2] = SALESREPS[I] Let RETVAL = 1 \ I = 19
    End If 
  Next I
End If 
Return 
!
ISVALIDZONE: Rem
RETVAL = 0
If ZONETYPE = 0 Let RETVAL = 1
If ZONETYPE = 1 And CHECKZONE$ >= ZONES$[1,2] And CHECKZONE$ <= ZONES$[3,4] Let RETVAL = 1
If ZONETYPE = 2
  For I = 0 To 24
    If ZONES$[(I * 2) + 1] = ""
      I = 24
    Else 
      If ZONES$[(I * 2) + 1,(I * 2) + 2] = CHECKZONE$
        RETVAL = 1
        I = 24
      End If 
    End If 
  Next I
End If 
Return 
!
ADDSORTKEY: Rem
SORTKEY$ = " ",SORTKEY$
If SORT$ = "S" Let SORTKEY$[1,3] = C1[2] Using "###"
SORTKEY$[4,5] = CHECKZONE$[1,2]
If SHIPLISTNO = -1 Or R[CH_SHIPLIST] = 0 !* got info from customer record
  SORTKEY$[6,35] = A1$[31,60]
  SORTKEY$[36,42] = C1[1] Using "######","."
  R[CH_SORT] = R[CH_CUST]
Else 
  SORTKEY$[6,35] = A1$[31,60]
  SORTKEY$[36,48] = C1[1] Using "######",".",SHIPLISTNO Using "&&&&&&"
  R[CH_SORT] = R[CH_SHIPLIST]
End If 
Search #CH_SORT,4,1;SORTKEY$,R[CH_SORT],E
If E Let e$ = "syserrorfile 103c sortfile mode (m)=4 keyno (k)=1 r=",R[CH_SORT]," e=",e," keyval (k$)=",SORTKEY$ \ error 10000
Return 
!
READCUSTOMER: Rem
Mat Read #CH_CUST,R[CH_CUST],0;A1$;
Mat Read #CH_CUST,R[CH_CUST],142;C1;
Mat Read #CH_CUST,R[CH_CUST],348;A2$;
Return 
!
READSHIPLIST: Rem
Mat Read #CH_SHIPLIST,R[CH_SHIPLIST],0;A$;
Read #CH_SHIPLIST,R[CH_SHIPLIST],142;SHIPLISTNO;
Mat Read #CH_SHIPLIST,R[CH_SHIPLIST],150;R$;
SHIPLISTNO = Int(Fra(SHIPLISTNO) * 1000000)
Return 
!
DOESZONESHIP: Rem
RETVAL = 0
If P61$[34,34] = "Y" !* customer multi zone option
  KEY_$ = C1[1] Using "######",".",SHIPLISTNO Using "&&&&&&"
  Search #CH_CSZONE,2,1;KEY_$,R[CH_CSZONE],E
  If E Return 
  Mat Read #CH_CSZONE,R[CH_CSZONE],26;CSZ$;
  CHECKZONE$ = CSZ$[(DAYOFWEEK * 2) + 1,(DAYOFWEEK * 2) + 2]
  If CHECKZONE$ <> "" And CHECKZONE$ <> "  " Let RETVAL = 1
Else 
  If SHIPLISTNO = 0
    KEY_$ = C1[1] Using "######",".",SHIPLISTNO Using "&&&&&&"
    Search #CH_SHIPLIST,2,1;KEY_$,R[CH_SHIPLIST],E
    If E
      SHIPLISTNO = -1
      CHECKZONE$ = A2$[29,30]
    Else 
      Gosub READSHIPLIST
      CHECKZONE$ = R$[32,33]
    End If 
  Else 
    CHECKZONE$ = R$[32,33]
  End If 
  Search #CH_ZONE,2,1;CHECKZONE$,R[CH_ZONE],E
  If E Return 
  Mat Read #CH_ZONE,R[CH_ZONE],36;T2$;
  If T2$[DAYOFWEEK + 1,DAYOFWEEK + 1] = "Y" Let RETVAL = 1
End If 
Return 
!
PRINTREPORT: Rem
!
if J8 ! dx xml headings
  !
  tmp$="CUST #",fdel$,"SHIP #",fdel$
  tmp$=tmp$,"CONTACT INFORMATION",fdel$,"CUSTOMER NAME",fdel$
  tmp$=tmp$,"ADDRESS",fdel$,"CITY",fdel$,"ST",fdel$,"ZIP",fdel$
  if SORT$="S" let tmp$=tmp$,"SALESMAN",fdel$ ! by salesman
  tmp$=tmp$,"SHIP ZONE",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - SCRNPRT = 0
! - If Err 0 Let SCRNPRT = Spc(8)
! - I = Chf(0)
! - If Err 0 Gosub ERR_ESCAPE
PAGENO = 0
LINENO = 999
MAXLINE = 60 \ If SCRNPRT Let MAXLINE = 22
PRTLINE$ = "=",PRTLINE$
! - If Not(SCRNPRT) Print @0,23;'CL';"Printing...";
SORTKEY$ = " ",SORTKEY$
PRINTLOOP: Rem
Search #CH_SORT,3,1;SORTKEY$,R[CH_SORT],E
If E Goto ENDPRINTLOOP
If PAGENO = 0 !* first run through
  CURRZONE$ = SORTKEY$[4,5]
  If SORT$ = "S" Let CURRSALESREP = SORTKEY$[1,3]
End If 
If SORT$ = "S"
  If CURRSALESREP <> Val(SORTKEY$[1,3])
    CURRSALESREP = SORTKEY$[1,3]
    Gosub PRINTHEADING
  End If 
End If 
If CURRZONE$ <> SORTKEY$[4,5]
  CURRZONE$ = SORTKEY$[4,5]
  If ZONEBREAK Gosub PRINTHEADING
End If 
If SORTKEY$[43,48] = "      "
  R[CH_CUST] = R[CH_SORT]
  SHIPLISTNO = -1
  Gosub READCUSTOMER
  A$[1,30] = A1$[31,60]
  A$[31,60] = A1$[61,90]
  A$[61,90] = A1$[91,120]
  A$[91,105] = A1$[121,135]
  A$[106,107] = A1$[136,137]
  A$[108,117] = A2$[1,10]
  A$[118,142] = " ",A$[118,142]
  A$[118,137] = A1$[1,20]
Else 
  R[CH_SHIPLIST] = R[CH_SORT]
  Gosub READSHIPLIST
End If 
Gosub PRINTLINE
Goto PRINTLOOP
ENDPRINTLOOP: Rem
Return 
!
PRINTHEADING: Rem
if J8 return ! dx xml
If PAGENO > 0 Print #0;"\14\";
! - If SCRNPRT Print 'CS';
PAGENO = PAGENO + 1
Print #0;SYSDATE$; Tab (Int(66 - (Len(COMP$) / 2)));COMP$;
Print #0; Tab (113);"MX103C - PAGE: ";PAGENO Using "####"
Print #0;"SHIP DATE: ";DISPDATE$;
Print #0; Tab (53);"CUSTOMER CALL LIST";
If SORT$ = "S"
  Print #0; Tab (112);"SORTED BY SALES REP."
Else 
  Print #0; Tab (113);"SORTED BY SHIP ZONE"
End If 
Print #0;PRTLINE$
Print #0;"CUST #"; Tab (8);"SHIP #"; Tab (15);"CUSTOMER NAME"; Tab (46);
Print #0;"ADDRESS"; Tab (77);"CITY, ST ZIP"; Tab (109);
If SORT$ = "S" Print #0;"SALES #";
Print #0; Tab (123);"SHIP ZONE"
Print #0; Tab (8);"CONTACT INFORMATION"
Print #0;PRTLINE$
LINENO = 7
Return 
!
PRINTLINE: Rem
if J8 ! dx xml headings
  !
  tmp$=SORTKEY$[36,41],fdel$,SORTKEY$[43,48],fdel$
  !
  ! contact information
  J$ = rtrim$(A$[118,142]) ! contact
  If SHIPLISTNO = -1
    tmp1$ = rtrim$(A1$[21,30]) ! -  \ Call "trim",J$
    If tmp1$ = ""
      PHONESTR$ = ""
    Else 
      If A1$[28,30] <> "   "
        PHONESTR$ = "(",A1$[21,23],") ",A1$[24,26],"-",A1$[27,30]
      Else 
        PHONESTR$ = A1$[21,23],"-",A1$[24,30]
      End If 
      J$=J$," : ",PHONESTR$
    End If 
  End If 
  tmp$=tmp$,J$,fdel$
  !
  tmp$=tmp$,rtrim$(A$[1,30]),fdel$,rtrim$(A$[31,60]),fdel$
  tmp$=tmp$,rtrim$(A$[91,105]),fdel$,A$[106,107],fdel$
  tmp$=tmp$,rtrim$(A$[108,117]),fdel$
  If SORT$ = "S" let tmp$=tmp$,SORTKEY$[1,3],fdel$
  tmp$=tmp$,SORTKEY$[4,5],fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
end if
!
If LINENO > MAXLINE Gosub PRINTHEADING
Print #0;SORTKEY$[36,41]; Tab (8);SORTKEY$[43,48]; Tab (15);A$[1,30];
Print #0; Tab (46);A$[31,60]; Tab (77);
J$ = rtrim$(A$[91,105]) ! -  \ Call "trim",J$
If J$ <> "" Print #0;J$;", ";
Print #0;A$[106,107];"  ";A$[108,117]; Tab (111);
If SORT$ = "S" Print #0;SORTKEY$[1,3];
Print #0; Tab (126);SORTKEY$[4,5]
LINENO = LINENO + 1
If SHIPLISTNO = -1
  J$ = rtrim$(A1$[21,30]) ! -  \ Call "trim",J$
  If J$ = ""
    PHONESTR$ = ""
  Else 
    If A1$[28,30] <> "   "
      PHONESTR$ = "(",A1$[21,23],") ",A1$[24,26],"-",A1$[27,30]
    Else 
      PHONESTR$ = A1$[21,23],"-",A1$[24,30]
    End If 
  End If 
End If 
J$ = rtrim$(A$[118,142]) ! - \ Call "trim",J$
Print #0; Tab (8);J$;
If SHIPLISTNO = -1 And PHONESTR$ <> ""
  If J$ <> "" Print #0;" : ";
  Print #0;PHONESTR$
Else 
  Print #0;
End If 
LINENO = LINENO + 1
Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
