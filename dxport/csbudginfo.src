! csbudginfo.dl4
!
! supporting library of customer/shiplist blanket po / budget data
!
! 1.0
!
! loadsave -w -n 100,10 -o prog/dxport/csbudginfo.dl4 src/csbudginfo.src
!
include "src/copyright.inc"
Rem CSBUDGINFO - get budget info for customer/shiplist
Rem cct 201662 - For ECCOS  213151 - Add Mode 9
Rem patch problem setting cfflg$[3,3]
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 19, 2008  12:40:18
Rem /w2/papermaster/r2005//usr/acct/jcs/work/custom/nelson.r9/csbudginfo.src (univ2) [jcs] {07131}
Rem  Copyright (c) 2008 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,InpBuf,String
! Option Default Dialect IRIS1

If Err 0 Gosub ERR_TRAP
Enter CUSTNO,SHIPNO,MODE,PONUM$,TFLAG$,BUDGINFO[],Intco
Rem {begin src/inc/dim.getchan.i}
Dim 1%,CHNL
Dim 3%,CHNLSCR,CHNLFREE
Rem {end dim.getchan.i}
Dim K1$[50],K2$[50],K3$[50],K4$[50],BPO$[20],SLBPO$[20]
Dim CFFLG$[6],SLFLG$[6],FLE$[20],P0$[20],SPACES$[100]
Dim KEYCUST$[50],KEYORD$[60],KEYSHIP$[50],X$[20]
dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[200],rstr$[500]
Dim 1%,TRIGGER[1],COID,CH_CNTRL,CH_CUST,CH_SHIP,CH_ROH,CH_ROS,CH_ROT
Dim 2%,H0[12],BUDGD[1],SLBDD[1],TH0[12]
Dim 2%,X2[9],CUST,SHIP,CURDATE, CHKDATE
Dim 3%,BUDG[1],SLBDG[1],T2[25],SRN[5]
Dim 3%,ORDTTL[5],REC[99],R[99],BUDGOPN[1]
If MODE <> 9 ! "only clear if NOT PASSED IN!
  TFLAG$ = " ",TFLAG$;PONUM$ = " ",PONUM$
  For X = 0 To 4 \ BUDGINFO[X] = 0 \ Next X
End If 
clear rstr$
If CUSTNO <= 0 Goto OUTEND
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
CHNL = 98 \ Gosub GETCHAN
If CHNL > 0 Let CH_CNTRL = CHNL Else Goto OUTEND
FLE$ = "cntrl/cntrl" + Str$(COID)
Open #CH_CNTRL,FLE$
CHNL = 98 \ Gosub GETCHAN
If CHNL > 0 Let CH_CUST = CHNL Else Goto OUTDONE
Read #CH_CNTRL,88,1808;FLE$;
If MODE <> 9 Ropen #CH_CUST,FLE$
If MODE = 9 Open #CH_CUST,FLE$
CHNL = 98 \ Gosub GETCHAN
If CHNL > 0 Let CH_SHIP = CHNL Else Goto OUTDONE
Read #CH_CNTRL,88,2112;FLE$;
If MODE <> 9 Ropen #CH_SHIP,FLE$
If MODE = 9 Open #CH_SHIP,FLE$
CHNL = 98 \ Gosub GETCHAN
If CHNL > 0 Let CH_ROH = CHNL Else Goto OUTDONE
Read #CH_CNTRL,88,1840;FLE$;
Ropen #CH_ROH,FLE$
CHNL = 98 \ Gosub GETCHAN
If CHNL > 0 Let CH_ROS = CHNL Else Goto OUTDONE
Read #CH_CNTRL,88,1856;FLE$;
Ropen #CH_ROS,FLE$
CHNL = 98 \ Gosub GETCHAN
If CHNL > 0 Let CH_ROT = CHNL Else Goto OUTDONE
Read #CH_CNTRL,88,1872;FLE$;
Ropen #CH_ROT,FLE$
X$ = Tim(8) Using "&&"
X$ = X$ + Tim(9) Using "&&"
X$ = X$ + Tim(10) Using "&&"
CURDATE = X$[1,6]
CHKDATE = CURDATE
SPACES$ = " ",SPACES$
SHIP = -1
H0[4] = CUSTNO
if shipno=999999 let shipno=-1  ! this is from Omni
SRN[1] = SHIPNO
STARTHERE: Rem "we're doing stuff (all modes the same)
If MODE <> 9 ! "DO NOT CLEAR ON MODE 9 - PASSED IN DATA!
  TFLAG$ = " ",TFLAG$
  For X = 0 To 4 \ BUDGINFO[X] = 0 \ Next X
Else ! "it is mode 9
  SHIP = SHIPNO
  Call String(1,TFLAG$)
End If 
Gosub GET_CUST
If SRN[1] >= 0 Gosub GET_SHIP Else Let TRIGGER[1] = 0;SHIPNO = -1
CUST = H0[4]
If SHIPNO >= 0 Let SHIP = SHIPNO
If MODE = 9 Gosub WRITE_DATA \ Goto STARTHERE
Goto GET_ORDERTOTALS
GET_CUST: Rem "customer info(once only)
KEYCUST$ = " ",KEYCUST$;TRIGGER[0] = 0
KEYCUST$ = H0[4] Using "######"
Search #CH_CUST,2,1;KEYCUST$,R[CH_CUST],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_CUST,R[CH_CUST],728;CFFLG$;
  Mat Read #CH_CUST,R[CH_CUST],734;BPO$;
  Mat Read #CH_CUST,R[CH_CUST],754;BUDG;
  Mat Read #CH_CUST,R[CH_CUST],766;BUDGD;
Else 
  BPO$ = " ",BPO$;BUDGD[0] = 0
  BUDG[0] = 0;BUDGD[1] = 0;CFFLG$ = " ",CFFLG$
  If MODE = 9 Goto OUTDONE
End If 
If MODE = 9 Return 
If CFFLG$[2,2] = "B" Or BUDG[0] > 0 ! "budget
  BUDGOPN[0] = BUDG[0] - BUDG[1]
  TRIGGER[0] = 1
End If 
If CFFLG$[2,2] = "D" And Not(BUDG[0]) And BPO$[1,5] <> "     "
  If CFFLG$[3,3] = "C"
    If BUDGD[0] > 0 And BUDGD[1] < CHKDATE
      TRIGGER[0] = -1
    End If 
  End If 
  If CFFLG$[3,3] <> "C"
    If BUDGD[0] > 0 And BUDGD[1] < CHKDATE
      TRIGGER[0] = 0
    End If 
  End If 
End If 
Return 
GET_SHIP: Rem "shiplist info (the current passed only)
KEYSHIP$ = " ",KEYSHIP$;TRIGGER[1] = 0
KEYSHIP$ = H0[4] Using "######"
KEYSHIP$[7] = "."
KEYSHIP$[8] = SRN[1] Using "&&&&&&"
Search #CH_SHIP,2,1;KEYSHIP$,R[CH_SHIP],E \ If E > 1 Gosub ERR_SEARCH
If Not(E)
  Mat Read #CH_SHIP,R[CH_SHIP],426;SLFLG$;
  Mat Read #CH_SHIP,R[CH_SHIP],432;SLBPO$;
  Mat Read #CH_SHIP,R[CH_SHIP],452;SLBDG;
  Mat Read #CH_SHIP,R[CH_SHIP],464;SLBDD;
Else 
  SLBPO$ = " ",SLBPO$;SLFLG$ = " ",SLFLG$
  SLBDG[0] = 0;SLBDD[0] = 0;SLBDG[1] = 0
  SHIPNO = -1
End If 
If MODE = 9 Return 
If SLFLG$[1,1] = "B" Or SLBDG[0] > 0 ! "budget
  BUDGOPN[1] = SLBDG[0] - SLBDG[1]
  TRIGGER[1] = 1
End If 
If SLFLG$[1,1] = "D" And Not(SLBDG[0]) And SLBPO$[1,5] <> "     "
  If SLFLG$[2,2] = "C"
    If SLBDG[0] > 0 And SLBDG[1] < CHKDATE
      TRIGGER[1] = -1
    End If 
  End If 
  If SLFLG$[2,2] <> "C"
    If SLBDG[0] > 0 And SLBDG[1] < CHKDATE
      TRIGGER[1] = 0
    End If 
  End If 
End If 
If TRIGGER[1] = 0 Let SHIPNO = -1
Return 
GET_ORDERTOTALS: Rem "as it says
If MODE = 9 Goto WRITE_DATA
ORDTTL[0] = 0;ORDTTL[1] = 0
KEYORD$ = " ",KEYORD$
KEYORD$[1,6] = H0[4] Using "######"
ORDHLOOP: Rem "thru all Orders for Customer
Search #CH_ROH,3,2;KEYORD$,REC[CH_ROH],E \ If E = 2 Goto LINESDONE
If E Gosub ERR_SEARCH
X2 = KEYORD$[1,6] \ If X2 <> H0[4] Goto LINESDONE
Gosub READ_ROH
If TH0[2] <= 0 Or TH0[3] <= 0 Goto ORDHLOOP
REC[CH_ROS] = TH0[2]
Gosub READ_ROS
REC[CH_ROT] = TH0[3]
Gosub READ_ROT
TCHKDATE = 0
If TH0[10] Let TCHKDATE = TH0[10] Else Let TCHKDATE = TH0[9]
If SRN[3] = 0 Or SRN[3] = 5 Or SRN[2] <> CUST Goto NOTSHIP
If SRN[1] <> SHIP Goto NOTSHIP
If SLBPO$[1,5] <> "     " And P0$ <> SLBPO$ Goto NOTSHIP
If TRIGGER[1]=0
  If SLBDD[0] <= TCHKDATE And SLBDD[1] >= TCHKDATE
    ORDTTL[1] = ORDTTL[1] + T2[0]
  End If
else                                                   
   let Ordttl[1]=Ordttl[1]+t2[0] ! "Total Shiplist
End If 
NOTSHIP: Rem "bypassed
If BPO$[1,5] <> "     " And P0$ <> BPO$ Goto ORDHLOOP
If TRIGGER[0] = 1  ! amount budget, no dates
	ORDTTL[0] = ORDTTL[0] + T2[0]
Else
  If BUDGD[0] <= TCHKDATE And BUDGD[1] >= TCHKDATE
    ORDTTL[0] = ORDTTL[0] + T2[0]
  End If 
End If 
Goto ORDHLOOP
READ_ROH: Rem "Header
Mat Read #CH_ROH,REC[CH_ROH],0;TH0;
Mat Read #CH_ROH,REC[CH_ROH],446;P0$;
Return 
READ_ROS: Rem "shipto
Mat Read #CH_ROS,REC[CH_ROS],154;SRN;
Return 
READ_ROT: Rem "totals
Mat Read #CH_ROT,REC[CH_ROT],8;T2;
Return 
LINESDONE: Rem "
Goto OUTDONE
WRITE_DATA: Rem "added - ECCOS site allows data entry
If SHIP >= 0 And SHIPNO < 0 ! "did not find passed cust/shipto
  For X = 0 To 4 \ BUDGINFO[X] = 0 \ Next X
  Goto OUTDONE
End If 
If SHIPNO = -1 ! "updating customer
  X$ = PONUM$ + SPACES$
  BPO$ = X$ + SPACES$
  X$ = TFLAG$ + SPACES$
  If X$[1,1] = " " Or X$[1,1] = "B" Or X$[1,1] = "D" ! "only options allowed
    CFFLG$[2,2] = X$[1,1]
  End If 
  If X$[2,2] = " " Or X$[2,2] = "M" Or X$[2,2] = "Q" Or X$[2,2] = "S" Or X$[2,2] = "A" Or X$[2,2] = "C" ! "date options
    CFFLG$[3,3] = X$[2,2]
  End If 
  If CFFLG$[2,2] = "D" And CFFLG$[3,3] <> " " And BUDGINFO[4] > 0 ! "got an end date
    X$ = BUDGINFO[4] Using "&&&&&&"
    Call DateToJulian(1,X$,X$,E) \ If E Goto CBEDATE
    BUDGD[1] = BUDGINFO[4]
    If CURDATE < BUDGD[0] Let BUDGD[0] = CURDATE
    If BUDGD[0] <= 0 Let BUDGD[0] = CURDATE
CBEDATE: Rem "bypass date if no good
  Else ! "not a date related anything
    BUDGD[0] = 0
    BUDGD[1] = 0
  End If 
  If BUDGINFO[0] >= 0 ! " sent a budget amount (even zero)
    BUDG[0] = BUDGINFO[0]
  End If 
  If CFFLG$[2,2] = " " ! "got to have something otherwise ALL NOT USED!
    BPO$ = " ",BPO$
    CFFLG$[3,3] = " "
    BUDG[0] = 0;BUDG[1] = 0
    BUDGD[0] = 0;BUDGD[1] = 0
  End If ! "of clearing not used
  If CFFLG$[2,2] = "D" ! "using date
    If CFFLG$[3,3] = " " Or BUDGD[1] <= 0 ! "no date/type setup
      If BUDGD[1] > 0 ! "does have ending date
        CFFLG$[3,3] = "C"
        Goto ECDCHK
      Else 
        BUDGD[0] = 0;BUDGD[1] = 0
      End If 
      If BUDG[0] And BUDGD[1] = 0 ! "does have a budget
        CFFLG$[2,2] = "B"
      End If ! "of switch to budget
ECDCHK: Rem "end the date type check
    End If ! "of no date type
  End If ! "of date type
  If CFFLG$[2,2] = "B" ! "using budget, not dates
    CFFLG$[3,3] = " "
    BUDGD[0] = 0;BUDGD[1] = 0
    If BUDG[0] <= 0 ! "flagged as budget and is none - clear
      BUDG[0] = 0;BUDG[1] = 0
      BPO$ = " ",BPO$
      CFFLG$[2,2] = " "
    End If ! "of budget flag and no budget
  End If ! "of budget flag check
  Mat Write #CH_CUST,R[CH_CUST],728;CFFLG$;
  Mat Write #CH_CUST,R[CH_CUST],734;BPO$;
  Mat Write #CH_CUST,R[CH_CUST],754;BUDG;
  Mat Write #CH_CUST,R[CH_CUST],766;BUDGD;
End If ! "done with customer
If SHIPNO >= 0 ! "updateing shiplist
  SLBPO$ = PONUM$ + SPACES$
  X$ = TFLAG$ + SPACES$
  If X$[1,1] = " " Or X$[1,1] = "B" Or X$[1,1] = "D" ! "only options allowed
    SLFLG$[1,1] = X$[1,1]
  End If 
  If X$[2,2] = " " Or X$[2,2] = "M" Or X$[2,2] = "Q" Or X$[2,2] = "S" Or X$[2,2] = "A" Or X$[2,2] = "C" ! "date options
    SLFLG$[2,2] = X$[2,2]
  End If 
  If SLFLG$[1,1] = "D" And SLFLG$[2,2] <> " " And BUDGINFO[4] > 0 ! "got an end date
    X$ = BUDGINFO[4] Using "&&&&&&"
    Call DateToJulian(1,X$,X$,E) \ If E Goto SBEDATE
    SLBDD[1] = BUDGINFO[4]
    If CURDATE < SLBDD[0] Let SLBDD[0] = CURDATE
    If SLBDD[0] <= 0 Let SLBDD[0] = CURDATE
SBEDATE: Rem "bypass date if no good
  Else ! "not a date related anything
    SLBDD[0] = 0
    SLBDD[1] = 0
  End If 
  If BUDGINFO[0] >= 0 ! " sent a budget amount (even zero)
    SLBDG[0] = BUDGINFO[0]
  End If 
  If SLFLG$[1,1] = " " ! "got to have something otherwise ALL NOT USED!
    SLBPO$ = " ",SLBPO$
    SLFLG$[2,2] = " "
    SLBDG[0] = 0;SLBDG[1] = 0
    SLBDD[0] = 0;SLBDD[1] = 0
  End If ! "of clearing not used
  If SLFLG$[1,1] = "D" ! "using date
    If SLFLG$[2,2] = " " Or SLBDD[1] <= 0 ! "no date/type setup
      If SLBDD[1] > 0 ! "does have ending date
        SLFLG$[2,2] = "C"
        Goto ESDCHK
      Else 
        SLBDD[0] = 0;SLBDD[1] = 0
      End If 
      If SLBDG[0] And SLBDD[1] = 0 ! "does have a budget
        SLFLG$[1,1] = "B"
      End If ! "of switch to budget
ESDCHK: Rem "end the date type check
    End If ! "of no date type
  End If ! "of date type
  If SLFLG$[1,1] = "B" ! "using budget, not dates
    SLFLG$[2,2] = " "
    SLBDD[0] = 0;SLBDD[1] = 0
    If SLBDG[0] <= 0 ! "flagged as budget and is none - clear
      SLBDG[0] = 0;SLBDG[1] = 0
      SLBPO$ = " ",SLBPO$
      SLFLG$[1,1] = " "
    End If ! "of budget flag and no budget
  End If ! "of budget flag check
  Mat Write #CH_SHIP,R[CH_SHIP],426;SLFLG$;
  Mat Write #CH_SHIP,R[CH_SHIP],432;SLBPO$;
  Mat Write #CH_SHIP,R[CH_SHIP],452;SLBDG;
  Mat Write #CH_SHIP,R[CH_SHIP],464;SLBDD;
End If ! "done with shiplist
MODE = 0
SRN[1] = SHIPNO
SHIP = -1
Return 
OUTDONE: Rem "done
If CH_CNTRL Close #CH_CNTRL
If CH_CUST Close #CH_CUST
If CH_SHIP Close #CH_SHIP
If CH_ROH Close #CH_ROH
If CH_ROS Close #CH_ROS
If CH_ROT Close #CH_ROT
If TRIGGER[0] ! "customer info to pass
	IF ((cfflg$[3,3]="C" or cfflg$[2,2]="D") and BUDGD[1]>CHKDATE) or cfflg$[2,2]="B"		! enddate > today
	  PONUM$ = BPO$
	  TFLAG$ = CFFLG$[2,3]
	  BUDGINFO[0] = BUDG[0]
	  BUDGINFO[1] = BUDG[1]
	  BUDGINFO[2] = ORDTTL[0]
	  BUDGINFO[3] = BUDGD[0]
	  BUDGINFO[4] = BUDGD[1]
	End If
End If 
If TRIGGER[1] ! "it's shiplist
	IF (slflg$[1,1]="D" and SLBDD[1]>CHKDATE) or slflg$[1,1]="B"	! enddate > today
	  PONUM$ = SLBPO$
	  TFLAG$ = SLFLG$[1,2]
	  BUDGINFO[0] = SLBDG[0]
	  BUDGINFO[1] = SLBDG[1]
	  BUDGINFO[2] = ORDTTL[1]
	  BUDGINFO[3] = SLBDD[0]
	  BUDGINFO[4] = SLBDD[1]
	End If
End If 
OUTEND: Rem "
End 
Rem {begin src/inc/rtn.getchan.i}
GETCHAN: Rem search for open channel (counts down from supplied chnl #)
For SCR = CHNL To 1 Step -1
  CHNL = SCR
  Gosub CHNLFREE
  If CHNLFREE
    SCR = 1
  Else 
    CHNL = 0
  End If 
Next SCR
Return 
CHNLFREE: Rem check to see if a channel is being used
If Err 0 Let CHNLFREE = Spc(8)
CHNLFREE = 0
CHNLSCR = Chf(CHNL)
If Err 0 Gosub ERR_TRAP
If CHNLFREE And CHNLFREE <> 49 Gosub ERR_TRAP
END_CHNLFREE: Rem
Return 
Rem {end rtn.getchan.i}
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "+Msc$(4)
e$=msg$
Error 11000
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet_call.inc"
Rem {end rtn.error.s}
