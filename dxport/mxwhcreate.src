Rem BEDIT Version: 2.2 OBJECT CODE     Created: JUL 17, 2002  16:55:21
!
! loadsave -w -n 100,10 -o prog/dxport/mxwhcreate src/mxwhcreate.src
!
! ERPScheduler Enabled
Rem /usr/acct/r97//usr/acct/jliu/work/devl/misc/mxwhcreate.src (univ2) [jliu] {36400}
Rem  Copyright (c) 2002 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String
Declare Intrinsic Sub dxget
Declare Intrinsic Function findchannel,trim$
Option Default Dialect IRIS1
!
External Lib "libgeneral.lib"
Declare External Sub suberr,mainerr
Declare External Function GetParameter$
Dim e$[500],buttonlist$[5,50],nextlist$[5,100],msg$[256]
!
External Lib "ubsfunc.dl4"
Declare External Function OpenMySQLMirror,OpenFile
include "src/inc/sql_prodwhse.inc"

Rem MXWHCREATE     create new warehouse record
Rem 5/28/99 jliu cct122724 add routine to write all the fields when
Rem         the order type is 8 or 7 or 16 - 8000 line routine
Enter WHPROD$,WHBLD[]
VEND = WHBLD[2]
If Err 0 Rem
NSFLAG = WHBLD[3]
If Err 0 Gosub ERR_TRAP
Dim 1%,CHAN,CT,E,BSRC,WHFCWGT
Dim 2%,REC
Dim 3%,WHSLS[7],r1
Dim K2$[50],W2$[24],W3$[32],DWHK$[50],FT$[30]
Dim W1$[32],WH3$[24],WHFLG$[10],WHMKUPTYP$[4],WCOMM$[4],CPIREVBY$[10],custom_customer$[30]
Dim 2%,W2[9],W7[14],WH7[3],WHLPOOL,WHFDT[1],WHMKUP[3],WHPRD0[1],CPIHOLDDATE
Dim 1%,W0[3],W1[2],WH8[47],WHPARC[5],WHRPLN,WHLM[1],FCWGT
Dim 1%,RESTRICTED,WHBASE,WHPARC2[3]
Dim 3%,W3[24],W5[25],WH9[25],WHLV[2],WHMISC[6],WHMISC2[7]
Dim 3%,WHFUT[2],VLIST,WHREDI[1],co$[2],WHLBS[1]
! COID = Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
co$ = GetParameter$("S_USER.AppID")
coid = co$
CTLC = OpenFile(-9999,intCo) \ If CTLC = -1 Error 42 !control
mat read #ctlc,115,60;custom_customer$;
custom_customer$=UCase$(Trim$(custom_customer$))
CHAN = WHBLD[0]
K2$ = " ",K2$
E = 2
Search #CHAN,1,0;K2$,REC,E \ If E Gosub ERR_SEARCH
Gosub L_2000
If Fra(WHBLD[1]) And Int(WHBLD[1]) <> Fra(WHBLD[1]) * 100 Gosub L_8000
Gosub READ_WHINFO
Gosub L_6600
K2$ = " ",K2$;K2$[1,12] = W1$[1,12];K2$[13,14] = W1[0] Using "##"
Search #CHAN,4,1;K2$,REC,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;K2$[1,2] = W1[0] Using "##"
K2$[3,5] = W1[2] Using "###";K2$[6,18] = W1$[1,12]," "
Search #CHAN,4,2;K2$,REC,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;K2$[1,2] = W1[0] Using "##"
K2$[3,8] = W2[3] Using "######";K2$[9,20] = W1$[1,12]
Search #CHAN,4,3;K2$,REC,E \ If E Gosub ERR_SEARCH
K2$ = " ",K2$;K2$[1,2] = W1[0] Using "##"
K2$[3,22] = W1$[13,32];K2$[23,34] = W1$[1,12]
Search #CHAN,4,4;K2$,REC,E \ If E Gosub ERR_SEARCH
WHBLD[2] = REC
! update MySQL if we are using it
K2$ = " ",K2$;K2$[1,12] = W1$[1,12];K2$[13,14] = W1[0] Using "##"
sqlChan = OpenMySQLMirror(e$) !
if sqlChan >= 0 ! SQL option enabled and open succeeded
	e = prodwhse_UpdateSQLFromDL4(e$, intCo, K2$, sqlChan, chan)
	close #sqlChan
end if
Goto OUTEND
L_2000: Rem "===== default/clear variables
clear WHLBS[]
clear WHPRD0[]
clear CPIHOLDDATE
CPIREVBY$ = " ",CPIREVBY$
For CT = 0 To 47
  If CT < 2 Let WHFDT[I] = 0;WHREDI[I] = 0
  If CT < 3 Let W1[CT] = 0;WHLV[CT] = 0;WHFUT[I] = 0
  If CT < 4 Let W0[CT] = 0;WH7[CT] = 0
  If CT < 4 Let WHMKUP[I] = 0;WHPARC2[I] = 0
  If CT < 6 Let WHPARC[CT] = 0
  If CT < 7 Let WHMISC[CT] = 0
  If CT < 8 Let WHMISC2[CT] = 0
  If CT < 10 Let W2[CT] = 0
  If CT < 15 Let W7[CT] = 0
  If CT < 25 Let W3[CT] = 0
  If CT < 26 Let W5[CT] = 0;WH9[CT] = 0
  If CT < 48 Let WH8[CT] = 0
Next CT
WHRPLN = 0;WHLM[0] = 0;WHLM[1] = 0
W1$ = " ",W1$;W2$ = " ",W2$;WH3$ = " ",WH3$
WCOMM$ = " ",WCOMM$;WHFLG$ = " ",WHFLG$;WHMKUPTYP$ = " ",WHMKUPTYP$
WHLPOOL = 0;FCWGT = 0;RESTRICTED = 0;VLIST = 0;WHBASE = 0
W1$[1,Len(WHPROD$)] = WHPROD$;W1[0] = WHBLD[1]
W2[3] = VEND
If NSFLAG Let W0[0] = 2
if custom_customer$ = "PIEDMONT"
	WHLM[0] = 1
	! only default transfers update usage if WH = 1
	if W1[0] = 1 let WHMISC[6] = 1
end if
Return 
L_6600: Rem "=============================== write product whse record
Mat Write #CHAN,REC,0;W1$
Mat Write #CHAN,REC,32;W1
Mat Write #CHAN,REC,38;W2
Mat Write #CHAN,REC,78;W3
Mat Write #CHAN,REC,228;W5
Mat Write #CHAN,REC,384;WHPARC
Write #CHAN,REC,396;WHLPOOL
Mat Write #CHAN,REC,400;WCOMM$
Write #CHAN,REC,404;FCWGT
Mat Write #CHAN,REC,420;W0
Mat Write #CHAN,REC,428;WH7
Mat Write #CHAN,REC,444;WH8
Mat Write #CHAN,REC,540;WH9
Mat Write #CHAN,REC,696;W7
Mat Write #CHAN,REC,756;WH3$
Mat Write #CHAN,REC,780;WHLV
Write #CHAN,REC,798;WHRPLN
Mat Write #CHAN,REC,800;WHMISC
Mat Write #CHAN,REC,842;WHLM
Mat Write #CHAN,REC,846;WHMISC2
Write #CHAN,REC,894;RESTRICTED
Mat Write #CHAN,REC,896;WHFUT
Mat Write #CHAN,REC,914;WHFDT
Write #CHAN,REC,922;VLIST
Mat Write #CHAN,REC,928;WHFLG$
Write #CHAN,REC,938;WHBASE
Mat Write #CHAN,REC,940;WHMKUP
Mat Write #CHAN,REC,956;WHMKUPTYP$
Mat Write #CHAN,REC,960;WHPARC2
Mat Write #CHAN,REC,968;WHREDI
Mat Write #CHAN,REC,980;WHLBS
Mat Write #CHAN,REC,1004;WHPRD0
Mat Write #CHAN,REC,1024;CPIHOLDDATE
Mat Write #CHAN,REC,1028;CPIREVBY$;
Return 
READ_WHINFO: Rem read the buying source & forecast weight table
FT$ = "2/WHINFO" + Str$(COID)
ch_whinfo=findchannel()
Ropen #ch_whinfo,FT$
Read #ch_whinfo,W1[0] - 1,858;BSRC;
Read #ch_whinfo,W1[0] - 1,860;WHFCWGT;
Close #ch_whinfo
W7[12] = BSRC
FCWGT = WHFCWGT
Return 
L_8000: Rem ===== write the fields as same as the whse is coming from
DWHK$ = " ",DWHK$ \ DWHK$[1,12] = W1$[1,12]
DEFWHNUM = (WHBLD[1] - Int(WHBLD[1])) * 100
If Fra(DEFWHNUM) Let DEFWHNUM = Int(DEFWHNUM)
DWHK$[13,14] = DEFWHNUM Using "##"
Search #CHAN,2,1;DWHK$,R1,E
If E Gosub ERR_SEARCH
Mat Read #CHAN,R1,0;W1$
Mat Read #CHAN,R1,32;W1
Mat Read #CHAN,R1,38;W2
Mat Read #CHAN,R1,78;W3
Mat Read #CHAN,R1,228;W5
Mat Read #CHAN,R1,384;WHPARC
    Read #CHAN,R1,396;WHLPOOL
Mat Read #CHAN,R1,400;WCOMM$
    Read #CHAN,R1,404;FCWGT
Mat Read #CHAN,R1,420;W0
Mat Read #CHAN,R1,428;WH7
Mat Read #CHAN,R1,444;WH8
Mat Read #CHAN,R1,540;WH9
Mat Read #CHAN,R1,696;W7
Mat Read #CHAN,R1,756;WH3$
Mat Read #CHAN,R1,780;WHLV
    Read #CHAN,R1,798;WHRPLN
Mat Read #CHAN,R1,800;WHMISC
Mat Read #CHAN,R1,842;WHLM
Mat Read #CHAN,R1,846;WHMISC2
    Read #CHAN,R1,894;RESTRICTED
Mat Read #CHAN,R1,896;WHFUT
Mat Read #CHAN,R1,914;WHFDT
    Read #CHAN,R1,922;VLIST
Mat Read #CHAN,R1,928;WHFLG$
    Read #CHAN,R1,938;WHBASE
Mat Read #CHAN,R1,940;WHMKUP
Mat Read #CHAN,R1,956;WHMKUPTYP$
Mat Read #CHAN,R1,960;WHPARC2
Mat Read #CHAN,R1,968;WHREDI
if vend=0 OR W2[3]<>VEND
	LET W1$=" ",W1$
endif
W1$[1,Len(WHPROD$)] = WHPROD$;W1[0] = Int(WHBLD[1])
W2[6] = 0 \ W2[7] = 0 \ W2[8] = 0 \ W2[9] = 0
For CT = 0 To 2
  W3[CT] = 0 \ W3[CT + 8] = 0
Next CT
W3[11] = 0;W7[3] = 0;W7[4] = 0;WHLV[0] = 0;WHLV[1] = 0
For CT = 0 To 25
  W5[CT] = 0 \ WH9[CT] = 0
Next CT
WH3$ = " ",WH3$
For CT = 0 To 7
  WHMISC2[CT] = 0
Next CT
Return

OUTEND: Rem "===================================== done
End 
E = 0 \ Gosub ERR_SEARCH
Stop 

ERR_TRAP: Rem
If Spc(8) = 123
  Escdis 
  Escclr 
  Return -1
End If 
Goto ERR_MAIN
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
Goto ERR_MAIN
ERR_MAIN: Rem
If Err 0 Rem
e$ = msg$
If Spc(8) <> 10000 Call suberr(e$,Spc(8),Spc(10),Msc$(2))
Call mainerr(e$,Spc(8),buttonlist$[],nextlist$[])
Stop 
Rem