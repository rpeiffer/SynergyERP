! --- mx291
! description Quote Management Screen
!
! 1.0 mm/dd/yyyy change??
!
! loadsave -w -n 100,10 -o prog/dxport/mx291.dl4 src/mx291.src
!
include "src/copyright.inc"
Rem MX291 - Quote Management Screen
Rem cct 159835 - Bosworth
Rem LAST UPDATE:
Rem BEDIT Version: 2.2 OBJECT CODE     Created: FEB 14, 2006  12:38:18
Rem /w2/papermaster/r2005//usr/acct/txc/work/r2005/mx2/mx291.src (univ2) [txc] {48596}
Rem  Copyright (c) 2006 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
! OPTIONS NOT ADDRESSED HERE
! 1. Edit the quote line (w/totals)
! 2. fax/email/etc the order (if created)
! 3. fax/email/etc the vendor req. for proposal
! 4. create an order (for 1 or all lines on quote)
! 
include "src/inc/filebuyer.inc"
!
External Lib "ubsfunc.dl4"
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
Declare External Function chkDteFrmt$,clrtxtc$,CHKBADCHARS
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
!
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,Time,WhoLock
Declare Intrinsic Function Findchannel
!Option Default Dialect IRIS1

Com J4$[60],1%,COST_LEV[3],SFAXLINE,EFAXLINE,Intco
Com 2%,SEL,S9[9],QOLREC,SWPSRC,STATUS
Com 3%,NO,userid$[10]
If Err 0 Gosub ERR_TRAP
Dim J$[70],J0$[18],J1$[70],J2$[20],J3$[40],J5$[80],J7$[80],J9$[70]
Dim X$[100],1%,J0,J2,J3,J4,J5,J7[2],J8,X1[9]
Dim 2%,J9[9],X2[9],4%,J1
Dim F$[16],K1$[50],ANS$[20],K2$[50],K3$[50],P9$[50],P60$[50],P61$[256]
Dim L1$[20],TRM$[16],L6$[60],QUM$[4],K5$[50],RESP$[5],U5$[30],K35$[15]
Dim CNM$[30]
Dim 1%,COID,FLAG,H4[2],W1[2],DLINE,NONSTK,ZLINE,QLFAX,LPRINTED
Dim 1%,L3[2],S2[1],VFAX,PFU1[20],UN[2],EUN[2],CNVTU[2]
Dim 1%,LOCKPORT,chan[99]
Dim 1%,TOTFAXLINE,QLFAX,QLVSEL
Dim 2%,H6[8],QLFAXDATE,QLVEND
Dim 2%,QFLTR[9],DT3[2],JDATE[5],BUYER,B[24],H5[16],WHLCK
Dim 2%,H0[12],QLFAXDATE,HFAX[1],HA3[2],L4[3],L6[5],L2[1]
Dim 3%,R[99],QVL1,SEQ[9],QSHIP,QORD,UNF[6],S3[17]
Dim 3%,A[33],A1[7],PFU2[6],CNVTA,AMOUNT,L7[12],QLCOST
Dim 3%,R1,OREF[5],qlcost
Dim A$[64],WORK$[50]
dim e$[500],buttonlist$[5,50],nextlist$[5,100] !error handling variables
Dim CUSTOM_CUSTOMER$[30],List$[100,1000],tmp$[1000],tmp1$[500]
dim action$[30],options$[30],b$[200],action1$[30],msg$[100]
Dim bsdel$[10],esdel$[10],rdel$[10],fdel$[10],rstr$[2000]
Dim Message$[500],WebStr$[1000],Fld$[1,30],Desc$[16]
! opened in the oemenu
! call dxopen()
!
call GetSession(e$,CTLC,options$,action$,UserID$,intCo,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,action1$)
!
! CALL dxsave(0,"tmp/qmscrn.txt!") 
b$=" ",B$;maxcnt=100
COID = Intco ! Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64)
For J = 2 To 31
  Read J1
  If J1 = -1 Goto L_240
  Read #1,88,Abs(J1);F$;
  If J1 < 0 Ropen #J,F$ Else Open #J,F$
L_240: Next J
Data "2400","1792","2288","1808","1952","1104","1280","1392","2656","1344","1424"
Data "2112","1824","2176","2528","2320","1680","1376","-1","1632","-1","1920","-688"
Data "2880","1728","1664","1936","2352","1744","928"
!
Z9[1] = 5
F$ = "6/QVENDLN" + Str$(COID)
Call FindF(F$,FOUND)
If Not(FOUND)
  Gosub BLD_QVLN
End If 
Open #35,F$
ch_qvn=35
ch_term=findchannel()
open #ch_term,"2/ARTERMCODE"+STR$(INTCO)
Mat Read #1,19,50;P9$;
Mat Read #1,60,50;P60$;
Mat Read #1,61,0;P61$;
QFLTR[0] = 0;QFLTR[1] = 680101;QFLTR[2] = 591231;QFLTR[3] = 0;QFLTR[4] = 0
JDATE[0] = 1;JDATE[1] = 36524;QFLTR[5] = 0
!Gosub SHO_SCREEN
!Gosub ASK_FILTERS
action1$=UCASE$(RTRIM$(Action1$))
select case action1$
	case "GETFLAGS" !							doc=QMS291-getflags.doc
	! SEND existing settings
	returnstatus=1;Message$="OK"
		clear List$[]
		List$[0]=bsdel$,"FLTFLDS",fdel$
		tmp$="BUYER",fdel$,"VNTF",fdel$,"CNTF",fdel$
		tmp$=tmp$,"SQDATE",fdel$,"EQDATE",fdel$,"ORDTYPE",fdel$
		List$[1]=tmp$
		tmp$=Str$(QFLTR[0]),fdel$ ! BUYER
		! "VENDOR FAXED: ";
		If QFLTR[3] let x$="Y" Else x$="N"
		tmp$=tmp$,X$,fdel$
		!"CUSTOMER FAXED: ";
		If QFLTR[4] let x$="Y" Else x$="N"
		tmp$=tmp$,x$,fdel$
		!"QUOTE DATES: ";
		X2 = QFLTR[1] \ Gosub NUM2DATE
		tmp$=tmp$,X$[1,10],fdel$
		X2 = QFLTR[2] \ Gosub NUM2DATE
		tmp$=tmp$,X$[1,10],fdel$
		!@41,2;"ORD TYPE ";
		tmp$=tmp$,Str$(QFLTR[5]),fdel$
		!Print Using "## ";@50,2;QFLTR[5]; Else Print @50,2;"ALL";
		List$[2]=tmp$
		list$[3]=esdel$
		call AddToStr(e$,rstr$,List$[])
		! send buyers
		Clear List$[]
		f$="2/BUYERS"
		CH_BUY=FINDCHANNEL()
		OPEN #CH_BUY,F$
		CALL filedroplistbuyer(e$,list$[],99,ch_buy,"",fld$[],"0") ! add none
		call AddToStr(e$,rstr$,List$[])
		try close #ch_buy Else Rem
		! order types
		Clear List$[]
		List$[0]=bsdel$,"OrdTypeList",fdel$ ! beginning of section
		!
		List$[1]="ID",fdel$,"Description",fdel$
		!
		tmpcnt=maxcnt
		!
		List$[2]="0",fdel$,"ALL",fdel$ ! option for ALL
		row=3
		for cnt=1 to 38
			let dsp=(cnt-1)*20
			read #ctlc,62,dsp;desc$;
			if cnt=4 or cnt=16 clear desc$ ! do not send these ot's
			if rtrim$(desc$)<>""
				 if row>tmpcnt let tmpcnt=expandarray(E$,List$[])
				!
				tmp$=str$(cnt),fdel$
				 tmp$=tmp$,rtrim$(Desc$),fdel$
			!
				List$[row]=tmp$
				row=row+1
			endif
		next cnt
		!
		if row>tmpcnt let tmpcnt=expandarray(E$,List$[])
		List$[row]=esdel$ ! end section delimiter
		call AddToStr(e$,rstr$,List$[])
	! all done
	Case "GETQLINES" !							doc=QMS291-GetQLines.doc
		returnstatus=1;Message$="OK"
		For FLD = 1 To 5
		  Gosub EDT_FILT ! get the filter fields!
		Next FLD
		K1$ = " ",K1$
		Gosub SHO_QLINES
		! done (list was added to rstr$)
	Case "SELQLINE" ! not used? (flags in sho_qlines now)
		! select a quote line
		returnstatus=1;Message$="OK"
		Call dxget("QTREC",tmp$)
		let qtrec=tmp$
		if qtrec<1 or qtrec>chf(11)-1 or fra(qtrec)
			returnstatus=0;message$="INVALID QUOTE LINE RECORD"
			goto outerr
		Endif
		!Let R[11]=qtrec;QVN=0
		!Gosub QLEDIT ! start of the magic
		! if ok, returns with rstr$ loaded with options available
		! done with quote line
	Case "GETQVENDOR"  !						doc=QMS291-GetQVendor.doc
		! get vendors on line
		Call dxget("QTREC",tmp$)
		let qtrec=tmp$
		if qtrec<1 or qtrec>chf(11)-1 or fra(qtrec)
			returnstatus=0;message$="INVALID QUOTE LINE RECORD"
			goto outerr
		Endif
		! set up for qvendscrn call!
		Let R[11]=qtrec;QVN=1;r[0]=1 ! r[0]=1 is get
		gosub QLEdit ! see if ok & read data
		chan[1]=8;chan[2]=11;chan[3]=2;chan[4]=3;chan[5]=30
		chan[6]=26;chan[7]=ch_qvn
		clear list$[]
		call "qvndscrn.dl4",r[],h0[],l3[],l4[],intco,chan[],List$[]
		call AddToStr(e$,rstr$,List$[])
		! comes back with rstr$ loaded
		returnstatus=1;message$="OK"
		! done
	Case "SAVEQVENDOR"  !						doc=QMS291-SaveQVendor.doc
		! reload vendors for the line
		Call dxget("QTREC",tmp$)
		let qtrec=tmp$
		if qtrec<1 or qtrec>chf(11)-1 or fra(qtrec)
			returnstatus=0;message$="INVALID QUOTE LINE RECORD"
			goto outerr
		Endif
		Let R[11]=qtrec;QVN=1
		gosub QLEdit ! see if ok & read data
		Gosub reloadqvn
		returnstatus=1;message$="OK"
		! done
	! remainder is faxing, email, print
End select
    !
  ! status section on all cases except as goto SQDone
  call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
	! done with it
  call SetOutPut(e$,rstr$)
  QMDone: ! done - bypass status
Goto OutEnd
ASK_FILTERS: Rem "filters window
!Window Open @5,5; Size 60,15; Using "FILTERS FOR QUOTES"
!Print 'CS';
!Print @1,2;" 1> BUYER  ";
!Print @1,4;" 2> DATES  ";@21,4;"TO";
!Print @1,6;" 3> FAXED TO VENDOR ";
!Print @1,7;" 4> FAXED TO CUSTOMER";
!Print @1,8;" 5> ORDER TYPE";
!Print Using "###";@15,2;QFLTR[0];
!X2 = QFLTR[1] \ Gosub NUM2DATE
!Print @12,4;X$;
!X2 = QFLTR[2] \ Gosub NUM2DATE
!Print @25,4;X$;
!If QFLTR[3] Print @25,6;"Y" Else Print @25,6;"N"
!If QFLTR[4] Print @25,7;"Y" Else Print @25,7;"N"
!If QFLTR[5] Print Using "## ";@25,8;QFLTR[5]; Else Print @25,8;"ALL";
FLWHATNOW: Rem "
!Print @0,Msc(34) - 2;'CL';"SELECT  #:field  A: all  C: continue  ";
!Input Len 16384 + 1;""J$ \ Call String(1,J$)
!If J$ = "C" Goto FILTDONE
!If J$ = "A" Goto EDTALLF
!FLD = J$
!Gosub EDT_FILT
!Goto FLWHATNOW
FILTDONE: Rem "
!Window Close 
!Gosub SHO_SCREEN
Return 
EDTALLF: Rem "change all filters
For FLD = 1 To 5
  Gosub EDT_FILT
Next FLD
Goto FLWHATNOW
EDT_FILT: Rem "change 'em here
On FLD Gosub EDT_BUYR,EDT_QDATES,EDT_VFAX,EDT_CFAX,EDT_OTYP
Return 
EDT_BUYR: Rem "
!J5$ = "Enter the Buyer to display,  0: none  -: list"
!J0$ = "2 00 315 2";J1 = QFLTR[0]
!Gosub ISINPUT
!If J4$[1,1] = "-" Swap 1,"MXBUYER" \ Goto EDT_BUYR
call dxget("BUYER",tmp$) \ j$=RTrim$(tmp$)
J1 = J$ 
If J1 < 0 Or J1 > 999 Or Fra(J1)  !
	returnstatus=0;Message$="INVALID BUYER"
	Goto OutErr
Endif
QFLTR[0] = J1
Return 
EDT_QDATES: Rem "date range
!J5$ = "Enter the Starting Date to Display (mmddyy)"
!J0$ = "5000 612 4";J1 = QFLTR[1]
!Gosub ISINPUT
call dxget("SQDATE",tmp$)
x$=formatdate2$(tmp$) ! from MM/DD/YYYY to yyyymmdd 
let j1=x$[3] ! drop century
X$ = J1 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) 
If E  !Goto EDT_QDATES
	returnstatus=0;Message$="INVALID START DATE"
	Goto OutErr
endif
QFLTR[1] = J1;JDATE[0] = X$[1,5]
EDT_EQDATE: Rem "
!J5$ = "Enter the Ending Date to Display (mmddyy)"
!J0$ = "5000 625 4";J1 = QFLTR[2]
!Gosub ISINPUT
call dxget("EQDATE",tmp$)
x$=formatdate2$(tmp$) ! from MM/DD/YYYY to yyyymmdd 
let j1=x$[3] ! drop century
X$ = J1 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E)
If E ! Goto EDT_EQDATE
	returnstatus=0;Message$="INVALID END DATE"
	Goto OutErr
endif
JDATE[1] = X$[1,5]
If JDATE[1] < JDATE[0]
  Message$ = "INVALID DATE RANGE!"
  returnstatus=0
  Goto OutErr
End If 
QFLTR[2] = J1
Return 
EDT_VFAX: Rem " NOT JUST FAX - ANY NOTIFICATION (FAX/EMAIL/ETC)
!J5$ = "Include Quotes that have been faxed to Vendors? (Y/N)"
!J0$ = "6000 125 6";J1 = QFLTR[3]
!Gosub ISINPUT
call dxget("VNTF",tmp$)
j1=0 \ if UCASE$(RTrim$(tmp$))="Y" let J1=1
QFLTR[3] = J1 \ Return 
EDT_CFAX: Rem "
!J5$ = "Include Quotes that have been faxed to Customer? (Y/N)"
!J0$ = "6000 125 7";J1 = QFLTR[4]
!Gosub ISINPUT
call dxget("CNTF",tmp$)
j1=0 \ if UCASE$(RTrim$(tmp$))="Y" let J1=1
QFLTR[4] = J1 \ Return 
EDT_OTYP: Rem "
!J5$ = "Enter the Order Type to Display (1-38)  0=all"
!J0$ = "3000 225 8";J1 = QFLTR[5]
!Print @25,8;'CL';
!Gosub ISINPUT
call dxget("ORDTYPE",tmp$)
let j1=tmp$
If J1 = 4 Or J1 = 16 ! "transfer?
  Message$ = "NOT VALID FOR THIS PROGRAM"
  returnstatus=0 ! Gosub ISERRMSG
  Goto OutErr
End If 
! If J1 = 0 Print @25,8;"ALL";
QFLTR[5] = J1 \ Return 
SHO_QLINES: Rem "display quote lines
DLINE = 5;SEQ = 0;K1$ = " ",K1$
clear List$[]
tmpcnt=maxcnt
List$[0]=bsdel$,"QUOTELINES",fdel$
tmp$="QTREC",fdel$,"BUYER",fdel$,"QUOTEID",fdel$,"QLINENO",fdel$
tmp$=tmp$,"TERMS",fdel$,"CUSTID",fdel$,"CUSTNAME",fdel$
tmp$=tmp$,"CNTF",fdel$,"VNTF",fdel$,"ORDERID",fdel$
tmp$=tmp$,"PRODID",fdel$,"DESC",fdel$,"QTYORD",fdel$
tmp$=tmp$,"EDITLINE",fdel$,"SENDRFP",fdel$,"CRTEORD",fdel$,"SENDOCONF",fdel$
List$[1]=tmp$
row=2
!Print @0,4;'CE';"SEQ";@5,4;"BUYER";@11,4;"QUOTE";@18,4;"LINE";
!Print @35,4;"TERMS";@25,4;"CUST #";@55,4;"CFAX";@60,4;"VFAX"
!Print @66,4;"ORDER"
QFLE_LOOP: Rem "thru quote file - Customer Dir
Search #8,3,2;K1$,R[8],E \ If E = 2 Goto WHATQDO
If E Gosub ERR_SEARCH
If Err 0 Goto LCKER
Mat Read #8,R[8],0,12;H0;
LCKER: If Spc(8) = 123
  Errclr 
  If Err 0 Gosub ERR_TRAP
  Gosub SHOLCKLINE
  Goto QFLE_LOOP
End If 
If Spc(8) Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If H0[0] >= 90 Or H0[0] = 92 Goto QFLE_LOOP
Mat Read #8,R[8],104;H5;
If H5[7] = 4 Or H5[7] = 16 Goto QFLE_LOOP
If QFLTR[5] And H5[7] <> QFLTR[5] Goto QFLE_LOOP
X2 = H5[1] \ Gosub YMD2JUL \ X2 = 0
If X2 And X2 < Tim(6) Goto QFLE_LOOP ! CANCEL DATE < TODAY
X2 = H0[9] \ Gosub YMD2JUL \ X2 = Tim(6)
If X2 < JDATE[0] Or X2 > JDATE[1] Goto QFLE_LOOP
Mat Read #8,R[8],466;HFAX;
If Not(QFLTR[4]) And HFAX[0] Goto QFLE_LOOP
If QFLTR[4] And Not(HFAX[0]) Goto QFLE_LOOP
Mat Read #8,R[8],78;H4;
mat read #8,R[8],512;OREF;
K5$ = " ",K5$;K5$ = H0[4] Using "######"
Search #5,2,1;K5$,R[5],E \ If E > 1 Gosub ERR_SEARCH
if not(e)
	mat read #5,r[5],30;cnm$;
else
	cnm$="CUSTOMER NOT FOUND"+B$
endif
QUOTE = H0[7]
K2$ = " ",K2$;K2$[1,6] = QUOTE Using "######"
QLNE_LOOP: Rem "Quote Line Loop
Search #11,3,1;K2$,R[11],E \ If E = 2 Goto QFLE_LOOP
If E Gosub ERR_SEARCH
X2 = K2$[1,6] \ If X2 <> QUOTE Goto QFLE_LOOP
Mat Read #11,R[11],256;S2;
ZLINE = 0 \ If S2[0] = 3 Let ZLINE = 1
If ZLINE Goto QLNE_LOOP
Read #11,R[11],548;LPRINTED;
If LPRINTED = 1 Goto QLNE_LOOP
K35$ = " ",K35$;K35$[1,9] = K2$[1,9]
QLFAXDATE = 0 \ VFAX = 0
QVL_LOOP: Rem " check if any line has been faxed
Search #35,3,1;K35$,R[35],E \ If E = 2 Goto QVLDONE
If E Gosub ERR_SEARCH
If K35$[1,9] <> K2$[1,9] Goto QVLDONE
Read #35,R[35],0;QLFAX;
Read #35,R[35],2;QLFAXDATE;
If QLFAXDATE Let VFAX = 1
Goto QVL_LOOP
QVLDONE: Rem "done - pass thru
If Not(QFLTR[3]) And VFAX Goto QLNE_LOOP
If QFLTR[3] And Not(VFAX) Goto QLNE_LOOP
Mat Read #11,R[11],8;L3;
Mat Read #11,R[11],16;L4;
Mat Read #11,R[11],140;L1$;
Mat Read #11,R[11],80;L6$;
Mat Read #11,R[11],56;L6;
Mat Read #11,R[11],168;L7;
Mat Read #11,R[11],250;UN;
Mat Read #11,R[11],446;EUN;
Mat Read #11,R[11],452;UNF;
If L7[2] = 0 Goto QLNE_LOOP
If Not(L3[0]) ! "it a product
  R[3] = L4[0];NONSTK = 0
  Mat Read #3,R[3],156;B;
  Mat Read #3,R[3],256;A;
  Mat Read #3,R[3],460;A1;
  Mat Read #3,R[3],512;PFU1;
  Mat Read #3,R[3],554;PFU2;
  K3$ = L1$[1,12];K3$[13] = H4[2] Using "##"
  Search #30,2,1;K3$,R[30],E \ If E > 1 Gosub ERR_SEARCH
  If E
  Else 
    Mat Read #30,R[30],32;W1;
    BUYER = W1[2]
  End If 
Else ! "it's non-stock
  R[12] = L4[0];NONSTK = 1
  Mat Read #12,R[12],120;HA3;
  BUYER = HA3[1]
End If 
If QFLTR[0] And BUYER <> QFLTR[0] Goto QLNE_LOOP
Gosub L_30000
CNVTU[0] = 0;CNVTU[1] = UN[0];CNVTU[2] = 1
CNVTA = L7[2] \ Gosub CONVERT
QORD = AMOUNT
QUM$ = " ",QUM$
If UN[0] = -1 Let QUM$ = "CWT "
If UN[0] = -2 Let QUM$ = "LOT "
If UN[0] > 0 Read #26,UN[0],10;QUM$;
CONTQLDISP: Rem "continue with line Display
! If (DLINE + 3) > 20 Goto WHATQDOCONT
SEQ = R[11]
! Print @0,DLINE;'CE';
TRM$ = " ",TRM$
If H0[12] > 0 And H0[12] <= 16
  Read #ch_term,H0[12],0;TRM$;
End If 
Gosub CHK4OPTS ! get options now!
Gosub SHODTLLINE
QLFAXDATE = 0 \ VFAX = 0
Goto QLNE_LOOP
WHATQDOCONT: Rem "more lines already
!Print @0,22;'CE';"-MORE-  #:seq#  <CR>: continue  R: redisplay  E: end  ";
!Input Len 16384 + 3;""J$ \ Call String(1,J$)
!If J$ = "E" Goto WHATQDO
!If J$ = "R" Goto SHO_QLINES
!If J$ = "" Let DLINE = 5;SEQ = 0 \ Goto CONTQLDISP
!X2 = J$
!If X2 < 1 Or X2 > 9
!  J7$ = "INVALID SEQUENCE NUMBER!"
!  Gosub ISERRMSG
!  Goto WHATQDOCONT
!End If 
!If X2 > 0 And X2 <= SEQ And SEQ[X2] Goto QLEDIT
!Goto WHATQDOCONT
WHATQDO: Rem "on quote - done
list$[row]=esdel$
call AddToStr(e$,rstr$,List$[])
return
!Print @0,22;'CE';"SELECT  #:seq#  F: filters  R: redisplay  E: exit   ";
!Input Len 16384 + 3;""J$ \ Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ = "R" Goto SHO_QLINES
!If J$ = "F" Gosub ASK_FILTERS \ Goto WHATQDO
!X2 = J$
!If X2 < 1 Or X2 > 9
!  J7$ = "INVALID SEQUENCE NUMBER!"
!  Gosub ISERRMSG
!  Goto WHATQDO
!End If 
!If X2 > 0 And X2 <= SEQ And SEQ[X2] Goto QLEDIT
!Goto WHATQDO
SHODTLLINE: Rem "Line Detail
tmp$=Str$(SEQ),fdel$
tmp$=tmp$,Str$(BUYER),fdel$
tmp$=tmp$,Str$(QUOTE),fdel$
tmp$=tmp$,Str$(L3[2]),fdel$
tmp$=tmp$,RTrim$(TRM$),fdel$
tmp$=tmp$,Str$(H0[4]),fdel$,RTrim$(cnm$),fdel$ ! (name)

If HFAX[0] let X$="Y" Else Let X$=" "
tmp$=tmp$,x$[1,1],fdel$
If VFAX let x$="Y" Else let x$=" "
tmp$=tmp$,x$[1,1],fdel$
If H5[6] let tmp$=tmp$,Str$(H5[6]),fdel$ else let tmp$=tmp$," ",fdel$
tmp$=tmp$,RTrim$(L1$[1,12]),fdel$,RTrim$(L6$[1,30])," ",RTrim$(L6$[31,60]),fdel$
tmp$=tmp$,LTrim$(QORD Using "#######.##")," /",QUM$,fdel$
tmp$=tmp$,"Y",fdel$ ! always edit line
tmp1$="N" \ if SOM4FAX let tmp1$="Y"
tmp$=tmp$,tmp1$,fdel$ ! fax rfp
tmp1$="N" \ if QLCST let tmp1$="Y"
tmp$=tmp$,tmp1$,fdel$ ! create order
if not(H5[6]) let tmp1$="N"
tmp$=tmp$,tmp1$,fdel$ ! fax order confirmation
List$[row]=tmp$
let row=row+1 \ if row>tmpcnt let tmpcnt=expandarray(E$,List$[])
Return 
SHOLCKLINE: Rem who that order is locked
RETURN ! can't do on the web
!Print @10,DLINE;K1$[8,13];
!Print @18,DLINE;"Quote is locked";
!Call WhoLock(8,R[8],WHLCK)
!If WHLCK >= 1
 ! Print " by port ";
 ! Print Using "####";WHLCK;
!End If 
!Print 
!DLINE = DLINE + 2
Return 
QLEDIT: Rem "Select a quote line (now watch the magic happen!)
! R[11] = SEQ[X2]
Mat Read #11,R[11],0;L2;
Mat Read #11,R[11],8;L3;
MAT READ #11,R[11],16;L4;
Mat READ #11,R[11],168;L7;
Mat READ #11,R[11],260;S3;
X2 = L2[1]
For X = 1 To 5
  K5$ = " ",K5$;K5$[1,2] = X Using "##"
  K5$[3] = X2 Using "######"
  Search #8,2,1;K5$,R[8],E \ If E > 1 Gosub ERR_SEARCH
  If Not(E) Goto GOTQUOTE
Next X
Message$ = "QUOTE Or LINE NUMBER NOT FOUND!"
returnstatus=0 ! Gosub ISERRMSG
Goto OutErr ! WHATQDO
GOTQUOTE: Rem "
Mat Read #8,R[8],0;H0;
Mat read #8,r[8],512;OREF;
K5$ = " ",K5$;K5$ = H0[4] Using "######"
Search #5,2,1;K5$,R[5],E \ If E > 1 Gosub ERR_SEARCH
If E = 1
  Message$ = "CUSTOMER NOT FOUND!"
  returnstatus=0 ! Gosub ISERRMSG
  Goto OutErr !  WHATQDO
End If 
IF QVN RETURN ! JUST READ AND DONE
! Window Open @0,0; Size 80,24;
!Gosub SET_EDIT_STATUS
S9[0] = 5;S9[1] = R[5];S9[2] = R[8];S9[4] = 283
S9[6] = 291;SEL = L3[2]
! Swap 1,"MX283B"  ! native - line edit
S9[0] = -1;S9[1] = R[5];S9[2] = R[8];S9[4] = 283
S9[6] = 291
! Swap 1,"MX281H" ! native - totals
!Window Close 
Goto OTHOPT
!Print @0,22;'CE';"MAGIC STUFF HAPPENING!"
!Signal 3,20
OTHOPT: Rem "other options
Gosub CHK4OPTS ! gets flags
!If Not(SOM4FAX) And Not(QLCST)
!  If H0[0] >= 90
!    Gosub CLEAR_EDIT_STATUS
!  End If 
!  Return ! Goto WHATQDO
!End If 
Clear list$[]
List$[0]=bsdel$,"QLOPTIONS",fdel$
List$[1]="EDITLINE",fdel$,"SENTRFP",fdel$,"CRTEORD",fdel$,"SENTOCONF",fdel$
tmp$="Y",fdel$ ! always edit line
tmp1$="N" \ if SOM4FAX let tmp1$="Y"
tmp$=tmp$,tmp1$,fdel$ ! fax rfp
tmp1$="N" \ if QLCST let tmp1$="Y"
tmp$=tmp$,tmp1$,fdel$ ! create order
if not(H5[6]) let tmp1$="N"
tmp$=tmp$,tmp1$,fdel$ ! fax order confirmation
list$[2]=tmp$
list$[3]=esdel$
return ! all done - send avail line options
!Print @0,22;'CE';"Options:  ";
!If SOM4FAX Print "F: fax RFP  ";
!If QLCST Print "O: create order  ";
!If QLCST Print "C: fax confirmation  ";
!Print "E: end   ";
!Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
If ANS$ = "E"
  If H0[0] >= 90
    Gosub CLEAR_EDIT_STATUS
  End If 
  Return ! Goto WHATQDO
End If 
If ANS$ = "O" Goto SEND2ORD
If ANS$ = "F" Goto FAXVEND
If ANS$ = "C" Goto FAXCONF
Goto OTHOPT
CHK4OPTS: Rem " See what can be done
SOM4FAX = 0;QLCST = 0
Mat Read #11,R[11],260;S3;
Mat Read #11,R[11],168;L7;
Mat Read #8,R[8],0;H0;
Mat Read #8,R[8],104;H5;
Mat Read #8,R[8],466;HFAX;
mat read #8,r[8],512;OREF;
If S3[14] And L7[7] ! "stuff entered for vend & cost
  QLCST = 1
End If 
K5$ = " ",K5$;K5$ = H0[7] Using "######"
K5$[7] = L3[2] Using "###"
CHK4VFAX: Rem "Look for any waiting RFP fax
Search #35,3,1;K5$,R[35],E \ If E = 2 Goto CHK4FAXDONE
If E Gosub ERR_SEARCH
X2 = K5$[1,6] \ If X2 <> H0[7] Goto CHK4FAXDONE
X2 = K5$[7,9] \ If X2 <> L3[2] Goto CHK4FAXDONE
Read #35,R[35],0;QLFAX;
Read #35,R[35],2;QLFAXDATE;
Read #35,R[35],6;QLCOST;
If QLFAX And Not(QLFAXDATE) And Not(QLCOST) Let SOM4FAX = 1
Goto CHK4VFAX
CHK4FAXDONE: Rem "
Return 
FAXCONF: Rem fax the confirmation
If Not(H5[6])
  message$="THE ORDER HAS NOT BEEN CREATED!"
  Returnstatus=0 ! Signal 3,20
  Goto outerr ! OTHOPT
End If 
If H5[6] ! in quotes  - OREF[2] in orders
  If HFAX[0]
L_11050: Rem
    !Print @0,23;'CL';"THIS ORDER WAS PREVIOUSLY FAXED, REFAX IT AGAIN? (Y/<N>)  ";
    !Input Len 16384 + 1;""RESP$
    !If RESP$ = "N" Or RESP$ = "" Goto OTHOPT
    !If RESP$ <> "Y" Print 'RB'; \ Goto L_11050
    Goto L_11080
  End If 
  !Print @0,22;'CL';"FAX THIS ORDER NOW? (Y/<N>) ";
  !Input Len 16384 + 1;""RESP$
  !Call String(1,RESP$)
  !If RESP$ = "N" Or RESP$ = "" Goto OTHOPT
  !If RESP$ <> "Y" Print 'RB'; \ Goto FAXCONF
L_11080: Rem Fax
  !Print 'CS'
  NO = h5[6] ! OREF[2]
  STATUS = 1
  S9[6] = 291
  SWPSRC = 208
  !Swap 2,"OP268SFAX"
  !Print 'CS'
  Gosub GET_CURRENT_DATE \ Gosub DATE2NUM \ D8 = X2
  HFAX[0] = 1
  HFAX[1] = D8
  Mat Write #8,R[8],466;HFAX;
End If 
Goto OTHOPT
FAXVEND: Rem fax the vendor form
WORK$ = " ",WORK$;WORK$[1,6] = H0[7] Using "######";TOTFAXLINE = 0
LINE_LOOP: Rem
Search #11,3,1;WORK$,REC_QOL,E \ If E Goto END_LINE_LOOP
TEMP = WORK$[1,6] \ If TEMP <> H0[7] Goto END_LINE_LOOP
TOTFAXLINE = WORK$[7,9]
Goto LINE_LOOP
END_LINE_LOOP: Rem
Gosub EDT_FAXLINE
S9[4] = 291
QOLREC = R[11]
!Swap 2,"op291faxvend"
Goto OTHOPT
EDT_FAXLINE: Rem
!Print @0,22;'CE';"Enter the starting quote line number:  ";
J0$ = "3 00044022"
J5$ = ""
J1 = 1
!Print @20,16;'CL';
!Gosub ISINPUT
SFAXLINE = J1
!Print @0,22;'CE';"Enter the ending quote line number:  ";
J0$ = "3 00044022"
J5$ = ""
J1 = TOTFAXLINE
!Print @30,16;'CL';
!Gosub ISINPUT
EFAXLINE = J1
If SFAXLINE <= 0 Or SFAXLINE > EFAXLINE Or EFAXLINE > TOTFAXLINE
  J7$ = "Invalid line number, please try it again! (Total line number: "
  J7$ = J7$ + Str$(TOTFAXLINE) + ")"
  message$=J7$;returnstatus=0 ! Gosub ISERRMSG
  Goto OutErr ! EDT_FAXLINE
End If 
Return 
SEND2ORD: Rem "option to send Line to Order Create
Mat Read #11,R[11],260;S3;
Mat Read #11,R[11],168;L7;
Mat Read #8,R[8],104;H5;
Mat read #8,r[8],512;OREF;
If S3[14] And L7[7] ! "stuff entered?
  K5$ = " ",K5$;K5$ = H0[7] Using "######";MORPRDS = 0;ZLN = 0
CHK4LINES: Rem "check if >1 line
  Search #11,3,1;K5$,R[97],E \ If E = 2 Goto QCRTORD
  If E Gosub ERR_SEARCH
  X2 = K5$[1,6] \ If X2 <> H0[7] Goto QCRTORD
  Read #11,R[97],8;L3[0];
  Read #11,R[97],256;S2[0];
  If S2[0] = 3 Let ZLN = ZLN + 1 \ Goto CHK4LINES
  MORPRDS = MORPRDS + 1
  Goto CHK4LINES
QCRTORD: Rem "
  !Print @0,22;'CE';"CREATE ORDER FROM THIS LINE? (Y/<CR>)  N";'ML';
  !Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
  !If ANS$ = "" Let ANS$ = "N"
  !If ANS$ = "N" Goto OTHOPT
  If h5[6] ! OREF[2] ! "already order entered?
QORDALRDY: Rem "
    !Print @0,22;'CE';"ORDER";OREF[2];"CREATED PREVIOUSLY. CONTINUE? (Y/N)  ";
    !Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
    !If ANS$ <> "Y" And ANS$ <> "N" Goto QORDALRDY
    If ANS$ = "N" Goto OTHOPT
  End If 
  If MORPRDS > 1 ! "more than this line
QSNDALL: Rem "
    !Print @0,22;'CE';"THERE ARE MORE LINES ON THIS QUOTE!";
    !Print @0,23;"SEND ALL LINES ON QUOTE? (<CR>/N)  Y";'ML';
    !Input Len 16384 + 1;""ANS$ \ Call String(1,ANS$)
    If ANS$ = "" Let ANS$ = "Y"
    If ANS$ <> "Y" And ANS$ <> "N" Goto QSNDALL
    If ANS$ = "N" Let MORPRDS = 99;ZLN = 0
    If ANS$ = "Y" Let ZLN = 1;MORPRDS = 0
  End If 
  S9[0] = 0;S9[1] = R[5];S9[2] = R[8];S9[6] = 291;S9[7] = L3[2]
  If ZLN And MORPRDS <= 1 Let S9[7] = 0
  !Window Open @0,0; Size 80,24;
  !Swap 2,"MX286A"
  !Window Close 
  Read #8,R[8],128;H5[6];
  !mat read #8,r[8],524;OREF[2];
  If h5[6] ! OREF[2]
    !Print @0,22;'CE';"ORDER";OREF[2];"CREATED FOR THE LINE";
  Else 
    !Print @0,22;'CE';"NO ORDER CREATED FOR THE LINE";
  End If 
  !Signal 3,20
End If 
Goto OTHOPT
RELOADQVN: ! submit of all vendor lines of quote line
! first delete orig lines
K1$ = " ",K1$
K1$[1,6] = H0[7] Using "######"
K1$[7,9] = L3[2] Using "###"
DQLVDLOOP: Rem "
Search #ch_qvn,3,1;K1$,R[35],E \ If E = 2 Goto DELQVLDONE
If E Gosub ERR_SEARCH
X2 = K1$[1,6] \ If X2 <> H0[7] Goto DELQVLDONE
X2 = K1$[7,9] \ If X2 <> L3[2] Goto DELQVLDONE
search #ch_qvn,5,1;k1$,R,E \ if e gosub err_search
let r=r[35];e=3
search #ch_qvn,1,0;k1$,r,E \ if e gosub err_search
goto DQLVDLOOP
DELQVLDONE: ! finish - now reload
if not(l3[0])
	R[3] = L4[0];NONSTK = 0
	Mat Read #3,R[3],156;B;
	  Mat Read #3,R[3],256;A;
	  Mat Read #3,R[3],460;A1;
	  Mat Read #3,R[3],512;PFU1;
	  Mat Read #3,R[3],554;PFU2;
Else
	NONSTK=1
	gosub L_30000 ! for convert
endif
call dxget("NUMQVLINES",tmp$)
let numqvl=tmp$
if numqvl<=0 or numqvl>99999 or fra(qvl)
	returnstatus=0
	message$="Invalid number of vendor lines"
	goto outerr
endif
ol1v=0
for q99=1 to numqvl
	Call dxget("VEND"+Str$(Q99),tmp$)
	qlvend=tmp$
	K3$ = " ",K3$;K3$ = QLVEND Using "######"
	Search #2,2,1;K3$,R[2],E \ If E > 1 Gosub ERR_SEARCH
	if e goto BADFLDBP
	call dxget("RFP"+Str$(Q99),tmp$)
	qlfax=0 \ if UCase$(RTrim$(tmp$))="Y" let qlfax=1
	call dxget("MAINVEND"+Str$(Q99),tmp$)
	qlvsel=0 \ if UCase$(RTrim$(tmp$))="Y" let qlvsel=1
	if ol1v=1 let qlvsel=0 ! only 1 main vend per quote line!!
	call dxget("DATE"+Str$(q99),tmp$) ! should be MM/DD/YYYY
	TMP1$=chkDteFrmt$(E$,TMP$) ! make sure it is!
	x$=tmp1$[9,10]+tmp1$[1,2]+tmp$[4,5] ! to yymmdd
	qlfaxdate=x$
	if qlfaxdate<101 or qlfaxdate>991231 let qlfaxdate=0
	call dxget("COST"+str$(q99),tmp$)
	vcost=tmp$
	let cnvtu[0]=UN[0];CNVTU[1]=0;CNVTU[2]=2
	CNVTA=VCOST \ GOSUB CONVERT
	qlcost=amount \ if qlcost<0 let qlcost=0 ! no neg cost!
	if qlcost=0 let qlvsel=0 ! cannot select if no cost!
	! ok - now add to file
	K1$ = " ",K1$;K1$[1,6] = H0[7] Using "######"
	K1$[7,9] = L3[2] Using "###"
	K1$[10] = QLVEND Using "######"
	Search #ch_qvn,2,1;K1$,R[35],E \ If E > 1 Gosub ERR_SEARCH
	If E = 0 Return 
	E = 2;R[35] = 0
	Search #ch_qvn,1,0;K1$,R[35],E \ If E Gosub ERR_SEARCH
	Search #ch_qvn,4,1;K1$,R[35],E \ If E Gosub ERR_SEARCH
	Gosub WRITE_QLV
	if qlvsel=1 and qlcost ! vendor is main and has cost
		let ol1v=1
		S3[14] = QLVEND ! VENDOR
		L7[7] = QLCOST ! GL COST
		Mat Write #11,R[11],168;L7;
		Mat Write #11,R[11],260;S3;
	endif
	BADFLDBP: ! bypass whole thing if no good
next q99
return
WRITE_QLV: Rem "
Write #ch_qvn,R[35],0;QLFAX;
Write #ch_qvn,R[35],2;QLFAXDATE;
Write #ch_qvn,R[35],6;QLCOST;
Write #ch_qvn,R[35],12;QLVEND;
Write #ch_qvn,R[35],16;H0[7];
Write #ch_qvn,R[35],20;L3[2];
Write #ch_qvn,R[35],22;QLVSEL;
Return 
NUM2DATE: Rem *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
x$=PDate$(X2)
!X$ = " ",X$ \ X$[10] = ""
!X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
!X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
!X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
!X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
DATE2NUM: Rem *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
JUL2DATE: Rem REM DATE JULIAN X2 TO X$
DT3[0] = X2;FLAG = 1;X$ = " "
If X2 <= 0 Let X$ = " ",X$ \ Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YMD2JUL: Rem  REM  CONVERT YYMMDD TO JULIAN (RETURN=NOGOOD, +1=OKAY)
X$ = X2 Using "&&&&&&"
Call DateToJulian(1,X$,X$,E) \ If E Return 
X2 = X$[1,5]
Return 1
JUL2YMD: Rem  REM CONVERT JULIAN TO YYMMDD
DT3[0] = X2;DT3[1] = X2;FLAG = 0
If X2 <= 0 Return 
Call "JULIANUTIL",DT3[],X$,FLAG
Return 
YM2LONGYEAR: Rem Rem Convert YYMM to YYYYMM
If X2 <= 0 Return 
X$ = X2 Using "&&&&"
DT3[0] = X$[1,2];DT3[1] = X$[3,4]
If DT3[0] > 67 Let DT3[0] = 1900 + DT3[0]
If DT3[0] < 68 Let DT3[0] = 2000 + DT3[0]
X$[1,4] = DT3[0] Using "&&&&"
X$[5,6] = DT3[1] Using "&&"
X2 = X$[1,6]
Return 
BLD_QVLN: Rem "build Quote Vendor Line File
X$ = " [1:32] files/" + F$
Build #35,X$
R[35] = 8
Search #35,0,1;K1$,R[35],E \ If E Gosub ERR_SEARCH
R[35] = 1000
Search #35,0,0;K1$,R[35],E \ If E Gosub ERR_SEARCH
Close #35
x$="chmod go+rw files/"+F$
SYSTEM X$  ! make sure rw for everyone!
Return 
L_30000: Rem ===== set units for conversions (stock/nonstock version)
If ZLINE Goto L_30099
A[6] = L6[4];A[5] = UNF[5] \ If Not(A[5]) Let A[5] = 1;UNF[5] = 1
B[23] = L6[2];A1[3] = UNF[4] \ If Not(A1[3]) Let A1[3] = 1;UNF[4] = 1
PFU1[0] = EUN[0];PFU1[1] = UN[0]
PFU1[2] = UN[1];PFU1[3] = UN[2]
PFU1[4] = EUN[1]
PFU1[5] = 0;PFU1[6] = 0;PFU1[7] = 0
PFU1[8] = UN[0];PFU1[9] = UN[0];PFU1[10] = EUN[1]
PFU1[11] = UN[2];PFU1[12] = UN[1]
If Not(NONSTOCK) Goto L_30060
PFU1[13] = UN[0];PFU1[16] = EUN[0];PFU1[17] = EUN[0]
PFU1[18] = UN[0];PFU1[19] = UN[0]
L_30060: PFU2[0] = UNF[0];PFU2[1] = UNF[1]
PFU2[2] = UNF[2];PFU2[3] = UNF[3]
PFU2[4] = 0;PFU2[5] = 0;PFU2[6] = 0
For X1 = 1 To 4
  For X2 = 0 To X1 - 1
    If PFU1[X1] = PFU1[X2] Let PFU1[X1] = 0;PFU2[X1 - 1] = 0
  Next X2
Next X1
L_30099: Return 
SET_EDIT_STATUS: Rem "=================================== 92 = EDIT
If H0 >= 90 Return 
Read #8,R[8],416;H6[2]
H6[2] = H0
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #8,2,1;A$,R1,E \ If E = 1 Goto INSERT_WRITE
If E Gosub ERR_SEARCH
Search #8,5,1;A$,R1,E \ If E Gosub ERR_SEARCH
INSERT_WRITE: Rem
H0 = 92;LOCKPORT = Spc(6);A$[1,2] = H0 Using "##"
E = 0 \ Search #8,4,1;A$,R[8],E \ If E > 1 Gosub ERR_SEARCH
Write #8,R[8],0;H0
Write #8,R[8],64;LOCKPORT
Write #8,R[8],416;H6[2];
Return 
CLEAR_EDIT_STATUS: Rem "=================================== RESET STATUS
If H0 < 90 Return 
Read #8,R[8],416;H6[2]
Read #8,R[8],64;LOCKPORT
If H6[2] <= 0 Let H6[2] = 1
A$ = " ",A$;A$[1,2] = H0 Using "##";A$[3] = H0[7] Using "######"
Search #8,2,1;A$,R1,E \ If E = 1 Goto L_17420
If E Gosub ERR_SEARCH
Search #8,5,1;A$,R1,E
If E Gosub ERR_SEARCH
L_17420: A$[1,2] = H6[2] Using "##"
E = 0
Search #8,4,1;A$,R[8],E
If E > 1 Gosub ERR_SEARCH
H0 = H6[2];H6[2] = 0
LOCKPORT = 0
Write #8,R[8],0;H0
Write #8,R[8],416;H6[2]
Write #8,R[8],64;LOCKPORT;
Return 

GET_CURRENT_DATE: Rem GET CURRENT DATE
U5$ = ""
J4$ = "JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"
Call Time(U5$)
For K1 = 1 To 12
  If U5$[1,3] = J4$[K1 * 3 - 2,K1 * 3] Goto GCD_7940
Next K1
e$="DATE ERROR - STOP AT get_current_date" \ Error 10000
GCD_7940: X$ = "/",X$
X$[1,2] = K1 Using "##"
X$[4,5] = U5$[5,6]
X$[7,8] = U5$[11,12]
For K1 = 1 To 8
  If X$[K1,K1] = " " Let X$[K1,K1] = "0"
Next K1
Return 
Rem {begin call.input.i}
ISINPUT: Rem  Drop-in change to Call Input   G.Doscher  10/29/96
!Call "Input",J1,J$,J0$,J1$,J4$,J5$
Return 
ISERRMSG: Return ! X1 = Len(J7$)
!Window Open @(38 - X1 / 2),(Msc(34) / 2 - 2); Size (X1 + 6),3; Using ""
!Print @0,0;" ";'K0 BR RB';" ";J7$;" ";'ER'; \ Signal 3,X1 / 2 + 10
!Print 'K1'; \ Window Close \ Return 
ISDUNPACK: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
ISDPACK: Rem  *PACK DATE    X$ TO X2      V1.0  4/04/84  G.DOSCHER
X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
Return 
Rem {end call.input.i}
Rem {begin rtn.convert.s}
CONVERT: Rem "UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Or CNVTU[2] = 4 Goto CVTSTARTA
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto CVTDONE
If CNVTU[2] = 0 Goto CVTSTARTA
If Not(CNVTA) Let AMOUNT = 0 \ Goto CVTDONE
CVTSTARTA: !
CVTSTARTB: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto CVTDONE
If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
CVTDONE: Return 
OUTERR: ! something is amiss
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
  call AddToStr(e$,rstr$,WebStr$)
	! done with it
  call SetOutPut(e$,rstr$)
! fall on out
Rem {end rtn.convert.s}
OUTEND: Rem "outta here
END
!Close 
!Chain "MX000"
Rem {begin rtn.error.s}
ERR_SEARCH: Rem
ENUM = E + 1000;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM ",MSC$(4)
call programdump("tmp/mx291se!","")
ERROR 11000
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
include "src/callmainerrnet.inc"
end
Rem {end rtn.error.s}