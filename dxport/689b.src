! >>> Program 689b
!
! description Inventory Value by Commodity
!
! loadsave -w -n 100,10 -o prog/dxport/689b.dl4 src/689b.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: MAR 20, 2003  10:11:39
Rem /w/papermaster/r2002/
Rem  Copyright (c) 2003 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX689B - FILE VALUE - COMMODITY
Rem AUTHOR: DAVE  AUG 10, 1987
Rem LAST UPDATE: roman 07/29/1991  digits to sort by
!--- custom_customer$ --------------
! PCS jliu 2/25/03 cct165195 if the product's commodity code is "TIME", don't   
!    print the product info 
!
Declare Intrinsic Sub InpBuf,String,Time
!- Option Default Dialect IRIS1
Com 1%,PFU1[20],CNVTU[2],UN[2],3%,PFU2[6],CNVTA,A[33],UWORK[10]
If Err 0 Gosub ERR_TRAP
! - If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim Blank$[50] \ Blank$=" ",Blank$
dim EndParam$[50] \ EndParam$="z",EndParam$
!
Dim U5$[20],SUNIT$[4],CUNIT$[4],UNIT$[10]
Dim P1$[156],D$[35],P9$[50]
Dim 1%,Y7,Y8,Y9,F,X1,P1[1],PGBRK,FTIME,PSUTOT,WHLM[1],LM[1],TABS
Dim 2%,B1[24],A3,X2,C4[8]
Dim 3%,A1[33],A2[7],COST,UNIT,CUNIT,J,X3,T9[20],P3[3],W3[24],W5[12]
Dim 3%,PRPARC[2],PF_LOAD2,WHMISC[2]
Dim J$[40],CNAME$[30],J2$[20],J3$[40],J4$[60],J5$[10],ARDATE$[8],S$[4]
Dim K1$[50],K2$[4],K3$[4],X$[10],T9$[26],Z1$[50],K5$[60],COST$[4]
Dim 2%,Q0[1],PMASK$[12],custom_customer$[30]
Dim D1$[10]
Mat Read #1,19,50;P9$;
For J = 2 To 6
  Read J1 \ If J1 = -1 Goto L_830
  Read #1,88,J1;J$;
  Ropen #J,J$
L_830: Next J
Data "1792","2288","2528","1728","1744"
mat read #1,115,60;custom_customer$;
custom_customer$=UCase$(rtrim$(custom_customer$))
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Gosub ERR_TRAP
J9 = 55 \ If J8 Let J9 = 18
!
! dx add xport reporting code
DXSetup:
Dim tmp$[500],tmp1$[300],tmp2$[300]
Dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[500],bsdel$[10],esdel$[10],rdel$[10]
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"689c",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
!  dx add xport reporting code
call dxget("begcode",tmp$) \ K2$=UCase$(tmp$),Blank$ ! starting product code
call dxget("endcode",tmp$) \ K3$=UCase$(tmp$),EndParam$ ! ending product code
call dxget("pgbrk",tmp$) \ if tmp$="" let PGBRK=0 else PGBRK=1 ! page break, 1=YES
call dxget("commdigit",tmp$) \ if tmp$="" let Comm_Digit=4 else Comm_Digit=tmp$ ! # of digit for sort
call dxget("whse",tmp$) \ if tmp$="" let WHSE=0 else WHSE=tmp$ ! warehouse
Call dxget("unit",tmp$) \ unittype=tmp$ ! avg cost
call dxget("pamu",tmp$) \ if tmp$="" let PAMU=0 else PAMU=1 ! actual monthly usage
Call dxget("zerovl",tmp$) \ if tmp$="" let ZEROVL=0 else ZEROVL=99! include zero on hand
call dxget("prntneg",tmp$) \ if tmp$="" let PRNTNEG=0 else PRNTNEG=99 ! include negative quantity
!  dx end
!
! commodity section
if K3$<K2$ let e$="Invalid ending code, must be greater than starting commodity code!" \ error 10000
if Comm_Digit<1 or Comm_Digit>4 let e$="Invalid sort commodity code, must be between 1 and 4!" \ error 10000
!
! warehouse
If WHSE<0 Or WHSE>99 let e$="Invalid  warehouse, must be between 0 and 99!" \ error 10000
if WHSE=0 let PAMU=0 ! all warehouses, no actual monthly usage
!
! average cost
U5$ = " ",U5$
If UnitType = 1 Let U5$ = "AVG. COST"
If UnitType = 2 Let U5$ = "BASE COST"
If UnitType = 3 Let U5$ = "WHSE COST "
If UnitType = 4 Let U5$ = "LAST COST"
If UnitType = 5 Read #1,18,220;D1$; \ U5$ = rtrim$(D1$[1,10])
If UnitType = 6 Read #1,18,230;D1$; \ U5$ = rtrim$(D1$[1,10])
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  try call dxclose() else rem
End If 

FTIME=1
STARTPRNT: Rem "
!
if J8 ! dx xml headings
  !
  tmp$="COMMODITY CODE",fdel$,"COMMODITY DESCRIPTION",fdel$
  tmp$=tmp$,"ITEM CODE",fdel$,"DESCRIPTION",fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,"DESCRIPTION 2",fdel$
  tmp$=tmp$,"MB",fdel$,"COMM",fdel$
  tmp$=tmp$,"U/M",fdel$
  if PAMU let tmp$=tmp$,"A.M.U.",fdel$,"M.O.H.",fdel$
  tmp$=tmp$,"AVAILABLE",fdel$,"ON HAND",fdel$
  tmp$=tmp$,U5$,fdel$,"COST U/M",fdel$
  tmp$=tmp$,"EXT COST",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
end if
!
! - Window Off 
! - Print @0,22;"Printing...please wait";'CE'; \ Signal 3,0
! - If J8 Print 'CS';
! - If Err 0 Gosub ERR_ESCAPE
K1$ = K2$ \ J1 = 90 \ J2 = 0
Search #2,2,3;K1$,R1,E
If Not(E) Goto L_2010
L_2000: Search #2,3,3;K1$,R1,E
If E = 2 Goto L_9100
L_2010: If K1$[1,Len(K3$)] > K3$ Goto L_9100
Mat Read #2,R1,0;P1$;
Mat Read #2,R1,156;B1;
Mat Read #2,R1,256;A1; \ Mat Read #2,R1,256;A;
Mat Read #2,R1,460;A2; \ Mat Read #2,R1,508;A3;
Mat Read #2,R1,512;PFU1; \ Mat Read #2,R1,554;PFU2; \ Mat Read #2,R1,894;C4;
Mat Read #2,R1,596;PRPARC; \ Mat Read #2,R1,938;PF_LOAD2;
if custom_customer$="PCS"
	if P1$[152,155]="TIME" goto L_2000
Endif
Gosub L_10300 \ Goto L_2000
If P9$[32,32] = "Y" Gosub L_69000
Gosub L_10200
T9 = 0 \ T9[1] = 0 \ T9[2] = 0 \ T9[3] = 0
Gosub L_2500 ! get on hand from sprodlot
if custom_customer$="ZEPHYR" IF WHSE IF NOT(GOT_SP_LOT) GOTO L_2000	! " custom for zephyr
If P1$[152,155] = "MACH" Let A1 = 0
If P1$[152,155] = "LABR" Let A1 = 0
If P1$[152,155] = "TIME" Let A1 = 0
T9[2] = A1 - A1[1] - A1[3]
If P9$[28,28] = "Y" Let T9[2] = T9[2] + A1[2]
If B1[20] = 0 Let B1[20] = 1
If prntneg Goto L_2062
If A1 < 0 Goto L_2065
L_2062: T9[3] = FNR(A1 * (COST))
L_2065: If Not(ZEROVL) If A1 = 0 Goto L_2000
If Not(prntneg) If A1 < 0 Goto L_2000
Y9 = Y8;T9[4] = 0 \ If Not(PAMU) Goto L_2150
T9[4] = W3[8] \ If T9[4] > 0 Let T9[0] = T9[4] \ Goto L_2100
T9[4] = W3[9]
T9 = T9[4]
L_2100: T9[1] = 0 \ If T9 Let T9[1] = FNR(A[0] / T9)
If WHSE If T9 Let T9[1] = FNR(A1[0] / T9)
L_2150: Gosub L_10000
If S$[1,COMM_DIGIT] <> K1$[1,COMM_DIGIT] 
	gosub l_3100
	if pgbrk j1=100
endif
Gosub L_5800
If S$[1,COMM_DIGIT] <> K1$[1,COMM_DIGIT] gosub l_3200
Gosub L_5000
Gosub L_2200
Goto L_2000
!
L_2200: Rem "==================================== calc totals
T9[6] = T9[6] + A1[0] \ T9[10] = T9[10] + A1[0]
T9[8] = T9[8] + T9[3] \ T9[12] = T9[12] + T9[3]
Return 
!
L_2500: Rem GET ON HAND FROM SPRODLOT
A1[0] = 0 \ A1[1] = 0 \ A1[3] = 0
J4$ = " ",J4$ \ J4$ = P1$[140,151]
LET GOT_SP_LOT=0		! " custom usage for zephyr
L_2530: Search #4,3,2;J4$,R4,E
If E Return 
If J4$[1,12] <> P1$[140,151] Return 
Mat Read #4,R4,66;P1;
Mat Read #4,R4,82;P3;
If WHSE If WHSE <> P1 Goto L_2530
LET GOT_SP_LOT=99		! " custom usage for zephyr
A1 = A1 + P3[0] - P3[1]
A1[3] = A1[3] + P3[3]
Goto L_2530
!
read_comm_label: Rem "================================= commodity code
J2$ = " ",J2$ \ J2$ = K1$[1,4]
D$[1,16] = "COMM NOT FOUND"
Search #3,2,1;J2$,R2,E
If not(E) Mat Read #3,R2;D$;
Return 
!
L_3100: Rem "subtotal?
if J8 goto L_3160 ! dx xml
!
J1 = J1 + 2
If J1 > J9
If S$="" Goto L_3160
  If PGBRK
    PSUTOT = 1 \ Gosub L_5800
  Else 
    Gosub L_5800
  End If 
End If 
If FTIME Goto L_3160
Print #0;""
Print #0;"SUB-TOTALS ";
If COMM_DIGIT = 4 
  Print #0;D$[1,16];
Else 
  Print #0;J2$[1,COMM_DIGIT];
End If 
Print #0; Using "---------#.##"; Tab 88;T9[6];
Print #0; Using "----------#.##"; Tab 117;T9[8]
Print #0;" " \ LET J1=J1+3 ! 3rd line!
L_3160: T9[6] = 0 \ T9[8] = 0 \ ftime=0
If PGBRK Let PSUTOT = 0
Return 
!
L_3200: Rem "============= commodity desc heading
gosub read_comm_label
if J8 return ! dx xml
!
If COMM_DIGIT = 4 Or Not(PGBRK)
  Print #0; Tab 10;"COMMODITY CODE: ";D$[1,16]
Else 
  Print #0; Tab 10;"COMMODITY BREAK BY ''";J2$[1,COMM_DIGIT];"''"
End If 
Print #0;" "
J1 = J1 + 2
s$=k1$
Return 
!
L_4000: Rem "=========================== grand totals
if J8 return ! dx xml
!
Gosub L_5800
Print #0;""
Print #0;"TOTALS";
Print #0; Using "---------#.##"; Tab 88;T9[10];
Print #0; Using "----------#.##"; Tab 117;T9[12]
Print #0;" "
Return 
!
L_5000: Rem "====================================== print line
if J8
  gosub read_comm_label ! commodity
  tmp$=K1$[1,4],fdel$,rtrim$(D$[1,16]),fdel$
  tmp$=tmp$,P1$[140,151],fdel$,rtrim$(P1$[9,38]),fdel$
  if P9$[26,26]="Y" let tmp$=tmp$,rtrim$(P1$[63,92]),fdel$
  tmp$=tmp$,P1$[139,139],fdel$,P1$[152,155],fdel$
  tmp$=tmp$,SUNIT$,fdel$
  if PAMU let tmp$=tmp$,T9 Using "-------#.##",fdel$
  if PAMU let tmp$=tmp$,T9[1] Using "-----#.##",fdel$
  tmp$=tmp$,T9[2] Using "-------#.##",fdel$
  tmp$=tmp$,A1[0] Using "-------#.##",fdel$
  tmp$=tmp$,COST Using PMASK$,fdel$,CUNIT$,fdel$
  tmp$=tmp$,T9[3] Using "-------#.##",fdel$
  !
  call addtostr(e$,rstr$,tmp$+rdel$)
  return
endif
!
Print #0; Tab 0;P1$[140,151];
Print #0; Tab 13;P1$[9,38];
Print #0; Tab 44;P1$[139,139];
Print #0; Tab 47;P1$[152,155];
Print #0; Tab 52;SUNIT$;
If Not(PAMU) Goto L_5040
Print #0; Using "-------#.##"; Tab 56;T9;
Print #0; Using "-----#.##"; Tab 68;T9[1];
L_5040: Print #0; Using "-------#.##"; Tab 78;T9[2];
Print #0; Using "-------#.##"; Tab 90;A1[0];
Print #0; Using PMASK$; Tab 103;COST;" /";CUNIT$;
Print #0; Using "-------#.##"; Tab 120;T9[3]
If P9$[26,26] = "Y" Print #0; Tab 13;P1$[63,92] \ J1 = J1 + 1
J1 = J1 + 1
Return 
!
L_5800: Rem "====================================== headings
if J8 return ! dx xml
if j1<=j9 return
! - If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 If Not(J8) Print #0;"\14\";
J2 = J2 + 1 \ J1 = 4
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;ARDATE$; Tab (64 - Len(CNAME$) / 2);CNAME$; Tab 120;"PAGE";J2
Print #0;" - 689B - ";T9$;
Print #0; Tab 44;"I N V E N T O R Y   V A L U E   R E P O R T"; Tab 120;" "
TABS = 58
If prntneg Or ZEROVL Let TABS = 48
If prntneg Let TABS = 43
If ZEROVL And prntneg Let TABS = 35
If Not(WHSE) Print #0; Tab TABS;"FOR ALL WAREHOUSES ";
If WHSE Print #0; Using "FOR WAREHOUSE ## "; Tab TABS;WHSE;
If ZEROVL Print #0;"WITH ZERO ON HAND ";
If prntneg If ZEROVL Print #0;"AND ";
If prntneg Print #0;"WITH NEGATIVE COSTS EXTENDED"
Print #0;"\15\"
Print #0; Tab 0;"ITEM CODE";
Print #0; Tab 13;"DESCRIPTION";
Print #0; Tab 44;"MB";
Print #0; Tab 47;"COMM";
Print #0; Tab 52;"U/M";
If Not(PAMU) Goto L_5890
Print #0; Tab 61;"A.M.U.";
Print #0; Tab 71;"M.O.H.";
L_5890: Print #0; Tab 80;"AVAILABLE";
Print #0; Tab 95;"ON HAND";
Print #0; Tab 104;U5$;
Print #0; Tab 123;"EXT COST"
Print #0;" "
!If FTIME And PGBRK Goto L_5990
If PGBRK And PSUTOT Goto L_5990
L_5990: Return 
!
! - X$ = " ",X$ \ X$[10] = ""
! - X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
! - X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
! - X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
! - X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
! - Return 
!
OUTEND: Rem EXIT PROGRAM
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
try call dxclose() else rem
End 
!
! - Print 'CS' \ Close 
! - Chain "MX000"
!
L_9100: Rem END OF THIS RANGE
Gosub L_3100 \ Gosub L_4000
! - If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
Goto OUTEND
! 
L_10000: Rem "========================== convert to desireed u/m's
CNVTU[0] = 0
CNVTU[1] = PFU1[11]
CNVTU[2] = 2
CNVTA = COST \ Gosub L_20000 \ COST = AMOUNT
CNVTU[1] = PFU1[8]
CNVTU[2] = 1
For X = 0 To 3
  If X = 3 Goto L_10110
  If X = 1 Goto L_10130
  If X = 0 Let CNVTU[2] = 5
  CNVTA = T9[X] \ Gosub L_20000 \ T9[X] = AMOUNT
L_10110: CNVTA = A1[X] \ Gosub L_20000 \ A1[X] = AMOUNT
L_10130: Next X
If PFU1[8] = -1 Let SUNIT$ = "CWT "
If PFU1[8] = -3 Let SUNIT$ = "LB  "
If PFU1[8] > 0 Mat Read #5,PFU1[8],10;SUNIT$;
If PFU1[11] = -1 Let CUNIT$ = "CWT "
If PFU1[11] = -3 Let CUNIT$ = "LB  "
If PFU1[11] > 0 Mat Read #5,PFU1[11],10;CUNIT$;
Return 
!
L_10200: Rem "============================================== SET COST
If UnitType = 1 ! "average
  If W3[15] and P9$[32,32] = "Y" Let COST = W3[15] Else Let COST = B1[21]
End If 
If UnitType = 2 ! "base
  If W3[18] and P9$[32,32] = "Y" Let COST = W3[18] Else Let COST = C4[4]
End If 
If UnitType = 3 ! "warehouse
  If W3[17] and P9$[32,32] = "Y" Let COST = W3[17] Else Let COST = B1[8]
End If 
If UnitType = 4 ! "last
  If W3[16] and P9$[32,32] = "Y" Let COST = W3[16] Else Let COST = B1[10]
End If 
If UnitType = 5
  If W3[14] and P9$[32,32] = "Y" Let COST = W3[14] Else Let COST = PF_LOAD2
End If 
If UnitType = 6
  If WHMISC[2] and P9$[32,32] = "Y" Let COST = WHMISC[2] Else Let COST = PRPARC[2]
End If 
Return 
!
L_10300: Rem WAREHOUSE
WHMISC[2] = 0
For X = 0 To 24 \ W3[X] = 0 \ Next X
For X = 0 To 12 \ W5[X] = 0 \ Next X
If Not(WHSE) Return 1
K5$ = " ",K5$
K5$[1,12] = P1$[140,151]
K5$[13,14] = WHSE Using "##"
Search #6,2,1;K5$,R5,E
If E Return 
Mat Read #6,R5,78;W3;
Mat Read #6,R5,228;W5; \ Mat Read #6,R5,800;WHMISC;
Return 1
!
L_20000: Rem UNIT CONVERSION RETURNS AMOUNT  (rev 01/07/1992)   ! 20040 REM
If CNVTU[2] = 3 Goto L_20050
If CNVTU[2] = 1 And CNVTU[1] = CNVTU[0] Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[0] = -2 Or CNVTU[1] = -2 Let AMOUNT = CNVTA \ Goto L_20160
If CNVTU[2] = 0 Goto L_20050
If Not(CNVTA) Let AMOUNT = 0 \ Goto L_20160
L_20050: goto L_20120 ! - was If Spc(4) > 1280 Goto L_20120
Swap 1,"MXPRCONV"
If CNVTU[2] = 3 Goto L_20160
L_20080: Signal 2,X1,AMOUNT,FLAG \ rem - If X1 = -1 Let E = 0 \ Gosub ERR_SEARCH
If X1 <> Spc(6) Goto L_20080
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
Goto L_20160
L_20120: Rem "====== unibasic 5+ logic
Call "MXPRCONV5",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG
If CNVTU[2] = 0 Goto L_20160
! - If FLAG Let E = FLAG \ Gosub ERR_SEARCH
AMOUNT = CNVTA
L_20160: Return 
!
L_69000: Rem ===== check/set warehouse with valid data
If P9$[32,32] = "Y" ! "warehouse pricing turned on
  X2 = W3[19] + W3[20] + W3[21] + W3[22] + W3[23] + W3[24]
  If WHPARC[1] Let C4[3] = WHPARC[1] Else If X2 Let C4[3] = 0
  For X2 = 20 To 25
    If Not(W3[X2 - 1]) Let W3[X2 - 1] = A[X2]
  Next X2
  If Not(WHLM[0]) And Not(W3[17]) Let WHLM[0] = LM[0]
  If Not(W3[17]) Let W3[17] = B1[8]
  If Not(WHLM[1]) And Not(W3[14]) Let WHLM[1] = LM[1]
  If Not(W3[14]) Let W3[14] = PF_LOAD2
  If Not(W3[15]) Let W3[15] = B1[21]
  If Not(W3[16]) Let W3[16] = B1[10]
  If Not(W3[18]) Let W3[18] = C4[4]
  If Not(WHMISC[2]) Let WHMISC[2] = PRPARC[2]
  If WHPARC[0] Let B1[22] = WHPARC[0]
  If Not(W2[3]) Let W2[3] = B1[24]
End If 
Return 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
