!
! serp450trans.dl4 - Full transactional Commission report
!
! originated as mx450 - many modifications later...
!
! loadsave -w -n 100,10 -o prog/dxport/serp450trans.dl4 src/serp450trans.src
!

include "src/copyright.inc"
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
Declare External Function AddToMYReports
Declare External Function openprinter

External Lib "dxblockcustom.lib"
Declare External Sub blockPrintersDropList
External Lib "ubsfunc.dl4"
declare external function GetUIDSalesrep
Declare External Sub getportdefault,GetCostLevels
Declare External Function OpenFile,PDate$,FormatDate2$,getuidinfo$,JDate$
Declare External Function chkDteFrmt$,buildsort
Declare Intrinsic Sub DateToJulian,FindF,InpBuf,String,VerifyDate,programdump
Declare Intrinsic Function findchannel

Declare External Function OpenHypoLog
Declare External Sub WriteHypoLog

External Lib "ubsprconv.dl4"
Declare External Function Xunit$

! Option Default Dialect IRIS1

!
try

! local subs and functions
Declare Sub OpenFilesGetControlInfo,CheckForHistory,ErrorOut,ValidateInput
Declare Sub ConvertYYMMDD2Jul,UnpackDate,SortCommFile,GetCustomer
Declare Sub BuildSummarySort,SalesmanTotal,CustomerTotal,GetSalesName
Declare Sub CheckAR,CheckARHistory,UpdateTotals,PrintHeadings
Declare Sub PrintSalesman,PrintCustomer,PrintLine,PrintAuditTrans
Declare Sub PrintTotals,PrintRepSummary,InsertRepSummaryRec
Declare Sub PrintInvoiceDetail,PrintSalesmanOrderTotal
Declare Sub DivisionTotal

Def FNW(H) = Sgn(H) * (Int(Abs(H) * 1 + .5) * 1)
Dim C1$[30],J$[75],J1$[75],J2$[20],J3$[40],J4$[75],J7$[50],K9$[50],J0$[10]
Dim J8$[8],J9$[50],K1$[50],K2$[20],K3$[20],S1$[30],Z1$[50],X$[10],SMAT$[1]
Dim P60$[50],CF$[1],P9$[50],COMP$[30],J5$[75],ARDATE$[10],TEMP$[10]
Dim Kinvh$[12],Kinvl$[14],OrderDesc$[20]
Dim 1%,Z2$[2],URECFLAG,invlS2[1],A0[11]
Dim 1%,ARMONTH,SplitFlag,CommSource,un[2]
Dim 1%,E,N3,N4,S4[1],X1,sw[20],repSecurity,cost_lev[3]
Dim 3%,A3[13],J,S2[1],T8[20],T9[20],S6[1],AmtPaid,OLM[6],l5[3],invlS3[17]
Dim 3%,T10[20],T11[38,20],S10,S7[2],PT8[5],PT9[5],PT10[5],4%,J1
Dim 2%,A2[5],J2,J3,J4,J7[2],J8,J9,N1,N2,S1[3],S3[1],S8,X2
Dim 2%,JDATE[1],ARDATE,DT3[1],JWDATE,SPAYDATE,EPAYDATE,JSPAYDATE,JEPAYDATE,JPAYDATE,3%
Dim 2%,JARPAYDATE,L4[3],CommBaseRate[4],SLSM[9],H0[12],commDiv
Dim K98$[50],SCRATCH$[80],SNAME$[15],F$[16],L1$[20]
dim 3%,r1,r3,r4,r5,r6,r7,r98,rinvh,rinvl
Dim 3%,GP,COST,PROFIT,PRIMTH,CURMTH,AMTPAID,COMMAMT,COMMDUE
Dim 3%,ARREF[1],X3[9],ocs1[3],LinePrice,LineCost,UNF[6],l7[12]
Dim 3%,D8[20],TD8[5],OREF[5]
! commission audit file vars
dim k7$[30]
dim 1%,as1[3],as4[1]
dim 2%,r7,as2[1]
dim 3%,as3[5],aorigcomm,as5[5]
dim source$[10],cas$[60],held_rstr$[100]

Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[600],msg$[40],rstr$[2000],webstr$[2000]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],bsdel$[10],esdel$[10],rdel$[10]
Dim ReportDir$[128],BaseName1$[128],Statusfile$[128],action1$[30],action2$[30],custom_customer$[30]
Dim blockid$[10]
Dim List$[100,100] ! for lists
! call dxopen() ! for standalone run
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$,Action1$,Action2$)
Call DXGet("BLOCKID",blockid$) \ blockid$=ucase$(rtrim$(blockid$))
doingSalesrepAudit = 0
if blockid$ = "450AUDIT"
	doingSalesrepAudit = 1
	repSecurity = GetUIDSalesrep(e$)
	if repSecurity < 0
		e$="User ID not on file!"
		error 10000
	end if
	Call GetCostLevels(e$,cost_lev[],IntCo,Userid$)
end if

mat read #1,115,60;custom_customer$;
Custom_customer$=UCase$(Trim$(custom_customer$))

sw[0] = 1	! print "amount paid" and "commission due" columns
sw[1] = 0	! save list of items that have commission paid to rep
		! for hypothetical commission report
select case custom_customer$
	case "CSS"
		sw[0] = 0
	case "PIEDMONT"
		sw[0] = 0
	case "GTI"
		sw[1] = 1
end select
sw[1] = 1

! build sort before opening any other files
if doingSalesrepAudit try close #9 else rem ! block ID - sort channel might already be open
X2=BuildSort(e$,20,0,9) ! build a sortwork on chan#9, keysize=20w/40C
call OpenFilesGetControlInfo()
Call CheckForHistory()
Call ValidateInput()
IF HIST sw[1] = 0 ! hypothetical build not valid for history
if not(returnStatus)
	call ErrorOut()
	goto OutEnd:
end if
returnstatus=1;message$="OK"

MAXLINES = 59 ! \ If SCREENPRINT Let MAXLINES = 20
LN = 99
! OK - build xml header if going to browser, otherwise show report in
! process
if screenprint ! xml 
	!<section>
	tmp$ = bsdel$,"450",fdel$,rdel$
	call addtostr(e$,rstr$,tmp$)
	! set headings
	if summ ! slsm /grand totals only
		tmp$="SLSM",FDEL$,"NAME",FDEL$
	Else ! slsm/cust/detail/grand
		tmp$="SLSM",FDEL$,"NAME",FDEL$
		tmp$=tmp$,"CUST",fdel$,"CUSTNAME",fdel$
		tmp$=tmp$,"INV/CM",fdel$,"DATE/ADJ/ITEM",fdel$
	Endif ! rest is standard
	tmp$=tmp$,"DIV",fdel$ ! always send
	If PRTCOST
		tmp$=tmp$,"GP%",fdel$,"COST",fdel$,"PROFIT",fdel$
	Endif
	! if not(arcode) tmp$=tmp$,"PRV MNTH",fdel$
	tmp$=tmp$,"SALES",fdel$
	if sw[0]
		tmp$=tmp$,"PAID",fdel$
	end if
	tmp$=tmp$,"COMM%",fdel$,"SPLT%",fdel$
	tmp$=tmp$,"COMMISSION",fdel$
	if sw[0]
		If PURGEFLAG = 1 And SUMM = 0 And PRT_PAIDONLY = 1
			tmp$=tmp$,"PAID DATE",fdel$
		Else
			tmp$=tmp$,"DUE",fdel$
		Endif
	end if
	If PURGEFLAG = 3 let tmp$=tmp$,"UNMRKD",fdel$
	tmp$=tmp$,rdel$
	call addtostr(e$,rstr$,tmp$)
Else ! normal print - send in process
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
Endif
Call SortCommFile()
If Not(SUMM) Call BuildSummarySort()

COUNT = 0;hdiv=-1
K1$ = N3 Using "###"
S10 = -1
if sortdiv let k1$=sdiv using "###"
! LOOP THROUGH SORTED COMMISSION FILE
do
	Search #9,3,1;K1$,R1,E \ If E > 2 Error 11000
	If E exit do
	Mat Read #2,R1,0;S1;
	Mat Read #2,R1,16;S2;
	Mat Read #2,R1,28;S3;
	Mat Read #2,R1,36;S4;
	Mat Read #2,R1,40;S6;
	Mat Read #2,R1,54;S7;
	MAT  READ #2,R1,112;ocs1;
	mat read #2,r1,136;SplitFlag;
	if HIST
		mat read #2,r1,146;commDiv;
	else
		mat read #2,r1,140;commDiv;
	end if
	COUNT = COUNT + 1
	If ARCODE If S4[0] <> ARCODE Goto SkipRecord ! wrong AR Month
	X2 = S1[3] \ call ConvertYYMMDD2Jul() 
	if x2 = -1 let X2 = 0
	JWDATE = X2
	! check date ranges (only used if not using AR period)
	If Not(ARCODE) If JWDATE < JDATE[0] Goto SkipRecord
	If Not(ARCODE) If JWDATE > JDATE[1] Goto SkipRecord
	! check salesrep range
	If S1[0] < N3 Goto SkipRecord
	If S1[0] > N4 exit do
	if sortdiv
		if hdiv=-1 let hdiv=k1$[1,3]
		if hdiv<>commDiv call divisionTotal()
		let hdiv=commDiv
	Endif
	! S8 is current salesman, s1 is new one
	If S8 If S8 <> S1
		Call SalesmanTotal() ! will call customer total
	else
		If S10<>-1 If S10 <> S3[1] Call CustomerTotal()
	end if
	If Not(S8) call GetSalesName()
	If S10<>S3[1] call GetCustomer()
	CommRecType = K1$[20,21]
	if sortdiv let commrectype=k1$[23,24] ! div
	call CheckAR()
	Rem CHECKING A/R WILL DETERMINE IF "PAID"(INCL DATE RANGE&MERCH AMT)
	If PRT_PAIDONLY = 1
		If ARPAID = 0 Goto SkipRecord
	End If 
	multiplier = 1
	If CommRecType = 6 or CommRecType = 7 or CommRecType = 9 ! negative (credit, etc.)
		multiplier = -1
		S6 = 0 - S6
		AmtPaid = 0 - AmtPaid
		S2 = 0 - S2 \ S2[1] = 0 - S2[1]
	end if
	If not(SUMM)
		If CommRecType < 6 If PURGEFLAG = 1 If PRT_PAIDONLY If Not(ARPAID) Goto SkipRecord
		if sw[1] ! save for hypothetical
			! create straight out record key
			msg$ = " ",msg$
			if not(sortdiv)
				msg$[1,3] = k1$[1,3]
				msg$[4,13] = k1$[10,19]
				msg$[14,14] = k1$[20,20]
			else
				msg$[1,3] = k1$[4,6]
				msg$[4,13] = k1$[13,22]
				msg$[14,14] = k1$[23,23]
			end if
			call WriteHypoLog(e$,ch_log,msg$)
		end if
		call PrintLine()
		call PrintAuditTrans()
	end if
	If Not(HIST) If PURGEFLAG = 3 If UNMARK_PURGE !"cct158507
		If S4[1] Let S4[1] = 0
		Mat Write #CH_SLSMCOMM,R1,36;S4;
	End If 
	call UpdateTotals()
SkipRecord: !
loop
! END OF THIS RANGE
If SORTKEY ! only if salesman commission found cct123526
	if sortdiv	! does slsmtot in divtot
		call divisiontotal()
	Else
		Call SalesmanTotal()
	Endif
	finltot=9
	call PrintTotals()
	If Not(SUMM)
		call PrintRepSummary()
		if not(screenprint)
			Print #0;""
			LN = LN + 1
		Endif
		call PrintTotals()
	End If 
end if
If screenprint ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
end if
OutEnd: ! if goto here, assumes error output already set
End

!*******************************************************
! SUBROUTINES
!*******************************************************
sub UpdateTotals()
try
	! totals arrays
	! T8 = SALESREP TOTALS
	! T9 = GRAND TOTALS
	! T10 = CUSTOMER TOTALS
	! T11[ORDTYPE] = SALESREP TOTALS BY ORDER TYPE
	!
	! [0] = COST
	! [5] = SALE
	! [6] = PAID
	! [7] = COMMISSION
	! [8] = COMMISSION DUE
	
	Rem TOTALS CALC
	!If ARCODE
	T9[5] = T9[5] + S2[0] \ T8[5] = T8[5] + S2[0] \ T10[5] = T10[5] + S2[0]
	D8[5]=D8[5]+S2[0]
	t11[S3[0],5] = t11[s3[0],5] + s2[0]
	! Else 
	!   If ARMONTH <> S4[0] ! not right month
	!     PT9[5] = PT9[5] + S2[0]
	!     PT8[5] = PT8[5] + S2[0]
	!     PT10[5] = PT10[5] + S2[0]
	!   Else 
	!     TEMP$ = S1[3] Using "&&&&&&"
	!     If ARDATE$[1,2] = TEMP$[1,2] ! is the year the same?
	!       T9[5] = T9[5] + S2[0]
	!       T8[5] = T8[5] + S2[0]
	!       T10[5] = T10[5] + S2[0]
	!     Else 
	!       PT9[5] = PT9[5] + S2[0]
	!       PT8[5] = PT8[5] + S2[0]
	!       PT10[5] = PT10[5] + S2[0]
	!     End If 
	!   End If 
	! End If 
	T8[0] = T8[0] + S6[0] \ T9[0] = T9[0] + S6[0] \ T10[0] = T10[0] + S6[0]
	D8[0]=D8[0]+S6[0];t11[S3[0],0] = t11[s3[0],0] + S6[0]
	T9[6] = T9[6] + AmtPaid \ T8[6] = T8[6] + AmtPaid \ T10[6] = T10[6] + AmtPaid
	D8[6]=D8[6]+AmtPaid;t11[S3[0],6] = t11[s3[0],6] + AmtPaid
	T9[7] = T9[7] + S2[1] \ T8[7] = T8[7] + S2[1] \ T10[7] = T10[7] + S2[1]
	d8[7]=d8[7]+s2[1];t11[S3[0],7] = t11[s3[0],7] + S2[1]
	If CF$ = "C"
		If CommRecType < 6
			If Abs(AmtPaid) >= Abs(S2) Or ARPAID !this is for invoices
				T9[8] = T9[8] + S2[1];T8[8] = T8[8] + S2[1];T10[8] = T10[8] + S2[1]
				d8[8]=d8[8]+s2[1];t11[S3[0],8] = t11[s3[0],8] + S2[1]
			End If 
		Else ! this is for credits or other types, no need to check applied amount
			T9[8] = T9[8] + S2[1];T8[8] = T8[8] + S2[1];T10[8] = T10[8] + S2[1]
			d8[8]=D8[8]+s2[1];t11[S3[0],8] = t11[s3[0],8] + S2[1]
		End If 
	End If 
	If CF$ = "A"
		If Abs(AmtPaid) >= Abs(S2) Or ARPAID
			T9[8] = T9[8] + S2[1];T8[8] = T8[8] + S2[1];T10[8] = T10[8] + S2[1]
			d8[8]=D8[8]+s2[1];t11[S3[0],8] = t11[s3[0],8] + S2[1]
		End If 
	End If 
	If PURGEFLAG = 1
		If CF$ = "C"
			If CommRecType < 6
				If Abs(AmtPaid) >= Abs(S2) Or ARPAID Let S4[1] = 1 Else Let S4[1] = 0
			Else 
				S4[1] = 1
			End If 
		End If 
		If CF$ = "A"
			If Abs(AmtPaid) >= Abs(S2) Or ARPAID Let S4[1] = 1 Else Let S4[1] = 0
		End If 
	Else 
		If PURGEFLAG = 2 Let S4[1] = 1
	End If 
	Mat Write #2,R1,36;S4;
else
  include "src/callsuberr.inc"
end try
end sub

sub GetSalesName()
try
	If S8 = S1 exit sub
	J2$ = " ",J2$ \ J2$ = S1 Using "###"
	Search #3,2,1;J2$,R3,E \ if E>1 error 11000
	If E
		Let S1$ = "** ERROR ** SALESMAN NOT FOUND"
	else
		Mat Read #3,R3;S1$;
	end if
else
  include "src/callsuberr.inc"
end try
end sub

Sub GetCustomer()
try
	!L_3200: Rem GET CUSTOMER
	! If S3[1] = S10 exit sub 
	J3$ = " ",J3$ \ J3$ = S3[1] Using "######"
	Search #4,2,1;J3$,R4,E
	If E = 1
		Let C1$ = "**CUSTOMER NOT FOUND"
		if not(s3[1]) let c1$ = "** NON-CUSTOMER SPECIFIC"
		exit sub
	end if
	If E error 11000
	Mat Read #4,R4,30;C1$;
else
  include "src/callsuberr.inc"
end try
end sub

sub CheckAR()
try
	Rem GET A/R RECORD
	ARPAID = 0
	if CommRecType = 8 or CommRecType = 9
		! non invoice based transaction - good to go
		let ARPAID = 1
		exit sub
	end if
	J4$ = " ",J4$ \ J4$ = S3[1] Using "######"
	If S7 Let J4$[7] = S7 Using "##########" Else Let J4$[7] = S7[1] Using "##########"
	J4$[17] = K1$[20];J4$[18] = ""
	Search #5,2,1;J4$,R5,E
	If E 
		Call CheckARHistory() ! no open a/r found - assume paid
		exit sub
	end if
	Mat Read #5,R5;A2;
	Mat Read #5,R5,24;A3;
	AmtPaid = A3[1] + A3[2]
	T1 = Int(Fra(A2[3]) * 100)
	Rem IF NOT PAID IN FULL, BUT MERCH AMOUNT PAID- WE CALL IT "PAID"
	Rem ************************************
	Rem NOTE: IF THE CUSTOMER DOES NOT WANT THIS CONDITION, THEN
	Rem CHANGING IT IS SIMPLE, JUST REM OUT THIS SECTION.- WMB 12/2008
	If Abs(A3[0] - AmtPaid) <> 0 And Abs(AmtPaid) >= Abs(S2)
		If Not(PRT_PAIDONLY)
			ARPAID = 1
		Else 
			If Not(A2[1])
				ARPAID = 1
			Else 
				X2 = A2[1] \ Call ConvertYYMMDD2Jul()
				if x2 = -1
					ARPAID = 1
					exit sub
				end if
				JARPAYDATE = X2
				If JARPAYDATE >= JSPAYDATE And JARPAYDATE <= JEPAYDATE
					ARPAID = 1
				End If 
			End If 
		End If 
	End If 
	Rem ************************************
	If Abs(A3[0] - AmtPaid) = 0
		If Not(PRT_PAIDONLY)
			ARPAID = 1
		Else 
			If Not(A2[1])
				ARPAID = 1
			Else 
				X2 = A2[1] \ Call ConvertYYMMDD2Jul()
				if x2 = -1
					ARPAID = 1 ! bad date
					exit sub
				end if
				JARPAYDATE = X2
				If JARPAYDATE >= JSPAYDATE And JARPAYDATE <= JEPAYDATE
					ARPAID = 1
				End If 
			End If 
		End If 
	End If 
else
  include "src/callsuberr.inc"
end try
end sub

sub CheckARHistory()
try
	Rem NOT FOUND SO MUST BE PAID
	Search #6,2,1;J4$,R6,E \ If E > 1 error 11000
	If Not(E)
		Mat Read #6,R6;A2;
	Else 
		A2[1] = 0
	End If 
	AmtPaid = S2[0]
	If PRT_PAIDONLY = 0
		ARPAID = 1
	Else 
		If Not(A2[1])
			ARPAID = 1
		Else 
			X2 = A2[1] \ call ConvertYYMMDD2Jul()
			if x2 = -1
				ARPAID = 1
				exit sub
			end if
			JARPAYDATE = X2
			If JARPAYDATE >= JSPAYDATE And JARPAYDATE <= JEPAYDATE
				ARPAID = 1
			End If 
		End If 
	End If 
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintTotals()
try
	if screenprint ! xml
		if summ
			tmp$=fdel$,"REPORT TOTALS",fdel$ ! skip slsm#
		Else
			tmp$=fdel$,"REPORT TOTALS",fdel$
			tmp$=tmp$,fdel$,fdel$ ! no cust/name
			tmp$=tmp$,fdel$,fdel$ ! no inv / date
		Endif ! rest is standard
		tmp$=tmp$,fdel$ ! no div
		If PRTCOST
			! tmp$=tmp$,"GP%",fdel$,"COST",fdel$,"PROFIT",fdel$
			x3=0
			if (PT9[5]+t9[5]) let x3=FNW((PT9[5] + T9[5] - T9[0]) / (PT9[5] + T9[5]) * 100)
			tmp$=tmp$,LTrim$(X3 Using "-----#%"),fdel$
			tmp$=tmp$,LTrim$(T9[0] Using "----------#.##"),fdel$
			tmp$=tmp$,LTrim$(PT9[5] + T9[5] - T9[0] Using "---------#.##"),fdel$
		Endif
	! 	if not(ARCODE)
	! 		tmp$=tmp$,LTrim$(PT9[5] Using "---------#.##"),fdel$
	! 	Endif
		tmp$=tmp$,LTrim$(T9[5] Using "---------#.##"),fdel$
		if sw[0] tmp$=tmp$,LTrim$(T9[6] Using "---------#.##"),fdel$
		tmp$=tmp$,fdel$,fdel$   ! comm% split%
		tmp$=tmp$,LTrim$(T9[7] using "---------#.##"),fdel$
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				tmp$=tmp$,LTrim$(T9[8] Using "---------#.##"),fdel$
			Else
				tmp$=tmp$,fdel$
			End If 
		end if
		If PURGEFLAG = 3 let tmp$=tmp$,fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		exit sub ! that's all folks
	Endif
	call PrintHeadings(0)
	Print #0;"** TOTALS **";
	Print #0; Using "-------#.##"; Tab 35;T9[5];
	If PRTCOST
		Print #0; Using "-------#.##"; Tab 46;T9[0];
		Print #0; Using "-------#.##"; Tab 56;PT9[5] + T9[5] - T9[0];
		If (PT9[5] + T9[5]) Print #0; Using "---#%"; Tab 69;FNW((PT9[5] + T9[5] - T9[0]) / (PT9[5] + T9[5]) * 100);
	end if
	! If Not(ARCODE) Print #0; Using "-------#.##"; Tab 74;PT9[5];
	! Print #0; Using "-------#.##"; Tab 86;T9[5];
	if sw[0]
		Print #0; Using "-------#.##"; Tab 94;T9[6];
	end if
	Print #0; Using "-------#.##"; Tab 106;T9[7];
	if sw[0]
		If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
			Print #0; Using "------#.##"; Tab 112;T9[8];
		End If 
	end if
	Print #0;""
	Print #0;""
else
  include "src/callsuberr.inc"
end try
end sub

sub SalesmanTotal()
try
	if s10<>-1 Call CustomerTotal()
	call PrintSalesmanOrderTotal()
	call PrintHeadings(0)
	if screenprint ! xml
		if summ
			tmp$=Str$(S8),fdel$,S1$[1,15]," TOTALS",fdel$ ! 
		Else
			tmp$=Str$(s8),fdel$,S1$[1,15]," TOTALS",fdel$
			tmp$=tmp$,fdel$,fdel$ ! no cust/name
			tmp$=tmp$,fdel$,fdel$ ! no inv / date
		Endif ! rest is standard
		if Not(sortdiv) let tmp$=tmp$,fdel$ else tmp$=tmp$,Str$(Hdiv),fdel$
		If PRTCOST
			x3=0
			if (PT8[5] + T8[5]) let x3=FNW((PT8[5] + T8[5] - T8[0]) / (PT8[5] + T8[5]) * 100)
			tmp$=tmp$,LTrim$(X3 Using "-----#%"),fdel$
			tmp$=tmp$,LTrim$(T8[0] Using "---------#.##"),fdel$
			tmp$=tmp$,LTrim$(PT8[5] + T8[5] - T8[0] Using "---------#.##"),fdel$
		Endif
	! 	if not(ARCODE)
	! 		tmp$=tmp$,LTrim$(PT8[5] Using "---------#.##"),fdel$
	! 	Endif
		tmp$=tmp$,LTrim$(T8[5] Using "---------#.##"),fdel$
		if sw[0] tmp$=tmp$,LTrim$(T8[6] Using "---------#.##"),fdel$
		tmp$=tmp$,fdel$,fdel$   ! comm% split%
		tmp$=tmp$,LTrim$(T8[7] using "---------#.##"),fdel$
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				tmp$=tmp$,LTrim$(T8[8] Using "---------#.##"),fdel$
			Else
				tmp$=tmp$,fdel$
			End If 
		end if
		If PURGEFLAG = 3 let tmp$=tmp$,fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto STLDone ! that's all
	Endif
	Print #0;""
	Print #0;"**SLSM ";S8;" ";S1$[1,14];" TOTALS**";
	Print #0; Using "-------#.##"; Tab 35;T8[5];
	If PRTCOST
		Print #0; Using "-------#.##"; Tab 46;T8[0];
		Print #0; Using "-------#.##"; Tab 56;PT8[5] + T8[5] - T8[0];
		If (PT8[5] + T8[5]) Print #0; Using "---#%"; Tab 69;FNW((PT8[5] + T8[5] - T8[0]) / (PT8[5] + T8[5]) * 100);
	end if
	! If Not(ARCODE) Print #0; Using "-------#.##"; Tab 74;PT8[5];
	! Print #0; Using "-------#.##"; Tab 86;T8[5];
	if sw[0]
		Print #0; Using "-------#.##"; Tab 94;T8[6];
	end if
	Print #0; Using "-------#.##"; Tab 106;T8[7];
	if sw[0]
		If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
			Print #0; Using "------#.##"; Tab 112;T8[8];
		End If 
	end if
	print #0;""
	STLDone: ! finish
	If Not(SUMM) call InsertRepSummaryRec()
	S8 = 0 \ clear T8[] \ clear t11[]
	PT8[5] = 0
	If SUMM 
		Let LN = LN + 1
	else
		LN = 9999
	end if
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintSalesmanOrderTotal()
try
	if screenprint exit sub ! xml not supported at this time
	If SUMM exit sub
	for i = 0 to 38 ! for all the order types
		if t11[i,0]=0 and t11[i,5]=0 and t11[i,7]=0 goto SkipOrdType
		call PrintHeadings(0)
		If HEADING Call PrintSalesman()
		if i = 0
			OrderDesc$ = "** UNKOWN **"
		else
			mat read #1,62,(i-1)*20;OrderDesc$;
			OrderDesc$ = rtrim$(OrderDesc$)
		end if
		if OrderDesc$ = "" let OrderDesc$ = "Order Type "+str$(i)
		Print #0;"  ** OT ";OrderDesc$;
		Print #0; Using "-------#.##"; Tab 35;T11[i,5];
		If PRTCOST
			Print #0; Using "-------#.##"; Tab 46;T11[i,0];
			Print #0; Using "-------#.##"; Tab 56;T11[i,5] - t11[i,0];
			If (T11[i,5]) Print #0; Using "---#%"; Tab 69;FNW((T11[i,5] - T11[i,0]) / (T11[i,5]) * 100);
		end if
		if sw[0]
			Print #0; Using "-------#.##"; Tab 94;T11[i,6];
		end if
		Print #0; Using "-------#.##"; Tab 106;T11[i,7];
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				Print #0; Using "------#.##"; Tab 112;T11[i,8];
			End If 
		end if
		print #0;""
		Let LN = LN + 1
	SkipOrdType: !
	next i
else
  include "src/callsuberr.inc"
end try
end sub


sub CustomerTotal()
try
	If SUMM Goto ReInitCustTotals
	call PrintHeadings(0)
	If HEADING Call PrintSalesman()
	if screenprint ! xml
		if summ
			If Not(S8) tmp$=Str$(S1),fdel$,RTrim$(S1$),fdel$
			If S8 tmp$=Str$(S8),fdel$,RTrim$(S1$),fdel$
		Else
			If Not(S8) tmp$=Str$(S1),fdel$,RTrim$(S1$),fdel$
			If S8 tmp$=Str$(S8),fdel$,RTrim$(S1$),fdel$
			tmp$=tmp$,Str$(S10),fdel$,"CUSTOMER TOTALS",fdel$ ! no cust/name
			tmp$=tmp$,fdel$,fdel$ ! no inv / date
		Endif ! rest is standard
		if not(sortdiv) let tmp$=tmp$,fdel$ Else let tmp$=tmp$,Str$(HDiv),fdel$ ! no div
		If PRTCOST
			x3=0
			if (PT10[5] + T10[5]) let x3=FNW((PT10[5] + T10[5] - T10[0]) / (PT10[5] + T10[5]) * 100)
			tmp$=tmp$,LTrim$(X3 Using "-----#%"),fdel$
			tmp$=tmp$,LTrim$(T10[0] Using "---------#.##"),fdel$
			tmp$=tmp$,LTrim$(PT10[5] + T10[5] - T10[0] Using "---------#.##"),fdel$
		Endif
	! 	if not(ARCODE)
	! 		tmp$=tmp$,LTrim$(PT10[5] Using "---------#.##"),fdel$
	! 	Endif
		tmp$=tmp$,LTrim$(T10[5] Using "---------#.##"),fdel$
		if sw[0] tmp$=tmp$,LTrim$(T10[6] Using "---------#.##"),fdel$
		tmp$=tmp$,fdel$,fdel$   ! comm% split%
		tmp$=tmp$,LTrim$(T10[7] using "---------#.##"),fdel$
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				tmp$=tmp$,LTrim$(T10[8] Using "---------#.##"),fdel$
			Else
				tmp$=tmp$,fdel$
			End If 
		end if
		If PURGEFLAG = 3 let tmp$=tmp$,fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto ReInitCustTotals ! that's all
	Endif
	Print #0;""
	Print #0; Using "######"; Tab 4;"** CUSTOMER ";S10;" TOTALS **";
	Print #0; Using "-------#.##"; Tab 35;T10[5];
	If PRTCOST
		Print #0; Using "-------#.##"; Tab 46;T10[0];
		Print #0; Using "-------#.##"; Tab 56;PT10[5] + T10[5] - T10[0];
		If (PT10[5] + T10[5]) Print #0; Using "---#%"; Tab 69;FNW((PT10[5] + T10[5] - T10[0]) / (PT10[5] + T10[5]) * 100);
	end if
	! If Not(ARCODE) Print #0; Using "-------#.##"; Tab 74;PT10[5];
	! Print #0; Using "-------#.##"; Tab 86;T10[5];
	if sw[0]
		Print #0; Using "-------#.##"; Tab 94;T10[6];
	end if
	Print #0; Using "-------#.##"; Tab 106;T10[7];
	if sw[0]
		If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
			Print #0; Using "------#.##"; Tab 112;T10[8];
		End If 
	end if
	Print #0;""
	Print #0;""
	LN = LN + 3
	ReInitCustTotals: S10 = 0 \ clear T10[]
	PT10[5] = 0
	! we have just reset the current customer number to 0 (S10)
	! this value is now used for non-customer specific transactions
	! so blank out the customer info just in case next customer up
	! to be printed is "0" which will cause the program to NOT
	! look up new customer name, etc.
	call GetCustomer()
	s10 = -1 ! now show we have a new customer.
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintRepSummary()
try
	LN = 999
	K98$ = " ",K98$
	do
		Search #ch_98,3,1;K98$,R98,E \ If E > 2 error 11000
		If E exit do
		Mat Read #ch_98,R98,0;SNAME$;
		Read #ch_98,R98,16;GP;
		Read #ch_98,R98,22;COST;
		Read #ch_98,R98,28;PROFIT;
		Read #ch_98,R98,34;PRIMTH;
		Read #ch_98,R98,40;CURMTH;
		Read #ch_98,R98,46;AMTPAID;
		Read #ch_98,R98,52;COMMAMT;
		Read #ch_98,R98,58;COMMDUE;
		if screenprint ! xml
			if summ
				tmp$=K98$[1,3],fdel$,SNAME$[1,15]," TOTALS",fdel$ ! 
			Else
				tmp$=K98$[1,3],fdel$,SNAME$[1,15]," TOTALS",fdel$
				tmp$=tmp$,fdel$,fdel$ ! no cust/name
				tmp$=tmp$,fdel$,fdel$ ! no inv / date
			Endif ! rest is standard
			tmp$=tmp$,fdel$ ! no div
			If PRTCOST
				x3=GP
				tmp$=tmp$,LTrim$(X3 Using "-----#%"),fdel$
				tmp$=tmp$,LTrim$(COST Using "---------#.##"),fdel$
				tmp$=tmp$,LTrim$(PROFIT Using "---------#.##"),fdel$
			Endif
		! 	if not(ARCODE)
		! 		tmp$=tmp$,LTrim$(PRIMTH Using "---------#.##"),fdel$
		! 	Endif
			tmp$=tmp$,LTrim$(CURMTH Using "---------#.##"),fdel$
			if sw[0] tmp$=tmp$,LTrim$(AMTPAID Using "---------#.##"),fdel$
			tmp$=tmp$,fdel$,fdel$   ! comm% split%
			tmp$=tmp$,LTrim$(COMMAMT using "---------#.##"),fdel$
			if sw[0]
				If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
					tmp$=tmp$,LTrim$(COMMDUE Using "--------#.##"),fdel$
				Else
					tmp$=tmp$,fdel$
				End If 
			end if
			If PURGEFLAG = 3 let tmp$=tmp$,fdel$
			tmp$=tmp$,rdel$
			call addtostr(e$,rstr$,tmp$)
			goto NextSummaryRec ! that's all
		Endif
		call PrintHeadings(0)
		Print #0;""
		Print #0;"**SLSM ";K98$[1,3];" ";SNAME$[1,13];" TOTALS**";
		Print #0; Using "-------#.##"; Tab 35;CURMTH;
		If PRTCOST
			Print #0; Using "-------#.##"; Tab 46;COST;
			Print #0; Using "-------#.##"; Tab 56;PROFIT;
			Print #0; Using "---#%"; Tab 69;GP;
		end if
		! If Not(ARCODE) Print #0; Using "-------#.##"; Tab 74;PRIMTH;
		! Print #0; Using "-------#.##"; Tab 86;CURMTH;
		if sw[0]
			Print #0; Using "-------#.##"; Tab 94;AMTPAID;
		end if
		Print #0; Using "-------#.##"; Tab 106;COMMAMT;
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				Print #0; Using "------#.##"; Tab 112;COMMDUE;
			End If 
		end if
		Print #0;""
		LN = LN + 1
	NextSummaryRec: !
	loop
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintLine()
try
	If SUMM Goto EndLinePrint:
	call PrintHeadings(1,1)
	If S10 <> S3[1] If Not(HEADING) call PrintCustomer()
	if screenprint ! xml
		if summ
			If Not(S8) tmp$=Str$(S1),fdel$,RTrim$(S1$),fdel$
			If S8 tmp$=Str$(S8),fdel$,RTrim$(S1$),fdel$
		Else
			If Not(S8) tmp$=Str$(S1),fdel$,RTrim$(S1$),fdel$
			If S8 tmp$=Str$(S8),fdel$,RTrim$(S1$),fdel$
			tmp$=tmp$,Str$(S3[1]),fdel$,RTrim$(C1$),fdel$ ! cust/name
			x2=S1[3] \ Call UnpackDate()
			tmp$=tmp$,Str$(S7[1]) ! inv
			held_rstr$=tmp$
			tmp$=tmp$,fdel$,X$,fdel$ ! date
		Endif ! rest is standard
		tmp$=tmp$,Str$(commDiv),fdel$ ! div
		If PRTCOST
			x3=0
			if S2 let x3=FNW((S2[0] - S6[0]) / S2[0] * 100)
			tmp$=tmp$,LTrim$(X3 Using "----#%"),fdel$
			tmp$=tmp$,LTrim$(S6[0] Using "--------#.##"),fdel$
			tmp$=tmp$,LTrim$(S2[0] - S6 Using "--------#.##"),fdel$
		Endif
		tmp1$=LTrim$(S2[0] Using "--------#.##")
		tmp$=tmp$,tmp1$,fdel$
		if sw[0]
			tmp$=tmp$,LTrim$(AmtPaid Using "--------#.##"),fdel$
		end if
		tmp$=tmp$,(s1[2] using "---#.##%"),fdel$	!comm%
		if SplitFlag > 0 and S7[2] <> 0
			tmp$=tmp$,(s7[2] using "###.##%"),fdel$
		else
			if SplitFlag = -1 
				tmp$=tmp$," *CAT*",fdel$
			else
				tmp$=tmp$,fdel$   !  split%
			endif
		end if
		tmp$=tmp$,LTrim$(S2[1] using "--------#.##"),fdel$
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				tmp1$=""
				If CommRecType >= 6 ! it's a credit
					If CF$ = "C"
						tmp1$=LTrim$(S2[1] Using "-------#.##")
					Else 
						If Abs(AmtPaid) >= Abs(S2) Or ARPAID tmp1$=LTrim$(S2[1] Using "-------#.##")
					End If 
				Else 
					If Abs(AmtPaid) >= Abs(S2) Or ARPAID tmp1$=LTrim$(S2[1] Using "-------#.##")
				End If 
				tmp$=tmp$,tmp1$,fdel$
			Else
				If A2[1]
					X2 = A2[1] \ Call UnpackDate()
					tmp$=tmp$,X$[1,8],fdel$
				!Else
				!	tmp$=tmp$,fdel$
				End If 
			End If 
		end if
		If PURGEFLAG = 3 and s4[1]
			let tmp$=tmp$,"*",fdel$
		Else
			let tmp$=tmp$,fdel$
		Endif
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto EndLinePrint ! that's all
	Endif
	Print #0; Using "########"; Tab 16;S7[1];
	X2 = S1[3] \ Call UnpackDate()
	Print #0; Tab 25;X$[1,8];
	Print #0; Using "-------#.##"; Tab 35;S2[0];
	If PRTCOST
		Print #0; Using "-------#.##"; Tab 46;S6[0];
		Print #0; Using "-------#.##"; Tab 56;S2[0] - S6;
		If S2 Print #0; Using "---#%"; Tab 69;FNW((S2[0] - S6[0]) / S2[0] * 100);
	end if
	if custom_customer$ <> "CSS"
		print #0; using "---#.##%"; tab 75;s1[2];
	end if
	if SplitFlag > 0 and S7[2] <> 0
		print #0; using "###.##%"; tab 85;s7[2];
	else
		if SplitFlag = -1 print #0;tab 85;" *CAT*";
	end if
	if sw[0]
		Print #0; Using "-------#.##"; Tab 94;AmtPaid;
	end if
	Print #0; Using "-------#.##"; Tab 106;S2[1];
	if sw[0]
		If PURGEFLAG = 1 And SUMM = 0 And PRT_PAIDONLY = 1
			If A2[1]
				X2 = A2[1] \ Call UnpackDate()
				Print #0; Tab 120;X$[1,8];
			End If 
		Else 
			If CommRecType >= 6 ! it's a credit
				If CF$ = "C"
					Print #0; Using "-----#.##"; Tab 119;S2[1];
				Else 
					If Abs(AmtPaid) >= Abs(S2) Or ARPAID Print #0; Using "-----#.##"; Tab 119;S2[1];
				End If 
			Else 
				If Abs(AmtPaid) >= Abs(S2) Or ARPAID Print #0; Using "-----#.##"; Tab 119;S2[1];
			End If 
		End If 
	end if
	If PURGEFLAG = 3 If S4[1] Print #0;"*";
	Print #0;""
	LN = LN + 1
	EndLinePrint: !
	S8 = S1
	S10 = S3[1]
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintAuditTrans()
try
	! print all audit transactions for a commission record
	!if screenprint exit sub ! no transactional detail for xml
	if summ exit sub
	gotFirstAudit = 0
	k7$=" ",k7$
	if not(sortdiv)
		k7$[1,3] = k1$[1,3]
		k7$[4,13] = k1$[10,19]
	Else
		k7$[1,3]=k1$[4,6]
		k7$[4,13]=k1$[13,22]
	Endif
	pca_loop: !
		tmp$=" ",tmp$
		search #ch_commaudit,3,1;k7$,r7,e \ if e>2 error 11000
		if e goto end_pca_loop:
		if not(sortdiv)
			if k7$[1,3] <> k1$[1,3] OR k7$[4,13] <> k1$[10,19] goto end_pca_loop:
			if k7$[26,26] <> k1$[20,20] goto pca_loop: ! wrong type
		Else
			if k7$[1,3]<>K1$[4,6] or k7$[4,13]<>k1$[13,22] goto end_pca_Loop:
			if k7$[26,26]<>K1$[23,23] goto pca_loop: ! type
		Endif
		mat read #ch_commaudit,r7,0;as1;
		mat read #ch_commaudit,r7,16;as3;
		mat read #ch_commaudit,r7,128;as4;
		mat read #ch_commaudit,r7,62;cas$;
		mat read #ch_commaudit,r7,132;as5;
		if as1[1] = 6 or as1[1] = 7 or as1[1] = 9 ! it's a credit or negative adjustment
			for i = 0 to 5
				if i<2 as3[i] = 0 - as3[i]
				if i>1 as5[i] = 0 - as5[i]
			next i
		end if
		if not(screenprint)
			call PrintHeadings(1)
			if not(gotFirstAudit)
				print #0;TAB 19;"* ORIG COMM.";
				Print #0; Using "-------#.##"; Tab 35;ocs1[2];
				If PRTCOST
					Print #0; Using "-------#.##"; Tab 46;ocs1[3];
					Print #0; Using "-------#.##"; Tab 56;ocs1[2] - ocs1[3];
					If ocs1[2] Print #0; Using "---#%"; Tab 69;FNW((ocs1[2] - ocs1[3]) / ocs1[2] * 100);
				end if
				print #0; using "---#.##%"; tab 75; ocs1[1];
				Print #0; Using "-------#.##"; Tab 106;ocs1[0] * multiplier
				ln = ln + 1
				call PrintHeadings(1)
				gotFirstAudit = 1
				! print detail after showing original amount
				if InvoiceDetail call PrintInvoiceDetail()
			end if
			tmp$ = "* UNKNOWN ADJ"
			if as4[0] = 1 tmp$ = "* MANUAL ADJ"
			if as4[0] = 2 tmp$ = "* CHARGEBACK ADJ"
			if as4[0] = 3 tmp$ = "* TERMS DISC ADJ"
			if as4[0] = 4 tmp$ = "* CASH DISC " + str$(as4[1])
			if as4[0] = 5 tmp$ = "* CUST REBT ADJ"
			if as4[0] = 6 tmp$ = "* CPI CHARGE "+rtrim$(cas$)
			if as4[0] = 7 tmp$ = "* HB ADJ "+rtrim$(cas$)
			if as4[0] = 8 tmp$ = "* CREDIT CARD ADJ"
			if as4[0] = 9 tmp$ = "* AMALG ADJ"
			print #0;tab 19;tmp$;
			if as4[0] <> 6 and as4[0] <> 7
				if as1[1] <> 8 and as1[1] <> 9  ! 8 and 9 straight comm adj
			! 		print #0;tab 49;cas$;
					Print #0; Using "-------#.##"; Tab 35;as5[3];
					If PRTCOST
						Print #0; Using "-------#.##"; Tab 46;as5[5];
						Print #0; Using "-------#.##"; Tab 56;as5[3] - as5[5];
						If as5[3] Print #0; Using "---#%"; Tab 69;FNW((as5[3] - as5[5]) / as5[3] * 100);
					end if
					print #0; using "---#.##%"; tab 75; as5[1];
				end if
			end if
			if as4[0] = 7 or as4[0] = 8
				Print #0; Using "-------#.##"; Tab 106;((as3[0]-as3[1]) * -1);
			else
				Print #0; Using "-------#.##"; Tab 106;as3[1];
			end if
			tmp$ = as3[4] using "&&&&&&"
			! PRINT #0; TAB 124;tmp$[3,4]+"/"+tmp$[5,6]+"/"+tmp$[1,2];
			print #0; ""
			LN = LN + 1
			if custom_customer$ = "PIEDMONT" and as4[0] = 1 and rtrim$(cas$) <> ""
				! manual adjustment - want the comment
				print #0;tab 23;cas$
				LN = LN + 1
			end if
			call PrintHeadings(1)
			goto pca_loop:
	else
		!! screen print
		tmp$=held_rstr$,fdel$  !! sm, name, invoice, etc
		if not(gotFirstAudit)
			tmp$=tmp$,"* ORIG COMM.",fdel$,fdel$  !! also div column
				If PRTCOST
					If ocs1[2] 
						tmp$=tmp$,(FNW((ocs1[2] - ocs1[3]) / ocs1[2] * 100) Using "---#%"),fdel$ ! GP%
					else
						tmp$=tmp$,fdel$
					endif
					tmp$=tmp$,(ocs1[3] Using "-------#.##"),fdel$
					tmp$=tmp$,((ocs1[2] - ocs1[3]) Using "-------#.##"),fdel$
				endif
				tmp$=tmp$,(ocs1[2] using "-------#.##"),fdel$
				tmp$=tmp$,fdel$	  ! paid
				tmp$=tmp$,(ocs1[1] using "---#.##%"),fdel$
				tmp$=tmp$,fdel$		! split%
				tmp$=tmp$,(ocs1[0] * multiplier Using "-------#.##"),fdel$
				tmp$=tmp$,fdel$,fdel$,rdel$
				call addtostr(e$,rstr$,tmp$)
				gotFirstAudit = 1
				! print detail after showing original amount
				if InvoiceDetail call PrintInvoiceDetail()
				tmp$=held_rstr$,fdel$  !! sm, name, invoice, etc
			end if
			select CASE as4[0]
			case 1
				tmp$ = tmp$,"* MANUAL ADJ"
				if custom_customer$ = "PIEDMONT" and rtrim$(cas$) <> ""
					! manual adjustment - want the comment
					tmp$=tmp$,"-",cas$
					LN = LN + 1
				end if
				tmp$ = tmp$,fdel$
			case 2 
				tmp$ = tmp$,"* CHARGEBACK ADJ",fdel$
			case 3 
				tmp$ = tmp$,"* TERMS DISC ADJ",fdel$
			case 4 
				tmp$ = tmp$,"* CASH DISC ",str$(as4[1]),fdel$
			case 5 
				tmp$ = tmp$,"* CUST REBT ADJ",fdel$
			case 6 
				tmp$ = tmp$,"* CPI CHARGE ",rtrim$(cas$),fdel$
			case 7 
				tmp$ = tmp$,"* HB ADJ ",rtrim$(cas$),fdel$
			case 8 
				tmp$ = tmp$,"* CREDIT CARD ADJ",fdel$
			case 9 
				tmp$ = tmp$,"* AMALG ADJ",fdel$
			Case Else
				tmp$ = tmp$,"* UNKNOWN ADJ",fdel$
			end select
			tmp$=tmp$,fdel$  !! div column 


			if as4[0] <> 6 and as4[0] <> 7
				if as1[1] <> 8 and as1[1] <> 9  ! 8 and 9 straight comm adj
					If PRTCOST
						If as5[3] 
							tmp$=tmp$,(FNW((as5[3] - as5[5]) / as5[3] * 100) Using "---#%"),fdel$
						else
							tmp$=tmp$,fdel$
						endif
						tmp$=tmp$,(as5[5] Using "-------#.##"),fdel$
						tmp$=tmp$,(as5[3] - as5[5] Using "-------#.##"),fdel$
					else
							!tmp$=tmp$,fdel$,fdel$,fdel$
					end if
					tmp$=tmp$,(as5[3] Using "-------#.##"),fdel$
					tmp$=tmp$,(as5[1] using "---#.##%"),fdel$
				else
					tmp$=tmp$,fdel$,fdel$,fdel$,fdel$
					tmp$=tmp$,(as5[1] using "---#.##%"),fdel$
				end if
				tmp$=tmp$,fdel$
			else
				tmp$=tmp$,fdel$,fdel$,fdel$,fdel$,fdel$,fdel$
			end if
			if sw[0]
				tmp$=tmp$,fdel$
			end if
			if as4[0] = 7 or as4[0] = 8
				tmp$=tmp$,(((as3[0]-as3[1]) * -1) Using "-------#.##"),fdel$
			else
				tmp$=tmp$,(as3[1] Using "-------#.##"),fdel$
			end if
			if sw[0]
				tmp$=tmp$,fdel$
			end if
			tmp$=tmp$,fdel$,rdel$  !! mark and end of rec
			call addtostr(e$,rstr$,tmp$)
			goto pca_loop:
	endif   !! screenprint check

end_pca_loop: !
		if gotFirstAudit
			if not(screenprint)
				print #0;""
				ln = ln + 1
				call PrintHeadings(1)
			endif
		else
			! no audit entries, so print after commission line
			if InvoiceDetail call PrintInvoiceDetail()
			if not(screenprint)
				print #0;""
				ln = ln + 1
				call PrintHeadings(1)
			endif
		end if
!		if screenprint 
!			if tmp$[1,len(held_rstr$)]=held_rstr$
!				tmp$=tmp$,rdel$
!				call addtostr(e$,rstr$,tmp$)
!			endif
!		endif

else
  include "src/callsuberr.inc"
end try
end sub

sub PrintInvoiceDetail()
try
	if CommRecType <> 1 and CommRecType <> 6
		if not(screenprint)
			print #0;tab 29;"** Entry Not Tied to History"
			ln = ln + 1
			call PrintHeadings(1)
		endif
		exit sub
	end if
	Let detailSign = 1
	Kinvh$ = " ",Kinvh$
	Kinvh$[1,2] = "30"
	IF CommRecType = 6
		Kinvh$[1,2] = "31"
		detailSign = -1
	end if
	Kinvh$[3,12] = S7[1] using "##########"
	search #ch_invh,2,1;Kinvh$,Rinvh,e \ if e>1 error 11000
	if e
		if not(screenprint)
			print #0;tab 29;"** Invoice History Not on File"
			ln = ln + 1
			call PrintHeadings(1)
		endif
		exit sub
	end if
	mat read #ch_invh,Rinvh,0;H0;
	mat read #ch_invh,Rinvh,278;SLSM;
	mat read #ch_invh,Rinvh,512;OREF;
	mat read #ch_invh,Rinvh,600;CommBaseRate;
	slsidx = 0
	for i = 0 to 4
		if slsm[i] = s1[0]
			let slsidx = i
			let i = 5
		end if
	next i
	Kinvl$ = " ",Kinvl$
	Kinvl$[1,10] = Kinvh$[3,12]
	firstLine = 1
	do
		search #ch_invl,3,1;Kinvl$,Rinvl,e \ if e>2 error 11000
		if e exit do
		if Kinvl$[1,10] <> Kinvh$[3,12] exit do
		Mat Read #ch_invl,RInvl,256;invlS2;
		If invlS2[0] = 3 Goto SkipInvLine
		mat read #ch_invl,RInvl,16;l4;
		mat read #ch_invl,RInvl,32;l5;
		mat read #ch_invl,RInvl,140;l1$;
		mat read #ch_invl,RInvl,168;l7;
		mat read #ch_invl,RInvl,250;un;
		mat read #ch_invl,RInvl,260;invlS3;
		mat read #ch_invl,RInvl,404;OLM;
		mat read #ch_invl,RInvl,452;unf;
		mat read #ch_invl,RInvl,622;CommSource;
		! if split by category and the salesrep on the line
		! is not for this rep, skip it
		if SplitFlag = -1 and l4[1] <> s1[0] goto SkipInvLine
		! print line
		If P9$[34,34] = "O"
			LinePrice = L5[0] ! Total Price
			LineCost = invlS3[13] ! Total Cost
		Else
			LinePrice = L5[3] ! Total Price
			LineCost = invlS3[12] ! Total Cost
		end if
		if CommRecType <> 6 and firstLine
			! if there is a back order release
			! involved show it as this invoice
			! is not eligible for amalg
			if H0[5] or (OREF[2] and OREF[2] <> H0[7])
				print #0; Tab 19;"BO";
			end if
		end if
		firstLine = 0
		if not(screenprint)
			print #0; Tab 22;L1$[1,12];
			! print #0; Tab 23;"LINE # ";Kinvl$[11,13];
			Print #0; Using "-------#.##"; Tab 35;LinePrice * detailSign;
			If PRTCOST
				Print #0; Using "-------#.##"; Tab 46;LineCost * detailSign;
				Print #0; Using "-------#.##"; Tab 56;(LinePrice - LineCost)*detailSign;
				If LinePrice Print #0; Using "---#%"; Tab 69;FNW((LinePrice - LineCost) / LinePrice * 100);
			end if
			if custom_customer$ <> "CSS"
				if CommSource ! override commission rate in effect
					print #0; using "---#.##%"; tab 75;OLM[5];
				else
					if CommBaseRate[slsidx]
						print #0; using "---#.##%"; tab 75;CommBaseRate[slsidx];
					else
						if p60$[24,24]="Y"
							if olm[4]
								print #0; using "---#.##%"; tab 75;olm[4];
							else
								print #0; using "---#.##%"; tab 75;olm[5];
							endif
						else
							print #0; using "---#.##%"; tab 75;CommBaseRate[slsidx];  !! will be zero
						endif
					endif
				end if
			else
				! central sanitary wants to see the commission amount
				if SplitFlag > 0 and S7[2] <> 0
					print #0; using "-$$$$&.&&"; tab 75; olm[6]* (s7[2] / 100);
				else
					print #0; using "-$$$$&.&&"; tab 75; olm[6]
				end if
			end if
			print #0; tab 86;"Ship Qty: ";
			if unf[0]
				tmp$ = Xunit$(un[0], ch_ccode)
				print #0; using "--,---,--&.&&"; (L7[4] / unf[0]);" ";tmp$;
			else
				print #0; "      * N/A *";
			end if
			print #0; ""
			ln = ln + 1
			call PrintHeadings(1)
		else
			tmp$=held_rstr$,fdel$  !! sm through invoice #
			tmp$=tmp$,L1$[1,12],fdel$,fdel$  !! item, div
			If PRTCOST
				If LinePrice 
					tmp$=tmp$,(FNW((LinePrice - LineCost) / LinePrice * 100) Using "---#%"),fdel$
				else
					tmp$=tmp$,fdel$
				endif
				tmp$=tmp$,(LineCost * detailSign Using "-------#.##"),fdel$
				tmp$=tmp$,((LinePrice - LineCost)*detailSign Using "-------#.##"),fdel$ ! profit
			else
			!tmp$=tmp$,fdel$,fdel$
			end if
			tmp$=tmp$,(LinePrice * detailSign Using "-------#.##"),fdel$  ! sales
			if sw[0]
				tmp$=tmp$,fdel$
			end if
			if custom_customer$ <> "CSS"
				if CommSource ! override commission rate in effect
					tmp$=tmp$,(olm[5] using "---#.##%"),fdel$
				else
					if CommBaseRate[slsidx]
						tmp$=tmp$,(CommBaseRate[slsidx] using "---#.##%"),fdel$
					else
						if p60$[24,24]="Y"
							if olm[4]
								tmp$=tmp$,(olm[4] using "---#.##%"),fdel$
							else
								tmp$=tmp$,(olm[5] using "---#.##%"),fdel$
							endif
						else
							tmp$=tmp$,(CommBaseRate[slsidx] using "---#.##%"),fdel$  !! will be zero
						endif
					endif
				end if
			else
				! central sanitary wants to see the commission amount
				if SplitFlag > 0 and S7[2] <> 0
					tmp$=tmp$,(olm[6]* (s7[2] / 100) using "-$$$$&.&&"),fdel$
				else
					tmp$=tmp$,(olm[6] using "-$$$$&.&&"),fdel$
				end if
			end if
			tmp$=tmp$,fdel$  !! split % column
			if p60$[24,24]="Y"
				tmp$=tmp$,(olm[6] using "-------#.##"),fdel$   ! line com
			else
				tmp$=tmp$,fdel$
			endif
			if sw[0]  then tmp$=tmp$,fdel$ !! need extra to cover pay date
			tmp$=tmp$,fdel$,rdel$  !! mark and end of rec
			call addtostr(e$,rstr$,tmp$)
		endif
	SkipInvLine: !
	loop
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintCustomer()
try
	! everywhere this is called, we know we have enough room
	! for the line, so no need to call PrintHeadings
	If not(SUMM) and not(screenprint)
		if screenprint exit sub ! sent every line
		Print #0; Using "######"; Tab 0;S3[1];
		Print #0; Tab 8;C1$[1,30]
		LN = LN + 1
	end if
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintSalesman()
try
	If not(SUMM) and not(screenprint)
		If Not(S8) Print #0; Using "###";"SALESMAN ";S1;" ";S1$
		If S8 Print #0; Using "###";"SALESMAN ";S8;" ";S1$
		Print #0;" "
		LN = LN + 2
	end if
	SALESMAN = 1
else
  include "src/callsuberr.inc"
end try
end sub

sub PrintHeadings(doSubHeadings,...)
try
	enter extraLinesNeeded
else
	extraLinesNeeded = 0
end try
try
	if screenprint exit sub ! has already!
	HEADING = 0
	If LN + extraLinesNeeded < MAXLINES exit sub 
	!If J2 If SCREENPRINT Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
	If J2 If Not(SCREENPRINT) Print #0;"\14\";
	J2 = J2 + 1 \ LN = 7
	If Not(SCREENPRINT) Print #0;"\15\";
	Print #0; Tab 10;J8$; Tab (64 - Len(COMP$) / 2);COMP$; Tab 120;"PAGE";J2
	Print #0;" - 450 - ";Msc$(3);
	If HIST
		Print #0; Tab 47;"S A L E S M A N   C O M M I S S I O N   H I S T O R Y"
	Else 
		Print #0; Tab 47;"S A L E S M A N   C O M M I S S I O N"
	End If 
	If Not(PRT_PAIDONLY)
		If ARCODE
			Print #0; Tab 56;"FOR A/R MONTH CODE ";ARCODE
		else
			X2 = STARTDATE \ Call UnpackDate()
			Print #0; Tab 46;"RUN FOR DATES ";X$;" THROUGH ";
			X2 = ENDDATE \ Call UnpackDate() \ Print #0;X$
		end if
	Else 
		If ARCODE
			Print #0; Tab 20;"Transactions for A/R Month Code ";ARCODE;
		Else 
			X2 = STARTDATE \ Call UnpackDate()
			Print #0; Tab 15;"Transactions as of ";X$;" Through ";
			X2 = ENDDATE \ Call UnpackDate() \ Print #0;X$;
		End If 
		X2 = SPAYDATE \ Call UnpackDate()
		Print #0; Tab 65;"Paid as of ";X$;" Through ";
		X2 = EPAYDATE \ Call UnpackDate()
		Print #0;X$
	End If 
	IF sortdiv and not(finltot) print #0; Tab 4;"DIV";hdiv;
	If Not(HIST) If PURGEFLAG < 3 Print #0; Tab 52;"RUN FOR PURGE ";
	If HIST Print #0; Tab 52;"RUN FOR HISTORY ";
	If PURGEFLAG = 1 Print #0;"PAID ONLY"
	If PURGEFLAG = 2 Print #0;"ALL IN RANGE"
	If PURGEFLAG = 3 Print #0; Tab 55;"AUDIT VERSION ONLY"
	Print #0;" "
	! If Not(ARCODE) Print #0; Tab 75;"-- N E T    S A L E --"
	Print #0; Tab 0;"CUST #";
	Print #0; Tab 8;"CUSTOMER";
	Print #0; Tab 18;"INV/CM";
	Print #0; Tab 27;"DATE";
	print #0; tab 40;"SALE $";
	If PRTCOST
		print #0; tab 53;"COST";
		print #0; tab 62;"PROFIT";
		Print #0; Tab 70;"GP %";
	end if
	! If Not(ARCODE)
	!   Print #0; Tab 75;"PRIOR MTH";
	!   Print #0; Tab 86;"CURRENT MTH";
	! Else 
	!   Print #0; Tab 86;"       SALE";
	! End If
	if custom_customer$ <> "CSS"
		print #0; tab 77;"COMM %";
	end if
	print #0; tab 86;"SPLT %";
	if sw[0]
		Print #0; Tab 97;"AMT PAID";
	end if
	Print #0; Tab 109;"COMM AMT";
	if sw[0]
		If SUMM = 0 And PURGEFLAG = 1 And PRT_PAIDONLY = 1
			Print #0; Tab 119;"PAID DATE";
		Else 
			Print #0; Tab 120;"COMM DUE";
		End If 
	end if
	Print #0;" "
	Print #0;"\15\";
	HEADING = 1
	if doSubHeadings
		call PrintSalesman()
		call PrintCustomer()
	end if
else
  include "src/callsuberr.inc"
end try
end sub


sub SortCommFile()
try
	! sort commission file
	COUNT = 0
	K1$ = N3 Using "###"
	do
		Search #2,3,1;K1$,R1,E
		If E = 2 exit do
		If E error 11000
		Mat Read #2,R1,0;S1;
		Mat Read #2,R1,28;S3;
		Mat Read #2,R1,36;S4;
		Mat Read #2,R1,52;SMAT$;
		Mat Read #2,R1,54;S7;
		if HIST
			mat read #2,R1,146;commDiv;
		else
			mat read #2,R1,140;commDiv;
		end if
		COUNT = COUNT + 1
		If ARCODE If S4[0] <> ARCODE Goto nextCommissionRec
		If YEAR_ Or ARCODE ! year could be zero when entering month/year
			X$ = S1[3] Using "&&&&&&";TEMPYR = X$[1,2]
			TEMPMTH = X$[3,4]
			If S4[0] <> TEMPMTH ! invoice date not match ar period on record
				If S4[0] >= 11 And TEMPMTH <= 3 ! period at eoy, but invoice date in next
					TEMPYR = TEMPYR - 1
					If TEMPYR < 0 Let TEMPYR = 100 - TEMPYR
				End If 
				If S4[0] <= 2 And TEMPMTH >= 10 ! period at start of year ,  invoice
					TEMPYR = TEMPYR + 1
				End If 
			End If 
			If TEMPYR >= 100 Let TEMPYR = TEMPYR - 100
			If YEAR_ <> TEMPYR Goto nextCommissionRec
		End If 
		X2 = S1[3] \ call ConvertYYMMDD2Jul()
		if x2 = -1 let X2 = 0
		JWDATE = X2
		If Not(ARCODE) If JWDATE < JDATE[0] Goto nextCommissionRec
		If Not(ARCODE) If JWDATE > JDATE[1] Goto nextCommissionRec
!if s3[1]<>10001 goto nextCommissionRec   !!! temp line
		If S1[0] < N3 Goto nextCommissionRec
		If S1[0] > N4 exit do
		! division check - needs a/r!
		call CheckAR()
		if sortdiv and (commDiv<SDiv or commDiv>ediv) goto nextCommissionRec
		K9$ = " ",K9$
		if not(sortdiv)
			! 1-3: Salesrep
			! 4-9: Customer
			! 10-19: Invoice/CM
			! 20-20: Type
			K9$[1,3] = K1$[1,3]
			K9$[4,9] = S3[1] Using "######"
			K9$[10] = K1$[4]
		Else
			! 1-3: Division
			! 4-6: Salesrep
			! 7-12: Customer
			! 13-22: Invoice/CM
			! 23-23: Type
			k9$[1,3]=commDiv using "###"
			k9$[4,6]=k1$[1,3]
			k9$[7,12]=S3[1] using "######"
			k9$[13]=k1$[4]
		Endif
		Search #9,4,1;K9$,R1,E
		If E error 11000
		SORTKEY = SORTKEY + 1
	nextCommissionRec: !
	loop
else
  include "src/callsuberr.inc"
end try
end sub

sub BuildSummarySort()
try
	ch_98 = findchannel()
	SCRATCH$ = "[1:256] 6/SUMTMP" + Str$(Spc(6)) + "!"
	Build #ch_98,SCRATCH$
	R98 = 25 \ Search #ch_98,0,1;SCRATCH$,R98,E \ If E error 11000
	R98 = 1000 \ Search #ch_98,0,0;SCRATCH$,R98,E \ If E error 11000
	R98 = 0 \ Search #ch_98,1,0;SCRATCH$,R98,E \ If E error 11000
else
  include "src/callsuberr.inc"
end try
end sub

sub InsertRepSummaryRec()
try
	K98$ = " ",K98$
	K98$[1,3] = S8 Using "###"
	Search #ch_98,2,1;K98$,R98,E \ If E > 2 error 11000
	If E = 1 ! "insert record
		K98$[1,3] = S8 Using "###"
		E = 2
		Search #ch_98,1,0;K98$,R98,E
		If E error 11000
		Search #ch_98,4,1;K98$,R98,E
		If E error 11000
		SNAME$[1,15] = S1$[1,15]
		If (PT8[5] + T8[5])
			GP = FNW((PT8[5] + T8[5] - T8[0]) / (PT8[5] + T8[5]) * 100)
		Else 
			GP = 0
		End If 
		COST = T8[0]
		PROFIT = PT8[5] + T8[5] - T8[0]
		PRIMTH = PT8[5]
		CURMTH = T8[5]
		AMTPAID = T8[6]
		COMMAMT = T8[7]
		COMMDUE = T8[8]
		Mat Write #ch_98,R98;SNAME$;
		Write #ch_98,R98,16;GP;
		Write #ch_98,R98,22;COST;
		Write #ch_98,R98,28;PROFIT;
		Write #ch_98,R98,34;PRIMTH;
		Write #ch_98,R98,40;CURMTH;
		Write #ch_98,R98,46;AMTPAID;
		Write #ch_98,R98,52;COMMAMT;
		Write #ch_98,R98,58;COMMDUE;
		SUM_COUNT = SUM_COUNT + 1
	End If 
else
  include "src/callsuberr.inc"
end try
end sub

Sub UnpackDate()
try
	! *UNPACK DATE  X2 TO X$
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
else
  include "src/callsuberr.inc"
end try
end sub

Sub ConvertYYMMDD2Jul()
try
	! CONVERT YYMMDD TO JULIAN (x2=-1 NOGOOD, x2<>-1=OKAY)
	if x2<=0
		let x2 = -1
		exit sub
	end if
	X$ = X2 Using "&&&&&&"
	Call DateToJulian(1,X$,X$,E)
	If E
		let x2 = -1
		exit sub
	end if
	X2 = X$[1,5]
else
  include "src/callsuberr.inc"
end try
end sub

Sub OpenFilesGetControlInfo()
try
	Mat Read #1,60,50;P60$;
	For J = 2 To 7
		Read J1
		if J1 <> -1
			Read #1,88,Abs(J1);J$;
			If J < 0 Ropen #J,J$ Else Open #J,J$
		end if
	Next J
	Data "2240","-1824","-1808","-1504","-1408","-1"
	OPEN #7,"4/commaudit"+STR$(intco)
	ch_invh=OpenFile(-1136,intCo) \ If ch_invh = -1 Error 42
	ch_invl=OpenFile(-1184,intCo) \ If ch_invl = -1 Error 42
	ch_ccode=OpenFile(-1728,intCo) \ If ch_ccode = -1 Error 42
	Read #1,3;COMP$;
	Mat Read #1,0,100;J8$;
	Mat Read #1,0,108;ARDATE;
	Mat Read #1,0,120;ARMONTH;
	Mat Read #1,19,50;P9$;
	CF$ = P60$[37,37]
	ARDATE$ = ARDATE Using "&&&&&&"
	CH_SLSMCOMM = 2
	ch_commaudit = 7
	if sw[1]
		ch_log = OpenHypoLog(e$,"6/COMMPAIDHYPO"+str$(intco)) \ if ch_log<0 error 52
	end if
else
  include "src/callsuberr.inc"
end try
End Sub

Sub CheckForHistory()
try
	SCRATCH$ = "4/SSLSMCOMMH" + Str$(IntCo) ! Str$(Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
	Call FindF(SCRATCH$,SCR)
	If Not(SCR)
		HAVEHIST = 0
	Else 
		HAVEHIST = 1
	End If 
else
  include "src/callsuberr.inc"
end try
End Sub

Sub ValidateInput()
try
	returnStatus = 0 ! default bad status
	EPAYDATE = 591231;SPAYDATE = 700101
	SORTKEY = 0
	ARCODE = 0
	YEAR_ = 0
	N3 = 0
	N4 = 999
	SUMM = 0
	PRTCOST = 0
	InvoiceDetail = 0
	SDiv=0;EDiv=99;sortdiv=0

	! AR PERIOD
	call dxget("ARMONTH",tmp$)
	K2$=RTrim$(tmp$) ! Call String(1,K2$)
	ARCODE = k2$
	If K2$ <> ""
		If ARCODE < 1 Or ARCODE > 12 ! Goto EDARCODE
			e$="Invalid Month Number"
			exit sub
		Endif
		If ARCODE
			call dxget("ARYEAR",tmp$)
			tmp$=Trim$(tmp$)
			if len(tmp$)>2 ! sent 4 digit?
				K2$=tmp$[3,4] ! just last 2
			Else
				k2$=RTrim$(tmp$)
			Endif
			YEAR_ = K2$
		end if
	end if
	if doingSalesrepAudit and ARCODE ! make sure they didn't enter both!
		call dxget("STARTDATE",tmp$)
		if rtrim$(tmp$) = "" call dxget("ENDDATE",tmp$)
		if rtrim$(tmp$) <> ""
			e$ = "Cannot enter both AR month and transaction range!"
			error 10000
		end if
	end if
	! TRANSACTION RANGE - only if AR PERIOD not entered 
	if NOT(ARCode) ! one or the other
		If STARTDATE = 0 Let STARTDATE = 700101
		J1 = STARTDATE
		call dxget("STARTDATE",tmp$)
		if doingSalesrepAudit and tmp$ <> ""
			tmp1$ = tmp$[1,2]+"/"+tmp$[3,4]+"/"+tmp$[5,6]
			tmp$ = tmp1$
		end if
		tmp1$=chkDteFrmt$(E$,tmp$)
		if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
		if tmp1$<>""
			tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
		Else
			tmp$="19"+StartDate using "&&&&&&"
		Endif
		J1=tmp$[3,10]
		If J1 Let X2 = J1 \ call ConvertYYMMDD2Jul()
		if x2<=0
			e$="Invalid Start Date"
			exit sub
		Endif
		STARTDATE = J1;JDATE[0] = X2
		If ENDDATE = 0 Let ENDDATE = 591231
		J1 = ENDDATE
		call dxget("ENDDATE",tmp$)
		if doingSalesrepAudit and tmp$ <> ""
			tmp1$ = tmp$[1,2]+"/"+tmp$[3,4]+"/"+tmp$[5,6]
			tmp$ = tmp1$
		end if
		tmp1$=chkDteFrmt$(E$,tmp$)
		if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
		if tmp1$<>""
			tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
		Else
			tmp$="20"+EndDate using "&&&&&&"
		Endif
		J1=tmp$[3,10]
		X2 = J1 \ call ConvertYYMMDD2Jul()
		if x2<=0
			e$="Invalid End Date"
			exit Sub
		Endif
		ENDDATE = J1;JDATE[1] = X2
		If JDATE[0] > JDATE[1]
			E$="Invalid Date Range"
			exit Sub
		End If 
	end if ! if not(ARCODE)
	! STARTING SALESREP
	call dxget("STSLSM",tmp$) \ if tmp$="" let tmp$=Str$(N3)
	k2$=tmp$
	if repSecurity k2$ = str$(repSecurity)
	N3 = K2$
	! END SALESREP
	call dxget("ENDSLSM",tmp$) \ if tmp$="" let tmp$=Str$(N4)
	K3$=tmp$
	if repSecurity k3$ = str$(repSecurity)
	N4 = K3$
	If N3 > N4
		e$="Invalid Salesperson Range"
		Exit Sub
	end if
	! no summary only on transactional report
	call dxget("TOTONLY",tmp$)
	summ = 0
	! start & End division - if we're here, were FULL TRANSACTIONAL
	call dxget("STDIV",tmp$) \ sdiv=tmp$
	call dxget("ENDDIV",tmp$) \ if RTrim$(tmp$)="" let tmp$="99"
	ediv=tmp$
	if sdiv>ediv
		e$="Invalid Division Range"
		exit sub
	Endif
	call dxget("DIVSORT",tmp$) \ let tmp$=UCASE$(RTRIM$(tmp$))
	sortdiv=0 \ if tmp$="Y" let sortdiv=1
	! IF RTRIM$(UCASE$(Userid$))="JIMS" let sdiv=1;ediv=2;sortdiv=1 ! TEST
	! PRINT COST AND GP
	if doingSalesrepAudit
		! cost printing is determined
		! by security access setup
		PRTCOST = 0
		if cost_lev[1]>0 PRTCOST = 1 ! can at least via loaded cost
	else
		call dxget("COSTGP",tmp$)
		j1=0 \ if ucase$(tmp$)="Y" let j1=1
		PRTCOST = 0 \ If J1 Let PRTCOST = 1
	end if
	! PURGE? paid only , all , or audit version ?
	PRT_PAIDONLY = 0
	UNMARK_PURGE = 0
	if doingSalesrepAudit
		z1$ = "3" ! purgeflag - set to audit only!
	else
		call dxget("PRGTYPE",tmp$)
		z1$=tmp$
		If Z1$ <> "1" And Z1$ <> "2" And Z1$ <> "3" ! Goto EDPURGE
			e$="Purge Type: Please select 1 2 or 3"
			Exit Sub
		Endif
	end if
	PURGEFLAG = Z1$
	! if purge is paid only or this is an audit version
	If PURGEFLAG = 1 or PURGEFLAG = 3
		call dxget("PAIDONLY",tmp$)
		j1=0 \ if UCase$(tmp$)="Y" let j1=1
		PRT_PAIDONLY = 0 \ If J1 Let PRT_PAIDONLY = 1
		If PRT_PAIDONLY = 1
			! PAY DATE RANGE TO PRINT
			If Not(SPAYDATE) Let SPAYDATE = 700101
			call dxget("STPAYDATE",tmp$)
			tmp1$=chkDteFrmt$(E$,tmp$)
			if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
			if tmp1$<>""
				tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
			Else
				tmp$="19"+SPAYDATE using "&&&&&&"
			Endif
			J1=tmp$[3,10]
			If J1 Let X2 = J1 \ call ConvertYYMMDD2Jul()
			if x2<=0
				e$="Invalid Start Payment Date"
				exit sub
			Endif
			SPAYDATE = J1;JSPAYDATE = X2
			If EPAYDATE = 0 Let EPAYDATE = ARDATE
			call dxget("ENDPAYDATE",tmp$)
			tmp1$=chkDteFrmt$(E$,tmp$)
			if tmp1$[1,1]<"0" and tmp1$[1,1]>"9" let tmp1$=""
			if tmp1$<>""
				tmp$=formatdate2$(tmp1$) ! mm/dd/yyyy to yyyymmdd
			Else
				tmp$="20"+EPAYDATE using "&&&&&&"
			Endif
			J1=tmp$[3,10]
			X2 = J1 \ call ConvertYYMMDD2Jul()
			if x2<=0
				e$="Invalid End Payment Date"
				exit sub
			Endif
			EPAYDATE = J1;JEPAYDATE = X2
			If JEPAYDATE < JSPAYDATE
				e$="Invalid Payment Date Range"
				exit sub
			End If 
		End If ! if PRT_PAIDONLY
	End If !"purgeflag =1 or 3
	UNMARK_PURGE = 0
	! HISTORY QUESTION
	if doingSalesrepAudit
		tmp$="C"
	else
		if havehist ! only ask if it's there
			call dxget("CHCOMM",tmp$)
			tmp$=UCase$(RTrim$(tmp$))
		Else
			tmp$="C"
		Endif
	end if
	J$=tmp$
	If J$ <> "H" And J$ <> "C" ! Goto HIST_QUEST
		e$="Please select C or H"
		exit sub
	Endif
	HIST = 0 \ If J$ = "H" Let HIST = 1
	If J$ = "H"
		HIST = 1
		Close #CH_SLSMCOMM
		close #ch_commaudit
		SCRATCH$ = Str$(IntCo) ! Str$(Int((Spc(5) - Int(Spc(5) / 16384) * 16384) / 64))
		Open #CH_SLSMCOMM,"4/SSLSMCOMMH" + SCRATCH$
		open #ch_commaudit,"4/commaudith" + scratch$
	Else 
		HIST = 0
	End If 
	If Not(HIST) And PURGEFLAG = 3
		call dxget("UMKPRG",tmp$)
		J1=0 \ if tmp$="Y" let j1=1
		UNMARK_PURGE = 0 \ If J1 Let UNMARK_PURGE = 1
	End If 
	call dxget("Printer",tmp$) ! let's see if 1 selected (-- = NONE)
	tmp$=rtrim$(tmp$)
	if tmp$[1,2]="--"
			e$="NO PRINTER SELECTED"
			exit sub
	Endif
	if doingSalesrepAudit
		try
			toscreen = 0 \ J9 = Chf(0) 
		else
			Let toscreen = Spc(8)
		end try
		If toscreen and toscreen <> 49 error toscreen
		SCREENPRINT=toscreen
	else
		onchannelno=0 ! zero for channel 
		printchan = openprinter(e$,onchannelno) 
		Toscreen=0
		if printchan=-1 let Toscreen=1 ! to browser
		let SCREENPRINT=toscreen
	end if
	returnStatus = 1 ! yup - all good now
	call dxget("TOTONLY",tmp$)
	if tmp$ = "3" InvoiceDetail = 1
else
	include "src/callsuberr.inc"
end try
end sub

sub DivisionTotal()
try
	if s10<>-1 Call CustomerTotal()
	call SalesmanTotal()
	call PrintHeadings(0)
	if screenprint ! xml
		if summ
			tmp$=Str$(HDiv),fdel$," DIV TOTALS",fdel$ ! 
		Else
			tmp$=Str$(HDiv),fdel$," DIV TOTALS",fdel$
			tmp$=tmp$,fdel$,fdel$ ! no cust/name
			tmp$=tmp$,fdel$,fdel$ ! no inv / date
		Endif ! rest is standard
		tmp$=tmp$,Str$(HDiv),fdel$ ! already sent - send again?
		If PRTCOST
			x3=0
			if (TD8[5] + d8[5]) let x3=FNW((TD8[5] + D8[5] - D8[0]) / (TD8[5] + D8[5]) * 100)
			tmp$=tmp$,LTrim$(X3 Using "-----#%"),fdel$
			tmp$=tmp$,LTrim$(D8[0] Using "---------#.##"),fdel$
			tmp$=tmp$,LTrim$(TD8[5] + D8[5] - D8[0] Using "---------#.##"),fdel$
		Endif
	! 	if not(ARCODE)
	! 		tmp$=tmp$,LTrim$(TD8[5] Using "---------#.##"),fdel$
	! 	Endif
		tmp$=tmp$,LTrim$(D8[5] Using "---------#.##"),fdel$
		if sw[0] tmp$=tmp$,LTrim$(D8[6] Using "---------#.##"),fdel$
		tmp$=tmp$,fdel$,fdel$   ! comm% split%
		tmp$=tmp$,LTrim$(D8[7] using "---------#.##"),fdel$
		if sw[0]
			If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
				tmp$=tmp$,LTrim$(D8[8] Using "---------#.##"),fdel$
			Else
				tmp$=tmp$,fdel$
			End If 
		end if
		If PURGEFLAG = 3 let tmp$=tmp$,fdel$
		tmp$=tmp$,rdel$
		call addtostr(e$,rstr$,tmp$)
		goto DVTLDone ! that's all
	Endif
	Print #0;""
	Print #0;"**DIV ";HDiv;" TOTALS**";
	Print #0; Using "-------#.##"; Tab 35;D8[5];
	If PRTCOST
		Print #0; Using "-------#.##"; Tab 46;D8[0];
		Print #0; Using "-------#.##"; Tab 56;TD8[5] + D8[5] - D8[0];
		If (TD8[5] + D8[5]) Print #0; Using "---#%"; Tab 69;FNW((TD8[5] + D8[5] - D8[0]) / (TD8[5] + D8[5]) * 100);
	end if
	! If Not(ARCODE) Print #0; Using "-------#.##"; Tab 74;TD8[5];
	! Print #0; Using "-------#.##"; Tab 86;D8[5];
	if sw[0]
		Print #0; Using "-------#.##"; Tab 94;D8[6];
	end if
	Print #0; Using "-------#.##"; Tab 106;D8[7];
	if sw[0]
		If SUMM <> 0 Or PURGEFLAG <> 1 Or PRT_PAIDONLY = 0
			Print #0; Using "------#.##"; Tab 112;D8[8];
		End If 
	end if
	print #0;""
	DVTLDone: ! finish
	clear D8[]
	TD8[5] = 0
	If SUMM 
		Let LN = LN + 1
	else
		LN = 9999
	end if
else
  include "src/callsuberr.inc"
end try
end sub

Sub ErrorOut()
try
	ReturnStatus = 0 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
	if doingSalesrepAudit ReturnStatus = 1 ! block IDs need different status
	Message$ = e$                                              
	Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
	Call AddToStr(e$,rstr$,WebStr$)                            
	Call SetOutPut(e$,rstr$)                                   
else
  include "src/callsuberr.inc"
end try
End Sub


else ! MAIN TRY
	include "src/callmainerrnet.inc"
end try
End

External function OpenHypoLog(e$,filename$)
try
	dim %1,logchan,estatus
	
	logchan = findchannel()
	build #logchan,filename$+"!" as "Text"
	close #logchan
	try
		open #logchan,filename$ as "Text"
	else
		exit function -1
	end try
	! setfp #logchan,chf(400+logchan)/512,chf(400+logchan) MOD 512;
	! position to end of file
else
	include "src/callsuberr.inc"
end try
End Function logchan


External sub WriteHypoLog(e$, filechan, msg$)
try
	print #filechan;msg$
else
	include "src/callsuberr.inc"
end try
End Sub