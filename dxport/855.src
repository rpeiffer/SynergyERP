! >>> Program 855
!
! description   Allocated materials report
!
! loadsave -w -n 100,10 -o prog/dxport/855.dl4 src/855.src
!
include "src/copyright.inc" ! dx

Declare Intrinsic Sub Time
Option Default Dialect IRIS1
Rem MX855 - ALLOCATED MATERIALS
Rem AUTHOR: !@#$%^&*(   MAR 13, 1986
Rem LAST UPDATE:
dim 1%,SC,SR,PFU1[20],CNVTU[2],3%,PFU2[6],CNVTA,A[33],J4$[50]
try ! main try
Dim P$[156],W5$[64],C$[30],P1$[4],P9$[50]
Dim 2%,B[24],C4[8]
Dim 2%,W2[7],L1[1],H0[5]
Dim 3%,W7[4],L4[4],BMAMT,COST,AMNT,S3
Dim 1%,L2[4],S2[1],T[2],W5[4]
Dim J$[40],J1$[30],J2$[40],J3$[40],J8$[30]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[10]
Dim K1$[50],K2$[20],K3$[20],K4$[30],K5$[30],X$[10]
Dim D8$[8],S1$[1],T9$[26]
! DX stuff
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[800],tmp2$[800],Message$[200],WebStr$[200]
dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]

dim 3%

Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)

Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

Rem OPEN FILES
For J = 2 To 9
	Read J1
	If J1 = -1 Goto L830
	Read #1,88,J1;J$;
	Open #J,J$
L830: Next J
Data "1792","1728","528","512","2432","2416","1808","0 "
Read #1,3;J1$;
Mat Read #1,0,100;D8$;
Rem FILES=2-PARTS, 3-CODE, 4-WOLFLE, 5-WOHFLE, 6-POFLEL, 7-POFLEH
Rem FILES=8-SCUSTOMER, 9-DVFLE
Mat Read #1,19,50;P9$;
j8 = 0
try
	J9 = Chf(0) 
else
	J8 = Spc(8)
end try
If J8 If J8 <> 49 error j8
J9 = 62 \ If J8 Let J9 = 20
if j8
	e$ = "Browser output not supported for this report."
	error 10000
else
	Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
end if
k4$ = GetParameter$("SPROD")
k5$ = GetParameter$("EPROD")
If K5$ = "" Let K5$ = "}}}}}}"
If K4$ > K5$
	e$ = "Invalid product range!"
	error 10000
end if

Gosub L5800 ! "DO HEADING FIRST

L2000: Search #2,3,3;K1$,R1,E
	If E Goto Outend
	If K1$ > K3$ Goto Outend
	If K1$[5] > K5$ Goto L2000
	If K1$[5] < K4$ Goto L2000
	Rem  IF K1$[1,4]="MACH" GOTO 2000 !!!!  0200" GOTO  2015
	Rem  IF K1$[1,4]="LABR" GOTO 2000 !!! <>"0400" GOTO 2000
	E2 = R1 \ Gosub L3800
	Rem   IF A[1]=0 GOTO 2000  
	S2[0] = PFU1[8] \ S3 = A[0] \ Gosub L6800
	A[0] = BMAMT \ S3 = A[1] \ Gosub L6800
	A[1] = BMAMT
	Gosub L4000 ! P.O. ORDER DETAIL
	Gosub L3000 ! WORK ORDER DETAIL
	If Not(T9[0]) Goto L2000 ! "was 2053 (IF T9=0 NOTHING PRINTED)

	Goto L2059

! LOOKS LIKE DEAD CODE
!
! 	Gosub L5800
! 	Print #0; Tab 2;P$[140,151]; Tab 15;P$[9,38];
! 	Print #0; Using "-------#.##"; Tab 46;A[0];
! 	Print #0; Using "--------#.##"; Tab 57;A[1]
! 	Rem

	L2059: P1$ = " ",P1$ \ If S2[0] Read #3,S2,10;P1$[1,4];
	If P9$[26,26] = "Y" Print #0; Tab 2;P$[63,92];
	Print #0; Tab 35;"STOCK U/M = ";P1$[1,4];
	Print #0; Using "AVAILABLE: ---------#.##"; Tab 55;A[0] + T9[1] - T9[2];
	Print #0; Using "TOTAL PO: ---------#.## TOTAL WO: ---------#.##"; Tab 84;T9[1];T9[2]
	Gosub L5800
	Print #0;" "
	Gosub L5800
	T9[0] = 0 \ T9[1] = 0 \ T9[2] = 0
Goto L2000
! LOOKS LIKE DEAD CODE
! 	Rem GET SIZE FROM PROD SPEC
! Return 
L3000: Rem GET WORK ORDER INFO
	J2$ = K1$[5,16]
	L3020: Search #4,3,2;J2$,R2,E
	If E Return 
	If J2$[1,12] <> K1$[5,16] Return 
	Mat Read #4,R2;W5$;
	Mat Read #4,R2,64;W5;
	If W5[4] = -2 Goto L3020 ! "MESSAGE LINE - BYPASS
	Mat Read #4,R2,90;W7;
	Goto L3100
	W5$ = " ",W5$
	W7 = 0 \ W7[1] = 0 \ W7[2] = 0
Return 

L3100: Rem GET WORK ORDER HEADER INFO
	J3$ = W5$[33,38]
	Search #5,2,1;J3$,R3,E
	If E Goto L3190
	Rem IF J3$[1,6]<>W5$[33,38] GOTO 3190
	Mat Read #5,R3,188;W2;
	Gosub L3400 ! GET CUSTOMER
	Gosub L3500 ! GET MAIN PRODUCT FOR SPEC
	Goto L3200
	L3190: W2[0] = 0
	L3200: Rem GET PROD SPEC
	P1$ = " ",P1$
	Read #3,S2,10;P1$;
	S3 = W7[0] \ S2 = PFU1[8] \ Gosub L6800
	W7[0] = BMAMT
	S3 = W7[1] \ Gosub L6800
	W7[1] = BMAMT
	S3 = W7[2] \ Gosub L6800
	W7[2] = BMAMT
	Rem PRINT LINE GET NEXT
	S1$ = "W"
	Gosub L5800
	Gosub L5000
	Goto L3020
	L3400: Rem NEED CUSTOMER NAME
	C = 8
	Rem IF J3$[1,1]="1" LET C=10
	J3$ = " ",J3$
	J3$ = W2[5] Using "######"
	Search #C,2,1;J3$,R4,E
	If E Goto L3460
	Read #C,R4,30;C$;
Return 
L3460: C$ = "CUSTOMER NOT FOUND!"
Return 

L3500: Rem GET TOP LEVEL WORK ORDER
	J3$ = " ",J3$
	J3$ = W5$[33,37],"  "
	Search #5,2,1;J3$,R5,E
	If E Return 
	Read #5,R5,120;W5$[1,12];
	Return 
	L3800: Rem READ PROD
	Mat Read #2,E2;P$;
	Mat Read #2,E2,156;B;
	Mat Read #2,E2,256;A;
	Mat Read #2,E2,512;PFU1;
	Mat Read #2,E2,554;PFU2;
	If Not(B[8]) Let B[8] = B[21] !!IF NO PRDTN USE AVG
	If Not(B[8]) Let B[8] = B[10] !!LAST TRY, USE P.O.
	A2 = B[8]
Return 

L4000: Rem NOW GET PO INFORMATION
Return !!NEED NEW PO LAYOUT
! ALL LOOKS LIKE DEAD CODE
! J2$ = " ",J2$
! J2$ = R1 Using "######"
! L4030: Search #6,3,2;J2$,R2,E
! If E Return 
! X2 = J2$[1,6]
! If X2 <> R1 Return 
! Mat Read #6,R2;L1;
! If Int(L1) >= 6 Goto L4030
! Mat Read #6,R2,8;L2;
! Mat Read #6,R2,42;L4;
! If L2[1] = 0 Goto L4030 !!DIRECT
! For Z = 1 To 7 \ J4$ = " ",J4$
!   J4$[1,1] = Z Using "#" \ J4$[2] = L1[1] Using "#####"
!   Search #7,2,1;J4$,H1,E
!   If Not(E) Goto L4100
! Next Z \ Goto L4030
! L4100: Rem GET VENDOR NAME
! Mat Read #7,H1,0;H0;
! Mat Read #7,H1,238;T;
! If T[1] = 1 Goto L4030 !!DIRECT
! Read #9,H0[1],0;C$;
! P1$ = " ",P1$
! Rem PRINT LINE GO FOR NEXT
! W5$[33,38] = H0[2] Using "######"
! W2[0] = H0[4]
! S3 = L4[1] \ S2[0] = PFU1[8] \ Gosub L6800
! W7[0] = BMAMT
! S3 = L4[2] \ Gosub L6800
! W7[1] = BMAMT
! S3 = L4[3] \ Gosub L6800
! W7[2] = BMAMT
! S1$ = "P"
! Gosub L5800
! Gosub L5000
! Goto L4030

L5000: Rem PRINT LINE
	If T9[0] = 1 Goto L5025
	Print #0; Tab 2;P$[140,151];
	Print #0; Tab 15;P$[9,38];
	Print #0; Using "-------#.##"; Tab 46;A[0];
	Print #0; Using "--------#.##"; Tab 57;A[1];
	L5025: Print #0; Tab 70;W5$[33,38];" ";S1$;
	Print #0; Tab 79;C$[1,15];
	If S2 Read #3,S2,10;P1$;
	Print #0; Tab 95;P1$[1,4];
	X2 = W2[0] \ Gosub L7700
	Print #0; Tab 111;X$;
	If W7[1] + W7[2] > W7 Let W7 = W7[1] + W7[2]
	If S1$ = "P" Print #0; Using "-------#.##"; Tab 120;W7[0] - W7[1] - W7[2]
	If S1$ = "W" Print #0; Using "-------#.##"; Tab 120;FNR((W7[0] - W7[1] - W7[2]))
	K2$ = K1$ \ T9[0] = 1
	If S1$ = "P" Let T9[1] = T9[1] + W7 - W7[1] - W7[2]
	If S1$ = "W" Let T9[2] = T9[2] + FNR((W7 - W7[1] - W7[2]))
Return 

L5800: Rem HEADINGS ROUTINE
	J1 = J1 + 1 \ If J1 < J9 Return 
	If J2 Print #0;"\14\";
	J2 = J2 + 1 \ J1 = 6
	If Not(J8) Print #0;"\15\";
	Print #0; Tab 10;D8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
	T9$ = "" \ Call Time(T9$)
	Print #0;" - 855 - ";T9$;
	Print #0; Tab 51;"ALLOCATED RAW MATERIALS REPORT"
	Rem
	Print #0;" "
	Print #0; Tab 2;"PRODUCT";
	Print #0; Tab 15;"DESCRIPTION";
	Print #0; Tab 49;"ON HAND";
	Print #0; Tab 59;"ALLOCATED";
	Print #0; Tab 70;"WO/PO #";
	Print #0; Tab 79;"NAME";
	Print #0; Tab 95;"SIZE";
	Print #0; Tab 112;"DATE";
	Print #0; Tab 120;"QUANTITY";
	Print #0;" "
	Rem
	Print #0;"\15\";
Return 

L6800: Rem BASE(S3) -> STOCK
	CNVTA = S3 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 1
	Gosub L6950
	If AMNT <= 0 Let AMNT = S3
	BMAMT = AMNT \ Return 
	Rem BASE COST -> PRDTN COST
	CNVTA = A2 \ CNVTU[0] = 0 \ CNVTU[1] = S2[0] \ CNVTU[2] = 2
	Gosub L6950
	If AMNT <= 0 Let AMNT = A2
	COST = FNR(AMNT)
Return 

! LOOKS LIKE DEAD CODE
! Rem PRDTN -> BASE UNITS
! CNVTA = BMAMT \ CNVTU[0] = PFU1[13] \ CNVTU[1] = 0 \ CNVTU[2] = 1
! Gosub L6950
! If AMNT <= 0 Let AMNT = BMAMT
! S3 = AMNT \ Return 
! Rem STOCK -> BASE COST
! CNVTA = COST \ CNVTU[0] = PFU1[8] \ CNVTU[1] = 0 \ CNVTU[2] = 2
! Gosub L6950 \ If AMNT <= 0 Let AMNT = COST
! COST = AMNT

! Return 

L6950: Rem "====== unibasic 5+ logic
	Call "MXPRCONV5.DL4",PFU1[],PFU2[],A[],CNVTU[],CNVTA,SC,SR,FLAG,e$,rstr$
	If FLAG Let E = FLAG \ error 11000
	AMNT = CNVTA
Return 

L7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
	X$ = " ",X$ \ X$[10] = ""
	X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
	X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
	X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
	X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 

Outend: Rem EXIT
Close 
Stop 

else ! main try
	include "src/callmainerrnet.inc"
end try
end
stop