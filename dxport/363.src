! >>> Program 363
!
! description Purchase Order Register 
!
! loadsave -w -n 100,10 -o prog/dxport/363.dl4 src/363.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc"
Rem BEDIT Version: 2.2 OBJECT CODE     Created: AUG 16, 2004  18:35:02
Rem /w/papermaster/r2002//usr/acct/bill/work/r2002/po/po363.src (univ2) [bill] {14042}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub DateToJulian,FindF,FindF,InpBuf,String,VerifyDate,Time
Declare Intrinsic Sub dxopen,dxget,dxset,dxclose,dxsave,getglobals
!Option Default Dialect IRIS1
Declare Intrinsic Sub DateToJulian
Declare Intrinsic sub programdump,env
Declare Intrinsic function findchannel
! external libs for subs/functions
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare External Function getmsg$,expandarray
External Lib "ubsfunc.dl4"
Declare External Function getuidrec,getuidinfo$

Rem PO363  PURCHASE ORDER REGISTER
Rem  AUTHOR: G.DOSCHER   2/19/81
Rem  LAST UPDATE:  G.DOSCHER  2/20/91
!If Err 0 Gosub ERR_TRAP
!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
Try
Dim 1%,F1,H4[3],X1[9],WHSE,2%,D9[5]
Dim 2%,H0[5],H3[4],V2,Q0[1],ponum
Dim 3%,J,totpo
Dim D8$[8],F$[20],H$[82],J$[40],J0$[10],J1$[40],J2$[20],J3$[40],J4$[40]
Dim K1$[50],P$[20],U3$[80],U5$[50],U9$[131],V$[36],W$[60],Y1$[9],X$[20]
Dim P9$[50],PMASK$[12]
Def FNR(X) = Sgn(X) * (Abs(Int((Abs(X) + .005) * 100) / 100))
Dim DEV$[20],HM$[30],nextblockid$[8],Message$[600],WebStr$[600]
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
Dim tmp$[800],tmp1$[200],blockid$[100],msg$[100]
Dim action$[30],options$[30],userid$[8],3%,fdel$[10],rstr$[1000],bsdel$[10],esdel$[10],rdel$[10]
! call dxopen() ! needed?

! Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
Call getglobals("blockx",0,blockid$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)

COID=IntCo ! E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
Close #1 ! getsession open cntrl# as READONLY
J$="cntrl/cntrl"+Str$(COID)
Open #1,J$
For K1 = 2 To 12 \ Read J \ If J = 0 Goto L_820
  Read #1,88,Abs(J);J$;
  If J < 0 Ropen #K1,J$ Else Open #K1,J$
L_820: Next K1
Data "0","-1792","0","-2400","-1808","0","2416","0","0","-2464","0"
Mat Read #1,0,100;D8$;
Mat Read #1,19,50;P9$;
Mat Read #1,115;D9;
L = 60
U9$ = "-",U9$
Mat Read #1,115,40;Q0; \ If Q0[1] <= 0 Let Q0[1] = 2
PMASK$ = "##########"
X = Len(PMASK$) - Q0[1] \ If X < 0 Let X = Q0[1]
PMASK$[X,X] = "."
Def FNP(X) = Sgn(X) * (Int(Abs(X) * 10 ^ Q0[1] + .5) / 10 ^ Q0[1])
Call DXGet("RPRNT",tmp$)! ***** DXGET REPRINT *****
Y1$="N" !L_1000: Print @0,20;"IS THIS A REPRINT?  (Y/N) ";'CE';
IF tmp$<>"" let y1$="Y"
!Input ""Y1$
!If Y1$ <> "Y" If Y1$ <> "N" Goto L_1000
S9 = 2 ! regular status
If Y1$ = "Y" Let S9 = 3 ! reprint status
Call DXGet("WHSE",tmp$)
LET whse=tmp$
if not(whse) and rtrim$(tmp$)<>"0"
	eflg=eflg+1
	Message$=Message$+"Invalid Warehouse Number Entered"
	goto outend:
endif
if whse<0 or whse>99
	eflg=eflg+1
	Message$=Message$+"Invalid Warehouse Number Entered"
	goto outend:
endif
!Gosub L_8300 ! check warehouse 
!Print @0,20;"PRINTING...  PLEASE WAIT . . . ";
!If Err 0 Gosub ERR_ESCAPE
!Signal 3,0
K1$ = S9 Using "##"
L_2000: Search #8,3,1;K1$,R8,E \ If E > 2 Gosub ERR_SEARCH
If E Goto OUTEND
X1 = K1$[1,2] \ If X1 <> S9 Goto OUTEND
Mat Read #8,R8,0;H0
If H0 <> X1
	ponum=k1$[3]
	eflg=eflg+1
	Message$=Message$+"Bypass PO# "+str$(ponum)+" Status Error. "
	goto L_2000:
	! Print "STATUS ERROR-- FILE DOESN'T MATCH INDEX!"
	!Unlock #8 \ Gosub ERR_SEARCH
endif
Mat Read #8,R8,24;H$
Mat Read #8,R8,222;H3
Mat Read #8,R8,242;H4
Read #5,H0[1],0;V$;
Read #5,H0[1],268;V2;
If WHSE If WHSE <> H4[1] Goto L_2000
Gosub L_5800
Gosub L_5000
Gosub L_4000
totpo=totpo+1
Goto L_2000
Return 
L_4000: Rem CHANGE STATUS
If S9 = 3 Return 
K1$[1,2] = " 3"
Search #8,4,1;K1$,R8,E
If E Gosub ERR_SEARCH
K1$[1,2] = " 2"
Search #8,5,1;K1$,R8,E
If E Gosub ERR_SEARCH
H0 = 3
Write #8,R8;H0;
Return 
L_5000: Rem PRINT LINE
Print #0; Using "    ###### ";H0[2];
Print #0; Using "######"; Tab 12;V2;
Print #0; Tab 21;V$[1,30];
Print #0; Tab 52;H$[1,14];
X2 = H0[3]
Gosub L_7000
Print #0; Tab 67;P$[1,8];
If H0[4] = 0
  Print #0; Tab 78;"        ";
Else 
  X2 = H0[4]
  Gosub L_7000
  Print #0; Tab 78;P$[1,8];
End If 
Print #0; Tab 88;H$[59,68];
If Not(H0[5]) Goto L_5050
X2 = H0[5]
Gosub L_7000
Print #0; Tab 99;P$[1,8];
L_5050: Print #0; Tab 113; \ If H4[0] = 0 Or H4[0] = 4 Print #0;"WHS";H4[1];
If H4[0] > 3 Print #0;"IMPORT ";
If H4[0] = 1 Or H4[0] = 5 Print #0;"DIRECT";
If H4[0] = 2 Or H4[0] = 6 Print #0;"INDIRECT";
If H4[0] = 3 Print #0;"MASTER";
Print #0;""
Return 
L_5800: L = L + 1
If L < 55 Return 
If P Print #0;"\14\";
P = P + 1
Print #0; Tab 2;"DATE ";D8$;
Print #0; Tab 120;"PAGE";P
Print #0; Tab 47;"P U R C H A S E   O R D E R   R E G I S T E R"
Print #0;""
Print #0; Tab 1;"     P.O.# ";
Print #0; Tab 13;"VENDOR #";
Print #0; Tab 22;"NAME";
Print #0; Tab 54;"REFERENCE #";
Print #0; Tab 68;"ORDER DATE";
Print #0; Tab 79;"SHIP DATE";
Print #0; Tab 89;"CONFIRMED ";
Print #0; Tab 100;"CONF. DATE";
Print #0; Tab 112;"W/D";
Print #0;""
L = 1
Print #0;U9$
Return 
L_7000: Rem PUT DATE FROM X2 INTO P$
U5$ = X2 Using "&&&&&&&"
P$[1,2] = U5$[4,5]
P$[3,3] = "/"
P$[4,5] = U5$[6,7]
P$[6,6] = "/"
P$[7,8] = U5$[2,3]
Return 
L_8300: Rem CHECK WAREHOUSE
L_8310: WHSE = 0 \ If D9[5] = 1 Goto L_8390
!Print @0,21;"Enter warehouse to use (1-";
!Print Using "##";D9[5];"), <CR> for all or   E: to exit ";'CE';
!Input Len 16386;""X$ \ If X$ = "E" Goto OUTEND
WHSE = X$
!If (Not(WHSE) And X$ <> "") Or WHSE < 0 Or WHSE > D9[5] Print 'RB'; \ Goto L_8310
L_8390: Return 
ERR_SEARCH: Rem
ENUM = E ;ELINE = Spc(16);CTERR = 0
If E = 5 Let CTERR = Err(8)
msg$ = "RETURN STATUS",(E + (CTERR * .001))
msg$ = msg$,"/ STATEMENT",ELINE," IN PROGRAM "
E$=msg$ \ Error 10000
Return ! End
OUTEND: Rem EXIT
Print #0;" -- END --"
Close 
!Chain "MX000C"
!Stop 
Call addtostr(e$,rstr$,esdel$) !end section -- DXBLOCK 
returnstatus=0
If Eflg>0
	ReturnStatus=1 ! ALWAYS - OTHERWISE NO DISPLAY 1=issues
	tmp$=""
Endif
if not(totpo)
	returnstatus=1
	let message$=message$+"There are no purchase orders available to register"
	if whse<>0
		let message$=message$+" for warehouse "+str$(whse)
	endif
	message$=message$+"."
else
	Let message$=message$+" "+str$(totpo)+" Purchase Order(s) Registered"
endif
call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)
call AddToStr(e$,rstr$,WebStr$)
call SetOutPut(e$,rstr$)
try Call dxclose() else rem
ELSE
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
end try
End ! the whole program
