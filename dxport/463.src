! >>> Program 463
!
! description Commission Audit Report
!
! loadsave -w -n 100,10 -o prog/dxport/463.dl4 src/463.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx

Rem BEDIT Version: 2.2 OBJECT CODE     Created: OCT 11, 2004  14:18:47
Rem /w/papermaster/r2002//usr/acct/jcs/work/devl/mx/mx463.src (univ2) [jcs] {42830}
Rem  Copyright (c) 2004 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Rem MX463 - COMMISSION CHANGE AUDIT/UPDATE
Rem AUTHOR: FOR LEWMAR   SEP 16, 1994
Rem LAST UPDATE:
!
External Lib "libgeneral.lib"
Declare External Sub GetSession,AddToStr,SetOutput,CreateNetStatus
Declare Intrinsic Sub FindF,InpBuf,String,Time
! - Option Default Dialect IRIS1
If Err 0 Gosub ERR_TRAP
!!If Spc(13) = 11 Print @0,0;"\177\UWHOTSPOT.\\HOTSPOT\\HOTSPOTIN.hsf\177\";
DIM CAS$[60],C1$[30],S1$[30]
DIM 1%,AS1[3],as4[1]
DIM 2%,AS2[1]
DIM 3%,AS3[5],S1[3],aorigcomm,as5[5]
DIM J$[40],J1$[30],J2$[20],J3$[40],J4$[40],J8$[8]
Dim 1%,F,X1,2%,X2,3%,J,X3,T9[20]
DIM K1$[50],K2$[20],K3$[20],X$[10],T9$[26],P9$[50],source$[10]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100],webstr$[200],MESSAGE$[200]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[20]	  \ Blank$=" ",Blank$
dim EndParam$[20] \ EndParam$="z",EndParam$
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
! call dxsave(0,"tmp/463in.txt!")
Def FNR(X) = Sgn(X) * (Int(Abs(X) * 100 + .5) * .01)
! Read #1,150,16;J$[1,16];
! Call FindF(J$,H) \ If Not(H) Goto L_8900
For J = 2 To 5
  Read J0 \ If J0 = -1 Goto L_830
  READ #1,88,ABS(J0);J$[1,16];
  If J0 < 0 Ropen #J,J$ Else Open #J,J$
L_830: Next J
Data "-1","1824","-1808","-1"
ROPEN #2,"4/commaudit"+STR$(intCO)
Mat Read #1,0,100;J8$;
Mat Read #1,19,50;P9$;
Read #1,3;J1$;
!!-!Open #5,"USERCNTRL"
Open #5,"files/cntrl/USERCNTRL"
!
If Err 0 Let J8 = Spc(8)
J8 = 0 \ J9 = Chf(0) \ If Err 0 Gosub ERR_TRAP
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
J9 = 59 \ If J8 Let J9 = 20
!
j2=0 ! page #
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"463",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
! call dxget("RUNMONTH",tmp$) \ if tmp$ = "" let EOM = 0 else let  EOM = 1  !  Is This an End of Month Run? (y/n) 
EOM = 0 ! No more end of month - purge happens on commission purge
call dxget("PAGEBREAK",tmp$) \  if tmp$ = "" let PGB = 0 else  Let PGB = 1! Page Break on Slsm Change? (y/n/e) 
call dxget("TOTALSONLY",tmp$) \ if tmp$ = "" let DETL = 1 else DETL = 0 ! Print Totals Only?  (y/n/
call dxget("SSLM",tmp$) \ SSLM = tmp$ ! Enter Starting Slsm
call dxget("ESLM",tmp$) \ if tmp$ = "" let ESLM = 999 else let  ESLM = tmp$ ! Enter Ending   Slsm
!
! if J8 and EOM=1 ! let EOM=0 ! print xml, end of month not allowed
! 	goto L_8950
! Endif
! if EOM let SLSM=0 \ ESLM=999 ! end of month, all salesmen
!
if SSLM < 0 or SSLM > 999 let e$="Invalid starting slsm, must be between 0 and 999!" \ error 10000
if ESLM < SSLM or ESLM > 999 let e$="Invalid ending slsm, must be between starting slsm  and 999!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
End If
!L_900: Rem
!Print 'CS'
!Print @0,0;"MX463 - COMMISSION AUDIT REPORT ";
!If J8 Print @0,10;'CE';"SCREEN RUN. . NO END OF MONTH OR UPDATE POSSIBLE" \ Goto L_1000
!Print @0,11;'CE';"IS THIS AN END OF MONTH RUN? (Y/N)   ";
!Input Len 16385;""J$
!Call String(1,J$)
!If J$ = "E" Goto OUTEND
!If J$ <> "N" If J$ <> "Y" Goto L_900
!EOM = 0 \ If J$ = "Y" Let EOM = 1
!If Not(EOM) Goto L_1000
!SSLM = 0;ESLM = 999
!L_1000: Rem START
!Print @0,14;'CE';"PAGE BREAK ON SLSM CHANGE? (Y/N/E)   ";
!Input Len 16385;""J2$
!Call String(1,J2$)
!If J2$ = "E" Goto OUTEND
!If J2$ <> "Y" If J2$ <> "N" Goto L_1000
!PGB = 0 \ If J2$ = "Y" Let PGB = 1
!L_1050: Print @0,15;'CE';"PRINT TOTALS ONLY?  (Y/N/E)    ";
!Input Len 16385;""J2$
!Call String(1,J2$)
!If J2$ = "E" Goto OUTEND
!If J2$ <> "Y" If J2$ <> "N" Goto L_1050
!DETL = 1
!If J2$ = "Y" Let DETL = 0
!If EOM Goto L_1200
!SSLM = 0;ESLM = 999
!Print @0,18;"ENTER STARTING SLSM, <CR> FOR ALL,    E: TO EXIT : ";'CE';
!Input ""K2$ \ If K2$ = "E" Or K2$ = "e" Goto OUTEND
!If K2$ = "" Let K3$ = "999" \ Goto L_1165
!Print @0,19;"ENTER ENDING   SLSM, <CR> FOR LAST,   E: TO EXIT : ";'CL';
!Input ""K3$ \ If K3$ = "E" Or K3$ = "e" Goto OUTEND
!If K3$ = "" Let K3$ = "999"
!L_1165: SSLM = K2$;ESLM = K3$
!If SSLM <= ESLM Goto L_1190
!Print @0,21;"INVALID RANGE ! ";'CE'; \ Signal 3,15 \ Goto L_900
!!!
if J8
	if  DETL = 0
		tmp$ = "SALESMAN #",fdel$
		tmp$ = tmp$,"OLD COMM$" ,fdel$
		tmp$ = tmp$,"NEW COMM$" ,fdel$
		tmp$ = tmp$, "DIFFERENCE" ,fdel$
	else
		tmp$ = "SALESMAN #",fdel$ ,"SALESMAN NAME",fdel$
		tmp$ = tmp$,"CUST #",fdel$
		tmp$ = tmp$,"NAME" ,fdel$
		tmp$ = tmp$,"INV/CM" ,fdel$
		tmp$ = tmp$,"TP" ,fdel$
		tmp$ = tmp$,"DATE" ,fdel$
		tmp$ = tmp$,"OLD COMM$" ,fdel$
		tmp$ = tmp$,"NEW COMM$" ,fdel$
		tmp$ = tmp$,"OLD %" ,fdel$
		tmp$ = tmp$,"NEW %" ,fdel$
		tmp$ = tmp$,"ADJUSTMENT TYPE" ,fdel$
		tmp$ = tmp$,"PORT" ,fdel$
		tmp$ = tmp$,"USER" ,fdel$
		tmp$ = tmp$,"OLD INV $" ,fdel$
		tmp$ = tmp$,"NEW INV $" ,fdel$
		tmp$ = tmp$,"OLD COST" ,fdel$
		tmp$ = tmp$,"NEW COST" ,fdel$
		tmp$ = tmp$,"OLD PROFIT" ,fdel$
		tmp$ = tmp$,"NEW PROFIT" ,fdel$
		tmp$ = tmp$,"REASON" ,fdel$
	End if
	call addtostr(e$,rstr$,tmp$+rdel$)
End if
L_1190: 
K1$ = K2$ ! \ If J2 If Not(J8) Print #0;"\14\";
Rem SORT BY SLSM/CUST/INV
!!Print @0,21;"SORTING, PLEASE WAIT . . .  ";'CE' \ Signal 3,0
J4$ = " ",J4$
L_1220: 
Search #9,3,1;J4$,R1,E 
If E = 2 Goto L_1250
Search #9,5,1;J4$,R1,E 
If E Let e$ = "syserrorfile 463 sortfile mode (m)=5 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",J4$ \error 10000
Goto L_1220
!
L_1250: Rem THRU FILE
k1$=" ",k1$
k1$[1,3] = SSLM USING "###"
sort_loop: !
	search #2,3,1;k1$,r1,e
	if e goto end_sort_loop:
	if val(k1$[1,3]) > ESLM goto end_sort_loop:
	GOSUB L_3000: ! "read file
	J4$ = " ",J4$
	J4$[1,3] = AS1[0] Using "###"
	J4$[4,9] = AS2[0] Using "######"
	J4$[10,19] = AS3[2] Using "##########"
	J4$[20,21] = AS1[1] Using "##"
	J4$[22,27] = R1 Using "######"
	R9 = R1
	Search #9,4,1;J4$,R9,E
	If E Let e$ = "syserrorfile 463 sortfile mode (m)=4 keyno (k)=1 r=",R9," e=",e," keyval (k$)=",J4$ \error 10000
	goto sort_loop: !
end_sort_loop: ! sorted

L_1900:
J1 = 90 \ J2 = 0
!!Print @0,21;"PRINTING, PLEASE WAIT . . .  ";'CE'; \ Signal 3,0
!!If J8 Print 'CS';
!!If Err 0 Gosub ERR_ESCAPE
If Err 0 Gosub ERR_TRAP
SLSM = 0
K1$ = " ",K1$
L_2000:
Search #9,3,1;K1$,R1,E 
If E = 2 Goto L_9100
If SLSM = 0 Let SLSM = K1$[1,3]
X2 = K1$[1,3] \ If X2 <> SLSM Gosub L_4500
SLSM = K1$[1,3]
Gosub L_3000
If TYPE = 6 or type = 7 or type = 9 Let AS3[0] = 0 - AS3[0];AS3[1] = 0 - AS3[1]
CUST = AS2[0]
If Not(DETL) Goto L_2180
Gosub L_3100
Gosub L_3200
dummy: ! DO NOT REMOVE - L_3200 RETURNS +1
Gosub L_3300
Gosub L_5800
GOSUB L_5000: \ let j1=j1+1 ! detail print now takes 2 lines
L_2180: Gosub L_2200
! - Signal 2,J0,A,B \ If J0 <> -1 Gosub CNTRLB_ERR_ESCAPE
Goto L_2000
!
L_2200: Rem TOTALS CALC
T9[6] = T9[6] + AS3[0]
T9[7] = T9[7] + AS3[1]
T9[4] = T9[4] + AS3[0]
T9[5] = T9[5] + AS3[1]
Return 
!

L_3000: !
	mat read #2,r1,0;as1;
	mat read #2,r1,8;as2;
	mat read #2,r1,16;as3;
	mat read #2,r1,52;source$;
	mat read #2,r1,62;cas$;
	mat read #2,r1,122;aorigcomm;
	mat read #2,r1,128;as4;
	mat read #2,r1,132;as5;
	LET TYPE=AS1[1]
RETURN
!

L_3050: ! WRITE
	mat write #2,r1,0;as1;
RETURN
!
L_3100: Rem CUSTOMER
J3$ = " ",J3$ \ J3$ = CUST Using "######"
Search #4,2,1;J3$,R4,E 
If E = 0 
  Mat Read #4,R4,30;C1$;
else
  C1$ = "CUSTOMER NOT ON FILE!"
endif
Return 
!
L_3200: Rem GET SALESMAN
J3$ = " ",J3$ \ J3$ = SLSM Using "###"
Search #3,2,1;J3$,R3,E 
If E Goto L_3270
Mat Read #3,R3,0;S1$;
Mat Read #3,R3,118;S1;
Return 1
!
L_3270: Rem NG
S1$ = " ",S1$;S1$ = "SALESMAN NOT FOUND!"
Return 
!
L_3300: Rem GET "USER" NAME
J2$ = " ",J2$
IF AS2[1]>0 IF AS2[1]<CHF(5) GOTO L_3350:
LET J2$="UNKNOWN USER"
IF AS2[1]=-1 LET J2$=" ",J2$;J2$="SUPER USER"
Return 
!
L_3350: Rem GET NAME
Mat Read #5,AS2[1],280;J2$;
Return 
!
L_4000: Rem TOTAL PRINT
HDG = 9 \ Gosub L_5800
if not(j8) 
  Print #0;"\15\** TOTALS **";
  Print #0; Using "------#.##"; Tab 56;T9[6];
  Print #0; Using "------#.##"; Tab 67;T9[7];
  Print #0; Using "------#.##"; Tab 80;"DIFFERENCE: ";(T9[7] - T9[6])
End if
HDG = 0
Return
!
L_4500: Rem SALESMAN SUBTOTAL
Gosub L_5800
if j8
  if DETL = 0 !!
    tmp$ = SLSM Using "###" ,fdel$ !!salesman
    tmp$ = tmp$ ,T9[4] Using "------#.##",fdel$ !!
    tmp$ = tmp$ ,T9[5] Using "------#.##", fdel$
    tmp$ = tmp$ ,(T9[5] - T9[4]) Using "------#.##",fdel$ !!difference
	call addtostr(e$,rstr$,tmp$+rdel$)
   !
  End if
else
  Print #0;"\15\** SALESMAN ";SLSM;" TOTALS **";
  Print #0; Using "------#.##"; Tab 56;T9[4];
  Print #0; Using "------#.##"; Tab 67;T9[5];
  Print #0; Using "------#.##"; Tab 80;"DIFFERENCE: ";(T9[5] - T9[4])
End if
T9[4] = 0;T9[5] = 0
if not(J8) Print #0;"\15\"
J1 = J1 + 3
If PGB Let J1 = 90
If Not(HDG) If Not(PGB) Goto L_4600
Return 
!
L_4600: Rem GET NEW SALESMAN
If Not(DETL) Return 
SLSM = K1$[1,3] \ Gosub L_3200
J1 = J1 + 1 \ Gosub L_5800
Gosub L_5910
Return 
!
L_5000: Rem PRINT LINE
	if j8
		tmp$ = SLSM Using "###",fdel$ ,S1$ , fdel$
		tmp$ = tmp$, AS2[0] Using "######",fdel$
		tmp$ = tmp$,C1$[1,27] ,fdel$
		tmp$ = tmp$, AS3[2] Using "########" ,fdel$
		tmp$ = tmp$, AS1[1] Using "##" ,fdel$
		X2 = AS3[4] \ Gosub L_7700
		tmp$ = tmp$, X$[1,8] ,fdel$
		tmp$ = tmp$, AS3[0] Using "------#.##" ,fdel$
		tmp$ = tmp$, AS3[1] Using "------#.##" ,fdel$
		!If AS1[2] = 1
		!	tmp$ = tmp$, "*",fdel$
		!else
		!	tmp$=tmp$,fdel$
		!end if
		tmp$=tmp$,as5[0] using "###.##",fdel$
		tmp$=tmp$,as5[1] using "###.##",fdel$
		tmp1$ = "TYPE: "+str$(as4[0])
		if as4[0] = 0 tmp1$ = "UNKNOWN"
		if as4[0] = 1 tmp1$ = "MANUAL ADJ"
		if as4[0] = 2 tmp1$ = "CHARGE BACK"
		if as4[0] = 3 tmp1$ = "TERMS DISC"
		if as4[0] = 4 tmp1$ = "A/R DISC: "+str$(as4[1])
		if as4[0] = 5 tmp1$ = "* CUST REBT ADJ"
		if as4[0] = 6 tmp1$ = "* CPI CHARGE "+rtrim$(cas$)
		if as4[0] = 7 tmp1$ = "* HB ADJ "+rtrim$(cas$)
		if as4[0] = 8 tmp1$ = "* CREDIT CARD ADJ"
		if as4[0] = 9 tmp1$ = "* AMALG ADJ"
		tmp$=tmp$,tmp1$,fdel$
		tmp$=tmp$,AS1[3] USING "####",fdel$
		tmp$=tmp$,J2$[1,18],fdel$
		tmp$=tmp$,AS5[2] USING "------#.##",fdel$
		tmp$=tmp$,AS5[3] USING "------#.##",fdel$
		tmp$=tmp$,AS5[4] USING "------#.##",fdel$
		tmp$=tmp$,AS5[5] USING "------#.##",fdel$
		tmp$=tmp$,AS5[2] - as5[4] USING "------#.##",fdel$
		tmp$=tmp$,AS5[3] - as5[5] USING "------#.##",fdel$
		tmp$=tmp$,cas$,fdel$
		call addtostr(e$,rstr$,tmp$+rdel$)
	else
		Print #0; Using "######"; Tab 1;AS2[0];
		Print #0; Tab 8;C1$[1,27];
		Print #0; Using "########"; Tab 36;AS3[2];
		Print #0; Using "##"; Tab 45;AS1[1];
		LET X2=AS3[4] \ GOSUB L_7700:
		Print #0; Tab 48;X$[1,8];
		Print #0; Using "------#.##"; Tab 56;AS3[0];
		Print #0; Using "------#.##"; Tab 67;AS3[1];
		If AS1[2] = 1 Print #0;"*";
		PRINT #0; using "###.##"; TAB 78;as5[0];
		PRINT #0; using "###.##"; TAB 85;as5[1];
		tmp1$ = "TYPE: "+str$(as4[0])
		if as4[0] = 0 tmp1$ = "UNKNOWN"
		if as4[0] = 1 tmp1$ = "MANUAL ADJ"
		if as4[0] = 2 tmp1$ = "CHARGE BACK"
		if as4[0] = 3 tmp1$ = "TERMS DISC"
		if as4[0] = 4 tmp1$ = "A/R DISC: "+str$(as4[1])
		if as4[0] = 5 tmp1$ = "* CUST REBT ADJ"
		if as4[0] = 6 tmp1$ = "* CPI CHARGE "+rtrim$(cas$)
		if as4[0] = 7 tmp1$ = "* HB ADJ "+rtrim$(cas$)
		if as4[0] = 8 tmp1$ = "* CREDIT CARD ADJ"
		if as4[0] = 9 tmp1$ = "* AMALG ADJ"
		print #0; TAB 92; tmp1$;
		PRINT #0; USING "####"; TAB 108;AS1[3];
		PRINT #0; TAB 113;J2$[1,18];
		PRINT #0;"\15\";
		PRINT #0; USING "------#.##"; TAB 6;AS5[2];
		PRINT #0; USING "------#.##"; TAB 17;AS5[3];
		PRINT #0; USING "------#.##"; TAB 28;AS5[4];
		PRINT #0; USING "------#.##"; TAB 39;AS5[5];
		PRINT #0; USING "------#.##"; TAB 50;AS5[2] - as5[4];
		PRINT #0; USING "------#.##"; TAB 61;AS5[3] - as5[5];
		PRINT #0; tab 72; cas$;
		Print #0;"\15\";
	End if
Return
!
L_5800: Rem HEADINGS ROUTINE
if J8 return 
!
J1 = J1 + 1 \ If J1 < J9 Return 
!!If J2 If J8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If J2 Print #0;"\14\";
J2 = J2 + 1 \ J1 = 9
If Not(J8) Print #0;"\15\";
T9$ = "" \ Call Time(T9$)
Print #0; Tab 10;J8$; Tab (64 - Len(J1$) / 2);J1$; Tab 120;"PAGE";J2
Print #0;" - 463 - ";T9$;
Print #0; Tab 54;"COMMISSION AUDIT REPORT"
Print #0;"\15\";
Print #0; Tab 1;"CUST #";
Print #0; Tab 8;"NAME";
Print #0; Tab 38;"INV/CM";
Print #0; Tab 45;"TP";
Print #0; Tab 48;"DATE";
Print #0; Tab 57;"OLD COMM$";
Print #0; Tab 68;"NEW COMM$";
PRINT #0; TAB 78;"OLD %";
print #0; TAB 85;"NEW %";
print #0; TAB 92;"ADJUSTMENT TYPE";
PRINT #0; TAB 108;"PORT";
PRINT #0; TAB 113;"USER"
PRINT #0; TAB 6;"OLD INV $";
print #0; TAB 17;"NEW INV $";
print #0; TAB 28;"OLD COST";
PRINT #0; TAB 39;"NEW COST";
PRINT #0; TAB 50;"OLD PROFIT";
PRINT #0; TAB 61;"NEW PROFIT";
PRINT #0; TAB 72;"REASON"
Print #0;" "
if HDG Goto L_5980
If Not(DETL) Goto L_5980
L_5910:  if not(j8) Print #0; Tab 2;"SALESMAN: ";SLSM;"   ";S1$
L_5980: if not(j8) Print #0;"\15\";
If J2 = 1 Let J1 = J1 + 2
Return 
!
L_7700: Rem  *X2 TO X$ V1.0
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
Return 
!
L_8000: Rem HARD COPY RUN - ASK IF UPDATE
!If Err 0 Rem
!Close #0
!If Err 0 Gosub ERR_TRAP
!Print 'CS'
!Print @33,10;'BB';"W A R N I N G";'EB';
!Print @10,12;"If you answer YES to update, the salesman mtd and ytd commission";
!Print @10,13;"will be updated with the differences on this report.";
!Print @10,14;"Please verify all figures before proceeding with this update!!";
!L_8010: Print @0,21;'CE';"DO YOU WISH TO UPDATE ";
!If EOM Print "/ CLEAR ";
!Print "THIS REPORT? (YES/N)    ";
!Input ""J2$
!Call String(1,J2$)
!If J2$ <> "YES" If J2$ <> "N" Goto L_8010
!If J2$ = "N" Goto OUTEND
!If J2$ <> "YES" Goto L_8010
!Print @0,21;"UPDATING, PLEASE WAIT . . .  ";'CE' \ Signal 3,0
UpdateComm: ! does update only on hardcopy/EOM
K1$ = " ",K1$
L_8110: Search #9,3,1;K1$,R1,E \ If E = 2 Goto L_8200
If E Let e$ = "syserrorfile 463 updatefile mode (m)=3 keyno (k)=1 r=",R1," e=",e," keyval (k$)=",k1$ \error 10000
Gosub L_3000
If AS1[2] = 1 Goto L_8110
SLSM = AS1[0]
Gosub L_3200 \ Goto L_8110
T9 = AS3[1] - AS3[0]
If AS1[1] = 6 or as1[1] = 7 or as1[1] = 9 Let T9 = 0 - T9
S1[2] = S1[2] + T9
S1[3] = S1[3] + T9
Mat Write #3,R3,118;S1;
AS1[2] = 1
Gosub L_3050
Goto L_8110
L_8200: Rem CHECK ON EOM
If Not(EOM) Goto OUTEND
Try Close #2 Else Rem
Read #1,150,16;J$[1,16];
Try Kill J$ Else Rem
Goto OUTEND
!
L_8900: Rem NO FILE
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = "THERE ARE NO ENTRIES TO AUDIT!"
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)
Call SetOutPut(e$,rstr$)
        
!!Print @0,22;'CE RB';"THERE ARE NO ENTRIES TO AUDIT!"
!!Signal 3,30
Goto OUTEND
L_8950: Rem NOT ALLOWED
ReturnStatus = 1 ! 0 ! no good (ONLY DISPLAYS IF =1 ??)    
Message$ = "END OF MONTH CANNOT RUN TO BROWSER"
Call CreateNetStatus(e$,ReturnStatus,Message$,WebStr$)     
Call AddToStr(e$,rstr$,WebStr$)
Call SetOutPut(e$,rstr$)
Goto OUTEND
!
L_9100: Rem END
HDG = 9
Gosub L_4500 ! slsm subttl
Gosub L_4000 ! rpt total
if not(j8) and EOM goto UpdateComm ! eom and hardcopy - DO UPDATE!
Goto OUTEND
!
!If J8 Print @0,23;"PRESS <CR> TO CONTINUE ";'CL'; \ Input ""J$
!For K = 0 To 20
!  T9[K] = 0
!Next K
!If J8 Goto OUTEND
!Goto L_8000
!L_9905: Print @0,Msc(34);'CL RB';"RECORD LOCKED ERROR. Enter  R: retry,  E: exit  ";
!Input ""X$ \ Print @0,Msc(34);'CL';
!If X$ = "R" Return -1
!If X$ <> "E" Goto L_9905
!Goto OUTEND
!End 
!
OUTEND: Rem EXIT
! dx close
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status seciton in, puts </page> in
End If 
!
End 
!!Print 'CS'
!!Chain "MX000C"
!!Close 
!!Chain "MX000"
!!Stop 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
! dx replace entire error routine
include "src/callmainerrnet.inc"
End 
