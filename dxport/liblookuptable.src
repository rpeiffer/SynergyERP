! -- liblookuptabel.lib
!
! supporting library of table lookup routines for programming
! 
! loadsave -w -n 100,10 -o prog/dxport/liblookuptable.lib src/liblookuptable.src
!
! 1.0 09/05/07 new
!
include "src/copyright.inc"
!
include "src/inc/filebrktbl.inc" ! break table
!
declare intrinsic sub DateToJulian,JulianToDate
!
! List of Subs and functions for Library
!
!   S  PriceBookStatusDesc  Gets Product Price Book Status Description
!   F  PriceTypeDesc$       Gets Product Price Type Description
!   S  BreakTableDesc       Gets Break Table Description
!
! ---------------------------------------------------------
External sub PriceBookStatusDesc(e$,StatusCode,StatusDesc$)
  !
  !  Gets the price book status code description
  !
  !    e$          : error message
  !    StatusCode  : price book status code
  !    StatusDesc$ : price book status description
  !
  Try
    !
	dim Desc$[32] \ Desc$="        New     Changed Deleted "
	!
	def fnb(x)=(x*8)+1 ! beg status code desc
	def fne(x)=(x*8)+8 ! end status code desc
	!
	StatusDesc$=Desc$[fnb(StatusCode),fne(StatusCode)]
  else
    include "src/callsuberr.inc"
  end try
  !
End Sub ! pricebookstatusdesc
!
! ---------------------------------------------------------
External Function PriceTypeDesc$(e$,PriceType)
  !
  !  Gets the price type description
  !
  !    e$          : error message
  !    PriceType   : product price type code
  ! returns
  !    PTDesc$     : product price type description
  !
  Try
    !
	dim PTDesc$[10]
	!
	PTDesc$=""
	if PriceType=1 let PTDesc$="Matrix"
	if PriceType=2 let PTDesc$="10 Bracket"
  else
    include "src/callsuberr.inc"
  end try
  !
End Function PTDesc$ ! PriceTypeDesc$
!
! ---------------------------------------------------------
External sub BreakTableDesc(e$,BRChan,BreakCode,BreakDesc$)
  !
  !  Gets the price book status code description
  !
  !    e$          : error message
  !    BRChan      : channel, break table
  !    BreakCode   : price book status code
  !    BreakDesc$  : price book status description
  !
  Try
    !
	dim BR. as brktbl
	!
	BreakDesc$=""
	if BreakCode<=0 let BreakDesc$="No Break Given"
	if BreakCode>chf(BRChan) let BreakDesc$="Unknown Break"
	!
	if BreakDesc$=""
      read record #BRChan,BreakCode;BR.;
	  BreakDesc$=rtrim$(BR.Desc$)
	endif
  else
    include "src/callsuberr.inc"
  end try
  !
End Sub ! BreakTableDesc
!
! ---------------------------------------------------------
