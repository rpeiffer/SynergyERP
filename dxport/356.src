! >>> Program 356
!
! description LOCATION PRINT
!
! loadsave -w -n 100,10 -o prog/dxport/356.dl4 src/356.src
!
! 1.0 mm/dd/yyyy change??
!
include "src/copyright.inc" ! dx
!
Rem BEDIT Version: 2.2 OBJECT CODE     Created: NOV 29, 2001  11:16:21
Rem /usr/acct/r97//usr/acct/txc/work/devl/mx/mx356.src (univ2) [txc] {10351}
Rem  Copyright (c) 2001 Universal Business Systems, Inc.
Rem    **** ALL CHANGES MUST BE MADE IN SOURCE!!! ****
Rem
Declare Intrinsic Sub InpBuf,String,Time
!!Option Default Dialect IRIS1
Rem MX356 NON RASL LOCATION PRINT
Rem AUTHOR : DAVE D 01/26/93
Rem LAST UPDATE : 01/24/94 - ADD RASL AS PRIMARY LOCATION FILE
Com 1%,SR,SC,J4$[60]
If Err 0 Gosub ERR_TRAP
Dim 1%,J9[2],J0,J2,J3,J4,J5,J6,J8,X1,PL1[1],RASL[5]
Dim 2%,X2,SORT,CHAN
Dim 3%,J,J1,V9[9]
Dim J$[75],J0$[10],J1$[75],J2$[40],J3$[40],J5$[75],J7$[75],J9$[75]
Dim X$[10],P9$[50],J6$[40],PLOC$[18],K2$[50],A$[156],F$[16],K3$[50]
Dim U5$[50],STPROD$[12],ENDPROD$[12],STLOC$[6],ENDLOC$[6],L1$[30]
Dim K3$[50],K2$[50],T9$[25],CNAME$[30],Z1$[21],K9$[30],SEARCH_$[50]
Dim FT$[1],S$[30],W1$[32],K4$[14],VITEMNO$[20]
!
Dim e$[500],buttonlist$[5,50],nextlist$[5,100] ! dx error handling variables
dim tmp$[800],tmp1$[100]
dim action$[30],options$[30],userid$[8],b$[200],3%,fdel$[10],rstr$[200],bsdel$[10],esdel$[10],rdel$[10]
dim Blank$[12]	  \ Blank$=" ",Blank$
dim EndParam$[12] \ EndParam$="~",EndParam$
!
E = Spc(5) \ COID = Int((E - Int(E / 16384) * 16384) / 64)
F$ = COID Using "CNTRL#"
For I = 2 To 4
  Read F \ If F = -1 Goto L_850
  If Not(Fra(F)) Read #1,88,Abs(F);F$; Else Read #1,88,F * 10000;F$;
  If F >= 0 If Not(Fra(F)) Open #I,F$
  If F < 0 Eopen #I,F$
  If Fra(F) Ropen #I,F$
L_850: Next I
Data ".1792",".0208",".1744"
Read #1,3;CNAME$;
If Err 0 Let J8 = Spc(8)
J8 = 0 \ V9[3] = Chf(0)
If Err 0 Gosub ERR_TRAP
If J8 If J8 <> 49 Goto ERR_TRAP
!!If Err 0 Gosub ERR_ESCAPE
V9[3] = 50 \ If J8 Let V9[3] = 18
PJ8 = J8
!!Window On
Mat Read #1,19,50;P9$;
RASL = 0
If P9$[41,41] = "Y" Or P9$[41,41] = "W" Let RASL = 9
!!STLOC$ = "" \ ENDLOC$ = ""
!!STPROD$ = "" \ ENDPROD$ = ""
!!STWHSE = 1 \ ENDWHSE = 99
!
Call getsession(e$,CTLC,options$,action$,userid$,intCO,intSls,fdel$,rstr$,bsdel$,esdel$,rdel$)
!
If J8 ! dx xml, setup rstr$
  !<section>
  tmp$ = bsdel$,"356",fdel$,rdel$
  Call addtostr(e$,rstr$,tmp$)
End If 
!
call dxget("STPROD",STPROD$) \ STPROD$ = UCase$(STPROD$),Blank$
call dxget("ENDPROD",ENDPROD$) \ ENDPROD$ = UCase$(ENDPROD$),EndParam$
call dxget("STWHSE",tmp$) \ if tmp$="" let stwhse=1 Else let STWHSE = tmp$
call dxget("ENDWHSE",tmp$) \ If tmp$ = "" Let ENDWHSE = 99 Else Let ENDWHSE = tmp$
call dxget("STLOC",STLOC$) \ STLOC$ = UCase$(STLOC$),Blank$
call dxget("ENDLOC",ENDLOC$) \ ENDLOC$ = UCase$(ENDLOC$),EndParam$
call dxget("SORT",tmp$) \ if tmp$="" let sort=1 else let SORT = tmp$
!
If ENDPROD$ < STPROD$ Let e$ = "Invalid ending product code, must be >= than starting product code!" \ error 10000
!
If STWHSE < 1 Or STWHSE > 99 Let e$="Invalid starting warehouse, must be between 1 and 99!" \ error 10000
If ENDWHSE < STWHSE Or ENDWHSE > 99 Let e$="Invalid ending warehouse, must be between starting warehouse and 99!" \ error 10000
!
If ENDLOC$ < STLOC$ Let e$ = "Invalid ending location, must be >= than starting location!" \ error 10000
!
If J8 = 0 !if pdf or print, new method, after edits,setouput,dxclose
  Call setoutput(e$,rstr$,2) !2 flag puts 0 status section in w/print in process msg, puts </page> in
  ! try call dxclose() else rem
End If 
!
!!L_1000: Gosub L_8000
!!L_1010: Rem ENTER PRODUCT
!!J5$ = "Enter starting  Item Code, <CR> for first 'E' to exit "
!!J0$ = "2 003015 5" \ J1$ = STPROD$[1,12]
!!Gosub L_7000 \ If J4$ = "E" Goto OUTEND
!!Gosub L_6600 \ Goto L_1010
!!STPROD$[1,12] = J$
!!Print @15,5;STPROD$[1,12];
!!J5$ = "Enter ending Item Code, <CR> for last 'E' to exit "
!!L_1100: J0$ = "2 003049 5" \ J1$ = ENDPROD$[1,12]
!!Gosub L_7000 \ If J4$ = "E" Goto OUTEND
!!Gosub L_6600 \ Goto L_1100
!!ENDPROD$[1,12] = J$
!!If ENDPROD$ = "" Let ENDPROD$ = "~",ENDPROD$
!!Print @49,5;ENDPROD$[1,12];
!!L_1200: Rem ENTER WAREHOUSE
!!J0$ = "3000021507"
!!J5$ = "Enter the starting warehouse"
!!If J1 = 0 Let J1 = 1
!!J1 = STWHSE
!!Gosub L_7000
!!If J1 > 99 Print @15,22;'RB';"INVALID  !"; \ Signal 3,20 \ Goto L_1200
!!STWHSE = J1
!!J0$ = "3000024907"
!!J5$ = "Enter the ending warehouse "
!!If J1 = 0 Let J1 = 99
!!J1 = ENDWHSE
!!Gosub L_7000
!!If J1 > 99 Print @15,22;'RB';"INVALID  !"; \ Signal 3,20 \ Goto L_1200
!!ENDWHSE = J1
!!If STWHSE > ENDWHSE Goto L_1200
!!J0$ = "2 000615 9" \ J1$ = STLOC$[1,6]
!!J5$ = "Enter the starting location,<CR> for first "
!!J1$ = STLOC$[1,6]
!!Gosub L_7000
!!STLOC$[1,6] = J$
!!Print @15,9;STLOC$;
!!J0$ = "2 000649 9" \ J1$ = STLOC$[1,6]
!!J5$ = "Enter the ending location,<CR> for first "
!!J1$ = ENDLOC$[1,6]
!!Gosub L_7000
!!ENDLOC$[1,6] = J$
!!If ENDLOC$ = "" Or ENDLOC$ = "      " Let ENDLOC$ = "~",ENDLOC$
!!Print @49,9;ENDLOC$[1,6];
!!L_1800: Rem PRINT OR NOT OT PRINT ???
!!L_1801: Print @25,16;'CL';
!!Input ""Z1$
!!SORT = Z1$
!!If SORT < 1 Or SORT > 2 Goto L_1801
!!NOT_VALID_SELECTION: Print @23,0;'CL'; \ J5$ = " ",J5$
!!J0$ = "2 00014122" \ J1$ = ""
!!Gosub L_7000
!!If J4$ = "E" Goto OUTEND
!!If J4$ = "R" Goto L_1000
!!If J4$ <> "P" Print @45,22;'RB CL'; \ Goto NOT_VALID_SELECTION
!!Print ""
!
If J8 
  If SORT = 1
    tmp$ = "VENDOR ITEM #",fdel$,"PRODUCT CODE",fdel$
    tmp$ = tmp$,"DESCRIPTION 1",fdel$,"DESCRIPTION 2",fdel$
    tmp$ = tmp$, "WHSE",fdel$,"LOCATION",fdel$,"FIELD 1",fdel$
  End If 
  If SORT = 2
    tmp$ = "VENDOR ITEM #",fdel$
    tmp$ = tmp$, "LOCATION",fdel$,"CODE",fdel$
    tmp$ = tmp$, "DESCRIPTION 1",fdel$,"DESCRIPTION 2",fdel$
    tmp$ = tmp$, "WHSE",fdel$,"FIELD 1",fdel$
  End If 
  call addtostr(e$,rstr$,tmp$+rdel$)
End if
!
If V9[0] If Not(PJ8) Print #0;"\14\";
V9[0] = 0;V9[1] = 99
!!Window Off
FT$[1] = "Y"
If SORT = 2 Gosub L_10000 \ CHAN = 9 \ SEARCH_$ = "" \ Goto L_1935
If SORT = 1
  K3$ = " ",K3$
  CHAN = 3
  K3$[1,12] = STPROD$[1,12]
  SEARCH_$ = K3$
End If 
L_1930: Rem * SEARCH #3,3,1;K3$,R3,E
!!Print @5,22;'CL';"PRINTING PLEASE WAIT ..  .   .    .     .		."
L_1935: 
Search #CHAN,3,1;SEARCH_$,R3,E
If E Goto L_8900
Mat Read #3,R3,0;PLOC$;
Mat Read #3,R3,18;PL1;
If STPROD$[1,12] > PLOC$[1,12] Goto L_1935
If ENDPROD$[1,12] < PLOC$[1,12] Goto L_8900
If STWHSE > PL1[0] Goto L_1935
If ENDWHSE < PL1[0] Goto L_1935
If STLOC$[1,6] > PLOC$[13,18] Goto L_1935
If ENDLOC$[1,6] < PLOC$[13,18] Goto L_1935
If P9$[41,41] = "W" Call "CHKWRASL",PL1[0],RASL[]
Gosub L_6000
Gosub L_6300
V9[1] = V9[1] + 1
If V9[1] > V9[3] Gosub L_5800
Gosub L_5000
Goto L_1935
L_5000: Rem PRINT LINE
!
If J8
  If SORT = 1
    tmp$ = rtrim$(VITEMNO$[1,20]),fdel$ !item
    tmp$ = tmp$, rtrim$(PLOC$[1,12]),fdel$ !product code
    tmp$ = tmp$, rtrim$(A$[9,38]),fdel$,rtrim$(A$[63,92]),fdel$ !desc 1 desc 2
    tmp$ = tmp$, PL1[0] Using "##",fdel$  !whse
    tmp$ = tmp$, rtrim$(PLOC$[13,18]),fdel$ !loc
    If Not(RASL)
      If PL1[1] Let tmp$ = tmp$, "PERMANENT" 
	Else
	  If PL1[1] Let tmp$ = tmp$, "PRIMARY" 
    End If
	tmp$=tmp$,fdel$
  End If 
  If SORT = 2
    tmp$ = rtrim$(VITEMNO$[1,20]),fdel$ !item
    tmp$ = tmp$, PLOC$[13,18],fdel$ !loc
    tmp$ = tmp$, rtrim$(PLOC$[1,12]),fdel$ !prod code
    tmp$ = tmp$, rtrim$(A$[9,38]),fdel$,rtrim$(A$[63,92]),fdel$ !desc1 desc2
    tmp$ = tmp$, PL1[0] Using "##",fdel$ !whse
    If Not(RASL)
      If PL1[1] Let tmp$ = tmp$, "PERMANENT" 
    Else
      If PL1[1] Let tmp$ = tmp$, "PRIMARY" 
    End If 
	tmp$=tmp$,fdel$
  End If 
  call addtostr(e$,rstr$,tmp$+rdel$)
  Return 
End If
!
If SORT = 1
  Print #0; Tab 5;PLOC$[1,12];
  Print #0; Tab 20;A$[9,38];" ";A$[63,92];
  Print #0; Using "##"; Tab 83;PL1[0];
  Print #0; Tab 88;PLOC$[13,18];
  If Not(RASL)
    If PL1[1] Print #0; Tab 98;"PERMANENT "; Else Print #0; Tab 98;"          ";
  End If 
  If RASL
    If PL1[1] Print #0; Tab 98;"PRIMARY   "; Else Print #0; Tab 98;"          ";
  End If 
  Print #0; Tab 110;VITEMNO$[1,20];
  Print #0;""
End If 
If SORT = 2
  Print #0; Tab 5;PLOC$[13,18];
  Print #0; Tab 15;PLOC$[1,12];
  Print #0; Tab 30;A$[9,38];" ";A$[63,92];
  Print #0; Using "##"; Tab 93;PL1[0];
  If Not(RASL)
    If PL1[1] Print #0; Tab 98;"PERMANENT "; Else Print #0; Tab 98;"          ";
  End If 
  If RASL
    If PL1[1] Print #0; Tab 98;"PRIMARY   "; Else Print #0; Tab 98;"          ";
  End If 
  Print #0; Tab 110;VITEMNO$[1,20];
  Print #0;""
End If 
Return 
L_5800: Rem "===================================================heading
!
If J8 Return
!
!!If V9[0] If PJ8 Input @0,23;"PRESS <CR> TO CONTINUE "J$ \ Print 'CS';
If V9[0] If Not(PJ8) Print #0;"\14\";
V9[0] = V9[0] + 1 \ V9[1] = 6
If Not(PJ8) Print #0;""
T9$ = "" \ Call Time(T9$)
Print #0; Tab (64 - Len(J1$) / 2);CNAME$; Tab 120;"PAGE ";V9[0]
Print #0;" - 356 - ";T9$;
Print #0; Tab 48;"P R O D U C T   L O C A T I O N S"
If SORT = 1
  Print #0; Tab 48;"  B Y   P R O D U C T   C O D E"
  Print #0;
  Print #0; Tab 5;"CODE"; Tab 20;"DESCRIPTION ";
  Print #0; Tab 83;"WHSE "; Tab 88;"LOCATION"; Tab 110;"VENDOR ITEM #"
  Print #0;""
End If 
If SORT = 2
  Print #0;; Tab 48;"      B Y   L O C A T I O N"
  Print #0;
  Print #0; Tab 5;"LOCATION"; Tab 15;"CODE";
  Print #0; Tab 30;"DESCRIPTION"; Tab 93;"WHSE"; Tab 110;"VENDOR ITEM #"
  Print #0;""
End If 
Return
L_6000: Rem read prod file
A$ = " ",A$
K2$ = " ",K2$
K2$[1,12] = PLOC$[1,12]
Search #2,2,1;K2$,R2,E
If E
  A$[9] = "PRODUCT CODE NOT ON FILE !!!!!!"
  Return 
End If 
Mat Read #2,R2,0;A$;
Return 
L_6300: Rem get vendor item # from prodwhse file
K4$ = " ",K4$;VITEMNO$ = " ",VITEMNO$
K4$[1,12] = PLOC$[1,12];K4$[13,14] = PL1[0] Using "##"
Search #4,2,1;K4$,R4,E
If E
  VITEMNO$[1,20] = A$[93,112]
  Goto L_6400
End If 
Mat Read #4,R4;W1$;
VITEMNO$[1,20] = W1$[13,32]
L_6400: If VITEMNO$[1,20] = "                    " Let VITEMNO$[1,20] = A$[93,112]
Return 
!!L_6600: Rem SWAP
!!If J4$ = "" Let J$ = "" \ Return 1
!!If J4$[1,1] >= "0" If J4$[1,1] <= "9" Return 1
!!If J4$[1,1] >= "A" If J4$[1,1] <= "Z" Return 1
!!Call "MXPROD5",J4$,WH,CUST
!!Return 
!!L_7000: Rem  INPUT SUBROUTINE  V2.2  4/84  1/91  CHAR ATTRB  G.DOSCHER
!!J0 = J0$[1,1]
!!J6 = J0$[2,2]
!!J2 = J0$[3,4]
!!J3 = J0$[5,6]
!!J4 = J0$[7,8]
!!J5 = J0$[9,10]
!!If J0 < 3 Let J2$ = " ",J2$
!!If J1$ = "" Let J1$[1,J3] = " ",J1$
!!If J0 <> 3 If J0 <> 4 Goto L_7070
!!If J0 = 3 Let J2$ = "#",J2$
!!If J0 = 4 Let J2$ = "-",J2$
!!J2$[J3] = "#","" \ If J6 Let J2$[Len(J2$) - J6,Len(J2$) - J6] = "."
!!L_7070: J1$[J3 + 1] = ""
!!If J0 < 3 Goto L_7105
!!If J0 = 6 Let J1$ = "N" \ J3 = 1 \ If J1 Let J1$ = "Y"
!!If J0 = 6 Goto L_7105
!!If J0 <> 5 Goto L_7100
!!J9$ = J1 + 10 ^ 6 Using "#######" \ J3 = 6
!!J1$ = J9$[4,7],J9$[2,3],"  " \ Goto L_7105
!!L_7100: J1$ = J1 Using J2$[1,J3] \ J1$[J3 + 1] = ""
!!If Len(J5$) > Msc(33) - 2 Let J5$[Msc(33) - 2] = ""
!!L_7105: If J5 < Msc(34) - 1 Print @0,Msc(34) - 1; Tab (Msc(33) / 2 - Len(J5$) / 2);J5$;'CL';
!!Print @J4,J5;'BU';J1$[1,J3]; Tab (J4 + J3);'EU';" "; \ If J0 = 5 Print "  ";
!!Print @J4,J5;'BU'; \ Input Len 16384 + J3;""J4$
!!Print @0,Msc(34) - 1;'CL';@J4 - 1,J5;'EU';@J4 + J3,J5;'EU';
!!If Len(J4$) <= J3 Goto L_7130
!!J7$ = "TOO LONG !" \ Gosub L_7600 \ Goto L_7105
!!L_7130: J9$ = J4$ \ If Len(J9$) Goto L_7145
!!If J0$[3,4] = "00" Let J9$ = J1$ \ Goto L_7145
!!J7$ = "FIELD MUST BE ENTERED !" \ Gosub L_7600 \ Goto L_7105
!!L_7145: For J8 = 1 To Len(J9$)
!!  If J9$[J8,J8] >= " " If J9$[J8,J8] <= "~" Next J8 \ Goto L_7160
!!J7$ = "ILLEGAL CHARACTER DETECTED IN FIELD!" \ Gosub L_7600 \ Goto L_7105
!!L_7160: On J0 Goto L_7165,L_7165,L_7185,L_7185,L_7265,L_7330 \ Stop 
!!L_7165: J$ = J0$[2,2],J$
!!If J0 = 1 Let J$[J3 - Len(J9$) + 1] = J9$
!!If J0 = 2 Let J$[1,Len(J9$)] = J9$
!!Goto L_7345
!!L_7185: J9 = 0;J9[1] = 0 \ For J8 = 1 To Len(J9$)
!!  If J0 = 4 If J8 = 1 If J9$[1,1] = "-" Goto L_7235
!!  If J0 = 4 If J8 = 1 If J9$[1,1] = "+" Goto L_7235
!!  If J9$[J8,J8] > "/" If J9$[J8,J8] < ":" Goto L_7230
!!  If J9$[J8,J8] = " " Goto L_7235
!!  If J8 <> 1 Or Len(J0$) < 11 Goto L_7210
!!  J7$ = "" \ Let J7$ = J0$[10] To J9$[J8,J8] : J7 \ If J7 Goto L_7235
!!L_7210: If J9$[J8,J8] <> "." Goto L_7250
!!  If Not(J6) Let J7$ = "NO DECIMAL POINT ALLOWED IN FIELD !" \ Goto L_7260
!!  If J9 Goto L_7250
!!  J9 = 1
!!L_7230: If J9 Let J9 = J9 + 1
!!  If Not(J9) Let J9[1] = J9[1] + 1
!!L_7235: Next J8
!!If J9 - 2 > J6 Let J7$ = "TOO MANY DECIMAL PLACES FOR FIELD !" \ Goto L_7260
!!L_7242: If J6 If J9[1] > (J3 - J6 - 1) Let J7$ = "TOO MANY INTEGERS FOR FIELD !" \ Goto L_7260
!!If J0 = 4 If J6 If J9[1] > (J3 - J6 - 2) Let J9[1] = 99 \ Goto L_7242
!!J1 = J9$ \ J$ = J1 Using J2$ \ J$[J3 + 1] = "" \ Goto L_7345
!!L_7250: J7$ = "ILLEGAL NUMBER ENTERED FOR FIELD !"
!!If J0 = 3 If J9$[1,1] = "-" Let J7$ = "NO SIGN ALLOWED FOR FIELD !"
!!L_7260: Gosub L_7600 \ Goto L_7105
!!L_7265: If Len(J9$) <> 6 If J9$[7,8] <> "  " Goto L_7325
!!J9[0] = J9$[1,2] \ J9[1] = J9$[3,4] \ J9[2] = J9$[5,6]
!!If J9 = 0 If J9[1] = 0 If J9[2] = 0 Goto L_7315
!!If J9[1] < 1 Goto L_7325
!!On J9 Goto L_7290,L_7300,L_7290,L_7285,L_7290,L_7285
!!On J9 - 6 Goto L_7290,L_7290,L_7285,L_7290,L_7285,L_7290
!!Goto L_7325
!!L_7285: If J9[1] > 30 Goto L_7325
!!L_7290: If J9[1] > 31 Goto L_7325
!!Goto L_7315
!!L_7300: If J9[1] > 29 Goto L_7325
!!If Not(Fra(J9[2] / 4)) Goto L_7315
!!If J9[1] > 28 Goto L_7325
!!L_7315: J1 = J9[2] * 10 ^ 4 + J9 * 10 ^ 2 + J9[1] \ X2 = J1 \ Gosub L_7700
!!J$ = X$ \ J3 = 8 \ Goto L_7345
!!L_7325: J7$ = "INVALID DATE !" \ Gosub L_7600 \ Goto L_7105
!!L_7330: If J9$ = "N" Let J1 = 0 \ J$ = "N" \ Goto L_7345
!!If J9$ = "Y" Let J1 = 1 \ J$ = "Y" \ Goto L_7345
!!J7$ = "RESPONSE MUST BE ''Y'' OR ''N'' !" \ Gosub L_7600 \ Goto L_7105
!!L_7345: J$[J3 + 1] = "" \ Print @J4,J5;J$;" "; \ Return 
!!L_7600: If Len(J7$) > Msc(33) - 2 Let J7$[Msc(33) - 2] = ""
!!Print @0,Msc(34) - 1;'BR'; Tab (Msc(33) / 2 - Len(J7$) / 2);J7$;
!!Print Tab Msc(33) - 2;'ER RB'; \ Signal 3,20
!!Print @0,Msc(34) - 1;'CL'; \ Return 
L_7700: Rem  *UNPACK DATE  X2 TO X$      V1.0  4/04/84  G.DOSCHER
X$ = " ",X$ \ X$[10] = ""
X$[1,3] = Int(X2 / 10 ^ 2 - Int(X2 / 10 ^ 4) * 10 ^ 2) + 10 ^ 2 Using "###"
X$[4,6] = Fra(X2 / 10 ^ 2) * 10 ^ 2 + 10 ^ 2 Using "###"
X$[7,9] = Int(X2 / 10 ^ 4) + 10 ^ 2 Using "###"
X$[4,4] = "/" \ X$[7,7] = "/" \ X$ = X$[2]
If Not(X2) Let X$ = "        "
Return 
!!X2 = X$[4,5] \ X1 = X$[1,2] \ X2 = X2 + X1 * 10 ^ 2
!!X1 = X$[7,8] \ X2 = X2 + X1 * 10 ^ 4
!!Return 
!!L_8000: Rem DISPLAY INPUT SCREEN
!!Print @0,0;'CS';
!!If Not(RASL) Print @40,1;"NON RASL"; Else Print @40,1;"  RASL  ";
!!Print @35,2;"LOCATION PRINT";
!!Print @15,4;"STARTING";@49,4;"ENDING";
!!Print @1,5;"PRODUCT";
!!Print @1,7;"WAREHOUSE";
!!Print @1,9;"LOCATION ";
!!Print @15,12;"SORT BY:  1.PRODUCT CODE"
!!Print @15,13;"          2.LOCATION    "
!!Print @5,22;"ENTER (P)RINT OR (R)ESELECT, (E)XIT ";
!!Return 
L_8900: Rem END OF LOOP
!!If PJ8 Input @0,23;"PRESS <CR> TO CONTINUE "J$
!!Goto L_9010
Goto OUTEND
!
L_10000: Rem BEGIN SORTING RECORDS
!!Print @5,22;'CL';"SORTING PLEASE WAIT ..  .   .    .     ."
L1$ = " ",L1$
L1$[1,12] = STPROD$[1,12]
L_10015: Search #3,3,1;L1$,R3,E
If E Return 
K9$ = "",K9$
Mat Read #3,R3,0;PLOC$;
Mat Read #3,R3,18;PL1;
If STPROD$[1,12] > PLOC$[1,12] Goto L_10015
If ENDPROD$[1,12] < PLOC$[1,12] Return 
If STWHSE > PL1[0] Goto L_10015
If ENDWHSE < PL1[0] Goto L_10015
If STLOC$[1,6] > PLOC$[13,18] Goto L_10015
If ENDLOC$[1,6] < PLOC$[13,18] Goto L_10015
K9$[1,6] = PLOC$[13,18] \ K9$[7,18] = PLOC$[1,12]
K9$[19,20] = PL1[0] Using "##"
Search #9,4,1;K9$,R3,E !!\ If E Gosub ERR_SEARCH
If E Let e$ = "syserrorfile 356 sortfile mode (m)=4 keyno (k)=1 r=",R3," e=",e," keyval (k$)=",K9$ \ error 10000
If FT$[1] = "Y" Let S$ = K9$ \ FT$[1] = "N"
Goto L_10015
!
OUTEND: Rem EXIT
!!L_9010: !!Close 
!!Chain "MX000"
!!Stop 
!
If j8 ! dx xml
  Call addtostr(e$,rstr$,esdel$) !end section
  !
  External Lib "libgeneral.lib"
  Declare External Sub XMLtoExcel
  Call XMLtoExcel(e$,"356.txt",rstr$)
  !
  Call setoutput(e$,rstr$,1) !1 flag puts 0 status section in, puts </page> in
End If 
!
! try call dxclose() else rem
End 
!
Rem {begin rtn.error.s}
ERR_TRAP: Rem *Error routine (escape trap)   V3.1 8/94 G.DOSCHER/REK
!
include "src/callmainerrnet.inc"
End
!
